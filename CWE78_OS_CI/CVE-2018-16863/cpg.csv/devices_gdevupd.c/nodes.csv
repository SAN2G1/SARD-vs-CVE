command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2550193	File	data/converged/CVE-2018-16863_ghostpdl/devices_gdevupd.c								
ANR	2550194	DeclStmt									
ANR	2550195	Decl							struct upd_s	struct upd_s	upd_t
ANR	2550196	Decl							struct upd_s	struct upd_s *	upd_p
ANR	2550197	DeclStmt									
ANR	2550198	Decl							const upd_t	const upd_t *	upd_pc
ANR	2550199	ClassDef	upd_device_s	111:8:4461:4828							
ANR	2550200	DeclStmt									
ANR	2550201	Decl							gs_param_string	gs_param_string	upd_version
ANR	2550202	DeclStmt									
ANR	2550203	Decl							upd_p	upd_p	upd
ANR	2550204	DeclStmt									
ANR	2550205	Decl							upd_device_s	upd_device_s	upd_device
ANR	2550206	DeclStmt									
ANR	2550207	Decl							int	int ( upd_device * udev )	upd_procs_map
ANR	2550208	DeclStmt									
ANR	2550209	Decl							gx_device_procs	gx_device_procs	upd_procs
ANR	2550210	DeclStmt									
ANR	2550211	Decl							upd_device far_data	upd_device far_data	gs_uniprint_device
ANR	2550212	ClassDef	updcmap_s	609:8:28476:28958							
ANR	2550213	DeclStmt									
ANR	2550214	Decl							gx_color_value	gx_color_value *	code
ANR	2550215	DeclStmt									
ANR	2550216	Decl							uint32_t	uint32_t	bitmsk
ANR	2550217	DeclStmt									
ANR	2550218	Decl							int	int	bitshf
ANR	2550219	DeclStmt									
ANR	2550220	Decl							int	int	xfer
ANR	2550221	DeclStmt									
ANR	2550222	Decl							int	int	bits
ANR	2550223	DeclStmt									
ANR	2550224	Decl							int	int	comp
ANR	2550225	DeclStmt									
ANR	2550226	Decl							bool	bool	rise
ANR	2550227	DeclStmt									
ANR	2550228	Decl							updcmap_s	updcmap_s	updcmap_t
ANR	2550229	Decl							updcmap_s	updcmap_s *	updcmap_p
ANR	2550230	DeclStmt									
ANR	2550231	Decl							const updcmap_t	const updcmap_t *	updcmap_pc
ANR	2550232	ClassDef	updcomp_s	624:8:29090:29681							
ANR	2550233	DeclStmt									
ANR	2550234	Decl							int32_t	int32_t	offset
ANR	2550235	DeclStmt									
ANR	2550236	Decl							int32_t	int32_t	scale
ANR	2550237	DeclStmt									
ANR	2550238	Decl							int32_t	int32_t	threshold
ANR	2550239	DeclStmt									
ANR	2550240	Decl							int32_t	int32_t	spotsize
ANR	2550241	DeclStmt									
ANR	2550242	Decl							uint32_t	uint32_t	bitmsk
ANR	2550243	DeclStmt									
ANR	2550244	Decl							int	int	bitshf
ANR	2550245	DeclStmt									
ANR	2550246	Decl							int	int	bits
ANR	2550247	DeclStmt									
ANR	2550248	Decl							int	int	cmap
ANR	2550249	DeclStmt									
ANR	2550250	Decl							updcomp_s	updcomp_s	updcomp_t
ANR	2550251	Decl							updcomp_s	updcomp_s *	updcomp_p
ANR	2550252	ClassDef	updscan_s	637:8:29783:30046							
ANR	2550253	DeclStmt									
ANR	2550254	Decl							byte	byte *	bytes
ANR	2550255	DeclStmt									
ANR	2550256	Decl							int	int *	xbegin
ANR	2550257	DeclStmt									
ANR	2550258	Decl							int	int *	xend
ANR	2550259	DeclStmt									
ANR	2550260	Decl							updscan_s	updscan_s	updscan_t
ANR	2550261	Decl							updscan_s	updscan_s *	updscan_p
ANR	2550262	ClassDef	upd_s	652:0:30406:33381							
ANR	2550263	DeclStmt									
ANR	2550264	Decl							int	int *	choice
ANR	2550265	DeclStmt									
ANR	2550266	Decl							int	int *	ints
ANR	2550267	DeclStmt									
ANR	2550268	Decl							gs_param_int_array	gs_param_int_array *	int_a
ANR	2550269	DeclStmt									
ANR	2550270	Decl							gs_param_string	gs_param_string *	strings
ANR	2550271	DeclStmt									
ANR	2550272	Decl							gs_param_string_array	gs_param_string_array *	string_a
ANR	2550273	DeclStmt									
ANR	2550274	Decl							gs_param_float_array	gs_param_float_array *	float_a
ANR	2550275	DeclStmt									
ANR	2550276	Decl							updcmap_t	updcmap_t [ UPD_CMAP_MAX ]	cmap
ANR	2550277	DeclStmt									
ANR	2550278	Decl							byte	byte *	gsbuf
ANR	2550279	DeclStmt									
ANR	2550280	Decl							byte	byte *	gsscan
ANR	2550281	DeclStmt									
ANR	2550282	Decl							byte	byte *	pxlptr
ANR	2550283	DeclStmt									
ANR	2550284	Decl							updscan_p	updscan_p *	scnbuf
ANR	2550285	DeclStmt									
ANR	2550286	Decl							int32_t	int32_t *	valbuf
ANR	2550287	DeclStmt									
ANR	2550288	Decl							void	void * [ UPD_VALPTR_MAX ]	valptr
ANR	2550289	DeclStmt									
ANR	2550290	Decl							byte	byte *	outbuf
ANR	2550291	DeclStmt									
ANR	2550292	Decl							uint32_t	uint32_t	flags
ANR	2550293	DeclStmt									
ANR	2550294	Decl							int	int	pdwidth
ANR	2550295	DeclStmt									
ANR	2550296	Decl							int	int	pdheight
ANR	2550297	DeclStmt									
ANR	2550298	Decl							uint	uint	ngsbuf
ANR	2550299	DeclStmt									
ANR	2550300	Decl							int	int	gswidth
ANR	2550301	DeclStmt									
ANR	2550302	Decl							int	int	gsheight
ANR	2550303	DeclStmt									
ANR	2550304	Decl							int	int	rwidth
ANR	2550305	DeclStmt									
ANR	2550306	Decl							int	int	pwidth
ANR	2550307	DeclStmt									
ANR	2550308	Decl							int	int	pheight
ANR	2550309	DeclStmt									
ANR	2550310	Decl							int	int	ncomp
ANR	2550311	DeclStmt									
ANR	2550312	Decl							int	int	nmap
ANR	2550313	DeclStmt									
ANR	2550314	Decl							uint	uint	nvalbuf
ANR	2550315	DeclStmt									
ANR	2550316	Decl							int	int	nscnbuf
ANR	2550317	DeclStmt									
ANR	2550318	Decl							int	int	ocomp
ANR	2550319	DeclStmt									
ANR	2550320	Decl							int	int	nbytes
ANR	2550321	DeclStmt									
ANR	2550322	Decl							int	int	nlimits
ANR	2550323	DeclStmt									
ANR	2550324	Decl							int	int	scnmsk
ANR	2550325	DeclStmt									
ANR	2550326	Decl							uint	uint	noutbuf
ANR	2550327	DeclStmt									
ANR	2550328	Decl							int	int	ixpass
ANR	2550329	DeclStmt									
ANR	2550330	Decl							int	int	ipass
ANR	2550331	DeclStmt									
ANR	2550332	Decl							int	int	icomp
ANR	2550333	DeclStmt									
ANR	2550334	Decl							int	int	lf
ANR	2550335	DeclStmt									
ANR	2550336	Decl							int	int	xprinter
ANR	2550337	DeclStmt									
ANR	2550338	Decl							int	int	yscan
ANR	2550339	DeclStmt									
ANR	2550340	Decl							int	int	yprinter
ANR	2550341	DeclStmt									
ANR	2550342	Decl							int	int	yscnbuf
ANR	2550343	DeclStmt									
ANR	2550344	Decl							const gs_memory_t	const gs_memory_t *	memory
ANR	2550345	DeclStmt									
ANR	2550346	Decl							int	int ( upd_device * udev )	upd_open_map
ANR	2550347	DeclStmt									
ANR	2550348	Decl							int	int ( upd_device * udev )	upd_close_map
ANR	2550349	DeclStmt									
ANR	2550350	Decl							uint32_t	"uint32_t ( upd_pc , int , gx_color_value )"	upd_truncate
ANR	2550351	Function	upd_expand	761:0:35483:35973							
ANR	2550352	FunctionDef	"upd_expand (upd_pc upd , int i , gx_color_index ci0)"		2550351	0					
ANR	2550353	CompoundStatement		763:0:35560:35973	2550351	0					
ANR	2550354	IdentifierDeclStatement	const updcmap_pc cmap = upd -> cmap + i ;	764:3:35565:35602	2550351	0	True				
ANR	2550355	IdentifierDecl	cmap = upd -> cmap + i		2550351	0					
ANR	2550356	IdentifierDeclType	const updcmap_pc		2550351	0					
ANR	2550357	Identifier	cmap		2550351	1					
ANR	2550358	AssignmentExpression	cmap = upd -> cmap + i		2550351	2		=			
ANR	2550359	Identifier	cmap		2550351	0					
ANR	2550360	AdditiveExpression	upd -> cmap + i		2550351	1		+			
ANR	2550361	PtrMemberAccess	upd -> cmap		2550351	0					
ANR	2550362	Identifier	upd		2550351	0					
ANR	2550363	Identifier	cmap		2550351	1					
ANR	2550364	Identifier	i		2550351	1					
ANR	2550365	IdentifierDeclStatement	uint32_t ci = ( uint32_t ) ( ( ci0 >> cmap -> bitshf ) & cmap -> bitmsk ) ;	765:3:35633:35695	2550351	1	True				
ANR	2550366	IdentifierDecl	ci = ( uint32_t ) ( ( ci0 >> cmap -> bitshf ) & cmap -> bitmsk )		2550351	0					
ANR	2550367	IdentifierDeclType	uint32_t		2550351	0					
ANR	2550368	Identifier	ci		2550351	1					
ANR	2550369	AssignmentExpression	ci = ( uint32_t ) ( ( ci0 >> cmap -> bitshf ) & cmap -> bitmsk )		2550351	2		=			
ANR	2550370	Identifier	ci		2550351	0					
ANR	2550371	CastExpression	( uint32_t ) ( ( ci0 >> cmap -> bitshf ) & cmap -> bitmsk )		2550351	1					
ANR	2550372	CastTarget	uint32_t		2550351	0					
ANR	2550373	BitAndExpression	( ci0 >> cmap -> bitshf ) & cmap -> bitmsk		2550351	1		&			
ANR	2550374	ShiftExpression	ci0 >> cmap -> bitshf		2550351	0		>>			
ANR	2550375	Identifier	ci0		2550351	0					
ANR	2550376	PtrMemberAccess	cmap -> bitshf		2550351	1					
ANR	2550377	Identifier	cmap		2550351	0					
ANR	2550378	Identifier	bitshf		2550351	1					
ANR	2550379	PtrMemberAccess	cmap -> bitmsk		2550351	1					
ANR	2550380	Identifier	cmap		2550351	0					
ANR	2550381	Identifier	bitmsk		2550351	1					
ANR	2550382	IfStatement	if ( ! cmap -> rise )		2550351	2					
ANR	2550383	Condition	! cmap -> rise	767:6:35732:35742	2550351	0	True				
ANR	2550384	UnaryOperationExpression	! cmap -> rise		2550351	0					
ANR	2550385	UnaryOperator	!		2550351	0					
ANR	2550386	PtrMemberAccess	cmap -> rise		2550351	1					
ANR	2550387	Identifier	cmap		2550351	0					
ANR	2550388	Identifier	rise		2550351	1					
ANR	2550389	ExpressionStatement	ci = cmap -> bitmsk - ci	767:19:35745:35767	2550351	1	True				
ANR	2550390	AssignmentExpression	ci = cmap -> bitmsk - ci		2550351	0		=			
ANR	2550391	Identifier	ci		2550351	0					
ANR	2550392	AdditiveExpression	cmap -> bitmsk - ci		2550351	1		-			
ANR	2550393	PtrMemberAccess	cmap -> bitmsk		2550351	0					
ANR	2550394	Identifier	cmap		2550351	0					
ANR	2550395	Identifier	bitmsk		2550351	1					
ANR	2550396	Identifier	ci		2550351	1					
ANR	2550397	IfStatement	if ( gx_color_value_bits > cmap -> bits )		2550351	3					
ANR	2550398	Condition	gx_color_value_bits > cmap -> bits	769:6:35848:35879	2550351	0	True				
ANR	2550399	RelationalExpression	gx_color_value_bits > cmap -> bits		2550351	0		>			
ANR	2550400	Identifier	gx_color_value_bits		2550351	0					
ANR	2550401	PtrMemberAccess	cmap -> bits		2550351	1					
ANR	2550402	Identifier	cmap		2550351	0					
ANR	2550403	Identifier	bits		2550351	1					
ANR	2550404	ReturnStatement	return cmap -> code [ ci ] ;	769:40:35882:35903	2550351	1	True				
ANR	2550405	ArrayIndexing	cmap -> code [ ci ]		2550351	0					
ANR	2550406	PtrMemberAccess	cmap -> code		2550351	0					
ANR	2550407	Identifier	cmap		2550351	0					
ANR	2550408	Identifier	code		2550351	1					
ANR	2550409	Identifier	ci		2550351	1					
ANR	2550410	ElseStatement	else		2550351	0					
ANR	2550411	ReturnStatement	return ( gx_color_value ) ci ;	770:40:35945:35971	2550351	0	True				
ANR	2550412	CastExpression	( gx_color_value ) ci		2550351	0					
ANR	2550413	CastTarget	gx_color_value		2550351	0					
ANR	2550414	Identifier	ci		2550351	1					
ANR	2550415	ReturnType	static inline gx_color_value		2550351	1					
ANR	2550416	Identifier	upd_expand		2550351	2					
ANR	2550417	ParameterList	"upd_pc upd , int i , gx_color_index ci0"		2550351	3					
ANR	2550418	Parameter	upd_pc upd	762:11:35523:35532	2550351	0	True				
ANR	2550419	ParameterType	upd_pc		2550351	0					
ANR	2550420	Identifier	upd		2550351	1					
ANR	2550421	Parameter	int i	762:22:35534:35538	2550351	1	True				
ANR	2550422	ParameterType	int		2550351	0					
ANR	2550423	Identifier	i		2550351	1					
ANR	2550424	Parameter	gx_color_index ci0	762:28:35540:35557	2550351	2	True				
ANR	2550425	ParameterType	gx_color_index		2550351	0					
ANR	2550426	Identifier	ci0		2550351	1					
ANR	2550427	CFGEntryNode	ENTRY		2550351		True				
ANR	2550428	CFGExitNode	EXIT		2550351		True				
ANR	2550429	Symbol	ci		2550351						
ANR	2550430	Symbol	cmap -> code		2550351						
ANR	2550431	Symbol	cmap -> bitshf		2550351						
ANR	2550432	Symbol	upd		2550351						
ANR	2550433	Symbol	i		2550351						
ANR	2550434	Symbol	ci0		2550351						
ANR	2550435	Symbol	cmap -> bitmsk		2550351						
ANR	2550436	Symbol	cmap -> rise		2550351						
ANR	2550437	Symbol	upd -> cmap		2550351						
ANR	2550438	Symbol	* ci		2550351						
ANR	2550439	Symbol	* * cmap		2550351						
ANR	2550440	Symbol	* cmap		2550351						
ANR	2550441	Symbol	* upd		2550351						
ANR	2550442	Symbol	cmap		2550351						
ANR	2550443	Symbol	* cmap -> code		2550351						
ANR	2550444	Symbol	cmap -> bits		2550351						
ANR	2550445	Symbol	gx_color_value_bits		2550351						
ANR	2550446	DeclStmt									
ANR	2550447	Decl							void	void ( upd_device * udev )	upd_open_render
ANR	2550448	DeclStmt									
ANR	2550449	Decl							void	void ( upd_device * udev )	upd_close_render
ANR	2550450	DeclStmt									
ANR	2550451	Decl							void	void ( upd_device * udev )	upd_open_fscomp
ANR	2550452	DeclStmt									
ANR	2550453	Decl							int	int ( upd_p upd )	upd_fscomp
ANR	2550454	DeclStmt									
ANR	2550455	Decl							void	void ( upd_device * udev )	upd_close_fscomp
ANR	2550456	DeclStmt									
ANR	2550457	Decl							void	void ( upd_device * udev )	upd_open_fscmyk
ANR	2550458	DeclStmt									
ANR	2550459	Decl							int	int ( upd_p upd )	upd_fscmyk
ANR	2550460	DeclStmt									
ANR	2550461	Decl							void	void ( upd_device * udev )	upd_open_fscmy_k
ANR	2550462	DeclStmt									
ANR	2550463	Decl							int	int ( upd_p upd )	upd_fscmy_k
ANR	2550464	DeclStmt									
ANR	2550465	Decl							int	int ( upd_device * udev )	upd_open_writer
ANR	2550466	DeclStmt									
ANR	2550467	Decl							void	void ( upd_device * udev )	upd_close_writer
ANR	2550468	DeclStmt									
ANR	2550469	Decl							void	void ( int sig )	upd_signal_handler
ANR	2550470	DeclStmt									
ANR	2550471	Decl							int	int ( upd_device * udev )	upd_open_rascomp
ANR	2550472	DeclStmt									
ANR	2550473	Decl							int	"int ( upd_p upd , FILE * out )"	upd_start_rascomp
ANR	2550474	DeclStmt									
ANR	2550475	Decl							int	"int ( upd_p upd , FILE * out )"	upd_rascomp
ANR	2550476	DeclStmt									
ANR	2550477	Decl							void	"void ( upd_p upd , bool check )"	upd_limits
ANR	2550478	DeclStmt									
ANR	2550479	Decl							int	int ( upd_device * udev )	upd_open_wrtescp
ANR	2550480	DeclStmt									
ANR	2550481	Decl							int	"int ( upd_p upd , FILE * out )"	upd_wrtescp
ANR	2550482	DeclStmt									
ANR	2550483	Decl							int	"int ( byte * out , const byte * in , int nbytes )"	upd_rle
ANR	2550484	DeclStmt									
ANR	2550485	Decl							int	int ( upd_device * udev )	upd_open_wrtescp2
ANR	2550486	DeclStmt									
ANR	2550487	Decl							int	"int ( upd_p upd , FILE * out )"	upd_wrtescp2
ANR	2550488	DeclStmt									
ANR	2550489	Decl							int	"int ( upd_p upd , FILE * out )"	upd_wrtescp2x
ANR	2550490	DeclStmt									
ANR	2550491	Decl							int	int ( upd_device * udev )	upd_open_wrtrtl
ANR	2550492	DeclStmt									
ANR	2550493	Decl							int	"int ( upd_p upd , FILE * out )"	upd_wrtrtl
ANR	2550494	DeclStmt									
ANR	2550495	Decl							int	int ( upd_device * udev )	upd_open_wrtcanon
ANR	2550496	DeclStmt									
ANR	2550497	Decl							int	"int ( upd_p upd , FILE * out )"	upd_wrtcanon
ANR	2550498	DeclStmt									
ANR	2550499	Decl							int	"int ( upd_p upd , FILE * out )"	upd_wrtescnm
ANR	2550500	DeclStmt									
ANR	2550501	Decl							uint32_t	uint32_t ( upd_p upd )	upd_pxlfwd
ANR	2550502	DeclStmt									
ANR	2550503	Decl							uint32_t	uint32_t ( upd_p upd )	upd_pxlrev
ANR	2550504	DeclStmt									
ANR	2550505	Decl							void	void * ( const void * )	upd_cast
ANR	2550506	DeclStmt									
ANR	2550507	Decl							byte	byte *	tmp
ANR	2550508	DeclStmt									
ANR	2550509	Decl							uint	uint	ii
ANR	2550510	DeclStmt									
ANR	2550511	Decl							uint	uint	iii
ANR	2550512	DeclStmt									
ANR	2550513	Decl							uint	uint	ii
ANR	2550514	DeclStmt									
ANR	2550515	Decl							gs_param_string	gs_param_string *	tmp2
ANR	2550516	DeclStmt									
ANR	2550517	Decl							uint	uint	iii
ANR	2550518	DeclStmt									
ANR	2550519	Decl							const char	const char [ ]	rcsid
ANR	2550520	Function	upd_cast	979:0:45340:45407							
ANR	2550521	FunctionDef	upd_cast (const void * data)		2550520	0					
ANR	2550522	CompoundStatement		981:0:45381:45407	2550520	0					
ANR	2550523	ReturnStatement	return ( void * ) data ;	982:2:45385:45405	2550520	0	True				
ANR	2550524	CastExpression	( void * ) data		2550520	0					
ANR	2550525	CastTarget	void *		2550520	0					
ANR	2550526	Identifier	data		2550520	1					
ANR	2550527	ReturnType	static void *		2550520	1					
ANR	2550528	Identifier	upd_cast		2550520	2					
ANR	2550529	ParameterList	const void * data		2550520	3					
ANR	2550530	Parameter	const void * data	980:9:45363:45378	2550520	0	True				
ANR	2550531	ParameterType	const void *		2550520	0					
ANR	2550532	Identifier	data		2550520	1					
ANR	2550533	CFGEntryNode	ENTRY		2550520		True				
ANR	2550534	CFGExitNode	EXIT		2550520		True				
ANR	2550535	Symbol	data		2550520						
ANR	2550536	DeclStmt									
ANR	2550537	Decl							upd_p	upd_p	sigupd
ANR	2550538	Function	upd_signal_handler	991:0:45676:45757							
ANR	2550539	FunctionDef	upd_signal_handler (int sig)		2550538	0					
ANR	2550540	CompoundStatement		993:0:45716:45757	2550538	0					
ANR	2550541	IfStatement	if ( sigupd )		2550538	0					
ANR	2550542	Condition	sigupd	994:5:45723:45728	2550538	0	True				
ANR	2550543	Identifier	sigupd		2550538	0					
ANR	2550544	ExpressionStatement	sigupd -> flags |= B_ABORT	994:13:45731:45755	2550538	1	True				
ANR	2550545	AssignmentExpression	sigupd -> flags |= B_ABORT		2550538	0		|=			
ANR	2550546	PtrMemberAccess	sigupd -> flags		2550538	0					
ANR	2550547	Identifier	sigupd		2550538	0					
ANR	2550548	Identifier	flags		2550538	1					
ANR	2550549	Identifier	B_ABORT		2550538	1					
ANR	2550550	ReturnType	static void		2550538	1					
ANR	2550551	Identifier	upd_signal_handler		2550538	2					
ANR	2550552	ParameterList	int sig		2550538	3					
ANR	2550553	Parameter	int sig	992:19:45707:45713	2550538	0	True				
ANR	2550554	ParameterType	int		2550538	0					
ANR	2550555	Identifier	sig		2550538	1					
ANR	2550556	CFGEntryNode	ENTRY		2550538		True				
ANR	2550557	CFGExitNode	EXIT		2550538		True				
ANR	2550558	Symbol	sig		2550538						
ANR	2550559	Symbol	* sigupd		2550538						
ANR	2550560	Symbol	B_ABORT		2550538						
ANR	2550561	Symbol	sigupd		2550538						
ANR	2550562	Symbol	sigupd -> flags		2550538						
ANR	2550563	Function	upd_print_page	1031:0:47184:53058							
ANR	2550564	FunctionDef	"upd_print_page (gx_device_printer * pdev , FILE * out)"		2550563	0					
ANR	2550565	CompoundStatement		1033:0:47246:53058	2550563	0					
ANR	2550566	Statement	upd_device	1034:3:47251:47260	2550563	0	True				
ANR	2550567	Statement	*	1034:14:47262:47262	2550563	1	True				
ANR	2550568	Statement	const	1034:15:47263:47267	2550563	2	True				
ANR	2550569	ExpressionStatement	udev = ( upd_device * ) pdev	1034:21:47269:47296	2550563	3	True				
ANR	2550570	AssignmentExpression	udev = ( upd_device * ) pdev		2550563	0		=			
ANR	2550571	Identifier	udev		2550563	0					
ANR	2550572	CastExpression	( upd_device * ) pdev		2550563	1					
ANR	2550573	CastTarget	upd_device *		2550563	0					
ANR	2550574	Identifier	pdev		2550563	1					
ANR	2550575	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	1035:3:47301:47336	2550563	4	True				
ANR	2550576	IdentifierDecl	upd = udev -> upd		2550563	0					
ANR	2550577	IdentifierDeclType	const upd_p		2550563	0					
ANR	2550578	Identifier	upd		2550563	1					
ANR	2550579	AssignmentExpression	upd = udev -> upd		2550563	2		=			
ANR	2550580	Identifier	upd		2550563	0					
ANR	2550581	PtrMemberAccess	udev -> upd		2550563	1					
ANR	2550582	Identifier	udev		2550563	0					
ANR	2550583	Identifier	upd		2550563	1					
ANR	2550584	Statement	const	1036:3:47341:47345	2550563	5	True				
ANR	2550585	Statement	int	1036:9:47347:47349	2550563	6	True				
ANR	2550586	Statement	*	1036:13:47351:47351	2550563	7	True				
ANR	2550587	Statement	const	1036:14:47352:47356	2550563	8	True				
ANR	2550588	ExpressionStatement	ints = upd ? upd -> ints : NULL	1036:21:47359:47389	2550563	9	True				
ANR	2550589	AssignmentExpression	ints = upd ? upd -> ints : NULL		2550563	0		=			
ANR	2550590	Identifier	ints		2550563	0					
ANR	2550591	ConditionalExpression	upd ? upd -> ints : NULL		2550563	1					
ANR	2550592	Condition	upd		2550563	0					
ANR	2550593	Identifier	upd		2550563	0					
ANR	2550594	PtrMemberAccess	upd -> ints		2550563	1					
ANR	2550595	Identifier	upd		2550563	0					
ANR	2550596	Identifier	ints		2550563	1					
ANR	2550597	Identifier	NULL		2550563	2					
ANR	2550598	IdentifierDeclStatement	"int error , need , yfill ;"	1037:3:47394:47414	2550563	10	True				
ANR	2550599	IdentifierDecl	error		2550563	0					
ANR	2550600	IdentifierDeclType	int		2550563	0					
ANR	2550601	Identifier	error		2550563	1					
ANR	2550602	IdentifierDecl	need		2550563	1					
ANR	2550603	IdentifierDeclType	int		2550563	0					
ANR	2550604	Identifier	need		2550563	1					
ANR	2550605	IdentifierDecl	yfill		2550563	2					
ANR	2550606	IdentifierDeclType	int		2550563	0					
ANR	2550607	Identifier	yfill		2550563	1					
ANR	2550608	IdentifierDeclStatement	void ( * oldint ) ( int ) = NULL ;	1040:3:47485:47512	2550563	11	True				
ANR	2550609	IdentifierDecl	( * oldint ) ( int ) = NULL		2550563	0					
ANR	2550610	IdentifierDeclType	void ( * ) ( int )		2550563	0					
ANR	2550611	Identifier	oldint		2550563	1					
ANR	2550612	AssignmentExpression	( * oldint ) ( int ) = NULL		2550563	2		=			
ANR	2550613	Identifier	NULL		2550563	0					
ANR	2550614	Identifier	NULL		2550563	1					
ANR	2550615	IdentifierDeclStatement	void ( * oldterm ) ( int ) = NULL ;	1041:3:47517:47544	2550563	12	True				
ANR	2550616	IdentifierDecl	( * oldterm ) ( int ) = NULL		2550563	0					
ANR	2550617	IdentifierDeclType	void ( * ) ( int )		2550563	0					
ANR	2550618	Identifier	oldterm		2550563	1					
ANR	2550619	AssignmentExpression	( * oldterm ) ( int ) = NULL		2550563	2		=			
ANR	2550620	Identifier	NULL		2550563	0					
ANR	2550621	Identifier	NULL		2550563	1					
ANR	2550622	IdentifierDeclStatement	upd_p oldupd = sigupd ;	1042:3:47549:47582	2550563	13	True				
ANR	2550623	IdentifierDecl	oldupd = sigupd		2550563	0					
ANR	2550624	IdentifierDeclType	upd_p		2550563	0					
ANR	2550625	Identifier	oldupd		2550563	1					
ANR	2550626	AssignmentExpression	oldupd = sigupd		2550563	2		=			
ANR	2550627	Identifier	sigupd		2550563	0					
ANR	2550628	Identifier	sigupd		2550563	1					
ANR	2550629	IfStatement	if ( ! upd || B_OK4GO != ( upd -> flags & ( B_OK4GO | B_ERROR ) ) )		2550563	14					
ANR	2550630	Condition	! upd || B_OK4GO != ( upd -> flags & ( B_OK4GO | B_ERROR ) )	1049:6:47766:47818	2550563	0	True				
ANR	2550631	OrExpression	! upd || B_OK4GO != ( upd -> flags & ( B_OK4GO | B_ERROR ) )		2550563	0		||			
ANR	2550632	UnaryOperationExpression	! upd		2550563	0					
ANR	2550633	UnaryOperator	!		2550563	0					
ANR	2550634	Identifier	upd		2550563	1					
ANR	2550635	EqualityExpression	B_OK4GO != ( upd -> flags & ( B_OK4GO | B_ERROR ) )		2550563	1		!=			
ANR	2550636	Identifier	B_OK4GO		2550563	0					
ANR	2550637	BitAndExpression	upd -> flags & ( B_OK4GO | B_ERROR )		2550563	1		&			
ANR	2550638	PtrMemberAccess	upd -> flags		2550563	0					
ANR	2550639	Identifier	upd		2550563	0					
ANR	2550640	Identifier	flags		2550563	1					
ANR	2550641	InclusiveOrExpression	B_OK4GO | B_ERROR		2550563	1		|			
ANR	2550642	Identifier	B_OK4GO		2550563	0					
ANR	2550643	Identifier	B_ERROR		2550563	1					
ANR	2550644	CompoundStatement		17:61:574:574	2550563	1					
ANR	2550645	ExpressionStatement	"errprintf ( pdev -> memory , ""CALL-REJECTED upd_print_page(0x%05lx,0x%05lx)\\n"" , ( long ) udev , ( long ) out )"	1051:9:47882:47993	2550563	0	True				
ANR	2550646	CallExpression	"errprintf ( pdev -> memory , ""CALL-REJECTED upd_print_page(0x%05lx,0x%05lx)\\n"" , ( long ) udev , ( long ) out )"		2550563	0					
ANR	2550647	Callee	errprintf		2550563	0					
ANR	2550648	Identifier	errprintf		2550563	0					
ANR	2550649	ArgumentList	pdev -> memory		2550563	1					
ANR	2550650	Argument	pdev -> memory		2550563	0					
ANR	2550651	PtrMemberAccess	pdev -> memory		2550563	0					
ANR	2550652	Identifier	pdev		2550563	0					
ANR	2550653	Identifier	memory		2550563	1					
ANR	2550654	Argument	"""CALL-REJECTED upd_print_page(0x%05lx,0x%05lx)\\n"""		2550563	1					
ANR	2550655	PrimaryExpression	"""CALL-REJECTED upd_print_page(0x%05lx,0x%05lx)\\n"""		2550563	0					
ANR	2550656	Argument	( long ) udev		2550563	2					
ANR	2550657	CastExpression	( long ) udev		2550563	0					
ANR	2550658	CastTarget	long		2550563	0					
ANR	2550659	Identifier	udev		2550563	1					
ANR	2550660	Argument	( long ) out		2550563	3					
ANR	2550661	CastExpression	( long ) out		2550563	0					
ANR	2550662	CastTarget	long		2550563	0					
ANR	2550663	Identifier	out		2550563	1					
ANR	2550664	ExpressionStatement	return_error ( gs_error_undefined )	1054:2:48004:48036	2550563	1	True				
ANR	2550665	CallExpression	return_error ( gs_error_undefined )		2550563	0					
ANR	2550666	Callee	return_error		2550563	0					
ANR	2550667	Identifier	return_error		2550563	0					
ANR	2550668	ArgumentList	gs_error_undefined		2550563	1					
ANR	2550669	Argument	gs_error_undefined		2550563	0					
ANR	2550670	Identifier	gs_error_undefined		2550563	0					
ANR	2550671	ExpressionStatement	"errprintf ( pdev -> memory , ""CALL: upd_print_page(0x%05lx,0x%05lx)\\n"" , ( long ) udev , ( long ) out )"	1058:3:48081:48177	2550563	15	True				
ANR	2550672	CallExpression	"errprintf ( pdev -> memory , ""CALL: upd_print_page(0x%05lx,0x%05lx)\\n"" , ( long ) udev , ( long ) out )"		2550563	0					
ANR	2550673	Callee	errprintf		2550563	0					
ANR	2550674	Identifier	errprintf		2550563	0					
ANR	2550675	ArgumentList	pdev -> memory		2550563	1					
ANR	2550676	Argument	pdev -> memory		2550563	0					
ANR	2550677	PtrMemberAccess	pdev -> memory		2550563	0					
ANR	2550678	Identifier	pdev		2550563	0					
ANR	2550679	Identifier	memory		2550563	1					
ANR	2550680	Argument	"""CALL: upd_print_page(0x%05lx,0x%05lx)\\n"""		2550563	1					
ANR	2550681	PrimaryExpression	"""CALL: upd_print_page(0x%05lx,0x%05lx)\\n"""		2550563	0					
ANR	2550682	Argument	( long ) udev		2550563	2					
ANR	2550683	CastExpression	( long ) udev		2550563	0					
ANR	2550684	CastTarget	long		2550563	0					
ANR	2550685	Identifier	udev		2550563	1					
ANR	2550686	Argument	( long ) out		2550563	3					
ANR	2550687	CastExpression	( long ) out		2550563	0					
ANR	2550688	CastTarget	long		2550563	0					
ANR	2550689	Identifier	out		2550563	1					
ANR	2550690	ExpressionStatement	sigupd = upd	1063:3:48236:48249	2550563	16	True				
ANR	2550691	AssignmentExpression	sigupd = upd		2550563	0		=			
ANR	2550692	Identifier	sigupd		2550563	0					
ANR	2550693	Identifier	upd		2550563	1					
ANR	2550694	ExpressionStatement	"oldint = signal ( SIGINT , upd_signal_handler )"	1064:3:48254:48298	2550563	17	True				
ANR	2550695	AssignmentExpression	"oldint = signal ( SIGINT , upd_signal_handler )"		2550563	0		=			
ANR	2550696	Identifier	oldint		2550563	0					
ANR	2550697	CallExpression	"signal ( SIGINT , upd_signal_handler )"		2550563	1					
ANR	2550698	Callee	signal		2550563	0					
ANR	2550699	Identifier	signal		2550563	0					
ANR	2550700	ArgumentList	SIGINT		2550563	1					
ANR	2550701	Argument	SIGINT		2550563	0					
ANR	2550702	Identifier	SIGINT		2550563	0					
ANR	2550703	Argument	upd_signal_handler		2550563	1					
ANR	2550704	Identifier	upd_signal_handler		2550563	0					
ANR	2550705	ExpressionStatement	"oldterm = signal ( SIGTERM , upd_signal_handler )"	1065:3:48303:48347	2550563	18	True				
ANR	2550706	AssignmentExpression	"oldterm = signal ( SIGTERM , upd_signal_handler )"		2550563	0		=			
ANR	2550707	Identifier	oldterm		2550563	0					
ANR	2550708	CallExpression	"signal ( SIGTERM , upd_signal_handler )"		2550563	1					
ANR	2550709	Callee	signal		2550563	0					
ANR	2550710	Identifier	signal		2550563	0					
ANR	2550711	ArgumentList	SIGTERM		2550563	1					
ANR	2550712	Argument	SIGTERM		2550563	0					
ANR	2550713	Identifier	SIGTERM		2550563	0					
ANR	2550714	Argument	upd_signal_handler		2550563	1					
ANR	2550715	Identifier	upd_signal_handler		2550563	0					
ANR	2550716	IfStatement	if ( ! ( upd -> flags & B_OPEN ) )		2550563	19					
ANR	2550717	Condition	! ( upd -> flags & B_OPEN )	1071:6:48481:48502	2550563	0	True				
ANR	2550718	UnaryOperationExpression	! ( upd -> flags & B_OPEN )		2550563	0					
ANR	2550719	UnaryOperator	!		2550563	0					
ANR	2550720	BitAndExpression	upd -> flags & B_OPEN		2550563	1		&			
ANR	2550721	PtrMemberAccess	upd -> flags		2550563	0					
ANR	2550722	Identifier	upd		2550563	0					
ANR	2550723	Identifier	flags		2550563	1					
ANR	2550724	Identifier	B_OPEN		2550563	1					
ANR	2550725	CompoundStatement		39:30:1258:1258	2550563	1					
ANR	2550726	IfStatement	if ( 0 < upd -> strings [ S_OPEN ] . size )		2550563	0					
ANR	2550727	Condition	0 < upd -> strings [ S_OPEN ] . size	1073:9:48517:48548	2550563	0	True				
ANR	2550728	RelationalExpression	0 < upd -> strings [ S_OPEN ] . size		2550563	0		<			
ANR	2550729	PrimaryExpression	0		2550563	0					
ANR	2550730	MemberAccess	upd -> strings [ S_OPEN ] . size		2550563	1					
ANR	2550731	ArrayIndexing	upd -> strings [ S_OPEN ]		2550563	0					
ANR	2550732	PtrMemberAccess	upd -> strings		2550563	0					
ANR	2550733	Identifier	upd		2550563	0					
ANR	2550734	Identifier	strings		2550563	1					
ANR	2550735	Identifier	S_OPEN		2550563	1					
ANR	2550736	Identifier	size		2550563	1					
ANR	2550737	ExpressionStatement	"fwrite ( upd -> strings [ S_OPEN ] . data , 1 , upd -> strings [ S_OPEN ] . size , out )"	1074:9:48560:48625	2550563	1	True				
ANR	2550738	CallExpression	"fwrite ( upd -> strings [ S_OPEN ] . data , 1 , upd -> strings [ S_OPEN ] . size , out )"		2550563	0					
ANR	2550739	Callee	fwrite		2550563	0					
ANR	2550740	Identifier	fwrite		2550563	0					
ANR	2550741	ArgumentList	upd -> strings [ S_OPEN ] . data		2550563	1					
ANR	2550742	Argument	upd -> strings [ S_OPEN ] . data		2550563	0					
ANR	2550743	MemberAccess	upd -> strings [ S_OPEN ] . data		2550563	0					
ANR	2550744	ArrayIndexing	upd -> strings [ S_OPEN ]		2550563	0					
ANR	2550745	PtrMemberAccess	upd -> strings		2550563	0					
ANR	2550746	Identifier	upd		2550563	0					
ANR	2550747	Identifier	strings		2550563	1					
ANR	2550748	Identifier	S_OPEN		2550563	1					
ANR	2550749	Identifier	data		2550563	1					
ANR	2550750	Argument	1		2550563	1					
ANR	2550751	PrimaryExpression	1		2550563	0					
ANR	2550752	Argument	upd -> strings [ S_OPEN ] . size		2550563	2					
ANR	2550753	MemberAccess	upd -> strings [ S_OPEN ] . size		2550563	0					
ANR	2550754	ArrayIndexing	upd -> strings [ S_OPEN ]		2550563	0					
ANR	2550755	PtrMemberAccess	upd -> strings		2550563	0					
ANR	2550756	Identifier	upd		2550563	0					
ANR	2550757	Identifier	strings		2550563	1					
ANR	2550758	Identifier	S_OPEN		2550563	1					
ANR	2550759	Identifier	size		2550563	1					
ANR	2550760	Argument	out		2550563	3					
ANR	2550761	Identifier	out		2550563	0					
ANR	2550762	ExpressionStatement	upd -> flags |= B_OPEN	1075:6:48633:48653	2550563	1	True				
ANR	2550763	AssignmentExpression	upd -> flags |= B_OPEN		2550563	0		|=			
ANR	2550764	PtrMemberAccess	upd -> flags		2550563	0					
ANR	2550765	Identifier	upd		2550563	0					
ANR	2550766	Identifier	flags		2550563	1					
ANR	2550767	Identifier	B_OPEN		2550563	1					
ANR	2550768	IfStatement	if ( 0 < upd -> strings [ S_BEGIN ] . size )		2550563	20					
ANR	2550769	Condition	0 < upd -> strings [ S_BEGIN ] . size	1080:6:48717:48749	2550563	0	True				
ANR	2550770	RelationalExpression	0 < upd -> strings [ S_BEGIN ] . size		2550563	0		<			
ANR	2550771	PrimaryExpression	0		2550563	0					
ANR	2550772	MemberAccess	upd -> strings [ S_BEGIN ] . size		2550563	1					
ANR	2550773	ArrayIndexing	upd -> strings [ S_BEGIN ]		2550563	0					
ANR	2550774	PtrMemberAccess	upd -> strings		2550563	0					
ANR	2550775	Identifier	upd		2550563	0					
ANR	2550776	Identifier	strings		2550563	1					
ANR	2550777	Identifier	S_BEGIN		2550563	1					
ANR	2550778	Identifier	size		2550563	1					
ANR	2550779	ExpressionStatement	"fwrite ( upd -> strings [ S_BEGIN ] . data , 1 , upd -> strings [ S_BEGIN ] . size , out )"	1081:6:48758:48825	2550563	1	True				
ANR	2550780	CallExpression	"fwrite ( upd -> strings [ S_BEGIN ] . data , 1 , upd -> strings [ S_BEGIN ] . size , out )"		2550563	0					
ANR	2550781	Callee	fwrite		2550563	0					
ANR	2550782	Identifier	fwrite		2550563	0					
ANR	2550783	ArgumentList	upd -> strings [ S_BEGIN ] . data		2550563	1					
ANR	2550784	Argument	upd -> strings [ S_BEGIN ] . data		2550563	0					
ANR	2550785	MemberAccess	upd -> strings [ S_BEGIN ] . data		2550563	0					
ANR	2550786	ArrayIndexing	upd -> strings [ S_BEGIN ]		2550563	0					
ANR	2550787	PtrMemberAccess	upd -> strings		2550563	0					
ANR	2550788	Identifier	upd		2550563	0					
ANR	2550789	Identifier	strings		2550563	1					
ANR	2550790	Identifier	S_BEGIN		2550563	1					
ANR	2550791	Identifier	data		2550563	1					
ANR	2550792	Argument	1		2550563	1					
ANR	2550793	PrimaryExpression	1		2550563	0					
ANR	2550794	Argument	upd -> strings [ S_BEGIN ] . size		2550563	2					
ANR	2550795	MemberAccess	upd -> strings [ S_BEGIN ] . size		2550563	0					
ANR	2550796	ArrayIndexing	upd -> strings [ S_BEGIN ]		2550563	0					
ANR	2550797	PtrMemberAccess	upd -> strings		2550563	0					
ANR	2550798	Identifier	upd		2550563	0					
ANR	2550799	Identifier	strings		2550563	1					
ANR	2550800	Identifier	S_BEGIN		2550563	1					
ANR	2550801	Identifier	size		2550563	1					
ANR	2550802	Argument	out		2550563	3					
ANR	2550803	Identifier	out		2550563	0					
ANR	2550804	ExpressionStatement	upd -> xprinter = 0	1087:3:48882:48900	2550563	21	True				
ANR	2550805	AssignmentExpression	upd -> xprinter = 0		2550563	0		=			
ANR	2550806	PtrMemberAccess	upd -> xprinter		2550563	0					
ANR	2550807	Identifier	upd		2550563	0					
ANR	2550808	Identifier	xprinter		2550563	1					
ANR	2550809	PrimaryExpression	0		2550563	1					
ANR	2550810	ExpressionStatement	upd -> yscan = 0	1088:3:48905:48923	2550563	22	True				
ANR	2550811	AssignmentExpression	upd -> yscan = 0		2550563	0		=			
ANR	2550812	PtrMemberAccess	upd -> yscan		2550563	0					
ANR	2550813	Identifier	upd		2550563	0					
ANR	2550814	Identifier	yscan		2550563	1					
ANR	2550815	PrimaryExpression	0		2550563	1					
ANR	2550816	ExpressionStatement	upd -> yprinter = 0	1089:3:48961:48979	2550563	23	True				
ANR	2550817	AssignmentExpression	upd -> yprinter = 0		2550563	0		=			
ANR	2550818	PtrMemberAccess	upd -> yprinter		2550563	0					
ANR	2550819	Identifier	upd		2550563	0					
ANR	2550820	Identifier	yprinter		2550563	1					
ANR	2550821	PrimaryExpression	0		2550563	1					
ANR	2550822	ExpressionStatement	upd -> yscnbuf = 0	1090:3:49015:49033	2550563	24	True				
ANR	2550823	AssignmentExpression	upd -> yscnbuf = 0		2550563	0		=			
ANR	2550824	PtrMemberAccess	upd -> yscnbuf		2550563	0					
ANR	2550825	Identifier	upd		2550563	0					
ANR	2550826	Identifier	yscnbuf		2550563	1					
ANR	2550827	PrimaryExpression	0		2550563	1					
ANR	2550828	IfStatement	if ( upd -> start_render )		2550563	25					
ANR	2550829	Condition	upd -> start_render	1093:6:49116:49132	2550563	0	True				
ANR	2550830	PtrMemberAccess	upd -> start_render		2550563	0					
ANR	2550831	Identifier	upd		2550563	0					
ANR	2550832	Identifier	start_render		2550563	1					
ANR	2550833	ExpressionStatement	( * upd -> start_render ) ( upd )	1093:25:49135:49160	2550563	1	True				
ANR	2550834	CallExpression	( * upd -> start_render ) ( upd )		2550563	0					
ANR	2550835	Callee	* upd -> start_render		2550563	0					
ANR	2550836	UnaryOperationExpression	* upd -> start_render		2550563	0					
ANR	2550837	UnaryOperator	*		2550563	0					
ANR	2550838	PtrMemberAccess	upd -> start_render		2550563	1					
ANR	2550839	Identifier	upd		2550563	0					
ANR	2550840	Identifier	start_render		2550563	1					
ANR	2550841	ArgumentList	upd		2550563	1					
ANR	2550842	Argument	upd		2550563	0					
ANR	2550843	Identifier	upd		2550563	0					
ANR	2550844	IfStatement	if ( upd -> start_writer )		2550563	26					
ANR	2550845	Condition	upd -> start_writer	1094:6:49168:49184	2550563	0	True				
ANR	2550846	PtrMemberAccess	upd -> start_writer		2550563	0					
ANR	2550847	Identifier	upd		2550563	0					
ANR	2550848	Identifier	start_writer		2550563	1					
ANR	2550849	ExpressionStatement	"( * upd -> start_writer ) ( upd , out )"	1094:25:49187:49216	2550563	1	True				
ANR	2550850	CallExpression	"( * upd -> start_writer ) ( upd , out )"		2550563	0					
ANR	2550851	Callee	* upd -> start_writer		2550563	0					
ANR	2550852	UnaryOperationExpression	* upd -> start_writer		2550563	0					
ANR	2550853	UnaryOperator	*		2550563	0					
ANR	2550854	PtrMemberAccess	upd -> start_writer		2550563	1					
ANR	2550855	Identifier	upd		2550563	0					
ANR	2550856	Identifier	start_writer		2550563	1					
ANR	2550857	ArgumentList	upd		2550563	1					
ANR	2550858	Argument	upd		2550563	0					
ANR	2550859	Identifier	upd		2550563	0					
ANR	2550860	Argument	out		2550563	1					
ANR	2550861	Identifier	out		2550563	0					
ANR	2550862	ExpressionStatement	need = ints [ I_NYPASS ] * ints [ I_PINS2WRITE ]	1097:3:49260:49302	2550563	27	True				
ANR	2550863	AssignmentExpression	need = ints [ I_NYPASS ] * ints [ I_PINS2WRITE ]		2550563	0		=			
ANR	2550864	Identifier	need		2550563	0					
ANR	2550865	MultiplicativeExpression	ints [ I_NYPASS ] * ints [ I_PINS2WRITE ]		2550563	1		*			
ANR	2550866	ArrayIndexing	ints [ I_NYPASS ]		2550563	0					
ANR	2550867	Identifier	ints		2550563	0					
ANR	2550868	Identifier	I_NYPASS		2550563	1					
ANR	2550869	ArrayIndexing	ints [ I_PINS2WRITE ]		2550563	1					
ANR	2550870	Identifier	ints		2550563	0					
ANR	2550871	Identifier	I_PINS2WRITE		2550563	1					
ANR	2550872	IfStatement	if ( 0 >= need )		2550563	28					
ANR	2550873	Condition	0 >= need	1098:6:49310:49318	2550563	0	True				
ANR	2550874	RelationalExpression	0 >= need		2550563	0		>=			
ANR	2550875	PrimaryExpression	0		2550563	0					
ANR	2550876	Identifier	need		2550563	1					
ANR	2550877	ExpressionStatement	need = 1	1098:17:49321:49329	2550563	1	True				
ANR	2550878	AssignmentExpression	need = 1		2550563	0		=			
ANR	2550879	Identifier	need		2550563	0					
ANR	2550880	PrimaryExpression	1		2550563	1					
ANR	2550881	ExpressionStatement	upd -> ipass = 0	1101:3:49360:49376	2550563	29	True				
ANR	2550882	AssignmentExpression	upd -> ipass = 0		2550563	0		=			
ANR	2550883	PtrMemberAccess	upd -> ipass		2550563	0					
ANR	2550884	Identifier	upd		2550563	0					
ANR	2550885	Identifier	ipass		2550563	1					
ANR	2550886	PrimaryExpression	0		2550563	1					
ANR	2550887	ExpressionStatement	upd -> ixpass = 0	1102:3:49381:49397	2550563	30	True				
ANR	2550888	AssignmentExpression	upd -> ixpass = 0		2550563	0		=			
ANR	2550889	PtrMemberAccess	upd -> ixpass		2550563	0					
ANR	2550890	Identifier	upd		2550563	0					
ANR	2550891	Identifier	ixpass		2550563	1					
ANR	2550892	PrimaryExpression	0		2550563	1					
ANR	2550893	ExpressionStatement	upd -> icomp = - 1	1103:3:49402:49418	2550563	31	True				
ANR	2550894	AssignmentExpression	upd -> icomp = - 1		2550563	0		=			
ANR	2550895	PtrMemberAccess	upd -> icomp		2550563	0					
ANR	2550896	Identifier	upd		2550563	0					
ANR	2550897	Identifier	icomp		2550563	1					
ANR	2550898	UnaryOperationExpression	- 1		2550563	1					
ANR	2550899	UnaryOperator	-		2550563	0					
ANR	2550900	PrimaryExpression	1		2550563	1					
ANR	2550901	ExpressionStatement	upd -> lf = - 1	1104:3:49456:49472	2550563	32	True				
ANR	2550902	AssignmentExpression	upd -> lf = - 1		2550563	0		=			
ANR	2550903	PtrMemberAccess	upd -> lf		2550563	0					
ANR	2550904	Identifier	upd		2550563	0					
ANR	2550905	Identifier	lf		2550563	1					
ANR	2550906	UnaryOperationExpression	- 1		2550563	1					
ANR	2550907	UnaryOperator	-		2550563	0					
ANR	2550908	PrimaryExpression	1		2550563	1					
ANR	2550909	WhileStatement	while ( upd -> pheight > upd -> yscan )		2550563	33					
ANR	2550910	Condition	upd -> pheight > upd -> yscan	1108:9:49536:49560	2550563	0	True				
ANR	2550911	RelationalExpression	upd -> pheight > upd -> yscan		2550563	0		>			
ANR	2550912	PtrMemberAccess	upd -> pheight		2550563	0					
ANR	2550913	Identifier	upd		2550563	0					
ANR	2550914	Identifier	pheight		2550563	1					
ANR	2550915	PtrMemberAccess	upd -> yscan		2550563	1					
ANR	2550916	Identifier	upd		2550563	0					
ANR	2550917	Identifier	yscan		2550563	1					
ANR	2550918	CompoundStatement		76:36:2316:2316	2550563	1					
ANR	2550919	IfStatement	if ( ints [ I_BEGSKIP ] > upd -> yscan )		2550563	0					
ANR	2550920	Condition	ints [ I_BEGSKIP ] > upd -> yscan	1114:9:49724:49751	2550563	0	True				
ANR	2550921	RelationalExpression	ints [ I_BEGSKIP ] > upd -> yscan		2550563	0		>			
ANR	2550922	ArrayIndexing	ints [ I_BEGSKIP ]		2550563	0					
ANR	2550923	Identifier	ints		2550563	0					
ANR	2550924	Identifier	I_BEGSKIP		2550563	1					
ANR	2550925	PtrMemberAccess	upd -> yscan		2550563	1					
ANR	2550926	Identifier	upd		2550563	0					
ANR	2550927	Identifier	yscan		2550563	1					
ANR	2550928	ExpressionStatement	yfill = 0	1114:39:49754:49763	2550563	1	True				
ANR	2550929	AssignmentExpression	yfill = 0		2550563	0		=			
ANR	2550930	Identifier	yfill		2550563	0					
ANR	2550931	PrimaryExpression	0		2550563	1					
ANR	2550932	ElseStatement	else		2550563	0					
ANR	2550933	ExpressionStatement	yfill = upd -> yscan - ints [ I_BEGSKIP ]	1115:39:49804:49840	2550563	0	True				
ANR	2550934	AssignmentExpression	yfill = upd -> yscan - ints [ I_BEGSKIP ]		2550563	0		=			
ANR	2550935	Identifier	yfill		2550563	0					
ANR	2550936	AdditiveExpression	upd -> yscan - ints [ I_BEGSKIP ]		2550563	1		-			
ANR	2550937	PtrMemberAccess	upd -> yscan		2550563	0					
ANR	2550938	Identifier	upd		2550563	0					
ANR	2550939	Identifier	yscan		2550563	1					
ANR	2550940	ArrayIndexing	ints [ I_BEGSKIP ]		2550563	1					
ANR	2550941	Identifier	ints		2550563	0					
ANR	2550942	Identifier	I_BEGSKIP		2550563	1					
ANR	2550943	ForStatement	for ( yfill += upd -> nscnbuf ; upd -> yscnbuf < yfill ; upd -> yscnbuf ++ )		2550563	1					
ANR	2550944	ForInit	yfill += upd -> nscnbuf ;	1117:10:49853:49874	2550563	0	True				
ANR	2550945	AssignmentExpression	yfill += upd -> nscnbuf		2550563	0		+=			
ANR	2550946	Identifier	yfill		2550563	0					
ANR	2550947	PtrMemberAccess	upd -> nscnbuf		2550563	1					
ANR	2550948	Identifier	upd		2550563	0					
ANR	2550949	Identifier	nscnbuf		2550563	1					
ANR	2550950	Condition	upd -> yscnbuf < yfill	1117:33:49876:49895	2550563	1	True				
ANR	2550951	RelationalExpression	upd -> yscnbuf < yfill		2550563	0		<			
ANR	2550952	PtrMemberAccess	upd -> yscnbuf		2550563	0					
ANR	2550953	Identifier	upd		2550563	0					
ANR	2550954	Identifier	yscnbuf		2550563	1					
ANR	2550955	Identifier	yfill		2550563	1					
ANR	2550956	PostIncDecOperationExpression	upd -> yscnbuf ++	1117:55:49898:49911	2550563	2	True				
ANR	2550957	PtrMemberAccess	upd -> yscnbuf		2550563	0					
ANR	2550958	Identifier	upd		2550563	0					
ANR	2550959	Identifier	yscnbuf		2550563	1					
ANR	2550960	IncDec	++		2550563	1					
ANR	2550961	CompoundStatement		85:71:2667:2667	2550563	3					
ANR	2550962	IfStatement	if ( upd -> gsheight > upd -> yscnbuf )		2550563	0					
ANR	2550963	Condition	upd -> gsheight > upd -> yscnbuf	1119:12:49929:49956	2550563	0	True				
ANR	2550964	RelationalExpression	upd -> gsheight > upd -> yscnbuf		2550563	0		>			
ANR	2550965	PtrMemberAccess	upd -> gsheight		2550563	0					
ANR	2550966	Identifier	upd		2550563	0					
ANR	2550967	Identifier	gsheight		2550563	1					
ANR	2550968	PtrMemberAccess	upd -> yscnbuf		2550563	1					
ANR	2550969	Identifier	upd		2550563	0					
ANR	2550970	Identifier	yscnbuf		2550563	1					
ANR	2550971	CompoundStatement		87:43:2713:2713	2550563	1					
ANR	2550972	IfStatement	"if ( 0 > ( * dev_proc ( udev , get_bits ) ) ( ( gx_device * ) udev , upd -> yscnbuf , upd -> gsbuf , & upd -> gsscan ) )"		2550563	0					
ANR	2550973	Condition	"0 > ( * dev_proc ( udev , get_bits ) ) ( ( gx_device * ) udev , upd -> yscnbuf , upd -> gsbuf , & upd -> gsscan )"	1121:15:49978:50100	2550563	0	True				
ANR	2550974	RelationalExpression	"0 > ( * dev_proc ( udev , get_bits ) ) ( ( gx_device * ) udev , upd -> yscnbuf , upd -> gsbuf , & upd -> gsscan )"		2550563	0		>			
ANR	2550975	PrimaryExpression	0		2550563	0					
ANR	2550976	CallExpression	"( * dev_proc ( udev , get_bits ) ) ( ( gx_device * ) udev , upd -> yscnbuf , upd -> gsbuf , & upd -> gsscan )"		2550563	1					
ANR	2550977	Callee	"* dev_proc ( udev , get_bits )"		2550563	0					
ANR	2550978	UnaryOperationExpression	"* dev_proc ( udev , get_bits )"		2550563	0					
ANR	2550979	UnaryOperator	*		2550563	0					
ANR	2550980	CallExpression	"dev_proc ( udev , get_bits )"		2550563	1					
ANR	2550981	Callee	dev_proc		2550563	0					
ANR	2550982	Identifier	dev_proc		2550563	0					
ANR	2550983	ArgumentList	udev		2550563	1					
ANR	2550984	Argument	udev		2550563	0					
ANR	2550985	Identifier	udev		2550563	0					
ANR	2550986	Argument	get_bits		2550563	1					
ANR	2550987	Identifier	get_bits		2550563	0					
ANR	2550988	ArgumentList	( gx_device * ) udev		2550563	1					
ANR	2550989	Argument	( gx_device * ) udev		2550563	0					
ANR	2550990	CastExpression	( gx_device * ) udev		2550563	0					
ANR	2550991	CastTarget	gx_device *		2550563	0					
ANR	2550992	Identifier	udev		2550563	1					
ANR	2550993	Argument	upd -> yscnbuf		2550563	1					
ANR	2550994	PtrMemberAccess	upd -> yscnbuf		2550563	0					
ANR	2550995	Identifier	upd		2550563	0					
ANR	2550996	Identifier	yscnbuf		2550563	1					
ANR	2550997	Argument	upd -> gsbuf		2550563	2					
ANR	2550998	PtrMemberAccess	upd -> gsbuf		2550563	0					
ANR	2550999	Identifier	upd		2550563	0					
ANR	2551000	Identifier	gsbuf		2550563	1					
ANR	2551001	Argument	& upd -> gsscan		2550563	3					
ANR	2551002	UnaryOperationExpression	& upd -> gsscan		2550563	0					
ANR	2551003	UnaryOperator	&		2550563	0					
ANR	2551004	PtrMemberAccess	upd -> gsscan		2550563	1					
ANR	2551005	Identifier	upd		2550563	0					
ANR	2551006	Identifier	gsscan		2550563	1					
ANR	2551007	CompoundStatement		90:74:2856:2856	2550563	1					
ANR	2551008	ExpressionStatement	"errprintf ( udev -> memory , ""get_bits aborted with error, yscnbuf = %4d\\n"" , upd -> yscnbuf )"	1124:15:50153:50263	2550563	0	True				
ANR	2551009	CallExpression	"errprintf ( udev -> memory , ""get_bits aborted with error, yscnbuf = %4d\\n"" , upd -> yscnbuf )"		2550563	0					
ANR	2551010	Callee	errprintf		2550563	0					
ANR	2551011	Identifier	errprintf		2550563	0					
ANR	2551012	ArgumentList	udev -> memory		2550563	1					
ANR	2551013	Argument	udev -> memory		2550563	0					
ANR	2551014	PtrMemberAccess	udev -> memory		2550563	0					
ANR	2551015	Identifier	udev		2550563	0					
ANR	2551016	Identifier	memory		2550563	1					
ANR	2551017	Argument	"""get_bits aborted with error, yscnbuf = %4d\\n"""		2550563	1					
ANR	2551018	PrimaryExpression	"""get_bits aborted with error, yscnbuf = %4d\\n"""		2550563	0					
ANR	2551019	Argument	upd -> yscnbuf		2550563	2					
ANR	2551020	PtrMemberAccess	upd -> yscnbuf		2550563	0					
ANR	2551021	Identifier	upd		2550563	0					
ANR	2551022	Identifier	yscnbuf		2550563	1					
ANR	2551023	BreakStatement	break ;	1127:15:50287:50292	2550563	1	True				
ANR	2551024	ElseStatement	else		2550563	0					
ANR	2551025	CompoundStatement		97:16:3077:3077	2550563	0					
ANR	2551026	ExpressionStatement	"memset ( upd -> gsscan = upd -> gsbuf , 0 , upd -> ngsbuf )"	1131:12:50339:50385	2550563	0	True				
ANR	2551027	CallExpression	"memset ( upd -> gsscan = upd -> gsbuf , 0 , upd -> ngsbuf )"		2550563	0					
ANR	2551028	Callee	memset		2550563	0					
ANR	2551029	Identifier	memset		2550563	0					
ANR	2551030	ArgumentList	upd -> gsscan = upd -> gsbuf		2550563	1					
ANR	2551031	Argument	upd -> gsscan = upd -> gsbuf		2550563	0					
ANR	2551032	AssignmentExpression	upd -> gsscan = upd -> gsbuf		2550563	0		=			
ANR	2551033	PtrMemberAccess	upd -> gsscan		2550563	0					
ANR	2551034	Identifier	upd		2550563	0					
ANR	2551035	Identifier	gsscan		2550563	1					
ANR	2551036	PtrMemberAccess	upd -> gsbuf		2550563	1					
ANR	2551037	Identifier	upd		2550563	0					
ANR	2551038	Identifier	gsbuf		2550563	1					
ANR	2551039	Argument	0		2550563	1					
ANR	2551040	PrimaryExpression	0		2550563	0					
ANR	2551041	Argument	upd -> ngsbuf		2550563	2					
ANR	2551042	PtrMemberAccess	upd -> ngsbuf		2550563	0					
ANR	2551043	Identifier	upd		2550563	0					
ANR	2551044	Identifier	ngsbuf		2550563	1					
ANR	2551045	IfStatement	if ( 0 > ( * upd -> render ) ( upd ) )		2550563	1					
ANR	2551046	Condition	0 > ( * upd -> render ) ( upd )	1135:12:50412:50434	2550563	0	True				
ANR	2551047	RelationalExpression	0 > ( * upd -> render ) ( upd )		2550563	0		>			
ANR	2551048	PrimaryExpression	0		2550563	0					
ANR	2551049	CallExpression	( * upd -> render ) ( upd )		2550563	1					
ANR	2551050	Callee	* upd -> render		2550563	0					
ANR	2551051	UnaryOperationExpression	* upd -> render		2550563	0					
ANR	2551052	UnaryOperator	*		2550563	0					
ANR	2551053	PtrMemberAccess	upd -> render		2550563	1					
ANR	2551054	Identifier	upd		2550563	0					
ANR	2551055	Identifier	render		2550563	1					
ANR	2551056	ArgumentList	upd		2550563	1					
ANR	2551057	Argument	upd		2550563	0					
ANR	2551058	Identifier	upd		2550563	0					
ANR	2551059	CompoundStatement		103:37:3190:3190	2550563	1					
ANR	2551060	ExpressionStatement	"errprintf ( udev -> memory , ""Rendering aborted with error, yscnbuf = %4d\\n"" , upd -> yscnbuf )"	1137:12:50484:50585	2550563	0	True				
ANR	2551061	CallExpression	"errprintf ( udev -> memory , ""Rendering aborted with error, yscnbuf = %4d\\n"" , upd -> yscnbuf )"		2550563	0					
ANR	2551062	Callee	errprintf		2550563	0					
ANR	2551063	Identifier	errprintf		2550563	0					
ANR	2551064	ArgumentList	udev -> memory		2550563	1					
ANR	2551065	Argument	udev -> memory		2550563	0					
ANR	2551066	PtrMemberAccess	udev -> memory		2550563	0					
ANR	2551067	Identifier	udev		2550563	0					
ANR	2551068	Identifier	memory		2550563	1					
ANR	2551069	Argument	"""Rendering aborted with error, yscnbuf = %4d\\n"""		2550563	1					
ANR	2551070	PrimaryExpression	"""Rendering aborted with error, yscnbuf = %4d\\n"""		2550563	0					
ANR	2551071	Argument	upd -> yscnbuf		2550563	2					
ANR	2551072	PtrMemberAccess	upd -> yscnbuf		2550563	0					
ANR	2551073	Identifier	upd		2550563	0					
ANR	2551074	Identifier	yscnbuf		2550563	1					
ANR	2551075	BreakStatement	break ;	1140:12:50606:50611	2550563	1	True				
ANR	2551076	IfStatement	if ( ( upd -> yscnbuf ^ yfill ) & upd -> scnmsk )		2550563	2					
ANR	2551077	Condition	( upd -> yscnbuf ^ yfill ) & upd -> scnmsk	1147:9:50699:50734	2550563	0	True				
ANR	2551078	BitAndExpression	( upd -> yscnbuf ^ yfill ) & upd -> scnmsk		2550563	0		&			
ANR	2551079	ExclusiveOrExpression	upd -> yscnbuf ^ yfill		2550563	0		^			
ANR	2551080	PtrMemberAccess	upd -> yscnbuf		2550563	0					
ANR	2551081	Identifier	upd		2550563	0					
ANR	2551082	Identifier	yscnbuf		2550563	1					
ANR	2551083	Identifier	yfill		2550563	1					
ANR	2551084	PtrMemberAccess	upd -> scnmsk		2550563	1					
ANR	2551085	Identifier	upd		2550563	0					
ANR	2551086	Identifier	scnmsk		2550563	1					
ANR	2551087	BreakStatement	break ;	1147:47:50737:50742	2550563	1	True				
ANR	2551088	WhileStatement	while ( ( upd -> yscan - ints [ I_BEGSKIP ] + need ) < upd -> yscnbuf )		2550563	3					
ANR	2551089	Condition	( upd -> yscan - ints [ I_BEGSKIP ] + need ) < upd -> yscnbuf	1151:12:50795:50846	2550563	0	True				
ANR	2551090	RelationalExpression	( upd -> yscan - ints [ I_BEGSKIP ] + need ) < upd -> yscnbuf		2550563	0		<			
ANR	2551091	AdditiveExpression	upd -> yscan - ints [ I_BEGSKIP ] + need		2550563	0		-			
ANR	2551092	PtrMemberAccess	upd -> yscan		2550563	0					
ANR	2551093	Identifier	upd		2550563	0					
ANR	2551094	Identifier	yscan		2550563	1					
ANR	2551095	AdditiveExpression	ints [ I_BEGSKIP ] + need		2550563	1		+			
ANR	2551096	ArrayIndexing	ints [ I_BEGSKIP ]		2550563	0					
ANR	2551097	Identifier	ints		2550563	0					
ANR	2551098	Identifier	I_BEGSKIP		2550563	1					
ANR	2551099	Identifier	need		2550563	1					
ANR	2551100	PtrMemberAccess	upd -> yscnbuf		2550563	1					
ANR	2551101	Identifier	upd		2550563	0					
ANR	2551102	Identifier	yscnbuf		2550563	1					
ANR	2551103	CompoundStatement		119:66:3602:3602	2550563	1					
ANR	2551104	ExpressionStatement	"( * upd -> writer ) ( upd , out )"	1154:10:50899:50922	2550563	0	True				
ANR	2551105	CallExpression	"( * upd -> writer ) ( upd , out )"		2550563	0					
ANR	2551106	Callee	* upd -> writer		2550563	0					
ANR	2551107	UnaryOperationExpression	* upd -> writer		2550563	0					
ANR	2551108	UnaryOperator	*		2550563	0					
ANR	2551109	PtrMemberAccess	upd -> writer		2550563	1					
ANR	2551110	Identifier	upd		2550563	0					
ANR	2551111	Identifier	writer		2550563	1					
ANR	2551112	ArgumentList	upd		2550563	1					
ANR	2551113	Argument	upd		2550563	0					
ANR	2551114	Identifier	upd		2550563	0					
ANR	2551115	Argument	out		2550563	1					
ANR	2551116	Identifier	out		2550563	0					
ANR	2551117	IfStatement	if ( upd -> yscan >= upd -> pheight )		2550563	1					
ANR	2551118	Condition	upd -> yscan >= upd -> pheight	1157:13:50973:50998	2550563	0	True				
ANR	2551119	RelationalExpression	upd -> yscan >= upd -> pheight		2550563	0		>=			
ANR	2551120	PtrMemberAccess	upd -> yscan		2550563	0					
ANR	2551121	Identifier	upd		2550563	0					
ANR	2551122	Identifier	yscan		2550563	1					
ANR	2551123	PtrMemberAccess	upd -> pheight		2550563	1					
ANR	2551124	Identifier	upd		2550563	0					
ANR	2551125	Identifier	pheight		2550563	1					
ANR	2551126	BreakStatement	break ;	1157:41:51001:51006	2550563	1	True				
ANR	2551127	IfStatement	if ( upd -> flags & B_ABORT )		2550563	2					
ANR	2551128	Condition	upd -> flags & B_ABORT	1158:13:51021:51041	2550563	0	True				
ANR	2551129	BitAndExpression	upd -> flags & B_ABORT		2550563	0		&			
ANR	2551130	PtrMemberAccess	upd -> flags		2550563	0					
ANR	2551131	Identifier	upd		2550563	0					
ANR	2551132	Identifier	flags		2550563	1					
ANR	2551133	Identifier	B_ABORT		2550563	1					
ANR	2551134	CompoundStatement		126:37:3798:3798	2550563	1					
ANR	2551135	ExpressionStatement	"errprintf ( udev -> memory , ""Printing aborted upon interrupt, yscan = %4d\\n"" , upd -> yscan )"	1160:13:51093:51194	2550563	0	True				
ANR	2551136	CallExpression	"errprintf ( udev -> memory , ""Printing aborted upon interrupt, yscan = %4d\\n"" , upd -> yscan )"		2550563	0					
ANR	2551137	Callee	errprintf		2550563	0					
ANR	2551138	Identifier	errprintf		2550563	0					
ANR	2551139	ArgumentList	udev -> memory		2550563	1					
ANR	2551140	Argument	udev -> memory		2550563	0					
ANR	2551141	PtrMemberAccess	udev -> memory		2550563	0					
ANR	2551142	Identifier	udev		2550563	0					
ANR	2551143	Identifier	memory		2550563	1					
ANR	2551144	Argument	"""Printing aborted upon interrupt, yscan = %4d\\n"""		2550563	1					
ANR	2551145	PrimaryExpression	"""Printing aborted upon interrupt, yscan = %4d\\n"""		2550563	0					
ANR	2551146	Argument	upd -> yscan		2550563	2					
ANR	2551147	PtrMemberAccess	upd -> yscan		2550563	0					
ANR	2551148	Identifier	upd		2550563	0					
ANR	2551149	Identifier	yscan		2550563	1					
ANR	2551150	BreakStatement	break ;	1163:13:51216:51221	2550563	1	True				
ANR	2551151	IfStatement	if ( ( upd -> yscan - ints [ I_BEGSKIP ] + need ) < upd -> yscnbuf )		2550563	4					
ANR	2551152	Condition	( upd -> yscan - ints [ I_BEGSKIP ] + need ) < upd -> yscnbuf	1169:9:51305:51356	2550563	0	True				
ANR	2551153	RelationalExpression	( upd -> yscan - ints [ I_BEGSKIP ] + need ) < upd -> yscnbuf		2550563	0		<			
ANR	2551154	AdditiveExpression	upd -> yscan - ints [ I_BEGSKIP ] + need		2550563	0		-			
ANR	2551155	PtrMemberAccess	upd -> yscan		2550563	0					
ANR	2551156	Identifier	upd		2550563	0					
ANR	2551157	Identifier	yscan		2550563	1					
ANR	2551158	AdditiveExpression	ints [ I_BEGSKIP ] + need		2550563	1		+			
ANR	2551159	ArrayIndexing	ints [ I_BEGSKIP ]		2550563	0					
ANR	2551160	Identifier	ints		2550563	0					
ANR	2551161	Identifier	I_BEGSKIP		2550563	1					
ANR	2551162	Identifier	need		2550563	1					
ANR	2551163	PtrMemberAccess	upd -> yscnbuf		2550563	1					
ANR	2551164	Identifier	upd		2550563	0					
ANR	2551165	Identifier	yscnbuf		2550563	1					
ANR	2551166	BreakStatement	break ;	1169:63:51359:51364	2550563	1	True				
ANR	2551167	IfStatement	if ( ( upd -> pheight > upd -> yscan ) && ( 0 < upd -> strings [ S_ABORT ] . size ) )		2550563	34					
ANR	2551168	Condition	( upd -> pheight > upd -> yscan ) && ( 0 < upd -> strings [ S_ABORT ] . size )	1176:6:51496:51566	2550563	0	True				
ANR	2551169	AndExpression	( upd -> pheight > upd -> yscan ) && ( 0 < upd -> strings [ S_ABORT ] . size )		2550563	0		&&			
ANR	2551170	RelationalExpression	upd -> pheight > upd -> yscan		2550563	0		>			
ANR	2551171	PtrMemberAccess	upd -> pheight		2550563	0					
ANR	2551172	Identifier	upd		2550563	0					
ANR	2551173	Identifier	pheight		2550563	1					
ANR	2551174	PtrMemberAccess	upd -> yscan		2550563	1					
ANR	2551175	Identifier	upd		2550563	0					
ANR	2551176	Identifier	yscan		2550563	1					
ANR	2551177	RelationalExpression	0 < upd -> strings [ S_ABORT ] . size		2550563	1		<			
ANR	2551178	PrimaryExpression	0		2550563	0					
ANR	2551179	MemberAccess	upd -> strings [ S_ABORT ] . size		2550563	1					
ANR	2551180	ArrayIndexing	upd -> strings [ S_ABORT ]		2550563	0					
ANR	2551181	PtrMemberAccess	upd -> strings		2550563	0					
ANR	2551182	Identifier	upd		2550563	0					
ANR	2551183	Identifier	strings		2550563	1					
ANR	2551184	Identifier	S_ABORT		2550563	1					
ANR	2551185	Identifier	size		2550563	1					
ANR	2551186	CompoundStatement		145:42:4322:4322	2550563	1					
ANR	2551187	ExpressionStatement	"fwrite ( upd -> strings [ S_ABORT ] . data , 1 , upd -> strings [ S_ABORT ] . size , out )"	1178:6:51594:51661	2550563	0	True				
ANR	2551188	CallExpression	"fwrite ( upd -> strings [ S_ABORT ] . data , 1 , upd -> strings [ S_ABORT ] . size , out )"		2550563	0					
ANR	2551189	Callee	fwrite		2550563	0					
ANR	2551190	Identifier	fwrite		2550563	0					
ANR	2551191	ArgumentList	upd -> strings [ S_ABORT ] . data		2550563	1					
ANR	2551192	Argument	upd -> strings [ S_ABORT ] . data		2550563	0					
ANR	2551193	MemberAccess	upd -> strings [ S_ABORT ] . data		2550563	0					
ANR	2551194	ArrayIndexing	upd -> strings [ S_ABORT ]		2550563	0					
ANR	2551195	PtrMemberAccess	upd -> strings		2550563	0					
ANR	2551196	Identifier	upd		2550563	0					
ANR	2551197	Identifier	strings		2550563	1					
ANR	2551198	Identifier	S_ABORT		2550563	1					
ANR	2551199	Identifier	data		2550563	1					
ANR	2551200	Argument	1		2550563	1					
ANR	2551201	PrimaryExpression	1		2550563	0					
ANR	2551202	Argument	upd -> strings [ S_ABORT ] . size		2550563	2					
ANR	2551203	MemberAccess	upd -> strings [ S_ABORT ] . size		2550563	0					
ANR	2551204	ArrayIndexing	upd -> strings [ S_ABORT ]		2550563	0					
ANR	2551205	PtrMemberAccess	upd -> strings		2550563	0					
ANR	2551206	Identifier	upd		2550563	0					
ANR	2551207	Identifier	strings		2550563	1					
ANR	2551208	Identifier	S_ABORT		2550563	1					
ANR	2551209	Identifier	size		2550563	1					
ANR	2551210	Argument	out		2550563	3					
ANR	2551211	Identifier	out		2550563	0					
ANR	2551212	ExpressionStatement	upd -> flags &= ~B_OPEN	1180:6:51670:51691	2550563	1	True				
ANR	2551213	AssignmentExpression	upd -> flags &= ~B_OPEN		2550563	0		&=			
ANR	2551214	PtrMemberAccess	upd -> flags		2550563	0					
ANR	2551215	Identifier	upd		2550563	0					
ANR	2551216	Identifier	flags		2550563	1					
ANR	2551217	Identifier	~B_OPEN		2550563	1					
ANR	2551218	ElseStatement	else		2550563	0					
ANR	2551219	IfStatement	if ( 0 < upd -> strings [ S_END ] . size )		2550563	0					
ANR	2551220	Condition	0 < upd -> strings [ S_END ] . size	1186:13:51844:51874	2550563	0	True				
ANR	2551221	RelationalExpression	0 < upd -> strings [ S_END ] . size		2550563	0		<			
ANR	2551222	PrimaryExpression	0		2550563	0					
ANR	2551223	MemberAccess	upd -> strings [ S_END ] . size		2550563	1					
ANR	2551224	ArrayIndexing	upd -> strings [ S_END ]		2550563	0					
ANR	2551225	PtrMemberAccess	upd -> strings		2550563	0					
ANR	2551226	Identifier	upd		2550563	0					
ANR	2551227	Identifier	strings		2550563	1					
ANR	2551228	Identifier	S_END		2550563	1					
ANR	2551229	Identifier	size		2550563	1					
ANR	2551230	CompoundStatement		154:46:4630:4630	2550563	1					
ANR	2551231	ExpressionStatement	"fwrite ( upd -> strings [ S_END ] . data , 1 , upd -> strings [ S_END ] . size , out )"	1187:6:51885:51948	2550563	0	True				
ANR	2551232	CallExpression	"fwrite ( upd -> strings [ S_END ] . data , 1 , upd -> strings [ S_END ] . size , out )"		2550563	0					
ANR	2551233	Callee	fwrite		2550563	0					
ANR	2551234	Identifier	fwrite		2550563	0					
ANR	2551235	ArgumentList	upd -> strings [ S_END ] . data		2550563	1					
ANR	2551236	Argument	upd -> strings [ S_END ] . data		2550563	0					
ANR	2551237	MemberAccess	upd -> strings [ S_END ] . data		2550563	0					
ANR	2551238	ArrayIndexing	upd -> strings [ S_END ]		2550563	0					
ANR	2551239	PtrMemberAccess	upd -> strings		2550563	0					
ANR	2551240	Identifier	upd		2550563	0					
ANR	2551241	Identifier	strings		2550563	1					
ANR	2551242	Identifier	S_END		2550563	1					
ANR	2551243	Identifier	data		2550563	1					
ANR	2551244	Argument	1		2550563	1					
ANR	2551245	PrimaryExpression	1		2550563	0					
ANR	2551246	Argument	upd -> strings [ S_END ] . size		2550563	2					
ANR	2551247	MemberAccess	upd -> strings [ S_END ] . size		2550563	0					
ANR	2551248	ArrayIndexing	upd -> strings [ S_END ]		2550563	0					
ANR	2551249	PtrMemberAccess	upd -> strings		2550563	0					
ANR	2551250	Identifier	upd		2550563	0					
ANR	2551251	Identifier	strings		2550563	1					
ANR	2551252	Identifier	S_END		2550563	1					
ANR	2551253	Identifier	size		2550563	1					
ANR	2551254	Argument	out		2550563	3					
ANR	2551255	Identifier	out		2550563	0					
ANR	2551256	CompoundStatement		162:8:4809:4824	2550563	35					
ANR	2551257	IdentifierDeclStatement	gs_parsed_file_name_t parsed ;	1193:8:52018:52046	2550563	0	True				
ANR	2551258	IdentifierDecl	parsed		2550563	0					
ANR	2551259	IdentifierDeclType	gs_parsed_file_name_t		2550563	0					
ANR	2551260	Identifier	parsed		2550563	1					
ANR	2551261	IdentifierDeclStatement	const char * fmt ;	1194:8:52056:52071	2550563	1	True				
ANR	2551262	IdentifierDecl	* fmt		2550563	0					
ANR	2551263	IdentifierDeclType	const char *		2550563	0					
ANR	2551264	Identifier	fmt		2550563	1					
ANR	2551265	IfStatement	"if ( 0 <= gx_parse_output_file_name ( & parsed , & fmt , udev -> fname , strlen ( udev -> fname ) , udev -> memory ) && fmt )"		2550563	2					
ANR	2551266	Condition	"0 <= gx_parse_output_file_name ( & parsed , & fmt , udev -> fname , strlen ( udev -> fname ) , udev -> memory ) && fmt"	1196:12:52086:52240	2550563	0	True				
ANR	2551267	AndExpression	"0 <= gx_parse_output_file_name ( & parsed , & fmt , udev -> fname , strlen ( udev -> fname ) , udev -> memory ) && fmt"		2550563	0		&&			
ANR	2551268	RelationalExpression	"0 <= gx_parse_output_file_name ( & parsed , & fmt , udev -> fname , strlen ( udev -> fname ) , udev -> memory )"		2550563	0		<=			
ANR	2551269	PrimaryExpression	0		2550563	0					
ANR	2551270	CallExpression	"gx_parse_output_file_name ( & parsed , & fmt , udev -> fname , strlen ( udev -> fname ) , udev -> memory )"		2550563	1					
ANR	2551271	Callee	gx_parse_output_file_name		2550563	0					
ANR	2551272	Identifier	gx_parse_output_file_name		2550563	0					
ANR	2551273	ArgumentList	& parsed		2550563	1					
ANR	2551274	Argument	& parsed		2550563	0					
ANR	2551275	UnaryOperationExpression	& parsed		2550563	0					
ANR	2551276	UnaryOperator	&		2550563	0					
ANR	2551277	Identifier	parsed		2550563	1					
ANR	2551278	Argument	& fmt		2550563	1					
ANR	2551279	UnaryOperationExpression	& fmt		2550563	0					
ANR	2551280	UnaryOperator	&		2550563	0					
ANR	2551281	Identifier	fmt		2550563	1					
ANR	2551282	Argument	udev -> fname		2550563	2					
ANR	2551283	PtrMemberAccess	udev -> fname		2550563	0					
ANR	2551284	Identifier	udev		2550563	0					
ANR	2551285	Identifier	fname		2550563	1					
ANR	2551286	Argument	strlen ( udev -> fname )		2550563	3					
ANR	2551287	CallExpression	strlen ( udev -> fname )		2550563	0					
ANR	2551288	Callee	strlen		2550563	0					
ANR	2551289	Identifier	strlen		2550563	0					
ANR	2551290	ArgumentList	udev -> fname		2550563	1					
ANR	2551291	Argument	udev -> fname		2550563	0					
ANR	2551292	PtrMemberAccess	udev -> fname		2550563	0					
ANR	2551293	Identifier	udev		2550563	0					
ANR	2551294	Identifier	fname		2550563	1					
ANR	2551295	Argument	udev -> memory		2550563	4					
ANR	2551296	PtrMemberAccess	udev -> memory		2550563	0					
ANR	2551297	Identifier	udev		2550563	0					
ANR	2551298	Identifier	memory		2550563	1					
ANR	2551299	Identifier	fmt		2550563	1					
ANR	2551300	CompoundStatement		167:14:5009:5009	2550563	1					
ANR	2551301	IfStatement	if ( 0 < upd -> strings [ S_CLOSE ] . size )		2550563	0					
ANR	2551302	Condition	0 < upd -> strings [ S_CLOSE ] . size	1200:16:52274:52303	2550563	0	True				
ANR	2551303	RelationalExpression	0 < upd -> strings [ S_CLOSE ] . size		2550563	0		<			
ANR	2551304	PrimaryExpression	0		2550563	0					
ANR	2551305	MemberAccess	upd -> strings [ S_CLOSE ] . size		2550563	1					
ANR	2551306	ArrayIndexing	upd -> strings [ S_CLOSE ]		2550563	0					
ANR	2551307	PtrMemberAccess	upd -> strings		2550563	0					
ANR	2551308	Identifier	upd		2550563	0					
ANR	2551309	Identifier	strings		2550563	1					
ANR	2551310	Identifier	S_CLOSE		2550563	1					
ANR	2551311	Identifier	size		2550563	1					
ANR	2551312	ExpressionStatement	"fwrite ( upd -> strings [ S_CLOSE ] . data , 1 , upd -> strings [ S_CLOSE ] . size , out )"	1201:16:52322:52389	2550563	1	True				
ANR	2551313	CallExpression	"fwrite ( upd -> strings [ S_CLOSE ] . data , 1 , upd -> strings [ S_CLOSE ] . size , out )"		2550563	0					
ANR	2551314	Callee	fwrite		2550563	0					
ANR	2551315	Identifier	fwrite		2550563	0					
ANR	2551316	ArgumentList	upd -> strings [ S_CLOSE ] . data		2550563	1					
ANR	2551317	Argument	upd -> strings [ S_CLOSE ] . data		2550563	0					
ANR	2551318	MemberAccess	upd -> strings [ S_CLOSE ] . data		2550563	0					
ANR	2551319	ArrayIndexing	upd -> strings [ S_CLOSE ]		2550563	0					
ANR	2551320	PtrMemberAccess	upd -> strings		2550563	0					
ANR	2551321	Identifier	upd		2550563	0					
ANR	2551322	Identifier	strings		2550563	1					
ANR	2551323	Identifier	S_CLOSE		2550563	1					
ANR	2551324	Identifier	data		2550563	1					
ANR	2551325	Argument	1		2550563	1					
ANR	2551326	PrimaryExpression	1		2550563	0					
ANR	2551327	Argument	upd -> strings [ S_CLOSE ] . size		2550563	2					
ANR	2551328	MemberAccess	upd -> strings [ S_CLOSE ] . size		2550563	0					
ANR	2551329	ArrayIndexing	upd -> strings [ S_CLOSE ]		2550563	0					
ANR	2551330	PtrMemberAccess	upd -> strings		2550563	0					
ANR	2551331	Identifier	upd		2550563	0					
ANR	2551332	Identifier	strings		2550563	1					
ANR	2551333	Identifier	S_CLOSE		2550563	1					
ANR	2551334	Identifier	size		2550563	1					
ANR	2551335	Argument	out		2550563	3					
ANR	2551336	Identifier	out		2550563	0					
ANR	2551337	ExpressionStatement	upd -> flags &= ~B_OPEN	1202:12:52403:52424	2550563	1	True				
ANR	2551338	AssignmentExpression	upd -> flags &= ~B_OPEN		2550563	0		&=			
ANR	2551339	PtrMemberAccess	upd -> flags		2550563	0					
ANR	2551340	Identifier	upd		2550563	0					
ANR	2551341	Identifier	flags		2550563	1					
ANR	2551342	Identifier	~B_OPEN		2550563	1					
ANR	2551343	ExpressionStatement	fflush ( out )	1210:3:52485:52496	2550563	36	True				
ANR	2551344	CallExpression	fflush ( out )		2550563	0					
ANR	2551345	Callee	fflush		2550563	0					
ANR	2551346	Identifier	fflush		2550563	0					
ANR	2551347	ArgumentList	out		2550563	1					
ANR	2551348	Argument	out		2550563	0					
ANR	2551349	Identifier	out		2550563	0					
ANR	2551350	IfStatement	if ( upd -> pheight > upd -> yscan )		2550563	37					
ANR	2551351	Condition	upd -> pheight > upd -> yscan	1212:6:52538:52562	2550563	0	True				
ANR	2551352	RelationalExpression	upd -> pheight > upd -> yscan		2550563	0		>			
ANR	2551353	PtrMemberAccess	upd -> pheight		2550563	0					
ANR	2551354	Identifier	upd		2550563	0					
ANR	2551355	Identifier	pheight		2550563	1					
ANR	2551356	PtrMemberAccess	upd -> yscan		2550563	1					
ANR	2551357	Identifier	upd		2550563	0					
ANR	2551358	Identifier	yscan		2550563	1					
ANR	2551359	ExpressionStatement	error = gs_error_interrupt	1212:33:52565:52591	2550563	1	True				
ANR	2551360	AssignmentExpression	error = gs_error_interrupt		2550563	0		=			
ANR	2551361	Identifier	error		2550563	0					
ANR	2551362	Identifier	gs_error_interrupt		2550563	1					
ANR	2551363	ElseStatement	else		2550563	0					
ANR	2551364	IfStatement	if ( ferror ( out ) )		2550563	0					
ANR	2551365	Condition	ferror ( out )	1213:11:52604:52614	2550563	0	True				
ANR	2551366	CallExpression	ferror ( out )		2550563	0					
ANR	2551367	Callee	ferror		2550563	0					
ANR	2551368	Identifier	ferror		2550563	0					
ANR	2551369	ArgumentList	out		2550563	1					
ANR	2551370	Argument	out		2550563	0					
ANR	2551371	Identifier	out		2550563	0					
ANR	2551372	ExpressionStatement	error = gs_error_ioerror	1213:33:52626:52650	2550563	1	True				
ANR	2551373	AssignmentExpression	error = gs_error_ioerror		2550563	0		=			
ANR	2551374	Identifier	error		2550563	0					
ANR	2551375	Identifier	gs_error_ioerror		2550563	1					
ANR	2551376	ElseStatement	else		2550563	0					
ANR	2551377	ExpressionStatement	error = 0	1214:33:52685:52694	2550563	0	True				
ANR	2551378	AssignmentExpression	error = 0		2550563	0		=			
ANR	2551379	Identifier	error		2550563	0					
ANR	2551380	PrimaryExpression	0		2550563	1					
ANR	2551381	ExpressionStatement	"errprintf ( udev -> memory , ""RETURN: %d = upd_print_page(0x%05lx,0x%05lx)\\n"" , error , ( long ) udev , ( long ) out )"	1217:3:52734:52842	2550563	38	True				
ANR	2551382	CallExpression	"errprintf ( udev -> memory , ""RETURN: %d = upd_print_page(0x%05lx,0x%05lx)\\n"" , error , ( long ) udev , ( long ) out )"		2550563	0					
ANR	2551383	Callee	errprintf		2550563	0					
ANR	2551384	Identifier	errprintf		2550563	0					
ANR	2551385	ArgumentList	udev -> memory		2550563	1					
ANR	2551386	Argument	udev -> memory		2550563	0					
ANR	2551387	PtrMemberAccess	udev -> memory		2550563	0					
ANR	2551388	Identifier	udev		2550563	0					
ANR	2551389	Identifier	memory		2550563	1					
ANR	2551390	Argument	"""RETURN: %d = upd_print_page(0x%05lx,0x%05lx)\\n"""		2550563	1					
ANR	2551391	PrimaryExpression	"""RETURN: %d = upd_print_page(0x%05lx,0x%05lx)\\n"""		2550563	0					
ANR	2551392	Argument	error		2550563	2					
ANR	2551393	Identifier	error		2550563	0					
ANR	2551394	Argument	( long ) udev		2550563	3					
ANR	2551395	CastExpression	( long ) udev		2550563	0					
ANR	2551396	CastTarget	long		2550563	0					
ANR	2551397	Identifier	udev		2550563	1					
ANR	2551398	Argument	( long ) out		2550563	4					
ANR	2551399	CastExpression	( long ) out		2550563	0					
ANR	2551400	CastTarget	long		2550563	0					
ANR	2551401	Identifier	out		2550563	1					
ANR	2551402	ExpressionStatement	sigupd = oldupd	1222:6:52903:52918	2550563	39	True				
ANR	2551403	AssignmentExpression	sigupd = oldupd		2550563	0		=			
ANR	2551404	Identifier	sigupd		2550563	0					
ANR	2551405	Identifier	oldupd		2550563	1					
ANR	2551406	ExpressionStatement	"( void ) signal ( SIGINT , oldint )"	1223:6:52926:52955	2550563	40	True				
ANR	2551407	CastExpression	"( void ) signal ( SIGINT , oldint )"		2550563	0					
ANR	2551408	CastTarget	void		2550563	0					
ANR	2551409	CallExpression	"signal ( SIGINT , oldint )"		2550563	1					
ANR	2551410	Callee	signal		2550563	0					
ANR	2551411	Identifier	signal		2550563	0					
ANR	2551412	ArgumentList	SIGINT		2550563	1					
ANR	2551413	Argument	SIGINT		2550563	0					
ANR	2551414	Identifier	SIGINT		2550563	0					
ANR	2551415	Argument	oldint		2550563	1					
ANR	2551416	Identifier	oldint		2550563	0					
ANR	2551417	ExpressionStatement	"( void ) signal ( SIGTERM , oldterm )"	1224:6:52963:52993	2550563	41	True				
ANR	2551418	CastExpression	"( void ) signal ( SIGTERM , oldterm )"		2550563	0					
ANR	2551419	CastTarget	void		2550563	0					
ANR	2551420	CallExpression	"signal ( SIGTERM , oldterm )"		2550563	1					
ANR	2551421	Callee	signal		2550563	0					
ANR	2551422	Identifier	signal		2550563	0					
ANR	2551423	ArgumentList	SIGTERM		2550563	1					
ANR	2551424	Argument	SIGTERM		2550563	0					
ANR	2551425	Identifier	SIGTERM		2550563	0					
ANR	2551426	Argument	oldterm		2550563	1					
ANR	2551427	Identifier	oldterm		2550563	0					
ANR	2551428	ReturnStatement	return error ;	1227:3:53044:53056	2550563	42	True				
ANR	2551429	Identifier	error		2550563	0					
ANR	2551430	ReturnType	static int		2550563	1					
ANR	2551431	Identifier	upd_print_page		2550563	2					
ANR	2551432	ParameterList	"gx_device_printer * pdev , FILE * out"		2550563	3					
ANR	2551433	Parameter	gx_device_printer * pdev	1032:15:47210:47232	2550563	0	True				
ANR	2551434	ParameterType	gx_device_printer *		2550563	0					
ANR	2551435	Identifier	pdev		2550563	1					
ANR	2551436	Parameter	FILE * out	1032:40:47235:47243	2550563	1	True				
ANR	2551437	ParameterType	FILE *		2550563	0					
ANR	2551438	Identifier	out		2550563	1					
ANR	2551439	CFGEntryNode	ENTRY		2550563		True				
ANR	2551440	CFGExitNode	EXIT		2550563		True				
ANR	2551441	Symbol	I_PINS2WRITE		2550563						
ANR	2551442	Symbol	* S_CLOSE		2550563						
ANR	2551443	Symbol	* ints		2550563						
ANR	2551444	Symbol	upd -> icomp		2550563						
ANR	2551445	Symbol	upd_signal_handler		2550563						
ANR	2551446	Symbol	get_bits		2550563						
ANR	2551447	Symbol	gs_error_undefined		2550563						
ANR	2551448	Symbol	upd -> ipass		2550563						
ANR	2551449	Symbol	& upd -> gsscan		2550563						
ANR	2551450	Symbol	fmt		2550563						
ANR	2551451	Symbol	sigupd		2550563						
ANR	2551452	Symbol	upd -> yscan		2550563						
ANR	2551453	Symbol	pdev		2550563						
ANR	2551454	Symbol	strlen		2550563						
ANR	2551455	Symbol	* udev		2550563						
ANR	2551456	Symbol	& parsed		2550563						
ANR	2551457	Symbol	pdev -> memory		2550563						
ANR	2551458	Symbol	upd -> strings [ S_CLOSE ] . size		2550563						
ANR	2551459	Symbol	* I_BEGSKIP		2550563						
ANR	2551460	Symbol	S_BEGIN		2550563						
ANR	2551461	Symbol	upd -> strings [ S_END ] . size		2550563						
ANR	2551462	Symbol	signal		2550563						
ANR	2551463	Symbol	NULL		2550563						
ANR	2551464	Symbol	yfill		2550563						
ANR	2551465	Symbol	need		2550563						
ANR	2551466	Symbol	upd -> start_writer		2550563						
ANR	2551467	Symbol	upd		2550563						
ANR	2551468	Symbol	oldupd		2550563						
ANR	2551469	Symbol	upd -> ixpass		2550563						
ANR	2551470	Symbol	* I_NYPASS		2550563						
ANR	2551471	Symbol	upd -> strings [ S_ABORT ] . data		2550563						
ANR	2551472	Symbol	ferror		2550563						
ANR	2551473	Symbol	upd -> xprinter		2550563						
ANR	2551474	Symbol	S_OPEN		2550563						
ANR	2551475	Symbol	upd -> yscnbuf		2550563						
ANR	2551476	Symbol	& fmt		2550563						
ANR	2551477	Symbol	udev		2550563						
ANR	2551478	Symbol	SIGINT		2550563						
ANR	2551479	Symbol	"* dev_proc ( udev , get_bits )"		2550563						
ANR	2551480	Symbol	parsed		2550563						
ANR	2551481	Symbol	upd -> ints		2550563						
ANR	2551482	Symbol	upd -> gsbuf		2550563						
ANR	2551483	Symbol	B_ERROR		2550563						
ANR	2551484	Symbol	upd -> pheight		2550563						
ANR	2551485	Symbol	* upd -> render		2550563						
ANR	2551486	Symbol	upd -> strings [ S_OPEN ] . data		2550563						
ANR	2551487	Symbol	upd -> strings [ S_BEGIN ] . size		2550563						
ANR	2551488	Symbol	upd -> gsscan		2550563						
ANR	2551489	Symbol	* S_BEGIN		2550563						
ANR	2551490	Symbol	oldterm		2550563						
ANR	2551491	Symbol	* dev_proc		2550563						
ANR	2551492	Symbol	* S_END		2550563						
ANR	2551493	Symbol	upd -> strings		2550563						
ANR	2551494	Symbol	error		2550563						
ANR	2551495	Symbol	udev -> fname		2550563						
ANR	2551496	Symbol	out		2550563						
ANR	2551497	Symbol	upd -> flags		2550563						
ANR	2551498	Symbol	upd -> gsheight		2550563						
ANR	2551499	Symbol	S_ABORT		2550563						
ANR	2551500	Symbol	udev -> upd		2550563						
ANR	2551501	Symbol	I_BEGSKIP		2550563						
ANR	2551502	Symbol	upd -> strings [ S_ABORT ] . size		2550563						
ANR	2551503	Symbol	* upd		2550563						
ANR	2551504	Symbol	ints		2550563						
ANR	2551505	Symbol	* S_OPEN		2550563						
ANR	2551506	Symbol	dev_proc		2550563						
ANR	2551507	Symbol	B_OPEN		2550563						
ANR	2551508	Symbol	I_NYPASS		2550563						
ANR	2551509	Symbol	SIGTERM		2550563						
ANR	2551510	Symbol	upd -> start_render		2550563						
ANR	2551511	Symbol	* upd -> strings		2550563						
ANR	2551512	Symbol	oldint		2550563						
ANR	2551513	Symbol	udev -> memory		2550563						
ANR	2551514	Symbol	upd -> scnmsk		2550563						
ANR	2551515	Symbol	gx_parse_output_file_name		2550563						
ANR	2551516	Symbol	upd -> strings [ S_CLOSE ] . data		2550563						
ANR	2551517	Symbol	gs_error_ioerror		2550563						
ANR	2551518	Symbol	upd -> render		2550563						
ANR	2551519	Symbol	B_OK4GO		2550563						
ANR	2551520	Symbol	upd -> yprinter		2550563						
ANR	2551521	Symbol	upd -> strings [ S_BEGIN ] . data		2550563						
ANR	2551522	Symbol	S_END		2550563						
ANR	2551523	Symbol	* I_PINS2WRITE		2550563						
ANR	2551524	Symbol	gs_error_interrupt		2550563						
ANR	2551525	Symbol	upd -> writer		2550563						
ANR	2551526	Symbol	~B_OPEN		2550563						
ANR	2551527	Symbol	upd -> strings [ S_OPEN ] . size		2550563						
ANR	2551528	Symbol	upd -> nscnbuf		2550563						
ANR	2551529	Symbol	* pdev		2550563						
ANR	2551530	Symbol	upd -> lf		2550563						
ANR	2551531	Symbol	B_ABORT		2550563						
ANR	2551532	Symbol	S_CLOSE		2550563						
ANR	2551533	Symbol	* S_ABORT		2550563						
ANR	2551534	Symbol	upd -> strings [ S_END ] . data		2550563						
ANR	2551535	Symbol	* * upd		2550563						
ANR	2551536	Symbol	upd -> ngsbuf		2550563						
ANR	2551537	Function	upd_open	1245:0:53779:61085							
ANR	2551538	FunctionDef	upd_open (gx_device * pdev)		2551537	0					
ANR	2551539	CompoundStatement		1247:0:53816:61085	2551537	0					
ANR	2551540	IdentifierDeclStatement	upd_device * udev = ( upd_device * ) pdev ;	1248:3:53821:53863	2551537	0	True				
ANR	2551541	IdentifierDecl	* udev = ( upd_device * ) pdev		2551537	0					
ANR	2551542	IdentifierDeclType	upd_device *		2551537	0					
ANR	2551543	Identifier	udev		2551537	1					
ANR	2551544	AssignmentExpression	* udev = ( upd_device * ) pdev		2551537	2		=			
ANR	2551545	Identifier	udev		2551537	0					
ANR	2551546	CastExpression	( upd_device * ) pdev		2551537	1					
ANR	2551547	CastTarget	upd_device *		2551537	0					
ANR	2551548	Identifier	pdev		2551537	1					
ANR	2551549	IdentifierDeclStatement	upd_p upd = udev -> upd ;	1249:3:53868:53900	2551537	1	True				
ANR	2551550	IdentifierDecl	upd = udev -> upd		2551537	0					
ANR	2551551	IdentifierDeclType	upd_p		2551537	0					
ANR	2551552	Identifier	upd		2551537	1					
ANR	2551553	AssignmentExpression	upd = udev -> upd		2551537	2		=			
ANR	2551554	Identifier	upd		2551537	0					
ANR	2551555	PtrMemberAccess	udev -> upd		2551537	1					
ANR	2551556	Identifier	udev		2551537	0					
ANR	2551557	Identifier	upd		2551537	1					
ANR	2551558	IdentifierDeclStatement	int error ;	1250:3:53905:53927	2551537	2	True				
ANR	2551559	IdentifierDecl	error		2551537	0					
ANR	2551560	IdentifierDeclType	int		2551537	0					
ANR	2551561	Identifier	error		2551537	1					
ANR	2551562	ExpressionStatement	"errprintf ( udev -> memory , ""CALL: upd_open(0x%05lx)\\n"" , ( long ) pdev )"	1253:6:53970:54034	2551537	3	True				
ANR	2551563	CallExpression	"errprintf ( udev -> memory , ""CALL: upd_open(0x%05lx)\\n"" , ( long ) pdev )"		2551537	0					
ANR	2551564	Callee	errprintf		2551537	0					
ANR	2551565	Identifier	errprintf		2551537	0					
ANR	2551566	ArgumentList	udev -> memory		2551537	1					
ANR	2551567	Argument	udev -> memory		2551537	0					
ANR	2551568	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2551569	Identifier	udev		2551537	0					
ANR	2551570	Identifier	memory		2551537	1					
ANR	2551571	Argument	"""CALL: upd_open(0x%05lx)\\n"""		2551537	1					
ANR	2551572	PrimaryExpression	"""CALL: upd_open(0x%05lx)\\n"""		2551537	0					
ANR	2551573	Argument	( long ) pdev		2551537	2					
ANR	2551574	CastExpression	( long ) pdev		2551537	0					
ANR	2551575	CastTarget	long		2551537	0					
ANR	2551576	Identifier	pdev		2551537	1					
ANR	2551577	IfStatement	if ( ( NULL != upd ) && ( NULL != upd -> float_a [ FA_MARGINS ] . data ) && ( 4 == upd -> float_a [ FA_MARGINS ] . size ) )		2551537	4					
ANR	2551578	Condition	( NULL != upd ) && ( NULL != upd -> float_a [ FA_MARGINS ] . data ) && ( 4 == upd -> float_a [ FA_MARGINS ] . size )	1258:6:54082:54192	2551537	0	True				
ANR	2551579	AndExpression	( NULL != upd ) && ( NULL != upd -> float_a [ FA_MARGINS ] . data ) && ( 4 == upd -> float_a [ FA_MARGINS ] . size )		2551537	0		&&			
ANR	2551580	EqualityExpression	NULL != upd		2551537	0		!=			
ANR	2551581	Identifier	NULL		2551537	0					
ANR	2551582	Identifier	upd		2551537	1					
ANR	2551583	AndExpression	( NULL != upd -> float_a [ FA_MARGINS ] . data ) && ( 4 == upd -> float_a [ FA_MARGINS ] . size )		2551537	1		&&			
ANR	2551584	EqualityExpression	NULL != upd -> float_a [ FA_MARGINS ] . data		2551537	0		!=			
ANR	2551585	Identifier	NULL		2551537	0					
ANR	2551586	MemberAccess	upd -> float_a [ FA_MARGINS ] . data		2551537	1					
ANR	2551587	ArrayIndexing	upd -> float_a [ FA_MARGINS ]		2551537	0					
ANR	2551588	PtrMemberAccess	upd -> float_a		2551537	0					
ANR	2551589	Identifier	upd		2551537	0					
ANR	2551590	Identifier	float_a		2551537	1					
ANR	2551591	Identifier	FA_MARGINS		2551537	1					
ANR	2551592	Identifier	data		2551537	1					
ANR	2551593	EqualityExpression	4 == upd -> float_a [ FA_MARGINS ] . size		2551537	1		==			
ANR	2551594	PrimaryExpression	4		2551537	0					
ANR	2551595	MemberAccess	upd -> float_a [ FA_MARGINS ] . size		2551537	1					
ANR	2551596	ArrayIndexing	upd -> float_a [ FA_MARGINS ]		2551537	0					
ANR	2551597	PtrMemberAccess	upd -> float_a		2551537	0					
ANR	2551598	Identifier	upd		2551537	0					
ANR	2551599	Identifier	float_a		2551537	1					
ANR	2551600	Identifier	FA_MARGINS		2551537	1					
ANR	2551601	Identifier	size		2551537	1					
ANR	2551602	CompoundStatement		15:6:390:400	2551537	1					
ANR	2551603	IdentifierDeclStatement	float m [ 4 ] ;	1261:6:54207:54217	2551537	0	True				
ANR	2551604	IdentifierDecl	m [ 4 ]		2551537	0					
ANR	2551605	IdentifierDeclType	float [ 4 ]		2551537	0					
ANR	2551606	Identifier	m		2551537	1					
ANR	2551607	PrimaryExpression	4		2551537	2					
ANR	2551608	ExpressionStatement	m [ 1 ] = upd -> float_a [ FA_MARGINS ] . data [ 1 ] / 72.0	1262:6:54225:54271	2551537	1	True				
ANR	2551609	AssignmentExpression	m [ 1 ] = upd -> float_a [ FA_MARGINS ] . data [ 1 ] / 72.0		2551537	0		=			
ANR	2551610	ArrayIndexing	m [ 1 ]		2551537	0					
ANR	2551611	Identifier	m		2551537	0					
ANR	2551612	PrimaryExpression	1		2551537	1					
ANR	2551613	MultiplicativeExpression	upd -> float_a [ FA_MARGINS ] . data [ 1 ] / 72.0		2551537	1		/			
ANR	2551614	ArrayIndexing	upd -> float_a [ FA_MARGINS ] . data [ 1 ]		2551537	0					
ANR	2551615	MemberAccess	upd -> float_a [ FA_MARGINS ] . data		2551537	0					
ANR	2551616	ArrayIndexing	upd -> float_a [ FA_MARGINS ]		2551537	0					
ANR	2551617	PtrMemberAccess	upd -> float_a		2551537	0					
ANR	2551618	Identifier	upd		2551537	0					
ANR	2551619	Identifier	float_a		2551537	1					
ANR	2551620	Identifier	FA_MARGINS		2551537	1					
ANR	2551621	Identifier	data		2551537	1					
ANR	2551622	PrimaryExpression	1		2551537	1					
ANR	2551623	PrimaryExpression	72.0		2551537	1					
ANR	2551624	ExpressionStatement	m [ 3 ] = upd -> float_a [ FA_MARGINS ] . data [ 3 ] / 72.0	1263:6:54279:54325	2551537	2	True				
ANR	2551625	AssignmentExpression	m [ 3 ] = upd -> float_a [ FA_MARGINS ] . data [ 3 ] / 72.0		2551537	0		=			
ANR	2551626	ArrayIndexing	m [ 3 ]		2551537	0					
ANR	2551627	Identifier	m		2551537	0					
ANR	2551628	PrimaryExpression	3		2551537	1					
ANR	2551629	MultiplicativeExpression	upd -> float_a [ FA_MARGINS ] . data [ 3 ] / 72.0		2551537	1		/			
ANR	2551630	ArrayIndexing	upd -> float_a [ FA_MARGINS ] . data [ 3 ]		2551537	0					
ANR	2551631	MemberAccess	upd -> float_a [ FA_MARGINS ] . data		2551537	0					
ANR	2551632	ArrayIndexing	upd -> float_a [ FA_MARGINS ]		2551537	0					
ANR	2551633	PtrMemberAccess	upd -> float_a		2551537	0					
ANR	2551634	Identifier	upd		2551537	0					
ANR	2551635	Identifier	float_a		2551537	1					
ANR	2551636	Identifier	FA_MARGINS		2551537	1					
ANR	2551637	Identifier	data		2551537	1					
ANR	2551638	PrimaryExpression	3		2551537	1					
ANR	2551639	PrimaryExpression	72.0		2551537	1					
ANR	2551640	IfStatement	if ( B_YFLIP & upd -> flags )		2551537	3					
ANR	2551641	Condition	B_YFLIP & upd -> flags	1264:9:54336:54355	2551537	0	True				
ANR	2551642	BitAndExpression	B_YFLIP & upd -> flags		2551537	0		&			
ANR	2551643	Identifier	B_YFLIP		2551537	0					
ANR	2551644	PtrMemberAccess	upd -> flags		2551537	1					
ANR	2551645	Identifier	upd		2551537	0					
ANR	2551646	Identifier	flags		2551537	1					
ANR	2551647	CompoundStatement		18:31:541:541	2551537	1					
ANR	2551648	ExpressionStatement	m [ 0 ] = upd -> float_a [ FA_MARGINS ] . data [ 2 ] / 72.0	1265:9:54369:54415	2551537	0	True				
ANR	2551649	AssignmentExpression	m [ 0 ] = upd -> float_a [ FA_MARGINS ] . data [ 2 ] / 72.0		2551537	0		=			
ANR	2551650	ArrayIndexing	m [ 0 ]		2551537	0					
ANR	2551651	Identifier	m		2551537	0					
ANR	2551652	PrimaryExpression	0		2551537	1					
ANR	2551653	MultiplicativeExpression	upd -> float_a [ FA_MARGINS ] . data [ 2 ] / 72.0		2551537	1		/			
ANR	2551654	ArrayIndexing	upd -> float_a [ FA_MARGINS ] . data [ 2 ]		2551537	0					
ANR	2551655	MemberAccess	upd -> float_a [ FA_MARGINS ] . data		2551537	0					
ANR	2551656	ArrayIndexing	upd -> float_a [ FA_MARGINS ]		2551537	0					
ANR	2551657	PtrMemberAccess	upd -> float_a		2551537	0					
ANR	2551658	Identifier	upd		2551537	0					
ANR	2551659	Identifier	float_a		2551537	1					
ANR	2551660	Identifier	FA_MARGINS		2551537	1					
ANR	2551661	Identifier	data		2551537	1					
ANR	2551662	PrimaryExpression	2		2551537	1					
ANR	2551663	PrimaryExpression	72.0		2551537	1					
ANR	2551664	ExpressionStatement	m [ 2 ] = upd -> float_a [ FA_MARGINS ] . data [ 0 ] / 72.0	1266:9:54426:54472	2551537	1	True				
ANR	2551665	AssignmentExpression	m [ 2 ] = upd -> float_a [ FA_MARGINS ] . data [ 0 ] / 72.0		2551537	0		=			
ANR	2551666	ArrayIndexing	m [ 2 ]		2551537	0					
ANR	2551667	Identifier	m		2551537	0					
ANR	2551668	PrimaryExpression	2		2551537	1					
ANR	2551669	MultiplicativeExpression	upd -> float_a [ FA_MARGINS ] . data [ 0 ] / 72.0		2551537	1		/			
ANR	2551670	ArrayIndexing	upd -> float_a [ FA_MARGINS ] . data [ 0 ]		2551537	0					
ANR	2551671	MemberAccess	upd -> float_a [ FA_MARGINS ] . data		2551537	0					
ANR	2551672	ArrayIndexing	upd -> float_a [ FA_MARGINS ]		2551537	0					
ANR	2551673	PtrMemberAccess	upd -> float_a		2551537	0					
ANR	2551674	Identifier	upd		2551537	0					
ANR	2551675	Identifier	float_a		2551537	1					
ANR	2551676	Identifier	FA_MARGINS		2551537	1					
ANR	2551677	Identifier	data		2551537	1					
ANR	2551678	PrimaryExpression	0		2551537	1					
ANR	2551679	PrimaryExpression	72.0		2551537	1					
ANR	2551680	ElseStatement	else		2551537	0					
ANR	2551681	CompoundStatement		21:13:670:670	2551537	0					
ANR	2551682	ExpressionStatement	m [ 0 ] = upd -> float_a [ FA_MARGINS ] . data [ 0 ] / 72.0	1268:9:54498:54544	2551537	0	True				
ANR	2551683	AssignmentExpression	m [ 0 ] = upd -> float_a [ FA_MARGINS ] . data [ 0 ] / 72.0		2551537	0		=			
ANR	2551684	ArrayIndexing	m [ 0 ]		2551537	0					
ANR	2551685	Identifier	m		2551537	0					
ANR	2551686	PrimaryExpression	0		2551537	1					
ANR	2551687	MultiplicativeExpression	upd -> float_a [ FA_MARGINS ] . data [ 0 ] / 72.0		2551537	1		/			
ANR	2551688	ArrayIndexing	upd -> float_a [ FA_MARGINS ] . data [ 0 ]		2551537	0					
ANR	2551689	MemberAccess	upd -> float_a [ FA_MARGINS ] . data		2551537	0					
ANR	2551690	ArrayIndexing	upd -> float_a [ FA_MARGINS ]		2551537	0					
ANR	2551691	PtrMemberAccess	upd -> float_a		2551537	0					
ANR	2551692	Identifier	upd		2551537	0					
ANR	2551693	Identifier	float_a		2551537	1					
ANR	2551694	Identifier	FA_MARGINS		2551537	1					
ANR	2551695	Identifier	data		2551537	1					
ANR	2551696	PrimaryExpression	0		2551537	1					
ANR	2551697	PrimaryExpression	72.0		2551537	1					
ANR	2551698	ExpressionStatement	m [ 2 ] = upd -> float_a [ FA_MARGINS ] . data [ 2 ] / 72.0	1269:9:54555:54601	2551537	1	True				
ANR	2551699	AssignmentExpression	m [ 2 ] = upd -> float_a [ FA_MARGINS ] . data [ 2 ] / 72.0		2551537	0		=			
ANR	2551700	ArrayIndexing	m [ 2 ]		2551537	0					
ANR	2551701	Identifier	m		2551537	0					
ANR	2551702	PrimaryExpression	2		2551537	1					
ANR	2551703	MultiplicativeExpression	upd -> float_a [ FA_MARGINS ] . data [ 2 ] / 72.0		2551537	1		/			
ANR	2551704	ArrayIndexing	upd -> float_a [ FA_MARGINS ] . data [ 2 ]		2551537	0					
ANR	2551705	MemberAccess	upd -> float_a [ FA_MARGINS ] . data		2551537	0					
ANR	2551706	ArrayIndexing	upd -> float_a [ FA_MARGINS ]		2551537	0					
ANR	2551707	PtrMemberAccess	upd -> float_a		2551537	0					
ANR	2551708	Identifier	upd		2551537	0					
ANR	2551709	Identifier	float_a		2551537	1					
ANR	2551710	Identifier	FA_MARGINS		2551537	1					
ANR	2551711	Identifier	data		2551537	1					
ANR	2551712	PrimaryExpression	2		2551537	1					
ANR	2551713	PrimaryExpression	72.0		2551537	1					
ANR	2551714	ExpressionStatement	"gx_device_set_margins ( ( gx_device * ) udev , m , true )"	1271:6:54617:54667	2551537	4	True				
ANR	2551715	CallExpression	"gx_device_set_margins ( ( gx_device * ) udev , m , true )"		2551537	0					
ANR	2551716	Callee	gx_device_set_margins		2551537	0					
ANR	2551717	Identifier	gx_device_set_margins		2551537	0					
ANR	2551718	ArgumentList	( gx_device * ) udev		2551537	1					
ANR	2551719	Argument	( gx_device * ) udev		2551537	0					
ANR	2551720	CastExpression	( gx_device * ) udev		2551537	0					
ANR	2551721	CastTarget	gx_device *		2551537	0					
ANR	2551722	Identifier	udev		2551537	1					
ANR	2551723	Argument	m		2551537	1					
ANR	2551724	Identifier	m		2551537	0					
ANR	2551725	Argument	true		2551537	2					
ANR	2551726	Identifier	true		2551537	0					
ANR	2551727	ExpressionStatement	error = gdev_prn_open ( pdev )	1275:3:54712:54739	2551537	5	True				
ANR	2551728	AssignmentExpression	error = gdev_prn_open ( pdev )		2551537	0		=			
ANR	2551729	Identifier	error		2551537	0					
ANR	2551730	CallExpression	gdev_prn_open ( pdev )		2551537	1					
ANR	2551731	Callee	gdev_prn_open		2551537	0					
ANR	2551732	Identifier	gdev_prn_open		2551537	0					
ANR	2551733	ArgumentList	pdev		2551537	1					
ANR	2551734	Argument	pdev		2551537	0					
ANR	2551735	Identifier	pdev		2551537	0					
ANR	2551736	WhileStatement	while ( pdev -> child )		2551537	6					
ANR	2551737	Condition	pdev -> child	1276:10:54751:54761	2551537	0	True				
ANR	2551738	PtrMemberAccess	pdev -> child		2551537	0					
ANR	2551739	Identifier	pdev		2551537	0					
ANR	2551740	Identifier	child		2551537	1					
ANR	2551741	ExpressionStatement	pdev = pdev -> child	1277:8:54772:54790	2551537	1	True				
ANR	2551742	AssignmentExpression	pdev = pdev -> child		2551537	0		=			
ANR	2551743	Identifier	pdev		2551537	0					
ANR	2551744	PtrMemberAccess	pdev -> child		2551537	1					
ANR	2551745	Identifier	pdev		2551537	0					
ANR	2551746	Identifier	child		2551537	1					
ANR	2551747	ExpressionStatement	udev = ( upd_device * ) pdev	1279:3:54796:54822	2551537	7	True				
ANR	2551748	AssignmentExpression	udev = ( upd_device * ) pdev		2551537	0		=			
ANR	2551749	Identifier	udev		2551537	0					
ANR	2551750	CastExpression	( upd_device * ) pdev		2551537	1					
ANR	2551751	CastTarget	upd_device *		2551537	0					
ANR	2551752	Identifier	pdev		2551537	1					
ANR	2551753	ExpressionStatement	upd = udev -> upd	1280:3:54827:54842	2551537	8	True				
ANR	2551754	AssignmentExpression	upd = udev -> upd		2551537	0		=			
ANR	2551755	Identifier	upd		2551537	0					
ANR	2551756	PtrMemberAccess	udev -> upd		2551537	1					
ANR	2551757	Identifier	udev		2551537	0					
ANR	2551758	Identifier	upd		2551537	1					
ANR	2551759	IfStatement	if ( upd )		2551537	9					
ANR	2551760	Condition	upd	1284:6:54905:54907	2551537	0	True				
ANR	2551761	Identifier	upd		2551537	0					
ANR	2551762	CompoundStatement		38:11:1093:1093	2551537	1					
ANR	2551763	ExpressionStatement	upd -> flags &= ~B_OK4GO	1286:6:54919:54941	2551537	0	True				
ANR	2551764	AssignmentExpression	upd -> flags &= ~B_OK4GO		2551537	0		&=			
ANR	2551765	PtrMemberAccess	upd -> flags		2551537	0					
ANR	2551766	Identifier	upd		2551537	0					
ANR	2551767	Identifier	flags		2551537	1					
ANR	2551768	Identifier	~B_OK4GO		2551537	1					
ANR	2551769	IfStatement	if ( 0 > error )		2551537	1					
ANR	2551770	Condition	0 > error	1292:9:55090:55098	2551537	0	True				
ANR	2551771	RelationalExpression	0 > error		2551537	0		>			
ANR	2551772	PrimaryExpression	0		2551537	0					
ANR	2551773	Identifier	error		2551537	1					
ANR	2551774	ExpressionStatement	upd -> flags |= B_ERROR	1292:20:55101:55122	2551537	1	True				
ANR	2551775	AssignmentExpression	upd -> flags |= B_ERROR		2551537	0		|=			
ANR	2551776	PtrMemberAccess	upd -> flags		2551537	0					
ANR	2551777	Identifier	upd		2551537	0					
ANR	2551778	Identifier	flags		2551537	1					
ANR	2551779	Identifier	B_ERROR		2551537	1					
ANR	2551780	IfStatement	if ( gs_error_VMerror == upd_open_map ( udev ) )		2551537	2					
ANR	2551781	Condition	gs_error_VMerror == upd_open_map ( udev )	1294:9:55134:55171	2551537	0	True				
ANR	2551782	EqualityExpression	gs_error_VMerror == upd_open_map ( udev )		2551537	0		==			
ANR	2551783	Identifier	gs_error_VMerror		2551537	0					
ANR	2551784	CallExpression	upd_open_map ( udev )		2551537	1					
ANR	2551785	Callee	upd_open_map		2551537	0					
ANR	2551786	Identifier	upd_open_map		2551537	0					
ANR	2551787	ArgumentList	udev		2551537	1					
ANR	2551788	Argument	udev		2551537	0					
ANR	2551789	Identifier	udev		2551537	0					
ANR	2551790	ExpressionStatement	error = gs_error_VMerror	1294:49:55174:55198	2551537	1	True				
ANR	2551791	AssignmentExpression	error = gs_error_VMerror		2551537	0		=			
ANR	2551792	Identifier	error		2551537	0					
ANR	2551793	Identifier	gs_error_VMerror		2551537	1					
ANR	2551794	ExpressionStatement	upd -> gswidth = udev -> width - ( int ) ( ( dev_l_margin ( udev ) + dev_r_margin ( udev ) ) * udev -> x_pixels_per_inch )	1301:6:55371:55480	2551537	3	True				
ANR	2551795	AssignmentExpression	upd -> gswidth = udev -> width - ( int ) ( ( dev_l_margin ( udev ) + dev_r_margin ( udev ) ) * udev -> x_pixels_per_inch )		2551537	0		=			
ANR	2551796	PtrMemberAccess	upd -> gswidth		2551537	0					
ANR	2551797	Identifier	upd		2551537	0					
ANR	2551798	Identifier	gswidth		2551537	1					
ANR	2551799	AdditiveExpression	udev -> width - ( int ) ( ( dev_l_margin ( udev ) + dev_r_margin ( udev ) ) * udev -> x_pixels_per_inch )		2551537	1		-			
ANR	2551800	PtrMemberAccess	udev -> width		2551537	0					
ANR	2551801	Identifier	udev		2551537	0					
ANR	2551802	Identifier	width		2551537	1					
ANR	2551803	CastExpression	( int ) ( ( dev_l_margin ( udev ) + dev_r_margin ( udev ) ) * udev -> x_pixels_per_inch )		2551537	1					
ANR	2551804	CastTarget	int		2551537	0					
ANR	2551805	MultiplicativeExpression	( dev_l_margin ( udev ) + dev_r_margin ( udev ) ) * udev -> x_pixels_per_inch		2551537	1		*			
ANR	2551806	AdditiveExpression	dev_l_margin ( udev ) + dev_r_margin ( udev )		2551537	0		+			
ANR	2551807	CallExpression	dev_l_margin ( udev )		2551537	0					
ANR	2551808	Callee	dev_l_margin		2551537	0					
ANR	2551809	Identifier	dev_l_margin		2551537	0					
ANR	2551810	ArgumentList	udev		2551537	1					
ANR	2551811	Argument	udev		2551537	0					
ANR	2551812	Identifier	udev		2551537	0					
ANR	2551813	CallExpression	dev_r_margin ( udev )		2551537	1					
ANR	2551814	Callee	dev_r_margin		2551537	0					
ANR	2551815	Identifier	dev_r_margin		2551537	0					
ANR	2551816	ArgumentList	udev		2551537	1					
ANR	2551817	Argument	udev		2551537	0					
ANR	2551818	Identifier	udev		2551537	0					
ANR	2551819	PtrMemberAccess	udev -> x_pixels_per_inch		2551537	1					
ANR	2551820	Identifier	udev		2551537	0					
ANR	2551821	Identifier	x_pixels_per_inch		2551537	1					
ANR	2551822	ExpressionStatement	upd -> gsheight = udev -> height - ( int ) ( ( dev_t_margin ( udev ) + dev_b_margin ( udev ) ) * udev -> y_pixels_per_inch )	1304:6:55489:55599	2551537	4	True				
ANR	2551823	AssignmentExpression	upd -> gsheight = udev -> height - ( int ) ( ( dev_t_margin ( udev ) + dev_b_margin ( udev ) ) * udev -> y_pixels_per_inch )		2551537	0		=			
ANR	2551824	PtrMemberAccess	upd -> gsheight		2551537	0					
ANR	2551825	Identifier	upd		2551537	0					
ANR	2551826	Identifier	gsheight		2551537	1					
ANR	2551827	AdditiveExpression	udev -> height - ( int ) ( ( dev_t_margin ( udev ) + dev_b_margin ( udev ) ) * udev -> y_pixels_per_inch )		2551537	1		-			
ANR	2551828	PtrMemberAccess	udev -> height		2551537	0					
ANR	2551829	Identifier	udev		2551537	0					
ANR	2551830	Identifier	height		2551537	1					
ANR	2551831	CastExpression	( int ) ( ( dev_t_margin ( udev ) + dev_b_margin ( udev ) ) * udev -> y_pixels_per_inch )		2551537	1					
ANR	2551832	CastTarget	int		2551537	0					
ANR	2551833	MultiplicativeExpression	( dev_t_margin ( udev ) + dev_b_margin ( udev ) ) * udev -> y_pixels_per_inch		2551537	1		*			
ANR	2551834	AdditiveExpression	dev_t_margin ( udev ) + dev_b_margin ( udev )		2551537	0		+			
ANR	2551835	CallExpression	dev_t_margin ( udev )		2551537	0					
ANR	2551836	Callee	dev_t_margin		2551537	0					
ANR	2551837	Identifier	dev_t_margin		2551537	0					
ANR	2551838	ArgumentList	udev		2551537	1					
ANR	2551839	Argument	udev		2551537	0					
ANR	2551840	Identifier	udev		2551537	0					
ANR	2551841	CallExpression	dev_b_margin ( udev )		2551537	1					
ANR	2551842	Callee	dev_b_margin		2551537	0					
ANR	2551843	Identifier	dev_b_margin		2551537	0					
ANR	2551844	ArgumentList	udev		2551537	1					
ANR	2551845	Argument	udev		2551537	0					
ANR	2551846	Identifier	udev		2551537	0					
ANR	2551847	PtrMemberAccess	udev -> y_pixels_per_inch		2551537	1					
ANR	2551848	Identifier	udev		2551537	0					
ANR	2551849	Identifier	y_pixels_per_inch		2551537	1					
ANR	2551850	ExpressionStatement	upd -> ngsbuf = 0	1307:6:55608:55623	2551537	5	True				
ANR	2551851	AssignmentExpression	upd -> ngsbuf = 0		2551537	0		=			
ANR	2551852	PtrMemberAccess	upd -> ngsbuf		2551537	0					
ANR	2551853	Identifier	upd		2551537	0					
ANR	2551854	Identifier	ngsbuf		2551537	1					
ANR	2551855	PrimaryExpression	0		2551537	1					
ANR	2551856	ExpressionStatement	upd -> gsbuf = NULL	1308:6:55659:55677	2551537	6	True				
ANR	2551857	AssignmentExpression	upd -> gsbuf = NULL		2551537	0		=			
ANR	2551858	PtrMemberAccess	upd -> gsbuf		2551537	0					
ANR	2551859	Identifier	upd		2551537	0					
ANR	2551860	Identifier	gsbuf		2551537	1					
ANR	2551861	Identifier	NULL		2551537	1					
ANR	2551862	IfStatement	if ( B_MAP & upd -> flags )		2551537	7					
ANR	2551863	Condition	B_MAP & upd -> flags	1310:9:55714:55731	2551537	0	True				
ANR	2551864	BitAndExpression	B_MAP & upd -> flags		2551537	0		&			
ANR	2551865	Identifier	B_MAP		2551537	0					
ANR	2551866	PtrMemberAccess	upd -> flags		2551537	1					
ANR	2551867	Identifier	upd		2551537	0					
ANR	2551868	Identifier	flags		2551537	1					
ANR	2551869	CompoundStatement		65:9:1965:2005	2551537	1					
ANR	2551870	IdentifierDeclStatement	"uint want = gx_device_raster ( pdev , true ) ;"	1311:9:55782:55822	2551537	0	True				
ANR	2551871	IdentifierDecl	"want = gx_device_raster ( pdev , true )"		2551537	0					
ANR	2551872	IdentifierDeclType	uint		2551537	0					
ANR	2551873	Identifier	want		2551537	1					
ANR	2551874	AssignmentExpression	"want = gx_device_raster ( pdev , true )"		2551537	2		=			
ANR	2551875	Identifier	want		2551537	0					
ANR	2551876	CallExpression	"gx_device_raster ( pdev , true )"		2551537	1					
ANR	2551877	Callee	gx_device_raster		2551537	0					
ANR	2551878	Identifier	gx_device_raster		2551537	0					
ANR	2551879	ArgumentList	pdev		2551537	1					
ANR	2551880	Argument	pdev		2551537	0					
ANR	2551881	Identifier	pdev		2551537	0					
ANR	2551882	Argument	true		2551537	1					
ANR	2551883	Identifier	true		2551537	0					
ANR	2551884	ExpressionStatement	"upd -> gsbuf = gs_malloc ( pdev -> memory , want , 1 , ""upd/gsbuf"" )"	1312:9:55833:55889	2551537	1	True				
ANR	2551885	AssignmentExpression	"upd -> gsbuf = gs_malloc ( pdev -> memory , want , 1 , ""upd/gsbuf"" )"		2551537	0		=			
ANR	2551886	PtrMemberAccess	upd -> gsbuf		2551537	0					
ANR	2551887	Identifier	upd		2551537	0					
ANR	2551888	Identifier	gsbuf		2551537	1					
ANR	2551889	CallExpression	"gs_malloc ( pdev -> memory , want , 1 , ""upd/gsbuf"" )"		2551537	1					
ANR	2551890	Callee	gs_malloc		2551537	0					
ANR	2551891	Identifier	gs_malloc		2551537	0					
ANR	2551892	ArgumentList	pdev -> memory		2551537	1					
ANR	2551893	Argument	pdev -> memory		2551537	0					
ANR	2551894	PtrMemberAccess	pdev -> memory		2551537	0					
ANR	2551895	Identifier	pdev		2551537	0					
ANR	2551896	Identifier	memory		2551537	1					
ANR	2551897	Argument	want		2551537	1					
ANR	2551898	Identifier	want		2551537	0					
ANR	2551899	Argument	1		2551537	2					
ANR	2551900	PrimaryExpression	1		2551537	0					
ANR	2551901	Argument	"""upd/gsbuf"""		2551537	3					
ANR	2551902	PrimaryExpression	"""upd/gsbuf"""		2551537	0					
ANR	2551903	IfStatement	if ( upd -> gsbuf )		2551537	2					
ANR	2551904	Condition	upd -> gsbuf	1314:12:55904:55913	2551537	0	True				
ANR	2551905	PtrMemberAccess	upd -> gsbuf		2551537	0					
ANR	2551906	Identifier	upd		2551537	0					
ANR	2551907	Identifier	gsbuf		2551537	1					
ANR	2551908	CompoundStatement		68:24:2099:2099	2551537	1					
ANR	2551909	ExpressionStatement	upd -> ngsbuf = want	1315:12:55930:55948	2551537	0	True				
ANR	2551910	AssignmentExpression	upd -> ngsbuf = want		2551537	0		=			
ANR	2551911	PtrMemberAccess	upd -> ngsbuf		2551537	0					
ANR	2551912	Identifier	upd		2551537	0					
ANR	2551913	Identifier	ngsbuf		2551537	1					
ANR	2551914	Identifier	want		2551537	1					
ANR	2551915	ExpressionStatement	upd -> flags |= B_BUF	1316:12:55962:55981	2551537	1	True				
ANR	2551916	AssignmentExpression	upd -> flags |= B_BUF		2551537	0		|=			
ANR	2551917	PtrMemberAccess	upd -> flags		2551537	0					
ANR	2551918	Identifier	upd		2551537	0					
ANR	2551919	Identifier	flags		2551537	1					
ANR	2551920	Identifier	B_BUF		2551537	1					
ANR	2551921	ElseStatement	else		2551537	0					
ANR	2551922	CompoundStatement		71:16:2204:2204	2551537	0					
ANR	2551923	ExpressionStatement	error = gs_error_VMerror	1318:12:56035:56059	2551537	0	True				
ANR	2551924	AssignmentExpression	error = gs_error_VMerror		2551537	0		=			
ANR	2551925	Identifier	error		2551537	0					
ANR	2551926	Identifier	gs_error_VMerror		2551537	1					
ANR	2551927	ExpressionStatement	upd -> flags |= B_ERROR	1319:12:56092:56113	2551537	1	True				
ANR	2551928	AssignmentExpression	upd -> flags |= B_ERROR		2551537	0		|=			
ANR	2551929	PtrMemberAccess	upd -> flags		2551537	0					
ANR	2551930	Identifier	upd		2551537	0					
ANR	2551931	Identifier	flags		2551537	1					
ANR	2551932	Identifier	B_ERROR		2551537	1					
ANR	2551933	ExpressionStatement	upd_open_render ( udev )	1324:6:56206:56227	2551537	8	True				
ANR	2551934	CallExpression	upd_open_render ( udev )		2551537	0					
ANR	2551935	Callee	upd_open_render		2551537	0					
ANR	2551936	Identifier	upd_open_render		2551537	0					
ANR	2551937	ArgumentList	udev		2551537	1					
ANR	2551938	Argument	udev		2551537	0					
ANR	2551939	Identifier	udev		2551537	0					
ANR	2551940	IfStatement	if ( gs_error_VMerror == upd_open_writer ( udev ) )		2551537	9					
ANR	2551941	Condition	gs_error_VMerror == upd_open_writer ( udev )	1326:9:56272:56312	2551537	0	True				
ANR	2551942	EqualityExpression	gs_error_VMerror == upd_open_writer ( udev )		2551537	0		==			
ANR	2551943	Identifier	gs_error_VMerror		2551537	0					
ANR	2551944	CallExpression	upd_open_writer ( udev )		2551537	1					
ANR	2551945	Callee	upd_open_writer		2551537	0					
ANR	2551946	Identifier	upd_open_writer		2551537	0					
ANR	2551947	ArgumentList	udev		2551537	1					
ANR	2551948	Argument	udev		2551537	0					
ANR	2551949	Identifier	udev		2551537	0					
ANR	2551950	ExpressionStatement	error = gs_error_VMerror	1326:52:56315:56339	2551537	1	True				
ANR	2551951	AssignmentExpression	error = gs_error_VMerror		2551537	0		=			
ANR	2551952	Identifier	error		2551537	0					
ANR	2551953	Identifier	gs_error_VMerror		2551537	1					
ANR	2551954	ExpressionStatement	udev -> upd -> pdwidth = udev -> width	1328:6:56348:56381	2551537	10	True				
ANR	2551955	AssignmentExpression	udev -> upd -> pdwidth = udev -> width		2551537	0		=			
ANR	2551956	PtrMemberAccess	udev -> upd -> pdwidth		2551537	0					
ANR	2551957	PtrMemberAccess	udev -> upd		2551537	0					
ANR	2551958	Identifier	udev		2551537	0					
ANR	2551959	Identifier	upd		2551537	1					
ANR	2551960	Identifier	pdwidth		2551537	1					
ANR	2551961	PtrMemberAccess	udev -> width		2551537	1					
ANR	2551962	Identifier	udev		2551537	0					
ANR	2551963	Identifier	width		2551537	1					
ANR	2551964	ExpressionStatement	udev -> upd -> pdheight = udev -> height	1329:6:56389:56423	2551537	11	True				
ANR	2551965	AssignmentExpression	udev -> upd -> pdheight = udev -> height		2551537	0		=			
ANR	2551966	PtrMemberAccess	udev -> upd -> pdheight		2551537	0					
ANR	2551967	PtrMemberAccess	udev -> upd		2551537	0					
ANR	2551968	Identifier	udev		2551537	0					
ANR	2551969	Identifier	upd		2551537	1					
ANR	2551970	Identifier	pdheight		2551537	1					
ANR	2551971	PtrMemberAccess	udev -> height		2551537	1					
ANR	2551972	Identifier	udev		2551537	0					
ANR	2551973	Identifier	height		2551537	1					
ANR	2551974	IfStatement	if ( ( upd -> flags & ( B_OK4GO | B_ERROR ) ) == B_OK4GO )		2551537	12					
ANR	2551975	Condition	( upd -> flags & ( B_OK4GO | B_ERROR ) ) == B_OK4GO	1332:9:56466:56510	2551537	0	True				
ANR	2551976	EqualityExpression	( upd -> flags & ( B_OK4GO | B_ERROR ) ) == B_OK4GO		2551537	0		==			
ANR	2551977	BitAndExpression	upd -> flags & ( B_OK4GO | B_ERROR )		2551537	0		&			
ANR	2551978	PtrMemberAccess	upd -> flags		2551537	0					
ANR	2551979	Identifier	upd		2551537	0					
ANR	2551980	Identifier	flags		2551537	1					
ANR	2551981	InclusiveOrExpression	B_OK4GO | B_ERROR		2551537	1		|			
ANR	2551982	Identifier	B_OK4GO		2551537	0					
ANR	2551983	Identifier	B_ERROR		2551537	1					
ANR	2551984	Identifier	B_OK4GO		2551537	1					
ANR	2551985	CompoundStatement		87:8:2706:2721	2551537	1					
ANR	2551986	IdentifierDeclStatement	"int i , j , l , ln , lv ;"	1333:8:56523:56538	2551537	0	True				
ANR	2551987	IdentifierDecl	i		2551537	0					
ANR	2551988	IdentifierDeclType	int		2551537	0					
ANR	2551989	Identifier	i		2551537	1					
ANR	2551990	IdentifierDecl	j		2551537	1					
ANR	2551991	IdentifierDeclType	int		2551537	0					
ANR	2551992	Identifier	j		2551537	1					
ANR	2551993	IdentifierDecl	l		2551537	2					
ANR	2551994	IdentifierDeclType	int		2551537	0					
ANR	2551995	Identifier	l		2551537	1					
ANR	2551996	IdentifierDecl	ln		2551537	3					
ANR	2551997	IdentifierDeclType	int		2551537	0					
ANR	2551998	Identifier	ln		2551537	1					
ANR	2551999	IdentifierDecl	lv		2551537	4					
ANR	2552000	IdentifierDeclType	int		2551537	0					
ANR	2552001	Identifier	lv		2551537	1					
ANR	2552002	ExpressionStatement	"errprintf ( udev -> memory , ""\\nupd->flags    = 0x%05lx\\n"" , ( unsigned long ) upd -> flags )"	1334:8:56548:56627	2551537	1	True				
ANR	2552003	CallExpression	"errprintf ( udev -> memory , ""\\nupd->flags    = 0x%05lx\\n"" , ( unsigned long ) upd -> flags )"		2551537	0					
ANR	2552004	Callee	errprintf		2551537	0					
ANR	2552005	Identifier	errprintf		2551537	0					
ANR	2552006	ArgumentList	udev -> memory		2551537	1					
ANR	2552007	Argument	udev -> memory		2551537	0					
ANR	2552008	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552009	Identifier	udev		2551537	0					
ANR	2552010	Identifier	memory		2551537	1					
ANR	2552011	Argument	"""\\nupd->flags    = 0x%05lx\\n"""		2551537	1					
ANR	2552012	PrimaryExpression	"""\\nupd->flags    = 0x%05lx\\n"""		2551537	0					
ANR	2552013	Argument	( unsigned long ) upd -> flags		2551537	2					
ANR	2552014	CastExpression	( unsigned long ) upd -> flags		2551537	0					
ANR	2552015	CastTarget	unsigned long		2551537	0					
ANR	2552016	PtrMemberAccess	upd -> flags		2551537	1					
ANR	2552017	Identifier	upd		2551537	0					
ANR	2552018	Identifier	flags		2551537	1					
ANR	2552019	ExpressionStatement	"errprintf ( udev -> memory , ""upd->pdwidth  = %5d\\n"" , upd -> pdwidth )"	1335:8:56637:56699	2551537	2	True				
ANR	2552020	CallExpression	"errprintf ( udev -> memory , ""upd->pdwidth  = %5d\\n"" , upd -> pdwidth )"		2551537	0					
ANR	2552021	Callee	errprintf		2551537	0					
ANR	2552022	Identifier	errprintf		2551537	0					
ANR	2552023	ArgumentList	udev -> memory		2551537	1					
ANR	2552024	Argument	udev -> memory		2551537	0					
ANR	2552025	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552026	Identifier	udev		2551537	0					
ANR	2552027	Identifier	memory		2551537	1					
ANR	2552028	Argument	"""upd->pdwidth  = %5d\\n"""		2551537	1					
ANR	2552029	PrimaryExpression	"""upd->pdwidth  = %5d\\n"""		2551537	0					
ANR	2552030	Argument	upd -> pdwidth		2551537	2					
ANR	2552031	PtrMemberAccess	upd -> pdwidth		2551537	0					
ANR	2552032	Identifier	upd		2551537	0					
ANR	2552033	Identifier	pdwidth		2551537	1					
ANR	2552034	ExpressionStatement	"errprintf ( udev -> memory , ""upd->pdheight = %5d\\n"" , upd -> pdheight )"	1336:8:56709:56772	2551537	3	True				
ANR	2552035	CallExpression	"errprintf ( udev -> memory , ""upd->pdheight = %5d\\n"" , upd -> pdheight )"		2551537	0					
ANR	2552036	Callee	errprintf		2551537	0					
ANR	2552037	Identifier	errprintf		2551537	0					
ANR	2552038	ArgumentList	udev -> memory		2551537	1					
ANR	2552039	Argument	udev -> memory		2551537	0					
ANR	2552040	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552041	Identifier	udev		2551537	0					
ANR	2552042	Identifier	memory		2551537	1					
ANR	2552043	Argument	"""upd->pdheight = %5d\\n"""		2551537	1					
ANR	2552044	PrimaryExpression	"""upd->pdheight = %5d\\n"""		2551537	0					
ANR	2552045	Argument	upd -> pdheight		2551537	2					
ANR	2552046	PtrMemberAccess	upd -> pdheight		2551537	0					
ANR	2552047	Identifier	upd		2551537	0					
ANR	2552048	Identifier	pdheight		2551537	1					
ANR	2552049	ExpressionStatement	"errprintf ( udev -> memory , ""upd->ngsbuf   = %5u\\n"" , upd -> ngsbuf )"	1337:8:56782:56843	2551537	4	True				
ANR	2552050	CallExpression	"errprintf ( udev -> memory , ""upd->ngsbuf   = %5u\\n"" , upd -> ngsbuf )"		2551537	0					
ANR	2552051	Callee	errprintf		2551537	0					
ANR	2552052	Identifier	errprintf		2551537	0					
ANR	2552053	ArgumentList	udev -> memory		2551537	1					
ANR	2552054	Argument	udev -> memory		2551537	0					
ANR	2552055	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552056	Identifier	udev		2551537	0					
ANR	2552057	Identifier	memory		2551537	1					
ANR	2552058	Argument	"""upd->ngsbuf   = %5u\\n"""		2551537	1					
ANR	2552059	PrimaryExpression	"""upd->ngsbuf   = %5u\\n"""		2551537	0					
ANR	2552060	Argument	upd -> ngsbuf		2551537	2					
ANR	2552061	PtrMemberAccess	upd -> ngsbuf		2551537	0					
ANR	2552062	Identifier	upd		2551537	0					
ANR	2552063	Identifier	ngsbuf		2551537	1					
ANR	2552064	ExpressionStatement	"errprintf ( udev -> memory , ""upd->gswidth  = %5d\\n"" , upd -> gswidth )"	1338:8:56853:56915	2551537	5	True				
ANR	2552065	CallExpression	"errprintf ( udev -> memory , ""upd->gswidth  = %5d\\n"" , upd -> gswidth )"		2551537	0					
ANR	2552066	Callee	errprintf		2551537	0					
ANR	2552067	Identifier	errprintf		2551537	0					
ANR	2552068	ArgumentList	udev -> memory		2551537	1					
ANR	2552069	Argument	udev -> memory		2551537	0					
ANR	2552070	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552071	Identifier	udev		2551537	0					
ANR	2552072	Identifier	memory		2551537	1					
ANR	2552073	Argument	"""upd->gswidth  = %5d\\n"""		2551537	1					
ANR	2552074	PrimaryExpression	"""upd->gswidth  = %5d\\n"""		2551537	0					
ANR	2552075	Argument	upd -> gswidth		2551537	2					
ANR	2552076	PtrMemberAccess	upd -> gswidth		2551537	0					
ANR	2552077	Identifier	upd		2551537	0					
ANR	2552078	Identifier	gswidth		2551537	1					
ANR	2552079	ExpressionStatement	"errprintf ( udev -> memory , ""upd->gsheight = %5d\\n"" , upd -> gsheight )"	1339:8:56925:56988	2551537	6	True				
ANR	2552080	CallExpression	"errprintf ( udev -> memory , ""upd->gsheight = %5d\\n"" , upd -> gsheight )"		2551537	0					
ANR	2552081	Callee	errprintf		2551537	0					
ANR	2552082	Identifier	errprintf		2551537	0					
ANR	2552083	ArgumentList	udev -> memory		2551537	1					
ANR	2552084	Argument	udev -> memory		2551537	0					
ANR	2552085	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552086	Identifier	udev		2551537	0					
ANR	2552087	Identifier	memory		2551537	1					
ANR	2552088	Argument	"""upd->gsheight = %5d\\n"""		2551537	1					
ANR	2552089	PrimaryExpression	"""upd->gsheight = %5d\\n"""		2551537	0					
ANR	2552090	Argument	upd -> gsheight		2551537	2					
ANR	2552091	PtrMemberAccess	upd -> gsheight		2551537	0					
ANR	2552092	Identifier	upd		2551537	0					
ANR	2552093	Identifier	gsheight		2551537	1					
ANR	2552094	ExpressionStatement	"errprintf ( udev -> memory , ""upd->rwidth   = %5d\\n"" , upd -> rwidth )"	1340:8:56998:57059	2551537	7	True				
ANR	2552095	CallExpression	"errprintf ( udev -> memory , ""upd->rwidth   = %5d\\n"" , upd -> rwidth )"		2551537	0					
ANR	2552096	Callee	errprintf		2551537	0					
ANR	2552097	Identifier	errprintf		2551537	0					
ANR	2552098	ArgumentList	udev -> memory		2551537	1					
ANR	2552099	Argument	udev -> memory		2551537	0					
ANR	2552100	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552101	Identifier	udev		2551537	0					
ANR	2552102	Identifier	memory		2551537	1					
ANR	2552103	Argument	"""upd->rwidth   = %5d\\n"""		2551537	1					
ANR	2552104	PrimaryExpression	"""upd->rwidth   = %5d\\n"""		2551537	0					
ANR	2552105	Argument	upd -> rwidth		2551537	2					
ANR	2552106	PtrMemberAccess	upd -> rwidth		2551537	0					
ANR	2552107	Identifier	upd		2551537	0					
ANR	2552108	Identifier	rwidth		2551537	1					
ANR	2552109	ExpressionStatement	"errprintf ( udev -> memory , ""upd->pwidth   = %5d\\n"" , upd -> pwidth )"	1341:8:57069:57130	2551537	8	True				
ANR	2552110	CallExpression	"errprintf ( udev -> memory , ""upd->pwidth   = %5d\\n"" , upd -> pwidth )"		2551537	0					
ANR	2552111	Callee	errprintf		2551537	0					
ANR	2552112	Identifier	errprintf		2551537	0					
ANR	2552113	ArgumentList	udev -> memory		2551537	1					
ANR	2552114	Argument	udev -> memory		2551537	0					
ANR	2552115	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552116	Identifier	udev		2551537	0					
ANR	2552117	Identifier	memory		2551537	1					
ANR	2552118	Argument	"""upd->pwidth   = %5d\\n"""		2551537	1					
ANR	2552119	PrimaryExpression	"""upd->pwidth   = %5d\\n"""		2551537	0					
ANR	2552120	Argument	upd -> pwidth		2551537	2					
ANR	2552121	PtrMemberAccess	upd -> pwidth		2551537	0					
ANR	2552122	Identifier	upd		2551537	0					
ANR	2552123	Identifier	pwidth		2551537	1					
ANR	2552124	ExpressionStatement	"errprintf ( udev -> memory , ""upd->pheight  = %5d\\n"" , upd -> pheight )"	1342:8:57140:57202	2551537	9	True				
ANR	2552125	CallExpression	"errprintf ( udev -> memory , ""upd->pheight  = %5d\\n"" , upd -> pheight )"		2551537	0					
ANR	2552126	Callee	errprintf		2551537	0					
ANR	2552127	Identifier	errprintf		2551537	0					
ANR	2552128	ArgumentList	udev -> memory		2551537	1					
ANR	2552129	Argument	udev -> memory		2551537	0					
ANR	2552130	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552131	Identifier	udev		2551537	0					
ANR	2552132	Identifier	memory		2551537	1					
ANR	2552133	Argument	"""upd->pheight  = %5d\\n"""		2551537	1					
ANR	2552134	PrimaryExpression	"""upd->pheight  = %5d\\n"""		2551537	0					
ANR	2552135	Argument	upd -> pheight		2551537	2					
ANR	2552136	PtrMemberAccess	upd -> pheight		2551537	0					
ANR	2552137	Identifier	upd		2551537	0					
ANR	2552138	Identifier	pheight		2551537	1					
ANR	2552139	ExpressionStatement	"errprintf ( udev -> memory , ""upd->nvalbuf  = %5u\\n"" , upd -> nvalbuf )"	1343:8:57212:57274	2551537	10	True				
ANR	2552140	CallExpression	"errprintf ( udev -> memory , ""upd->nvalbuf  = %5u\\n"" , upd -> nvalbuf )"		2551537	0					
ANR	2552141	Callee	errprintf		2551537	0					
ANR	2552142	Identifier	errprintf		2551537	0					
ANR	2552143	ArgumentList	udev -> memory		2551537	1					
ANR	2552144	Argument	udev -> memory		2551537	0					
ANR	2552145	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552146	Identifier	udev		2551537	0					
ANR	2552147	Identifier	memory		2551537	1					
ANR	2552148	Argument	"""upd->nvalbuf  = %5u\\n"""		2551537	1					
ANR	2552149	PrimaryExpression	"""upd->nvalbuf  = %5u\\n"""		2551537	0					
ANR	2552150	Argument	upd -> nvalbuf		2551537	2					
ANR	2552151	PtrMemberAccess	upd -> nvalbuf		2551537	0					
ANR	2552152	Identifier	upd		2551537	0					
ANR	2552153	Identifier	nvalbuf		2551537	1					
ANR	2552154	ExpressionStatement	"errprintf ( udev -> memory , ""upd->nscnbuf  = %5d\\n"" , upd -> nscnbuf )"	1344:8:57284:57346	2551537	11	True				
ANR	2552155	CallExpression	"errprintf ( udev -> memory , ""upd->nscnbuf  = %5d\\n"" , upd -> nscnbuf )"		2551537	0					
ANR	2552156	Callee	errprintf		2551537	0					
ANR	2552157	Identifier	errprintf		2551537	0					
ANR	2552158	ArgumentList	udev -> memory		2551537	1					
ANR	2552159	Argument	udev -> memory		2551537	0					
ANR	2552160	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552161	Identifier	udev		2551537	0					
ANR	2552162	Identifier	memory		2551537	1					
ANR	2552163	Argument	"""upd->nscnbuf  = %5d\\n"""		2551537	1					
ANR	2552164	PrimaryExpression	"""upd->nscnbuf  = %5d\\n"""		2551537	0					
ANR	2552165	Argument	upd -> nscnbuf		2551537	2					
ANR	2552166	PtrMemberAccess	upd -> nscnbuf		2551537	0					
ANR	2552167	Identifier	upd		2551537	0					
ANR	2552168	Identifier	nscnbuf		2551537	1					
ANR	2552169	ExpressionStatement	"errprintf ( udev -> memory , ""upd->ncomp    = %5d\\n"" , upd -> ncomp )"	1345:8:57356:57416	2551537	12	True				
ANR	2552170	CallExpression	"errprintf ( udev -> memory , ""upd->ncomp    = %5d\\n"" , upd -> ncomp )"		2551537	0					
ANR	2552171	Callee	errprintf		2551537	0					
ANR	2552172	Identifier	errprintf		2551537	0					
ANR	2552173	ArgumentList	udev -> memory		2551537	1					
ANR	2552174	Argument	udev -> memory		2551537	0					
ANR	2552175	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552176	Identifier	udev		2551537	0					
ANR	2552177	Identifier	memory		2551537	1					
ANR	2552178	Argument	"""upd->ncomp    = %5d\\n"""		2551537	1					
ANR	2552179	PrimaryExpression	"""upd->ncomp    = %5d\\n"""		2551537	0					
ANR	2552180	Argument	upd -> ncomp		2551537	2					
ANR	2552181	PtrMemberAccess	upd -> ncomp		2551537	0					
ANR	2552182	Identifier	upd		2551537	0					
ANR	2552183	Identifier	ncomp		2551537	1					
ANR	2552184	ExpressionStatement	"errprintf ( udev -> memory , ""upd->ocomp    = %5d\\n"" , upd -> ocomp )"	1346:8:57426:57486	2551537	13	True				
ANR	2552185	CallExpression	"errprintf ( udev -> memory , ""upd->ocomp    = %5d\\n"" , upd -> ocomp )"		2551537	0					
ANR	2552186	Callee	errprintf		2551537	0					
ANR	2552187	Identifier	errprintf		2551537	0					
ANR	2552188	ArgumentList	udev -> memory		2551537	1					
ANR	2552189	Argument	udev -> memory		2551537	0					
ANR	2552190	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552191	Identifier	udev		2551537	0					
ANR	2552192	Identifier	memory		2551537	1					
ANR	2552193	Argument	"""upd->ocomp    = %5d\\n"""		2551537	1					
ANR	2552194	PrimaryExpression	"""upd->ocomp    = %5d\\n"""		2551537	0					
ANR	2552195	Argument	upd -> ocomp		2551537	2					
ANR	2552196	PtrMemberAccess	upd -> ocomp		2551537	0					
ANR	2552197	Identifier	upd		2551537	0					
ANR	2552198	Identifier	ocomp		2551537	1					
ANR	2552199	ExpressionStatement	"errprintf ( udev -> memory , ""upd->nbytes   = %5d\\n"" , upd -> nbytes )"	1347:8:57496:57557	2551537	14	True				
ANR	2552200	CallExpression	"errprintf ( udev -> memory , ""upd->nbytes   = %5d\\n"" , upd -> nbytes )"		2551537	0					
ANR	2552201	Callee	errprintf		2551537	0					
ANR	2552202	Identifier	errprintf		2551537	0					
ANR	2552203	ArgumentList	udev -> memory		2551537	1					
ANR	2552204	Argument	udev -> memory		2551537	0					
ANR	2552205	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552206	Identifier	udev		2551537	0					
ANR	2552207	Identifier	memory		2551537	1					
ANR	2552208	Argument	"""upd->nbytes   = %5d\\n"""		2551537	1					
ANR	2552209	PrimaryExpression	"""upd->nbytes   = %5d\\n"""		2551537	0					
ANR	2552210	Argument	upd -> nbytes		2551537	2					
ANR	2552211	PtrMemberAccess	upd -> nbytes		2551537	0					
ANR	2552212	Identifier	upd		2551537	0					
ANR	2552213	Identifier	nbytes		2551537	1					
ANR	2552214	ExpressionStatement	"errprintf ( udev -> memory , ""upd->nlimits  = %5d\\n"" , upd -> nlimits )"	1348:8:57567:57629	2551537	15	True				
ANR	2552215	CallExpression	"errprintf ( udev -> memory , ""upd->nlimits  = %5d\\n"" , upd -> nlimits )"		2551537	0					
ANR	2552216	Callee	errprintf		2551537	0					
ANR	2552217	Identifier	errprintf		2551537	0					
ANR	2552218	ArgumentList	udev -> memory		2551537	1					
ANR	2552219	Argument	udev -> memory		2551537	0					
ANR	2552220	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552221	Identifier	udev		2551537	0					
ANR	2552222	Identifier	memory		2551537	1					
ANR	2552223	Argument	"""upd->nlimits  = %5d\\n"""		2551537	1					
ANR	2552224	PrimaryExpression	"""upd->nlimits  = %5d\\n"""		2551537	0					
ANR	2552225	Argument	upd -> nlimits		2551537	2					
ANR	2552226	PtrMemberAccess	upd -> nlimits		2551537	0					
ANR	2552227	Identifier	upd		2551537	0					
ANR	2552228	Identifier	nlimits		2551537	1					
ANR	2552229	ExpressionStatement	"errprintf ( udev -> memory , ""upd->scnmsk   = %5d\\n"" , upd -> scnmsk )"	1349:8:57639:57700	2551537	16	True				
ANR	2552230	CallExpression	"errprintf ( udev -> memory , ""upd->scnmsk   = %5d\\n"" , upd -> scnmsk )"		2551537	0					
ANR	2552231	Callee	errprintf		2551537	0					
ANR	2552232	Identifier	errprintf		2551537	0					
ANR	2552233	ArgumentList	udev -> memory		2551537	1					
ANR	2552234	Argument	udev -> memory		2551537	0					
ANR	2552235	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552236	Identifier	udev		2551537	0					
ANR	2552237	Identifier	memory		2551537	1					
ANR	2552238	Argument	"""upd->scnmsk   = %5d\\n"""		2551537	1					
ANR	2552239	PrimaryExpression	"""upd->scnmsk   = %5d\\n"""		2551537	0					
ANR	2552240	Argument	upd -> scnmsk		2551537	2					
ANR	2552241	PtrMemberAccess	upd -> scnmsk		2551537	0					
ANR	2552242	Identifier	upd		2551537	0					
ANR	2552243	Identifier	scnmsk		2551537	1					
ANR	2552244	ExpressionStatement	"errprintf ( udev -> memory , ""upd->noutbuf  = %5u\\n"" , upd -> noutbuf )"	1350:8:57710:57772	2551537	17	True				
ANR	2552245	CallExpression	"errprintf ( udev -> memory , ""upd->noutbuf  = %5u\\n"" , upd -> noutbuf )"		2551537	0					
ANR	2552246	Callee	errprintf		2551537	0					
ANR	2552247	Identifier	errprintf		2551537	0					
ANR	2552248	ArgumentList	udev -> memory		2551537	1					
ANR	2552249	Argument	udev -> memory		2551537	0					
ANR	2552250	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552251	Identifier	udev		2551537	0					
ANR	2552252	Identifier	memory		2551537	1					
ANR	2552253	Argument	"""upd->noutbuf  = %5u\\n"""		2551537	1					
ANR	2552254	PrimaryExpression	"""upd->noutbuf  = %5u\\n"""		2551537	0					
ANR	2552255	Argument	upd -> noutbuf		2551537	2					
ANR	2552256	PtrMemberAccess	upd -> noutbuf		2551537	0					
ANR	2552257	Identifier	upd		2551537	0					
ANR	2552258	Identifier	noutbuf		2551537	1					
ANR	2552259	ExpressionStatement	"errprintf ( udev -> memory , ""upd->ixpass   = %5d\\n"" , upd -> ixpass )"	1351:8:57782:57843	2551537	18	True				
ANR	2552260	CallExpression	"errprintf ( udev -> memory , ""upd->ixpass   = %5d\\n"" , upd -> ixpass )"		2551537	0					
ANR	2552261	Callee	errprintf		2551537	0					
ANR	2552262	Identifier	errprintf		2551537	0					
ANR	2552263	ArgumentList	udev -> memory		2551537	1					
ANR	2552264	Argument	udev -> memory		2551537	0					
ANR	2552265	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552266	Identifier	udev		2551537	0					
ANR	2552267	Identifier	memory		2551537	1					
ANR	2552268	Argument	"""upd->ixpass   = %5d\\n"""		2551537	1					
ANR	2552269	PrimaryExpression	"""upd->ixpass   = %5d\\n"""		2551537	0					
ANR	2552270	Argument	upd -> ixpass		2551537	2					
ANR	2552271	PtrMemberAccess	upd -> ixpass		2551537	0					
ANR	2552272	Identifier	upd		2551537	0					
ANR	2552273	Identifier	ixpass		2551537	1					
ANR	2552274	ExpressionStatement	"errprintf ( udev -> memory , ""upd->ipass    = %5d\\n"" , upd -> ipass )"	1352:8:57853:57913	2551537	19	True				
ANR	2552275	CallExpression	"errprintf ( udev -> memory , ""upd->ipass    = %5d\\n"" , upd -> ipass )"		2551537	0					
ANR	2552276	Callee	errprintf		2551537	0					
ANR	2552277	Identifier	errprintf		2551537	0					
ANR	2552278	ArgumentList	udev -> memory		2551537	1					
ANR	2552279	Argument	udev -> memory		2551537	0					
ANR	2552280	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552281	Identifier	udev		2551537	0					
ANR	2552282	Identifier	memory		2551537	1					
ANR	2552283	Argument	"""upd->ipass    = %5d\\n"""		2551537	1					
ANR	2552284	PrimaryExpression	"""upd->ipass    = %5d\\n"""		2551537	0					
ANR	2552285	Argument	upd -> ipass		2551537	2					
ANR	2552286	PtrMemberAccess	upd -> ipass		2551537	0					
ANR	2552287	Identifier	upd		2551537	0					
ANR	2552288	Identifier	ipass		2551537	1					
ANR	2552289	ExpressionStatement	"errprintf ( udev -> memory , ""upd->icomp    = %5d\\n"" , upd -> icomp )"	1353:8:57923:57983	2551537	20	True				
ANR	2552290	CallExpression	"errprintf ( udev -> memory , ""upd->icomp    = %5d\\n"" , upd -> icomp )"		2551537	0					
ANR	2552291	Callee	errprintf		2551537	0					
ANR	2552292	Identifier	errprintf		2551537	0					
ANR	2552293	ArgumentList	udev -> memory		2551537	1					
ANR	2552294	Argument	udev -> memory		2551537	0					
ANR	2552295	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552296	Identifier	udev		2551537	0					
ANR	2552297	Identifier	memory		2551537	1					
ANR	2552298	Argument	"""upd->icomp    = %5d\\n"""		2551537	1					
ANR	2552299	PrimaryExpression	"""upd->icomp    = %5d\\n"""		2551537	0					
ANR	2552300	Argument	upd -> icomp		2551537	2					
ANR	2552301	PtrMemberAccess	upd -> icomp		2551537	0					
ANR	2552302	Identifier	upd		2551537	0					
ANR	2552303	Identifier	icomp		2551537	1					
ANR	2552304	ExpressionStatement	"errprintf ( udev -> memory , ""upd->lf       = %5d\\n"" , upd -> lf )"	1354:8:57993:58050	2551537	21	True				
ANR	2552305	CallExpression	"errprintf ( udev -> memory , ""upd->lf       = %5d\\n"" , upd -> lf )"		2551537	0					
ANR	2552306	Callee	errprintf		2551537	0					
ANR	2552307	Identifier	errprintf		2551537	0					
ANR	2552308	ArgumentList	udev -> memory		2551537	1					
ANR	2552309	Argument	udev -> memory		2551537	0					
ANR	2552310	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552311	Identifier	udev		2551537	0					
ANR	2552312	Identifier	memory		2551537	1					
ANR	2552313	Argument	"""upd->lf       = %5d\\n"""		2551537	1					
ANR	2552314	PrimaryExpression	"""upd->lf       = %5d\\n"""		2551537	0					
ANR	2552315	Argument	upd -> lf		2551537	2					
ANR	2552316	PtrMemberAccess	upd -> lf		2551537	0					
ANR	2552317	Identifier	upd		2551537	0					
ANR	2552318	Identifier	lf		2551537	1					
ANR	2552319	ExpressionStatement	"errprintf ( udev -> memory , ""upd->xprinter = %5d\\n"" , upd -> xprinter )"	1355:8:58060:58123	2551537	22	True				
ANR	2552320	CallExpression	"errprintf ( udev -> memory , ""upd->xprinter = %5d\\n"" , upd -> xprinter )"		2551537	0					
ANR	2552321	Callee	errprintf		2551537	0					
ANR	2552322	Identifier	errprintf		2551537	0					
ANR	2552323	ArgumentList	udev -> memory		2551537	1					
ANR	2552324	Argument	udev -> memory		2551537	0					
ANR	2552325	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552326	Identifier	udev		2551537	0					
ANR	2552327	Identifier	memory		2551537	1					
ANR	2552328	Argument	"""upd->xprinter = %5d\\n"""		2551537	1					
ANR	2552329	PrimaryExpression	"""upd->xprinter = %5d\\n"""		2551537	0					
ANR	2552330	Argument	upd -> xprinter		2551537	2					
ANR	2552331	PtrMemberAccess	upd -> xprinter		2551537	0					
ANR	2552332	Identifier	upd		2551537	0					
ANR	2552333	Identifier	xprinter		2551537	1					
ANR	2552334	ExpressionStatement	"errprintf ( udev -> memory , ""upd->yscan    = %5d\\n"" , upd -> yscan )"	1356:8:58133:58193	2551537	23	True				
ANR	2552335	CallExpression	"errprintf ( udev -> memory , ""upd->yscan    = %5d\\n"" , upd -> yscan )"		2551537	0					
ANR	2552336	Callee	errprintf		2551537	0					
ANR	2552337	Identifier	errprintf		2551537	0					
ANR	2552338	ArgumentList	udev -> memory		2551537	1					
ANR	2552339	Argument	udev -> memory		2551537	0					
ANR	2552340	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552341	Identifier	udev		2551537	0					
ANR	2552342	Identifier	memory		2551537	1					
ANR	2552343	Argument	"""upd->yscan    = %5d\\n"""		2551537	1					
ANR	2552344	PrimaryExpression	"""upd->yscan    = %5d\\n"""		2551537	0					
ANR	2552345	Argument	upd -> yscan		2551537	2					
ANR	2552346	PtrMemberAccess	upd -> yscan		2551537	0					
ANR	2552347	Identifier	upd		2551537	0					
ANR	2552348	Identifier	yscan		2551537	1					
ANR	2552349	ExpressionStatement	"errprintf ( udev -> memory , ""upd->yprinter = %5d\\n"" , upd -> yprinter )"	1357:8:58203:58266	2551537	24	True				
ANR	2552350	CallExpression	"errprintf ( udev -> memory , ""upd->yprinter = %5d\\n"" , upd -> yprinter )"		2551537	0					
ANR	2552351	Callee	errprintf		2551537	0					
ANR	2552352	Identifier	errprintf		2551537	0					
ANR	2552353	ArgumentList	udev -> memory		2551537	1					
ANR	2552354	Argument	udev -> memory		2551537	0					
ANR	2552355	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552356	Identifier	udev		2551537	0					
ANR	2552357	Identifier	memory		2551537	1					
ANR	2552358	Argument	"""upd->yprinter = %5d\\n"""		2551537	1					
ANR	2552359	PrimaryExpression	"""upd->yprinter = %5d\\n"""		2551537	0					
ANR	2552360	Argument	upd -> yprinter		2551537	2					
ANR	2552361	PtrMemberAccess	upd -> yprinter		2551537	0					
ANR	2552362	Identifier	upd		2551537	0					
ANR	2552363	Identifier	yprinter		2551537	1					
ANR	2552364	ExpressionStatement	"errprintf ( udev -> memory , ""upd->yscnbuf  = %5d\\n"" , upd -> yscnbuf )"	1358:8:58276:58338	2551537	25	True				
ANR	2552365	CallExpression	"errprintf ( udev -> memory , ""upd->yscnbuf  = %5d\\n"" , upd -> yscnbuf )"		2551537	0					
ANR	2552366	Callee	errprintf		2551537	0					
ANR	2552367	Identifier	errprintf		2551537	0					
ANR	2552368	ArgumentList	udev -> memory		2551537	1					
ANR	2552369	Argument	udev -> memory		2551537	0					
ANR	2552370	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552371	Identifier	udev		2551537	0					
ANR	2552372	Identifier	memory		2551537	1					
ANR	2552373	Argument	"""upd->yscnbuf  = %5d\\n"""		2551537	1					
ANR	2552374	PrimaryExpression	"""upd->yscnbuf  = %5d\\n"""		2551537	0					
ANR	2552375	Argument	upd -> yscnbuf		2551537	2					
ANR	2552376	PtrMemberAccess	upd -> yscnbuf		2551537	0					
ANR	2552377	Identifier	upd		2551537	0					
ANR	2552378	Identifier	yscnbuf		2551537	1					
ANR	2552379	ExpressionStatement	ln = 13	1360:8:58349:58356	2551537	26	True				
ANR	2552380	AssignmentExpression	ln = 13		2551537	0		=			
ANR	2552381	Identifier	ln		2551537	0					
ANR	2552382	PrimaryExpression	13		2551537	1					
ANR	2552383	ExpressionStatement	lv = 5	1361:8:58366:58372	2551537	27	True				
ANR	2552384	AssignmentExpression	lv = 5		2551537	0		=			
ANR	2552385	Identifier	lv		2551537	0					
ANR	2552386	PrimaryExpression	5		2551537	1					
ANR	2552387	ForStatement	for ( i = 0 ; countof ( upd_choice ) > i ; ++ i )		2551537	28					
ANR	2552388	ForInit	i = 0 ;	1362:12:58386:58391	2551537	0	True				
ANR	2552389	AssignmentExpression	i = 0		2551537	0		=			
ANR	2552390	Identifier	i		2551537	0					
ANR	2552391	PrimaryExpression	0		2551537	1					
ANR	2552392	Condition	countof ( upd_choice ) > i	1362:19:58393:58415	2551537	1	True				
ANR	2552393	RelationalExpression	countof ( upd_choice ) > i		2551537	0		>			
ANR	2552394	CallExpression	countof ( upd_choice )		2551537	0					
ANR	2552395	Callee	countof		2551537	0					
ANR	2552396	Identifier	countof		2551537	0					
ANR	2552397	ArgumentList	upd_choice		2551537	1					
ANR	2552398	Argument	upd_choice		2551537	0					
ANR	2552399	Identifier	upd_choice		2551537	0					
ANR	2552400	Identifier	i		2551537	1					
ANR	2552401	UnaryExpression	++ i	1362:44:58418:58420	2551537	2	True				
ANR	2552402	IncDec	++		2551537	0					
ANR	2552403	Identifier	i		2551537	1					
ANR	2552404	CompoundStatement		116:49:4606:4606	2551537	3					
ANR	2552405	IfStatement	if ( ! upd_choice [ i ] )		2551537	0					
ANR	2552406	Condition	! upd_choice [ i ]	1363:13:58438:58451	2551537	0	True				
ANR	2552407	UnaryOperationExpression	! upd_choice [ i ]		2551537	0					
ANR	2552408	UnaryOperator	!		2551537	0					
ANR	2552409	ArrayIndexing	upd_choice [ i ]		2551537	1					
ANR	2552410	Identifier	upd_choice		2551537	0					
ANR	2552411	Identifier	i		2551537	1					
ANR	2552412	ContinueStatement	continue ;	1363:29:58454:58462	2551537	1	True				
ANR	2552413	ExpressionStatement	l = strlen ( upd_choice [ i ] [ 0 ] )	1364:10:58474:58502	2551537	1	True				
ANR	2552414	AssignmentExpression	l = strlen ( upd_choice [ i ] [ 0 ] )		2551537	0		=			
ANR	2552415	Identifier	l		2551537	0					
ANR	2552416	CallExpression	strlen ( upd_choice [ i ] [ 0 ] )		2551537	1					
ANR	2552417	Callee	strlen		2551537	0					
ANR	2552418	Identifier	strlen		2551537	0					
ANR	2552419	ArgumentList	upd_choice [ i ] [ 0 ]		2551537	1					
ANR	2552420	Argument	upd_choice [ i ] [ 0 ]		2551537	0					
ANR	2552421	ArrayIndexing	upd_choice [ i ] [ 0 ]		2551537	0					
ANR	2552422	ArrayIndexing	upd_choice [ i ]		2551537	0					
ANR	2552423	Identifier	upd_choice		2551537	0					
ANR	2552424	Identifier	i		2551537	1					
ANR	2552425	PrimaryExpression	0		2551537	1					
ANR	2552426	IfStatement	if ( ln < l )		2551537	2					
ANR	2552427	Condition	ln < l	1365:13:58517:58522	2551537	0	True				
ANR	2552428	RelationalExpression	ln < l		2551537	0		<			
ANR	2552429	Identifier	ln		2551537	0					
ANR	2552430	Identifier	l		2551537	1					
ANR	2552431	ExpressionStatement	ln = l	1365:21:58525:58531	2551537	1	True				
ANR	2552432	AssignmentExpression	ln = l		2551537	0		=			
ANR	2552433	Identifier	ln		2551537	0					
ANR	2552434	Identifier	l		2551537	1					
ANR	2552435	ForStatement	for ( j = 1 ; upd_choice [ i ] [ j ] ; ++ j )		2551537	3					
ANR	2552436	ForInit	j = 1 ;	1366:14:58547:58552	2551537	0	True				
ANR	2552437	AssignmentExpression	j = 1		2551537	0		=			
ANR	2552438	Identifier	j		2551537	0					
ANR	2552439	PrimaryExpression	1		2551537	1					
ANR	2552440	Condition	upd_choice [ i ] [ j ]	1366:21:58554:58569	2551537	1	True				
ANR	2552441	ArrayIndexing	upd_choice [ i ] [ j ]		2551537	0					
ANR	2552442	ArrayIndexing	upd_choice [ i ]		2551537	0					
ANR	2552443	Identifier	upd_choice		2551537	0					
ANR	2552444	Identifier	i		2551537	1					
ANR	2552445	Identifier	j		2551537	1					
ANR	2552446	UnaryExpression	++ j	1366:39:58572:58574	2551537	2	True				
ANR	2552447	IncDec	++		2551537	0					
ANR	2552448	Identifier	j		2551537	1					
ANR	2552449	CompoundStatement		120:44:4760:4760	2551537	3					
ANR	2552450	ExpressionStatement	l = strlen ( upd_choice [ i ] [ j ] )	1367:12:58591:58619	2551537	0	True				
ANR	2552451	AssignmentExpression	l = strlen ( upd_choice [ i ] [ j ] )		2551537	0		=			
ANR	2552452	Identifier	l		2551537	0					
ANR	2552453	CallExpression	strlen ( upd_choice [ i ] [ j ] )		2551537	1					
ANR	2552454	Callee	strlen		2551537	0					
ANR	2552455	Identifier	strlen		2551537	0					
ANR	2552456	ArgumentList	upd_choice [ i ] [ j ]		2551537	1					
ANR	2552457	Argument	upd_choice [ i ] [ j ]		2551537	0					
ANR	2552458	ArrayIndexing	upd_choice [ i ] [ j ]		2551537	0					
ANR	2552459	ArrayIndexing	upd_choice [ i ]		2551537	0					
ANR	2552460	Identifier	upd_choice		2551537	0					
ANR	2552461	Identifier	i		2551537	1					
ANR	2552462	Identifier	j		2551537	1					
ANR	2552463	IfStatement	if ( lv < l )		2551537	1					
ANR	2552464	Condition	lv < l	1368:15:58636:58641	2551537	0	True				
ANR	2552465	RelationalExpression	lv < l		2551537	0		<			
ANR	2552466	Identifier	lv		2551537	0					
ANR	2552467	Identifier	l		2551537	1					
ANR	2552468	ExpressionStatement	lv = l	1368:23:58644:58650	2551537	1	True				
ANR	2552469	AssignmentExpression	lv = l		2551537	0		=			
ANR	2552470	Identifier	lv		2551537	0					
ANR	2552471	Identifier	l		2551537	1					
ANR	2552472	ForStatement	for ( i = 0 ; countof ( upd_flags ) > i ; ++ i )		2551537	29					
ANR	2552473	ForInit	i = 0 ;	1372:12:58687:58692	2551537	0	True				
ANR	2552474	AssignmentExpression	i = 0		2551537	0		=			
ANR	2552475	Identifier	i		2551537	0					
ANR	2552476	PrimaryExpression	0		2551537	1					
ANR	2552477	Condition	countof ( upd_flags ) > i	1372:19:58694:58715	2551537	1	True				
ANR	2552478	RelationalExpression	countof ( upd_flags ) > i		2551537	0		>			
ANR	2552479	CallExpression	countof ( upd_flags )		2551537	0					
ANR	2552480	Callee	countof		2551537	0					
ANR	2552481	Identifier	countof		2551537	0					
ANR	2552482	ArgumentList	upd_flags		2551537	1					
ANR	2552483	Argument	upd_flags		2551537	0					
ANR	2552484	Identifier	upd_flags		2551537	0					
ANR	2552485	Identifier	i		2551537	1					
ANR	2552486	UnaryExpression	++ i	1372:43:58718:58720	2551537	2	True				
ANR	2552487	IncDec	++		2551537	0					
ANR	2552488	Identifier	i		2551537	1					
ANR	2552489	CompoundStatement		126:48:4906:4906	2551537	3					
ANR	2552490	IfStatement	if ( upd_flags [ i ] )		2551537	0					
ANR	2552491	Condition	upd_flags [ i ]	1373:13:58738:58749	2551537	0	True				
ANR	2552492	ArrayIndexing	upd_flags [ i ]		2551537	0					
ANR	2552493	Identifier	upd_flags		2551537	0					
ANR	2552494	Identifier	i		2551537	1					
ANR	2552495	CompoundStatement		127:27:4935:4935	2551537	1					
ANR	2552496	ExpressionStatement	l = strlen ( upd_flags [ i ] )	1374:12:58766:58790	2551537	0	True				
ANR	2552497	AssignmentExpression	l = strlen ( upd_flags [ i ] )		2551537	0		=			
ANR	2552498	Identifier	l		2551537	0					
ANR	2552499	CallExpression	strlen ( upd_flags [ i ] )		2551537	1					
ANR	2552500	Callee	strlen		2551537	0					
ANR	2552501	Identifier	strlen		2551537	0					
ANR	2552502	ArgumentList	upd_flags [ i ]		2551537	1					
ANR	2552503	Argument	upd_flags [ i ]		2551537	0					
ANR	2552504	ArrayIndexing	upd_flags [ i ]		2551537	0					
ANR	2552505	Identifier	upd_flags		2551537	0					
ANR	2552506	Identifier	i		2551537	1					
ANR	2552507	IfStatement	if ( ln < l )		2551537	1					
ANR	2552508	Condition	ln < l	1375:15:58807:58812	2551537	0	True				
ANR	2552509	RelationalExpression	ln < l		2551537	0		<			
ANR	2552510	Identifier	ln		2551537	0					
ANR	2552511	Identifier	l		2551537	1					
ANR	2552512	ExpressionStatement	ln = l	1375:23:58815:58821	2551537	1	True				
ANR	2552513	AssignmentExpression	ln = l		2551537	0		=			
ANR	2552514	Identifier	ln		2551537	0					
ANR	2552515	Identifier	l		2551537	1					
ANR	2552516	ForStatement	for ( i = 0 ; countof ( upd_ints ) > i ; ++ i )		2551537	30					
ANR	2552517	ForInit	i = 0 ;	1379:12:58858:58863	2551537	0	True				
ANR	2552518	AssignmentExpression	i = 0		2551537	0		=			
ANR	2552519	Identifier	i		2551537	0					
ANR	2552520	PrimaryExpression	0		2551537	1					
ANR	2552521	Condition	countof ( upd_ints ) > i	1379:19:58865:58885	2551537	1	True				
ANR	2552522	RelationalExpression	countof ( upd_ints ) > i		2551537	0		>			
ANR	2552523	CallExpression	countof ( upd_ints )		2551537	0					
ANR	2552524	Callee	countof		2551537	0					
ANR	2552525	Identifier	countof		2551537	0					
ANR	2552526	ArgumentList	upd_ints		2551537	1					
ANR	2552527	Argument	upd_ints		2551537	0					
ANR	2552528	Identifier	upd_ints		2551537	0					
ANR	2552529	Identifier	i		2551537	1					
ANR	2552530	UnaryExpression	++ i	1379:42:58888:58890	2551537	2	True				
ANR	2552531	IncDec	++		2551537	0					
ANR	2552532	Identifier	i		2551537	1					
ANR	2552533	CompoundStatement		133:47:5076:5076	2551537	3					
ANR	2552534	IfStatement	if ( upd_ints [ i ] )		2551537	0					
ANR	2552535	Condition	upd_ints [ i ]	1380:13:58908:58918	2551537	0	True				
ANR	2552536	ArrayIndexing	upd_ints [ i ]		2551537	0					
ANR	2552537	Identifier	upd_ints		2551537	0					
ANR	2552538	Identifier	i		2551537	1					
ANR	2552539	CompoundStatement		134:26:5104:5104	2551537	1					
ANR	2552540	ExpressionStatement	l = strlen ( upd_ints [ i ] )	1381:12:58935:58958	2551537	0	True				
ANR	2552541	AssignmentExpression	l = strlen ( upd_ints [ i ] )		2551537	0		=			
ANR	2552542	Identifier	l		2551537	0					
ANR	2552543	CallExpression	strlen ( upd_ints [ i ] )		2551537	1					
ANR	2552544	Callee	strlen		2551537	0					
ANR	2552545	Identifier	strlen		2551537	0					
ANR	2552546	ArgumentList	upd_ints [ i ]		2551537	1					
ANR	2552547	Argument	upd_ints [ i ]		2551537	0					
ANR	2552548	ArrayIndexing	upd_ints [ i ]		2551537	0					
ANR	2552549	Identifier	upd_ints		2551537	0					
ANR	2552550	Identifier	i		2551537	1					
ANR	2552551	IfStatement	if ( ln < l )		2551537	1					
ANR	2552552	Condition	ln < l	1382:15:58975:58980	2551537	0	True				
ANR	2552553	RelationalExpression	ln < l		2551537	0		<			
ANR	2552554	Identifier	ln		2551537	0					
ANR	2552555	Identifier	l		2551537	1					
ANR	2552556	ExpressionStatement	ln = l	1382:23:58983:58989	2551537	1	True				
ANR	2552557	AssignmentExpression	ln = l		2551537	0		=			
ANR	2552558	Identifier	ln		2551537	0					
ANR	2552559	Identifier	l		2551537	1					
ANR	2552560	ForStatement	for ( i = 0 ; countof ( upd_int_a ) > i ; ++ i )		2551537	31					
ANR	2552561	ForInit	i = 0 ;	1386:12:59026:59031	2551537	0	True				
ANR	2552562	AssignmentExpression	i = 0		2551537	0		=			
ANR	2552563	Identifier	i		2551537	0					
ANR	2552564	PrimaryExpression	0		2551537	1					
ANR	2552565	Condition	countof ( upd_int_a ) > i	1386:19:59033:59054	2551537	1	True				
ANR	2552566	RelationalExpression	countof ( upd_int_a ) > i		2551537	0		>			
ANR	2552567	CallExpression	countof ( upd_int_a )		2551537	0					
ANR	2552568	Callee	countof		2551537	0					
ANR	2552569	Identifier	countof		2551537	0					
ANR	2552570	ArgumentList	upd_int_a		2551537	1					
ANR	2552571	Argument	upd_int_a		2551537	0					
ANR	2552572	Identifier	upd_int_a		2551537	0					
ANR	2552573	Identifier	i		2551537	1					
ANR	2552574	UnaryExpression	++ i	1386:43:59057:59059	2551537	2	True				
ANR	2552575	IncDec	++		2551537	0					
ANR	2552576	Identifier	i		2551537	1					
ANR	2552577	CompoundStatement		140:48:5245:5245	2551537	3					
ANR	2552578	IfStatement	if ( upd_int_a [ i ] )		2551537	0					
ANR	2552579	Condition	upd_int_a [ i ]	1387:13:59077:59088	2551537	0	True				
ANR	2552580	ArrayIndexing	upd_int_a [ i ]		2551537	0					
ANR	2552581	Identifier	upd_int_a		2551537	0					
ANR	2552582	Identifier	i		2551537	1					
ANR	2552583	CompoundStatement		141:27:5274:5274	2551537	1					
ANR	2552584	ExpressionStatement	l = strlen ( upd_int_a [ i ] )	1388:12:59105:59129	2551537	0	True				
ANR	2552585	AssignmentExpression	l = strlen ( upd_int_a [ i ] )		2551537	0		=			
ANR	2552586	Identifier	l		2551537	0					
ANR	2552587	CallExpression	strlen ( upd_int_a [ i ] )		2551537	1					
ANR	2552588	Callee	strlen		2551537	0					
ANR	2552589	Identifier	strlen		2551537	0					
ANR	2552590	ArgumentList	upd_int_a [ i ]		2551537	1					
ANR	2552591	Argument	upd_int_a [ i ]		2551537	0					
ANR	2552592	ArrayIndexing	upd_int_a [ i ]		2551537	0					
ANR	2552593	Identifier	upd_int_a		2551537	0					
ANR	2552594	Identifier	i		2551537	1					
ANR	2552595	IfStatement	if ( ln < l )		2551537	1					
ANR	2552596	Condition	ln < l	1389:15:59146:59151	2551537	0	True				
ANR	2552597	RelationalExpression	ln < l		2551537	0		<			
ANR	2552598	Identifier	ln		2551537	0					
ANR	2552599	Identifier	l		2551537	1					
ANR	2552600	ExpressionStatement	ln = l	1389:23:59154:59160	2551537	1	True				
ANR	2552601	AssignmentExpression	ln = l		2551537	0		=			
ANR	2552602	Identifier	ln		2551537	0					
ANR	2552603	Identifier	l		2551537	1					
ANR	2552604	ForStatement	for ( i = 0 ; countof ( upd_strings ) > i ; ++ i )		2551537	32					
ANR	2552605	ForInit	i = 0 ;	1393:12:59197:59202	2551537	0	True				
ANR	2552606	AssignmentExpression	i = 0		2551537	0		=			
ANR	2552607	Identifier	i		2551537	0					
ANR	2552608	PrimaryExpression	0		2551537	1					
ANR	2552609	Condition	countof ( upd_strings ) > i	1393:19:59204:59227	2551537	1	True				
ANR	2552610	RelationalExpression	countof ( upd_strings ) > i		2551537	0		>			
ANR	2552611	CallExpression	countof ( upd_strings )		2551537	0					
ANR	2552612	Callee	countof		2551537	0					
ANR	2552613	Identifier	countof		2551537	0					
ANR	2552614	ArgumentList	upd_strings		2551537	1					
ANR	2552615	Argument	upd_strings		2551537	0					
ANR	2552616	Identifier	upd_strings		2551537	0					
ANR	2552617	Identifier	i		2551537	1					
ANR	2552618	UnaryExpression	++ i	1393:45:59230:59232	2551537	2	True				
ANR	2552619	IncDec	++		2551537	0					
ANR	2552620	Identifier	i		2551537	1					
ANR	2552621	CompoundStatement		147:50:5418:5418	2551537	3					
ANR	2552622	IfStatement	if ( upd_strings [ i ] )		2551537	0					
ANR	2552623	Condition	upd_strings [ i ]	1394:13:59250:59263	2551537	0	True				
ANR	2552624	ArrayIndexing	upd_strings [ i ]		2551537	0					
ANR	2552625	Identifier	upd_strings		2551537	0					
ANR	2552626	Identifier	i		2551537	1					
ANR	2552627	CompoundStatement		148:29:5449:5449	2551537	1					
ANR	2552628	ExpressionStatement	l = strlen ( upd_strings [ i ] )	1395:12:59280:59306	2551537	0	True				
ANR	2552629	AssignmentExpression	l = strlen ( upd_strings [ i ] )		2551537	0		=			
ANR	2552630	Identifier	l		2551537	0					
ANR	2552631	CallExpression	strlen ( upd_strings [ i ] )		2551537	1					
ANR	2552632	Callee	strlen		2551537	0					
ANR	2552633	Identifier	strlen		2551537	0					
ANR	2552634	ArgumentList	upd_strings [ i ]		2551537	1					
ANR	2552635	Argument	upd_strings [ i ]		2551537	0					
ANR	2552636	ArrayIndexing	upd_strings [ i ]		2551537	0					
ANR	2552637	Identifier	upd_strings		2551537	0					
ANR	2552638	Identifier	i		2551537	1					
ANR	2552639	IfStatement	if ( ln < l )		2551537	1					
ANR	2552640	Condition	ln < l	1396:15:59323:59328	2551537	0	True				
ANR	2552641	RelationalExpression	ln < l		2551537	0		<			
ANR	2552642	Identifier	ln		2551537	0					
ANR	2552643	Identifier	l		2551537	1					
ANR	2552644	ExpressionStatement	ln = l	1396:23:59331:59337	2551537	1	True				
ANR	2552645	AssignmentExpression	ln = l		2551537	0		=			
ANR	2552646	Identifier	ln		2551537	0					
ANR	2552647	Identifier	l		2551537	1					
ANR	2552648	ForStatement	for ( i = 0 ; countof ( upd_string_a ) > i ; ++ i )		2551537	33					
ANR	2552649	ForInit	i = 0 ;	1400:12:59374:59379	2551537	0	True				
ANR	2552650	AssignmentExpression	i = 0		2551537	0		=			
ANR	2552651	Identifier	i		2551537	0					
ANR	2552652	PrimaryExpression	0		2551537	1					
ANR	2552653	Condition	countof ( upd_string_a ) > i	1400:19:59381:59405	2551537	1	True				
ANR	2552654	RelationalExpression	countof ( upd_string_a ) > i		2551537	0		>			
ANR	2552655	CallExpression	countof ( upd_string_a )		2551537	0					
ANR	2552656	Callee	countof		2551537	0					
ANR	2552657	Identifier	countof		2551537	0					
ANR	2552658	ArgumentList	upd_string_a		2551537	1					
ANR	2552659	Argument	upd_string_a		2551537	0					
ANR	2552660	Identifier	upd_string_a		2551537	0					
ANR	2552661	Identifier	i		2551537	1					
ANR	2552662	UnaryExpression	++ i	1400:46:59408:59410	2551537	2	True				
ANR	2552663	IncDec	++		2551537	0					
ANR	2552664	Identifier	i		2551537	1					
ANR	2552665	CompoundStatement		154:51:5596:5596	2551537	3					
ANR	2552666	IfStatement	if ( upd_string_a [ i ] )		2551537	0					
ANR	2552667	Condition	upd_string_a [ i ]	1401:13:59428:59442	2551537	0	True				
ANR	2552668	ArrayIndexing	upd_string_a [ i ]		2551537	0					
ANR	2552669	Identifier	upd_string_a		2551537	0					
ANR	2552670	Identifier	i		2551537	1					
ANR	2552671	CompoundStatement		155:30:5628:5628	2551537	1					
ANR	2552672	ExpressionStatement	l = strlen ( upd_string_a [ i ] )	1402:12:59459:59486	2551537	0	True				
ANR	2552673	AssignmentExpression	l = strlen ( upd_string_a [ i ] )		2551537	0		=			
ANR	2552674	Identifier	l		2551537	0					
ANR	2552675	CallExpression	strlen ( upd_string_a [ i ] )		2551537	1					
ANR	2552676	Callee	strlen		2551537	0					
ANR	2552677	Identifier	strlen		2551537	0					
ANR	2552678	ArgumentList	upd_string_a [ i ]		2551537	1					
ANR	2552679	Argument	upd_string_a [ i ]		2551537	0					
ANR	2552680	ArrayIndexing	upd_string_a [ i ]		2551537	0					
ANR	2552681	Identifier	upd_string_a		2551537	0					
ANR	2552682	Identifier	i		2551537	1					
ANR	2552683	IfStatement	if ( ln < l )		2551537	1					
ANR	2552684	Condition	ln < l	1403:15:59503:59508	2551537	0	True				
ANR	2552685	RelationalExpression	ln < l		2551537	0		<			
ANR	2552686	Identifier	ln		2551537	0					
ANR	2552687	Identifier	l		2551537	1					
ANR	2552688	ExpressionStatement	ln = l	1403:23:59511:59517	2551537	1	True				
ANR	2552689	AssignmentExpression	ln = l		2551537	0		=			
ANR	2552690	Identifier	ln		2551537	0					
ANR	2552691	Identifier	l		2551537	1					
ANR	2552692	ForStatement	for ( i = 0 ; countof ( upd_float_a ) > i ; ++ i )		2551537	34					
ANR	2552693	ForInit	i = 0 ;	1407:12:59554:59559	2551537	0	True				
ANR	2552694	AssignmentExpression	i = 0		2551537	0		=			
ANR	2552695	Identifier	i		2551537	0					
ANR	2552696	PrimaryExpression	0		2551537	1					
ANR	2552697	Condition	countof ( upd_float_a ) > i	1407:19:59561:59584	2551537	1	True				
ANR	2552698	RelationalExpression	countof ( upd_float_a ) > i		2551537	0		>			
ANR	2552699	CallExpression	countof ( upd_float_a )		2551537	0					
ANR	2552700	Callee	countof		2551537	0					
ANR	2552701	Identifier	countof		2551537	0					
ANR	2552702	ArgumentList	upd_float_a		2551537	1					
ANR	2552703	Argument	upd_float_a		2551537	0					
ANR	2552704	Identifier	upd_float_a		2551537	0					
ANR	2552705	Identifier	i		2551537	1					
ANR	2552706	UnaryExpression	++ i	1407:45:59587:59589	2551537	2	True				
ANR	2552707	IncDec	++		2551537	0					
ANR	2552708	Identifier	i		2551537	1					
ANR	2552709	CompoundStatement		161:50:5775:5775	2551537	3					
ANR	2552710	IfStatement	if ( upd_float_a [ i ] )		2551537	0					
ANR	2552711	Condition	upd_float_a [ i ]	1408:13:59607:59620	2551537	0	True				
ANR	2552712	ArrayIndexing	upd_float_a [ i ]		2551537	0					
ANR	2552713	Identifier	upd_float_a		2551537	0					
ANR	2552714	Identifier	i		2551537	1					
ANR	2552715	CompoundStatement		162:29:5806:5806	2551537	1					
ANR	2552716	ExpressionStatement	l = strlen ( upd_float_a [ i ] )	1409:12:59637:59663	2551537	0	True				
ANR	2552717	AssignmentExpression	l = strlen ( upd_float_a [ i ] )		2551537	0		=			
ANR	2552718	Identifier	l		2551537	0					
ANR	2552719	CallExpression	strlen ( upd_float_a [ i ] )		2551537	1					
ANR	2552720	Callee	strlen		2551537	0					
ANR	2552721	Identifier	strlen		2551537	0					
ANR	2552722	ArgumentList	upd_float_a [ i ]		2551537	1					
ANR	2552723	Argument	upd_float_a [ i ]		2551537	0					
ANR	2552724	ArrayIndexing	upd_float_a [ i ]		2551537	0					
ANR	2552725	Identifier	upd_float_a		2551537	0					
ANR	2552726	Identifier	i		2551537	1					
ANR	2552727	IfStatement	if ( ln < l )		2551537	1					
ANR	2552728	Condition	ln < l	1410:15:59680:59685	2551537	0	True				
ANR	2552729	RelationalExpression	ln < l		2551537	0		<			
ANR	2552730	Identifier	ln		2551537	0					
ANR	2552731	Identifier	l		2551537	1					
ANR	2552732	ExpressionStatement	ln = l	1410:23:59688:59694	2551537	1	True				
ANR	2552733	AssignmentExpression	ln = l		2551537	0		=			
ANR	2552734	Identifier	ln		2551537	0					
ANR	2552735	Identifier	l		2551537	1					
ANR	2552736	ForStatement	for ( i = 0 ; countof ( upd_choice ) > i ; ++ i )		2551537	35					
ANR	2552737	ForInit	i = 0 ;	1414:12:59731:59736	2551537	0	True				
ANR	2552738	AssignmentExpression	i = 0		2551537	0		=			
ANR	2552739	Identifier	i		2551537	0					
ANR	2552740	PrimaryExpression	0		2551537	1					
ANR	2552741	Condition	countof ( upd_choice ) > i	1414:19:59738:59760	2551537	1	True				
ANR	2552742	RelationalExpression	countof ( upd_choice ) > i		2551537	0		>			
ANR	2552743	CallExpression	countof ( upd_choice )		2551537	0					
ANR	2552744	Callee	countof		2551537	0					
ANR	2552745	Identifier	countof		2551537	0					
ANR	2552746	ArgumentList	upd_choice		2551537	1					
ANR	2552747	Argument	upd_choice		2551537	0					
ANR	2552748	Identifier	upd_choice		2551537	0					
ANR	2552749	Identifier	i		2551537	1					
ANR	2552750	UnaryExpression	++ i	1414:44:59763:59765	2551537	2	True				
ANR	2552751	IncDec	++		2551537	0					
ANR	2552752	Identifier	i		2551537	1					
ANR	2552753	CompoundStatement		168:49:5951:5951	2551537	3					
ANR	2552754	IfStatement	if ( upd_choice [ i ] )		2551537	0					
ANR	2552755	Condition	upd_choice [ i ]	1415:13:59783:59795	2551537	0	True				
ANR	2552756	ArrayIndexing	upd_choice [ i ]		2551537	0					
ANR	2552757	Identifier	upd_choice		2551537	0					
ANR	2552758	Identifier	i		2551537	1					
ANR	2552759	CompoundStatement		169:28:5981:5981	2551537	1					
ANR	2552760	ExpressionStatement	"errprintf ( udev -> memory , ""%*s = %-*s (%2d)\\n"" , ln , upd_choice [ i ] [ 0 ] , lv , upd_choice [ i ] [ upd -> choice [ i ] ] , upd -> choice [ i ] )"	1416:12:59812:59940	2551537	0	True				
ANR	2552761	CallExpression	"errprintf ( udev -> memory , ""%*s = %-*s (%2d)\\n"" , ln , upd_choice [ i ] [ 0 ] , lv , upd_choice [ i ] [ upd -> choice [ i ] ] , upd -> choice [ i ] )"		2551537	0					
ANR	2552762	Callee	errprintf		2551537	0					
ANR	2552763	Identifier	errprintf		2551537	0					
ANR	2552764	ArgumentList	udev -> memory		2551537	1					
ANR	2552765	Argument	udev -> memory		2551537	0					
ANR	2552766	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552767	Identifier	udev		2551537	0					
ANR	2552768	Identifier	memory		2551537	1					
ANR	2552769	Argument	"""%*s = %-*s (%2d)\\n"""		2551537	1					
ANR	2552770	PrimaryExpression	"""%*s = %-*s (%2d)\\n"""		2551537	0					
ANR	2552771	Argument	ln		2551537	2					
ANR	2552772	Identifier	ln		2551537	0					
ANR	2552773	Argument	upd_choice [ i ] [ 0 ]		2551537	3					
ANR	2552774	ArrayIndexing	upd_choice [ i ] [ 0 ]		2551537	0					
ANR	2552775	ArrayIndexing	upd_choice [ i ]		2551537	0					
ANR	2552776	Identifier	upd_choice		2551537	0					
ANR	2552777	Identifier	i		2551537	1					
ANR	2552778	PrimaryExpression	0		2551537	1					
ANR	2552779	Argument	lv		2551537	4					
ANR	2552780	Identifier	lv		2551537	0					
ANR	2552781	Argument	upd_choice [ i ] [ upd -> choice [ i ] ]		2551537	5					
ANR	2552782	ArrayIndexing	upd_choice [ i ] [ upd -> choice [ i ] ]		2551537	0					
ANR	2552783	ArrayIndexing	upd_choice [ i ]		2551537	0					
ANR	2552784	Identifier	upd_choice		2551537	0					
ANR	2552785	Identifier	i		2551537	1					
ANR	2552786	ArrayIndexing	upd -> choice [ i ]		2551537	1					
ANR	2552787	PtrMemberAccess	upd -> choice		2551537	0					
ANR	2552788	Identifier	upd		2551537	0					
ANR	2552789	Identifier	choice		2551537	1					
ANR	2552790	Identifier	i		2551537	1					
ANR	2552791	Argument	upd -> choice [ i ]		2551537	6					
ANR	2552792	ArrayIndexing	upd -> choice [ i ]		2551537	0					
ANR	2552793	PtrMemberAccess	upd -> choice		2551537	0					
ANR	2552794	Identifier	upd		2551537	0					
ANR	2552795	Identifier	choice		2551537	1					
ANR	2552796	Identifier	i		2551537	1					
ANR	2552797	ElseStatement	else		2551537	0					
ANR	2552798	CompoundStatement		172:17:6142:6142	2551537	0					
ANR	2552799	ExpressionStatement	"errprintf ( udev -> memory , ""%*s[%2d] = %2d\\n"" , ln - 4 , ""upd_choice"" , i , upd -> choice [ i ] )"	1419:12:59973:60066	2551537	0	True				
ANR	2552800	CallExpression	"errprintf ( udev -> memory , ""%*s[%2d] = %2d\\n"" , ln - 4 , ""upd_choice"" , i , upd -> choice [ i ] )"		2551537	0					
ANR	2552801	Callee	errprintf		2551537	0					
ANR	2552802	Identifier	errprintf		2551537	0					
ANR	2552803	ArgumentList	udev -> memory		2551537	1					
ANR	2552804	Argument	udev -> memory		2551537	0					
ANR	2552805	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552806	Identifier	udev		2551537	0					
ANR	2552807	Identifier	memory		2551537	1					
ANR	2552808	Argument	"""%*s[%2d] = %2d\\n"""		2551537	1					
ANR	2552809	PrimaryExpression	"""%*s[%2d] = %2d\\n"""		2551537	0					
ANR	2552810	Argument	ln - 4		2551537	2					
ANR	2552811	AdditiveExpression	ln - 4		2551537	0		-			
ANR	2552812	Identifier	ln		2551537	0					
ANR	2552813	PrimaryExpression	4		2551537	1					
ANR	2552814	Argument	"""upd_choice"""		2551537	3					
ANR	2552815	PrimaryExpression	"""upd_choice"""		2551537	0					
ANR	2552816	Argument	i		2551537	4					
ANR	2552817	Identifier	i		2551537	0					
ANR	2552818	Argument	upd -> choice [ i ]		2551537	5					
ANR	2552819	ArrayIndexing	upd -> choice [ i ]		2551537	0					
ANR	2552820	PtrMemberAccess	upd -> choice		2551537	0					
ANR	2552821	Identifier	upd		2551537	0					
ANR	2552822	Identifier	choice		2551537	1					
ANR	2552823	Identifier	i		2551537	1					
ANR	2552824	ForStatement	for ( i = 0 ; countof ( upd_flags ) > i ; ++ i )		2551537	36					
ANR	2552825	ForInit	i = 0 ;	1424:12:60103:60108	2551537	0	True				
ANR	2552826	AssignmentExpression	i = 0		2551537	0		=			
ANR	2552827	Identifier	i		2551537	0					
ANR	2552828	PrimaryExpression	0		2551537	1					
ANR	2552829	Condition	countof ( upd_flags ) > i	1424:19:60110:60131	2551537	1	True				
ANR	2552830	RelationalExpression	countof ( upd_flags ) > i		2551537	0		>			
ANR	2552831	CallExpression	countof ( upd_flags )		2551537	0					
ANR	2552832	Callee	countof		2551537	0					
ANR	2552833	Identifier	countof		2551537	0					
ANR	2552834	ArgumentList	upd_flags		2551537	1					
ANR	2552835	Argument	upd_flags		2551537	0					
ANR	2552836	Identifier	upd_flags		2551537	0					
ANR	2552837	Identifier	i		2551537	1					
ANR	2552838	UnaryExpression	++ i	1424:43:60134:60136	2551537	2	True				
ANR	2552839	IncDec	++		2551537	0					
ANR	2552840	Identifier	i		2551537	1					
ANR	2552841	CompoundStatement		178:48:6322:6322	2551537	3					
ANR	2552842	IfStatement	if ( upd_flags [ i ] )		2551537	0					
ANR	2552843	Condition	upd_flags [ i ]	1425:13:60154:60165	2551537	0	True				
ANR	2552844	ArrayIndexing	upd_flags [ i ]		2551537	0					
ANR	2552845	Identifier	upd_flags		2551537	0					
ANR	2552846	Identifier	i		2551537	1					
ANR	2552847	CompoundStatement		179:27:6351:6351	2551537	1					
ANR	2552848	ExpressionStatement	"errprintf ( udev -> memory , ""%*s = %s\\n"" , ln , upd_flags [ i ] , ( ( uint32_t ) 1 << i ) & upd -> flags ? ""true"" : ""false"" )"	1426:12:60182:60302	2551537	0	True				
ANR	2552849	CallExpression	"errprintf ( udev -> memory , ""%*s = %s\\n"" , ln , upd_flags [ i ] , ( ( uint32_t ) 1 << i ) & upd -> flags ? ""true"" : ""false"" )"		2551537	0					
ANR	2552850	Callee	errprintf		2551537	0					
ANR	2552851	Identifier	errprintf		2551537	0					
ANR	2552852	ArgumentList	udev -> memory		2551537	1					
ANR	2552853	Argument	udev -> memory		2551537	0					
ANR	2552854	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552855	Identifier	udev		2551537	0					
ANR	2552856	Identifier	memory		2551537	1					
ANR	2552857	Argument	"""%*s = %s\\n"""		2551537	1					
ANR	2552858	PrimaryExpression	"""%*s = %s\\n"""		2551537	0					
ANR	2552859	Argument	ln		2551537	2					
ANR	2552860	Identifier	ln		2551537	0					
ANR	2552861	Argument	upd_flags [ i ]		2551537	3					
ANR	2552862	ArrayIndexing	upd_flags [ i ]		2551537	0					
ANR	2552863	Identifier	upd_flags		2551537	0					
ANR	2552864	Identifier	i		2551537	1					
ANR	2552865	Argument	"( ( uint32_t ) 1 << i ) & upd -> flags ? ""true"" : ""false"""		2551537	4					
ANR	2552866	ConditionalExpression	"( ( uint32_t ) 1 << i ) & upd -> flags ? ""true"" : ""false"""		2551537	0					
ANR	2552867	Condition	( ( uint32_t ) 1 << i ) & upd -> flags		2551537	0					
ANR	2552868	BitAndExpression	( ( uint32_t ) 1 << i ) & upd -> flags		2551537	0		&			
ANR	2552869	ShiftExpression	( uint32_t ) 1 << i		2551537	0		<<			
ANR	2552870	CastExpression	( uint32_t ) 1		2551537	0					
ANR	2552871	CastTarget	uint32_t		2551537	0					
ANR	2552872	PrimaryExpression	1		2551537	1					
ANR	2552873	Identifier	i		2551537	1					
ANR	2552874	PtrMemberAccess	upd -> flags		2551537	1					
ANR	2552875	Identifier	upd		2551537	0					
ANR	2552876	Identifier	flags		2551537	1					
ANR	2552877	PrimaryExpression	"""true"""		2551537	1					
ANR	2552878	PrimaryExpression	"""false"""		2551537	2					
ANR	2552879	ElseStatement	else		2551537	0					
ANR	2552880	CompoundStatement		182:17:6504:6504	2551537	0					
ANR	2552881	ExpressionStatement	"errprintf ( udev -> memory , ""%*s[%2d] = %s\\n"" , ln - 4 , ""upd_flags"" , i , ( ( uint32_t ) 1 << i ) & upd -> flags ? ""true"" : ""false"" )"	1429:12:60335:60463	2551537	0	True				
ANR	2552882	CallExpression	"errprintf ( udev -> memory , ""%*s[%2d] = %s\\n"" , ln - 4 , ""upd_flags"" , i , ( ( uint32_t ) 1 << i ) & upd -> flags ? ""true"" : ""false"" )"		2551537	0					
ANR	2552883	Callee	errprintf		2551537	0					
ANR	2552884	Identifier	errprintf		2551537	0					
ANR	2552885	ArgumentList	udev -> memory		2551537	1					
ANR	2552886	Argument	udev -> memory		2551537	0					
ANR	2552887	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552888	Identifier	udev		2551537	0					
ANR	2552889	Identifier	memory		2551537	1					
ANR	2552890	Argument	"""%*s[%2d] = %s\\n"""		2551537	1					
ANR	2552891	PrimaryExpression	"""%*s[%2d] = %s\\n"""		2551537	0					
ANR	2552892	Argument	ln - 4		2551537	2					
ANR	2552893	AdditiveExpression	ln - 4		2551537	0		-			
ANR	2552894	Identifier	ln		2551537	0					
ANR	2552895	PrimaryExpression	4		2551537	1					
ANR	2552896	Argument	"""upd_flags"""		2551537	3					
ANR	2552897	PrimaryExpression	"""upd_flags"""		2551537	0					
ANR	2552898	Argument	i		2551537	4					
ANR	2552899	Identifier	i		2551537	0					
ANR	2552900	Argument	"( ( uint32_t ) 1 << i ) & upd -> flags ? ""true"" : ""false"""		2551537	5					
ANR	2552901	ConditionalExpression	"( ( uint32_t ) 1 << i ) & upd -> flags ? ""true"" : ""false"""		2551537	0					
ANR	2552902	Condition	( ( uint32_t ) 1 << i ) & upd -> flags		2551537	0					
ANR	2552903	BitAndExpression	( ( uint32_t ) 1 << i ) & upd -> flags		2551537	0		&			
ANR	2552904	ShiftExpression	( uint32_t ) 1 << i		2551537	0		<<			
ANR	2552905	CastExpression	( uint32_t ) 1		2551537	0					
ANR	2552906	CastTarget	uint32_t		2551537	0					
ANR	2552907	PrimaryExpression	1		2551537	1					
ANR	2552908	Identifier	i		2551537	1					
ANR	2552909	PtrMemberAccess	upd -> flags		2551537	1					
ANR	2552910	Identifier	upd		2551537	0					
ANR	2552911	Identifier	flags		2551537	1					
ANR	2552912	PrimaryExpression	"""true"""		2551537	1					
ANR	2552913	PrimaryExpression	"""false"""		2551537	2					
ANR	2552914	ForStatement	for ( i = 0 ; countof ( upd_ints ) > i ; ++ i )		2551537	37					
ANR	2552915	ForInit	i = 0 ;	1435:12:60501:60506	2551537	0	True				
ANR	2552916	AssignmentExpression	i = 0		2551537	0		=			
ANR	2552917	Identifier	i		2551537	0					
ANR	2552918	PrimaryExpression	0		2551537	1					
ANR	2552919	Condition	countof ( upd_ints ) > i	1435:19:60508:60528	2551537	1	True				
ANR	2552920	RelationalExpression	countof ( upd_ints ) > i		2551537	0		>			
ANR	2552921	CallExpression	countof ( upd_ints )		2551537	0					
ANR	2552922	Callee	countof		2551537	0					
ANR	2552923	Identifier	countof		2551537	0					
ANR	2552924	ArgumentList	upd_ints		2551537	1					
ANR	2552925	Argument	upd_ints		2551537	0					
ANR	2552926	Identifier	upd_ints		2551537	0					
ANR	2552927	Identifier	i		2551537	1					
ANR	2552928	UnaryExpression	++ i	1435:42:60531:60533	2551537	2	True				
ANR	2552929	IncDec	++		2551537	0					
ANR	2552930	Identifier	i		2551537	1					
ANR	2552931	CompoundStatement		189:47:6719:6719	2551537	3					
ANR	2552932	IfStatement	if ( upd_ints [ i ] )		2551537	0					
ANR	2552933	Condition	upd_ints [ i ]	1436:13:60551:60561	2551537	0	True				
ANR	2552934	ArrayIndexing	upd_ints [ i ]		2551537	0					
ANR	2552935	Identifier	upd_ints		2551537	0					
ANR	2552936	Identifier	i		2551537	1					
ANR	2552937	CompoundStatement		190:26:6747:6747	2551537	1					
ANR	2552938	ExpressionStatement	"errprintf ( udev -> memory , ""%*s = %5d\\n"" , ln , upd_ints [ i ] , upd -> ints [ i ] )"	1437:12:60578:60643	2551537	0	True				
ANR	2552939	CallExpression	"errprintf ( udev -> memory , ""%*s = %5d\\n"" , ln , upd_ints [ i ] , upd -> ints [ i ] )"		2551537	0					
ANR	2552940	Callee	errprintf		2551537	0					
ANR	2552941	Identifier	errprintf		2551537	0					
ANR	2552942	ArgumentList	udev -> memory		2551537	1					
ANR	2552943	Argument	udev -> memory		2551537	0					
ANR	2552944	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552945	Identifier	udev		2551537	0					
ANR	2552946	Identifier	memory		2551537	1					
ANR	2552947	Argument	"""%*s = %5d\\n"""		2551537	1					
ANR	2552948	PrimaryExpression	"""%*s = %5d\\n"""		2551537	0					
ANR	2552949	Argument	ln		2551537	2					
ANR	2552950	Identifier	ln		2551537	0					
ANR	2552951	Argument	upd_ints [ i ]		2551537	3					
ANR	2552952	ArrayIndexing	upd_ints [ i ]		2551537	0					
ANR	2552953	Identifier	upd_ints		2551537	0					
ANR	2552954	Identifier	i		2551537	1					
ANR	2552955	Argument	upd -> ints [ i ]		2551537	4					
ANR	2552956	ArrayIndexing	upd -> ints [ i ]		2551537	0					
ANR	2552957	PtrMemberAccess	upd -> ints		2551537	0					
ANR	2552958	Identifier	upd		2551537	0					
ANR	2552959	Identifier	ints		2551537	1					
ANR	2552960	Identifier	i		2551537	1					
ANR	2552961	ElseStatement	else		2551537	0					
ANR	2552962	CompoundStatement		192:17:6845:6845	2551537	0					
ANR	2552963	ExpressionStatement	"errprintf ( udev -> memory , ""%*s[%2d] = %5d\\n"" , ln - 4 , ""upd_ints"" , i , upd -> ints [ i ] )"	1439:12:60676:60749	2551537	0	True				
ANR	2552964	CallExpression	"errprintf ( udev -> memory , ""%*s[%2d] = %5d\\n"" , ln - 4 , ""upd_ints"" , i , upd -> ints [ i ] )"		2551537	0					
ANR	2552965	Callee	errprintf		2551537	0					
ANR	2552966	Identifier	errprintf		2551537	0					
ANR	2552967	ArgumentList	udev -> memory		2551537	1					
ANR	2552968	Argument	udev -> memory		2551537	0					
ANR	2552969	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552970	Identifier	udev		2551537	0					
ANR	2552971	Identifier	memory		2551537	1					
ANR	2552972	Argument	"""%*s[%2d] = %5d\\n"""		2551537	1					
ANR	2552973	PrimaryExpression	"""%*s[%2d] = %5d\\n"""		2551537	0					
ANR	2552974	Argument	ln - 4		2551537	2					
ANR	2552975	AdditiveExpression	ln - 4		2551537	0		-			
ANR	2552976	Identifier	ln		2551537	0					
ANR	2552977	PrimaryExpression	4		2551537	1					
ANR	2552978	Argument	"""upd_ints"""		2551537	3					
ANR	2552979	PrimaryExpression	"""upd_ints"""		2551537	0					
ANR	2552980	Argument	i		2551537	4					
ANR	2552981	Identifier	i		2551537	0					
ANR	2552982	Argument	upd -> ints [ i ]		2551537	5					
ANR	2552983	ArrayIndexing	upd -> ints [ i ]		2551537	0					
ANR	2552984	PtrMemberAccess	upd -> ints		2551537	0					
ANR	2552985	Identifier	upd		2551537	0					
ANR	2552986	Identifier	ints		2551537	1					
ANR	2552987	Identifier	i		2551537	1					
ANR	2552988	ExpressionStatement	"errprintf ( udev -> memory , ""\\n%sready to print\\n\\n"" , B_OK4GO != ( upd -> flags & ( B_OK4GO | B_ERROR ) ) ? ""NOT "" : """" )"	1445:6:60789:60916	2551537	13	True				
ANR	2552989	CallExpression	"errprintf ( udev -> memory , ""\\n%sready to print\\n\\n"" , B_OK4GO != ( upd -> flags & ( B_OK4GO | B_ERROR ) ) ? ""NOT "" : """" )"		2551537	0					
ANR	2552990	Callee	errprintf		2551537	0					
ANR	2552991	Identifier	errprintf		2551537	0					
ANR	2552992	ArgumentList	udev -> memory		2551537	1					
ANR	2552993	Argument	udev -> memory		2551537	0					
ANR	2552994	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2552995	Identifier	udev		2551537	0					
ANR	2552996	Identifier	memory		2551537	1					
ANR	2552997	Argument	"""\\n%sready to print\\n\\n"""		2551537	1					
ANR	2552998	PrimaryExpression	"""\\n%sready to print\\n\\n"""		2551537	0					
ANR	2552999	Argument	"B_OK4GO != ( upd -> flags & ( B_OK4GO | B_ERROR ) ) ? ""NOT "" : """""		2551537	2					
ANR	2553000	ConditionalExpression	"B_OK4GO != ( upd -> flags & ( B_OK4GO | B_ERROR ) ) ? ""NOT "" : """""		2551537	0					
ANR	2553001	Condition	B_OK4GO != ( upd -> flags & ( B_OK4GO | B_ERROR ) )		2551537	0					
ANR	2553002	EqualityExpression	B_OK4GO != ( upd -> flags & ( B_OK4GO | B_ERROR ) )		2551537	0		!=			
ANR	2553003	Identifier	B_OK4GO		2551537	0					
ANR	2553004	BitAndExpression	upd -> flags & ( B_OK4GO | B_ERROR )		2551537	1		&			
ANR	2553005	PtrMemberAccess	upd -> flags		2551537	0					
ANR	2553006	Identifier	upd		2551537	0					
ANR	2553007	Identifier	flags		2551537	1					
ANR	2553008	InclusiveOrExpression	B_OK4GO | B_ERROR		2551537	1		|			
ANR	2553009	Identifier	B_OK4GO		2551537	0					
ANR	2553010	Identifier	B_ERROR		2551537	1					
ANR	2553011	PrimaryExpression	"""NOT """		2551537	1					
ANR	2553012	PrimaryExpression	""""""		2551537	2					
ANR	2553013	ExpressionStatement	"errprintf ( udev -> memory , ""RETURN: %d = upd_open(0x%05lx)\\n"" , error , ( long ) pdev )"	1453:6:60972:61058	2551537	10	True				
ANR	2553014	CallExpression	"errprintf ( udev -> memory , ""RETURN: %d = upd_open(0x%05lx)\\n"" , error , ( long ) pdev )"		2551537	0					
ANR	2553015	Callee	errprintf		2551537	0					
ANR	2553016	Identifier	errprintf		2551537	0					
ANR	2553017	ArgumentList	udev -> memory		2551537	1					
ANR	2553018	Argument	udev -> memory		2551537	0					
ANR	2553019	PtrMemberAccess	udev -> memory		2551537	0					
ANR	2553020	Identifier	udev		2551537	0					
ANR	2553021	Identifier	memory		2551537	1					
ANR	2553022	Argument	"""RETURN: %d = upd_open(0x%05lx)\\n"""		2551537	1					
ANR	2553023	PrimaryExpression	"""RETURN: %d = upd_open(0x%05lx)\\n"""		2551537	0					
ANR	2553024	Argument	error		2551537	2					
ANR	2553025	Identifier	error		2551537	0					
ANR	2553026	Argument	( long ) pdev		2551537	3					
ANR	2553027	CastExpression	( long ) pdev		2551537	0					
ANR	2553028	CastTarget	long		2551537	0					
ANR	2553029	Identifier	pdev		2551537	1					
ANR	2553030	ReturnStatement	return error ;	1457:3:61071:61083	2551537	11	True				
ANR	2553031	Identifier	error		2551537	0					
ANR	2553032	ReturnType	static int		2551537	1					
ANR	2553033	Identifier	upd_open		2551537	2					
ANR	2553034	ParameterList	gx_device * pdev		2551537	3					
ANR	2553035	Parameter	gx_device * pdev	1246:9:53799:53813	2551537	0	True				
ANR	2553036	ParameterType	gx_device *		2551537	0					
ANR	2553037	Identifier	pdev		2551537	1					
ANR	2553038	CFGEntryNode	ENTRY		2551537		True				
ANR	2553039	CFGExitNode	EXIT		2551537		True				
ANR	2553040	Symbol	gdev_prn_open		2551537						
ANR	2553041	Symbol	* upd_strings		2551537						
ANR	2553042	Symbol	upd_ints		2551537						
ANR	2553043	Symbol	upd -> rwidth		2551537						
ANR	2553044	Symbol	upd -> yscan		2551537						
ANR	2553045	Symbol	dev_l_margin		2551537						
ANR	2553046	Symbol	* udev		2551537						
ANR	2553047	Symbol	* FA_MARGINS		2551537						
ANR	2553048	Symbol	B_BUF		2551537						
ANR	2553049	Symbol	dev_b_margin		2551537						
ANR	2553050	Symbol	udev -> height		2551537						
ANR	2553051	Symbol	upd -> nbytes		2551537						
ANR	2553052	Symbol	dev_t_margin		2551537						
ANR	2553053	Symbol	* * upd_choice		2551537						
ANR	2553054	Symbol	* upd_flags		2551537						
ANR	2553055	Symbol	* upd -> float_a		2551537						
ANR	2553056	Symbol	dev_r_margin		2551537						
ANR	2553057	Symbol	want		2551537						
ANR	2553058	Symbol	upd		2551537						
ANR	2553059	Symbol	* upd_string_a		2551537						
ANR	2553060	Symbol	* * upd -> float_a		2551537						
ANR	2553061	Symbol	* * udev		2551537						
ANR	2553062	Symbol	countof		2551537						
ANR	2553063	Symbol	gs_malloc		2551537						
ANR	2553064	Symbol	upd -> yscnbuf		2551537						
ANR	2553065	Symbol	FA_MARGINS		2551537						
ANR	2553066	Symbol	upd -> pwidth		2551537						
ANR	2553067	Symbol	upd -> pheight		2551537						
ANR	2553068	Symbol	* upd -> choice		2551537						
ANR	2553069	Symbol	upd -> flags		2551537						
ANR	2553070	Symbol	upd -> gsheight		2551537						
ANR	2553071	Symbol	* upd_choice		2551537						
ANR	2553072	Symbol	* upd		2551537						
ANR	2553073	Symbol	upd -> pdwidth		2551537						
ANR	2553074	Symbol	upd_flags		2551537						
ANR	2553075	Symbol	upd_string_a		2551537						
ANR	2553076	Symbol	* udev -> upd		2551537						
ANR	2553077	Symbol	upd -> ocomp		2551537						
ANR	2553078	Symbol	i		2551537						
ANR	2553079	Symbol	udev -> upd -> pdwidth		2551537						
ANR	2553080	Symbol	j		2551537						
ANR	2553081	Symbol	upd_float_a		2551537						
ANR	2553082	Symbol	* * upd -> choice		2551537						
ANR	2553083	Symbol	l		2551537						
ANR	2553084	Symbol	m		2551537						
ANR	2553085	Symbol	B_OK4GO		2551537						
ANR	2553086	Symbol	upd -> yprinter		2551537						
ANR	2553087	Symbol	B_MAP		2551537						
ANR	2553088	Symbol	upd -> noutbuf		2551537						
ANR	2553089	Symbol	upd -> float_a [ FA_MARGINS ] . size		2551537						
ANR	2553090	Symbol	upd -> nscnbuf		2551537						
ANR	2553091	Symbol	B_YFLIP		2551537						
ANR	2553092	Symbol	udev -> upd -> pdheight		2551537						
ANR	2553093	Symbol	* pdev		2551537						
ANR	2553094	Symbol	upd_open_map		2551537						
ANR	2553095	Symbol	upd -> lf		2551537						
ANR	2553096	Symbol	* * upd		2551537						
ANR	2553097	Symbol	upd -> ngsbuf		2551537						
ANR	2553098	Symbol	* upd_int_a		2551537						
ANR	2553099	Symbol	~B_OK4GO		2551537						
ANR	2553100	Symbol	ln		2551537						
ANR	2553101	Symbol	upd -> icomp		2551537						
ANR	2553102	Symbol	upd -> ipass		2551537						
ANR	2553103	Symbol	lv		2551537						
ANR	2553104	Symbol	pdev		2551537						
ANR	2553105	Symbol	upd -> nlimits		2551537						
ANR	2553106	Symbol	strlen		2551537						
ANR	2553107	Symbol	pdev -> memory		2551537						
ANR	2553108	Symbol	upd -> nvalbuf		2551537						
ANR	2553109	Symbol	upd_open_writer		2551537						
ANR	2553110	Symbol	* * FA_MARGINS		2551537						
ANR	2553111	Symbol	* * i		2551537						
ANR	2553112	Symbol	NULL		2551537						
ANR	2553113	Symbol	upd_strings		2551537						
ANR	2553114	Symbol	upd -> ixpass		2551537						
ANR	2553115	Symbol	upd_int_a		2551537						
ANR	2553116	Symbol	upd -> gswidth		2551537						
ANR	2553117	Symbol	udev -> y_pixels_per_inch		2551537						
ANR	2553118	Symbol	udev -> width		2551537						
ANR	2553119	Symbol	upd -> xprinter		2551537						
ANR	2553120	Symbol	upd_choice		2551537						
ANR	2553121	Symbol	udev		2551537						
ANR	2553122	Symbol	true		2551537						
ANR	2553123	Symbol	upd -> float_a		2551537						
ANR	2553124	Symbol	upd -> ints		2551537						
ANR	2553125	Symbol	* upd_ints		2551537						
ANR	2553126	Symbol	upd -> gsbuf		2551537						
ANR	2553127	Symbol	B_ERROR		2551537						
ANR	2553128	Symbol	gx_device_raster		2551537						
ANR	2553129	Symbol	* upd_float_a		2551537						
ANR	2553130	Symbol	error		2551537						
ANR	2553131	Symbol	upd -> ncomp		2551537						
ANR	2553132	Symbol	udev -> upd		2551537						
ANR	2553133	Symbol	* upd -> float_a [ FA_MARGINS ] . data		2551537						
ANR	2553134	Symbol	upd -> pdheight		2551537						
ANR	2553135	Symbol	udev -> memory		2551537						
ANR	2553136	Symbol	upd -> float_a [ FA_MARGINS ] . data		2551537						
ANR	2553137	Symbol	upd -> scnmsk		2551537						
ANR	2553138	Symbol	* * * upd		2551537						
ANR	2553139	Symbol	upd -> choice		2551537						
ANR	2553140	Symbol	gs_error_VMerror		2551537						
ANR	2553141	Symbol	udev -> x_pixels_per_inch		2551537						
ANR	2553142	Symbol	* i		2551537						
ANR	2553143	Symbol	* upd -> ints		2551537						
ANR	2553144	Symbol	* j		2551537						
ANR	2553145	Symbol	* m		2551537						
ANR	2553146	Symbol	pdev -> child		2551537						
ANR	2553147	Function	upd_close	1464:0:61311:63200							
ANR	2553148	FunctionDef	upd_close (gx_device * pdev)		2553147	0					
ANR	2553149	CompoundStatement		1466:0:61349:63200	2553147	0					
ANR	2553150	Statement	upd_device	1467:3:61354:61363	2553147	0	True				
ANR	2553151	Statement	*	1467:14:61365:61365	2553147	1	True				
ANR	2553152	Statement	const	1467:15:61366:61370	2553147	2	True				
ANR	2553153	ExpressionStatement	udev = ( upd_device * ) pdev	1467:21:61372:61402	2553147	3	True				
ANR	2553154	AssignmentExpression	udev = ( upd_device * ) pdev		2553147	0		=			
ANR	2553155	Identifier	udev		2553147	0					
ANR	2553156	CastExpression	( upd_device * ) pdev		2553147	1					
ANR	2553157	CastTarget	upd_device *		2553147	0					
ANR	2553158	Identifier	pdev		2553147	1					
ANR	2553159	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	1468:3:61407:61445	2553147	4	True				
ANR	2553160	IdentifierDecl	upd = udev -> upd		2553147	0					
ANR	2553161	IdentifierDeclType	const upd_p		2553147	0					
ANR	2553162	Identifier	upd		2553147	1					
ANR	2553163	AssignmentExpression	upd = udev -> upd		2553147	2		=			
ANR	2553164	Identifier	upd		2553147	0					
ANR	2553165	PtrMemberAccess	udev -> upd		2553147	1					
ANR	2553166	Identifier	udev		2553147	0					
ANR	2553167	Identifier	upd		2553147	1					
ANR	2553168	IdentifierDeclStatement	int error = 0 ;	1469:3:61450:61471	2553147	5	True				
ANR	2553169	IdentifierDecl	error = 0		2553147	0					
ANR	2553170	IdentifierDeclType	int		2553147	0					
ANR	2553171	Identifier	error		2553147	1					
ANR	2553172	AssignmentExpression	error = 0		2553147	2		=			
ANR	2553173	Identifier	error		2553147	0					
ANR	2553174	PrimaryExpression	0		2553147	1					
ANR	2553175	IdentifierDeclStatement	int code ;	1470:3:61476:61492	2553147	6	True				
ANR	2553176	IdentifierDecl	code		2553147	0					
ANR	2553177	IdentifierDeclType	int		2553147	0					
ANR	2553178	Identifier	code		2553147	1					
ANR	2553179	ExpressionStatement	"errprintf ( udev -> memory , ""CALL: upd_close(0x%05lx)\\n"" , ( long ) pdev )"	1473:3:61532:61595	2553147	7	True				
ANR	2553180	CallExpression	"errprintf ( udev -> memory , ""CALL: upd_close(0x%05lx)\\n"" , ( long ) pdev )"		2553147	0					
ANR	2553181	Callee	errprintf		2553147	0					
ANR	2553182	Identifier	errprintf		2553147	0					
ANR	2553183	ArgumentList	udev -> memory		2553147	1					
ANR	2553184	Argument	udev -> memory		2553147	0					
ANR	2553185	PtrMemberAccess	udev -> memory		2553147	0					
ANR	2553186	Identifier	udev		2553147	0					
ANR	2553187	Identifier	memory		2553147	1					
ANR	2553188	Argument	"""CALL: upd_close(0x%05lx)\\n"""		2553147	1					
ANR	2553189	PrimaryExpression	"""CALL: upd_close(0x%05lx)\\n"""		2553147	0					
ANR	2553190	Argument	( long ) pdev		2553147	2					
ANR	2553191	CastExpression	( long ) pdev		2553147	0					
ANR	2553192	CastTarget	long		2553147	0					
ANR	2553193	Identifier	pdev		2553147	1					
ANR	2553194	IfStatement	if ( upd && ( ( B_OPEN | B_OK4GO ) == ( ( B_OPEN | B_OK4GO | B_ERROR ) & upd -> flags ) ) )		2553147	8					
ANR	2553195	Condition	upd && ( ( B_OPEN | B_OK4GO ) == ( ( B_OPEN | B_OK4GO | B_ERROR ) & upd -> flags ) )	1478:7:61660:61749	2553147	0	True				
ANR	2553196	AndExpression	upd && ( ( B_OPEN | B_OK4GO ) == ( ( B_OPEN | B_OK4GO | B_ERROR ) & upd -> flags ) )		2553147	0		&&			
ANR	2553197	Identifier	upd		2553147	0					
ANR	2553198	EqualityExpression	( B_OPEN | B_OK4GO ) == ( ( B_OPEN | B_OK4GO | B_ERROR ) & upd -> flags )		2553147	1		==			
ANR	2553199	InclusiveOrExpression	B_OPEN | B_OK4GO		2553147	0		|			
ANR	2553200	Identifier	B_OPEN		2553147	0					
ANR	2553201	Identifier	B_OK4GO		2553147	1					
ANR	2553202	BitAndExpression	( B_OPEN | B_OK4GO | B_ERROR ) & upd -> flags		2553147	1		&			
ANR	2553203	InclusiveOrExpression	B_OPEN | B_OK4GO | B_ERROR		2553147	0		|			
ANR	2553204	Identifier	B_OPEN		2553147	0					
ANR	2553205	InclusiveOrExpression	B_OK4GO | B_ERROR		2553147	1		|			
ANR	2553206	Identifier	B_OK4GO		2553147	0					
ANR	2553207	Identifier	B_ERROR		2553147	1					
ANR	2553208	PtrMemberAccess	upd -> flags		2553147	1					
ANR	2553209	Identifier	upd		2553147	0					
ANR	2553210	Identifier	flags		2553147	1					
ANR	2553211	CompoundStatement		14:61:402:402	2553147	1					
ANR	2553212	IfStatement	if ( udev -> file && upd -> strings && 0 < upd -> strings [ S_CLOSE ] . size )		2553147	0					
ANR	2553213	Condition	udev -> file && upd -> strings && 0 < upd -> strings [ S_CLOSE ] . size	1481:9:61764:61823	2553147	0	True				
ANR	2553214	AndExpression	udev -> file && upd -> strings && 0 < upd -> strings [ S_CLOSE ] . size		2553147	0		&&			
ANR	2553215	PtrMemberAccess	udev -> file		2553147	0					
ANR	2553216	Identifier	udev		2553147	0					
ANR	2553217	Identifier	file		2553147	1					
ANR	2553218	AndExpression	upd -> strings && 0 < upd -> strings [ S_CLOSE ] . size		2553147	1		&&			
ANR	2553219	PtrMemberAccess	upd -> strings		2553147	0					
ANR	2553220	Identifier	upd		2553147	0					
ANR	2553221	Identifier	strings		2553147	1					
ANR	2553222	RelationalExpression	0 < upd -> strings [ S_CLOSE ] . size		2553147	1		<			
ANR	2553223	PrimaryExpression	0		2553147	0					
ANR	2553224	MemberAccess	upd -> strings [ S_CLOSE ] . size		2553147	1					
ANR	2553225	ArrayIndexing	upd -> strings [ S_CLOSE ]		2553147	0					
ANR	2553226	PtrMemberAccess	upd -> strings		2553147	0					
ANR	2553227	Identifier	upd		2553147	0					
ANR	2553228	Identifier	strings		2553147	1					
ANR	2553229	Identifier	S_CLOSE		2553147	1					
ANR	2553230	Identifier	size		2553147	1					
ANR	2553231	ExpressionStatement	"fwrite ( upd -> strings [ S_CLOSE ] . data , 1 , upd -> strings [ S_CLOSE ] . size , udev -> file )"	1482:9:61835:61926	2553147	1	True				
ANR	2553232	CallExpression	"fwrite ( upd -> strings [ S_CLOSE ] . data , 1 , upd -> strings [ S_CLOSE ] . size , udev -> file )"		2553147	0					
ANR	2553233	Callee	fwrite		2553147	0					
ANR	2553234	Identifier	fwrite		2553147	0					
ANR	2553235	ArgumentList	upd -> strings [ S_CLOSE ] . data		2553147	1					
ANR	2553236	Argument	upd -> strings [ S_CLOSE ] . data		2553147	0					
ANR	2553237	MemberAccess	upd -> strings [ S_CLOSE ] . data		2553147	0					
ANR	2553238	ArrayIndexing	upd -> strings [ S_CLOSE ]		2553147	0					
ANR	2553239	PtrMemberAccess	upd -> strings		2553147	0					
ANR	2553240	Identifier	upd		2553147	0					
ANR	2553241	Identifier	strings		2553147	1					
ANR	2553242	Identifier	S_CLOSE		2553147	1					
ANR	2553243	Identifier	data		2553147	1					
ANR	2553244	Argument	1		2553147	1					
ANR	2553245	PrimaryExpression	1		2553147	0					
ANR	2553246	Argument	upd -> strings [ S_CLOSE ] . size		2553147	2					
ANR	2553247	MemberAccess	upd -> strings [ S_CLOSE ] . size		2553147	0					
ANR	2553248	ArrayIndexing	upd -> strings [ S_CLOSE ]		2553147	0					
ANR	2553249	PtrMemberAccess	upd -> strings		2553147	0					
ANR	2553250	Identifier	upd		2553147	0					
ANR	2553251	Identifier	strings		2553147	1					
ANR	2553252	Identifier	S_CLOSE		2553147	1					
ANR	2553253	Identifier	size		2553147	1					
ANR	2553254	Argument	udev -> file		2553147	3					
ANR	2553255	PtrMemberAccess	udev -> file		2553147	0					
ANR	2553256	Identifier	udev		2553147	0					
ANR	2553257	Identifier	file		2553147	1					
ANR	2553258	ExpressionStatement	upd -> flags &= ~B_OPEN	1485:6:61935:61956	2553147	1	True				
ANR	2553259	AssignmentExpression	upd -> flags &= ~B_OPEN		2553147	0		&=			
ANR	2553260	PtrMemberAccess	upd -> flags		2553147	0					
ANR	2553261	Identifier	upd		2553147	0					
ANR	2553262	Identifier	flags		2553147	1					
ANR	2553263	Identifier	~B_OPEN		2553147	1					
ANR	2553264	IfStatement	if ( upd )		2553147	9					
ANR	2553265	Condition	upd	1489:6:62016:62018	2553147	0	True				
ANR	2553266	Identifier	upd		2553147	0					
ANR	2553267	CompoundStatement		24:11:671:671	2553147	1					
ANR	2553268	ExpressionStatement	upd_close_writer ( udev )	1491:6:62030:62052	2553147	0	True				
ANR	2553269	CallExpression	upd_close_writer ( udev )		2553147	0					
ANR	2553270	Callee	upd_close_writer		2553147	0					
ANR	2553271	Identifier	upd_close_writer		2553147	0					
ANR	2553272	ArgumentList	udev		2553147	1					
ANR	2553273	Argument	udev		2553147	0					
ANR	2553274	Identifier	udev		2553147	0					
ANR	2553275	IfStatement	if ( upd -> gsbuf )		2553147	1					
ANR	2553276	Condition	upd -> gsbuf	1493:9:62064:62073	2553147	0	True				
ANR	2553277	PtrMemberAccess	upd -> gsbuf		2553147	0					
ANR	2553278	Identifier	upd		2553147	0					
ANR	2553279	Identifier	gsbuf		2553147	1					
ANR	2553280	ExpressionStatement	"gs_free ( pdev -> memory , upd -> gsbuf , upd -> ngsbuf , 1 , ""uniprint/gsbuf"" )"	1494:9:62085:62149	2553147	1	True				
ANR	2553281	CallExpression	"gs_free ( pdev -> memory , upd -> gsbuf , upd -> ngsbuf , 1 , ""uniprint/gsbuf"" )"		2553147	0					
ANR	2553282	Callee	gs_free		2553147	0					
ANR	2553283	Identifier	gs_free		2553147	0					
ANR	2553284	ArgumentList	pdev -> memory		2553147	1					
ANR	2553285	Argument	pdev -> memory		2553147	0					
ANR	2553286	PtrMemberAccess	pdev -> memory		2553147	0					
ANR	2553287	Identifier	pdev		2553147	0					
ANR	2553288	Identifier	memory		2553147	1					
ANR	2553289	Argument	upd -> gsbuf		2553147	1					
ANR	2553290	PtrMemberAccess	upd -> gsbuf		2553147	0					
ANR	2553291	Identifier	upd		2553147	0					
ANR	2553292	Identifier	gsbuf		2553147	1					
ANR	2553293	Argument	upd -> ngsbuf		2553147	2					
ANR	2553294	PtrMemberAccess	upd -> ngsbuf		2553147	0					
ANR	2553295	Identifier	upd		2553147	0					
ANR	2553296	Identifier	ngsbuf		2553147	1					
ANR	2553297	Argument	1		2553147	3					
ANR	2553298	PrimaryExpression	1		2553147	0					
ANR	2553299	Argument	"""uniprint/gsbuf"""		2553147	4					
ANR	2553300	PrimaryExpression	"""uniprint/gsbuf"""		2553147	0					
ANR	2553301	ExpressionStatement	upd -> gsbuf = NULL	1495:6:62157:62175	2553147	2	True				
ANR	2553302	AssignmentExpression	upd -> gsbuf = NULL		2553147	0		=			
ANR	2553303	PtrMemberAccess	upd -> gsbuf		2553147	0					
ANR	2553304	Identifier	upd		2553147	0					
ANR	2553305	Identifier	gsbuf		2553147	1					
ANR	2553306	Identifier	NULL		2553147	1					
ANR	2553307	ExpressionStatement	upd -> ngsbuf = 0	1496:6:62183:62198	2553147	3	True				
ANR	2553308	AssignmentExpression	upd -> ngsbuf = 0		2553147	0		=			
ANR	2553309	PtrMemberAccess	upd -> ngsbuf		2553147	0					
ANR	2553310	Identifier	upd		2553147	0					
ANR	2553311	Identifier	ngsbuf		2553147	1					
ANR	2553312	PrimaryExpression	0		2553147	1					
ANR	2553313	ExpressionStatement	upd -> flags &= ~B_BUF	1497:6:62206:62226	2553147	4	True				
ANR	2553314	AssignmentExpression	upd -> flags &= ~B_BUF		2553147	0		&=			
ANR	2553315	PtrMemberAccess	upd -> flags		2553147	0					
ANR	2553316	Identifier	upd		2553147	0					
ANR	2553317	Identifier	flags		2553147	1					
ANR	2553318	Identifier	~B_BUF		2553147	1					
ANR	2553319	ExpressionStatement	upd_close_render ( udev )	1499:6:62235:62257	2553147	5	True				
ANR	2553320	CallExpression	upd_close_render ( udev )		2553147	0					
ANR	2553321	Callee	upd_close_render		2553147	0					
ANR	2553322	Identifier	upd_close_render		2553147	0					
ANR	2553323	ArgumentList	udev		2553147	1					
ANR	2553324	Argument	udev		2553147	0					
ANR	2553325	Identifier	udev		2553147	0					
ANR	2553326	ExpressionStatement	upd_close_map ( udev )	1500:6:62265:62284	2553147	6	True				
ANR	2553327	CallExpression	upd_close_map ( udev )		2553147	0					
ANR	2553328	Callee	upd_close_map		2553147	0					
ANR	2553329	Identifier	upd_close_map		2553147	0					
ANR	2553330	ArgumentList	udev		2553147	1					
ANR	2553331	Argument	udev		2553147	0					
ANR	2553332	Identifier	udev		2553147	0					
ANR	2553333	ExpressionStatement	"UPD_MM_DEL_ARRAY ( pdev -> memory , upd -> choice , countof ( upd_choice ) , UPD_MM_DEL_VALUE )"	1502:6:62293:62377	2553147	7	True				
ANR	2553334	CallExpression	"UPD_MM_DEL_ARRAY ( pdev -> memory , upd -> choice , countof ( upd_choice ) , UPD_MM_DEL_VALUE )"		2553147	0					
ANR	2553335	Callee	UPD_MM_DEL_ARRAY		2553147	0					
ANR	2553336	Identifier	UPD_MM_DEL_ARRAY		2553147	0					
ANR	2553337	ArgumentList	pdev -> memory		2553147	1					
ANR	2553338	Argument	pdev -> memory		2553147	0					
ANR	2553339	PtrMemberAccess	pdev -> memory		2553147	0					
ANR	2553340	Identifier	pdev		2553147	0					
ANR	2553341	Identifier	memory		2553147	1					
ANR	2553342	Argument	upd -> choice		2553147	1					
ANR	2553343	PtrMemberAccess	upd -> choice		2553147	0					
ANR	2553344	Identifier	upd		2553147	0					
ANR	2553345	Identifier	choice		2553147	1					
ANR	2553346	Argument	countof ( upd_choice )		2553147	2					
ANR	2553347	CallExpression	countof ( upd_choice )		2553147	0					
ANR	2553348	Callee	countof		2553147	0					
ANR	2553349	Identifier	countof		2553147	0					
ANR	2553350	ArgumentList	upd_choice		2553147	1					
ANR	2553351	Argument	upd_choice		2553147	0					
ANR	2553352	Identifier	upd_choice		2553147	0					
ANR	2553353	Argument	UPD_MM_DEL_VALUE		2553147	3					
ANR	2553354	Identifier	UPD_MM_DEL_VALUE		2553147	0					
ANR	2553355	ExpressionStatement	"UPD_MM_DEL_ARRAY ( pdev -> memory , upd -> ints , countof ( upd_ints ) , UPD_MM_DEL_VALUE )"	1503:6:62385:62469	2553147	8	True				
ANR	2553356	CallExpression	"UPD_MM_DEL_ARRAY ( pdev -> memory , upd -> ints , countof ( upd_ints ) , UPD_MM_DEL_VALUE )"		2553147	0					
ANR	2553357	Callee	UPD_MM_DEL_ARRAY		2553147	0					
ANR	2553358	Identifier	UPD_MM_DEL_ARRAY		2553147	0					
ANR	2553359	ArgumentList	pdev -> memory		2553147	1					
ANR	2553360	Argument	pdev -> memory		2553147	0					
ANR	2553361	PtrMemberAccess	pdev -> memory		2553147	0					
ANR	2553362	Identifier	pdev		2553147	0					
ANR	2553363	Identifier	memory		2553147	1					
ANR	2553364	Argument	upd -> ints		2553147	1					
ANR	2553365	PtrMemberAccess	upd -> ints		2553147	0					
ANR	2553366	Identifier	upd		2553147	0					
ANR	2553367	Identifier	ints		2553147	1					
ANR	2553368	Argument	countof ( upd_ints )		2553147	2					
ANR	2553369	CallExpression	countof ( upd_ints )		2553147	0					
ANR	2553370	Callee	countof		2553147	0					
ANR	2553371	Identifier	countof		2553147	0					
ANR	2553372	ArgumentList	upd_ints		2553147	1					
ANR	2553373	Argument	upd_ints		2553147	0					
ANR	2553374	Identifier	upd_ints		2553147	0					
ANR	2553375	Argument	UPD_MM_DEL_VALUE		2553147	3					
ANR	2553376	Identifier	UPD_MM_DEL_VALUE		2553147	0					
ANR	2553377	ExpressionStatement	"UPD_MM_DEL_ARRAY ( pdev -> memory , upd -> int_a , countof ( upd_int_a ) , UPD_MM_DEL_PARAM )"	1504:6:62477:62561	2553147	9	True				
ANR	2553378	CallExpression	"UPD_MM_DEL_ARRAY ( pdev -> memory , upd -> int_a , countof ( upd_int_a ) , UPD_MM_DEL_PARAM )"		2553147	0					
ANR	2553379	Callee	UPD_MM_DEL_ARRAY		2553147	0					
ANR	2553380	Identifier	UPD_MM_DEL_ARRAY		2553147	0					
ANR	2553381	ArgumentList	pdev -> memory		2553147	1					
ANR	2553382	Argument	pdev -> memory		2553147	0					
ANR	2553383	PtrMemberAccess	pdev -> memory		2553147	0					
ANR	2553384	Identifier	pdev		2553147	0					
ANR	2553385	Identifier	memory		2553147	1					
ANR	2553386	Argument	upd -> int_a		2553147	1					
ANR	2553387	PtrMemberAccess	upd -> int_a		2553147	0					
ANR	2553388	Identifier	upd		2553147	0					
ANR	2553389	Identifier	int_a		2553147	1					
ANR	2553390	Argument	countof ( upd_int_a )		2553147	2					
ANR	2553391	CallExpression	countof ( upd_int_a )		2553147	0					
ANR	2553392	Callee	countof		2553147	0					
ANR	2553393	Identifier	countof		2553147	0					
ANR	2553394	ArgumentList	upd_int_a		2553147	1					
ANR	2553395	Argument	upd_int_a		2553147	0					
ANR	2553396	Identifier	upd_int_a		2553147	0					
ANR	2553397	Argument	UPD_MM_DEL_PARAM		2553147	3					
ANR	2553398	Identifier	UPD_MM_DEL_PARAM		2553147	0					
ANR	2553399	ExpressionStatement	"UPD_MM_DEL_ARRAY ( pdev -> memory , upd -> strings , countof ( upd_strings ) , UPD_MM_DEL_PARAM )"	1505:6:62569:62653	2553147	10	True				
ANR	2553400	CallExpression	"UPD_MM_DEL_ARRAY ( pdev -> memory , upd -> strings , countof ( upd_strings ) , UPD_MM_DEL_PARAM )"		2553147	0					
ANR	2553401	Callee	UPD_MM_DEL_ARRAY		2553147	0					
ANR	2553402	Identifier	UPD_MM_DEL_ARRAY		2553147	0					
ANR	2553403	ArgumentList	pdev -> memory		2553147	1					
ANR	2553404	Argument	pdev -> memory		2553147	0					
ANR	2553405	PtrMemberAccess	pdev -> memory		2553147	0					
ANR	2553406	Identifier	pdev		2553147	0					
ANR	2553407	Identifier	memory		2553147	1					
ANR	2553408	Argument	upd -> strings		2553147	1					
ANR	2553409	PtrMemberAccess	upd -> strings		2553147	0					
ANR	2553410	Identifier	upd		2553147	0					
ANR	2553411	Identifier	strings		2553147	1					
ANR	2553412	Argument	countof ( upd_strings )		2553147	2					
ANR	2553413	CallExpression	countof ( upd_strings )		2553147	0					
ANR	2553414	Callee	countof		2553147	0					
ANR	2553415	Identifier	countof		2553147	0					
ANR	2553416	ArgumentList	upd_strings		2553147	1					
ANR	2553417	Argument	upd_strings		2553147	0					
ANR	2553418	Identifier	upd_strings		2553147	0					
ANR	2553419	Argument	UPD_MM_DEL_PARAM		2553147	3					
ANR	2553420	Identifier	UPD_MM_DEL_PARAM		2553147	0					
ANR	2553421	ExpressionStatement	"UPD_MM_DEL_ARRAY ( pdev -> memory , upd -> string_a , countof ( upd_string_a ) , UPD_MM_DEL_APARAM )"	1506:6:62661:62746	2553147	11	True				
ANR	2553422	CallExpression	"UPD_MM_DEL_ARRAY ( pdev -> memory , upd -> string_a , countof ( upd_string_a ) , UPD_MM_DEL_APARAM )"		2553147	0					
ANR	2553423	Callee	UPD_MM_DEL_ARRAY		2553147	0					
ANR	2553424	Identifier	UPD_MM_DEL_ARRAY		2553147	0					
ANR	2553425	ArgumentList	pdev -> memory		2553147	1					
ANR	2553426	Argument	pdev -> memory		2553147	0					
ANR	2553427	PtrMemberAccess	pdev -> memory		2553147	0					
ANR	2553428	Identifier	pdev		2553147	0					
ANR	2553429	Identifier	memory		2553147	1					
ANR	2553430	Argument	upd -> string_a		2553147	1					
ANR	2553431	PtrMemberAccess	upd -> string_a		2553147	0					
ANR	2553432	Identifier	upd		2553147	0					
ANR	2553433	Identifier	string_a		2553147	1					
ANR	2553434	Argument	countof ( upd_string_a )		2553147	2					
ANR	2553435	CallExpression	countof ( upd_string_a )		2553147	0					
ANR	2553436	Callee	countof		2553147	0					
ANR	2553437	Identifier	countof		2553147	0					
ANR	2553438	ArgumentList	upd_string_a		2553147	1					
ANR	2553439	Argument	upd_string_a		2553147	0					
ANR	2553440	Identifier	upd_string_a		2553147	0					
ANR	2553441	Argument	UPD_MM_DEL_APARAM		2553147	3					
ANR	2553442	Identifier	UPD_MM_DEL_APARAM		2553147	0					
ANR	2553443	ExpressionStatement	"UPD_MM_DEL_ARRAY ( pdev -> memory , upd -> float_a , countof ( upd_float_a ) , UPD_MM_DEL_PARAM )"	1507:6:62754:62838	2553147	12	True				
ANR	2553444	CallExpression	"UPD_MM_DEL_ARRAY ( pdev -> memory , upd -> float_a , countof ( upd_float_a ) , UPD_MM_DEL_PARAM )"		2553147	0					
ANR	2553445	Callee	UPD_MM_DEL_ARRAY		2553147	0					
ANR	2553446	Identifier	UPD_MM_DEL_ARRAY		2553147	0					
ANR	2553447	ArgumentList	pdev -> memory		2553147	1					
ANR	2553448	Argument	pdev -> memory		2553147	0					
ANR	2553449	PtrMemberAccess	pdev -> memory		2553147	0					
ANR	2553450	Identifier	pdev		2553147	0					
ANR	2553451	Identifier	memory		2553147	1					
ANR	2553452	Argument	upd -> float_a		2553147	1					
ANR	2553453	PtrMemberAccess	upd -> float_a		2553147	0					
ANR	2553454	Identifier	upd		2553147	0					
ANR	2553455	Identifier	float_a		2553147	1					
ANR	2553456	Argument	countof ( upd_float_a )		2553147	2					
ANR	2553457	CallExpression	countof ( upd_float_a )		2553147	0					
ANR	2553458	Callee	countof		2553147	0					
ANR	2553459	Identifier	countof		2553147	0					
ANR	2553460	ArgumentList	upd_float_a		2553147	1					
ANR	2553461	Argument	upd_float_a		2553147	0					
ANR	2553462	Identifier	upd_float_a		2553147	0					
ANR	2553463	Argument	UPD_MM_DEL_PARAM		2553147	3					
ANR	2553464	Identifier	UPD_MM_DEL_PARAM		2553147	0					
ANR	2553465	ExpressionStatement	"gs_free ( pdev -> memory , upd , sizeof ( upd [ 0 ] ) , 1 , ""uniprint"" )"	1509:6:62847:62901	2553147	13	True				
ANR	2553466	CallExpression	"gs_free ( pdev -> memory , upd , sizeof ( upd [ 0 ] ) , 1 , ""uniprint"" )"		2553147	0					
ANR	2553467	Callee	gs_free		2553147	0					
ANR	2553468	Identifier	gs_free		2553147	0					
ANR	2553469	ArgumentList	pdev -> memory		2553147	1					
ANR	2553470	Argument	pdev -> memory		2553147	0					
ANR	2553471	PtrMemberAccess	pdev -> memory		2553147	0					
ANR	2553472	Identifier	pdev		2553147	0					
ANR	2553473	Identifier	memory		2553147	1					
ANR	2553474	Argument	upd		2553147	1					
ANR	2553475	Identifier	upd		2553147	0					
ANR	2553476	Argument	sizeof ( upd [ 0 ] )		2553147	2					
ANR	2553477	SizeofExpression	sizeof ( upd [ 0 ] )		2553147	0					
ANR	2553478	Sizeof	sizeof		2553147	0					
ANR	2553479	ArrayIndexing	upd [ 0 ]		2553147	1					
ANR	2553480	Identifier	upd		2553147	0					
ANR	2553481	PrimaryExpression	0		2553147	1					
ANR	2553482	Argument	1		2553147	3					
ANR	2553483	PrimaryExpression	1		2553147	0					
ANR	2553484	Argument	"""uniprint"""		2553147	4					
ANR	2553485	PrimaryExpression	"""uniprint"""		2553147	0					
ANR	2553486	ExpressionStatement	udev -> upd = NULL	1511:6:62910:62926	2553147	14	True				
ANR	2553487	AssignmentExpression	udev -> upd = NULL		2553147	0		=			
ANR	2553488	PtrMemberAccess	udev -> upd		2553147	0					
ANR	2553489	Identifier	udev		2553147	0					
ANR	2553490	Identifier	upd		2553147	1					
ANR	2553491	Identifier	NULL		2553147	1					
ANR	2553492	ExpressionStatement	code = gdev_prn_close ( pdev )	1515:3:62976:63003	2553147	10	True				
ANR	2553493	AssignmentExpression	code = gdev_prn_close ( pdev )		2553147	0		=			
ANR	2553494	Identifier	code		2553147	0					
ANR	2553495	CallExpression	gdev_prn_close ( pdev )		2553147	1					
ANR	2553496	Callee	gdev_prn_close		2553147	0					
ANR	2553497	Identifier	gdev_prn_close		2553147	0					
ANR	2553498	ArgumentList	pdev		2553147	1					
ANR	2553499	Argument	pdev		2553147	0					
ANR	2553500	Identifier	pdev		2553147	0					
ANR	2553501	ExpressionStatement	error = error > code ? code : error	1516:3:63008:63043	2553147	11	True				
ANR	2553502	AssignmentExpression	error = error > code ? code : error		2553147	0		=			
ANR	2553503	Identifier	error		2553147	0					
ANR	2553504	ConditionalExpression	error > code ? code : error		2553147	1					
ANR	2553505	Condition	error > code		2553147	0					
ANR	2553506	RelationalExpression	error > code		2553147	0		>			
ANR	2553507	Identifier	error		2553147	0					
ANR	2553508	Identifier	code		2553147	1					
ANR	2553509	Identifier	code		2553147	1					
ANR	2553510	Identifier	error		2553147	2					
ANR	2553511	ExpressionStatement	"errprintf ( pdev -> memory , ""RETURN: %d = upd_close(0x%05lx)\\n"" , error , ( long ) pdev )"	1519:6:63086:63173	2553147	12	True				
ANR	2553512	CallExpression	"errprintf ( pdev -> memory , ""RETURN: %d = upd_close(0x%05lx)\\n"" , error , ( long ) pdev )"		2553147	0					
ANR	2553513	Callee	errprintf		2553147	0					
ANR	2553514	Identifier	errprintf		2553147	0					
ANR	2553515	ArgumentList	pdev -> memory		2553147	1					
ANR	2553516	Argument	pdev -> memory		2553147	0					
ANR	2553517	PtrMemberAccess	pdev -> memory		2553147	0					
ANR	2553518	Identifier	pdev		2553147	0					
ANR	2553519	Identifier	memory		2553147	1					
ANR	2553520	Argument	"""RETURN: %d = upd_close(0x%05lx)\\n"""		2553147	1					
ANR	2553521	PrimaryExpression	"""RETURN: %d = upd_close(0x%05lx)\\n"""		2553147	0					
ANR	2553522	Argument	error		2553147	2					
ANR	2553523	Identifier	error		2553147	0					
ANR	2553524	Argument	( long ) pdev		2553147	3					
ANR	2553525	CastExpression	( long ) pdev		2553147	0					
ANR	2553526	CastTarget	long		2553147	0					
ANR	2553527	Identifier	pdev		2553147	1					
ANR	2553528	ReturnStatement	return error ;	1523:3:63186:63198	2553147	13	True				
ANR	2553529	Identifier	error		2553147	0					
ANR	2553530	ReturnType	static int		2553147	1					
ANR	2553531	Identifier	upd_close		2553147	2					
ANR	2553532	ParameterList	gx_device * pdev		2553147	3					
ANR	2553533	Parameter	gx_device * pdev	1465:10:61332:61346	2553147	0	True				
ANR	2553534	ParameterType	gx_device *		2553147	0					
ANR	2553535	Identifier	pdev		2553147	1					
ANR	2553536	CFGEntryNode	ENTRY		2553147		True				
ANR	2553537	CFGExitNode	EXIT		2553147		True				
ANR	2553538	Symbol	B_ERROR		2553147						
ANR	2553539	Symbol	code		2553147						
ANR	2553540	Symbol	* S_CLOSE		2553147						
ANR	2553541	Symbol	udev -> file		2553147						
ANR	2553542	Symbol	upd -> strings		2553147						
ANR	2553543	Symbol	~B_BUF		2553147						
ANR	2553544	Symbol	error		2553147						
ANR	2553545	Symbol	upd_ints		2553147						
ANR	2553546	Symbol	upd -> flags		2553147						
ANR	2553547	Symbol	pdev		2553147						
ANR	2553548	Symbol	udev -> upd		2553147						
ANR	2553549	Symbol	* udev		2553147						
ANR	2553550	Symbol	* upd		2553147						
ANR	2553551	Symbol	upd -> int_a		2553147						
ANR	2553552	Symbol	upd -> strings [ S_CLOSE ] . size		2553147						
ANR	2553553	Symbol	pdev -> memory		2553147						
ANR	2553554	Symbol	B_OPEN		2553147						
ANR	2553555	Symbol	upd_string_a		2553147						
ANR	2553556	Symbol	* upd -> strings		2553147						
ANR	2553557	Symbol	UPD_MM_DEL_APARAM		2553147						
ANR	2553558	Symbol	NULL		2553147						
ANR	2553559	Symbol	udev -> memory		2553147						
ANR	2553560	Symbol	upd_strings		2553147						
ANR	2553561	Symbol	UPD_MM_DEL_VALUE		2553147						
ANR	2553562	Symbol	gdev_prn_close		2553147						
ANR	2553563	Symbol	upd -> strings [ S_CLOSE ] . data		2553147						
ANR	2553564	Symbol	upd		2553147						
ANR	2553565	Symbol	upd -> choice		2553147						
ANR	2553566	Symbol	upd_int_a		2553147						
ANR	2553567	Symbol	upd_float_a		2553147						
ANR	2553568	Symbol	UPD_MM_DEL_PARAM		2553147						
ANR	2553569	Symbol	B_OK4GO		2553147						
ANR	2553570	Symbol	upd -> string_a		2553147						
ANR	2553571	Symbol	countof		2553147						
ANR	2553572	Symbol	upd_choice		2553147						
ANR	2553573	Symbol	~B_OPEN		2553147						
ANR	2553574	Symbol	udev		2553147						
ANR	2553575	Symbol	S_CLOSE		2553147						
ANR	2553576	Symbol	* pdev		2553147						
ANR	2553577	Symbol	upd -> float_a		2553147						
ANR	2553578	Symbol	* * upd		2553147						
ANR	2553579	Symbol	upd -> ngsbuf		2553147						
ANR	2553580	Symbol	upd -> ints		2553147						
ANR	2553581	Symbol	upd -> gsbuf		2553147						
ANR	2553582	Function	upd_get_params	1541:0:63922:67980							
ANR	2553583	FunctionDef	"upd_get_params (gx_device * pdev , gs_param_list * plist)"		2553582	0					
ANR	2553584	CompoundStatement		1543:0:63987:67980	2553582	0					
ANR	2553585	Statement	upd_device	1544:3:63992:64001	2553582	0	True				
ANR	2553586	Statement	*	1544:14:64003:64003	2553582	1	True				
ANR	2553587	Statement	const	1544:15:64004:64008	2553582	2	True				
ANR	2553588	ExpressionStatement	udev = ( upd_device * ) pdev	1544:21:64010:64040	2553582	3	True				
ANR	2553589	AssignmentExpression	udev = ( upd_device * ) pdev		2553582	0		=			
ANR	2553590	Identifier	udev		2553582	0					
ANR	2553591	CastExpression	( upd_device * ) pdev		2553582	1					
ANR	2553592	CastTarget	upd_device *		2553582	0					
ANR	2553593	Identifier	pdev		2553582	1					
ANR	2553594	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	1545:3:64045:64083	2553582	4	True				
ANR	2553595	IdentifierDecl	upd = udev -> upd		2553582	0					
ANR	2553596	IdentifierDeclType	const upd_p		2553582	0					
ANR	2553597	Identifier	upd		2553582	1					
ANR	2553598	AssignmentExpression	upd = udev -> upd		2553582	2		=			
ANR	2553599	Identifier	upd		2553582	0					
ANR	2553600	PtrMemberAccess	udev -> upd		2553582	1					
ANR	2553601	Identifier	udev		2553582	0					
ANR	2553602	Identifier	upd		2553582	1					
ANR	2553603	IdentifierDeclStatement	"int error , i ;"	1546:3:64088:64113	2553582	5	True				
ANR	2553604	IdentifierDecl	error		2553582	0					
ANR	2553605	IdentifierDeclType	int		2553582	0					
ANR	2553606	Identifier	error		2553582	1					
ANR	2553607	IdentifierDecl	i		2553582	1					
ANR	2553608	IdentifierDeclType	int		2553582	0					
ANR	2553609	Identifier	i		2553582	1					
ANR	2553610	ExpressionStatement	"errprintf ( udev -> memory , ""CALL: upd_get_params(0x%05lx,0x%05lx)\\n"" , ( long ) udev , ( long ) plist )"	1549:6:64156:64256	2553582	6	True				
ANR	2553611	CallExpression	"errprintf ( udev -> memory , ""CALL: upd_get_params(0x%05lx,0x%05lx)\\n"" , ( long ) udev , ( long ) plist )"		2553582	0					
ANR	2553612	Callee	errprintf		2553582	0					
ANR	2553613	Identifier	errprintf		2553582	0					
ANR	2553614	ArgumentList	udev -> memory		2553582	1					
ANR	2553615	Argument	udev -> memory		2553582	0					
ANR	2553616	PtrMemberAccess	udev -> memory		2553582	0					
ANR	2553617	Identifier	udev		2553582	0					
ANR	2553618	Identifier	memory		2553582	1					
ANR	2553619	Argument	"""CALL: upd_get_params(0x%05lx,0x%05lx)\\n"""		2553582	1					
ANR	2553620	PrimaryExpression	"""CALL: upd_get_params(0x%05lx,0x%05lx)\\n"""		2553582	0					
ANR	2553621	Argument	( long ) udev		2553582	2					
ANR	2553622	CastExpression	( long ) udev		2553582	0					
ANR	2553623	CastTarget	long		2553582	0					
ANR	2553624	Identifier	udev		2553582	1					
ANR	2553625	Argument	( long ) plist		2553582	3					
ANR	2553626	CastExpression	( long ) plist		2553582	0					
ANR	2553627	CastTarget	long		2553582	0					
ANR	2553628	Identifier	plist		2553582	1					
ANR	2553629	ExpressionStatement	"error = gdev_prn_get_params ( ( gx_device * ) udev , plist )"	1554:3:64324:64376	2553582	7	True				
ANR	2553630	AssignmentExpression	"error = gdev_prn_get_params ( ( gx_device * ) udev , plist )"		2553582	0		=			
ANR	2553631	Identifier	error		2553582	0					
ANR	2553632	CallExpression	"gdev_prn_get_params ( ( gx_device * ) udev , plist )"		2553582	1					
ANR	2553633	Callee	gdev_prn_get_params		2553582	0					
ANR	2553634	Identifier	gdev_prn_get_params		2553582	0					
ANR	2553635	ArgumentList	( gx_device * ) udev		2553582	1					
ANR	2553636	Argument	( gx_device * ) udev		2553582	0					
ANR	2553637	CastExpression	( gx_device * ) udev		2553582	0					
ANR	2553638	CastTarget	gx_device *		2553582	0					
ANR	2553639	Identifier	udev		2553582	1					
ANR	2553640	Argument	plist		2553582	1					
ANR	2553641	Identifier	plist		2553582	0					
ANR	2553642	ExpressionStatement	"UPD_EXIT_GET ( error , udev , plist )"	1555:3:64381:64411	2553582	8	True				
ANR	2553643	CallExpression	"UPD_EXIT_GET ( error , udev , plist )"		2553582	0					
ANR	2553644	Callee	UPD_EXIT_GET		2553582	0					
ANR	2553645	Identifier	UPD_EXIT_GET		2553582	0					
ANR	2553646	ArgumentList	error		2553582	1					
ANR	2553647	Argument	error		2553582	0					
ANR	2553648	Identifier	error		2553582	0					
ANR	2553649	Argument	udev		2553582	1					
ANR	2553650	Identifier	udev		2553582	0					
ANR	2553651	Argument	plist		2553582	2					
ANR	2553652	Identifier	plist		2553582	0					
ANR	2553653	IfStatement	if ( upd_version )		2553582	9					
ANR	2553654	Condition	upd_version	1558:6:64446:64456	2553582	0	True				
ANR	2553655	Identifier	upd_version		2553582	0					
ANR	2553656	CompoundStatement		16:19:471:471	2553582	1					
ANR	2553657	ExpressionStatement	udev -> upd_version . data = ( const byte * ) rcsid	1559:6:64496:64547	2553582	0	True				
ANR	2553658	AssignmentExpression	udev -> upd_version . data = ( const byte * ) rcsid		2553582	0		=			
ANR	2553659	MemberAccess	udev -> upd_version . data		2553582	0					
ANR	2553660	PtrMemberAccess	udev -> upd_version		2553582	0					
ANR	2553661	Identifier	udev		2553582	0					
ANR	2553662	Identifier	upd_version		2553582	1					
ANR	2553663	Identifier	data		2553582	1					
ANR	2553664	CastExpression	( const byte * ) rcsid		2553582	1					
ANR	2553665	CastTarget	const byte *		2553582	0					
ANR	2553666	Identifier	rcsid		2553582	1					
ANR	2553667	ExpressionStatement	udev -> upd_version . size = strlen ( rcsid )	1560:6:64555:64599	2553582	1	True				
ANR	2553668	AssignmentExpression	udev -> upd_version . size = strlen ( rcsid )		2553582	0		=			
ANR	2553669	MemberAccess	udev -> upd_version . size		2553582	0					
ANR	2553670	PtrMemberAccess	udev -> upd_version		2553582	0					
ANR	2553671	Identifier	udev		2553582	0					
ANR	2553672	Identifier	upd_version		2553582	1					
ANR	2553673	Identifier	size		2553582	1					
ANR	2553674	CallExpression	strlen ( rcsid )		2553582	1					
ANR	2553675	Callee	strlen		2553582	0					
ANR	2553676	Identifier	strlen		2553582	0					
ANR	2553677	ArgumentList	rcsid		2553582	1					
ANR	2553678	Argument	rcsid		2553582	0					
ANR	2553679	Identifier	rcsid		2553582	0					
ANR	2553680	ExpressionStatement	udev -> upd_version . persistent = true	1561:6:64607:64642	2553582	2	True				
ANR	2553681	AssignmentExpression	udev -> upd_version . persistent = true		2553582	0		=			
ANR	2553682	MemberAccess	udev -> upd_version . persistent		2553582	0					
ANR	2553683	PtrMemberAccess	udev -> upd_version		2553582	0					
ANR	2553684	Identifier	udev		2553582	0					
ANR	2553685	Identifier	upd_version		2553582	1					
ANR	2553686	Identifier	persistent		2553582	1					
ANR	2553687	Identifier	true		2553582	1					
ANR	2553688	ExpressionStatement	"error = param_write_string ( plist , upd_version , & udev -> upd_version )"	1562:6:64650:64714	2553582	3	True				
ANR	2553689	AssignmentExpression	"error = param_write_string ( plist , upd_version , & udev -> upd_version )"		2553582	0		=			
ANR	2553690	Identifier	error		2553582	0					
ANR	2553691	CallExpression	"param_write_string ( plist , upd_version , & udev -> upd_version )"		2553582	1					
ANR	2553692	Callee	param_write_string		2553582	0					
ANR	2553693	Identifier	param_write_string		2553582	0					
ANR	2553694	ArgumentList	plist		2553582	1					
ANR	2553695	Argument	plist		2553582	0					
ANR	2553696	Identifier	plist		2553582	0					
ANR	2553697	Argument	upd_version		2553582	1					
ANR	2553698	Identifier	upd_version		2553582	0					
ANR	2553699	Argument	& udev -> upd_version		2553582	2					
ANR	2553700	UnaryOperationExpression	& udev -> upd_version		2553582	0					
ANR	2553701	UnaryOperator	&		2553582	0					
ANR	2553702	PtrMemberAccess	udev -> upd_version		2553582	1					
ANR	2553703	Identifier	udev		2553582	0					
ANR	2553704	Identifier	upd_version		2553582	1					
ANR	2553705	ExpressionStatement	"UPD_EXIT_GET ( error , udev , plist )"	1563:6:64722:64752	2553582	4	True				
ANR	2553706	CallExpression	"UPD_EXIT_GET ( error , udev , plist )"		2553582	0					
ANR	2553707	Callee	UPD_EXIT_GET		2553582	0					
ANR	2553708	Identifier	UPD_EXIT_GET		2553582	0					
ANR	2553709	ArgumentList	error		2553582	1					
ANR	2553710	Argument	error		2553582	0					
ANR	2553711	Identifier	error		2553582	0					
ANR	2553712	Argument	udev		2553582	1					
ANR	2553713	Identifier	udev		2553582	0					
ANR	2553714	Argument	plist		2553582	2					
ANR	2553715	Identifier	plist		2553582	0					
ANR	2553716	ForStatement	for ( i = 0 ; i < countof ( upd_choice ) ; ++ i )		2553582	10					
ANR	2553717	ForInit	i = 0 ;	1567:7:64844:64849	2553582	0	True				
ANR	2553718	AssignmentExpression	i = 0		2553582	0		=			
ANR	2553719	Identifier	i		2553582	0					
ANR	2553720	PrimaryExpression	0		2553582	1					
ANR	2553721	Condition	i < countof ( upd_choice )	1567:14:64851:64873	2553582	1	True				
ANR	2553722	RelationalExpression	i < countof ( upd_choice )		2553582	0		<			
ANR	2553723	Identifier	i		2553582	0					
ANR	2553724	CallExpression	countof ( upd_choice )		2553582	1					
ANR	2553725	Callee	countof		2553582	0					
ANR	2553726	Identifier	countof		2553582	0					
ANR	2553727	ArgumentList	upd_choice		2553582	1					
ANR	2553728	Argument	upd_choice		2553582	0					
ANR	2553729	Identifier	upd_choice		2553582	0					
ANR	2553730	UnaryExpression	++ i	1567:39:64876:64878	2553582	2	True				
ANR	2553731	IncDec	++		2553582	0					
ANR	2553732	Identifier	i		2553582	1					
ANR	2553733	CompoundStatement		25:44:893:893	2553582	3					
ANR	2553734	IfStatement	if ( ! upd_choice [ i ] )		2553582	0					
ANR	2553735	Condition	! upd_choice [ i ]	1568:9:64892:64905	2553582	0	True				
ANR	2553736	UnaryOperationExpression	! upd_choice [ i ]		2553582	0					
ANR	2553737	UnaryOperator	!		2553582	0					
ANR	2553738	ArrayIndexing	upd_choice [ i ]		2553582	1					
ANR	2553739	Identifier	upd_choice		2553582	0					
ANR	2553740	Identifier	i		2553582	1					
ANR	2553741	ContinueStatement	continue ;	1568:25:64908:64916	2553582	1	True				
ANR	2553742	IfStatement	if ( upd && upd -> choice && upd -> choice [ i ] )		2553582	1					
ANR	2553743	Condition	upd && upd -> choice && upd -> choice [ i ]	1569:9:64956:64991	2553582	0	True				
ANR	2553744	AndExpression	upd && upd -> choice && upd -> choice [ i ]		2553582	0		&&			
ANR	2553745	Identifier	upd		2553582	0					
ANR	2553746	AndExpression	upd -> choice && upd -> choice [ i ]		2553582	1		&&			
ANR	2553747	PtrMemberAccess	upd -> choice		2553582	0					
ANR	2553748	Identifier	upd		2553582	0					
ANR	2553749	Identifier	choice		2553582	1					
ANR	2553750	ArrayIndexing	upd -> choice [ i ]		2553582	1					
ANR	2553751	PtrMemberAccess	upd -> choice		2553582	0					
ANR	2553752	Identifier	upd		2553582	0					
ANR	2553753	Identifier	choice		2553582	1					
ANR	2553754	Identifier	i		2553582	1					
ANR	2553755	CompoundStatement		28:9:1017:1037	2553582	1					
ANR	2553756	IdentifierDeclStatement	gs_param_string name ;	1570:9:65005:65025	2553582	0	True				
ANR	2553757	IdentifierDecl	name		2553582	0					
ANR	2553758	IdentifierDeclType	gs_param_string		2553582	0					
ANR	2553759	Identifier	name		2553582	1					
ANR	2553760	ExpressionStatement	name . data = ( const byte * ) upd_choice [ i ] [ upd -> choice [ i ] ]	1571:9:65036:65098	2553582	1	True				
ANR	2553761	AssignmentExpression	name . data = ( const byte * ) upd_choice [ i ] [ upd -> choice [ i ] ]		2553582	0		=			
ANR	2553762	MemberAccess	name . data		2553582	0					
ANR	2553763	Identifier	name		2553582	0					
ANR	2553764	Identifier	data		2553582	1					
ANR	2553765	CastExpression	( const byte * ) upd_choice [ i ] [ upd -> choice [ i ] ]		2553582	1					
ANR	2553766	CastTarget	const byte *		2553582	0					
ANR	2553767	ArrayIndexing	upd_choice [ i ] [ upd -> choice [ i ] ]		2553582	1					
ANR	2553768	ArrayIndexing	upd_choice [ i ]		2553582	0					
ANR	2553769	Identifier	upd_choice		2553582	0					
ANR	2553770	Identifier	i		2553582	1					
ANR	2553771	ArrayIndexing	upd -> choice [ i ]		2553582	1					
ANR	2553772	PtrMemberAccess	upd -> choice		2553582	0					
ANR	2553773	Identifier	upd		2553582	0					
ANR	2553774	Identifier	choice		2553582	1					
ANR	2553775	Identifier	i		2553582	1					
ANR	2553776	ExpressionStatement	name . size = strlen ( ( const char * ) name . data )	1572:9:65109:65159	2553582	2	True				
ANR	2553777	AssignmentExpression	name . size = strlen ( ( const char * ) name . data )		2553582	0		=			
ANR	2553778	MemberAccess	name . size		2553582	0					
ANR	2553779	Identifier	name		2553582	0					
ANR	2553780	Identifier	size		2553582	1					
ANR	2553781	CallExpression	strlen ( ( const char * ) name . data )		2553582	1					
ANR	2553782	Callee	strlen		2553582	0					
ANR	2553783	Identifier	strlen		2553582	0					
ANR	2553784	ArgumentList	( const char * ) name . data		2553582	1					
ANR	2553785	Argument	( const char * ) name . data		2553582	0					
ANR	2553786	CastExpression	( const char * ) name . data		2553582	0					
ANR	2553787	CastTarget	const char *		2553582	0					
ANR	2553788	MemberAccess	name . data		2553582	1					
ANR	2553789	Identifier	name		2553582	0					
ANR	2553790	Identifier	data		2553582	1					
ANR	2553791	ExpressionStatement	name . persistent = true	1573:9:65170:65192	2553582	3	True				
ANR	2553792	AssignmentExpression	name . persistent = true		2553582	0		=			
ANR	2553793	MemberAccess	name . persistent		2553582	0					
ANR	2553794	Identifier	name		2553582	0					
ANR	2553795	Identifier	persistent		2553582	1					
ANR	2553796	Identifier	true		2553582	1					
ANR	2553797	ExpressionStatement	"error = param_write_name ( plist , upd_choice [ i ] [ 0 ] , & name )"	1574:9:65203:65257	2553582	4	True				
ANR	2553798	AssignmentExpression	"error = param_write_name ( plist , upd_choice [ i ] [ 0 ] , & name )"		2553582	0		=			
ANR	2553799	Identifier	error		2553582	0					
ANR	2553800	CallExpression	"param_write_name ( plist , upd_choice [ i ] [ 0 ] , & name )"		2553582	1					
ANR	2553801	Callee	param_write_name		2553582	0					
ANR	2553802	Identifier	param_write_name		2553582	0					
ANR	2553803	ArgumentList	plist		2553582	1					
ANR	2553804	Argument	plist		2553582	0					
ANR	2553805	Identifier	plist		2553582	0					
ANR	2553806	Argument	upd_choice [ i ] [ 0 ]		2553582	1					
ANR	2553807	ArrayIndexing	upd_choice [ i ] [ 0 ]		2553582	0					
ANR	2553808	ArrayIndexing	upd_choice [ i ]		2553582	0					
ANR	2553809	Identifier	upd_choice		2553582	0					
ANR	2553810	Identifier	i		2553582	1					
ANR	2553811	PrimaryExpression	0		2553582	1					
ANR	2553812	Argument	& name		2553582	2					
ANR	2553813	UnaryOperationExpression	& name		2553582	0					
ANR	2553814	UnaryOperator	&		2553582	0					
ANR	2553815	Identifier	name		2553582	1					
ANR	2553816	ElseStatement	else		2553582	0					
ANR	2553817	CompoundStatement		33:13:1284:1284	2553582	0					
ANR	2553818	ExpressionStatement	"error = param_write_null ( plist , upd_choice [ i ] [ 0 ] )"	1576:9:65283:65331	2553582	0	True				
ANR	2553819	AssignmentExpression	"error = param_write_null ( plist , upd_choice [ i ] [ 0 ] )"		2553582	0		=			
ANR	2553820	Identifier	error		2553582	0					
ANR	2553821	CallExpression	"param_write_null ( plist , upd_choice [ i ] [ 0 ] )"		2553582	1					
ANR	2553822	Callee	param_write_null		2553582	0					
ANR	2553823	Identifier	param_write_null		2553582	0					
ANR	2553824	ArgumentList	plist		2553582	1					
ANR	2553825	Argument	plist		2553582	0					
ANR	2553826	Identifier	plist		2553582	0					
ANR	2553827	Argument	upd_choice [ i ] [ 0 ]		2553582	1					
ANR	2553828	ArrayIndexing	upd_choice [ i ] [ 0 ]		2553582	0					
ANR	2553829	ArrayIndexing	upd_choice [ i ]		2553582	0					
ANR	2553830	Identifier	upd_choice		2553582	0					
ANR	2553831	Identifier	i		2553582	1					
ANR	2553832	PrimaryExpression	0		2553582	1					
ANR	2553833	ExpressionStatement	"UPD_EXIT_GET ( error , udev , plist )"	1578:6:65347:65377	2553582	2	True				
ANR	2553834	CallExpression	"UPD_EXIT_GET ( error , udev , plist )"		2553582	0					
ANR	2553835	Callee	UPD_EXIT_GET		2553582	0					
ANR	2553836	Identifier	UPD_EXIT_GET		2553582	0					
ANR	2553837	ArgumentList	error		2553582	1					
ANR	2553838	Argument	error		2553582	0					
ANR	2553839	Identifier	error		2553582	0					
ANR	2553840	Argument	udev		2553582	1					
ANR	2553841	Identifier	udev		2553582	0					
ANR	2553842	Argument	plist		2553582	2					
ANR	2553843	Identifier	plist		2553582	0					
ANR	2553844	ForStatement	for ( i = 0 ; i < countof ( upd_flags ) ; ++ i )		2553582	11					
ANR	2553845	ForInit	i = 0 ;	1582:7:65423:65428	2553582	0	True				
ANR	2553846	AssignmentExpression	i = 0		2553582	0		=			
ANR	2553847	Identifier	i		2553582	0					
ANR	2553848	PrimaryExpression	0		2553582	1					
ANR	2553849	Condition	i < countof ( upd_flags )	1582:14:65430:65451	2553582	1	True				
ANR	2553850	RelationalExpression	i < countof ( upd_flags )		2553582	0		<			
ANR	2553851	Identifier	i		2553582	0					
ANR	2553852	CallExpression	countof ( upd_flags )		2553582	1					
ANR	2553853	Callee	countof		2553582	0					
ANR	2553854	Identifier	countof		2553582	0					
ANR	2553855	ArgumentList	upd_flags		2553582	1					
ANR	2553856	Argument	upd_flags		2553582	0					
ANR	2553857	Identifier	upd_flags		2553582	0					
ANR	2553858	UnaryExpression	++ i	1582:38:65454:65456	2553582	2	True				
ANR	2553859	IncDec	++		2553582	0					
ANR	2553860	Identifier	i		2553582	1					
ANR	2553861	CompoundStatement		40:43:1471:1471	2553582	3					
ANR	2553862	IfStatement	if ( ! upd_flags [ i ] )		2553582	0					
ANR	2553863	Condition	! upd_flags [ i ]	1583:9:65470:65482	2553582	0	True				
ANR	2553864	UnaryOperationExpression	! upd_flags [ i ]		2553582	0					
ANR	2553865	UnaryOperator	!		2553582	0					
ANR	2553866	ArrayIndexing	upd_flags [ i ]		2553582	1					
ANR	2553867	Identifier	upd_flags		2553582	0					
ANR	2553868	Identifier	i		2553582	1					
ANR	2553869	ContinueStatement	continue ;	1583:24:65485:65493	2553582	1	True				
ANR	2553870	IfStatement	if ( upd )		2553582	1					
ANR	2553871	Condition	upd	1584:9:65531:65533	2553582	0	True				
ANR	2553872	Identifier	upd		2553582	0					
ANR	2553873	CompoundStatement		43:9:1559:1604	2553582	1					
ANR	2553874	IdentifierDeclStatement	bool value = upd -> flags & ( ( uint32_t ) 1 << i ) ;	1585:9:65547:65592	2553582	0	True				
ANR	2553875	IdentifierDecl	value = upd -> flags & ( ( uint32_t ) 1 << i )		2553582	0					
ANR	2553876	IdentifierDeclType	bool		2553582	0					
ANR	2553877	Identifier	value		2553582	1					
ANR	2553878	AssignmentExpression	value = upd -> flags & ( ( uint32_t ) 1 << i )		2553582	2		=			
ANR	2553879	Identifier	value		2553582	0					
ANR	2553880	BitAndExpression	upd -> flags & ( ( uint32_t ) 1 << i )		2553582	1		&			
ANR	2553881	PtrMemberAccess	upd -> flags		2553582	0					
ANR	2553882	Identifier	upd		2553582	0					
ANR	2553883	Identifier	flags		2553582	1					
ANR	2553884	ShiftExpression	( uint32_t ) 1 << i		2553582	1		<<			
ANR	2553885	CastExpression	( uint32_t ) 1		2553582	0					
ANR	2553886	CastTarget	uint32_t		2553582	0					
ANR	2553887	PrimaryExpression	1		2553582	1					
ANR	2553888	Identifier	i		2553582	1					
ANR	2553889	ExpressionStatement	"error = param_write_bool ( plist , upd_flags [ i ] , & value )"	1586:9:65603:65654	2553582	1	True				
ANR	2553890	AssignmentExpression	"error = param_write_bool ( plist , upd_flags [ i ] , & value )"		2553582	0		=			
ANR	2553891	Identifier	error		2553582	0					
ANR	2553892	CallExpression	"param_write_bool ( plist , upd_flags [ i ] , & value )"		2553582	1					
ANR	2553893	Callee	param_write_bool		2553582	0					
ANR	2553894	Identifier	param_write_bool		2553582	0					
ANR	2553895	ArgumentList	plist		2553582	1					
ANR	2553896	Argument	plist		2553582	0					
ANR	2553897	Identifier	plist		2553582	0					
ANR	2553898	Argument	upd_flags [ i ]		2553582	1					
ANR	2553899	ArrayIndexing	upd_flags [ i ]		2553582	0					
ANR	2553900	Identifier	upd_flags		2553582	0					
ANR	2553901	Identifier	i		2553582	1					
ANR	2553902	Argument	& value		2553582	2					
ANR	2553903	UnaryOperationExpression	& value		2553582	0					
ANR	2553904	UnaryOperator	&		2553582	0					
ANR	2553905	Identifier	value		2553582	1					
ANR	2553906	ElseStatement	else		2553582	0					
ANR	2553907	CompoundStatement		45:13:1681:1681	2553582	0					
ANR	2553908	ExpressionStatement	"error = param_write_null ( plist , upd_flags [ i ] )"	1588:9:65680:65724	2553582	0	True				
ANR	2553909	AssignmentExpression	"error = param_write_null ( plist , upd_flags [ i ] )"		2553582	0		=			
ANR	2553910	Identifier	error		2553582	0					
ANR	2553911	CallExpression	"param_write_null ( plist , upd_flags [ i ] )"		2553582	1					
ANR	2553912	Callee	param_write_null		2553582	0					
ANR	2553913	Identifier	param_write_null		2553582	0					
ANR	2553914	ArgumentList	plist		2553582	1					
ANR	2553915	Argument	plist		2553582	0					
ANR	2553916	Identifier	plist		2553582	0					
ANR	2553917	Argument	upd_flags [ i ]		2553582	1					
ANR	2553918	ArrayIndexing	upd_flags [ i ]		2553582	0					
ANR	2553919	Identifier	upd_flags		2553582	0					
ANR	2553920	Identifier	i		2553582	1					
ANR	2553921	ExpressionStatement	"UPD_EXIT_GET ( error , udev , plist )"	1590:6:65740:65770	2553582	2	True				
ANR	2553922	CallExpression	"UPD_EXIT_GET ( error , udev , plist )"		2553582	0					
ANR	2553923	Callee	UPD_EXIT_GET		2553582	0					
ANR	2553924	Identifier	UPD_EXIT_GET		2553582	0					
ANR	2553925	ArgumentList	error		2553582	1					
ANR	2553926	Argument	error		2553582	0					
ANR	2553927	Identifier	error		2553582	0					
ANR	2553928	Argument	udev		2553582	1					
ANR	2553929	Identifier	udev		2553582	0					
ANR	2553930	Argument	plist		2553582	2					
ANR	2553931	Identifier	plist		2553582	0					
ANR	2553932	ForStatement	for ( i = 0 ; i < countof ( upd_ints ) ; ++ i )		2553582	12					
ANR	2553933	ForInit	i = 0 ;	1594:7:65808:65813	2553582	0	True				
ANR	2553934	AssignmentExpression	i = 0		2553582	0		=			
ANR	2553935	Identifier	i		2553582	0					
ANR	2553936	PrimaryExpression	0		2553582	1					
ANR	2553937	Condition	i < countof ( upd_ints )	1594:14:65815:65835	2553582	1	True				
ANR	2553938	RelationalExpression	i < countof ( upd_ints )		2553582	0		<			
ANR	2553939	Identifier	i		2553582	0					
ANR	2553940	CallExpression	countof ( upd_ints )		2553582	1					
ANR	2553941	Callee	countof		2553582	0					
ANR	2553942	Identifier	countof		2553582	0					
ANR	2553943	ArgumentList	upd_ints		2553582	1					
ANR	2553944	Argument	upd_ints		2553582	0					
ANR	2553945	Identifier	upd_ints		2553582	0					
ANR	2553946	UnaryExpression	++ i	1594:37:65838:65840	2553582	2	True				
ANR	2553947	IncDec	++		2553582	0					
ANR	2553948	Identifier	i		2553582	1					
ANR	2553949	CompoundStatement		52:42:1855:1855	2553582	3					
ANR	2553950	IfStatement	if ( ! upd_ints [ i ] )		2553582	0					
ANR	2553951	Condition	! upd_ints [ i ]	1595:9:65854:65865	2553582	0	True				
ANR	2553952	UnaryOperationExpression	! upd_ints [ i ]		2553582	0					
ANR	2553953	UnaryOperator	!		2553582	0					
ANR	2553954	ArrayIndexing	upd_ints [ i ]		2553582	1					
ANR	2553955	Identifier	upd_ints		2553582	0					
ANR	2553956	Identifier	i		2553582	1					
ANR	2553957	ContinueStatement	continue ;	1595:23:65868:65876	2553582	1	True				
ANR	2553958	IfStatement	if ( upd && upd -> ints && upd -> ints [ i ] )		2553582	1					
ANR	2553959	Condition	upd && upd -> ints && upd -> ints [ i ]	1596:9:65913:65944	2553582	0	True				
ANR	2553960	AndExpression	upd && upd -> ints && upd -> ints [ i ]		2553582	0		&&			
ANR	2553961	Identifier	upd		2553582	0					
ANR	2553962	AndExpression	upd -> ints && upd -> ints [ i ]		2553582	1		&&			
ANR	2553963	PtrMemberAccess	upd -> ints		2553582	0					
ANR	2553964	Identifier	upd		2553582	0					
ANR	2553965	Identifier	ints		2553582	1					
ANR	2553966	ArrayIndexing	upd -> ints [ i ]		2553582	1					
ANR	2553967	PtrMemberAccess	upd -> ints		2553582	0					
ANR	2553968	Identifier	upd		2553582	0					
ANR	2553969	Identifier	ints		2553582	1					
ANR	2553970	Identifier	i		2553582	1					
ANR	2553971	CompoundStatement		55:9:1970:1994	2553582	1					
ANR	2553972	IdentifierDeclStatement	int value = upd -> ints [ i ] ;	1597:9:65958:65982	2553582	0	True				
ANR	2553973	IdentifierDecl	value = upd -> ints [ i ]		2553582	0					
ANR	2553974	IdentifierDeclType	int		2553582	0					
ANR	2553975	Identifier	value		2553582	1					
ANR	2553976	AssignmentExpression	value = upd -> ints [ i ]		2553582	2		=			
ANR	2553977	Identifier	value		2553582	0					
ANR	2553978	ArrayIndexing	upd -> ints [ i ]		2553582	1					
ANR	2553979	PtrMemberAccess	upd -> ints		2553582	0					
ANR	2553980	Identifier	upd		2553582	0					
ANR	2553981	Identifier	ints		2553582	1					
ANR	2553982	Identifier	i		2553582	1					
ANR	2553983	ExpressionStatement	"error = param_write_int ( plist , upd_ints [ i ] , & value )"	1598:9:65993:66043	2553582	1	True				
ANR	2553984	AssignmentExpression	"error = param_write_int ( plist , upd_ints [ i ] , & value )"		2553582	0		=			
ANR	2553985	Identifier	error		2553582	0					
ANR	2553986	CallExpression	"param_write_int ( plist , upd_ints [ i ] , & value )"		2553582	1					
ANR	2553987	Callee	param_write_int		2553582	0					
ANR	2553988	Identifier	param_write_int		2553582	0					
ANR	2553989	ArgumentList	plist		2553582	1					
ANR	2553990	Argument	plist		2553582	0					
ANR	2553991	Identifier	plist		2553582	0					
ANR	2553992	Argument	upd_ints [ i ]		2553582	1					
ANR	2553993	ArrayIndexing	upd_ints [ i ]		2553582	0					
ANR	2553994	Identifier	upd_ints		2553582	0					
ANR	2553995	Identifier	i		2553582	1					
ANR	2553996	Argument	& value		2553582	2					
ANR	2553997	UnaryOperationExpression	& value		2553582	0					
ANR	2553998	UnaryOperator	&		2553582	0					
ANR	2553999	Identifier	value		2553582	1					
ANR	2554000	ElseStatement	else		2553582	0					
ANR	2554001	CompoundStatement		57:13:2070:2070	2553582	0					
ANR	2554002	ExpressionStatement	"error = param_write_null ( plist , upd_ints [ i ] )"	1600:9:66069:66112	2553582	0	True				
ANR	2554003	AssignmentExpression	"error = param_write_null ( plist , upd_ints [ i ] )"		2553582	0		=			
ANR	2554004	Identifier	error		2553582	0					
ANR	2554005	CallExpression	"param_write_null ( plist , upd_ints [ i ] )"		2553582	1					
ANR	2554006	Callee	param_write_null		2553582	0					
ANR	2554007	Identifier	param_write_null		2553582	0					
ANR	2554008	ArgumentList	plist		2553582	1					
ANR	2554009	Argument	plist		2553582	0					
ANR	2554010	Identifier	plist		2553582	0					
ANR	2554011	Argument	upd_ints [ i ]		2553582	1					
ANR	2554012	ArrayIndexing	upd_ints [ i ]		2553582	0					
ANR	2554013	Identifier	upd_ints		2553582	0					
ANR	2554014	Identifier	i		2553582	1					
ANR	2554015	ExpressionStatement	"UPD_EXIT_GET ( error , udev , plist )"	1602:6:66128:66158	2553582	2	True				
ANR	2554016	CallExpression	"UPD_EXIT_GET ( error , udev , plist )"		2553582	0					
ANR	2554017	Callee	UPD_EXIT_GET		2553582	0					
ANR	2554018	Identifier	UPD_EXIT_GET		2553582	0					
ANR	2554019	ArgumentList	error		2553582	1					
ANR	2554020	Argument	error		2553582	0					
ANR	2554021	Identifier	error		2553582	0					
ANR	2554022	Argument	udev		2553582	1					
ANR	2554023	Identifier	udev		2553582	0					
ANR	2554024	Argument	plist		2553582	2					
ANR	2554025	Identifier	plist		2553582	0					
ANR	2554026	ForStatement	for ( i = 0 ; i < countof ( upd_int_a ) ; ++ i )		2553582	13					
ANR	2554027	ForInit	i = 0 ;	1606:7:66202:66207	2553582	0	True				
ANR	2554028	AssignmentExpression	i = 0		2553582	0		=			
ANR	2554029	Identifier	i		2553582	0					
ANR	2554030	PrimaryExpression	0		2553582	1					
ANR	2554031	Condition	i < countof ( upd_int_a )	1606:14:66209:66230	2553582	1	True				
ANR	2554032	RelationalExpression	i < countof ( upd_int_a )		2553582	0		<			
ANR	2554033	Identifier	i		2553582	0					
ANR	2554034	CallExpression	countof ( upd_int_a )		2553582	1					
ANR	2554035	Callee	countof		2553582	0					
ANR	2554036	Identifier	countof		2553582	0					
ANR	2554037	ArgumentList	upd_int_a		2553582	1					
ANR	2554038	Argument	upd_int_a		2553582	0					
ANR	2554039	Identifier	upd_int_a		2553582	0					
ANR	2554040	UnaryExpression	++ i	1606:38:66233:66235	2553582	2	True				
ANR	2554041	IncDec	++		2553582	0					
ANR	2554042	Identifier	i		2553582	1					
ANR	2554043	CompoundStatement		64:43:2250:2250	2553582	3					
ANR	2554044	IfStatement	if ( ! upd_int_a [ i ] )		2553582	0					
ANR	2554045	Condition	! upd_int_a [ i ]	1607:9:66249:66261	2553582	0	True				
ANR	2554046	UnaryOperationExpression	! upd_int_a [ i ]		2553582	0					
ANR	2554047	UnaryOperator	!		2553582	0					
ANR	2554048	ArrayIndexing	upd_int_a [ i ]		2553582	1					
ANR	2554049	Identifier	upd_int_a		2553582	0					
ANR	2554050	Identifier	i		2553582	1					
ANR	2554051	ContinueStatement	continue ;	1607:24:66264:66272	2553582	1	True				
ANR	2554052	IfStatement	if ( upd && upd -> int_a && upd -> int_a [ i ] . size )		2553582	1					
ANR	2554053	Condition	upd && upd -> int_a && upd -> int_a [ i ] . size	1608:9:66315:66353	2553582	0	True				
ANR	2554054	AndExpression	upd && upd -> int_a && upd -> int_a [ i ] . size		2553582	0		&&			
ANR	2554055	Identifier	upd		2553582	0					
ANR	2554056	AndExpression	upd -> int_a && upd -> int_a [ i ] . size		2553582	1		&&			
ANR	2554057	PtrMemberAccess	upd -> int_a		2553582	0					
ANR	2554058	Identifier	upd		2553582	0					
ANR	2554059	Identifier	int_a		2553582	1					
ANR	2554060	MemberAccess	upd -> int_a [ i ] . size		2553582	1					
ANR	2554061	ArrayIndexing	upd -> int_a [ i ]		2553582	0					
ANR	2554062	PtrMemberAccess	upd -> int_a		2553582	0					
ANR	2554063	Identifier	upd		2553582	0					
ANR	2554064	Identifier	int_a		2553582	1					
ANR	2554065	Identifier	i		2553582	1					
ANR	2554066	Identifier	size		2553582	1					
ANR	2554067	CompoundStatement		66:50:2368:2368	2553582	1					
ANR	2554068	ExpressionStatement	"error = param_write_int_array ( plist , upd_int_a [ i ] , ( upd -> int_a + i ) )"	1609:9:66367:66432	2553582	0	True				
ANR	2554069	AssignmentExpression	"error = param_write_int_array ( plist , upd_int_a [ i ] , ( upd -> int_a + i ) )"		2553582	0		=			
ANR	2554070	Identifier	error		2553582	0					
ANR	2554071	CallExpression	"param_write_int_array ( plist , upd_int_a [ i ] , ( upd -> int_a + i ) )"		2553582	1					
ANR	2554072	Callee	param_write_int_array		2553582	0					
ANR	2554073	Identifier	param_write_int_array		2553582	0					
ANR	2554074	ArgumentList	plist		2553582	1					
ANR	2554075	Argument	plist		2553582	0					
ANR	2554076	Identifier	plist		2553582	0					
ANR	2554077	Argument	upd_int_a [ i ]		2553582	1					
ANR	2554078	ArrayIndexing	upd_int_a [ i ]		2553582	0					
ANR	2554079	Identifier	upd_int_a		2553582	0					
ANR	2554080	Identifier	i		2553582	1					
ANR	2554081	Argument	upd -> int_a + i		2553582	2					
ANR	2554082	AdditiveExpression	upd -> int_a + i		2553582	0		+			
ANR	2554083	PtrMemberAccess	upd -> int_a		2553582	0					
ANR	2554084	Identifier	upd		2553582	0					
ANR	2554085	Identifier	int_a		2553582	1					
ANR	2554086	Identifier	i		2553582	1					
ANR	2554087	ElseStatement	else		2553582	0					
ANR	2554088	CompoundStatement		68:13:2459:2459	2553582	0					
ANR	2554089	ExpressionStatement	"error = param_write_null ( plist , upd_int_a [ i ] )"	1611:9:66458:66502	2553582	0	True				
ANR	2554090	AssignmentExpression	"error = param_write_null ( plist , upd_int_a [ i ] )"		2553582	0		=			
ANR	2554091	Identifier	error		2553582	0					
ANR	2554092	CallExpression	"param_write_null ( plist , upd_int_a [ i ] )"		2553582	1					
ANR	2554093	Callee	param_write_null		2553582	0					
ANR	2554094	Identifier	param_write_null		2553582	0					
ANR	2554095	ArgumentList	plist		2553582	1					
ANR	2554096	Argument	plist		2553582	0					
ANR	2554097	Identifier	plist		2553582	0					
ANR	2554098	Argument	upd_int_a [ i ]		2553582	1					
ANR	2554099	ArrayIndexing	upd_int_a [ i ]		2553582	0					
ANR	2554100	Identifier	upd_int_a		2553582	0					
ANR	2554101	Identifier	i		2553582	1					
ANR	2554102	ExpressionStatement	"UPD_EXIT_GET ( error , udev , plist )"	1613:6:66518:66548	2553582	2	True				
ANR	2554103	CallExpression	"UPD_EXIT_GET ( error , udev , plist )"		2553582	0					
ANR	2554104	Callee	UPD_EXIT_GET		2553582	0					
ANR	2554105	Identifier	UPD_EXIT_GET		2553582	0					
ANR	2554106	ArgumentList	error		2553582	1					
ANR	2554107	Argument	error		2553582	0					
ANR	2554108	Identifier	error		2553582	0					
ANR	2554109	Argument	udev		2553582	1					
ANR	2554110	Identifier	udev		2553582	0					
ANR	2554111	Argument	plist		2553582	2					
ANR	2554112	Identifier	plist		2553582	0					
ANR	2554113	ForStatement	for ( i = 0 ; i < countof ( upd_strings ) ; ++ i )		2553582	14					
ANR	2554114	ForInit	i = 0 ;	1617:7:66589:66594	2553582	0	True				
ANR	2554115	AssignmentExpression	i = 0		2553582	0		=			
ANR	2554116	Identifier	i		2553582	0					
ANR	2554117	PrimaryExpression	0		2553582	1					
ANR	2554118	Condition	i < countof ( upd_strings )	1617:14:66596:66619	2553582	1	True				
ANR	2554119	RelationalExpression	i < countof ( upd_strings )		2553582	0		<			
ANR	2554120	Identifier	i		2553582	0					
ANR	2554121	CallExpression	countof ( upd_strings )		2553582	1					
ANR	2554122	Callee	countof		2553582	0					
ANR	2554123	Identifier	countof		2553582	0					
ANR	2554124	ArgumentList	upd_strings		2553582	1					
ANR	2554125	Argument	upd_strings		2553582	0					
ANR	2554126	Identifier	upd_strings		2553582	0					
ANR	2554127	UnaryExpression	++ i	1617:40:66622:66624	2553582	2	True				
ANR	2554128	IncDec	++		2553582	0					
ANR	2554129	Identifier	i		2553582	1					
ANR	2554130	CompoundStatement		75:45:2639:2639	2553582	3					
ANR	2554131	IfStatement	if ( ! upd_strings [ i ] )		2553582	0					
ANR	2554132	Condition	! upd_strings [ i ]	1618:9:66638:66652	2553582	0	True				
ANR	2554133	UnaryOperationExpression	! upd_strings [ i ]		2553582	0					
ANR	2554134	UnaryOperator	!		2553582	0					
ANR	2554135	ArrayIndexing	upd_strings [ i ]		2553582	1					
ANR	2554136	Identifier	upd_strings		2553582	0					
ANR	2554137	Identifier	i		2553582	1					
ANR	2554138	ContinueStatement	continue ;	1618:26:66655:66663	2553582	1	True				
ANR	2554139	IfStatement	if ( upd && upd -> strings && upd -> strings [ i ] . size )		2553582	1					
ANR	2554140	Condition	upd && upd -> strings && upd -> strings [ i ] . size	1619:9:66703:66745	2553582	0	True				
ANR	2554141	AndExpression	upd && upd -> strings && upd -> strings [ i ] . size		2553582	0		&&			
ANR	2554142	Identifier	upd		2553582	0					
ANR	2554143	AndExpression	upd -> strings && upd -> strings [ i ] . size		2553582	1		&&			
ANR	2554144	PtrMemberAccess	upd -> strings		2553582	0					
ANR	2554145	Identifier	upd		2553582	0					
ANR	2554146	Identifier	strings		2553582	1					
ANR	2554147	MemberAccess	upd -> strings [ i ] . size		2553582	1					
ANR	2554148	ArrayIndexing	upd -> strings [ i ]		2553582	0					
ANR	2554149	PtrMemberAccess	upd -> strings		2553582	0					
ANR	2554150	Identifier	upd		2553582	0					
ANR	2554151	Identifier	strings		2553582	1					
ANR	2554152	Identifier	i		2553582	1					
ANR	2554153	Identifier	size		2553582	1					
ANR	2554154	CompoundStatement		77:54:2760:2760	2553582	1					
ANR	2554155	ExpressionStatement	"error = param_write_string ( plist , upd_strings [ i ] , ( upd -> strings + i ) )"	1620:9:66759:66825	2553582	0	True				
ANR	2554156	AssignmentExpression	"error = param_write_string ( plist , upd_strings [ i ] , ( upd -> strings + i ) )"		2553582	0		=			
ANR	2554157	Identifier	error		2553582	0					
ANR	2554158	CallExpression	"param_write_string ( plist , upd_strings [ i ] , ( upd -> strings + i ) )"		2553582	1					
ANR	2554159	Callee	param_write_string		2553582	0					
ANR	2554160	Identifier	param_write_string		2553582	0					
ANR	2554161	ArgumentList	plist		2553582	1					
ANR	2554162	Argument	plist		2553582	0					
ANR	2554163	Identifier	plist		2553582	0					
ANR	2554164	Argument	upd_strings [ i ]		2553582	1					
ANR	2554165	ArrayIndexing	upd_strings [ i ]		2553582	0					
ANR	2554166	Identifier	upd_strings		2553582	0					
ANR	2554167	Identifier	i		2553582	1					
ANR	2554168	Argument	upd -> strings + i		2553582	2					
ANR	2554169	AdditiveExpression	upd -> strings + i		2553582	0		+			
ANR	2554170	PtrMemberAccess	upd -> strings		2553582	0					
ANR	2554171	Identifier	upd		2553582	0					
ANR	2554172	Identifier	strings		2553582	1					
ANR	2554173	Identifier	i		2553582	1					
ANR	2554174	ElseStatement	else		2553582	0					
ANR	2554175	CompoundStatement		79:13:2852:2852	2553582	0					
ANR	2554176	ExpressionStatement	"error = param_write_null ( plist , upd_strings [ i ] )"	1622:9:66851:66897	2553582	0	True				
ANR	2554177	AssignmentExpression	"error = param_write_null ( plist , upd_strings [ i ] )"		2553582	0		=			
ANR	2554178	Identifier	error		2553582	0					
ANR	2554179	CallExpression	"param_write_null ( plist , upd_strings [ i ] )"		2553582	1					
ANR	2554180	Callee	param_write_null		2553582	0					
ANR	2554181	Identifier	param_write_null		2553582	0					
ANR	2554182	ArgumentList	plist		2553582	1					
ANR	2554183	Argument	plist		2553582	0					
ANR	2554184	Identifier	plist		2553582	0					
ANR	2554185	Argument	upd_strings [ i ]		2553582	1					
ANR	2554186	ArrayIndexing	upd_strings [ i ]		2553582	0					
ANR	2554187	Identifier	upd_strings		2553582	0					
ANR	2554188	Identifier	i		2553582	1					
ANR	2554189	ExpressionStatement	"UPD_EXIT_GET ( error , udev , plist )"	1624:6:66913:66943	2553582	2	True				
ANR	2554190	CallExpression	"UPD_EXIT_GET ( error , udev , plist )"		2553582	0					
ANR	2554191	Callee	UPD_EXIT_GET		2553582	0					
ANR	2554192	Identifier	UPD_EXIT_GET		2553582	0					
ANR	2554193	ArgumentList	error		2553582	1					
ANR	2554194	Argument	error		2553582	0					
ANR	2554195	Identifier	error		2553582	0					
ANR	2554196	Argument	udev		2553582	1					
ANR	2554197	Identifier	udev		2553582	0					
ANR	2554198	Argument	plist		2553582	2					
ANR	2554199	Identifier	plist		2553582	0					
ANR	2554200	ForStatement	for ( i = 0 ; i < countof ( upd_string_a ) ; ++ i )		2553582	15					
ANR	2554201	ForInit	i = 0 ;	1628:7:66990:66995	2553582	0	True				
ANR	2554202	AssignmentExpression	i = 0		2553582	0		=			
ANR	2554203	Identifier	i		2553582	0					
ANR	2554204	PrimaryExpression	0		2553582	1					
ANR	2554205	Condition	i < countof ( upd_string_a )	1628:14:66997:67021	2553582	1	True				
ANR	2554206	RelationalExpression	i < countof ( upd_string_a )		2553582	0		<			
ANR	2554207	Identifier	i		2553582	0					
ANR	2554208	CallExpression	countof ( upd_string_a )		2553582	1					
ANR	2554209	Callee	countof		2553582	0					
ANR	2554210	Identifier	countof		2553582	0					
ANR	2554211	ArgumentList	upd_string_a		2553582	1					
ANR	2554212	Argument	upd_string_a		2553582	0					
ANR	2554213	Identifier	upd_string_a		2553582	0					
ANR	2554214	UnaryExpression	++ i	1628:41:67024:67026	2553582	2	True				
ANR	2554215	IncDec	++		2553582	0					
ANR	2554216	Identifier	i		2553582	1					
ANR	2554217	CompoundStatement		86:46:3041:3041	2553582	3					
ANR	2554218	IfStatement	if ( ! upd_string_a [ i ] )		2553582	0					
ANR	2554219	Condition	! upd_string_a [ i ]	1629:9:67040:67055	2553582	0	True				
ANR	2554220	UnaryOperationExpression	! upd_string_a [ i ]		2553582	0					
ANR	2554221	UnaryOperator	!		2553582	0					
ANR	2554222	ArrayIndexing	upd_string_a [ i ]		2553582	1					
ANR	2554223	Identifier	upd_string_a		2553582	0					
ANR	2554224	Identifier	i		2553582	1					
ANR	2554225	ContinueStatement	continue ;	1629:27:67058:67066	2553582	1	True				
ANR	2554226	IfStatement	if ( upd && upd -> string_a && upd -> string_a [ i ] . size )		2553582	1					
ANR	2554227	Condition	upd && upd -> string_a && upd -> string_a [ i ] . size	1630:9:67112:67156	2553582	0	True				
ANR	2554228	AndExpression	upd && upd -> string_a && upd -> string_a [ i ] . size		2553582	0		&&			
ANR	2554229	Identifier	upd		2553582	0					
ANR	2554230	AndExpression	upd -> string_a && upd -> string_a [ i ] . size		2553582	1		&&			
ANR	2554231	PtrMemberAccess	upd -> string_a		2553582	0					
ANR	2554232	Identifier	upd		2553582	0					
ANR	2554233	Identifier	string_a		2553582	1					
ANR	2554234	MemberAccess	upd -> string_a [ i ] . size		2553582	1					
ANR	2554235	ArrayIndexing	upd -> string_a [ i ]		2553582	0					
ANR	2554236	PtrMemberAccess	upd -> string_a		2553582	0					
ANR	2554237	Identifier	upd		2553582	0					
ANR	2554238	Identifier	string_a		2553582	1					
ANR	2554239	Identifier	i		2553582	1					
ANR	2554240	Identifier	size		2553582	1					
ANR	2554241	CompoundStatement		88:56:3171:3171	2553582	1					
ANR	2554242	ExpressionStatement	"error = param_write_string_array ( plist , upd_string_a [ i ] , ( upd -> string_a + i ) )"	1631:9:67170:67256	2553582	0	True				
ANR	2554243	AssignmentExpression	"error = param_write_string_array ( plist , upd_string_a [ i ] , ( upd -> string_a + i ) )"		2553582	0		=			
ANR	2554244	Identifier	error		2553582	0					
ANR	2554245	CallExpression	"param_write_string_array ( plist , upd_string_a [ i ] , ( upd -> string_a + i ) )"		2553582	1					
ANR	2554246	Callee	param_write_string_array		2553582	0					
ANR	2554247	Identifier	param_write_string_array		2553582	0					
ANR	2554248	ArgumentList	plist		2553582	1					
ANR	2554249	Argument	plist		2553582	0					
ANR	2554250	Identifier	plist		2553582	0					
ANR	2554251	Argument	upd_string_a [ i ]		2553582	1					
ANR	2554252	ArrayIndexing	upd_string_a [ i ]		2553582	0					
ANR	2554253	Identifier	upd_string_a		2553582	0					
ANR	2554254	Identifier	i		2553582	1					
ANR	2554255	Argument	upd -> string_a + i		2553582	2					
ANR	2554256	AdditiveExpression	upd -> string_a + i		2553582	0		+			
ANR	2554257	PtrMemberAccess	upd -> string_a		2553582	0					
ANR	2554258	Identifier	upd		2553582	0					
ANR	2554259	Identifier	string_a		2553582	1					
ANR	2554260	Identifier	i		2553582	1					
ANR	2554261	ElseStatement	else		2553582	0					
ANR	2554262	CompoundStatement		91:13:3283:3283	2553582	0					
ANR	2554263	ExpressionStatement	"error = param_write_null ( plist , upd_string_a [ i ] )"	1634:9:67282:67329	2553582	0	True				
ANR	2554264	AssignmentExpression	"error = param_write_null ( plist , upd_string_a [ i ] )"		2553582	0		=			
ANR	2554265	Identifier	error		2553582	0					
ANR	2554266	CallExpression	"param_write_null ( plist , upd_string_a [ i ] )"		2553582	1					
ANR	2554267	Callee	param_write_null		2553582	0					
ANR	2554268	Identifier	param_write_null		2553582	0					
ANR	2554269	ArgumentList	plist		2553582	1					
ANR	2554270	Argument	plist		2553582	0					
ANR	2554271	Identifier	plist		2553582	0					
ANR	2554272	Argument	upd_string_a [ i ]		2553582	1					
ANR	2554273	ArrayIndexing	upd_string_a [ i ]		2553582	0					
ANR	2554274	Identifier	upd_string_a		2553582	0					
ANR	2554275	Identifier	i		2553582	1					
ANR	2554276	ExpressionStatement	"UPD_EXIT_GET ( error , udev , plist )"	1636:6:67345:67375	2553582	2	True				
ANR	2554277	CallExpression	"UPD_EXIT_GET ( error , udev , plist )"		2553582	0					
ANR	2554278	Callee	UPD_EXIT_GET		2553582	0					
ANR	2554279	Identifier	UPD_EXIT_GET		2553582	0					
ANR	2554280	ArgumentList	error		2553582	1					
ANR	2554281	Argument	error		2553582	0					
ANR	2554282	Identifier	error		2553582	0					
ANR	2554283	Argument	udev		2553582	1					
ANR	2554284	Identifier	udev		2553582	0					
ANR	2554285	Argument	plist		2553582	2					
ANR	2554286	Identifier	plist		2553582	0					
ANR	2554287	ForStatement	for ( i = 0 ; i < countof ( upd_float_a ) ; ++ i )		2553582	16					
ANR	2554288	ForInit	i = 0 ;	1640:7:67421:67426	2553582	0	True				
ANR	2554289	AssignmentExpression	i = 0		2553582	0		=			
ANR	2554290	Identifier	i		2553582	0					
ANR	2554291	PrimaryExpression	0		2553582	1					
ANR	2554292	Condition	i < countof ( upd_float_a )	1640:14:67428:67451	2553582	1	True				
ANR	2554293	RelationalExpression	i < countof ( upd_float_a )		2553582	0		<			
ANR	2554294	Identifier	i		2553582	0					
ANR	2554295	CallExpression	countof ( upd_float_a )		2553582	1					
ANR	2554296	Callee	countof		2553582	0					
ANR	2554297	Identifier	countof		2553582	0					
ANR	2554298	ArgumentList	upd_float_a		2553582	1					
ANR	2554299	Argument	upd_float_a		2553582	0					
ANR	2554300	Identifier	upd_float_a		2553582	0					
ANR	2554301	UnaryExpression	++ i	1640:40:67454:67456	2553582	2	True				
ANR	2554302	IncDec	++		2553582	0					
ANR	2554303	Identifier	i		2553582	1					
ANR	2554304	CompoundStatement		98:45:3471:3471	2553582	3					
ANR	2554305	IfStatement	if ( ! upd_float_a [ i ] )		2553582	0					
ANR	2554306	Condition	! upd_float_a [ i ]	1641:9:67470:67484	2553582	0	True				
ANR	2554307	UnaryOperationExpression	! upd_float_a [ i ]		2553582	0					
ANR	2554308	UnaryOperator	!		2553582	0					
ANR	2554309	ArrayIndexing	upd_float_a [ i ]		2553582	1					
ANR	2554310	Identifier	upd_float_a		2553582	0					
ANR	2554311	Identifier	i		2553582	1					
ANR	2554312	ContinueStatement	continue ;	1641:26:67487:67495	2553582	1	True				
ANR	2554313	IfStatement	if ( upd && upd -> float_a && upd -> float_a [ i ] . size )		2553582	1					
ANR	2554314	Condition	upd && upd -> float_a && upd -> float_a [ i ] . size	1642:9:67540:67582	2553582	0	True				
ANR	2554315	AndExpression	upd && upd -> float_a && upd -> float_a [ i ] . size		2553582	0		&&			
ANR	2554316	Identifier	upd		2553582	0					
ANR	2554317	AndExpression	upd -> float_a && upd -> float_a [ i ] . size		2553582	1		&&			
ANR	2554318	PtrMemberAccess	upd -> float_a		2553582	0					
ANR	2554319	Identifier	upd		2553582	0					
ANR	2554320	Identifier	float_a		2553582	1					
ANR	2554321	MemberAccess	upd -> float_a [ i ] . size		2553582	1					
ANR	2554322	ArrayIndexing	upd -> float_a [ i ]		2553582	0					
ANR	2554323	PtrMemberAccess	upd -> float_a		2553582	0					
ANR	2554324	Identifier	upd		2553582	0					
ANR	2554325	Identifier	float_a		2553582	1					
ANR	2554326	Identifier	i		2553582	1					
ANR	2554327	Identifier	size		2553582	1					
ANR	2554328	CompoundStatement		100:54:3597:3597	2553582	1					
ANR	2554329	ExpressionStatement	"error = param_write_float_array ( plist , upd_float_a [ i ] , ( upd -> float_a + i ) )"	1643:9:67596:67679	2553582	0	True				
ANR	2554330	AssignmentExpression	"error = param_write_float_array ( plist , upd_float_a [ i ] , ( upd -> float_a + i ) )"		2553582	0		=			
ANR	2554331	Identifier	error		2553582	0					
ANR	2554332	CallExpression	"param_write_float_array ( plist , upd_float_a [ i ] , ( upd -> float_a + i ) )"		2553582	1					
ANR	2554333	Callee	param_write_float_array		2553582	0					
ANR	2554334	Identifier	param_write_float_array		2553582	0					
ANR	2554335	ArgumentList	plist		2553582	1					
ANR	2554336	Argument	plist		2553582	0					
ANR	2554337	Identifier	plist		2553582	0					
ANR	2554338	Argument	upd_float_a [ i ]		2553582	1					
ANR	2554339	ArrayIndexing	upd_float_a [ i ]		2553582	0					
ANR	2554340	Identifier	upd_float_a		2553582	0					
ANR	2554341	Identifier	i		2553582	1					
ANR	2554342	Argument	upd -> float_a + i		2553582	2					
ANR	2554343	AdditiveExpression	upd -> float_a + i		2553582	0		+			
ANR	2554344	PtrMemberAccess	upd -> float_a		2553582	0					
ANR	2554345	Identifier	upd		2553582	0					
ANR	2554346	Identifier	float_a		2553582	1					
ANR	2554347	Identifier	i		2553582	1					
ANR	2554348	ElseStatement	else		2553582	0					
ANR	2554349	CompoundStatement		103:13:3706:3706	2553582	0					
ANR	2554350	ExpressionStatement	"error = param_write_null ( plist , upd_float_a [ i ] )"	1646:9:67705:67751	2553582	0	True				
ANR	2554351	AssignmentExpression	"error = param_write_null ( plist , upd_float_a [ i ] )"		2553582	0		=			
ANR	2554352	Identifier	error		2553582	0					
ANR	2554353	CallExpression	"param_write_null ( plist , upd_float_a [ i ] )"		2553582	1					
ANR	2554354	Callee	param_write_null		2553582	0					
ANR	2554355	Identifier	param_write_null		2553582	0					
ANR	2554356	ArgumentList	plist		2553582	1					
ANR	2554357	Argument	plist		2553582	0					
ANR	2554358	Identifier	plist		2553582	0					
ANR	2554359	Argument	upd_float_a [ i ]		2553582	1					
ANR	2554360	ArrayIndexing	upd_float_a [ i ]		2553582	0					
ANR	2554361	Identifier	upd_float_a		2553582	0					
ANR	2554362	Identifier	i		2553582	1					
ANR	2554363	ExpressionStatement	"UPD_EXIT_GET ( error , udev , plist )"	1648:6:67767:67797	2553582	2	True				
ANR	2554364	CallExpression	"UPD_EXIT_GET ( error , udev , plist )"		2553582	0					
ANR	2554365	Callee	UPD_EXIT_GET		2553582	0					
ANR	2554366	Identifier	UPD_EXIT_GET		2553582	0					
ANR	2554367	ArgumentList	error		2553582	1					
ANR	2554368	Argument	error		2553582	0					
ANR	2554369	Identifier	error		2553582	0					
ANR	2554370	Argument	udev		2553582	1					
ANR	2554371	Identifier	udev		2553582	0					
ANR	2554372	Argument	plist		2553582	2					
ANR	2554373	Identifier	plist		2553582	0					
ANR	2554374	ExpressionStatement	"errprintf ( udev -> memory , ""RETURN: %d = upd_get_params(0x%05lx,0x%05lx)\\n"" , error , ( long ) udev , ( long ) plist )"	1652:3:67842:67953	2553582	17	True				
ANR	2554375	CallExpression	"errprintf ( udev -> memory , ""RETURN: %d = upd_get_params(0x%05lx,0x%05lx)\\n"" , error , ( long ) udev , ( long ) plist )"		2553582	0					
ANR	2554376	Callee	errprintf		2553582	0					
ANR	2554377	Identifier	errprintf		2553582	0					
ANR	2554378	ArgumentList	udev -> memory		2553582	1					
ANR	2554379	Argument	udev -> memory		2553582	0					
ANR	2554380	PtrMemberAccess	udev -> memory		2553582	0					
ANR	2554381	Identifier	udev		2553582	0					
ANR	2554382	Identifier	memory		2553582	1					
ANR	2554383	Argument	"""RETURN: %d = upd_get_params(0x%05lx,0x%05lx)\\n"""		2553582	1					
ANR	2554384	PrimaryExpression	"""RETURN: %d = upd_get_params(0x%05lx,0x%05lx)\\n"""		2553582	0					
ANR	2554385	Argument	error		2553582	2					
ANR	2554386	Identifier	error		2553582	0					
ANR	2554387	Argument	( long ) udev		2553582	3					
ANR	2554388	CastExpression	( long ) udev		2553582	0					
ANR	2554389	CastTarget	long		2553582	0					
ANR	2554390	Identifier	udev		2553582	1					
ANR	2554391	Argument	( long ) plist		2553582	4					
ANR	2554392	CastExpression	( long ) plist		2553582	0					
ANR	2554393	CastTarget	long		2553582	0					
ANR	2554394	Identifier	plist		2553582	1					
ANR	2554395	ReturnStatement	return error ;	1656:3:67966:67978	2553582	18	True				
ANR	2554396	Identifier	error		2553582	0					
ANR	2554397	ReturnType	static int		2553582	1					
ANR	2554398	Identifier	upd_get_params		2553582	2					
ANR	2554399	ParameterList	"gx_device * pdev , gs_param_list * plist"		2553582	3					
ANR	2554400	Parameter	gx_device * pdev	1542:15:63948:63962	2553582	0	True				
ANR	2554401	ParameterType	gx_device *		2553582	0					
ANR	2554402	Identifier	pdev		2553582	1					
ANR	2554403	Parameter	gs_param_list * plist	1542:32:63965:63984	2553582	1	True				
ANR	2554404	ParameterType	gs_param_list *		2553582	0					
ANR	2554405	Identifier	plist		2553582	1					
ANR	2554406	CFGEntryNode	ENTRY		2553582		True				
ANR	2554407	CFGExitNode	EXIT		2553582		True				
ANR	2554408	Symbol	* upd -> string_a		2553582						
ANR	2554409	Symbol	* upd_int_a		2553582						
ANR	2554410	Symbol	* upd -> int_a		2553582						
ANR	2554411	Symbol	& value		2553582						
ANR	2554412	Symbol	upd -> float_a [ i ] . size		2553582						
ANR	2554413	Symbol	rcsid		2553582						
ANR	2554414	Symbol	* upd_strings		2553582						
ANR	2554415	Symbol	& name		2553582						
ANR	2554416	Symbol	upd_ints		2553582						
ANR	2554417	Symbol	pdev		2553582						
ANR	2554418	Symbol	strlen		2553582						
ANR	2554419	Symbol	* udev		2553582						
ANR	2554420	Symbol	upd -> int_a		2553582						
ANR	2554421	Symbol	udev -> upd_version . data		2553582						
ANR	2554422	Symbol	param_write_string		2553582						
ANR	2554423	Symbol	* * upd_choice		2553582						
ANR	2554424	Symbol	* * i		2553582						
ANR	2554425	Symbol	* upd_flags		2553582						
ANR	2554426	Symbol	name . persistent		2553582						
ANR	2554427	Symbol	upd_strings		2553582						
ANR	2554428	Symbol	upd_version		2553582						
ANR	2554429	Symbol	* upd -> float_a		2553582						
ANR	2554430	Symbol	upd		2553582						
ANR	2554431	Symbol	upd_int_a		2553582						
ANR	2554432	Symbol	* upd_string_a		2553582						
ANR	2554433	Symbol	param_write_null		2553582						
ANR	2554434	Symbol	upd -> int_a [ i ] . size		2553582						
ANR	2554435	Symbol	udev -> upd_version		2553582						
ANR	2554436	Symbol	param_write_name		2553582						
ANR	2554437	Symbol	countof		2553582						
ANR	2554438	Symbol	upd_choice		2553582						
ANR	2554439	Symbol	& udev -> upd_version		2553582						
ANR	2554440	Symbol	udev		2553582						
ANR	2554441	Symbol	udev -> upd_version . size		2553582						
ANR	2554442	Symbol	true		2553582						
ANR	2554443	Symbol	name		2553582						
ANR	2554444	Symbol	name . size		2553582						
ANR	2554445	Symbol	upd -> float_a		2553582						
ANR	2554446	Symbol	param_write_float_array		2553582						
ANR	2554447	Symbol	upd -> ints		2553582						
ANR	2554448	Symbol	* upd_ints		2553582						
ANR	2554449	Symbol	* upd_float_a		2553582						
ANR	2554450	Symbol	upd -> strings		2553582						
ANR	2554451	Symbol	error		2553582						
ANR	2554452	Symbol	param_write_string_array		2553582						
ANR	2554453	Symbol	* upd -> choice		2553582						
ANR	2554454	Symbol	upd -> flags		2553582						
ANR	2554455	Symbol	udev -> upd		2553582						
ANR	2554456	Symbol	param_write_bool		2553582						
ANR	2554457	Symbol	plist		2553582						
ANR	2554458	Symbol	* upd_choice		2553582						
ANR	2554459	Symbol	* upd		2553582						
ANR	2554460	Symbol	upd_flags		2553582						
ANR	2554461	Symbol	param_write_int_array		2553582						
ANR	2554462	Symbol	upd_string_a		2553582						
ANR	2554463	Symbol	name . data		2553582						
ANR	2554464	Symbol	value		2553582						
ANR	2554465	Symbol	param_write_int		2553582						
ANR	2554466	Symbol	* upd -> strings		2553582						
ANR	2554467	Symbol	udev -> memory		2553582						
ANR	2554468	Symbol	* * * upd		2553582						
ANR	2554469	Symbol	gdev_prn_get_params		2553582						
ANR	2554470	Symbol	i		2553582						
ANR	2554471	Symbol	upd -> choice		2553582						
ANR	2554472	Symbol	upd -> strings [ i ] . size		2553582						
ANR	2554473	Symbol	* * upd -> choice		2553582						
ANR	2554474	Symbol	upd_float_a		2553582						
ANR	2554475	Symbol	upd -> string_a [ i ] . size		2553582						
ANR	2554476	Symbol	upd -> string_a		2553582						
ANR	2554477	Symbol	* i		2553582						
ANR	2554478	Symbol	* upd -> ints		2553582						
ANR	2554479	Symbol	udev -> upd_version . persistent		2553582						
ANR	2554480	Symbol	* * upd		2553582						
ANR	2554481	Function	upd_put_params	1665:0:68227:86454							
ANR	2554482	FunctionDef	"upd_put_params (gx_device * pdev , gs_param_list * plist)"		2554481	0					
ANR	2554483	CompoundStatement		1667:0:68292:86454	2554481	0					
ANR	2554484	Statement	upd_device	1668:3:68297:68306	2554481	0	True				
ANR	2554485	Statement	*	1668:14:68308:68308	2554481	1	True				
ANR	2554486	Statement	const	1668:15:68309:68313	2554481	2	True				
ANR	2554487	ExpressionStatement	udev = ( upd_device * ) pdev	1668:26:68320:68352	2554481	3	True				
ANR	2554488	AssignmentExpression	udev = ( upd_device * ) pdev		2554481	0		=			
ANR	2554489	Identifier	udev		2554481	0					
ANR	2554490	CastExpression	( upd_device * ) pdev		2554481	1					
ANR	2554491	CastTarget	upd_device *		2554481	0					
ANR	2554492	Identifier	pdev		2554481	1					
ANR	2554493	IdentifierDeclStatement	upd_p upd = udev -> upd ;	1669:3:68357:68402	2554481	4	True				
ANR	2554494	IdentifierDecl	upd = udev -> upd		2554481	0					
ANR	2554495	IdentifierDeclType	upd_p		2554481	0					
ANR	2554496	Identifier	upd		2554481	1					
ANR	2554497	AssignmentExpression	upd = udev -> upd		2554481	2		=			
ANR	2554498	Identifier	upd		2554481	0					
ANR	2554499	PtrMemberAccess	udev -> upd		2554481	1					
ANR	2554500	Identifier	udev		2554481	0					
ANR	2554501	Identifier	upd		2554481	1					
ANR	2554502	IdentifierDeclStatement	"int error = 0 , code , i ;"	1670:3:68407:68452	2554481	5	True				
ANR	2554503	IdentifierDecl	error = 0		2554481	0					
ANR	2554504	IdentifierDeclType	int		2554481	0					
ANR	2554505	Identifier	error		2554481	1					
ANR	2554506	AssignmentExpression	error = 0		2554481	2		=			
ANR	2554507	Identifier	error		2554481	0					
ANR	2554508	PrimaryExpression	0		2554481	1					
ANR	2554509	IdentifierDecl	code		2554481	1					
ANR	2554510	IdentifierDeclType	int		2554481	0					
ANR	2554511	Identifier	code		2554481	1					
ANR	2554512	IdentifierDecl	i		2554481	2					
ANR	2554513	IdentifierDeclType	int		2554481	0					
ANR	2554514	Identifier	i		2554481	1					
ANR	2554515	IdentifierDeclStatement	float Margins [ 2 ] ;	1672:3:68458:68491	2554481	6	True				
ANR	2554516	IdentifierDecl	Margins [ 2 ]		2554481	0					
ANR	2554517	IdentifierDeclType	float [ 2 ]		2554481	0					
ANR	2554518	Identifier	Margins		2554481	1					
ANR	2554519	PrimaryExpression	2		2554481	2					
ANR	2554520	IdentifierDeclStatement	gx_device_color_info color_info ;	1673:3:68496:68529	2554481	7	True				
ANR	2554521	IdentifierDecl	color_info		2554481	0					
ANR	2554522	IdentifierDeclType	gx_device_color_info		2554481	0					
ANR	2554523	Identifier	color_info		2554481	1					
ANR	2554524	IdentifierDeclStatement	uint32_t flags = 0 ;	1674:3:68534:68573	2554481	8	True				
ANR	2554525	IdentifierDecl	flags = 0		2554481	0					
ANR	2554526	IdentifierDeclType	uint32_t		2554481	0					
ANR	2554527	Identifier	flags		2554481	1					
ANR	2554528	AssignmentExpression	flags = 0		2554481	2		=			
ANR	2554529	Identifier	flags		2554481	0					
ANR	2554530	PrimaryExpression	0		2554481	1					
ANR	2554531	IdentifierDeclStatement	int * choice = NULL ;	1675:3:68578:68618	2554481	9	True				
ANR	2554532	IdentifierDecl	* choice = NULL		2554481	0					
ANR	2554533	IdentifierDeclType	int *		2554481	0					
ANR	2554534	Identifier	choice		2554481	1					
ANR	2554535	AssignmentExpression	* choice = NULL		2554481	2		=			
ANR	2554536	Identifier	NULL		2554481	0					
ANR	2554537	Identifier	NULL		2554481	1					
ANR	2554538	IdentifierDeclStatement	int * ints = NULL ;	1676:3:68623:68663	2554481	10	True				
ANR	2554539	IdentifierDecl	* ints = NULL		2554481	0					
ANR	2554540	IdentifierDeclType	int *		2554481	0					
ANR	2554541	Identifier	ints		2554481	1					
ANR	2554542	AssignmentExpression	* ints = NULL		2554481	2		=			
ANR	2554543	Identifier	NULL		2554481	0					
ANR	2554544	Identifier	NULL		2554481	1					
ANR	2554545	IdentifierDeclStatement	gs_param_int_array * int_a = NULL ;	1677:3:68668:68708	2554481	11	True				
ANR	2554546	IdentifierDecl	* int_a = NULL		2554481	0					
ANR	2554547	IdentifierDeclType	gs_param_int_array *		2554481	0					
ANR	2554548	Identifier	int_a		2554481	1					
ANR	2554549	AssignmentExpression	* int_a = NULL		2554481	2		=			
ANR	2554550	Identifier	NULL		2554481	0					
ANR	2554551	Identifier	NULL		2554481	1					
ANR	2554552	IdentifierDeclStatement	gs_param_string * strings = NULL ;	1678:3:68713:68753	2554481	12	True				
ANR	2554553	IdentifierDecl	* strings = NULL		2554481	0					
ANR	2554554	IdentifierDeclType	gs_param_string *		2554481	0					
ANR	2554555	Identifier	strings		2554481	1					
ANR	2554556	AssignmentExpression	* strings = NULL		2554481	2		=			
ANR	2554557	Identifier	NULL		2554481	0					
ANR	2554558	Identifier	NULL		2554481	1					
ANR	2554559	IdentifierDeclStatement	gs_param_string_array * string_a = NULL ;	1679:3:68758:68798	2554481	13	True				
ANR	2554560	IdentifierDecl	* string_a = NULL		2554481	0					
ANR	2554561	IdentifierDeclType	gs_param_string_array *		2554481	0					
ANR	2554562	Identifier	string_a		2554481	1					
ANR	2554563	AssignmentExpression	* string_a = NULL		2554481	2		=			
ANR	2554564	Identifier	NULL		2554481	0					
ANR	2554565	Identifier	NULL		2554481	1					
ANR	2554566	IdentifierDeclStatement	"gs_param_float_array * float_a = NULL , mfa ;"	1680:3:68803:68848	2554481	14	True				
ANR	2554567	IdentifierDecl	* float_a = NULL		2554481	0					
ANR	2554568	IdentifierDeclType	gs_param_float_array *		2554481	0					
ANR	2554569	Identifier	float_a		2554481	1					
ANR	2554570	AssignmentExpression	* float_a = NULL		2554481	2		=			
ANR	2554571	Identifier	NULL		2554481	0					
ANR	2554572	Identifier	NULL		2554481	1					
ANR	2554573	IdentifierDecl	mfa		2554481	1					
ANR	2554574	IdentifierDeclType	gs_param_float_array		2554481	0					
ANR	2554575	Identifier	mfa		2554481	1					
ANR	2554576	Statement	define	1690:1:69152:69157	2554481	15	True				
ANR	2554577	Statement	UPD_PUT_FLAGS	1690:8:69159:69171	2554481	16	True				
ANR	2554578	Statement	0x0002	1690:28:69179:69184	2554481	17	True				
ANR	2554579	Statement	define	1691:1:69187:69192	2554481	18	True				
ANR	2554580	Statement	UPD_PUT_CHOICE	1691:8:69194:69207	2554481	19	True				
ANR	2554581	Statement	0x0004	1691:28:69214:69219	2554481	20	True				
ANR	2554582	Statement	define	1692:1:69222:69227	2554481	21	True				
ANR	2554583	Statement	UPD_PUT_INTS	1692:8:69229:69240	2554481	22	True				
ANR	2554584	Statement	0x0008	1692:28:69249:69254	2554481	23	True				
ANR	2554585	Statement	define	1693:1:69257:69262	2554481	24	True				
ANR	2554586	Statement	UPD_PUT_INT_A	1693:8:69264:69276	2554481	25	True				
ANR	2554587	Statement	0x0010	1693:28:69284:69289	2554481	26	True				
ANR	2554588	Statement	define	1694:1:69292:69297	2554481	27	True				
ANR	2554589	Statement	UPD_PUT_STRINGS	1694:8:69299:69313	2554481	28	True				
ANR	2554590	Statement	0x0020	1694:28:69319:69324	2554481	29	True				
ANR	2554591	Statement	define	1695:1:69327:69332	2554481	30	True				
ANR	2554592	Statement	UPD_PUT_STRING_A	1695:8:69334:69349	2554481	31	True				
ANR	2554593	Statement	0x0040	1695:28:69354:69359	2554481	32	True				
ANR	2554594	Statement	define	1696:1:69362:69367	2554481	33	True				
ANR	2554595	Statement	UPD_PUT_FLOAT_A	1696:8:69369:69383	2554481	34	True				
ANR	2554596	Statement	0x0080	1696:28:69389:69394	2554481	35	True				
ANR	2554597	Statement	define	1697:1:69397:69402	2554481	36	True				
ANR	2554598	Statement	UPD_PUT_CHANGEDSIZE	1697:8:69404:69422	2554481	37	True				
ANR	2554599	Statement	0x0100	1697:28:69424:69429	2554481	38	True				
ANR	2554600	ExpressionStatement	"errprintf ( udev -> memory , ""CALL: upd_put_params(0x%05lx,0x%05lx)\\n"" , ( long ) udev , ( long ) plist )"	1700:6:69472:69570	2554481	39	True				
ANR	2554601	CallExpression	"errprintf ( udev -> memory , ""CALL: upd_put_params(0x%05lx,0x%05lx)\\n"" , ( long ) udev , ( long ) plist )"		2554481	0					
ANR	2554602	Callee	errprintf		2554481	0					
ANR	2554603	Identifier	errprintf		2554481	0					
ANR	2554604	ArgumentList	udev -> memory		2554481	1					
ANR	2554605	Argument	udev -> memory		2554481	0					
ANR	2554606	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2554607	Identifier	udev		2554481	0					
ANR	2554608	Identifier	memory		2554481	1					
ANR	2554609	Argument	"""CALL: upd_put_params(0x%05lx,0x%05lx)\\n"""		2554481	1					
ANR	2554610	PrimaryExpression	"""CALL: upd_put_params(0x%05lx,0x%05lx)\\n"""		2554481	0					
ANR	2554611	Argument	( long ) udev		2554481	2					
ANR	2554612	CastExpression	( long ) udev		2554481	0					
ANR	2554613	CastTarget	long		2554481	0					
ANR	2554614	Identifier	udev		2554481	1					
ANR	2554615	Argument	( long ) plist		2554481	3					
ANR	2554616	CastExpression	( long ) plist		2554481	0					
ANR	2554617	CastTarget	long		2554481	0					
ANR	2554618	Identifier	plist		2554481	1					
ANR	2554619	IfStatement	if ( upd && ( B_OPEN & udev -> upd -> flags ) && ( NULL != udev -> file ) )		2554481	40					
ANR	2554620	Condition	upd && ( B_OPEN & udev -> upd -> flags ) && ( NULL != udev -> file )	1713:6:70086:70143	2554481	0	True				
ANR	2554621	AndExpression	upd && ( B_OPEN & udev -> upd -> flags ) && ( NULL != udev -> file )		2554481	0		&&			
ANR	2554622	Identifier	upd		2554481	0					
ANR	2554623	AndExpression	( B_OPEN & udev -> upd -> flags ) && ( NULL != udev -> file )		2554481	1		&&			
ANR	2554624	BitAndExpression	B_OPEN & udev -> upd -> flags		2554481	0		&			
ANR	2554625	Identifier	B_OPEN		2554481	0					
ANR	2554626	PtrMemberAccess	udev -> upd -> flags		2554481	1					
ANR	2554627	PtrMemberAccess	udev -> upd		2554481	0					
ANR	2554628	Identifier	udev		2554481	0					
ANR	2554629	Identifier	upd		2554481	1					
ANR	2554630	Identifier	flags		2554481	1					
ANR	2554631	EqualityExpression	NULL != udev -> file		2554481	1		!=			
ANR	2554632	Identifier	NULL		2554481	0					
ANR	2554633	PtrMemberAccess	udev -> file		2554481	1					
ANR	2554634	Identifier	udev		2554481	0					
ANR	2554635	Identifier	file		2554481	1					
ANR	2554636	CompoundStatement		49:6:1862:1904	2554481	1					
ANR	2554637	IdentifierDeclStatement	"gs_param_string fname = { NULL , 0 , false } ;"	1715:6:70155:70197	2554481	0	True				
ANR	2554638	IdentifierDecl	"fname = { NULL , 0 , false }"		2554481	0					
ANR	2554639	IdentifierDeclType	gs_param_string		2554481	0					
ANR	2554640	Identifier	fname		2554481	1					
ANR	2554641	AssignmentExpression	"fname = { NULL , 0 , false }"		2554481	2		=			
ANR	2554642	Identifier	fname		2554481	0					
ANR	2554643	InitializerList	NULL		2554481	1					
ANR	2554644	Identifier	NULL		2554481	0					
ANR	2554645	PrimaryExpression	0		2554481	1					
ANR	2554646	Identifier	false		2554481	2					
ANR	2554647	ExpressionStatement	"code = param_read_string ( plist , ""OutputFile"" , & fname )"	1717:6:70206:70257	2554481	1	True				
ANR	2554648	AssignmentExpression	"code = param_read_string ( plist , ""OutputFile"" , & fname )"		2554481	0		=			
ANR	2554649	Identifier	code		2554481	0					
ANR	2554650	CallExpression	"param_read_string ( plist , ""OutputFile"" , & fname )"		2554481	1					
ANR	2554651	Callee	param_read_string		2554481	0					
ANR	2554652	Identifier	param_read_string		2554481	0					
ANR	2554653	ArgumentList	plist		2554481	1					
ANR	2554654	Argument	plist		2554481	0					
ANR	2554655	Identifier	plist		2554481	0					
ANR	2554656	Argument	"""OutputFile"""		2554481	1					
ANR	2554657	PrimaryExpression	"""OutputFile"""		2554481	0					
ANR	2554658	Argument	& fname		2554481	2					
ANR	2554659	UnaryOperationExpression	& fname		2554481	0					
ANR	2554660	UnaryOperator	&		2554481	0					
ANR	2554661	Identifier	fname		2554481	1					
ANR	2554662	IfStatement	if ( ( 1 != code ) && ( 0 != code ) )		2554481	2					
ANR	2554663	Condition	( 1 != code ) && ( 0 != code )	1718:9:70268:70293	2554481	0	True				
ANR	2554664	AndExpression	( 1 != code ) && ( 0 != code )		2554481	0		&&			
ANR	2554665	EqualityExpression	1 != code		2554481	0		!=			
ANR	2554666	PrimaryExpression	1		2554481	0					
ANR	2554667	Identifier	code		2554481	1					
ANR	2554668	EqualityExpression	0 != code		2554481	1		!=			
ANR	2554669	PrimaryExpression	0		2554481	0					
ANR	2554670	Identifier	code		2554481	1					
ANR	2554671	CompoundStatement		52:37:2003:2003	2554481	1					
ANR	2554672	ExpressionStatement	"code = param_read_null ( plist , ""OutputFile"" )"	1719:9:70307:70349	2554481	0	True				
ANR	2554673	AssignmentExpression	"code = param_read_null ( plist , ""OutputFile"" )"		2554481	0		=			
ANR	2554674	Identifier	code		2554481	0					
ANR	2554675	CallExpression	"param_read_null ( plist , ""OutputFile"" )"		2554481	1					
ANR	2554676	Callee	param_read_null		2554481	0					
ANR	2554677	Identifier	param_read_null		2554481	0					
ANR	2554678	ArgumentList	plist		2554481	1					
ANR	2554679	Argument	plist		2554481	0					
ANR	2554680	Identifier	plist		2554481	0					
ANR	2554681	Argument	"""OutputFile"""		2554481	1					
ANR	2554682	PrimaryExpression	"""OutputFile"""		2554481	0					
ANR	2554683	IfStatement	if ( 0 == code )		2554481	1					
ANR	2554684	Condition	0 == code	1720:12:70363:70371	2554481	0	True				
ANR	2554685	EqualityExpression	0 == code		2554481	0		==			
ANR	2554686	PrimaryExpression	0		2554481	0					
ANR	2554687	Identifier	code		2554481	1					
ANR	2554688	CompoundStatement		54:23:2081:2081	2554481	1					
ANR	2554689	ExpressionStatement	"fname . data = ( const byte * ) """""	1721:12:70388:70418	2554481	0	True				
ANR	2554690	AssignmentExpression	"fname . data = ( const byte * ) """""		2554481	0		=			
ANR	2554691	MemberAccess	fname . data		2554481	0					
ANR	2554692	Identifier	fname		2554481	0					
ANR	2554693	Identifier	data		2554481	1					
ANR	2554694	CastExpression	"( const byte * ) """""		2554481	1					
ANR	2554695	CastTarget	const byte *		2554481	0					
ANR	2554696	PrimaryExpression	""""""		2554481	1					
ANR	2554697	ExpressionStatement	fname . size = 0	1722:12:70432:70446	2554481	1	True				
ANR	2554698	AssignmentExpression	fname . size = 0		2554481	0		=			
ANR	2554699	MemberAccess	fname . size		2554481	0					
ANR	2554700	Identifier	fname		2554481	0					
ANR	2554701	Identifier	size		2554481	1					
ANR	2554702	PrimaryExpression	0		2554481	1					
ANR	2554703	IfStatement	"if ( ( 0 == code ) && strncmp ( ( const char * ) fname . data , udev -> fname , fname . size ) )"		2554481	3					
ANR	2554704	Condition	"( 0 == code ) && strncmp ( ( const char * ) fname . data , udev -> fname , fname . size )"	1726:9:70477:70556	2554481	0	True				
ANR	2554705	AndExpression	"( 0 == code ) && strncmp ( ( const char * ) fname . data , udev -> fname , fname . size )"		2554481	0		&&			
ANR	2554706	EqualityExpression	0 == code		2554481	0		==			
ANR	2554707	PrimaryExpression	0		2554481	0					
ANR	2554708	Identifier	code		2554481	1					
ANR	2554709	CallExpression	"strncmp ( ( const char * ) fname . data , udev -> fname , fname . size )"		2554481	1					
ANR	2554710	Callee	strncmp		2554481	0					
ANR	2554711	Identifier	strncmp		2554481	0					
ANR	2554712	ArgumentList	( const char * ) fname . data		2554481	1					
ANR	2554713	Argument	( const char * ) fname . data		2554481	0					
ANR	2554714	CastExpression	( const char * ) fname . data		2554481	0					
ANR	2554715	CastTarget	const char *		2554481	0					
ANR	2554716	MemberAccess	fname . data		2554481	1					
ANR	2554717	Identifier	fname		2554481	0					
ANR	2554718	Identifier	data		2554481	1					
ANR	2554719	Argument	udev -> fname		2554481	1					
ANR	2554720	PtrMemberAccess	udev -> fname		2554481	0					
ANR	2554721	Identifier	udev		2554481	0					
ANR	2554722	Identifier	fname		2554481	1					
ANR	2554723	Argument	fname . size		2554481	2					
ANR	2554724	MemberAccess	fname . size		2554481	0					
ANR	2554725	Identifier	fname		2554481	0					
ANR	2554726	Identifier	size		2554481	1					
ANR	2554727	CompoundStatement		61:67:2266:2266	2554481	1					
ANR	2554728	IfStatement	if ( upd -> strings && 0 < udev -> upd -> strings [ S_CLOSE ] . size )		2554481	0					
ANR	2554729	Condition	upd -> strings && 0 < udev -> upd -> strings [ S_CLOSE ] . size	1728:12:70573:70624	2554481	0	True				
ANR	2554730	AndExpression	upd -> strings && 0 < udev -> upd -> strings [ S_CLOSE ] . size		2554481	0		&&			
ANR	2554731	PtrMemberAccess	upd -> strings		2554481	0					
ANR	2554732	Identifier	upd		2554481	0					
ANR	2554733	Identifier	strings		2554481	1					
ANR	2554734	RelationalExpression	0 < udev -> upd -> strings [ S_CLOSE ] . size		2554481	1		<			
ANR	2554735	PrimaryExpression	0		2554481	0					
ANR	2554736	MemberAccess	udev -> upd -> strings [ S_CLOSE ] . size		2554481	1					
ANR	2554737	ArrayIndexing	udev -> upd -> strings [ S_CLOSE ]		2554481	0					
ANR	2554738	PtrMemberAccess	udev -> upd -> strings		2554481	0					
ANR	2554739	PtrMemberAccess	udev -> upd		2554481	0					
ANR	2554740	Identifier	udev		2554481	0					
ANR	2554741	Identifier	upd		2554481	1					
ANR	2554742	Identifier	strings		2554481	1					
ANR	2554743	Identifier	S_CLOSE		2554481	1					
ANR	2554744	Identifier	size		2554481	1					
ANR	2554745	ExpressionStatement	"fwrite ( upd -> strings [ S_CLOSE ] . data , 1 , upd -> strings [ S_CLOSE ] . size , udev -> file )"	1729:12:70639:70733	2554481	1	True				
ANR	2554746	CallExpression	"fwrite ( upd -> strings [ S_CLOSE ] . data , 1 , upd -> strings [ S_CLOSE ] . size , udev -> file )"		2554481	0					
ANR	2554747	Callee	fwrite		2554481	0					
ANR	2554748	Identifier	fwrite		2554481	0					
ANR	2554749	ArgumentList	upd -> strings [ S_CLOSE ] . data		2554481	1					
ANR	2554750	Argument	upd -> strings [ S_CLOSE ] . data		2554481	0					
ANR	2554751	MemberAccess	upd -> strings [ S_CLOSE ] . data		2554481	0					
ANR	2554752	ArrayIndexing	upd -> strings [ S_CLOSE ]		2554481	0					
ANR	2554753	PtrMemberAccess	upd -> strings		2554481	0					
ANR	2554754	Identifier	upd		2554481	0					
ANR	2554755	Identifier	strings		2554481	1					
ANR	2554756	Identifier	S_CLOSE		2554481	1					
ANR	2554757	Identifier	data		2554481	1					
ANR	2554758	Argument	1		2554481	1					
ANR	2554759	PrimaryExpression	1		2554481	0					
ANR	2554760	Argument	upd -> strings [ S_CLOSE ] . size		2554481	2					
ANR	2554761	MemberAccess	upd -> strings [ S_CLOSE ] . size		2554481	0					
ANR	2554762	ArrayIndexing	upd -> strings [ S_CLOSE ]		2554481	0					
ANR	2554763	PtrMemberAccess	upd -> strings		2554481	0					
ANR	2554764	Identifier	upd		2554481	0					
ANR	2554765	Identifier	strings		2554481	1					
ANR	2554766	Identifier	S_CLOSE		2554481	1					
ANR	2554767	Identifier	size		2554481	1					
ANR	2554768	Argument	udev -> file		2554481	3					
ANR	2554769	PtrMemberAccess	udev -> file		2554481	0					
ANR	2554770	Identifier	udev		2554481	0					
ANR	2554771	Identifier	file		2554481	1					
ANR	2554772	ExpressionStatement	upd -> flags &= ~B_OPEN	1732:9:70745:70766	2554481	1	True				
ANR	2554773	AssignmentExpression	upd -> flags &= ~B_OPEN		2554481	0		&=			
ANR	2554774	PtrMemberAccess	upd -> flags		2554481	0					
ANR	2554775	Identifier	upd		2554481	0					
ANR	2554776	Identifier	flags		2554481	1					
ANR	2554777	Identifier	~B_OPEN		2554481	1					
ANR	2554778	Statement	define	1752:1:71603:71608	2554481	41	True				
ANR	2554779	Statement	UPD_PARAM_READ	1752:8:71610:71623	2554481	42	True				
ANR	2554780	Statement	(	1752:22:71624:71624	2554481	43	True				
ANR	2554781	Statement	Param_read	1752:23:71625:71634	2554481	44	True				
ANR	2554782	Statement	","	1752:33:71635:71635	2554481	45	True				
ANR	2554783	Statement	Name	1752:34:71636:71639	2554481	46	True				
ANR	2554784	Statement	","	1752:38:71640:71640	2554481	47	True				
ANR	2554785	Statement	Object	1752:39:71641:71646	2554481	48	True				
ANR	2554786	Statement	","	1752:45:71647:71647	2554481	49	True				
ANR	2554787	Statement	Mem	1752:46:71648:71650	2554481	50	True				
ANR	2554788	Statement	)	1752:49:71651:71651	2554481	51	True				
ANR	2554789	ExpressionStatement	"code = Param_read ( plist , Name , & Object )"	1753:3:71660:71697	2554481	52	True				
ANR	2554790	AssignmentExpression	"code = Param_read ( plist , Name , & Object )"		2554481	0		=			
ANR	2554791	Identifier	code		2554481	0					
ANR	2554792	CallExpression	"Param_read ( plist , Name , & Object )"		2554481	1					
ANR	2554793	Callee	Param_read		2554481	0					
ANR	2554794	Identifier	Param_read		2554481	0					
ANR	2554795	ArgumentList	plist		2554481	1					
ANR	2554796	Argument	plist		2554481	0					
ANR	2554797	Identifier	plist		2554481	0					
ANR	2554798	Argument	Name		2554481	1					
ANR	2554799	Identifier	Name		2554481	0					
ANR	2554800	Argument	& Object		2554481	2					
ANR	2554801	UnaryOperationExpression	& Object		2554481	0					
ANR	2554802	UnaryOperator	&		2554481	0					
ANR	2554803	Identifier	Object		2554481	1					
ANR	2554804	IfStatement	if ( 0 > code )		2554481	53					
ANR	2554805	Condition	0 > code	1754:6:71718:71725	2554481	0	True				
ANR	2554806	RelationalExpression	0 > code		2554481	0		>			
ANR	2554807	PrimaryExpression	0		2554481	0					
ANR	2554808	Identifier	code		2554481	1					
ANR	2554809	CompoundStatement		88:16:3435:3435	2554481	1					
ANR	2554810	ExpressionStatement	"code = param_read_null ( plist , Name )"	1755:6:71773:71807	2554481	0	True				
ANR	2554811	AssignmentExpression	"code = param_read_null ( plist , Name )"		2554481	0		=			
ANR	2554812	Identifier	code		2554481	0					
ANR	2554813	CallExpression	"param_read_null ( plist , Name )"		2554481	1					
ANR	2554814	Callee	param_read_null		2554481	0					
ANR	2554815	Identifier	param_read_null		2554481	0					
ANR	2554816	ArgumentList	plist		2554481	1					
ANR	2554817	Argument	plist		2554481	0					
ANR	2554818	Identifier	plist		2554481	0					
ANR	2554819	Argument	Name		2554481	1					
ANR	2554820	Identifier	Name		2554481	0					
ANR	2554821	IfStatement	if ( 0 == code )		2554481	1					
ANR	2554822	Condition	0 == code	1756:9:71831:71839	2554481	0	True				
ANR	2554823	EqualityExpression	0 == code		2554481	0		==			
ANR	2554824	PrimaryExpression	0		2554481	0					
ANR	2554825	Identifier	code		2554481	1					
ANR	2554826	ExpressionStatement	"memset ( & Object , 0 , sizeof ( Object ) )"	1756:20:71842:71874	2554481	1	True				
ANR	2554827	CallExpression	"memset ( & Object , 0 , sizeof ( Object ) )"		2554481	0					
ANR	2554828	Callee	memset		2554481	0					
ANR	2554829	Identifier	memset		2554481	0					
ANR	2554830	ArgumentList	& Object		2554481	1					
ANR	2554831	Argument	& Object		2554481	0					
ANR	2554832	UnaryOperationExpression	& Object		2554481	0					
ANR	2554833	UnaryOperator	&		2554481	0					
ANR	2554834	Identifier	Object		2554481	1					
ANR	2554835	Argument	0		2554481	1					
ANR	2554836	PrimaryExpression	0		2554481	0					
ANR	2554837	Argument	sizeof ( Object )		2554481	2					
ANR	2554838	SizeofExpression	sizeof ( Object )		2554481	0					
ANR	2554839	Sizeof	sizeof		2554481	0					
ANR	2554840	SizeofOperand	Object		2554481	1					
ANR	2554841	IfStatement	if ( ! code )		2554481	54					
ANR	2554842	Condition	! code	1758:6:71938:71942	2554481	0	True				
ANR	2554843	UnaryOperationExpression	! code		2554481	0					
ANR	2554844	UnaryOperator	!		2554481	0					
ANR	2554845	Identifier	code		2554481	1					
ANR	2554846	ExpressionStatement	"errprintf ( Mem , ""upd_put_params: retrieved parameter \\""%s\\""\\n"" , Name )"	1758:13:71945:72053	2554481	1	True				
ANR	2554847	CallExpression	"errprintf ( Mem , ""upd_put_params: retrieved parameter \\""%s\\""\\n"" , Name )"		2554481	0					
ANR	2554848	Callee	errprintf		2554481	0					
ANR	2554849	Identifier	errprintf		2554481	0					
ANR	2554850	ArgumentList	Mem		2554481	1					
ANR	2554851	Argument	Mem		2554481	0					
ANR	2554852	Identifier	Mem		2554481	0					
ANR	2554853	Argument	"""upd_put_params: retrieved parameter \\""%s\\""\\n"""		2554481	1					
ANR	2554854	PrimaryExpression	"""upd_put_params: retrieved parameter \\""%s\\""\\n"""		2554481	0					
ANR	2554855	Argument	Name		2554481	2					
ANR	2554856	Identifier	Name		2554481	0					
ANR	2554857	IfStatement	if ( 0 > code )		2554481	55					
ANR	2554858	Condition	0 > code	1761:6:72103:72110	2554481	0	True				
ANR	2554859	RelationalExpression	0 > code		2554481	0		>			
ANR	2554860	PrimaryExpression	0		2554481	0					
ANR	2554861	Identifier	code		2554481	1					
ANR	2554862	CompoundStatement		95:16:3820:3820	2554481	1					
ANR	2554863	ExpressionStatement	"param_signal_error ( plist , Name , code )"	1762:6:72158:72193	2554481	0	True				
ANR	2554864	CallExpression	"param_signal_error ( plist , Name , code )"		2554481	0					
ANR	2554865	Callee	param_signal_error		2554481	0					
ANR	2554866	Identifier	param_signal_error		2554481	0					
ANR	2554867	ArgumentList	plist		2554481	1					
ANR	2554868	Argument	plist		2554481	0					
ANR	2554869	Identifier	plist		2554481	0					
ANR	2554870	Argument	Name		2554481	1					
ANR	2554871	Identifier	Name		2554481	0					
ANR	2554872	Argument	code		2554481	2					
ANR	2554873	Identifier	code		2554481	0					
ANR	2554874	IfStatement	if ( error > code )		2554481	1					
ANR	2554875	Condition	error > code	1763:9:72216:72227	2554481	0	True				
ANR	2554876	RelationalExpression	error > code		2554481	0		>			
ANR	2554877	Identifier	error		2554481	0					
ANR	2554878	Identifier	code		2554481	1					
ANR	2554879	ExpressionStatement	error = code	1763:23:72230:72242	2554481	1	True				
ANR	2554880	AssignmentExpression	error = code		2554481	0		=			
ANR	2554881	Identifier	error		2554481	0					
ANR	2554882	Identifier	code		2554481	1					
ANR	2554883	Statement	UPD_PARAM_READ	1778:3:72784:72797	2554481	56	True				
ANR	2554884	Statement	(	1778:17:72798:72798	2554481	57	True				
ANR	2554885	Statement	param_read_string	1778:18:72799:72815	2554481	58	True				
ANR	2554886	Statement	","	1778:35:72816:72816	2554481	59	True				
ANR	2554887	Statement	upd_version	1778:36:72817:72827	2554481	60	True				
ANR	2554888	Statement	","	1778:47:72828:72828	2554481	61	True				
ANR	2554889	Statement	udev	1778:48:72829:72832	2554481	62	True				
ANR	2554890	Statement	->	1778:52:72833:72834	2554481	63	True				
ANR	2554891	Statement	upd_version	1778:54:72835:72845	2554481	64	True				
ANR	2554892	Statement	","	1778:65:72846:72846	2554481	65	True				
ANR	2554893	Statement	udev	1778:66:72847:72850	2554481	66	True				
ANR	2554894	Statement	->	1778:70:72851:72852	2554481	67	True				
ANR	2554895	Statement	memory	1778:72:72853:72858	2554481	68	True				
ANR	2554896	Statement	)	1778:78:72859:72859	2554481	69	True				
ANR	2554897	ExpressionStatement	Margins [ 0 ] = udev -> Margins [ 0 ]	1786:15:73097:73126	2554481	70	True				
ANR	2554898	AssignmentExpression	Margins [ 0 ] = udev -> Margins [ 0 ]		2554481	0		=			
ANR	2554899	ArrayIndexing	Margins [ 0 ]		2554481	0					
ANR	2554900	Identifier	Margins		2554481	0					
ANR	2554901	PrimaryExpression	0		2554481	1					
ANR	2554902	ArrayIndexing	udev -> Margins [ 0 ]		2554481	1					
ANR	2554903	PtrMemberAccess	udev -> Margins		2554481	0					
ANR	2554904	Identifier	udev		2554481	0					
ANR	2554905	Identifier	Margins		2554481	1					
ANR	2554906	PrimaryExpression	0		2554481	1					
ANR	2554907	ExpressionStatement	Margins [ 1 ] = udev -> Margins [ 1 ]	1787:15:73143:73172	2554481	71	True				
ANR	2554908	AssignmentExpression	Margins [ 1 ] = udev -> Margins [ 1 ]		2554481	0		=			
ANR	2554909	ArrayIndexing	Margins [ 1 ]		2554481	0					
ANR	2554910	Identifier	Margins		2554481	0					
ANR	2554911	PrimaryExpression	1		2554481	1					
ANR	2554912	ArrayIndexing	udev -> Margins [ 1 ]		2554481	1					
ANR	2554913	PtrMemberAccess	udev -> Margins		2554481	0					
ANR	2554914	Identifier	udev		2554481	0					
ANR	2554915	Identifier	Margins		2554481	1					
ANR	2554916	PrimaryExpression	1		2554481	1					
ANR	2554917	ExpressionStatement	color_info = udev -> color_info	1789:3:73178:73207	2554481	72	True				
ANR	2554918	AssignmentExpression	color_info = udev -> color_info		2554481	0		=			
ANR	2554919	Identifier	color_info		2554481	0					
ANR	2554920	PtrMemberAccess	udev -> color_info		2554481	1					
ANR	2554921	Identifier	udev		2554481	0					
ANR	2554922	Identifier	color_info		2554481	1					
ANR	2554923	IfStatement	if ( upd )		2554481	73					
ANR	2554924	Condition	upd	1790:6:73215:73217	2554481	0	True				
ANR	2554925	Identifier	upd		2554481	0					
ANR	2554926	CompoundStatement		124:11:4927:4927	2554481	1					
ANR	2554927	ExpressionStatement	flags = upd -> flags	1791:5:73227:73245	2554481	0	True				
ANR	2554928	AssignmentExpression	flags = upd -> flags		2554481	0		=			
ANR	2554929	Identifier	flags		2554481	0					
ANR	2554930	PtrMemberAccess	upd -> flags		2554481	1					
ANR	2554931	Identifier	upd		2554481	0					
ANR	2554932	Identifier	flags		2554481	1					
ANR	2554933	ExpressionStatement	"UPD_MM_CPY_ARRAY ( udev -> memory , choice , upd -> choice , countof ( upd_choice ) , UPD_MM_CPY_VALUE )"	1792:5:73252:73352	2554481	1	True				
ANR	2554934	CallExpression	"UPD_MM_CPY_ARRAY ( udev -> memory , choice , upd -> choice , countof ( upd_choice ) , UPD_MM_CPY_VALUE )"		2554481	0					
ANR	2554935	Callee	UPD_MM_CPY_ARRAY		2554481	0					
ANR	2554936	Identifier	UPD_MM_CPY_ARRAY		2554481	0					
ANR	2554937	ArgumentList	udev -> memory		2554481	1					
ANR	2554938	Argument	udev -> memory		2554481	0					
ANR	2554939	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2554940	Identifier	udev		2554481	0					
ANR	2554941	Identifier	memory		2554481	1					
ANR	2554942	Argument	choice		2554481	1					
ANR	2554943	Identifier	choice		2554481	0					
ANR	2554944	Argument	upd -> choice		2554481	2					
ANR	2554945	PtrMemberAccess	upd -> choice		2554481	0					
ANR	2554946	Identifier	upd		2554481	0					
ANR	2554947	Identifier	choice		2554481	1					
ANR	2554948	Argument	countof ( upd_choice )		2554481	3					
ANR	2554949	CallExpression	countof ( upd_choice )		2554481	0					
ANR	2554950	Callee	countof		2554481	0					
ANR	2554951	Identifier	countof		2554481	0					
ANR	2554952	ArgumentList	upd_choice		2554481	1					
ANR	2554953	Argument	upd_choice		2554481	0					
ANR	2554954	Identifier	upd_choice		2554481	0					
ANR	2554955	Argument	UPD_MM_CPY_VALUE		2554481	4					
ANR	2554956	Identifier	UPD_MM_CPY_VALUE		2554481	0					
ANR	2554957	ExpressionStatement	"UPD_MM_CPY_ARRAY ( udev -> memory , ints , upd -> ints , countof ( upd_ints ) , UPD_MM_CPY_VALUE )"	1794:5:73359:73457	2554481	2	True				
ANR	2554958	CallExpression	"UPD_MM_CPY_ARRAY ( udev -> memory , ints , upd -> ints , countof ( upd_ints ) , UPD_MM_CPY_VALUE )"		2554481	0					
ANR	2554959	Callee	UPD_MM_CPY_ARRAY		2554481	0					
ANR	2554960	Identifier	UPD_MM_CPY_ARRAY		2554481	0					
ANR	2554961	ArgumentList	udev -> memory		2554481	1					
ANR	2554962	Argument	udev -> memory		2554481	0					
ANR	2554963	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2554964	Identifier	udev		2554481	0					
ANR	2554965	Identifier	memory		2554481	1					
ANR	2554966	Argument	ints		2554481	1					
ANR	2554967	Identifier	ints		2554481	0					
ANR	2554968	Argument	upd -> ints		2554481	2					
ANR	2554969	PtrMemberAccess	upd -> ints		2554481	0					
ANR	2554970	Identifier	upd		2554481	0					
ANR	2554971	Identifier	ints		2554481	1					
ANR	2554972	Argument	countof ( upd_ints )		2554481	3					
ANR	2554973	CallExpression	countof ( upd_ints )		2554481	0					
ANR	2554974	Callee	countof		2554481	0					
ANR	2554975	Identifier	countof		2554481	0					
ANR	2554976	ArgumentList	upd_ints		2554481	1					
ANR	2554977	Argument	upd_ints		2554481	0					
ANR	2554978	Identifier	upd_ints		2554481	0					
ANR	2554979	Argument	UPD_MM_CPY_VALUE		2554481	4					
ANR	2554980	Identifier	UPD_MM_CPY_VALUE		2554481	0					
ANR	2554981	ExpressionStatement	"UPD_MM_CPY_ARRAY ( udev -> memory , int_a , upd -> int_a , countof ( upd_int_a ) , UPD_MM_CPY_PARAM )"	1796:5:73464:73563	2554481	3	True				
ANR	2554982	CallExpression	"UPD_MM_CPY_ARRAY ( udev -> memory , int_a , upd -> int_a , countof ( upd_int_a ) , UPD_MM_CPY_PARAM )"		2554481	0					
ANR	2554983	Callee	UPD_MM_CPY_ARRAY		2554481	0					
ANR	2554984	Identifier	UPD_MM_CPY_ARRAY		2554481	0					
ANR	2554985	ArgumentList	udev -> memory		2554481	1					
ANR	2554986	Argument	udev -> memory		2554481	0					
ANR	2554987	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2554988	Identifier	udev		2554481	0					
ANR	2554989	Identifier	memory		2554481	1					
ANR	2554990	Argument	int_a		2554481	1					
ANR	2554991	Identifier	int_a		2554481	0					
ANR	2554992	Argument	upd -> int_a		2554481	2					
ANR	2554993	PtrMemberAccess	upd -> int_a		2554481	0					
ANR	2554994	Identifier	upd		2554481	0					
ANR	2554995	Identifier	int_a		2554481	1					
ANR	2554996	Argument	countof ( upd_int_a )		2554481	3					
ANR	2554997	CallExpression	countof ( upd_int_a )		2554481	0					
ANR	2554998	Callee	countof		2554481	0					
ANR	2554999	Identifier	countof		2554481	0					
ANR	2555000	ArgumentList	upd_int_a		2554481	1					
ANR	2555001	Argument	upd_int_a		2554481	0					
ANR	2555002	Identifier	upd_int_a		2554481	0					
ANR	2555003	Argument	UPD_MM_CPY_PARAM		2554481	4					
ANR	2555004	Identifier	UPD_MM_CPY_PARAM		2554481	0					
ANR	2555005	ExpressionStatement	"UPD_MM_CPY_ARRAY ( udev -> memory , strings , upd -> strings , countof ( upd_strings ) , UPD_MM_CPY_PARAM )"	1798:5:73570:73671	2554481	4	True				
ANR	2555006	CallExpression	"UPD_MM_CPY_ARRAY ( udev -> memory , strings , upd -> strings , countof ( upd_strings ) , UPD_MM_CPY_PARAM )"		2554481	0					
ANR	2555007	Callee	UPD_MM_CPY_ARRAY		2554481	0					
ANR	2555008	Identifier	UPD_MM_CPY_ARRAY		2554481	0					
ANR	2555009	ArgumentList	udev -> memory		2554481	1					
ANR	2555010	Argument	udev -> memory		2554481	0					
ANR	2555011	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2555012	Identifier	udev		2554481	0					
ANR	2555013	Identifier	memory		2554481	1					
ANR	2555014	Argument	strings		2554481	1					
ANR	2555015	Identifier	strings		2554481	0					
ANR	2555016	Argument	upd -> strings		2554481	2					
ANR	2555017	PtrMemberAccess	upd -> strings		2554481	0					
ANR	2555018	Identifier	upd		2554481	0					
ANR	2555019	Identifier	strings		2554481	1					
ANR	2555020	Argument	countof ( upd_strings )		2554481	3					
ANR	2555021	CallExpression	countof ( upd_strings )		2554481	0					
ANR	2555022	Callee	countof		2554481	0					
ANR	2555023	Identifier	countof		2554481	0					
ANR	2555024	ArgumentList	upd_strings		2554481	1					
ANR	2555025	Argument	upd_strings		2554481	0					
ANR	2555026	Identifier	upd_strings		2554481	0					
ANR	2555027	Argument	UPD_MM_CPY_PARAM		2554481	4					
ANR	2555028	Identifier	UPD_MM_CPY_PARAM		2554481	0					
ANR	2555029	ExpressionStatement	"UPD_MM_CPY_ARRAY ( udev -> memory , string_a , upd -> string_a , countof ( upd_string_a ) , UPD_MM_CPY_APARAM )"	1800:5:73678:73781	2554481	5	True				
ANR	2555030	CallExpression	"UPD_MM_CPY_ARRAY ( udev -> memory , string_a , upd -> string_a , countof ( upd_string_a ) , UPD_MM_CPY_APARAM )"		2554481	0					
ANR	2555031	Callee	UPD_MM_CPY_ARRAY		2554481	0					
ANR	2555032	Identifier	UPD_MM_CPY_ARRAY		2554481	0					
ANR	2555033	ArgumentList	udev -> memory		2554481	1					
ANR	2555034	Argument	udev -> memory		2554481	0					
ANR	2555035	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2555036	Identifier	udev		2554481	0					
ANR	2555037	Identifier	memory		2554481	1					
ANR	2555038	Argument	string_a		2554481	1					
ANR	2555039	Identifier	string_a		2554481	0					
ANR	2555040	Argument	upd -> string_a		2554481	2					
ANR	2555041	PtrMemberAccess	upd -> string_a		2554481	0					
ANR	2555042	Identifier	upd		2554481	0					
ANR	2555043	Identifier	string_a		2554481	1					
ANR	2555044	Argument	countof ( upd_string_a )		2554481	3					
ANR	2555045	CallExpression	countof ( upd_string_a )		2554481	0					
ANR	2555046	Callee	countof		2554481	0					
ANR	2555047	Identifier	countof		2554481	0					
ANR	2555048	ArgumentList	upd_string_a		2554481	1					
ANR	2555049	Argument	upd_string_a		2554481	0					
ANR	2555050	Identifier	upd_string_a		2554481	0					
ANR	2555051	Argument	UPD_MM_CPY_APARAM		2554481	4					
ANR	2555052	Identifier	UPD_MM_CPY_APARAM		2554481	0					
ANR	2555053	ExpressionStatement	"UPD_MM_CPY_ARRAY ( udev -> memory , float_a , upd -> float_a , countof ( upd_float_a ) , UPD_MM_CPY_PARAM )"	1802:5:73788:73889	2554481	6	True				
ANR	2555054	CallExpression	"UPD_MM_CPY_ARRAY ( udev -> memory , float_a , upd -> float_a , countof ( upd_float_a ) , UPD_MM_CPY_PARAM )"		2554481	0					
ANR	2555055	Callee	UPD_MM_CPY_ARRAY		2554481	0					
ANR	2555056	Identifier	UPD_MM_CPY_ARRAY		2554481	0					
ANR	2555057	ArgumentList	udev -> memory		2554481	1					
ANR	2555058	Argument	udev -> memory		2554481	0					
ANR	2555059	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2555060	Identifier	udev		2554481	0					
ANR	2555061	Identifier	memory		2554481	1					
ANR	2555062	Argument	float_a		2554481	1					
ANR	2555063	Identifier	float_a		2554481	0					
ANR	2555064	Argument	upd -> float_a		2554481	2					
ANR	2555065	PtrMemberAccess	upd -> float_a		2554481	0					
ANR	2555066	Identifier	upd		2554481	0					
ANR	2555067	Identifier	float_a		2554481	1					
ANR	2555068	Argument	countof ( upd_float_a )		2554481	3					
ANR	2555069	CallExpression	countof ( upd_float_a )		2554481	0					
ANR	2555070	Callee	countof		2554481	0					
ANR	2555071	Identifier	countof		2554481	0					
ANR	2555072	ArgumentList	upd_float_a		2554481	1					
ANR	2555073	Argument	upd_float_a		2554481	0					
ANR	2555074	Identifier	upd_float_a		2554481	0					
ANR	2555075	Argument	UPD_MM_CPY_PARAM		2554481	4					
ANR	2555076	Identifier	UPD_MM_CPY_PARAM		2554481	0					
ANR	2555077	ElseStatement	else		2554481	0					
ANR	2555078	CompoundStatement		138:10:5608:5608	2554481	0					
ANR	2555079	ExpressionStatement	flags = 0	1805:5:73908:73917	2554481	0	True				
ANR	2555080	AssignmentExpression	flags = 0		2554481	0		=			
ANR	2555081	Identifier	flags		2554481	0					
ANR	2555082	PrimaryExpression	0		2554481	1					
ANR	2555083	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , choice , countof ( upd_choice ) )"	1806:5:73924:73984	2554481	1	True				
ANR	2555084	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , choice , countof ( upd_choice ) )"		2554481	0					
ANR	2555085	Callee	UPD_MM_GET_ARRAY		2554481	0					
ANR	2555086	Identifier	UPD_MM_GET_ARRAY		2554481	0					
ANR	2555087	ArgumentList	udev -> memory		2554481	1					
ANR	2555088	Argument	udev -> memory		2554481	0					
ANR	2555089	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2555090	Identifier	udev		2554481	0					
ANR	2555091	Identifier	memory		2554481	1					
ANR	2555092	Argument	choice		2554481	1					
ANR	2555093	Identifier	choice		2554481	0					
ANR	2555094	Argument	countof ( upd_choice )		2554481	2					
ANR	2555095	CallExpression	countof ( upd_choice )		2554481	0					
ANR	2555096	Callee	countof		2554481	0					
ANR	2555097	Identifier	countof		2554481	0					
ANR	2555098	ArgumentList	upd_choice		2554481	1					
ANR	2555099	Argument	upd_choice		2554481	0					
ANR	2555100	Identifier	upd_choice		2554481	0					
ANR	2555101	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , ints , countof ( upd_ints ) )"	1807:5:73991:74049	2554481	2	True				
ANR	2555102	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , ints , countof ( upd_ints ) )"		2554481	0					
ANR	2555103	Callee	UPD_MM_GET_ARRAY		2554481	0					
ANR	2555104	Identifier	UPD_MM_GET_ARRAY		2554481	0					
ANR	2555105	ArgumentList	udev -> memory		2554481	1					
ANR	2555106	Argument	udev -> memory		2554481	0					
ANR	2555107	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2555108	Identifier	udev		2554481	0					
ANR	2555109	Identifier	memory		2554481	1					
ANR	2555110	Argument	ints		2554481	1					
ANR	2555111	Identifier	ints		2554481	0					
ANR	2555112	Argument	countof ( upd_ints )		2554481	2					
ANR	2555113	CallExpression	countof ( upd_ints )		2554481	0					
ANR	2555114	Callee	countof		2554481	0					
ANR	2555115	Identifier	countof		2554481	0					
ANR	2555116	ArgumentList	upd_ints		2554481	1					
ANR	2555117	Argument	upd_ints		2554481	0					
ANR	2555118	Identifier	upd_ints		2554481	0					
ANR	2555119	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , int_a , countof ( upd_int_a ) )"	1808:5:74056:74115	2554481	3	True				
ANR	2555120	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , int_a , countof ( upd_int_a ) )"		2554481	0					
ANR	2555121	Callee	UPD_MM_GET_ARRAY		2554481	0					
ANR	2555122	Identifier	UPD_MM_GET_ARRAY		2554481	0					
ANR	2555123	ArgumentList	udev -> memory		2554481	1					
ANR	2555124	Argument	udev -> memory		2554481	0					
ANR	2555125	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2555126	Identifier	udev		2554481	0					
ANR	2555127	Identifier	memory		2554481	1					
ANR	2555128	Argument	int_a		2554481	1					
ANR	2555129	Identifier	int_a		2554481	0					
ANR	2555130	Argument	countof ( upd_int_a )		2554481	2					
ANR	2555131	CallExpression	countof ( upd_int_a )		2554481	0					
ANR	2555132	Callee	countof		2554481	0					
ANR	2555133	Identifier	countof		2554481	0					
ANR	2555134	ArgumentList	upd_int_a		2554481	1					
ANR	2555135	Argument	upd_int_a		2554481	0					
ANR	2555136	Identifier	upd_int_a		2554481	0					
ANR	2555137	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , strings , countof ( upd_strings ) )"	1809:5:74122:74183	2554481	4	True				
ANR	2555138	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , strings , countof ( upd_strings ) )"		2554481	0					
ANR	2555139	Callee	UPD_MM_GET_ARRAY		2554481	0					
ANR	2555140	Identifier	UPD_MM_GET_ARRAY		2554481	0					
ANR	2555141	ArgumentList	udev -> memory		2554481	1					
ANR	2555142	Argument	udev -> memory		2554481	0					
ANR	2555143	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2555144	Identifier	udev		2554481	0					
ANR	2555145	Identifier	memory		2554481	1					
ANR	2555146	Argument	strings		2554481	1					
ANR	2555147	Identifier	strings		2554481	0					
ANR	2555148	Argument	countof ( upd_strings )		2554481	2					
ANR	2555149	CallExpression	countof ( upd_strings )		2554481	0					
ANR	2555150	Callee	countof		2554481	0					
ANR	2555151	Identifier	countof		2554481	0					
ANR	2555152	ArgumentList	upd_strings		2554481	1					
ANR	2555153	Argument	upd_strings		2554481	0					
ANR	2555154	Identifier	upd_strings		2554481	0					
ANR	2555155	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , string_a , countof ( upd_string_a ) )"	1810:5:74190:74252	2554481	5	True				
ANR	2555156	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , string_a , countof ( upd_string_a ) )"		2554481	0					
ANR	2555157	Callee	UPD_MM_GET_ARRAY		2554481	0					
ANR	2555158	Identifier	UPD_MM_GET_ARRAY		2554481	0					
ANR	2555159	ArgumentList	udev -> memory		2554481	1					
ANR	2555160	Argument	udev -> memory		2554481	0					
ANR	2555161	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2555162	Identifier	udev		2554481	0					
ANR	2555163	Identifier	memory		2554481	1					
ANR	2555164	Argument	string_a		2554481	1					
ANR	2555165	Identifier	string_a		2554481	0					
ANR	2555166	Argument	countof ( upd_string_a )		2554481	2					
ANR	2555167	CallExpression	countof ( upd_string_a )		2554481	0					
ANR	2555168	Callee	countof		2554481	0					
ANR	2555169	Identifier	countof		2554481	0					
ANR	2555170	ArgumentList	upd_string_a		2554481	1					
ANR	2555171	Argument	upd_string_a		2554481	0					
ANR	2555172	Identifier	upd_string_a		2554481	0					
ANR	2555173	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , float_a , countof ( upd_float_a ) )"	1811:5:74259:74320	2554481	6	True				
ANR	2555174	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , float_a , countof ( upd_float_a ) )"		2554481	0					
ANR	2555175	Callee	UPD_MM_GET_ARRAY		2554481	0					
ANR	2555176	Identifier	UPD_MM_GET_ARRAY		2554481	0					
ANR	2555177	ArgumentList	udev -> memory		2554481	1					
ANR	2555178	Argument	udev -> memory		2554481	0					
ANR	2555179	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2555180	Identifier	udev		2554481	0					
ANR	2555181	Identifier	memory		2554481	1					
ANR	2555182	Argument	float_a		2554481	1					
ANR	2555183	Identifier	float_a		2554481	0					
ANR	2555184	Argument	countof ( upd_float_a )		2554481	2					
ANR	2555185	CallExpression	countof ( upd_float_a )		2554481	0					
ANR	2555186	Callee	countof		2554481	0					
ANR	2555187	Identifier	countof		2554481	0					
ANR	2555188	ArgumentList	upd_float_a		2554481	1					
ANR	2555189	Argument	upd_float_a		2554481	0					
ANR	2555190	Identifier	upd_float_a		2554481	0					
ANR	2555191	ForStatement	for ( i = 0 ; countof ( upd_choice ) > i ; ++ i )		2554481	74					
ANR	2555192	ForInit	i = 0 ;	1815:7:74370:74375	2554481	0	True				
ANR	2555193	AssignmentExpression	i = 0		2554481	0		=			
ANR	2555194	Identifier	i		2554481	0					
ANR	2555195	PrimaryExpression	0		2554481	1					
ANR	2555196	Condition	countof ( upd_choice ) > i	1815:14:74377:74399	2554481	1	True				
ANR	2555197	RelationalExpression	countof ( upd_choice ) > i		2554481	0		>			
ANR	2555198	CallExpression	countof ( upd_choice )		2554481	0					
ANR	2555199	Callee	countof		2554481	0					
ANR	2555200	Identifier	countof		2554481	0					
ANR	2555201	ArgumentList	upd_choice		2554481	1					
ANR	2555202	Argument	upd_choice		2554481	0					
ANR	2555203	Identifier	upd_choice		2554481	0					
ANR	2555204	Identifier	i		2554481	1					
ANR	2555205	UnaryExpression	++ i	1815:39:74402:74404	2554481	2	True				
ANR	2555206	IncDec	++		2554481	0					
ANR	2555207	Identifier	i		2554481	1					
ANR	2555208	CompoundStatement		150:6:6122:6163	2554481	3					
ANR	2555209	IdentifierDeclStatement	"gs_param_string value = { NULL , 0 , false } ;"	1816:6:74415:74456	2554481	0	True				
ANR	2555210	IdentifierDecl	"value = { NULL , 0 , false }"		2554481	0					
ANR	2555211	IdentifierDeclType	gs_param_string		2554481	0					
ANR	2555212	Identifier	value		2554481	1					
ANR	2555213	AssignmentExpression	"value = { NULL , 0 , false }"		2554481	2		=			
ANR	2555214	Identifier	value		2554481	0					
ANR	2555215	InitializerList	NULL		2554481	1					
ANR	2555216	Identifier	NULL		2554481	0					
ANR	2555217	PrimaryExpression	0		2554481	1					
ANR	2555218	Identifier	false		2554481	2					
ANR	2555219	IfStatement	if ( ! upd_choice [ i ] [ 0 ] )		2554481	1					
ANR	2555220	Condition	! upd_choice [ i ] [ 0 ]	1817:9:74467:74483	2554481	0	True				
ANR	2555221	UnaryOperationExpression	! upd_choice [ i ] [ 0 ]		2554481	0					
ANR	2555222	UnaryOperator	!		2554481	0					
ANR	2555223	ArrayIndexing	upd_choice [ i ] [ 0 ]		2554481	1					
ANR	2555224	ArrayIndexing	upd_choice [ i ]		2554481	0					
ANR	2555225	Identifier	upd_choice		2554481	0					
ANR	2555226	Identifier	i		2554481	1					
ANR	2555227	PrimaryExpression	0		2554481	1					
ANR	2555228	ContinueStatement	continue ;	1817:28:74486:74494	2554481	1	True				
ANR	2555229	ExpressionStatement	"UPD_PARAM_READ ( param_read_name , upd_choice [ i ] [ 0 ] , value , udev -> memory )"	1818:6:74502:74569	2554481	2	True				
ANR	2555230	CallExpression	"UPD_PARAM_READ ( param_read_name , upd_choice [ i ] [ 0 ] , value , udev -> memory )"		2554481	0					
ANR	2555231	Callee	UPD_PARAM_READ		2554481	0					
ANR	2555232	Identifier	UPD_PARAM_READ		2554481	0					
ANR	2555233	ArgumentList	param_read_name		2554481	1					
ANR	2555234	Argument	param_read_name		2554481	0					
ANR	2555235	Identifier	param_read_name		2554481	0					
ANR	2555236	Argument	upd_choice [ i ] [ 0 ]		2554481	1					
ANR	2555237	ArrayIndexing	upd_choice [ i ] [ 0 ]		2554481	0					
ANR	2555238	ArrayIndexing	upd_choice [ i ]		2554481	0					
ANR	2555239	Identifier	upd_choice		2554481	0					
ANR	2555240	Identifier	i		2554481	1					
ANR	2555241	PrimaryExpression	0		2554481	1					
ANR	2555242	Argument	value		2554481	2					
ANR	2555243	Identifier	value		2554481	0					
ANR	2555244	Argument	udev -> memory		2554481	3					
ANR	2555245	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2555246	Identifier	udev		2554481	0					
ANR	2555247	Identifier	memory		2554481	1					
ANR	2555248	IfStatement	if ( 0 == code )		2554481	3					
ANR	2555249	Condition	0 == code	1819:9:74580:74588	2554481	0	True				
ANR	2555250	EqualityExpression	0 == code		2554481	0		==			
ANR	2555251	PrimaryExpression	0		2554481	0					
ANR	2555252	Identifier	code		2554481	1					
ANR	2555253	CompoundStatement		153:20:6298:6298	2554481	1					
ANR	2555254	IfStatement	if ( 0 <= error )		2554481	0					
ANR	2555255	Condition	0 <= error	1820:12:74605:74614	2554481	0	True				
ANR	2555256	RelationalExpression	0 <= error		2554481	0		<=			
ANR	2555257	PrimaryExpression	0		2554481	0					
ANR	2555258	Identifier	error		2554481	1					
ANR	2555259	ExpressionStatement	error |= UPD_PUT_CHOICE	1820:24:74617:74640	2554481	1	True				
ANR	2555260	AssignmentExpression	error |= UPD_PUT_CHOICE		2554481	0		|=			
ANR	2555261	Identifier	error		2554481	0					
ANR	2555262	Identifier	UPD_PUT_CHOICE		2554481	1					
ANR	2555263	ExpressionStatement	choice [ i ] = 0	1821:9:74651:74664	2554481	1	True				
ANR	2555264	AssignmentExpression	choice [ i ] = 0		2554481	0		=			
ANR	2555265	ArrayIndexing	choice [ i ]		2554481	0					
ANR	2555266	Identifier	choice		2554481	0					
ANR	2555267	Identifier	i		2554481	1					
ANR	2555268	PrimaryExpression	0		2554481	1					
ANR	2555269	IfStatement	if ( 0 < value . size )		2554481	2					
ANR	2555270	Condition	0 < value . size	1822:12:74678:74691	2554481	0	True				
ANR	2555271	RelationalExpression	0 < value . size		2554481	0		<			
ANR	2555272	PrimaryExpression	0		2554481	0					
ANR	2555273	MemberAccess	value . size		2554481	1					
ANR	2555274	Identifier	value		2554481	0					
ANR	2555275	Identifier	size		2554481	1					
ANR	2555276	CompoundStatement		157:12:6415:6420	2554481	1					
ANR	2555277	IdentifierDeclStatement	int j ;	1823:12:74708:74713	2554481	0	True				
ANR	2555278	IdentifierDecl	j		2554481	0					
ANR	2555279	IdentifierDeclType	int		2554481	0					
ANR	2555280	Identifier	j		2554481	1					
ANR	2555281	ForStatement	for ( j = 1 ; upd_choice [ i ] [ j ] ; ++ j )		2554481	1					
ANR	2555282	ForInit	j = 1 ;	1824:16:74731:74736	2554481	0	True				
ANR	2555283	AssignmentExpression	j = 1		2554481	0		=			
ANR	2555284	Identifier	j		2554481	0					
ANR	2555285	PrimaryExpression	1		2554481	1					
ANR	2555286	Condition	upd_choice [ i ] [ j ]	1824:23:74738:74753	2554481	1	True				
ANR	2555287	ArrayIndexing	upd_choice [ i ] [ j ]		2554481	0					
ANR	2555288	ArrayIndexing	upd_choice [ i ]		2554481	0					
ANR	2555289	Identifier	upd_choice		2554481	0					
ANR	2555290	Identifier	i		2554481	1					
ANR	2555291	Identifier	j		2554481	1					
ANR	2555292	UnaryExpression	++ j	1824:41:74756:74758	2554481	2	True				
ANR	2555293	IncDec	++		2554481	0					
ANR	2555294	Identifier	j		2554481	1					
ANR	2555295	CompoundStatement		158:46:6468:6468	2554481	3					
ANR	2555296	IfStatement	"if ( ( strlen ( upd_choice [ i ] [ j ] ) == value . size ) && ( 0 == strncmp ( upd_choice [ i ] [ j ] , ( const char * ) value . data , value . size ) ) )"		2554481	0					
ANR	2555297	Condition	"( strlen ( upd_choice [ i ] [ j ] ) == value . size ) && ( 0 == strncmp ( upd_choice [ i ] [ j ] , ( const char * ) value . data , value . size ) )"	1825:18:74781:74940	2554481	0	True				
ANR	2555298	AndExpression	"( strlen ( upd_choice [ i ] [ j ] ) == value . size ) && ( 0 == strncmp ( upd_choice [ i ] [ j ] , ( const char * ) value . data , value . size ) )"		2554481	0		&&			
ANR	2555299	EqualityExpression	strlen ( upd_choice [ i ] [ j ] ) == value . size		2554481	0		==			
ANR	2555300	CallExpression	strlen ( upd_choice [ i ] [ j ] )		2554481	0					
ANR	2555301	Callee	strlen		2554481	0					
ANR	2555302	Identifier	strlen		2554481	0					
ANR	2555303	ArgumentList	upd_choice [ i ] [ j ]		2554481	1					
ANR	2555304	Argument	upd_choice [ i ] [ j ]		2554481	0					
ANR	2555305	ArrayIndexing	upd_choice [ i ] [ j ]		2554481	0					
ANR	2555306	ArrayIndexing	upd_choice [ i ]		2554481	0					
ANR	2555307	Identifier	upd_choice		2554481	0					
ANR	2555308	Identifier	i		2554481	1					
ANR	2555309	Identifier	j		2554481	1					
ANR	2555310	MemberAccess	value . size		2554481	1					
ANR	2555311	Identifier	value		2554481	0					
ANR	2555312	Identifier	size		2554481	1					
ANR	2555313	EqualityExpression	"0 == strncmp ( upd_choice [ i ] [ j ] , ( const char * ) value . data , value . size )"		2554481	1		==			
ANR	2555314	PrimaryExpression	0		2554481	0					
ANR	2555315	CallExpression	"strncmp ( upd_choice [ i ] [ j ] , ( const char * ) value . data , value . size )"		2554481	1					
ANR	2555316	Callee	strncmp		2554481	0					
ANR	2555317	Identifier	strncmp		2554481	0					
ANR	2555318	ArgumentList	upd_choice [ i ] [ j ]		2554481	1					
ANR	2555319	Argument	upd_choice [ i ] [ j ]		2554481	0					
ANR	2555320	ArrayIndexing	upd_choice [ i ] [ j ]		2554481	0					
ANR	2555321	ArrayIndexing	upd_choice [ i ]		2554481	0					
ANR	2555322	Identifier	upd_choice		2554481	0					
ANR	2555323	Identifier	i		2554481	1					
ANR	2555324	Identifier	j		2554481	1					
ANR	2555325	Argument	( const char * ) value . data		2554481	1					
ANR	2555326	CastExpression	( const char * ) value . data		2554481	0					
ANR	2555327	CastTarget	const char *		2554481	0					
ANR	2555328	MemberAccess	value . data		2554481	1					
ANR	2555329	Identifier	value		2554481	0					
ANR	2555330	Identifier	data		2554481	1					
ANR	2555331	Argument	value . size		2554481	2					
ANR	2555332	MemberAccess	value . size		2554481	0					
ANR	2555333	Identifier	value		2554481	0					
ANR	2555334	Identifier	size		2554481	1					
ANR	2555335	CompoundStatement		161:68:6650:6650	2554481	1					
ANR	2555336	ExpressionStatement	choice [ i ] = j	1828:18:74963:74976	2554481	0	True				
ANR	2555337	AssignmentExpression	choice [ i ] = j		2554481	0		=			
ANR	2555338	ArrayIndexing	choice [ i ]		2554481	0					
ANR	2555339	Identifier	choice		2554481	0					
ANR	2555340	Identifier	i		2554481	1					
ANR	2555341	Identifier	j		2554481	1					
ANR	2555342	BreakStatement	break ;	1829:18:74996:75001	2554481	1	True				
ANR	2555343	ForStatement	for ( i = 0 ; countof ( upd_flags ) > i ; ++ i )		2554481	75					
ANR	2555344	ForInit	i = 0 ;	1837:7:75099:75104	2554481	0	True				
ANR	2555345	AssignmentExpression	i = 0		2554481	0		=			
ANR	2555346	Identifier	i		2554481	0					
ANR	2555347	PrimaryExpression	0		2554481	1					
ANR	2555348	Condition	countof ( upd_flags ) > i	1837:14:75106:75127	2554481	1	True				
ANR	2555349	RelationalExpression	countof ( upd_flags ) > i		2554481	0		>			
ANR	2555350	CallExpression	countof ( upd_flags )		2554481	0					
ANR	2555351	Callee	countof		2554481	0					
ANR	2555352	Identifier	countof		2554481	0					
ANR	2555353	ArgumentList	upd_flags		2554481	1					
ANR	2555354	Argument	upd_flags		2554481	0					
ANR	2555355	Identifier	upd_flags		2554481	0					
ANR	2555356	Identifier	i		2554481	1					
ANR	2555357	UnaryExpression	++ i	1837:38:75130:75132	2554481	2	True				
ANR	2555358	IncDec	++		2554481	0					
ANR	2555359	Identifier	i		2554481	1					
ANR	2555360	CompoundStatement		173:6:6891:6931	2554481	3					
ANR	2555361	IdentifierDeclStatement	uint32_t bit = ( uint32_t ) 1 << i ;	1838:6:75143:75176	2554481	0	True				
ANR	2555362	IdentifierDecl	bit = ( uint32_t ) 1 << i		2554481	0					
ANR	2555363	IdentifierDeclType	uint32_t		2554481	0					
ANR	2555364	Identifier	bit		2554481	1					
ANR	2555365	AssignmentExpression	bit = ( uint32_t ) 1 << i		2554481	2		=			
ANR	2555366	Identifier	bit		2554481	0					
ANR	2555367	ShiftExpression	( uint32_t ) 1 << i		2554481	1		<<			
ANR	2555368	CastExpression	( uint32_t ) 1		2554481	0					
ANR	2555369	CastTarget	uint32_t		2554481	0					
ANR	2555370	PrimaryExpression	1		2554481	1					
ANR	2555371	Identifier	i		2554481	1					
ANR	2555372	IdentifierDeclStatement	bool flag = flags & bit ? true : false ;	1839:6:75184:75224	2554481	1	True				
ANR	2555373	IdentifierDecl	flag = flags & bit ? true : false		2554481	0					
ANR	2555374	IdentifierDeclType	bool		2554481	0					
ANR	2555375	Identifier	flag		2554481	1					
ANR	2555376	AssignmentExpression	flag = flags & bit ? true : false		2554481	2		=			
ANR	2555377	Identifier	flag		2554481	0					
ANR	2555378	ConditionalExpression	flags & bit ? true : false		2554481	1					
ANR	2555379	Condition	flags & bit		2554481	0					
ANR	2555380	BitAndExpression	flags & bit		2554481	0		&			
ANR	2555381	Identifier	flags		2554481	0					
ANR	2555382	Identifier	bit		2554481	1					
ANR	2555383	Identifier	true		2554481	1					
ANR	2555384	Identifier	false		2554481	2					
ANR	2555385	IfStatement	if ( ! upd_flags [ i ] )		2554481	2					
ANR	2555386	Condition	! upd_flags [ i ]	1840:9:75235:75247	2554481	0	True				
ANR	2555387	UnaryOperationExpression	! upd_flags [ i ]		2554481	0					
ANR	2555388	UnaryOperator	!		2554481	0					
ANR	2555389	ArrayIndexing	upd_flags [ i ]		2554481	1					
ANR	2555390	Identifier	upd_flags		2554481	0					
ANR	2555391	Identifier	i		2554481	1					
ANR	2555392	ContinueStatement	continue ;	1840:24:75250:75258	2554481	1	True				
ANR	2555393	ExpressionStatement	"UPD_PARAM_READ ( param_read_bool , upd_flags [ i ] , flag , udev -> memory )"	1841:6:75266:75328	2554481	3	True				
ANR	2555394	CallExpression	"UPD_PARAM_READ ( param_read_bool , upd_flags [ i ] , flag , udev -> memory )"		2554481	0					
ANR	2555395	Callee	UPD_PARAM_READ		2554481	0					
ANR	2555396	Identifier	UPD_PARAM_READ		2554481	0					
ANR	2555397	ArgumentList	param_read_bool		2554481	1					
ANR	2555398	Argument	param_read_bool		2554481	0					
ANR	2555399	Identifier	param_read_bool		2554481	0					
ANR	2555400	Argument	upd_flags [ i ]		2554481	1					
ANR	2555401	ArrayIndexing	upd_flags [ i ]		2554481	0					
ANR	2555402	Identifier	upd_flags		2554481	0					
ANR	2555403	Identifier	i		2554481	1					
ANR	2555404	Argument	flag		2554481	2					
ANR	2555405	Identifier	flag		2554481	0					
ANR	2555406	Argument	udev -> memory		2554481	3					
ANR	2555407	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2555408	Identifier	udev		2554481	0					
ANR	2555409	Identifier	memory		2554481	1					
ANR	2555410	IfStatement	if ( 0 == code )		2554481	4					
ANR	2555411	Condition	0 == code	1842:9:75339:75347	2554481	0	True				
ANR	2555412	EqualityExpression	0 == code		2554481	0		==			
ANR	2555413	PrimaryExpression	0		2554481	0					
ANR	2555414	Identifier	code		2554481	1					
ANR	2555415	CompoundStatement		176:20:7057:7057	2554481	1					
ANR	2555416	IfStatement	if ( 0 <= error )		2554481	0					
ANR	2555417	Condition	0 <= error	1843:12:75364:75373	2554481	0	True				
ANR	2555418	RelationalExpression	0 <= error		2554481	0		<=			
ANR	2555419	PrimaryExpression	0		2554481	0					
ANR	2555420	Identifier	error		2554481	1					
ANR	2555421	ExpressionStatement	error |= UPD_PUT_FLAGS	1843:24:75376:75398	2554481	1	True				
ANR	2555422	AssignmentExpression	error |= UPD_PUT_FLAGS		2554481	0		|=			
ANR	2555423	Identifier	error		2554481	0					
ANR	2555424	Identifier	UPD_PUT_FLAGS		2554481	1					
ANR	2555425	IfStatement	if ( flag )		2554481	1					
ANR	2555426	Condition	flag	1844:12:75412:75415	2554481	0	True				
ANR	2555427	Identifier	flag		2554481	0					
ANR	2555428	ExpressionStatement	flags |= bit	1844:18:75418:75431	2554481	1	True				
ANR	2555429	AssignmentExpression	flags |= bit		2554481	0		|=			
ANR	2555430	Identifier	flags		2554481	0					
ANR	2555431	Identifier	bit		2554481	1					
ANR	2555432	ElseStatement	else		2554481	0					
ANR	2555433	ExpressionStatement	flags &= ~bit	1845:18:75451:75464	2554481	0	True				
ANR	2555434	AssignmentExpression	flags &= ~bit		2554481	0		&=			
ANR	2555435	Identifier	flags		2554481	0					
ANR	2555436	Identifier	~bit		2554481	1					
ANR	2555437	ForStatement	for ( i = 0 ; countof ( upd_ints ) > i ; ++ i )		2554481	76					
ANR	2555438	ForInit	i = 0 ;	1850:7:75520:75525	2554481	0	True				
ANR	2555439	AssignmentExpression	i = 0		2554481	0		=			
ANR	2555440	Identifier	i		2554481	0					
ANR	2555441	PrimaryExpression	0		2554481	1					
ANR	2555442	Condition	countof ( upd_ints ) > i	1850:14:75527:75547	2554481	1	True				
ANR	2555443	RelationalExpression	countof ( upd_ints ) > i		2554481	0		>			
ANR	2555444	CallExpression	countof ( upd_ints )		2554481	0					
ANR	2555445	Callee	countof		2554481	0					
ANR	2555446	Identifier	countof		2554481	0					
ANR	2555447	ArgumentList	upd_ints		2554481	1					
ANR	2555448	Argument	upd_ints		2554481	0					
ANR	2555449	Identifier	upd_ints		2554481	0					
ANR	2555450	Identifier	i		2554481	1					
ANR	2555451	UnaryExpression	++ i	1850:37:75550:75552	2554481	2	True				
ANR	2555452	IncDec	++		2554481	0					
ANR	2555453	Identifier	i		2554481	1					
ANR	2555454	CompoundStatement		185:6:7270:7289	2554481	3					
ANR	2555455	IdentifierDeclStatement	int value = ints [ i ] ;	1851:6:75563:75582	2554481	0	True				
ANR	2555456	IdentifierDecl	value = ints [ i ]		2554481	0					
ANR	2555457	IdentifierDeclType	int		2554481	0					
ANR	2555458	Identifier	value		2554481	1					
ANR	2555459	AssignmentExpression	value = ints [ i ]		2554481	2		=			
ANR	2555460	Identifier	value		2554481	0					
ANR	2555461	ArrayIndexing	ints [ i ]		2554481	1					
ANR	2555462	Identifier	ints		2554481	0					
ANR	2555463	Identifier	i		2554481	1					
ANR	2555464	IfStatement	if ( ! upd_ints [ i ] )		2554481	1					
ANR	2555465	Condition	! upd_ints [ i ]	1852:9:75593:75604	2554481	0	True				
ANR	2555466	UnaryOperationExpression	! upd_ints [ i ]		2554481	0					
ANR	2555467	UnaryOperator	!		2554481	0					
ANR	2555468	ArrayIndexing	upd_ints [ i ]		2554481	1					
ANR	2555469	Identifier	upd_ints		2554481	0					
ANR	2555470	Identifier	i		2554481	1					
ANR	2555471	ContinueStatement	continue ;	1852:23:75607:75615	2554481	1	True				
ANR	2555472	ExpressionStatement	"UPD_PARAM_READ ( param_read_int , upd_ints [ i ] , value , udev -> memory )"	1853:6:75623:75684	2554481	2	True				
ANR	2555473	CallExpression	"UPD_PARAM_READ ( param_read_int , upd_ints [ i ] , value , udev -> memory )"		2554481	0					
ANR	2555474	Callee	UPD_PARAM_READ		2554481	0					
ANR	2555475	Identifier	UPD_PARAM_READ		2554481	0					
ANR	2555476	ArgumentList	param_read_int		2554481	1					
ANR	2555477	Argument	param_read_int		2554481	0					
ANR	2555478	Identifier	param_read_int		2554481	0					
ANR	2555479	Argument	upd_ints [ i ]		2554481	1					
ANR	2555480	ArrayIndexing	upd_ints [ i ]		2554481	0					
ANR	2555481	Identifier	upd_ints		2554481	0					
ANR	2555482	Identifier	i		2554481	1					
ANR	2555483	Argument	value		2554481	2					
ANR	2555484	Identifier	value		2554481	0					
ANR	2555485	Argument	udev -> memory		2554481	3					
ANR	2555486	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2555487	Identifier	udev		2554481	0					
ANR	2555488	Identifier	memory		2554481	1					
ANR	2555489	IfStatement	if ( 0 == code )		2554481	3					
ANR	2555490	Condition	0 == code	1854:9:75695:75703	2554481	0	True				
ANR	2555491	EqualityExpression	0 == code		2554481	0		==			
ANR	2555492	PrimaryExpression	0		2554481	0					
ANR	2555493	Identifier	code		2554481	1					
ANR	2555494	CompoundStatement		188:20:7413:7413	2554481	1					
ANR	2555495	IfStatement	if ( 0 <= error )		2554481	0					
ANR	2555496	Condition	0 <= error	1855:12:75720:75729	2554481	0	True				
ANR	2555497	RelationalExpression	0 <= error		2554481	0		<=			
ANR	2555498	PrimaryExpression	0		2554481	0					
ANR	2555499	Identifier	error		2554481	1					
ANR	2555500	ExpressionStatement	error |= UPD_PUT_INTS	1855:24:75732:75753	2554481	1	True				
ANR	2555501	AssignmentExpression	error |= UPD_PUT_INTS		2554481	0		|=			
ANR	2555502	Identifier	error		2554481	0					
ANR	2555503	Identifier	UPD_PUT_INTS		2554481	1					
ANR	2555504	ExpressionStatement	ints [ i ] = value	1856:9:75764:75779	2554481	1	True				
ANR	2555505	AssignmentExpression	ints [ i ] = value		2554481	0		=			
ANR	2555506	ArrayIndexing	ints [ i ]		2554481	0					
ANR	2555507	Identifier	ints		2554481	0					
ANR	2555508	Identifier	i		2554481	1					
ANR	2555509	Identifier	value		2554481	1					
ANR	2555510	ForStatement	for ( i = 0 ; countof ( upd_int_a ) > i ; ++ i )		2554481	77					
ANR	2555511	ForInit	i = 0 ;	1861:7:75835:75840	2554481	0	True				
ANR	2555512	AssignmentExpression	i = 0		2554481	0		=			
ANR	2555513	Identifier	i		2554481	0					
ANR	2555514	PrimaryExpression	0		2554481	1					
ANR	2555515	Condition	countof ( upd_int_a ) > i	1861:14:75842:75863	2554481	1	True				
ANR	2555516	RelationalExpression	countof ( upd_int_a ) > i		2554481	0		>			
ANR	2555517	CallExpression	countof ( upd_int_a )		2554481	0					
ANR	2555518	Callee	countof		2554481	0					
ANR	2555519	Identifier	countof		2554481	0					
ANR	2555520	ArgumentList	upd_int_a		2554481	1					
ANR	2555521	Argument	upd_int_a		2554481	0					
ANR	2555522	Identifier	upd_int_a		2554481	0					
ANR	2555523	Identifier	i		2554481	1					
ANR	2555524	UnaryExpression	++ i	1861:38:75866:75868	2554481	2	True				
ANR	2555525	IncDec	++		2554481	0					
ANR	2555526	Identifier	i		2554481	1					
ANR	2555527	CompoundStatement		196:6:7586:7621	2554481	3					
ANR	2555528	IdentifierDeclStatement	gs_param_int_array value = int_a [ i ] ;	1862:6:75879:75914	2554481	0	True				
ANR	2555529	IdentifierDecl	value = int_a [ i ]		2554481	0					
ANR	2555530	IdentifierDeclType	gs_param_int_array		2554481	0					
ANR	2555531	Identifier	value		2554481	1					
ANR	2555532	AssignmentExpression	value = int_a [ i ]		2554481	2		=			
ANR	2555533	Identifier	value		2554481	0					
ANR	2555534	ArrayIndexing	int_a [ i ]		2554481	1					
ANR	2555535	Identifier	int_a		2554481	0					
ANR	2555536	Identifier	i		2554481	1					
ANR	2555537	IfStatement	if ( ! upd_int_a [ i ] )		2554481	1					
ANR	2555538	Condition	! upd_int_a [ i ]	1863:9:75925:75937	2554481	0	True				
ANR	2555539	UnaryOperationExpression	! upd_int_a [ i ]		2554481	0					
ANR	2555540	UnaryOperator	!		2554481	0					
ANR	2555541	ArrayIndexing	upd_int_a [ i ]		2554481	1					
ANR	2555542	Identifier	upd_int_a		2554481	0					
ANR	2555543	Identifier	i		2554481	1					
ANR	2555544	ContinueStatement	continue ;	1863:24:75940:75948	2554481	1	True				
ANR	2555545	ExpressionStatement	"UPD_PARAM_READ ( param_read_int_array , upd_int_a [ i ] , value , udev -> memory )"	1864:6:75956:76024	2554481	2	True				
ANR	2555546	CallExpression	"UPD_PARAM_READ ( param_read_int_array , upd_int_a [ i ] , value , udev -> memory )"		2554481	0					
ANR	2555547	Callee	UPD_PARAM_READ		2554481	0					
ANR	2555548	Identifier	UPD_PARAM_READ		2554481	0					
ANR	2555549	ArgumentList	param_read_int_array		2554481	1					
ANR	2555550	Argument	param_read_int_array		2554481	0					
ANR	2555551	Identifier	param_read_int_array		2554481	0					
ANR	2555552	Argument	upd_int_a [ i ]		2554481	1					
ANR	2555553	ArrayIndexing	upd_int_a [ i ]		2554481	0					
ANR	2555554	Identifier	upd_int_a		2554481	0					
ANR	2555555	Identifier	i		2554481	1					
ANR	2555556	Argument	value		2554481	2					
ANR	2555557	Identifier	value		2554481	0					
ANR	2555558	Argument	udev -> memory		2554481	3					
ANR	2555559	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2555560	Identifier	udev		2554481	0					
ANR	2555561	Identifier	memory		2554481	1					
ANR	2555562	IfStatement	if ( 0 == code )		2554481	3					
ANR	2555563	Condition	0 == code	1865:9:76035:76043	2554481	0	True				
ANR	2555564	EqualityExpression	0 == code		2554481	0		==			
ANR	2555565	PrimaryExpression	0		2554481	0					
ANR	2555566	Identifier	code		2554481	1					
ANR	2555567	CompoundStatement		199:20:7753:7753	2554481	1					
ANR	2555568	IfStatement	if ( 0 <= error )		2554481	0					
ANR	2555569	Condition	0 <= error	1866:12:76060:76069	2554481	0	True				
ANR	2555570	RelationalExpression	0 <= error		2554481	0		<=			
ANR	2555571	PrimaryExpression	0		2554481	0					
ANR	2555572	Identifier	error		2554481	1					
ANR	2555573	ExpressionStatement	error |= UPD_PUT_INT_A	1866:24:76072:76094	2554481	1	True				
ANR	2555574	AssignmentExpression	error |= UPD_PUT_INT_A		2554481	0		|=			
ANR	2555575	Identifier	error		2554481	0					
ANR	2555576	Identifier	UPD_PUT_INT_A		2554481	1					
ANR	2555577	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , int_a [ i ] )"	1867:9:76105:76145	2554481	1	True				
ANR	2555578	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , int_a [ i ] )"		2554481	0					
ANR	2555579	Callee	UPD_MM_DEL_PARAM		2554481	0					
ANR	2555580	Identifier	UPD_MM_DEL_PARAM		2554481	0					
ANR	2555581	ArgumentList	udev -> memory		2554481	1					
ANR	2555582	Argument	udev -> memory		2554481	0					
ANR	2555583	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2555584	Identifier	udev		2554481	0					
ANR	2555585	Identifier	memory		2554481	1					
ANR	2555586	Argument	int_a [ i ]		2554481	1					
ANR	2555587	ArrayIndexing	int_a [ i ]		2554481	0					
ANR	2555588	Identifier	int_a		2554481	0					
ANR	2555589	Identifier	i		2554481	1					
ANR	2555590	IfStatement	if ( ! value . size )		2554481	2					
ANR	2555591	Condition	! value . size	1868:12:76159:76169	2554481	0	True				
ANR	2555592	UnaryOperationExpression	! value . size		2554481	0					
ANR	2555593	UnaryOperator	!		2554481	0					
ANR	2555594	MemberAccess	value . size		2554481	1					
ANR	2555595	Identifier	value		2554481	0					
ANR	2555596	Identifier	size		2554481	1					
ANR	2555597	CompoundStatement		202:25:7879:7879	2554481	1					
ANR	2555598	ExpressionStatement	value . data = NULL	1869:12:76186:76203	2554481	0	True				
ANR	2555599	AssignmentExpression	value . data = NULL		2554481	0		=			
ANR	2555600	MemberAccess	value . data		2554481	0					
ANR	2555601	Identifier	value		2554481	0					
ANR	2555602	Identifier	data		2554481	1					
ANR	2555603	Identifier	NULL		2554481	1					
ANR	2555604	ExpressionStatement	int_a [ i ] = value	1870:12:76217:76235	2554481	1	True				
ANR	2555605	AssignmentExpression	int_a [ i ] = value		2554481	0		=			
ANR	2555606	ArrayIndexing	int_a [ i ]		2554481	0					
ANR	2555607	Identifier	int_a		2554481	0					
ANR	2555608	Identifier	i		2554481	1					
ANR	2555609	Identifier	value		2554481	1					
ANR	2555610	ElseStatement	else		2554481	0					
ANR	2555611	CompoundStatement		205:16:7960:7960	2554481	0					
ANR	2555612	ExpressionStatement	"UPD_MM_CPY_PARAM ( udev -> memory , int_a [ i ] , value )"	1872:12:76267:76313	2554481	0	True				
ANR	2555613	CallExpression	"UPD_MM_CPY_PARAM ( udev -> memory , int_a [ i ] , value )"		2554481	0					
ANR	2555614	Callee	UPD_MM_CPY_PARAM		2554481	0					
ANR	2555615	Identifier	UPD_MM_CPY_PARAM		2554481	0					
ANR	2555616	ArgumentList	udev -> memory		2554481	1					
ANR	2555617	Argument	udev -> memory		2554481	0					
ANR	2555618	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2555619	Identifier	udev		2554481	0					
ANR	2555620	Identifier	memory		2554481	1					
ANR	2555621	Argument	int_a [ i ]		2554481	1					
ANR	2555622	ArrayIndexing	int_a [ i ]		2554481	0					
ANR	2555623	Identifier	int_a		2554481	0					
ANR	2555624	Identifier	i		2554481	1					
ANR	2555625	Argument	value		2554481	2					
ANR	2555626	Identifier	value		2554481	0					
ANR	2555627	ForStatement	for ( i = 0 ; countof ( upd_strings ) > i ; ++ i )		2554481	78					
ANR	2555628	ForInit	i = 0 ;	1878:7:76373:76378	2554481	0	True				
ANR	2555629	AssignmentExpression	i = 0		2554481	0		=			
ANR	2555630	Identifier	i		2554481	0					
ANR	2555631	PrimaryExpression	0		2554481	1					
ANR	2555632	Condition	countof ( upd_strings ) > i	1878:14:76380:76403	2554481	1	True				
ANR	2555633	RelationalExpression	countof ( upd_strings ) > i		2554481	0		>			
ANR	2555634	CallExpression	countof ( upd_strings )		2554481	0					
ANR	2555635	Callee	countof		2554481	0					
ANR	2555636	Identifier	countof		2554481	0					
ANR	2555637	ArgumentList	upd_strings		2554481	1					
ANR	2555638	Argument	upd_strings		2554481	0					
ANR	2555639	Identifier	upd_strings		2554481	0					
ANR	2555640	Identifier	i		2554481	1					
ANR	2555641	UnaryExpression	++ i	1878:40:76406:76408	2554481	2	True				
ANR	2555642	IncDec	++		2554481	0					
ANR	2555643	Identifier	i		2554481	1					
ANR	2555644	CompoundStatement		213:6:8126:8160	2554481	3					
ANR	2555645	IdentifierDeclStatement	gs_param_string value = strings [ i ] ;	1879:6:76419:76453	2554481	0	True				
ANR	2555646	IdentifierDecl	value = strings [ i ]		2554481	0					
ANR	2555647	IdentifierDeclType	gs_param_string		2554481	0					
ANR	2555648	Identifier	value		2554481	1					
ANR	2555649	AssignmentExpression	value = strings [ i ]		2554481	2		=			
ANR	2555650	Identifier	value		2554481	0					
ANR	2555651	ArrayIndexing	strings [ i ]		2554481	1					
ANR	2555652	Identifier	strings		2554481	0					
ANR	2555653	Identifier	i		2554481	1					
ANR	2555654	IfStatement	if ( ! upd_strings [ i ] )		2554481	1					
ANR	2555655	Condition	! upd_strings [ i ]	1880:9:76464:76478	2554481	0	True				
ANR	2555656	UnaryOperationExpression	! upd_strings [ i ]		2554481	0					
ANR	2555657	UnaryOperator	!		2554481	0					
ANR	2555658	ArrayIndexing	upd_strings [ i ]		2554481	1					
ANR	2555659	Identifier	upd_strings		2554481	0					
ANR	2555660	Identifier	i		2554481	1					
ANR	2555661	ContinueStatement	continue ;	1880:26:76481:76489	2554481	1	True				
ANR	2555662	ExpressionStatement	"UPD_PARAM_READ ( param_read_string , upd_strings [ i ] , value , udev -> memory )"	1881:6:76497:76564	2554481	2	True				
ANR	2555663	CallExpression	"UPD_PARAM_READ ( param_read_string , upd_strings [ i ] , value , udev -> memory )"		2554481	0					
ANR	2555664	Callee	UPD_PARAM_READ		2554481	0					
ANR	2555665	Identifier	UPD_PARAM_READ		2554481	0					
ANR	2555666	ArgumentList	param_read_string		2554481	1					
ANR	2555667	Argument	param_read_string		2554481	0					
ANR	2555668	Identifier	param_read_string		2554481	0					
ANR	2555669	Argument	upd_strings [ i ]		2554481	1					
ANR	2555670	ArrayIndexing	upd_strings [ i ]		2554481	0					
ANR	2555671	Identifier	upd_strings		2554481	0					
ANR	2555672	Identifier	i		2554481	1					
ANR	2555673	Argument	value		2554481	2					
ANR	2555674	Identifier	value		2554481	0					
ANR	2555675	Argument	udev -> memory		2554481	3					
ANR	2555676	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2555677	Identifier	udev		2554481	0					
ANR	2555678	Identifier	memory		2554481	1					
ANR	2555679	IfStatement	if ( 0 == code )		2554481	3					
ANR	2555680	Condition	0 == code	1882:9:76575:76583	2554481	0	True				
ANR	2555681	EqualityExpression	0 == code		2554481	0		==			
ANR	2555682	PrimaryExpression	0		2554481	0					
ANR	2555683	Identifier	code		2554481	1					
ANR	2555684	CompoundStatement		216:20:8293:8293	2554481	1					
ANR	2555685	IfStatement	if ( 0 <= error )		2554481	0					
ANR	2555686	Condition	0 <= error	1883:12:76600:76609	2554481	0	True				
ANR	2555687	RelationalExpression	0 <= error		2554481	0		<=			
ANR	2555688	PrimaryExpression	0		2554481	0					
ANR	2555689	Identifier	error		2554481	1					
ANR	2555690	ExpressionStatement	error |= UPD_PUT_STRINGS	1883:24:76612:76636	2554481	1	True				
ANR	2555691	AssignmentExpression	error |= UPD_PUT_STRINGS		2554481	0		|=			
ANR	2555692	Identifier	error		2554481	0					
ANR	2555693	Identifier	UPD_PUT_STRINGS		2554481	1					
ANR	2555694	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , strings [ i ] )"	1884:9:76647:76689	2554481	1	True				
ANR	2555695	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , strings [ i ] )"		2554481	0					
ANR	2555696	Callee	UPD_MM_DEL_PARAM		2554481	0					
ANR	2555697	Identifier	UPD_MM_DEL_PARAM		2554481	0					
ANR	2555698	ArgumentList	udev -> memory		2554481	1					
ANR	2555699	Argument	udev -> memory		2554481	0					
ANR	2555700	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2555701	Identifier	udev		2554481	0					
ANR	2555702	Identifier	memory		2554481	1					
ANR	2555703	Argument	strings [ i ]		2554481	1					
ANR	2555704	ArrayIndexing	strings [ i ]		2554481	0					
ANR	2555705	Identifier	strings		2554481	0					
ANR	2555706	Identifier	i		2554481	1					
ANR	2555707	IfStatement	if ( ! value . size )		2554481	2					
ANR	2555708	Condition	! value . size	1885:12:76703:76713	2554481	0	True				
ANR	2555709	UnaryOperationExpression	! value . size		2554481	0					
ANR	2555710	UnaryOperator	!		2554481	0					
ANR	2555711	MemberAccess	value . size		2554481	1					
ANR	2555712	Identifier	value		2554481	0					
ANR	2555713	Identifier	size		2554481	1					
ANR	2555714	CompoundStatement		219:25:8423:8423	2554481	1					
ANR	2555715	ExpressionStatement	value . data = NULL	1886:12:76730:76747	2554481	0	True				
ANR	2555716	AssignmentExpression	value . data = NULL		2554481	0		=			
ANR	2555717	MemberAccess	value . data		2554481	0					
ANR	2555718	Identifier	value		2554481	0					
ANR	2555719	Identifier	data		2554481	1					
ANR	2555720	Identifier	NULL		2554481	1					
ANR	2555721	ExpressionStatement	strings [ i ] = value	1887:12:76761:76781	2554481	1	True				
ANR	2555722	AssignmentExpression	strings [ i ] = value		2554481	0		=			
ANR	2555723	ArrayIndexing	strings [ i ]		2554481	0					
ANR	2555724	Identifier	strings		2554481	0					
ANR	2555725	Identifier	i		2554481	1					
ANR	2555726	Identifier	value		2554481	1					
ANR	2555727	ElseStatement	else		2554481	0					
ANR	2555728	CompoundStatement		222:16:8506:8506	2554481	0					
ANR	2555729	ExpressionStatement	"UPD_MM_CPY_PARAM ( udev -> memory , strings [ i ] , value )"	1889:12:76813:76861	2554481	0	True				
ANR	2555730	CallExpression	"UPD_MM_CPY_PARAM ( udev -> memory , strings [ i ] , value )"		2554481	0					
ANR	2555731	Callee	UPD_MM_CPY_PARAM		2554481	0					
ANR	2555732	Identifier	UPD_MM_CPY_PARAM		2554481	0					
ANR	2555733	ArgumentList	udev -> memory		2554481	1					
ANR	2555734	Argument	udev -> memory		2554481	0					
ANR	2555735	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2555736	Identifier	udev		2554481	0					
ANR	2555737	Identifier	memory		2554481	1					
ANR	2555738	Argument	strings [ i ]		2554481	1					
ANR	2555739	ArrayIndexing	strings [ i ]		2554481	0					
ANR	2555740	Identifier	strings		2554481	0					
ANR	2555741	Identifier	i		2554481	1					
ANR	2555742	Argument	value		2554481	2					
ANR	2555743	Identifier	value		2554481	0					
ANR	2555744	ForStatement	for ( i = 0 ; countof ( upd_string_a ) > i ; ++ i )		2554481	79					
ANR	2555745	ForInit	i = 0 ;	1895:7:76927:76932	2554481	0	True				
ANR	2555746	AssignmentExpression	i = 0		2554481	0		=			
ANR	2555747	Identifier	i		2554481	0					
ANR	2555748	PrimaryExpression	0		2554481	1					
ANR	2555749	Condition	countof ( upd_string_a ) > i	1895:14:76934:76958	2554481	1	True				
ANR	2555750	RelationalExpression	countof ( upd_string_a ) > i		2554481	0		>			
ANR	2555751	CallExpression	countof ( upd_string_a )		2554481	0					
ANR	2555752	Callee	countof		2554481	0					
ANR	2555753	Identifier	countof		2554481	0					
ANR	2555754	ArgumentList	upd_string_a		2554481	1					
ANR	2555755	Argument	upd_string_a		2554481	0					
ANR	2555756	Identifier	upd_string_a		2554481	0					
ANR	2555757	Identifier	i		2554481	1					
ANR	2555758	UnaryExpression	++ i	1895:41:76961:76963	2554481	2	True				
ANR	2555759	IncDec	++		2554481	0					
ANR	2555760	Identifier	i		2554481	1					
ANR	2555761	CompoundStatement		230:6:8681:8722	2554481	3					
ANR	2555762	IdentifierDeclStatement	gs_param_string_array value = string_a [ i ] ;	1896:6:76974:77015	2554481	0	True				
ANR	2555763	IdentifierDecl	value = string_a [ i ]		2554481	0					
ANR	2555764	IdentifierDeclType	gs_param_string_array		2554481	0					
ANR	2555765	Identifier	value		2554481	1					
ANR	2555766	AssignmentExpression	value = string_a [ i ]		2554481	2		=			
ANR	2555767	Identifier	value		2554481	0					
ANR	2555768	ArrayIndexing	string_a [ i ]		2554481	1					
ANR	2555769	Identifier	string_a		2554481	0					
ANR	2555770	Identifier	i		2554481	1					
ANR	2555771	IfStatement	if ( ! upd_string_a [ i ] )		2554481	1					
ANR	2555772	Condition	! upd_string_a [ i ]	1897:9:77026:77041	2554481	0	True				
ANR	2555773	UnaryOperationExpression	! upd_string_a [ i ]		2554481	0					
ANR	2555774	UnaryOperator	!		2554481	0					
ANR	2555775	ArrayIndexing	upd_string_a [ i ]		2554481	1					
ANR	2555776	Identifier	upd_string_a		2554481	0					
ANR	2555777	Identifier	i		2554481	1					
ANR	2555778	ContinueStatement	continue ;	1897:27:77044:77052	2554481	1	True				
ANR	2555779	ExpressionStatement	"UPD_PARAM_READ ( param_read_string_array , upd_string_a [ i ] , value , udev -> memory )"	1898:6:77060:77134	2554481	2	True				
ANR	2555780	CallExpression	"UPD_PARAM_READ ( param_read_string_array , upd_string_a [ i ] , value , udev -> memory )"		2554481	0					
ANR	2555781	Callee	UPD_PARAM_READ		2554481	0					
ANR	2555782	Identifier	UPD_PARAM_READ		2554481	0					
ANR	2555783	ArgumentList	param_read_string_array		2554481	1					
ANR	2555784	Argument	param_read_string_array		2554481	0					
ANR	2555785	Identifier	param_read_string_array		2554481	0					
ANR	2555786	Argument	upd_string_a [ i ]		2554481	1					
ANR	2555787	ArrayIndexing	upd_string_a [ i ]		2554481	0					
ANR	2555788	Identifier	upd_string_a		2554481	0					
ANR	2555789	Identifier	i		2554481	1					
ANR	2555790	Argument	value		2554481	2					
ANR	2555791	Identifier	value		2554481	0					
ANR	2555792	Argument	udev -> memory		2554481	3					
ANR	2555793	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2555794	Identifier	udev		2554481	0					
ANR	2555795	Identifier	memory		2554481	1					
ANR	2555796	IfStatement	if ( 0 == code )		2554481	3					
ANR	2555797	Condition	0 == code	1899:9:77145:77153	2554481	0	True				
ANR	2555798	EqualityExpression	0 == code		2554481	0		==			
ANR	2555799	PrimaryExpression	0		2554481	0					
ANR	2555800	Identifier	code		2554481	1					
ANR	2555801	CompoundStatement		233:20:8863:8863	2554481	1					
ANR	2555802	IfStatement	if ( 0 <= error )		2554481	0					
ANR	2555803	Condition	0 <= error	1900:12:77170:77179	2554481	0	True				
ANR	2555804	RelationalExpression	0 <= error		2554481	0		<=			
ANR	2555805	PrimaryExpression	0		2554481	0					
ANR	2555806	Identifier	error		2554481	1					
ANR	2555807	ExpressionStatement	error |= UPD_PUT_STRING_A	1900:24:77182:77207	2554481	1	True				
ANR	2555808	AssignmentExpression	error |= UPD_PUT_STRING_A		2554481	0		|=			
ANR	2555809	Identifier	error		2554481	0					
ANR	2555810	Identifier	UPD_PUT_STRING_A		2554481	1					
ANR	2555811	ExpressionStatement	"UPD_MM_DEL_APARAM ( udev -> memory , string_a [ i ] )"	1901:9:77218:77262	2554481	1	True				
ANR	2555812	CallExpression	"UPD_MM_DEL_APARAM ( udev -> memory , string_a [ i ] )"		2554481	0					
ANR	2555813	Callee	UPD_MM_DEL_APARAM		2554481	0					
ANR	2555814	Identifier	UPD_MM_DEL_APARAM		2554481	0					
ANR	2555815	ArgumentList	udev -> memory		2554481	1					
ANR	2555816	Argument	udev -> memory		2554481	0					
ANR	2555817	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2555818	Identifier	udev		2554481	0					
ANR	2555819	Identifier	memory		2554481	1					
ANR	2555820	Argument	string_a [ i ]		2554481	1					
ANR	2555821	ArrayIndexing	string_a [ i ]		2554481	0					
ANR	2555822	Identifier	string_a		2554481	0					
ANR	2555823	Identifier	i		2554481	1					
ANR	2555824	IfStatement	if ( ! value . size )		2554481	2					
ANR	2555825	Condition	! value . size	1902:12:77276:77286	2554481	0	True				
ANR	2555826	UnaryOperationExpression	! value . size		2554481	0					
ANR	2555827	UnaryOperator	!		2554481	0					
ANR	2555828	MemberAccess	value . size		2554481	1					
ANR	2555829	Identifier	value		2554481	0					
ANR	2555830	Identifier	size		2554481	1					
ANR	2555831	CompoundStatement		236:25:8996:8996	2554481	1					
ANR	2555832	ExpressionStatement	value . data = NULL	1903:12:77303:77321	2554481	0	True				
ANR	2555833	AssignmentExpression	value . data = NULL		2554481	0		=			
ANR	2555834	MemberAccess	value . data		2554481	0					
ANR	2555835	Identifier	value		2554481	0					
ANR	2555836	Identifier	data		2554481	1					
ANR	2555837	Identifier	NULL		2554481	1					
ANR	2555838	ExpressionStatement	string_a [ i ] = value	1904:12:77335:77354	2554481	1	True				
ANR	2555839	AssignmentExpression	string_a [ i ] = value		2554481	0		=			
ANR	2555840	ArrayIndexing	string_a [ i ]		2554481	0					
ANR	2555841	Identifier	string_a		2554481	0					
ANR	2555842	Identifier	i		2554481	1					
ANR	2555843	Identifier	value		2554481	1					
ANR	2555844	ElseStatement	else		2554481	0					
ANR	2555845	CompoundStatement		239:16:9079:9079	2554481	0					
ANR	2555846	ExpressionStatement	"UPD_MM_CPY_APARAM ( udev -> memory , string_a [ i ] , value )"	1906:12:77386:77436	2554481	0	True				
ANR	2555847	CallExpression	"UPD_MM_CPY_APARAM ( udev -> memory , string_a [ i ] , value )"		2554481	0					
ANR	2555848	Callee	UPD_MM_CPY_APARAM		2554481	0					
ANR	2555849	Identifier	UPD_MM_CPY_APARAM		2554481	0					
ANR	2555850	ArgumentList	udev -> memory		2554481	1					
ANR	2555851	Argument	udev -> memory		2554481	0					
ANR	2555852	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2555853	Identifier	udev		2554481	0					
ANR	2555854	Identifier	memory		2554481	1					
ANR	2555855	Argument	string_a [ i ]		2554481	1					
ANR	2555856	ArrayIndexing	string_a [ i ]		2554481	0					
ANR	2555857	Identifier	string_a		2554481	0					
ANR	2555858	Identifier	i		2554481	1					
ANR	2555859	Argument	value		2554481	2					
ANR	2555860	Identifier	value		2554481	0					
ANR	2555861	ForStatement	for ( i = 0 ; countof ( upd_float_a ) > i ; ++ i )		2554481	80					
ANR	2555862	ForInit	i = 0 ;	1912:7:77501:77506	2554481	0	True				
ANR	2555863	AssignmentExpression	i = 0		2554481	0		=			
ANR	2555864	Identifier	i		2554481	0					
ANR	2555865	PrimaryExpression	0		2554481	1					
ANR	2555866	Condition	countof ( upd_float_a ) > i	1912:14:77508:77531	2554481	1	True				
ANR	2555867	RelationalExpression	countof ( upd_float_a ) > i		2554481	0		>			
ANR	2555868	CallExpression	countof ( upd_float_a )		2554481	0					
ANR	2555869	Callee	countof		2554481	0					
ANR	2555870	Identifier	countof		2554481	0					
ANR	2555871	ArgumentList	upd_float_a		2554481	1					
ANR	2555872	Argument	upd_float_a		2554481	0					
ANR	2555873	Identifier	upd_float_a		2554481	0					
ANR	2555874	Identifier	i		2554481	1					
ANR	2555875	UnaryExpression	++ i	1912:40:77534:77536	2554481	2	True				
ANR	2555876	IncDec	++		2554481	0					
ANR	2555877	Identifier	i		2554481	1					
ANR	2555878	CompoundStatement		247:6:9254:9293	2554481	3					
ANR	2555879	IdentifierDeclStatement	gs_param_float_array value = float_a [ i ] ;	1913:6:77547:77586	2554481	0	True				
ANR	2555880	IdentifierDecl	value = float_a [ i ]		2554481	0					
ANR	2555881	IdentifierDeclType	gs_param_float_array		2554481	0					
ANR	2555882	Identifier	value		2554481	1					
ANR	2555883	AssignmentExpression	value = float_a [ i ]		2554481	2		=			
ANR	2555884	Identifier	value		2554481	0					
ANR	2555885	ArrayIndexing	float_a [ i ]		2554481	1					
ANR	2555886	Identifier	float_a		2554481	0					
ANR	2555887	Identifier	i		2554481	1					
ANR	2555888	IfStatement	if ( ! upd_float_a [ i ] )		2554481	1					
ANR	2555889	Condition	! upd_float_a [ i ]	1914:9:77597:77611	2554481	0	True				
ANR	2555890	UnaryOperationExpression	! upd_float_a [ i ]		2554481	0					
ANR	2555891	UnaryOperator	!		2554481	0					
ANR	2555892	ArrayIndexing	upd_float_a [ i ]		2554481	1					
ANR	2555893	Identifier	upd_float_a		2554481	0					
ANR	2555894	Identifier	i		2554481	1					
ANR	2555895	ContinueStatement	continue ;	1914:26:77614:77622	2554481	1	True				
ANR	2555896	ExpressionStatement	"UPD_PARAM_READ ( param_read_float_array , upd_float_a [ i ] , value , udev -> memory )"	1915:6:77630:77702	2554481	2	True				
ANR	2555897	CallExpression	"UPD_PARAM_READ ( param_read_float_array , upd_float_a [ i ] , value , udev -> memory )"		2554481	0					
ANR	2555898	Callee	UPD_PARAM_READ		2554481	0					
ANR	2555899	Identifier	UPD_PARAM_READ		2554481	0					
ANR	2555900	ArgumentList	param_read_float_array		2554481	1					
ANR	2555901	Argument	param_read_float_array		2554481	0					
ANR	2555902	Identifier	param_read_float_array		2554481	0					
ANR	2555903	Argument	upd_float_a [ i ]		2554481	1					
ANR	2555904	ArrayIndexing	upd_float_a [ i ]		2554481	0					
ANR	2555905	Identifier	upd_float_a		2554481	0					
ANR	2555906	Identifier	i		2554481	1					
ANR	2555907	Argument	value		2554481	2					
ANR	2555908	Identifier	value		2554481	0					
ANR	2555909	Argument	udev -> memory		2554481	3					
ANR	2555910	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2555911	Identifier	udev		2554481	0					
ANR	2555912	Identifier	memory		2554481	1					
ANR	2555913	IfStatement	if ( 0 == code )		2554481	3					
ANR	2555914	Condition	0 == code	1916:9:77713:77721	2554481	0	True				
ANR	2555915	EqualityExpression	0 == code		2554481	0		==			
ANR	2555916	PrimaryExpression	0		2554481	0					
ANR	2555917	Identifier	code		2554481	1					
ANR	2555918	CompoundStatement		250:20:9431:9431	2554481	1					
ANR	2555919	IfStatement	if ( 0 <= error )		2554481	0					
ANR	2555920	Condition	0 <= error	1917:12:77738:77747	2554481	0	True				
ANR	2555921	RelationalExpression	0 <= error		2554481	0		<=			
ANR	2555922	PrimaryExpression	0		2554481	0					
ANR	2555923	Identifier	error		2554481	1					
ANR	2555924	ExpressionStatement	error |= UPD_PUT_FLOAT_A	1917:24:77750:77774	2554481	1	True				
ANR	2555925	AssignmentExpression	error |= UPD_PUT_FLOAT_A		2554481	0		|=			
ANR	2555926	Identifier	error		2554481	0					
ANR	2555927	Identifier	UPD_PUT_FLOAT_A		2554481	1					
ANR	2555928	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , float_a [ i ] )"	1918:9:77785:77827	2554481	1	True				
ANR	2555929	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , float_a [ i ] )"		2554481	0					
ANR	2555930	Callee	UPD_MM_DEL_PARAM		2554481	0					
ANR	2555931	Identifier	UPD_MM_DEL_PARAM		2554481	0					
ANR	2555932	ArgumentList	udev -> memory		2554481	1					
ANR	2555933	Argument	udev -> memory		2554481	0					
ANR	2555934	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2555935	Identifier	udev		2554481	0					
ANR	2555936	Identifier	memory		2554481	1					
ANR	2555937	Argument	float_a [ i ]		2554481	1					
ANR	2555938	ArrayIndexing	float_a [ i ]		2554481	0					
ANR	2555939	Identifier	float_a		2554481	0					
ANR	2555940	Identifier	i		2554481	1					
ANR	2555941	IfStatement	if ( ! value . size )		2554481	2					
ANR	2555942	Condition	! value . size	1919:12:77841:77851	2554481	0	True				
ANR	2555943	UnaryOperationExpression	! value . size		2554481	0					
ANR	2555944	UnaryOperator	!		2554481	0					
ANR	2555945	MemberAccess	value . size		2554481	1					
ANR	2555946	Identifier	value		2554481	0					
ANR	2555947	Identifier	size		2554481	1					
ANR	2555948	CompoundStatement		253:25:9561:9561	2554481	1					
ANR	2555949	ExpressionStatement	value . data = NULL	1920:12:77868:77885	2554481	0	True				
ANR	2555950	AssignmentExpression	value . data = NULL		2554481	0		=			
ANR	2555951	MemberAccess	value . data		2554481	0					
ANR	2555952	Identifier	value		2554481	0					
ANR	2555953	Identifier	data		2554481	1					
ANR	2555954	Identifier	NULL		2554481	1					
ANR	2555955	ExpressionStatement	float_a [ i ] = value	1921:12:77899:77917	2554481	1	True				
ANR	2555956	AssignmentExpression	float_a [ i ] = value		2554481	0		=			
ANR	2555957	ArrayIndexing	float_a [ i ]		2554481	0					
ANR	2555958	Identifier	float_a		2554481	0					
ANR	2555959	Identifier	i		2554481	1					
ANR	2555960	Identifier	value		2554481	1					
ANR	2555961	ElseStatement	else		2554481	0					
ANR	2555962	CompoundStatement		256:16:9642:9642	2554481	0					
ANR	2555963	ExpressionStatement	"UPD_MM_CPY_PARAM ( udev -> memory , float_a [ i ] , value )"	1923:12:77949:77997	2554481	0	True				
ANR	2555964	CallExpression	"UPD_MM_CPY_PARAM ( udev -> memory , float_a [ i ] , value )"		2554481	0					
ANR	2555965	Callee	UPD_MM_CPY_PARAM		2554481	0					
ANR	2555966	Identifier	UPD_MM_CPY_PARAM		2554481	0					
ANR	2555967	ArgumentList	udev -> memory		2554481	1					
ANR	2555968	Argument	udev -> memory		2554481	0					
ANR	2555969	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2555970	Identifier	udev		2554481	0					
ANR	2555971	Identifier	memory		2554481	1					
ANR	2555972	Argument	float_a [ i ]		2554481	1					
ANR	2555973	ArrayIndexing	float_a [ i ]		2554481	0					
ANR	2555974	Identifier	float_a		2554481	0					
ANR	2555975	Identifier	i		2554481	1					
ANR	2555976	Argument	value		2554481	2					
ANR	2555977	Identifier	value		2554481	0					
ANR	2555978	IfStatement	if ( 0 < error )		2554481	81					
ANR	2555979	Condition	0 < error	1934:6:78268:78276	2554481	0	True				
ANR	2555980	RelationalExpression	0 < error		2554481	0		<			
ANR	2555981	PrimaryExpression	0		2554481	0					
ANR	2555982	Identifier	error		2554481	1					
ANR	2555983	CompoundStatement		270:6:9995:10019	2554481	1					
ANR	2555984	IdentifierDeclStatement	"int * ip , * ip2 , ncomp , nbits ;"	1936:6:78288:78312	2554481	0	True				
ANR	2555985	IdentifierDecl	* ip		2554481	0					
ANR	2555986	IdentifierDeclType	int *		2554481	0					
ANR	2555987	Identifier	ip		2554481	1					
ANR	2555988	IdentifierDecl	* ip2		2554481	1					
ANR	2555989	IdentifierDeclType	int *		2554481	0					
ANR	2555990	Identifier	ip2		2554481	1					
ANR	2555991	IdentifierDecl	ncomp		2554481	2					
ANR	2555992	IdentifierDeclType	int		2554481	0					
ANR	2555993	Identifier	ncomp		2554481	1					
ANR	2555994	IdentifierDecl	nbits		2554481	3					
ANR	2555995	IdentifierDeclType	int		2554481	0					
ANR	2555996	Identifier	nbits		2554481	1					
ANR	2555997	IfStatement	if ( 6 > int_a [ IA_COLOR_INFO ] . size )		2554481	1					
ANR	2555998	Condition	6 > int_a [ IA_COLOR_INFO ] . size	1938:9:78324:78352	2554481	0	True				
ANR	2555999	RelationalExpression	6 > int_a [ IA_COLOR_INFO ] . size		2554481	0		>			
ANR	2556000	PrimaryExpression	6		2554481	0					
ANR	2556001	MemberAccess	int_a [ IA_COLOR_INFO ] . size		2554481	1					
ANR	2556002	ArrayIndexing	int_a [ IA_COLOR_INFO ]		2554481	0					
ANR	2556003	Identifier	int_a		2554481	0					
ANR	2556004	Identifier	IA_COLOR_INFO		2554481	1					
ANR	2556005	Identifier	size		2554481	1					
ANR	2556006	CompoundStatement		272:40:10062:10062	2554481	1					
ANR	2556007	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , int_a [ IA_COLOR_INFO ] )"	1939:9:78366:78418	2554481	0	True				
ANR	2556008	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , int_a [ IA_COLOR_INFO ] )"		2554481	0					
ANR	2556009	Callee	UPD_MM_DEL_PARAM		2554481	0					
ANR	2556010	Identifier	UPD_MM_DEL_PARAM		2554481	0					
ANR	2556011	ArgumentList	udev -> memory		2554481	1					
ANR	2556012	Argument	udev -> memory		2554481	0					
ANR	2556013	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2556014	Identifier	udev		2554481	0					
ANR	2556015	Identifier	memory		2554481	1					
ANR	2556016	Argument	int_a [ IA_COLOR_INFO ]		2554481	1					
ANR	2556017	ArrayIndexing	int_a [ IA_COLOR_INFO ]		2554481	0					
ANR	2556018	Identifier	int_a		2554481	0					
ANR	2556019	Identifier	IA_COLOR_INFO		2554481	1					
ANR	2556020	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , int_a [ IA_COLOR_INFO ] . data , 6 )"	1940:9:78429:78488	2554481	1	True				
ANR	2556021	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , int_a [ IA_COLOR_INFO ] . data , 6 )"		2554481	0					
ANR	2556022	Callee	UPD_MM_GET_ARRAY		2554481	0					
ANR	2556023	Identifier	UPD_MM_GET_ARRAY		2554481	0					
ANR	2556024	ArgumentList	udev -> memory		2554481	1					
ANR	2556025	Argument	udev -> memory		2554481	0					
ANR	2556026	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2556027	Identifier	udev		2554481	0					
ANR	2556028	Identifier	memory		2554481	1					
ANR	2556029	Argument	int_a [ IA_COLOR_INFO ] . data		2554481	1					
ANR	2556030	MemberAccess	int_a [ IA_COLOR_INFO ] . data		2554481	0					
ANR	2556031	ArrayIndexing	int_a [ IA_COLOR_INFO ]		2554481	0					
ANR	2556032	Identifier	int_a		2554481	0					
ANR	2556033	Identifier	IA_COLOR_INFO		2554481	1					
ANR	2556034	Identifier	data		2554481	1					
ANR	2556035	Argument	6		2554481	2					
ANR	2556036	PrimaryExpression	6		2554481	0					
ANR	2556037	ExpressionStatement	int_a [ IA_COLOR_INFO ] . size = 6	1941:9:78499:78528	2554481	2	True				
ANR	2556038	AssignmentExpression	int_a [ IA_COLOR_INFO ] . size = 6		2554481	0		=			
ANR	2556039	MemberAccess	int_a [ IA_COLOR_INFO ] . size		2554481	0					
ANR	2556040	ArrayIndexing	int_a [ IA_COLOR_INFO ]		2554481	0					
ANR	2556041	Identifier	int_a		2554481	0					
ANR	2556042	Identifier	IA_COLOR_INFO		2554481	1					
ANR	2556043	Identifier	size		2554481	1					
ANR	2556044	PrimaryExpression	6		2554481	1					
ANR	2556045	ExpressionStatement	ip = ( int * ) upd_cast ( int_a [ IA_COLOR_INFO ] . data )	1943:6:78544:78592	2554481	2	True				
ANR	2556046	AssignmentExpression	ip = ( int * ) upd_cast ( int_a [ IA_COLOR_INFO ] . data )		2554481	0		=			
ANR	2556047	Identifier	ip		2554481	0					
ANR	2556048	CastExpression	( int * ) upd_cast ( int_a [ IA_COLOR_INFO ] . data )		2554481	1					
ANR	2556049	CastTarget	int *		2554481	0					
ANR	2556050	CallExpression	upd_cast ( int_a [ IA_COLOR_INFO ] . data )		2554481	1					
ANR	2556051	Callee	upd_cast		2554481	0					
ANR	2556052	Identifier	upd_cast		2554481	0					
ANR	2556053	ArgumentList	int_a [ IA_COLOR_INFO ] . data		2554481	1					
ANR	2556054	Argument	int_a [ IA_COLOR_INFO ] . data		2554481	0					
ANR	2556055	MemberAccess	int_a [ IA_COLOR_INFO ] . data		2554481	0					
ANR	2556056	ArrayIndexing	int_a [ IA_COLOR_INFO ]		2554481	0					
ANR	2556057	Identifier	int_a		2554481	0					
ANR	2556058	Identifier	IA_COLOR_INFO		2554481	1					
ANR	2556059	Identifier	data		2554481	1					
ANR	2556060	IfStatement	if ( 0 == ip [ 0 ] )		2554481	3					
ANR	2556061	Condition	0 == ip [ 0 ]	1945:9:78604:78613	2554481	0	True				
ANR	2556062	EqualityExpression	0 == ip [ 0 ]		2554481	0		==			
ANR	2556063	PrimaryExpression	0		2554481	0					
ANR	2556064	ArrayIndexing	ip [ 0 ]		2554481	1					
ANR	2556065	Identifier	ip		2554481	0					
ANR	2556066	PrimaryExpression	0		2554481	1					
ANR	2556067	CompoundStatement		279:21:10323:10323	2554481	1					
ANR	2556068	SwitchStatement	switch ( choice [ C_MAPPER ] )		2554481	0					
ANR	2556069	Condition	choice [ C_MAPPER ]	1946:16:78669:78684	2554481	0	True				
ANR	2556070	ArrayIndexing	choice [ C_MAPPER ]		2554481	0					
ANR	2556071	Identifier	choice		2554481	0					
ANR	2556072	Identifier	C_MAPPER		2554481	1					
ANR	2556073	CompoundStatement		280:34:10394:10394	2554481	1					
ANR	2556074	Label	case MAP_GRAY :	1947:12:78701:78714	2554481	0	True				
ANR	2556075	Identifier	MAP_GRAY		2554481	0					
ANR	2556076	ExpressionStatement	ip [ 0 ] = 1	1947:31:78720:78729	2554481	1	True				
ANR	2556077	AssignmentExpression	ip [ 0 ] = 1		2554481	0		=			
ANR	2556078	ArrayIndexing	ip [ 0 ]		2554481	0					
ANR	2556079	Identifier	ip		2554481	0					
ANR	2556080	PrimaryExpression	0		2554481	1					
ANR	2556081	PrimaryExpression	1		2554481	1					
ANR	2556082	BreakStatement	break ;	1947:42:78731:78736	2554481	2	True				
ANR	2556083	Label	case MAP_RGBW :	1948:12:78750:78763	2554481	3	True				
ANR	2556084	Identifier	MAP_RGBW		2554481	0					
ANR	2556085	ExpressionStatement	ip [ 0 ] = 3	1948:31:78769:78778	2554481	4	True				
ANR	2556086	AssignmentExpression	ip [ 0 ] = 3		2554481	0		=			
ANR	2556087	ArrayIndexing	ip [ 0 ]		2554481	0					
ANR	2556088	Identifier	ip		2554481	0					
ANR	2556089	PrimaryExpression	0		2554481	1					
ANR	2556090	PrimaryExpression	3		2554481	1					
ANR	2556091	BreakStatement	break ;	1948:42:78780:78785	2554481	5	True				
ANR	2556092	Label	case MAP_RGB :	1949:12:78799:78811	2554481	6	True				
ANR	2556093	Identifier	MAP_RGB		2554481	0					
ANR	2556094	ExpressionStatement	ip [ 0 ] = 3	1949:31:78818:78827	2554481	7	True				
ANR	2556095	AssignmentExpression	ip [ 0 ] = 3		2554481	0		=			
ANR	2556096	ArrayIndexing	ip [ 0 ]		2554481	0					
ANR	2556097	Identifier	ip		2554481	0					
ANR	2556098	PrimaryExpression	0		2554481	1					
ANR	2556099	PrimaryExpression	3		2554481	1					
ANR	2556100	BreakStatement	break ;	1949:42:78829:78834	2554481	8	True				
ANR	2556101	Label	case MAP_CMYK :	1950:12:78848:78861	2554481	9	True				
ANR	2556102	Identifier	MAP_CMYK		2554481	0					
ANR	2556103	ExpressionStatement	ip [ 0 ] = 4	1950:31:78867:78876	2554481	10	True				
ANR	2556104	AssignmentExpression	ip [ 0 ] = 4		2554481	0		=			
ANR	2556105	ArrayIndexing	ip [ 0 ]		2554481	0					
ANR	2556106	Identifier	ip		2554481	0					
ANR	2556107	PrimaryExpression	0		2554481	1					
ANR	2556108	PrimaryExpression	4		2554481	1					
ANR	2556109	BreakStatement	break ;	1950:42:78878:78883	2554481	11	True				
ANR	2556110	Label	case MAP_CMYKGEN :	1951:12:78897:78913	2554481	12	True				
ANR	2556111	Identifier	MAP_CMYKGEN		2554481	0					
ANR	2556112	ExpressionStatement	ip [ 0 ] = 4	1951:31:78916:78925	2554481	13	True				
ANR	2556113	AssignmentExpression	ip [ 0 ] = 4		2554481	0		=			
ANR	2556114	ArrayIndexing	ip [ 0 ]		2554481	0					
ANR	2556115	Identifier	ip		2554481	0					
ANR	2556116	PrimaryExpression	0		2554481	1					
ANR	2556117	PrimaryExpression	4		2554481	1					
ANR	2556118	BreakStatement	break ;	1951:42:78927:78932	2554481	14	True				
ANR	2556119	Label	case MAP_RGBOV :	1952:12:78946:78960	2554481	15	True				
ANR	2556120	Identifier	MAP_RGBOV		2554481	0					
ANR	2556121	ExpressionStatement	ip [ 0 ] = 3	1952:31:78965:78974	2554481	16	True				
ANR	2556122	AssignmentExpression	ip [ 0 ] = 3		2554481	0		=			
ANR	2556123	ArrayIndexing	ip [ 0 ]		2554481	0					
ANR	2556124	Identifier	ip		2554481	0					
ANR	2556125	PrimaryExpression	0		2554481	1					
ANR	2556126	PrimaryExpression	3		2554481	1					
ANR	2556127	BreakStatement	break ;	1952:42:78976:78981	2554481	17	True				
ANR	2556128	Label	case MAP_RGBNOV :	1953:12:78995:79010	2554481	18	True				
ANR	2556129	Identifier	MAP_RGBNOV		2554481	0					
ANR	2556130	ExpressionStatement	ip [ 0 ] = 3	1953:31:79014:79023	2554481	19	True				
ANR	2556131	AssignmentExpression	ip [ 0 ] = 3		2554481	0		=			
ANR	2556132	ArrayIndexing	ip [ 0 ]		2554481	0					
ANR	2556133	Identifier	ip		2554481	0					
ANR	2556134	PrimaryExpression	0		2554481	1					
ANR	2556135	PrimaryExpression	3		2554481	1					
ANR	2556136	BreakStatement	break ;	1953:42:79025:79030	2554481	20	True				
ANR	2556137	Label	default :	1954:12:79044:79051	2554481	21	True				
ANR	2556138	Identifier	default		2554481	0					
ANR	2556139	ExpressionStatement	ip [ 0 ] = color_info . num_components	1954:31:79063:79096	2554481	22	True				
ANR	2556140	AssignmentExpression	ip [ 0 ] = color_info . num_components		2554481	0		=			
ANR	2556141	ArrayIndexing	ip [ 0 ]		2554481	0					
ANR	2556142	Identifier	ip		2554481	0					
ANR	2556143	PrimaryExpression	0		2554481	1					
ANR	2556144	MemberAccess	color_info . num_components		2554481	1					
ANR	2556145	Identifier	color_info		2554481	0					
ANR	2556146	Identifier	num_components		2554481	1					
ANR	2556147	BreakStatement	break ;	1954:66:79098:79103	2554481	23	True				
ANR	2556148	SwitchStatement	switch ( choice [ C_MAPPER ] )		2554481	4					
ANR	2556149	Condition	choice [ C_MAPPER ]	1958:13:79188:79203	2554481	0	True				
ANR	2556150	ArrayIndexing	choice [ C_MAPPER ]		2554481	0					
ANR	2556151	Identifier	choice		2554481	0					
ANR	2556152	Identifier	C_MAPPER		2554481	1					
ANR	2556153	CompoundStatement		292:31:10913:10913	2554481	1					
ANR	2556154	Label	case MAP_GRAY :	1959:9:79217:79230	2554481	0	True				
ANR	2556155	Identifier	MAP_GRAY		2554481	0					
ANR	2556156	ExpressionStatement	ncomp = 1	1959:28:79236:79245	2554481	1	True				
ANR	2556157	AssignmentExpression	ncomp = 1		2554481	0		=			
ANR	2556158	Identifier	ncomp		2554481	0					
ANR	2556159	PrimaryExpression	1		2554481	1					
ANR	2556160	BreakStatement	break ;	1959:39:79247:79252	2554481	2	True				
ANR	2556161	Label	case MAP_RGBW :	1960:9:79263:79276	2554481	3	True				
ANR	2556162	Identifier	MAP_RGBW		2554481	0					
ANR	2556163	ExpressionStatement	ncomp = 4	1960:28:79282:79291	2554481	4	True				
ANR	2556164	AssignmentExpression	ncomp = 4		2554481	0		=			
ANR	2556165	Identifier	ncomp		2554481	0					
ANR	2556166	PrimaryExpression	4		2554481	1					
ANR	2556167	BreakStatement	break ;	1960:39:79293:79298	2554481	5	True				
ANR	2556168	Label	case MAP_RGB :	1961:9:79309:79321	2554481	6	True				
ANR	2556169	Identifier	MAP_RGB		2554481	0					
ANR	2556170	ExpressionStatement	ncomp = 3	1961:28:79328:79337	2554481	7	True				
ANR	2556171	AssignmentExpression	ncomp = 3		2554481	0		=			
ANR	2556172	Identifier	ncomp		2554481	0					
ANR	2556173	PrimaryExpression	3		2554481	1					
ANR	2556174	BreakStatement	break ;	1961:39:79339:79344	2554481	8	True				
ANR	2556175	Label	case MAP_CMYK :	1962:9:79355:79368	2554481	9	True				
ANR	2556176	Identifier	MAP_CMYK		2554481	0					
ANR	2556177	ExpressionStatement	ncomp = 4	1962:28:79374:79383	2554481	10	True				
ANR	2556178	AssignmentExpression	ncomp = 4		2554481	0		=			
ANR	2556179	Identifier	ncomp		2554481	0					
ANR	2556180	PrimaryExpression	4		2554481	1					
ANR	2556181	BreakStatement	break ;	1962:39:79385:79390	2554481	11	True				
ANR	2556182	Label	case MAP_CMYKGEN :	1963:9:79401:79417	2554481	12	True				
ANR	2556183	Identifier	MAP_CMYKGEN		2554481	0					
ANR	2556184	ExpressionStatement	ncomp = 4	1963:28:79420:79429	2554481	13	True				
ANR	2556185	AssignmentExpression	ncomp = 4		2554481	0		=			
ANR	2556186	Identifier	ncomp		2554481	0					
ANR	2556187	PrimaryExpression	4		2554481	1					
ANR	2556188	BreakStatement	break ;	1963:39:79431:79436	2554481	14	True				
ANR	2556189	Label	case MAP_RGBOV :	1964:9:79447:79461	2554481	15	True				
ANR	2556190	Identifier	MAP_RGBOV		2554481	0					
ANR	2556191	ExpressionStatement	ncomp = 4	1964:28:79466:79475	2554481	16	True				
ANR	2556192	AssignmentExpression	ncomp = 4		2554481	0		=			
ANR	2556193	Identifier	ncomp		2554481	0					
ANR	2556194	PrimaryExpression	4		2554481	1					
ANR	2556195	BreakStatement	break ;	1964:39:79477:79482	2554481	17	True				
ANR	2556196	Label	case MAP_RGBNOV :	1965:9:79493:79508	2554481	18	True				
ANR	2556197	Identifier	MAP_RGBNOV		2554481	0					
ANR	2556198	ExpressionStatement	ncomp = 4	1965:28:79512:79521	2554481	19	True				
ANR	2556199	AssignmentExpression	ncomp = 4		2554481	0		=			
ANR	2556200	Identifier	ncomp		2554481	0					
ANR	2556201	PrimaryExpression	4		2554481	1					
ANR	2556202	BreakStatement	break ;	1965:39:79523:79528	2554481	20	True				
ANR	2556203	Label	default :	1966:9:79539:79546	2554481	21	True				
ANR	2556204	Identifier	default		2554481	0					
ANR	2556205	ExpressionStatement	ncomp = ip [ 0 ]	1966:28:79558:79571	2554481	22	True				
ANR	2556206	AssignmentExpression	ncomp = ip [ 0 ]		2554481	0		=			
ANR	2556207	Identifier	ncomp		2554481	0					
ANR	2556208	ArrayIndexing	ip [ 0 ]		2554481	1					
ANR	2556209	Identifier	ip		2554481	0					
ANR	2556210	PrimaryExpression	0		2554481	1					
ANR	2556211	BreakStatement	break ;	1966:43:79573:79578	2554481	23	True				
ANR	2556212	IfStatement	if ( UPD_CMAP_MAX < ncomp )		2554481	5					
ANR	2556213	Condition	UPD_CMAP_MAX < ncomp	1968:9:79597:79616	2554481	0	True				
ANR	2556214	RelationalExpression	UPD_CMAP_MAX < ncomp		2554481	0		<			
ANR	2556215	Identifier	UPD_CMAP_MAX		2554481	0					
ANR	2556216	Identifier	ncomp		2554481	1					
ANR	2556217	ExpressionStatement	ncomp = UPD_CMAP_MAX	1968:31:79619:79639	2554481	1	True				
ANR	2556218	AssignmentExpression	ncomp = UPD_CMAP_MAX		2554481	0		=			
ANR	2556219	Identifier	ncomp		2554481	0					
ANR	2556220	Identifier	UPD_CMAP_MAX		2554481	1					
ANR	2556221	IfStatement	if ( ncomp > int_a [ IA_COMPBITS ] . size )		2554481	6					
ANR	2556222	Condition	ncomp > int_a [ IA_COMPBITS ] . size	1970:9:79651:79681	2554481	0	True				
ANR	2556223	RelationalExpression	ncomp > int_a [ IA_COMPBITS ] . size		2554481	0		>			
ANR	2556224	Identifier	ncomp		2554481	0					
ANR	2556225	MemberAccess	int_a [ IA_COMPBITS ] . size		2554481	1					
ANR	2556226	ArrayIndexing	int_a [ IA_COMPBITS ]		2554481	0					
ANR	2556227	Identifier	int_a		2554481	0					
ANR	2556228	Identifier	IA_COMPBITS		2554481	1					
ANR	2556229	Identifier	size		2554481	1					
ANR	2556230	CompoundStatement		304:42:11391:11391	2554481	1					
ANR	2556231	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , ip2 , ncomp )"	1971:9:79723:79764	2554481	0	True				
ANR	2556232	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , ip2 , ncomp )"		2554481	0					
ANR	2556233	Callee	UPD_MM_GET_ARRAY		2554481	0					
ANR	2556234	Identifier	UPD_MM_GET_ARRAY		2554481	0					
ANR	2556235	ArgumentList	udev -> memory		2554481	1					
ANR	2556236	Argument	udev -> memory		2554481	0					
ANR	2556237	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2556238	Identifier	udev		2554481	0					
ANR	2556239	Identifier	memory		2554481	1					
ANR	2556240	Argument	ip2		2554481	1					
ANR	2556241	Identifier	ip2		2554481	0					
ANR	2556242	Argument	ncomp		2554481	2					
ANR	2556243	Identifier	ncomp		2554481	0					
ANR	2556244	ExpressionStatement	nbits = 32 / ncomp	1972:9:79775:79793	2554481	1	True				
ANR	2556245	AssignmentExpression	nbits = 32 / ncomp		2554481	0		=			
ANR	2556246	Identifier	nbits		2554481	0					
ANR	2556247	MultiplicativeExpression	32 / ncomp		2554481	1		/			
ANR	2556248	PrimaryExpression	32		2554481	0					
ANR	2556249	Identifier	ncomp		2554481	1					
ANR	2556250	IfStatement	if ( 8 < nbits )		2554481	2					
ANR	2556251	Condition	8 < nbits	1973:12:79807:79815	2554481	0	True				
ANR	2556252	RelationalExpression	8 < nbits		2554481	0		<			
ANR	2556253	PrimaryExpression	8		2554481	0					
ANR	2556254	Identifier	nbits		2554481	1					
ANR	2556255	ExpressionStatement	nbits = 8	1973:23:79818:79827	2554481	1	True				
ANR	2556256	AssignmentExpression	nbits = 8		2554481	0		=			
ANR	2556257	Identifier	nbits		2554481	0					
ANR	2556258	PrimaryExpression	8		2554481	1					
ANR	2556259	ForStatement	for ( i = 0 ; i < ncomp ; ++ i )		2554481	3					
ANR	2556260	ForInit	i = 0 ;	1974:13:79842:79847	2554481	0	True				
ANR	2556261	AssignmentExpression	i = 0		2554481	0		=			
ANR	2556262	Identifier	i		2554481	0					
ANR	2556263	PrimaryExpression	0		2554481	1					
ANR	2556264	Condition	i < ncomp	1974:20:79849:79857	2554481	1	True				
ANR	2556265	RelationalExpression	i < ncomp		2554481	0		<			
ANR	2556266	Identifier	i		2554481	0					
ANR	2556267	Identifier	ncomp		2554481	1					
ANR	2556268	UnaryExpression	++ i	1974:31:79860:79862	2554481	2	True				
ANR	2556269	IncDec	++		2554481	0					
ANR	2556270	Identifier	i		2554481	1					
ANR	2556271	ExpressionStatement	ip2 [ i ] = nbits	1974:36:79865:79879	2554481	3	True				
ANR	2556272	AssignmentExpression	ip2 [ i ] = nbits		2554481	0		=			
ANR	2556273	ArrayIndexing	ip2 [ i ]		2554481	0					
ANR	2556274	Identifier	ip2		2554481	0					
ANR	2556275	Identifier	i		2554481	1					
ANR	2556276	Identifier	nbits		2554481	1					
ANR	2556277	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , int_a [ IA_COMPBITS ] )"	1975:9:79890:79940	2554481	4	True				
ANR	2556278	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , int_a [ IA_COMPBITS ] )"		2554481	0					
ANR	2556279	Callee	UPD_MM_DEL_PARAM		2554481	0					
ANR	2556280	Identifier	UPD_MM_DEL_PARAM		2554481	0					
ANR	2556281	ArgumentList	udev -> memory		2554481	1					
ANR	2556282	Argument	udev -> memory		2554481	0					
ANR	2556283	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2556284	Identifier	udev		2554481	0					
ANR	2556285	Identifier	memory		2554481	1					
ANR	2556286	Argument	int_a [ IA_COMPBITS ]		2554481	1					
ANR	2556287	ArrayIndexing	int_a [ IA_COMPBITS ]		2554481	0					
ANR	2556288	Identifier	int_a		2554481	0					
ANR	2556289	Identifier	IA_COMPBITS		2554481	1					
ANR	2556290	ExpressionStatement	int_a [ IA_COMPBITS ] . data = ip2	1976:9:79951:79980	2554481	5	True				
ANR	2556291	AssignmentExpression	int_a [ IA_COMPBITS ] . data = ip2		2554481	0		=			
ANR	2556292	MemberAccess	int_a [ IA_COMPBITS ] . data		2554481	0					
ANR	2556293	ArrayIndexing	int_a [ IA_COMPBITS ]		2554481	0					
ANR	2556294	Identifier	int_a		2554481	0					
ANR	2556295	Identifier	IA_COMPBITS		2554481	1					
ANR	2556296	Identifier	data		2554481	1					
ANR	2556297	Identifier	ip2		2554481	1					
ANR	2556298	ExpressionStatement	int_a [ IA_COMPBITS ] . size = ncomp	1977:9:79991:80022	2554481	6	True				
ANR	2556299	AssignmentExpression	int_a [ IA_COMPBITS ] . size = ncomp		2554481	0		=			
ANR	2556300	MemberAccess	int_a [ IA_COMPBITS ] . size		2554481	0					
ANR	2556301	ArrayIndexing	int_a [ IA_COMPBITS ]		2554481	0					
ANR	2556302	Identifier	int_a		2554481	0					
ANR	2556303	Identifier	IA_COMPBITS		2554481	1					
ANR	2556304	Identifier	size		2554481	1					
ANR	2556305	Identifier	ncomp		2554481	1					
ANR	2556306	IfStatement	if ( ncomp > int_a [ IA_COMPSHIFT ] . size )		2554481	7					
ANR	2556307	Condition	ncomp > int_a [ IA_COMPSHIFT ] . size	1980:9:80106:80137	2554481	0	True				
ANR	2556308	RelationalExpression	ncomp > int_a [ IA_COMPSHIFT ] . size		2554481	0		>			
ANR	2556309	Identifier	ncomp		2554481	0					
ANR	2556310	MemberAccess	int_a [ IA_COMPSHIFT ] . size		2554481	1					
ANR	2556311	ArrayIndexing	int_a [ IA_COMPSHIFT ]		2554481	0					
ANR	2556312	Identifier	int_a		2554481	0					
ANR	2556313	Identifier	IA_COMPSHIFT		2554481	1					
ANR	2556314	Identifier	size		2554481	1					
ANR	2556315	CompoundStatement		314:43:11847:11847	2554481	1					
ANR	2556316	ExpressionStatement	nbits = 0	1981:9:80181:80190	2554481	0	True				
ANR	2556317	AssignmentExpression	nbits = 0		2554481	0		=			
ANR	2556318	Identifier	nbits		2554481	0					
ANR	2556319	PrimaryExpression	0		2554481	1					
ANR	2556320	ForStatement	for ( i = 0 ; i < ncomp ; ++ i )		2554481	1					
ANR	2556321	ForInit	i = 0 ;	1982:13:80205:80210	2554481	0	True				
ANR	2556322	AssignmentExpression	i = 0		2554481	0		=			
ANR	2556323	Identifier	i		2554481	0					
ANR	2556324	PrimaryExpression	0		2554481	1					
ANR	2556325	Condition	i < ncomp	1982:20:80212:80220	2554481	1	True				
ANR	2556326	RelationalExpression	i < ncomp		2554481	0		<			
ANR	2556327	Identifier	i		2554481	0					
ANR	2556328	Identifier	ncomp		2554481	1					
ANR	2556329	UnaryExpression	++ i	1982:31:80223:80225	2554481	2	True				
ANR	2556330	IncDec	++		2554481	0					
ANR	2556331	Identifier	i		2554481	1					
ANR	2556332	ExpressionStatement	nbits += int_a [ IA_COMPBITS ] . data [ i ]	1982:36:80228:80263	2554481	3	True				
ANR	2556333	AssignmentExpression	nbits += int_a [ IA_COMPBITS ] . data [ i ]		2554481	0		+=			
ANR	2556334	Identifier	nbits		2554481	0					
ANR	2556335	ArrayIndexing	int_a [ IA_COMPBITS ] . data [ i ]		2554481	1					
ANR	2556336	MemberAccess	int_a [ IA_COMPBITS ] . data		2554481	0					
ANR	2556337	ArrayIndexing	int_a [ IA_COMPBITS ]		2554481	0					
ANR	2556338	Identifier	int_a		2554481	0					
ANR	2556339	Identifier	IA_COMPBITS		2554481	1					
ANR	2556340	Identifier	data		2554481	1					
ANR	2556341	Identifier	i		2554481	1					
ANR	2556342	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , ip2 , ncomp )"	1983:9:80274:80315	2554481	2	True				
ANR	2556343	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , ip2 , ncomp )"		2554481	0					
ANR	2556344	Callee	UPD_MM_GET_ARRAY		2554481	0					
ANR	2556345	Identifier	UPD_MM_GET_ARRAY		2554481	0					
ANR	2556346	ArgumentList	udev -> memory		2554481	1					
ANR	2556347	Argument	udev -> memory		2554481	0					
ANR	2556348	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2556349	Identifier	udev		2554481	0					
ANR	2556350	Identifier	memory		2554481	1					
ANR	2556351	Argument	ip2		2554481	1					
ANR	2556352	Identifier	ip2		2554481	0					
ANR	2556353	Argument	ncomp		2554481	2					
ANR	2556354	Identifier	ncomp		2554481	0					
ANR	2556355	ForStatement	for ( i = 0 ; i < ncomp ; ++ i )		2554481	3					
ANR	2556356	ForInit	i = 0 ;	1984:13:80330:80335	2554481	0	True				
ANR	2556357	AssignmentExpression	i = 0		2554481	0		=			
ANR	2556358	Identifier	i		2554481	0					
ANR	2556359	PrimaryExpression	0		2554481	1					
ANR	2556360	Condition	i < ncomp	1984:20:80337:80345	2554481	1	True				
ANR	2556361	RelationalExpression	i < ncomp		2554481	0		<			
ANR	2556362	Identifier	i		2554481	0					
ANR	2556363	Identifier	ncomp		2554481	1					
ANR	2556364	UnaryExpression	++ i	1984:31:80348:80350	2554481	2	True				
ANR	2556365	IncDec	++		2554481	0					
ANR	2556366	Identifier	i		2554481	1					
ANR	2556367	CompoundStatement		318:36:12060:12060	2554481	3					
ANR	2556368	ExpressionStatement	ip2 [ i ] = nbits - int_a [ IA_COMPBITS ] . data [ i ]	1985:12:80367:80410	2554481	0	True				
ANR	2556369	AssignmentExpression	ip2 [ i ] = nbits - int_a [ IA_COMPBITS ] . data [ i ]		2554481	0		=			
ANR	2556370	ArrayIndexing	ip2 [ i ]		2554481	0					
ANR	2556371	Identifier	ip2		2554481	0					
ANR	2556372	Identifier	i		2554481	1					
ANR	2556373	AdditiveExpression	nbits - int_a [ IA_COMPBITS ] . data [ i ]		2554481	1		-			
ANR	2556374	Identifier	nbits		2554481	0					
ANR	2556375	ArrayIndexing	int_a [ IA_COMPBITS ] . data [ i ]		2554481	1					
ANR	2556376	MemberAccess	int_a [ IA_COMPBITS ] . data		2554481	0					
ANR	2556377	ArrayIndexing	int_a [ IA_COMPBITS ]		2554481	0					
ANR	2556378	Identifier	int_a		2554481	0					
ANR	2556379	Identifier	IA_COMPBITS		2554481	1					
ANR	2556380	Identifier	data		2554481	1					
ANR	2556381	Identifier	i		2554481	1					
ANR	2556382	ExpressionStatement	nbits -= int_a [ IA_COMPBITS ] . data [ i ]	1986:12:80424:80459	2554481	1	True				
ANR	2556383	AssignmentExpression	nbits -= int_a [ IA_COMPBITS ] . data [ i ]		2554481	0		-=			
ANR	2556384	Identifier	nbits		2554481	0					
ANR	2556385	ArrayIndexing	int_a [ IA_COMPBITS ] . data [ i ]		2554481	1					
ANR	2556386	MemberAccess	int_a [ IA_COMPBITS ] . data		2554481	0					
ANR	2556387	ArrayIndexing	int_a [ IA_COMPBITS ]		2554481	0					
ANR	2556388	Identifier	int_a		2554481	0					
ANR	2556389	Identifier	IA_COMPBITS		2554481	1					
ANR	2556390	Identifier	data		2554481	1					
ANR	2556391	Identifier	i		2554481	1					
ANR	2556392	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , int_a [ IA_COMPSHIFT ] )"	1988:9:80481:80532	2554481	4	True				
ANR	2556393	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , int_a [ IA_COMPSHIFT ] )"		2554481	0					
ANR	2556394	Callee	UPD_MM_DEL_PARAM		2554481	0					
ANR	2556395	Identifier	UPD_MM_DEL_PARAM		2554481	0					
ANR	2556396	ArgumentList	udev -> memory		2554481	1					
ANR	2556397	Argument	udev -> memory		2554481	0					
ANR	2556398	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2556399	Identifier	udev		2554481	0					
ANR	2556400	Identifier	memory		2554481	1					
ANR	2556401	Argument	int_a [ IA_COMPSHIFT ]		2554481	1					
ANR	2556402	ArrayIndexing	int_a [ IA_COMPSHIFT ]		2554481	0					
ANR	2556403	Identifier	int_a		2554481	0					
ANR	2556404	Identifier	IA_COMPSHIFT		2554481	1					
ANR	2556405	ExpressionStatement	int_a [ IA_COMPSHIFT ] . data = ip2	1989:9:80543:80573	2554481	5	True				
ANR	2556406	AssignmentExpression	int_a [ IA_COMPSHIFT ] . data = ip2		2554481	0		=			
ANR	2556407	MemberAccess	int_a [ IA_COMPSHIFT ] . data		2554481	0					
ANR	2556408	ArrayIndexing	int_a [ IA_COMPSHIFT ]		2554481	0					
ANR	2556409	Identifier	int_a		2554481	0					
ANR	2556410	Identifier	IA_COMPSHIFT		2554481	1					
ANR	2556411	Identifier	data		2554481	1					
ANR	2556412	Identifier	ip2		2554481	1					
ANR	2556413	ExpressionStatement	int_a [ IA_COMPSHIFT ] . size = ncomp	1990:9:80584:80616	2554481	6	True				
ANR	2556414	AssignmentExpression	int_a [ IA_COMPSHIFT ] . size = ncomp		2554481	0		=			
ANR	2556415	MemberAccess	int_a [ IA_COMPSHIFT ] . size		2554481	0					
ANR	2556416	ArrayIndexing	int_a [ IA_COMPSHIFT ]		2554481	0					
ANR	2556417	Identifier	int_a		2554481	0					
ANR	2556418	Identifier	IA_COMPSHIFT		2554481	1					
ANR	2556419	Identifier	size		2554481	1					
ANR	2556420	Identifier	ncomp		2554481	1					
ANR	2556421	IfStatement	if ( 0 == ip [ 1 ] )		2554481	8					
ANR	2556422	Condition	0 == ip [ 1 ]	1993:9:80703:80712	2554481	0	True				
ANR	2556423	EqualityExpression	0 == ip [ 1 ]		2554481	0		==			
ANR	2556424	PrimaryExpression	0		2554481	0					
ANR	2556425	ArrayIndexing	ip [ 1 ]		2554481	1					
ANR	2556426	Identifier	ip		2554481	0					
ANR	2556427	PrimaryExpression	1		2554481	1					
ANR	2556428	CompoundStatement		327:21:12422:12422	2554481	1					
ANR	2556429	ExpressionStatement	nbits = 0	1994:9:80757:80766	2554481	0	True				
ANR	2556430	AssignmentExpression	nbits = 0		2554481	0		=			
ANR	2556431	Identifier	nbits		2554481	0					
ANR	2556432	PrimaryExpression	0		2554481	1					
ANR	2556433	ForStatement	for ( i = 0 ; i < ncomp ; ++ i )		2554481	1					
ANR	2556434	ForInit	i = 0 ;	1995:13:80781:80786	2554481	0	True				
ANR	2556435	AssignmentExpression	i = 0		2554481	0		=			
ANR	2556436	Identifier	i		2554481	0					
ANR	2556437	PrimaryExpression	0		2554481	1					
ANR	2556438	Condition	i < ncomp	1995:20:80788:80796	2554481	1	True				
ANR	2556439	RelationalExpression	i < ncomp		2554481	0		<			
ANR	2556440	Identifier	i		2554481	0					
ANR	2556441	Identifier	ncomp		2554481	1					
ANR	2556442	UnaryExpression	++ i	1995:31:80799:80801	2554481	2	True				
ANR	2556443	IncDec	++		2554481	0					
ANR	2556444	Identifier	i		2554481	1					
ANR	2556445	CompoundStatement		329:36:12511:12511	2554481	3					
ANR	2556446	IfStatement	if ( nbits < ( int_a [ IA_COMPBITS ] . data [ i ] + int_a [ IA_COMPSHIFT ] . data [ i ] ) )		2554481	0					
ANR	2556447	Condition	nbits < ( int_a [ IA_COMPBITS ] . data [ i ] + int_a [ IA_COMPSHIFT ] . data [ i ] )	1996:15:80821:80910	2554481	0	True				
ANR	2556448	RelationalExpression	nbits < ( int_a [ IA_COMPBITS ] . data [ i ] + int_a [ IA_COMPSHIFT ] . data [ i ] )		2554481	0		<			
ANR	2556449	Identifier	nbits		2554481	0					
ANR	2556450	AdditiveExpression	int_a [ IA_COMPBITS ] . data [ i ] + int_a [ IA_COMPSHIFT ] . data [ i ]		2554481	1		+			
ANR	2556451	ArrayIndexing	int_a [ IA_COMPBITS ] . data [ i ]		2554481	0					
ANR	2556452	MemberAccess	int_a [ IA_COMPBITS ] . data		2554481	0					
ANR	2556453	ArrayIndexing	int_a [ IA_COMPBITS ]		2554481	0					
ANR	2556454	Identifier	int_a		2554481	0					
ANR	2556455	Identifier	IA_COMPBITS		2554481	1					
ANR	2556456	Identifier	data		2554481	1					
ANR	2556457	Identifier	i		2554481	1					
ANR	2556458	ArrayIndexing	int_a [ IA_COMPSHIFT ] . data [ i ]		2554481	1					
ANR	2556459	MemberAccess	int_a [ IA_COMPSHIFT ] . data		2554481	0					
ANR	2556460	ArrayIndexing	int_a [ IA_COMPSHIFT ]		2554481	0					
ANR	2556461	Identifier	int_a		2554481	0					
ANR	2556462	Identifier	IA_COMPSHIFT		2554481	1					
ANR	2556463	Identifier	data		2554481	1					
ANR	2556464	Identifier	i		2554481	1					
ANR	2556465	ExpressionStatement	nbits = int_a [ IA_COMPBITS ] . data [ i ] + int_a [ IA_COMPSHIFT ] . data [ i ]	1998:15:80928:81017	2554481	1	True				
ANR	2556466	AssignmentExpression	nbits = int_a [ IA_COMPBITS ] . data [ i ] + int_a [ IA_COMPSHIFT ] . data [ i ]		2554481	0		=			
ANR	2556467	Identifier	nbits		2554481	0					
ANR	2556468	AdditiveExpression	int_a [ IA_COMPBITS ] . data [ i ] + int_a [ IA_COMPSHIFT ] . data [ i ]		2554481	1		+			
ANR	2556469	ArrayIndexing	int_a [ IA_COMPBITS ] . data [ i ]		2554481	0					
ANR	2556470	MemberAccess	int_a [ IA_COMPBITS ] . data		2554481	0					
ANR	2556471	ArrayIndexing	int_a [ IA_COMPBITS ]		2554481	0					
ANR	2556472	Identifier	int_a		2554481	0					
ANR	2556473	Identifier	IA_COMPBITS		2554481	1					
ANR	2556474	Identifier	data		2554481	1					
ANR	2556475	Identifier	i		2554481	1					
ANR	2556476	ArrayIndexing	int_a [ IA_COMPSHIFT ] . data [ i ]		2554481	1					
ANR	2556477	MemberAccess	int_a [ IA_COMPSHIFT ] . data		2554481	0					
ANR	2556478	ArrayIndexing	int_a [ IA_COMPSHIFT ]		2554481	0					
ANR	2556479	Identifier	int_a		2554481	0					
ANR	2556480	Identifier	IA_COMPSHIFT		2554481	1					
ANR	2556481	Identifier	data		2554481	1					
ANR	2556482	Identifier	i		2554481	1					
ANR	2556483	IfStatement	if ( 1 >= nbits )		2554481	2					
ANR	2556484	Condition	1 >= nbits	2001:18:81048:81057	2554481	0	True				
ANR	2556485	RelationalExpression	1 >= nbits		2554481	0		>=			
ANR	2556486	PrimaryExpression	1		2554481	0					
ANR	2556487	Identifier	nbits		2554481	1					
ANR	2556488	ExpressionStatement	nbits = 1	2001:30:81060:81070	2554481	1	True				
ANR	2556489	AssignmentExpression	nbits = 1		2554481	0		=			
ANR	2556490	Identifier	nbits		2554481	0					
ANR	2556491	PrimaryExpression	1		2554481	1					
ANR	2556492	ElseStatement	else		2554481	0					
ANR	2556493	IfStatement	if ( 2 >= nbits )		2554481	0					
ANR	2556494	Condition	2 >= nbits	2002:18:81090:81099	2554481	0	True				
ANR	2556495	RelationalExpression	2 >= nbits		2554481	0		>=			
ANR	2556496	PrimaryExpression	2		2554481	0					
ANR	2556497	Identifier	nbits		2554481	1					
ANR	2556498	ExpressionStatement	nbits = 2	2002:30:81102:81112	2554481	1	True				
ANR	2556499	AssignmentExpression	nbits = 2		2554481	0		=			
ANR	2556500	Identifier	nbits		2554481	0					
ANR	2556501	PrimaryExpression	2		2554481	1					
ANR	2556502	ElseStatement	else		2554481	0					
ANR	2556503	IfStatement	if ( 4 >= nbits )		2554481	0					
ANR	2556504	Condition	4 >= nbits	2003:18:81132:81141	2554481	0	True				
ANR	2556505	RelationalExpression	4 >= nbits		2554481	0		>=			
ANR	2556506	PrimaryExpression	4		2554481	0					
ANR	2556507	Identifier	nbits		2554481	1					
ANR	2556508	ExpressionStatement	nbits = 4	2003:30:81144:81154	2554481	1	True				
ANR	2556509	AssignmentExpression	nbits = 4		2554481	0		=			
ANR	2556510	Identifier	nbits		2554481	0					
ANR	2556511	PrimaryExpression	4		2554481	1					
ANR	2556512	ElseStatement	else		2554481	0					
ANR	2556513	IfStatement	if ( 8 >= nbits )		2554481	0					
ANR	2556514	Condition	8 >= nbits	2004:18:81174:81183	2554481	0	True				
ANR	2556515	RelationalExpression	8 >= nbits		2554481	0		>=			
ANR	2556516	PrimaryExpression	8		2554481	0					
ANR	2556517	Identifier	nbits		2554481	1					
ANR	2556518	ExpressionStatement	nbits = 8	2004:30:81186:81196	2554481	1	True				
ANR	2556519	AssignmentExpression	nbits = 8		2554481	0		=			
ANR	2556520	Identifier	nbits		2554481	0					
ANR	2556521	PrimaryExpression	8		2554481	1					
ANR	2556522	ElseStatement	else		2554481	0					
ANR	2556523	IfStatement	if ( 16 >= nbits )		2554481	0					
ANR	2556524	Condition	16 >= nbits	2005:17:81215:81225	2554481	0	True				
ANR	2556525	RelationalExpression	16 >= nbits		2554481	0		>=			
ANR	2556526	PrimaryExpression	16		2554481	0					
ANR	2556527	Identifier	nbits		2554481	1					
ANR	2556528	ExpressionStatement	nbits = 16	2005:30:81228:81238	2554481	1	True				
ANR	2556529	AssignmentExpression	nbits = 16		2554481	0		=			
ANR	2556530	Identifier	nbits		2554481	0					
ANR	2556531	PrimaryExpression	16		2554481	1					
ANR	2556532	ElseStatement	else		2554481	0					
ANR	2556533	IfStatement	if ( 24 >= nbits )		2554481	0					
ANR	2556534	Condition	24 >= nbits	2006:17:81257:81267	2554481	0	True				
ANR	2556535	RelationalExpression	24 >= nbits		2554481	0		>=			
ANR	2556536	PrimaryExpression	24		2554481	0					
ANR	2556537	Identifier	nbits		2554481	1					
ANR	2556538	ExpressionStatement	nbits = 24	2006:30:81270:81280	2554481	1	True				
ANR	2556539	AssignmentExpression	nbits = 24		2554481	0		=			
ANR	2556540	Identifier	nbits		2554481	0					
ANR	2556541	PrimaryExpression	24		2554481	1					
ANR	2556542	ElseStatement	else		2554481	0					
ANR	2556543	ExpressionStatement	nbits = 32	2007:30:81312:81322	2554481	0	True				
ANR	2556544	AssignmentExpression	nbits = 32		2554481	0		=			
ANR	2556545	Identifier	nbits		2554481	0					
ANR	2556546	PrimaryExpression	32		2554481	1					
ANR	2556547	ExpressionStatement	ip [ 1 ] = nbits	2009:9:81334:81347	2554481	3	True				
ANR	2556548	AssignmentExpression	ip [ 1 ] = nbits		2554481	0		=			
ANR	2556549	ArrayIndexing	ip [ 1 ]		2554481	0					
ANR	2556550	Identifier	ip		2554481	0					
ANR	2556551	PrimaryExpression	1		2554481	1					
ANR	2556552	Identifier	nbits		2554481	1					
ANR	2556553	IfStatement	if ( 0 == ip [ 2 ] )		2554481	9					
ANR	2556554	Condition	0 == ip [ 2 ]	2013:9:81414:81423	2554481	0	True				
ANR	2556555	EqualityExpression	0 == ip [ 2 ]		2554481	0		==			
ANR	2556556	PrimaryExpression	0		2554481	0					
ANR	2556557	ArrayIndexing	ip [ 2 ]		2554481	1					
ANR	2556558	Identifier	ip		2554481	0					
ANR	2556559	PrimaryExpression	2		2554481	1					
ANR	2556560	CompoundStatement		347:21:13133:13133	2554481	1					
ANR	2556561	ExpressionStatement	nbits = 0	2014:9:81465:81474	2554481	0	True				
ANR	2556562	AssignmentExpression	nbits = 0		2554481	0		=			
ANR	2556563	Identifier	nbits		2554481	0					
ANR	2556564	PrimaryExpression	0		2554481	1					
ANR	2556565	ForStatement	for ( i = 0 ; i < ncomp ; ++ i )		2554481	1					
ANR	2556566	ForInit	i = 0 ;	2015:13:81489:81494	2554481	0	True				
ANR	2556567	AssignmentExpression	i = 0		2554481	0		=			
ANR	2556568	Identifier	i		2554481	0					
ANR	2556569	PrimaryExpression	0		2554481	1					
ANR	2556570	Condition	i < ncomp	2015:20:81496:81504	2554481	1	True				
ANR	2556571	RelationalExpression	i < ncomp		2554481	0		<			
ANR	2556572	Identifier	i		2554481	0					
ANR	2556573	Identifier	ncomp		2554481	1					
ANR	2556574	UnaryExpression	++ i	2015:31:81507:81509	2554481	2	True				
ANR	2556575	IncDec	++		2554481	0					
ANR	2556576	Identifier	i		2554481	1					
ANR	2556577	IfStatement	if ( nbits < int_a [ IA_COMPBITS ] . data [ i ] )		2554481	3					
ANR	2556578	Condition	nbits < int_a [ IA_COMPBITS ] . data [ i ]	2015:39:81515:81548	2554481	0	True				
ANR	2556579	RelationalExpression	nbits < int_a [ IA_COMPBITS ] . data [ i ]		2554481	0		<			
ANR	2556580	Identifier	nbits		2554481	0					
ANR	2556581	ArrayIndexing	int_a [ IA_COMPBITS ] . data [ i ]		2554481	1					
ANR	2556582	MemberAccess	int_a [ IA_COMPBITS ] . data		2554481	0					
ANR	2556583	ArrayIndexing	int_a [ IA_COMPBITS ]		2554481	0					
ANR	2556584	Identifier	int_a		2554481	0					
ANR	2556585	Identifier	IA_COMPBITS		2554481	1					
ANR	2556586	Identifier	data		2554481	1					
ANR	2556587	Identifier	i		2554481	1					
ANR	2556588	ExpressionStatement	nbits = int_a [ IA_COMPBITS ] . data [ i ]	2016:12:81563:81597	2554481	1	True				
ANR	2556589	AssignmentExpression	nbits = int_a [ IA_COMPBITS ] . data [ i ]		2554481	0		=			
ANR	2556590	Identifier	nbits		2554481	0					
ANR	2556591	ArrayIndexing	int_a [ IA_COMPBITS ] . data [ i ]		2554481	1					
ANR	2556592	MemberAccess	int_a [ IA_COMPBITS ] . data		2554481	0					
ANR	2556593	ArrayIndexing	int_a [ IA_COMPBITS ]		2554481	0					
ANR	2556594	Identifier	int_a		2554481	0					
ANR	2556595	Identifier	IA_COMPBITS		2554481	1					
ANR	2556596	Identifier	data		2554481	1					
ANR	2556597	Identifier	i		2554481	1					
ANR	2556598	IfStatement	if ( nbits > 8 )		2554481	2					
ANR	2556599	Condition	nbits > 8	2017:12:81611:81619	2554481	0	True				
ANR	2556600	RelationalExpression	nbits > 8		2554481	0		>			
ANR	2556601	Identifier	nbits		2554481	0					
ANR	2556602	PrimaryExpression	8		2554481	1					
ANR	2556603	ExpressionStatement	nbits = 8	2017:23:81622:81631	2554481	1	True				
ANR	2556604	AssignmentExpression	nbits = 8		2554481	0		=			
ANR	2556605	Identifier	nbits		2554481	0					
ANR	2556606	PrimaryExpression	8		2554481	1					
ANR	2556607	ExpressionStatement	ip [ 2 ] = ( 1 << nbits ) - 1	2018:9:81642:81666	2554481	3	True				
ANR	2556608	AssignmentExpression	ip [ 2 ] = ( 1 << nbits ) - 1		2554481	0		=			
ANR	2556609	ArrayIndexing	ip [ 2 ]		2554481	0					
ANR	2556610	Identifier	ip		2554481	0					
ANR	2556611	PrimaryExpression	2		2554481	1					
ANR	2556612	AdditiveExpression	( 1 << nbits ) - 1		2554481	1		-			
ANR	2556613	ShiftExpression	1 << nbits		2554481	0		<<			
ANR	2556614	PrimaryExpression	1		2554481	0					
ANR	2556615	Identifier	nbits		2554481	1					
ANR	2556616	PrimaryExpression	1		2554481	1					
ANR	2556617	IfStatement	if ( 0 == ip [ 3 ] && 1 < ip [ 0 ] )		2554481	10					
ANR	2556618	Condition	0 == ip [ 3 ] && 1 < ip [ 0 ]	2021:9:81729:81751	2554481	0	True				
ANR	2556619	AndExpression	0 == ip [ 3 ] && 1 < ip [ 0 ]		2554481	0		&&			
ANR	2556620	EqualityExpression	0 == ip [ 3 ]		2554481	0		==			
ANR	2556621	PrimaryExpression	0		2554481	0					
ANR	2556622	ArrayIndexing	ip [ 3 ]		2554481	1					
ANR	2556623	Identifier	ip		2554481	0					
ANR	2556624	PrimaryExpression	3		2554481	1					
ANR	2556625	RelationalExpression	1 < ip [ 0 ]		2554481	1		<			
ANR	2556626	PrimaryExpression	1		2554481	0					
ANR	2556627	ArrayIndexing	ip [ 0 ]		2554481	1					
ANR	2556628	Identifier	ip		2554481	0					
ANR	2556629	PrimaryExpression	0		2554481	1					
ANR	2556630	CompoundStatement		355:34:13461:13461	2554481	1					
ANR	2556631	ExpressionStatement	nbits = 0	2022:9:81788:81797	2554481	0	True				
ANR	2556632	AssignmentExpression	nbits = 0		2554481	0		=			
ANR	2556633	Identifier	nbits		2554481	0					
ANR	2556634	PrimaryExpression	0		2554481	1					
ANR	2556635	ForStatement	for ( i = 0 ; i < ip [ 0 ] ; ++ i )		2554481	1					
ANR	2556636	ForInit	i = 0 ;	2023:13:81812:81817	2554481	0	True				
ANR	2556637	AssignmentExpression	i = 0		2554481	0		=			
ANR	2556638	Identifier	i		2554481	0					
ANR	2556639	PrimaryExpression	0		2554481	1					
ANR	2556640	Condition	i < ip [ 0 ]	2023:20:81819:81827	2554481	1	True				
ANR	2556641	RelationalExpression	i < ip [ 0 ]		2554481	0		<			
ANR	2556642	Identifier	i		2554481	0					
ANR	2556643	ArrayIndexing	ip [ 0 ]		2554481	1					
ANR	2556644	Identifier	ip		2554481	0					
ANR	2556645	PrimaryExpression	0		2554481	1					
ANR	2556646	UnaryExpression	++ i	2023:31:81830:81832	2554481	2	True				
ANR	2556647	IncDec	++		2554481	0					
ANR	2556648	Identifier	i		2554481	1					
ANR	2556649	ExpressionStatement	nbits += int_a [ IA_COMPBITS ] . data [ i ]	2023:36:81835:81870	2554481	3	True				
ANR	2556650	AssignmentExpression	nbits += int_a [ IA_COMPBITS ] . data [ i ]		2554481	0		+=			
ANR	2556651	Identifier	nbits		2554481	0					
ANR	2556652	ArrayIndexing	int_a [ IA_COMPBITS ] . data [ i ]		2554481	1					
ANR	2556653	MemberAccess	int_a [ IA_COMPBITS ] . data		2554481	0					
ANR	2556654	ArrayIndexing	int_a [ IA_COMPBITS ]		2554481	0					
ANR	2556655	Identifier	int_a		2554481	0					
ANR	2556656	Identifier	IA_COMPBITS		2554481	1					
ANR	2556657	Identifier	data		2554481	1					
ANR	2556658	Identifier	i		2554481	1					
ANR	2556659	IfStatement	if ( nbits > 8 )		2554481	2					
ANR	2556660	Condition	nbits > 8	2024:12:81884:81892	2554481	0	True				
ANR	2556661	RelationalExpression	nbits > 8		2554481	0		>			
ANR	2556662	Identifier	nbits		2554481	0					
ANR	2556663	PrimaryExpression	8		2554481	1					
ANR	2556664	ExpressionStatement	nbits = 8	2024:23:81895:81904	2554481	1	True				
ANR	2556665	AssignmentExpression	nbits = 8		2554481	0		=			
ANR	2556666	Identifier	nbits		2554481	0					
ANR	2556667	PrimaryExpression	8		2554481	1					
ANR	2556668	ExpressionStatement	ip [ 3 ] = ( 1 << nbits ) - 1	2025:9:81915:81939	2554481	3	True				
ANR	2556669	AssignmentExpression	ip [ 3 ] = ( 1 << nbits ) - 1		2554481	0		=			
ANR	2556670	ArrayIndexing	ip [ 3 ]		2554481	0					
ANR	2556671	Identifier	ip		2554481	0					
ANR	2556672	PrimaryExpression	3		2554481	1					
ANR	2556673	AdditiveExpression	( 1 << nbits ) - 1		2554481	1		-			
ANR	2556674	ShiftExpression	1 << nbits		2554481	0		<<			
ANR	2556675	PrimaryExpression	1		2554481	0					
ANR	2556676	Identifier	nbits		2554481	1					
ANR	2556677	PrimaryExpression	1		2554481	1					
ANR	2556678	IfStatement	if ( 0 == ip [ 4 ] )		2554481	11					
ANR	2556679	Condition	0 == ip [ 4 ]	2028:9:82010:82019	2554481	0	True				
ANR	2556680	EqualityExpression	0 == ip [ 4 ]		2554481	0		==			
ANR	2556681	PrimaryExpression	0		2554481	0					
ANR	2556682	ArrayIndexing	ip [ 4 ]		2554481	1					
ANR	2556683	Identifier	ip		2554481	0					
ANR	2556684	PrimaryExpression	4		2554481	1					
ANR	2556685	CompoundStatement		362:21:13729:13729	2554481	1					
ANR	2556686	ExpressionStatement	nbits = 0	2029:9:82049:82058	2554481	0	True				
ANR	2556687	AssignmentExpression	nbits = 0		2554481	0		=			
ANR	2556688	Identifier	nbits		2554481	0					
ANR	2556689	PrimaryExpression	0		2554481	1					
ANR	2556690	ForStatement	for ( i = 0 ; i < ncomp ; ++ i )		2554481	1					
ANR	2556691	ForInit	i = 0 ;	2030:13:82073:82078	2554481	0	True				
ANR	2556692	AssignmentExpression	i = 0		2554481	0		=			
ANR	2556693	Identifier	i		2554481	0					
ANR	2556694	PrimaryExpression	0		2554481	1					
ANR	2556695	Condition	i < ncomp	2030:20:82080:82088	2554481	1	True				
ANR	2556696	RelationalExpression	i < ncomp		2554481	0		<			
ANR	2556697	Identifier	i		2554481	0					
ANR	2556698	Identifier	ncomp		2554481	1					
ANR	2556699	UnaryExpression	++ i	2030:31:82091:82093	2554481	2	True				
ANR	2556700	IncDec	++		2554481	0					
ANR	2556701	Identifier	i		2554481	1					
ANR	2556702	IfStatement	if ( nbits < int_a [ IA_COMPBITS ] . data [ i ] )		2554481	3					
ANR	2556703	Condition	nbits < int_a [ IA_COMPBITS ] . data [ i ]	2030:39:82099:82132	2554481	0	True				
ANR	2556704	RelationalExpression	nbits < int_a [ IA_COMPBITS ] . data [ i ]		2554481	0		<			
ANR	2556705	Identifier	nbits		2554481	0					
ANR	2556706	ArrayIndexing	int_a [ IA_COMPBITS ] . data [ i ]		2554481	1					
ANR	2556707	MemberAccess	int_a [ IA_COMPBITS ] . data		2554481	0					
ANR	2556708	ArrayIndexing	int_a [ IA_COMPBITS ]		2554481	0					
ANR	2556709	Identifier	int_a		2554481	0					
ANR	2556710	Identifier	IA_COMPBITS		2554481	1					
ANR	2556711	Identifier	data		2554481	1					
ANR	2556712	Identifier	i		2554481	1					
ANR	2556713	ExpressionStatement	nbits = int_a [ IA_COMPBITS ] . data [ i ]	2031:12:82147:82181	2554481	1	True				
ANR	2556714	AssignmentExpression	nbits = int_a [ IA_COMPBITS ] . data [ i ]		2554481	0		=			
ANR	2556715	Identifier	nbits		2554481	0					
ANR	2556716	ArrayIndexing	int_a [ IA_COMPBITS ] . data [ i ]		2554481	1					
ANR	2556717	MemberAccess	int_a [ IA_COMPBITS ] . data		2554481	0					
ANR	2556718	ArrayIndexing	int_a [ IA_COMPBITS ]		2554481	0					
ANR	2556719	Identifier	int_a		2554481	0					
ANR	2556720	Identifier	IA_COMPBITS		2554481	1					
ANR	2556721	Identifier	data		2554481	1					
ANR	2556722	Identifier	i		2554481	1					
ANR	2556723	IfStatement	if ( 2 < nbits )		2554481	2					
ANR	2556724	Condition	2 < nbits	2032:12:82195:82203	2554481	0	True				
ANR	2556725	RelationalExpression	2 < nbits		2554481	0		<			
ANR	2556726	PrimaryExpression	2		2554481	0					
ANR	2556727	Identifier	nbits		2554481	1					
ANR	2556728	ExpressionStatement	ip [ 4 ] = 256	2032:23:82206:82217	2554481	1	True				
ANR	2556729	AssignmentExpression	ip [ 4 ] = 256		2554481	0		=			
ANR	2556730	ArrayIndexing	ip [ 4 ]		2554481	0					
ANR	2556731	Identifier	ip		2554481	0					
ANR	2556732	PrimaryExpression	4		2554481	1					
ANR	2556733	PrimaryExpression	256		2554481	1					
ANR	2556734	ElseStatement	else		2554481	0					
ANR	2556735	ExpressionStatement	ip [ 4 ] = 2	2033:23:82242:82251	2554481	0	True				
ANR	2556736	AssignmentExpression	ip [ 4 ] = 2		2554481	0		=			
ANR	2556737	ArrayIndexing	ip [ 4 ]		2554481	0					
ANR	2556738	Identifier	ip		2554481	0					
ANR	2556739	PrimaryExpression	4		2554481	1					
ANR	2556740	PrimaryExpression	2		2554481	1					
ANR	2556741	IfStatement	if ( 0 == ip [ 5 ] && 1 < ip [ 0 ] )		2554481	12					
ANR	2556742	Condition	0 == ip [ 5 ] && 1 < ip [ 0 ]	2036:9:82302:82324	2554481	0	True				
ANR	2556743	AndExpression	0 == ip [ 5 ] && 1 < ip [ 0 ]		2554481	0		&&			
ANR	2556744	EqualityExpression	0 == ip [ 5 ]		2554481	0		==			
ANR	2556745	PrimaryExpression	0		2554481	0					
ANR	2556746	ArrayIndexing	ip [ 5 ]		2554481	1					
ANR	2556747	Identifier	ip		2554481	0					
ANR	2556748	PrimaryExpression	5		2554481	1					
ANR	2556749	RelationalExpression	1 < ip [ 0 ]		2554481	1		<			
ANR	2556750	PrimaryExpression	1		2554481	0					
ANR	2556751	ArrayIndexing	ip [ 0 ]		2554481	1					
ANR	2556752	Identifier	ip		2554481	0					
ANR	2556753	PrimaryExpression	0		2554481	1					
ANR	2556754	CompoundStatement		370:34:14034:14034	2554481	1					
ANR	2556755	ExpressionStatement	nbits = 0	2037:9:82355:82364	2554481	0	True				
ANR	2556756	AssignmentExpression	nbits = 0		2554481	0		=			
ANR	2556757	Identifier	nbits		2554481	0					
ANR	2556758	PrimaryExpression	0		2554481	1					
ANR	2556759	ForStatement	for ( i = 0 ; i < ncomp ; ++ i )		2554481	1					
ANR	2556760	ForInit	i = 0 ;	2038:13:82379:82384	2554481	0	True				
ANR	2556761	AssignmentExpression	i = 0		2554481	0		=			
ANR	2556762	Identifier	i		2554481	0					
ANR	2556763	PrimaryExpression	0		2554481	1					
ANR	2556764	Condition	i < ncomp	2038:20:82386:82394	2554481	1	True				
ANR	2556765	RelationalExpression	i < ncomp		2554481	0		<			
ANR	2556766	Identifier	i		2554481	0					
ANR	2556767	Identifier	ncomp		2554481	1					
ANR	2556768	UnaryExpression	++ i	2038:31:82397:82399	2554481	2	True				
ANR	2556769	IncDec	++		2554481	0					
ANR	2556770	Identifier	i		2554481	1					
ANR	2556771	IfStatement	if ( nbits < int_a [ IA_COMPBITS ] . data [ i ] )		2554481	3					
ANR	2556772	Condition	nbits < int_a [ IA_COMPBITS ] . data [ i ]	2038:39:82405:82438	2554481	0	True				
ANR	2556773	RelationalExpression	nbits < int_a [ IA_COMPBITS ] . data [ i ]		2554481	0		<			
ANR	2556774	Identifier	nbits		2554481	0					
ANR	2556775	ArrayIndexing	int_a [ IA_COMPBITS ] . data [ i ]		2554481	1					
ANR	2556776	MemberAccess	int_a [ IA_COMPBITS ] . data		2554481	0					
ANR	2556777	ArrayIndexing	int_a [ IA_COMPBITS ]		2554481	0					
ANR	2556778	Identifier	int_a		2554481	0					
ANR	2556779	Identifier	IA_COMPBITS		2554481	1					
ANR	2556780	Identifier	data		2554481	1					
ANR	2556781	Identifier	i		2554481	1					
ANR	2556782	ExpressionStatement	nbits = int_a [ IA_COMPBITS ] . data [ i ]	2039:12:82453:82487	2554481	1	True				
ANR	2556783	AssignmentExpression	nbits = int_a [ IA_COMPBITS ] . data [ i ]		2554481	0		=			
ANR	2556784	Identifier	nbits		2554481	0					
ANR	2556785	ArrayIndexing	int_a [ IA_COMPBITS ] . data [ i ]		2554481	1					
ANR	2556786	MemberAccess	int_a [ IA_COMPBITS ] . data		2554481	0					
ANR	2556787	ArrayIndexing	int_a [ IA_COMPBITS ]		2554481	0					
ANR	2556788	Identifier	int_a		2554481	0					
ANR	2556789	Identifier	IA_COMPBITS		2554481	1					
ANR	2556790	Identifier	data		2554481	1					
ANR	2556791	Identifier	i		2554481	1					
ANR	2556792	IfStatement	if ( 2 < nbits )		2554481	2					
ANR	2556793	Condition	2 < nbits	2040:12:82501:82509	2554481	0	True				
ANR	2556794	RelationalExpression	2 < nbits		2554481	0		<			
ANR	2556795	PrimaryExpression	2		2554481	0					
ANR	2556796	Identifier	nbits		2554481	1					
ANR	2556797	ExpressionStatement	ip [ 5 ] = 256	2040:23:82512:82523	2554481	1	True				
ANR	2556798	AssignmentExpression	ip [ 5 ] = 256		2554481	0		=			
ANR	2556799	ArrayIndexing	ip [ 5 ]		2554481	0					
ANR	2556800	Identifier	ip		2554481	0					
ANR	2556801	PrimaryExpression	5		2554481	1					
ANR	2556802	PrimaryExpression	256		2554481	1					
ANR	2556803	ElseStatement	else		2554481	0					
ANR	2556804	ExpressionStatement	ip [ 5 ] = 2	2041:23:82548:82557	2554481	0	True				
ANR	2556805	AssignmentExpression	ip [ 5 ] = 2		2554481	0		=			
ANR	2556806	ArrayIndexing	ip [ 5 ]		2554481	0					
ANR	2556807	Identifier	ip		2554481	0					
ANR	2556808	PrimaryExpression	5		2554481	1					
ANR	2556809	PrimaryExpression	2		2554481	1					
ANR	2556810	ExpressionStatement	udev -> color_info . num_components = ip [ 0 ]	2044:6:82619:82658	2554481	13	True				
ANR	2556811	AssignmentExpression	udev -> color_info . num_components = ip [ 0 ]		2554481	0		=			
ANR	2556812	MemberAccess	udev -> color_info . num_components		2554481	0					
ANR	2556813	PtrMemberAccess	udev -> color_info		2554481	0					
ANR	2556814	Identifier	udev		2554481	0					
ANR	2556815	Identifier	color_info		2554481	1					
ANR	2556816	Identifier	num_components		2554481	1					
ANR	2556817	ArrayIndexing	ip [ 0 ]		2554481	1					
ANR	2556818	Identifier	ip		2554481	0					
ANR	2556819	PrimaryExpression	0		2554481	1					
ANR	2556820	ExpressionStatement	udev -> color_info . depth = ip [ 1 ]	2045:6:82666:82705	2554481	14	True				
ANR	2556821	AssignmentExpression	udev -> color_info . depth = ip [ 1 ]		2554481	0		=			
ANR	2556822	MemberAccess	udev -> color_info . depth		2554481	0					
ANR	2556823	PtrMemberAccess	udev -> color_info		2554481	0					
ANR	2556824	Identifier	udev		2554481	0					
ANR	2556825	Identifier	color_info		2554481	1					
ANR	2556826	Identifier	depth		2554481	1					
ANR	2556827	ArrayIndexing	ip [ 1 ]		2554481	1					
ANR	2556828	Identifier	ip		2554481	0					
ANR	2556829	PrimaryExpression	1		2554481	1					
ANR	2556830	ExpressionStatement	udev -> color_info . max_gray = ( gx_color_value ) ip [ 2 ]	2046:6:82713:82769	2554481	15	True				
ANR	2556831	AssignmentExpression	udev -> color_info . max_gray = ( gx_color_value ) ip [ 2 ]		2554481	0		=			
ANR	2556832	MemberAccess	udev -> color_info . max_gray		2554481	0					
ANR	2556833	PtrMemberAccess	udev -> color_info		2554481	0					
ANR	2556834	Identifier	udev		2554481	0					
ANR	2556835	Identifier	color_info		2554481	1					
ANR	2556836	Identifier	max_gray		2554481	1					
ANR	2556837	CastExpression	( gx_color_value ) ip [ 2 ]		2554481	1					
ANR	2556838	CastTarget	gx_color_value		2554481	0					
ANR	2556839	ArrayIndexing	ip [ 2 ]		2554481	1					
ANR	2556840	Identifier	ip		2554481	0					
ANR	2556841	PrimaryExpression	2		2554481	1					
ANR	2556842	ExpressionStatement	udev -> color_info . max_color = ( gx_color_value ) ip [ 3 ]	2047:6:82777:82833	2554481	16	True				
ANR	2556843	AssignmentExpression	udev -> color_info . max_color = ( gx_color_value ) ip [ 3 ]		2554481	0		=			
ANR	2556844	MemberAccess	udev -> color_info . max_color		2554481	0					
ANR	2556845	PtrMemberAccess	udev -> color_info		2554481	0					
ANR	2556846	Identifier	udev		2554481	0					
ANR	2556847	Identifier	color_info		2554481	1					
ANR	2556848	Identifier	max_color		2554481	1					
ANR	2556849	CastExpression	( gx_color_value ) ip [ 3 ]		2554481	1					
ANR	2556850	CastTarget	gx_color_value		2554481	0					
ANR	2556851	ArrayIndexing	ip [ 3 ]		2554481	1					
ANR	2556852	Identifier	ip		2554481	0					
ANR	2556853	PrimaryExpression	3		2554481	1					
ANR	2556854	ExpressionStatement	udev -> color_info . dither_grays = ( gx_color_value ) ip [ 4 ]	2048:6:82841:82897	2554481	17	True				
ANR	2556855	AssignmentExpression	udev -> color_info . dither_grays = ( gx_color_value ) ip [ 4 ]		2554481	0		=			
ANR	2556856	MemberAccess	udev -> color_info . dither_grays		2554481	0					
ANR	2556857	PtrMemberAccess	udev -> color_info		2554481	0					
ANR	2556858	Identifier	udev		2554481	0					
ANR	2556859	Identifier	color_info		2554481	1					
ANR	2556860	Identifier	dither_grays		2554481	1					
ANR	2556861	CastExpression	( gx_color_value ) ip [ 4 ]		2554481	1					
ANR	2556862	CastTarget	gx_color_value		2554481	0					
ANR	2556863	ArrayIndexing	ip [ 4 ]		2554481	1					
ANR	2556864	Identifier	ip		2554481	0					
ANR	2556865	PrimaryExpression	4		2554481	1					
ANR	2556866	ExpressionStatement	udev -> color_info . dither_colors = ( gx_color_value ) ip [ 5 ]	2049:6:82905:82961	2554481	18	True				
ANR	2556867	AssignmentExpression	udev -> color_info . dither_colors = ( gx_color_value ) ip [ 5 ]		2554481	0		=			
ANR	2556868	MemberAccess	udev -> color_info . dither_colors		2554481	0					
ANR	2556869	PtrMemberAccess	udev -> color_info		2554481	0					
ANR	2556870	Identifier	udev		2554481	0					
ANR	2556871	Identifier	color_info		2554481	1					
ANR	2556872	Identifier	dither_colors		2554481	1					
ANR	2556873	CastExpression	( gx_color_value ) ip [ 5 ]		2554481	1					
ANR	2556874	CastTarget	gx_color_value		2554481	0					
ANR	2556875	ArrayIndexing	ip [ 5 ]		2554481	1					
ANR	2556876	Identifier	ip		2554481	0					
ANR	2556877	PrimaryExpression	5		2554481	1					
ANR	2556878	IfStatement	"if ( ( 0 == param_read_float_array ( plist , ""HWResolution"" , & mfa ) ) && ( 2 == mfa . size ) && ( 0 != mfa . data ) )"		2554481	19					
ANR	2556879	Condition	"( 0 == param_read_float_array ( plist , ""HWResolution"" , & mfa ) ) && ( 2 == mfa . size ) && ( 0 != mfa . data )"	2055:9:83084:83186	2554481	0	True				
ANR	2556880	AndExpression	"( 0 == param_read_float_array ( plist , ""HWResolution"" , & mfa ) ) && ( 2 == mfa . size ) && ( 0 != mfa . data )"		2554481	0		&&			
ANR	2556881	EqualityExpression	"0 == param_read_float_array ( plist , ""HWResolution"" , & mfa )"		2554481	0		==			
ANR	2556882	PrimaryExpression	0		2554481	0					
ANR	2556883	CallExpression	"param_read_float_array ( plist , ""HWResolution"" , & mfa )"		2554481	1					
ANR	2556884	Callee	param_read_float_array		2554481	0					
ANR	2556885	Identifier	param_read_float_array		2554481	0					
ANR	2556886	ArgumentList	plist		2554481	1					
ANR	2556887	Argument	plist		2554481	0					
ANR	2556888	Identifier	plist		2554481	0					
ANR	2556889	Argument	"""HWResolution"""		2554481	1					
ANR	2556890	PrimaryExpression	"""HWResolution"""		2554481	0					
ANR	2556891	Argument	& mfa		2554481	2					
ANR	2556892	UnaryOperationExpression	& mfa		2554481	0					
ANR	2556893	UnaryOperator	&		2554481	0					
ANR	2556894	Identifier	mfa		2554481	1					
ANR	2556895	AndExpression	( 2 == mfa . size ) && ( 0 != mfa . data )		2554481	1		&&			
ANR	2556896	EqualityExpression	2 == mfa . size		2554481	0		==			
ANR	2556897	PrimaryExpression	2		2554481	0					
ANR	2556898	MemberAccess	mfa . size		2554481	1					
ANR	2556899	Identifier	mfa		2554481	0					
ANR	2556900	Identifier	size		2554481	1					
ANR	2556901	EqualityExpression	0 != mfa . data		2554481	1		!=			
ANR	2556902	PrimaryExpression	0		2554481	0					
ANR	2556903	MemberAccess	mfa . data		2554481	1					
ANR	2556904	Identifier	mfa		2554481	0					
ANR	2556905	Identifier	data		2554481	1					
ANR	2556906	CompoundStatement		390:45:14896:14896	2554481	1					
ANR	2556907	ExpressionStatement	udev -> HWResolution [ 0 ] = mfa . data [ 0 ]	2057:9:83200:83235	2554481	0	True				
ANR	2556908	AssignmentExpression	udev -> HWResolution [ 0 ] = mfa . data [ 0 ]		2554481	0		=			
ANR	2556909	ArrayIndexing	udev -> HWResolution [ 0 ]		2554481	0					
ANR	2556910	PtrMemberAccess	udev -> HWResolution		2554481	0					
ANR	2556911	Identifier	udev		2554481	0					
ANR	2556912	Identifier	HWResolution		2554481	1					
ANR	2556913	PrimaryExpression	0		2554481	1					
ANR	2556914	ArrayIndexing	mfa . data [ 0 ]		2554481	1					
ANR	2556915	MemberAccess	mfa . data		2554481	0					
ANR	2556916	Identifier	mfa		2554481	0					
ANR	2556917	Identifier	data		2554481	1					
ANR	2556918	PrimaryExpression	0		2554481	1					
ANR	2556919	ExpressionStatement	udev -> HWResolution [ 1 ] = mfa . data [ 1 ]	2058:9:83246:83281	2554481	1	True				
ANR	2556920	AssignmentExpression	udev -> HWResolution [ 1 ] = mfa . data [ 1 ]		2554481	0		=			
ANR	2556921	ArrayIndexing	udev -> HWResolution [ 1 ]		2554481	0					
ANR	2556922	PtrMemberAccess	udev -> HWResolution		2554481	0					
ANR	2556923	Identifier	udev		2554481	0					
ANR	2556924	Identifier	HWResolution		2554481	1					
ANR	2556925	PrimaryExpression	1		2554481	1					
ANR	2556926	ArrayIndexing	mfa . data [ 1 ]		2554481	1					
ANR	2556927	MemberAccess	mfa . data		2554481	0					
ANR	2556928	Identifier	mfa		2554481	0					
ANR	2556929	Identifier	data		2554481	1					
ANR	2556930	PrimaryExpression	1		2554481	1					
ANR	2556931	IfStatement	"if ( ( 0 == param_read_float_array ( plist , "".HWMargins"" , & mfa ) ) && ( 4 == mfa . size ) && ( 0 != mfa . data ) )"		2554481	20					
ANR	2556932	Condition	"( 0 == param_read_float_array ( plist , "".HWMargins"" , & mfa ) ) && ( 4 == mfa . size ) && ( 0 != mfa . data )"	2061:9:83301:83401	2554481	0	True				
ANR	2556933	AndExpression	"( 0 == param_read_float_array ( plist , "".HWMargins"" , & mfa ) ) && ( 4 == mfa . size ) && ( 0 != mfa . data )"		2554481	0		&&			
ANR	2556934	EqualityExpression	"0 == param_read_float_array ( plist , "".HWMargins"" , & mfa )"		2554481	0		==			
ANR	2556935	PrimaryExpression	0		2554481	0					
ANR	2556936	CallExpression	"param_read_float_array ( plist , "".HWMargins"" , & mfa )"		2554481	1					
ANR	2556937	Callee	param_read_float_array		2554481	0					
ANR	2556938	Identifier	param_read_float_array		2554481	0					
ANR	2556939	ArgumentList	plist		2554481	1					
ANR	2556940	Argument	plist		2554481	0					
ANR	2556941	Identifier	plist		2554481	0					
ANR	2556942	Argument	""".HWMargins"""		2554481	1					
ANR	2556943	PrimaryExpression	""".HWMargins"""		2554481	0					
ANR	2556944	Argument	& mfa		2554481	2					
ANR	2556945	UnaryOperationExpression	& mfa		2554481	0					
ANR	2556946	UnaryOperator	&		2554481	0					
ANR	2556947	Identifier	mfa		2554481	1					
ANR	2556948	AndExpression	( 4 == mfa . size ) && ( 0 != mfa . data )		2554481	1		&&			
ANR	2556949	EqualityExpression	4 == mfa . size		2554481	0		==			
ANR	2556950	PrimaryExpression	4		2554481	0					
ANR	2556951	MemberAccess	mfa . size		2554481	1					
ANR	2556952	Identifier	mfa		2554481	0					
ANR	2556953	Identifier	size		2554481	1					
ANR	2556954	EqualityExpression	0 != mfa . data		2554481	1		!=			
ANR	2556955	PrimaryExpression	0		2554481	0					
ANR	2556956	MemberAccess	mfa . data		2554481	1					
ANR	2556957	Identifier	mfa		2554481	0					
ANR	2556958	Identifier	data		2554481	1					
ANR	2556959	CompoundStatement		396:45:15111:15111	2554481	1					
ANR	2556960	ExpressionStatement	udev -> Margins [ 0 ] = - mfa . data [ 0 ] * udev -> HWResolution [ 0 ] / 72.0	2063:9:83415:83477	2554481	0	True				
ANR	2556961	AssignmentExpression	udev -> Margins [ 0 ] = - mfa . data [ 0 ] * udev -> HWResolution [ 0 ] / 72.0		2554481	0		=			
ANR	2556962	ArrayIndexing	udev -> Margins [ 0 ]		2554481	0					
ANR	2556963	PtrMemberAccess	udev -> Margins		2554481	0					
ANR	2556964	Identifier	udev		2554481	0					
ANR	2556965	Identifier	Margins		2554481	1					
ANR	2556966	PrimaryExpression	0		2554481	1					
ANR	2556967	MultiplicativeExpression	- mfa . data [ 0 ] * udev -> HWResolution [ 0 ] / 72.0		2554481	1		*			
ANR	2556968	UnaryOperationExpression	- mfa . data [ 0 ]		2554481	0					
ANR	2556969	UnaryOperator	-		2554481	0					
ANR	2556970	ArrayIndexing	mfa . data [ 0 ]		2554481	1					
ANR	2556971	MemberAccess	mfa . data		2554481	0					
ANR	2556972	Identifier	mfa		2554481	0					
ANR	2556973	Identifier	data		2554481	1					
ANR	2556974	PrimaryExpression	0		2554481	1					
ANR	2556975	MultiplicativeExpression	udev -> HWResolution [ 0 ] / 72.0		2554481	1		/			
ANR	2556976	ArrayIndexing	udev -> HWResolution [ 0 ]		2554481	0					
ANR	2556977	PtrMemberAccess	udev -> HWResolution		2554481	0					
ANR	2556978	Identifier	udev		2554481	0					
ANR	2556979	Identifier	HWResolution		2554481	1					
ANR	2556980	PrimaryExpression	0		2554481	1					
ANR	2556981	PrimaryExpression	72.0		2554481	1					
ANR	2556982	ExpressionStatement	udev -> Margins [ 1 ] = - mfa . data [ 3 ] * udev -> HWResolution [ 1 ] / 72.0	2064:9:83488:83550	2554481	1	True				
ANR	2556983	AssignmentExpression	udev -> Margins [ 1 ] = - mfa . data [ 3 ] * udev -> HWResolution [ 1 ] / 72.0		2554481	0		=			
ANR	2556984	ArrayIndexing	udev -> Margins [ 1 ]		2554481	0					
ANR	2556985	PtrMemberAccess	udev -> Margins		2554481	0					
ANR	2556986	Identifier	udev		2554481	0					
ANR	2556987	Identifier	Margins		2554481	1					
ANR	2556988	PrimaryExpression	1		2554481	1					
ANR	2556989	MultiplicativeExpression	- mfa . data [ 3 ] * udev -> HWResolution [ 1 ] / 72.0		2554481	1		*			
ANR	2556990	UnaryOperationExpression	- mfa . data [ 3 ]		2554481	0					
ANR	2556991	UnaryOperator	-		2554481	0					
ANR	2556992	ArrayIndexing	mfa . data [ 3 ]		2554481	1					
ANR	2556993	MemberAccess	mfa . data		2554481	0					
ANR	2556994	Identifier	mfa		2554481	0					
ANR	2556995	Identifier	data		2554481	1					
ANR	2556996	PrimaryExpression	3		2554481	1					
ANR	2556997	MultiplicativeExpression	udev -> HWResolution [ 1 ] / 72.0		2554481	1		/			
ANR	2556998	ArrayIndexing	udev -> HWResolution [ 1 ]		2554481	0					
ANR	2556999	PtrMemberAccess	udev -> HWResolution		2554481	0					
ANR	2557000	Identifier	udev		2554481	0					
ANR	2557001	Identifier	HWResolution		2554481	1					
ANR	2557002	PrimaryExpression	1		2554481	1					
ANR	2557003	PrimaryExpression	72.0		2554481	1					
ANR	2557004	ExpressionStatement	"code = gdev_prn_put_params ( ( gx_device * ) udev , plist )"	2069:3:83676:83727	2554481	82	True				
ANR	2557005	AssignmentExpression	"code = gdev_prn_put_params ( ( gx_device * ) udev , plist )"		2554481	0		=			
ANR	2557006	Identifier	code		2554481	0					
ANR	2557007	CallExpression	"gdev_prn_put_params ( ( gx_device * ) udev , plist )"		2554481	1					
ANR	2557008	Callee	gdev_prn_put_params		2554481	0					
ANR	2557009	Identifier	gdev_prn_put_params		2554481	0					
ANR	2557010	ArgumentList	( gx_device * ) udev		2554481	1					
ANR	2557011	Argument	( gx_device * ) udev		2554481	0					
ANR	2557012	CastExpression	( gx_device * ) udev		2554481	0					
ANR	2557013	CastTarget	gx_device *		2554481	0					
ANR	2557014	Identifier	udev		2554481	1					
ANR	2557015	Argument	plist		2554481	1					
ANR	2557016	Identifier	plist		2554481	0					
ANR	2557017	IfStatement	if ( 0 > code )		2554481	83					
ANR	2557018	Condition	0 > code	2070:6:83735:83742	2554481	0	True				
ANR	2557019	RelationalExpression	0 > code		2554481	0		>			
ANR	2557020	PrimaryExpression	0		2554481	0					
ANR	2557021	Identifier	code		2554481	1					
ANR	2557022	ExpressionStatement	error = code	2070:16:83745:83757	2554481	1	True				
ANR	2557023	AssignmentExpression	error = code		2554481	0		=			
ANR	2557024	Identifier	error		2554481	0					
ANR	2557025	Identifier	code		2554481	1					
ANR	2557026	IfStatement	if ( udev -> upd && ( ( udev -> width != udev -> upd -> pdwidth ) || ( udev -> height != udev -> upd -> pdheight ) ) )		2554481	84					
ANR	2557027	Condition	udev -> upd && ( ( udev -> width != udev -> upd -> pdwidth ) || ( udev -> height != udev -> upd -> pdheight ) )	2081:7:84090:84246	2554481	0	True				
ANR	2557028	AndExpression	udev -> upd && ( ( udev -> width != udev -> upd -> pdwidth ) || ( udev -> height != udev -> upd -> pdheight ) )		2554481	0		&&			
ANR	2557029	PtrMemberAccess	udev -> upd		2554481	0					
ANR	2557030	Identifier	udev		2554481	0					
ANR	2557031	Identifier	upd		2554481	1					
ANR	2557032	OrExpression	( udev -> width != udev -> upd -> pdwidth ) || ( udev -> height != udev -> upd -> pdheight )		2554481	1		||			
ANR	2557033	EqualityExpression	udev -> width != udev -> upd -> pdwidth		2554481	0		!=			
ANR	2557034	PtrMemberAccess	udev -> width		2554481	0					
ANR	2557035	Identifier	udev		2554481	0					
ANR	2557036	Identifier	width		2554481	1					
ANR	2557037	PtrMemberAccess	udev -> upd -> pdwidth		2554481	1					
ANR	2557038	PtrMemberAccess	udev -> upd		2554481	0					
ANR	2557039	Identifier	udev		2554481	0					
ANR	2557040	Identifier	upd		2554481	1					
ANR	2557041	Identifier	pdwidth		2554481	1					
ANR	2557042	EqualityExpression	udev -> height != udev -> upd -> pdheight		2554481	1		!=			
ANR	2557043	PtrMemberAccess	udev -> height		2554481	0					
ANR	2557044	Identifier	udev		2554481	0					
ANR	2557045	Identifier	height		2554481	1					
ANR	2557046	PtrMemberAccess	udev -> upd -> pdheight		2554481	1					
ANR	2557047	PtrMemberAccess	udev -> upd		2554481	0					
ANR	2557048	Identifier	udev		2554481	0					
ANR	2557049	Identifier	upd		2554481	1					
ANR	2557050	Identifier	pdheight		2554481	1					
ANR	2557051	ExpressionStatement	error |= UPD_PUT_CHANGEDSIZE	2084:8:84268:84296	2554481	1	True				
ANR	2557052	AssignmentExpression	error |= UPD_PUT_CHANGEDSIZE		2554481	0		|=			
ANR	2557053	Identifier	error		2554481	0					
ANR	2557054	Identifier	UPD_PUT_CHANGEDSIZE		2554481	1					
ANR	2557055	IfStatement	if ( 0 < error && udev -> is_open )		2554481	85					
ANR	2557056	Condition	0 < error && udev -> is_open	2086:6:84326:84351	2554481	0	True				
ANR	2557057	AndExpression	0 < error && udev -> is_open		2554481	0		&&			
ANR	2557058	RelationalExpression	0 < error		2554481	0		<			
ANR	2557059	PrimaryExpression	0		2554481	0					
ANR	2557060	Identifier	error		2554481	1					
ANR	2557061	PtrMemberAccess	udev -> is_open		2554481	1					
ANR	2557062	Identifier	udev		2554481	0					
ANR	2557063	Identifier	is_open		2554481	1					
ANR	2557064	CompoundStatement		420:34:16061:16061	2554481	1					
ANR	2557065	ExpressionStatement	code = gs_closedevice ( ( gx_device * ) udev )	2087:6:84362:84402	2554481	0	True				
ANR	2557066	AssignmentExpression	code = gs_closedevice ( ( gx_device * ) udev )		2554481	0		=			
ANR	2557067	Identifier	code		2554481	0					
ANR	2557068	CallExpression	gs_closedevice ( ( gx_device * ) udev )		2554481	1					
ANR	2557069	Callee	gs_closedevice		2554481	0					
ANR	2557070	Identifier	gs_closedevice		2554481	0					
ANR	2557071	ArgumentList	( gx_device * ) udev		2554481	1					
ANR	2557072	Argument	( gx_device * ) udev		2554481	0					
ANR	2557073	CastExpression	( gx_device * ) udev		2554481	0					
ANR	2557074	CastTarget	gx_device *		2554481	0					
ANR	2557075	Identifier	udev		2554481	1					
ANR	2557076	IfStatement	if ( 0 > code )		2554481	1					
ANR	2557077	Condition	0 > code	2088:9:84413:84420	2554481	0	True				
ANR	2557078	RelationalExpression	0 > code		2554481	0		>			
ANR	2557079	PrimaryExpression	0		2554481	0					
ANR	2557080	Identifier	code		2554481	1					
ANR	2557081	ExpressionStatement	error = code	2088:19:84423:84435	2554481	1	True				
ANR	2557082	AssignmentExpression	error = code		2554481	0		=			
ANR	2557083	Identifier	error		2554481	0					
ANR	2557084	Identifier	code		2554481	1					
ANR	2557085	IfStatement	if ( 0 < error )		2554481	86					
ANR	2557086	Condition	0 < error	2091:6:84449:84457	2554481	0	True				
ANR	2557087	RelationalExpression	0 < error		2554481	0		<			
ANR	2557088	PrimaryExpression	0		2554481	0					
ANR	2557089	Identifier	error		2554481	1					
ANR	2557090	CompoundStatement		425:17:16167:16167	2554481	1					
ANR	2557091	IfStatement	if ( ! ( upd = udev -> upd ) )		2554481	0					
ANR	2557092	Condition	! ( upd = udev -> upd )	2093:9:84518:84535	2554481	0	True				
ANR	2557093	UnaryOperationExpression	! ( upd = udev -> upd )		2554481	0					
ANR	2557094	UnaryOperator	!		2554481	0					
ANR	2557095	AssignmentExpression	upd = udev -> upd		2554481	1		=			
ANR	2557096	Identifier	upd		2554481	0					
ANR	2557097	PtrMemberAccess	udev -> upd		2554481	1					
ANR	2557098	Identifier	udev		2554481	0					
ANR	2557099	Identifier	upd		2554481	1					
ANR	2557100	CompoundStatement		427:29:16245:16245	2554481	1					
ANR	2557101	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , udev -> upd , 1 )"	2094:8:84548:84591	2554481	0	True				
ANR	2557102	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , udev -> upd , 1 )"		2554481	0					
ANR	2557103	Callee	UPD_MM_GET_ARRAY		2554481	0					
ANR	2557104	Identifier	UPD_MM_GET_ARRAY		2554481	0					
ANR	2557105	ArgumentList	udev -> memory		2554481	1					
ANR	2557106	Argument	udev -> memory		2554481	0					
ANR	2557107	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2557108	Identifier	udev		2554481	0					
ANR	2557109	Identifier	memory		2554481	1					
ANR	2557110	Argument	udev -> upd		2554481	1					
ANR	2557111	PtrMemberAccess	udev -> upd		2554481	0					
ANR	2557112	Identifier	udev		2554481	0					
ANR	2557113	Identifier	upd		2554481	1					
ANR	2557114	Argument	1		2554481	2					
ANR	2557115	PrimaryExpression	1		2554481	0					
ANR	2557116	ExpressionStatement	upd = udev -> upd	2095:8:84601:84616	2554481	1	True				
ANR	2557117	AssignmentExpression	upd = udev -> upd		2554481	0		=			
ANR	2557118	Identifier	upd		2554481	0					
ANR	2557119	PtrMemberAccess	udev -> upd		2554481	1					
ANR	2557120	Identifier	udev		2554481	0					
ANR	2557121	Identifier	upd		2554481	1					
ANR	2557122	ElseStatement	else		2554481	0					
ANR	2557123	CompoundStatement		430:13:16338:16338	2554481	0					
ANR	2557124	ExpressionStatement	"UPD_MM_DEL_ARRAY ( udev -> memory , upd -> choice , countof ( upd_choice ) , UPD_MM_DEL_VALUE )"	2097:8:84641:84725	2554481	0	True				
ANR	2557125	CallExpression	"UPD_MM_DEL_ARRAY ( udev -> memory , upd -> choice , countof ( upd_choice ) , UPD_MM_DEL_VALUE )"		2554481	0					
ANR	2557126	Callee	UPD_MM_DEL_ARRAY		2554481	0					
ANR	2557127	Identifier	UPD_MM_DEL_ARRAY		2554481	0					
ANR	2557128	ArgumentList	udev -> memory		2554481	1					
ANR	2557129	Argument	udev -> memory		2554481	0					
ANR	2557130	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2557131	Identifier	udev		2554481	0					
ANR	2557132	Identifier	memory		2554481	1					
ANR	2557133	Argument	upd -> choice		2554481	1					
ANR	2557134	PtrMemberAccess	upd -> choice		2554481	0					
ANR	2557135	Identifier	upd		2554481	0					
ANR	2557136	Identifier	choice		2554481	1					
ANR	2557137	Argument	countof ( upd_choice )		2554481	2					
ANR	2557138	CallExpression	countof ( upd_choice )		2554481	0					
ANR	2557139	Callee	countof		2554481	0					
ANR	2557140	Identifier	countof		2554481	0					
ANR	2557141	ArgumentList	upd_choice		2554481	1					
ANR	2557142	Argument	upd_choice		2554481	0					
ANR	2557143	Identifier	upd_choice		2554481	0					
ANR	2557144	Argument	UPD_MM_DEL_VALUE		2554481	3					
ANR	2557145	Identifier	UPD_MM_DEL_VALUE		2554481	0					
ANR	2557146	ExpressionStatement	"UPD_MM_DEL_ARRAY ( udev -> memory , upd -> ints , countof ( upd_ints ) , UPD_MM_DEL_VALUE )"	2098:8:84735:84819	2554481	1	True				
ANR	2557147	CallExpression	"UPD_MM_DEL_ARRAY ( udev -> memory , upd -> ints , countof ( upd_ints ) , UPD_MM_DEL_VALUE )"		2554481	0					
ANR	2557148	Callee	UPD_MM_DEL_ARRAY		2554481	0					
ANR	2557149	Identifier	UPD_MM_DEL_ARRAY		2554481	0					
ANR	2557150	ArgumentList	udev -> memory		2554481	1					
ANR	2557151	Argument	udev -> memory		2554481	0					
ANR	2557152	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2557153	Identifier	udev		2554481	0					
ANR	2557154	Identifier	memory		2554481	1					
ANR	2557155	Argument	upd -> ints		2554481	1					
ANR	2557156	PtrMemberAccess	upd -> ints		2554481	0					
ANR	2557157	Identifier	upd		2554481	0					
ANR	2557158	Identifier	ints		2554481	1					
ANR	2557159	Argument	countof ( upd_ints )		2554481	2					
ANR	2557160	CallExpression	countof ( upd_ints )		2554481	0					
ANR	2557161	Callee	countof		2554481	0					
ANR	2557162	Identifier	countof		2554481	0					
ANR	2557163	ArgumentList	upd_ints		2554481	1					
ANR	2557164	Argument	upd_ints		2554481	0					
ANR	2557165	Identifier	upd_ints		2554481	0					
ANR	2557166	Argument	UPD_MM_DEL_VALUE		2554481	3					
ANR	2557167	Identifier	UPD_MM_DEL_VALUE		2554481	0					
ANR	2557168	ExpressionStatement	"UPD_MM_DEL_ARRAY ( udev -> memory , upd -> int_a , countof ( upd_int_a ) , UPD_MM_DEL_PARAM )"	2099:8:84829:84913	2554481	2	True				
ANR	2557169	CallExpression	"UPD_MM_DEL_ARRAY ( udev -> memory , upd -> int_a , countof ( upd_int_a ) , UPD_MM_DEL_PARAM )"		2554481	0					
ANR	2557170	Callee	UPD_MM_DEL_ARRAY		2554481	0					
ANR	2557171	Identifier	UPD_MM_DEL_ARRAY		2554481	0					
ANR	2557172	ArgumentList	udev -> memory		2554481	1					
ANR	2557173	Argument	udev -> memory		2554481	0					
ANR	2557174	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2557175	Identifier	udev		2554481	0					
ANR	2557176	Identifier	memory		2554481	1					
ANR	2557177	Argument	upd -> int_a		2554481	1					
ANR	2557178	PtrMemberAccess	upd -> int_a		2554481	0					
ANR	2557179	Identifier	upd		2554481	0					
ANR	2557180	Identifier	int_a		2554481	1					
ANR	2557181	Argument	countof ( upd_int_a )		2554481	2					
ANR	2557182	CallExpression	countof ( upd_int_a )		2554481	0					
ANR	2557183	Callee	countof		2554481	0					
ANR	2557184	Identifier	countof		2554481	0					
ANR	2557185	ArgumentList	upd_int_a		2554481	1					
ANR	2557186	Argument	upd_int_a		2554481	0					
ANR	2557187	Identifier	upd_int_a		2554481	0					
ANR	2557188	Argument	UPD_MM_DEL_PARAM		2554481	3					
ANR	2557189	Identifier	UPD_MM_DEL_PARAM		2554481	0					
ANR	2557190	ExpressionStatement	"UPD_MM_DEL_ARRAY ( udev -> memory , upd -> strings , countof ( upd_strings ) , UPD_MM_DEL_PARAM )"	2100:8:84923:85007	2554481	3	True				
ANR	2557191	CallExpression	"UPD_MM_DEL_ARRAY ( udev -> memory , upd -> strings , countof ( upd_strings ) , UPD_MM_DEL_PARAM )"		2554481	0					
ANR	2557192	Callee	UPD_MM_DEL_ARRAY		2554481	0					
ANR	2557193	Identifier	UPD_MM_DEL_ARRAY		2554481	0					
ANR	2557194	ArgumentList	udev -> memory		2554481	1					
ANR	2557195	Argument	udev -> memory		2554481	0					
ANR	2557196	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2557197	Identifier	udev		2554481	0					
ANR	2557198	Identifier	memory		2554481	1					
ANR	2557199	Argument	upd -> strings		2554481	1					
ANR	2557200	PtrMemberAccess	upd -> strings		2554481	0					
ANR	2557201	Identifier	upd		2554481	0					
ANR	2557202	Identifier	strings		2554481	1					
ANR	2557203	Argument	countof ( upd_strings )		2554481	2					
ANR	2557204	CallExpression	countof ( upd_strings )		2554481	0					
ANR	2557205	Callee	countof		2554481	0					
ANR	2557206	Identifier	countof		2554481	0					
ANR	2557207	ArgumentList	upd_strings		2554481	1					
ANR	2557208	Argument	upd_strings		2554481	0					
ANR	2557209	Identifier	upd_strings		2554481	0					
ANR	2557210	Argument	UPD_MM_DEL_PARAM		2554481	3					
ANR	2557211	Identifier	UPD_MM_DEL_PARAM		2554481	0					
ANR	2557212	ExpressionStatement	"UPD_MM_DEL_ARRAY ( udev -> memory , upd -> string_a , countof ( upd_string_a ) , UPD_MM_DEL_APARAM )"	2101:8:85017:85102	2554481	4	True				
ANR	2557213	CallExpression	"UPD_MM_DEL_ARRAY ( udev -> memory , upd -> string_a , countof ( upd_string_a ) , UPD_MM_DEL_APARAM )"		2554481	0					
ANR	2557214	Callee	UPD_MM_DEL_ARRAY		2554481	0					
ANR	2557215	Identifier	UPD_MM_DEL_ARRAY		2554481	0					
ANR	2557216	ArgumentList	udev -> memory		2554481	1					
ANR	2557217	Argument	udev -> memory		2554481	0					
ANR	2557218	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2557219	Identifier	udev		2554481	0					
ANR	2557220	Identifier	memory		2554481	1					
ANR	2557221	Argument	upd -> string_a		2554481	1					
ANR	2557222	PtrMemberAccess	upd -> string_a		2554481	0					
ANR	2557223	Identifier	upd		2554481	0					
ANR	2557224	Identifier	string_a		2554481	1					
ANR	2557225	Argument	countof ( upd_string_a )		2554481	2					
ANR	2557226	CallExpression	countof ( upd_string_a )		2554481	0					
ANR	2557227	Callee	countof		2554481	0					
ANR	2557228	Identifier	countof		2554481	0					
ANR	2557229	ArgumentList	upd_string_a		2554481	1					
ANR	2557230	Argument	upd_string_a		2554481	0					
ANR	2557231	Identifier	upd_string_a		2554481	0					
ANR	2557232	Argument	UPD_MM_DEL_APARAM		2554481	3					
ANR	2557233	Identifier	UPD_MM_DEL_APARAM		2554481	0					
ANR	2557234	ExpressionStatement	"UPD_MM_DEL_ARRAY ( udev -> memory , upd -> float_a , countof ( upd_float_a ) , UPD_MM_DEL_PARAM )"	2102:8:85112:85196	2554481	5	True				
ANR	2557235	CallExpression	"UPD_MM_DEL_ARRAY ( udev -> memory , upd -> float_a , countof ( upd_float_a ) , UPD_MM_DEL_PARAM )"		2554481	0					
ANR	2557236	Callee	UPD_MM_DEL_ARRAY		2554481	0					
ANR	2557237	Identifier	UPD_MM_DEL_ARRAY		2554481	0					
ANR	2557238	ArgumentList	udev -> memory		2554481	1					
ANR	2557239	Argument	udev -> memory		2554481	0					
ANR	2557240	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2557241	Identifier	udev		2554481	0					
ANR	2557242	Identifier	memory		2554481	1					
ANR	2557243	Argument	upd -> float_a		2554481	1					
ANR	2557244	PtrMemberAccess	upd -> float_a		2554481	0					
ANR	2557245	Identifier	upd		2554481	0					
ANR	2557246	Identifier	float_a		2554481	1					
ANR	2557247	Argument	countof ( upd_float_a )		2554481	2					
ANR	2557248	CallExpression	countof ( upd_float_a )		2554481	0					
ANR	2557249	Callee	countof		2554481	0					
ANR	2557250	Identifier	countof		2554481	0					
ANR	2557251	ArgumentList	upd_float_a		2554481	1					
ANR	2557252	Argument	upd_float_a		2554481	0					
ANR	2557253	Identifier	upd_float_a		2554481	0					
ANR	2557254	Argument	UPD_MM_DEL_PARAM		2554481	3					
ANR	2557255	Identifier	UPD_MM_DEL_PARAM		2554481	0					
ANR	2557256	ExpressionStatement	upd -> choice = choice	2105:6:85213:85235	2554481	1	True				
ANR	2557257	AssignmentExpression	upd -> choice = choice		2554481	0		=			
ANR	2557258	PtrMemberAccess	upd -> choice		2554481	0					
ANR	2557259	Identifier	upd		2554481	0					
ANR	2557260	Identifier	choice		2554481	1					
ANR	2557261	Identifier	choice		2554481	1					
ANR	2557262	ExpressionStatement	upd -> flags = flags	2106:6:85243:85264	2554481	2	True				
ANR	2557263	AssignmentExpression	upd -> flags = flags		2554481	0		=			
ANR	2557264	PtrMemberAccess	upd -> flags		2554481	0					
ANR	2557265	Identifier	upd		2554481	0					
ANR	2557266	Identifier	flags		2554481	1					
ANR	2557267	Identifier	flags		2554481	1					
ANR	2557268	ExpressionStatement	upd -> ints = ints	2107:6:85272:85292	2554481	3	True				
ANR	2557269	AssignmentExpression	upd -> ints = ints		2554481	0		=			
ANR	2557270	PtrMemberAccess	upd -> ints		2554481	0					
ANR	2557271	Identifier	upd		2554481	0					
ANR	2557272	Identifier	ints		2554481	1					
ANR	2557273	Identifier	ints		2554481	1					
ANR	2557274	ExpressionStatement	upd -> int_a = int_a	2108:6:85300:85321	2554481	4	True				
ANR	2557275	AssignmentExpression	upd -> int_a = int_a		2554481	0		=			
ANR	2557276	PtrMemberAccess	upd -> int_a		2554481	0					
ANR	2557277	Identifier	upd		2554481	0					
ANR	2557278	Identifier	int_a		2554481	1					
ANR	2557279	Identifier	int_a		2554481	1					
ANR	2557280	ExpressionStatement	upd -> strings = strings	2109:6:85329:85352	2554481	5	True				
ANR	2557281	AssignmentExpression	upd -> strings = strings		2554481	0		=			
ANR	2557282	PtrMemberAccess	upd -> strings		2554481	0					
ANR	2557283	Identifier	upd		2554481	0					
ANR	2557284	Identifier	strings		2554481	1					
ANR	2557285	Identifier	strings		2554481	1					
ANR	2557286	ExpressionStatement	upd -> string_a = string_a	2110:6:85360:85384	2554481	6	True				
ANR	2557287	AssignmentExpression	upd -> string_a = string_a		2554481	0		=			
ANR	2557288	PtrMemberAccess	upd -> string_a		2554481	0					
ANR	2557289	Identifier	upd		2554481	0					
ANR	2557290	Identifier	string_a		2554481	1					
ANR	2557291	Identifier	string_a		2554481	1					
ANR	2557292	ExpressionStatement	upd -> float_a = float_a	2111:6:85392:85415	2554481	7	True				
ANR	2557293	AssignmentExpression	upd -> float_a = float_a		2554481	0		=			
ANR	2557294	PtrMemberAccess	upd -> float_a		2554481	0					
ANR	2557295	Identifier	upd		2554481	0					
ANR	2557296	Identifier	float_a		2554481	1					
ANR	2557297	Identifier	float_a		2554481	1					
ANR	2557298	ExpressionStatement	upd -> memory = udev -> memory	2112:6:85423:85451	2554481	8	True				
ANR	2557299	AssignmentExpression	upd -> memory = udev -> memory		2554481	0		=			
ANR	2557300	PtrMemberAccess	upd -> memory		2554481	0					
ANR	2557301	Identifier	upd		2554481	0					
ANR	2557302	Identifier	memory		2554481	1					
ANR	2557303	PtrMemberAccess	udev -> memory		2554481	1					
ANR	2557304	Identifier	udev		2554481	0					
ANR	2557305	Identifier	memory		2554481	1					
ANR	2557306	IfStatement	if ( 0 < error )		2554481	9					
ANR	2557307	Condition	0 < error	2114:9:85463:85471	2554481	0	True				
ANR	2557308	RelationalExpression	0 < error		2554481	0		<			
ANR	2557309	PrimaryExpression	0		2554481	0					
ANR	2557310	Identifier	error		2554481	1					
ANR	2557311	ExpressionStatement	error = 0	2114:20:85474:85483	2554481	1	True				
ANR	2557312	AssignmentExpression	error = 0		2554481	0		=			
ANR	2557313	Identifier	error		2554481	0					
ANR	2557314	PrimaryExpression	0		2554481	1					
ANR	2557315	ElseStatement	else		2554481	0					
ANR	2557316	CompoundStatement		450:10:17203:17203	2554481	0					
ANR	2557317	ExpressionStatement	udev -> Margins [ 0 ] = Margins [ 0 ]	2118:18:85517:85558	2554481	0	True				
ANR	2557318	AssignmentExpression	udev -> Margins [ 0 ] = Margins [ 0 ]		2554481	0		=			
ANR	2557319	ArrayIndexing	udev -> Margins [ 0 ]		2554481	0					
ANR	2557320	PtrMemberAccess	udev -> Margins		2554481	0					
ANR	2557321	Identifier	udev		2554481	0					
ANR	2557322	Identifier	Margins		2554481	1					
ANR	2557323	PrimaryExpression	0		2554481	1					
ANR	2557324	ArrayIndexing	Margins [ 0 ]		2554481	1					
ANR	2557325	Identifier	Margins		2554481	0					
ANR	2557326	PrimaryExpression	0		2554481	1					
ANR	2557327	ExpressionStatement	udev -> Margins [ 1 ] = Margins [ 1 ]	2119:18:85578:85619	2554481	1	True				
ANR	2557328	AssignmentExpression	udev -> Margins [ 1 ] = Margins [ 1 ]		2554481	0		=			
ANR	2557329	ArrayIndexing	udev -> Margins [ 1 ]		2554481	0					
ANR	2557330	PtrMemberAccess	udev -> Margins		2554481	0					
ANR	2557331	Identifier	udev		2554481	0					
ANR	2557332	Identifier	Margins		2554481	1					
ANR	2557333	PrimaryExpression	1		2554481	1					
ANR	2557334	ArrayIndexing	Margins [ 1 ]		2554481	1					
ANR	2557335	Identifier	Margins		2554481	0					
ANR	2557336	PrimaryExpression	1		2554481	1					
ANR	2557337	ExpressionStatement	udev -> color_info = color_info	2121:6:85628:85657	2554481	2	True				
ANR	2557338	AssignmentExpression	udev -> color_info = color_info		2554481	0		=			
ANR	2557339	PtrMemberAccess	udev -> color_info		2554481	0					
ANR	2557340	Identifier	udev		2554481	0					
ANR	2557341	Identifier	color_info		2554481	1					
ANR	2557342	Identifier	color_info		2554481	1					
ANR	2557343	ExpressionStatement	"UPD_MM_DEL_ARRAY ( udev -> memory , choice , countof ( upd_choice ) , UPD_MM_DEL_VALUE )"	2122:6:85665:85744	2554481	3	True				
ANR	2557344	CallExpression	"UPD_MM_DEL_ARRAY ( udev -> memory , choice , countof ( upd_choice ) , UPD_MM_DEL_VALUE )"		2554481	0					
ANR	2557345	Callee	UPD_MM_DEL_ARRAY		2554481	0					
ANR	2557346	Identifier	UPD_MM_DEL_ARRAY		2554481	0					
ANR	2557347	ArgumentList	udev -> memory		2554481	1					
ANR	2557348	Argument	udev -> memory		2554481	0					
ANR	2557349	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2557350	Identifier	udev		2554481	0					
ANR	2557351	Identifier	memory		2554481	1					
ANR	2557352	Argument	choice		2554481	1					
ANR	2557353	Identifier	choice		2554481	0					
ANR	2557354	Argument	countof ( upd_choice )		2554481	2					
ANR	2557355	CallExpression	countof ( upd_choice )		2554481	0					
ANR	2557356	Callee	countof		2554481	0					
ANR	2557357	Identifier	countof		2554481	0					
ANR	2557358	ArgumentList	upd_choice		2554481	1					
ANR	2557359	Argument	upd_choice		2554481	0					
ANR	2557360	Identifier	upd_choice		2554481	0					
ANR	2557361	Argument	UPD_MM_DEL_VALUE		2554481	3					
ANR	2557362	Identifier	UPD_MM_DEL_VALUE		2554481	0					
ANR	2557363	ExpressionStatement	"UPD_MM_DEL_ARRAY ( udev -> memory , ints , countof ( upd_ints ) , UPD_MM_DEL_VALUE )"	2123:6:85752:85831	2554481	4	True				
ANR	2557364	CallExpression	"UPD_MM_DEL_ARRAY ( udev -> memory , ints , countof ( upd_ints ) , UPD_MM_DEL_VALUE )"		2554481	0					
ANR	2557365	Callee	UPD_MM_DEL_ARRAY		2554481	0					
ANR	2557366	Identifier	UPD_MM_DEL_ARRAY		2554481	0					
ANR	2557367	ArgumentList	udev -> memory		2554481	1					
ANR	2557368	Argument	udev -> memory		2554481	0					
ANR	2557369	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2557370	Identifier	udev		2554481	0					
ANR	2557371	Identifier	memory		2554481	1					
ANR	2557372	Argument	ints		2554481	1					
ANR	2557373	Identifier	ints		2554481	0					
ANR	2557374	Argument	countof ( upd_ints )		2554481	2					
ANR	2557375	CallExpression	countof ( upd_ints )		2554481	0					
ANR	2557376	Callee	countof		2554481	0					
ANR	2557377	Identifier	countof		2554481	0					
ANR	2557378	ArgumentList	upd_ints		2554481	1					
ANR	2557379	Argument	upd_ints		2554481	0					
ANR	2557380	Identifier	upd_ints		2554481	0					
ANR	2557381	Argument	UPD_MM_DEL_VALUE		2554481	3					
ANR	2557382	Identifier	UPD_MM_DEL_VALUE		2554481	0					
ANR	2557383	ExpressionStatement	"UPD_MM_DEL_ARRAY ( udev -> memory , int_a , countof ( upd_int_a ) , UPD_MM_DEL_PARAM )"	2124:6:85839:85918	2554481	5	True				
ANR	2557384	CallExpression	"UPD_MM_DEL_ARRAY ( udev -> memory , int_a , countof ( upd_int_a ) , UPD_MM_DEL_PARAM )"		2554481	0					
ANR	2557385	Callee	UPD_MM_DEL_ARRAY		2554481	0					
ANR	2557386	Identifier	UPD_MM_DEL_ARRAY		2554481	0					
ANR	2557387	ArgumentList	udev -> memory		2554481	1					
ANR	2557388	Argument	udev -> memory		2554481	0					
ANR	2557389	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2557390	Identifier	udev		2554481	0					
ANR	2557391	Identifier	memory		2554481	1					
ANR	2557392	Argument	int_a		2554481	1					
ANR	2557393	Identifier	int_a		2554481	0					
ANR	2557394	Argument	countof ( upd_int_a )		2554481	2					
ANR	2557395	CallExpression	countof ( upd_int_a )		2554481	0					
ANR	2557396	Callee	countof		2554481	0					
ANR	2557397	Identifier	countof		2554481	0					
ANR	2557398	ArgumentList	upd_int_a		2554481	1					
ANR	2557399	Argument	upd_int_a		2554481	0					
ANR	2557400	Identifier	upd_int_a		2554481	0					
ANR	2557401	Argument	UPD_MM_DEL_PARAM		2554481	3					
ANR	2557402	Identifier	UPD_MM_DEL_PARAM		2554481	0					
ANR	2557403	ExpressionStatement	"UPD_MM_DEL_ARRAY ( udev -> memory , strings , countof ( upd_strings ) , UPD_MM_DEL_PARAM )"	2125:6:85926:86005	2554481	6	True				
ANR	2557404	CallExpression	"UPD_MM_DEL_ARRAY ( udev -> memory , strings , countof ( upd_strings ) , UPD_MM_DEL_PARAM )"		2554481	0					
ANR	2557405	Callee	UPD_MM_DEL_ARRAY		2554481	0					
ANR	2557406	Identifier	UPD_MM_DEL_ARRAY		2554481	0					
ANR	2557407	ArgumentList	udev -> memory		2554481	1					
ANR	2557408	Argument	udev -> memory		2554481	0					
ANR	2557409	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2557410	Identifier	udev		2554481	0					
ANR	2557411	Identifier	memory		2554481	1					
ANR	2557412	Argument	strings		2554481	1					
ANR	2557413	Identifier	strings		2554481	0					
ANR	2557414	Argument	countof ( upd_strings )		2554481	2					
ANR	2557415	CallExpression	countof ( upd_strings )		2554481	0					
ANR	2557416	Callee	countof		2554481	0					
ANR	2557417	Identifier	countof		2554481	0					
ANR	2557418	ArgumentList	upd_strings		2554481	1					
ANR	2557419	Argument	upd_strings		2554481	0					
ANR	2557420	Identifier	upd_strings		2554481	0					
ANR	2557421	Argument	UPD_MM_DEL_PARAM		2554481	3					
ANR	2557422	Identifier	UPD_MM_DEL_PARAM		2554481	0					
ANR	2557423	ExpressionStatement	"UPD_MM_DEL_ARRAY ( udev -> memory , string_a , countof ( upd_string_a ) , UPD_MM_DEL_APARAM )"	2126:6:86013:86093	2554481	7	True				
ANR	2557424	CallExpression	"UPD_MM_DEL_ARRAY ( udev -> memory , string_a , countof ( upd_string_a ) , UPD_MM_DEL_APARAM )"		2554481	0					
ANR	2557425	Callee	UPD_MM_DEL_ARRAY		2554481	0					
ANR	2557426	Identifier	UPD_MM_DEL_ARRAY		2554481	0					
ANR	2557427	ArgumentList	udev -> memory		2554481	1					
ANR	2557428	Argument	udev -> memory		2554481	0					
ANR	2557429	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2557430	Identifier	udev		2554481	0					
ANR	2557431	Identifier	memory		2554481	1					
ANR	2557432	Argument	string_a		2554481	1					
ANR	2557433	Identifier	string_a		2554481	0					
ANR	2557434	Argument	countof ( upd_string_a )		2554481	2					
ANR	2557435	CallExpression	countof ( upd_string_a )		2554481	0					
ANR	2557436	Callee	countof		2554481	0					
ANR	2557437	Identifier	countof		2554481	0					
ANR	2557438	ArgumentList	upd_string_a		2554481	1					
ANR	2557439	Argument	upd_string_a		2554481	0					
ANR	2557440	Identifier	upd_string_a		2554481	0					
ANR	2557441	Argument	UPD_MM_DEL_APARAM		2554481	3					
ANR	2557442	Identifier	UPD_MM_DEL_APARAM		2554481	0					
ANR	2557443	ExpressionStatement	"UPD_MM_DEL_ARRAY ( udev -> memory , float_a , countof ( upd_float_a ) , UPD_MM_DEL_PARAM )"	2127:6:86101:86180	2554481	8	True				
ANR	2557444	CallExpression	"UPD_MM_DEL_ARRAY ( udev -> memory , float_a , countof ( upd_float_a ) , UPD_MM_DEL_PARAM )"		2554481	0					
ANR	2557445	Callee	UPD_MM_DEL_ARRAY		2554481	0					
ANR	2557446	Identifier	UPD_MM_DEL_ARRAY		2554481	0					
ANR	2557447	ArgumentList	udev -> memory		2554481	1					
ANR	2557448	Argument	udev -> memory		2554481	0					
ANR	2557449	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2557450	Identifier	udev		2554481	0					
ANR	2557451	Identifier	memory		2554481	1					
ANR	2557452	Argument	float_a		2554481	1					
ANR	2557453	Identifier	float_a		2554481	0					
ANR	2557454	Argument	countof ( upd_float_a )		2554481	2					
ANR	2557455	CallExpression	countof ( upd_float_a )		2554481	0					
ANR	2557456	Callee	countof		2554481	0					
ANR	2557457	Identifier	countof		2554481	0					
ANR	2557458	ArgumentList	upd_float_a		2554481	1					
ANR	2557459	Argument	upd_float_a		2554481	0					
ANR	2557460	Identifier	upd_float_a		2554481	0					
ANR	2557461	Argument	UPD_MM_DEL_PARAM		2554481	3					
ANR	2557462	Identifier	UPD_MM_DEL_PARAM		2554481	0					
ANR	2557463	ExpressionStatement	upd_procs_map ( udev )	2135:3:86251:86270	2554481	87	True				
ANR	2557464	CallExpression	upd_procs_map ( udev )		2554481	0					
ANR	2557465	Callee	upd_procs_map		2554481	0					
ANR	2557466	Identifier	upd_procs_map		2554481	0					
ANR	2557467	ArgumentList	udev		2554481	1					
ANR	2557468	Argument	udev		2554481	0					
ANR	2557469	Identifier	udev		2554481	0					
ANR	2557470	ExpressionStatement	"errprintf ( udev -> memory , ""RETURN: %d = upd_put_params(0x%05lx,0x%05lx)\\n"" , error , ( long ) udev , ( long ) plist )"	2138:6:86313:86427	2554481	88	True				
ANR	2557471	CallExpression	"errprintf ( udev -> memory , ""RETURN: %d = upd_put_params(0x%05lx,0x%05lx)\\n"" , error , ( long ) udev , ( long ) plist )"		2554481	0					
ANR	2557472	Callee	errprintf		2554481	0					
ANR	2557473	Identifier	errprintf		2554481	0					
ANR	2557474	ArgumentList	udev -> memory		2554481	1					
ANR	2557475	Argument	udev -> memory		2554481	0					
ANR	2557476	PtrMemberAccess	udev -> memory		2554481	0					
ANR	2557477	Identifier	udev		2554481	0					
ANR	2557478	Identifier	memory		2554481	1					
ANR	2557479	Argument	"""RETURN: %d = upd_put_params(0x%05lx,0x%05lx)\\n"""		2554481	1					
ANR	2557480	PrimaryExpression	"""RETURN: %d = upd_put_params(0x%05lx,0x%05lx)\\n"""		2554481	0					
ANR	2557481	Argument	error		2554481	2					
ANR	2557482	Identifier	error		2554481	0					
ANR	2557483	Argument	( long ) udev		2554481	3					
ANR	2557484	CastExpression	( long ) udev		2554481	0					
ANR	2557485	CastTarget	long		2554481	0					
ANR	2557486	Identifier	udev		2554481	1					
ANR	2557487	Argument	( long ) plist		2554481	4					
ANR	2557488	CastExpression	( long ) plist		2554481	0					
ANR	2557489	CastTarget	long		2554481	0					
ANR	2557490	Identifier	plist		2554481	1					
ANR	2557491	ReturnStatement	return error ;	2142:3:86440:86452	2554481	89	True				
ANR	2557492	Identifier	error		2554481	0					
ANR	2557493	ReturnType	static int		2554481	1					
ANR	2557494	Identifier	upd_put_params		2554481	2					
ANR	2557495	ParameterList	"gx_device * pdev , gs_param_list * plist"		2554481	3					
ANR	2557496	Parameter	gx_device * pdev	1666:15:68253:68267	2554481	0	True				
ANR	2557497	ParameterType	gx_device *		2554481	0					
ANR	2557498	Identifier	pdev		2554481	1					
ANR	2557499	Parameter	gs_param_list * plist	1666:32:68270:68289	2554481	1	True				
ANR	2557500	ParameterType	gs_param_list *		2554481	0					
ANR	2557501	Identifier	plist		2554481	1					
ANR	2557502	CFGEntryNode	ENTRY		2554481		True				
ANR	2557503	CFGExitNode	EXIT		2554481		True				
ANR	2557504	Symbol	& Object		2554481						
ANR	2557505	Symbol	* S_CLOSE		2554481						
ANR	2557506	Symbol	param_read_float_array		2554481						
ANR	2557507	Symbol	* ints		2554481						
ANR	2557508	Symbol	* upd_strings		2554481						
ANR	2557509	Symbol	bit		2554481						
ANR	2557510	Symbol	upd_ints		2554481						
ANR	2557511	Symbol	udev -> color_info . dither_grays		2554481						
ANR	2557512	Symbol	strncmp		2554481						
ANR	2557513	Symbol	* udev		2554481						
ANR	2557514	Symbol	* * udev -> upd		2554481						
ANR	2557515	Symbol	* IA_COMPSHIFT		2554481						
ANR	2557516	Symbol	* * int_a		2554481						
ANR	2557517	Symbol	udev -> height		2554481						
ANR	2557518	Symbol	UPD_MM_DEL_APARAM		2554481						
ANR	2557519	Symbol	* * upd_choice		2554481						
ANR	2557520	Symbol	fname		2554481						
ANR	2557521	Symbol	upd -> memory		2554481						
ANR	2557522	Symbol	* upd_flags		2554481						
ANR	2557523	Symbol	udev -> upd -> strings		2554481						
ANR	2557524	Symbol	upd_cast		2554481						
ANR	2557525	Symbol	UPD_MM_CPY_APARAM		2554481						
ANR	2557526	Symbol	ip		2554481						
ANR	2557527	Symbol	upd		2554481						
ANR	2557528	Symbol	param_read_bool		2554481						
ANR	2557529	Symbol	* upd_string_a		2554481						
ANR	2557530	Symbol	param_read_string		2554481						
ANR	2557531	Symbol	value . data		2554481						
ANR	2557532	Symbol	* * udev		2554481						
ANR	2557533	Symbol	countof		2554481						
ANR	2557534	Symbol	UPD_PUT_INT_A		2554481						
ANR	2557535	Symbol	* IA_COMPBITS		2554481						
ANR	2557536	Symbol	UPD_MM_CPY_VALUE		2554481						
ANR	2557537	Symbol	ncomp		2554481						
ANR	2557538	Symbol	flag		2554481						
ANR	2557539	Symbol	UPD_PUT_STRING_A		2554481						
ANR	2557540	Symbol	flags		2554481						
ANR	2557541	Symbol	upd -> strings		2554481						
ANR	2557542	Symbol	nbits		2554481						
ANR	2557543	Symbol	string_a		2554481						
ANR	2557544	Symbol	int_a [ IA_COMPBITS ] . data		2554481						
ANR	2557545	Symbol	upd -> flags		2554481						
ANR	2557546	Symbol	color_info . num_components		2554481						
ANR	2557547	Symbol	plist		2554481						
ANR	2557548	Symbol	* upd_choice		2554481						
ANR	2557549	Symbol	param_read_int		2554481						
ANR	2557550	Symbol	* upd		2554481						
ANR	2557551	Symbol	strings		2554481						
ANR	2557552	Symbol	upd_flags		2554481						
ANR	2557553	Symbol	ints		2554481						
ANR	2557554	Symbol	upd_string_a		2554481						
ANR	2557555	Symbol	Margins		2554481						
ANR	2557556	Symbol	* * * udev		2554481						
ANR	2557557	Symbol	* udev -> upd		2554481						
ANR	2557558	Symbol	udev -> upd -> flags		2554481						
ANR	2557559	Symbol	* upd -> strings		2554481						
ANR	2557560	Symbol	udev -> Margins		2554481						
ANR	2557561	Symbol	int_a [ IA_COMPSHIFT ] . size		2554481						
ANR	2557562	Symbol	* int_a [ IA_COMPSHIFT ] . data		2554481						
ANR	2557563	Symbol	upd -> strings [ S_CLOSE ] . data		2554481						
ANR	2557564	Symbol	UPD_MM_CPY_PARAM		2554481						
ANR	2557565	Symbol	i		2554481						
ANR	2557566	Symbol	j		2554481						
ANR	2557567	Symbol	udev -> upd -> pdwidth		2554481						
ANR	2557568	Symbol	upd_float_a		2554481						
ANR	2557569	Symbol	IA_COLOR_INFO		2554481						
ANR	2557570	Symbol	gdev_prn_put_params		2554481						
ANR	2557571	Symbol	UPD_MM_DEL_PARAM		2554481						
ANR	2557572	Symbol	float_a		2554481						
ANR	2557573	Symbol	* string_a		2554481						
ANR	2557574	Symbol	~B_OPEN		2554481						
ANR	2557575	Symbol	udev -> upd -> pdheight		2554481						
ANR	2557576	Symbol	fname . data		2554481						
ANR	2557577	Symbol	S_CLOSE		2554481						
ANR	2557578	Symbol	choice		2554481						
ANR	2557579	Symbol	* * upd		2554481						
ANR	2557580	Symbol	* udev -> upd -> strings		2554481						
ANR	2557581	Symbol	udev -> color_info . dither_colors		2554481						
ANR	2557582	Symbol	* upd_int_a		2554481						
ANR	2557583	Symbol	udev -> file		2554481						
ANR	2557584	Symbol	* mfa . data		2554481						
ANR	2557585	Symbol	mfa . data		2554481						
ANR	2557586	Symbol	UPD_PUT_CHANGEDSIZE		2554481						
ANR	2557587	Symbol	udev -> upd -> strings [ S_CLOSE ] . size		2554481						
ANR	2557588	Symbol	int_a [ IA_COMPBITS ] . size		2554481						
ANR	2557589	Symbol	Name		2554481						
ANR	2557590	Symbol	pdev		2554481						
ANR	2557591	Symbol	strlen		2554481						
ANR	2557592	Symbol	param_read_name		2554481						
ANR	2557593	Symbol	* mfa		2554481						
ANR	2557594	Symbol	upd -> int_a		2554481						
ANR	2557595	Symbol	upd -> strings [ S_CLOSE ] . size		2554481						
ANR	2557596	Symbol	udev -> color_info . max_gray		2554481						
ANR	2557597	Symbol	IA_COMPSHIFT		2554481						
ANR	2557598	Symbol	UPD_CMAP_MAX		2554481						
ANR	2557599	Symbol	value . size		2554481						
ANR	2557600	Symbol	udev -> is_open		2554481						
ANR	2557601	Symbol	* * i		2554481						
ANR	2557602	Symbol	NULL		2554481						
ANR	2557603	Symbol	upd_strings		2554481						
ANR	2557604	Symbol	udev -> color_info . max_color		2554481						
ANR	2557605	Symbol	UPD_MM_DEL_VALUE		2554481						
ANR	2557606	Symbol	UPD_PUT_FLOAT_A		2554481						
ANR	2557607	Symbol	int_a [ IA_COLOR_INFO ] . data		2554481						
ANR	2557608	Symbol	upd_int_a		2554481						
ANR	2557609	Symbol	* ip2		2554481						
ANR	2557610	Symbol	* udev -> Margins		2554481						
ANR	2557611	Symbol	udev -> color_info . depth		2554481						
ANR	2557612	Symbol	* IA_COLOR_INFO		2554481						
ANR	2557613	Symbol	udev -> width		2554481						
ANR	2557614	Symbol	param_read_null		2554481						
ANR	2557615	Symbol	UPD_PUT_FLAGS		2554481						
ANR	2557616	Symbol	upd_choice		2554481						
ANR	2557617	Symbol	Mem		2554481						
ANR	2557618	Symbol	udev		2554481						
ANR	2557619	Symbol	* udev -> HWResolution		2554481						
ANR	2557620	Symbol	true		2554481						
ANR	2557621	Symbol	UPD_PUT_STRINGS		2554481						
ANR	2557622	Symbol	* strings		2554481						
ANR	2557623	Symbol	upd -> float_a		2554481						
ANR	2557624	Symbol	upd -> ints		2554481						
ANR	2557625	Symbol	* upd_ints		2554481						
ANR	2557626	Symbol	C_MAPPER		2554481						
ANR	2557627	Symbol	* choice		2554481						
ANR	2557628	Symbol	code		2554481						
ANR	2557629	Symbol	* upd_float_a		2554481						
ANR	2557630	Symbol	* int_a		2554481						
ANR	2557631	Symbol	& mfa		2554481						
ANR	2557632	Symbol	error		2554481						
ANR	2557633	Symbol	udev -> fname		2554481						
ANR	2557634	Symbol	* ip		2554481						
ANR	2557635	Symbol	* * IA_COMPSHIFT		2554481						
ANR	2557636	Symbol	udev -> color_info . num_components		2554481						
ANR	2557637	Symbol	color_info		2554481						
ANR	2557638	Symbol	udev -> upd		2554481						
ANR	2557639	Symbol	param_read_string_array		2554481						
ANR	2557640	Symbol	int_a [ IA_COMPSHIFT ] . data		2554481						
ANR	2557641	Symbol	udev -> color_info		2554481						
ANR	2557642	Symbol	B_OPEN		2554481						
ANR	2557643	Symbol	fname . size		2554481						
ANR	2557644	Symbol	value		2554481						
ANR	2557645	Symbol	udev -> memory		2554481						
ANR	2557646	Symbol	* C_MAPPER		2554481						
ANR	2557647	Symbol	* * IA_COMPBITS		2554481						
ANR	2557648	Symbol	* int_a [ IA_COMPBITS ] . data		2554481						
ANR	2557649	Symbol	false		2554481						
ANR	2557650	Symbol	mfa		2554481						
ANR	2557651	Symbol	int_a		2554481						
ANR	2557652	Symbol	upd -> choice		2554481						
ANR	2557653	Symbol	ip2		2554481						
ANR	2557654	Symbol	udev -> HWResolution		2554481						
ANR	2557655	Symbol	& fname		2554481						
ANR	2557656	Symbol	upd -> string_a		2554481						
ANR	2557657	Symbol	param_read_int_array		2554481						
ANR	2557658	Symbol	mfa . size		2554481						
ANR	2557659	Symbol	int_a [ IA_COLOR_INFO ] . size		2554481						
ANR	2557660	Symbol	* Margins		2554481						
ANR	2557661	Symbol	* i		2554481						
ANR	2557662	Symbol	UPD_PUT_CHOICE		2554481						
ANR	2557663	Symbol	* j		2554481						
ANR	2557664	Symbol	UPD_PUT_INTS		2554481						
ANR	2557665	Symbol	IA_COMPBITS		2554481						
ANR	2557666	Symbol	~bit		2554481						
ANR	2557667	Symbol	* float_a		2554481						
ANR	2557668	Symbol	Param_read		2554481						
ANR	2557669	Symbol	gs_closedevice		2554481						
ANR	2557670	Function	upd_cmyk_icolor	2157:0:87066:88860							
ANR	2557671	FunctionDef	"upd_cmyk_icolor (gx_device * pdev , const gx_color_value cv [ ])"		2557670	0					
ANR	2557672	CompoundStatement		2159:0:87148:88860	2557670	0					
ANR	2557673	IdentifierDeclStatement	const upd_p upd = ( ( upd_device * ) pdev ) -> upd ;	2160:3:87153:87200	2557670	0	True				
ANR	2557674	IdentifierDecl	upd = ( ( upd_device * ) pdev ) -> upd		2557670	0					
ANR	2557675	IdentifierDeclType	const upd_p		2557670	0					
ANR	2557676	Identifier	upd		2557670	1					
ANR	2557677	AssignmentExpression	upd = ( ( upd_device * ) pdev ) -> upd		2557670	2		=			
ANR	2557678	Identifier	upd		2557670	0					
ANR	2557679	PtrMemberAccess	( ( upd_device * ) pdev ) -> upd		2557670	1					
ANR	2557680	CastExpression	( upd_device * ) pdev		2557670	0					
ANR	2557681	CastTarget	upd_device *		2557670	0					
ANR	2557682	Identifier	pdev		2557670	1					
ANR	2557683	Identifier	upd		2557670	1					
ANR	2557684	IdentifierDeclStatement	gx_color_index rv ;	2161:3:87205:87223	2557670	1	True				
ANR	2557685	IdentifierDecl	rv		2557670	0					
ANR	2557686	IdentifierDeclType	gx_color_index		2557670	0					
ANR	2557687	Identifier	rv		2557670	1					
ANR	2557688	IdentifierDeclStatement	"gx_color_value c , m , y , k ;"	2162:3:87228:87253	2557670	2	True				
ANR	2557689	IdentifierDecl	c		2557670	0					
ANR	2557690	IdentifierDeclType	gx_color_value		2557670	0					
ANR	2557691	Identifier	c		2557670	1					
ANR	2557692	IdentifierDecl	m		2557670	1					
ANR	2557693	IdentifierDeclType	gx_color_value		2557670	0					
ANR	2557694	Identifier	m		2557670	1					
ANR	2557695	IdentifierDecl	y		2557670	2					
ANR	2557696	IdentifierDeclType	gx_color_value		2557670	0					
ANR	2557697	Identifier	y		2557670	1					
ANR	2557698	IdentifierDecl	k		2557670	3					
ANR	2557699	IdentifierDeclType	gx_color_value		2557670	0					
ANR	2557700	Identifier	k		2557670	1					
ANR	2557701	ExpressionStatement	c = cv [ 0 ]	2163:3:87258:87267	2557670	3	True				
ANR	2557702	AssignmentExpression	c = cv [ 0 ]		2557670	0		=			
ANR	2557703	Identifier	c		2557670	0					
ANR	2557704	ArrayIndexing	cv [ 0 ]		2557670	1					
ANR	2557705	Identifier	cv		2557670	0					
ANR	2557706	PrimaryExpression	0		2557670	1					
ANR	2557707	ExpressionStatement	m = cv [ 1 ]	2163:14:87269:87278	2557670	4	True				
ANR	2557708	AssignmentExpression	m = cv [ 1 ]		2557670	0		=			
ANR	2557709	Identifier	m		2557670	0					
ANR	2557710	ArrayIndexing	cv [ 1 ]		2557670	1					
ANR	2557711	Identifier	cv		2557670	0					
ANR	2557712	PrimaryExpression	1		2557670	1					
ANR	2557713	ExpressionStatement	y = cv [ 2 ]	2163:25:87280:87289	2557670	5	True				
ANR	2557714	AssignmentExpression	y = cv [ 2 ]		2557670	0		=			
ANR	2557715	Identifier	y		2557670	0					
ANR	2557716	ArrayIndexing	cv [ 2 ]		2557670	1					
ANR	2557717	Identifier	cv		2557670	0					
ANR	2557718	PrimaryExpression	2		2557670	1					
ANR	2557719	ExpressionStatement	k = cv [ 3 ]	2163:36:87291:87300	2557670	6	True				
ANR	2557720	AssignmentExpression	k = cv [ 3 ]		2557670	0		=			
ANR	2557721	Identifier	k		2557670	0					
ANR	2557722	ArrayIndexing	cv [ 3 ]		2557670	1					
ANR	2557723	Identifier	cv		2557670	0					
ANR	2557724	PrimaryExpression	3		2557670	1					
ANR	2557725	IfStatement	if ( ( c == m ) && ( m == y ) )		2557670	7					
ANR	2557726	Condition	( c == m ) && ( m == y )	2173:6:87614:87633	2557670	0	True				
ANR	2557727	AndExpression	( c == m ) && ( m == y )		2557670	0		&&			
ANR	2557728	EqualityExpression	c == m		2557670	0		==			
ANR	2557729	Identifier	c		2557670	0					
ANR	2557730	Identifier	m		2557670	1					
ANR	2557731	EqualityExpression	m == y		2557670	1		==			
ANR	2557732	Identifier	m		2557670	0					
ANR	2557733	Identifier	y		2557670	1					
ANR	2557734	CompoundStatement		15:28:487:487	2557670	1					
ANR	2557735	ExpressionStatement	"rv = upd_truncate ( upd , 0 , ( gx_color_value ) ( c > k ? c : k ) )"	2175:6:87645:87701	2557670	0	True				
ANR	2557736	AssignmentExpression	"rv = upd_truncate ( upd , 0 , ( gx_color_value ) ( c > k ? c : k ) )"		2557670	0		=			
ANR	2557737	Identifier	rv		2557670	0					
ANR	2557738	CallExpression	"upd_truncate ( upd , 0 , ( gx_color_value ) ( c > k ? c : k ) )"		2557670	1					
ANR	2557739	Callee	upd_truncate		2557670	0					
ANR	2557740	Identifier	upd_truncate		2557670	0					
ANR	2557741	ArgumentList	upd		2557670	1					
ANR	2557742	Argument	upd		2557670	0					
ANR	2557743	Identifier	upd		2557670	0					
ANR	2557744	Argument	0		2557670	1					
ANR	2557745	PrimaryExpression	0		2557670	0					
ANR	2557746	Argument	( gx_color_value ) ( c > k ? c : k )		2557670	2					
ANR	2557747	CastExpression	( gx_color_value ) ( c > k ? c : k )		2557670	0					
ANR	2557748	CastTarget	gx_color_value		2557670	0					
ANR	2557749	ConditionalExpression	c > k ? c : k		2557670	1					
ANR	2557750	Condition	c > k		2557670	0					
ANR	2557751	RelationalExpression	c > k		2557670	0		>			
ANR	2557752	Identifier	c		2557670	0					
ANR	2557753	Identifier	k		2557670	1					
ANR	2557754	Identifier	c		2557670	1					
ANR	2557755	Identifier	k		2557670	2					
ANR	2557756	ElseStatement	else		2557670	0					
ANR	2557757	CompoundStatement		19:10:565:565	2557670	0					
ANR	2557758	ExpressionStatement	"rv = upd_truncate ( upd , 0 , k ) | upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"	2179:6:87723:87832	2557670	0	True				
ANR	2557759	AssignmentExpression	"rv = upd_truncate ( upd , 0 , k ) | upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		2557670	0		=			
ANR	2557760	Identifier	rv		2557670	0					
ANR	2557761	InclusiveOrExpression	"upd_truncate ( upd , 0 , k ) | upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		2557670	1		|			
ANR	2557762	CallExpression	"upd_truncate ( upd , 0 , k )"		2557670	0					
ANR	2557763	Callee	upd_truncate		2557670	0					
ANR	2557764	Identifier	upd_truncate		2557670	0					
ANR	2557765	ArgumentList	upd		2557670	1					
ANR	2557766	Argument	upd		2557670	0					
ANR	2557767	Identifier	upd		2557670	0					
ANR	2557768	Argument	0		2557670	1					
ANR	2557769	PrimaryExpression	0		2557670	0					
ANR	2557770	Argument	k		2557670	2					
ANR	2557771	Identifier	k		2557670	0					
ANR	2557772	InclusiveOrExpression	"upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		2557670	1		|			
ANR	2557773	CallExpression	"upd_truncate ( upd , 1 , c )"		2557670	0					
ANR	2557774	Callee	upd_truncate		2557670	0					
ANR	2557775	Identifier	upd_truncate		2557670	0					
ANR	2557776	ArgumentList	upd		2557670	1					
ANR	2557777	Argument	upd		2557670	0					
ANR	2557778	Identifier	upd		2557670	0					
ANR	2557779	Argument	1		2557670	1					
ANR	2557780	PrimaryExpression	1		2557670	0					
ANR	2557781	Argument	c		2557670	2					
ANR	2557782	Identifier	c		2557670	0					
ANR	2557783	InclusiveOrExpression	"upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		2557670	1		|			
ANR	2557784	CallExpression	"upd_truncate ( upd , 2 , m )"		2557670	0					
ANR	2557785	Callee	upd_truncate		2557670	0					
ANR	2557786	Identifier	upd_truncate		2557670	0					
ANR	2557787	ArgumentList	upd		2557670	1					
ANR	2557788	Argument	upd		2557670	0					
ANR	2557789	Identifier	upd		2557670	0					
ANR	2557790	Argument	2		2557670	1					
ANR	2557791	PrimaryExpression	2		2557670	0					
ANR	2557792	Argument	m		2557670	2					
ANR	2557793	Identifier	m		2557670	0					
ANR	2557794	CallExpression	"upd_truncate ( upd , 3 , y )"		2557670	1					
ANR	2557795	Callee	upd_truncate		2557670	0					
ANR	2557796	Identifier	upd_truncate		2557670	0					
ANR	2557797	ArgumentList	upd		2557670	1					
ANR	2557798	Argument	upd		2557670	0					
ANR	2557799	Identifier	upd		2557670	0					
ANR	2557800	Argument	3		2557670	1					
ANR	2557801	PrimaryExpression	3		2557670	0					
ANR	2557802	Argument	y		2557670	2					
ANR	2557803	Identifier	y		2557670	0					
ANR	2557804	IfStatement	if ( rv == gx_no_color_index )		2557670	1					
ANR	2557805	Condition	rv == gx_no_color_index	2184:9:87920:87942	2557670	0	True				
ANR	2557806	EqualityExpression	rv == gx_no_color_index		2557670	0		==			
ANR	2557807	Identifier	rv		2557670	0					
ANR	2557808	Identifier	gx_no_color_index		2557670	1					
ANR	2557809	ExpressionStatement	rv ^= 1	2184:34:87945:87952	2557670	1	True				
ANR	2557810	AssignmentExpression	rv ^= 1		2557670	0		^=			
ANR	2557811	Identifier	rv		2557670	0					
ANR	2557812	PrimaryExpression	1		2557670	1					
ANR	2557813	ExpressionStatement	"errprintf ( pdev -> memory , ""cmyk_icolor: (%5.1f,%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) c / ( double ) gx_max_color_value , 255.0 * ( double ) m / ( double ) gx_max_color_value , 255.0 * ( double ) y / ( double ) gx_max_color_value , 255.0 * ( double ) k / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"	2188:2:87996:88836	2557670	8	True				
ANR	2557814	CallExpression	"errprintf ( pdev -> memory , ""cmyk_icolor: (%5.1f,%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) c / ( double ) gx_max_color_value , 255.0 * ( double ) m / ( double ) gx_max_color_value , 255.0 * ( double ) y / ( double ) gx_max_color_value , 255.0 * ( double ) k / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"		2557670	0					
ANR	2557815	Callee	errprintf		2557670	0					
ANR	2557816	Identifier	errprintf		2557670	0					
ANR	2557817	ArgumentList	pdev -> memory		2557670	1					
ANR	2557818	Argument	pdev -> memory		2557670	0					
ANR	2557819	PtrMemberAccess	pdev -> memory		2557670	0					
ANR	2557820	Identifier	pdev		2557670	0					
ANR	2557821	Identifier	memory		2557670	1					
ANR	2557822	Argument	"""cmyk_icolor: (%5.1f,%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"""		2557670	1					
ANR	2557823	PrimaryExpression	"""cmyk_icolor: (%5.1f,%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"""		2557670	0					
ANR	2557824	Argument	255.0 * ( double ) c / ( double ) gx_max_color_value		2557670	2					
ANR	2557825	MultiplicativeExpression	255.0 * ( double ) c / ( double ) gx_max_color_value		2557670	0		*			
ANR	2557826	PrimaryExpression	255.0		2557670	0					
ANR	2557827	MultiplicativeExpression	( double ) c / ( double ) gx_max_color_value		2557670	1		/			
ANR	2557828	CastExpression	( double ) c		2557670	0					
ANR	2557829	CastTarget	double		2557670	0					
ANR	2557830	Identifier	c		2557670	1					
ANR	2557831	CastExpression	( double ) gx_max_color_value		2557670	1					
ANR	2557832	CastTarget	double		2557670	0					
ANR	2557833	Identifier	gx_max_color_value		2557670	1					
ANR	2557834	Argument	255.0 * ( double ) m / ( double ) gx_max_color_value		2557670	3					
ANR	2557835	MultiplicativeExpression	255.0 * ( double ) m / ( double ) gx_max_color_value		2557670	0		*			
ANR	2557836	PrimaryExpression	255.0		2557670	0					
ANR	2557837	MultiplicativeExpression	( double ) m / ( double ) gx_max_color_value		2557670	1		/			
ANR	2557838	CastExpression	( double ) m		2557670	0					
ANR	2557839	CastTarget	double		2557670	0					
ANR	2557840	Identifier	m		2557670	1					
ANR	2557841	CastExpression	( double ) gx_max_color_value		2557670	1					
ANR	2557842	CastTarget	double		2557670	0					
ANR	2557843	Identifier	gx_max_color_value		2557670	1					
ANR	2557844	Argument	255.0 * ( double ) y / ( double ) gx_max_color_value		2557670	4					
ANR	2557845	MultiplicativeExpression	255.0 * ( double ) y / ( double ) gx_max_color_value		2557670	0		*			
ANR	2557846	PrimaryExpression	255.0		2557670	0					
ANR	2557847	MultiplicativeExpression	( double ) y / ( double ) gx_max_color_value		2557670	1		/			
ANR	2557848	CastExpression	( double ) y		2557670	0					
ANR	2557849	CastTarget	double		2557670	0					
ANR	2557850	Identifier	y		2557670	1					
ANR	2557851	CastExpression	( double ) gx_max_color_value		2557670	1					
ANR	2557852	CastTarget	double		2557670	0					
ANR	2557853	Identifier	gx_max_color_value		2557670	1					
ANR	2557854	Argument	255.0 * ( double ) k / ( double ) gx_max_color_value		2557670	5					
ANR	2557855	MultiplicativeExpression	255.0 * ( double ) k / ( double ) gx_max_color_value		2557670	0		*			
ANR	2557856	PrimaryExpression	255.0		2557670	0					
ANR	2557857	MultiplicativeExpression	( double ) k / ( double ) gx_max_color_value		2557670	1		/			
ANR	2557858	CastExpression	( double ) k		2557670	0					
ANR	2557859	CastTarget	double		2557670	0					
ANR	2557860	Identifier	k		2557670	1					
ANR	2557861	CastExpression	( double ) gx_max_color_value		2557670	1					
ANR	2557862	CastTarget	double		2557670	0					
ANR	2557863	Identifier	gx_max_color_value		2557670	1					
ANR	2557864	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2557670	6					
ANR	2557865	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2557670	0		*			
ANR	2557866	PrimaryExpression	255.0		2557670	0					
ANR	2557867	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2557670	1		/			
ANR	2557868	CastExpression	( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk )		2557670	0					
ANR	2557869	CastTarget	double		2557670	0					
ANR	2557870	BitAndExpression	( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk		2557670	1		&			
ANR	2557871	ShiftExpression	rv >> upd -> cmap [ 1 ] . bitshf		2557670	0		>>			
ANR	2557872	Identifier	rv		2557670	0					
ANR	2557873	MemberAccess	upd -> cmap [ 1 ] . bitshf		2557670	1					
ANR	2557874	ArrayIndexing	upd -> cmap [ 1 ]		2557670	0					
ANR	2557875	PtrMemberAccess	upd -> cmap		2557670	0					
ANR	2557876	Identifier	upd		2557670	0					
ANR	2557877	Identifier	cmap		2557670	1					
ANR	2557878	PrimaryExpression	1		2557670	1					
ANR	2557879	Identifier	bitshf		2557670	1					
ANR	2557880	MemberAccess	upd -> cmap [ 1 ] . bitmsk		2557670	1					
ANR	2557881	ArrayIndexing	upd -> cmap [ 1 ]		2557670	0					
ANR	2557882	PtrMemberAccess	upd -> cmap		2557670	0					
ANR	2557883	Identifier	upd		2557670	0					
ANR	2557884	Identifier	cmap		2557670	1					
ANR	2557885	PrimaryExpression	1		2557670	1					
ANR	2557886	Identifier	bitmsk		2557670	1					
ANR	2557887	CastExpression	( double ) upd -> cmap [ 1 ] . bitmsk		2557670	1					
ANR	2557888	CastTarget	double		2557670	0					
ANR	2557889	MemberAccess	upd -> cmap [ 1 ] . bitmsk		2557670	1					
ANR	2557890	ArrayIndexing	upd -> cmap [ 1 ]		2557670	0					
ANR	2557891	PtrMemberAccess	upd -> cmap		2557670	0					
ANR	2557892	Identifier	upd		2557670	0					
ANR	2557893	Identifier	cmap		2557670	1					
ANR	2557894	PrimaryExpression	1		2557670	1					
ANR	2557895	Identifier	bitmsk		2557670	1					
ANR	2557896	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2557670	7					
ANR	2557897	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2557670	0		*			
ANR	2557898	PrimaryExpression	255.0		2557670	0					
ANR	2557899	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2557670	1		/			
ANR	2557900	CastExpression	( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk )		2557670	0					
ANR	2557901	CastTarget	double		2557670	0					
ANR	2557902	BitAndExpression	( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk		2557670	1		&			
ANR	2557903	ShiftExpression	rv >> upd -> cmap [ 2 ] . bitshf		2557670	0		>>			
ANR	2557904	Identifier	rv		2557670	0					
ANR	2557905	MemberAccess	upd -> cmap [ 2 ] . bitshf		2557670	1					
ANR	2557906	ArrayIndexing	upd -> cmap [ 2 ]		2557670	0					
ANR	2557907	PtrMemberAccess	upd -> cmap		2557670	0					
ANR	2557908	Identifier	upd		2557670	0					
ANR	2557909	Identifier	cmap		2557670	1					
ANR	2557910	PrimaryExpression	2		2557670	1					
ANR	2557911	Identifier	bitshf		2557670	1					
ANR	2557912	MemberAccess	upd -> cmap [ 2 ] . bitmsk		2557670	1					
ANR	2557913	ArrayIndexing	upd -> cmap [ 2 ]		2557670	0					
ANR	2557914	PtrMemberAccess	upd -> cmap		2557670	0					
ANR	2557915	Identifier	upd		2557670	0					
ANR	2557916	Identifier	cmap		2557670	1					
ANR	2557917	PrimaryExpression	2		2557670	1					
ANR	2557918	Identifier	bitmsk		2557670	1					
ANR	2557919	CastExpression	( double ) upd -> cmap [ 2 ] . bitmsk		2557670	1					
ANR	2557920	CastTarget	double		2557670	0					
ANR	2557921	MemberAccess	upd -> cmap [ 2 ] . bitmsk		2557670	1					
ANR	2557922	ArrayIndexing	upd -> cmap [ 2 ]		2557670	0					
ANR	2557923	PtrMemberAccess	upd -> cmap		2557670	0					
ANR	2557924	Identifier	upd		2557670	0					
ANR	2557925	Identifier	cmap		2557670	1					
ANR	2557926	PrimaryExpression	2		2557670	1					
ANR	2557927	Identifier	bitmsk		2557670	1					
ANR	2557928	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		2557670	8					
ANR	2557929	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		2557670	0		*			
ANR	2557930	PrimaryExpression	255.0		2557670	0					
ANR	2557931	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		2557670	1		/			
ANR	2557932	CastExpression	( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk )		2557670	0					
ANR	2557933	CastTarget	double		2557670	0					
ANR	2557934	BitAndExpression	( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk		2557670	1		&			
ANR	2557935	ShiftExpression	rv >> upd -> cmap [ 3 ] . bitshf		2557670	0		>>			
ANR	2557936	Identifier	rv		2557670	0					
ANR	2557937	MemberAccess	upd -> cmap [ 3 ] . bitshf		2557670	1					
ANR	2557938	ArrayIndexing	upd -> cmap [ 3 ]		2557670	0					
ANR	2557939	PtrMemberAccess	upd -> cmap		2557670	0					
ANR	2557940	Identifier	upd		2557670	0					
ANR	2557941	Identifier	cmap		2557670	1					
ANR	2557942	PrimaryExpression	3		2557670	1					
ANR	2557943	Identifier	bitshf		2557670	1					
ANR	2557944	MemberAccess	upd -> cmap [ 3 ] . bitmsk		2557670	1					
ANR	2557945	ArrayIndexing	upd -> cmap [ 3 ]		2557670	0					
ANR	2557946	PtrMemberAccess	upd -> cmap		2557670	0					
ANR	2557947	Identifier	upd		2557670	0					
ANR	2557948	Identifier	cmap		2557670	1					
ANR	2557949	PrimaryExpression	3		2557670	1					
ANR	2557950	Identifier	bitmsk		2557670	1					
ANR	2557951	CastExpression	( double ) upd -> cmap [ 3 ] . bitmsk		2557670	1					
ANR	2557952	CastTarget	double		2557670	0					
ANR	2557953	MemberAccess	upd -> cmap [ 3 ] . bitmsk		2557670	1					
ANR	2557954	ArrayIndexing	upd -> cmap [ 3 ]		2557670	0					
ANR	2557955	PtrMemberAccess	upd -> cmap		2557670	0					
ANR	2557956	Identifier	upd		2557670	0					
ANR	2557957	Identifier	cmap		2557670	1					
ANR	2557958	PrimaryExpression	3		2557670	1					
ANR	2557959	Identifier	bitmsk		2557670	1					
ANR	2557960	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2557670	9					
ANR	2557961	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2557670	0		*			
ANR	2557962	PrimaryExpression	255.0		2557670	0					
ANR	2557963	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2557670	1		/			
ANR	2557964	CastExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk )		2557670	0					
ANR	2557965	CastTarget	double		2557670	0					
ANR	2557966	BitAndExpression	( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk		2557670	1		&			
ANR	2557967	ShiftExpression	rv >> upd -> cmap [ 0 ] . bitshf		2557670	0		>>			
ANR	2557968	Identifier	rv		2557670	0					
ANR	2557969	MemberAccess	upd -> cmap [ 0 ] . bitshf		2557670	1					
ANR	2557970	ArrayIndexing	upd -> cmap [ 0 ]		2557670	0					
ANR	2557971	PtrMemberAccess	upd -> cmap		2557670	0					
ANR	2557972	Identifier	upd		2557670	0					
ANR	2557973	Identifier	cmap		2557670	1					
ANR	2557974	PrimaryExpression	0		2557670	1					
ANR	2557975	Identifier	bitshf		2557670	1					
ANR	2557976	MemberAccess	upd -> cmap [ 0 ] . bitmsk		2557670	1					
ANR	2557977	ArrayIndexing	upd -> cmap [ 0 ]		2557670	0					
ANR	2557978	PtrMemberAccess	upd -> cmap		2557670	0					
ANR	2557979	Identifier	upd		2557670	0					
ANR	2557980	Identifier	cmap		2557670	1					
ANR	2557981	PrimaryExpression	0		2557670	1					
ANR	2557982	Identifier	bitmsk		2557670	1					
ANR	2557983	CastExpression	( double ) upd -> cmap [ 0 ] . bitmsk		2557670	1					
ANR	2557984	CastTarget	double		2557670	0					
ANR	2557985	MemberAccess	upd -> cmap [ 0 ] . bitmsk		2557670	1					
ANR	2557986	ArrayIndexing	upd -> cmap [ 0 ]		2557670	0					
ANR	2557987	PtrMemberAccess	upd -> cmap		2557670	0					
ANR	2557988	Identifier	upd		2557670	0					
ANR	2557989	Identifier	cmap		2557670	1					
ANR	2557990	PrimaryExpression	0		2557670	1					
ANR	2557991	Identifier	bitmsk		2557670	1					
ANR	2557992	Argument	( pdev -> color_info . depth + 3 ) >> 2		2557670	10					
ANR	2557993	ShiftExpression	( pdev -> color_info . depth + 3 ) >> 2		2557670	0		>>			
ANR	2557994	AdditiveExpression	pdev -> color_info . depth + 3		2557670	0		+			
ANR	2557995	MemberAccess	pdev -> color_info . depth		2557670	0					
ANR	2557996	PtrMemberAccess	pdev -> color_info		2557670	0					
ANR	2557997	Identifier	pdev		2557670	0					
ANR	2557998	Identifier	color_info		2557670	1					
ANR	2557999	Identifier	depth		2557670	1					
ANR	2558000	PrimaryExpression	3		2557670	1					
ANR	2558001	PrimaryExpression	2		2557670	1					
ANR	2558002	Argument	rv		2557670	11					
ANR	2558003	Identifier	rv		2557670	0					
ANR	2558004	ReturnStatement	return rv ;	2205:3:88849:88858	2557670	9	True				
ANR	2558005	Identifier	rv		2557670	0					
ANR	2558006	ReturnType	static gx_color_index		2557670	1					
ANR	2558007	Identifier	upd_cmyk_icolor		2557670	2					
ANR	2558008	ParameterList	"gx_device * pdev , const gx_color_value cv [ ]"		2557670	3					
ANR	2558009	Parameter	gx_device * pdev	2158:16:87104:87118	2557670	0	True				
ANR	2558010	ParameterType	gx_device *		2557670	0					
ANR	2558011	Identifier	pdev		2557670	1					
ANR	2558012	Parameter	const gx_color_value cv [ ]	2158:33:87121:87145	2557670	1	True				
ANR	2558013	ParameterType	const gx_color_value [ ]		2557670	0					
ANR	2558014	Identifier	cv		2557670	1					
ANR	2558015	CFGEntryNode	ENTRY		2557670		True				
ANR	2558016	CFGExitNode	EXIT		2557670		True				
ANR	2558017	Symbol	rv		2557670						
ANR	2558018	Symbol	pdev -> color_info . depth		2557670						
ANR	2558019	Symbol	* upd -> cmap		2557670						
ANR	2558020	Symbol	pdev -> color_info		2557670						
ANR	2558021	Symbol	upd -> cmap [ 0 ] . bitshf		2557670						
ANR	2558022	Symbol	( ( upd_device * ) pdev ) -> upd		2557670						
ANR	2558023	Symbol	upd -> cmap		2557670						
ANR	2558024	Symbol	pdev		2557670						
ANR	2558025	Symbol	gx_no_color_index		2557670						
ANR	2558026	Symbol	* upd		2557670						
ANR	2558027	Symbol	pdev -> memory		2557670						
ANR	2558028	Symbol	upd -> cmap [ 2 ] . bitmsk		2557670						
ANR	2558029	Symbol	upd -> cmap [ 3 ] . bitshf		2557670						
ANR	2558030	Symbol	upd -> cmap [ 1 ] . bitmsk		2557670						
ANR	2558031	Symbol	upd -> cmap [ 2 ] . bitshf		2557670						
ANR	2558032	Symbol	upd -> cmap [ 3 ] . bitmsk		2557670						
ANR	2558033	Symbol	c		2557670						
ANR	2558034	Symbol	upd -> cmap [ 0 ] . bitmsk		2557670						
ANR	2558035	Symbol	upd		2557670						
ANR	2558036	Symbol	k		2557670						
ANR	2558037	Symbol	m		2557670						
ANR	2558038	Symbol	cv		2557670						
ANR	2558039	Symbol	upd -> cmap [ 1 ] . bitshf		2557670						
ANR	2558040	Symbol	gx_max_color_value		2557670						
ANR	2558041	Symbol	* pdev		2557670						
ANR	2558042	Symbol	y		2557670						
ANR	2558043	Symbol	* cv		2557670						
ANR	2558044	Symbol	upd_truncate		2557670						
ANR	2558045	Symbol	* * upd		2557670						
ANR	2558046	Function	upd_icolor_rgb	2212:0:89086:90964							
ANR	2558047	FunctionDef	"upd_icolor_rgb (gx_device * pdev , gx_color_index color , gx_color_value prgb [ 3 ])"		2558046	0					
ANR	2558048	CompoundStatement		2214:0:89175:90964	2558046	0					
ANR	2558049	IdentifierDeclStatement	const upd_p upd = ( ( upd_device * ) pdev ) -> upd ;	2215:3:89180:89227	2558046	0	True				
ANR	2558050	IdentifierDecl	upd = ( ( upd_device * ) pdev ) -> upd		2558046	0					
ANR	2558051	IdentifierDeclType	const upd_p		2558046	0					
ANR	2558052	Identifier	upd		2558046	1					
ANR	2558053	AssignmentExpression	upd = ( ( upd_device * ) pdev ) -> upd		2558046	2		=			
ANR	2558054	Identifier	upd		2558046	0					
ANR	2558055	PtrMemberAccess	( ( upd_device * ) pdev ) -> upd		2558046	1					
ANR	2558056	CastExpression	( upd_device * ) pdev		2558046	0					
ANR	2558057	CastTarget	upd_device *		2558046	0					
ANR	2558058	Identifier	pdev		2558046	1					
ANR	2558059	Identifier	upd		2558046	1					
ANR	2558060	IdentifierDeclStatement	"gx_color_value c , m , y , k ;"	2216:3:89232:89254	2558046	1	True				
ANR	2558061	IdentifierDecl	c		2558046	0					
ANR	2558062	IdentifierDeclType	gx_color_value		2558046	0					
ANR	2558063	Identifier	c		2558046	1					
ANR	2558064	IdentifierDecl	m		2558046	1					
ANR	2558065	IdentifierDeclType	gx_color_value		2558046	0					
ANR	2558066	Identifier	m		2558046	1					
ANR	2558067	IdentifierDecl	y		2558046	2					
ANR	2558068	IdentifierDeclType	gx_color_value		2558046	0					
ANR	2558069	Identifier	y		2558046	1					
ANR	2558070	IdentifierDecl	k		2558046	3					
ANR	2558071	IdentifierDeclType	gx_color_value		2558046	0					
ANR	2558072	Identifier	k		2558046	1					
ANR	2558073	ExpressionStatement	"k = upd_expand ( upd , 0 , color )"	2221:3:89301:89328	2558046	2	True				
ANR	2558074	AssignmentExpression	"k = upd_expand ( upd , 0 , color )"		2558046	0		=			
ANR	2558075	Identifier	k		2558046	0					
ANR	2558076	CallExpression	"upd_expand ( upd , 0 , color )"		2558046	1					
ANR	2558077	Callee	upd_expand		2558046	0					
ANR	2558078	Identifier	upd_expand		2558046	0					
ANR	2558079	ArgumentList	upd		2558046	1					
ANR	2558080	Argument	upd		2558046	0					
ANR	2558081	Identifier	upd		2558046	0					
ANR	2558082	Argument	0		2558046	1					
ANR	2558083	PrimaryExpression	0		2558046	0					
ANR	2558084	Argument	color		2558046	2					
ANR	2558085	Identifier	color		2558046	0					
ANR	2558086	ExpressionStatement	"c = upd_expand ( upd , 1 , color )"	2222:3:89333:89360	2558046	3	True				
ANR	2558087	AssignmentExpression	"c = upd_expand ( upd , 1 , color )"		2558046	0		=			
ANR	2558088	Identifier	c		2558046	0					
ANR	2558089	CallExpression	"upd_expand ( upd , 1 , color )"		2558046	1					
ANR	2558090	Callee	upd_expand		2558046	0					
ANR	2558091	Identifier	upd_expand		2558046	0					
ANR	2558092	ArgumentList	upd		2558046	1					
ANR	2558093	Argument	upd		2558046	0					
ANR	2558094	Identifier	upd		2558046	0					
ANR	2558095	Argument	1		2558046	1					
ANR	2558096	PrimaryExpression	1		2558046	0					
ANR	2558097	Argument	color		2558046	2					
ANR	2558098	Identifier	color		2558046	0					
ANR	2558099	ExpressionStatement	"m = upd_expand ( upd , 2 , color )"	2223:3:89365:89392	2558046	4	True				
ANR	2558100	AssignmentExpression	"m = upd_expand ( upd , 2 , color )"		2558046	0		=			
ANR	2558101	Identifier	m		2558046	0					
ANR	2558102	CallExpression	"upd_expand ( upd , 2 , color )"		2558046	1					
ANR	2558103	Callee	upd_expand		2558046	0					
ANR	2558104	Identifier	upd_expand		2558046	0					
ANR	2558105	ArgumentList	upd		2558046	1					
ANR	2558106	Argument	upd		2558046	0					
ANR	2558107	Identifier	upd		2558046	0					
ANR	2558108	Argument	2		2558046	1					
ANR	2558109	PrimaryExpression	2		2558046	0					
ANR	2558110	Argument	color		2558046	2					
ANR	2558111	Identifier	color		2558046	0					
ANR	2558112	ExpressionStatement	"y = upd_expand ( upd , 3 , color )"	2224:3:89397:89424	2558046	5	True				
ANR	2558113	AssignmentExpression	"y = upd_expand ( upd , 3 , color )"		2558046	0		=			
ANR	2558114	Identifier	y		2558046	0					
ANR	2558115	CallExpression	"upd_expand ( upd , 3 , color )"		2558046	1					
ANR	2558116	Callee	upd_expand		2558046	0					
ANR	2558117	Identifier	upd_expand		2558046	0					
ANR	2558118	ArgumentList	upd		2558046	1					
ANR	2558119	Argument	upd		2558046	0					
ANR	2558120	Identifier	upd		2558046	0					
ANR	2558121	Argument	3		2558046	1					
ANR	2558122	PrimaryExpression	3		2558046	0					
ANR	2558123	Argument	color		2558046	2					
ANR	2558124	Identifier	color		2558046	0					
ANR	2558125	ExpressionStatement	prgb [ 0 ] = gx_max_color_value - c	2229:3:89483:89515	2558046	6	True				
ANR	2558126	AssignmentExpression	prgb [ 0 ] = gx_max_color_value - c		2558046	0		=			
ANR	2558127	ArrayIndexing	prgb [ 0 ]		2558046	0					
ANR	2558128	Identifier	prgb		2558046	0					
ANR	2558129	PrimaryExpression	0		2558046	1					
ANR	2558130	AdditiveExpression	gx_max_color_value - c		2558046	1		-			
ANR	2558131	Identifier	gx_max_color_value		2558046	0					
ANR	2558132	Identifier	c		2558046	1					
ANR	2558133	IfStatement	if ( prgb [ 0 ] > k )		2558046	7					
ANR	2558134	Condition	prgb [ 0 ] > k	2230:6:89523:89533	2558046	0	True				
ANR	2558135	RelationalExpression	prgb [ 0 ] > k		2558046	0		>			
ANR	2558136	ArrayIndexing	prgb [ 0 ]		2558046	0					
ANR	2558137	Identifier	prgb		2558046	0					
ANR	2558138	PrimaryExpression	0		2558046	1					
ANR	2558139	Identifier	k		2558046	1					
ANR	2558140	ExpressionStatement	prgb [ 0 ] -= k	2230:19:89536:89548	2558046	1	True				
ANR	2558141	AssignmentExpression	prgb [ 0 ] -= k		2558046	0		-=			
ANR	2558142	ArrayIndexing	prgb [ 0 ]		2558046	0					
ANR	2558143	Identifier	prgb		2558046	0					
ANR	2558144	PrimaryExpression	0		2558046	1					
ANR	2558145	Identifier	k		2558046	1					
ANR	2558146	ElseStatement	else		2558046	0					
ANR	2558147	ExpressionStatement	prgb [ 0 ] = 0	2231:19:89569:89581	2558046	0	True				
ANR	2558148	AssignmentExpression	prgb [ 0 ] = 0		2558046	0		=			
ANR	2558149	ArrayIndexing	prgb [ 0 ]		2558046	0					
ANR	2558150	Identifier	prgb		2558046	0					
ANR	2558151	PrimaryExpression	0		2558046	1					
ANR	2558152	PrimaryExpression	0		2558046	1					
ANR	2558153	ExpressionStatement	prgb [ 1 ] = gx_max_color_value - m	2233:3:89587:89619	2558046	8	True				
ANR	2558154	AssignmentExpression	prgb [ 1 ] = gx_max_color_value - m		2558046	0		=			
ANR	2558155	ArrayIndexing	prgb [ 1 ]		2558046	0					
ANR	2558156	Identifier	prgb		2558046	0					
ANR	2558157	PrimaryExpression	1		2558046	1					
ANR	2558158	AdditiveExpression	gx_max_color_value - m		2558046	1		-			
ANR	2558159	Identifier	gx_max_color_value		2558046	0					
ANR	2558160	Identifier	m		2558046	1					
ANR	2558161	IfStatement	if ( prgb [ 1 ] > k )		2558046	9					
ANR	2558162	Condition	prgb [ 1 ] > k	2234:6:89627:89637	2558046	0	True				
ANR	2558163	RelationalExpression	prgb [ 1 ] > k		2558046	0		>			
ANR	2558164	ArrayIndexing	prgb [ 1 ]		2558046	0					
ANR	2558165	Identifier	prgb		2558046	0					
ANR	2558166	PrimaryExpression	1		2558046	1					
ANR	2558167	Identifier	k		2558046	1					
ANR	2558168	ExpressionStatement	prgb [ 1 ] -= k	2234:19:89640:89652	2558046	1	True				
ANR	2558169	AssignmentExpression	prgb [ 1 ] -= k		2558046	0		-=			
ANR	2558170	ArrayIndexing	prgb [ 1 ]		2558046	0					
ANR	2558171	Identifier	prgb		2558046	0					
ANR	2558172	PrimaryExpression	1		2558046	1					
ANR	2558173	Identifier	k		2558046	1					
ANR	2558174	ElseStatement	else		2558046	0					
ANR	2558175	ExpressionStatement	prgb [ 1 ] = 0	2235:19:89673:89685	2558046	0	True				
ANR	2558176	AssignmentExpression	prgb [ 1 ] = 0		2558046	0		=			
ANR	2558177	ArrayIndexing	prgb [ 1 ]		2558046	0					
ANR	2558178	Identifier	prgb		2558046	0					
ANR	2558179	PrimaryExpression	1		2558046	1					
ANR	2558180	PrimaryExpression	0		2558046	1					
ANR	2558181	ExpressionStatement	prgb [ 2 ] = gx_max_color_value - y	2237:3:89691:89723	2558046	10	True				
ANR	2558182	AssignmentExpression	prgb [ 2 ] = gx_max_color_value - y		2558046	0		=			
ANR	2558183	ArrayIndexing	prgb [ 2 ]		2558046	0					
ANR	2558184	Identifier	prgb		2558046	0					
ANR	2558185	PrimaryExpression	2		2558046	1					
ANR	2558186	AdditiveExpression	gx_max_color_value - y		2558046	1		-			
ANR	2558187	Identifier	gx_max_color_value		2558046	0					
ANR	2558188	Identifier	y		2558046	1					
ANR	2558189	IfStatement	if ( prgb [ 2 ] > k )		2558046	11					
ANR	2558190	Condition	prgb [ 2 ] > k	2238:6:89731:89741	2558046	0	True				
ANR	2558191	RelationalExpression	prgb [ 2 ] > k		2558046	0		>			
ANR	2558192	ArrayIndexing	prgb [ 2 ]		2558046	0					
ANR	2558193	Identifier	prgb		2558046	0					
ANR	2558194	PrimaryExpression	2		2558046	1					
ANR	2558195	Identifier	k		2558046	1					
ANR	2558196	ExpressionStatement	prgb [ 2 ] -= k	2238:19:89744:89756	2558046	1	True				
ANR	2558197	AssignmentExpression	prgb [ 2 ] -= k		2558046	0		-=			
ANR	2558198	ArrayIndexing	prgb [ 2 ]		2558046	0					
ANR	2558199	Identifier	prgb		2558046	0					
ANR	2558200	PrimaryExpression	2		2558046	1					
ANR	2558201	Identifier	k		2558046	1					
ANR	2558202	ElseStatement	else		2558046	0					
ANR	2558203	ExpressionStatement	prgb [ 2 ] = 0	2239:19:89777:89789	2558046	0	True				
ANR	2558204	AssignmentExpression	prgb [ 2 ] = 0		2558046	0		=			
ANR	2558205	ArrayIndexing	prgb [ 2 ]		2558046	0					
ANR	2558206	Identifier	prgb		2558046	0					
ANR	2558207	PrimaryExpression	2		2558046	1					
ANR	2558208	PrimaryExpression	0		2558046	1					
ANR	2558209	ExpressionStatement	"errprintf ( pdev -> memory , ""icolor_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"" , ( pdev -> color_info . depth + 3 ) >> 2 , color , 255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , 255.0 * ( double ) c / ( double ) gx_max_color_value , 255.0 * ( double ) m / ( double ) gx_max_color_value , 255.0 * ( double ) y / ( double ) gx_max_color_value , 255.0 * ( double ) k / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value )"	2242:3:89829:90941	2558046	12	True				
ANR	2558210	CallExpression	"errprintf ( pdev -> memory , ""icolor_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"" , ( pdev -> color_info . depth + 3 ) >> 2 , color , 255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , 255.0 * ( double ) c / ( double ) gx_max_color_value , 255.0 * ( double ) m / ( double ) gx_max_color_value , 255.0 * ( double ) y / ( double ) gx_max_color_value , 255.0 * ( double ) k / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value )"		2558046	0					
ANR	2558211	Callee	errprintf		2558046	0					
ANR	2558212	Identifier	errprintf		2558046	0					
ANR	2558213	ArgumentList	pdev -> memory		2558046	1					
ANR	2558214	Argument	pdev -> memory		2558046	0					
ANR	2558215	PtrMemberAccess	pdev -> memory		2558046	0					
ANR	2558216	Identifier	pdev		2558046	0					
ANR	2558217	Identifier	memory		2558046	1					
ANR	2558218	Argument	"""icolor_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"""		2558046	1					
ANR	2558219	PrimaryExpression	"""icolor_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"""		2558046	0					
ANR	2558220	Argument	( pdev -> color_info . depth + 3 ) >> 2		2558046	2					
ANR	2558221	ShiftExpression	( pdev -> color_info . depth + 3 ) >> 2		2558046	0		>>			
ANR	2558222	AdditiveExpression	pdev -> color_info . depth + 3		2558046	0		+			
ANR	2558223	MemberAccess	pdev -> color_info . depth		2558046	0					
ANR	2558224	PtrMemberAccess	pdev -> color_info		2558046	0					
ANR	2558225	Identifier	pdev		2558046	0					
ANR	2558226	Identifier	color_info		2558046	1					
ANR	2558227	Identifier	depth		2558046	1					
ANR	2558228	PrimaryExpression	3		2558046	1					
ANR	2558229	PrimaryExpression	2		2558046	1					
ANR	2558230	Argument	color		2558046	3					
ANR	2558231	Identifier	color		2558046	0					
ANR	2558232	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2558046	4					
ANR	2558233	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2558046	0		*			
ANR	2558234	PrimaryExpression	255.0		2558046	0					
ANR	2558235	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2558046	1		/			
ANR	2558236	CastExpression	( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk )		2558046	0					
ANR	2558237	CastTarget	double		2558046	0					
ANR	2558238	BitAndExpression	( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk		2558046	1		&			
ANR	2558239	ShiftExpression	color >> upd -> cmap [ 1 ] . bitshf		2558046	0		>>			
ANR	2558240	Identifier	color		2558046	0					
ANR	2558241	MemberAccess	upd -> cmap [ 1 ] . bitshf		2558046	1					
ANR	2558242	ArrayIndexing	upd -> cmap [ 1 ]		2558046	0					
ANR	2558243	PtrMemberAccess	upd -> cmap		2558046	0					
ANR	2558244	Identifier	upd		2558046	0					
ANR	2558245	Identifier	cmap		2558046	1					
ANR	2558246	PrimaryExpression	1		2558046	1					
ANR	2558247	Identifier	bitshf		2558046	1					
ANR	2558248	MemberAccess	upd -> cmap [ 1 ] . bitmsk		2558046	1					
ANR	2558249	ArrayIndexing	upd -> cmap [ 1 ]		2558046	0					
ANR	2558250	PtrMemberAccess	upd -> cmap		2558046	0					
ANR	2558251	Identifier	upd		2558046	0					
ANR	2558252	Identifier	cmap		2558046	1					
ANR	2558253	PrimaryExpression	1		2558046	1					
ANR	2558254	Identifier	bitmsk		2558046	1					
ANR	2558255	CastExpression	( double ) upd -> cmap [ 1 ] . bitmsk		2558046	1					
ANR	2558256	CastTarget	double		2558046	0					
ANR	2558257	MemberAccess	upd -> cmap [ 1 ] . bitmsk		2558046	1					
ANR	2558258	ArrayIndexing	upd -> cmap [ 1 ]		2558046	0					
ANR	2558259	PtrMemberAccess	upd -> cmap		2558046	0					
ANR	2558260	Identifier	upd		2558046	0					
ANR	2558261	Identifier	cmap		2558046	1					
ANR	2558262	PrimaryExpression	1		2558046	1					
ANR	2558263	Identifier	bitmsk		2558046	1					
ANR	2558264	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2558046	5					
ANR	2558265	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2558046	0		*			
ANR	2558266	PrimaryExpression	255.0		2558046	0					
ANR	2558267	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2558046	1		/			
ANR	2558268	CastExpression	( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk )		2558046	0					
ANR	2558269	CastTarget	double		2558046	0					
ANR	2558270	BitAndExpression	( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk		2558046	1		&			
ANR	2558271	ShiftExpression	color >> upd -> cmap [ 2 ] . bitshf		2558046	0		>>			
ANR	2558272	Identifier	color		2558046	0					
ANR	2558273	MemberAccess	upd -> cmap [ 2 ] . bitshf		2558046	1					
ANR	2558274	ArrayIndexing	upd -> cmap [ 2 ]		2558046	0					
ANR	2558275	PtrMemberAccess	upd -> cmap		2558046	0					
ANR	2558276	Identifier	upd		2558046	0					
ANR	2558277	Identifier	cmap		2558046	1					
ANR	2558278	PrimaryExpression	2		2558046	1					
ANR	2558279	Identifier	bitshf		2558046	1					
ANR	2558280	MemberAccess	upd -> cmap [ 2 ] . bitmsk		2558046	1					
ANR	2558281	ArrayIndexing	upd -> cmap [ 2 ]		2558046	0					
ANR	2558282	PtrMemberAccess	upd -> cmap		2558046	0					
ANR	2558283	Identifier	upd		2558046	0					
ANR	2558284	Identifier	cmap		2558046	1					
ANR	2558285	PrimaryExpression	2		2558046	1					
ANR	2558286	Identifier	bitmsk		2558046	1					
ANR	2558287	CastExpression	( double ) upd -> cmap [ 2 ] . bitmsk		2558046	1					
ANR	2558288	CastTarget	double		2558046	0					
ANR	2558289	MemberAccess	upd -> cmap [ 2 ] . bitmsk		2558046	1					
ANR	2558290	ArrayIndexing	upd -> cmap [ 2 ]		2558046	0					
ANR	2558291	PtrMemberAccess	upd -> cmap		2558046	0					
ANR	2558292	Identifier	upd		2558046	0					
ANR	2558293	Identifier	cmap		2558046	1					
ANR	2558294	PrimaryExpression	2		2558046	1					
ANR	2558295	Identifier	bitmsk		2558046	1					
ANR	2558296	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		2558046	6					
ANR	2558297	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		2558046	0		*			
ANR	2558298	PrimaryExpression	255.0		2558046	0					
ANR	2558299	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		2558046	1		/			
ANR	2558300	CastExpression	( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk )		2558046	0					
ANR	2558301	CastTarget	double		2558046	0					
ANR	2558302	BitAndExpression	( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk		2558046	1		&			
ANR	2558303	ShiftExpression	color >> upd -> cmap [ 3 ] . bitshf		2558046	0		>>			
ANR	2558304	Identifier	color		2558046	0					
ANR	2558305	MemberAccess	upd -> cmap [ 3 ] . bitshf		2558046	1					
ANR	2558306	ArrayIndexing	upd -> cmap [ 3 ]		2558046	0					
ANR	2558307	PtrMemberAccess	upd -> cmap		2558046	0					
ANR	2558308	Identifier	upd		2558046	0					
ANR	2558309	Identifier	cmap		2558046	1					
ANR	2558310	PrimaryExpression	3		2558046	1					
ANR	2558311	Identifier	bitshf		2558046	1					
ANR	2558312	MemberAccess	upd -> cmap [ 3 ] . bitmsk		2558046	1					
ANR	2558313	ArrayIndexing	upd -> cmap [ 3 ]		2558046	0					
ANR	2558314	PtrMemberAccess	upd -> cmap		2558046	0					
ANR	2558315	Identifier	upd		2558046	0					
ANR	2558316	Identifier	cmap		2558046	1					
ANR	2558317	PrimaryExpression	3		2558046	1					
ANR	2558318	Identifier	bitmsk		2558046	1					
ANR	2558319	CastExpression	( double ) upd -> cmap [ 3 ] . bitmsk		2558046	1					
ANR	2558320	CastTarget	double		2558046	0					
ANR	2558321	MemberAccess	upd -> cmap [ 3 ] . bitmsk		2558046	1					
ANR	2558322	ArrayIndexing	upd -> cmap [ 3 ]		2558046	0					
ANR	2558323	PtrMemberAccess	upd -> cmap		2558046	0					
ANR	2558324	Identifier	upd		2558046	0					
ANR	2558325	Identifier	cmap		2558046	1					
ANR	2558326	PrimaryExpression	3		2558046	1					
ANR	2558327	Identifier	bitmsk		2558046	1					
ANR	2558328	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2558046	7					
ANR	2558329	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2558046	0		*			
ANR	2558330	PrimaryExpression	255.0		2558046	0					
ANR	2558331	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2558046	1		/			
ANR	2558332	CastExpression	( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk )		2558046	0					
ANR	2558333	CastTarget	double		2558046	0					
ANR	2558334	BitAndExpression	( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk		2558046	1		&			
ANR	2558335	ShiftExpression	color >> upd -> cmap [ 0 ] . bitshf		2558046	0		>>			
ANR	2558336	Identifier	color		2558046	0					
ANR	2558337	MemberAccess	upd -> cmap [ 0 ] . bitshf		2558046	1					
ANR	2558338	ArrayIndexing	upd -> cmap [ 0 ]		2558046	0					
ANR	2558339	PtrMemberAccess	upd -> cmap		2558046	0					
ANR	2558340	Identifier	upd		2558046	0					
ANR	2558341	Identifier	cmap		2558046	1					
ANR	2558342	PrimaryExpression	0		2558046	1					
ANR	2558343	Identifier	bitshf		2558046	1					
ANR	2558344	MemberAccess	upd -> cmap [ 0 ] . bitmsk		2558046	1					
ANR	2558345	ArrayIndexing	upd -> cmap [ 0 ]		2558046	0					
ANR	2558346	PtrMemberAccess	upd -> cmap		2558046	0					
ANR	2558347	Identifier	upd		2558046	0					
ANR	2558348	Identifier	cmap		2558046	1					
ANR	2558349	PrimaryExpression	0		2558046	1					
ANR	2558350	Identifier	bitmsk		2558046	1					
ANR	2558351	CastExpression	( double ) upd -> cmap [ 0 ] . bitmsk		2558046	1					
ANR	2558352	CastTarget	double		2558046	0					
ANR	2558353	MemberAccess	upd -> cmap [ 0 ] . bitmsk		2558046	1					
ANR	2558354	ArrayIndexing	upd -> cmap [ 0 ]		2558046	0					
ANR	2558355	PtrMemberAccess	upd -> cmap		2558046	0					
ANR	2558356	Identifier	upd		2558046	0					
ANR	2558357	Identifier	cmap		2558046	1					
ANR	2558358	PrimaryExpression	0		2558046	1					
ANR	2558359	Identifier	bitmsk		2558046	1					
ANR	2558360	Argument	255.0 * ( double ) c / ( double ) gx_max_color_value		2558046	8					
ANR	2558361	MultiplicativeExpression	255.0 * ( double ) c / ( double ) gx_max_color_value		2558046	0		*			
ANR	2558362	PrimaryExpression	255.0		2558046	0					
ANR	2558363	MultiplicativeExpression	( double ) c / ( double ) gx_max_color_value		2558046	1		/			
ANR	2558364	CastExpression	( double ) c		2558046	0					
ANR	2558365	CastTarget	double		2558046	0					
ANR	2558366	Identifier	c		2558046	1					
ANR	2558367	CastExpression	( double ) gx_max_color_value		2558046	1					
ANR	2558368	CastTarget	double		2558046	0					
ANR	2558369	Identifier	gx_max_color_value		2558046	1					
ANR	2558370	Argument	255.0 * ( double ) m / ( double ) gx_max_color_value		2558046	9					
ANR	2558371	MultiplicativeExpression	255.0 * ( double ) m / ( double ) gx_max_color_value		2558046	0		*			
ANR	2558372	PrimaryExpression	255.0		2558046	0					
ANR	2558373	MultiplicativeExpression	( double ) m / ( double ) gx_max_color_value		2558046	1		/			
ANR	2558374	CastExpression	( double ) m		2558046	0					
ANR	2558375	CastTarget	double		2558046	0					
ANR	2558376	Identifier	m		2558046	1					
ANR	2558377	CastExpression	( double ) gx_max_color_value		2558046	1					
ANR	2558378	CastTarget	double		2558046	0					
ANR	2558379	Identifier	gx_max_color_value		2558046	1					
ANR	2558380	Argument	255.0 * ( double ) y / ( double ) gx_max_color_value		2558046	10					
ANR	2558381	MultiplicativeExpression	255.0 * ( double ) y / ( double ) gx_max_color_value		2558046	0		*			
ANR	2558382	PrimaryExpression	255.0		2558046	0					
ANR	2558383	MultiplicativeExpression	( double ) y / ( double ) gx_max_color_value		2558046	1		/			
ANR	2558384	CastExpression	( double ) y		2558046	0					
ANR	2558385	CastTarget	double		2558046	0					
ANR	2558386	Identifier	y		2558046	1					
ANR	2558387	CastExpression	( double ) gx_max_color_value		2558046	1					
ANR	2558388	CastTarget	double		2558046	0					
ANR	2558389	Identifier	gx_max_color_value		2558046	1					
ANR	2558390	Argument	255.0 * ( double ) k / ( double ) gx_max_color_value		2558046	11					
ANR	2558391	MultiplicativeExpression	255.0 * ( double ) k / ( double ) gx_max_color_value		2558046	0		*			
ANR	2558392	PrimaryExpression	255.0		2558046	0					
ANR	2558393	MultiplicativeExpression	( double ) k / ( double ) gx_max_color_value		2558046	1		/			
ANR	2558394	CastExpression	( double ) k		2558046	0					
ANR	2558395	CastTarget	double		2558046	0					
ANR	2558396	Identifier	k		2558046	1					
ANR	2558397	CastExpression	( double ) gx_max_color_value		2558046	1					
ANR	2558398	CastTarget	double		2558046	0					
ANR	2558399	Identifier	gx_max_color_value		2558046	1					
ANR	2558400	Argument	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		2558046	12					
ANR	2558401	MultiplicativeExpression	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		2558046	0		*			
ANR	2558402	PrimaryExpression	255.0		2558046	0					
ANR	2558403	MultiplicativeExpression	( double ) prgb [ 0 ] / ( double ) gx_max_color_value		2558046	1		/			
ANR	2558404	CastExpression	( double ) prgb [ 0 ]		2558046	0					
ANR	2558405	CastTarget	double		2558046	0					
ANR	2558406	ArrayIndexing	prgb [ 0 ]		2558046	1					
ANR	2558407	Identifier	prgb		2558046	0					
ANR	2558408	PrimaryExpression	0		2558046	1					
ANR	2558409	CastExpression	( double ) gx_max_color_value		2558046	1					
ANR	2558410	CastTarget	double		2558046	0					
ANR	2558411	Identifier	gx_max_color_value		2558046	1					
ANR	2558412	Argument	255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value		2558046	13					
ANR	2558413	MultiplicativeExpression	255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value		2558046	0		*			
ANR	2558414	PrimaryExpression	255.0		2558046	0					
ANR	2558415	MultiplicativeExpression	( double ) prgb [ 1 ] / ( double ) gx_max_color_value		2558046	1		/			
ANR	2558416	CastExpression	( double ) prgb [ 1 ]		2558046	0					
ANR	2558417	CastTarget	double		2558046	0					
ANR	2558418	ArrayIndexing	prgb [ 1 ]		2558046	1					
ANR	2558419	Identifier	prgb		2558046	0					
ANR	2558420	PrimaryExpression	1		2558046	1					
ANR	2558421	CastExpression	( double ) gx_max_color_value		2558046	1					
ANR	2558422	CastTarget	double		2558046	0					
ANR	2558423	Identifier	gx_max_color_value		2558046	1					
ANR	2558424	Argument	255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value		2558046	14					
ANR	2558425	MultiplicativeExpression	255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value		2558046	0		*			
ANR	2558426	PrimaryExpression	255.0		2558046	0					
ANR	2558427	MultiplicativeExpression	( double ) prgb [ 2 ] / ( double ) gx_max_color_value		2558046	1		/			
ANR	2558428	CastExpression	( double ) prgb [ 2 ]		2558046	0					
ANR	2558429	CastTarget	double		2558046	0					
ANR	2558430	ArrayIndexing	prgb [ 2 ]		2558046	1					
ANR	2558431	Identifier	prgb		2558046	0					
ANR	2558432	PrimaryExpression	2		2558046	1					
ANR	2558433	CastExpression	( double ) gx_max_color_value		2558046	1					
ANR	2558434	CastTarget	double		2558046	0					
ANR	2558435	Identifier	gx_max_color_value		2558046	1					
ANR	2558436	ReturnStatement	return 0 ;	2262:3:90954:90962	2558046	13	True				
ANR	2558437	PrimaryExpression	0		2558046	0					
ANR	2558438	ReturnType	static int		2558046	1					
ANR	2558439	Identifier	upd_icolor_rgb		2558046	2					
ANR	2558440	ParameterList	"gx_device * pdev , gx_color_index color , gx_color_value prgb [ 3 ]"		2558046	3					
ANR	2558441	Parameter	gx_device * pdev	2213:15:89112:89126	2558046	0	True				
ANR	2558442	ParameterType	gx_device *		2558046	0					
ANR	2558443	Identifier	pdev		2558046	1					
ANR	2558444	Parameter	gx_color_index color	2213:32:89129:89148	2558046	1	True				
ANR	2558445	ParameterType	gx_color_index		2558046	0					
ANR	2558446	Identifier	color		2558046	1					
ANR	2558447	Parameter	gx_color_value prgb [ 3 ]	2213:54:89151:89172	2558046	2	True				
ANR	2558448	ParameterType	gx_color_value [ 3 ]		2558046	0					
ANR	2558449	Identifier	prgb		2558046	1					
ANR	2558450	CFGEntryNode	ENTRY		2558046		True				
ANR	2558451	CFGExitNode	EXIT		2558046		True				
ANR	2558452	Symbol	color		2558046						
ANR	2558453	Symbol	pdev -> color_info . depth		2558046						
ANR	2558454	Symbol	* upd -> cmap		2558046						
ANR	2558455	Symbol	upd -> cmap [ 0 ] . bitshf		2558046						
ANR	2558456	Symbol	pdev -> color_info		2558046						
ANR	2558457	Symbol	( ( upd_device * ) pdev ) -> upd		2558046						
ANR	2558458	Symbol	upd -> cmap		2558046						
ANR	2558459	Symbol	pdev		2558046						
ANR	2558460	Symbol	* upd		2558046						
ANR	2558461	Symbol	pdev -> memory		2558046						
ANR	2558462	Symbol	upd -> cmap [ 2 ] . bitmsk		2558046						
ANR	2558463	Symbol	upd -> cmap [ 3 ] . bitshf		2558046						
ANR	2558464	Symbol	upd -> cmap [ 1 ] . bitmsk		2558046						
ANR	2558465	Symbol	upd -> cmap [ 2 ] . bitshf		2558046						
ANR	2558466	Symbol	upd -> cmap [ 3 ] . bitmsk		2558046						
ANR	2558467	Symbol	c		2558046						
ANR	2558468	Symbol	upd -> cmap [ 0 ] . bitmsk		2558046						
ANR	2558469	Symbol	upd		2558046						
ANR	2558470	Symbol	prgb		2558046						
ANR	2558471	Symbol	k		2558046						
ANR	2558472	Symbol	m		2558046						
ANR	2558473	Symbol	* prgb		2558046						
ANR	2558474	Symbol	upd -> cmap [ 1 ] . bitshf		2558046						
ANR	2558475	Symbol	gx_max_color_value		2558046						
ANR	2558476	Symbol	* pdev		2558046						
ANR	2558477	Symbol	y		2558046						
ANR	2558478	Symbol	* * upd		2558046						
ANR	2558479	Symbol	upd_expand		2558046						
ANR	2558480	Function	upd_rgb_1color	2269:0:91186:91773							
ANR	2558481	FunctionDef	"upd_rgb_1color (gx_device * pdev , const gx_color_value cv [ ])"		2558480	0					
ANR	2558482	CompoundStatement		2271:0:91267:91773	2558480	0					
ANR	2558483	IdentifierDeclStatement	const upd_p upd = ( ( upd_device * ) pdev ) -> upd ;	2272:3:91272:91319	2558480	0	True				
ANR	2558484	IdentifierDecl	upd = ( ( upd_device * ) pdev ) -> upd		2558480	0					
ANR	2558485	IdentifierDeclType	const upd_p		2558480	0					
ANR	2558486	Identifier	upd		2558480	1					
ANR	2558487	AssignmentExpression	upd = ( ( upd_device * ) pdev ) -> upd		2558480	2		=			
ANR	2558488	Identifier	upd		2558480	0					
ANR	2558489	PtrMemberAccess	( ( upd_device * ) pdev ) -> upd		2558480	1					
ANR	2558490	CastExpression	( upd_device * ) pdev		2558480	0					
ANR	2558491	CastTarget	upd_device *		2558480	0					
ANR	2558492	Identifier	pdev		2558480	1					
ANR	2558493	Identifier	upd		2558480	1					
ANR	2558494	IdentifierDeclStatement	gx_color_index rv ;	2273:3:91324:91342	2558480	1	True				
ANR	2558495	IdentifierDecl	rv		2558480	0					
ANR	2558496	IdentifierDeclType	gx_color_index		2558480	0					
ANR	2558497	Identifier	rv		2558480	1					
ANR	2558498	IdentifierDeclStatement	gx_color_value g ;	2274:3:91347:91363	2558480	2	True				
ANR	2558499	IdentifierDecl	g		2558480	0					
ANR	2558500	IdentifierDeclType	gx_color_value		2558480	0					
ANR	2558501	Identifier	g		2558480	1					
ANR	2558502	ExpressionStatement	g = cv [ 0 ]	2276:3:91369:91378	2558480	3	True				
ANR	2558503	AssignmentExpression	g = cv [ 0 ]		2558480	0		=			
ANR	2558504	Identifier	g		2558480	0					
ANR	2558505	ArrayIndexing	cv [ 0 ]		2558480	1					
ANR	2558506	Identifier	cv		2558480	0					
ANR	2558507	PrimaryExpression	0		2558480	1					
ANR	2558508	ExpressionStatement	"rv = upd_truncate ( upd , 0 , g )"	2277:3:91383:91409	2558480	4	True				
ANR	2558509	AssignmentExpression	"rv = upd_truncate ( upd , 0 , g )"		2558480	0		=			
ANR	2558510	Identifier	rv		2558480	0					
ANR	2558511	CallExpression	"upd_truncate ( upd , 0 , g )"		2558480	1					
ANR	2558512	Callee	upd_truncate		2558480	0					
ANR	2558513	Identifier	upd_truncate		2558480	0					
ANR	2558514	ArgumentList	upd		2558480	1					
ANR	2558515	Argument	upd		2558480	0					
ANR	2558516	Identifier	upd		2558480	0					
ANR	2558517	Argument	0		2558480	1					
ANR	2558518	PrimaryExpression	0		2558480	0					
ANR	2558519	Argument	g		2558480	2					
ANR	2558520	Identifier	g		2558480	0					
ANR	2558521	ExpressionStatement	"errprintf ( pdev -> memory , ""rgb_1color: (%5.1f) : (%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) g / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"	2280:3:91449:91749	2558480	5	True				
ANR	2558522	CallExpression	"errprintf ( pdev -> memory , ""rgb_1color: (%5.1f) : (%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) g / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"		2558480	0					
ANR	2558523	Callee	errprintf		2558480	0					
ANR	2558524	Identifier	errprintf		2558480	0					
ANR	2558525	ArgumentList	pdev -> memory		2558480	1					
ANR	2558526	Argument	pdev -> memory		2558480	0					
ANR	2558527	PtrMemberAccess	pdev -> memory		2558480	0					
ANR	2558528	Identifier	pdev		2558480	0					
ANR	2558529	Identifier	memory		2558480	1					
ANR	2558530	Argument	"""rgb_1color: (%5.1f) : (%5.1f) : 0x%0*lx\\n"""		2558480	1					
ANR	2558531	PrimaryExpression	"""rgb_1color: (%5.1f) : (%5.1f) : 0x%0*lx\\n"""		2558480	0					
ANR	2558532	Argument	255.0 * ( double ) g / ( double ) gx_max_color_value		2558480	2					
ANR	2558533	MultiplicativeExpression	255.0 * ( double ) g / ( double ) gx_max_color_value		2558480	0		*			
ANR	2558534	PrimaryExpression	255.0		2558480	0					
ANR	2558535	MultiplicativeExpression	( double ) g / ( double ) gx_max_color_value		2558480	1		/			
ANR	2558536	CastExpression	( double ) g		2558480	0					
ANR	2558537	CastTarget	double		2558480	0					
ANR	2558538	Identifier	g		2558480	1					
ANR	2558539	CastExpression	( double ) gx_max_color_value		2558480	1					
ANR	2558540	CastTarget	double		2558480	0					
ANR	2558541	Identifier	gx_max_color_value		2558480	1					
ANR	2558542	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2558480	3					
ANR	2558543	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2558480	0		*			
ANR	2558544	PrimaryExpression	255.0		2558480	0					
ANR	2558545	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2558480	1		/			
ANR	2558546	CastExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk )		2558480	0					
ANR	2558547	CastTarget	double		2558480	0					
ANR	2558548	BitAndExpression	( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk		2558480	1		&			
ANR	2558549	ShiftExpression	rv >> upd -> cmap [ 0 ] . bitshf		2558480	0		>>			
ANR	2558550	Identifier	rv		2558480	0					
ANR	2558551	MemberAccess	upd -> cmap [ 0 ] . bitshf		2558480	1					
ANR	2558552	ArrayIndexing	upd -> cmap [ 0 ]		2558480	0					
ANR	2558553	PtrMemberAccess	upd -> cmap		2558480	0					
ANR	2558554	Identifier	upd		2558480	0					
ANR	2558555	Identifier	cmap		2558480	1					
ANR	2558556	PrimaryExpression	0		2558480	1					
ANR	2558557	Identifier	bitshf		2558480	1					
ANR	2558558	MemberAccess	upd -> cmap [ 0 ] . bitmsk		2558480	1					
ANR	2558559	ArrayIndexing	upd -> cmap [ 0 ]		2558480	0					
ANR	2558560	PtrMemberAccess	upd -> cmap		2558480	0					
ANR	2558561	Identifier	upd		2558480	0					
ANR	2558562	Identifier	cmap		2558480	1					
ANR	2558563	PrimaryExpression	0		2558480	1					
ANR	2558564	Identifier	bitmsk		2558480	1					
ANR	2558565	CastExpression	( double ) upd -> cmap [ 0 ] . bitmsk		2558480	1					
ANR	2558566	CastTarget	double		2558480	0					
ANR	2558567	MemberAccess	upd -> cmap [ 0 ] . bitmsk		2558480	1					
ANR	2558568	ArrayIndexing	upd -> cmap [ 0 ]		2558480	0					
ANR	2558569	PtrMemberAccess	upd -> cmap		2558480	0					
ANR	2558570	Identifier	upd		2558480	0					
ANR	2558571	Identifier	cmap		2558480	1					
ANR	2558572	PrimaryExpression	0		2558480	1					
ANR	2558573	Identifier	bitmsk		2558480	1					
ANR	2558574	Argument	( pdev -> color_info . depth + 3 ) >> 2		2558480	4					
ANR	2558575	ShiftExpression	( pdev -> color_info . depth + 3 ) >> 2		2558480	0		>>			
ANR	2558576	AdditiveExpression	pdev -> color_info . depth + 3		2558480	0		+			
ANR	2558577	MemberAccess	pdev -> color_info . depth		2558480	0					
ANR	2558578	PtrMemberAccess	pdev -> color_info		2558480	0					
ANR	2558579	Identifier	pdev		2558480	0					
ANR	2558580	Identifier	color_info		2558480	1					
ANR	2558581	Identifier	depth		2558480	1					
ANR	2558582	PrimaryExpression	3		2558480	1					
ANR	2558583	PrimaryExpression	2		2558480	1					
ANR	2558584	Argument	rv		2558480	5					
ANR	2558585	Identifier	rv		2558480	0					
ANR	2558586	ReturnStatement	return rv ;	2288:3:91762:91771	2558480	6	True				
ANR	2558587	Identifier	rv		2558480	0					
ANR	2558588	ReturnType	static gx_color_index		2558480	1					
ANR	2558589	Identifier	upd_rgb_1color		2558480	2					
ANR	2558590	ParameterList	"gx_device * pdev , const gx_color_value cv [ ]"		2558480	3					
ANR	2558591	Parameter	gx_device * pdev	2270:15:91223:91237	2558480	0	True				
ANR	2558592	ParameterType	gx_device *		2558480	0					
ANR	2558593	Identifier	pdev		2558480	1					
ANR	2558594	Parameter	const gx_color_value cv [ ]	2270:32:91240:91264	2558480	1	True				
ANR	2558595	ParameterType	const gx_color_value [ ]		2558480	0					
ANR	2558596	Identifier	cv		2558480	1					
ANR	2558597	CFGEntryNode	ENTRY		2558480		True				
ANR	2558598	CFGExitNode	EXIT		2558480		True				
ANR	2558599	Symbol	rv		2558480						
ANR	2558600	Symbol	upd -> cmap [ 0 ] . bitmsk		2558480						
ANR	2558601	Symbol	g		2558480						
ANR	2558602	Symbol	upd		2558480						
ANR	2558603	Symbol	pdev -> color_info . depth		2558480						
ANR	2558604	Symbol	* upd -> cmap		2558480						
ANR	2558605	Symbol	pdev -> color_info		2558480						
ANR	2558606	Symbol	upd -> cmap [ 0 ] . bitshf		2558480						
ANR	2558607	Symbol	( ( upd_device * ) pdev ) -> upd		2558480						
ANR	2558608	Symbol	upd -> cmap		2558480						
ANR	2558609	Symbol	pdev		2558480						
ANR	2558610	Symbol	cv		2558480						
ANR	2558611	Symbol	* upd		2558480						
ANR	2558612	Symbol	pdev -> memory		2558480						
ANR	2558613	Symbol	gx_max_color_value		2558480						
ANR	2558614	Symbol	* pdev		2558480						
ANR	2558615	Symbol	* cv		2558480						
ANR	2558616	Symbol	upd_truncate		2558480						
ANR	2558617	Symbol	* * upd		2558480						
ANR	2558618	Function	upd_1color_rgb	2295:0:91999:92742							
ANR	2558619	FunctionDef	"upd_1color_rgb (gx_device * pdev , gx_color_index color , gx_color_value cv [ 1 ])"		2558618	0					
ANR	2558620	CompoundStatement		2297:0:92086:92742	2558618	0					
ANR	2558621	IdentifierDeclStatement	const upd_p upd = ( ( upd_device * ) pdev ) -> upd ;	2298:3:92091:92138	2558618	0	True				
ANR	2558622	IdentifierDecl	upd = ( ( upd_device * ) pdev ) -> upd		2558618	0					
ANR	2558623	IdentifierDeclType	const upd_p		2558618	0					
ANR	2558624	Identifier	upd		2558618	1					
ANR	2558625	AssignmentExpression	upd = ( ( upd_device * ) pdev ) -> upd		2558618	2		=			
ANR	2558626	Identifier	upd		2558618	0					
ANR	2558627	PtrMemberAccess	( ( upd_device * ) pdev ) -> upd		2558618	1					
ANR	2558628	CastExpression	( upd_device * ) pdev		2558618	0					
ANR	2558629	CastTarget	upd_device *		2558618	0					
ANR	2558630	Identifier	pdev		2558618	1					
ANR	2558631	Identifier	upd		2558618	1					
ANR	2558632	ExpressionStatement	"cv [ 0 ] = upd_expand ( upd , 0 , color )"	2302:3:92205:92236	2558618	1	True				
ANR	2558633	AssignmentExpression	"cv [ 0 ] = upd_expand ( upd , 0 , color )"		2558618	0		=			
ANR	2558634	ArrayIndexing	cv [ 0 ]		2558618	0					
ANR	2558635	Identifier	cv		2558618	0					
ANR	2558636	PrimaryExpression	0		2558618	1					
ANR	2558637	CallExpression	"upd_expand ( upd , 0 , color )"		2558618	1					
ANR	2558638	Callee	upd_expand		2558618	0					
ANR	2558639	Identifier	upd_expand		2558618	0					
ANR	2558640	ArgumentList	upd		2558618	1					
ANR	2558641	Argument	upd		2558618	0					
ANR	2558642	Identifier	upd		2558618	0					
ANR	2558643	Argument	0		2558618	1					
ANR	2558644	PrimaryExpression	0		2558618	0					
ANR	2558645	Argument	color		2558618	2					
ANR	2558646	Identifier	color		2558618	0					
ANR	2558647	ExpressionStatement	"errprintf ( pdev -> memory , ""1color_rgb: 0x%0*lx -> %5.1f -> (%5.1f,%5.1f,%5.1f)\\n"" , ( pdev -> color_info . depth + 3 ) >> 2 , color , 255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value )"	2305:3:92276:92719	2558618	2	True				
ANR	2558648	CallExpression	"errprintf ( pdev -> memory , ""1color_rgb: 0x%0*lx -> %5.1f -> (%5.1f,%5.1f,%5.1f)\\n"" , ( pdev -> color_info . depth + 3 ) >> 2 , color , 255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value )"		2558618	0					
ANR	2558649	Callee	errprintf		2558618	0					
ANR	2558650	Identifier	errprintf		2558618	0					
ANR	2558651	ArgumentList	pdev -> memory		2558618	1					
ANR	2558652	Argument	pdev -> memory		2558618	0					
ANR	2558653	PtrMemberAccess	pdev -> memory		2558618	0					
ANR	2558654	Identifier	pdev		2558618	0					
ANR	2558655	Identifier	memory		2558618	1					
ANR	2558656	Argument	"""1color_rgb: 0x%0*lx -> %5.1f -> (%5.1f,%5.1f,%5.1f)\\n"""		2558618	1					
ANR	2558657	PrimaryExpression	"""1color_rgb: 0x%0*lx -> %5.1f -> (%5.1f,%5.1f,%5.1f)\\n"""		2558618	0					
ANR	2558658	Argument	( pdev -> color_info . depth + 3 ) >> 2		2558618	2					
ANR	2558659	ShiftExpression	( pdev -> color_info . depth + 3 ) >> 2		2558618	0		>>			
ANR	2558660	AdditiveExpression	pdev -> color_info . depth + 3		2558618	0		+			
ANR	2558661	MemberAccess	pdev -> color_info . depth		2558618	0					
ANR	2558662	PtrMemberAccess	pdev -> color_info		2558618	0					
ANR	2558663	Identifier	pdev		2558618	0					
ANR	2558664	Identifier	color_info		2558618	1					
ANR	2558665	Identifier	depth		2558618	1					
ANR	2558666	PrimaryExpression	3		2558618	1					
ANR	2558667	PrimaryExpression	2		2558618	1					
ANR	2558668	Argument	color		2558618	3					
ANR	2558669	Identifier	color		2558618	0					
ANR	2558670	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2558618	4					
ANR	2558671	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2558618	0		*			
ANR	2558672	PrimaryExpression	255.0		2558618	0					
ANR	2558673	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2558618	1		/			
ANR	2558674	CastExpression	( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk )		2558618	0					
ANR	2558675	CastTarget	double		2558618	0					
ANR	2558676	BitAndExpression	( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk		2558618	1		&			
ANR	2558677	ShiftExpression	color >> upd -> cmap [ 0 ] . bitshf		2558618	0		>>			
ANR	2558678	Identifier	color		2558618	0					
ANR	2558679	MemberAccess	upd -> cmap [ 0 ] . bitshf		2558618	1					
ANR	2558680	ArrayIndexing	upd -> cmap [ 0 ]		2558618	0					
ANR	2558681	PtrMemberAccess	upd -> cmap		2558618	0					
ANR	2558682	Identifier	upd		2558618	0					
ANR	2558683	Identifier	cmap		2558618	1					
ANR	2558684	PrimaryExpression	0		2558618	1					
ANR	2558685	Identifier	bitshf		2558618	1					
ANR	2558686	MemberAccess	upd -> cmap [ 0 ] . bitmsk		2558618	1					
ANR	2558687	ArrayIndexing	upd -> cmap [ 0 ]		2558618	0					
ANR	2558688	PtrMemberAccess	upd -> cmap		2558618	0					
ANR	2558689	Identifier	upd		2558618	0					
ANR	2558690	Identifier	cmap		2558618	1					
ANR	2558691	PrimaryExpression	0		2558618	1					
ANR	2558692	Identifier	bitmsk		2558618	1					
ANR	2558693	CastExpression	( double ) upd -> cmap [ 0 ] . bitmsk		2558618	1					
ANR	2558694	CastTarget	double		2558618	0					
ANR	2558695	MemberAccess	upd -> cmap [ 0 ] . bitmsk		2558618	1					
ANR	2558696	ArrayIndexing	upd -> cmap [ 0 ]		2558618	0					
ANR	2558697	PtrMemberAccess	upd -> cmap		2558618	0					
ANR	2558698	Identifier	upd		2558618	0					
ANR	2558699	Identifier	cmap		2558618	1					
ANR	2558700	PrimaryExpression	0		2558618	1					
ANR	2558701	Identifier	bitmsk		2558618	1					
ANR	2558702	Argument	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		2558618	5					
ANR	2558703	MultiplicativeExpression	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		2558618	0		*			
ANR	2558704	PrimaryExpression	255.0		2558618	0					
ANR	2558705	MultiplicativeExpression	( double ) prgb [ 0 ] / ( double ) gx_max_color_value		2558618	1		/			
ANR	2558706	CastExpression	( double ) prgb [ 0 ]		2558618	0					
ANR	2558707	CastTarget	double		2558618	0					
ANR	2558708	ArrayIndexing	prgb [ 0 ]		2558618	1					
ANR	2558709	Identifier	prgb		2558618	0					
ANR	2558710	PrimaryExpression	0		2558618	1					
ANR	2558711	CastExpression	( double ) gx_max_color_value		2558618	1					
ANR	2558712	CastTarget	double		2558618	0					
ANR	2558713	Identifier	gx_max_color_value		2558618	1					
ANR	2558714	Argument	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		2558618	6					
ANR	2558715	MultiplicativeExpression	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		2558618	0		*			
ANR	2558716	PrimaryExpression	255.0		2558618	0					
ANR	2558717	MultiplicativeExpression	( double ) prgb [ 0 ] / ( double ) gx_max_color_value		2558618	1		/			
ANR	2558718	CastExpression	( double ) prgb [ 0 ]		2558618	0					
ANR	2558719	CastTarget	double		2558618	0					
ANR	2558720	ArrayIndexing	prgb [ 0 ]		2558618	1					
ANR	2558721	Identifier	prgb		2558618	0					
ANR	2558722	PrimaryExpression	0		2558618	1					
ANR	2558723	CastExpression	( double ) gx_max_color_value		2558618	1					
ANR	2558724	CastTarget	double		2558618	0					
ANR	2558725	Identifier	gx_max_color_value		2558618	1					
ANR	2558726	Argument	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		2558618	7					
ANR	2558727	MultiplicativeExpression	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		2558618	0		*			
ANR	2558728	PrimaryExpression	255.0		2558618	0					
ANR	2558729	MultiplicativeExpression	( double ) prgb [ 0 ] / ( double ) gx_max_color_value		2558618	1		/			
ANR	2558730	CastExpression	( double ) prgb [ 0 ]		2558618	0					
ANR	2558731	CastTarget	double		2558618	0					
ANR	2558732	ArrayIndexing	prgb [ 0 ]		2558618	1					
ANR	2558733	Identifier	prgb		2558618	0					
ANR	2558734	PrimaryExpression	0		2558618	1					
ANR	2558735	CastExpression	( double ) gx_max_color_value		2558618	1					
ANR	2558736	CastTarget	double		2558618	0					
ANR	2558737	Identifier	gx_max_color_value		2558618	1					
ANR	2558738	ReturnStatement	return 0 ;	2314:3:92732:92740	2558618	3	True				
ANR	2558739	PrimaryExpression	0		2558618	0					
ANR	2558740	ReturnType	static int		2558618	1					
ANR	2558741	Identifier	upd_1color_rgb		2558618	2					
ANR	2558742	ParameterList	"gx_device * pdev , gx_color_index color , gx_color_value cv [ 1 ]"		2558618	3					
ANR	2558743	Parameter	gx_device * pdev	2296:15:92025:92039	2558618	0	True				
ANR	2558744	ParameterType	gx_device *		2558618	0					
ANR	2558745	Identifier	pdev		2558618	1					
ANR	2558746	Parameter	gx_color_index color	2296:32:92042:92061	2558618	1	True				
ANR	2558747	ParameterType	gx_color_index		2558618	0					
ANR	2558748	Identifier	color		2558618	1					
ANR	2558749	Parameter	gx_color_value cv [ 1 ]	2296:54:92064:92083	2558618	2	True				
ANR	2558750	ParameterType	gx_color_value [ 1 ]		2558618	0					
ANR	2558751	Identifier	cv		2558618	1					
ANR	2558752	CFGEntryNode	ENTRY		2558618		True				
ANR	2558753	CFGExitNode	EXIT		2558618		True				
ANR	2558754	Symbol	color		2558618						
ANR	2558755	Symbol	upd -> cmap [ 0 ] . bitmsk		2558618						
ANR	2558756	Symbol	upd		2558618						
ANR	2558757	Symbol	pdev -> color_info . depth		2558618						
ANR	2558758	Symbol	* upd -> cmap		2558618						
ANR	2558759	Symbol	prgb		2558618						
ANR	2558760	Symbol	pdev -> color_info		2558618						
ANR	2558761	Symbol	upd -> cmap [ 0 ] . bitshf		2558618						
ANR	2558762	Symbol	( ( upd_device * ) pdev ) -> upd		2558618						
ANR	2558763	Symbol	upd -> cmap		2558618						
ANR	2558764	Symbol	* prgb		2558618						
ANR	2558765	Symbol	pdev		2558618						
ANR	2558766	Symbol	cv		2558618						
ANR	2558767	Symbol	* upd		2558618						
ANR	2558768	Symbol	pdev -> memory		2558618						
ANR	2558769	Symbol	gx_max_color_value		2558618						
ANR	2558770	Symbol	* pdev		2558618						
ANR	2558771	Symbol	* cv		2558618						
ANR	2558772	Symbol	* * upd		2558618						
ANR	2558773	Symbol	upd_expand		2558618						
ANR	2558774	Function	upd_rgb_3color	2321:0:92968:94026							
ANR	2558775	FunctionDef	"upd_rgb_3color (gx_device * pdev , const gx_color_value cv [ ])"		2558774	0					
ANR	2558776	CompoundStatement		2323:0:93049:94026	2558774	0					
ANR	2558777	IdentifierDeclStatement	const upd_p upd = ( ( upd_device * ) pdev ) -> upd ;	2324:3:93054:93101	2558774	0	True				
ANR	2558778	IdentifierDecl	upd = ( ( upd_device * ) pdev ) -> upd		2558774	0					
ANR	2558779	IdentifierDeclType	const upd_p		2558774	0					
ANR	2558780	Identifier	upd		2558774	1					
ANR	2558781	AssignmentExpression	upd = ( ( upd_device * ) pdev ) -> upd		2558774	2		=			
ANR	2558782	Identifier	upd		2558774	0					
ANR	2558783	PtrMemberAccess	( ( upd_device * ) pdev ) -> upd		2558774	1					
ANR	2558784	CastExpression	( upd_device * ) pdev		2558774	0					
ANR	2558785	CastTarget	upd_device *		2558774	0					
ANR	2558786	Identifier	pdev		2558774	1					
ANR	2558787	Identifier	upd		2558774	1					
ANR	2558788	IdentifierDeclStatement	gx_color_index rv ;	2325:3:93106:93124	2558774	1	True				
ANR	2558789	IdentifierDecl	rv		2558774	0					
ANR	2558790	IdentifierDeclType	gx_color_index		2558774	0					
ANR	2558791	Identifier	rv		2558774	1					
ANR	2558792	IdentifierDeclStatement	"gx_color_value r , g , b ;"	2326:3:93129:93151	2558774	2	True				
ANR	2558793	IdentifierDecl	r		2558774	0					
ANR	2558794	IdentifierDeclType	gx_color_value		2558774	0					
ANR	2558795	Identifier	r		2558774	1					
ANR	2558796	IdentifierDecl	g		2558774	1					
ANR	2558797	IdentifierDeclType	gx_color_value		2558774	0					
ANR	2558798	Identifier	g		2558774	1					
ANR	2558799	IdentifierDecl	b		2558774	2					
ANR	2558800	IdentifierDeclType	gx_color_value		2558774	0					
ANR	2558801	Identifier	b		2558774	1					
ANR	2558802	ExpressionStatement	r = cv [ 0 ]	2327:3:93156:93165	2558774	3	True				
ANR	2558803	AssignmentExpression	r = cv [ 0 ]		2558774	0		=			
ANR	2558804	Identifier	r		2558774	0					
ANR	2558805	ArrayIndexing	cv [ 0 ]		2558774	1					
ANR	2558806	Identifier	cv		2558774	0					
ANR	2558807	PrimaryExpression	0		2558774	1					
ANR	2558808	ExpressionStatement	g = cv [ 1 ]	2327:14:93167:93176	2558774	4	True				
ANR	2558809	AssignmentExpression	g = cv [ 1 ]		2558774	0		=			
ANR	2558810	Identifier	g		2558774	0					
ANR	2558811	ArrayIndexing	cv [ 1 ]		2558774	1					
ANR	2558812	Identifier	cv		2558774	0					
ANR	2558813	PrimaryExpression	1		2558774	1					
ANR	2558814	ExpressionStatement	b = cv [ 2 ]	2327:25:93178:93187	2558774	5	True				
ANR	2558815	AssignmentExpression	b = cv [ 2 ]		2558774	0		=			
ANR	2558816	Identifier	b		2558774	0					
ANR	2558817	ArrayIndexing	cv [ 2 ]		2558774	1					
ANR	2558818	Identifier	cv		2558774	0					
ANR	2558819	PrimaryExpression	2		2558774	1					
ANR	2558820	ExpressionStatement	"rv = upd_truncate ( upd , 0 , r ) | upd_truncate ( upd , 1 , g ) | upd_truncate ( upd , 2 , b )"	2329:3:93193:93267	2558774	6	True				
ANR	2558821	AssignmentExpression	"rv = upd_truncate ( upd , 0 , r ) | upd_truncate ( upd , 1 , g ) | upd_truncate ( upd , 2 , b )"		2558774	0		=			
ANR	2558822	Identifier	rv		2558774	0					
ANR	2558823	InclusiveOrExpression	"upd_truncate ( upd , 0 , r ) | upd_truncate ( upd , 1 , g ) | upd_truncate ( upd , 2 , b )"		2558774	1		|			
ANR	2558824	CallExpression	"upd_truncate ( upd , 0 , r )"		2558774	0					
ANR	2558825	Callee	upd_truncate		2558774	0					
ANR	2558826	Identifier	upd_truncate		2558774	0					
ANR	2558827	ArgumentList	upd		2558774	1					
ANR	2558828	Argument	upd		2558774	0					
ANR	2558829	Identifier	upd		2558774	0					
ANR	2558830	Argument	0		2558774	1					
ANR	2558831	PrimaryExpression	0		2558774	0					
ANR	2558832	Argument	r		2558774	2					
ANR	2558833	Identifier	r		2558774	0					
ANR	2558834	InclusiveOrExpression	"upd_truncate ( upd , 1 , g ) | upd_truncate ( upd , 2 , b )"		2558774	1		|			
ANR	2558835	CallExpression	"upd_truncate ( upd , 1 , g )"		2558774	0					
ANR	2558836	Callee	upd_truncate		2558774	0					
ANR	2558837	Identifier	upd_truncate		2558774	0					
ANR	2558838	ArgumentList	upd		2558774	1					
ANR	2558839	Argument	upd		2558774	0					
ANR	2558840	Identifier	upd		2558774	0					
ANR	2558841	Argument	1		2558774	1					
ANR	2558842	PrimaryExpression	1		2558774	0					
ANR	2558843	Argument	g		2558774	2					
ANR	2558844	Identifier	g		2558774	0					
ANR	2558845	CallExpression	"upd_truncate ( upd , 2 , b )"		2558774	1					
ANR	2558846	Callee	upd_truncate		2558774	0					
ANR	2558847	Identifier	upd_truncate		2558774	0					
ANR	2558848	ArgumentList	upd		2558774	1					
ANR	2558849	Argument	upd		2558774	0					
ANR	2558850	Identifier	upd		2558774	0					
ANR	2558851	Argument	2		2558774	1					
ANR	2558852	PrimaryExpression	2		2558774	0					
ANR	2558853	Argument	b		2558774	2					
ANR	2558854	Identifier	b		2558774	0					
ANR	2558855	IfStatement	if ( rv == gx_no_color_index )		2558774	7					
ANR	2558856	Condition	rv == gx_no_color_index	2330:6:93275:93297	2558774	0	True				
ANR	2558857	EqualityExpression	rv == gx_no_color_index		2558774	0		==			
ANR	2558858	Identifier	rv		2558774	0					
ANR	2558859	Identifier	gx_no_color_index		2558774	1					
ANR	2558860	ExpressionStatement	rv ^= 1	2330:31:93300:93307	2558774	1	True				
ANR	2558861	AssignmentExpression	rv ^= 1		2558774	0		^=			
ANR	2558862	Identifier	rv		2558774	0					
ANR	2558863	PrimaryExpression	1		2558774	1					
ANR	2558864	ExpressionStatement	"errprintf ( pdev -> memory , ""rgb_3color: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) r / ( double ) gx_max_color_value , 255.0 * ( double ) g / ( double ) gx_max_color_value , 255.0 * ( double ) b / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"	2333:2:93346:94002	2558774	8	True				
ANR	2558865	CallExpression	"errprintf ( pdev -> memory , ""rgb_3color: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) r / ( double ) gx_max_color_value , 255.0 * ( double ) g / ( double ) gx_max_color_value , 255.0 * ( double ) b / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"		2558774	0					
ANR	2558866	Callee	errprintf		2558774	0					
ANR	2558867	Identifier	errprintf		2558774	0					
ANR	2558868	ArgumentList	pdev -> memory		2558774	1					
ANR	2558869	Argument	pdev -> memory		2558774	0					
ANR	2558870	PtrMemberAccess	pdev -> memory		2558774	0					
ANR	2558871	Identifier	pdev		2558774	0					
ANR	2558872	Identifier	memory		2558774	1					
ANR	2558873	Argument	"""rgb_3color: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"""		2558774	1					
ANR	2558874	PrimaryExpression	"""rgb_3color: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"""		2558774	0					
ANR	2558875	Argument	255.0 * ( double ) r / ( double ) gx_max_color_value		2558774	2					
ANR	2558876	MultiplicativeExpression	255.0 * ( double ) r / ( double ) gx_max_color_value		2558774	0		*			
ANR	2558877	PrimaryExpression	255.0		2558774	0					
ANR	2558878	MultiplicativeExpression	( double ) r / ( double ) gx_max_color_value		2558774	1		/			
ANR	2558879	CastExpression	( double ) r		2558774	0					
ANR	2558880	CastTarget	double		2558774	0					
ANR	2558881	Identifier	r		2558774	1					
ANR	2558882	CastExpression	( double ) gx_max_color_value		2558774	1					
ANR	2558883	CastTarget	double		2558774	0					
ANR	2558884	Identifier	gx_max_color_value		2558774	1					
ANR	2558885	Argument	255.0 * ( double ) g / ( double ) gx_max_color_value		2558774	3					
ANR	2558886	MultiplicativeExpression	255.0 * ( double ) g / ( double ) gx_max_color_value		2558774	0		*			
ANR	2558887	PrimaryExpression	255.0		2558774	0					
ANR	2558888	MultiplicativeExpression	( double ) g / ( double ) gx_max_color_value		2558774	1		/			
ANR	2558889	CastExpression	( double ) g		2558774	0					
ANR	2558890	CastTarget	double		2558774	0					
ANR	2558891	Identifier	g		2558774	1					
ANR	2558892	CastExpression	( double ) gx_max_color_value		2558774	1					
ANR	2558893	CastTarget	double		2558774	0					
ANR	2558894	Identifier	gx_max_color_value		2558774	1					
ANR	2558895	Argument	255.0 * ( double ) b / ( double ) gx_max_color_value		2558774	4					
ANR	2558896	MultiplicativeExpression	255.0 * ( double ) b / ( double ) gx_max_color_value		2558774	0		*			
ANR	2558897	PrimaryExpression	255.0		2558774	0					
ANR	2558898	MultiplicativeExpression	( double ) b / ( double ) gx_max_color_value		2558774	1		/			
ANR	2558899	CastExpression	( double ) b		2558774	0					
ANR	2558900	CastTarget	double		2558774	0					
ANR	2558901	Identifier	b		2558774	1					
ANR	2558902	CastExpression	( double ) gx_max_color_value		2558774	1					
ANR	2558903	CastTarget	double		2558774	0					
ANR	2558904	Identifier	gx_max_color_value		2558774	1					
ANR	2558905	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2558774	5					
ANR	2558906	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2558774	0		*			
ANR	2558907	PrimaryExpression	255.0		2558774	0					
ANR	2558908	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2558774	1		/			
ANR	2558909	CastExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk )		2558774	0					
ANR	2558910	CastTarget	double		2558774	0					
ANR	2558911	BitAndExpression	( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk		2558774	1		&			
ANR	2558912	ShiftExpression	rv >> upd -> cmap [ 0 ] . bitshf		2558774	0		>>			
ANR	2558913	Identifier	rv		2558774	0					
ANR	2558914	MemberAccess	upd -> cmap [ 0 ] . bitshf		2558774	1					
ANR	2558915	ArrayIndexing	upd -> cmap [ 0 ]		2558774	0					
ANR	2558916	PtrMemberAccess	upd -> cmap		2558774	0					
ANR	2558917	Identifier	upd		2558774	0					
ANR	2558918	Identifier	cmap		2558774	1					
ANR	2558919	PrimaryExpression	0		2558774	1					
ANR	2558920	Identifier	bitshf		2558774	1					
ANR	2558921	MemberAccess	upd -> cmap [ 0 ] . bitmsk		2558774	1					
ANR	2558922	ArrayIndexing	upd -> cmap [ 0 ]		2558774	0					
ANR	2558923	PtrMemberAccess	upd -> cmap		2558774	0					
ANR	2558924	Identifier	upd		2558774	0					
ANR	2558925	Identifier	cmap		2558774	1					
ANR	2558926	PrimaryExpression	0		2558774	1					
ANR	2558927	Identifier	bitmsk		2558774	1					
ANR	2558928	CastExpression	( double ) upd -> cmap [ 0 ] . bitmsk		2558774	1					
ANR	2558929	CastTarget	double		2558774	0					
ANR	2558930	MemberAccess	upd -> cmap [ 0 ] . bitmsk		2558774	1					
ANR	2558931	ArrayIndexing	upd -> cmap [ 0 ]		2558774	0					
ANR	2558932	PtrMemberAccess	upd -> cmap		2558774	0					
ANR	2558933	Identifier	upd		2558774	0					
ANR	2558934	Identifier	cmap		2558774	1					
ANR	2558935	PrimaryExpression	0		2558774	1					
ANR	2558936	Identifier	bitmsk		2558774	1					
ANR	2558937	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2558774	6					
ANR	2558938	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2558774	0		*			
ANR	2558939	PrimaryExpression	255.0		2558774	0					
ANR	2558940	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2558774	1		/			
ANR	2558941	CastExpression	( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk )		2558774	0					
ANR	2558942	CastTarget	double		2558774	0					
ANR	2558943	BitAndExpression	( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk		2558774	1		&			
ANR	2558944	ShiftExpression	rv >> upd -> cmap [ 1 ] . bitshf		2558774	0		>>			
ANR	2558945	Identifier	rv		2558774	0					
ANR	2558946	MemberAccess	upd -> cmap [ 1 ] . bitshf		2558774	1					
ANR	2558947	ArrayIndexing	upd -> cmap [ 1 ]		2558774	0					
ANR	2558948	PtrMemberAccess	upd -> cmap		2558774	0					
ANR	2558949	Identifier	upd		2558774	0					
ANR	2558950	Identifier	cmap		2558774	1					
ANR	2558951	PrimaryExpression	1		2558774	1					
ANR	2558952	Identifier	bitshf		2558774	1					
ANR	2558953	MemberAccess	upd -> cmap [ 1 ] . bitmsk		2558774	1					
ANR	2558954	ArrayIndexing	upd -> cmap [ 1 ]		2558774	0					
ANR	2558955	PtrMemberAccess	upd -> cmap		2558774	0					
ANR	2558956	Identifier	upd		2558774	0					
ANR	2558957	Identifier	cmap		2558774	1					
ANR	2558958	PrimaryExpression	1		2558774	1					
ANR	2558959	Identifier	bitmsk		2558774	1					
ANR	2558960	CastExpression	( double ) upd -> cmap [ 1 ] . bitmsk		2558774	1					
ANR	2558961	CastTarget	double		2558774	0					
ANR	2558962	MemberAccess	upd -> cmap [ 1 ] . bitmsk		2558774	1					
ANR	2558963	ArrayIndexing	upd -> cmap [ 1 ]		2558774	0					
ANR	2558964	PtrMemberAccess	upd -> cmap		2558774	0					
ANR	2558965	Identifier	upd		2558774	0					
ANR	2558966	Identifier	cmap		2558774	1					
ANR	2558967	PrimaryExpression	1		2558774	1					
ANR	2558968	Identifier	bitmsk		2558774	1					
ANR	2558969	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2558774	7					
ANR	2558970	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2558774	0		*			
ANR	2558971	PrimaryExpression	255.0		2558774	0					
ANR	2558972	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2558774	1		/			
ANR	2558973	CastExpression	( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk )		2558774	0					
ANR	2558974	CastTarget	double		2558774	0					
ANR	2558975	BitAndExpression	( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk		2558774	1		&			
ANR	2558976	ShiftExpression	rv >> upd -> cmap [ 2 ] . bitshf		2558774	0		>>			
ANR	2558977	Identifier	rv		2558774	0					
ANR	2558978	MemberAccess	upd -> cmap [ 2 ] . bitshf		2558774	1					
ANR	2558979	ArrayIndexing	upd -> cmap [ 2 ]		2558774	0					
ANR	2558980	PtrMemberAccess	upd -> cmap		2558774	0					
ANR	2558981	Identifier	upd		2558774	0					
ANR	2558982	Identifier	cmap		2558774	1					
ANR	2558983	PrimaryExpression	2		2558774	1					
ANR	2558984	Identifier	bitshf		2558774	1					
ANR	2558985	MemberAccess	upd -> cmap [ 2 ] . bitmsk		2558774	1					
ANR	2558986	ArrayIndexing	upd -> cmap [ 2 ]		2558774	0					
ANR	2558987	PtrMemberAccess	upd -> cmap		2558774	0					
ANR	2558988	Identifier	upd		2558774	0					
ANR	2558989	Identifier	cmap		2558774	1					
ANR	2558990	PrimaryExpression	2		2558774	1					
ANR	2558991	Identifier	bitmsk		2558774	1					
ANR	2558992	CastExpression	( double ) upd -> cmap [ 2 ] . bitmsk		2558774	1					
ANR	2558993	CastTarget	double		2558774	0					
ANR	2558994	MemberAccess	upd -> cmap [ 2 ] . bitmsk		2558774	1					
ANR	2558995	ArrayIndexing	upd -> cmap [ 2 ]		2558774	0					
ANR	2558996	PtrMemberAccess	upd -> cmap		2558774	0					
ANR	2558997	Identifier	upd		2558774	0					
ANR	2558998	Identifier	cmap		2558774	1					
ANR	2558999	PrimaryExpression	2		2558774	1					
ANR	2559000	Identifier	bitmsk		2558774	1					
ANR	2559001	Argument	( pdev -> color_info . depth + 3 ) >> 2		2558774	8					
ANR	2559002	ShiftExpression	( pdev -> color_info . depth + 3 ) >> 2		2558774	0		>>			
ANR	2559003	AdditiveExpression	pdev -> color_info . depth + 3		2558774	0		+			
ANR	2559004	MemberAccess	pdev -> color_info . depth		2558774	0					
ANR	2559005	PtrMemberAccess	pdev -> color_info		2558774	0					
ANR	2559006	Identifier	pdev		2558774	0					
ANR	2559007	Identifier	color_info		2558774	1					
ANR	2559008	Identifier	depth		2558774	1					
ANR	2559009	PrimaryExpression	3		2558774	1					
ANR	2559010	PrimaryExpression	2		2558774	1					
ANR	2559011	Argument	rv		2558774	9					
ANR	2559012	Identifier	rv		2558774	0					
ANR	2559013	ReturnStatement	return rv ;	2347:3:94015:94024	2558774	9	True				
ANR	2559014	Identifier	rv		2558774	0					
ANR	2559015	ReturnType	static gx_color_index		2558774	1					
ANR	2559016	Identifier	upd_rgb_3color		2558774	2					
ANR	2559017	ParameterList	"gx_device * pdev , const gx_color_value cv [ ]"		2558774	3					
ANR	2559018	Parameter	gx_device * pdev	2322:15:93005:93019	2558774	0	True				
ANR	2559019	ParameterType	gx_device *		2558774	0					
ANR	2559020	Identifier	pdev		2558774	1					
ANR	2559021	Parameter	const gx_color_value cv [ ]	2322:32:93022:93046	2558774	1	True				
ANR	2559022	ParameterType	const gx_color_value [ ]		2558774	0					
ANR	2559023	Identifier	cv		2558774	1					
ANR	2559024	CFGEntryNode	ENTRY		2558774		True				
ANR	2559025	CFGExitNode	EXIT		2558774		True				
ANR	2559026	Symbol	rv		2558774						
ANR	2559027	Symbol	pdev -> color_info . depth		2558774						
ANR	2559028	Symbol	* upd -> cmap		2558774						
ANR	2559029	Symbol	pdev -> color_info		2558774						
ANR	2559030	Symbol	upd -> cmap [ 0 ] . bitshf		2558774						
ANR	2559031	Symbol	( ( upd_device * ) pdev ) -> upd		2558774						
ANR	2559032	Symbol	upd -> cmap		2558774						
ANR	2559033	Symbol	pdev		2558774						
ANR	2559034	Symbol	gx_no_color_index		2558774						
ANR	2559035	Symbol	* upd		2558774						
ANR	2559036	Symbol	upd -> cmap [ 2 ] . bitmsk		2558774						
ANR	2559037	Symbol	pdev -> memory		2558774						
ANR	2559038	Symbol	upd -> cmap [ 1 ] . bitmsk		2558774						
ANR	2559039	Symbol	upd -> cmap [ 2 ] . bitshf		2558774						
ANR	2559040	Symbol	b		2558774						
ANR	2559041	Symbol	upd -> cmap [ 0 ] . bitmsk		2558774						
ANR	2559042	Symbol	g		2558774						
ANR	2559043	Symbol	upd		2558774						
ANR	2559044	Symbol	r		2558774						
ANR	2559045	Symbol	cv		2558774						
ANR	2559046	Symbol	upd -> cmap [ 1 ] . bitshf		2558774						
ANR	2559047	Symbol	gx_max_color_value		2558774						
ANR	2559048	Symbol	* pdev		2558774						
ANR	2559049	Symbol	* cv		2558774						
ANR	2559050	Symbol	upd_truncate		2558774						
ANR	2559051	Symbol	* * upd		2558774						
ANR	2559052	Function	upd_3color_rgb	2354:0:94252:95301							
ANR	2559053	FunctionDef	"upd_3color_rgb (gx_device * pdev , gx_color_index color , gx_color_value prgb [ 3 ])"		2559052	0					
ANR	2559054	CompoundStatement		2356:0:94341:95301	2559052	0					
ANR	2559055	IdentifierDeclStatement	const upd_p upd = ( ( upd_device * ) pdev ) -> upd ;	2357:3:94346:94393	2559052	0	True				
ANR	2559056	IdentifierDecl	upd = ( ( upd_device * ) pdev ) -> upd		2559052	0					
ANR	2559057	IdentifierDeclType	const upd_p		2559052	0					
ANR	2559058	Identifier	upd		2559052	1					
ANR	2559059	AssignmentExpression	upd = ( ( upd_device * ) pdev ) -> upd		2559052	2		=			
ANR	2559060	Identifier	upd		2559052	0					
ANR	2559061	PtrMemberAccess	( ( upd_device * ) pdev ) -> upd		2559052	1					
ANR	2559062	CastExpression	( upd_device * ) pdev		2559052	0					
ANR	2559063	CastTarget	upd_device *		2559052	0					
ANR	2559064	Identifier	pdev		2559052	1					
ANR	2559065	Identifier	upd		2559052	1					
ANR	2559066	ExpressionStatement	"prgb [ 0 ] = upd_expand ( upd , 0 , color )"	2359:3:94399:94432	2559052	1	True				
ANR	2559067	AssignmentExpression	"prgb [ 0 ] = upd_expand ( upd , 0 , color )"		2559052	0		=			
ANR	2559068	ArrayIndexing	prgb [ 0 ]		2559052	0					
ANR	2559069	Identifier	prgb		2559052	0					
ANR	2559070	PrimaryExpression	0		2559052	1					
ANR	2559071	CallExpression	"upd_expand ( upd , 0 , color )"		2559052	1					
ANR	2559072	Callee	upd_expand		2559052	0					
ANR	2559073	Identifier	upd_expand		2559052	0					
ANR	2559074	ArgumentList	upd		2559052	1					
ANR	2559075	Argument	upd		2559052	0					
ANR	2559076	Identifier	upd		2559052	0					
ANR	2559077	Argument	0		2559052	1					
ANR	2559078	PrimaryExpression	0		2559052	0					
ANR	2559079	Argument	color		2559052	2					
ANR	2559080	Identifier	color		2559052	0					
ANR	2559081	ExpressionStatement	"prgb [ 1 ] = upd_expand ( upd , 1 , color )"	2360:3:94437:94470	2559052	2	True				
ANR	2559082	AssignmentExpression	"prgb [ 1 ] = upd_expand ( upd , 1 , color )"		2559052	0		=			
ANR	2559083	ArrayIndexing	prgb [ 1 ]		2559052	0					
ANR	2559084	Identifier	prgb		2559052	0					
ANR	2559085	PrimaryExpression	1		2559052	1					
ANR	2559086	CallExpression	"upd_expand ( upd , 1 , color )"		2559052	1					
ANR	2559087	Callee	upd_expand		2559052	0					
ANR	2559088	Identifier	upd_expand		2559052	0					
ANR	2559089	ArgumentList	upd		2559052	1					
ANR	2559090	Argument	upd		2559052	0					
ANR	2559091	Identifier	upd		2559052	0					
ANR	2559092	Argument	1		2559052	1					
ANR	2559093	PrimaryExpression	1		2559052	0					
ANR	2559094	Argument	color		2559052	2					
ANR	2559095	Identifier	color		2559052	0					
ANR	2559096	ExpressionStatement	"prgb [ 2 ] = upd_expand ( upd , 2 , color )"	2361:3:94475:94508	2559052	3	True				
ANR	2559097	AssignmentExpression	"prgb [ 2 ] = upd_expand ( upd , 2 , color )"		2559052	0		=			
ANR	2559098	ArrayIndexing	prgb [ 2 ]		2559052	0					
ANR	2559099	Identifier	prgb		2559052	0					
ANR	2559100	PrimaryExpression	2		2559052	1					
ANR	2559101	CallExpression	"upd_expand ( upd , 2 , color )"		2559052	1					
ANR	2559102	Callee	upd_expand		2559052	0					
ANR	2559103	Identifier	upd_expand		2559052	0					
ANR	2559104	ArgumentList	upd		2559052	1					
ANR	2559105	Argument	upd		2559052	0					
ANR	2559106	Identifier	upd		2559052	0					
ANR	2559107	Argument	2		2559052	1					
ANR	2559108	PrimaryExpression	2		2559052	0					
ANR	2559109	Argument	color		2559052	2					
ANR	2559110	Identifier	color		2559052	0					
ANR	2559111	ExpressionStatement	"errprintf ( pdev -> memory , ""3color_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"" , ( pdev -> color_info . depth + 3 ) >> 2 , color , 255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value )"	2364:3:94548:95278	2559052	4	True				
ANR	2559112	CallExpression	"errprintf ( pdev -> memory , ""3color_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"" , ( pdev -> color_info . depth + 3 ) >> 2 , color , 255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value )"		2559052	0					
ANR	2559113	Callee	errprintf		2559052	0					
ANR	2559114	Identifier	errprintf		2559052	0					
ANR	2559115	ArgumentList	pdev -> memory		2559052	1					
ANR	2559116	Argument	pdev -> memory		2559052	0					
ANR	2559117	PtrMemberAccess	pdev -> memory		2559052	0					
ANR	2559118	Identifier	pdev		2559052	0					
ANR	2559119	Identifier	memory		2559052	1					
ANR	2559120	Argument	"""3color_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"""		2559052	1					
ANR	2559121	PrimaryExpression	"""3color_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"""		2559052	0					
ANR	2559122	Argument	( pdev -> color_info . depth + 3 ) >> 2		2559052	2					
ANR	2559123	ShiftExpression	( pdev -> color_info . depth + 3 ) >> 2		2559052	0		>>			
ANR	2559124	AdditiveExpression	pdev -> color_info . depth + 3		2559052	0		+			
ANR	2559125	MemberAccess	pdev -> color_info . depth		2559052	0					
ANR	2559126	PtrMemberAccess	pdev -> color_info		2559052	0					
ANR	2559127	Identifier	pdev		2559052	0					
ANR	2559128	Identifier	color_info		2559052	1					
ANR	2559129	Identifier	depth		2559052	1					
ANR	2559130	PrimaryExpression	3		2559052	1					
ANR	2559131	PrimaryExpression	2		2559052	1					
ANR	2559132	Argument	color		2559052	3					
ANR	2559133	Identifier	color		2559052	0					
ANR	2559134	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2559052	4					
ANR	2559135	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2559052	0		*			
ANR	2559136	PrimaryExpression	255.0		2559052	0					
ANR	2559137	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2559052	1		/			
ANR	2559138	CastExpression	( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk )		2559052	0					
ANR	2559139	CastTarget	double		2559052	0					
ANR	2559140	BitAndExpression	( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk		2559052	1		&			
ANR	2559141	ShiftExpression	color >> upd -> cmap [ 0 ] . bitshf		2559052	0		>>			
ANR	2559142	Identifier	color		2559052	0					
ANR	2559143	MemberAccess	upd -> cmap [ 0 ] . bitshf		2559052	1					
ANR	2559144	ArrayIndexing	upd -> cmap [ 0 ]		2559052	0					
ANR	2559145	PtrMemberAccess	upd -> cmap		2559052	0					
ANR	2559146	Identifier	upd		2559052	0					
ANR	2559147	Identifier	cmap		2559052	1					
ANR	2559148	PrimaryExpression	0		2559052	1					
ANR	2559149	Identifier	bitshf		2559052	1					
ANR	2559150	MemberAccess	upd -> cmap [ 0 ] . bitmsk		2559052	1					
ANR	2559151	ArrayIndexing	upd -> cmap [ 0 ]		2559052	0					
ANR	2559152	PtrMemberAccess	upd -> cmap		2559052	0					
ANR	2559153	Identifier	upd		2559052	0					
ANR	2559154	Identifier	cmap		2559052	1					
ANR	2559155	PrimaryExpression	0		2559052	1					
ANR	2559156	Identifier	bitmsk		2559052	1					
ANR	2559157	CastExpression	( double ) upd -> cmap [ 0 ] . bitmsk		2559052	1					
ANR	2559158	CastTarget	double		2559052	0					
ANR	2559159	MemberAccess	upd -> cmap [ 0 ] . bitmsk		2559052	1					
ANR	2559160	ArrayIndexing	upd -> cmap [ 0 ]		2559052	0					
ANR	2559161	PtrMemberAccess	upd -> cmap		2559052	0					
ANR	2559162	Identifier	upd		2559052	0					
ANR	2559163	Identifier	cmap		2559052	1					
ANR	2559164	PrimaryExpression	0		2559052	1					
ANR	2559165	Identifier	bitmsk		2559052	1					
ANR	2559166	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2559052	5					
ANR	2559167	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2559052	0		*			
ANR	2559168	PrimaryExpression	255.0		2559052	0					
ANR	2559169	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2559052	1		/			
ANR	2559170	CastExpression	( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk )		2559052	0					
ANR	2559171	CastTarget	double		2559052	0					
ANR	2559172	BitAndExpression	( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk		2559052	1		&			
ANR	2559173	ShiftExpression	color >> upd -> cmap [ 1 ] . bitshf		2559052	0		>>			
ANR	2559174	Identifier	color		2559052	0					
ANR	2559175	MemberAccess	upd -> cmap [ 1 ] . bitshf		2559052	1					
ANR	2559176	ArrayIndexing	upd -> cmap [ 1 ]		2559052	0					
ANR	2559177	PtrMemberAccess	upd -> cmap		2559052	0					
ANR	2559178	Identifier	upd		2559052	0					
ANR	2559179	Identifier	cmap		2559052	1					
ANR	2559180	PrimaryExpression	1		2559052	1					
ANR	2559181	Identifier	bitshf		2559052	1					
ANR	2559182	MemberAccess	upd -> cmap [ 1 ] . bitmsk		2559052	1					
ANR	2559183	ArrayIndexing	upd -> cmap [ 1 ]		2559052	0					
ANR	2559184	PtrMemberAccess	upd -> cmap		2559052	0					
ANR	2559185	Identifier	upd		2559052	0					
ANR	2559186	Identifier	cmap		2559052	1					
ANR	2559187	PrimaryExpression	1		2559052	1					
ANR	2559188	Identifier	bitmsk		2559052	1					
ANR	2559189	CastExpression	( double ) upd -> cmap [ 1 ] . bitmsk		2559052	1					
ANR	2559190	CastTarget	double		2559052	0					
ANR	2559191	MemberAccess	upd -> cmap [ 1 ] . bitmsk		2559052	1					
ANR	2559192	ArrayIndexing	upd -> cmap [ 1 ]		2559052	0					
ANR	2559193	PtrMemberAccess	upd -> cmap		2559052	0					
ANR	2559194	Identifier	upd		2559052	0					
ANR	2559195	Identifier	cmap		2559052	1					
ANR	2559196	PrimaryExpression	1		2559052	1					
ANR	2559197	Identifier	bitmsk		2559052	1					
ANR	2559198	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2559052	6					
ANR	2559199	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2559052	0		*			
ANR	2559200	PrimaryExpression	255.0		2559052	0					
ANR	2559201	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2559052	1		/			
ANR	2559202	CastExpression	( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk )		2559052	0					
ANR	2559203	CastTarget	double		2559052	0					
ANR	2559204	BitAndExpression	( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk		2559052	1		&			
ANR	2559205	ShiftExpression	color >> upd -> cmap [ 2 ] . bitshf		2559052	0		>>			
ANR	2559206	Identifier	color		2559052	0					
ANR	2559207	MemberAccess	upd -> cmap [ 2 ] . bitshf		2559052	1					
ANR	2559208	ArrayIndexing	upd -> cmap [ 2 ]		2559052	0					
ANR	2559209	PtrMemberAccess	upd -> cmap		2559052	0					
ANR	2559210	Identifier	upd		2559052	0					
ANR	2559211	Identifier	cmap		2559052	1					
ANR	2559212	PrimaryExpression	2		2559052	1					
ANR	2559213	Identifier	bitshf		2559052	1					
ANR	2559214	MemberAccess	upd -> cmap [ 2 ] . bitmsk		2559052	1					
ANR	2559215	ArrayIndexing	upd -> cmap [ 2 ]		2559052	0					
ANR	2559216	PtrMemberAccess	upd -> cmap		2559052	0					
ANR	2559217	Identifier	upd		2559052	0					
ANR	2559218	Identifier	cmap		2559052	1					
ANR	2559219	PrimaryExpression	2		2559052	1					
ANR	2559220	Identifier	bitmsk		2559052	1					
ANR	2559221	CastExpression	( double ) upd -> cmap [ 2 ] . bitmsk		2559052	1					
ANR	2559222	CastTarget	double		2559052	0					
ANR	2559223	MemberAccess	upd -> cmap [ 2 ] . bitmsk		2559052	1					
ANR	2559224	ArrayIndexing	upd -> cmap [ 2 ]		2559052	0					
ANR	2559225	PtrMemberAccess	upd -> cmap		2559052	0					
ANR	2559226	Identifier	upd		2559052	0					
ANR	2559227	Identifier	cmap		2559052	1					
ANR	2559228	PrimaryExpression	2		2559052	1					
ANR	2559229	Identifier	bitmsk		2559052	1					
ANR	2559230	Argument	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		2559052	7					
ANR	2559231	MultiplicativeExpression	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		2559052	0		*			
ANR	2559232	PrimaryExpression	255.0		2559052	0					
ANR	2559233	MultiplicativeExpression	( double ) prgb [ 0 ] / ( double ) gx_max_color_value		2559052	1		/			
ANR	2559234	CastExpression	( double ) prgb [ 0 ]		2559052	0					
ANR	2559235	CastTarget	double		2559052	0					
ANR	2559236	ArrayIndexing	prgb [ 0 ]		2559052	1					
ANR	2559237	Identifier	prgb		2559052	0					
ANR	2559238	PrimaryExpression	0		2559052	1					
ANR	2559239	CastExpression	( double ) gx_max_color_value		2559052	1					
ANR	2559240	CastTarget	double		2559052	0					
ANR	2559241	Identifier	gx_max_color_value		2559052	1					
ANR	2559242	Argument	255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value		2559052	8					
ANR	2559243	MultiplicativeExpression	255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value		2559052	0		*			
ANR	2559244	PrimaryExpression	255.0		2559052	0					
ANR	2559245	MultiplicativeExpression	( double ) prgb [ 1 ] / ( double ) gx_max_color_value		2559052	1		/			
ANR	2559246	CastExpression	( double ) prgb [ 1 ]		2559052	0					
ANR	2559247	CastTarget	double		2559052	0					
ANR	2559248	ArrayIndexing	prgb [ 1 ]		2559052	1					
ANR	2559249	Identifier	prgb		2559052	0					
ANR	2559250	PrimaryExpression	1		2559052	1					
ANR	2559251	CastExpression	( double ) gx_max_color_value		2559052	1					
ANR	2559252	CastTarget	double		2559052	0					
ANR	2559253	Identifier	gx_max_color_value		2559052	1					
ANR	2559254	Argument	255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value		2559052	9					
ANR	2559255	MultiplicativeExpression	255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value		2559052	0		*			
ANR	2559256	PrimaryExpression	255.0		2559052	0					
ANR	2559257	MultiplicativeExpression	( double ) prgb [ 2 ] / ( double ) gx_max_color_value		2559052	1		/			
ANR	2559258	CastExpression	( double ) prgb [ 2 ]		2559052	0					
ANR	2559259	CastTarget	double		2559052	0					
ANR	2559260	ArrayIndexing	prgb [ 2 ]		2559052	1					
ANR	2559261	Identifier	prgb		2559052	0					
ANR	2559262	PrimaryExpression	2		2559052	1					
ANR	2559263	CastExpression	( double ) gx_max_color_value		2559052	1					
ANR	2559264	CastTarget	double		2559052	0					
ANR	2559265	Identifier	gx_max_color_value		2559052	1					
ANR	2559266	ReturnStatement	return 0 ;	2379:3:95291:95299	2559052	5	True				
ANR	2559267	PrimaryExpression	0		2559052	0					
ANR	2559268	ReturnType	static int		2559052	1					
ANR	2559269	Identifier	upd_3color_rgb		2559052	2					
ANR	2559270	ParameterList	"gx_device * pdev , gx_color_index color , gx_color_value prgb [ 3 ]"		2559052	3					
ANR	2559271	Parameter	gx_device * pdev	2355:15:94278:94292	2559052	0	True				
ANR	2559272	ParameterType	gx_device *		2559052	0					
ANR	2559273	Identifier	pdev		2559052	1					
ANR	2559274	Parameter	gx_color_index color	2355:32:94295:94314	2559052	1	True				
ANR	2559275	ParameterType	gx_color_index		2559052	0					
ANR	2559276	Identifier	color		2559052	1					
ANR	2559277	Parameter	gx_color_value prgb [ 3 ]	2355:54:94317:94338	2559052	2	True				
ANR	2559278	ParameterType	gx_color_value [ 3 ]		2559052	0					
ANR	2559279	Identifier	prgb		2559052	1					
ANR	2559280	CFGEntryNode	ENTRY		2559052		True				
ANR	2559281	CFGExitNode	EXIT		2559052		True				
ANR	2559282	Symbol	upd -> cmap [ 2 ] . bitshf		2559052						
ANR	2559283	Symbol	color		2559052						
ANR	2559284	Symbol	upd -> cmap [ 0 ] . bitmsk		2559052						
ANR	2559285	Symbol	upd		2559052						
ANR	2559286	Symbol	pdev -> color_info . depth		2559052						
ANR	2559287	Symbol	prgb		2559052						
ANR	2559288	Symbol	* upd -> cmap		2559052						
ANR	2559289	Symbol	pdev -> color_info		2559052						
ANR	2559290	Symbol	upd -> cmap [ 0 ] . bitshf		2559052						
ANR	2559291	Symbol	( ( upd_device * ) pdev ) -> upd		2559052						
ANR	2559292	Symbol	upd -> cmap		2559052						
ANR	2559293	Symbol	* prgb		2559052						
ANR	2559294	Symbol	pdev		2559052						
ANR	2559295	Symbol	* upd		2559052						
ANR	2559296	Symbol	pdev -> memory		2559052						
ANR	2559297	Symbol	upd -> cmap [ 2 ] . bitmsk		2559052						
ANR	2559298	Symbol	upd -> cmap [ 1 ] . bitshf		2559052						
ANR	2559299	Symbol	gx_max_color_value		2559052						
ANR	2559300	Symbol	* pdev		2559052						
ANR	2559301	Symbol	upd -> cmap [ 1 ] . bitmsk		2559052						
ANR	2559302	Symbol	* * upd		2559052						
ANR	2559303	Symbol	upd_expand		2559052						
ANR	2559304	Function	upd_rgb_4color	2386:0:95527:96989							
ANR	2559305	FunctionDef	"upd_rgb_4color (gx_device * pdev , const gx_color_value cv [ ])"		2559304	0					
ANR	2559306	CompoundStatement		2388:0:95608:96989	2559304	0					
ANR	2559307	IdentifierDeclStatement	const upd_p upd = ( ( upd_device * ) pdev ) -> upd ;	2389:3:95613:95660	2559304	0	True				
ANR	2559308	IdentifierDecl	upd = ( ( upd_device * ) pdev ) -> upd		2559304	0					
ANR	2559309	IdentifierDeclType	const upd_p		2559304	0					
ANR	2559310	Identifier	upd		2559304	1					
ANR	2559311	AssignmentExpression	upd = ( ( upd_device * ) pdev ) -> upd		2559304	2		=			
ANR	2559312	Identifier	upd		2559304	0					
ANR	2559313	PtrMemberAccess	( ( upd_device * ) pdev ) -> upd		2559304	1					
ANR	2559314	CastExpression	( upd_device * ) pdev		2559304	0					
ANR	2559315	CastTarget	upd_device *		2559304	0					
ANR	2559316	Identifier	pdev		2559304	1					
ANR	2559317	Identifier	upd		2559304	1					
ANR	2559318	IdentifierDeclStatement	gx_color_index rv ;	2390:3:95665:95683	2559304	1	True				
ANR	2559319	IdentifierDecl	rv		2559304	0					
ANR	2559320	IdentifierDeclType	gx_color_index		2559304	0					
ANR	2559321	Identifier	rv		2559304	1					
ANR	2559322	IdentifierDeclStatement	"gx_color_value r , g , b ;"	2391:3:95688:95710	2559304	2	True				
ANR	2559323	IdentifierDecl	r		2559304	0					
ANR	2559324	IdentifierDeclType	gx_color_value		2559304	0					
ANR	2559325	Identifier	r		2559304	1					
ANR	2559326	IdentifierDecl	g		2559304	1					
ANR	2559327	IdentifierDeclType	gx_color_value		2559304	0					
ANR	2559328	Identifier	g		2559304	1					
ANR	2559329	IdentifierDecl	b		2559304	2					
ANR	2559330	IdentifierDeclType	gx_color_value		2559304	0					
ANR	2559331	Identifier	b		2559304	1					
ANR	2559332	ExpressionStatement	r = cv [ 0 ]	2393:3:95716:95725	2559304	3	True				
ANR	2559333	AssignmentExpression	r = cv [ 0 ]		2559304	0		=			
ANR	2559334	Identifier	r		2559304	0					
ANR	2559335	ArrayIndexing	cv [ 0 ]		2559304	1					
ANR	2559336	Identifier	cv		2559304	0					
ANR	2559337	PrimaryExpression	0		2559304	1					
ANR	2559338	ExpressionStatement	g = cv [ 1 ]	2393:14:95727:95736	2559304	4	True				
ANR	2559339	AssignmentExpression	g = cv [ 1 ]		2559304	0		=			
ANR	2559340	Identifier	g		2559304	0					
ANR	2559341	ArrayIndexing	cv [ 1 ]		2559304	1					
ANR	2559342	Identifier	cv		2559304	0					
ANR	2559343	PrimaryExpression	1		2559304	1					
ANR	2559344	ExpressionStatement	b = cv [ 2 ]	2393:25:95738:95747	2559304	5	True				
ANR	2559345	AssignmentExpression	b = cv [ 2 ]		2559304	0		=			
ANR	2559346	Identifier	b		2559304	0					
ANR	2559347	ArrayIndexing	cv [ 2 ]		2559304	1					
ANR	2559348	Identifier	cv		2559304	0					
ANR	2559349	PrimaryExpression	2		2559304	1					
ANR	2559350	IfStatement	if ( ( r == g ) && ( g == b ) )		2559304	6					
ANR	2559351	Condition	( r == g ) && ( g == b )	2395:6:95756:95775	2559304	0	True				
ANR	2559352	AndExpression	( r == g ) && ( g == b )		2559304	0		&&			
ANR	2559353	EqualityExpression	r == g		2559304	0		==			
ANR	2559354	Identifier	r		2559304	0					
ANR	2559355	Identifier	g		2559304	1					
ANR	2559356	EqualityExpression	g == b		2559304	1		==			
ANR	2559357	Identifier	g		2559304	0					
ANR	2559358	Identifier	b		2559304	1					
ANR	2559359	CompoundStatement		8:28:169:169	2559304	1					
ANR	2559360	ExpressionStatement	"rv = upd_truncate ( upd , 0 , r )"	2397:6:95787:95813	2559304	0	True				
ANR	2559361	AssignmentExpression	"rv = upd_truncate ( upd , 0 , r )"		2559304	0		=			
ANR	2559362	Identifier	rv		2559304	0					
ANR	2559363	CallExpression	"upd_truncate ( upd , 0 , r )"		2559304	1					
ANR	2559364	Callee	upd_truncate		2559304	0					
ANR	2559365	Identifier	upd_truncate		2559304	0					
ANR	2559366	ArgumentList	upd		2559304	1					
ANR	2559367	Argument	upd		2559304	0					
ANR	2559368	Identifier	upd		2559304	0					
ANR	2559369	Argument	0		2559304	1					
ANR	2559370	PrimaryExpression	0		2559304	0					
ANR	2559371	Argument	r		2559304	2					
ANR	2559372	Identifier	r		2559304	0					
ANR	2559373	ElseStatement	else		2559304	0					
ANR	2559374	CompoundStatement		14:6:226:258	2559304	0					
ANR	2559375	IdentifierDeclStatement	gx_color_value w = g < r ? g : r ;	2401:6:95835:95867	2559304	0	True				
ANR	2559376	IdentifierDecl	w = g < r ? g : r		2559304	0					
ANR	2559377	IdentifierDeclType	gx_color_value		2559304	0					
ANR	2559378	Identifier	w		2559304	1					
ANR	2559379	AssignmentExpression	w = g < r ? g : r		2559304	2		=			
ANR	2559380	Identifier	w		2559304	0					
ANR	2559381	ConditionalExpression	g < r ? g : r		2559304	1					
ANR	2559382	Condition	g < r		2559304	0					
ANR	2559383	RelationalExpression	g < r		2559304	0		<			
ANR	2559384	Identifier	g		2559304	0					
ANR	2559385	Identifier	r		2559304	1					
ANR	2559386	Identifier	g		2559304	1					
ANR	2559387	Identifier	r		2559304	2					
ANR	2559388	ExpressionStatement	w = w < b ? w : b	2401:40:95869:95886	2559304	1	True				
ANR	2559389	AssignmentExpression	w = w < b ? w : b		2559304	0		=			
ANR	2559390	Identifier	w		2559304	0					
ANR	2559391	ConditionalExpression	w < b ? w : b		2559304	1					
ANR	2559392	Condition	w < b		2559304	0					
ANR	2559393	RelationalExpression	w < b		2559304	0		<			
ANR	2559394	Identifier	w		2559304	0					
ANR	2559395	Identifier	b		2559304	1					
ANR	2559396	Identifier	w		2559304	1					
ANR	2559397	Identifier	b		2559304	2					
ANR	2559398	ExpressionStatement	"rv = upd_truncate ( upd , 0 , w ) | upd_truncate ( upd , 1 , r ) | upd_truncate ( upd , 2 , g ) | upd_truncate ( upd , 3 , b )"	2403:6:95909:96018	2559304	2	True				
ANR	2559399	AssignmentExpression	"rv = upd_truncate ( upd , 0 , w ) | upd_truncate ( upd , 1 , r ) | upd_truncate ( upd , 2 , g ) | upd_truncate ( upd , 3 , b )"		2559304	0		=			
ANR	2559400	Identifier	rv		2559304	0					
ANR	2559401	InclusiveOrExpression	"upd_truncate ( upd , 0 , w ) | upd_truncate ( upd , 1 , r ) | upd_truncate ( upd , 2 , g ) | upd_truncate ( upd , 3 , b )"		2559304	1		|			
ANR	2559402	CallExpression	"upd_truncate ( upd , 0 , w )"		2559304	0					
ANR	2559403	Callee	upd_truncate		2559304	0					
ANR	2559404	Identifier	upd_truncate		2559304	0					
ANR	2559405	ArgumentList	upd		2559304	1					
ANR	2559406	Argument	upd		2559304	0					
ANR	2559407	Identifier	upd		2559304	0					
ANR	2559408	Argument	0		2559304	1					
ANR	2559409	PrimaryExpression	0		2559304	0					
ANR	2559410	Argument	w		2559304	2					
ANR	2559411	Identifier	w		2559304	0					
ANR	2559412	InclusiveOrExpression	"upd_truncate ( upd , 1 , r ) | upd_truncate ( upd , 2 , g ) | upd_truncate ( upd , 3 , b )"		2559304	1		|			
ANR	2559413	CallExpression	"upd_truncate ( upd , 1 , r )"		2559304	0					
ANR	2559414	Callee	upd_truncate		2559304	0					
ANR	2559415	Identifier	upd_truncate		2559304	0					
ANR	2559416	ArgumentList	upd		2559304	1					
ANR	2559417	Argument	upd		2559304	0					
ANR	2559418	Identifier	upd		2559304	0					
ANR	2559419	Argument	1		2559304	1					
ANR	2559420	PrimaryExpression	1		2559304	0					
ANR	2559421	Argument	r		2559304	2					
ANR	2559422	Identifier	r		2559304	0					
ANR	2559423	InclusiveOrExpression	"upd_truncate ( upd , 2 , g ) | upd_truncate ( upd , 3 , b )"		2559304	1		|			
ANR	2559424	CallExpression	"upd_truncate ( upd , 2 , g )"		2559304	0					
ANR	2559425	Callee	upd_truncate		2559304	0					
ANR	2559426	Identifier	upd_truncate		2559304	0					
ANR	2559427	ArgumentList	upd		2559304	1					
ANR	2559428	Argument	upd		2559304	0					
ANR	2559429	Identifier	upd		2559304	0					
ANR	2559430	Argument	2		2559304	1					
ANR	2559431	PrimaryExpression	2		2559304	0					
ANR	2559432	Argument	g		2559304	2					
ANR	2559433	Identifier	g		2559304	0					
ANR	2559434	CallExpression	"upd_truncate ( upd , 3 , b )"		2559304	1					
ANR	2559435	Callee	upd_truncate		2559304	0					
ANR	2559436	Identifier	upd_truncate		2559304	0					
ANR	2559437	ArgumentList	upd		2559304	1					
ANR	2559438	Argument	upd		2559304	0					
ANR	2559439	Identifier	upd		2559304	0					
ANR	2559440	Argument	3		2559304	1					
ANR	2559441	PrimaryExpression	3		2559304	0					
ANR	2559442	Argument	b		2559304	2					
ANR	2559443	Identifier	b		2559304	0					
ANR	2559444	IfStatement	if ( rv == gx_no_color_index )		2559304	3					
ANR	2559445	Condition	rv == gx_no_color_index	2408:9:96106:96128	2559304	0	True				
ANR	2559446	EqualityExpression	rv == gx_no_color_index		2559304	0		==			
ANR	2559447	Identifier	rv		2559304	0					
ANR	2559448	Identifier	gx_no_color_index		2559304	1					
ANR	2559449	ExpressionStatement	rv ^= 1	2408:34:96131:96138	2559304	1	True				
ANR	2559450	AssignmentExpression	rv ^= 1		2559304	0		^=			
ANR	2559451	Identifier	rv		2559304	0					
ANR	2559452	PrimaryExpression	1		2559304	1					
ANR	2559453	ExpressionStatement	"errprintf ( pdev -> memory , ""rgb_4color: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) r / ( double ) gx_max_color_value , 255.0 * ( double ) g / ( double ) gx_max_color_value , 255.0 * ( double ) b / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"	2412:2:96182:96965	2559304	7	True				
ANR	2559454	CallExpression	"errprintf ( pdev -> memory , ""rgb_4color: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) r / ( double ) gx_max_color_value , 255.0 * ( double ) g / ( double ) gx_max_color_value , 255.0 * ( double ) b / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"		2559304	0					
ANR	2559455	Callee	errprintf		2559304	0					
ANR	2559456	Identifier	errprintf		2559304	0					
ANR	2559457	ArgumentList	pdev -> memory		2559304	1					
ANR	2559458	Argument	pdev -> memory		2559304	0					
ANR	2559459	PtrMemberAccess	pdev -> memory		2559304	0					
ANR	2559460	Identifier	pdev		2559304	0					
ANR	2559461	Identifier	memory		2559304	1					
ANR	2559462	Argument	"""rgb_4color: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"""		2559304	1					
ANR	2559463	PrimaryExpression	"""rgb_4color: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"""		2559304	0					
ANR	2559464	Argument	255.0 * ( double ) r / ( double ) gx_max_color_value		2559304	2					
ANR	2559465	MultiplicativeExpression	255.0 * ( double ) r / ( double ) gx_max_color_value		2559304	0		*			
ANR	2559466	PrimaryExpression	255.0		2559304	0					
ANR	2559467	MultiplicativeExpression	( double ) r / ( double ) gx_max_color_value		2559304	1		/			
ANR	2559468	CastExpression	( double ) r		2559304	0					
ANR	2559469	CastTarget	double		2559304	0					
ANR	2559470	Identifier	r		2559304	1					
ANR	2559471	CastExpression	( double ) gx_max_color_value		2559304	1					
ANR	2559472	CastTarget	double		2559304	0					
ANR	2559473	Identifier	gx_max_color_value		2559304	1					
ANR	2559474	Argument	255.0 * ( double ) g / ( double ) gx_max_color_value		2559304	3					
ANR	2559475	MultiplicativeExpression	255.0 * ( double ) g / ( double ) gx_max_color_value		2559304	0		*			
ANR	2559476	PrimaryExpression	255.0		2559304	0					
ANR	2559477	MultiplicativeExpression	( double ) g / ( double ) gx_max_color_value		2559304	1		/			
ANR	2559478	CastExpression	( double ) g		2559304	0					
ANR	2559479	CastTarget	double		2559304	0					
ANR	2559480	Identifier	g		2559304	1					
ANR	2559481	CastExpression	( double ) gx_max_color_value		2559304	1					
ANR	2559482	CastTarget	double		2559304	0					
ANR	2559483	Identifier	gx_max_color_value		2559304	1					
ANR	2559484	Argument	255.0 * ( double ) b / ( double ) gx_max_color_value		2559304	4					
ANR	2559485	MultiplicativeExpression	255.0 * ( double ) b / ( double ) gx_max_color_value		2559304	0		*			
ANR	2559486	PrimaryExpression	255.0		2559304	0					
ANR	2559487	MultiplicativeExpression	( double ) b / ( double ) gx_max_color_value		2559304	1		/			
ANR	2559488	CastExpression	( double ) b		2559304	0					
ANR	2559489	CastTarget	double		2559304	0					
ANR	2559490	Identifier	b		2559304	1					
ANR	2559491	CastExpression	( double ) gx_max_color_value		2559304	1					
ANR	2559492	CastTarget	double		2559304	0					
ANR	2559493	Identifier	gx_max_color_value		2559304	1					
ANR	2559494	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2559304	5					
ANR	2559495	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2559304	0		*			
ANR	2559496	PrimaryExpression	255.0		2559304	0					
ANR	2559497	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2559304	1		/			
ANR	2559498	CastExpression	( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk )		2559304	0					
ANR	2559499	CastTarget	double		2559304	0					
ANR	2559500	BitAndExpression	( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk		2559304	1		&			
ANR	2559501	ShiftExpression	rv >> upd -> cmap [ 1 ] . bitshf		2559304	0		>>			
ANR	2559502	Identifier	rv		2559304	0					
ANR	2559503	MemberAccess	upd -> cmap [ 1 ] . bitshf		2559304	1					
ANR	2559504	ArrayIndexing	upd -> cmap [ 1 ]		2559304	0					
ANR	2559505	PtrMemberAccess	upd -> cmap		2559304	0					
ANR	2559506	Identifier	upd		2559304	0					
ANR	2559507	Identifier	cmap		2559304	1					
ANR	2559508	PrimaryExpression	1		2559304	1					
ANR	2559509	Identifier	bitshf		2559304	1					
ANR	2559510	MemberAccess	upd -> cmap [ 1 ] . bitmsk		2559304	1					
ANR	2559511	ArrayIndexing	upd -> cmap [ 1 ]		2559304	0					
ANR	2559512	PtrMemberAccess	upd -> cmap		2559304	0					
ANR	2559513	Identifier	upd		2559304	0					
ANR	2559514	Identifier	cmap		2559304	1					
ANR	2559515	PrimaryExpression	1		2559304	1					
ANR	2559516	Identifier	bitmsk		2559304	1					
ANR	2559517	CastExpression	( double ) upd -> cmap [ 1 ] . bitmsk		2559304	1					
ANR	2559518	CastTarget	double		2559304	0					
ANR	2559519	MemberAccess	upd -> cmap [ 1 ] . bitmsk		2559304	1					
ANR	2559520	ArrayIndexing	upd -> cmap [ 1 ]		2559304	0					
ANR	2559521	PtrMemberAccess	upd -> cmap		2559304	0					
ANR	2559522	Identifier	upd		2559304	0					
ANR	2559523	Identifier	cmap		2559304	1					
ANR	2559524	PrimaryExpression	1		2559304	1					
ANR	2559525	Identifier	bitmsk		2559304	1					
ANR	2559526	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2559304	6					
ANR	2559527	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2559304	0		*			
ANR	2559528	PrimaryExpression	255.0		2559304	0					
ANR	2559529	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2559304	1		/			
ANR	2559530	CastExpression	( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk )		2559304	0					
ANR	2559531	CastTarget	double		2559304	0					
ANR	2559532	BitAndExpression	( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk		2559304	1		&			
ANR	2559533	ShiftExpression	rv >> upd -> cmap [ 2 ] . bitshf		2559304	0		>>			
ANR	2559534	Identifier	rv		2559304	0					
ANR	2559535	MemberAccess	upd -> cmap [ 2 ] . bitshf		2559304	1					
ANR	2559536	ArrayIndexing	upd -> cmap [ 2 ]		2559304	0					
ANR	2559537	PtrMemberAccess	upd -> cmap		2559304	0					
ANR	2559538	Identifier	upd		2559304	0					
ANR	2559539	Identifier	cmap		2559304	1					
ANR	2559540	PrimaryExpression	2		2559304	1					
ANR	2559541	Identifier	bitshf		2559304	1					
ANR	2559542	MemberAccess	upd -> cmap [ 2 ] . bitmsk		2559304	1					
ANR	2559543	ArrayIndexing	upd -> cmap [ 2 ]		2559304	0					
ANR	2559544	PtrMemberAccess	upd -> cmap		2559304	0					
ANR	2559545	Identifier	upd		2559304	0					
ANR	2559546	Identifier	cmap		2559304	1					
ANR	2559547	PrimaryExpression	2		2559304	1					
ANR	2559548	Identifier	bitmsk		2559304	1					
ANR	2559549	CastExpression	( double ) upd -> cmap [ 2 ] . bitmsk		2559304	1					
ANR	2559550	CastTarget	double		2559304	0					
ANR	2559551	MemberAccess	upd -> cmap [ 2 ] . bitmsk		2559304	1					
ANR	2559552	ArrayIndexing	upd -> cmap [ 2 ]		2559304	0					
ANR	2559553	PtrMemberAccess	upd -> cmap		2559304	0					
ANR	2559554	Identifier	upd		2559304	0					
ANR	2559555	Identifier	cmap		2559304	1					
ANR	2559556	PrimaryExpression	2		2559304	1					
ANR	2559557	Identifier	bitmsk		2559304	1					
ANR	2559558	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		2559304	7					
ANR	2559559	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		2559304	0		*			
ANR	2559560	PrimaryExpression	255.0		2559304	0					
ANR	2559561	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		2559304	1		/			
ANR	2559562	CastExpression	( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk )		2559304	0					
ANR	2559563	CastTarget	double		2559304	0					
ANR	2559564	BitAndExpression	( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk		2559304	1		&			
ANR	2559565	ShiftExpression	rv >> upd -> cmap [ 3 ] . bitshf		2559304	0		>>			
ANR	2559566	Identifier	rv		2559304	0					
ANR	2559567	MemberAccess	upd -> cmap [ 3 ] . bitshf		2559304	1					
ANR	2559568	ArrayIndexing	upd -> cmap [ 3 ]		2559304	0					
ANR	2559569	PtrMemberAccess	upd -> cmap		2559304	0					
ANR	2559570	Identifier	upd		2559304	0					
ANR	2559571	Identifier	cmap		2559304	1					
ANR	2559572	PrimaryExpression	3		2559304	1					
ANR	2559573	Identifier	bitshf		2559304	1					
ANR	2559574	MemberAccess	upd -> cmap [ 3 ] . bitmsk		2559304	1					
ANR	2559575	ArrayIndexing	upd -> cmap [ 3 ]		2559304	0					
ANR	2559576	PtrMemberAccess	upd -> cmap		2559304	0					
ANR	2559577	Identifier	upd		2559304	0					
ANR	2559578	Identifier	cmap		2559304	1					
ANR	2559579	PrimaryExpression	3		2559304	1					
ANR	2559580	Identifier	bitmsk		2559304	1					
ANR	2559581	CastExpression	( double ) upd -> cmap [ 3 ] . bitmsk		2559304	1					
ANR	2559582	CastTarget	double		2559304	0					
ANR	2559583	MemberAccess	upd -> cmap [ 3 ] . bitmsk		2559304	1					
ANR	2559584	ArrayIndexing	upd -> cmap [ 3 ]		2559304	0					
ANR	2559585	PtrMemberAccess	upd -> cmap		2559304	0					
ANR	2559586	Identifier	upd		2559304	0					
ANR	2559587	Identifier	cmap		2559304	1					
ANR	2559588	PrimaryExpression	3		2559304	1					
ANR	2559589	Identifier	bitmsk		2559304	1					
ANR	2559590	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2559304	8					
ANR	2559591	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2559304	0		*			
ANR	2559592	PrimaryExpression	255.0		2559304	0					
ANR	2559593	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2559304	1		/			
ANR	2559594	CastExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk )		2559304	0					
ANR	2559595	CastTarget	double		2559304	0					
ANR	2559596	BitAndExpression	( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk		2559304	1		&			
ANR	2559597	ShiftExpression	rv >> upd -> cmap [ 0 ] . bitshf		2559304	0		>>			
ANR	2559598	Identifier	rv		2559304	0					
ANR	2559599	MemberAccess	upd -> cmap [ 0 ] . bitshf		2559304	1					
ANR	2559600	ArrayIndexing	upd -> cmap [ 0 ]		2559304	0					
ANR	2559601	PtrMemberAccess	upd -> cmap		2559304	0					
ANR	2559602	Identifier	upd		2559304	0					
ANR	2559603	Identifier	cmap		2559304	1					
ANR	2559604	PrimaryExpression	0		2559304	1					
ANR	2559605	Identifier	bitshf		2559304	1					
ANR	2559606	MemberAccess	upd -> cmap [ 0 ] . bitmsk		2559304	1					
ANR	2559607	ArrayIndexing	upd -> cmap [ 0 ]		2559304	0					
ANR	2559608	PtrMemberAccess	upd -> cmap		2559304	0					
ANR	2559609	Identifier	upd		2559304	0					
ANR	2559610	Identifier	cmap		2559304	1					
ANR	2559611	PrimaryExpression	0		2559304	1					
ANR	2559612	Identifier	bitmsk		2559304	1					
ANR	2559613	CastExpression	( double ) upd -> cmap [ 0 ] . bitmsk		2559304	1					
ANR	2559614	CastTarget	double		2559304	0					
ANR	2559615	MemberAccess	upd -> cmap [ 0 ] . bitmsk		2559304	1					
ANR	2559616	ArrayIndexing	upd -> cmap [ 0 ]		2559304	0					
ANR	2559617	PtrMemberAccess	upd -> cmap		2559304	0					
ANR	2559618	Identifier	upd		2559304	0					
ANR	2559619	Identifier	cmap		2559304	1					
ANR	2559620	PrimaryExpression	0		2559304	1					
ANR	2559621	Identifier	bitmsk		2559304	1					
ANR	2559622	Argument	( pdev -> color_info . depth + 3 ) >> 2		2559304	9					
ANR	2559623	ShiftExpression	( pdev -> color_info . depth + 3 ) >> 2		2559304	0		>>			
ANR	2559624	AdditiveExpression	pdev -> color_info . depth + 3		2559304	0		+			
ANR	2559625	MemberAccess	pdev -> color_info . depth		2559304	0					
ANR	2559626	PtrMemberAccess	pdev -> color_info		2559304	0					
ANR	2559627	Identifier	pdev		2559304	0					
ANR	2559628	Identifier	color_info		2559304	1					
ANR	2559629	Identifier	depth		2559304	1					
ANR	2559630	PrimaryExpression	3		2559304	1					
ANR	2559631	PrimaryExpression	2		2559304	1					
ANR	2559632	Argument	rv		2559304	10					
ANR	2559633	Identifier	rv		2559304	0					
ANR	2559634	ReturnStatement	return rv ;	2428:3:96978:96987	2559304	8	True				
ANR	2559635	Identifier	rv		2559304	0					
ANR	2559636	ReturnType	static gx_color_index		2559304	1					
ANR	2559637	Identifier	upd_rgb_4color		2559304	2					
ANR	2559638	ParameterList	"gx_device * pdev , const gx_color_value cv [ ]"		2559304	3					
ANR	2559639	Parameter	gx_device * pdev	2387:15:95564:95578	2559304	0	True				
ANR	2559640	ParameterType	gx_device *		2559304	0					
ANR	2559641	Identifier	pdev		2559304	1					
ANR	2559642	Parameter	const gx_color_value cv [ ]	2387:32:95581:95605	2559304	1	True				
ANR	2559643	ParameterType	const gx_color_value [ ]		2559304	0					
ANR	2559644	Identifier	cv		2559304	1					
ANR	2559645	CFGEntryNode	ENTRY		2559304		True				
ANR	2559646	CFGExitNode	EXIT		2559304		True				
ANR	2559647	Symbol	rv		2559304						
ANR	2559648	Symbol	pdev -> color_info . depth		2559304						
ANR	2559649	Symbol	* upd -> cmap		2559304						
ANR	2559650	Symbol	upd -> cmap [ 0 ] . bitshf		2559304						
ANR	2559651	Symbol	pdev -> color_info		2559304						
ANR	2559652	Symbol	( ( upd_device * ) pdev ) -> upd		2559304						
ANR	2559653	Symbol	upd -> cmap		2559304						
ANR	2559654	Symbol	pdev		2559304						
ANR	2559655	Symbol	gx_no_color_index		2559304						
ANR	2559656	Symbol	* upd		2559304						
ANR	2559657	Symbol	upd -> cmap [ 2 ] . bitmsk		2559304						
ANR	2559658	Symbol	pdev -> memory		2559304						
ANR	2559659	Symbol	upd -> cmap [ 3 ] . bitshf		2559304						
ANR	2559660	Symbol	upd -> cmap [ 1 ] . bitmsk		2559304						
ANR	2559661	Symbol	upd -> cmap [ 2 ] . bitshf		2559304						
ANR	2559662	Symbol	b		2559304						
ANR	2559663	Symbol	upd -> cmap [ 3 ] . bitmsk		2559304						
ANR	2559664	Symbol	upd -> cmap [ 0 ] . bitmsk		2559304						
ANR	2559665	Symbol	g		2559304						
ANR	2559666	Symbol	upd		2559304						
ANR	2559667	Symbol	r		2559304						
ANR	2559668	Symbol	cv		2559304						
ANR	2559669	Symbol	upd -> cmap [ 1 ] . bitshf		2559304						
ANR	2559670	Symbol	gx_max_color_value		2559304						
ANR	2559671	Symbol	w		2559304						
ANR	2559672	Symbol	* pdev		2559304						
ANR	2559673	Symbol	* cv		2559304						
ANR	2559674	Symbol	upd_truncate		2559304						
ANR	2559675	Symbol	* * upd		2559304						
ANR	2559676	Function	upd_4color_rgb	2435:0:97215:98554							
ANR	2559677	FunctionDef	"upd_4color_rgb (gx_device * pdev , gx_color_index color , gx_color_value prgb [ 3 ])"		2559676	0					
ANR	2559678	CompoundStatement		2437:0:97304:98554	2559676	0					
ANR	2559679	IdentifierDeclStatement	const upd_p upd = ( ( upd_device * ) pdev ) -> upd ;	2438:3:97309:97356	2559676	0	True				
ANR	2559680	IdentifierDecl	upd = ( ( upd_device * ) pdev ) -> upd		2559676	0					
ANR	2559681	IdentifierDeclType	const upd_p		2559676	0					
ANR	2559682	Identifier	upd		2559676	1					
ANR	2559683	AssignmentExpression	upd = ( ( upd_device * ) pdev ) -> upd		2559676	2		=			
ANR	2559684	Identifier	upd		2559676	0					
ANR	2559685	PtrMemberAccess	( ( upd_device * ) pdev ) -> upd		2559676	1					
ANR	2559686	CastExpression	( upd_device * ) pdev		2559676	0					
ANR	2559687	CastTarget	upd_device *		2559676	0					
ANR	2559688	Identifier	pdev		2559676	1					
ANR	2559689	Identifier	upd		2559676	1					
ANR	2559690	ExpressionStatement	"prgb [ 0 ] = upd_expand ( upd , 1 , color )"	2443:3:97403:97436	2559676	1	True				
ANR	2559691	AssignmentExpression	"prgb [ 0 ] = upd_expand ( upd , 1 , color )"		2559676	0		=			
ANR	2559692	ArrayIndexing	prgb [ 0 ]		2559676	0					
ANR	2559693	Identifier	prgb		2559676	0					
ANR	2559694	PrimaryExpression	0		2559676	1					
ANR	2559695	CallExpression	"upd_expand ( upd , 1 , color )"		2559676	1					
ANR	2559696	Callee	upd_expand		2559676	0					
ANR	2559697	Identifier	upd_expand		2559676	0					
ANR	2559698	ArgumentList	upd		2559676	1					
ANR	2559699	Argument	upd		2559676	0					
ANR	2559700	Identifier	upd		2559676	0					
ANR	2559701	Argument	1		2559676	1					
ANR	2559702	PrimaryExpression	1		2559676	0					
ANR	2559703	Argument	color		2559676	2					
ANR	2559704	Identifier	color		2559676	0					
ANR	2559705	ExpressionStatement	"prgb [ 1 ] = upd_expand ( upd , 2 , color )"	2444:3:97441:97474	2559676	2	True				
ANR	2559706	AssignmentExpression	"prgb [ 1 ] = upd_expand ( upd , 2 , color )"		2559676	0		=			
ANR	2559707	ArrayIndexing	prgb [ 1 ]		2559676	0					
ANR	2559708	Identifier	prgb		2559676	0					
ANR	2559709	PrimaryExpression	1		2559676	1					
ANR	2559710	CallExpression	"upd_expand ( upd , 2 , color )"		2559676	1					
ANR	2559711	Callee	upd_expand		2559676	0					
ANR	2559712	Identifier	upd_expand		2559676	0					
ANR	2559713	ArgumentList	upd		2559676	1					
ANR	2559714	Argument	upd		2559676	0					
ANR	2559715	Identifier	upd		2559676	0					
ANR	2559716	Argument	2		2559676	1					
ANR	2559717	PrimaryExpression	2		2559676	0					
ANR	2559718	Argument	color		2559676	2					
ANR	2559719	Identifier	color		2559676	0					
ANR	2559720	ExpressionStatement	"prgb [ 2 ] = upd_expand ( upd , 3 , color )"	2445:3:97479:97512	2559676	3	True				
ANR	2559721	AssignmentExpression	"prgb [ 2 ] = upd_expand ( upd , 3 , color )"		2559676	0		=			
ANR	2559722	ArrayIndexing	prgb [ 2 ]		2559676	0					
ANR	2559723	Identifier	prgb		2559676	0					
ANR	2559724	PrimaryExpression	2		2559676	1					
ANR	2559725	CallExpression	"upd_expand ( upd , 3 , color )"		2559676	1					
ANR	2559726	Callee	upd_expand		2559676	0					
ANR	2559727	Identifier	upd_expand		2559676	0					
ANR	2559728	ArgumentList	upd		2559676	1					
ANR	2559729	Argument	upd		2559676	0					
ANR	2559730	Identifier	upd		2559676	0					
ANR	2559731	Argument	3		2559676	1					
ANR	2559732	PrimaryExpression	3		2559676	0					
ANR	2559733	Argument	color		2559676	2					
ANR	2559734	Identifier	color		2559676	0					
ANR	2559735	IfStatement	if ( ! ( prgb [ 0 ] || prgb [ 1 ] || prgb [ 2 ] ) )		2559676	4					
ANR	2559736	Condition	! ( prgb [ 0 ] || prgb [ 1 ] || prgb [ 2 ] )	2448:6:97555:97586	2559676	0	True				
ANR	2559737	UnaryOperationExpression	! ( prgb [ 0 ] || prgb [ 1 ] || prgb [ 2 ] )		2559676	0					
ANR	2559738	UnaryOperator	!		2559676	0					
ANR	2559739	OrExpression	prgb [ 0 ] || prgb [ 1 ] || prgb [ 2 ]		2559676	1		||			
ANR	2559740	ArrayIndexing	prgb [ 0 ]		2559676	0					
ANR	2559741	Identifier	prgb		2559676	0					
ANR	2559742	PrimaryExpression	0		2559676	1					
ANR	2559743	OrExpression	prgb [ 1 ] || prgb [ 2 ]		2559676	1		||			
ANR	2559744	ArrayIndexing	prgb [ 1 ]		2559676	0					
ANR	2559745	Identifier	prgb		2559676	0					
ANR	2559746	PrimaryExpression	1		2559676	1					
ANR	2559747	ArrayIndexing	prgb [ 2 ]		2559676	1					
ANR	2559748	Identifier	prgb		2559676	0					
ANR	2559749	PrimaryExpression	2		2559676	1					
ANR	2559750	ExpressionStatement	"prgb [ 0 ] = prgb [ 1 ] = prgb [ 2 ] = upd_expand ( upd , 0 , color )"	2449:6:97595:97648	2559676	1	True				
ANR	2559751	AssignmentExpression	"prgb [ 0 ] = prgb [ 1 ] = prgb [ 2 ] = upd_expand ( upd , 0 , color )"		2559676	0		=			
ANR	2559752	ArrayIndexing	prgb [ 0 ]		2559676	0					
ANR	2559753	Identifier	prgb		2559676	0					
ANR	2559754	PrimaryExpression	0		2559676	1					
ANR	2559755	AssignmentExpression	"prgb [ 1 ] = prgb [ 2 ] = upd_expand ( upd , 0 , color )"		2559676	1		=			
ANR	2559756	ArrayIndexing	prgb [ 1 ]		2559676	0					
ANR	2559757	Identifier	prgb		2559676	0					
ANR	2559758	PrimaryExpression	1		2559676	1					
ANR	2559759	AssignmentExpression	"prgb [ 2 ] = upd_expand ( upd , 0 , color )"		2559676	1		=			
ANR	2559760	ArrayIndexing	prgb [ 2 ]		2559676	0					
ANR	2559761	Identifier	prgb		2559676	0					
ANR	2559762	PrimaryExpression	2		2559676	1					
ANR	2559763	CallExpression	"upd_expand ( upd , 0 , color )"		2559676	1					
ANR	2559764	Callee	upd_expand		2559676	0					
ANR	2559765	Identifier	upd_expand		2559676	0					
ANR	2559766	ArgumentList	upd		2559676	1					
ANR	2559767	Argument	upd		2559676	0					
ANR	2559768	Identifier	upd		2559676	0					
ANR	2559769	Argument	0		2559676	1					
ANR	2559770	PrimaryExpression	0		2559676	0					
ANR	2559771	Argument	color		2559676	2					
ANR	2559772	Identifier	color		2559676	0					
ANR	2559773	ExpressionStatement	"errprintf ( pdev -> memory , ""4color_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"" , ( pdev -> color_info . depth + 3 ) >> 2 , color , 255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value )"	2452:3:97688:98531	2559676	5	True				
ANR	2559774	CallExpression	"errprintf ( pdev -> memory , ""4color_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"" , ( pdev -> color_info . depth + 3 ) >> 2 , color , 255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value )"		2559676	0					
ANR	2559775	Callee	errprintf		2559676	0					
ANR	2559776	Identifier	errprintf		2559676	0					
ANR	2559777	ArgumentList	pdev -> memory		2559676	1					
ANR	2559778	Argument	pdev -> memory		2559676	0					
ANR	2559779	PtrMemberAccess	pdev -> memory		2559676	0					
ANR	2559780	Identifier	pdev		2559676	0					
ANR	2559781	Identifier	memory		2559676	1					
ANR	2559782	Argument	"""4color_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"""		2559676	1					
ANR	2559783	PrimaryExpression	"""4color_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"""		2559676	0					
ANR	2559784	Argument	( pdev -> color_info . depth + 3 ) >> 2		2559676	2					
ANR	2559785	ShiftExpression	( pdev -> color_info . depth + 3 ) >> 2		2559676	0		>>			
ANR	2559786	AdditiveExpression	pdev -> color_info . depth + 3		2559676	0		+			
ANR	2559787	MemberAccess	pdev -> color_info . depth		2559676	0					
ANR	2559788	PtrMemberAccess	pdev -> color_info		2559676	0					
ANR	2559789	Identifier	pdev		2559676	0					
ANR	2559790	Identifier	color_info		2559676	1					
ANR	2559791	Identifier	depth		2559676	1					
ANR	2559792	PrimaryExpression	3		2559676	1					
ANR	2559793	PrimaryExpression	2		2559676	1					
ANR	2559794	Argument	color		2559676	3					
ANR	2559795	Identifier	color		2559676	0					
ANR	2559796	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2559676	4					
ANR	2559797	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2559676	0		*			
ANR	2559798	PrimaryExpression	255.0		2559676	0					
ANR	2559799	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2559676	1		/			
ANR	2559800	CastExpression	( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk )		2559676	0					
ANR	2559801	CastTarget	double		2559676	0					
ANR	2559802	BitAndExpression	( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk		2559676	1		&			
ANR	2559803	ShiftExpression	color >> upd -> cmap [ 1 ] . bitshf		2559676	0		>>			
ANR	2559804	Identifier	color		2559676	0					
ANR	2559805	MemberAccess	upd -> cmap [ 1 ] . bitshf		2559676	1					
ANR	2559806	ArrayIndexing	upd -> cmap [ 1 ]		2559676	0					
ANR	2559807	PtrMemberAccess	upd -> cmap		2559676	0					
ANR	2559808	Identifier	upd		2559676	0					
ANR	2559809	Identifier	cmap		2559676	1					
ANR	2559810	PrimaryExpression	1		2559676	1					
ANR	2559811	Identifier	bitshf		2559676	1					
ANR	2559812	MemberAccess	upd -> cmap [ 1 ] . bitmsk		2559676	1					
ANR	2559813	ArrayIndexing	upd -> cmap [ 1 ]		2559676	0					
ANR	2559814	PtrMemberAccess	upd -> cmap		2559676	0					
ANR	2559815	Identifier	upd		2559676	0					
ANR	2559816	Identifier	cmap		2559676	1					
ANR	2559817	PrimaryExpression	1		2559676	1					
ANR	2559818	Identifier	bitmsk		2559676	1					
ANR	2559819	CastExpression	( double ) upd -> cmap [ 1 ] . bitmsk		2559676	1					
ANR	2559820	CastTarget	double		2559676	0					
ANR	2559821	MemberAccess	upd -> cmap [ 1 ] . bitmsk		2559676	1					
ANR	2559822	ArrayIndexing	upd -> cmap [ 1 ]		2559676	0					
ANR	2559823	PtrMemberAccess	upd -> cmap		2559676	0					
ANR	2559824	Identifier	upd		2559676	0					
ANR	2559825	Identifier	cmap		2559676	1					
ANR	2559826	PrimaryExpression	1		2559676	1					
ANR	2559827	Identifier	bitmsk		2559676	1					
ANR	2559828	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2559676	5					
ANR	2559829	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2559676	0		*			
ANR	2559830	PrimaryExpression	255.0		2559676	0					
ANR	2559831	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2559676	1		/			
ANR	2559832	CastExpression	( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk )		2559676	0					
ANR	2559833	CastTarget	double		2559676	0					
ANR	2559834	BitAndExpression	( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk		2559676	1		&			
ANR	2559835	ShiftExpression	color >> upd -> cmap [ 2 ] . bitshf		2559676	0		>>			
ANR	2559836	Identifier	color		2559676	0					
ANR	2559837	MemberAccess	upd -> cmap [ 2 ] . bitshf		2559676	1					
ANR	2559838	ArrayIndexing	upd -> cmap [ 2 ]		2559676	0					
ANR	2559839	PtrMemberAccess	upd -> cmap		2559676	0					
ANR	2559840	Identifier	upd		2559676	0					
ANR	2559841	Identifier	cmap		2559676	1					
ANR	2559842	PrimaryExpression	2		2559676	1					
ANR	2559843	Identifier	bitshf		2559676	1					
ANR	2559844	MemberAccess	upd -> cmap [ 2 ] . bitmsk		2559676	1					
ANR	2559845	ArrayIndexing	upd -> cmap [ 2 ]		2559676	0					
ANR	2559846	PtrMemberAccess	upd -> cmap		2559676	0					
ANR	2559847	Identifier	upd		2559676	0					
ANR	2559848	Identifier	cmap		2559676	1					
ANR	2559849	PrimaryExpression	2		2559676	1					
ANR	2559850	Identifier	bitmsk		2559676	1					
ANR	2559851	CastExpression	( double ) upd -> cmap [ 2 ] . bitmsk		2559676	1					
ANR	2559852	CastTarget	double		2559676	0					
ANR	2559853	MemberAccess	upd -> cmap [ 2 ] . bitmsk		2559676	1					
ANR	2559854	ArrayIndexing	upd -> cmap [ 2 ]		2559676	0					
ANR	2559855	PtrMemberAccess	upd -> cmap		2559676	0					
ANR	2559856	Identifier	upd		2559676	0					
ANR	2559857	Identifier	cmap		2559676	1					
ANR	2559858	PrimaryExpression	2		2559676	1					
ANR	2559859	Identifier	bitmsk		2559676	1					
ANR	2559860	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		2559676	6					
ANR	2559861	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		2559676	0		*			
ANR	2559862	PrimaryExpression	255.0		2559676	0					
ANR	2559863	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		2559676	1		/			
ANR	2559864	CastExpression	( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk )		2559676	0					
ANR	2559865	CastTarget	double		2559676	0					
ANR	2559866	BitAndExpression	( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk		2559676	1		&			
ANR	2559867	ShiftExpression	color >> upd -> cmap [ 3 ] . bitshf		2559676	0		>>			
ANR	2559868	Identifier	color		2559676	0					
ANR	2559869	MemberAccess	upd -> cmap [ 3 ] . bitshf		2559676	1					
ANR	2559870	ArrayIndexing	upd -> cmap [ 3 ]		2559676	0					
ANR	2559871	PtrMemberAccess	upd -> cmap		2559676	0					
ANR	2559872	Identifier	upd		2559676	0					
ANR	2559873	Identifier	cmap		2559676	1					
ANR	2559874	PrimaryExpression	3		2559676	1					
ANR	2559875	Identifier	bitshf		2559676	1					
ANR	2559876	MemberAccess	upd -> cmap [ 3 ] . bitmsk		2559676	1					
ANR	2559877	ArrayIndexing	upd -> cmap [ 3 ]		2559676	0					
ANR	2559878	PtrMemberAccess	upd -> cmap		2559676	0					
ANR	2559879	Identifier	upd		2559676	0					
ANR	2559880	Identifier	cmap		2559676	1					
ANR	2559881	PrimaryExpression	3		2559676	1					
ANR	2559882	Identifier	bitmsk		2559676	1					
ANR	2559883	CastExpression	( double ) upd -> cmap [ 3 ] . bitmsk		2559676	1					
ANR	2559884	CastTarget	double		2559676	0					
ANR	2559885	MemberAccess	upd -> cmap [ 3 ] . bitmsk		2559676	1					
ANR	2559886	ArrayIndexing	upd -> cmap [ 3 ]		2559676	0					
ANR	2559887	PtrMemberAccess	upd -> cmap		2559676	0					
ANR	2559888	Identifier	upd		2559676	0					
ANR	2559889	Identifier	cmap		2559676	1					
ANR	2559890	PrimaryExpression	3		2559676	1					
ANR	2559891	Identifier	bitmsk		2559676	1					
ANR	2559892	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2559676	7					
ANR	2559893	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2559676	0		*			
ANR	2559894	PrimaryExpression	255.0		2559676	0					
ANR	2559895	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2559676	1		/			
ANR	2559896	CastExpression	( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk )		2559676	0					
ANR	2559897	CastTarget	double		2559676	0					
ANR	2559898	BitAndExpression	( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk		2559676	1		&			
ANR	2559899	ShiftExpression	color >> upd -> cmap [ 0 ] . bitshf		2559676	0		>>			
ANR	2559900	Identifier	color		2559676	0					
ANR	2559901	MemberAccess	upd -> cmap [ 0 ] . bitshf		2559676	1					
ANR	2559902	ArrayIndexing	upd -> cmap [ 0 ]		2559676	0					
ANR	2559903	PtrMemberAccess	upd -> cmap		2559676	0					
ANR	2559904	Identifier	upd		2559676	0					
ANR	2559905	Identifier	cmap		2559676	1					
ANR	2559906	PrimaryExpression	0		2559676	1					
ANR	2559907	Identifier	bitshf		2559676	1					
ANR	2559908	MemberAccess	upd -> cmap [ 0 ] . bitmsk		2559676	1					
ANR	2559909	ArrayIndexing	upd -> cmap [ 0 ]		2559676	0					
ANR	2559910	PtrMemberAccess	upd -> cmap		2559676	0					
ANR	2559911	Identifier	upd		2559676	0					
ANR	2559912	Identifier	cmap		2559676	1					
ANR	2559913	PrimaryExpression	0		2559676	1					
ANR	2559914	Identifier	bitmsk		2559676	1					
ANR	2559915	CastExpression	( double ) upd -> cmap [ 0 ] . bitmsk		2559676	1					
ANR	2559916	CastTarget	double		2559676	0					
ANR	2559917	MemberAccess	upd -> cmap [ 0 ] . bitmsk		2559676	1					
ANR	2559918	ArrayIndexing	upd -> cmap [ 0 ]		2559676	0					
ANR	2559919	PtrMemberAccess	upd -> cmap		2559676	0					
ANR	2559920	Identifier	upd		2559676	0					
ANR	2559921	Identifier	cmap		2559676	1					
ANR	2559922	PrimaryExpression	0		2559676	1					
ANR	2559923	Identifier	bitmsk		2559676	1					
ANR	2559924	Argument	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		2559676	8					
ANR	2559925	MultiplicativeExpression	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		2559676	0		*			
ANR	2559926	PrimaryExpression	255.0		2559676	0					
ANR	2559927	MultiplicativeExpression	( double ) prgb [ 0 ] / ( double ) gx_max_color_value		2559676	1		/			
ANR	2559928	CastExpression	( double ) prgb [ 0 ]		2559676	0					
ANR	2559929	CastTarget	double		2559676	0					
ANR	2559930	ArrayIndexing	prgb [ 0 ]		2559676	1					
ANR	2559931	Identifier	prgb		2559676	0					
ANR	2559932	PrimaryExpression	0		2559676	1					
ANR	2559933	CastExpression	( double ) gx_max_color_value		2559676	1					
ANR	2559934	CastTarget	double		2559676	0					
ANR	2559935	Identifier	gx_max_color_value		2559676	1					
ANR	2559936	Argument	255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value		2559676	9					
ANR	2559937	MultiplicativeExpression	255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value		2559676	0		*			
ANR	2559938	PrimaryExpression	255.0		2559676	0					
ANR	2559939	MultiplicativeExpression	( double ) prgb [ 1 ] / ( double ) gx_max_color_value		2559676	1		/			
ANR	2559940	CastExpression	( double ) prgb [ 1 ]		2559676	0					
ANR	2559941	CastTarget	double		2559676	0					
ANR	2559942	ArrayIndexing	prgb [ 1 ]		2559676	1					
ANR	2559943	Identifier	prgb		2559676	0					
ANR	2559944	PrimaryExpression	1		2559676	1					
ANR	2559945	CastExpression	( double ) gx_max_color_value		2559676	1					
ANR	2559946	CastTarget	double		2559676	0					
ANR	2559947	Identifier	gx_max_color_value		2559676	1					
ANR	2559948	Argument	255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value		2559676	10					
ANR	2559949	MultiplicativeExpression	255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value		2559676	0		*			
ANR	2559950	PrimaryExpression	255.0		2559676	0					
ANR	2559951	MultiplicativeExpression	( double ) prgb [ 2 ] / ( double ) gx_max_color_value		2559676	1		/			
ANR	2559952	CastExpression	( double ) prgb [ 2 ]		2559676	0					
ANR	2559953	CastTarget	double		2559676	0					
ANR	2559954	ArrayIndexing	prgb [ 2 ]		2559676	1					
ANR	2559955	Identifier	prgb		2559676	0					
ANR	2559956	PrimaryExpression	2		2559676	1					
ANR	2559957	CastExpression	( double ) gx_max_color_value		2559676	1					
ANR	2559958	CastTarget	double		2559676	0					
ANR	2559959	Identifier	gx_max_color_value		2559676	1					
ANR	2559960	ReturnStatement	return 0 ;	2468:3:98544:98552	2559676	6	True				
ANR	2559961	PrimaryExpression	0		2559676	0					
ANR	2559962	ReturnType	static int		2559676	1					
ANR	2559963	Identifier	upd_4color_rgb		2559676	2					
ANR	2559964	ParameterList	"gx_device * pdev , gx_color_index color , gx_color_value prgb [ 3 ]"		2559676	3					
ANR	2559965	Parameter	gx_device * pdev	2436:15:97241:97255	2559676	0	True				
ANR	2559966	ParameterType	gx_device *		2559676	0					
ANR	2559967	Identifier	pdev		2559676	1					
ANR	2559968	Parameter	gx_color_index color	2436:32:97258:97277	2559676	1	True				
ANR	2559969	ParameterType	gx_color_index		2559676	0					
ANR	2559970	Identifier	color		2559676	1					
ANR	2559971	Parameter	gx_color_value prgb [ 3 ]	2436:54:97280:97301	2559676	2	True				
ANR	2559972	ParameterType	gx_color_value [ 3 ]		2559676	0					
ANR	2559973	Identifier	prgb		2559676	1					
ANR	2559974	CFGEntryNode	ENTRY		2559676		True				
ANR	2559975	CFGExitNode	EXIT		2559676		True				
ANR	2559976	Symbol	upd -> cmap [ 2 ] . bitshf		2559676						
ANR	2559977	Symbol	upd -> cmap [ 3 ] . bitmsk		2559676						
ANR	2559978	Symbol	color		2559676						
ANR	2559979	Symbol	upd -> cmap [ 0 ] . bitmsk		2559676						
ANR	2559980	Symbol	upd		2559676						
ANR	2559981	Symbol	pdev -> color_info . depth		2559676						
ANR	2559982	Symbol	prgb		2559676						
ANR	2559983	Symbol	* upd -> cmap		2559676						
ANR	2559984	Symbol	pdev -> color_info		2559676						
ANR	2559985	Symbol	upd -> cmap [ 0 ] . bitshf		2559676						
ANR	2559986	Symbol	( ( upd_device * ) pdev ) -> upd		2559676						
ANR	2559987	Symbol	upd -> cmap		2559676						
ANR	2559988	Symbol	* prgb		2559676						
ANR	2559989	Symbol	pdev		2559676						
ANR	2559990	Symbol	* upd		2559676						
ANR	2559991	Symbol	pdev -> memory		2559676						
ANR	2559992	Symbol	upd -> cmap [ 1 ] . bitshf		2559676						
ANR	2559993	Symbol	upd -> cmap [ 2 ] . bitmsk		2559676						
ANR	2559994	Symbol	gx_max_color_value		2559676						
ANR	2559995	Symbol	upd -> cmap [ 3 ] . bitshf		2559676						
ANR	2559996	Symbol	* pdev		2559676						
ANR	2559997	Symbol	upd -> cmap [ 1 ] . bitmsk		2559676						
ANR	2559998	Symbol	* * upd		2559676						
ANR	2559999	Symbol	upd_expand		2559676						
ANR	2560000	Function	upd_cmyk_kcolor	2475:0:98780:100461							
ANR	2560001	FunctionDef	"upd_cmyk_kcolor (gx_device * pdev , const gx_color_value cv [ ])"		2560000	0					
ANR	2560002	CompoundStatement		2477:0:98862:100461	2560000	0					
ANR	2560003	IdentifierDeclStatement	const upd_p upd = ( ( upd_device * ) pdev ) -> upd ;	2478:3:98867:98914	2560000	0	True				
ANR	2560004	IdentifierDecl	upd = ( ( upd_device * ) pdev ) -> upd		2560000	0					
ANR	2560005	IdentifierDeclType	const upd_p		2560000	0					
ANR	2560006	Identifier	upd		2560000	1					
ANR	2560007	AssignmentExpression	upd = ( ( upd_device * ) pdev ) -> upd		2560000	2		=			
ANR	2560008	Identifier	upd		2560000	0					
ANR	2560009	PtrMemberAccess	( ( upd_device * ) pdev ) -> upd		2560000	1					
ANR	2560010	CastExpression	( upd_device * ) pdev		2560000	0					
ANR	2560011	CastTarget	upd_device *		2560000	0					
ANR	2560012	Identifier	pdev		2560000	1					
ANR	2560013	Identifier	upd		2560000	1					
ANR	2560014	IdentifierDeclStatement	gx_color_index rv ;	2479:3:98919:98937	2560000	1	True				
ANR	2560015	IdentifierDecl	rv		2560000	0					
ANR	2560016	IdentifierDeclType	gx_color_index		2560000	0					
ANR	2560017	Identifier	rv		2560000	1					
ANR	2560018	IdentifierDeclStatement	gx_color_value black ;	2480:3:98942:98963	2560000	2	True				
ANR	2560019	IdentifierDecl	black		2560000	0					
ANR	2560020	IdentifierDeclType	gx_color_value		2560000	0					
ANR	2560021	Identifier	black		2560000	1					
ANR	2560022	IdentifierDeclStatement	"gx_color_value c , m , y , k ;"	2482:3:98969:98994	2560000	3	True				
ANR	2560023	IdentifierDecl	c		2560000	0					
ANR	2560024	IdentifierDeclType	gx_color_value		2560000	0					
ANR	2560025	Identifier	c		2560000	1					
ANR	2560026	IdentifierDecl	m		2560000	1					
ANR	2560027	IdentifierDeclType	gx_color_value		2560000	0					
ANR	2560028	Identifier	m		2560000	1					
ANR	2560029	IdentifierDecl	y		2560000	2					
ANR	2560030	IdentifierDeclType	gx_color_value		2560000	0					
ANR	2560031	Identifier	y		2560000	1					
ANR	2560032	IdentifierDecl	k		2560000	3					
ANR	2560033	IdentifierDeclType	gx_color_value		2560000	0					
ANR	2560034	Identifier	k		2560000	1					
ANR	2560035	ExpressionStatement	c = cv [ 0 ]	2483:3:98999:99008	2560000	4	True				
ANR	2560036	AssignmentExpression	c = cv [ 0 ]		2560000	0		=			
ANR	2560037	Identifier	c		2560000	0					
ANR	2560038	ArrayIndexing	cv [ 0 ]		2560000	1					
ANR	2560039	Identifier	cv		2560000	0					
ANR	2560040	PrimaryExpression	0		2560000	1					
ANR	2560041	ExpressionStatement	m = cv [ 1 ]	2483:14:99010:99019	2560000	5	True				
ANR	2560042	AssignmentExpression	m = cv [ 1 ]		2560000	0		=			
ANR	2560043	Identifier	m		2560000	0					
ANR	2560044	ArrayIndexing	cv [ 1 ]		2560000	1					
ANR	2560045	Identifier	cv		2560000	0					
ANR	2560046	PrimaryExpression	1		2560000	1					
ANR	2560047	ExpressionStatement	y = cv [ 2 ]	2483:25:99021:99030	2560000	6	True				
ANR	2560048	AssignmentExpression	y = cv [ 2 ]		2560000	0		=			
ANR	2560049	Identifier	y		2560000	0					
ANR	2560050	ArrayIndexing	cv [ 2 ]		2560000	1					
ANR	2560051	Identifier	cv		2560000	0					
ANR	2560052	PrimaryExpression	2		2560000	1					
ANR	2560053	ExpressionStatement	k = cv [ 3 ]	2483:36:99032:99041	2560000	7	True				
ANR	2560054	AssignmentExpression	k = cv [ 3 ]		2560000	0		=			
ANR	2560055	Identifier	k		2560000	0					
ANR	2560056	ArrayIndexing	cv [ 3 ]		2560000	1					
ANR	2560057	Identifier	cv		2560000	0					
ANR	2560058	PrimaryExpression	3		2560000	1					
ANR	2560059	IfStatement	if ( ( c == m ) && ( m == y ) )		2560000	8					
ANR	2560060	Condition	( c == m ) && ( m == y )	2485:6:99050:99069	2560000	0	True				
ANR	2560061	AndExpression	( c == m ) && ( m == y )		2560000	0		&&			
ANR	2560062	EqualityExpression	c == m		2560000	0		==			
ANR	2560063	Identifier	c		2560000	0					
ANR	2560064	Identifier	m		2560000	1					
ANR	2560065	EqualityExpression	m == y		2560000	1		==			
ANR	2560066	Identifier	m		2560000	0					
ANR	2560067	Identifier	y		2560000	1					
ANR	2560068	CompoundStatement		9:28:209:209	2560000	1					
ANR	2560069	ExpressionStatement	black = c > k ? c : k	2487:6:99081:99102	2560000	0	True				
ANR	2560070	AssignmentExpression	black = c > k ? c : k		2560000	0		=			
ANR	2560071	Identifier	black		2560000	0					
ANR	2560072	ConditionalExpression	c > k ? c : k		2560000	1					
ANR	2560073	Condition	c > k		2560000	0					
ANR	2560074	RelationalExpression	c > k		2560000	0		>			
ANR	2560075	Identifier	c		2560000	0					
ANR	2560076	Identifier	k		2560000	1					
ANR	2560077	Identifier	c		2560000	1					
ANR	2560078	Identifier	k		2560000	2					
ANR	2560079	ExpressionStatement	"rv = upd_truncate ( upd , 0 , black )"	2488:6:99110:99140	2560000	1	True				
ANR	2560080	AssignmentExpression	"rv = upd_truncate ( upd , 0 , black )"		2560000	0		=			
ANR	2560081	Identifier	rv		2560000	0					
ANR	2560082	CallExpression	"upd_truncate ( upd , 0 , black )"		2560000	1					
ANR	2560083	Callee	upd_truncate		2560000	0					
ANR	2560084	Identifier	upd_truncate		2560000	0					
ANR	2560085	ArgumentList	upd		2560000	1					
ANR	2560086	Argument	upd		2560000	0					
ANR	2560087	Identifier	upd		2560000	0					
ANR	2560088	Argument	0		2560000	1					
ANR	2560089	PrimaryExpression	0		2560000	0					
ANR	2560090	Argument	black		2560000	2					
ANR	2560091	Identifier	black		2560000	0					
ANR	2560092	ElseStatement	else		2560000	0					
ANR	2560093	CompoundStatement		14:10:290:290	2560000	0					
ANR	2560094	IfStatement	if ( k && ! ( c | m | y ) )		2560000	0					
ANR	2560095	Condition	k && ! ( c | m | y )	2492:9:99165:99181	2560000	0	True				
ANR	2560096	AndExpression	k && ! ( c | m | y )		2560000	0		&&			
ANR	2560097	Identifier	k		2560000	0					
ANR	2560098	UnaryOperationExpression	! ( c | m | y )		2560000	1					
ANR	2560099	UnaryOperator	!		2560000	0					
ANR	2560100	InclusiveOrExpression	c | m | y		2560000	1		|			
ANR	2560101	Identifier	c		2560000	0					
ANR	2560102	InclusiveOrExpression	m | y		2560000	1		|			
ANR	2560103	Identifier	m		2560000	0					
ANR	2560104	Identifier	y		2560000	1					
ANR	2560105	CompoundStatement		16:28:321:321	2560000	1					
ANR	2560106	ExpressionStatement	black = k	2493:9:99195:99204	2560000	0	True				
ANR	2560107	AssignmentExpression	black = k		2560000	0		=			
ANR	2560108	Identifier	black		2560000	0					
ANR	2560109	Identifier	k		2560000	1					
ANR	2560110	ElseStatement	else		2560000	0					
ANR	2560111	CompoundStatement		18:13:356:356	2560000	0					
ANR	2560112	ExpressionStatement	black = c < m ? c : m	2495:9:99230:99259	2560000	0	True				
ANR	2560113	AssignmentExpression	black = c < m ? c : m		2560000	0		=			
ANR	2560114	Identifier	black		2560000	0					
ANR	2560115	ConditionalExpression	c < m ? c : m		2560000	1					
ANR	2560116	Condition	c < m		2560000	0					
ANR	2560117	RelationalExpression	c < m		2560000	0		<			
ANR	2560118	Identifier	c		2560000	0					
ANR	2560119	Identifier	m		2560000	1					
ANR	2560120	Identifier	c		2560000	1					
ANR	2560121	Identifier	m		2560000	2					
ANR	2560122	ExpressionStatement	black = black < y ? black : y	2496:9:99270:99299	2560000	1	True				
ANR	2560123	AssignmentExpression	black = black < y ? black : y		2560000	0		=			
ANR	2560124	Identifier	black		2560000	0					
ANR	2560125	ConditionalExpression	black < y ? black : y		2560000	1					
ANR	2560126	Condition	black < y		2560000	0					
ANR	2560127	RelationalExpression	black < y		2560000	0		<			
ANR	2560128	Identifier	black		2560000	0					
ANR	2560129	Identifier	y		2560000	1					
ANR	2560130	Identifier	black		2560000	1					
ANR	2560131	Identifier	y		2560000	2					
ANR	2560132	ExpressionStatement	"rv = upd_truncate ( upd , 0 , black ) | upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"	2499:6:99316:99433	2560000	1	True				
ANR	2560133	AssignmentExpression	"rv = upd_truncate ( upd , 0 , black ) | upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		2560000	0		=			
ANR	2560134	Identifier	rv		2560000	0					
ANR	2560135	InclusiveOrExpression	"upd_truncate ( upd , 0 , black ) | upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		2560000	1		|			
ANR	2560136	CallExpression	"upd_truncate ( upd , 0 , black )"		2560000	0					
ANR	2560137	Callee	upd_truncate		2560000	0					
ANR	2560138	Identifier	upd_truncate		2560000	0					
ANR	2560139	ArgumentList	upd		2560000	1					
ANR	2560140	Argument	upd		2560000	0					
ANR	2560141	Identifier	upd		2560000	0					
ANR	2560142	Argument	0		2560000	1					
ANR	2560143	PrimaryExpression	0		2560000	0					
ANR	2560144	Argument	black		2560000	2					
ANR	2560145	Identifier	black		2560000	0					
ANR	2560146	InclusiveOrExpression	"upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		2560000	1		|			
ANR	2560147	CallExpression	"upd_truncate ( upd , 1 , c )"		2560000	0					
ANR	2560148	Callee	upd_truncate		2560000	0					
ANR	2560149	Identifier	upd_truncate		2560000	0					
ANR	2560150	ArgumentList	upd		2560000	1					
ANR	2560151	Argument	upd		2560000	0					
ANR	2560152	Identifier	upd		2560000	0					
ANR	2560153	Argument	1		2560000	1					
ANR	2560154	PrimaryExpression	1		2560000	0					
ANR	2560155	Argument	c		2560000	2					
ANR	2560156	Identifier	c		2560000	0					
ANR	2560157	InclusiveOrExpression	"upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		2560000	1		|			
ANR	2560158	CallExpression	"upd_truncate ( upd , 2 , m )"		2560000	0					
ANR	2560159	Callee	upd_truncate		2560000	0					
ANR	2560160	Identifier	upd_truncate		2560000	0					
ANR	2560161	ArgumentList	upd		2560000	1					
ANR	2560162	Argument	upd		2560000	0					
ANR	2560163	Identifier	upd		2560000	0					
ANR	2560164	Argument	2		2560000	1					
ANR	2560165	PrimaryExpression	2		2560000	0					
ANR	2560166	Argument	m		2560000	2					
ANR	2560167	Identifier	m		2560000	0					
ANR	2560168	CallExpression	"upd_truncate ( upd , 3 , y )"		2560000	1					
ANR	2560169	Callee	upd_truncate		2560000	0					
ANR	2560170	Identifier	upd_truncate		2560000	0					
ANR	2560171	ArgumentList	upd		2560000	1					
ANR	2560172	Argument	upd		2560000	0					
ANR	2560173	Identifier	upd		2560000	0					
ANR	2560174	Argument	3		2560000	1					
ANR	2560175	PrimaryExpression	3		2560000	0					
ANR	2560176	Argument	y		2560000	2					
ANR	2560177	Identifier	y		2560000	0					
ANR	2560178	IfStatement	if ( rv == gx_no_color_index )		2560000	2					
ANR	2560179	Condition	rv == gx_no_color_index	2504:9:99521:99543	2560000	0	True				
ANR	2560180	EqualityExpression	rv == gx_no_color_index		2560000	0		==			
ANR	2560181	Identifier	rv		2560000	0					
ANR	2560182	Identifier	gx_no_color_index		2560000	1					
ANR	2560183	ExpressionStatement	rv ^= 1	2504:34:99546:99553	2560000	1	True				
ANR	2560184	AssignmentExpression	rv ^= 1		2560000	0		^=			
ANR	2560185	Identifier	rv		2560000	0					
ANR	2560186	PrimaryExpression	1		2560000	1					
ANR	2560187	ExpressionStatement	"errprintf ( pdev -> memory , ""cmyk_kcolor: (%5.1f,%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) c / ( double ) gx_max_color_value , 255.0 * ( double ) m / ( double ) gx_max_color_value , 255.0 * ( double ) y / ( double ) gx_max_color_value , 255.0 * ( double ) k / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"	2508:2:99597:100437	2560000	9	True				
ANR	2560188	CallExpression	"errprintf ( pdev -> memory , ""cmyk_kcolor: (%5.1f,%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) c / ( double ) gx_max_color_value , 255.0 * ( double ) m / ( double ) gx_max_color_value , 255.0 * ( double ) y / ( double ) gx_max_color_value , 255.0 * ( double ) k / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"		2560000	0					
ANR	2560189	Callee	errprintf		2560000	0					
ANR	2560190	Identifier	errprintf		2560000	0					
ANR	2560191	ArgumentList	pdev -> memory		2560000	1					
ANR	2560192	Argument	pdev -> memory		2560000	0					
ANR	2560193	PtrMemberAccess	pdev -> memory		2560000	0					
ANR	2560194	Identifier	pdev		2560000	0					
ANR	2560195	Identifier	memory		2560000	1					
ANR	2560196	Argument	"""cmyk_kcolor: (%5.1f,%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"""		2560000	1					
ANR	2560197	PrimaryExpression	"""cmyk_kcolor: (%5.1f,%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"""		2560000	0					
ANR	2560198	Argument	255.0 * ( double ) c / ( double ) gx_max_color_value		2560000	2					
ANR	2560199	MultiplicativeExpression	255.0 * ( double ) c / ( double ) gx_max_color_value		2560000	0		*			
ANR	2560200	PrimaryExpression	255.0		2560000	0					
ANR	2560201	MultiplicativeExpression	( double ) c / ( double ) gx_max_color_value		2560000	1		/			
ANR	2560202	CastExpression	( double ) c		2560000	0					
ANR	2560203	CastTarget	double		2560000	0					
ANR	2560204	Identifier	c		2560000	1					
ANR	2560205	CastExpression	( double ) gx_max_color_value		2560000	1					
ANR	2560206	CastTarget	double		2560000	0					
ANR	2560207	Identifier	gx_max_color_value		2560000	1					
ANR	2560208	Argument	255.0 * ( double ) m / ( double ) gx_max_color_value		2560000	3					
ANR	2560209	MultiplicativeExpression	255.0 * ( double ) m / ( double ) gx_max_color_value		2560000	0		*			
ANR	2560210	PrimaryExpression	255.0		2560000	0					
ANR	2560211	MultiplicativeExpression	( double ) m / ( double ) gx_max_color_value		2560000	1		/			
ANR	2560212	CastExpression	( double ) m		2560000	0					
ANR	2560213	CastTarget	double		2560000	0					
ANR	2560214	Identifier	m		2560000	1					
ANR	2560215	CastExpression	( double ) gx_max_color_value		2560000	1					
ANR	2560216	CastTarget	double		2560000	0					
ANR	2560217	Identifier	gx_max_color_value		2560000	1					
ANR	2560218	Argument	255.0 * ( double ) y / ( double ) gx_max_color_value		2560000	4					
ANR	2560219	MultiplicativeExpression	255.0 * ( double ) y / ( double ) gx_max_color_value		2560000	0		*			
ANR	2560220	PrimaryExpression	255.0		2560000	0					
ANR	2560221	MultiplicativeExpression	( double ) y / ( double ) gx_max_color_value		2560000	1		/			
ANR	2560222	CastExpression	( double ) y		2560000	0					
ANR	2560223	CastTarget	double		2560000	0					
ANR	2560224	Identifier	y		2560000	1					
ANR	2560225	CastExpression	( double ) gx_max_color_value		2560000	1					
ANR	2560226	CastTarget	double		2560000	0					
ANR	2560227	Identifier	gx_max_color_value		2560000	1					
ANR	2560228	Argument	255.0 * ( double ) k / ( double ) gx_max_color_value		2560000	5					
ANR	2560229	MultiplicativeExpression	255.0 * ( double ) k / ( double ) gx_max_color_value		2560000	0		*			
ANR	2560230	PrimaryExpression	255.0		2560000	0					
ANR	2560231	MultiplicativeExpression	( double ) k / ( double ) gx_max_color_value		2560000	1		/			
ANR	2560232	CastExpression	( double ) k		2560000	0					
ANR	2560233	CastTarget	double		2560000	0					
ANR	2560234	Identifier	k		2560000	1					
ANR	2560235	CastExpression	( double ) gx_max_color_value		2560000	1					
ANR	2560236	CastTarget	double		2560000	0					
ANR	2560237	Identifier	gx_max_color_value		2560000	1					
ANR	2560238	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2560000	6					
ANR	2560239	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2560000	0		*			
ANR	2560240	PrimaryExpression	255.0		2560000	0					
ANR	2560241	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2560000	1		/			
ANR	2560242	CastExpression	( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk )		2560000	0					
ANR	2560243	CastTarget	double		2560000	0					
ANR	2560244	BitAndExpression	( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk		2560000	1		&			
ANR	2560245	ShiftExpression	rv >> upd -> cmap [ 1 ] . bitshf		2560000	0		>>			
ANR	2560246	Identifier	rv		2560000	0					
ANR	2560247	MemberAccess	upd -> cmap [ 1 ] . bitshf		2560000	1					
ANR	2560248	ArrayIndexing	upd -> cmap [ 1 ]		2560000	0					
ANR	2560249	PtrMemberAccess	upd -> cmap		2560000	0					
ANR	2560250	Identifier	upd		2560000	0					
ANR	2560251	Identifier	cmap		2560000	1					
ANR	2560252	PrimaryExpression	1		2560000	1					
ANR	2560253	Identifier	bitshf		2560000	1					
ANR	2560254	MemberAccess	upd -> cmap [ 1 ] . bitmsk		2560000	1					
ANR	2560255	ArrayIndexing	upd -> cmap [ 1 ]		2560000	0					
ANR	2560256	PtrMemberAccess	upd -> cmap		2560000	0					
ANR	2560257	Identifier	upd		2560000	0					
ANR	2560258	Identifier	cmap		2560000	1					
ANR	2560259	PrimaryExpression	1		2560000	1					
ANR	2560260	Identifier	bitmsk		2560000	1					
ANR	2560261	CastExpression	( double ) upd -> cmap [ 1 ] . bitmsk		2560000	1					
ANR	2560262	CastTarget	double		2560000	0					
ANR	2560263	MemberAccess	upd -> cmap [ 1 ] . bitmsk		2560000	1					
ANR	2560264	ArrayIndexing	upd -> cmap [ 1 ]		2560000	0					
ANR	2560265	PtrMemberAccess	upd -> cmap		2560000	0					
ANR	2560266	Identifier	upd		2560000	0					
ANR	2560267	Identifier	cmap		2560000	1					
ANR	2560268	PrimaryExpression	1		2560000	1					
ANR	2560269	Identifier	bitmsk		2560000	1					
ANR	2560270	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2560000	7					
ANR	2560271	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2560000	0		*			
ANR	2560272	PrimaryExpression	255.0		2560000	0					
ANR	2560273	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2560000	1		/			
ANR	2560274	CastExpression	( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk )		2560000	0					
ANR	2560275	CastTarget	double		2560000	0					
ANR	2560276	BitAndExpression	( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk		2560000	1		&			
ANR	2560277	ShiftExpression	rv >> upd -> cmap [ 2 ] . bitshf		2560000	0		>>			
ANR	2560278	Identifier	rv		2560000	0					
ANR	2560279	MemberAccess	upd -> cmap [ 2 ] . bitshf		2560000	1					
ANR	2560280	ArrayIndexing	upd -> cmap [ 2 ]		2560000	0					
ANR	2560281	PtrMemberAccess	upd -> cmap		2560000	0					
ANR	2560282	Identifier	upd		2560000	0					
ANR	2560283	Identifier	cmap		2560000	1					
ANR	2560284	PrimaryExpression	2		2560000	1					
ANR	2560285	Identifier	bitshf		2560000	1					
ANR	2560286	MemberAccess	upd -> cmap [ 2 ] . bitmsk		2560000	1					
ANR	2560287	ArrayIndexing	upd -> cmap [ 2 ]		2560000	0					
ANR	2560288	PtrMemberAccess	upd -> cmap		2560000	0					
ANR	2560289	Identifier	upd		2560000	0					
ANR	2560290	Identifier	cmap		2560000	1					
ANR	2560291	PrimaryExpression	2		2560000	1					
ANR	2560292	Identifier	bitmsk		2560000	1					
ANR	2560293	CastExpression	( double ) upd -> cmap [ 2 ] . bitmsk		2560000	1					
ANR	2560294	CastTarget	double		2560000	0					
ANR	2560295	MemberAccess	upd -> cmap [ 2 ] . bitmsk		2560000	1					
ANR	2560296	ArrayIndexing	upd -> cmap [ 2 ]		2560000	0					
ANR	2560297	PtrMemberAccess	upd -> cmap		2560000	0					
ANR	2560298	Identifier	upd		2560000	0					
ANR	2560299	Identifier	cmap		2560000	1					
ANR	2560300	PrimaryExpression	2		2560000	1					
ANR	2560301	Identifier	bitmsk		2560000	1					
ANR	2560302	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		2560000	8					
ANR	2560303	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		2560000	0		*			
ANR	2560304	PrimaryExpression	255.0		2560000	0					
ANR	2560305	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		2560000	1		/			
ANR	2560306	CastExpression	( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk )		2560000	0					
ANR	2560307	CastTarget	double		2560000	0					
ANR	2560308	BitAndExpression	( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk		2560000	1		&			
ANR	2560309	ShiftExpression	rv >> upd -> cmap [ 3 ] . bitshf		2560000	0		>>			
ANR	2560310	Identifier	rv		2560000	0					
ANR	2560311	MemberAccess	upd -> cmap [ 3 ] . bitshf		2560000	1					
ANR	2560312	ArrayIndexing	upd -> cmap [ 3 ]		2560000	0					
ANR	2560313	PtrMemberAccess	upd -> cmap		2560000	0					
ANR	2560314	Identifier	upd		2560000	0					
ANR	2560315	Identifier	cmap		2560000	1					
ANR	2560316	PrimaryExpression	3		2560000	1					
ANR	2560317	Identifier	bitshf		2560000	1					
ANR	2560318	MemberAccess	upd -> cmap [ 3 ] . bitmsk		2560000	1					
ANR	2560319	ArrayIndexing	upd -> cmap [ 3 ]		2560000	0					
ANR	2560320	PtrMemberAccess	upd -> cmap		2560000	0					
ANR	2560321	Identifier	upd		2560000	0					
ANR	2560322	Identifier	cmap		2560000	1					
ANR	2560323	PrimaryExpression	3		2560000	1					
ANR	2560324	Identifier	bitmsk		2560000	1					
ANR	2560325	CastExpression	( double ) upd -> cmap [ 3 ] . bitmsk		2560000	1					
ANR	2560326	CastTarget	double		2560000	0					
ANR	2560327	MemberAccess	upd -> cmap [ 3 ] . bitmsk		2560000	1					
ANR	2560328	ArrayIndexing	upd -> cmap [ 3 ]		2560000	0					
ANR	2560329	PtrMemberAccess	upd -> cmap		2560000	0					
ANR	2560330	Identifier	upd		2560000	0					
ANR	2560331	Identifier	cmap		2560000	1					
ANR	2560332	PrimaryExpression	3		2560000	1					
ANR	2560333	Identifier	bitmsk		2560000	1					
ANR	2560334	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2560000	9					
ANR	2560335	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2560000	0		*			
ANR	2560336	PrimaryExpression	255.0		2560000	0					
ANR	2560337	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2560000	1		/			
ANR	2560338	CastExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk )		2560000	0					
ANR	2560339	CastTarget	double		2560000	0					
ANR	2560340	BitAndExpression	( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk		2560000	1		&			
ANR	2560341	ShiftExpression	rv >> upd -> cmap [ 0 ] . bitshf		2560000	0		>>			
ANR	2560342	Identifier	rv		2560000	0					
ANR	2560343	MemberAccess	upd -> cmap [ 0 ] . bitshf		2560000	1					
ANR	2560344	ArrayIndexing	upd -> cmap [ 0 ]		2560000	0					
ANR	2560345	PtrMemberAccess	upd -> cmap		2560000	0					
ANR	2560346	Identifier	upd		2560000	0					
ANR	2560347	Identifier	cmap		2560000	1					
ANR	2560348	PrimaryExpression	0		2560000	1					
ANR	2560349	Identifier	bitshf		2560000	1					
ANR	2560350	MemberAccess	upd -> cmap [ 0 ] . bitmsk		2560000	1					
ANR	2560351	ArrayIndexing	upd -> cmap [ 0 ]		2560000	0					
ANR	2560352	PtrMemberAccess	upd -> cmap		2560000	0					
ANR	2560353	Identifier	upd		2560000	0					
ANR	2560354	Identifier	cmap		2560000	1					
ANR	2560355	PrimaryExpression	0		2560000	1					
ANR	2560356	Identifier	bitmsk		2560000	1					
ANR	2560357	CastExpression	( double ) upd -> cmap [ 0 ] . bitmsk		2560000	1					
ANR	2560358	CastTarget	double		2560000	0					
ANR	2560359	MemberAccess	upd -> cmap [ 0 ] . bitmsk		2560000	1					
ANR	2560360	ArrayIndexing	upd -> cmap [ 0 ]		2560000	0					
ANR	2560361	PtrMemberAccess	upd -> cmap		2560000	0					
ANR	2560362	Identifier	upd		2560000	0					
ANR	2560363	Identifier	cmap		2560000	1					
ANR	2560364	PrimaryExpression	0		2560000	1					
ANR	2560365	Identifier	bitmsk		2560000	1					
ANR	2560366	Argument	( pdev -> color_info . depth + 3 ) >> 2		2560000	10					
ANR	2560367	ShiftExpression	( pdev -> color_info . depth + 3 ) >> 2		2560000	0		>>			
ANR	2560368	AdditiveExpression	pdev -> color_info . depth + 3		2560000	0		+			
ANR	2560369	MemberAccess	pdev -> color_info . depth		2560000	0					
ANR	2560370	PtrMemberAccess	pdev -> color_info		2560000	0					
ANR	2560371	Identifier	pdev		2560000	0					
ANR	2560372	Identifier	color_info		2560000	1					
ANR	2560373	Identifier	depth		2560000	1					
ANR	2560374	PrimaryExpression	3		2560000	1					
ANR	2560375	PrimaryExpression	2		2560000	1					
ANR	2560376	Argument	rv		2560000	11					
ANR	2560377	Identifier	rv		2560000	0					
ANR	2560378	ReturnStatement	return rv ;	2525:3:100450:100459	2560000	10	True				
ANR	2560379	Identifier	rv		2560000	0					
ANR	2560380	ReturnType	static gx_color_index		2560000	1					
ANR	2560381	Identifier	upd_cmyk_kcolor		2560000	2					
ANR	2560382	ParameterList	"gx_device * pdev , const gx_color_value cv [ ]"		2560000	3					
ANR	2560383	Parameter	gx_device * pdev	2476:16:98818:98832	2560000	0	True				
ANR	2560384	ParameterType	gx_device *		2560000	0					
ANR	2560385	Identifier	pdev		2560000	1					
ANR	2560386	Parameter	const gx_color_value cv [ ]	2476:33:98835:98859	2560000	1	True				
ANR	2560387	ParameterType	const gx_color_value [ ]		2560000	0					
ANR	2560388	Identifier	cv		2560000	1					
ANR	2560389	CFGEntryNode	ENTRY		2560000		True				
ANR	2560390	CFGExitNode	EXIT		2560000		True				
ANR	2560391	Symbol	rv		2560000						
ANR	2560392	Symbol	pdev -> color_info . depth		2560000						
ANR	2560393	Symbol	* upd -> cmap		2560000						
ANR	2560394	Symbol	upd -> cmap [ 0 ] . bitshf		2560000						
ANR	2560395	Symbol	pdev -> color_info		2560000						
ANR	2560396	Symbol	( ( upd_device * ) pdev ) -> upd		2560000						
ANR	2560397	Symbol	upd -> cmap		2560000						
ANR	2560398	Symbol	pdev		2560000						
ANR	2560399	Symbol	gx_no_color_index		2560000						
ANR	2560400	Symbol	* upd		2560000						
ANR	2560401	Symbol	pdev -> memory		2560000						
ANR	2560402	Symbol	upd -> cmap [ 2 ] . bitmsk		2560000						
ANR	2560403	Symbol	upd -> cmap [ 3 ] . bitshf		2560000						
ANR	2560404	Symbol	upd -> cmap [ 1 ] . bitmsk		2560000						
ANR	2560405	Symbol	upd -> cmap [ 2 ] . bitshf		2560000						
ANR	2560406	Symbol	upd -> cmap [ 3 ] . bitmsk		2560000						
ANR	2560407	Symbol	c		2560000						
ANR	2560408	Symbol	upd -> cmap [ 0 ] . bitmsk		2560000						
ANR	2560409	Symbol	upd		2560000						
ANR	2560410	Symbol	black		2560000						
ANR	2560411	Symbol	k		2560000						
ANR	2560412	Symbol	m		2560000						
ANR	2560413	Symbol	cv		2560000						
ANR	2560414	Symbol	upd -> cmap [ 1 ] . bitshf		2560000						
ANR	2560415	Symbol	gx_max_color_value		2560000						
ANR	2560416	Symbol	* pdev		2560000						
ANR	2560417	Symbol	y		2560000						
ANR	2560418	Symbol	* cv		2560000						
ANR	2560419	Symbol	upd_truncate		2560000						
ANR	2560420	Symbol	* * upd		2560000						
ANR	2560421	Function	upd_kcolor_rgb	2532:0:100687:102461							
ANR	2560422	FunctionDef	"upd_kcolor_rgb (gx_device * pdev , gx_color_index color , gx_color_value prgb [ 3 ])"		2560421	0					
ANR	2560423	CompoundStatement		2534:0:100776:102461	2560421	0					
ANR	2560424	IdentifierDeclStatement	const upd_p upd = ( ( upd_device * ) pdev ) -> upd ;	2535:3:100781:100828	2560421	0	True				
ANR	2560425	IdentifierDecl	upd = ( ( upd_device * ) pdev ) -> upd		2560421	0					
ANR	2560426	IdentifierDeclType	const upd_p		2560421	0					
ANR	2560427	Identifier	upd		2560421	1					
ANR	2560428	AssignmentExpression	upd = ( ( upd_device * ) pdev ) -> upd		2560421	2		=			
ANR	2560429	Identifier	upd		2560421	0					
ANR	2560430	PtrMemberAccess	( ( upd_device * ) pdev ) -> upd		2560421	1					
ANR	2560431	CastExpression	( upd_device * ) pdev		2560421	0					
ANR	2560432	CastTarget	upd_device *		2560421	0					
ANR	2560433	Identifier	pdev		2560421	1					
ANR	2560434	Identifier	upd		2560421	1					
ANR	2560435	IdentifierDeclStatement	"gx_color_value c , m , y , k ;"	2536:3:100833:100855	2560421	1	True				
ANR	2560436	IdentifierDecl	c		2560421	0					
ANR	2560437	IdentifierDeclType	gx_color_value		2560421	0					
ANR	2560438	Identifier	c		2560421	1					
ANR	2560439	IdentifierDecl	m		2560421	1					
ANR	2560440	IdentifierDeclType	gx_color_value		2560421	0					
ANR	2560441	Identifier	m		2560421	1					
ANR	2560442	IdentifierDecl	y		2560421	2					
ANR	2560443	IdentifierDeclType	gx_color_value		2560421	0					
ANR	2560444	Identifier	y		2560421	1					
ANR	2560445	IdentifierDecl	k		2560421	3					
ANR	2560446	IdentifierDeclType	gx_color_value		2560421	0					
ANR	2560447	Identifier	k		2560421	1					
ANR	2560448	ExpressionStatement	"k = upd_expand ( upd , 0 , color )"	2541:3:100902:100929	2560421	2	True				
ANR	2560449	AssignmentExpression	"k = upd_expand ( upd , 0 , color )"		2560421	0		=			
ANR	2560450	Identifier	k		2560421	0					
ANR	2560451	CallExpression	"upd_expand ( upd , 0 , color )"		2560421	1					
ANR	2560452	Callee	upd_expand		2560421	0					
ANR	2560453	Identifier	upd_expand		2560421	0					
ANR	2560454	ArgumentList	upd		2560421	1					
ANR	2560455	Argument	upd		2560421	0					
ANR	2560456	Identifier	upd		2560421	0					
ANR	2560457	Argument	0		2560421	1					
ANR	2560458	PrimaryExpression	0		2560421	0					
ANR	2560459	Argument	color		2560421	2					
ANR	2560460	Identifier	color		2560421	0					
ANR	2560461	ExpressionStatement	"c = upd_expand ( upd , 1 , color )"	2542:3:100934:100961	2560421	3	True				
ANR	2560462	AssignmentExpression	"c = upd_expand ( upd , 1 , color )"		2560421	0		=			
ANR	2560463	Identifier	c		2560421	0					
ANR	2560464	CallExpression	"upd_expand ( upd , 1 , color )"		2560421	1					
ANR	2560465	Callee	upd_expand		2560421	0					
ANR	2560466	Identifier	upd_expand		2560421	0					
ANR	2560467	ArgumentList	upd		2560421	1					
ANR	2560468	Argument	upd		2560421	0					
ANR	2560469	Identifier	upd		2560421	0					
ANR	2560470	Argument	1		2560421	1					
ANR	2560471	PrimaryExpression	1		2560421	0					
ANR	2560472	Argument	color		2560421	2					
ANR	2560473	Identifier	color		2560421	0					
ANR	2560474	ExpressionStatement	"m = upd_expand ( upd , 2 , color )"	2543:3:100966:100993	2560421	4	True				
ANR	2560475	AssignmentExpression	"m = upd_expand ( upd , 2 , color )"		2560421	0		=			
ANR	2560476	Identifier	m		2560421	0					
ANR	2560477	CallExpression	"upd_expand ( upd , 2 , color )"		2560421	1					
ANR	2560478	Callee	upd_expand		2560421	0					
ANR	2560479	Identifier	upd_expand		2560421	0					
ANR	2560480	ArgumentList	upd		2560421	1					
ANR	2560481	Argument	upd		2560421	0					
ANR	2560482	Identifier	upd		2560421	0					
ANR	2560483	Argument	2		2560421	1					
ANR	2560484	PrimaryExpression	2		2560421	0					
ANR	2560485	Argument	color		2560421	2					
ANR	2560486	Identifier	color		2560421	0					
ANR	2560487	ExpressionStatement	"y = upd_expand ( upd , 3 , color )"	2544:3:100998:101025	2560421	5	True				
ANR	2560488	AssignmentExpression	"y = upd_expand ( upd , 3 , color )"		2560421	0		=			
ANR	2560489	Identifier	y		2560421	0					
ANR	2560490	CallExpression	"upd_expand ( upd , 3 , color )"		2560421	1					
ANR	2560491	Callee	upd_expand		2560421	0					
ANR	2560492	Identifier	upd_expand		2560421	0					
ANR	2560493	ArgumentList	upd		2560421	1					
ANR	2560494	Argument	upd		2560421	0					
ANR	2560495	Identifier	upd		2560421	0					
ANR	2560496	Argument	3		2560421	1					
ANR	2560497	PrimaryExpression	3		2560421	0					
ANR	2560498	Argument	color		2560421	2					
ANR	2560499	Identifier	color		2560421	0					
ANR	2560500	IfStatement	if ( ! ( c | m | y ) )		2560421	6					
ANR	2560501	Condition	! ( c | m | y )	2549:6:101072:101084	2560421	0	True				
ANR	2560502	UnaryOperationExpression	! ( c | m | y )		2560421	0					
ANR	2560503	UnaryOperator	!		2560421	0					
ANR	2560504	InclusiveOrExpression	c | m | y		2560421	1		|			
ANR	2560505	Identifier	c		2560421	0					
ANR	2560506	InclusiveOrExpression	m | y		2560421	1		|			
ANR	2560507	Identifier	m		2560421	0					
ANR	2560508	Identifier	y		2560421	1					
ANR	2560509	CompoundStatement		16:21:310:310	2560421	1					
ANR	2560510	ExpressionStatement	prgb [ 2 ] = prgb [ 1 ] = prgb [ 0 ] = gx_max_color_value - k	2551:6:101096:101148	2560421	0	True				
ANR	2560511	AssignmentExpression	prgb [ 2 ] = prgb [ 1 ] = prgb [ 0 ] = gx_max_color_value - k		2560421	0		=			
ANR	2560512	ArrayIndexing	prgb [ 2 ]		2560421	0					
ANR	2560513	Identifier	prgb		2560421	0					
ANR	2560514	PrimaryExpression	2		2560421	1					
ANR	2560515	AssignmentExpression	prgb [ 1 ] = prgb [ 0 ] = gx_max_color_value - k		2560421	1		=			
ANR	2560516	ArrayIndexing	prgb [ 1 ]		2560421	0					
ANR	2560517	Identifier	prgb		2560421	0					
ANR	2560518	PrimaryExpression	1		2560421	1					
ANR	2560519	AssignmentExpression	prgb [ 0 ] = gx_max_color_value - k		2560421	1		=			
ANR	2560520	ArrayIndexing	prgb [ 0 ]		2560421	0					
ANR	2560521	Identifier	prgb		2560421	0					
ANR	2560522	PrimaryExpression	0		2560421	1					
ANR	2560523	AdditiveExpression	gx_max_color_value - k		2560421	1		-			
ANR	2560524	Identifier	gx_max_color_value		2560421	0					
ANR	2560525	Identifier	k		2560421	1					
ANR	2560526	ElseStatement	else		2560421	0					
ANR	2560527	CompoundStatement		20:10:384:384	2560421	0					
ANR	2560528	ExpressionStatement	prgb [ 0 ] = gx_max_color_value - c	2554:6:101169:101201	2560421	0	True				
ANR	2560529	AssignmentExpression	prgb [ 0 ] = gx_max_color_value - c		2560421	0		=			
ANR	2560530	ArrayIndexing	prgb [ 0 ]		2560421	0					
ANR	2560531	Identifier	prgb		2560421	0					
ANR	2560532	PrimaryExpression	0		2560421	1					
ANR	2560533	AdditiveExpression	gx_max_color_value - c		2560421	1		-			
ANR	2560534	Identifier	gx_max_color_value		2560421	0					
ANR	2560535	Identifier	c		2560421	1					
ANR	2560536	ExpressionStatement	prgb [ 1 ] = gx_max_color_value - m	2555:6:101209:101241	2560421	1	True				
ANR	2560537	AssignmentExpression	prgb [ 1 ] = gx_max_color_value - m		2560421	0		=			
ANR	2560538	ArrayIndexing	prgb [ 1 ]		2560421	0					
ANR	2560539	Identifier	prgb		2560421	0					
ANR	2560540	PrimaryExpression	1		2560421	1					
ANR	2560541	AdditiveExpression	gx_max_color_value - m		2560421	1		-			
ANR	2560542	Identifier	gx_max_color_value		2560421	0					
ANR	2560543	Identifier	m		2560421	1					
ANR	2560544	ExpressionStatement	prgb [ 2 ] = gx_max_color_value - y	2556:6:101249:101281	2560421	2	True				
ANR	2560545	AssignmentExpression	prgb [ 2 ] = gx_max_color_value - y		2560421	0		=			
ANR	2560546	ArrayIndexing	prgb [ 2 ]		2560421	0					
ANR	2560547	Identifier	prgb		2560421	0					
ANR	2560548	PrimaryExpression	2		2560421	1					
ANR	2560549	AdditiveExpression	gx_max_color_value - y		2560421	1		-			
ANR	2560550	Identifier	gx_max_color_value		2560421	0					
ANR	2560551	Identifier	y		2560421	1					
ANR	2560552	ExpressionStatement	"errprintf ( pdev -> memory , ""kcolor_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"" , ( pdev -> color_info . depth + 3 ) >> 2 , color , 255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , 255.0 * ( double ) c / ( double ) gx_max_color_value , 255.0 * ( double ) m / ( double ) gx_max_color_value , 255.0 * ( double ) y / ( double ) gx_max_color_value , 255.0 * ( double ) k / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value )"	2560:3:101326:102438	2560421	7	True				
ANR	2560553	CallExpression	"errprintf ( pdev -> memory , ""kcolor_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"" , ( pdev -> color_info . depth + 3 ) >> 2 , color , 255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , 255.0 * ( double ) c / ( double ) gx_max_color_value , 255.0 * ( double ) m / ( double ) gx_max_color_value , 255.0 * ( double ) y / ( double ) gx_max_color_value , 255.0 * ( double ) k / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value )"		2560421	0					
ANR	2560554	Callee	errprintf		2560421	0					
ANR	2560555	Identifier	errprintf		2560421	0					
ANR	2560556	ArgumentList	pdev -> memory		2560421	1					
ANR	2560557	Argument	pdev -> memory		2560421	0					
ANR	2560558	PtrMemberAccess	pdev -> memory		2560421	0					
ANR	2560559	Identifier	pdev		2560421	0					
ANR	2560560	Identifier	memory		2560421	1					
ANR	2560561	Argument	"""kcolor_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"""		2560421	1					
ANR	2560562	PrimaryExpression	"""kcolor_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"""		2560421	0					
ANR	2560563	Argument	( pdev -> color_info . depth + 3 ) >> 2		2560421	2					
ANR	2560564	ShiftExpression	( pdev -> color_info . depth + 3 ) >> 2		2560421	0		>>			
ANR	2560565	AdditiveExpression	pdev -> color_info . depth + 3		2560421	0		+			
ANR	2560566	MemberAccess	pdev -> color_info . depth		2560421	0					
ANR	2560567	PtrMemberAccess	pdev -> color_info		2560421	0					
ANR	2560568	Identifier	pdev		2560421	0					
ANR	2560569	Identifier	color_info		2560421	1					
ANR	2560570	Identifier	depth		2560421	1					
ANR	2560571	PrimaryExpression	3		2560421	1					
ANR	2560572	PrimaryExpression	2		2560421	1					
ANR	2560573	Argument	color		2560421	3					
ANR	2560574	Identifier	color		2560421	0					
ANR	2560575	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2560421	4					
ANR	2560576	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2560421	0		*			
ANR	2560577	PrimaryExpression	255.0		2560421	0					
ANR	2560578	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2560421	1		/			
ANR	2560579	CastExpression	( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk )		2560421	0					
ANR	2560580	CastTarget	double		2560421	0					
ANR	2560581	BitAndExpression	( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk		2560421	1		&			
ANR	2560582	ShiftExpression	color >> upd -> cmap [ 1 ] . bitshf		2560421	0		>>			
ANR	2560583	Identifier	color		2560421	0					
ANR	2560584	MemberAccess	upd -> cmap [ 1 ] . bitshf		2560421	1					
ANR	2560585	ArrayIndexing	upd -> cmap [ 1 ]		2560421	0					
ANR	2560586	PtrMemberAccess	upd -> cmap		2560421	0					
ANR	2560587	Identifier	upd		2560421	0					
ANR	2560588	Identifier	cmap		2560421	1					
ANR	2560589	PrimaryExpression	1		2560421	1					
ANR	2560590	Identifier	bitshf		2560421	1					
ANR	2560591	MemberAccess	upd -> cmap [ 1 ] . bitmsk		2560421	1					
ANR	2560592	ArrayIndexing	upd -> cmap [ 1 ]		2560421	0					
ANR	2560593	PtrMemberAccess	upd -> cmap		2560421	0					
ANR	2560594	Identifier	upd		2560421	0					
ANR	2560595	Identifier	cmap		2560421	1					
ANR	2560596	PrimaryExpression	1		2560421	1					
ANR	2560597	Identifier	bitmsk		2560421	1					
ANR	2560598	CastExpression	( double ) upd -> cmap [ 1 ] . bitmsk		2560421	1					
ANR	2560599	CastTarget	double		2560421	0					
ANR	2560600	MemberAccess	upd -> cmap [ 1 ] . bitmsk		2560421	1					
ANR	2560601	ArrayIndexing	upd -> cmap [ 1 ]		2560421	0					
ANR	2560602	PtrMemberAccess	upd -> cmap		2560421	0					
ANR	2560603	Identifier	upd		2560421	0					
ANR	2560604	Identifier	cmap		2560421	1					
ANR	2560605	PrimaryExpression	1		2560421	1					
ANR	2560606	Identifier	bitmsk		2560421	1					
ANR	2560607	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2560421	5					
ANR	2560608	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2560421	0		*			
ANR	2560609	PrimaryExpression	255.0		2560421	0					
ANR	2560610	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2560421	1		/			
ANR	2560611	CastExpression	( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk )		2560421	0					
ANR	2560612	CastTarget	double		2560421	0					
ANR	2560613	BitAndExpression	( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk		2560421	1		&			
ANR	2560614	ShiftExpression	color >> upd -> cmap [ 2 ] . bitshf		2560421	0		>>			
ANR	2560615	Identifier	color		2560421	0					
ANR	2560616	MemberAccess	upd -> cmap [ 2 ] . bitshf		2560421	1					
ANR	2560617	ArrayIndexing	upd -> cmap [ 2 ]		2560421	0					
ANR	2560618	PtrMemberAccess	upd -> cmap		2560421	0					
ANR	2560619	Identifier	upd		2560421	0					
ANR	2560620	Identifier	cmap		2560421	1					
ANR	2560621	PrimaryExpression	2		2560421	1					
ANR	2560622	Identifier	bitshf		2560421	1					
ANR	2560623	MemberAccess	upd -> cmap [ 2 ] . bitmsk		2560421	1					
ANR	2560624	ArrayIndexing	upd -> cmap [ 2 ]		2560421	0					
ANR	2560625	PtrMemberAccess	upd -> cmap		2560421	0					
ANR	2560626	Identifier	upd		2560421	0					
ANR	2560627	Identifier	cmap		2560421	1					
ANR	2560628	PrimaryExpression	2		2560421	1					
ANR	2560629	Identifier	bitmsk		2560421	1					
ANR	2560630	CastExpression	( double ) upd -> cmap [ 2 ] . bitmsk		2560421	1					
ANR	2560631	CastTarget	double		2560421	0					
ANR	2560632	MemberAccess	upd -> cmap [ 2 ] . bitmsk		2560421	1					
ANR	2560633	ArrayIndexing	upd -> cmap [ 2 ]		2560421	0					
ANR	2560634	PtrMemberAccess	upd -> cmap		2560421	0					
ANR	2560635	Identifier	upd		2560421	0					
ANR	2560636	Identifier	cmap		2560421	1					
ANR	2560637	PrimaryExpression	2		2560421	1					
ANR	2560638	Identifier	bitmsk		2560421	1					
ANR	2560639	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		2560421	6					
ANR	2560640	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		2560421	0		*			
ANR	2560641	PrimaryExpression	255.0		2560421	0					
ANR	2560642	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		2560421	1		/			
ANR	2560643	CastExpression	( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk )		2560421	0					
ANR	2560644	CastTarget	double		2560421	0					
ANR	2560645	BitAndExpression	( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk		2560421	1		&			
ANR	2560646	ShiftExpression	color >> upd -> cmap [ 3 ] . bitshf		2560421	0		>>			
ANR	2560647	Identifier	color		2560421	0					
ANR	2560648	MemberAccess	upd -> cmap [ 3 ] . bitshf		2560421	1					
ANR	2560649	ArrayIndexing	upd -> cmap [ 3 ]		2560421	0					
ANR	2560650	PtrMemberAccess	upd -> cmap		2560421	0					
ANR	2560651	Identifier	upd		2560421	0					
ANR	2560652	Identifier	cmap		2560421	1					
ANR	2560653	PrimaryExpression	3		2560421	1					
ANR	2560654	Identifier	bitshf		2560421	1					
ANR	2560655	MemberAccess	upd -> cmap [ 3 ] . bitmsk		2560421	1					
ANR	2560656	ArrayIndexing	upd -> cmap [ 3 ]		2560421	0					
ANR	2560657	PtrMemberAccess	upd -> cmap		2560421	0					
ANR	2560658	Identifier	upd		2560421	0					
ANR	2560659	Identifier	cmap		2560421	1					
ANR	2560660	PrimaryExpression	3		2560421	1					
ANR	2560661	Identifier	bitmsk		2560421	1					
ANR	2560662	CastExpression	( double ) upd -> cmap [ 3 ] . bitmsk		2560421	1					
ANR	2560663	CastTarget	double		2560421	0					
ANR	2560664	MemberAccess	upd -> cmap [ 3 ] . bitmsk		2560421	1					
ANR	2560665	ArrayIndexing	upd -> cmap [ 3 ]		2560421	0					
ANR	2560666	PtrMemberAccess	upd -> cmap		2560421	0					
ANR	2560667	Identifier	upd		2560421	0					
ANR	2560668	Identifier	cmap		2560421	1					
ANR	2560669	PrimaryExpression	3		2560421	1					
ANR	2560670	Identifier	bitmsk		2560421	1					
ANR	2560671	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2560421	7					
ANR	2560672	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2560421	0		*			
ANR	2560673	PrimaryExpression	255.0		2560421	0					
ANR	2560674	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2560421	1		/			
ANR	2560675	CastExpression	( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk )		2560421	0					
ANR	2560676	CastTarget	double		2560421	0					
ANR	2560677	BitAndExpression	( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk		2560421	1		&			
ANR	2560678	ShiftExpression	color >> upd -> cmap [ 0 ] . bitshf		2560421	0		>>			
ANR	2560679	Identifier	color		2560421	0					
ANR	2560680	MemberAccess	upd -> cmap [ 0 ] . bitshf		2560421	1					
ANR	2560681	ArrayIndexing	upd -> cmap [ 0 ]		2560421	0					
ANR	2560682	PtrMemberAccess	upd -> cmap		2560421	0					
ANR	2560683	Identifier	upd		2560421	0					
ANR	2560684	Identifier	cmap		2560421	1					
ANR	2560685	PrimaryExpression	0		2560421	1					
ANR	2560686	Identifier	bitshf		2560421	1					
ANR	2560687	MemberAccess	upd -> cmap [ 0 ] . bitmsk		2560421	1					
ANR	2560688	ArrayIndexing	upd -> cmap [ 0 ]		2560421	0					
ANR	2560689	PtrMemberAccess	upd -> cmap		2560421	0					
ANR	2560690	Identifier	upd		2560421	0					
ANR	2560691	Identifier	cmap		2560421	1					
ANR	2560692	PrimaryExpression	0		2560421	1					
ANR	2560693	Identifier	bitmsk		2560421	1					
ANR	2560694	CastExpression	( double ) upd -> cmap [ 0 ] . bitmsk		2560421	1					
ANR	2560695	CastTarget	double		2560421	0					
ANR	2560696	MemberAccess	upd -> cmap [ 0 ] . bitmsk		2560421	1					
ANR	2560697	ArrayIndexing	upd -> cmap [ 0 ]		2560421	0					
ANR	2560698	PtrMemberAccess	upd -> cmap		2560421	0					
ANR	2560699	Identifier	upd		2560421	0					
ANR	2560700	Identifier	cmap		2560421	1					
ANR	2560701	PrimaryExpression	0		2560421	1					
ANR	2560702	Identifier	bitmsk		2560421	1					
ANR	2560703	Argument	255.0 * ( double ) c / ( double ) gx_max_color_value		2560421	8					
ANR	2560704	MultiplicativeExpression	255.0 * ( double ) c / ( double ) gx_max_color_value		2560421	0		*			
ANR	2560705	PrimaryExpression	255.0		2560421	0					
ANR	2560706	MultiplicativeExpression	( double ) c / ( double ) gx_max_color_value		2560421	1		/			
ANR	2560707	CastExpression	( double ) c		2560421	0					
ANR	2560708	CastTarget	double		2560421	0					
ANR	2560709	Identifier	c		2560421	1					
ANR	2560710	CastExpression	( double ) gx_max_color_value		2560421	1					
ANR	2560711	CastTarget	double		2560421	0					
ANR	2560712	Identifier	gx_max_color_value		2560421	1					
ANR	2560713	Argument	255.0 * ( double ) m / ( double ) gx_max_color_value		2560421	9					
ANR	2560714	MultiplicativeExpression	255.0 * ( double ) m / ( double ) gx_max_color_value		2560421	0		*			
ANR	2560715	PrimaryExpression	255.0		2560421	0					
ANR	2560716	MultiplicativeExpression	( double ) m / ( double ) gx_max_color_value		2560421	1		/			
ANR	2560717	CastExpression	( double ) m		2560421	0					
ANR	2560718	CastTarget	double		2560421	0					
ANR	2560719	Identifier	m		2560421	1					
ANR	2560720	CastExpression	( double ) gx_max_color_value		2560421	1					
ANR	2560721	CastTarget	double		2560421	0					
ANR	2560722	Identifier	gx_max_color_value		2560421	1					
ANR	2560723	Argument	255.0 * ( double ) y / ( double ) gx_max_color_value		2560421	10					
ANR	2560724	MultiplicativeExpression	255.0 * ( double ) y / ( double ) gx_max_color_value		2560421	0		*			
ANR	2560725	PrimaryExpression	255.0		2560421	0					
ANR	2560726	MultiplicativeExpression	( double ) y / ( double ) gx_max_color_value		2560421	1		/			
ANR	2560727	CastExpression	( double ) y		2560421	0					
ANR	2560728	CastTarget	double		2560421	0					
ANR	2560729	Identifier	y		2560421	1					
ANR	2560730	CastExpression	( double ) gx_max_color_value		2560421	1					
ANR	2560731	CastTarget	double		2560421	0					
ANR	2560732	Identifier	gx_max_color_value		2560421	1					
ANR	2560733	Argument	255.0 * ( double ) k / ( double ) gx_max_color_value		2560421	11					
ANR	2560734	MultiplicativeExpression	255.0 * ( double ) k / ( double ) gx_max_color_value		2560421	0		*			
ANR	2560735	PrimaryExpression	255.0		2560421	0					
ANR	2560736	MultiplicativeExpression	( double ) k / ( double ) gx_max_color_value		2560421	1		/			
ANR	2560737	CastExpression	( double ) k		2560421	0					
ANR	2560738	CastTarget	double		2560421	0					
ANR	2560739	Identifier	k		2560421	1					
ANR	2560740	CastExpression	( double ) gx_max_color_value		2560421	1					
ANR	2560741	CastTarget	double		2560421	0					
ANR	2560742	Identifier	gx_max_color_value		2560421	1					
ANR	2560743	Argument	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		2560421	12					
ANR	2560744	MultiplicativeExpression	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		2560421	0		*			
ANR	2560745	PrimaryExpression	255.0		2560421	0					
ANR	2560746	MultiplicativeExpression	( double ) prgb [ 0 ] / ( double ) gx_max_color_value		2560421	1		/			
ANR	2560747	CastExpression	( double ) prgb [ 0 ]		2560421	0					
ANR	2560748	CastTarget	double		2560421	0					
ANR	2560749	ArrayIndexing	prgb [ 0 ]		2560421	1					
ANR	2560750	Identifier	prgb		2560421	0					
ANR	2560751	PrimaryExpression	0		2560421	1					
ANR	2560752	CastExpression	( double ) gx_max_color_value		2560421	1					
ANR	2560753	CastTarget	double		2560421	0					
ANR	2560754	Identifier	gx_max_color_value		2560421	1					
ANR	2560755	Argument	255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value		2560421	13					
ANR	2560756	MultiplicativeExpression	255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value		2560421	0		*			
ANR	2560757	PrimaryExpression	255.0		2560421	0					
ANR	2560758	MultiplicativeExpression	( double ) prgb [ 1 ] / ( double ) gx_max_color_value		2560421	1		/			
ANR	2560759	CastExpression	( double ) prgb [ 1 ]		2560421	0					
ANR	2560760	CastTarget	double		2560421	0					
ANR	2560761	ArrayIndexing	prgb [ 1 ]		2560421	1					
ANR	2560762	Identifier	prgb		2560421	0					
ANR	2560763	PrimaryExpression	1		2560421	1					
ANR	2560764	CastExpression	( double ) gx_max_color_value		2560421	1					
ANR	2560765	CastTarget	double		2560421	0					
ANR	2560766	Identifier	gx_max_color_value		2560421	1					
ANR	2560767	Argument	255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value		2560421	14					
ANR	2560768	MultiplicativeExpression	255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value		2560421	0		*			
ANR	2560769	PrimaryExpression	255.0		2560421	0					
ANR	2560770	MultiplicativeExpression	( double ) prgb [ 2 ] / ( double ) gx_max_color_value		2560421	1		/			
ANR	2560771	CastExpression	( double ) prgb [ 2 ]		2560421	0					
ANR	2560772	CastTarget	double		2560421	0					
ANR	2560773	ArrayIndexing	prgb [ 2 ]		2560421	1					
ANR	2560774	Identifier	prgb		2560421	0					
ANR	2560775	PrimaryExpression	2		2560421	1					
ANR	2560776	CastExpression	( double ) gx_max_color_value		2560421	1					
ANR	2560777	CastTarget	double		2560421	0					
ANR	2560778	Identifier	gx_max_color_value		2560421	1					
ANR	2560779	ReturnStatement	return 0 ;	2580:3:102451:102459	2560421	8	True				
ANR	2560780	PrimaryExpression	0		2560421	0					
ANR	2560781	ReturnType	static int		2560421	1					
ANR	2560782	Identifier	upd_kcolor_rgb		2560421	2					
ANR	2560783	ParameterList	"gx_device * pdev , gx_color_index color , gx_color_value prgb [ 3 ]"		2560421	3					
ANR	2560784	Parameter	gx_device * pdev	2533:15:100713:100727	2560421	0	True				
ANR	2560785	ParameterType	gx_device *		2560421	0					
ANR	2560786	Identifier	pdev		2560421	1					
ANR	2560787	Parameter	gx_color_index color	2533:32:100730:100749	2560421	1	True				
ANR	2560788	ParameterType	gx_color_index		2560421	0					
ANR	2560789	Identifier	color		2560421	1					
ANR	2560790	Parameter	gx_color_value prgb [ 3 ]	2533:54:100752:100773	2560421	2	True				
ANR	2560791	ParameterType	gx_color_value [ 3 ]		2560421	0					
ANR	2560792	Identifier	prgb		2560421	1					
ANR	2560793	CFGEntryNode	ENTRY		2560421		True				
ANR	2560794	CFGExitNode	EXIT		2560421		True				
ANR	2560795	Symbol	color		2560421						
ANR	2560796	Symbol	pdev -> color_info . depth		2560421						
ANR	2560797	Symbol	* upd -> cmap		2560421						
ANR	2560798	Symbol	pdev -> color_info		2560421						
ANR	2560799	Symbol	upd -> cmap [ 0 ] . bitshf		2560421						
ANR	2560800	Symbol	( ( upd_device * ) pdev ) -> upd		2560421						
ANR	2560801	Symbol	upd -> cmap		2560421						
ANR	2560802	Symbol	pdev		2560421						
ANR	2560803	Symbol	* upd		2560421						
ANR	2560804	Symbol	pdev -> memory		2560421						
ANR	2560805	Symbol	upd -> cmap [ 2 ] . bitmsk		2560421						
ANR	2560806	Symbol	upd -> cmap [ 3 ] . bitshf		2560421						
ANR	2560807	Symbol	upd -> cmap [ 1 ] . bitmsk		2560421						
ANR	2560808	Symbol	upd -> cmap [ 2 ] . bitshf		2560421						
ANR	2560809	Symbol	upd -> cmap [ 3 ] . bitmsk		2560421						
ANR	2560810	Symbol	c		2560421						
ANR	2560811	Symbol	upd -> cmap [ 0 ] . bitmsk		2560421						
ANR	2560812	Symbol	upd		2560421						
ANR	2560813	Symbol	prgb		2560421						
ANR	2560814	Symbol	k		2560421						
ANR	2560815	Symbol	m		2560421						
ANR	2560816	Symbol	* prgb		2560421						
ANR	2560817	Symbol	upd -> cmap [ 1 ] . bitshf		2560421						
ANR	2560818	Symbol	gx_max_color_value		2560421						
ANR	2560819	Symbol	* pdev		2560421						
ANR	2560820	Symbol	y		2560421						
ANR	2560821	Symbol	* * upd		2560421						
ANR	2560822	Symbol	upd_expand		2560421						
ANR	2560823	Function	upd_rgb_ovcolor	2587:0:102687:105087							
ANR	2560824	FunctionDef	"upd_rgb_ovcolor (gx_device * pdev , const gx_color_value cv [ ])"		2560823	0					
ANR	2560825	CompoundStatement		2589:0:102769:105087	2560823	0					
ANR	2560826	IdentifierDeclStatement	const upd_p upd = ( ( upd_device * ) pdev ) -> upd ;	2590:3:102774:102821	2560823	0	True				
ANR	2560827	IdentifierDecl	upd = ( ( upd_device * ) pdev ) -> upd		2560823	0					
ANR	2560828	IdentifierDeclType	const upd_p		2560823	0					
ANR	2560829	Identifier	upd		2560823	1					
ANR	2560830	AssignmentExpression	upd = ( ( upd_device * ) pdev ) -> upd		2560823	2		=			
ANR	2560831	Identifier	upd		2560823	0					
ANR	2560832	PtrMemberAccess	( ( upd_device * ) pdev ) -> upd		2560823	1					
ANR	2560833	CastExpression	( upd_device * ) pdev		2560823	0					
ANR	2560834	CastTarget	upd_device *		2560823	0					
ANR	2560835	Identifier	pdev		2560823	1					
ANR	2560836	Identifier	upd		2560823	1					
ANR	2560837	IdentifierDeclStatement	gx_color_index rv ;	2591:3:102826:102844	2560823	1	True				
ANR	2560838	IdentifierDecl	rv		2560823	0					
ANR	2560839	IdentifierDeclType	gx_color_index		2560823	0					
ANR	2560840	Identifier	rv		2560823	1					
ANR	2560841	IdentifierDeclStatement	"gx_color_value c , m , y , black ;"	2592:3:102849:102876	2560823	2	True				
ANR	2560842	IdentifierDecl	c		2560823	0					
ANR	2560843	IdentifierDeclType	gx_color_value		2560823	0					
ANR	2560844	Identifier	c		2560823	1					
ANR	2560845	IdentifierDecl	m		2560823	1					
ANR	2560846	IdentifierDeclType	gx_color_value		2560823	0					
ANR	2560847	Identifier	m		2560823	1					
ANR	2560848	IdentifierDecl	y		2560823	2					
ANR	2560849	IdentifierDeclType	gx_color_value		2560823	0					
ANR	2560850	Identifier	y		2560823	1					
ANR	2560851	IdentifierDecl	black		2560823	3					
ANR	2560852	IdentifierDeclType	gx_color_value		2560823	0					
ANR	2560853	Identifier	black		2560823	1					
ANR	2560854	IdentifierDeclStatement	"gx_color_value r , g , b ;"	2593:3:102881:102903	2560823	3	True				
ANR	2560855	IdentifierDecl	r		2560823	0					
ANR	2560856	IdentifierDeclType	gx_color_value		2560823	0					
ANR	2560857	Identifier	r		2560823	1					
ANR	2560858	IdentifierDecl	g		2560823	1					
ANR	2560859	IdentifierDeclType	gx_color_value		2560823	0					
ANR	2560860	Identifier	g		2560823	1					
ANR	2560861	IdentifierDecl	b		2560823	2					
ANR	2560862	IdentifierDeclType	gx_color_value		2560823	0					
ANR	2560863	Identifier	b		2560823	1					
ANR	2560864	ExpressionStatement	r = cv [ 0 ]	2594:3:102908:102917	2560823	4	True				
ANR	2560865	AssignmentExpression	r = cv [ 0 ]		2560823	0		=			
ANR	2560866	Identifier	r		2560823	0					
ANR	2560867	ArrayIndexing	cv [ 0 ]		2560823	1					
ANR	2560868	Identifier	cv		2560823	0					
ANR	2560869	PrimaryExpression	0		2560823	1					
ANR	2560870	ExpressionStatement	g = cv [ 1 ]	2594:14:102919:102928	2560823	5	True				
ANR	2560871	AssignmentExpression	g = cv [ 1 ]		2560823	0		=			
ANR	2560872	Identifier	g		2560823	0					
ANR	2560873	ArrayIndexing	cv [ 1 ]		2560823	1					
ANR	2560874	Identifier	cv		2560823	0					
ANR	2560875	PrimaryExpression	1		2560823	1					
ANR	2560876	ExpressionStatement	b = cv [ 2 ]	2594:25:102930:102939	2560823	6	True				
ANR	2560877	AssignmentExpression	b = cv [ 2 ]		2560823	0		=			
ANR	2560878	Identifier	b		2560823	0					
ANR	2560879	ArrayIndexing	cv [ 2 ]		2560823	1					
ANR	2560880	Identifier	cv		2560823	0					
ANR	2560881	PrimaryExpression	2		2560823	1					
ANR	2560882	IfStatement	if ( ( r == g ) && ( g == b ) )		2560823	7					
ANR	2560883	Condition	( r == g ) && ( g == b )	2595:6:102947:102966	2560823	0	True				
ANR	2560884	AndExpression	( r == g ) && ( g == b )		2560823	0		&&			
ANR	2560885	EqualityExpression	r == g		2560823	0		==			
ANR	2560886	Identifier	r		2560823	0					
ANR	2560887	Identifier	g		2560823	1					
ANR	2560888	EqualityExpression	g == b		2560823	1		==			
ANR	2560889	Identifier	g		2560823	0					
ANR	2560890	Identifier	b		2560823	1					
ANR	2560891	CompoundStatement		7:28:199:199	2560823	1					
ANR	2560892	ExpressionStatement	black = gx_max_color_value - r	2597:6:102978:103009	2560823	0	True				
ANR	2560893	AssignmentExpression	black = gx_max_color_value - r		2560823	0		=			
ANR	2560894	Identifier	black		2560823	0					
ANR	2560895	AdditiveExpression	gx_max_color_value - r		2560823	1		-			
ANR	2560896	Identifier	gx_max_color_value		2560823	0					
ANR	2560897	Identifier	r		2560823	1					
ANR	2560898	ExpressionStatement	"rv = upd_truncate ( upd , 0 , black )"	2598:6:103017:103051	2560823	1	True				
ANR	2560899	AssignmentExpression	"rv = upd_truncate ( upd , 0 , black )"		2560823	0		=			
ANR	2560900	Identifier	rv		2560823	0					
ANR	2560901	CallExpression	"upd_truncate ( upd , 0 , black )"		2560823	1					
ANR	2560902	Callee	upd_truncate		2560823	0					
ANR	2560903	Identifier	upd_truncate		2560823	0					
ANR	2560904	ArgumentList	upd		2560823	1					
ANR	2560905	Argument	upd		2560823	0					
ANR	2560906	Identifier	upd		2560823	0					
ANR	2560907	Argument	0		2560823	1					
ANR	2560908	PrimaryExpression	0		2560823	0					
ANR	2560909	Argument	black		2560823	2					
ANR	2560910	Identifier	black		2560823	0					
ANR	2560911	ExpressionStatement	c = m = y = 0	2599:6:103059:103072	2560823	2	True				
ANR	2560912	AssignmentExpression	c = m = y = 0		2560823	0		=			
ANR	2560913	Identifier	c		2560823	0					
ANR	2560914	AssignmentExpression	m = y = 0		2560823	1		=			
ANR	2560915	Identifier	m		2560823	0					
ANR	2560916	AssignmentExpression	y = 0		2560823	1		=			
ANR	2560917	Identifier	y		2560823	0					
ANR	2560918	PrimaryExpression	0		2560823	1					
ANR	2560919	ElseStatement	else		2560823	0					
ANR	2560920	CompoundStatement		13:10:315:315	2560823	0					
ANR	2560921	ExpressionStatement	c = gx_max_color_value - r	2603:6:103094:103120	2560823	0	True				
ANR	2560922	AssignmentExpression	c = gx_max_color_value - r		2560823	0		=			
ANR	2560923	Identifier	c		2560823	0					
ANR	2560924	AdditiveExpression	gx_max_color_value - r		2560823	1		-			
ANR	2560925	Identifier	gx_max_color_value		2560823	0					
ANR	2560926	Identifier	r		2560823	1					
ANR	2560927	ExpressionStatement	m = gx_max_color_value - g	2604:6:103128:103154	2560823	1	True				
ANR	2560928	AssignmentExpression	m = gx_max_color_value - g		2560823	0		=			
ANR	2560929	Identifier	m		2560823	0					
ANR	2560930	AdditiveExpression	gx_max_color_value - g		2560823	1		-			
ANR	2560931	Identifier	gx_max_color_value		2560823	0					
ANR	2560932	Identifier	g		2560823	1					
ANR	2560933	ExpressionStatement	y = gx_max_color_value - b	2605:6:103162:103188	2560823	2	True				
ANR	2560934	AssignmentExpression	y = gx_max_color_value - b		2560823	0		=			
ANR	2560935	Identifier	y		2560823	0					
ANR	2560936	AdditiveExpression	gx_max_color_value - b		2560823	1		-			
ANR	2560937	Identifier	gx_max_color_value		2560823	0					
ANR	2560938	Identifier	b		2560823	1					
ANR	2560939	ExpressionStatement	black = c < m ? c : m	2607:6:103197:103226	2560823	3	True				
ANR	2560940	AssignmentExpression	black = c < m ? c : m		2560823	0		=			
ANR	2560941	Identifier	black		2560823	0					
ANR	2560942	ConditionalExpression	c < m ? c : m		2560823	1					
ANR	2560943	Condition	c < m		2560823	0					
ANR	2560944	RelationalExpression	c < m		2560823	0		<			
ANR	2560945	Identifier	c		2560823	0					
ANR	2560946	Identifier	m		2560823	1					
ANR	2560947	Identifier	c		2560823	1					
ANR	2560948	Identifier	m		2560823	2					
ANR	2560949	ExpressionStatement	black = black < y ? black : y	2608:6:103234:103263	2560823	4	True				
ANR	2560950	AssignmentExpression	black = black < y ? black : y		2560823	0		=			
ANR	2560951	Identifier	black		2560823	0					
ANR	2560952	ConditionalExpression	black < y ? black : y		2560823	1					
ANR	2560953	Condition	black < y		2560823	0					
ANR	2560954	RelationalExpression	black < y		2560823	0		<			
ANR	2560955	Identifier	black		2560823	0					
ANR	2560956	Identifier	y		2560823	1					
ANR	2560957	Identifier	black		2560823	1					
ANR	2560958	Identifier	y		2560823	2					
ANR	2560959	IfStatement	if ( black != gx_max_color_value )		2560823	5					
ANR	2560960	Condition	black != gx_max_color_value	2610:9:103275:103301	2560823	0	True				
ANR	2560961	EqualityExpression	black != gx_max_color_value		2560823	0		!=			
ANR	2560962	Identifier	black		2560823	0					
ANR	2560963	Identifier	gx_max_color_value		2560823	1					
ANR	2560964	CompoundStatement		23:8:544:555	2560823	1					
ANR	2560965	IdentifierDeclStatement	"float tmp , d ;"	2611:8:103314:103325	2560823	0	True				
ANR	2560966	IdentifierDecl	tmp		2560823	0					
ANR	2560967	IdentifierDeclType	float		2560823	0					
ANR	2560968	Identifier	tmp		2560823	1					
ANR	2560969	IdentifierDecl	d		2560823	1					
ANR	2560970	IdentifierDeclType	float		2560823	0					
ANR	2560971	Identifier	d		2560823	1					
ANR	2560972	ExpressionStatement	d = ( float ) ( gx_max_color_value - black )	2613:8:103336:103377	2560823	1	True				
ANR	2560973	AssignmentExpression	d = ( float ) ( gx_max_color_value - black )		2560823	0		=			
ANR	2560974	Identifier	d		2560823	0					
ANR	2560975	CastExpression	( float ) ( gx_max_color_value - black )		2560823	1					
ANR	2560976	CastTarget	float		2560823	0					
ANR	2560977	AdditiveExpression	gx_max_color_value - black		2560823	1		-			
ANR	2560978	Identifier	gx_max_color_value		2560823	0					
ANR	2560979	Identifier	black		2560823	1					
ANR	2560980	ExpressionStatement	tmp = ( float ) ( c - black ) / d	2615:8:103388:103415	2560823	2	True				
ANR	2560981	AssignmentExpression	tmp = ( float ) ( c - black ) / d		2560823	0		=			
ANR	2560982	Identifier	tmp		2560823	0					
ANR	2560983	MultiplicativeExpression	( float ) ( c - black ) / d		2560823	1		/			
ANR	2560984	CastExpression	( float ) ( c - black )		2560823	0					
ANR	2560985	CastTarget	float		2560823	0					
ANR	2560986	AdditiveExpression	c - black		2560823	1		-			
ANR	2560987	Identifier	c		2560823	0					
ANR	2560988	Identifier	black		2560823	1					
ANR	2560989	Identifier	d		2560823	1					
ANR	2560990	IfStatement	if ( 0.0 > tmp )		2560823	3					
ANR	2560991	Condition	0.0 > tmp	2616:17:103434:103442	2560823	0	True				
ANR	2560992	RelationalExpression	0.0 > tmp		2560823	0		>			
ANR	2560993	PrimaryExpression	0.0		2560823	0					
ANR	2560994	Identifier	tmp		2560823	1					
ANR	2560995	ExpressionStatement	tmp = 0.0	2616:28:103445:103454	2560823	1	True				
ANR	2560996	AssignmentExpression	tmp = 0.0		2560823	0		=			
ANR	2560997	Identifier	tmp		2560823	0					
ANR	2560998	PrimaryExpression	0.0		2560823	1					
ANR	2560999	ElseStatement	else		2560823	0					
ANR	2561000	IfStatement	if ( 1.0 < tmp )		2560823	0					
ANR	2561001	Condition	1.0 < tmp	2617:17:103473:103481	2560823	0	True				
ANR	2561002	RelationalExpression	1.0 < tmp		2560823	0		<			
ANR	2561003	PrimaryExpression	1.0		2560823	0					
ANR	2561004	Identifier	tmp		2560823	1					
ANR	2561005	ExpressionStatement	tmp = 1.0	2617:28:103484:103493	2560823	1	True				
ANR	2561006	AssignmentExpression	tmp = 1.0		2560823	0		=			
ANR	2561007	Identifier	tmp		2560823	0					
ANR	2561008	PrimaryExpression	1.0		2560823	1					
ANR	2561009	ExpressionStatement	c = ( gx_color_value ) ( tmp * gx_max_color_value + 0.499 )	2618:8:103503:103559	2560823	4	True				
ANR	2561010	AssignmentExpression	c = ( gx_color_value ) ( tmp * gx_max_color_value + 0.499 )		2560823	0		=			
ANR	2561011	Identifier	c		2560823	0					
ANR	2561012	CastExpression	( gx_color_value ) ( tmp * gx_max_color_value + 0.499 )		2560823	1					
ANR	2561013	CastTarget	gx_color_value		2560823	0					
ANR	2561014	AdditiveExpression	tmp * gx_max_color_value + 0.499		2560823	1		+			
ANR	2561015	MultiplicativeExpression	tmp * gx_max_color_value		2560823	0		*			
ANR	2561016	Identifier	tmp		2560823	0					
ANR	2561017	Identifier	gx_max_color_value		2560823	1					
ANR	2561018	PrimaryExpression	0.499		2560823	1					
ANR	2561019	ExpressionStatement	tmp = ( float ) ( m - black ) / d	2620:8:103570:103597	2560823	5	True				
ANR	2561020	AssignmentExpression	tmp = ( float ) ( m - black ) / d		2560823	0		=			
ANR	2561021	Identifier	tmp		2560823	0					
ANR	2561022	MultiplicativeExpression	( float ) ( m - black ) / d		2560823	1		/			
ANR	2561023	CastExpression	( float ) ( m - black )		2560823	0					
ANR	2561024	CastTarget	float		2560823	0					
ANR	2561025	AdditiveExpression	m - black		2560823	1		-			
ANR	2561026	Identifier	m		2560823	0					
ANR	2561027	Identifier	black		2560823	1					
ANR	2561028	Identifier	d		2560823	1					
ANR	2561029	IfStatement	if ( 0.0 > tmp )		2560823	6					
ANR	2561030	Condition	0.0 > tmp	2621:17:103616:103624	2560823	0	True				
ANR	2561031	RelationalExpression	0.0 > tmp		2560823	0		>			
ANR	2561032	PrimaryExpression	0.0		2560823	0					
ANR	2561033	Identifier	tmp		2560823	1					
ANR	2561034	ExpressionStatement	tmp = 0.0	2621:28:103627:103636	2560823	1	True				
ANR	2561035	AssignmentExpression	tmp = 0.0		2560823	0		=			
ANR	2561036	Identifier	tmp		2560823	0					
ANR	2561037	PrimaryExpression	0.0		2560823	1					
ANR	2561038	ElseStatement	else		2560823	0					
ANR	2561039	IfStatement	if ( 1.0 < tmp )		2560823	0					
ANR	2561040	Condition	1.0 < tmp	2622:17:103655:103663	2560823	0	True				
ANR	2561041	RelationalExpression	1.0 < tmp		2560823	0		<			
ANR	2561042	PrimaryExpression	1.0		2560823	0					
ANR	2561043	Identifier	tmp		2560823	1					
ANR	2561044	ExpressionStatement	tmp = 1.0	2622:28:103666:103675	2560823	1	True				
ANR	2561045	AssignmentExpression	tmp = 1.0		2560823	0		=			
ANR	2561046	Identifier	tmp		2560823	0					
ANR	2561047	PrimaryExpression	1.0		2560823	1					
ANR	2561048	ExpressionStatement	m = ( gx_color_value ) ( tmp * gx_max_color_value + 0.499 )	2623:8:103685:103741	2560823	7	True				
ANR	2561049	AssignmentExpression	m = ( gx_color_value ) ( tmp * gx_max_color_value + 0.499 )		2560823	0		=			
ANR	2561050	Identifier	m		2560823	0					
ANR	2561051	CastExpression	( gx_color_value ) ( tmp * gx_max_color_value + 0.499 )		2560823	1					
ANR	2561052	CastTarget	gx_color_value		2560823	0					
ANR	2561053	AdditiveExpression	tmp * gx_max_color_value + 0.499		2560823	1		+			
ANR	2561054	MultiplicativeExpression	tmp * gx_max_color_value		2560823	0		*			
ANR	2561055	Identifier	tmp		2560823	0					
ANR	2561056	Identifier	gx_max_color_value		2560823	1					
ANR	2561057	PrimaryExpression	0.499		2560823	1					
ANR	2561058	ExpressionStatement	tmp = ( float ) ( y - black ) / d	2625:8:103752:103779	2560823	8	True				
ANR	2561059	AssignmentExpression	tmp = ( float ) ( y - black ) / d		2560823	0		=			
ANR	2561060	Identifier	tmp		2560823	0					
ANR	2561061	MultiplicativeExpression	( float ) ( y - black ) / d		2560823	1		/			
ANR	2561062	CastExpression	( float ) ( y - black )		2560823	0					
ANR	2561063	CastTarget	float		2560823	0					
ANR	2561064	AdditiveExpression	y - black		2560823	1		-			
ANR	2561065	Identifier	y		2560823	0					
ANR	2561066	Identifier	black		2560823	1					
ANR	2561067	Identifier	d		2560823	1					
ANR	2561068	IfStatement	if ( 0.0 > tmp )		2560823	9					
ANR	2561069	Condition	0.0 > tmp	2626:17:103798:103806	2560823	0	True				
ANR	2561070	RelationalExpression	0.0 > tmp		2560823	0		>			
ANR	2561071	PrimaryExpression	0.0		2560823	0					
ANR	2561072	Identifier	tmp		2560823	1					
ANR	2561073	ExpressionStatement	tmp = 0.0	2626:28:103809:103818	2560823	1	True				
ANR	2561074	AssignmentExpression	tmp = 0.0		2560823	0		=			
ANR	2561075	Identifier	tmp		2560823	0					
ANR	2561076	PrimaryExpression	0.0		2560823	1					
ANR	2561077	ElseStatement	else		2560823	0					
ANR	2561078	IfStatement	if ( 1.0 < tmp )		2560823	0					
ANR	2561079	Condition	1.0 < tmp	2627:17:103837:103845	2560823	0	True				
ANR	2561080	RelationalExpression	1.0 < tmp		2560823	0		<			
ANR	2561081	PrimaryExpression	1.0		2560823	0					
ANR	2561082	Identifier	tmp		2560823	1					
ANR	2561083	ExpressionStatement	tmp = 1.0	2627:28:103848:103857	2560823	1	True				
ANR	2561084	AssignmentExpression	tmp = 1.0		2560823	0		=			
ANR	2561085	Identifier	tmp		2560823	0					
ANR	2561086	PrimaryExpression	1.0		2560823	1					
ANR	2561087	ExpressionStatement	y = ( gx_color_value ) ( tmp * gx_max_color_value + 0.499 )	2628:8:103867:103923	2560823	10	True				
ANR	2561088	AssignmentExpression	y = ( gx_color_value ) ( tmp * gx_max_color_value + 0.499 )		2560823	0		=			
ANR	2561089	Identifier	y		2560823	0					
ANR	2561090	CastExpression	( gx_color_value ) ( tmp * gx_max_color_value + 0.499 )		2560823	1					
ANR	2561091	CastTarget	gx_color_value		2560823	0					
ANR	2561092	AdditiveExpression	tmp * gx_max_color_value + 0.499		2560823	1		+			
ANR	2561093	MultiplicativeExpression	tmp * gx_max_color_value		2560823	0		*			
ANR	2561094	Identifier	tmp		2560823	0					
ANR	2561095	Identifier	gx_max_color_value		2560823	1					
ANR	2561096	PrimaryExpression	0.499		2560823	1					
ANR	2561097	ElseStatement	else		2560823	0					
ANR	2561098	CompoundStatement		42:13:1169:1169	2560823	0					
ANR	2561099	ExpressionStatement	c = m = y = gx_max_color_value	2632:8:103950:103980	2560823	0	True				
ANR	2561100	AssignmentExpression	c = m = y = gx_max_color_value		2560823	0		=			
ANR	2561101	Identifier	c		2560823	0					
ANR	2561102	AssignmentExpression	m = y = gx_max_color_value		2560823	1		=			
ANR	2561103	Identifier	m		2560823	0					
ANR	2561104	AssignmentExpression	y = gx_max_color_value		2560823	1		=			
ANR	2561105	Identifier	y		2560823	0					
ANR	2561106	Identifier	gx_max_color_value		2560823	1					
ANR	2561107	ExpressionStatement	"rv = upd_truncate ( upd , 0 , black ) | upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"	2636:6:103998:104115	2560823	6	True				
ANR	2561108	AssignmentExpression	"rv = upd_truncate ( upd , 0 , black ) | upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		2560823	0		=			
ANR	2561109	Identifier	rv		2560823	0					
ANR	2561110	InclusiveOrExpression	"upd_truncate ( upd , 0 , black ) | upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		2560823	1		|			
ANR	2561111	CallExpression	"upd_truncate ( upd , 0 , black )"		2560823	0					
ANR	2561112	Callee	upd_truncate		2560823	0					
ANR	2561113	Identifier	upd_truncate		2560823	0					
ANR	2561114	ArgumentList	upd		2560823	1					
ANR	2561115	Argument	upd		2560823	0					
ANR	2561116	Identifier	upd		2560823	0					
ANR	2561117	Argument	0		2560823	1					
ANR	2561118	PrimaryExpression	0		2560823	0					
ANR	2561119	Argument	black		2560823	2					
ANR	2561120	Identifier	black		2560823	0					
ANR	2561121	InclusiveOrExpression	"upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		2560823	1		|			
ANR	2561122	CallExpression	"upd_truncate ( upd , 1 , c )"		2560823	0					
ANR	2561123	Callee	upd_truncate		2560823	0					
ANR	2561124	Identifier	upd_truncate		2560823	0					
ANR	2561125	ArgumentList	upd		2560823	1					
ANR	2561126	Argument	upd		2560823	0					
ANR	2561127	Identifier	upd		2560823	0					
ANR	2561128	Argument	1		2560823	1					
ANR	2561129	PrimaryExpression	1		2560823	0					
ANR	2561130	Argument	c		2560823	2					
ANR	2561131	Identifier	c		2560823	0					
ANR	2561132	InclusiveOrExpression	"upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		2560823	1		|			
ANR	2561133	CallExpression	"upd_truncate ( upd , 2 , m )"		2560823	0					
ANR	2561134	Callee	upd_truncate		2560823	0					
ANR	2561135	Identifier	upd_truncate		2560823	0					
ANR	2561136	ArgumentList	upd		2560823	1					
ANR	2561137	Argument	upd		2560823	0					
ANR	2561138	Identifier	upd		2560823	0					
ANR	2561139	Argument	2		2560823	1					
ANR	2561140	PrimaryExpression	2		2560823	0					
ANR	2561141	Argument	m		2560823	2					
ANR	2561142	Identifier	m		2560823	0					
ANR	2561143	CallExpression	"upd_truncate ( upd , 3 , y )"		2560823	1					
ANR	2561144	Callee	upd_truncate		2560823	0					
ANR	2561145	Identifier	upd_truncate		2560823	0					
ANR	2561146	ArgumentList	upd		2560823	1					
ANR	2561147	Argument	upd		2560823	0					
ANR	2561148	Identifier	upd		2560823	0					
ANR	2561149	Argument	3		2560823	1					
ANR	2561150	PrimaryExpression	3		2560823	0					
ANR	2561151	Argument	y		2560823	2					
ANR	2561152	Identifier	y		2560823	0					
ANR	2561153	IfStatement	if ( rv == gx_no_color_index )		2560823	7					
ANR	2561154	Condition	rv == gx_no_color_index	2641:9:104203:104225	2560823	0	True				
ANR	2561155	EqualityExpression	rv == gx_no_color_index		2560823	0		==			
ANR	2561156	Identifier	rv		2560823	0					
ANR	2561157	Identifier	gx_no_color_index		2560823	1					
ANR	2561158	ExpressionStatement	rv ^= 1	2641:34:104228:104235	2560823	1	True				
ANR	2561159	AssignmentExpression	rv ^= 1		2560823	0		^=			
ANR	2561160	Identifier	rv		2560823	0					
ANR	2561161	PrimaryExpression	1		2560823	1					
ANR	2561162	ExpressionStatement	"errprintf ( pdev -> memory , ""rgb_ovcolor: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) r / ( double ) gx_max_color_value , 255.0 * ( double ) g / ( double ) gx_max_color_value , 255.0 * ( double ) b / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"	2645:2:104279:105063	2560823	8	True				
ANR	2561163	CallExpression	"errprintf ( pdev -> memory , ""rgb_ovcolor: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) r / ( double ) gx_max_color_value , 255.0 * ( double ) g / ( double ) gx_max_color_value , 255.0 * ( double ) b / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"		2560823	0					
ANR	2561164	Callee	errprintf		2560823	0					
ANR	2561165	Identifier	errprintf		2560823	0					
ANR	2561166	ArgumentList	pdev -> memory		2560823	1					
ANR	2561167	Argument	pdev -> memory		2560823	0					
ANR	2561168	PtrMemberAccess	pdev -> memory		2560823	0					
ANR	2561169	Identifier	pdev		2560823	0					
ANR	2561170	Identifier	memory		2560823	1					
ANR	2561171	Argument	"""rgb_ovcolor: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"""		2560823	1					
ANR	2561172	PrimaryExpression	"""rgb_ovcolor: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"""		2560823	0					
ANR	2561173	Argument	255.0 * ( double ) r / ( double ) gx_max_color_value		2560823	2					
ANR	2561174	MultiplicativeExpression	255.0 * ( double ) r / ( double ) gx_max_color_value		2560823	0		*			
ANR	2561175	PrimaryExpression	255.0		2560823	0					
ANR	2561176	MultiplicativeExpression	( double ) r / ( double ) gx_max_color_value		2560823	1		/			
ANR	2561177	CastExpression	( double ) r		2560823	0					
ANR	2561178	CastTarget	double		2560823	0					
ANR	2561179	Identifier	r		2560823	1					
ANR	2561180	CastExpression	( double ) gx_max_color_value		2560823	1					
ANR	2561181	CastTarget	double		2560823	0					
ANR	2561182	Identifier	gx_max_color_value		2560823	1					
ANR	2561183	Argument	255.0 * ( double ) g / ( double ) gx_max_color_value		2560823	3					
ANR	2561184	MultiplicativeExpression	255.0 * ( double ) g / ( double ) gx_max_color_value		2560823	0		*			
ANR	2561185	PrimaryExpression	255.0		2560823	0					
ANR	2561186	MultiplicativeExpression	( double ) g / ( double ) gx_max_color_value		2560823	1		/			
ANR	2561187	CastExpression	( double ) g		2560823	0					
ANR	2561188	CastTarget	double		2560823	0					
ANR	2561189	Identifier	g		2560823	1					
ANR	2561190	CastExpression	( double ) gx_max_color_value		2560823	1					
ANR	2561191	CastTarget	double		2560823	0					
ANR	2561192	Identifier	gx_max_color_value		2560823	1					
ANR	2561193	Argument	255.0 * ( double ) b / ( double ) gx_max_color_value		2560823	4					
ANR	2561194	MultiplicativeExpression	255.0 * ( double ) b / ( double ) gx_max_color_value		2560823	0		*			
ANR	2561195	PrimaryExpression	255.0		2560823	0					
ANR	2561196	MultiplicativeExpression	( double ) b / ( double ) gx_max_color_value		2560823	1		/			
ANR	2561197	CastExpression	( double ) b		2560823	0					
ANR	2561198	CastTarget	double		2560823	0					
ANR	2561199	Identifier	b		2560823	1					
ANR	2561200	CastExpression	( double ) gx_max_color_value		2560823	1					
ANR	2561201	CastTarget	double		2560823	0					
ANR	2561202	Identifier	gx_max_color_value		2560823	1					
ANR	2561203	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2560823	5					
ANR	2561204	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2560823	0		*			
ANR	2561205	PrimaryExpression	255.0		2560823	0					
ANR	2561206	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2560823	1		/			
ANR	2561207	CastExpression	( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk )		2560823	0					
ANR	2561208	CastTarget	double		2560823	0					
ANR	2561209	BitAndExpression	( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk		2560823	1		&			
ANR	2561210	ShiftExpression	rv >> upd -> cmap [ 1 ] . bitshf		2560823	0		>>			
ANR	2561211	Identifier	rv		2560823	0					
ANR	2561212	MemberAccess	upd -> cmap [ 1 ] . bitshf		2560823	1					
ANR	2561213	ArrayIndexing	upd -> cmap [ 1 ]		2560823	0					
ANR	2561214	PtrMemberAccess	upd -> cmap		2560823	0					
ANR	2561215	Identifier	upd		2560823	0					
ANR	2561216	Identifier	cmap		2560823	1					
ANR	2561217	PrimaryExpression	1		2560823	1					
ANR	2561218	Identifier	bitshf		2560823	1					
ANR	2561219	MemberAccess	upd -> cmap [ 1 ] . bitmsk		2560823	1					
ANR	2561220	ArrayIndexing	upd -> cmap [ 1 ]		2560823	0					
ANR	2561221	PtrMemberAccess	upd -> cmap		2560823	0					
ANR	2561222	Identifier	upd		2560823	0					
ANR	2561223	Identifier	cmap		2560823	1					
ANR	2561224	PrimaryExpression	1		2560823	1					
ANR	2561225	Identifier	bitmsk		2560823	1					
ANR	2561226	CastExpression	( double ) upd -> cmap [ 1 ] . bitmsk		2560823	1					
ANR	2561227	CastTarget	double		2560823	0					
ANR	2561228	MemberAccess	upd -> cmap [ 1 ] . bitmsk		2560823	1					
ANR	2561229	ArrayIndexing	upd -> cmap [ 1 ]		2560823	0					
ANR	2561230	PtrMemberAccess	upd -> cmap		2560823	0					
ANR	2561231	Identifier	upd		2560823	0					
ANR	2561232	Identifier	cmap		2560823	1					
ANR	2561233	PrimaryExpression	1		2560823	1					
ANR	2561234	Identifier	bitmsk		2560823	1					
ANR	2561235	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2560823	6					
ANR	2561236	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2560823	0		*			
ANR	2561237	PrimaryExpression	255.0		2560823	0					
ANR	2561238	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2560823	1		/			
ANR	2561239	CastExpression	( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk )		2560823	0					
ANR	2561240	CastTarget	double		2560823	0					
ANR	2561241	BitAndExpression	( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk		2560823	1		&			
ANR	2561242	ShiftExpression	rv >> upd -> cmap [ 2 ] . bitshf		2560823	0		>>			
ANR	2561243	Identifier	rv		2560823	0					
ANR	2561244	MemberAccess	upd -> cmap [ 2 ] . bitshf		2560823	1					
ANR	2561245	ArrayIndexing	upd -> cmap [ 2 ]		2560823	0					
ANR	2561246	PtrMemberAccess	upd -> cmap		2560823	0					
ANR	2561247	Identifier	upd		2560823	0					
ANR	2561248	Identifier	cmap		2560823	1					
ANR	2561249	PrimaryExpression	2		2560823	1					
ANR	2561250	Identifier	bitshf		2560823	1					
ANR	2561251	MemberAccess	upd -> cmap [ 2 ] . bitmsk		2560823	1					
ANR	2561252	ArrayIndexing	upd -> cmap [ 2 ]		2560823	0					
ANR	2561253	PtrMemberAccess	upd -> cmap		2560823	0					
ANR	2561254	Identifier	upd		2560823	0					
ANR	2561255	Identifier	cmap		2560823	1					
ANR	2561256	PrimaryExpression	2		2560823	1					
ANR	2561257	Identifier	bitmsk		2560823	1					
ANR	2561258	CastExpression	( double ) upd -> cmap [ 2 ] . bitmsk		2560823	1					
ANR	2561259	CastTarget	double		2560823	0					
ANR	2561260	MemberAccess	upd -> cmap [ 2 ] . bitmsk		2560823	1					
ANR	2561261	ArrayIndexing	upd -> cmap [ 2 ]		2560823	0					
ANR	2561262	PtrMemberAccess	upd -> cmap		2560823	0					
ANR	2561263	Identifier	upd		2560823	0					
ANR	2561264	Identifier	cmap		2560823	1					
ANR	2561265	PrimaryExpression	2		2560823	1					
ANR	2561266	Identifier	bitmsk		2560823	1					
ANR	2561267	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		2560823	7					
ANR	2561268	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		2560823	0		*			
ANR	2561269	PrimaryExpression	255.0		2560823	0					
ANR	2561270	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		2560823	1		/			
ANR	2561271	CastExpression	( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk )		2560823	0					
ANR	2561272	CastTarget	double		2560823	0					
ANR	2561273	BitAndExpression	( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk		2560823	1		&			
ANR	2561274	ShiftExpression	rv >> upd -> cmap [ 3 ] . bitshf		2560823	0		>>			
ANR	2561275	Identifier	rv		2560823	0					
ANR	2561276	MemberAccess	upd -> cmap [ 3 ] . bitshf		2560823	1					
ANR	2561277	ArrayIndexing	upd -> cmap [ 3 ]		2560823	0					
ANR	2561278	PtrMemberAccess	upd -> cmap		2560823	0					
ANR	2561279	Identifier	upd		2560823	0					
ANR	2561280	Identifier	cmap		2560823	1					
ANR	2561281	PrimaryExpression	3		2560823	1					
ANR	2561282	Identifier	bitshf		2560823	1					
ANR	2561283	MemberAccess	upd -> cmap [ 3 ] . bitmsk		2560823	1					
ANR	2561284	ArrayIndexing	upd -> cmap [ 3 ]		2560823	0					
ANR	2561285	PtrMemberAccess	upd -> cmap		2560823	0					
ANR	2561286	Identifier	upd		2560823	0					
ANR	2561287	Identifier	cmap		2560823	1					
ANR	2561288	PrimaryExpression	3		2560823	1					
ANR	2561289	Identifier	bitmsk		2560823	1					
ANR	2561290	CastExpression	( double ) upd -> cmap [ 3 ] . bitmsk		2560823	1					
ANR	2561291	CastTarget	double		2560823	0					
ANR	2561292	MemberAccess	upd -> cmap [ 3 ] . bitmsk		2560823	1					
ANR	2561293	ArrayIndexing	upd -> cmap [ 3 ]		2560823	0					
ANR	2561294	PtrMemberAccess	upd -> cmap		2560823	0					
ANR	2561295	Identifier	upd		2560823	0					
ANR	2561296	Identifier	cmap		2560823	1					
ANR	2561297	PrimaryExpression	3		2560823	1					
ANR	2561298	Identifier	bitmsk		2560823	1					
ANR	2561299	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2560823	8					
ANR	2561300	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2560823	0		*			
ANR	2561301	PrimaryExpression	255.0		2560823	0					
ANR	2561302	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2560823	1		/			
ANR	2561303	CastExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk )		2560823	0					
ANR	2561304	CastTarget	double		2560823	0					
ANR	2561305	BitAndExpression	( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk		2560823	1		&			
ANR	2561306	ShiftExpression	rv >> upd -> cmap [ 0 ] . bitshf		2560823	0		>>			
ANR	2561307	Identifier	rv		2560823	0					
ANR	2561308	MemberAccess	upd -> cmap [ 0 ] . bitshf		2560823	1					
ANR	2561309	ArrayIndexing	upd -> cmap [ 0 ]		2560823	0					
ANR	2561310	PtrMemberAccess	upd -> cmap		2560823	0					
ANR	2561311	Identifier	upd		2560823	0					
ANR	2561312	Identifier	cmap		2560823	1					
ANR	2561313	PrimaryExpression	0		2560823	1					
ANR	2561314	Identifier	bitshf		2560823	1					
ANR	2561315	MemberAccess	upd -> cmap [ 0 ] . bitmsk		2560823	1					
ANR	2561316	ArrayIndexing	upd -> cmap [ 0 ]		2560823	0					
ANR	2561317	PtrMemberAccess	upd -> cmap		2560823	0					
ANR	2561318	Identifier	upd		2560823	0					
ANR	2561319	Identifier	cmap		2560823	1					
ANR	2561320	PrimaryExpression	0		2560823	1					
ANR	2561321	Identifier	bitmsk		2560823	1					
ANR	2561322	CastExpression	( double ) upd -> cmap [ 0 ] . bitmsk		2560823	1					
ANR	2561323	CastTarget	double		2560823	0					
ANR	2561324	MemberAccess	upd -> cmap [ 0 ] . bitmsk		2560823	1					
ANR	2561325	ArrayIndexing	upd -> cmap [ 0 ]		2560823	0					
ANR	2561326	PtrMemberAccess	upd -> cmap		2560823	0					
ANR	2561327	Identifier	upd		2560823	0					
ANR	2561328	Identifier	cmap		2560823	1					
ANR	2561329	PrimaryExpression	0		2560823	1					
ANR	2561330	Identifier	bitmsk		2560823	1					
ANR	2561331	Argument	( pdev -> color_info . depth + 3 ) >> 2		2560823	9					
ANR	2561332	ShiftExpression	( pdev -> color_info . depth + 3 ) >> 2		2560823	0		>>			
ANR	2561333	AdditiveExpression	pdev -> color_info . depth + 3		2560823	0		+			
ANR	2561334	MemberAccess	pdev -> color_info . depth		2560823	0					
ANR	2561335	PtrMemberAccess	pdev -> color_info		2560823	0					
ANR	2561336	Identifier	pdev		2560823	0					
ANR	2561337	Identifier	color_info		2560823	1					
ANR	2561338	Identifier	depth		2560823	1					
ANR	2561339	PrimaryExpression	3		2560823	1					
ANR	2561340	PrimaryExpression	2		2560823	1					
ANR	2561341	Argument	rv		2560823	10					
ANR	2561342	Identifier	rv		2560823	0					
ANR	2561343	ReturnStatement	return rv ;	2661:3:105076:105085	2560823	9	True				
ANR	2561344	Identifier	rv		2560823	0					
ANR	2561345	ReturnType	static gx_color_index		2560823	1					
ANR	2561346	Identifier	upd_rgb_ovcolor		2560823	2					
ANR	2561347	ParameterList	"gx_device * pdev , const gx_color_value cv [ ]"		2560823	3					
ANR	2561348	Parameter	gx_device * pdev	2588:16:102725:102739	2560823	0	True				
ANR	2561349	ParameterType	gx_device *		2560823	0					
ANR	2561350	Identifier	pdev		2560823	1					
ANR	2561351	Parameter	const gx_color_value cv [ ]	2588:33:102742:102766	2560823	1	True				
ANR	2561352	ParameterType	const gx_color_value [ ]		2560823	0					
ANR	2561353	Identifier	cv		2560823	1					
ANR	2561354	CFGEntryNode	ENTRY		2560823		True				
ANR	2561355	CFGExitNode	EXIT		2560823		True				
ANR	2561356	Symbol	rv		2560823						
ANR	2561357	Symbol	pdev -> color_info . depth		2560823						
ANR	2561358	Symbol	* upd -> cmap		2560823						
ANR	2561359	Symbol	pdev -> color_info		2560823						
ANR	2561360	Symbol	upd -> cmap [ 0 ] . bitshf		2560823						
ANR	2561361	Symbol	( ( upd_device * ) pdev ) -> upd		2560823						
ANR	2561362	Symbol	upd -> cmap		2560823						
ANR	2561363	Symbol	pdev		2560823						
ANR	2561364	Symbol	gx_no_color_index		2560823						
ANR	2561365	Symbol	* upd		2560823						
ANR	2561366	Symbol	pdev -> memory		2560823						
ANR	2561367	Symbol	upd -> cmap [ 2 ] . bitmsk		2560823						
ANR	2561368	Symbol	tmp		2560823						
ANR	2561369	Symbol	upd -> cmap [ 3 ] . bitshf		2560823						
ANR	2561370	Symbol	upd -> cmap [ 1 ] . bitmsk		2560823						
ANR	2561371	Symbol	upd -> cmap [ 2 ] . bitshf		2560823						
ANR	2561372	Symbol	b		2560823						
ANR	2561373	Symbol	upd -> cmap [ 3 ] . bitmsk		2560823						
ANR	2561374	Symbol	c		2560823						
ANR	2561375	Symbol	d		2560823						
ANR	2561376	Symbol	upd -> cmap [ 0 ] . bitmsk		2560823						
ANR	2561377	Symbol	g		2560823						
ANR	2561378	Symbol	upd		2560823						
ANR	2561379	Symbol	black		2560823						
ANR	2561380	Symbol	m		2560823						
ANR	2561381	Symbol	r		2560823						
ANR	2561382	Symbol	cv		2560823						
ANR	2561383	Symbol	upd -> cmap [ 1 ] . bitshf		2560823						
ANR	2561384	Symbol	gx_max_color_value		2560823						
ANR	2561385	Symbol	* pdev		2560823						
ANR	2561386	Symbol	y		2560823						
ANR	2561387	Symbol	* cv		2560823						
ANR	2561388	Symbol	upd_truncate		2560823						
ANR	2561389	Symbol	* * upd		2560823						
ANR	2561390	Function	upd_rgb_novcolor	2668:0:105314:107065							
ANR	2561391	FunctionDef	"upd_rgb_novcolor (gx_device * pdev , const gx_color_value cv [ ])"		2561390	0					
ANR	2561392	CompoundStatement		2670:0:105397:107065	2561390	0					
ANR	2561393	IdentifierDeclStatement	const upd_p upd = ( ( upd_device * ) pdev ) -> upd ;	2671:3:105402:105449	2561390	0	True				
ANR	2561394	IdentifierDecl	upd = ( ( upd_device * ) pdev ) -> upd		2561390	0					
ANR	2561395	IdentifierDeclType	const upd_p		2561390	0					
ANR	2561396	Identifier	upd		2561390	1					
ANR	2561397	AssignmentExpression	upd = ( ( upd_device * ) pdev ) -> upd		2561390	2		=			
ANR	2561398	Identifier	upd		2561390	0					
ANR	2561399	PtrMemberAccess	( ( upd_device * ) pdev ) -> upd		2561390	1					
ANR	2561400	CastExpression	( upd_device * ) pdev		2561390	0					
ANR	2561401	CastTarget	upd_device *		2561390	0					
ANR	2561402	Identifier	pdev		2561390	1					
ANR	2561403	Identifier	upd		2561390	1					
ANR	2561404	IdentifierDeclStatement	gx_color_index rv ;	2672:3:105454:105472	2561390	1	True				
ANR	2561405	IdentifierDecl	rv		2561390	0					
ANR	2561406	IdentifierDeclType	gx_color_index		2561390	0					
ANR	2561407	Identifier	rv		2561390	1					
ANR	2561408	IdentifierDeclStatement	"gx_color_value c , m , y , black ;"	2673:3:105477:105504	2561390	2	True				
ANR	2561409	IdentifierDecl	c		2561390	0					
ANR	2561410	IdentifierDeclType	gx_color_value		2561390	0					
ANR	2561411	Identifier	c		2561390	1					
ANR	2561412	IdentifierDecl	m		2561390	1					
ANR	2561413	IdentifierDeclType	gx_color_value		2561390	0					
ANR	2561414	Identifier	m		2561390	1					
ANR	2561415	IdentifierDecl	y		2561390	2					
ANR	2561416	IdentifierDeclType	gx_color_value		2561390	0					
ANR	2561417	Identifier	y		2561390	1					
ANR	2561418	IdentifierDecl	black		2561390	3					
ANR	2561419	IdentifierDeclType	gx_color_value		2561390	0					
ANR	2561420	Identifier	black		2561390	1					
ANR	2561421	IdentifierDeclStatement	"gx_color_value r , g , b ;"	2674:3:105509:105531	2561390	3	True				
ANR	2561422	IdentifierDecl	r		2561390	0					
ANR	2561423	IdentifierDeclType	gx_color_value		2561390	0					
ANR	2561424	Identifier	r		2561390	1					
ANR	2561425	IdentifierDecl	g		2561390	1					
ANR	2561426	IdentifierDeclType	gx_color_value		2561390	0					
ANR	2561427	Identifier	g		2561390	1					
ANR	2561428	IdentifierDecl	b		2561390	2					
ANR	2561429	IdentifierDeclType	gx_color_value		2561390	0					
ANR	2561430	Identifier	b		2561390	1					
ANR	2561431	ExpressionStatement	r = cv [ 0 ]	2675:3:105536:105545	2561390	4	True				
ANR	2561432	AssignmentExpression	r = cv [ 0 ]		2561390	0		=			
ANR	2561433	Identifier	r		2561390	0					
ANR	2561434	ArrayIndexing	cv [ 0 ]		2561390	1					
ANR	2561435	Identifier	cv		2561390	0					
ANR	2561436	PrimaryExpression	0		2561390	1					
ANR	2561437	ExpressionStatement	g = cv [ 1 ]	2675:14:105547:105556	2561390	5	True				
ANR	2561438	AssignmentExpression	g = cv [ 1 ]		2561390	0		=			
ANR	2561439	Identifier	g		2561390	0					
ANR	2561440	ArrayIndexing	cv [ 1 ]		2561390	1					
ANR	2561441	Identifier	cv		2561390	0					
ANR	2561442	PrimaryExpression	1		2561390	1					
ANR	2561443	ExpressionStatement	b = cv [ 2 ]	2675:25:105558:105567	2561390	6	True				
ANR	2561444	AssignmentExpression	b = cv [ 2 ]		2561390	0		=			
ANR	2561445	Identifier	b		2561390	0					
ANR	2561446	ArrayIndexing	cv [ 2 ]		2561390	1					
ANR	2561447	Identifier	cv		2561390	0					
ANR	2561448	PrimaryExpression	2		2561390	1					
ANR	2561449	IfStatement	if ( ( r == g ) && ( g == b ) )		2561390	7					
ANR	2561450	Condition	( r == g ) && ( g == b )	2677:6:105576:105595	2561390	0	True				
ANR	2561451	AndExpression	( r == g ) && ( g == b )		2561390	0		&&			
ANR	2561452	EqualityExpression	r == g		2561390	0		==			
ANR	2561453	Identifier	r		2561390	0					
ANR	2561454	Identifier	g		2561390	1					
ANR	2561455	EqualityExpression	g == b		2561390	1		==			
ANR	2561456	Identifier	g		2561390	0					
ANR	2561457	Identifier	b		2561390	1					
ANR	2561458	CompoundStatement		8:28:200:200	2561390	1					
ANR	2561459	ExpressionStatement	black = gx_max_color_value - r	2679:6:105607:105638	2561390	0	True				
ANR	2561460	AssignmentExpression	black = gx_max_color_value - r		2561390	0		=			
ANR	2561461	Identifier	black		2561390	0					
ANR	2561462	AdditiveExpression	gx_max_color_value - r		2561390	1		-			
ANR	2561463	Identifier	gx_max_color_value		2561390	0					
ANR	2561464	Identifier	r		2561390	1					
ANR	2561465	ExpressionStatement	"rv = upd_truncate ( upd , 0 , black )"	2680:6:105646:105680	2561390	1	True				
ANR	2561466	AssignmentExpression	"rv = upd_truncate ( upd , 0 , black )"		2561390	0		=			
ANR	2561467	Identifier	rv		2561390	0					
ANR	2561468	CallExpression	"upd_truncate ( upd , 0 , black )"		2561390	1					
ANR	2561469	Callee	upd_truncate		2561390	0					
ANR	2561470	Identifier	upd_truncate		2561390	0					
ANR	2561471	ArgumentList	upd		2561390	1					
ANR	2561472	Argument	upd		2561390	0					
ANR	2561473	Identifier	upd		2561390	0					
ANR	2561474	Argument	0		2561390	1					
ANR	2561475	PrimaryExpression	0		2561390	0					
ANR	2561476	Argument	black		2561390	2					
ANR	2561477	Identifier	black		2561390	0					
ANR	2561478	ExpressionStatement	c = m = y = 0	2681:6:105688:105701	2561390	2	True				
ANR	2561479	AssignmentExpression	c = m = y = 0		2561390	0		=			
ANR	2561480	Identifier	c		2561390	0					
ANR	2561481	AssignmentExpression	m = y = 0		2561390	1		=			
ANR	2561482	Identifier	m		2561390	0					
ANR	2561483	AssignmentExpression	y = 0		2561390	1		=			
ANR	2561484	Identifier	y		2561390	0					
ANR	2561485	PrimaryExpression	0		2561390	1					
ANR	2561486	ElseStatement	else		2561390	0					
ANR	2561487	CompoundStatement		14:10:316:316	2561390	0					
ANR	2561488	ExpressionStatement	c = gx_max_color_value - r	2685:6:105723:105749	2561390	0	True				
ANR	2561489	AssignmentExpression	c = gx_max_color_value - r		2561390	0		=			
ANR	2561490	Identifier	c		2561390	0					
ANR	2561491	AdditiveExpression	gx_max_color_value - r		2561390	1		-			
ANR	2561492	Identifier	gx_max_color_value		2561390	0					
ANR	2561493	Identifier	r		2561390	1					
ANR	2561494	ExpressionStatement	m = gx_max_color_value - g	2686:6:105757:105783	2561390	1	True				
ANR	2561495	AssignmentExpression	m = gx_max_color_value - g		2561390	0		=			
ANR	2561496	Identifier	m		2561390	0					
ANR	2561497	AdditiveExpression	gx_max_color_value - g		2561390	1		-			
ANR	2561498	Identifier	gx_max_color_value		2561390	0					
ANR	2561499	Identifier	g		2561390	1					
ANR	2561500	ExpressionStatement	y = gx_max_color_value - b	2687:6:105791:105817	2561390	2	True				
ANR	2561501	AssignmentExpression	y = gx_max_color_value - b		2561390	0		=			
ANR	2561502	Identifier	y		2561390	0					
ANR	2561503	AdditiveExpression	gx_max_color_value - b		2561390	1		-			
ANR	2561504	Identifier	gx_max_color_value		2561390	0					
ANR	2561505	Identifier	b		2561390	1					
ANR	2561506	ExpressionStatement	black = c < m ? c : m	2689:6:105826:105855	2561390	3	True				
ANR	2561507	AssignmentExpression	black = c < m ? c : m		2561390	0		=			
ANR	2561508	Identifier	black		2561390	0					
ANR	2561509	ConditionalExpression	c < m ? c : m		2561390	1					
ANR	2561510	Condition	c < m		2561390	0					
ANR	2561511	RelationalExpression	c < m		2561390	0		<			
ANR	2561512	Identifier	c		2561390	0					
ANR	2561513	Identifier	m		2561390	1					
ANR	2561514	Identifier	c		2561390	1					
ANR	2561515	Identifier	m		2561390	2					
ANR	2561516	ExpressionStatement	black = black < y ? black : y	2690:6:105863:105892	2561390	4	True				
ANR	2561517	AssignmentExpression	black = black < y ? black : y		2561390	0		=			
ANR	2561518	Identifier	black		2561390	0					
ANR	2561519	ConditionalExpression	black < y ? black : y		2561390	1					
ANR	2561520	Condition	black < y		2561390	0					
ANR	2561521	RelationalExpression	black < y		2561390	0		<			
ANR	2561522	Identifier	black		2561390	0					
ANR	2561523	Identifier	y		2561390	1					
ANR	2561524	Identifier	black		2561390	1					
ANR	2561525	Identifier	y		2561390	2					
ANR	2561526	ExpressionStatement	c = c - black	2691:6:105900:105917	2561390	5	True				
ANR	2561527	AssignmentExpression	c = c - black		2561390	0		=			
ANR	2561528	Identifier	c		2561390	0					
ANR	2561529	AdditiveExpression	c - black		2561390	1		-			
ANR	2561530	Identifier	c		2561390	0					
ANR	2561531	Identifier	black		2561390	1					
ANR	2561532	ExpressionStatement	m = m - black	2692:6:105925:105942	2561390	6	True				
ANR	2561533	AssignmentExpression	m = m - black		2561390	0		=			
ANR	2561534	Identifier	m		2561390	0					
ANR	2561535	AdditiveExpression	m - black		2561390	1		-			
ANR	2561536	Identifier	m		2561390	0					
ANR	2561537	Identifier	black		2561390	1					
ANR	2561538	ExpressionStatement	y = y - black	2693:6:105950:105967	2561390	7	True				
ANR	2561539	AssignmentExpression	y = y - black		2561390	0		=			
ANR	2561540	Identifier	y		2561390	0					
ANR	2561541	AdditiveExpression	y - black		2561390	1		-			
ANR	2561542	Identifier	y		2561390	0					
ANR	2561543	Identifier	black		2561390	1					
ANR	2561544	ExpressionStatement	"rv = upd_truncate ( upd , 0 , black ) | upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"	2695:6:105976:106093	2561390	8	True				
ANR	2561545	AssignmentExpression	"rv = upd_truncate ( upd , 0 , black ) | upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		2561390	0		=			
ANR	2561546	Identifier	rv		2561390	0					
ANR	2561547	InclusiveOrExpression	"upd_truncate ( upd , 0 , black ) | upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		2561390	1		|			
ANR	2561548	CallExpression	"upd_truncate ( upd , 0 , black )"		2561390	0					
ANR	2561549	Callee	upd_truncate		2561390	0					
ANR	2561550	Identifier	upd_truncate		2561390	0					
ANR	2561551	ArgumentList	upd		2561390	1					
ANR	2561552	Argument	upd		2561390	0					
ANR	2561553	Identifier	upd		2561390	0					
ANR	2561554	Argument	0		2561390	1					
ANR	2561555	PrimaryExpression	0		2561390	0					
ANR	2561556	Argument	black		2561390	2					
ANR	2561557	Identifier	black		2561390	0					
ANR	2561558	InclusiveOrExpression	"upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		2561390	1		|			
ANR	2561559	CallExpression	"upd_truncate ( upd , 1 , c )"		2561390	0					
ANR	2561560	Callee	upd_truncate		2561390	0					
ANR	2561561	Identifier	upd_truncate		2561390	0					
ANR	2561562	ArgumentList	upd		2561390	1					
ANR	2561563	Argument	upd		2561390	0					
ANR	2561564	Identifier	upd		2561390	0					
ANR	2561565	Argument	1		2561390	1					
ANR	2561566	PrimaryExpression	1		2561390	0					
ANR	2561567	Argument	c		2561390	2					
ANR	2561568	Identifier	c		2561390	0					
ANR	2561569	InclusiveOrExpression	"upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		2561390	1		|			
ANR	2561570	CallExpression	"upd_truncate ( upd , 2 , m )"		2561390	0					
ANR	2561571	Callee	upd_truncate		2561390	0					
ANR	2561572	Identifier	upd_truncate		2561390	0					
ANR	2561573	ArgumentList	upd		2561390	1					
ANR	2561574	Argument	upd		2561390	0					
ANR	2561575	Identifier	upd		2561390	0					
ANR	2561576	Argument	2		2561390	1					
ANR	2561577	PrimaryExpression	2		2561390	0					
ANR	2561578	Argument	m		2561390	2					
ANR	2561579	Identifier	m		2561390	0					
ANR	2561580	CallExpression	"upd_truncate ( upd , 3 , y )"		2561390	1					
ANR	2561581	Callee	upd_truncate		2561390	0					
ANR	2561582	Identifier	upd_truncate		2561390	0					
ANR	2561583	ArgumentList	upd		2561390	1					
ANR	2561584	Argument	upd		2561390	0					
ANR	2561585	Identifier	upd		2561390	0					
ANR	2561586	Argument	3		2561390	1					
ANR	2561587	PrimaryExpression	3		2561390	0					
ANR	2561588	Argument	y		2561390	2					
ANR	2561589	Identifier	y		2561390	0					
ANR	2561590	IfStatement	if ( rv == gx_no_color_index )		2561390	9					
ANR	2561591	Condition	rv == gx_no_color_index	2700:9:106181:106203	2561390	0	True				
ANR	2561592	EqualityExpression	rv == gx_no_color_index		2561390	0		==			
ANR	2561593	Identifier	rv		2561390	0					
ANR	2561594	Identifier	gx_no_color_index		2561390	1					
ANR	2561595	ExpressionStatement	rv ^= 1	2700:34:106206:106213	2561390	1	True				
ANR	2561596	AssignmentExpression	rv ^= 1		2561390	0		^=			
ANR	2561597	Identifier	rv		2561390	0					
ANR	2561598	PrimaryExpression	1		2561390	1					
ANR	2561599	ExpressionStatement	"errprintf ( pdev -> memory , ""rgb_ovcolor: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) r / ( double ) gx_max_color_value , 255.0 * ( double ) g / ( double ) gx_max_color_value , 255.0 * ( double ) b / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"	2704:2:106257:107041	2561390	8	True				
ANR	2561600	CallExpression	"errprintf ( pdev -> memory , ""rgb_ovcolor: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) r / ( double ) gx_max_color_value , 255.0 * ( double ) g / ( double ) gx_max_color_value , 255.0 * ( double ) b / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"		2561390	0					
ANR	2561601	Callee	errprintf		2561390	0					
ANR	2561602	Identifier	errprintf		2561390	0					
ANR	2561603	ArgumentList	pdev -> memory		2561390	1					
ANR	2561604	Argument	pdev -> memory		2561390	0					
ANR	2561605	PtrMemberAccess	pdev -> memory		2561390	0					
ANR	2561606	Identifier	pdev		2561390	0					
ANR	2561607	Identifier	memory		2561390	1					
ANR	2561608	Argument	"""rgb_ovcolor: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"""		2561390	1					
ANR	2561609	PrimaryExpression	"""rgb_ovcolor: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"""		2561390	0					
ANR	2561610	Argument	255.0 * ( double ) r / ( double ) gx_max_color_value		2561390	2					
ANR	2561611	MultiplicativeExpression	255.0 * ( double ) r / ( double ) gx_max_color_value		2561390	0		*			
ANR	2561612	PrimaryExpression	255.0		2561390	0					
ANR	2561613	MultiplicativeExpression	( double ) r / ( double ) gx_max_color_value		2561390	1		/			
ANR	2561614	CastExpression	( double ) r		2561390	0					
ANR	2561615	CastTarget	double		2561390	0					
ANR	2561616	Identifier	r		2561390	1					
ANR	2561617	CastExpression	( double ) gx_max_color_value		2561390	1					
ANR	2561618	CastTarget	double		2561390	0					
ANR	2561619	Identifier	gx_max_color_value		2561390	1					
ANR	2561620	Argument	255.0 * ( double ) g / ( double ) gx_max_color_value		2561390	3					
ANR	2561621	MultiplicativeExpression	255.0 * ( double ) g / ( double ) gx_max_color_value		2561390	0		*			
ANR	2561622	PrimaryExpression	255.0		2561390	0					
ANR	2561623	MultiplicativeExpression	( double ) g / ( double ) gx_max_color_value		2561390	1		/			
ANR	2561624	CastExpression	( double ) g		2561390	0					
ANR	2561625	CastTarget	double		2561390	0					
ANR	2561626	Identifier	g		2561390	1					
ANR	2561627	CastExpression	( double ) gx_max_color_value		2561390	1					
ANR	2561628	CastTarget	double		2561390	0					
ANR	2561629	Identifier	gx_max_color_value		2561390	1					
ANR	2561630	Argument	255.0 * ( double ) b / ( double ) gx_max_color_value		2561390	4					
ANR	2561631	MultiplicativeExpression	255.0 * ( double ) b / ( double ) gx_max_color_value		2561390	0		*			
ANR	2561632	PrimaryExpression	255.0		2561390	0					
ANR	2561633	MultiplicativeExpression	( double ) b / ( double ) gx_max_color_value		2561390	1		/			
ANR	2561634	CastExpression	( double ) b		2561390	0					
ANR	2561635	CastTarget	double		2561390	0					
ANR	2561636	Identifier	b		2561390	1					
ANR	2561637	CastExpression	( double ) gx_max_color_value		2561390	1					
ANR	2561638	CastTarget	double		2561390	0					
ANR	2561639	Identifier	gx_max_color_value		2561390	1					
ANR	2561640	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2561390	5					
ANR	2561641	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2561390	0		*			
ANR	2561642	PrimaryExpression	255.0		2561390	0					
ANR	2561643	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		2561390	1		/			
ANR	2561644	CastExpression	( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk )		2561390	0					
ANR	2561645	CastTarget	double		2561390	0					
ANR	2561646	BitAndExpression	( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk		2561390	1		&			
ANR	2561647	ShiftExpression	rv >> upd -> cmap [ 1 ] . bitshf		2561390	0		>>			
ANR	2561648	Identifier	rv		2561390	0					
ANR	2561649	MemberAccess	upd -> cmap [ 1 ] . bitshf		2561390	1					
ANR	2561650	ArrayIndexing	upd -> cmap [ 1 ]		2561390	0					
ANR	2561651	PtrMemberAccess	upd -> cmap		2561390	0					
ANR	2561652	Identifier	upd		2561390	0					
ANR	2561653	Identifier	cmap		2561390	1					
ANR	2561654	PrimaryExpression	1		2561390	1					
ANR	2561655	Identifier	bitshf		2561390	1					
ANR	2561656	MemberAccess	upd -> cmap [ 1 ] . bitmsk		2561390	1					
ANR	2561657	ArrayIndexing	upd -> cmap [ 1 ]		2561390	0					
ANR	2561658	PtrMemberAccess	upd -> cmap		2561390	0					
ANR	2561659	Identifier	upd		2561390	0					
ANR	2561660	Identifier	cmap		2561390	1					
ANR	2561661	PrimaryExpression	1		2561390	1					
ANR	2561662	Identifier	bitmsk		2561390	1					
ANR	2561663	CastExpression	( double ) upd -> cmap [ 1 ] . bitmsk		2561390	1					
ANR	2561664	CastTarget	double		2561390	0					
ANR	2561665	MemberAccess	upd -> cmap [ 1 ] . bitmsk		2561390	1					
ANR	2561666	ArrayIndexing	upd -> cmap [ 1 ]		2561390	0					
ANR	2561667	PtrMemberAccess	upd -> cmap		2561390	0					
ANR	2561668	Identifier	upd		2561390	0					
ANR	2561669	Identifier	cmap		2561390	1					
ANR	2561670	PrimaryExpression	1		2561390	1					
ANR	2561671	Identifier	bitmsk		2561390	1					
ANR	2561672	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2561390	6					
ANR	2561673	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2561390	0		*			
ANR	2561674	PrimaryExpression	255.0		2561390	0					
ANR	2561675	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		2561390	1		/			
ANR	2561676	CastExpression	( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk )		2561390	0					
ANR	2561677	CastTarget	double		2561390	0					
ANR	2561678	BitAndExpression	( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk		2561390	1		&			
ANR	2561679	ShiftExpression	rv >> upd -> cmap [ 2 ] . bitshf		2561390	0		>>			
ANR	2561680	Identifier	rv		2561390	0					
ANR	2561681	MemberAccess	upd -> cmap [ 2 ] . bitshf		2561390	1					
ANR	2561682	ArrayIndexing	upd -> cmap [ 2 ]		2561390	0					
ANR	2561683	PtrMemberAccess	upd -> cmap		2561390	0					
ANR	2561684	Identifier	upd		2561390	0					
ANR	2561685	Identifier	cmap		2561390	1					
ANR	2561686	PrimaryExpression	2		2561390	1					
ANR	2561687	Identifier	bitshf		2561390	1					
ANR	2561688	MemberAccess	upd -> cmap [ 2 ] . bitmsk		2561390	1					
ANR	2561689	ArrayIndexing	upd -> cmap [ 2 ]		2561390	0					
ANR	2561690	PtrMemberAccess	upd -> cmap		2561390	0					
ANR	2561691	Identifier	upd		2561390	0					
ANR	2561692	Identifier	cmap		2561390	1					
ANR	2561693	PrimaryExpression	2		2561390	1					
ANR	2561694	Identifier	bitmsk		2561390	1					
ANR	2561695	CastExpression	( double ) upd -> cmap [ 2 ] . bitmsk		2561390	1					
ANR	2561696	CastTarget	double		2561390	0					
ANR	2561697	MemberAccess	upd -> cmap [ 2 ] . bitmsk		2561390	1					
ANR	2561698	ArrayIndexing	upd -> cmap [ 2 ]		2561390	0					
ANR	2561699	PtrMemberAccess	upd -> cmap		2561390	0					
ANR	2561700	Identifier	upd		2561390	0					
ANR	2561701	Identifier	cmap		2561390	1					
ANR	2561702	PrimaryExpression	2		2561390	1					
ANR	2561703	Identifier	bitmsk		2561390	1					
ANR	2561704	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		2561390	7					
ANR	2561705	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		2561390	0		*			
ANR	2561706	PrimaryExpression	255.0		2561390	0					
ANR	2561707	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		2561390	1		/			
ANR	2561708	CastExpression	( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk )		2561390	0					
ANR	2561709	CastTarget	double		2561390	0					
ANR	2561710	BitAndExpression	( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk		2561390	1		&			
ANR	2561711	ShiftExpression	rv >> upd -> cmap [ 3 ] . bitshf		2561390	0		>>			
ANR	2561712	Identifier	rv		2561390	0					
ANR	2561713	MemberAccess	upd -> cmap [ 3 ] . bitshf		2561390	1					
ANR	2561714	ArrayIndexing	upd -> cmap [ 3 ]		2561390	0					
ANR	2561715	PtrMemberAccess	upd -> cmap		2561390	0					
ANR	2561716	Identifier	upd		2561390	0					
ANR	2561717	Identifier	cmap		2561390	1					
ANR	2561718	PrimaryExpression	3		2561390	1					
ANR	2561719	Identifier	bitshf		2561390	1					
ANR	2561720	MemberAccess	upd -> cmap [ 3 ] . bitmsk		2561390	1					
ANR	2561721	ArrayIndexing	upd -> cmap [ 3 ]		2561390	0					
ANR	2561722	PtrMemberAccess	upd -> cmap		2561390	0					
ANR	2561723	Identifier	upd		2561390	0					
ANR	2561724	Identifier	cmap		2561390	1					
ANR	2561725	PrimaryExpression	3		2561390	1					
ANR	2561726	Identifier	bitmsk		2561390	1					
ANR	2561727	CastExpression	( double ) upd -> cmap [ 3 ] . bitmsk		2561390	1					
ANR	2561728	CastTarget	double		2561390	0					
ANR	2561729	MemberAccess	upd -> cmap [ 3 ] . bitmsk		2561390	1					
ANR	2561730	ArrayIndexing	upd -> cmap [ 3 ]		2561390	0					
ANR	2561731	PtrMemberAccess	upd -> cmap		2561390	0					
ANR	2561732	Identifier	upd		2561390	0					
ANR	2561733	Identifier	cmap		2561390	1					
ANR	2561734	PrimaryExpression	3		2561390	1					
ANR	2561735	Identifier	bitmsk		2561390	1					
ANR	2561736	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2561390	8					
ANR	2561737	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2561390	0		*			
ANR	2561738	PrimaryExpression	255.0		2561390	0					
ANR	2561739	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		2561390	1		/			
ANR	2561740	CastExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk )		2561390	0					
ANR	2561741	CastTarget	double		2561390	0					
ANR	2561742	BitAndExpression	( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk		2561390	1		&			
ANR	2561743	ShiftExpression	rv >> upd -> cmap [ 0 ] . bitshf		2561390	0		>>			
ANR	2561744	Identifier	rv		2561390	0					
ANR	2561745	MemberAccess	upd -> cmap [ 0 ] . bitshf		2561390	1					
ANR	2561746	ArrayIndexing	upd -> cmap [ 0 ]		2561390	0					
ANR	2561747	PtrMemberAccess	upd -> cmap		2561390	0					
ANR	2561748	Identifier	upd		2561390	0					
ANR	2561749	Identifier	cmap		2561390	1					
ANR	2561750	PrimaryExpression	0		2561390	1					
ANR	2561751	Identifier	bitshf		2561390	1					
ANR	2561752	MemberAccess	upd -> cmap [ 0 ] . bitmsk		2561390	1					
ANR	2561753	ArrayIndexing	upd -> cmap [ 0 ]		2561390	0					
ANR	2561754	PtrMemberAccess	upd -> cmap		2561390	0					
ANR	2561755	Identifier	upd		2561390	0					
ANR	2561756	Identifier	cmap		2561390	1					
ANR	2561757	PrimaryExpression	0		2561390	1					
ANR	2561758	Identifier	bitmsk		2561390	1					
ANR	2561759	CastExpression	( double ) upd -> cmap [ 0 ] . bitmsk		2561390	1					
ANR	2561760	CastTarget	double		2561390	0					
ANR	2561761	MemberAccess	upd -> cmap [ 0 ] . bitmsk		2561390	1					
ANR	2561762	ArrayIndexing	upd -> cmap [ 0 ]		2561390	0					
ANR	2561763	PtrMemberAccess	upd -> cmap		2561390	0					
ANR	2561764	Identifier	upd		2561390	0					
ANR	2561765	Identifier	cmap		2561390	1					
ANR	2561766	PrimaryExpression	0		2561390	1					
ANR	2561767	Identifier	bitmsk		2561390	1					
ANR	2561768	Argument	( pdev -> color_info . depth + 3 ) >> 2		2561390	9					
ANR	2561769	ShiftExpression	( pdev -> color_info . depth + 3 ) >> 2		2561390	0		>>			
ANR	2561770	AdditiveExpression	pdev -> color_info . depth + 3		2561390	0		+			
ANR	2561771	MemberAccess	pdev -> color_info . depth		2561390	0					
ANR	2561772	PtrMemberAccess	pdev -> color_info		2561390	0					
ANR	2561773	Identifier	pdev		2561390	0					
ANR	2561774	Identifier	color_info		2561390	1					
ANR	2561775	Identifier	depth		2561390	1					
ANR	2561776	PrimaryExpression	3		2561390	1					
ANR	2561777	PrimaryExpression	2		2561390	1					
ANR	2561778	Argument	rv		2561390	10					
ANR	2561779	Identifier	rv		2561390	0					
ANR	2561780	ReturnStatement	return rv ;	2720:3:107054:107063	2561390	9	True				
ANR	2561781	Identifier	rv		2561390	0					
ANR	2561782	ReturnType	static gx_color_index		2561390	1					
ANR	2561783	Identifier	upd_rgb_novcolor		2561390	2					
ANR	2561784	ParameterList	"gx_device * pdev , const gx_color_value cv [ ]"		2561390	3					
ANR	2561785	Parameter	gx_device * pdev	2669:17:105353:105367	2561390	0	True				
ANR	2561786	ParameterType	gx_device *		2561390	0					
ANR	2561787	Identifier	pdev		2561390	1					
ANR	2561788	Parameter	const gx_color_value cv [ ]	2669:34:105370:105394	2561390	1	True				
ANR	2561789	ParameterType	const gx_color_value [ ]		2561390	0					
ANR	2561790	Identifier	cv		2561390	1					
ANR	2561791	CFGEntryNode	ENTRY		2561390		True				
ANR	2561792	CFGExitNode	EXIT		2561390		True				
ANR	2561793	Symbol	rv		2561390						
ANR	2561794	Symbol	pdev -> color_info . depth		2561390						
ANR	2561795	Symbol	* upd -> cmap		2561390						
ANR	2561796	Symbol	pdev -> color_info		2561390						
ANR	2561797	Symbol	upd -> cmap [ 0 ] . bitshf		2561390						
ANR	2561798	Symbol	( ( upd_device * ) pdev ) -> upd		2561390						
ANR	2561799	Symbol	upd -> cmap		2561390						
ANR	2561800	Symbol	pdev		2561390						
ANR	2561801	Symbol	gx_no_color_index		2561390						
ANR	2561802	Symbol	* upd		2561390						
ANR	2561803	Symbol	pdev -> memory		2561390						
ANR	2561804	Symbol	upd -> cmap [ 2 ] . bitmsk		2561390						
ANR	2561805	Symbol	upd -> cmap [ 3 ] . bitshf		2561390						
ANR	2561806	Symbol	upd -> cmap [ 1 ] . bitmsk		2561390						
ANR	2561807	Symbol	upd -> cmap [ 2 ] . bitshf		2561390						
ANR	2561808	Symbol	b		2561390						
ANR	2561809	Symbol	upd -> cmap [ 3 ] . bitmsk		2561390						
ANR	2561810	Symbol	c		2561390						
ANR	2561811	Symbol	upd -> cmap [ 0 ] . bitmsk		2561390						
ANR	2561812	Symbol	g		2561390						
ANR	2561813	Symbol	upd		2561390						
ANR	2561814	Symbol	black		2561390						
ANR	2561815	Symbol	m		2561390						
ANR	2561816	Symbol	r		2561390						
ANR	2561817	Symbol	cv		2561390						
ANR	2561818	Symbol	upd -> cmap [ 1 ] . bitshf		2561390						
ANR	2561819	Symbol	gx_max_color_value		2561390						
ANR	2561820	Symbol	* pdev		2561390						
ANR	2561821	Symbol	y		2561390						
ANR	2561822	Symbol	* cv		2561390						
ANR	2561823	Symbol	upd_truncate		2561390						
ANR	2561824	Symbol	* * upd		2561390						
ANR	2561825	Function	upd_truncate	2731:0:107514:108537							
ANR	2561826	FunctionDef	"upd_truncate (upd_pc upd , int i , gx_color_value v)"		2561825	0					
ANR	2561827	CompoundStatement		2732:48:107578:108537	2561825	0					
ANR	2561828	IdentifierDeclStatement	const updcmap_pc cmap = upd -> cmap + i ;	2733:3:107583:107620	2561825	0	True				
ANR	2561829	IdentifierDecl	cmap = upd -> cmap + i		2561825	0					
ANR	2561830	IdentifierDeclType	const updcmap_pc		2561825	0					
ANR	2561831	Identifier	cmap		2561825	1					
ANR	2561832	AssignmentExpression	cmap = upd -> cmap + i		2561825	2		=			
ANR	2561833	Identifier	cmap		2561825	0					
ANR	2561834	AdditiveExpression	upd -> cmap + i		2561825	1		+			
ANR	2561835	PtrMemberAccess	upd -> cmap		2561825	0					
ANR	2561836	Identifier	upd		2561825	0					
ANR	2561837	Identifier	cmap		2561825	1					
ANR	2561838	Identifier	i		2561825	1					
ANR	2561839	IdentifierDeclStatement	int32_t s ;	2734:3:107625:107644	2561825	1	True				
ANR	2561840	IdentifierDecl	s		2561825	0					
ANR	2561841	IdentifierDeclType	int32_t		2561825	0					
ANR	2561842	Identifier	s		2561825	1					
ANR	2561843	IdentifierDeclStatement	gx_color_value * p ;	2735:3:107665:107682	2561825	2	True				
ANR	2561844	IdentifierDecl	* p		2561825	0					
ANR	2561845	IdentifierDeclType	gx_color_value *		2561825	0					
ANR	2561846	Identifier	p		2561825	1					
ANR	2561847	IfStatement	if ( 0 == cmap -> bits )		2561825	3					
ANR	2561848	Condition	0 == cmap -> bits	2737:6:107711:107725	2561825	0	True				
ANR	2561849	EqualityExpression	0 == cmap -> bits		2561825	0		==			
ANR	2561850	PrimaryExpression	0		2561825	0					
ANR	2561851	PtrMemberAccess	cmap -> bits		2561825	1					
ANR	2561852	Identifier	cmap		2561825	0					
ANR	2561853	Identifier	bits		2561825	1					
ANR	2561854	CompoundStatement		6:23:149:149	2561825	1					
ANR	2561855	ExpressionStatement	v = 0	2739:6:107781:107786	2561825	0	True				
ANR	2561856	AssignmentExpression	v = 0		2561825	0		=			
ANR	2561857	Identifier	v		2561825	0					
ANR	2561858	PrimaryExpression	0		2561825	1					
ANR	2561859	ElseStatement	else		2561825	0					
ANR	2561860	IfStatement	if ( gx_color_value_bits > cmap -> bits )		2561825	0					
ANR	2561861	Condition	gx_color_value_bits > cmap -> bits	2741:13:107802:107833	2561825	0	True				
ANR	2561862	RelationalExpression	gx_color_value_bits > cmap -> bits		2561825	0		>			
ANR	2561863	Identifier	gx_color_value_bits		2561825	0					
ANR	2561864	PtrMemberAccess	cmap -> bits		2561825	1					
ANR	2561865	Identifier	cmap		2561825	0					
ANR	2561866	Identifier	bits		2561825	1					
ANR	2561867	CompoundStatement		10:47:257:257	2561825	1					
ANR	2561868	ExpressionStatement	p = cmap -> code + ( ( cmap -> bitmsk + 1 ) >> 1 )	2743:6:107869:107911	2561825	0	True				
ANR	2561869	AssignmentExpression	p = cmap -> code + ( ( cmap -> bitmsk + 1 ) >> 1 )		2561825	0		=			
ANR	2561870	Identifier	p		2561825	0					
ANR	2561871	AdditiveExpression	cmap -> code + ( ( cmap -> bitmsk + 1 ) >> 1 )		2561825	1		+			
ANR	2561872	PtrMemberAccess	cmap -> code		2561825	0					
ANR	2561873	Identifier	cmap		2561825	0					
ANR	2561874	Identifier	code		2561825	1					
ANR	2561875	ShiftExpression	( cmap -> bitmsk + 1 ) >> 1		2561825	1		>>			
ANR	2561876	AdditiveExpression	cmap -> bitmsk + 1		2561825	0		+			
ANR	2561877	PtrMemberAccess	cmap -> bitmsk		2561825	0					
ANR	2561878	Identifier	cmap		2561825	0					
ANR	2561879	Identifier	bitmsk		2561825	1					
ANR	2561880	PrimaryExpression	1		2561825	1					
ANR	2561881	PrimaryExpression	1		2561825	1					
ANR	2561882	ExpressionStatement	s = ( ( cmap -> bitmsk + 1 ) >> 2 )	2744:6:107919:107961	2561825	1	True				
ANR	2561883	AssignmentExpression	s = ( ( cmap -> bitmsk + 1 ) >> 2 )		2561825	0		=			
ANR	2561884	Identifier	s		2561825	0					
ANR	2561885	ShiftExpression	( cmap -> bitmsk + 1 ) >> 2		2561825	1		>>			
ANR	2561886	AdditiveExpression	cmap -> bitmsk + 1		2561825	0		+			
ANR	2561887	PtrMemberAccess	cmap -> bitmsk		2561825	0					
ANR	2561888	Identifier	cmap		2561825	0					
ANR	2561889	Identifier	bitmsk		2561825	1					
ANR	2561890	PrimaryExpression	1		2561825	1					
ANR	2561891	PrimaryExpression	2		2561825	1					
ANR	2561892	WhileStatement	while ( s > 0 )		2561825	2					
ANR	2561893	Condition	s > 0	2748:12:108024:108028	2561825	0	True				
ANR	2561894	RelationalExpression	s > 0		2561825	0		>			
ANR	2561895	Identifier	s		2561825	0					
ANR	2561896	PrimaryExpression	0		2561825	1					
ANR	2561897	CompoundStatement		17:19:452:452	2561825	1					
ANR	2561898	IfStatement	if ( v > * p )		2561825	0					
ANR	2561899	Condition	v > * p	2749:12:108045:108050	2561825	0	True				
ANR	2561900	RelationalExpression	v > * p		2561825	0		>			
ANR	2561901	Identifier	v		2561825	0					
ANR	2561902	UnaryOperationExpression	* p		2561825	1					
ANR	2561903	UnaryOperator	*		2561825	0					
ANR	2561904	Identifier	p		2561825	1					
ANR	2561905	CompoundStatement		18:20:474:474	2561825	1					
ANR	2561906	ExpressionStatement	p += s	2750:12:108095:108101	2561825	0	True				
ANR	2561907	AssignmentExpression	p += s		2561825	0		+=			
ANR	2561908	Identifier	p		2561825	0					
ANR	2561909	Identifier	s		2561825	1					
ANR	2561910	ElseStatement	else		2561825	0					
ANR	2561911	IfStatement	if ( v < p [ - 1 ] )		2561825	0					
ANR	2561912	Condition	v < p [ - 1 ]	2751:19:108122:108130	2561825	0	True				
ANR	2561913	RelationalExpression	v < p [ - 1 ]		2561825	0		<			
ANR	2561914	Identifier	v		2561825	0					
ANR	2561915	ArrayIndexing	p [ - 1 ]		2561825	1					
ANR	2561916	Identifier	p		2561825	0					
ANR	2561917	UnaryOperationExpression	- 1		2561825	1					
ANR	2561918	UnaryOperator	-		2561825	0					
ANR	2561919	PrimaryExpression	1		2561825	1					
ANR	2561920	CompoundStatement		20:30:554:554	2561825	1					
ANR	2561921	ExpressionStatement	p -= s	2752:12:108174:108180	2561825	0	True				
ANR	2561922	AssignmentExpression	p -= s		2561825	0		-=			
ANR	2561923	Identifier	p		2561825	0					
ANR	2561924	Identifier	s		2561825	1					
ANR	2561925	ElseStatement	else		2561825	0					
ANR	2561926	CompoundStatement		22:16:619:619	2561825	0					
ANR	2561927	IfStatement	if ( ( v - p [ - 1 ] ) < ( p [ 0 ] - v ) )		2561825	0					
ANR	2561928	Condition	( v - p [ - 1 ] ) < ( p [ 0 ] - v )	2755:15:108262:108281	2561825	0	True				
ANR	2561929	RelationalExpression	( v - p [ - 1 ] ) < ( p [ 0 ] - v )		2561825	0		<			
ANR	2561930	AdditiveExpression	v - p [ - 1 ]		2561825	0		-			
ANR	2561931	Identifier	v		2561825	0					
ANR	2561932	ArrayIndexing	p [ - 1 ]		2561825	1					
ANR	2561933	Identifier	p		2561825	0					
ANR	2561934	UnaryOperationExpression	- 1		2561825	1					
ANR	2561935	UnaryOperator	-		2561825	0					
ANR	2561936	PrimaryExpression	1		2561825	1					
ANR	2561937	AdditiveExpression	p [ 0 ] - v		2561825	1		-			
ANR	2561938	ArrayIndexing	p [ 0 ]		2561825	0					
ANR	2561939	Identifier	p		2561825	0					
ANR	2561940	PrimaryExpression	0		2561825	1					
ANR	2561941	Identifier	v		2561825	1					
ANR	2561942	ExpressionStatement	p -= 1	2755:37:108284:108290	2561825	1	True				
ANR	2561943	AssignmentExpression	p -= 1		2561825	0		-=			
ANR	2561944	Identifier	p		2561825	0					
ANR	2561945	PrimaryExpression	1		2561825	1					
ANR	2561946	BreakStatement	break ;	2756:12:108304:108309	2561825	1	True				
ANR	2561947	ExpressionStatement	s >>= 1	2758:9:108331:108338	2561825	1	True				
ANR	2561948	AssignmentExpression	s >>= 1		2561825	0		>>=			
ANR	2561949	Identifier	s		2561825	0					
ANR	2561950	PrimaryExpression	1		2561825	1					
ANR	2561951	IfStatement	if ( ( v - p [ - 1 ] ) < ( p [ 0 ] - v ) )		2561825	3					
ANR	2561952	Condition	( v - p [ - 1 ] ) < ( p [ 0 ] - v )	2760:9:108357:108376	2561825	0	True				
ANR	2561953	RelationalExpression	( v - p [ - 1 ] ) < ( p [ 0 ] - v )		2561825	0		<			
ANR	2561954	AdditiveExpression	v - p [ - 1 ]		2561825	0		-			
ANR	2561955	Identifier	v		2561825	0					
ANR	2561956	ArrayIndexing	p [ - 1 ]		2561825	1					
ANR	2561957	Identifier	p		2561825	0					
ANR	2561958	UnaryOperationExpression	- 1		2561825	1					
ANR	2561959	UnaryOperator	-		2561825	0					
ANR	2561960	PrimaryExpression	1		2561825	1					
ANR	2561961	AdditiveExpression	p [ 0 ] - v		2561825	1		-			
ANR	2561962	ArrayIndexing	p [ 0 ]		2561825	0					
ANR	2561963	Identifier	p		2561825	0					
ANR	2561964	PrimaryExpression	0		2561825	1					
ANR	2561965	Identifier	v		2561825	1					
ANR	2561966	ExpressionStatement	p -= 1	2760:31:108379:108385	2561825	1	True				
ANR	2561967	AssignmentExpression	p -= 1		2561825	0		-=			
ANR	2561968	Identifier	p		2561825	0					
ANR	2561969	PrimaryExpression	1		2561825	1					
ANR	2561970	ExpressionStatement	v = p - cmap -> code	2761:6:108393:108411	2561825	4	True				
ANR	2561971	AssignmentExpression	v = p - cmap -> code		2561825	0		=			
ANR	2561972	Identifier	v		2561825	0					
ANR	2561973	AdditiveExpression	p - cmap -> code		2561825	1		-			
ANR	2561974	Identifier	p		2561825	0					
ANR	2561975	PtrMemberAccess	cmap -> code		2561825	1					
ANR	2561976	Identifier	cmap		2561825	0					
ANR	2561977	Identifier	code		2561825	1					
ANR	2561978	IfStatement	if ( ! cmap -> rise )		2561825	4					
ANR	2561979	Condition	! cmap -> rise	2764:6:108425:108435	2561825	0	True				
ANR	2561980	UnaryOperationExpression	! cmap -> rise		2561825	0					
ANR	2561981	UnaryOperator	!		2561825	0					
ANR	2561982	PtrMemberAccess	cmap -> rise		2561825	1					
ANR	2561983	Identifier	cmap		2561825	0					
ANR	2561984	Identifier	rise		2561825	1					
ANR	2561985	ExpressionStatement	v = cmap -> bitmsk - v	2764:19:108438:108458	2561825	1	True				
ANR	2561986	AssignmentExpression	v = cmap -> bitmsk - v		2561825	0		=			
ANR	2561987	Identifier	v		2561825	0					
ANR	2561988	AdditiveExpression	cmap -> bitmsk - v		2561825	1		-			
ANR	2561989	PtrMemberAccess	cmap -> bitmsk		2561825	0					
ANR	2561990	Identifier	cmap		2561825	0					
ANR	2561991	Identifier	bitmsk		2561825	1					
ANR	2561992	Identifier	v		2561825	1					
ANR	2561993	ReturnStatement	return ( ( uint32_t ) v ) << cmap -> bitshf ;	2766:3:108498:108535	2561825	5	True				
ANR	2561994	ShiftExpression	( ( uint32_t ) v ) << cmap -> bitshf		2561825	0		<<			
ANR	2561995	CastExpression	( uint32_t ) v		2561825	0					
ANR	2561996	CastTarget	uint32_t		2561825	0					
ANR	2561997	Identifier	v		2561825	1					
ANR	2561998	PtrMemberAccess	cmap -> bitshf		2561825	1					
ANR	2561999	Identifier	cmap		2561825	0					
ANR	2562000	Identifier	bitshf		2561825	1					
ANR	2562001	ReturnType	static uint32_t		2561825	1					
ANR	2562002	Identifier	upd_truncate		2561825	2					
ANR	2562003	ParameterList	"upd_pc upd , int i , gx_color_value v"		2561825	3					
ANR	2562004	Parameter	upd_pc upd	2732:13:107543:107552	2561825	0	True				
ANR	2562005	ParameterType	upd_pc		2561825	0					
ANR	2562006	Identifier	upd		2561825	1					
ANR	2562007	Parameter	int i	2732:24:107554:107558	2561825	1	True				
ANR	2562008	ParameterType	int		2561825	0					
ANR	2562009	Identifier	i		2561825	1					
ANR	2562010	Parameter	gx_color_value v	2732:30:107560:107575	2561825	2	True				
ANR	2562011	ParameterType	gx_color_value		2561825	0					
ANR	2562012	Identifier	v		2561825	1					
ANR	2562013	CFGEntryNode	ENTRY		2561825		True				
ANR	2562014	CFGExitNode	EXIT		2561825		True				
ANR	2562015	Symbol	cmap -> code		2561825						
ANR	2562016	Symbol	cmap -> bitshf		2561825						
ANR	2562017	Symbol	upd		2561825						
ANR	2562018	Symbol	i		2561825						
ANR	2562019	Symbol	cmap -> bitmsk		2561825						
ANR	2562020	Symbol	cmap -> rise		2561825						
ANR	2562021	Symbol	upd -> cmap		2561825						
ANR	2562022	Symbol	p		2561825						
ANR	2562023	Symbol	* cmap		2561825						
ANR	2562024	Symbol	* upd		2561825						
ANR	2562025	Symbol	s		2561825						
ANR	2562026	Symbol	v		2561825						
ANR	2562027	Symbol	cmap		2561825						
ANR	2562028	Symbol	* p		2561825						
ANR	2562029	Symbol	cmap -> bits		2561825						
ANR	2562030	Symbol	gx_color_value_bits		2561825						
ANR	2562031	Function	upd_open_map	2773:0:108763:118334							
ANR	2562032	FunctionDef	upd_open_map (upd_device * udev)		2562031	0					
ANR	2562033	CompoundStatement		2775:0:108805:118334	2562031	0					
ANR	2562034	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	2776:3:108810:108844	2562031	0	True				
ANR	2562035	IdentifierDecl	upd = udev -> upd		2562031	0					
ANR	2562036	IdentifierDeclType	const upd_p		2562031	0					
ANR	2562037	Identifier	upd		2562031	1					
ANR	2562038	AssignmentExpression	upd = udev -> upd		2562031	2		=			
ANR	2562039	Identifier	upd		2562031	0					
ANR	2562040	PtrMemberAccess	udev -> upd		2562031	1					
ANR	2562041	Identifier	udev		2562031	0					
ANR	2562042	Identifier	upd		2562031	1					
ANR	2562043	IdentifierDeclStatement	int imap ;	2777:3:108849:108857	2562031	1	True				
ANR	2562044	IdentifierDecl	imap		2562031	0					
ANR	2562045	IdentifierDeclType	int		2562031	0					
ANR	2562046	Identifier	imap		2562031	1					
ANR	2562047	ForStatement	for ( imap = 0 ; UPD_CMAP_MAX > imap ; ++ imap )		2562031	2					
ANR	2562048	ForInit	imap = 0 ;	2780:7:108910:108918	2562031	0	True				
ANR	2562049	AssignmentExpression	imap = 0		2562031	0		=			
ANR	2562050	Identifier	imap		2562031	0					
ANR	2562051	PrimaryExpression	0		2562031	1					
ANR	2562052	Condition	UPD_CMAP_MAX > imap	2780:17:108920:108938	2562031	1	True				
ANR	2562053	RelationalExpression	UPD_CMAP_MAX > imap		2562031	0		>			
ANR	2562054	Identifier	UPD_CMAP_MAX		2562031	0					
ANR	2562055	Identifier	imap		2562031	1					
ANR	2562056	UnaryExpression	++ imap	2780:38:108941:108946	2562031	2	True				
ANR	2562057	IncDec	++		2562031	0					
ANR	2562058	Identifier	imap		2562031	1					
ANR	2562059	ExpressionStatement	upd -> cmap [ imap ] . code = NULL	2780:46:108949:108978	2562031	3	True				
ANR	2562060	AssignmentExpression	upd -> cmap [ imap ] . code = NULL		2562031	0		=			
ANR	2562061	MemberAccess	upd -> cmap [ imap ] . code		2562031	0					
ANR	2562062	ArrayIndexing	upd -> cmap [ imap ]		2562031	0					
ANR	2562063	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562064	Identifier	upd		2562031	0					
ANR	2562065	Identifier	cmap		2562031	1					
ANR	2562066	Identifier	imap		2562031	1					
ANR	2562067	Identifier	code		2562031	1					
ANR	2562068	Identifier	NULL		2562031	1					
ANR	2562069	ExpressionStatement	upd -> ncomp = 0	2781:3:108983:108997	2562031	3	True				
ANR	2562070	AssignmentExpression	upd -> ncomp = 0		2562031	0		=			
ANR	2562071	PtrMemberAccess	upd -> ncomp		2562031	0					
ANR	2562072	Identifier	upd		2562031	0					
ANR	2562073	Identifier	ncomp		2562031	1					
ANR	2562074	PrimaryExpression	0		2562031	1					
ANR	2562075	IfStatement	if ( B_ERROR & upd -> flags )		2562031	4					
ANR	2562076	Condition	B_ERROR & upd -> flags	2784:6:109046:109065	2562031	0	True				
ANR	2562077	BitAndExpression	B_ERROR & upd -> flags		2562031	0		&			
ANR	2562078	Identifier	B_ERROR		2562031	0					
ANR	2562079	PtrMemberAccess	upd -> flags		2562031	1					
ANR	2562080	Identifier	upd		2562031	0					
ANR	2562081	Identifier	flags		2562031	1					
ANR	2562082	ExpressionStatement	imap = 0	2784:31:109071:109079	2562031	1	True				
ANR	2562083	AssignmentExpression	imap = 0		2562031	0		=			
ANR	2562084	Identifier	imap		2562031	0					
ANR	2562085	PrimaryExpression	0		2562031	1					
ANR	2562086	IfStatement	if ( imap )		2562031	5					
ANR	2562087	Condition	imap	2787:6:109122:109125	2562031	0	True				
ANR	2562088	Identifier	imap		2562031	0					
ANR	2562089	CompoundStatement		13:12:322:322	2562031	1					
ANR	2562090	ForStatement	for ( imap = 0 ; UPD_CMAP_MAX > imap ; ++ imap )		2562031	0					
ANR	2562091	ForInit	imap = 0 ;	2788:10:109140:109148	2562031	0	True				
ANR	2562092	AssignmentExpression	imap = 0		2562031	0		=			
ANR	2562093	Identifier	imap		2562031	0					
ANR	2562094	PrimaryExpression	0		2562031	1					
ANR	2562095	Condition	UPD_CMAP_MAX > imap	2788:20:109150:109168	2562031	1	True				
ANR	2562096	RelationalExpression	UPD_CMAP_MAX > imap		2562031	0		>			
ANR	2562097	Identifier	UPD_CMAP_MAX		2562031	0					
ANR	2562098	Identifier	imap		2562031	1					
ANR	2562099	UnaryExpression	++ imap	2788:41:109171:109176	2562031	2	True				
ANR	2562100	IncDec	++		2562031	0					
ANR	2562101	Identifier	imap		2562031	1					
ANR	2562102	CompoundStatement		14:49:373:373	2562031	3					
ANR	2562103	ExpressionStatement	upd -> cmap [ imap ] . xfer = - 1	2789:9:109190:109215	2562031	0	True				
ANR	2562104	AssignmentExpression	upd -> cmap [ imap ] . xfer = - 1		2562031	0		=			
ANR	2562105	MemberAccess	upd -> cmap [ imap ] . xfer		2562031	0					
ANR	2562106	ArrayIndexing	upd -> cmap [ imap ]		2562031	0					
ANR	2562107	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562108	Identifier	upd		2562031	0					
ANR	2562109	Identifier	cmap		2562031	1					
ANR	2562110	Identifier	imap		2562031	1					
ANR	2562111	Identifier	xfer		2562031	1					
ANR	2562112	UnaryOperationExpression	- 1		2562031	1					
ANR	2562113	UnaryOperator	-		2562031	0					
ANR	2562114	PrimaryExpression	1		2562031	1					
ANR	2562115	ExpressionStatement	upd -> cmap [ imap ] . bits = 0	2790:9:109226:109251	2562031	1	True				
ANR	2562116	AssignmentExpression	upd -> cmap [ imap ] . bits = 0		2562031	0		=			
ANR	2562117	MemberAccess	upd -> cmap [ imap ] . bits		2562031	0					
ANR	2562118	ArrayIndexing	upd -> cmap [ imap ]		2562031	0					
ANR	2562119	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562120	Identifier	upd		2562031	0					
ANR	2562121	Identifier	cmap		2562031	1					
ANR	2562122	Identifier	imap		2562031	1					
ANR	2562123	Identifier	bits		2562031	1					
ANR	2562124	PrimaryExpression	0		2562031	1					
ANR	2562125	SwitchStatement	switch ( upd -> choice [ C_MAPPER ] )		2562031	1					
ANR	2562126	Condition	upd -> choice [ C_MAPPER ]	2792:13:109274:109294	2562031	0	True				
ANR	2562127	ArrayIndexing	upd -> choice [ C_MAPPER ]		2562031	0					
ANR	2562128	PtrMemberAccess	upd -> choice		2562031	0					
ANR	2562129	Identifier	upd		2562031	0					
ANR	2562130	Identifier	choice		2562031	1					
ANR	2562131	Identifier	C_MAPPER		2562031	1					
ANR	2562132	CompoundStatement		18:36:491:491	2562031	1					
ANR	2562133	Label	case MAP_GRAY :	2793:9:109308:109321	2562031	0	True				
ANR	2562134	Identifier	MAP_GRAY		2562031	0					
ANR	2562135	ExpressionStatement	upd -> cmap [ 0 ] . xfer = FA_WXFER	2794:12:109335:109363	2562031	1	True				
ANR	2562136	AssignmentExpression	upd -> cmap [ 0 ] . xfer = FA_WXFER		2562031	0		=			
ANR	2562137	MemberAccess	upd -> cmap [ 0 ] . xfer		2562031	0					
ANR	2562138	ArrayIndexing	upd -> cmap [ 0 ]		2562031	0					
ANR	2562139	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562140	Identifier	upd		2562031	0					
ANR	2562141	Identifier	cmap		2562031	1					
ANR	2562142	PrimaryExpression	0		2562031	1					
ANR	2562143	Identifier	xfer		2562031	1					
ANR	2562144	Identifier	FA_WXFER		2562031	1					
ANR	2562145	BreakStatement	break ;	2795:9:109374:109379	2562031	2	True				
ANR	2562146	Label	case MAP_RGBW :	2796:9:109390:109403	2562031	3	True				
ANR	2562147	Identifier	MAP_RGBW		2562031	0					
ANR	2562148	ExpressionStatement	upd -> cmap [ 0 ] . xfer = FA_WXFER	2797:12:109417:109445	2562031	4	True				
ANR	2562149	AssignmentExpression	upd -> cmap [ 0 ] . xfer = FA_WXFER		2562031	0		=			
ANR	2562150	MemberAccess	upd -> cmap [ 0 ] . xfer		2562031	0					
ANR	2562151	ArrayIndexing	upd -> cmap [ 0 ]		2562031	0					
ANR	2562152	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562153	Identifier	upd		2562031	0					
ANR	2562154	Identifier	cmap		2562031	1					
ANR	2562155	PrimaryExpression	0		2562031	1					
ANR	2562156	Identifier	xfer		2562031	1					
ANR	2562157	Identifier	FA_WXFER		2562031	1					
ANR	2562158	ExpressionStatement	upd -> cmap [ 1 ] . xfer = FA_RXFER	2798:12:109459:109487	2562031	5	True				
ANR	2562159	AssignmentExpression	upd -> cmap [ 1 ] . xfer = FA_RXFER		2562031	0		=			
ANR	2562160	MemberAccess	upd -> cmap [ 1 ] . xfer		2562031	0					
ANR	2562161	ArrayIndexing	upd -> cmap [ 1 ]		2562031	0					
ANR	2562162	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562163	Identifier	upd		2562031	0					
ANR	2562164	Identifier	cmap		2562031	1					
ANR	2562165	PrimaryExpression	1		2562031	1					
ANR	2562166	Identifier	xfer		2562031	1					
ANR	2562167	Identifier	FA_RXFER		2562031	1					
ANR	2562168	ExpressionStatement	upd -> cmap [ 2 ] . xfer = FA_GXFER	2799:12:109501:109529	2562031	6	True				
ANR	2562169	AssignmentExpression	upd -> cmap [ 2 ] . xfer = FA_GXFER		2562031	0		=			
ANR	2562170	MemberAccess	upd -> cmap [ 2 ] . xfer		2562031	0					
ANR	2562171	ArrayIndexing	upd -> cmap [ 2 ]		2562031	0					
ANR	2562172	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562173	Identifier	upd		2562031	0					
ANR	2562174	Identifier	cmap		2562031	1					
ANR	2562175	PrimaryExpression	2		2562031	1					
ANR	2562176	Identifier	xfer		2562031	1					
ANR	2562177	Identifier	FA_GXFER		2562031	1					
ANR	2562178	ExpressionStatement	upd -> cmap [ 3 ] . xfer = FA_BXFER	2800:12:109543:109571	2562031	7	True				
ANR	2562179	AssignmentExpression	upd -> cmap [ 3 ] . xfer = FA_BXFER		2562031	0		=			
ANR	2562180	MemberAccess	upd -> cmap [ 3 ] . xfer		2562031	0					
ANR	2562181	ArrayIndexing	upd -> cmap [ 3 ]		2562031	0					
ANR	2562182	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562183	Identifier	upd		2562031	0					
ANR	2562184	Identifier	cmap		2562031	1					
ANR	2562185	PrimaryExpression	3		2562031	1					
ANR	2562186	Identifier	xfer		2562031	1					
ANR	2562187	Identifier	FA_BXFER		2562031	1					
ANR	2562188	BreakStatement	break ;	2801:9:109582:109587	2562031	8	True				
ANR	2562189	Label	case MAP_RGB :	2802:9:109598:109610	2562031	9	True				
ANR	2562190	Identifier	MAP_RGB		2562031	0					
ANR	2562191	ExpressionStatement	upd -> cmap [ 0 ] . xfer = FA_RXFER	2803:12:109624:109652	2562031	10	True				
ANR	2562192	AssignmentExpression	upd -> cmap [ 0 ] . xfer = FA_RXFER		2562031	0		=			
ANR	2562193	MemberAccess	upd -> cmap [ 0 ] . xfer		2562031	0					
ANR	2562194	ArrayIndexing	upd -> cmap [ 0 ]		2562031	0					
ANR	2562195	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562196	Identifier	upd		2562031	0					
ANR	2562197	Identifier	cmap		2562031	1					
ANR	2562198	PrimaryExpression	0		2562031	1					
ANR	2562199	Identifier	xfer		2562031	1					
ANR	2562200	Identifier	FA_RXFER		2562031	1					
ANR	2562201	ExpressionStatement	upd -> cmap [ 1 ] . xfer = FA_GXFER	2804:12:109666:109694	2562031	11	True				
ANR	2562202	AssignmentExpression	upd -> cmap [ 1 ] . xfer = FA_GXFER		2562031	0		=			
ANR	2562203	MemberAccess	upd -> cmap [ 1 ] . xfer		2562031	0					
ANR	2562204	ArrayIndexing	upd -> cmap [ 1 ]		2562031	0					
ANR	2562205	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562206	Identifier	upd		2562031	0					
ANR	2562207	Identifier	cmap		2562031	1					
ANR	2562208	PrimaryExpression	1		2562031	1					
ANR	2562209	Identifier	xfer		2562031	1					
ANR	2562210	Identifier	FA_GXFER		2562031	1					
ANR	2562211	ExpressionStatement	upd -> cmap [ 2 ] . xfer = FA_BXFER	2805:12:109708:109736	2562031	12	True				
ANR	2562212	AssignmentExpression	upd -> cmap [ 2 ] . xfer = FA_BXFER		2562031	0		=			
ANR	2562213	MemberAccess	upd -> cmap [ 2 ] . xfer		2562031	0					
ANR	2562214	ArrayIndexing	upd -> cmap [ 2 ]		2562031	0					
ANR	2562215	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562216	Identifier	upd		2562031	0					
ANR	2562217	Identifier	cmap		2562031	1					
ANR	2562218	PrimaryExpression	2		2562031	1					
ANR	2562219	Identifier	xfer		2562031	1					
ANR	2562220	Identifier	FA_BXFER		2562031	1					
ANR	2562221	BreakStatement	break ;	2806:9:109747:109752	2562031	13	True				
ANR	2562222	Label	case MAP_CMYK :	2807:9:109763:109776	2562031	14	True				
ANR	2562223	Identifier	MAP_CMYK		2562031	0					
ANR	2562224	ExpressionStatement	upd -> cmap [ 0 ] . xfer = FA_KXFER	2808:12:109790:109818	2562031	15	True				
ANR	2562225	AssignmentExpression	upd -> cmap [ 0 ] . xfer = FA_KXFER		2562031	0		=			
ANR	2562226	MemberAccess	upd -> cmap [ 0 ] . xfer		2562031	0					
ANR	2562227	ArrayIndexing	upd -> cmap [ 0 ]		2562031	0					
ANR	2562228	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562229	Identifier	upd		2562031	0					
ANR	2562230	Identifier	cmap		2562031	1					
ANR	2562231	PrimaryExpression	0		2562031	1					
ANR	2562232	Identifier	xfer		2562031	1					
ANR	2562233	Identifier	FA_KXFER		2562031	1					
ANR	2562234	ExpressionStatement	upd -> cmap [ 1 ] . xfer = FA_CXFER	2809:12:109832:109860	2562031	16	True				
ANR	2562235	AssignmentExpression	upd -> cmap [ 1 ] . xfer = FA_CXFER		2562031	0		=			
ANR	2562236	MemberAccess	upd -> cmap [ 1 ] . xfer		2562031	0					
ANR	2562237	ArrayIndexing	upd -> cmap [ 1 ]		2562031	0					
ANR	2562238	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562239	Identifier	upd		2562031	0					
ANR	2562240	Identifier	cmap		2562031	1					
ANR	2562241	PrimaryExpression	1		2562031	1					
ANR	2562242	Identifier	xfer		2562031	1					
ANR	2562243	Identifier	FA_CXFER		2562031	1					
ANR	2562244	ExpressionStatement	upd -> cmap [ 2 ] . xfer = FA_MXFER	2810:12:109874:109902	2562031	17	True				
ANR	2562245	AssignmentExpression	upd -> cmap [ 2 ] . xfer = FA_MXFER		2562031	0		=			
ANR	2562246	MemberAccess	upd -> cmap [ 2 ] . xfer		2562031	0					
ANR	2562247	ArrayIndexing	upd -> cmap [ 2 ]		2562031	0					
ANR	2562248	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562249	Identifier	upd		2562031	0					
ANR	2562250	Identifier	cmap		2562031	1					
ANR	2562251	PrimaryExpression	2		2562031	1					
ANR	2562252	Identifier	xfer		2562031	1					
ANR	2562253	Identifier	FA_MXFER		2562031	1					
ANR	2562254	ExpressionStatement	upd -> cmap [ 3 ] . xfer = FA_YXFER	2811:12:109916:109944	2562031	18	True				
ANR	2562255	AssignmentExpression	upd -> cmap [ 3 ] . xfer = FA_YXFER		2562031	0		=			
ANR	2562256	MemberAccess	upd -> cmap [ 3 ] . xfer		2562031	0					
ANR	2562257	ArrayIndexing	upd -> cmap [ 3 ]		2562031	0					
ANR	2562258	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562259	Identifier	upd		2562031	0					
ANR	2562260	Identifier	cmap		2562031	1					
ANR	2562261	PrimaryExpression	3		2562031	1					
ANR	2562262	Identifier	xfer		2562031	1					
ANR	2562263	Identifier	FA_YXFER		2562031	1					
ANR	2562264	BreakStatement	break ;	2812:9:109955:109960	2562031	19	True				
ANR	2562265	Label	case MAP_CMYKGEN :	2813:9:109971:109987	2562031	20	True				
ANR	2562266	Identifier	MAP_CMYKGEN		2562031	0					
ANR	2562267	ExpressionStatement	upd -> cmap [ 0 ] . xfer = FA_KXFER	2814:12:110001:110029	2562031	21	True				
ANR	2562268	AssignmentExpression	upd -> cmap [ 0 ] . xfer = FA_KXFER		2562031	0		=			
ANR	2562269	MemberAccess	upd -> cmap [ 0 ] . xfer		2562031	0					
ANR	2562270	ArrayIndexing	upd -> cmap [ 0 ]		2562031	0					
ANR	2562271	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562272	Identifier	upd		2562031	0					
ANR	2562273	Identifier	cmap		2562031	1					
ANR	2562274	PrimaryExpression	0		2562031	1					
ANR	2562275	Identifier	xfer		2562031	1					
ANR	2562276	Identifier	FA_KXFER		2562031	1					
ANR	2562277	ExpressionStatement	upd -> cmap [ 1 ] . xfer = FA_CXFER	2815:12:110043:110071	2562031	22	True				
ANR	2562278	AssignmentExpression	upd -> cmap [ 1 ] . xfer = FA_CXFER		2562031	0		=			
ANR	2562279	MemberAccess	upd -> cmap [ 1 ] . xfer		2562031	0					
ANR	2562280	ArrayIndexing	upd -> cmap [ 1 ]		2562031	0					
ANR	2562281	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562282	Identifier	upd		2562031	0					
ANR	2562283	Identifier	cmap		2562031	1					
ANR	2562284	PrimaryExpression	1		2562031	1					
ANR	2562285	Identifier	xfer		2562031	1					
ANR	2562286	Identifier	FA_CXFER		2562031	1					
ANR	2562287	ExpressionStatement	upd -> cmap [ 2 ] . xfer = FA_MXFER	2816:12:110085:110113	2562031	23	True				
ANR	2562288	AssignmentExpression	upd -> cmap [ 2 ] . xfer = FA_MXFER		2562031	0		=			
ANR	2562289	MemberAccess	upd -> cmap [ 2 ] . xfer		2562031	0					
ANR	2562290	ArrayIndexing	upd -> cmap [ 2 ]		2562031	0					
ANR	2562291	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562292	Identifier	upd		2562031	0					
ANR	2562293	Identifier	cmap		2562031	1					
ANR	2562294	PrimaryExpression	2		2562031	1					
ANR	2562295	Identifier	xfer		2562031	1					
ANR	2562296	Identifier	FA_MXFER		2562031	1					
ANR	2562297	ExpressionStatement	upd -> cmap [ 3 ] . xfer = FA_YXFER	2817:12:110127:110155	2562031	24	True				
ANR	2562298	AssignmentExpression	upd -> cmap [ 3 ] . xfer = FA_YXFER		2562031	0		=			
ANR	2562299	MemberAccess	upd -> cmap [ 3 ] . xfer		2562031	0					
ANR	2562300	ArrayIndexing	upd -> cmap [ 3 ]		2562031	0					
ANR	2562301	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562302	Identifier	upd		2562031	0					
ANR	2562303	Identifier	cmap		2562031	1					
ANR	2562304	PrimaryExpression	3		2562031	1					
ANR	2562305	Identifier	xfer		2562031	1					
ANR	2562306	Identifier	FA_YXFER		2562031	1					
ANR	2562307	BreakStatement	break ;	2818:9:110166:110171	2562031	25	True				
ANR	2562308	Label	case MAP_RGBOV :	2819:9:110182:110196	2562031	26	True				
ANR	2562309	Identifier	MAP_RGBOV		2562031	0					
ANR	2562310	ExpressionStatement	upd -> cmap [ 0 ] . xfer = FA_KXFER	2820:12:110210:110238	2562031	27	True				
ANR	2562311	AssignmentExpression	upd -> cmap [ 0 ] . xfer = FA_KXFER		2562031	0		=			
ANR	2562312	MemberAccess	upd -> cmap [ 0 ] . xfer		2562031	0					
ANR	2562313	ArrayIndexing	upd -> cmap [ 0 ]		2562031	0					
ANR	2562314	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562315	Identifier	upd		2562031	0					
ANR	2562316	Identifier	cmap		2562031	1					
ANR	2562317	PrimaryExpression	0		2562031	1					
ANR	2562318	Identifier	xfer		2562031	1					
ANR	2562319	Identifier	FA_KXFER		2562031	1					
ANR	2562320	ExpressionStatement	upd -> cmap [ 1 ] . xfer = FA_CXFER	2821:12:110252:110280	2562031	28	True				
ANR	2562321	AssignmentExpression	upd -> cmap [ 1 ] . xfer = FA_CXFER		2562031	0		=			
ANR	2562322	MemberAccess	upd -> cmap [ 1 ] . xfer		2562031	0					
ANR	2562323	ArrayIndexing	upd -> cmap [ 1 ]		2562031	0					
ANR	2562324	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562325	Identifier	upd		2562031	0					
ANR	2562326	Identifier	cmap		2562031	1					
ANR	2562327	PrimaryExpression	1		2562031	1					
ANR	2562328	Identifier	xfer		2562031	1					
ANR	2562329	Identifier	FA_CXFER		2562031	1					
ANR	2562330	ExpressionStatement	upd -> cmap [ 2 ] . xfer = FA_MXFER	2822:12:110294:110322	2562031	29	True				
ANR	2562331	AssignmentExpression	upd -> cmap [ 2 ] . xfer = FA_MXFER		2562031	0		=			
ANR	2562332	MemberAccess	upd -> cmap [ 2 ] . xfer		2562031	0					
ANR	2562333	ArrayIndexing	upd -> cmap [ 2 ]		2562031	0					
ANR	2562334	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562335	Identifier	upd		2562031	0					
ANR	2562336	Identifier	cmap		2562031	1					
ANR	2562337	PrimaryExpression	2		2562031	1					
ANR	2562338	Identifier	xfer		2562031	1					
ANR	2562339	Identifier	FA_MXFER		2562031	1					
ANR	2562340	ExpressionStatement	upd -> cmap [ 3 ] . xfer = FA_YXFER	2823:12:110336:110364	2562031	30	True				
ANR	2562341	AssignmentExpression	upd -> cmap [ 3 ] . xfer = FA_YXFER		2562031	0		=			
ANR	2562342	MemberAccess	upd -> cmap [ 3 ] . xfer		2562031	0					
ANR	2562343	ArrayIndexing	upd -> cmap [ 3 ]		2562031	0					
ANR	2562344	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562345	Identifier	upd		2562031	0					
ANR	2562346	Identifier	cmap		2562031	1					
ANR	2562347	PrimaryExpression	3		2562031	1					
ANR	2562348	Identifier	xfer		2562031	1					
ANR	2562349	Identifier	FA_YXFER		2562031	1					
ANR	2562350	BreakStatement	break ;	2824:9:110375:110380	2562031	31	True				
ANR	2562351	Label	case MAP_RGBNOV :	2825:9:110391:110406	2562031	32	True				
ANR	2562352	Identifier	MAP_RGBNOV		2562031	0					
ANR	2562353	ExpressionStatement	upd -> cmap [ 0 ] . xfer = FA_KXFER	2826:12:110420:110448	2562031	33	True				
ANR	2562354	AssignmentExpression	upd -> cmap [ 0 ] . xfer = FA_KXFER		2562031	0		=			
ANR	2562355	MemberAccess	upd -> cmap [ 0 ] . xfer		2562031	0					
ANR	2562356	ArrayIndexing	upd -> cmap [ 0 ]		2562031	0					
ANR	2562357	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562358	Identifier	upd		2562031	0					
ANR	2562359	Identifier	cmap		2562031	1					
ANR	2562360	PrimaryExpression	0		2562031	1					
ANR	2562361	Identifier	xfer		2562031	1					
ANR	2562362	Identifier	FA_KXFER		2562031	1					
ANR	2562363	ExpressionStatement	upd -> cmap [ 1 ] . xfer = FA_CXFER	2827:12:110462:110490	2562031	34	True				
ANR	2562364	AssignmentExpression	upd -> cmap [ 1 ] . xfer = FA_CXFER		2562031	0		=			
ANR	2562365	MemberAccess	upd -> cmap [ 1 ] . xfer		2562031	0					
ANR	2562366	ArrayIndexing	upd -> cmap [ 1 ]		2562031	0					
ANR	2562367	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562368	Identifier	upd		2562031	0					
ANR	2562369	Identifier	cmap		2562031	1					
ANR	2562370	PrimaryExpression	1		2562031	1					
ANR	2562371	Identifier	xfer		2562031	1					
ANR	2562372	Identifier	FA_CXFER		2562031	1					
ANR	2562373	ExpressionStatement	upd -> cmap [ 2 ] . xfer = FA_MXFER	2828:12:110504:110532	2562031	35	True				
ANR	2562374	AssignmentExpression	upd -> cmap [ 2 ] . xfer = FA_MXFER		2562031	0		=			
ANR	2562375	MemberAccess	upd -> cmap [ 2 ] . xfer		2562031	0					
ANR	2562376	ArrayIndexing	upd -> cmap [ 2 ]		2562031	0					
ANR	2562377	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562378	Identifier	upd		2562031	0					
ANR	2562379	Identifier	cmap		2562031	1					
ANR	2562380	PrimaryExpression	2		2562031	1					
ANR	2562381	Identifier	xfer		2562031	1					
ANR	2562382	Identifier	FA_MXFER		2562031	1					
ANR	2562383	ExpressionStatement	upd -> cmap [ 3 ] . xfer = FA_YXFER	2829:12:110546:110574	2562031	36	True				
ANR	2562384	AssignmentExpression	upd -> cmap [ 3 ] . xfer = FA_YXFER		2562031	0		=			
ANR	2562385	MemberAccess	upd -> cmap [ 3 ] . xfer		2562031	0					
ANR	2562386	ArrayIndexing	upd -> cmap [ 3 ]		2562031	0					
ANR	2562387	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562388	Identifier	upd		2562031	0					
ANR	2562389	Identifier	cmap		2562031	1					
ANR	2562390	PrimaryExpression	3		2562031	1					
ANR	2562391	Identifier	xfer		2562031	1					
ANR	2562392	Identifier	FA_YXFER		2562031	1					
ANR	2562393	BreakStatement	break ;	2830:9:110585:110590	2562031	37	True				
ANR	2562394	Label	default :	2831:9:110601:110608	2562031	38	True				
ANR	2562395	Identifier	default		2562031	0					
ANR	2562396	IfStatement	if ( upd_choice [ C_MAPPER ] [ 0 ] )		2562031	39					
ANR	2562397	Condition	upd_choice [ C_MAPPER ] [ 0 ]	2833:18:110669:110691	2562031	0	True				
ANR	2562398	ArrayIndexing	upd_choice [ C_MAPPER ] [ 0 ]		2562031	0					
ANR	2562399	ArrayIndexing	upd_choice [ C_MAPPER ]		2562031	0					
ANR	2562400	Identifier	upd_choice		2562031	0					
ANR	2562401	Identifier	C_MAPPER		2562031	1					
ANR	2562402	PrimaryExpression	0		2562031	1					
ANR	2562403	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_map: unsupported %s=%d\\n"" , upd_choice [ C_MAPPER ] [ 0 ] , upd -> choice [ C_MAPPER ] )"	2834:18:110712:110861	2562031	1	True				
ANR	2562404	CallExpression	"errprintf ( udev -> memory , ""upd_open_map: unsupported %s=%d\\n"" , upd_choice [ C_MAPPER ] [ 0 ] , upd -> choice [ C_MAPPER ] )"		2562031	0					
ANR	2562405	Callee	errprintf		2562031	0					
ANR	2562406	Identifier	errprintf		2562031	0					
ANR	2562407	ArgumentList	udev -> memory		2562031	1					
ANR	2562408	Argument	udev -> memory		2562031	0					
ANR	2562409	PtrMemberAccess	udev -> memory		2562031	0					
ANR	2562410	Identifier	udev		2562031	0					
ANR	2562411	Identifier	memory		2562031	1					
ANR	2562412	Argument	"""upd_open_map: unsupported %s=%d\\n"""		2562031	1					
ANR	2562413	PrimaryExpression	"""upd_open_map: unsupported %s=%d\\n"""		2562031	0					
ANR	2562414	Argument	upd_choice [ C_MAPPER ] [ 0 ]		2562031	2					
ANR	2562415	ArrayIndexing	upd_choice [ C_MAPPER ] [ 0 ]		2562031	0					
ANR	2562416	ArrayIndexing	upd_choice [ C_MAPPER ]		2562031	0					
ANR	2562417	Identifier	upd_choice		2562031	0					
ANR	2562418	Identifier	C_MAPPER		2562031	1					
ANR	2562419	PrimaryExpression	0		2562031	1					
ANR	2562420	Argument	upd -> choice [ C_MAPPER ]		2562031	3					
ANR	2562421	ArrayIndexing	upd -> choice [ C_MAPPER ]		2562031	0					
ANR	2562422	PtrMemberAccess	upd -> choice		2562031	0					
ANR	2562423	Identifier	upd		2562031	0					
ANR	2562424	Identifier	choice		2562031	1					
ANR	2562425	Identifier	C_MAPPER		2562031	1					
ANR	2562426	ElseStatement	else		2562031	0					
ANR	2562427	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_map: unsupported choce[%d]=%d\\n"" , C_MAPPER , upd -> choice [ C_MAPPER ] )"	2838:18:110901:111042	2562031	0	True				
ANR	2562428	CallExpression	"errprintf ( udev -> memory , ""upd_open_map: unsupported choce[%d]=%d\\n"" , C_MAPPER , upd -> choice [ C_MAPPER ] )"		2562031	0					
ANR	2562429	Callee	errprintf		2562031	0					
ANR	2562430	Identifier	errprintf		2562031	0					
ANR	2562431	ArgumentList	udev -> memory		2562031	1					
ANR	2562432	Argument	udev -> memory		2562031	0					
ANR	2562433	PtrMemberAccess	udev -> memory		2562031	0					
ANR	2562434	Identifier	udev		2562031	0					
ANR	2562435	Identifier	memory		2562031	1					
ANR	2562436	Argument	"""upd_open_map: unsupported choce[%d]=%d\\n"""		2562031	1					
ANR	2562437	PrimaryExpression	"""upd_open_map: unsupported choce[%d]=%d\\n"""		2562031	0					
ANR	2562438	Argument	C_MAPPER		2562031	2					
ANR	2562439	Identifier	C_MAPPER		2562031	0					
ANR	2562440	Argument	upd -> choice [ C_MAPPER ]		2562031	3					
ANR	2562441	ArrayIndexing	upd -> choice [ C_MAPPER ]		2562031	0					
ANR	2562442	PtrMemberAccess	upd -> choice		2562031	0					
ANR	2562443	Identifier	upd		2562031	0					
ANR	2562444	Identifier	choice		2562031	1					
ANR	2562445	Identifier	C_MAPPER		2562031	1					
ANR	2562446	ExpressionStatement	imap = 0	2842:12:111063:111071	2562031	40	True				
ANR	2562447	AssignmentExpression	imap = 0		2562031	0		=			
ANR	2562448	Identifier	imap		2562031	0					
ANR	2562449	PrimaryExpression	0		2562031	1					
ANR	2562450	BreakStatement	break ;	2843:9:111082:111087	2562031	41	True				
ANR	2562451	IfStatement	if ( imap )		2562031	6					
ANR	2562452	Condition	imap	2849:6:111173:111176	2562031	0	True				
ANR	2562453	Identifier	imap		2562031	0					
ANR	2562454	CompoundStatement		80:6:2495:2514	2562031	1					
ANR	2562455	IdentifierDeclStatement	"uint32_t used = 0 , bitmsk ;"	2852:6:111262:111286	2562031	0	True				
ANR	2562456	IdentifierDecl	used = 0		2562031	0					
ANR	2562457	IdentifierDeclType	uint32_t		2562031	0					
ANR	2562458	Identifier	used		2562031	1					
ANR	2562459	AssignmentExpression	used = 0		2562031	2		=			
ANR	2562460	Identifier	used		2562031	0					
ANR	2562461	PrimaryExpression	0		2562031	1					
ANR	2562462	IdentifierDecl	bitmsk		2562031	1					
ANR	2562463	IdentifierDeclType	uint32_t		2562031	0					
ANR	2562464	Identifier	bitmsk		2562031	1					
ANR	2562465	IdentifierDeclStatement	bool success = true ;	2854:6:111301:111320	2562031	1	True				
ANR	2562466	IdentifierDecl	success = true		2562031	0					
ANR	2562467	IdentifierDeclType	bool		2562031	0					
ANR	2562468	Identifier	success		2562031	1					
ANR	2562469	AssignmentExpression	success = true		2562031	2		=			
ANR	2562470	Identifier	true		2562031	0					
ANR	2562471	Identifier	true		2562031	1					
ANR	2562472	ForStatement	for ( imap = 0 ; UPD_CMAP_MAX > imap ; ++ imap )		2562031	2					
ANR	2562473	ForInit	imap = 0 ;	2856:10:111333:111341	2562031	0	True				
ANR	2562474	AssignmentExpression	imap = 0		2562031	0		=			
ANR	2562475	Identifier	imap		2562031	0					
ANR	2562476	PrimaryExpression	0		2562031	1					
ANR	2562477	Condition	UPD_CMAP_MAX > imap	2856:20:111343:111361	2562031	1	True				
ANR	2562478	RelationalExpression	UPD_CMAP_MAX > imap		2562031	0		>			
ANR	2562479	Identifier	UPD_CMAP_MAX		2562031	0					
ANR	2562480	Identifier	imap		2562031	1					
ANR	2562481	UnaryExpression	++ imap	2856:41:111364:111369	2562031	2	True				
ANR	2562482	IncDec	++		2562031	0					
ANR	2562483	Identifier	imap		2562031	1					
ANR	2562484	CompoundStatement		82:49:2566:2566	2562031	3					
ANR	2562485	IfStatement	if ( 0 > upd -> cmap [ imap ] . xfer )		2562031	0					
ANR	2562486	Condition	0 > upd -> cmap [ imap ] . xfer	2857:12:111386:111409	2562031	0	True				
ANR	2562487	RelationalExpression	0 > upd -> cmap [ imap ] . xfer		2562031	0		>			
ANR	2562488	PrimaryExpression	0		2562031	0					
ANR	2562489	MemberAccess	upd -> cmap [ imap ] . xfer		2562031	1					
ANR	2562490	ArrayIndexing	upd -> cmap [ imap ]		2562031	0					
ANR	2562491	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562492	Identifier	upd		2562031	0					
ANR	2562493	Identifier	cmap		2562031	1					
ANR	2562494	Identifier	imap		2562031	1					
ANR	2562495	Identifier	xfer		2562031	1					
ANR	2562496	ContinueStatement	continue ;	2857:38:111412:111420	2562031	1	True				
ANR	2562497	IfStatement	if ( ( 0 > upd -> int_a [ IA_COMPBITS ] . data [ imap ] ) || ( gx_color_value_bits < upd -> int_a [ IA_COMPBITS ] . data [ imap ] ) || ( 0 > upd -> int_a [ IA_COMPSHIFT ] . data [ imap ] ) || ( upd -> int_a [ IA_COMPBITS ] . data [ imap ] > ( udev -> color_info . depth - upd -> int_a [ IA_COMPSHIFT ] . data [ imap ] ) ) )		2562031	1					
ANR	2562498	Condition	( 0 > upd -> int_a [ IA_COMPBITS ] . data [ imap ] ) || ( gx_color_value_bits < upd -> int_a [ IA_COMPBITS ] . data [ imap ] ) || ( 0 > upd -> int_a [ IA_COMPSHIFT ] . data [ imap ] ) || ( upd -> int_a [ IA_COMPBITS ] . data [ imap ] > ( udev -> color_info . depth - upd -> int_a [ IA_COMPSHIFT ] . data [ imap ] ) )	2859:12:111435:111779	2562031	0	True				
ANR	2562499	OrExpression	( 0 > upd -> int_a [ IA_COMPBITS ] . data [ imap ] ) || ( gx_color_value_bits < upd -> int_a [ IA_COMPBITS ] . data [ imap ] ) || ( 0 > upd -> int_a [ IA_COMPSHIFT ] . data [ imap ] ) || ( upd -> int_a [ IA_COMPBITS ] . data [ imap ] > ( udev -> color_info . depth - upd -> int_a [ IA_COMPSHIFT ] . data [ imap ] ) )		2562031	0		||			
ANR	2562500	RelationalExpression	0 > upd -> int_a [ IA_COMPBITS ] . data [ imap ]		2562031	0		>			
ANR	2562501	PrimaryExpression	0		2562031	0					
ANR	2562502	ArrayIndexing	upd -> int_a [ IA_COMPBITS ] . data [ imap ]		2562031	1					
ANR	2562503	MemberAccess	upd -> int_a [ IA_COMPBITS ] . data		2562031	0					
ANR	2562504	ArrayIndexing	upd -> int_a [ IA_COMPBITS ]		2562031	0					
ANR	2562505	PtrMemberAccess	upd -> int_a		2562031	0					
ANR	2562506	Identifier	upd		2562031	0					
ANR	2562507	Identifier	int_a		2562031	1					
ANR	2562508	Identifier	IA_COMPBITS		2562031	1					
ANR	2562509	Identifier	data		2562031	1					
ANR	2562510	Identifier	imap		2562031	1					
ANR	2562511	OrExpression	( gx_color_value_bits < upd -> int_a [ IA_COMPBITS ] . data [ imap ] ) || ( 0 > upd -> int_a [ IA_COMPSHIFT ] . data [ imap ] ) || ( upd -> int_a [ IA_COMPBITS ] . data [ imap ] > ( udev -> color_info . depth - upd -> int_a [ IA_COMPSHIFT ] . data [ imap ] ) )		2562031	1		||			
ANR	2562512	RelationalExpression	gx_color_value_bits < upd -> int_a [ IA_COMPBITS ] . data [ imap ]		2562031	0		<			
ANR	2562513	Identifier	gx_color_value_bits		2562031	0					
ANR	2562514	ArrayIndexing	upd -> int_a [ IA_COMPBITS ] . data [ imap ]		2562031	1					
ANR	2562515	MemberAccess	upd -> int_a [ IA_COMPBITS ] . data		2562031	0					
ANR	2562516	ArrayIndexing	upd -> int_a [ IA_COMPBITS ]		2562031	0					
ANR	2562517	PtrMemberAccess	upd -> int_a		2562031	0					
ANR	2562518	Identifier	upd		2562031	0					
ANR	2562519	Identifier	int_a		2562031	1					
ANR	2562520	Identifier	IA_COMPBITS		2562031	1					
ANR	2562521	Identifier	data		2562031	1					
ANR	2562522	Identifier	imap		2562031	1					
ANR	2562523	OrExpression	( 0 > upd -> int_a [ IA_COMPSHIFT ] . data [ imap ] ) || ( upd -> int_a [ IA_COMPBITS ] . data [ imap ] > ( udev -> color_info . depth - upd -> int_a [ IA_COMPSHIFT ] . data [ imap ] ) )		2562031	1		||			
ANR	2562524	RelationalExpression	0 > upd -> int_a [ IA_COMPSHIFT ] . data [ imap ]		2562031	0		>			
ANR	2562525	PrimaryExpression	0		2562031	0					
ANR	2562526	ArrayIndexing	upd -> int_a [ IA_COMPSHIFT ] . data [ imap ]		2562031	1					
ANR	2562527	MemberAccess	upd -> int_a [ IA_COMPSHIFT ] . data		2562031	0					
ANR	2562528	ArrayIndexing	upd -> int_a [ IA_COMPSHIFT ]		2562031	0					
ANR	2562529	PtrMemberAccess	upd -> int_a		2562031	0					
ANR	2562530	Identifier	upd		2562031	0					
ANR	2562531	Identifier	int_a		2562031	1					
ANR	2562532	Identifier	IA_COMPSHIFT		2562031	1					
ANR	2562533	Identifier	data		2562031	1					
ANR	2562534	Identifier	imap		2562031	1					
ANR	2562535	RelationalExpression	upd -> int_a [ IA_COMPBITS ] . data [ imap ] > ( udev -> color_info . depth - upd -> int_a [ IA_COMPSHIFT ] . data [ imap ] )		2562031	1		>			
ANR	2562536	ArrayIndexing	upd -> int_a [ IA_COMPBITS ] . data [ imap ]		2562031	0					
ANR	2562537	MemberAccess	upd -> int_a [ IA_COMPBITS ] . data		2562031	0					
ANR	2562538	ArrayIndexing	upd -> int_a [ IA_COMPBITS ]		2562031	0					
ANR	2562539	PtrMemberAccess	upd -> int_a		2562031	0					
ANR	2562540	Identifier	upd		2562031	0					
ANR	2562541	Identifier	int_a		2562031	1					
ANR	2562542	Identifier	IA_COMPBITS		2562031	1					
ANR	2562543	Identifier	data		2562031	1					
ANR	2562544	Identifier	imap		2562031	1					
ANR	2562545	AdditiveExpression	udev -> color_info . depth - upd -> int_a [ IA_COMPSHIFT ] . data [ imap ]		2562031	1		-			
ANR	2562546	MemberAccess	udev -> color_info . depth		2562031	0					
ANR	2562547	PtrMemberAccess	udev -> color_info		2562031	0					
ANR	2562548	Identifier	udev		2562031	0					
ANR	2562549	Identifier	color_info		2562031	1					
ANR	2562550	Identifier	depth		2562031	1					
ANR	2562551	ArrayIndexing	upd -> int_a [ IA_COMPSHIFT ] . data [ imap ]		2562031	1					
ANR	2562552	MemberAccess	upd -> int_a [ IA_COMPSHIFT ] . data		2562031	0					
ANR	2562553	ArrayIndexing	upd -> int_a [ IA_COMPSHIFT ]		2562031	0					
ANR	2562554	PtrMemberAccess	upd -> int_a		2562031	0					
ANR	2562555	Identifier	upd		2562031	0					
ANR	2562556	Identifier	int_a		2562031	1					
ANR	2562557	Identifier	IA_COMPSHIFT		2562031	1					
ANR	2562558	Identifier	data		2562031	1					
ANR	2562559	Identifier	imap		2562031	1					
ANR	2562560	CompoundStatement		89:78:2976:2976	2562031	1					
ANR	2562561	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_map: %d Bits << %d is illegal for %d. Component\\n"" , upd -> int_a [ IA_COMPBITS ] . data [ imap ] , upd -> int_a [ IA_COMPSHIFT ] . data [ imap ] , imap + 1 )"	2865:15:111840:112059	2562031	0	True				
ANR	2562562	CallExpression	"errprintf ( udev -> memory , ""upd_open_map: %d Bits << %d is illegal for %d. Component\\n"" , upd -> int_a [ IA_COMPBITS ] . data [ imap ] , upd -> int_a [ IA_COMPSHIFT ] . data [ imap ] , imap + 1 )"		2562031	0					
ANR	2562563	Callee	errprintf		2562031	0					
ANR	2562564	Identifier	errprintf		2562031	0					
ANR	2562565	ArgumentList	udev -> memory		2562031	1					
ANR	2562566	Argument	udev -> memory		2562031	0					
ANR	2562567	PtrMemberAccess	udev -> memory		2562031	0					
ANR	2562568	Identifier	udev		2562031	0					
ANR	2562569	Identifier	memory		2562031	1					
ANR	2562570	Argument	"""upd_open_map: %d Bits << %d is illegal for %d. Component\\n"""		2562031	1					
ANR	2562571	PrimaryExpression	"""upd_open_map: %d Bits << %d is illegal for %d. Component\\n"""		2562031	0					
ANR	2562572	Argument	upd -> int_a [ IA_COMPBITS ] . data [ imap ]		2562031	2					
ANR	2562573	ArrayIndexing	upd -> int_a [ IA_COMPBITS ] . data [ imap ]		2562031	0					
ANR	2562574	MemberAccess	upd -> int_a [ IA_COMPBITS ] . data		2562031	0					
ANR	2562575	ArrayIndexing	upd -> int_a [ IA_COMPBITS ]		2562031	0					
ANR	2562576	PtrMemberAccess	upd -> int_a		2562031	0					
ANR	2562577	Identifier	upd		2562031	0					
ANR	2562578	Identifier	int_a		2562031	1					
ANR	2562579	Identifier	IA_COMPBITS		2562031	1					
ANR	2562580	Identifier	data		2562031	1					
ANR	2562581	Identifier	imap		2562031	1					
ANR	2562582	Argument	upd -> int_a [ IA_COMPSHIFT ] . data [ imap ]		2562031	3					
ANR	2562583	ArrayIndexing	upd -> int_a [ IA_COMPSHIFT ] . data [ imap ]		2562031	0					
ANR	2562584	MemberAccess	upd -> int_a [ IA_COMPSHIFT ] . data		2562031	0					
ANR	2562585	ArrayIndexing	upd -> int_a [ IA_COMPSHIFT ]		2562031	0					
ANR	2562586	PtrMemberAccess	upd -> int_a		2562031	0					
ANR	2562587	Identifier	upd		2562031	0					
ANR	2562588	Identifier	int_a		2562031	1					
ANR	2562589	Identifier	IA_COMPSHIFT		2562031	1					
ANR	2562590	Identifier	data		2562031	1					
ANR	2562591	Identifier	imap		2562031	1					
ANR	2562592	Argument	imap + 1		2562031	4					
ANR	2562593	AdditiveExpression	imap + 1		2562031	0		+			
ANR	2562594	Identifier	imap		2562031	0					
ANR	2562595	PrimaryExpression	1		2562031	1					
ANR	2562596	ExpressionStatement	success = false	2871:12:112081:112096	2562031	1	True				
ANR	2562597	AssignmentExpression	success = false		2562031	0		=			
ANR	2562598	Identifier	success		2562031	0					
ANR	2562599	Identifier	false		2562031	1					
ANR	2562600	ElseStatement	else		2562031	0					
ANR	2562601	CompoundStatement		103:12:3381:3397	2562031	0					
ANR	2562602	IdentifierDeclStatement	int n ;	2875:12:112130:112143	2562031	0	True				
ANR	2562603	IdentifierDecl	n		2562031	0					
ANR	2562604	IdentifierDeclType	int		2562031	0					
ANR	2562605	Identifier	n		2562031	1					
ANR	2562606	IdentifierDeclStatement	const float * now ;	2876:12:112157:112173	2562031	1	True				
ANR	2562607	IdentifierDecl	* now		2562031	0					
ANR	2562608	IdentifierDeclType	const float *		2562031	0					
ANR	2562609	Identifier	now		2562031	1					
ANR	2562610	IdentifierDeclStatement	float last ;	2877:12:112187:112203	2562031	2	True				
ANR	2562611	IdentifierDecl	last		2562031	0					
ANR	2562612	IdentifierDeclType	float		2562031	0					
ANR	2562613	Identifier	last		2562031	1					
ANR	2562614	IfStatement	if ( ( NULL == upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data ) || ( 2 > upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size ) )		2562031	3					
ANR	2562615	Condition	( NULL == upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data ) || ( 2 > upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size )	2879:15:112221:112337	2562031	0	True				
ANR	2562616	OrExpression	( NULL == upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data ) || ( 2 > upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size )		2562031	0		||			
ANR	2562617	EqualityExpression	NULL == upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data		2562031	0		==			
ANR	2562618	Identifier	NULL		2562031	0					
ANR	2562619	MemberAccess	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data		2562031	1					
ANR	2562620	ArrayIndexing	upd -> float_a [ upd -> cmap [ imap ] . xfer ]		2562031	0					
ANR	2562621	PtrMemberAccess	upd -> float_a		2562031	0					
ANR	2562622	Identifier	upd		2562031	0					
ANR	2562623	Identifier	float_a		2562031	1					
ANR	2562624	MemberAccess	upd -> cmap [ imap ] . xfer		2562031	1					
ANR	2562625	ArrayIndexing	upd -> cmap [ imap ]		2562031	0					
ANR	2562626	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562627	Identifier	upd		2562031	0					
ANR	2562628	Identifier	cmap		2562031	1					
ANR	2562629	Identifier	imap		2562031	1					
ANR	2562630	Identifier	xfer		2562031	1					
ANR	2562631	Identifier	data		2562031	1					
ANR	2562632	RelationalExpression	2 > upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size		2562031	1		>			
ANR	2562633	PrimaryExpression	2		2562031	0					
ANR	2562634	MemberAccess	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size		2562031	1					
ANR	2562635	ArrayIndexing	upd -> float_a [ upd -> cmap [ imap ] . xfer ]		2562031	0					
ANR	2562636	PtrMemberAccess	upd -> float_a		2562031	0					
ANR	2562637	Identifier	upd		2562031	0					
ANR	2562638	Identifier	float_a		2562031	1					
ANR	2562639	MemberAccess	upd -> cmap [ imap ] . xfer		2562031	1					
ANR	2562640	ArrayIndexing	upd -> cmap [ imap ]		2562031	0					
ANR	2562641	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562642	Identifier	upd		2562031	0					
ANR	2562643	Identifier	cmap		2562031	1					
ANR	2562644	Identifier	imap		2562031	1					
ANR	2562645	Identifier	xfer		2562031	1					
ANR	2562646	Identifier	size		2562031	1					
ANR	2562647	CompoundStatement		107:15:3554:3563	2562031	1					
ANR	2562648	IdentifierDeclStatement	float * fp ;	2881:15:112360:112369	2562031	0	True				
ANR	2562649	IdentifierDecl	* fp		2562031	0					
ANR	2562650	IdentifierDeclType	float *		2562031	0					
ANR	2562651	Identifier	fp		2562031	1					
ANR	2562652	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> float_a [ upd -> cmap [ imap ] . xfer ] )"	2882:15:112386:112452	2562031	1	True				
ANR	2562653	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> float_a [ upd -> cmap [ imap ] . xfer ] )"		2562031	0					
ANR	2562654	Callee	UPD_MM_DEL_PARAM		2562031	0					
ANR	2562655	Identifier	UPD_MM_DEL_PARAM		2562031	0					
ANR	2562656	ArgumentList	udev -> memory		2562031	1					
ANR	2562657	Argument	udev -> memory		2562031	0					
ANR	2562658	PtrMemberAccess	udev -> memory		2562031	0					
ANR	2562659	Identifier	udev		2562031	0					
ANR	2562660	Identifier	memory		2562031	1					
ANR	2562661	Argument	upd -> float_a [ upd -> cmap [ imap ] . xfer ]		2562031	1					
ANR	2562662	ArrayIndexing	upd -> float_a [ upd -> cmap [ imap ] . xfer ]		2562031	0					
ANR	2562663	PtrMemberAccess	upd -> float_a		2562031	0					
ANR	2562664	Identifier	upd		2562031	0					
ANR	2562665	Identifier	float_a		2562031	1					
ANR	2562666	MemberAccess	upd -> cmap [ imap ] . xfer		2562031	1					
ANR	2562667	ArrayIndexing	upd -> cmap [ imap ]		2562031	0					
ANR	2562668	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562669	Identifier	upd		2562031	0					
ANR	2562670	Identifier	cmap		2562031	1					
ANR	2562671	Identifier	imap		2562031	1					
ANR	2562672	Identifier	xfer		2562031	1					
ANR	2562673	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , fp , 2 )"	2883:15:112469:112505	2562031	2	True				
ANR	2562674	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , fp , 2 )"		2562031	0					
ANR	2562675	Callee	UPD_MM_GET_ARRAY		2562031	0					
ANR	2562676	Identifier	UPD_MM_GET_ARRAY		2562031	0					
ANR	2562677	ArgumentList	udev -> memory		2562031	1					
ANR	2562678	Argument	udev -> memory		2562031	0					
ANR	2562679	PtrMemberAccess	udev -> memory		2562031	0					
ANR	2562680	Identifier	udev		2562031	0					
ANR	2562681	Identifier	memory		2562031	1					
ANR	2562682	Argument	fp		2562031	1					
ANR	2562683	Identifier	fp		2562031	0					
ANR	2562684	Argument	2		2562031	2					
ANR	2562685	PrimaryExpression	2		2562031	0					
ANR	2562686	ExpressionStatement	fp [ 0 ] = 0.0	2884:15:112522:112533	2562031	3	True				
ANR	2562687	AssignmentExpression	fp [ 0 ] = 0.0		2562031	0		=			
ANR	2562688	ArrayIndexing	fp [ 0 ]		2562031	0					
ANR	2562689	Identifier	fp		2562031	0					
ANR	2562690	PrimaryExpression	0		2562031	1					
ANR	2562691	PrimaryExpression	0.0		2562031	1					
ANR	2562692	ExpressionStatement	fp [ 1 ] = 1.0	2885:15:112550:112561	2562031	4	True				
ANR	2562693	AssignmentExpression	fp [ 1 ] = 1.0		2562031	0		=			
ANR	2562694	ArrayIndexing	fp [ 1 ]		2562031	0					
ANR	2562695	Identifier	fp		2562031	0					
ANR	2562696	PrimaryExpression	1		2562031	1					
ANR	2562697	PrimaryExpression	1.0		2562031	1					
ANR	2562698	ExpressionStatement	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data = fp	2886:15:112578:112622	2562031	5	True				
ANR	2562699	AssignmentExpression	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data = fp		2562031	0		=			
ANR	2562700	MemberAccess	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data		2562031	0					
ANR	2562701	ArrayIndexing	upd -> float_a [ upd -> cmap [ imap ] . xfer ]		2562031	0					
ANR	2562702	PtrMemberAccess	upd -> float_a		2562031	0					
ANR	2562703	Identifier	upd		2562031	0					
ANR	2562704	Identifier	float_a		2562031	1					
ANR	2562705	MemberAccess	upd -> cmap [ imap ] . xfer		2562031	1					
ANR	2562706	ArrayIndexing	upd -> cmap [ imap ]		2562031	0					
ANR	2562707	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562708	Identifier	upd		2562031	0					
ANR	2562709	Identifier	cmap		2562031	1					
ANR	2562710	Identifier	imap		2562031	1					
ANR	2562711	Identifier	xfer		2562031	1					
ANR	2562712	Identifier	data		2562031	1					
ANR	2562713	Identifier	fp		2562031	1					
ANR	2562714	ExpressionStatement	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size = 2	2887:15:112639:112682	2562031	6	True				
ANR	2562715	AssignmentExpression	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size = 2		2562031	0		=			
ANR	2562716	MemberAccess	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size		2562031	0					
ANR	2562717	ArrayIndexing	upd -> float_a [ upd -> cmap [ imap ] . xfer ]		2562031	0					
ANR	2562718	PtrMemberAccess	upd -> float_a		2562031	0					
ANR	2562719	Identifier	upd		2562031	0					
ANR	2562720	Identifier	float_a		2562031	1					
ANR	2562721	MemberAccess	upd -> cmap [ imap ] . xfer		2562031	1					
ANR	2562722	ArrayIndexing	upd -> cmap [ imap ]		2562031	0					
ANR	2562723	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562724	Identifier	upd		2562031	0					
ANR	2562725	Identifier	cmap		2562031	1					
ANR	2562726	Identifier	imap		2562031	1					
ANR	2562727	Identifier	xfer		2562031	1					
ANR	2562728	Identifier	size		2562031	1					
ANR	2562729	PrimaryExpression	2		2562031	1					
ANR	2562730	ExpressionStatement	n = upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size - 1	2889:12:112710:112758	2562031	4	True				
ANR	2562731	AssignmentExpression	n = upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size - 1		2562031	0		=			
ANR	2562732	Identifier	n		2562031	0					
ANR	2562733	AdditiveExpression	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size - 1		2562031	1		-			
ANR	2562734	MemberAccess	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size		2562031	0					
ANR	2562735	ArrayIndexing	upd -> float_a [ upd -> cmap [ imap ] . xfer ]		2562031	0					
ANR	2562736	PtrMemberAccess	upd -> float_a		2562031	0					
ANR	2562737	Identifier	upd		2562031	0					
ANR	2562738	Identifier	float_a		2562031	1					
ANR	2562739	MemberAccess	upd -> cmap [ imap ] . xfer		2562031	1					
ANR	2562740	ArrayIndexing	upd -> cmap [ imap ]		2562031	0					
ANR	2562741	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562742	Identifier	upd		2562031	0					
ANR	2562743	Identifier	cmap		2562031	1					
ANR	2562744	Identifier	imap		2562031	1					
ANR	2562745	Identifier	xfer		2562031	1					
ANR	2562746	Identifier	size		2562031	1					
ANR	2562747	PrimaryExpression	1		2562031	1					
ANR	2562748	ExpressionStatement	now = upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data	2890:12:112772:112818	2562031	5	True				
ANR	2562749	AssignmentExpression	now = upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data		2562031	0		=			
ANR	2562750	Identifier	now		2562031	0					
ANR	2562751	MemberAccess	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data		2562031	1					
ANR	2562752	ArrayIndexing	upd -> float_a [ upd -> cmap [ imap ] . xfer ]		2562031	0					
ANR	2562753	PtrMemberAccess	upd -> float_a		2562031	0					
ANR	2562754	Identifier	upd		2562031	0					
ANR	2562755	Identifier	float_a		2562031	1					
ANR	2562756	MemberAccess	upd -> cmap [ imap ] . xfer		2562031	1					
ANR	2562757	ArrayIndexing	upd -> cmap [ imap ]		2562031	0					
ANR	2562758	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562759	Identifier	upd		2562031	0					
ANR	2562760	Identifier	cmap		2562031	1					
ANR	2562761	Identifier	imap		2562031	1					
ANR	2562762	Identifier	xfer		2562031	1					
ANR	2562763	Identifier	data		2562031	1					
ANR	2562764	ExpressionStatement	last = now [ n ]	2891:12:112832:112845	2562031	6	True				
ANR	2562765	AssignmentExpression	last = now [ n ]		2562031	0		=			
ANR	2562766	Identifier	last		2562031	0					
ANR	2562767	ArrayIndexing	now [ n ]		2562031	1					
ANR	2562768	Identifier	now		2562031	0					
ANR	2562769	Identifier	n		2562031	1					
ANR	2562770	IfStatement	if ( * now < last )		2562031	7					
ANR	2562771	Condition	* now < last	2893:20:112868:112878	2562031	0	True				
ANR	2562772	RelationalExpression	* now < last		2562031	0		<			
ANR	2562773	UnaryOperationExpression	* now		2562031	0					
ANR	2562774	UnaryOperator	*		2562031	0					
ANR	2562775	Identifier	now		2562031	1					
ANR	2562776	Identifier	last		2562031	1					
ANR	2562777	CompoundStatement		119:33:4075:4075	2562031	1					
ANR	2562778	ExpressionStatement	last = * now ++	2894:15:112911:112924	2562031	0	True				
ANR	2562779	AssignmentExpression	last = * now ++		2562031	0		=			
ANR	2562780	Identifier	last		2562031	0					
ANR	2562781	UnaryOperationExpression	* now ++		2562031	1					
ANR	2562782	UnaryOperator	*		2562031	0					
ANR	2562783	PostIncDecOperationExpression	now ++		2562031	1					
ANR	2562784	Identifier	now		2562031	0					
ANR	2562785	IncDec	++		2562031	1					
ANR	2562786	WhileStatement	while ( n -- )		2562031	1					
ANR	2562787	Condition	n --	2895:21:112947:112949	2562031	0	True				
ANR	2562788	PostIncDecOperationExpression	n --		2562031	0					
ANR	2562789	Identifier	n		2562031	0					
ANR	2562790	IncDec	--		2562031	1					
ANR	2562791	CompoundStatement		121:26:4146:4146	2562031	1					
ANR	2562792	IfStatement	if ( last >= * now )		2562031	0					
ANR	2562793	Condition	last >= * now	2896:20:112974:112985	2562031	0	True				
ANR	2562794	RelationalExpression	last >= * now		2562031	0		>=			
ANR	2562795	Identifier	last		2562031	0					
ANR	2562796	UnaryOperationExpression	* now		2562031	1					
ANR	2562797	UnaryOperator	*		2562031	0					
ANR	2562798	Identifier	now		2562031	1					
ANR	2562799	BreakStatement	break ;	2896:34:112988:112993	2562031	1	True				
ANR	2562800	ExpressionStatement	last = * now ++	2897:17:113012:113025	2562031	1	True				
ANR	2562801	AssignmentExpression	last = * now ++		2562031	0		=			
ANR	2562802	Identifier	last		2562031	0					
ANR	2562803	UnaryOperationExpression	* now ++		2562031	1					
ANR	2562804	UnaryOperator	*		2562031	0					
ANR	2562805	PostIncDecOperationExpression	now ++		2562031	1					
ANR	2562806	Identifier	now		2562031	0					
ANR	2562807	IncDec	++		2562031	1					
ANR	2562808	ElseStatement	else		2562031	0					
ANR	2562809	IfStatement	if ( * now > last )		2562031	0					
ANR	2562810	Condition	* now > last	2899:22:113066:113076	2562031	0	True				
ANR	2562811	RelationalExpression	* now > last		2562031	0		>			
ANR	2562812	UnaryOperationExpression	* now		2562031	0					
ANR	2562813	UnaryOperator	*		2562031	0					
ANR	2562814	Identifier	now		2562031	1					
ANR	2562815	Identifier	last		2562031	1					
ANR	2562816	CompoundStatement		125:35:4273:4273	2562031	1					
ANR	2562817	ExpressionStatement	last = * now ++	2900:15:113110:113123	2562031	0	True				
ANR	2562818	AssignmentExpression	last = * now ++		2562031	0		=			
ANR	2562819	Identifier	last		2562031	0					
ANR	2562820	UnaryOperationExpression	* now ++		2562031	1					
ANR	2562821	UnaryOperator	*		2562031	0					
ANR	2562822	PostIncDecOperationExpression	now ++		2562031	1					
ANR	2562823	Identifier	now		2562031	0					
ANR	2562824	IncDec	++		2562031	1					
ANR	2562825	WhileStatement	while ( n -- )		2562031	1					
ANR	2562826	Condition	n --	2901:21:113146:113148	2562031	0	True				
ANR	2562827	PostIncDecOperationExpression	n --		2562031	0					
ANR	2562828	Identifier	n		2562031	0					
ANR	2562829	IncDec	--		2562031	1					
ANR	2562830	CompoundStatement		127:26:4345:4345	2562031	1					
ANR	2562831	IfStatement	if ( last <= * now )		2562031	0					
ANR	2562832	Condition	last <= * now	2902:20:113173:113184	2562031	0	True				
ANR	2562833	RelationalExpression	last <= * now		2562031	0		<=			
ANR	2562834	Identifier	last		2562031	0					
ANR	2562835	UnaryOperationExpression	* now		2562031	1					
ANR	2562836	UnaryOperator	*		2562031	0					
ANR	2562837	Identifier	now		2562031	1					
ANR	2562838	BreakStatement	break ;	2902:34:113187:113192	2562031	1	True				
ANR	2562839	ExpressionStatement	last = * now ++	2903:17:113211:113224	2562031	1	True				
ANR	2562840	AssignmentExpression	last = * now ++		2562031	0		=			
ANR	2562841	Identifier	last		2562031	0					
ANR	2562842	UnaryOperationExpression	* now ++		2562031	1					
ANR	2562843	UnaryOperator	*		2562031	0					
ANR	2562844	PostIncDecOperationExpression	now ++		2562031	1					
ANR	2562845	Identifier	now		2562031	0					
ANR	2562846	IncDec	++		2562031	1					
ANR	2562847	IfStatement	if ( 0 <= n )		2562031	8					
ANR	2562848	Condition	0 <= n	2907:15:113315:113320	2562031	0	True				
ANR	2562849	RelationalExpression	0 <= n		2562031	0		<=			
ANR	2562850	PrimaryExpression	0		2562031	0					
ANR	2562851	Identifier	n		2562031	1					
ANR	2562852	CompoundStatement		133:23:4517:4517	2562031	1					
ANR	2562853	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_map: %d. Component has non monoton Xfer\\n"" , imap + 1 )"	2909:15:113384:113486	2562031	0	True				
ANR	2562854	CallExpression	"errprintf ( udev -> memory , ""upd_open_map: %d. Component has non monoton Xfer\\n"" , imap + 1 )"		2562031	0					
ANR	2562855	Callee	errprintf		2562031	0					
ANR	2562856	Identifier	errprintf		2562031	0					
ANR	2562857	ArgumentList	udev -> memory		2562031	1					
ANR	2562858	Argument	udev -> memory		2562031	0					
ANR	2562859	PtrMemberAccess	udev -> memory		2562031	0					
ANR	2562860	Identifier	udev		2562031	0					
ANR	2562861	Identifier	memory		2562031	1					
ANR	2562862	Argument	"""upd_open_map: %d. Component has non monoton Xfer\\n"""		2562031	1					
ANR	2562863	PrimaryExpression	"""upd_open_map: %d. Component has non monoton Xfer\\n"""		2562031	0					
ANR	2562864	Argument	imap + 1		2562031	2					
ANR	2562865	AdditiveExpression	imap + 1		2562031	0		+			
ANR	2562866	Identifier	imap		2562031	0					
ANR	2562867	PrimaryExpression	1		2562031	1					
ANR	2562868	ExpressionStatement	success = false	2912:15:113510:113525	2562031	1	True				
ANR	2562869	AssignmentExpression	success = false		2562031	0		=			
ANR	2562870	Identifier	success		2562031	0					
ANR	2562871	Identifier	false		2562031	1					
ANR	2562872	ElseStatement	else		2562031	0					
ANR	2562873	CompoundStatement		140:19:4741:4741	2562031	0					
ANR	2562874	ExpressionStatement	bitmsk = ( ( uint32_t ) 1 << upd -> int_a [ IA_COMPBITS ] . data [ imap ] ) - 1	2918:15:113610:113676	2562031	0	True				
ANR	2562875	AssignmentExpression	bitmsk = ( ( uint32_t ) 1 << upd -> int_a [ IA_COMPBITS ] . data [ imap ] ) - 1		2562031	0		=			
ANR	2562876	Identifier	bitmsk		2562031	0					
ANR	2562877	AdditiveExpression	( ( uint32_t ) 1 << upd -> int_a [ IA_COMPBITS ] . data [ imap ] ) - 1		2562031	1		-			
ANR	2562878	ShiftExpression	( uint32_t ) 1 << upd -> int_a [ IA_COMPBITS ] . data [ imap ]		2562031	0		<<			
ANR	2562879	CastExpression	( uint32_t ) 1		2562031	0					
ANR	2562880	CastTarget	uint32_t		2562031	0					
ANR	2562881	PrimaryExpression	1		2562031	1					
ANR	2562882	ArrayIndexing	upd -> int_a [ IA_COMPBITS ] . data [ imap ]		2562031	1					
ANR	2562883	MemberAccess	upd -> int_a [ IA_COMPBITS ] . data		2562031	0					
ANR	2562884	ArrayIndexing	upd -> int_a [ IA_COMPBITS ]		2562031	0					
ANR	2562885	PtrMemberAccess	upd -> int_a		2562031	0					
ANR	2562886	Identifier	upd		2562031	0					
ANR	2562887	Identifier	int_a		2562031	1					
ANR	2562888	Identifier	IA_COMPBITS		2562031	1					
ANR	2562889	Identifier	data		2562031	1					
ANR	2562890	Identifier	imap		2562031	1					
ANR	2562891	PrimaryExpression	1		2562031	1					
ANR	2562892	ExpressionStatement	bitmsk <<= upd -> int_a [ IA_COMPSHIFT ] . data [ imap ]	2919:15:113693:113739	2562031	1	True				
ANR	2562893	AssignmentExpression	bitmsk <<= upd -> int_a [ IA_COMPSHIFT ] . data [ imap ]		2562031	0		<<=			
ANR	2562894	Identifier	bitmsk		2562031	0					
ANR	2562895	ArrayIndexing	upd -> int_a [ IA_COMPSHIFT ] . data [ imap ]		2562031	1					
ANR	2562896	MemberAccess	upd -> int_a [ IA_COMPSHIFT ] . data		2562031	0					
ANR	2562897	ArrayIndexing	upd -> int_a [ IA_COMPSHIFT ]		2562031	0					
ANR	2562898	PtrMemberAccess	upd -> int_a		2562031	0					
ANR	2562899	Identifier	upd		2562031	0					
ANR	2562900	Identifier	int_a		2562031	1					
ANR	2562901	Identifier	IA_COMPSHIFT		2562031	1					
ANR	2562902	Identifier	data		2562031	1					
ANR	2562903	Identifier	imap		2562031	1					
ANR	2562904	IfStatement	if ( used & bitmsk )		2562031	2					
ANR	2562905	Condition	used & bitmsk	2921:18:113760:113772	2562031	0	True				
ANR	2562906	BitAndExpression	used & bitmsk		2562031	0		&			
ANR	2562907	Identifier	used		2562031	0					
ANR	2562908	Identifier	bitmsk		2562031	1					
ANR	2562909	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_map: %d. Component overlaps with others\\n"" , imap + 1 )"	2921:33:113775:113877	2562031	1	True				
ANR	2562910	CallExpression	"errprintf ( udev -> memory , ""upd_open_map: %d. Component overlaps with others\\n"" , imap + 1 )"		2562031	0					
ANR	2562911	Callee	errprintf		2562031	0					
ANR	2562912	Identifier	errprintf		2562031	0					
ANR	2562913	ArgumentList	udev -> memory		2562031	1					
ANR	2562914	Argument	udev -> memory		2562031	0					
ANR	2562915	PtrMemberAccess	udev -> memory		2562031	0					
ANR	2562916	Identifier	udev		2562031	0					
ANR	2562917	Identifier	memory		2562031	1					
ANR	2562918	Argument	"""upd_open_map: %d. Component overlaps with others\\n"""		2562031	1					
ANR	2562919	PrimaryExpression	"""upd_open_map: %d. Component overlaps with others\\n"""		2562031	0					
ANR	2562920	Argument	imap + 1		2562031	2					
ANR	2562921	AdditiveExpression	imap + 1		2562031	0		+			
ANR	2562922	Identifier	imap		2562031	0					
ANR	2562923	PrimaryExpression	1		2562031	1					
ANR	2562924	ExpressionStatement	used |= bitmsk	2924:15:113895:113909	2562031	3	True				
ANR	2562925	AssignmentExpression	used |= bitmsk		2562031	0		|=			
ANR	2562926	Identifier	used		2562031	0					
ANR	2562927	Identifier	bitmsk		2562031	1					
ANR	2562928	IfStatement	if ( ! success )		2562031	3					
ANR	2562929	Condition	! success	2930:9:113961:113968	2562031	0	True				
ANR	2562930	UnaryOperationExpression	! success		2562031	0					
ANR	2562931	UnaryOperator	!		2562031	0					
ANR	2562932	Identifier	success		2562031	1					
ANR	2562933	ExpressionStatement	imap = 0	2930:19:113971:113979	2562031	1	True				
ANR	2562934	AssignmentExpression	imap = 0		2562031	0		=			
ANR	2562935	Identifier	imap		2562031	0					
ANR	2562936	PrimaryExpression	0		2562031	1					
ANR	2562937	IfStatement	if ( imap )		2562031	7					
ANR	2562938	Condition	imap	2936:6:114059:114062	2562031	0	True				
ANR	2562939	Identifier	imap		2562031	0					
ANR	2562940	CompoundStatement		162:12:5259:5259	2562031	1					
ANR	2562941	ForStatement	for ( imap = 0 ; UPD_CMAP_MAX > imap ; ++ imap )		2562031	0					
ANR	2562942	ForInit	imap = 0 ;	2938:10:114078:114086	2562031	0	True				
ANR	2562943	AssignmentExpression	imap = 0		2562031	0		=			
ANR	2562944	Identifier	imap		2562031	0					
ANR	2562945	PrimaryExpression	0		2562031	1					
ANR	2562946	Condition	UPD_CMAP_MAX > imap	2938:20:114088:114106	2562031	1	True				
ANR	2562947	RelationalExpression	UPD_CMAP_MAX > imap		2562031	0		>			
ANR	2562948	Identifier	UPD_CMAP_MAX		2562031	0					
ANR	2562949	Identifier	imap		2562031	1					
ANR	2562950	UnaryExpression	++ imap	2938:41:114109:114114	2562031	2	True				
ANR	2562951	IncDec	++		2562031	0					
ANR	2562952	Identifier	imap		2562031	1					
ANR	2562953	CompoundStatement		164:49:5311:5311	2562031	3					
ANR	2562954	IfStatement	if ( 0 > upd -> cmap [ imap ] . xfer )		2562031	0					
ANR	2562955	Condition	0 > upd -> cmap [ imap ] . xfer	2939:12:114131:114154	2562031	0	True				
ANR	2562956	RelationalExpression	0 > upd -> cmap [ imap ] . xfer		2562031	0		>			
ANR	2562957	PrimaryExpression	0		2562031	0					
ANR	2562958	MemberAccess	upd -> cmap [ imap ] . xfer		2562031	1					
ANR	2562959	ArrayIndexing	upd -> cmap [ imap ]		2562031	0					
ANR	2562960	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562961	Identifier	upd		2562031	0					
ANR	2562962	Identifier	cmap		2562031	1					
ANR	2562963	Identifier	imap		2562031	1					
ANR	2562964	Identifier	xfer		2562031	1					
ANR	2562965	ContinueStatement	continue ;	2939:38:114157:114165	2562031	1	True				
ANR	2562966	ExpressionStatement	upd -> cmap [ imap ] . bits = upd -> int_a [ IA_COMPBITS ] . data [ imap ]	2941:9:114177:114238	2562031	1	True				
ANR	2562967	AssignmentExpression	upd -> cmap [ imap ] . bits = upd -> int_a [ IA_COMPBITS ] . data [ imap ]		2562031	0		=			
ANR	2562968	MemberAccess	upd -> cmap [ imap ] . bits		2562031	0					
ANR	2562969	ArrayIndexing	upd -> cmap [ imap ]		2562031	0					
ANR	2562970	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562971	Identifier	upd		2562031	0					
ANR	2562972	Identifier	cmap		2562031	1					
ANR	2562973	Identifier	imap		2562031	1					
ANR	2562974	Identifier	bits		2562031	1					
ANR	2562975	ArrayIndexing	upd -> int_a [ IA_COMPBITS ] . data [ imap ]		2562031	1					
ANR	2562976	MemberAccess	upd -> int_a [ IA_COMPBITS ] . data		2562031	0					
ANR	2562977	ArrayIndexing	upd -> int_a [ IA_COMPBITS ]		2562031	0					
ANR	2562978	PtrMemberAccess	upd -> int_a		2562031	0					
ANR	2562979	Identifier	upd		2562031	0					
ANR	2562980	Identifier	int_a		2562031	1					
ANR	2562981	Identifier	IA_COMPBITS		2562031	1					
ANR	2562982	Identifier	data		2562031	1					
ANR	2562983	Identifier	imap		2562031	1					
ANR	2562984	ExpressionStatement	upd -> cmap [ imap ] . bitshf = upd -> int_a [ IA_COMPSHIFT ] . data [ imap ]	2942:9:114249:114311	2562031	2	True				
ANR	2562985	AssignmentExpression	upd -> cmap [ imap ] . bitshf = upd -> int_a [ IA_COMPSHIFT ] . data [ imap ]		2562031	0		=			
ANR	2562986	MemberAccess	upd -> cmap [ imap ] . bitshf		2562031	0					
ANR	2562987	ArrayIndexing	upd -> cmap [ imap ]		2562031	0					
ANR	2562988	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2562989	Identifier	upd		2562031	0					
ANR	2562990	Identifier	cmap		2562031	1					
ANR	2562991	Identifier	imap		2562031	1					
ANR	2562992	Identifier	bitshf		2562031	1					
ANR	2562993	ArrayIndexing	upd -> int_a [ IA_COMPSHIFT ] . data [ imap ]		2562031	1					
ANR	2562994	MemberAccess	upd -> int_a [ IA_COMPSHIFT ] . data		2562031	0					
ANR	2562995	ArrayIndexing	upd -> int_a [ IA_COMPSHIFT ]		2562031	0					
ANR	2562996	PtrMemberAccess	upd -> int_a		2562031	0					
ANR	2562997	Identifier	upd		2562031	0					
ANR	2562998	Identifier	int_a		2562031	1					
ANR	2562999	Identifier	IA_COMPSHIFT		2562031	1					
ANR	2563000	Identifier	data		2562031	1					
ANR	2563001	Identifier	imap		2562031	1					
ANR	2563002	ExpressionStatement	upd -> cmap [ imap ] . bitmsk = 1	2943:9:114322:114350	2562031	3	True				
ANR	2563003	AssignmentExpression	upd -> cmap [ imap ] . bitmsk = 1		2562031	0		=			
ANR	2563004	MemberAccess	upd -> cmap [ imap ] . bitmsk		2562031	0					
ANR	2563005	ArrayIndexing	upd -> cmap [ imap ]		2562031	0					
ANR	2563006	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2563007	Identifier	upd		2562031	0					
ANR	2563008	Identifier	cmap		2562031	1					
ANR	2563009	Identifier	imap		2562031	1					
ANR	2563010	Identifier	bitmsk		2562031	1					
ANR	2563011	PrimaryExpression	1		2562031	1					
ANR	2563012	ExpressionStatement	upd -> cmap [ imap ] . bitmsk <<= upd -> cmap [ imap ] . bits	2944:9:114361:114408	2562031	4	True				
ANR	2563013	AssignmentExpression	upd -> cmap [ imap ] . bitmsk <<= upd -> cmap [ imap ] . bits		2562031	0		<<=			
ANR	2563014	MemberAccess	upd -> cmap [ imap ] . bitmsk		2562031	0					
ANR	2563015	ArrayIndexing	upd -> cmap [ imap ]		2562031	0					
ANR	2563016	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2563017	Identifier	upd		2562031	0					
ANR	2563018	Identifier	cmap		2562031	1					
ANR	2563019	Identifier	imap		2562031	1					
ANR	2563020	Identifier	bitmsk		2562031	1					
ANR	2563021	MemberAccess	upd -> cmap [ imap ] . bits		2562031	1					
ANR	2563022	ArrayIndexing	upd -> cmap [ imap ]		2562031	0					
ANR	2563023	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2563024	Identifier	upd		2562031	0					
ANR	2563025	Identifier	cmap		2562031	1					
ANR	2563026	Identifier	imap		2562031	1					
ANR	2563027	Identifier	bits		2562031	1					
ANR	2563028	ExpressionStatement	upd -> cmap [ imap ] . bitmsk -= 1	2945:9:114419:114447	2562031	5	True				
ANR	2563029	AssignmentExpression	upd -> cmap [ imap ] . bitmsk -= 1		2562031	0		-=			
ANR	2563030	MemberAccess	upd -> cmap [ imap ] . bitmsk		2562031	0					
ANR	2563031	ArrayIndexing	upd -> cmap [ imap ]		2562031	0					
ANR	2563032	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2563033	Identifier	upd		2562031	0					
ANR	2563034	Identifier	cmap		2562031	1					
ANR	2563035	Identifier	imap		2562031	1					
ANR	2563036	Identifier	bitmsk		2562031	1					
ANR	2563037	PrimaryExpression	1		2562031	1					
ANR	2563038	ExpressionStatement	upd -> cmap [ imap ] . rise = upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data [ 0 ] < upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data [ upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size - 1 ] ? true : false	2946:9:114458:114679	2562031	6	True				
ANR	2563039	AssignmentExpression	upd -> cmap [ imap ] . rise = upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data [ 0 ] < upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data [ upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size - 1 ] ? true : false		2562031	0		=			
ANR	2563040	MemberAccess	upd -> cmap [ imap ] . rise		2562031	0					
ANR	2563041	ArrayIndexing	upd -> cmap [ imap ]		2562031	0					
ANR	2563042	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2563043	Identifier	upd		2562031	0					
ANR	2563044	Identifier	cmap		2562031	1					
ANR	2563045	Identifier	imap		2562031	1					
ANR	2563046	Identifier	rise		2562031	1					
ANR	2563047	ConditionalExpression	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data [ 0 ] < upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data [ upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size - 1 ] ? true : false		2562031	1					
ANR	2563048	Condition	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data [ 0 ] < upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data [ upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size - 1 ]		2562031	0					
ANR	2563049	RelationalExpression	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data [ 0 ] < upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data [ upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size - 1 ]		2562031	0		<			
ANR	2563050	ArrayIndexing	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data [ 0 ]		2562031	0					
ANR	2563051	MemberAccess	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data		2562031	0					
ANR	2563052	ArrayIndexing	upd -> float_a [ upd -> cmap [ imap ] . xfer ]		2562031	0					
ANR	2563053	PtrMemberAccess	upd -> float_a		2562031	0					
ANR	2563054	Identifier	upd		2562031	0					
ANR	2563055	Identifier	float_a		2562031	1					
ANR	2563056	MemberAccess	upd -> cmap [ imap ] . xfer		2562031	1					
ANR	2563057	ArrayIndexing	upd -> cmap [ imap ]		2562031	0					
ANR	2563058	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2563059	Identifier	upd		2562031	0					
ANR	2563060	Identifier	cmap		2562031	1					
ANR	2563061	Identifier	imap		2562031	1					
ANR	2563062	Identifier	xfer		2562031	1					
ANR	2563063	Identifier	data		2562031	1					
ANR	2563064	PrimaryExpression	0		2562031	1					
ANR	2563065	ArrayIndexing	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data [ upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size - 1 ]		2562031	1					
ANR	2563066	MemberAccess	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data		2562031	0					
ANR	2563067	ArrayIndexing	upd -> float_a [ upd -> cmap [ imap ] . xfer ]		2562031	0					
ANR	2563068	PtrMemberAccess	upd -> float_a		2562031	0					
ANR	2563069	Identifier	upd		2562031	0					
ANR	2563070	Identifier	float_a		2562031	1					
ANR	2563071	MemberAccess	upd -> cmap [ imap ] . xfer		2562031	1					
ANR	2563072	ArrayIndexing	upd -> cmap [ imap ]		2562031	0					
ANR	2563073	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2563074	Identifier	upd		2562031	0					
ANR	2563075	Identifier	cmap		2562031	1					
ANR	2563076	Identifier	imap		2562031	1					
ANR	2563077	Identifier	xfer		2562031	1					
ANR	2563078	Identifier	data		2562031	1					
ANR	2563079	AdditiveExpression	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size - 1		2562031	1		-			
ANR	2563080	MemberAccess	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size		2562031	0					
ANR	2563081	ArrayIndexing	upd -> float_a [ upd -> cmap [ imap ] . xfer ]		2562031	0					
ANR	2563082	PtrMemberAccess	upd -> float_a		2562031	0					
ANR	2563083	Identifier	upd		2562031	0					
ANR	2563084	Identifier	float_a		2562031	1					
ANR	2563085	MemberAccess	upd -> cmap [ imap ] . xfer		2562031	1					
ANR	2563086	ArrayIndexing	upd -> cmap [ imap ]		2562031	0					
ANR	2563087	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2563088	Identifier	upd		2562031	0					
ANR	2563089	Identifier	cmap		2562031	1					
ANR	2563090	Identifier	imap		2562031	1					
ANR	2563091	Identifier	xfer		2562031	1					
ANR	2563092	Identifier	size		2562031	1					
ANR	2563093	PrimaryExpression	1		2562031	1					
ANR	2563094	Identifier	true		2562031	1					
ANR	2563095	Identifier	false		2562031	2					
ANR	2563096	ExpressionStatement	"upd -> cmap [ imap ] . code = gs_malloc ( udev -> memory , upd -> cmap [ imap ] . bitmsk + 1 , sizeof ( upd -> cmap [ imap ] . code [ 0 ] ) , ""upd/code"" )"	2951:9:114690:114823	2562031	7	True				
ANR	2563097	AssignmentExpression	"upd -> cmap [ imap ] . code = gs_malloc ( udev -> memory , upd -> cmap [ imap ] . bitmsk + 1 , sizeof ( upd -> cmap [ imap ] . code [ 0 ] ) , ""upd/code"" )"		2562031	0		=			
ANR	2563098	MemberAccess	upd -> cmap [ imap ] . code		2562031	0					
ANR	2563099	ArrayIndexing	upd -> cmap [ imap ]		2562031	0					
ANR	2563100	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2563101	Identifier	upd		2562031	0					
ANR	2563102	Identifier	cmap		2562031	1					
ANR	2563103	Identifier	imap		2562031	1					
ANR	2563104	Identifier	code		2562031	1					
ANR	2563105	CallExpression	"gs_malloc ( udev -> memory , upd -> cmap [ imap ] . bitmsk + 1 , sizeof ( upd -> cmap [ imap ] . code [ 0 ] ) , ""upd/code"" )"		2562031	1					
ANR	2563106	Callee	gs_malloc		2562031	0					
ANR	2563107	Identifier	gs_malloc		2562031	0					
ANR	2563108	ArgumentList	udev -> memory		2562031	1					
ANR	2563109	Argument	udev -> memory		2562031	0					
ANR	2563110	PtrMemberAccess	udev -> memory		2562031	0					
ANR	2563111	Identifier	udev		2562031	0					
ANR	2563112	Identifier	memory		2562031	1					
ANR	2563113	Argument	upd -> cmap [ imap ] . bitmsk + 1		2562031	1					
ANR	2563114	AdditiveExpression	upd -> cmap [ imap ] . bitmsk + 1		2562031	0		+			
ANR	2563115	MemberAccess	upd -> cmap [ imap ] . bitmsk		2562031	0					
ANR	2563116	ArrayIndexing	upd -> cmap [ imap ]		2562031	0					
ANR	2563117	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2563118	Identifier	upd		2562031	0					
ANR	2563119	Identifier	cmap		2562031	1					
ANR	2563120	Identifier	imap		2562031	1					
ANR	2563121	Identifier	bitmsk		2562031	1					
ANR	2563122	PrimaryExpression	1		2562031	1					
ANR	2563123	Argument	sizeof ( upd -> cmap [ imap ] . code [ 0 ] )		2562031	2					
ANR	2563124	SizeofExpression	sizeof ( upd -> cmap [ imap ] . code [ 0 ] )		2562031	0					
ANR	2563125	Sizeof	sizeof		2562031	0					
ANR	2563126	ArrayIndexing	upd -> cmap [ imap ] . code [ 0 ]		2562031	1					
ANR	2563127	MemberAccess	upd -> cmap [ imap ] . code		2562031	0					
ANR	2563128	ArrayIndexing	upd -> cmap [ imap ]		2562031	0					
ANR	2563129	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2563130	Identifier	upd		2562031	0					
ANR	2563131	Identifier	cmap		2562031	1					
ANR	2563132	Identifier	imap		2562031	1					
ANR	2563133	Identifier	code		2562031	1					
ANR	2563134	PrimaryExpression	0		2562031	1					
ANR	2563135	Argument	"""upd/code"""		2562031	3					
ANR	2563136	PrimaryExpression	"""upd/code"""		2562031	0					
ANR	2563137	IfStatement	if ( ! upd -> cmap [ imap ] . code )		2562031	8					
ANR	2563138	Condition	! upd -> cmap [ imap ] . code	2953:12:114837:114857	2562031	0	True				
ANR	2563139	UnaryOperationExpression	! upd -> cmap [ imap ] . code		2562031	0					
ANR	2563140	UnaryOperator	!		2562031	0					
ANR	2563141	MemberAccess	upd -> cmap [ imap ] . code		2562031	1					
ANR	2563142	ArrayIndexing	upd -> cmap [ imap ]		2562031	0					
ANR	2563143	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2563144	Identifier	upd		2562031	0					
ANR	2563145	Identifier	cmap		2562031	1					
ANR	2563146	Identifier	imap		2562031	1					
ANR	2563147	Identifier	code		2562031	1					
ANR	2563148	BreakStatement	break ;	2953:35:114860:114865	2562031	1	True				
ANR	2563149	IfStatement	if ( UPD_CMAP_MAX > imap )		2562031	1					
ANR	2563150	Condition	UPD_CMAP_MAX > imap	2956:9:114885:114903	2562031	0	True				
ANR	2563151	RelationalExpression	UPD_CMAP_MAX > imap		2562031	0		>			
ANR	2563152	Identifier	UPD_CMAP_MAX		2562031	0					
ANR	2563153	Identifier	imap		2562031	1					
ANR	2563154	CompoundStatement		182:30:6100:6100	2562031	1					
ANR	2563155	ExpressionStatement	imap = 0	2958:9:114918:114926	2562031	0	True				
ANR	2563156	AssignmentExpression	imap = 0		2562031	0		=			
ANR	2563157	Identifier	imap		2562031	0					
ANR	2563158	PrimaryExpression	0		2562031	1					
ANR	2563159	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_map: could not allocate code-arrays\\n"" )"	2961:12:114977:115072	2562031	1	True				
ANR	2563160	CallExpression	"errprintf ( udev -> memory , ""upd_open_map: could not allocate code-arrays\\n"" )"		2562031	0					
ANR	2563161	Callee	errprintf		2562031	0					
ANR	2563162	Identifier	errprintf		2562031	0					
ANR	2563163	ArgumentList	udev -> memory		2562031	1					
ANR	2563164	Argument	udev -> memory		2562031	0					
ANR	2563165	PtrMemberAccess	udev -> memory		2562031	0					
ANR	2563166	Identifier	udev		2562031	0					
ANR	2563167	Identifier	memory		2562031	1					
ANR	2563168	Argument	"""upd_open_map: could not allocate code-arrays\\n"""		2562031	1					
ANR	2563169	PrimaryExpression	"""upd_open_map: could not allocate code-arrays\\n"""		2562031	0					
ANR	2563170	Statement	endif	2963:9:115083:115087	2562031	2	True				
ANR	2563171	IfStatement	if ( imap )		2562031	8					
ANR	2563172	Condition	imap	2970:6:115144:115147	2562031	0	True				
ANR	2563173	Identifier	imap		2562031	0					
ANR	2563174	CompoundStatement		196:12:6344:6344	2562031	1					
ANR	2563175	ForStatement	for ( imap = 0 ; UPD_CMAP_MAX > imap ; ++ imap )		2562031	0					
ANR	2563176	ForInit	imap = 0 ;	2978:10:115338:115346	2562031	0	True				
ANR	2563177	AssignmentExpression	imap = 0		2562031	0		=			
ANR	2563178	Identifier	imap		2562031	0					
ANR	2563179	PrimaryExpression	0		2562031	1					
ANR	2563180	Condition	UPD_CMAP_MAX > imap	2978:20:115348:115366	2562031	1	True				
ANR	2563181	RelationalExpression	UPD_CMAP_MAX > imap		2562031	0		>			
ANR	2563182	Identifier	UPD_CMAP_MAX		2562031	0					
ANR	2563183	Identifier	imap		2562031	1					
ANR	2563184	UnaryExpression	++ imap	2978:41:115369:115374	2562031	2	True				
ANR	2563185	IncDec	++		2562031	0					
ANR	2563186	Identifier	imap		2562031	1					
ANR	2563187	CompoundStatement		211:9:6747:6766	2562031	3					
ANR	2563188	IdentifierDeclStatement	const updcmap_p cmap = upd -> cmap + imap ;	2980:9:115389:115428	2562031	0	True				
ANR	2563189	IdentifierDecl	cmap = upd -> cmap + imap		2562031	0					
ANR	2563190	IdentifierDeclType	const updcmap_p		2562031	0					
ANR	2563191	Identifier	cmap		2562031	1					
ANR	2563192	AssignmentExpression	cmap = upd -> cmap + imap		2562031	2		=			
ANR	2563193	Identifier	cmap		2562031	0					
ANR	2563194	AdditiveExpression	upd -> cmap + imap		2562031	1		+			
ANR	2563195	PtrMemberAccess	upd -> cmap		2562031	0					
ANR	2563196	Identifier	upd		2562031	0					
ANR	2563197	Identifier	cmap		2562031	1					
ANR	2563198	Identifier	imap		2562031	1					
ANR	2563199	IdentifierDeclStatement	"uint32_t ly , iy ;"	2981:9:115439:115453	2562031	1	True				
ANR	2563200	IdentifierDecl	ly		2562031	0					
ANR	2563201	IdentifierDeclType	uint32_t		2562031	0					
ANR	2563202	Identifier	ly		2562031	1					
ANR	2563203	IdentifierDecl	iy		2562031	1					
ANR	2563204	IdentifierDeclType	uint32_t		2562031	0					
ANR	2563205	Identifier	iy		2562031	1					
ANR	2563206	IdentifierDeclStatement	"float ystep , xstep , fx , fy ;"	2982:9:115464:115487	2562031	2	True				
ANR	2563207	IdentifierDecl	ystep		2562031	0					
ANR	2563208	IdentifierDeclType	float		2562031	0					
ANR	2563209	Identifier	ystep		2562031	1					
ANR	2563210	IdentifierDecl	xstep		2562031	1					
ANR	2563211	IdentifierDeclType	float		2562031	0					
ANR	2563212	Identifier	xstep		2562031	1					
ANR	2563213	IdentifierDecl	fx		2562031	2					
ANR	2563214	IdentifierDeclType	float		2562031	0					
ANR	2563215	Identifier	fx		2562031	1					
ANR	2563216	IdentifierDecl	fy		2562031	3					
ANR	2563217	IdentifierDeclType	float		2562031	0					
ANR	2563218	Identifier	fy		2562031	1					
ANR	2563219	IdentifierDeclStatement	"double offset , scale ;"	2985:9:115553:115572	2562031	3	True				
ANR	2563220	IdentifierDecl	offset		2562031	0					
ANR	2563221	IdentifierDeclType	double		2562031	0					
ANR	2563222	Identifier	offset		2562031	1					
ANR	2563223	IdentifierDecl	scale		2562031	1					
ANR	2563224	IdentifierDeclType	double		2562031	0					
ANR	2563225	Identifier	scale		2562031	1					
ANR	2563226	Statement	define	2986:1:115575:115580	2562031	4	True				
ANR	2563227	Statement	XFVAL	2986:9:115583:115587	2562031	5	True				
ANR	2563228	Statement	(	2986:14:115588:115588	2562031	6	True				
ANR	2563229	Statement	I	2986:15:115589:115589	2562031	7	True				
ANR	2563230	Statement	)	2986:16:115590:115590	2562031	8	True				
ANR	2563231	Statement	(	2986:18:115592:115592	2562031	9	True				
ANR	2563232	Statement	(	2986:19:115593:115593	2562031	10	True				
ANR	2563233	Statement	upd	2986:20:115594:115596	2562031	11	True				
ANR	2563234	Statement	->	2986:23:115597:115598	2562031	12	True				
ANR	2563235	Statement	float_a	2986:25:115599:115605	2562031	13	True				
ANR	2563236	Statement	[	2986:32:115606:115606	2562031	14	True				
ANR	2563237	Statement	cmap	2986:33:115607:115610	2562031	15	True				
ANR	2563238	Statement	->	2986:37:115611:115612	2562031	16	True				
ANR	2563239	Statement	xfer	2986:39:115613:115616	2562031	17	True				
ANR	2563240	Statement	]	2986:43:115617:115617	2562031	18	True				
ANR	2563241	Statement	.	2986:44:115618:115618	2562031	19	True				
ANR	2563242	Statement	data	2986:45:115619:115622	2562031	20	True				
ANR	2563243	Statement	[	2986:49:115623:115623	2562031	21	True				
ANR	2563244	Statement	I	2986:50:115624:115624	2562031	22	True				
ANR	2563245	Statement	]	2986:51:115625:115625	2562031	23	True				
ANR	2563246	Statement	-	2986:52:115626:115626	2562031	24	True				
ANR	2563247	Statement	offset	2986:53:115627:115632	2562031	25	True				
ANR	2563248	Statement	)	2986:59:115633:115633	2562031	26	True				
ANR	2563249	Statement	*	2986:60:115634:115634	2562031	27	True				
ANR	2563250	Statement	scale	2986:61:115635:115639	2562031	28	True				
ANR	2563251	Statement	)	2986:66:115640:115640	2562031	29	True				
ANR	2563252	IfStatement	if ( 0 > cmap -> xfer )		2562031	30					
ANR	2563253	Condition	0 > cmap -> xfer	2988:12:115655:115668	2562031	0	True				
ANR	2563254	RelationalExpression	0 > cmap -> xfer		2562031	0		>			
ANR	2563255	PrimaryExpression	0		2562031	0					
ANR	2563256	PtrMemberAccess	cmap -> xfer		2562031	1					
ANR	2563257	Identifier	cmap		2562031	0					
ANR	2563258	Identifier	xfer		2562031	1					
ANR	2563259	ContinueStatement	continue ;	2988:28:115671:115679	2562031	1	True				
ANR	2563260	ExpressionStatement	cmap -> code [ cmap -> bitmsk ] = gx_max_color_value	2990:9:115691:115736	2562031	31	True				
ANR	2563261	AssignmentExpression	cmap -> code [ cmap -> bitmsk ] = gx_max_color_value		2562031	0		=			
ANR	2563262	ArrayIndexing	cmap -> code [ cmap -> bitmsk ]		2562031	0					
ANR	2563263	PtrMemberAccess	cmap -> code		2562031	0					
ANR	2563264	Identifier	cmap		2562031	0					
ANR	2563265	Identifier	code		2562031	1					
ANR	2563266	PtrMemberAccess	cmap -> bitmsk		2562031	1					
ANR	2563267	Identifier	cmap		2562031	0					
ANR	2563268	Identifier	bitmsk		2562031	1					
ANR	2563269	Identifier	gx_max_color_value		2562031	1					
ANR	2563270	IfStatement	if ( ! cmap -> bits )		2562031	32					
ANR	2563271	Condition	! cmap -> bits	2992:12:115751:115761	2562031	0	True				
ANR	2563272	UnaryOperationExpression	! cmap -> bits		2562031	0					
ANR	2563273	UnaryOperator	!		2562031	0					
ANR	2563274	PtrMemberAccess	cmap -> bits		2562031	1					
ANR	2563275	Identifier	cmap		2562031	0					
ANR	2563276	Identifier	bits		2562031	1					
ANR	2563277	ContinueStatement	continue ;	2992:25:115764:115772	2562031	1	True				
ANR	2563278	ExpressionStatement	offset = upd -> float_a [ cmap -> xfer ] . data [ 0 ]	2994:9:115784:115825	2562031	33	True				
ANR	2563279	AssignmentExpression	offset = upd -> float_a [ cmap -> xfer ] . data [ 0 ]		2562031	0		=			
ANR	2563280	Identifier	offset		2562031	0					
ANR	2563281	ArrayIndexing	upd -> float_a [ cmap -> xfer ] . data [ 0 ]		2562031	1					
ANR	2563282	MemberAccess	upd -> float_a [ cmap -> xfer ] . data		2562031	0					
ANR	2563283	ArrayIndexing	upd -> float_a [ cmap -> xfer ]		2562031	0					
ANR	2563284	PtrMemberAccess	upd -> float_a		2562031	0					
ANR	2563285	Identifier	upd		2562031	0					
ANR	2563286	Identifier	float_a		2562031	1					
ANR	2563287	PtrMemberAccess	cmap -> xfer		2562031	1					
ANR	2563288	Identifier	cmap		2562031	0					
ANR	2563289	Identifier	xfer		2562031	1					
ANR	2563290	Identifier	data		2562031	1					
ANR	2563291	PrimaryExpression	0		2562031	1					
ANR	2563292	IfStatement	if ( 0.0 > offset )		2562031	34					
ANR	2563293	Condition	0.0 > offset	2995:17:115844:115855	2562031	0	True				
ANR	2563294	RelationalExpression	0.0 > offset		2562031	0		>			
ANR	2563295	PrimaryExpression	0.0		2562031	0					
ANR	2563296	Identifier	offset		2562031	1					
ANR	2563297	ExpressionStatement	offset = 0.0	2995:31:115858:115870	2562031	1	True				
ANR	2563298	AssignmentExpression	offset = 0.0		2562031	0		=			
ANR	2563299	Identifier	offset		2562031	0					
ANR	2563300	PrimaryExpression	0.0		2562031	1					
ANR	2563301	ElseStatement	else		2562031	0					
ANR	2563302	IfStatement	if ( 1.0 < offset )		2562031	0					
ANR	2563303	Condition	1.0 < offset	2996:17:115889:115900	2562031	0	True				
ANR	2563304	RelationalExpression	1.0 < offset		2562031	0		<			
ANR	2563305	PrimaryExpression	1.0		2562031	0					
ANR	2563306	Identifier	offset		2562031	1					
ANR	2563307	ExpressionStatement	offset = 1.0	2996:31:115903:115915	2562031	1	True				
ANR	2563308	AssignmentExpression	offset = 1.0		2562031	0		=			
ANR	2563309	Identifier	offset		2562031	0					
ANR	2563310	PrimaryExpression	1.0		2562031	1					
ANR	2563311	ExpressionStatement	scale = upd -> float_a [ cmap -> xfer ] . data [ upd -> float_a [ cmap -> xfer ] . size - 1 ]	2998:9:115927:115998	2562031	35	True				
ANR	2563312	AssignmentExpression	scale = upd -> float_a [ cmap -> xfer ] . data [ upd -> float_a [ cmap -> xfer ] . size - 1 ]		2562031	0		=			
ANR	2563313	Identifier	scale		2562031	0					
ANR	2563314	ArrayIndexing	upd -> float_a [ cmap -> xfer ] . data [ upd -> float_a [ cmap -> xfer ] . size - 1 ]		2562031	1					
ANR	2563315	MemberAccess	upd -> float_a [ cmap -> xfer ] . data		2562031	0					
ANR	2563316	ArrayIndexing	upd -> float_a [ cmap -> xfer ]		2562031	0					
ANR	2563317	PtrMemberAccess	upd -> float_a		2562031	0					
ANR	2563318	Identifier	upd		2562031	0					
ANR	2563319	Identifier	float_a		2562031	1					
ANR	2563320	PtrMemberAccess	cmap -> xfer		2562031	1					
ANR	2563321	Identifier	cmap		2562031	0					
ANR	2563322	Identifier	xfer		2562031	1					
ANR	2563323	Identifier	data		2562031	1					
ANR	2563324	AdditiveExpression	upd -> float_a [ cmap -> xfer ] . size - 1		2562031	1		-			
ANR	2563325	MemberAccess	upd -> float_a [ cmap -> xfer ] . size		2562031	0					
ANR	2563326	ArrayIndexing	upd -> float_a [ cmap -> xfer ]		2562031	0					
ANR	2563327	PtrMemberAccess	upd -> float_a		2562031	0					
ANR	2563328	Identifier	upd		2562031	0					
ANR	2563329	Identifier	float_a		2562031	1					
ANR	2563330	PtrMemberAccess	cmap -> xfer		2562031	1					
ANR	2563331	Identifier	cmap		2562031	0					
ANR	2563332	Identifier	xfer		2562031	1					
ANR	2563333	Identifier	size		2562031	1					
ANR	2563334	PrimaryExpression	1		2562031	1					
ANR	2563335	IfStatement	if ( 0.0 > scale )		2562031	36					
ANR	2563336	Condition	0.0 > scale	2999:17:116017:116027	2562031	0	True				
ANR	2563337	RelationalExpression	0.0 > scale		2562031	0		>			
ANR	2563338	PrimaryExpression	0.0		2562031	0					
ANR	2563339	Identifier	scale		2562031	1					
ANR	2563340	ExpressionStatement	scale = 0.0	2999:31:116031:116043	2562031	1	True				
ANR	2563341	AssignmentExpression	scale = 0.0		2562031	0		=			
ANR	2563342	Identifier	scale		2562031	0					
ANR	2563343	PrimaryExpression	0.0		2562031	1					
ANR	2563344	ElseStatement	else		2562031	0					
ANR	2563345	IfStatement	if ( 1.0 < scale )		2562031	0					
ANR	2563346	Condition	1.0 < scale	3000:17:116062:116072	2562031	0	True				
ANR	2563347	RelationalExpression	1.0 < scale		2562031	0		<			
ANR	2563348	PrimaryExpression	1.0		2562031	0					
ANR	2563349	Identifier	scale		2562031	1					
ANR	2563350	ExpressionStatement	scale = 1.0	3000:31:116076:116088	2562031	1	True				
ANR	2563351	AssignmentExpression	scale = 1.0		2562031	0		=			
ANR	2563352	Identifier	scale		2562031	0					
ANR	2563353	PrimaryExpression	1.0		2562031	1					
ANR	2563354	IfStatement	if ( scale != offset )		2562031	37					
ANR	2563355	Condition	scale != offset	3002:12:116103:116117	2562031	0	True				
ANR	2563356	EqualityExpression	scale != offset		2562031	0		!=			
ANR	2563357	Identifier	scale		2562031	0					
ANR	2563358	Identifier	offset		2562031	1					
ANR	2563359	ExpressionStatement	scale = 1.0 / ( scale - offset )	3002:29:116120:116150	2562031	1	True				
ANR	2563360	AssignmentExpression	scale = 1.0 / ( scale - offset )		2562031	0		=			
ANR	2563361	Identifier	scale		2562031	0					
ANR	2563362	MultiplicativeExpression	1.0 / ( scale - offset )		2562031	1		/			
ANR	2563363	PrimaryExpression	1.0		2562031	0					
ANR	2563364	AdditiveExpression	scale - offset		2562031	1		-			
ANR	2563365	Identifier	scale		2562031	0					
ANR	2563366	Identifier	offset		2562031	1					
ANR	2563367	ElseStatement	else		2562031	0					
ANR	2563368	ExpressionStatement	scale = 0.0	3003:29:116181:116192	2562031	0	True				
ANR	2563369	AssignmentExpression	scale = 0.0		2562031	0		=			
ANR	2563370	Identifier	scale		2562031	0					
ANR	2563371	PrimaryExpression	0.0		2562031	1					
ANR	2563372	ExpressionStatement	ystep = ( float ) 1.0 / ( float ) cmap -> bitmsk	3006:9:116228:116270	2562031	38	True				
ANR	2563373	AssignmentExpression	ystep = ( float ) 1.0 / ( float ) cmap -> bitmsk		2562031	0		=			
ANR	2563374	Identifier	ystep		2562031	0					
ANR	2563375	MultiplicativeExpression	( float ) 1.0 / ( float ) cmap -> bitmsk		2562031	1		/			
ANR	2563376	CastExpression	( float ) 1.0		2562031	0					
ANR	2563377	CastTarget	float		2562031	0					
ANR	2563378	PrimaryExpression	1.0		2562031	1					
ANR	2563379	CastExpression	( float ) cmap -> bitmsk		2562031	1					
ANR	2563380	CastTarget	float		2562031	0					
ANR	2563381	PtrMemberAccess	cmap -> bitmsk		2562031	1					
ANR	2563382	Identifier	cmap		2562031	0					
ANR	2563383	Identifier	bitmsk		2562031	1					
ANR	2563384	ExpressionStatement	xstep = ( float ) 1.0 / ( float ) ( upd -> float_a [ cmap -> xfer ] . size - 1 )	3007:9:116281:116345	2562031	39	True				
ANR	2563385	AssignmentExpression	xstep = ( float ) 1.0 / ( float ) ( upd -> float_a [ cmap -> xfer ] . size - 1 )		2562031	0		=			
ANR	2563386	Identifier	xstep		2562031	0					
ANR	2563387	MultiplicativeExpression	( float ) 1.0 / ( float ) ( upd -> float_a [ cmap -> xfer ] . size - 1 )		2562031	1		/			
ANR	2563388	CastExpression	( float ) 1.0		2562031	0					
ANR	2563389	CastTarget	float		2562031	0					
ANR	2563390	PrimaryExpression	1.0		2562031	1					
ANR	2563391	CastExpression	( float ) ( upd -> float_a [ cmap -> xfer ] . size - 1 )		2562031	1					
ANR	2563392	CastTarget	float		2562031	0					
ANR	2563393	AdditiveExpression	upd -> float_a [ cmap -> xfer ] . size - 1		2562031	1		-			
ANR	2563394	MemberAccess	upd -> float_a [ cmap -> xfer ] . size		2562031	0					
ANR	2563395	ArrayIndexing	upd -> float_a [ cmap -> xfer ]		2562031	0					
ANR	2563396	PtrMemberAccess	upd -> float_a		2562031	0					
ANR	2563397	Identifier	upd		2562031	0					
ANR	2563398	Identifier	float_a		2562031	1					
ANR	2563399	PtrMemberAccess	cmap -> xfer		2562031	1					
ANR	2563400	Identifier	cmap		2562031	0					
ANR	2563401	Identifier	xfer		2562031	1					
ANR	2563402	Identifier	size		2562031	1					
ANR	2563403	PrimaryExpression	1		2562031	1					
ANR	2563404	ExpressionStatement	iy = 0	3009:9:116357:116363	2562031	40	True				
ANR	2563405	AssignmentExpression	iy = 0		2562031	0		=			
ANR	2563406	Identifier	iy		2562031	0					
ANR	2563407	PrimaryExpression	0		2562031	1					
ANR	2563408	ForStatement	for ( ly = 0 ; ly <= cmap -> bitmsk ; ++ ly )		2562031	41					
ANR	2563409	ForInit	ly = 0 ;	3010:13:116378:116384	2562031	0	True				
ANR	2563410	AssignmentExpression	ly = 0		2562031	0		=			
ANR	2563411	Identifier	ly		2562031	0					
ANR	2563412	PrimaryExpression	0		2562031	1					
ANR	2563413	Condition	ly <= cmap -> bitmsk	3010:21:116386:116403	2562031	1	True				
ANR	2563414	RelationalExpression	ly <= cmap -> bitmsk		2562031	0		<=			
ANR	2563415	Identifier	ly		2562031	0					
ANR	2563416	PtrMemberAccess	cmap -> bitmsk		2562031	1					
ANR	2563417	Identifier	cmap		2562031	0					
ANR	2563418	Identifier	bitmsk		2562031	1					
ANR	2563419	UnaryExpression	++ ly	3010:41:116406:116409	2562031	2	True				
ANR	2563420	IncDec	++		2562031	0					
ANR	2563421	Identifier	ly		2562031	1					
ANR	2563422	CompoundStatement		236:47:7606:7606	2562031	3					
ANR	2563423	ExpressionStatement	fy = ystep * ly	3012:12:116427:116442	2562031	0	True				
ANR	2563424	AssignmentExpression	fy = ystep * ly		2562031	0		=			
ANR	2563425	Identifier	fy		2562031	0					
ANR	2563426	MultiplicativeExpression	ystep * ly		2562031	1		*			
ANR	2563427	Identifier	ystep		2562031	0					
ANR	2563428	Identifier	ly		2562031	1					
ANR	2563429	WhileStatement	while ( ( ( iy + 2 ) < upd -> float_a [ cmap -> xfer ] . size ) && ( fy > XFVAL ( iy + 1 ) ) )		2562031	1					
ANR	2563430	Condition	( ( iy + 2 ) < upd -> float_a [ cmap -> xfer ] . size ) && ( fy > XFVAL ( iy + 1 ) )	3014:18:116482:116561	2562031	0	True				
ANR	2563431	AndExpression	( ( iy + 2 ) < upd -> float_a [ cmap -> xfer ] . size ) && ( fy > XFVAL ( iy + 1 ) )		2562031	0		&&			
ANR	2563432	RelationalExpression	( iy + 2 ) < upd -> float_a [ cmap -> xfer ] . size		2562031	0		<			
ANR	2563433	AdditiveExpression	iy + 2		2562031	0		+			
ANR	2563434	Identifier	iy		2562031	0					
ANR	2563435	PrimaryExpression	2		2562031	1					
ANR	2563436	MemberAccess	upd -> float_a [ cmap -> xfer ] . size		2562031	1					
ANR	2563437	ArrayIndexing	upd -> float_a [ cmap -> xfer ]		2562031	0					
ANR	2563438	PtrMemberAccess	upd -> float_a		2562031	0					
ANR	2563439	Identifier	upd		2562031	0					
ANR	2563440	Identifier	float_a		2562031	1					
ANR	2563441	PtrMemberAccess	cmap -> xfer		2562031	1					
ANR	2563442	Identifier	cmap		2562031	0					
ANR	2563443	Identifier	xfer		2562031	1					
ANR	2563444	Identifier	size		2562031	1					
ANR	2563445	RelationalExpression	fy > XFVAL ( iy + 1 )		2562031	1		>			
ANR	2563446	Identifier	fy		2562031	0					
ANR	2563447	CallExpression	XFVAL ( iy + 1 )		2562031	1					
ANR	2563448	Callee	XFVAL		2562031	0					
ANR	2563449	Identifier	XFVAL		2562031	0					
ANR	2563450	ArgumentList	iy + 1		2562031	1					
ANR	2563451	Argument	iy + 1		2562031	0					
ANR	2563452	AdditiveExpression	iy + 1		2562031	0		+			
ANR	2563453	Identifier	iy		2562031	0					
ANR	2563454	PrimaryExpression	1		2562031	1					
ANR	2563455	ExpressionStatement	++ iy	3015:38:116564:116568	2562031	1	True				
ANR	2563456	UnaryExpression	++ iy		2562031	0					
ANR	2563457	IncDec	++		2562031	0					
ANR	2563458	Identifier	iy		2562031	1					
ANR	2563459	ExpressionStatement	fx = iy + ( fy - XFVAL ( iy ) ) / ( XFVAL ( iy + 1 ) - XFVAL ( iy ) )	3017:12:116583:116636	2562031	2	True				
ANR	2563460	AssignmentExpression	fx = iy + ( fy - XFVAL ( iy ) ) / ( XFVAL ( iy + 1 ) - XFVAL ( iy ) )		2562031	0		=			
ANR	2563461	Identifier	fx		2562031	0					
ANR	2563462	AdditiveExpression	iy + ( fy - XFVAL ( iy ) ) / ( XFVAL ( iy + 1 ) - XFVAL ( iy ) )		2562031	1		+			
ANR	2563463	Identifier	iy		2562031	0					
ANR	2563464	MultiplicativeExpression	( fy - XFVAL ( iy ) ) / ( XFVAL ( iy + 1 ) - XFVAL ( iy ) )		2562031	1		/			
ANR	2563465	AdditiveExpression	fy - XFVAL ( iy )		2562031	0		-			
ANR	2563466	Identifier	fy		2562031	0					
ANR	2563467	CallExpression	XFVAL ( iy )		2562031	1					
ANR	2563468	Callee	XFVAL		2562031	0					
ANR	2563469	Identifier	XFVAL		2562031	0					
ANR	2563470	ArgumentList	iy		2562031	1					
ANR	2563471	Argument	iy		2562031	0					
ANR	2563472	Identifier	iy		2562031	0					
ANR	2563473	AdditiveExpression	XFVAL ( iy + 1 ) - XFVAL ( iy )		2562031	1		-			
ANR	2563474	CallExpression	XFVAL ( iy + 1 )		2562031	0					
ANR	2563475	Callee	XFVAL		2562031	0					
ANR	2563476	Identifier	XFVAL		2562031	0					
ANR	2563477	ArgumentList	iy + 1		2562031	1					
ANR	2563478	Argument	iy + 1		2562031	0					
ANR	2563479	AdditiveExpression	iy + 1		2562031	0		+			
ANR	2563480	Identifier	iy		2562031	0					
ANR	2563481	PrimaryExpression	1		2562031	1					
ANR	2563482	CallExpression	XFVAL ( iy )		2562031	1					
ANR	2563483	Callee	XFVAL		2562031	0					
ANR	2563484	Identifier	XFVAL		2562031	0					
ANR	2563485	ArgumentList	iy		2562031	1					
ANR	2563486	Argument	iy		2562031	0					
ANR	2563487	Identifier	iy		2562031	0					
ANR	2563488	ExpressionStatement	fx *= xstep * gx_max_color_value	3019:12:116651:116683	2562031	3	True				
ANR	2563489	AssignmentExpression	fx *= xstep * gx_max_color_value		2562031	0		*=			
ANR	2563490	Identifier	fx		2562031	0					
ANR	2563491	MultiplicativeExpression	xstep * gx_max_color_value		2562031	1		*			
ANR	2563492	Identifier	xstep		2562031	0					
ANR	2563493	Identifier	gx_max_color_value		2562031	1					
ANR	2563494	ExpressionStatement	fx = fx < 0.0 ? 0.0 : ( fx > gx_max_color_value ? gx_max_color_value : fx )	3021:12:116698:116789	2562031	4	True				
ANR	2563495	AssignmentExpression	fx = fx < 0.0 ? 0.0 : ( fx > gx_max_color_value ? gx_max_color_value : fx )		2562031	0		=			
ANR	2563496	Identifier	fx		2562031	0					
ANR	2563497	ConditionalExpression	fx < 0.0 ? 0.0 : ( fx > gx_max_color_value ? gx_max_color_value : fx )		2562031	1					
ANR	2563498	Condition	fx < 0.0		2562031	0					
ANR	2563499	RelationalExpression	fx < 0.0		2562031	0		<			
ANR	2563500	Identifier	fx		2562031	0					
ANR	2563501	PrimaryExpression	0.0		2562031	1					
ANR	2563502	PrimaryExpression	0.0		2562031	1					
ANR	2563503	ConditionalExpression	fx > gx_max_color_value ? gx_max_color_value : fx		2562031	2					
ANR	2563504	Condition	fx > gx_max_color_value		2562031	0					
ANR	2563505	RelationalExpression	fx > gx_max_color_value		2562031	0		>			
ANR	2563506	Identifier	fx		2562031	0					
ANR	2563507	Identifier	gx_max_color_value		2562031	1					
ANR	2563508	Identifier	gx_max_color_value		2562031	1					
ANR	2563509	Identifier	fx		2562031	2					
ANR	2563510	ExpressionStatement	cmap -> code [ ly ] = ( gx_color_value ) fx	3024:12:116804:116839	2562031	5	True				
ANR	2563511	AssignmentExpression	cmap -> code [ ly ] = ( gx_color_value ) fx		2562031	0		=			
ANR	2563512	ArrayIndexing	cmap -> code [ ly ]		2562031	0					
ANR	2563513	PtrMemberAccess	cmap -> code		2562031	0					
ANR	2563514	Identifier	cmap		2562031	0					
ANR	2563515	Identifier	code		2562031	1					
ANR	2563516	Identifier	ly		2562031	1					
ANR	2563517	CastExpression	( gx_color_value ) fx		2562031	1					
ANR	2563518	CastTarget	gx_color_value		2562031	0					
ANR	2563519	Identifier	fx		2562031	1					
ANR	2563520	IfStatement	if ( ( fx - cmap -> code [ ly ] ) >= 0.5 )		2562031	6					
ANR	2563521	Condition	( fx - cmap -> code [ ly ] ) >= 0.5	3025:15:116856:116883	2562031	0	True				
ANR	2563522	RelationalExpression	( fx - cmap -> code [ ly ] ) >= 0.5		2562031	0		>=			
ANR	2563523	AdditiveExpression	fx - cmap -> code [ ly ]		2562031	0		-			
ANR	2563524	Identifier	fx		2562031	0					
ANR	2563525	ArrayIndexing	cmap -> code [ ly ]		2562031	1					
ANR	2563526	PtrMemberAccess	cmap -> code		2562031	0					
ANR	2563527	Identifier	cmap		2562031	0					
ANR	2563528	Identifier	code		2562031	1					
ANR	2563529	Identifier	ly		2562031	1					
ANR	2563530	PrimaryExpression	0.5		2562031	1					
ANR	2563531	ExpressionStatement	cmap -> code [ ly ] += 1	3025:45:116886:116905	2562031	1	True				
ANR	2563532	AssignmentExpression	cmap -> code [ ly ] += 1		2562031	0		+=			
ANR	2563533	ArrayIndexing	cmap -> code [ ly ]		2562031	0					
ANR	2563534	PtrMemberAccess	cmap -> code		2562031	0					
ANR	2563535	Identifier	cmap		2562031	0					
ANR	2563536	Identifier	code		2562031	1					
ANR	2563537	Identifier	ly		2562031	1					
ANR	2563538	PrimaryExpression	1		2562031	1					
ANR	2563539	Statement	undef	3028:1:116920:116924	2562031	42	True				
ANR	2563540	Statement	XFVAL	3028:9:116928:116932	2562031	43	True				
ANR	2563541	IfStatement	if ( imap )		2562031	9					
ANR	2563542	Condition	imap	3035:6:116995:116998	2562031	0	True				
ANR	2563543	Identifier	imap		2562031	0					
ANR	2563544	CompoundStatement		261:12:8195:8195	2562031	1					
ANR	2563545	SwitchStatement	switch ( upd -> choice [ C_MAPPER ] )		2562031	0					
ANR	2563546	Condition	upd -> choice [ C_MAPPER ]	3036:13:117016:117036	2562031	0	True				
ANR	2563547	ArrayIndexing	upd -> choice [ C_MAPPER ]		2562031	0					
ANR	2563548	PtrMemberAccess	upd -> choice		2562031	0					
ANR	2563549	Identifier	upd		2562031	0					
ANR	2563550	Identifier	choice		2562031	1					
ANR	2563551	Identifier	C_MAPPER		2562031	1					
ANR	2563552	CompoundStatement		262:36:8233:8233	2562031	1					
ANR	2563553	Label	case MAP_GRAY :	3037:9:117050:117063	2562031	0	True				
ANR	2563554	Identifier	MAP_GRAY		2562031	0					
ANR	2563555	IfStatement	if ( 1 > imap )		2562031	1					
ANR	2563556	Condition	1 > imap	3038:14:117079:117086	2562031	0	True				
ANR	2563557	RelationalExpression	1 > imap		2562031	0		>			
ANR	2563558	PrimaryExpression	1		2562031	0					
ANR	2563559	Identifier	imap		2562031	1					
ANR	2563560	ExpressionStatement	imap = 0	3038:24:117089:117097	2562031	1	True				
ANR	2563561	AssignmentExpression	imap = 0		2562031	0		=			
ANR	2563562	Identifier	imap		2562031	0					
ANR	2563563	PrimaryExpression	0		2562031	1					
ANR	2563564	ExpressionStatement	upd -> ncomp = 1	3039:11:117110:117124	2562031	2	True				
ANR	2563565	AssignmentExpression	upd -> ncomp = 1		2562031	0		=			
ANR	2563566	PtrMemberAccess	upd -> ncomp		2562031	0					
ANR	2563567	Identifier	upd		2562031	0					
ANR	2563568	Identifier	ncomp		2562031	1					
ANR	2563569	PrimaryExpression	1		2562031	1					
ANR	2563570	BreakStatement	break ;	3040:9:117135:117140	2562031	3	True				
ANR	2563571	Label	case MAP_RGBW :	3041:9:117151:117164	2562031	4	True				
ANR	2563572	Identifier	MAP_RGBW		2562031	0					
ANR	2563573	IfStatement	if ( 4 > imap )		2562031	5					
ANR	2563574	Condition	4 > imap	3042:14:117196:117203	2562031	0	True				
ANR	2563575	RelationalExpression	4 > imap		2562031	0		>			
ANR	2563576	PrimaryExpression	4		2562031	0					
ANR	2563577	Identifier	imap		2562031	1					
ANR	2563578	ExpressionStatement	imap = 0	3042:24:117206:117214	2562031	1	True				
ANR	2563579	AssignmentExpression	imap = 0		2562031	0		=			
ANR	2563580	Identifier	imap		2562031	0					
ANR	2563581	PrimaryExpression	0		2562031	1					
ANR	2563582	ExpressionStatement	upd -> ncomp = 4	3043:11:117227:117241	2562031	6	True				
ANR	2563583	AssignmentExpression	upd -> ncomp = 4		2562031	0		=			
ANR	2563584	PtrMemberAccess	upd -> ncomp		2562031	0					
ANR	2563585	Identifier	upd		2562031	0					
ANR	2563586	Identifier	ncomp		2562031	1					
ANR	2563587	PrimaryExpression	4		2562031	1					
ANR	2563588	BreakStatement	break ;	3044:9:117252:117257	2562031	7	True				
ANR	2563589	Label	case MAP_RGB :	3045:9:117268:117280	2562031	8	True				
ANR	2563590	Identifier	MAP_RGB		2562031	0					
ANR	2563591	IfStatement	if ( 3 > imap )		2562031	9					
ANR	2563592	Condition	3 > imap	3046:14:117312:117319	2562031	0	True				
ANR	2563593	RelationalExpression	3 > imap		2562031	0		>			
ANR	2563594	PrimaryExpression	3		2562031	0					
ANR	2563595	Identifier	imap		2562031	1					
ANR	2563596	ExpressionStatement	imap = 0	3046:24:117322:117330	2562031	1	True				
ANR	2563597	AssignmentExpression	imap = 0		2562031	0		=			
ANR	2563598	Identifier	imap		2562031	0					
ANR	2563599	PrimaryExpression	0		2562031	1					
ANR	2563600	ExpressionStatement	upd -> ncomp = 3	3047:11:117343:117357	2562031	10	True				
ANR	2563601	AssignmentExpression	upd -> ncomp = 3		2562031	0		=			
ANR	2563602	PtrMemberAccess	upd -> ncomp		2562031	0					
ANR	2563603	Identifier	upd		2562031	0					
ANR	2563604	Identifier	ncomp		2562031	1					
ANR	2563605	PrimaryExpression	3		2562031	1					
ANR	2563606	BreakStatement	break ;	3048:9:117368:117373	2562031	11	True				
ANR	2563607	Label	case MAP_CMYK :	3049:9:117384:117397	2562031	12	True				
ANR	2563608	Identifier	MAP_CMYK		2562031	0					
ANR	2563609	IfStatement	if ( 4 > imap )		2562031	13					
ANR	2563610	Condition	4 > imap	3050:14:117430:117437	2562031	0	True				
ANR	2563611	RelationalExpression	4 > imap		2562031	0		>			
ANR	2563612	PrimaryExpression	4		2562031	0					
ANR	2563613	Identifier	imap		2562031	1					
ANR	2563614	ExpressionStatement	imap = 0	3050:24:117440:117448	2562031	1	True				
ANR	2563615	AssignmentExpression	imap = 0		2562031	0		=			
ANR	2563616	Identifier	imap		2562031	0					
ANR	2563617	PrimaryExpression	0		2562031	1					
ANR	2563618	ExpressionStatement	upd -> ncomp = 4	3051:12:117462:117476	2562031	14	True				
ANR	2563619	AssignmentExpression	upd -> ncomp = 4		2562031	0		=			
ANR	2563620	PtrMemberAccess	upd -> ncomp		2562031	0					
ANR	2563621	Identifier	upd		2562031	0					
ANR	2563622	Identifier	ncomp		2562031	1					
ANR	2563623	PrimaryExpression	4		2562031	1					
ANR	2563624	BreakStatement	break ;	3052:9:117487:117492	2562031	15	True				
ANR	2563625	Label	case MAP_CMYKGEN :	3053:9:117503:117519	2562031	16	True				
ANR	2563626	Identifier	MAP_CMYKGEN		2562031	0					
ANR	2563627	IfStatement	if ( 4 > imap )		2562031	17					
ANR	2563628	Condition	4 > imap	3054:14:117568:117575	2562031	0	True				
ANR	2563629	RelationalExpression	4 > imap		2562031	0		>			
ANR	2563630	PrimaryExpression	4		2562031	0					
ANR	2563631	Identifier	imap		2562031	1					
ANR	2563632	ExpressionStatement	imap = 0	3054:24:117578:117586	2562031	1	True				
ANR	2563633	AssignmentExpression	imap = 0		2562031	0		=			
ANR	2563634	Identifier	imap		2562031	0					
ANR	2563635	PrimaryExpression	0		2562031	1					
ANR	2563636	ExpressionStatement	upd -> ncomp = 4	3055:11:117599:117613	2562031	18	True				
ANR	2563637	AssignmentExpression	upd -> ncomp = 4		2562031	0		=			
ANR	2563638	PtrMemberAccess	upd -> ncomp		2562031	0					
ANR	2563639	Identifier	upd		2562031	0					
ANR	2563640	Identifier	ncomp		2562031	1					
ANR	2563641	PrimaryExpression	4		2562031	1					
ANR	2563642	BreakStatement	break ;	3056:9:117624:117629	2562031	19	True				
ANR	2563643	Label	case MAP_RGBOV :	3057:9:117640:117654	2562031	20	True				
ANR	2563644	Identifier	MAP_RGBOV		2562031	0					
ANR	2563645	IfStatement	if ( 4 > imap )		2562031	21					
ANR	2563646	Condition	4 > imap	3058:14:117708:117715	2562031	0	True				
ANR	2563647	RelationalExpression	4 > imap		2562031	0		>			
ANR	2563648	PrimaryExpression	4		2562031	0					
ANR	2563649	Identifier	imap		2562031	1					
ANR	2563650	ExpressionStatement	imap = 0	3058:24:117718:117726	2562031	1	True				
ANR	2563651	AssignmentExpression	imap = 0		2562031	0		=			
ANR	2563652	Identifier	imap		2562031	0					
ANR	2563653	PrimaryExpression	0		2562031	1					
ANR	2563654	ExpressionStatement	upd -> ncomp = 4	3059:11:117739:117753	2562031	22	True				
ANR	2563655	AssignmentExpression	upd -> ncomp = 4		2562031	0		=			
ANR	2563656	PtrMemberAccess	upd -> ncomp		2562031	0					
ANR	2563657	Identifier	upd		2562031	0					
ANR	2563658	Identifier	ncomp		2562031	1					
ANR	2563659	PrimaryExpression	4		2562031	1					
ANR	2563660	BreakStatement	break ;	3060:9:117764:117769	2562031	23	True				
ANR	2563661	Label	case MAP_RGBNOV :	3061:9:117780:117795	2562031	24	True				
ANR	2563662	Identifier	MAP_RGBNOV		2562031	0					
ANR	2563663	IfStatement	if ( 4 > imap )		2562031	25					
ANR	2563664	Condition	4 > imap	3062:14:117849:117856	2562031	0	True				
ANR	2563665	RelationalExpression	4 > imap		2562031	0		>			
ANR	2563666	PrimaryExpression	4		2562031	0					
ANR	2563667	Identifier	imap		2562031	1					
ANR	2563668	ExpressionStatement	imap = 0	3062:24:117859:117867	2562031	1	True				
ANR	2563669	AssignmentExpression	imap = 0		2562031	0		=			
ANR	2563670	Identifier	imap		2562031	0					
ANR	2563671	PrimaryExpression	0		2562031	1					
ANR	2563672	ExpressionStatement	upd -> ncomp = 4	3063:11:117880:117894	2562031	26	True				
ANR	2563673	AssignmentExpression	upd -> ncomp = 4		2562031	0		=			
ANR	2563674	PtrMemberAccess	upd -> ncomp		2562031	0					
ANR	2563675	Identifier	upd		2562031	0					
ANR	2563676	Identifier	ncomp		2562031	1					
ANR	2563677	PrimaryExpression	4		2562031	1					
ANR	2563678	BreakStatement	break ;	3064:9:117905:117910	2562031	27	True				
ANR	2563679	Label	default :	3066:9:117922:117929	2562031	28	True				
ANR	2563680	Identifier	default		2562031	0					
ANR	2563681	ExpressionStatement	imap = 0	3067:11:117942:117950	2562031	29	True				
ANR	2563682	AssignmentExpression	imap = 0		2562031	0		=			
ANR	2563683	Identifier	imap		2562031	0					
ANR	2563684	PrimaryExpression	0		2562031	1					
ANR	2563685	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open: Mapping %d unknown\\n"" , upd -> choice [ C_MAPPER ] )"	3069:14:118006:118102	2562031	30	True				
ANR	2563686	CallExpression	"errprintf ( udev -> memory , ""upd_open: Mapping %d unknown\\n"" , upd -> choice [ C_MAPPER ] )"		2562031	0					
ANR	2563687	Callee	errprintf		2562031	0					
ANR	2563688	Identifier	errprintf		2562031	0					
ANR	2563689	ArgumentList	udev -> memory		2562031	1					
ANR	2563690	Argument	udev -> memory		2562031	0					
ANR	2563691	PtrMemberAccess	udev -> memory		2562031	0					
ANR	2563692	Identifier	udev		2562031	0					
ANR	2563693	Identifier	memory		2562031	1					
ANR	2563694	Argument	"""upd_open: Mapping %d unknown\\n"""		2562031	1					
ANR	2563695	PrimaryExpression	"""upd_open: Mapping %d unknown\\n"""		2562031	0					
ANR	2563696	Argument	upd -> choice [ C_MAPPER ]		2562031	2					
ANR	2563697	ArrayIndexing	upd -> choice [ C_MAPPER ]		2562031	0					
ANR	2563698	PtrMemberAccess	upd -> choice		2562031	0					
ANR	2563699	Identifier	upd		2562031	0					
ANR	2563700	Identifier	choice		2562031	1					
ANR	2563701	Identifier	C_MAPPER		2562031	1					
ANR	2563702	BreakStatement	break ;	3073:9:118121:118126	2562031	31	True				
ANR	2563703	IfStatement	if ( ! imap )		2562031	10					
ANR	2563704	Condition	! imap	3079:6:118201:118205	2562031	0	True				
ANR	2563705	UnaryOperationExpression	! imap		2562031	0					
ANR	2563706	UnaryOperator	!		2562031	0					
ANR	2563707	Identifier	imap		2562031	1					
ANR	2563708	CompoundStatement		305:13:9402:9402	2562031	1					
ANR	2563709	ExpressionStatement	upd_close_map ( udev )	3080:6:118216:118235	2562031	0	True				
ANR	2563710	CallExpression	upd_close_map ( udev )		2562031	0					
ANR	2563711	Callee	upd_close_map		2562031	0					
ANR	2563712	Identifier	upd_close_map		2562031	0					
ANR	2563713	ArgumentList	udev		2562031	1					
ANR	2563714	Argument	udev		2562031	0					
ANR	2563715	Identifier	udev		2562031	0					
ANR	2563716	ElseStatement	else		2562031	0					
ANR	2563717	CompoundStatement		307:10:9441:9441	2562031	0					
ANR	2563718	ExpressionStatement	upd -> flags |= B_MAP	3082:6:118255:118274	2562031	0	True				
ANR	2563719	AssignmentExpression	upd -> flags |= B_MAP		2562031	0		|=			
ANR	2563720	PtrMemberAccess	upd -> flags		2562031	0					
ANR	2563721	Identifier	upd		2562031	0					
ANR	2563722	Identifier	flags		2562031	1					
ANR	2563723	Identifier	B_MAP		2562031	1					
ANR	2563724	ExpressionStatement	upd_procs_map ( udev )	3083:6:118282:118301	2562031	1	True				
ANR	2563725	CallExpression	upd_procs_map ( udev )		2562031	0					
ANR	2563726	Callee	upd_procs_map		2562031	0					
ANR	2563727	Identifier	upd_procs_map		2562031	0					
ANR	2563728	ArgumentList	udev		2562031	1					
ANR	2563729	Argument	udev		2562031	0					
ANR	2563730	Identifier	udev		2562031	0					
ANR	2563731	ReturnStatement	return imap ? 1 : - 1 ;	3086:3:118312:118332	2562031	11	True				
ANR	2563732	ConditionalExpression	imap ? 1 : - 1		2562031	0					
ANR	2563733	Condition	imap		2562031	0					
ANR	2563734	Identifier	imap		2562031	0					
ANR	2563735	PrimaryExpression	1		2562031	1					
ANR	2563736	UnaryOperationExpression	- 1		2562031	2					
ANR	2563737	UnaryOperator	-		2562031	0					
ANR	2563738	PrimaryExpression	1		2562031	1					
ANR	2563739	ReturnType	static int		2562031	1					
ANR	2563740	Identifier	upd_open_map		2562031	2					
ANR	2563741	ParameterList	upd_device * udev		2562031	3					
ANR	2563742	Parameter	upd_device * udev	2774:13:108787:108802	2562031	0	True				
ANR	2563743	ParameterType	upd_device *		2562031	0					
ANR	2563744	Identifier	udev		2562031	1					
ANR	2563745	CFGEntryNode	ENTRY		2562031		True				
ANR	2563746	CFGExitNode	EXIT		2562031		True				
ANR	2563747	Symbol	* upd -> int_a		2562031						
ANR	2563748	Symbol	upd -> cmap [ 1 ] . xfer		2562031						
ANR	2563749	Symbol	upd -> cmap [ imap ] . rise		2562031						
ANR	2563750	Symbol	FA_KXFER		2562031						
ANR	2563751	Symbol	* cmap -> bitmsk		2562031						
ANR	2563752	Symbol	* udev		2562031						
ANR	2563753	Symbol	* upd -> cmap [ imap ] . code		2562031						
ANR	2563754	Symbol	* imap		2562031						
ANR	2563755	Symbol	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data		2562031						
ANR	2563756	Symbol	* IA_COMPSHIFT		2562031						
ANR	2563757	Symbol	ystep		2562031						
ANR	2563758	Symbol	cmap -> xfer		2562031						
ANR	2563759	Symbol	* * upd_choice		2562031						
ANR	2563760	Symbol	* upd -> float_a		2562031						
ANR	2563761	Symbol	upd		2562031						
ANR	2563762	Symbol	* upd -> cmap [ imap ] . xfer		2562031						
ANR	2563763	Symbol	upd -> cmap [ imap ] . code		2562031						
ANR	2563764	Symbol	iy		2562031						
ANR	2563765	Symbol	* * upd -> float_a		2562031						
ANR	2563766	Symbol	gs_malloc		2562031						
ANR	2563767	Symbol	FA_BXFER		2562031						
ANR	2563768	Symbol	cmap		2562031						
ANR	2563769	Symbol	FA_RXFER		2562031						
ANR	2563770	Symbol	* IA_COMPBITS		2562031						
ANR	2563771	Symbol	cmap -> bits		2562031						
ANR	2563772	Symbol	FA_YXFER		2562031						
ANR	2563773	Symbol	* upd -> cmap		2562031						
ANR	2563774	Symbol	* upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data		2562031						
ANR	2563775	Symbol	* upd -> choice		2562031						
ANR	2563776	Symbol	upd -> flags		2562031						
ANR	2563777	Symbol	* * cmap		2562031						
ANR	2563778	Symbol	* ly		2562031						
ANR	2563779	Symbol	upd -> cmap [ 2 ] . xfer		2562031						
ANR	2563780	Symbol	* upd_choice		2562031						
ANR	2563781	Symbol	* upd		2562031						
ANR	2563782	Symbol	* * cmap -> xfer		2562031						
ANR	2563783	Symbol	upd -> int_a [ IA_COMPSHIFT ] . data		2562031						
ANR	2563784	Symbol	* cmap -> xfer		2562031						
ANR	2563785	Symbol	* * upd -> cmap [ imap ] . xfer		2562031						
ANR	2563786	Symbol	upd -> float_a [ cmap -> xfer ] . size		2562031						
ANR	2563787	Symbol	gx_color_value_bits		2562031						
ANR	2563788	Symbol	bitmsk		2562031						
ANR	2563789	Symbol	* now ++		2562031						
ANR	2563790	Symbol	imap		2562031						
ANR	2563791	Symbol	* * imap		2562031						
ANR	2563792	Symbol	FA_GXFER		2562031						
ANR	2563793	Symbol	upd -> cmap [ imap ] . bitshf		2562031						
ANR	2563794	Symbol	n		2562031						
ANR	2563795	Symbol	* * upd -> int_a		2562031						
ANR	2563796	Symbol	B_MAP		2562031						
ANR	2563797	Symbol	FA_WXFER		2562031						
ANR	2563798	Symbol	upd -> cmap [ 0 ] . xfer		2562031						
ANR	2563799	Symbol	* * C_MAPPER		2562031						
ANR	2563800	Symbol	upd -> int_a [ IA_COMPBITS ] . data		2562031						
ANR	2563801	Symbol	* * upd		2562031						
ANR	2563802	Symbol	* now		2562031						
ANR	2563803	Symbol	* * * * upd		2562031						
ANR	2563804	Symbol	* * * imap		2562031						
ANR	2563805	Symbol	* * * upd -> cmap		2562031						
ANR	2563806	Symbol	used		2562031						
ANR	2563807	Symbol	ly		2562031						
ANR	2563808	Symbol	upd -> cmap		2562031						
ANR	2563809	Symbol	upd -> int_a		2562031						
ANR	2563810	Symbol	* fp		2562031						
ANR	2563811	Symbol	xstep		2562031						
ANR	2563812	Symbol	upd -> cmap [ imap ] . bitmsk		2562031						
ANR	2563813	Symbol	* upd -> float_a [ cmap -> xfer ] . size		2562031						
ANR	2563814	Symbol	IA_COMPSHIFT		2562031						
ANR	2563815	Symbol	UPD_CMAP_MAX		2562031						
ANR	2563816	Symbol	NULL		2562031						
ANR	2563817	Symbol	last		2562031						
ANR	2563818	Symbol	offset		2562031						
ANR	2563819	Symbol	FA_CXFER		2562031						
ANR	2563820	Symbol	* upd -> int_a [ IA_COMPSHIFT ] . data		2562031						
ANR	2563821	Symbol	XFVAL		2562031						
ANR	2563822	Symbol	udev -> color_info . depth		2562031						
ANR	2563823	Symbol	upd_choice		2562031						
ANR	2563824	Symbol	udev		2562031						
ANR	2563825	Symbol	success		2562031						
ANR	2563826	Symbol	gx_max_color_value		2562031						
ANR	2563827	Symbol	true		2562031						
ANR	2563828	Symbol	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size		2562031						
ANR	2563829	Symbol	upd -> cmap [ 3 ] . xfer		2562031						
ANR	2563830	Symbol	upd -> float_a		2562031						
ANR	2563831	Symbol	upd -> float_a [ cmap -> xfer ] . data		2562031						
ANR	2563832	Symbol	upd -> cmap [ imap ] . bits		2562031						
ANR	2563833	Symbol	C_MAPPER		2562031						
ANR	2563834	Symbol	B_ERROR		2562031						
ANR	2563835	Symbol	cmap -> code		2562031						
ANR	2563836	Symbol	scale		2562031						
ANR	2563837	Symbol	fp		2562031						
ANR	2563838	Symbol	cmap -> bitmsk		2562031						
ANR	2563839	Symbol	* * * cmap		2562031						
ANR	2563840	Symbol	upd -> ncomp		2562031						
ANR	2563841	Symbol	* * IA_COMPSHIFT		2562031						
ANR	2563842	Symbol	udev -> upd		2562031						
ANR	2563843	Symbol	fx		2562031						
ANR	2563844	Symbol	* cmap		2562031						
ANR	2563845	Symbol	fy		2562031						
ANR	2563846	Symbol	udev -> color_info		2562031						
ANR	2563847	Symbol	now		2562031						
ANR	2563848	Symbol	* cmap -> code		2562031						
ANR	2563849	Symbol	* C_MAPPER		2562031						
ANR	2563850	Symbol	udev -> memory		2562031						
ANR	2563851	Symbol	* * IA_COMPBITS		2562031						
ANR	2563852	Symbol	* * * upd		2562031						
ANR	2563853	Symbol	false		2562031						
ANR	2563854	Symbol	upd -> choice		2562031						
ANR	2563855	Symbol	* upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size		2562031						
ANR	2563856	Symbol	FA_MXFER		2562031						
ANR	2563857	Symbol	* * upd -> cmap		2562031						
ANR	2563858	Symbol	IA_COMPBITS		2562031						
ANR	2563859	Symbol	upd -> cmap [ imap ] . xfer		2562031						
ANR	2563860	Symbol	* n		2562031						
ANR	2563861	Symbol	* upd -> float_a [ cmap -> xfer ] . data		2562031						
ANR	2563862	Symbol	* upd -> int_a [ IA_COMPBITS ] . data		2562031						
ANR	2563863	Function	upd_procs_map	3093:0:118560:121663							
ANR	2563864	FunctionDef	upd_procs_map (upd_device * udev)		2563863	0					
ANR	2563865	CompoundStatement		3095:0:118603:121663	2563863	0					
ANR	2563866	IdentifierDeclStatement	int imap ;	3096:3:118608:118616	2563863	0	True				
ANR	2563867	IdentifierDecl	imap		2563863	0					
ANR	2563868	IdentifierDeclType	int		2563863	0					
ANR	2563869	Identifier	imap		2563863	1					
ANR	2563870	IfStatement	if ( udev -> upd && ( udev -> upd -> flags & B_MAP ) )		2563863	1					
ANR	2563871	Condition	udev -> upd && ( udev -> upd -> flags & B_MAP )	3098:7:118626:118670	2563863	0	True				
ANR	2563872	AndExpression	udev -> upd && ( udev -> upd -> flags & B_MAP )		2563863	0		&&			
ANR	2563873	PtrMemberAccess	udev -> upd		2563863	0					
ANR	2563874	Identifier	udev		2563863	0					
ANR	2563875	Identifier	upd		2563863	1					
ANR	2563876	BitAndExpression	udev -> upd -> flags & B_MAP		2563863	1		&			
ANR	2563877	PtrMemberAccess	udev -> upd -> flags		2563863	0					
ANR	2563878	PtrMemberAccess	udev -> upd		2563863	0					
ANR	2563879	Identifier	udev		2563863	0					
ANR	2563880	Identifier	upd		2563863	1					
ANR	2563881	Identifier	flags		2563863	1					
ANR	2563882	Identifier	B_MAP		2563863	1					
ANR	2563883	ExpressionStatement	imap = udev -> upd -> choice [ C_MAPPER ]	3099:34:118673:118707	2563863	1	True				
ANR	2563884	AssignmentExpression	imap = udev -> upd -> choice [ C_MAPPER ]		2563863	0		=			
ANR	2563885	Identifier	imap		2563863	0					
ANR	2563886	ArrayIndexing	udev -> upd -> choice [ C_MAPPER ]		2563863	1					
ANR	2563887	PtrMemberAccess	udev -> upd -> choice		2563863	0					
ANR	2563888	PtrMemberAccess	udev -> upd		2563863	0					
ANR	2563889	Identifier	udev		2563863	0					
ANR	2563890	Identifier	upd		2563863	1					
ANR	2563891	Identifier	choice		2563863	1					
ANR	2563892	Identifier	C_MAPPER		2563863	1					
ANR	2563893	ElseStatement	else		2563863	0					
ANR	2563894	ExpressionStatement	imap = 0	3100:34:118743:118751	2563863	0	True				
ANR	2563895	AssignmentExpression	imap = 0		2563863	0		=			
ANR	2563896	Identifier	imap		2563863	0					
ANR	2563897	PrimaryExpression	0		2563863	1					
ANR	2563898	SwitchStatement	switch ( imap )		2563863	2					
ANR	2563899	Condition	imap	3102:10:118764:118767	2563863	0	True				
ANR	2563900	Identifier	imap		2563863	0					
ANR	2563901	CompoundStatement		8:16:166:166	2563863	1					
ANR	2563902	Label	case MAP_GRAY :	3103:5:118777:118790	2563863	0	True				
ANR	2563903	Identifier	MAP_GRAY		2563863	0					
ANR	2563904	ExpressionStatement	"set_dev_proc ( udev , encode_color , upd_rgb_1color )"	3104:7:118828:118875	2563863	1	True				
ANR	2563905	CallExpression	"set_dev_proc ( udev , encode_color , upd_rgb_1color )"		2563863	0					
ANR	2563906	Callee	set_dev_proc		2563863	0					
ANR	2563907	Identifier	set_dev_proc		2563863	0					
ANR	2563908	ArgumentList	udev		2563863	1					
ANR	2563909	Argument	udev		2563863	0					
ANR	2563910	Identifier	udev		2563863	0					
ANR	2563911	Argument	encode_color		2563863	1					
ANR	2563912	Identifier	encode_color		2563863	0					
ANR	2563913	Argument	upd_rgb_1color		2563863	2					
ANR	2563914	Identifier	upd_rgb_1color		2563863	0					
ANR	2563915	ExpressionStatement	"set_dev_proc ( udev , decode_color , upd_1color_rgb )"	3105:7:118884:118931	2563863	2	True				
ANR	2563916	CallExpression	"set_dev_proc ( udev , decode_color , upd_1color_rgb )"		2563863	0					
ANR	2563917	Callee	set_dev_proc		2563863	0					
ANR	2563918	Identifier	set_dev_proc		2563863	0					
ANR	2563919	ArgumentList	udev		2563863	1					
ANR	2563920	Argument	udev		2563863	0					
ANR	2563921	Identifier	udev		2563863	0					
ANR	2563922	Argument	decode_color		2563863	1					
ANR	2563923	Identifier	decode_color		2563863	0					
ANR	2563924	Argument	upd_1color_rgb		2563863	2					
ANR	2563925	Identifier	upd_1color_rgb		2563863	0					
ANR	2563926	ExpressionStatement	"set_dev_proc ( udev , map_rgb_color , upd_rgb_1color )"	3106:7:118940:118988	2563863	3	True				
ANR	2563927	CallExpression	"set_dev_proc ( udev , map_rgb_color , upd_rgb_1color )"		2563863	0					
ANR	2563928	Callee	set_dev_proc		2563863	0					
ANR	2563929	Identifier	set_dev_proc		2563863	0					
ANR	2563930	ArgumentList	udev		2563863	1					
ANR	2563931	Argument	udev		2563863	0					
ANR	2563932	Identifier	udev		2563863	0					
ANR	2563933	Argument	map_rgb_color		2563863	1					
ANR	2563934	Identifier	map_rgb_color		2563863	0					
ANR	2563935	Argument	upd_rgb_1color		2563863	2					
ANR	2563936	Identifier	upd_rgb_1color		2563863	0					
ANR	2563937	ExpressionStatement	"set_dev_proc ( udev , map_cmyk_color , gx_default_map_cmyk_color )"	3107:7:118997:119056	2563863	4	True				
ANR	2563938	CallExpression	"set_dev_proc ( udev , map_cmyk_color , gx_default_map_cmyk_color )"		2563863	0					
ANR	2563939	Callee	set_dev_proc		2563863	0					
ANR	2563940	Identifier	set_dev_proc		2563863	0					
ANR	2563941	ArgumentList	udev		2563863	1					
ANR	2563942	Argument	udev		2563863	0					
ANR	2563943	Identifier	udev		2563863	0					
ANR	2563944	Argument	map_cmyk_color		2563863	1					
ANR	2563945	Identifier	map_cmyk_color		2563863	0					
ANR	2563946	Argument	gx_default_map_cmyk_color		2563863	2					
ANR	2563947	Identifier	gx_default_map_cmyk_color		2563863	0					
ANR	2563948	ExpressionStatement	"set_dev_proc ( udev , map_color_rgb , upd_1color_rgb )"	3108:7:119065:119113	2563863	5	True				
ANR	2563949	CallExpression	"set_dev_proc ( udev , map_color_rgb , upd_1color_rgb )"		2563863	0					
ANR	2563950	Callee	set_dev_proc		2563863	0					
ANR	2563951	Identifier	set_dev_proc		2563863	0					
ANR	2563952	ArgumentList	udev		2563863	1					
ANR	2563953	Argument	udev		2563863	0					
ANR	2563954	Identifier	udev		2563863	0					
ANR	2563955	Argument	map_color_rgb		2563863	1					
ANR	2563956	Identifier	map_color_rgb		2563863	0					
ANR	2563957	Argument	upd_1color_rgb		2563863	2					
ANR	2563958	Identifier	upd_1color_rgb		2563863	0					
ANR	2563959	BreakStatement	break ;	3109:5:119120:119125	2563863	6	True				
ANR	2563960	Label	case MAP_RGBW :	3110:5:119132:119145	2563863	7	True				
ANR	2563961	Identifier	MAP_RGBW		2563863	0					
ANR	2563962	ExpressionStatement	"set_dev_proc ( udev , encode_color , upd_rgb_4color )"	3111:7:119170:119217	2563863	8	True				
ANR	2563963	CallExpression	"set_dev_proc ( udev , encode_color , upd_rgb_4color )"		2563863	0					
ANR	2563964	Callee	set_dev_proc		2563863	0					
ANR	2563965	Identifier	set_dev_proc		2563863	0					
ANR	2563966	ArgumentList	udev		2563863	1					
ANR	2563967	Argument	udev		2563863	0					
ANR	2563968	Identifier	udev		2563863	0					
ANR	2563969	Argument	encode_color		2563863	1					
ANR	2563970	Identifier	encode_color		2563863	0					
ANR	2563971	Argument	upd_rgb_4color		2563863	2					
ANR	2563972	Identifier	upd_rgb_4color		2563863	0					
ANR	2563973	ExpressionStatement	"set_dev_proc ( udev , decode_color , upd_4color_rgb )"	3112:7:119226:119273	2563863	9	True				
ANR	2563974	CallExpression	"set_dev_proc ( udev , decode_color , upd_4color_rgb )"		2563863	0					
ANR	2563975	Callee	set_dev_proc		2563863	0					
ANR	2563976	Identifier	set_dev_proc		2563863	0					
ANR	2563977	ArgumentList	udev		2563863	1					
ANR	2563978	Argument	udev		2563863	0					
ANR	2563979	Identifier	udev		2563863	0					
ANR	2563980	Argument	decode_color		2563863	1					
ANR	2563981	Identifier	decode_color		2563863	0					
ANR	2563982	Argument	upd_4color_rgb		2563863	2					
ANR	2563983	Identifier	upd_4color_rgb		2563863	0					
ANR	2563984	ExpressionStatement	"set_dev_proc ( udev , map_rgb_color , upd_rgb_4color )"	3113:7:119282:119330	2563863	10	True				
ANR	2563985	CallExpression	"set_dev_proc ( udev , map_rgb_color , upd_rgb_4color )"		2563863	0					
ANR	2563986	Callee	set_dev_proc		2563863	0					
ANR	2563987	Identifier	set_dev_proc		2563863	0					
ANR	2563988	ArgumentList	udev		2563863	1					
ANR	2563989	Argument	udev		2563863	0					
ANR	2563990	Identifier	udev		2563863	0					
ANR	2563991	Argument	map_rgb_color		2563863	1					
ANR	2563992	Identifier	map_rgb_color		2563863	0					
ANR	2563993	Argument	upd_rgb_4color		2563863	2					
ANR	2563994	Identifier	upd_rgb_4color		2563863	0					
ANR	2563995	ExpressionStatement	"set_dev_proc ( udev , map_cmyk_color , gx_default_map_cmyk_color )"	3114:7:119339:119398	2563863	11	True				
ANR	2563996	CallExpression	"set_dev_proc ( udev , map_cmyk_color , gx_default_map_cmyk_color )"		2563863	0					
ANR	2563997	Callee	set_dev_proc		2563863	0					
ANR	2563998	Identifier	set_dev_proc		2563863	0					
ANR	2563999	ArgumentList	udev		2563863	1					
ANR	2564000	Argument	udev		2563863	0					
ANR	2564001	Identifier	udev		2563863	0					
ANR	2564002	Argument	map_cmyk_color		2563863	1					
ANR	2564003	Identifier	map_cmyk_color		2563863	0					
ANR	2564004	Argument	gx_default_map_cmyk_color		2563863	2					
ANR	2564005	Identifier	gx_default_map_cmyk_color		2563863	0					
ANR	2564006	ExpressionStatement	"set_dev_proc ( udev , map_color_rgb , upd_4color_rgb )"	3115:7:119407:119455	2563863	12	True				
ANR	2564007	CallExpression	"set_dev_proc ( udev , map_color_rgb , upd_4color_rgb )"		2563863	0					
ANR	2564008	Callee	set_dev_proc		2563863	0					
ANR	2564009	Identifier	set_dev_proc		2563863	0					
ANR	2564010	ArgumentList	udev		2563863	1					
ANR	2564011	Argument	udev		2563863	0					
ANR	2564012	Identifier	udev		2563863	0					
ANR	2564013	Argument	map_color_rgb		2563863	1					
ANR	2564014	Identifier	map_color_rgb		2563863	0					
ANR	2564015	Argument	upd_4color_rgb		2563863	2					
ANR	2564016	Identifier	upd_4color_rgb		2563863	0					
ANR	2564017	BreakStatement	break ;	3116:5:119462:119467	2563863	13	True				
ANR	2564018	Label	case MAP_RGB :	3117:5:119474:119486	2563863	14	True				
ANR	2564019	Identifier	MAP_RGB		2563863	0					
ANR	2564020	ExpressionStatement	"set_dev_proc ( udev , encode_color , upd_rgb_3color )"	3118:7:119511:119558	2563863	15	True				
ANR	2564021	CallExpression	"set_dev_proc ( udev , encode_color , upd_rgb_3color )"		2563863	0					
ANR	2564022	Callee	set_dev_proc		2563863	0					
ANR	2564023	Identifier	set_dev_proc		2563863	0					
ANR	2564024	ArgumentList	udev		2563863	1					
ANR	2564025	Argument	udev		2563863	0					
ANR	2564026	Identifier	udev		2563863	0					
ANR	2564027	Argument	encode_color		2563863	1					
ANR	2564028	Identifier	encode_color		2563863	0					
ANR	2564029	Argument	upd_rgb_3color		2563863	2					
ANR	2564030	Identifier	upd_rgb_3color		2563863	0					
ANR	2564031	ExpressionStatement	"set_dev_proc ( udev , decode_color , upd_3color_rgb )"	3119:7:119567:119614	2563863	16	True				
ANR	2564032	CallExpression	"set_dev_proc ( udev , decode_color , upd_3color_rgb )"		2563863	0					
ANR	2564033	Callee	set_dev_proc		2563863	0					
ANR	2564034	Identifier	set_dev_proc		2563863	0					
ANR	2564035	ArgumentList	udev		2563863	1					
ANR	2564036	Argument	udev		2563863	0					
ANR	2564037	Identifier	udev		2563863	0					
ANR	2564038	Argument	decode_color		2563863	1					
ANR	2564039	Identifier	decode_color		2563863	0					
ANR	2564040	Argument	upd_3color_rgb		2563863	2					
ANR	2564041	Identifier	upd_3color_rgb		2563863	0					
ANR	2564042	ExpressionStatement	"set_dev_proc ( udev , map_rgb_color , upd_rgb_3color )"	3120:7:119623:119671	2563863	17	True				
ANR	2564043	CallExpression	"set_dev_proc ( udev , map_rgb_color , upd_rgb_3color )"		2563863	0					
ANR	2564044	Callee	set_dev_proc		2563863	0					
ANR	2564045	Identifier	set_dev_proc		2563863	0					
ANR	2564046	ArgumentList	udev		2563863	1					
ANR	2564047	Argument	udev		2563863	0					
ANR	2564048	Identifier	udev		2563863	0					
ANR	2564049	Argument	map_rgb_color		2563863	1					
ANR	2564050	Identifier	map_rgb_color		2563863	0					
ANR	2564051	Argument	upd_rgb_3color		2563863	2					
ANR	2564052	Identifier	upd_rgb_3color		2563863	0					
ANR	2564053	ExpressionStatement	"set_dev_proc ( udev , map_cmyk_color , gx_default_map_cmyk_color )"	3121:7:119680:119739	2563863	18	True				
ANR	2564054	CallExpression	"set_dev_proc ( udev , map_cmyk_color , gx_default_map_cmyk_color )"		2563863	0					
ANR	2564055	Callee	set_dev_proc		2563863	0					
ANR	2564056	Identifier	set_dev_proc		2563863	0					
ANR	2564057	ArgumentList	udev		2563863	1					
ANR	2564058	Argument	udev		2563863	0					
ANR	2564059	Identifier	udev		2563863	0					
ANR	2564060	Argument	map_cmyk_color		2563863	1					
ANR	2564061	Identifier	map_cmyk_color		2563863	0					
ANR	2564062	Argument	gx_default_map_cmyk_color		2563863	2					
ANR	2564063	Identifier	gx_default_map_cmyk_color		2563863	0					
ANR	2564064	ExpressionStatement	"set_dev_proc ( udev , map_color_rgb , upd_3color_rgb )"	3122:7:119748:119796	2563863	19	True				
ANR	2564065	CallExpression	"set_dev_proc ( udev , map_color_rgb , upd_3color_rgb )"		2563863	0					
ANR	2564066	Callee	set_dev_proc		2563863	0					
ANR	2564067	Identifier	set_dev_proc		2563863	0					
ANR	2564068	ArgumentList	udev		2563863	1					
ANR	2564069	Argument	udev		2563863	0					
ANR	2564070	Identifier	udev		2563863	0					
ANR	2564071	Argument	map_color_rgb		2563863	1					
ANR	2564072	Identifier	map_color_rgb		2563863	0					
ANR	2564073	Argument	upd_3color_rgb		2563863	2					
ANR	2564074	Identifier	upd_3color_rgb		2563863	0					
ANR	2564075	BreakStatement	break ;	3123:5:119803:119808	2563863	20	True				
ANR	2564076	Label	case MAP_CMYK :	3124:5:119815:119828	2563863	21	True				
ANR	2564077	Identifier	MAP_CMYK		2563863	0					
ANR	2564078	ExpressionStatement	"set_dev_proc ( udev , encode_color , upd_cmyk_icolor )"	3125:7:119854:119902	2563863	22	True				
ANR	2564079	CallExpression	"set_dev_proc ( udev , encode_color , upd_cmyk_icolor )"		2563863	0					
ANR	2564080	Callee	set_dev_proc		2563863	0					
ANR	2564081	Identifier	set_dev_proc		2563863	0					
ANR	2564082	ArgumentList	udev		2563863	1					
ANR	2564083	Argument	udev		2563863	0					
ANR	2564084	Identifier	udev		2563863	0					
ANR	2564085	Argument	encode_color		2563863	1					
ANR	2564086	Identifier	encode_color		2563863	0					
ANR	2564087	Argument	upd_cmyk_icolor		2563863	2					
ANR	2564088	Identifier	upd_cmyk_icolor		2563863	0					
ANR	2564089	ExpressionStatement	"set_dev_proc ( udev , decode_color , upd_icolor_rgb )"	3126:7:119911:119958	2563863	23	True				
ANR	2564090	CallExpression	"set_dev_proc ( udev , decode_color , upd_icolor_rgb )"		2563863	0					
ANR	2564091	Callee	set_dev_proc		2563863	0					
ANR	2564092	Identifier	set_dev_proc		2563863	0					
ANR	2564093	ArgumentList	udev		2563863	1					
ANR	2564094	Argument	udev		2563863	0					
ANR	2564095	Identifier	udev		2563863	0					
ANR	2564096	Argument	decode_color		2563863	1					
ANR	2564097	Identifier	decode_color		2563863	0					
ANR	2564098	Argument	upd_icolor_rgb		2563863	2					
ANR	2564099	Identifier	upd_icolor_rgb		2563863	0					
ANR	2564100	ExpressionStatement	"set_dev_proc ( udev , map_rgb_color , gx_default_map_rgb_color )"	3127:7:119967:120025	2563863	24	True				
ANR	2564101	CallExpression	"set_dev_proc ( udev , map_rgb_color , gx_default_map_rgb_color )"		2563863	0					
ANR	2564102	Callee	set_dev_proc		2563863	0					
ANR	2564103	Identifier	set_dev_proc		2563863	0					
ANR	2564104	ArgumentList	udev		2563863	1					
ANR	2564105	Argument	udev		2563863	0					
ANR	2564106	Identifier	udev		2563863	0					
ANR	2564107	Argument	map_rgb_color		2563863	1					
ANR	2564108	Identifier	map_rgb_color		2563863	0					
ANR	2564109	Argument	gx_default_map_rgb_color		2563863	2					
ANR	2564110	Identifier	gx_default_map_rgb_color		2563863	0					
ANR	2564111	ExpressionStatement	"set_dev_proc ( udev , map_cmyk_color , upd_cmyk_icolor )"	3128:7:120034:120083	2563863	25	True				
ANR	2564112	CallExpression	"set_dev_proc ( udev , map_cmyk_color , upd_cmyk_icolor )"		2563863	0					
ANR	2564113	Callee	set_dev_proc		2563863	0					
ANR	2564114	Identifier	set_dev_proc		2563863	0					
ANR	2564115	ArgumentList	udev		2563863	1					
ANR	2564116	Argument	udev		2563863	0					
ANR	2564117	Identifier	udev		2563863	0					
ANR	2564118	Argument	map_cmyk_color		2563863	1					
ANR	2564119	Identifier	map_cmyk_color		2563863	0					
ANR	2564120	Argument	upd_cmyk_icolor		2563863	2					
ANR	2564121	Identifier	upd_cmyk_icolor		2563863	0					
ANR	2564122	ExpressionStatement	"set_dev_proc ( udev , map_color_rgb , upd_icolor_rgb )"	3129:7:120092:120140	2563863	26	True				
ANR	2564123	CallExpression	"set_dev_proc ( udev , map_color_rgb , upd_icolor_rgb )"		2563863	0					
ANR	2564124	Callee	set_dev_proc		2563863	0					
ANR	2564125	Identifier	set_dev_proc		2563863	0					
ANR	2564126	ArgumentList	udev		2563863	1					
ANR	2564127	Argument	udev		2563863	0					
ANR	2564128	Identifier	udev		2563863	0					
ANR	2564129	Argument	map_color_rgb		2563863	1					
ANR	2564130	Identifier	map_color_rgb		2563863	0					
ANR	2564131	Argument	upd_icolor_rgb		2563863	2					
ANR	2564132	Identifier	upd_icolor_rgb		2563863	0					
ANR	2564133	BreakStatement	break ;	3130:5:120147:120152	2563863	27	True				
ANR	2564134	Label	case MAP_CMYKGEN :	3131:5:120159:120175	2563863	28	True				
ANR	2564135	Identifier	MAP_CMYKGEN		2563863	0					
ANR	2564136	ExpressionStatement	"set_dev_proc ( udev , encode_color , upd_cmyk_kcolor )"	3132:7:120217:120265	2563863	29	True				
ANR	2564137	CallExpression	"set_dev_proc ( udev , encode_color , upd_cmyk_kcolor )"		2563863	0					
ANR	2564138	Callee	set_dev_proc		2563863	0					
ANR	2564139	Identifier	set_dev_proc		2563863	0					
ANR	2564140	ArgumentList	udev		2563863	1					
ANR	2564141	Argument	udev		2563863	0					
ANR	2564142	Identifier	udev		2563863	0					
ANR	2564143	Argument	encode_color		2563863	1					
ANR	2564144	Identifier	encode_color		2563863	0					
ANR	2564145	Argument	upd_cmyk_kcolor		2563863	2					
ANR	2564146	Identifier	upd_cmyk_kcolor		2563863	0					
ANR	2564147	ExpressionStatement	"set_dev_proc ( udev , decode_color , upd_kcolor_rgb )"	3133:7:120274:120321	2563863	30	True				
ANR	2564148	CallExpression	"set_dev_proc ( udev , decode_color , upd_kcolor_rgb )"		2563863	0					
ANR	2564149	Callee	set_dev_proc		2563863	0					
ANR	2564150	Identifier	set_dev_proc		2563863	0					
ANR	2564151	ArgumentList	udev		2563863	1					
ANR	2564152	Argument	udev		2563863	0					
ANR	2564153	Identifier	udev		2563863	0					
ANR	2564154	Argument	decode_color		2563863	1					
ANR	2564155	Identifier	decode_color		2563863	0					
ANR	2564156	Argument	upd_kcolor_rgb		2563863	2					
ANR	2564157	Identifier	upd_kcolor_rgb		2563863	0					
ANR	2564158	ExpressionStatement	"set_dev_proc ( udev , map_rgb_color , gx_default_map_rgb_color )"	3134:7:120330:120388	2563863	31	True				
ANR	2564159	CallExpression	"set_dev_proc ( udev , map_rgb_color , gx_default_map_rgb_color )"		2563863	0					
ANR	2564160	Callee	set_dev_proc		2563863	0					
ANR	2564161	Identifier	set_dev_proc		2563863	0					
ANR	2564162	ArgumentList	udev		2563863	1					
ANR	2564163	Argument	udev		2563863	0					
ANR	2564164	Identifier	udev		2563863	0					
ANR	2564165	Argument	map_rgb_color		2563863	1					
ANR	2564166	Identifier	map_rgb_color		2563863	0					
ANR	2564167	Argument	gx_default_map_rgb_color		2563863	2					
ANR	2564168	Identifier	gx_default_map_rgb_color		2563863	0					
ANR	2564169	ExpressionStatement	"set_dev_proc ( udev , map_cmyk_color , upd_cmyk_kcolor )"	3135:7:120397:120446	2563863	32	True				
ANR	2564170	CallExpression	"set_dev_proc ( udev , map_cmyk_color , upd_cmyk_kcolor )"		2563863	0					
ANR	2564171	Callee	set_dev_proc		2563863	0					
ANR	2564172	Identifier	set_dev_proc		2563863	0					
ANR	2564173	ArgumentList	udev		2563863	1					
ANR	2564174	Argument	udev		2563863	0					
ANR	2564175	Identifier	udev		2563863	0					
ANR	2564176	Argument	map_cmyk_color		2563863	1					
ANR	2564177	Identifier	map_cmyk_color		2563863	0					
ANR	2564178	Argument	upd_cmyk_kcolor		2563863	2					
ANR	2564179	Identifier	upd_cmyk_kcolor		2563863	0					
ANR	2564180	ExpressionStatement	"set_dev_proc ( udev , map_color_rgb , upd_kcolor_rgb )"	3136:7:120455:120503	2563863	33	True				
ANR	2564181	CallExpression	"set_dev_proc ( udev , map_color_rgb , upd_kcolor_rgb )"		2563863	0					
ANR	2564182	Callee	set_dev_proc		2563863	0					
ANR	2564183	Identifier	set_dev_proc		2563863	0					
ANR	2564184	ArgumentList	udev		2563863	1					
ANR	2564185	Argument	udev		2563863	0					
ANR	2564186	Identifier	udev		2563863	0					
ANR	2564187	Argument	map_color_rgb		2563863	1					
ANR	2564188	Identifier	map_color_rgb		2563863	0					
ANR	2564189	Argument	upd_kcolor_rgb		2563863	2					
ANR	2564190	Identifier	upd_kcolor_rgb		2563863	0					
ANR	2564191	BreakStatement	break ;	3137:5:120510:120515	2563863	34	True				
ANR	2564192	Label	case MAP_RGBOV :	3138:5:120522:120536	2563863	35	True				
ANR	2564193	Identifier	MAP_RGBOV		2563863	0					
ANR	2564194	ExpressionStatement	"set_dev_proc ( udev , encode_color , upd_rgb_ovcolor )"	3139:7:120595:120643	2563863	36	True				
ANR	2564195	CallExpression	"set_dev_proc ( udev , encode_color , upd_rgb_ovcolor )"		2563863	0					
ANR	2564196	Callee	set_dev_proc		2563863	0					
ANR	2564197	Identifier	set_dev_proc		2563863	0					
ANR	2564198	ArgumentList	udev		2563863	1					
ANR	2564199	Argument	udev		2563863	0					
ANR	2564200	Identifier	udev		2563863	0					
ANR	2564201	Argument	encode_color		2563863	1					
ANR	2564202	Identifier	encode_color		2563863	0					
ANR	2564203	Argument	upd_rgb_ovcolor		2563863	2					
ANR	2564204	Identifier	upd_rgb_ovcolor		2563863	0					
ANR	2564205	ExpressionStatement	"set_dev_proc ( udev , decode_color , upd_ovcolor_rgb )"	3140:7:120652:120700	2563863	37	True				
ANR	2564206	CallExpression	"set_dev_proc ( udev , decode_color , upd_ovcolor_rgb )"		2563863	0					
ANR	2564207	Callee	set_dev_proc		2563863	0					
ANR	2564208	Identifier	set_dev_proc		2563863	0					
ANR	2564209	ArgumentList	udev		2563863	1					
ANR	2564210	Argument	udev		2563863	0					
ANR	2564211	Identifier	udev		2563863	0					
ANR	2564212	Argument	decode_color		2563863	1					
ANR	2564213	Identifier	decode_color		2563863	0					
ANR	2564214	Argument	upd_ovcolor_rgb		2563863	2					
ANR	2564215	Identifier	upd_ovcolor_rgb		2563863	0					
ANR	2564216	ExpressionStatement	"set_dev_proc ( udev , map_rgb_color , upd_rgb_ovcolor )"	3141:7:120709:120758	2563863	38	True				
ANR	2564217	CallExpression	"set_dev_proc ( udev , map_rgb_color , upd_rgb_ovcolor )"		2563863	0					
ANR	2564218	Callee	set_dev_proc		2563863	0					
ANR	2564219	Identifier	set_dev_proc		2563863	0					
ANR	2564220	ArgumentList	udev		2563863	1					
ANR	2564221	Argument	udev		2563863	0					
ANR	2564222	Identifier	udev		2563863	0					
ANR	2564223	Argument	map_rgb_color		2563863	1					
ANR	2564224	Identifier	map_rgb_color		2563863	0					
ANR	2564225	Argument	upd_rgb_ovcolor		2563863	2					
ANR	2564226	Identifier	upd_rgb_ovcolor		2563863	0					
ANR	2564227	ExpressionStatement	"set_dev_proc ( udev , map_cmyk_color , gx_default_map_cmyk_color )"	3142:7:120767:120826	2563863	39	True				
ANR	2564228	CallExpression	"set_dev_proc ( udev , map_cmyk_color , gx_default_map_cmyk_color )"		2563863	0					
ANR	2564229	Callee	set_dev_proc		2563863	0					
ANR	2564230	Identifier	set_dev_proc		2563863	0					
ANR	2564231	ArgumentList	udev		2563863	1					
ANR	2564232	Argument	udev		2563863	0					
ANR	2564233	Identifier	udev		2563863	0					
ANR	2564234	Argument	map_cmyk_color		2563863	1					
ANR	2564235	Identifier	map_cmyk_color		2563863	0					
ANR	2564236	Argument	gx_default_map_cmyk_color		2563863	2					
ANR	2564237	Identifier	gx_default_map_cmyk_color		2563863	0					
ANR	2564238	ExpressionStatement	"set_dev_proc ( udev , map_color_rgb , upd_ovcolor_rgb )"	3143:7:120835:120884	2563863	40	True				
ANR	2564239	CallExpression	"set_dev_proc ( udev , map_color_rgb , upd_ovcolor_rgb )"		2563863	0					
ANR	2564240	Callee	set_dev_proc		2563863	0					
ANR	2564241	Identifier	set_dev_proc		2563863	0					
ANR	2564242	ArgumentList	udev		2563863	1					
ANR	2564243	Argument	udev		2563863	0					
ANR	2564244	Identifier	udev		2563863	0					
ANR	2564245	Argument	map_color_rgb		2563863	1					
ANR	2564246	Identifier	map_color_rgb		2563863	0					
ANR	2564247	Argument	upd_ovcolor_rgb		2563863	2					
ANR	2564248	Identifier	upd_ovcolor_rgb		2563863	0					
ANR	2564249	BreakStatement	break ;	3144:5:120891:120896	2563863	41	True				
ANR	2564250	Label	case MAP_RGBNOV :	3145:5:120903:120918	2563863	42	True				
ANR	2564251	Identifier	MAP_RGBNOV		2563863	0					
ANR	2564252	ExpressionStatement	"set_dev_proc ( udev , encode_color , upd_rgb_novcolor )"	3146:7:120978:121027	2563863	43	True				
ANR	2564253	CallExpression	"set_dev_proc ( udev , encode_color , upd_rgb_novcolor )"		2563863	0					
ANR	2564254	Callee	set_dev_proc		2563863	0					
ANR	2564255	Identifier	set_dev_proc		2563863	0					
ANR	2564256	ArgumentList	udev		2563863	1					
ANR	2564257	Argument	udev		2563863	0					
ANR	2564258	Identifier	udev		2563863	0					
ANR	2564259	Argument	encode_color		2563863	1					
ANR	2564260	Identifier	encode_color		2563863	0					
ANR	2564261	Argument	upd_rgb_novcolor		2563863	2					
ANR	2564262	Identifier	upd_rgb_novcolor		2563863	0					
ANR	2564263	ExpressionStatement	"set_dev_proc ( udev , decode_color , upd_novcolor_rgb )"	3147:7:121036:121085	2563863	44	True				
ANR	2564264	CallExpression	"set_dev_proc ( udev , decode_color , upd_novcolor_rgb )"		2563863	0					
ANR	2564265	Callee	set_dev_proc		2563863	0					
ANR	2564266	Identifier	set_dev_proc		2563863	0					
ANR	2564267	ArgumentList	udev		2563863	1					
ANR	2564268	Argument	udev		2563863	0					
ANR	2564269	Identifier	udev		2563863	0					
ANR	2564270	Argument	decode_color		2563863	1					
ANR	2564271	Identifier	decode_color		2563863	0					
ANR	2564272	Argument	upd_novcolor_rgb		2563863	2					
ANR	2564273	Identifier	upd_novcolor_rgb		2563863	0					
ANR	2564274	ExpressionStatement	"set_dev_proc ( udev , map_rgb_color , upd_rgb_novcolor )"	3148:7:121094:121144	2563863	45	True				
ANR	2564275	CallExpression	"set_dev_proc ( udev , map_rgb_color , upd_rgb_novcolor )"		2563863	0					
ANR	2564276	Callee	set_dev_proc		2563863	0					
ANR	2564277	Identifier	set_dev_proc		2563863	0					
ANR	2564278	ArgumentList	udev		2563863	1					
ANR	2564279	Argument	udev		2563863	0					
ANR	2564280	Identifier	udev		2563863	0					
ANR	2564281	Argument	map_rgb_color		2563863	1					
ANR	2564282	Identifier	map_rgb_color		2563863	0					
ANR	2564283	Argument	upd_rgb_novcolor		2563863	2					
ANR	2564284	Identifier	upd_rgb_novcolor		2563863	0					
ANR	2564285	ExpressionStatement	"set_dev_proc ( udev , map_cmyk_color , gx_default_map_cmyk_color )"	3149:7:121153:121212	2563863	46	True				
ANR	2564286	CallExpression	"set_dev_proc ( udev , map_cmyk_color , gx_default_map_cmyk_color )"		2563863	0					
ANR	2564287	Callee	set_dev_proc		2563863	0					
ANR	2564288	Identifier	set_dev_proc		2563863	0					
ANR	2564289	ArgumentList	udev		2563863	1					
ANR	2564290	Argument	udev		2563863	0					
ANR	2564291	Identifier	udev		2563863	0					
ANR	2564292	Argument	map_cmyk_color		2563863	1					
ANR	2564293	Identifier	map_cmyk_color		2563863	0					
ANR	2564294	Argument	gx_default_map_cmyk_color		2563863	2					
ANR	2564295	Identifier	gx_default_map_cmyk_color		2563863	0					
ANR	2564296	ExpressionStatement	"set_dev_proc ( udev , map_color_rgb , upd_novcolor_rgb )"	3150:7:121221:121271	2563863	47	True				
ANR	2564297	CallExpression	"set_dev_proc ( udev , map_color_rgb , upd_novcolor_rgb )"		2563863	0					
ANR	2564298	Callee	set_dev_proc		2563863	0					
ANR	2564299	Identifier	set_dev_proc		2563863	0					
ANR	2564300	ArgumentList	udev		2563863	1					
ANR	2564301	Argument	udev		2563863	0					
ANR	2564302	Identifier	udev		2563863	0					
ANR	2564303	Argument	map_color_rgb		2563863	1					
ANR	2564304	Identifier	map_color_rgb		2563863	0					
ANR	2564305	Argument	upd_novcolor_rgb		2563863	2					
ANR	2564306	Identifier	upd_novcolor_rgb		2563863	0					
ANR	2564307	BreakStatement	break ;	3151:5:121278:121283	2563863	48	True				
ANR	2564308	Label	default :	3153:5:121291:121298	2563863	49	True				
ANR	2564309	Identifier	default		2563863	0					
ANR	2564310	ExpressionStatement	"set_dev_proc ( udev , encode_color , gx_default_map_rgb_color )"	3154:7:121307:121364	2563863	50	True				
ANR	2564311	CallExpression	"set_dev_proc ( udev , encode_color , gx_default_map_rgb_color )"		2563863	0					
ANR	2564312	Callee	set_dev_proc		2563863	0					
ANR	2564313	Identifier	set_dev_proc		2563863	0					
ANR	2564314	ArgumentList	udev		2563863	1					
ANR	2564315	Argument	udev		2563863	0					
ANR	2564316	Identifier	udev		2563863	0					
ANR	2564317	Argument	encode_color		2563863	1					
ANR	2564318	Identifier	encode_color		2563863	0					
ANR	2564319	Argument	gx_default_map_rgb_color		2563863	2					
ANR	2564320	Identifier	gx_default_map_rgb_color		2563863	0					
ANR	2564321	ExpressionStatement	"set_dev_proc ( udev , decode_color , gx_default_map_color_rgb )"	3155:7:121373:121430	2563863	51	True				
ANR	2564322	CallExpression	"set_dev_proc ( udev , decode_color , gx_default_map_color_rgb )"		2563863	0					
ANR	2564323	Callee	set_dev_proc		2563863	0					
ANR	2564324	Identifier	set_dev_proc		2563863	0					
ANR	2564325	ArgumentList	udev		2563863	1					
ANR	2564326	Argument	udev		2563863	0					
ANR	2564327	Identifier	udev		2563863	0					
ANR	2564328	Argument	decode_color		2563863	1					
ANR	2564329	Identifier	decode_color		2563863	0					
ANR	2564330	Argument	gx_default_map_color_rgb		2563863	2					
ANR	2564331	Identifier	gx_default_map_color_rgb		2563863	0					
ANR	2564332	ExpressionStatement	"set_dev_proc ( udev , map_rgb_color , gx_default_map_rgb_color )"	3156:7:121439:121497	2563863	52	True				
ANR	2564333	CallExpression	"set_dev_proc ( udev , map_rgb_color , gx_default_map_rgb_color )"		2563863	0					
ANR	2564334	Callee	set_dev_proc		2563863	0					
ANR	2564335	Identifier	set_dev_proc		2563863	0					
ANR	2564336	ArgumentList	udev		2563863	1					
ANR	2564337	Argument	udev		2563863	0					
ANR	2564338	Identifier	udev		2563863	0					
ANR	2564339	Argument	map_rgb_color		2563863	1					
ANR	2564340	Identifier	map_rgb_color		2563863	0					
ANR	2564341	Argument	gx_default_map_rgb_color		2563863	2					
ANR	2564342	Identifier	gx_default_map_rgb_color		2563863	0					
ANR	2564343	ExpressionStatement	"set_dev_proc ( udev , map_cmyk_color , gx_default_map_cmyk_color )"	3157:7:121506:121565	2563863	53	True				
ANR	2564344	CallExpression	"set_dev_proc ( udev , map_cmyk_color , gx_default_map_cmyk_color )"		2563863	0					
ANR	2564345	Callee	set_dev_proc		2563863	0					
ANR	2564346	Identifier	set_dev_proc		2563863	0					
ANR	2564347	ArgumentList	udev		2563863	1					
ANR	2564348	Argument	udev		2563863	0					
ANR	2564349	Identifier	udev		2563863	0					
ANR	2564350	Argument	map_cmyk_color		2563863	1					
ANR	2564351	Identifier	map_cmyk_color		2563863	0					
ANR	2564352	Argument	gx_default_map_cmyk_color		2563863	2					
ANR	2564353	Identifier	gx_default_map_cmyk_color		2563863	0					
ANR	2564354	ExpressionStatement	"set_dev_proc ( udev , map_color_rgb , gx_default_map_color_rgb )"	3158:7:121574:121632	2563863	54	True				
ANR	2564355	CallExpression	"set_dev_proc ( udev , map_color_rgb , gx_default_map_color_rgb )"		2563863	0					
ANR	2564356	Callee	set_dev_proc		2563863	0					
ANR	2564357	Identifier	set_dev_proc		2563863	0					
ANR	2564358	ArgumentList	udev		2563863	1					
ANR	2564359	Argument	udev		2563863	0					
ANR	2564360	Identifier	udev		2563863	0					
ANR	2564361	Argument	map_color_rgb		2563863	1					
ANR	2564362	Identifier	map_color_rgb		2563863	0					
ANR	2564363	Argument	gx_default_map_color_rgb		2563863	2					
ANR	2564364	Identifier	gx_default_map_color_rgb		2563863	0					
ANR	2564365	BreakStatement	break ;	3159:5:121639:121644	2563863	55	True				
ANR	2564366	ReturnStatement	return 0 ;	3161:2:121652:121660	2563863	3	True				
ANR	2564367	PrimaryExpression	0		2563863	0					
ANR	2564368	ReturnType	static int		2563863	1					
ANR	2564369	Identifier	upd_procs_map		2563863	2					
ANR	2564370	ParameterList	upd_device * udev		2563863	3					
ANR	2564371	Parameter	upd_device * udev	3094:14:118585:118600	2563863	0	True				
ANR	2564372	ParameterType	upd_device *		2563863	0					
ANR	2564373	Identifier	udev		2563863	1					
ANR	2564374	CFGEntryNode	ENTRY		2563863		True				
ANR	2564375	CFGExitNode	EXIT		2563863		True				
ANR	2564376	Symbol	C_MAPPER		2563863						
ANR	2564377	Symbol	upd_kcolor_rgb		2563863						
ANR	2564378	Symbol	gx_default_map_cmyk_color		2563863						
ANR	2564379	Symbol	upd_rgb_4color		2563863						
ANR	2564380	Symbol	map_cmyk_color		2563863						
ANR	2564381	Symbol	encode_color		2563863						
ANR	2564382	Symbol	gx_default_map_rgb_color		2563863						
ANR	2564383	Symbol	upd_novcolor_rgb		2563863						
ANR	2564384	Symbol	udev -> upd -> choice		2563863						
ANR	2564385	Symbol	upd_rgb_1color		2563863						
ANR	2564386	Symbol	map_color_rgb		2563863						
ANR	2564387	Symbol	udev -> upd		2563863						
ANR	2564388	Symbol	decode_color		2563863						
ANR	2564389	Symbol	upd_ovcolor_rgb		2563863						
ANR	2564390	Symbol	* udev		2563863						
ANR	2564391	Symbol	upd_rgb_novcolor		2563863						
ANR	2564392	Symbol	upd_icolor_rgb		2563863						
ANR	2564393	Symbol	* * udev -> upd		2563863						
ANR	2564394	Symbol	upd_3color_rgb		2563863						
ANR	2564395	Symbol	upd_rgb_3color		2563863						
ANR	2564396	Symbol	* * * udev		2563863						
ANR	2564397	Symbol	* udev -> upd		2563863						
ANR	2564398	Symbol	udev -> upd -> flags		2563863						
ANR	2564399	Symbol	upd_cmyk_kcolor		2563863						
ANR	2564400	Symbol	imap		2563863						
ANR	2564401	Symbol	* C_MAPPER		2563863						
ANR	2564402	Symbol	upd_4color_rgb		2563863						
ANR	2564403	Symbol	gx_default_map_color_rgb		2563863						
ANR	2564404	Symbol	upd_1color_rgb		2563863						
ANR	2564405	Symbol	map_rgb_color		2563863						
ANR	2564406	Symbol	B_MAP		2563863						
ANR	2564407	Symbol	* * udev		2563863						
ANR	2564408	Symbol	upd_rgb_ovcolor		2563863						
ANR	2564409	Symbol	* udev -> upd -> choice		2563863						
ANR	2564410	Symbol	udev		2563863						
ANR	2564411	Symbol	upd_cmyk_icolor		2563863						
ANR	2564412	Function	upd_close_map	3169:0:121889:122502							
ANR	2564413	FunctionDef	upd_close_map (upd_device * udev)		2564412	0					
ANR	2564414	CompoundStatement		3171:0:121932:122502	2564412	0					
ANR	2564415	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	3172:3:121937:121971	2564412	0	True				
ANR	2564416	IdentifierDecl	upd = udev -> upd		2564412	0					
ANR	2564417	IdentifierDeclType	const upd_p		2564412	0					
ANR	2564418	Identifier	upd		2564412	1					
ANR	2564419	AssignmentExpression	upd = udev -> upd		2564412	2		=			
ANR	2564420	Identifier	upd		2564412	0					
ANR	2564421	PtrMemberAccess	udev -> upd		2564412	1					
ANR	2564422	Identifier	udev		2564412	0					
ANR	2564423	Identifier	upd		2564412	1					
ANR	2564424	IdentifierDeclStatement	int imap ;	3173:3:121976:121984	2564412	1	True				
ANR	2564425	IdentifierDecl	imap		2564412	0					
ANR	2564426	IdentifierDeclType	int		2564412	0					
ANR	2564427	Identifier	imap		2564412	1					
ANR	2564428	IfStatement	if ( upd )		2564412	2					
ANR	2564429	Condition	upd	3175:6:121993:121995	2564412	0	True				
ANR	2564430	Identifier	upd		2564412	0					
ANR	2564431	CompoundStatement		5:11:65:65	2564412	1					
ANR	2564432	ForStatement	for ( imap = 0 ; UPD_CMAP_MAX > imap ; ++ imap )		2564412	0					
ANR	2564433	ForInit	imap = 0 ;	3177:10:122011:122019	2564412	0	True				
ANR	2564434	AssignmentExpression	imap = 0		2564412	0		=			
ANR	2564435	Identifier	imap		2564412	0					
ANR	2564436	PrimaryExpression	0		2564412	1					
ANR	2564437	Condition	UPD_CMAP_MAX > imap	3177:20:122021:122039	2564412	1	True				
ANR	2564438	RelationalExpression	UPD_CMAP_MAX > imap		2564412	0		>			
ANR	2564439	Identifier	UPD_CMAP_MAX		2564412	0					
ANR	2564440	Identifier	imap		2564412	1					
ANR	2564441	UnaryExpression	++ imap	3177:41:122042:122047	2564412	2	True				
ANR	2564442	IncDec	++		2564412	0					
ANR	2564443	Identifier	imap		2564412	1					
ANR	2564444	CompoundStatement		7:49:117:117	2564412	3					
ANR	2564445	IfStatement	if ( upd -> cmap [ imap ] . code )		2564412	0					
ANR	2564446	Condition	upd -> cmap [ imap ] . code	3179:12:122065:122084	2564412	0	True				
ANR	2564447	MemberAccess	upd -> cmap [ imap ] . code		2564412	0					
ANR	2564448	ArrayIndexing	upd -> cmap [ imap ]		2564412	0					
ANR	2564449	PtrMemberAccess	upd -> cmap		2564412	0					
ANR	2564450	Identifier	upd		2564412	0					
ANR	2564451	Identifier	cmap		2564412	1					
ANR	2564452	Identifier	imap		2564412	1					
ANR	2564453	Identifier	code		2564412	1					
ANR	2564454	ExpressionStatement	"gs_free ( udev -> memory , upd -> cmap [ imap ] . code , sizeof ( upd -> cmap [ imap ] . code [ 0 ] ) , upd -> cmap [ imap ] . bitmsk + 1 , ""upd/code"" )"	3180:12:122099:122227	2564412	1	True				
ANR	2564455	CallExpression	"gs_free ( udev -> memory , upd -> cmap [ imap ] . code , sizeof ( upd -> cmap [ imap ] . code [ 0 ] ) , upd -> cmap [ imap ] . bitmsk + 1 , ""upd/code"" )"		2564412	0					
ANR	2564456	Callee	gs_free		2564412	0					
ANR	2564457	Identifier	gs_free		2564412	0					
ANR	2564458	ArgumentList	udev -> memory		2564412	1					
ANR	2564459	Argument	udev -> memory		2564412	0					
ANR	2564460	PtrMemberAccess	udev -> memory		2564412	0					
ANR	2564461	Identifier	udev		2564412	0					
ANR	2564462	Identifier	memory		2564412	1					
ANR	2564463	Argument	upd -> cmap [ imap ] . code		2564412	1					
ANR	2564464	MemberAccess	upd -> cmap [ imap ] . code		2564412	0					
ANR	2564465	ArrayIndexing	upd -> cmap [ imap ]		2564412	0					
ANR	2564466	PtrMemberAccess	upd -> cmap		2564412	0					
ANR	2564467	Identifier	upd		2564412	0					
ANR	2564468	Identifier	cmap		2564412	1					
ANR	2564469	Identifier	imap		2564412	1					
ANR	2564470	Identifier	code		2564412	1					
ANR	2564471	Argument	sizeof ( upd -> cmap [ imap ] . code [ 0 ] )		2564412	2					
ANR	2564472	SizeofExpression	sizeof ( upd -> cmap [ imap ] . code [ 0 ] )		2564412	0					
ANR	2564473	Sizeof	sizeof		2564412	0					
ANR	2564474	ArrayIndexing	upd -> cmap [ imap ] . code [ 0 ]		2564412	1					
ANR	2564475	MemberAccess	upd -> cmap [ imap ] . code		2564412	0					
ANR	2564476	ArrayIndexing	upd -> cmap [ imap ]		2564412	0					
ANR	2564477	PtrMemberAccess	upd -> cmap		2564412	0					
ANR	2564478	Identifier	upd		2564412	0					
ANR	2564479	Identifier	cmap		2564412	1					
ANR	2564480	Identifier	imap		2564412	1					
ANR	2564481	Identifier	code		2564412	1					
ANR	2564482	PrimaryExpression	0		2564412	1					
ANR	2564483	Argument	upd -> cmap [ imap ] . bitmsk + 1		2564412	3					
ANR	2564484	AdditiveExpression	upd -> cmap [ imap ] . bitmsk + 1		2564412	0		+			
ANR	2564485	MemberAccess	upd -> cmap [ imap ] . bitmsk		2564412	0					
ANR	2564486	ArrayIndexing	upd -> cmap [ imap ]		2564412	0					
ANR	2564487	PtrMemberAccess	upd -> cmap		2564412	0					
ANR	2564488	Identifier	upd		2564412	0					
ANR	2564489	Identifier	cmap		2564412	1					
ANR	2564490	Identifier	imap		2564412	1					
ANR	2564491	Identifier	bitmsk		2564412	1					
ANR	2564492	PrimaryExpression	1		2564412	1					
ANR	2564493	Argument	"""upd/code"""		2564412	4					
ANR	2564494	PrimaryExpression	"""upd/code"""		2564412	0					
ANR	2564495	ExpressionStatement	upd -> cmap [ imap ] . code = NULL	3182:9:122238:122267	2564412	1	True				
ANR	2564496	AssignmentExpression	upd -> cmap [ imap ] . code = NULL		2564412	0		=			
ANR	2564497	MemberAccess	upd -> cmap [ imap ] . code		2564412	0					
ANR	2564498	ArrayIndexing	upd -> cmap [ imap ]		2564412	0					
ANR	2564499	PtrMemberAccess	upd -> cmap		2564412	0					
ANR	2564500	Identifier	upd		2564412	0					
ANR	2564501	Identifier	cmap		2564412	1					
ANR	2564502	Identifier	imap		2564412	1					
ANR	2564503	Identifier	code		2564412	1					
ANR	2564504	Identifier	NULL		2564412	1					
ANR	2564505	ExpressionStatement	upd -> cmap [ imap ] . bitmsk = 0	3184:9:122279:122305	2564412	2	True				
ANR	2564506	AssignmentExpression	upd -> cmap [ imap ] . bitmsk = 0		2564412	0		=			
ANR	2564507	MemberAccess	upd -> cmap [ imap ] . bitmsk		2564412	0					
ANR	2564508	ArrayIndexing	upd -> cmap [ imap ]		2564412	0					
ANR	2564509	PtrMemberAccess	upd -> cmap		2564412	0					
ANR	2564510	Identifier	upd		2564412	0					
ANR	2564511	Identifier	cmap		2564412	1					
ANR	2564512	Identifier	imap		2564412	1					
ANR	2564513	Identifier	bitmsk		2564412	1					
ANR	2564514	PrimaryExpression	0		2564412	1					
ANR	2564515	ExpressionStatement	upd -> cmap [ imap ] . bitshf = 0	3185:9:122316:122342	2564412	3	True				
ANR	2564516	AssignmentExpression	upd -> cmap [ imap ] . bitshf = 0		2564412	0		=			
ANR	2564517	MemberAccess	upd -> cmap [ imap ] . bitshf		2564412	0					
ANR	2564518	ArrayIndexing	upd -> cmap [ imap ]		2564412	0					
ANR	2564519	PtrMemberAccess	upd -> cmap		2564412	0					
ANR	2564520	Identifier	upd		2564412	0					
ANR	2564521	Identifier	cmap		2564412	1					
ANR	2564522	Identifier	imap		2564412	1					
ANR	2564523	Identifier	bitshf		2564412	1					
ANR	2564524	PrimaryExpression	0		2564412	1					
ANR	2564525	ExpressionStatement	upd -> cmap [ imap ] . bits = 0	3186:9:122353:122379	2564412	4	True				
ANR	2564526	AssignmentExpression	upd -> cmap [ imap ] . bits = 0		2564412	0		=			
ANR	2564527	MemberAccess	upd -> cmap [ imap ] . bits		2564412	0					
ANR	2564528	ArrayIndexing	upd -> cmap [ imap ]		2564412	0					
ANR	2564529	PtrMemberAccess	upd -> cmap		2564412	0					
ANR	2564530	Identifier	upd		2564412	0					
ANR	2564531	Identifier	cmap		2564412	1					
ANR	2564532	Identifier	imap		2564412	1					
ANR	2564533	Identifier	bits		2564412	1					
ANR	2564534	PrimaryExpression	0		2564412	1					
ANR	2564535	ExpressionStatement	upd -> cmap [ imap ] . rise = false	3187:9:122390:122420	2564412	5	True				
ANR	2564536	AssignmentExpression	upd -> cmap [ imap ] . rise = false		2564412	0		=			
ANR	2564537	MemberAccess	upd -> cmap [ imap ] . rise		2564412	0					
ANR	2564538	ArrayIndexing	upd -> cmap [ imap ]		2564412	0					
ANR	2564539	PtrMemberAccess	upd -> cmap		2564412	0					
ANR	2564540	Identifier	upd		2564412	0					
ANR	2564541	Identifier	cmap		2564412	1					
ANR	2564542	Identifier	imap		2564412	1					
ANR	2564543	Identifier	rise		2564412	1					
ANR	2564544	Identifier	false		2564412	1					
ANR	2564545	ExpressionStatement	upd -> flags &= ~B_MAP	3189:6:122436:122456	2564412	1	True				
ANR	2564546	AssignmentExpression	upd -> flags &= ~B_MAP		2564412	0		&=			
ANR	2564547	PtrMemberAccess	upd -> flags		2564412	0					
ANR	2564548	Identifier	upd		2564412	0					
ANR	2564549	Identifier	flags		2564412	1					
ANR	2564550	Identifier	~B_MAP		2564412	1					
ANR	2564551	ExpressionStatement	upd_procs_map ( udev )	3192:3:122467:122486	2564412	3	True				
ANR	2564552	CallExpression	upd_procs_map ( udev )		2564412	0					
ANR	2564553	Callee	upd_procs_map		2564412	0					
ANR	2564554	Identifier	upd_procs_map		2564412	0					
ANR	2564555	ArgumentList	udev		2564412	1					
ANR	2564556	Argument	udev		2564412	0					
ANR	2564557	Identifier	udev		2564412	0					
ANR	2564558	ReturnStatement	return 0 ;	3194:3:122492:122500	2564412	4	True				
ANR	2564559	PrimaryExpression	0		2564412	0					
ANR	2564560	ReturnType	static int		2564412	1					
ANR	2564561	Identifier	upd_close_map		2564412	2					
ANR	2564562	ParameterList	upd_device * udev		2564412	3					
ANR	2564563	Parameter	upd_device * udev	3170:14:121914:121929	2564412	0	True				
ANR	2564564	ParameterType	upd_device *		2564412	0					
ANR	2564565	Identifier	udev		2564412	1					
ANR	2564566	CFGEntryNode	ENTRY		2564412		True				
ANR	2564567	CFGExitNode	EXIT		2564412		True				
ANR	2564568	Symbol	upd -> cmap [ imap ] . bits		2564412						
ANR	2564569	Symbol	* upd -> cmap		2564412						
ANR	2564570	Symbol	upd -> cmap [ imap ] . rise		2564412						
ANR	2564571	Symbol	upd -> cmap		2564412						
ANR	2564572	Symbol	upd -> flags		2564412						
ANR	2564573	Symbol	~B_MAP		2564412						
ANR	2564574	Symbol	udev -> upd		2564412						
ANR	2564575	Symbol	* udev		2564412						
ANR	2564576	Symbol	* upd		2564412						
ANR	2564577	Symbol	* upd -> cmap [ imap ] . code		2564412						
ANR	2564578	Symbol	* imap		2564412						
ANR	2564579	Symbol	upd -> cmap [ imap ] . bitmsk		2564412						
ANR	2564580	Symbol	UPD_CMAP_MAX		2564412						
ANR	2564581	Symbol	imap		2564412						
ANR	2564582	Symbol	NULL		2564412						
ANR	2564583	Symbol	udev -> memory		2564412						
ANR	2564584	Symbol	* * * upd		2564412						
ANR	2564585	Symbol	* * imap		2564412						
ANR	2564586	Symbol	upd		2564412						
ANR	2564587	Symbol	false		2564412						
ANR	2564588	Symbol	upd -> cmap [ imap ] . bitshf		2564412						
ANR	2564589	Symbol	upd -> cmap [ imap ] . code		2564412						
ANR	2564590	Symbol	* * upd -> cmap		2564412						
ANR	2564591	Symbol	udev		2564412						
ANR	2564592	Symbol	* * upd		2564412						
ANR	2564593	Function	upd_open_render	3213:0:123178:124471							
ANR	2564594	FunctionDef	upd_open_render (upd_device * udev)		2564593	0					
ANR	2564595	CompoundStatement		3215:0:123224:124471	2564593	0					
ANR	2564596	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	3216:3:123229:123256	2564593	0	True				
ANR	2564597	IdentifierDecl	upd = udev -> upd		2564593	0					
ANR	2564598	IdentifierDeclType	const upd_p		2564593	0					
ANR	2564599	Identifier	upd		2564593	1					
ANR	2564600	AssignmentExpression	upd = udev -> upd		2564593	2		=			
ANR	2564601	Identifier	upd		2564593	0					
ANR	2564602	PtrMemberAccess	udev -> upd		2564593	1					
ANR	2564603	Identifier	udev		2564593	0					
ANR	2564604	Identifier	upd		2564593	1					
ANR	2564605	IdentifierDeclStatement	int icomp ;	3217:3:123261:123271	2564593	1	True				
ANR	2564606	IdentifierDecl	icomp		2564593	0					
ANR	2564607	IdentifierDeclType	int		2564593	0					
ANR	2564608	Identifier	icomp		2564593	1					
ANR	2564609	ExpressionStatement	upd -> flags &= ~B_RENDER	3220:3:123322:123351	2564593	2	True				
ANR	2564610	AssignmentExpression	upd -> flags &= ~B_RENDER		2564593	0		&=			
ANR	2564611	PtrMemberAccess	upd -> flags		2564593	0					
ANR	2564612	Identifier	upd		2564593	0					
ANR	2564613	Identifier	flags		2564593	1					
ANR	2564614	Identifier	~B_RENDER		2564593	1					
ANR	2564615	ExpressionStatement	upd -> valbuf = NULL	3221:3:123356:123380	2564593	3	True				
ANR	2564616	AssignmentExpression	upd -> valbuf = NULL		2564593	0		=			
ANR	2564617	PtrMemberAccess	upd -> valbuf		2564593	0					
ANR	2564618	Identifier	upd		2564593	0					
ANR	2564619	Identifier	valbuf		2564593	1					
ANR	2564620	Identifier	NULL		2564593	1					
ANR	2564621	ExpressionStatement	upd -> nvalbuf = 0	3222:3:123385:123406	2564593	4	True				
ANR	2564622	AssignmentExpression	upd -> nvalbuf = 0		2564593	0		=			
ANR	2564623	PtrMemberAccess	upd -> nvalbuf		2564593	0					
ANR	2564624	Identifier	upd		2564593	0					
ANR	2564625	Identifier	nvalbuf		2564593	1					
ANR	2564626	PrimaryExpression	0		2564593	1					
ANR	2564627	ExpressionStatement	upd -> render = NULL	3223:3:123411:123435	2564593	5	True				
ANR	2564628	AssignmentExpression	upd -> render = NULL		2564593	0		=			
ANR	2564629	PtrMemberAccess	upd -> render		2564593	0					
ANR	2564630	Identifier	upd		2564593	0					
ANR	2564631	Identifier	render		2564593	1					
ANR	2564632	Identifier	NULL		2564593	1					
ANR	2564633	ExpressionStatement	upd -> start_render = NULL	3224:3:123440:123464	2564593	6	True				
ANR	2564634	AssignmentExpression	upd -> start_render = NULL		2564593	0		=			
ANR	2564635	PtrMemberAccess	upd -> start_render		2564593	0					
ANR	2564636	Identifier	upd		2564593	0					
ANR	2564637	Identifier	start_render		2564593	1					
ANR	2564638	Identifier	NULL		2564593	1					
ANR	2564639	ForStatement	for ( icomp = 0 ; UPD_VALPTR_MAX > icomp ; ++ icomp )		2564593	7					
ANR	2564640	ForInit	icomp = 0 ;	3225:7:123473:123482	2564593	0	True				
ANR	2564641	AssignmentExpression	icomp = 0		2564593	0		=			
ANR	2564642	Identifier	icomp		2564593	0					
ANR	2564643	PrimaryExpression	0		2564593	1					
ANR	2564644	Condition	UPD_VALPTR_MAX > icomp	3225:18:123484:123505	2564593	1	True				
ANR	2564645	RelationalExpression	UPD_VALPTR_MAX > icomp		2564593	0		>			
ANR	2564646	Identifier	UPD_VALPTR_MAX		2564593	0					
ANR	2564647	Identifier	icomp		2564593	1					
ANR	2564648	UnaryExpression	++ icomp	3225:42:123508:123514	2564593	2	True				
ANR	2564649	IncDec	++		2564593	0					
ANR	2564650	Identifier	icomp		2564593	1					
ANR	2564651	ExpressionStatement	upd -> valptr [ icomp ] = NULL	3225:51:123517:123542	2564593	3	True				
ANR	2564652	AssignmentExpression	upd -> valptr [ icomp ] = NULL		2564593	0		=			
ANR	2564653	ArrayIndexing	upd -> valptr [ icomp ]		2564593	0					
ANR	2564654	PtrMemberAccess	upd -> valptr		2564593	0					
ANR	2564655	Identifier	upd		2564593	0					
ANR	2564656	Identifier	valptr		2564593	1					
ANR	2564657	Identifier	icomp		2564593	1					
ANR	2564658	Identifier	NULL		2564593	1					
ANR	2564659	IfStatement	if ( ( B_BUF | B_MAP ) == ( ( B_BUF | B_MAP | B_ERROR ) & upd -> flags ) )		2564593	8					
ANR	2564660	Condition	( B_BUF | B_MAP ) == ( ( B_BUF | B_MAP | B_ERROR ) & upd -> flags )	3227:7:123552:123616	2564593	0	True				
ANR	2564661	EqualityExpression	( B_BUF | B_MAP ) == ( ( B_BUF | B_MAP | B_ERROR ) & upd -> flags )		2564593	0		==			
ANR	2564662	InclusiveOrExpression	B_BUF | B_MAP		2564593	0		|			
ANR	2564663	Identifier	B_BUF		2564593	0					
ANR	2564664	Identifier	B_MAP		2564593	1					
ANR	2564665	BitAndExpression	( B_BUF | B_MAP | B_ERROR ) & upd -> flags		2564593	1		&			
ANR	2564666	InclusiveOrExpression	B_BUF | B_MAP | B_ERROR		2564593	0		|			
ANR	2564667	Identifier	B_BUF		2564593	0					
ANR	2564668	InclusiveOrExpression	B_MAP | B_ERROR		2564593	1		|			
ANR	2564669	Identifier	B_MAP		2564593	0					
ANR	2564670	Identifier	B_ERROR		2564593	1					
ANR	2564671	PtrMemberAccess	upd -> flags		2564593	1					
ANR	2564672	Identifier	upd		2564593	0					
ANR	2564673	Identifier	flags		2564593	1					
ANR	2564674	CompoundStatement		14:48:394:394	2564593	1					
ANR	2564675	ExpressionStatement	upd -> rwidth = upd -> gswidth	3231:6:123671:123697	2564593	0	True				
ANR	2564676	AssignmentExpression	upd -> rwidth = upd -> gswidth		2564593	0		=			
ANR	2564677	PtrMemberAccess	upd -> rwidth		2564593	0					
ANR	2564678	Identifier	upd		2564593	0					
ANR	2564679	Identifier	rwidth		2564593	1					
ANR	2564680	PtrMemberAccess	upd -> gswidth		2564593	1					
ANR	2564681	Identifier	upd		2564593	0					
ANR	2564682	Identifier	gswidth		2564593	1					
ANR	2564683	IfStatement	if ( ( 0 < upd -> ints [ I_PWIDTH ] ) && ( upd -> gswidth > upd -> ints [ I_PWIDTH ] ) )		2564593	1					
ANR	2564684	Condition	( 0 < upd -> ints [ I_PWIDTH ] ) && ( upd -> gswidth > upd -> ints [ I_PWIDTH ] )	3232:9:123708:123792	2564593	0	True				
ANR	2564685	AndExpression	( 0 < upd -> ints [ I_PWIDTH ] ) && ( upd -> gswidth > upd -> ints [ I_PWIDTH ] )		2564593	0		&&			
ANR	2564686	RelationalExpression	0 < upd -> ints [ I_PWIDTH ]		2564593	0		<			
ANR	2564687	PrimaryExpression	0		2564593	0					
ANR	2564688	ArrayIndexing	upd -> ints [ I_PWIDTH ]		2564593	1					
ANR	2564689	PtrMemberAccess	upd -> ints		2564593	0					
ANR	2564690	Identifier	upd		2564593	0					
ANR	2564691	Identifier	ints		2564593	1					
ANR	2564692	Identifier	I_PWIDTH		2564593	1					
ANR	2564693	RelationalExpression	upd -> gswidth > upd -> ints [ I_PWIDTH ]		2564593	1		>			
ANR	2564694	PtrMemberAccess	upd -> gswidth		2564593	0					
ANR	2564695	Identifier	upd		2564593	0					
ANR	2564696	Identifier	gswidth		2564593	1					
ANR	2564697	ArrayIndexing	upd -> ints [ I_PWIDTH ]		2564593	1					
ANR	2564698	PtrMemberAccess	upd -> ints		2564593	0					
ANR	2564699	Identifier	upd		2564593	0					
ANR	2564700	Identifier	ints		2564593	1					
ANR	2564701	Identifier	I_PWIDTH		2564593	1					
ANR	2564702	ExpressionStatement	upd -> rwidth = upd -> ints [ I_PWIDTH ]	3234:10:123808:123842	2564593	1	True				
ANR	2564703	AssignmentExpression	upd -> rwidth = upd -> ints [ I_PWIDTH ]		2564593	0		=			
ANR	2564704	PtrMemberAccess	upd -> rwidth		2564593	0					
ANR	2564705	Identifier	upd		2564593	0					
ANR	2564706	Identifier	rwidth		2564593	1					
ANR	2564707	ArrayIndexing	upd -> ints [ I_PWIDTH ]		2564593	1					
ANR	2564708	PtrMemberAccess	upd -> ints		2564593	0					
ANR	2564709	Identifier	upd		2564593	0					
ANR	2564710	Identifier	ints		2564593	1					
ANR	2564711	Identifier	I_PWIDTH		2564593	1					
ANR	2564712	SwitchStatement	switch ( upd -> choice [ C_RENDER ] )		2564593	2					
ANR	2564713	Condition	upd -> choice [ C_RENDER ]	3237:13:123904:123924	2564593	0	True				
ANR	2564714	ArrayIndexing	upd -> choice [ C_RENDER ]		2564593	0					
ANR	2564715	PtrMemberAccess	upd -> choice		2564593	0					
ANR	2564716	Identifier	upd		2564593	0					
ANR	2564717	Identifier	choice		2564593	1					
ANR	2564718	Identifier	C_RENDER		2564593	1					
ANR	2564719	CompoundStatement		23:36:702:702	2564593	1					
ANR	2564720	Label	case RND_FSCOMP :	3238:9:123938:123953	2564593	0	True				
ANR	2564721	Identifier	RND_FSCOMP		2564593	0					
ANR	2564722	ExpressionStatement	upd_open_fscomp ( udev )	3239:12:123967:123988	2564593	1	True				
ANR	2564723	CallExpression	upd_open_fscomp ( udev )		2564593	0					
ANR	2564724	Callee	upd_open_fscomp		2564593	0					
ANR	2564725	Identifier	upd_open_fscomp		2564593	0					
ANR	2564726	ArgumentList	udev		2564593	1					
ANR	2564727	Argument	udev		2564593	0					
ANR	2564728	Identifier	udev		2564593	0					
ANR	2564729	BreakStatement	break ;	3240:9:123999:124004	2564593	2	True				
ANR	2564730	Label	case RND_FSCMYK :	3241:9:124015:124030	2564593	3	True				
ANR	2564731	Identifier	RND_FSCMYK		2564593	0					
ANR	2564732	ExpressionStatement	upd_open_fscmyk ( udev )	3242:12:124044:124065	2564593	4	True				
ANR	2564733	CallExpression	upd_open_fscmyk ( udev )		2564593	0					
ANR	2564734	Callee	upd_open_fscmyk		2564593	0					
ANR	2564735	Identifier	upd_open_fscmyk		2564593	0					
ANR	2564736	ArgumentList	udev		2564593	1					
ANR	2564737	Argument	udev		2564593	0					
ANR	2564738	Identifier	udev		2564593	0					
ANR	2564739	BreakStatement	break ;	3243:9:124076:124081	2564593	5	True				
ANR	2564740	Label	case RND_FSCMY_K :	3244:9:124092:124108	2564593	6	True				
ANR	2564741	Identifier	RND_FSCMY_K		2564593	0					
ANR	2564742	ExpressionStatement	upd_open_fscmy_k ( udev )	3245:12:124122:124144	2564593	7	True				
ANR	2564743	CallExpression	upd_open_fscmy_k ( udev )		2564593	0					
ANR	2564744	Callee	upd_open_fscmy_k		2564593	0					
ANR	2564745	Identifier	upd_open_fscmy_k		2564593	0					
ANR	2564746	ArgumentList	udev		2564593	1					
ANR	2564747	Argument	udev		2564593	0					
ANR	2564748	Identifier	udev		2564593	0					
ANR	2564749	BreakStatement	break ;	3246:9:124155:124160	2564593	8	True				
ANR	2564750	Label	default :	3247:9:124171:124178	2564593	9	True				
ANR	2564751	Identifier	default		2564593	0					
ANR	2564752	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_render: Unknown rendering type %d\\n"" , upd -> choice [ C_RENDER ] )"	3249:12:124225:124335	2564593	10	True				
ANR	2564753	CallExpression	"errprintf ( udev -> memory , ""upd_open_render: Unknown rendering type %d\\n"" , upd -> choice [ C_RENDER ] )"		2564593	0					
ANR	2564754	Callee	errprintf		2564593	0					
ANR	2564755	Identifier	errprintf		2564593	0					
ANR	2564756	ArgumentList	udev -> memory		2564593	1					
ANR	2564757	Argument	udev -> memory		2564593	0					
ANR	2564758	PtrMemberAccess	udev -> memory		2564593	0					
ANR	2564759	Identifier	udev		2564593	0					
ANR	2564760	Identifier	memory		2564593	1					
ANR	2564761	Argument	"""upd_open_render: Unknown rendering type %d\\n"""		2564593	1					
ANR	2564762	PrimaryExpression	"""upd_open_render: Unknown rendering type %d\\n"""		2564593	0					
ANR	2564763	Argument	upd -> choice [ C_RENDER ]		2564593	2					
ANR	2564764	ArrayIndexing	upd -> choice [ C_RENDER ]		2564593	0					
ANR	2564765	PtrMemberAccess	upd -> choice		2564593	0					
ANR	2564766	Identifier	upd		2564593	0					
ANR	2564767	Identifier	choice		2564593	1					
ANR	2564768	Identifier	C_RENDER		2564593	1					
ANR	2564769	BreakStatement	break ;	3252:9:124353:124358	2564593	11	True				
ANR	2564770	IfStatement	if ( B_RENDER != ( ( B_ERROR | B_RENDER ) & upd -> flags ) )		2564593	9					
ANR	2564771	Condition	B_RENDER != ( ( B_ERROR | B_RENDER ) & upd -> flags )	3256:6:124380:124426	2564593	0	True				
ANR	2564772	EqualityExpression	B_RENDER != ( ( B_ERROR | B_RENDER ) & upd -> flags )		2564593	0		!=			
ANR	2564773	Identifier	B_RENDER		2564593	0					
ANR	2564774	BitAndExpression	( B_ERROR | B_RENDER ) & upd -> flags		2564593	1		&			
ANR	2564775	InclusiveOrExpression	B_ERROR | B_RENDER		2564593	0		|			
ANR	2564776	Identifier	B_ERROR		2564593	0					
ANR	2564777	Identifier	B_RENDER		2564593	1					
ANR	2564778	PtrMemberAccess	upd -> flags		2564593	1					
ANR	2564779	Identifier	upd		2564593	0					
ANR	2564780	Identifier	flags		2564593	1					
ANR	2564781	ExpressionStatement	upd_close_render ( udev )	3257:6:124435:124457	2564593	1	True				
ANR	2564782	CallExpression	upd_close_render ( udev )		2564593	0					
ANR	2564783	Callee	upd_close_render		2564593	0					
ANR	2564784	Identifier	upd_close_render		2564593	0					
ANR	2564785	ArgumentList	udev		2564593	1					
ANR	2564786	Argument	udev		2564593	0					
ANR	2564787	Identifier	udev		2564593	0					
ANR	2564788	ReturnStatement	return ;	3259:3:124463:124469	2564593	10	True				
ANR	2564789	ReturnType	static void		2564593	1					
ANR	2564790	Identifier	upd_open_render		2564593	2					
ANR	2564791	ParameterList	upd_device * udev		2564593	3					
ANR	2564792	Parameter	upd_device * udev	3214:16:123206:123221	2564593	0	True				
ANR	2564793	ParameterType	upd_device *		2564593	0					
ANR	2564794	Identifier	udev		2564593	1					
ANR	2564795	CFGEntryNode	ENTRY		2564593		True				
ANR	2564796	CFGExitNode	EXIT		2564593		True				
ANR	2564797	Symbol	B_ERROR		2564593						
ANR	2564798	Symbol	icomp		2564593						
ANR	2564799	Symbol	* upd -> choice		2564593						
ANR	2564800	Symbol	upd -> flags		2564593						
ANR	2564801	Symbol	upd -> rwidth		2564593						
ANR	2564802	Symbol	udev -> upd		2564593						
ANR	2564803	Symbol	upd -> valbuf		2564593						
ANR	2564804	Symbol	* udev		2564593						
ANR	2564805	Symbol	* upd		2564593						
ANR	2564806	Symbol	* icomp		2564593						
ANR	2564807	Symbol	upd -> nvalbuf		2564593						
ANR	2564808	Symbol	B_BUF		2564593						
ANR	2564809	Symbol	I_PWIDTH		2564593						
ANR	2564810	Symbol	upd -> start_render		2564593						
ANR	2564811	Symbol	* upd -> valptr		2564593						
ANR	2564812	Symbol	upd -> valptr		2564593						
ANR	2564813	Symbol	* C_RENDER		2564593						
ANR	2564814	Symbol	NULL		2564593						
ANR	2564815	Symbol	udev -> memory		2564593						
ANR	2564816	Symbol	upd		2564593						
ANR	2564817	Symbol	B_RENDER		2564593						
ANR	2564818	Symbol	upd -> choice		2564593						
ANR	2564819	Symbol	UPD_VALPTR_MAX		2564593						
ANR	2564820	Symbol	upd -> gswidth		2564593						
ANR	2564821	Symbol	C_RENDER		2564593						
ANR	2564822	Symbol	upd -> render		2564593						
ANR	2564823	Symbol	B_MAP		2564593						
ANR	2564824	Symbol	* I_PWIDTH		2564593						
ANR	2564825	Symbol	* upd -> ints		2564593						
ANR	2564826	Symbol	udev		2564593						
ANR	2564827	Symbol	~B_RENDER		2564593						
ANR	2564828	Symbol	* * upd		2564593						
ANR	2564829	Symbol	upd -> ints		2564593						
ANR	2564830	Function	upd_close_render	3266:0:124697:125306							
ANR	2564831	FunctionDef	upd_close_render (upd_device * udev)		2564830	0					
ANR	2564832	CompoundStatement		3268:0:124744:125306	2564830	0					
ANR	2564833	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	3269:3:124749:124776	2564830	0	True				
ANR	2564834	IdentifierDecl	upd = udev -> upd		2564830	0					
ANR	2564835	IdentifierDeclType	const upd_p		2564830	0					
ANR	2564836	Identifier	upd		2564830	1					
ANR	2564837	AssignmentExpression	upd = udev -> upd		2564830	2		=			
ANR	2564838	Identifier	upd		2564830	0					
ANR	2564839	PtrMemberAccess	udev -> upd		2564830	1					
ANR	2564840	Identifier	udev		2564830	0					
ANR	2564841	Identifier	upd		2564830	1					
ANR	2564842	IfStatement	if ( upd )		2564830	1					
ANR	2564843	Condition	upd	3271:6:124785:124787	2564830	0	True				
ANR	2564844	Identifier	upd		2564830	0					
ANR	2564845	CompoundStatement		5:6:53:62	2564830	1					
ANR	2564846	IdentifierDeclStatement	int icomp ;	3272:6:124798:124807	2564830	0	True				
ANR	2564847	IdentifierDecl	icomp		2564830	0					
ANR	2564848	IdentifierDeclType	int		2564830	0					
ANR	2564849	Identifier	icomp		2564830	1					
ANR	2564850	IfStatement	if ( ( upd -> render == upd_fscomp ) || ( upd -> render == upd_fscmyk ) )		2564830	1					
ANR	2564851	Condition	( upd -> render == upd_fscomp ) || ( upd -> render == upd_fscmyk )	3274:9:124819:124885	2564830	0	True				
ANR	2564852	OrExpression	( upd -> render == upd_fscomp ) || ( upd -> render == upd_fscmyk )		2564830	0		||			
ANR	2564853	EqualityExpression	upd -> render == upd_fscomp		2564830	0		==			
ANR	2564854	PtrMemberAccess	upd -> render		2564830	0					
ANR	2564855	Identifier	upd		2564830	0					
ANR	2564856	Identifier	render		2564830	1					
ANR	2564857	Identifier	upd_fscomp		2564830	1					
ANR	2564858	EqualityExpression	upd -> render == upd_fscmyk		2564830	1		==			
ANR	2564859	PtrMemberAccess	upd -> render		2564830	0					
ANR	2564860	Identifier	upd		2564830	0					
ANR	2564861	Identifier	render		2564830	1					
ANR	2564862	Identifier	upd_fscmyk		2564830	1					
ANR	2564863	ExpressionStatement	upd_close_fscomp ( udev )	3275:42:124892:124914	2564830	1	True				
ANR	2564864	CallExpression	upd_close_fscomp ( udev )		2564830	0					
ANR	2564865	Callee	upd_close_fscomp		2564830	0					
ANR	2564866	Identifier	upd_close_fscomp		2564830	0					
ANR	2564867	ArgumentList	udev		2564830	1					
ANR	2564868	Argument	udev		2564830	0					
ANR	2564869	Identifier	udev		2564830	0					
ANR	2564870	IfStatement	if ( ( 0 < upd -> nvalbuf ) && upd -> valbuf )		2564830	2					
ANR	2564871	Condition	( 0 < upd -> nvalbuf ) && upd -> valbuf	3277:9:124926:124958	2564830	0	True				
ANR	2564872	AndExpression	( 0 < upd -> nvalbuf ) && upd -> valbuf		2564830	0		&&			
ANR	2564873	RelationalExpression	0 < upd -> nvalbuf		2564830	0		<			
ANR	2564874	PrimaryExpression	0		2564830	0					
ANR	2564875	PtrMemberAccess	upd -> nvalbuf		2564830	1					
ANR	2564876	Identifier	upd		2564830	0					
ANR	2564877	Identifier	nvalbuf		2564830	1					
ANR	2564878	PtrMemberAccess	upd -> valbuf		2564830	1					
ANR	2564879	Identifier	upd		2564830	0					
ANR	2564880	Identifier	valbuf		2564830	1					
ANR	2564881	ExpressionStatement	"gs_free ( udev -> memory , upd -> valbuf , upd -> nvalbuf , sizeof ( upd -> valbuf [ 0 ] ) , ""upd/valbuf"" )"	3278:9:124970:125053	2564830	1	True				
ANR	2564882	CallExpression	"gs_free ( udev -> memory , upd -> valbuf , upd -> nvalbuf , sizeof ( upd -> valbuf [ 0 ] ) , ""upd/valbuf"" )"		2564830	0					
ANR	2564883	Callee	gs_free		2564830	0					
ANR	2564884	Identifier	gs_free		2564830	0					
ANR	2564885	ArgumentList	udev -> memory		2564830	1					
ANR	2564886	Argument	udev -> memory		2564830	0					
ANR	2564887	PtrMemberAccess	udev -> memory		2564830	0					
ANR	2564888	Identifier	udev		2564830	0					
ANR	2564889	Identifier	memory		2564830	1					
ANR	2564890	Argument	upd -> valbuf		2564830	1					
ANR	2564891	PtrMemberAccess	upd -> valbuf		2564830	0					
ANR	2564892	Identifier	upd		2564830	0					
ANR	2564893	Identifier	valbuf		2564830	1					
ANR	2564894	Argument	upd -> nvalbuf		2564830	2					
ANR	2564895	PtrMemberAccess	upd -> nvalbuf		2564830	0					
ANR	2564896	Identifier	upd		2564830	0					
ANR	2564897	Identifier	nvalbuf		2564830	1					
ANR	2564898	Argument	sizeof ( upd -> valbuf [ 0 ] )		2564830	3					
ANR	2564899	SizeofExpression	sizeof ( upd -> valbuf [ 0 ] )		2564830	0					
ANR	2564900	Sizeof	sizeof		2564830	0					
ANR	2564901	ArrayIndexing	upd -> valbuf [ 0 ]		2564830	1					
ANR	2564902	PtrMemberAccess	upd -> valbuf		2564830	0					
ANR	2564903	Identifier	upd		2564830	0					
ANR	2564904	Identifier	valbuf		2564830	1					
ANR	2564905	PrimaryExpression	0		2564830	1					
ANR	2564906	Argument	"""upd/valbuf"""		2564830	4					
ANR	2564907	PrimaryExpression	"""upd/valbuf"""		2564830	0					
ANR	2564908	ExpressionStatement	upd -> valbuf = NULL	3279:6:125061:125080	2564830	3	True				
ANR	2564909	AssignmentExpression	upd -> valbuf = NULL		2564830	0		=			
ANR	2564910	PtrMemberAccess	upd -> valbuf		2564830	0					
ANR	2564911	Identifier	upd		2564830	0					
ANR	2564912	Identifier	valbuf		2564830	1					
ANR	2564913	Identifier	NULL		2564830	1					
ANR	2564914	ExpressionStatement	upd -> nvalbuf = 0	3280:6:125088:125104	2564830	4	True				
ANR	2564915	AssignmentExpression	upd -> nvalbuf = 0		2564830	0		=			
ANR	2564916	PtrMemberAccess	upd -> nvalbuf		2564830	0					
ANR	2564917	Identifier	upd		2564830	0					
ANR	2564918	Identifier	nvalbuf		2564830	1					
ANR	2564919	PrimaryExpression	0		2564830	1					
ANR	2564920	ExpressionStatement	upd -> flags &= ~B_RENDER	3282:6:125113:125142	2564830	5	True				
ANR	2564921	AssignmentExpression	upd -> flags &= ~B_RENDER		2564830	0		&=			
ANR	2564922	PtrMemberAccess	upd -> flags		2564830	0					
ANR	2564923	Identifier	upd		2564830	0					
ANR	2564924	Identifier	flags		2564830	1					
ANR	2564925	Identifier	~B_RENDER		2564830	1					
ANR	2564926	ExpressionStatement	upd -> render = NULL	3283:6:125150:125174	2564830	6	True				
ANR	2564927	AssignmentExpression	upd -> render = NULL		2564830	0		=			
ANR	2564928	PtrMemberAccess	upd -> render		2564830	0					
ANR	2564929	Identifier	upd		2564830	0					
ANR	2564930	Identifier	render		2564830	1					
ANR	2564931	Identifier	NULL		2564830	1					
ANR	2564932	ExpressionStatement	upd -> start_render = NULL	3284:6:125182:125206	2564830	7	True				
ANR	2564933	AssignmentExpression	upd -> start_render = NULL		2564830	0		=			
ANR	2564934	PtrMemberAccess	upd -> start_render		2564830	0					
ANR	2564935	Identifier	upd		2564830	0					
ANR	2564936	Identifier	start_render		2564830	1					
ANR	2564937	Identifier	NULL		2564830	1					
ANR	2564938	ForStatement	for ( icomp = 0 ; UPD_VALPTR_MAX > icomp ; ++ icomp )		2564830	8					
ANR	2564939	ForInit	icomp = 0 ;	3285:10:125218:125227	2564830	0	True				
ANR	2564940	AssignmentExpression	icomp = 0		2564830	0		=			
ANR	2564941	Identifier	icomp		2564830	0					
ANR	2564942	PrimaryExpression	0		2564830	1					
ANR	2564943	Condition	UPD_VALPTR_MAX > icomp	3285:21:125229:125250	2564830	1	True				
ANR	2564944	RelationalExpression	UPD_VALPTR_MAX > icomp		2564830	0		>			
ANR	2564945	Identifier	UPD_VALPTR_MAX		2564830	0					
ANR	2564946	Identifier	icomp		2564830	1					
ANR	2564947	UnaryExpression	++ icomp	3285:45:125253:125259	2564830	2	True				
ANR	2564948	IncDec	++		2564830	0					
ANR	2564949	Identifier	icomp		2564830	1					
ANR	2564950	ExpressionStatement	upd -> valptr [ icomp ] = NULL	3285:54:125262:125287	2564830	3	True				
ANR	2564951	AssignmentExpression	upd -> valptr [ icomp ] = NULL		2564830	0		=			
ANR	2564952	ArrayIndexing	upd -> valptr [ icomp ]		2564830	0					
ANR	2564953	PtrMemberAccess	upd -> valptr		2564830	0					
ANR	2564954	Identifier	upd		2564830	0					
ANR	2564955	Identifier	valptr		2564830	1					
ANR	2564956	Identifier	icomp		2564830	1					
ANR	2564957	Identifier	NULL		2564830	1					
ANR	2564958	ReturnStatement	return ;	3288:3:125298:125304	2564830	2	True				
ANR	2564959	ReturnType	static void		2564830	1					
ANR	2564960	Identifier	upd_close_render		2564830	2					
ANR	2564961	ParameterList	upd_device * udev		2564830	3					
ANR	2564962	Parameter	upd_device * udev	3267:17:124726:124741	2564830	0	True				
ANR	2564963	ParameterType	upd_device *		2564830	0					
ANR	2564964	Identifier	udev		2564830	1					
ANR	2564965	CFGEntryNode	ENTRY		2564830		True				
ANR	2564966	CFGExitNode	EXIT		2564830		True				
ANR	2564967	Symbol	* upd -> valbuf		2564830						
ANR	2564968	Symbol	NULL		2564830						
ANR	2564969	Symbol	udev -> memory		2564830						
ANR	2564970	Symbol	upd_fscmyk		2564830						
ANR	2564971	Symbol	upd		2564830						
ANR	2564972	Symbol	upd_fscomp		2564830						
ANR	2564973	Symbol	UPD_VALPTR_MAX		2564830						
ANR	2564974	Symbol	icomp		2564830						
ANR	2564975	Symbol	upd -> render		2564830						
ANR	2564976	Symbol	upd -> flags		2564830						
ANR	2564977	Symbol	udev -> upd		2564830						
ANR	2564978	Symbol	upd -> valbuf		2564830						
ANR	2564979	Symbol	* udev		2564830						
ANR	2564980	Symbol	* upd		2564830						
ANR	2564981	Symbol	* icomp		2564830						
ANR	2564982	Symbol	udev		2564830						
ANR	2564983	Symbol	upd -> nvalbuf		2564830						
ANR	2564984	Symbol	~B_RENDER		2564830						
ANR	2564985	Symbol	upd -> start_render		2564830						
ANR	2564986	Symbol	* upd -> valptr		2564830						
ANR	2564987	Symbol	* * upd		2564830						
ANR	2564988	Symbol	upd -> valptr		2564830						
ANR	2564989	DeclStmt									
ANR	2564990	Decl							int32_t	int32_t [ UPD_VALPTR_MAX ]	fs_emin
ANR	2564991	Decl							int32_t	int32_t [ UPD_VALPTR_MAX ]	fs_emax
ANR	2564992	Function	upd_open_fscomp	3297:0:125633:132059							
ANR	2564993	FunctionDef	upd_open_fscomp (upd_device * udev)		2564992	0					
ANR	2564994	CompoundStatement		3299:0:125679:132059	2564992	0					
ANR	2564995	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	3300:3:125684:125711	2564992	0	True				
ANR	2564996	IdentifierDecl	upd = udev -> upd		2564992	0					
ANR	2564997	IdentifierDeclType	const upd_p		2564992	0					
ANR	2564998	Identifier	upd		2564992	1					
ANR	2564999	AssignmentExpression	upd = udev -> upd		2564992	2		=			
ANR	2565000	Identifier	upd		2564992	0					
ANR	2565001	PtrMemberAccess	udev -> upd		2564992	1					
ANR	2565002	Identifier	udev		2564992	0					
ANR	2565003	Identifier	upd		2564992	1					
ANR	2565004	IdentifierDeclStatement	"int icomp , order [ UPD_CMAP_MAX ] ;"	3301:3:125716:125745	2564992	1	True				
ANR	2565005	IdentifierDecl	icomp		2564992	0					
ANR	2565006	IdentifierDeclType	int		2564992	0					
ANR	2565007	Identifier	icomp		2564992	1					
ANR	2565008	IdentifierDecl	order [ UPD_CMAP_MAX ]		2564992	1					
ANR	2565009	IdentifierDeclType	int [ UPD_CMAP_MAX ]		2564992	0					
ANR	2565010	Identifier	order		2564992	1					
ANR	2565011	Identifier	UPD_CMAP_MAX		2564992	2					
ANR	2565012	ForStatement	for ( icomp = 0 ; UPD_VALPTR_MAX < icomp ; ++ icomp )		2564992	2					
ANR	2565013	ForInit	icomp = 0 ;	3304:7:125786:125795	2564992	0	True				
ANR	2565014	AssignmentExpression	icomp = 0		2564992	0		=			
ANR	2565015	Identifier	icomp		2564992	0					
ANR	2565016	PrimaryExpression	0		2564992	1					
ANR	2565017	Condition	UPD_VALPTR_MAX < icomp	3304:18:125797:125818	2564992	1	True				
ANR	2565018	RelationalExpression	UPD_VALPTR_MAX < icomp		2564992	0		<			
ANR	2565019	Identifier	UPD_VALPTR_MAX		2564992	0					
ANR	2565020	Identifier	icomp		2564992	1					
ANR	2565021	UnaryExpression	++ icomp	3304:42:125821:125827	2564992	2	True				
ANR	2565022	IncDec	++		2564992	0					
ANR	2565023	Identifier	icomp		2564992	1					
ANR	2565024	ExpressionStatement	fs_emin [ icomp ] = fs_emax [ icomp ] = 0	3305:6:125836:125871	2564992	3	True				
ANR	2565025	AssignmentExpression	fs_emin [ icomp ] = fs_emax [ icomp ] = 0		2564992	0		=			
ANR	2565026	ArrayIndexing	fs_emin [ icomp ]		2564992	0					
ANR	2565027	Identifier	fs_emin		2564992	0					
ANR	2565028	Identifier	icomp		2564992	1					
ANR	2565029	AssignmentExpression	fs_emax [ icomp ] = 0		2564992	1		=			
ANR	2565030	ArrayIndexing	fs_emax [ icomp ]		2564992	0					
ANR	2565031	Identifier	fs_emax		2564992	0					
ANR	2565032	Identifier	icomp		2564992	1					
ANR	2565033	PrimaryExpression	0		2564992	1					
ANR	2565034	ExpressionStatement	icomp = upd -> ncomp	3308:3:125884:125902	2564992	3	True				
ANR	2565035	AssignmentExpression	icomp = upd -> ncomp		2564992	0		=			
ANR	2565036	Identifier	icomp		2564992	0					
ANR	2565037	PtrMemberAccess	upd -> ncomp		2564992	1					
ANR	2565038	Identifier	upd		2564992	0					
ANR	2565039	Identifier	ncomp		2564992	1					
ANR	2565040	IfStatement	if ( ( 0 >= icomp ) || ( UPD_VALPTR_MAX < icomp ) || ( UPD_CMAP_MAX < icomp ) )		2564992	4					
ANR	2565041	Condition	( 0 >= icomp ) || ( UPD_VALPTR_MAX < icomp ) || ( UPD_CMAP_MAX < icomp )	3310:6:125911:126005	2564992	0	True				
ANR	2565042	OrExpression	( 0 >= icomp ) || ( UPD_VALPTR_MAX < icomp ) || ( UPD_CMAP_MAX < icomp )		2564992	0		||			
ANR	2565043	RelationalExpression	0 >= icomp		2564992	0		>=			
ANR	2565044	PrimaryExpression	0		2564992	0					
ANR	2565045	Identifier	icomp		2564992	1					
ANR	2565046	OrExpression	( UPD_VALPTR_MAX < icomp ) || ( UPD_CMAP_MAX < icomp )		2564992	1		||			
ANR	2565047	RelationalExpression	UPD_VALPTR_MAX < icomp		2564992	0		<			
ANR	2565048	Identifier	UPD_VALPTR_MAX		2564992	0					
ANR	2565049	Identifier	icomp		2564992	1					
ANR	2565050	RelationalExpression	UPD_CMAP_MAX < icomp		2564992	1		<			
ANR	2565051	Identifier	UPD_CMAP_MAX		2564992	0					
ANR	2565052	Identifier	icomp		2564992	1					
ANR	2565053	ExpressionStatement	icomp = 0	3312:36:126011:126025	2564992	1	True				
ANR	2565054	AssignmentExpression	icomp = 0		2564992	0		=			
ANR	2565055	Identifier	icomp		2564992	0					
ANR	2565056	PrimaryExpression	0		2564992	1					
ANR	2565057	IfStatement	if ( icomp )		2564992	5					
ANR	2565058	Condition	icomp	3320:6:126284:126288	2564992	0	True				
ANR	2565059	Identifier	icomp		2564992	0					
ANR	2565060	CompoundStatement		22:13:611:611	2564992	1					
ANR	2565061	IfStatement	if ( upd -> ncomp <= upd -> int_a [ IA_COMPORDER ] . size )		2564992	0					
ANR	2565062	Condition	upd -> ncomp <= upd -> int_a [ IA_COMPORDER ] . size	3321:9:126302:126344	2564992	0	True				
ANR	2565063	RelationalExpression	upd -> ncomp <= upd -> int_a [ IA_COMPORDER ] . size		2564992	0		<=			
ANR	2565064	PtrMemberAccess	upd -> ncomp		2564992	0					
ANR	2565065	Identifier	upd		2564992	0					
ANR	2565066	Identifier	ncomp		2564992	1					
ANR	2565067	MemberAccess	upd -> int_a [ IA_COMPORDER ] . size		2564992	1					
ANR	2565068	ArrayIndexing	upd -> int_a [ IA_COMPORDER ]		2564992	0					
ANR	2565069	PtrMemberAccess	upd -> int_a		2564992	0					
ANR	2565070	Identifier	upd		2564992	0					
ANR	2565071	Identifier	int_a		2564992	1					
ANR	2565072	Identifier	IA_COMPORDER		2564992	1					
ANR	2565073	Identifier	size		2564992	1					
ANR	2565074	CompoundStatement		24:9:695:714	2564992	1					
ANR	2565075	IdentifierDeclStatement	bool success = true ;	3322:9:126375:126394	2564992	0	True				
ANR	2565076	IdentifierDecl	success = true		2564992	0					
ANR	2565077	IdentifierDeclType	bool		2564992	0					
ANR	2565078	Identifier	success		2564992	1					
ANR	2565079	AssignmentExpression	success = true		2564992	2		=			
ANR	2565080	Identifier	true		2564992	0					
ANR	2565081	Identifier	true		2564992	1					
ANR	2565082	ForStatement	for ( icomp = 0 ; upd -> ncomp > icomp ; ++ icomp )		2564992	1					
ANR	2565083	ForInit	icomp = 0 ;	3323:13:126409:126418	2564992	0	True				
ANR	2565084	AssignmentExpression	icomp = 0		2564992	0		=			
ANR	2565085	Identifier	icomp		2564992	0					
ANR	2565086	PrimaryExpression	0		2564992	1					
ANR	2565087	Condition	upd -> ncomp > icomp	3323:24:126420:126437	2564992	1	True				
ANR	2565088	RelationalExpression	upd -> ncomp > icomp		2564992	0		>			
ANR	2565089	PtrMemberAccess	upd -> ncomp		2564992	0					
ANR	2565090	Identifier	upd		2564992	0					
ANR	2565091	Identifier	ncomp		2564992	1					
ANR	2565092	Identifier	icomp		2564992	1					
ANR	2565093	UnaryExpression	++ icomp	3323:44:126440:126446	2564992	2	True				
ANR	2565094	IncDec	++		2564992	0					
ANR	2565095	Identifier	icomp		2564992	1					
ANR	2565096	CompoundStatement		25:53:769:769	2564992	3					
ANR	2565097	ExpressionStatement	order [ icomp ] = upd -> int_a [ IA_COMPORDER ] . data [ icomp ]	3324:12:126463:126514	2564992	0	True				
ANR	2565098	AssignmentExpression	order [ icomp ] = upd -> int_a [ IA_COMPORDER ] . data [ icomp ]		2564992	0		=			
ANR	2565099	ArrayIndexing	order [ icomp ]		2564992	0					
ANR	2565100	Identifier	order		2564992	0					
ANR	2565101	Identifier	icomp		2564992	1					
ANR	2565102	ArrayIndexing	upd -> int_a [ IA_COMPORDER ] . data [ icomp ]		2564992	1					
ANR	2565103	MemberAccess	upd -> int_a [ IA_COMPORDER ] . data		2564992	0					
ANR	2565104	ArrayIndexing	upd -> int_a [ IA_COMPORDER ]		2564992	0					
ANR	2565105	PtrMemberAccess	upd -> int_a		2564992	0					
ANR	2565106	Identifier	upd		2564992	0					
ANR	2565107	Identifier	int_a		2564992	1					
ANR	2565108	Identifier	IA_COMPORDER		2564992	1					
ANR	2565109	Identifier	data		2564992	1					
ANR	2565110	Identifier	icomp		2564992	1					
ANR	2565111	IfStatement	if ( ( 0 > order [ icomp ] ) || ( UPD_CMAP_MAX <= order [ icomp ] ) )		2564992	1					
ANR	2565112	Condition	( 0 > order [ icomp ] ) || ( UPD_CMAP_MAX <= order [ icomp ] )	3325:15:126531:126609	2564992	0	True				
ANR	2565113	OrExpression	( 0 > order [ icomp ] ) || ( UPD_CMAP_MAX <= order [ icomp ] )		2564992	0		||			
ANR	2565114	RelationalExpression	0 > order [ icomp ]		2564992	0		>			
ANR	2565115	PrimaryExpression	0		2564992	0					
ANR	2565116	ArrayIndexing	order [ icomp ]		2564992	1					
ANR	2565117	Identifier	order		2564992	0					
ANR	2565118	Identifier	icomp		2564992	1					
ANR	2565119	RelationalExpression	UPD_CMAP_MAX <= order [ icomp ]		2564992	1		<=			
ANR	2565120	Identifier	UPD_CMAP_MAX		2564992	0					
ANR	2565121	ArrayIndexing	order [ icomp ]		2564992	1					
ANR	2565122	Identifier	order		2564992	0					
ANR	2565123	Identifier	icomp		2564992	1					
ANR	2565124	CompoundStatement		28:50:935:935	2564992	1					
ANR	2565125	ExpressionStatement	success = false	3327:15:126632:126647	2564992	0	True				
ANR	2565126	AssignmentExpression	success = false		2564992	0		=			
ANR	2565127	Identifier	success		2564992	0					
ANR	2565128	Identifier	false		2564992	1					
ANR	2565129	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_fscomp: %d is illegal component-index\\n"" , order [ icomp ] )"	3329:18:126700:126827	2564992	1	True				
ANR	2565130	CallExpression	"errprintf ( udev -> memory , ""upd_open_fscomp: %d is illegal component-index\\n"" , order [ icomp ] )"		2564992	0					
ANR	2565131	Callee	errprintf		2564992	0					
ANR	2565132	Identifier	errprintf		2564992	0					
ANR	2565133	ArgumentList	udev -> memory		2564992	1					
ANR	2565134	Argument	udev -> memory		2564992	0					
ANR	2565135	PtrMemberAccess	udev -> memory		2564992	0					
ANR	2565136	Identifier	udev		2564992	0					
ANR	2565137	Identifier	memory		2564992	1					
ANR	2565138	Argument	"""upd_open_fscomp: %d is illegal component-index\\n"""		2564992	1					
ANR	2565139	PrimaryExpression	"""upd_open_fscomp: %d is illegal component-index\\n"""		2564992	0					
ANR	2565140	Argument	order [ icomp ]		2564992	2					
ANR	2565141	ArrayIndexing	order [ icomp ]		2564992	0					
ANR	2565142	Identifier	order		2564992	0					
ANR	2565143	Identifier	icomp		2564992	1					
ANR	2565144	IfStatement	if ( ! success )		2564992	2					
ANR	2565145	Condition	! success	3335:12:126873:126880	2564992	0	True				
ANR	2565146	UnaryOperationExpression	! success		2564992	0					
ANR	2565147	UnaryOperator	!		2564992	0					
ANR	2565148	Identifier	success		2564992	1					
ANR	2565149	ExpressionStatement	icomp = 0	3335:22:126883:126892	2564992	1	True				
ANR	2565150	AssignmentExpression	icomp = 0		2564992	0		=			
ANR	2565151	Identifier	icomp		2564992	0					
ANR	2565152	PrimaryExpression	0		2564992	1					
ANR	2565153	ElseStatement	else		2564992	0					
ANR	2565154	CompoundStatement		38:13:1227:1227	2564992	0					
ANR	2565155	ForStatement	for ( icomp = 0 ; UPD_CMAP_MAX > icomp ; ++ icomp )		2564992	0					
ANR	2565156	ForInit	icomp = 0 ;	3337:13:126986:126995	2564992	0	True				
ANR	2565157	AssignmentExpression	icomp = 0		2564992	0		=			
ANR	2565158	Identifier	icomp		2564992	0					
ANR	2565159	PrimaryExpression	0		2564992	1					
ANR	2565160	Condition	UPD_CMAP_MAX > icomp	3337:24:126997:127016	2564992	1	True				
ANR	2565161	RelationalExpression	UPD_CMAP_MAX > icomp		2564992	0		>			
ANR	2565162	Identifier	UPD_CMAP_MAX		2564992	0					
ANR	2565163	Identifier	icomp		2564992	1					
ANR	2565164	UnaryExpression	++ icomp	3337:46:127019:127025	2564992	2	True				
ANR	2565165	IncDec	++		2564992	0					
ANR	2565166	Identifier	icomp		2564992	1					
ANR	2565167	ExpressionStatement	order [ icomp ] = icomp	3337:55:127028:127048	2564992	3	True				
ANR	2565168	AssignmentExpression	order [ icomp ] = icomp		2564992	0		=			
ANR	2565169	ArrayIndexing	order [ icomp ]		2564992	0					
ANR	2565170	Identifier	order		2564992	0					
ANR	2565171	Identifier	icomp		2564992	1					
ANR	2565172	Identifier	icomp		2564992	1					
ANR	2565173	IfStatement	if ( icomp )		2564992	6					
ANR	2565174	Condition	icomp	3344:6:127203:127207	2564992	0	True				
ANR	2565175	Identifier	icomp		2564992	0					
ANR	2565176	CompoundStatement		46:13:1530:1530	2564992	1					
ANR	2565177	ForStatement	for ( icomp = 0 ; upd -> ncomp > icomp ; ++ icomp )		2564992	0					
ANR	2565178	ForInit	icomp = 0 ;	3346:10:127223:127232	2564992	0	True				
ANR	2565179	AssignmentExpression	icomp = 0		2564992	0		=			
ANR	2565180	Identifier	icomp		2564992	0					
ANR	2565181	PrimaryExpression	0		2564992	1					
ANR	2565182	Condition	upd -> ncomp > icomp	3346:21:127234:127251	2564992	1	True				
ANR	2565183	RelationalExpression	upd -> ncomp > icomp		2564992	0		>			
ANR	2565184	PtrMemberAccess	upd -> ncomp		2564992	0					
ANR	2565185	Identifier	upd		2564992	0					
ANR	2565186	Identifier	ncomp		2564992	1					
ANR	2565187	Identifier	icomp		2564992	1					
ANR	2565188	UnaryExpression	++ icomp	3346:41:127254:127260	2564992	2	True				
ANR	2565189	IncDec	++		2564992	0					
ANR	2565190	Identifier	icomp		2564992	1					
ANR	2565191	CompoundStatement		48:50:1583:1583	2564992	3					
ANR	2565192	ExpressionStatement	"upd -> valptr [ icomp ] = gs_malloc ( udev -> memory , 1 , sizeof ( updcomp_t ) , ""upd/fscomp"" )"	3347:9:127274:127352	2564992	0	True				
ANR	2565193	AssignmentExpression	"upd -> valptr [ icomp ] = gs_malloc ( udev -> memory , 1 , sizeof ( updcomp_t ) , ""upd/fscomp"" )"		2564992	0		=			
ANR	2565194	ArrayIndexing	upd -> valptr [ icomp ]		2564992	0					
ANR	2565195	PtrMemberAccess	upd -> valptr		2564992	0					
ANR	2565196	Identifier	upd		2564992	0					
ANR	2565197	Identifier	valptr		2564992	1					
ANR	2565198	Identifier	icomp		2564992	1					
ANR	2565199	CallExpression	"gs_malloc ( udev -> memory , 1 , sizeof ( updcomp_t ) , ""upd/fscomp"" )"		2564992	1					
ANR	2565200	Callee	gs_malloc		2564992	0					
ANR	2565201	Identifier	gs_malloc		2564992	0					
ANR	2565202	ArgumentList	udev -> memory		2564992	1					
ANR	2565203	Argument	udev -> memory		2564992	0					
ANR	2565204	PtrMemberAccess	udev -> memory		2564992	0					
ANR	2565205	Identifier	udev		2564992	0					
ANR	2565206	Identifier	memory		2564992	1					
ANR	2565207	Argument	1		2564992	1					
ANR	2565208	PrimaryExpression	1		2564992	0					
ANR	2565209	Argument	sizeof ( updcomp_t )		2564992	2					
ANR	2565210	SizeofExpression	sizeof ( updcomp_t )		2564992	0					
ANR	2565211	Sizeof	sizeof		2564992	0					
ANR	2565212	SizeofOperand	updcomp_t		2564992	1					
ANR	2565213	Argument	"""upd/fscomp"""		2564992	3					
ANR	2565214	PrimaryExpression	"""upd/fscomp"""		2564992	0					
ANR	2565215	IfStatement	if ( NULL == upd -> valptr [ icomp ] )		2564992	1					
ANR	2565216	Condition	NULL == upd -> valptr [ icomp ]	3348:12:127366:127391	2564992	0	True				
ANR	2565217	EqualityExpression	NULL == upd -> valptr [ icomp ]		2564992	0		==			
ANR	2565218	Identifier	NULL		2564992	0					
ANR	2565219	ArrayIndexing	upd -> valptr [ icomp ]		2564992	1					
ANR	2565220	PtrMemberAccess	upd -> valptr		2564992	0					
ANR	2565221	Identifier	upd		2564992	0					
ANR	2565222	Identifier	valptr		2564992	1					
ANR	2565223	Identifier	icomp		2564992	1					
ANR	2565224	CompoundStatement		50:40:1714:1714	2564992	1					
ANR	2565225	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_fscomp: could not allocate %d. updcomp\\n"" , icomp )"	3350:12:127439:127566	2564992	0	True				
ANR	2565226	CallExpression	"errprintf ( udev -> memory , ""upd_open_fscomp: could not allocate %d. updcomp\\n"" , icomp )"		2564992	0					
ANR	2565227	Callee	errprintf		2564992	0					
ANR	2565228	Identifier	errprintf		2564992	0					
ANR	2565229	ArgumentList	udev -> memory		2564992	1					
ANR	2565230	Argument	udev -> memory		2564992	0					
ANR	2565231	PtrMemberAccess	udev -> memory		2564992	0					
ANR	2565232	Identifier	udev		2564992	0					
ANR	2565233	Identifier	memory		2564992	1					
ANR	2565234	Argument	"""upd_open_fscomp: could not allocate %d. updcomp\\n"""		2564992	1					
ANR	2565235	PrimaryExpression	"""upd_open_fscomp: could not allocate %d. updcomp\\n"""		2564992	0					
ANR	2565236	Argument	icomp		2564992	2					
ANR	2565237	Identifier	icomp		2564992	0					
ANR	2565238	ExpressionStatement	icomp = 0	3354:12:127587:127596	2564992	1	True				
ANR	2565239	AssignmentExpression	icomp = 0		2564992	0		=			
ANR	2565240	Identifier	icomp		2564992	0					
ANR	2565241	PrimaryExpression	0		2564992	1					
ANR	2565242	BreakStatement	break ;	3355:12:127610:127615	2564992	2	True				
ANR	2565243	IfStatement	if ( icomp )		2564992	7					
ANR	2565244	Condition	icomp	3360:6:127648:127652	2564992	0	True				
ANR	2565245	Identifier	icomp		2564992	0					
ANR	2565246	CompoundStatement		63:6:1983:1992	2564992	1					
ANR	2565247	IdentifierDeclStatement	uint need ;	3361:6:127663:127672	2564992	0	True				
ANR	2565248	IdentifierDecl	need		2564992	0					
ANR	2565249	IdentifierDeclType	uint		2564992	0					
ANR	2565250	Identifier	need		2564992	1					
ANR	2565251	ExpressionStatement	need = ( 2 + upd -> rwidth ) * upd -> ncomp	3363:6:127681:127719	2564992	1	True				
ANR	2565252	AssignmentExpression	need = ( 2 + upd -> rwidth ) * upd -> ncomp		2564992	0		=			
ANR	2565253	Identifier	need		2564992	0					
ANR	2565254	MultiplicativeExpression	( 2 + upd -> rwidth ) * upd -> ncomp		2564992	1		*			
ANR	2565255	AdditiveExpression	2 + upd -> rwidth		2564992	0		+			
ANR	2565256	PrimaryExpression	2		2564992	0					
ANR	2565257	PtrMemberAccess	upd -> rwidth		2564992	1					
ANR	2565258	Identifier	upd		2564992	0					
ANR	2565259	Identifier	rwidth		2564992	1					
ANR	2565260	PtrMemberAccess	upd -> ncomp		2564992	1					
ANR	2565261	Identifier	upd		2564992	0					
ANR	2565262	Identifier	ncomp		2564992	1					
ANR	2565263	ExpressionStatement	"upd -> valbuf = gs_malloc ( udev -> memory , need , sizeof ( upd -> valbuf [ 0 ] ) , ""upd/valbuf"" )"	3364:6:127727:127806	2564992	2	True				
ANR	2565264	AssignmentExpression	"upd -> valbuf = gs_malloc ( udev -> memory , need , sizeof ( upd -> valbuf [ 0 ] ) , ""upd/valbuf"" )"		2564992	0		=			
ANR	2565265	PtrMemberAccess	upd -> valbuf		2564992	0					
ANR	2565266	Identifier	upd		2564992	0					
ANR	2565267	Identifier	valbuf		2564992	1					
ANR	2565268	CallExpression	"gs_malloc ( udev -> memory , need , sizeof ( upd -> valbuf [ 0 ] ) , ""upd/valbuf"" )"		2564992	1					
ANR	2565269	Callee	gs_malloc		2564992	0					
ANR	2565270	Identifier	gs_malloc		2564992	0					
ANR	2565271	ArgumentList	udev -> memory		2564992	1					
ANR	2565272	Argument	udev -> memory		2564992	0					
ANR	2565273	PtrMemberAccess	udev -> memory		2564992	0					
ANR	2565274	Identifier	udev		2564992	0					
ANR	2565275	Identifier	memory		2564992	1					
ANR	2565276	Argument	need		2564992	1					
ANR	2565277	Identifier	need		2564992	0					
ANR	2565278	Argument	sizeof ( upd -> valbuf [ 0 ] )		2564992	2					
ANR	2565279	SizeofExpression	sizeof ( upd -> valbuf [ 0 ] )		2564992	0					
ANR	2565280	Sizeof	sizeof		2564992	0					
ANR	2565281	ArrayIndexing	upd -> valbuf [ 0 ]		2564992	1					
ANR	2565282	PtrMemberAccess	upd -> valbuf		2564992	0					
ANR	2565283	Identifier	upd		2564992	0					
ANR	2565284	Identifier	valbuf		2564992	1					
ANR	2565285	PrimaryExpression	0		2564992	1					
ANR	2565286	Argument	"""upd/valbuf"""		2564992	3					
ANR	2565287	PrimaryExpression	"""upd/valbuf"""		2564992	0					
ANR	2565288	IfStatement	if ( upd -> valbuf )		2564992	3					
ANR	2565289	Condition	upd -> valbuf	3366:9:127818:127828	2564992	0	True				
ANR	2565290	PtrMemberAccess	upd -> valbuf		2564992	0					
ANR	2565291	Identifier	upd		2564992	0					
ANR	2565292	Identifier	valbuf		2564992	1					
ANR	2565293	CompoundStatement		68:22:2151:2151	2564992	1					
ANR	2565294	ExpressionStatement	upd -> nvalbuf = need	3367:9:127842:127861	2564992	0	True				
ANR	2565295	AssignmentExpression	upd -> nvalbuf = need		2564992	0		=			
ANR	2565296	PtrMemberAccess	upd -> nvalbuf		2564992	0					
ANR	2565297	Identifier	upd		2564992	0					
ANR	2565298	Identifier	nvalbuf		2564992	1					
ANR	2565299	Identifier	need		2564992	1					
ANR	2565300	ExpressionStatement	"memset ( upd -> valbuf , 0 , need * sizeof ( upd -> valbuf [ 0 ] ) )"	3368:9:127872:127921	2564992	1	True				
ANR	2565301	CallExpression	"memset ( upd -> valbuf , 0 , need * sizeof ( upd -> valbuf [ 0 ] ) )"		2564992	0					
ANR	2565302	Callee	memset		2564992	0					
ANR	2565303	Identifier	memset		2564992	0					
ANR	2565304	ArgumentList	upd -> valbuf		2564992	1					
ANR	2565305	Argument	upd -> valbuf		2564992	0					
ANR	2565306	PtrMemberAccess	upd -> valbuf		2564992	0					
ANR	2565307	Identifier	upd		2564992	0					
ANR	2565308	Identifier	valbuf		2564992	1					
ANR	2565309	Argument	0		2564992	1					
ANR	2565310	PrimaryExpression	0		2564992	0					
ANR	2565311	Argument	need * sizeof ( upd -> valbuf [ 0 ] )		2564992	2					
ANR	2565312	MultiplicativeExpression	need * sizeof ( upd -> valbuf [ 0 ] )		2564992	0		*			
ANR	2565313	Identifier	need		2564992	0					
ANR	2565314	SizeofExpression	sizeof ( upd -> valbuf [ 0 ] )		2564992	1					
ANR	2565315	Sizeof	sizeof		2564992	0					
ANR	2565316	ArrayIndexing	upd -> valbuf [ 0 ]		2564992	1					
ANR	2565317	PtrMemberAccess	upd -> valbuf		2564992	0					
ANR	2565318	Identifier	upd		2564992	0					
ANR	2565319	Identifier	valbuf		2564992	1					
ANR	2565320	PrimaryExpression	0		2564992	1					
ANR	2565321	ElseStatement	else		2564992	0					
ANR	2565322	CompoundStatement		71:13:2256:2256	2564992	0					
ANR	2565323	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_fscomp: could not allocate %u words for valbuf\\n"" , need )"	3371:9:127978:128106	2564992	0	True				
ANR	2565324	CallExpression	"errprintf ( udev -> memory , ""upd_open_fscomp: could not allocate %u words for valbuf\\n"" , need )"		2564992	0					
ANR	2565325	Callee	errprintf		2564992	0					
ANR	2565326	Identifier	errprintf		2564992	0					
ANR	2565327	ArgumentList	udev -> memory		2564992	1					
ANR	2565328	Argument	udev -> memory		2564992	0					
ANR	2565329	PtrMemberAccess	udev -> memory		2564992	0					
ANR	2565330	Identifier	udev		2564992	0					
ANR	2565331	Identifier	memory		2564992	1					
ANR	2565332	Argument	"""upd_open_fscomp: could not allocate %u words for valbuf\\n"""		2564992	1					
ANR	2565333	PrimaryExpression	"""upd_open_fscomp: could not allocate %u words for valbuf\\n"""		2564992	0					
ANR	2565334	Argument	need		2564992	2					
ANR	2565335	Identifier	need		2564992	0					
ANR	2565336	ExpressionStatement	icomp = 0	3375:9:128124:128133	2564992	1	True				
ANR	2565337	AssignmentExpression	icomp = 0		2564992	0		=			
ANR	2565338	Identifier	icomp		2564992	0					
ANR	2565339	PrimaryExpression	0		2564992	1					
ANR	2565340	IfStatement	if ( icomp )		2564992	8					
ANR	2565341	Condition	icomp	3381:6:128205:128209	2564992	0	True				
ANR	2565342	Identifier	icomp		2564992	0					
ANR	2565343	CompoundStatement		83:13:2532:2532	2564992	1					
ANR	2565344	ForStatement	for ( icomp = 0 ; upd -> ncomp > icomp ; ++ icomp )		2564992	0					
ANR	2565345	ForInit	icomp = 0 ;	3382:10:128224:128233	2564992	0	True				
ANR	2565346	AssignmentExpression	icomp = 0		2564992	0		=			
ANR	2565347	Identifier	icomp		2564992	0					
ANR	2565348	PrimaryExpression	0		2564992	1					
ANR	2565349	Condition	upd -> ncomp > icomp	3382:21:128235:128252	2564992	1	True				
ANR	2565350	RelationalExpression	upd -> ncomp > icomp		2564992	0		>			
ANR	2565351	PtrMemberAccess	upd -> ncomp		2564992	0					
ANR	2565352	Identifier	upd		2564992	0					
ANR	2565353	Identifier	ncomp		2564992	1					
ANR	2565354	Identifier	icomp		2564992	1					
ANR	2565355	UnaryExpression	++ icomp	3382:41:128255:128261	2564992	2	True				
ANR	2565356	IncDec	++		2564992	0					
ANR	2565357	Identifier	icomp		2564992	1					
ANR	2565358	CompoundStatement		90:9:2778:2783	2564992	3					
ANR	2565359	IdentifierDeclStatement	const updcomp_p comp = upd -> valptr [ icomp ] ;	3384:9:128276:128319	2564992	0	True				
ANR	2565360	IdentifierDecl	comp = upd -> valptr [ icomp ]		2564992	0					
ANR	2565361	IdentifierDeclType	const updcomp_p		2564992	0					
ANR	2565362	Identifier	comp		2564992	1					
ANR	2565363	AssignmentExpression	comp = upd -> valptr [ icomp ]		2564992	2		=			
ANR	2565364	Identifier	comp		2564992	0					
ANR	2565365	ArrayIndexing	upd -> valptr [ icomp ]		2564992	1					
ANR	2565366	PtrMemberAccess	upd -> valptr		2564992	0					
ANR	2565367	Identifier	upd		2564992	0					
ANR	2565368	Identifier	valptr		2564992	1					
ANR	2565369	Identifier	icomp		2564992	1					
ANR	2565370	IdentifierDeclStatement	const int32_t nsteps = upd -> cmap [ order [ icomp ] ] . bitmsk ;	3385:9:128330:128387	2564992	1	True				
ANR	2565371	IdentifierDecl	nsteps = upd -> cmap [ order [ icomp ] ] . bitmsk		2564992	0					
ANR	2565372	IdentifierDeclType	const int32_t		2564992	0					
ANR	2565373	Identifier	nsteps		2564992	1					
ANR	2565374	AssignmentExpression	nsteps = upd -> cmap [ order [ icomp ] ] . bitmsk		2564992	2		=			
ANR	2565375	Identifier	nsteps		2564992	0					
ANR	2565376	MemberAccess	upd -> cmap [ order [ icomp ] ] . bitmsk		2564992	1					
ANR	2565377	ArrayIndexing	upd -> cmap [ order [ icomp ] ]		2564992	0					
ANR	2565378	PtrMemberAccess	upd -> cmap		2564992	0					
ANR	2565379	Identifier	upd		2564992	0					
ANR	2565380	Identifier	cmap		2564992	1					
ANR	2565381	ArrayIndexing	order [ icomp ]		2564992	1					
ANR	2565382	Identifier	order		2564992	0					
ANR	2565383	Identifier	icomp		2564992	1					
ANR	2565384	Identifier	bitmsk		2564992	1					
ANR	2565385	IdentifierDeclStatement	"float ymin , ymax ;"	3386:9:128398:128413	2564992	2	True				
ANR	2565386	IdentifierDecl	ymin		2564992	0					
ANR	2565387	IdentifierDeclType	float		2564992	0					
ANR	2565388	Identifier	ymin		2564992	1					
ANR	2565389	IdentifierDecl	ymax		2564992	1					
ANR	2565390	IdentifierDeclType	float		2564992	0					
ANR	2565391	Identifier	ymax		2564992	1					
ANR	2565392	IdentifierDeclStatement	"int32_t highmod , highval ;"	3387:9:128424:128447	2564992	3	True				
ANR	2565393	IdentifierDecl	highmod		2564992	0					
ANR	2565394	IdentifierDeclType	int32_t		2564992	0					
ANR	2565395	Identifier	highmod		2564992	1					
ANR	2565396	IdentifierDecl	highval		2564992	1					
ANR	2565397	IdentifierDeclType	int32_t		2564992	0					
ANR	2565398	Identifier	highval		2564992	1					
ANR	2565399	IdentifierDeclStatement	int i ;	3388:9:128458:128463	2564992	4	True				
ANR	2565400	IdentifierDecl	i		2564992	0					
ANR	2565401	IdentifierDeclType	int		2564992	0					
ANR	2565402	Identifier	i		2564992	1					
ANR	2565403	ExpressionStatement	comp -> threshold = nsteps	3390:9:128475:128499	2564992	5	True				
ANR	2565404	AssignmentExpression	comp -> threshold = nsteps		2564992	0		=			
ANR	2565405	PtrMemberAccess	comp -> threshold		2564992	0					
ANR	2565406	Identifier	comp		2564992	0					
ANR	2565407	Identifier	threshold		2564992	1					
ANR	2565408	Identifier	nsteps		2564992	1					
ANR	2565409	ExpressionStatement	comp -> spotsize = nsteps	3391:9:128510:128534	2564992	6	True				
ANR	2565410	AssignmentExpression	comp -> spotsize = nsteps		2564992	0		=			
ANR	2565411	PtrMemberAccess	comp -> spotsize		2564992	0					
ANR	2565412	Identifier	comp		2564992	0					
ANR	2565413	Identifier	spotsize		2564992	1					
ANR	2565414	Identifier	nsteps		2564992	1					
ANR	2565415	ExpressionStatement	comp -> offset = 0	3392:9:128545:128564	2564992	7	True				
ANR	2565416	AssignmentExpression	comp -> offset = 0		2564992	0		=			
ANR	2565417	PtrMemberAccess	comp -> offset		2564992	0					
ANR	2565418	Identifier	comp		2564992	0					
ANR	2565419	Identifier	offset		2564992	1					
ANR	2565420	PrimaryExpression	0		2564992	1					
ANR	2565421	ExpressionStatement	comp -> scale = 1	3393:9:128575:128594	2564992	8	True				
ANR	2565422	AssignmentExpression	comp -> scale = 1		2564992	0		=			
ANR	2565423	PtrMemberAccess	comp -> scale		2564992	0					
ANR	2565424	Identifier	comp		2564992	0					
ANR	2565425	Identifier	scale		2564992	1					
ANR	2565426	PrimaryExpression	1		2564992	1					
ANR	2565427	ExpressionStatement	comp -> cmap = order [ icomp ]	3394:9:128605:128635	2564992	9	True				
ANR	2565428	AssignmentExpression	comp -> cmap = order [ icomp ]		2564992	0		=			
ANR	2565429	PtrMemberAccess	comp -> cmap		2564992	0					
ANR	2565430	Identifier	comp		2564992	0					
ANR	2565431	Identifier	cmap		2564992	1					
ANR	2565432	ArrayIndexing	order [ icomp ]		2564992	1					
ANR	2565433	Identifier	order		2564992	0					
ANR	2565434	Identifier	icomp		2564992	1					
ANR	2565435	ExpressionStatement	upd -> cmap [ comp -> cmap ] . comp = icomp	3395:9:128646:128680	2564992	10	True				
ANR	2565436	AssignmentExpression	upd -> cmap [ comp -> cmap ] . comp = icomp		2564992	0		=			
ANR	2565437	MemberAccess	upd -> cmap [ comp -> cmap ] . comp		2564992	0					
ANR	2565438	ArrayIndexing	upd -> cmap [ comp -> cmap ]		2564992	0					
ANR	2565439	PtrMemberAccess	upd -> cmap		2564992	0					
ANR	2565440	Identifier	upd		2564992	0					
ANR	2565441	Identifier	cmap		2564992	1					
ANR	2565442	PtrMemberAccess	comp -> cmap		2564992	1					
ANR	2565443	Identifier	comp		2564992	0					
ANR	2565444	Identifier	cmap		2564992	1					
ANR	2565445	Identifier	comp		2564992	1					
ANR	2565446	Identifier	icomp		2564992	1					
ANR	2565447	ExpressionStatement	comp -> bits = upd -> cmap [ comp -> cmap ] . bits	3396:9:128691:128735	2564992	11	True				
ANR	2565448	AssignmentExpression	comp -> bits = upd -> cmap [ comp -> cmap ] . bits		2564992	0		=			
ANR	2565449	PtrMemberAccess	comp -> bits		2564992	0					
ANR	2565450	Identifier	comp		2564992	0					
ANR	2565451	Identifier	bits		2564992	1					
ANR	2565452	MemberAccess	upd -> cmap [ comp -> cmap ] . bits		2564992	1					
ANR	2565453	ArrayIndexing	upd -> cmap [ comp -> cmap ]		2564992	0					
ANR	2565454	PtrMemberAccess	upd -> cmap		2564992	0					
ANR	2565455	Identifier	upd		2564992	0					
ANR	2565456	Identifier	cmap		2564992	1					
ANR	2565457	PtrMemberAccess	comp -> cmap		2564992	1					
ANR	2565458	Identifier	comp		2564992	0					
ANR	2565459	Identifier	cmap		2564992	1					
ANR	2565460	Identifier	bits		2564992	1					
ANR	2565461	ExpressionStatement	comp -> bitshf = upd -> cmap [ comp -> cmap ] . bitshf	3397:9:128746:128792	2564992	12	True				
ANR	2565462	AssignmentExpression	comp -> bitshf = upd -> cmap [ comp -> cmap ] . bitshf		2564992	0		=			
ANR	2565463	PtrMemberAccess	comp -> bitshf		2564992	0					
ANR	2565464	Identifier	comp		2564992	0					
ANR	2565465	Identifier	bitshf		2564992	1					
ANR	2565466	MemberAccess	upd -> cmap [ comp -> cmap ] . bitshf		2564992	1					
ANR	2565467	ArrayIndexing	upd -> cmap [ comp -> cmap ]		2564992	0					
ANR	2565468	PtrMemberAccess	upd -> cmap		2564992	0					
ANR	2565469	Identifier	upd		2564992	0					
ANR	2565470	Identifier	cmap		2564992	1					
ANR	2565471	PtrMemberAccess	comp -> cmap		2564992	1					
ANR	2565472	Identifier	comp		2564992	0					
ANR	2565473	Identifier	cmap		2564992	1					
ANR	2565474	Identifier	bitshf		2564992	1					
ANR	2565475	ExpressionStatement	comp -> bitmsk = upd -> cmap [ comp -> cmap ] . bitmsk	3398:9:128803:128849	2564992	13	True				
ANR	2565476	AssignmentExpression	comp -> bitmsk = upd -> cmap [ comp -> cmap ] . bitmsk		2564992	0		=			
ANR	2565477	PtrMemberAccess	comp -> bitmsk		2564992	0					
ANR	2565478	Identifier	comp		2564992	0					
ANR	2565479	Identifier	bitmsk		2564992	1					
ANR	2565480	MemberAccess	upd -> cmap [ comp -> cmap ] . bitmsk		2564992	1					
ANR	2565481	ArrayIndexing	upd -> cmap [ comp -> cmap ]		2564992	0					
ANR	2565482	PtrMemberAccess	upd -> cmap		2564992	0					
ANR	2565483	Identifier	upd		2564992	0					
ANR	2565484	Identifier	cmap		2564992	1					
ANR	2565485	PtrMemberAccess	comp -> cmap		2564992	1					
ANR	2565486	Identifier	comp		2564992	0					
ANR	2565487	Identifier	cmap		2564992	1					
ANR	2565488	Identifier	bitmsk		2564992	1					
ANR	2565489	IfStatement	if ( ! nsteps )		2564992	14					
ANR	2565490	Condition	! nsteps	3400:12:128864:128870	2564992	0	True				
ANR	2565491	UnaryOperationExpression	! nsteps		2564992	0					
ANR	2565492	UnaryOperator	!		2564992	0					
ANR	2565493	Identifier	nsteps		2564992	1					
ANR	2565494	ContinueStatement	continue ;	3400:21:128873:128881	2564992	1	True				
ANR	2565495	IfStatement	if ( upd -> cmap [ comp -> cmap ] . rise )		2564992	15					
ANR	2565496	Condition	upd -> cmap [ comp -> cmap ] . rise	3402:12:128930:128955	2564992	0	True				
ANR	2565497	MemberAccess	upd -> cmap [ comp -> cmap ] . rise		2564992	0					
ANR	2565498	ArrayIndexing	upd -> cmap [ comp -> cmap ]		2564992	0					
ANR	2565499	PtrMemberAccess	upd -> cmap		2564992	0					
ANR	2565500	Identifier	upd		2564992	0					
ANR	2565501	Identifier	cmap		2564992	1					
ANR	2565502	PtrMemberAccess	comp -> cmap		2564992	1					
ANR	2565503	Identifier	comp		2564992	0					
ANR	2565504	Identifier	cmap		2564992	1					
ANR	2565505	Identifier	rise		2564992	1					
ANR	2565506	CompoundStatement		104:40:3278:3278	2564992	1					
ANR	2565507	ExpressionStatement	ymin = upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data [ 0 ]	3403:12:128972:129027	2564992	0	True				
ANR	2565508	AssignmentExpression	ymin = upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data [ 0 ]		2564992	0		=			
ANR	2565509	Identifier	ymin		2564992	0					
ANR	2565510	ArrayIndexing	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data [ 0 ]		2564992	1					
ANR	2565511	MemberAccess	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data		2564992	0					
ANR	2565512	ArrayIndexing	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ]		2564992	0					
ANR	2565513	PtrMemberAccess	upd -> float_a		2564992	0					
ANR	2565514	Identifier	upd		2564992	0					
ANR	2565515	Identifier	float_a		2564992	1					
ANR	2565516	MemberAccess	upd -> cmap [ comp -> cmap ] . xfer		2564992	1					
ANR	2565517	ArrayIndexing	upd -> cmap [ comp -> cmap ]		2564992	0					
ANR	2565518	PtrMemberAccess	upd -> cmap		2564992	0					
ANR	2565519	Identifier	upd		2564992	0					
ANR	2565520	Identifier	cmap		2564992	1					
ANR	2565521	PtrMemberAccess	comp -> cmap		2564992	1					
ANR	2565522	Identifier	comp		2564992	0					
ANR	2565523	Identifier	cmap		2564992	1					
ANR	2565524	Identifier	xfer		2564992	1					
ANR	2565525	Identifier	data		2564992	1					
ANR	2565526	PrimaryExpression	0		2564992	1					
ANR	2565527	ExpressionStatement	ymax = upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data [ upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size - 1 ]	3404:12:129041:129165	2564992	1	True				
ANR	2565528	AssignmentExpression	ymax = upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data [ upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size - 1 ]		2564992	0		=			
ANR	2565529	Identifier	ymax		2564992	0					
ANR	2565530	ArrayIndexing	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data [ upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size - 1 ]		2564992	1					
ANR	2565531	MemberAccess	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data		2564992	0					
ANR	2565532	ArrayIndexing	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ]		2564992	0					
ANR	2565533	PtrMemberAccess	upd -> float_a		2564992	0					
ANR	2565534	Identifier	upd		2564992	0					
ANR	2565535	Identifier	float_a		2564992	1					
ANR	2565536	MemberAccess	upd -> cmap [ comp -> cmap ] . xfer		2564992	1					
ANR	2565537	ArrayIndexing	upd -> cmap [ comp -> cmap ]		2564992	0					
ANR	2565538	PtrMemberAccess	upd -> cmap		2564992	0					
ANR	2565539	Identifier	upd		2564992	0					
ANR	2565540	Identifier	cmap		2564992	1					
ANR	2565541	PtrMemberAccess	comp -> cmap		2564992	1					
ANR	2565542	Identifier	comp		2564992	0					
ANR	2565543	Identifier	cmap		2564992	1					
ANR	2565544	Identifier	xfer		2564992	1					
ANR	2565545	Identifier	data		2564992	1					
ANR	2565546	AdditiveExpression	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size - 1		2564992	1		-			
ANR	2565547	MemberAccess	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size		2564992	0					
ANR	2565548	ArrayIndexing	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ]		2564992	0					
ANR	2565549	PtrMemberAccess	upd -> float_a		2564992	0					
ANR	2565550	Identifier	upd		2564992	0					
ANR	2565551	Identifier	float_a		2564992	1					
ANR	2565552	MemberAccess	upd -> cmap [ comp -> cmap ] . xfer		2564992	1					
ANR	2565553	ArrayIndexing	upd -> cmap [ comp -> cmap ]		2564992	0					
ANR	2565554	PtrMemberAccess	upd -> cmap		2564992	0					
ANR	2565555	Identifier	upd		2564992	0					
ANR	2565556	Identifier	cmap		2564992	1					
ANR	2565557	PtrMemberAccess	comp -> cmap		2564992	1					
ANR	2565558	Identifier	comp		2564992	0					
ANR	2565559	Identifier	cmap		2564992	1					
ANR	2565560	Identifier	xfer		2564992	1					
ANR	2565561	Identifier	size		2564992	1					
ANR	2565562	PrimaryExpression	1		2564992	1					
ANR	2565563	ElseStatement	else		2564992	0					
ANR	2565564	CompoundStatement		108:16:3503:3503	2564992	0					
ANR	2565565	ExpressionStatement	ymax = upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data [ 0 ]	3407:12:129197:129252	2564992	0	True				
ANR	2565566	AssignmentExpression	ymax = upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data [ 0 ]		2564992	0		=			
ANR	2565567	Identifier	ymax		2564992	0					
ANR	2565568	ArrayIndexing	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data [ 0 ]		2564992	1					
ANR	2565569	MemberAccess	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data		2564992	0					
ANR	2565570	ArrayIndexing	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ]		2564992	0					
ANR	2565571	PtrMemberAccess	upd -> float_a		2564992	0					
ANR	2565572	Identifier	upd		2564992	0					
ANR	2565573	Identifier	float_a		2564992	1					
ANR	2565574	MemberAccess	upd -> cmap [ comp -> cmap ] . xfer		2564992	1					
ANR	2565575	ArrayIndexing	upd -> cmap [ comp -> cmap ]		2564992	0					
ANR	2565576	PtrMemberAccess	upd -> cmap		2564992	0					
ANR	2565577	Identifier	upd		2564992	0					
ANR	2565578	Identifier	cmap		2564992	1					
ANR	2565579	PtrMemberAccess	comp -> cmap		2564992	1					
ANR	2565580	Identifier	comp		2564992	0					
ANR	2565581	Identifier	cmap		2564992	1					
ANR	2565582	Identifier	xfer		2564992	1					
ANR	2565583	Identifier	data		2564992	1					
ANR	2565584	PrimaryExpression	0		2564992	1					
ANR	2565585	ExpressionStatement	ymin = upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data [ upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size - 1 ]	3408:12:129266:129390	2564992	1	True				
ANR	2565586	AssignmentExpression	ymin = upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data [ upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size - 1 ]		2564992	0		=			
ANR	2565587	Identifier	ymin		2564992	0					
ANR	2565588	ArrayIndexing	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data [ upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size - 1 ]		2564992	1					
ANR	2565589	MemberAccess	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data		2564992	0					
ANR	2565590	ArrayIndexing	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ]		2564992	0					
ANR	2565591	PtrMemberAccess	upd -> float_a		2564992	0					
ANR	2565592	Identifier	upd		2564992	0					
ANR	2565593	Identifier	float_a		2564992	1					
ANR	2565594	MemberAccess	upd -> cmap [ comp -> cmap ] . xfer		2564992	1					
ANR	2565595	ArrayIndexing	upd -> cmap [ comp -> cmap ]		2564992	0					
ANR	2565596	PtrMemberAccess	upd -> cmap		2564992	0					
ANR	2565597	Identifier	upd		2564992	0					
ANR	2565598	Identifier	cmap		2564992	1					
ANR	2565599	PtrMemberAccess	comp -> cmap		2564992	1					
ANR	2565600	Identifier	comp		2564992	0					
ANR	2565601	Identifier	cmap		2564992	1					
ANR	2565602	Identifier	xfer		2564992	1					
ANR	2565603	Identifier	data		2564992	1					
ANR	2565604	AdditiveExpression	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size - 1		2564992	1		-			
ANR	2565605	MemberAccess	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size		2564992	0					
ANR	2565606	ArrayIndexing	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ]		2564992	0					
ANR	2565607	PtrMemberAccess	upd -> float_a		2564992	0					
ANR	2565608	Identifier	upd		2564992	0					
ANR	2565609	Identifier	float_a		2564992	1					
ANR	2565610	MemberAccess	upd -> cmap [ comp -> cmap ] . xfer		2564992	1					
ANR	2565611	ArrayIndexing	upd -> cmap [ comp -> cmap ]		2564992	0					
ANR	2565612	PtrMemberAccess	upd -> cmap		2564992	0					
ANR	2565613	Identifier	upd		2564992	0					
ANR	2565614	Identifier	cmap		2564992	1					
ANR	2565615	PtrMemberAccess	comp -> cmap		2564992	1					
ANR	2565616	Identifier	comp		2564992	0					
ANR	2565617	Identifier	cmap		2564992	1					
ANR	2565618	Identifier	xfer		2564992	1					
ANR	2565619	Identifier	size		2564992	1					
ANR	2565620	PrimaryExpression	1		2564992	1					
ANR	2565621	IfStatement	if ( 0.0 > ymin )		2564992	16					
ANR	2565622	Condition	0.0 > ymin	3412:12:129416:129425	2564992	0	True				
ANR	2565623	RelationalExpression	0.0 > ymin		2564992	0		>			
ANR	2565624	PrimaryExpression	0.0		2564992	0					
ANR	2565625	Identifier	ymin		2564992	1					
ANR	2565626	CompoundStatement		114:24:3748:3748	2564992	1					
ANR	2565627	ExpressionStatement	ymin = 0.0	3413:12:129442:129452	2564992	0	True				
ANR	2565628	AssignmentExpression	ymin = 0.0		2564992	0		=			
ANR	2565629	Identifier	ymin		2564992	0					
ANR	2565630	PrimaryExpression	0.0		2564992	1					
ANR	2565631	IfStatement	if ( 0.0 > ymax )		2564992	1					
ANR	2565632	Condition	0.0 > ymax	3414:15:129469:129478	2564992	0	True				
ANR	2565633	RelationalExpression	0.0 > ymax		2564992	0		>			
ANR	2565634	PrimaryExpression	0.0		2564992	0					
ANR	2565635	Identifier	ymax		2564992	1					
ANR	2565636	ExpressionStatement	ymax = 1.0 / ( float ) ( nsteps + 1 )	3414:27:129481:129512	2564992	1	True				
ANR	2565637	AssignmentExpression	ymax = 1.0 / ( float ) ( nsteps + 1 )		2564992	0		=			
ANR	2565638	Identifier	ymax		2564992	0					
ANR	2565639	MultiplicativeExpression	1.0 / ( float ) ( nsteps + 1 )		2564992	1		/			
ANR	2565640	PrimaryExpression	1.0		2564992	0					
ANR	2565641	CastExpression	( float ) ( nsteps + 1 )		2564992	1					
ANR	2565642	CastTarget	float		2564992	0					
ANR	2565643	AdditiveExpression	nsteps + 1		2564992	1		+			
ANR	2565644	Identifier	nsteps		2564992	0					
ANR	2565645	PrimaryExpression	1		2564992	1					
ANR	2565646	IfStatement	if ( 1.0 < ymax )		2564992	17					
ANR	2565647	Condition	1.0 < ymax	3416:12:129537:129546	2564992	0	True				
ANR	2565648	RelationalExpression	1.0 < ymax		2564992	0		<			
ANR	2565649	PrimaryExpression	1.0		2564992	0					
ANR	2565650	Identifier	ymax		2564992	1					
ANR	2565651	ExpressionStatement	ymax = 1.0	3416:24:129549:129559	2564992	1	True				
ANR	2565652	AssignmentExpression	ymax = 1.0		2564992	0		=			
ANR	2565653	Identifier	ymax		2564992	0					
ANR	2565654	PrimaryExpression	1.0		2564992	1					
ANR	2565655	ExpressionStatement	comp -> spotsize = ( ( int32_t ) 1 << 28 ) - 1	3418:9:129571:129611	2564992	18	True				
ANR	2565656	AssignmentExpression	comp -> spotsize = ( ( int32_t ) 1 << 28 ) - 1		2564992	0		=			
ANR	2565657	PtrMemberAccess	comp -> spotsize		2564992	0					
ANR	2565658	Identifier	comp		2564992	0					
ANR	2565659	Identifier	spotsize		2564992	1					
ANR	2565660	AdditiveExpression	( ( int32_t ) 1 << 28 ) - 1		2564992	1		-			
ANR	2565661	ShiftExpression	( int32_t ) 1 << 28		2564992	0		<<			
ANR	2565662	CastExpression	( int32_t ) 1		2564992	0					
ANR	2565663	CastTarget	int32_t		2564992	0					
ANR	2565664	PrimaryExpression	1		2564992	1					
ANR	2565665	PrimaryExpression	28		2564992	1					
ANR	2565666	PrimaryExpression	1		2564992	1					
ANR	2565667	ForStatement	for ( i = 0 ; i < 32 ; ++ i )		2564992	19					
ANR	2565668	ForInit	i = 0 ;	3420:13:129627:129632	2564992	0	True				
ANR	2565669	AssignmentExpression	i = 0		2564992	0		=			
ANR	2565670	Identifier	i		2564992	0					
ANR	2565671	PrimaryExpression	0		2564992	1					
ANR	2565672	Condition	i < 32	3420:20:129634:129639	2564992	1	True				
ANR	2565673	RelationalExpression	i < 32		2564992	0		<			
ANR	2565674	Identifier	i		2564992	0					
ANR	2565675	PrimaryExpression	32		2564992	1					
ANR	2565676	UnaryExpression	++ i	3420:28:129642:129644	2564992	2	True				
ANR	2565677	IncDec	++		2564992	0					
ANR	2565678	Identifier	i		2564992	1					
ANR	2565679	CompoundStatement		122:33:3967:3967	2564992	3					
ANR	2565680	ExpressionStatement	highval = ( int32_t ) ( ( ymax - ymin ) * ( double ) comp -> spotsize + 0.5 )	3422:12:129682:129746	2564992	0	True				
ANR	2565681	AssignmentExpression	highval = ( int32_t ) ( ( ymax - ymin ) * ( double ) comp -> spotsize + 0.5 )		2564992	0		=			
ANR	2565682	Identifier	highval		2564992	0					
ANR	2565683	CastExpression	( int32_t ) ( ( ymax - ymin ) * ( double ) comp -> spotsize + 0.5 )		2564992	1					
ANR	2565684	CastTarget	int32_t		2564992	0					
ANR	2565685	AdditiveExpression	( ymax - ymin ) * ( double ) comp -> spotsize + 0.5		2564992	1		+			
ANR	2565686	MultiplicativeExpression	( ymax - ymin ) * ( double ) comp -> spotsize		2564992	0		*			
ANR	2565687	AdditiveExpression	ymax - ymin		2564992	0		-			
ANR	2565688	Identifier	ymax		2564992	0					
ANR	2565689	Identifier	ymin		2564992	1					
ANR	2565690	CastExpression	( double ) comp -> spotsize		2564992	1					
ANR	2565691	CastTarget	double		2564992	0					
ANR	2565692	PtrMemberAccess	comp -> spotsize		2564992	1					
ANR	2565693	Identifier	comp		2564992	0					
ANR	2565694	Identifier	spotsize		2564992	1					
ANR	2565695	PrimaryExpression	0.5		2564992	1					
ANR	2565696	IfStatement	if ( ! ( highmod = highval % nsteps ) )		2564992	1					
ANR	2565697	Condition	! ( highmod = highval % nsteps )	3424:15:129764:129792	2564992	0	True				
ANR	2565698	UnaryOperationExpression	! ( highmod = highval % nsteps )		2564992	0					
ANR	2565699	UnaryOperator	!		2564992	0					
ANR	2565700	AssignmentExpression	highmod = highval % nsteps		2564992	1		=			
ANR	2565701	Identifier	highmod		2564992	0					
ANR	2565702	MultiplicativeExpression	highval % nsteps		2564992	1		%			
ANR	2565703	Identifier	highval		2564992	0					
ANR	2565704	Identifier	nsteps		2564992	1					
ANR	2565705	BreakStatement	break ;	3424:46:129795:129800	2564992	1	True				
ANR	2565706	ExpressionStatement	highval += nsteps - highmod	3426:12:129828:129855	2564992	2	True				
ANR	2565707	AssignmentExpression	highval += nsteps - highmod		2564992	0		+=			
ANR	2565708	Identifier	highval		2564992	0					
ANR	2565709	AdditiveExpression	nsteps - highmod		2564992	1		-			
ANR	2565710	Identifier	nsteps		2564992	0					
ANR	2565711	Identifier	highmod		2564992	1					
ANR	2565712	ExpressionStatement	comp -> spotsize = ( int32_t ) ( ( double ) highval / ( ymax - ymin ) + 0.5 )	3427:12:129869:129933	2564992	3	True				
ANR	2565713	AssignmentExpression	comp -> spotsize = ( int32_t ) ( ( double ) highval / ( ymax - ymin ) + 0.5 )		2564992	0		=			
ANR	2565714	PtrMemberAccess	comp -> spotsize		2564992	0					
ANR	2565715	Identifier	comp		2564992	0					
ANR	2565716	Identifier	spotsize		2564992	1					
ANR	2565717	CastExpression	( int32_t ) ( ( double ) highval / ( ymax - ymin ) + 0.5 )		2564992	1					
ANR	2565718	CastTarget	int32_t		2564992	0					
ANR	2565719	AdditiveExpression	( double ) highval / ( ymax - ymin ) + 0.5		2564992	1		+			
ANR	2565720	MultiplicativeExpression	( double ) highval / ( ymax - ymin )		2564992	0		/			
ANR	2565721	CastExpression	( double ) highval		2564992	0					
ANR	2565722	CastTarget	double		2564992	0					
ANR	2565723	Identifier	highval		2564992	1					
ANR	2565724	AdditiveExpression	ymax - ymin		2564992	1		-			
ANR	2565725	Identifier	ymax		2564992	0					
ANR	2565726	Identifier	ymin		2564992	1					
ANR	2565727	PrimaryExpression	0.5		2564992	1					
ANR	2565728	IfStatement	if ( ! ( comp -> spotsize % 2 ) )		2564992	4					
ANR	2565729	Condition	! ( comp -> spotsize % 2 )	3429:15:129951:129971	2564992	0	True				
ANR	2565730	UnaryOperationExpression	! ( comp -> spotsize % 2 )		2564992	0					
ANR	2565731	UnaryOperator	!		2564992	0					
ANR	2565732	MultiplicativeExpression	comp -> spotsize % 2		2564992	1		%			
ANR	2565733	PtrMemberAccess	comp -> spotsize		2564992	0					
ANR	2565734	Identifier	comp		2564992	0					
ANR	2565735	Identifier	spotsize		2564992	1					
ANR	2565736	PrimaryExpression	2		2564992	1					
ANR	2565737	ExpressionStatement	comp -> spotsize ++	3429:38:129974:129990	2564992	1	True				
ANR	2565738	PostIncDecOperationExpression	comp -> spotsize ++		2564992	0					
ANR	2565739	PtrMemberAccess	comp -> spotsize		2564992	0					
ANR	2565740	Identifier	comp		2564992	0					
ANR	2565741	Identifier	spotsize		2564992	1					
ANR	2565742	IncDec	++		2564992	1					
ANR	2565743	ExpressionStatement	comp -> offset = ( int32_t ) ( ymin * ( double ) comp -> spotsize + ( double ) 0.5 )	3433:9:130058:130132	2564992	20	True				
ANR	2565744	AssignmentExpression	comp -> offset = ( int32_t ) ( ymin * ( double ) comp -> spotsize + ( double ) 0.5 )		2564992	0		=			
ANR	2565745	PtrMemberAccess	comp -> offset		2564992	0					
ANR	2565746	Identifier	comp		2564992	0					
ANR	2565747	Identifier	offset		2564992	1					
ANR	2565748	CastExpression	( int32_t ) ( ymin * ( double ) comp -> spotsize + ( double ) 0.5 )		2564992	1					
ANR	2565749	CastTarget	int32_t		2564992	0					
ANR	2565750	AdditiveExpression	ymin * ( double ) comp -> spotsize + ( double ) 0.5		2564992	1		+			
ANR	2565751	MultiplicativeExpression	ymin * ( double ) comp -> spotsize		2564992	0		*			
ANR	2565752	Identifier	ymin		2564992	0					
ANR	2565753	CastExpression	( double ) comp -> spotsize		2564992	1					
ANR	2565754	CastTarget	double		2564992	0					
ANR	2565755	PtrMemberAccess	comp -> spotsize		2564992	1					
ANR	2565756	Identifier	comp		2564992	0					
ANR	2565757	Identifier	spotsize		2564992	1					
ANR	2565758	CastExpression	( double ) 0.5		2564992	1					
ANR	2565759	CastTarget	double		2564992	0					
ANR	2565760	PrimaryExpression	0.5		2564992	1					
ANR	2565761	ExpressionStatement	comp -> scale = highval / nsteps	3434:9:130143:130177	2564992	21	True				
ANR	2565762	AssignmentExpression	comp -> scale = highval / nsteps		2564992	0		=			
ANR	2565763	PtrMemberAccess	comp -> scale		2564992	0					
ANR	2565764	Identifier	comp		2564992	0					
ANR	2565765	Identifier	scale		2564992	1					
ANR	2565766	MultiplicativeExpression	highval / nsteps		2564992	1		/			
ANR	2565767	Identifier	highval		2564992	0					
ANR	2565768	Identifier	nsteps		2564992	1					
ANR	2565769	ExpressionStatement	comp -> threshold = comp -> spotsize / 2	3435:9:130188:130224	2564992	22	True				
ANR	2565770	AssignmentExpression	comp -> threshold = comp -> spotsize / 2		2564992	0		=			
ANR	2565771	PtrMemberAccess	comp -> threshold		2564992	0					
ANR	2565772	Identifier	comp		2564992	0					
ANR	2565773	Identifier	threshold		2564992	1					
ANR	2565774	MultiplicativeExpression	comp -> spotsize / 2		2564992	1		/			
ANR	2565775	PtrMemberAccess	comp -> spotsize		2564992	0					
ANR	2565776	Identifier	comp		2564992	0					
ANR	2565777	Identifier	spotsize		2564992	1					
ANR	2565778	PrimaryExpression	2		2564992	1					
ANR	2565779	ExpressionStatement	"errprintf ( udev -> memory , ""Values for %d. Component after %d iterations\\n"" , comp -> cmap + 1 , i )"	3438:9:130267:130368	2564992	23	True				
ANR	2565780	CallExpression	"errprintf ( udev -> memory , ""Values for %d. Component after %d iterations\\n"" , comp -> cmap + 1 , i )"		2564992	0					
ANR	2565781	Callee	errprintf		2564992	0					
ANR	2565782	Identifier	errprintf		2564992	0					
ANR	2565783	ArgumentList	udev -> memory		2564992	1					
ANR	2565784	Argument	udev -> memory		2564992	0					
ANR	2565785	PtrMemberAccess	udev -> memory		2564992	0					
ANR	2565786	Identifier	udev		2564992	0					
ANR	2565787	Identifier	memory		2564992	1					
ANR	2565788	Argument	"""Values for %d. Component after %d iterations\\n"""		2564992	1					
ANR	2565789	PrimaryExpression	"""Values for %d. Component after %d iterations\\n"""		2564992	0					
ANR	2565790	Argument	comp -> cmap + 1		2564992	2					
ANR	2565791	AdditiveExpression	comp -> cmap + 1		2564992	0		+			
ANR	2565792	PtrMemberAccess	comp -> cmap		2564992	0					
ANR	2565793	Identifier	comp		2564992	0					
ANR	2565794	Identifier	cmap		2564992	1					
ANR	2565795	PrimaryExpression	1		2564992	1					
ANR	2565796	Argument	i		2564992	3					
ANR	2565797	Identifier	i		2564992	0					
ANR	2565798	ExpressionStatement	"errprintf ( udev -> memory , ""steps:     %10ld, Bits: %d\\n"" , ( long ) comp -> bitmsk , comp -> bits )"	3440:9:130379:130478	2564992	24	True				
ANR	2565799	CallExpression	"errprintf ( udev -> memory , ""steps:     %10ld, Bits: %d\\n"" , ( long ) comp -> bitmsk , comp -> bits )"		2564992	0					
ANR	2565800	Callee	errprintf		2564992	0					
ANR	2565801	Identifier	errprintf		2564992	0					
ANR	2565802	ArgumentList	udev -> memory		2564992	1					
ANR	2565803	Argument	udev -> memory		2564992	0					
ANR	2565804	PtrMemberAccess	udev -> memory		2564992	0					
ANR	2565805	Identifier	udev		2564992	0					
ANR	2565806	Identifier	memory		2564992	1					
ANR	2565807	Argument	"""steps:     %10ld, Bits: %d\\n"""		2564992	1					
ANR	2565808	PrimaryExpression	"""steps:     %10ld, Bits: %d\\n"""		2564992	0					
ANR	2565809	Argument	( long ) comp -> bitmsk		2564992	2					
ANR	2565810	CastExpression	( long ) comp -> bitmsk		2564992	0					
ANR	2565811	CastTarget	long		2564992	0					
ANR	2565812	PtrMemberAccess	comp -> bitmsk		2564992	1					
ANR	2565813	Identifier	comp		2564992	0					
ANR	2565814	Identifier	bitmsk		2564992	1					
ANR	2565815	Argument	comp -> bits		2564992	3					
ANR	2565816	PtrMemberAccess	comp -> bits		2564992	0					
ANR	2565817	Identifier	comp		2564992	0					
ANR	2565818	Identifier	bits		2564992	1					
ANR	2565819	ExpressionStatement	"errprintf ( udev -> memory , ""xfer:      %10d Points, %s\\n"" , upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size , upd -> cmap [ comp -> cmap ] . rise ? ""rising"" : ""falling"" )"	3442:9:130489:130681	2564992	25	True				
ANR	2565820	CallExpression	"errprintf ( udev -> memory , ""xfer:      %10d Points, %s\\n"" , upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size , upd -> cmap [ comp -> cmap ] . rise ? ""rising"" : ""falling"" )"		2564992	0					
ANR	2565821	Callee	errprintf		2564992	0					
ANR	2565822	Identifier	errprintf		2564992	0					
ANR	2565823	ArgumentList	udev -> memory		2564992	1					
ANR	2565824	Argument	udev -> memory		2564992	0					
ANR	2565825	PtrMemberAccess	udev -> memory		2564992	0					
ANR	2565826	Identifier	udev		2564992	0					
ANR	2565827	Identifier	memory		2564992	1					
ANR	2565828	Argument	"""xfer:      %10d Points, %s\\n"""		2564992	1					
ANR	2565829	PrimaryExpression	"""xfer:      %10d Points, %s\\n"""		2564992	0					
ANR	2565830	Argument	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size		2564992	2					
ANR	2565831	MemberAccess	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size		2564992	0					
ANR	2565832	ArrayIndexing	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ]		2564992	0					
ANR	2565833	PtrMemberAccess	upd -> float_a		2564992	0					
ANR	2565834	Identifier	upd		2564992	0					
ANR	2565835	Identifier	float_a		2564992	1					
ANR	2565836	MemberAccess	upd -> cmap [ comp -> cmap ] . xfer		2564992	1					
ANR	2565837	ArrayIndexing	upd -> cmap [ comp -> cmap ]		2564992	0					
ANR	2565838	PtrMemberAccess	upd -> cmap		2564992	0					
ANR	2565839	Identifier	upd		2564992	0					
ANR	2565840	Identifier	cmap		2564992	1					
ANR	2565841	PtrMemberAccess	comp -> cmap		2564992	1					
ANR	2565842	Identifier	comp		2564992	0					
ANR	2565843	Identifier	cmap		2564992	1					
ANR	2565844	Identifier	xfer		2564992	1					
ANR	2565845	Identifier	size		2564992	1					
ANR	2565846	Argument	"upd -> cmap [ comp -> cmap ] . rise ? ""rising"" : ""falling"""		2564992	3					
ANR	2565847	ConditionalExpression	"upd -> cmap [ comp -> cmap ] . rise ? ""rising"" : ""falling"""		2564992	0					
ANR	2565848	Condition	upd -> cmap [ comp -> cmap ] . rise		2564992	0					
ANR	2565849	MemberAccess	upd -> cmap [ comp -> cmap ] . rise		2564992	0					
ANR	2565850	ArrayIndexing	upd -> cmap [ comp -> cmap ]		2564992	0					
ANR	2565851	PtrMemberAccess	upd -> cmap		2564992	0					
ANR	2565852	Identifier	upd		2564992	0					
ANR	2565853	Identifier	cmap		2564992	1					
ANR	2565854	PtrMemberAccess	comp -> cmap		2564992	1					
ANR	2565855	Identifier	comp		2564992	0					
ANR	2565856	Identifier	cmap		2564992	1					
ANR	2565857	Identifier	rise		2564992	1					
ANR	2565858	PrimaryExpression	"""rising"""		2564992	1					
ANR	2565859	PrimaryExpression	"""falling"""		2564992	2					
ANR	2565860	ExpressionStatement	"errprintf ( udev -> memory , ""offset:    %10d 0x%08x\\n"" , comp -> offset , comp -> offset )"	3446:9:130692:130782	2564992	26	True				
ANR	2565861	CallExpression	"errprintf ( udev -> memory , ""offset:    %10d 0x%08x\\n"" , comp -> offset , comp -> offset )"		2564992	0					
ANR	2565862	Callee	errprintf		2564992	0					
ANR	2565863	Identifier	errprintf		2564992	0					
ANR	2565864	ArgumentList	udev -> memory		2564992	1					
ANR	2565865	Argument	udev -> memory		2564992	0					
ANR	2565866	PtrMemberAccess	udev -> memory		2564992	0					
ANR	2565867	Identifier	udev		2564992	0					
ANR	2565868	Identifier	memory		2564992	1					
ANR	2565869	Argument	"""offset:    %10d 0x%08x\\n"""		2564992	1					
ANR	2565870	PrimaryExpression	"""offset:    %10d 0x%08x\\n"""		2564992	0					
ANR	2565871	Argument	comp -> offset		2564992	2					
ANR	2565872	PtrMemberAccess	comp -> offset		2564992	0					
ANR	2565873	Identifier	comp		2564992	0					
ANR	2565874	Identifier	offset		2564992	1					
ANR	2565875	Argument	comp -> offset		2564992	3					
ANR	2565876	PtrMemberAccess	comp -> offset		2564992	0					
ANR	2565877	Identifier	comp		2564992	0					
ANR	2565878	Identifier	offset		2564992	1					
ANR	2565879	ExpressionStatement	"errprintf ( udev -> memory , ""scale:     %10d 0x%08x\\n"" , comp -> scale , comp -> scale )"	3448:9:130793:130881	2564992	27	True				
ANR	2565880	CallExpression	"errprintf ( udev -> memory , ""scale:     %10d 0x%08x\\n"" , comp -> scale , comp -> scale )"		2564992	0					
ANR	2565881	Callee	errprintf		2564992	0					
ANR	2565882	Identifier	errprintf		2564992	0					
ANR	2565883	ArgumentList	udev -> memory		2564992	1					
ANR	2565884	Argument	udev -> memory		2564992	0					
ANR	2565885	PtrMemberAccess	udev -> memory		2564992	0					
ANR	2565886	Identifier	udev		2564992	0					
ANR	2565887	Identifier	memory		2564992	1					
ANR	2565888	Argument	"""scale:     %10d 0x%08x\\n"""		2564992	1					
ANR	2565889	PrimaryExpression	"""scale:     %10d 0x%08x\\n"""		2564992	0					
ANR	2565890	Argument	comp -> scale		2564992	2					
ANR	2565891	PtrMemberAccess	comp -> scale		2564992	0					
ANR	2565892	Identifier	comp		2564992	0					
ANR	2565893	Identifier	scale		2564992	1					
ANR	2565894	Argument	comp -> scale		2564992	3					
ANR	2565895	PtrMemberAccess	comp -> scale		2564992	0					
ANR	2565896	Identifier	comp		2564992	0					
ANR	2565897	Identifier	scale		2564992	1					
ANR	2565898	ExpressionStatement	"errprintf ( udev -> memory , ""threshold: %10d 0x%08x\\n"" , comp -> threshold , comp -> threshold )"	3450:9:130892:130988	2564992	28	True				
ANR	2565899	CallExpression	"errprintf ( udev -> memory , ""threshold: %10d 0x%08x\\n"" , comp -> threshold , comp -> threshold )"		2564992	0					
ANR	2565900	Callee	errprintf		2564992	0					
ANR	2565901	Identifier	errprintf		2564992	0					
ANR	2565902	ArgumentList	udev -> memory		2564992	1					
ANR	2565903	Argument	udev -> memory		2564992	0					
ANR	2565904	PtrMemberAccess	udev -> memory		2564992	0					
ANR	2565905	Identifier	udev		2564992	0					
ANR	2565906	Identifier	memory		2564992	1					
ANR	2565907	Argument	"""threshold: %10d 0x%08x\\n"""		2564992	1					
ANR	2565908	PrimaryExpression	"""threshold: %10d 0x%08x\\n"""		2564992	0					
ANR	2565909	Argument	comp -> threshold		2564992	2					
ANR	2565910	PtrMemberAccess	comp -> threshold		2564992	0					
ANR	2565911	Identifier	comp		2564992	0					
ANR	2565912	Identifier	threshold		2564992	1					
ANR	2565913	Argument	comp -> threshold		2564992	3					
ANR	2565914	PtrMemberAccess	comp -> threshold		2564992	0					
ANR	2565915	Identifier	comp		2564992	0					
ANR	2565916	Identifier	threshold		2564992	1					
ANR	2565917	ExpressionStatement	"errprintf ( udev -> memory , ""spotsize:  %10d 0x%08x\\n"" , comp -> spotsize , comp -> spotsize )"	3452:9:130999:131093	2564992	29	True				
ANR	2565918	CallExpression	"errprintf ( udev -> memory , ""spotsize:  %10d 0x%08x\\n"" , comp -> spotsize , comp -> spotsize )"		2564992	0					
ANR	2565919	Callee	errprintf		2564992	0					
ANR	2565920	Identifier	errprintf		2564992	0					
ANR	2565921	ArgumentList	udev -> memory		2564992	1					
ANR	2565922	Argument	udev -> memory		2564992	0					
ANR	2565923	PtrMemberAccess	udev -> memory		2564992	0					
ANR	2565924	Identifier	udev		2564992	0					
ANR	2565925	Identifier	memory		2564992	1					
ANR	2565926	Argument	"""spotsize:  %10d 0x%08x\\n"""		2564992	1					
ANR	2565927	PrimaryExpression	"""spotsize:  %10d 0x%08x\\n"""		2564992	0					
ANR	2565928	Argument	comp -> spotsize		2564992	2					
ANR	2565929	PtrMemberAccess	comp -> spotsize		2564992	0					
ANR	2565930	Identifier	comp		2564992	0					
ANR	2565931	Identifier	spotsize		2564992	1					
ANR	2565932	Argument	comp -> spotsize		2564992	3					
ANR	2565933	PtrMemberAccess	comp -> spotsize		2564992	0					
ANR	2565934	Identifier	comp		2564992	0					
ANR	2565935	Identifier	spotsize		2564992	1					
ANR	2565936	IfStatement	if ( icomp && ! ( B_FSZERO & upd -> flags ) )		2564992	9					
ANR	2565937	Condition	icomp && ! ( B_FSZERO & upd -> flags )	3460:6:131179:131211	2564992	0	True				
ANR	2565938	AndExpression	icomp && ! ( B_FSZERO & upd -> flags )		2564992	0		&&			
ANR	2565939	Identifier	icomp		2564992	0					
ANR	2565940	UnaryOperationExpression	! ( B_FSZERO & upd -> flags )		2564992	1					
ANR	2565941	UnaryOperator	!		2564992	0					
ANR	2565942	BitAndExpression	B_FSZERO & upd -> flags		2564992	1		&			
ANR	2565943	Identifier	B_FSZERO		2564992	0					
ANR	2565944	PtrMemberAccess	upd -> flags		2564992	1					
ANR	2565945	Identifier	upd		2564992	0					
ANR	2565946	Identifier	flags		2564992	1					
ANR	2565947	CompoundStatement		162:41:5534:5534	2564992	1					
ANR	2565948	ForStatement	for ( icomp = 0 ; icomp < upd -> ncomp ; ++ icomp )		2564992	0					
ANR	2565949	ForInit	icomp = 0 ;	3461:10:131226:131235	2564992	0	True				
ANR	2565950	AssignmentExpression	icomp = 0		2564992	0		=			
ANR	2565951	Identifier	icomp		2564992	0					
ANR	2565952	PrimaryExpression	0		2564992	1					
ANR	2565953	Condition	icomp < upd -> ncomp	3461:21:131237:131254	2564992	1	True				
ANR	2565954	RelationalExpression	icomp < upd -> ncomp		2564992	0		<			
ANR	2565955	Identifier	icomp		2564992	0					
ANR	2565956	PtrMemberAccess	upd -> ncomp		2564992	1					
ANR	2565957	Identifier	upd		2564992	0					
ANR	2565958	Identifier	ncomp		2564992	1					
ANR	2565959	UnaryExpression	++ icomp	3461:41:131257:131263	2564992	2	True				
ANR	2565960	IncDec	++		2564992	0					
ANR	2565961	Identifier	icomp		2564992	1					
ANR	2565962	CompoundStatement		167:9:5717:5728	2564992	3					
ANR	2565963	IdentifierDeclStatement	const updcomp_p comp = upd -> valptr [ icomp ] ;	3462:9:131277:131318	2564992	0	True				
ANR	2565964	IdentifierDecl	comp = upd -> valptr [ icomp ]		2564992	0					
ANR	2565965	IdentifierDeclType	const updcomp_p		2564992	0					
ANR	2565966	Identifier	comp		2564992	1					
ANR	2565967	AssignmentExpression	comp = upd -> valptr [ icomp ]		2564992	2		=			
ANR	2565968	Identifier	comp		2564992	0					
ANR	2565969	ArrayIndexing	upd -> valptr [ icomp ]		2564992	1					
ANR	2565970	PtrMemberAccess	upd -> valptr		2564992	0					
ANR	2565971	Identifier	upd		2564992	0					
ANR	2565972	Identifier	valptr		2564992	1					
ANR	2565973	Identifier	icomp		2564992	1					
ANR	2565974	IdentifierDeclStatement	int i ;	3463:9:131329:131334	2564992	1	True				
ANR	2565975	IdentifierDecl	i		2564992	0					
ANR	2565976	IdentifierDeclType	int		2564992	0					
ANR	2565977	Identifier	i		2564992	1					
ANR	2565978	IdentifierDeclStatement	"int32_t lv = INT32_MAX , hv = INT32_MIN , v ;"	3464:9:131345:131386	2564992	2	True				
ANR	2565979	IdentifierDecl	lv = INT32_MAX		2564992	0					
ANR	2565980	IdentifierDeclType	int32_t		2564992	0					
ANR	2565981	Identifier	lv		2564992	1					
ANR	2565982	AssignmentExpression	lv = INT32_MAX		2564992	2		=			
ANR	2565983	Identifier	INT32_MAX		2564992	0					
ANR	2565984	Identifier	INT32_MAX		2564992	1					
ANR	2565985	IdentifierDecl	hv = INT32_MIN		2564992	1					
ANR	2565986	IdentifierDeclType	int32_t		2564992	0					
ANR	2565987	Identifier	hv		2564992	1					
ANR	2565988	AssignmentExpression	hv = INT32_MIN		2564992	2		=			
ANR	2565989	Identifier	INT32_MIN		2564992	0					
ANR	2565990	Identifier	INT32_MIN		2564992	1					
ANR	2565991	IdentifierDecl	v		2564992	2					
ANR	2565992	IdentifierDeclType	int32_t		2564992	0					
ANR	2565993	Identifier	v		2564992	1					
ANR	2565994	IdentifierDeclStatement	float scale ;	3465:9:131397:131408	2564992	3	True				
ANR	2565995	IdentifierDecl	scale		2564992	0					
ANR	2565996	IdentifierDeclType	float		2564992	0					
ANR	2565997	Identifier	scale		2564992	1					
ANR	2565998	ForStatement	for ( i = icomp ; i < upd -> nvalbuf ; i += upd -> ncomp )		2564992	4					
ANR	2565999	ForInit	i = icomp ;	3466:13:131423:131432	2564992	0	True				
ANR	2566000	AssignmentExpression	i = icomp		2564992	0		=			
ANR	2566001	Identifier	i		2564992	0					
ANR	2566002	Identifier	icomp		2564992	1					
ANR	2566003	Condition	i < upd -> nvalbuf	3466:24:131434:131449	2564992	1	True				
ANR	2566004	RelationalExpression	i < upd -> nvalbuf		2564992	0		<			
ANR	2566005	Identifier	i		2564992	0					
ANR	2566006	PtrMemberAccess	upd -> nvalbuf		2564992	1					
ANR	2566007	Identifier	upd		2564992	0					
ANR	2566008	Identifier	nvalbuf		2564992	1					
ANR	2566009	AssignmentExpression	i += upd -> ncomp	3466:42:131452:131466	2564992	2	True	+=			
ANR	2566010	Identifier	i		2564992	0					
ANR	2566011	PtrMemberAccess	upd -> ncomp		2564992	1					
ANR	2566012	Identifier	upd		2564992	0					
ANR	2566013	Identifier	ncomp		2564992	1					
ANR	2566014	CompoundStatement		168:59:5789:5789	2564992	3					
ANR	2566015	ExpressionStatement	v = rand ( )	3467:12:131483:131493	2564992	0	True				
ANR	2566016	AssignmentExpression	v = rand ( )		2564992	0		=			
ANR	2566017	Identifier	v		2564992	0					
ANR	2566018	CallExpression	rand ( )		2564992	1					
ANR	2566019	Callee	rand		2564992	0					
ANR	2566020	Identifier	rand		2564992	0					
ANR	2566021	ArgumentList			2564992	1					
ANR	2566022	IfStatement	if ( lv > v )		2564992	1					
ANR	2566023	Condition	lv > v	3468:15:131510:131515	2564992	0	True				
ANR	2566024	RelationalExpression	lv > v		2564992	0		>			
ANR	2566025	Identifier	lv		2564992	0					
ANR	2566026	Identifier	v		2564992	1					
ANR	2566027	ExpressionStatement	lv = v	3468:23:131518:131524	2564992	1	True				
ANR	2566028	AssignmentExpression	lv = v		2564992	0		=			
ANR	2566029	Identifier	lv		2564992	0					
ANR	2566030	Identifier	v		2564992	1					
ANR	2566031	IfStatement	if ( hv < v )		2564992	2					
ANR	2566032	Condition	hv < v	3469:15:131541:131546	2564992	0	True				
ANR	2566033	RelationalExpression	hv < v		2564992	0		<			
ANR	2566034	Identifier	hv		2564992	0					
ANR	2566035	Identifier	v		2564992	1					
ANR	2566036	ExpressionStatement	hv = v	3469:23:131549:131555	2564992	1	True				
ANR	2566037	AssignmentExpression	hv = v		2564992	0		=			
ANR	2566038	Identifier	hv		2564992	0					
ANR	2566039	Identifier	v		2564992	1					
ANR	2566040	ExpressionStatement	upd -> valbuf [ i ] = v	3470:12:131569:131587	2564992	3	True				
ANR	2566041	AssignmentExpression	upd -> valbuf [ i ] = v		2564992	0		=			
ANR	2566042	ArrayIndexing	upd -> valbuf [ i ]		2564992	0					
ANR	2566043	PtrMemberAccess	upd -> valbuf		2564992	0					
ANR	2566044	Identifier	upd		2564992	0					
ANR	2566045	Identifier	valbuf		2564992	1					
ANR	2566046	Identifier	i		2564992	1					
ANR	2566047	Identifier	v		2564992	1					
ANR	2566048	ExpressionStatement	scale = ( float ) comp -> threshold / ( float ) ( hv - lv )	3472:9:131609:131660	2564992	5	True				
ANR	2566049	AssignmentExpression	scale = ( float ) comp -> threshold / ( float ) ( hv - lv )		2564992	0		=			
ANR	2566050	Identifier	scale		2564992	0					
ANR	2566051	MultiplicativeExpression	( float ) comp -> threshold / ( float ) ( hv - lv )		2564992	1		/			
ANR	2566052	CastExpression	( float ) comp -> threshold		2564992	0					
ANR	2566053	CastTarget	float		2564992	0					
ANR	2566054	PtrMemberAccess	comp -> threshold		2564992	1					
ANR	2566055	Identifier	comp		2564992	0					
ANR	2566056	Identifier	threshold		2564992	1					
ANR	2566057	CastExpression	( float ) ( hv - lv )		2564992	1					
ANR	2566058	CastTarget	float		2564992	0					
ANR	2566059	AdditiveExpression	hv - lv		2564992	1		-			
ANR	2566060	Identifier	hv		2564992	0					
ANR	2566061	Identifier	lv		2564992	1					
ANR	2566062	ExpressionStatement	lv += ( int32_t ) ( comp -> threshold / ( 2 * scale ) )	3473:9:131671:131717	2564992	6	True				
ANR	2566063	AssignmentExpression	lv += ( int32_t ) ( comp -> threshold / ( 2 * scale ) )		2564992	0		+=			
ANR	2566064	Identifier	lv		2564992	0					
ANR	2566065	CastExpression	( int32_t ) ( comp -> threshold / ( 2 * scale ) )		2564992	1					
ANR	2566066	CastTarget	int32_t		2564992	0					
ANR	2566067	MultiplicativeExpression	comp -> threshold / ( 2 * scale )		2564992	1		/			
ANR	2566068	PtrMemberAccess	comp -> threshold		2564992	0					
ANR	2566069	Identifier	comp		2564992	0					
ANR	2566070	Identifier	threshold		2564992	1					
ANR	2566071	MultiplicativeExpression	2 * scale		2564992	1		*			
ANR	2566072	PrimaryExpression	2		2564992	0					
ANR	2566073	Identifier	scale		2564992	1					
ANR	2566074	ForStatement	for ( i = icomp ; i < upd -> nvalbuf ; i += upd -> ncomp )		2564992	7					
ANR	2566075	ForInit	i = icomp ;	3474:13:131732:131741	2564992	0	True				
ANR	2566076	AssignmentExpression	i = icomp		2564992	0		=			
ANR	2566077	Identifier	i		2564992	0					
ANR	2566078	Identifier	icomp		2564992	1					
ANR	2566079	Condition	i < upd -> nvalbuf	3474:24:131743:131758	2564992	1	True				
ANR	2566080	RelationalExpression	i < upd -> nvalbuf		2564992	0		<			
ANR	2566081	Identifier	i		2564992	0					
ANR	2566082	PtrMemberAccess	upd -> nvalbuf		2564992	1					
ANR	2566083	Identifier	upd		2564992	0					
ANR	2566084	Identifier	nvalbuf		2564992	1					
ANR	2566085	AssignmentExpression	i += upd -> ncomp	3474:42:131761:131775	2564992	2	True	+=			
ANR	2566086	Identifier	i		2564992	0					
ANR	2566087	PtrMemberAccess	upd -> ncomp		2564992	1					
ANR	2566088	Identifier	upd		2564992	0					
ANR	2566089	Identifier	ncomp		2564992	1					
ANR	2566090	ExpressionStatement	upd -> valbuf [ i ] = ( int32_t ) ( scale * ( upd -> valbuf [ i ] - lv ) )	3475:12:131790:131847	2564992	3	True				
ANR	2566091	AssignmentExpression	upd -> valbuf [ i ] = ( int32_t ) ( scale * ( upd -> valbuf [ i ] - lv ) )		2564992	0		=			
ANR	2566092	ArrayIndexing	upd -> valbuf [ i ]		2564992	0					
ANR	2566093	PtrMemberAccess	upd -> valbuf		2564992	0					
ANR	2566094	Identifier	upd		2564992	0					
ANR	2566095	Identifier	valbuf		2564992	1					
ANR	2566096	Identifier	i		2564992	1					
ANR	2566097	CastExpression	( int32_t ) ( scale * ( upd -> valbuf [ i ] - lv ) )		2564992	1					
ANR	2566098	CastTarget	int32_t		2564992	0					
ANR	2566099	MultiplicativeExpression	scale * ( upd -> valbuf [ i ] - lv )		2564992	1		*			
ANR	2566100	Identifier	scale		2564992	0					
ANR	2566101	AdditiveExpression	upd -> valbuf [ i ] - lv		2564992	1		-			
ANR	2566102	ArrayIndexing	upd -> valbuf [ i ]		2564992	0					
ANR	2566103	PtrMemberAccess	upd -> valbuf		2564992	0					
ANR	2566104	Identifier	upd		2564992	0					
ANR	2566105	Identifier	valbuf		2564992	1					
ANR	2566106	Identifier	i		2564992	1					
ANR	2566107	Identifier	lv		2564992	1					
ANR	2566108	ExpressionStatement	upd -> render = upd_fscomp	3482:3:131944:131968	2564992	10	True				
ANR	2566109	AssignmentExpression	upd -> render = upd_fscomp		2564992	0		=			
ANR	2566110	PtrMemberAccess	upd -> render		2564992	0					
ANR	2566111	Identifier	upd		2564992	0					
ANR	2566112	Identifier	render		2564992	1					
ANR	2566113	Identifier	upd_fscomp		2564992	1					
ANR	2566114	IfStatement	if ( icomp )		2564992	11					
ANR	2566115	Condition	icomp	3484:6:131977:131981	2564992	0	True				
ANR	2566116	Identifier	icomp		2564992	0					
ANR	2566117	ExpressionStatement	upd -> flags |= B_RENDER	3484:13:131984:132007	2564992	1	True				
ANR	2566118	AssignmentExpression	upd -> flags |= B_RENDER		2564992	0		|=			
ANR	2566119	PtrMemberAccess	upd -> flags		2564992	0					
ANR	2566120	Identifier	upd		2564992	0					
ANR	2566121	Identifier	flags		2564992	1					
ANR	2566122	Identifier	B_RENDER		2564992	1					
ANR	2566123	ElseStatement	else		2564992	0					
ANR	2566124	ExpressionStatement	upd -> flags &= ~B_RENDER	3485:13:132022:132045	2564992	0	True				
ANR	2566125	AssignmentExpression	upd -> flags &= ~B_RENDER		2564992	0		&=			
ANR	2566126	PtrMemberAccess	upd -> flags		2564992	0					
ANR	2566127	Identifier	upd		2564992	0					
ANR	2566128	Identifier	flags		2564992	1					
ANR	2566129	Identifier	~B_RENDER		2564992	1					
ANR	2566130	ReturnStatement	return ;	3487:3:132051:132057	2564992	12	True				
ANR	2566131	ReturnType	static void		2564992	1					
ANR	2566132	Identifier	upd_open_fscomp		2564992	2					
ANR	2566133	ParameterList	upd_device * udev		2564992	3					
ANR	2566134	Parameter	upd_device * udev	3298:16:125661:125676	2564992	0	True				
ANR	2566135	ParameterType	upd_device *		2564992	0					
ANR	2566136	Identifier	udev		2564992	1					
ANR	2566137	CFGEntryNode	ENTRY		2564992		True				
ANR	2566138	CFGExitNode	EXIT		2564992		True				
ANR	2566139	Symbol	* upd -> int_a		2564992						
ANR	2566140	Symbol	ymin		2564992						
ANR	2566141	Symbol	* upd -> cmap [ comp -> cmap ] . xfer		2564992						
ANR	2566142	Symbol	upd -> int_a [ IA_COMPORDER ] . size		2564992						
ANR	2566143	Symbol	comp -> bitshf		2564992						
ANR	2566144	Symbol	icomp		2564992						
ANR	2566145	Symbol	hv		2564992						
ANR	2566146	Symbol	upd -> rwidth		2564992						
ANR	2566147	Symbol	* * upd -> cmap [ comp -> cmap ] . xfer		2564992						
ANR	2566148	Symbol	rand		2564992						
ANR	2566149	Symbol	comp -> offset		2564992						
ANR	2566150	Symbol	* udev		2564992						
ANR	2566151	Symbol	* upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size		2564992						
ANR	2566152	Symbol	upd -> valptr		2564992						
ANR	2566153	Symbol	order		2564992						
ANR	2566154	Symbol	comp		2564992						
ANR	2566155	Symbol	* upd -> float_a		2564992						
ANR	2566156	Symbol	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size		2564992						
ANR	2566157	Symbol	upd		2564992						
ANR	2566158	Symbol	* IA_COMPORDER		2564992						
ANR	2566159	Symbol	* * upd -> float_a		2564992						
ANR	2566160	Symbol	gs_malloc		2564992						
ANR	2566161	Symbol	* * icomp		2564992						
ANR	2566162	Symbol	comp -> scale		2564992						
ANR	2566163	Symbol	B_FSZERO		2564992						
ANR	2566164	Symbol	* upd -> valbuf		2564992						
ANR	2566165	Symbol	nsteps		2564992						
ANR	2566166	Symbol	* upd -> cmap		2564992						
ANR	2566167	Symbol	upd -> cmap [ order [ icomp ] ] . bitmsk		2564992						
ANR	2566168	Symbol	upd_fscomp		2564992						
ANR	2566169	Symbol	* * * * comp		2564992						
ANR	2566170	Symbol	upd -> flags		2564992						
ANR	2566171	Symbol	* upd		2564992						
ANR	2566172	Symbol	comp -> threshold		2564992						
ANR	2566173	Symbol	B_RENDER		2564992						
ANR	2566174	Symbol	i		2564992						
ANR	2566175	Symbol	comp -> bits		2564992						
ANR	2566176	Symbol	* order		2564992						
ANR	2566177	Symbol	INT32_MAX		2564992						
ANR	2566178	Symbol	* * upd -> int_a		2564992						
ANR	2566179	Symbol	upd -> render		2564992						
ANR	2566180	Symbol	fs_emax		2564992						
ANR	2566181	Symbol	ymax		2564992						
ANR	2566182	Symbol	v		2564992						
ANR	2566183	Symbol	comp -> cmap		2564992						
ANR	2566184	Symbol	* * upd		2564992						
ANR	2566185	Symbol	* comp -> cmap		2564992						
ANR	2566186	Symbol	INT32_MIN		2564992						
ANR	2566187	Symbol	* * * comp -> cmap		2564992						
ANR	2566188	Symbol	* * * * upd		2564992						
ANR	2566189	Symbol	* * * upd -> cmap		2564992						
ANR	2566190	Symbol	lv		2564992						
ANR	2566191	Symbol	* * comp -> cmap		2564992						
ANR	2566192	Symbol	upd -> cmap		2564992						
ANR	2566193	Symbol	upd -> valbuf		2564992						
ANR	2566194	Symbol	upd -> int_a		2564992						
ANR	2566195	Symbol	upd -> nvalbuf		2564992						
ANR	2566196	Symbol	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data		2564992						
ANR	2566197	Symbol	upd -> cmap [ comp -> cmap ] . xfer		2564992						
ANR	2566198	Symbol	fs_emin		2564992						
ANR	2566199	Symbol	UPD_CMAP_MAX		2564992						
ANR	2566200	Symbol	* upd -> int_a [ IA_COMPORDER ] . data		2564992						
ANR	2566201	Symbol	NULL		2564992						
ANR	2566202	Symbol	upd -> cmap [ comp -> cmap ] . bits		2564992						
ANR	2566203	Symbol	need		2564992						
ANR	2566204	Symbol	upd -> cmap [ comp -> cmap ] . bitmsk		2564992						
ANR	2566205	Symbol	UPD_VALPTR_MAX		2564992						
ANR	2566206	Symbol	upd -> cmap [ comp -> cmap ] . comp		2564992						
ANR	2566207	Symbol	highval		2564992						
ANR	2566208	Symbol	* * comp		2564992						
ANR	2566209	Symbol	highmod		2564992						
ANR	2566210	Symbol	udev		2564992						
ANR	2566211	Symbol	success		2564992						
ANR	2566212	Symbol	true		2564992						
ANR	2566213	Symbol	IA_COMPORDER		2564992						
ANR	2566214	Symbol	upd -> float_a		2564992						
ANR	2566215	Symbol	~B_RENDER		2564992						
ANR	2566216	Symbol	* * * comp		2564992						
ANR	2566217	Symbol	upd -> cmap [ comp -> cmap ] . bitshf		2564992						
ANR	2566218	Symbol	* * IA_COMPORDER		2564992						
ANR	2566219	Symbol	scale		2564992						
ANR	2566220	Symbol	* fs_emin		2564992						
ANR	2566221	Symbol	* upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data		2564992						
ANR	2566222	Symbol	upd -> ncomp		2564992						
ANR	2566223	Symbol	udev -> upd		2564992						
ANR	2566224	Symbol	comp -> bitmsk		2564992						
ANR	2566225	Symbol	* icomp		2564992						
ANR	2566226	Symbol	* fs_emax		2564992						
ANR	2566227	Symbol	* comp		2564992						
ANR	2566228	Symbol	* upd -> valptr		2564992						
ANR	2566229	Symbol	udev -> memory		2564992						
ANR	2566230	Symbol	* * * upd		2564992						
ANR	2566231	Symbol	false		2564992						
ANR	2566232	Symbol	upd -> cmap [ comp -> cmap ] . rise		2564992						
ANR	2566233	Symbol	* * upd -> cmap		2564992						
ANR	2566234	Symbol	* * order		2564992						
ANR	2566235	Symbol	upd -> int_a [ IA_COMPORDER ] . data		2564992						
ANR	2566236	Symbol	comp -> spotsize		2564992						
ANR	2566237	Symbol	* i		2564992						
ANR	2566238	Function	upd_close_fscomp	3494:0:132285:133081							
ANR	2566239	FunctionDef	upd_close_fscomp (upd_device * udev)		2566238	0					
ANR	2566240	CompoundStatement		3496:0:132332:133081	2566238	0					
ANR	2566241	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	3497:3:132337:132364	2566238	0	True				
ANR	2566242	IdentifierDecl	upd = udev -> upd		2566238	0					
ANR	2566243	IdentifierDeclType	const upd_p		2566238	0					
ANR	2566244	Identifier	upd		2566238	1					
ANR	2566245	AssignmentExpression	upd = udev -> upd		2566238	2		=			
ANR	2566246	Identifier	upd		2566238	0					
ANR	2566247	PtrMemberAccess	udev -> upd		2566238	1					
ANR	2566248	Identifier	udev		2566238	0					
ANR	2566249	Identifier	upd		2566238	1					
ANR	2566250	IdentifierDeclStatement	int icomp ;	3498:3:132369:132378	2566238	1	True				
ANR	2566251	IdentifierDecl	icomp		2566238	0					
ANR	2566252	IdentifierDeclType	int		2566238	0					
ANR	2566253	Identifier	icomp		2566238	1					
ANR	2566254	IfStatement	if ( upd && ( upd -> flags & B_RENDER ) )		2566238	2					
ANR	2566255	Condition	upd && ( upd -> flags & B_RENDER )	3501:6:132418:132447	2566238	0	True				
ANR	2566256	AndExpression	upd && ( upd -> flags & B_RENDER )		2566238	0		&&			
ANR	2566257	Identifier	upd		2566238	0					
ANR	2566258	BitAndExpression	upd -> flags & B_RENDER		2566238	1		&			
ANR	2566259	PtrMemberAccess	upd -> flags		2566238	0					
ANR	2566260	Identifier	upd		2566238	0					
ANR	2566261	Identifier	flags		2566238	1					
ANR	2566262	Identifier	B_RENDER		2566238	1					
ANR	2566263	CompoundStatement		6:38:117:117	2566238	1					
ANR	2566264	ForStatement	for ( icomp = 0 ; icomp < upd -> ncomp ; ++ icomp )		2566238	0					
ANR	2566265	ForInit	icomp = 0 ;	3503:10:132463:132472	2566238	0	True				
ANR	2566266	AssignmentExpression	icomp = 0		2566238	0		=			
ANR	2566267	Identifier	icomp		2566238	0					
ANR	2566268	PrimaryExpression	0		2566238	1					
ANR	2566269	Condition	icomp < upd -> ncomp	3503:21:132474:132491	2566238	1	True				
ANR	2566270	RelationalExpression	icomp < upd -> ncomp		2566238	0		<			
ANR	2566271	Identifier	icomp		2566238	0					
ANR	2566272	PtrMemberAccess	upd -> ncomp		2566238	1					
ANR	2566273	Identifier	upd		2566238	0					
ANR	2566274	Identifier	ncomp		2566238	1					
ANR	2566275	UnaryExpression	++ icomp	3503:41:132494:132500	2566238	2	True				
ANR	2566276	IncDec	++		2566238	0					
ANR	2566277	Identifier	icomp		2566238	1					
ANR	2566278	CompoundStatement		9:9:181:216	2566238	3					
ANR	2566279	IdentifierDeclStatement	updcomp_p comp = upd -> valptr [ icomp ] ;	3504:9:132514:132549	2566238	0	True				
ANR	2566280	IdentifierDecl	comp = upd -> valptr [ icomp ]		2566238	0					
ANR	2566281	IdentifierDeclType	updcomp_p		2566238	0					
ANR	2566282	Identifier	comp		2566238	1					
ANR	2566283	AssignmentExpression	comp = upd -> valptr [ icomp ]		2566238	2		=			
ANR	2566284	Identifier	comp		2566238	0					
ANR	2566285	ArrayIndexing	upd -> valptr [ icomp ]		2566238	1					
ANR	2566286	PtrMemberAccess	upd -> valptr		2566238	0					
ANR	2566287	Identifier	upd		2566238	0					
ANR	2566288	Identifier	valptr		2566238	1					
ANR	2566289	Identifier	icomp		2566238	1					
ANR	2566290	IfStatement	if ( ! comp )		2566238	1					
ANR	2566291	Condition	! comp	3505:12:132563:132567	2566238	0	True				
ANR	2566292	UnaryOperationExpression	! comp		2566238	0					
ANR	2566293	UnaryOperator	!		2566238	0					
ANR	2566294	Identifier	comp		2566238	1					
ANR	2566295	ContinueStatement	continue ;	3505:19:132570:132578	2566238	1	True				
ANR	2566296	IfStatement	if ( ! comp -> spotsize )		2566238	2					
ANR	2566297	Condition	! comp -> spotsize	3506:12:132592:132606	2566238	0	True				
ANR	2566298	UnaryOperationExpression	! comp -> spotsize		2566238	0					
ANR	2566299	UnaryOperator	!		2566238	0					
ANR	2566300	PtrMemberAccess	comp -> spotsize		2566238	1					
ANR	2566301	Identifier	comp		2566238	0					
ANR	2566302	Identifier	spotsize		2566238	1					
ANR	2566303	ContinueStatement	continue ;	3506:29:132609:132617	2566238	1	True				
ANR	2566304	ExpressionStatement	"errprintf ( udev -> memory , ""%d. Component: %6.3f <= error <= %6.3f\\n"" , icomp + 1 , ( double ) fs_emin [ icomp ] / ( double ) comp -> spotsize , ( double ) fs_emax [ icomp ] / ( double ) comp -> spotsize )"	3507:9:132628:132844	2566238	3	True				
ANR	2566305	CallExpression	"errprintf ( udev -> memory , ""%d. Component: %6.3f <= error <= %6.3f\\n"" , icomp + 1 , ( double ) fs_emin [ icomp ] / ( double ) comp -> spotsize , ( double ) fs_emax [ icomp ] / ( double ) comp -> spotsize )"		2566238	0					
ANR	2566306	Callee	errprintf		2566238	0					
ANR	2566307	Identifier	errprintf		2566238	0					
ANR	2566308	ArgumentList	udev -> memory		2566238	1					
ANR	2566309	Argument	udev -> memory		2566238	0					
ANR	2566310	PtrMemberAccess	udev -> memory		2566238	0					
ANR	2566311	Identifier	udev		2566238	0					
ANR	2566312	Identifier	memory		2566238	1					
ANR	2566313	Argument	"""%d. Component: %6.3f <= error <= %6.3f\\n"""		2566238	1					
ANR	2566314	PrimaryExpression	"""%d. Component: %6.3f <= error <= %6.3f\\n"""		2566238	0					
ANR	2566315	Argument	icomp + 1		2566238	2					
ANR	2566316	AdditiveExpression	icomp + 1		2566238	0		+			
ANR	2566317	Identifier	icomp		2566238	0					
ANR	2566318	PrimaryExpression	1		2566238	1					
ANR	2566319	Argument	( double ) fs_emin [ icomp ] / ( double ) comp -> spotsize		2566238	3					
ANR	2566320	MultiplicativeExpression	( double ) fs_emin [ icomp ] / ( double ) comp -> spotsize		2566238	0		/			
ANR	2566321	CastExpression	( double ) fs_emin [ icomp ]		2566238	0					
ANR	2566322	CastTarget	double		2566238	0					
ANR	2566323	ArrayIndexing	fs_emin [ icomp ]		2566238	1					
ANR	2566324	Identifier	fs_emin		2566238	0					
ANR	2566325	Identifier	icomp		2566238	1					
ANR	2566326	CastExpression	( double ) comp -> spotsize		2566238	1					
ANR	2566327	CastTarget	double		2566238	0					
ANR	2566328	PtrMemberAccess	comp -> spotsize		2566238	1					
ANR	2566329	Identifier	comp		2566238	0					
ANR	2566330	Identifier	spotsize		2566238	1					
ANR	2566331	Argument	( double ) fs_emax [ icomp ] / ( double ) comp -> spotsize		2566238	4					
ANR	2566332	MultiplicativeExpression	( double ) fs_emax [ icomp ] / ( double ) comp -> spotsize		2566238	0		/			
ANR	2566333	CastExpression	( double ) fs_emax [ icomp ]		2566238	0					
ANR	2566334	CastTarget	double		2566238	0					
ANR	2566335	ArrayIndexing	fs_emax [ icomp ]		2566238	1					
ANR	2566336	Identifier	fs_emax		2566238	0					
ANR	2566337	Identifier	icomp		2566238	1					
ANR	2566338	CastExpression	( double ) comp -> spotsize		2566238	1					
ANR	2566339	CastTarget	double		2566238	0					
ANR	2566340	PtrMemberAccess	comp -> spotsize		2566238	1					
ANR	2566341	Identifier	comp		2566238	0					
ANR	2566342	Identifier	spotsize		2566238	1					
ANR	2566343	ForStatement	for ( icomp = 0 ; UPD_VALPTR_MAX > icomp ; ++ icomp )		2566238	3					
ANR	2566344	ForInit	icomp = 0 ;	3516:7:132875:132884	2566238	0	True				
ANR	2566345	AssignmentExpression	icomp = 0		2566238	0		=			
ANR	2566346	Identifier	icomp		2566238	0					
ANR	2566347	PrimaryExpression	0		2566238	1					
ANR	2566348	Condition	UPD_VALPTR_MAX > icomp	3516:18:132886:132907	2566238	1	True				
ANR	2566349	RelationalExpression	UPD_VALPTR_MAX > icomp		2566238	0		>			
ANR	2566350	Identifier	UPD_VALPTR_MAX		2566238	0					
ANR	2566351	Identifier	icomp		2566238	1					
ANR	2566352	UnaryExpression	++ icomp	3516:42:132910:132916	2566238	2	True				
ANR	2566353	IncDec	++		2566238	0					
ANR	2566354	Identifier	icomp		2566238	1					
ANR	2566355	CompoundStatement		21:51:586:586	2566238	3					
ANR	2566356	IfStatement	if ( ! upd -> valptr [ icomp ] )		2566238	0					
ANR	2566357	Condition	! upd -> valptr [ icomp ]	3517:9:132930:132948	2566238	0	True				
ANR	2566358	UnaryOperationExpression	! upd -> valptr [ icomp ]		2566238	0					
ANR	2566359	UnaryOperator	!		2566238	0					
ANR	2566360	ArrayIndexing	upd -> valptr [ icomp ]		2566238	1					
ANR	2566361	PtrMemberAccess	upd -> valptr		2566238	0					
ANR	2566362	Identifier	upd		2566238	0					
ANR	2566363	Identifier	valptr		2566238	1					
ANR	2566364	Identifier	icomp		2566238	1					
ANR	2566365	ContinueStatement	continue ;	3517:30:132951:132959	2566238	1	True				
ANR	2566366	ExpressionStatement	"gs_free ( udev -> memory , upd -> valptr [ icomp ] , 1 , sizeof ( updcomp_t ) , ""upd/fscomp"" )"	3518:6:132967:133041	2566238	1	True				
ANR	2566367	CallExpression	"gs_free ( udev -> memory , upd -> valptr [ icomp ] , 1 , sizeof ( updcomp_t ) , ""upd/fscomp"" )"		2566238	0					
ANR	2566368	Callee	gs_free		2566238	0					
ANR	2566369	Identifier	gs_free		2566238	0					
ANR	2566370	ArgumentList	udev -> memory		2566238	1					
ANR	2566371	Argument	udev -> memory		2566238	0					
ANR	2566372	PtrMemberAccess	udev -> memory		2566238	0					
ANR	2566373	Identifier	udev		2566238	0					
ANR	2566374	Identifier	memory		2566238	1					
ANR	2566375	Argument	upd -> valptr [ icomp ]		2566238	1					
ANR	2566376	ArrayIndexing	upd -> valptr [ icomp ]		2566238	0					
ANR	2566377	PtrMemberAccess	upd -> valptr		2566238	0					
ANR	2566378	Identifier	upd		2566238	0					
ANR	2566379	Identifier	valptr		2566238	1					
ANR	2566380	Identifier	icomp		2566238	1					
ANR	2566381	Argument	1		2566238	2					
ANR	2566382	PrimaryExpression	1		2566238	0					
ANR	2566383	Argument	sizeof ( updcomp_t )		2566238	3					
ANR	2566384	SizeofExpression	sizeof ( updcomp_t )		2566238	0					
ANR	2566385	Sizeof	sizeof		2566238	0					
ANR	2566386	SizeofOperand	updcomp_t		2566238	1					
ANR	2566387	Argument	"""upd/fscomp"""		2566238	4					
ANR	2566388	PrimaryExpression	"""upd/fscomp"""		2566238	0					
ANR	2566389	ExpressionStatement	upd -> valptr [ icomp ] = NULL	3519:6:133049:133074	2566238	2	True				
ANR	2566390	AssignmentExpression	upd -> valptr [ icomp ] = NULL		2566238	0		=			
ANR	2566391	ArrayIndexing	upd -> valptr [ icomp ]		2566238	0					
ANR	2566392	PtrMemberAccess	upd -> valptr		2566238	0					
ANR	2566393	Identifier	upd		2566238	0					
ANR	2566394	Identifier	valptr		2566238	1					
ANR	2566395	Identifier	icomp		2566238	1					
ANR	2566396	Identifier	NULL		2566238	1					
ANR	2566397	ReturnType	static void		2566238	1					
ANR	2566398	Identifier	upd_close_fscomp		2566238	2					
ANR	2566399	ParameterList	upd_device * udev		2566238	3					
ANR	2566400	Parameter	upd_device * udev	3495:17:132314:132329	2566238	0	True				
ANR	2566401	ParameterType	upd_device *		2566238	0					
ANR	2566402	Identifier	udev		2566238	1					
ANR	2566403	CFGEntryNode	ENTRY		2566238		True				
ANR	2566404	CFGExitNode	EXIT		2566238		True				
ANR	2566405	Symbol	comp		2566238						
ANR	2566406	Symbol	NULL		2566238						
ANR	2566407	Symbol	udev -> memory		2566238						
ANR	2566408	Symbol	upd		2566238						
ANR	2566409	Symbol	B_RENDER		2566238						
ANR	2566410	Symbol	* fs_emin		2566238						
ANR	2566411	Symbol	UPD_VALPTR_MAX		2566238						
ANR	2566412	Symbol	icomp		2566238						
ANR	2566413	Symbol	upd -> ncomp		2566238						
ANR	2566414	Symbol	upd -> flags		2566238						
ANR	2566415	Symbol	udev -> upd		2566238						
ANR	2566416	Symbol	comp -> spotsize		2566238						
ANR	2566417	Symbol	fs_emax		2566238						
ANR	2566418	Symbol	* udev		2566238						
ANR	2566419	Symbol	* upd		2566238						
ANR	2566420	Symbol	* icomp		2566238						
ANR	2566421	Symbol	udev		2566238						
ANR	2566422	Symbol	* comp		2566238						
ANR	2566423	Symbol	* fs_emax		2566238						
ANR	2566424	Symbol	* upd -> valptr		2566238						
ANR	2566425	Symbol	fs_emin		2566238						
ANR	2566426	Symbol	* * upd		2566238						
ANR	2566427	Symbol	upd -> valptr		2566238						
ANR	2566428	DeclStmt									
ANR	2566429	Decl							define	define ( I )	FS_M_ROWERR
ANR	2566430	Function	upd_fscomp	3570:0:135159:140527							
ANR	2566431	FunctionDef	upd_fscomp (upd_p upd)		2566430	0					
ANR	2566432	CompoundStatement		3572:0:135192:140527	2566430	0					
ANR	2566433	IdentifierDeclStatement	const updscan_p scan = upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ] ;	3573:3:135197:135263	2566430	0	True				
ANR	2566434	IdentifierDecl	scan = upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ]		2566430	0					
ANR	2566435	IdentifierDeclType	const updscan_p		2566430	0					
ANR	2566436	Identifier	scan		2566430	1					
ANR	2566437	AssignmentExpression	scan = upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ]		2566430	2		=			
ANR	2566438	Identifier	scan		2566430	0					
ANR	2566439	ArrayIndexing	upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ]		2566430	1					
ANR	2566440	PtrMemberAccess	upd -> scnbuf		2566430	0					
ANR	2566441	Identifier	upd		2566430	0					
ANR	2566442	Identifier	scnbuf		2566430	1					
ANR	2566443	BitAndExpression	upd -> yscnbuf & upd -> scnmsk		2566430	1		&			
ANR	2566444	PtrMemberAccess	upd -> yscnbuf		2566430	0					
ANR	2566445	Identifier	upd		2566430	0					
ANR	2566446	Identifier	yscnbuf		2566430	1					
ANR	2566447	PtrMemberAccess	upd -> scnmsk		2566430	1					
ANR	2566448	Identifier	upd		2566430	0					
ANR	2566449	Identifier	scnmsk		2566430	1					
ANR	2566450	IdentifierDeclStatement	const updcomp_p * comp = ( updcomp_p * ) upd -> valptr ;	3574:3:135268:135320	2566430	1	True				
ANR	2566451	IdentifierDecl	* comp = ( updcomp_p * ) upd -> valptr		2566430	0					
ANR	2566452	IdentifierDeclType	const updcomp_p *		2566430	0					
ANR	2566453	Identifier	comp		2566430	1					
ANR	2566454	AssignmentExpression	* comp = ( updcomp_p * ) upd -> valptr		2566430	2		=			
ANR	2566455	Identifier	comp		2566430	0					
ANR	2566456	CastExpression	( updcomp_p * ) upd -> valptr		2566430	1					
ANR	2566457	CastTarget	updcomp_p *		2566430	0					
ANR	2566458	PtrMemberAccess	upd -> valptr		2566430	1					
ANR	2566459	Identifier	upd		2566430	0					
ANR	2566460	Identifier	valptr		2566430	1					
ANR	2566461	Statement	int32_t	3575:3:135325:135331	2566430	2	True				
ANR	2566462	Statement	*	3575:11:135333:135333	2566430	3	True				
ANR	2566463	Statement	const	3575:12:135334:135338	2566430	4	True				
ANR	2566464	ExpressionStatement	pixel = upd -> valbuf	3575:22:135344:135364	2566430	5	True				
ANR	2566465	AssignmentExpression	pixel = upd -> valbuf		2566430	0		=			
ANR	2566466	Identifier	pixel		2566430	0					
ANR	2566467	PtrMemberAccess	upd -> valbuf		2566430	1					
ANR	2566468	Identifier	upd		2566430	0					
ANR	2566469	Identifier	valbuf		2566430	1					
ANR	2566470	Statement	int32_t	3576:3:135369:135375	2566430	6	True				
ANR	2566471	Statement	*	3576:11:135377:135377	2566430	7	True				
ANR	2566472	Statement	const	3576:12:135378:135382	2566430	8	True				
ANR	2566473	ExpressionStatement	colerr = pixel + upd -> ncomp	3576:22:135388:135416	2566430	9	True				
ANR	2566474	AssignmentExpression	colerr = pixel + upd -> ncomp		2566430	0		=			
ANR	2566475	Identifier	colerr		2566430	0					
ANR	2566476	AdditiveExpression	pixel + upd -> ncomp		2566430	1		+			
ANR	2566477	Identifier	pixel		2566430	0					
ANR	2566478	PtrMemberAccess	upd -> ncomp		2566430	1					
ANR	2566479	Identifier	upd		2566430	0					
ANR	2566480	Identifier	ncomp		2566430	1					
ANR	2566481	IdentifierDeclStatement	int32_t * rowerr = colerr + upd -> ncomp ;	3577:3:135421:135468	2566430	10	True				
ANR	2566482	IdentifierDecl	* rowerr = colerr + upd -> ncomp		2566430	0					
ANR	2566483	IdentifierDeclType	int32_t *		2566430	0					
ANR	2566484	Identifier	rowerr		2566430	1					
ANR	2566485	AssignmentExpression	* rowerr = colerr + upd -> ncomp		2566430	2		=			
ANR	2566486	Identifier	rowerr		2566430	0					
ANR	2566487	AdditiveExpression	colerr + upd -> ncomp		2566430	1		+			
ANR	2566488	Identifier	colerr		2566430	0					
ANR	2566489	PtrMemberAccess	upd -> ncomp		2566430	1					
ANR	2566490	Identifier	upd		2566430	0					
ANR	2566491	Identifier	ncomp		2566430	1					
ANR	2566492	IdentifierDeclStatement	int pwidth = upd -> rwidth ;	3578:3:135473:135510	2566430	11	True				
ANR	2566493	IdentifierDecl	pwidth = upd -> rwidth		2566430	0					
ANR	2566494	IdentifierDeclType	int		2566430	0					
ANR	2566495	Identifier	pwidth		2566430	1					
ANR	2566496	AssignmentExpression	pwidth = upd -> rwidth		2566430	2		=			
ANR	2566497	Identifier	pwidth		2566430	0					
ANR	2566498	PtrMemberAccess	upd -> rwidth		2566430	1					
ANR	2566499	Identifier	upd		2566430	0					
ANR	2566500	Identifier	rwidth		2566430	1					
ANR	2566501	IdentifierDeclStatement	"int dir , ibyte ;"	3579:3:135515:135541	2566430	12	True				
ANR	2566502	IdentifierDecl	dir		2566430	0					
ANR	2566503	IdentifierDeclType	int		2566430	0					
ANR	2566504	Identifier	dir		2566430	1					
ANR	2566505	IdentifierDecl	ibyte		2566430	1					
ANR	2566506	IdentifierDeclType	int		2566430	0					
ANR	2566507	Identifier	ibyte		2566430	1					
ANR	2566508	IdentifierDeclStatement	"int iblack , bblack , pxlset ;"	3580:3:135546:135583	2566430	13	True				
ANR	2566509	IdentifierDecl	iblack		2566430	0					
ANR	2566510	IdentifierDeclType	int		2566430	0					
ANR	2566511	Identifier	iblack		2566430	1					
ANR	2566512	IdentifierDecl	bblack		2566430	1					
ANR	2566513	IdentifierDeclType	int		2566430	0					
ANR	2566514	Identifier	bblack		2566430	1					
ANR	2566515	IdentifierDecl	pxlset		2566430	2					
ANR	2566516	IdentifierDeclType	int		2566430	0					
ANR	2566517	Identifier	pxlset		2566430	1					
ANR	2566518	IdentifierDeclStatement	uint32_t ci ;	3581:3:135588:135605	2566430	14	True				
ANR	2566519	IdentifierDecl	ci		2566430	0					
ANR	2566520	IdentifierDeclType	uint32_t		2566430	0					
ANR	2566521	Identifier	ci		2566430	1					
ANR	2566522	IdentifierDeclStatement	byte bit ;	3582:3:135610:135626	2566430	15	True				
ANR	2566523	IdentifierDecl	bit		2566430	0					
ANR	2566524	IdentifierDeclType	byte		2566430	0					
ANR	2566525	Identifier	bit		2566430	1					
ANR	2566526	IdentifierDeclStatement	bool first = true ;	3583:3:135631:135656	2566430	16	True				
ANR	2566527	IdentifierDecl	first = true		2566430	0					
ANR	2566528	IdentifierDeclType	bool		2566430	0					
ANR	2566529	Identifier	first		2566430	1					
ANR	2566530	AssignmentExpression	first = true		2566430	2		=			
ANR	2566531	Identifier	true		2566430	0					
ANR	2566532	Identifier	true		2566430	1					
ANR	2566533	SwitchStatement	switch ( upd -> ncomp )		2566430	17					
ANR	2566534	Condition	upd -> ncomp	3587:10:135703:135712	2566430	0	True				
ANR	2566535	PtrMemberAccess	upd -> ncomp		2566430	0					
ANR	2566536	Identifier	upd		2566430	0					
ANR	2566537	Identifier	ncomp		2566430	1					
ANR	2566538	CompoundStatement		16:22:522:522	2566430	1					
ANR	2566539	Label	case 4 :	3588:5:135722:135728	2566430	0	True				
ANR	2566540	ExpressionStatement	"memset ( scan [ 3 ] . bytes , 0 , upd -> nbytes )"	3588:14:135731:135766	2566430	1	True				
ANR	2566541	CallExpression	"memset ( scan [ 3 ] . bytes , 0 , upd -> nbytes )"		2566430	0					
ANR	2566542	Callee	memset		2566430	0					
ANR	2566543	Identifier	memset		2566430	0					
ANR	2566544	ArgumentList	scan [ 3 ] . bytes		2566430	1					
ANR	2566545	Argument	scan [ 3 ] . bytes		2566430	0					
ANR	2566546	MemberAccess	scan [ 3 ] . bytes		2566430	0					
ANR	2566547	ArrayIndexing	scan [ 3 ]		2566430	0					
ANR	2566548	Identifier	scan		2566430	0					
ANR	2566549	PrimaryExpression	3		2566430	1					
ANR	2566550	Identifier	bytes		2566430	1					
ANR	2566551	Argument	0		2566430	1					
ANR	2566552	PrimaryExpression	0		2566430	0					
ANR	2566553	Argument	upd -> nbytes		2566430	2					
ANR	2566554	PtrMemberAccess	upd -> nbytes		2566430	0					
ANR	2566555	Identifier	upd		2566430	0					
ANR	2566556	Identifier	nbytes		2566430	1					
ANR	2566557	Label	case 3 :	3590:5:135801:135807	2566430	2	True				
ANR	2566558	ExpressionStatement	"memset ( scan [ 2 ] . bytes , 0 , upd -> nbytes )"	3590:14:135810:135845	2566430	3	True				
ANR	2566559	CallExpression	"memset ( scan [ 2 ] . bytes , 0 , upd -> nbytes )"		2566430	0					
ANR	2566560	Callee	memset		2566430	0					
ANR	2566561	Identifier	memset		2566430	0					
ANR	2566562	ArgumentList	scan [ 2 ] . bytes		2566430	1					
ANR	2566563	Argument	scan [ 2 ] . bytes		2566430	0					
ANR	2566564	MemberAccess	scan [ 2 ] . bytes		2566430	0					
ANR	2566565	ArrayIndexing	scan [ 2 ]		2566430	0					
ANR	2566566	Identifier	scan		2566430	0					
ANR	2566567	PrimaryExpression	2		2566430	1					
ANR	2566568	Identifier	bytes		2566430	1					
ANR	2566569	Argument	0		2566430	1					
ANR	2566570	PrimaryExpression	0		2566430	0					
ANR	2566571	Argument	upd -> nbytes		2566430	2					
ANR	2566572	PtrMemberAccess	upd -> nbytes		2566430	0					
ANR	2566573	Identifier	upd		2566430	0					
ANR	2566574	Identifier	nbytes		2566430	1					
ANR	2566575	ExpressionStatement	"memset ( scan [ 1 ] . bytes , 0 , upd -> nbytes )"	3591:14:135861:135896	2566430	4	True				
ANR	2566576	CallExpression	"memset ( scan [ 1 ] . bytes , 0 , upd -> nbytes )"		2566430	0					
ANR	2566577	Callee	memset		2566430	0					
ANR	2566578	Identifier	memset		2566430	0					
ANR	2566579	ArgumentList	scan [ 1 ] . bytes		2566430	1					
ANR	2566580	Argument	scan [ 1 ] . bytes		2566430	0					
ANR	2566581	MemberAccess	scan [ 1 ] . bytes		2566430	0					
ANR	2566582	ArrayIndexing	scan [ 1 ]		2566430	0					
ANR	2566583	Identifier	scan		2566430	0					
ANR	2566584	PrimaryExpression	1		2566430	1					
ANR	2566585	Identifier	bytes		2566430	1					
ANR	2566586	Argument	0		2566430	1					
ANR	2566587	PrimaryExpression	0		2566430	0					
ANR	2566588	Argument	upd -> nbytes		2566430	2					
ANR	2566589	PtrMemberAccess	upd -> nbytes		2566430	0					
ANR	2566590	Identifier	upd		2566430	0					
ANR	2566591	Identifier	nbytes		2566430	1					
ANR	2566592	Label	default :	3593:5:135931:135938	2566430	5	True				
ANR	2566593	Identifier	default		2566430	0					
ANR	2566594	ExpressionStatement	"memset ( scan [ 0 ] . bytes , 0 , upd -> nbytes )"	3593:14:135940:135975	2566430	6	True				
ANR	2566595	CallExpression	"memset ( scan [ 0 ] . bytes , 0 , upd -> nbytes )"		2566430	0					
ANR	2566596	Callee	memset		2566430	0					
ANR	2566597	Identifier	memset		2566430	0					
ANR	2566598	ArgumentList	scan [ 0 ] . bytes		2566430	1					
ANR	2566599	Argument	scan [ 0 ] . bytes		2566430	0					
ANR	2566600	MemberAccess	scan [ 0 ] . bytes		2566430	0					
ANR	2566601	ArrayIndexing	scan [ 0 ]		2566430	0					
ANR	2566602	Identifier	scan		2566430	0					
ANR	2566603	PrimaryExpression	0		2566430	1					
ANR	2566604	Identifier	bytes		2566430	1					
ANR	2566605	Argument	0		2566430	1					
ANR	2566606	PrimaryExpression	0		2566430	0					
ANR	2566607	Argument	upd -> nbytes		2566430	2					
ANR	2566608	PtrMemberAccess	upd -> nbytes		2566430	0					
ANR	2566609	Identifier	upd		2566430	0					
ANR	2566610	Identifier	nbytes		2566430	1					
ANR	2566611	IfStatement	if ( upd -> flags & B_REVDIR )		2566430	18					
ANR	2566612	Condition	upd -> flags & B_REVDIR	3598:6:136022:136044	2566430	0	True				
ANR	2566613	BitAndExpression	upd -> flags & B_REVDIR		2566430	0		&			
ANR	2566614	PtrMemberAccess	upd -> flags		2566430	0					
ANR	2566615	Identifier	upd		2566430	0					
ANR	2566616	Identifier	flags		2566430	1					
ANR	2566617	Identifier	B_REVDIR		2566430	1					
ANR	2566618	CompoundStatement		27:31:854:854	2566430	1					
ANR	2566619	IfStatement	if ( upd -> flags & B_YFLIP )		2566430	0					
ANR	2566620	Condition	upd -> flags & B_YFLIP	3600:9:136082:136101	2566430	0	True				
ANR	2566621	BitAndExpression	upd -> flags & B_YFLIP		2566430	0		&			
ANR	2566622	PtrMemberAccess	upd -> flags		2566430	0					
ANR	2566623	Identifier	upd		2566430	0					
ANR	2566624	Identifier	flags		2566430	1					
ANR	2566625	Identifier	B_YFLIP		2566430	1					
ANR	2566626	CompoundStatement		29:31:911:911	2566430	1					
ANR	2566627	ExpressionStatement	dir = upd -> ncomp	3601:9:136115:136135	2566430	0	True				
ANR	2566628	AssignmentExpression	dir = upd -> ncomp		2566430	0		=			
ANR	2566629	Identifier	dir		2566430	0					
ANR	2566630	PtrMemberAccess	upd -> ncomp		2566430	1					
ANR	2566631	Identifier	upd		2566430	0					
ANR	2566632	Identifier	ncomp		2566430	1					
ANR	2566633	ExpressionStatement	bit = 0x80	3602:9:136146:136160	2566430	1	True				
ANR	2566634	AssignmentExpression	bit = 0x80		2566430	0		=			
ANR	2566635	Identifier	bit		2566430	0					
ANR	2566636	PrimaryExpression	0x80		2566430	1					
ANR	2566637	ExpressionStatement	ibyte = 0	3603:9:136171:136182	2566430	2	True				
ANR	2566638	AssignmentExpression	ibyte = 0		2566430	0		=			
ANR	2566639	Identifier	ibyte		2566430	0					
ANR	2566640	PrimaryExpression	0		2566430	1					
ANR	2566641	ElseStatement	else		2566430	0					
ANR	2566642	CompoundStatement		33:13:1004:1004	2566430	0					
ANR	2566643	ExpressionStatement	dir = - upd -> ncomp	3605:9:136208:136230	2566430	0	True				
ANR	2566644	AssignmentExpression	dir = - upd -> ncomp		2566430	0		=			
ANR	2566645	Identifier	dir		2566430	0					
ANR	2566646	UnaryOperationExpression	- upd -> ncomp		2566430	1					
ANR	2566647	UnaryOperator	-		2566430	0					
ANR	2566648	PtrMemberAccess	upd -> ncomp		2566430	1					
ANR	2566649	Identifier	upd		2566430	0					
ANR	2566650	Identifier	ncomp		2566430	1					
ANR	2566651	ExpressionStatement	rowerr += upd -> ncomp * ( pwidth - 1 )	3606:9:136241:136276	2566430	1	True				
ANR	2566652	AssignmentExpression	rowerr += upd -> ncomp * ( pwidth - 1 )		2566430	0		+=			
ANR	2566653	Identifier	rowerr		2566430	0					
ANR	2566654	MultiplicativeExpression	upd -> ncomp * ( pwidth - 1 )		2566430	1		*			
ANR	2566655	PtrMemberAccess	upd -> ncomp		2566430	0					
ANR	2566656	Identifier	upd		2566430	0					
ANR	2566657	Identifier	ncomp		2566430	1					
ANR	2566658	AdditiveExpression	pwidth - 1		2566430	1		-			
ANR	2566659	Identifier	pwidth		2566430	0					
ANR	2566660	PrimaryExpression	1		2566430	1					
ANR	2566661	ExpressionStatement	bit = 0x80 >> ( ( pwidth - 1 ) & 7 )	3607:9:136287:136327	2566430	2	True				
ANR	2566662	AssignmentExpression	bit = 0x80 >> ( ( pwidth - 1 ) & 7 )		2566430	0		=			
ANR	2566663	Identifier	bit		2566430	0					
ANR	2566664	ShiftExpression	0x80 >> ( ( pwidth - 1 ) & 7 )		2566430	1		>>			
ANR	2566665	PrimaryExpression	0x80		2566430	0					
ANR	2566666	BitAndExpression	( pwidth - 1 ) & 7		2566430	1		&			
ANR	2566667	AdditiveExpression	pwidth - 1		2566430	0		-			
ANR	2566668	Identifier	pwidth		2566430	0					
ANR	2566669	PrimaryExpression	1		2566430	1					
ANR	2566670	PrimaryExpression	7		2566430	1					
ANR	2566671	ExpressionStatement	ibyte = ( pwidth - 1 ) >> 3	3608:9:136338:136378	2566430	3	True				
ANR	2566672	AssignmentExpression	ibyte = ( pwidth - 1 ) >> 3		2566430	0		=			
ANR	2566673	Identifier	ibyte		2566430	0					
ANR	2566674	ShiftExpression	( pwidth - 1 ) >> 3		2566430	1		>>			
ANR	2566675	AdditiveExpression	pwidth - 1		2566430	0		-			
ANR	2566676	Identifier	pwidth		2566430	0					
ANR	2566677	PrimaryExpression	1		2566430	1					
ANR	2566678	PrimaryExpression	3		2566430	1					
ANR	2566679	IfStatement	if ( ! ( upd -> flags & B_FSWHITE ) )		2566430	1					
ANR	2566680	Condition	! ( upd -> flags & B_FSWHITE )	3611:9:136398:136422	2566430	0	True				
ANR	2566681	UnaryOperationExpression	! ( upd -> flags & B_FSWHITE )		2566430	0					
ANR	2566682	UnaryOperator	!		2566430	0					
ANR	2566683	BitAndExpression	upd -> flags & B_FSWHITE		2566430	1		&			
ANR	2566684	PtrMemberAccess	upd -> flags		2566430	0					
ANR	2566685	Identifier	upd		2566430	0					
ANR	2566686	Identifier	flags		2566430	1					
ANR	2566687	Identifier	B_FSWHITE		2566430	1					
ANR	2566688	CompoundStatement		40:36:1232:1232	2566430	1					
ANR	2566689	ExpressionStatement	upd_pxlfwd ( upd )	3612:9:136436:136451	2566430	0	True				
ANR	2566690	CallExpression	upd_pxlfwd ( upd )		2566430	0					
ANR	2566691	Callee	upd_pxlfwd		2566430	0					
ANR	2566692	Identifier	upd_pxlfwd		2566430	0					
ANR	2566693	ArgumentList	upd		2566430	1					
ANR	2566694	Argument	upd		2566430	0					
ANR	2566695	Identifier	upd		2566430	0					
ANR	2566696	WhileStatement	while ( ( 0 < pwidth ) && ! upd_pxlget ( upd ) )		2566430	1					
ANR	2566697	Condition	( 0 < pwidth ) && ! upd_pxlget ( upd )	3613:15:136468:136499	2566430	0	True				
ANR	2566698	AndExpression	( 0 < pwidth ) && ! upd_pxlget ( upd )		2566430	0		&&			
ANR	2566699	RelationalExpression	0 < pwidth		2566430	0		<			
ANR	2566700	PrimaryExpression	0		2566430	0					
ANR	2566701	Identifier	pwidth		2566430	1					
ANR	2566702	UnaryOperationExpression	! upd_pxlget ( upd )		2566430	1					
ANR	2566703	UnaryOperator	!		2566430	0					
ANR	2566704	CallExpression	upd_pxlget ( upd )		2566430	1					
ANR	2566705	Callee	upd_pxlget		2566430	0					
ANR	2566706	Identifier	upd_pxlget		2566430	0					
ANR	2566707	ArgumentList	upd		2566430	1					
ANR	2566708	Argument	upd		2566430	0					
ANR	2566709	Identifier	upd		2566430	0					
ANR	2566710	ExpressionStatement	pwidth --	3613:49:136502:136510	2566430	1	True				
ANR	2566711	PostIncDecOperationExpression	pwidth --		2566430	0					
ANR	2566712	Identifier	pwidth		2566430	0					
ANR	2566713	IncDec	--		2566430	1					
ANR	2566714	ExpressionStatement	upd_pxlrev ( upd )	3616:6:136527:136542	2566430	2	True				
ANR	2566715	CallExpression	upd_pxlrev ( upd )		2566430	0					
ANR	2566716	Callee	upd_pxlrev		2566430	0					
ANR	2566717	Identifier	upd_pxlrev		2566430	0					
ANR	2566718	ArgumentList	upd		2566430	1					
ANR	2566719	Argument	upd		2566430	0					
ANR	2566720	Identifier	upd		2566430	0					
ANR	2566721	ElseStatement	else		2566430	0					
ANR	2566722	CompoundStatement		47:10:1362:1362	2566430	0					
ANR	2566723	IfStatement	if ( upd -> flags & B_YFLIP )		2566430	0					
ANR	2566724	Condition	upd -> flags & B_YFLIP	3620:9:136612:136631	2566430	0	True				
ANR	2566725	BitAndExpression	upd -> flags & B_YFLIP		2566430	0		&			
ANR	2566726	PtrMemberAccess	upd -> flags		2566430	0					
ANR	2566727	Identifier	upd		2566430	0					
ANR	2566728	Identifier	flags		2566430	1					
ANR	2566729	Identifier	B_YFLIP		2566430	1					
ANR	2566730	CompoundStatement		49:31:1441:1441	2566430	1					
ANR	2566731	ExpressionStatement	dir = - upd -> ncomp	3621:9:136645:136667	2566430	0	True				
ANR	2566732	AssignmentExpression	dir = - upd -> ncomp		2566430	0		=			
ANR	2566733	Identifier	dir		2566430	0					
ANR	2566734	UnaryOperationExpression	- upd -> ncomp		2566430	1					
ANR	2566735	UnaryOperator	-		2566430	0					
ANR	2566736	PtrMemberAccess	upd -> ncomp		2566430	1					
ANR	2566737	Identifier	upd		2566430	0					
ANR	2566738	Identifier	ncomp		2566430	1					
ANR	2566739	ExpressionStatement	rowerr += upd -> ncomp * ( pwidth - 1 )	3622:9:136678:136713	2566430	1	True				
ANR	2566740	AssignmentExpression	rowerr += upd -> ncomp * ( pwidth - 1 )		2566430	0		+=			
ANR	2566741	Identifier	rowerr		2566430	0					
ANR	2566742	MultiplicativeExpression	upd -> ncomp * ( pwidth - 1 )		2566430	1		*			
ANR	2566743	PtrMemberAccess	upd -> ncomp		2566430	0					
ANR	2566744	Identifier	upd		2566430	0					
ANR	2566745	Identifier	ncomp		2566430	1					
ANR	2566746	AdditiveExpression	pwidth - 1		2566430	1		-			
ANR	2566747	Identifier	pwidth		2566430	0					
ANR	2566748	PrimaryExpression	1		2566430	1					
ANR	2566749	ExpressionStatement	bit = 0x80 >> ( ( pwidth - 1 ) & 7 )	3623:9:136724:136764	2566430	2	True				
ANR	2566750	AssignmentExpression	bit = 0x80 >> ( ( pwidth - 1 ) & 7 )		2566430	0		=			
ANR	2566751	Identifier	bit		2566430	0					
ANR	2566752	ShiftExpression	0x80 >> ( ( pwidth - 1 ) & 7 )		2566430	1		>>			
ANR	2566753	PrimaryExpression	0x80		2566430	0					
ANR	2566754	BitAndExpression	( pwidth - 1 ) & 7		2566430	1		&			
ANR	2566755	AdditiveExpression	pwidth - 1		2566430	0		-			
ANR	2566756	Identifier	pwidth		2566430	0					
ANR	2566757	PrimaryExpression	1		2566430	1					
ANR	2566758	PrimaryExpression	7		2566430	1					
ANR	2566759	ExpressionStatement	ibyte = ( pwidth - 1 ) >> 3	3624:9:136775:136815	2566430	3	True				
ANR	2566760	AssignmentExpression	ibyte = ( pwidth - 1 ) >> 3		2566430	0		=			
ANR	2566761	Identifier	ibyte		2566430	0					
ANR	2566762	ShiftExpression	( pwidth - 1 ) >> 3		2566430	1		>>			
ANR	2566763	AdditiveExpression	pwidth - 1		2566430	0		-			
ANR	2566764	Identifier	pwidth		2566430	0					
ANR	2566765	PrimaryExpression	1		2566430	1					
ANR	2566766	PrimaryExpression	3		2566430	1					
ANR	2566767	ElseStatement	else		2566430	0					
ANR	2566768	CompoundStatement		54:13:1637:1637	2566430	0					
ANR	2566769	ExpressionStatement	dir = upd -> ncomp	3626:9:136841:136861	2566430	0	True				
ANR	2566770	AssignmentExpression	dir = upd -> ncomp		2566430	0		=			
ANR	2566771	Identifier	dir		2566430	0					
ANR	2566772	PtrMemberAccess	upd -> ncomp		2566430	1					
ANR	2566773	Identifier	upd		2566430	0					
ANR	2566774	Identifier	ncomp		2566430	1					
ANR	2566775	ExpressionStatement	bit = 0x80	3627:9:136872:136886	2566430	1	True				
ANR	2566776	AssignmentExpression	bit = 0x80		2566430	0		=			
ANR	2566777	Identifier	bit		2566430	0					
ANR	2566778	PrimaryExpression	0x80		2566430	1					
ANR	2566779	ExpressionStatement	ibyte = 0	3628:9:136897:136908	2566430	2	True				
ANR	2566780	AssignmentExpression	ibyte = 0		2566430	0		=			
ANR	2566781	Identifier	ibyte		2566430	0					
ANR	2566782	PrimaryExpression	0		2566430	1					
ANR	2566783	IfStatement	if ( ! ( upd -> flags & B_FSWHITE ) )		2566430	1					
ANR	2566784	Condition	! ( upd -> flags & B_FSWHITE )	3631:9:136928:136952	2566430	0	True				
ANR	2566785	UnaryOperationExpression	! ( upd -> flags & B_FSWHITE )		2566430	0					
ANR	2566786	UnaryOperator	!		2566430	0					
ANR	2566787	BitAndExpression	upd -> flags & B_FSWHITE		2566430	1		&			
ANR	2566788	PtrMemberAccess	upd -> flags		2566430	0					
ANR	2566789	Identifier	upd		2566430	0					
ANR	2566790	Identifier	flags		2566430	1					
ANR	2566791	Identifier	B_FSWHITE		2566430	1					
ANR	2566792	CompoundStatement		60:36:1762:1762	2566430	1					
ANR	2566793	ExpressionStatement	upd_pxlrev ( upd )	3632:9:136966:136981	2566430	0	True				
ANR	2566794	CallExpression	upd_pxlrev ( upd )		2566430	0					
ANR	2566795	Callee	upd_pxlrev		2566430	0					
ANR	2566796	Identifier	upd_pxlrev		2566430	0					
ANR	2566797	ArgumentList	upd		2566430	1					
ANR	2566798	Argument	upd		2566430	0					
ANR	2566799	Identifier	upd		2566430	0					
ANR	2566800	WhileStatement	while ( ( 0 < pwidth ) && ! upd_pxlget ( upd ) )		2566430	1					
ANR	2566801	Condition	( 0 < pwidth ) && ! upd_pxlget ( upd )	3633:15:136998:137029	2566430	0	True				
ANR	2566802	AndExpression	( 0 < pwidth ) && ! upd_pxlget ( upd )		2566430	0		&&			
ANR	2566803	RelationalExpression	0 < pwidth		2566430	0		<			
ANR	2566804	PrimaryExpression	0		2566430	0					
ANR	2566805	Identifier	pwidth		2566430	1					
ANR	2566806	UnaryOperationExpression	! upd_pxlget ( upd )		2566430	1					
ANR	2566807	UnaryOperator	!		2566430	0					
ANR	2566808	CallExpression	upd_pxlget ( upd )		2566430	1					
ANR	2566809	Callee	upd_pxlget		2566430	0					
ANR	2566810	Identifier	upd_pxlget		2566430	0					
ANR	2566811	ArgumentList	upd		2566430	1					
ANR	2566812	Argument	upd		2566430	0					
ANR	2566813	Identifier	upd		2566430	0					
ANR	2566814	ExpressionStatement	pwidth --	3633:49:137032:137040	2566430	1	True				
ANR	2566815	PostIncDecOperationExpression	pwidth --		2566430	0					
ANR	2566816	Identifier	pwidth		2566430	0					
ANR	2566817	IncDec	--		2566430	1					
ANR	2566818	ExpressionStatement	upd_pxlfwd ( upd )	3636:6:137057:137072	2566430	2	True				
ANR	2566819	CallExpression	upd_pxlfwd ( upd )		2566430	0					
ANR	2566820	Callee	upd_pxlfwd		2566430	0					
ANR	2566821	Identifier	upd_pxlfwd		2566430	0					
ANR	2566822	ArgumentList	upd		2566430	1					
ANR	2566823	Argument	upd		2566430	0					
ANR	2566824	Identifier	upd		2566430	0					
ANR	2566825	IfStatement	if ( ! ( upd -> flags & B_FIXDIR ) )		2566430	19					
ANR	2566826	Condition	! ( upd -> flags & B_FIXDIR )	3642:6:137181:137204	2566430	0	True				
ANR	2566827	UnaryOperationExpression	! ( upd -> flags & B_FIXDIR )		2566430	0					
ANR	2566828	UnaryOperator	!		2566430	0					
ANR	2566829	BitAndExpression	upd -> flags & B_FIXDIR		2566430	1		&			
ANR	2566830	PtrMemberAccess	upd -> flags		2566430	0					
ANR	2566831	Identifier	upd		2566430	0					
ANR	2566832	Identifier	flags		2566430	1					
ANR	2566833	Identifier	B_FIXDIR		2566430	1					
ANR	2566834	ExpressionStatement	upd -> flags ^= B_REVDIR	3642:32:137207:137229	2566430	1	True				
ANR	2566835	AssignmentExpression	upd -> flags ^= B_REVDIR		2566430	0		^=			
ANR	2566836	PtrMemberAccess	upd -> flags		2566430	0					
ANR	2566837	Identifier	upd		2566430	0					
ANR	2566838	Identifier	flags		2566430	1					
ANR	2566839	Identifier	B_REVDIR		2566430	1					
ANR	2566840	IfStatement	if ( ! ( upd -> flags & B_FSWHITE ) )		2566430	20					
ANR	2566841	Condition	! ( upd -> flags & B_FSWHITE )	3646:6:137277:137301	2566430	0	True				
ANR	2566842	UnaryOperationExpression	! ( upd -> flags & B_FSWHITE )		2566430	0					
ANR	2566843	UnaryOperator	!		2566430	0					
ANR	2566844	BitAndExpression	upd -> flags & B_FSWHITE		2566430	1		&			
ANR	2566845	PtrMemberAccess	upd -> flags		2566430	0					
ANR	2566846	Identifier	upd		2566430	0					
ANR	2566847	Identifier	flags		2566430	1					
ANR	2566848	Identifier	B_FSWHITE		2566430	1					
ANR	2566849	CompoundStatement		77:6:2164:2201	2566430	1					
ANR	2566850	ExpressionStatement	upd_proc_pxlget ( ( * fun ) ) = upd -> pxlget	3647:6:137312:137349	2566430	0	True				
ANR	2566851	AssignmentExpression	upd_proc_pxlget ( ( * fun ) ) = upd -> pxlget		2566430	0		=			
ANR	2566852	CallExpression	upd_proc_pxlget ( ( * fun ) )		2566430	0					
ANR	2566853	Callee	upd_proc_pxlget		2566430	0					
ANR	2566854	Identifier	upd_proc_pxlget		2566430	0					
ANR	2566855	ArgumentList	* fun		2566430	1					
ANR	2566856	Argument	* fun		2566430	0					
ANR	2566857	UnaryOperationExpression	* fun		2566430	0					
ANR	2566858	UnaryOperator	*		2566430	0					
ANR	2566859	Identifier	fun		2566430	1					
ANR	2566860	PtrMemberAccess	upd -> pxlget		2566430	1					
ANR	2566861	Identifier	upd		2566430	0					
ANR	2566862	Identifier	pxlget		2566430	1					
ANR	2566863	IdentifierDeclStatement	byte * ptr = upd -> pxlptr ;	3648:6:137357:137394	2566430	1	True				
ANR	2566864	IdentifierDecl	* ptr = upd -> pxlptr		2566430	0					
ANR	2566865	IdentifierDeclType	byte *		2566430	0					
ANR	2566866	Identifier	ptr		2566430	1					
ANR	2566867	AssignmentExpression	* ptr = upd -> pxlptr		2566430	2		=			
ANR	2566868	Identifier	ptr		2566430	0					
ANR	2566869	PtrMemberAccess	upd -> pxlptr		2566430	1					
ANR	2566870	Identifier	upd		2566430	0					
ANR	2566871	Identifier	pxlptr		2566430	1					
ANR	2566872	WhileStatement	while ( ( 0 < pwidth ) && ! upd_pxlget ( upd ) )		2566430	2					
ANR	2566873	Condition	( 0 < pwidth ) && ! upd_pxlget ( upd )	3649:12:137408:137439	2566430	0	True				
ANR	2566874	AndExpression	( 0 < pwidth ) && ! upd_pxlget ( upd )		2566430	0		&&			
ANR	2566875	RelationalExpression	0 < pwidth		2566430	0		<			
ANR	2566876	PrimaryExpression	0		2566430	0					
ANR	2566877	Identifier	pwidth		2566430	1					
ANR	2566878	UnaryOperationExpression	! upd_pxlget ( upd )		2566430	1					
ANR	2566879	UnaryOperator	!		2566430	0					
ANR	2566880	CallExpression	upd_pxlget ( upd )		2566430	1					
ANR	2566881	Callee	upd_pxlget		2566430	0					
ANR	2566882	Identifier	upd_pxlget		2566430	0					
ANR	2566883	ArgumentList	upd		2566430	1					
ANR	2566884	Argument	upd		2566430	0					
ANR	2566885	Identifier	upd		2566430	0					
ANR	2566886	CompoundStatement		78:46:2249:2249	2566430	1					
ANR	2566887	ExpressionStatement	pwidth --	3650:9:137453:137461	2566430	0	True				
ANR	2566888	PostIncDecOperationExpression	pwidth --		2566430	0					
ANR	2566889	Identifier	pwidth		2566430	0					
ANR	2566890	IncDec	--		2566430	1					
ANR	2566891	ExpressionStatement	fun = upd -> pxlget	3651:9:137472:137489	2566430	1	True				
ANR	2566892	AssignmentExpression	fun = upd -> pxlget		2566430	0		=			
ANR	2566893	Identifier	fun		2566430	0					
ANR	2566894	PtrMemberAccess	upd -> pxlget		2566430	1					
ANR	2566895	Identifier	upd		2566430	0					
ANR	2566896	Identifier	pxlget		2566430	1					
ANR	2566897	ExpressionStatement	ptr = upd -> pxlptr	3652:9:137500:137517	2566430	2	True				
ANR	2566898	AssignmentExpression	ptr = upd -> pxlptr		2566430	0		=			
ANR	2566899	Identifier	ptr		2566430	0					
ANR	2566900	PtrMemberAccess	upd -> pxlptr		2566430	1					
ANR	2566901	Identifier	upd		2566430	0					
ANR	2566902	Identifier	pxlptr		2566430	1					
ANR	2566903	Statement	S_FSTEP	3653:9:137528:137534	2566430	3	True				
ANR	2566904	ExpressionStatement	upd -> pxlget = fun	3655:6:137550:137567	2566430	3	True				
ANR	2566905	AssignmentExpression	upd -> pxlget = fun		2566430	0		=			
ANR	2566906	PtrMemberAccess	upd -> pxlget		2566430	0					
ANR	2566907	Identifier	upd		2566430	0					
ANR	2566908	Identifier	pxlget		2566430	1					
ANR	2566909	Identifier	fun		2566430	1					
ANR	2566910	ExpressionStatement	upd -> pxlptr = ptr	3656:6:137575:137592	2566430	4	True				
ANR	2566911	AssignmentExpression	upd -> pxlptr = ptr		2566430	0		=			
ANR	2566912	PtrMemberAccess	upd -> pxlptr		2566430	0					
ANR	2566913	Identifier	upd		2566430	0					
ANR	2566914	Identifier	pxlptr		2566430	1					
ANR	2566915	Identifier	ptr		2566430	1					
ANR	2566916	ExpressionStatement	iblack = - 1	3661:2:137652:137663	2566430	21	True				
ANR	2566917	AssignmentExpression	iblack = - 1		2566430	0		=			
ANR	2566918	Identifier	iblack		2566430	0					
ANR	2566919	UnaryOperationExpression	- 1		2566430	1					
ANR	2566920	UnaryOperator	-		2566430	0					
ANR	2566921	PrimaryExpression	1		2566430	1					
ANR	2566922	ExpressionStatement	bblack = 0	3662:2:137667:137678	2566430	22	True				
ANR	2566923	AssignmentExpression	bblack = 0		2566430	0		=			
ANR	2566924	Identifier	bblack		2566430	0					
ANR	2566925	PrimaryExpression	0		2566430	1					
ANR	2566926	IfStatement	if ( ( 4 == upd -> ncomp ) && ( B_REDUCEK & upd -> flags ) )		2566430	23					
ANR	2566927	Condition	( 4 == upd -> ncomp ) && ( B_REDUCEK & upd -> flags )	3663:5:137685:137729	2566430	0	True				
ANR	2566928	AndExpression	( 4 == upd -> ncomp ) && ( B_REDUCEK & upd -> flags )		2566430	0		&&			
ANR	2566929	EqualityExpression	4 == upd -> ncomp		2566430	0		==			
ANR	2566930	PrimaryExpression	4		2566430	0					
ANR	2566931	PtrMemberAccess	upd -> ncomp		2566430	1					
ANR	2566932	Identifier	upd		2566430	0					
ANR	2566933	Identifier	ncomp		2566430	1					
ANR	2566934	BitAndExpression	B_REDUCEK & upd -> flags		2566430	1		&			
ANR	2566935	Identifier	B_REDUCEK		2566430	0					
ANR	2566936	PtrMemberAccess	upd -> flags		2566430	1					
ANR	2566937	Identifier	upd		2566430	0					
ANR	2566938	Identifier	flags		2566430	1					
ANR	2566939	CompoundStatement		92:52:2539:2539	2566430	1					
ANR	2566940	ExpressionStatement	iblack = upd -> cmap [ 0 ] . comp	3664:4:137738:137764	2566430	0	True				
ANR	2566941	AssignmentExpression	iblack = upd -> cmap [ 0 ] . comp		2566430	0		=			
ANR	2566942	Identifier	iblack		2566430	0					
ANR	2566943	MemberAccess	upd -> cmap [ 0 ] . comp		2566430	1					
ANR	2566944	ArrayIndexing	upd -> cmap [ 0 ]		2566430	0					
ANR	2566945	PtrMemberAccess	upd -> cmap		2566430	0					
ANR	2566946	Identifier	upd		2566430	0					
ANR	2566947	Identifier	cmap		2566430	1					
ANR	2566948	PrimaryExpression	0		2566430	1					
ANR	2566949	Identifier	comp		2566430	1					
ANR	2566950	ExpressionStatement	bblack = 1 << iblack	3665:4:137770:137788	2566430	1	True				
ANR	2566951	AssignmentExpression	bblack = 1 << iblack		2566430	0		=			
ANR	2566952	Identifier	bblack		2566430	0					
ANR	2566953	ShiftExpression	1 << iblack		2566430	1		<<			
ANR	2566954	PrimaryExpression	1		2566430	0					
ANR	2566955	Identifier	iblack		2566430	1					
ANR	2566956	ExpressionStatement	first = true	3670:3:137826:137838	2566430	24	True				
ANR	2566957	AssignmentExpression	first = true		2566430	0		=			
ANR	2566958	Identifier	first		2566430	0					
ANR	2566959	Identifier	true		2566430	1					
ANR	2566960	WhileStatement	while ( 0 < pwidth -- )		2566430	25					
ANR	2566961	Condition	0 < pwidth --	3671:9:137849:137860	2566430	0	True				
ANR	2566962	RelationalExpression	0 < pwidth --		2566430	0		<			
ANR	2566963	PrimaryExpression	0		2566430	0					
ANR	2566964	PostIncDecOperationExpression	pwidth --		2566430	1					
ANR	2566965	Identifier	pwidth		2566430	0					
ANR	2566966	IncDec	--		2566430	1					
ANR	2566967	CompoundStatement		100:23:2670:2670	2566430	1					
ANR	2566968	ExpressionStatement	pxlset = 0	3675:6:137931:137941	2566430	0	True				
ANR	2566969	AssignmentExpression	pxlset = 0		2566430	0		=			
ANR	2566970	Identifier	pxlset		2566430	0					
ANR	2566971	PrimaryExpression	0		2566430	1					
ANR	2566972	ExpressionStatement	ci = upd_pxlget ( upd )	3676:6:137949:137969	2566430	1	True				
ANR	2566973	AssignmentExpression	ci = upd_pxlget ( upd )		2566430	0		=			
ANR	2566974	Identifier	ci		2566430	0					
ANR	2566975	CallExpression	upd_pxlget ( upd )		2566430	1					
ANR	2566976	Callee	upd_pxlget		2566430	0					
ANR	2566977	Identifier	upd_pxlget		2566430	0					
ANR	2566978	ArgumentList	upd		2566430	1					
ANR	2566979	Argument	upd		2566430	0					
ANR	2566980	Identifier	upd		2566430	0					
ANR	2566981	SwitchStatement	switch ( upd -> ncomp )		2566430	2					
ANR	2566982	Condition	upd -> ncomp	3677:13:137984:137993	2566430	0	True				
ANR	2566983	PtrMemberAccess	upd -> ncomp		2566430	0					
ANR	2566984	Identifier	upd		2566430	0					
ANR	2566985	Identifier	ncomp		2566430	1					
ANR	2566986	CompoundStatement		106:25:2803:2803	2566430	1					
ANR	2566987	Label	case 4 :	3678:9:138007:138013	2566430	0	True				
ANR	2566988	Statement	FS_M_ROWERR	3678:18:138016:138026	2566430	1	True				
ANR	2566989	Statement	(	3678:29:138027:138027	2566430	2	True				
ANR	2566990	Statement	3	3678:30:138028:138028	2566430	3	True				
ANR	2566991	Statement	)	3678:31:138029:138029	2566430	4	True				
ANR	2566992	Statement	FS_GOAL	3679:18:138049:138055	2566430	5	True				
ANR	2566993	Statement	(	3679:25:138056:138056	2566430	6	True				
ANR	2566994	Statement	comp	3679:26:138057:138060	2566430	7	True				
ANR	2566995	Statement	[	3679:30:138061:138061	2566430	8	True				
ANR	2566996	Statement	3	3679:31:138062:138062	2566430	9	True				
ANR	2566997	Statement	]	3679:32:138063:138063	2566430	10	True				
ANR	2566998	Statement	->	3679:33:138064:138065	2566430	11	True				
ANR	2566999	Statement	bitmsk	3679:35:138066:138071	2566430	12	True				
ANR	2567000	Statement	&	3679:42:138073:138073	2566430	13	True				
ANR	2567001	Statement	(	3679:44:138075:138075	2566430	14	True				
ANR	2567002	Statement	ci	3679:45:138076:138077	2566430	15	True				
ANR	2567003	Statement	>>	3679:48:138079:138080	2566430	16	True				
ANR	2567004	Statement	comp	3679:51:138082:138085	2566430	17	True				
ANR	2567005	Statement	[	3679:55:138086:138086	2566430	18	True				
ANR	2567006	Statement	3	3679:56:138087:138087	2566430	19	True				
ANR	2567007	Statement	]	3679:57:138088:138088	2566430	20	True				
ANR	2567008	Statement	->	3679:58:138089:138090	2566430	21	True				
ANR	2567009	Statement	bitshf	3679:60:138091:138096	2566430	22	True				
ANR	2567010	Statement	)	3679:66:138097:138097	2566430	23	True				
ANR	2567011	Statement	","	3679:67:138098:138098	2566430	24	True				
ANR	2567012	Statement	3	3679:68:138099:138099	2566430	25	True				
ANR	2567013	Statement	)	3679:69:138100:138100	2566430	26	True				
ANR	2567014	IfStatement	if ( pixel [ 3 ] > comp [ 3 ] -> threshold )		2566430	27					
ANR	2567015	Condition	pixel [ 3 ] > comp [ 3 ] -> threshold	3680:21:138123:138152	2566430	0	True				
ANR	2567016	RelationalExpression	pixel [ 3 ] > comp [ 3 ] -> threshold		2566430	0		>			
ANR	2567017	ArrayIndexing	pixel [ 3 ]		2566430	0					
ANR	2567018	Identifier	pixel		2566430	0					
ANR	2567019	PrimaryExpression	3		2566430	1					
ANR	2567020	PtrMemberAccess	comp [ 3 ] -> threshold		2566430	1					
ANR	2567021	ArrayIndexing	comp [ 3 ]		2566430	0					
ANR	2567022	Identifier	comp		2566430	0					
ANR	2567023	PrimaryExpression	3		2566430	1					
ANR	2567024	Identifier	threshold		2566430	1					
ANR	2567025	CompoundStatement		109:53:2962:2962	2566430	1					
ANR	2567026	ExpressionStatement	pixel [ 3 ] -= comp [ 3 ] -> spotsize	3681:21:138191:138220	2566430	0	True				
ANR	2567027	AssignmentExpression	pixel [ 3 ] -= comp [ 3 ] -> spotsize		2566430	0		-=			
ANR	2567028	ArrayIndexing	pixel [ 3 ]		2566430	0					
ANR	2567029	Identifier	pixel		2566430	0					
ANR	2567030	PrimaryExpression	3		2566430	1					
ANR	2567031	PtrMemberAccess	comp [ 3 ] -> spotsize		2566430	1					
ANR	2567032	ArrayIndexing	comp [ 3 ]		2566430	0					
ANR	2567033	Identifier	comp		2566430	0					
ANR	2567034	PrimaryExpression	3		2566430	1					
ANR	2567035	Identifier	spotsize		2566430	1					
ANR	2567036	ExpressionStatement	scan [ 3 ] . bytes [ ibyte ] |= bit	3682:22:138244:138271	2566430	1	True				
ANR	2567037	AssignmentExpression	scan [ 3 ] . bytes [ ibyte ] |= bit		2566430	0		|=			
ANR	2567038	ArrayIndexing	scan [ 3 ] . bytes [ ibyte ]		2566430	0					
ANR	2567039	MemberAccess	scan [ 3 ] . bytes		2566430	0					
ANR	2567040	ArrayIndexing	scan [ 3 ]		2566430	0					
ANR	2567041	Identifier	scan		2566430	0					
ANR	2567042	PrimaryExpression	3		2566430	1					
ANR	2567043	Identifier	bytes		2566430	1					
ANR	2567044	Identifier	ibyte		2566430	1					
ANR	2567045	Identifier	bit		2566430	1					
ANR	2567046	ExpressionStatement	pxlset |= 8	3683:22:138295:138307	2566430	2	True				
ANR	2567047	AssignmentExpression	pxlset |= 8		2566430	0		|=			
ANR	2567048	Identifier	pxlset		2566430	0					
ANR	2567049	PrimaryExpression	8		2566430	1					
ANR	2567050	Statement	FS_DIST	3685:18:138395:138401	2566430	28	True				
ANR	2567051	Statement	(	3685:25:138402:138402	2566430	29	True				
ANR	2567052	Statement	3	3685:26:138403:138403	2566430	30	True				
ANR	2567053	Statement	)	3685:27:138404:138404	2566430	31	True				
ANR	2567054	Label	case 3 :	3688:9:138451:138457	2566430	32	True				
ANR	2567055	Statement	FS_M_ROWERR	3688:18:138460:138470	2566430	33	True				
ANR	2567056	Statement	(	3688:29:138471:138471	2566430	34	True				
ANR	2567057	Statement	2	3688:30:138472:138472	2566430	35	True				
ANR	2567058	Statement	)	3688:31:138473:138473	2566430	36	True				
ANR	2567059	Statement	FS_GOAL	3689:18:138493:138499	2566430	37	True				
ANR	2567060	Statement	(	3689:25:138500:138500	2566430	38	True				
ANR	2567061	Statement	comp	3689:26:138501:138504	2566430	39	True				
ANR	2567062	Statement	[	3689:30:138505:138505	2566430	40	True				
ANR	2567063	Statement	2	3689:31:138506:138506	2566430	41	True				
ANR	2567064	Statement	]	3689:32:138507:138507	2566430	42	True				
ANR	2567065	Statement	->	3689:33:138508:138509	2566430	43	True				
ANR	2567066	Statement	bitmsk	3689:35:138510:138515	2566430	44	True				
ANR	2567067	Statement	&	3689:42:138517:138517	2566430	45	True				
ANR	2567068	Statement	(	3689:44:138519:138519	2566430	46	True				
ANR	2567069	Statement	ci	3689:45:138520:138521	2566430	47	True				
ANR	2567070	Statement	>>	3689:48:138523:138524	2566430	48	True				
ANR	2567071	Statement	comp	3689:51:138526:138529	2566430	49	True				
ANR	2567072	Statement	[	3689:55:138530:138530	2566430	50	True				
ANR	2567073	Statement	2	3689:56:138531:138531	2566430	51	True				
ANR	2567074	Statement	]	3689:57:138532:138532	2566430	52	True				
ANR	2567075	Statement	->	3689:58:138533:138534	2566430	53	True				
ANR	2567076	Statement	bitshf	3689:60:138535:138540	2566430	54	True				
ANR	2567077	Statement	)	3689:66:138541:138541	2566430	55	True				
ANR	2567078	Statement	","	3689:67:138542:138542	2566430	56	True				
ANR	2567079	Statement	2	3689:68:138543:138543	2566430	57	True				
ANR	2567080	Statement	)	3689:69:138544:138544	2566430	58	True				
ANR	2567081	IfStatement	if ( pixel [ 2 ] > comp [ 2 ] -> threshold )		2566430	59					
ANR	2567082	Condition	pixel [ 2 ] > comp [ 2 ] -> threshold	3690:21:138567:138596	2566430	0	True				
ANR	2567083	RelationalExpression	pixel [ 2 ] > comp [ 2 ] -> threshold		2566430	0		>			
ANR	2567084	ArrayIndexing	pixel [ 2 ]		2566430	0					
ANR	2567085	Identifier	pixel		2566430	0					
ANR	2567086	PrimaryExpression	2		2566430	1					
ANR	2567087	PtrMemberAccess	comp [ 2 ] -> threshold		2566430	1					
ANR	2567088	ArrayIndexing	comp [ 2 ]		2566430	0					
ANR	2567089	Identifier	comp		2566430	0					
ANR	2567090	PrimaryExpression	2		2566430	1					
ANR	2567091	Identifier	threshold		2566430	1					
ANR	2567092	CompoundStatement		119:53:3406:3406	2566430	1					
ANR	2567093	ExpressionStatement	pixel [ 2 ] -= comp [ 2 ] -> spotsize	3691:21:138635:138664	2566430	0	True				
ANR	2567094	AssignmentExpression	pixel [ 2 ] -= comp [ 2 ] -> spotsize		2566430	0		-=			
ANR	2567095	ArrayIndexing	pixel [ 2 ]		2566430	0					
ANR	2567096	Identifier	pixel		2566430	0					
ANR	2567097	PrimaryExpression	2		2566430	1					
ANR	2567098	PtrMemberAccess	comp [ 2 ] -> spotsize		2566430	1					
ANR	2567099	ArrayIndexing	comp [ 2 ]		2566430	0					
ANR	2567100	Identifier	comp		2566430	0					
ANR	2567101	PrimaryExpression	2		2566430	1					
ANR	2567102	Identifier	spotsize		2566430	1					
ANR	2567103	ExpressionStatement	scan [ 2 ] . bytes [ ibyte ] |= bit	3692:22:138688:138715	2566430	1	True				
ANR	2567104	AssignmentExpression	scan [ 2 ] . bytes [ ibyte ] |= bit		2566430	0		|=			
ANR	2567105	ArrayIndexing	scan [ 2 ] . bytes [ ibyte ]		2566430	0					
ANR	2567106	MemberAccess	scan [ 2 ] . bytes		2566430	0					
ANR	2567107	ArrayIndexing	scan [ 2 ]		2566430	0					
ANR	2567108	Identifier	scan		2566430	0					
ANR	2567109	PrimaryExpression	2		2566430	1					
ANR	2567110	Identifier	bytes		2566430	1					
ANR	2567111	Identifier	ibyte		2566430	1					
ANR	2567112	Identifier	bit		2566430	1					
ANR	2567113	ExpressionStatement	pxlset |= 4	3693:22:138739:138751	2566430	2	True				
ANR	2567114	AssignmentExpression	pxlset |= 4		2566430	0		|=			
ANR	2567115	Identifier	pxlset		2566430	0					
ANR	2567116	PrimaryExpression	4		2566430	1					
ANR	2567117	Statement	FS_DIST	3695:18:138839:138845	2566430	60	True				
ANR	2567118	Statement	(	3695:25:138846:138846	2566430	61	True				
ANR	2567119	Statement	2	3695:26:138847:138847	2566430	62	True				
ANR	2567120	Statement	)	3695:27:138848:138848	2566430	63	True				
ANR	2567121	Statement	FS_M_ROWERR	3697:18:138869:138879	2566430	64	True				
ANR	2567122	Statement	(	3697:29:138880:138880	2566430	65	True				
ANR	2567123	Statement	1	3697:30:138881:138881	2566430	66	True				
ANR	2567124	Statement	)	3697:31:138882:138882	2566430	67	True				
ANR	2567125	Statement	FS_GOAL	3698:18:138902:138908	2566430	68	True				
ANR	2567126	Statement	(	3698:25:138909:138909	2566430	69	True				
ANR	2567127	Statement	comp	3698:26:138910:138913	2566430	70	True				
ANR	2567128	Statement	[	3698:30:138914:138914	2566430	71	True				
ANR	2567129	Statement	1	3698:31:138915:138915	2566430	72	True				
ANR	2567130	Statement	]	3698:32:138916:138916	2566430	73	True				
ANR	2567131	Statement	->	3698:33:138917:138918	2566430	74	True				
ANR	2567132	Statement	bitmsk	3698:35:138919:138924	2566430	75	True				
ANR	2567133	Statement	&	3698:42:138926:138926	2566430	76	True				
ANR	2567134	Statement	(	3698:44:138928:138928	2566430	77	True				
ANR	2567135	Statement	ci	3698:45:138929:138930	2566430	78	True				
ANR	2567136	Statement	>>	3698:48:138932:138933	2566430	79	True				
ANR	2567137	Statement	comp	3698:51:138935:138938	2566430	80	True				
ANR	2567138	Statement	[	3698:55:138939:138939	2566430	81	True				
ANR	2567139	Statement	1	3698:56:138940:138940	2566430	82	True				
ANR	2567140	Statement	]	3698:57:138941:138941	2566430	83	True				
ANR	2567141	Statement	->	3698:58:138942:138943	2566430	84	True				
ANR	2567142	Statement	bitshf	3698:60:138944:138949	2566430	85	True				
ANR	2567143	Statement	)	3698:66:138950:138950	2566430	86	True				
ANR	2567144	Statement	","	3698:67:138951:138951	2566430	87	True				
ANR	2567145	Statement	1	3698:68:138952:138952	2566430	88	True				
ANR	2567146	Statement	)	3698:69:138953:138953	2566430	89	True				
ANR	2567147	IfStatement	if ( pixel [ 1 ] > comp [ 1 ] -> threshold )		2566430	90					
ANR	2567148	Condition	pixel [ 1 ] > comp [ 1 ] -> threshold	3699:21:138976:139005	2566430	0	True				
ANR	2567149	RelationalExpression	pixel [ 1 ] > comp [ 1 ] -> threshold		2566430	0		>			
ANR	2567150	ArrayIndexing	pixel [ 1 ]		2566430	0					
ANR	2567151	Identifier	pixel		2566430	0					
ANR	2567152	PrimaryExpression	1		2566430	1					
ANR	2567153	PtrMemberAccess	comp [ 1 ] -> threshold		2566430	1					
ANR	2567154	ArrayIndexing	comp [ 1 ]		2566430	0					
ANR	2567155	Identifier	comp		2566430	0					
ANR	2567156	PrimaryExpression	1		2566430	1					
ANR	2567157	Identifier	threshold		2566430	1					
ANR	2567158	CompoundStatement		128:53:3815:3815	2566430	1					
ANR	2567159	ExpressionStatement	pixel [ 1 ] -= comp [ 1 ] -> spotsize	3700:21:139044:139073	2566430	0	True				
ANR	2567160	AssignmentExpression	pixel [ 1 ] -= comp [ 1 ] -> spotsize		2566430	0		-=			
ANR	2567161	ArrayIndexing	pixel [ 1 ]		2566430	0					
ANR	2567162	Identifier	pixel		2566430	0					
ANR	2567163	PrimaryExpression	1		2566430	1					
ANR	2567164	PtrMemberAccess	comp [ 1 ] -> spotsize		2566430	1					
ANR	2567165	ArrayIndexing	comp [ 1 ]		2566430	0					
ANR	2567166	Identifier	comp		2566430	0					
ANR	2567167	PrimaryExpression	1		2566430	1					
ANR	2567168	Identifier	spotsize		2566430	1					
ANR	2567169	ExpressionStatement	scan [ 1 ] . bytes [ ibyte ] |= bit	3701:22:139097:139124	2566430	1	True				
ANR	2567170	AssignmentExpression	scan [ 1 ] . bytes [ ibyte ] |= bit		2566430	0		|=			
ANR	2567171	ArrayIndexing	scan [ 1 ] . bytes [ ibyte ]		2566430	0					
ANR	2567172	MemberAccess	scan [ 1 ] . bytes		2566430	0					
ANR	2567173	ArrayIndexing	scan [ 1 ]		2566430	0					
ANR	2567174	Identifier	scan		2566430	0					
ANR	2567175	PrimaryExpression	1		2566430	1					
ANR	2567176	Identifier	bytes		2566430	1					
ANR	2567177	Identifier	ibyte		2566430	1					
ANR	2567178	Identifier	bit		2566430	1					
ANR	2567179	ExpressionStatement	pxlset |= 2	3702:22:139148:139160	2566430	2	True				
ANR	2567180	AssignmentExpression	pxlset |= 2		2566430	0		|=			
ANR	2567181	Identifier	pxlset		2566430	0					
ANR	2567182	PrimaryExpression	2		2566430	1					
ANR	2567183	Statement	FS_DIST	3704:18:139248:139254	2566430	91	True				
ANR	2567184	Statement	(	3704:25:139255:139255	2566430	92	True				
ANR	2567185	Statement	1	3704:26:139256:139256	2566430	93	True				
ANR	2567186	Statement	)	3704:27:139257:139257	2566430	94	True				
ANR	2567187	Label	default :	3707:9:139304:139311	2566430	95	True				
ANR	2567188	Identifier	default		2566430	0					
ANR	2567189	Statement	FS_M_ROWERR	3707:18:139313:139323	2566430	96	True				
ANR	2567190	Statement	(	3707:29:139324:139324	2566430	97	True				
ANR	2567191	Statement	0	3707:30:139325:139325	2566430	98	True				
ANR	2567192	Statement	)	3707:31:139326:139326	2566430	99	True				
ANR	2567193	Statement	FS_GOAL	3708:18:139346:139352	2566430	100	True				
ANR	2567194	Statement	(	3708:25:139353:139353	2566430	101	True				
ANR	2567195	Statement	comp	3708:26:139354:139357	2566430	102	True				
ANR	2567196	Statement	[	3708:30:139358:139358	2566430	103	True				
ANR	2567197	Statement	0	3708:31:139359:139359	2566430	104	True				
ANR	2567198	Statement	]	3708:32:139360:139360	2566430	105	True				
ANR	2567199	Statement	->	3708:33:139361:139362	2566430	106	True				
ANR	2567200	Statement	bitmsk	3708:35:139363:139368	2566430	107	True				
ANR	2567201	Statement	&	3708:42:139370:139370	2566430	108	True				
ANR	2567202	Statement	(	3708:44:139372:139372	2566430	109	True				
ANR	2567203	Statement	ci	3708:45:139373:139374	2566430	110	True				
ANR	2567204	Statement	>>	3708:48:139376:139377	2566430	111	True				
ANR	2567205	Statement	comp	3708:51:139379:139382	2566430	112	True				
ANR	2567206	Statement	[	3708:55:139383:139383	2566430	113	True				
ANR	2567207	Statement	0	3708:56:139384:139384	2566430	114	True				
ANR	2567208	Statement	]	3708:57:139385:139385	2566430	115	True				
ANR	2567209	Statement	->	3708:58:139386:139387	2566430	116	True				
ANR	2567210	Statement	bitshf	3708:60:139388:139393	2566430	117	True				
ANR	2567211	Statement	)	3708:66:139394:139394	2566430	118	True				
ANR	2567212	Statement	","	3708:67:139395:139395	2566430	119	True				
ANR	2567213	Statement	0	3708:68:139396:139396	2566430	120	True				
ANR	2567214	Statement	)	3708:69:139397:139397	2566430	121	True				
ANR	2567215	IfStatement	if ( pixel [ 0 ] > comp [ 0 ] -> threshold )		2566430	122					
ANR	2567216	Condition	pixel [ 0 ] > comp [ 0 ] -> threshold	3709:21:139420:139449	2566430	0	True				
ANR	2567217	RelationalExpression	pixel [ 0 ] > comp [ 0 ] -> threshold		2566430	0		>			
ANR	2567218	ArrayIndexing	pixel [ 0 ]		2566430	0					
ANR	2567219	Identifier	pixel		2566430	0					
ANR	2567220	PrimaryExpression	0		2566430	1					
ANR	2567221	PtrMemberAccess	comp [ 0 ] -> threshold		2566430	1					
ANR	2567222	ArrayIndexing	comp [ 0 ]		2566430	0					
ANR	2567223	Identifier	comp		2566430	0					
ANR	2567224	PrimaryExpression	0		2566430	1					
ANR	2567225	Identifier	threshold		2566430	1					
ANR	2567226	CompoundStatement		138:53:4259:4259	2566430	1					
ANR	2567227	ExpressionStatement	pixel [ 0 ] -= comp [ 0 ] -> spotsize	3710:21:139488:139517	2566430	0	True				
ANR	2567228	AssignmentExpression	pixel [ 0 ] -= comp [ 0 ] -> spotsize		2566430	0		-=			
ANR	2567229	ArrayIndexing	pixel [ 0 ]		2566430	0					
ANR	2567230	Identifier	pixel		2566430	0					
ANR	2567231	PrimaryExpression	0		2566430	1					
ANR	2567232	PtrMemberAccess	comp [ 0 ] -> spotsize		2566430	1					
ANR	2567233	ArrayIndexing	comp [ 0 ]		2566430	0					
ANR	2567234	Identifier	comp		2566430	0					
ANR	2567235	PrimaryExpression	0		2566430	1					
ANR	2567236	Identifier	spotsize		2566430	1					
ANR	2567237	ExpressionStatement	scan [ 0 ] . bytes [ ibyte ] |= bit	3711:22:139541:139568	2566430	1	True				
ANR	2567238	AssignmentExpression	scan [ 0 ] . bytes [ ibyte ] |= bit		2566430	0		|=			
ANR	2567239	ArrayIndexing	scan [ 0 ] . bytes [ ibyte ]		2566430	0					
ANR	2567240	MemberAccess	scan [ 0 ] . bytes		2566430	0					
ANR	2567241	ArrayIndexing	scan [ 0 ]		2566430	0					
ANR	2567242	Identifier	scan		2566430	0					
ANR	2567243	PrimaryExpression	0		2566430	1					
ANR	2567244	Identifier	bytes		2566430	1					
ANR	2567245	Identifier	ibyte		2566430	1					
ANR	2567246	Identifier	bit		2566430	1					
ANR	2567247	ExpressionStatement	pxlset |= 1	3712:22:139592:139604	2566430	2	True				
ANR	2567248	AssignmentExpression	pxlset |= 1		2566430	0		|=			
ANR	2567249	Identifier	pxlset		2566430	0					
ANR	2567250	PrimaryExpression	1		2566430	1					
ANR	2567251	Statement	FS_DIST	3714:18:139692:139698	2566430	123	True				
ANR	2567252	Statement	(	3714:25:139699:139699	2566430	124	True				
ANR	2567253	Statement	0	3714:26:139700:139700	2566430	125	True				
ANR	2567254	Statement	)	3714:27:139701:139701	2566430	126	True				
ANR	2567255	IfStatement	if ( bblack )		2566430	3					
ANR	2567256	Condition	bblack	3719:9:139749:139754	2566430	0	True				
ANR	2567257	Identifier	bblack		2566430	0					
ANR	2567258	CompoundStatement		148:17:4564:4564	2566430	1					
ANR	2567259	IfStatement	if ( pxlset & bblack )		2566430	0					
ANR	2567260	Condition	pxlset & bblack	3720:11:139770:139784	2566430	0	True				
ANR	2567261	BitAndExpression	pxlset & bblack		2566430	0		&			
ANR	2567262	Identifier	pxlset		2566430	0					
ANR	2567263	Identifier	bblack		2566430	1					
ANR	2567264	ExpressionStatement	pxlset |= 15	3720:28:139787:139799	2566430	1	True				
ANR	2567265	AssignmentExpression	pxlset |= 15		2566430	0		|=			
ANR	2567266	Identifier	pxlset		2566430	0					
ANR	2567267	PrimaryExpression	15		2566430	1					
ANR	2567268	SwitchStatement	switch ( pxlset )		2566430	1					
ANR	2567269	Condition	pxlset	3721:15:139816:139821	2566430	0	True				
ANR	2567270	Identifier	pxlset		2566430	0					
ANR	2567271	CompoundStatement		150:23:4631:4631	2566430	1					
ANR	2567272	Label	case 0 :	3722:10:139836:139843	2566430	0	True				
ANR	2567273	Label	case 1 :	3723:10:139855:139862	2566430	1	True				
ANR	2567274	Label	case 2 :	3724:10:139874:139881	2566430	2	True				
ANR	2567275	Label	case 4 :	3725:10:139893:139900	2566430	3	True				
ANR	2567276	Label	case 8 :	3726:10:139912:139919	2566430	4	True				
ANR	2567277	Label	case 3 :	3727:10:139931:139938	2566430	5	True				
ANR	2567278	Label	case 5 :	3728:10:139950:139957	2566430	6	True				
ANR	2567279	Label	case 9 :	3729:10:139969:139976	2566430	7	True				
ANR	2567280	Label	case 6 :	3730:10:139988:139995	2566430	8	True				
ANR	2567281	Label	case 10 :	3731:10:140007:140014	2566430	9	True				
ANR	2567282	Label	case 12 :	3732:10:140026:140033	2566430	10	True				
ANR	2567283	BreakStatement	break ;	3733:12:140047:140052	2566430	11	True				
ANR	2567284	Label	default :	3734:10:140064:140071	2566430	12	True				
ANR	2567285	Identifier	default		2566430	0					
ANR	2567286	ExpressionStatement	scan [ 0 ] . bytes [ ibyte ] &= ~bit	3735:12:140085:140118	2566430	13	True				
ANR	2567287	AssignmentExpression	scan [ 0 ] . bytes [ ibyte ] &= ~bit		2566430	0		&=			
ANR	2567288	ArrayIndexing	scan [ 0 ] . bytes [ ibyte ]		2566430	0					
ANR	2567289	MemberAccess	scan [ 0 ] . bytes		2566430	0					
ANR	2567290	ArrayIndexing	scan [ 0 ]		2566430	0					
ANR	2567291	Identifier	scan		2566430	0					
ANR	2567292	PrimaryExpression	0		2566430	1					
ANR	2567293	Identifier	bytes		2566430	1					
ANR	2567294	Identifier	ibyte		2566430	1					
ANR	2567295	Identifier	~bit		2566430	1					
ANR	2567296	ExpressionStatement	scan [ 1 ] . bytes [ ibyte ] &= ~bit	3736:12:140132:140165	2566430	14	True				
ANR	2567297	AssignmentExpression	scan [ 1 ] . bytes [ ibyte ] &= ~bit		2566430	0		&=			
ANR	2567298	ArrayIndexing	scan [ 1 ] . bytes [ ibyte ]		2566430	0					
ANR	2567299	MemberAccess	scan [ 1 ] . bytes		2566430	0					
ANR	2567300	ArrayIndexing	scan [ 1 ]		2566430	0					
ANR	2567301	Identifier	scan		2566430	0					
ANR	2567302	PrimaryExpression	1		2566430	1					
ANR	2567303	Identifier	bytes		2566430	1					
ANR	2567304	Identifier	ibyte		2566430	1					
ANR	2567305	Identifier	~bit		2566430	1					
ANR	2567306	ExpressionStatement	scan [ 2 ] . bytes [ ibyte ] &= ~bit	3737:12:140179:140212	2566430	15	True				
ANR	2567307	AssignmentExpression	scan [ 2 ] . bytes [ ibyte ] &= ~bit		2566430	0		&=			
ANR	2567308	ArrayIndexing	scan [ 2 ] . bytes [ ibyte ]		2566430	0					
ANR	2567309	MemberAccess	scan [ 2 ] . bytes		2566430	0					
ANR	2567310	ArrayIndexing	scan [ 2 ]		2566430	0					
ANR	2567311	Identifier	scan		2566430	0					
ANR	2567312	PrimaryExpression	2		2566430	1					
ANR	2567313	Identifier	bytes		2566430	1					
ANR	2567314	Identifier	ibyte		2566430	1					
ANR	2567315	Identifier	~bit		2566430	1					
ANR	2567316	ExpressionStatement	scan [ 3 ] . bytes [ ibyte ] &= ~bit	3738:12:140226:140259	2566430	16	True				
ANR	2567317	AssignmentExpression	scan [ 3 ] . bytes [ ibyte ] &= ~bit		2566430	0		&=			
ANR	2567318	ArrayIndexing	scan [ 3 ] . bytes [ ibyte ]		2566430	0					
ANR	2567319	MemberAccess	scan [ 3 ] . bytes		2566430	0					
ANR	2567320	ArrayIndexing	scan [ 3 ]		2566430	0					
ANR	2567321	Identifier	scan		2566430	0					
ANR	2567322	PrimaryExpression	3		2566430	1					
ANR	2567323	Identifier	bytes		2566430	1					
ANR	2567324	Identifier	ibyte		2566430	1					
ANR	2567325	Identifier	~bit		2566430	1					
ANR	2567326	ExpressionStatement	scan [ iblack ] . bytes [ ibyte ] |= bit	3739:12:140273:140306	2566430	17	True				
ANR	2567327	AssignmentExpression	scan [ iblack ] . bytes [ ibyte ] |= bit		2566430	0		|=			
ANR	2567328	ArrayIndexing	scan [ iblack ] . bytes [ ibyte ]		2566430	0					
ANR	2567329	MemberAccess	scan [ iblack ] . bytes		2566430	0					
ANR	2567330	ArrayIndexing	scan [ iblack ]		2566430	0					
ANR	2567331	Identifier	scan		2566430	0					
ANR	2567332	Identifier	iblack		2566430	1					
ANR	2567333	Identifier	bytes		2566430	1					
ANR	2567334	Identifier	ibyte		2566430	1					
ANR	2567335	Identifier	bit		2566430	1					
ANR	2567336	BreakStatement	break ;	3740:10:140318:140323	2566430	18	True				
ANR	2567337	Statement	S_FSTEP	3746:6:140413:140419	2566430	4	True				
ANR	2567338	IfStatement	if ( 0 < upd -> nlimits )		2566430	26					
ANR	2567339	Condition	0 < upd -> nlimits	3751:6:140474:140489	2566430	0	True				
ANR	2567340	RelationalExpression	0 < upd -> nlimits		2566430	0		<			
ANR	2567341	PrimaryExpression	0		2566430	0					
ANR	2567342	PtrMemberAccess	upd -> nlimits		2566430	1					
ANR	2567343	Identifier	upd		2566430	0					
ANR	2567344	Identifier	nlimits		2566430	1					
ANR	2567345	ExpressionStatement	"upd_limits ( upd , true )"	3751:24:140492:140512	2566430	1	True				
ANR	2567346	CallExpression	"upd_limits ( upd , true )"		2566430	0					
ANR	2567347	Callee	upd_limits		2566430	0					
ANR	2567348	Identifier	upd_limits		2566430	0					
ANR	2567349	ArgumentList	upd		2566430	1					
ANR	2567350	Argument	upd		2566430	0					
ANR	2567351	Identifier	upd		2566430	0					
ANR	2567352	Argument	true		2566430	1					
ANR	2567353	Identifier	true		2566430	0					
ANR	2567354	ReturnStatement	return 0 ;	3752:3:140517:140525	2566430	27	True				
ANR	2567355	PrimaryExpression	0		2566430	0					
ANR	2567356	ReturnType	static int		2566430	1					
ANR	2567357	Identifier	upd_fscomp		2566430	2					
ANR	2567358	ParameterList	upd_p upd		2566430	3					
ANR	2567359	Parameter	upd_p upd	3571:11:135181:135189	2566430	0	True				
ANR	2567360	ParameterType	upd_p		2566430	0					
ANR	2567361	Identifier	upd		2566430	1					
ANR	2567362	CFGEntryNode	ENTRY		2566430		True				
ANR	2567363	CFGExitNode	EXIT		2566430		True				
ANR	2567364	Symbol	comp [ 0 ] -> threshold		2566430						
ANR	2567365	Symbol	ibyte		2566430						
ANR	2567366	Symbol	pwidth		2566430						
ANR	2567367	Symbol	scan [ 1 ] . bytes		2566430						
ANR	2567368	Symbol	dir		2566430						
ANR	2567369	Symbol	bit		2566430						
ANR	2567370	Symbol	comp [ 3 ] -> spotsize		2566430						
ANR	2567371	Symbol	bblack		2566430						
ANR	2567372	Symbol	upd -> cmap		2566430						
ANR	2567373	Symbol	scan [ iblack ] . bytes		2566430						
ANR	2567374	Symbol	upd -> rwidth		2566430						
ANR	2567375	Symbol	upd -> valbuf		2566430						
ANR	2567376	Symbol	* iblack		2566430						
ANR	2567377	Symbol	upd -> nlimits		2566430						
ANR	2567378	Symbol	pxlset		2566430						
ANR	2567379	Symbol	rowerr		2566430						
ANR	2567380	Symbol	* scan		2566430						
ANR	2567381	Symbol	scan [ 2 ] . bytes		2566430						
ANR	2567382	Symbol	comp [ 3 ] -> threshold		2566430						
ANR	2567383	Symbol	upd_pxlget		2566430						
ANR	2567384	Symbol	upd -> nbytes		2566430						
ANR	2567385	Symbol	* scan [ 0 ] . bytes		2566430						
ANR	2567386	Symbol	upd -> valptr		2566430						
ANR	2567387	Symbol	comp		2566430						
ANR	2567388	Symbol	* upd -> scnbuf		2566430						
ANR	2567389	Symbol	comp [ 2 ] -> threshold		2566430						
ANR	2567390	Symbol	comp [ 0 ] -> spotsize		2566430						
ANR	2567391	Symbol	upd		2566430						
ANR	2567392	Symbol	* pixel		2566430						
ANR	2567393	Symbol	* ibyte		2566430						
ANR	2567394	Symbol	* * comp		2566430						
ANR	2567395	Symbol	upd_proc_pxlget		2566430						
ANR	2567396	Symbol	* upd -> yscnbuf		2566430						
ANR	2567397	Symbol	comp [ 1 ] -> threshold		2566430						
ANR	2567398	Symbol	upd -> yscnbuf		2566430						
ANR	2567399	Symbol	* * scan		2566430						
ANR	2567400	Symbol	* * iblack		2566430						
ANR	2567401	Symbol	true		2566430						
ANR	2567402	Symbol	* scan [ 1 ] . bytes		2566430						
ANR	2567403	Symbol	B_REDUCEK		2566430						
ANR	2567404	Symbol	upd -> pxlptr		2566430						
ANR	2567405	Symbol	comp [ 1 ] -> spotsize		2566430						
ANR	2567406	Symbol	* scan [ 2 ] . bytes		2566430						
ANR	2567407	Symbol	scan		2566430						
ANR	2567408	Symbol	* upd -> cmap		2566430						
ANR	2567409	Symbol	upd -> ncomp		2566430						
ANR	2567410	Symbol	upd -> flags		2566430						
ANR	2567411	Symbol	* upd		2566430						
ANR	2567412	Symbol	* fun		2566430						
ANR	2567413	Symbol	* comp		2566430						
ANR	2567414	Symbol	* upd -> scnmsk		2566430						
ANR	2567415	Symbol	colerr		2566430						
ANR	2567416	Symbol	pixel		2566430						
ANR	2567417	Symbol	* scan [ 3 ] . bytes		2566430						
ANR	2567418	Symbol	* scan [ iblack ] . bytes		2566430						
ANR	2567419	Symbol	upd -> scnmsk		2566430						
ANR	2567420	Symbol	ci		2566430						
ANR	2567421	Symbol	upd -> pxlget		2566430						
ANR	2567422	Symbol	B_FSWHITE		2566430						
ANR	2567423	Symbol	B_FIXDIR		2566430						
ANR	2567424	Symbol	upd -> cmap [ 0 ] . comp		2566430						
ANR	2567425	Symbol	comp [ 2 ] -> spotsize		2566430						
ANR	2567426	Symbol	scan [ 0 ] . bytes		2566430						
ANR	2567427	Symbol	ptr		2566430						
ANR	2567428	Symbol	iblack		2566430						
ANR	2567429	Symbol	upd -> scnbuf		2566430						
ANR	2567430	Symbol	~bit		2566430						
ANR	2567431	Symbol	B_YFLIP		2566430						
ANR	2567432	Symbol	B_REVDIR		2566430						
ANR	2567433	Symbol	* * upd		2566430						
ANR	2567434	Symbol	first		2566430						
ANR	2567435	Symbol	fun		2566430						
ANR	2567436	Symbol	scan [ 3 ] . bytes		2566430						
ANR	2567437	Function	upd_open_fscmyk	3759:0:140753:141265							
ANR	2567438	FunctionDef	upd_open_fscmyk (upd_device * udev)		2567437	0					
ANR	2567439	CompoundStatement		3761:0:140799:141265	2567437	0					
ANR	2567440	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	3762:3:140804:140831	2567437	0	True				
ANR	2567441	IdentifierDecl	upd = udev -> upd		2567437	0					
ANR	2567442	IdentifierDeclType	const upd_p		2567437	0					
ANR	2567443	Identifier	upd		2567437	1					
ANR	2567444	AssignmentExpression	upd = udev -> upd		2567437	2		=			
ANR	2567445	Identifier	upd		2567437	0					
ANR	2567446	PtrMemberAccess	udev -> upd		2567437	1					
ANR	2567447	Identifier	udev		2567437	0					
ANR	2567448	Identifier	upd		2567437	1					
ANR	2567449	ExpressionStatement	upd_open_fscomp ( udev )	3764:3:140837:140858	2567437	1	True				
ANR	2567450	CallExpression	upd_open_fscomp ( udev )		2567437	0					
ANR	2567451	Callee	upd_open_fscomp		2567437	0					
ANR	2567452	Identifier	upd_open_fscomp		2567437	0					
ANR	2567453	ArgumentList	udev		2567437	1					
ANR	2567454	Argument	udev		2567437	0					
ANR	2567455	Identifier	udev		2567437	0					
ANR	2567456	IfStatement	if ( ( B_RENDER & upd -> flags ) && ( 4 == upd -> ncomp ) && ( 8 <= upd -> cmap [ 0 ] . bits ) && ( 24 == upd -> cmap [ 0 ] . bitshf ) && ( 8 <= upd -> cmap [ 1 ] . bits ) && ( 16 == upd -> cmap [ 1 ] . bitshf ) && ( 8 <= upd -> cmap [ 2 ] . bits ) && ( 8 == upd -> cmap [ 2 ] . bitshf ) && ( 8 <= upd -> cmap [ 3 ] . bits ) && ( 0 == upd -> cmap [ 3 ] . bitshf ) )		2567437	2					
ANR	2567457	Condition	( B_RENDER & upd -> flags ) && ( 4 == upd -> ncomp ) && ( 8 <= upd -> cmap [ 0 ] . bits ) && ( 24 == upd -> cmap [ 0 ] . bitshf ) && ( 8 <= upd -> cmap [ 1 ] . bits ) && ( 16 == upd -> cmap [ 1 ] . bitshf ) && ( 8 <= upd -> cmap [ 2 ] . bits ) && ( 8 == upd -> cmap [ 2 ] . bitshf ) && ( 8 <= upd -> cmap [ 3 ] . bits ) && ( 0 == upd -> cmap [ 3 ] . bitshf )	3766:6:140867:141176	2567437	0	True				
ANR	2567458	AndExpression	( B_RENDER & upd -> flags ) && ( 4 == upd -> ncomp ) && ( 8 <= upd -> cmap [ 0 ] . bits ) && ( 24 == upd -> cmap [ 0 ] . bitshf ) && ( 8 <= upd -> cmap [ 1 ] . bits ) && ( 16 == upd -> cmap [ 1 ] . bitshf ) && ( 8 <= upd -> cmap [ 2 ] . bits ) && ( 8 == upd -> cmap [ 2 ] . bitshf ) && ( 8 <= upd -> cmap [ 3 ] . bits ) && ( 0 == upd -> cmap [ 3 ] . bitshf )		2567437	0		&&			
ANR	2567459	BitAndExpression	B_RENDER & upd -> flags		2567437	0		&			
ANR	2567460	Identifier	B_RENDER		2567437	0					
ANR	2567461	PtrMemberAccess	upd -> flags		2567437	1					
ANR	2567462	Identifier	upd		2567437	0					
ANR	2567463	Identifier	flags		2567437	1					
ANR	2567464	AndExpression	( 4 == upd -> ncomp ) && ( 8 <= upd -> cmap [ 0 ] . bits ) && ( 24 == upd -> cmap [ 0 ] . bitshf ) && ( 8 <= upd -> cmap [ 1 ] . bits ) && ( 16 == upd -> cmap [ 1 ] . bitshf ) && ( 8 <= upd -> cmap [ 2 ] . bits ) && ( 8 == upd -> cmap [ 2 ] . bitshf ) && ( 8 <= upd -> cmap [ 3 ] . bits ) && ( 0 == upd -> cmap [ 3 ] . bitshf )		2567437	1		&&			
ANR	2567465	EqualityExpression	4 == upd -> ncomp		2567437	0		==			
ANR	2567466	PrimaryExpression	4		2567437	0					
ANR	2567467	PtrMemberAccess	upd -> ncomp		2567437	1					
ANR	2567468	Identifier	upd		2567437	0					
ANR	2567469	Identifier	ncomp		2567437	1					
ANR	2567470	AndExpression	( 8 <= upd -> cmap [ 0 ] . bits ) && ( 24 == upd -> cmap [ 0 ] . bitshf ) && ( 8 <= upd -> cmap [ 1 ] . bits ) && ( 16 == upd -> cmap [ 1 ] . bitshf ) && ( 8 <= upd -> cmap [ 2 ] . bits ) && ( 8 == upd -> cmap [ 2 ] . bitshf ) && ( 8 <= upd -> cmap [ 3 ] . bits ) && ( 0 == upd -> cmap [ 3 ] . bitshf )		2567437	1		&&			
ANR	2567471	RelationalExpression	8 <= upd -> cmap [ 0 ] . bits		2567437	0		<=			
ANR	2567472	PrimaryExpression	8		2567437	0					
ANR	2567473	MemberAccess	upd -> cmap [ 0 ] . bits		2567437	1					
ANR	2567474	ArrayIndexing	upd -> cmap [ 0 ]		2567437	0					
ANR	2567475	PtrMemberAccess	upd -> cmap		2567437	0					
ANR	2567476	Identifier	upd		2567437	0					
ANR	2567477	Identifier	cmap		2567437	1					
ANR	2567478	PrimaryExpression	0		2567437	1					
ANR	2567479	Identifier	bits		2567437	1					
ANR	2567480	AndExpression	( 24 == upd -> cmap [ 0 ] . bitshf ) && ( 8 <= upd -> cmap [ 1 ] . bits ) && ( 16 == upd -> cmap [ 1 ] . bitshf ) && ( 8 <= upd -> cmap [ 2 ] . bits ) && ( 8 == upd -> cmap [ 2 ] . bitshf ) && ( 8 <= upd -> cmap [ 3 ] . bits ) && ( 0 == upd -> cmap [ 3 ] . bitshf )		2567437	1		&&			
ANR	2567481	EqualityExpression	24 == upd -> cmap [ 0 ] . bitshf		2567437	0		==			
ANR	2567482	PrimaryExpression	24		2567437	0					
ANR	2567483	MemberAccess	upd -> cmap [ 0 ] . bitshf		2567437	1					
ANR	2567484	ArrayIndexing	upd -> cmap [ 0 ]		2567437	0					
ANR	2567485	PtrMemberAccess	upd -> cmap		2567437	0					
ANR	2567486	Identifier	upd		2567437	0					
ANR	2567487	Identifier	cmap		2567437	1					
ANR	2567488	PrimaryExpression	0		2567437	1					
ANR	2567489	Identifier	bitshf		2567437	1					
ANR	2567490	AndExpression	( 8 <= upd -> cmap [ 1 ] . bits ) && ( 16 == upd -> cmap [ 1 ] . bitshf ) && ( 8 <= upd -> cmap [ 2 ] . bits ) && ( 8 == upd -> cmap [ 2 ] . bitshf ) && ( 8 <= upd -> cmap [ 3 ] . bits ) && ( 0 == upd -> cmap [ 3 ] . bitshf )		2567437	1		&&			
ANR	2567491	RelationalExpression	8 <= upd -> cmap [ 1 ] . bits		2567437	0		<=			
ANR	2567492	PrimaryExpression	8		2567437	0					
ANR	2567493	MemberAccess	upd -> cmap [ 1 ] . bits		2567437	1					
ANR	2567494	ArrayIndexing	upd -> cmap [ 1 ]		2567437	0					
ANR	2567495	PtrMemberAccess	upd -> cmap		2567437	0					
ANR	2567496	Identifier	upd		2567437	0					
ANR	2567497	Identifier	cmap		2567437	1					
ANR	2567498	PrimaryExpression	1		2567437	1					
ANR	2567499	Identifier	bits		2567437	1					
ANR	2567500	AndExpression	( 16 == upd -> cmap [ 1 ] . bitshf ) && ( 8 <= upd -> cmap [ 2 ] . bits ) && ( 8 == upd -> cmap [ 2 ] . bitshf ) && ( 8 <= upd -> cmap [ 3 ] . bits ) && ( 0 == upd -> cmap [ 3 ] . bitshf )		2567437	1		&&			
ANR	2567501	EqualityExpression	16 == upd -> cmap [ 1 ] . bitshf		2567437	0		==			
ANR	2567502	PrimaryExpression	16		2567437	0					
ANR	2567503	MemberAccess	upd -> cmap [ 1 ] . bitshf		2567437	1					
ANR	2567504	ArrayIndexing	upd -> cmap [ 1 ]		2567437	0					
ANR	2567505	PtrMemberAccess	upd -> cmap		2567437	0					
ANR	2567506	Identifier	upd		2567437	0					
ANR	2567507	Identifier	cmap		2567437	1					
ANR	2567508	PrimaryExpression	1		2567437	1					
ANR	2567509	Identifier	bitshf		2567437	1					
ANR	2567510	AndExpression	( 8 <= upd -> cmap [ 2 ] . bits ) && ( 8 == upd -> cmap [ 2 ] . bitshf ) && ( 8 <= upd -> cmap [ 3 ] . bits ) && ( 0 == upd -> cmap [ 3 ] . bitshf )		2567437	1		&&			
ANR	2567511	RelationalExpression	8 <= upd -> cmap [ 2 ] . bits		2567437	0		<=			
ANR	2567512	PrimaryExpression	8		2567437	0					
ANR	2567513	MemberAccess	upd -> cmap [ 2 ] . bits		2567437	1					
ANR	2567514	ArrayIndexing	upd -> cmap [ 2 ]		2567437	0					
ANR	2567515	PtrMemberAccess	upd -> cmap		2567437	0					
ANR	2567516	Identifier	upd		2567437	0					
ANR	2567517	Identifier	cmap		2567437	1					
ANR	2567518	PrimaryExpression	2		2567437	1					
ANR	2567519	Identifier	bits		2567437	1					
ANR	2567520	AndExpression	( 8 == upd -> cmap [ 2 ] . bitshf ) && ( 8 <= upd -> cmap [ 3 ] . bits ) && ( 0 == upd -> cmap [ 3 ] . bitshf )		2567437	1		&&			
ANR	2567521	EqualityExpression	8 == upd -> cmap [ 2 ] . bitshf		2567437	0		==			
ANR	2567522	PrimaryExpression	8		2567437	0					
ANR	2567523	MemberAccess	upd -> cmap [ 2 ] . bitshf		2567437	1					
ANR	2567524	ArrayIndexing	upd -> cmap [ 2 ]		2567437	0					
ANR	2567525	PtrMemberAccess	upd -> cmap		2567437	0					
ANR	2567526	Identifier	upd		2567437	0					
ANR	2567527	Identifier	cmap		2567437	1					
ANR	2567528	PrimaryExpression	2		2567437	1					
ANR	2567529	Identifier	bitshf		2567437	1					
ANR	2567530	AndExpression	( 8 <= upd -> cmap [ 3 ] . bits ) && ( 0 == upd -> cmap [ 3 ] . bitshf )		2567437	1		&&			
ANR	2567531	RelationalExpression	8 <= upd -> cmap [ 3 ] . bits		2567437	0		<=			
ANR	2567532	PrimaryExpression	8		2567437	0					
ANR	2567533	MemberAccess	upd -> cmap [ 3 ] . bits		2567437	1					
ANR	2567534	ArrayIndexing	upd -> cmap [ 3 ]		2567437	0					
ANR	2567535	PtrMemberAccess	upd -> cmap		2567437	0					
ANR	2567536	Identifier	upd		2567437	0					
ANR	2567537	Identifier	cmap		2567437	1					
ANR	2567538	PrimaryExpression	3		2567437	1					
ANR	2567539	Identifier	bits		2567437	1					
ANR	2567540	EqualityExpression	0 == upd -> cmap [ 3 ] . bitshf		2567437	1		==			
ANR	2567541	PrimaryExpression	0		2567437	0					
ANR	2567542	MemberAccess	upd -> cmap [ 3 ] . bitshf		2567437	1					
ANR	2567543	ArrayIndexing	upd -> cmap [ 3 ]		2567437	0					
ANR	2567544	PtrMemberAccess	upd -> cmap		2567437	0					
ANR	2567545	Identifier	upd		2567437	0					
ANR	2567546	Identifier	cmap		2567437	1					
ANR	2567547	PrimaryExpression	3		2567437	1					
ANR	2567548	Identifier	bitshf		2567437	1					
ANR	2567549	CompoundStatement		11:66:382:382	2567437	1					
ANR	2567550	ExpressionStatement	upd -> render = upd_fscmyk	3772:6:141190:141214	2567437	0	True				
ANR	2567551	AssignmentExpression	upd -> render = upd_fscmyk		2567437	0		=			
ANR	2567552	PtrMemberAccess	upd -> render		2567437	0					
ANR	2567553	Identifier	upd		2567437	0					
ANR	2567554	Identifier	render		2567437	1					
ANR	2567555	Identifier	upd_fscmyk		2567437	1					
ANR	2567556	ElseStatement	else		2567437	0					
ANR	2567557	CompoundStatement		13:10:426:426	2567437	0					
ANR	2567558	ExpressionStatement	upd -> flags &= ~B_RENDER	3774:6:141234:141257	2567437	0	True				
ANR	2567559	AssignmentExpression	upd -> flags &= ~B_RENDER		2567437	0		&=			
ANR	2567560	PtrMemberAccess	upd -> flags		2567437	0					
ANR	2567561	Identifier	upd		2567437	0					
ANR	2567562	Identifier	flags		2567437	1					
ANR	2567563	Identifier	~B_RENDER		2567437	1					
ANR	2567564	ReturnType	static void		2567437	1					
ANR	2567565	Identifier	upd_open_fscmyk		2567437	2					
ANR	2567566	ParameterList	upd_device * udev		2567437	3					
ANR	2567567	Parameter	upd_device * udev	3760:16:140781:140796	2567437	0	True				
ANR	2567568	ParameterType	upd_device *		2567437	0					
ANR	2567569	Identifier	udev		2567437	1					
ANR	2567570	CFGEntryNode	ENTRY		2567437		True				
ANR	2567571	CFGExitNode	EXIT		2567437		True				
ANR	2567572	Symbol	upd -> cmap [ 2 ] . bitshf		2567437						
ANR	2567573	Symbol	upd_fscmyk		2567437						
ANR	2567574	Symbol	upd		2567437						
ANR	2567575	Symbol	B_RENDER		2567437						
ANR	2567576	Symbol	* upd -> cmap		2567437						
ANR	2567577	Symbol	upd -> cmap [ 0 ] . bitshf		2567437						
ANR	2567578	Symbol	upd -> cmap [ 2 ] . bits		2567437						
ANR	2567579	Symbol	upd -> ncomp		2567437						
ANR	2567580	Symbol	upd -> cmap		2567437						
ANR	2567581	Symbol	upd -> render		2567437						
ANR	2567582	Symbol	upd -> flags		2567437						
ANR	2567583	Symbol	udev -> upd		2567437						
ANR	2567584	Symbol	* udev		2567437						
ANR	2567585	Symbol	* upd		2567437						
ANR	2567586	Symbol	upd -> cmap [ 1 ] . bits		2567437						
ANR	2567587	Symbol	upd -> cmap [ 1 ] . bitshf		2567437						
ANR	2567588	Symbol	udev		2567437						
ANR	2567589	Symbol	upd -> cmap [ 3 ] . bitshf		2567437						
ANR	2567590	Symbol	upd -> cmap [ 0 ] . bits		2567437						
ANR	2567591	Symbol	~B_RENDER		2567437						
ANR	2567592	Symbol	upd -> cmap [ 3 ] . bits		2567437						
ANR	2567593	Symbol	* * upd		2567437						
ANR	2567594	Function	upd_fscmyk	3783:0:141491:146626							
ANR	2567595	FunctionDef	upd_fscmyk (upd_p upd)		2567594	0					
ANR	2567596	CompoundStatement		3785:0:141524:146626	2567594	0					
ANR	2567597	IdentifierDeclStatement	const updscan_p scan = upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ] ;	3786:3:141529:141594	2567594	0	True				
ANR	2567598	IdentifierDecl	scan = upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ]		2567594	0					
ANR	2567599	IdentifierDeclType	const updscan_p		2567594	0					
ANR	2567600	Identifier	scan		2567594	1					
ANR	2567601	AssignmentExpression	scan = upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ]		2567594	2		=			
ANR	2567602	Identifier	scan		2567594	0					
ANR	2567603	ArrayIndexing	upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ]		2567594	1					
ANR	2567604	PtrMemberAccess	upd -> scnbuf		2567594	0					
ANR	2567605	Identifier	upd		2567594	0					
ANR	2567606	Identifier	scnbuf		2567594	1					
ANR	2567607	BitAndExpression	upd -> yscnbuf & upd -> scnmsk		2567594	1		&			
ANR	2567608	PtrMemberAccess	upd -> yscnbuf		2567594	0					
ANR	2567609	Identifier	upd		2567594	0					
ANR	2567610	Identifier	yscnbuf		2567594	1					
ANR	2567611	PtrMemberAccess	upd -> scnmsk		2567594	1					
ANR	2567612	Identifier	upd		2567594	0					
ANR	2567613	Identifier	scnmsk		2567594	1					
ANR	2567614	Statement	int32_t	3787:3:141599:141605	2567594	1	True				
ANR	2567615	Statement	*	3787:11:141607:141607	2567594	2	True				
ANR	2567616	Statement	const	3787:12:141608:141612	2567594	3	True				
ANR	2567617	ExpressionStatement	pixel = upd -> valbuf	3787:22:141618:141638	2567594	4	True				
ANR	2567618	AssignmentExpression	pixel = upd -> valbuf		2567594	0		=			
ANR	2567619	Identifier	pixel		2567594	0					
ANR	2567620	PtrMemberAccess	upd -> valbuf		2567594	1					
ANR	2567621	Identifier	upd		2567594	0					
ANR	2567622	Identifier	valbuf		2567594	1					
ANR	2567623	IdentifierDeclStatement	const updcomp_p * comp = ( updcomp_p * ) upd -> valptr ;	3788:3:141643:141694	2567594	5	True				
ANR	2567624	IdentifierDecl	* comp = ( updcomp_p * ) upd -> valptr		2567594	0					
ANR	2567625	IdentifierDeclType	const updcomp_p *		2567594	0					
ANR	2567626	Identifier	comp		2567594	1					
ANR	2567627	AssignmentExpression	* comp = ( updcomp_p * ) upd -> valptr		2567594	2		=			
ANR	2567628	Identifier	comp		2567594	0					
ANR	2567629	CastExpression	( updcomp_p * ) upd -> valptr		2567594	1					
ANR	2567630	CastTarget	updcomp_p *		2567594	0					
ANR	2567631	PtrMemberAccess	upd -> valptr		2567594	1					
ANR	2567632	Identifier	upd		2567594	0					
ANR	2567633	Identifier	valptr		2567594	1					
ANR	2567634	Statement	int32_t	3789:3:141699:141705	2567594	6	True				
ANR	2567635	Statement	*	3789:11:141707:141707	2567594	7	True				
ANR	2567636	Statement	const	3789:12:141708:141712	2567594	8	True				
ANR	2567637	ExpressionStatement	colerr = pixel + 4	3789:22:141718:141737	2567594	9	True				
ANR	2567638	AssignmentExpression	colerr = pixel + 4		2567594	0		=			
ANR	2567639	Identifier	colerr		2567594	0					
ANR	2567640	AdditiveExpression	pixel + 4		2567594	1		+			
ANR	2567641	Identifier	pixel		2567594	0					
ANR	2567642	PrimaryExpression	4		2567594	1					
ANR	2567643	IdentifierDeclStatement	int32_t * rowerr = colerr + 4 ;	3790:3:141742:141780	2567594	10	True				
ANR	2567644	IdentifierDecl	* rowerr = colerr + 4		2567594	0					
ANR	2567645	IdentifierDeclType	int32_t *		2567594	0					
ANR	2567646	Identifier	rowerr		2567594	1					
ANR	2567647	AssignmentExpression	* rowerr = colerr + 4		2567594	2		=			
ANR	2567648	Identifier	rowerr		2567594	0					
ANR	2567649	AdditiveExpression	colerr + 4		2567594	1		+			
ANR	2567650	Identifier	colerr		2567594	0					
ANR	2567651	PrimaryExpression	4		2567594	1					
ANR	2567652	IdentifierDeclStatement	int32_t pwidth = upd -> rwidth ;	3791:3:141785:141824	2567594	11	True				
ANR	2567653	IdentifierDecl	pwidth = upd -> rwidth		2567594	0					
ANR	2567654	IdentifierDeclType	int32_t		2567594	0					
ANR	2567655	Identifier	pwidth		2567594	1					
ANR	2567656	AssignmentExpression	pwidth = upd -> rwidth		2567594	2		=			
ANR	2567657	Identifier	pwidth		2567594	0					
ANR	2567658	PtrMemberAccess	upd -> rwidth		2567594	1					
ANR	2567659	Identifier	upd		2567594	0					
ANR	2567660	Identifier	rwidth		2567594	1					
ANR	2567661	IdentifierDeclStatement	"int dir , ibyte ;"	3792:3:141829:141855	2567594	12	True				
ANR	2567662	IdentifierDecl	dir		2567594	0					
ANR	2567663	IdentifierDeclType	int		2567594	0					
ANR	2567664	Identifier	dir		2567594	1					
ANR	2567665	IdentifierDecl	ibyte		2567594	1					
ANR	2567666	IdentifierDeclType	int		2567594	0					
ANR	2567667	Identifier	ibyte		2567594	1					
ANR	2567668	IdentifierDeclStatement	"byte bit , * data ;"	3793:3:141860:141886	2567594	13	True				
ANR	2567669	IdentifierDecl	bit		2567594	0					
ANR	2567670	IdentifierDeclType	byte		2567594	0					
ANR	2567671	Identifier	bit		2567594	1					
ANR	2567672	IdentifierDecl	* data		2567594	1					
ANR	2567673	IdentifierDeclType	byte *		2567594	0					
ANR	2567674	Identifier	data		2567594	1					
ANR	2567675	IdentifierDeclStatement	bool first = false ;	3794:3:141891:141921	2567594	14	True				
ANR	2567676	IdentifierDecl	first = false		2567594	0					
ANR	2567677	IdentifierDeclType	bool		2567594	0					
ANR	2567678	Identifier	first		2567594	1					
ANR	2567679	AssignmentExpression	first = false		2567594	2		=			
ANR	2567680	Identifier	false		2567594	0					
ANR	2567681	Identifier	false		2567594	1					
ANR	2567682	ExpressionStatement	"memset ( scan [ 0 ] . bytes , 0 , upd -> nbytes )"	3798:3:141961:141996	2567594	15	True				
ANR	2567683	CallExpression	"memset ( scan [ 0 ] . bytes , 0 , upd -> nbytes )"		2567594	0					
ANR	2567684	Callee	memset		2567594	0					
ANR	2567685	Identifier	memset		2567594	0					
ANR	2567686	ArgumentList	scan [ 0 ] . bytes		2567594	1					
ANR	2567687	Argument	scan [ 0 ] . bytes		2567594	0					
ANR	2567688	MemberAccess	scan [ 0 ] . bytes		2567594	0					
ANR	2567689	ArrayIndexing	scan [ 0 ]		2567594	0					
ANR	2567690	Identifier	scan		2567594	0					
ANR	2567691	PrimaryExpression	0		2567594	1					
ANR	2567692	Identifier	bytes		2567594	1					
ANR	2567693	Argument	0		2567594	1					
ANR	2567694	PrimaryExpression	0		2567594	0					
ANR	2567695	Argument	upd -> nbytes		2567594	2					
ANR	2567696	PtrMemberAccess	upd -> nbytes		2567594	0					
ANR	2567697	Identifier	upd		2567594	0					
ANR	2567698	Identifier	nbytes		2567594	1					
ANR	2567699	ExpressionStatement	"memset ( scan [ 1 ] . bytes , 0 , upd -> nbytes )"	3799:3:142001:142036	2567594	16	True				
ANR	2567700	CallExpression	"memset ( scan [ 1 ] . bytes , 0 , upd -> nbytes )"		2567594	0					
ANR	2567701	Callee	memset		2567594	0					
ANR	2567702	Identifier	memset		2567594	0					
ANR	2567703	ArgumentList	scan [ 1 ] . bytes		2567594	1					
ANR	2567704	Argument	scan [ 1 ] . bytes		2567594	0					
ANR	2567705	MemberAccess	scan [ 1 ] . bytes		2567594	0					
ANR	2567706	ArrayIndexing	scan [ 1 ]		2567594	0					
ANR	2567707	Identifier	scan		2567594	0					
ANR	2567708	PrimaryExpression	1		2567594	1					
ANR	2567709	Identifier	bytes		2567594	1					
ANR	2567710	Argument	0		2567594	1					
ANR	2567711	PrimaryExpression	0		2567594	0					
ANR	2567712	Argument	upd -> nbytes		2567594	2					
ANR	2567713	PtrMemberAccess	upd -> nbytes		2567594	0					
ANR	2567714	Identifier	upd		2567594	0					
ANR	2567715	Identifier	nbytes		2567594	1					
ANR	2567716	ExpressionStatement	"memset ( scan [ 2 ] . bytes , 0 , upd -> nbytes )"	3800:3:142041:142076	2567594	17	True				
ANR	2567717	CallExpression	"memset ( scan [ 2 ] . bytes , 0 , upd -> nbytes )"		2567594	0					
ANR	2567718	Callee	memset		2567594	0					
ANR	2567719	Identifier	memset		2567594	0					
ANR	2567720	ArgumentList	scan [ 2 ] . bytes		2567594	1					
ANR	2567721	Argument	scan [ 2 ] . bytes		2567594	0					
ANR	2567722	MemberAccess	scan [ 2 ] . bytes		2567594	0					
ANR	2567723	ArrayIndexing	scan [ 2 ]		2567594	0					
ANR	2567724	Identifier	scan		2567594	0					
ANR	2567725	PrimaryExpression	2		2567594	1					
ANR	2567726	Identifier	bytes		2567594	1					
ANR	2567727	Argument	0		2567594	1					
ANR	2567728	PrimaryExpression	0		2567594	0					
ANR	2567729	Argument	upd -> nbytes		2567594	2					
ANR	2567730	PtrMemberAccess	upd -> nbytes		2567594	0					
ANR	2567731	Identifier	upd		2567594	0					
ANR	2567732	Identifier	nbytes		2567594	1					
ANR	2567733	ExpressionStatement	"memset ( scan [ 3 ] . bytes , 0 , upd -> nbytes )"	3801:3:142081:142116	2567594	18	True				
ANR	2567734	CallExpression	"memset ( scan [ 3 ] . bytes , 0 , upd -> nbytes )"		2567594	0					
ANR	2567735	Callee	memset		2567594	0					
ANR	2567736	Identifier	memset		2567594	0					
ANR	2567737	ArgumentList	scan [ 3 ] . bytes		2567594	1					
ANR	2567738	Argument	scan [ 3 ] . bytes		2567594	0					
ANR	2567739	MemberAccess	scan [ 3 ] . bytes		2567594	0					
ANR	2567740	ArrayIndexing	scan [ 3 ]		2567594	0					
ANR	2567741	Identifier	scan		2567594	0					
ANR	2567742	PrimaryExpression	3		2567594	1					
ANR	2567743	Identifier	bytes		2567594	1					
ANR	2567744	Argument	0		2567594	1					
ANR	2567745	PrimaryExpression	0		2567594	0					
ANR	2567746	Argument	upd -> nbytes		2567594	2					
ANR	2567747	PtrMemberAccess	upd -> nbytes		2567594	0					
ANR	2567748	Identifier	upd		2567594	0					
ANR	2567749	Identifier	nbytes		2567594	1					
ANR	2567750	IfStatement	if ( upd -> flags & B_REVDIR )		2567594	19					
ANR	2567751	Condition	upd -> flags & B_REVDIR	3806:6:142159:142181	2567594	0	True				
ANR	2567752	BitAndExpression	upd -> flags & B_REVDIR		2567594	0		&			
ANR	2567753	PtrMemberAccess	upd -> flags		2567594	0					
ANR	2567754	Identifier	upd		2567594	0					
ANR	2567755	Identifier	flags		2567594	1					
ANR	2567756	Identifier	B_REVDIR		2567594	1					
ANR	2567757	CompoundStatement		22:31:659:659	2567594	1					
ANR	2567758	IfStatement	if ( ! ( upd -> flags & B_FSWHITE ) )		2567594	0					
ANR	2567759	Condition	! ( upd -> flags & B_FSWHITE )	3808:9:142219:142243	2567594	0	True				
ANR	2567760	UnaryOperationExpression	! ( upd -> flags & B_FSWHITE )		2567594	0					
ANR	2567761	UnaryOperator	!		2567594	0					
ANR	2567762	BitAndExpression	upd -> flags & B_FSWHITE		2567594	1		&			
ANR	2567763	PtrMemberAccess	upd -> flags		2567594	0					
ANR	2567764	Identifier	upd		2567594	0					
ANR	2567765	Identifier	flags		2567594	1					
ANR	2567766	Identifier	B_FSWHITE		2567594	1					
ANR	2567767	CompoundStatement		24:36:721:721	2567594	1					
ANR	2567768	ExpressionStatement	data = upd -> gsscan	3809:9:142257:142275	2567594	0	True				
ANR	2567769	AssignmentExpression	data = upd -> gsscan		2567594	0		=			
ANR	2567770	Identifier	data		2567594	0					
ANR	2567771	PtrMemberAccess	upd -> gsscan		2567594	1					
ANR	2567772	Identifier	upd		2567594	0					
ANR	2567773	Identifier	gsscan		2567594	1					
ANR	2567774	WhileStatement	while ( 0 < pwidth && ! * ( uint32_t * ) data )		2567594	1					
ANR	2567775	Condition	0 < pwidth && ! * ( uint32_t * ) data	3810:15:142292:142323	2567594	0	True				
ANR	2567776	AndExpression	0 < pwidth && ! * ( uint32_t * ) data		2567594	0		&&			
ANR	2567777	RelationalExpression	0 < pwidth		2567594	0		<			
ANR	2567778	PrimaryExpression	0		2567594	0					
ANR	2567779	Identifier	pwidth		2567594	1					
ANR	2567780	UnaryOperationExpression	! * ( uint32_t * ) data		2567594	1					
ANR	2567781	UnaryOperator	!		2567594	0					
ANR	2567782	UnaryOperationExpression	* ( uint32_t * ) data		2567594	1					
ANR	2567783	UnaryOperator	*		2567594	0					
ANR	2567784	CastExpression	( uint32_t * ) data		2567594	1					
ANR	2567785	CastTarget	uint32_t *		2567594	0					
ANR	2567786	Identifier	data		2567594	1					
ANR	2567787	ExpressionStatement	"pwidth -- , data += 4"	3810:49:142326:142345	2567594	1	True				
ANR	2567788	Expression	"pwidth -- , data += 4"		2567594	0					
ANR	2567789	PostIncDecOperationExpression	pwidth --		2567594	0					
ANR	2567790	Identifier	pwidth		2567594	0					
ANR	2567791	IncDec	--		2567594	1					
ANR	2567792	AssignmentExpression	data += 4		2567594	1		+=			
ANR	2567793	Identifier	data		2567594	0					
ANR	2567794	PrimaryExpression	4		2567594	1					
ANR	2567795	IfStatement	if ( 0 >= pwidth )		2567594	2					
ANR	2567796	Condition	0 >= pwidth	3811:12:142359:142369	2567594	0	True				
ANR	2567797	RelationalExpression	0 >= pwidth		2567594	0		>=			
ANR	2567798	PrimaryExpression	0		2567594	0					
ANR	2567799	Identifier	pwidth		2567594	1					
ANR	2567800	CompoundStatement		27:25:847:847	2567594	1					
ANR	2567801	IfStatement	if ( 0 < upd -> nlimits )		2567594	0					
ANR	2567802	Condition	0 < upd -> nlimits	3812:15:142389:142404	2567594	0	True				
ANR	2567803	RelationalExpression	0 < upd -> nlimits		2567594	0		<			
ANR	2567804	PrimaryExpression	0		2567594	0					
ANR	2567805	PtrMemberAccess	upd -> nlimits		2567594	1					
ANR	2567806	Identifier	upd		2567594	0					
ANR	2567807	Identifier	nlimits		2567594	1					
ANR	2567808	ExpressionStatement	"upd_limits ( upd , false )"	3812:33:142407:142428	2567594	1	True				
ANR	2567809	CallExpression	"upd_limits ( upd , false )"		2567594	0					
ANR	2567810	Callee	upd_limits		2567594	0					
ANR	2567811	Identifier	upd_limits		2567594	0					
ANR	2567812	ArgumentList	upd		2567594	1					
ANR	2567813	Argument	upd		2567594	0					
ANR	2567814	Identifier	upd		2567594	0					
ANR	2567815	Argument	false		2567594	1					
ANR	2567816	Identifier	false		2567594	0					
ANR	2567817	ReturnStatement	return 0 ;	3813:12:142442:142450	2567594	1	True				
ANR	2567818	PrimaryExpression	0		2567594	0					
ANR	2567819	ExpressionStatement	data = upd -> gsscan + 4 * ( upd -> rwidth - 1 )	3817:6:142478:142525	2567594	1	True				
ANR	2567820	AssignmentExpression	data = upd -> gsscan + 4 * ( upd -> rwidth - 1 )		2567594	0		=			
ANR	2567821	Identifier	data		2567594	0					
ANR	2567822	AdditiveExpression	upd -> gsscan + 4 * ( upd -> rwidth - 1 )		2567594	1		+			
ANR	2567823	PtrMemberAccess	upd -> gsscan		2567594	0					
ANR	2567824	Identifier	upd		2567594	0					
ANR	2567825	Identifier	gsscan		2567594	1					
ANR	2567826	MultiplicativeExpression	4 * ( upd -> rwidth - 1 )		2567594	1		*			
ANR	2567827	PrimaryExpression	4		2567594	0					
ANR	2567828	AdditiveExpression	upd -> rwidth - 1		2567594	1		-			
ANR	2567829	PtrMemberAccess	upd -> rwidth		2567594	0					
ANR	2567830	Identifier	upd		2567594	0					
ANR	2567831	Identifier	rwidth		2567594	1					
ANR	2567832	PrimaryExpression	1		2567594	1					
ANR	2567833	ElseStatement	else		2567594	0					
ANR	2567834	CompoundStatement		35:10:1013:1013	2567594	0					
ANR	2567835	IfStatement	if ( ! ( upd -> flags & B_FSWHITE ) )		2567594	0					
ANR	2567836	Condition	! ( upd -> flags & B_FSWHITE )	3821:9:142598:142622	2567594	0	True				
ANR	2567837	UnaryOperationExpression	! ( upd -> flags & B_FSWHITE )		2567594	0					
ANR	2567838	UnaryOperator	!		2567594	0					
ANR	2567839	BitAndExpression	upd -> flags & B_FSWHITE		2567594	1		&			
ANR	2567840	PtrMemberAccess	upd -> flags		2567594	0					
ANR	2567841	Identifier	upd		2567594	0					
ANR	2567842	Identifier	flags		2567594	1					
ANR	2567843	Identifier	B_FSWHITE		2567594	1					
ANR	2567844	CompoundStatement		37:36:1100:1100	2567594	1					
ANR	2567845	ExpressionStatement	data = upd -> gsscan + 4 * ( upd -> rwidth - 1 )	3822:9:142636:142676	2567594	0	True				
ANR	2567846	AssignmentExpression	data = upd -> gsscan + 4 * ( upd -> rwidth - 1 )		2567594	0		=			
ANR	2567847	Identifier	data		2567594	0					
ANR	2567848	AdditiveExpression	upd -> gsscan + 4 * ( upd -> rwidth - 1 )		2567594	1		+			
ANR	2567849	PtrMemberAccess	upd -> gsscan		2567594	0					
ANR	2567850	Identifier	upd		2567594	0					
ANR	2567851	Identifier	gsscan		2567594	1					
ANR	2567852	MultiplicativeExpression	4 * ( upd -> rwidth - 1 )		2567594	1		*			
ANR	2567853	PrimaryExpression	4		2567594	0					
ANR	2567854	AdditiveExpression	upd -> rwidth - 1		2567594	1		-			
ANR	2567855	PtrMemberAccess	upd -> rwidth		2567594	0					
ANR	2567856	Identifier	upd		2567594	0					
ANR	2567857	Identifier	rwidth		2567594	1					
ANR	2567858	PrimaryExpression	1		2567594	1					
ANR	2567859	WhileStatement	while ( 0 < pwidth && ! * ( uint32_t * ) data )		2567594	1					
ANR	2567860	Condition	0 < pwidth && ! * ( uint32_t * ) data	3823:15:142693:142724	2567594	0	True				
ANR	2567861	AndExpression	0 < pwidth && ! * ( uint32_t * ) data		2567594	0		&&			
ANR	2567862	RelationalExpression	0 < pwidth		2567594	0		<			
ANR	2567863	PrimaryExpression	0		2567594	0					
ANR	2567864	Identifier	pwidth		2567594	1					
ANR	2567865	UnaryOperationExpression	! * ( uint32_t * ) data		2567594	1					
ANR	2567866	UnaryOperator	!		2567594	0					
ANR	2567867	UnaryOperationExpression	* ( uint32_t * ) data		2567594	1					
ANR	2567868	UnaryOperator	*		2567594	0					
ANR	2567869	CastExpression	( uint32_t * ) data		2567594	1					
ANR	2567870	CastTarget	uint32_t *		2567594	0					
ANR	2567871	Identifier	data		2567594	1					
ANR	2567872	ExpressionStatement	"pwidth -- , data -= 4"	3823:49:142727:142746	2567594	1	True				
ANR	2567873	Expression	"pwidth -- , data -= 4"		2567594	0					
ANR	2567874	PostIncDecOperationExpression	pwidth --		2567594	0					
ANR	2567875	Identifier	pwidth		2567594	0					
ANR	2567876	IncDec	--		2567594	1					
ANR	2567877	AssignmentExpression	data -= 4		2567594	1		-=			
ANR	2567878	Identifier	data		2567594	0					
ANR	2567879	PrimaryExpression	4		2567594	1					
ANR	2567880	IfStatement	if ( 0 >= pwidth )		2567594	2					
ANR	2567881	Condition	0 >= pwidth	3824:12:142760:142770	2567594	0	True				
ANR	2567882	RelationalExpression	0 >= pwidth		2567594	0		>=			
ANR	2567883	PrimaryExpression	0		2567594	0					
ANR	2567884	Identifier	pwidth		2567594	1					
ANR	2567885	CompoundStatement		40:25:1248:1248	2567594	1					
ANR	2567886	IfStatement	if ( 0 < upd -> nlimits )		2567594	0					
ANR	2567887	Condition	0 < upd -> nlimits	3825:15:142790:142805	2567594	0	True				
ANR	2567888	RelationalExpression	0 < upd -> nlimits		2567594	0		<			
ANR	2567889	PrimaryExpression	0		2567594	0					
ANR	2567890	PtrMemberAccess	upd -> nlimits		2567594	1					
ANR	2567891	Identifier	upd		2567594	0					
ANR	2567892	Identifier	nlimits		2567594	1					
ANR	2567893	ExpressionStatement	"upd_limits ( upd , false )"	3825:33:142808:142829	2567594	1	True				
ANR	2567894	CallExpression	"upd_limits ( upd , false )"		2567594	0					
ANR	2567895	Callee	upd_limits		2567594	0					
ANR	2567896	Identifier	upd_limits		2567594	0					
ANR	2567897	ArgumentList	upd		2567594	1					
ANR	2567898	Argument	upd		2567594	0					
ANR	2567899	Identifier	upd		2567594	0					
ANR	2567900	Argument	false		2567594	1					
ANR	2567901	Identifier	false		2567594	0					
ANR	2567902	ReturnStatement	return 0 ;	3826:12:142843:142851	2567594	1	True				
ANR	2567903	PrimaryExpression	0		2567594	0					
ANR	2567904	ExpressionStatement	data = upd -> gsscan	3830:6:142879:142904	2567594	1	True				
ANR	2567905	AssignmentExpression	data = upd -> gsscan		2567594	0		=			
ANR	2567906	Identifier	data		2567594	0					
ANR	2567907	PtrMemberAccess	upd -> gsscan		2567594	1					
ANR	2567908	Identifier	upd		2567594	0					
ANR	2567909	Identifier	gsscan		2567594	1					
ANR	2567910	IfStatement	if ( ! ( B_REVDIR & upd -> flags ) == ! ( B_YFLIP & upd -> flags ) )		2567594	20					
ANR	2567911	Condition	! ( B_REVDIR & upd -> flags ) == ! ( B_YFLIP & upd -> flags )	3836:6:143014:143065	2567594	0	True				
ANR	2567912	EqualityExpression	! ( B_REVDIR & upd -> flags ) == ! ( B_YFLIP & upd -> flags )		2567594	0		==			
ANR	2567913	UnaryOperationExpression	! ( B_REVDIR & upd -> flags )		2567594	0					
ANR	2567914	UnaryOperator	!		2567594	0					
ANR	2567915	BitAndExpression	B_REVDIR & upd -> flags		2567594	1		&			
ANR	2567916	Identifier	B_REVDIR		2567594	0					
ANR	2567917	PtrMemberAccess	upd -> flags		2567594	1					
ANR	2567918	Identifier	upd		2567594	0					
ANR	2567919	Identifier	flags		2567594	1					
ANR	2567920	UnaryOperationExpression	! ( B_YFLIP & upd -> flags )		2567594	1					
ANR	2567921	UnaryOperator	!		2567594	0					
ANR	2567922	BitAndExpression	B_YFLIP & upd -> flags		2567594	1		&			
ANR	2567923	Identifier	B_YFLIP		2567594	0					
ANR	2567924	PtrMemberAccess	upd -> flags		2567594	1					
ANR	2567925	Identifier	upd		2567594	0					
ANR	2567926	Identifier	flags		2567594	1					
ANR	2567927	CompoundStatement		52:60:1543:1543	2567594	1					
ANR	2567928	ExpressionStatement	dir = 4	3837:6:143076:143091	2567594	0	True				
ANR	2567929	AssignmentExpression	dir = 4		2567594	0		=			
ANR	2567930	Identifier	dir		2567594	0					
ANR	2567931	PrimaryExpression	4		2567594	1					
ANR	2567932	ExpressionStatement	bit = 0x80	3838:6:143099:143117	2567594	1	True				
ANR	2567933	AssignmentExpression	bit = 0x80		2567594	0		=			
ANR	2567934	Identifier	bit		2567594	0					
ANR	2567935	PrimaryExpression	0x80		2567594	1					
ANR	2567936	ExpressionStatement	ibyte = 0	3839:6:143125:143140	2567594	2	True				
ANR	2567937	AssignmentExpression	ibyte = 0		2567594	0		=			
ANR	2567938	Identifier	ibyte		2567594	0					
ANR	2567939	PrimaryExpression	0		2567594	1					
ANR	2567940	ElseStatement	else		2567594	0					
ANR	2567941	CompoundStatement		56:10:1627:1627	2567594	0					
ANR	2567942	ExpressionStatement	dir = - 4	3841:6:143160:143177	2567594	0	True				
ANR	2567943	AssignmentExpression	dir = - 4		2567594	0		=			
ANR	2567944	Identifier	dir		2567594	0					
ANR	2567945	UnaryOperationExpression	- 4		2567594	1					
ANR	2567946	UnaryOperator	-		2567594	0					
ANR	2567947	PrimaryExpression	4		2567594	1					
ANR	2567948	ExpressionStatement	rowerr += 4 * ( upd -> rwidth - 1 )	3842:6:143185:143232	2567594	1	True				
ANR	2567949	AssignmentExpression	rowerr += 4 * ( upd -> rwidth - 1 )		2567594	0		+=			
ANR	2567950	Identifier	rowerr		2567594	0					
ANR	2567951	MultiplicativeExpression	4 * ( upd -> rwidth - 1 )		2567594	1		*			
ANR	2567952	PrimaryExpression	4		2567594	0					
ANR	2567953	AdditiveExpression	upd -> rwidth - 1		2567594	1		-			
ANR	2567954	PtrMemberAccess	upd -> rwidth		2567594	0					
ANR	2567955	Identifier	upd		2567594	0					
ANR	2567956	Identifier	rwidth		2567594	1					
ANR	2567957	PrimaryExpression	1		2567594	1					
ANR	2567958	ExpressionStatement	bit = 0x80 >> ( ( upd -> rwidth - 1 ) & 7 )	3843:6:143240:143292	2567594	2	True				
ANR	2567959	AssignmentExpression	bit = 0x80 >> ( ( upd -> rwidth - 1 ) & 7 )		2567594	0		=			
ANR	2567960	Identifier	bit		2567594	0					
ANR	2567961	ShiftExpression	0x80 >> ( ( upd -> rwidth - 1 ) & 7 )		2567594	1		>>			
ANR	2567962	PrimaryExpression	0x80		2567594	0					
ANR	2567963	BitAndExpression	( upd -> rwidth - 1 ) & 7		2567594	1		&			
ANR	2567964	AdditiveExpression	upd -> rwidth - 1		2567594	0		-			
ANR	2567965	PtrMemberAccess	upd -> rwidth		2567594	0					
ANR	2567966	Identifier	upd		2567594	0					
ANR	2567967	Identifier	rwidth		2567594	1					
ANR	2567968	PrimaryExpression	1		2567594	1					
ANR	2567969	PrimaryExpression	7		2567594	1					
ANR	2567970	ExpressionStatement	ibyte = ( upd -> rwidth - 1 ) >> 3	3844:6:143300:143352	2567594	3	True				
ANR	2567971	AssignmentExpression	ibyte = ( upd -> rwidth - 1 ) >> 3		2567594	0		=			
ANR	2567972	Identifier	ibyte		2567594	0					
ANR	2567973	ShiftExpression	( upd -> rwidth - 1 ) >> 3		2567594	1		>>			
ANR	2567974	AdditiveExpression	upd -> rwidth - 1		2567594	0		-			
ANR	2567975	PtrMemberAccess	upd -> rwidth		2567594	0					
ANR	2567976	Identifier	upd		2567594	0					
ANR	2567977	Identifier	rwidth		2567594	1					
ANR	2567978	PrimaryExpression	1		2567594	1					
ANR	2567979	PrimaryExpression	3		2567594	1					
ANR	2567980	IfStatement	if ( ! ( upd -> flags & B_FIXDIR ) )		2567594	21					
ANR	2567981	Condition	! ( upd -> flags & B_FIXDIR )	3850:6:143407:143430	2567594	0	True				
ANR	2567982	UnaryOperationExpression	! ( upd -> flags & B_FIXDIR )		2567594	0					
ANR	2567983	UnaryOperator	!		2567594	0					
ANR	2567984	BitAndExpression	upd -> flags & B_FIXDIR		2567594	1		&			
ANR	2567985	PtrMemberAccess	upd -> flags		2567594	0					
ANR	2567986	Identifier	upd		2567594	0					
ANR	2567987	Identifier	flags		2567594	1					
ANR	2567988	Identifier	B_FIXDIR		2567594	1					
ANR	2567989	ExpressionStatement	upd -> flags ^= B_REVDIR	3850:32:143433:143455	2567594	1	True				
ANR	2567990	AssignmentExpression	upd -> flags ^= B_REVDIR		2567594	0		^=			
ANR	2567991	PtrMemberAccess	upd -> flags		2567594	0					
ANR	2567992	Identifier	upd		2567594	0					
ANR	2567993	Identifier	flags		2567594	1					
ANR	2567994	Identifier	B_REVDIR		2567594	1					
ANR	2567995	IfStatement	if ( ! ( upd -> flags & B_FSWHITE ) )		2567594	22					
ANR	2567996	Condition	! ( upd -> flags & B_FSWHITE )	3854:6:143503:143527	2567594	0	True				
ANR	2567997	UnaryOperationExpression	! ( upd -> flags & B_FSWHITE )		2567594	0					
ANR	2567998	UnaryOperator	!		2567594	0					
ANR	2567999	BitAndExpression	upd -> flags & B_FSWHITE		2567594	1		&			
ANR	2568000	PtrMemberAccess	upd -> flags		2567594	0					
ANR	2568001	Identifier	upd		2567594	0					
ANR	2568002	Identifier	flags		2567594	1					
ANR	2568003	Identifier	B_FSWHITE		2567594	1					
ANR	2568004	CompoundStatement		70:33:2005:2005	2567594	1					
ANR	2568005	WhileStatement	while ( 0 < pwidth && ! * ( ( uint32_t * ) data ) )		2567594	0					
ANR	2568006	Condition	0 < pwidth && ! * ( ( uint32_t * ) data )	3855:12:143544:143577	2567594	0	True				
ANR	2568007	AndExpression	0 < pwidth && ! * ( ( uint32_t * ) data )		2567594	0		&&			
ANR	2568008	RelationalExpression	0 < pwidth		2567594	0		<			
ANR	2568009	PrimaryExpression	0		2567594	0					
ANR	2568010	Identifier	pwidth		2567594	1					
ANR	2568011	UnaryOperationExpression	! * ( ( uint32_t * ) data )		2567594	1					
ANR	2568012	UnaryOperator	!		2567594	0					
ANR	2568013	UnaryOperationExpression	* ( ( uint32_t * ) data )		2567594	1					
ANR	2568014	UnaryOperator	*		2567594	0					
ANR	2568015	CastExpression	( uint32_t * ) data		2567594	1					
ANR	2568016	CastTarget	uint32_t *		2567594	0					
ANR	2568017	Identifier	data		2567594	1					
ANR	2568018	CompoundStatement		71:48:2055:2055	2567594	1					
ANR	2568019	ExpressionStatement	pwidth --	3856:9:143591:143599	2567594	0	True				
ANR	2568020	PostIncDecOperationExpression	pwidth --		2567594	0					
ANR	2568021	Identifier	pwidth		2567594	0					
ANR	2568022	IncDec	--		2567594	1					
ANR	2568023	IfStatement	if ( B_YFLIP & upd -> flags )		2567594	1					
ANR	2568024	Condition	B_YFLIP & upd -> flags	3857:12:143613:143633	2567594	0	True				
ANR	2568025	BitAndExpression	B_YFLIP & upd -> flags		2567594	0		&			
ANR	2568026	Identifier	B_YFLIP		2567594	0					
ANR	2568027	PtrMemberAccess	upd -> flags		2567594	1					
ANR	2568028	Identifier	upd		2567594	0					
ANR	2568029	Identifier	flags		2567594	1					
ANR	2568030	ExpressionStatement	data -= dir	3857:35:143636:143647	2567594	1	True				
ANR	2568031	AssignmentExpression	data -= dir		2567594	0		-=			
ANR	2568032	Identifier	data		2567594	0					
ANR	2568033	Identifier	dir		2567594	1					
ANR	2568034	ElseStatement	else		2567594	0					
ANR	2568035	ExpressionStatement	data += dir	3858:35:143684:143695	2567594	0	True				
ANR	2568036	AssignmentExpression	data += dir		2567594	0		+=			
ANR	2568037	Identifier	data		2567594	0					
ANR	2568038	Identifier	dir		2567594	1					
ANR	2568039	Statement	S_FSTEP	3859:9:143706:143712	2567594	2	True				
ANR	2568040	ExpressionStatement	first = true	3865:3:143759:143771	2567594	23	True				
ANR	2568041	AssignmentExpression	first = true		2567594	0		=			
ANR	2568042	Identifier	first		2567594	0					
ANR	2568043	Identifier	true		2567594	1					
ANR	2568044	WhileStatement	while ( 0 < pwidth -- )		2567594	24					
ANR	2568045	Condition	0 < pwidth --	3866:9:143782:143793	2567594	0	True				
ANR	2568046	RelationalExpression	0 < pwidth --		2567594	0		<			
ANR	2568047	PrimaryExpression	0		2567594	0					
ANR	2568048	PostIncDecOperationExpression	pwidth --		2567594	1					
ANR	2568049	Identifier	pwidth		2567594	0					
ANR	2568050	IncDec	--		2567594	1					
ANR	2568051	CompoundStatement		82:23:2271:2271	2567594	1					
ANR	2568052	Statement	FS_M_ROWERR	3870:6:143847:143857	2567594	0	True				
ANR	2568053	Statement	(	3870:17:143858:143858	2567594	1	True				
ANR	2568054	Statement	upd	3870:18:143859:143861	2567594	2	True				
ANR	2568055	Statement	->	3870:21:143862:143863	2567594	3	True				
ANR	2568056	Statement	cmap	3870:23:143864:143867	2567594	4	True				
ANR	2568057	Statement	[	3870:27:143868:143868	2567594	5	True				
ANR	2568058	Statement	0	3870:28:143869:143869	2567594	6	True				
ANR	2568059	Statement	]	3870:29:143870:143870	2567594	7	True				
ANR	2568060	Statement	.	3870:30:143871:143871	2567594	8	True				
ANR	2568061	Statement	comp	3870:31:143872:143875	2567594	9	True				
ANR	2568062	Statement	)	3870:35:143876:143876	2567594	10	True				
ANR	2568063	ExpressionStatement	"FS_GOAL ( data [ 0 ] , upd -> cmap [ 0 ] . comp )"	3870:37:143878:143912	2567594	11	True				
ANR	2568064	CallExpression	"FS_GOAL ( data [ 0 ] , upd -> cmap [ 0 ] . comp )"		2567594	0					
ANR	2568065	Callee	FS_GOAL		2567594	0					
ANR	2568066	Identifier	FS_GOAL		2567594	0					
ANR	2568067	ArgumentList	data [ 0 ]		2567594	1					
ANR	2568068	Argument	data [ 0 ]		2567594	0					
ANR	2568069	ArrayIndexing	data [ 0 ]		2567594	0					
ANR	2568070	Identifier	data		2567594	0					
ANR	2568071	PrimaryExpression	0		2567594	1					
ANR	2568072	Argument	upd -> cmap [ 0 ] . comp		2567594	1					
ANR	2568073	MemberAccess	upd -> cmap [ 0 ] . comp		2567594	0					
ANR	2568074	ArrayIndexing	upd -> cmap [ 0 ]		2567594	0					
ANR	2568075	PtrMemberAccess	upd -> cmap		2567594	0					
ANR	2568076	Identifier	upd		2567594	0					
ANR	2568077	Identifier	cmap		2567594	1					
ANR	2568078	PrimaryExpression	0		2567594	1					
ANR	2568079	Identifier	comp		2567594	1					
ANR	2568080	IfStatement	if ( data [ 1 ] || data [ 2 ] || data [ 3 ] )		2567594	12					
ANR	2568081	Condition	data [ 1 ] || data [ 2 ] || data [ 3 ]	3875:9:143973:144001	2567594	0	True				
ANR	2568082	OrExpression	data [ 1 ] || data [ 2 ] || data [ 3 ]		2567594	0		||			
ANR	2568083	ArrayIndexing	data [ 1 ]		2567594	0					
ANR	2568084	Identifier	data		2567594	0					
ANR	2568085	PrimaryExpression	1		2567594	1					
ANR	2568086	OrExpression	data [ 2 ] || data [ 3 ]		2567594	1		||			
ANR	2568087	ArrayIndexing	data [ 2 ]		2567594	0					
ANR	2568088	Identifier	data		2567594	0					
ANR	2568089	PrimaryExpression	2		2567594	1					
ANR	2568090	ArrayIndexing	data [ 3 ]		2567594	1					
ANR	2568091	Identifier	data		2567594	0					
ANR	2568092	PrimaryExpression	3		2567594	1					
ANR	2568093	CompoundStatement		91:40:2479:2479	2567594	1					
ANR	2568094	Statement	FS_M_ROWERR	3877:9:144016:144026	2567594	0	True				
ANR	2568095	Statement	(	3877:20:144027:144027	2567594	1	True				
ANR	2568096	Statement	upd	3877:21:144028:144030	2567594	2	True				
ANR	2568097	Statement	->	3877:24:144031:144032	2567594	3	True				
ANR	2568098	Statement	cmap	3877:26:144033:144036	2567594	4	True				
ANR	2568099	Statement	[	3877:30:144037:144037	2567594	5	True				
ANR	2568100	Statement	1	3877:31:144038:144038	2567594	6	True				
ANR	2568101	Statement	]	3877:32:144039:144039	2567594	7	True				
ANR	2568102	Statement	.	3877:33:144040:144040	2567594	8	True				
ANR	2568103	Statement	comp	3877:34:144041:144044	2567594	9	True				
ANR	2568104	Statement	)	3877:38:144045:144045	2567594	10	True				
ANR	2568105	Statement	FS_GOAL	3877:40:144047:144053	2567594	11	True				
ANR	2568106	Statement	(	3877:47:144054:144054	2567594	12	True				
ANR	2568107	Statement	data	3877:48:144055:144058	2567594	13	True				
ANR	2568108	Statement	[	3877:52:144059:144059	2567594	14	True				
ANR	2568109	Statement	1	3877:53:144060:144060	2567594	15	True				
ANR	2568110	Statement	]	3877:54:144061:144061	2567594	16	True				
ANR	2568111	Statement	","	3877:55:144062:144062	2567594	17	True				
ANR	2568112	Statement	upd	3877:56:144063:144065	2567594	18	True				
ANR	2568113	Statement	->	3877:59:144066:144067	2567594	19	True				
ANR	2568114	Statement	cmap	3877:61:144068:144071	2567594	20	True				
ANR	2568115	Statement	[	3877:65:144072:144072	2567594	21	True				
ANR	2568116	Statement	1	3877:66:144073:144073	2567594	22	True				
ANR	2568117	Statement	]	3877:67:144074:144074	2567594	23	True				
ANR	2568118	Statement	.	3877:68:144075:144075	2567594	24	True				
ANR	2568119	Statement	comp	3877:69:144076:144079	2567594	25	True				
ANR	2568120	Statement	)	3877:73:144080:144080	2567594	26	True				
ANR	2568121	Statement	FS_M_ROWERR	3878:9:144091:144101	2567594	27	True				
ANR	2568122	Statement	(	3878:20:144102:144102	2567594	28	True				
ANR	2568123	Statement	upd	3878:21:144103:144105	2567594	29	True				
ANR	2568124	Statement	->	3878:24:144106:144107	2567594	30	True				
ANR	2568125	Statement	cmap	3878:26:144108:144111	2567594	31	True				
ANR	2568126	Statement	[	3878:30:144112:144112	2567594	32	True				
ANR	2568127	Statement	2	3878:31:144113:144113	2567594	33	True				
ANR	2568128	Statement	]	3878:32:144114:144114	2567594	34	True				
ANR	2568129	Statement	.	3878:33:144115:144115	2567594	35	True				
ANR	2568130	Statement	comp	3878:34:144116:144119	2567594	36	True				
ANR	2568131	Statement	)	3878:38:144120:144120	2567594	37	True				
ANR	2568132	Statement	FS_GOAL	3878:40:144122:144128	2567594	38	True				
ANR	2568133	Statement	(	3878:47:144129:144129	2567594	39	True				
ANR	2568134	Statement	data	3878:48:144130:144133	2567594	40	True				
ANR	2568135	Statement	[	3878:52:144134:144134	2567594	41	True				
ANR	2568136	Statement	2	3878:53:144135:144135	2567594	42	True				
ANR	2568137	Statement	]	3878:54:144136:144136	2567594	43	True				
ANR	2568138	Statement	","	3878:55:144137:144137	2567594	44	True				
ANR	2568139	Statement	upd	3878:56:144138:144140	2567594	45	True				
ANR	2568140	Statement	->	3878:59:144141:144142	2567594	46	True				
ANR	2568141	Statement	cmap	3878:61:144143:144146	2567594	47	True				
ANR	2568142	Statement	[	3878:65:144147:144147	2567594	48	True				
ANR	2568143	Statement	2	3878:66:144148:144148	2567594	49	True				
ANR	2568144	Statement	]	3878:67:144149:144149	2567594	50	True				
ANR	2568145	Statement	.	3878:68:144150:144150	2567594	51	True				
ANR	2568146	Statement	comp	3878:69:144151:144154	2567594	52	True				
ANR	2568147	Statement	)	3878:73:144155:144155	2567594	53	True				
ANR	2568148	Statement	FS_M_ROWERR	3879:9:144166:144176	2567594	54	True				
ANR	2568149	Statement	(	3879:20:144177:144177	2567594	55	True				
ANR	2568150	Statement	upd	3879:21:144178:144180	2567594	56	True				
ANR	2568151	Statement	->	3879:24:144181:144182	2567594	57	True				
ANR	2568152	Statement	cmap	3879:26:144183:144186	2567594	58	True				
ANR	2568153	Statement	[	3879:30:144187:144187	2567594	59	True				
ANR	2568154	Statement	3	3879:31:144188:144188	2567594	60	True				
ANR	2568155	Statement	]	3879:32:144189:144189	2567594	61	True				
ANR	2568156	Statement	.	3879:33:144190:144190	2567594	62	True				
ANR	2568157	Statement	comp	3879:34:144191:144194	2567594	63	True				
ANR	2568158	Statement	)	3879:38:144195:144195	2567594	64	True				
ANR	2568159	Statement	FS_GOAL	3879:40:144197:144203	2567594	65	True				
ANR	2568160	Statement	(	3879:47:144204:144204	2567594	66	True				
ANR	2568161	Statement	data	3879:48:144205:144208	2567594	67	True				
ANR	2568162	Statement	[	3879:52:144209:144209	2567594	68	True				
ANR	2568163	Statement	3	3879:53:144210:144210	2567594	69	True				
ANR	2568164	Statement	]	3879:54:144211:144211	2567594	70	True				
ANR	2568165	Statement	","	3879:55:144212:144212	2567594	71	True				
ANR	2568166	Statement	upd	3879:56:144213:144215	2567594	72	True				
ANR	2568167	Statement	->	3879:59:144216:144217	2567594	73	True				
ANR	2568168	Statement	cmap	3879:61:144218:144221	2567594	74	True				
ANR	2568169	Statement	[	3879:65:144222:144222	2567594	75	True				
ANR	2568170	Statement	3	3879:66:144223:144223	2567594	76	True				
ANR	2568171	Statement	]	3879:67:144224:144224	2567594	77	True				
ANR	2568172	Statement	.	3879:68:144225:144225	2567594	78	True				
ANR	2568173	Statement	comp	3879:69:144226:144229	2567594	79	True				
ANR	2568174	Statement	)	3879:73:144230:144230	2567594	80	True				
ANR	2568175	IfStatement	if ( pixel [ upd -> cmap [ 0 ] . comp ] > comp [ upd -> cmap [ 0 ] . comp ] -> threshold )		2567594	81					
ANR	2568176	Condition	pixel [ upd -> cmap [ 0 ] . comp ] > comp [ upd -> cmap [ 0 ] . comp ] -> threshold	3883:12:144321:144381	2567594	0	True				
ANR	2568177	RelationalExpression	pixel [ upd -> cmap [ 0 ] . comp ] > comp [ upd -> cmap [ 0 ] . comp ] -> threshold		2567594	0		>			
ANR	2568178	ArrayIndexing	pixel [ upd -> cmap [ 0 ] . comp ]		2567594	0					
ANR	2568179	Identifier	pixel		2567594	0					
ANR	2568180	MemberAccess	upd -> cmap [ 0 ] . comp		2567594	1					
ANR	2568181	ArrayIndexing	upd -> cmap [ 0 ]		2567594	0					
ANR	2568182	PtrMemberAccess	upd -> cmap		2567594	0					
ANR	2568183	Identifier	upd		2567594	0					
ANR	2568184	Identifier	cmap		2567594	1					
ANR	2568185	PrimaryExpression	0		2567594	1					
ANR	2568186	Identifier	comp		2567594	1					
ANR	2568187	PtrMemberAccess	comp [ upd -> cmap [ 0 ] . comp ] -> threshold		2567594	1					
ANR	2568188	ArrayIndexing	comp [ upd -> cmap [ 0 ] . comp ]		2567594	0					
ANR	2568189	Identifier	comp		2567594	0					
ANR	2568190	MemberAccess	upd -> cmap [ 0 ] . comp		2567594	1					
ANR	2568191	ArrayIndexing	upd -> cmap [ 0 ]		2567594	0					
ANR	2568192	PtrMemberAccess	upd -> cmap		2567594	0					
ANR	2568193	Identifier	upd		2567594	0					
ANR	2568194	Identifier	cmap		2567594	1					
ANR	2568195	PrimaryExpression	0		2567594	1					
ANR	2568196	Identifier	comp		2567594	1					
ANR	2568197	Identifier	threshold		2567594	1					
ANR	2568198	CompoundStatement		99:75:2859:2859	2567594	1					
ANR	2568199	ExpressionStatement	pixel [ 0 ] -= comp [ 0 ] -> spotsize	3885:12:144399:144428	2567594	0	True				
ANR	2568200	AssignmentExpression	pixel [ 0 ] -= comp [ 0 ] -> spotsize		2567594	0		-=			
ANR	2568201	ArrayIndexing	pixel [ 0 ]		2567594	0					
ANR	2568202	Identifier	pixel		2567594	0					
ANR	2568203	PrimaryExpression	0		2567594	1					
ANR	2568204	PtrMemberAccess	comp [ 0 ] -> spotsize		2567594	1					
ANR	2568205	ArrayIndexing	comp [ 0 ]		2567594	0					
ANR	2568206	Identifier	comp		2567594	0					
ANR	2568207	PrimaryExpression	0		2567594	1					
ANR	2568208	Identifier	spotsize		2567594	1					
ANR	2568209	ExpressionStatement	pixel [ 1 ] -= comp [ 1 ] -> spotsize	3886:12:144442:144471	2567594	1	True				
ANR	2568210	AssignmentExpression	pixel [ 1 ] -= comp [ 1 ] -> spotsize		2567594	0		-=			
ANR	2568211	ArrayIndexing	pixel [ 1 ]		2567594	0					
ANR	2568212	Identifier	pixel		2567594	0					
ANR	2568213	PrimaryExpression	1		2567594	1					
ANR	2568214	PtrMemberAccess	comp [ 1 ] -> spotsize		2567594	1					
ANR	2568215	ArrayIndexing	comp [ 1 ]		2567594	0					
ANR	2568216	Identifier	comp		2567594	0					
ANR	2568217	PrimaryExpression	1		2567594	1					
ANR	2568218	Identifier	spotsize		2567594	1					
ANR	2568219	ExpressionStatement	pixel [ 2 ] -= comp [ 2 ] -> spotsize	3887:12:144485:144514	2567594	2	True				
ANR	2568220	AssignmentExpression	pixel [ 2 ] -= comp [ 2 ] -> spotsize		2567594	0		-=			
ANR	2568221	ArrayIndexing	pixel [ 2 ]		2567594	0					
ANR	2568222	Identifier	pixel		2567594	0					
ANR	2568223	PrimaryExpression	2		2567594	1					
ANR	2568224	PtrMemberAccess	comp [ 2 ] -> spotsize		2567594	1					
ANR	2568225	ArrayIndexing	comp [ 2 ]		2567594	0					
ANR	2568226	Identifier	comp		2567594	0					
ANR	2568227	PrimaryExpression	2		2567594	1					
ANR	2568228	Identifier	spotsize		2567594	1					
ANR	2568229	ExpressionStatement	pixel [ 3 ] -= comp [ 3 ] -> spotsize	3888:12:144528:144557	2567594	3	True				
ANR	2568230	AssignmentExpression	pixel [ 3 ] -= comp [ 3 ] -> spotsize		2567594	0		-=			
ANR	2568231	ArrayIndexing	pixel [ 3 ]		2567594	0					
ANR	2568232	Identifier	pixel		2567594	0					
ANR	2568233	PrimaryExpression	3		2567594	1					
ANR	2568234	PtrMemberAccess	comp [ 3 ] -> spotsize		2567594	1					
ANR	2568235	ArrayIndexing	comp [ 3 ]		2567594	0					
ANR	2568236	Identifier	comp		2567594	0					
ANR	2568237	PrimaryExpression	3		2567594	1					
ANR	2568238	Identifier	spotsize		2567594	1					
ANR	2568239	ExpressionStatement	scan [ upd -> cmap [ 0 ] . comp ] . bytes [ ibyte ] |= bit	3889:12:144571:144614	2567594	4	True				
ANR	2568240	AssignmentExpression	scan [ upd -> cmap [ 0 ] . comp ] . bytes [ ibyte ] |= bit		2567594	0		|=			
ANR	2568241	ArrayIndexing	scan [ upd -> cmap [ 0 ] . comp ] . bytes [ ibyte ]		2567594	0					
ANR	2568242	MemberAccess	scan [ upd -> cmap [ 0 ] . comp ] . bytes		2567594	0					
ANR	2568243	ArrayIndexing	scan [ upd -> cmap [ 0 ] . comp ]		2567594	0					
ANR	2568244	Identifier	scan		2567594	0					
ANR	2568245	MemberAccess	upd -> cmap [ 0 ] . comp		2567594	1					
ANR	2568246	ArrayIndexing	upd -> cmap [ 0 ]		2567594	0					
ANR	2568247	PtrMemberAccess	upd -> cmap		2567594	0					
ANR	2568248	Identifier	upd		2567594	0					
ANR	2568249	Identifier	cmap		2567594	1					
ANR	2568250	PrimaryExpression	0		2567594	1					
ANR	2568251	Identifier	comp		2567594	1					
ANR	2568252	Identifier	bytes		2567594	1					
ANR	2568253	Identifier	ibyte		2567594	1					
ANR	2568254	Identifier	bit		2567594	1					
ANR	2568255	ElseStatement	else		2567594	0					
ANR	2568256	CompoundStatement		111:16:3222:3222	2567594	0					
ANR	2568257	IfStatement	if ( ( data [ 0 ] < data [ 1 ] ) && ( pixel [ upd -> cmap [ 1 ] . comp ] > comp [ upd -> cmap [ 1 ] . comp ] -> threshold ) )		2567594	0					
ANR	2568258	Condition	( data [ 0 ] < data [ 1 ] ) && ( pixel [ upd -> cmap [ 1 ] . comp ] > comp [ upd -> cmap [ 1 ] . comp ] -> threshold )	3897:15:144821:144939	2567594	0	True				
ANR	2568259	AndExpression	( data [ 0 ] < data [ 1 ] ) && ( pixel [ upd -> cmap [ 1 ] . comp ] > comp [ upd -> cmap [ 1 ] . comp ] -> threshold )		2567594	0		&&			
ANR	2568260	RelationalExpression	data [ 0 ] < data [ 1 ]		2567594	0		<			
ANR	2568261	ArrayIndexing	data [ 0 ]		2567594	0					
ANR	2568262	Identifier	data		2567594	0					
ANR	2568263	PrimaryExpression	0		2567594	1					
ANR	2568264	ArrayIndexing	data [ 1 ]		2567594	1					
ANR	2568265	Identifier	data		2567594	0					
ANR	2568266	PrimaryExpression	1		2567594	1					
ANR	2568267	RelationalExpression	pixel [ upd -> cmap [ 1 ] . comp ] > comp [ upd -> cmap [ 1 ] . comp ] -> threshold		2567594	1		>			
ANR	2568268	ArrayIndexing	pixel [ upd -> cmap [ 1 ] . comp ]		2567594	0					
ANR	2568269	Identifier	pixel		2567594	0					
ANR	2568270	MemberAccess	upd -> cmap [ 1 ] . comp		2567594	1					
ANR	2568271	ArrayIndexing	upd -> cmap [ 1 ]		2567594	0					
ANR	2568272	PtrMemberAccess	upd -> cmap		2567594	0					
ANR	2568273	Identifier	upd		2567594	0					
ANR	2568274	Identifier	cmap		2567594	1					
ANR	2568275	PrimaryExpression	1		2567594	1					
ANR	2568276	Identifier	comp		2567594	1					
ANR	2568277	PtrMemberAccess	comp [ upd -> cmap [ 1 ] . comp ] -> threshold		2567594	1					
ANR	2568278	ArrayIndexing	comp [ upd -> cmap [ 1 ] . comp ]		2567594	0					
ANR	2568279	Identifier	comp		2567594	0					
ANR	2568280	MemberAccess	upd -> cmap [ 1 ] . comp		2567594	1					
ANR	2568281	ArrayIndexing	upd -> cmap [ 1 ]		2567594	0					
ANR	2568282	PtrMemberAccess	upd -> cmap		2567594	0					
ANR	2568283	Identifier	upd		2567594	0					
ANR	2568284	Identifier	cmap		2567594	1					
ANR	2568285	PrimaryExpression	1		2567594	1					
ANR	2568286	Identifier	comp		2567594	1					
ANR	2568287	Identifier	threshold		2567594	1					
ANR	2568288	CompoundStatement		115:54:3417:3417	2567594	1					
ANR	2568289	ExpressionStatement	pixel [ upd -> cmap [ 1 ] . comp ] -= comp [ upd -> cmap [ 1 ] . comp ] -> spotsize	3900:16:144973:145034	2567594	0	True				
ANR	2568290	AssignmentExpression	pixel [ upd -> cmap [ 1 ] . comp ] -= comp [ upd -> cmap [ 1 ] . comp ] -> spotsize		2567594	0		-=			
ANR	2568291	ArrayIndexing	pixel [ upd -> cmap [ 1 ] . comp ]		2567594	0					
ANR	2568292	Identifier	pixel		2567594	0					
ANR	2568293	MemberAccess	upd -> cmap [ 1 ] . comp		2567594	1					
ANR	2568294	ArrayIndexing	upd -> cmap [ 1 ]		2567594	0					
ANR	2568295	PtrMemberAccess	upd -> cmap		2567594	0					
ANR	2568296	Identifier	upd		2567594	0					
ANR	2568297	Identifier	cmap		2567594	1					
ANR	2568298	PrimaryExpression	1		2567594	1					
ANR	2568299	Identifier	comp		2567594	1					
ANR	2568300	PtrMemberAccess	comp [ upd -> cmap [ 1 ] . comp ] -> spotsize		2567594	1					
ANR	2568301	ArrayIndexing	comp [ upd -> cmap [ 1 ] . comp ]		2567594	0					
ANR	2568302	Identifier	comp		2567594	0					
ANR	2568303	MemberAccess	upd -> cmap [ 1 ] . comp		2567594	1					
ANR	2568304	ArrayIndexing	upd -> cmap [ 1 ]		2567594	0					
ANR	2568305	PtrMemberAccess	upd -> cmap		2567594	0					
ANR	2568306	Identifier	upd		2567594	0					
ANR	2568307	Identifier	cmap		2567594	1					
ANR	2568308	PrimaryExpression	1		2567594	1					
ANR	2568309	Identifier	comp		2567594	1					
ANR	2568310	Identifier	spotsize		2567594	1					
ANR	2568311	ExpressionStatement	scan [ upd -> cmap [ 1 ] . comp ] . bytes [ ibyte ] |= bit	3901:17:145053:145096	2567594	1	True				
ANR	2568312	AssignmentExpression	scan [ upd -> cmap [ 1 ] . comp ] . bytes [ ibyte ] |= bit		2567594	0		|=			
ANR	2568313	ArrayIndexing	scan [ upd -> cmap [ 1 ] . comp ] . bytes [ ibyte ]		2567594	0					
ANR	2568314	MemberAccess	scan [ upd -> cmap [ 1 ] . comp ] . bytes		2567594	0					
ANR	2568315	ArrayIndexing	scan [ upd -> cmap [ 1 ] . comp ]		2567594	0					
ANR	2568316	Identifier	scan		2567594	0					
ANR	2568317	MemberAccess	upd -> cmap [ 1 ] . comp		2567594	1					
ANR	2568318	ArrayIndexing	upd -> cmap [ 1 ]		2567594	0					
ANR	2568319	PtrMemberAccess	upd -> cmap		2567594	0					
ANR	2568320	Identifier	upd		2567594	0					
ANR	2568321	Identifier	cmap		2567594	1					
ANR	2568322	PrimaryExpression	1		2567594	1					
ANR	2568323	Identifier	comp		2567594	1					
ANR	2568324	Identifier	bytes		2567594	1					
ANR	2568325	Identifier	ibyte		2567594	1					
ANR	2568326	Identifier	bit		2567594	1					
ANR	2568327	IfStatement	if ( ( data [ 0 ] < data [ 2 ] ) && ( pixel [ upd -> cmap [ 2 ] . comp ] > comp [ upd -> cmap [ 2 ] . comp ] -> threshold ) )		2567594	1					
ANR	2568328	Condition	( data [ 0 ] < data [ 2 ] ) && ( pixel [ upd -> cmap [ 2 ] . comp ] > comp [ upd -> cmap [ 2 ] . comp ] -> threshold )	3904:15:145183:145301	2567594	0	True				
ANR	2568329	AndExpression	( data [ 0 ] < data [ 2 ] ) && ( pixel [ upd -> cmap [ 2 ] . comp ] > comp [ upd -> cmap [ 2 ] . comp ] -> threshold )		2567594	0		&&			
ANR	2568330	RelationalExpression	data [ 0 ] < data [ 2 ]		2567594	0		<			
ANR	2568331	ArrayIndexing	data [ 0 ]		2567594	0					
ANR	2568332	Identifier	data		2567594	0					
ANR	2568333	PrimaryExpression	0		2567594	1					
ANR	2568334	ArrayIndexing	data [ 2 ]		2567594	1					
ANR	2568335	Identifier	data		2567594	0					
ANR	2568336	PrimaryExpression	2		2567594	1					
ANR	2568337	RelationalExpression	pixel [ upd -> cmap [ 2 ] . comp ] > comp [ upd -> cmap [ 2 ] . comp ] -> threshold		2567594	1		>			
ANR	2568338	ArrayIndexing	pixel [ upd -> cmap [ 2 ] . comp ]		2567594	0					
ANR	2568339	Identifier	pixel		2567594	0					
ANR	2568340	MemberAccess	upd -> cmap [ 2 ] . comp		2567594	1					
ANR	2568341	ArrayIndexing	upd -> cmap [ 2 ]		2567594	0					
ANR	2568342	PtrMemberAccess	upd -> cmap		2567594	0					
ANR	2568343	Identifier	upd		2567594	0					
ANR	2568344	Identifier	cmap		2567594	1					
ANR	2568345	PrimaryExpression	2		2567594	1					
ANR	2568346	Identifier	comp		2567594	1					
ANR	2568347	PtrMemberAccess	comp [ upd -> cmap [ 2 ] . comp ] -> threshold		2567594	1					
ANR	2568348	ArrayIndexing	comp [ upd -> cmap [ 2 ] . comp ]		2567594	0					
ANR	2568349	Identifier	comp		2567594	0					
ANR	2568350	MemberAccess	upd -> cmap [ 2 ] . comp		2567594	1					
ANR	2568351	ArrayIndexing	upd -> cmap [ 2 ]		2567594	0					
ANR	2568352	PtrMemberAccess	upd -> cmap		2567594	0					
ANR	2568353	Identifier	upd		2567594	0					
ANR	2568354	Identifier	cmap		2567594	1					
ANR	2568355	PrimaryExpression	2		2567594	1					
ANR	2568356	Identifier	comp		2567594	1					
ANR	2568357	Identifier	threshold		2567594	1					
ANR	2568358	CompoundStatement		122:54:3779:3779	2567594	1					
ANR	2568359	ExpressionStatement	pixel [ upd -> cmap [ 2 ] . comp ] -= comp [ upd -> cmap [ 2 ] . comp ] -> spotsize	3907:16:145335:145396	2567594	0	True				
ANR	2568360	AssignmentExpression	pixel [ upd -> cmap [ 2 ] . comp ] -= comp [ upd -> cmap [ 2 ] . comp ] -> spotsize		2567594	0		-=			
ANR	2568361	ArrayIndexing	pixel [ upd -> cmap [ 2 ] . comp ]		2567594	0					
ANR	2568362	Identifier	pixel		2567594	0					
ANR	2568363	MemberAccess	upd -> cmap [ 2 ] . comp		2567594	1					
ANR	2568364	ArrayIndexing	upd -> cmap [ 2 ]		2567594	0					
ANR	2568365	PtrMemberAccess	upd -> cmap		2567594	0					
ANR	2568366	Identifier	upd		2567594	0					
ANR	2568367	Identifier	cmap		2567594	1					
ANR	2568368	PrimaryExpression	2		2567594	1					
ANR	2568369	Identifier	comp		2567594	1					
ANR	2568370	PtrMemberAccess	comp [ upd -> cmap [ 2 ] . comp ] -> spotsize		2567594	1					
ANR	2568371	ArrayIndexing	comp [ upd -> cmap [ 2 ] . comp ]		2567594	0					
ANR	2568372	Identifier	comp		2567594	0					
ANR	2568373	MemberAccess	upd -> cmap [ 2 ] . comp		2567594	1					
ANR	2568374	ArrayIndexing	upd -> cmap [ 2 ]		2567594	0					
ANR	2568375	PtrMemberAccess	upd -> cmap		2567594	0					
ANR	2568376	Identifier	upd		2567594	0					
ANR	2568377	Identifier	cmap		2567594	1					
ANR	2568378	PrimaryExpression	2		2567594	1					
ANR	2568379	Identifier	comp		2567594	1					
ANR	2568380	Identifier	spotsize		2567594	1					
ANR	2568381	ExpressionStatement	scan [ upd -> cmap [ 2 ] . comp ] . bytes [ ibyte ] |= bit	3908:17:145415:145458	2567594	1	True				
ANR	2568382	AssignmentExpression	scan [ upd -> cmap [ 2 ] . comp ] . bytes [ ibyte ] |= bit		2567594	0		|=			
ANR	2568383	ArrayIndexing	scan [ upd -> cmap [ 2 ] . comp ] . bytes [ ibyte ]		2567594	0					
ANR	2568384	MemberAccess	scan [ upd -> cmap [ 2 ] . comp ] . bytes		2567594	0					
ANR	2568385	ArrayIndexing	scan [ upd -> cmap [ 2 ] . comp ]		2567594	0					
ANR	2568386	Identifier	scan		2567594	0					
ANR	2568387	MemberAccess	upd -> cmap [ 2 ] . comp		2567594	1					
ANR	2568388	ArrayIndexing	upd -> cmap [ 2 ]		2567594	0					
ANR	2568389	PtrMemberAccess	upd -> cmap		2567594	0					
ANR	2568390	Identifier	upd		2567594	0					
ANR	2568391	Identifier	cmap		2567594	1					
ANR	2568392	PrimaryExpression	2		2567594	1					
ANR	2568393	Identifier	comp		2567594	1					
ANR	2568394	Identifier	bytes		2567594	1					
ANR	2568395	Identifier	ibyte		2567594	1					
ANR	2568396	Identifier	bit		2567594	1					
ANR	2568397	IfStatement	if ( ( data [ 0 ] < data [ 3 ] ) && ( pixel [ upd -> cmap [ 3 ] . comp ] > comp [ upd -> cmap [ 3 ] . comp ] -> threshold ) )		2567594	2					
ANR	2568398	Condition	( data [ 0 ] < data [ 3 ] ) && ( pixel [ upd -> cmap [ 3 ] . comp ] > comp [ upd -> cmap [ 3 ] . comp ] -> threshold )	3911:15:145545:145663	2567594	0	True				
ANR	2568399	AndExpression	( data [ 0 ] < data [ 3 ] ) && ( pixel [ upd -> cmap [ 3 ] . comp ] > comp [ upd -> cmap [ 3 ] . comp ] -> threshold )		2567594	0		&&			
ANR	2568400	RelationalExpression	data [ 0 ] < data [ 3 ]		2567594	0		<			
ANR	2568401	ArrayIndexing	data [ 0 ]		2567594	0					
ANR	2568402	Identifier	data		2567594	0					
ANR	2568403	PrimaryExpression	0		2567594	1					
ANR	2568404	ArrayIndexing	data [ 3 ]		2567594	1					
ANR	2568405	Identifier	data		2567594	0					
ANR	2568406	PrimaryExpression	3		2567594	1					
ANR	2568407	RelationalExpression	pixel [ upd -> cmap [ 3 ] . comp ] > comp [ upd -> cmap [ 3 ] . comp ] -> threshold		2567594	1		>			
ANR	2568408	ArrayIndexing	pixel [ upd -> cmap [ 3 ] . comp ]		2567594	0					
ANR	2568409	Identifier	pixel		2567594	0					
ANR	2568410	MemberAccess	upd -> cmap [ 3 ] . comp		2567594	1					
ANR	2568411	ArrayIndexing	upd -> cmap [ 3 ]		2567594	0					
ANR	2568412	PtrMemberAccess	upd -> cmap		2567594	0					
ANR	2568413	Identifier	upd		2567594	0					
ANR	2568414	Identifier	cmap		2567594	1					
ANR	2568415	PrimaryExpression	3		2567594	1					
ANR	2568416	Identifier	comp		2567594	1					
ANR	2568417	PtrMemberAccess	comp [ upd -> cmap [ 3 ] . comp ] -> threshold		2567594	1					
ANR	2568418	ArrayIndexing	comp [ upd -> cmap [ 3 ] . comp ]		2567594	0					
ANR	2568419	Identifier	comp		2567594	0					
ANR	2568420	MemberAccess	upd -> cmap [ 3 ] . comp		2567594	1					
ANR	2568421	ArrayIndexing	upd -> cmap [ 3 ]		2567594	0					
ANR	2568422	PtrMemberAccess	upd -> cmap		2567594	0					
ANR	2568423	Identifier	upd		2567594	0					
ANR	2568424	Identifier	cmap		2567594	1					
ANR	2568425	PrimaryExpression	3		2567594	1					
ANR	2568426	Identifier	comp		2567594	1					
ANR	2568427	Identifier	threshold		2567594	1					
ANR	2568428	CompoundStatement		129:54:4141:4141	2567594	1					
ANR	2568429	ExpressionStatement	pixel [ upd -> cmap [ 3 ] . comp ] -= comp [ upd -> cmap [ 3 ] . comp ] -> spotsize	3914:16:145697:145758	2567594	0	True				
ANR	2568430	AssignmentExpression	pixel [ upd -> cmap [ 3 ] . comp ] -= comp [ upd -> cmap [ 3 ] . comp ] -> spotsize		2567594	0		-=			
ANR	2568431	ArrayIndexing	pixel [ upd -> cmap [ 3 ] . comp ]		2567594	0					
ANR	2568432	Identifier	pixel		2567594	0					
ANR	2568433	MemberAccess	upd -> cmap [ 3 ] . comp		2567594	1					
ANR	2568434	ArrayIndexing	upd -> cmap [ 3 ]		2567594	0					
ANR	2568435	PtrMemberAccess	upd -> cmap		2567594	0					
ANR	2568436	Identifier	upd		2567594	0					
ANR	2568437	Identifier	cmap		2567594	1					
ANR	2568438	PrimaryExpression	3		2567594	1					
ANR	2568439	Identifier	comp		2567594	1					
ANR	2568440	PtrMemberAccess	comp [ upd -> cmap [ 3 ] . comp ] -> spotsize		2567594	1					
ANR	2568441	ArrayIndexing	comp [ upd -> cmap [ 3 ] . comp ]		2567594	0					
ANR	2568442	Identifier	comp		2567594	0					
ANR	2568443	MemberAccess	upd -> cmap [ 3 ] . comp		2567594	1					
ANR	2568444	ArrayIndexing	upd -> cmap [ 3 ]		2567594	0					
ANR	2568445	PtrMemberAccess	upd -> cmap		2567594	0					
ANR	2568446	Identifier	upd		2567594	0					
ANR	2568447	Identifier	cmap		2567594	1					
ANR	2568448	PrimaryExpression	3		2567594	1					
ANR	2568449	Identifier	comp		2567594	1					
ANR	2568450	Identifier	spotsize		2567594	1					
ANR	2568451	ExpressionStatement	scan [ upd -> cmap [ 3 ] . comp ] . bytes [ ibyte ] |= bit	3915:17:145777:145820	2567594	1	True				
ANR	2568452	AssignmentExpression	scan [ upd -> cmap [ 3 ] . comp ] . bytes [ ibyte ] |= bit		2567594	0		|=			
ANR	2568453	ArrayIndexing	scan [ upd -> cmap [ 3 ] . comp ] . bytes [ ibyte ]		2567594	0					
ANR	2568454	MemberAccess	scan [ upd -> cmap [ 3 ] . comp ] . bytes		2567594	0					
ANR	2568455	ArrayIndexing	scan [ upd -> cmap [ 3 ] . comp ]		2567594	0					
ANR	2568456	Identifier	scan		2567594	0					
ANR	2568457	MemberAccess	upd -> cmap [ 3 ] . comp		2567594	1					
ANR	2568458	ArrayIndexing	upd -> cmap [ 3 ]		2567594	0					
ANR	2568459	PtrMemberAccess	upd -> cmap		2567594	0					
ANR	2568460	Identifier	upd		2567594	0					
ANR	2568461	Identifier	cmap		2567594	1					
ANR	2568462	PrimaryExpression	3		2567594	1					
ANR	2568463	Identifier	comp		2567594	1					
ANR	2568464	Identifier	bytes		2567594	1					
ANR	2568465	Identifier	ibyte		2567594	1					
ANR	2568466	Identifier	bit		2567594	1					
ANR	2568467	Statement	FS_DIST	3923:9:145998:146004	2567594	82	True				
ANR	2568468	Statement	(	3923:16:146005:146005	2567594	83	True				
ANR	2568469	Statement	upd	3923:17:146006:146008	2567594	84	True				
ANR	2568470	Statement	->	3923:20:146009:146010	2567594	85	True				
ANR	2568471	Statement	cmap	3923:22:146011:146014	2567594	86	True				
ANR	2568472	Statement	[	3923:26:146015:146015	2567594	87	True				
ANR	2568473	Statement	3	3923:27:146016:146016	2567594	88	True				
ANR	2568474	Statement	]	3923:28:146017:146017	2567594	89	True				
ANR	2568475	Statement	.	3923:29:146018:146018	2567594	90	True				
ANR	2568476	Statement	comp	3923:30:146019:146022	2567594	91	True				
ANR	2568477	Statement	)	3923:34:146023:146023	2567594	92	True				
ANR	2568478	Statement	FS_DIST	3924:9:146034:146040	2567594	93	True				
ANR	2568479	Statement	(	3924:16:146041:146041	2567594	94	True				
ANR	2568480	Statement	upd	3924:17:146042:146044	2567594	95	True				
ANR	2568481	Statement	->	3924:20:146045:146046	2567594	96	True				
ANR	2568482	Statement	cmap	3924:22:146047:146050	2567594	97	True				
ANR	2568483	Statement	[	3924:26:146051:146051	2567594	98	True				
ANR	2568484	Statement	2	3924:27:146052:146052	2567594	99	True				
ANR	2568485	Statement	]	3924:28:146053:146053	2567594	100	True				
ANR	2568486	Statement	.	3924:29:146054:146054	2567594	101	True				
ANR	2568487	Statement	comp	3924:30:146055:146058	2567594	102	True				
ANR	2568488	Statement	)	3924:34:146059:146059	2567594	103	True				
ANR	2568489	Statement	FS_DIST	3925:9:146070:146076	2567594	104	True				
ANR	2568490	Statement	(	3925:16:146077:146077	2567594	105	True				
ANR	2568491	Statement	upd	3925:17:146078:146080	2567594	106	True				
ANR	2568492	Statement	->	3925:20:146081:146082	2567594	107	True				
ANR	2568493	Statement	cmap	3925:22:146083:146086	2567594	108	True				
ANR	2568494	Statement	[	3925:26:146087:146087	2567594	109	True				
ANR	2568495	Statement	1	3925:27:146088:146088	2567594	110	True				
ANR	2568496	Statement	]	3925:28:146089:146089	2567594	111	True				
ANR	2568497	Statement	.	3925:29:146090:146090	2567594	112	True				
ANR	2568498	Statement	comp	3925:30:146091:146094	2567594	113	True				
ANR	2568499	Statement	)	3925:34:146095:146095	2567594	114	True				
ANR	2568500	ElseStatement	else		2567594	0					
ANR	2568501	IfStatement	if ( pixel [ upd -> cmap [ 0 ] . comp ] > comp [ upd -> cmap [ 0 ] . comp ] -> threshold )		2567594	0					
ANR	2568502	Condition	pixel [ upd -> cmap [ 0 ] . comp ] > comp [ upd -> cmap [ 0 ] . comp ] -> threshold	3927:16:146114:146174	2567594	0	True				
ANR	2568503	RelationalExpression	pixel [ upd -> cmap [ 0 ] . comp ] > comp [ upd -> cmap [ 0 ] . comp ] -> threshold		2567594	0		>			
ANR	2568504	ArrayIndexing	pixel [ upd -> cmap [ 0 ] . comp ]		2567594	0					
ANR	2568505	Identifier	pixel		2567594	0					
ANR	2568506	MemberAccess	upd -> cmap [ 0 ] . comp		2567594	1					
ANR	2568507	ArrayIndexing	upd -> cmap [ 0 ]		2567594	0					
ANR	2568508	PtrMemberAccess	upd -> cmap		2567594	0					
ANR	2568509	Identifier	upd		2567594	0					
ANR	2568510	Identifier	cmap		2567594	1					
ANR	2568511	PrimaryExpression	0		2567594	1					
ANR	2568512	Identifier	comp		2567594	1					
ANR	2568513	PtrMemberAccess	comp [ upd -> cmap [ 0 ] . comp ] -> threshold		2567594	1					
ANR	2568514	ArrayIndexing	comp [ upd -> cmap [ 0 ] . comp ]		2567594	0					
ANR	2568515	Identifier	comp		2567594	0					
ANR	2568516	MemberAccess	upd -> cmap [ 0 ] . comp		2567594	1					
ANR	2568517	ArrayIndexing	upd -> cmap [ 0 ]		2567594	0					
ANR	2568518	PtrMemberAccess	upd -> cmap		2567594	0					
ANR	2568519	Identifier	upd		2567594	0					
ANR	2568520	Identifier	cmap		2567594	1					
ANR	2568521	PrimaryExpression	0		2567594	1					
ANR	2568522	Identifier	comp		2567594	1					
ANR	2568523	Identifier	threshold		2567594	1					
ANR	2568524	CompoundStatement		143:79:4652:4652	2567594	1					
ANR	2568525	ExpressionStatement	scan [ upd -> cmap [ 0 ] . comp ] . bytes [ ibyte ] |= bit	3928:17:146196:146239	2567594	0	True				
ANR	2568526	AssignmentExpression	scan [ upd -> cmap [ 0 ] . comp ] . bytes [ ibyte ] |= bit		2567594	0		|=			
ANR	2568527	ArrayIndexing	scan [ upd -> cmap [ 0 ] . comp ] . bytes [ ibyte ]		2567594	0					
ANR	2568528	MemberAccess	scan [ upd -> cmap [ 0 ] . comp ] . bytes		2567594	0					
ANR	2568529	ArrayIndexing	scan [ upd -> cmap [ 0 ] . comp ]		2567594	0					
ANR	2568530	Identifier	scan		2567594	0					
ANR	2568531	MemberAccess	upd -> cmap [ 0 ] . comp		2567594	1					
ANR	2568532	ArrayIndexing	upd -> cmap [ 0 ]		2567594	0					
ANR	2568533	PtrMemberAccess	upd -> cmap		2567594	0					
ANR	2568534	Identifier	upd		2567594	0					
ANR	2568535	Identifier	cmap		2567594	1					
ANR	2568536	PrimaryExpression	0		2567594	1					
ANR	2568537	Identifier	comp		2567594	1					
ANR	2568538	Identifier	bytes		2567594	1					
ANR	2568539	Identifier	ibyte		2567594	1					
ANR	2568540	Identifier	bit		2567594	1					
ANR	2568541	ExpressionStatement	pixel [ upd -> cmap [ 0 ] . comp ] -= comp [ upd -> cmap [ 0 ] . comp ] -> spotsize	3929:16:146257:146318	2567594	1	True				
ANR	2568542	AssignmentExpression	pixel [ upd -> cmap [ 0 ] . comp ] -= comp [ upd -> cmap [ 0 ] . comp ] -> spotsize		2567594	0		-=			
ANR	2568543	ArrayIndexing	pixel [ upd -> cmap [ 0 ] . comp ]		2567594	0					
ANR	2568544	Identifier	pixel		2567594	0					
ANR	2568545	MemberAccess	upd -> cmap [ 0 ] . comp		2567594	1					
ANR	2568546	ArrayIndexing	upd -> cmap [ 0 ]		2567594	0					
ANR	2568547	PtrMemberAccess	upd -> cmap		2567594	0					
ANR	2568548	Identifier	upd		2567594	0					
ANR	2568549	Identifier	cmap		2567594	1					
ANR	2568550	PrimaryExpression	0		2567594	1					
ANR	2568551	Identifier	comp		2567594	1					
ANR	2568552	PtrMemberAccess	comp [ upd -> cmap [ 0 ] . comp ] -> spotsize		2567594	1					
ANR	2568553	ArrayIndexing	comp [ upd -> cmap [ 0 ] . comp ]		2567594	0					
ANR	2568554	Identifier	comp		2567594	0					
ANR	2568555	MemberAccess	upd -> cmap [ 0 ] . comp		2567594	1					
ANR	2568556	ArrayIndexing	upd -> cmap [ 0 ]		2567594	0					
ANR	2568557	PtrMemberAccess	upd -> cmap		2567594	0					
ANR	2568558	Identifier	upd		2567594	0					
ANR	2568559	Identifier	cmap		2567594	1					
ANR	2568560	PrimaryExpression	0		2567594	1					
ANR	2568561	Identifier	comp		2567594	1					
ANR	2568562	Identifier	spotsize		2567594	1					
ANR	2568563	Statement	FS_DIST	3932:6:146335:146341	2567594	13	True				
ANR	2568564	Statement	(	3932:13:146342:146342	2567594	14	True				
ANR	2568565	Statement	upd	3932:14:146343:146345	2567594	15	True				
ANR	2568566	Statement	->	3932:17:146346:146347	2567594	16	True				
ANR	2568567	Statement	cmap	3932:19:146348:146351	2567594	17	True				
ANR	2568568	Statement	[	3932:23:146352:146352	2567594	18	True				
ANR	2568569	Statement	0	3932:24:146353:146353	2567594	19	True				
ANR	2568570	Statement	]	3932:25:146354:146354	2567594	20	True				
ANR	2568571	Statement	.	3932:26:146355:146355	2567594	21	True				
ANR	2568572	Statement	comp	3932:27:146356:146359	2567594	22	True				
ANR	2568573	Statement	)	3932:31:146360:146360	2567594	23	True				
ANR	2568574	Statement	S_FSTEP	3936:6:146424:146430	2567594	24	True				
ANR	2568575	IfStatement	if ( upd -> flags & B_YFLIP )		2567594	25					
ANR	2568576	Condition	upd -> flags & B_YFLIP	3937:9:146441:146460	2567594	0	True				
ANR	2568577	BitAndExpression	upd -> flags & B_YFLIP		2567594	0		&			
ANR	2568578	PtrMemberAccess	upd -> flags		2567594	0					
ANR	2568579	Identifier	upd		2567594	0					
ANR	2568580	Identifier	flags		2567594	1					
ANR	2568581	Identifier	B_YFLIP		2567594	1					
ANR	2568582	ExpressionStatement	data -= dir	3937:31:146463:146474	2567594	1	True				
ANR	2568583	AssignmentExpression	data -= dir		2567594	0		-=			
ANR	2568584	Identifier	data		2567594	0					
ANR	2568585	Identifier	dir		2567594	1					
ANR	2568586	ElseStatement	else		2567594	0					
ANR	2568587	ExpressionStatement	data += dir	3938:31:146507:146518	2567594	0	True				
ANR	2568588	AssignmentExpression	data += dir		2567594	0		+=			
ANR	2568589	Identifier	data		2567594	0					
ANR	2568590	Identifier	dir		2567594	1					
ANR	2568591	IfStatement	if ( 0 < upd -> nlimits )		2567594	25					
ANR	2568592	Condition	0 < upd -> nlimits	3943:6:146573:146588	2567594	0	True				
ANR	2568593	RelationalExpression	0 < upd -> nlimits		2567594	0		<			
ANR	2568594	PrimaryExpression	0		2567594	0					
ANR	2568595	PtrMemberAccess	upd -> nlimits		2567594	1					
ANR	2568596	Identifier	upd		2567594	0					
ANR	2568597	Identifier	nlimits		2567594	1					
ANR	2568598	ExpressionStatement	"upd_limits ( upd , true )"	3943:24:146591:146611	2567594	1	True				
ANR	2568599	CallExpression	"upd_limits ( upd , true )"		2567594	0					
ANR	2568600	Callee	upd_limits		2567594	0					
ANR	2568601	Identifier	upd_limits		2567594	0					
ANR	2568602	ArgumentList	upd		2567594	1					
ANR	2568603	Argument	upd		2567594	0					
ANR	2568604	Identifier	upd		2567594	0					
ANR	2568605	Argument	true		2567594	1					
ANR	2568606	Identifier	true		2567594	0					
ANR	2568607	ReturnStatement	return 0 ;	3944:3:146616:146624	2567594	26	True				
ANR	2568608	PrimaryExpression	0		2567594	0					
ANR	2568609	ReturnType	static int		2567594	1					
ANR	2568610	Identifier	upd_fscmyk		2567594	2					
ANR	2568611	ParameterList	upd_p upd		2567594	3					
ANR	2568612	Parameter	upd_p upd	3784:11:141513:141521	2567594	0	True				
ANR	2568613	ParameterType	upd_p		2567594	0					
ANR	2568614	Identifier	upd		2567594	1					
ANR	2568615	CFGEntryNode	ENTRY		2567594		True				
ANR	2568616	CFGExitNode	EXIT		2567594		True				
ANR	2568617	Symbol	* upd -> cmap [ 1 ] . comp		2567594						
ANR	2568618	Symbol	* scan [ upd -> cmap [ 3 ] . comp ] . bytes		2567594						
ANR	2568619	Symbol	data		2567594						
ANR	2568620	Symbol	* * * * upd		2567594						
ANR	2568621	Symbol	* scan [ upd -> cmap [ 1 ] . comp ] . bytes		2567594						
ANR	2568622	Symbol	ibyte		2567594						
ANR	2568623	Symbol	upd -> cmap [ 1 ] . comp		2567594						
ANR	2568624	Symbol	pwidth		2567594						
ANR	2568625	Symbol	scan [ 1 ] . bytes		2567594						
ANR	2568626	Symbol	* * * upd -> cmap		2567594						
ANR	2568627	Symbol	dir		2567594						
ANR	2568628	Symbol	bit		2567594						
ANR	2568629	Symbol	comp [ 3 ] -> spotsize		2567594						
ANR	2568630	Symbol	* * upd -> cmap [ 3 ] . comp		2567594						
ANR	2568631	Symbol	upd -> cmap		2567594						
ANR	2568632	Symbol	upd -> rwidth		2567594						
ANR	2568633	Symbol	upd -> valbuf		2567594						
ANR	2568634	Symbol	upd -> nlimits		2567594						
ANR	2568635	Symbol	rowerr		2567594						
ANR	2568636	Symbol	* scan		2567594						
ANR	2568637	Symbol	scan [ 2 ] . bytes		2567594						
ANR	2568638	Symbol	comp [ upd -> cmap [ 0 ] . comp ] -> spotsize		2567594						
ANR	2568639	Symbol	upd -> nbytes		2567594						
ANR	2568640	Symbol	upd -> valptr		2567594						
ANR	2568641	Symbol	comp		2567594						
ANR	2568642	Symbol	* * upd -> cmap [ 2 ] . comp		2567594						
ANR	2568643	Symbol	* upd -> scnbuf		2567594						
ANR	2568644	Symbol	upd -> cmap [ 3 ] . comp		2567594						
ANR	2568645	Symbol	comp [ 0 ] -> spotsize		2567594						
ANR	2568646	Symbol	upd		2567594						
ANR	2568647	Symbol	* upd -> cmap [ 0 ] . comp		2567594						
ANR	2568648	Symbol	* pixel		2567594						
ANR	2568649	Symbol	* ( ( uint32_t * ) data )		2567594						
ANR	2568650	Symbol	* ibyte		2567594						
ANR	2568651	Symbol	* * comp		2567594						
ANR	2568652	Symbol	* upd -> yscnbuf		2567594						
ANR	2568653	Symbol	upd -> cmap [ 2 ] . comp		2567594						
ANR	2568654	Symbol	upd -> yscnbuf		2567594						
ANR	2568655	Symbol	* * scan		2567594						
ANR	2568656	Symbol	true		2567594						
ANR	2568657	Symbol	comp [ upd -> cmap [ 1 ] . comp ] -> threshold		2567594						
ANR	2568658	Symbol	comp [ upd -> cmap [ 3 ] . comp ] -> spotsize		2567594						
ANR	2568659	Symbol	comp [ 1 ] -> spotsize		2567594						
ANR	2568660	Symbol	upd -> gsscan		2567594						
ANR	2568661	Symbol	* scan [ upd -> cmap [ 2 ] . comp ] . bytes		2567594						
ANR	2568662	Symbol	scan		2567594						
ANR	2568663	Symbol	* upd -> cmap		2567594						
ANR	2568664	Symbol	comp [ upd -> cmap [ 0 ] . comp ] -> threshold		2567594						
ANR	2568665	Symbol	upd -> flags		2567594						
ANR	2568666	Symbol	* upd		2567594						
ANR	2568667	Symbol	* upd -> cmap [ 2 ] . comp		2567594						
ANR	2568668	Symbol	* comp		2567594						
ANR	2568669	Symbol	* scan [ upd -> cmap [ 0 ] . comp ] . bytes		2567594						
ANR	2568670	Symbol	* upd -> scnmsk		2567594						
ANR	2568671	Symbol	colerr		2567594						
ANR	2568672	Symbol	pixel		2567594						
ANR	2568673	Symbol	comp [ upd -> cmap [ 3 ] . comp ] -> threshold		2567594						
ANR	2568674	Symbol	* * upd -> cmap [ 1 ] . comp		2567594						
ANR	2568675	Symbol	comp [ upd -> cmap [ 2 ] . comp ] -> spotsize		2567594						
ANR	2568676	Symbol	scan [ upd -> cmap [ 0 ] . comp ] . bytes		2567594						
ANR	2568677	Symbol	upd -> scnmsk		2567594						
ANR	2568678	Symbol	* * * upd		2567594						
ANR	2568679	Symbol	false		2567594						
ANR	2568680	Symbol	scan [ upd -> cmap [ 3 ] . comp ] . bytes		2567594						
ANR	2568681	Symbol	B_FSWHITE		2567594						
ANR	2568682	Symbol	* upd -> cmap [ 3 ] . comp		2567594						
ANR	2568683	Symbol	comp [ upd -> cmap [ 2 ] . comp ] -> threshold		2567594						
ANR	2568684	Symbol	B_FIXDIR		2567594						
ANR	2568685	Symbol	upd -> cmap [ 0 ] . comp		2567594						
ANR	2568686	Symbol	comp [ 2 ] -> spotsize		2567594						
ANR	2568687	Symbol	scan [ upd -> cmap [ 1 ] . comp ] . bytes		2567594						
ANR	2568688	Symbol	scan [ 0 ] . bytes		2567594						
ANR	2568689	Symbol	scan [ upd -> cmap [ 2 ] . comp ] . bytes		2567594						
ANR	2568690	Symbol	* * upd -> cmap		2567594						
ANR	2568691	Symbol	upd -> scnbuf		2567594						
ANR	2568692	Symbol	* ( uint32_t * ) data		2567594						
ANR	2568693	Symbol	B_YFLIP		2567594						
ANR	2568694	Symbol	* * upd -> cmap [ 0 ] . comp		2567594						
ANR	2568695	Symbol	B_REVDIR		2567594						
ANR	2568696	Symbol	* * upd		2567594						
ANR	2568697	Symbol	* data		2567594						
ANR	2568698	Symbol	first		2567594						
ANR	2568699	Symbol	comp [ upd -> cmap [ 1 ] . comp ] -> spotsize		2567594						
ANR	2568700	Symbol	scan [ 3 ] . bytes		2567594						
ANR	2568701	Function	upd_open_fscmy_k	3951:0:146852:147103							
ANR	2568702	FunctionDef	upd_open_fscmy_k (upd_device * udev)		2568701	0					
ANR	2568703	CompoundStatement		3953:0:146899:147103	2568701	0					
ANR	2568704	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	3954:3:146904:146931	2568701	0	True				
ANR	2568705	IdentifierDecl	upd = udev -> upd		2568701	0					
ANR	2568706	IdentifierDeclType	const upd_p		2568701	0					
ANR	2568707	Identifier	upd		2568701	1					
ANR	2568708	AssignmentExpression	upd = udev -> upd		2568701	2		=			
ANR	2568709	Identifier	upd		2568701	0					
ANR	2568710	PtrMemberAccess	udev -> upd		2568701	1					
ANR	2568711	Identifier	udev		2568701	0					
ANR	2568712	Identifier	upd		2568701	1					
ANR	2568713	ExpressionStatement	upd_open_fscomp ( udev )	3956:3:146937:146958	2568701	1	True				
ANR	2568714	CallExpression	upd_open_fscomp ( udev )		2568701	0					
ANR	2568715	Callee	upd_open_fscomp		2568701	0					
ANR	2568716	Identifier	upd_open_fscomp		2568701	0					
ANR	2568717	ArgumentList	udev		2568701	1					
ANR	2568718	Argument	udev		2568701	0					
ANR	2568719	Identifier	udev		2568701	0					
ANR	2568720	IfStatement	if ( ( B_RENDER & upd -> flags ) && ( 4 == upd -> ncomp ) )		2568701	2					
ANR	2568721	Condition	( B_RENDER & upd -> flags ) && ( 4 == upd -> ncomp )	3958:6:146967:147016	2568701	0	True				
ANR	2568722	AndExpression	( B_RENDER & upd -> flags ) && ( 4 == upd -> ncomp )		2568701	0		&&			
ANR	2568723	BitAndExpression	B_RENDER & upd -> flags		2568701	0		&			
ANR	2568724	Identifier	B_RENDER		2568701	0					
ANR	2568725	PtrMemberAccess	upd -> flags		2568701	1					
ANR	2568726	Identifier	upd		2568701	0					
ANR	2568727	Identifier	flags		2568701	1					
ANR	2568728	EqualityExpression	4 == upd -> ncomp		2568701	1		==			
ANR	2568729	PrimaryExpression	4		2568701	0					
ANR	2568730	PtrMemberAccess	upd -> ncomp		2568701	1					
ANR	2568731	Identifier	upd		2568701	0					
ANR	2568732	Identifier	ncomp		2568701	1					
ANR	2568733	CompoundStatement		7:25:119:119	2568701	1					
ANR	2568734	ExpressionStatement	upd -> render = upd_fscmy_k	3960:6:147027:147052	2568701	0	True				
ANR	2568735	AssignmentExpression	upd -> render = upd_fscmy_k		2568701	0		=			
ANR	2568736	PtrMemberAccess	upd -> render		2568701	0					
ANR	2568737	Identifier	upd		2568701	0					
ANR	2568738	Identifier	render		2568701	1					
ANR	2568739	Identifier	upd_fscmy_k		2568701	1					
ANR	2568740	ElseStatement	else		2568701	0					
ANR	2568741	CompoundStatement		9:10:164:164	2568701	0					
ANR	2568742	ExpressionStatement	upd -> flags &= ~B_RENDER	3962:6:147072:147095	2568701	0	True				
ANR	2568743	AssignmentExpression	upd -> flags &= ~B_RENDER		2568701	0		&=			
ANR	2568744	PtrMemberAccess	upd -> flags		2568701	0					
ANR	2568745	Identifier	upd		2568701	0					
ANR	2568746	Identifier	flags		2568701	1					
ANR	2568747	Identifier	~B_RENDER		2568701	1					
ANR	2568748	ReturnType	static void		2568701	1					
ANR	2568749	Identifier	upd_open_fscmy_k		2568701	2					
ANR	2568750	ParameterList	upd_device * udev		2568701	3					
ANR	2568751	Parameter	upd_device * udev	3952:17:146881:146896	2568701	0	True				
ANR	2568752	ParameterType	upd_device *		2568701	0					
ANR	2568753	Identifier	udev		2568701	1					
ANR	2568754	CFGEntryNode	ENTRY		2568701		True				
ANR	2568755	CFGExitNode	EXIT		2568701		True				
ANR	2568756	Symbol	upd -> flags		2568701						
ANR	2568757	Symbol	udev -> upd		2568701						
ANR	2568758	Symbol	* udev		2568701						
ANR	2568759	Symbol	* upd		2568701						
ANR	2568760	Symbol	udev		2568701						
ANR	2568761	Symbol	upd		2568701						
ANR	2568762	Symbol	B_RENDER		2568701						
ANR	2568763	Symbol	upd_fscmy_k		2568701						
ANR	2568764	Symbol	~B_RENDER		2568701						
ANR	2568765	Symbol	upd -> ncomp		2568701						
ANR	2568766	Symbol	upd -> render		2568701						
ANR	2568767	Function	upd_fscmy_k	3971:0:147329:151444							
ANR	2568768	FunctionDef	upd_fscmy_k (upd_p upd)		2568767	0					
ANR	2568769	CompoundStatement		3973:0:147363:151444	2568767	0					
ANR	2568770	IdentifierDeclStatement	const updscan_p scan = upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ] ;	3974:3:147368:147434	2568767	0	True				
ANR	2568771	IdentifierDecl	scan = upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ]		2568767	0					
ANR	2568772	IdentifierDeclType	const updscan_p		2568767	0					
ANR	2568773	Identifier	scan		2568767	1					
ANR	2568774	AssignmentExpression	scan = upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ]		2568767	2		=			
ANR	2568775	Identifier	scan		2568767	0					
ANR	2568776	ArrayIndexing	upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ]		2568767	1					
ANR	2568777	PtrMemberAccess	upd -> scnbuf		2568767	0					
ANR	2568778	Identifier	upd		2568767	0					
ANR	2568779	Identifier	scnbuf		2568767	1					
ANR	2568780	BitAndExpression	upd -> yscnbuf & upd -> scnmsk		2568767	1		&			
ANR	2568781	PtrMemberAccess	upd -> yscnbuf		2568767	0					
ANR	2568782	Identifier	upd		2568767	0					
ANR	2568783	Identifier	yscnbuf		2568767	1					
ANR	2568784	PtrMemberAccess	upd -> scnmsk		2568767	1					
ANR	2568785	Identifier	upd		2568767	0					
ANR	2568786	Identifier	scnmsk		2568767	1					
ANR	2568787	IdentifierDeclStatement	const updcomp_p * comp = ( updcomp_p * ) upd -> valptr ;	3975:3:147439:147491	2568767	1	True				
ANR	2568788	IdentifierDecl	* comp = ( updcomp_p * ) upd -> valptr		2568767	0					
ANR	2568789	IdentifierDeclType	const updcomp_p *		2568767	0					
ANR	2568790	Identifier	comp		2568767	1					
ANR	2568791	AssignmentExpression	* comp = ( updcomp_p * ) upd -> valptr		2568767	2		=			
ANR	2568792	Identifier	comp		2568767	0					
ANR	2568793	CastExpression	( updcomp_p * ) upd -> valptr		2568767	1					
ANR	2568794	CastTarget	updcomp_p *		2568767	0					
ANR	2568795	PtrMemberAccess	upd -> valptr		2568767	1					
ANR	2568796	Identifier	upd		2568767	0					
ANR	2568797	Identifier	valptr		2568767	1					
ANR	2568798	Statement	int32_t	3976:3:147496:147502	2568767	2	True				
ANR	2568799	Statement	*	3976:11:147504:147504	2568767	3	True				
ANR	2568800	Statement	const	3976:12:147505:147509	2568767	4	True				
ANR	2568801	ExpressionStatement	pixel = upd -> valbuf	3976:22:147515:147535	2568767	5	True				
ANR	2568802	AssignmentExpression	pixel = upd -> valbuf		2568767	0		=			
ANR	2568803	Identifier	pixel		2568767	0					
ANR	2568804	PtrMemberAccess	upd -> valbuf		2568767	1					
ANR	2568805	Identifier	upd		2568767	0					
ANR	2568806	Identifier	valbuf		2568767	1					
ANR	2568807	Statement	int32_t	3977:3:147540:147546	2568767	6	True				
ANR	2568808	Statement	*	3977:11:147548:147548	2568767	7	True				
ANR	2568809	Statement	const	3977:12:147549:147553	2568767	8	True				
ANR	2568810	ExpressionStatement	colerr = pixel + upd -> ncomp	3977:22:147559:147587	2568767	9	True				
ANR	2568811	AssignmentExpression	colerr = pixel + upd -> ncomp		2568767	0		=			
ANR	2568812	Identifier	colerr		2568767	0					
ANR	2568813	AdditiveExpression	pixel + upd -> ncomp		2568767	1		+			
ANR	2568814	Identifier	pixel		2568767	0					
ANR	2568815	PtrMemberAccess	upd -> ncomp		2568767	1					
ANR	2568816	Identifier	upd		2568767	0					
ANR	2568817	Identifier	ncomp		2568767	1					
ANR	2568818	IdentifierDeclStatement	int32_t * rowerr = colerr + upd -> ncomp ;	3978:3:147592:147639	2568767	10	True				
ANR	2568819	IdentifierDecl	* rowerr = colerr + upd -> ncomp		2568767	0					
ANR	2568820	IdentifierDeclType	int32_t *		2568767	0					
ANR	2568821	Identifier	rowerr		2568767	1					
ANR	2568822	AssignmentExpression	* rowerr = colerr + upd -> ncomp		2568767	2		=			
ANR	2568823	Identifier	rowerr		2568767	0					
ANR	2568824	AdditiveExpression	colerr + upd -> ncomp		2568767	1		+			
ANR	2568825	Identifier	colerr		2568767	0					
ANR	2568826	PtrMemberAccess	upd -> ncomp		2568767	1					
ANR	2568827	Identifier	upd		2568767	0					
ANR	2568828	Identifier	ncomp		2568767	1					
ANR	2568829	IdentifierDeclStatement	int pwidth = upd -> rwidth ;	3979:3:147644:147681	2568767	11	True				
ANR	2568830	IdentifierDecl	pwidth = upd -> rwidth		2568767	0					
ANR	2568831	IdentifierDeclType	int		2568767	0					
ANR	2568832	Identifier	pwidth		2568767	1					
ANR	2568833	AssignmentExpression	pwidth = upd -> rwidth		2568767	2		=			
ANR	2568834	Identifier	pwidth		2568767	0					
ANR	2568835	PtrMemberAccess	upd -> rwidth		2568767	1					
ANR	2568836	Identifier	upd		2568767	0					
ANR	2568837	Identifier	rwidth		2568767	1					
ANR	2568838	IdentifierDeclStatement	"int dir , ibyte ;"	3980:3:147686:147712	2568767	12	True				
ANR	2568839	IdentifierDecl	dir		2568767	0					
ANR	2568840	IdentifierDeclType	int		2568767	0					
ANR	2568841	Identifier	dir		2568767	1					
ANR	2568842	IdentifierDecl	ibyte		2568767	1					
ANR	2568843	IdentifierDeclType	int		2568767	0					
ANR	2568844	Identifier	ibyte		2568767	1					
ANR	2568845	IdentifierDeclStatement	uint32_t ci ;	3981:3:147717:147734	2568767	13	True				
ANR	2568846	IdentifierDecl	ci		2568767	0					
ANR	2568847	IdentifierDeclType	uint32_t		2568767	0					
ANR	2568848	Identifier	ci		2568767	1					
ANR	2568849	IdentifierDeclStatement	byte bit ;	3982:3:147739:147755	2568767	14	True				
ANR	2568850	IdentifierDecl	bit		2568767	0					
ANR	2568851	IdentifierDeclType	byte		2568767	0					
ANR	2568852	Identifier	bit		2568767	1					
ANR	2568853	IdentifierDeclStatement	bool first = true ;	3983:3:147760:147785	2568767	15	True				
ANR	2568854	IdentifierDecl	first = true		2568767	0					
ANR	2568855	IdentifierDeclType	bool		2568767	0					
ANR	2568856	Identifier	first		2568767	1					
ANR	2568857	AssignmentExpression	first = true		2568767	2		=			
ANR	2568858	Identifier	true		2568767	0					
ANR	2568859	Identifier	true		2568767	1					
ANR	2568860	ExpressionStatement	"memset ( scan [ 3 ] . bytes , 0 , upd -> nbytes )"	3987:3:147825:147860	2568767	16	True				
ANR	2568861	CallExpression	"memset ( scan [ 3 ] . bytes , 0 , upd -> nbytes )"		2568767	0					
ANR	2568862	Callee	memset		2568767	0					
ANR	2568863	Identifier	memset		2568767	0					
ANR	2568864	ArgumentList	scan [ 3 ] . bytes		2568767	1					
ANR	2568865	Argument	scan [ 3 ] . bytes		2568767	0					
ANR	2568866	MemberAccess	scan [ 3 ] . bytes		2568767	0					
ANR	2568867	ArrayIndexing	scan [ 3 ]		2568767	0					
ANR	2568868	Identifier	scan		2568767	0					
ANR	2568869	PrimaryExpression	3		2568767	1					
ANR	2568870	Identifier	bytes		2568767	1					
ANR	2568871	Argument	0		2568767	1					
ANR	2568872	PrimaryExpression	0		2568767	0					
ANR	2568873	Argument	upd -> nbytes		2568767	2					
ANR	2568874	PtrMemberAccess	upd -> nbytes		2568767	0					
ANR	2568875	Identifier	upd		2568767	0					
ANR	2568876	Identifier	nbytes		2568767	1					
ANR	2568877	ExpressionStatement	"memset ( scan [ 2 ] . bytes , 0 , upd -> nbytes )"	3988:3:147865:147900	2568767	17	True				
ANR	2568878	CallExpression	"memset ( scan [ 2 ] . bytes , 0 , upd -> nbytes )"		2568767	0					
ANR	2568879	Callee	memset		2568767	0					
ANR	2568880	Identifier	memset		2568767	0					
ANR	2568881	ArgumentList	scan [ 2 ] . bytes		2568767	1					
ANR	2568882	Argument	scan [ 2 ] . bytes		2568767	0					
ANR	2568883	MemberAccess	scan [ 2 ] . bytes		2568767	0					
ANR	2568884	ArrayIndexing	scan [ 2 ]		2568767	0					
ANR	2568885	Identifier	scan		2568767	0					
ANR	2568886	PrimaryExpression	2		2568767	1					
ANR	2568887	Identifier	bytes		2568767	1					
ANR	2568888	Argument	0		2568767	1					
ANR	2568889	PrimaryExpression	0		2568767	0					
ANR	2568890	Argument	upd -> nbytes		2568767	2					
ANR	2568891	PtrMemberAccess	upd -> nbytes		2568767	0					
ANR	2568892	Identifier	upd		2568767	0					
ANR	2568893	Identifier	nbytes		2568767	1					
ANR	2568894	ExpressionStatement	"memset ( scan [ 1 ] . bytes , 0 , upd -> nbytes )"	3989:3:147905:147940	2568767	18	True				
ANR	2568895	CallExpression	"memset ( scan [ 1 ] . bytes , 0 , upd -> nbytes )"		2568767	0					
ANR	2568896	Callee	memset		2568767	0					
ANR	2568897	Identifier	memset		2568767	0					
ANR	2568898	ArgumentList	scan [ 1 ] . bytes		2568767	1					
ANR	2568899	Argument	scan [ 1 ] . bytes		2568767	0					
ANR	2568900	MemberAccess	scan [ 1 ] . bytes		2568767	0					
ANR	2568901	ArrayIndexing	scan [ 1 ]		2568767	0					
ANR	2568902	Identifier	scan		2568767	0					
ANR	2568903	PrimaryExpression	1		2568767	1					
ANR	2568904	Identifier	bytes		2568767	1					
ANR	2568905	Argument	0		2568767	1					
ANR	2568906	PrimaryExpression	0		2568767	0					
ANR	2568907	Argument	upd -> nbytes		2568767	2					
ANR	2568908	PtrMemberAccess	upd -> nbytes		2568767	0					
ANR	2568909	Identifier	upd		2568767	0					
ANR	2568910	Identifier	nbytes		2568767	1					
ANR	2568911	ExpressionStatement	"memset ( scan [ 0 ] . bytes , 0 , upd -> nbytes )"	3990:3:147945:147980	2568767	19	True				
ANR	2568912	CallExpression	"memset ( scan [ 0 ] . bytes , 0 , upd -> nbytes )"		2568767	0					
ANR	2568913	Callee	memset		2568767	0					
ANR	2568914	Identifier	memset		2568767	0					
ANR	2568915	ArgumentList	scan [ 0 ] . bytes		2568767	1					
ANR	2568916	Argument	scan [ 0 ] . bytes		2568767	0					
ANR	2568917	MemberAccess	scan [ 0 ] . bytes		2568767	0					
ANR	2568918	ArrayIndexing	scan [ 0 ]		2568767	0					
ANR	2568919	Identifier	scan		2568767	0					
ANR	2568920	PrimaryExpression	0		2568767	1					
ANR	2568921	Identifier	bytes		2568767	1					
ANR	2568922	Argument	0		2568767	1					
ANR	2568923	PrimaryExpression	0		2568767	0					
ANR	2568924	Argument	upd -> nbytes		2568767	2					
ANR	2568925	PtrMemberAccess	upd -> nbytes		2568767	0					
ANR	2568926	Identifier	upd		2568767	0					
ANR	2568927	Identifier	nbytes		2568767	1					
ANR	2568928	IfStatement	if ( upd -> flags & B_REVDIR )		2568767	20					
ANR	2568929	Condition	upd -> flags & B_REVDIR	3994:6:148022:148044	2568767	0	True				
ANR	2568930	BitAndExpression	upd -> flags & B_REVDIR		2568767	0		&			
ANR	2568931	PtrMemberAccess	upd -> flags		2568767	0					
ANR	2568932	Identifier	upd		2568767	0					
ANR	2568933	Identifier	flags		2568767	1					
ANR	2568934	Identifier	B_REVDIR		2568767	1					
ANR	2568935	CompoundStatement		22:31:683:683	2568767	1					
ANR	2568936	IfStatement	if ( upd -> flags & B_YFLIP )		2568767	0					
ANR	2568937	Condition	upd -> flags & B_YFLIP	3996:9:148082:148101	2568767	0	True				
ANR	2568938	BitAndExpression	upd -> flags & B_YFLIP		2568767	0		&			
ANR	2568939	PtrMemberAccess	upd -> flags		2568767	0					
ANR	2568940	Identifier	upd		2568767	0					
ANR	2568941	Identifier	flags		2568767	1					
ANR	2568942	Identifier	B_YFLIP		2568767	1					
ANR	2568943	CompoundStatement		24:31:740:740	2568767	1					
ANR	2568944	ExpressionStatement	dir = 4	3997:9:148115:148126	2568767	0	True				
ANR	2568945	AssignmentExpression	dir = 4		2568767	0		=			
ANR	2568946	Identifier	dir		2568767	0					
ANR	2568947	PrimaryExpression	4		2568767	1					
ANR	2568948	ExpressionStatement	bit = 0x80	3998:9:148137:148151	2568767	1	True				
ANR	2568949	AssignmentExpression	bit = 0x80		2568767	0		=			
ANR	2568950	Identifier	bit		2568767	0					
ANR	2568951	PrimaryExpression	0x80		2568767	1					
ANR	2568952	ExpressionStatement	ibyte = 0	3999:9:148162:148173	2568767	2	True				
ANR	2568953	AssignmentExpression	ibyte = 0		2568767	0		=			
ANR	2568954	Identifier	ibyte		2568767	0					
ANR	2568955	PrimaryExpression	0		2568767	1					
ANR	2568956	ElseStatement	else		2568767	0					
ANR	2568957	CompoundStatement		28:13:824:824	2568767	0					
ANR	2568958	ExpressionStatement	dir = - 4	4001:9:148199:148212	2568767	0	True				
ANR	2568959	AssignmentExpression	dir = - 4		2568767	0		=			
ANR	2568960	Identifier	dir		2568767	0					
ANR	2568961	UnaryOperationExpression	- 4		2568767	1					
ANR	2568962	UnaryOperator	-		2568767	0					
ANR	2568963	PrimaryExpression	4		2568767	1					
ANR	2568964	ExpressionStatement	rowerr += 4 * ( pwidth - 1 )	4002:9:148223:148249	2568767	1	True				
ANR	2568965	AssignmentExpression	rowerr += 4 * ( pwidth - 1 )		2568767	0		+=			
ANR	2568966	Identifier	rowerr		2568767	0					
ANR	2568967	MultiplicativeExpression	4 * ( pwidth - 1 )		2568767	1		*			
ANR	2568968	PrimaryExpression	4		2568767	0					
ANR	2568969	AdditiveExpression	pwidth - 1		2568767	1		-			
ANR	2568970	Identifier	pwidth		2568767	0					
ANR	2568971	PrimaryExpression	1		2568767	1					
ANR	2568972	ExpressionStatement	bit = 0x80 >> ( ( pwidth - 1 ) & 7 )	4003:9:148260:148300	2568767	2	True				
ANR	2568973	AssignmentExpression	bit = 0x80 >> ( ( pwidth - 1 ) & 7 )		2568767	0		=			
ANR	2568974	Identifier	bit		2568767	0					
ANR	2568975	ShiftExpression	0x80 >> ( ( pwidth - 1 ) & 7 )		2568767	1		>>			
ANR	2568976	PrimaryExpression	0x80		2568767	0					
ANR	2568977	BitAndExpression	( pwidth - 1 ) & 7		2568767	1		&			
ANR	2568978	AdditiveExpression	pwidth - 1		2568767	0		-			
ANR	2568979	Identifier	pwidth		2568767	0					
ANR	2568980	PrimaryExpression	1		2568767	1					
ANR	2568981	PrimaryExpression	7		2568767	1					
ANR	2568982	ExpressionStatement	ibyte = ( pwidth - 1 ) >> 3	4004:9:148311:148351	2568767	3	True				
ANR	2568983	AssignmentExpression	ibyte = ( pwidth - 1 ) >> 3		2568767	0		=			
ANR	2568984	Identifier	ibyte		2568767	0					
ANR	2568985	ShiftExpression	( pwidth - 1 ) >> 3		2568767	1		>>			
ANR	2568986	AdditiveExpression	pwidth - 1		2568767	0		-			
ANR	2568987	Identifier	pwidth		2568767	0					
ANR	2568988	PrimaryExpression	1		2568767	1					
ANR	2568989	PrimaryExpression	3		2568767	1					
ANR	2568990	IfStatement	if ( ! ( upd -> flags & B_FSWHITE ) )		2568767	1					
ANR	2568991	Condition	! ( upd -> flags & B_FSWHITE )	4007:9:148371:148395	2568767	0	True				
ANR	2568992	UnaryOperationExpression	! ( upd -> flags & B_FSWHITE )		2568767	0					
ANR	2568993	UnaryOperator	!		2568767	0					
ANR	2568994	BitAndExpression	upd -> flags & B_FSWHITE		2568767	1		&			
ANR	2568995	PtrMemberAccess	upd -> flags		2568767	0					
ANR	2568996	Identifier	upd		2568767	0					
ANR	2568997	Identifier	flags		2568767	1					
ANR	2568998	Identifier	B_FSWHITE		2568767	1					
ANR	2568999	CompoundStatement		35:36:1034:1034	2568767	1					
ANR	2569000	ExpressionStatement	upd_pxlfwd ( upd )	4008:9:148409:148424	2568767	0	True				
ANR	2569001	CallExpression	upd_pxlfwd ( upd )		2568767	0					
ANR	2569002	Callee	upd_pxlfwd		2568767	0					
ANR	2569003	Identifier	upd_pxlfwd		2568767	0					
ANR	2569004	ArgumentList	upd		2568767	1					
ANR	2569005	Argument	upd		2568767	0					
ANR	2569006	Identifier	upd		2568767	0					
ANR	2569007	WhileStatement	while ( ( 0 < pwidth ) && ! upd_pxlget ( upd ) )		2568767	1					
ANR	2569008	Condition	( 0 < pwidth ) && ! upd_pxlget ( upd )	4009:15:148441:148472	2568767	0	True				
ANR	2569009	AndExpression	( 0 < pwidth ) && ! upd_pxlget ( upd )		2568767	0		&&			
ANR	2569010	RelationalExpression	0 < pwidth		2568767	0		<			
ANR	2569011	PrimaryExpression	0		2568767	0					
ANR	2569012	Identifier	pwidth		2568767	1					
ANR	2569013	UnaryOperationExpression	! upd_pxlget ( upd )		2568767	1					
ANR	2569014	UnaryOperator	!		2568767	0					
ANR	2569015	CallExpression	upd_pxlget ( upd )		2568767	1					
ANR	2569016	Callee	upd_pxlget		2568767	0					
ANR	2569017	Identifier	upd_pxlget		2568767	0					
ANR	2569018	ArgumentList	upd		2568767	1					
ANR	2569019	Argument	upd		2568767	0					
ANR	2569020	Identifier	upd		2568767	0					
ANR	2569021	ExpressionStatement	pwidth --	4009:49:148475:148483	2568767	1	True				
ANR	2569022	PostIncDecOperationExpression	pwidth --		2568767	0					
ANR	2569023	Identifier	pwidth		2568767	0					
ANR	2569024	IncDec	--		2568767	1					
ANR	2569025	ExpressionStatement	upd_pxlrev ( upd )	4012:6:148500:148515	2568767	2	True				
ANR	2569026	CallExpression	upd_pxlrev ( upd )		2568767	0					
ANR	2569027	Callee	upd_pxlrev		2568767	0					
ANR	2569028	Identifier	upd_pxlrev		2568767	0					
ANR	2569029	ArgumentList	upd		2568767	1					
ANR	2569030	Argument	upd		2568767	0					
ANR	2569031	Identifier	upd		2568767	0					
ANR	2569032	ElseStatement	else		2568767	0					
ANR	2569033	CompoundStatement		42:10:1164:1164	2568767	0					
ANR	2569034	IfStatement	if ( upd -> flags & B_YFLIP )		2568767	0					
ANR	2569035	Condition	upd -> flags & B_YFLIP	4016:9:148585:148604	2568767	0	True				
ANR	2569036	BitAndExpression	upd -> flags & B_YFLIP		2568767	0		&			
ANR	2569037	PtrMemberAccess	upd -> flags		2568767	0					
ANR	2569038	Identifier	upd		2568767	0					
ANR	2569039	Identifier	flags		2568767	1					
ANR	2569040	Identifier	B_YFLIP		2568767	1					
ANR	2569041	CompoundStatement		44:31:1243:1243	2568767	1					
ANR	2569042	ExpressionStatement	dir = - 4	4017:9:148618:148631	2568767	0	True				
ANR	2569043	AssignmentExpression	dir = - 4		2568767	0		=			
ANR	2569044	Identifier	dir		2568767	0					
ANR	2569045	UnaryOperationExpression	- 4		2568767	1					
ANR	2569046	UnaryOperator	-		2568767	0					
ANR	2569047	PrimaryExpression	4		2568767	1					
ANR	2569048	ExpressionStatement	rowerr += 4 * ( pwidth - 1 )	4018:9:148642:148677	2568767	1	True				
ANR	2569049	AssignmentExpression	rowerr += 4 * ( pwidth - 1 )		2568767	0		+=			
ANR	2569050	Identifier	rowerr		2568767	0					
ANR	2569051	MultiplicativeExpression	4 * ( pwidth - 1 )		2568767	1		*			
ANR	2569052	PrimaryExpression	4		2568767	0					
ANR	2569053	AdditiveExpression	pwidth - 1		2568767	1		-			
ANR	2569054	Identifier	pwidth		2568767	0					
ANR	2569055	PrimaryExpression	1		2568767	1					
ANR	2569056	ExpressionStatement	bit = 0x80 >> ( ( pwidth - 1 ) & 7 )	4019:9:148688:148728	2568767	2	True				
ANR	2569057	AssignmentExpression	bit = 0x80 >> ( ( pwidth - 1 ) & 7 )		2568767	0		=			
ANR	2569058	Identifier	bit		2568767	0					
ANR	2569059	ShiftExpression	0x80 >> ( ( pwidth - 1 ) & 7 )		2568767	1		>>			
ANR	2569060	PrimaryExpression	0x80		2568767	0					
ANR	2569061	BitAndExpression	( pwidth - 1 ) & 7		2568767	1		&			
ANR	2569062	AdditiveExpression	pwidth - 1		2568767	0		-			
ANR	2569063	Identifier	pwidth		2568767	0					
ANR	2569064	PrimaryExpression	1		2568767	1					
ANR	2569065	PrimaryExpression	7		2568767	1					
ANR	2569066	ExpressionStatement	ibyte = ( pwidth - 1 ) >> 3	4020:9:148739:148779	2568767	3	True				
ANR	2569067	AssignmentExpression	ibyte = ( pwidth - 1 ) >> 3		2568767	0		=			
ANR	2569068	Identifier	ibyte		2568767	0					
ANR	2569069	ShiftExpression	( pwidth - 1 ) >> 3		2568767	1		>>			
ANR	2569070	AdditiveExpression	pwidth - 1		2568767	0		-			
ANR	2569071	Identifier	pwidth		2568767	0					
ANR	2569072	PrimaryExpression	1		2568767	1					
ANR	2569073	PrimaryExpression	3		2568767	1					
ANR	2569074	ElseStatement	else		2568767	0					
ANR	2569075	CompoundStatement		49:13:1430:1430	2568767	0					
ANR	2569076	ExpressionStatement	dir = 4	4022:9:148805:148816	2568767	0	True				
ANR	2569077	AssignmentExpression	dir = 4		2568767	0		=			
ANR	2569078	Identifier	dir		2568767	0					
ANR	2569079	PrimaryExpression	4		2568767	1					
ANR	2569080	ExpressionStatement	bit = 0x80	4023:9:148827:148841	2568767	1	True				
ANR	2569081	AssignmentExpression	bit = 0x80		2568767	0		=			
ANR	2569082	Identifier	bit		2568767	0					
ANR	2569083	PrimaryExpression	0x80		2568767	1					
ANR	2569084	ExpressionStatement	ibyte = 0	4024:9:148852:148863	2568767	2	True				
ANR	2569085	AssignmentExpression	ibyte = 0		2568767	0		=			
ANR	2569086	Identifier	ibyte		2568767	0					
ANR	2569087	PrimaryExpression	0		2568767	1					
ANR	2569088	IfStatement	if ( ! ( upd -> flags & B_FSWHITE ) )		2568767	1					
ANR	2569089	Condition	! ( upd -> flags & B_FSWHITE )	4027:9:148883:148907	2568767	0	True				
ANR	2569090	UnaryOperationExpression	! ( upd -> flags & B_FSWHITE )		2568767	0					
ANR	2569091	UnaryOperator	!		2568767	0					
ANR	2569092	BitAndExpression	upd -> flags & B_FSWHITE		2568767	1		&			
ANR	2569093	PtrMemberAccess	upd -> flags		2568767	0					
ANR	2569094	Identifier	upd		2568767	0					
ANR	2569095	Identifier	flags		2568767	1					
ANR	2569096	Identifier	B_FSWHITE		2568767	1					
ANR	2569097	CompoundStatement		55:36:1546:1546	2568767	1					
ANR	2569098	ExpressionStatement	upd_pxlrev ( upd )	4028:9:148921:148936	2568767	0	True				
ANR	2569099	CallExpression	upd_pxlrev ( upd )		2568767	0					
ANR	2569100	Callee	upd_pxlrev		2568767	0					
ANR	2569101	Identifier	upd_pxlrev		2568767	0					
ANR	2569102	ArgumentList	upd		2568767	1					
ANR	2569103	Argument	upd		2568767	0					
ANR	2569104	Identifier	upd		2568767	0					
ANR	2569105	WhileStatement	while ( ( 0 < pwidth ) && ! upd_pxlget ( upd ) )		2568767	1					
ANR	2569106	Condition	( 0 < pwidth ) && ! upd_pxlget ( upd )	4029:15:148953:148984	2568767	0	True				
ANR	2569107	AndExpression	( 0 < pwidth ) && ! upd_pxlget ( upd )		2568767	0		&&			
ANR	2569108	RelationalExpression	0 < pwidth		2568767	0		<			
ANR	2569109	PrimaryExpression	0		2568767	0					
ANR	2569110	Identifier	pwidth		2568767	1					
ANR	2569111	UnaryOperationExpression	! upd_pxlget ( upd )		2568767	1					
ANR	2569112	UnaryOperator	!		2568767	0					
ANR	2569113	CallExpression	upd_pxlget ( upd )		2568767	1					
ANR	2569114	Callee	upd_pxlget		2568767	0					
ANR	2569115	Identifier	upd_pxlget		2568767	0					
ANR	2569116	ArgumentList	upd		2568767	1					
ANR	2569117	Argument	upd		2568767	0					
ANR	2569118	Identifier	upd		2568767	0					
ANR	2569119	ExpressionStatement	pwidth --	4029:49:148987:148995	2568767	1	True				
ANR	2569120	PostIncDecOperationExpression	pwidth --		2568767	0					
ANR	2569121	Identifier	pwidth		2568767	0					
ANR	2569122	IncDec	--		2568767	1					
ANR	2569123	ExpressionStatement	upd_pxlfwd ( upd )	4032:6:149012:149027	2568767	2	True				
ANR	2569124	CallExpression	upd_pxlfwd ( upd )		2568767	0					
ANR	2569125	Callee	upd_pxlfwd		2568767	0					
ANR	2569126	Identifier	upd_pxlfwd		2568767	0					
ANR	2569127	ArgumentList	upd		2568767	1					
ANR	2569128	Argument	upd		2568767	0					
ANR	2569129	Identifier	upd		2568767	0					
ANR	2569130	IfStatement	if ( ! ( upd -> flags & B_FIXDIR ) )		2568767	21					
ANR	2569131	Condition	! ( upd -> flags & B_FIXDIR )	4038:6:149136:149159	2568767	0	True				
ANR	2569132	UnaryOperationExpression	! ( upd -> flags & B_FIXDIR )		2568767	0					
ANR	2569133	UnaryOperator	!		2568767	0					
ANR	2569134	BitAndExpression	upd -> flags & B_FIXDIR		2568767	1		&			
ANR	2569135	PtrMemberAccess	upd -> flags		2568767	0					
ANR	2569136	Identifier	upd		2568767	0					
ANR	2569137	Identifier	flags		2568767	1					
ANR	2569138	Identifier	B_FIXDIR		2568767	1					
ANR	2569139	ExpressionStatement	upd -> flags ^= B_REVDIR	4038:32:149162:149184	2568767	1	True				
ANR	2569140	AssignmentExpression	upd -> flags ^= B_REVDIR		2568767	0		^=			
ANR	2569141	PtrMemberAccess	upd -> flags		2568767	0					
ANR	2569142	Identifier	upd		2568767	0					
ANR	2569143	Identifier	flags		2568767	1					
ANR	2569144	Identifier	B_REVDIR		2568767	1					
ANR	2569145	IfStatement	if ( ! ( upd -> flags & B_FSWHITE ) )		2568767	22					
ANR	2569146	Condition	! ( upd -> flags & B_FSWHITE )	4042:6:149232:149256	2568767	0	True				
ANR	2569147	UnaryOperationExpression	! ( upd -> flags & B_FSWHITE )		2568767	0					
ANR	2569148	UnaryOperator	!		2568767	0					
ANR	2569149	BitAndExpression	upd -> flags & B_FSWHITE		2568767	1		&			
ANR	2569150	PtrMemberAccess	upd -> flags		2568767	0					
ANR	2569151	Identifier	upd		2568767	0					
ANR	2569152	Identifier	flags		2568767	1					
ANR	2569153	Identifier	B_FSWHITE		2568767	1					
ANR	2569154	CompoundStatement		72:6:1948:1985	2568767	1					
ANR	2569155	ExpressionStatement	upd_proc_pxlget ( ( * fun ) ) = upd -> pxlget	4043:6:149267:149304	2568767	0	True				
ANR	2569156	AssignmentExpression	upd_proc_pxlget ( ( * fun ) ) = upd -> pxlget		2568767	0		=			
ANR	2569157	CallExpression	upd_proc_pxlget ( ( * fun ) )		2568767	0					
ANR	2569158	Callee	upd_proc_pxlget		2568767	0					
ANR	2569159	Identifier	upd_proc_pxlget		2568767	0					
ANR	2569160	ArgumentList	* fun		2568767	1					
ANR	2569161	Argument	* fun		2568767	0					
ANR	2569162	UnaryOperationExpression	* fun		2568767	0					
ANR	2569163	UnaryOperator	*		2568767	0					
ANR	2569164	Identifier	fun		2568767	1					
ANR	2569165	PtrMemberAccess	upd -> pxlget		2568767	1					
ANR	2569166	Identifier	upd		2568767	0					
ANR	2569167	Identifier	pxlget		2568767	1					
ANR	2569168	IdentifierDeclStatement	byte * ptr = upd -> pxlptr ;	4044:6:149312:149349	2568767	1	True				
ANR	2569169	IdentifierDecl	* ptr = upd -> pxlptr		2568767	0					
ANR	2569170	IdentifierDeclType	byte *		2568767	0					
ANR	2569171	Identifier	ptr		2568767	1					
ANR	2569172	AssignmentExpression	* ptr = upd -> pxlptr		2568767	2		=			
ANR	2569173	Identifier	ptr		2568767	0					
ANR	2569174	PtrMemberAccess	upd -> pxlptr		2568767	1					
ANR	2569175	Identifier	upd		2568767	0					
ANR	2569176	Identifier	pxlptr		2568767	1					
ANR	2569177	WhileStatement	while ( ( 0 < pwidth ) && ! upd_pxlget ( upd ) )		2568767	2					
ANR	2569178	Condition	( 0 < pwidth ) && ! upd_pxlget ( upd )	4045:12:149363:149394	2568767	0	True				
ANR	2569179	AndExpression	( 0 < pwidth ) && ! upd_pxlget ( upd )		2568767	0		&&			
ANR	2569180	RelationalExpression	0 < pwidth		2568767	0		<			
ANR	2569181	PrimaryExpression	0		2568767	0					
ANR	2569182	Identifier	pwidth		2568767	1					
ANR	2569183	UnaryOperationExpression	! upd_pxlget ( upd )		2568767	1					
ANR	2569184	UnaryOperator	!		2568767	0					
ANR	2569185	CallExpression	upd_pxlget ( upd )		2568767	1					
ANR	2569186	Callee	upd_pxlget		2568767	0					
ANR	2569187	Identifier	upd_pxlget		2568767	0					
ANR	2569188	ArgumentList	upd		2568767	1					
ANR	2569189	Argument	upd		2568767	0					
ANR	2569190	Identifier	upd		2568767	0					
ANR	2569191	CompoundStatement		73:46:2033:2033	2568767	1					
ANR	2569192	ExpressionStatement	pwidth --	4046:9:149408:149416	2568767	0	True				
ANR	2569193	PostIncDecOperationExpression	pwidth --		2568767	0					
ANR	2569194	Identifier	pwidth		2568767	0					
ANR	2569195	IncDec	--		2568767	1					
ANR	2569196	ExpressionStatement	fun = upd -> pxlget	4047:9:149427:149444	2568767	1	True				
ANR	2569197	AssignmentExpression	fun = upd -> pxlget		2568767	0		=			
ANR	2569198	Identifier	fun		2568767	0					
ANR	2569199	PtrMemberAccess	upd -> pxlget		2568767	1					
ANR	2569200	Identifier	upd		2568767	0					
ANR	2569201	Identifier	pxlget		2568767	1					
ANR	2569202	ExpressionStatement	ptr = upd -> pxlptr	4048:9:149455:149472	2568767	2	True				
ANR	2569203	AssignmentExpression	ptr = upd -> pxlptr		2568767	0		=			
ANR	2569204	Identifier	ptr		2568767	0					
ANR	2569205	PtrMemberAccess	upd -> pxlptr		2568767	1					
ANR	2569206	Identifier	upd		2568767	0					
ANR	2569207	Identifier	pxlptr		2568767	1					
ANR	2569208	Statement	S_FSTEP	4049:9:149483:149489	2568767	3	True				
ANR	2569209	ExpressionStatement	upd -> pxlget = fun	4051:6:149505:149522	2568767	3	True				
ANR	2569210	AssignmentExpression	upd -> pxlget = fun		2568767	0		=			
ANR	2569211	PtrMemberAccess	upd -> pxlget		2568767	0					
ANR	2569212	Identifier	upd		2568767	0					
ANR	2569213	Identifier	pxlget		2568767	1					
ANR	2569214	Identifier	fun		2568767	1					
ANR	2569215	ExpressionStatement	upd -> pxlptr = ptr	4052:6:149530:149547	2568767	4	True				
ANR	2569216	AssignmentExpression	upd -> pxlptr = ptr		2568767	0		=			
ANR	2569217	PtrMemberAccess	upd -> pxlptr		2568767	0					
ANR	2569218	Identifier	upd		2568767	0					
ANR	2569219	Identifier	pxlptr		2568767	1					
ANR	2569220	Identifier	ptr		2568767	1					
ANR	2569221	ExpressionStatement	first = true	4057:3:149586:149598	2568767	23	True				
ANR	2569222	AssignmentExpression	first = true		2568767	0		=			
ANR	2569223	Identifier	first		2568767	0					
ANR	2569224	Identifier	true		2568767	1					
ANR	2569225	WhileStatement	while ( 0 < pwidth -- )		2568767	24					
ANR	2569226	Condition	0 < pwidth --	4058:9:149609:149620	2568767	0	True				
ANR	2569227	RelationalExpression	0 < pwidth --		2568767	0		<			
ANR	2569228	PrimaryExpression	0		2568767	0					
ANR	2569229	PostIncDecOperationExpression	pwidth --		2568767	1					
ANR	2569230	Identifier	pwidth		2568767	0					
ANR	2569231	IncDec	--		2568767	1					
ANR	2569232	CompoundStatement		86:23:2259:2259	2568767	1					
ANR	2569233	ExpressionStatement	ci = upd_pxlget ( upd )	4062:6:149662:149682	2568767	0	True				
ANR	2569234	AssignmentExpression	ci = upd_pxlget ( upd )		2568767	0		=			
ANR	2569235	Identifier	ci		2568767	0					
ANR	2569236	CallExpression	upd_pxlget ( upd )		2568767	1					
ANR	2569237	Callee	upd_pxlget		2568767	0					
ANR	2569238	Identifier	upd_pxlget		2568767	0					
ANR	2569239	ArgumentList	upd		2568767	1					
ANR	2569240	Argument	upd		2568767	0					
ANR	2569241	Identifier	upd		2568767	0					
ANR	2569242	Statement	FS_M_ROWERR	4066:6:149724:149734	2568767	1	True				
ANR	2569243	Statement	(	4066:17:149735:149735	2568767	2	True				
ANR	2569244	Statement	0	4066:18:149736:149736	2568767	3	True				
ANR	2569245	Statement	)	4066:19:149737:149737	2568767	4	True				
ANR	2569246	Statement	FS_GOAL	4066:21:149739:149745	2568767	5	True				
ANR	2569247	Statement	(	4066:28:149746:149746	2568767	6	True				
ANR	2569248	Statement	comp	4066:29:149747:149750	2568767	7	True				
ANR	2569249	Statement	[	4066:33:149751:149751	2568767	8	True				
ANR	2569250	Statement	0	4066:34:149752:149752	2568767	9	True				
ANR	2569251	Statement	]	4066:35:149753:149753	2568767	10	True				
ANR	2569252	Statement	->	4066:36:149754:149755	2568767	11	True				
ANR	2569253	Statement	bitmsk	4066:38:149756:149761	2568767	12	True				
ANR	2569254	Statement	&	4066:45:149763:149763	2568767	13	True				
ANR	2569255	Statement	(	4066:47:149765:149765	2568767	14	True				
ANR	2569256	Statement	ci	4066:48:149766:149767	2568767	15	True				
ANR	2569257	Statement	>>	4066:51:149769:149770	2568767	16	True				
ANR	2569258	Statement	comp	4066:54:149772:149775	2568767	17	True				
ANR	2569259	Statement	[	4066:58:149776:149776	2568767	18	True				
ANR	2569260	Statement	0	4066:59:149777:149777	2568767	19	True				
ANR	2569261	Statement	]	4066:60:149778:149778	2568767	20	True				
ANR	2569262	Statement	->	4066:61:149779:149780	2568767	21	True				
ANR	2569263	Statement	bitshf	4066:63:149781:149786	2568767	22	True				
ANR	2569264	Statement	)	4066:69:149787:149787	2568767	23	True				
ANR	2569265	Statement	","	4066:70:149788:149788	2568767	24	True				
ANR	2569266	Statement	0	4066:71:149789:149789	2568767	25	True				
ANR	2569267	Statement	)	4066:72:149790:149790	2568767	26	True				
ANR	2569268	Statement	FS_M_ROWERR	4067:6:149798:149808	2568767	27	True				
ANR	2569269	Statement	(	4067:17:149809:149809	2568767	28	True				
ANR	2569270	Statement	1	4067:18:149810:149810	2568767	29	True				
ANR	2569271	Statement	)	4067:19:149811:149811	2568767	30	True				
ANR	2569272	Statement	FS_GOAL	4067:21:149813:149819	2568767	31	True				
ANR	2569273	Statement	(	4067:28:149820:149820	2568767	32	True				
ANR	2569274	Statement	comp	4067:29:149821:149824	2568767	33	True				
ANR	2569275	Statement	[	4067:33:149825:149825	2568767	34	True				
ANR	2569276	Statement	1	4067:34:149826:149826	2568767	35	True				
ANR	2569277	Statement	]	4067:35:149827:149827	2568767	36	True				
ANR	2569278	Statement	->	4067:36:149828:149829	2568767	37	True				
ANR	2569279	Statement	bitmsk	4067:38:149830:149835	2568767	38	True				
ANR	2569280	Statement	&	4067:45:149837:149837	2568767	39	True				
ANR	2569281	Statement	(	4067:47:149839:149839	2568767	40	True				
ANR	2569282	Statement	ci	4067:48:149840:149841	2568767	41	True				
ANR	2569283	Statement	>>	4067:51:149843:149844	2568767	42	True				
ANR	2569284	Statement	comp	4067:54:149846:149849	2568767	43	True				
ANR	2569285	Statement	[	4067:58:149850:149850	2568767	44	True				
ANR	2569286	Statement	1	4067:59:149851:149851	2568767	45	True				
ANR	2569287	Statement	]	4067:60:149852:149852	2568767	46	True				
ANR	2569288	Statement	->	4067:61:149853:149854	2568767	47	True				
ANR	2569289	Statement	bitshf	4067:63:149855:149860	2568767	48	True				
ANR	2569290	Statement	)	4067:69:149861:149861	2568767	49	True				
ANR	2569291	Statement	","	4067:70:149862:149862	2568767	50	True				
ANR	2569292	Statement	1	4067:71:149863:149863	2568767	51	True				
ANR	2569293	Statement	)	4067:72:149864:149864	2568767	52	True				
ANR	2569294	Statement	FS_M_ROWERR	4068:6:149872:149882	2568767	53	True				
ANR	2569295	Statement	(	4068:17:149883:149883	2568767	54	True				
ANR	2569296	Statement	2	4068:18:149884:149884	2568767	55	True				
ANR	2569297	Statement	)	4068:19:149885:149885	2568767	56	True				
ANR	2569298	Statement	FS_GOAL	4068:21:149887:149893	2568767	57	True				
ANR	2569299	Statement	(	4068:28:149894:149894	2568767	58	True				
ANR	2569300	Statement	comp	4068:29:149895:149898	2568767	59	True				
ANR	2569301	Statement	[	4068:33:149899:149899	2568767	60	True				
ANR	2569302	Statement	2	4068:34:149900:149900	2568767	61	True				
ANR	2569303	Statement	]	4068:35:149901:149901	2568767	62	True				
ANR	2569304	Statement	->	4068:36:149902:149903	2568767	63	True				
ANR	2569305	Statement	bitmsk	4068:38:149904:149909	2568767	64	True				
ANR	2569306	Statement	&	4068:45:149911:149911	2568767	65	True				
ANR	2569307	Statement	(	4068:47:149913:149913	2568767	66	True				
ANR	2569308	Statement	ci	4068:48:149914:149915	2568767	67	True				
ANR	2569309	Statement	>>	4068:51:149917:149918	2568767	68	True				
ANR	2569310	Statement	comp	4068:54:149920:149923	2568767	69	True				
ANR	2569311	Statement	[	4068:58:149924:149924	2568767	70	True				
ANR	2569312	Statement	2	4068:59:149925:149925	2568767	71	True				
ANR	2569313	Statement	]	4068:60:149926:149926	2568767	72	True				
ANR	2569314	Statement	->	4068:61:149927:149928	2568767	73	True				
ANR	2569315	Statement	bitshf	4068:63:149929:149934	2568767	74	True				
ANR	2569316	Statement	)	4068:69:149935:149935	2568767	75	True				
ANR	2569317	Statement	","	4068:70:149936:149936	2568767	76	True				
ANR	2569318	Statement	2	4068:71:149937:149937	2568767	77	True				
ANR	2569319	Statement	)	4068:72:149938:149938	2568767	78	True				
ANR	2569320	Statement	FS_M_ROWERR	4069:6:149946:149956	2568767	79	True				
ANR	2569321	Statement	(	4069:17:149957:149957	2568767	80	True				
ANR	2569322	Statement	3	4069:18:149958:149958	2568767	81	True				
ANR	2569323	Statement	)	4069:19:149959:149959	2568767	82	True				
ANR	2569324	Statement	FS_GOAL	4069:21:149961:149967	2568767	83	True				
ANR	2569325	Statement	(	4069:28:149968:149968	2568767	84	True				
ANR	2569326	Statement	comp	4069:29:149969:149972	2568767	85	True				
ANR	2569327	Statement	[	4069:33:149973:149973	2568767	86	True				
ANR	2569328	Statement	3	4069:34:149974:149974	2568767	87	True				
ANR	2569329	Statement	]	4069:35:149975:149975	2568767	88	True				
ANR	2569330	Statement	->	4069:36:149976:149977	2568767	89	True				
ANR	2569331	Statement	bitmsk	4069:38:149978:149983	2568767	90	True				
ANR	2569332	Statement	&	4069:45:149985:149985	2568767	91	True				
ANR	2569333	Statement	(	4069:47:149987:149987	2568767	92	True				
ANR	2569334	Statement	ci	4069:48:149988:149989	2568767	93	True				
ANR	2569335	Statement	>>	4069:51:149991:149992	2568767	94	True				
ANR	2569336	Statement	comp	4069:54:149994:149997	2568767	95	True				
ANR	2569337	Statement	[	4069:58:149998:149998	2568767	96	True				
ANR	2569338	Statement	3	4069:59:149999:149999	2568767	97	True				
ANR	2569339	Statement	]	4069:60:150000:150000	2568767	98	True				
ANR	2569340	Statement	->	4069:61:150001:150002	2568767	99	True				
ANR	2569341	Statement	bitshf	4069:63:150003:150008	2568767	100	True				
ANR	2569342	Statement	)	4069:69:150009:150009	2568767	101	True				
ANR	2569343	Statement	","	4069:70:150010:150010	2568767	102	True				
ANR	2569344	Statement	3	4069:71:150011:150011	2568767	103	True				
ANR	2569345	Statement	)	4069:72:150012:150012	2568767	104	True				
ANR	2569346	IfStatement	if ( pixel [ 0 ] > comp [ 0 ] -> threshold )		2568767	105					
ANR	2569347	Condition	pixel [ 0 ] > comp [ 0 ] -> threshold	4071:9:150024:150053	2568767	0	True				
ANR	2569348	RelationalExpression	pixel [ 0 ] > comp [ 0 ] -> threshold		2568767	0		>			
ANR	2569349	ArrayIndexing	pixel [ 0 ]		2568767	0					
ANR	2569350	Identifier	pixel		2568767	0					
ANR	2569351	PrimaryExpression	0		2568767	1					
ANR	2569352	PtrMemberAccess	comp [ 0 ] -> threshold		2568767	1					
ANR	2569353	ArrayIndexing	comp [ 0 ]		2568767	0					
ANR	2569354	Identifier	comp		2568767	0					
ANR	2569355	PrimaryExpression	0		2568767	1					
ANR	2569356	Identifier	threshold		2568767	1					
ANR	2569357	CompoundStatement		99:41:2692:2692	2568767	1					
ANR	2569358	ExpressionStatement	pixel [ 0 ] -= comp [ 0 ] -> spotsize	4073:8:150085:150126	2568767	0	True				
ANR	2569359	AssignmentExpression	pixel [ 0 ] -= comp [ 0 ] -> spotsize		2568767	0		-=			
ANR	2569360	ArrayIndexing	pixel [ 0 ]		2568767	0					
ANR	2569361	Identifier	pixel		2568767	0					
ANR	2569362	PrimaryExpression	0		2568767	1					
ANR	2569363	PtrMemberAccess	comp [ 0 ] -> spotsize		2568767	1					
ANR	2569364	ArrayIndexing	comp [ 0 ]		2568767	0					
ANR	2569365	Identifier	comp		2568767	0					
ANR	2569366	PrimaryExpression	0		2568767	1					
ANR	2569367	Identifier	spotsize		2568767	1					
ANR	2569368	ExpressionStatement	scan [ 0 ] . bytes [ ibyte ] |= bit	4074:8:150136:150163	2568767	1	True				
ANR	2569369	AssignmentExpression	scan [ 0 ] . bytes [ ibyte ] |= bit		2568767	0		|=			
ANR	2569370	ArrayIndexing	scan [ 0 ] . bytes [ ibyte ]		2568767	0					
ANR	2569371	MemberAccess	scan [ 0 ] . bytes		2568767	0					
ANR	2569372	ArrayIndexing	scan [ 0 ]		2568767	0					
ANR	2569373	Identifier	scan		2568767	0					
ANR	2569374	PrimaryExpression	0		2568767	1					
ANR	2569375	Identifier	bytes		2568767	1					
ANR	2569376	Identifier	ibyte		2568767	1					
ANR	2569377	Identifier	bit		2568767	1					
ANR	2569378	ElseStatement	else		2568767	0					
ANR	2569379	CompoundStatement		104:13:2815:2815	2568767	0					
ANR	2569380	IfStatement	if ( ( pixel [ 1 ] <= comp [ 1 ] -> threshold ) || ( pixel [ 2 ] <= comp [ 2 ] -> threshold ) || ( pixel [ 3 ] <= comp [ 3 ] -> threshold ) )		2568767	0					
ANR	2569381	Condition	( pixel [ 1 ] <= comp [ 1 ] -> threshold ) || ( pixel [ 2 ] <= comp [ 2 ] -> threshold ) || ( pixel [ 3 ] <= comp [ 3 ] -> threshold )	4078:12:150244:150371	2568767	0	True				
ANR	2569382	OrExpression	( pixel [ 1 ] <= comp [ 1 ] -> threshold ) || ( pixel [ 2 ] <= comp [ 2 ] -> threshold ) || ( pixel [ 3 ] <= comp [ 3 ] -> threshold )		2568767	0		||			
ANR	2569383	RelationalExpression	pixel [ 1 ] <= comp [ 1 ] -> threshold		2568767	0		<=			
ANR	2569384	ArrayIndexing	pixel [ 1 ]		2568767	0					
ANR	2569385	Identifier	pixel		2568767	0					
ANR	2569386	PrimaryExpression	1		2568767	1					
ANR	2569387	PtrMemberAccess	comp [ 1 ] -> threshold		2568767	1					
ANR	2569388	ArrayIndexing	comp [ 1 ]		2568767	0					
ANR	2569389	Identifier	comp		2568767	0					
ANR	2569390	PrimaryExpression	1		2568767	1					
ANR	2569391	Identifier	threshold		2568767	1					
ANR	2569392	OrExpression	( pixel [ 2 ] <= comp [ 2 ] -> threshold ) || ( pixel [ 3 ] <= comp [ 3 ] -> threshold )		2568767	1		||			
ANR	2569393	RelationalExpression	pixel [ 2 ] <= comp [ 2 ] -> threshold		2568767	0		<=			
ANR	2569394	ArrayIndexing	pixel [ 2 ]		2568767	0					
ANR	2569395	Identifier	pixel		2568767	0					
ANR	2569396	PrimaryExpression	2		2568767	1					
ANR	2569397	PtrMemberAccess	comp [ 2 ] -> threshold		2568767	1					
ANR	2569398	ArrayIndexing	comp [ 2 ]		2568767	0					
ANR	2569399	Identifier	comp		2568767	0					
ANR	2569400	PrimaryExpression	2		2568767	1					
ANR	2569401	Identifier	threshold		2568767	1					
ANR	2569402	RelationalExpression	pixel [ 3 ] <= comp [ 3 ] -> threshold		2568767	1		<=			
ANR	2569403	ArrayIndexing	pixel [ 3 ]		2568767	0					
ANR	2569404	Identifier	pixel		2568767	0					
ANR	2569405	PrimaryExpression	3		2568767	1					
ANR	2569406	PtrMemberAccess	comp [ 3 ] -> threshold		2568767	1					
ANR	2569407	ArrayIndexing	comp [ 3 ]		2568767	0					
ANR	2569408	Identifier	comp		2568767	0					
ANR	2569409	PrimaryExpression	3		2568767	1					
ANR	2569410	Identifier	threshold		2568767	1					
ANR	2569411	CompoundStatement		108:49:3013:3013	2568767	1					
ANR	2569412	IfStatement	if ( pixel [ 1 ] > comp [ 1 ] -> threshold )		2568767	0					
ANR	2569413	Condition	pixel [ 1 ] > comp [ 1 ] -> threshold	4082:15:150416:150458	2568767	0	True				
ANR	2569414	RelationalExpression	pixel [ 1 ] > comp [ 1 ] -> threshold		2568767	0		>			
ANR	2569415	ArrayIndexing	pixel [ 1 ]		2568767	0					
ANR	2569416	Identifier	pixel		2568767	0					
ANR	2569417	PrimaryExpression	1		2568767	1					
ANR	2569418	PtrMemberAccess	comp [ 1 ] -> threshold		2568767	1					
ANR	2569419	ArrayIndexing	comp [ 1 ]		2568767	0					
ANR	2569420	Identifier	comp		2568767	0					
ANR	2569421	PrimaryExpression	1		2568767	1					
ANR	2569422	Identifier	threshold		2568767	1					
ANR	2569423	CompoundStatement		110:60:3097:3097	2568767	1					
ANR	2569424	ExpressionStatement	pixel [ 1 ] -= comp [ 1 ] -> spotsize	4083:15:150478:150520	2568767	0	True				
ANR	2569425	AssignmentExpression	pixel [ 1 ] -= comp [ 1 ] -> spotsize		2568767	0		-=			
ANR	2569426	ArrayIndexing	pixel [ 1 ]		2568767	0					
ANR	2569427	Identifier	pixel		2568767	0					
ANR	2569428	PrimaryExpression	1		2568767	1					
ANR	2569429	PtrMemberAccess	comp [ 1 ] -> spotsize		2568767	1					
ANR	2569430	ArrayIndexing	comp [ 1 ]		2568767	0					
ANR	2569431	Identifier	comp		2568767	0					
ANR	2569432	PrimaryExpression	1		2568767	1					
ANR	2569433	Identifier	spotsize		2568767	1					
ANR	2569434	ExpressionStatement	scan [ 1 ] . bytes [ ibyte ] |= bit	4084:16:150538:150565	2568767	1	True				
ANR	2569435	AssignmentExpression	scan [ 1 ] . bytes [ ibyte ] |= bit		2568767	0		|=			
ANR	2569436	ArrayIndexing	scan [ 1 ] . bytes [ ibyte ]		2568767	0					
ANR	2569437	MemberAccess	scan [ 1 ] . bytes		2568767	0					
ANR	2569438	ArrayIndexing	scan [ 1 ]		2568767	0					
ANR	2569439	Identifier	scan		2568767	0					
ANR	2569440	PrimaryExpression	1		2568767	1					
ANR	2569441	Identifier	bytes		2568767	1					
ANR	2569442	Identifier	ibyte		2568767	1					
ANR	2569443	Identifier	bit		2568767	1					
ANR	2569444	IfStatement	if ( pixel [ 2 ] > comp [ 2 ] -> threshold )		2568767	1					
ANR	2569445	Condition	pixel [ 2 ] > comp [ 2 ] -> threshold	4087:15:150597:150639	2568767	0	True				
ANR	2569446	RelationalExpression	pixel [ 2 ] > comp [ 2 ] -> threshold		2568767	0		>			
ANR	2569447	ArrayIndexing	pixel [ 2 ]		2568767	0					
ANR	2569448	Identifier	pixel		2568767	0					
ANR	2569449	PrimaryExpression	2		2568767	1					
ANR	2569450	PtrMemberAccess	comp [ 2 ] -> threshold		2568767	1					
ANR	2569451	ArrayIndexing	comp [ 2 ]		2568767	0					
ANR	2569452	Identifier	comp		2568767	0					
ANR	2569453	PrimaryExpression	2		2568767	1					
ANR	2569454	Identifier	threshold		2568767	1					
ANR	2569455	CompoundStatement		115:60:3278:3278	2568767	1					
ANR	2569456	ExpressionStatement	pixel [ 2 ] -= comp [ 2 ] -> spotsize	4088:15:150659:150701	2568767	0	True				
ANR	2569457	AssignmentExpression	pixel [ 2 ] -= comp [ 2 ] -> spotsize		2568767	0		-=			
ANR	2569458	ArrayIndexing	pixel [ 2 ]		2568767	0					
ANR	2569459	Identifier	pixel		2568767	0					
ANR	2569460	PrimaryExpression	2		2568767	1					
ANR	2569461	PtrMemberAccess	comp [ 2 ] -> spotsize		2568767	1					
ANR	2569462	ArrayIndexing	comp [ 2 ]		2568767	0					
ANR	2569463	Identifier	comp		2568767	0					
ANR	2569464	PrimaryExpression	2		2568767	1					
ANR	2569465	Identifier	spotsize		2568767	1					
ANR	2569466	ExpressionStatement	scan [ 2 ] . bytes [ ibyte ] |= bit	4089:16:150719:150746	2568767	1	True				
ANR	2569467	AssignmentExpression	scan [ 2 ] . bytes [ ibyte ] |= bit		2568767	0		|=			
ANR	2569468	ArrayIndexing	scan [ 2 ] . bytes [ ibyte ]		2568767	0					
ANR	2569469	MemberAccess	scan [ 2 ] . bytes		2568767	0					
ANR	2569470	ArrayIndexing	scan [ 2 ]		2568767	0					
ANR	2569471	Identifier	scan		2568767	0					
ANR	2569472	PrimaryExpression	2		2568767	1					
ANR	2569473	Identifier	bytes		2568767	1					
ANR	2569474	Identifier	ibyte		2568767	1					
ANR	2569475	Identifier	bit		2568767	1					
ANR	2569476	IfStatement	if ( pixel [ 3 ] > comp [ 3 ] -> threshold )		2568767	2					
ANR	2569477	Condition	pixel [ 3 ] > comp [ 3 ] -> threshold	4092:15:150778:150820	2568767	0	True				
ANR	2569478	RelationalExpression	pixel [ 3 ] > comp [ 3 ] -> threshold		2568767	0		>			
ANR	2569479	ArrayIndexing	pixel [ 3 ]		2568767	0					
ANR	2569480	Identifier	pixel		2568767	0					
ANR	2569481	PrimaryExpression	3		2568767	1					
ANR	2569482	PtrMemberAccess	comp [ 3 ] -> threshold		2568767	1					
ANR	2569483	ArrayIndexing	comp [ 3 ]		2568767	0					
ANR	2569484	Identifier	comp		2568767	0					
ANR	2569485	PrimaryExpression	3		2568767	1					
ANR	2569486	Identifier	threshold		2568767	1					
ANR	2569487	CompoundStatement		120:60:3459:3459	2568767	1					
ANR	2569488	ExpressionStatement	pixel [ 3 ] -= comp [ 3 ] -> spotsize	4093:15:150840:150882	2568767	0	True				
ANR	2569489	AssignmentExpression	pixel [ 3 ] -= comp [ 3 ] -> spotsize		2568767	0		-=			
ANR	2569490	ArrayIndexing	pixel [ 3 ]		2568767	0					
ANR	2569491	Identifier	pixel		2568767	0					
ANR	2569492	PrimaryExpression	3		2568767	1					
ANR	2569493	PtrMemberAccess	comp [ 3 ] -> spotsize		2568767	1					
ANR	2569494	ArrayIndexing	comp [ 3 ]		2568767	0					
ANR	2569495	Identifier	comp		2568767	0					
ANR	2569496	PrimaryExpression	3		2568767	1					
ANR	2569497	Identifier	spotsize		2568767	1					
ANR	2569498	ExpressionStatement	scan [ 3 ] . bytes [ ibyte ] |= bit	4094:16:150900:150927	2568767	1	True				
ANR	2569499	AssignmentExpression	scan [ 3 ] . bytes [ ibyte ] |= bit		2568767	0		|=			
ANR	2569500	ArrayIndexing	scan [ 3 ] . bytes [ ibyte ]		2568767	0					
ANR	2569501	MemberAccess	scan [ 3 ] . bytes		2568767	0					
ANR	2569502	ArrayIndexing	scan [ 3 ]		2568767	0					
ANR	2569503	Identifier	scan		2568767	0					
ANR	2569504	PrimaryExpression	3		2568767	1					
ANR	2569505	Identifier	bytes		2568767	1					
ANR	2569506	Identifier	ibyte		2568767	1					
ANR	2569507	Identifier	bit		2568767	1					
ANR	2569508	ElseStatement	else		2568767	0					
ANR	2569509	CompoundStatement		125:16:3596:3596	2568767	0					
ANR	2569510	ExpressionStatement	pixel [ 1 ] -= comp [ 1 ] -> spotsize	4098:12:150974:151016	2568767	0	True				
ANR	2569511	AssignmentExpression	pixel [ 1 ] -= comp [ 1 ] -> spotsize		2568767	0		-=			
ANR	2569512	ArrayIndexing	pixel [ 1 ]		2568767	0					
ANR	2569513	Identifier	pixel		2568767	0					
ANR	2569514	PrimaryExpression	1		2568767	1					
ANR	2569515	PtrMemberAccess	comp [ 1 ] -> spotsize		2568767	1					
ANR	2569516	ArrayIndexing	comp [ 1 ]		2568767	0					
ANR	2569517	Identifier	comp		2568767	0					
ANR	2569518	PrimaryExpression	1		2568767	1					
ANR	2569519	Identifier	spotsize		2568767	1					
ANR	2569520	ExpressionStatement	pixel [ 2 ] -= comp [ 2 ] -> spotsize	4099:12:151030:151072	2568767	1	True				
ANR	2569521	AssignmentExpression	pixel [ 2 ] -= comp [ 2 ] -> spotsize		2568767	0		-=			
ANR	2569522	ArrayIndexing	pixel [ 2 ]		2568767	0					
ANR	2569523	Identifier	pixel		2568767	0					
ANR	2569524	PrimaryExpression	2		2568767	1					
ANR	2569525	PtrMemberAccess	comp [ 2 ] -> spotsize		2568767	1					
ANR	2569526	ArrayIndexing	comp [ 2 ]		2568767	0					
ANR	2569527	Identifier	comp		2568767	0					
ANR	2569528	PrimaryExpression	2		2568767	1					
ANR	2569529	Identifier	spotsize		2568767	1					
ANR	2569530	ExpressionStatement	pixel [ 3 ] -= comp [ 3 ] -> spotsize	4100:12:151086:151128	2568767	2	True				
ANR	2569531	AssignmentExpression	pixel [ 3 ] -= comp [ 3 ] -> spotsize		2568767	0		-=			
ANR	2569532	ArrayIndexing	pixel [ 3 ]		2568767	0					
ANR	2569533	Identifier	pixel		2568767	0					
ANR	2569534	PrimaryExpression	3		2568767	1					
ANR	2569535	PtrMemberAccess	comp [ 3 ] -> spotsize		2568767	1					
ANR	2569536	ArrayIndexing	comp [ 3 ]		2568767	0					
ANR	2569537	Identifier	comp		2568767	0					
ANR	2569538	PrimaryExpression	3		2568767	1					
ANR	2569539	Identifier	spotsize		2568767	1					
ANR	2569540	ExpressionStatement	scan [ 0 ] . bytes [ ibyte ] |= bit	4101:12:151142:151169	2568767	3	True				
ANR	2569541	AssignmentExpression	scan [ 0 ] . bytes [ ibyte ] |= bit		2568767	0		|=			
ANR	2569542	ArrayIndexing	scan [ 0 ] . bytes [ ibyte ]		2568767	0					
ANR	2569543	MemberAccess	scan [ 0 ] . bytes		2568767	0					
ANR	2569544	ArrayIndexing	scan [ 0 ]		2568767	0					
ANR	2569545	Identifier	scan		2568767	0					
ANR	2569546	PrimaryExpression	0		2568767	1					
ANR	2569547	Identifier	bytes		2568767	1					
ANR	2569548	Identifier	ibyte		2568767	1					
ANR	2569549	Identifier	bit		2568767	1					
ANR	2569550	Statement	FS_DIST	4105:6:151197:151203	2568767	106	True				
ANR	2569551	Statement	(	4105:13:151204:151204	2568767	107	True				
ANR	2569552	Statement	0	4105:14:151205:151205	2568767	108	True				
ANR	2569553	Statement	)	4105:15:151206:151206	2568767	109	True				
ANR	2569554	Statement	FS_DIST	4106:6:151214:151220	2568767	110	True				
ANR	2569555	Statement	(	4106:13:151221:151221	2568767	111	True				
ANR	2569556	Statement	1	4106:14:151222:151222	2568767	112	True				
ANR	2569557	Statement	)	4106:15:151223:151223	2568767	113	True				
ANR	2569558	Statement	FS_DIST	4107:6:151231:151237	2568767	114	True				
ANR	2569559	Statement	(	4107:13:151238:151238	2568767	115	True				
ANR	2569560	Statement	2	4107:14:151239:151239	2568767	116	True				
ANR	2569561	Statement	)	4107:15:151240:151240	2568767	117	True				
ANR	2569562	Statement	FS_DIST	4108:6:151248:151254	2568767	118	True				
ANR	2569563	Statement	(	4108:13:151255:151255	2568767	119	True				
ANR	2569564	Statement	3	4108:14:151256:151256	2568767	120	True				
ANR	2569565	Statement	)	4108:15:151257:151257	2568767	121	True				
ANR	2569566	Statement	S_FSTEP	4113:6:151330:151336	2568767	122	True				
ANR	2569567	IfStatement	if ( 0 < upd -> nlimits )		2568767	25					
ANR	2569568	Condition	0 < upd -> nlimits	4118:6:151391:151406	2568767	0	True				
ANR	2569569	RelationalExpression	0 < upd -> nlimits		2568767	0		<			
ANR	2569570	PrimaryExpression	0		2568767	0					
ANR	2569571	PtrMemberAccess	upd -> nlimits		2568767	1					
ANR	2569572	Identifier	upd		2568767	0					
ANR	2569573	Identifier	nlimits		2568767	1					
ANR	2569574	ExpressionStatement	"upd_limits ( upd , true )"	4118:24:151409:151429	2568767	1	True				
ANR	2569575	CallExpression	"upd_limits ( upd , true )"		2568767	0					
ANR	2569576	Callee	upd_limits		2568767	0					
ANR	2569577	Identifier	upd_limits		2568767	0					
ANR	2569578	ArgumentList	upd		2568767	1					
ANR	2569579	Argument	upd		2568767	0					
ANR	2569580	Identifier	upd		2568767	0					
ANR	2569581	Argument	true		2568767	1					
ANR	2569582	Identifier	true		2568767	0					
ANR	2569583	ReturnStatement	return 0 ;	4119:3:151434:151442	2568767	26	True				
ANR	2569584	PrimaryExpression	0		2568767	0					
ANR	2569585	ReturnType	static int		2568767	1					
ANR	2569586	Identifier	upd_fscmy_k		2568767	2					
ANR	2569587	ParameterList	upd_p upd		2568767	3					
ANR	2569588	Parameter	upd_p upd	3972:12:147352:147360	2568767	0	True				
ANR	2569589	ParameterType	upd_p		2568767	0					
ANR	2569590	Identifier	upd		2568767	1					
ANR	2569591	CFGEntryNode	ENTRY		2568767		True				
ANR	2569592	CFGExitNode	EXIT		2568767		True				
ANR	2569593	Symbol	comp [ 0 ] -> threshold		2568767						
ANR	2569594	Symbol	ibyte		2568767						
ANR	2569595	Symbol	pwidth		2568767						
ANR	2569596	Symbol	scan [ 1 ] . bytes		2568767						
ANR	2569597	Symbol	dir		2568767						
ANR	2569598	Symbol	bit		2568767						
ANR	2569599	Symbol	comp [ 3 ] -> spotsize		2568767						
ANR	2569600	Symbol	upd -> rwidth		2568767						
ANR	2569601	Symbol	upd -> valbuf		2568767						
ANR	2569602	Symbol	upd -> nlimits		2568767						
ANR	2569603	Symbol	rowerr		2568767						
ANR	2569604	Symbol	* scan		2568767						
ANR	2569605	Symbol	scan [ 2 ] . bytes		2568767						
ANR	2569606	Symbol	comp [ 3 ] -> threshold		2568767						
ANR	2569607	Symbol	upd_pxlget		2568767						
ANR	2569608	Symbol	upd -> nbytes		2568767						
ANR	2569609	Symbol	* scan [ 0 ] . bytes		2568767						
ANR	2569610	Symbol	upd -> valptr		2568767						
ANR	2569611	Symbol	comp		2568767						
ANR	2569612	Symbol	* upd -> scnbuf		2568767						
ANR	2569613	Symbol	comp [ 2 ] -> threshold		2568767						
ANR	2569614	Symbol	comp [ 0 ] -> spotsize		2568767						
ANR	2569615	Symbol	upd		2568767						
ANR	2569616	Symbol	* pixel		2568767						
ANR	2569617	Symbol	* ibyte		2568767						
ANR	2569618	Symbol	* * comp		2568767						
ANR	2569619	Symbol	upd_proc_pxlget		2568767						
ANR	2569620	Symbol	* upd -> yscnbuf		2568767						
ANR	2569621	Symbol	comp [ 1 ] -> threshold		2568767						
ANR	2569622	Symbol	upd -> yscnbuf		2568767						
ANR	2569623	Symbol	* * scan		2568767						
ANR	2569624	Symbol	true		2568767						
ANR	2569625	Symbol	* scan [ 1 ] . bytes		2568767						
ANR	2569626	Symbol	upd -> pxlptr		2568767						
ANR	2569627	Symbol	comp [ 1 ] -> spotsize		2568767						
ANR	2569628	Symbol	* scan [ 2 ] . bytes		2568767						
ANR	2569629	Symbol	scan		2568767						
ANR	2569630	Symbol	upd -> ncomp		2568767						
ANR	2569631	Symbol	upd -> flags		2568767						
ANR	2569632	Symbol	* upd		2568767						
ANR	2569633	Symbol	* fun		2568767						
ANR	2569634	Symbol	* comp		2568767						
ANR	2569635	Symbol	* upd -> scnmsk		2568767						
ANR	2569636	Symbol	colerr		2568767						
ANR	2569637	Symbol	pixel		2568767						
ANR	2569638	Symbol	* scan [ 3 ] . bytes		2568767						
ANR	2569639	Symbol	upd -> scnmsk		2568767						
ANR	2569640	Symbol	ci		2568767						
ANR	2569641	Symbol	upd -> pxlget		2568767						
ANR	2569642	Symbol	B_FSWHITE		2568767						
ANR	2569643	Symbol	B_FIXDIR		2568767						
ANR	2569644	Symbol	comp [ 2 ] -> spotsize		2568767						
ANR	2569645	Symbol	scan [ 0 ] . bytes		2568767						
ANR	2569646	Symbol	ptr		2568767						
ANR	2569647	Symbol	upd -> scnbuf		2568767						
ANR	2569648	Symbol	B_YFLIP		2568767						
ANR	2569649	Symbol	B_REVDIR		2568767						
ANR	2569650	Symbol	* * upd		2568767						
ANR	2569651	Symbol	first		2568767						
ANR	2569652	Symbol	fun		2568767						
ANR	2569653	Symbol	scan [ 3 ] . bytes		2568767						
ANR	2569654	Function	upd_open_writer	4126:0:151670:164412							
ANR	2569655	FunctionDef	upd_open_writer (upd_device * udev)		2569654	0					
ANR	2569656	CompoundStatement		4128:0:151715:164412	2569654	0					
ANR	2569657	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	4129:3:151720:151763	2569654	0	True				
ANR	2569658	IdentifierDecl	upd = udev -> upd		2569654	0					
ANR	2569659	IdentifierDeclType	const upd_p		2569654	0					
ANR	2569660	Identifier	upd		2569654	1					
ANR	2569661	AssignmentExpression	upd = udev -> upd		2569654	2		=			
ANR	2569662	Identifier	upd		2569654	0					
ANR	2569663	PtrMemberAccess	udev -> upd		2569654	1					
ANR	2569664	Identifier	udev		2569654	0					
ANR	2569665	Identifier	upd		2569654	1					
ANR	2569666	IdentifierDeclStatement	bool success = true ;	4130:3:151768:151806	2569654	1	True				
ANR	2569667	IdentifierDecl	success = true		2569654	0					
ANR	2569668	IdentifierDeclType	bool		2569654	0					
ANR	2569669	Identifier	success		2569654	1					
ANR	2569670	AssignmentExpression	success = true		2569654	2		=			
ANR	2569671	Identifier	true		2569654	0					
ANR	2569672	Identifier	true		2569654	1					
ANR	2569673	ExpressionStatement	upd -> start_writer = NULL	4133:3:151844:151868	2569654	2	True				
ANR	2569674	AssignmentExpression	upd -> start_writer = NULL		2569654	0		=			
ANR	2569675	PtrMemberAccess	upd -> start_writer		2569654	0					
ANR	2569676	Identifier	upd		2569654	0					
ANR	2569677	Identifier	start_writer		2569654	1					
ANR	2569678	Identifier	NULL		2569654	1					
ANR	2569679	ExpressionStatement	upd -> writer = NULL	4134:3:151873:151897	2569654	3	True				
ANR	2569680	AssignmentExpression	upd -> writer = NULL		2569654	0		=			
ANR	2569681	PtrMemberAccess	upd -> writer		2569654	0					
ANR	2569682	Identifier	upd		2569654	0					
ANR	2569683	Identifier	writer		2569654	1					
ANR	2569684	Identifier	NULL		2569654	1					
ANR	2569685	ExpressionStatement	upd -> scnbuf = NULL	4135:3:151902:151926	2569654	4	True				
ANR	2569686	AssignmentExpression	upd -> scnbuf = NULL		2569654	0		=			
ANR	2569687	PtrMemberAccess	upd -> scnbuf		2569654	0					
ANR	2569688	Identifier	upd		2569654	0					
ANR	2569689	Identifier	scnbuf		2569654	1					
ANR	2569690	Identifier	NULL		2569654	1					
ANR	2569691	ExpressionStatement	upd -> nscnbuf = 0	4136:3:151931:151952	2569654	5	True				
ANR	2569692	AssignmentExpression	upd -> nscnbuf = 0		2569654	0		=			
ANR	2569693	PtrMemberAccess	upd -> nscnbuf		2569654	0					
ANR	2569694	Identifier	upd		2569654	0					
ANR	2569695	Identifier	nscnbuf		2569654	1					
ANR	2569696	PrimaryExpression	0		2569654	1					
ANR	2569697	ExpressionStatement	upd -> nbytes = 0	4137:3:151957:151978	2569654	6	True				
ANR	2569698	AssignmentExpression	upd -> nbytes = 0		2569654	0		=			
ANR	2569699	PtrMemberAccess	upd -> nbytes		2569654	0					
ANR	2569700	Identifier	upd		2569654	0					
ANR	2569701	Identifier	nbytes		2569654	1					
ANR	2569702	PrimaryExpression	0		2569654	1					
ANR	2569703	ExpressionStatement	upd -> nlimits = 0	4138:3:151983:152004	2569654	7	True				
ANR	2569704	AssignmentExpression	upd -> nlimits = 0		2569654	0		=			
ANR	2569705	PtrMemberAccess	upd -> nlimits		2569654	0					
ANR	2569706	Identifier	upd		2569654	0					
ANR	2569707	Identifier	nlimits		2569654	1					
ANR	2569708	PrimaryExpression	0		2569654	1					
ANR	2569709	ExpressionStatement	upd -> outbuf = NULL	4139:3:152009:152033	2569654	8	True				
ANR	2569710	AssignmentExpression	upd -> outbuf = NULL		2569654	0		=			
ANR	2569711	PtrMemberAccess	upd -> outbuf		2569654	0					
ANR	2569712	Identifier	upd		2569654	0					
ANR	2569713	Identifier	outbuf		2569654	1					
ANR	2569714	Identifier	NULL		2569654	1					
ANR	2569715	ExpressionStatement	upd -> noutbuf = 0	4140:3:152038:152059	2569654	9	True				
ANR	2569716	AssignmentExpression	upd -> noutbuf = 0		2569654	0		=			
ANR	2569717	PtrMemberAccess	upd -> noutbuf		2569654	0					
ANR	2569718	Identifier	upd		2569654	0					
ANR	2569719	Identifier	noutbuf		2569654	1					
ANR	2569720	PrimaryExpression	0		2569654	1					
ANR	2569721	IfStatement	if ( B_RENDER != ( ( B_RENDER | B_ERROR ) & upd -> flags ) )		2569654	10					
ANR	2569722	Condition	B_RENDER != ( ( B_RENDER | B_ERROR ) & upd -> flags )	4143:6:152119:152165	2569654	0	True				
ANR	2569723	EqualityExpression	B_RENDER != ( ( B_RENDER | B_ERROR ) & upd -> flags )		2569654	0		!=			
ANR	2569724	Identifier	B_RENDER		2569654	0					
ANR	2569725	BitAndExpression	( B_RENDER | B_ERROR ) & upd -> flags		2569654	1		&			
ANR	2569726	InclusiveOrExpression	B_RENDER | B_ERROR		2569654	0		|			
ANR	2569727	Identifier	B_RENDER		2569654	0					
ANR	2569728	Identifier	B_ERROR		2569654	1					
ANR	2569729	PtrMemberAccess	upd -> flags		2569654	1					
ANR	2569730	Identifier	upd		2569654	0					
ANR	2569731	Identifier	flags		2569654	1					
ANR	2569732	ExpressionStatement	success = false	4144:6:152174:152189	2569654	1	True				
ANR	2569733	AssignmentExpression	success = false		2569654	0		=			
ANR	2569734	Identifier	success		2569654	0					
ANR	2569735	Identifier	false		2569654	1					
ANR	2569736	ExpressionStatement	upd -> ocomp = upd -> ncomp	4147:3:152230:152253	2569654	11	True				
ANR	2569737	AssignmentExpression	upd -> ocomp = upd -> ncomp		2569654	0		=			
ANR	2569738	PtrMemberAccess	upd -> ocomp		2569654	0					
ANR	2569739	Identifier	upd		2569654	0					
ANR	2569740	Identifier	ocomp		2569654	1					
ANR	2569741	PtrMemberAccess	upd -> ncomp		2569654	1					
ANR	2569742	Identifier	upd		2569654	0					
ANR	2569743	Identifier	ncomp		2569654	1					
ANR	2569744	IfStatement	if ( 0 < upd -> ints [ I_OCOMP ] )		2569654	12					
ANR	2569745	Condition	0 < upd -> ints [ I_OCOMP ]	4148:6:152261:152282	2569654	0	True				
ANR	2569746	RelationalExpression	0 < upd -> ints [ I_OCOMP ]		2569654	0		<			
ANR	2569747	PrimaryExpression	0		2569654	0					
ANR	2569748	ArrayIndexing	upd -> ints [ I_OCOMP ]		2569654	1					
ANR	2569749	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2569750	Identifier	upd		2569654	0					
ANR	2569751	Identifier	ints		2569654	1					
ANR	2569752	Identifier	I_OCOMP		2569654	1					
ANR	2569753	ExpressionStatement	upd -> ocomp = upd -> ints [ I_OCOMP ]	4148:30:152285:152316	2569654	1	True				
ANR	2569754	AssignmentExpression	upd -> ocomp = upd -> ints [ I_OCOMP ]		2569654	0		=			
ANR	2569755	PtrMemberAccess	upd -> ocomp		2569654	0					
ANR	2569756	Identifier	upd		2569654	0					
ANR	2569757	Identifier	ocomp		2569654	1					
ANR	2569758	ArrayIndexing	upd -> ints [ I_OCOMP ]		2569654	1					
ANR	2569759	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2569760	Identifier	upd		2569654	0					
ANR	2569761	Identifier	ints		2569654	1					
ANR	2569762	Identifier	I_OCOMP		2569654	1					
ANR	2569763	IfStatement	if ( success )		2569654	13					
ANR	2569764	Condition	success	4151:6:152356:152362	2569654	0	True				
ANR	2569765	Identifier	success		2569654	0					
ANR	2569766	CompoundStatement		24:15:649:649	2569654	1					
ANR	2569767	IfStatement	if ( 1 > upd -> ints [ I_NYPASS ] )		2569654	0					
ANR	2569768	Condition	1 > upd -> ints [ I_NYPASS ]	4154:9:152436:152459	2569654	0	True				
ANR	2569769	RelationalExpression	1 > upd -> ints [ I_NYPASS ]		2569654	0		>			
ANR	2569770	PrimaryExpression	1		2569654	0					
ANR	2569771	ArrayIndexing	upd -> ints [ I_NYPASS ]		2569654	1					
ANR	2569772	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2569773	Identifier	upd		2569654	0					
ANR	2569774	Identifier	ints		2569654	1					
ANR	2569775	Identifier	I_NYPASS		2569654	1					
ANR	2569776	ExpressionStatement	upd -> ints [ I_NYPASS ] = 1	4154:35:152462:152485	2569654	1	True				
ANR	2569777	AssignmentExpression	upd -> ints [ I_NYPASS ] = 1		2569654	0		=			
ANR	2569778	ArrayIndexing	upd -> ints [ I_NYPASS ]		2569654	0					
ANR	2569779	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2569780	Identifier	upd		2569654	0					
ANR	2569781	Identifier	ints		2569654	1					
ANR	2569782	Identifier	I_NYPASS		2569654	1					
ANR	2569783	PrimaryExpression	1		2569654	1					
ANR	2569784	IfStatement	if ( 1 > upd -> ints [ I_NXPASS ] )		2569654	1					
ANR	2569785	Condition	1 > upd -> ints [ I_NXPASS ]	4155:9:152496:152519	2569654	0	True				
ANR	2569786	RelationalExpression	1 > upd -> ints [ I_NXPASS ]		2569654	0		>			
ANR	2569787	PrimaryExpression	1		2569654	0					
ANR	2569788	ArrayIndexing	upd -> ints [ I_NXPASS ]		2569654	1					
ANR	2569789	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2569790	Identifier	upd		2569654	0					
ANR	2569791	Identifier	ints		2569654	1					
ANR	2569792	Identifier	I_NXPASS		2569654	1					
ANR	2569793	ExpressionStatement	upd -> ints [ I_NXPASS ] = 1	4155:35:152522:152545	2569654	1	True				
ANR	2569794	AssignmentExpression	upd -> ints [ I_NXPASS ] = 1		2569654	0		=			
ANR	2569795	ArrayIndexing	upd -> ints [ I_NXPASS ]		2569654	0					
ANR	2569796	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2569797	Identifier	upd		2569654	0					
ANR	2569798	Identifier	ints		2569654	1					
ANR	2569799	Identifier	I_NXPASS		2569654	1					
ANR	2569800	PrimaryExpression	1		2569654	1					
ANR	2569801	IfStatement	if ( 1 > upd -> ints [ I_PINS2WRITE ] )		2569654	2					
ANR	2569802	Condition	1 > upd -> ints [ I_PINS2WRITE ]	4156:9:152556:152583	2569654	0	True				
ANR	2569803	RelationalExpression	1 > upd -> ints [ I_PINS2WRITE ]		2569654	0		>			
ANR	2569804	PrimaryExpression	1		2569654	0					
ANR	2569805	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		2569654	1					
ANR	2569806	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2569807	Identifier	upd		2569654	0					
ANR	2569808	Identifier	ints		2569654	1					
ANR	2569809	Identifier	I_PINS2WRITE		2569654	1					
ANR	2569810	ExpressionStatement	upd -> ints [ I_PINS2WRITE ] = 1	4156:39:152586:152613	2569654	1	True				
ANR	2569811	AssignmentExpression	upd -> ints [ I_PINS2WRITE ] = 1		2569654	0		=			
ANR	2569812	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		2569654	0					
ANR	2569813	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2569814	Identifier	upd		2569654	0					
ANR	2569815	Identifier	ints		2569654	1					
ANR	2569816	Identifier	I_PINS2WRITE		2569654	1					
ANR	2569817	PrimaryExpression	1		2569654	1					
ANR	2569818	IfStatement	if ( ( upd -> ints [ I_NXPASS ] * upd -> ints [ I_NYPASS ] ) > upd -> ints [ I_NPASS ] )		2569654	3					
ANR	2569819	Condition	( upd -> ints [ I_NXPASS ] * upd -> ints [ I_NYPASS ] ) > upd -> ints [ I_NPASS ]	4158:9:152625:152688	2569654	0	True				
ANR	2569820	RelationalExpression	( upd -> ints [ I_NXPASS ] * upd -> ints [ I_NYPASS ] ) > upd -> ints [ I_NPASS ]		2569654	0		>			
ANR	2569821	MultiplicativeExpression	upd -> ints [ I_NXPASS ] * upd -> ints [ I_NYPASS ]		2569654	0		*			
ANR	2569822	ArrayIndexing	upd -> ints [ I_NXPASS ]		2569654	0					
ANR	2569823	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2569824	Identifier	upd		2569654	0					
ANR	2569825	Identifier	ints		2569654	1					
ANR	2569826	Identifier	I_NXPASS		2569654	1					
ANR	2569827	ArrayIndexing	upd -> ints [ I_NYPASS ]		2569654	1					
ANR	2569828	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2569829	Identifier	upd		2569654	0					
ANR	2569830	Identifier	ints		2569654	1					
ANR	2569831	Identifier	I_NYPASS		2569654	1					
ANR	2569832	ArrayIndexing	upd -> ints [ I_NPASS ]		2569654	1					
ANR	2569833	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2569834	Identifier	upd		2569654	0					
ANR	2569835	Identifier	ints		2569654	1					
ANR	2569836	Identifier	I_NPASS		2569654	1					
ANR	2569837	ExpressionStatement	upd -> ints [ I_NPASS ] = upd -> ints [ I_NXPASS ] * upd -> ints [ I_NYPASS ]	4159:9:152700:152762	2569654	1	True				
ANR	2569838	AssignmentExpression	upd -> ints [ I_NPASS ] = upd -> ints [ I_NXPASS ] * upd -> ints [ I_NYPASS ]		2569654	0		=			
ANR	2569839	ArrayIndexing	upd -> ints [ I_NPASS ]		2569654	0					
ANR	2569840	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2569841	Identifier	upd		2569654	0					
ANR	2569842	Identifier	ints		2569654	1					
ANR	2569843	Identifier	I_NPASS		2569654	1					
ANR	2569844	MultiplicativeExpression	upd -> ints [ I_NXPASS ] * upd -> ints [ I_NYPASS ]		2569654	1		*			
ANR	2569845	ArrayIndexing	upd -> ints [ I_NXPASS ]		2569654	0					
ANR	2569846	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2569847	Identifier	upd		2569654	0					
ANR	2569848	Identifier	ints		2569654	1					
ANR	2569849	Identifier	I_NXPASS		2569654	1					
ANR	2569850	ArrayIndexing	upd -> ints [ I_NYPASS ]		2569654	1					
ANR	2569851	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2569852	Identifier	upd		2569654	0					
ANR	2569853	Identifier	ints		2569654	1					
ANR	2569854	Identifier	I_NYPASS		2569654	1					
ANR	2569855	IfStatement	if ( upd -> ints [ I_NPASS ] > upd -> int_a [ IA_STD_DY ] . size )		2569654	4					
ANR	2569856	Condition	upd -> ints [ I_NPASS ] > upd -> int_a [ IA_STD_DY ] . size	4163:9:152813:152859	2569654	0	True				
ANR	2569857	RelationalExpression	upd -> ints [ I_NPASS ] > upd -> int_a [ IA_STD_DY ] . size		2569654	0		>			
ANR	2569858	ArrayIndexing	upd -> ints [ I_NPASS ]		2569654	0					
ANR	2569859	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2569860	Identifier	upd		2569654	0					
ANR	2569861	Identifier	ints		2569654	1					
ANR	2569862	Identifier	I_NPASS		2569654	1					
ANR	2569863	MemberAccess	upd -> int_a [ IA_STD_DY ] . size		2569654	1					
ANR	2569864	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		2569654	0					
ANR	2569865	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2569866	Identifier	upd		2569654	0					
ANR	2569867	Identifier	int_a		2569654	1					
ANR	2569868	Identifier	IA_STD_DY		2569654	1					
ANR	2569869	Identifier	size		2569654	1					
ANR	2569870	CompoundStatement		37:9:1157:1170	2569654	1					
ANR	2569871	IdentifierDeclStatement	"int ix , iy , * ip ;"	4164:9:152873:152886	2569654	0	True				
ANR	2569872	IdentifierDecl	ix		2569654	0					
ANR	2569873	IdentifierDeclType	int		2569654	0					
ANR	2569874	Identifier	ix		2569654	1					
ANR	2569875	IdentifierDecl	iy		2569654	1					
ANR	2569876	IdentifierDeclType	int		2569654	0					
ANR	2569877	Identifier	iy		2569654	1					
ANR	2569878	IdentifierDecl	* ip		2569654	2					
ANR	2569879	IdentifierDeclType	int *		2569654	0					
ANR	2569880	Identifier	ip		2569654	1					
ANR	2569881	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> int_a [ IA_STD_DY ] )"	4165:9:152897:152950	2569654	1	True				
ANR	2569882	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> int_a [ IA_STD_DY ] )"		2569654	0					
ANR	2569883	Callee	UPD_MM_DEL_PARAM		2569654	0					
ANR	2569884	Identifier	UPD_MM_DEL_PARAM		2569654	0					
ANR	2569885	ArgumentList	udev -> memory		2569654	1					
ANR	2569886	Argument	udev -> memory		2569654	0					
ANR	2569887	PtrMemberAccess	udev -> memory		2569654	0					
ANR	2569888	Identifier	udev		2569654	0					
ANR	2569889	Identifier	memory		2569654	1					
ANR	2569890	Argument	upd -> int_a [ IA_STD_DY ]		2569654	1					
ANR	2569891	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		2569654	0					
ANR	2569892	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2569893	Identifier	upd		2569654	0					
ANR	2569894	Identifier	int_a		2569654	1					
ANR	2569895	Identifier	IA_STD_DY		2569654	1					
ANR	2569896	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , ip , upd -> ints [ I_NPASS ] )"	4166:9:152961:153014	2569654	2	True				
ANR	2569897	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , ip , upd -> ints [ I_NPASS ] )"		2569654	0					
ANR	2569898	Callee	UPD_MM_GET_ARRAY		2569654	0					
ANR	2569899	Identifier	UPD_MM_GET_ARRAY		2569654	0					
ANR	2569900	ArgumentList	udev -> memory		2569654	1					
ANR	2569901	Argument	udev -> memory		2569654	0					
ANR	2569902	PtrMemberAccess	udev -> memory		2569654	0					
ANR	2569903	Identifier	udev		2569654	0					
ANR	2569904	Identifier	memory		2569654	1					
ANR	2569905	Argument	ip		2569654	1					
ANR	2569906	Identifier	ip		2569654	0					
ANR	2569907	Argument	upd -> ints [ I_NPASS ]		2569654	2					
ANR	2569908	ArrayIndexing	upd -> ints [ I_NPASS ]		2569654	0					
ANR	2569909	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2569910	Identifier	upd		2569654	0					
ANR	2569911	Identifier	ints		2569654	1					
ANR	2569912	Identifier	I_NPASS		2569654	1					
ANR	2569913	ExpressionStatement	upd -> int_a [ IA_STD_DY ] . data = ip	4167:9:153025:153056	2569654	3	True				
ANR	2569914	AssignmentExpression	upd -> int_a [ IA_STD_DY ] . data = ip		2569654	0		=			
ANR	2569915	MemberAccess	upd -> int_a [ IA_STD_DY ] . data		2569654	0					
ANR	2569916	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		2569654	0					
ANR	2569917	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2569918	Identifier	upd		2569654	0					
ANR	2569919	Identifier	int_a		2569654	1					
ANR	2569920	Identifier	IA_STD_DY		2569654	1					
ANR	2569921	Identifier	data		2569654	1					
ANR	2569922	Identifier	ip		2569654	1					
ANR	2569923	ExpressionStatement	upd -> int_a [ IA_STD_DY ] . size = upd -> ints [ I_NPASS ]	4168:9:153067:153114	2569654	4	True				
ANR	2569924	AssignmentExpression	upd -> int_a [ IA_STD_DY ] . size = upd -> ints [ I_NPASS ]		2569654	0		=			
ANR	2569925	MemberAccess	upd -> int_a [ IA_STD_DY ] . size		2569654	0					
ANR	2569926	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		2569654	0					
ANR	2569927	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2569928	Identifier	upd		2569654	0					
ANR	2569929	Identifier	int_a		2569654	1					
ANR	2569930	Identifier	IA_STD_DY		2569654	1					
ANR	2569931	Identifier	size		2569654	1					
ANR	2569932	ArrayIndexing	upd -> ints [ I_NPASS ]		2569654	1					
ANR	2569933	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2569934	Identifier	upd		2569654	0					
ANR	2569935	Identifier	ints		2569654	1					
ANR	2569936	Identifier	I_NPASS		2569654	1					
ANR	2569937	ForStatement	for ( iy = 1 ; iy < upd -> ints [ I_NYPASS ] ; ++ iy )		2569654	5					
ANR	2569938	ForInit	iy = 1 ;	4170:13:153130:153136	2569654	0	True				
ANR	2569939	AssignmentExpression	iy = 1		2569654	0		=			
ANR	2569940	Identifier	iy		2569654	0					
ANR	2569941	PrimaryExpression	1		2569654	1					
ANR	2569942	Condition	iy < upd -> ints [ I_NYPASS ]	4170:21:153138:153161	2569654	1	True				
ANR	2569943	RelationalExpression	iy < upd -> ints [ I_NYPASS ]		2569654	0		<			
ANR	2569944	Identifier	iy		2569654	0					
ANR	2569945	ArrayIndexing	upd -> ints [ I_NYPASS ]		2569654	1					
ANR	2569946	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2569947	Identifier	upd		2569654	0					
ANR	2569948	Identifier	ints		2569654	1					
ANR	2569949	Identifier	I_NYPASS		2569654	1					
ANR	2569950	UnaryExpression	++ iy	4170:47:153164:153167	2569654	2	True				
ANR	2569951	IncDec	++		2569654	0					
ANR	2569952	Identifier	iy		2569654	1					
ANR	2569953	CompoundStatement		43:53:1454:1454	2569654	3					
ANR	2569954	ForStatement	for ( ix = 1 ; ix < upd -> ints [ I_NXPASS ] ; ++ ix )		2569654	0					
ANR	2569955	ForInit	ix = 1 ;	4171:16:153188:153194	2569654	0	True				
ANR	2569956	AssignmentExpression	ix = 1		2569654	0		=			
ANR	2569957	Identifier	ix		2569654	0					
ANR	2569958	PrimaryExpression	1		2569654	1					
ANR	2569959	Condition	ix < upd -> ints [ I_NXPASS ]	4171:24:153196:153219	2569654	1	True				
ANR	2569960	RelationalExpression	ix < upd -> ints [ I_NXPASS ]		2569654	0		<			
ANR	2569961	Identifier	ix		2569654	0					
ANR	2569962	ArrayIndexing	upd -> ints [ I_NXPASS ]		2569654	1					
ANR	2569963	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2569964	Identifier	upd		2569654	0					
ANR	2569965	Identifier	ints		2569654	1					
ANR	2569966	Identifier	I_NXPASS		2569654	1					
ANR	2569967	UnaryExpression	++ ix	4171:50:153222:153225	2569654	2	True				
ANR	2569968	IncDec	++		2569654	0					
ANR	2569969	Identifier	ix		2569654	1					
ANR	2569970	ExpressionStatement	* ip ++ = 0	4171:56:153228:153237	2569654	3	True				
ANR	2569971	AssignmentExpression	* ip ++ = 0		2569654	0		=			
ANR	2569972	UnaryOperationExpression	* ip ++		2569654	0					
ANR	2569973	UnaryOperator	*		2569654	0					
ANR	2569974	PostIncDecOperationExpression	ip ++		2569654	1					
ANR	2569975	Identifier	ip		2569654	0					
ANR	2569976	IncDec	++		2569654	1					
ANR	2569977	PrimaryExpression	0		2569654	1					
ANR	2569978	ExpressionStatement	* ip ++ = 1	4172:12:153251:153260	2569654	1	True				
ANR	2569979	AssignmentExpression	* ip ++ = 1		2569654	0		=			
ANR	2569980	UnaryOperationExpression	* ip ++		2569654	0					
ANR	2569981	UnaryOperator	*		2569654	0					
ANR	2569982	PostIncDecOperationExpression	ip ++		2569654	1					
ANR	2569983	Identifier	ip		2569654	0					
ANR	2569984	IncDec	++		2569654	1					
ANR	2569985	PrimaryExpression	1		2569654	1					
ANR	2569986	ForStatement	for ( ix = 1 ; ix < upd -> ints [ I_NXPASS ] ; ++ ix )		2569654	6					
ANR	2569987	ForInit	ix = 1 ;	4174:13:153286:153292	2569654	0	True				
ANR	2569988	AssignmentExpression	ix = 1		2569654	0		=			
ANR	2569989	Identifier	ix		2569654	0					
ANR	2569990	PrimaryExpression	1		2569654	1					
ANR	2569991	Condition	ix < upd -> ints [ I_NXPASS ]	4174:21:153294:153317	2569654	1	True				
ANR	2569992	RelationalExpression	ix < upd -> ints [ I_NXPASS ]		2569654	0		<			
ANR	2569993	Identifier	ix		2569654	0					
ANR	2569994	ArrayIndexing	upd -> ints [ I_NXPASS ]		2569654	1					
ANR	2569995	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2569996	Identifier	upd		2569654	0					
ANR	2569997	Identifier	ints		2569654	1					
ANR	2569998	Identifier	I_NXPASS		2569654	1					
ANR	2569999	UnaryExpression	++ ix	4174:47:153320:153323	2569654	2	True				
ANR	2570000	IncDec	++		2569654	0					
ANR	2570001	Identifier	ix		2569654	1					
ANR	2570002	ExpressionStatement	* ip ++ = 0	4174:53:153326:153335	2569654	3	True				
ANR	2570003	AssignmentExpression	* ip ++ = 0		2569654	0		=			
ANR	2570004	UnaryOperationExpression	* ip ++		2569654	0					
ANR	2570005	UnaryOperator	*		2569654	0					
ANR	2570006	PostIncDecOperationExpression	ip ++		2569654	1					
ANR	2570007	Identifier	ip		2569654	0					
ANR	2570008	IncDec	++		2569654	1					
ANR	2570009	PrimaryExpression	0		2569654	1					
ANR	2570010	ExpressionStatement	* ip = upd -> ints [ I_NYPASS ] * upd -> ints [ I_PINS2WRITE ] - upd -> ints [ I_NYPASS ] + 1	4175:9:153346:153436	2569654	7	True				
ANR	2570011	AssignmentExpression	* ip = upd -> ints [ I_NYPASS ] * upd -> ints [ I_PINS2WRITE ] - upd -> ints [ I_NYPASS ] + 1		2569654	0		=			
ANR	2570012	UnaryOperationExpression	* ip		2569654	0					
ANR	2570013	UnaryOperator	*		2569654	0					
ANR	2570014	Identifier	ip		2569654	1					
ANR	2570015	AdditiveExpression	upd -> ints [ I_NYPASS ] * upd -> ints [ I_PINS2WRITE ] - upd -> ints [ I_NYPASS ] + 1		2569654	1		-			
ANR	2570016	MultiplicativeExpression	upd -> ints [ I_NYPASS ] * upd -> ints [ I_PINS2WRITE ]		2569654	0		*			
ANR	2570017	ArrayIndexing	upd -> ints [ I_NYPASS ]		2569654	0					
ANR	2570018	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570019	Identifier	upd		2569654	0					
ANR	2570020	Identifier	ints		2569654	1					
ANR	2570021	Identifier	I_NYPASS		2569654	1					
ANR	2570022	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		2569654	1					
ANR	2570023	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570024	Identifier	upd		2569654	0					
ANR	2570025	Identifier	ints		2569654	1					
ANR	2570026	Identifier	I_PINS2WRITE		2569654	1					
ANR	2570027	AdditiveExpression	upd -> ints [ I_NYPASS ] + 1		2569654	1		+			
ANR	2570028	ArrayIndexing	upd -> ints [ I_NYPASS ]		2569654	0					
ANR	2570029	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570030	Identifier	upd		2569654	0					
ANR	2570031	Identifier	ints		2569654	1					
ANR	2570032	Identifier	I_NYPASS		2569654	1					
ANR	2570033	PrimaryExpression	1		2569654	1					
ANR	2570034	ExpressionStatement	upd -> ints [ I_BEG_Y ] = 0	4178:9:153448:153470	2569654	8	True				
ANR	2570035	AssignmentExpression	upd -> ints [ I_BEG_Y ] = 0		2569654	0		=			
ANR	2570036	ArrayIndexing	upd -> ints [ I_BEG_Y ]		2569654	0					
ANR	2570037	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570038	Identifier	upd		2569654	0					
ANR	2570039	Identifier	ints		2569654	1					
ANR	2570040	Identifier	I_BEG_Y		2569654	1					
ANR	2570041	PrimaryExpression	0		2569654	1					
ANR	2570042	ExpressionStatement	upd -> ints [ I_END_Y ] = upd -> ints [ I_PHEIGHT ] ? upd -> ints [ I_PHEIGHT ] : upd -> gsheight	4179:9:153481:153591	2569654	9	True				
ANR	2570043	AssignmentExpression	upd -> ints [ I_END_Y ] = upd -> ints [ I_PHEIGHT ] ? upd -> ints [ I_PHEIGHT ] : upd -> gsheight		2569654	0		=			
ANR	2570044	ArrayIndexing	upd -> ints [ I_END_Y ]		2569654	0					
ANR	2570045	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570046	Identifier	upd		2569654	0					
ANR	2570047	Identifier	ints		2569654	1					
ANR	2570048	Identifier	I_END_Y		2569654	1					
ANR	2570049	ConditionalExpression	upd -> ints [ I_PHEIGHT ] ? upd -> ints [ I_PHEIGHT ] : upd -> gsheight		2569654	1					
ANR	2570050	Condition	upd -> ints [ I_PHEIGHT ]		2569654	0					
ANR	2570051	ArrayIndexing	upd -> ints [ I_PHEIGHT ]		2569654	0					
ANR	2570052	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570053	Identifier	upd		2569654	0					
ANR	2570054	Identifier	ints		2569654	1					
ANR	2570055	Identifier	I_PHEIGHT		2569654	1					
ANR	2570056	ArrayIndexing	upd -> ints [ I_PHEIGHT ]		2569654	1					
ANR	2570057	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570058	Identifier	upd		2569654	0					
ANR	2570059	Identifier	ints		2569654	1					
ANR	2570060	Identifier	I_PHEIGHT		2569654	1					
ANR	2570061	PtrMemberAccess	upd -> gsheight		2569654	2					
ANR	2570062	Identifier	upd		2569654	0					
ANR	2570063	Identifier	gsheight		2569654	1					
ANR	2570064	IfStatement	if ( 0 >= upd -> ints [ I_BEG_Y ] )		2569654	5					
ANR	2570065	Condition	0 >= upd -> ints [ I_BEG_Y ]	4184:9:153633:153655	2569654	0	True				
ANR	2570066	RelationalExpression	0 >= upd -> ints [ I_BEG_Y ]		2569654	0		>=			
ANR	2570067	PrimaryExpression	0		2569654	0					
ANR	2570068	ArrayIndexing	upd -> ints [ I_BEG_Y ]		2569654	1					
ANR	2570069	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570070	Identifier	upd		2569654	0					
ANR	2570071	Identifier	ints		2569654	1					
ANR	2570072	Identifier	I_BEG_Y		2569654	1					
ANR	2570073	CompoundStatement		57:34:1942:1942	2569654	1					
ANR	2570074	IfStatement	if ( 0 < upd -> int_a [ IA_BEG_DY ] . size )		2569654	0					
ANR	2570075	Condition	0 < upd -> int_a [ IA_BEG_DY ] . size	4185:12:153672:153702	2569654	0	True				
ANR	2570076	RelationalExpression	0 < upd -> int_a [ IA_BEG_DY ] . size		2569654	0		<			
ANR	2570077	PrimaryExpression	0		2569654	0					
ANR	2570078	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		2569654	1					
ANR	2570079	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		2569654	0					
ANR	2570080	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570081	Identifier	upd		2569654	0					
ANR	2570082	Identifier	int_a		2569654	1					
ANR	2570083	Identifier	IA_BEG_DY		2569654	1					
ANR	2570084	Identifier	size		2569654	1					
ANR	2570085	CompoundStatement		59:12:2003:2016	2569654	1					
ANR	2570086	IdentifierDeclStatement	"int i , sum = 0 ;"	4186:12:153719:153732	2569654	0	True				
ANR	2570087	IdentifierDecl	i		2569654	0					
ANR	2570088	IdentifierDeclType	int		2569654	0					
ANR	2570089	Identifier	i		2569654	1					
ANR	2570090	IdentifierDecl	sum = 0		2569654	1					
ANR	2570091	IdentifierDeclType	int		2569654	0					
ANR	2570092	Identifier	sum		2569654	1					
ANR	2570093	AssignmentExpression	sum = 0		2569654	2		=			
ANR	2570094	Identifier	sum		2569654	0					
ANR	2570095	PrimaryExpression	0		2569654	1					
ANR	2570096	ForStatement	for ( i = 0 ; i < upd -> int_a [ IA_BEG_DY ] . size ; ++ i )		2569654	1					
ANR	2570097	ForInit	i = 0 ;	4187:16:153750:153755	2569654	0	True				
ANR	2570098	AssignmentExpression	i = 0		2569654	0		=			
ANR	2570099	Identifier	i		2569654	0					
ANR	2570100	PrimaryExpression	0		2569654	1					
ANR	2570101	Condition	i < upd -> int_a [ IA_BEG_DY ] . size	4187:23:153757:153786	2569654	1	True				
ANR	2570102	RelationalExpression	i < upd -> int_a [ IA_BEG_DY ] . size		2569654	0		<			
ANR	2570103	Identifier	i		2569654	0					
ANR	2570104	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		2569654	1					
ANR	2570105	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		2569654	0					
ANR	2570106	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570107	Identifier	upd		2569654	0					
ANR	2570108	Identifier	int_a		2569654	1					
ANR	2570109	Identifier	IA_BEG_DY		2569654	1					
ANR	2570110	Identifier	size		2569654	1					
ANR	2570111	UnaryExpression	++ i	4187:55:153789:153791	2569654	2	True				
ANR	2570112	IncDec	++		2569654	0					
ANR	2570113	Identifier	i		2569654	1					
ANR	2570114	ExpressionStatement	sum += upd -> int_a [ IA_BEG_DY ] . data [ i ]	4188:15:153809:153846	2569654	3	True				
ANR	2570115	AssignmentExpression	sum += upd -> int_a [ IA_BEG_DY ] . data [ i ]		2569654	0		+=			
ANR	2570116	Identifier	sum		2569654	0					
ANR	2570117	ArrayIndexing	upd -> int_a [ IA_BEG_DY ] . data [ i ]		2569654	1					
ANR	2570118	MemberAccess	upd -> int_a [ IA_BEG_DY ] . data		2569654	0					
ANR	2570119	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		2569654	0					
ANR	2570120	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570121	Identifier	upd		2569654	0					
ANR	2570122	Identifier	int_a		2569654	1					
ANR	2570123	Identifier	IA_BEG_DY		2569654	1					
ANR	2570124	Identifier	data		2569654	1					
ANR	2570125	Identifier	i		2569654	1					
ANR	2570126	ExpressionStatement	upd -> ints [ I_BEG_Y ] = sum	4189:12:153860:153884	2569654	2	True				
ANR	2570127	AssignmentExpression	upd -> ints [ I_BEG_Y ] = sum		2569654	0		=			
ANR	2570128	ArrayIndexing	upd -> ints [ I_BEG_Y ]		2569654	0					
ANR	2570129	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570130	Identifier	upd		2569654	0					
ANR	2570131	Identifier	ints		2569654	1					
ANR	2570132	Identifier	I_BEG_Y		2569654	1					
ANR	2570133	Identifier	sum		2569654	1					
ANR	2570134	ElseStatement	else		2569654	0					
ANR	2570135	CompoundStatement		63:16:2186:2186	2569654	0					
ANR	2570136	ExpressionStatement	upd -> ints [ I_BEG_Y ] = 0	4191:12:153916:153938	2569654	0	True				
ANR	2570137	AssignmentExpression	upd -> ints [ I_BEG_Y ] = 0		2569654	0		=			
ANR	2570138	ArrayIndexing	upd -> ints [ I_BEG_Y ]		2569654	0					
ANR	2570139	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570140	Identifier	upd		2569654	0					
ANR	2570141	Identifier	ints		2569654	1					
ANR	2570142	Identifier	I_BEG_Y		2569654	1					
ANR	2570143	PrimaryExpression	0		2569654	1					
ANR	2570144	IfStatement	if ( 0 >= upd -> int_a [ IA_ENDTOP ] . size || 0 >= upd -> int_a [ IA_END_DY ] . size )		2569654	6					
ANR	2570145	Condition	0 >= upd -> int_a [ IA_ENDTOP ] . size || 0 >= upd -> int_a [ IA_END_DY ] . size	4200:9:154202:154276	2569654	0	True				
ANR	2570146	OrExpression	0 >= upd -> int_a [ IA_ENDTOP ] . size || 0 >= upd -> int_a [ IA_END_DY ] . size		2569654	0		||			
ANR	2570147	RelationalExpression	0 >= upd -> int_a [ IA_ENDTOP ] . size		2569654	0		>=			
ANR	2570148	PrimaryExpression	0		2569654	0					
ANR	2570149	MemberAccess	upd -> int_a [ IA_ENDTOP ] . size		2569654	1					
ANR	2570150	ArrayIndexing	upd -> int_a [ IA_ENDTOP ]		2569654	0					
ANR	2570151	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570152	Identifier	upd		2569654	0					
ANR	2570153	Identifier	int_a		2569654	1					
ANR	2570154	Identifier	IA_ENDTOP		2569654	1					
ANR	2570155	Identifier	size		2569654	1					
ANR	2570156	RelationalExpression	0 >= upd -> int_a [ IA_END_DY ] . size		2569654	1		>=			
ANR	2570157	PrimaryExpression	0		2569654	0					
ANR	2570158	MemberAccess	upd -> int_a [ IA_END_DY ] . size		2569654	1					
ANR	2570159	ArrayIndexing	upd -> int_a [ IA_END_DY ]		2569654	0					
ANR	2570160	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570161	Identifier	upd		2569654	0					
ANR	2570162	Identifier	int_a		2569654	1					
ANR	2570163	Identifier	IA_END_DY		2569654	1					
ANR	2570164	Identifier	size		2569654	1					
ANR	2570165	ExpressionStatement	upd -> ints [ I_END_Y ] = upd -> ints [ I_PHEIGHT ] ? upd -> ints [ I_PHEIGHT ] : upd -> gsheight	4201:45:154282:154371	2569654	1	True				
ANR	2570166	AssignmentExpression	upd -> ints [ I_END_Y ] = upd -> ints [ I_PHEIGHT ] ? upd -> ints [ I_PHEIGHT ] : upd -> gsheight		2569654	0		=			
ANR	2570167	ArrayIndexing	upd -> ints [ I_END_Y ]		2569654	0					
ANR	2570168	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570169	Identifier	upd		2569654	0					
ANR	2570170	Identifier	ints		2569654	1					
ANR	2570171	Identifier	I_END_Y		2569654	1					
ANR	2570172	ConditionalExpression	upd -> ints [ I_PHEIGHT ] ? upd -> ints [ I_PHEIGHT ] : upd -> gsheight		2569654	1					
ANR	2570173	Condition	upd -> ints [ I_PHEIGHT ]		2569654	0					
ANR	2570174	ArrayIndexing	upd -> ints [ I_PHEIGHT ]		2569654	0					
ANR	2570175	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570176	Identifier	upd		2569654	0					
ANR	2570177	Identifier	ints		2569654	1					
ANR	2570178	Identifier	I_PHEIGHT		2569654	1					
ANR	2570179	ArrayIndexing	upd -> ints [ I_PHEIGHT ]		2569654	1					
ANR	2570180	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570181	Identifier	upd		2569654	0					
ANR	2570182	Identifier	ints		2569654	1					
ANR	2570183	Identifier	I_PHEIGHT		2569654	1					
ANR	2570184	PtrMemberAccess	upd -> gsheight		2569654	2					
ANR	2570185	Identifier	upd		2569654	0					
ANR	2570186	Identifier	gsheight		2569654	1					
ANR	2570187	IfStatement	if ( 0 >= upd -> ints [ I_END_Y ] )		2569654	7					
ANR	2570188	Condition	0 >= upd -> ints [ I_END_Y ]	4204:9:154383:154405	2569654	0	True				
ANR	2570189	RelationalExpression	0 >= upd -> ints [ I_END_Y ]		2569654	0		>=			
ANR	2570190	PrimaryExpression	0		2569654	0					
ANR	2570191	ArrayIndexing	upd -> ints [ I_END_Y ]		2569654	1					
ANR	2570192	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570193	Identifier	upd		2569654	0					
ANR	2570194	Identifier	ints		2569654	1					
ANR	2570195	Identifier	I_END_Y		2569654	1					
ANR	2570196	ExpressionStatement	upd -> ints [ I_END_Y ] = upd -> ints [ I_PHEIGHT ] ? upd -> ints [ I_PHEIGHT ] : upd -> gsheight	4204:34:154408:154496	2569654	1	True				
ANR	2570197	AssignmentExpression	upd -> ints [ I_END_Y ] = upd -> ints [ I_PHEIGHT ] ? upd -> ints [ I_PHEIGHT ] : upd -> gsheight		2569654	0		=			
ANR	2570198	ArrayIndexing	upd -> ints [ I_END_Y ]		2569654	0					
ANR	2570199	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570200	Identifier	upd		2569654	0					
ANR	2570201	Identifier	ints		2569654	1					
ANR	2570202	Identifier	I_END_Y		2569654	1					
ANR	2570203	ConditionalExpression	upd -> ints [ I_PHEIGHT ] ? upd -> ints [ I_PHEIGHT ] : upd -> gsheight		2569654	1					
ANR	2570204	Condition	upd -> ints [ I_PHEIGHT ]		2569654	0					
ANR	2570205	ArrayIndexing	upd -> ints [ I_PHEIGHT ]		2569654	0					
ANR	2570206	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570207	Identifier	upd		2569654	0					
ANR	2570208	Identifier	ints		2569654	1					
ANR	2570209	Identifier	I_PHEIGHT		2569654	1					
ANR	2570210	ArrayIndexing	upd -> ints [ I_PHEIGHT ]		2569654	1					
ANR	2570211	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570212	Identifier	upd		2569654	0					
ANR	2570213	Identifier	ints		2569654	1					
ANR	2570214	Identifier	I_PHEIGHT		2569654	1					
ANR	2570215	PtrMemberAccess	upd -> gsheight		2569654	2					
ANR	2570216	Identifier	upd		2569654	0					
ANR	2570217	Identifier	gsheight		2569654	1					
ANR	2570218	IfStatement	if ( 0 >= upd -> int_a [ IA_STD_IX ] . size )		2569654	8					
ANR	2570219	Condition	0 >= upd -> int_a [ IA_STD_IX ] . size	4209:9:154542:154572	2569654	0	True				
ANR	2570220	RelationalExpression	0 >= upd -> int_a [ IA_STD_IX ] . size		2569654	0		>=			
ANR	2570221	PrimaryExpression	0		2569654	0					
ANR	2570222	MemberAccess	upd -> int_a [ IA_STD_IX ] . size		2569654	1					
ANR	2570223	ArrayIndexing	upd -> int_a [ IA_STD_IX ]		2569654	0					
ANR	2570224	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570225	Identifier	upd		2569654	0					
ANR	2570226	Identifier	int_a		2569654	1					
ANR	2570227	Identifier	IA_STD_IX		2569654	1					
ANR	2570228	Identifier	size		2569654	1					
ANR	2570229	CompoundStatement		83:9:2870:2882	2569654	1					
ANR	2570230	IdentifierDeclStatement	"int ix , i , * ip ;"	4210:9:154586:154598	2569654	0	True				
ANR	2570231	IdentifierDecl	ix		2569654	0					
ANR	2570232	IdentifierDeclType	int		2569654	0					
ANR	2570233	Identifier	ix		2569654	1					
ANR	2570234	IdentifierDecl	i		2569654	1					
ANR	2570235	IdentifierDeclType	int		2569654	0					
ANR	2570236	Identifier	i		2569654	1					
ANR	2570237	IdentifierDecl	* ip		2569654	2					
ANR	2570238	IdentifierDeclType	int *		2569654	0					
ANR	2570239	Identifier	ip		2569654	1					
ANR	2570240	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> int_a [ IA_STD_IX ] )"	4211:9:154609:154662	2569654	1	True				
ANR	2570241	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> int_a [ IA_STD_IX ] )"		2569654	0					
ANR	2570242	Callee	UPD_MM_DEL_PARAM		2569654	0					
ANR	2570243	Identifier	UPD_MM_DEL_PARAM		2569654	0					
ANR	2570244	ArgumentList	udev -> memory		2569654	1					
ANR	2570245	Argument	udev -> memory		2569654	0					
ANR	2570246	PtrMemberAccess	udev -> memory		2569654	0					
ANR	2570247	Identifier	udev		2569654	0					
ANR	2570248	Identifier	memory		2569654	1					
ANR	2570249	Argument	upd -> int_a [ IA_STD_IX ]		2569654	1					
ANR	2570250	ArrayIndexing	upd -> int_a [ IA_STD_IX ]		2569654	0					
ANR	2570251	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570252	Identifier	upd		2569654	0					
ANR	2570253	Identifier	int_a		2569654	1					
ANR	2570254	Identifier	IA_STD_IX		2569654	1					
ANR	2570255	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , ip , upd -> int_a [ IA_STD_DY ] . size )"	4212:9:154673:154734	2569654	2	True				
ANR	2570256	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , ip , upd -> int_a [ IA_STD_DY ] . size )"		2569654	0					
ANR	2570257	Callee	UPD_MM_GET_ARRAY		2569654	0					
ANR	2570258	Identifier	UPD_MM_GET_ARRAY		2569654	0					
ANR	2570259	ArgumentList	udev -> memory		2569654	1					
ANR	2570260	Argument	udev -> memory		2569654	0					
ANR	2570261	PtrMemberAccess	udev -> memory		2569654	0					
ANR	2570262	Identifier	udev		2569654	0					
ANR	2570263	Identifier	memory		2569654	1					
ANR	2570264	Argument	ip		2569654	1					
ANR	2570265	Identifier	ip		2569654	0					
ANR	2570266	Argument	upd -> int_a [ IA_STD_DY ] . size		2569654	2					
ANR	2570267	MemberAccess	upd -> int_a [ IA_STD_DY ] . size		2569654	0					
ANR	2570268	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		2569654	0					
ANR	2570269	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570270	Identifier	upd		2569654	0					
ANR	2570271	Identifier	int_a		2569654	1					
ANR	2570272	Identifier	IA_STD_DY		2569654	1					
ANR	2570273	Identifier	size		2569654	1					
ANR	2570274	ExpressionStatement	upd -> int_a [ IA_STD_IX ] . data = ip	4213:9:154745:154776	2569654	3	True				
ANR	2570275	AssignmentExpression	upd -> int_a [ IA_STD_IX ] . data = ip		2569654	0		=			
ANR	2570276	MemberAccess	upd -> int_a [ IA_STD_IX ] . data		2569654	0					
ANR	2570277	ArrayIndexing	upd -> int_a [ IA_STD_IX ]		2569654	0					
ANR	2570278	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570279	Identifier	upd		2569654	0					
ANR	2570280	Identifier	int_a		2569654	1					
ANR	2570281	Identifier	IA_STD_IX		2569654	1					
ANR	2570282	Identifier	data		2569654	1					
ANR	2570283	Identifier	ip		2569654	1					
ANR	2570284	ExpressionStatement	upd -> int_a [ IA_STD_IX ] . size = upd -> int_a [ IA_STD_DY ] . size	4214:9:154787:154842	2569654	4	True				
ANR	2570285	AssignmentExpression	upd -> int_a [ IA_STD_IX ] . size = upd -> int_a [ IA_STD_DY ] . size		2569654	0		=			
ANR	2570286	MemberAccess	upd -> int_a [ IA_STD_IX ] . size		2569654	0					
ANR	2570287	ArrayIndexing	upd -> int_a [ IA_STD_IX ]		2569654	0					
ANR	2570288	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570289	Identifier	upd		2569654	0					
ANR	2570290	Identifier	int_a		2569654	1					
ANR	2570291	Identifier	IA_STD_IX		2569654	1					
ANR	2570292	Identifier	size		2569654	1					
ANR	2570293	MemberAccess	upd -> int_a [ IA_STD_DY ] . size		2569654	1					
ANR	2570294	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		2569654	0					
ANR	2570295	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570296	Identifier	upd		2569654	0					
ANR	2570297	Identifier	int_a		2569654	1					
ANR	2570298	Identifier	IA_STD_DY		2569654	1					
ANR	2570299	Identifier	size		2569654	1					
ANR	2570300	ForStatement	"for ( i = 0 , ix = 0 ; i < upd -> int_a [ IA_STD_IX ] . size ; ++ i )"		2569654	5					
ANR	2570301	ForInit	"i = 0 , ix = 0 ;"	4216:13:154858:154871	2569654	0	True				
ANR	2570302	Expression	"i = 0 , ix = 0"		2569654	0					
ANR	2570303	AssignmentExpression	i = 0		2569654	0		=			
ANR	2570304	Identifier	i		2569654	0					
ANR	2570305	PrimaryExpression	0		2569654	1					
ANR	2570306	AssignmentExpression	ix = 0		2569654	1		=			
ANR	2570307	Identifier	ix		2569654	0					
ANR	2570308	PrimaryExpression	0		2569654	1					
ANR	2570309	Condition	i < upd -> int_a [ IA_STD_IX ] . size	4216:28:154873:154902	2569654	1	True				
ANR	2570310	RelationalExpression	i < upd -> int_a [ IA_STD_IX ] . size		2569654	0		<			
ANR	2570311	Identifier	i		2569654	0					
ANR	2570312	MemberAccess	upd -> int_a [ IA_STD_IX ] . size		2569654	1					
ANR	2570313	ArrayIndexing	upd -> int_a [ IA_STD_IX ]		2569654	0					
ANR	2570314	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570315	Identifier	upd		2569654	0					
ANR	2570316	Identifier	int_a		2569654	1					
ANR	2570317	Identifier	IA_STD_IX		2569654	1					
ANR	2570318	Identifier	size		2569654	1					
ANR	2570319	UnaryExpression	++ i	4216:60:154905:154907	2569654	2	True				
ANR	2570320	IncDec	++		2569654	0					
ANR	2570321	Identifier	i		2569654	1					
ANR	2570322	CompoundStatement		89:65:3194:3194	2569654	3					
ANR	2570323	ExpressionStatement	* ip ++ = ix ++	4217:12:154924:154936	2569654	0	True				
ANR	2570324	AssignmentExpression	* ip ++ = ix ++		2569654	0		=			
ANR	2570325	UnaryOperationExpression	* ip ++		2569654	0					
ANR	2570326	UnaryOperator	*		2569654	0					
ANR	2570327	PostIncDecOperationExpression	ip ++		2569654	1					
ANR	2570328	Identifier	ip		2569654	0					
ANR	2570329	IncDec	++		2569654	1					
ANR	2570330	PostIncDecOperationExpression	ix ++		2569654	1					
ANR	2570331	Identifier	ix		2569654	0					
ANR	2570332	IncDec	++		2569654	1					
ANR	2570333	IfStatement	if ( ix == upd -> ints [ I_NXPASS ] )		2569654	1					
ANR	2570334	Condition	ix == upd -> ints [ I_NXPASS ]	4218:15:154953:154977	2569654	0	True				
ANR	2570335	EqualityExpression	ix == upd -> ints [ I_NXPASS ]		2569654	0		==			
ANR	2570336	Identifier	ix		2569654	0					
ANR	2570337	ArrayIndexing	upd -> ints [ I_NXPASS ]		2569654	1					
ANR	2570338	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570339	Identifier	upd		2569654	0					
ANR	2570340	Identifier	ints		2569654	1					
ANR	2570341	Identifier	I_NXPASS		2569654	1					
ANR	2570342	ExpressionStatement	ix = 0	4218:42:154980:154986	2569654	1	True				
ANR	2570343	AssignmentExpression	ix = 0		2569654	0		=			
ANR	2570344	Identifier	ix		2569654	0					
ANR	2570345	PrimaryExpression	0		2569654	1					
ANR	2570346	IfStatement	if ( ( 0 >= upd -> int_a [ IA_BEG_IX ] . size ) && ( 0 < upd -> int_a [ IA_BEG_DY ] . size ) )		2569654	9					
ANR	2570347	Condition	( 0 >= upd -> int_a [ IA_BEG_IX ] . size ) && ( 0 < upd -> int_a [ IA_BEG_DY ] . size )	4222:9:155017:155095	2569654	0	True				
ANR	2570348	AndExpression	( 0 >= upd -> int_a [ IA_BEG_IX ] . size ) && ( 0 < upd -> int_a [ IA_BEG_DY ] . size )		2569654	0		&&			
ANR	2570349	RelationalExpression	0 >= upd -> int_a [ IA_BEG_IX ] . size		2569654	0		>=			
ANR	2570350	PrimaryExpression	0		2569654	0					
ANR	2570351	MemberAccess	upd -> int_a [ IA_BEG_IX ] . size		2569654	1					
ANR	2570352	ArrayIndexing	upd -> int_a [ IA_BEG_IX ]		2569654	0					
ANR	2570353	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570354	Identifier	upd		2569654	0					
ANR	2570355	Identifier	int_a		2569654	1					
ANR	2570356	Identifier	IA_BEG_IX		2569654	1					
ANR	2570357	Identifier	size		2569654	1					
ANR	2570358	RelationalExpression	0 < upd -> int_a [ IA_BEG_DY ] . size		2569654	1		<			
ANR	2570359	PrimaryExpression	0		2569654	0					
ANR	2570360	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		2569654	1					
ANR	2570361	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		2569654	0					
ANR	2570362	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570363	Identifier	upd		2569654	0					
ANR	2570364	Identifier	int_a		2569654	1					
ANR	2570365	Identifier	IA_BEG_DY		2569654	1					
ANR	2570366	Identifier	size		2569654	1					
ANR	2570367	CompoundStatement		97:9:3396:3408	2569654	1					
ANR	2570368	IdentifierDeclStatement	"int ix , i , * ip ;"	4224:9:155112:155124	2569654	0	True				
ANR	2570369	IdentifierDecl	ix		2569654	0					
ANR	2570370	IdentifierDeclType	int		2569654	0					
ANR	2570371	Identifier	ix		2569654	1					
ANR	2570372	IdentifierDecl	i		2569654	1					
ANR	2570373	IdentifierDeclType	int		2569654	0					
ANR	2570374	Identifier	i		2569654	1					
ANR	2570375	IdentifierDecl	* ip		2569654	2					
ANR	2570376	IdentifierDeclType	int *		2569654	0					
ANR	2570377	Identifier	ip		2569654	1					
ANR	2570378	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> int_a [ IA_BEG_IX ] )"	4225:9:155135:155188	2569654	1	True				
ANR	2570379	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> int_a [ IA_BEG_IX ] )"		2569654	0					
ANR	2570380	Callee	UPD_MM_DEL_PARAM		2569654	0					
ANR	2570381	Identifier	UPD_MM_DEL_PARAM		2569654	0					
ANR	2570382	ArgumentList	udev -> memory		2569654	1					
ANR	2570383	Argument	udev -> memory		2569654	0					
ANR	2570384	PtrMemberAccess	udev -> memory		2569654	0					
ANR	2570385	Identifier	udev		2569654	0					
ANR	2570386	Identifier	memory		2569654	1					
ANR	2570387	Argument	upd -> int_a [ IA_BEG_IX ]		2569654	1					
ANR	2570388	ArrayIndexing	upd -> int_a [ IA_BEG_IX ]		2569654	0					
ANR	2570389	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570390	Identifier	upd		2569654	0					
ANR	2570391	Identifier	int_a		2569654	1					
ANR	2570392	Identifier	IA_BEG_IX		2569654	1					
ANR	2570393	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , ip , upd -> int_a [ IA_BEG_DY ] . size )"	4226:9:155199:155260	2569654	2	True				
ANR	2570394	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , ip , upd -> int_a [ IA_BEG_DY ] . size )"		2569654	0					
ANR	2570395	Callee	UPD_MM_GET_ARRAY		2569654	0					
ANR	2570396	Identifier	UPD_MM_GET_ARRAY		2569654	0					
ANR	2570397	ArgumentList	udev -> memory		2569654	1					
ANR	2570398	Argument	udev -> memory		2569654	0					
ANR	2570399	PtrMemberAccess	udev -> memory		2569654	0					
ANR	2570400	Identifier	udev		2569654	0					
ANR	2570401	Identifier	memory		2569654	1					
ANR	2570402	Argument	ip		2569654	1					
ANR	2570403	Identifier	ip		2569654	0					
ANR	2570404	Argument	upd -> int_a [ IA_BEG_DY ] . size		2569654	2					
ANR	2570405	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		2569654	0					
ANR	2570406	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		2569654	0					
ANR	2570407	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570408	Identifier	upd		2569654	0					
ANR	2570409	Identifier	int_a		2569654	1					
ANR	2570410	Identifier	IA_BEG_DY		2569654	1					
ANR	2570411	Identifier	size		2569654	1					
ANR	2570412	ExpressionStatement	upd -> int_a [ IA_BEG_IX ] . data = ip	4227:9:155271:155302	2569654	3	True				
ANR	2570413	AssignmentExpression	upd -> int_a [ IA_BEG_IX ] . data = ip		2569654	0		=			
ANR	2570414	MemberAccess	upd -> int_a [ IA_BEG_IX ] . data		2569654	0					
ANR	2570415	ArrayIndexing	upd -> int_a [ IA_BEG_IX ]		2569654	0					
ANR	2570416	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570417	Identifier	upd		2569654	0					
ANR	2570418	Identifier	int_a		2569654	1					
ANR	2570419	Identifier	IA_BEG_IX		2569654	1					
ANR	2570420	Identifier	data		2569654	1					
ANR	2570421	Identifier	ip		2569654	1					
ANR	2570422	ExpressionStatement	upd -> int_a [ IA_BEG_IX ] . size = upd -> int_a [ IA_BEG_DY ] . size	4228:9:155313:155368	2569654	4	True				
ANR	2570423	AssignmentExpression	upd -> int_a [ IA_BEG_IX ] . size = upd -> int_a [ IA_BEG_DY ] . size		2569654	0		=			
ANR	2570424	MemberAccess	upd -> int_a [ IA_BEG_IX ] . size		2569654	0					
ANR	2570425	ArrayIndexing	upd -> int_a [ IA_BEG_IX ]		2569654	0					
ANR	2570426	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570427	Identifier	upd		2569654	0					
ANR	2570428	Identifier	int_a		2569654	1					
ANR	2570429	Identifier	IA_BEG_IX		2569654	1					
ANR	2570430	Identifier	size		2569654	1					
ANR	2570431	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		2569654	1					
ANR	2570432	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		2569654	0					
ANR	2570433	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570434	Identifier	upd		2569654	0					
ANR	2570435	Identifier	int_a		2569654	1					
ANR	2570436	Identifier	IA_BEG_DY		2569654	1					
ANR	2570437	Identifier	size		2569654	1					
ANR	2570438	ForStatement	"for ( i = 0 , ix = 0 ; i < upd -> int_a [ IA_BEG_IX ] . size ; ++ i )"		2569654	5					
ANR	2570439	ForInit	"i = 0 , ix = 0 ;"	4230:13:155384:155397	2569654	0	True				
ANR	2570440	Expression	"i = 0 , ix = 0"		2569654	0					
ANR	2570441	AssignmentExpression	i = 0		2569654	0		=			
ANR	2570442	Identifier	i		2569654	0					
ANR	2570443	PrimaryExpression	0		2569654	1					
ANR	2570444	AssignmentExpression	ix = 0		2569654	1		=			
ANR	2570445	Identifier	ix		2569654	0					
ANR	2570446	PrimaryExpression	0		2569654	1					
ANR	2570447	Condition	i < upd -> int_a [ IA_BEG_IX ] . size	4230:28:155399:155428	2569654	1	True				
ANR	2570448	RelationalExpression	i < upd -> int_a [ IA_BEG_IX ] . size		2569654	0		<			
ANR	2570449	Identifier	i		2569654	0					
ANR	2570450	MemberAccess	upd -> int_a [ IA_BEG_IX ] . size		2569654	1					
ANR	2570451	ArrayIndexing	upd -> int_a [ IA_BEG_IX ]		2569654	0					
ANR	2570452	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570453	Identifier	upd		2569654	0					
ANR	2570454	Identifier	int_a		2569654	1					
ANR	2570455	Identifier	IA_BEG_IX		2569654	1					
ANR	2570456	Identifier	size		2569654	1					
ANR	2570457	UnaryExpression	++ i	4230:60:155431:155433	2569654	2	True				
ANR	2570458	IncDec	++		2569654	0					
ANR	2570459	Identifier	i		2569654	1					
ANR	2570460	CompoundStatement		103:65:3720:3720	2569654	3					
ANR	2570461	ExpressionStatement	* ip ++ = ix ++	4231:12:155450:155462	2569654	0	True				
ANR	2570462	AssignmentExpression	* ip ++ = ix ++		2569654	0		=			
ANR	2570463	UnaryOperationExpression	* ip ++		2569654	0					
ANR	2570464	UnaryOperator	*		2569654	0					
ANR	2570465	PostIncDecOperationExpression	ip ++		2569654	1					
ANR	2570466	Identifier	ip		2569654	0					
ANR	2570467	IncDec	++		2569654	1					
ANR	2570468	PostIncDecOperationExpression	ix ++		2569654	1					
ANR	2570469	Identifier	ix		2569654	0					
ANR	2570470	IncDec	++		2569654	1					
ANR	2570471	IfStatement	if ( ix == upd -> ints [ I_NXPASS ] )		2569654	1					
ANR	2570472	Condition	ix == upd -> ints [ I_NXPASS ]	4232:15:155479:155503	2569654	0	True				
ANR	2570473	EqualityExpression	ix == upd -> ints [ I_NXPASS ]		2569654	0		==			
ANR	2570474	Identifier	ix		2569654	0					
ANR	2570475	ArrayIndexing	upd -> ints [ I_NXPASS ]		2569654	1					
ANR	2570476	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570477	Identifier	upd		2569654	0					
ANR	2570478	Identifier	ints		2569654	1					
ANR	2570479	Identifier	I_NXPASS		2569654	1					
ANR	2570480	ExpressionStatement	ix = 0	4232:42:155506:155512	2569654	1	True				
ANR	2570481	AssignmentExpression	ix = 0		2569654	0		=			
ANR	2570482	Identifier	ix		2569654	0					
ANR	2570483	PrimaryExpression	0		2569654	1					
ANR	2570484	IfStatement	if ( ( 0 >= upd -> int_a [ IA_END_IX ] . size ) && ( 0 < upd -> int_a [ IA_END_DY ] . size ) )		2569654	10					
ANR	2570485	Condition	( 0 >= upd -> int_a [ IA_END_IX ] . size ) && ( 0 < upd -> int_a [ IA_END_DY ] . size )	4236:9:155543:155621	2569654	0	True				
ANR	2570486	AndExpression	( 0 >= upd -> int_a [ IA_END_IX ] . size ) && ( 0 < upd -> int_a [ IA_END_DY ] . size )		2569654	0		&&			
ANR	2570487	RelationalExpression	0 >= upd -> int_a [ IA_END_IX ] . size		2569654	0		>=			
ANR	2570488	PrimaryExpression	0		2569654	0					
ANR	2570489	MemberAccess	upd -> int_a [ IA_END_IX ] . size		2569654	1					
ANR	2570490	ArrayIndexing	upd -> int_a [ IA_END_IX ]		2569654	0					
ANR	2570491	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570492	Identifier	upd		2569654	0					
ANR	2570493	Identifier	int_a		2569654	1					
ANR	2570494	Identifier	IA_END_IX		2569654	1					
ANR	2570495	Identifier	size		2569654	1					
ANR	2570496	RelationalExpression	0 < upd -> int_a [ IA_END_DY ] . size		2569654	1		<			
ANR	2570497	PrimaryExpression	0		2569654	0					
ANR	2570498	MemberAccess	upd -> int_a [ IA_END_DY ] . size		2569654	1					
ANR	2570499	ArrayIndexing	upd -> int_a [ IA_END_DY ]		2569654	0					
ANR	2570500	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570501	Identifier	upd		2569654	0					
ANR	2570502	Identifier	int_a		2569654	1					
ANR	2570503	Identifier	IA_END_DY		2569654	1					
ANR	2570504	Identifier	size		2569654	1					
ANR	2570505	CompoundStatement		111:9:3922:3934	2569654	1					
ANR	2570506	IdentifierDeclStatement	"int ix , i , * ip ;"	4238:9:155638:155650	2569654	0	True				
ANR	2570507	IdentifierDecl	ix		2569654	0					
ANR	2570508	IdentifierDeclType	int		2569654	0					
ANR	2570509	Identifier	ix		2569654	1					
ANR	2570510	IdentifierDecl	i		2569654	1					
ANR	2570511	IdentifierDeclType	int		2569654	0					
ANR	2570512	Identifier	i		2569654	1					
ANR	2570513	IdentifierDecl	* ip		2569654	2					
ANR	2570514	IdentifierDeclType	int *		2569654	0					
ANR	2570515	Identifier	ip		2569654	1					
ANR	2570516	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> int_a [ IA_END_IX ] )"	4239:9:155661:155714	2569654	1	True				
ANR	2570517	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> int_a [ IA_END_IX ] )"		2569654	0					
ANR	2570518	Callee	UPD_MM_DEL_PARAM		2569654	0					
ANR	2570519	Identifier	UPD_MM_DEL_PARAM		2569654	0					
ANR	2570520	ArgumentList	udev -> memory		2569654	1					
ANR	2570521	Argument	udev -> memory		2569654	0					
ANR	2570522	PtrMemberAccess	udev -> memory		2569654	0					
ANR	2570523	Identifier	udev		2569654	0					
ANR	2570524	Identifier	memory		2569654	1					
ANR	2570525	Argument	upd -> int_a [ IA_END_IX ]		2569654	1					
ANR	2570526	ArrayIndexing	upd -> int_a [ IA_END_IX ]		2569654	0					
ANR	2570527	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570528	Identifier	upd		2569654	0					
ANR	2570529	Identifier	int_a		2569654	1					
ANR	2570530	Identifier	IA_END_IX		2569654	1					
ANR	2570531	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , ip , upd -> int_a [ IA_END_DY ] . size )"	4240:9:155725:155786	2569654	2	True				
ANR	2570532	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , ip , upd -> int_a [ IA_END_DY ] . size )"		2569654	0					
ANR	2570533	Callee	UPD_MM_GET_ARRAY		2569654	0					
ANR	2570534	Identifier	UPD_MM_GET_ARRAY		2569654	0					
ANR	2570535	ArgumentList	udev -> memory		2569654	1					
ANR	2570536	Argument	udev -> memory		2569654	0					
ANR	2570537	PtrMemberAccess	udev -> memory		2569654	0					
ANR	2570538	Identifier	udev		2569654	0					
ANR	2570539	Identifier	memory		2569654	1					
ANR	2570540	Argument	ip		2569654	1					
ANR	2570541	Identifier	ip		2569654	0					
ANR	2570542	Argument	upd -> int_a [ IA_END_DY ] . size		2569654	2					
ANR	2570543	MemberAccess	upd -> int_a [ IA_END_DY ] . size		2569654	0					
ANR	2570544	ArrayIndexing	upd -> int_a [ IA_END_DY ]		2569654	0					
ANR	2570545	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570546	Identifier	upd		2569654	0					
ANR	2570547	Identifier	int_a		2569654	1					
ANR	2570548	Identifier	IA_END_DY		2569654	1					
ANR	2570549	Identifier	size		2569654	1					
ANR	2570550	ExpressionStatement	upd -> int_a [ IA_END_IX ] . data = ip	4241:9:155797:155828	2569654	3	True				
ANR	2570551	AssignmentExpression	upd -> int_a [ IA_END_IX ] . data = ip		2569654	0		=			
ANR	2570552	MemberAccess	upd -> int_a [ IA_END_IX ] . data		2569654	0					
ANR	2570553	ArrayIndexing	upd -> int_a [ IA_END_IX ]		2569654	0					
ANR	2570554	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570555	Identifier	upd		2569654	0					
ANR	2570556	Identifier	int_a		2569654	1					
ANR	2570557	Identifier	IA_END_IX		2569654	1					
ANR	2570558	Identifier	data		2569654	1					
ANR	2570559	Identifier	ip		2569654	1					
ANR	2570560	ExpressionStatement	upd -> int_a [ IA_END_IX ] . size = upd -> int_a [ IA_END_DY ] . size	4242:9:155839:155894	2569654	4	True				
ANR	2570561	AssignmentExpression	upd -> int_a [ IA_END_IX ] . size = upd -> int_a [ IA_END_DY ] . size		2569654	0		=			
ANR	2570562	MemberAccess	upd -> int_a [ IA_END_IX ] . size		2569654	0					
ANR	2570563	ArrayIndexing	upd -> int_a [ IA_END_IX ]		2569654	0					
ANR	2570564	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570565	Identifier	upd		2569654	0					
ANR	2570566	Identifier	int_a		2569654	1					
ANR	2570567	Identifier	IA_END_IX		2569654	1					
ANR	2570568	Identifier	size		2569654	1					
ANR	2570569	MemberAccess	upd -> int_a [ IA_END_DY ] . size		2569654	1					
ANR	2570570	ArrayIndexing	upd -> int_a [ IA_END_DY ]		2569654	0					
ANR	2570571	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570572	Identifier	upd		2569654	0					
ANR	2570573	Identifier	int_a		2569654	1					
ANR	2570574	Identifier	IA_END_DY		2569654	1					
ANR	2570575	Identifier	size		2569654	1					
ANR	2570576	ForStatement	"for ( i = 0 , ix = 0 ; i < upd -> int_a [ IA_END_IX ] . size ; ++ i )"		2569654	5					
ANR	2570577	ForInit	"i = 0 , ix = 0 ;"	4244:13:155910:155923	2569654	0	True				
ANR	2570578	Expression	"i = 0 , ix = 0"		2569654	0					
ANR	2570579	AssignmentExpression	i = 0		2569654	0		=			
ANR	2570580	Identifier	i		2569654	0					
ANR	2570581	PrimaryExpression	0		2569654	1					
ANR	2570582	AssignmentExpression	ix = 0		2569654	1		=			
ANR	2570583	Identifier	ix		2569654	0					
ANR	2570584	PrimaryExpression	0		2569654	1					
ANR	2570585	Condition	i < upd -> int_a [ IA_END_IX ] . size	4244:28:155925:155954	2569654	1	True				
ANR	2570586	RelationalExpression	i < upd -> int_a [ IA_END_IX ] . size		2569654	0		<			
ANR	2570587	Identifier	i		2569654	0					
ANR	2570588	MemberAccess	upd -> int_a [ IA_END_IX ] . size		2569654	1					
ANR	2570589	ArrayIndexing	upd -> int_a [ IA_END_IX ]		2569654	0					
ANR	2570590	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570591	Identifier	upd		2569654	0					
ANR	2570592	Identifier	int_a		2569654	1					
ANR	2570593	Identifier	IA_END_IX		2569654	1					
ANR	2570594	Identifier	size		2569654	1					
ANR	2570595	UnaryExpression	++ i	4244:60:155957:155959	2569654	2	True				
ANR	2570596	IncDec	++		2569654	0					
ANR	2570597	Identifier	i		2569654	1					
ANR	2570598	CompoundStatement		117:65:4246:4246	2569654	3					
ANR	2570599	ExpressionStatement	* ip ++ = ix ++	4245:12:155976:155988	2569654	0	True				
ANR	2570600	AssignmentExpression	* ip ++ = ix ++		2569654	0		=			
ANR	2570601	UnaryOperationExpression	* ip ++		2569654	0					
ANR	2570602	UnaryOperator	*		2569654	0					
ANR	2570603	PostIncDecOperationExpression	ip ++		2569654	1					
ANR	2570604	Identifier	ip		2569654	0					
ANR	2570605	IncDec	++		2569654	1					
ANR	2570606	PostIncDecOperationExpression	ix ++		2569654	1					
ANR	2570607	Identifier	ix		2569654	0					
ANR	2570608	IncDec	++		2569654	1					
ANR	2570609	IfStatement	if ( ix == upd -> ints [ I_NXPASS ] )		2569654	1					
ANR	2570610	Condition	ix == upd -> ints [ I_NXPASS ]	4246:15:156005:156029	2569654	0	True				
ANR	2570611	EqualityExpression	ix == upd -> ints [ I_NXPASS ]		2569654	0		==			
ANR	2570612	Identifier	ix		2569654	0					
ANR	2570613	ArrayIndexing	upd -> ints [ I_NXPASS ]		2569654	1					
ANR	2570614	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570615	Identifier	upd		2569654	0					
ANR	2570616	Identifier	ints		2569654	1					
ANR	2570617	Identifier	I_NXPASS		2569654	1					
ANR	2570618	ExpressionStatement	ix = 0	4246:42:156032:156038	2569654	1	True				
ANR	2570619	AssignmentExpression	ix = 0		2569654	0		=			
ANR	2570620	Identifier	ix		2569654	0					
ANR	2570621	PrimaryExpression	0		2569654	1					
ANR	2570622	IfStatement	if ( upd -> ints [ I_NPASS ] > upd -> int_a [ IA_STD_DY ] . size )		2569654	14					
ANR	2570623	Condition	upd -> ints [ I_NPASS ] > upd -> int_a [ IA_STD_DY ] . size	4251:6:156071:156117	2569654	0	True				
ANR	2570624	RelationalExpression	upd -> ints [ I_NPASS ] > upd -> int_a [ IA_STD_DY ] . size		2569654	0		>			
ANR	2570625	ArrayIndexing	upd -> ints [ I_NPASS ]		2569654	0					
ANR	2570626	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570627	Identifier	upd		2569654	0					
ANR	2570628	Identifier	ints		2569654	1					
ANR	2570629	Identifier	I_NPASS		2569654	1					
ANR	2570630	MemberAccess	upd -> int_a [ IA_STD_DY ] . size		2569654	1					
ANR	2570631	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		2569654	0					
ANR	2570632	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570633	Identifier	upd		2569654	0					
ANR	2570634	Identifier	int_a		2569654	1					
ANR	2570635	Identifier	IA_STD_DY		2569654	1					
ANR	2570636	Identifier	size		2569654	1					
ANR	2570637	CompoundStatement		124:55:4404:4404	2569654	1					
ANR	2570638	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_writer: Only %d instead of %d normal Feeds\\n"" , ( int ) upd -> int_a [ IA_STD_DY ] . size , upd -> ints [ I_NPASS ] )"	4253:6:156161:156310	2569654	0	True				
ANR	2570639	CallExpression	"errprintf ( udev -> memory , ""upd_open_writer: Only %d instead of %d normal Feeds\\n"" , ( int ) upd -> int_a [ IA_STD_DY ] . size , upd -> ints [ I_NPASS ] )"		2569654	0					
ANR	2570640	Callee	errprintf		2569654	0					
ANR	2570641	Identifier	errprintf		2569654	0					
ANR	2570642	ArgumentList	udev -> memory		2569654	1					
ANR	2570643	Argument	udev -> memory		2569654	0					
ANR	2570644	PtrMemberAccess	udev -> memory		2569654	0					
ANR	2570645	Identifier	udev		2569654	0					
ANR	2570646	Identifier	memory		2569654	1					
ANR	2570647	Argument	"""upd_open_writer: Only %d instead of %d normal Feeds\\n"""		2569654	1					
ANR	2570648	PrimaryExpression	"""upd_open_writer: Only %d instead of %d normal Feeds\\n"""		2569654	0					
ANR	2570649	Argument	( int ) upd -> int_a [ IA_STD_DY ] . size		2569654	2					
ANR	2570650	CastExpression	( int ) upd -> int_a [ IA_STD_DY ] . size		2569654	0					
ANR	2570651	CastTarget	int		2569654	0					
ANR	2570652	MemberAccess	upd -> int_a [ IA_STD_DY ] . size		2569654	1					
ANR	2570653	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		2569654	0					
ANR	2570654	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570655	Identifier	upd		2569654	0					
ANR	2570656	Identifier	int_a		2569654	1					
ANR	2570657	Identifier	IA_STD_DY		2569654	1					
ANR	2570658	Identifier	size		2569654	1					
ANR	2570659	Argument	upd -> ints [ I_NPASS ]		2569654	3					
ANR	2570660	ArrayIndexing	upd -> ints [ I_NPASS ]		2569654	0					
ANR	2570661	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570662	Identifier	upd		2569654	0					
ANR	2570663	Identifier	ints		2569654	1					
ANR	2570664	Identifier	I_NPASS		2569654	1					
ANR	2570665	ExpressionStatement	success = false	4257:6:156325:156340	2569654	1	True				
ANR	2570666	AssignmentExpression	success = false		2569654	0		=			
ANR	2570667	Identifier	success		2569654	0					
ANR	2570668	Identifier	false		2569654	1					
ANR	2570669	ElseStatement	else		2569654	0					
ANR	2570670	IfStatement	if ( upd -> int_a [ IA_STD_IX ] . size < upd -> int_a [ IA_STD_DY ] . size )		2569654	0					
ANR	2570671	Condition	upd -> int_a [ IA_STD_IX ] . size < upd -> int_a [ IA_STD_DY ] . size	4259:13:156356:156410	2569654	0	True				
ANR	2570672	RelationalExpression	upd -> int_a [ IA_STD_IX ] . size < upd -> int_a [ IA_STD_DY ] . size		2569654	0		<			
ANR	2570673	MemberAccess	upd -> int_a [ IA_STD_IX ] . size		2569654	0					
ANR	2570674	ArrayIndexing	upd -> int_a [ IA_STD_IX ]		2569654	0					
ANR	2570675	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570676	Identifier	upd		2569654	0					
ANR	2570677	Identifier	int_a		2569654	1					
ANR	2570678	Identifier	IA_STD_IX		2569654	1					
ANR	2570679	Identifier	size		2569654	1					
ANR	2570680	MemberAccess	upd -> int_a [ IA_STD_DY ] . size		2569654	1					
ANR	2570681	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		2569654	0					
ANR	2570682	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570683	Identifier	upd		2569654	0					
ANR	2570684	Identifier	int_a		2569654	1					
ANR	2570685	Identifier	IA_STD_DY		2569654	1					
ANR	2570686	Identifier	size		2569654	1					
ANR	2570687	CompoundStatement		132:70:4697:4697	2569654	1					
ANR	2570688	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_writer: Only %d instead of %d normal Xstarts\\n"" , ( int ) upd -> int_a [ IA_STD_IX ] . size , ( int ) upd -> int_a [ IA_STD_DY ] . size )"	4261:6:156454:156628	2569654	0	True				
ANR	2570689	CallExpression	"errprintf ( udev -> memory , ""upd_open_writer: Only %d instead of %d normal Xstarts\\n"" , ( int ) upd -> int_a [ IA_STD_IX ] . size , ( int ) upd -> int_a [ IA_STD_DY ] . size )"		2569654	0					
ANR	2570690	Callee	errprintf		2569654	0					
ANR	2570691	Identifier	errprintf		2569654	0					
ANR	2570692	ArgumentList	udev -> memory		2569654	1					
ANR	2570693	Argument	udev -> memory		2569654	0					
ANR	2570694	PtrMemberAccess	udev -> memory		2569654	0					
ANR	2570695	Identifier	udev		2569654	0					
ANR	2570696	Identifier	memory		2569654	1					
ANR	2570697	Argument	"""upd_open_writer: Only %d instead of %d normal Xstarts\\n"""		2569654	1					
ANR	2570698	PrimaryExpression	"""upd_open_writer: Only %d instead of %d normal Xstarts\\n"""		2569654	0					
ANR	2570699	Argument	( int ) upd -> int_a [ IA_STD_IX ] . size		2569654	2					
ANR	2570700	CastExpression	( int ) upd -> int_a [ IA_STD_IX ] . size		2569654	0					
ANR	2570701	CastTarget	int		2569654	0					
ANR	2570702	MemberAccess	upd -> int_a [ IA_STD_IX ] . size		2569654	1					
ANR	2570703	ArrayIndexing	upd -> int_a [ IA_STD_IX ]		2569654	0					
ANR	2570704	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570705	Identifier	upd		2569654	0					
ANR	2570706	Identifier	int_a		2569654	1					
ANR	2570707	Identifier	IA_STD_IX		2569654	1					
ANR	2570708	Identifier	size		2569654	1					
ANR	2570709	Argument	( int ) upd -> int_a [ IA_STD_DY ] . size		2569654	3					
ANR	2570710	CastExpression	( int ) upd -> int_a [ IA_STD_DY ] . size		2569654	0					
ANR	2570711	CastTarget	int		2569654	0					
ANR	2570712	MemberAccess	upd -> int_a [ IA_STD_DY ] . size		2569654	1					
ANR	2570713	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		2569654	0					
ANR	2570714	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570715	Identifier	upd		2569654	0					
ANR	2570716	Identifier	int_a		2569654	1					
ANR	2570717	Identifier	IA_STD_DY		2569654	1					
ANR	2570718	Identifier	size		2569654	1					
ANR	2570719	ExpressionStatement	success = false	4266:6:156643:156658	2569654	1	True				
ANR	2570720	AssignmentExpression	success = false		2569654	0		=			
ANR	2570721	Identifier	success		2569654	0					
ANR	2570722	Identifier	false		2569654	1					
ANR	2570723	IfStatement	if ( success )		2569654	15					
ANR	2570724	Condition	success	4272:6:156787:156793	2569654	0	True				
ANR	2570725	Identifier	success		2569654	0					
ANR	2570726	CompoundStatement		146:6:5088:5101	2569654	1					
ANR	2570727	IdentifierDeclStatement	"int i , sum = 0 ;"	4273:6:156804:156817	2569654	0	True				
ANR	2570728	IdentifierDecl	i		2569654	0					
ANR	2570729	IdentifierDeclType	int		2569654	0					
ANR	2570730	Identifier	i		2569654	1					
ANR	2570731	IdentifierDecl	sum = 0		2569654	1					
ANR	2570732	IdentifierDeclType	int		2569654	0					
ANR	2570733	Identifier	sum		2569654	1					
ANR	2570734	AssignmentExpression	sum = 0		2569654	2		=			
ANR	2570735	Identifier	sum		2569654	0					
ANR	2570736	PrimaryExpression	0		2569654	1					
ANR	2570737	ForStatement	for ( i = 0 ; upd -> ints [ I_NPASS ] > i ; ++ i )		2569654	1					
ANR	2570738	ForInit	i = 0 ;	4274:10:156829:156834	2569654	0	True				
ANR	2570739	AssignmentExpression	i = 0		2569654	0		=			
ANR	2570740	Identifier	i		2569654	0					
ANR	2570741	PrimaryExpression	0		2569654	1					
ANR	2570742	Condition	upd -> ints [ I_NPASS ] > i	4274:17:156836:156857	2569654	1	True				
ANR	2570743	RelationalExpression	upd -> ints [ I_NPASS ] > i		2569654	0		>			
ANR	2570744	ArrayIndexing	upd -> ints [ I_NPASS ]		2569654	0					
ANR	2570745	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570746	Identifier	upd		2569654	0					
ANR	2570747	Identifier	ints		2569654	1					
ANR	2570748	Identifier	I_NPASS		2569654	1					
ANR	2570749	Identifier	i		2569654	1					
ANR	2570750	UnaryExpression	++ i	4274:41:156860:156862	2569654	2	True				
ANR	2570751	IncDec	++		2569654	0					
ANR	2570752	Identifier	i		2569654	1					
ANR	2570753	ExpressionStatement	sum += upd -> int_a [ IA_STD_DY ] . data [ i ]	4275:9:156874:156910	2569654	3	True				
ANR	2570754	AssignmentExpression	sum += upd -> int_a [ IA_STD_DY ] . data [ i ]		2569654	0		+=			
ANR	2570755	Identifier	sum		2569654	0					
ANR	2570756	ArrayIndexing	upd -> int_a [ IA_STD_DY ] . data [ i ]		2569654	1					
ANR	2570757	MemberAccess	upd -> int_a [ IA_STD_DY ] . data		2569654	0					
ANR	2570758	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		2569654	0					
ANR	2570759	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570760	Identifier	upd		2569654	0					
ANR	2570761	Identifier	int_a		2569654	1					
ANR	2570762	Identifier	IA_STD_DY		2569654	1					
ANR	2570763	Identifier	data		2569654	1					
ANR	2570764	Identifier	i		2569654	1					
ANR	2570765	IfStatement	if ( ( upd -> ints [ I_NYPASS ] * upd -> ints [ I_PINS2WRITE ] ) != sum )		2569654	2					
ANR	2570766	Condition	( upd -> ints [ I_NYPASS ] * upd -> ints [ I_PINS2WRITE ] ) != sum	4276:9:156921:156972	2569654	0	True				
ANR	2570767	EqualityExpression	( upd -> ints [ I_NYPASS ] * upd -> ints [ I_PINS2WRITE ] ) != sum		2569654	0		!=			
ANR	2570768	MultiplicativeExpression	upd -> ints [ I_NYPASS ] * upd -> ints [ I_PINS2WRITE ]		2569654	0		*			
ANR	2570769	ArrayIndexing	upd -> ints [ I_NYPASS ]		2569654	0					
ANR	2570770	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570771	Identifier	upd		2569654	0					
ANR	2570772	Identifier	ints		2569654	1					
ANR	2570773	Identifier	I_NYPASS		2569654	1					
ANR	2570774	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		2569654	1					
ANR	2570775	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570776	Identifier	upd		2569654	0					
ANR	2570777	Identifier	ints		2569654	1					
ANR	2570778	Identifier	I_PINS2WRITE		2569654	1					
ANR	2570779	Identifier	sum		2569654	1					
ANR	2570780	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_writer: Sum of normal Feeds is %d rather than %d\\n"" , sum , upd -> ints [ I_NYPASS ] * upd -> ints [ I_PINS2WRITE ] )"	4277:9:156984:157137	2569654	1	True				
ANR	2570781	CallExpression	"errprintf ( udev -> memory , ""upd_open_writer: Sum of normal Feeds is %d rather than %d\\n"" , sum , upd -> ints [ I_NYPASS ] * upd -> ints [ I_PINS2WRITE ] )"		2569654	0					
ANR	2570782	Callee	errprintf		2569654	0					
ANR	2570783	Identifier	errprintf		2569654	0					
ANR	2570784	ArgumentList	udev -> memory		2569654	1					
ANR	2570785	Argument	udev -> memory		2569654	0					
ANR	2570786	PtrMemberAccess	udev -> memory		2569654	0					
ANR	2570787	Identifier	udev		2569654	0					
ANR	2570788	Identifier	memory		2569654	1					
ANR	2570789	Argument	"""upd_open_writer: Sum of normal Feeds is %d rather than %d\\n"""		2569654	1					
ANR	2570790	PrimaryExpression	"""upd_open_writer: Sum of normal Feeds is %d rather than %d\\n"""		2569654	0					
ANR	2570791	Argument	sum		2569654	2					
ANR	2570792	Identifier	sum		2569654	0					
ANR	2570793	Argument	upd -> ints [ I_NYPASS ] * upd -> ints [ I_PINS2WRITE ]		2569654	3					
ANR	2570794	MultiplicativeExpression	upd -> ints [ I_NYPASS ] * upd -> ints [ I_PINS2WRITE ]		2569654	0		*			
ANR	2570795	ArrayIndexing	upd -> ints [ I_NYPASS ]		2569654	0					
ANR	2570796	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570797	Identifier	upd		2569654	0					
ANR	2570798	Identifier	ints		2569654	1					
ANR	2570799	Identifier	I_NYPASS		2569654	1					
ANR	2570800	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		2569654	1					
ANR	2570801	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570802	Identifier	upd		2569654	0					
ANR	2570803	Identifier	ints		2569654	1					
ANR	2570804	Identifier	I_PINS2WRITE		2569654	1					
ANR	2570805	IfStatement	if ( upd -> int_a [ IA_BEG_IX ] . size < upd -> int_a [ IA_BEG_DY ] . size )		2569654	16					
ANR	2570806	Condition	upd -> int_a [ IA_BEG_IX ] . size < upd -> int_a [ IA_BEG_DY ] . size	4283:6:157158:157212	2569654	0	True				
ANR	2570807	RelationalExpression	upd -> int_a [ IA_BEG_IX ] . size < upd -> int_a [ IA_BEG_DY ] . size		2569654	0		<			
ANR	2570808	MemberAccess	upd -> int_a [ IA_BEG_IX ] . size		2569654	0					
ANR	2570809	ArrayIndexing	upd -> int_a [ IA_BEG_IX ]		2569654	0					
ANR	2570810	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570811	Identifier	upd		2569654	0					
ANR	2570812	Identifier	int_a		2569654	1					
ANR	2570813	Identifier	IA_BEG_IX		2569654	1					
ANR	2570814	Identifier	size		2569654	1					
ANR	2570815	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		2569654	1					
ANR	2570816	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		2569654	0					
ANR	2570817	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570818	Identifier	upd		2569654	0					
ANR	2570819	Identifier	int_a		2569654	1					
ANR	2570820	Identifier	IA_BEG_DY		2569654	1					
ANR	2570821	Identifier	size		2569654	1					
ANR	2570822	CompoundStatement		156:63:5499:5499	2569654	1					
ANR	2570823	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_writer: Only %d instead of %d initial Xstarts\\n"" , ( int ) upd -> int_a [ IA_BEG_IX ] . size , ( int ) upd -> int_a [ IA_BEG_DY ] . size )"	4285:6:157256:157431	2569654	0	True				
ANR	2570824	CallExpression	"errprintf ( udev -> memory , ""upd_open_writer: Only %d instead of %d initial Xstarts\\n"" , ( int ) upd -> int_a [ IA_BEG_IX ] . size , ( int ) upd -> int_a [ IA_BEG_DY ] . size )"		2569654	0					
ANR	2570825	Callee	errprintf		2569654	0					
ANR	2570826	Identifier	errprintf		2569654	0					
ANR	2570827	ArgumentList	udev -> memory		2569654	1					
ANR	2570828	Argument	udev -> memory		2569654	0					
ANR	2570829	PtrMemberAccess	udev -> memory		2569654	0					
ANR	2570830	Identifier	udev		2569654	0					
ANR	2570831	Identifier	memory		2569654	1					
ANR	2570832	Argument	"""upd_open_writer: Only %d instead of %d initial Xstarts\\n"""		2569654	1					
ANR	2570833	PrimaryExpression	"""upd_open_writer: Only %d instead of %d initial Xstarts\\n"""		2569654	0					
ANR	2570834	Argument	( int ) upd -> int_a [ IA_BEG_IX ] . size		2569654	2					
ANR	2570835	CastExpression	( int ) upd -> int_a [ IA_BEG_IX ] . size		2569654	0					
ANR	2570836	CastTarget	int		2569654	0					
ANR	2570837	MemberAccess	upd -> int_a [ IA_BEG_IX ] . size		2569654	1					
ANR	2570838	ArrayIndexing	upd -> int_a [ IA_BEG_IX ]		2569654	0					
ANR	2570839	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570840	Identifier	upd		2569654	0					
ANR	2570841	Identifier	int_a		2569654	1					
ANR	2570842	Identifier	IA_BEG_IX		2569654	1					
ANR	2570843	Identifier	size		2569654	1					
ANR	2570844	Argument	( int ) upd -> int_a [ IA_BEG_DY ] . size		2569654	3					
ANR	2570845	CastExpression	( int ) upd -> int_a [ IA_BEG_DY ] . size		2569654	0					
ANR	2570846	CastTarget	int		2569654	0					
ANR	2570847	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		2569654	1					
ANR	2570848	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		2569654	0					
ANR	2570849	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570850	Identifier	upd		2569654	0					
ANR	2570851	Identifier	int_a		2569654	1					
ANR	2570852	Identifier	IA_BEG_DY		2569654	1					
ANR	2570853	Identifier	size		2569654	1					
ANR	2570854	ExpressionStatement	success = false	4290:6:157446:157461	2569654	1	True				
ANR	2570855	AssignmentExpression	success = false		2569654	0		=			
ANR	2570856	Identifier	success		2569654	0					
ANR	2570857	Identifier	false		2569654	1					
ANR	2570858	IfStatement	if ( upd -> int_a [ IA_BEGBOT ] . size < upd -> int_a [ IA_BEG_DY ] . size )		2569654	17					
ANR	2570859	Condition	upd -> int_a [ IA_BEGBOT ] . size < upd -> int_a [ IA_BEG_DY ] . size	4293:6:157475:157529	2569654	0	True				
ANR	2570860	RelationalExpression	upd -> int_a [ IA_BEGBOT ] . size < upd -> int_a [ IA_BEG_DY ] . size		2569654	0		<			
ANR	2570861	MemberAccess	upd -> int_a [ IA_BEGBOT ] . size		2569654	0					
ANR	2570862	ArrayIndexing	upd -> int_a [ IA_BEGBOT ]		2569654	0					
ANR	2570863	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570864	Identifier	upd		2569654	0					
ANR	2570865	Identifier	int_a		2569654	1					
ANR	2570866	Identifier	IA_BEGBOT		2569654	1					
ANR	2570867	Identifier	size		2569654	1					
ANR	2570868	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		2569654	1					
ANR	2570869	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		2569654	0					
ANR	2570870	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570871	Identifier	upd		2569654	0					
ANR	2570872	Identifier	int_a		2569654	1					
ANR	2570873	Identifier	IA_BEG_DY		2569654	1					
ANR	2570874	Identifier	size		2569654	1					
ANR	2570875	CompoundStatement		166:63:5816:5816	2569654	1					
ANR	2570876	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_writer: Only %d instead of %d initial Pins\\n"" , ( int ) upd -> int_a [ IA_BEGBOT ] . size , ( int ) upd -> int_a [ IA_BEG_DY ] . size )"	4295:6:157573:157745	2569654	0	True				
ANR	2570877	CallExpression	"errprintf ( udev -> memory , ""upd_open_writer: Only %d instead of %d initial Pins\\n"" , ( int ) upd -> int_a [ IA_BEGBOT ] . size , ( int ) upd -> int_a [ IA_BEG_DY ] . size )"		2569654	0					
ANR	2570878	Callee	errprintf		2569654	0					
ANR	2570879	Identifier	errprintf		2569654	0					
ANR	2570880	ArgumentList	udev -> memory		2569654	1					
ANR	2570881	Argument	udev -> memory		2569654	0					
ANR	2570882	PtrMemberAccess	udev -> memory		2569654	0					
ANR	2570883	Identifier	udev		2569654	0					
ANR	2570884	Identifier	memory		2569654	1					
ANR	2570885	Argument	"""upd_open_writer: Only %d instead of %d initial Pins\\n"""		2569654	1					
ANR	2570886	PrimaryExpression	"""upd_open_writer: Only %d instead of %d initial Pins\\n"""		2569654	0					
ANR	2570887	Argument	( int ) upd -> int_a [ IA_BEGBOT ] . size		2569654	2					
ANR	2570888	CastExpression	( int ) upd -> int_a [ IA_BEGBOT ] . size		2569654	0					
ANR	2570889	CastTarget	int		2569654	0					
ANR	2570890	MemberAccess	upd -> int_a [ IA_BEGBOT ] . size		2569654	1					
ANR	2570891	ArrayIndexing	upd -> int_a [ IA_BEGBOT ]		2569654	0					
ANR	2570892	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570893	Identifier	upd		2569654	0					
ANR	2570894	Identifier	int_a		2569654	1					
ANR	2570895	Identifier	IA_BEGBOT		2569654	1					
ANR	2570896	Identifier	size		2569654	1					
ANR	2570897	Argument	( int ) upd -> int_a [ IA_BEG_DY ] . size		2569654	3					
ANR	2570898	CastExpression	( int ) upd -> int_a [ IA_BEG_DY ] . size		2569654	0					
ANR	2570899	CastTarget	int		2569654	0					
ANR	2570900	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		2569654	1					
ANR	2570901	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		2569654	0					
ANR	2570902	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570903	Identifier	upd		2569654	0					
ANR	2570904	Identifier	int_a		2569654	1					
ANR	2570905	Identifier	IA_BEG_DY		2569654	1					
ANR	2570906	Identifier	size		2569654	1					
ANR	2570907	ExpressionStatement	success = false	4300:6:157760:157775	2569654	1	True				
ANR	2570908	AssignmentExpression	success = false		2569654	0		=			
ANR	2570909	Identifier	success		2569654	0					
ANR	2570910	Identifier	false		2569654	1					
ANR	2570911	ElseStatement	else		2569654	0					
ANR	2570912	CompoundStatement		177:6:6081:6086	2569654	0					
ANR	2570913	IdentifierDeclStatement	int i ;	4304:6:157797:157802	2569654	0	True				
ANR	2570914	IdentifierDecl	i		2569654	0					
ANR	2570915	IdentifierDeclType	int		2569654	0					
ANR	2570916	Identifier	i		2569654	1					
ANR	2570917	ForStatement	for ( i = 0 ; i < upd -> int_a [ IA_BEG_DY ] . size ; ++ i )		2569654	1					
ANR	2570918	ForInit	i = 0 ;	4305:10:157814:157819	2569654	0	True				
ANR	2570919	AssignmentExpression	i = 0		2569654	0		=			
ANR	2570920	Identifier	i		2569654	0					
ANR	2570921	PrimaryExpression	0		2569654	1					
ANR	2570922	Condition	i < upd -> int_a [ IA_BEG_DY ] . size	4305:17:157821:157850	2569654	1	True				
ANR	2570923	RelationalExpression	i < upd -> int_a [ IA_BEG_DY ] . size		2569654	0		<			
ANR	2570924	Identifier	i		2569654	0					
ANR	2570925	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		2569654	1					
ANR	2570926	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		2569654	0					
ANR	2570927	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570928	Identifier	upd		2569654	0					
ANR	2570929	Identifier	int_a		2569654	1					
ANR	2570930	Identifier	IA_BEG_DY		2569654	1					
ANR	2570931	Identifier	size		2569654	1					
ANR	2570932	UnaryExpression	++ i	4305:49:157853:157855	2569654	2	True				
ANR	2570933	IncDec	++		2569654	0					
ANR	2570934	Identifier	i		2569654	1					
ANR	2570935	IfStatement	if ( ( upd -> int_a [ IA_BEGBOT ] . data [ i ] > upd -> ints [ I_PINS2WRITE ] ) || ( upd -> int_a [ IA_BEGBOT ] . data [ i ] < 0 ) )		2569654	3					
ANR	2570936	Condition	( upd -> int_a [ IA_BEGBOT ] . data [ i ] > upd -> ints [ I_PINS2WRITE ] ) || ( upd -> int_a [ IA_BEGBOT ] . data [ i ] < 0 )	4306:12:157870:157999	2569654	0	True				
ANR	2570937	OrExpression	( upd -> int_a [ IA_BEGBOT ] . data [ i ] > upd -> ints [ I_PINS2WRITE ] ) || ( upd -> int_a [ IA_BEGBOT ] . data [ i ] < 0 )		2569654	0		||			
ANR	2570938	RelationalExpression	upd -> int_a [ IA_BEGBOT ] . data [ i ] > upd -> ints [ I_PINS2WRITE ]		2569654	0		>			
ANR	2570939	ArrayIndexing	upd -> int_a [ IA_BEGBOT ] . data [ i ]		2569654	0					
ANR	2570940	MemberAccess	upd -> int_a [ IA_BEGBOT ] . data		2569654	0					
ANR	2570941	ArrayIndexing	upd -> int_a [ IA_BEGBOT ]		2569654	0					
ANR	2570942	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570943	Identifier	upd		2569654	0					
ANR	2570944	Identifier	int_a		2569654	1					
ANR	2570945	Identifier	IA_BEGBOT		2569654	1					
ANR	2570946	Identifier	data		2569654	1					
ANR	2570947	Identifier	i		2569654	1					
ANR	2570948	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		2569654	1					
ANR	2570949	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2570950	Identifier	upd		2569654	0					
ANR	2570951	Identifier	ints		2569654	1					
ANR	2570952	Identifier	I_PINS2WRITE		2569654	1					
ANR	2570953	RelationalExpression	upd -> int_a [ IA_BEGBOT ] . data [ i ] < 0		2569654	1		<			
ANR	2570954	ArrayIndexing	upd -> int_a [ IA_BEGBOT ] . data [ i ]		2569654	0					
ANR	2570955	MemberAccess	upd -> int_a [ IA_BEGBOT ] . data		2569654	0					
ANR	2570956	ArrayIndexing	upd -> int_a [ IA_BEGBOT ]		2569654	0					
ANR	2570957	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570958	Identifier	upd		2569654	0					
ANR	2570959	Identifier	int_a		2569654	1					
ANR	2570960	Identifier	IA_BEGBOT		2569654	1					
ANR	2570961	Identifier	data		2569654	1					
ANR	2570962	Identifier	i		2569654	1					
ANR	2570963	PrimaryExpression	0		2569654	1					
ANR	2570964	BreakStatement	break ;	4307:74:158005:158010	2569654	1	True				
ANR	2570965	IfStatement	if ( i < upd -> int_a [ IA_BEG_DY ] . size )		2569654	2					
ANR	2570966	Condition	i < upd -> int_a [ IA_BEG_DY ] . size	4309:9:158022:158051	2569654	0	True				
ANR	2570967	RelationalExpression	i < upd -> int_a [ IA_BEG_DY ] . size		2569654	0		<			
ANR	2570968	Identifier	i		2569654	0					
ANR	2570969	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		2569654	1					
ANR	2570970	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		2569654	0					
ANR	2570971	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570972	Identifier	upd		2569654	0					
ANR	2570973	Identifier	int_a		2569654	1					
ANR	2570974	Identifier	IA_BEG_DY		2569654	1					
ANR	2570975	Identifier	size		2569654	1					
ANR	2570976	CompoundStatement		182:41:6338:6338	2569654	1					
ANR	2570977	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_writer: Only %d is invalid initial Pins\\n"" , upd -> int_a [ IA_BEGBOT ] . data [ i ] )"	4311:9:158098:158228	2569654	0	True				
ANR	2570978	CallExpression	"errprintf ( udev -> memory , ""upd_open_writer: Only %d is invalid initial Pins\\n"" , upd -> int_a [ IA_BEGBOT ] . data [ i ] )"		2569654	0					
ANR	2570979	Callee	errprintf		2569654	0					
ANR	2570980	Identifier	errprintf		2569654	0					
ANR	2570981	ArgumentList	udev -> memory		2569654	1					
ANR	2570982	Argument	udev -> memory		2569654	0					
ANR	2570983	PtrMemberAccess	udev -> memory		2569654	0					
ANR	2570984	Identifier	udev		2569654	0					
ANR	2570985	Identifier	memory		2569654	1					
ANR	2570986	Argument	"""upd_open_writer: Only %d is invalid initial Pins\\n"""		2569654	1					
ANR	2570987	PrimaryExpression	"""upd_open_writer: Only %d is invalid initial Pins\\n"""		2569654	0					
ANR	2570988	Argument	upd -> int_a [ IA_BEGBOT ] . data [ i ]		2569654	2					
ANR	2570989	ArrayIndexing	upd -> int_a [ IA_BEGBOT ] . data [ i ]		2569654	0					
ANR	2570990	MemberAccess	upd -> int_a [ IA_BEGBOT ] . data		2569654	0					
ANR	2570991	ArrayIndexing	upd -> int_a [ IA_BEGBOT ]		2569654	0					
ANR	2570992	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2570993	Identifier	upd		2569654	0					
ANR	2570994	Identifier	int_a		2569654	1					
ANR	2570995	Identifier	IA_BEGBOT		2569654	1					
ANR	2570996	Identifier	data		2569654	1					
ANR	2570997	Identifier	i		2569654	1					
ANR	2570998	ExpressionStatement	success = false	4315:9:158246:158261	2569654	1	True				
ANR	2570999	AssignmentExpression	success = false		2569654	0		=			
ANR	2571000	Identifier	success		2569654	0					
ANR	2571001	Identifier	false		2569654	1					
ANR	2571002	IfStatement	if ( success )		2569654	18					
ANR	2571003	Condition	success	4322:6:158371:158377	2569654	0	True				
ANR	2571004	Identifier	success		2569654	0					
ANR	2571005	CompoundStatement		196:6:6672:6685	2569654	1					
ANR	2571006	IdentifierDeclStatement	"int i , sum = 0 ;"	4323:6:158388:158401	2569654	0	True				
ANR	2571007	IdentifierDecl	i		2569654	0					
ANR	2571008	IdentifierDeclType	int		2569654	0					
ANR	2571009	Identifier	i		2569654	1					
ANR	2571010	IdentifierDecl	sum = 0		2569654	1					
ANR	2571011	IdentifierDeclType	int		2569654	0					
ANR	2571012	Identifier	sum		2569654	1					
ANR	2571013	AssignmentExpression	sum = 0		2569654	2		=			
ANR	2571014	Identifier	sum		2569654	0					
ANR	2571015	PrimaryExpression	0		2569654	1					
ANR	2571016	ForStatement	for ( i = 0 ; upd -> int_a [ IA_BEG_DY ] . size > i ; ++ i )		2569654	1					
ANR	2571017	ForInit	i = 0 ;	4324:10:158413:158418	2569654	0	True				
ANR	2571018	AssignmentExpression	i = 0		2569654	0		=			
ANR	2571019	Identifier	i		2569654	0					
ANR	2571020	PrimaryExpression	0		2569654	1					
ANR	2571021	Condition	upd -> int_a [ IA_BEG_DY ] . size > i	4324:18:158421:158450	2569654	1	True				
ANR	2571022	RelationalExpression	upd -> int_a [ IA_BEG_DY ] . size > i		2569654	0		>			
ANR	2571023	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		2569654	0					
ANR	2571024	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		2569654	0					
ANR	2571025	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2571026	Identifier	upd		2569654	0					
ANR	2571027	Identifier	int_a		2569654	1					
ANR	2571028	Identifier	IA_BEG_DY		2569654	1					
ANR	2571029	Identifier	size		2569654	1					
ANR	2571030	Identifier	i		2569654	1					
ANR	2571031	UnaryExpression	++ i	4324:50:158453:158455	2569654	2	True				
ANR	2571032	IncDec	++		2569654	0					
ANR	2571033	Identifier	i		2569654	1					
ANR	2571034	ExpressionStatement	sum += upd -> int_a [ IA_BEG_DY ] . data [ i ]	4325:9:158467:158503	2569654	3	True				
ANR	2571035	AssignmentExpression	sum += upd -> int_a [ IA_BEG_DY ] . data [ i ]		2569654	0		+=			
ANR	2571036	Identifier	sum		2569654	0					
ANR	2571037	ArrayIndexing	upd -> int_a [ IA_BEG_DY ] . data [ i ]		2569654	1					
ANR	2571038	MemberAccess	upd -> int_a [ IA_BEG_DY ] . data		2569654	0					
ANR	2571039	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		2569654	0					
ANR	2571040	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2571041	Identifier	upd		2569654	0					
ANR	2571042	Identifier	int_a		2569654	1					
ANR	2571043	Identifier	IA_BEG_DY		2569654	1					
ANR	2571044	Identifier	data		2569654	1					
ANR	2571045	Identifier	i		2569654	1					
ANR	2571046	IfStatement	if ( upd -> ints [ I_BEG_Y ] != sum )		2569654	2					
ANR	2571047	Condition	upd -> ints [ I_BEG_Y ] != sum	4326:9:158514:158538	2569654	0	True				
ANR	2571048	EqualityExpression	upd -> ints [ I_BEG_Y ] != sum		2569654	0		!=			
ANR	2571049	ArrayIndexing	upd -> ints [ I_BEG_Y ]		2569654	0					
ANR	2571050	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2571051	Identifier	upd		2569654	0					
ANR	2571052	Identifier	ints		2569654	1					
ANR	2571053	Identifier	I_BEG_Y		2569654	1					
ANR	2571054	Identifier	sum		2569654	1					
ANR	2571055	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_writer: Sum of initial Feeds is %d rather than %d\\n"" , sum , upd -> ints [ I_BEG_Y ] )"	4327:9:158550:158679	2569654	1	True				
ANR	2571056	CallExpression	"errprintf ( udev -> memory , ""upd_open_writer: Sum of initial Feeds is %d rather than %d\\n"" , sum , upd -> ints [ I_BEG_Y ] )"		2569654	0					
ANR	2571057	Callee	errprintf		2569654	0					
ANR	2571058	Identifier	errprintf		2569654	0					
ANR	2571059	ArgumentList	udev -> memory		2569654	1					
ANR	2571060	Argument	udev -> memory		2569654	0					
ANR	2571061	PtrMemberAccess	udev -> memory		2569654	0					
ANR	2571062	Identifier	udev		2569654	0					
ANR	2571063	Identifier	memory		2569654	1					
ANR	2571064	Argument	"""upd_open_writer: Sum of initial Feeds is %d rather than %d\\n"""		2569654	1					
ANR	2571065	PrimaryExpression	"""upd_open_writer: Sum of initial Feeds is %d rather than %d\\n"""		2569654	0					
ANR	2571066	Argument	sum		2569654	2					
ANR	2571067	Identifier	sum		2569654	0					
ANR	2571068	Argument	upd -> ints [ I_BEG_Y ]		2569654	3					
ANR	2571069	ArrayIndexing	upd -> ints [ I_BEG_Y ]		2569654	0					
ANR	2571070	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2571071	Identifier	upd		2569654	0					
ANR	2571072	Identifier	ints		2569654	1					
ANR	2571073	Identifier	I_BEG_Y		2569654	1					
ANR	2571074	IfStatement	if ( upd -> int_a [ IA_END_IX ] . size < upd -> int_a [ IA_END_DY ] . size )		2569654	19					
ANR	2571075	Condition	upd -> int_a [ IA_END_IX ] . size < upd -> int_a [ IA_END_DY ] . size	4333:6:158700:158754	2569654	0	True				
ANR	2571076	RelationalExpression	upd -> int_a [ IA_END_IX ] . size < upd -> int_a [ IA_END_DY ] . size		2569654	0		<			
ANR	2571077	MemberAccess	upd -> int_a [ IA_END_IX ] . size		2569654	0					
ANR	2571078	ArrayIndexing	upd -> int_a [ IA_END_IX ]		2569654	0					
ANR	2571079	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2571080	Identifier	upd		2569654	0					
ANR	2571081	Identifier	int_a		2569654	1					
ANR	2571082	Identifier	IA_END_IX		2569654	1					
ANR	2571083	Identifier	size		2569654	1					
ANR	2571084	MemberAccess	upd -> int_a [ IA_END_DY ] . size		2569654	1					
ANR	2571085	ArrayIndexing	upd -> int_a [ IA_END_DY ]		2569654	0					
ANR	2571086	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2571087	Identifier	upd		2569654	0					
ANR	2571088	Identifier	int_a		2569654	1					
ANR	2571089	Identifier	IA_END_DY		2569654	1					
ANR	2571090	Identifier	size		2569654	1					
ANR	2571091	CompoundStatement		206:63:7041:7041	2569654	1					
ANR	2571092	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_writer: Only %d instead of %d final Xstarts\\n"" , ( int ) upd -> int_a [ IA_END_IX ] . size , ( int ) upd -> int_a [ IA_END_DY ] . size )"	4335:6:158798:158971	2569654	0	True				
ANR	2571093	CallExpression	"errprintf ( udev -> memory , ""upd_open_writer: Only %d instead of %d final Xstarts\\n"" , ( int ) upd -> int_a [ IA_END_IX ] . size , ( int ) upd -> int_a [ IA_END_DY ] . size )"		2569654	0					
ANR	2571094	Callee	errprintf		2569654	0					
ANR	2571095	Identifier	errprintf		2569654	0					
ANR	2571096	ArgumentList	udev -> memory		2569654	1					
ANR	2571097	Argument	udev -> memory		2569654	0					
ANR	2571098	PtrMemberAccess	udev -> memory		2569654	0					
ANR	2571099	Identifier	udev		2569654	0					
ANR	2571100	Identifier	memory		2569654	1					
ANR	2571101	Argument	"""upd_open_writer: Only %d instead of %d final Xstarts\\n"""		2569654	1					
ANR	2571102	PrimaryExpression	"""upd_open_writer: Only %d instead of %d final Xstarts\\n"""		2569654	0					
ANR	2571103	Argument	( int ) upd -> int_a [ IA_END_IX ] . size		2569654	2					
ANR	2571104	CastExpression	( int ) upd -> int_a [ IA_END_IX ] . size		2569654	0					
ANR	2571105	CastTarget	int		2569654	0					
ANR	2571106	MemberAccess	upd -> int_a [ IA_END_IX ] . size		2569654	1					
ANR	2571107	ArrayIndexing	upd -> int_a [ IA_END_IX ]		2569654	0					
ANR	2571108	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2571109	Identifier	upd		2569654	0					
ANR	2571110	Identifier	int_a		2569654	1					
ANR	2571111	Identifier	IA_END_IX		2569654	1					
ANR	2571112	Identifier	size		2569654	1					
ANR	2571113	Argument	( int ) upd -> int_a [ IA_END_DY ] . size		2569654	3					
ANR	2571114	CastExpression	( int ) upd -> int_a [ IA_END_DY ] . size		2569654	0					
ANR	2571115	CastTarget	int		2569654	0					
ANR	2571116	MemberAccess	upd -> int_a [ IA_END_DY ] . size		2569654	1					
ANR	2571117	ArrayIndexing	upd -> int_a [ IA_END_DY ]		2569654	0					
ANR	2571118	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2571119	Identifier	upd		2569654	0					
ANR	2571120	Identifier	int_a		2569654	1					
ANR	2571121	Identifier	IA_END_DY		2569654	1					
ANR	2571122	Identifier	size		2569654	1					
ANR	2571123	ExpressionStatement	success = false	4340:6:158986:159001	2569654	1	True				
ANR	2571124	AssignmentExpression	success = false		2569654	0		=			
ANR	2571125	Identifier	success		2569654	0					
ANR	2571126	Identifier	false		2569654	1					
ANR	2571127	IfStatement	if ( upd -> int_a [ IA_ENDTOP ] . size < upd -> int_a [ IA_END_DY ] . size )		2569654	20					
ANR	2571128	Condition	upd -> int_a [ IA_ENDTOP ] . size < upd -> int_a [ IA_END_DY ] . size	4343:6:159015:159069	2569654	0	True				
ANR	2571129	RelationalExpression	upd -> int_a [ IA_ENDTOP ] . size < upd -> int_a [ IA_END_DY ] . size		2569654	0		<			
ANR	2571130	MemberAccess	upd -> int_a [ IA_ENDTOP ] . size		2569654	0					
ANR	2571131	ArrayIndexing	upd -> int_a [ IA_ENDTOP ]		2569654	0					
ANR	2571132	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2571133	Identifier	upd		2569654	0					
ANR	2571134	Identifier	int_a		2569654	1					
ANR	2571135	Identifier	IA_ENDTOP		2569654	1					
ANR	2571136	Identifier	size		2569654	1					
ANR	2571137	MemberAccess	upd -> int_a [ IA_END_DY ] . size		2569654	1					
ANR	2571138	ArrayIndexing	upd -> int_a [ IA_END_DY ]		2569654	0					
ANR	2571139	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2571140	Identifier	upd		2569654	0					
ANR	2571141	Identifier	int_a		2569654	1					
ANR	2571142	Identifier	IA_END_DY		2569654	1					
ANR	2571143	Identifier	size		2569654	1					
ANR	2571144	CompoundStatement		216:63:7356:7356	2569654	1					
ANR	2571145	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_writer: Only %d instead of %d Final Pins\\n"" , ( int ) upd -> int_a [ IA_ENDTOP ] . size , ( int ) upd -> int_a [ IA_END_DY ] . size )"	4345:6:159113:159283	2569654	0	True				
ANR	2571146	CallExpression	"errprintf ( udev -> memory , ""upd_open_writer: Only %d instead of %d Final Pins\\n"" , ( int ) upd -> int_a [ IA_ENDTOP ] . size , ( int ) upd -> int_a [ IA_END_DY ] . size )"		2569654	0					
ANR	2571147	Callee	errprintf		2569654	0					
ANR	2571148	Identifier	errprintf		2569654	0					
ANR	2571149	ArgumentList	udev -> memory		2569654	1					
ANR	2571150	Argument	udev -> memory		2569654	0					
ANR	2571151	PtrMemberAccess	udev -> memory		2569654	0					
ANR	2571152	Identifier	udev		2569654	0					
ANR	2571153	Identifier	memory		2569654	1					
ANR	2571154	Argument	"""upd_open_writer: Only %d instead of %d Final Pins\\n"""		2569654	1					
ANR	2571155	PrimaryExpression	"""upd_open_writer: Only %d instead of %d Final Pins\\n"""		2569654	0					
ANR	2571156	Argument	( int ) upd -> int_a [ IA_ENDTOP ] . size		2569654	2					
ANR	2571157	CastExpression	( int ) upd -> int_a [ IA_ENDTOP ] . size		2569654	0					
ANR	2571158	CastTarget	int		2569654	0					
ANR	2571159	MemberAccess	upd -> int_a [ IA_ENDTOP ] . size		2569654	1					
ANR	2571160	ArrayIndexing	upd -> int_a [ IA_ENDTOP ]		2569654	0					
ANR	2571161	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2571162	Identifier	upd		2569654	0					
ANR	2571163	Identifier	int_a		2569654	1					
ANR	2571164	Identifier	IA_ENDTOP		2569654	1					
ANR	2571165	Identifier	size		2569654	1					
ANR	2571166	Argument	( int ) upd -> int_a [ IA_END_DY ] . size		2569654	3					
ANR	2571167	CastExpression	( int ) upd -> int_a [ IA_END_DY ] . size		2569654	0					
ANR	2571168	CastTarget	int		2569654	0					
ANR	2571169	MemberAccess	upd -> int_a [ IA_END_DY ] . size		2569654	1					
ANR	2571170	ArrayIndexing	upd -> int_a [ IA_END_DY ]		2569654	0					
ANR	2571171	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2571172	Identifier	upd		2569654	0					
ANR	2571173	Identifier	int_a		2569654	1					
ANR	2571174	Identifier	IA_END_DY		2569654	1					
ANR	2571175	Identifier	size		2569654	1					
ANR	2571176	ExpressionStatement	success = false	4350:6:159298:159313	2569654	1	True				
ANR	2571177	AssignmentExpression	success = false		2569654	0		=			
ANR	2571178	Identifier	success		2569654	0					
ANR	2571179	Identifier	false		2569654	1					
ANR	2571180	ElseStatement	else		2569654	0					
ANR	2571181	CompoundStatement		227:6:7619:7624	2569654	0					
ANR	2571182	IdentifierDeclStatement	int i ;	4354:6:159335:159340	2569654	0	True				
ANR	2571183	IdentifierDecl	i		2569654	0					
ANR	2571184	IdentifierDeclType	int		2569654	0					
ANR	2571185	Identifier	i		2569654	1					
ANR	2571186	ForStatement	for ( i = 0 ; i < upd -> int_a [ IA_END_DY ] . size ; ++ i )		2569654	1					
ANR	2571187	ForInit	i = 0 ;	4355:10:159352:159357	2569654	0	True				
ANR	2571188	AssignmentExpression	i = 0		2569654	0		=			
ANR	2571189	Identifier	i		2569654	0					
ANR	2571190	PrimaryExpression	0		2569654	1					
ANR	2571191	Condition	i < upd -> int_a [ IA_END_DY ] . size	4355:17:159359:159388	2569654	1	True				
ANR	2571192	RelationalExpression	i < upd -> int_a [ IA_END_DY ] . size		2569654	0		<			
ANR	2571193	Identifier	i		2569654	0					
ANR	2571194	MemberAccess	upd -> int_a [ IA_END_DY ] . size		2569654	1					
ANR	2571195	ArrayIndexing	upd -> int_a [ IA_END_DY ]		2569654	0					
ANR	2571196	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2571197	Identifier	upd		2569654	0					
ANR	2571198	Identifier	int_a		2569654	1					
ANR	2571199	Identifier	IA_END_DY		2569654	1					
ANR	2571200	Identifier	size		2569654	1					
ANR	2571201	UnaryExpression	++ i	4355:49:159391:159393	2569654	2	True				
ANR	2571202	IncDec	++		2569654	0					
ANR	2571203	Identifier	i		2569654	1					
ANR	2571204	IfStatement	if ( ( upd -> int_a [ IA_ENDTOP ] . data [ i ] > upd -> ints [ I_PINS2WRITE ] ) || ( upd -> int_a [ IA_ENDTOP ] . data [ i ] < 0 ) )		2569654	3					
ANR	2571205	Condition	( upd -> int_a [ IA_ENDTOP ] . data [ i ] > upd -> ints [ I_PINS2WRITE ] ) || ( upd -> int_a [ IA_ENDTOP ] . data [ i ] < 0 )	4356:12:159408:159537	2569654	0	True				
ANR	2571206	OrExpression	( upd -> int_a [ IA_ENDTOP ] . data [ i ] > upd -> ints [ I_PINS2WRITE ] ) || ( upd -> int_a [ IA_ENDTOP ] . data [ i ] < 0 )		2569654	0		||			
ANR	2571207	RelationalExpression	upd -> int_a [ IA_ENDTOP ] . data [ i ] > upd -> ints [ I_PINS2WRITE ]		2569654	0		>			
ANR	2571208	ArrayIndexing	upd -> int_a [ IA_ENDTOP ] . data [ i ]		2569654	0					
ANR	2571209	MemberAccess	upd -> int_a [ IA_ENDTOP ] . data		2569654	0					
ANR	2571210	ArrayIndexing	upd -> int_a [ IA_ENDTOP ]		2569654	0					
ANR	2571211	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2571212	Identifier	upd		2569654	0					
ANR	2571213	Identifier	int_a		2569654	1					
ANR	2571214	Identifier	IA_ENDTOP		2569654	1					
ANR	2571215	Identifier	data		2569654	1					
ANR	2571216	Identifier	i		2569654	1					
ANR	2571217	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		2569654	1					
ANR	2571218	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2571219	Identifier	upd		2569654	0					
ANR	2571220	Identifier	ints		2569654	1					
ANR	2571221	Identifier	I_PINS2WRITE		2569654	1					
ANR	2571222	RelationalExpression	upd -> int_a [ IA_ENDTOP ] . data [ i ] < 0		2569654	1		<			
ANR	2571223	ArrayIndexing	upd -> int_a [ IA_ENDTOP ] . data [ i ]		2569654	0					
ANR	2571224	MemberAccess	upd -> int_a [ IA_ENDTOP ] . data		2569654	0					
ANR	2571225	ArrayIndexing	upd -> int_a [ IA_ENDTOP ]		2569654	0					
ANR	2571226	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2571227	Identifier	upd		2569654	0					
ANR	2571228	Identifier	int_a		2569654	1					
ANR	2571229	Identifier	IA_ENDTOP		2569654	1					
ANR	2571230	Identifier	data		2569654	1					
ANR	2571231	Identifier	i		2569654	1					
ANR	2571232	PrimaryExpression	0		2569654	1					
ANR	2571233	BreakStatement	break ;	4357:74:159543:159548	2569654	1	True				
ANR	2571234	IfStatement	if ( i < upd -> int_a [ IA_END_DY ] . size )		2569654	2					
ANR	2571235	Condition	i < upd -> int_a [ IA_END_DY ] . size	4359:9:159560:159589	2569654	0	True				
ANR	2571236	RelationalExpression	i < upd -> int_a [ IA_END_DY ] . size		2569654	0		<			
ANR	2571237	Identifier	i		2569654	0					
ANR	2571238	MemberAccess	upd -> int_a [ IA_END_DY ] . size		2569654	1					
ANR	2571239	ArrayIndexing	upd -> int_a [ IA_END_DY ]		2569654	0					
ANR	2571240	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2571241	Identifier	upd		2569654	0					
ANR	2571242	Identifier	int_a		2569654	1					
ANR	2571243	Identifier	IA_END_DY		2569654	1					
ANR	2571244	Identifier	size		2569654	1					
ANR	2571245	CompoundStatement		232:41:7876:7876	2569654	1					
ANR	2571246	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_writer: Only %d is invalid initial Pins\\n"" , upd -> int_a [ IA_ENDTOP ] . data [ i ] )"	4361:9:159636:159766	2569654	0	True				
ANR	2571247	CallExpression	"errprintf ( udev -> memory , ""upd_open_writer: Only %d is invalid initial Pins\\n"" , upd -> int_a [ IA_ENDTOP ] . data [ i ] )"		2569654	0					
ANR	2571248	Callee	errprintf		2569654	0					
ANR	2571249	Identifier	errprintf		2569654	0					
ANR	2571250	ArgumentList	udev -> memory		2569654	1					
ANR	2571251	Argument	udev -> memory		2569654	0					
ANR	2571252	PtrMemberAccess	udev -> memory		2569654	0					
ANR	2571253	Identifier	udev		2569654	0					
ANR	2571254	Identifier	memory		2569654	1					
ANR	2571255	Argument	"""upd_open_writer: Only %d is invalid initial Pins\\n"""		2569654	1					
ANR	2571256	PrimaryExpression	"""upd_open_writer: Only %d is invalid initial Pins\\n"""		2569654	0					
ANR	2571257	Argument	upd -> int_a [ IA_ENDTOP ] . data [ i ]		2569654	2					
ANR	2571258	ArrayIndexing	upd -> int_a [ IA_ENDTOP ] . data [ i ]		2569654	0					
ANR	2571259	MemberAccess	upd -> int_a [ IA_ENDTOP ] . data		2569654	0					
ANR	2571260	ArrayIndexing	upd -> int_a [ IA_ENDTOP ]		2569654	0					
ANR	2571261	PtrMemberAccess	upd -> int_a		2569654	0					
ANR	2571262	Identifier	upd		2569654	0					
ANR	2571263	Identifier	int_a		2569654	1					
ANR	2571264	Identifier	IA_ENDTOP		2569654	1					
ANR	2571265	Identifier	data		2569654	1					
ANR	2571266	Identifier	i		2569654	1					
ANR	2571267	ExpressionStatement	success = false	4365:9:159784:159799	2569654	1	True				
ANR	2571268	AssignmentExpression	success = false		2569654	0		=			
ANR	2571269	Identifier	success		2569654	0					
ANR	2571270	Identifier	false		2569654	1					
ANR	2571271	IfStatement	if ( ( 0 < upd -> string_a [ SA_SETCOMP ] . size ) && ( upd -> ocomp > upd -> string_a [ SA_SETCOMP ] . size ) )		2569654	21					
ANR	2571272	Condition	( 0 < upd -> string_a [ SA_SETCOMP ] . size ) && ( upd -> ocomp > upd -> string_a [ SA_SETCOMP ] . size )	4370:6:159865:159955	2569654	0	True				
ANR	2571273	AndExpression	( 0 < upd -> string_a [ SA_SETCOMP ] . size ) && ( upd -> ocomp > upd -> string_a [ SA_SETCOMP ] . size )		2569654	0		&&			
ANR	2571274	RelationalExpression	0 < upd -> string_a [ SA_SETCOMP ] . size		2569654	0		<			
ANR	2571275	PrimaryExpression	0		2569654	0					
ANR	2571276	MemberAccess	upd -> string_a [ SA_SETCOMP ] . size		2569654	1					
ANR	2571277	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2569654	0					
ANR	2571278	PtrMemberAccess	upd -> string_a		2569654	0					
ANR	2571279	Identifier	upd		2569654	0					
ANR	2571280	Identifier	string_a		2569654	1					
ANR	2571281	Identifier	SA_SETCOMP		2569654	1					
ANR	2571282	Identifier	size		2569654	1					
ANR	2571283	RelationalExpression	upd -> ocomp > upd -> string_a [ SA_SETCOMP ] . size		2569654	1		>			
ANR	2571284	PtrMemberAccess	upd -> ocomp		2569654	0					
ANR	2571285	Identifier	upd		2569654	0					
ANR	2571286	Identifier	ocomp		2569654	1					
ANR	2571287	MemberAccess	upd -> string_a [ SA_SETCOMP ] . size		2569654	1					
ANR	2571288	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2569654	0					
ANR	2571289	PtrMemberAccess	upd -> string_a		2569654	0					
ANR	2571290	Identifier	upd		2569654	0					
ANR	2571291	Identifier	string_a		2569654	1					
ANR	2571292	Identifier	SA_SETCOMP		2569654	1					
ANR	2571293	Identifier	size		2569654	1					
ANR	2571294	CompoundStatement		244:53:8242:8242	2569654	1					
ANR	2571295	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_writer: Only %d SETCOMP-Commands (%d required)\\n"" , ( int ) upd -> string_a [ SA_SETCOMP ] . size , upd -> ocomp )"	4373:6:159999:160150	2569654	0	True				
ANR	2571296	CallExpression	"errprintf ( udev -> memory , ""upd_open_writer: Only %d SETCOMP-Commands (%d required)\\n"" , ( int ) upd -> string_a [ SA_SETCOMP ] . size , upd -> ocomp )"		2569654	0					
ANR	2571297	Callee	errprintf		2569654	0					
ANR	2571298	Identifier	errprintf		2569654	0					
ANR	2571299	ArgumentList	udev -> memory		2569654	1					
ANR	2571300	Argument	udev -> memory		2569654	0					
ANR	2571301	PtrMemberAccess	udev -> memory		2569654	0					
ANR	2571302	Identifier	udev		2569654	0					
ANR	2571303	Identifier	memory		2569654	1					
ANR	2571304	Argument	"""upd_open_writer: Only %d SETCOMP-Commands (%d required)\\n"""		2569654	1					
ANR	2571305	PrimaryExpression	"""upd_open_writer: Only %d SETCOMP-Commands (%d required)\\n"""		2569654	0					
ANR	2571306	Argument	( int ) upd -> string_a [ SA_SETCOMP ] . size		2569654	2					
ANR	2571307	CastExpression	( int ) upd -> string_a [ SA_SETCOMP ] . size		2569654	0					
ANR	2571308	CastTarget	int		2569654	0					
ANR	2571309	MemberAccess	upd -> string_a [ SA_SETCOMP ] . size		2569654	1					
ANR	2571310	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2569654	0					
ANR	2571311	PtrMemberAccess	upd -> string_a		2569654	0					
ANR	2571312	Identifier	upd		2569654	0					
ANR	2571313	Identifier	string_a		2569654	1					
ANR	2571314	Identifier	SA_SETCOMP		2569654	1					
ANR	2571315	Identifier	size		2569654	1					
ANR	2571316	Argument	upd -> ocomp		2569654	3					
ANR	2571317	PtrMemberAccess	upd -> ocomp		2569654	0					
ANR	2571318	Identifier	upd		2569654	0					
ANR	2571319	Identifier	ocomp		2569654	1					
ANR	2571320	ExpressionStatement	success = false	4377:6:160165:160180	2569654	1	True				
ANR	2571321	AssignmentExpression	success = false		2569654	0		=			
ANR	2571322	Identifier	success		2569654	0					
ANR	2571323	Identifier	false		2569654	1					
ANR	2571324	IfStatement	if ( success )		2569654	22					
ANR	2571325	Condition	success	4382:6:160244:160250	2569654	0	True				
ANR	2571326	Identifier	success		2569654	0					
ANR	2571327	CompoundStatement		256:6:8567:8583	2569654	1					
ANR	2571328	IdentifierDeclStatement	"int32_t want , use ;"	4383:6:160283:160299	2569654	0	True				
ANR	2571329	IdentifierDecl	want		2569654	0					
ANR	2571330	IdentifierDeclType	int32_t		2569654	0					
ANR	2571331	Identifier	want		2569654	1					
ANR	2571332	IdentifierDecl	use		2569654	1					
ANR	2571333	IdentifierDeclType	int32_t		2569654	0					
ANR	2571334	Identifier	use		2569654	1					
ANR	2571335	ExpressionStatement	want = upd -> ints [ I_NYPASS ]	4385:6:160308:160335	2569654	1	True				
ANR	2571336	AssignmentExpression	want = upd -> ints [ I_NYPASS ]		2569654	0		=			
ANR	2571337	Identifier	want		2569654	0					
ANR	2571338	ArrayIndexing	upd -> ints [ I_NYPASS ]		2569654	1					
ANR	2571339	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2571340	Identifier	upd		2569654	0					
ANR	2571341	Identifier	ints		2569654	1					
ANR	2571342	Identifier	I_NYPASS		2569654	1					
ANR	2571343	ExpressionStatement	want *= upd -> ints [ I_PINS2WRITE ]	4386:6:160343:160374	2569654	2	True				
ANR	2571344	AssignmentExpression	want *= upd -> ints [ I_PINS2WRITE ]		2569654	0		*=			
ANR	2571345	Identifier	want		2569654	0					
ANR	2571346	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		2569654	1					
ANR	2571347	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2571348	Identifier	upd		2569654	0					
ANR	2571349	Identifier	ints		2569654	1					
ANR	2571350	Identifier	I_PINS2WRITE		2569654	1					
ANR	2571351	IfStatement	if ( upd -> ints [ I_NSCNBUF ] > want )		2569654	3					
ANR	2571352	Condition	upd -> ints [ I_NSCNBUF ] > want	4388:9:160386:160412	2569654	0	True				
ANR	2571353	RelationalExpression	upd -> ints [ I_NSCNBUF ] > want		2569654	0		>			
ANR	2571354	ArrayIndexing	upd -> ints [ I_NSCNBUF ]		2569654	0					
ANR	2571355	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2571356	Identifier	upd		2569654	0					
ANR	2571357	Identifier	ints		2569654	1					
ANR	2571358	Identifier	I_NSCNBUF		2569654	1					
ANR	2571359	Identifier	want		2569654	1					
ANR	2571360	ExpressionStatement	want = upd -> ints [ I_NSCNBUF ]	4388:38:160415:160442	2569654	1	True				
ANR	2571361	AssignmentExpression	want = upd -> ints [ I_NSCNBUF ]		2569654	0		=			
ANR	2571362	Identifier	want		2569654	0					
ANR	2571363	ArrayIndexing	upd -> ints [ I_NSCNBUF ]		2569654	1					
ANR	2571364	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2571365	Identifier	upd		2569654	0					
ANR	2571366	Identifier	ints		2569654	1					
ANR	2571367	Identifier	I_NSCNBUF		2569654	1					
ANR	2571368	IfStatement	if ( 1 > want )		2569654	4					
ANR	2571369	Condition	1 > want	4390:9:160454:160461	2569654	0	True				
ANR	2571370	RelationalExpression	1 > want		2569654	0		>			
ANR	2571371	PrimaryExpression	1		2569654	0					
ANR	2571372	Identifier	want		2569654	1					
ANR	2571373	ExpressionStatement	want = 1	4390:43:160488:160496	2569654	1	True				
ANR	2571374	AssignmentExpression	want = 1		2569654	0		=			
ANR	2571375	Identifier	want		2569654	0					
ANR	2571376	PrimaryExpression	1		2569654	1					
ANR	2571377	ForStatement	for ( use = 1 ; 0 < use ; use <<= 1 )		2569654	5					
ANR	2571378	ForInit	use = 1 ;	4392:10:160509:160516	2569654	0	True				
ANR	2571379	AssignmentExpression	use = 1		2569654	0		=			
ANR	2571380	Identifier	use		2569654	0					
ANR	2571381	PrimaryExpression	1		2569654	1					
ANR	2571382	Condition	0 < use	4392:19:160518:160524	2569654	1	True				
ANR	2571383	RelationalExpression	0 < use		2569654	0		<			
ANR	2571384	PrimaryExpression	0		2569654	0					
ANR	2571385	Identifier	use		2569654	1					
ANR	2571386	AssignmentExpression	use <<= 1	4392:28:160527:160535	2569654	2	True	<<=			
ANR	2571387	Identifier	use		2569654	0					
ANR	2571388	PrimaryExpression	1		2569654	1					
ANR	2571389	IfStatement	if ( use > want )		2569654	3					
ANR	2571390	Condition	use > want	4392:42:160541:160550	2569654	0	True				
ANR	2571391	RelationalExpression	use > want		2569654	0		>			
ANR	2571392	Identifier	use		2569654	0					
ANR	2571393	Identifier	want		2569654	1					
ANR	2571394	BreakStatement	break ;	4392:54:160553:160558	2569654	1	True				
ANR	2571395	ExpressionStatement	upd -> nscnbuf = upd -> ints [ I_NSCNBUF ] = use	4394:6:160567:160608	2569654	6	True				
ANR	2571396	AssignmentExpression	upd -> nscnbuf = upd -> ints [ I_NSCNBUF ] = use		2569654	0		=			
ANR	2571397	PtrMemberAccess	upd -> nscnbuf		2569654	0					
ANR	2571398	Identifier	upd		2569654	0					
ANR	2571399	Identifier	nscnbuf		2569654	1					
ANR	2571400	AssignmentExpression	upd -> ints [ I_NSCNBUF ] = use		2569654	1		=			
ANR	2571401	ArrayIndexing	upd -> ints [ I_NSCNBUF ]		2569654	0					
ANR	2571402	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2571403	Identifier	upd		2569654	0					
ANR	2571404	Identifier	ints		2569654	1					
ANR	2571405	Identifier	I_NSCNBUF		2569654	1					
ANR	2571406	Identifier	use		2569654	1					
ANR	2571407	IfStatement	if ( success )		2569654	23					
ANR	2571408	Condition	success	4400:6:160710:160716	2569654	0	True				
ANR	2571409	Identifier	success		2569654	0					
ANR	2571410	CompoundStatement		273:15:9003:9003	2569654	1					
ANR	2571411	IfStatement	if ( 0 < upd -> ints [ I_PWIDTH ] )		2569654	0					
ANR	2571412	Condition	0 < upd -> ints [ I_PWIDTH ]	4402:9:160777:160799	2569654	0	True				
ANR	2571413	RelationalExpression	0 < upd -> ints [ I_PWIDTH ]		2569654	0		<			
ANR	2571414	PrimaryExpression	0		2569654	0					
ANR	2571415	ArrayIndexing	upd -> ints [ I_PWIDTH ]		2569654	1					
ANR	2571416	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2571417	Identifier	upd		2569654	0					
ANR	2571418	Identifier	ints		2569654	1					
ANR	2571419	Identifier	I_PWIDTH		2569654	1					
ANR	2571420	ExpressionStatement	upd -> pwidth = upd -> ints [ I_PWIDTH ]	4402:34:160802:160835	2569654	1	True				
ANR	2571421	AssignmentExpression	upd -> pwidth = upd -> ints [ I_PWIDTH ]		2569654	0		=			
ANR	2571422	PtrMemberAccess	upd -> pwidth		2569654	0					
ANR	2571423	Identifier	upd		2569654	0					
ANR	2571424	Identifier	pwidth		2569654	1					
ANR	2571425	ArrayIndexing	upd -> ints [ I_PWIDTH ]		2569654	1					
ANR	2571426	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2571427	Identifier	upd		2569654	0					
ANR	2571428	Identifier	ints		2569654	1					
ANR	2571429	Identifier	I_PWIDTH		2569654	1					
ANR	2571430	ElseStatement	else		2569654	0					
ANR	2571431	ExpressionStatement	upd -> pwidth = upd -> gswidth	4403:34:160871:160897	2569654	0	True				
ANR	2571432	AssignmentExpression	upd -> pwidth = upd -> gswidth		2569654	0		=			
ANR	2571433	PtrMemberAccess	upd -> pwidth		2569654	0					
ANR	2571434	Identifier	upd		2569654	0					
ANR	2571435	Identifier	pwidth		2569654	1					
ANR	2571436	PtrMemberAccess	upd -> gswidth		2569654	1					
ANR	2571437	Identifier	upd		2569654	0					
ANR	2571438	Identifier	gswidth		2569654	1					
ANR	2571439	ExpressionStatement	upd -> nbytes = ( upd -> pwidth + CHAR_BIT * sizeof ( upd -> scnbuf [ 0 ] -> bytes [ 0 ] ) - 1 ) / ( CHAR_BIT * sizeof ( upd -> scnbuf [ 0 ] -> bytes [ 0 ] ) )	4405:6:160906:161056	2569654	1	True				
ANR	2571440	AssignmentExpression	upd -> nbytes = ( upd -> pwidth + CHAR_BIT * sizeof ( upd -> scnbuf [ 0 ] -> bytes [ 0 ] ) - 1 ) / ( CHAR_BIT * sizeof ( upd -> scnbuf [ 0 ] -> bytes [ 0 ] ) )		2569654	0		=			
ANR	2571441	PtrMemberAccess	upd -> nbytes		2569654	0					
ANR	2571442	Identifier	upd		2569654	0					
ANR	2571443	Identifier	nbytes		2569654	1					
ANR	2571444	MultiplicativeExpression	( upd -> pwidth + CHAR_BIT * sizeof ( upd -> scnbuf [ 0 ] -> bytes [ 0 ] ) - 1 ) / ( CHAR_BIT * sizeof ( upd -> scnbuf [ 0 ] -> bytes [ 0 ] ) )		2569654	1		/			
ANR	2571445	AdditiveExpression	upd -> pwidth + CHAR_BIT * sizeof ( upd -> scnbuf [ 0 ] -> bytes [ 0 ] ) - 1		2569654	0		+			
ANR	2571446	PtrMemberAccess	upd -> pwidth		2569654	0					
ANR	2571447	Identifier	upd		2569654	0					
ANR	2571448	Identifier	pwidth		2569654	1					
ANR	2571449	AdditiveExpression	CHAR_BIT * sizeof ( upd -> scnbuf [ 0 ] -> bytes [ 0 ] ) - 1		2569654	1		-			
ANR	2571450	MultiplicativeExpression	CHAR_BIT * sizeof ( upd -> scnbuf [ 0 ] -> bytes [ 0 ] )		2569654	0		*			
ANR	2571451	Identifier	CHAR_BIT		2569654	0					
ANR	2571452	SizeofExpression	sizeof ( upd -> scnbuf [ 0 ] -> bytes [ 0 ] )		2569654	1					
ANR	2571453	Sizeof	sizeof		2569654	0					
ANR	2571454	ArrayIndexing	upd -> scnbuf [ 0 ] -> bytes [ 0 ]		2569654	1					
ANR	2571455	PtrMemberAccess	upd -> scnbuf [ 0 ] -> bytes		2569654	0					
ANR	2571456	ArrayIndexing	upd -> scnbuf [ 0 ]		2569654	0					
ANR	2571457	PtrMemberAccess	upd -> scnbuf		2569654	0					
ANR	2571458	Identifier	upd		2569654	0					
ANR	2571459	Identifier	scnbuf		2569654	1					
ANR	2571460	PrimaryExpression	0		2569654	1					
ANR	2571461	Identifier	bytes		2569654	1					
ANR	2571462	PrimaryExpression	0		2569654	1					
ANR	2571463	PrimaryExpression	1		2569654	1					
ANR	2571464	MultiplicativeExpression	CHAR_BIT * sizeof ( upd -> scnbuf [ 0 ] -> bytes [ 0 ] )		2569654	1		*			
ANR	2571465	Identifier	CHAR_BIT		2569654	0					
ANR	2571466	SizeofExpression	sizeof ( upd -> scnbuf [ 0 ] -> bytes [ 0 ] )		2569654	1					
ANR	2571467	Sizeof	sizeof		2569654	0					
ANR	2571468	ArrayIndexing	upd -> scnbuf [ 0 ] -> bytes [ 0 ]		2569654	1					
ANR	2571469	PtrMemberAccess	upd -> scnbuf [ 0 ] -> bytes		2569654	0					
ANR	2571470	ArrayIndexing	upd -> scnbuf [ 0 ]		2569654	0					
ANR	2571471	PtrMemberAccess	upd -> scnbuf		2569654	0					
ANR	2571472	Identifier	upd		2569654	0					
ANR	2571473	Identifier	scnbuf		2569654	1					
ANR	2571474	PrimaryExpression	0		2569654	1					
ANR	2571475	Identifier	bytes		2569654	1					
ANR	2571476	PrimaryExpression	0		2569654	1					
ANR	2571477	ExpressionStatement	upd -> scnmsk = upd -> nscnbuf - 1	4408:6:161065:161096	2569654	2	True				
ANR	2571478	AssignmentExpression	upd -> scnmsk = upd -> nscnbuf - 1		2569654	0		=			
ANR	2571479	PtrMemberAccess	upd -> scnmsk		2569654	0					
ANR	2571480	Identifier	upd		2569654	0					
ANR	2571481	Identifier	scnmsk		2569654	1					
ANR	2571482	AdditiveExpression	upd -> nscnbuf - 1		2569654	1		-			
ANR	2571483	PtrMemberAccess	upd -> nscnbuf		2569654	0					
ANR	2571484	Identifier	upd		2569654	0					
ANR	2571485	Identifier	nscnbuf		2569654	1					
ANR	2571486	PrimaryExpression	1		2569654	1					
ANR	2571487	IfStatement	if ( 0 < upd -> ints [ I_PHEIGHT ] )		2569654	3					
ANR	2571488	Condition	0 < upd -> ints [ I_PHEIGHT ]	4410:9:161108:161131	2569654	0	True				
ANR	2571489	RelationalExpression	0 < upd -> ints [ I_PHEIGHT ]		2569654	0		<			
ANR	2571490	PrimaryExpression	0		2569654	0					
ANR	2571491	ArrayIndexing	upd -> ints [ I_PHEIGHT ]		2569654	1					
ANR	2571492	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2571493	Identifier	upd		2569654	0					
ANR	2571494	Identifier	ints		2569654	1					
ANR	2571495	Identifier	I_PHEIGHT		2569654	1					
ANR	2571496	ExpressionStatement	upd -> pheight = upd -> ints [ I_PHEIGHT ]	4410:35:161134:161169	2569654	1	True				
ANR	2571497	AssignmentExpression	upd -> pheight = upd -> ints [ I_PHEIGHT ]		2569654	0		=			
ANR	2571498	PtrMemberAccess	upd -> pheight		2569654	0					
ANR	2571499	Identifier	upd		2569654	0					
ANR	2571500	Identifier	pheight		2569654	1					
ANR	2571501	ArrayIndexing	upd -> ints [ I_PHEIGHT ]		2569654	1					
ANR	2571502	PtrMemberAccess	upd -> ints		2569654	0					
ANR	2571503	Identifier	upd		2569654	0					
ANR	2571504	Identifier	ints		2569654	1					
ANR	2571505	Identifier	I_PHEIGHT		2569654	1					
ANR	2571506	ElseStatement	else		2569654	0					
ANR	2571507	ExpressionStatement	upd -> pheight = upd -> gsheight	4411:35:161206:161234	2569654	0	True				
ANR	2571508	AssignmentExpression	upd -> pheight = upd -> gsheight		2569654	0		=			
ANR	2571509	PtrMemberAccess	upd -> pheight		2569654	0					
ANR	2571510	Identifier	upd		2569654	0					
ANR	2571511	Identifier	pheight		2569654	1					
ANR	2571512	PtrMemberAccess	upd -> gsheight		2569654	1					
ANR	2571513	Identifier	upd		2569654	0					
ANR	2571514	Identifier	gsheight		2569654	1					
ANR	2571515	IfStatement	if ( success )		2569654	24					
ANR	2571516	Condition	success	4417:6:161345:161351	2569654	0	True				
ANR	2571517	Identifier	success		2569654	0					
ANR	2571518	CompoundStatement		290:15:9638:9638	2569654	1					
ANR	2571519	SwitchStatement	switch ( upd -> choice [ C_FORMAT ] )		2569654	0					
ANR	2571520	Condition	upd -> choice [ C_FORMAT ]	4418:13:161391:161411	2569654	0	True				
ANR	2571521	ArrayIndexing	upd -> choice [ C_FORMAT ]		2569654	0					
ANR	2571522	PtrMemberAccess	upd -> choice		2569654	0					
ANR	2571523	Identifier	upd		2569654	0					
ANR	2571524	Identifier	choice		2569654	1					
ANR	2571525	Identifier	C_FORMAT		2569654	1					
ANR	2571526	CompoundStatement		291:36:9698:9698	2569654	1					
ANR	2571527	Label	case FMT_RAS :	4419:9:161425:161437	2569654	0	True				
ANR	2571528	Identifier	FMT_RAS		2569654	0					
ANR	2571529	IfStatement	if ( 0 > upd_open_rascomp ( udev ) )		2569654	1					
ANR	2571530	Condition	0 > upd_open_rascomp ( udev )	4420:15:161454:161479	2569654	0	True				
ANR	2571531	RelationalExpression	0 > upd_open_rascomp ( udev )		2569654	0		>			
ANR	2571532	PrimaryExpression	0		2569654	0					
ANR	2571533	CallExpression	upd_open_rascomp ( udev )		2569654	1					
ANR	2571534	Callee	upd_open_rascomp		2569654	0					
ANR	2571535	Identifier	upd_open_rascomp		2569654	0					
ANR	2571536	ArgumentList	udev		2569654	1					
ANR	2571537	Argument	udev		2569654	0					
ANR	2571538	Identifier	udev		2569654	0					
ANR	2571539	ExpressionStatement	success = false	4420:43:161482:161497	2569654	1	True				
ANR	2571540	AssignmentExpression	success = false		2569654	0		=			
ANR	2571541	Identifier	success		2569654	0					
ANR	2571542	Identifier	false		2569654	1					
ANR	2571543	BreakStatement	break ;	4421:9:161508:161513	2569654	2	True				
ANR	2571544	Label	case FMT_EPSON :	4422:9:161524:161538	2569654	3	True				
ANR	2571545	Identifier	FMT_EPSON		2569654	0					
ANR	2571546	IfStatement	if ( 0 > upd_open_wrtescp ( udev ) )		2569654	4					
ANR	2571547	Condition	0 > upd_open_wrtescp ( udev )	4423:15:161555:161580	2569654	0	True				
ANR	2571548	RelationalExpression	0 > upd_open_wrtescp ( udev )		2569654	0		>			
ANR	2571549	PrimaryExpression	0		2569654	0					
ANR	2571550	CallExpression	upd_open_wrtescp ( udev )		2569654	1					
ANR	2571551	Callee	upd_open_wrtescp		2569654	0					
ANR	2571552	Identifier	upd_open_wrtescp		2569654	0					
ANR	2571553	ArgumentList	udev		2569654	1					
ANR	2571554	Argument	udev		2569654	0					
ANR	2571555	Identifier	udev		2569654	0					
ANR	2571556	ExpressionStatement	success = false	4423:43:161583:161598	2569654	1	True				
ANR	2571557	AssignmentExpression	success = false		2569654	0		=			
ANR	2571558	Identifier	success		2569654	0					
ANR	2571559	Identifier	false		2569654	1					
ANR	2571560	BreakStatement	break ;	4424:9:161609:161614	2569654	5	True				
ANR	2571561	Label	case FMT_ESCP2Y :	4425:9:161625:161640	2569654	6	True				
ANR	2571562	Identifier	FMT_ESCP2Y		2569654	0					
ANR	2571563	Label	case FMT_ESCP2XY :	4426:9:161651:161667	2569654	7	True				
ANR	2571564	Identifier	FMT_ESCP2XY		2569654	0					
ANR	2571565	Label	case FMT_ESCNMY :	4427:9:161678:161693	2569654	8	True				
ANR	2571566	Identifier	FMT_ESCNMY		2569654	0					
ANR	2571567	IfStatement	if ( 0 > upd_open_wrtescp2 ( udev ) )		2569654	9					
ANR	2571568	Condition	0 > upd_open_wrtescp2 ( udev )	4428:15:161721:161747	2569654	0	True				
ANR	2571569	RelationalExpression	0 > upd_open_wrtescp2 ( udev )		2569654	0		>			
ANR	2571570	PrimaryExpression	0		2569654	0					
ANR	2571571	CallExpression	upd_open_wrtescp2 ( udev )		2569654	1					
ANR	2571572	Callee	upd_open_wrtescp2		2569654	0					
ANR	2571573	Identifier	upd_open_wrtescp2		2569654	0					
ANR	2571574	ArgumentList	udev		2569654	1					
ANR	2571575	Argument	udev		2569654	0					
ANR	2571576	Identifier	udev		2569654	0					
ANR	2571577	ExpressionStatement	success = false	4428:44:161750:161765	2569654	1	True				
ANR	2571578	AssignmentExpression	success = false		2569654	0		=			
ANR	2571579	Identifier	success		2569654	0					
ANR	2571580	Identifier	false		2569654	1					
ANR	2571581	BreakStatement	break ;	4429:9:161776:161781	2569654	10	True				
ANR	2571582	Label	case FMT_RTL :	4430:9:161792:161804	2569654	11	True				
ANR	2571583	Identifier	FMT_RTL		2569654	0					
ANR	2571584	IfStatement	if ( 0 > upd_open_wrtrtl ( udev ) )		2569654	12					
ANR	2571585	Condition	0 > upd_open_wrtrtl ( udev )	4431:15:161821:161845	2569654	0	True				
ANR	2571586	RelationalExpression	0 > upd_open_wrtrtl ( udev )		2569654	0		>			
ANR	2571587	PrimaryExpression	0		2569654	0					
ANR	2571588	CallExpression	upd_open_wrtrtl ( udev )		2569654	1					
ANR	2571589	Callee	upd_open_wrtrtl		2569654	0					
ANR	2571590	Identifier	upd_open_wrtrtl		2569654	0					
ANR	2571591	ArgumentList	udev		2569654	1					
ANR	2571592	Argument	udev		2569654	0					
ANR	2571593	Identifier	udev		2569654	0					
ANR	2571594	ExpressionStatement	success = false	4431:44:161850:161865	2569654	1	True				
ANR	2571595	AssignmentExpression	success = false		2569654	0		=			
ANR	2571596	Identifier	success		2569654	0					
ANR	2571597	Identifier	false		2569654	1					
ANR	2571598	BreakStatement	break ;	4432:9:161876:161881	2569654	13	True				
ANR	2571599	Label	case FMT_CANON :	4433:9:161892:161906	2569654	14	True				
ANR	2571600	Identifier	FMT_CANON		2569654	0					
ANR	2571601	IfStatement	if ( 0 > upd_open_wrtcanon ( udev ) )		2569654	15					
ANR	2571602	Condition	0 > upd_open_wrtcanon ( udev )	4434:15:161934:161960	2569654	0	True				
ANR	2571603	RelationalExpression	0 > upd_open_wrtcanon ( udev )		2569654	0		>			
ANR	2571604	PrimaryExpression	0		2569654	0					
ANR	2571605	CallExpression	upd_open_wrtcanon ( udev )		2569654	1					
ANR	2571606	Callee	upd_open_wrtcanon		2569654	0					
ANR	2571607	Identifier	upd_open_wrtcanon		2569654	0					
ANR	2571608	ArgumentList	udev		2569654	1					
ANR	2571609	Argument	udev		2569654	0					
ANR	2571610	Identifier	udev		2569654	0					
ANR	2571611	ExpressionStatement	success = false	4434:44:161963:161978	2569654	1	True				
ANR	2571612	AssignmentExpression	success = false		2569654	0		=			
ANR	2571613	Identifier	success		2569654	0					
ANR	2571614	Identifier	false		2569654	1					
ANR	2571615	BreakStatement	break ;	4435:9:161989:161994	2569654	16	True				
ANR	2571616	Label	default :	4436:9:162005:162012	2569654	17	True				
ANR	2571617	Identifier	default		2569654	0					
ANR	2571618	ExpressionStatement	success = false	4437:12:162026:162041	2569654	18	True				
ANR	2571619	AssignmentExpression	success = false		2569654	0		=			
ANR	2571620	Identifier	success		2569654	0					
ANR	2571621	Identifier	false		2569654	1					
ANR	2571622	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_writer: Unknown writer-type %d\\n"" , upd -> choice [ C_FORMAT ] )"	4439:12:162088:162194	2569654	19	True				
ANR	2571623	CallExpression	"errprintf ( udev -> memory , ""upd_open_writer: Unknown writer-type %d\\n"" , upd -> choice [ C_FORMAT ] )"		2569654	0					
ANR	2571624	Callee	errprintf		2569654	0					
ANR	2571625	Identifier	errprintf		2569654	0					
ANR	2571626	ArgumentList	udev -> memory		2569654	1					
ANR	2571627	Argument	udev -> memory		2569654	0					
ANR	2571628	PtrMemberAccess	udev -> memory		2569654	0					
ANR	2571629	Identifier	udev		2569654	0					
ANR	2571630	Identifier	memory		2569654	1					
ANR	2571631	Argument	"""upd_open_writer: Unknown writer-type %d\\n"""		2569654	1					
ANR	2571632	PrimaryExpression	"""upd_open_writer: Unknown writer-type %d\\n"""		2569654	0					
ANR	2571633	Argument	upd -> choice [ C_FORMAT ]		2569654	2					
ANR	2571634	ArrayIndexing	upd -> choice [ C_FORMAT ]		2569654	0					
ANR	2571635	PtrMemberAccess	upd -> choice		2569654	0					
ANR	2571636	Identifier	upd		2569654	0					
ANR	2571637	Identifier	choice		2569654	1					
ANR	2571638	Identifier	C_FORMAT		2569654	1					
ANR	2571639	BreakStatement	break ;	4442:9:162212:162217	2569654	20	True				
ANR	2571640	IfStatement	if ( success && ( 0 < upd -> noutbuf ) )		2569654	25					
ANR	2571641	Condition	success && ( 0 < upd -> noutbuf )	4447:6:162305:162333	2569654	0	True				
ANR	2571642	AndExpression	success && ( 0 < upd -> noutbuf )		2569654	0		&&			
ANR	2571643	Identifier	success		2569654	0					
ANR	2571644	RelationalExpression	0 < upd -> noutbuf		2569654	1		<			
ANR	2571645	PrimaryExpression	0		2569654	0					
ANR	2571646	PtrMemberAccess	upd -> noutbuf		2569654	1					
ANR	2571647	Identifier	upd		2569654	0					
ANR	2571648	Identifier	noutbuf		2569654	1					
ANR	2571649	CompoundStatement		320:37:10620:10620	2569654	1					
ANR	2571650	ExpressionStatement	"upd -> outbuf = gs_malloc ( udev -> memory , upd -> noutbuf , sizeof ( upd -> outbuf [ 0 ] ) , ""upd/outbuf"" )"	4448:6:162366:162453	2569654	0	True				
ANR	2571651	AssignmentExpression	"upd -> outbuf = gs_malloc ( udev -> memory , upd -> noutbuf , sizeof ( upd -> outbuf [ 0 ] ) , ""upd/outbuf"" )"		2569654	0		=			
ANR	2571652	PtrMemberAccess	upd -> outbuf		2569654	0					
ANR	2571653	Identifier	upd		2569654	0					
ANR	2571654	Identifier	outbuf		2569654	1					
ANR	2571655	CallExpression	"gs_malloc ( udev -> memory , upd -> noutbuf , sizeof ( upd -> outbuf [ 0 ] ) , ""upd/outbuf"" )"		2569654	1					
ANR	2571656	Callee	gs_malloc		2569654	0					
ANR	2571657	Identifier	gs_malloc		2569654	0					
ANR	2571658	ArgumentList	udev -> memory		2569654	1					
ANR	2571659	Argument	udev -> memory		2569654	0					
ANR	2571660	PtrMemberAccess	udev -> memory		2569654	0					
ANR	2571661	Identifier	udev		2569654	0					
ANR	2571662	Identifier	memory		2569654	1					
ANR	2571663	Argument	upd -> noutbuf		2569654	1					
ANR	2571664	PtrMemberAccess	upd -> noutbuf		2569654	0					
ANR	2571665	Identifier	upd		2569654	0					
ANR	2571666	Identifier	noutbuf		2569654	1					
ANR	2571667	Argument	sizeof ( upd -> outbuf [ 0 ] )		2569654	2					
ANR	2571668	SizeofExpression	sizeof ( upd -> outbuf [ 0 ] )		2569654	0					
ANR	2571669	Sizeof	sizeof		2569654	0					
ANR	2571670	ArrayIndexing	upd -> outbuf [ 0 ]		2569654	1					
ANR	2571671	PtrMemberAccess	upd -> outbuf		2569654	0					
ANR	2571672	Identifier	upd		2569654	0					
ANR	2571673	Identifier	outbuf		2569654	1					
ANR	2571674	PrimaryExpression	0		2569654	1					
ANR	2571675	Argument	"""upd/outbuf"""		2569654	3					
ANR	2571676	PrimaryExpression	"""upd/outbuf"""		2569654	0					
ANR	2571677	IfStatement	if ( ! upd -> outbuf )		2569654	1					
ANR	2571678	Condition	! upd -> outbuf	4449:9:162464:162475	2569654	0	True				
ANR	2571679	UnaryOperationExpression	! upd -> outbuf		2569654	0					
ANR	2571680	UnaryOperator	!		2569654	0					
ANR	2571681	PtrMemberAccess	upd -> outbuf		2569654	1					
ANR	2571682	Identifier	upd		2569654	0					
ANR	2571683	Identifier	outbuf		2569654	1					
ANR	2571684	ExpressionStatement	success = false	4449:23:162478:162493	2569654	1	True				
ANR	2571685	AssignmentExpression	success = false		2569654	0		=			
ANR	2571686	Identifier	success		2569654	0					
ANR	2571687	Identifier	false		2569654	1					
ANR	2571688	IfStatement	if ( success )		2569654	26					
ANR	2571689	Condition	success	4453:6:162612:162618	2569654	0	True				
ANR	2571690	Identifier	success		2569654	0					
ANR	2571691	CompoundStatement		326:15:10905:10905	2569654	1					
ANR	2571692	ExpressionStatement	"upd -> scnbuf = gs_malloc ( udev -> memory , upd -> nscnbuf , sizeof ( upd -> scnbuf [ 0 ] ) , ""upd/scnbuf"" )"	4454:6:162629:162716	2569654	0	True				
ANR	2571693	AssignmentExpression	"upd -> scnbuf = gs_malloc ( udev -> memory , upd -> nscnbuf , sizeof ( upd -> scnbuf [ 0 ] ) , ""upd/scnbuf"" )"		2569654	0		=			
ANR	2571694	PtrMemberAccess	upd -> scnbuf		2569654	0					
ANR	2571695	Identifier	upd		2569654	0					
ANR	2571696	Identifier	scnbuf		2569654	1					
ANR	2571697	CallExpression	"gs_malloc ( udev -> memory , upd -> nscnbuf , sizeof ( upd -> scnbuf [ 0 ] ) , ""upd/scnbuf"" )"		2569654	1					
ANR	2571698	Callee	gs_malloc		2569654	0					
ANR	2571699	Identifier	gs_malloc		2569654	0					
ANR	2571700	ArgumentList	udev -> memory		2569654	1					
ANR	2571701	Argument	udev -> memory		2569654	0					
ANR	2571702	PtrMemberAccess	udev -> memory		2569654	0					
ANR	2571703	Identifier	udev		2569654	0					
ANR	2571704	Identifier	memory		2569654	1					
ANR	2571705	Argument	upd -> nscnbuf		2569654	1					
ANR	2571706	PtrMemberAccess	upd -> nscnbuf		2569654	0					
ANR	2571707	Identifier	upd		2569654	0					
ANR	2571708	Identifier	nscnbuf		2569654	1					
ANR	2571709	Argument	sizeof ( upd -> scnbuf [ 0 ] )		2569654	2					
ANR	2571710	SizeofExpression	sizeof ( upd -> scnbuf [ 0 ] )		2569654	0					
ANR	2571711	Sizeof	sizeof		2569654	0					
ANR	2571712	ArrayIndexing	upd -> scnbuf [ 0 ]		2569654	1					
ANR	2571713	PtrMemberAccess	upd -> scnbuf		2569654	0					
ANR	2571714	Identifier	upd		2569654	0					
ANR	2571715	Identifier	scnbuf		2569654	1					
ANR	2571716	PrimaryExpression	0		2569654	1					
ANR	2571717	Argument	"""upd/scnbuf"""		2569654	3					
ANR	2571718	PrimaryExpression	"""upd/scnbuf"""		2569654	0					
ANR	2571719	IfStatement	if ( NULL == upd -> scnbuf )		2569654	1					
ANR	2571720	Condition	NULL == upd -> scnbuf	4455:9:162727:162745	2569654	0	True				
ANR	2571721	EqualityExpression	NULL == upd -> scnbuf		2569654	0		==			
ANR	2571722	Identifier	NULL		2569654	0					
ANR	2571723	PtrMemberAccess	upd -> scnbuf		2569654	1					
ANR	2571724	Identifier	upd		2569654	0					
ANR	2571725	Identifier	scnbuf		2569654	1					
ANR	2571726	CompoundStatement		328:30:11032:11032	2569654	1					
ANR	2571727	ExpressionStatement	success = false	4456:9:162759:162774	2569654	0	True				
ANR	2571728	AssignmentExpression	success = false		2569654	0		=			
ANR	2571729	Identifier	success		2569654	0					
ANR	2571730	Identifier	false		2569654	1					
ANR	2571731	ElseStatement	else		2569654	0					
ANR	2571732	CompoundStatement		331:9:11084:11092	2569654	0					
ANR	2571733	IdentifierDeclStatement	int ibuf ;	4458:9:162800:162808	2569654	0	True				
ANR	2571734	IdentifierDecl	ibuf		2569654	0					
ANR	2571735	IdentifierDeclType	int		2569654	0					
ANR	2571736	Identifier	ibuf		2569654	1					
ANR	2571737	ForStatement	for ( ibuf = 0 ; ibuf < upd -> nscnbuf ; ++ ibuf )		2569654	1					
ANR	2571738	ForInit	ibuf = 0 ;	4459:13:162823:162831	2569654	0	True				
ANR	2571739	AssignmentExpression	ibuf = 0		2569654	0		=			
ANR	2571740	Identifier	ibuf		2569654	0					
ANR	2571741	PrimaryExpression	0		2569654	1					
ANR	2571742	Condition	ibuf < upd -> nscnbuf	4459:23:162833:162851	2569654	1	True				
ANR	2571743	RelationalExpression	ibuf < upd -> nscnbuf		2569654	0		<			
ANR	2571744	Identifier	ibuf		2569654	0					
ANR	2571745	PtrMemberAccess	upd -> nscnbuf		2569654	1					
ANR	2571746	Identifier	upd		2569654	0					
ANR	2571747	Identifier	nscnbuf		2569654	1					
ANR	2571748	UnaryExpression	++ ibuf	4459:44:162854:162859	2569654	2	True				
ANR	2571749	IncDec	++		2569654	0					
ANR	2571750	Identifier	ibuf		2569654	1					
ANR	2571751	CompoundStatement		332:52:11146:11146	2569654	3					
ANR	2571752	IfStatement	if ( success )		2569654	0					
ANR	2571753	Condition	success	4460:15:162879:162885	2569654	0	True				
ANR	2571754	Identifier	success		2569654	0					
ANR	2571755	ExpressionStatement	"upd -> scnbuf [ ibuf ] = gs_malloc ( udev -> memory , upd -> ocomp , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] ) , ""upd/scnbuf[]"" )"	4460:24:162888:162999	2569654	1	True				
ANR	2571756	AssignmentExpression	"upd -> scnbuf [ ibuf ] = gs_malloc ( udev -> memory , upd -> ocomp , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] ) , ""upd/scnbuf[]"" )"		2569654	0		=			
ANR	2571757	ArrayIndexing	upd -> scnbuf [ ibuf ]		2569654	0					
ANR	2571758	PtrMemberAccess	upd -> scnbuf		2569654	0					
ANR	2571759	Identifier	upd		2569654	0					
ANR	2571760	Identifier	scnbuf		2569654	1					
ANR	2571761	Identifier	ibuf		2569654	1					
ANR	2571762	CallExpression	"gs_malloc ( udev -> memory , upd -> ocomp , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] ) , ""upd/scnbuf[]"" )"		2569654	1					
ANR	2571763	Callee	gs_malloc		2569654	0					
ANR	2571764	Identifier	gs_malloc		2569654	0					
ANR	2571765	ArgumentList	udev -> memory		2569654	1					
ANR	2571766	Argument	udev -> memory		2569654	0					
ANR	2571767	PtrMemberAccess	udev -> memory		2569654	0					
ANR	2571768	Identifier	udev		2569654	0					
ANR	2571769	Identifier	memory		2569654	1					
ANR	2571770	Argument	upd -> ocomp		2569654	1					
ANR	2571771	PtrMemberAccess	upd -> ocomp		2569654	0					
ANR	2571772	Identifier	upd		2569654	0					
ANR	2571773	Identifier	ocomp		2569654	1					
ANR	2571774	Argument	sizeof ( upd -> scnbuf [ 0 ] [ 0 ] )		2569654	2					
ANR	2571775	SizeofExpression	sizeof ( upd -> scnbuf [ 0 ] [ 0 ] )		2569654	0					
ANR	2571776	Sizeof	sizeof		2569654	0					
ANR	2571777	ArrayIndexing	upd -> scnbuf [ 0 ] [ 0 ]		2569654	1					
ANR	2571778	ArrayIndexing	upd -> scnbuf [ 0 ]		2569654	0					
ANR	2571779	PtrMemberAccess	upd -> scnbuf		2569654	0					
ANR	2571780	Identifier	upd		2569654	0					
ANR	2571781	Identifier	scnbuf		2569654	1					
ANR	2571782	PrimaryExpression	0		2569654	1					
ANR	2571783	PrimaryExpression	0		2569654	1					
ANR	2571784	Argument	"""upd/scnbuf[]"""		2569654	3					
ANR	2571785	PrimaryExpression	"""upd/scnbuf[]"""		2569654	0					
ANR	2571786	ElseStatement	else		2569654	0					
ANR	2571787	ExpressionStatement	upd -> scnbuf [ ibuf ] = NULL	4462:17:163018:163042	2569654	0	True				
ANR	2571788	AssignmentExpression	upd -> scnbuf [ ibuf ] = NULL		2569654	0		=			
ANR	2571789	ArrayIndexing	upd -> scnbuf [ ibuf ]		2569654	0					
ANR	2571790	PtrMemberAccess	upd -> scnbuf		2569654	0					
ANR	2571791	Identifier	upd		2569654	0					
ANR	2571792	Identifier	scnbuf		2569654	1					
ANR	2571793	Identifier	ibuf		2569654	1					
ANR	2571794	Identifier	NULL		2569654	1					
ANR	2571795	IfStatement	if ( ! upd -> scnbuf [ ibuf ] )		2569654	1					
ANR	2571796	Condition	! upd -> scnbuf [ ibuf ]	4464:15:163060:163077	2569654	0	True				
ANR	2571797	UnaryOperationExpression	! upd -> scnbuf [ ibuf ]		2569654	0					
ANR	2571798	UnaryOperator	!		2569654	0					
ANR	2571799	ArrayIndexing	upd -> scnbuf [ ibuf ]		2569654	1					
ANR	2571800	PtrMemberAccess	upd -> scnbuf		2569654	0					
ANR	2571801	Identifier	upd		2569654	0					
ANR	2571802	Identifier	scnbuf		2569654	1					
ANR	2571803	Identifier	ibuf		2569654	1					
ANR	2571804	CompoundStatement		337:35:11364:11364	2569654	1					
ANR	2571805	ExpressionStatement	success = false	4465:15:163097:163112	2569654	0	True				
ANR	2571806	AssignmentExpression	success = false		2569654	0		=			
ANR	2571807	Identifier	success		2569654	0					
ANR	2571808	Identifier	false		2569654	1					
ANR	2571809	ElseStatement	else		2569654	0					
ANR	2571810	CompoundStatement		340:15:11434:11443	2569654	0					
ANR	2571811	IdentifierDeclStatement	int icomp ;	4467:15:163150:163159	2569654	0	True				
ANR	2571812	IdentifierDecl	icomp		2569654	0					
ANR	2571813	IdentifierDeclType	int		2569654	0					
ANR	2571814	Identifier	icomp		2569654	1					
ANR	2571815	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		2569654	1					
ANR	2571816	ForInit	icomp = 0 ;	4468:19:163180:163189	2569654	0	True				
ANR	2571817	AssignmentExpression	icomp = 0		2569654	0		=			
ANR	2571818	Identifier	icomp		2569654	0					
ANR	2571819	PrimaryExpression	0		2569654	1					
ANR	2571820	Condition	icomp < upd -> ocomp	4468:30:163191:163208	2569654	1	True				
ANR	2571821	RelationalExpression	icomp < upd -> ocomp		2569654	0		<			
ANR	2571822	Identifier	icomp		2569654	0					
ANR	2571823	PtrMemberAccess	upd -> ocomp		2569654	1					
ANR	2571824	Identifier	upd		2569654	0					
ANR	2571825	Identifier	ocomp		2569654	1					
ANR	2571826	UnaryExpression	++ icomp	4468:50:163211:163217	2569654	2	True				
ANR	2571827	IncDec	++		2569654	0					
ANR	2571828	Identifier	icomp		2569654	1					
ANR	2571829	CompoundStatement		341:59:11504:11504	2569654	3					
ANR	2571830	IfStatement	if ( success )		2569654	0					
ANR	2571831	Condition	success	4469:21:163243:163249	2569654	0	True				
ANR	2571832	Identifier	success		2569654	0					
ANR	2571833	ExpressionStatement	"upd -> scnbuf [ ibuf ] [ icomp ] . bytes = gs_malloc ( udev -> memory , upd -> nbytes , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . bytes [ 0 ] ) , ""upd/bytes"" )"	4469:30:163252:163409	2569654	1	True				
ANR	2571834	AssignmentExpression	"upd -> scnbuf [ ibuf ] [ icomp ] . bytes = gs_malloc ( udev -> memory , upd -> nbytes , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . bytes [ 0 ] ) , ""upd/bytes"" )"		2569654	0		=			
ANR	2571835	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . bytes		2569654	0					
ANR	2571836	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		2569654	0					
ANR	2571837	ArrayIndexing	upd -> scnbuf [ ibuf ]		2569654	0					
ANR	2571838	PtrMemberAccess	upd -> scnbuf		2569654	0					
ANR	2571839	Identifier	upd		2569654	0					
ANR	2571840	Identifier	scnbuf		2569654	1					
ANR	2571841	Identifier	ibuf		2569654	1					
ANR	2571842	Identifier	icomp		2569654	1					
ANR	2571843	Identifier	bytes		2569654	1					
ANR	2571844	CallExpression	"gs_malloc ( udev -> memory , upd -> nbytes , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . bytes [ 0 ] ) , ""upd/bytes"" )"		2569654	1					
ANR	2571845	Callee	gs_malloc		2569654	0					
ANR	2571846	Identifier	gs_malloc		2569654	0					
ANR	2571847	ArgumentList	udev -> memory		2569654	1					
ANR	2571848	Argument	udev -> memory		2569654	0					
ANR	2571849	PtrMemberAccess	udev -> memory		2569654	0					
ANR	2571850	Identifier	udev		2569654	0					
ANR	2571851	Identifier	memory		2569654	1					
ANR	2571852	Argument	upd -> nbytes		2569654	1					
ANR	2571853	PtrMemberAccess	upd -> nbytes		2569654	0					
ANR	2571854	Identifier	upd		2569654	0					
ANR	2571855	Identifier	nbytes		2569654	1					
ANR	2571856	Argument	sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . bytes [ 0 ] )		2569654	2					
ANR	2571857	SizeofExpression	sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . bytes [ 0 ] )		2569654	0					
ANR	2571858	Sizeof	sizeof		2569654	0					
ANR	2571859	ArrayIndexing	upd -> scnbuf [ 0 ] [ 0 ] . bytes [ 0 ]		2569654	1					
ANR	2571860	MemberAccess	upd -> scnbuf [ 0 ] [ 0 ] . bytes		2569654	0					
ANR	2571861	ArrayIndexing	upd -> scnbuf [ 0 ] [ 0 ]		2569654	0					
ANR	2571862	ArrayIndexing	upd -> scnbuf [ 0 ]		2569654	0					
ANR	2571863	PtrMemberAccess	upd -> scnbuf		2569654	0					
ANR	2571864	Identifier	upd		2569654	0					
ANR	2571865	Identifier	scnbuf		2569654	1					
ANR	2571866	PrimaryExpression	0		2569654	1					
ANR	2571867	PrimaryExpression	0		2569654	1					
ANR	2571868	Identifier	bytes		2569654	1					
ANR	2571869	PrimaryExpression	0		2569654	1					
ANR	2571870	Argument	"""upd/bytes"""		2569654	3					
ANR	2571871	PrimaryExpression	"""upd/bytes"""		2569654	0					
ANR	2571872	ElseStatement	else		2569654	0					
ANR	2571873	ExpressionStatement	upd -> scnbuf [ ibuf ] [ icomp ] . bytes = NULL	4472:30:163441:163478	2569654	0	True				
ANR	2571874	AssignmentExpression	upd -> scnbuf [ ibuf ] [ icomp ] . bytes = NULL		2569654	0		=			
ANR	2571875	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . bytes		2569654	0					
ANR	2571876	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		2569654	0					
ANR	2571877	ArrayIndexing	upd -> scnbuf [ ibuf ]		2569654	0					
ANR	2571878	PtrMemberAccess	upd -> scnbuf		2569654	0					
ANR	2571879	Identifier	upd		2569654	0					
ANR	2571880	Identifier	scnbuf		2569654	1					
ANR	2571881	Identifier	ibuf		2569654	1					
ANR	2571882	Identifier	icomp		2569654	1					
ANR	2571883	Identifier	bytes		2569654	1					
ANR	2571884	Identifier	NULL		2569654	1					
ANR	2571885	IfStatement	if ( ! upd -> scnbuf [ ibuf ] [ icomp ] . bytes )		2569654	1					
ANR	2571886	Condition	! upd -> scnbuf [ ibuf ] [ icomp ] . bytes	4473:21:163501:163531	2569654	0	True				
ANR	2571887	UnaryOperationExpression	! upd -> scnbuf [ ibuf ] [ icomp ] . bytes		2569654	0					
ANR	2571888	UnaryOperator	!		2569654	0					
ANR	2571889	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . bytes		2569654	1					
ANR	2571890	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		2569654	0					
ANR	2571891	ArrayIndexing	upd -> scnbuf [ ibuf ]		2569654	0					
ANR	2571892	PtrMemberAccess	upd -> scnbuf		2569654	0					
ANR	2571893	Identifier	upd		2569654	0					
ANR	2571894	Identifier	scnbuf		2569654	1					
ANR	2571895	Identifier	ibuf		2569654	1					
ANR	2571896	Identifier	icomp		2569654	1					
ANR	2571897	Identifier	bytes		2569654	1					
ANR	2571898	ExpressionStatement	success = false	4473:54:163534:163549	2569654	1	True				
ANR	2571899	AssignmentExpression	success = false		2569654	0		=			
ANR	2571900	Identifier	success		2569654	0					
ANR	2571901	Identifier	false		2569654	1					
ANR	2571902	IfStatement	if ( 0 < upd -> nlimits )		2569654	2					
ANR	2571903	Condition	0 < upd -> nlimits	4475:21:163573:163588	2569654	0	True				
ANR	2571904	RelationalExpression	0 < upd -> nlimits		2569654	0		<			
ANR	2571905	PrimaryExpression	0		2569654	0					
ANR	2571906	PtrMemberAccess	upd -> nlimits		2569654	1					
ANR	2571907	Identifier	upd		2569654	0					
ANR	2571908	Identifier	nlimits		2569654	1					
ANR	2571909	CompoundStatement		348:39:11875:11875	2569654	1					
ANR	2571910	ExpressionStatement	"upd -> scnbuf [ ibuf ] [ icomp ] . xbegin = gs_malloc ( udev -> memory , upd -> nlimits , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . xbegin [ 0 ] ) , ""upd/xbegin"" )"	4477:21:163615:163760	2569654	0	True				
ANR	2571911	AssignmentExpression	"upd -> scnbuf [ ibuf ] [ icomp ] . xbegin = gs_malloc ( udev -> memory , upd -> nlimits , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . xbegin [ 0 ] ) , ""upd/xbegin"" )"		2569654	0		=			
ANR	2571912	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		2569654	0					
ANR	2571913	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		2569654	0					
ANR	2571914	ArrayIndexing	upd -> scnbuf [ ibuf ]		2569654	0					
ANR	2571915	PtrMemberAccess	upd -> scnbuf		2569654	0					
ANR	2571916	Identifier	upd		2569654	0					
ANR	2571917	Identifier	scnbuf		2569654	1					
ANR	2571918	Identifier	ibuf		2569654	1					
ANR	2571919	Identifier	icomp		2569654	1					
ANR	2571920	Identifier	xbegin		2569654	1					
ANR	2571921	CallExpression	"gs_malloc ( udev -> memory , upd -> nlimits , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . xbegin [ 0 ] ) , ""upd/xbegin"" )"		2569654	1					
ANR	2571922	Callee	gs_malloc		2569654	0					
ANR	2571923	Identifier	gs_malloc		2569654	0					
ANR	2571924	ArgumentList	udev -> memory		2569654	1					
ANR	2571925	Argument	udev -> memory		2569654	0					
ANR	2571926	PtrMemberAccess	udev -> memory		2569654	0					
ANR	2571927	Identifier	udev		2569654	0					
ANR	2571928	Identifier	memory		2569654	1					
ANR	2571929	Argument	upd -> nlimits		2569654	1					
ANR	2571930	PtrMemberAccess	upd -> nlimits		2569654	0					
ANR	2571931	Identifier	upd		2569654	0					
ANR	2571932	Identifier	nlimits		2569654	1					
ANR	2571933	Argument	sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . xbegin [ 0 ] )		2569654	2					
ANR	2571934	SizeofExpression	sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . xbegin [ 0 ] )		2569654	0					
ANR	2571935	Sizeof	sizeof		2569654	0					
ANR	2571936	ArrayIndexing	upd -> scnbuf [ 0 ] [ 0 ] . xbegin [ 0 ]		2569654	1					
ANR	2571937	MemberAccess	upd -> scnbuf [ 0 ] [ 0 ] . xbegin		2569654	0					
ANR	2571938	ArrayIndexing	upd -> scnbuf [ 0 ] [ 0 ]		2569654	0					
ANR	2571939	ArrayIndexing	upd -> scnbuf [ 0 ]		2569654	0					
ANR	2571940	PtrMemberAccess	upd -> scnbuf		2569654	0					
ANR	2571941	Identifier	upd		2569654	0					
ANR	2571942	Identifier	scnbuf		2569654	1					
ANR	2571943	PrimaryExpression	0		2569654	1					
ANR	2571944	PrimaryExpression	0		2569654	1					
ANR	2571945	Identifier	xbegin		2569654	1					
ANR	2571946	PrimaryExpression	0		2569654	1					
ANR	2571947	Argument	"""upd/xbegin"""		2569654	3					
ANR	2571948	PrimaryExpression	"""upd/xbegin"""		2569654	0					
ANR	2571949	IfStatement	if ( ! upd -> scnbuf [ ibuf ] [ icomp ] . xbegin )		2569654	1					
ANR	2571950	Condition	! upd -> scnbuf [ ibuf ] [ icomp ] . xbegin	4479:24:163786:163817	2569654	0	True				
ANR	2571951	UnaryOperationExpression	! upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		2569654	0					
ANR	2571952	UnaryOperator	!		2569654	0					
ANR	2571953	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		2569654	1					
ANR	2571954	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		2569654	0					
ANR	2571955	ArrayIndexing	upd -> scnbuf [ ibuf ]		2569654	0					
ANR	2571956	PtrMemberAccess	upd -> scnbuf		2569654	0					
ANR	2571957	Identifier	upd		2569654	0					
ANR	2571958	Identifier	scnbuf		2569654	1					
ANR	2571959	Identifier	ibuf		2569654	1					
ANR	2571960	Identifier	icomp		2569654	1					
ANR	2571961	Identifier	xbegin		2569654	1					
ANR	2571962	ExpressionStatement	success = false	4479:58:163820:163835	2569654	1	True				
ANR	2571963	AssignmentExpression	success = false		2569654	0		=			
ANR	2571964	Identifier	success		2569654	0					
ANR	2571965	Identifier	false		2569654	1					
ANR	2571966	ExpressionStatement	"upd -> scnbuf [ ibuf ] [ icomp ] . xend = gs_malloc ( udev -> memory , upd -> nlimits , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . xend [ 0 ] ) , ""upd/xend"" )"	4481:21:163859:164000	2569654	2	True				
ANR	2571967	AssignmentExpression	"upd -> scnbuf [ ibuf ] [ icomp ] . xend = gs_malloc ( udev -> memory , upd -> nlimits , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . xend [ 0 ] ) , ""upd/xend"" )"		2569654	0		=			
ANR	2571968	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xend		2569654	0					
ANR	2571969	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		2569654	0					
ANR	2571970	ArrayIndexing	upd -> scnbuf [ ibuf ]		2569654	0					
ANR	2571971	PtrMemberAccess	upd -> scnbuf		2569654	0					
ANR	2571972	Identifier	upd		2569654	0					
ANR	2571973	Identifier	scnbuf		2569654	1					
ANR	2571974	Identifier	ibuf		2569654	1					
ANR	2571975	Identifier	icomp		2569654	1					
ANR	2571976	Identifier	xend		2569654	1					
ANR	2571977	CallExpression	"gs_malloc ( udev -> memory , upd -> nlimits , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . xend [ 0 ] ) , ""upd/xend"" )"		2569654	1					
ANR	2571978	Callee	gs_malloc		2569654	0					
ANR	2571979	Identifier	gs_malloc		2569654	0					
ANR	2571980	ArgumentList	udev -> memory		2569654	1					
ANR	2571981	Argument	udev -> memory		2569654	0					
ANR	2571982	PtrMemberAccess	udev -> memory		2569654	0					
ANR	2571983	Identifier	udev		2569654	0					
ANR	2571984	Identifier	memory		2569654	1					
ANR	2571985	Argument	upd -> nlimits		2569654	1					
ANR	2571986	PtrMemberAccess	upd -> nlimits		2569654	0					
ANR	2571987	Identifier	upd		2569654	0					
ANR	2571988	Identifier	nlimits		2569654	1					
ANR	2571989	Argument	sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . xend [ 0 ] )		2569654	2					
ANR	2571990	SizeofExpression	sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . xend [ 0 ] )		2569654	0					
ANR	2571991	Sizeof	sizeof		2569654	0					
ANR	2571992	ArrayIndexing	upd -> scnbuf [ 0 ] [ 0 ] . xend [ 0 ]		2569654	1					
ANR	2571993	MemberAccess	upd -> scnbuf [ 0 ] [ 0 ] . xend		2569654	0					
ANR	2571994	ArrayIndexing	upd -> scnbuf [ 0 ] [ 0 ]		2569654	0					
ANR	2571995	ArrayIndexing	upd -> scnbuf [ 0 ]		2569654	0					
ANR	2571996	PtrMemberAccess	upd -> scnbuf		2569654	0					
ANR	2571997	Identifier	upd		2569654	0					
ANR	2571998	Identifier	scnbuf		2569654	1					
ANR	2571999	PrimaryExpression	0		2569654	1					
ANR	2572000	PrimaryExpression	0		2569654	1					
ANR	2572001	Identifier	xend		2569654	1					
ANR	2572002	PrimaryExpression	0		2569654	1					
ANR	2572003	Argument	"""upd/xend"""		2569654	3					
ANR	2572004	PrimaryExpression	"""upd/xend"""		2569654	0					
ANR	2572005	IfStatement	if ( ! upd -> scnbuf [ ibuf ] [ icomp ] . xbegin )		2569654	3					
ANR	2572006	Condition	! upd -> scnbuf [ ibuf ] [ icomp ] . xbegin	4483:24:164026:164057	2569654	0	True				
ANR	2572007	UnaryOperationExpression	! upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		2569654	0					
ANR	2572008	UnaryOperator	!		2569654	0					
ANR	2572009	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		2569654	1					
ANR	2572010	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		2569654	0					
ANR	2572011	ArrayIndexing	upd -> scnbuf [ ibuf ]		2569654	0					
ANR	2572012	PtrMemberAccess	upd -> scnbuf		2569654	0					
ANR	2572013	Identifier	upd		2569654	0					
ANR	2572014	Identifier	scnbuf		2569654	1					
ANR	2572015	Identifier	ibuf		2569654	1					
ANR	2572016	Identifier	icomp		2569654	1					
ANR	2572017	Identifier	xbegin		2569654	1					
ANR	2572018	ExpressionStatement	success = false	4483:58:164060:164075	2569654	1	True				
ANR	2572019	AssignmentExpression	success = false		2569654	0		=			
ANR	2572020	Identifier	success		2569654	0					
ANR	2572021	Identifier	false		2569654	1					
ANR	2572022	ElseStatement	else		2569654	0					
ANR	2572023	CompoundStatement		358:25:12387:12387	2569654	0					
ANR	2572024	ExpressionStatement	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin = NULL	4487:21:164127:164165	2569654	0	True				
ANR	2572025	AssignmentExpression	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin = NULL		2569654	0		=			
ANR	2572026	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		2569654	0					
ANR	2572027	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		2569654	0					
ANR	2572028	ArrayIndexing	upd -> scnbuf [ ibuf ]		2569654	0					
ANR	2572029	PtrMemberAccess	upd -> scnbuf		2569654	0					
ANR	2572030	Identifier	upd		2569654	0					
ANR	2572031	Identifier	scnbuf		2569654	1					
ANR	2572032	Identifier	ibuf		2569654	1					
ANR	2572033	Identifier	icomp		2569654	1					
ANR	2572034	Identifier	xbegin		2569654	1					
ANR	2572035	Identifier	NULL		2569654	1					
ANR	2572036	ExpressionStatement	upd -> scnbuf [ ibuf ] [ icomp ] . xend = NULL	4488:21:164188:164226	2569654	1	True				
ANR	2572037	AssignmentExpression	upd -> scnbuf [ ibuf ] [ icomp ] . xend = NULL		2569654	0		=			
ANR	2572038	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xend		2569654	0					
ANR	2572039	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		2569654	0					
ANR	2572040	ArrayIndexing	upd -> scnbuf [ ibuf ]		2569654	0					
ANR	2572041	PtrMemberAccess	upd -> scnbuf		2569654	0					
ANR	2572042	Identifier	upd		2569654	0					
ANR	2572043	Identifier	scnbuf		2569654	1					
ANR	2572044	Identifier	ibuf		2569654	1					
ANR	2572045	Identifier	icomp		2569654	1					
ANR	2572046	Identifier	xend		2569654	1					
ANR	2572047	Identifier	NULL		2569654	1					
ANR	2572048	IfStatement	if ( success )		2569654	27					
ANR	2572049	Condition	success	4497:6:164311:164317	2569654	0	True				
ANR	2572050	Identifier	success		2569654	0					
ANR	2572051	ExpressionStatement	upd -> flags |= B_FORMAT	4497:15:164320:164342	2569654	1	True				
ANR	2572052	AssignmentExpression	upd -> flags |= B_FORMAT		2569654	0		|=			
ANR	2572053	PtrMemberAccess	upd -> flags		2569654	0					
ANR	2572054	Identifier	upd		2569654	0					
ANR	2572055	Identifier	flags		2569654	1					
ANR	2572056	Identifier	B_FORMAT		2569654	1					
ANR	2572057	ElseStatement	else		2569654	0					
ANR	2572058	ExpressionStatement	upd_close_writer ( udev )	4498:15:164359:164381	2569654	0	True				
ANR	2572059	CallExpression	upd_close_writer ( udev )		2569654	0					
ANR	2572060	Callee	upd_close_writer		2569654	0					
ANR	2572061	Identifier	upd_close_writer		2569654	0					
ANR	2572062	ArgumentList	udev		2569654	1					
ANR	2572063	Argument	udev		2569654	0					
ANR	2572064	Identifier	udev		2569654	0					
ANR	2572065	ReturnStatement	return success ? 1 : - 1 ;	4500:3:164387:164410	2569654	28	True				
ANR	2572066	ConditionalExpression	success ? 1 : - 1		2569654	0					
ANR	2572067	Condition	success		2569654	0					
ANR	2572068	Identifier	success		2569654	0					
ANR	2572069	PrimaryExpression	1		2569654	1					
ANR	2572070	UnaryOperationExpression	- 1		2569654	2					
ANR	2572071	UnaryOperator	-		2569654	0					
ANR	2572072	PrimaryExpression	1		2569654	1					
ANR	2572073	ReturnType	static int		2569654	1					
ANR	2572074	Identifier	upd_open_writer		2569654	2					
ANR	2572075	ParameterList	upd_device * udev		2569654	3					
ANR	2572076	Parameter	upd_device * udev	4127:16:151697:151712	2569654	0	True				
ANR	2572077	ParameterType	upd_device *		2569654	0					
ANR	2572078	Identifier	udev		2569654	1					
ANR	2572079	CFGEntryNode	ENTRY		2569654		True				
ANR	2572080	CFGExitNode	EXIT		2569654		True				
ANR	2572081	Symbol	I_PINS2WRITE		2569654						
ANR	2572082	Symbol	* upd -> int_a		2569654						
ANR	2572083	Symbol	upd -> scnbuf [ ibuf ] [ icomp ] . xend		2569654						
ANR	2572084	Symbol	* * IA_STD_DY		2569654						
ANR	2572085	Symbol	upd -> int_a [ IA_STD_DY ] . data		2569654						
ANR	2572086	Symbol	icomp		2569654						
ANR	2572087	Symbol	* * ibuf		2569654						
ANR	2572088	Symbol	* udev		2569654						
ANR	2572089	Symbol	upd_open_rascomp		2569654						
ANR	2572090	Symbol	upd -> scnbuf [ 0 ] [ 0 ] . xend		2569654						
ANR	2572091	Symbol	I_PWIDTH		2569654						
ANR	2572092	Symbol	* IA_BEG_IX		2569654						
ANR	2572093	Symbol	upd -> nbytes		2569654						
ANR	2572094	Symbol	upd -> scnbuf [ 0 ] [ 0 ] . bytes		2569654						
ANR	2572095	Symbol	* upd -> int_a [ IA_BEG_DY ] . data		2569654						
ANR	2572096	Symbol	C_FORMAT		2569654						
ANR	2572097	Symbol	upd -> int_a [ IA_BEG_DY ] . data		2569654						
ANR	2572098	Symbol	upd_open_wrtrtl		2569654						
ANR	2572099	Symbol	* upd -> scnbuf		2569654						
ANR	2572100	Symbol	ip		2569654						
ANR	2572101	Symbol	want		2569654						
ANR	2572102	Symbol	upd		2569654						
ANR	2572103	Symbol	I_NXPASS		2569654						
ANR	2572104	Symbol	* I_NYPASS		2569654						
ANR	2572105	Symbol	ix		2569654						
ANR	2572106	Symbol	iy		2569654						
ANR	2572107	Symbol	* upd -> scnbuf [ 0 ] [ 0 ] . bytes		2569654						
ANR	2572108	Symbol	gs_malloc		2569654						
ANR	2572109	Symbol	* IA_BEGBOT		2569654						
ANR	2572110	Symbol	* I_BEG_Y		2569654						
ANR	2572111	Symbol	* upd -> outbuf		2569654						
ANR	2572112	Symbol	* IA_END_IX		2569654						
ANR	2572113	Symbol	upd -> pwidth		2569654						
ANR	2572114	Symbol	* ibuf		2569654						
ANR	2572115	Symbol	upd -> pheight		2569654						
ANR	2572116	Symbol	* C_FORMAT		2569654						
ANR	2572117	Symbol	* IA_STD_IX		2569654						
ANR	2572118	Symbol	sum		2569654						
ANR	2572119	Symbol	* * IA_BEGBOT		2569654						
ANR	2572120	Symbol	upd_open_wrtescp2		2569654						
ANR	2572121	Symbol	upd -> int_a [ IA_STD_DY ] . size		2569654						
ANR	2572122	Symbol	I_BEG_Y		2569654						
ANR	2572123	Symbol	* upd -> choice		2569654						
ANR	2572124	Symbol	upd -> flags		2569654						
ANR	2572125	Symbol	upd -> gsheight		2569654						
ANR	2572126	Symbol	I_PHEIGHT		2569654						
ANR	2572127	Symbol	upd -> int_a [ IA_ENDTOP ] . size		2569654						
ANR	2572128	Symbol	* upd		2569654						
ANR	2572129	Symbol	I_OCOMP		2569654						
ANR	2572130	Symbol	* upd -> scnbuf [ 0 ] [ 0 ] . xbegin		2569654						
ANR	2572131	Symbol	upd -> int_a [ IA_BEGBOT ] . size		2569654						
ANR	2572132	Symbol	ibuf		2569654						
ANR	2572133	Symbol	upd -> ocomp		2569654						
ANR	2572134	Symbol	IA_BEG_IX		2569654						
ANR	2572135	Symbol	upd -> int_a [ IA_BEG_IX ] . data		2569654						
ANR	2572136	Symbol	* I_NPASS		2569654						
ANR	2572137	Symbol	upd_open_wrtescp		2569654						
ANR	2572138	Symbol	IA_BEGBOT		2569654						
ANR	2572139	Symbol	upd -> scnbuf [ 0 ] -> bytes		2569654						
ANR	2572140	Symbol	B_RENDER		2569654						
ANR	2572141	Symbol	i		2569654						
ANR	2572142	Symbol	* * upd -> scnbuf		2569654						
ANR	2572143	Symbol	* * upd -> int_a		2569654						
ANR	2572144	Symbol	IA_STD_IX		2569654						
ANR	2572145	Symbol	upd -> noutbuf		2569654						
ANR	2572146	Symbol	IA_END_IX		2569654						
ANR	2572147	Symbol	upd -> writer		2569654						
ANR	2572148	Symbol	upd -> nscnbuf		2569654						
ANR	2572149	Symbol	* I_END_Y		2569654						
ANR	2572150	Symbol	* * upd		2569654						
ANR	2572151	Symbol	* IA_BEG_DY		2569654						
ANR	2572152	Symbol	* upd -> string_a		2569654						
ANR	2572153	Symbol	SA_SETCOMP		2569654						
ANR	2572154	Symbol	* * IA_ENDTOP		2569654						
ANR	2572155	Symbol	* * * * upd		2569654						
ANR	2572156	Symbol	use		2569654						
ANR	2572157	Symbol	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		2569654						
ANR	2572158	Symbol	* SA_SETCOMP		2569654						
ANR	2572159	Symbol	* upd -> scnbuf [ 0 ] -> bytes		2569654						
ANR	2572160	Symbol	* I_PHEIGHT		2569654						
ANR	2572161	Symbol	* upd -> int_a [ IA_BEGBOT ] . data		2569654						
ANR	2572162	Symbol	* I_NXPASS		2569654						
ANR	2572163	Symbol	upd -> nlimits		2569654						
ANR	2572164	Symbol	upd -> int_a		2569654						
ANR	2572165	Symbol	* I_NSCNBUF		2569654						
ANR	2572166	Symbol	* * * upd -> scnbuf		2569654						
ANR	2572167	Symbol	upd -> scnbuf [ ibuf ] [ icomp ] . bytes		2569654						
ANR	2572168	Symbol	NULL		2569654						
ANR	2572169	Symbol	upd -> int_a [ IA_ENDTOP ] . data		2569654						
ANR	2572170	Symbol	upd -> start_writer		2569654						
ANR	2572171	Symbol	* upd -> int_a [ IA_ENDTOP ] . data		2569654						
ANR	2572172	Symbol	upd -> int_a [ IA_END_IX ] . size		2569654						
ANR	2572173	Symbol	upd -> int_a [ IA_END_IX ] . data		2569654						
ANR	2572174	Symbol	upd -> gswidth		2569654						
ANR	2572175	Symbol	upd -> int_a [ IA_STD_IX ] . data		2569654						
ANR	2572176	Symbol	upd -> scnbuf [ 0 ] [ 0 ] . xbegin		2569654						
ANR	2572177	Symbol	udev		2569654						
ANR	2572178	Symbol	success		2569654						
ANR	2572179	Symbol	true		2569654						
ANR	2572180	Symbol	upd -> ints		2569654						
ANR	2572181	Symbol	B_ERROR		2569654						
ANR	2572182	Symbol	upd -> int_a [ IA_STD_IX ] . size		2569654						
ANR	2572183	Symbol	upd -> ncomp		2569654						
ANR	2572184	Symbol	* ip		2569654						
ANR	2572185	Symbol	CHAR_BIT		2569654						
ANR	2572186	Symbol	udev -> upd		2569654						
ANR	2572187	Symbol	upd -> int_a [ IA_END_DY ] . size		2569654						
ANR	2572188	Symbol	upd -> int_a [ IA_BEG_DY ] . size		2569654						
ANR	2572189	Symbol	* icomp		2569654						
ANR	2572190	Symbol	* IA_ENDTOP		2569654						
ANR	2572191	Symbol	* IA_STD_DY		2569654						
ANR	2572192	Symbol	* IA_END_DY		2569654						
ANR	2572193	Symbol	* ip ++		2569654						
ANR	2572194	Symbol	I_NYPASS		2569654						
ANR	2572195	Symbol	I_NPASS		2569654						
ANR	2572196	Symbol	IA_STD_DY		2569654						
ANR	2572197	Symbol	I_NSCNBUF		2569654						
ANR	2572198	Symbol	udev -> memory		2569654						
ANR	2572199	Symbol	B_FORMAT		2569654						
ANR	2572200	Symbol	upd -> scnmsk		2569654						
ANR	2572201	Symbol	* * * upd		2569654						
ANR	2572202	Symbol	upd_open_wrtcanon		2569654						
ANR	2572203	Symbol	false		2569654						
ANR	2572204	Symbol	IA_ENDTOP		2569654						
ANR	2572205	Symbol	IA_END_DY		2569654						
ANR	2572206	Symbol	upd -> choice		2569654						
ANR	2572207	Symbol	I_END_Y		2569654						
ANR	2572208	Symbol	* I_OCOMP		2569654						
ANR	2572209	Symbol	upd -> string_a		2569654						
ANR	2572210	Symbol	* I_PWIDTH		2569654						
ANR	2572211	Symbol	* upd -> ints		2569654						
ANR	2572212	Symbol	* I_PINS2WRITE		2569654						
ANR	2572213	Symbol	* i		2569654						
ANR	2572214	Symbol	upd -> scnbuf		2569654						
ANR	2572215	Symbol	upd -> string_a [ SA_SETCOMP ] . size		2569654						
ANR	2572216	Symbol	* upd -> scnbuf [ 0 ] [ 0 ] . xend		2569654						
ANR	2572217	Symbol	IA_BEG_DY		2569654						
ANR	2572218	Symbol	* upd -> int_a [ IA_STD_DY ] . data		2569654						
ANR	2572219	Symbol	upd -> outbuf		2569654						
ANR	2572220	Symbol	upd -> int_a [ IA_BEG_IX ] . size		2569654						
ANR	2572221	Symbol	upd -> int_a [ IA_BEGBOT ] . data		2569654						
ANR	2572222	Symbol	* * IA_BEG_DY		2569654						
ANR	2572223	Function	upd_close_writer	4507:0:164638:166370							
ANR	2572224	FunctionDef	upd_close_writer (upd_device * udev)		2572223	0					
ANR	2572225	CompoundStatement		4509:0:164685:166370	2572223	0					
ANR	2572226	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	4510:3:164690:164717	2572223	0	True				
ANR	2572227	IdentifierDecl	upd = udev -> upd		2572223	0					
ANR	2572228	IdentifierDeclType	const upd_p		2572223	0					
ANR	2572229	Identifier	upd		2572223	1					
ANR	2572230	AssignmentExpression	upd = udev -> upd		2572223	2		=			
ANR	2572231	Identifier	upd		2572223	0					
ANR	2572232	PtrMemberAccess	udev -> upd		2572223	1					
ANR	2572233	Identifier	udev		2572223	0					
ANR	2572234	Identifier	upd		2572223	1					
ANR	2572235	IfStatement	if ( upd )		2572223	1					
ANR	2572236	Condition	upd	4512:6:164726:164728	2572223	0	True				
ANR	2572237	Identifier	upd		2572223	0					
ANR	2572238	CompoundStatement		5:6:53:67	2572223	1					
ANR	2572239	IdentifierDeclStatement	"int ibuf , icomp ;"	4513:6:164739:164753	2572223	0	True				
ANR	2572240	IdentifierDecl	ibuf		2572223	0					
ANR	2572241	IdentifierDeclType	int		2572223	0					
ANR	2572242	Identifier	ibuf		2572223	1					
ANR	2572243	IdentifierDecl	icomp		2572223	1					
ANR	2572244	IdentifierDeclType	int		2572223	0					
ANR	2572245	Identifier	icomp		2572223	1					
ANR	2572246	IfStatement	if ( ( 0 < upd -> noutbuf ) && upd -> outbuf )		2572223	1					
ANR	2572247	Condition	( 0 < upd -> noutbuf ) && upd -> outbuf	4515:9:164765:164797	2572223	0	True				
ANR	2572248	AndExpression	( 0 < upd -> noutbuf ) && upd -> outbuf		2572223	0		&&			
ANR	2572249	RelationalExpression	0 < upd -> noutbuf		2572223	0		<			
ANR	2572250	PrimaryExpression	0		2572223	0					
ANR	2572251	PtrMemberAccess	upd -> noutbuf		2572223	1					
ANR	2572252	Identifier	upd		2572223	0					
ANR	2572253	Identifier	noutbuf		2572223	1					
ANR	2572254	PtrMemberAccess	upd -> outbuf		2572223	1					
ANR	2572255	Identifier	upd		2572223	0					
ANR	2572256	Identifier	outbuf		2572223	1					
ANR	2572257	ExpressionStatement	"gs_free ( udev -> memory , upd -> outbuf , upd -> noutbuf , sizeof ( upd -> outbuf [ 0 ] ) , ""upd/outbuf"" )"	4516:9:164809:164892	2572223	1	True				
ANR	2572258	CallExpression	"gs_free ( udev -> memory , upd -> outbuf , upd -> noutbuf , sizeof ( upd -> outbuf [ 0 ] ) , ""upd/outbuf"" )"		2572223	0					
ANR	2572259	Callee	gs_free		2572223	0					
ANR	2572260	Identifier	gs_free		2572223	0					
ANR	2572261	ArgumentList	udev -> memory		2572223	1					
ANR	2572262	Argument	udev -> memory		2572223	0					
ANR	2572263	PtrMemberAccess	udev -> memory		2572223	0					
ANR	2572264	Identifier	udev		2572223	0					
ANR	2572265	Identifier	memory		2572223	1					
ANR	2572266	Argument	upd -> outbuf		2572223	1					
ANR	2572267	PtrMemberAccess	upd -> outbuf		2572223	0					
ANR	2572268	Identifier	upd		2572223	0					
ANR	2572269	Identifier	outbuf		2572223	1					
ANR	2572270	Argument	upd -> noutbuf		2572223	2					
ANR	2572271	PtrMemberAccess	upd -> noutbuf		2572223	0					
ANR	2572272	Identifier	upd		2572223	0					
ANR	2572273	Identifier	noutbuf		2572223	1					
ANR	2572274	Argument	sizeof ( upd -> outbuf [ 0 ] )		2572223	3					
ANR	2572275	SizeofExpression	sizeof ( upd -> outbuf [ 0 ] )		2572223	0					
ANR	2572276	Sizeof	sizeof		2572223	0					
ANR	2572277	ArrayIndexing	upd -> outbuf [ 0 ]		2572223	1					
ANR	2572278	PtrMemberAccess	upd -> outbuf		2572223	0					
ANR	2572279	Identifier	upd		2572223	0					
ANR	2572280	Identifier	outbuf		2572223	1					
ANR	2572281	PrimaryExpression	0		2572223	1					
ANR	2572282	Argument	"""upd/outbuf"""		2572223	4					
ANR	2572283	PrimaryExpression	"""upd/outbuf"""		2572223	0					
ANR	2572284	ExpressionStatement	upd -> noutbuf = 0	4517:6:164900:164916	2572223	2	True				
ANR	2572285	AssignmentExpression	upd -> noutbuf = 0		2572223	0		=			
ANR	2572286	PtrMemberAccess	upd -> noutbuf		2572223	0					
ANR	2572287	Identifier	upd		2572223	0					
ANR	2572288	Identifier	noutbuf		2572223	1					
ANR	2572289	PrimaryExpression	0		2572223	1					
ANR	2572290	ExpressionStatement	upd -> outbuf = NULL	4518:6:164924:164943	2572223	3	True				
ANR	2572291	AssignmentExpression	upd -> outbuf = NULL		2572223	0		=			
ANR	2572292	PtrMemberAccess	upd -> outbuf		2572223	0					
ANR	2572293	Identifier	upd		2572223	0					
ANR	2572294	Identifier	outbuf		2572223	1					
ANR	2572295	Identifier	NULL		2572223	1					
ANR	2572296	IfStatement	if ( ( 0 < upd -> nscnbuf ) && upd -> scnbuf )		2572223	4					
ANR	2572297	Condition	( 0 < upd -> nscnbuf ) && upd -> scnbuf	4520:9:164955:164987	2572223	0	True				
ANR	2572298	AndExpression	( 0 < upd -> nscnbuf ) && upd -> scnbuf		2572223	0		&&			
ANR	2572299	RelationalExpression	0 < upd -> nscnbuf		2572223	0		<			
ANR	2572300	PrimaryExpression	0		2572223	0					
ANR	2572301	PtrMemberAccess	upd -> nscnbuf		2572223	1					
ANR	2572302	Identifier	upd		2572223	0					
ANR	2572303	Identifier	nscnbuf		2572223	1					
ANR	2572304	PtrMemberAccess	upd -> scnbuf		2572223	1					
ANR	2572305	Identifier	upd		2572223	0					
ANR	2572306	Identifier	scnbuf		2572223	1					
ANR	2572307	CompoundStatement		12:44:304:304	2572223	1					
ANR	2572308	ForStatement	for ( ibuf = 0 ; upd -> nscnbuf > ibuf ; ++ ibuf )		2572223	0					
ANR	2572309	ForInit	ibuf = 0 ;	4521:13:165005:165013	2572223	0	True				
ANR	2572310	AssignmentExpression	ibuf = 0		2572223	0		=			
ANR	2572311	Identifier	ibuf		2572223	0					
ANR	2572312	PrimaryExpression	0		2572223	1					
ANR	2572313	Condition	upd -> nscnbuf > ibuf	4521:23:165015:165033	2572223	1	True				
ANR	2572314	RelationalExpression	upd -> nscnbuf > ibuf		2572223	0		>			
ANR	2572315	PtrMemberAccess	upd -> nscnbuf		2572223	0					
ANR	2572316	Identifier	upd		2572223	0					
ANR	2572317	Identifier	nscnbuf		2572223	1					
ANR	2572318	Identifier	ibuf		2572223	1					
ANR	2572319	UnaryExpression	++ ibuf	4521:44:165036:165041	2572223	2	True				
ANR	2572320	IncDec	++		2572223	0					
ANR	2572321	Identifier	ibuf		2572223	1					
ANR	2572322	CompoundStatement		13:52:358:358	2572223	3					
ANR	2572323	IfStatement	if ( ! upd -> scnbuf [ ibuf ] )		2572223	0					
ANR	2572324	Condition	! upd -> scnbuf [ ibuf ]	4523:15:165062:165079	2572223	0	True				
ANR	2572325	UnaryOperationExpression	! upd -> scnbuf [ ibuf ]		2572223	0					
ANR	2572326	UnaryOperator	!		2572223	0					
ANR	2572327	ArrayIndexing	upd -> scnbuf [ ibuf ]		2572223	1					
ANR	2572328	PtrMemberAccess	upd -> scnbuf		2572223	0					
ANR	2572329	Identifier	upd		2572223	0					
ANR	2572330	Identifier	scnbuf		2572223	1					
ANR	2572331	Identifier	ibuf		2572223	1					
ANR	2572332	ContinueStatement	continue ;	4523:35:165082:165090	2572223	1	True				
ANR	2572333	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		2572223	1					
ANR	2572334	ForInit	icomp = 0 ;	4525:16:165109:165118	2572223	0	True				
ANR	2572335	AssignmentExpression	icomp = 0		2572223	0		=			
ANR	2572336	Identifier	icomp		2572223	0					
ANR	2572337	PrimaryExpression	0		2572223	1					
ANR	2572338	Condition	icomp < upd -> ocomp	4525:27:165120:165137	2572223	1	True				
ANR	2572339	RelationalExpression	icomp < upd -> ocomp		2572223	0		<			
ANR	2572340	Identifier	icomp		2572223	0					
ANR	2572341	PtrMemberAccess	upd -> ocomp		2572223	1					
ANR	2572342	Identifier	upd		2572223	0					
ANR	2572343	Identifier	ocomp		2572223	1					
ANR	2572344	UnaryExpression	++ icomp	4525:47:165140:165146	2572223	2	True				
ANR	2572345	IncDec	++		2572223	0					
ANR	2572346	Identifier	icomp		2572223	1					
ANR	2572347	CompoundStatement		17:56:463:463	2572223	3					
ANR	2572348	IfStatement	if ( ( 0 < upd -> nbytes ) && upd -> scnbuf [ ibuf ] [ icomp ] . bytes )		2572223	0					
ANR	2572349	Condition	( 0 < upd -> nbytes ) && upd -> scnbuf [ ibuf ] [ icomp ] . bytes	4527:18:165170:165220	2572223	0	True				
ANR	2572350	AndExpression	( 0 < upd -> nbytes ) && upd -> scnbuf [ ibuf ] [ icomp ] . bytes		2572223	0		&&			
ANR	2572351	RelationalExpression	0 < upd -> nbytes		2572223	0		<			
ANR	2572352	PrimaryExpression	0		2572223	0					
ANR	2572353	PtrMemberAccess	upd -> nbytes		2572223	1					
ANR	2572354	Identifier	upd		2572223	0					
ANR	2572355	Identifier	nbytes		2572223	1					
ANR	2572356	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . bytes		2572223	1					
ANR	2572357	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		2572223	0					
ANR	2572358	ArrayIndexing	upd -> scnbuf [ ibuf ]		2572223	0					
ANR	2572359	PtrMemberAccess	upd -> scnbuf		2572223	0					
ANR	2572360	Identifier	upd		2572223	0					
ANR	2572361	Identifier	scnbuf		2572223	1					
ANR	2572362	Identifier	ibuf		2572223	1					
ANR	2572363	Identifier	icomp		2572223	1					
ANR	2572364	Identifier	bytes		2572223	1					
ANR	2572365	ExpressionStatement	"gs_free ( udev -> memory , upd -> scnbuf [ ibuf ] [ icomp ] . bytes , upd -> nbytes , sizeof ( upd -> scnbuf [ ibuf ] [ icomp ] . words [ 0 ] ) , ""upd/bytes"" )"	4528:18:165241:165382	2572223	1	True				
ANR	2572366	CallExpression	"gs_free ( udev -> memory , upd -> scnbuf [ ibuf ] [ icomp ] . bytes , upd -> nbytes , sizeof ( upd -> scnbuf [ ibuf ] [ icomp ] . words [ 0 ] ) , ""upd/bytes"" )"		2572223	0					
ANR	2572367	Callee	gs_free		2572223	0					
ANR	2572368	Identifier	gs_free		2572223	0					
ANR	2572369	ArgumentList	udev -> memory		2572223	1					
ANR	2572370	Argument	udev -> memory		2572223	0					
ANR	2572371	PtrMemberAccess	udev -> memory		2572223	0					
ANR	2572372	Identifier	udev		2572223	0					
ANR	2572373	Identifier	memory		2572223	1					
ANR	2572374	Argument	upd -> scnbuf [ ibuf ] [ icomp ] . bytes		2572223	1					
ANR	2572375	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . bytes		2572223	0					
ANR	2572376	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		2572223	0					
ANR	2572377	ArrayIndexing	upd -> scnbuf [ ibuf ]		2572223	0					
ANR	2572378	PtrMemberAccess	upd -> scnbuf		2572223	0					
ANR	2572379	Identifier	upd		2572223	0					
ANR	2572380	Identifier	scnbuf		2572223	1					
ANR	2572381	Identifier	ibuf		2572223	1					
ANR	2572382	Identifier	icomp		2572223	1					
ANR	2572383	Identifier	bytes		2572223	1					
ANR	2572384	Argument	upd -> nbytes		2572223	2					
ANR	2572385	PtrMemberAccess	upd -> nbytes		2572223	0					
ANR	2572386	Identifier	upd		2572223	0					
ANR	2572387	Identifier	nbytes		2572223	1					
ANR	2572388	Argument	sizeof ( upd -> scnbuf [ ibuf ] [ icomp ] . words [ 0 ] )		2572223	3					
ANR	2572389	SizeofExpression	sizeof ( upd -> scnbuf [ ibuf ] [ icomp ] . words [ 0 ] )		2572223	0					
ANR	2572390	Sizeof	sizeof		2572223	0					
ANR	2572391	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ] . words [ 0 ]		2572223	1					
ANR	2572392	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . words		2572223	0					
ANR	2572393	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		2572223	0					
ANR	2572394	ArrayIndexing	upd -> scnbuf [ ibuf ]		2572223	0					
ANR	2572395	PtrMemberAccess	upd -> scnbuf		2572223	0					
ANR	2572396	Identifier	upd		2572223	0					
ANR	2572397	Identifier	scnbuf		2572223	1					
ANR	2572398	Identifier	ibuf		2572223	1					
ANR	2572399	Identifier	icomp		2572223	1					
ANR	2572400	Identifier	words		2572223	1					
ANR	2572401	PrimaryExpression	0		2572223	1					
ANR	2572402	Argument	"""upd/bytes"""		2572223	4					
ANR	2572403	PrimaryExpression	"""upd/bytes"""		2572223	0					
ANR	2572404	ExpressionStatement	upd -> scnbuf [ ibuf ] [ icomp ] . bytes = NULL	4530:15:165399:165436	2572223	1	True				
ANR	2572405	AssignmentExpression	upd -> scnbuf [ ibuf ] [ icomp ] . bytes = NULL		2572223	0		=			
ANR	2572406	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . bytes		2572223	0					
ANR	2572407	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		2572223	0					
ANR	2572408	ArrayIndexing	upd -> scnbuf [ ibuf ]		2572223	0					
ANR	2572409	PtrMemberAccess	upd -> scnbuf		2572223	0					
ANR	2572410	Identifier	upd		2572223	0					
ANR	2572411	Identifier	scnbuf		2572223	1					
ANR	2572412	Identifier	ibuf		2572223	1					
ANR	2572413	Identifier	icomp		2572223	1					
ANR	2572414	Identifier	bytes		2572223	1					
ANR	2572415	Identifier	NULL		2572223	1					
ANR	2572416	IfStatement	if ( ( 0 < upd -> nlimits ) && upd -> scnbuf [ ibuf ] [ icomp ] . xbegin )		2572223	2					
ANR	2572417	Condition	( 0 < upd -> nlimits ) && upd -> scnbuf [ ibuf ] [ icomp ] . xbegin	4532:18:165457:165509	2572223	0	True				
ANR	2572418	AndExpression	( 0 < upd -> nlimits ) && upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		2572223	0		&&			
ANR	2572419	RelationalExpression	0 < upd -> nlimits		2572223	0		<			
ANR	2572420	PrimaryExpression	0		2572223	0					
ANR	2572421	PtrMemberAccess	upd -> nlimits		2572223	1					
ANR	2572422	Identifier	upd		2572223	0					
ANR	2572423	Identifier	nlimits		2572223	1					
ANR	2572424	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		2572223	1					
ANR	2572425	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		2572223	0					
ANR	2572426	ArrayIndexing	upd -> scnbuf [ ibuf ]		2572223	0					
ANR	2572427	PtrMemberAccess	upd -> scnbuf		2572223	0					
ANR	2572428	Identifier	upd		2572223	0					
ANR	2572429	Identifier	scnbuf		2572223	1					
ANR	2572430	Identifier	ibuf		2572223	1					
ANR	2572431	Identifier	icomp		2572223	1					
ANR	2572432	Identifier	xbegin		2572223	1					
ANR	2572433	ExpressionStatement	"gs_free ( udev -> memory , upd -> scnbuf [ ibuf ] [ icomp ] . xbegin , upd -> nlimits , sizeof ( upd -> scnbuf [ ibuf ] [ icomp ] . xbegin [ 0 ] ) , ""upd/xbegin"" )"	4533:18:165530:165675	2572223	1	True				
ANR	2572434	CallExpression	"gs_free ( udev -> memory , upd -> scnbuf [ ibuf ] [ icomp ] . xbegin , upd -> nlimits , sizeof ( upd -> scnbuf [ ibuf ] [ icomp ] . xbegin [ 0 ] ) , ""upd/xbegin"" )"		2572223	0					
ANR	2572435	Callee	gs_free		2572223	0					
ANR	2572436	Identifier	gs_free		2572223	0					
ANR	2572437	ArgumentList	udev -> memory		2572223	1					
ANR	2572438	Argument	udev -> memory		2572223	0					
ANR	2572439	PtrMemberAccess	udev -> memory		2572223	0					
ANR	2572440	Identifier	udev		2572223	0					
ANR	2572441	Identifier	memory		2572223	1					
ANR	2572442	Argument	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		2572223	1					
ANR	2572443	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		2572223	0					
ANR	2572444	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		2572223	0					
ANR	2572445	ArrayIndexing	upd -> scnbuf [ ibuf ]		2572223	0					
ANR	2572446	PtrMemberAccess	upd -> scnbuf		2572223	0					
ANR	2572447	Identifier	upd		2572223	0					
ANR	2572448	Identifier	scnbuf		2572223	1					
ANR	2572449	Identifier	ibuf		2572223	1					
ANR	2572450	Identifier	icomp		2572223	1					
ANR	2572451	Identifier	xbegin		2572223	1					
ANR	2572452	Argument	upd -> nlimits		2572223	2					
ANR	2572453	PtrMemberAccess	upd -> nlimits		2572223	0					
ANR	2572454	Identifier	upd		2572223	0					
ANR	2572455	Identifier	nlimits		2572223	1					
ANR	2572456	Argument	sizeof ( upd -> scnbuf [ ibuf ] [ icomp ] . xbegin [ 0 ] )		2572223	3					
ANR	2572457	SizeofExpression	sizeof ( upd -> scnbuf [ ibuf ] [ icomp ] . xbegin [ 0 ] )		2572223	0					
ANR	2572458	Sizeof	sizeof		2572223	0					
ANR	2572459	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin [ 0 ]		2572223	1					
ANR	2572460	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		2572223	0					
ANR	2572461	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		2572223	0					
ANR	2572462	ArrayIndexing	upd -> scnbuf [ ibuf ]		2572223	0					
ANR	2572463	PtrMemberAccess	upd -> scnbuf		2572223	0					
ANR	2572464	Identifier	upd		2572223	0					
ANR	2572465	Identifier	scnbuf		2572223	1					
ANR	2572466	Identifier	ibuf		2572223	1					
ANR	2572467	Identifier	icomp		2572223	1					
ANR	2572468	Identifier	xbegin		2572223	1					
ANR	2572469	PrimaryExpression	0		2572223	1					
ANR	2572470	Argument	"""upd/xbegin"""		2572223	4					
ANR	2572471	PrimaryExpression	"""upd/xbegin"""		2572223	0					
ANR	2572472	ExpressionStatement	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin = NULL	4535:15:165692:165730	2572223	3	True				
ANR	2572473	AssignmentExpression	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin = NULL		2572223	0		=			
ANR	2572474	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		2572223	0					
ANR	2572475	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		2572223	0					
ANR	2572476	ArrayIndexing	upd -> scnbuf [ ibuf ]		2572223	0					
ANR	2572477	PtrMemberAccess	upd -> scnbuf		2572223	0					
ANR	2572478	Identifier	upd		2572223	0					
ANR	2572479	Identifier	scnbuf		2572223	1					
ANR	2572480	Identifier	ibuf		2572223	1					
ANR	2572481	Identifier	icomp		2572223	1					
ANR	2572482	Identifier	xbegin		2572223	1					
ANR	2572483	Identifier	NULL		2572223	1					
ANR	2572484	IfStatement	if ( ( 0 < upd -> nlimits ) && upd -> scnbuf [ ibuf ] [ icomp ] . xend )		2572223	4					
ANR	2572485	Condition	( 0 < upd -> nlimits ) && upd -> scnbuf [ ibuf ] [ icomp ] . xend	4537:18:165751:165801	2572223	0	True				
ANR	2572486	AndExpression	( 0 < upd -> nlimits ) && upd -> scnbuf [ ibuf ] [ icomp ] . xend		2572223	0		&&			
ANR	2572487	RelationalExpression	0 < upd -> nlimits		2572223	0		<			
ANR	2572488	PrimaryExpression	0		2572223	0					
ANR	2572489	PtrMemberAccess	upd -> nlimits		2572223	1					
ANR	2572490	Identifier	upd		2572223	0					
ANR	2572491	Identifier	nlimits		2572223	1					
ANR	2572492	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xend		2572223	1					
ANR	2572493	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		2572223	0					
ANR	2572494	ArrayIndexing	upd -> scnbuf [ ibuf ]		2572223	0					
ANR	2572495	PtrMemberAccess	upd -> scnbuf		2572223	0					
ANR	2572496	Identifier	upd		2572223	0					
ANR	2572497	Identifier	scnbuf		2572223	1					
ANR	2572498	Identifier	ibuf		2572223	1					
ANR	2572499	Identifier	icomp		2572223	1					
ANR	2572500	Identifier	xend		2572223	1					
ANR	2572501	ExpressionStatement	"gs_free ( udev -> memory , upd -> scnbuf [ ibuf ] [ icomp ] . xend , upd -> nlimits , sizeof ( upd -> scnbuf [ ibuf ] [ icomp ] . xend [ 0 ] ) , ""upd/xend"" )"	4538:18:165822:165961	2572223	1	True				
ANR	2572502	CallExpression	"gs_free ( udev -> memory , upd -> scnbuf [ ibuf ] [ icomp ] . xend , upd -> nlimits , sizeof ( upd -> scnbuf [ ibuf ] [ icomp ] . xend [ 0 ] ) , ""upd/xend"" )"		2572223	0					
ANR	2572503	Callee	gs_free		2572223	0					
ANR	2572504	Identifier	gs_free		2572223	0					
ANR	2572505	ArgumentList	udev -> memory		2572223	1					
ANR	2572506	Argument	udev -> memory		2572223	0					
ANR	2572507	PtrMemberAccess	udev -> memory		2572223	0					
ANR	2572508	Identifier	udev		2572223	0					
ANR	2572509	Identifier	memory		2572223	1					
ANR	2572510	Argument	upd -> scnbuf [ ibuf ] [ icomp ] . xend		2572223	1					
ANR	2572511	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xend		2572223	0					
ANR	2572512	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		2572223	0					
ANR	2572513	ArrayIndexing	upd -> scnbuf [ ibuf ]		2572223	0					
ANR	2572514	PtrMemberAccess	upd -> scnbuf		2572223	0					
ANR	2572515	Identifier	upd		2572223	0					
ANR	2572516	Identifier	scnbuf		2572223	1					
ANR	2572517	Identifier	ibuf		2572223	1					
ANR	2572518	Identifier	icomp		2572223	1					
ANR	2572519	Identifier	xend		2572223	1					
ANR	2572520	Argument	upd -> nlimits		2572223	2					
ANR	2572521	PtrMemberAccess	upd -> nlimits		2572223	0					
ANR	2572522	Identifier	upd		2572223	0					
ANR	2572523	Identifier	nlimits		2572223	1					
ANR	2572524	Argument	sizeof ( upd -> scnbuf [ ibuf ] [ icomp ] . xend [ 0 ] )		2572223	3					
ANR	2572525	SizeofExpression	sizeof ( upd -> scnbuf [ ibuf ] [ icomp ] . xend [ 0 ] )		2572223	0					
ANR	2572526	Sizeof	sizeof		2572223	0					
ANR	2572527	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ] . xend [ 0 ]		2572223	1					
ANR	2572528	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xend		2572223	0					
ANR	2572529	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		2572223	0					
ANR	2572530	ArrayIndexing	upd -> scnbuf [ ibuf ]		2572223	0					
ANR	2572531	PtrMemberAccess	upd -> scnbuf		2572223	0					
ANR	2572532	Identifier	upd		2572223	0					
ANR	2572533	Identifier	scnbuf		2572223	1					
ANR	2572534	Identifier	ibuf		2572223	1					
ANR	2572535	Identifier	icomp		2572223	1					
ANR	2572536	Identifier	xend		2572223	1					
ANR	2572537	PrimaryExpression	0		2572223	1					
ANR	2572538	Argument	"""upd/xend"""		2572223	4					
ANR	2572539	PrimaryExpression	"""upd/xend"""		2572223	0					
ANR	2572540	ExpressionStatement	upd -> scnbuf [ ibuf ] [ icomp ] . xend = NULL	4540:15:165978:166014	2572223	5	True				
ANR	2572541	AssignmentExpression	upd -> scnbuf [ ibuf ] [ icomp ] . xend = NULL		2572223	0		=			
ANR	2572542	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xend		2572223	0					
ANR	2572543	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		2572223	0					
ANR	2572544	ArrayIndexing	upd -> scnbuf [ ibuf ]		2572223	0					
ANR	2572545	PtrMemberAccess	upd -> scnbuf		2572223	0					
ANR	2572546	Identifier	upd		2572223	0					
ANR	2572547	Identifier	scnbuf		2572223	1					
ANR	2572548	Identifier	ibuf		2572223	1					
ANR	2572549	Identifier	icomp		2572223	1					
ANR	2572550	Identifier	xend		2572223	1					
ANR	2572551	Identifier	NULL		2572223	1					
ANR	2572552	IfStatement	if ( icomp )		2572223	2					
ANR	2572553	Condition	icomp	4543:15:166046:166050	2572223	0	True				
ANR	2572554	Identifier	icomp		2572223	0					
ANR	2572555	ExpressionStatement	"gs_free ( udev -> memory , upd -> scnbuf [ ibuf ] , upd -> ocomp , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] ) , ""upd/scnbuf[]"" )"	4544:15:166068:166179	2572223	1	True				
ANR	2572556	CallExpression	"gs_free ( udev -> memory , upd -> scnbuf [ ibuf ] , upd -> ocomp , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] ) , ""upd/scnbuf[]"" )"		2572223	0					
ANR	2572557	Callee	gs_free		2572223	0					
ANR	2572558	Identifier	gs_free		2572223	0					
ANR	2572559	ArgumentList	udev -> memory		2572223	1					
ANR	2572560	Argument	udev -> memory		2572223	0					
ANR	2572561	PtrMemberAccess	udev -> memory		2572223	0					
ANR	2572562	Identifier	udev		2572223	0					
ANR	2572563	Identifier	memory		2572223	1					
ANR	2572564	Argument	upd -> scnbuf [ ibuf ]		2572223	1					
ANR	2572565	ArrayIndexing	upd -> scnbuf [ ibuf ]		2572223	0					
ANR	2572566	PtrMemberAccess	upd -> scnbuf		2572223	0					
ANR	2572567	Identifier	upd		2572223	0					
ANR	2572568	Identifier	scnbuf		2572223	1					
ANR	2572569	Identifier	ibuf		2572223	1					
ANR	2572570	Argument	upd -> ocomp		2572223	2					
ANR	2572571	PtrMemberAccess	upd -> ocomp		2572223	0					
ANR	2572572	Identifier	upd		2572223	0					
ANR	2572573	Identifier	ocomp		2572223	1					
ANR	2572574	Argument	sizeof ( upd -> scnbuf [ 0 ] [ 0 ] )		2572223	3					
ANR	2572575	SizeofExpression	sizeof ( upd -> scnbuf [ 0 ] [ 0 ] )		2572223	0					
ANR	2572576	Sizeof	sizeof		2572223	0					
ANR	2572577	ArrayIndexing	upd -> scnbuf [ 0 ] [ 0 ]		2572223	1					
ANR	2572578	ArrayIndexing	upd -> scnbuf [ 0 ]		2572223	0					
ANR	2572579	PtrMemberAccess	upd -> scnbuf		2572223	0					
ANR	2572580	Identifier	upd		2572223	0					
ANR	2572581	Identifier	scnbuf		2572223	1					
ANR	2572582	PrimaryExpression	0		2572223	1					
ANR	2572583	PrimaryExpression	0		2572223	1					
ANR	2572584	Argument	"""upd/scnbuf[]"""		2572223	4					
ANR	2572585	PrimaryExpression	"""upd/scnbuf[]"""		2572223	0					
ANR	2572586	ExpressionStatement	upd -> scnbuf [ ibuf ] = NULL	4546:12:166193:166217	2572223	3	True				
ANR	2572587	AssignmentExpression	upd -> scnbuf [ ibuf ] = NULL		2572223	0		=			
ANR	2572588	ArrayIndexing	upd -> scnbuf [ ibuf ]		2572223	0					
ANR	2572589	PtrMemberAccess	upd -> scnbuf		2572223	0					
ANR	2572590	Identifier	upd		2572223	0					
ANR	2572591	Identifier	scnbuf		2572223	1					
ANR	2572592	Identifier	ibuf		2572223	1					
ANR	2572593	Identifier	NULL		2572223	1					
ANR	2572594	ExpressionStatement	"gs_free ( udev -> memory , upd -> scnbuf , upd -> nscnbuf , sizeof ( upd -> scnbuf [ 0 ] ) , ""upd/scnbuf"" )"	4549:9:166240:166323	2572223	1	True				
ANR	2572595	CallExpression	"gs_free ( udev -> memory , upd -> scnbuf , upd -> nscnbuf , sizeof ( upd -> scnbuf [ 0 ] ) , ""upd/scnbuf"" )"		2572223	0					
ANR	2572596	Callee	gs_free		2572223	0					
ANR	2572597	Identifier	gs_free		2572223	0					
ANR	2572598	ArgumentList	udev -> memory		2572223	1					
ANR	2572599	Argument	udev -> memory		2572223	0					
ANR	2572600	PtrMemberAccess	udev -> memory		2572223	0					
ANR	2572601	Identifier	udev		2572223	0					
ANR	2572602	Identifier	memory		2572223	1					
ANR	2572603	Argument	upd -> scnbuf		2572223	1					
ANR	2572604	PtrMemberAccess	upd -> scnbuf		2572223	0					
ANR	2572605	Identifier	upd		2572223	0					
ANR	2572606	Identifier	scnbuf		2572223	1					
ANR	2572607	Argument	upd -> nscnbuf		2572223	2					
ANR	2572608	PtrMemberAccess	upd -> nscnbuf		2572223	0					
ANR	2572609	Identifier	upd		2572223	0					
ANR	2572610	Identifier	nscnbuf		2572223	1					
ANR	2572611	Argument	sizeof ( upd -> scnbuf [ 0 ] )		2572223	3					
ANR	2572612	SizeofExpression	sizeof ( upd -> scnbuf [ 0 ] )		2572223	0					
ANR	2572613	Sizeof	sizeof		2572223	0					
ANR	2572614	ArrayIndexing	upd -> scnbuf [ 0 ]		2572223	1					
ANR	2572615	PtrMemberAccess	upd -> scnbuf		2572223	0					
ANR	2572616	Identifier	upd		2572223	0					
ANR	2572617	Identifier	scnbuf		2572223	1					
ANR	2572618	PrimaryExpression	0		2572223	1					
ANR	2572619	Argument	"""upd/scnbuf"""		2572223	4					
ANR	2572620	PrimaryExpression	"""upd/scnbuf"""		2572223	0					
ANR	2572621	ExpressionStatement	upd -> flags &= ~B_FORMAT	4552:6:166340:166363	2572223	5	True				
ANR	2572622	AssignmentExpression	upd -> flags &= ~B_FORMAT		2572223	0		&=			
ANR	2572623	PtrMemberAccess	upd -> flags		2572223	0					
ANR	2572624	Identifier	upd		2572223	0					
ANR	2572625	Identifier	flags		2572223	1					
ANR	2572626	Identifier	~B_FORMAT		2572223	1					
ANR	2572627	ReturnType	static void		2572223	1					
ANR	2572628	Identifier	upd_close_writer		2572223	2					
ANR	2572629	ParameterList	upd_device * udev		2572223	3					
ANR	2572630	Parameter	upd_device * udev	4508:17:164667:164682	2572223	0	True				
ANR	2572631	ParameterType	upd_device *		2572223	0					
ANR	2572632	Identifier	udev		2572223	1					
ANR	2572633	CFGEntryNode	ENTRY		2572223		True				
ANR	2572634	CFGExitNode	EXIT		2572223		True				
ANR	2572635	Symbol	upd -> scnbuf [ ibuf ] [ icomp ] . xend		2572223						
ANR	2572636	Symbol	* * * * upd		2572223						
ANR	2572637	Symbol	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		2572223						
ANR	2572638	Symbol	~B_FORMAT		2572223						
ANR	2572639	Symbol	icomp		2572223						
ANR	2572640	Symbol	* * ibuf		2572223						
ANR	2572641	Symbol	upd -> flags		2572223						
ANR	2572642	Symbol	udev -> upd		2572223						
ANR	2572643	Symbol	upd -> nlimits		2572223						
ANR	2572644	Symbol	* udev		2572223						
ANR	2572645	Symbol	* upd		2572223						
ANR	2572646	Symbol	* icomp		2572223						
ANR	2572647	Symbol	* * * upd -> scnbuf		2572223						
ANR	2572648	Symbol	upd -> scnbuf [ ibuf ] [ icomp ] . bytes		2572223						
ANR	2572649	Symbol	ibuf		2572223						
ANR	2572650	Symbol	upd -> ocomp		2572223						
ANR	2572651	Symbol	* upd -> scnbuf [ ibuf ] [ icomp ] . xend		2572223						
ANR	2572652	Symbol	upd -> nbytes		2572223						
ANR	2572653	Symbol	* upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		2572223						
ANR	2572654	Symbol	NULL		2572223						
ANR	2572655	Symbol	udev -> memory		2572223						
ANR	2572656	Symbol	* upd -> scnbuf		2572223						
ANR	2572657	Symbol	* * * upd		2572223						
ANR	2572658	Symbol	upd		2572223						
ANR	2572659	Symbol	* * upd -> scnbuf		2572223						
ANR	2572660	Symbol	* upd -> scnbuf [ ibuf ] [ icomp ] . words		2572223						
ANR	2572661	Symbol	upd -> noutbuf		2572223						
ANR	2572662	Symbol	upd -> scnbuf		2572223						
ANR	2572663	Symbol	upd -> scnbuf [ ibuf ] [ icomp ] . words		2572223						
ANR	2572664	Symbol	udev		2572223						
ANR	2572665	Symbol	upd -> nscnbuf		2572223						
ANR	2572666	Symbol	* upd -> outbuf		2572223						
ANR	2572667	Symbol	* * icomp		2572223						
ANR	2572668	Symbol	upd -> outbuf		2572223						
ANR	2572669	Symbol	* * upd		2572223						
ANR	2572670	Symbol	* * * ibuf		2572223						
ANR	2572671	Symbol	* ibuf		2572223						
ANR	2572672	Function	upd_limits	4560:0:166596:168441							
ANR	2572673	FunctionDef	"upd_limits (upd_p upd , bool check)"		2572672	0					
ANR	2572674	CompoundStatement		4562:0:166642:168441	2572672	0					
ANR	2572675	IdentifierDeclStatement	"updscan_p scans = upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ] , scan ;"	4563:3:166647:166711	2572672	0	True				
ANR	2572676	IdentifierDecl	scans = upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ]		2572672	0					
ANR	2572677	IdentifierDeclType	updscan_p		2572672	0					
ANR	2572678	Identifier	scans		2572672	1					
ANR	2572679	AssignmentExpression	scans = upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ]		2572672	2		=			
ANR	2572680	Identifier	scans		2572672	0					
ANR	2572681	ArrayIndexing	upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ]		2572672	1					
ANR	2572682	PtrMemberAccess	upd -> scnbuf		2572672	0					
ANR	2572683	Identifier	upd		2572672	0					
ANR	2572684	Identifier	scnbuf		2572672	1					
ANR	2572685	BitAndExpression	upd -> yscnbuf & upd -> scnmsk		2572672	1		&			
ANR	2572686	PtrMemberAccess	upd -> yscnbuf		2572672	0					
ANR	2572687	Identifier	upd		2572672	0					
ANR	2572688	Identifier	yscnbuf		2572672	1					
ANR	2572689	PtrMemberAccess	upd -> scnmsk		2572672	1					
ANR	2572690	Identifier	upd		2572672	0					
ANR	2572691	Identifier	scnmsk		2572672	1					
ANR	2572692	IdentifierDecl	scan		2572672	1					
ANR	2572693	IdentifierDeclType	updscan_p		2572672	0					
ANR	2572694	Identifier	scan		2572672	1					
ANR	2572695	IdentifierDeclStatement	"int xs , x , xe , icomp , pass ;"	4564:3:166716:166740	2572672	1	True				
ANR	2572696	IdentifierDecl	xs		2572672	0					
ANR	2572697	IdentifierDeclType	int		2572672	0					
ANR	2572698	Identifier	xs		2572672	1					
ANR	2572699	IdentifierDecl	x		2572672	1					
ANR	2572700	IdentifierDeclType	int		2572672	0					
ANR	2572701	Identifier	x		2572672	1					
ANR	2572702	IdentifierDecl	xe		2572672	2					
ANR	2572703	IdentifierDeclType	int		2572672	0					
ANR	2572704	Identifier	xe		2572672	1					
ANR	2572705	IdentifierDecl	icomp		2572672	3					
ANR	2572706	IdentifierDeclType	int		2572672	0					
ANR	2572707	Identifier	icomp		2572672	1					
ANR	2572708	IdentifierDecl	pass		2572672	4					
ANR	2572709	IdentifierDeclType	int		2572672	0					
ANR	2572710	Identifier	pass		2572672	1					
ANR	2572711	IdentifierDeclStatement	"byte * bytes , bit ;"	4565:3:166745:166760	2572672	2	True				
ANR	2572712	IdentifierDecl	* bytes		2572672	0					
ANR	2572713	IdentifierDeclType	byte *		2572672	0					
ANR	2572714	Identifier	bytes		2572672	1					
ANR	2572715	IdentifierDecl	bit		2572672	1					
ANR	2572716	IdentifierDeclType	byte		2572672	0					
ANR	2572717	Identifier	bit		2572672	1					
ANR	2572718	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		2572672	3					
ANR	2572719	ForInit	icomp = 0 ;	4567:7:166770:166779	2572672	0	True				
ANR	2572720	AssignmentExpression	icomp = 0		2572672	0		=			
ANR	2572721	Identifier	icomp		2572672	0					
ANR	2572722	PrimaryExpression	0		2572672	1					
ANR	2572723	Condition	icomp < upd -> ocomp	4567:18:166781:166798	2572672	1	True				
ANR	2572724	RelationalExpression	icomp < upd -> ocomp		2572672	0		<			
ANR	2572725	Identifier	icomp		2572672	0					
ANR	2572726	PtrMemberAccess	upd -> ocomp		2572672	1					
ANR	2572727	Identifier	upd		2572672	0					
ANR	2572728	Identifier	ocomp		2572672	1					
ANR	2572729	UnaryExpression	++ icomp	4567:38:166801:166807	2572672	2	True				
ANR	2572730	IncDec	++		2572672	0					
ANR	2572731	Identifier	icomp		2572672	1					
ANR	2572732	CompoundStatement		6:47:167:167	2572672	3					
ANR	2572733	ExpressionStatement	scan = scans + icomp	4568:6:166818:166838	2572672	0	True				
ANR	2572734	AssignmentExpression	scan = scans + icomp		2572672	0		=			
ANR	2572735	Identifier	scan		2572672	0					
ANR	2572736	AdditiveExpression	scans + icomp		2572672	1		+			
ANR	2572737	Identifier	scans		2572672	0					
ANR	2572738	Identifier	icomp		2572672	1					
ANR	2572739	ForStatement	for ( pass = 0 ; pass < upd -> nlimits ; ++ pass )		2572672	1					
ANR	2572740	ForInit	pass = 0 ;	4569:10:166850:166858	2572672	0	True				
ANR	2572741	AssignmentExpression	pass = 0		2572672	0		=			
ANR	2572742	Identifier	pass		2572672	0					
ANR	2572743	PrimaryExpression	0		2572672	1					
ANR	2572744	Condition	pass < upd -> nlimits	4569:20:166860:166878	2572672	1	True				
ANR	2572745	RelationalExpression	pass < upd -> nlimits		2572672	0		<			
ANR	2572746	Identifier	pass		2572672	0					
ANR	2572747	PtrMemberAccess	upd -> nlimits		2572672	1					
ANR	2572748	Identifier	upd		2572672	0					
ANR	2572749	Identifier	nlimits		2572672	1					
ANR	2572750	UnaryExpression	++ pass	4569:41:166881:166886	2572672	2	True				
ANR	2572751	IncDec	++		2572672	0					
ANR	2572752	Identifier	pass		2572672	1					
ANR	2572753	CompoundStatement		8:49:246:246	2572672	3					
ANR	2572754	ExpressionStatement	scan -> xbegin [ pass ] = upd -> pwidth	4570:9:166900:166932	2572672	0	True				
ANR	2572755	AssignmentExpression	scan -> xbegin [ pass ] = upd -> pwidth		2572672	0		=			
ANR	2572756	ArrayIndexing	scan -> xbegin [ pass ]		2572672	0					
ANR	2572757	PtrMemberAccess	scan -> xbegin		2572672	0					
ANR	2572758	Identifier	scan		2572672	0					
ANR	2572759	Identifier	xbegin		2572672	1					
ANR	2572760	Identifier	pass		2572672	1					
ANR	2572761	PtrMemberAccess	upd -> pwidth		2572672	1					
ANR	2572762	Identifier	upd		2572672	0					
ANR	2572763	Identifier	pwidth		2572672	1					
ANR	2572764	ExpressionStatement	scan -> xend [ pass ] = - 1	4571:9:166943:166966	2572672	1	True				
ANR	2572765	AssignmentExpression	scan -> xend [ pass ] = - 1		2572672	0		=			
ANR	2572766	ArrayIndexing	scan -> xend [ pass ]		2572672	0					
ANR	2572767	PtrMemberAccess	scan -> xend		2572672	0					
ANR	2572768	Identifier	scan		2572672	0					
ANR	2572769	Identifier	xend		2572672	1					
ANR	2572770	Identifier	pass		2572672	1					
ANR	2572771	UnaryOperationExpression	- 1		2572672	1					
ANR	2572772	UnaryOperator	-		2572672	0					
ANR	2572773	PrimaryExpression	1		2572672	1					
ANR	2572774	IfStatement	if ( check )		2572672	4					
ANR	2572775	Condition	check	4575:6:166988:166992	2572672	0	True				
ANR	2572776	Identifier	check		2572672	0					
ANR	2572777	CompoundStatement		14:13:352:352	2572672	1					
ANR	2572778	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		2572672	0					
ANR	2572779	ForInit	icomp = 0 ;	4576:10:167026:167035	2572672	0	True				
ANR	2572780	AssignmentExpression	icomp = 0		2572672	0		=			
ANR	2572781	Identifier	icomp		2572672	0					
ANR	2572782	PrimaryExpression	0		2572672	1					
ANR	2572783	Condition	icomp < upd -> ocomp	4576:21:167037:167054	2572672	1	True				
ANR	2572784	RelationalExpression	icomp < upd -> ocomp		2572672	0		<			
ANR	2572785	Identifier	icomp		2572672	0					
ANR	2572786	PtrMemberAccess	upd -> ocomp		2572672	1					
ANR	2572787	Identifier	upd		2572672	0					
ANR	2572788	Identifier	ocomp		2572672	1					
ANR	2572789	UnaryExpression	++ icomp	4576:41:167057:167063	2572672	2	True				
ANR	2572790	IncDec	++		2572672	0					
ANR	2572791	Identifier	icomp		2572672	1					
ANR	2572792	CompoundStatement		15:50:423:423	2572672	3					
ANR	2572793	ExpressionStatement	scan = scans + icomp	4577:9:167100:167121	2572672	0	True				
ANR	2572794	AssignmentExpression	scan = scans + icomp		2572672	0		=			
ANR	2572795	Identifier	scan		2572672	0					
ANR	2572796	AdditiveExpression	scans + icomp		2572672	1		+			
ANR	2572797	Identifier	scans		2572672	0					
ANR	2572798	Identifier	icomp		2572672	1					
ANR	2572799	ExpressionStatement	bytes = scan -> bytes	4578:9:167132:167151	2572672	1	True				
ANR	2572800	AssignmentExpression	bytes = scan -> bytes		2572672	0		=			
ANR	2572801	Identifier	bytes		2572672	0					
ANR	2572802	PtrMemberAccess	scan -> bytes		2572672	1					
ANR	2572803	Identifier	scan		2572672	0					
ANR	2572804	Identifier	bytes		2572672	1					
ANR	2572805	ForStatement	for ( xs = 0 ; xs < upd -> nbytes && ! bytes [ xs ] ; ++ xs )		2572672	2					
ANR	2572806	ForInit	xs = 0 ;	4580:13:167167:167173	2572672	0	True				
ANR	2572807	AssignmentExpression	xs = 0		2572672	0		=			
ANR	2572808	Identifier	xs		2572672	0					
ANR	2572809	PrimaryExpression	0		2572672	1					
ANR	2572810	Condition	xs < upd -> nbytes && ! bytes [ xs ]	4580:21:167175:167205	2572672	1	True				
ANR	2572811	AndExpression	xs < upd -> nbytes && ! bytes [ xs ]		2572672	0		&&			
ANR	2572812	RelationalExpression	xs < upd -> nbytes		2572672	0		<			
ANR	2572813	Identifier	xs		2572672	0					
ANR	2572814	PtrMemberAccess	upd -> nbytes		2572672	1					
ANR	2572815	Identifier	upd		2572672	0					
ANR	2572816	Identifier	nbytes		2572672	1					
ANR	2572817	UnaryOperationExpression	! bytes [ xs ]		2572672	1					
ANR	2572818	UnaryOperator	!		2572672	0					
ANR	2572819	ArrayIndexing	bytes [ xs ]		2572672	1					
ANR	2572820	Identifier	bytes		2572672	0					
ANR	2572821	Identifier	xs		2572672	1					
ANR	2572822	UnaryExpression	++ xs	4580:56:167210:167213	2572672	2	True				
ANR	2572823	IncDec	++		2572672	0					
ANR	2572824	Identifier	xs		2572672	1					
ANR	2572825	ExpressionStatement		4580:61:167215:167215	2572672	3	True				
ANR	2572826	IfStatement	if ( xs < upd -> nbytes )		2572672	3					
ANR	2572827	Condition	xs < upd -> nbytes	4582:12:167230:167245	2572672	0	True				
ANR	2572828	RelationalExpression	xs < upd -> nbytes		2572672	0		<			
ANR	2572829	Identifier	xs		2572672	0					
ANR	2572830	PtrMemberAccess	upd -> nbytes		2572672	1					
ANR	2572831	Identifier	upd		2572672	0					
ANR	2572832	Identifier	nbytes		2572672	1					
ANR	2572833	CompoundStatement		21:30:605:605	2572672	1					
ANR	2572834	ForStatement	for ( xe = upd -> nbytes ; xs < xe && ! bytes [ xe - 1 ] ; -- xe )		2572672	0					
ANR	2572835	ForInit	xe = upd -> nbytes ;	4583:16:167281:167297	2572672	0	True				
ANR	2572836	AssignmentExpression	xe = upd -> nbytes		2572672	0		=			
ANR	2572837	Identifier	xe		2572672	0					
ANR	2572838	PtrMemberAccess	upd -> nbytes		2572672	1					
ANR	2572839	Identifier	upd		2572672	0					
ANR	2572840	Identifier	nbytes		2572672	1					
ANR	2572841	Condition	xs < xe && ! bytes [ xe - 1 ]	4583:34:167299:167321	2572672	1	True				
ANR	2572842	AndExpression	xs < xe && ! bytes [ xe - 1 ]		2572672	0		&&			
ANR	2572843	RelationalExpression	xs < xe		2572672	0		<			
ANR	2572844	Identifier	xs		2572672	0					
ANR	2572845	Identifier	xe		2572672	1					
ANR	2572846	UnaryOperationExpression	! bytes [ xe - 1 ]		2572672	1					
ANR	2572847	UnaryOperator	!		2572672	0					
ANR	2572848	ArrayIndexing	bytes [ xe - 1 ]		2572672	1					
ANR	2572849	Identifier	bytes		2572672	0					
ANR	2572850	AdditiveExpression	xe - 1		2572672	1		-			
ANR	2572851	Identifier	xe		2572672	0					
ANR	2572852	PrimaryExpression	1		2572672	1					
ANR	2572853	UnaryExpression	-- xe	4583:59:167324:167327	2572672	2	True				
ANR	2572854	IncDec	--		2572672	0					
ANR	2572855	Identifier	xe		2572672	1					
ANR	2572856	ExpressionStatement		4583:64:167329:167329	2572672	3	True				
ANR	2572857	ForStatement	for ( pass = 0 ; pass < upd -> nlimits ; ++ pass )		2572672	1					
ANR	2572858	ForInit	pass = 0 ;	4585:16:167348:167356	2572672	0	True				
ANR	2572859	AssignmentExpression	pass = 0		2572672	0		=			
ANR	2572860	Identifier	pass		2572672	0					
ANR	2572861	PrimaryExpression	0		2572672	1					
ANR	2572862	Condition	pass < upd -> nlimits	4585:26:167358:167376	2572672	1	True				
ANR	2572863	RelationalExpression	pass < upd -> nlimits		2572672	0		<			
ANR	2572864	Identifier	pass		2572672	0					
ANR	2572865	PtrMemberAccess	upd -> nlimits		2572672	1					
ANR	2572866	Identifier	upd		2572672	0					
ANR	2572867	Identifier	nlimits		2572672	1					
ANR	2572868	UnaryExpression	++ pass	4585:47:167379:167384	2572672	2	True				
ANR	2572869	IncDec	++		2572672	0					
ANR	2572870	Identifier	pass		2572672	1					
ANR	2572871	CompoundStatement		24:55:744:744	2572672	3					
ANR	2572872	ExpressionStatement	x = ( ( xs << 3 ) / upd -> nlimits ) * upd -> nlimits + pass	4587:15:167429:167475	2572672	0	True				
ANR	2572873	AssignmentExpression	x = ( ( xs << 3 ) / upd -> nlimits ) * upd -> nlimits + pass		2572672	0		=			
ANR	2572874	Identifier	x		2572672	0					
ANR	2572875	AdditiveExpression	( ( xs << 3 ) / upd -> nlimits ) * upd -> nlimits + pass		2572672	1		+			
ANR	2572876	MultiplicativeExpression	( ( xs << 3 ) / upd -> nlimits ) * upd -> nlimits		2572672	0		*			
ANR	2572877	MultiplicativeExpression	( xs << 3 ) / upd -> nlimits		2572672	0		/			
ANR	2572878	ShiftExpression	xs << 3		2572672	0		<<			
ANR	2572879	Identifier	xs		2572672	0					
ANR	2572880	PrimaryExpression	3		2572672	1					
ANR	2572881	PtrMemberAccess	upd -> nlimits		2572672	1					
ANR	2572882	Identifier	upd		2572672	0					
ANR	2572883	Identifier	nlimits		2572672	1					
ANR	2572884	PtrMemberAccess	upd -> nlimits		2572672	1					
ANR	2572885	Identifier	upd		2572672	0					
ANR	2572886	Identifier	nlimits		2572672	1					
ANR	2572887	Identifier	pass		2572672	1					
ANR	2572888	WhileStatement	while ( ( x >> 3 ) < xs )		2572672	1					
ANR	2572889	Condition	( x >> 3 ) < xs	4588:21:167498:167510	2572672	0	True				
ANR	2572890	RelationalExpression	( x >> 3 ) < xs		2572672	0		<			
ANR	2572891	ShiftExpression	x >> 3		2572672	0		>>			
ANR	2572892	Identifier	x		2572672	0					
ANR	2572893	PrimaryExpression	3		2572672	1					
ANR	2572894	Identifier	xs		2572672	1					
ANR	2572895	ExpressionStatement	x += upd -> nlimits	4588:36:167513:167530	2572672	1	True				
ANR	2572896	AssignmentExpression	x += upd -> nlimits		2572672	0		+=			
ANR	2572897	Identifier	x		2572672	0					
ANR	2572898	PtrMemberAccess	upd -> nlimits		2572672	1					
ANR	2572899	Identifier	upd		2572672	0					
ANR	2572900	Identifier	nlimits		2572672	1					
ANR	2572901	ExpressionStatement	bit = 0x80 >> ( x & 7 )	4590:15:167548:167569	2572672	2	True				
ANR	2572902	AssignmentExpression	bit = 0x80 >> ( x & 7 )		2572672	0		=			
ANR	2572903	Identifier	bit		2572672	0					
ANR	2572904	ShiftExpression	0x80 >> ( x & 7 )		2572672	1		>>			
ANR	2572905	PrimaryExpression	0x80		2572672	0					
ANR	2572906	BitAndExpression	x & 7		2572672	1		&			
ANR	2572907	Identifier	x		2572672	0					
ANR	2572908	PrimaryExpression	7		2572672	1					
ANR	2572909	WhileStatement	while ( x < scan -> xbegin [ pass ] )		2572672	3					
ANR	2572910	Condition	x < scan -> xbegin [ pass ]	4591:21:167592:167613	2572672	0	True				
ANR	2572911	RelationalExpression	x < scan -> xbegin [ pass ]		2572672	0		<			
ANR	2572912	Identifier	x		2572672	0					
ANR	2572913	ArrayIndexing	scan -> xbegin [ pass ]		2572672	1					
ANR	2572914	PtrMemberAccess	scan -> xbegin		2572672	0					
ANR	2572915	Identifier	scan		2572672	0					
ANR	2572916	Identifier	xbegin		2572672	1					
ANR	2572917	Identifier	pass		2572672	1					
ANR	2572918	CompoundStatement		30:45:973:973	2572672	1					
ANR	2572919	IfStatement	if ( bytes [ x >> 3 ] & bit )		2572672	0					
ANR	2572920	Condition	bytes [ x >> 3 ] & bit	4592:21:167639:167655	2572672	0	True				
ANR	2572921	BitAndExpression	bytes [ x >> 3 ] & bit		2572672	0		&			
ANR	2572922	ArrayIndexing	bytes [ x >> 3 ]		2572672	0					
ANR	2572923	Identifier	bytes		2572672	0					
ANR	2572924	ShiftExpression	x >> 3		2572672	1		>>			
ANR	2572925	Identifier	x		2572672	0					
ANR	2572926	PrimaryExpression	3		2572672	1					
ANR	2572927	Identifier	bit		2572672	1					
ANR	2572928	ExpressionStatement	scan -> xbegin [ pass ] = x	4592:40:167658:167680	2572672	1	True				
ANR	2572929	AssignmentExpression	scan -> xbegin [ pass ] = x		2572672	0		=			
ANR	2572930	ArrayIndexing	scan -> xbegin [ pass ]		2572672	0					
ANR	2572931	PtrMemberAccess	scan -> xbegin		2572672	0					
ANR	2572932	Identifier	scan		2572672	0					
ANR	2572933	Identifier	xbegin		2572672	1					
ANR	2572934	Identifier	pass		2572672	1					
ANR	2572935	Identifier	x		2572672	1					
ANR	2572936	ExpressionStatement	x += upd -> nlimits	4593:18:167700:167718	2572672	1	True				
ANR	2572937	AssignmentExpression	x += upd -> nlimits		2572672	0		+=			
ANR	2572938	Identifier	x		2572672	0					
ANR	2572939	PtrMemberAccess	upd -> nlimits		2572672	1					
ANR	2572940	Identifier	upd		2572672	0					
ANR	2572941	Identifier	nlimits		2572672	1					
ANR	2572942	ExpressionStatement	bit = 0x80 >> ( x & 7 )	4594:18:167738:167759	2572672	2	True				
ANR	2572943	AssignmentExpression	bit = 0x80 >> ( x & 7 )		2572672	0		=			
ANR	2572944	Identifier	bit		2572672	0					
ANR	2572945	ShiftExpression	0x80 >> ( x & 7 )		2572672	1		>>			
ANR	2572946	PrimaryExpression	0x80		2572672	0					
ANR	2572947	BitAndExpression	x & 7		2572672	1		&			
ANR	2572948	Identifier	x		2572672	0					
ANR	2572949	PrimaryExpression	7		2572672	1					
ANR	2572950	ExpressionStatement	x = ( ( ( xe << 3 ) | 7 ) / upd -> nlimits ) * upd -> nlimits + pass	4597:15:167794:167844	2572672	4	True				
ANR	2572951	AssignmentExpression	x = ( ( ( xe << 3 ) | 7 ) / upd -> nlimits ) * upd -> nlimits + pass		2572672	0		=			
ANR	2572952	Identifier	x		2572672	0					
ANR	2572953	AdditiveExpression	( ( ( xe << 3 ) | 7 ) / upd -> nlimits ) * upd -> nlimits + pass		2572672	1		+			
ANR	2572954	MultiplicativeExpression	( ( ( xe << 3 ) | 7 ) / upd -> nlimits ) * upd -> nlimits		2572672	0		*			
ANR	2572955	MultiplicativeExpression	( ( xe << 3 ) | 7 ) / upd -> nlimits		2572672	0		/			
ANR	2572956	InclusiveOrExpression	( xe << 3 ) | 7		2572672	0		|			
ANR	2572957	ShiftExpression	xe << 3		2572672	0		<<			
ANR	2572958	Identifier	xe		2572672	0					
ANR	2572959	PrimaryExpression	3		2572672	1					
ANR	2572960	PrimaryExpression	7		2572672	1					
ANR	2572961	PtrMemberAccess	upd -> nlimits		2572672	1					
ANR	2572962	Identifier	upd		2572672	0					
ANR	2572963	Identifier	nlimits		2572672	1					
ANR	2572964	PtrMemberAccess	upd -> nlimits		2572672	1					
ANR	2572965	Identifier	upd		2572672	0					
ANR	2572966	Identifier	nlimits		2572672	1					
ANR	2572967	Identifier	pass		2572672	1					
ANR	2572968	WhileStatement	while ( ( x >> 3 ) < xe )		2572672	5					
ANR	2572969	Condition	( x >> 3 ) < xe	4599:21:167868:167880	2572672	0	True				
ANR	2572970	RelationalExpression	( x >> 3 ) < xe		2572672	0		<			
ANR	2572971	ShiftExpression	x >> 3		2572672	0		>>			
ANR	2572972	Identifier	x		2572672	0					
ANR	2572973	PrimaryExpression	3		2572672	1					
ANR	2572974	Identifier	xe		2572672	1					
ANR	2572975	ExpressionStatement	x += upd -> nlimits	4599:36:167883:167900	2572672	1	True				
ANR	2572976	AssignmentExpression	x += upd -> nlimits		2572672	0		+=			
ANR	2572977	Identifier	x		2572672	0					
ANR	2572978	PtrMemberAccess	upd -> nlimits		2572672	1					
ANR	2572979	Identifier	upd		2572672	0					
ANR	2572980	Identifier	nlimits		2572672	1					
ANR	2572981	WhileStatement	while ( ( x >> 3 ) > xe )		2572672	6					
ANR	2572982	Condition	( x >> 3 ) > xe	4600:21:167923:167935	2572672	0	True				
ANR	2572983	RelationalExpression	( x >> 3 ) > xe		2572672	0		>			
ANR	2572984	ShiftExpression	x >> 3		2572672	0		>>			
ANR	2572985	Identifier	x		2572672	0					
ANR	2572986	PrimaryExpression	3		2572672	1					
ANR	2572987	Identifier	xe		2572672	1					
ANR	2572988	ExpressionStatement	x -= upd -> nlimits	4600:36:167938:167955	2572672	1	True				
ANR	2572989	AssignmentExpression	x -= upd -> nlimits		2572672	0		-=			
ANR	2572990	Identifier	x		2572672	0					
ANR	2572991	PtrMemberAccess	upd -> nlimits		2572672	1					
ANR	2572992	Identifier	upd		2572672	0					
ANR	2572993	Identifier	nlimits		2572672	1					
ANR	2572994	ExpressionStatement	bit = 0x80 >> ( xs & 7 )	4602:15:167973:167995	2572672	7	True				
ANR	2572995	AssignmentExpression	bit = 0x80 >> ( xs & 7 )		2572672	0		=			
ANR	2572996	Identifier	bit		2572672	0					
ANR	2572997	ShiftExpression	0x80 >> ( xs & 7 )		2572672	1		>>			
ANR	2572998	PrimaryExpression	0x80		2572672	0					
ANR	2572999	BitAndExpression	xs & 7		2572672	1		&			
ANR	2573000	Identifier	xs		2572672	0					
ANR	2573001	PrimaryExpression	7		2572672	1					
ANR	2573002	WhileStatement	while ( x > scan -> xend [ pass ] )		2572672	8					
ANR	2573003	Condition	x > scan -> xend [ pass ]	4603:21:168018:168037	2572672	0	True				
ANR	2573004	RelationalExpression	x > scan -> xend [ pass ]		2572672	0		>			
ANR	2573005	Identifier	x		2572672	0					
ANR	2573006	ArrayIndexing	scan -> xend [ pass ]		2572672	1					
ANR	2573007	PtrMemberAccess	scan -> xend		2572672	0					
ANR	2573008	Identifier	scan		2572672	0					
ANR	2573009	Identifier	xend		2572672	1					
ANR	2573010	Identifier	pass		2572672	1					
ANR	2573011	CompoundStatement		42:43:1397:1397	2572672	1					
ANR	2573012	IfStatement	if ( bytes [ x >> 3 ] & bit )		2572672	0					
ANR	2573013	Condition	bytes [ x >> 3 ] & bit	4604:21:168063:168079	2572672	0	True				
ANR	2573014	BitAndExpression	bytes [ x >> 3 ] & bit		2572672	0		&			
ANR	2573015	ArrayIndexing	bytes [ x >> 3 ]		2572672	0					
ANR	2573016	Identifier	bytes		2572672	0					
ANR	2573017	ShiftExpression	x >> 3		2572672	1		>>			
ANR	2573018	Identifier	x		2572672	0					
ANR	2573019	PrimaryExpression	3		2572672	1					
ANR	2573020	Identifier	bit		2572672	1					
ANR	2573021	ExpressionStatement	scan -> xend [ pass ] = x	4604:40:168082:168102	2572672	1	True				
ANR	2573022	AssignmentExpression	scan -> xend [ pass ] = x		2572672	0		=			
ANR	2573023	ArrayIndexing	scan -> xend [ pass ]		2572672	0					
ANR	2573024	PtrMemberAccess	scan -> xend		2572672	0					
ANR	2573025	Identifier	scan		2572672	0					
ANR	2573026	Identifier	xend		2572672	1					
ANR	2573027	Identifier	pass		2572672	1					
ANR	2573028	Identifier	x		2572672	1					
ANR	2573029	ExpressionStatement	x -= upd -> nlimits	4605:18:168122:168139	2572672	1	True				
ANR	2573030	AssignmentExpression	x -= upd -> nlimits		2572672	0		-=			
ANR	2573031	Identifier	x		2572672	0					
ANR	2573032	PtrMemberAccess	upd -> nlimits		2572672	1					
ANR	2573033	Identifier	upd		2572672	0					
ANR	2573034	Identifier	nlimits		2572672	1					
ANR	2573035	ExpressionStatement	bit = 0x80 >> ( x & 7 )	4606:18:168159:168180	2572672	2	True				
ANR	2573036	AssignmentExpression	bit = 0x80 >> ( x & 7 )		2572672	0		=			
ANR	2573037	Identifier	bit		2572672	0					
ANR	2573038	ShiftExpression	0x80 >> ( x & 7 )		2572672	1		>>			
ANR	2573039	PrimaryExpression	0x80		2572672	0					
ANR	2573040	BitAndExpression	x & 7		2572672	1		&			
ANR	2573041	Identifier	x		2572672	0					
ANR	2573042	PrimaryExpression	7		2572672	1					
ANR	2573043	ReturnType	static void		2572672	1					
ANR	2573044	Identifier	upd_limits		2572672	2					
ANR	2573045	ParameterList	"upd_p upd , bool check"		2572672	3					
ANR	2573046	Parameter	upd_p upd	4561:11:166619:166627	2572672	0	True				
ANR	2573047	ParameterType	upd_p		2572672	0					
ANR	2573048	Identifier	upd		2572672	1					
ANR	2573049	Parameter	bool check	4561:22:166630:166639	2572672	1	True				
ANR	2573050	ParameterType	bool		2572672	0					
ANR	2573051	Identifier	check		2572672	1					
ANR	2573052	CFGEntryNode	ENTRY		2572672		True				
ANR	2573053	CFGExitNode	EXIT		2572672		True				
ANR	2573054	Symbol	* x		2572672						
ANR	2573055	Symbol	scan		2572672						
ANR	2573056	Symbol	* bytes		2572672						
ANR	2573057	Symbol	bit		2572672						
ANR	2573058	Symbol	icomp		2572672						
ANR	2573059	Symbol	* scan -> xbegin		2572672						
ANR	2573060	Symbol	scan -> xend		2572672						
ANR	2573061	Symbol	upd -> nlimits		2572672						
ANR	2573062	Symbol	* upd		2572672						
ANR	2573063	Symbol	scans		2572672						
ANR	2573064	Symbol	* scan		2572672						
ANR	2573065	Symbol	* upd -> scnmsk		2572672						
ANR	2573066	Symbol	upd -> ocomp		2572672						
ANR	2573067	Symbol	scan -> xbegin		2572672						
ANR	2573068	Symbol	scan -> bytes		2572672						
ANR	2573069	Symbol	upd -> nbytes		2572672						
ANR	2573070	Symbol	* xs		2572672						
ANR	2573071	Symbol	* upd -> scnbuf		2572672						
ANR	2573072	Symbol	upd -> scnmsk		2572672						
ANR	2573073	Symbol	pass		2572672						
ANR	2573074	Symbol	* pass		2572672						
ANR	2573075	Symbol	* scan -> xend		2572672						
ANR	2573076	Symbol	upd		2572672						
ANR	2573077	Symbol	check		2572672						
ANR	2573078	Symbol	xe		2572672						
ANR	2573079	Symbol	* xe		2572672						
ANR	2573080	Symbol	* upd -> yscnbuf		2572672						
ANR	2573081	Symbol	upd -> scnbuf		2572672						
ANR	2573082	Symbol	upd -> yscnbuf		2572672						
ANR	2573083	Symbol	* * scan		2572672						
ANR	2573084	Symbol	bytes		2572672						
ANR	2573085	Symbol	x		2572672						
ANR	2573086	Symbol	xs		2572672						
ANR	2573087	Symbol	* * upd		2572672						
ANR	2573088	Symbol	upd -> pwidth		2572672						
ANR	2573089	Function	upd_open_rascomp	4623:0:168667:169095							
ANR	2573090	FunctionDef	upd_open_rascomp (upd_device * udev)		2573089	0					
ANR	2573091	CompoundStatement		4625:0:168713:169095	2573089	0					
ANR	2573092	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	4626:3:168718:168745	2573089	0	True				
ANR	2573093	IdentifierDecl	upd = udev -> upd		2573089	0					
ANR	2573094	IdentifierDeclType	const upd_p		2573089	0					
ANR	2573095	Identifier	upd		2573089	1					
ANR	2573096	AssignmentExpression	upd = udev -> upd		2573089	2		=			
ANR	2573097	Identifier	upd		2573089	0					
ANR	2573098	PtrMemberAccess	udev -> upd		2573089	1					
ANR	2573099	Identifier	udev		2573089	0					
ANR	2573100	Identifier	upd		2573089	1					
ANR	2573101	IdentifierDeclStatement	int32_t noutbuf ;	4627:3:168750:168765	2573089	1	True				
ANR	2573102	IdentifierDecl	noutbuf		2573089	0					
ANR	2573103	IdentifierDeclType	int32_t		2573089	0					
ANR	2573104	Identifier	noutbuf		2573089	1					
ANR	2573105	IdentifierDeclStatement	int error = 0 ;	4628:3:168770:168783	2573089	2	True				
ANR	2573106	IdentifierDecl	error = 0		2573089	0					
ANR	2573107	IdentifierDeclType	int		2573089	0					
ANR	2573108	Identifier	error		2573089	1					
ANR	2573109	AssignmentExpression	error = 0		2573089	2		=			
ANR	2573110	Identifier	error		2573089	0					
ANR	2573111	PrimaryExpression	0		2573089	1					
ANR	2573112	ExpressionStatement	noutbuf = upd -> pwidth	4630:3:168789:168810	2573089	3	True				
ANR	2573113	AssignmentExpression	noutbuf = upd -> pwidth		2573089	0		=			
ANR	2573114	Identifier	noutbuf		2573089	0					
ANR	2573115	PtrMemberAccess	upd -> pwidth		2573089	1					
ANR	2573116	Identifier	upd		2573089	0					
ANR	2573117	Identifier	pwidth		2573089	1					
ANR	2573118	IfStatement	if ( 1 < upd -> ncomp )		2573089	4					
ANR	2573119	Condition	1 < upd -> ncomp	4632:6:168819:168832	2573089	0	True				
ANR	2573120	RelationalExpression	1 < upd -> ncomp		2573089	0		<			
ANR	2573121	PrimaryExpression	1		2573089	0					
ANR	2573122	PtrMemberAccess	upd -> ncomp		2573089	1					
ANR	2573123	Identifier	upd		2573089	0					
ANR	2573124	Identifier	ncomp		2573089	1					
ANR	2573125	ExpressionStatement	noutbuf *= 8	4632:22:168835:168847	2573089	1	True				
ANR	2573126	AssignmentExpression	noutbuf *= 8		2573089	0		*=			
ANR	2573127	Identifier	noutbuf		2573089	0					
ANR	2573128	PrimaryExpression	8		2573089	1					
ANR	2573129	ExpressionStatement	noutbuf = ( ( noutbuf + 15 ) >> 4 ) << 1	4634:3:168874:168904	2573089	5	True				
ANR	2573130	AssignmentExpression	noutbuf = ( ( noutbuf + 15 ) >> 4 ) << 1		2573089	0		=			
ANR	2573131	Identifier	noutbuf		2573089	0					
ANR	2573132	ShiftExpression	( ( noutbuf + 15 ) >> 4 ) << 1		2573089	1		<<			
ANR	2573133	ShiftExpression	( noutbuf + 15 ) >> 4		2573089	0		>>			
ANR	2573134	AdditiveExpression	noutbuf + 15		2573089	0		+			
ANR	2573135	Identifier	noutbuf		2573089	0					
ANR	2573136	PrimaryExpression	15		2573089	1					
ANR	2573137	PrimaryExpression	4		2573089	1					
ANR	2573138	PrimaryExpression	1		2573089	1					
ANR	2573139	IfStatement	if ( noutbuf > 0 )		2573089	6					
ANR	2573140	Condition	noutbuf > 0	4636:6:168913:168923	2573089	0	True				
ANR	2573141	RelationalExpression	noutbuf > 0		2573089	0		>			
ANR	2573142	Identifier	noutbuf		2573089	0					
ANR	2573143	PrimaryExpression	0		2573089	1					
ANR	2573144	CompoundStatement		12:19:212:212	2573089	1					
ANR	2573145	ExpressionStatement	upd -> noutbuf = noutbuf	4637:6:168934:168956	2573089	0	True				
ANR	2573146	AssignmentExpression	upd -> noutbuf = noutbuf		2573089	0		=			
ANR	2573147	PtrMemberAccess	upd -> noutbuf		2573089	0					
ANR	2573148	Identifier	upd		2573089	0					
ANR	2573149	Identifier	noutbuf		2573089	1					
ANR	2573150	Identifier	noutbuf		2573089	1					
ANR	2573151	ExpressionStatement	upd -> start_writer = upd_start_rascomp	4638:6:168964:169001	2573089	1	True				
ANR	2573152	AssignmentExpression	upd -> start_writer = upd_start_rascomp		2573089	0		=			
ANR	2573153	PtrMemberAccess	upd -> start_writer		2573089	0					
ANR	2573154	Identifier	upd		2573089	0					
ANR	2573155	Identifier	start_writer		2573089	1					
ANR	2573156	Identifier	upd_start_rascomp		2573089	1					
ANR	2573157	ExpressionStatement	upd -> writer = upd_rascomp	4639:6:169009:169040	2573089	2	True				
ANR	2573158	AssignmentExpression	upd -> writer = upd_rascomp		2573089	0		=			
ANR	2573159	PtrMemberAccess	upd -> writer		2573089	0					
ANR	2573160	Identifier	upd		2573089	0					
ANR	2573161	Identifier	writer		2573089	1					
ANR	2573162	Identifier	upd_rascomp		2573089	1					
ANR	2573163	ElseStatement	else		2573089	0					
ANR	2573164	CompoundStatement		16:10:338:338	2573089	0					
ANR	2573165	ExpressionStatement	error = - 1	4641:6:169060:169070	2573089	0	True				
ANR	2573166	AssignmentExpression	error = - 1		2573089	0		=			
ANR	2573167	Identifier	error		2573089	0					
ANR	2573168	UnaryOperationExpression	- 1		2573089	1					
ANR	2573169	UnaryOperator	-		2573089	0					
ANR	2573170	PrimaryExpression	1		2573089	1					
ANR	2573171	ReturnStatement	return error ;	4644:3:169081:169093	2573089	7	True				
ANR	2573172	Identifier	error		2573089	0					
ANR	2573173	ReturnType	static int		2573089	1					
ANR	2573174	Identifier	upd_open_rascomp		2573089	2					
ANR	2573175	ParameterList	upd_device * udev		2573089	3					
ANR	2573176	Parameter	upd_device * udev	4624:17:168695:168710	2573089	0	True				
ANR	2573177	ParameterType	upd_device *		2573089	0					
ANR	2573178	Identifier	udev		2573089	1					
ANR	2573179	CFGEntryNode	ENTRY		2573089		True				
ANR	2573180	CFGExitNode	EXIT		2573089		True				
ANR	2573181	Symbol	upd -> start_writer		2573089						
ANR	2573182	Symbol	upd		2573089						
ANR	2573183	Symbol	error		2573089						
ANR	2573184	Symbol	noutbuf		2573089						
ANR	2573185	Symbol	upd -> ncomp		2573089						
ANR	2573186	Symbol	upd_start_rascomp		2573089						
ANR	2573187	Symbol	udev -> upd		2573089						
ANR	2573188	Symbol	upd -> noutbuf		2573089						
ANR	2573189	Symbol	* udev		2573089						
ANR	2573190	Symbol	* upd		2573089						
ANR	2573191	Symbol	upd -> writer		2573089						
ANR	2573192	Symbol	udev		2573089						
ANR	2573193	Symbol	upd_rascomp		2573089						
ANR	2573194	Symbol	upd -> pwidth		2573089						
ANR	2573195	Function	upd_start_rascomp	4661:0:169565:172264							
ANR	2573196	FunctionDef	"upd_start_rascomp (upd_p upd , FILE * out)"		2573195	0					
ANR	2573197	CompoundStatement		4662:40:169616:172264	2573195	0					
ANR	2573198	IfStatement	if ( 0 == upd -> strings [ S_BEGIN ] . size )		2573195	0					
ANR	2573199	Condition	0 == upd -> strings [ S_BEGIN ] . size	4665:6:169668:169698	2573195	0	True				
ANR	2573200	EqualityExpression	0 == upd -> strings [ S_BEGIN ] . size		2573195	0		==			
ANR	2573201	PrimaryExpression	0		2573195	0					
ANR	2573202	MemberAccess	upd -> strings [ S_BEGIN ] . size		2573195	1					
ANR	2573203	ArrayIndexing	upd -> strings [ S_BEGIN ]		2573195	0					
ANR	2573204	PtrMemberAccess	upd -> strings		2573195	0					
ANR	2573205	Identifier	upd		2573195	0					
ANR	2573206	Identifier	strings		2573195	1					
ANR	2573207	Identifier	S_BEGIN		2573195	1					
ANR	2573208	Identifier	size		2573195	1					
ANR	2573209	CompoundStatement		5:6:92:103	2573195	1					
ANR	2573210	IdentifierDeclStatement	int32_t val ;	4666:6:169709:169720	2573195	0	True				
ANR	2573211	IdentifierDecl	val		2573195	0					
ANR	2573212	IdentifierDeclType	int32_t		2573195	0					
ANR	2573213	Identifier	val		2573195	1					
ANR	2573214	ExpressionStatement	val = 0x59a66a95	4669:6:169748:169764	2573195	1	True				
ANR	2573215	AssignmentExpression	val = 0x59a66a95		2573195	0		=			
ANR	2573216	Identifier	val		2573195	0					
ANR	2573217	PrimaryExpression	0x59a66a95		2573195	1					
ANR	2573218	ExpressionStatement	"put32 ( val , out )"	4670:6:169772:169786	2573195	2	True				
ANR	2573219	CallExpression	"put32 ( val , out )"		2573195	0					
ANR	2573220	Callee	put32		2573195	0					
ANR	2573221	Identifier	put32		2573195	0					
ANR	2573222	ArgumentList	val		2573195	1					
ANR	2573223	Argument	val		2573195	0					
ANR	2573224	Identifier	val		2573195	0					
ANR	2573225	Argument	out		2573195	1					
ANR	2573226	Identifier	out		2573195	0					
ANR	2573227	ExpressionStatement	val = upd -> pwidth	4673:6:169814:169831	2573195	3	True				
ANR	2573228	AssignmentExpression	val = upd -> pwidth		2573195	0		=			
ANR	2573229	Identifier	val		2573195	0					
ANR	2573230	PtrMemberAccess	upd -> pwidth		2573195	1					
ANR	2573231	Identifier	upd		2573195	0					
ANR	2573232	Identifier	pwidth		2573195	1					
ANR	2573233	ExpressionStatement	"put32 ( val , out )"	4674:6:169839:169853	2573195	4	True				
ANR	2573234	CallExpression	"put32 ( val , out )"		2573195	0					
ANR	2573235	Callee	put32		2573195	0					
ANR	2573236	Identifier	put32		2573195	0					
ANR	2573237	ArgumentList	val		2573195	1					
ANR	2573238	Argument	val		2573195	0					
ANR	2573239	Identifier	val		2573195	0					
ANR	2573240	Argument	out		2573195	1					
ANR	2573241	Identifier	out		2573195	0					
ANR	2573242	ExpressionStatement	val = upd -> pheight	4677:6:169882:169900	2573195	5	True				
ANR	2573243	AssignmentExpression	val = upd -> pheight		2573195	0		=			
ANR	2573244	Identifier	val		2573195	0					
ANR	2573245	PtrMemberAccess	upd -> pheight		2573195	1					
ANR	2573246	Identifier	upd		2573195	0					
ANR	2573247	Identifier	pheight		2573195	1					
ANR	2573248	ExpressionStatement	"put32 ( val , out )"	4678:6:169908:169922	2573195	6	True				
ANR	2573249	CallExpression	"put32 ( val , out )"		2573195	0					
ANR	2573250	Callee	put32		2573195	0					
ANR	2573251	Identifier	put32		2573195	0					
ANR	2573252	ArgumentList	val		2573195	1					
ANR	2573253	Argument	val		2573195	0					
ANR	2573254	Identifier	val		2573195	0					
ANR	2573255	Argument	out		2573195	1					
ANR	2573256	Identifier	out		2573195	0					
ANR	2573257	IfStatement	if ( 1 < upd -> ncomp )		2573195	7					
ANR	2573258	Condition	1 < upd -> ncomp	4681:9:169953:169966	2573195	0	True				
ANR	2573259	RelationalExpression	1 < upd -> ncomp		2573195	0		<			
ANR	2573260	PrimaryExpression	1		2573195	0					
ANR	2573261	PtrMemberAccess	upd -> ncomp		2573195	1					
ANR	2573262	Identifier	upd		2573195	0					
ANR	2573263	Identifier	ncomp		2573195	1					
ANR	2573264	ExpressionStatement	val = 8	4681:25:169969:169976	2573195	1	True				
ANR	2573265	AssignmentExpression	val = 8		2573195	0		=			
ANR	2573266	Identifier	val		2573195	0					
ANR	2573267	PrimaryExpression	8		2573195	1					
ANR	2573268	ElseStatement	else		2573195	0					
ANR	2573269	ExpressionStatement	val = 1	4682:25:170024:170031	2573195	0	True				
ANR	2573270	AssignmentExpression	val = 1		2573195	0		=			
ANR	2573271	Identifier	val		2573195	0					
ANR	2573272	PrimaryExpression	1		2573195	1					
ANR	2573273	ExpressionStatement	"put32 ( val , out )"	4683:6:170039:170053	2573195	8	True				
ANR	2573274	CallExpression	"put32 ( val , out )"		2573195	0					
ANR	2573275	Callee	put32		2573195	0					
ANR	2573276	Identifier	put32		2573195	0					
ANR	2573277	ArgumentList	val		2573195	1					
ANR	2573278	Argument	val		2573195	0					
ANR	2573279	Identifier	val		2573195	0					
ANR	2573280	Argument	out		2573195	1					
ANR	2573281	Identifier	out		2573195	0					
ANR	2573282	ExpressionStatement	val *= upd -> pwidth	4686:6:170082:170100	2573195	9	True				
ANR	2573283	AssignmentExpression	val *= upd -> pwidth		2573195	0		*=			
ANR	2573284	Identifier	val		2573195	0					
ANR	2573285	PtrMemberAccess	upd -> pwidth		2573195	1					
ANR	2573286	Identifier	upd		2573195	0					
ANR	2573287	Identifier	pwidth		2573195	1					
ANR	2573288	ExpressionStatement	val = ( ( val + 15 ) >> 4 ) << 1	4687:6:170108:170130	2573195	10	True				
ANR	2573289	AssignmentExpression	val = ( ( val + 15 ) >> 4 ) << 1		2573195	0		=			
ANR	2573290	Identifier	val		2573195	0					
ANR	2573291	ShiftExpression	( ( val + 15 ) >> 4 ) << 1		2573195	1		<<			
ANR	2573292	ShiftExpression	( val + 15 ) >> 4		2573195	0		>>			
ANR	2573293	AdditiveExpression	val + 15		2573195	0		+			
ANR	2573294	Identifier	val		2573195	0					
ANR	2573295	PrimaryExpression	15		2573195	1					
ANR	2573296	PrimaryExpression	4		2573195	1					
ANR	2573297	PrimaryExpression	1		2573195	1					
ANR	2573298	ExpressionStatement	val *= upd -> pheight	4688:6:170138:170157	2573195	11	True				
ANR	2573299	AssignmentExpression	val *= upd -> pheight		2573195	0		*=			
ANR	2573300	Identifier	val		2573195	0					
ANR	2573301	PtrMemberAccess	upd -> pheight		2573195	1					
ANR	2573302	Identifier	upd		2573195	0					
ANR	2573303	Identifier	pheight		2573195	1					
ANR	2573304	ExpressionStatement	"put32 ( val , out )"	4689:6:170165:170179	2573195	12	True				
ANR	2573305	CallExpression	"put32 ( val , out )"		2573195	0					
ANR	2573306	Callee	put32		2573195	0					
ANR	2573307	Identifier	put32		2573195	0					
ANR	2573308	ArgumentList	val		2573195	1					
ANR	2573309	Argument	val		2573195	0					
ANR	2573310	Identifier	val		2573195	0					
ANR	2573311	Argument	out		2573195	1					
ANR	2573312	Identifier	out		2573195	0					
ANR	2573313	ExpressionStatement	val = 1	4692:6:170206:170213	2573195	13	True				
ANR	2573314	AssignmentExpression	val = 1		2573195	0		=			
ANR	2573315	Identifier	val		2573195	0					
ANR	2573316	PrimaryExpression	1		2573195	1					
ANR	2573317	ExpressionStatement	"put32 ( val , out )"	4693:6:170221:170235	2573195	14	True				
ANR	2573318	CallExpression	"put32 ( val , out )"		2573195	0					
ANR	2573319	Callee	put32		2573195	0					
ANR	2573320	Identifier	put32		2573195	0					
ANR	2573321	ArgumentList	val		2573195	1					
ANR	2573322	Argument	val		2573195	0					
ANR	2573323	Identifier	val		2573195	0					
ANR	2573324	Argument	out		2573195	1					
ANR	2573325	Identifier	out		2573195	0					
ANR	2573326	ExpressionStatement	val = 1	4696:6:170265:170272	2573195	15	True				
ANR	2573327	AssignmentExpression	val = 1		2573195	0		=			
ANR	2573328	Identifier	val		2573195	0					
ANR	2573329	PrimaryExpression	1		2573195	1					
ANR	2573330	ExpressionStatement	"put32 ( val , out )"	4697:6:170280:170294	2573195	16	True				
ANR	2573331	CallExpression	"put32 ( val , out )"		2573195	0					
ANR	2573332	Callee	put32		2573195	0					
ANR	2573333	Identifier	put32		2573195	0					
ANR	2573334	ArgumentList	val		2573195	1					
ANR	2573335	Argument	val		2573195	0					
ANR	2573336	Identifier	val		2573195	0					
ANR	2573337	Argument	out		2573195	1					
ANR	2573338	Identifier	out		2573195	0					
ANR	2573339	ExpressionStatement	val = 3 * ( 1 << upd -> ncomp )	4700:6:170326:170353	2573195	17	True				
ANR	2573340	AssignmentExpression	val = 3 * ( 1 << upd -> ncomp )		2573195	0		=			
ANR	2573341	Identifier	val		2573195	0					
ANR	2573342	MultiplicativeExpression	3 * ( 1 << upd -> ncomp )		2573195	1		*			
ANR	2573343	PrimaryExpression	3		2573195	0					
ANR	2573344	ShiftExpression	1 << upd -> ncomp		2573195	1		<<			
ANR	2573345	PrimaryExpression	1		2573195	0					
ANR	2573346	PtrMemberAccess	upd -> ncomp		2573195	1					
ANR	2573347	Identifier	upd		2573195	0					
ANR	2573348	Identifier	ncomp		2573195	1					
ANR	2573349	ExpressionStatement	"put32 ( val , out )"	4701:6:170382:170396	2573195	18	True				
ANR	2573350	CallExpression	"put32 ( val , out )"		2573195	0					
ANR	2573351	Callee	put32		2573195	0					
ANR	2573352	Identifier	put32		2573195	0					
ANR	2573353	ArgumentList	val		2573195	1					
ANR	2573354	Argument	val		2573195	0					
ANR	2573355	Identifier	val		2573195	0					
ANR	2573356	Argument	out		2573195	1					
ANR	2573357	Identifier	out		2573195	0					
ANR	2573358	IfStatement	if ( 1 == upd -> ncomp )		2573195	19					
ANR	2573359	Condition	1 == upd -> ncomp	4704:9:170427:170441	2573195	0	True				
ANR	2573360	EqualityExpression	1 == upd -> ncomp		2573195	0		==			
ANR	2573361	PrimaryExpression	1		2573195	0					
ANR	2573362	PtrMemberAccess	upd -> ncomp		2573195	1					
ANR	2573363	Identifier	upd		2573195	0					
ANR	2573364	Identifier	ncomp		2573195	1					
ANR	2573365	CompoundStatement		44:9:859:896	2573195	1					
ANR	2573366	IdentifierDeclStatement	const updcomp_p comp = upd -> valptr [ 0 ] ;	4705:9:170476:170513	2573195	0	True				
ANR	2573367	IdentifierDecl	comp = upd -> valptr [ 0 ]		2573195	0					
ANR	2573368	IdentifierDeclType	const updcomp_p		2573195	0					
ANR	2573369	Identifier	comp		2573195	1					
ANR	2573370	AssignmentExpression	comp = upd -> valptr [ 0 ]		2573195	2		=			
ANR	2573371	Identifier	comp		2573195	0					
ANR	2573372	ArrayIndexing	upd -> valptr [ 0 ]		2573195	1					
ANR	2573373	PtrMemberAccess	upd -> valptr		2573195	0					
ANR	2573374	Identifier	upd		2573195	0					
ANR	2573375	Identifier	valptr		2573195	1					
ANR	2573376	PrimaryExpression	0		2573195	1					
ANR	2573377	IfStatement	if ( upd -> cmap [ comp -> cmap ] . rise )		2573195	1					
ANR	2573378	Condition	upd -> cmap [ comp -> cmap ] . rise	4707:12:170528:170553	2573195	0	True				
ANR	2573379	MemberAccess	upd -> cmap [ comp -> cmap ] . rise		2573195	0					
ANR	2573380	ArrayIndexing	upd -> cmap [ comp -> cmap ]		2573195	0					
ANR	2573381	PtrMemberAccess	upd -> cmap		2573195	0					
ANR	2573382	Identifier	upd		2573195	0					
ANR	2573383	Identifier	cmap		2573195	1					
ANR	2573384	PtrMemberAccess	comp -> cmap		2573195	1					
ANR	2573385	Identifier	comp		2573195	0					
ANR	2573386	Identifier	cmap		2573195	1					
ANR	2573387	Identifier	rise		2573195	1					
ANR	2573388	CompoundStatement		46:40:939:939	2573195	1					
ANR	2573389	ExpressionStatement	"putc ( ( char ) 0x00 , out )"	4708:12:170570:170591	2573195	0	True				
ANR	2573390	CallExpression	"putc ( ( char ) 0x00 , out )"		2573195	0					
ANR	2573391	Callee	putc		2573195	0					
ANR	2573392	Identifier	putc		2573195	0					
ANR	2573393	ArgumentList	( char ) 0x00		2573195	1					
ANR	2573394	Argument	( char ) 0x00		2573195	0					
ANR	2573395	CastExpression	( char ) 0x00		2573195	0					
ANR	2573396	CastTarget	char		2573195	0					
ANR	2573397	PrimaryExpression	0x00		2573195	1					
ANR	2573398	Argument	out		2573195	1					
ANR	2573399	Identifier	out		2573195	0					
ANR	2573400	ExpressionStatement	"putc ( ( char ) 0xff , out )"	4708:35:170593:170614	2573195	1	True				
ANR	2573401	CallExpression	"putc ( ( char ) 0xff , out )"		2573195	0					
ANR	2573402	Callee	putc		2573195	0					
ANR	2573403	Identifier	putc		2573195	0					
ANR	2573404	ArgumentList	( char ) 0xff		2573195	1					
ANR	2573405	Argument	( char ) 0xff		2573195	0					
ANR	2573406	CastExpression	( char ) 0xff		2573195	0					
ANR	2573407	CastTarget	char		2573195	0					
ANR	2573408	PrimaryExpression	0xff		2573195	1					
ANR	2573409	Argument	out		2573195	1					
ANR	2573410	Identifier	out		2573195	0					
ANR	2573411	ExpressionStatement	"putc ( ( char ) 0x00 , out )"	4709:12:170628:170649	2573195	2	True				
ANR	2573412	CallExpression	"putc ( ( char ) 0x00 , out )"		2573195	0					
ANR	2573413	Callee	putc		2573195	0					
ANR	2573414	Identifier	putc		2573195	0					
ANR	2573415	ArgumentList	( char ) 0x00		2573195	1					
ANR	2573416	Argument	( char ) 0x00		2573195	0					
ANR	2573417	CastExpression	( char ) 0x00		2573195	0					
ANR	2573418	CastTarget	char		2573195	0					
ANR	2573419	PrimaryExpression	0x00		2573195	1					
ANR	2573420	Argument	out		2573195	1					
ANR	2573421	Identifier	out		2573195	0					
ANR	2573422	ExpressionStatement	"putc ( ( char ) 0xff , out )"	4709:35:170651:170672	2573195	3	True				
ANR	2573423	CallExpression	"putc ( ( char ) 0xff , out )"		2573195	0					
ANR	2573424	Callee	putc		2573195	0					
ANR	2573425	Identifier	putc		2573195	0					
ANR	2573426	ArgumentList	( char ) 0xff		2573195	1					
ANR	2573427	Argument	( char ) 0xff		2573195	0					
ANR	2573428	CastExpression	( char ) 0xff		2573195	0					
ANR	2573429	CastTarget	char		2573195	0					
ANR	2573430	PrimaryExpression	0xff		2573195	1					
ANR	2573431	Argument	out		2573195	1					
ANR	2573432	Identifier	out		2573195	0					
ANR	2573433	ExpressionStatement	"putc ( ( char ) 0x00 , out )"	4710:12:170686:170707	2573195	4	True				
ANR	2573434	CallExpression	"putc ( ( char ) 0x00 , out )"		2573195	0					
ANR	2573435	Callee	putc		2573195	0					
ANR	2573436	Identifier	putc		2573195	0					
ANR	2573437	ArgumentList	( char ) 0x00		2573195	1					
ANR	2573438	Argument	( char ) 0x00		2573195	0					
ANR	2573439	CastExpression	( char ) 0x00		2573195	0					
ANR	2573440	CastTarget	char		2573195	0					
ANR	2573441	PrimaryExpression	0x00		2573195	1					
ANR	2573442	Argument	out		2573195	1					
ANR	2573443	Identifier	out		2573195	0					
ANR	2573444	ExpressionStatement	"putc ( ( char ) 0xff , out )"	4710:35:170709:170730	2573195	5	True				
ANR	2573445	CallExpression	"putc ( ( char ) 0xff , out )"		2573195	0					
ANR	2573446	Callee	putc		2573195	0					
ANR	2573447	Identifier	putc		2573195	0					
ANR	2573448	ArgumentList	( char ) 0xff		2573195	1					
ANR	2573449	Argument	( char ) 0xff		2573195	0					
ANR	2573450	CastExpression	( char ) 0xff		2573195	0					
ANR	2573451	CastTarget	char		2573195	0					
ANR	2573452	PrimaryExpression	0xff		2573195	1					
ANR	2573453	Argument	out		2573195	1					
ANR	2573454	Identifier	out		2573195	0					
ANR	2573455	ElseStatement	else		2573195	0					
ANR	2573456	CompoundStatement		50:16:1131:1131	2573195	0					
ANR	2573457	ExpressionStatement	"putc ( ( char ) 0xff , out )"	4712:12:170762:170783	2573195	0	True				
ANR	2573458	CallExpression	"putc ( ( char ) 0xff , out )"		2573195	0					
ANR	2573459	Callee	putc		2573195	0					
ANR	2573460	Identifier	putc		2573195	0					
ANR	2573461	ArgumentList	( char ) 0xff		2573195	1					
ANR	2573462	Argument	( char ) 0xff		2573195	0					
ANR	2573463	CastExpression	( char ) 0xff		2573195	0					
ANR	2573464	CastTarget	char		2573195	0					
ANR	2573465	PrimaryExpression	0xff		2573195	1					
ANR	2573466	Argument	out		2573195	1					
ANR	2573467	Identifier	out		2573195	0					
ANR	2573468	ExpressionStatement	"putc ( ( char ) 0x00 , out )"	4712:35:170785:170806	2573195	1	True				
ANR	2573469	CallExpression	"putc ( ( char ) 0x00 , out )"		2573195	0					
ANR	2573470	Callee	putc		2573195	0					
ANR	2573471	Identifier	putc		2573195	0					
ANR	2573472	ArgumentList	( char ) 0x00		2573195	1					
ANR	2573473	Argument	( char ) 0x00		2573195	0					
ANR	2573474	CastExpression	( char ) 0x00		2573195	0					
ANR	2573475	CastTarget	char		2573195	0					
ANR	2573476	PrimaryExpression	0x00		2573195	1					
ANR	2573477	Argument	out		2573195	1					
ANR	2573478	Identifier	out		2573195	0					
ANR	2573479	ExpressionStatement	"putc ( ( char ) 0xff , out )"	4713:12:170820:170841	2573195	2	True				
ANR	2573480	CallExpression	"putc ( ( char ) 0xff , out )"		2573195	0					
ANR	2573481	Callee	putc		2573195	0					
ANR	2573482	Identifier	putc		2573195	0					
ANR	2573483	ArgumentList	( char ) 0xff		2573195	1					
ANR	2573484	Argument	( char ) 0xff		2573195	0					
ANR	2573485	CastExpression	( char ) 0xff		2573195	0					
ANR	2573486	CastTarget	char		2573195	0					
ANR	2573487	PrimaryExpression	0xff		2573195	1					
ANR	2573488	Argument	out		2573195	1					
ANR	2573489	Identifier	out		2573195	0					
ANR	2573490	ExpressionStatement	"putc ( ( char ) 0x00 , out )"	4713:35:170843:170864	2573195	3	True				
ANR	2573491	CallExpression	"putc ( ( char ) 0x00 , out )"		2573195	0					
ANR	2573492	Callee	putc		2573195	0					
ANR	2573493	Identifier	putc		2573195	0					
ANR	2573494	ArgumentList	( char ) 0x00		2573195	1					
ANR	2573495	Argument	( char ) 0x00		2573195	0					
ANR	2573496	CastExpression	( char ) 0x00		2573195	0					
ANR	2573497	CastTarget	char		2573195	0					
ANR	2573498	PrimaryExpression	0x00		2573195	1					
ANR	2573499	Argument	out		2573195	1					
ANR	2573500	Identifier	out		2573195	0					
ANR	2573501	ExpressionStatement	"putc ( ( char ) 0xff , out )"	4714:12:170878:170899	2573195	4	True				
ANR	2573502	CallExpression	"putc ( ( char ) 0xff , out )"		2573195	0					
ANR	2573503	Callee	putc		2573195	0					
ANR	2573504	Identifier	putc		2573195	0					
ANR	2573505	ArgumentList	( char ) 0xff		2573195	1					
ANR	2573506	Argument	( char ) 0xff		2573195	0					
ANR	2573507	CastExpression	( char ) 0xff		2573195	0					
ANR	2573508	CastTarget	char		2573195	0					
ANR	2573509	PrimaryExpression	0xff		2573195	1					
ANR	2573510	Argument	out		2573195	1					
ANR	2573511	Identifier	out		2573195	0					
ANR	2573512	ExpressionStatement	"putc ( ( char ) 0x00 , out )"	4714:35:170901:170922	2573195	5	True				
ANR	2573513	CallExpression	"putc ( ( char ) 0x00 , out )"		2573195	0					
ANR	2573514	Callee	putc		2573195	0					
ANR	2573515	Identifier	putc		2573195	0					
ANR	2573516	ArgumentList	( char ) 0x00		2573195	1					
ANR	2573517	Argument	( char ) 0x00		2573195	0					
ANR	2573518	CastExpression	( char ) 0x00		2573195	0					
ANR	2573519	CastTarget	char		2573195	0					
ANR	2573520	PrimaryExpression	0x00		2573195	1					
ANR	2573521	Argument	out		2573195	1					
ANR	2573522	Identifier	out		2573195	0					
ANR	2573523	ElseStatement	else		2573195	0					
ANR	2573524	IfStatement	if ( 3 == upd -> ncomp )		2573195	0					
ANR	2573525	Condition	3 == upd -> ncomp	4717:16:170952:170966	2573195	0	True				
ANR	2573526	EqualityExpression	3 == upd -> ncomp		2573195	0		==			
ANR	2573527	PrimaryExpression	3		2573195	0					
ANR	2573528	PtrMemberAccess	upd -> ncomp		2573195	1					
ANR	2573529	Identifier	upd		2573195	0					
ANR	2573530	Identifier	ncomp		2573195	1					
ANR	2573531	CompoundStatement		57:9:1384:1391	2573195	1					
ANR	2573532	IdentifierDeclStatement	int rgb ;	4718:9:171001:171008	2573195	0	True				
ANR	2573533	IdentifierDecl	rgb		2573195	0					
ANR	2573534	IdentifierDeclType	int		2573195	0					
ANR	2573535	Identifier	rgb		2573195	1					
ANR	2573536	ForStatement	for ( rgb = 0 ; rgb < 3 ; ++ rgb )		2573195	1					
ANR	2573537	ForInit	rgb = 0 ;	4720:14:171025:171032	2573195	0	True				
ANR	2573538	AssignmentExpression	rgb = 0		2573195	0		=			
ANR	2573539	Identifier	rgb		2573195	0					
ANR	2573540	PrimaryExpression	0		2573195	1					
ANR	2573541	Condition	rgb < 3	4720:23:171034:171040	2573195	1	True				
ANR	2573542	RelationalExpression	rgb < 3		2573195	0		<			
ANR	2573543	Identifier	rgb		2573195	0					
ANR	2573544	PrimaryExpression	3		2573195	1					
ANR	2573545	UnaryExpression	++ rgb	4720:32:171043:171047	2573195	2	True				
ANR	2573546	IncDec	++		2573195	0					
ANR	2573547	Identifier	rgb		2573195	1					
ANR	2573548	CompoundStatement		60:12:1447:1456	2573195	3					
ANR	2573549	IdentifierDeclStatement	int entry ;	4721:12:171064:171073	2573195	0	True				
ANR	2573550	IdentifierDecl	entry		2573195	0					
ANR	2573551	IdentifierDeclType	int		2573195	0					
ANR	2573552	Identifier	entry		2573195	1					
ANR	2573553	ForStatement	for ( entry = 0 ; entry < 8 ; ++ entry )		2573195	1					
ANR	2573554	ForInit	entry = 0 ;	4722:16:171091:171100	2573195	0	True				
ANR	2573555	AssignmentExpression	entry = 0		2573195	0		=			
ANR	2573556	Identifier	entry		2573195	0					
ANR	2573557	PrimaryExpression	0		2573195	1					
ANR	2573558	Condition	entry < 8	4722:27:171102:171110	2573195	1	True				
ANR	2573559	RelationalExpression	entry < 8		2573195	0		<			
ANR	2573560	Identifier	entry		2573195	0					
ANR	2573561	PrimaryExpression	8		2573195	1					
ANR	2573562	UnaryExpression	++ entry	4722:38:171113:171119	2573195	2	True				
ANR	2573563	IncDec	++		2573195	0					
ANR	2573564	Identifier	entry		2573195	1					
ANR	2573565	CompoundStatement		62:15:1522:1567	2573195	3					
ANR	2573566	IdentifierDeclStatement	byte xval = upd -> cmap [ rgb ] . rise ? 0x00 : 0xff ;	4723:15:171139:171184	2573195	0	True				
ANR	2573567	IdentifierDecl	xval = upd -> cmap [ rgb ] . rise ? 0x00 : 0xff		2573195	0					
ANR	2573568	IdentifierDeclType	byte		2573195	0					
ANR	2573569	Identifier	xval		2573195	1					
ANR	2573570	AssignmentExpression	xval = upd -> cmap [ rgb ] . rise ? 0x00 : 0xff		2573195	2		=			
ANR	2573571	Identifier	xval		2573195	0					
ANR	2573572	ConditionalExpression	upd -> cmap [ rgb ] . rise ? 0x00 : 0xff		2573195	1					
ANR	2573573	Condition	upd -> cmap [ rgb ] . rise		2573195	0					
ANR	2573574	MemberAccess	upd -> cmap [ rgb ] . rise		2573195	0					
ANR	2573575	ArrayIndexing	upd -> cmap [ rgb ]		2573195	0					
ANR	2573576	PtrMemberAccess	upd -> cmap		2573195	0					
ANR	2573577	Identifier	upd		2573195	0					
ANR	2573578	Identifier	cmap		2573195	1					
ANR	2573579	Identifier	rgb		2573195	1					
ANR	2573580	Identifier	rise		2573195	1					
ANR	2573581	PrimaryExpression	0x00		2573195	1					
ANR	2573582	PrimaryExpression	0xff		2573195	2					
ANR	2573583	IfStatement	if ( entry & ( 1 << upd -> cmap [ rgb ] . comp ) )		2573195	1					
ANR	2573584	Condition	entry & ( 1 << upd -> cmap [ rgb ] . comp )	4724:18:171204:171235	2573195	0	True				
ANR	2573585	BitAndExpression	entry & ( 1 << upd -> cmap [ rgb ] . comp )		2573195	0		&			
ANR	2573586	Identifier	entry		2573195	0					
ANR	2573587	ShiftExpression	1 << upd -> cmap [ rgb ] . comp		2573195	1		<<			
ANR	2573588	PrimaryExpression	1		2573195	0					
ANR	2573589	MemberAccess	upd -> cmap [ rgb ] . comp		2573195	1					
ANR	2573590	ArrayIndexing	upd -> cmap [ rgb ]		2573195	0					
ANR	2573591	PtrMemberAccess	upd -> cmap		2573195	0					
ANR	2573592	Identifier	upd		2573195	0					
ANR	2573593	Identifier	cmap		2573195	1					
ANR	2573594	Identifier	rgb		2573195	1					
ANR	2573595	Identifier	comp		2573195	1					
ANR	2573596	ExpressionStatement	xval ^= 0xff	4724:52:171238:171250	2573195	1	True				
ANR	2573597	AssignmentExpression	xval ^= 0xff		2573195	0		^=			
ANR	2573598	Identifier	xval		2573195	0					
ANR	2573599	PrimaryExpression	0xff		2573195	1					
ANR	2573600	ExpressionStatement	"putc ( xval , out )"	4725:15:171267:171281	2573195	2	True				
ANR	2573601	CallExpression	"putc ( xval , out )"		2573195	0					
ANR	2573602	Callee	putc		2573195	0					
ANR	2573603	Identifier	putc		2573195	0					
ANR	2573604	ArgumentList	xval		2573195	1					
ANR	2573605	Argument	xval		2573195	0					
ANR	2573606	Identifier	xval		2573195	0					
ANR	2573607	Argument	out		2573195	1					
ANR	2573608	Identifier	out		2573195	0					
ANR	2573609	ElseStatement	else		2573195	0					
ANR	2573610	CompoundStatement		68:9:1742:1749	2573195	0					
ANR	2573611	IdentifierDeclStatement	int rgb ;	4729:9:171359:171366	2573195	0	True				
ANR	2573612	IdentifierDecl	rgb		2573195	0					
ANR	2573613	IdentifierDeclType	int		2573195	0					
ANR	2573614	Identifier	rgb		2573195	1					
ANR	2573615	ForStatement	for ( rgb = 16 ; 0 <= rgb ; rgb -= 8 )		2573195	1					
ANR	2573616	ForInit	rgb = 16 ;	4731:13:171382:171390	2573195	0	True				
ANR	2573617	AssignmentExpression	rgb = 16		2573195	0		=			
ANR	2573618	Identifier	rgb		2573195	0					
ANR	2573619	PrimaryExpression	16		2573195	1					
ANR	2573620	Condition	0 <= rgb	4731:23:171392:171399	2573195	1	True				
ANR	2573621	RelationalExpression	0 <= rgb		2573195	0		<=			
ANR	2573622	PrimaryExpression	0		2573195	0					
ANR	2573623	Identifier	rgb		2573195	1					
ANR	2573624	AssignmentExpression	rgb -= 8	4731:33:171402:171409	2573195	2	True	-=			
ANR	2573625	Identifier	rgb		2573195	0					
ANR	2573626	PrimaryExpression	8		2573195	1					
ANR	2573627	CompoundStatement		71:12:1809:1818	2573195	3					
ANR	2573628	IdentifierDeclStatement	int entry ;	4732:12:171426:171435	2573195	0	True				
ANR	2573629	IdentifierDecl	entry		2573195	0					
ANR	2573630	IdentifierDeclType	int		2573195	0					
ANR	2573631	Identifier	entry		2573195	1					
ANR	2573632	ForStatement	for ( entry = 0 ; entry < 16 ; ++ entry )		2573195	1					
ANR	2573633	ForInit	entry = 0 ;	4733:16:171453:171462	2573195	0	True				
ANR	2573634	AssignmentExpression	entry = 0		2573195	0		=			
ANR	2573635	Identifier	entry		2573195	0					
ANR	2573636	PrimaryExpression	0		2573195	1					
ANR	2573637	Condition	entry < 16	4733:27:171464:171473	2573195	1	True				
ANR	2573638	RelationalExpression	entry < 16		2573195	0		<			
ANR	2573639	Identifier	entry		2573195	0					
ANR	2573640	PrimaryExpression	16		2573195	1					
ANR	2573641	UnaryExpression	++ entry	4733:39:171476:171482	2573195	2	True				
ANR	2573642	IncDec	++		2573195	0					
ANR	2573643	Identifier	entry		2573195	1					
ANR	2573644	CompoundStatement		73:15:1885:1904	2573195	3					
ANR	2573645	IdentifierDeclStatement	uint32_t rgbval = 0 ;	4734:15:171502:171521	2573195	0	True				
ANR	2573646	IdentifierDecl	rgbval = 0		2573195	0					
ANR	2573647	IdentifierDeclType	uint32_t		2573195	0					
ANR	2573648	Identifier	rgbval		2573195	1					
ANR	2573649	AssignmentExpression	rgbval = 0		2573195	2		=			
ANR	2573650	Identifier	rgbval		2573195	0					
ANR	2573651	PrimaryExpression	0		2573195	1					
ANR	2573652	IfStatement	if ( entry & ( 1 << upd -> cmap [ 0 ] . comp ) )		2573195	1					
ANR	2573653	Condition	entry & ( 1 << upd -> cmap [ 0 ] . comp )	4736:18:171542:171571	2573195	0	True				
ANR	2573654	BitAndExpression	entry & ( 1 << upd -> cmap [ 0 ] . comp )		2573195	0		&			
ANR	2573655	Identifier	entry		2573195	0					
ANR	2573656	ShiftExpression	1 << upd -> cmap [ 0 ] . comp		2573195	1		<<			
ANR	2573657	PrimaryExpression	1		2573195	0					
ANR	2573658	MemberAccess	upd -> cmap [ 0 ] . comp		2573195	1					
ANR	2573659	ArrayIndexing	upd -> cmap [ 0 ]		2573195	0					
ANR	2573660	PtrMemberAccess	upd -> cmap		2573195	0					
ANR	2573661	Identifier	upd		2573195	0					
ANR	2573662	Identifier	cmap		2573195	1					
ANR	2573663	PrimaryExpression	0		2573195	1					
ANR	2573664	Identifier	comp		2573195	1					
ANR	2573665	CompoundStatement		75:50:1957:1957	2573195	1					
ANR	2573666	ExpressionStatement	rgbval = 0xffffff	4738:18:171595:171612	2573195	0	True				
ANR	2573667	AssignmentExpression	rgbval = 0xffffff		2573195	0		=			
ANR	2573668	Identifier	rgbval		2573195	0					
ANR	2573669	PrimaryExpression	0xffffff		2573195	1					
ANR	2573670	ElseStatement	else		2573195	0					
ANR	2573671	CompoundStatement		79:22:2020:2020	2573195	0					
ANR	2573672	IfStatement	if ( entry & ( 1 << upd -> cmap [ 1 ] . comp ) )		2573195	0					
ANR	2573673	Condition	entry & ( 1 << upd -> cmap [ 1 ] . comp )	4742:21:171661:171690	2573195	0	True				
ANR	2573674	BitAndExpression	entry & ( 1 << upd -> cmap [ 1 ] . comp )		2573195	0		&			
ANR	2573675	Identifier	entry		2573195	0					
ANR	2573676	ShiftExpression	1 << upd -> cmap [ 1 ] . comp		2573195	1		<<			
ANR	2573677	PrimaryExpression	1		2573195	0					
ANR	2573678	MemberAccess	upd -> cmap [ 1 ] . comp		2573195	1					
ANR	2573679	ArrayIndexing	upd -> cmap [ 1 ]		2573195	0					
ANR	2573680	PtrMemberAccess	upd -> cmap		2573195	0					
ANR	2573681	Identifier	upd		2573195	0					
ANR	2573682	Identifier	cmap		2573195	1					
ANR	2573683	PrimaryExpression	1		2573195	1					
ANR	2573684	Identifier	comp		2573195	1					
ANR	2573685	ExpressionStatement	rgbval |= 0xff0000	4742:53:171693:171711	2573195	1	True				
ANR	2573686	AssignmentExpression	rgbval |= 0xff0000		2573195	0		|=			
ANR	2573687	Identifier	rgbval		2573195	0					
ANR	2573688	PrimaryExpression	0xff0000		2573195	1					
ANR	2573689	IfStatement	if ( entry & ( 1 << upd -> cmap [ 2 ] . comp ) )		2573195	1					
ANR	2573690	Condition	entry & ( 1 << upd -> cmap [ 2 ] . comp )	4743:21:171734:171763	2573195	0	True				
ANR	2573691	BitAndExpression	entry & ( 1 << upd -> cmap [ 2 ] . comp )		2573195	0		&			
ANR	2573692	Identifier	entry		2573195	0					
ANR	2573693	ShiftExpression	1 << upd -> cmap [ 2 ] . comp		2573195	1		<<			
ANR	2573694	PrimaryExpression	1		2573195	0					
ANR	2573695	MemberAccess	upd -> cmap [ 2 ] . comp		2573195	1					
ANR	2573696	ArrayIndexing	upd -> cmap [ 2 ]		2573195	0					
ANR	2573697	PtrMemberAccess	upd -> cmap		2573195	0					
ANR	2573698	Identifier	upd		2573195	0					
ANR	2573699	Identifier	cmap		2573195	1					
ANR	2573700	PrimaryExpression	2		2573195	1					
ANR	2573701	Identifier	comp		2573195	1					
ANR	2573702	ExpressionStatement	rgbval |= 0x00ff00	4743:53:171766:171784	2573195	1	True				
ANR	2573703	AssignmentExpression	rgbval |= 0x00ff00		2573195	0		|=			
ANR	2573704	Identifier	rgbval		2573195	0					
ANR	2573705	PrimaryExpression	0x00ff00		2573195	1					
ANR	2573706	IfStatement	if ( entry & ( 1 << upd -> cmap [ 3 ] . comp ) )		2573195	2					
ANR	2573707	Condition	entry & ( 1 << upd -> cmap [ 3 ] . comp )	4744:21:171807:171836	2573195	0	True				
ANR	2573708	BitAndExpression	entry & ( 1 << upd -> cmap [ 3 ] . comp )		2573195	0		&			
ANR	2573709	Identifier	entry		2573195	0					
ANR	2573710	ShiftExpression	1 << upd -> cmap [ 3 ] . comp		2573195	1		<<			
ANR	2573711	PrimaryExpression	1		2573195	0					
ANR	2573712	MemberAccess	upd -> cmap [ 3 ] . comp		2573195	1					
ANR	2573713	ArrayIndexing	upd -> cmap [ 3 ]		2573195	0					
ANR	2573714	PtrMemberAccess	upd -> cmap		2573195	0					
ANR	2573715	Identifier	upd		2573195	0					
ANR	2573716	Identifier	cmap		2573195	1					
ANR	2573717	PrimaryExpression	3		2573195	1					
ANR	2573718	Identifier	comp		2573195	1					
ANR	2573719	ExpressionStatement	rgbval |= 0x0000ff	4744:53:171839:171857	2573195	1	True				
ANR	2573720	AssignmentExpression	rgbval |= 0x0000ff		2573195	0		|=			
ANR	2573721	Identifier	rgbval		2573195	0					
ANR	2573722	PrimaryExpression	0x0000ff		2573195	1					
ANR	2573723	IfStatement	if ( ! upd -> cmap [ 1 ] . rise )		2573195	2					
ANR	2573724	Condition	! upd -> cmap [ 1 ] . rise	4747:18:171895:171912	2573195	0	True				
ANR	2573725	UnaryOperationExpression	! upd -> cmap [ 1 ] . rise		2573195	0					
ANR	2573726	UnaryOperator	!		2573195	0					
ANR	2573727	MemberAccess	upd -> cmap [ 1 ] . rise		2573195	1					
ANR	2573728	ArrayIndexing	upd -> cmap [ 1 ]		2573195	0					
ANR	2573729	PtrMemberAccess	upd -> cmap		2573195	0					
ANR	2573730	Identifier	upd		2573195	0					
ANR	2573731	Identifier	cmap		2573195	1					
ANR	2573732	PrimaryExpression	1		2573195	1					
ANR	2573733	Identifier	rise		2573195	1					
ANR	2573734	ExpressionStatement	rgbval ^= 0xff0000	4747:38:171915:171933	2573195	1	True				
ANR	2573735	AssignmentExpression	rgbval ^= 0xff0000		2573195	0		^=			
ANR	2573736	Identifier	rgbval		2573195	0					
ANR	2573737	PrimaryExpression	0xff0000		2573195	1					
ANR	2573738	IfStatement	if ( ! upd -> cmap [ 2 ] . rise )		2573195	3					
ANR	2573739	Condition	! upd -> cmap [ 2 ] . rise	4748:18:171953:171970	2573195	0	True				
ANR	2573740	UnaryOperationExpression	! upd -> cmap [ 2 ] . rise		2573195	0					
ANR	2573741	UnaryOperator	!		2573195	0					
ANR	2573742	MemberAccess	upd -> cmap [ 2 ] . rise		2573195	1					
ANR	2573743	ArrayIndexing	upd -> cmap [ 2 ]		2573195	0					
ANR	2573744	PtrMemberAccess	upd -> cmap		2573195	0					
ANR	2573745	Identifier	upd		2573195	0					
ANR	2573746	Identifier	cmap		2573195	1					
ANR	2573747	PrimaryExpression	2		2573195	1					
ANR	2573748	Identifier	rise		2573195	1					
ANR	2573749	ExpressionStatement	rgbval ^= 0x00ff00	4748:38:171973:171991	2573195	1	True				
ANR	2573750	AssignmentExpression	rgbval ^= 0x00ff00		2573195	0		^=			
ANR	2573751	Identifier	rgbval		2573195	0					
ANR	2573752	PrimaryExpression	0x00ff00		2573195	1					
ANR	2573753	IfStatement	if ( ! upd -> cmap [ 3 ] . rise )		2573195	4					
ANR	2573754	Condition	! upd -> cmap [ 3 ] . rise	4749:18:172011:172028	2573195	0	True				
ANR	2573755	UnaryOperationExpression	! upd -> cmap [ 3 ] . rise		2573195	0					
ANR	2573756	UnaryOperator	!		2573195	0					
ANR	2573757	MemberAccess	upd -> cmap [ 3 ] . rise		2573195	1					
ANR	2573758	ArrayIndexing	upd -> cmap [ 3 ]		2573195	0					
ANR	2573759	PtrMemberAccess	upd -> cmap		2573195	0					
ANR	2573760	Identifier	upd		2573195	0					
ANR	2573761	Identifier	cmap		2573195	1					
ANR	2573762	PrimaryExpression	3		2573195	1					
ANR	2573763	Identifier	rise		2573195	1					
ANR	2573764	ExpressionStatement	rgbval ^= 0x0000ff	4749:38:172031:172049	2573195	1	True				
ANR	2573765	AssignmentExpression	rgbval ^= 0x0000ff		2573195	0		^=			
ANR	2573766	Identifier	rgbval		2573195	0					
ANR	2573767	PrimaryExpression	0x0000ff		2573195	1					
ANR	2573768	IfStatement	if ( ! ( upd -> choice [ C_MAPPER ] == MAP_RGBW ) )		2573195	5					
ANR	2573769	Condition	! ( upd -> choice [ C_MAPPER ] == MAP_RGBW )	4751:18:172070:172105	2573195	0	True				
ANR	2573770	UnaryOperationExpression	! ( upd -> choice [ C_MAPPER ] == MAP_RGBW )		2573195	0					
ANR	2573771	UnaryOperator	!		2573195	0					
ANR	2573772	EqualityExpression	upd -> choice [ C_MAPPER ] == MAP_RGBW		2573195	1		==			
ANR	2573773	ArrayIndexing	upd -> choice [ C_MAPPER ]		2573195	0					
ANR	2573774	PtrMemberAccess	upd -> choice		2573195	0					
ANR	2573775	Identifier	upd		2573195	0					
ANR	2573776	Identifier	choice		2573195	1					
ANR	2573777	Identifier	C_MAPPER		2573195	1					
ANR	2573778	Identifier	MAP_RGBW		2573195	1					
ANR	2573779	ExpressionStatement	rgbval ^= 0xffffff	4751:56:172108:172126	2573195	1	True				
ANR	2573780	AssignmentExpression	rgbval ^= 0xffffff		2573195	0		^=			
ANR	2573781	Identifier	rgbval		2573195	0					
ANR	2573782	PrimaryExpression	0xffffff		2573195	1					
ANR	2573783	ExpressionStatement	"putc ( ( rgbval >> rgb ) & 255 , out )"	4753:15:172144:172171	2573195	6	True				
ANR	2573784	CallExpression	"putc ( ( rgbval >> rgb ) & 255 , out )"		2573195	0					
ANR	2573785	Callee	putc		2573195	0					
ANR	2573786	Identifier	putc		2573195	0					
ANR	2573787	ArgumentList	( rgbval >> rgb ) & 255		2573195	1					
ANR	2573788	Argument	( rgbval >> rgb ) & 255		2573195	0					
ANR	2573789	BitAndExpression	( rgbval >> rgb ) & 255		2573195	0		&			
ANR	2573790	ShiftExpression	rgbval >> rgb		2573195	0		>>			
ANR	2573791	Identifier	rgbval		2573195	0					
ANR	2573792	Identifier	rgb		2573195	1					
ANR	2573793	PrimaryExpression	255		2573195	1					
ANR	2573794	Argument	out		2573195	1					
ANR	2573795	Identifier	out		2573195	0					
ANR	2573796	ExpressionStatement	"memset ( upd -> outbuf , 0 , upd -> noutbuf )"	4758:3:172214:172248	2573195	1	True				
ANR	2573797	CallExpression	"memset ( upd -> outbuf , 0 , upd -> noutbuf )"		2573195	0					
ANR	2573798	Callee	memset		2573195	0					
ANR	2573799	Identifier	memset		2573195	0					
ANR	2573800	ArgumentList	upd -> outbuf		2573195	1					
ANR	2573801	Argument	upd -> outbuf		2573195	0					
ANR	2573802	PtrMemberAccess	upd -> outbuf		2573195	0					
ANR	2573803	Identifier	upd		2573195	0					
ANR	2573804	Identifier	outbuf		2573195	1					
ANR	2573805	Argument	0		2573195	1					
ANR	2573806	PrimaryExpression	0		2573195	0					
ANR	2573807	Argument	upd -> noutbuf		2573195	2					
ANR	2573808	PtrMemberAccess	upd -> noutbuf		2573195	0					
ANR	2573809	Identifier	upd		2573195	0					
ANR	2573810	Identifier	noutbuf		2573195	1					
ANR	2573811	ReturnStatement	return 0 ;	4760:3:172254:172262	2573195	2	True				
ANR	2573812	PrimaryExpression	0		2573195	0					
ANR	2573813	ReturnType	static int		2573195	1					
ANR	2573814	Identifier	upd_start_rascomp		2573195	2					
ANR	2573815	ParameterList	"upd_p upd , FILE * out"		2573195	3					
ANR	2573816	Parameter	upd_p upd	4662:18:169594:169602	2573195	0	True				
ANR	2573817	ParameterType	upd_p		2573195	0					
ANR	2573818	Identifier	upd		2573195	1					
ANR	2573819	Parameter	FILE * out	4662:29:169605:169613	2573195	1	True				
ANR	2573820	ParameterType	FILE *		2573195	0					
ANR	2573821	Identifier	out		2573195	1					
ANR	2573822	CFGEntryNode	ENTRY		2573195		True				
ANR	2573823	CFGExitNode	EXIT		2573195		True				
ANR	2573824	Symbol	C_MAPPER		2573195						
ANR	2573825	Symbol	upd -> pheight		2573195						
ANR	2573826	Symbol	upd -> strings [ S_BEGIN ] . size		2573195						
ANR	2573827	Symbol	* S_BEGIN		2573195						
ANR	2573828	Symbol	upd -> strings		2573195						
ANR	2573829	Symbol	* upd -> cmap		2573195						
ANR	2573830	Symbol	upd -> cmap [ 1 ] . comp		2573195						
ANR	2573831	Symbol	rgb		2573195						
ANR	2573832	Symbol	upd -> ncomp		2573195						
ANR	2573833	Symbol	out		2573195						
ANR	2573834	Symbol	upd -> cmap		2573195						
ANR	2573835	Symbol	* upd -> choice		2573195						
ANR	2573836	Symbol	xval		2573195						
ANR	2573837	Symbol	* upd		2573195						
ANR	2573838	Symbol	upd -> cmap [ 1 ] . rise		2573195						
ANR	2573839	Symbol	rgbval		2573195						
ANR	2573840	Symbol	* comp		2573195						
ANR	2573841	Symbol	upd -> cmap [ 3 ] . rise		2573195						
ANR	2573842	Symbol	S_BEGIN		2573195						
ANR	2573843	Symbol	* upd -> valptr		2573195						
ANR	2573844	Symbol	* upd -> strings		2573195						
ANR	2573845	Symbol	upd -> valptr		2573195						
ANR	2573846	Symbol	val		2573195						
ANR	2573847	Symbol	comp		2573195						
ANR	2573848	Symbol	upd -> cmap [ rgb ] . comp		2573195						
ANR	2573849	Symbol	* C_MAPPER		2573195						
ANR	2573850	Symbol	upd -> cmap [ 3 ] . comp		2573195						
ANR	2573851	Symbol	upd		2573195						
ANR	2573852	Symbol	upd -> cmap [ comp -> cmap ] . rise		2573195						
ANR	2573853	Symbol	upd -> choice		2573195						
ANR	2573854	Symbol	upd -> cmap [ 0 ] . comp		2573195						
ANR	2573855	Symbol	* * comp		2573195						
ANR	2573856	Symbol	entry		2573195						
ANR	2573857	Symbol	upd -> cmap [ 2 ] . comp		2573195						
ANR	2573858	Symbol	upd -> noutbuf		2573195						
ANR	2573859	Symbol	upd -> cmap [ rgb ] . rise		2573195						
ANR	2573860	Symbol	* rgb		2573195						
ANR	2573861	Symbol	comp -> cmap		2573195						
ANR	2573862	Symbol	MAP_RGBW		2573195						
ANR	2573863	Symbol	upd -> outbuf		2573195						
ANR	2573864	Symbol	* * upd		2573195						
ANR	2573865	Symbol	upd -> pwidth		2573195						
ANR	2573866	Symbol	upd -> cmap [ 2 ] . rise		2573195						
ANR	2573867	Symbol	* comp -> cmap		2573195						
ANR	2573868	Function	upd_rascomp	4766:0:172489:173564							
ANR	2573869	FunctionDef	"upd_rascomp (upd_p upd , FILE * out)"		2573868	0					
ANR	2573870	CompoundStatement		4767:34:172534:173564	2573868	0					
ANR	2573871	IdentifierDeclStatement	updscan_p scan = upd -> scnbuf [ upd -> yscan & upd -> scnmsk ] ;	4768:3:172539:172593	2573868	0	True				
ANR	2573872	IdentifierDecl	scan = upd -> scnbuf [ upd -> yscan & upd -> scnmsk ]		2573868	0					
ANR	2573873	IdentifierDeclType	updscan_p		2573868	0					
ANR	2573874	Identifier	scan		2573868	1					
ANR	2573875	AssignmentExpression	scan = upd -> scnbuf [ upd -> yscan & upd -> scnmsk ]		2573868	2		=			
ANR	2573876	Identifier	scan		2573868	0					
ANR	2573877	ArrayIndexing	upd -> scnbuf [ upd -> yscan & upd -> scnmsk ]		2573868	1					
ANR	2573878	PtrMemberAccess	upd -> scnbuf		2573868	0					
ANR	2573879	Identifier	upd		2573868	0					
ANR	2573880	Identifier	scnbuf		2573868	1					
ANR	2573881	BitAndExpression	upd -> yscan & upd -> scnmsk		2573868	1		&			
ANR	2573882	PtrMemberAccess	upd -> yscan		2573868	0					
ANR	2573883	Identifier	upd		2573868	0					
ANR	2573884	Identifier	yscan		2573868	1					
ANR	2573885	PtrMemberAccess	upd -> scnmsk		2573868	1					
ANR	2573886	Identifier	upd		2573868	0					
ANR	2573887	Identifier	scnmsk		2573868	1					
ANR	2573888	IdentifierDeclStatement	uint bits = upd -> pwidth ;	4769:3:172598:172621	2573868	1	True				
ANR	2573889	IdentifierDecl	bits = upd -> pwidth		2573868	0					
ANR	2573890	IdentifierDeclType	uint		2573868	0					
ANR	2573891	Identifier	bits		2573868	1					
ANR	2573892	AssignmentExpression	bits = upd -> pwidth		2573868	2		=			
ANR	2573893	Identifier	bits		2573868	0					
ANR	2573894	PtrMemberAccess	upd -> pwidth		2573868	1					
ANR	2573895	Identifier	upd		2573868	0					
ANR	2573896	Identifier	pwidth		2573868	1					
ANR	2573897	IfStatement	if ( 1 == upd -> ncomp )		2573868	2					
ANR	2573898	Condition	1 == upd -> ncomp	4771:6:172630:172644	2573868	0	True				
ANR	2573899	EqualityExpression	1 == upd -> ncomp		2573868	0		==			
ANR	2573900	PrimaryExpression	1		2573868	0					
ANR	2573901	PtrMemberAccess	upd -> ncomp		2573868	1					
ANR	2573902	Identifier	upd		2573868	0					
ANR	2573903	Identifier	ncomp		2573868	1					
ANR	2573904	CompoundStatement		6:6:141:152	2573868	1					
ANR	2573905	IdentifierDeclStatement	uint nbytes ;	4772:6:172676:172687	2573868	0	True				
ANR	2573906	IdentifierDecl	nbytes		2573868	0					
ANR	2573907	IdentifierDeclType	uint		2573868	0					
ANR	2573908	Identifier	nbytes		2573868	1					
ANR	2573909	ExpressionStatement	nbytes = ( bits + 7 ) >> 3	4774:6:172696:172716	2573868	1	True				
ANR	2573910	AssignmentExpression	nbytes = ( bits + 7 ) >> 3		2573868	0		=			
ANR	2573911	Identifier	nbytes		2573868	0					
ANR	2573912	ShiftExpression	( bits + 7 ) >> 3		2573868	1		>>			
ANR	2573913	AdditiveExpression	bits + 7		2573868	0		+			
ANR	2573914	Identifier	bits		2573868	0					
ANR	2573915	PrimaryExpression	7		2573868	1					
ANR	2573916	PrimaryExpression	3		2573868	1					
ANR	2573917	ExpressionStatement	"memcpy ( upd -> outbuf , scan -> bytes , nbytes )"	4775:6:172724:172762	2573868	2	True				
ANR	2573918	CallExpression	"memcpy ( upd -> outbuf , scan -> bytes , nbytes )"		2573868	0					
ANR	2573919	Callee	memcpy		2573868	0					
ANR	2573920	Identifier	memcpy		2573868	0					
ANR	2573921	ArgumentList	upd -> outbuf		2573868	1					
ANR	2573922	Argument	upd -> outbuf		2573868	0					
ANR	2573923	PtrMemberAccess	upd -> outbuf		2573868	0					
ANR	2573924	Identifier	upd		2573868	0					
ANR	2573925	Identifier	outbuf		2573868	1					
ANR	2573926	Argument	scan -> bytes		2573868	1					
ANR	2573927	PtrMemberAccess	scan -> bytes		2573868	0					
ANR	2573928	Identifier	scan		2573868	0					
ANR	2573929	Identifier	bytes		2573868	1					
ANR	2573930	Argument	nbytes		2573868	2					
ANR	2573931	Identifier	nbytes		2573868	0					
ANR	2573932	IfStatement	if ( ( bits &= 7 ) )		2573868	3					
ANR	2573933	Condition	bits &= 7	4776:9:172773:172783	2573868	0	True				
ANR	2573934	AssignmentExpression	bits &= 7		2573868	0		&=			
ANR	2573935	Identifier	bits		2573868	0					
ANR	2573936	PrimaryExpression	7		2573868	1					
ANR	2573937	ExpressionStatement	upd -> outbuf [ nbytes - 1 ] &= ( ( byte ) 0xff ) << ( 8 - bits )	4776:22:172786:172836	2573868	1	True				
ANR	2573938	AssignmentExpression	upd -> outbuf [ nbytes - 1 ] &= ( ( byte ) 0xff ) << ( 8 - bits )		2573868	0		&=			
ANR	2573939	ArrayIndexing	upd -> outbuf [ nbytes - 1 ]		2573868	0					
ANR	2573940	PtrMemberAccess	upd -> outbuf		2573868	0					
ANR	2573941	Identifier	upd		2573868	0					
ANR	2573942	Identifier	outbuf		2573868	1					
ANR	2573943	AdditiveExpression	nbytes - 1		2573868	1		-			
ANR	2573944	Identifier	nbytes		2573868	0					
ANR	2573945	PrimaryExpression	1		2573868	1					
ANR	2573946	ShiftExpression	( ( byte ) 0xff ) << ( 8 - bits )		2573868	1		<<			
ANR	2573947	CastExpression	( byte ) 0xff		2573868	0					
ANR	2573948	CastTarget	byte		2573868	0					
ANR	2573949	PrimaryExpression	0xff		2573868	1					
ANR	2573950	AdditiveExpression	8 - bits		2573868	1		-			
ANR	2573951	PrimaryExpression	8		2573868	0					
ANR	2573952	Identifier	bits		2573868	1					
ANR	2573953	ElseStatement	else		2573868	0					
ANR	2573954	CompoundStatement		15:6:369:385	2573868	0					
ANR	2573955	IdentifierDeclStatement	"byte * buf = upd -> outbuf , bit = 0x80 ;"	4780:6:172858:172896	2573868	0	True				
ANR	2573956	IdentifierDecl	* buf = upd -> outbuf		2573868	0					
ANR	2573957	IdentifierDeclType	byte *		2573868	0					
ANR	2573958	Identifier	buf		2573868	1					
ANR	2573959	AssignmentExpression	* buf = upd -> outbuf		2573868	2		=			
ANR	2573960	Identifier	buf		2573868	0					
ANR	2573961	PtrMemberAccess	upd -> outbuf		2573868	1					
ANR	2573962	Identifier	upd		2573868	0					
ANR	2573963	Identifier	outbuf		2573868	1					
ANR	2573964	IdentifierDecl	bit = 0x80		2573868	1					
ANR	2573965	IdentifierDeclType	byte		2573868	0					
ANR	2573966	Identifier	bit		2573868	1					
ANR	2573967	AssignmentExpression	bit = 0x80		2573868	2		=			
ANR	2573968	Identifier	bit		2573868	0					
ANR	2573969	PrimaryExpression	0x80		2573868	1					
ANR	2573970	IdentifierDeclStatement	int ibyte = 0 ;	4781:6:172904:172920	2573868	1	True				
ANR	2573971	IdentifierDecl	ibyte = 0		2573868	0					
ANR	2573972	IdentifierDeclType	int		2573868	0					
ANR	2573973	Identifier	ibyte		2573868	1					
ANR	2573974	AssignmentExpression	ibyte = 0		2573868	2		=			
ANR	2573975	Identifier	ibyte		2573868	0					
ANR	2573976	PrimaryExpression	0		2573868	1					
ANR	2573977	WhileStatement	while ( 0 < bits -- )		2573868	2					
ANR	2573978	Condition	0 < bits --	4783:12:172935:172944	2573868	0	True				
ANR	2573979	RelationalExpression	0 < bits --		2573868	0		<			
ANR	2573980	PrimaryExpression	0		2573868	0					
ANR	2573981	PostIncDecOperationExpression	bits --		2573868	1					
ANR	2573982	Identifier	bits		2573868	0					
ANR	2573983	IncDec	--		2573868	1					
ANR	2573984	CompoundStatement		18:9:423:435	2573868	1					
ANR	2573985	IdentifierDeclStatement	byte val = 0 ;	4784:9:172958:172970	2573868	0	True				
ANR	2573986	IdentifierDecl	val = 0		2573868	0					
ANR	2573987	IdentifierDeclType	byte		2573868	0					
ANR	2573988	Identifier	val		2573868	1					
ANR	2573989	AssignmentExpression	val = 0		2573868	2		=			
ANR	2573990	Identifier	val		2573868	0					
ANR	2573991	PrimaryExpression	0		2573868	1					
ANR	2573992	SwitchStatement	switch ( upd -> ncomp )		2573868	1					
ANR	2573993	Condition	upd -> ncomp	4785:16:172988:172997	2573868	0	True				
ANR	2573994	PtrMemberAccess	upd -> ncomp		2573868	0					
ANR	2573995	Identifier	upd		2573868	0					
ANR	2573996	Identifier	ncomp		2573868	1					
ANR	2573997	CompoundStatement		19:28:465:465	2573868	1					
ANR	2573998	Label	case 4 :	4786:12:173035:173041	2573868	0	True				
ANR	2573999	IfStatement	if ( scan [ 3 ] . bytes [ ibyte ] & bit )		2573868	1					
ANR	2574000	Condition	scan [ 3 ] . bytes [ ibyte ] & bit	4786:24:173047:173072	2573868	0	True				
ANR	2574001	BitAndExpression	scan [ 3 ] . bytes [ ibyte ] & bit		2573868	0		&			
ANR	2574002	ArrayIndexing	scan [ 3 ] . bytes [ ibyte ]		2573868	0					
ANR	2574003	MemberAccess	scan [ 3 ] . bytes		2573868	0					
ANR	2574004	ArrayIndexing	scan [ 3 ]		2573868	0					
ANR	2574005	Identifier	scan		2573868	0					
ANR	2574006	PrimaryExpression	3		2573868	1					
ANR	2574007	Identifier	bytes		2573868	1					
ANR	2574008	Identifier	ibyte		2573868	1					
ANR	2574009	Identifier	bit		2573868	1					
ANR	2574010	ExpressionStatement	val |= 8	4786:52:173075:173083	2573868	1	True				
ANR	2574011	AssignmentExpression	val |= 8		2573868	0		|=			
ANR	2574012	Identifier	val		2573868	0					
ANR	2574013	PrimaryExpression	8		2573868	1					
ANR	2574014	Label	case 3 :	4788:12:173136:173142	2573868	2	True				
ANR	2574015	IfStatement	if ( scan [ 2 ] . bytes [ ibyte ] & bit )		2573868	3					
ANR	2574016	Condition	scan [ 2 ] . bytes [ ibyte ] & bit	4788:24:173148:173173	2573868	0	True				
ANR	2574017	BitAndExpression	scan [ 2 ] . bytes [ ibyte ] & bit		2573868	0		&			
ANR	2574018	ArrayIndexing	scan [ 2 ] . bytes [ ibyte ]		2573868	0					
ANR	2574019	MemberAccess	scan [ 2 ] . bytes		2573868	0					
ANR	2574020	ArrayIndexing	scan [ 2 ]		2573868	0					
ANR	2574021	Identifier	scan		2573868	0					
ANR	2574022	PrimaryExpression	2		2573868	1					
ANR	2574023	Identifier	bytes		2573868	1					
ANR	2574024	Identifier	ibyte		2573868	1					
ANR	2574025	Identifier	bit		2573868	1					
ANR	2574026	ExpressionStatement	val |= 4	4788:52:173176:173184	2573868	1	True				
ANR	2574027	AssignmentExpression	val |= 4		2573868	0		|=			
ANR	2574028	Identifier	val		2573868	0					
ANR	2574029	PrimaryExpression	4		2573868	1					
ANR	2574030	IfStatement	if ( scan [ 1 ] . bytes [ ibyte ] & bit )		2573868	4					
ANR	2574031	Condition	scan [ 1 ] . bytes [ ibyte ] & bit	4789:24:173210:173235	2573868	0	True				
ANR	2574032	BitAndExpression	scan [ 1 ] . bytes [ ibyte ] & bit		2573868	0		&			
ANR	2574033	ArrayIndexing	scan [ 1 ] . bytes [ ibyte ]		2573868	0					
ANR	2574034	MemberAccess	scan [ 1 ] . bytes		2573868	0					
ANR	2574035	ArrayIndexing	scan [ 1 ]		2573868	0					
ANR	2574036	Identifier	scan		2573868	0					
ANR	2574037	PrimaryExpression	1		2573868	1					
ANR	2574038	Identifier	bytes		2573868	1					
ANR	2574039	Identifier	ibyte		2573868	1					
ANR	2574040	Identifier	bit		2573868	1					
ANR	2574041	ExpressionStatement	val |= 2	4789:52:173238:173246	2573868	1	True				
ANR	2574042	AssignmentExpression	val |= 2		2573868	0		|=			
ANR	2574043	Identifier	val		2573868	0					
ANR	2574044	PrimaryExpression	2		2573868	1					
ANR	2574045	Label	case 1 :	4791:12:173299:173305	2573868	5	True				
ANR	2574046	IfStatement	if ( scan [ 0 ] . bytes [ ibyte ] & bit )		2573868	6					
ANR	2574047	Condition	scan [ 0 ] . bytes [ ibyte ] & bit	4791:24:173311:173336	2573868	0	True				
ANR	2574048	BitAndExpression	scan [ 0 ] . bytes [ ibyte ] & bit		2573868	0		&			
ANR	2574049	ArrayIndexing	scan [ 0 ] . bytes [ ibyte ]		2573868	0					
ANR	2574050	MemberAccess	scan [ 0 ] . bytes		2573868	0					
ANR	2574051	ArrayIndexing	scan [ 0 ]		2573868	0					
ANR	2574052	Identifier	scan		2573868	0					
ANR	2574053	PrimaryExpression	0		2573868	1					
ANR	2574054	Identifier	bytes		2573868	1					
ANR	2574055	Identifier	ibyte		2573868	1					
ANR	2574056	Identifier	bit		2573868	1					
ANR	2574057	ExpressionStatement	val |= 1	4791:52:173339:173347	2573868	1	True				
ANR	2574058	AssignmentExpression	val |= 1		2573868	0		|=			
ANR	2574059	Identifier	val		2573868	0					
ANR	2574060	PrimaryExpression	1		2573868	1					
ANR	2574061	ExpressionStatement	* buf ++ = val	4793:9:173369:173381	2573868	2	True				
ANR	2574062	AssignmentExpression	* buf ++ = val		2573868	0		=			
ANR	2574063	UnaryOperationExpression	* buf ++		2573868	0					
ANR	2574064	UnaryOperator	*		2573868	0					
ANR	2574065	PostIncDecOperationExpression	buf ++		2573868	1					
ANR	2574066	Identifier	buf		2573868	0					
ANR	2574067	IncDec	++		2573868	1					
ANR	2574068	Identifier	val		2573868	1					
ANR	2574069	IfStatement	if ( ! ( bit >>= 1 ) )		2573868	3					
ANR	2574070	Condition	! ( bit >>= 1 )	4794:12:173395:173406	2573868	0	True				
ANR	2574071	UnaryOperationExpression	! ( bit >>= 1 )		2573868	0					
ANR	2574072	UnaryOperator	!		2573868	0					
ANR	2574073	AssignmentExpression	bit >>= 1		2573868	1		>>=			
ANR	2574074	Identifier	bit		2573868	0					
ANR	2574075	PrimaryExpression	1		2573868	1					
ANR	2574076	CompoundStatement		28:26:874:874	2573868	1					
ANR	2574077	ExpressionStatement	bit = 0x80	4795:12:173423:173436	2573868	0	True				
ANR	2574078	AssignmentExpression	bit = 0x80		2573868	0		=			
ANR	2574079	Identifier	bit		2573868	0					
ANR	2574080	PrimaryExpression	0x80		2573868	1					
ANR	2574081	ExpressionStatement	ibyte += 1	4796:12:173450:173460	2573868	1	True				
ANR	2574082	AssignmentExpression	ibyte += 1		2573868	0		+=			
ANR	2574083	Identifier	ibyte		2573868	0					
ANR	2574084	PrimaryExpression	1		2573868	1					
ANR	2574085	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , upd -> noutbuf , out )"	4801:3:173490:173528	2573868	3	True				
ANR	2574086	CallExpression	"fwrite ( upd -> outbuf , 1 , upd -> noutbuf , out )"		2573868	0					
ANR	2574087	Callee	fwrite		2573868	0					
ANR	2574088	Identifier	fwrite		2573868	0					
ANR	2574089	ArgumentList	upd -> outbuf		2573868	1					
ANR	2574090	Argument	upd -> outbuf		2573868	0					
ANR	2574091	PtrMemberAccess	upd -> outbuf		2573868	0					
ANR	2574092	Identifier	upd		2573868	0					
ANR	2574093	Identifier	outbuf		2573868	1					
ANR	2574094	Argument	1		2573868	1					
ANR	2574095	PrimaryExpression	1		2573868	0					
ANR	2574096	Argument	upd -> noutbuf		2573868	2					
ANR	2574097	PtrMemberAccess	upd -> noutbuf		2573868	0					
ANR	2574098	Identifier	upd		2573868	0					
ANR	2574099	Identifier	noutbuf		2573868	1					
ANR	2574100	Argument	out		2573868	3					
ANR	2574101	Identifier	out		2573868	0					
ANR	2574102	ExpressionStatement	upd -> yscan += 1	4802:3:173533:173548	2573868	4	True				
ANR	2574103	AssignmentExpression	upd -> yscan += 1		2573868	0		+=			
ANR	2574104	PtrMemberAccess	upd -> yscan		2573868	0					
ANR	2574105	Identifier	upd		2573868	0					
ANR	2574106	Identifier	yscan		2573868	1					
ANR	2574107	PrimaryExpression	1		2573868	1					
ANR	2574108	ReturnStatement	return 0 ;	4804:3:173554:173562	2573868	5	True				
ANR	2574109	PrimaryExpression	0		2573868	0					
ANR	2574110	ReturnType	static int		2573868	1					
ANR	2574111	Identifier	upd_rascomp		2573868	2					
ANR	2574112	ParameterList	"upd_p upd , FILE * out"		2573868	3					
ANR	2574113	Parameter	upd_p upd	4767:12:172512:172520	2573868	0	True				
ANR	2574114	ParameterType	upd_p		2573868	0					
ANR	2574115	Identifier	upd		2573868	1					
ANR	2574116	Parameter	FILE * out	4767:23:172523:172531	2573868	1	True				
ANR	2574117	ParameterType	FILE *		2573868	0					
ANR	2574118	Identifier	out		2573868	1					
ANR	2574119	CFGEntryNode	ENTRY		2573868		True				
ANR	2574120	CFGExitNode	EXIT		2573868		True				
ANR	2574121	Symbol	* upd -> yscan		2573868						
ANR	2574122	Symbol	* scan [ 2 ] . bytes		2573868						
ANR	2574123	Symbol	ibyte		2573868						
ANR	2574124	Symbol	scan		2573868						
ANR	2574125	Symbol	scan [ 1 ] . bytes		2573868						
ANR	2574126	Symbol	bit		2573868						
ANR	2574127	Symbol	upd -> ncomp		2573868						
ANR	2574128	Symbol	out		2573868						
ANR	2574129	Symbol	upd -> yscan		2573868						
ANR	2574130	Symbol	* upd		2573868						
ANR	2574131	Symbol	* scan		2573868						
ANR	2574132	Symbol	scan [ 2 ] . bytes		2573868						
ANR	2574133	Symbol	* upd -> scnmsk		2573868						
ANR	2574134	Symbol	scan -> bytes		2573868						
ANR	2574135	Symbol	* scan [ 0 ] . bytes		2573868						
ANR	2574136	Symbol	val		2573868						
ANR	2574137	Symbol	* scan [ 3 ] . bytes		2573868						
ANR	2574138	Symbol	upd -> scnmsk		2573868						
ANR	2574139	Symbol	* upd -> scnbuf		2573868						
ANR	2574140	Symbol	upd		2573868						
ANR	2574141	Symbol	bits		2573868						
ANR	2574142	Symbol	* ibyte		2573868						
ANR	2574143	Symbol	scan [ 0 ] . bytes		2573868						
ANR	2574144	Symbol	nbytes		2573868						
ANR	2574145	Symbol	* buf ++		2573868						
ANR	2574146	Symbol	upd -> noutbuf		2573868						
ANR	2574147	Symbol	buf		2573868						
ANR	2574148	Symbol	upd -> scnbuf		2573868						
ANR	2574149	Symbol	* * scan		2573868						
ANR	2574150	Symbol	* nbytes		2573868						
ANR	2574151	Symbol	* upd -> outbuf		2573868						
ANR	2574152	Symbol	upd -> outbuf		2573868						
ANR	2574153	Symbol	* scan [ 1 ] . bytes		2573868						
ANR	2574154	Symbol	* * upd		2573868						
ANR	2574155	Symbol	upd -> pwidth		2573868						
ANR	2574156	Symbol	scan [ 3 ] . bytes		2573868						
ANR	2574157	Function	upd_open_wrtescp	4811:0:173790:178154							
ANR	2574158	FunctionDef	upd_open_wrtescp (upd_device * udev)		2574157	0					
ANR	2574159	CompoundStatement		4813:0:173836:178154	2574157	0					
ANR	2574160	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	4814:3:173841:173874	2574157	0	True				
ANR	2574161	IdentifierDecl	upd = udev -> upd		2574157	0					
ANR	2574162	IdentifierDeclType	const upd_p		2574157	0					
ANR	2574163	Identifier	upd		2574157	1					
ANR	2574164	AssignmentExpression	upd = udev -> upd		2574157	2		=			
ANR	2574165	Identifier	upd		2574157	0					
ANR	2574166	PtrMemberAccess	udev -> upd		2574157	1					
ANR	2574167	Identifier	udev		2574157	0					
ANR	2574168	Identifier	upd		2574157	1					
ANR	2574169	IdentifierDeclStatement	int error = 0 ;	4815:3:173879:173905	2574157	1	True				
ANR	2574170	IdentifierDecl	error = 0		2574157	0					
ANR	2574171	IdentifierDeclType	int		2574157	0					
ANR	2574172	Identifier	error		2574157	1					
ANR	2574173	AssignmentExpression	error = 0		2574157	2		=			
ANR	2574174	Identifier	error		2574157	0					
ANR	2574175	PrimaryExpression	0		2574157	1					
ANR	2574176	IfStatement	if ( ( B_PAGELENGTH & upd -> flags ) && ( 0 < upd -> strings [ S_BEGIN ] . size ) )		2574157	2					
ANR	2574177	Condition	( B_PAGELENGTH & upd -> flags ) && ( 0 < upd -> strings [ S_BEGIN ] . size )	4818:6:173957:174025	2574157	0	True				
ANR	2574178	AndExpression	( B_PAGELENGTH & upd -> flags ) && ( 0 < upd -> strings [ S_BEGIN ] . size )		2574157	0		&&			
ANR	2574179	BitAndExpression	B_PAGELENGTH & upd -> flags		2574157	0		&			
ANR	2574180	Identifier	B_PAGELENGTH		2574157	0					
ANR	2574181	PtrMemberAccess	upd -> flags		2574157	1					
ANR	2574182	Identifier	upd		2574157	0					
ANR	2574183	Identifier	flags		2574157	1					
ANR	2574184	RelationalExpression	0 < upd -> strings [ S_BEGIN ] . size		2574157	1		<			
ANR	2574185	PrimaryExpression	0		2574157	0					
ANR	2574186	MemberAccess	upd -> strings [ S_BEGIN ] . size		2574157	1					
ANR	2574187	ArrayIndexing	upd -> strings [ S_BEGIN ]		2574157	0					
ANR	2574188	PtrMemberAccess	upd -> strings		2574157	0					
ANR	2574189	Identifier	upd		2574157	0					
ANR	2574190	Identifier	strings		2574157	1					
ANR	2574191	Identifier	S_BEGIN		2574157	1					
ANR	2574192	Identifier	size		2574157	1					
ANR	2574193	CompoundStatement		9:5:250:306	2574157	1					
ANR	2574194	IdentifierDeclStatement	"int i , state = 0 , value = 0 ;"	4820:5:174053:174080	2574157	0	True				
ANR	2574195	IdentifierDecl	i		2574157	0					
ANR	2574196	IdentifierDeclType	int		2574157	0					
ANR	2574197	Identifier	i		2574157	1					
ANR	2574198	IdentifierDecl	state = 0		2574157	1					
ANR	2574199	IdentifierDeclType	int		2574157	0					
ANR	2574200	Identifier	state		2574157	1					
ANR	2574201	AssignmentExpression	state = 0		2574157	2		=			
ANR	2574202	Identifier	state		2574157	0					
ANR	2574203	PrimaryExpression	0		2574157	1					
ANR	2574204	IdentifierDecl	value = 0		2574157	2					
ANR	2574205	IdentifierDeclType	int		2574157	0					
ANR	2574206	Identifier	value		2574157	1					
ANR	2574207	AssignmentExpression	value = 0		2574157	2		=			
ANR	2574208	Identifier	value		2574157	0					
ANR	2574209	PrimaryExpression	0		2574157	1					
ANR	2574210	IdentifierDeclStatement	byte * bp = ( byte * ) upd_cast ( upd -> strings [ S_BEGIN ] . data ) ;	4821:5:174087:174143	2574157	1	True				
ANR	2574211	IdentifierDecl	* bp = ( byte * ) upd_cast ( upd -> strings [ S_BEGIN ] . data )		2574157	0					
ANR	2574212	IdentifierDeclType	byte *		2574157	0					
ANR	2574213	Identifier	bp		2574157	1					
ANR	2574214	AssignmentExpression	* bp = ( byte * ) upd_cast ( upd -> strings [ S_BEGIN ] . data )		2574157	2		=			
ANR	2574215	Identifier	bp		2574157	0					
ANR	2574216	CastExpression	( byte * ) upd_cast ( upd -> strings [ S_BEGIN ] . data )		2574157	1					
ANR	2574217	CastTarget	byte *		2574157	0					
ANR	2574218	CallExpression	upd_cast ( upd -> strings [ S_BEGIN ] . data )		2574157	1					
ANR	2574219	Callee	upd_cast		2574157	0					
ANR	2574220	Identifier	upd_cast		2574157	0					
ANR	2574221	ArgumentList	upd -> strings [ S_BEGIN ] . data		2574157	1					
ANR	2574222	Argument	upd -> strings [ S_BEGIN ] . data		2574157	0					
ANR	2574223	MemberAccess	upd -> strings [ S_BEGIN ] . data		2574157	0					
ANR	2574224	ArrayIndexing	upd -> strings [ S_BEGIN ]		2574157	0					
ANR	2574225	PtrMemberAccess	upd -> strings		2574157	0					
ANR	2574226	Identifier	upd		2574157	0					
ANR	2574227	Identifier	strings		2574157	1					
ANR	2574228	Identifier	S_BEGIN		2574157	1					
ANR	2574229	Identifier	data		2574157	1					
ANR	2574230	ForStatement	for ( i = 0 ; i < upd -> strings [ S_BEGIN ] . size ; ++ i )		2574157	2					
ANR	2574231	ForInit	i = 0 ;	4822:9:174154:174159	2574157	0	True				
ANR	2574232	AssignmentExpression	i = 0		2574157	0		=			
ANR	2574233	Identifier	i		2574157	0					
ANR	2574234	PrimaryExpression	0		2574157	1					
ANR	2574235	Condition	i < upd -> strings [ S_BEGIN ] . size	4822:16:174161:174190	2574157	1	True				
ANR	2574236	RelationalExpression	i < upd -> strings [ S_BEGIN ] . size		2574157	0		<			
ANR	2574237	Identifier	i		2574157	0					
ANR	2574238	MemberAccess	upd -> strings [ S_BEGIN ] . size		2574157	1					
ANR	2574239	ArrayIndexing	upd -> strings [ S_BEGIN ]		2574157	0					
ANR	2574240	PtrMemberAccess	upd -> strings		2574157	0					
ANR	2574241	Identifier	upd		2574157	0					
ANR	2574242	Identifier	strings		2574157	1					
ANR	2574243	Identifier	S_BEGIN		2574157	1					
ANR	2574244	Identifier	size		2574157	1					
ANR	2574245	UnaryExpression	++ i	4822:48:174193:174195	2574157	2	True				
ANR	2574246	IncDec	++		2574157	0					
ANR	2574247	Identifier	i		2574157	1					
ANR	2574248	CompoundStatement		10:53:361:361	2574157	3					
ANR	2574249	SwitchStatement	switch ( state )		2574157	0					
ANR	2574250	Condition	state	4823:15:174215:174219	2574157	0	True				
ANR	2574251	Identifier	state		2574157	0					
ANR	2574252	CompoundStatement		11:22:385:385	2574157	1					
ANR	2574253	Label	case 0 :	4824:11:174235:174242	2574157	0	True				
ANR	2574254	IfStatement	if ( 0x1b == bp [ i ] )		2574157	1					
ANR	2574255	Condition	0x1b == bp [ i ]	4825:17:174261:174273	2574157	0	True				
ANR	2574256	EqualityExpression	0x1b == bp [ i ]		2574157	0		==			
ANR	2574257	PrimaryExpression	0x1b		2574157	0					
ANR	2574258	ArrayIndexing	bp [ i ]		2574157	1					
ANR	2574259	Identifier	bp		2574157	0					
ANR	2574260	Identifier	i		2574157	1					
ANR	2574261	ExpressionStatement	state = 1	4825:32:174276:174285	2574157	1	True				
ANR	2574262	AssignmentExpression	state = 1		2574157	0		=			
ANR	2574263	Identifier	state		2574157	0					
ANR	2574264	PrimaryExpression	1		2574157	1					
ANR	2574265	BreakStatement	break ;	4826:11:174298:174303	2574157	2	True				
ANR	2574266	Label	case 1 :	4827:11:174316:174323	2574157	3	True				
ANR	2574267	IfStatement	if ( 'C' == bp [ i ] )		2574157	4					
ANR	2574268	Condition	'C' == bp [ i ]	4828:17:174342:174354	2574157	0	True				
ANR	2574269	EqualityExpression	'C' == bp [ i ]		2574157	0		==			
ANR	2574270	PrimaryExpression	'C'		2574157	0					
ANR	2574271	ArrayIndexing	bp [ i ]		2574157	1					
ANR	2574272	Identifier	bp		2574157	0					
ANR	2574273	Identifier	i		2574157	1					
ANR	2574274	ExpressionStatement	state = 2	4828:32:174357:174366	2574157	1	True				
ANR	2574275	AssignmentExpression	state = 2		2574157	0		=			
ANR	2574276	Identifier	state		2574157	0					
ANR	2574277	PrimaryExpression	2		2574157	1					
ANR	2574278	ElseStatement	else		2574157	0					
ANR	2574279	ExpressionStatement	state = 0	4829:32:174400:174409	2574157	0	True				
ANR	2574280	AssignmentExpression	state = 0		2574157	0		=			
ANR	2574281	Identifier	state		2574157	0					
ANR	2574282	PrimaryExpression	0		2574157	1					
ANR	2574283	BreakStatement	break ;	4830:11:174422:174427	2574157	5	True				
ANR	2574284	Label	case 2 :	4831:11:174440:174447	2574157	6	True				
ANR	2574285	IfStatement	if ( bp [ i ] )		2574157	7					
ANR	2574286	Condition	bp [ i ]	4832:17:174466:174470	2574157	0	True				
ANR	2574287	ArrayIndexing	bp [ i ]		2574157	0					
ANR	2574288	Identifier	bp		2574157	0					
ANR	2574289	Identifier	i		2574157	1					
ANR	2574290	CompoundStatement		20:24:636:636	2574157	1					
ANR	2574291	ExpressionStatement	value = ( int ) ( 0.5 + udev -> height * ( float ) bp [ i ] / udev -> y_pixels_per_inch )	4833:17:174492:174598	2574157	0	True				
ANR	2574292	AssignmentExpression	value = ( int ) ( 0.5 + udev -> height * ( float ) bp [ i ] / udev -> y_pixels_per_inch )		2574157	0		=			
ANR	2574293	Identifier	value		2574157	0					
ANR	2574294	CastExpression	( int ) ( 0.5 + udev -> height * ( float ) bp [ i ] / udev -> y_pixels_per_inch )		2574157	1					
ANR	2574295	CastTarget	int		2574157	0					
ANR	2574296	AdditiveExpression	0.5 + udev -> height * ( float ) bp [ i ] / udev -> y_pixels_per_inch		2574157	1		+			
ANR	2574297	PrimaryExpression	0.5		2574157	0					
ANR	2574298	MultiplicativeExpression	udev -> height * ( float ) bp [ i ] / udev -> y_pixels_per_inch		2574157	1		*			
ANR	2574299	PtrMemberAccess	udev -> height		2574157	0					
ANR	2574300	Identifier	udev		2574157	0					
ANR	2574301	Identifier	height		2574157	1					
ANR	2574302	MultiplicativeExpression	( float ) bp [ i ] / udev -> y_pixels_per_inch		2574157	1		/			
ANR	2574303	CastExpression	( float ) bp [ i ]		2574157	0					
ANR	2574304	CastTarget	float		2574157	0					
ANR	2574305	ArrayIndexing	bp [ i ]		2574157	1					
ANR	2574306	Identifier	bp		2574157	0					
ANR	2574307	Identifier	i		2574157	1					
ANR	2574308	PtrMemberAccess	udev -> y_pixels_per_inch		2574157	1					
ANR	2574309	Identifier	udev		2574157	0					
ANR	2574310	Identifier	y_pixels_per_inch		2574157	1					
ANR	2574311	IfStatement	if ( 0 >= value )		2574157	1					
ANR	2574312	Condition	0 >= value	4835:27:174627:174636	2574157	0	True				
ANR	2574313	RelationalExpression	0 >= value		2574157	0		>=			
ANR	2574314	PrimaryExpression	0		2574157	0					
ANR	2574315	Identifier	value		2574157	1					
ANR	2574316	ExpressionStatement	bp [ i ] = 1	4835:39:174639:174648	2574157	1	True				
ANR	2574317	AssignmentExpression	bp [ i ] = 1		2574157	0		=			
ANR	2574318	ArrayIndexing	bp [ i ]		2574157	0					
ANR	2574319	Identifier	bp		2574157	0					
ANR	2574320	Identifier	i		2574157	1					
ANR	2574321	PrimaryExpression	1		2574157	1					
ANR	2574322	ElseStatement	else		2574157	0					
ANR	2574323	IfStatement	if ( 128 > value )		2574157	0					
ANR	2574324	Condition	128 > value	4836:25:174675:174686	2574157	0	True				
ANR	2574325	RelationalExpression	128 > value		2574157	0		>			
ANR	2574326	PrimaryExpression	128		2574157	0					
ANR	2574327	Identifier	value		2574157	1					
ANR	2574328	ExpressionStatement	bp [ i ] = value	4836:39:174689:174702	2574157	1	True				
ANR	2574329	AssignmentExpression	bp [ i ] = value		2574157	0		=			
ANR	2574330	ArrayIndexing	bp [ i ]		2574157	0					
ANR	2574331	Identifier	bp		2574157	0					
ANR	2574332	Identifier	i		2574157	1					
ANR	2574333	Identifier	value		2574157	1					
ANR	2574334	ElseStatement	else		2574157	0					
ANR	2574335	ExpressionStatement	bp [ i ] = 127	4837:39:174743:174754	2574157	0	True				
ANR	2574336	AssignmentExpression	bp [ i ] = 127		2574157	0		=			
ANR	2574337	ArrayIndexing	bp [ i ]		2574157	0					
ANR	2574338	Identifier	bp		2574157	0					
ANR	2574339	Identifier	i		2574157	1					
ANR	2574340	PrimaryExpression	127		2574157	1					
ANR	2574341	ExpressionStatement	state = 0	4838:17:174773:174782	2574157	2	True				
ANR	2574342	AssignmentExpression	state = 0		2574157	0		=			
ANR	2574343	Identifier	state		2574157	0					
ANR	2574344	PrimaryExpression	0		2574157	1					
ANR	2574345	ElseStatement	else		2574157	0					
ANR	2574346	CompoundStatement		27:21:968:968	2574157	0					
ANR	2574347	ExpressionStatement	state = 3	4840:17:174824:174833	2574157	0	True				
ANR	2574348	AssignmentExpression	state = 3		2574157	0		=			
ANR	2574349	Identifier	state		2574157	0					
ANR	2574350	PrimaryExpression	3		2574157	1					
ANR	2574351	BreakStatement	break ;	4842:11:174862:174867	2574157	8	True				
ANR	2574352	Label	case 3 :	4843:11:174880:174887	2574157	9	True				
ANR	2574353	ExpressionStatement	value = ( int ) ( 0.5 + udev -> height / udev -> y_pixels_per_inch )	4844:14:174903:174962	2574157	10	True				
ANR	2574354	AssignmentExpression	value = ( int ) ( 0.5 + udev -> height / udev -> y_pixels_per_inch )		2574157	0		=			
ANR	2574355	Identifier	value		2574157	0					
ANR	2574356	CastExpression	( int ) ( 0.5 + udev -> height / udev -> y_pixels_per_inch )		2574157	1					
ANR	2574357	CastTarget	int		2574157	0					
ANR	2574358	AdditiveExpression	0.5 + udev -> height / udev -> y_pixels_per_inch		2574157	1		+			
ANR	2574359	PrimaryExpression	0.5		2574157	0					
ANR	2574360	MultiplicativeExpression	udev -> height / udev -> y_pixels_per_inch		2574157	1		/			
ANR	2574361	PtrMemberAccess	udev -> height		2574157	0					
ANR	2574362	Identifier	udev		2574157	0					
ANR	2574363	Identifier	height		2574157	1					
ANR	2574364	PtrMemberAccess	udev -> y_pixels_per_inch		2574157	1					
ANR	2574365	Identifier	udev		2574157	0					
ANR	2574366	Identifier	y_pixels_per_inch		2574157	1					
ANR	2574367	IfStatement	if ( 0 >= value )		2574157	11					
ANR	2574368	Condition	0 >= value	4845:24:174988:174997	2574157	0	True				
ANR	2574369	RelationalExpression	0 >= value		2574157	0		>=			
ANR	2574370	PrimaryExpression	0		2574157	0					
ANR	2574371	Identifier	value		2574157	1					
ANR	2574372	ExpressionStatement	bp [ i ] = 1	4845:36:175000:175009	2574157	1	True				
ANR	2574373	AssignmentExpression	bp [ i ] = 1		2574157	0		=			
ANR	2574374	ArrayIndexing	bp [ i ]		2574157	0					
ANR	2574375	Identifier	bp		2574157	0					
ANR	2574376	Identifier	i		2574157	1					
ANR	2574377	PrimaryExpression	1		2574157	1					
ANR	2574378	ElseStatement	else		2574157	0					
ANR	2574379	IfStatement	if ( 22 > value )		2574157	0					
ANR	2574380	Condition	22 > value	4846:23:175034:175044	2574157	0	True				
ANR	2574381	RelationalExpression	22 > value		2574157	0		>			
ANR	2574382	PrimaryExpression	22		2574157	0					
ANR	2574383	Identifier	value		2574157	1					
ANR	2574384	ExpressionStatement	bp [ i ] = value	4846:36:175047:175060	2574157	1	True				
ANR	2574385	AssignmentExpression	bp [ i ] = value		2574157	0		=			
ANR	2574386	ArrayIndexing	bp [ i ]		2574157	0					
ANR	2574387	Identifier	bp		2574157	0					
ANR	2574388	Identifier	i		2574157	1					
ANR	2574389	Identifier	value		2574157	1					
ANR	2574390	ElseStatement	else		2574157	0					
ANR	2574391	ExpressionStatement	bp [ i ] = 22	4847:36:175098:175108	2574157	0	True				
ANR	2574392	AssignmentExpression	bp [ i ] = 22		2574157	0		=			
ANR	2574393	ArrayIndexing	bp [ i ]		2574157	0					
ANR	2574394	Identifier	bp		2574157	0					
ANR	2574395	Identifier	i		2574157	1					
ANR	2574396	PrimaryExpression	22		2574157	1					
ANR	2574397	ExpressionStatement	state = 0	4848:14:175124:175133	2574157	12	True				
ANR	2574398	AssignmentExpression	state = 0		2574157	0		=			
ANR	2574399	Identifier	state		2574157	0					
ANR	2574400	PrimaryExpression	0		2574157	1					
ANR	2574401	BreakStatement	break ;	4849:11:175146:175151	2574157	13	True				
ANR	2574402	IfStatement	if ( ( 0 == upd -> strings [ S_SETLF ] . size ) && ( 0 == upd -> strings [ S_YMOVE ] . size ) )		2574157	3					
ANR	2574403	Condition	( 0 == upd -> strings [ S_SETLF ] . size ) && ( 0 == upd -> strings [ S_YMOVE ] . size )	4855:6:175276:175351	2574157	0	True				
ANR	2574404	AndExpression	( 0 == upd -> strings [ S_SETLF ] . size ) && ( 0 == upd -> strings [ S_YMOVE ] . size )		2574157	0		&&			
ANR	2574405	EqualityExpression	0 == upd -> strings [ S_SETLF ] . size		2574157	0		==			
ANR	2574406	PrimaryExpression	0		2574157	0					
ANR	2574407	MemberAccess	upd -> strings [ S_SETLF ] . size		2574157	1					
ANR	2574408	ArrayIndexing	upd -> strings [ S_SETLF ]		2574157	0					
ANR	2574409	PtrMemberAccess	upd -> strings		2574157	0					
ANR	2574410	Identifier	upd		2574157	0					
ANR	2574411	Identifier	strings		2574157	1					
ANR	2574412	Identifier	S_SETLF		2574157	1					
ANR	2574413	Identifier	size		2574157	1					
ANR	2574414	EqualityExpression	0 == upd -> strings [ S_YMOVE ] . size		2574157	1		==			
ANR	2574415	PrimaryExpression	0		2574157	0					
ANR	2574416	MemberAccess	upd -> strings [ S_YMOVE ] . size		2574157	1					
ANR	2574417	ArrayIndexing	upd -> strings [ S_YMOVE ]		2574157	0					
ANR	2574418	PtrMemberAccess	upd -> strings		2574157	0					
ANR	2574419	Identifier	upd		2574157	0					
ANR	2574420	Identifier	strings		2574157	1					
ANR	2574421	Identifier	S_YMOVE		2574157	1					
ANR	2574422	Identifier	size		2574157	1					
ANR	2574423	CompoundStatement		44:44:1520:1520	2574157	1					
ANR	2574424	ExpressionStatement	"errprintf ( udev -> memory , ""ESC/P-Open: Either SETLF- or YMOVE-Command must be present\\n"" )"	4858:6:175398:175493	2574157	0	True				
ANR	2574425	CallExpression	"errprintf ( udev -> memory , ""ESC/P-Open: Either SETLF- or YMOVE-Command must be present\\n"" )"		2574157	0					
ANR	2574426	Callee	errprintf		2574157	0					
ANR	2574427	Identifier	errprintf		2574157	0					
ANR	2574428	ArgumentList	udev -> memory		2574157	1					
ANR	2574429	Argument	udev -> memory		2574157	0					
ANR	2574430	PtrMemberAccess	udev -> memory		2574157	0					
ANR	2574431	Identifier	udev		2574157	0					
ANR	2574432	Identifier	memory		2574157	1					
ANR	2574433	Argument	"""ESC/P-Open: Either SETLF- or YMOVE-Command must be present\\n"""		2574157	1					
ANR	2574434	PrimaryExpression	"""ESC/P-Open: Either SETLF- or YMOVE-Command must be present\\n"""		2574157	0					
ANR	2574435	ExpressionStatement	error = - 1	4861:6:175508:175518	2574157	1	True				
ANR	2574436	AssignmentExpression	error = - 1		2574157	0		=			
ANR	2574437	Identifier	error		2574157	0					
ANR	2574438	UnaryOperationExpression	- 1		2574157	1					
ANR	2574439	UnaryOperator	-		2574157	0					
ANR	2574440	PrimaryExpression	1		2574157	1					
ANR	2574441	IfStatement	if ( ( ( 1 < upd -> ints [ I_XSTEP ] ) && ( 0 == upd -> strings [ S_XSTEP ] . size ) ) || ( ( 1 < upd -> ints [ I_NXPASS ] ) && ( 0 == upd -> strings [ S_XMOVE ] . size ) && ( 0 == upd -> strings [ S_XSTEP ] . size ) ) )		2574157	4					
ANR	2574442	Condition	( ( 1 < upd -> ints [ I_XSTEP ] ) && ( 0 == upd -> strings [ S_XSTEP ] . size ) ) || ( ( 1 < upd -> ints [ I_NXPASS ] ) && ( 0 == upd -> strings [ S_XMOVE ] . size ) && ( 0 == upd -> strings [ S_XSTEP ] . size ) )	4865:6:175569:175786	2574157	0	True				
ANR	2574443	OrExpression	( ( 1 < upd -> ints [ I_XSTEP ] ) && ( 0 == upd -> strings [ S_XSTEP ] . size ) ) || ( ( 1 < upd -> ints [ I_NXPASS ] ) && ( 0 == upd -> strings [ S_XMOVE ] . size ) && ( 0 == upd -> strings [ S_XSTEP ] . size ) )		2574157	0		||			
ANR	2574444	AndExpression	( 1 < upd -> ints [ I_XSTEP ] ) && ( 0 == upd -> strings [ S_XSTEP ] . size )		2574157	0		&&			
ANR	2574445	RelationalExpression	1 < upd -> ints [ I_XSTEP ]		2574157	0		<			
ANR	2574446	PrimaryExpression	1		2574157	0					
ANR	2574447	ArrayIndexing	upd -> ints [ I_XSTEP ]		2574157	1					
ANR	2574448	PtrMemberAccess	upd -> ints		2574157	0					
ANR	2574449	Identifier	upd		2574157	0					
ANR	2574450	Identifier	ints		2574157	1					
ANR	2574451	Identifier	I_XSTEP		2574157	1					
ANR	2574452	EqualityExpression	0 == upd -> strings [ S_XSTEP ] . size		2574157	1		==			
ANR	2574453	PrimaryExpression	0		2574157	0					
ANR	2574454	MemberAccess	upd -> strings [ S_XSTEP ] . size		2574157	1					
ANR	2574455	ArrayIndexing	upd -> strings [ S_XSTEP ]		2574157	0					
ANR	2574456	PtrMemberAccess	upd -> strings		2574157	0					
ANR	2574457	Identifier	upd		2574157	0					
ANR	2574458	Identifier	strings		2574157	1					
ANR	2574459	Identifier	S_XSTEP		2574157	1					
ANR	2574460	Identifier	size		2574157	1					
ANR	2574461	AndExpression	( 1 < upd -> ints [ I_NXPASS ] ) && ( 0 == upd -> strings [ S_XMOVE ] . size ) && ( 0 == upd -> strings [ S_XSTEP ] . size )		2574157	1		&&			
ANR	2574462	RelationalExpression	1 < upd -> ints [ I_NXPASS ]		2574157	0		<			
ANR	2574463	PrimaryExpression	1		2574157	0					
ANR	2574464	ArrayIndexing	upd -> ints [ I_NXPASS ]		2574157	1					
ANR	2574465	PtrMemberAccess	upd -> ints		2574157	0					
ANR	2574466	Identifier	upd		2574157	0					
ANR	2574467	Identifier	ints		2574157	1					
ANR	2574468	Identifier	I_NXPASS		2574157	1					
ANR	2574469	AndExpression	( 0 == upd -> strings [ S_XMOVE ] . size ) && ( 0 == upd -> strings [ S_XSTEP ] . size )		2574157	1		&&			
ANR	2574470	EqualityExpression	0 == upd -> strings [ S_XMOVE ] . size		2574157	0		==			
ANR	2574471	PrimaryExpression	0		2574157	0					
ANR	2574472	MemberAccess	upd -> strings [ S_XMOVE ] . size		2574157	1					
ANR	2574473	ArrayIndexing	upd -> strings [ S_XMOVE ]		2574157	0					
ANR	2574474	PtrMemberAccess	upd -> strings		2574157	0					
ANR	2574475	Identifier	upd		2574157	0					
ANR	2574476	Identifier	strings		2574157	1					
ANR	2574477	Identifier	S_XMOVE		2574157	1					
ANR	2574478	Identifier	size		2574157	1					
ANR	2574479	EqualityExpression	0 == upd -> strings [ S_XSTEP ] . size		2574157	1		==			
ANR	2574480	PrimaryExpression	0		2574157	0					
ANR	2574481	MemberAccess	upd -> strings [ S_XSTEP ] . size		2574157	1					
ANR	2574482	ArrayIndexing	upd -> strings [ S_XSTEP ]		2574157	0					
ANR	2574483	PtrMemberAccess	upd -> strings		2574157	0					
ANR	2574484	Identifier	upd		2574157	0					
ANR	2574485	Identifier	strings		2574157	1					
ANR	2574486	Identifier	S_XSTEP		2574157	1					
ANR	2574487	Identifier	size		2574157	1					
ANR	2574488	CompoundStatement		57:49:1955:1955	2574157	1					
ANR	2574489	ExpressionStatement	"errprintf ( udev -> memory , ""ESC/P-Open: Missing XSTEP- and/or XMOVE-Command\\n"" )"	4871:6:175833:175918	2574157	0	True				
ANR	2574490	CallExpression	"errprintf ( udev -> memory , ""ESC/P-Open: Missing XSTEP- and/or XMOVE-Command\\n"" )"		2574157	0					
ANR	2574491	Callee	errprintf		2574157	0					
ANR	2574492	Identifier	errprintf		2574157	0					
ANR	2574493	ArgumentList	udev -> memory		2574157	1					
ANR	2574494	Argument	udev -> memory		2574157	0					
ANR	2574495	PtrMemberAccess	udev -> memory		2574157	0					
ANR	2574496	Identifier	udev		2574157	0					
ANR	2574497	Identifier	memory		2574157	1					
ANR	2574498	Argument	"""ESC/P-Open: Missing XSTEP- and/or XMOVE-Command\\n"""		2574157	1					
ANR	2574499	PrimaryExpression	"""ESC/P-Open: Missing XSTEP- and/or XMOVE-Command\\n"""		2574157	0					
ANR	2574500	ExpressionStatement	error = - 1	4874:6:175933:175943	2574157	1	True				
ANR	2574501	AssignmentExpression	error = - 1		2574157	0		=			
ANR	2574502	Identifier	error		2574157	0					
ANR	2574503	UnaryOperationExpression	- 1		2574157	1					
ANR	2574504	UnaryOperator	-		2574157	0					
ANR	2574505	PrimaryExpression	1		2574157	1					
ANR	2574506	IfStatement	if ( upd -> ncomp > upd -> string_a [ SA_WRITECOMP ] . size )		2574157	5					
ANR	2574507	Condition	upd -> ncomp > upd -> string_a [ SA_WRITECOMP ] . size	4878:6:175991:176035	2574157	0	True				
ANR	2574508	RelationalExpression	upd -> ncomp > upd -> string_a [ SA_WRITECOMP ] . size		2574157	0		>			
ANR	2574509	PtrMemberAccess	upd -> ncomp		2574157	0					
ANR	2574510	Identifier	upd		2574157	0					
ANR	2574511	Identifier	ncomp		2574157	1					
ANR	2574512	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . size		2574157	1					
ANR	2574513	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2574157	0					
ANR	2574514	PtrMemberAccess	upd -> string_a		2574157	0					
ANR	2574515	Identifier	upd		2574157	0					
ANR	2574516	Identifier	string_a		2574157	1					
ANR	2574517	Identifier	SA_WRITECOMP		2574157	1					
ANR	2574518	Identifier	size		2574157	1					
ANR	2574519	CompoundStatement		66:53:2201:2201	2574157	1					
ANR	2574520	ExpressionStatement	"errprintf ( udev -> memory , ""ESC/P-Open: WRITECOMP-Commands must be given\\n"" )"	4880:6:176100:176182	2574157	0	True				
ANR	2574521	CallExpression	"errprintf ( udev -> memory , ""ESC/P-Open: WRITECOMP-Commands must be given\\n"" )"		2574157	0					
ANR	2574522	Callee	errprintf		2574157	0					
ANR	2574523	Identifier	errprintf		2574157	0					
ANR	2574524	ArgumentList	udev -> memory		2574157	1					
ANR	2574525	Argument	udev -> memory		2574157	0					
ANR	2574526	PtrMemberAccess	udev -> memory		2574157	0					
ANR	2574527	Identifier	udev		2574157	0					
ANR	2574528	Identifier	memory		2574157	1					
ANR	2574529	Argument	"""ESC/P-Open: WRITECOMP-Commands must be given\\n"""		2574157	1					
ANR	2574530	PrimaryExpression	"""ESC/P-Open: WRITECOMP-Commands must be given\\n"""		2574157	0					
ANR	2574531	ExpressionStatement	error = - 1	4883:6:176197:176207	2574157	1	True				
ANR	2574532	AssignmentExpression	error = - 1		2574157	0		=			
ANR	2574533	Identifier	error		2574157	0					
ANR	2574534	UnaryOperationExpression	- 1		2574157	1					
ANR	2574535	UnaryOperator	-		2574157	0					
ANR	2574536	PrimaryExpression	1		2574157	1					
ANR	2574537	IfStatement	if ( 0 <= error )		2574157	6					
ANR	2574538	Condition	0 <= error	4895:6:176419:176428	2574157	0	True				
ANR	2574539	RelationalExpression	0 <= error		2574157	0		<=			
ANR	2574540	PrimaryExpression	0		2574157	0					
ANR	2574541	Identifier	error		2574157	1					
ANR	2574542	CompoundStatement		84:6:2602:2624	2574157	1					
ANR	2574543	IdentifierDeclStatement	"int32_t i , noutbuf , need ;"	4896:6:176439:176461	2574157	0	True				
ANR	2574544	IdentifierDecl	i		2574157	0					
ANR	2574545	IdentifierDeclType	int32_t		2574157	0					
ANR	2574546	Identifier	i		2574157	1					
ANR	2574547	IdentifierDecl	noutbuf		2574157	1					
ANR	2574548	IdentifierDeclType	int32_t		2574157	0					
ANR	2574549	Identifier	noutbuf		2574157	1					
ANR	2574550	IdentifierDecl	need		2574157	2					
ANR	2574551	IdentifierDeclType	int32_t		2574157	0					
ANR	2574552	Identifier	need		2574157	1					
ANR	2574553	IfStatement	if ( 0 < upd -> strings [ S_YMOVE ] . size )		2574157	1					
ANR	2574554	Condition	0 < upd -> strings [ S_YMOVE ] . size	4898:9:176473:176502	2574157	0	True				
ANR	2574555	RelationalExpression	0 < upd -> strings [ S_YMOVE ] . size		2574157	0		<			
ANR	2574556	PrimaryExpression	0		2574157	0					
ANR	2574557	MemberAccess	upd -> strings [ S_YMOVE ] . size		2574157	1					
ANR	2574558	ArrayIndexing	upd -> strings [ S_YMOVE ]		2574157	0					
ANR	2574559	PtrMemberAccess	upd -> strings		2574157	0					
ANR	2574560	Identifier	upd		2574157	0					
ANR	2574561	Identifier	strings		2574157	1					
ANR	2574562	Identifier	S_YMOVE		2574157	1					
ANR	2574563	Identifier	size		2574157	1					
ANR	2574564	CompoundStatement		86:41:2668:2668	2574157	1					
ANR	2574565	ExpressionStatement	noutbuf = upd -> strings [ S_YMOVE ] . size + 2	4899:9:176516:176556	2574157	0	True				
ANR	2574566	AssignmentExpression	noutbuf = upd -> strings [ S_YMOVE ] . size + 2		2574157	0		=			
ANR	2574567	Identifier	noutbuf		2574157	0					
ANR	2574568	AdditiveExpression	upd -> strings [ S_YMOVE ] . size + 2		2574157	1		+			
ANR	2574569	MemberAccess	upd -> strings [ S_YMOVE ] . size		2574157	0					
ANR	2574570	ArrayIndexing	upd -> strings [ S_YMOVE ]		2574157	0					
ANR	2574571	PtrMemberAccess	upd -> strings		2574157	0					
ANR	2574572	Identifier	upd		2574157	0					
ANR	2574573	Identifier	strings		2574157	1					
ANR	2574574	Identifier	S_YMOVE		2574157	1					
ANR	2574575	Identifier	size		2574157	1					
ANR	2574576	PrimaryExpression	2		2574157	1					
ANR	2574577	ElseStatement	else		2574157	0					
ANR	2574578	CompoundStatement		89:9:2745:2768	2574157	0					
ANR	2574579	IdentifierDeclStatement	int nmax = upd -> pheight ;	4901:9:176582:176605	2574157	0	True				
ANR	2574580	IdentifierDecl	nmax = upd -> pheight		2574157	0					
ANR	2574581	IdentifierDeclType	int		2574157	0					
ANR	2574582	Identifier	nmax		2574157	1					
ANR	2574583	AssignmentExpression	nmax = upd -> pheight		2574157	2		=			
ANR	2574584	Identifier	nmax		2574157	0					
ANR	2574585	PtrMemberAccess	upd -> pheight		2574157	1					
ANR	2574586	Identifier	upd		2574157	0					
ANR	2574587	Identifier	pheight		2574157	1					
ANR	2574588	IfStatement	if ( 1 < upd -> ints [ I_YSTEP ] )		2574157	1					
ANR	2574589	Condition	1 < upd -> ints [ I_YSTEP ]	4902:18:176625:176646	2574157	0	True				
ANR	2574590	RelationalExpression	1 < upd -> ints [ I_YSTEP ]		2574157	0		<			
ANR	2574591	PrimaryExpression	1		2574157	0					
ANR	2574592	ArrayIndexing	upd -> ints [ I_YSTEP ]		2574157	1					
ANR	2574593	PtrMemberAccess	upd -> ints		2574157	0					
ANR	2574594	Identifier	upd		2574157	0					
ANR	2574595	Identifier	ints		2574157	1					
ANR	2574596	Identifier	I_YSTEP		2574157	1					
ANR	2574597	ExpressionStatement	nmax /= upd -> ints [ I_YSTEP ]	4902:42:176649:176676	2574157	1	True				
ANR	2574598	AssignmentExpression	nmax /= upd -> ints [ I_YSTEP ]		2574157	0		/=			
ANR	2574599	Identifier	nmax		2574157	0					
ANR	2574600	ArrayIndexing	upd -> ints [ I_YSTEP ]		2574157	1					
ANR	2574601	PtrMemberAccess	upd -> ints		2574157	0					
ANR	2574602	Identifier	upd		2574157	0					
ANR	2574603	Identifier	ints		2574157	1					
ANR	2574604	Identifier	I_YSTEP		2574157	1					
ANR	2574605	ElseStatement	else		2574157	0					
ANR	2574606	IfStatement	if ( - 1 > upd -> ints [ I_YSTEP ] )		2574157	0					
ANR	2574607	Condition	- 1 > upd -> ints [ I_YSTEP ]	4903:17:176695:176717	2574157	0	True				
ANR	2574608	RelationalExpression	- 1 > upd -> ints [ I_YSTEP ]		2574157	0		>			
ANR	2574609	UnaryOperationExpression	- 1		2574157	0					
ANR	2574610	UnaryOperator	-		2574157	0					
ANR	2574611	PrimaryExpression	1		2574157	1					
ANR	2574612	ArrayIndexing	upd -> ints [ I_YSTEP ]		2574157	1					
ANR	2574613	PtrMemberAccess	upd -> ints		2574157	0					
ANR	2574614	Identifier	upd		2574157	0					
ANR	2574615	Identifier	ints		2574157	1					
ANR	2574616	Identifier	I_YSTEP		2574157	1					
ANR	2574617	ExpressionStatement	nmax *= - upd -> ints [ I_YSTEP ]	4903:42:176720:176747	2574157	1	True				
ANR	2574618	AssignmentExpression	nmax *= - upd -> ints [ I_YSTEP ]		2574157	0		*=			
ANR	2574619	Identifier	nmax		2574157	0					
ANR	2574620	UnaryOperationExpression	- upd -> ints [ I_YSTEP ]		2574157	1					
ANR	2574621	UnaryOperator	-		2574157	0					
ANR	2574622	ArrayIndexing	upd -> ints [ I_YSTEP ]		2574157	1					
ANR	2574623	PtrMemberAccess	upd -> ints		2574157	0					
ANR	2574624	Identifier	upd		2574157	0					
ANR	2574625	Identifier	ints		2574157	1					
ANR	2574626	Identifier	I_YSTEP		2574157	1					
ANR	2574627	ExpressionStatement	noutbuf = 2 * upd -> strings [ S_SETLF ] . size + 2	4904:9:176758:176803	2574157	2	True				
ANR	2574628	AssignmentExpression	noutbuf = 2 * upd -> strings [ S_SETLF ] . size + 2		2574157	0		=			
ANR	2574629	Identifier	noutbuf		2574157	0					
ANR	2574630	AdditiveExpression	2 * upd -> strings [ S_SETLF ] . size + 2		2574157	1		+			
ANR	2574631	MultiplicativeExpression	2 * upd -> strings [ S_SETLF ] . size		2574157	0		*			
ANR	2574632	PrimaryExpression	2		2574157	0					
ANR	2574633	MemberAccess	upd -> strings [ S_SETLF ] . size		2574157	1					
ANR	2574634	ArrayIndexing	upd -> strings [ S_SETLF ]		2574157	0					
ANR	2574635	PtrMemberAccess	upd -> strings		2574157	0					
ANR	2574636	Identifier	upd		2574157	0					
ANR	2574637	Identifier	strings		2574157	1					
ANR	2574638	Identifier	S_SETLF		2574157	1					
ANR	2574639	Identifier	size		2574157	1					
ANR	2574640	PrimaryExpression	2		2574157	1					
ANR	2574641	ExpressionStatement	noutbuf += nmax / 255 + 1	4905:9:176814:176837	2574157	3	True				
ANR	2574642	AssignmentExpression	noutbuf += nmax / 255 + 1		2574157	0		+=			
ANR	2574643	Identifier	noutbuf		2574157	0					
ANR	2574644	AdditiveExpression	nmax / 255 + 1		2574157	1		+			
ANR	2574645	MultiplicativeExpression	nmax / 255		2574157	0		/			
ANR	2574646	Identifier	nmax		2574157	0					
ANR	2574647	PrimaryExpression	255		2574157	1					
ANR	2574648	PrimaryExpression	1		2574157	1					
ANR	2574649	IfStatement	if ( 1 < upd -> ints [ I_YSTEP ] )		2574157	2					
ANR	2574650	Condition	1 < upd -> ints [ I_YSTEP ]	4908:9:176857:176878	2574157	0	True				
ANR	2574651	RelationalExpression	1 < upd -> ints [ I_YSTEP ]		2574157	0		<			
ANR	2574652	PrimaryExpression	1		2574157	0					
ANR	2574653	ArrayIndexing	upd -> ints [ I_YSTEP ]		2574157	1					
ANR	2574654	PtrMemberAccess	upd -> ints		2574157	0					
ANR	2574655	Identifier	upd		2574157	0					
ANR	2574656	Identifier	ints		2574157	1					
ANR	2574657	Identifier	I_YSTEP		2574157	1					
ANR	2574658	ExpressionStatement	noutbuf += ( upd -> ints [ I_YSTEP ] - 1 ) * upd -> strings [ S_YSTEP ] . size	4909:9:176890:176952	2574157	1	True				
ANR	2574659	AssignmentExpression	noutbuf += ( upd -> ints [ I_YSTEP ] - 1 ) * upd -> strings [ S_YSTEP ] . size		2574157	0		+=			
ANR	2574660	Identifier	noutbuf		2574157	0					
ANR	2574661	MultiplicativeExpression	( upd -> ints [ I_YSTEP ] - 1 ) * upd -> strings [ S_YSTEP ] . size		2574157	1		*			
ANR	2574662	AdditiveExpression	upd -> ints [ I_YSTEP ] - 1		2574157	0		-			
ANR	2574663	ArrayIndexing	upd -> ints [ I_YSTEP ]		2574157	0					
ANR	2574664	PtrMemberAccess	upd -> ints		2574157	0					
ANR	2574665	Identifier	upd		2574157	0					
ANR	2574666	Identifier	ints		2574157	1					
ANR	2574667	Identifier	I_YSTEP		2574157	1					
ANR	2574668	PrimaryExpression	1		2574157	1					
ANR	2574669	MemberAccess	upd -> strings [ S_YSTEP ] . size		2574157	1					
ANR	2574670	ArrayIndexing	upd -> strings [ S_YSTEP ]		2574157	0					
ANR	2574671	PtrMemberAccess	upd -> strings		2574157	0					
ANR	2574672	Identifier	upd		2574157	0					
ANR	2574673	Identifier	strings		2574157	1					
ANR	2574674	Identifier	S_YSTEP		2574157	1					
ANR	2574675	Identifier	size		2574157	1					
ANR	2574676	ExpressionStatement	noutbuf += upd -> strings [ S_XMOVE ] . size + 2	4911:6:176961:177003	2574157	3	True				
ANR	2574677	AssignmentExpression	noutbuf += upd -> strings [ S_XMOVE ] . size + 2		2574157	0		+=			
ANR	2574678	Identifier	noutbuf		2574157	0					
ANR	2574679	AdditiveExpression	upd -> strings [ S_XMOVE ] . size + 2		2574157	1		+			
ANR	2574680	MemberAccess	upd -> strings [ S_XMOVE ] . size		2574157	0					
ANR	2574681	ArrayIndexing	upd -> strings [ S_XMOVE ]		2574157	0					
ANR	2574682	PtrMemberAccess	upd -> strings		2574157	0					
ANR	2574683	Identifier	upd		2574157	0					
ANR	2574684	Identifier	strings		2574157	1					
ANR	2574685	Identifier	S_XMOVE		2574157	1					
ANR	2574686	Identifier	size		2574157	1					
ANR	2574687	PrimaryExpression	2		2574157	1					
ANR	2574688	IfStatement	if ( 1 < upd -> ints [ I_XSTEP ] )		2574157	4					
ANR	2574689	Condition	1 < upd -> ints [ I_XSTEP ]	4913:9:177015:177036	2574157	0	True				
ANR	2574690	RelationalExpression	1 < upd -> ints [ I_XSTEP ]		2574157	0		<			
ANR	2574691	PrimaryExpression	1		2574157	0					
ANR	2574692	ArrayIndexing	upd -> ints [ I_XSTEP ]		2574157	1					
ANR	2574693	PtrMemberAccess	upd -> ints		2574157	0					
ANR	2574694	Identifier	upd		2574157	0					
ANR	2574695	Identifier	ints		2574157	1					
ANR	2574696	Identifier	I_XSTEP		2574157	1					
ANR	2574697	ExpressionStatement	noutbuf += ( upd -> ints [ I_XSTEP ] - 1 ) * upd -> strings [ S_XSTEP ] . size	4914:9:177048:177110	2574157	1	True				
ANR	2574698	AssignmentExpression	noutbuf += ( upd -> ints [ I_XSTEP ] - 1 ) * upd -> strings [ S_XSTEP ] . size		2574157	0		+=			
ANR	2574699	Identifier	noutbuf		2574157	0					
ANR	2574700	MultiplicativeExpression	( upd -> ints [ I_XSTEP ] - 1 ) * upd -> strings [ S_XSTEP ] . size		2574157	1		*			
ANR	2574701	AdditiveExpression	upd -> ints [ I_XSTEP ] - 1		2574157	0		-			
ANR	2574702	ArrayIndexing	upd -> ints [ I_XSTEP ]		2574157	0					
ANR	2574703	PtrMemberAccess	upd -> ints		2574157	0					
ANR	2574704	Identifier	upd		2574157	0					
ANR	2574705	Identifier	ints		2574157	1					
ANR	2574706	Identifier	I_XSTEP		2574157	1					
ANR	2574707	PrimaryExpression	1		2574157	1					
ANR	2574708	MemberAccess	upd -> strings [ S_XSTEP ] . size		2574157	1					
ANR	2574709	ArrayIndexing	upd -> strings [ S_XSTEP ]		2574157	0					
ANR	2574710	PtrMemberAccess	upd -> strings		2574157	0					
ANR	2574711	Identifier	upd		2574157	0					
ANR	2574712	Identifier	strings		2574157	1					
ANR	2574713	Identifier	S_XSTEP		2574157	1					
ANR	2574714	Identifier	size		2574157	1					
ANR	2574715	IfStatement	if ( 0 < upd -> string_a [ SA_SETCOMP ] . size )		2574157	5					
ANR	2574716	Condition	0 < upd -> string_a [ SA_SETCOMP ] . size	4916:9:177122:177155	2574157	0	True				
ANR	2574717	RelationalExpression	0 < upd -> string_a [ SA_SETCOMP ] . size		2574157	0		<			
ANR	2574718	PrimaryExpression	0		2574157	0					
ANR	2574719	MemberAccess	upd -> string_a [ SA_SETCOMP ] . size		2574157	1					
ANR	2574720	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2574157	0					
ANR	2574721	PtrMemberAccess	upd -> string_a		2574157	0					
ANR	2574722	Identifier	upd		2574157	0					
ANR	2574723	Identifier	string_a		2574157	1					
ANR	2574724	Identifier	SA_SETCOMP		2574157	1					
ANR	2574725	Identifier	size		2574157	1					
ANR	2574726	CompoundStatement		104:45:3321:3321	2574157	1					
ANR	2574727	ExpressionStatement	need = 0	4917:9:177169:177177	2574157	0	True				
ANR	2574728	AssignmentExpression	need = 0		2574157	0		=			
ANR	2574729	Identifier	need		2574157	0					
ANR	2574730	PrimaryExpression	0		2574157	1					
ANR	2574731	ForStatement	for ( i = 0 ; i < upd -> ocomp ; ++ i )		2574157	1					
ANR	2574732	ForInit	i = 0 ;	4918:13:177192:177197	2574157	0	True				
ANR	2574733	AssignmentExpression	i = 0		2574157	0		=			
ANR	2574734	Identifier	i		2574157	0					
ANR	2574735	PrimaryExpression	0		2574157	1					
ANR	2574736	Condition	i < upd -> ocomp	4918:20:177199:177212	2574157	1	True				
ANR	2574737	RelationalExpression	i < upd -> ocomp		2574157	0		<			
ANR	2574738	Identifier	i		2574157	0					
ANR	2574739	PtrMemberAccess	upd -> ocomp		2574157	1					
ANR	2574740	Identifier	upd		2574157	0					
ANR	2574741	Identifier	ocomp		2574157	1					
ANR	2574742	UnaryExpression	++ i	4918:36:177215:177217	2574157	2	True				
ANR	2574743	IncDec	++		2574157	0					
ANR	2574744	Identifier	i		2574157	1					
ANR	2574745	IfStatement	if ( need < upd -> string_a [ SA_SETCOMP ] . data [ i ] . size )		2574157	3					
ANR	2574746	Condition	need < upd -> string_a [ SA_SETCOMP ] . data [ i ] . size	4919:15:177235:177279	2574157	0	True				
ANR	2574747	RelationalExpression	need < upd -> string_a [ SA_SETCOMP ] . data [ i ] . size		2574157	0		<			
ANR	2574748	Identifier	need		2574157	0					
ANR	2574749	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ i ] . size		2574157	1					
ANR	2574750	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ i ]		2574157	0					
ANR	2574751	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		2574157	0					
ANR	2574752	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2574157	0					
ANR	2574753	PtrMemberAccess	upd -> string_a		2574157	0					
ANR	2574754	Identifier	upd		2574157	0					
ANR	2574755	Identifier	string_a		2574157	1					
ANR	2574756	Identifier	SA_SETCOMP		2574157	1					
ANR	2574757	Identifier	data		2574157	1					
ANR	2574758	Identifier	i		2574157	1					
ANR	2574759	Identifier	size		2574157	1					
ANR	2574760	ExpressionStatement	need = upd -> string_a [ SA_SETCOMP ] . data [ i ] . size	4920:15:177297:177342	2574157	1	True				
ANR	2574761	AssignmentExpression	need = upd -> string_a [ SA_SETCOMP ] . data [ i ] . size		2574157	0		=			
ANR	2574762	Identifier	need		2574157	0					
ANR	2574763	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ i ] . size		2574157	1					
ANR	2574764	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ i ]		2574157	0					
ANR	2574765	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		2574157	0					
ANR	2574766	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2574157	0					
ANR	2574767	PtrMemberAccess	upd -> string_a		2574157	0					
ANR	2574768	Identifier	upd		2574157	0					
ANR	2574769	Identifier	string_a		2574157	1					
ANR	2574770	Identifier	SA_SETCOMP		2574157	1					
ANR	2574771	Identifier	data		2574157	1					
ANR	2574772	Identifier	i		2574157	1					
ANR	2574773	Identifier	size		2574157	1					
ANR	2574774	ExpressionStatement	noutbuf += need	4921:9:177353:177368	2574157	2	True				
ANR	2574775	AssignmentExpression	noutbuf += need		2574157	0		+=			
ANR	2574776	Identifier	noutbuf		2574157	0					
ANR	2574777	Identifier	need		2574157	1					
ANR	2574778	ExpressionStatement	need = 0	4924:6:177385:177393	2574157	6	True				
ANR	2574779	AssignmentExpression	need = 0		2574157	0		=			
ANR	2574780	Identifier	need		2574157	0					
ANR	2574781	PrimaryExpression	0		2574157	1					
ANR	2574782	ForStatement	for ( i = 0 ; i < upd -> ocomp ; ++ i )		2574157	7					
ANR	2574783	ForInit	i = 0 ;	4925:10:177405:177410	2574157	0	True				
ANR	2574784	AssignmentExpression	i = 0		2574157	0		=			
ANR	2574785	Identifier	i		2574157	0					
ANR	2574786	PrimaryExpression	0		2574157	1					
ANR	2574787	Condition	i < upd -> ocomp	4925:17:177412:177425	2574157	1	True				
ANR	2574788	RelationalExpression	i < upd -> ocomp		2574157	0		<			
ANR	2574789	Identifier	i		2574157	0					
ANR	2574790	PtrMemberAccess	upd -> ocomp		2574157	1					
ANR	2574791	Identifier	upd		2574157	0					
ANR	2574792	Identifier	ocomp		2574157	1					
ANR	2574793	UnaryExpression	++ i	4925:33:177428:177430	2574157	2	True				
ANR	2574794	IncDec	++		2574157	0					
ANR	2574795	Identifier	i		2574157	1					
ANR	2574796	IfStatement	if ( need < upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size )		2574157	3					
ANR	2574797	Condition	need < upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size	4926:12:177445:177491	2574157	0	True				
ANR	2574798	RelationalExpression	need < upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size		2574157	0		<			
ANR	2574799	Identifier	need		2574157	0					
ANR	2574800	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size		2574157	1					
ANR	2574801	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ i ]		2574157	0					
ANR	2574802	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		2574157	0					
ANR	2574803	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2574157	0					
ANR	2574804	PtrMemberAccess	upd -> string_a		2574157	0					
ANR	2574805	Identifier	upd		2574157	0					
ANR	2574806	Identifier	string_a		2574157	1					
ANR	2574807	Identifier	SA_WRITECOMP		2574157	1					
ANR	2574808	Identifier	data		2574157	1					
ANR	2574809	Identifier	i		2574157	1					
ANR	2574810	Identifier	size		2574157	1					
ANR	2574811	ExpressionStatement	need = upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size	4927:12:177506:177553	2574157	1	True				
ANR	2574812	AssignmentExpression	need = upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size		2574157	0		=			
ANR	2574813	Identifier	need		2574157	0					
ANR	2574814	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size		2574157	1					
ANR	2574815	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ i ]		2574157	0					
ANR	2574816	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		2574157	0					
ANR	2574817	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2574157	0					
ANR	2574818	PtrMemberAccess	upd -> string_a		2574157	0					
ANR	2574819	Identifier	upd		2574157	0					
ANR	2574820	Identifier	string_a		2574157	1					
ANR	2574821	Identifier	SA_WRITECOMP		2574157	1					
ANR	2574822	Identifier	data		2574157	1					
ANR	2574823	Identifier	i		2574157	1					
ANR	2574824	Identifier	size		2574157	1					
ANR	2574825	ExpressionStatement	noutbuf += need + 2	4928:6:177561:177580	2574157	8	True				
ANR	2574826	AssignmentExpression	noutbuf += need + 2		2574157	0		+=			
ANR	2574827	Identifier	noutbuf		2574157	0					
ANR	2574828	AdditiveExpression	need + 2		2574157	1		+			
ANR	2574829	Identifier	need		2574157	0					
ANR	2574830	PrimaryExpression	2		2574157	1					
ANR	2574831	ExpressionStatement	noutbuf += ( ( upd -> ints [ I_PINS2WRITE ] + 7 ) / 8 ) * ( ( upd -> pwidth + upd -> ints [ I_NXPASS ] - 1 ) / upd -> ints [ I_NXPASS ] )	4930:6:177589:177714	2574157	9	True				
ANR	2574832	AssignmentExpression	noutbuf += ( ( upd -> ints [ I_PINS2WRITE ] + 7 ) / 8 ) * ( ( upd -> pwidth + upd -> ints [ I_NXPASS ] - 1 ) / upd -> ints [ I_NXPASS ] )		2574157	0		+=			
ANR	2574833	Identifier	noutbuf		2574157	0					
ANR	2574834	MultiplicativeExpression	( ( upd -> ints [ I_PINS2WRITE ] + 7 ) / 8 ) * ( ( upd -> pwidth + upd -> ints [ I_NXPASS ] - 1 ) / upd -> ints [ I_NXPASS ] )		2574157	1		*			
ANR	2574835	MultiplicativeExpression	( upd -> ints [ I_PINS2WRITE ] + 7 ) / 8		2574157	0		/			
ANR	2574836	AdditiveExpression	upd -> ints [ I_PINS2WRITE ] + 7		2574157	0		+			
ANR	2574837	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		2574157	0					
ANR	2574838	PtrMemberAccess	upd -> ints		2574157	0					
ANR	2574839	Identifier	upd		2574157	0					
ANR	2574840	Identifier	ints		2574157	1					
ANR	2574841	Identifier	I_PINS2WRITE		2574157	1					
ANR	2574842	PrimaryExpression	7		2574157	1					
ANR	2574843	PrimaryExpression	8		2574157	1					
ANR	2574844	MultiplicativeExpression	( upd -> pwidth + upd -> ints [ I_NXPASS ] - 1 ) / upd -> ints [ I_NXPASS ]		2574157	1		/			
ANR	2574845	AdditiveExpression	upd -> pwidth + upd -> ints [ I_NXPASS ] - 1		2574157	0		+			
ANR	2574846	PtrMemberAccess	upd -> pwidth		2574157	0					
ANR	2574847	Identifier	upd		2574157	0					
ANR	2574848	Identifier	pwidth		2574157	1					
ANR	2574849	AdditiveExpression	upd -> ints [ I_NXPASS ] - 1		2574157	1		-			
ANR	2574850	ArrayIndexing	upd -> ints [ I_NXPASS ]		2574157	0					
ANR	2574851	PtrMemberAccess	upd -> ints		2574157	0					
ANR	2574852	Identifier	upd		2574157	0					
ANR	2574853	Identifier	ints		2574157	1					
ANR	2574854	Identifier	I_NXPASS		2574157	1					
ANR	2574855	PrimaryExpression	1		2574157	1					
ANR	2574856	ArrayIndexing	upd -> ints [ I_NXPASS ]		2574157	1					
ANR	2574857	PtrMemberAccess	upd -> ints		2574157	0					
ANR	2574858	Identifier	upd		2574157	0					
ANR	2574859	Identifier	ints		2574157	1					
ANR	2574860	Identifier	I_NXPASS		2574157	1					
ANR	2574861	IfStatement	if ( noutbuf > 0 )		2574157	10					
ANR	2574862	Condition	noutbuf > 0	4933:9:177726:177736	2574157	0	True				
ANR	2574863	RelationalExpression	noutbuf > 0		2574157	0		>			
ANR	2574864	Identifier	noutbuf		2574157	0					
ANR	2574865	PrimaryExpression	0		2574157	1					
ANR	2574866	CompoundStatement		121:22:3902:3902	2574157	1					
ANR	2574867	ExpressionStatement	upd -> noutbuf = noutbuf	4934:9:177750:177777	2574157	0	True				
ANR	2574868	AssignmentExpression	upd -> noutbuf = noutbuf		2574157	0		=			
ANR	2574869	PtrMemberAccess	upd -> noutbuf		2574157	0					
ANR	2574870	Identifier	upd		2574157	0					
ANR	2574871	Identifier	noutbuf		2574157	1					
ANR	2574872	Identifier	noutbuf		2574157	1					
ANR	2574873	ExpressionStatement	upd -> writer = upd_wrtescp	4935:9:177788:177819	2574157	1	True				
ANR	2574874	AssignmentExpression	upd -> writer = upd_wrtescp		2574157	0		=			
ANR	2574875	PtrMemberAccess	upd -> writer		2574157	0					
ANR	2574876	Identifier	upd		2574157	0					
ANR	2574877	Identifier	writer		2574157	1					
ANR	2574878	Identifier	upd_wrtescp		2574157	1					
ANR	2574879	ExpressionStatement	upd -> nlimits = upd -> ints [ I_NXPASS ]	4936:9:177830:177869	2574157	2	True				
ANR	2574880	AssignmentExpression	upd -> nlimits = upd -> ints [ I_NXPASS ]		2574157	0		=			
ANR	2574881	PtrMemberAccess	upd -> nlimits		2574157	0					
ANR	2574882	Identifier	upd		2574157	0					
ANR	2574883	Identifier	nlimits		2574157	1					
ANR	2574884	ArrayIndexing	upd -> ints [ I_NXPASS ]		2574157	1					
ANR	2574885	PtrMemberAccess	upd -> ints		2574157	0					
ANR	2574886	Identifier	upd		2574157	0					
ANR	2574887	Identifier	ints		2574157	1					
ANR	2574888	Identifier	I_NXPASS		2574157	1					
ANR	2574889	ExpressionStatement	error = 1	4937:9:177880:177901	2574157	3	True				
ANR	2574890	AssignmentExpression	error = 1		2574157	0		=			
ANR	2574891	Identifier	error		2574157	0					
ANR	2574892	PrimaryExpression	1		2574157	1					
ANR	2574893	ElseStatement	else		2574157	0					
ANR	2574894	CompoundStatement		126:13:4079:4079	2574157	0					
ANR	2574895	ExpressionStatement	error = - 1	4939:9:177927:177937	2574157	0	True				
ANR	2574896	AssignmentExpression	error = - 1		2574157	0		=			
ANR	2574897	Identifier	error		2574157	0					
ANR	2574898	UnaryOperationExpression	- 1		2574157	1					
ANR	2574899	UnaryOperator	-		2574157	0					
ANR	2574900	PrimaryExpression	1		2574157	1					
ANR	2574901	ExpressionStatement	"errprintf ( udev -> memory , ""ESC/P-Open: %ld is unreasonable size of Outputbuffer\\n"" , ( long ) noutbuf )"	4941:12:177989:178114	2574157	1	True				
ANR	2574902	CallExpression	"errprintf ( udev -> memory , ""ESC/P-Open: %ld is unreasonable size of Outputbuffer\\n"" , ( long ) noutbuf )"		2574157	0					
ANR	2574903	Callee	errprintf		2574157	0					
ANR	2574904	Identifier	errprintf		2574157	0					
ANR	2574905	ArgumentList	udev -> memory		2574157	1					
ANR	2574906	Argument	udev -> memory		2574157	0					
ANR	2574907	PtrMemberAccess	udev -> memory		2574157	0					
ANR	2574908	Identifier	udev		2574157	0					
ANR	2574909	Identifier	memory		2574157	1					
ANR	2574910	Argument	"""ESC/P-Open: %ld is unreasonable size of Outputbuffer\\n"""		2574157	1					
ANR	2574911	PrimaryExpression	"""ESC/P-Open: %ld is unreasonable size of Outputbuffer\\n"""		2574157	0					
ANR	2574912	Argument	( long ) noutbuf		2574157	2					
ANR	2574913	CastExpression	( long ) noutbuf		2574157	0					
ANR	2574914	CastTarget	long		2574157	0					
ANR	2574915	Identifier	noutbuf		2574157	1					
ANR	2574916	ReturnStatement	return error ;	4948:3:178140:178152	2574157	7	True				
ANR	2574917	Identifier	error		2574157	0					
ANR	2574918	ReturnType	static int		2574157	1					
ANR	2574919	Identifier	upd_open_wrtescp		2574157	2					
ANR	2574920	ParameterList	upd_device * udev		2574157	3					
ANR	2574921	Parameter	upd_device * udev	4812:17:173818:173833	2574157	0	True				
ANR	2574922	ParameterType	upd_device *		2574157	0					
ANR	2574923	Identifier	udev		2574157	1					
ANR	2574924	CFGEntryNode	ENTRY		2574157		True				
ANR	2574925	CFGExitNode	EXIT		2574157		True				
ANR	2574926	Symbol	S_XMOVE		2574157						
ANR	2574927	Symbol	* upd -> string_a		2574157						
ANR	2574928	Symbol	I_PINS2WRITE		2574157						
ANR	2574929	Symbol	SA_SETCOMP		2574157						
ANR	2574930	Symbol	nmax		2574157						
ANR	2574931	Symbol	* S_SETLF		2574157						
ANR	2574932	Symbol	* I_YSTEP		2574157						
ANR	2574933	Symbol	upd -> strings [ S_YSTEP ] . size		2574157						
ANR	2574934	Symbol	* SA_SETCOMP		2574157						
ANR	2574935	Symbol	* I_NXPASS		2574157						
ANR	2574936	Symbol	* upd -> string_a [ SA_WRITECOMP ] . data		2574157						
ANR	2574937	Symbol	upd -> nlimits		2574157						
ANR	2574938	Symbol	* udev		2574157						
ANR	2574939	Symbol	* bp		2574157						
ANR	2574940	Symbol	upd -> string_a [ SA_SETCOMP ] . data [ i ] . size		2574157						
ANR	2574941	Symbol	S_BEGIN		2574157						
ANR	2574942	Symbol	* I_XSTEP		2574157						
ANR	2574943	Symbol	state		2574157						
ANR	2574944	Symbol	udev -> height		2574157						
ANR	2574945	Symbol	S_SETLF		2574157						
ANR	2574946	Symbol	upd_cast		2574157						
ANR	2574947	Symbol	need		2574157						
ANR	2574948	Symbol	upd -> string_a [ SA_SETCOMP ] . data		2574157						
ANR	2574949	Symbol	upd		2574157						
ANR	2574950	Symbol	* SA_WRITECOMP		2574157						
ANR	2574951	Symbol	SA_WRITECOMP		2574157						
ANR	2574952	Symbol	I_NXPASS		2574157						
ANR	2574953	Symbol	udev -> y_pixels_per_inch		2574157						
ANR	2574954	Symbol	noutbuf		2574157						
ANR	2574955	Symbol	* * SA_SETCOMP		2574157						
ANR	2574956	Symbol	udev		2574157						
ANR	2574957	Symbol	upd -> strings [ S_SETLF ] . size		2574157						
ANR	2574958	Symbol	upd -> ints		2574157						
ANR	2574959	Symbol	upd -> pwidth		2574157						
ANR	2574960	Symbol	upd -> pheight		2574157						
ANR	2574961	Symbol	upd -> strings [ S_BEGIN ] . size		2574157						
ANR	2574962	Symbol	* S_BEGIN		2574157						
ANR	2574963	Symbol	upd -> strings		2574157						
ANR	2574964	Symbol	error		2574157						
ANR	2574965	Symbol	upd -> strings [ S_XSTEP ] . size		2574157						
ANR	2574966	Symbol	bp		2574157						
ANR	2574967	Symbol	upd -> ncomp		2574157						
ANR	2574968	Symbol	upd -> flags		2574157						
ANR	2574969	Symbol	udev -> upd		2574157						
ANR	2574970	Symbol	* upd -> string_a [ SA_SETCOMP ] . data		2574157						
ANR	2574971	Symbol	* upd		2574157						
ANR	2574972	Symbol	* S_XMOVE		2574157						
ANR	2574973	Symbol	* * upd -> string_a		2574157						
ANR	2574974	Symbol	upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size		2574157						
ANR	2574975	Symbol	upd -> string_a [ SA_WRITECOMP ] . size		2574157						
ANR	2574976	Symbol	upd -> ocomp		2574157						
ANR	2574977	Symbol	value		2574157						
ANR	2574978	Symbol	* upd -> strings		2574157						
ANR	2574979	Symbol	* * SA_WRITECOMP		2574157						
ANR	2574980	Symbol	upd -> strings [ S_YMOVE ] . size		2574157						
ANR	2574981	Symbol	* S_XSTEP		2574157						
ANR	2574982	Symbol	* S_YMOVE		2574157						
ANR	2574983	Symbol	udev -> memory		2574157						
ANR	2574984	Symbol	upd -> strings [ S_XMOVE ] . size		2574157						
ANR	2574985	Symbol	* * * upd		2574157						
ANR	2574986	Symbol	i		2574157						
ANR	2574987	Symbol	I_XSTEP		2574157						
ANR	2574988	Symbol	upd_wrtescp		2574157						
ANR	2574989	Symbol	* S_YSTEP		2574157						
ANR	2574990	Symbol	upd -> string_a		2574157						
ANR	2574991	Symbol	upd -> noutbuf		2574157						
ANR	2574992	Symbol	upd -> strings [ S_BEGIN ] . data		2574157						
ANR	2574993	Symbol	B_PAGELENGTH		2574157						
ANR	2574994	Symbol	* i		2574157						
ANR	2574995	Symbol	* upd -> ints		2574157						
ANR	2574996	Symbol	* I_PINS2WRITE		2574157						
ANR	2574997	Symbol	S_YMOVE		2574157						
ANR	2574998	Symbol	upd -> string_a [ SA_SETCOMP ] . size		2574157						
ANR	2574999	Symbol	upd -> string_a [ SA_WRITECOMP ] . data		2574157						
ANR	2575000	Symbol	upd -> writer		2574157						
ANR	2575001	Symbol	S_YSTEP		2574157						
ANR	2575002	Symbol	S_XSTEP		2574157						
ANR	2575003	Symbol	* * upd		2574157						
ANR	2575004	Symbol	I_YSTEP		2574157						
ANR	2575005	Function	upd_wrtescp	4955:0:178380:187353							
ANR	2575006	FunctionDef	"upd_wrtescp (upd_p upd , FILE * out)"		2575005	0					
ANR	2575007	CompoundStatement		4957:0:178425:187353	2575005	0					
ANR	2575008	IdentifierDeclStatement	"int pinbot , pin , pintop , xbegin , x , xend , icomp , ybegin , yend , y , ioutbuf , n , ixpass ;"	4958:3:178430:178503	2575005	0	True				
ANR	2575009	IdentifierDecl	pinbot		2575005	0					
ANR	2575010	IdentifierDeclType	int		2575005	0					
ANR	2575011	Identifier	pinbot		2575005	1					
ANR	2575012	IdentifierDecl	pin		2575005	1					
ANR	2575013	IdentifierDeclType	int		2575005	0					
ANR	2575014	Identifier	pin		2575005	1					
ANR	2575015	IdentifierDecl	pintop		2575005	2					
ANR	2575016	IdentifierDeclType	int		2575005	0					
ANR	2575017	Identifier	pintop		2575005	1					
ANR	2575018	IdentifierDecl	xbegin		2575005	3					
ANR	2575019	IdentifierDeclType	int		2575005	0					
ANR	2575020	Identifier	xbegin		2575005	1					
ANR	2575021	IdentifierDecl	x		2575005	4					
ANR	2575022	IdentifierDeclType	int		2575005	0					
ANR	2575023	Identifier	x		2575005	1					
ANR	2575024	IdentifierDecl	xend		2575005	5					
ANR	2575025	IdentifierDeclType	int		2575005	0					
ANR	2575026	Identifier	xend		2575005	1					
ANR	2575027	IdentifierDecl	icomp		2575005	6					
ANR	2575028	IdentifierDeclType	int		2575005	0					
ANR	2575029	Identifier	icomp		2575005	1					
ANR	2575030	IdentifierDecl	ybegin		2575005	7					
ANR	2575031	IdentifierDeclType	int		2575005	0					
ANR	2575032	Identifier	ybegin		2575005	1					
ANR	2575033	IdentifierDecl	yend		2575005	8					
ANR	2575034	IdentifierDeclType	int		2575005	0					
ANR	2575035	Identifier	yend		2575005	1					
ANR	2575036	IdentifierDecl	y		2575005	9					
ANR	2575037	IdentifierDeclType	int		2575005	0					
ANR	2575038	Identifier	y		2575005	1					
ANR	2575039	IdentifierDecl	ioutbuf		2575005	10					
ANR	2575040	IdentifierDeclType	int		2575005	0					
ANR	2575041	Identifier	ioutbuf		2575005	1					
ANR	2575042	IdentifierDecl	n		2575005	11					
ANR	2575043	IdentifierDeclType	int		2575005	0					
ANR	2575044	Identifier	n		2575005	1					
ANR	2575045	IdentifierDecl	ixpass		2575005	12					
ANR	2575046	IdentifierDeclType	int		2575005	0					
ANR	2575047	Identifier	ixpass		2575005	1					
ANR	2575048	IdentifierDeclStatement	"byte * obytes , bit ;"	4959:3:178508:178524	2575005	1	True				
ANR	2575049	IdentifierDecl	* obytes		2575005	0					
ANR	2575050	IdentifierDeclType	byte *		2575005	0					
ANR	2575051	Identifier	obytes		2575005	1					
ANR	2575052	IdentifierDecl	bit		2575005	1					
ANR	2575053	IdentifierDeclType	byte		2575005	0					
ANR	2575054	Identifier	bit		2575005	1					
ANR	2575055	IdentifierDeclStatement	updscan_p scan ;	4960:3:178529:178543	2575005	2	True				
ANR	2575056	IdentifierDecl	scan		2575005	0					
ANR	2575057	IdentifierDeclType	updscan_p		2575005	0					
ANR	2575058	Identifier	scan		2575005	1					
ANR	2575059	IfStatement	if ( upd -> yscan < upd -> ints [ I_BEG_Y ] )		2575005	3					
ANR	2575060	Condition	upd -> yscan < upd -> ints [ I_BEG_Y ]	4964:6:178598:178628	2575005	0	True				
ANR	2575061	RelationalExpression	upd -> yscan < upd -> ints [ I_BEG_Y ]		2575005	0		<			
ANR	2575062	PtrMemberAccess	upd -> yscan		2575005	0					
ANR	2575063	Identifier	upd		2575005	0					
ANR	2575064	Identifier	yscan		2575005	1					
ANR	2575065	ArrayIndexing	upd -> ints [ I_BEG_Y ]		2575005	1					
ANR	2575066	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2575067	Identifier	upd		2575005	0					
ANR	2575068	Identifier	ints		2575005	1					
ANR	2575069	Identifier	I_BEG_Y		2575005	1					
ANR	2575070	CompoundStatement		8:39:205:205	2575005	1					
ANR	2575071	ExpressionStatement	ixpass = upd -> int_a [ IA_BEG_IX ] . data [ upd -> ipass ]	4965:6:178639:178686	2575005	0	True				
ANR	2575072	AssignmentExpression	ixpass = upd -> int_a [ IA_BEG_IX ] . data [ upd -> ipass ]		2575005	0		=			
ANR	2575073	Identifier	ixpass		2575005	0					
ANR	2575074	ArrayIndexing	upd -> int_a [ IA_BEG_IX ] . data [ upd -> ipass ]		2575005	1					
ANR	2575075	MemberAccess	upd -> int_a [ IA_BEG_IX ] . data		2575005	0					
ANR	2575076	ArrayIndexing	upd -> int_a [ IA_BEG_IX ]		2575005	0					
ANR	2575077	PtrMemberAccess	upd -> int_a		2575005	0					
ANR	2575078	Identifier	upd		2575005	0					
ANR	2575079	Identifier	int_a		2575005	1					
ANR	2575080	Identifier	IA_BEG_IX		2575005	1					
ANR	2575081	Identifier	data		2575005	1					
ANR	2575082	PtrMemberAccess	upd -> ipass		2575005	1					
ANR	2575083	Identifier	upd		2575005	0					
ANR	2575084	Identifier	ipass		2575005	1					
ANR	2575085	ExpressionStatement	pintop = 0	4966:6:178694:178704	2575005	1	True				
ANR	2575086	AssignmentExpression	pintop = 0		2575005	0		=			
ANR	2575087	Identifier	pintop		2575005	0					
ANR	2575088	PrimaryExpression	0		2575005	1					
ANR	2575089	ExpressionStatement	pinbot = upd -> int_a [ IA_BEGBOT ] . data [ upd -> ipass ]	4967:6:178712:178759	2575005	2	True				
ANR	2575090	AssignmentExpression	pinbot = upd -> int_a [ IA_BEGBOT ] . data [ upd -> ipass ]		2575005	0		=			
ANR	2575091	Identifier	pinbot		2575005	0					
ANR	2575092	ArrayIndexing	upd -> int_a [ IA_BEGBOT ] . data [ upd -> ipass ]		2575005	1					
ANR	2575093	MemberAccess	upd -> int_a [ IA_BEGBOT ] . data		2575005	0					
ANR	2575094	ArrayIndexing	upd -> int_a [ IA_BEGBOT ]		2575005	0					
ANR	2575095	PtrMemberAccess	upd -> int_a		2575005	0					
ANR	2575096	Identifier	upd		2575005	0					
ANR	2575097	Identifier	int_a		2575005	1					
ANR	2575098	Identifier	IA_BEGBOT		2575005	1					
ANR	2575099	Identifier	data		2575005	1					
ANR	2575100	PtrMemberAccess	upd -> ipass		2575005	1					
ANR	2575101	Identifier	upd		2575005	0					
ANR	2575102	Identifier	ipass		2575005	1					
ANR	2575103	ElseStatement	else		2575005	0					
ANR	2575104	IfStatement	if ( upd -> yscan >= upd -> ints [ I_END_Y ] )		2575005	0					
ANR	2575105	Condition	upd -> yscan >= upd -> ints [ I_END_Y ]	4968:13:178774:178805	2575005	0	True				
ANR	2575106	RelationalExpression	upd -> yscan >= upd -> ints [ I_END_Y ]		2575005	0		>=			
ANR	2575107	PtrMemberAccess	upd -> yscan		2575005	0					
ANR	2575108	Identifier	upd		2575005	0					
ANR	2575109	Identifier	yscan		2575005	1					
ANR	2575110	ArrayIndexing	upd -> ints [ I_END_Y ]		2575005	1					
ANR	2575111	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2575112	Identifier	upd		2575005	0					
ANR	2575113	Identifier	ints		2575005	1					
ANR	2575114	Identifier	I_END_Y		2575005	1					
ANR	2575115	CompoundStatement		12:47:382:382	2575005	1					
ANR	2575116	ExpressionStatement	ixpass = upd -> int_a [ IA_END_IX ] . data [ upd -> ipass ]	4969:6:178816:178863	2575005	0	True				
ANR	2575117	AssignmentExpression	ixpass = upd -> int_a [ IA_END_IX ] . data [ upd -> ipass ]		2575005	0		=			
ANR	2575118	Identifier	ixpass		2575005	0					
ANR	2575119	ArrayIndexing	upd -> int_a [ IA_END_IX ] . data [ upd -> ipass ]		2575005	1					
ANR	2575120	MemberAccess	upd -> int_a [ IA_END_IX ] . data		2575005	0					
ANR	2575121	ArrayIndexing	upd -> int_a [ IA_END_IX ]		2575005	0					
ANR	2575122	PtrMemberAccess	upd -> int_a		2575005	0					
ANR	2575123	Identifier	upd		2575005	0					
ANR	2575124	Identifier	int_a		2575005	1					
ANR	2575125	Identifier	IA_END_IX		2575005	1					
ANR	2575126	Identifier	data		2575005	1					
ANR	2575127	PtrMemberAccess	upd -> ipass		2575005	1					
ANR	2575128	Identifier	upd		2575005	0					
ANR	2575129	Identifier	ipass		2575005	1					
ANR	2575130	ExpressionStatement	pinbot = upd -> ints [ I_PINS2WRITE ]	4970:6:178871:178903	2575005	1	True				
ANR	2575131	AssignmentExpression	pinbot = upd -> ints [ I_PINS2WRITE ]		2575005	0		=			
ANR	2575132	Identifier	pinbot		2575005	0					
ANR	2575133	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		2575005	1					
ANR	2575134	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2575135	Identifier	upd		2575005	0					
ANR	2575136	Identifier	ints		2575005	1					
ANR	2575137	Identifier	I_PINS2WRITE		2575005	1					
ANR	2575138	ExpressionStatement	pintop = pinbot - upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]	4971:6:178911:178967	2575005	2	True				
ANR	2575139	AssignmentExpression	pintop = pinbot - upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]		2575005	0		=			
ANR	2575140	Identifier	pintop		2575005	0					
ANR	2575141	AdditiveExpression	pinbot - upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]		2575005	1		-			
ANR	2575142	Identifier	pinbot		2575005	0					
ANR	2575143	ArrayIndexing	upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]		2575005	1					
ANR	2575144	MemberAccess	upd -> int_a [ IA_ENDTOP ] . data		2575005	0					
ANR	2575145	ArrayIndexing	upd -> int_a [ IA_ENDTOP ]		2575005	0					
ANR	2575146	PtrMemberAccess	upd -> int_a		2575005	0					
ANR	2575147	Identifier	upd		2575005	0					
ANR	2575148	Identifier	int_a		2575005	1					
ANR	2575149	Identifier	IA_ENDTOP		2575005	1					
ANR	2575150	Identifier	data		2575005	1					
ANR	2575151	PtrMemberAccess	upd -> ipass		2575005	1					
ANR	2575152	Identifier	upd		2575005	0					
ANR	2575153	Identifier	ipass		2575005	1					
ANR	2575154	ElseStatement	else		2575005	0					
ANR	2575155	CompoundStatement		16:10:553:553	2575005	0					
ANR	2575156	ExpressionStatement	ixpass = upd -> int_a [ IA_STD_IX ] . data [ upd -> ipass ]	4973:6:178987:179034	2575005	0	True				
ANR	2575157	AssignmentExpression	ixpass = upd -> int_a [ IA_STD_IX ] . data [ upd -> ipass ]		2575005	0		=			
ANR	2575158	Identifier	ixpass		2575005	0					
ANR	2575159	ArrayIndexing	upd -> int_a [ IA_STD_IX ] . data [ upd -> ipass ]		2575005	1					
ANR	2575160	MemberAccess	upd -> int_a [ IA_STD_IX ] . data		2575005	0					
ANR	2575161	ArrayIndexing	upd -> int_a [ IA_STD_IX ]		2575005	0					
ANR	2575162	PtrMemberAccess	upd -> int_a		2575005	0					
ANR	2575163	Identifier	upd		2575005	0					
ANR	2575164	Identifier	int_a		2575005	1					
ANR	2575165	Identifier	IA_STD_IX		2575005	1					
ANR	2575166	Identifier	data		2575005	1					
ANR	2575167	PtrMemberAccess	upd -> ipass		2575005	1					
ANR	2575168	Identifier	upd		2575005	0					
ANR	2575169	Identifier	ipass		2575005	1					
ANR	2575170	ExpressionStatement	pintop = 0	4974:6:179042:179052	2575005	1	True				
ANR	2575171	AssignmentExpression	pintop = 0		2575005	0		=			
ANR	2575172	Identifier	pintop		2575005	0					
ANR	2575173	PrimaryExpression	0		2575005	1					
ANR	2575174	ExpressionStatement	pinbot = upd -> ints [ I_PINS2WRITE ]	4975:6:179060:179092	2575005	2	True				
ANR	2575175	AssignmentExpression	pinbot = upd -> ints [ I_PINS2WRITE ]		2575005	0		=			
ANR	2575176	Identifier	pinbot		2575005	0					
ANR	2575177	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		2575005	1					
ANR	2575178	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2575179	Identifier	upd		2575005	0					
ANR	2575180	Identifier	ints		2575005	1					
ANR	2575181	Identifier	I_PINS2WRITE		2575005	1					
ANR	2575182	ExpressionStatement	ybegin = pintop * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]	4978:3:179103:179177	2575005	4	True				
ANR	2575183	AssignmentExpression	ybegin = pintop * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		2575005	0		=			
ANR	2575184	Identifier	ybegin		2575005	0					
ANR	2575185	AdditiveExpression	pintop * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		2575005	1		+			
ANR	2575186	MultiplicativeExpression	pintop * upd -> ints [ I_NYPASS ]		2575005	0		*			
ANR	2575187	Identifier	pintop		2575005	0					
ANR	2575188	ArrayIndexing	upd -> ints [ I_NYPASS ]		2575005	1					
ANR	2575189	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2575190	Identifier	upd		2575005	0					
ANR	2575191	Identifier	ints		2575005	1					
ANR	2575192	Identifier	I_NYPASS		2575005	1					
ANR	2575193	AdditiveExpression	upd -> yscan - upd -> ints [ I_BEGSKIP ]		2575005	1		-			
ANR	2575194	PtrMemberAccess	upd -> yscan		2575005	0					
ANR	2575195	Identifier	upd		2575005	0					
ANR	2575196	Identifier	yscan		2575005	1					
ANR	2575197	ArrayIndexing	upd -> ints [ I_BEGSKIP ]		2575005	1					
ANR	2575198	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2575199	Identifier	upd		2575005	0					
ANR	2575200	Identifier	ints		2575005	1					
ANR	2575201	Identifier	I_BEGSKIP		2575005	1					
ANR	2575202	ExpressionStatement	yend = pinbot * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]	4979:3:179182:179256	2575005	5	True				
ANR	2575203	AssignmentExpression	yend = pinbot * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		2575005	0		=			
ANR	2575204	Identifier	yend		2575005	0					
ANR	2575205	AdditiveExpression	pinbot * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		2575005	1		+			
ANR	2575206	MultiplicativeExpression	pinbot * upd -> ints [ I_NYPASS ]		2575005	0		*			
ANR	2575207	Identifier	pinbot		2575005	0					
ANR	2575208	ArrayIndexing	upd -> ints [ I_NYPASS ]		2575005	1					
ANR	2575209	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2575210	Identifier	upd		2575005	0					
ANR	2575211	Identifier	ints		2575005	1					
ANR	2575212	Identifier	I_NYPASS		2575005	1					
ANR	2575213	AdditiveExpression	upd -> yscan - upd -> ints [ I_BEGSKIP ]		2575005	1		-			
ANR	2575214	PtrMemberAccess	upd -> yscan		2575005	0					
ANR	2575215	Identifier	upd		2575005	0					
ANR	2575216	Identifier	yscan		2575005	1					
ANR	2575217	ArrayIndexing	upd -> ints [ I_BEGSKIP ]		2575005	1					
ANR	2575218	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2575219	Identifier	upd		2575005	0					
ANR	2575220	Identifier	ints		2575005	1					
ANR	2575221	Identifier	I_BEGSKIP		2575005	1					
ANR	2575222	ExpressionStatement	xbegin = upd -> pwidth	4983:3:179299:179319	2575005	6	True				
ANR	2575223	AssignmentExpression	xbegin = upd -> pwidth		2575005	0		=			
ANR	2575224	Identifier	xbegin		2575005	0					
ANR	2575225	PtrMemberAccess	upd -> pwidth		2575005	1					
ANR	2575226	Identifier	upd		2575005	0					
ANR	2575227	Identifier	pwidth		2575005	1					
ANR	2575228	ExpressionStatement	xend = - 1	4984:3:179324:179335	2575005	7	True				
ANR	2575229	AssignmentExpression	xend = - 1		2575005	0		=			
ANR	2575230	Identifier	xend		2575005	0					
ANR	2575231	UnaryOperationExpression	- 1		2575005	1					
ANR	2575232	UnaryOperator	-		2575005	0					
ANR	2575233	PrimaryExpression	1		2575005	1					
ANR	2575234	ForStatement	for ( y = ybegin ; y < yend ; y += upd -> ints [ I_NYPASS ] )		2575005	8					
ANR	2575235	ForInit	y = ybegin ;	4986:7:179345:179355	2575005	0	True				
ANR	2575236	AssignmentExpression	y = ybegin		2575005	0		=			
ANR	2575237	Identifier	y		2575005	0					
ANR	2575238	Identifier	ybegin		2575005	1					
ANR	2575239	Condition	y < yend	4986:19:179357:179364	2575005	1	True				
ANR	2575240	RelationalExpression	y < yend		2575005	0		<			
ANR	2575241	Identifier	y		2575005	0					
ANR	2575242	Identifier	yend		2575005	1					
ANR	2575243	AssignmentExpression	y += upd -> ints [ I_NYPASS ]	4986:29:179367:179390	2575005	2	True	+=			
ANR	2575244	Identifier	y		2575005	0					
ANR	2575245	ArrayIndexing	upd -> ints [ I_NYPASS ]		2575005	1					
ANR	2575246	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2575247	Identifier	upd		2575005	0					
ANR	2575248	Identifier	ints		2575005	1					
ANR	2575249	Identifier	I_NYPASS		2575005	1					
ANR	2575250	CompoundStatement		30:55:967:967	2575005	3					
ANR	2575251	IfStatement	if ( 0 > y )		2575005	0					
ANR	2575252	Condition	0 > y	4988:9:179424:179428	2575005	0	True				
ANR	2575253	RelationalExpression	0 > y		2575005	0		>			
ANR	2575254	PrimaryExpression	0		2575005	0					
ANR	2575255	Identifier	y		2575005	1					
ANR	2575256	ContinueStatement	continue ;	4988:16:179431:179439	2575005	1	True				
ANR	2575257	ExpressionStatement	scan = upd -> scnbuf [ y & upd -> scnmsk ]	4990:6:179473:179508	2575005	1	True				
ANR	2575258	AssignmentExpression	scan = upd -> scnbuf [ y & upd -> scnmsk ]		2575005	0		=			
ANR	2575259	Identifier	scan		2575005	0					
ANR	2575260	ArrayIndexing	upd -> scnbuf [ y & upd -> scnmsk ]		2575005	1					
ANR	2575261	PtrMemberAccess	upd -> scnbuf		2575005	0					
ANR	2575262	Identifier	upd		2575005	0					
ANR	2575263	Identifier	scnbuf		2575005	1					
ANR	2575264	BitAndExpression	y & upd -> scnmsk		2575005	1		&			
ANR	2575265	Identifier	y		2575005	0					
ANR	2575266	PtrMemberAccess	upd -> scnmsk		2575005	1					
ANR	2575267	Identifier	upd		2575005	0					
ANR	2575268	Identifier	scnmsk		2575005	1					
ANR	2575269	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		2575005	2					
ANR	2575270	ForInit	icomp = 0 ;	4992:10:179521:179530	2575005	0	True				
ANR	2575271	AssignmentExpression	icomp = 0		2575005	0		=			
ANR	2575272	Identifier	icomp		2575005	0					
ANR	2575273	PrimaryExpression	0		2575005	1					
ANR	2575274	Condition	icomp < upd -> ocomp	4992:21:179532:179549	2575005	1	True				
ANR	2575275	RelationalExpression	icomp < upd -> ocomp		2575005	0		<			
ANR	2575276	Identifier	icomp		2575005	0					
ANR	2575277	PtrMemberAccess	upd -> ocomp		2575005	1					
ANR	2575278	Identifier	upd		2575005	0					
ANR	2575279	Identifier	ocomp		2575005	1					
ANR	2575280	UnaryExpression	++ icomp	4992:41:179552:179558	2575005	2	True				
ANR	2575281	IncDec	++		2575005	0					
ANR	2575282	Identifier	icomp		2575005	1					
ANR	2575283	CompoundStatement		36:50:1135:1135	2575005	3					
ANR	2575284	IfStatement	if ( xbegin > scan [ icomp ] . xbegin [ ixpass ] )		2575005	0					
ANR	2575285	Condition	xbegin > scan [ icomp ] . xbegin [ ixpass ]	4993:12:179595:179629	2575005	0	True				
ANR	2575286	RelationalExpression	xbegin > scan [ icomp ] . xbegin [ ixpass ]		2575005	0		>			
ANR	2575287	Identifier	xbegin		2575005	0					
ANR	2575288	ArrayIndexing	scan [ icomp ] . xbegin [ ixpass ]		2575005	1					
ANR	2575289	MemberAccess	scan [ icomp ] . xbegin		2575005	0					
ANR	2575290	ArrayIndexing	scan [ icomp ]		2575005	0					
ANR	2575291	Identifier	scan		2575005	0					
ANR	2575292	Identifier	icomp		2575005	1					
ANR	2575293	Identifier	xbegin		2575005	1					
ANR	2575294	Identifier	ixpass		2575005	1					
ANR	2575295	ExpressionStatement	xbegin = scan [ icomp ] . xbegin [ ixpass ]	4994:12:179644:179679	2575005	1	True				
ANR	2575296	AssignmentExpression	xbegin = scan [ icomp ] . xbegin [ ixpass ]		2575005	0		=			
ANR	2575297	Identifier	xbegin		2575005	0					
ANR	2575298	ArrayIndexing	scan [ icomp ] . xbegin [ ixpass ]		2575005	1					
ANR	2575299	MemberAccess	scan [ icomp ] . xbegin		2575005	0					
ANR	2575300	ArrayIndexing	scan [ icomp ]		2575005	0					
ANR	2575301	Identifier	scan		2575005	0					
ANR	2575302	Identifier	icomp		2575005	1					
ANR	2575303	Identifier	xbegin		2575005	1					
ANR	2575304	Identifier	ixpass		2575005	1					
ANR	2575305	IfStatement	if ( xend < scan [ icomp ] . xend [ ixpass ] )		2575005	1					
ANR	2575306	Condition	xend < scan [ icomp ] . xend [ ixpass ]	4995:12:179693:179727	2575005	0	True				
ANR	2575307	RelationalExpression	xend < scan [ icomp ] . xend [ ixpass ]		2575005	0		<			
ANR	2575308	Identifier	xend		2575005	0					
ANR	2575309	ArrayIndexing	scan [ icomp ] . xend [ ixpass ]		2575005	1					
ANR	2575310	MemberAccess	scan [ icomp ] . xend		2575005	0					
ANR	2575311	ArrayIndexing	scan [ icomp ]		2575005	0					
ANR	2575312	Identifier	scan		2575005	0					
ANR	2575313	Identifier	icomp		2575005	1					
ANR	2575314	Identifier	xend		2575005	1					
ANR	2575315	Identifier	ixpass		2575005	1					
ANR	2575316	ExpressionStatement	xend = scan [ icomp ] . xend [ ixpass ]	4996:12:179742:179777	2575005	1	True				
ANR	2575317	AssignmentExpression	xend = scan [ icomp ] . xend [ ixpass ]		2575005	0		=			
ANR	2575318	Identifier	xend		2575005	0					
ANR	2575319	ArrayIndexing	scan [ icomp ] . xend [ ixpass ]		2575005	1					
ANR	2575320	MemberAccess	scan [ icomp ] . xend		2575005	0					
ANR	2575321	ArrayIndexing	scan [ icomp ]		2575005	0					
ANR	2575322	Identifier	scan		2575005	0					
ANR	2575323	Identifier	icomp		2575005	1					
ANR	2575324	Identifier	xend		2575005	1					
ANR	2575325	Identifier	ixpass		2575005	1					
ANR	2575326	IfStatement	if ( xbegin <= xend )		2575005	9					
ANR	2575327	Condition	xbegin <= xend	5001:6:179935:179948	2575005	0	True				
ANR	2575328	RelationalExpression	xbegin <= xend		2575005	0		<=			
ANR	2575329	Identifier	xbegin		2575005	0					
ANR	2575330	Identifier	xend		2575005	1					
ANR	2575331	CompoundStatement		45:22:1525:1525	2575005	1					
ANR	2575332	ExpressionStatement	ioutbuf = 0	5003:6:179985:179996	2575005	0	True				
ANR	2575333	AssignmentExpression	ioutbuf = 0		2575005	0		=			
ANR	2575334	Identifier	ioutbuf		2575005	0					
ANR	2575335	PrimaryExpression	0		2575005	1					
ANR	2575336	IfStatement	if ( 0 == upd -> strings [ S_XMOVE ] . size )		2575005	1					
ANR	2575337	Condition	0 == upd -> strings [ S_XMOVE ] . size	5005:9:180008:180038	2575005	0	True				
ANR	2575338	EqualityExpression	0 == upd -> strings [ S_XMOVE ] . size		2575005	0		==			
ANR	2575339	PrimaryExpression	0		2575005	0					
ANR	2575340	MemberAccess	upd -> strings [ S_XMOVE ] . size		2575005	1					
ANR	2575341	ArrayIndexing	upd -> strings [ S_XMOVE ]		2575005	0					
ANR	2575342	PtrMemberAccess	upd -> strings		2575005	0					
ANR	2575343	Identifier	upd		2575005	0					
ANR	2575344	Identifier	strings		2575005	1					
ANR	2575345	Identifier	S_XMOVE		2575005	1					
ANR	2575346	Identifier	size		2575005	1					
ANR	2575347	ExpressionStatement	xbegin = ixpass	5005:42:180041:180056	2575005	1	True				
ANR	2575348	AssignmentExpression	xbegin = ixpass		2575005	0		=			
ANR	2575349	Identifier	xbegin		2575005	0					
ANR	2575350	Identifier	ixpass		2575005	1					
ANR	2575351	IfStatement	if ( upd -> yscan != upd -> yprinter )		2575005	2					
ANR	2575352	Condition	upd -> yscan != upd -> yprinter	5010:9:180112:180138	2575005	0	True				
ANR	2575353	EqualityExpression	upd -> yscan != upd -> yprinter		2575005	0		!=			
ANR	2575354	PtrMemberAccess	upd -> yscan		2575005	0					
ANR	2575355	Identifier	upd		2575005	0					
ANR	2575356	Identifier	yscan		2575005	1					
ANR	2575357	PtrMemberAccess	upd -> yprinter		2575005	1					
ANR	2575358	Identifier	upd		2575005	0					
ANR	2575359	Identifier	yprinter		2575005	1					
ANR	2575360	CompoundStatement		54:38:1715:1715	2575005	1					
ANR	2575361	IfStatement	if ( B_YABS & upd -> flags )		2575005	0					
ANR	2575362	Condition	B_YABS & upd -> flags	5011:12:180179:180197	2575005	0	True				
ANR	2575363	BitAndExpression	B_YABS & upd -> flags		2575005	0		&			
ANR	2575364	Identifier	B_YABS		2575005	0					
ANR	2575365	PtrMemberAccess	upd -> flags		2575005	1					
ANR	2575366	Identifier	upd		2575005	0					
ANR	2575367	Identifier	flags		2575005	1					
ANR	2575368	ExpressionStatement	y = upd -> yscan + upd -> ints [ I_YOFS ]	5011:33:180200:180234	2575005	1	True				
ANR	2575369	AssignmentExpression	y = upd -> yscan + upd -> ints [ I_YOFS ]		2575005	0		=			
ANR	2575370	Identifier	y		2575005	0					
ANR	2575371	AdditiveExpression	upd -> yscan + upd -> ints [ I_YOFS ]		2575005	1		+			
ANR	2575372	PtrMemberAccess	upd -> yscan		2575005	0					
ANR	2575373	Identifier	upd		2575005	0					
ANR	2575374	Identifier	yscan		2575005	1					
ANR	2575375	ArrayIndexing	upd -> ints [ I_YOFS ]		2575005	1					
ANR	2575376	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2575377	Identifier	upd		2575005	0					
ANR	2575378	Identifier	ints		2575005	1					
ANR	2575379	Identifier	I_YOFS		2575005	1					
ANR	2575380	ElseStatement	else		2575005	0					
ANR	2575381	ExpressionStatement	y = upd -> yscan - upd -> yprinter	5012:33:180269:180299	2575005	0	True				
ANR	2575382	AssignmentExpression	y = upd -> yscan - upd -> yprinter		2575005	0		=			
ANR	2575383	Identifier	y		2575005	0					
ANR	2575384	AdditiveExpression	upd -> yscan - upd -> yprinter		2575005	1		-			
ANR	2575385	PtrMemberAccess	upd -> yscan		2575005	0					
ANR	2575386	Identifier	upd		2575005	0					
ANR	2575387	Identifier	yscan		2575005	1					
ANR	2575388	PtrMemberAccess	upd -> yprinter		2575005	1					
ANR	2575389	Identifier	upd		2575005	0					
ANR	2575390	Identifier	yprinter		2575005	1					
ANR	2575391	IfStatement	if ( 1 < upd -> ints [ I_YSTEP ] )		2575005	1					
ANR	2575392	Condition	1 < upd -> ints [ I_YSTEP ]	5014:18:180320:180341	2575005	0	True				
ANR	2575393	RelationalExpression	1 < upd -> ints [ I_YSTEP ]		2575005	0		<			
ANR	2575394	PrimaryExpression	1		2575005	0					
ANR	2575395	ArrayIndexing	upd -> ints [ I_YSTEP ]		2575005	1					
ANR	2575396	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2575397	Identifier	upd		2575005	0					
ANR	2575398	Identifier	ints		2575005	1					
ANR	2575399	Identifier	I_YSTEP		2575005	1					
ANR	2575400	CompoundStatement		58:42:1918:1918	2575005	1					
ANR	2575401	ExpressionStatement	n = y / upd -> ints [ I_YSTEP ]	5015:12:180358:180390	2575005	0	True				
ANR	2575402	AssignmentExpression	n = y / upd -> ints [ I_YSTEP ]		2575005	0		=			
ANR	2575403	Identifier	n		2575005	0					
ANR	2575404	MultiplicativeExpression	y / upd -> ints [ I_YSTEP ]		2575005	1		/			
ANR	2575405	Identifier	y		2575005	0					
ANR	2575406	ArrayIndexing	upd -> ints [ I_YSTEP ]		2575005	1					
ANR	2575407	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2575408	Identifier	upd		2575005	0					
ANR	2575409	Identifier	ints		2575005	1					
ANR	2575410	Identifier	I_YSTEP		2575005	1					
ANR	2575411	ExpressionStatement	y -= n * upd -> ints [ I_YSTEP ]	5016:12:180423:180455	2575005	1	True				
ANR	2575412	AssignmentExpression	y -= n * upd -> ints [ I_YSTEP ]		2575005	0		-=			
ANR	2575413	Identifier	y		2575005	0					
ANR	2575414	MultiplicativeExpression	n * upd -> ints [ I_YSTEP ]		2575005	1		*			
ANR	2575415	Identifier	n		2575005	0					
ANR	2575416	ArrayIndexing	upd -> ints [ I_YSTEP ]		2575005	1					
ANR	2575417	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2575418	Identifier	upd		2575005	0					
ANR	2575419	Identifier	ints		2575005	1					
ANR	2575420	Identifier	I_YSTEP		2575005	1					
ANR	2575421	ElseStatement	else		2575005	0					
ANR	2575422	IfStatement	if ( - 1 > upd -> ints [ I_YSTEP ] )		2575005	0					
ANR	2575423	Condition	- 1 > upd -> ints [ I_YSTEP ]	5017:19:180495:180517	2575005	0	True				
ANR	2575424	RelationalExpression	- 1 > upd -> ints [ I_YSTEP ]		2575005	0		>			
ANR	2575425	UnaryOperationExpression	- 1		2575005	0					
ANR	2575426	UnaryOperator	-		2575005	0					
ANR	2575427	PrimaryExpression	1		2575005	1					
ANR	2575428	ArrayIndexing	upd -> ints [ I_YSTEP ]		2575005	1					
ANR	2575429	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2575430	Identifier	upd		2575005	0					
ANR	2575431	Identifier	ints		2575005	1					
ANR	2575432	Identifier	I_YSTEP		2575005	1					
ANR	2575433	CompoundStatement		61:44:2094:2094	2575005	1					
ANR	2575434	ExpressionStatement	n = y * - upd -> ints [ I_YSTEP ]	5018:12:180534:180566	2575005	0	True				
ANR	2575435	AssignmentExpression	n = y * - upd -> ints [ I_YSTEP ]		2575005	0		=			
ANR	2575436	Identifier	n		2575005	0					
ANR	2575437	MultiplicativeExpression	y * - upd -> ints [ I_YSTEP ]		2575005	1		*			
ANR	2575438	Identifier	y		2575005	0					
ANR	2575439	UnaryOperationExpression	- upd -> ints [ I_YSTEP ]		2575005	1					
ANR	2575440	UnaryOperator	-		2575005	0					
ANR	2575441	ArrayIndexing	upd -> ints [ I_YSTEP ]		2575005	1					
ANR	2575442	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2575443	Identifier	upd		2575005	0					
ANR	2575444	Identifier	ints		2575005	1					
ANR	2575445	Identifier	I_YSTEP		2575005	1					
ANR	2575446	ExpressionStatement	y = 0	5019:12:180602:180612	2575005	1	True				
ANR	2575447	AssignmentExpression	y = 0		2575005	0		=			
ANR	2575448	Identifier	y		2575005	0					
ANR	2575449	PrimaryExpression	0		2575005	1					
ANR	2575450	ElseStatement	else		2575005	0					
ANR	2575451	CompoundStatement		64:16:2204:2204	2575005	0					
ANR	2575452	ExpressionStatement	n = y	5021:12:180644:180654	2575005	0	True				
ANR	2575453	AssignmentExpression	n = y		2575005	0		=			
ANR	2575454	Identifier	n		2575005	0					
ANR	2575455	Identifier	y		2575005	1					
ANR	2575456	ExpressionStatement	y = 0	5022:12:180668:180678	2575005	1	True				
ANR	2575457	AssignmentExpression	y = 0		2575005	0		=			
ANR	2575458	Identifier	y		2575005	0					
ANR	2575459	PrimaryExpression	0		2575005	1					
ANR	2575460	IfStatement	if ( n )		2575005	2					
ANR	2575461	Condition	n	5025:12:180704:180704	2575005	0	True				
ANR	2575462	Identifier	n		2575005	0					
ANR	2575463	CompoundStatement		69:15:2281:2281	2575005	1					
ANR	2575464	IfStatement	if ( 0 < upd -> strings [ S_YMOVE ] . size )		2575005	0					
ANR	2575465	Condition	0 < upd -> strings [ S_YMOVE ] . size	5026:15:180749:180778	2575005	0	True				
ANR	2575466	RelationalExpression	0 < upd -> strings [ S_YMOVE ] . size		2575005	0		<			
ANR	2575467	PrimaryExpression	0		2575005	0					
ANR	2575468	MemberAccess	upd -> strings [ S_YMOVE ] . size		2575005	1					
ANR	2575469	ArrayIndexing	upd -> strings [ S_YMOVE ]		2575005	0					
ANR	2575470	PtrMemberAccess	upd -> strings		2575005	0					
ANR	2575471	Identifier	upd		2575005	0					
ANR	2575472	Identifier	strings		2575005	1					
ANR	2575473	Identifier	S_YMOVE		2575005	1					
ANR	2575474	Identifier	size		2575005	1					
ANR	2575475	CompoundStatement		70:47:2355:2355	2575005	1					
ANR	2575476	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YMOVE ] . data , upd -> strings [ S_YMOVE ] . size )"	5028:15:180799:180934	2575005	0	True				
ANR	2575477	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YMOVE ] . data , upd -> strings [ S_YMOVE ] . size )"		2575005	0					
ANR	2575478	Callee	memcpy		2575005	0					
ANR	2575479	Identifier	memcpy		2575005	0					
ANR	2575480	ArgumentList	upd -> outbuf + ioutbuf		2575005	1					
ANR	2575481	Argument	upd -> outbuf + ioutbuf		2575005	0					
ANR	2575482	AdditiveExpression	upd -> outbuf + ioutbuf		2575005	0		+			
ANR	2575483	PtrMemberAccess	upd -> outbuf		2575005	0					
ANR	2575484	Identifier	upd		2575005	0					
ANR	2575485	Identifier	outbuf		2575005	1					
ANR	2575486	Identifier	ioutbuf		2575005	1					
ANR	2575487	Argument	upd -> strings [ S_YMOVE ] . data		2575005	1					
ANR	2575488	MemberAccess	upd -> strings [ S_YMOVE ] . data		2575005	0					
ANR	2575489	ArrayIndexing	upd -> strings [ S_YMOVE ]		2575005	0					
ANR	2575490	PtrMemberAccess	upd -> strings		2575005	0					
ANR	2575491	Identifier	upd		2575005	0					
ANR	2575492	Identifier	strings		2575005	1					
ANR	2575493	Identifier	S_YMOVE		2575005	1					
ANR	2575494	Identifier	data		2575005	1					
ANR	2575495	Argument	upd -> strings [ S_YMOVE ] . size		2575005	2					
ANR	2575496	MemberAccess	upd -> strings [ S_YMOVE ] . size		2575005	0					
ANR	2575497	ArrayIndexing	upd -> strings [ S_YMOVE ]		2575005	0					
ANR	2575498	PtrMemberAccess	upd -> strings		2575005	0					
ANR	2575499	Identifier	upd		2575005	0					
ANR	2575500	Identifier	strings		2575005	1					
ANR	2575501	Identifier	S_YMOVE		2575005	1					
ANR	2575502	Identifier	size		2575005	1					
ANR	2575503	ExpressionStatement	ioutbuf += upd -> strings [ S_YMOVE ] . size	5031:15:180951:180988	2575005	1	True				
ANR	2575504	AssignmentExpression	ioutbuf += upd -> strings [ S_YMOVE ] . size		2575005	0		+=			
ANR	2575505	Identifier	ioutbuf		2575005	0					
ANR	2575506	MemberAccess	upd -> strings [ S_YMOVE ] . size		2575005	1					
ANR	2575507	ArrayIndexing	upd -> strings [ S_YMOVE ]		2575005	0					
ANR	2575508	PtrMemberAccess	upd -> strings		2575005	0					
ANR	2575509	Identifier	upd		2575005	0					
ANR	2575510	Identifier	strings		2575005	1					
ANR	2575511	Identifier	S_YMOVE		2575005	1					
ANR	2575512	Identifier	size		2575005	1					
ANR	2575513	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = n & 0xff	5033:15:181006:181044	2575005	2	True				
ANR	2575514	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = n & 0xff		2575005	0		=			
ANR	2575515	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2575005	0					
ANR	2575516	PtrMemberAccess	upd -> outbuf		2575005	0					
ANR	2575517	Identifier	upd		2575005	0					
ANR	2575518	Identifier	outbuf		2575005	1					
ANR	2575519	PostIncDecOperationExpression	ioutbuf ++		2575005	1					
ANR	2575520	Identifier	ioutbuf		2575005	0					
ANR	2575521	IncDec	++		2575005	1					
ANR	2575522	BitAndExpression	n & 0xff		2575005	1		&			
ANR	2575523	Identifier	n		2575005	0					
ANR	2575524	PrimaryExpression	0xff		2575005	1					
ANR	2575525	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff	5034:15:181061:181099	2575005	3	True				
ANR	2575526	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff		2575005	0		=			
ANR	2575527	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2575005	0					
ANR	2575528	PtrMemberAccess	upd -> outbuf		2575005	0					
ANR	2575529	Identifier	upd		2575005	0					
ANR	2575530	Identifier	outbuf		2575005	1					
ANR	2575531	PostIncDecOperationExpression	ioutbuf ++		2575005	1					
ANR	2575532	Identifier	ioutbuf		2575005	0					
ANR	2575533	IncDec	++		2575005	1					
ANR	2575534	BitAndExpression	( n >> 8 ) & 0xff		2575005	1		&			
ANR	2575535	ShiftExpression	n >> 8		2575005	0		>>			
ANR	2575536	Identifier	n		2575005	0					
ANR	2575537	PrimaryExpression	8		2575005	1					
ANR	2575538	PrimaryExpression	0xff		2575005	1					
ANR	2575539	ElseStatement	else		2575005	0					
ANR	2575540	CompoundStatement		80:19:2695:2695	2575005	0					
ANR	2575541	WhileStatement	while ( n )		2575005	0					
ANR	2575542	Condition	n	5038:21:181145:181145	2575005	0	True				
ANR	2575543	Identifier	n		2575005	0					
ANR	2575544	CompoundStatement		83:18:2742:2770	2575005	1					
ANR	2575545	IdentifierDeclStatement	int n2do = n > 255 ? 255 : n ;	5039:18:181168:181196	2575005	0	True				
ANR	2575546	IdentifierDecl	n2do = n > 255 ? 255 : n		2575005	0					
ANR	2575547	IdentifierDeclType	int		2575005	0					
ANR	2575548	Identifier	n2do		2575005	1					
ANR	2575549	AssignmentExpression	n2do = n > 255 ? 255 : n		2575005	2		=			
ANR	2575550	Identifier	n2do		2575005	0					
ANR	2575551	ConditionalExpression	n > 255 ? 255 : n		2575005	1					
ANR	2575552	Condition	n > 255		2575005	0					
ANR	2575553	RelationalExpression	n > 255		2575005	0		>			
ANR	2575554	Identifier	n		2575005	0					
ANR	2575555	PrimaryExpression	255		2575005	1					
ANR	2575556	PrimaryExpression	255		2575005	1					
ANR	2575557	Identifier	n		2575005	2					
ANR	2575558	IfStatement	if ( upd -> lf != n2do )		2575005	1					
ANR	2575559	Condition	upd -> lf != n2do	5040:21:181219:181233	2575005	0	True				
ANR	2575560	EqualityExpression	upd -> lf != n2do		2575005	0		!=			
ANR	2575561	PtrMemberAccess	upd -> lf		2575005	0					
ANR	2575562	Identifier	upd		2575005	0					
ANR	2575563	Identifier	lf		2575005	1					
ANR	2575564	Identifier	n2do		2575005	1					
ANR	2575565	CompoundStatement		84:38:2810:2810	2575005	1					
ANR	2575566	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_SETLF ] . data , upd -> strings [ S_SETLF ] . size )"	5041:21:181259:181406	2575005	0	True				
ANR	2575567	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_SETLF ] . data , upd -> strings [ S_SETLF ] . size )"		2575005	0					
ANR	2575568	Callee	memcpy		2575005	0					
ANR	2575569	Identifier	memcpy		2575005	0					
ANR	2575570	ArgumentList	upd -> outbuf + ioutbuf		2575005	1					
ANR	2575571	Argument	upd -> outbuf + ioutbuf		2575005	0					
ANR	2575572	AdditiveExpression	upd -> outbuf + ioutbuf		2575005	0		+			
ANR	2575573	PtrMemberAccess	upd -> outbuf		2575005	0					
ANR	2575574	Identifier	upd		2575005	0					
ANR	2575575	Identifier	outbuf		2575005	1					
ANR	2575576	Identifier	ioutbuf		2575005	1					
ANR	2575577	Argument	upd -> strings [ S_SETLF ] . data		2575005	1					
ANR	2575578	MemberAccess	upd -> strings [ S_SETLF ] . data		2575005	0					
ANR	2575579	ArrayIndexing	upd -> strings [ S_SETLF ]		2575005	0					
ANR	2575580	PtrMemberAccess	upd -> strings		2575005	0					
ANR	2575581	Identifier	upd		2575005	0					
ANR	2575582	Identifier	strings		2575005	1					
ANR	2575583	Identifier	S_SETLF		2575005	1					
ANR	2575584	Identifier	data		2575005	1					
ANR	2575585	Argument	upd -> strings [ S_SETLF ] . size		2575005	2					
ANR	2575586	MemberAccess	upd -> strings [ S_SETLF ] . size		2575005	0					
ANR	2575587	ArrayIndexing	upd -> strings [ S_SETLF ]		2575005	0					
ANR	2575588	PtrMemberAccess	upd -> strings		2575005	0					
ANR	2575589	Identifier	upd		2575005	0					
ANR	2575590	Identifier	strings		2575005	1					
ANR	2575591	Identifier	S_SETLF		2575005	1					
ANR	2575592	Identifier	size		2575005	1					
ANR	2575593	ExpressionStatement	ioutbuf += upd -> strings [ S_SETLF ] . size	5044:21:181429:181466	2575005	1	True				
ANR	2575594	AssignmentExpression	ioutbuf += upd -> strings [ S_SETLF ] . size		2575005	0		+=			
ANR	2575595	Identifier	ioutbuf		2575005	0					
ANR	2575596	MemberAccess	upd -> strings [ S_SETLF ] . size		2575005	1					
ANR	2575597	ArrayIndexing	upd -> strings [ S_SETLF ]		2575005	0					
ANR	2575598	PtrMemberAccess	upd -> strings		2575005	0					
ANR	2575599	Identifier	upd		2575005	0					
ANR	2575600	Identifier	strings		2575005	1					
ANR	2575601	Identifier	S_SETLF		2575005	1					
ANR	2575602	Identifier	size		2575005	1					
ANR	2575603	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = n2do	5045:21:181489:181518	2575005	2	True				
ANR	2575604	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = n2do		2575005	0		=			
ANR	2575605	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2575005	0					
ANR	2575606	PtrMemberAccess	upd -> outbuf		2575005	0					
ANR	2575607	Identifier	upd		2575005	0					
ANR	2575608	Identifier	outbuf		2575005	1					
ANR	2575609	PostIncDecOperationExpression	ioutbuf ++		2575005	1					
ANR	2575610	Identifier	ioutbuf		2575005	0					
ANR	2575611	IncDec	++		2575005	1					
ANR	2575612	Identifier	n2do		2575005	1					
ANR	2575613	ExpressionStatement	upd -> lf = n2do	5046:21:181541:181570	2575005	3	True				
ANR	2575614	AssignmentExpression	upd -> lf = n2do		2575005	0		=			
ANR	2575615	PtrMemberAccess	upd -> lf		2575005	0					
ANR	2575616	Identifier	upd		2575005	0					
ANR	2575617	Identifier	lf		2575005	1					
ANR	2575618	Identifier	n2do		2575005	1					
ANR	2575619	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = '\\n'	5048:18:181610:181639	2575005	2	True				
ANR	2575620	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = '\\n'		2575005	0		=			
ANR	2575621	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2575005	0					
ANR	2575622	PtrMemberAccess	upd -> outbuf		2575005	0					
ANR	2575623	Identifier	upd		2575005	0					
ANR	2575624	Identifier	outbuf		2575005	1					
ANR	2575625	PostIncDecOperationExpression	ioutbuf ++		2575005	1					
ANR	2575626	Identifier	ioutbuf		2575005	0					
ANR	2575627	IncDec	++		2575005	1					
ANR	2575628	PrimaryExpression	'\\n'		2575005	1					
ANR	2575629	ExpressionStatement	n -= n2do	5049:18:181659:181668	2575005	3	True				
ANR	2575630	AssignmentExpression	n -= n2do		2575005	0		-=			
ANR	2575631	Identifier	n		2575005	0					
ANR	2575632	Identifier	n2do		2575005	1					
ANR	2575633	IfStatement	if ( 0 < upd -> strings [ S_YSTEP ] . size )		2575005	3					
ANR	2575634	Condition	0 < upd -> strings [ S_YSTEP ] . size	5054:12:181756:181785	2575005	0	True				
ANR	2575635	RelationalExpression	0 < upd -> strings [ S_YSTEP ] . size		2575005	0		<			
ANR	2575636	PrimaryExpression	0		2575005	0					
ANR	2575637	MemberAccess	upd -> strings [ S_YSTEP ] . size		2575005	1					
ANR	2575638	ArrayIndexing	upd -> strings [ S_YSTEP ]		2575005	0					
ANR	2575639	PtrMemberAccess	upd -> strings		2575005	0					
ANR	2575640	Identifier	upd		2575005	0					
ANR	2575641	Identifier	strings		2575005	1					
ANR	2575642	Identifier	S_YSTEP		2575005	1					
ANR	2575643	Identifier	size		2575005	1					
ANR	2575644	CompoundStatement		98:44:3362:3362	2575005	1					
ANR	2575645	WhileStatement	while ( y -- )		2575005	0					
ANR	2575646	Condition	y --	5055:18:181808:181810	2575005	0	True				
ANR	2575647	PostIncDecOperationExpression	y --		2575005	0					
ANR	2575648	Identifier	y		2575005	0					
ANR	2575649	IncDec	--		2575005	1					
ANR	2575650	CompoundStatement		99:23:3387:3387	2575005	1					
ANR	2575651	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YSTEP ] . data , upd -> strings [ S_YSTEP ] . size )"	5056:15:181830:181965	2575005	0	True				
ANR	2575652	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YSTEP ] . data , upd -> strings [ S_YSTEP ] . size )"		2575005	0					
ANR	2575653	Callee	memcpy		2575005	0					
ANR	2575654	Identifier	memcpy		2575005	0					
ANR	2575655	ArgumentList	upd -> outbuf + ioutbuf		2575005	1					
ANR	2575656	Argument	upd -> outbuf + ioutbuf		2575005	0					
ANR	2575657	AdditiveExpression	upd -> outbuf + ioutbuf		2575005	0		+			
ANR	2575658	PtrMemberAccess	upd -> outbuf		2575005	0					
ANR	2575659	Identifier	upd		2575005	0					
ANR	2575660	Identifier	outbuf		2575005	1					
ANR	2575661	Identifier	ioutbuf		2575005	1					
ANR	2575662	Argument	upd -> strings [ S_YSTEP ] . data		2575005	1					
ANR	2575663	MemberAccess	upd -> strings [ S_YSTEP ] . data		2575005	0					
ANR	2575664	ArrayIndexing	upd -> strings [ S_YSTEP ]		2575005	0					
ANR	2575665	PtrMemberAccess	upd -> strings		2575005	0					
ANR	2575666	Identifier	upd		2575005	0					
ANR	2575667	Identifier	strings		2575005	1					
ANR	2575668	Identifier	S_YSTEP		2575005	1					
ANR	2575669	Identifier	data		2575005	1					
ANR	2575670	Argument	upd -> strings [ S_YSTEP ] . size		2575005	2					
ANR	2575671	MemberAccess	upd -> strings [ S_YSTEP ] . size		2575005	0					
ANR	2575672	ArrayIndexing	upd -> strings [ S_YSTEP ]		2575005	0					
ANR	2575673	PtrMemberAccess	upd -> strings		2575005	0					
ANR	2575674	Identifier	upd		2575005	0					
ANR	2575675	Identifier	strings		2575005	1					
ANR	2575676	Identifier	S_YSTEP		2575005	1					
ANR	2575677	Identifier	size		2575005	1					
ANR	2575678	ExpressionStatement	ioutbuf += upd -> strings [ S_YSTEP ] . size	5059:15:181982:182019	2575005	1	True				
ANR	2575679	AssignmentExpression	ioutbuf += upd -> strings [ S_YSTEP ] . size		2575005	0		+=			
ANR	2575680	Identifier	ioutbuf		2575005	0					
ANR	2575681	MemberAccess	upd -> strings [ S_YSTEP ] . size		2575005	1					
ANR	2575682	ArrayIndexing	upd -> strings [ S_YSTEP ]		2575005	0					
ANR	2575683	PtrMemberAccess	upd -> strings		2575005	0					
ANR	2575684	Identifier	upd		2575005	0					
ANR	2575685	Identifier	strings		2575005	1					
ANR	2575686	Identifier	S_YSTEP		2575005	1					
ANR	2575687	Identifier	size		2575005	1					
ANR	2575688	ExpressionStatement	upd -> yprinter = upd -> yscan	5063:9:182056:182082	2575005	4	True				
ANR	2575689	AssignmentExpression	upd -> yprinter = upd -> yscan		2575005	0		=			
ANR	2575690	PtrMemberAccess	upd -> yprinter		2575005	0					
ANR	2575691	Identifier	upd		2575005	0					
ANR	2575692	Identifier	yprinter		2575005	1					
ANR	2575693	PtrMemberAccess	upd -> yscan		2575005	1					
ANR	2575694	Identifier	upd		2575005	0					
ANR	2575695	Identifier	yscan		2575005	1					
ANR	2575696	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		2575005	3					
ANR	2575697	ForInit	icomp = 0 ;	5069:10:182203:182212	2575005	0	True				
ANR	2575698	AssignmentExpression	icomp = 0		2575005	0		=			
ANR	2575699	Identifier	icomp		2575005	0					
ANR	2575700	PrimaryExpression	0		2575005	1					
ANR	2575701	Condition	icomp < upd -> ocomp	5069:21:182214:182231	2575005	1	True				
ANR	2575702	RelationalExpression	icomp < upd -> ocomp		2575005	0		<			
ANR	2575703	Identifier	icomp		2575005	0					
ANR	2575704	PtrMemberAccess	upd -> ocomp		2575005	1					
ANR	2575705	Identifier	upd		2575005	0					
ANR	2575706	Identifier	ocomp		2575005	1					
ANR	2575707	UnaryExpression	++ icomp	5069:41:182234:182240	2575005	2	True				
ANR	2575708	IncDec	++		2575005	0					
ANR	2575709	Identifier	icomp		2575005	1					
ANR	2575710	CompoundStatement		113:50:3817:3817	2575005	3					
ANR	2575711	ForStatement	for ( y = ybegin ; y < yend ; y += upd -> ints [ I_NYPASS ] )		2575005	0					
ANR	2575712	ForInit	y = ybegin ;	5073:13:182346:182356	2575005	0	True				
ANR	2575713	AssignmentExpression	y = ybegin		2575005	0		=			
ANR	2575714	Identifier	y		2575005	0					
ANR	2575715	Identifier	ybegin		2575005	1					
ANR	2575716	Condition	y < yend	5073:25:182358:182365	2575005	1	True				
ANR	2575717	RelationalExpression	y < yend		2575005	0		<			
ANR	2575718	Identifier	y		2575005	0					
ANR	2575719	Identifier	yend		2575005	1					
ANR	2575720	AssignmentExpression	y += upd -> ints [ I_NYPASS ]	5073:35:182368:182391	2575005	2	True	+=			
ANR	2575721	Identifier	y		2575005	0					
ANR	2575722	ArrayIndexing	upd -> ints [ I_NYPASS ]		2575005	1					
ANR	2575723	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2575724	Identifier	upd		2575005	0					
ANR	2575725	Identifier	ints		2575005	1					
ANR	2575726	Identifier	I_NYPASS		2575005	1					
ANR	2575727	CompoundStatement		117:61:3968:3968	2575005	3					
ANR	2575728	IfStatement	if ( 0 > y )		2575005	0					
ANR	2575729	Condition	0 > y	5074:15:182427:182431	2575005	0	True				
ANR	2575730	RelationalExpression	0 > y		2575005	0		>			
ANR	2575731	PrimaryExpression	0		2575005	0					
ANR	2575732	Identifier	y		2575005	1					
ANR	2575733	ContinueStatement	continue ;	5074:22:182434:182442	2575005	1	True				
ANR	2575734	ExpressionStatement	scan = upd -> scnbuf [ y & upd -> scnmsk ] + icomp	5075:12:182456:182497	2575005	1	True				
ANR	2575735	AssignmentExpression	scan = upd -> scnbuf [ y & upd -> scnmsk ] + icomp		2575005	0		=			
ANR	2575736	Identifier	scan		2575005	0					
ANR	2575737	AdditiveExpression	upd -> scnbuf [ y & upd -> scnmsk ] + icomp		2575005	1		+			
ANR	2575738	ArrayIndexing	upd -> scnbuf [ y & upd -> scnmsk ]		2575005	0					
ANR	2575739	PtrMemberAccess	upd -> scnbuf		2575005	0					
ANR	2575740	Identifier	upd		2575005	0					
ANR	2575741	Identifier	scnbuf		2575005	1					
ANR	2575742	BitAndExpression	y & upd -> scnmsk		2575005	1		&			
ANR	2575743	Identifier	y		2575005	0					
ANR	2575744	PtrMemberAccess	upd -> scnmsk		2575005	1					
ANR	2575745	Identifier	upd		2575005	0					
ANR	2575746	Identifier	scnmsk		2575005	1					
ANR	2575747	Identifier	icomp		2575005	1					
ANR	2575748	IfStatement	if ( 0 <= scan -> xend [ ixpass ] )		2575005	2					
ANR	2575749	Condition	0 <= scan -> xend [ ixpass ]	5076:15:182514:182536	2575005	0	True				
ANR	2575750	RelationalExpression	0 <= scan -> xend [ ixpass ]		2575005	0		<=			
ANR	2575751	PrimaryExpression	0		2575005	0					
ANR	2575752	ArrayIndexing	scan -> xend [ ixpass ]		2575005	1					
ANR	2575753	PtrMemberAccess	scan -> xend		2575005	0					
ANR	2575754	Identifier	scan		2575005	0					
ANR	2575755	Identifier	xend		2575005	1					
ANR	2575756	Identifier	ixpass		2575005	1					
ANR	2575757	BreakStatement	break ;	5076:40:182539:182544	2575005	1	True				
ANR	2575758	IfStatement	if ( y >= yend )		2575005	1					
ANR	2575759	Condition	y >= yend	5078:12:182637:182645	2575005	0	True				
ANR	2575760	RelationalExpression	y >= yend		2575005	0		>=			
ANR	2575761	Identifier	y		2575005	0					
ANR	2575762	Identifier	yend		2575005	1					
ANR	2575763	ContinueStatement	continue ;	5078:23:182648:182656	2575005	1	True				
ANR	2575764	IfStatement	if ( ( 0 < upd -> string_a [ SA_SETCOMP ] . size ) && ( upd -> icomp != icomp ) )		2575005	2					
ANR	2575765	Condition	( 0 < upd -> string_a [ SA_SETCOMP ] . size ) && ( upd -> icomp != icomp )	5082:12:182736:182823	2575005	0	True				
ANR	2575766	AndExpression	( 0 < upd -> string_a [ SA_SETCOMP ] . size ) && ( upd -> icomp != icomp )		2575005	0		&&			
ANR	2575767	RelationalExpression	0 < upd -> string_a [ SA_SETCOMP ] . size		2575005	0		<			
ANR	2575768	PrimaryExpression	0		2575005	0					
ANR	2575769	MemberAccess	upd -> string_a [ SA_SETCOMP ] . size		2575005	1					
ANR	2575770	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2575005	0					
ANR	2575771	PtrMemberAccess	upd -> string_a		2575005	0					
ANR	2575772	Identifier	upd		2575005	0					
ANR	2575773	Identifier	string_a		2575005	1					
ANR	2575774	Identifier	SA_SETCOMP		2575005	1					
ANR	2575775	Identifier	size		2575005	1					
ANR	2575776	EqualityExpression	upd -> icomp != icomp		2575005	1		!=			
ANR	2575777	PtrMemberAccess	upd -> icomp		2575005	0					
ANR	2575778	Identifier	upd		2575005	0					
ANR	2575779	Identifier	icomp		2575005	1					
ANR	2575780	Identifier	icomp		2575005	1					
ANR	2575781	CompoundStatement		127:53:4403:4403	2575005	1					
ANR	2575782	ExpressionStatement	upd -> icomp = icomp	5084:12:182867:182885	2575005	0	True				
ANR	2575783	AssignmentExpression	upd -> icomp = icomp		2575005	0		=			
ANR	2575784	PtrMemberAccess	upd -> icomp		2575005	0					
ANR	2575785	Identifier	upd		2575005	0					
ANR	2575786	Identifier	icomp		2575005	1					
ANR	2575787	Identifier	icomp		2575005	1					
ANR	2575788	IfStatement	if ( 0 < upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size )		2575005	1					
ANR	2575789	Condition	0 < upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size	5085:15:182902:182947	2575005	0	True				
ANR	2575790	RelationalExpression	0 < upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2575005	0		<			
ANR	2575791	PrimaryExpression	0		2575005	0					
ANR	2575792	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2575005	1					
ANR	2575793	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		2575005	0					
ANR	2575794	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		2575005	0					
ANR	2575795	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2575005	0					
ANR	2575796	PtrMemberAccess	upd -> string_a		2575005	0					
ANR	2575797	Identifier	upd		2575005	0					
ANR	2575798	Identifier	string_a		2575005	1					
ANR	2575799	Identifier	SA_SETCOMP		2575005	1					
ANR	2575800	Identifier	data		2575005	1					
ANR	2575801	Identifier	icomp		2575005	1					
ANR	2575802	Identifier	size		2575005	1					
ANR	2575803	CompoundStatement		129:63:4524:4524	2575005	1					
ANR	2575804	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size )"	5086:15:182967:183134	2575005	0	True				
ANR	2575805	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size )"		2575005	0					
ANR	2575806	Callee	memcpy		2575005	0					
ANR	2575807	Identifier	memcpy		2575005	0					
ANR	2575808	ArgumentList	upd -> outbuf + ioutbuf		2575005	1					
ANR	2575809	Argument	upd -> outbuf + ioutbuf		2575005	0					
ANR	2575810	AdditiveExpression	upd -> outbuf + ioutbuf		2575005	0		+			
ANR	2575811	PtrMemberAccess	upd -> outbuf		2575005	0					
ANR	2575812	Identifier	upd		2575005	0					
ANR	2575813	Identifier	outbuf		2575005	1					
ANR	2575814	Identifier	ioutbuf		2575005	1					
ANR	2575815	Argument	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data		2575005	1					
ANR	2575816	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data		2575005	0					
ANR	2575817	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		2575005	0					
ANR	2575818	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		2575005	0					
ANR	2575819	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2575005	0					
ANR	2575820	PtrMemberAccess	upd -> string_a		2575005	0					
ANR	2575821	Identifier	upd		2575005	0					
ANR	2575822	Identifier	string_a		2575005	1					
ANR	2575823	Identifier	SA_SETCOMP		2575005	1					
ANR	2575824	Identifier	data		2575005	1					
ANR	2575825	Identifier	icomp		2575005	1					
ANR	2575826	Identifier	data		2575005	1					
ANR	2575827	Argument	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2575005	2					
ANR	2575828	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2575005	0					
ANR	2575829	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		2575005	0					
ANR	2575830	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		2575005	0					
ANR	2575831	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2575005	0					
ANR	2575832	PtrMemberAccess	upd -> string_a		2575005	0					
ANR	2575833	Identifier	upd		2575005	0					
ANR	2575834	Identifier	string_a		2575005	1					
ANR	2575835	Identifier	SA_SETCOMP		2575005	1					
ANR	2575836	Identifier	data		2575005	1					
ANR	2575837	Identifier	icomp		2575005	1					
ANR	2575838	Identifier	size		2575005	1					
ANR	2575839	ExpressionStatement	ioutbuf += upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size	5089:15:183151:183204	2575005	1	True				
ANR	2575840	AssignmentExpression	ioutbuf += upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2575005	0		+=			
ANR	2575841	Identifier	ioutbuf		2575005	0					
ANR	2575842	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2575005	1					
ANR	2575843	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		2575005	0					
ANR	2575844	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		2575005	0					
ANR	2575845	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2575005	0					
ANR	2575846	PtrMemberAccess	upd -> string_a		2575005	0					
ANR	2575847	Identifier	upd		2575005	0					
ANR	2575848	Identifier	string_a		2575005	1					
ANR	2575849	Identifier	SA_SETCOMP		2575005	1					
ANR	2575850	Identifier	data		2575005	1					
ANR	2575851	Identifier	icomp		2575005	1					
ANR	2575852	Identifier	size		2575005	1					
ANR	2575853	IfStatement	if ( xbegin != upd -> xprinter )		2575005	3					
ANR	2575854	Condition	xbegin != upd -> xprinter	5095:12:183345:183367	2575005	0	True				
ANR	2575855	EqualityExpression	xbegin != upd -> xprinter		2575005	0		!=			
ANR	2575856	Identifier	xbegin		2575005	0					
ANR	2575857	PtrMemberAccess	upd -> xprinter		2575005	1					
ANR	2575858	Identifier	upd		2575005	0					
ANR	2575859	Identifier	xprinter		2575005	1					
ANR	2575860	CompoundStatement		139:37:4944:4944	2575005	1					
ANR	2575861	IfStatement	if ( 0 == upd -> strings [ S_XMOVE ] . size )		2575005	0					
ANR	2575862	Condition	0 == upd -> strings [ S_XMOVE ] . size	5097:15:183388:183418	2575005	0	True				
ANR	2575863	EqualityExpression	0 == upd -> strings [ S_XMOVE ] . size		2575005	0		==			
ANR	2575864	PrimaryExpression	0		2575005	0					
ANR	2575865	MemberAccess	upd -> strings [ S_XMOVE ] . size		2575005	1					
ANR	2575866	ArrayIndexing	upd -> strings [ S_XMOVE ]		2575005	0					
ANR	2575867	PtrMemberAccess	upd -> strings		2575005	0					
ANR	2575868	Identifier	upd		2575005	0					
ANR	2575869	Identifier	strings		2575005	1					
ANR	2575870	Identifier	S_XMOVE		2575005	1					
ANR	2575871	Identifier	size		2575005	1					
ANR	2575872	CompoundStatement		141:48:4995:4995	2575005	1					
ANR	2575873	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = '\\r'	5099:15:183439:183468	2575005	0	True				
ANR	2575874	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = '\\r'		2575005	0		=			
ANR	2575875	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2575005	0					
ANR	2575876	PtrMemberAccess	upd -> outbuf		2575005	0					
ANR	2575877	Identifier	upd		2575005	0					
ANR	2575878	Identifier	outbuf		2575005	1					
ANR	2575879	PostIncDecOperationExpression	ioutbuf ++		2575005	1					
ANR	2575880	Identifier	ioutbuf		2575005	0					
ANR	2575881	IncDec	++		2575005	1					
ANR	2575882	PrimaryExpression	'\\r'		2575005	1					
ANR	2575883	ExpressionStatement	upd -> xprinter = 0	5100:15:183485:183512	2575005	1	True				
ANR	2575884	AssignmentExpression	upd -> xprinter = 0		2575005	0		=			
ANR	2575885	PtrMemberAccess	upd -> xprinter		2575005	0					
ANR	2575886	Identifier	upd		2575005	0					
ANR	2575887	Identifier	xprinter		2575005	1					
ANR	2575888	PrimaryExpression	0		2575005	1					
ANR	2575889	ExpressionStatement	n = 0	5101:15:183529:183534	2575005	2	True				
ANR	2575890	AssignmentExpression	n = 0		2575005	0		=			
ANR	2575891	Identifier	n		2575005	0					
ANR	2575892	PrimaryExpression	0		2575005	1					
ANR	2575893	ExpressionStatement	x = ixpass	5102:15:183551:183561	2575005	3	True				
ANR	2575894	AssignmentExpression	x = ixpass		2575005	0		=			
ANR	2575895	Identifier	x		2575005	0					
ANR	2575896	Identifier	ixpass		2575005	1					
ANR	2575897	ElseStatement	else		2575005	0					
ANR	2575898	CompoundStatement		148:19:5157:5157	2575005	0					
ANR	2575899	IfStatement	if ( B_XABS & upd -> flags )		2575005	0					
ANR	2575900	Condition	B_XABS & upd -> flags	5106:18:183604:183622	2575005	0	True				
ANR	2575901	BitAndExpression	B_XABS & upd -> flags		2575005	0		&			
ANR	2575902	Identifier	B_XABS		2575005	0					
ANR	2575903	PtrMemberAccess	upd -> flags		2575005	1					
ANR	2575904	Identifier	upd		2575005	0					
ANR	2575905	Identifier	flags		2575005	1					
ANR	2575906	ExpressionStatement	n = x = xbegin + upd -> ints [ I_XOFS ]	5106:39:183625:183659	2575005	1	True				
ANR	2575907	AssignmentExpression	n = x = xbegin + upd -> ints [ I_XOFS ]		2575005	0		=			
ANR	2575908	Identifier	n		2575005	0					
ANR	2575909	AssignmentExpression	x = xbegin + upd -> ints [ I_XOFS ]		2575005	1		=			
ANR	2575910	Identifier	x		2575005	0					
ANR	2575911	AdditiveExpression	xbegin + upd -> ints [ I_XOFS ]		2575005	1		+			
ANR	2575912	Identifier	xbegin		2575005	0					
ANR	2575913	ArrayIndexing	upd -> ints [ I_XOFS ]		2575005	1					
ANR	2575914	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2575915	Identifier	upd		2575005	0					
ANR	2575916	Identifier	ints		2575005	1					
ANR	2575917	Identifier	I_XOFS		2575005	1					
ANR	2575918	ElseStatement	else		2575005	0					
ANR	2575919	ExpressionStatement	n = x = xbegin - upd -> xprinter	5107:39:183700:183730	2575005	0	True				
ANR	2575920	AssignmentExpression	n = x = xbegin - upd -> xprinter		2575005	0		=			
ANR	2575921	Identifier	n		2575005	0					
ANR	2575922	AssignmentExpression	x = xbegin - upd -> xprinter		2575005	1		=			
ANR	2575923	Identifier	x		2575005	0					
ANR	2575924	AdditiveExpression	xbegin - upd -> xprinter		2575005	1		-			
ANR	2575925	Identifier	xbegin		2575005	0					
ANR	2575926	PtrMemberAccess	upd -> xprinter		2575005	1					
ANR	2575927	Identifier	upd		2575005	0					
ANR	2575928	Identifier	xprinter		2575005	1					
ANR	2575929	IfStatement	if ( 1 < upd -> ints [ I_XSTEP ] )		2575005	1					
ANR	2575930	Condition	1 < upd -> ints [ I_XSTEP ]	5109:26:183759:183780	2575005	0	True				
ANR	2575931	RelationalExpression	1 < upd -> ints [ I_XSTEP ]		2575005	0		<			
ANR	2575932	PrimaryExpression	1		2575005	0					
ANR	2575933	ArrayIndexing	upd -> ints [ I_XSTEP ]		2575005	1					
ANR	2575934	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2575935	Identifier	upd		2575005	0					
ANR	2575936	Identifier	ints		2575005	1					
ANR	2575937	Identifier	I_XSTEP		2575005	1					
ANR	2575938	CompoundStatement		153:50:5357:5357	2575005	1					
ANR	2575939	IfStatement	if ( 0 > n )		2575005	0					
ANR	2575940	Condition	0 > n	5110:21:183806:183810	2575005	0	True				
ANR	2575941	RelationalExpression	0 > n		2575005	0		>			
ANR	2575942	PrimaryExpression	0		2575005	0					
ANR	2575943	Identifier	n		2575005	1					
ANR	2575944	CompoundStatement		154:28:5387:5387	2575005	1					
ANR	2575945	ExpressionStatement	n -= upd -> ints [ I_XSTEP ]	5111:21:183836:183860	2575005	0	True				
ANR	2575946	AssignmentExpression	n -= upd -> ints [ I_XSTEP ]		2575005	0		-=			
ANR	2575947	Identifier	n		2575005	0					
ANR	2575948	ArrayIndexing	upd -> ints [ I_XSTEP ]		2575005	1					
ANR	2575949	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2575950	Identifier	upd		2575005	0					
ANR	2575951	Identifier	ints		2575005	1					
ANR	2575952	Identifier	I_XSTEP		2575005	1					
ANR	2575953	ExpressionStatement	x -= n	5112:21:183883:183890	2575005	1	True				
ANR	2575954	AssignmentExpression	x -= n		2575005	0		-=			
ANR	2575955	Identifier	x		2575005	0					
ANR	2575956	Identifier	n		2575005	1					
ANR	2575957	IfStatement	if ( n )		2575005	1					
ANR	2575958	Condition	n	5114:21:183933:183933	2575005	0	True				
ANR	2575959	Identifier	n		2575005	0					
ANR	2575960	ExpressionStatement	n /= upd -> ints [ I_XSTEP ]	5114:24:183936:183960	2575005	1	True				
ANR	2575961	AssignmentExpression	n /= upd -> ints [ I_XSTEP ]		2575005	0		/=			
ANR	2575962	Identifier	n		2575005	0					
ANR	2575963	ArrayIndexing	upd -> ints [ I_XSTEP ]		2575005	1					
ANR	2575964	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2575965	Identifier	upd		2575005	0					
ANR	2575966	Identifier	ints		2575005	1					
ANR	2575967	Identifier	I_XSTEP		2575005	1					
ANR	2575968	IfStatement	if ( x )		2575005	2					
ANR	2575969	Condition	x	5115:21:184001:184001	2575005	0	True				
ANR	2575970	Identifier	x		2575005	0					
ANR	2575971	ExpressionStatement	x %= upd -> ints [ I_XSTEP ]	5115:24:184004:184028	2575005	1	True				
ANR	2575972	AssignmentExpression	x %= upd -> ints [ I_XSTEP ]		2575005	0		%=			
ANR	2575973	Identifier	x		2575005	0					
ANR	2575974	ArrayIndexing	upd -> ints [ I_XSTEP ]		2575005	1					
ANR	2575975	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2575976	Identifier	upd		2575005	0					
ANR	2575977	Identifier	ints		2575005	1					
ANR	2575978	Identifier	I_XSTEP		2575005	1					
ANR	2575979	ElseStatement	else		2575005	0					
ANR	2575980	IfStatement	if ( - 1 > upd -> ints [ I_XSTEP ] )		2575005	0					
ANR	2575981	Condition	- 1 > upd -> ints [ I_XSTEP ]	5117:25:184074:184096	2575005	0	True				
ANR	2575982	RelationalExpression	- 1 > upd -> ints [ I_XSTEP ]		2575005	0		>			
ANR	2575983	UnaryOperationExpression	- 1		2575005	0					
ANR	2575984	UnaryOperator	-		2575005	0					
ANR	2575985	PrimaryExpression	1		2575005	1					
ANR	2575986	ArrayIndexing	upd -> ints [ I_XSTEP ]		2575005	1					
ANR	2575987	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2575988	Identifier	upd		2575005	0					
ANR	2575989	Identifier	ints		2575005	1					
ANR	2575990	Identifier	I_XSTEP		2575005	1					
ANR	2575991	CompoundStatement		161:50:5673:5673	2575005	1					
ANR	2575992	ExpressionStatement	n *= - upd -> ints [ I_XSTEP ]	5118:18:184119:184143	2575005	0	True				
ANR	2575993	AssignmentExpression	n *= - upd -> ints [ I_XSTEP ]		2575005	0		*=			
ANR	2575994	Identifier	n		2575005	0					
ANR	2575995	UnaryOperationExpression	- upd -> ints [ I_XSTEP ]		2575005	1					
ANR	2575996	UnaryOperator	-		2575005	0					
ANR	2575997	ArrayIndexing	upd -> ints [ I_XSTEP ]		2575005	1					
ANR	2575998	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2575999	Identifier	upd		2575005	0					
ANR	2576000	Identifier	ints		2575005	1					
ANR	2576001	Identifier	I_XSTEP		2575005	1					
ANR	2576002	ExpressionStatement	x = 0	5119:18:184184:184190	2575005	1	True				
ANR	2576003	AssignmentExpression	x = 0		2575005	0		=			
ANR	2576004	Identifier	x		2575005	0					
ANR	2576005	PrimaryExpression	0		2575005	1					
ANR	2576006	IfStatement	if ( n )		2575005	2					
ANR	2576007	Condition	n	5122:18:184228:184228	2575005	0	True				
ANR	2576008	Identifier	n		2575005	0					
ANR	2576009	CompoundStatement		166:21:5805:5805	2575005	1					
ANR	2576010	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XMOVE ] . data , upd -> strings [ S_XMOVE ] . size )"	5124:17:184275:184416	2575005	0	True				
ANR	2576011	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XMOVE ] . data , upd -> strings [ S_XMOVE ] . size )"		2575005	0					
ANR	2576012	Callee	memcpy		2575005	0					
ANR	2576013	Identifier	memcpy		2575005	0					
ANR	2576014	ArgumentList	upd -> outbuf + ioutbuf		2575005	1					
ANR	2576015	Argument	upd -> outbuf + ioutbuf		2575005	0					
ANR	2576016	AdditiveExpression	upd -> outbuf + ioutbuf		2575005	0		+			
ANR	2576017	PtrMemberAccess	upd -> outbuf		2575005	0					
ANR	2576018	Identifier	upd		2575005	0					
ANR	2576019	Identifier	outbuf		2575005	1					
ANR	2576020	Identifier	ioutbuf		2575005	1					
ANR	2576021	Argument	upd -> strings [ S_XMOVE ] . data		2575005	1					
ANR	2576022	MemberAccess	upd -> strings [ S_XMOVE ] . data		2575005	0					
ANR	2576023	ArrayIndexing	upd -> strings [ S_XMOVE ]		2575005	0					
ANR	2576024	PtrMemberAccess	upd -> strings		2575005	0					
ANR	2576025	Identifier	upd		2575005	0					
ANR	2576026	Identifier	strings		2575005	1					
ANR	2576027	Identifier	S_XMOVE		2575005	1					
ANR	2576028	Identifier	data		2575005	1					
ANR	2576029	Argument	upd -> strings [ S_XMOVE ] . size		2575005	2					
ANR	2576030	MemberAccess	upd -> strings [ S_XMOVE ] . size		2575005	0					
ANR	2576031	ArrayIndexing	upd -> strings [ S_XMOVE ]		2575005	0					
ANR	2576032	PtrMemberAccess	upd -> strings		2575005	0					
ANR	2576033	Identifier	upd		2575005	0					
ANR	2576034	Identifier	strings		2575005	1					
ANR	2576035	Identifier	S_XMOVE		2575005	1					
ANR	2576036	Identifier	size		2575005	1					
ANR	2576037	ExpressionStatement	ioutbuf += upd -> strings [ S_XMOVE ] . size	5127:18:184436:184473	2575005	1	True				
ANR	2576038	AssignmentExpression	ioutbuf += upd -> strings [ S_XMOVE ] . size		2575005	0		+=			
ANR	2576039	Identifier	ioutbuf		2575005	0					
ANR	2576040	MemberAccess	upd -> strings [ S_XMOVE ] . size		2575005	1					
ANR	2576041	ArrayIndexing	upd -> strings [ S_XMOVE ]		2575005	0					
ANR	2576042	PtrMemberAccess	upd -> strings		2575005	0					
ANR	2576043	Identifier	upd		2575005	0					
ANR	2576044	Identifier	strings		2575005	1					
ANR	2576045	Identifier	S_XMOVE		2575005	1					
ANR	2576046	Identifier	size		2575005	1					
ANR	2576047	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = n & 0xff	5129:18:184494:184532	2575005	2	True				
ANR	2576048	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = n & 0xff		2575005	0		=			
ANR	2576049	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2575005	0					
ANR	2576050	PtrMemberAccess	upd -> outbuf		2575005	0					
ANR	2576051	Identifier	upd		2575005	0					
ANR	2576052	Identifier	outbuf		2575005	1					
ANR	2576053	PostIncDecOperationExpression	ioutbuf ++		2575005	1					
ANR	2576054	Identifier	ioutbuf		2575005	0					
ANR	2576055	IncDec	++		2575005	1					
ANR	2576056	BitAndExpression	n & 0xff		2575005	1		&			
ANR	2576057	Identifier	n		2575005	0					
ANR	2576058	PrimaryExpression	0xff		2575005	1					
ANR	2576059	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff	5130:18:184552:184590	2575005	3	True				
ANR	2576060	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff		2575005	0		=			
ANR	2576061	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2575005	0					
ANR	2576062	PtrMemberAccess	upd -> outbuf		2575005	0					
ANR	2576063	Identifier	upd		2575005	0					
ANR	2576064	Identifier	outbuf		2575005	1					
ANR	2576065	PostIncDecOperationExpression	ioutbuf ++		2575005	1					
ANR	2576066	Identifier	ioutbuf		2575005	0					
ANR	2576067	IncDec	++		2575005	1					
ANR	2576068	BitAndExpression	( n >> 8 ) & 0xff		2575005	1		&			
ANR	2576069	ShiftExpression	n >> 8		2575005	0		>>			
ANR	2576070	Identifier	n		2575005	0					
ANR	2576071	PrimaryExpression	8		2575005	1					
ANR	2576072	PrimaryExpression	0xff		2575005	1					
ANR	2576073	IfStatement	if ( x && 0 < upd -> strings [ S_XSTEP ] . size )		2575005	1					
ANR	2576074	Condition	x && 0 < upd -> strings [ S_XSTEP ] . size	5136:15:184671:184705	2575005	0	True				
ANR	2576075	AndExpression	x && 0 < upd -> strings [ S_XSTEP ] . size		2575005	0		&&			
ANR	2576076	Identifier	x		2575005	0					
ANR	2576077	RelationalExpression	0 < upd -> strings [ S_XSTEP ] . size		2575005	1		<			
ANR	2576078	PrimaryExpression	0		2575005	0					
ANR	2576079	MemberAccess	upd -> strings [ S_XSTEP ] . size		2575005	1					
ANR	2576080	ArrayIndexing	upd -> strings [ S_XSTEP ]		2575005	0					
ANR	2576081	PtrMemberAccess	upd -> strings		2575005	0					
ANR	2576082	Identifier	upd		2575005	0					
ANR	2576083	Identifier	strings		2575005	1					
ANR	2576084	Identifier	S_XSTEP		2575005	1					
ANR	2576085	Identifier	size		2575005	1					
ANR	2576086	CompoundStatement		180:52:6282:6282	2575005	1					
ANR	2576087	WhileStatement	while ( x -- )		2575005	0					
ANR	2576088	Condition	x --	5137:21:184751:184753	2575005	0	True				
ANR	2576089	PostIncDecOperationExpression	x --		2575005	0					
ANR	2576090	Identifier	x		2575005	0					
ANR	2576091	IncDec	--		2575005	1					
ANR	2576092	CompoundStatement		181:26:6330:6330	2575005	1					
ANR	2576093	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XSTEP ] . data , upd -> strings [ S_XSTEP ] . size )"	5138:18:184776:184917	2575005	0	True				
ANR	2576094	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XSTEP ] . data , upd -> strings [ S_XSTEP ] . size )"		2575005	0					
ANR	2576095	Callee	memcpy		2575005	0					
ANR	2576096	Identifier	memcpy		2575005	0					
ANR	2576097	ArgumentList	upd -> outbuf + ioutbuf		2575005	1					
ANR	2576098	Argument	upd -> outbuf + ioutbuf		2575005	0					
ANR	2576099	AdditiveExpression	upd -> outbuf + ioutbuf		2575005	0		+			
ANR	2576100	PtrMemberAccess	upd -> outbuf		2575005	0					
ANR	2576101	Identifier	upd		2575005	0					
ANR	2576102	Identifier	outbuf		2575005	1					
ANR	2576103	Identifier	ioutbuf		2575005	1					
ANR	2576104	Argument	upd -> strings [ S_XSTEP ] . data		2575005	1					
ANR	2576105	MemberAccess	upd -> strings [ S_XSTEP ] . data		2575005	0					
ANR	2576106	ArrayIndexing	upd -> strings [ S_XSTEP ]		2575005	0					
ANR	2576107	PtrMemberAccess	upd -> strings		2575005	0					
ANR	2576108	Identifier	upd		2575005	0					
ANR	2576109	Identifier	strings		2575005	1					
ANR	2576110	Identifier	S_XSTEP		2575005	1					
ANR	2576111	Identifier	data		2575005	1					
ANR	2576112	Argument	upd -> strings [ S_XSTEP ] . size		2575005	2					
ANR	2576113	MemberAccess	upd -> strings [ S_XSTEP ] . size		2575005	0					
ANR	2576114	ArrayIndexing	upd -> strings [ S_XSTEP ]		2575005	0					
ANR	2576115	PtrMemberAccess	upd -> strings		2575005	0					
ANR	2576116	Identifier	upd		2575005	0					
ANR	2576117	Identifier	strings		2575005	1					
ANR	2576118	Identifier	S_XSTEP		2575005	1					
ANR	2576119	Identifier	size		2575005	1					
ANR	2576120	ExpressionStatement	ioutbuf += upd -> strings [ S_XSTEP ] . size	5141:18:184937:184974	2575005	1	True				
ANR	2576121	AssignmentExpression	ioutbuf += upd -> strings [ S_XSTEP ] . size		2575005	0		+=			
ANR	2576122	Identifier	ioutbuf		2575005	0					
ANR	2576123	MemberAccess	upd -> strings [ S_XSTEP ] . size		2575005	1					
ANR	2576124	ArrayIndexing	upd -> strings [ S_XSTEP ]		2575005	0					
ANR	2576125	PtrMemberAccess	upd -> strings		2575005	0					
ANR	2576126	Identifier	upd		2575005	0					
ANR	2576127	Identifier	strings		2575005	1					
ANR	2576128	Identifier	S_XSTEP		2575005	1					
ANR	2576129	Identifier	size		2575005	1					
ANR	2576130	ExpressionStatement	upd -> xprinter = xend + 1	5145:9:185087:185109	2575005	4	True				
ANR	2576131	AssignmentExpression	upd -> xprinter = xend + 1		2575005	0		=			
ANR	2576132	PtrMemberAccess	upd -> xprinter		2575005	0					
ANR	2576133	Identifier	upd		2575005	0					
ANR	2576134	Identifier	xprinter		2575005	1					
ANR	2576135	AdditiveExpression	xend + 1		2575005	1		+			
ANR	2576136	Identifier	xend		2575005	0					
ANR	2576137	PrimaryExpression	1		2575005	1					
ANR	2576138	IfStatement	if ( 0 < upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size )		2575005	5					
ANR	2576139	Condition	0 < upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size	5149:12:185162:185209	2575005	0	True				
ANR	2576140	RelationalExpression	0 < upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2575005	0		<			
ANR	2576141	PrimaryExpression	0		2575005	0					
ANR	2576142	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2575005	1					
ANR	2576143	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		2575005	0					
ANR	2576144	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		2575005	0					
ANR	2576145	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2575005	0					
ANR	2576146	PtrMemberAccess	upd -> string_a		2575005	0					
ANR	2576147	Identifier	upd		2575005	0					
ANR	2576148	Identifier	string_a		2575005	1					
ANR	2576149	Identifier	SA_WRITECOMP		2575005	1					
ANR	2576150	Identifier	data		2575005	1					
ANR	2576151	Identifier	icomp		2575005	1					
ANR	2576152	Identifier	size		2575005	1					
ANR	2576153	CompoundStatement		193:62:6786:6786	2575005	1					
ANR	2576154	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size )"	5150:12:185226:185391	2575005	0	True				
ANR	2576155	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size )"		2575005	0					
ANR	2576156	Callee	memcpy		2575005	0					
ANR	2576157	Identifier	memcpy		2575005	0					
ANR	2576158	ArgumentList	upd -> outbuf + ioutbuf		2575005	1					
ANR	2576159	Argument	upd -> outbuf + ioutbuf		2575005	0					
ANR	2576160	AdditiveExpression	upd -> outbuf + ioutbuf		2575005	0		+			
ANR	2576161	PtrMemberAccess	upd -> outbuf		2575005	0					
ANR	2576162	Identifier	upd		2575005	0					
ANR	2576163	Identifier	outbuf		2575005	1					
ANR	2576164	Identifier	ioutbuf		2575005	1					
ANR	2576165	Argument	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		2575005	1					
ANR	2576166	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		2575005	0					
ANR	2576167	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		2575005	0					
ANR	2576168	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		2575005	0					
ANR	2576169	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2575005	0					
ANR	2576170	PtrMemberAccess	upd -> string_a		2575005	0					
ANR	2576171	Identifier	upd		2575005	0					
ANR	2576172	Identifier	string_a		2575005	1					
ANR	2576173	Identifier	SA_WRITECOMP		2575005	1					
ANR	2576174	Identifier	data		2575005	1					
ANR	2576175	Identifier	icomp		2575005	1					
ANR	2576176	Identifier	data		2575005	1					
ANR	2576177	Argument	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2575005	2					
ANR	2576178	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2575005	0					
ANR	2576179	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		2575005	0					
ANR	2576180	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		2575005	0					
ANR	2576181	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2575005	0					
ANR	2576182	PtrMemberAccess	upd -> string_a		2575005	0					
ANR	2576183	Identifier	upd		2575005	0					
ANR	2576184	Identifier	string_a		2575005	1					
ANR	2576185	Identifier	SA_WRITECOMP		2575005	1					
ANR	2576186	Identifier	data		2575005	1					
ANR	2576187	Identifier	icomp		2575005	1					
ANR	2576188	Identifier	size		2575005	1					
ANR	2576189	ExpressionStatement	ioutbuf += upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size	5153:12:185405:185460	2575005	1	True				
ANR	2576190	AssignmentExpression	ioutbuf += upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2575005	0		+=			
ANR	2576191	Identifier	ioutbuf		2575005	0					
ANR	2576192	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2575005	1					
ANR	2576193	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		2575005	0					
ANR	2576194	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		2575005	0					
ANR	2576195	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2575005	0					
ANR	2576196	PtrMemberAccess	upd -> string_a		2575005	0					
ANR	2576197	Identifier	upd		2575005	0					
ANR	2576198	Identifier	string_a		2575005	1					
ANR	2576199	Identifier	SA_WRITECOMP		2575005	1					
ANR	2576200	Identifier	data		2575005	1					
ANR	2576201	Identifier	icomp		2575005	1					
ANR	2576202	Identifier	size		2575005	1					
ANR	2576203	ExpressionStatement	n = ( xend - xbegin ) / upd -> ints [ I_NXPASS ] + 1	5155:9:185482:185527	2575005	6	True				
ANR	2576204	AssignmentExpression	n = ( xend - xbegin ) / upd -> ints [ I_NXPASS ] + 1		2575005	0		=			
ANR	2576205	Identifier	n		2575005	0					
ANR	2576206	AdditiveExpression	( xend - xbegin ) / upd -> ints [ I_NXPASS ] + 1		2575005	1		+			
ANR	2576207	MultiplicativeExpression	( xend - xbegin ) / upd -> ints [ I_NXPASS ]		2575005	0		/			
ANR	2576208	AdditiveExpression	xend - xbegin		2575005	0		-			
ANR	2576209	Identifier	xend		2575005	0					
ANR	2576210	Identifier	xbegin		2575005	1					
ANR	2576211	ArrayIndexing	upd -> ints [ I_NXPASS ]		2575005	1					
ANR	2576212	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2576213	Identifier	upd		2575005	0					
ANR	2576214	Identifier	ints		2575005	1					
ANR	2576215	Identifier	I_NXPASS		2575005	1					
ANR	2576216	PrimaryExpression	1		2575005	1					
ANR	2576217	ExpressionStatement		5155:55:185528:185528	2575005	7	True				
ANR	2576218	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = n & 255	5156:9:185539:185576	2575005	8	True				
ANR	2576219	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = n & 255		2575005	0		=			
ANR	2576220	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2575005	0					
ANR	2576221	PtrMemberAccess	upd -> outbuf		2575005	0					
ANR	2576222	Identifier	upd		2575005	0					
ANR	2576223	Identifier	outbuf		2575005	1					
ANR	2576224	PostIncDecOperationExpression	ioutbuf ++		2575005	1					
ANR	2576225	Identifier	ioutbuf		2575005	0					
ANR	2576226	IncDec	++		2575005	1					
ANR	2576227	BitAndExpression	n & 255		2575005	1		&			
ANR	2576228	Identifier	n		2575005	0					
ANR	2576229	PrimaryExpression	255		2575005	1					
ANR	2576230	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 255	5157:9:185587:185624	2575005	9	True				
ANR	2576231	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 255		2575005	0		=			
ANR	2576232	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2575005	0					
ANR	2576233	PtrMemberAccess	upd -> outbuf		2575005	0					
ANR	2576234	Identifier	upd		2575005	0					
ANR	2576235	Identifier	outbuf		2575005	1					
ANR	2576236	PostIncDecOperationExpression	ioutbuf ++		2575005	1					
ANR	2576237	Identifier	ioutbuf		2575005	0					
ANR	2576238	IncDec	++		2575005	1					
ANR	2576239	BitAndExpression	( n >> 8 ) & 255		2575005	1		&			
ANR	2576240	ShiftExpression	n >> 8		2575005	0		>>			
ANR	2576241	Identifier	n		2575005	0					
ANR	2576242	PrimaryExpression	8		2575005	1					
ANR	2576243	PrimaryExpression	255		2575005	1					
ANR	2576244	ExpressionStatement	obytes = upd -> outbuf + ioutbuf	5161:9:185671:185702	2575005	10	True				
ANR	2576245	AssignmentExpression	obytes = upd -> outbuf + ioutbuf		2575005	0		=			
ANR	2576246	Identifier	obytes		2575005	0					
ANR	2576247	AdditiveExpression	upd -> outbuf + ioutbuf		2575005	1		+			
ANR	2576248	PtrMemberAccess	upd -> outbuf		2575005	0					
ANR	2576249	Identifier	upd		2575005	0					
ANR	2576250	Identifier	outbuf		2575005	1					
ANR	2576251	Identifier	ioutbuf		2575005	1					
ANR	2576252	ExpressionStatement	n *= ( upd -> ints [ I_PINS2WRITE ] + 7 ) >> 3	5162:9:185713:185754	2575005	11	True				
ANR	2576253	AssignmentExpression	n *= ( upd -> ints [ I_PINS2WRITE ] + 7 ) >> 3		2575005	0		*=			
ANR	2576254	Identifier	n		2575005	0					
ANR	2576255	ShiftExpression	( upd -> ints [ I_PINS2WRITE ] + 7 ) >> 3		2575005	1		>>			
ANR	2576256	AdditiveExpression	upd -> ints [ I_PINS2WRITE ] + 7		2575005	0		+			
ANR	2576257	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		2575005	0					
ANR	2576258	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2576259	Identifier	upd		2575005	0					
ANR	2576260	Identifier	ints		2575005	1					
ANR	2576261	Identifier	I_PINS2WRITE		2575005	1					
ANR	2576262	PrimaryExpression	7		2575005	1					
ANR	2576263	PrimaryExpression	3		2575005	1					
ANR	2576264	ExpressionStatement	"memset ( obytes , 0 , n )"	5163:9:185765:185783	2575005	12	True				
ANR	2576265	CallExpression	"memset ( obytes , 0 , n )"		2575005	0					
ANR	2576266	Callee	memset		2575005	0					
ANR	2576267	Identifier	memset		2575005	0					
ANR	2576268	ArgumentList	obytes		2575005	1					
ANR	2576269	Argument	obytes		2575005	0					
ANR	2576270	Identifier	obytes		2575005	0					
ANR	2576271	Argument	0		2575005	1					
ANR	2576272	PrimaryExpression	0		2575005	0					
ANR	2576273	Argument	n		2575005	2					
ANR	2576274	Identifier	n		2575005	0					
ANR	2576275	ExpressionStatement	ioutbuf += n	5164:9:185794:185806	2575005	13	True				
ANR	2576276	AssignmentExpression	ioutbuf += n		2575005	0		+=			
ANR	2576277	Identifier	ioutbuf		2575005	0					
ANR	2576278	Identifier	n		2575005	1					
ANR	2576279	ForStatement	for ( x = xbegin ; x <= xend ; x += upd -> ints [ I_NXPASS ] )		2575005	14					
ANR	2576280	ForInit	x = xbegin ;	5168:13:185852:185862	2575005	0	True				
ANR	2576281	AssignmentExpression	x = xbegin		2575005	0		=			
ANR	2576282	Identifier	x		2575005	0					
ANR	2576283	Identifier	xbegin		2575005	1					
ANR	2576284	Condition	x <= xend	5168:25:185864:185872	2575005	1	True				
ANR	2576285	RelationalExpression	x <= xend		2575005	0		<=			
ANR	2576286	Identifier	x		2575005	0					
ANR	2576287	Identifier	xend		2575005	1					
ANR	2576288	AssignmentExpression	x += upd -> ints [ I_NXPASS ]	5168:36:185875:185898	2575005	2	True	+=			
ANR	2576289	Identifier	x		2575005	0					
ANR	2576290	ArrayIndexing	upd -> ints [ I_NXPASS ]		2575005	1					
ANR	2576291	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2576292	Identifier	upd		2575005	0					
ANR	2576293	Identifier	ints		2575005	1					
ANR	2576294	Identifier	I_NXPASS		2575005	1					
ANR	2576295	CompoundStatement		212:62:7475:7475	2575005	3					
ANR	2576296	ExpressionStatement	bit = 0x80 >> ( pintop & 7 )	5170:12:185916:185946	2575005	0	True				
ANR	2576297	AssignmentExpression	bit = 0x80 >> ( pintop & 7 )		2575005	0		=			
ANR	2576298	Identifier	bit		2575005	0					
ANR	2576299	ShiftExpression	0x80 >> ( pintop & 7 )		2575005	1		>>			
ANR	2576300	PrimaryExpression	0x80		2575005	0					
ANR	2576301	BitAndExpression	pintop & 7		2575005	1		&			
ANR	2576302	Identifier	pintop		2575005	0					
ANR	2576303	PrimaryExpression	7		2575005	1					
ANR	2576304	ExpressionStatement	obytes += pintop >> 3	5171:12:185960:185979	2575005	1	True				
ANR	2576305	AssignmentExpression	obytes += pintop >> 3		2575005	0		+=			
ANR	2576306	Identifier	obytes		2575005	0					
ANR	2576307	ShiftExpression	pintop >> 3		2575005	1		>>			
ANR	2576308	Identifier	pintop		2575005	0					
ANR	2576309	PrimaryExpression	3		2575005	1					
ANR	2576310	ForStatement	"for ( pin = pintop , y = ybegin ; pin < pinbot ; pin ++ , y += upd -> ints [ I_NYPASS ] )"		2575005	2					
ANR	2576311	ForInit	"pin = pintop , y = ybegin ;"	5173:16:185998:186022	2575005	0	True				
ANR	2576312	Expression	"pin = pintop , y = ybegin"		2575005	0					
ANR	2576313	AssignmentExpression	pin = pintop		2575005	0		=			
ANR	2576314	Identifier	pin		2575005	0					
ANR	2576315	Identifier	pintop		2575005	1					
ANR	2576316	AssignmentExpression	y = ybegin		2575005	1		=			
ANR	2576317	Identifier	y		2575005	0					
ANR	2576318	Identifier	ybegin		2575005	1					
ANR	2576319	Condition	pin < pinbot	5173:42:186024:186035	2575005	1	True				
ANR	2576320	RelationalExpression	pin < pinbot		2575005	0		<			
ANR	2576321	Identifier	pin		2575005	0					
ANR	2576322	Identifier	pinbot		2575005	1					
ANR	2576323	Expression	"pin ++ , y += upd -> ints [ I_NYPASS ]"	5174:16:186054:186091	2575005	2	True				
ANR	2576324	PostIncDecOperationExpression	pin ++		2575005	0					
ANR	2576325	Identifier	pin		2575005	0					
ANR	2576326	IncDec	++		2575005	1					
ANR	2576327	AssignmentExpression	y += upd -> ints [ I_NYPASS ]		2575005	1		+=			
ANR	2576328	Identifier	y		2575005	0					
ANR	2576329	ArrayIndexing	upd -> ints [ I_NYPASS ]		2575005	1					
ANR	2576330	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2576331	Identifier	upd		2575005	0					
ANR	2576332	Identifier	ints		2575005	1					
ANR	2576333	Identifier	I_NYPASS		2575005	1					
ANR	2576334	CompoundStatement		218:56:7668:7668	2575005	3					
ANR	2576335	IfStatement	if ( 0 <= y )		2575005	0					
ANR	2576336	Condition	0 <= y	5175:18:186114:186119	2575005	0	True				
ANR	2576337	RelationalExpression	0 <= y		2575005	0		<=			
ANR	2576338	PrimaryExpression	0		2575005	0					
ANR	2576339	Identifier	y		2575005	1					
ANR	2576340	CompoundStatement		219:26:7696:7696	2575005	1					
ANR	2576341	ExpressionStatement	scan = upd -> scnbuf [ y & upd -> scnmsk ] + icomp	5176:18:186142:186183	2575005	0	True				
ANR	2576342	AssignmentExpression	scan = upd -> scnbuf [ y & upd -> scnmsk ] + icomp		2575005	0		=			
ANR	2576343	Identifier	scan		2575005	0					
ANR	2576344	AdditiveExpression	upd -> scnbuf [ y & upd -> scnmsk ] + icomp		2575005	1		+			
ANR	2576345	ArrayIndexing	upd -> scnbuf [ y & upd -> scnmsk ]		2575005	0					
ANR	2576346	PtrMemberAccess	upd -> scnbuf		2575005	0					
ANR	2576347	Identifier	upd		2575005	0					
ANR	2576348	Identifier	scnbuf		2575005	1					
ANR	2576349	BitAndExpression	y & upd -> scnmsk		2575005	1		&			
ANR	2576350	Identifier	y		2575005	0					
ANR	2576351	PtrMemberAccess	upd -> scnmsk		2575005	1					
ANR	2576352	Identifier	upd		2575005	0					
ANR	2576353	Identifier	scnmsk		2575005	1					
ANR	2576354	Identifier	icomp		2575005	1					
ANR	2576355	IfStatement	if ( scan -> bytes [ x >> 3 ] & ( 0x80 >> ( x & 7 ) ) )		2575005	1					
ANR	2576356	Condition	scan -> bytes [ x >> 3 ] & ( 0x80 >> ( x & 7 ) )	5177:21:186206:186242	2575005	0	True				
ANR	2576357	BitAndExpression	scan -> bytes [ x >> 3 ] & ( 0x80 >> ( x & 7 ) )		2575005	0		&			
ANR	2576358	ArrayIndexing	scan -> bytes [ x >> 3 ]		2575005	0					
ANR	2576359	PtrMemberAccess	scan -> bytes		2575005	0					
ANR	2576360	Identifier	scan		2575005	0					
ANR	2576361	Identifier	bytes		2575005	1					
ANR	2576362	ShiftExpression	x >> 3		2575005	1		>>			
ANR	2576363	Identifier	x		2575005	0					
ANR	2576364	PrimaryExpression	3		2575005	1					
ANR	2576365	ShiftExpression	0x80 >> ( x & 7 )		2575005	1		>>			
ANR	2576366	PrimaryExpression	0x80		2575005	0					
ANR	2576367	BitAndExpression	x & 7		2575005	1		&			
ANR	2576368	Identifier	x		2575005	0					
ANR	2576369	PrimaryExpression	7		2575005	1					
ANR	2576370	ExpressionStatement	* obytes |= bit	5177:60:186245:186259	2575005	1	True				
ANR	2576371	AssignmentExpression	* obytes |= bit		2575005	0		|=			
ANR	2576372	UnaryOperationExpression	* obytes		2575005	0					
ANR	2576373	UnaryOperator	*		2575005	0					
ANR	2576374	Identifier	obytes		2575005	1					
ANR	2576375	Identifier	bit		2575005	1					
ANR	2576376	IfStatement	if ( ! ( bit >>= 1 ) )		2575005	1					
ANR	2576377	Condition	! ( bit >>= 1 )	5179:18:186296:186307	2575005	0	True				
ANR	2576378	UnaryOperationExpression	! ( bit >>= 1 )		2575005	0					
ANR	2576379	UnaryOperator	!		2575005	0					
ANR	2576380	AssignmentExpression	bit >>= 1		2575005	1		>>=			
ANR	2576381	Identifier	bit		2575005	0					
ANR	2576382	PrimaryExpression	1		2575005	1					
ANR	2576383	CompoundStatement		223:32:7884:7884	2575005	1					
ANR	2576384	ExpressionStatement	obytes ++	5179:34:186312:186320	2575005	0	True				
ANR	2576385	PostIncDecOperationExpression	obytes ++		2575005	0					
ANR	2576386	Identifier	obytes		2575005	0					
ANR	2576387	IncDec	++		2575005	1					
ANR	2576388	ExpressionStatement	bit = 0x80	5179:44:186322:186332	2575005	1	True				
ANR	2576389	AssignmentExpression	bit = 0x80		2575005	0		=			
ANR	2576390	Identifier	bit		2575005	0					
ANR	2576391	PrimaryExpression	0x80		2575005	1					
ANR	2576392	ExpressionStatement	obytes += ( upd -> ints [ I_PINS2WRITE ] - pinbot + 7 ) >> 3	5182:12:186363:186410	2575005	3	True				
ANR	2576393	AssignmentExpression	obytes += ( upd -> ints [ I_PINS2WRITE ] - pinbot + 7 ) >> 3		2575005	0		+=			
ANR	2576394	Identifier	obytes		2575005	0					
ANR	2576395	ShiftExpression	( upd -> ints [ I_PINS2WRITE ] - pinbot + 7 ) >> 3		2575005	1		>>			
ANR	2576396	AdditiveExpression	upd -> ints [ I_PINS2WRITE ] - pinbot + 7		2575005	0		-			
ANR	2576397	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		2575005	0					
ANR	2576398	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2576399	Identifier	upd		2575005	0					
ANR	2576400	Identifier	ints		2575005	1					
ANR	2576401	Identifier	I_PINS2WRITE		2575005	1					
ANR	2576402	AdditiveExpression	pinbot + 7		2575005	1		+			
ANR	2576403	Identifier	pinbot		2575005	0					
ANR	2576404	PrimaryExpression	7		2575005	1					
ANR	2576405	PrimaryExpression	3		2575005	1					
ANR	2576406	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	5187:9:186483:186516	2575005	15	True				
ANR	2576407	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		2575005	0					
ANR	2576408	Callee	fwrite		2575005	0					
ANR	2576409	Identifier	fwrite		2575005	0					
ANR	2576410	ArgumentList	upd -> outbuf		2575005	1					
ANR	2576411	Argument	upd -> outbuf		2575005	0					
ANR	2576412	PtrMemberAccess	upd -> outbuf		2575005	0					
ANR	2576413	Identifier	upd		2575005	0					
ANR	2576414	Identifier	outbuf		2575005	1					
ANR	2576415	Argument	1		2575005	1					
ANR	2576416	PrimaryExpression	1		2575005	0					
ANR	2576417	Argument	ioutbuf		2575005	2					
ANR	2576418	Identifier	ioutbuf		2575005	0					
ANR	2576419	Argument	out		2575005	3					
ANR	2576420	Identifier	out		2575005	0					
ANR	2576421	ExpressionStatement	ioutbuf = 0	5188:9:186527:186538	2575005	16	True				
ANR	2576422	AssignmentExpression	ioutbuf = 0		2575005	0		=			
ANR	2576423	Identifier	ioutbuf		2575005	0					
ANR	2576424	PrimaryExpression	0		2575005	1					
ANR	2576425	IfStatement	if ( upd -> yscan < upd -> ints [ I_BEG_Y ] )		2575005	10					
ANR	2576426	Condition	upd -> yscan < upd -> ints [ I_BEG_Y ]	5194:6:186715:186745	2575005	0	True				
ANR	2576427	RelationalExpression	upd -> yscan < upd -> ints [ I_BEG_Y ]		2575005	0		<			
ANR	2576428	PtrMemberAccess	upd -> yscan		2575005	0					
ANR	2576429	Identifier	upd		2575005	0					
ANR	2576430	Identifier	yscan		2575005	1					
ANR	2576431	ArrayIndexing	upd -> ints [ I_BEG_Y ]		2575005	1					
ANR	2576432	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2576433	Identifier	upd		2575005	0					
ANR	2576434	Identifier	ints		2575005	1					
ANR	2576435	Identifier	I_BEG_Y		2575005	1					
ANR	2576436	CompoundStatement		238:39:8322:8322	2575005	1					
ANR	2576437	ExpressionStatement	upd -> yscan += upd -> int_a [ IA_BEG_DY ] . data [ upd -> ipass ++ ]	5195:6:186756:186810	2575005	0	True				
ANR	2576438	AssignmentExpression	upd -> yscan += upd -> int_a [ IA_BEG_DY ] . data [ upd -> ipass ++ ]		2575005	0		+=			
ANR	2576439	PtrMemberAccess	upd -> yscan		2575005	0					
ANR	2576440	Identifier	upd		2575005	0					
ANR	2576441	Identifier	yscan		2575005	1					
ANR	2576442	ArrayIndexing	upd -> int_a [ IA_BEG_DY ] . data [ upd -> ipass ++ ]		2575005	1					
ANR	2576443	MemberAccess	upd -> int_a [ IA_BEG_DY ] . data		2575005	0					
ANR	2576444	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		2575005	0					
ANR	2576445	PtrMemberAccess	upd -> int_a		2575005	0					
ANR	2576446	Identifier	upd		2575005	0					
ANR	2576447	Identifier	int_a		2575005	1					
ANR	2576448	Identifier	IA_BEG_DY		2575005	1					
ANR	2576449	Identifier	data		2575005	1					
ANR	2576450	PostIncDecOperationExpression	upd -> ipass ++		2575005	1					
ANR	2576451	PtrMemberAccess	upd -> ipass		2575005	0					
ANR	2576452	Identifier	upd		2575005	0					
ANR	2576453	Identifier	ipass		2575005	1					
ANR	2576454	IncDec	++		2575005	1					
ANR	2576455	IfStatement	if ( upd -> ints [ I_BEG_Y ] <= upd -> yscan )		2575005	1					
ANR	2576456	Condition	upd -> ints [ I_BEG_Y ] <= upd -> yscan	5196:14:186826:186857	2575005	0	True				
ANR	2576457	RelationalExpression	upd -> ints [ I_BEG_Y ] <= upd -> yscan		2575005	0		<=			
ANR	2576458	ArrayIndexing	upd -> ints [ I_BEG_Y ]		2575005	0					
ANR	2576459	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2576460	Identifier	upd		2575005	0					
ANR	2576461	Identifier	ints		2575005	1					
ANR	2576462	Identifier	I_BEG_Y		2575005	1					
ANR	2576463	PtrMemberAccess	upd -> yscan		2575005	1					
ANR	2576464	Identifier	upd		2575005	0					
ANR	2576465	Identifier	yscan		2575005	1					
ANR	2576466	ExpressionStatement	upd -> ipass = 0	5196:48:186860:186874	2575005	1	True				
ANR	2576467	AssignmentExpression	upd -> ipass = 0		2575005	0		=			
ANR	2576468	PtrMemberAccess	upd -> ipass		2575005	0					
ANR	2576469	Identifier	upd		2575005	0					
ANR	2576470	Identifier	ipass		2575005	1					
ANR	2576471	PrimaryExpression	0		2575005	1					
ANR	2576472	ElseStatement	else		2575005	0					
ANR	2576473	IfStatement	if ( upd -> int_a [ IA_BEG_DY ] . size <= upd -> ipass )		2575005	0					
ANR	2576474	Condition	upd -> int_a [ IA_BEG_DY ] . size <= upd -> ipass	5197:14:186890:186929	2575005	0	True				
ANR	2576475	RelationalExpression	upd -> int_a [ IA_BEG_DY ] . size <= upd -> ipass		2575005	0		<=			
ANR	2576476	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		2575005	0					
ANR	2576477	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		2575005	0					
ANR	2576478	PtrMemberAccess	upd -> int_a		2575005	0					
ANR	2576479	Identifier	upd		2575005	0					
ANR	2576480	Identifier	int_a		2575005	1					
ANR	2576481	Identifier	IA_BEG_DY		2575005	1					
ANR	2576482	Identifier	size		2575005	1					
ANR	2576483	PtrMemberAccess	upd -> ipass		2575005	1					
ANR	2576484	Identifier	upd		2575005	0					
ANR	2576485	Identifier	ipass		2575005	1					
ANR	2576486	ExpressionStatement	upd -> ipass = 0	5197:56:186932:186946	2575005	1	True				
ANR	2576487	AssignmentExpression	upd -> ipass = 0		2575005	0		=			
ANR	2576488	PtrMemberAccess	upd -> ipass		2575005	0					
ANR	2576489	Identifier	upd		2575005	0					
ANR	2576490	Identifier	ipass		2575005	1					
ANR	2576491	PrimaryExpression	0		2575005	1					
ANR	2576492	ElseStatement	else		2575005	0					
ANR	2576493	IfStatement	if ( upd -> yscan >= upd -> ints [ I_END_Y ] )		2575005	0					
ANR	2576494	Condition	upd -> yscan >= upd -> ints [ I_END_Y ]	5198:13:186961:186992	2575005	0	True				
ANR	2576495	RelationalExpression	upd -> yscan >= upd -> ints [ I_END_Y ]		2575005	0		>=			
ANR	2576496	PtrMemberAccess	upd -> yscan		2575005	0					
ANR	2576497	Identifier	upd		2575005	0					
ANR	2576498	Identifier	yscan		2575005	1					
ANR	2576499	ArrayIndexing	upd -> ints [ I_END_Y ]		2575005	1					
ANR	2576500	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2576501	Identifier	upd		2575005	0					
ANR	2576502	Identifier	ints		2575005	1					
ANR	2576503	Identifier	I_END_Y		2575005	1					
ANR	2576504	CompoundStatement		242:47:8569:8569	2575005	1					
ANR	2576505	ExpressionStatement	upd -> yscan += upd -> int_a [ IA_END_DY ] . data [ upd -> ipass ++ ]	5199:6:187003:187057	2575005	0	True				
ANR	2576506	AssignmentExpression	upd -> yscan += upd -> int_a [ IA_END_DY ] . data [ upd -> ipass ++ ]		2575005	0		+=			
ANR	2576507	PtrMemberAccess	upd -> yscan		2575005	0					
ANR	2576508	Identifier	upd		2575005	0					
ANR	2576509	Identifier	yscan		2575005	1					
ANR	2576510	ArrayIndexing	upd -> int_a [ IA_END_DY ] . data [ upd -> ipass ++ ]		2575005	1					
ANR	2576511	MemberAccess	upd -> int_a [ IA_END_DY ] . data		2575005	0					
ANR	2576512	ArrayIndexing	upd -> int_a [ IA_END_DY ]		2575005	0					
ANR	2576513	PtrMemberAccess	upd -> int_a		2575005	0					
ANR	2576514	Identifier	upd		2575005	0					
ANR	2576515	Identifier	int_a		2575005	1					
ANR	2576516	Identifier	IA_END_DY		2575005	1					
ANR	2576517	Identifier	data		2575005	1					
ANR	2576518	PostIncDecOperationExpression	upd -> ipass ++		2575005	1					
ANR	2576519	PtrMemberAccess	upd -> ipass		2575005	0					
ANR	2576520	Identifier	upd		2575005	0					
ANR	2576521	Identifier	ipass		2575005	1					
ANR	2576522	IncDec	++		2575005	1					
ANR	2576523	IfStatement	if ( upd -> int_a [ IA_END_DY ] . size <= upd -> ipass )		2575005	1					
ANR	2576524	Condition	upd -> int_a [ IA_END_DY ] . size <= upd -> ipass	5200:9:187068:187107	2575005	0	True				
ANR	2576525	RelationalExpression	upd -> int_a [ IA_END_DY ] . size <= upd -> ipass		2575005	0		<=			
ANR	2576526	MemberAccess	upd -> int_a [ IA_END_DY ] . size		2575005	0					
ANR	2576527	ArrayIndexing	upd -> int_a [ IA_END_DY ]		2575005	0					
ANR	2576528	PtrMemberAccess	upd -> int_a		2575005	0					
ANR	2576529	Identifier	upd		2575005	0					
ANR	2576530	Identifier	int_a		2575005	1					
ANR	2576531	Identifier	IA_END_DY		2575005	1					
ANR	2576532	Identifier	size		2575005	1					
ANR	2576533	PtrMemberAccess	upd -> ipass		2575005	1					
ANR	2576534	Identifier	upd		2575005	0					
ANR	2576535	Identifier	ipass		2575005	1					
ANR	2576536	ExpressionStatement	upd -> ipass = 0	5200:51:187110:187124	2575005	1	True				
ANR	2576537	AssignmentExpression	upd -> ipass = 0		2575005	0		=			
ANR	2576538	PtrMemberAccess	upd -> ipass		2575005	0					
ANR	2576539	Identifier	upd		2575005	0					
ANR	2576540	Identifier	ipass		2575005	1					
ANR	2576541	PrimaryExpression	0		2575005	1					
ANR	2576542	ElseStatement	else		2575005	0					
ANR	2576543	CompoundStatement		245:10:8710:8710	2575005	0					
ANR	2576544	ExpressionStatement	upd -> yscan += upd -> int_a [ IA_STD_DY ] . data [ upd -> ipass ++ ]	5202:6:187144:187198	2575005	0	True				
ANR	2576545	AssignmentExpression	upd -> yscan += upd -> int_a [ IA_STD_DY ] . data [ upd -> ipass ++ ]		2575005	0		+=			
ANR	2576546	PtrMemberAccess	upd -> yscan		2575005	0					
ANR	2576547	Identifier	upd		2575005	0					
ANR	2576548	Identifier	yscan		2575005	1					
ANR	2576549	ArrayIndexing	upd -> int_a [ IA_STD_DY ] . data [ upd -> ipass ++ ]		2575005	1					
ANR	2576550	MemberAccess	upd -> int_a [ IA_STD_DY ] . data		2575005	0					
ANR	2576551	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		2575005	0					
ANR	2576552	PtrMemberAccess	upd -> int_a		2575005	0					
ANR	2576553	Identifier	upd		2575005	0					
ANR	2576554	Identifier	int_a		2575005	1					
ANR	2576555	Identifier	IA_STD_DY		2575005	1					
ANR	2576556	Identifier	data		2575005	1					
ANR	2576557	PostIncDecOperationExpression	upd -> ipass ++		2575005	1					
ANR	2576558	PtrMemberAccess	upd -> ipass		2575005	0					
ANR	2576559	Identifier	upd		2575005	0					
ANR	2576560	Identifier	ipass		2575005	1					
ANR	2576561	IncDec	++		2575005	1					
ANR	2576562	IfStatement	if ( upd -> int_a [ IA_STD_DY ] . size <= upd -> ipass )		2575005	1					
ANR	2576563	Condition	upd -> int_a [ IA_STD_DY ] . size <= upd -> ipass	5203:9:187209:187248	2575005	0	True				
ANR	2576564	RelationalExpression	upd -> int_a [ IA_STD_DY ] . size <= upd -> ipass		2575005	0		<=			
ANR	2576565	MemberAccess	upd -> int_a [ IA_STD_DY ] . size		2575005	0					
ANR	2576566	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		2575005	0					
ANR	2576567	PtrMemberAccess	upd -> int_a		2575005	0					
ANR	2576568	Identifier	upd		2575005	0					
ANR	2576569	Identifier	int_a		2575005	1					
ANR	2576570	Identifier	IA_STD_DY		2575005	1					
ANR	2576571	Identifier	size		2575005	1					
ANR	2576572	PtrMemberAccess	upd -> ipass		2575005	1					
ANR	2576573	Identifier	upd		2575005	0					
ANR	2576574	Identifier	ipass		2575005	1					
ANR	2576575	ExpressionStatement	upd -> ipass = 0	5203:51:187251:187265	2575005	1	True				
ANR	2576576	AssignmentExpression	upd -> ipass = 0		2575005	0		=			
ANR	2576577	PtrMemberAccess	upd -> ipass		2575005	0					
ANR	2576578	Identifier	upd		2575005	0					
ANR	2576579	Identifier	ipass		2575005	1					
ANR	2576580	PrimaryExpression	0		2575005	1					
ANR	2576581	IfStatement	if ( upd -> yscan >= upd -> ints [ I_END_Y ] )		2575005	2					
ANR	2576582	Condition	upd -> yscan >= upd -> ints [ I_END_Y ]	5204:9:187276:187307	2575005	0	True				
ANR	2576583	RelationalExpression	upd -> yscan >= upd -> ints [ I_END_Y ]		2575005	0		>=			
ANR	2576584	PtrMemberAccess	upd -> yscan		2575005	0					
ANR	2576585	Identifier	upd		2575005	0					
ANR	2576586	Identifier	yscan		2575005	1					
ANR	2576587	ArrayIndexing	upd -> ints [ I_END_Y ]		2575005	1					
ANR	2576588	PtrMemberAccess	upd -> ints		2575005	0					
ANR	2576589	Identifier	upd		2575005	0					
ANR	2576590	Identifier	ints		2575005	1					
ANR	2576591	Identifier	I_END_Y		2575005	1					
ANR	2576592	ExpressionStatement	upd -> ipass = 0	5204:51:187318:187332	2575005	1	True				
ANR	2576593	AssignmentExpression	upd -> ipass = 0		2575005	0		=			
ANR	2576594	PtrMemberAccess	upd -> ipass		2575005	0					
ANR	2576595	Identifier	upd		2575005	0					
ANR	2576596	Identifier	ipass		2575005	1					
ANR	2576597	PrimaryExpression	0		2575005	1					
ANR	2576598	ReturnStatement	return 0 ;	5207:3:187343:187351	2575005	11	True				
ANR	2576599	PrimaryExpression	0		2575005	0					
ANR	2576600	ReturnType	static int		2575005	1					
ANR	2576601	Identifier	upd_wrtescp		2575005	2					
ANR	2576602	ParameterList	"upd_p upd , FILE * out"		2575005	3					
ANR	2576603	Parameter	upd_p upd	4956:12:178403:178411	2575005	0	True				
ANR	2576604	ParameterType	upd_p		2575005	0					
ANR	2576605	Identifier	upd		2575005	1					
ANR	2576606	Parameter	FILE * out	4956:23:178414:178422	2575005	1	True				
ANR	2576607	ParameterType	FILE *		2575005	0					
ANR	2576608	Identifier	out		2575005	1					
ANR	2576609	CFGEntryNode	ENTRY		2575005		True				
ANR	2576610	CFGExitNode	EXIT		2575005		True				
ANR	2576611	Symbol	I_PINS2WRITE		2575005						
ANR	2576612	Symbol	* upd -> int_a		2575005						
ANR	2576613	Symbol	* x		2575005						
ANR	2576614	Symbol	* y		2575005						
ANR	2576615	Symbol	* * IA_STD_DY		2575005						
ANR	2576616	Symbol	* I_YSTEP		2575005						
ANR	2576617	Symbol	pinbot		2575005						
ANR	2576618	Symbol	bit		2575005						
ANR	2576619	Symbol	upd -> int_a [ IA_STD_DY ] . data		2575005						
ANR	2576620	Symbol	icomp		2575005						
ANR	2576621	Symbol	upd -> yscan		2575005						
ANR	2576622	Symbol	scan -> xend		2575005						
ANR	2576623	Symbol	* upd -> string_a [ SA_WRITECOMP ] . data		2575005						
ANR	2576624	Symbol	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data		2575005						
ANR	2576625	Symbol	* scan		2575005						
ANR	2576626	Symbol	* IA_BEG_IX		2575005						
ANR	2576627	Symbol	* upd -> int_a [ IA_BEG_DY ] . data		2575005						
ANR	2576628	Symbol	S_SETLF		2575005						
ANR	2576629	Symbol	upd -> int_a [ IA_BEG_DY ] . data		2575005						
ANR	2576630	Symbol	* upd -> scnbuf		2575005						
ANR	2576631	Symbol	upd -> string_a [ SA_SETCOMP ] . data		2575005						
ANR	2576632	Symbol	upd		2575005						
ANR	2576633	Symbol	* SA_WRITECOMP		2575005						
ANR	2576634	Symbol	I_NXPASS		2575005						
ANR	2576635	Symbol	* I_NYPASS		2575005						
ANR	2576636	Symbol	* * SA_SETCOMP		2575005						
ANR	2576637	Symbol	B_YABS		2575005						
ANR	2576638	Symbol	scan [ icomp ] . xbegin		2575005						
ANR	2576639	Symbol	* IA_BEGBOT		2575005						
ANR	2576640	Symbol	* * scan		2575005						
ANR	2576641	Symbol	* I_BEG_Y		2575005						
ANR	2576642	Symbol	* upd -> ipass		2575005						
ANR	2576643	Symbol	* upd -> outbuf		2575005						
ANR	2576644	Symbol	* IA_END_IX		2575005						
ANR	2576645	Symbol	upd -> strings [ S_SETLF ] . size		2575005						
ANR	2576646	Symbol	* * icomp		2575005						
ANR	2576647	Symbol	ixpass		2575005						
ANR	2576648	Symbol	upd -> pwidth		2575005						
ANR	2576649	Symbol	* scan [ icomp ] . xend		2575005						
ANR	2576650	Symbol	n2do		2575005						
ANR	2576651	Symbol	scan		2575005						
ANR	2576652	Symbol	upd -> strings		2575005						
ANR	2576653	Symbol	* IA_STD_IX		2575005						
ANR	2576654	Symbol	* * IA_BEGBOT		2575005						
ANR	2576655	Symbol	upd -> int_a [ IA_STD_DY ] . size		2575005						
ANR	2576656	Symbol	I_BEG_Y		2575005						
ANR	2576657	Symbol	out		2575005						
ANR	2576658	Symbol	upd -> flags		2575005						
ANR	2576659	Symbol	* upd -> string_a [ SA_SETCOMP ] . data		2575005						
ANR	2576660	Symbol	* upd		2575005						
ANR	2576661	Symbol	* upd -> int_a [ IA_END_IX ] . data		2575005						
ANR	2576662	Symbol	* S_XMOVE		2575005						
ANR	2576663	Symbol	xend		2575005						
ANR	2576664	Symbol	obytes		2575005						
ANR	2576665	Symbol	* upd -> scnmsk		2575005						
ANR	2576666	Symbol	IA_BEG_IX		2575005						
ANR	2576667	Symbol	upd -> ocomp		2575005						
ANR	2576668	Symbol	* upd -> strings		2575005						
ANR	2576669	Symbol	* I_XOFS		2575005						
ANR	2576670	Symbol	upd -> int_a [ IA_BEG_IX ] . data		2575005						
ANR	2576671	Symbol	* upd -> int_a [ IA_END_DY ] . data		2575005						
ANR	2576672	Symbol	upd -> strings [ S_YMOVE ] . size		2575005						
ANR	2576673	Symbol	* S_XSTEP		2575005						
ANR	2576674	Symbol	* scan [ icomp ] . xbegin		2575005						
ANR	2576675	Symbol	IA_BEGBOT		2575005						
ANR	2576676	Symbol	upd -> int_a [ IA_END_DY ] . data		2575005						
ANR	2576677	Symbol	xbegin		2575005						
ANR	2576678	Symbol	I_XSTEP		2575005						
ANR	2576679	Symbol	n		2575005						
ANR	2576680	Symbol	* * upd -> int_a		2575005						
ANR	2576681	Symbol	* * IA_STD_IX		2575005						
ANR	2576682	Symbol	I_YOFS		2575005						
ANR	2576683	Symbol	IA_STD_IX		2575005						
ANR	2576684	Symbol	upd -> yprinter		2575005						
ANR	2576685	Symbol	ioutbuf		2575005						
ANR	2576686	Symbol	IA_END_IX		2575005						
ANR	2576687	Symbol	S_YMOVE		2575005						
ANR	2576688	Symbol	upd -> string_a [ SA_WRITECOMP ] . data		2575005						
ANR	2576689	Symbol	S_YSTEP		2575005						
ANR	2576690	Symbol	x		2575005						
ANR	2576691	Symbol	y		2575005						
ANR	2576692	Symbol	upd -> lf		2575005						
ANR	2576693	Symbol	* I_END_Y		2575005						
ANR	2576694	Symbol	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		2575005						
ANR	2576695	Symbol	* * upd		2575005						
ANR	2576696	Symbol	* * IA_END_IX		2575005						
ANR	2576697	Symbol	S_XMOVE		2575005						
ANR	2576698	Symbol	* upd -> string_a		2575005						
ANR	2576699	Symbol	* IA_BEG_DY		2575005						
ANR	2576700	Symbol	SA_SETCOMP		2575005						
ANR	2576701	Symbol	* * IA_ENDTOP		2575005						
ANR	2576702	Symbol	upd -> icomp		2575005						
ANR	2576703	Symbol	* * IA_END_DY		2575005						
ANR	2576704	Symbol	upd -> ipass		2575005						
ANR	2576705	Symbol	* S_SETLF		2575005						
ANR	2576706	Symbol	upd -> strings [ S_YSTEP ] . size		2575005						
ANR	2576707	Symbol	* SA_SETCOMP		2575005						
ANR	2576708	Symbol	upd -> strings [ S_XSTEP ] . data		2575005						
ANR	2576709	Symbol	* upd -> int_a [ IA_BEGBOT ] . data		2575005						
ANR	2576710	Symbol	* * IA_BEG_IX		2575005						
ANR	2576711	Symbol	* I_NXPASS		2575005						
ANR	2576712	Symbol	upd -> strings [ S_XMOVE ] . data		2575005						
ANR	2576713	Symbol	* scan -> bytes		2575005						
ANR	2576714	Symbol	upd -> int_a		2575005						
ANR	2576715	Symbol	pin		2575005						
ANR	2576716	Symbol	* upd -> int_a [ IA_STD_IX ] . data		2575005						
ANR	2576717	Symbol	* I_BEGSKIP		2575005						
ANR	2576718	Symbol	upd -> strings [ S_SETLF ] . data		2575005						
ANR	2576719	Symbol	* I_XSTEP		2575005						
ANR	2576720	Symbol	scan -> bytes		2575005						
ANR	2576721	Symbol	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2575005						
ANR	2576722	Symbol	upd -> int_a [ IA_ENDTOP ] . data		2575005						
ANR	2576723	Symbol	* upd -> int_a [ IA_ENDTOP ] . data		2575005						
ANR	2576724	Symbol	* scan -> xend		2575005						
ANR	2576725	Symbol	* upd -> int_a [ IA_BEG_IX ] . data		2575005						
ANR	2576726	Symbol	SA_WRITECOMP		2575005						
ANR	2576727	Symbol	upd -> int_a [ IA_END_IX ] . data		2575005						
ANR	2576728	Symbol	upd -> xprinter		2575005						
ANR	2576729	Symbol	upd -> int_a [ IA_STD_IX ] . data		2575005						
ANR	2576730	Symbol	pintop		2575005						
ANR	2576731	Symbol	upd -> ints		2575005						
ANR	2576732	Symbol	* ixpass		2575005						
ANR	2576733	Symbol	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2575005						
ANR	2576734	Symbol	upd -> strings [ S_XSTEP ] . size		2575005						
ANR	2576735	Symbol	upd -> strings [ S_YSTEP ] . data		2575005						
ANR	2576736	Symbol	I_XOFS		2575005						
ANR	2576737	Symbol	I_BEGSKIP		2575005						
ANR	2576738	Symbol	upd -> int_a [ IA_END_DY ] . size		2575005						
ANR	2576739	Symbol	* obytes		2575005						
ANR	2576740	Symbol	B_XABS		2575005						
ANR	2576741	Symbol	* icomp		2575005						
ANR	2576742	Symbol	upd -> int_a [ IA_BEG_DY ] . size		2575005						
ANR	2576743	Symbol	* IA_ENDTOP		2575005						
ANR	2576744	Symbol	upd -> strings [ S_YMOVE ] . data		2575005						
ANR	2576745	Symbol	* IA_END_DY		2575005						
ANR	2576746	Symbol	* IA_STD_DY		2575005						
ANR	2576747	Symbol	I_NYPASS		2575005						
ANR	2576748	Symbol	* * upd -> string_a		2575005						
ANR	2576749	Symbol	IA_STD_DY		2575005						
ANR	2576750	Symbol	scan [ icomp ] . xend		2575005						
ANR	2576751	Symbol	ybegin		2575005						
ANR	2576752	Symbol	* * SA_WRITECOMP		2575005						
ANR	2576753	Symbol	* I_YOFS		2575005						
ANR	2576754	Symbol	* S_YMOVE		2575005						
ANR	2576755	Symbol	upd -> scnmsk		2575005						
ANR	2576756	Symbol	* * * upd		2575005						
ANR	2576757	Symbol	upd -> strings [ S_XMOVE ] . size		2575005						
ANR	2576758	Symbol	IA_ENDTOP		2575005						
ANR	2576759	Symbol	IA_END_DY		2575005						
ANR	2576760	Symbol	I_END_Y		2575005						
ANR	2576761	Symbol	* S_YSTEP		2575005						
ANR	2576762	Symbol	upd -> string_a		2575005						
ANR	2576763	Symbol	* upd -> ints		2575005						
ANR	2576764	Symbol	* I_PINS2WRITE		2575005						
ANR	2576765	Symbol	upd -> scnbuf		2575005						
ANR	2576766	Symbol	upd -> string_a [ SA_SETCOMP ] . size		2575005						
ANR	2576767	Symbol	S_XSTEP		2575005						
ANR	2576768	Symbol	yend		2575005						
ANR	2576769	Symbol	IA_BEG_DY		2575005						
ANR	2576770	Symbol	* upd -> int_a [ IA_STD_DY ] . data		2575005						
ANR	2576771	Symbol	upd -> outbuf		2575005						
ANR	2576772	Symbol	upd -> int_a [ IA_BEGBOT ] . data		2575005						
ANR	2576773	Symbol	* * IA_BEG_DY		2575005						
ANR	2576774	Symbol	I_YSTEP		2575005						
ANR	2576775	Function	upd_open_wrtescp2	5214:0:187579:200309							
ANR	2576776	FunctionDef	upd_open_wrtescp2 (upd_device * udev)		2576775	0					
ANR	2576777	CompoundStatement		5216:0:187626:200309	2576775	0					
ANR	2576778	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	5217:3:187631:187675	2576775	0	True				
ANR	2576779	IdentifierDecl	upd = udev -> upd		2576775	0					
ANR	2576780	IdentifierDeclType	const upd_p		2576775	0					
ANR	2576781	Identifier	upd		2576775	1					
ANR	2576782	AssignmentExpression	upd = udev -> upd		2576775	2		=			
ANR	2576783	Identifier	upd		2576775	0					
ANR	2576784	PtrMemberAccess	udev -> upd		2576775	1					
ANR	2576785	Identifier	udev		2576775	0					
ANR	2576786	Identifier	upd		2576775	1					
ANR	2576787	IdentifierDeclStatement	int error = 0 ;	5218:3:187680:187716	2576775	1	True				
ANR	2576788	IdentifierDecl	error = 0		2576775	0					
ANR	2576789	IdentifierDeclType	int		2576775	0					
ANR	2576790	Identifier	error		2576775	1					
ANR	2576791	AssignmentExpression	error = 0		2576775	2		=			
ANR	2576792	Identifier	error		2576775	0					
ANR	2576793	PrimaryExpression	0		2576775	1					
ANR	2576794	IdentifierDeclStatement	float pixels_per_inch = 360.0 ;	5219:3:187721:187761	2576775	2	True				
ANR	2576795	IdentifierDecl	pixels_per_inch = 360.0		2576775	0					
ANR	2576796	IdentifierDeclType	float		2576775	0					
ANR	2576797	Identifier	pixels_per_inch		2576775	1					
ANR	2576798	AssignmentExpression	pixels_per_inch = 360.0		2576775	2		=			
ANR	2576799	Identifier	pixels_per_inch		2576775	0					
ANR	2576800	PrimaryExpression	360.0		2576775	1					
ANR	2576801	IfStatement	if ( 0 < upd -> strings [ S_BEGIN ] . size )		2576775	3					
ANR	2576802	Condition	0 < upd -> strings [ S_BEGIN ] . size	5222:6:187826:187855	2576775	0	True				
ANR	2576803	RelationalExpression	0 < upd -> strings [ S_BEGIN ] . size		2576775	0		<			
ANR	2576804	PrimaryExpression	0		2576775	0					
ANR	2576805	MemberAccess	upd -> strings [ S_BEGIN ] . size		2576775	1					
ANR	2576806	ArrayIndexing	upd -> strings [ S_BEGIN ]		2576775	0					
ANR	2576807	PtrMemberAccess	upd -> strings		2576775	0					
ANR	2576808	Identifier	upd		2576775	0					
ANR	2576809	Identifier	strings		2576775	1					
ANR	2576810	Identifier	S_BEGIN		2576775	1					
ANR	2576811	Identifier	size		2576775	1					
ANR	2576812	CompoundStatement		9:5:290:346	2576775	1					
ANR	2576813	IdentifierDeclStatement	"int i , state = 0 , value = 0 ;"	5223:5:187883:187910	2576775	0	True				
ANR	2576814	IdentifierDecl	i		2576775	0					
ANR	2576815	IdentifierDeclType	int		2576775	0					
ANR	2576816	Identifier	i		2576775	1					
ANR	2576817	IdentifierDecl	state = 0		2576775	1					
ANR	2576818	IdentifierDeclType	int		2576775	0					
ANR	2576819	Identifier	state		2576775	1					
ANR	2576820	AssignmentExpression	state = 0		2576775	2		=			
ANR	2576821	Identifier	state		2576775	0					
ANR	2576822	PrimaryExpression	0		2576775	1					
ANR	2576823	IdentifierDecl	value = 0		2576775	2					
ANR	2576824	IdentifierDeclType	int		2576775	0					
ANR	2576825	Identifier	value		2576775	1					
ANR	2576826	AssignmentExpression	value = 0		2576775	2		=			
ANR	2576827	Identifier	value		2576775	0					
ANR	2576828	PrimaryExpression	0		2576775	1					
ANR	2576829	IdentifierDeclStatement	byte * bp = ( byte * ) upd_cast ( upd -> strings [ S_BEGIN ] . data ) ;	5224:5:187917:187973	2576775	1	True				
ANR	2576830	IdentifierDecl	* bp = ( byte * ) upd_cast ( upd -> strings [ S_BEGIN ] . data )		2576775	0					
ANR	2576831	IdentifierDeclType	byte *		2576775	0					
ANR	2576832	Identifier	bp		2576775	1					
ANR	2576833	AssignmentExpression	* bp = ( byte * ) upd_cast ( upd -> strings [ S_BEGIN ] . data )		2576775	2		=			
ANR	2576834	Identifier	bp		2576775	0					
ANR	2576835	CastExpression	( byte * ) upd_cast ( upd -> strings [ S_BEGIN ] . data )		2576775	1					
ANR	2576836	CastTarget	byte *		2576775	0					
ANR	2576837	CallExpression	upd_cast ( upd -> strings [ S_BEGIN ] . data )		2576775	1					
ANR	2576838	Callee	upd_cast		2576775	0					
ANR	2576839	Identifier	upd_cast		2576775	0					
ANR	2576840	ArgumentList	upd -> strings [ S_BEGIN ] . data		2576775	1					
ANR	2576841	Argument	upd -> strings [ S_BEGIN ] . data		2576775	0					
ANR	2576842	MemberAccess	upd -> strings [ S_BEGIN ] . data		2576775	0					
ANR	2576843	ArrayIndexing	upd -> strings [ S_BEGIN ]		2576775	0					
ANR	2576844	PtrMemberAccess	upd -> strings		2576775	0					
ANR	2576845	Identifier	upd		2576775	0					
ANR	2576846	Identifier	strings		2576775	1					
ANR	2576847	Identifier	S_BEGIN		2576775	1					
ANR	2576848	Identifier	data		2576775	1					
ANR	2576849	ForStatement	for ( i = 0 ; i < upd -> strings [ S_BEGIN ] . size ; ++ i )		2576775	2					
ANR	2576850	ForInit	i = 0 ;	5225:9:187984:187989	2576775	0	True				
ANR	2576851	AssignmentExpression	i = 0		2576775	0		=			
ANR	2576852	Identifier	i		2576775	0					
ANR	2576853	PrimaryExpression	0		2576775	1					
ANR	2576854	Condition	i < upd -> strings [ S_BEGIN ] . size	5225:16:187991:188020	2576775	1	True				
ANR	2576855	RelationalExpression	i < upd -> strings [ S_BEGIN ] . size		2576775	0		<			
ANR	2576856	Identifier	i		2576775	0					
ANR	2576857	MemberAccess	upd -> strings [ S_BEGIN ] . size		2576775	1					
ANR	2576858	ArrayIndexing	upd -> strings [ S_BEGIN ]		2576775	0					
ANR	2576859	PtrMemberAccess	upd -> strings		2576775	0					
ANR	2576860	Identifier	upd		2576775	0					
ANR	2576861	Identifier	strings		2576775	1					
ANR	2576862	Identifier	S_BEGIN		2576775	1					
ANR	2576863	Identifier	size		2576775	1					
ANR	2576864	UnaryExpression	++ i	5225:48:188023:188025	2576775	2	True				
ANR	2576865	IncDec	++		2576775	0					
ANR	2576866	Identifier	i		2576775	1					
ANR	2576867	CompoundStatement		10:53:401:401	2576775	3					
ANR	2576868	SwitchStatement	switch ( state )		2576775	0					
ANR	2576869	Condition	state	5226:15:188045:188049	2576775	0	True				
ANR	2576870	Identifier	state		2576775	0					
ANR	2576871	CompoundStatement		11:22:425:425	2576775	1					
ANR	2576872	Label	case 0 :	5227:11:188065:188072	2576775	0	True				
ANR	2576873	IfStatement	if ( 0x1b == bp [ i ] )		2576775	1					
ANR	2576874	Condition	0x1b == bp [ i ]	5228:17:188091:188103	2576775	0	True				
ANR	2576875	EqualityExpression	0x1b == bp [ i ]		2576775	0		==			
ANR	2576876	PrimaryExpression	0x1b		2576775	0					
ANR	2576877	ArrayIndexing	bp [ i ]		2576775	1					
ANR	2576878	Identifier	bp		2576775	0					
ANR	2576879	Identifier	i		2576775	1					
ANR	2576880	ExpressionStatement	state = 1	5228:32:188106:188115	2576775	1	True				
ANR	2576881	AssignmentExpression	state = 1		2576775	0		=			
ANR	2576882	Identifier	state		2576775	0					
ANR	2576883	PrimaryExpression	1		2576775	1					
ANR	2576884	BreakStatement	break ;	5229:11:188128:188133	2576775	2	True				
ANR	2576885	Label	case 1 :	5230:11:188146:188153	2576775	3	True				
ANR	2576886	IfStatement	if ( '(' == bp [ i ] )		2576775	4					
ANR	2576887	Condition	'(' == bp [ i ]	5231:17:188172:188184	2576775	0	True				
ANR	2576888	EqualityExpression	'(' == bp [ i ]		2576775	0		==			
ANR	2576889	PrimaryExpression	'('		2576775	0					
ANR	2576890	ArrayIndexing	bp [ i ]		2576775	1					
ANR	2576891	Identifier	bp		2576775	0					
ANR	2576892	Identifier	i		2576775	1					
ANR	2576893	ExpressionStatement	state = 2	5231:32:188187:188196	2576775	1	True				
ANR	2576894	AssignmentExpression	state = 2		2576775	0		=			
ANR	2576895	Identifier	state		2576775	0					
ANR	2576896	PrimaryExpression	2		2576775	1					
ANR	2576897	ElseStatement	else		2576775	0					
ANR	2576898	ExpressionStatement	state = 0	5232:32:188230:188239	2576775	0	True				
ANR	2576899	AssignmentExpression	state = 0		2576775	0		=			
ANR	2576900	Identifier	state		2576775	0					
ANR	2576901	PrimaryExpression	0		2576775	1					
ANR	2576902	BreakStatement	break ;	5233:11:188252:188257	2576775	5	True				
ANR	2576903	Label	case 2 :	5234:11:188270:188277	2576775	6	True				
ANR	2576904	SwitchStatement	switch ( bp [ i ] )		2576775	7					
ANR	2576905	Condition	bp [ i ]	5235:21:188300:188304	2576775	0	True				
ANR	2576906	ArrayIndexing	bp [ i ]		2576775	0					
ANR	2576907	Identifier	bp		2576775	0					
ANR	2576908	Identifier	i		2576775	1					
ANR	2576909	CompoundStatement		20:28:680:680	2576775	1					
ANR	2576910	Label	case 'U' :	5236:17:188326:188334	2576775	0	True				
ANR	2576911	ExpressionStatement	state = 3	5236:27:188336:188346	2576775	1	True				
ANR	2576912	AssignmentExpression	state = 3		2576775	0		=			
ANR	2576913	Identifier	state		2576775	0					
ANR	2576914	PrimaryExpression	3		2576775	1					
ANR	2576915	BreakStatement	break ;	5236:39:188348:188353	2576775	2	True				
ANR	2576916	Label	case 'C' :	5237:17:188397:188405	2576775	3	True				
ANR	2576917	ExpressionStatement	state = 6	5237:27:188407:188417	2576775	4	True				
ANR	2576918	AssignmentExpression	state = 6		2576775	0		=			
ANR	2576919	Identifier	state		2576775	0					
ANR	2576920	PrimaryExpression	6		2576775	1					
ANR	2576921	BreakStatement	break ;	5237:39:188419:188424	2576775	5	True				
ANR	2576922	Label	case 'c' :	5238:17:188461:188469	2576775	6	True				
ANR	2576923	ExpressionStatement	state = 10	5238:27:188471:188481	2576775	7	True				
ANR	2576924	AssignmentExpression	state = 10		2576775	0		=			
ANR	2576925	Identifier	state		2576775	0					
ANR	2576926	PrimaryExpression	10		2576775	1					
ANR	2576927	BreakStatement	break ;	5238:39:188483:188488	2576775	8	True				
ANR	2576928	Label	default :	5239:17:188531:188538	2576775	9	True				
ANR	2576929	Identifier	default		2576775	0					
ANR	2576930	ExpressionStatement	state = 0	5239:27:188541:188551	2576775	10	True				
ANR	2576931	AssignmentExpression	state = 0		2576775	0		=			
ANR	2576932	Identifier	state		2576775	0					
ANR	2576933	PrimaryExpression	0		2576775	1					
ANR	2576934	BreakStatement	break ;	5239:39:188553:188558	2576775	11	True				
ANR	2576935	BreakStatement	break ;	5241:11:188587:188592	2576775	8	True				
ANR	2576936	Label	case 3 :	5242:11:188605:188612	2576775	9	True				
ANR	2576937	IfStatement	if ( 1 == bp [ i ] )		2576775	10					
ANR	2576938	Condition	1 == bp [ i ]	5243:17:188631:188640	2576775	0	True				
ANR	2576939	EqualityExpression	1 == bp [ i ]		2576775	0		==			
ANR	2576940	PrimaryExpression	1		2576775	0					
ANR	2576941	ArrayIndexing	bp [ i ]		2576775	1					
ANR	2576942	Identifier	bp		2576775	0					
ANR	2576943	Identifier	i		2576775	1					
ANR	2576944	ExpressionStatement	state = 4	5243:29:188643:188652	2576775	1	True				
ANR	2576945	AssignmentExpression	state = 4		2576775	0		=			
ANR	2576946	Identifier	state		2576775	0					
ANR	2576947	PrimaryExpression	4		2576775	1					
ANR	2576948	ElseStatement	else		2576775	0					
ANR	2576949	ExpressionStatement	state = 0	5244:29:188683:188692	2576775	0	True				
ANR	2576950	AssignmentExpression	state = 0		2576775	0		=			
ANR	2576951	Identifier	state		2576775	0					
ANR	2576952	PrimaryExpression	0		2576775	1					
ANR	2576953	BreakStatement	break ;	5245:11:188705:188710	2576775	11	True				
ANR	2576954	Label	case 4 :	5246:11:188723:188730	2576775	12	True				
ANR	2576955	IfStatement	if ( 0 == bp [ i ] )		2576775	13					
ANR	2576956	Condition	0 == bp [ i ]	5247:17:188749:188758	2576775	0	True				
ANR	2576957	EqualityExpression	0 == bp [ i ]		2576775	0		==			
ANR	2576958	PrimaryExpression	0		2576775	0					
ANR	2576959	ArrayIndexing	bp [ i ]		2576775	1					
ANR	2576960	Identifier	bp		2576775	0					
ANR	2576961	Identifier	i		2576775	1					
ANR	2576962	ExpressionStatement	state = 5	5247:29:188761:188770	2576775	1	True				
ANR	2576963	AssignmentExpression	state = 5		2576775	0		=			
ANR	2576964	Identifier	state		2576775	0					
ANR	2576965	PrimaryExpression	5		2576775	1					
ANR	2576966	ElseStatement	else		2576775	0					
ANR	2576967	ExpressionStatement	state = 0	5248:29:188801:188810	2576775	0	True				
ANR	2576968	AssignmentExpression	state = 0		2576775	0		=			
ANR	2576969	Identifier	state		2576775	0					
ANR	2576970	PrimaryExpression	0		2576775	1					
ANR	2576971	BreakStatement	break ;	5249:11:188823:188828	2576775	14	True				
ANR	2576972	Label	case 5 :	5250:11:188841:188848	2576775	15	True				
ANR	2576973	ExpressionStatement	pixels_per_inch = 3600.0 / ( float ) bp [ i ]	5251:14:188864:188904	2576775	16	True				
ANR	2576974	AssignmentExpression	pixels_per_inch = 3600.0 / ( float ) bp [ i ]		2576775	0		=			
ANR	2576975	Identifier	pixels_per_inch		2576775	0					
ANR	2576976	MultiplicativeExpression	3600.0 / ( float ) bp [ i ]		2576775	1		/			
ANR	2576977	PrimaryExpression	3600.0		2576775	0					
ANR	2576978	CastExpression	( float ) bp [ i ]		2576775	1					
ANR	2576979	CastTarget	float		2576775	0					
ANR	2576980	ArrayIndexing	bp [ i ]		2576775	1					
ANR	2576981	Identifier	bp		2576775	0					
ANR	2576982	Identifier	i		2576775	1					
ANR	2576983	ExpressionStatement	state = 0	5252:14:188920:188929	2576775	17	True				
ANR	2576984	AssignmentExpression	state = 0		2576775	0		=			
ANR	2576985	Identifier	state		2576775	0					
ANR	2576986	PrimaryExpression	0		2576775	1					
ANR	2576987	BreakStatement	break ;	5253:11:188942:188947	2576775	18	True				
ANR	2576988	Label	case 6 :	5254:11:188960:188967	2576775	19	True				
ANR	2576989	IfStatement	if ( 2 == bp [ i ] )		2576775	20					
ANR	2576990	Condition	2 == bp [ i ]	5255:17:188986:188995	2576775	0	True				
ANR	2576991	EqualityExpression	2 == bp [ i ]		2576775	0		==			
ANR	2576992	PrimaryExpression	2		2576775	0					
ANR	2576993	ArrayIndexing	bp [ i ]		2576775	1					
ANR	2576994	Identifier	bp		2576775	0					
ANR	2576995	Identifier	i		2576775	1					
ANR	2576996	ExpressionStatement	state = 7	5255:29:188998:189007	2576775	1	True				
ANR	2576997	AssignmentExpression	state = 7		2576775	0		=			
ANR	2576998	Identifier	state		2576775	0					
ANR	2576999	PrimaryExpression	7		2576775	1					
ANR	2577000	ElseStatement	else		2576775	0					
ANR	2577001	ExpressionStatement	state = 0	5256:29:189038:189047	2576775	0	True				
ANR	2577002	AssignmentExpression	state = 0		2576775	0		=			
ANR	2577003	Identifier	state		2576775	0					
ANR	2577004	PrimaryExpression	0		2576775	1					
ANR	2577005	BreakStatement	break ;	5257:11:189060:189065	2576775	21	True				
ANR	2577006	Label	case 7 :	5258:11:189078:189085	2576775	22	True				
ANR	2577007	IfStatement	if ( 0 == bp [ i ] )		2576775	23					
ANR	2577008	Condition	0 == bp [ i ]	5259:17:189104:189113	2576775	0	True				
ANR	2577009	EqualityExpression	0 == bp [ i ]		2576775	0		==			
ANR	2577010	PrimaryExpression	0		2576775	0					
ANR	2577011	ArrayIndexing	bp [ i ]		2576775	1					
ANR	2577012	Identifier	bp		2576775	0					
ANR	2577013	Identifier	i		2576775	1					
ANR	2577014	ExpressionStatement	state = 8	5259:29:189116:189125	2576775	1	True				
ANR	2577015	AssignmentExpression	state = 8		2576775	0		=			
ANR	2577016	Identifier	state		2576775	0					
ANR	2577017	PrimaryExpression	8		2576775	1					
ANR	2577018	ElseStatement	else		2576775	0					
ANR	2577019	ExpressionStatement	state = 0	5260:29:189156:189165	2576775	0	True				
ANR	2577020	AssignmentExpression	state = 0		2576775	0		=			
ANR	2577021	Identifier	state		2576775	0					
ANR	2577022	PrimaryExpression	0		2576775	1					
ANR	2577023	BreakStatement	break ;	5261:11:189178:189183	2576775	24	True				
ANR	2577024	Label	case 8 :	5262:11:189196:189203	2576775	25	True				
ANR	2577025	IfStatement	if ( B_PAGELENGTH & upd -> flags )		2576775	26					
ANR	2577026	Condition	B_PAGELENGTH & upd -> flags	5263:17:189222:189246	2576775	0	True				
ANR	2577027	BitAndExpression	B_PAGELENGTH & upd -> flags		2576775	0		&			
ANR	2577028	Identifier	B_PAGELENGTH		2576775	0					
ANR	2577029	PtrMemberAccess	upd -> flags		2576775	1					
ANR	2577030	Identifier	upd		2576775	0					
ANR	2577031	Identifier	flags		2576775	1					
ANR	2577032	CompoundStatement		48:44:1622:1622	2576775	1					
ANR	2577033	ExpressionStatement	value = ( int ) ( 0.5 + udev -> height * pixels_per_inch / udev -> y_pixels_per_inch )	5264:17:189268:189376	2576775	0	True				
ANR	2577034	AssignmentExpression	value = ( int ) ( 0.5 + udev -> height * pixels_per_inch / udev -> y_pixels_per_inch )		2576775	0		=			
ANR	2577035	Identifier	value		2576775	0					
ANR	2577036	CastExpression	( int ) ( 0.5 + udev -> height * pixels_per_inch / udev -> y_pixels_per_inch )		2576775	1					
ANR	2577037	CastTarget	int		2576775	0					
ANR	2577038	AdditiveExpression	0.5 + udev -> height * pixels_per_inch / udev -> y_pixels_per_inch		2576775	1		+			
ANR	2577039	PrimaryExpression	0.5		2576775	0					
ANR	2577040	MultiplicativeExpression	udev -> height * pixels_per_inch / udev -> y_pixels_per_inch		2576775	1		*			
ANR	2577041	PtrMemberAccess	udev -> height		2576775	0					
ANR	2577042	Identifier	udev		2576775	0					
ANR	2577043	Identifier	height		2576775	1					
ANR	2577044	MultiplicativeExpression	pixels_per_inch / udev -> y_pixels_per_inch		2576775	1		/			
ANR	2577045	Identifier	pixels_per_inch		2576775	0					
ANR	2577046	PtrMemberAccess	udev -> y_pixels_per_inch		2576775	1					
ANR	2577047	Identifier	udev		2576775	0					
ANR	2577048	Identifier	y_pixels_per_inch		2576775	1					
ANR	2577049	ExpressionStatement	bp [ i ] = value & 0xff	5266:17:189395:189420	2576775	1	True				
ANR	2577050	AssignmentExpression	bp [ i ] = value & 0xff		2576775	0		=			
ANR	2577051	ArrayIndexing	bp [ i ]		2576775	0					
ANR	2577052	Identifier	bp		2576775	0					
ANR	2577053	Identifier	i		2576775	1					
ANR	2577054	BitAndExpression	value & 0xff		2576775	1		&			
ANR	2577055	Identifier	value		2576775	0					
ANR	2577056	PrimaryExpression	0xff		2576775	1					
ANR	2577057	ExpressionStatement	state = 9	5268:14:189452:189461	2576775	27	True				
ANR	2577058	AssignmentExpression	state = 9		2576775	0		=			
ANR	2577059	Identifier	state		2576775	0					
ANR	2577060	PrimaryExpression	9		2576775	1					
ANR	2577061	BreakStatement	break ;	5269:11:189474:189479	2576775	28	True				
ANR	2577062	Label	case 9 :	5270:11:189492:189499	2576775	29	True				
ANR	2577063	IfStatement	if ( B_PAGELENGTH & upd -> flags )		2576775	30					
ANR	2577064	Condition	B_PAGELENGTH & upd -> flags	5271:17:189518:189542	2576775	0	True				
ANR	2577065	BitAndExpression	B_PAGELENGTH & upd -> flags		2576775	0		&			
ANR	2577066	Identifier	B_PAGELENGTH		2576775	0					
ANR	2577067	PtrMemberAccess	upd -> flags		2576775	1					
ANR	2577068	Identifier	upd		2576775	0					
ANR	2577069	Identifier	flags		2576775	1					
ANR	2577070	CompoundStatement		56:44:1918:1918	2576775	1					
ANR	2577071	ExpressionStatement	bp [ i ] = ( value >> 8 ) & 0xff	5272:17:189564:189589	2576775	0	True				
ANR	2577072	AssignmentExpression	bp [ i ] = ( value >> 8 ) & 0xff		2576775	0		=			
ANR	2577073	ArrayIndexing	bp [ i ]		2576775	0					
ANR	2577074	Identifier	bp		2576775	0					
ANR	2577075	Identifier	i		2576775	1					
ANR	2577076	BitAndExpression	( value >> 8 ) & 0xff		2576775	1		&			
ANR	2577077	ShiftExpression	value >> 8		2576775	0		>>			
ANR	2577078	Identifier	value		2576775	0					
ANR	2577079	PrimaryExpression	8		2576775	1					
ANR	2577080	PrimaryExpression	0xff		2576775	1					
ANR	2577081	ExpressionStatement	state = 0	5274:14:189621:189630	2576775	31	True				
ANR	2577082	AssignmentExpression	state = 0		2576775	0		=			
ANR	2577083	Identifier	state		2576775	0					
ANR	2577084	PrimaryExpression	0		2576775	1					
ANR	2577085	BreakStatement	break ;	5275:11:189643:189648	2576775	32	True				
ANR	2577086	Label	case 10 :	5276:11:189661:189668	2576775	33	True				
ANR	2577087	IfStatement	if ( 4 == bp [ i ] )		2576775	34					
ANR	2577088	Condition	4 == bp [ i ]	5277:17:189687:189696	2576775	0	True				
ANR	2577089	EqualityExpression	4 == bp [ i ]		2576775	0		==			
ANR	2577090	PrimaryExpression	4		2576775	0					
ANR	2577091	ArrayIndexing	bp [ i ]		2576775	1					
ANR	2577092	Identifier	bp		2576775	0					
ANR	2577093	Identifier	i		2576775	1					
ANR	2577094	ExpressionStatement	state = 11	5277:29:189699:189709	2576775	1	True				
ANR	2577095	AssignmentExpression	state = 11		2576775	0		=			
ANR	2577096	Identifier	state		2576775	0					
ANR	2577097	PrimaryExpression	11		2576775	1					
ANR	2577098	ElseStatement	else		2576775	0					
ANR	2577099	ExpressionStatement	state = 0	5278:29:189740:189750	2576775	0	True				
ANR	2577100	AssignmentExpression	state = 0		2576775	0		=			
ANR	2577101	Identifier	state		2576775	0					
ANR	2577102	PrimaryExpression	0		2576775	1					
ANR	2577103	BreakStatement	break ;	5279:11:189763:189768	2576775	35	True				
ANR	2577104	Label	case 11 :	5280:11:189781:189788	2576775	36	True				
ANR	2577105	IfStatement	if ( 0 == bp [ i ] )		2576775	37					
ANR	2577106	Condition	0 == bp [ i ]	5281:17:189807:189816	2576775	0	True				
ANR	2577107	EqualityExpression	0 == bp [ i ]		2576775	0		==			
ANR	2577108	PrimaryExpression	0		2576775	0					
ANR	2577109	ArrayIndexing	bp [ i ]		2576775	1					
ANR	2577110	Identifier	bp		2576775	0					
ANR	2577111	Identifier	i		2576775	1					
ANR	2577112	ExpressionStatement	state = 12	5281:29:189819:189829	2576775	1	True				
ANR	2577113	AssignmentExpression	state = 12		2576775	0		=			
ANR	2577114	Identifier	state		2576775	0					
ANR	2577115	PrimaryExpression	12		2576775	1					
ANR	2577116	ElseStatement	else		2576775	0					
ANR	2577117	ExpressionStatement	state = 0	5282:29:189860:189870	2576775	0	True				
ANR	2577118	AssignmentExpression	state = 0		2576775	0		=			
ANR	2577119	Identifier	state		2576775	0					
ANR	2577120	PrimaryExpression	0		2576775	1					
ANR	2577121	BreakStatement	break ;	5283:11:189883:189888	2576775	38	True				
ANR	2577122	Label	case 12 :	5284:11:189901:189909	2576775	39	True				
ANR	2577123	IfStatement	if ( B_TOPMARGIN & upd -> flags )		2576775	40					
ANR	2577124	Condition	B_TOPMARGIN & upd -> flags	5285:17:189928:189951	2576775	0	True				
ANR	2577125	BitAndExpression	B_TOPMARGIN & upd -> flags		2576775	0		&			
ANR	2577126	Identifier	B_TOPMARGIN		2576775	0					
ANR	2577127	PtrMemberAccess	upd -> flags		2576775	1					
ANR	2577128	Identifier	upd		2576775	0					
ANR	2577129	Identifier	flags		2576775	1					
ANR	2577130	CompoundStatement		70:43:2327:2327	2576775	1					
ANR	2577131	ExpressionStatement	value = ( int ) ( dev_t_margin ( udev ) * pixels_per_inch )	5286:17:189973:190025	2576775	0	True				
ANR	2577132	AssignmentExpression	value = ( int ) ( dev_t_margin ( udev ) * pixels_per_inch )		2576775	0		=			
ANR	2577133	Identifier	value		2576775	0					
ANR	2577134	CastExpression	( int ) ( dev_t_margin ( udev ) * pixels_per_inch )		2576775	1					
ANR	2577135	CastTarget	int		2576775	0					
ANR	2577136	MultiplicativeExpression	dev_t_margin ( udev ) * pixels_per_inch		2576775	1		*			
ANR	2577137	CallExpression	dev_t_margin ( udev )		2576775	0					
ANR	2577138	Callee	dev_t_margin		2576775	0					
ANR	2577139	Identifier	dev_t_margin		2576775	0					
ANR	2577140	ArgumentList	udev		2576775	1					
ANR	2577141	Argument	udev		2576775	0					
ANR	2577142	Identifier	udev		2576775	0					
ANR	2577143	Identifier	pixels_per_inch		2576775	1					
ANR	2577144	ExpressionStatement	bp [ i ] = value & 0xff	5287:17:190044:190069	2576775	1	True				
ANR	2577145	AssignmentExpression	bp [ i ] = value & 0xff		2576775	0		=			
ANR	2577146	ArrayIndexing	bp [ i ]		2576775	0					
ANR	2577147	Identifier	bp		2576775	0					
ANR	2577148	Identifier	i		2576775	1					
ANR	2577149	BitAndExpression	value & 0xff		2576775	1		&			
ANR	2577150	Identifier	value		2576775	0					
ANR	2577151	PrimaryExpression	0xff		2576775	1					
ANR	2577152	ExpressionStatement	state = 13	5289:14:190101:190111	2576775	41	True				
ANR	2577153	AssignmentExpression	state = 13		2576775	0		=			
ANR	2577154	Identifier	state		2576775	0					
ANR	2577155	PrimaryExpression	13		2576775	1					
ANR	2577156	BreakStatement	break ;	5290:11:190124:190129	2576775	42	True				
ANR	2577157	Label	case 13 :	5291:11:190142:190150	2576775	43	True				
ANR	2577158	IfStatement	if ( B_TOPMARGIN & upd -> flags )		2576775	44					
ANR	2577159	Condition	B_TOPMARGIN & upd -> flags	5292:17:190169:190192	2576775	0	True				
ANR	2577160	BitAndExpression	B_TOPMARGIN & upd -> flags		2576775	0		&			
ANR	2577161	Identifier	B_TOPMARGIN		2576775	0					
ANR	2577162	PtrMemberAccess	upd -> flags		2576775	1					
ANR	2577163	Identifier	upd		2576775	0					
ANR	2577164	Identifier	flags		2576775	1					
ANR	2577165	CompoundStatement		77:43:2568:2568	2576775	1					
ANR	2577166	ExpressionStatement	bp [ i ] = ( value >> 8 ) & 0xff	5293:17:190214:190239	2576775	0	True				
ANR	2577167	AssignmentExpression	bp [ i ] = ( value >> 8 ) & 0xff		2576775	0		=			
ANR	2577168	ArrayIndexing	bp [ i ]		2576775	0					
ANR	2577169	Identifier	bp		2576775	0					
ANR	2577170	Identifier	i		2576775	1					
ANR	2577171	BitAndExpression	( value >> 8 ) & 0xff		2576775	1		&			
ANR	2577172	ShiftExpression	value >> 8		2576775	0		>>			
ANR	2577173	Identifier	value		2576775	0					
ANR	2577174	PrimaryExpression	8		2576775	1					
ANR	2577175	PrimaryExpression	0xff		2576775	1					
ANR	2577176	ExpressionStatement	state = 14	5295:14:190271:190281	2576775	45	True				
ANR	2577177	AssignmentExpression	state = 14		2576775	0		=			
ANR	2577178	Identifier	state		2576775	0					
ANR	2577179	PrimaryExpression	14		2576775	1					
ANR	2577180	BreakStatement	break ;	5296:11:190294:190299	2576775	46	True				
ANR	2577181	Label	case 14 :	5297:11:190312:190320	2576775	47	True				
ANR	2577182	IfStatement	if ( B_BOTTOMMARGIN & upd -> flags )		2576775	48					
ANR	2577183	Condition	B_BOTTOMMARGIN & upd -> flags	5298:17:190339:190365	2576775	0	True				
ANR	2577184	BitAndExpression	B_BOTTOMMARGIN & upd -> flags		2576775	0		&			
ANR	2577185	Identifier	B_BOTTOMMARGIN		2576775	0					
ANR	2577186	PtrMemberAccess	upd -> flags		2576775	1					
ANR	2577187	Identifier	upd		2576775	0					
ANR	2577188	Identifier	flags		2576775	1					
ANR	2577189	CompoundStatement		83:46:2741:2741	2576775	1					
ANR	2577190	ExpressionStatement	value = ( int ) ( 0.5 + udev -> height * pixels_per_inch / udev -> y_pixels_per_inch - dev_b_margin ( udev ) * pixels_per_inch )	5299:17:190387:190557	2576775	0	True				
ANR	2577191	AssignmentExpression	value = ( int ) ( 0.5 + udev -> height * pixels_per_inch / udev -> y_pixels_per_inch - dev_b_margin ( udev ) * pixels_per_inch )		2576775	0		=			
ANR	2577192	Identifier	value		2576775	0					
ANR	2577193	CastExpression	( int ) ( 0.5 + udev -> height * pixels_per_inch / udev -> y_pixels_per_inch - dev_b_margin ( udev ) * pixels_per_inch )		2576775	1					
ANR	2577194	CastTarget	int		2576775	0					
ANR	2577195	AdditiveExpression	0.5 + udev -> height * pixels_per_inch / udev -> y_pixels_per_inch - dev_b_margin ( udev ) * pixels_per_inch		2576775	1		+			
ANR	2577196	PrimaryExpression	0.5		2576775	0					
ANR	2577197	AdditiveExpression	udev -> height * pixels_per_inch / udev -> y_pixels_per_inch - dev_b_margin ( udev ) * pixels_per_inch		2576775	1		-			
ANR	2577198	MultiplicativeExpression	udev -> height * pixels_per_inch / udev -> y_pixels_per_inch		2576775	0		*			
ANR	2577199	PtrMemberAccess	udev -> height		2576775	0					
ANR	2577200	Identifier	udev		2576775	0					
ANR	2577201	Identifier	height		2576775	1					
ANR	2577202	MultiplicativeExpression	pixels_per_inch / udev -> y_pixels_per_inch		2576775	1		/			
ANR	2577203	Identifier	pixels_per_inch		2576775	0					
ANR	2577204	PtrMemberAccess	udev -> y_pixels_per_inch		2576775	1					
ANR	2577205	Identifier	udev		2576775	0					
ANR	2577206	Identifier	y_pixels_per_inch		2576775	1					
ANR	2577207	MultiplicativeExpression	dev_b_margin ( udev ) * pixels_per_inch		2576775	1		*			
ANR	2577208	CallExpression	dev_b_margin ( udev )		2576775	0					
ANR	2577209	Callee	dev_b_margin		2576775	0					
ANR	2577210	Identifier	dev_b_margin		2576775	0					
ANR	2577211	ArgumentList	udev		2576775	1					
ANR	2577212	Argument	udev		2576775	0					
ANR	2577213	Identifier	udev		2576775	0					
ANR	2577214	Identifier	pixels_per_inch		2576775	1					
ANR	2577215	ExpressionStatement	bp [ i ] = value & 0xff	5302:17:190576:190601	2576775	1	True				
ANR	2577216	AssignmentExpression	bp [ i ] = value & 0xff		2576775	0		=			
ANR	2577217	ArrayIndexing	bp [ i ]		2576775	0					
ANR	2577218	Identifier	bp		2576775	0					
ANR	2577219	Identifier	i		2576775	1					
ANR	2577220	BitAndExpression	value & 0xff		2576775	1		&			
ANR	2577221	Identifier	value		2576775	0					
ANR	2577222	PrimaryExpression	0xff		2576775	1					
ANR	2577223	ExpressionStatement	state = 15	5304:14:190633:190643	2576775	49	True				
ANR	2577224	AssignmentExpression	state = 15		2576775	0		=			
ANR	2577225	Identifier	state		2576775	0					
ANR	2577226	PrimaryExpression	15		2576775	1					
ANR	2577227	BreakStatement	break ;	5305:11:190656:190661	2576775	50	True				
ANR	2577228	Label	case 15 :	5306:11:190674:190682	2576775	51	True				
ANR	2577229	IfStatement	if ( B_BOTTOMMARGIN & upd -> flags )		2576775	52					
ANR	2577230	Condition	B_BOTTOMMARGIN & upd -> flags	5307:17:190701:190727	2576775	0	True				
ANR	2577231	BitAndExpression	B_BOTTOMMARGIN & upd -> flags		2576775	0		&			
ANR	2577232	Identifier	B_BOTTOMMARGIN		2576775	0					
ANR	2577233	PtrMemberAccess	upd -> flags		2576775	1					
ANR	2577234	Identifier	upd		2576775	0					
ANR	2577235	Identifier	flags		2576775	1					
ANR	2577236	CompoundStatement		92:46:3103:3103	2576775	1					
ANR	2577237	ExpressionStatement	bp [ i ] = ( value >> 8 ) & 0xff	5308:17:190749:190774	2576775	0	True				
ANR	2577238	AssignmentExpression	bp [ i ] = ( value >> 8 ) & 0xff		2576775	0		=			
ANR	2577239	ArrayIndexing	bp [ i ]		2576775	0					
ANR	2577240	Identifier	bp		2576775	0					
ANR	2577241	Identifier	i		2576775	1					
ANR	2577242	BitAndExpression	( value >> 8 ) & 0xff		2576775	1		&			
ANR	2577243	ShiftExpression	value >> 8		2576775	0		>>			
ANR	2577244	Identifier	value		2576775	0					
ANR	2577245	PrimaryExpression	8		2576775	1					
ANR	2577246	PrimaryExpression	0xff		2576775	1					
ANR	2577247	ExpressionStatement	state = 0	5310:14:190806:190816	2576775	53	True				
ANR	2577248	AssignmentExpression	state = 0		2576775	0		=			
ANR	2577249	Identifier	state		2576775	0					
ANR	2577250	PrimaryExpression	0		2576775	1					
ANR	2577251	BreakStatement	break ;	5311:11:190829:190834	2576775	54	True				
ANR	2577252	IfStatement	if ( 0 == upd -> strings [ S_YMOVE ] . size )		2576775	4					
ANR	2577253	Condition	0 == upd -> strings [ S_YMOVE ] . size	5317:6:190961:190991	2576775	0	True				
ANR	2577254	EqualityExpression	0 == upd -> strings [ S_YMOVE ] . size		2576775	0		==			
ANR	2577255	PrimaryExpression	0		2576775	0					
ANR	2577256	MemberAccess	upd -> strings [ S_YMOVE ] . size		2576775	1					
ANR	2577257	ArrayIndexing	upd -> strings [ S_YMOVE ]		2576775	0					
ANR	2577258	PtrMemberAccess	upd -> strings		2576775	0					
ANR	2577259	Identifier	upd		2576775	0					
ANR	2577260	Identifier	strings		2576775	1					
ANR	2577261	Identifier	S_YMOVE		2576775	1					
ANR	2577262	Identifier	size		2576775	1					
ANR	2577263	CompoundStatement		103:6:3375:3383	2576775	1					
ANR	2577264	IdentifierDeclStatement	byte * bp ;	5318:6:191002:191010	2576775	0	True				
ANR	2577265	IdentifierDecl	* bp		2576775	0					
ANR	2577266	IdentifierDeclType	byte *		2576775	0					
ANR	2577267	Identifier	bp		2576775	1					
ANR	2577268	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_YMOVE ] )"	5319:6:191018:191071	2576775	1	True				
ANR	2577269	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_YMOVE ] )"		2576775	0					
ANR	2577270	Callee	UPD_MM_DEL_PARAM		2576775	0					
ANR	2577271	Identifier	UPD_MM_DEL_PARAM		2576775	0					
ANR	2577272	ArgumentList	udev -> memory		2576775	1					
ANR	2577273	Argument	udev -> memory		2576775	0					
ANR	2577274	PtrMemberAccess	udev -> memory		2576775	0					
ANR	2577275	Identifier	udev		2576775	0					
ANR	2577276	Identifier	memory		2576775	1					
ANR	2577277	Argument	upd -> strings [ S_YMOVE ]		2576775	1					
ANR	2577278	ArrayIndexing	upd -> strings [ S_YMOVE ]		2576775	0					
ANR	2577279	PtrMemberAccess	upd -> strings		2576775	0					
ANR	2577280	Identifier	upd		2576775	0					
ANR	2577281	Identifier	strings		2576775	1					
ANR	2577282	Identifier	S_YMOVE		2576775	1					
ANR	2577283	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , bp , 5 )"	5320:6:191079:191115	2576775	2	True				
ANR	2577284	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , bp , 5 )"		2576775	0					
ANR	2577285	Callee	UPD_MM_GET_ARRAY		2576775	0					
ANR	2577286	Identifier	UPD_MM_GET_ARRAY		2576775	0					
ANR	2577287	ArgumentList	udev -> memory		2576775	1					
ANR	2577288	Argument	udev -> memory		2576775	0					
ANR	2577289	PtrMemberAccess	udev -> memory		2576775	0					
ANR	2577290	Identifier	udev		2576775	0					
ANR	2577291	Identifier	memory		2576775	1					
ANR	2577292	Argument	bp		2576775	1					
ANR	2577293	Identifier	bp		2576775	0					
ANR	2577294	Argument	5		2576775	2					
ANR	2577295	PrimaryExpression	5		2576775	0					
ANR	2577296	ExpressionStatement	upd -> strings [ S_YMOVE ] . data = bp	5321:6:191123:191154	2576775	3	True				
ANR	2577297	AssignmentExpression	upd -> strings [ S_YMOVE ] . data = bp		2576775	0		=			
ANR	2577298	MemberAccess	upd -> strings [ S_YMOVE ] . data		2576775	0					
ANR	2577299	ArrayIndexing	upd -> strings [ S_YMOVE ]		2576775	0					
ANR	2577300	PtrMemberAccess	upd -> strings		2576775	0					
ANR	2577301	Identifier	upd		2576775	0					
ANR	2577302	Identifier	strings		2576775	1					
ANR	2577303	Identifier	S_YMOVE		2576775	1					
ANR	2577304	Identifier	data		2576775	1					
ANR	2577305	Identifier	bp		2576775	1					
ANR	2577306	ExpressionStatement	upd -> strings [ S_YMOVE ] . size = 5	5322:6:191162:191192	2576775	4	True				
ANR	2577307	AssignmentExpression	upd -> strings [ S_YMOVE ] . size = 5		2576775	0		=			
ANR	2577308	MemberAccess	upd -> strings [ S_YMOVE ] . size		2576775	0					
ANR	2577309	ArrayIndexing	upd -> strings [ S_YMOVE ]		2576775	0					
ANR	2577310	PtrMemberAccess	upd -> strings		2576775	0					
ANR	2577311	Identifier	upd		2576775	0					
ANR	2577312	Identifier	strings		2576775	1					
ANR	2577313	Identifier	S_YMOVE		2576775	1					
ANR	2577314	Identifier	size		2576775	1					
ANR	2577315	PrimaryExpression	5		2576775	1					
ANR	2577316	ExpressionStatement	* bp ++ = 0x1b	5323:6:191200:191212	2576775	5	True				
ANR	2577317	AssignmentExpression	* bp ++ = 0x1b		2576775	0		=			
ANR	2577318	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2577319	UnaryOperator	*		2576775	0					
ANR	2577320	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2577321	Identifier	bp		2576775	0					
ANR	2577322	IncDec	++		2576775	1					
ANR	2577323	PrimaryExpression	0x1b		2576775	1					
ANR	2577324	ExpressionStatement	* bp ++ = '('	5324:6:191230:191241	2576775	6	True				
ANR	2577325	AssignmentExpression	* bp ++ = '('		2576775	0		=			
ANR	2577326	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2577327	UnaryOperator	*		2576775	0					
ANR	2577328	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2577329	Identifier	bp		2576775	0					
ANR	2577330	IncDec	++		2576775	1					
ANR	2577331	PrimaryExpression	'('		2576775	1					
ANR	2577332	ExpressionStatement	* bp ++ = upd -> flags & B_YABS ? 'V' : 'v'	5325:6:191249:191288	2576775	7	True				
ANR	2577333	AssignmentExpression	* bp ++ = upd -> flags & B_YABS ? 'V' : 'v'		2576775	0		=			
ANR	2577334	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2577335	UnaryOperator	*		2576775	0					
ANR	2577336	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2577337	Identifier	bp		2576775	0					
ANR	2577338	IncDec	++		2576775	1					
ANR	2577339	ConditionalExpression	upd -> flags & B_YABS ? 'V' : 'v'		2576775	1					
ANR	2577340	Condition	upd -> flags & B_YABS		2576775	0					
ANR	2577341	BitAndExpression	upd -> flags & B_YABS		2576775	0		&			
ANR	2577342	PtrMemberAccess	upd -> flags		2576775	0					
ANR	2577343	Identifier	upd		2576775	0					
ANR	2577344	Identifier	flags		2576775	1					
ANR	2577345	Identifier	B_YABS		2576775	1					
ANR	2577346	PrimaryExpression	'V'		2576775	1					
ANR	2577347	PrimaryExpression	'v'		2576775	2					
ANR	2577348	ExpressionStatement	* bp ++ = 2	5326:6:191296:191306	2576775	8	True				
ANR	2577349	AssignmentExpression	* bp ++ = 2		2576775	0		=			
ANR	2577350	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2577351	UnaryOperator	*		2576775	0					
ANR	2577352	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2577353	Identifier	bp		2576775	0					
ANR	2577354	IncDec	++		2576775	1					
ANR	2577355	PrimaryExpression	2		2576775	1					
ANR	2577356	ExpressionStatement	* bp ++ = 0	5327:6:191314:191324	2576775	9	True				
ANR	2577357	AssignmentExpression	* bp ++ = 0		2576775	0		=			
ANR	2577358	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2577359	UnaryOperator	*		2576775	0					
ANR	2577360	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2577361	Identifier	bp		2576775	0					
ANR	2577362	IncDec	++		2576775	1					
ANR	2577363	PrimaryExpression	0		2576775	1					
ANR	2577364	IfStatement	if ( ( 1 < upd -> ints [ I_XSTEP ] ) && ( 0 == upd -> strings [ S_XSTEP ] . size ) )		2576775	5					
ANR	2577365	Condition	( 1 < upd -> ints [ I_XSTEP ] ) && ( 0 == upd -> strings [ S_XSTEP ] . size )	5331:6:191386:191446	2576775	0	True				
ANR	2577366	AndExpression	( 1 < upd -> ints [ I_XSTEP ] ) && ( 0 == upd -> strings [ S_XSTEP ] . size )		2576775	0		&&			
ANR	2577367	RelationalExpression	1 < upd -> ints [ I_XSTEP ]		2576775	0		<			
ANR	2577368	PrimaryExpression	1		2576775	0					
ANR	2577369	ArrayIndexing	upd -> ints [ I_XSTEP ]		2576775	1					
ANR	2577370	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2577371	Identifier	upd		2576775	0					
ANR	2577372	Identifier	ints		2576775	1					
ANR	2577373	Identifier	I_XSTEP		2576775	1					
ANR	2577374	EqualityExpression	0 == upd -> strings [ S_XSTEP ] . size		2576775	1		==			
ANR	2577375	PrimaryExpression	0		2576775	0					
ANR	2577376	MemberAccess	upd -> strings [ S_XSTEP ] . size		2576775	1					
ANR	2577377	ArrayIndexing	upd -> strings [ S_XSTEP ]		2576775	0					
ANR	2577378	PtrMemberAccess	upd -> strings		2576775	0					
ANR	2577379	Identifier	upd		2576775	0					
ANR	2577380	Identifier	strings		2576775	1					
ANR	2577381	Identifier	S_XSTEP		2576775	1					
ANR	2577382	Identifier	size		2576775	1					
ANR	2577383	CompoundStatement		116:69:3822:3822	2576775	1					
ANR	2577384	ExpressionStatement	"errprintf ( udev -> memory , ""ESC/P2-Open: XSTEP-Command required for XSTEP=%d\\n"" , upd -> ints [ I_XSTEP ] )"	5334:6:191491:191606	2576775	0	True				
ANR	2577385	CallExpression	"errprintf ( udev -> memory , ""ESC/P2-Open: XSTEP-Command required for XSTEP=%d\\n"" , upd -> ints [ I_XSTEP ] )"		2576775	0					
ANR	2577386	Callee	errprintf		2576775	0					
ANR	2577387	Identifier	errprintf		2576775	0					
ANR	2577388	ArgumentList	udev -> memory		2576775	1					
ANR	2577389	Argument	udev -> memory		2576775	0					
ANR	2577390	PtrMemberAccess	udev -> memory		2576775	0					
ANR	2577391	Identifier	udev		2576775	0					
ANR	2577392	Identifier	memory		2576775	1					
ANR	2577393	Argument	"""ESC/P2-Open: XSTEP-Command required for XSTEP=%d\\n"""		2576775	1					
ANR	2577394	PrimaryExpression	"""ESC/P2-Open: XSTEP-Command required for XSTEP=%d\\n"""		2576775	0					
ANR	2577395	Argument	upd -> ints [ I_XSTEP ]		2576775	2					
ANR	2577396	ArrayIndexing	upd -> ints [ I_XSTEP ]		2576775	0					
ANR	2577397	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2577398	Identifier	upd		2576775	0					
ANR	2577399	Identifier	ints		2576775	1					
ANR	2577400	Identifier	I_XSTEP		2576775	1					
ANR	2577401	ExpressionStatement	error = - 1	5338:6:191621:191631	2576775	1	True				
ANR	2577402	AssignmentExpression	error = - 1		2576775	0		=			
ANR	2577403	Identifier	error		2576775	0					
ANR	2577404	UnaryOperationExpression	- 1		2576775	1					
ANR	2577405	UnaryOperator	-		2576775	0					
ANR	2577406	PrimaryExpression	1		2576775	1					
ANR	2577407	ElseStatement	else		2576775	0					
ANR	2577408	IfStatement	if ( ( 1 < upd -> ints [ I_NXPASS ] ) && ( 0 == upd -> strings [ S_XMOVE ] . size ) && ( 0 == upd -> strings [ S_XSTEP ] . size ) )		2576775	0					
ANR	2577409	Condition	( 1 < upd -> ints [ I_NXPASS ] ) && ( 0 == upd -> strings [ S_XMOVE ] . size ) && ( 0 == upd -> strings [ S_XSTEP ] . size )	5340:13:191647:191779	2576775	0	True				
ANR	2577410	AndExpression	( 1 < upd -> ints [ I_NXPASS ] ) && ( 0 == upd -> strings [ S_XMOVE ] . size ) && ( 0 == upd -> strings [ S_XSTEP ] . size )		2576775	0		&&			
ANR	2577411	RelationalExpression	1 < upd -> ints [ I_NXPASS ]		2576775	0		<			
ANR	2577412	PrimaryExpression	1		2576775	0					
ANR	2577413	ArrayIndexing	upd -> ints [ I_NXPASS ]		2576775	1					
ANR	2577414	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2577415	Identifier	upd		2576775	0					
ANR	2577416	Identifier	ints		2576775	1					
ANR	2577417	Identifier	I_NXPASS		2576775	1					
ANR	2577418	AndExpression	( 0 == upd -> strings [ S_XMOVE ] . size ) && ( 0 == upd -> strings [ S_XSTEP ] . size )		2576775	1		&&			
ANR	2577419	EqualityExpression	0 == upd -> strings [ S_XMOVE ] . size		2576775	0		==			
ANR	2577420	PrimaryExpression	0		2576775	0					
ANR	2577421	MemberAccess	upd -> strings [ S_XMOVE ] . size		2576775	1					
ANR	2577422	ArrayIndexing	upd -> strings [ S_XMOVE ]		2576775	0					
ANR	2577423	PtrMemberAccess	upd -> strings		2576775	0					
ANR	2577424	Identifier	upd		2576775	0					
ANR	2577425	Identifier	strings		2576775	1					
ANR	2577426	Identifier	S_XMOVE		2576775	1					
ANR	2577427	Identifier	size		2576775	1					
ANR	2577428	EqualityExpression	0 == upd -> strings [ S_XSTEP ] . size		2576775	1		==			
ANR	2577429	PrimaryExpression	0		2576775	0					
ANR	2577430	MemberAccess	upd -> strings [ S_XSTEP ] . size		2576775	1					
ANR	2577431	ArrayIndexing	upd -> strings [ S_XSTEP ]		2576775	0					
ANR	2577432	PtrMemberAccess	upd -> strings		2576775	0					
ANR	2577433	Identifier	upd		2576775	0					
ANR	2577434	Identifier	strings		2576775	1					
ANR	2577435	Identifier	S_XSTEP		2576775	1					
ANR	2577436	Identifier	size		2576775	1					
ANR	2577437	CompoundStatement		129:6:4182:4191	2576775	1					
ANR	2577438	IdentifierDeclStatement	byte * bp ;	5343:6:191793:191801	2576775	0	True				
ANR	2577439	IdentifierDecl	* bp		2576775	0					
ANR	2577440	IdentifierDeclType	byte *		2576775	0					
ANR	2577441	Identifier	bp		2576775	1					
ANR	2577442	IdentifierDeclStatement	int ratio ;	5344:6:191809:191818	2576775	1	True				
ANR	2577443	IdentifierDecl	ratio		2576775	0					
ANR	2577444	IdentifierDeclType	int		2576775	0					
ANR	2577445	Identifier	ratio		2576775	1					
ANR	2577446	ExpressionStatement	ratio = ( int ) ( ( udev -> y_pixels_per_inch + 0.5 ) / udev -> x_pixels_per_inch )	5346:6:191827:191899	2576775	2	True				
ANR	2577447	AssignmentExpression	ratio = ( int ) ( ( udev -> y_pixels_per_inch + 0.5 ) / udev -> x_pixels_per_inch )		2576775	0		=			
ANR	2577448	Identifier	ratio		2576775	0					
ANR	2577449	CastExpression	( int ) ( ( udev -> y_pixels_per_inch + 0.5 ) / udev -> x_pixels_per_inch )		2576775	1					
ANR	2577450	CastTarget	int		2576775	0					
ANR	2577451	MultiplicativeExpression	( udev -> y_pixels_per_inch + 0.5 ) / udev -> x_pixels_per_inch		2576775	1		/			
ANR	2577452	AdditiveExpression	udev -> y_pixels_per_inch + 0.5		2576775	0		+			
ANR	2577453	PtrMemberAccess	udev -> y_pixels_per_inch		2576775	0					
ANR	2577454	Identifier	udev		2576775	0					
ANR	2577455	Identifier	y_pixels_per_inch		2576775	1					
ANR	2577456	PrimaryExpression	0.5		2576775	1					
ANR	2577457	PtrMemberAccess	udev -> x_pixels_per_inch		2576775	1					
ANR	2577458	Identifier	udev		2576775	0					
ANR	2577459	Identifier	x_pixels_per_inch		2576775	1					
ANR	2577460	IfStatement	if ( 0 == upd -> ints [ I_XSTEP ] )		2576775	3					
ANR	2577461	Condition	0 == upd -> ints [ I_XSTEP ]	5348:9:191911:191933	2576775	0	True				
ANR	2577462	EqualityExpression	0 == upd -> ints [ I_XSTEP ]		2576775	0		==			
ANR	2577463	PrimaryExpression	0		2576775	0					
ANR	2577464	ArrayIndexing	upd -> ints [ I_XSTEP ]		2576775	1					
ANR	2577465	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2577466	Identifier	upd		2576775	0					
ANR	2577467	Identifier	ints		2576775	1					
ANR	2577468	Identifier	I_XSTEP		2576775	1					
ANR	2577469	CompoundStatement		133:34:4309:4309	2576775	1					
ANR	2577470	IfStatement	if ( ratio > 1 )		2576775	0					
ANR	2577471	Condition	ratio > 1	5349:12:191981:191989	2576775	0	True				
ANR	2577472	RelationalExpression	ratio > 1		2576775	0		>			
ANR	2577473	Identifier	ratio		2576775	0					
ANR	2577474	PrimaryExpression	1		2576775	1					
ANR	2577475	ExpressionStatement	upd -> ints [ I_XSTEP ] = - ratio	5349:23:191992:192019	2576775	1	True				
ANR	2577476	AssignmentExpression	upd -> ints [ I_XSTEP ] = - ratio		2576775	0		=			
ANR	2577477	ArrayIndexing	upd -> ints [ I_XSTEP ]		2576775	0					
ANR	2577478	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2577479	Identifier	upd		2576775	0					
ANR	2577480	Identifier	ints		2576775	1					
ANR	2577481	Identifier	I_XSTEP		2576775	1					
ANR	2577482	UnaryOperationExpression	- ratio		2576775	1					
ANR	2577483	UnaryOperator	-		2576775	0					
ANR	2577484	Identifier	ratio		2576775	1					
ANR	2577485	ElseStatement	else		2576775	0					
ANR	2577486	CompoundStatement		135:13:4407:4407	2576775	0					
ANR	2577487	ExpressionStatement	ratio = - upd -> ints [ I_XSTEP ]	5351:9:192096:192123	2576775	0	True				
ANR	2577488	AssignmentExpression	ratio = - upd -> ints [ I_XSTEP ]		2576775	0		=			
ANR	2577489	Identifier	ratio		2576775	0					
ANR	2577490	UnaryOperationExpression	- upd -> ints [ I_XSTEP ]		2576775	1					
ANR	2577491	UnaryOperator	-		2576775	0					
ANR	2577492	ArrayIndexing	upd -> ints [ I_XSTEP ]		2576775	1					
ANR	2577493	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2577494	Identifier	upd		2576775	0					
ANR	2577495	Identifier	ints		2576775	1					
ANR	2577496	Identifier	I_XSTEP		2576775	1					
ANR	2577497	IfStatement	if ( 2 == upd -> ints [ I_NXPASS ] )		2576775	4					
ANR	2577498	Condition	2 == upd -> ints [ I_NXPASS ]	5354:9:192143:192166	2576775	0	True				
ANR	2577499	EqualityExpression	2 == upd -> ints [ I_NXPASS ]		2576775	0		==			
ANR	2577500	PrimaryExpression	2		2576775	0					
ANR	2577501	ArrayIndexing	upd -> ints [ I_NXPASS ]		2576775	1					
ANR	2577502	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2577503	Identifier	upd		2576775	0					
ANR	2577504	Identifier	ints		2576775	1					
ANR	2577505	Identifier	I_NXPASS		2576775	1					
ANR	2577506	CompoundStatement		139:35:4542:4542	2576775	1					
ANR	2577507	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_XSTEP ] )"	5356:9:192207:192260	2576775	0	True				
ANR	2577508	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_XSTEP ] )"		2576775	0					
ANR	2577509	Callee	UPD_MM_DEL_PARAM		2576775	0					
ANR	2577510	Identifier	UPD_MM_DEL_PARAM		2576775	0					
ANR	2577511	ArgumentList	udev -> memory		2576775	1					
ANR	2577512	Argument	udev -> memory		2576775	0					
ANR	2577513	PtrMemberAccess	udev -> memory		2576775	0					
ANR	2577514	Identifier	udev		2576775	0					
ANR	2577515	Identifier	memory		2576775	1					
ANR	2577516	Argument	upd -> strings [ S_XSTEP ]		2576775	1					
ANR	2577517	ArrayIndexing	upd -> strings [ S_XSTEP ]		2576775	0					
ANR	2577518	PtrMemberAccess	upd -> strings		2576775	0					
ANR	2577519	Identifier	upd		2576775	0					
ANR	2577520	Identifier	strings		2576775	1					
ANR	2577521	Identifier	S_XSTEP		2576775	1					
ANR	2577522	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , bp , 4 )"	5357:9:192271:192307	2576775	1	True				
ANR	2577523	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , bp , 4 )"		2576775	0					
ANR	2577524	Callee	UPD_MM_GET_ARRAY		2576775	0					
ANR	2577525	Identifier	UPD_MM_GET_ARRAY		2576775	0					
ANR	2577526	ArgumentList	udev -> memory		2576775	1					
ANR	2577527	Argument	udev -> memory		2576775	0					
ANR	2577528	PtrMemberAccess	udev -> memory		2576775	0					
ANR	2577529	Identifier	udev		2576775	0					
ANR	2577530	Identifier	memory		2576775	1					
ANR	2577531	Argument	bp		2576775	1					
ANR	2577532	Identifier	bp		2576775	0					
ANR	2577533	Argument	4		2576775	2					
ANR	2577534	PrimaryExpression	4		2576775	0					
ANR	2577535	ExpressionStatement	upd -> strings [ S_XSTEP ] . size = 4	5358:9:192318:192348	2576775	2	True				
ANR	2577536	AssignmentExpression	upd -> strings [ S_XSTEP ] . size = 4		2576775	0		=			
ANR	2577537	MemberAccess	upd -> strings [ S_XSTEP ] . size		2576775	0					
ANR	2577538	ArrayIndexing	upd -> strings [ S_XSTEP ]		2576775	0					
ANR	2577539	PtrMemberAccess	upd -> strings		2576775	0					
ANR	2577540	Identifier	upd		2576775	0					
ANR	2577541	Identifier	strings		2576775	1					
ANR	2577542	Identifier	S_XSTEP		2576775	1					
ANR	2577543	Identifier	size		2576775	1					
ANR	2577544	PrimaryExpression	4		2576775	1					
ANR	2577545	ExpressionStatement	upd -> strings [ S_XSTEP ] . data = bp	5359:9:192359:192390	2576775	3	True				
ANR	2577546	AssignmentExpression	upd -> strings [ S_XSTEP ] . data = bp		2576775	0		=			
ANR	2577547	MemberAccess	upd -> strings [ S_XSTEP ] . data		2576775	0					
ANR	2577548	ArrayIndexing	upd -> strings [ S_XSTEP ]		2576775	0					
ANR	2577549	PtrMemberAccess	upd -> strings		2576775	0					
ANR	2577550	Identifier	upd		2576775	0					
ANR	2577551	Identifier	strings		2576775	1					
ANR	2577552	Identifier	S_XSTEP		2576775	1					
ANR	2577553	Identifier	data		2576775	1					
ANR	2577554	Identifier	bp		2576775	1					
ANR	2577555	ExpressionStatement	* bp ++ = 0x1b	5360:9:192401:192413	2576775	4	True				
ANR	2577556	AssignmentExpression	* bp ++ = 0x1b		2576775	0		=			
ANR	2577557	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2577558	UnaryOperator	*		2576775	0					
ANR	2577559	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2577560	Identifier	bp		2576775	0					
ANR	2577561	IncDec	++		2576775	1					
ANR	2577562	PrimaryExpression	0x1b		2576775	1					
ANR	2577563	ExpressionStatement	* bp ++ = '\\\\'	5361:9:192424:192436	2576775	5	True				
ANR	2577564	AssignmentExpression	* bp ++ = '\\\\'		2576775	0		=			
ANR	2577565	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2577566	UnaryOperator	*		2576775	0					
ANR	2577567	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2577568	Identifier	bp		2576775	0					
ANR	2577569	IncDec	++		2576775	1					
ANR	2577570	PrimaryExpression	'\\\\'		2576775	1					
ANR	2577571	ExpressionStatement	* bp ++ = ratio & 0xff	5362:9:192447:192472	2576775	6	True				
ANR	2577572	AssignmentExpression	* bp ++ = ratio & 0xff		2576775	0		=			
ANR	2577573	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2577574	UnaryOperator	*		2576775	0					
ANR	2577575	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2577576	Identifier	bp		2576775	0					
ANR	2577577	IncDec	++		2576775	1					
ANR	2577578	BitAndExpression	ratio & 0xff		2576775	1		&			
ANR	2577579	Identifier	ratio		2576775	0					
ANR	2577580	PrimaryExpression	0xff		2576775	1					
ANR	2577581	ExpressionStatement	* bp ++ = ( ratio >> 8 ) & 0xff	5363:9:192483:192508	2576775	7	True				
ANR	2577582	AssignmentExpression	* bp ++ = ( ratio >> 8 ) & 0xff		2576775	0		=			
ANR	2577583	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2577584	UnaryOperator	*		2576775	0					
ANR	2577585	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2577586	Identifier	bp		2576775	0					
ANR	2577587	IncDec	++		2576775	1					
ANR	2577588	BitAndExpression	( ratio >> 8 ) & 0xff		2576775	1		&			
ANR	2577589	ShiftExpression	ratio >> 8		2576775	0		>>			
ANR	2577590	Identifier	ratio		2576775	0					
ANR	2577591	PrimaryExpression	8		2576775	1					
ANR	2577592	PrimaryExpression	0xff		2576775	1					
ANR	2577593	ElseStatement	else		2576775	0					
ANR	2577594	CompoundStatement		150:13:4897:4897	2576775	0					
ANR	2577595	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_XMOVE ] )"	5367:9:192593:192646	2576775	0	True				
ANR	2577596	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_XMOVE ] )"		2576775	0					
ANR	2577597	Callee	UPD_MM_DEL_PARAM		2576775	0					
ANR	2577598	Identifier	UPD_MM_DEL_PARAM		2576775	0					
ANR	2577599	ArgumentList	udev -> memory		2576775	1					
ANR	2577600	Argument	udev -> memory		2576775	0					
ANR	2577601	PtrMemberAccess	udev -> memory		2576775	0					
ANR	2577602	Identifier	udev		2576775	0					
ANR	2577603	Identifier	memory		2576775	1					
ANR	2577604	Argument	upd -> strings [ S_XMOVE ]		2576775	1					
ANR	2577605	ArrayIndexing	upd -> strings [ S_XMOVE ]		2576775	0					
ANR	2577606	PtrMemberAccess	upd -> strings		2576775	0					
ANR	2577607	Identifier	upd		2576775	0					
ANR	2577608	Identifier	strings		2576775	1					
ANR	2577609	Identifier	S_XMOVE		2576775	1					
ANR	2577610	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , bp , 2 )"	5368:9:192657:192693	2576775	1	True				
ANR	2577611	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , bp , 2 )"		2576775	0					
ANR	2577612	Callee	UPD_MM_GET_ARRAY		2576775	0					
ANR	2577613	Identifier	UPD_MM_GET_ARRAY		2576775	0					
ANR	2577614	ArgumentList	udev -> memory		2576775	1					
ANR	2577615	Argument	udev -> memory		2576775	0					
ANR	2577616	PtrMemberAccess	udev -> memory		2576775	0					
ANR	2577617	Identifier	udev		2576775	0					
ANR	2577618	Identifier	memory		2576775	1					
ANR	2577619	Argument	bp		2576775	1					
ANR	2577620	Identifier	bp		2576775	0					
ANR	2577621	Argument	2		2576775	2					
ANR	2577622	PrimaryExpression	2		2576775	0					
ANR	2577623	ExpressionStatement	upd -> strings [ S_XMOVE ] . size = 2	5369:9:192704:192734	2576775	2	True				
ANR	2577624	AssignmentExpression	upd -> strings [ S_XMOVE ] . size = 2		2576775	0		=			
ANR	2577625	MemberAccess	upd -> strings [ S_XMOVE ] . size		2576775	0					
ANR	2577626	ArrayIndexing	upd -> strings [ S_XMOVE ]		2576775	0					
ANR	2577627	PtrMemberAccess	upd -> strings		2576775	0					
ANR	2577628	Identifier	upd		2576775	0					
ANR	2577629	Identifier	strings		2576775	1					
ANR	2577630	Identifier	S_XMOVE		2576775	1					
ANR	2577631	Identifier	size		2576775	1					
ANR	2577632	PrimaryExpression	2		2576775	1					
ANR	2577633	ExpressionStatement	upd -> strings [ S_XMOVE ] . data = bp	5370:9:192745:192776	2576775	3	True				
ANR	2577634	AssignmentExpression	upd -> strings [ S_XMOVE ] . data = bp		2576775	0		=			
ANR	2577635	MemberAccess	upd -> strings [ S_XMOVE ] . data		2576775	0					
ANR	2577636	ArrayIndexing	upd -> strings [ S_XMOVE ]		2576775	0					
ANR	2577637	PtrMemberAccess	upd -> strings		2576775	0					
ANR	2577638	Identifier	upd		2576775	0					
ANR	2577639	Identifier	strings		2576775	1					
ANR	2577640	Identifier	S_XMOVE		2576775	1					
ANR	2577641	Identifier	data		2576775	1					
ANR	2577642	Identifier	bp		2576775	1					
ANR	2577643	ExpressionStatement	* bp ++ = 0x1b	5371:9:192787:192800	2576775	4	True				
ANR	2577644	AssignmentExpression	* bp ++ = 0x1b		2576775	0		=			
ANR	2577645	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2577646	UnaryOperator	*		2576775	0					
ANR	2577647	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2577648	Identifier	bp		2576775	0					
ANR	2577649	IncDec	++		2576775	1					
ANR	2577650	PrimaryExpression	0x1b		2576775	1					
ANR	2577651	ExpressionStatement	* bp ++ = upd -> flags & B_XABS ? '$' : '\\\\'	5372:9:192811:192852	2576775	5	True				
ANR	2577652	AssignmentExpression	* bp ++ = upd -> flags & B_XABS ? '$' : '\\\\'		2576775	0		=			
ANR	2577653	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2577654	UnaryOperator	*		2576775	0					
ANR	2577655	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2577656	Identifier	bp		2576775	0					
ANR	2577657	IncDec	++		2576775	1					
ANR	2577658	ConditionalExpression	upd -> flags & B_XABS ? '$' : '\\\\'		2576775	1					
ANR	2577659	Condition	upd -> flags & B_XABS		2576775	0					
ANR	2577660	BitAndExpression	upd -> flags & B_XABS		2576775	0		&			
ANR	2577661	PtrMemberAccess	upd -> flags		2576775	0					
ANR	2577662	Identifier	upd		2576775	0					
ANR	2577663	Identifier	flags		2576775	1					
ANR	2577664	Identifier	B_XABS		2576775	1					
ANR	2577665	PrimaryExpression	'$'		2576775	1					
ANR	2577666	PrimaryExpression	'\\\\'		2576775	2					
ANR	2577667	SwitchStatement	switch ( upd -> choice [ C_FORMAT ] )		2576775	6					
ANR	2577668	Condition	upd -> choice [ C_FORMAT ]	5379:10:193010:193030	2576775	0	True				
ANR	2577669	ArrayIndexing	upd -> choice [ C_FORMAT ]		2576775	0					
ANR	2577670	PtrMemberAccess	upd -> choice		2576775	0					
ANR	2577671	Identifier	upd		2576775	0					
ANR	2577672	Identifier	choice		2576775	1					
ANR	2577673	Identifier	C_FORMAT		2576775	1					
ANR	2577674	CompoundStatement		164:32:5405:5405	2576775	1					
ANR	2577675	Label	case FMT_ESCNMY :	5380:6:193040:193055	2576775	0	True				
ANR	2577676	Identifier	FMT_ESCNMY		2576775	0					
ANR	2577677	IfStatement	if ( 0 == upd -> ints [ I_ROWS ] )		2576775	1					
ANR	2577678	Condition	0 == upd -> ints [ I_ROWS ]	5382:13:193097:193118	2576775	0	True				
ANR	2577679	EqualityExpression	0 == upd -> ints [ I_ROWS ]		2576775	0		==			
ANR	2577680	PrimaryExpression	0		2576775	0					
ANR	2577681	ArrayIndexing	upd -> ints [ I_ROWS ]		2576775	1					
ANR	2577682	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2577683	Identifier	upd		2576775	0					
ANR	2577684	Identifier	ints		2576775	1					
ANR	2577685	Identifier	I_ROWS		2576775	1					
ANR	2577686	CompoundStatement		167:37:5494:5494	2576775	1					
ANR	2577687	ExpressionStatement	upd -> ints [ I_ROWS ] = 1	5383:12:193135:193156	2576775	0	True				
ANR	2577688	AssignmentExpression	upd -> ints [ I_ROWS ] = 1		2576775	0		=			
ANR	2577689	ArrayIndexing	upd -> ints [ I_ROWS ]		2576775	0					
ANR	2577690	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2577691	Identifier	upd		2576775	0					
ANR	2577692	Identifier	ints		2576775	1					
ANR	2577693	Identifier	I_ROWS		2576775	1					
ANR	2577694	PrimaryExpression	1		2576775	1					
ANR	2577695	IfStatement	if ( 0 == upd -> ints [ I_PATRPT ] )		2576775	2					
ANR	2577696	Condition	0 == upd -> ints [ I_PATRPT ]	5386:13:193211:193234	2576775	0	True				
ANR	2577697	EqualityExpression	0 == upd -> ints [ I_PATRPT ]		2576775	0		==			
ANR	2577698	PrimaryExpression	0		2576775	0					
ANR	2577699	ArrayIndexing	upd -> ints [ I_PATRPT ]		2576775	1					
ANR	2577700	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2577701	Identifier	upd		2576775	0					
ANR	2577702	Identifier	ints		2576775	1					
ANR	2577703	Identifier	I_PATRPT		2576775	1					
ANR	2577704	CompoundStatement		171:39:5610:5610	2576775	1					
ANR	2577705	ExpressionStatement	upd -> ints [ I_PATRPT ] = 1	5387:12:193251:193274	2576775	0	True				
ANR	2577706	AssignmentExpression	upd -> ints [ I_PATRPT ] = 1		2576775	0		=			
ANR	2577707	ArrayIndexing	upd -> ints [ I_PATRPT ]		2576775	0					
ANR	2577708	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2577709	Identifier	upd		2576775	0					
ANR	2577710	Identifier	ints		2576775	1					
ANR	2577711	Identifier	I_PATRPT		2576775	1					
ANR	2577712	PrimaryExpression	1		2576775	1					
ANR	2577713	IfStatement	if ( upd -> ints [ I_PATRPT ] != upd -> int_a [ IA_ROWMASK ] . size )		2576775	3					
ANR	2577714	Condition	upd -> ints [ I_PATRPT ] != upd -> int_a [ IA_ROWMASK ] . size	5390:13:193344:193393	2576775	0	True				
ANR	2577715	EqualityExpression	upd -> ints [ I_PATRPT ] != upd -> int_a [ IA_ROWMASK ] . size		2576775	0		!=			
ANR	2577716	ArrayIndexing	upd -> ints [ I_PATRPT ]		2576775	0					
ANR	2577717	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2577718	Identifier	upd		2576775	0					
ANR	2577719	Identifier	ints		2576775	1					
ANR	2577720	Identifier	I_PATRPT		2576775	1					
ANR	2577721	MemberAccess	upd -> int_a [ IA_ROWMASK ] . size		2576775	1					
ANR	2577722	ArrayIndexing	upd -> int_a [ IA_ROWMASK ]		2576775	0					
ANR	2577723	PtrMemberAccess	upd -> int_a		2576775	0					
ANR	2577724	Identifier	upd		2576775	0					
ANR	2577725	Identifier	int_a		2576775	1					
ANR	2577726	Identifier	IA_ROWMASK		2576775	1					
ANR	2577727	Identifier	size		2576775	1					
ANR	2577728	CompoundStatement		176:12:5784:5794	2576775	1					
ANR	2577729	IdentifierDeclStatement	"int i , * bp ;"	5391:12:193411:193421	2576775	0	True				
ANR	2577730	IdentifierDecl	i		2576775	0					
ANR	2577731	IdentifierDeclType	int		2576775	0					
ANR	2577732	Identifier	i		2576775	1					
ANR	2577733	IdentifierDecl	* bp		2576775	1					
ANR	2577734	IdentifierDeclType	int *		2576775	0					
ANR	2577735	Identifier	bp		2576775	1					
ANR	2577736	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> int_a [ IA_ROWMASK ] )"	5392:12:193435:193489	2576775	1	True				
ANR	2577737	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> int_a [ IA_ROWMASK ] )"		2576775	0					
ANR	2577738	Callee	UPD_MM_DEL_PARAM		2576775	0					
ANR	2577739	Identifier	UPD_MM_DEL_PARAM		2576775	0					
ANR	2577740	ArgumentList	udev -> memory		2576775	1					
ANR	2577741	Argument	udev -> memory		2576775	0					
ANR	2577742	PtrMemberAccess	udev -> memory		2576775	0					
ANR	2577743	Identifier	udev		2576775	0					
ANR	2577744	Identifier	memory		2576775	1					
ANR	2577745	Argument	upd -> int_a [ IA_ROWMASK ]		2576775	1					
ANR	2577746	ArrayIndexing	upd -> int_a [ IA_ROWMASK ]		2576775	0					
ANR	2577747	PtrMemberAccess	upd -> int_a		2576775	0					
ANR	2577748	Identifier	upd		2576775	0					
ANR	2577749	Identifier	int_a		2576775	1					
ANR	2577750	Identifier	IA_ROWMASK		2576775	1					
ANR	2577751	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , bp , upd -> ints [ I_PATRPT ] )"	5393:12:193503:193557	2576775	2	True				
ANR	2577752	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , bp , upd -> ints [ I_PATRPT ] )"		2576775	0					
ANR	2577753	Callee	UPD_MM_GET_ARRAY		2576775	0					
ANR	2577754	Identifier	UPD_MM_GET_ARRAY		2576775	0					
ANR	2577755	ArgumentList	udev -> memory		2576775	1					
ANR	2577756	Argument	udev -> memory		2576775	0					
ANR	2577757	PtrMemberAccess	udev -> memory		2576775	0					
ANR	2577758	Identifier	udev		2576775	0					
ANR	2577759	Identifier	memory		2576775	1					
ANR	2577760	Argument	bp		2576775	1					
ANR	2577761	Identifier	bp		2576775	0					
ANR	2577762	Argument	upd -> ints [ I_PATRPT ]		2576775	2					
ANR	2577763	ArrayIndexing	upd -> ints [ I_PATRPT ]		2576775	0					
ANR	2577764	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2577765	Identifier	upd		2576775	0					
ANR	2577766	Identifier	ints		2576775	1					
ANR	2577767	Identifier	I_PATRPT		2576775	1					
ANR	2577768	ExpressionStatement	upd -> int_a [ IA_ROWMASK ] . size = upd -> ints [ I_PATRPT ]	5394:12:193571:193620	2576775	3	True				
ANR	2577769	AssignmentExpression	upd -> int_a [ IA_ROWMASK ] . size = upd -> ints [ I_PATRPT ]		2576775	0		=			
ANR	2577770	MemberAccess	upd -> int_a [ IA_ROWMASK ] . size		2576775	0					
ANR	2577771	ArrayIndexing	upd -> int_a [ IA_ROWMASK ]		2576775	0					
ANR	2577772	PtrMemberAccess	upd -> int_a		2576775	0					
ANR	2577773	Identifier	upd		2576775	0					
ANR	2577774	Identifier	int_a		2576775	1					
ANR	2577775	Identifier	IA_ROWMASK		2576775	1					
ANR	2577776	Identifier	size		2576775	1					
ANR	2577777	ArrayIndexing	upd -> ints [ I_PATRPT ]		2576775	1					
ANR	2577778	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2577779	Identifier	upd		2576775	0					
ANR	2577780	Identifier	ints		2576775	1					
ANR	2577781	Identifier	I_PATRPT		2576775	1					
ANR	2577782	ExpressionStatement	upd -> int_a [ IA_ROWMASK ] . data = bp	5395:12:193634:193666	2576775	4	True				
ANR	2577783	AssignmentExpression	upd -> int_a [ IA_ROWMASK ] . data = bp		2576775	0		=			
ANR	2577784	MemberAccess	upd -> int_a [ IA_ROWMASK ] . data		2576775	0					
ANR	2577785	ArrayIndexing	upd -> int_a [ IA_ROWMASK ]		2576775	0					
ANR	2577786	PtrMemberAccess	upd -> int_a		2576775	0					
ANR	2577787	Identifier	upd		2576775	0					
ANR	2577788	Identifier	int_a		2576775	1					
ANR	2577789	Identifier	IA_ROWMASK		2576775	1					
ANR	2577790	Identifier	data		2576775	1					
ANR	2577791	Identifier	bp		2576775	1					
ANR	2577792	ForStatement	for ( i = 0 ; i < upd -> ints [ I_PATRPT ] ; i ++ )		2576775	5					
ANR	2577793	ForInit	i = 0 ;	5396:17:193685:193691	2576775	0	True				
ANR	2577794	AssignmentExpression	i = 0		2576775	0		=			
ANR	2577795	Identifier	i		2576775	0					
ANR	2577796	PrimaryExpression	0		2576775	1					
ANR	2577797	Condition	i < upd -> ints [ I_PATRPT ]	5396:25:193693:193715	2576775	1	True				
ANR	2577798	RelationalExpression	i < upd -> ints [ I_PATRPT ]		2576775	0		<			
ANR	2577799	Identifier	i		2576775	0					
ANR	2577800	ArrayIndexing	upd -> ints [ I_PATRPT ]		2576775	1					
ANR	2577801	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2577802	Identifier	upd		2576775	0					
ANR	2577803	Identifier	ints		2576775	1					
ANR	2577804	Identifier	I_PATRPT		2576775	1					
ANR	2577805	PostIncDecOperationExpression	i ++	5396:51:193719:193721	2576775	2	True				
ANR	2577806	Identifier	i		2576775	0					
ANR	2577807	IncDec	++		2576775	1					
ANR	2577808	CompoundStatement		181:55:6096:6096	2576775	3					
ANR	2577809	ExpressionStatement	* bp ++ = 1	5397:15:193740:193750	2576775	0	True				
ANR	2577810	AssignmentExpression	* bp ++ = 1		2576775	0		=			
ANR	2577811	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2577812	UnaryOperator	*		2576775	0					
ANR	2577813	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2577814	Identifier	bp		2576775	0					
ANR	2577815	IncDec	++		2576775	1					
ANR	2577816	PrimaryExpression	1		2576775	1					
ANR	2577817	IfStatement	if ( upd -> ints [ I_PATRPT ] != upd -> int_a [ IA_SCNOFS ] . size )		2576775	4					
ANR	2577818	Condition	upd -> ints [ I_PATRPT ] != upd -> int_a [ IA_SCNOFS ] . size	5401:13:193861:193909	2576775	0	True				
ANR	2577819	EqualityExpression	upd -> ints [ I_PATRPT ] != upd -> int_a [ IA_SCNOFS ] . size		2576775	0		!=			
ANR	2577820	ArrayIndexing	upd -> ints [ I_PATRPT ]		2576775	0					
ANR	2577821	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2577822	Identifier	upd		2576775	0					
ANR	2577823	Identifier	ints		2576775	1					
ANR	2577824	Identifier	I_PATRPT		2576775	1					
ANR	2577825	MemberAccess	upd -> int_a [ IA_SCNOFS ] . size		2576775	1					
ANR	2577826	ArrayIndexing	upd -> int_a [ IA_SCNOFS ]		2576775	0					
ANR	2577827	PtrMemberAccess	upd -> int_a		2576775	0					
ANR	2577828	Identifier	upd		2576775	0					
ANR	2577829	Identifier	int_a		2576775	1					
ANR	2577830	Identifier	IA_SCNOFS		2576775	1					
ANR	2577831	Identifier	size		2576775	1					
ANR	2577832	CompoundStatement		187:12:6300:6310	2576775	1					
ANR	2577833	IdentifierDeclStatement	"int i , * bp ;"	5402:12:193927:193937	2576775	0	True				
ANR	2577834	IdentifierDecl	i		2576775	0					
ANR	2577835	IdentifierDeclType	int		2576775	0					
ANR	2577836	Identifier	i		2576775	1					
ANR	2577837	IdentifierDecl	* bp		2576775	1					
ANR	2577838	IdentifierDeclType	int *		2576775	0					
ANR	2577839	Identifier	bp		2576775	1					
ANR	2577840	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> int_a [ IA_SCNOFS ] )"	5403:12:193951:194004	2576775	1	True				
ANR	2577841	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> int_a [ IA_SCNOFS ] )"		2576775	0					
ANR	2577842	Callee	UPD_MM_DEL_PARAM		2576775	0					
ANR	2577843	Identifier	UPD_MM_DEL_PARAM		2576775	0					
ANR	2577844	ArgumentList	udev -> memory		2576775	1					
ANR	2577845	Argument	udev -> memory		2576775	0					
ANR	2577846	PtrMemberAccess	udev -> memory		2576775	0					
ANR	2577847	Identifier	udev		2576775	0					
ANR	2577848	Identifier	memory		2576775	1					
ANR	2577849	Argument	upd -> int_a [ IA_SCNOFS ]		2576775	1					
ANR	2577850	ArrayIndexing	upd -> int_a [ IA_SCNOFS ]		2576775	0					
ANR	2577851	PtrMemberAccess	upd -> int_a		2576775	0					
ANR	2577852	Identifier	upd		2576775	0					
ANR	2577853	Identifier	int_a		2576775	1					
ANR	2577854	Identifier	IA_SCNOFS		2576775	1					
ANR	2577855	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , bp , upd -> ints [ I_PATRPT ] )"	5404:12:194018:194072	2576775	2	True				
ANR	2577856	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , bp , upd -> ints [ I_PATRPT ] )"		2576775	0					
ANR	2577857	Callee	UPD_MM_GET_ARRAY		2576775	0					
ANR	2577858	Identifier	UPD_MM_GET_ARRAY		2576775	0					
ANR	2577859	ArgumentList	udev -> memory		2576775	1					
ANR	2577860	Argument	udev -> memory		2576775	0					
ANR	2577861	PtrMemberAccess	udev -> memory		2576775	0					
ANR	2577862	Identifier	udev		2576775	0					
ANR	2577863	Identifier	memory		2576775	1					
ANR	2577864	Argument	bp		2576775	1					
ANR	2577865	Identifier	bp		2576775	0					
ANR	2577866	Argument	upd -> ints [ I_PATRPT ]		2576775	2					
ANR	2577867	ArrayIndexing	upd -> ints [ I_PATRPT ]		2576775	0					
ANR	2577868	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2577869	Identifier	upd		2576775	0					
ANR	2577870	Identifier	ints		2576775	1					
ANR	2577871	Identifier	I_PATRPT		2576775	1					
ANR	2577872	ExpressionStatement	upd -> int_a [ IA_SCNOFS ] . size = upd -> ints [ I_PATRPT ]	5405:12:194086:194134	2576775	3	True				
ANR	2577873	AssignmentExpression	upd -> int_a [ IA_SCNOFS ] . size = upd -> ints [ I_PATRPT ]		2576775	0		=			
ANR	2577874	MemberAccess	upd -> int_a [ IA_SCNOFS ] . size		2576775	0					
ANR	2577875	ArrayIndexing	upd -> int_a [ IA_SCNOFS ]		2576775	0					
ANR	2577876	PtrMemberAccess	upd -> int_a		2576775	0					
ANR	2577877	Identifier	upd		2576775	0					
ANR	2577878	Identifier	int_a		2576775	1					
ANR	2577879	Identifier	IA_SCNOFS		2576775	1					
ANR	2577880	Identifier	size		2576775	1					
ANR	2577881	ArrayIndexing	upd -> ints [ I_PATRPT ]		2576775	1					
ANR	2577882	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2577883	Identifier	upd		2576775	0					
ANR	2577884	Identifier	ints		2576775	1					
ANR	2577885	Identifier	I_PATRPT		2576775	1					
ANR	2577886	ExpressionStatement	upd -> int_a [ IA_SCNOFS ] . data = bp	5406:12:194148:194179	2576775	4	True				
ANR	2577887	AssignmentExpression	upd -> int_a [ IA_SCNOFS ] . data = bp		2576775	0		=			
ANR	2577888	MemberAccess	upd -> int_a [ IA_SCNOFS ] . data		2576775	0					
ANR	2577889	ArrayIndexing	upd -> int_a [ IA_SCNOFS ]		2576775	0					
ANR	2577890	PtrMemberAccess	upd -> int_a		2576775	0					
ANR	2577891	Identifier	upd		2576775	0					
ANR	2577892	Identifier	int_a		2576775	1					
ANR	2577893	Identifier	IA_SCNOFS		2576775	1					
ANR	2577894	Identifier	data		2576775	1					
ANR	2577895	Identifier	bp		2576775	1					
ANR	2577896	ForStatement	for ( i = 0 ; i < upd -> ints [ I_PATRPT ] ; i ++ )		2576775	5					
ANR	2577897	ForInit	i = 0 ;	5407:17:194198:194204	2576775	0	True				
ANR	2577898	AssignmentExpression	i = 0		2576775	0		=			
ANR	2577899	Identifier	i		2576775	0					
ANR	2577900	PrimaryExpression	0		2576775	1					
ANR	2577901	Condition	i < upd -> ints [ I_PATRPT ]	5407:25:194206:194228	2576775	1	True				
ANR	2577902	RelationalExpression	i < upd -> ints [ I_PATRPT ]		2576775	0		<			
ANR	2577903	Identifier	i		2576775	0					
ANR	2577904	ArrayIndexing	upd -> ints [ I_PATRPT ]		2576775	1					
ANR	2577905	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2577906	Identifier	upd		2576775	0					
ANR	2577907	Identifier	ints		2576775	1					
ANR	2577908	Identifier	I_PATRPT		2576775	1					
ANR	2577909	PostIncDecOperationExpression	i ++	5407:51:194232:194234	2576775	2	True				
ANR	2577910	Identifier	i		2576775	0					
ANR	2577911	IncDec	++		2576775	1					
ANR	2577912	CompoundStatement		192:55:6609:6609	2576775	3					
ANR	2577913	ExpressionStatement	* bp ++ = i	5408:15:194253:194263	2576775	0	True				
ANR	2577914	AssignmentExpression	* bp ++ = i		2576775	0		=			
ANR	2577915	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2577916	UnaryOperator	*		2576775	0					
ANR	2577917	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2577918	Identifier	bp		2576775	0					
ANR	2577919	IncDec	++		2576775	1					
ANR	2577920	Identifier	i		2576775	1					
ANR	2577921	BreakStatement	break ;	5411:6:194296:194301	2576775	5	True				
ANR	2577922	Label	case FMT_ESCP2Y :	5412:6:194309:194324	2576775	6	True				
ANR	2577923	Identifier	FMT_ESCP2Y		2576775	0					
ANR	2577924	Label	case FMT_ESCP2XY :	5413:6:194332:194348	2576775	7	True				
ANR	2577925	Identifier	FMT_ESCP2XY		2576775	0					
ANR	2577926	BreakStatement	break ;	5416:6:194451:194456	2576775	8	True				
ANR	2577927	IfStatement	if ( ( 0 == upd -> string_a [ SA_WRITECOMP ] . size ) && ( 0 == upd -> string_a [ SA_SETCOMP ] . size ) )		2576775	7					
ANR	2577928	Condition	( 0 == upd -> string_a [ SA_WRITECOMP ] . size ) && ( 0 == upd -> string_a [ SA_SETCOMP ] . size )	5420:6:194546:194633	2576775	0	True				
ANR	2577929	AndExpression	( 0 == upd -> string_a [ SA_WRITECOMP ] . size ) && ( 0 == upd -> string_a [ SA_SETCOMP ] . size )		2576775	0		&&			
ANR	2577930	EqualityExpression	0 == upd -> string_a [ SA_WRITECOMP ] . size		2576775	0		==			
ANR	2577931	PrimaryExpression	0		2576775	0					
ANR	2577932	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . size		2576775	1					
ANR	2577933	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2576775	0					
ANR	2577934	PtrMemberAccess	upd -> string_a		2576775	0					
ANR	2577935	Identifier	upd		2576775	0					
ANR	2577936	Identifier	string_a		2576775	1					
ANR	2577937	Identifier	SA_WRITECOMP		2576775	1					
ANR	2577938	Identifier	size		2576775	1					
ANR	2577939	EqualityExpression	0 == upd -> string_a [ SA_SETCOMP ] . size		2576775	1		==			
ANR	2577940	PrimaryExpression	0		2576775	0					
ANR	2577941	MemberAccess	upd -> string_a [ SA_SETCOMP ] . size		2576775	1					
ANR	2577942	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2576775	0					
ANR	2577943	PtrMemberAccess	upd -> string_a		2576775	0					
ANR	2577944	Identifier	upd		2576775	0					
ANR	2577945	Identifier	string_a		2576775	1					
ANR	2577946	Identifier	SA_SETCOMP		2576775	1					
ANR	2577947	Identifier	size		2576775	1					
ANR	2577948	CompoundStatement		209:6:7086:7093	2576775	1					
ANR	2577949	IdentifierDeclStatement	byte * bp ;	5422:6:194670:194678	2576775	0	True				
ANR	2577950	IdentifierDecl	* bp		2576775	0					
ANR	2577951	IdentifierDeclType	byte *		2576775	0					
ANR	2577952	Identifier	bp		2576775	1					
ANR	2577953	IdentifierDeclStatement	gs_param_string * ap ;	5423:6:194686:194705	2576775	1	True				
ANR	2577954	IdentifierDecl	* ap		2576775	0					
ANR	2577955	IdentifierDeclType	gs_param_string *		2576775	0					
ANR	2577956	Identifier	ap		2576775	1					
ANR	2577957	IdentifierDeclStatement	int i ;	5424:6:194713:194720	2576775	2	True				
ANR	2577958	IdentifierDecl	i		2576775	0					
ANR	2577959	IdentifierDeclType	int		2576775	0					
ANR	2577960	Identifier	i		2576775	1					
ANR	2577961	IfStatement	if ( 4 == upd -> ocomp )		2576775	3					
ANR	2577962	Condition	4 == upd -> ocomp	5426:9:194732:194746	2576775	0	True				
ANR	2577963	EqualityExpression	4 == upd -> ocomp		2576775	0		==			
ANR	2577964	PrimaryExpression	4		2576775	0					
ANR	2577965	PtrMemberAccess	upd -> ocomp		2576775	1					
ANR	2577966	Identifier	upd		2576775	0					
ANR	2577967	Identifier	ocomp		2576775	1					
ANR	2577968	CompoundStatement		211:26:7122:7122	2576775	1					
ANR	2577969	ExpressionStatement	"UPD_MM_DEL_APARAM ( udev -> memory , upd -> string_a [ SA_SETCOMP ] )"	5427:9:194796:194854	2576775	0	True				
ANR	2577970	CallExpression	"UPD_MM_DEL_APARAM ( udev -> memory , upd -> string_a [ SA_SETCOMP ] )"		2576775	0					
ANR	2577971	Callee	UPD_MM_DEL_APARAM		2576775	0					
ANR	2577972	Identifier	UPD_MM_DEL_APARAM		2576775	0					
ANR	2577973	ArgumentList	udev -> memory		2576775	1					
ANR	2577974	Argument	udev -> memory		2576775	0					
ANR	2577975	PtrMemberAccess	udev -> memory		2576775	0					
ANR	2577976	Identifier	udev		2576775	0					
ANR	2577977	Identifier	memory		2576775	1					
ANR	2577978	Argument	upd -> string_a [ SA_SETCOMP ]		2576775	1					
ANR	2577979	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2576775	0					
ANR	2577980	PtrMemberAccess	upd -> string_a		2576775	0					
ANR	2577981	Identifier	upd		2576775	0					
ANR	2577982	Identifier	string_a		2576775	1					
ANR	2577983	Identifier	SA_SETCOMP		2576775	1					
ANR	2577984	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , ap , 4 )"	5428:9:194865:194901	2576775	1	True				
ANR	2577985	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , ap , 4 )"		2576775	0					
ANR	2577986	Callee	UPD_MM_GET_ARRAY		2576775	0					
ANR	2577987	Identifier	UPD_MM_GET_ARRAY		2576775	0					
ANR	2577988	ArgumentList	udev -> memory		2576775	1					
ANR	2577989	Argument	udev -> memory		2576775	0					
ANR	2577990	PtrMemberAccess	udev -> memory		2576775	0					
ANR	2577991	Identifier	udev		2576775	0					
ANR	2577992	Identifier	memory		2576775	1					
ANR	2577993	Argument	ap		2576775	1					
ANR	2577994	Identifier	ap		2576775	0					
ANR	2577995	Argument	4		2576775	2					
ANR	2577996	PrimaryExpression	4		2576775	0					
ANR	2577997	ExpressionStatement	upd -> string_a [ SA_SETCOMP ] . data = ap	5429:9:194912:194947	2576775	2	True				
ANR	2577998	AssignmentExpression	upd -> string_a [ SA_SETCOMP ] . data = ap		2576775	0		=			
ANR	2577999	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		2576775	0					
ANR	2578000	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2576775	0					
ANR	2578001	PtrMemberAccess	upd -> string_a		2576775	0					
ANR	2578002	Identifier	upd		2576775	0					
ANR	2578003	Identifier	string_a		2576775	1					
ANR	2578004	Identifier	SA_SETCOMP		2576775	1					
ANR	2578005	Identifier	data		2576775	1					
ANR	2578006	Identifier	ap		2576775	1					
ANR	2578007	ExpressionStatement	upd -> string_a [ SA_SETCOMP ] . size = 4	5430:9:194958:194992	2576775	3	True				
ANR	2578008	AssignmentExpression	upd -> string_a [ SA_SETCOMP ] . size = 4		2576775	0		=			
ANR	2578009	MemberAccess	upd -> string_a [ SA_SETCOMP ] . size		2576775	0					
ANR	2578010	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2576775	0					
ANR	2578011	PtrMemberAccess	upd -> string_a		2576775	0					
ANR	2578012	Identifier	upd		2576775	0					
ANR	2578013	Identifier	string_a		2576775	1					
ANR	2578014	Identifier	SA_SETCOMP		2576775	1					
ANR	2578015	Identifier	size		2576775	1					
ANR	2578016	PrimaryExpression	4		2576775	1					
ANR	2578017	ForStatement	for ( i = 0 ; i < 4 ; ++ i )		2576775	4					
ANR	2578018	ForInit	i = 0 ;	5431:13:195007:195012	2576775	0	True				
ANR	2578019	AssignmentExpression	i = 0		2576775	0		=			
ANR	2578020	Identifier	i		2576775	0					
ANR	2578021	PrimaryExpression	0		2576775	1					
ANR	2578022	Condition	i < 4	5431:20:195014:195018	2576775	1	True				
ANR	2578023	RelationalExpression	i < 4		2576775	0		<			
ANR	2578024	Identifier	i		2576775	0					
ANR	2578025	PrimaryExpression	4		2576775	1					
ANR	2578026	UnaryExpression	++ i	5431:27:195021:195023	2576775	2	True				
ANR	2578027	IncDec	++		2576775	0					
ANR	2578028	Identifier	i		2576775	1					
ANR	2578029	CompoundStatement		216:32:7399:7399	2576775	3					
ANR	2578030	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , bp , 3 )"	5432:12:195040:195076	2576775	0	True				
ANR	2578031	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , bp , 3 )"		2576775	0					
ANR	2578032	Callee	UPD_MM_GET_ARRAY		2576775	0					
ANR	2578033	Identifier	UPD_MM_GET_ARRAY		2576775	0					
ANR	2578034	ArgumentList	udev -> memory		2576775	1					
ANR	2578035	Argument	udev -> memory		2576775	0					
ANR	2578036	PtrMemberAccess	udev -> memory		2576775	0					
ANR	2578037	Identifier	udev		2576775	0					
ANR	2578038	Identifier	memory		2576775	1					
ANR	2578039	Argument	bp		2576775	1					
ANR	2578040	Identifier	bp		2576775	0					
ANR	2578041	Argument	3		2576775	2					
ANR	2578042	PrimaryExpression	3		2576775	0					
ANR	2578043	ExpressionStatement	ap [ i ] . size = 3	5433:12:195090:195104	2576775	1	True				
ANR	2578044	AssignmentExpression	ap [ i ] . size = 3		2576775	0		=			
ANR	2578045	MemberAccess	ap [ i ] . size		2576775	0					
ANR	2578046	ArrayIndexing	ap [ i ]		2576775	0					
ANR	2578047	Identifier	ap		2576775	0					
ANR	2578048	Identifier	i		2576775	1					
ANR	2578049	Identifier	size		2576775	1					
ANR	2578050	PrimaryExpression	3		2576775	1					
ANR	2578051	ExpressionStatement	ap [ i ] . data = bp	5434:12:195118:195133	2576775	2	True				
ANR	2578052	AssignmentExpression	ap [ i ] . data = bp		2576775	0		=			
ANR	2578053	MemberAccess	ap [ i ] . data		2576775	0					
ANR	2578054	ArrayIndexing	ap [ i ]		2576775	0					
ANR	2578055	Identifier	ap		2576775	0					
ANR	2578056	Identifier	i		2576775	1					
ANR	2578057	Identifier	data		2576775	1					
ANR	2578058	Identifier	bp		2576775	1					
ANR	2578059	ExpressionStatement	* bp ++ = 0x1b	5435:12:195147:195159	2576775	3	True				
ANR	2578060	AssignmentExpression	* bp ++ = 0x1b		2576775	0		=			
ANR	2578061	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2578062	UnaryOperator	*		2576775	0					
ANR	2578063	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2578064	Identifier	bp		2576775	0					
ANR	2578065	IncDec	++		2576775	1					
ANR	2578066	PrimaryExpression	0x1b		2576775	1					
ANR	2578067	ExpressionStatement	* bp ++ = 'r'	5436:12:195173:195184	2576775	4	True				
ANR	2578068	AssignmentExpression	* bp ++ = 'r'		2576775	0		=			
ANR	2578069	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2578070	UnaryOperator	*		2576775	0					
ANR	2578071	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2578072	Identifier	bp		2576775	0					
ANR	2578073	IncDec	++		2576775	1					
ANR	2578074	PrimaryExpression	'r'		2576775	1					
ANR	2578075	SwitchStatement	switch ( ( ( updcomp_p ) upd -> valptr [ i ] ) -> cmap )		2576775	5					
ANR	2578076	Condition	( ( updcomp_p ) upd -> valptr [ i ] ) -> cmap	5437:19:195205:195237	2576775	0	True				
ANR	2578077	PtrMemberAccess	( ( updcomp_p ) upd -> valptr [ i ] ) -> cmap		2576775	0					
ANR	2578078	CastExpression	( updcomp_p ) upd -> valptr [ i ]		2576775	0					
ANR	2578079	CastTarget	updcomp_p		2576775	0					
ANR	2578080	ArrayIndexing	upd -> valptr [ i ]		2576775	1					
ANR	2578081	PtrMemberAccess	upd -> valptr		2576775	0					
ANR	2578082	Identifier	upd		2576775	0					
ANR	2578083	Identifier	valptr		2576775	1					
ANR	2578084	Identifier	i		2576775	1					
ANR	2578085	Identifier	cmap		2576775	1					
ANR	2578086	CompoundStatement		222:54:7613:7613	2576775	1					
ANR	2578087	Label	case 0 :	5438:15:195278:195284	2576775	0	True				
ANR	2578088	ExpressionStatement	* bp ++ = 0	5438:23:195286:195295	2576775	1	True				
ANR	2578089	AssignmentExpression	* bp ++ = 0		2576775	0		=			
ANR	2578090	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2578091	UnaryOperator	*		2576775	0					
ANR	2578092	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2578093	Identifier	bp		2576775	0					
ANR	2578094	IncDec	++		2576775	1					
ANR	2578095	PrimaryExpression	0		2576775	1					
ANR	2578096	BreakStatement	break ;	5438:34:195297:195302	2576775	2	True				
ANR	2578097	Label	case 1 :	5439:15:195331:195337	2576775	3	True				
ANR	2578098	ExpressionStatement	* bp ++ = 2	5439:23:195339:195348	2576775	4	True				
ANR	2578099	AssignmentExpression	* bp ++ = 2		2576775	0		=			
ANR	2578100	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2578101	UnaryOperator	*		2576775	0					
ANR	2578102	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2578103	Identifier	bp		2576775	0					
ANR	2578104	IncDec	++		2576775	1					
ANR	2578105	PrimaryExpression	2		2576775	1					
ANR	2578106	BreakStatement	break ;	5439:34:195350:195355	2576775	5	True				
ANR	2578107	Label	case 2 :	5440:15:195383:195389	2576775	6	True				
ANR	2578108	ExpressionStatement	* bp ++ = 1	5440:23:195391:195400	2576775	7	True				
ANR	2578109	AssignmentExpression	* bp ++ = 1		2576775	0		=			
ANR	2578110	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2578111	UnaryOperator	*		2576775	0					
ANR	2578112	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2578113	Identifier	bp		2576775	0					
ANR	2578114	IncDec	++		2576775	1					
ANR	2578115	PrimaryExpression	1		2576775	1					
ANR	2578116	BreakStatement	break ;	5440:34:195402:195407	2576775	8	True				
ANR	2578117	Label	case 3 :	5441:15:195438:195444	2576775	9	True				
ANR	2578118	ExpressionStatement	* bp ++ = 4	5441:23:195446:195455	2576775	10	True				
ANR	2578119	AssignmentExpression	* bp ++ = 4		2576775	0		=			
ANR	2578120	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2578121	UnaryOperator	*		2576775	0					
ANR	2578122	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2578123	Identifier	bp		2576775	0					
ANR	2578124	IncDec	++		2576775	1					
ANR	2578125	PrimaryExpression	4		2576775	1					
ANR	2578126	BreakStatement	break ;	5441:34:195457:195462	2576775	11	True				
ANR	2578127	ExpressionStatement	"UPD_MM_DEL_APARAM ( udev -> memory , upd -> string_a [ SA_WRITECOMP ] )"	5446:6:195636:195696	2576775	4	True				
ANR	2578128	CallExpression	"UPD_MM_DEL_APARAM ( udev -> memory , upd -> string_a [ SA_WRITECOMP ] )"		2576775	0					
ANR	2578129	Callee	UPD_MM_DEL_APARAM		2576775	0					
ANR	2578130	Identifier	UPD_MM_DEL_APARAM		2576775	0					
ANR	2578131	ArgumentList	udev -> memory		2576775	1					
ANR	2578132	Argument	udev -> memory		2576775	0					
ANR	2578133	PtrMemberAccess	udev -> memory		2576775	0					
ANR	2578134	Identifier	udev		2576775	0					
ANR	2578135	Identifier	memory		2576775	1					
ANR	2578136	Argument	upd -> string_a [ SA_WRITECOMP ]		2576775	1					
ANR	2578137	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2576775	0					
ANR	2578138	PtrMemberAccess	upd -> string_a		2576775	0					
ANR	2578139	Identifier	upd		2576775	0					
ANR	2578140	Identifier	string_a		2576775	1					
ANR	2578141	Identifier	SA_WRITECOMP		2576775	1					
ANR	2578142	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , ap , upd -> ocomp )"	5447:6:195704:195749	2576775	5	True				
ANR	2578143	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , ap , upd -> ocomp )"		2576775	0					
ANR	2578144	Callee	UPD_MM_GET_ARRAY		2576775	0					
ANR	2578145	Identifier	UPD_MM_GET_ARRAY		2576775	0					
ANR	2578146	ArgumentList	udev -> memory		2576775	1					
ANR	2578147	Argument	udev -> memory		2576775	0					
ANR	2578148	PtrMemberAccess	udev -> memory		2576775	0					
ANR	2578149	Identifier	udev		2576775	0					
ANR	2578150	Identifier	memory		2576775	1					
ANR	2578151	Argument	ap		2576775	1					
ANR	2578152	Identifier	ap		2576775	0					
ANR	2578153	Argument	upd -> ocomp		2576775	2					
ANR	2578154	PtrMemberAccess	upd -> ocomp		2576775	0					
ANR	2578155	Identifier	upd		2576775	0					
ANR	2578156	Identifier	ocomp		2576775	1					
ANR	2578157	ExpressionStatement	upd -> string_a [ SA_WRITECOMP ] . data = ap	5448:6:195757:195794	2576775	6	True				
ANR	2578158	AssignmentExpression	upd -> string_a [ SA_WRITECOMP ] . data = ap		2576775	0		=			
ANR	2578159	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		2576775	0					
ANR	2578160	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2576775	0					
ANR	2578161	PtrMemberAccess	upd -> string_a		2576775	0					
ANR	2578162	Identifier	upd		2576775	0					
ANR	2578163	Identifier	string_a		2576775	1					
ANR	2578164	Identifier	SA_WRITECOMP		2576775	1					
ANR	2578165	Identifier	data		2576775	1					
ANR	2578166	Identifier	ap		2576775	1					
ANR	2578167	ExpressionStatement	upd -> string_a [ SA_WRITECOMP ] . size = upd -> ncomp	5449:6:195802:195847	2576775	7	True				
ANR	2578168	AssignmentExpression	upd -> string_a [ SA_WRITECOMP ] . size = upd -> ncomp		2576775	0		=			
ANR	2578169	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . size		2576775	0					
ANR	2578170	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2576775	0					
ANR	2578171	PtrMemberAccess	upd -> string_a		2576775	0					
ANR	2578172	Identifier	upd		2576775	0					
ANR	2578173	Identifier	string_a		2576775	1					
ANR	2578174	Identifier	SA_WRITECOMP		2576775	1					
ANR	2578175	Identifier	size		2576775	1					
ANR	2578176	PtrMemberAccess	upd -> ncomp		2576775	1					
ANR	2578177	Identifier	upd		2576775	0					
ANR	2578178	Identifier	ncomp		2576775	1					
ANR	2578179	ForStatement	for ( i = 0 ; i < upd -> ocomp ; ++ i )		2576775	8					
ANR	2578180	ForInit	i = 0 ;	5450:10:195859:195864	2576775	0	True				
ANR	2578181	AssignmentExpression	i = 0		2576775	0		=			
ANR	2578182	Identifier	i		2576775	0					
ANR	2578183	PrimaryExpression	0		2576775	1					
ANR	2578184	Condition	i < upd -> ocomp	5450:17:195866:195879	2576775	1	True				
ANR	2578185	RelationalExpression	i < upd -> ocomp		2576775	0		<			
ANR	2578186	Identifier	i		2576775	0					
ANR	2578187	PtrMemberAccess	upd -> ocomp		2576775	1					
ANR	2578188	Identifier	upd		2576775	0					
ANR	2578189	Identifier	ocomp		2576775	1					
ANR	2578190	UnaryExpression	++ i	5450:33:195882:195884	2576775	2	True				
ANR	2578191	IncDec	++		2576775	0					
ANR	2578192	Identifier	i		2576775	1					
ANR	2578193	CompoundStatement		235:38:8260:8260	2576775	3					
ANR	2578194	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , bp , 6 )"	5451:9:195898:195934	2576775	0	True				
ANR	2578195	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , bp , 6 )"		2576775	0					
ANR	2578196	Callee	UPD_MM_GET_ARRAY		2576775	0					
ANR	2578197	Identifier	UPD_MM_GET_ARRAY		2576775	0					
ANR	2578198	ArgumentList	udev -> memory		2576775	1					
ANR	2578199	Argument	udev -> memory		2576775	0					
ANR	2578200	PtrMemberAccess	udev -> memory		2576775	0					
ANR	2578201	Identifier	udev		2576775	0					
ANR	2578202	Identifier	memory		2576775	1					
ANR	2578203	Argument	bp		2576775	1					
ANR	2578204	Identifier	bp		2576775	0					
ANR	2578205	Argument	6		2576775	2					
ANR	2578206	PrimaryExpression	6		2576775	0					
ANR	2578207	ExpressionStatement	ap [ i ] . size = 6	5452:9:195945:195959	2576775	1	True				
ANR	2578208	AssignmentExpression	ap [ i ] . size = 6		2576775	0		=			
ANR	2578209	MemberAccess	ap [ i ] . size		2576775	0					
ANR	2578210	ArrayIndexing	ap [ i ]		2576775	0					
ANR	2578211	Identifier	ap		2576775	0					
ANR	2578212	Identifier	i		2576775	1					
ANR	2578213	Identifier	size		2576775	1					
ANR	2578214	PrimaryExpression	6		2576775	1					
ANR	2578215	ExpressionStatement	ap [ i ] . data = bp	5453:9:195970:195985	2576775	2	True				
ANR	2578216	AssignmentExpression	ap [ i ] . data = bp		2576775	0		=			
ANR	2578217	MemberAccess	ap [ i ] . data		2576775	0					
ANR	2578218	ArrayIndexing	ap [ i ]		2576775	0					
ANR	2578219	Identifier	ap		2576775	0					
ANR	2578220	Identifier	i		2576775	1					
ANR	2578221	Identifier	data		2576775	1					
ANR	2578222	Identifier	bp		2576775	1					
ANR	2578223	ExpressionStatement	* bp ++ = 0x1b	5454:9:195996:196008	2576775	3	True				
ANR	2578224	AssignmentExpression	* bp ++ = 0x1b		2576775	0		=			
ANR	2578225	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2578226	UnaryOperator	*		2576775	0					
ANR	2578227	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2578228	Identifier	bp		2576775	0					
ANR	2578229	IncDec	++		2576775	1					
ANR	2578230	PrimaryExpression	0x1b		2576775	1					
ANR	2578231	ExpressionStatement	* bp ++ = '.'	5455:9:196019:196030	2576775	4	True				
ANR	2578232	AssignmentExpression	* bp ++ = '.'		2576775	0		=			
ANR	2578233	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2578234	UnaryOperator	*		2576775	0					
ANR	2578235	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2578236	Identifier	bp		2576775	0					
ANR	2578237	IncDec	++		2576775	1					
ANR	2578238	PrimaryExpression	'.'		2576775	1					
ANR	2578239	ExpressionStatement	* bp ++ = 1	5456:9:196041:196051	2576775	5	True				
ANR	2578240	AssignmentExpression	* bp ++ = 1		2576775	0		=			
ANR	2578241	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2578242	UnaryOperator	*		2576775	0					
ANR	2578243	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2578244	Identifier	bp		2576775	0					
ANR	2578245	IncDec	++		2576775	1					
ANR	2578246	PrimaryExpression	1		2576775	1					
ANR	2578247	SwitchStatement	switch ( upd -> choice [ C_FORMAT ] )		2576775	6					
ANR	2578248	Condition	upd -> choice [ C_FORMAT ]	5457:16:196080:196100	2576775	0	True				
ANR	2578249	ArrayIndexing	upd -> choice [ C_FORMAT ]		2576775	0					
ANR	2578250	PtrMemberAccess	upd -> choice		2576775	0					
ANR	2578251	Identifier	upd		2576775	0					
ANR	2578252	Identifier	choice		2576775	1					
ANR	2578253	Identifier	C_FORMAT		2576775	1					
ANR	2578254	CompoundStatement		242:38:8475:8475	2576775	1					
ANR	2578255	Label	case FMT_ESCP2Y :	5458:12:196116:196131	2576775	0	True				
ANR	2578256	Identifier	FMT_ESCP2Y		2576775	0					
ANR	2578257	Label	case FMT_ESCP2XY :	5459:12:196145:196161	2576775	1	True				
ANR	2578258	Identifier	FMT_ESCP2XY		2576775	0					
ANR	2578259	ExpressionStatement	* bp ++ = ( byte ) ( 3600.0 * upd -> ints [ I_NYPASS ] / udev -> y_pixels_per_inch + 0.5 )	5460:15:196178:196287	2576775	2	True				
ANR	2578260	AssignmentExpression	* bp ++ = ( byte ) ( 3600.0 * upd -> ints [ I_NYPASS ] / udev -> y_pixels_per_inch + 0.5 )		2576775	0		=			
ANR	2578261	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2578262	UnaryOperator	*		2576775	0					
ANR	2578263	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2578264	Identifier	bp		2576775	0					
ANR	2578265	IncDec	++		2576775	1					
ANR	2578266	CastExpression	( byte ) ( 3600.0 * upd -> ints [ I_NYPASS ] / udev -> y_pixels_per_inch + 0.5 )		2576775	1					
ANR	2578267	CastTarget	byte		2576775	0					
ANR	2578268	AdditiveExpression	3600.0 * upd -> ints [ I_NYPASS ] / udev -> y_pixels_per_inch + 0.5		2576775	1		+			
ANR	2578269	MultiplicativeExpression	3600.0 * upd -> ints [ I_NYPASS ] / udev -> y_pixels_per_inch		2576775	0		*			
ANR	2578270	PrimaryExpression	3600.0		2576775	0					
ANR	2578271	MultiplicativeExpression	upd -> ints [ I_NYPASS ] / udev -> y_pixels_per_inch		2576775	1		/			
ANR	2578272	ArrayIndexing	upd -> ints [ I_NYPASS ]		2576775	0					
ANR	2578273	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2578274	Identifier	upd		2576775	0					
ANR	2578275	Identifier	ints		2576775	1					
ANR	2578276	Identifier	I_NYPASS		2576775	1					
ANR	2578277	PtrMemberAccess	udev -> y_pixels_per_inch		2576775	1					
ANR	2578278	Identifier	udev		2576775	0					
ANR	2578279	Identifier	y_pixels_per_inch		2576775	1					
ANR	2578280	PrimaryExpression	0.5		2576775	1					
ANR	2578281	ExpressionStatement	* bp ++ = ( byte ) ( 3600.0 * upd -> ints [ I_NXPASS ] / udev -> x_pixels_per_inch + 0.5 )	5462:15:196304:196413	2576775	3	True				
ANR	2578282	AssignmentExpression	* bp ++ = ( byte ) ( 3600.0 * upd -> ints [ I_NXPASS ] / udev -> x_pixels_per_inch + 0.5 )		2576775	0		=			
ANR	2578283	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2578284	UnaryOperator	*		2576775	0					
ANR	2578285	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2578286	Identifier	bp		2576775	0					
ANR	2578287	IncDec	++		2576775	1					
ANR	2578288	CastExpression	( byte ) ( 3600.0 * upd -> ints [ I_NXPASS ] / udev -> x_pixels_per_inch + 0.5 )		2576775	1					
ANR	2578289	CastTarget	byte		2576775	0					
ANR	2578290	AdditiveExpression	3600.0 * upd -> ints [ I_NXPASS ] / udev -> x_pixels_per_inch + 0.5		2576775	1		+			
ANR	2578291	MultiplicativeExpression	3600.0 * upd -> ints [ I_NXPASS ] / udev -> x_pixels_per_inch		2576775	0		*			
ANR	2578292	PrimaryExpression	3600.0		2576775	0					
ANR	2578293	MultiplicativeExpression	upd -> ints [ I_NXPASS ] / udev -> x_pixels_per_inch		2576775	1		/			
ANR	2578294	ArrayIndexing	upd -> ints [ I_NXPASS ]		2576775	0					
ANR	2578295	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2578296	Identifier	upd		2576775	0					
ANR	2578297	Identifier	ints		2576775	1					
ANR	2578298	Identifier	I_NXPASS		2576775	1					
ANR	2578299	PtrMemberAccess	udev -> x_pixels_per_inch		2576775	1					
ANR	2578300	Identifier	udev		2576775	0					
ANR	2578301	Identifier	x_pixels_per_inch		2576775	1					
ANR	2578302	PrimaryExpression	0.5		2576775	1					
ANR	2578303	ExpressionStatement	* bp ++ = upd -> ints [ I_PINS2WRITE ]	5464:15:196430:196461	2576775	4	True				
ANR	2578304	AssignmentExpression	* bp ++ = upd -> ints [ I_PINS2WRITE ]		2576775	0		=			
ANR	2578305	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2578306	UnaryOperator	*		2576775	0					
ANR	2578307	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2578308	Identifier	bp		2576775	0					
ANR	2578309	IncDec	++		2576775	1					
ANR	2578310	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		2576775	1					
ANR	2578311	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2578312	Identifier	upd		2576775	0					
ANR	2578313	Identifier	ints		2576775	1					
ANR	2578314	Identifier	I_PINS2WRITE		2576775	1					
ANR	2578315	BreakStatement	break ;	5465:12:196475:196480	2576775	5	True				
ANR	2578316	Label	case FMT_ESCNMY :	5466:12:196494:196509	2576775	6	True				
ANR	2578317	Identifier	FMT_ESCNMY		2576775	0					
ANR	2578318	ExpressionStatement	* bp ++ = 10	5471:15:196688:196698	2576775	7	True				
ANR	2578319	AssignmentExpression	* bp ++ = 10		2576775	0		=			
ANR	2578320	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2578321	UnaryOperator	*		2576775	0					
ANR	2578322	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2578323	Identifier	bp		2576775	0					
ANR	2578324	IncDec	++		2576775	1					
ANR	2578325	PrimaryExpression	10		2576775	1					
ANR	2578326	ExpressionStatement	* bp ++ = 10	5472:15:196756:196766	2576775	8	True				
ANR	2578327	AssignmentExpression	* bp ++ = 10		2576775	0		=			
ANR	2578328	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2578329	UnaryOperator	*		2576775	0					
ANR	2578330	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2578331	Identifier	bp		2576775	0					
ANR	2578332	IncDec	++		2576775	1					
ANR	2578333	PrimaryExpression	10		2576775	1					
ANR	2578334	ExpressionStatement	* bp ++ = upd -> ints [ I_ROWS ]	5473:15:196783:196808	2576775	9	True				
ANR	2578335	AssignmentExpression	* bp ++ = upd -> ints [ I_ROWS ]		2576775	0		=			
ANR	2578336	UnaryOperationExpression	* bp ++		2576775	0					
ANR	2578337	UnaryOperator	*		2576775	0					
ANR	2578338	PostIncDecOperationExpression	bp ++		2576775	1					
ANR	2578339	Identifier	bp		2576775	0					
ANR	2578340	IncDec	++		2576775	1					
ANR	2578341	ArrayIndexing	upd -> ints [ I_ROWS ]		2576775	1					
ANR	2578342	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2578343	Identifier	upd		2576775	0					
ANR	2578344	Identifier	ints		2576775	1					
ANR	2578345	Identifier	I_ROWS		2576775	1					
ANR	2578346	BreakStatement	break ;	5474:12:196822:196827	2576775	10	True				
ANR	2578347	IfStatement	if ( upd -> ocomp > upd -> string_a [ SA_WRITECOMP ] . size )		2576775	8					
ANR	2578348	Condition	upd -> ocomp > upd -> string_a [ SA_WRITECOMP ] . size	5480:6:196964:197008	2576775	0	True				
ANR	2578349	RelationalExpression	upd -> ocomp > upd -> string_a [ SA_WRITECOMP ] . size		2576775	0		>			
ANR	2578350	PtrMemberAccess	upd -> ocomp		2576775	0					
ANR	2578351	Identifier	upd		2576775	0					
ANR	2578352	Identifier	ocomp		2576775	1					
ANR	2578353	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . size		2576775	1					
ANR	2578354	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2576775	0					
ANR	2578355	PtrMemberAccess	upd -> string_a		2576775	0					
ANR	2578356	Identifier	upd		2576775	0					
ANR	2578357	Identifier	string_a		2576775	1					
ANR	2578358	Identifier	SA_WRITECOMP		2576775	1					
ANR	2578359	Identifier	size		2576775	1					
ANR	2578360	CompoundStatement		265:53:9384:9384	2576775	1					
ANR	2578361	ExpressionStatement	"errprintf ( udev -> memory , ""ESC/P2-Open: WRITECOMP-Commands must be given\\n"" )"	5482:6:197052:197135	2576775	0	True				
ANR	2578362	CallExpression	"errprintf ( udev -> memory , ""ESC/P2-Open: WRITECOMP-Commands must be given\\n"" )"		2576775	0					
ANR	2578363	Callee	errprintf		2576775	0					
ANR	2578364	Identifier	errprintf		2576775	0					
ANR	2578365	ArgumentList	udev -> memory		2576775	1					
ANR	2578366	Argument	udev -> memory		2576775	0					
ANR	2578367	PtrMemberAccess	udev -> memory		2576775	0					
ANR	2578368	Identifier	udev		2576775	0					
ANR	2578369	Identifier	memory		2576775	1					
ANR	2578370	Argument	"""ESC/P2-Open: WRITECOMP-Commands must be given\\n"""		2576775	1					
ANR	2578371	PrimaryExpression	"""ESC/P2-Open: WRITECOMP-Commands must be given\\n"""		2576775	0					
ANR	2578372	ExpressionStatement	error = - 1	5485:6:197150:197160	2576775	1	True				
ANR	2578373	AssignmentExpression	error = - 1		2576775	0		=			
ANR	2578374	Identifier	error		2576775	0					
ANR	2578375	UnaryOperationExpression	- 1		2576775	1					
ANR	2578376	UnaryOperator	-		2576775	0					
ANR	2578377	PrimaryExpression	1		2576775	1					
ANR	2578378	SwitchStatement	switch ( upd -> choice [ C_FORMAT ] )		2576775	9					
ANR	2578379	Condition	upd -> choice [ C_FORMAT ]	5489:10:197210:197230	2576775	0	True				
ANR	2578380	ArrayIndexing	upd -> choice [ C_FORMAT ]		2576775	0					
ANR	2578381	PtrMemberAccess	upd -> choice		2576775	0					
ANR	2578382	Identifier	upd		2576775	0					
ANR	2578383	Identifier	choice		2576775	1					
ANR	2578384	Identifier	C_FORMAT		2576775	1					
ANR	2578385	CompoundStatement		274:33:9606:9606	2576775	1					
ANR	2578386	Label	case FMT_ESCP2Y :	5490:6:197241:197256	2576775	0	True				
ANR	2578387	Identifier	FMT_ESCP2Y		2576775	0					
ANR	2578388	IfStatement	if ( 1 < upd -> ints [ I_NXPASS ] )		2576775	1					
ANR	2578389	Condition	1 < upd -> ints [ I_NXPASS ]	5491:12:197270:197292	2576775	0	True				
ANR	2578390	RelationalExpression	1 < upd -> ints [ I_NXPASS ]		2576775	0		<			
ANR	2578391	PrimaryExpression	1		2576775	0					
ANR	2578392	ArrayIndexing	upd -> ints [ I_NXPASS ]		2576775	1					
ANR	2578393	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2578394	Identifier	upd		2576775	0					
ANR	2578395	Identifier	ints		2576775	1					
ANR	2578396	Identifier	I_NXPASS		2576775	1					
ANR	2578397	CompoundStatement		276:37:9668:9668	2576775	1					
ANR	2578398	ExpressionStatement	"errprintf ( udev -> memory , ""ESC/P2-Open: FMT_ESCP2Y cannot handle multiple X-Passes\\n"" )"	5493:15:197353:197455	2576775	0	True				
ANR	2578399	CallExpression	"errprintf ( udev -> memory , ""ESC/P2-Open: FMT_ESCP2Y cannot handle multiple X-Passes\\n"" )"		2576775	0					
ANR	2578400	Callee	errprintf		2576775	0					
ANR	2578401	Identifier	errprintf		2576775	0					
ANR	2578402	ArgumentList	udev -> memory		2576775	1					
ANR	2578403	Argument	udev -> memory		2576775	0					
ANR	2578404	PtrMemberAccess	udev -> memory		2576775	0					
ANR	2578405	Identifier	udev		2576775	0					
ANR	2578406	Identifier	memory		2576775	1					
ANR	2578407	Argument	"""ESC/P2-Open: FMT_ESCP2Y cannot handle multiple X-Passes\\n"""		2576775	1					
ANR	2578408	PrimaryExpression	"""ESC/P2-Open: FMT_ESCP2Y cannot handle multiple X-Passes\\n"""		2576775	0					
ANR	2578409	ExpressionStatement	error = - 1	5496:12:197476:197486	2576775	1	True				
ANR	2578410	AssignmentExpression	error = - 1		2576775	0		=			
ANR	2578411	Identifier	error		2576775	0					
ANR	2578412	UnaryOperationExpression	- 1		2576775	1					
ANR	2578413	UnaryOperator	-		2576775	0					
ANR	2578414	PrimaryExpression	1		2576775	1					
ANR	2578415	ElseStatement	else		2576775	0					
ANR	2578416	CompoundStatement		282:16:9877:9877	2576775	0					
ANR	2578417	ExpressionStatement	upd -> writer = upd_wrtescp2	5498:12:197518:197544	2576775	0	True				
ANR	2578418	AssignmentExpression	upd -> writer = upd_wrtescp2		2576775	0		=			
ANR	2578419	PtrMemberAccess	upd -> writer		2576775	0					
ANR	2578420	Identifier	upd		2576775	0					
ANR	2578421	Identifier	writer		2576775	1					
ANR	2578422	Identifier	upd_wrtescp2		2576775	1					
ANR	2578423	BreakStatement	break ;	5500:6:197563:197568	2576775	2	True				
ANR	2578424	Label	case FMT_ESCP2XY :	5501:6:197576:197592	2576775	3	True				
ANR	2578425	Identifier	FMT_ESCP2XY		2576775	0					
ANR	2578426	ExpressionStatement	upd -> writer = upd_wrtescp2x	5502:9:197603:197631	2576775	4	True				
ANR	2578427	AssignmentExpression	upd -> writer = upd_wrtescp2x		2576775	0		=			
ANR	2578428	PtrMemberAccess	upd -> writer		2576775	0					
ANR	2578429	Identifier	upd		2576775	0					
ANR	2578430	Identifier	writer		2576775	1					
ANR	2578431	Identifier	upd_wrtescp2x		2576775	1					
ANR	2578432	ExpressionStatement	upd -> nlimits = upd -> ints [ I_NXPASS ]	5503:9:197642:197676	2576775	5	True				
ANR	2578433	AssignmentExpression	upd -> nlimits = upd -> ints [ I_NXPASS ]		2576775	0		=			
ANR	2578434	PtrMemberAccess	upd -> nlimits		2576775	0					
ANR	2578435	Identifier	upd		2576775	0					
ANR	2578436	Identifier	nlimits		2576775	1					
ANR	2578437	ArrayIndexing	upd -> ints [ I_NXPASS ]		2576775	1					
ANR	2578438	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2578439	Identifier	upd		2576775	0					
ANR	2578440	Identifier	ints		2576775	1					
ANR	2578441	Identifier	I_NXPASS		2576775	1					
ANR	2578442	IfStatement	if ( 1 == upd -> ints [ I_NXPASS ] )		2576775	6					
ANR	2578443	Condition	1 == upd -> ints [ I_NXPASS ]	5505:15:197731:197754	2576775	0	True				
ANR	2578444	EqualityExpression	1 == upd -> ints [ I_NXPASS ]		2576775	0		==			
ANR	2578445	PrimaryExpression	1		2576775	0					
ANR	2578446	ArrayIndexing	upd -> ints [ I_NXPASS ]		2576775	1					
ANR	2578447	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2578448	Identifier	upd		2576775	0					
ANR	2578449	Identifier	ints		2576775	1					
ANR	2578450	Identifier	I_NXPASS		2576775	1					
ANR	2578451	ExpressionStatement	"errprintf ( udev -> memory , ""ESC/P2-Open: FMT_ESCP2XY should not be used with 1X-Pass\\n"" )"	5506:15:197772:197875	2576775	1	True				
ANR	2578452	CallExpression	"errprintf ( udev -> memory , ""ESC/P2-Open: FMT_ESCP2XY should not be used with 1X-Pass\\n"" )"		2576775	0					
ANR	2578453	Callee	errprintf		2576775	0					
ANR	2578454	Identifier	errprintf		2576775	0					
ANR	2578455	ArgumentList	udev -> memory		2576775	1					
ANR	2578456	Argument	udev -> memory		2576775	0					
ANR	2578457	PtrMemberAccess	udev -> memory		2576775	0					
ANR	2578458	Identifier	udev		2576775	0					
ANR	2578459	Identifier	memory		2576775	1					
ANR	2578460	Argument	"""ESC/P2-Open: FMT_ESCP2XY should not be used with 1X-Pass\\n"""		2576775	1					
ANR	2578461	PrimaryExpression	"""ESC/P2-Open: FMT_ESCP2XY should not be used with 1X-Pass\\n"""		2576775	0					
ANR	2578462	BreakStatement	break ;	5509:6:197890:197895	2576775	7	True				
ANR	2578463	Label	case FMT_ESCNMY :	5510:6:197903:197918	2576775	8	True				
ANR	2578464	Identifier	FMT_ESCNMY		2576775	0					
ANR	2578465	IfStatement	if ( 1 < upd -> ints [ I_NXPASS ] )		2576775	9					
ANR	2578466	Condition	1 < upd -> ints [ I_NXPASS ]	5511:12:197932:197954	2576775	0	True				
ANR	2578467	RelationalExpression	1 < upd -> ints [ I_NXPASS ]		2576775	0		<			
ANR	2578468	PrimaryExpression	1		2576775	0					
ANR	2578469	ArrayIndexing	upd -> ints [ I_NXPASS ]		2576775	1					
ANR	2578470	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2578471	Identifier	upd		2576775	0					
ANR	2578472	Identifier	ints		2576775	1					
ANR	2578473	Identifier	I_NXPASS		2576775	1					
ANR	2578474	CompoundStatement		296:37:10330:10330	2576775	1					
ANR	2578475	ExpressionStatement	"errprintf ( udev -> memory , ""ESC/P2-Open: FMT_ESCNMY cannot handle multiple X-Passes\\n"" )"	5513:15:198015:198117	2576775	0	True				
ANR	2578476	CallExpression	"errprintf ( udev -> memory , ""ESC/P2-Open: FMT_ESCNMY cannot handle multiple X-Passes\\n"" )"		2576775	0					
ANR	2578477	Callee	errprintf		2576775	0					
ANR	2578478	Identifier	errprintf		2576775	0					
ANR	2578479	ArgumentList	udev -> memory		2576775	1					
ANR	2578480	Argument	udev -> memory		2576775	0					
ANR	2578481	PtrMemberAccess	udev -> memory		2576775	0					
ANR	2578482	Identifier	udev		2576775	0					
ANR	2578483	Identifier	memory		2576775	1					
ANR	2578484	Argument	"""ESC/P2-Open: FMT_ESCNMY cannot handle multiple X-Passes\\n"""		2576775	1					
ANR	2578485	PrimaryExpression	"""ESC/P2-Open: FMT_ESCNMY cannot handle multiple X-Passes\\n"""		2576775	0					
ANR	2578486	ExpressionStatement	error = - 1	5516:12:198138:198148	2576775	1	True				
ANR	2578487	AssignmentExpression	error = - 1		2576775	0		=			
ANR	2578488	Identifier	error		2576775	0					
ANR	2578489	UnaryOperationExpression	- 1		2576775	1					
ANR	2578490	UnaryOperator	-		2576775	0					
ANR	2578491	PrimaryExpression	1		2576775	1					
ANR	2578492	ElseStatement	else		2576775	0					
ANR	2578493	CompoundStatement		302:16:10539:10539	2576775	0					
ANR	2578494	ExpressionStatement	upd -> writer = upd_wrtescnm	5518:12:198180:198206	2576775	0	True				
ANR	2578495	AssignmentExpression	upd -> writer = upd_wrtescnm		2576775	0		=			
ANR	2578496	PtrMemberAccess	upd -> writer		2576775	0					
ANR	2578497	Identifier	upd		2576775	0					
ANR	2578498	Identifier	writer		2576775	1					
ANR	2578499	Identifier	upd_wrtescnm		2576775	1					
ANR	2578500	BreakStatement	break ;	5520:6:198225:198230	2576775	10	True				
ANR	2578501	Label	default :	5521:6:198238:198245	2576775	11	True				
ANR	2578502	Identifier	default		2576775	0					
ANR	2578503	ExpressionStatement	"errprintf ( udev -> memory , ""ESC/P2-Open: %d is not a ESC/P2-Format\\n"" , upd -> choice [ C_FORMAT ] )"	5523:12:198297:198417	2576775	12	True				
ANR	2578504	CallExpression	"errprintf ( udev -> memory , ""ESC/P2-Open: %d is not a ESC/P2-Format\\n"" , upd -> choice [ C_FORMAT ] )"		2576775	0					
ANR	2578505	Callee	errprintf		2576775	0					
ANR	2578506	Identifier	errprintf		2576775	0					
ANR	2578507	ArgumentList	udev -> memory		2576775	1					
ANR	2578508	Argument	udev -> memory		2576775	0					
ANR	2578509	PtrMemberAccess	udev -> memory		2576775	0					
ANR	2578510	Identifier	udev		2576775	0					
ANR	2578511	Identifier	memory		2576775	1					
ANR	2578512	Argument	"""ESC/P2-Open: %d is not a ESC/P2-Format\\n"""		2576775	1					
ANR	2578513	PrimaryExpression	"""ESC/P2-Open: %d is not a ESC/P2-Format\\n"""		2576775	0					
ANR	2578514	Argument	upd -> choice [ C_FORMAT ]		2576775	2					
ANR	2578515	ArrayIndexing	upd -> choice [ C_FORMAT ]		2576775	0					
ANR	2578516	PtrMemberAccess	upd -> choice		2576775	0					
ANR	2578517	Identifier	upd		2576775	0					
ANR	2578518	Identifier	choice		2576775	1					
ANR	2578519	Identifier	C_FORMAT		2576775	1					
ANR	2578520	ExpressionStatement	error = - 1	5527:9:198435:198446	2576775	13	True				
ANR	2578521	AssignmentExpression	error = - 1		2576775	0		=			
ANR	2578522	Identifier	error		2576775	0					
ANR	2578523	UnaryOperationExpression	- 1		2576775	1					
ANR	2578524	UnaryOperator	-		2576775	0					
ANR	2578525	PrimaryExpression	1		2576775	1					
ANR	2578526	BreakStatement	break ;	5528:6:198454:198459	2576775	14	True				
ANR	2578527	IfStatement	if ( 0 <= error )		2576775	10					
ANR	2578528	Condition	0 <= error	5540:6:198671:198680	2576775	0	True				
ANR	2578529	RelationalExpression	0 <= error		2576775	0		<=			
ANR	2578530	PrimaryExpression	0		2576775	0					
ANR	2578531	Identifier	error		2576775	1					
ANR	2578532	CompoundStatement		326:6:11064:11086	2576775	1					
ANR	2578533	IdentifierDeclStatement	"int32_t i , noutbuf , need ;"	5541:6:198691:198713	2576775	0	True				
ANR	2578534	IdentifierDecl	i		2576775	0					
ANR	2578535	IdentifierDeclType	int32_t		2576775	0					
ANR	2578536	Identifier	i		2576775	1					
ANR	2578537	IdentifierDecl	noutbuf		2576775	1					
ANR	2578538	IdentifierDeclType	int32_t		2576775	0					
ANR	2578539	Identifier	noutbuf		2576775	1					
ANR	2578540	IdentifierDecl	need		2576775	2					
ANR	2578541	IdentifierDeclType	int32_t		2576775	0					
ANR	2578542	Identifier	need		2576775	1					
ANR	2578543	IfStatement	if ( 0 < upd -> strings [ S_YMOVE ] . size )		2576775	1					
ANR	2578544	Condition	0 < upd -> strings [ S_YMOVE ] . size	5543:9:198750:198779	2576775	0	True				
ANR	2578545	RelationalExpression	0 < upd -> strings [ S_YMOVE ] . size		2576775	0		<			
ANR	2578546	PrimaryExpression	0		2576775	0					
ANR	2578547	MemberAccess	upd -> strings [ S_YMOVE ] . size		2576775	1					
ANR	2578548	ArrayIndexing	upd -> strings [ S_YMOVE ]		2576775	0					
ANR	2578549	PtrMemberAccess	upd -> strings		2576775	0					
ANR	2578550	Identifier	upd		2576775	0					
ANR	2578551	Identifier	strings		2576775	1					
ANR	2578552	Identifier	S_YMOVE		2576775	1					
ANR	2578553	Identifier	size		2576775	1					
ANR	2578554	CompoundStatement		328:41:11155:11155	2576775	1					
ANR	2578555	ExpressionStatement	noutbuf = upd -> strings [ S_YMOVE ] . size + 2	5544:9:198793:198833	2576775	0	True				
ANR	2578556	AssignmentExpression	noutbuf = upd -> strings [ S_YMOVE ] . size + 2		2576775	0		=			
ANR	2578557	Identifier	noutbuf		2576775	0					
ANR	2578558	AdditiveExpression	upd -> strings [ S_YMOVE ] . size + 2		2576775	1		+			
ANR	2578559	MemberAccess	upd -> strings [ S_YMOVE ] . size		2576775	0					
ANR	2578560	ArrayIndexing	upd -> strings [ S_YMOVE ]		2576775	0					
ANR	2578561	PtrMemberAccess	upd -> strings		2576775	0					
ANR	2578562	Identifier	upd		2576775	0					
ANR	2578563	Identifier	strings		2576775	1					
ANR	2578564	Identifier	S_YMOVE		2576775	1					
ANR	2578565	Identifier	size		2576775	1					
ANR	2578566	PrimaryExpression	2		2576775	1					
ANR	2578567	ElseStatement	else		2576775	0					
ANR	2578568	CompoundStatement		331:9:11232:11255	2576775	0					
ANR	2578569	IdentifierDeclStatement	int nmax = upd -> pheight ;	5546:9:198859:198882	2576775	0	True				
ANR	2578570	IdentifierDecl	nmax = upd -> pheight		2576775	0					
ANR	2578571	IdentifierDeclType	int		2576775	0					
ANR	2578572	Identifier	nmax		2576775	1					
ANR	2578573	AssignmentExpression	nmax = upd -> pheight		2576775	2		=			
ANR	2578574	Identifier	nmax		2576775	0					
ANR	2578575	PtrMemberAccess	upd -> pheight		2576775	1					
ANR	2578576	Identifier	upd		2576775	0					
ANR	2578577	Identifier	pheight		2576775	1					
ANR	2578578	IfStatement	if ( 1 < upd -> ints [ I_YSTEP ] )		2576775	1					
ANR	2578579	Condition	1 < upd -> ints [ I_YSTEP ]	5547:18:198902:198923	2576775	0	True				
ANR	2578580	RelationalExpression	1 < upd -> ints [ I_YSTEP ]		2576775	0		<			
ANR	2578581	PrimaryExpression	1		2576775	0					
ANR	2578582	ArrayIndexing	upd -> ints [ I_YSTEP ]		2576775	1					
ANR	2578583	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2578584	Identifier	upd		2576775	0					
ANR	2578585	Identifier	ints		2576775	1					
ANR	2578586	Identifier	I_YSTEP		2576775	1					
ANR	2578587	ExpressionStatement	nmax /= upd -> ints [ I_YSTEP ]	5547:42:198926:198953	2576775	1	True				
ANR	2578588	AssignmentExpression	nmax /= upd -> ints [ I_YSTEP ]		2576775	0		/=			
ANR	2578589	Identifier	nmax		2576775	0					
ANR	2578590	ArrayIndexing	upd -> ints [ I_YSTEP ]		2576775	1					
ANR	2578591	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2578592	Identifier	upd		2576775	0					
ANR	2578593	Identifier	ints		2576775	1					
ANR	2578594	Identifier	I_YSTEP		2576775	1					
ANR	2578595	ElseStatement	else		2576775	0					
ANR	2578596	IfStatement	if ( - 1 > upd -> ints [ I_YSTEP ] )		2576775	0					
ANR	2578597	Condition	- 1 > upd -> ints [ I_YSTEP ]	5548:17:198972:198994	2576775	0	True				
ANR	2578598	RelationalExpression	- 1 > upd -> ints [ I_YSTEP ]		2576775	0		>			
ANR	2578599	UnaryOperationExpression	- 1		2576775	0					
ANR	2578600	UnaryOperator	-		2576775	0					
ANR	2578601	PrimaryExpression	1		2576775	1					
ANR	2578602	ArrayIndexing	upd -> ints [ I_YSTEP ]		2576775	1					
ANR	2578603	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2578604	Identifier	upd		2576775	0					
ANR	2578605	Identifier	ints		2576775	1					
ANR	2578606	Identifier	I_YSTEP		2576775	1					
ANR	2578607	ExpressionStatement	nmax *= - upd -> ints [ I_YSTEP ]	5548:42:198997:199024	2576775	1	True				
ANR	2578608	AssignmentExpression	nmax *= - upd -> ints [ I_YSTEP ]		2576775	0		*=			
ANR	2578609	Identifier	nmax		2576775	0					
ANR	2578610	UnaryOperationExpression	- upd -> ints [ I_YSTEP ]		2576775	1					
ANR	2578611	UnaryOperator	-		2576775	0					
ANR	2578612	ArrayIndexing	upd -> ints [ I_YSTEP ]		2576775	1					
ANR	2578613	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2578614	Identifier	upd		2576775	0					
ANR	2578615	Identifier	ints		2576775	1					
ANR	2578616	Identifier	I_YSTEP		2576775	1					
ANR	2578617	ExpressionStatement	noutbuf = 2 * upd -> strings [ S_SETLF ] . size + 2	5549:9:199035:199080	2576775	2	True				
ANR	2578618	AssignmentExpression	noutbuf = 2 * upd -> strings [ S_SETLF ] . size + 2		2576775	0		=			
ANR	2578619	Identifier	noutbuf		2576775	0					
ANR	2578620	AdditiveExpression	2 * upd -> strings [ S_SETLF ] . size + 2		2576775	1		+			
ANR	2578621	MultiplicativeExpression	2 * upd -> strings [ S_SETLF ] . size		2576775	0		*			
ANR	2578622	PrimaryExpression	2		2576775	0					
ANR	2578623	MemberAccess	upd -> strings [ S_SETLF ] . size		2576775	1					
ANR	2578624	ArrayIndexing	upd -> strings [ S_SETLF ]		2576775	0					
ANR	2578625	PtrMemberAccess	upd -> strings		2576775	0					
ANR	2578626	Identifier	upd		2576775	0					
ANR	2578627	Identifier	strings		2576775	1					
ANR	2578628	Identifier	S_SETLF		2576775	1					
ANR	2578629	Identifier	size		2576775	1					
ANR	2578630	PrimaryExpression	2		2576775	1					
ANR	2578631	ExpressionStatement	noutbuf += nmax / 255 + 1	5550:9:199091:199114	2576775	3	True				
ANR	2578632	AssignmentExpression	noutbuf += nmax / 255 + 1		2576775	0		+=			
ANR	2578633	Identifier	noutbuf		2576775	0					
ANR	2578634	AdditiveExpression	nmax / 255 + 1		2576775	1		+			
ANR	2578635	MultiplicativeExpression	nmax / 255		2576775	0		/			
ANR	2578636	Identifier	nmax		2576775	0					
ANR	2578637	PrimaryExpression	255		2576775	1					
ANR	2578638	PrimaryExpression	1		2576775	1					
ANR	2578639	IfStatement	if ( 1 < upd -> ints [ I_YSTEP ] )		2576775	2					
ANR	2578640	Condition	1 < upd -> ints [ I_YSTEP ]	5553:9:199134:199155	2576775	0	True				
ANR	2578641	RelationalExpression	1 < upd -> ints [ I_YSTEP ]		2576775	0		<			
ANR	2578642	PrimaryExpression	1		2576775	0					
ANR	2578643	ArrayIndexing	upd -> ints [ I_YSTEP ]		2576775	1					
ANR	2578644	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2578645	Identifier	upd		2576775	0					
ANR	2578646	Identifier	ints		2576775	1					
ANR	2578647	Identifier	I_YSTEP		2576775	1					
ANR	2578648	ExpressionStatement	noutbuf += ( upd -> ints [ I_YSTEP ] - 1 ) * upd -> strings [ S_YSTEP ] . size	5554:9:199167:199229	2576775	1	True				
ANR	2578649	AssignmentExpression	noutbuf += ( upd -> ints [ I_YSTEP ] - 1 ) * upd -> strings [ S_YSTEP ] . size		2576775	0		+=			
ANR	2578650	Identifier	noutbuf		2576775	0					
ANR	2578651	MultiplicativeExpression	( upd -> ints [ I_YSTEP ] - 1 ) * upd -> strings [ S_YSTEP ] . size		2576775	1		*			
ANR	2578652	AdditiveExpression	upd -> ints [ I_YSTEP ] - 1		2576775	0		-			
ANR	2578653	ArrayIndexing	upd -> ints [ I_YSTEP ]		2576775	0					
ANR	2578654	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2578655	Identifier	upd		2576775	0					
ANR	2578656	Identifier	ints		2576775	1					
ANR	2578657	Identifier	I_YSTEP		2576775	1					
ANR	2578658	PrimaryExpression	1		2576775	1					
ANR	2578659	MemberAccess	upd -> strings [ S_YSTEP ] . size		2576775	1					
ANR	2578660	ArrayIndexing	upd -> strings [ S_YSTEP ]		2576775	0					
ANR	2578661	PtrMemberAccess	upd -> strings		2576775	0					
ANR	2578662	Identifier	upd		2576775	0					
ANR	2578663	Identifier	strings		2576775	1					
ANR	2578664	Identifier	S_YSTEP		2576775	1					
ANR	2578665	Identifier	size		2576775	1					
ANR	2578666	IfStatement	if ( 0 == upd -> strings [ S_XMOVE ] . size )		2576775	3					
ANR	2578667	Condition	0 == upd -> strings [ S_XMOVE ] . size	5557:9:199267:199297	2576775	0	True				
ANR	2578668	EqualityExpression	0 == upd -> strings [ S_XMOVE ] . size		2576775	0		==			
ANR	2578669	PrimaryExpression	0		2576775	0					
ANR	2578670	MemberAccess	upd -> strings [ S_XMOVE ] . size		2576775	1					
ANR	2578671	ArrayIndexing	upd -> strings [ S_XMOVE ]		2576775	0					
ANR	2578672	PtrMemberAccess	upd -> strings		2576775	0					
ANR	2578673	Identifier	upd		2576775	0					
ANR	2578674	Identifier	strings		2576775	1					
ANR	2578675	Identifier	S_XMOVE		2576775	1					
ANR	2578676	Identifier	size		2576775	1					
ANR	2578677	CompoundStatement		342:42:11673:11673	2576775	1					
ANR	2578678	ExpressionStatement	noutbuf += 1	5558:9:199311:199323	2576775	0	True				
ANR	2578679	AssignmentExpression	noutbuf += 1		2576775	0		+=			
ANR	2578680	Identifier	noutbuf		2576775	0					
ANR	2578681	PrimaryExpression	1		2576775	1					
ANR	2578682	ExpressionStatement	noutbuf += ( upd -> ints [ I_NXPASS ] - 1 ) * upd -> strings [ S_XSTEP ] . size	5559:9:199347:199410	2576775	1	True				
ANR	2578683	AssignmentExpression	noutbuf += ( upd -> ints [ I_NXPASS ] - 1 ) * upd -> strings [ S_XSTEP ] . size		2576775	0		+=			
ANR	2578684	Identifier	noutbuf		2576775	0					
ANR	2578685	MultiplicativeExpression	( upd -> ints [ I_NXPASS ] - 1 ) * upd -> strings [ S_XSTEP ] . size		2576775	1		*			
ANR	2578686	AdditiveExpression	upd -> ints [ I_NXPASS ] - 1		2576775	0		-			
ANR	2578687	ArrayIndexing	upd -> ints [ I_NXPASS ]		2576775	0					
ANR	2578688	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2578689	Identifier	upd		2576775	0					
ANR	2578690	Identifier	ints		2576775	1					
ANR	2578691	Identifier	I_NXPASS		2576775	1					
ANR	2578692	PrimaryExpression	1		2576775	1					
ANR	2578693	MemberAccess	upd -> strings [ S_XSTEP ] . size		2576775	1					
ANR	2578694	ArrayIndexing	upd -> strings [ S_XSTEP ]		2576775	0					
ANR	2578695	PtrMemberAccess	upd -> strings		2576775	0					
ANR	2578696	Identifier	upd		2576775	0					
ANR	2578697	Identifier	strings		2576775	1					
ANR	2578698	Identifier	S_XSTEP		2576775	1					
ANR	2578699	Identifier	size		2576775	1					
ANR	2578700	ElseStatement	else		2576775	0					
ANR	2578701	CompoundStatement		345:13:11798:11798	2576775	0					
ANR	2578702	ExpressionStatement	noutbuf += upd -> strings [ S_XMOVE ] . size + 2	5561:9:199436:199478	2576775	0	True				
ANR	2578703	AssignmentExpression	noutbuf += upd -> strings [ S_XMOVE ] . size + 2		2576775	0		+=			
ANR	2578704	Identifier	noutbuf		2576775	0					
ANR	2578705	AdditiveExpression	upd -> strings [ S_XMOVE ] . size + 2		2576775	1		+			
ANR	2578706	MemberAccess	upd -> strings [ S_XMOVE ] . size		2576775	0					
ANR	2578707	ArrayIndexing	upd -> strings [ S_XMOVE ]		2576775	0					
ANR	2578708	PtrMemberAccess	upd -> strings		2576775	0					
ANR	2578709	Identifier	upd		2576775	0					
ANR	2578710	Identifier	strings		2576775	1					
ANR	2578711	Identifier	S_XMOVE		2576775	1					
ANR	2578712	Identifier	size		2576775	1					
ANR	2578713	PrimaryExpression	2		2576775	1					
ANR	2578714	IfStatement	if ( 1 < upd -> ints [ I_XSTEP ] )		2576775	1					
ANR	2578715	Condition	1 < upd -> ints [ I_XSTEP ]	5563:12:199493:199514	2576775	0	True				
ANR	2578716	RelationalExpression	1 < upd -> ints [ I_XSTEP ]		2576775	0		<			
ANR	2578717	PrimaryExpression	1		2576775	0					
ANR	2578718	ArrayIndexing	upd -> ints [ I_XSTEP ]		2576775	1					
ANR	2578719	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2578720	Identifier	upd		2576775	0					
ANR	2578721	Identifier	ints		2576775	1					
ANR	2578722	Identifier	I_XSTEP		2576775	1					
ANR	2578723	ExpressionStatement	noutbuf += ( upd -> ints [ I_XSTEP ] - 1 ) * upd -> strings [ S_XSTEP ] . size	5564:12:199529:199591	2576775	1	True				
ANR	2578724	AssignmentExpression	noutbuf += ( upd -> ints [ I_XSTEP ] - 1 ) * upd -> strings [ S_XSTEP ] . size		2576775	0		+=			
ANR	2578725	Identifier	noutbuf		2576775	0					
ANR	2578726	MultiplicativeExpression	( upd -> ints [ I_XSTEP ] - 1 ) * upd -> strings [ S_XSTEP ] . size		2576775	1		*			
ANR	2578727	AdditiveExpression	upd -> ints [ I_XSTEP ] - 1		2576775	0		-			
ANR	2578728	ArrayIndexing	upd -> ints [ I_XSTEP ]		2576775	0					
ANR	2578729	PtrMemberAccess	upd -> ints		2576775	0					
ANR	2578730	Identifier	upd		2576775	0					
ANR	2578731	Identifier	ints		2576775	1					
ANR	2578732	Identifier	I_XSTEP		2576775	1					
ANR	2578733	PrimaryExpression	1		2576775	1					
ANR	2578734	MemberAccess	upd -> strings [ S_XSTEP ] . size		2576775	1					
ANR	2578735	ArrayIndexing	upd -> strings [ S_XSTEP ]		2576775	0					
ANR	2578736	PtrMemberAccess	upd -> strings		2576775	0					
ANR	2578737	Identifier	upd		2576775	0					
ANR	2578738	Identifier	strings		2576775	1					
ANR	2578739	Identifier	S_XSTEP		2576775	1					
ANR	2578740	Identifier	size		2576775	1					
ANR	2578741	IfStatement	if ( 0 < upd -> string_a [ SA_SETCOMP ] . size )		2576775	4					
ANR	2578742	Condition	0 < upd -> string_a [ SA_SETCOMP ] . size	5568:9:199643:199676	2576775	0	True				
ANR	2578743	RelationalExpression	0 < upd -> string_a [ SA_SETCOMP ] . size		2576775	0		<			
ANR	2578744	PrimaryExpression	0		2576775	0					
ANR	2578745	MemberAccess	upd -> string_a [ SA_SETCOMP ] . size		2576775	1					
ANR	2578746	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2576775	0					
ANR	2578747	PtrMemberAccess	upd -> string_a		2576775	0					
ANR	2578748	Identifier	upd		2576775	0					
ANR	2578749	Identifier	string_a		2576775	1					
ANR	2578750	Identifier	SA_SETCOMP		2576775	1					
ANR	2578751	Identifier	size		2576775	1					
ANR	2578752	CompoundStatement		353:45:12052:12052	2576775	1					
ANR	2578753	ExpressionStatement	need = 0	5569:10:199691:199699	2576775	0	True				
ANR	2578754	AssignmentExpression	need = 0		2576775	0		=			
ANR	2578755	Identifier	need		2576775	0					
ANR	2578756	PrimaryExpression	0		2576775	1					
ANR	2578757	ForStatement	for ( i = 0 ; i < upd -> ocomp ; ++ i )		2576775	1					
ANR	2578758	ForInit	i = 0 ;	5570:14:199715:199720	2576775	0	True				
ANR	2578759	AssignmentExpression	i = 0		2576775	0		=			
ANR	2578760	Identifier	i		2576775	0					
ANR	2578761	PrimaryExpression	0		2576775	1					
ANR	2578762	Condition	i < upd -> ocomp	5570:21:199722:199735	2576775	1	True				
ANR	2578763	RelationalExpression	i < upd -> ocomp		2576775	0		<			
ANR	2578764	Identifier	i		2576775	0					
ANR	2578765	PtrMemberAccess	upd -> ocomp		2576775	1					
ANR	2578766	Identifier	upd		2576775	0					
ANR	2578767	Identifier	ocomp		2576775	1					
ANR	2578768	UnaryExpression	++ i	5570:37:199738:199740	2576775	2	True				
ANR	2578769	IncDec	++		2576775	0					
ANR	2578770	Identifier	i		2576775	1					
ANR	2578771	IfStatement	if ( need < upd -> string_a [ SA_SETCOMP ] . data [ i ] . size )		2576775	3					
ANR	2578772	Condition	need < upd -> string_a [ SA_SETCOMP ] . data [ i ] . size	5571:16:199759:199803	2576775	0	True				
ANR	2578773	RelationalExpression	need < upd -> string_a [ SA_SETCOMP ] . data [ i ] . size		2576775	0		<			
ANR	2578774	Identifier	need		2576775	0					
ANR	2578775	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ i ] . size		2576775	1					
ANR	2578776	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ i ]		2576775	0					
ANR	2578777	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		2576775	0					
ANR	2578778	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2576775	0					
ANR	2578779	PtrMemberAccess	upd -> string_a		2576775	0					
ANR	2578780	Identifier	upd		2576775	0					
ANR	2578781	Identifier	string_a		2576775	1					
ANR	2578782	Identifier	SA_SETCOMP		2576775	1					
ANR	2578783	Identifier	data		2576775	1					
ANR	2578784	Identifier	i		2576775	1					
ANR	2578785	Identifier	size		2576775	1					
ANR	2578786	ExpressionStatement	need = upd -> string_a [ SA_SETCOMP ] . data [ i ] . size	5572:16:199822:199867	2576775	1	True				
ANR	2578787	AssignmentExpression	need = upd -> string_a [ SA_SETCOMP ] . data [ i ] . size		2576775	0		=			
ANR	2578788	Identifier	need		2576775	0					
ANR	2578789	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ i ] . size		2576775	1					
ANR	2578790	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ i ]		2576775	0					
ANR	2578791	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		2576775	0					
ANR	2578792	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2576775	0					
ANR	2578793	PtrMemberAccess	upd -> string_a		2576775	0					
ANR	2578794	Identifier	upd		2576775	0					
ANR	2578795	Identifier	string_a		2576775	1					
ANR	2578796	Identifier	SA_SETCOMP		2576775	1					
ANR	2578797	Identifier	data		2576775	1					
ANR	2578798	Identifier	i		2576775	1					
ANR	2578799	Identifier	size		2576775	1					
ANR	2578800	ExpressionStatement	noutbuf += need	5573:10:199879:199894	2576775	2	True				
ANR	2578801	AssignmentExpression	noutbuf += need		2576775	0		+=			
ANR	2578802	Identifier	noutbuf		2576775	0					
ANR	2578803	Identifier	need		2576775	1					
ANR	2578804	ExpressionStatement	need = 0	5577:6:199942:199950	2576775	5	True				
ANR	2578805	AssignmentExpression	need = 0		2576775	0		=			
ANR	2578806	Identifier	need		2576775	0					
ANR	2578807	PrimaryExpression	0		2576775	1					
ANR	2578808	ForStatement	for ( i = 0 ; i < upd -> ocomp ; ++ i )		2576775	6					
ANR	2578809	ForInit	i = 0 ;	5578:10:199962:199967	2576775	0	True				
ANR	2578810	AssignmentExpression	i = 0		2576775	0		=			
ANR	2578811	Identifier	i		2576775	0					
ANR	2578812	PrimaryExpression	0		2576775	1					
ANR	2578813	Condition	i < upd -> ocomp	5578:17:199969:199982	2576775	1	True				
ANR	2578814	RelationalExpression	i < upd -> ocomp		2576775	0		<			
ANR	2578815	Identifier	i		2576775	0					
ANR	2578816	PtrMemberAccess	upd -> ocomp		2576775	1					
ANR	2578817	Identifier	upd		2576775	0					
ANR	2578818	Identifier	ocomp		2576775	1					
ANR	2578819	UnaryExpression	++ i	5578:33:199985:199987	2576775	2	True				
ANR	2578820	IncDec	++		2576775	0					
ANR	2578821	Identifier	i		2576775	1					
ANR	2578822	IfStatement	if ( need < upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size )		2576775	3					
ANR	2578823	Condition	need < upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size	5579:12:200002:200048	2576775	0	True				
ANR	2578824	RelationalExpression	need < upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size		2576775	0		<			
ANR	2578825	Identifier	need		2576775	0					
ANR	2578826	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size		2576775	1					
ANR	2578827	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ i ]		2576775	0					
ANR	2578828	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		2576775	0					
ANR	2578829	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2576775	0					
ANR	2578830	PtrMemberAccess	upd -> string_a		2576775	0					
ANR	2578831	Identifier	upd		2576775	0					
ANR	2578832	Identifier	string_a		2576775	1					
ANR	2578833	Identifier	SA_WRITECOMP		2576775	1					
ANR	2578834	Identifier	data		2576775	1					
ANR	2578835	Identifier	i		2576775	1					
ANR	2578836	Identifier	size		2576775	1					
ANR	2578837	ExpressionStatement	need = upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size	5580:12:200063:200110	2576775	1	True				
ANR	2578838	AssignmentExpression	need = upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size		2576775	0		=			
ANR	2578839	Identifier	need		2576775	0					
ANR	2578840	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size		2576775	1					
ANR	2578841	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ i ]		2576775	0					
ANR	2578842	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		2576775	0					
ANR	2578843	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2576775	0					
ANR	2578844	PtrMemberAccess	upd -> string_a		2576775	0					
ANR	2578845	Identifier	upd		2576775	0					
ANR	2578846	Identifier	string_a		2576775	1					
ANR	2578847	Identifier	SA_WRITECOMP		2576775	1					
ANR	2578848	Identifier	data		2576775	1					
ANR	2578849	Identifier	i		2576775	1					
ANR	2578850	Identifier	size		2576775	1					
ANR	2578851	ExpressionStatement	noutbuf += need + 2	5581:6:200118:200137	2576775	7	True				
ANR	2578852	AssignmentExpression	noutbuf += need + 2		2576775	0		+=			
ANR	2578853	Identifier	noutbuf		2576775	0					
ANR	2578854	AdditiveExpression	need + 2		2576775	1		+			
ANR	2578855	Identifier	need		2576775	0					
ANR	2578856	PrimaryExpression	2		2576775	1					
ANR	2578857	ExpressionStatement	noutbuf += 2 * upd -> nbytes + ( upd -> nbytes + 127 ) / 128	5584:6:200167:200219	2576775	8	True				
ANR	2578858	AssignmentExpression	noutbuf += 2 * upd -> nbytes + ( upd -> nbytes + 127 ) / 128		2576775	0		+=			
ANR	2578859	Identifier	noutbuf		2576775	0					
ANR	2578860	AdditiveExpression	2 * upd -> nbytes + ( upd -> nbytes + 127 ) / 128		2576775	1		+			
ANR	2578861	MultiplicativeExpression	2 * upd -> nbytes		2576775	0		*			
ANR	2578862	PrimaryExpression	2		2576775	0					
ANR	2578863	PtrMemberAccess	upd -> nbytes		2576775	1					
ANR	2578864	Identifier	upd		2576775	0					
ANR	2578865	Identifier	nbytes		2576775	1					
ANR	2578866	MultiplicativeExpression	( upd -> nbytes + 127 ) / 128		2576775	1		/			
ANR	2578867	AdditiveExpression	upd -> nbytes + 127		2576775	0		+			
ANR	2578868	PtrMemberAccess	upd -> nbytes		2576775	0					
ANR	2578869	Identifier	upd		2576775	0					
ANR	2578870	Identifier	nbytes		2576775	1					
ANR	2578871	PrimaryExpression	127		2576775	1					
ANR	2578872	PrimaryExpression	128		2576775	1					
ANR	2578873	ExpressionStatement	upd -> noutbuf = noutbuf	5586:6:200228:200255	2576775	9	True				
ANR	2578874	AssignmentExpression	upd -> noutbuf = noutbuf		2576775	0		=			
ANR	2578875	PtrMemberAccess	upd -> noutbuf		2576775	0					
ANR	2578876	Identifier	upd		2576775	0					
ANR	2578877	Identifier	noutbuf		2576775	1					
ANR	2578878	Identifier	noutbuf		2576775	1					
ANR	2578879	ExpressionStatement	error = 1	5587:6:200263:200284	2576775	10	True				
ANR	2578880	AssignmentExpression	error = 1		2576775	0		=			
ANR	2578881	Identifier	error		2576775	0					
ANR	2578882	PrimaryExpression	1		2576775	1					
ANR	2578883	ReturnStatement	return error ;	5590:3:200295:200307	2576775	11	True				
ANR	2578884	Identifier	error		2576775	0					
ANR	2578885	ReturnType	static int		2576775	1					
ANR	2578886	Identifier	upd_open_wrtescp2		2576775	2					
ANR	2578887	ParameterList	upd_device * udev		2576775	3					
ANR	2578888	Parameter	upd_device * udev	5215:18:187608:187623	2576775	0	True				
ANR	2578889	ParameterType	upd_device *		2576775	0					
ANR	2578890	Identifier	udev		2576775	1					
ANR	2578891	CFGEntryNode	ENTRY		2576775		True				
ANR	2578892	CFGExitNode	EXIT		2576775		True				
ANR	2578893	Symbol	I_PINS2WRITE		2576775						
ANR	2578894	Symbol	* upd -> int_a		2576775						
ANR	2578895	Symbol	* bp ++		2576775						
ANR	2578896	Symbol	nmax		2576775						
ANR	2578897	Symbol	upd -> int_a [ IA_ROWMASK ] . size		2576775						
ANR	2578898	Symbol	* I_YSTEP		2576775						
ANR	2578899	Symbol	* upd -> string_a [ SA_WRITECOMP ] . data		2576775						
ANR	2578900	Symbol	* udev		2576775						
ANR	2578901	Symbol	* bp		2576775						
ANR	2578902	Symbol	upd -> string_a [ SA_SETCOMP ] . data [ i ] . size		2576775						
ANR	2578903	Symbol	S_BEGIN		2576775						
ANR	2578904	Symbol	state		2576775						
ANR	2578905	Symbol	dev_b_margin		2576775						
ANR	2578906	Symbol	udev -> height		2576775						
ANR	2578907	Symbol	upd -> nbytes		2576775						
ANR	2578908	Symbol	upd -> valptr		2576775						
ANR	2578909	Symbol	upd -> int_a [ IA_SCNOFS ] . data		2576775						
ANR	2578910	Symbol	dev_t_margin		2576775						
ANR	2578911	Symbol	* I_PATRPT		2576775						
ANR	2578912	Symbol	C_FORMAT		2576775						
ANR	2578913	Symbol	IA_ROWMASK		2576775						
ANR	2578914	Symbol	S_SETLF		2576775						
ANR	2578915	Symbol	upd_cast		2576775						
ANR	2578916	Symbol	upd -> string_a [ SA_SETCOMP ] . data		2576775						
ANR	2578917	Symbol	upd		2576775						
ANR	2578918	Symbol	* SA_WRITECOMP		2576775						
ANR	2578919	Symbol	I_NXPASS		2576775						
ANR	2578920	Symbol	* IA_ROWMASK		2576775						
ANR	2578921	Symbol	* I_NYPASS		2576775						
ANR	2578922	Symbol	* * SA_SETCOMP		2576775						
ANR	2578923	Symbol	ap		2576775						
ANR	2578924	Symbol	B_YABS		2576775						
ANR	2578925	Symbol	IA_SCNOFS		2576775						
ANR	2578926	Symbol	upd -> strings [ S_SETLF ] . size		2576775						
ANR	2578927	Symbol	upd -> pheight		2576775						
ANR	2578928	Symbol	* S_BEGIN		2576775						
ANR	2578929	Symbol	* C_FORMAT		2576775						
ANR	2578930	Symbol	upd -> strings		2576775						
ANR	2578931	Symbol	bp		2576775						
ANR	2578932	Symbol	* upd -> choice		2576775						
ANR	2578933	Symbol	upd -> flags		2576775						
ANR	2578934	Symbol	* upd -> string_a [ SA_SETCOMP ] . data		2576775						
ANR	2578935	Symbol	* upd		2576775						
ANR	2578936	Symbol	* S_XMOVE		2576775						
ANR	2578937	Symbol	upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size		2576775						
ANR	2578938	Symbol	B_TOPMARGIN		2576775						
ANR	2578939	Symbol	upd -> ocomp		2576775						
ANR	2578940	Symbol	* upd -> strings		2576775						
ANR	2578941	Symbol	upd -> strings [ S_YMOVE ] . size		2576775						
ANR	2578942	Symbol	* S_XSTEP		2576775						
ANR	2578943	Symbol	* IA_SCNOFS		2576775						
ANR	2578944	Symbol	i		2576775						
ANR	2578945	Symbol	I_XSTEP		2576775						
ANR	2578946	Symbol	* I_ROWS		2576775						
ANR	2578947	Symbol	upd -> noutbuf		2576775						
ANR	2578948	Symbol	upd -> strings [ S_BEGIN ] . data		2576775						
ANR	2578949	Symbol	upd_wrtescp2x		2576775						
ANR	2578950	Symbol	B_PAGELENGTH		2576775						
ANR	2578951	Symbol	S_YMOVE		2576775						
ANR	2578952	Symbol	upd -> string_a [ SA_WRITECOMP ] . data		2576775						
ANR	2578953	Symbol	upd -> writer		2576775						
ANR	2578954	Symbol	ap [ i ] . data		2576775						
ANR	2578955	Symbol	S_YSTEP		2576775						
ANR	2578956	Symbol	* * upd		2576775						
ANR	2578957	Symbol	ratio		2576775						
ANR	2578958	Symbol	S_XMOVE		2576775						
ANR	2578959	Symbol	* upd -> string_a		2576775						
ANR	2578960	Symbol	SA_SETCOMP		2576775						
ANR	2578961	Symbol	* S_SETLF		2576775						
ANR	2578962	Symbol	* SA_SETCOMP		2576775						
ANR	2578963	Symbol	upd -> strings [ S_YSTEP ] . size		2576775						
ANR	2578964	Symbol	upd -> strings [ S_XSTEP ] . data		2576775						
ANR	2578965	Symbol	* I_NXPASS		2576775						
ANR	2578966	Symbol	upd -> strings [ S_XMOVE ] . data		2576775						
ANR	2578967	Symbol	upd -> nlimits		2576775						
ANR	2578968	Symbol	upd -> int_a		2576775						
ANR	2578969	Symbol	* I_XSTEP		2576775						
ANR	2578970	Symbol	* * i		2576775						
ANR	2578971	Symbol	need		2576775						
ANR	2578972	Symbol	SA_WRITECOMP		2576775						
ANR	2578973	Symbol	udev -> y_pixels_per_inch		2576775						
ANR	2578974	Symbol	noutbuf		2576775						
ANR	2578975	Symbol	udev		2576775						
ANR	2578976	Symbol	( ( updcomp_p ) upd -> valptr [ i ] ) -> cmap		2576775						
ANR	2578977	Symbol	upd -> ints		2576775						
ANR	2578978	Symbol	upd -> strings [ S_BEGIN ] . size		2576775						
ANR	2578979	Symbol	upd_wrtescp2		2576775						
ANR	2578980	Symbol	error		2576775						
ANR	2578981	Symbol	upd -> strings [ S_XSTEP ] . size		2576775						
ANR	2578982	Symbol	upd_wrtescnm		2576775						
ANR	2578983	Symbol	I_PATRPT		2576775						
ANR	2578984	Symbol	upd -> ncomp		2576775						
ANR	2578985	Symbol	upd -> int_a [ IA_ROWMASK ] . data		2576775						
ANR	2578986	Symbol	udev -> upd		2576775						
ANR	2578987	Symbol	B_XABS		2576775						
ANR	2578988	Symbol	upd -> strings [ S_YMOVE ] . data		2576775						
ANR	2578989	Symbol	I_NYPASS		2576775						
ANR	2578990	Symbol	* * upd -> string_a		2576775						
ANR	2578991	Symbol	* upd -> valptr		2576775						
ANR	2578992	Symbol	upd -> string_a [ SA_WRITECOMP ] . size		2576775						
ANR	2578993	Symbol	pixels_per_inch		2576775						
ANR	2578994	Symbol	value		2576775						
ANR	2578995	Symbol	* * SA_WRITECOMP		2576775						
ANR	2578996	Symbol	B_BOTTOMMARGIN		2576775						
ANR	2578997	Symbol	ap [ i ] . size		2576775						
ANR	2578998	Symbol	* S_YMOVE		2576775						
ANR	2578999	Symbol	udev -> memory		2576775						
ANR	2579000	Symbol	upd -> strings [ S_XMOVE ] . size		2576775						
ANR	2579001	Symbol	* * * upd		2576775						
ANR	2579002	Symbol	upd -> choice		2576775						
ANR	2579003	Symbol	* S_YSTEP		2576775						
ANR	2579004	Symbol	upd -> string_a		2576775						
ANR	2579005	Symbol	udev -> x_pixels_per_inch		2576775						
ANR	2579006	Symbol	* i		2576775						
ANR	2579007	Symbol	* upd -> ints		2576775						
ANR	2579008	Symbol	* I_PINS2WRITE		2576775						
ANR	2579009	Symbol	upd -> string_a [ SA_SETCOMP ] . size		2576775						
ANR	2579010	Symbol	* ap		2576775						
ANR	2579011	Symbol	* * upd -> valptr		2576775						
ANR	2579012	Symbol	S_XSTEP		2576775						
ANR	2579013	Symbol	I_ROWS		2576775						
ANR	2579014	Symbol	upd -> int_a [ IA_SCNOFS ] . size		2576775						
ANR	2579015	Symbol	I_YSTEP		2576775						
ANR	2579016	Function	upd_wrtescp2	5597:0:200535:208726							
ANR	2579017	FunctionDef	"upd_wrtescp2 (upd_p upd , FILE * out)"		2579016	0					
ANR	2579018	CompoundStatement		5599:0:200581:208726	2579016	0					
ANR	2579019	IdentifierDeclStatement	"int pinbot , pin , pintop , xbegin , x , xend , icomp , ybegin , yend , y , ioutbuf , n ;"	5600:3:200586:200652	2579016	0	True				
ANR	2579020	IdentifierDecl	pinbot		2579016	0					
ANR	2579021	IdentifierDeclType	int		2579016	0					
ANR	2579022	Identifier	pinbot		2579016	1					
ANR	2579023	IdentifierDecl	pin		2579016	1					
ANR	2579024	IdentifierDeclType	int		2579016	0					
ANR	2579025	Identifier	pin		2579016	1					
ANR	2579026	IdentifierDecl	pintop		2579016	2					
ANR	2579027	IdentifierDeclType	int		2579016	0					
ANR	2579028	Identifier	pintop		2579016	1					
ANR	2579029	IdentifierDecl	xbegin		2579016	3					
ANR	2579030	IdentifierDeclType	int		2579016	0					
ANR	2579031	Identifier	xbegin		2579016	1					
ANR	2579032	IdentifierDecl	x		2579016	4					
ANR	2579033	IdentifierDeclType	int		2579016	0					
ANR	2579034	Identifier	x		2579016	1					
ANR	2579035	IdentifierDecl	xend		2579016	5					
ANR	2579036	IdentifierDeclType	int		2579016	0					
ANR	2579037	Identifier	xend		2579016	1					
ANR	2579038	IdentifierDecl	icomp		2579016	6					
ANR	2579039	IdentifierDeclType	int		2579016	0					
ANR	2579040	Identifier	icomp		2579016	1					
ANR	2579041	IdentifierDecl	ybegin		2579016	7					
ANR	2579042	IdentifierDeclType	int		2579016	0					
ANR	2579043	Identifier	ybegin		2579016	1					
ANR	2579044	IdentifierDecl	yend		2579016	8					
ANR	2579045	IdentifierDeclType	int		2579016	0					
ANR	2579046	Identifier	yend		2579016	1					
ANR	2579047	IdentifierDecl	y		2579016	9					
ANR	2579048	IdentifierDeclType	int		2579016	0					
ANR	2579049	Identifier	y		2579016	1					
ANR	2579050	IdentifierDecl	ioutbuf		2579016	10					
ANR	2579051	IdentifierDeclType	int		2579016	0					
ANR	2579052	Identifier	ioutbuf		2579016	1					
ANR	2579053	IdentifierDecl	n		2579016	11					
ANR	2579054	IdentifierDeclType	int		2579016	0					
ANR	2579055	Identifier	n		2579016	1					
ANR	2579056	IdentifierDeclStatement	byte * obytes ;	5601:3:200657:200669	2579016	1	True				
ANR	2579057	IdentifierDecl	* obytes		2579016	0					
ANR	2579058	IdentifierDeclType	byte *		2579016	0					
ANR	2579059	Identifier	obytes		2579016	1					
ANR	2579060	IdentifierDeclStatement	updscan_p scan ;	5602:3:200674:200688	2579016	2	True				
ANR	2579061	IdentifierDecl	scan		2579016	0					
ANR	2579062	IdentifierDeclType	updscan_p		2579016	0					
ANR	2579063	Identifier	scan		2579016	1					
ANR	2579064	IfStatement	if ( upd -> yscan < upd -> ints [ I_BEG_Y ] )		2579016	3					
ANR	2579065	Condition	upd -> yscan < upd -> ints [ I_BEG_Y ]	5606:6:200743:200773	2579016	0	True				
ANR	2579066	RelationalExpression	upd -> yscan < upd -> ints [ I_BEG_Y ]		2579016	0		<			
ANR	2579067	PtrMemberAccess	upd -> yscan		2579016	0					
ANR	2579068	Identifier	upd		2579016	0					
ANR	2579069	Identifier	yscan		2579016	1					
ANR	2579070	ArrayIndexing	upd -> ints [ I_BEG_Y ]		2579016	1					
ANR	2579071	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2579072	Identifier	upd		2579016	0					
ANR	2579073	Identifier	ints		2579016	1					
ANR	2579074	Identifier	I_BEG_Y		2579016	1					
ANR	2579075	CompoundStatement		8:39:194:194	2579016	1					
ANR	2579076	ExpressionStatement	pintop = 0	5607:6:200784:200794	2579016	0	True				
ANR	2579077	AssignmentExpression	pintop = 0		2579016	0		=			
ANR	2579078	Identifier	pintop		2579016	0					
ANR	2579079	PrimaryExpression	0		2579016	1					
ANR	2579080	ExpressionStatement	pinbot = upd -> int_a [ IA_BEGBOT ] . data [ upd -> ipass ]	5608:6:200802:200849	2579016	1	True				
ANR	2579081	AssignmentExpression	pinbot = upd -> int_a [ IA_BEGBOT ] . data [ upd -> ipass ]		2579016	0		=			
ANR	2579082	Identifier	pinbot		2579016	0					
ANR	2579083	ArrayIndexing	upd -> int_a [ IA_BEGBOT ] . data [ upd -> ipass ]		2579016	1					
ANR	2579084	MemberAccess	upd -> int_a [ IA_BEGBOT ] . data		2579016	0					
ANR	2579085	ArrayIndexing	upd -> int_a [ IA_BEGBOT ]		2579016	0					
ANR	2579086	PtrMemberAccess	upd -> int_a		2579016	0					
ANR	2579087	Identifier	upd		2579016	0					
ANR	2579088	Identifier	int_a		2579016	1					
ANR	2579089	Identifier	IA_BEGBOT		2579016	1					
ANR	2579090	Identifier	data		2579016	1					
ANR	2579091	PtrMemberAccess	upd -> ipass		2579016	1					
ANR	2579092	Identifier	upd		2579016	0					
ANR	2579093	Identifier	ipass		2579016	1					
ANR	2579094	ElseStatement	else		2579016	0					
ANR	2579095	IfStatement	if ( upd -> yscan >= upd -> ints [ I_END_Y ] )		2579016	0					
ANR	2579096	Condition	upd -> yscan >= upd -> ints [ I_END_Y ]	5609:13:200864:200895	2579016	0	True				
ANR	2579097	RelationalExpression	upd -> yscan >= upd -> ints [ I_END_Y ]		2579016	0		>=			
ANR	2579098	PtrMemberAccess	upd -> yscan		2579016	0					
ANR	2579099	Identifier	upd		2579016	0					
ANR	2579100	Identifier	yscan		2579016	1					
ANR	2579101	ArrayIndexing	upd -> ints [ I_END_Y ]		2579016	1					
ANR	2579102	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2579103	Identifier	upd		2579016	0					
ANR	2579104	Identifier	ints		2579016	1					
ANR	2579105	Identifier	I_END_Y		2579016	1					
ANR	2579106	CompoundStatement		11:47:316:316	2579016	1					
ANR	2579107	ExpressionStatement	pinbot = upd -> ints [ I_PINS2WRITE ]	5610:6:200906:200938	2579016	0	True				
ANR	2579108	AssignmentExpression	pinbot = upd -> ints [ I_PINS2WRITE ]		2579016	0		=			
ANR	2579109	Identifier	pinbot		2579016	0					
ANR	2579110	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		2579016	1					
ANR	2579111	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2579112	Identifier	upd		2579016	0					
ANR	2579113	Identifier	ints		2579016	1					
ANR	2579114	Identifier	I_PINS2WRITE		2579016	1					
ANR	2579115	ExpressionStatement	pintop = pinbot - upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]	5611:6:200946:201002	2579016	1	True				
ANR	2579116	AssignmentExpression	pintop = pinbot - upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]		2579016	0		=			
ANR	2579117	Identifier	pintop		2579016	0					
ANR	2579118	AdditiveExpression	pinbot - upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]		2579016	1		-			
ANR	2579119	Identifier	pinbot		2579016	0					
ANR	2579120	ArrayIndexing	upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]		2579016	1					
ANR	2579121	MemberAccess	upd -> int_a [ IA_ENDTOP ] . data		2579016	0					
ANR	2579122	ArrayIndexing	upd -> int_a [ IA_ENDTOP ]		2579016	0					
ANR	2579123	PtrMemberAccess	upd -> int_a		2579016	0					
ANR	2579124	Identifier	upd		2579016	0					
ANR	2579125	Identifier	int_a		2579016	1					
ANR	2579126	Identifier	IA_ENDTOP		2579016	1					
ANR	2579127	Identifier	data		2579016	1					
ANR	2579128	PtrMemberAccess	upd -> ipass		2579016	1					
ANR	2579129	Identifier	upd		2579016	0					
ANR	2579130	Identifier	ipass		2579016	1					
ANR	2579131	ElseStatement	else		2579016	0					
ANR	2579132	CompoundStatement		14:10:432:432	2579016	0					
ANR	2579133	ExpressionStatement	pintop = 0	5613:6:201022:201032	2579016	0	True				
ANR	2579134	AssignmentExpression	pintop = 0		2579016	0		=			
ANR	2579135	Identifier	pintop		2579016	0					
ANR	2579136	PrimaryExpression	0		2579016	1					
ANR	2579137	ExpressionStatement	pinbot = upd -> ints [ I_PINS2WRITE ]	5614:6:201040:201072	2579016	1	True				
ANR	2579138	AssignmentExpression	pinbot = upd -> ints [ I_PINS2WRITE ]		2579016	0		=			
ANR	2579139	Identifier	pinbot		2579016	0					
ANR	2579140	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		2579016	1					
ANR	2579141	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2579142	Identifier	upd		2579016	0					
ANR	2579143	Identifier	ints		2579016	1					
ANR	2579144	Identifier	I_PINS2WRITE		2579016	1					
ANR	2579145	ExpressionStatement	ybegin = pintop * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]	5617:3:201083:201157	2579016	4	True				
ANR	2579146	AssignmentExpression	ybegin = pintop * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		2579016	0		=			
ANR	2579147	Identifier	ybegin		2579016	0					
ANR	2579148	AdditiveExpression	pintop * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		2579016	1		+			
ANR	2579149	MultiplicativeExpression	pintop * upd -> ints [ I_NYPASS ]		2579016	0		*			
ANR	2579150	Identifier	pintop		2579016	0					
ANR	2579151	ArrayIndexing	upd -> ints [ I_NYPASS ]		2579016	1					
ANR	2579152	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2579153	Identifier	upd		2579016	0					
ANR	2579154	Identifier	ints		2579016	1					
ANR	2579155	Identifier	I_NYPASS		2579016	1					
ANR	2579156	AdditiveExpression	upd -> yscan - upd -> ints [ I_BEGSKIP ]		2579016	1		-			
ANR	2579157	PtrMemberAccess	upd -> yscan		2579016	0					
ANR	2579158	Identifier	upd		2579016	0					
ANR	2579159	Identifier	yscan		2579016	1					
ANR	2579160	ArrayIndexing	upd -> ints [ I_BEGSKIP ]		2579016	1					
ANR	2579161	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2579162	Identifier	upd		2579016	0					
ANR	2579163	Identifier	ints		2579016	1					
ANR	2579164	Identifier	I_BEGSKIP		2579016	1					
ANR	2579165	ExpressionStatement	yend = pinbot * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]	5618:3:201162:201236	2579016	5	True				
ANR	2579166	AssignmentExpression	yend = pinbot * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		2579016	0		=			
ANR	2579167	Identifier	yend		2579016	0					
ANR	2579168	AdditiveExpression	pinbot * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		2579016	1		+			
ANR	2579169	MultiplicativeExpression	pinbot * upd -> ints [ I_NYPASS ]		2579016	0		*			
ANR	2579170	Identifier	pinbot		2579016	0					
ANR	2579171	ArrayIndexing	upd -> ints [ I_NYPASS ]		2579016	1					
ANR	2579172	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2579173	Identifier	upd		2579016	0					
ANR	2579174	Identifier	ints		2579016	1					
ANR	2579175	Identifier	I_NYPASS		2579016	1					
ANR	2579176	AdditiveExpression	upd -> yscan - upd -> ints [ I_BEGSKIP ]		2579016	1		-			
ANR	2579177	PtrMemberAccess	upd -> yscan		2579016	0					
ANR	2579178	Identifier	upd		2579016	0					
ANR	2579179	Identifier	yscan		2579016	1					
ANR	2579180	ArrayIndexing	upd -> ints [ I_BEGSKIP ]		2579016	1					
ANR	2579181	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2579182	Identifier	upd		2579016	0					
ANR	2579183	Identifier	ints		2579016	1					
ANR	2579184	Identifier	I_BEGSKIP		2579016	1					
ANR	2579185	ExpressionStatement	xbegin = upd -> nbytes	5622:3:201279:201299	2579016	6	True				
ANR	2579186	AssignmentExpression	xbegin = upd -> nbytes		2579016	0		=			
ANR	2579187	Identifier	xbegin		2579016	0					
ANR	2579188	PtrMemberAccess	upd -> nbytes		2579016	1					
ANR	2579189	Identifier	upd		2579016	0					
ANR	2579190	Identifier	nbytes		2579016	1					
ANR	2579191	ExpressionStatement	xend = - 1	5623:3:201304:201315	2579016	7	True				
ANR	2579192	AssignmentExpression	xend = - 1		2579016	0		=			
ANR	2579193	Identifier	xend		2579016	0					
ANR	2579194	UnaryOperationExpression	- 1		2579016	1					
ANR	2579195	UnaryOperator	-		2579016	0					
ANR	2579196	PrimaryExpression	1		2579016	1					
ANR	2579197	ForStatement	for ( y = ybegin ; y < yend ; y += upd -> ints [ I_NYPASS ] )		2579016	8					
ANR	2579198	ForInit	y = ybegin ;	5625:7:201325:201335	2579016	0	True				
ANR	2579199	AssignmentExpression	y = ybegin		2579016	0		=			
ANR	2579200	Identifier	y		2579016	0					
ANR	2579201	Identifier	ybegin		2579016	1					
ANR	2579202	Condition	y < yend	5625:19:201337:201344	2579016	1	True				
ANR	2579203	RelationalExpression	y < yend		2579016	0		<			
ANR	2579204	Identifier	y		2579016	0					
ANR	2579205	Identifier	yend		2579016	1					
ANR	2579206	AssignmentExpression	y += upd -> ints [ I_NYPASS ]	5625:29:201347:201370	2579016	2	True	+=			
ANR	2579207	Identifier	y		2579016	0					
ANR	2579208	ArrayIndexing	upd -> ints [ I_NYPASS ]		2579016	1					
ANR	2579209	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2579210	Identifier	upd		2579016	0					
ANR	2579211	Identifier	ints		2579016	1					
ANR	2579212	Identifier	I_NYPASS		2579016	1					
ANR	2579213	CompoundStatement		27:55:791:791	2579016	3					
ANR	2579214	IfStatement	if ( 0 > y )		2579016	0					
ANR	2579215	Condition	0 > y	5627:9:201404:201408	2579016	0	True				
ANR	2579216	RelationalExpression	0 > y		2579016	0		>			
ANR	2579217	PrimaryExpression	0		2579016	0					
ANR	2579218	Identifier	y		2579016	1					
ANR	2579219	ContinueStatement	continue ;	5627:16:201411:201419	2579016	1	True				
ANR	2579220	ExpressionStatement	scan = upd -> scnbuf [ y & upd -> scnmsk ]	5629:6:201453:201488	2579016	1	True				
ANR	2579221	AssignmentExpression	scan = upd -> scnbuf [ y & upd -> scnmsk ]		2579016	0		=			
ANR	2579222	Identifier	scan		2579016	0					
ANR	2579223	ArrayIndexing	upd -> scnbuf [ y & upd -> scnmsk ]		2579016	1					
ANR	2579224	PtrMemberAccess	upd -> scnbuf		2579016	0					
ANR	2579225	Identifier	upd		2579016	0					
ANR	2579226	Identifier	scnbuf		2579016	1					
ANR	2579227	BitAndExpression	y & upd -> scnmsk		2579016	1		&			
ANR	2579228	Identifier	y		2579016	0					
ANR	2579229	PtrMemberAccess	upd -> scnmsk		2579016	1					
ANR	2579230	Identifier	upd		2579016	0					
ANR	2579231	Identifier	scnmsk		2579016	1					
ANR	2579232	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		2579016	2					
ANR	2579233	ForInit	icomp = 0 ;	5631:10:201501:201510	2579016	0	True				
ANR	2579234	AssignmentExpression	icomp = 0		2579016	0		=			
ANR	2579235	Identifier	icomp		2579016	0					
ANR	2579236	PrimaryExpression	0		2579016	1					
ANR	2579237	Condition	icomp < upd -> ocomp	5631:21:201512:201529	2579016	1	True				
ANR	2579238	RelationalExpression	icomp < upd -> ocomp		2579016	0		<			
ANR	2579239	Identifier	icomp		2579016	0					
ANR	2579240	PtrMemberAccess	upd -> ocomp		2579016	1					
ANR	2579241	Identifier	upd		2579016	0					
ANR	2579242	Identifier	ocomp		2579016	1					
ANR	2579243	UnaryExpression	++ icomp	5631:41:201532:201538	2579016	2	True				
ANR	2579244	IncDec	++		2579016	0					
ANR	2579245	Identifier	icomp		2579016	1					
ANR	2579246	CompoundStatement		33:50:959:959	2579016	3					
ANR	2579247	ExpressionStatement	obytes = scan [ icomp ] . bytes	5632:9:201572:201598	2579016	0	True				
ANR	2579248	AssignmentExpression	obytes = scan [ icomp ] . bytes		2579016	0		=			
ANR	2579249	Identifier	obytes		2579016	0					
ANR	2579250	MemberAccess	scan [ icomp ] . bytes		2579016	1					
ANR	2579251	ArrayIndexing	scan [ icomp ]		2579016	0					
ANR	2579252	Identifier	scan		2579016	0					
ANR	2579253	Identifier	icomp		2579016	1					
ANR	2579254	Identifier	bytes		2579016	1					
ANR	2579255	ForStatement	for ( x = 0 ; x < xbegin && ! obytes [ x ] ; x ++ )		2579016	1					
ANR	2579256	ForInit	x = 0 ;	5634:13:201614:201619	2579016	0	True				
ANR	2579257	AssignmentExpression	x = 0		2579016	0		=			
ANR	2579258	Identifier	x		2579016	0					
ANR	2579259	PrimaryExpression	0		2579016	1					
ANR	2579260	Condition	x < xbegin && ! obytes [ x ]	5634:20:201621:201644	2579016	1	True				
ANR	2579261	AndExpression	x < xbegin && ! obytes [ x ]		2579016	0		&&			
ANR	2579262	RelationalExpression	x < xbegin		2579016	0		<			
ANR	2579263	Identifier	x		2579016	0					
ANR	2579264	Identifier	xbegin		2579016	1					
ANR	2579265	UnaryOperationExpression	! obytes [ x ]		2579016	1					
ANR	2579266	UnaryOperator	!		2579016	0					
ANR	2579267	ArrayIndexing	obytes [ x ]		2579016	1					
ANR	2579268	Identifier	obytes		2579016	0					
ANR	2579269	Identifier	x		2579016	1					
ANR	2579270	PostIncDecOperationExpression	x ++	5634:46:201647:201649	2579016	2	True				
ANR	2579271	Identifier	x		2579016	0					
ANR	2579272	IncDec	++		2579016	1					
ANR	2579273	ExpressionStatement		5634:50:201651:201651	2579016	3	True				
ANR	2579274	IfStatement	if ( x < xbegin )		2579016	2					
ANR	2579275	Condition	x < xbegin	5635:12:201665:201674	2579016	0	True				
ANR	2579276	RelationalExpression	x < xbegin		2579016	0		<			
ANR	2579277	Identifier	x		2579016	0					
ANR	2579278	Identifier	xbegin		2579016	1					
ANR	2579279	ExpressionStatement	xbegin = x	5635:24:201677:201687	2579016	1	True				
ANR	2579280	AssignmentExpression	xbegin = x		2579016	0		=			
ANR	2579281	Identifier	xbegin		2579016	0					
ANR	2579282	Identifier	x		2579016	1					
ANR	2579283	IfStatement	if ( x < upd -> nbytes )		2579016	3					
ANR	2579284	Condition	x < upd -> nbytes	5637:12:201702:201716	2579016	0	True				
ANR	2579285	RelationalExpression	x < upd -> nbytes		2579016	0		<			
ANR	2579286	Identifier	x		2579016	0					
ANR	2579287	PtrMemberAccess	upd -> nbytes		2579016	1					
ANR	2579288	Identifier	upd		2579016	0					
ANR	2579289	Identifier	nbytes		2579016	1					
ANR	2579290	CompoundStatement		39:29:1137:1137	2579016	1					
ANR	2579291	ForStatement	for ( x = upd -> nbytes - 1 ; x > xend && ! obytes [ x ] ; x -- )		2579016	0					
ANR	2579292	ForInit	x = upd -> nbytes - 1 ;	5638:16:201737:201754	2579016	0	True				
ANR	2579293	AssignmentExpression	x = upd -> nbytes - 1		2579016	0		=			
ANR	2579294	Identifier	x		2579016	0					
ANR	2579295	AdditiveExpression	upd -> nbytes - 1		2579016	1		-			
ANR	2579296	PtrMemberAccess	upd -> nbytes		2579016	0					
ANR	2579297	Identifier	upd		2579016	0					
ANR	2579298	Identifier	nbytes		2579016	1					
ANR	2579299	PrimaryExpression	1		2579016	1					
ANR	2579300	Condition	x > xend && ! obytes [ x ]	5638:35:201756:201777	2579016	1	True				
ANR	2579301	AndExpression	x > xend && ! obytes [ x ]		2579016	0		&&			
ANR	2579302	RelationalExpression	x > xend		2579016	0		>			
ANR	2579303	Identifier	x		2579016	0					
ANR	2579304	Identifier	xend		2579016	1					
ANR	2579305	UnaryOperationExpression	! obytes [ x ]		2579016	1					
ANR	2579306	UnaryOperator	!		2579016	0					
ANR	2579307	ArrayIndexing	obytes [ x ]		2579016	1					
ANR	2579308	Identifier	obytes		2579016	0					
ANR	2579309	Identifier	x		2579016	1					
ANR	2579310	PostIncDecOperationExpression	x --	5638:59:201780:201782	2579016	2	True				
ANR	2579311	Identifier	x		2579016	0					
ANR	2579312	IncDec	--		2579016	1					
ANR	2579313	ExpressionStatement		5638:63:201784:201784	2579016	3	True				
ANR	2579314	IfStatement	if ( x > xend )		2579016	1					
ANR	2579315	Condition	x > xend	5639:15:201801:201808	2579016	0	True				
ANR	2579316	RelationalExpression	x > xend		2579016	0		>			
ANR	2579317	Identifier	x		2579016	0					
ANR	2579318	Identifier	xend		2579016	1					
ANR	2579319	ExpressionStatement	xend = x	5639:25:201811:201819	2579016	1	True				
ANR	2579320	AssignmentExpression	xend = x		2579016	0		=			
ANR	2579321	Identifier	xend		2579016	0					
ANR	2579322	Identifier	x		2579016	1					
ANR	2579323	IfStatement	if ( xbegin <= xend )		2579016	9					
ANR	2579324	Condition	xbegin <= xend	5645:6:201988:202001	2579016	0	True				
ANR	2579325	RelationalExpression	xbegin <= xend		2579016	0		<=			
ANR	2579326	Identifier	xbegin		2579016	0					
ANR	2579327	Identifier	xend		2579016	1					
ANR	2579328	CompoundStatement		47:22:1422:1422	2579016	1					
ANR	2579329	ExpressionStatement	ioutbuf = 0	5647:6:202038:202049	2579016	0	True				
ANR	2579330	AssignmentExpression	ioutbuf = 0		2579016	0		=			
ANR	2579331	Identifier	ioutbuf		2579016	0					
ANR	2579332	PrimaryExpression	0		2579016	1					
ANR	2579333	IfStatement	if ( 0 == upd -> strings [ S_XMOVE ] . size )		2579016	1					
ANR	2579334	Condition	0 == upd -> strings [ S_XMOVE ] . size	5649:9:202061:202091	2579016	0	True				
ANR	2579335	EqualityExpression	0 == upd -> strings [ S_XMOVE ] . size		2579016	0		==			
ANR	2579336	PrimaryExpression	0		2579016	0					
ANR	2579337	MemberAccess	upd -> strings [ S_XMOVE ] . size		2579016	1					
ANR	2579338	ArrayIndexing	upd -> strings [ S_XMOVE ]		2579016	0					
ANR	2579339	PtrMemberAccess	upd -> strings		2579016	0					
ANR	2579340	Identifier	upd		2579016	0					
ANR	2579341	Identifier	strings		2579016	1					
ANR	2579342	Identifier	S_XMOVE		2579016	1					
ANR	2579343	Identifier	size		2579016	1					
ANR	2579344	ExpressionStatement	xbegin = 0	5649:42:202094:202104	2579016	1	True				
ANR	2579345	AssignmentExpression	xbegin = 0		2579016	0		=			
ANR	2579346	Identifier	xbegin		2579016	0					
ANR	2579347	PrimaryExpression	0		2579016	1					
ANR	2579348	IfStatement	if ( upd -> yscan != upd -> yprinter )		2579016	2					
ANR	2579349	Condition	upd -> yscan != upd -> yprinter	5654:9:202160:202186	2579016	0	True				
ANR	2579350	EqualityExpression	upd -> yscan != upd -> yprinter		2579016	0		!=			
ANR	2579351	PtrMemberAccess	upd -> yscan		2579016	0					
ANR	2579352	Identifier	upd		2579016	0					
ANR	2579353	Identifier	yscan		2579016	1					
ANR	2579354	PtrMemberAccess	upd -> yprinter		2579016	1					
ANR	2579355	Identifier	upd		2579016	0					
ANR	2579356	Identifier	yprinter		2579016	1					
ANR	2579357	CompoundStatement		56:38:1607:1607	2579016	1					
ANR	2579358	IfStatement	if ( B_YABS & upd -> flags )		2579016	0					
ANR	2579359	Condition	B_YABS & upd -> flags	5655:12:202227:202245	2579016	0	True				
ANR	2579360	BitAndExpression	B_YABS & upd -> flags		2579016	0		&			
ANR	2579361	Identifier	B_YABS		2579016	0					
ANR	2579362	PtrMemberAccess	upd -> flags		2579016	1					
ANR	2579363	Identifier	upd		2579016	0					
ANR	2579364	Identifier	flags		2579016	1					
ANR	2579365	ExpressionStatement	y = upd -> yscan + upd -> ints [ I_YOFS ]	5655:33:202248:202282	2579016	1	True				
ANR	2579366	AssignmentExpression	y = upd -> yscan + upd -> ints [ I_YOFS ]		2579016	0		=			
ANR	2579367	Identifier	y		2579016	0					
ANR	2579368	AdditiveExpression	upd -> yscan + upd -> ints [ I_YOFS ]		2579016	1		+			
ANR	2579369	PtrMemberAccess	upd -> yscan		2579016	0					
ANR	2579370	Identifier	upd		2579016	0					
ANR	2579371	Identifier	yscan		2579016	1					
ANR	2579372	ArrayIndexing	upd -> ints [ I_YOFS ]		2579016	1					
ANR	2579373	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2579374	Identifier	upd		2579016	0					
ANR	2579375	Identifier	ints		2579016	1					
ANR	2579376	Identifier	I_YOFS		2579016	1					
ANR	2579377	ElseStatement	else		2579016	0					
ANR	2579378	ExpressionStatement	y = upd -> yscan - upd -> yprinter	5656:33:202317:202347	2579016	0	True				
ANR	2579379	AssignmentExpression	y = upd -> yscan - upd -> yprinter		2579016	0		=			
ANR	2579380	Identifier	y		2579016	0					
ANR	2579381	AdditiveExpression	upd -> yscan - upd -> yprinter		2579016	1		-			
ANR	2579382	PtrMemberAccess	upd -> yscan		2579016	0					
ANR	2579383	Identifier	upd		2579016	0					
ANR	2579384	Identifier	yscan		2579016	1					
ANR	2579385	PtrMemberAccess	upd -> yprinter		2579016	1					
ANR	2579386	Identifier	upd		2579016	0					
ANR	2579387	Identifier	yprinter		2579016	1					
ANR	2579388	IfStatement	if ( 1 < upd -> ints [ I_YSTEP ] )		2579016	1					
ANR	2579389	Condition	1 < upd -> ints [ I_YSTEP ]	5658:18:202368:202389	2579016	0	True				
ANR	2579390	RelationalExpression	1 < upd -> ints [ I_YSTEP ]		2579016	0		<			
ANR	2579391	PrimaryExpression	1		2579016	0					
ANR	2579392	ArrayIndexing	upd -> ints [ I_YSTEP ]		2579016	1					
ANR	2579393	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2579394	Identifier	upd		2579016	0					
ANR	2579395	Identifier	ints		2579016	1					
ANR	2579396	Identifier	I_YSTEP		2579016	1					
ANR	2579397	CompoundStatement		60:42:1810:1810	2579016	1					
ANR	2579398	ExpressionStatement	n = y / upd -> ints [ I_YSTEP ]	5659:12:202406:202438	2579016	0	True				
ANR	2579399	AssignmentExpression	n = y / upd -> ints [ I_YSTEP ]		2579016	0		=			
ANR	2579400	Identifier	n		2579016	0					
ANR	2579401	MultiplicativeExpression	y / upd -> ints [ I_YSTEP ]		2579016	1		/			
ANR	2579402	Identifier	y		2579016	0					
ANR	2579403	ArrayIndexing	upd -> ints [ I_YSTEP ]		2579016	1					
ANR	2579404	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2579405	Identifier	upd		2579016	0					
ANR	2579406	Identifier	ints		2579016	1					
ANR	2579407	Identifier	I_YSTEP		2579016	1					
ANR	2579408	ExpressionStatement	y -= n * upd -> ints [ I_YSTEP ]	5660:12:202471:202503	2579016	1	True				
ANR	2579409	AssignmentExpression	y -= n * upd -> ints [ I_YSTEP ]		2579016	0		-=			
ANR	2579410	Identifier	y		2579016	0					
ANR	2579411	MultiplicativeExpression	n * upd -> ints [ I_YSTEP ]		2579016	1		*			
ANR	2579412	Identifier	n		2579016	0					
ANR	2579413	ArrayIndexing	upd -> ints [ I_YSTEP ]		2579016	1					
ANR	2579414	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2579415	Identifier	upd		2579016	0					
ANR	2579416	Identifier	ints		2579016	1					
ANR	2579417	Identifier	I_YSTEP		2579016	1					
ANR	2579418	ElseStatement	else		2579016	0					
ANR	2579419	IfStatement	if ( - 1 > upd -> ints [ I_YSTEP ] )		2579016	0					
ANR	2579420	Condition	- 1 > upd -> ints [ I_YSTEP ]	5661:19:202543:202565	2579016	0	True				
ANR	2579421	RelationalExpression	- 1 > upd -> ints [ I_YSTEP ]		2579016	0		>			
ANR	2579422	UnaryOperationExpression	- 1		2579016	0					
ANR	2579423	UnaryOperator	-		2579016	0					
ANR	2579424	PrimaryExpression	1		2579016	1					
ANR	2579425	ArrayIndexing	upd -> ints [ I_YSTEP ]		2579016	1					
ANR	2579426	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2579427	Identifier	upd		2579016	0					
ANR	2579428	Identifier	ints		2579016	1					
ANR	2579429	Identifier	I_YSTEP		2579016	1					
ANR	2579430	CompoundStatement		63:44:1986:1986	2579016	1					
ANR	2579431	ExpressionStatement	n = y * - upd -> ints [ I_YSTEP ]	5662:12:202582:202614	2579016	0	True				
ANR	2579432	AssignmentExpression	n = y * - upd -> ints [ I_YSTEP ]		2579016	0		=			
ANR	2579433	Identifier	n		2579016	0					
ANR	2579434	MultiplicativeExpression	y * - upd -> ints [ I_YSTEP ]		2579016	1		*			
ANR	2579435	Identifier	y		2579016	0					
ANR	2579436	UnaryOperationExpression	- upd -> ints [ I_YSTEP ]		2579016	1					
ANR	2579437	UnaryOperator	-		2579016	0					
ANR	2579438	ArrayIndexing	upd -> ints [ I_YSTEP ]		2579016	1					
ANR	2579439	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2579440	Identifier	upd		2579016	0					
ANR	2579441	Identifier	ints		2579016	1					
ANR	2579442	Identifier	I_YSTEP		2579016	1					
ANR	2579443	ExpressionStatement	y = 0	5663:12:202650:202660	2579016	1	True				
ANR	2579444	AssignmentExpression	y = 0		2579016	0		=			
ANR	2579445	Identifier	y		2579016	0					
ANR	2579446	PrimaryExpression	0		2579016	1					
ANR	2579447	ElseStatement	else		2579016	0					
ANR	2579448	CompoundStatement		66:16:2096:2096	2579016	0					
ANR	2579449	ExpressionStatement	n = y	5665:12:202692:202702	2579016	0	True				
ANR	2579450	AssignmentExpression	n = y		2579016	0		=			
ANR	2579451	Identifier	n		2579016	0					
ANR	2579452	Identifier	y		2579016	1					
ANR	2579453	ExpressionStatement	y = 0	5666:12:202716:202726	2579016	1	True				
ANR	2579454	AssignmentExpression	y = 0		2579016	0		=			
ANR	2579455	Identifier	y		2579016	0					
ANR	2579456	PrimaryExpression	0		2579016	1					
ANR	2579457	IfStatement	if ( n )		2579016	2					
ANR	2579458	Condition	n	5669:12:202752:202752	2579016	0	True				
ANR	2579459	Identifier	n		2579016	0					
ANR	2579460	CompoundStatement		71:15:2173:2173	2579016	1					
ANR	2579461	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YMOVE ] . data , upd -> strings [ S_YMOVE ] . size )"	5670:12:202794:202899	2579016	0	True				
ANR	2579462	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YMOVE ] . data , upd -> strings [ S_YMOVE ] . size )"		2579016	0					
ANR	2579463	Callee	memcpy		2579016	0					
ANR	2579464	Identifier	memcpy		2579016	0					
ANR	2579465	ArgumentList	upd -> outbuf + ioutbuf		2579016	1					
ANR	2579466	Argument	upd -> outbuf + ioutbuf		2579016	0					
ANR	2579467	AdditiveExpression	upd -> outbuf + ioutbuf		2579016	0		+			
ANR	2579468	PtrMemberAccess	upd -> outbuf		2579016	0					
ANR	2579469	Identifier	upd		2579016	0					
ANR	2579470	Identifier	outbuf		2579016	1					
ANR	2579471	Identifier	ioutbuf		2579016	1					
ANR	2579472	Argument	upd -> strings [ S_YMOVE ] . data		2579016	1					
ANR	2579473	MemberAccess	upd -> strings [ S_YMOVE ] . data		2579016	0					
ANR	2579474	ArrayIndexing	upd -> strings [ S_YMOVE ]		2579016	0					
ANR	2579475	PtrMemberAccess	upd -> strings		2579016	0					
ANR	2579476	Identifier	upd		2579016	0					
ANR	2579477	Identifier	strings		2579016	1					
ANR	2579478	Identifier	S_YMOVE		2579016	1					
ANR	2579479	Identifier	data		2579016	1					
ANR	2579480	Argument	upd -> strings [ S_YMOVE ] . size		2579016	2					
ANR	2579481	MemberAccess	upd -> strings [ S_YMOVE ] . size		2579016	0					
ANR	2579482	ArrayIndexing	upd -> strings [ S_YMOVE ]		2579016	0					
ANR	2579483	PtrMemberAccess	upd -> strings		2579016	0					
ANR	2579484	Identifier	upd		2579016	0					
ANR	2579485	Identifier	strings		2579016	1					
ANR	2579486	Identifier	S_YMOVE		2579016	1					
ANR	2579487	Identifier	size		2579016	1					
ANR	2579488	ExpressionStatement	ioutbuf += upd -> strings [ S_YMOVE ] . size	5672:12:202913:202950	2579016	1	True				
ANR	2579489	AssignmentExpression	ioutbuf += upd -> strings [ S_YMOVE ] . size		2579016	0		+=			
ANR	2579490	Identifier	ioutbuf		2579016	0					
ANR	2579491	MemberAccess	upd -> strings [ S_YMOVE ] . size		2579016	1					
ANR	2579492	ArrayIndexing	upd -> strings [ S_YMOVE ]		2579016	0					
ANR	2579493	PtrMemberAccess	upd -> strings		2579016	0					
ANR	2579494	Identifier	upd		2579016	0					
ANR	2579495	Identifier	strings		2579016	1					
ANR	2579496	Identifier	S_YMOVE		2579016	1					
ANR	2579497	Identifier	size		2579016	1					
ANR	2579498	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = n & 0xff	5674:12:202965:203003	2579016	2	True				
ANR	2579499	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = n & 0xff		2579016	0		=			
ANR	2579500	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2579016	0					
ANR	2579501	PtrMemberAccess	upd -> outbuf		2579016	0					
ANR	2579502	Identifier	upd		2579016	0					
ANR	2579503	Identifier	outbuf		2579016	1					
ANR	2579504	PostIncDecOperationExpression	ioutbuf ++		2579016	1					
ANR	2579505	Identifier	ioutbuf		2579016	0					
ANR	2579506	IncDec	++		2579016	1					
ANR	2579507	BitAndExpression	n & 0xff		2579016	1		&			
ANR	2579508	Identifier	n		2579016	0					
ANR	2579509	PrimaryExpression	0xff		2579016	1					
ANR	2579510	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff	5675:12:203017:203055	2579016	3	True				
ANR	2579511	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff		2579016	0		=			
ANR	2579512	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2579016	0					
ANR	2579513	PtrMemberAccess	upd -> outbuf		2579016	0					
ANR	2579514	Identifier	upd		2579016	0					
ANR	2579515	Identifier	outbuf		2579016	1					
ANR	2579516	PostIncDecOperationExpression	ioutbuf ++		2579016	1					
ANR	2579517	Identifier	ioutbuf		2579016	0					
ANR	2579518	IncDec	++		2579016	1					
ANR	2579519	BitAndExpression	( n >> 8 ) & 0xff		2579016	1		&			
ANR	2579520	ShiftExpression	n >> 8		2579016	0		>>			
ANR	2579521	Identifier	n		2579016	0					
ANR	2579522	PrimaryExpression	8		2579016	1					
ANR	2579523	PrimaryExpression	0xff		2579016	1					
ANR	2579524	IfStatement	if ( 0 < upd -> strings [ S_YSTEP ] . size )		2579016	3					
ANR	2579525	Condition	0 < upd -> strings [ S_YSTEP ] . size	5679:12:203113:203142	2579016	0	True				
ANR	2579526	RelationalExpression	0 < upd -> strings [ S_YSTEP ] . size		2579016	0		<			
ANR	2579527	PrimaryExpression	0		2579016	0					
ANR	2579528	MemberAccess	upd -> strings [ S_YSTEP ] . size		2579016	1					
ANR	2579529	ArrayIndexing	upd -> strings [ S_YSTEP ]		2579016	0					
ANR	2579530	PtrMemberAccess	upd -> strings		2579016	0					
ANR	2579531	Identifier	upd		2579016	0					
ANR	2579532	Identifier	strings		2579016	1					
ANR	2579533	Identifier	S_YSTEP		2579016	1					
ANR	2579534	Identifier	size		2579016	1					
ANR	2579535	CompoundStatement		81:44:2563:2563	2579016	1					
ANR	2579536	WhileStatement	while ( y -- )		2579016	0					
ANR	2579537	Condition	y --	5680:18:203165:203167	2579016	0	True				
ANR	2579538	PostIncDecOperationExpression	y --		2579016	0					
ANR	2579539	Identifier	y		2579016	0					
ANR	2579540	IncDec	--		2579016	1					
ANR	2579541	CompoundStatement		82:23:2588:2588	2579016	1					
ANR	2579542	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YSTEP ] . data , upd -> strings [ S_YSTEP ] . size )"	5681:15:203187:203322	2579016	0	True				
ANR	2579543	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YSTEP ] . data , upd -> strings [ S_YSTEP ] . size )"		2579016	0					
ANR	2579544	Callee	memcpy		2579016	0					
ANR	2579545	Identifier	memcpy		2579016	0					
ANR	2579546	ArgumentList	upd -> outbuf + ioutbuf		2579016	1					
ANR	2579547	Argument	upd -> outbuf + ioutbuf		2579016	0					
ANR	2579548	AdditiveExpression	upd -> outbuf + ioutbuf		2579016	0		+			
ANR	2579549	PtrMemberAccess	upd -> outbuf		2579016	0					
ANR	2579550	Identifier	upd		2579016	0					
ANR	2579551	Identifier	outbuf		2579016	1					
ANR	2579552	Identifier	ioutbuf		2579016	1					
ANR	2579553	Argument	upd -> strings [ S_YSTEP ] . data		2579016	1					
ANR	2579554	MemberAccess	upd -> strings [ S_YSTEP ] . data		2579016	0					
ANR	2579555	ArrayIndexing	upd -> strings [ S_YSTEP ]		2579016	0					
ANR	2579556	PtrMemberAccess	upd -> strings		2579016	0					
ANR	2579557	Identifier	upd		2579016	0					
ANR	2579558	Identifier	strings		2579016	1					
ANR	2579559	Identifier	S_YSTEP		2579016	1					
ANR	2579560	Identifier	data		2579016	1					
ANR	2579561	Argument	upd -> strings [ S_YSTEP ] . size		2579016	2					
ANR	2579562	MemberAccess	upd -> strings [ S_YSTEP ] . size		2579016	0					
ANR	2579563	ArrayIndexing	upd -> strings [ S_YSTEP ]		2579016	0					
ANR	2579564	PtrMemberAccess	upd -> strings		2579016	0					
ANR	2579565	Identifier	upd		2579016	0					
ANR	2579566	Identifier	strings		2579016	1					
ANR	2579567	Identifier	S_YSTEP		2579016	1					
ANR	2579568	Identifier	size		2579016	1					
ANR	2579569	ExpressionStatement	ioutbuf += upd -> strings [ S_YSTEP ] . size	5684:15:203339:203376	2579016	1	True				
ANR	2579570	AssignmentExpression	ioutbuf += upd -> strings [ S_YSTEP ] . size		2579016	0		+=			
ANR	2579571	Identifier	ioutbuf		2579016	0					
ANR	2579572	MemberAccess	upd -> strings [ S_YSTEP ] . size		2579016	1					
ANR	2579573	ArrayIndexing	upd -> strings [ S_YSTEP ]		2579016	0					
ANR	2579574	PtrMemberAccess	upd -> strings		2579016	0					
ANR	2579575	Identifier	upd		2579016	0					
ANR	2579576	Identifier	strings		2579016	1					
ANR	2579577	Identifier	S_YSTEP		2579016	1					
ANR	2579578	Identifier	size		2579016	1					
ANR	2579579	ExpressionStatement	upd -> yprinter = upd -> yscan	5688:9:203413:203439	2579016	4	True				
ANR	2579580	AssignmentExpression	upd -> yprinter = upd -> yscan		2579016	0		=			
ANR	2579581	PtrMemberAccess	upd -> yprinter		2579016	0					
ANR	2579582	Identifier	upd		2579016	0					
ANR	2579583	Identifier	yprinter		2579016	1					
ANR	2579584	PtrMemberAccess	upd -> yscan		2579016	1					
ANR	2579585	Identifier	upd		2579016	0					
ANR	2579586	Identifier	yscan		2579016	1					
ANR	2579587	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		2579016	3					
ANR	2579588	ForInit	icomp = 0 ;	5693:10:203559:203568	2579016	0	True				
ANR	2579589	AssignmentExpression	icomp = 0		2579016	0		=			
ANR	2579590	Identifier	icomp		2579016	0					
ANR	2579591	PrimaryExpression	0		2579016	1					
ANR	2579592	Condition	icomp < upd -> ocomp	5693:21:203570:203587	2579016	1	True				
ANR	2579593	RelationalExpression	icomp < upd -> ocomp		2579016	0		<			
ANR	2579594	Identifier	icomp		2579016	0					
ANR	2579595	PtrMemberAccess	upd -> ocomp		2579016	1					
ANR	2579596	Identifier	upd		2579016	0					
ANR	2579597	Identifier	ocomp		2579016	1					
ANR	2579598	UnaryExpression	++ icomp	5693:41:203590:203596	2579016	2	True				
ANR	2579599	IncDec	++		2579016	0					
ANR	2579600	Identifier	icomp		2579016	1					
ANR	2579601	CompoundStatement		95:50:3017:3017	2579016	3					
ANR	2579602	ForStatement	for ( y = ybegin ; y < yend ; y += upd -> ints [ I_NYPASS ] )		2579016	0					
ANR	2579603	ForInit	y = ybegin ;	5697:13:203702:203712	2579016	0	True				
ANR	2579604	AssignmentExpression	y = ybegin		2579016	0		=			
ANR	2579605	Identifier	y		2579016	0					
ANR	2579606	Identifier	ybegin		2579016	1					
ANR	2579607	Condition	y < yend	5697:25:203714:203721	2579016	1	True				
ANR	2579608	RelationalExpression	y < yend		2579016	0		<			
ANR	2579609	Identifier	y		2579016	0					
ANR	2579610	Identifier	yend		2579016	1					
ANR	2579611	AssignmentExpression	y += upd -> ints [ I_NYPASS ]	5697:35:203724:203747	2579016	2	True	+=			
ANR	2579612	Identifier	y		2579016	0					
ANR	2579613	ArrayIndexing	upd -> ints [ I_NYPASS ]		2579016	1					
ANR	2579614	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2579615	Identifier	upd		2579016	0					
ANR	2579616	Identifier	ints		2579016	1					
ANR	2579617	Identifier	I_NYPASS		2579016	1					
ANR	2579618	CompoundStatement		99:61:3168:3168	2579016	3					
ANR	2579619	IfStatement	if ( 0 > y )		2579016	0					
ANR	2579620	Condition	0 > y	5698:15:203783:203787	2579016	0	True				
ANR	2579621	RelationalExpression	0 > y		2579016	0		>			
ANR	2579622	PrimaryExpression	0		2579016	0					
ANR	2579623	Identifier	y		2579016	1					
ANR	2579624	ContinueStatement	continue ;	5698:22:203790:203798	2579016	1	True				
ANR	2579625	ExpressionStatement	obytes = upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes	5699:12:203812:203862	2579016	1	True				
ANR	2579626	AssignmentExpression	obytes = upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes		2579016	0		=			
ANR	2579627	Identifier	obytes		2579016	0					
ANR	2579628	MemberAccess	upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes		2579016	1					
ANR	2579629	ArrayIndexing	upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ]		2579016	0					
ANR	2579630	ArrayIndexing	upd -> scnbuf [ y & upd -> scnmsk ]		2579016	0					
ANR	2579631	PtrMemberAccess	upd -> scnbuf		2579016	0					
ANR	2579632	Identifier	upd		2579016	0					
ANR	2579633	Identifier	scnbuf		2579016	1					
ANR	2579634	BitAndExpression	y & upd -> scnmsk		2579016	1		&			
ANR	2579635	Identifier	y		2579016	0					
ANR	2579636	PtrMemberAccess	upd -> scnmsk		2579016	1					
ANR	2579637	Identifier	upd		2579016	0					
ANR	2579638	Identifier	scnmsk		2579016	1					
ANR	2579639	Identifier	icomp		2579016	1					
ANR	2579640	Identifier	bytes		2579016	1					
ANR	2579641	ForStatement	for ( x = xbegin ; x <= xend && ! obytes [ x ] ; ++ x )		2579016	2					
ANR	2579642	ForInit	x = xbegin ;	5700:16:203880:203890	2579016	0	True				
ANR	2579643	AssignmentExpression	x = xbegin		2579016	0		=			
ANR	2579644	Identifier	x		2579016	0					
ANR	2579645	Identifier	xbegin		2579016	1					
ANR	2579646	Condition	x <= xend && ! obytes [ x ]	5700:28:203892:203914	2579016	1	True				
ANR	2579647	AndExpression	x <= xend && ! obytes [ x ]		2579016	0		&&			
ANR	2579648	RelationalExpression	x <= xend		2579016	0		<=			
ANR	2579649	Identifier	x		2579016	0					
ANR	2579650	Identifier	xend		2579016	1					
ANR	2579651	UnaryOperationExpression	! obytes [ x ]		2579016	1					
ANR	2579652	UnaryOperator	!		2579016	0					
ANR	2579653	ArrayIndexing	obytes [ x ]		2579016	1					
ANR	2579654	Identifier	obytes		2579016	0					
ANR	2579655	Identifier	x		2579016	1					
ANR	2579656	UnaryExpression	++ x	5700:53:203917:203919	2579016	2	True				
ANR	2579657	IncDec	++		2579016	0					
ANR	2579658	Identifier	x		2579016	1					
ANR	2579659	ExpressionStatement		5700:57:203921:203921	2579016	3	True				
ANR	2579660	IfStatement	if ( x <= xend )		2579016	3					
ANR	2579661	Condition	x <= xend	5701:28:203951:203959	2579016	0	True				
ANR	2579662	RelationalExpression	x <= xend		2579016	0		<=			
ANR	2579663	Identifier	x		2579016	0					
ANR	2579664	Identifier	xend		2579016	1					
ANR	2579665	BreakStatement	break ;	5701:39:203962:203967	2579016	1	True				
ANR	2579666	IfStatement	if ( y >= yend )		2579016	1					
ANR	2579667	Condition	y >= yend	5703:12:204060:204068	2579016	0	True				
ANR	2579668	RelationalExpression	y >= yend		2579016	0		>=			
ANR	2579669	Identifier	y		2579016	0					
ANR	2579670	Identifier	yend		2579016	1					
ANR	2579671	ContinueStatement	continue ;	5703:23:204071:204079	2579016	1	True				
ANR	2579672	IfStatement	if ( ( 0 < upd -> string_a [ SA_SETCOMP ] . size ) && ( upd -> icomp != icomp ) )		2579016	2					
ANR	2579673	Condition	( 0 < upd -> string_a [ SA_SETCOMP ] . size ) && ( upd -> icomp != icomp )	5707:12:204159:204246	2579016	0	True				
ANR	2579674	AndExpression	( 0 < upd -> string_a [ SA_SETCOMP ] . size ) && ( upd -> icomp != icomp )		2579016	0		&&			
ANR	2579675	RelationalExpression	0 < upd -> string_a [ SA_SETCOMP ] . size		2579016	0		<			
ANR	2579676	PrimaryExpression	0		2579016	0					
ANR	2579677	MemberAccess	upd -> string_a [ SA_SETCOMP ] . size		2579016	1					
ANR	2579678	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2579016	0					
ANR	2579679	PtrMemberAccess	upd -> string_a		2579016	0					
ANR	2579680	Identifier	upd		2579016	0					
ANR	2579681	Identifier	string_a		2579016	1					
ANR	2579682	Identifier	SA_SETCOMP		2579016	1					
ANR	2579683	Identifier	size		2579016	1					
ANR	2579684	EqualityExpression	upd -> icomp != icomp		2579016	1		!=			
ANR	2579685	PtrMemberAccess	upd -> icomp		2579016	0					
ANR	2579686	Identifier	upd		2579016	0					
ANR	2579687	Identifier	icomp		2579016	1					
ANR	2579688	Identifier	icomp		2579016	1					
ANR	2579689	CompoundStatement		110:53:3670:3670	2579016	1					
ANR	2579690	ExpressionStatement	upd -> icomp = icomp	5709:12:204290:204308	2579016	0	True				
ANR	2579691	AssignmentExpression	upd -> icomp = icomp		2579016	0		=			
ANR	2579692	PtrMemberAccess	upd -> icomp		2579016	0					
ANR	2579693	Identifier	upd		2579016	0					
ANR	2579694	Identifier	icomp		2579016	1					
ANR	2579695	Identifier	icomp		2579016	1					
ANR	2579696	IfStatement	if ( 0 < upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size )		2579016	1					
ANR	2579697	Condition	0 < upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size	5710:15:204325:204370	2579016	0	True				
ANR	2579698	RelationalExpression	0 < upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2579016	0		<			
ANR	2579699	PrimaryExpression	0		2579016	0					
ANR	2579700	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2579016	1					
ANR	2579701	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		2579016	0					
ANR	2579702	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		2579016	0					
ANR	2579703	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2579016	0					
ANR	2579704	PtrMemberAccess	upd -> string_a		2579016	0					
ANR	2579705	Identifier	upd		2579016	0					
ANR	2579706	Identifier	string_a		2579016	1					
ANR	2579707	Identifier	SA_SETCOMP		2579016	1					
ANR	2579708	Identifier	data		2579016	1					
ANR	2579709	Identifier	icomp		2579016	1					
ANR	2579710	Identifier	size		2579016	1					
ANR	2579711	CompoundStatement		112:63:3791:3791	2579016	1					
ANR	2579712	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size )"	5711:15:204390:204557	2579016	0	True				
ANR	2579713	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size )"		2579016	0					
ANR	2579714	Callee	memcpy		2579016	0					
ANR	2579715	Identifier	memcpy		2579016	0					
ANR	2579716	ArgumentList	upd -> outbuf + ioutbuf		2579016	1					
ANR	2579717	Argument	upd -> outbuf + ioutbuf		2579016	0					
ANR	2579718	AdditiveExpression	upd -> outbuf + ioutbuf		2579016	0		+			
ANR	2579719	PtrMemberAccess	upd -> outbuf		2579016	0					
ANR	2579720	Identifier	upd		2579016	0					
ANR	2579721	Identifier	outbuf		2579016	1					
ANR	2579722	Identifier	ioutbuf		2579016	1					
ANR	2579723	Argument	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data		2579016	1					
ANR	2579724	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data		2579016	0					
ANR	2579725	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		2579016	0					
ANR	2579726	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		2579016	0					
ANR	2579727	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2579016	0					
ANR	2579728	PtrMemberAccess	upd -> string_a		2579016	0					
ANR	2579729	Identifier	upd		2579016	0					
ANR	2579730	Identifier	string_a		2579016	1					
ANR	2579731	Identifier	SA_SETCOMP		2579016	1					
ANR	2579732	Identifier	data		2579016	1					
ANR	2579733	Identifier	icomp		2579016	1					
ANR	2579734	Identifier	data		2579016	1					
ANR	2579735	Argument	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2579016	2					
ANR	2579736	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2579016	0					
ANR	2579737	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		2579016	0					
ANR	2579738	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		2579016	0					
ANR	2579739	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2579016	0					
ANR	2579740	PtrMemberAccess	upd -> string_a		2579016	0					
ANR	2579741	Identifier	upd		2579016	0					
ANR	2579742	Identifier	string_a		2579016	1					
ANR	2579743	Identifier	SA_SETCOMP		2579016	1					
ANR	2579744	Identifier	data		2579016	1					
ANR	2579745	Identifier	icomp		2579016	1					
ANR	2579746	Identifier	size		2579016	1					
ANR	2579747	ExpressionStatement	ioutbuf += upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size	5714:15:204574:204627	2579016	1	True				
ANR	2579748	AssignmentExpression	ioutbuf += upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2579016	0		+=			
ANR	2579749	Identifier	ioutbuf		2579016	0					
ANR	2579750	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2579016	1					
ANR	2579751	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		2579016	0					
ANR	2579752	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		2579016	0					
ANR	2579753	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2579016	0					
ANR	2579754	PtrMemberAccess	upd -> string_a		2579016	0					
ANR	2579755	Identifier	upd		2579016	0					
ANR	2579756	Identifier	string_a		2579016	1					
ANR	2579757	Identifier	SA_SETCOMP		2579016	1					
ANR	2579758	Identifier	data		2579016	1					
ANR	2579759	Identifier	icomp		2579016	1					
ANR	2579760	Identifier	size		2579016	1					
ANR	2579761	IfStatement	if ( xbegin != upd -> xprinter )		2579016	3					
ANR	2579762	Condition	xbegin != upd -> xprinter	5720:12:204768:204790	2579016	0	True				
ANR	2579763	EqualityExpression	xbegin != upd -> xprinter		2579016	0		!=			
ANR	2579764	Identifier	xbegin		2579016	0					
ANR	2579765	PtrMemberAccess	upd -> xprinter		2579016	1					
ANR	2579766	Identifier	upd		2579016	0					
ANR	2579767	Identifier	xprinter		2579016	1					
ANR	2579768	CompoundStatement		122:37:4211:4211	2579016	1					
ANR	2579769	IfStatement	if ( 0 == upd -> strings [ S_XMOVE ] . size )		2579016	0					
ANR	2579770	Condition	0 == upd -> strings [ S_XMOVE ] . size	5722:15:204811:204841	2579016	0	True				
ANR	2579771	EqualityExpression	0 == upd -> strings [ S_XMOVE ] . size		2579016	0		==			
ANR	2579772	PrimaryExpression	0		2579016	0					
ANR	2579773	MemberAccess	upd -> strings [ S_XMOVE ] . size		2579016	1					
ANR	2579774	ArrayIndexing	upd -> strings [ S_XMOVE ]		2579016	0					
ANR	2579775	PtrMemberAccess	upd -> strings		2579016	0					
ANR	2579776	Identifier	upd		2579016	0					
ANR	2579777	Identifier	strings		2579016	1					
ANR	2579778	Identifier	S_XMOVE		2579016	1					
ANR	2579779	Identifier	size		2579016	1					
ANR	2579780	CompoundStatement		124:48:4262:4262	2579016	1					
ANR	2579781	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = '\\r'	5724:15:204862:204891	2579016	0	True				
ANR	2579782	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = '\\r'		2579016	0		=			
ANR	2579783	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2579016	0					
ANR	2579784	PtrMemberAccess	upd -> outbuf		2579016	0					
ANR	2579785	Identifier	upd		2579016	0					
ANR	2579786	Identifier	outbuf		2579016	1					
ANR	2579787	PostIncDecOperationExpression	ioutbuf ++		2579016	1					
ANR	2579788	Identifier	ioutbuf		2579016	0					
ANR	2579789	IncDec	++		2579016	1					
ANR	2579790	PrimaryExpression	'\\r'		2579016	1					
ANR	2579791	ExpressionStatement	upd -> xprinter = 0	5725:15:204908:204935	2579016	1	True				
ANR	2579792	AssignmentExpression	upd -> xprinter = 0		2579016	0		=			
ANR	2579793	PtrMemberAccess	upd -> xprinter		2579016	0					
ANR	2579794	Identifier	upd		2579016	0					
ANR	2579795	Identifier	xprinter		2579016	1					
ANR	2579796	PrimaryExpression	0		2579016	1					
ANR	2579797	ExpressionStatement	n = 0	5726:15:204952:204957	2579016	2	True				
ANR	2579798	AssignmentExpression	n = 0		2579016	0		=			
ANR	2579799	Identifier	n		2579016	0					
ANR	2579800	PrimaryExpression	0		2579016	1					
ANR	2579801	ExpressionStatement	x = 0	5727:15:204974:204979	2579016	3	True				
ANR	2579802	AssignmentExpression	x = 0		2579016	0		=			
ANR	2579803	Identifier	x		2579016	0					
ANR	2579804	PrimaryExpression	0		2579016	1					
ANR	2579805	ElseStatement	else		2579016	0					
ANR	2579806	CompoundStatement		131:19:4419:4419	2579016	0					
ANR	2579807	IfStatement	if ( B_XABS & upd -> flags )		2579016	0					
ANR	2579808	Condition	B_XABS & upd -> flags	5731:18:205022:205040	2579016	0	True				
ANR	2579809	BitAndExpression	B_XABS & upd -> flags		2579016	0		&			
ANR	2579810	Identifier	B_XABS		2579016	0					
ANR	2579811	PtrMemberAccess	upd -> flags		2579016	1					
ANR	2579812	Identifier	upd		2579016	0					
ANR	2579813	Identifier	flags		2579016	1					
ANR	2579814	ExpressionStatement	n = x = xbegin + upd -> ints [ I_XOFS ]	5731:39:205043:205077	2579016	1	True				
ANR	2579815	AssignmentExpression	n = x = xbegin + upd -> ints [ I_XOFS ]		2579016	0		=			
ANR	2579816	Identifier	n		2579016	0					
ANR	2579817	AssignmentExpression	x = xbegin + upd -> ints [ I_XOFS ]		2579016	1		=			
ANR	2579818	Identifier	x		2579016	0					
ANR	2579819	AdditiveExpression	xbegin + upd -> ints [ I_XOFS ]		2579016	1		+			
ANR	2579820	Identifier	xbegin		2579016	0					
ANR	2579821	ArrayIndexing	upd -> ints [ I_XOFS ]		2579016	1					
ANR	2579822	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2579823	Identifier	upd		2579016	0					
ANR	2579824	Identifier	ints		2579016	1					
ANR	2579825	Identifier	I_XOFS		2579016	1					
ANR	2579826	ElseStatement	else		2579016	0					
ANR	2579827	ExpressionStatement	n = x = xbegin - upd -> xprinter	5732:39:205118:205148	2579016	0	True				
ANR	2579828	AssignmentExpression	n = x = xbegin - upd -> xprinter		2579016	0		=			
ANR	2579829	Identifier	n		2579016	0					
ANR	2579830	AssignmentExpression	x = xbegin - upd -> xprinter		2579016	1		=			
ANR	2579831	Identifier	x		2579016	0					
ANR	2579832	AdditiveExpression	xbegin - upd -> xprinter		2579016	1		-			
ANR	2579833	Identifier	xbegin		2579016	0					
ANR	2579834	PtrMemberAccess	upd -> xprinter		2579016	1					
ANR	2579835	Identifier	upd		2579016	0					
ANR	2579836	Identifier	xprinter		2579016	1					
ANR	2579837	IfStatement	if ( 1 < upd -> ints [ I_XSTEP ] )		2579016	1					
ANR	2579838	Condition	1 < upd -> ints [ I_XSTEP ]	5734:26:205177:205198	2579016	0	True				
ANR	2579839	RelationalExpression	1 < upd -> ints [ I_XSTEP ]		2579016	0		<			
ANR	2579840	PrimaryExpression	1		2579016	0					
ANR	2579841	ArrayIndexing	upd -> ints [ I_XSTEP ]		2579016	1					
ANR	2579842	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2579843	Identifier	upd		2579016	0					
ANR	2579844	Identifier	ints		2579016	1					
ANR	2579845	Identifier	I_XSTEP		2579016	1					
ANR	2579846	CompoundStatement		136:50:4619:4619	2579016	1					
ANR	2579847	IfStatement	if ( 0 > n )		2579016	0					
ANR	2579848	Condition	0 > n	5735:21:205224:205228	2579016	0	True				
ANR	2579849	RelationalExpression	0 > n		2579016	0		>			
ANR	2579850	PrimaryExpression	0		2579016	0					
ANR	2579851	Identifier	n		2579016	1					
ANR	2579852	CompoundStatement		137:28:4649:4649	2579016	1					
ANR	2579853	ExpressionStatement	n -= upd -> ints [ I_XSTEP ]	5736:21:205254:205278	2579016	0	True				
ANR	2579854	AssignmentExpression	n -= upd -> ints [ I_XSTEP ]		2579016	0		-=			
ANR	2579855	Identifier	n		2579016	0					
ANR	2579856	ArrayIndexing	upd -> ints [ I_XSTEP ]		2579016	1					
ANR	2579857	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2579858	Identifier	upd		2579016	0					
ANR	2579859	Identifier	ints		2579016	1					
ANR	2579860	Identifier	I_XSTEP		2579016	1					
ANR	2579861	ExpressionStatement	x -= n	5737:21:205301:205308	2579016	1	True				
ANR	2579862	AssignmentExpression	x -= n		2579016	0		-=			
ANR	2579863	Identifier	x		2579016	0					
ANR	2579864	Identifier	n		2579016	1					
ANR	2579865	IfStatement	if ( n )		2579016	1					
ANR	2579866	Condition	n	5739:21:205351:205351	2579016	0	True				
ANR	2579867	Identifier	n		2579016	0					
ANR	2579868	ExpressionStatement	n /= upd -> ints [ I_XSTEP ]	5739:24:205354:205378	2579016	1	True				
ANR	2579869	AssignmentExpression	n /= upd -> ints [ I_XSTEP ]		2579016	0		/=			
ANR	2579870	Identifier	n		2579016	0					
ANR	2579871	ArrayIndexing	upd -> ints [ I_XSTEP ]		2579016	1					
ANR	2579872	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2579873	Identifier	upd		2579016	0					
ANR	2579874	Identifier	ints		2579016	1					
ANR	2579875	Identifier	I_XSTEP		2579016	1					
ANR	2579876	IfStatement	if ( x )		2579016	2					
ANR	2579877	Condition	x	5740:21:205419:205419	2579016	0	True				
ANR	2579878	Identifier	x		2579016	0					
ANR	2579879	ExpressionStatement	x %= upd -> ints [ I_XSTEP ]	5740:24:205422:205446	2579016	1	True				
ANR	2579880	AssignmentExpression	x %= upd -> ints [ I_XSTEP ]		2579016	0		%=			
ANR	2579881	Identifier	x		2579016	0					
ANR	2579882	ArrayIndexing	upd -> ints [ I_XSTEP ]		2579016	1					
ANR	2579883	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2579884	Identifier	upd		2579016	0					
ANR	2579885	Identifier	ints		2579016	1					
ANR	2579886	Identifier	I_XSTEP		2579016	1					
ANR	2579887	ElseStatement	else		2579016	0					
ANR	2579888	IfStatement	if ( - 1 > upd -> ints [ I_XSTEP ] )		2579016	0					
ANR	2579889	Condition	- 1 > upd -> ints [ I_XSTEP ]	5742:25:205492:205514	2579016	0	True				
ANR	2579890	RelationalExpression	- 1 > upd -> ints [ I_XSTEP ]		2579016	0		>			
ANR	2579891	UnaryOperationExpression	- 1		2579016	0					
ANR	2579892	UnaryOperator	-		2579016	0					
ANR	2579893	PrimaryExpression	1		2579016	1					
ANR	2579894	ArrayIndexing	upd -> ints [ I_XSTEP ]		2579016	1					
ANR	2579895	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2579896	Identifier	upd		2579016	0					
ANR	2579897	Identifier	ints		2579016	1					
ANR	2579898	Identifier	I_XSTEP		2579016	1					
ANR	2579899	CompoundStatement		144:50:4935:4935	2579016	1					
ANR	2579900	ExpressionStatement	n *= - upd -> ints [ I_XSTEP ]	5743:18:205537:205561	2579016	0	True				
ANR	2579901	AssignmentExpression	n *= - upd -> ints [ I_XSTEP ]		2579016	0		*=			
ANR	2579902	Identifier	n		2579016	0					
ANR	2579903	UnaryOperationExpression	- upd -> ints [ I_XSTEP ]		2579016	1					
ANR	2579904	UnaryOperator	-		2579016	0					
ANR	2579905	ArrayIndexing	upd -> ints [ I_XSTEP ]		2579016	1					
ANR	2579906	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2579907	Identifier	upd		2579016	0					
ANR	2579908	Identifier	ints		2579016	1					
ANR	2579909	Identifier	I_XSTEP		2579016	1					
ANR	2579910	ExpressionStatement	x = 0	5744:18:205602:205608	2579016	1	True				
ANR	2579911	AssignmentExpression	x = 0		2579016	0		=			
ANR	2579912	Identifier	x		2579016	0					
ANR	2579913	PrimaryExpression	0		2579016	1					
ANR	2579914	IfStatement	if ( n )		2579016	2					
ANR	2579915	Condition	n	5747:18:205646:205646	2579016	0	True				
ANR	2579916	Identifier	n		2579016	0					
ANR	2579917	CompoundStatement		149:21:5067:5067	2579016	1					
ANR	2579918	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XMOVE ] . data , upd -> strings [ S_XMOVE ] . size )"	5749:17:205693:205834	2579016	0	True				
ANR	2579919	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XMOVE ] . data , upd -> strings [ S_XMOVE ] . size )"		2579016	0					
ANR	2579920	Callee	memcpy		2579016	0					
ANR	2579921	Identifier	memcpy		2579016	0					
ANR	2579922	ArgumentList	upd -> outbuf + ioutbuf		2579016	1					
ANR	2579923	Argument	upd -> outbuf + ioutbuf		2579016	0					
ANR	2579924	AdditiveExpression	upd -> outbuf + ioutbuf		2579016	0		+			
ANR	2579925	PtrMemberAccess	upd -> outbuf		2579016	0					
ANR	2579926	Identifier	upd		2579016	0					
ANR	2579927	Identifier	outbuf		2579016	1					
ANR	2579928	Identifier	ioutbuf		2579016	1					
ANR	2579929	Argument	upd -> strings [ S_XMOVE ] . data		2579016	1					
ANR	2579930	MemberAccess	upd -> strings [ S_XMOVE ] . data		2579016	0					
ANR	2579931	ArrayIndexing	upd -> strings [ S_XMOVE ]		2579016	0					
ANR	2579932	PtrMemberAccess	upd -> strings		2579016	0					
ANR	2579933	Identifier	upd		2579016	0					
ANR	2579934	Identifier	strings		2579016	1					
ANR	2579935	Identifier	S_XMOVE		2579016	1					
ANR	2579936	Identifier	data		2579016	1					
ANR	2579937	Argument	upd -> strings [ S_XMOVE ] . size		2579016	2					
ANR	2579938	MemberAccess	upd -> strings [ S_XMOVE ] . size		2579016	0					
ANR	2579939	ArrayIndexing	upd -> strings [ S_XMOVE ]		2579016	0					
ANR	2579940	PtrMemberAccess	upd -> strings		2579016	0					
ANR	2579941	Identifier	upd		2579016	0					
ANR	2579942	Identifier	strings		2579016	1					
ANR	2579943	Identifier	S_XMOVE		2579016	1					
ANR	2579944	Identifier	size		2579016	1					
ANR	2579945	ExpressionStatement	ioutbuf += upd -> strings [ S_XMOVE ] . size	5752:18:205854:205891	2579016	1	True				
ANR	2579946	AssignmentExpression	ioutbuf += upd -> strings [ S_XMOVE ] . size		2579016	0		+=			
ANR	2579947	Identifier	ioutbuf		2579016	0					
ANR	2579948	MemberAccess	upd -> strings [ S_XMOVE ] . size		2579016	1					
ANR	2579949	ArrayIndexing	upd -> strings [ S_XMOVE ]		2579016	0					
ANR	2579950	PtrMemberAccess	upd -> strings		2579016	0					
ANR	2579951	Identifier	upd		2579016	0					
ANR	2579952	Identifier	strings		2579016	1					
ANR	2579953	Identifier	S_XMOVE		2579016	1					
ANR	2579954	Identifier	size		2579016	1					
ANR	2579955	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = n & 0xff	5754:18:205912:205950	2579016	2	True				
ANR	2579956	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = n & 0xff		2579016	0		=			
ANR	2579957	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2579016	0					
ANR	2579958	PtrMemberAccess	upd -> outbuf		2579016	0					
ANR	2579959	Identifier	upd		2579016	0					
ANR	2579960	Identifier	outbuf		2579016	1					
ANR	2579961	PostIncDecOperationExpression	ioutbuf ++		2579016	1					
ANR	2579962	Identifier	ioutbuf		2579016	0					
ANR	2579963	IncDec	++		2579016	1					
ANR	2579964	BitAndExpression	n & 0xff		2579016	1		&			
ANR	2579965	Identifier	n		2579016	0					
ANR	2579966	PrimaryExpression	0xff		2579016	1					
ANR	2579967	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff	5755:18:205970:206008	2579016	3	True				
ANR	2579968	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff		2579016	0		=			
ANR	2579969	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2579016	0					
ANR	2579970	PtrMemberAccess	upd -> outbuf		2579016	0					
ANR	2579971	Identifier	upd		2579016	0					
ANR	2579972	Identifier	outbuf		2579016	1					
ANR	2579973	PostIncDecOperationExpression	ioutbuf ++		2579016	1					
ANR	2579974	Identifier	ioutbuf		2579016	0					
ANR	2579975	IncDec	++		2579016	1					
ANR	2579976	BitAndExpression	( n >> 8 ) & 0xff		2579016	1		&			
ANR	2579977	ShiftExpression	n >> 8		2579016	0		>>			
ANR	2579978	Identifier	n		2579016	0					
ANR	2579979	PrimaryExpression	8		2579016	1					
ANR	2579980	PrimaryExpression	0xff		2579016	1					
ANR	2579981	IfStatement	if ( x && 0 < upd -> strings [ S_XSTEP ] . size )		2579016	1					
ANR	2579982	Condition	x && 0 < upd -> strings [ S_XSTEP ] . size	5761:15:206089:206123	2579016	0	True				
ANR	2579983	AndExpression	x && 0 < upd -> strings [ S_XSTEP ] . size		2579016	0		&&			
ANR	2579984	Identifier	x		2579016	0					
ANR	2579985	RelationalExpression	0 < upd -> strings [ S_XSTEP ] . size		2579016	1		<			
ANR	2579986	PrimaryExpression	0		2579016	0					
ANR	2579987	MemberAccess	upd -> strings [ S_XSTEP ] . size		2579016	1					
ANR	2579988	ArrayIndexing	upd -> strings [ S_XSTEP ]		2579016	0					
ANR	2579989	PtrMemberAccess	upd -> strings		2579016	0					
ANR	2579990	Identifier	upd		2579016	0					
ANR	2579991	Identifier	strings		2579016	1					
ANR	2579992	Identifier	S_XSTEP		2579016	1					
ANR	2579993	Identifier	size		2579016	1					
ANR	2579994	CompoundStatement		163:52:5544:5544	2579016	1					
ANR	2579995	WhileStatement	while ( x -- )		2579016	0					
ANR	2579996	Condition	x --	5762:21:206169:206171	2579016	0	True				
ANR	2579997	PostIncDecOperationExpression	x --		2579016	0					
ANR	2579998	Identifier	x		2579016	0					
ANR	2579999	IncDec	--		2579016	1					
ANR	2580000	CompoundStatement		164:26:5592:5592	2579016	1					
ANR	2580001	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XSTEP ] . data , upd -> strings [ S_XSTEP ] . size )"	5763:18:206194:206335	2579016	0	True				
ANR	2580002	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XSTEP ] . data , upd -> strings [ S_XSTEP ] . size )"		2579016	0					
ANR	2580003	Callee	memcpy		2579016	0					
ANR	2580004	Identifier	memcpy		2579016	0					
ANR	2580005	ArgumentList	upd -> outbuf + ioutbuf		2579016	1					
ANR	2580006	Argument	upd -> outbuf + ioutbuf		2579016	0					
ANR	2580007	AdditiveExpression	upd -> outbuf + ioutbuf		2579016	0		+			
ANR	2580008	PtrMemberAccess	upd -> outbuf		2579016	0					
ANR	2580009	Identifier	upd		2579016	0					
ANR	2580010	Identifier	outbuf		2579016	1					
ANR	2580011	Identifier	ioutbuf		2579016	1					
ANR	2580012	Argument	upd -> strings [ S_XSTEP ] . data		2579016	1					
ANR	2580013	MemberAccess	upd -> strings [ S_XSTEP ] . data		2579016	0					
ANR	2580014	ArrayIndexing	upd -> strings [ S_XSTEP ]		2579016	0					
ANR	2580015	PtrMemberAccess	upd -> strings		2579016	0					
ANR	2580016	Identifier	upd		2579016	0					
ANR	2580017	Identifier	strings		2579016	1					
ANR	2580018	Identifier	S_XSTEP		2579016	1					
ANR	2580019	Identifier	data		2579016	1					
ANR	2580020	Argument	upd -> strings [ S_XSTEP ] . size		2579016	2					
ANR	2580021	MemberAccess	upd -> strings [ S_XSTEP ] . size		2579016	0					
ANR	2580022	ArrayIndexing	upd -> strings [ S_XSTEP ]		2579016	0					
ANR	2580023	PtrMemberAccess	upd -> strings		2579016	0					
ANR	2580024	Identifier	upd		2579016	0					
ANR	2580025	Identifier	strings		2579016	1					
ANR	2580026	Identifier	S_XSTEP		2579016	1					
ANR	2580027	Identifier	size		2579016	1					
ANR	2580028	ExpressionStatement	ioutbuf += upd -> strings [ S_XSTEP ] . size	5766:18:206355:206392	2579016	1	True				
ANR	2580029	AssignmentExpression	ioutbuf += upd -> strings [ S_XSTEP ] . size		2579016	0		+=			
ANR	2580030	Identifier	ioutbuf		2579016	0					
ANR	2580031	MemberAccess	upd -> strings [ S_XSTEP ] . size		2579016	1					
ANR	2580032	ArrayIndexing	upd -> strings [ S_XSTEP ]		2579016	0					
ANR	2580033	PtrMemberAccess	upd -> strings		2579016	0					
ANR	2580034	Identifier	upd		2579016	0					
ANR	2580035	Identifier	strings		2579016	1					
ANR	2580036	Identifier	S_XSTEP		2579016	1					
ANR	2580037	Identifier	size		2579016	1					
ANR	2580038	ExpressionStatement	upd -> xprinter = xend + 1	5770:9:206505:206527	2579016	4	True				
ANR	2580039	AssignmentExpression	upd -> xprinter = xend + 1		2579016	0		=			
ANR	2580040	PtrMemberAccess	upd -> xprinter		2579016	0					
ANR	2580041	Identifier	upd		2579016	0					
ANR	2580042	Identifier	xprinter		2579016	1					
ANR	2580043	AdditiveExpression	xend + 1		2579016	1		+			
ANR	2580044	Identifier	xend		2579016	0					
ANR	2580045	PrimaryExpression	1		2579016	1					
ANR	2580046	IfStatement	if ( 0 < upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size )		2579016	5					
ANR	2580047	Condition	0 < upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size	5775:12:206581:206628	2579016	0	True				
ANR	2580048	RelationalExpression	0 < upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2579016	0		<			
ANR	2580049	PrimaryExpression	0		2579016	0					
ANR	2580050	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2579016	1					
ANR	2580051	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		2579016	0					
ANR	2580052	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		2579016	0					
ANR	2580053	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2579016	0					
ANR	2580054	PtrMemberAccess	upd -> string_a		2579016	0					
ANR	2580055	Identifier	upd		2579016	0					
ANR	2580056	Identifier	string_a		2579016	1					
ANR	2580057	Identifier	SA_WRITECOMP		2579016	1					
ANR	2580058	Identifier	data		2579016	1					
ANR	2580059	Identifier	icomp		2579016	1					
ANR	2580060	Identifier	size		2579016	1					
ANR	2580061	CompoundStatement		177:62:6049:6049	2579016	1					
ANR	2580062	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size )"	5776:12:206645:206810	2579016	0	True				
ANR	2580063	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size )"		2579016	0					
ANR	2580064	Callee	memcpy		2579016	0					
ANR	2580065	Identifier	memcpy		2579016	0					
ANR	2580066	ArgumentList	upd -> outbuf + ioutbuf		2579016	1					
ANR	2580067	Argument	upd -> outbuf + ioutbuf		2579016	0					
ANR	2580068	AdditiveExpression	upd -> outbuf + ioutbuf		2579016	0		+			
ANR	2580069	PtrMemberAccess	upd -> outbuf		2579016	0					
ANR	2580070	Identifier	upd		2579016	0					
ANR	2580071	Identifier	outbuf		2579016	1					
ANR	2580072	Identifier	ioutbuf		2579016	1					
ANR	2580073	Argument	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		2579016	1					
ANR	2580074	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		2579016	0					
ANR	2580075	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		2579016	0					
ANR	2580076	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		2579016	0					
ANR	2580077	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2579016	0					
ANR	2580078	PtrMemberAccess	upd -> string_a		2579016	0					
ANR	2580079	Identifier	upd		2579016	0					
ANR	2580080	Identifier	string_a		2579016	1					
ANR	2580081	Identifier	SA_WRITECOMP		2579016	1					
ANR	2580082	Identifier	data		2579016	1					
ANR	2580083	Identifier	icomp		2579016	1					
ANR	2580084	Identifier	data		2579016	1					
ANR	2580085	Argument	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2579016	2					
ANR	2580086	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2579016	0					
ANR	2580087	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		2579016	0					
ANR	2580088	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		2579016	0					
ANR	2580089	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2579016	0					
ANR	2580090	PtrMemberAccess	upd -> string_a		2579016	0					
ANR	2580091	Identifier	upd		2579016	0					
ANR	2580092	Identifier	string_a		2579016	1					
ANR	2580093	Identifier	SA_WRITECOMP		2579016	1					
ANR	2580094	Identifier	data		2579016	1					
ANR	2580095	Identifier	icomp		2579016	1					
ANR	2580096	Identifier	size		2579016	1					
ANR	2580097	ExpressionStatement	ioutbuf += upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size	5779:12:206824:206879	2579016	1	True				
ANR	2580098	AssignmentExpression	ioutbuf += upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2579016	0		+=			
ANR	2580099	Identifier	ioutbuf		2579016	0					
ANR	2580100	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2579016	1					
ANR	2580101	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		2579016	0					
ANR	2580102	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		2579016	0					
ANR	2580103	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2579016	0					
ANR	2580104	PtrMemberAccess	upd -> string_a		2579016	0					
ANR	2580105	Identifier	upd		2579016	0					
ANR	2580106	Identifier	string_a		2579016	1					
ANR	2580107	Identifier	SA_WRITECOMP		2579016	1					
ANR	2580108	Identifier	data		2579016	1					
ANR	2580109	Identifier	icomp		2579016	1					
ANR	2580110	Identifier	size		2579016	1					
ANR	2580111	ExpressionStatement	n = xend + 1 - xbegin	5781:9:206901:206922	2579016	6	True				
ANR	2580112	AssignmentExpression	n = xend + 1 - xbegin		2579016	0		=			
ANR	2580113	Identifier	n		2579016	0					
ANR	2580114	AdditiveExpression	xend + 1 - xbegin		2579016	1		+			
ANR	2580115	Identifier	xend		2579016	0					
ANR	2580116	AdditiveExpression	1 - xbegin		2579016	1		-			
ANR	2580117	PrimaryExpression	1		2579016	0					
ANR	2580118	Identifier	xbegin		2579016	1					
ANR	2580119	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n << 3 ) & 255	5782:9:206933:206970	2579016	7	True				
ANR	2580120	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n << 3 ) & 255		2579016	0		=			
ANR	2580121	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2579016	0					
ANR	2580122	PtrMemberAccess	upd -> outbuf		2579016	0					
ANR	2580123	Identifier	upd		2579016	0					
ANR	2580124	Identifier	outbuf		2579016	1					
ANR	2580125	PostIncDecOperationExpression	ioutbuf ++		2579016	1					
ANR	2580126	Identifier	ioutbuf		2579016	0					
ANR	2580127	IncDec	++		2579016	1					
ANR	2580128	BitAndExpression	( n << 3 ) & 255		2579016	1		&			
ANR	2580129	ShiftExpression	n << 3		2579016	0		<<			
ANR	2580130	Identifier	n		2579016	0					
ANR	2580131	PrimaryExpression	3		2579016	1					
ANR	2580132	PrimaryExpression	255		2579016	1					
ANR	2580133	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n >> 5 ) & 255	5783:9:206981:207018	2579016	8	True				
ANR	2580134	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n >> 5 ) & 255		2579016	0		=			
ANR	2580135	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2579016	0					
ANR	2580136	PtrMemberAccess	upd -> outbuf		2579016	0					
ANR	2580137	Identifier	upd		2579016	0					
ANR	2580138	Identifier	outbuf		2579016	1					
ANR	2580139	PostIncDecOperationExpression	ioutbuf ++		2579016	1					
ANR	2580140	Identifier	ioutbuf		2579016	0					
ANR	2580141	IncDec	++		2579016	1					
ANR	2580142	BitAndExpression	( n >> 5 ) & 255		2579016	1		&			
ANR	2580143	ShiftExpression	n >> 5		2579016	0		>>			
ANR	2580144	Identifier	n		2579016	0					
ANR	2580145	PrimaryExpression	5		2579016	1					
ANR	2580146	PrimaryExpression	255		2579016	1					
ANR	2580147	ForStatement	for ( pin = 0 ; pin < pintop ; ++ pin )		2579016	9					
ANR	2580148	ForInit	pin = 0 ;	5787:13:207064:207071	2579016	0	True				
ANR	2580149	AssignmentExpression	pin = 0		2579016	0		=			
ANR	2580150	Identifier	pin		2579016	0					
ANR	2580151	PrimaryExpression	0		2579016	1					
ANR	2580152	Condition	pin < pintop	5787:22:207073:207084	2579016	1	True				
ANR	2580153	RelationalExpression	pin < pintop		2579016	0		<			
ANR	2580154	Identifier	pin		2579016	0					
ANR	2580155	Identifier	pintop		2579016	1					
ANR	2580156	UnaryExpression	++ pin	5787:36:207087:207091	2579016	2	True				
ANR	2580157	IncDec	++		2579016	0					
ANR	2580158	Identifier	pin		2579016	1					
ANR	2580159	CompoundStatement		189:43:6512:6512	2579016	3					
ANR	2580160	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"	5788:12:207108:207154	2579016	0	True				
ANR	2580161	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		2579016	0		+=			
ANR	2580162	Identifier	ioutbuf		2579016	0					
ANR	2580163	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		2579016	1					
ANR	2580164	Callee	upd_rle		2579016	0					
ANR	2580165	Identifier	upd_rle		2579016	0					
ANR	2580166	ArgumentList	upd -> outbuf + ioutbuf		2579016	1					
ANR	2580167	Argument	upd -> outbuf + ioutbuf		2579016	0					
ANR	2580168	AdditiveExpression	upd -> outbuf + ioutbuf		2579016	0		+			
ANR	2580169	PtrMemberAccess	upd -> outbuf		2579016	0					
ANR	2580170	Identifier	upd		2579016	0					
ANR	2580171	Identifier	outbuf		2579016	1					
ANR	2580172	Identifier	ioutbuf		2579016	1					
ANR	2580173	Argument	NULL		2579016	1					
ANR	2580174	Identifier	NULL		2579016	0					
ANR	2580175	Argument	n		2579016	2					
ANR	2580176	Identifier	n		2579016	0					
ANR	2580177	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	5789:12:207168:207201	2579016	1	True				
ANR	2580178	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		2579016	0					
ANR	2580179	Callee	fwrite		2579016	0					
ANR	2580180	Identifier	fwrite		2579016	0					
ANR	2580181	ArgumentList	upd -> outbuf		2579016	1					
ANR	2580182	Argument	upd -> outbuf		2579016	0					
ANR	2580183	PtrMemberAccess	upd -> outbuf		2579016	0					
ANR	2580184	Identifier	upd		2579016	0					
ANR	2580185	Identifier	outbuf		2579016	1					
ANR	2580186	Argument	1		2579016	1					
ANR	2580187	PrimaryExpression	1		2579016	0					
ANR	2580188	Argument	ioutbuf		2579016	2					
ANR	2580189	Identifier	ioutbuf		2579016	0					
ANR	2580190	Argument	out		2579016	3					
ANR	2580191	Identifier	out		2579016	0					
ANR	2580192	ExpressionStatement	ioutbuf = 0	5790:12:207215:207226	2579016	2	True				
ANR	2580193	AssignmentExpression	ioutbuf = 0		2579016	0		=			
ANR	2580194	Identifier	ioutbuf		2579016	0					
ANR	2580195	PrimaryExpression	0		2579016	1					
ANR	2580196	ForStatement	for ( y = ybegin ; 0 > y ; y += upd -> ints [ I_NYPASS ] )		2579016	10					
ANR	2580197	ForInit	y = ybegin ;	5793:13:207253:207263	2579016	0	True				
ANR	2580198	AssignmentExpression	y = ybegin		2579016	0		=			
ANR	2580199	Identifier	y		2579016	0					
ANR	2580200	Identifier	ybegin		2579016	1					
ANR	2580201	Condition	0 > y	5793:25:207265:207269	2579016	1	True				
ANR	2580202	RelationalExpression	0 > y		2579016	0		>			
ANR	2580203	PrimaryExpression	0		2579016	0					
ANR	2580204	Identifier	y		2579016	1					
ANR	2580205	AssignmentExpression	y += upd -> ints [ I_NYPASS ]	5793:35:207275:207298	2579016	2	True	+=			
ANR	2580206	Identifier	y		2579016	0					
ANR	2580207	ArrayIndexing	upd -> ints [ I_NYPASS ]		2579016	1					
ANR	2580208	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2580209	Identifier	upd		2579016	0					
ANR	2580210	Identifier	ints		2579016	1					
ANR	2580211	Identifier	I_NYPASS		2579016	1					
ANR	2580212	CompoundStatement		195:61:6719:6719	2579016	3					
ANR	2580213	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"	5794:12:207315:207361	2579016	0	True				
ANR	2580214	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		2579016	0		+=			
ANR	2580215	Identifier	ioutbuf		2579016	0					
ANR	2580216	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		2579016	1					
ANR	2580217	Callee	upd_rle		2579016	0					
ANR	2580218	Identifier	upd_rle		2579016	0					
ANR	2580219	ArgumentList	upd -> outbuf + ioutbuf		2579016	1					
ANR	2580220	Argument	upd -> outbuf + ioutbuf		2579016	0					
ANR	2580221	AdditiveExpression	upd -> outbuf + ioutbuf		2579016	0		+			
ANR	2580222	PtrMemberAccess	upd -> outbuf		2579016	0					
ANR	2580223	Identifier	upd		2579016	0					
ANR	2580224	Identifier	outbuf		2579016	1					
ANR	2580225	Identifier	ioutbuf		2579016	1					
ANR	2580226	Argument	NULL		2579016	1					
ANR	2580227	Identifier	NULL		2579016	0					
ANR	2580228	Argument	n		2579016	2					
ANR	2580229	Identifier	n		2579016	0					
ANR	2580230	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	5795:12:207375:207408	2579016	1	True				
ANR	2580231	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		2579016	0					
ANR	2580232	Callee	fwrite		2579016	0					
ANR	2580233	Identifier	fwrite		2579016	0					
ANR	2580234	ArgumentList	upd -> outbuf		2579016	1					
ANR	2580235	Argument	upd -> outbuf		2579016	0					
ANR	2580236	PtrMemberAccess	upd -> outbuf		2579016	0					
ANR	2580237	Identifier	upd		2579016	0					
ANR	2580238	Identifier	outbuf		2579016	1					
ANR	2580239	Argument	1		2579016	1					
ANR	2580240	PrimaryExpression	1		2579016	0					
ANR	2580241	Argument	ioutbuf		2579016	2					
ANR	2580242	Identifier	ioutbuf		2579016	0					
ANR	2580243	Argument	out		2579016	3					
ANR	2580244	Identifier	out		2579016	0					
ANR	2580245	ExpressionStatement	ioutbuf = 0	5796:12:207422:207433	2579016	2	True				
ANR	2580246	AssignmentExpression	ioutbuf = 0		2579016	0		=			
ANR	2580247	Identifier	ioutbuf		2579016	0					
ANR	2580248	PrimaryExpression	0		2579016	1					
ANR	2580249	ForStatement	for ( ; y < yend ; y += upd -> ints [ I_NYPASS ] )		2579016	11					
ANR	2580250	Condition	y < yend	5799:15:207462:207469	2579016	0	True				
ANR	2580251	RelationalExpression	y < yend		2579016	0		<			
ANR	2580252	Identifier	y		2579016	0					
ANR	2580253	Identifier	yend		2579016	1					
ANR	2580254	AssignmentExpression	y += upd -> ints [ I_NYPASS ]	5799:25:207472:207495	2579016	1	True	+=			
ANR	2580255	Identifier	y		2579016	0					
ANR	2580256	ArrayIndexing	upd -> ints [ I_NYPASS ]		2579016	1					
ANR	2580257	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2580258	Identifier	upd		2579016	0					
ANR	2580259	Identifier	ints		2579016	1					
ANR	2580260	Identifier	I_NYPASS		2579016	1					
ANR	2580261	CompoundStatement		201:51:6916:6916	2579016	2					
ANR	2580262	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes + xbegin , n )"	5800:12:207512:207618	2579016	0	True				
ANR	2580263	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes + xbegin , n )"		2579016	0		+=			
ANR	2580264	Identifier	ioutbuf		2579016	0					
ANR	2580265	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes + xbegin , n )"		2579016	1					
ANR	2580266	Callee	upd_rle		2579016	0					
ANR	2580267	Identifier	upd_rle		2579016	0					
ANR	2580268	ArgumentList	upd -> outbuf + ioutbuf		2579016	1					
ANR	2580269	Argument	upd -> outbuf + ioutbuf		2579016	0					
ANR	2580270	AdditiveExpression	upd -> outbuf + ioutbuf		2579016	0		+			
ANR	2580271	PtrMemberAccess	upd -> outbuf		2579016	0					
ANR	2580272	Identifier	upd		2579016	0					
ANR	2580273	Identifier	outbuf		2579016	1					
ANR	2580274	Identifier	ioutbuf		2579016	1					
ANR	2580275	Argument	upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes + xbegin		2579016	1					
ANR	2580276	AdditiveExpression	upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes + xbegin		2579016	0		+			
ANR	2580277	MemberAccess	upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes		2579016	0					
ANR	2580278	ArrayIndexing	upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ]		2579016	0					
ANR	2580279	ArrayIndexing	upd -> scnbuf [ y & upd -> scnmsk ]		2579016	0					
ANR	2580280	PtrMemberAccess	upd -> scnbuf		2579016	0					
ANR	2580281	Identifier	upd		2579016	0					
ANR	2580282	Identifier	scnbuf		2579016	1					
ANR	2580283	BitAndExpression	y & upd -> scnmsk		2579016	1		&			
ANR	2580284	Identifier	y		2579016	0					
ANR	2580285	PtrMemberAccess	upd -> scnmsk		2579016	1					
ANR	2580286	Identifier	upd		2579016	0					
ANR	2580287	Identifier	scnmsk		2579016	1					
ANR	2580288	Identifier	icomp		2579016	1					
ANR	2580289	Identifier	bytes		2579016	1					
ANR	2580290	Identifier	xbegin		2579016	1					
ANR	2580291	Argument	n		2579016	2					
ANR	2580292	Identifier	n		2579016	0					
ANR	2580293	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	5802:12:207632:207665	2579016	1	True				
ANR	2580294	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		2579016	0					
ANR	2580295	Callee	fwrite		2579016	0					
ANR	2580296	Identifier	fwrite		2579016	0					
ANR	2580297	ArgumentList	upd -> outbuf		2579016	1					
ANR	2580298	Argument	upd -> outbuf		2579016	0					
ANR	2580299	PtrMemberAccess	upd -> outbuf		2579016	0					
ANR	2580300	Identifier	upd		2579016	0					
ANR	2580301	Identifier	outbuf		2579016	1					
ANR	2580302	Argument	1		2579016	1					
ANR	2580303	PrimaryExpression	1		2579016	0					
ANR	2580304	Argument	ioutbuf		2579016	2					
ANR	2580305	Identifier	ioutbuf		2579016	0					
ANR	2580306	Argument	out		2579016	3					
ANR	2580307	Identifier	out		2579016	0					
ANR	2580308	ExpressionStatement	ioutbuf = 0	5803:12:207679:207690	2579016	2	True				
ANR	2580309	AssignmentExpression	ioutbuf = 0		2579016	0		=			
ANR	2580310	Identifier	ioutbuf		2579016	0					
ANR	2580311	PrimaryExpression	0		2579016	1					
ANR	2580312	ForStatement	for ( pin = pinbot ; pin < upd -> ints [ I_PINS2WRITE ] ; ++ pin )		2579016	12					
ANR	2580313	ForInit	pin = pinbot ;	5806:13:207717:207729	2579016	0	True				
ANR	2580314	AssignmentExpression	pin = pinbot		2579016	0		=			
ANR	2580315	Identifier	pin		2579016	0					
ANR	2580316	Identifier	pinbot		2579016	1					
ANR	2580317	Condition	pin < upd -> ints [ I_PINS2WRITE ]	5806:27:207731:207759	2579016	1	True				
ANR	2580318	RelationalExpression	pin < upd -> ints [ I_PINS2WRITE ]		2579016	0		<			
ANR	2580319	Identifier	pin		2579016	0					
ANR	2580320	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		2579016	1					
ANR	2580321	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2580322	Identifier	upd		2579016	0					
ANR	2580323	Identifier	ints		2579016	1					
ANR	2580324	Identifier	I_PINS2WRITE		2579016	1					
ANR	2580325	UnaryExpression	++ pin	5806:58:207762:207766	2579016	2	True				
ANR	2580326	IncDec	++		2579016	0					
ANR	2580327	Identifier	pin		2579016	1					
ANR	2580328	CompoundStatement		208:65:7187:7187	2579016	3					
ANR	2580329	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"	5807:12:207783:207829	2579016	0	True				
ANR	2580330	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		2579016	0		+=			
ANR	2580331	Identifier	ioutbuf		2579016	0					
ANR	2580332	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		2579016	1					
ANR	2580333	Callee	upd_rle		2579016	0					
ANR	2580334	Identifier	upd_rle		2579016	0					
ANR	2580335	ArgumentList	upd -> outbuf + ioutbuf		2579016	1					
ANR	2580336	Argument	upd -> outbuf + ioutbuf		2579016	0					
ANR	2580337	AdditiveExpression	upd -> outbuf + ioutbuf		2579016	0		+			
ANR	2580338	PtrMemberAccess	upd -> outbuf		2579016	0					
ANR	2580339	Identifier	upd		2579016	0					
ANR	2580340	Identifier	outbuf		2579016	1					
ANR	2580341	Identifier	ioutbuf		2579016	1					
ANR	2580342	Argument	NULL		2579016	1					
ANR	2580343	Identifier	NULL		2579016	0					
ANR	2580344	Argument	n		2579016	2					
ANR	2580345	Identifier	n		2579016	0					
ANR	2580346	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	5808:12:207843:207876	2579016	1	True				
ANR	2580347	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		2579016	0					
ANR	2580348	Callee	fwrite		2579016	0					
ANR	2580349	Identifier	fwrite		2579016	0					
ANR	2580350	ArgumentList	upd -> outbuf		2579016	1					
ANR	2580351	Argument	upd -> outbuf		2579016	0					
ANR	2580352	PtrMemberAccess	upd -> outbuf		2579016	0					
ANR	2580353	Identifier	upd		2579016	0					
ANR	2580354	Identifier	outbuf		2579016	1					
ANR	2580355	Argument	1		2579016	1					
ANR	2580356	PrimaryExpression	1		2579016	0					
ANR	2580357	Argument	ioutbuf		2579016	2					
ANR	2580358	Identifier	ioutbuf		2579016	0					
ANR	2580359	Argument	out		2579016	3					
ANR	2580360	Identifier	out		2579016	0					
ANR	2580361	ExpressionStatement	ioutbuf = 0	5809:12:207890:207901	2579016	2	True				
ANR	2580362	AssignmentExpression	ioutbuf = 0		2579016	0		=			
ANR	2580363	Identifier	ioutbuf		2579016	0					
ANR	2580364	PrimaryExpression	0		2579016	1					
ANR	2580365	IfStatement	if ( upd -> yscan < upd -> ints [ I_BEG_Y ] )		2579016	10					
ANR	2580366	Condition	upd -> yscan < upd -> ints [ I_BEG_Y ]	5815:6:208088:208118	2579016	0	True				
ANR	2580367	RelationalExpression	upd -> yscan < upd -> ints [ I_BEG_Y ]		2579016	0		<			
ANR	2580368	PtrMemberAccess	upd -> yscan		2579016	0					
ANR	2580369	Identifier	upd		2579016	0					
ANR	2580370	Identifier	yscan		2579016	1					
ANR	2580371	ArrayIndexing	upd -> ints [ I_BEG_Y ]		2579016	1					
ANR	2580372	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2580373	Identifier	upd		2579016	0					
ANR	2580374	Identifier	ints		2579016	1					
ANR	2580375	Identifier	I_BEG_Y		2579016	1					
ANR	2580376	CompoundStatement		217:39:7539:7539	2579016	1					
ANR	2580377	ExpressionStatement	upd -> yscan += upd -> int_a [ IA_BEG_DY ] . data [ upd -> ipass ++ ]	5816:6:208129:208183	2579016	0	True				
ANR	2580378	AssignmentExpression	upd -> yscan += upd -> int_a [ IA_BEG_DY ] . data [ upd -> ipass ++ ]		2579016	0		+=			
ANR	2580379	PtrMemberAccess	upd -> yscan		2579016	0					
ANR	2580380	Identifier	upd		2579016	0					
ANR	2580381	Identifier	yscan		2579016	1					
ANR	2580382	ArrayIndexing	upd -> int_a [ IA_BEG_DY ] . data [ upd -> ipass ++ ]		2579016	1					
ANR	2580383	MemberAccess	upd -> int_a [ IA_BEG_DY ] . data		2579016	0					
ANR	2580384	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		2579016	0					
ANR	2580385	PtrMemberAccess	upd -> int_a		2579016	0					
ANR	2580386	Identifier	upd		2579016	0					
ANR	2580387	Identifier	int_a		2579016	1					
ANR	2580388	Identifier	IA_BEG_DY		2579016	1					
ANR	2580389	Identifier	data		2579016	1					
ANR	2580390	PostIncDecOperationExpression	upd -> ipass ++		2579016	1					
ANR	2580391	PtrMemberAccess	upd -> ipass		2579016	0					
ANR	2580392	Identifier	upd		2579016	0					
ANR	2580393	Identifier	ipass		2579016	1					
ANR	2580394	IncDec	++		2579016	1					
ANR	2580395	IfStatement	if ( upd -> ints [ I_BEG_Y ] <= upd -> yscan )		2579016	1					
ANR	2580396	Condition	upd -> ints [ I_BEG_Y ] <= upd -> yscan	5817:14:208199:208230	2579016	0	True				
ANR	2580397	RelationalExpression	upd -> ints [ I_BEG_Y ] <= upd -> yscan		2579016	0		<=			
ANR	2580398	ArrayIndexing	upd -> ints [ I_BEG_Y ]		2579016	0					
ANR	2580399	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2580400	Identifier	upd		2579016	0					
ANR	2580401	Identifier	ints		2579016	1					
ANR	2580402	Identifier	I_BEG_Y		2579016	1					
ANR	2580403	PtrMemberAccess	upd -> yscan		2579016	1					
ANR	2580404	Identifier	upd		2579016	0					
ANR	2580405	Identifier	yscan		2579016	1					
ANR	2580406	ExpressionStatement	upd -> ipass = 0	5817:48:208233:208247	2579016	1	True				
ANR	2580407	AssignmentExpression	upd -> ipass = 0		2579016	0		=			
ANR	2580408	PtrMemberAccess	upd -> ipass		2579016	0					
ANR	2580409	Identifier	upd		2579016	0					
ANR	2580410	Identifier	ipass		2579016	1					
ANR	2580411	PrimaryExpression	0		2579016	1					
ANR	2580412	ElseStatement	else		2579016	0					
ANR	2580413	IfStatement	if ( upd -> int_a [ IA_BEG_DY ] . size <= upd -> ipass )		2579016	0					
ANR	2580414	Condition	upd -> int_a [ IA_BEG_DY ] . size <= upd -> ipass	5818:14:208263:208302	2579016	0	True				
ANR	2580415	RelationalExpression	upd -> int_a [ IA_BEG_DY ] . size <= upd -> ipass		2579016	0		<=			
ANR	2580416	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		2579016	0					
ANR	2580417	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		2579016	0					
ANR	2580418	PtrMemberAccess	upd -> int_a		2579016	0					
ANR	2580419	Identifier	upd		2579016	0					
ANR	2580420	Identifier	int_a		2579016	1					
ANR	2580421	Identifier	IA_BEG_DY		2579016	1					
ANR	2580422	Identifier	size		2579016	1					
ANR	2580423	PtrMemberAccess	upd -> ipass		2579016	1					
ANR	2580424	Identifier	upd		2579016	0					
ANR	2580425	Identifier	ipass		2579016	1					
ANR	2580426	ExpressionStatement	upd -> ipass = 0	5818:56:208305:208319	2579016	1	True				
ANR	2580427	AssignmentExpression	upd -> ipass = 0		2579016	0		=			
ANR	2580428	PtrMemberAccess	upd -> ipass		2579016	0					
ANR	2580429	Identifier	upd		2579016	0					
ANR	2580430	Identifier	ipass		2579016	1					
ANR	2580431	PrimaryExpression	0		2579016	1					
ANR	2580432	ElseStatement	else		2579016	0					
ANR	2580433	IfStatement	if ( upd -> yscan >= upd -> ints [ I_END_Y ] )		2579016	0					
ANR	2580434	Condition	upd -> yscan >= upd -> ints [ I_END_Y ]	5819:13:208334:208365	2579016	0	True				
ANR	2580435	RelationalExpression	upd -> yscan >= upd -> ints [ I_END_Y ]		2579016	0		>=			
ANR	2580436	PtrMemberAccess	upd -> yscan		2579016	0					
ANR	2580437	Identifier	upd		2579016	0					
ANR	2580438	Identifier	yscan		2579016	1					
ANR	2580439	ArrayIndexing	upd -> ints [ I_END_Y ]		2579016	1					
ANR	2580440	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2580441	Identifier	upd		2579016	0					
ANR	2580442	Identifier	ints		2579016	1					
ANR	2580443	Identifier	I_END_Y		2579016	1					
ANR	2580444	CompoundStatement		221:47:7786:7786	2579016	1					
ANR	2580445	ExpressionStatement	upd -> yscan += upd -> int_a [ IA_END_DY ] . data [ upd -> ipass ++ ]	5820:6:208376:208430	2579016	0	True				
ANR	2580446	AssignmentExpression	upd -> yscan += upd -> int_a [ IA_END_DY ] . data [ upd -> ipass ++ ]		2579016	0		+=			
ANR	2580447	PtrMemberAccess	upd -> yscan		2579016	0					
ANR	2580448	Identifier	upd		2579016	0					
ANR	2580449	Identifier	yscan		2579016	1					
ANR	2580450	ArrayIndexing	upd -> int_a [ IA_END_DY ] . data [ upd -> ipass ++ ]		2579016	1					
ANR	2580451	MemberAccess	upd -> int_a [ IA_END_DY ] . data		2579016	0					
ANR	2580452	ArrayIndexing	upd -> int_a [ IA_END_DY ]		2579016	0					
ANR	2580453	PtrMemberAccess	upd -> int_a		2579016	0					
ANR	2580454	Identifier	upd		2579016	0					
ANR	2580455	Identifier	int_a		2579016	1					
ANR	2580456	Identifier	IA_END_DY		2579016	1					
ANR	2580457	Identifier	data		2579016	1					
ANR	2580458	PostIncDecOperationExpression	upd -> ipass ++		2579016	1					
ANR	2580459	PtrMemberAccess	upd -> ipass		2579016	0					
ANR	2580460	Identifier	upd		2579016	0					
ANR	2580461	Identifier	ipass		2579016	1					
ANR	2580462	IncDec	++		2579016	1					
ANR	2580463	IfStatement	if ( upd -> int_a [ IA_END_DY ] . size <= upd -> ipass )		2579016	1					
ANR	2580464	Condition	upd -> int_a [ IA_END_DY ] . size <= upd -> ipass	5821:9:208441:208480	2579016	0	True				
ANR	2580465	RelationalExpression	upd -> int_a [ IA_END_DY ] . size <= upd -> ipass		2579016	0		<=			
ANR	2580466	MemberAccess	upd -> int_a [ IA_END_DY ] . size		2579016	0					
ANR	2580467	ArrayIndexing	upd -> int_a [ IA_END_DY ]		2579016	0					
ANR	2580468	PtrMemberAccess	upd -> int_a		2579016	0					
ANR	2580469	Identifier	upd		2579016	0					
ANR	2580470	Identifier	int_a		2579016	1					
ANR	2580471	Identifier	IA_END_DY		2579016	1					
ANR	2580472	Identifier	size		2579016	1					
ANR	2580473	PtrMemberAccess	upd -> ipass		2579016	1					
ANR	2580474	Identifier	upd		2579016	0					
ANR	2580475	Identifier	ipass		2579016	1					
ANR	2580476	ExpressionStatement	upd -> ipass = 0	5821:51:208483:208497	2579016	1	True				
ANR	2580477	AssignmentExpression	upd -> ipass = 0		2579016	0		=			
ANR	2580478	PtrMemberAccess	upd -> ipass		2579016	0					
ANR	2580479	Identifier	upd		2579016	0					
ANR	2580480	Identifier	ipass		2579016	1					
ANR	2580481	PrimaryExpression	0		2579016	1					
ANR	2580482	ElseStatement	else		2579016	0					
ANR	2580483	CompoundStatement		224:10:7927:7927	2579016	0					
ANR	2580484	ExpressionStatement	upd -> yscan += upd -> int_a [ IA_STD_DY ] . data [ upd -> ipass ++ ]	5823:6:208517:208571	2579016	0	True				
ANR	2580485	AssignmentExpression	upd -> yscan += upd -> int_a [ IA_STD_DY ] . data [ upd -> ipass ++ ]		2579016	0		+=			
ANR	2580486	PtrMemberAccess	upd -> yscan		2579016	0					
ANR	2580487	Identifier	upd		2579016	0					
ANR	2580488	Identifier	yscan		2579016	1					
ANR	2580489	ArrayIndexing	upd -> int_a [ IA_STD_DY ] . data [ upd -> ipass ++ ]		2579016	1					
ANR	2580490	MemberAccess	upd -> int_a [ IA_STD_DY ] . data		2579016	0					
ANR	2580491	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		2579016	0					
ANR	2580492	PtrMemberAccess	upd -> int_a		2579016	0					
ANR	2580493	Identifier	upd		2579016	0					
ANR	2580494	Identifier	int_a		2579016	1					
ANR	2580495	Identifier	IA_STD_DY		2579016	1					
ANR	2580496	Identifier	data		2579016	1					
ANR	2580497	PostIncDecOperationExpression	upd -> ipass ++		2579016	1					
ANR	2580498	PtrMemberAccess	upd -> ipass		2579016	0					
ANR	2580499	Identifier	upd		2579016	0					
ANR	2580500	Identifier	ipass		2579016	1					
ANR	2580501	IncDec	++		2579016	1					
ANR	2580502	IfStatement	if ( upd -> int_a [ IA_STD_DY ] . size <= upd -> ipass )		2579016	1					
ANR	2580503	Condition	upd -> int_a [ IA_STD_DY ] . size <= upd -> ipass	5824:9:208582:208621	2579016	0	True				
ANR	2580504	RelationalExpression	upd -> int_a [ IA_STD_DY ] . size <= upd -> ipass		2579016	0		<=			
ANR	2580505	MemberAccess	upd -> int_a [ IA_STD_DY ] . size		2579016	0					
ANR	2580506	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		2579016	0					
ANR	2580507	PtrMemberAccess	upd -> int_a		2579016	0					
ANR	2580508	Identifier	upd		2579016	0					
ANR	2580509	Identifier	int_a		2579016	1					
ANR	2580510	Identifier	IA_STD_DY		2579016	1					
ANR	2580511	Identifier	size		2579016	1					
ANR	2580512	PtrMemberAccess	upd -> ipass		2579016	1					
ANR	2580513	Identifier	upd		2579016	0					
ANR	2580514	Identifier	ipass		2579016	1					
ANR	2580515	ExpressionStatement	upd -> ipass = 0	5824:51:208624:208638	2579016	1	True				
ANR	2580516	AssignmentExpression	upd -> ipass = 0		2579016	0		=			
ANR	2580517	PtrMemberAccess	upd -> ipass		2579016	0					
ANR	2580518	Identifier	upd		2579016	0					
ANR	2580519	Identifier	ipass		2579016	1					
ANR	2580520	PrimaryExpression	0		2579016	1					
ANR	2580521	IfStatement	if ( upd -> yscan >= upd -> ints [ I_END_Y ] )		2579016	2					
ANR	2580522	Condition	upd -> yscan >= upd -> ints [ I_END_Y ]	5825:9:208649:208680	2579016	0	True				
ANR	2580523	RelationalExpression	upd -> yscan >= upd -> ints [ I_END_Y ]		2579016	0		>=			
ANR	2580524	PtrMemberAccess	upd -> yscan		2579016	0					
ANR	2580525	Identifier	upd		2579016	0					
ANR	2580526	Identifier	yscan		2579016	1					
ANR	2580527	ArrayIndexing	upd -> ints [ I_END_Y ]		2579016	1					
ANR	2580528	PtrMemberAccess	upd -> ints		2579016	0					
ANR	2580529	Identifier	upd		2579016	0					
ANR	2580530	Identifier	ints		2579016	1					
ANR	2580531	Identifier	I_END_Y		2579016	1					
ANR	2580532	ExpressionStatement	upd -> ipass = 0	5825:51:208691:208705	2579016	1	True				
ANR	2580533	AssignmentExpression	upd -> ipass = 0		2579016	0		=			
ANR	2580534	PtrMemberAccess	upd -> ipass		2579016	0					
ANR	2580535	Identifier	upd		2579016	0					
ANR	2580536	Identifier	ipass		2579016	1					
ANR	2580537	PrimaryExpression	0		2579016	1					
ANR	2580538	ReturnStatement	return 0 ;	5828:3:208716:208724	2579016	11	True				
ANR	2580539	PrimaryExpression	0		2579016	0					
ANR	2580540	ReturnType	static int		2579016	1					
ANR	2580541	Identifier	upd_wrtescp2		2579016	2					
ANR	2580542	ParameterList	"upd_p upd , FILE * out"		2579016	3					
ANR	2580543	Parameter	upd_p upd	5598:13:200559:200567	2579016	0	True				
ANR	2580544	ParameterType	upd_p		2579016	0					
ANR	2580545	Identifier	upd		2579016	1					
ANR	2580546	Parameter	FILE * out	5598:24:200570:200578	2579016	1	True				
ANR	2580547	ParameterType	FILE *		2579016	0					
ANR	2580548	Identifier	out		2579016	1					
ANR	2580549	CFGEntryNode	ENTRY		2579016		True				
ANR	2580550	CFGExitNode	EXIT		2579016		True				
ANR	2580551	Symbol	I_PINS2WRITE		2579016						
ANR	2580552	Symbol	* upd -> int_a		2579016						
ANR	2580553	Symbol	* x		2579016						
ANR	2580554	Symbol	* y		2579016						
ANR	2580555	Symbol	* * IA_STD_DY		2579016						
ANR	2580556	Symbol	* I_YSTEP		2579016						
ANR	2580557	Symbol	pinbot		2579016						
ANR	2580558	Symbol	upd -> int_a [ IA_STD_DY ] . data		2579016						
ANR	2580559	Symbol	icomp		2579016						
ANR	2580560	Symbol	upd -> yscan		2579016						
ANR	2580561	Symbol	* upd -> string_a [ SA_WRITECOMP ] . data		2579016						
ANR	2580562	Symbol	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data		2579016						
ANR	2580563	Symbol	* scan		2579016						
ANR	2580564	Symbol	upd -> nbytes		2579016						
ANR	2580565	Symbol	* upd -> int_a [ IA_BEG_DY ] . data		2579016						
ANR	2580566	Symbol	upd -> int_a [ IA_BEG_DY ] . data		2579016						
ANR	2580567	Symbol	* upd -> scnbuf		2579016						
ANR	2580568	Symbol	upd -> string_a [ SA_SETCOMP ] . data		2579016						
ANR	2580569	Symbol	upd		2579016						
ANR	2580570	Symbol	* SA_WRITECOMP		2579016						
ANR	2580571	Symbol	* I_NYPASS		2579016						
ANR	2580572	Symbol	* * SA_SETCOMP		2579016						
ANR	2580573	Symbol	B_YABS		2579016						
ANR	2580574	Symbol	* IA_BEGBOT		2579016						
ANR	2580575	Symbol	* I_BEG_Y		2579016						
ANR	2580576	Symbol	* upd -> ipass		2579016						
ANR	2580577	Symbol	* upd -> outbuf		2579016						
ANR	2580578	Symbol	scan		2579016						
ANR	2580579	Symbol	upd -> strings		2579016						
ANR	2580580	Symbol	* * IA_BEGBOT		2579016						
ANR	2580581	Symbol	upd -> int_a [ IA_STD_DY ] . size		2579016						
ANR	2580582	Symbol	I_BEG_Y		2579016						
ANR	2580583	Symbol	out		2579016						
ANR	2580584	Symbol	upd -> flags		2579016						
ANR	2580585	Symbol	upd_rle		2579016						
ANR	2580586	Symbol	* upd -> string_a [ SA_SETCOMP ] . data		2579016						
ANR	2580587	Symbol	* * y		2579016						
ANR	2580588	Symbol	* upd		2579016						
ANR	2580589	Symbol	* S_XMOVE		2579016						
ANR	2580590	Symbol	xend		2579016						
ANR	2580591	Symbol	obytes		2579016						
ANR	2580592	Symbol	* upd -> scnmsk		2579016						
ANR	2580593	Symbol	upd -> ocomp		2579016						
ANR	2580594	Symbol	* upd -> strings		2579016						
ANR	2580595	Symbol	* I_XOFS		2579016						
ANR	2580596	Symbol	upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes		2579016						
ANR	2580597	Symbol	* upd -> int_a [ IA_END_DY ] . data		2579016						
ANR	2580598	Symbol	upd -> strings [ S_YMOVE ] . size		2579016						
ANR	2580599	Symbol	* S_XSTEP		2579016						
ANR	2580600	Symbol	IA_BEGBOT		2579016						
ANR	2580601	Symbol	upd -> int_a [ IA_END_DY ] . data		2579016						
ANR	2580602	Symbol	xbegin		2579016						
ANR	2580603	Symbol	I_XSTEP		2579016						
ANR	2580604	Symbol	* * upd -> scnbuf		2579016						
ANR	2580605	Symbol	n		2579016						
ANR	2580606	Symbol	* * upd -> int_a		2579016						
ANR	2580607	Symbol	I_YOFS		2579016						
ANR	2580608	Symbol	upd -> yprinter		2579016						
ANR	2580609	Symbol	ioutbuf		2579016						
ANR	2580610	Symbol	S_YMOVE		2579016						
ANR	2580611	Symbol	upd -> string_a [ SA_WRITECOMP ] . data		2579016						
ANR	2580612	Symbol	S_YSTEP		2579016						
ANR	2580613	Symbol	x		2579016						
ANR	2580614	Symbol	y		2579016						
ANR	2580615	Symbol	* I_END_Y		2579016						
ANR	2580616	Symbol	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		2579016						
ANR	2580617	Symbol	* * upd		2579016						
ANR	2580618	Symbol	* * upd -> scnmsk		2579016						
ANR	2580619	Symbol	S_XMOVE		2579016						
ANR	2580620	Symbol	* upd -> string_a		2579016						
ANR	2580621	Symbol	* IA_BEG_DY		2579016						
ANR	2580622	Symbol	SA_SETCOMP		2579016						
ANR	2580623	Symbol	* * IA_ENDTOP		2579016						
ANR	2580624	Symbol	upd -> icomp		2579016						
ANR	2580625	Symbol	* * IA_END_DY		2579016						
ANR	2580626	Symbol	upd -> ipass		2579016						
ANR	2580627	Symbol	upd -> strings [ S_YSTEP ] . size		2579016						
ANR	2580628	Symbol	* SA_SETCOMP		2579016						
ANR	2580629	Symbol	upd -> strings [ S_XSTEP ] . data		2579016						
ANR	2580630	Symbol	* upd -> int_a [ IA_BEGBOT ] . data		2579016						
ANR	2580631	Symbol	upd -> strings [ S_XMOVE ] . data		2579016						
ANR	2580632	Symbol	upd -> int_a		2579016						
ANR	2580633	Symbol	pin		2579016						
ANR	2580634	Symbol	* I_BEGSKIP		2579016						
ANR	2580635	Symbol	* I_XSTEP		2579016						
ANR	2580636	Symbol	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2579016						
ANR	2580637	Symbol	upd -> int_a [ IA_ENDTOP ] . data		2579016						
ANR	2580638	Symbol	NULL		2579016						
ANR	2580639	Symbol	* upd -> int_a [ IA_ENDTOP ] . data		2579016						
ANR	2580640	Symbol	SA_WRITECOMP		2579016						
ANR	2580641	Symbol	upd -> xprinter		2579016						
ANR	2580642	Symbol	pintop		2579016						
ANR	2580643	Symbol	upd -> ints		2579016						
ANR	2580644	Symbol	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2579016						
ANR	2580645	Symbol	upd -> strings [ S_XSTEP ] . size		2579016						
ANR	2580646	Symbol	upd -> strings [ S_YSTEP ] . data		2579016						
ANR	2580647	Symbol	scan [ icomp ] . bytes		2579016						
ANR	2580648	Symbol	I_XOFS		2579016						
ANR	2580649	Symbol	I_BEGSKIP		2579016						
ANR	2580650	Symbol	upd -> int_a [ IA_END_DY ] . size		2579016						
ANR	2580651	Symbol	* obytes		2579016						
ANR	2580652	Symbol	B_XABS		2579016						
ANR	2580653	Symbol	* icomp		2579016						
ANR	2580654	Symbol	upd -> int_a [ IA_BEG_DY ] . size		2579016						
ANR	2580655	Symbol	* IA_ENDTOP		2579016						
ANR	2580656	Symbol	upd -> strings [ S_YMOVE ] . data		2579016						
ANR	2580657	Symbol	* IA_END_DY		2579016						
ANR	2580658	Symbol	* IA_STD_DY		2579016						
ANR	2580659	Symbol	I_NYPASS		2579016						
ANR	2580660	Symbol	* * upd -> string_a		2579016						
ANR	2580661	Symbol	IA_STD_DY		2579016						
ANR	2580662	Symbol	ybegin		2579016						
ANR	2580663	Symbol	* * SA_WRITECOMP		2579016						
ANR	2580664	Symbol	* I_YOFS		2579016						
ANR	2580665	Symbol	* S_YMOVE		2579016						
ANR	2580666	Symbol	upd -> scnmsk		2579016						
ANR	2580667	Symbol	* * * upd		2579016						
ANR	2580668	Symbol	upd -> strings [ S_XMOVE ] . size		2579016						
ANR	2580669	Symbol	IA_ENDTOP		2579016						
ANR	2580670	Symbol	IA_END_DY		2579016						
ANR	2580671	Symbol	I_END_Y		2579016						
ANR	2580672	Symbol	* S_YSTEP		2579016						
ANR	2580673	Symbol	upd -> string_a		2579016						
ANR	2580674	Symbol	* upd -> ints		2579016						
ANR	2580675	Symbol	* I_PINS2WRITE		2579016						
ANR	2580676	Symbol	upd -> scnbuf		2579016						
ANR	2580677	Symbol	upd -> string_a [ SA_SETCOMP ] . size		2579016						
ANR	2580678	Symbol	S_XSTEP		2579016						
ANR	2580679	Symbol	yend		2579016						
ANR	2580680	Symbol	IA_BEG_DY		2579016						
ANR	2580681	Symbol	* upd -> int_a [ IA_STD_DY ] . data		2579016						
ANR	2580682	Symbol	upd -> outbuf		2579016						
ANR	2580683	Symbol	upd -> int_a [ IA_BEGBOT ] . data		2579016						
ANR	2580684	Symbol	* * IA_BEG_DY		2579016						
ANR	2580685	Symbol	I_YSTEP		2579016						
ANR	2580686	Function	upd_wrtescnm	5837:0:208999:218229							
ANR	2580687	FunctionDef	"upd_wrtescnm (upd_p upd , FILE * out)"		2580686	0					
ANR	2580688	CompoundStatement		5839:0:209045:218229	2580686	0					
ANR	2580689	IdentifierDeclStatement	"int pinbot , pin , pintop , xbegin , x , xend , icomp , ybegin , yend , y , ioutbuf , n ;"	5840:3:209050:209116	2580686	0	True				
ANR	2580690	IdentifierDecl	pinbot		2580686	0					
ANR	2580691	IdentifierDeclType	int		2580686	0					
ANR	2580692	Identifier	pinbot		2580686	1					
ANR	2580693	IdentifierDecl	pin		2580686	1					
ANR	2580694	IdentifierDeclType	int		2580686	0					
ANR	2580695	Identifier	pin		2580686	1					
ANR	2580696	IdentifierDecl	pintop		2580686	2					
ANR	2580697	IdentifierDeclType	int		2580686	0					
ANR	2580698	Identifier	pintop		2580686	1					
ANR	2580699	IdentifierDecl	xbegin		2580686	3					
ANR	2580700	IdentifierDeclType	int		2580686	0					
ANR	2580701	Identifier	xbegin		2580686	1					
ANR	2580702	IdentifierDecl	x		2580686	4					
ANR	2580703	IdentifierDeclType	int		2580686	0					
ANR	2580704	Identifier	x		2580686	1					
ANR	2580705	IdentifierDecl	xend		2580686	5					
ANR	2580706	IdentifierDeclType	int		2580686	0					
ANR	2580707	Identifier	xend		2580686	1					
ANR	2580708	IdentifierDecl	icomp		2580686	6					
ANR	2580709	IdentifierDeclType	int		2580686	0					
ANR	2580710	Identifier	icomp		2580686	1					
ANR	2580711	IdentifierDecl	ybegin		2580686	7					
ANR	2580712	IdentifierDeclType	int		2580686	0					
ANR	2580713	Identifier	ybegin		2580686	1					
ANR	2580714	IdentifierDecl	yend		2580686	8					
ANR	2580715	IdentifierDeclType	int		2580686	0					
ANR	2580716	Identifier	yend		2580686	1					
ANR	2580717	IdentifierDecl	y		2580686	9					
ANR	2580718	IdentifierDeclType	int		2580686	0					
ANR	2580719	Identifier	y		2580686	1					
ANR	2580720	IdentifierDecl	ioutbuf		2580686	10					
ANR	2580721	IdentifierDeclType	int		2580686	0					
ANR	2580722	Identifier	ioutbuf		2580686	1					
ANR	2580723	IdentifierDecl	n		2580686	11					
ANR	2580724	IdentifierDeclType	int		2580686	0					
ANR	2580725	Identifier	n		2580686	1					
ANR	2580726	IdentifierDeclStatement	"int irow , imask , iyofs ;"	5841:3:209121:209142	2580686	1	True				
ANR	2580727	IdentifierDecl	irow		2580686	0					
ANR	2580728	IdentifierDeclType	int		2580686	0					
ANR	2580729	Identifier	irow		2580686	1					
ANR	2580730	IdentifierDecl	imask		2580686	1					
ANR	2580731	IdentifierDeclType	int		2580686	0					
ANR	2580732	Identifier	imask		2580686	1					
ANR	2580733	IdentifierDecl	iyofs		2580686	2					
ANR	2580734	IdentifierDeclType	int		2580686	0					
ANR	2580735	Identifier	iyofs		2580686	1					
ANR	2580736	IdentifierDeclStatement	byte * obytes ;	5842:3:209147:209159	2580686	2	True				
ANR	2580737	IdentifierDecl	* obytes		2580686	0					
ANR	2580738	IdentifierDeclType	byte *		2580686	0					
ANR	2580739	Identifier	obytes		2580686	1					
ANR	2580740	IdentifierDeclStatement	updscan_p scan ;	5843:3:209164:209178	2580686	3	True				
ANR	2580741	IdentifierDecl	scan		2580686	0					
ANR	2580742	IdentifierDeclType	updscan_p		2580686	0					
ANR	2580743	Identifier	scan		2580686	1					
ANR	2580744	IfStatement	if ( upd -> yscan < upd -> ints [ I_BEG_Y ] )		2580686	4					
ANR	2580745	Condition	upd -> yscan < upd -> ints [ I_BEG_Y ]	5847:6:209233:209263	2580686	0	True				
ANR	2580746	RelationalExpression	upd -> yscan < upd -> ints [ I_BEG_Y ]		2580686	0		<			
ANR	2580747	PtrMemberAccess	upd -> yscan		2580686	0					
ANR	2580748	Identifier	upd		2580686	0					
ANR	2580749	Identifier	yscan		2580686	1					
ANR	2580750	ArrayIndexing	upd -> ints [ I_BEG_Y ]		2580686	1					
ANR	2580751	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2580752	Identifier	upd		2580686	0					
ANR	2580753	Identifier	ints		2580686	1					
ANR	2580754	Identifier	I_BEG_Y		2580686	1					
ANR	2580755	CompoundStatement		9:39:220:220	2580686	1					
ANR	2580756	ExpressionStatement	pintop = 0	5848:6:209274:209284	2580686	0	True				
ANR	2580757	AssignmentExpression	pintop = 0		2580686	0		=			
ANR	2580758	Identifier	pintop		2580686	0					
ANR	2580759	PrimaryExpression	0		2580686	1					
ANR	2580760	ExpressionStatement	pinbot = upd -> int_a [ IA_BEGBOT ] . data [ upd -> ipass ]	5849:6:209292:209339	2580686	1	True				
ANR	2580761	AssignmentExpression	pinbot = upd -> int_a [ IA_BEGBOT ] . data [ upd -> ipass ]		2580686	0		=			
ANR	2580762	Identifier	pinbot		2580686	0					
ANR	2580763	ArrayIndexing	upd -> int_a [ IA_BEGBOT ] . data [ upd -> ipass ]		2580686	1					
ANR	2580764	MemberAccess	upd -> int_a [ IA_BEGBOT ] . data		2580686	0					
ANR	2580765	ArrayIndexing	upd -> int_a [ IA_BEGBOT ]		2580686	0					
ANR	2580766	PtrMemberAccess	upd -> int_a		2580686	0					
ANR	2580767	Identifier	upd		2580686	0					
ANR	2580768	Identifier	int_a		2580686	1					
ANR	2580769	Identifier	IA_BEGBOT		2580686	1					
ANR	2580770	Identifier	data		2580686	1					
ANR	2580771	PtrMemberAccess	upd -> ipass		2580686	1					
ANR	2580772	Identifier	upd		2580686	0					
ANR	2580773	Identifier	ipass		2580686	1					
ANR	2580774	ElseStatement	else		2580686	0					
ANR	2580775	IfStatement	if ( upd -> yscan >= upd -> ints [ I_END_Y ] )		2580686	0					
ANR	2580776	Condition	upd -> yscan >= upd -> ints [ I_END_Y ]	5850:13:209354:209385	2580686	0	True				
ANR	2580777	RelationalExpression	upd -> yscan >= upd -> ints [ I_END_Y ]		2580686	0		>=			
ANR	2580778	PtrMemberAccess	upd -> yscan		2580686	0					
ANR	2580779	Identifier	upd		2580686	0					
ANR	2580780	Identifier	yscan		2580686	1					
ANR	2580781	ArrayIndexing	upd -> ints [ I_END_Y ]		2580686	1					
ANR	2580782	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2580783	Identifier	upd		2580686	0					
ANR	2580784	Identifier	ints		2580686	1					
ANR	2580785	Identifier	I_END_Y		2580686	1					
ANR	2580786	CompoundStatement		12:47:342:342	2580686	1					
ANR	2580787	ExpressionStatement	pinbot = upd -> ints [ I_PINS2WRITE ]	5851:6:209396:209428	2580686	0	True				
ANR	2580788	AssignmentExpression	pinbot = upd -> ints [ I_PINS2WRITE ]		2580686	0		=			
ANR	2580789	Identifier	pinbot		2580686	0					
ANR	2580790	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		2580686	1					
ANR	2580791	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2580792	Identifier	upd		2580686	0					
ANR	2580793	Identifier	ints		2580686	1					
ANR	2580794	Identifier	I_PINS2WRITE		2580686	1					
ANR	2580795	ExpressionStatement	pintop = pinbot - upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]	5852:6:209436:209492	2580686	1	True				
ANR	2580796	AssignmentExpression	pintop = pinbot - upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]		2580686	0		=			
ANR	2580797	Identifier	pintop		2580686	0					
ANR	2580798	AdditiveExpression	pinbot - upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]		2580686	1		-			
ANR	2580799	Identifier	pinbot		2580686	0					
ANR	2580800	ArrayIndexing	upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]		2580686	1					
ANR	2580801	MemberAccess	upd -> int_a [ IA_ENDTOP ] . data		2580686	0					
ANR	2580802	ArrayIndexing	upd -> int_a [ IA_ENDTOP ]		2580686	0					
ANR	2580803	PtrMemberAccess	upd -> int_a		2580686	0					
ANR	2580804	Identifier	upd		2580686	0					
ANR	2580805	Identifier	int_a		2580686	1					
ANR	2580806	Identifier	IA_ENDTOP		2580686	1					
ANR	2580807	Identifier	data		2580686	1					
ANR	2580808	PtrMemberAccess	upd -> ipass		2580686	1					
ANR	2580809	Identifier	upd		2580686	0					
ANR	2580810	Identifier	ipass		2580686	1					
ANR	2580811	ElseStatement	else		2580686	0					
ANR	2580812	CompoundStatement		15:10:458:458	2580686	0					
ANR	2580813	ExpressionStatement	pintop = 0	5854:6:209512:209522	2580686	0	True				
ANR	2580814	AssignmentExpression	pintop = 0		2580686	0		=			
ANR	2580815	Identifier	pintop		2580686	0					
ANR	2580816	PrimaryExpression	0		2580686	1					
ANR	2580817	ExpressionStatement	pinbot = upd -> ints [ I_PINS2WRITE ]	5855:6:209530:209562	2580686	1	True				
ANR	2580818	AssignmentExpression	pinbot = upd -> ints [ I_PINS2WRITE ]		2580686	0		=			
ANR	2580819	Identifier	pinbot		2580686	0					
ANR	2580820	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		2580686	1					
ANR	2580821	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2580822	Identifier	upd		2580686	0					
ANR	2580823	Identifier	ints		2580686	1					
ANR	2580824	Identifier	I_PINS2WRITE		2580686	1					
ANR	2580825	ExpressionStatement	ybegin = pintop * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]	5858:3:209573:209647	2580686	5	True				
ANR	2580826	AssignmentExpression	ybegin = pintop * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		2580686	0		=			
ANR	2580827	Identifier	ybegin		2580686	0					
ANR	2580828	AdditiveExpression	pintop * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		2580686	1		+			
ANR	2580829	MultiplicativeExpression	pintop * upd -> ints [ I_NYPASS ]		2580686	0		*			
ANR	2580830	Identifier	pintop		2580686	0					
ANR	2580831	ArrayIndexing	upd -> ints [ I_NYPASS ]		2580686	1					
ANR	2580832	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2580833	Identifier	upd		2580686	0					
ANR	2580834	Identifier	ints		2580686	1					
ANR	2580835	Identifier	I_NYPASS		2580686	1					
ANR	2580836	AdditiveExpression	upd -> yscan - upd -> ints [ I_BEGSKIP ]		2580686	1		-			
ANR	2580837	PtrMemberAccess	upd -> yscan		2580686	0					
ANR	2580838	Identifier	upd		2580686	0					
ANR	2580839	Identifier	yscan		2580686	1					
ANR	2580840	ArrayIndexing	upd -> ints [ I_BEGSKIP ]		2580686	1					
ANR	2580841	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2580842	Identifier	upd		2580686	0					
ANR	2580843	Identifier	ints		2580686	1					
ANR	2580844	Identifier	I_BEGSKIP		2580686	1					
ANR	2580845	ExpressionStatement	yend = pinbot * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]	5859:3:209652:209726	2580686	6	True				
ANR	2580846	AssignmentExpression	yend = pinbot * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		2580686	0		=			
ANR	2580847	Identifier	yend		2580686	0					
ANR	2580848	AdditiveExpression	pinbot * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		2580686	1		+			
ANR	2580849	MultiplicativeExpression	pinbot * upd -> ints [ I_NYPASS ]		2580686	0		*			
ANR	2580850	Identifier	pinbot		2580686	0					
ANR	2580851	ArrayIndexing	upd -> ints [ I_NYPASS ]		2580686	1					
ANR	2580852	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2580853	Identifier	upd		2580686	0					
ANR	2580854	Identifier	ints		2580686	1					
ANR	2580855	Identifier	I_NYPASS		2580686	1					
ANR	2580856	AdditiveExpression	upd -> yscan - upd -> ints [ I_BEGSKIP ]		2580686	1		-			
ANR	2580857	PtrMemberAccess	upd -> yscan		2580686	0					
ANR	2580858	Identifier	upd		2580686	0					
ANR	2580859	Identifier	yscan		2580686	1					
ANR	2580860	ArrayIndexing	upd -> ints [ I_BEGSKIP ]		2580686	1					
ANR	2580861	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2580862	Identifier	upd		2580686	0					
ANR	2580863	Identifier	ints		2580686	1					
ANR	2580864	Identifier	I_BEGSKIP		2580686	1					
ANR	2580865	ExpressionStatement	xbegin = upd -> nbytes	5863:3:209769:209789	2580686	7	True				
ANR	2580866	AssignmentExpression	xbegin = upd -> nbytes		2580686	0		=			
ANR	2580867	Identifier	xbegin		2580686	0					
ANR	2580868	PtrMemberAccess	upd -> nbytes		2580686	1					
ANR	2580869	Identifier	upd		2580686	0					
ANR	2580870	Identifier	nbytes		2580686	1					
ANR	2580871	ExpressionStatement	xend = - 1	5864:3:209794:209805	2580686	8	True				
ANR	2580872	AssignmentExpression	xend = - 1		2580686	0		=			
ANR	2580873	Identifier	xend		2580686	0					
ANR	2580874	UnaryOperationExpression	- 1		2580686	1					
ANR	2580875	UnaryOperator	-		2580686	0					
ANR	2580876	PrimaryExpression	1		2580686	1					
ANR	2580877	ForStatement	for ( y = ybegin ; y < yend ; y += upd -> ints [ I_NYPASS ] )		2580686	9					
ANR	2580878	ForInit	y = ybegin ;	5866:7:209815:209825	2580686	0	True				
ANR	2580879	AssignmentExpression	y = ybegin		2580686	0		=			
ANR	2580880	Identifier	y		2580686	0					
ANR	2580881	Identifier	ybegin		2580686	1					
ANR	2580882	Condition	y < yend	5866:19:209827:209834	2580686	1	True				
ANR	2580883	RelationalExpression	y < yend		2580686	0		<			
ANR	2580884	Identifier	y		2580686	0					
ANR	2580885	Identifier	yend		2580686	1					
ANR	2580886	AssignmentExpression	y += upd -> ints [ I_NYPASS ]	5866:29:209837:209860	2580686	2	True	+=			
ANR	2580887	Identifier	y		2580686	0					
ANR	2580888	ArrayIndexing	upd -> ints [ I_NYPASS ]		2580686	1					
ANR	2580889	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2580890	Identifier	upd		2580686	0					
ANR	2580891	Identifier	ints		2580686	1					
ANR	2580892	Identifier	I_NYPASS		2580686	1					
ANR	2580893	CompoundStatement		28:55:817:817	2580686	3					
ANR	2580894	IfStatement	if ( 0 > y )		2580686	0					
ANR	2580895	Condition	0 > y	5868:9:209894:209898	2580686	0	True				
ANR	2580896	RelationalExpression	0 > y		2580686	0		>			
ANR	2580897	PrimaryExpression	0		2580686	0					
ANR	2580898	Identifier	y		2580686	1					
ANR	2580899	ContinueStatement	continue ;	5868:16:209901:209909	2580686	1	True				
ANR	2580900	ExpressionStatement	scan = upd -> scnbuf [ y & upd -> scnmsk ]	5870:6:209943:209978	2580686	1	True				
ANR	2580901	AssignmentExpression	scan = upd -> scnbuf [ y & upd -> scnmsk ]		2580686	0		=			
ANR	2580902	Identifier	scan		2580686	0					
ANR	2580903	ArrayIndexing	upd -> scnbuf [ y & upd -> scnmsk ]		2580686	1					
ANR	2580904	PtrMemberAccess	upd -> scnbuf		2580686	0					
ANR	2580905	Identifier	upd		2580686	0					
ANR	2580906	Identifier	scnbuf		2580686	1					
ANR	2580907	BitAndExpression	y & upd -> scnmsk		2580686	1		&			
ANR	2580908	Identifier	y		2580686	0					
ANR	2580909	PtrMemberAccess	upd -> scnmsk		2580686	1					
ANR	2580910	Identifier	upd		2580686	0					
ANR	2580911	Identifier	scnmsk		2580686	1					
ANR	2580912	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		2580686	2					
ANR	2580913	ForInit	icomp = 0 ;	5872:10:209991:210000	2580686	0	True				
ANR	2580914	AssignmentExpression	icomp = 0		2580686	0		=			
ANR	2580915	Identifier	icomp		2580686	0					
ANR	2580916	PrimaryExpression	0		2580686	1					
ANR	2580917	Condition	icomp < upd -> ocomp	5872:21:210002:210019	2580686	1	True				
ANR	2580918	RelationalExpression	icomp < upd -> ocomp		2580686	0		<			
ANR	2580919	Identifier	icomp		2580686	0					
ANR	2580920	PtrMemberAccess	upd -> ocomp		2580686	1					
ANR	2580921	Identifier	upd		2580686	0					
ANR	2580922	Identifier	ocomp		2580686	1					
ANR	2580923	UnaryExpression	++ icomp	5872:41:210022:210028	2580686	2	True				
ANR	2580924	IncDec	++		2580686	0					
ANR	2580925	Identifier	icomp		2580686	1					
ANR	2580926	CompoundStatement		34:50:985:985	2580686	3					
ANR	2580927	ExpressionStatement	obytes = scan [ icomp ] . bytes	5873:9:210062:210088	2580686	0	True				
ANR	2580928	AssignmentExpression	obytes = scan [ icomp ] . bytes		2580686	0		=			
ANR	2580929	Identifier	obytes		2580686	0					
ANR	2580930	MemberAccess	scan [ icomp ] . bytes		2580686	1					
ANR	2580931	ArrayIndexing	scan [ icomp ]		2580686	0					
ANR	2580932	Identifier	scan		2580686	0					
ANR	2580933	Identifier	icomp		2580686	1					
ANR	2580934	Identifier	bytes		2580686	1					
ANR	2580935	ForStatement	for ( x = 0 ; x < xbegin && ! obytes [ x ] ; x ++ )		2580686	1					
ANR	2580936	ForInit	x = 0 ;	5875:13:210104:210109	2580686	0	True				
ANR	2580937	AssignmentExpression	x = 0		2580686	0		=			
ANR	2580938	Identifier	x		2580686	0					
ANR	2580939	PrimaryExpression	0		2580686	1					
ANR	2580940	Condition	x < xbegin && ! obytes [ x ]	5875:20:210111:210134	2580686	1	True				
ANR	2580941	AndExpression	x < xbegin && ! obytes [ x ]		2580686	0		&&			
ANR	2580942	RelationalExpression	x < xbegin		2580686	0		<			
ANR	2580943	Identifier	x		2580686	0					
ANR	2580944	Identifier	xbegin		2580686	1					
ANR	2580945	UnaryOperationExpression	! obytes [ x ]		2580686	1					
ANR	2580946	UnaryOperator	!		2580686	0					
ANR	2580947	ArrayIndexing	obytes [ x ]		2580686	1					
ANR	2580948	Identifier	obytes		2580686	0					
ANR	2580949	Identifier	x		2580686	1					
ANR	2580950	PostIncDecOperationExpression	x ++	5875:46:210137:210139	2580686	2	True				
ANR	2580951	Identifier	x		2580686	0					
ANR	2580952	IncDec	++		2580686	1					
ANR	2580953	ExpressionStatement		5875:50:210141:210141	2580686	3	True				
ANR	2580954	IfStatement	if ( x < xbegin )		2580686	2					
ANR	2580955	Condition	x < xbegin	5876:12:210155:210164	2580686	0	True				
ANR	2580956	RelationalExpression	x < xbegin		2580686	0		<			
ANR	2580957	Identifier	x		2580686	0					
ANR	2580958	Identifier	xbegin		2580686	1					
ANR	2580959	ExpressionStatement	xbegin = x	5876:24:210167:210177	2580686	1	True				
ANR	2580960	AssignmentExpression	xbegin = x		2580686	0		=			
ANR	2580961	Identifier	xbegin		2580686	0					
ANR	2580962	Identifier	x		2580686	1					
ANR	2580963	IfStatement	if ( x < upd -> nbytes )		2580686	3					
ANR	2580964	Condition	x < upd -> nbytes	5878:12:210192:210206	2580686	0	True				
ANR	2580965	RelationalExpression	x < upd -> nbytes		2580686	0		<			
ANR	2580966	Identifier	x		2580686	0					
ANR	2580967	PtrMemberAccess	upd -> nbytes		2580686	1					
ANR	2580968	Identifier	upd		2580686	0					
ANR	2580969	Identifier	nbytes		2580686	1					
ANR	2580970	CompoundStatement		40:29:1163:1163	2580686	1					
ANR	2580971	ForStatement	for ( x = upd -> nbytes - 1 ; x > xend && ! obytes [ x ] ; x -- )		2580686	0					
ANR	2580972	ForInit	x = upd -> nbytes - 1 ;	5879:16:210227:210244	2580686	0	True				
ANR	2580973	AssignmentExpression	x = upd -> nbytes - 1		2580686	0		=			
ANR	2580974	Identifier	x		2580686	0					
ANR	2580975	AdditiveExpression	upd -> nbytes - 1		2580686	1		-			
ANR	2580976	PtrMemberAccess	upd -> nbytes		2580686	0					
ANR	2580977	Identifier	upd		2580686	0					
ANR	2580978	Identifier	nbytes		2580686	1					
ANR	2580979	PrimaryExpression	1		2580686	1					
ANR	2580980	Condition	x > xend && ! obytes [ x ]	5879:35:210246:210267	2580686	1	True				
ANR	2580981	AndExpression	x > xend && ! obytes [ x ]		2580686	0		&&			
ANR	2580982	RelationalExpression	x > xend		2580686	0		>			
ANR	2580983	Identifier	x		2580686	0					
ANR	2580984	Identifier	xend		2580686	1					
ANR	2580985	UnaryOperationExpression	! obytes [ x ]		2580686	1					
ANR	2580986	UnaryOperator	!		2580686	0					
ANR	2580987	ArrayIndexing	obytes [ x ]		2580686	1					
ANR	2580988	Identifier	obytes		2580686	0					
ANR	2580989	Identifier	x		2580686	1					
ANR	2580990	PostIncDecOperationExpression	x --	5879:59:210270:210272	2580686	2	True				
ANR	2580991	Identifier	x		2580686	0					
ANR	2580992	IncDec	--		2580686	1					
ANR	2580993	ExpressionStatement		5879:63:210274:210274	2580686	3	True				
ANR	2580994	IfStatement	if ( x > xend )		2580686	1					
ANR	2580995	Condition	x > xend	5880:15:210291:210298	2580686	0	True				
ANR	2580996	RelationalExpression	x > xend		2580686	0		>			
ANR	2580997	Identifier	x		2580686	0					
ANR	2580998	Identifier	xend		2580686	1					
ANR	2580999	ExpressionStatement	xend = x	5880:25:210301:210309	2580686	1	True				
ANR	2581000	AssignmentExpression	xend = x		2580686	0		=			
ANR	2581001	Identifier	xend		2580686	0					
ANR	2581002	Identifier	x		2580686	1					
ANR	2581003	IfStatement	if ( xbegin <= xend )		2580686	10					
ANR	2581004	Condition	xbegin <= xend	5885:6:210477:210490	2580686	0	True				
ANR	2581005	RelationalExpression	xbegin <= xend		2580686	0		<=			
ANR	2581006	Identifier	xbegin		2580686	0					
ANR	2581007	Identifier	xend		2580686	1					
ANR	2581008	CompoundStatement		47:22:1447:1447	2580686	1					
ANR	2581009	ExpressionStatement	ioutbuf = 0	5887:6:210527:210538	2580686	0	True				
ANR	2581010	AssignmentExpression	ioutbuf = 0		2580686	0		=			
ANR	2581011	Identifier	ioutbuf		2580686	0					
ANR	2581012	PrimaryExpression	0		2580686	1					
ANR	2581013	IfStatement	if ( 0 == upd -> strings [ S_XMOVE ] . size )		2580686	1					
ANR	2581014	Condition	0 == upd -> strings [ S_XMOVE ] . size	5889:9:210550:210580	2580686	0	True				
ANR	2581015	EqualityExpression	0 == upd -> strings [ S_XMOVE ] . size		2580686	0		==			
ANR	2581016	PrimaryExpression	0		2580686	0					
ANR	2581017	MemberAccess	upd -> strings [ S_XMOVE ] . size		2580686	1					
ANR	2581018	ArrayIndexing	upd -> strings [ S_XMOVE ]		2580686	0					
ANR	2581019	PtrMemberAccess	upd -> strings		2580686	0					
ANR	2581020	Identifier	upd		2580686	0					
ANR	2581021	Identifier	strings		2580686	1					
ANR	2581022	Identifier	S_XMOVE		2580686	1					
ANR	2581023	Identifier	size		2580686	1					
ANR	2581024	ExpressionStatement	xbegin = 0	5889:42:210583:210593	2580686	1	True				
ANR	2581025	AssignmentExpression	xbegin = 0		2580686	0		=			
ANR	2581026	Identifier	xbegin		2580686	0					
ANR	2581027	PrimaryExpression	0		2580686	1					
ANR	2581028	IfStatement	if ( upd -> yscan != upd -> yprinter )		2580686	2					
ANR	2581029	Condition	upd -> yscan != upd -> yprinter	5894:9:210649:210675	2580686	0	True				
ANR	2581030	EqualityExpression	upd -> yscan != upd -> yprinter		2580686	0		!=			
ANR	2581031	PtrMemberAccess	upd -> yscan		2580686	0					
ANR	2581032	Identifier	upd		2580686	0					
ANR	2581033	Identifier	yscan		2580686	1					
ANR	2581034	PtrMemberAccess	upd -> yprinter		2580686	1					
ANR	2581035	Identifier	upd		2580686	0					
ANR	2581036	Identifier	yprinter		2580686	1					
ANR	2581037	CompoundStatement		56:38:1632:1632	2580686	1					
ANR	2581038	IfStatement	if ( B_YABS & upd -> flags )		2580686	0					
ANR	2581039	Condition	B_YABS & upd -> flags	5895:12:210716:210734	2580686	0	True				
ANR	2581040	BitAndExpression	B_YABS & upd -> flags		2580686	0		&			
ANR	2581041	Identifier	B_YABS		2580686	0					
ANR	2581042	PtrMemberAccess	upd -> flags		2580686	1					
ANR	2581043	Identifier	upd		2580686	0					
ANR	2581044	Identifier	flags		2580686	1					
ANR	2581045	ExpressionStatement	y = upd -> yscan + upd -> ints [ I_YOFS ]	5895:33:210737:210771	2580686	1	True				
ANR	2581046	AssignmentExpression	y = upd -> yscan + upd -> ints [ I_YOFS ]		2580686	0		=			
ANR	2581047	Identifier	y		2580686	0					
ANR	2581048	AdditiveExpression	upd -> yscan + upd -> ints [ I_YOFS ]		2580686	1		+			
ANR	2581049	PtrMemberAccess	upd -> yscan		2580686	0					
ANR	2581050	Identifier	upd		2580686	0					
ANR	2581051	Identifier	yscan		2580686	1					
ANR	2581052	ArrayIndexing	upd -> ints [ I_YOFS ]		2580686	1					
ANR	2581053	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2581054	Identifier	upd		2580686	0					
ANR	2581055	Identifier	ints		2580686	1					
ANR	2581056	Identifier	I_YOFS		2580686	1					
ANR	2581057	ElseStatement	else		2580686	0					
ANR	2581058	ExpressionStatement	y = upd -> yscan - upd -> yprinter	5896:33:210806:210836	2580686	0	True				
ANR	2581059	AssignmentExpression	y = upd -> yscan - upd -> yprinter		2580686	0		=			
ANR	2581060	Identifier	y		2580686	0					
ANR	2581061	AdditiveExpression	upd -> yscan - upd -> yprinter		2580686	1		-			
ANR	2581062	PtrMemberAccess	upd -> yscan		2580686	0					
ANR	2581063	Identifier	upd		2580686	0					
ANR	2581064	Identifier	yscan		2580686	1					
ANR	2581065	PtrMemberAccess	upd -> yprinter		2580686	1					
ANR	2581066	Identifier	upd		2580686	0					
ANR	2581067	Identifier	yprinter		2580686	1					
ANR	2581068	IfStatement	if ( 1 < upd -> ints [ I_YSTEP ] )		2580686	1					
ANR	2581069	Condition	1 < upd -> ints [ I_YSTEP ]	5898:18:210857:210878	2580686	0	True				
ANR	2581070	RelationalExpression	1 < upd -> ints [ I_YSTEP ]		2580686	0		<			
ANR	2581071	PrimaryExpression	1		2580686	0					
ANR	2581072	ArrayIndexing	upd -> ints [ I_YSTEP ]		2580686	1					
ANR	2581073	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2581074	Identifier	upd		2580686	0					
ANR	2581075	Identifier	ints		2580686	1					
ANR	2581076	Identifier	I_YSTEP		2580686	1					
ANR	2581077	CompoundStatement		60:42:1835:1835	2580686	1					
ANR	2581078	ExpressionStatement	n = y / upd -> ints [ I_YSTEP ]	5899:12:210895:210927	2580686	0	True				
ANR	2581079	AssignmentExpression	n = y / upd -> ints [ I_YSTEP ]		2580686	0		=			
ANR	2581080	Identifier	n		2580686	0					
ANR	2581081	MultiplicativeExpression	y / upd -> ints [ I_YSTEP ]		2580686	1		/			
ANR	2581082	Identifier	y		2580686	0					
ANR	2581083	ArrayIndexing	upd -> ints [ I_YSTEP ]		2580686	1					
ANR	2581084	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2581085	Identifier	upd		2580686	0					
ANR	2581086	Identifier	ints		2580686	1					
ANR	2581087	Identifier	I_YSTEP		2580686	1					
ANR	2581088	ExpressionStatement	y -= n * upd -> ints [ I_YSTEP ]	5900:12:210960:210992	2580686	1	True				
ANR	2581089	AssignmentExpression	y -= n * upd -> ints [ I_YSTEP ]		2580686	0		-=			
ANR	2581090	Identifier	y		2580686	0					
ANR	2581091	MultiplicativeExpression	n * upd -> ints [ I_YSTEP ]		2580686	1		*			
ANR	2581092	Identifier	n		2580686	0					
ANR	2581093	ArrayIndexing	upd -> ints [ I_YSTEP ]		2580686	1					
ANR	2581094	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2581095	Identifier	upd		2580686	0					
ANR	2581096	Identifier	ints		2580686	1					
ANR	2581097	Identifier	I_YSTEP		2580686	1					
ANR	2581098	ElseStatement	else		2580686	0					
ANR	2581099	IfStatement	if ( - 1 > upd -> ints [ I_YSTEP ] )		2580686	0					
ANR	2581100	Condition	- 1 > upd -> ints [ I_YSTEP ]	5901:19:211032:211054	2580686	0	True				
ANR	2581101	RelationalExpression	- 1 > upd -> ints [ I_YSTEP ]		2580686	0		>			
ANR	2581102	UnaryOperationExpression	- 1		2580686	0					
ANR	2581103	UnaryOperator	-		2580686	0					
ANR	2581104	PrimaryExpression	1		2580686	1					
ANR	2581105	ArrayIndexing	upd -> ints [ I_YSTEP ]		2580686	1					
ANR	2581106	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2581107	Identifier	upd		2580686	0					
ANR	2581108	Identifier	ints		2580686	1					
ANR	2581109	Identifier	I_YSTEP		2580686	1					
ANR	2581110	CompoundStatement		63:44:2011:2011	2580686	1					
ANR	2581111	ExpressionStatement	n = y * - upd -> ints [ I_YSTEP ]	5902:12:211071:211103	2580686	0	True				
ANR	2581112	AssignmentExpression	n = y * - upd -> ints [ I_YSTEP ]		2580686	0		=			
ANR	2581113	Identifier	n		2580686	0					
ANR	2581114	MultiplicativeExpression	y * - upd -> ints [ I_YSTEP ]		2580686	1		*			
ANR	2581115	Identifier	y		2580686	0					
ANR	2581116	UnaryOperationExpression	- upd -> ints [ I_YSTEP ]		2580686	1					
ANR	2581117	UnaryOperator	-		2580686	0					
ANR	2581118	ArrayIndexing	upd -> ints [ I_YSTEP ]		2580686	1					
ANR	2581119	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2581120	Identifier	upd		2580686	0					
ANR	2581121	Identifier	ints		2580686	1					
ANR	2581122	Identifier	I_YSTEP		2580686	1					
ANR	2581123	ExpressionStatement	y = 0	5903:12:211139:211149	2580686	1	True				
ANR	2581124	AssignmentExpression	y = 0		2580686	0		=			
ANR	2581125	Identifier	y		2580686	0					
ANR	2581126	PrimaryExpression	0		2580686	1					
ANR	2581127	ElseStatement	else		2580686	0					
ANR	2581128	CompoundStatement		66:16:2121:2121	2580686	0					
ANR	2581129	ExpressionStatement	n = y	5905:12:211181:211191	2580686	0	True				
ANR	2581130	AssignmentExpression	n = y		2580686	0		=			
ANR	2581131	Identifier	n		2580686	0					
ANR	2581132	Identifier	y		2580686	1					
ANR	2581133	ExpressionStatement	y = 0	5906:12:211205:211215	2580686	1	True				
ANR	2581134	AssignmentExpression	y = 0		2580686	0		=			
ANR	2581135	Identifier	y		2580686	0					
ANR	2581136	PrimaryExpression	0		2580686	1					
ANR	2581137	IfStatement	if ( n )		2580686	2					
ANR	2581138	Condition	n	5909:12:211241:211241	2580686	0	True				
ANR	2581139	Identifier	n		2580686	0					
ANR	2581140	CompoundStatement		71:15:2198:2198	2580686	1					
ANR	2581141	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YMOVE ] . data , upd -> strings [ S_YMOVE ] . size )"	5910:12:211283:211388	2580686	0	True				
ANR	2581142	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YMOVE ] . data , upd -> strings [ S_YMOVE ] . size )"		2580686	0					
ANR	2581143	Callee	memcpy		2580686	0					
ANR	2581144	Identifier	memcpy		2580686	0					
ANR	2581145	ArgumentList	upd -> outbuf + ioutbuf		2580686	1					
ANR	2581146	Argument	upd -> outbuf + ioutbuf		2580686	0					
ANR	2581147	AdditiveExpression	upd -> outbuf + ioutbuf		2580686	0		+			
ANR	2581148	PtrMemberAccess	upd -> outbuf		2580686	0					
ANR	2581149	Identifier	upd		2580686	0					
ANR	2581150	Identifier	outbuf		2580686	1					
ANR	2581151	Identifier	ioutbuf		2580686	1					
ANR	2581152	Argument	upd -> strings [ S_YMOVE ] . data		2580686	1					
ANR	2581153	MemberAccess	upd -> strings [ S_YMOVE ] . data		2580686	0					
ANR	2581154	ArrayIndexing	upd -> strings [ S_YMOVE ]		2580686	0					
ANR	2581155	PtrMemberAccess	upd -> strings		2580686	0					
ANR	2581156	Identifier	upd		2580686	0					
ANR	2581157	Identifier	strings		2580686	1					
ANR	2581158	Identifier	S_YMOVE		2580686	1					
ANR	2581159	Identifier	data		2580686	1					
ANR	2581160	Argument	upd -> strings [ S_YMOVE ] . size		2580686	2					
ANR	2581161	MemberAccess	upd -> strings [ S_YMOVE ] . size		2580686	0					
ANR	2581162	ArrayIndexing	upd -> strings [ S_YMOVE ]		2580686	0					
ANR	2581163	PtrMemberAccess	upd -> strings		2580686	0					
ANR	2581164	Identifier	upd		2580686	0					
ANR	2581165	Identifier	strings		2580686	1					
ANR	2581166	Identifier	S_YMOVE		2580686	1					
ANR	2581167	Identifier	size		2580686	1					
ANR	2581168	ExpressionStatement	ioutbuf += upd -> strings [ S_YMOVE ] . size	5912:12:211402:211439	2580686	1	True				
ANR	2581169	AssignmentExpression	ioutbuf += upd -> strings [ S_YMOVE ] . size		2580686	0		+=			
ANR	2581170	Identifier	ioutbuf		2580686	0					
ANR	2581171	MemberAccess	upd -> strings [ S_YMOVE ] . size		2580686	1					
ANR	2581172	ArrayIndexing	upd -> strings [ S_YMOVE ]		2580686	0					
ANR	2581173	PtrMemberAccess	upd -> strings		2580686	0					
ANR	2581174	Identifier	upd		2580686	0					
ANR	2581175	Identifier	strings		2580686	1					
ANR	2581176	Identifier	S_YMOVE		2580686	1					
ANR	2581177	Identifier	size		2580686	1					
ANR	2581178	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = n & 0xff	5914:12:211454:211492	2580686	2	True				
ANR	2581179	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = n & 0xff		2580686	0		=			
ANR	2581180	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2580686	0					
ANR	2581181	PtrMemberAccess	upd -> outbuf		2580686	0					
ANR	2581182	Identifier	upd		2580686	0					
ANR	2581183	Identifier	outbuf		2580686	1					
ANR	2581184	PostIncDecOperationExpression	ioutbuf ++		2580686	1					
ANR	2581185	Identifier	ioutbuf		2580686	0					
ANR	2581186	IncDec	++		2580686	1					
ANR	2581187	BitAndExpression	n & 0xff		2580686	1		&			
ANR	2581188	Identifier	n		2580686	0					
ANR	2581189	PrimaryExpression	0xff		2580686	1					
ANR	2581190	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff	5915:12:211506:211544	2580686	3	True				
ANR	2581191	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff		2580686	0		=			
ANR	2581192	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2580686	0					
ANR	2581193	PtrMemberAccess	upd -> outbuf		2580686	0					
ANR	2581194	Identifier	upd		2580686	0					
ANR	2581195	Identifier	outbuf		2580686	1					
ANR	2581196	PostIncDecOperationExpression	ioutbuf ++		2580686	1					
ANR	2581197	Identifier	ioutbuf		2580686	0					
ANR	2581198	IncDec	++		2580686	1					
ANR	2581199	BitAndExpression	( n >> 8 ) & 0xff		2580686	1		&			
ANR	2581200	ShiftExpression	n >> 8		2580686	0		>>			
ANR	2581201	Identifier	n		2580686	0					
ANR	2581202	PrimaryExpression	8		2580686	1					
ANR	2581203	PrimaryExpression	0xff		2580686	1					
ANR	2581204	IfStatement	if ( 0 < upd -> strings [ S_YSTEP ] . size )		2580686	3					
ANR	2581205	Condition	0 < upd -> strings [ S_YSTEP ] . size	5919:12:211602:211631	2580686	0	True				
ANR	2581206	RelationalExpression	0 < upd -> strings [ S_YSTEP ] . size		2580686	0		<			
ANR	2581207	PrimaryExpression	0		2580686	0					
ANR	2581208	MemberAccess	upd -> strings [ S_YSTEP ] . size		2580686	1					
ANR	2581209	ArrayIndexing	upd -> strings [ S_YSTEP ]		2580686	0					
ANR	2581210	PtrMemberAccess	upd -> strings		2580686	0					
ANR	2581211	Identifier	upd		2580686	0					
ANR	2581212	Identifier	strings		2580686	1					
ANR	2581213	Identifier	S_YSTEP		2580686	1					
ANR	2581214	Identifier	size		2580686	1					
ANR	2581215	CompoundStatement		81:44:2588:2588	2580686	1					
ANR	2581216	WhileStatement	while ( y -- )		2580686	0					
ANR	2581217	Condition	y --	5920:18:211654:211656	2580686	0	True				
ANR	2581218	PostIncDecOperationExpression	y --		2580686	0					
ANR	2581219	Identifier	y		2580686	0					
ANR	2581220	IncDec	--		2580686	1					
ANR	2581221	CompoundStatement		82:23:2613:2613	2580686	1					
ANR	2581222	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YSTEP ] . data , upd -> strings [ S_YSTEP ] . size )"	5921:15:211676:211811	2580686	0	True				
ANR	2581223	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YSTEP ] . data , upd -> strings [ S_YSTEP ] . size )"		2580686	0					
ANR	2581224	Callee	memcpy		2580686	0					
ANR	2581225	Identifier	memcpy		2580686	0					
ANR	2581226	ArgumentList	upd -> outbuf + ioutbuf		2580686	1					
ANR	2581227	Argument	upd -> outbuf + ioutbuf		2580686	0					
ANR	2581228	AdditiveExpression	upd -> outbuf + ioutbuf		2580686	0		+			
ANR	2581229	PtrMemberAccess	upd -> outbuf		2580686	0					
ANR	2581230	Identifier	upd		2580686	0					
ANR	2581231	Identifier	outbuf		2580686	1					
ANR	2581232	Identifier	ioutbuf		2580686	1					
ANR	2581233	Argument	upd -> strings [ S_YSTEP ] . data		2580686	1					
ANR	2581234	MemberAccess	upd -> strings [ S_YSTEP ] . data		2580686	0					
ANR	2581235	ArrayIndexing	upd -> strings [ S_YSTEP ]		2580686	0					
ANR	2581236	PtrMemberAccess	upd -> strings		2580686	0					
ANR	2581237	Identifier	upd		2580686	0					
ANR	2581238	Identifier	strings		2580686	1					
ANR	2581239	Identifier	S_YSTEP		2580686	1					
ANR	2581240	Identifier	data		2580686	1					
ANR	2581241	Argument	upd -> strings [ S_YSTEP ] . size		2580686	2					
ANR	2581242	MemberAccess	upd -> strings [ S_YSTEP ] . size		2580686	0					
ANR	2581243	ArrayIndexing	upd -> strings [ S_YSTEP ]		2580686	0					
ANR	2581244	PtrMemberAccess	upd -> strings		2580686	0					
ANR	2581245	Identifier	upd		2580686	0					
ANR	2581246	Identifier	strings		2580686	1					
ANR	2581247	Identifier	S_YSTEP		2580686	1					
ANR	2581248	Identifier	size		2580686	1					
ANR	2581249	ExpressionStatement	ioutbuf += upd -> strings [ S_YSTEP ] . size	5924:15:211828:211865	2580686	1	True				
ANR	2581250	AssignmentExpression	ioutbuf += upd -> strings [ S_YSTEP ] . size		2580686	0		+=			
ANR	2581251	Identifier	ioutbuf		2580686	0					
ANR	2581252	MemberAccess	upd -> strings [ S_YSTEP ] . size		2580686	1					
ANR	2581253	ArrayIndexing	upd -> strings [ S_YSTEP ]		2580686	0					
ANR	2581254	PtrMemberAccess	upd -> strings		2580686	0					
ANR	2581255	Identifier	upd		2580686	0					
ANR	2581256	Identifier	strings		2580686	1					
ANR	2581257	Identifier	S_YSTEP		2580686	1					
ANR	2581258	Identifier	size		2580686	1					
ANR	2581259	ExpressionStatement	upd -> yprinter = upd -> yscan	5928:9:211902:211928	2580686	4	True				
ANR	2581260	AssignmentExpression	upd -> yprinter = upd -> yscan		2580686	0		=			
ANR	2581261	PtrMemberAccess	upd -> yprinter		2580686	0					
ANR	2581262	Identifier	upd		2580686	0					
ANR	2581263	Identifier	yprinter		2580686	1					
ANR	2581264	PtrMemberAccess	upd -> yscan		2580686	1					
ANR	2581265	Identifier	upd		2580686	0					
ANR	2581266	Identifier	yscan		2580686	1					
ANR	2581267	ExpressionStatement	icomp = 0	5940:6:212180:212187	2580686	3	True				
ANR	2581268	AssignmentExpression	icomp = 0		2580686	0		=			
ANR	2581269	Identifier	icomp		2580686	0					
ANR	2581270	PrimaryExpression	0		2580686	1					
ANR	2581271	IfStatement	if ( ( 0 < upd -> string_a [ SA_SETCOMP ] . size ) )		2580686	4					
ANR	2581272	Condition	0 < upd -> string_a [ SA_SETCOMP ] . size	5941:9:212198:212233	2580686	0	True				
ANR	2581273	RelationalExpression	0 < upd -> string_a [ SA_SETCOMP ] . size		2580686	0		<			
ANR	2581274	PrimaryExpression	0		2580686	0					
ANR	2581275	MemberAccess	upd -> string_a [ SA_SETCOMP ] . size		2580686	1					
ANR	2581276	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2580686	0					
ANR	2581277	PtrMemberAccess	upd -> string_a		2580686	0					
ANR	2581278	Identifier	upd		2580686	0					
ANR	2581279	Identifier	string_a		2580686	1					
ANR	2581280	Identifier	SA_SETCOMP		2580686	1					
ANR	2581281	Identifier	size		2580686	1					
ANR	2581282	CompoundStatement		104:52:3247:3247	2580686	1					
ANR	2581283	ExpressionStatement	upd -> icomp = icomp	5943:9:212328:212346	2580686	0	True				
ANR	2581284	AssignmentExpression	upd -> icomp = icomp		2580686	0		=			
ANR	2581285	PtrMemberAccess	upd -> icomp		2580686	0					
ANR	2581286	Identifier	upd		2580686	0					
ANR	2581287	Identifier	icomp		2580686	1					
ANR	2581288	Identifier	icomp		2580686	1					
ANR	2581289	IfStatement	if ( 0 < upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size )		2580686	1					
ANR	2581290	Condition	0 < upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size	5944:12:212360:212405	2580686	0	True				
ANR	2581291	RelationalExpression	0 < upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2580686	0		<			
ANR	2581292	PrimaryExpression	0		2580686	0					
ANR	2581293	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2580686	1					
ANR	2581294	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		2580686	0					
ANR	2581295	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		2580686	0					
ANR	2581296	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2580686	0					
ANR	2581297	PtrMemberAccess	upd -> string_a		2580686	0					
ANR	2581298	Identifier	upd		2580686	0					
ANR	2581299	Identifier	string_a		2580686	1					
ANR	2581300	Identifier	SA_SETCOMP		2580686	1					
ANR	2581301	Identifier	data		2580686	1					
ANR	2581302	Identifier	icomp		2580686	1					
ANR	2581303	Identifier	size		2580686	1					
ANR	2581304	CompoundStatement		106:60:3362:3362	2580686	1					
ANR	2581305	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size )"	5945:12:212422:212583	2580686	0	True				
ANR	2581306	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size )"		2580686	0					
ANR	2581307	Callee	memcpy		2580686	0					
ANR	2581308	Identifier	memcpy		2580686	0					
ANR	2581309	ArgumentList	upd -> outbuf + ioutbuf		2580686	1					
ANR	2581310	Argument	upd -> outbuf + ioutbuf		2580686	0					
ANR	2581311	AdditiveExpression	upd -> outbuf + ioutbuf		2580686	0		+			
ANR	2581312	PtrMemberAccess	upd -> outbuf		2580686	0					
ANR	2581313	Identifier	upd		2580686	0					
ANR	2581314	Identifier	outbuf		2580686	1					
ANR	2581315	Identifier	ioutbuf		2580686	1					
ANR	2581316	Argument	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data		2580686	1					
ANR	2581317	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data		2580686	0					
ANR	2581318	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		2580686	0					
ANR	2581319	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		2580686	0					
ANR	2581320	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2580686	0					
ANR	2581321	PtrMemberAccess	upd -> string_a		2580686	0					
ANR	2581322	Identifier	upd		2580686	0					
ANR	2581323	Identifier	string_a		2580686	1					
ANR	2581324	Identifier	SA_SETCOMP		2580686	1					
ANR	2581325	Identifier	data		2580686	1					
ANR	2581326	Identifier	icomp		2580686	1					
ANR	2581327	Identifier	data		2580686	1					
ANR	2581328	Argument	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2580686	2					
ANR	2581329	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2580686	0					
ANR	2581330	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		2580686	0					
ANR	2581331	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		2580686	0					
ANR	2581332	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2580686	0					
ANR	2581333	PtrMemberAccess	upd -> string_a		2580686	0					
ANR	2581334	Identifier	upd		2580686	0					
ANR	2581335	Identifier	string_a		2580686	1					
ANR	2581336	Identifier	SA_SETCOMP		2580686	1					
ANR	2581337	Identifier	data		2580686	1					
ANR	2581338	Identifier	icomp		2580686	1					
ANR	2581339	Identifier	size		2580686	1					
ANR	2581340	ExpressionStatement	ioutbuf += upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size	5948:12:212597:212650	2580686	1	True				
ANR	2581341	AssignmentExpression	ioutbuf += upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2580686	0		+=			
ANR	2581342	Identifier	ioutbuf		2580686	0					
ANR	2581343	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2580686	1					
ANR	2581344	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		2580686	0					
ANR	2581345	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		2580686	0					
ANR	2581346	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2580686	0					
ANR	2581347	PtrMemberAccess	upd -> string_a		2580686	0					
ANR	2581348	Identifier	upd		2580686	0					
ANR	2581349	Identifier	string_a		2580686	1					
ANR	2581350	Identifier	SA_SETCOMP		2580686	1					
ANR	2581351	Identifier	data		2580686	1					
ANR	2581352	Identifier	icomp		2580686	1					
ANR	2581353	Identifier	size		2580686	1					
ANR	2581354	IfStatement	if ( xbegin != upd -> xprinter )		2580686	5					
ANR	2581355	Condition	xbegin != upd -> xprinter	5954:9:212778:212800	2580686	0	True				
ANR	2581356	EqualityExpression	xbegin != upd -> xprinter		2580686	0		!=			
ANR	2581357	Identifier	xbegin		2580686	0					
ANR	2581358	PtrMemberAccess	upd -> xprinter		2580686	1					
ANR	2581359	Identifier	upd		2580686	0					
ANR	2581360	Identifier	xprinter		2580686	1					
ANR	2581361	CompoundStatement		116:34:3757:3757	2580686	1					
ANR	2581362	IfStatement	if ( 0 == upd -> strings [ S_XMOVE ] . size )		2580686	0					
ANR	2581363	Condition	0 == upd -> strings [ S_XMOVE ] . size	5956:12:212818:212848	2580686	0	True				
ANR	2581364	EqualityExpression	0 == upd -> strings [ S_XMOVE ] . size		2580686	0		==			
ANR	2581365	PrimaryExpression	0		2580686	0					
ANR	2581366	MemberAccess	upd -> strings [ S_XMOVE ] . size		2580686	1					
ANR	2581367	ArrayIndexing	upd -> strings [ S_XMOVE ]		2580686	0					
ANR	2581368	PtrMemberAccess	upd -> strings		2580686	0					
ANR	2581369	Identifier	upd		2580686	0					
ANR	2581370	Identifier	strings		2580686	1					
ANR	2581371	Identifier	S_XMOVE		2580686	1					
ANR	2581372	Identifier	size		2580686	1					
ANR	2581373	CompoundStatement		118:45:3805:3805	2580686	1					
ANR	2581374	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = '\\r'	5958:12:212866:212895	2580686	0	True				
ANR	2581375	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = '\\r'		2580686	0		=			
ANR	2581376	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2580686	0					
ANR	2581377	PtrMemberAccess	upd -> outbuf		2580686	0					
ANR	2581378	Identifier	upd		2580686	0					
ANR	2581379	Identifier	outbuf		2580686	1					
ANR	2581380	PostIncDecOperationExpression	ioutbuf ++		2580686	1					
ANR	2581381	Identifier	ioutbuf		2580686	0					
ANR	2581382	IncDec	++		2580686	1					
ANR	2581383	PrimaryExpression	'\\r'		2580686	1					
ANR	2581384	ExpressionStatement	upd -> xprinter = 0	5959:12:212909:212936	2580686	1	True				
ANR	2581385	AssignmentExpression	upd -> xprinter = 0		2580686	0		=			
ANR	2581386	PtrMemberAccess	upd -> xprinter		2580686	0					
ANR	2581387	Identifier	upd		2580686	0					
ANR	2581388	Identifier	xprinter		2580686	1					
ANR	2581389	PrimaryExpression	0		2580686	1					
ANR	2581390	ExpressionStatement	n = 0	5960:12:212950:212955	2580686	2	True				
ANR	2581391	AssignmentExpression	n = 0		2580686	0		=			
ANR	2581392	Identifier	n		2580686	0					
ANR	2581393	PrimaryExpression	0		2580686	1					
ANR	2581394	ExpressionStatement	x = 0	5961:12:212969:212974	2580686	3	True				
ANR	2581395	AssignmentExpression	x = 0		2580686	0		=			
ANR	2581396	Identifier	x		2580686	0					
ANR	2581397	PrimaryExpression	0		2580686	1					
ANR	2581398	ElseStatement	else		2580686	0					
ANR	2581399	CompoundStatement		125:16:3947:3947	2580686	0					
ANR	2581400	IfStatement	if ( B_XABS & upd -> flags )		2580686	0					
ANR	2581401	Condition	B_XABS & upd -> flags	5965:15:213011:213029	2580686	0	True				
ANR	2581402	BitAndExpression	B_XABS & upd -> flags		2580686	0		&			
ANR	2581403	Identifier	B_XABS		2580686	0					
ANR	2581404	PtrMemberAccess	upd -> flags		2580686	1					
ANR	2581405	Identifier	upd		2580686	0					
ANR	2581406	Identifier	flags		2580686	1					
ANR	2581407	ExpressionStatement	n = x = xbegin + upd -> ints [ I_XOFS ]	5965:36:213032:213066	2580686	1	True				
ANR	2581408	AssignmentExpression	n = x = xbegin + upd -> ints [ I_XOFS ]		2580686	0		=			
ANR	2581409	Identifier	n		2580686	0					
ANR	2581410	AssignmentExpression	x = xbegin + upd -> ints [ I_XOFS ]		2580686	1		=			
ANR	2581411	Identifier	x		2580686	0					
ANR	2581412	AdditiveExpression	xbegin + upd -> ints [ I_XOFS ]		2580686	1		+			
ANR	2581413	Identifier	xbegin		2580686	0					
ANR	2581414	ArrayIndexing	upd -> ints [ I_XOFS ]		2580686	1					
ANR	2581415	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2581416	Identifier	upd		2580686	0					
ANR	2581417	Identifier	ints		2580686	1					
ANR	2581418	Identifier	I_XOFS		2580686	1					
ANR	2581419	ElseStatement	else		2580686	0					
ANR	2581420	ExpressionStatement	n = x = xbegin - upd -> xprinter	5966:36:213104:213134	2580686	0	True				
ANR	2581421	AssignmentExpression	n = x = xbegin - upd -> xprinter		2580686	0		=			
ANR	2581422	Identifier	n		2580686	0					
ANR	2581423	AssignmentExpression	x = xbegin - upd -> xprinter		2580686	1		=			
ANR	2581424	Identifier	x		2580686	0					
ANR	2581425	AdditiveExpression	xbegin - upd -> xprinter		2580686	1		-			
ANR	2581426	Identifier	xbegin		2580686	0					
ANR	2581427	PtrMemberAccess	upd -> xprinter		2580686	1					
ANR	2581428	Identifier	upd		2580686	0					
ANR	2581429	Identifier	xprinter		2580686	1					
ANR	2581430	IfStatement	if ( 1 < upd -> ints [ I_XSTEP ] )		2580686	1					
ANR	2581431	Condition	1 < upd -> ints [ I_XSTEP ]	5968:23:213160:213181	2580686	0	True				
ANR	2581432	RelationalExpression	1 < upd -> ints [ I_XSTEP ]		2580686	0		<			
ANR	2581433	PrimaryExpression	1		2580686	0					
ANR	2581434	ArrayIndexing	upd -> ints [ I_XSTEP ]		2580686	1					
ANR	2581435	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2581436	Identifier	upd		2580686	0					
ANR	2581437	Identifier	ints		2580686	1					
ANR	2581438	Identifier	I_XSTEP		2580686	1					
ANR	2581439	CompoundStatement		130:47:4138:4138	2580686	1					
ANR	2581440	IfStatement	if ( 0 > n )		2580686	0					
ANR	2581441	Condition	0 > n	5969:18:213204:213208	2580686	0	True				
ANR	2581442	RelationalExpression	0 > n		2580686	0		>			
ANR	2581443	PrimaryExpression	0		2580686	0					
ANR	2581444	Identifier	n		2580686	1					
ANR	2581445	CompoundStatement		131:25:4165:4165	2580686	1					
ANR	2581446	ExpressionStatement	n -= upd -> ints [ I_XSTEP ]	5970:18:213231:213255	2580686	0	True				
ANR	2581447	AssignmentExpression	n -= upd -> ints [ I_XSTEP ]		2580686	0		-=			
ANR	2581448	Identifier	n		2580686	0					
ANR	2581449	ArrayIndexing	upd -> ints [ I_XSTEP ]		2580686	1					
ANR	2581450	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2581451	Identifier	upd		2580686	0					
ANR	2581452	Identifier	ints		2580686	1					
ANR	2581453	Identifier	I_XSTEP		2580686	1					
ANR	2581454	ExpressionStatement	x -= n	5971:18:213275:213282	2580686	1	True				
ANR	2581455	AssignmentExpression	x -= n		2580686	0		-=			
ANR	2581456	Identifier	x		2580686	0					
ANR	2581457	Identifier	n		2580686	1					
ANR	2581458	IfStatement	if ( n )		2580686	1					
ANR	2581459	Condition	n	5973:18:213319:213319	2580686	0	True				
ANR	2581460	Identifier	n		2580686	0					
ANR	2581461	ExpressionStatement	n /= upd -> ints [ I_XSTEP ]	5973:21:213322:213346	2580686	1	True				
ANR	2581462	AssignmentExpression	n /= upd -> ints [ I_XSTEP ]		2580686	0		/=			
ANR	2581463	Identifier	n		2580686	0					
ANR	2581464	ArrayIndexing	upd -> ints [ I_XSTEP ]		2580686	1					
ANR	2581465	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2581466	Identifier	upd		2580686	0					
ANR	2581467	Identifier	ints		2580686	1					
ANR	2581468	Identifier	I_XSTEP		2580686	1					
ANR	2581469	IfStatement	if ( x )		2580686	2					
ANR	2581470	Condition	x	5974:18:213384:213384	2580686	0	True				
ANR	2581471	Identifier	x		2580686	0					
ANR	2581472	ExpressionStatement	x %= upd -> ints [ I_XSTEP ]	5974:21:213387:213411	2580686	1	True				
ANR	2581473	AssignmentExpression	x %= upd -> ints [ I_XSTEP ]		2580686	0		%=			
ANR	2581474	Identifier	x		2580686	0					
ANR	2581475	ArrayIndexing	upd -> ints [ I_XSTEP ]		2580686	1					
ANR	2581476	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2581477	Identifier	upd		2580686	0					
ANR	2581478	Identifier	ints		2580686	1					
ANR	2581479	Identifier	I_XSTEP		2580686	1					
ANR	2581480	ElseStatement	else		2580686	0					
ANR	2581481	IfStatement	if ( - 1 > upd -> ints [ I_XSTEP ] )		2580686	0					
ANR	2581482	Condition	- 1 > upd -> ints [ I_XSTEP ]	5976:22:213454:213476	2580686	0	True				
ANR	2581483	RelationalExpression	- 1 > upd -> ints [ I_XSTEP ]		2580686	0		>			
ANR	2581484	UnaryOperationExpression	- 1		2580686	0					
ANR	2581485	UnaryOperator	-		2580686	0					
ANR	2581486	PrimaryExpression	1		2580686	1					
ANR	2581487	ArrayIndexing	upd -> ints [ I_XSTEP ]		2580686	1					
ANR	2581488	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2581489	Identifier	upd		2580686	0					
ANR	2581490	Identifier	ints		2580686	1					
ANR	2581491	Identifier	I_XSTEP		2580686	1					
ANR	2581492	CompoundStatement		138:47:4433:4433	2580686	1					
ANR	2581493	ExpressionStatement	n *= - upd -> ints [ I_XSTEP ]	5977:15:213496:213520	2580686	0	True				
ANR	2581494	AssignmentExpression	n *= - upd -> ints [ I_XSTEP ]		2580686	0		*=			
ANR	2581495	Identifier	n		2580686	0					
ANR	2581496	UnaryOperationExpression	- upd -> ints [ I_XSTEP ]		2580686	1					
ANR	2581497	UnaryOperator	-		2580686	0					
ANR	2581498	ArrayIndexing	upd -> ints [ I_XSTEP ]		2580686	1					
ANR	2581499	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2581500	Identifier	upd		2580686	0					
ANR	2581501	Identifier	ints		2580686	1					
ANR	2581502	Identifier	I_XSTEP		2580686	1					
ANR	2581503	ExpressionStatement	x = 0	5978:15:213558:213564	2580686	1	True				
ANR	2581504	AssignmentExpression	x = 0		2580686	0		=			
ANR	2581505	Identifier	x		2580686	0					
ANR	2581506	PrimaryExpression	0		2580686	1					
ANR	2581507	IfStatement	if ( n )		2580686	2					
ANR	2581508	Condition	n	5981:15:213596:213596	2580686	0	True				
ANR	2581509	Identifier	n		2580686	0					
ANR	2581510	CompoundStatement		143:18:4553:4553	2580686	1					
ANR	2581511	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XMOVE ] . data , upd -> strings [ S_XMOVE ] . size )"	5983:14:213640:213775	2580686	0	True				
ANR	2581512	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XMOVE ] . data , upd -> strings [ S_XMOVE ] . size )"		2580686	0					
ANR	2581513	Callee	memcpy		2580686	0					
ANR	2581514	Identifier	memcpy		2580686	0					
ANR	2581515	ArgumentList	upd -> outbuf + ioutbuf		2580686	1					
ANR	2581516	Argument	upd -> outbuf + ioutbuf		2580686	0					
ANR	2581517	AdditiveExpression	upd -> outbuf + ioutbuf		2580686	0		+			
ANR	2581518	PtrMemberAccess	upd -> outbuf		2580686	0					
ANR	2581519	Identifier	upd		2580686	0					
ANR	2581520	Identifier	outbuf		2580686	1					
ANR	2581521	Identifier	ioutbuf		2580686	1					
ANR	2581522	Argument	upd -> strings [ S_XMOVE ] . data		2580686	1					
ANR	2581523	MemberAccess	upd -> strings [ S_XMOVE ] . data		2580686	0					
ANR	2581524	ArrayIndexing	upd -> strings [ S_XMOVE ]		2580686	0					
ANR	2581525	PtrMemberAccess	upd -> strings		2580686	0					
ANR	2581526	Identifier	upd		2580686	0					
ANR	2581527	Identifier	strings		2580686	1					
ANR	2581528	Identifier	S_XMOVE		2580686	1					
ANR	2581529	Identifier	data		2580686	1					
ANR	2581530	Argument	upd -> strings [ S_XMOVE ] . size		2580686	2					
ANR	2581531	MemberAccess	upd -> strings [ S_XMOVE ] . size		2580686	0					
ANR	2581532	ArrayIndexing	upd -> strings [ S_XMOVE ]		2580686	0					
ANR	2581533	PtrMemberAccess	upd -> strings		2580686	0					
ANR	2581534	Identifier	upd		2580686	0					
ANR	2581535	Identifier	strings		2580686	1					
ANR	2581536	Identifier	S_XMOVE		2580686	1					
ANR	2581537	Identifier	size		2580686	1					
ANR	2581538	ExpressionStatement	ioutbuf += upd -> strings [ S_XMOVE ] . size	5986:15:213792:213829	2580686	1	True				
ANR	2581539	AssignmentExpression	ioutbuf += upd -> strings [ S_XMOVE ] . size		2580686	0		+=			
ANR	2581540	Identifier	ioutbuf		2580686	0					
ANR	2581541	MemberAccess	upd -> strings [ S_XMOVE ] . size		2580686	1					
ANR	2581542	ArrayIndexing	upd -> strings [ S_XMOVE ]		2580686	0					
ANR	2581543	PtrMemberAccess	upd -> strings		2580686	0					
ANR	2581544	Identifier	upd		2580686	0					
ANR	2581545	Identifier	strings		2580686	1					
ANR	2581546	Identifier	S_XMOVE		2580686	1					
ANR	2581547	Identifier	size		2580686	1					
ANR	2581548	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = n & 0xff	5988:15:213847:213885	2580686	2	True				
ANR	2581549	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = n & 0xff		2580686	0		=			
ANR	2581550	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2580686	0					
ANR	2581551	PtrMemberAccess	upd -> outbuf		2580686	0					
ANR	2581552	Identifier	upd		2580686	0					
ANR	2581553	Identifier	outbuf		2580686	1					
ANR	2581554	PostIncDecOperationExpression	ioutbuf ++		2580686	1					
ANR	2581555	Identifier	ioutbuf		2580686	0					
ANR	2581556	IncDec	++		2580686	1					
ANR	2581557	BitAndExpression	n & 0xff		2580686	1		&			
ANR	2581558	Identifier	n		2580686	0					
ANR	2581559	PrimaryExpression	0xff		2580686	1					
ANR	2581560	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff	5989:15:213902:213940	2580686	3	True				
ANR	2581561	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff		2580686	0		=			
ANR	2581562	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2580686	0					
ANR	2581563	PtrMemberAccess	upd -> outbuf		2580686	0					
ANR	2581564	Identifier	upd		2580686	0					
ANR	2581565	Identifier	outbuf		2580686	1					
ANR	2581566	PostIncDecOperationExpression	ioutbuf ++		2580686	1					
ANR	2581567	Identifier	ioutbuf		2580686	0					
ANR	2581568	IncDec	++		2580686	1					
ANR	2581569	BitAndExpression	( n >> 8 ) & 0xff		2580686	1		&			
ANR	2581570	ShiftExpression	n >> 8		2580686	0		>>			
ANR	2581571	Identifier	n		2580686	0					
ANR	2581572	PrimaryExpression	8		2580686	1					
ANR	2581573	PrimaryExpression	0xff		2580686	1					
ANR	2581574	IfStatement	if ( x && 0 < upd -> strings [ S_XSTEP ] . size )		2580686	1					
ANR	2581575	Condition	x && 0 < upd -> strings [ S_XSTEP ] . size	5995:12:214012:214046	2580686	0	True				
ANR	2581576	AndExpression	x && 0 < upd -> strings [ S_XSTEP ] . size		2580686	0		&&			
ANR	2581577	Identifier	x		2580686	0					
ANR	2581578	RelationalExpression	0 < upd -> strings [ S_XSTEP ] . size		2580686	1		<			
ANR	2581579	PrimaryExpression	0		2580686	0					
ANR	2581580	MemberAccess	upd -> strings [ S_XSTEP ] . size		2580686	1					
ANR	2581581	ArrayIndexing	upd -> strings [ S_XSTEP ]		2580686	0					
ANR	2581582	PtrMemberAccess	upd -> strings		2580686	0					
ANR	2581583	Identifier	upd		2580686	0					
ANR	2581584	Identifier	strings		2580686	1					
ANR	2581585	Identifier	S_XSTEP		2580686	1					
ANR	2581586	Identifier	size		2580686	1					
ANR	2581587	CompoundStatement		157:49:5003:5003	2580686	1					
ANR	2581588	WhileStatement	while ( x -- )		2580686	0					
ANR	2581589	Condition	x --	5996:18:214089:214091	2580686	0	True				
ANR	2581590	PostIncDecOperationExpression	x --		2580686	0					
ANR	2581591	Identifier	x		2580686	0					
ANR	2581592	IncDec	--		2580686	1					
ANR	2581593	CompoundStatement		158:23:5048:5048	2580686	1					
ANR	2581594	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XSTEP ] . data , upd -> strings [ S_XSTEP ] . size )"	5997:15:214111:214246	2580686	0	True				
ANR	2581595	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XSTEP ] . data , upd -> strings [ S_XSTEP ] . size )"		2580686	0					
ANR	2581596	Callee	memcpy		2580686	0					
ANR	2581597	Identifier	memcpy		2580686	0					
ANR	2581598	ArgumentList	upd -> outbuf + ioutbuf		2580686	1					
ANR	2581599	Argument	upd -> outbuf + ioutbuf		2580686	0					
ANR	2581600	AdditiveExpression	upd -> outbuf + ioutbuf		2580686	0		+			
ANR	2581601	PtrMemberAccess	upd -> outbuf		2580686	0					
ANR	2581602	Identifier	upd		2580686	0					
ANR	2581603	Identifier	outbuf		2580686	1					
ANR	2581604	Identifier	ioutbuf		2580686	1					
ANR	2581605	Argument	upd -> strings [ S_XSTEP ] . data		2580686	1					
ANR	2581606	MemberAccess	upd -> strings [ S_XSTEP ] . data		2580686	0					
ANR	2581607	ArrayIndexing	upd -> strings [ S_XSTEP ]		2580686	0					
ANR	2581608	PtrMemberAccess	upd -> strings		2580686	0					
ANR	2581609	Identifier	upd		2580686	0					
ANR	2581610	Identifier	strings		2580686	1					
ANR	2581611	Identifier	S_XSTEP		2580686	1					
ANR	2581612	Identifier	data		2580686	1					
ANR	2581613	Argument	upd -> strings [ S_XSTEP ] . size		2580686	2					
ANR	2581614	MemberAccess	upd -> strings [ S_XSTEP ] . size		2580686	0					
ANR	2581615	ArrayIndexing	upd -> strings [ S_XSTEP ]		2580686	0					
ANR	2581616	PtrMemberAccess	upd -> strings		2580686	0					
ANR	2581617	Identifier	upd		2580686	0					
ANR	2581618	Identifier	strings		2580686	1					
ANR	2581619	Identifier	S_XSTEP		2580686	1					
ANR	2581620	Identifier	size		2580686	1					
ANR	2581621	ExpressionStatement	ioutbuf += upd -> strings [ S_XSTEP ] . size	6000:15:214263:214300	2580686	1	True				
ANR	2581622	AssignmentExpression	ioutbuf += upd -> strings [ S_XSTEP ] . size		2580686	0		+=			
ANR	2581623	Identifier	ioutbuf		2580686	0					
ANR	2581624	MemberAccess	upd -> strings [ S_XSTEP ] . size		2580686	1					
ANR	2581625	ArrayIndexing	upd -> strings [ S_XSTEP ]		2580686	0					
ANR	2581626	PtrMemberAccess	upd -> strings		2580686	0					
ANR	2581627	Identifier	upd		2580686	0					
ANR	2581628	Identifier	strings		2580686	1					
ANR	2581629	Identifier	S_XSTEP		2580686	1					
ANR	2581630	Identifier	size		2580686	1					
ANR	2581631	ExpressionStatement	upd -> xprinter = xend + 1	6004:6:214401:214423	2580686	6	True				
ANR	2581632	AssignmentExpression	upd -> xprinter = xend + 1		2580686	0		=			
ANR	2581633	PtrMemberAccess	upd -> xprinter		2580686	0					
ANR	2581634	Identifier	upd		2580686	0					
ANR	2581635	Identifier	xprinter		2580686	1					
ANR	2581636	AdditiveExpression	xend + 1		2580686	1		+			
ANR	2581637	Identifier	xend		2580686	0					
ANR	2581638	PrimaryExpression	1		2580686	1					
ANR	2581639	IfStatement	if ( 0 < upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size )		2580686	7					
ANR	2581640	Condition	0 < upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size	6009:9:214497:214544	2580686	0	True				
ANR	2581641	RelationalExpression	0 < upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2580686	0		<			
ANR	2581642	PrimaryExpression	0		2580686	0					
ANR	2581643	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2580686	1					
ANR	2581644	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		2580686	0					
ANR	2581645	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		2580686	0					
ANR	2581646	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2580686	0					
ANR	2581647	PtrMemberAccess	upd -> string_a		2580686	0					
ANR	2581648	Identifier	upd		2580686	0					
ANR	2581649	Identifier	string_a		2580686	1					
ANR	2581650	Identifier	SA_WRITECOMP		2580686	1					
ANR	2581651	Identifier	data		2580686	1					
ANR	2581652	Identifier	icomp		2580686	1					
ANR	2581653	Identifier	size		2580686	1					
ANR	2581654	CompoundStatement		171:59:5501:5501	2580686	1					
ANR	2581655	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size )"	6010:9:214558:214717	2580686	0	True				
ANR	2581656	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size )"		2580686	0					
ANR	2581657	Callee	memcpy		2580686	0					
ANR	2581658	Identifier	memcpy		2580686	0					
ANR	2581659	ArgumentList	upd -> outbuf + ioutbuf		2580686	1					
ANR	2581660	Argument	upd -> outbuf + ioutbuf		2580686	0					
ANR	2581661	AdditiveExpression	upd -> outbuf + ioutbuf		2580686	0		+			
ANR	2581662	PtrMemberAccess	upd -> outbuf		2580686	0					
ANR	2581663	Identifier	upd		2580686	0					
ANR	2581664	Identifier	outbuf		2580686	1					
ANR	2581665	Identifier	ioutbuf		2580686	1					
ANR	2581666	Argument	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		2580686	1					
ANR	2581667	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		2580686	0					
ANR	2581668	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		2580686	0					
ANR	2581669	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		2580686	0					
ANR	2581670	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2580686	0					
ANR	2581671	PtrMemberAccess	upd -> string_a		2580686	0					
ANR	2581672	Identifier	upd		2580686	0					
ANR	2581673	Identifier	string_a		2580686	1					
ANR	2581674	Identifier	SA_WRITECOMP		2580686	1					
ANR	2581675	Identifier	data		2580686	1					
ANR	2581676	Identifier	icomp		2580686	1					
ANR	2581677	Identifier	data		2580686	1					
ANR	2581678	Argument	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2580686	2					
ANR	2581679	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2580686	0					
ANR	2581680	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		2580686	0					
ANR	2581681	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		2580686	0					
ANR	2581682	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2580686	0					
ANR	2581683	PtrMemberAccess	upd -> string_a		2580686	0					
ANR	2581684	Identifier	upd		2580686	0					
ANR	2581685	Identifier	string_a		2580686	1					
ANR	2581686	Identifier	SA_WRITECOMP		2580686	1					
ANR	2581687	Identifier	data		2580686	1					
ANR	2581688	Identifier	icomp		2580686	1					
ANR	2581689	Identifier	size		2580686	1					
ANR	2581690	ExpressionStatement	ioutbuf += upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size	6013:9:214728:214783	2580686	1	True				
ANR	2581691	AssignmentExpression	ioutbuf += upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2580686	0		+=			
ANR	2581692	Identifier	ioutbuf		2580686	0					
ANR	2581693	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2580686	1					
ANR	2581694	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		2580686	0					
ANR	2581695	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		2580686	0					
ANR	2581696	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2580686	0					
ANR	2581697	PtrMemberAccess	upd -> string_a		2580686	0					
ANR	2581698	Identifier	upd		2580686	0					
ANR	2581699	Identifier	string_a		2580686	1					
ANR	2581700	Identifier	SA_WRITECOMP		2580686	1					
ANR	2581701	Identifier	data		2580686	1					
ANR	2581702	Identifier	icomp		2580686	1					
ANR	2581703	Identifier	size		2580686	1					
ANR	2581704	ExpressionStatement	n = xend + 1 - xbegin	6015:6:214799:214820	2580686	8	True				
ANR	2581705	AssignmentExpression	n = xend + 1 - xbegin		2580686	0		=			
ANR	2581706	Identifier	n		2580686	0					
ANR	2581707	AdditiveExpression	xend + 1 - xbegin		2580686	1		+			
ANR	2581708	Identifier	xend		2580686	0					
ANR	2581709	AdditiveExpression	1 - xbegin		2580686	1		-			
ANR	2581710	PrimaryExpression	1		2580686	0					
ANR	2581711	Identifier	xbegin		2580686	1					
ANR	2581712	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n << 3 ) & 255	6016:6:214828:214865	2580686	9	True				
ANR	2581713	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n << 3 ) & 255		2580686	0		=			
ANR	2581714	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2580686	0					
ANR	2581715	PtrMemberAccess	upd -> outbuf		2580686	0					
ANR	2581716	Identifier	upd		2580686	0					
ANR	2581717	Identifier	outbuf		2580686	1					
ANR	2581718	PostIncDecOperationExpression	ioutbuf ++		2580686	1					
ANR	2581719	Identifier	ioutbuf		2580686	0					
ANR	2581720	IncDec	++		2580686	1					
ANR	2581721	BitAndExpression	( n << 3 ) & 255		2580686	1		&			
ANR	2581722	ShiftExpression	n << 3		2580686	0		<<			
ANR	2581723	Identifier	n		2580686	0					
ANR	2581724	PrimaryExpression	3		2580686	1					
ANR	2581725	PrimaryExpression	255		2580686	1					
ANR	2581726	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n >> 5 ) & 255	6017:6:214873:214910	2580686	10	True				
ANR	2581727	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n >> 5 ) & 255		2580686	0		=			
ANR	2581728	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2580686	0					
ANR	2581729	PtrMemberAccess	upd -> outbuf		2580686	0					
ANR	2581730	Identifier	upd		2580686	0					
ANR	2581731	Identifier	outbuf		2580686	1					
ANR	2581732	PostIncDecOperationExpression	ioutbuf ++		2580686	1					
ANR	2581733	Identifier	ioutbuf		2580686	0					
ANR	2581734	IncDec	++		2580686	1					
ANR	2581735	BitAndExpression	( n >> 5 ) & 255		2580686	1		&			
ANR	2581736	ShiftExpression	n >> 5		2580686	0		>>			
ANR	2581737	Identifier	n		2580686	0					
ANR	2581738	PrimaryExpression	5		2580686	1					
ANR	2581739	PrimaryExpression	255		2580686	1					
ANR	2581740	ExpressionStatement	irow = 0	6021:6:214947:214953	2580686	11	True				
ANR	2581741	AssignmentExpression	irow = 0		2580686	0		=			
ANR	2581742	Identifier	irow		2580686	0					
ANR	2581743	PrimaryExpression	0		2580686	1					
ANR	2581744	ForStatement	for ( pin = 0 ; pin < pintop ; ++ pin )		2580686	12					
ANR	2581745	ForInit	pin = 0 ;	6024:10:215058:215065	2580686	0	True				
ANR	2581746	AssignmentExpression	pin = 0		2580686	0		=			
ANR	2581747	Identifier	pin		2580686	0					
ANR	2581748	PrimaryExpression	0		2580686	1					
ANR	2581749	Condition	pin < pintop	6024:19:215067:215078	2580686	1	True				
ANR	2581750	RelationalExpression	pin < pintop		2580686	0		<			
ANR	2581751	Identifier	pin		2580686	0					
ANR	2581752	Identifier	pintop		2580686	1					
ANR	2581753	UnaryExpression	++ pin	6024:33:215081:215085	2580686	2	True				
ANR	2581754	IncDec	++		2580686	0					
ANR	2581755	Identifier	pin		2580686	1					
ANR	2581756	CompoundStatement		187:9:6053:6058	2580686	3					
ANR	2581757	IdentifierDeclStatement	int i ;	6025:9:215099:215104	2580686	0	True				
ANR	2581758	IdentifierDecl	i		2580686	0					
ANR	2581759	IdentifierDeclType	int		2580686	0					
ANR	2581760	Identifier	i		2580686	1					
ANR	2581761	ForStatement	for ( i = 0 ; i < upd -> ints [ I_PATRPT ] ; i ++ )		2580686	1					
ANR	2581762	ForInit	i = 0 ;	6026:13:215119:215123	2580686	0	True				
ANR	2581763	AssignmentExpression	i = 0		2580686	0		=			
ANR	2581764	Identifier	i		2580686	0					
ANR	2581765	PrimaryExpression	0		2580686	1					
ANR	2581766	Condition	i < upd -> ints [ I_PATRPT ]	6026:19:215125:215147	2580686	1	True				
ANR	2581767	RelationalExpression	i < upd -> ints [ I_PATRPT ]		2580686	0		<			
ANR	2581768	Identifier	i		2580686	0					
ANR	2581769	ArrayIndexing	upd -> ints [ I_PATRPT ]		2580686	1					
ANR	2581770	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2581771	Identifier	upd		2580686	0					
ANR	2581772	Identifier	ints		2580686	1					
ANR	2581773	Identifier	I_PATRPT		2580686	1					
ANR	2581774	PostIncDecOperationExpression	i ++	6026:44:215150:215152	2580686	2	True				
ANR	2581775	Identifier	i		2580686	0					
ANR	2581776	IncDec	++		2580686	1					
ANR	2581777	CompoundStatement		188:48:6108:6108	2580686	3					
ANR	2581778	IfStatement	if ( irow >= upd -> ints [ I_ROWS ] )		2580686	0					
ANR	2581779	Condition	irow >= upd -> ints [ I_ROWS ]	6027:15:215171:215195	2580686	0	True				
ANR	2581780	RelationalExpression	irow >= upd -> ints [ I_ROWS ]		2580686	0		>=			
ANR	2581781	Identifier	irow		2580686	0					
ANR	2581782	ArrayIndexing	upd -> ints [ I_ROWS ]		2580686	1					
ANR	2581783	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2581784	Identifier	upd		2580686	0					
ANR	2581785	Identifier	ints		2580686	1					
ANR	2581786	Identifier	I_ROWS		2580686	1					
ANR	2581787	BreakStatement	break ;	6027:42:215198:215203	2580686	1	True				
ANR	2581788	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"	6028:12:215217:215263	2580686	1	True				
ANR	2581789	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		2580686	0		+=			
ANR	2581790	Identifier	ioutbuf		2580686	0					
ANR	2581791	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		2580686	1					
ANR	2581792	Callee	upd_rle		2580686	0					
ANR	2581793	Identifier	upd_rle		2580686	0					
ANR	2581794	ArgumentList	upd -> outbuf + ioutbuf		2580686	1					
ANR	2581795	Argument	upd -> outbuf + ioutbuf		2580686	0					
ANR	2581796	AdditiveExpression	upd -> outbuf + ioutbuf		2580686	0		+			
ANR	2581797	PtrMemberAccess	upd -> outbuf		2580686	0					
ANR	2581798	Identifier	upd		2580686	0					
ANR	2581799	Identifier	outbuf		2580686	1					
ANR	2581800	Identifier	ioutbuf		2580686	1					
ANR	2581801	Argument	NULL		2580686	1					
ANR	2581802	Identifier	NULL		2580686	0					
ANR	2581803	Argument	n		2580686	2					
ANR	2581804	Identifier	n		2580686	0					
ANR	2581805	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	6029:12:215277:215310	2580686	2	True				
ANR	2581806	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		2580686	0					
ANR	2581807	Callee	fwrite		2580686	0					
ANR	2581808	Identifier	fwrite		2580686	0					
ANR	2581809	ArgumentList	upd -> outbuf		2580686	1					
ANR	2581810	Argument	upd -> outbuf		2580686	0					
ANR	2581811	PtrMemberAccess	upd -> outbuf		2580686	0					
ANR	2581812	Identifier	upd		2580686	0					
ANR	2581813	Identifier	outbuf		2580686	1					
ANR	2581814	Argument	1		2580686	1					
ANR	2581815	PrimaryExpression	1		2580686	0					
ANR	2581816	Argument	ioutbuf		2580686	2					
ANR	2581817	Identifier	ioutbuf		2580686	0					
ANR	2581818	Argument	out		2580686	3					
ANR	2581819	Identifier	out		2580686	0					
ANR	2581820	ExpressionStatement	irow ++	6030:12:215324:215330	2580686	3	True				
ANR	2581821	PostIncDecOperationExpression	irow ++		2580686	0					
ANR	2581822	Identifier	irow		2580686	0					
ANR	2581823	IncDec	++		2580686	1					
ANR	2581824	ExpressionStatement	ioutbuf = 0	6031:12:215344:215355	2580686	4	True				
ANR	2581825	AssignmentExpression	ioutbuf = 0		2580686	0		=			
ANR	2581826	Identifier	ioutbuf		2580686	0					
ANR	2581827	PrimaryExpression	0		2580686	1					
ANR	2581828	ForStatement	for ( y = ybegin ; 0 > y ; y += upd -> ints [ I_NYPASS ] )		2580686	13					
ANR	2581829	ForInit	y = ybegin ;	6037:10:215489:215499	2580686	0	True				
ANR	2581830	AssignmentExpression	y = ybegin		2580686	0		=			
ANR	2581831	Identifier	y		2580686	0					
ANR	2581832	Identifier	ybegin		2580686	1					
ANR	2581833	Condition	0 > y	6037:22:215501:215505	2580686	1	True				
ANR	2581834	RelationalExpression	0 > y		2580686	0		>			
ANR	2581835	PrimaryExpression	0		2580686	0					
ANR	2581836	Identifier	y		2580686	1					
ANR	2581837	AssignmentExpression	y += upd -> ints [ I_NYPASS ]	6037:32:215511:215534	2580686	2	True	+=			
ANR	2581838	Identifier	y		2580686	0					
ANR	2581839	ArrayIndexing	upd -> ints [ I_NYPASS ]		2580686	1					
ANR	2581840	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2581841	Identifier	upd		2580686	0					
ANR	2581842	Identifier	ints		2580686	1					
ANR	2581843	Identifier	I_NYPASS		2580686	1					
ANR	2581844	CompoundStatement		201:9:6503:6508	2580686	3					
ANR	2581845	IdentifierDeclStatement	int i ;	6039:9:215549:215554	2580686	0	True				
ANR	2581846	IdentifierDecl	i		2580686	0					
ANR	2581847	IdentifierDeclType	int		2580686	0					
ANR	2581848	Identifier	i		2580686	1					
ANR	2581849	ForStatement	for ( i = 0 ; i < upd -> ints [ I_PATRPT ] ; i ++ )		2580686	1					
ANR	2581850	ForInit	i = 0 ;	6040:13:215569:215573	2580686	0	True				
ANR	2581851	AssignmentExpression	i = 0		2580686	0		=			
ANR	2581852	Identifier	i		2580686	0					
ANR	2581853	PrimaryExpression	0		2580686	1					
ANR	2581854	Condition	i < upd -> ints [ I_PATRPT ]	6040:19:215575:215597	2580686	1	True				
ANR	2581855	RelationalExpression	i < upd -> ints [ I_PATRPT ]		2580686	0		<			
ANR	2581856	Identifier	i		2580686	0					
ANR	2581857	ArrayIndexing	upd -> ints [ I_PATRPT ]		2580686	1					
ANR	2581858	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2581859	Identifier	upd		2580686	0					
ANR	2581860	Identifier	ints		2580686	1					
ANR	2581861	Identifier	I_PATRPT		2580686	1					
ANR	2581862	PostIncDecOperationExpression	i ++	6040:44:215600:215602	2580686	2	True				
ANR	2581863	Identifier	i		2580686	0					
ANR	2581864	IncDec	++		2580686	1					
ANR	2581865	CompoundStatement		202:48:6558:6558	2580686	3					
ANR	2581866	IfStatement	if ( irow >= upd -> ints [ I_ROWS ] )		2580686	0					
ANR	2581867	Condition	irow >= upd -> ints [ I_ROWS ]	6041:15:215621:215645	2580686	0	True				
ANR	2581868	RelationalExpression	irow >= upd -> ints [ I_ROWS ]		2580686	0		>=			
ANR	2581869	Identifier	irow		2580686	0					
ANR	2581870	ArrayIndexing	upd -> ints [ I_ROWS ]		2580686	1					
ANR	2581871	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2581872	Identifier	upd		2580686	0					
ANR	2581873	Identifier	ints		2580686	1					
ANR	2581874	Identifier	I_ROWS		2580686	1					
ANR	2581875	BreakStatement	break ;	6041:42:215648:215653	2580686	1	True				
ANR	2581876	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"	6042:12:215667:215713	2580686	1	True				
ANR	2581877	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		2580686	0		+=			
ANR	2581878	Identifier	ioutbuf		2580686	0					
ANR	2581879	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		2580686	1					
ANR	2581880	Callee	upd_rle		2580686	0					
ANR	2581881	Identifier	upd_rle		2580686	0					
ANR	2581882	ArgumentList	upd -> outbuf + ioutbuf		2580686	1					
ANR	2581883	Argument	upd -> outbuf + ioutbuf		2580686	0					
ANR	2581884	AdditiveExpression	upd -> outbuf + ioutbuf		2580686	0		+			
ANR	2581885	PtrMemberAccess	upd -> outbuf		2580686	0					
ANR	2581886	Identifier	upd		2580686	0					
ANR	2581887	Identifier	outbuf		2580686	1					
ANR	2581888	Identifier	ioutbuf		2580686	1					
ANR	2581889	Argument	NULL		2580686	1					
ANR	2581890	Identifier	NULL		2580686	0					
ANR	2581891	Argument	n		2580686	2					
ANR	2581892	Identifier	n		2580686	0					
ANR	2581893	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	6043:12:215727:215760	2580686	2	True				
ANR	2581894	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		2580686	0					
ANR	2581895	Callee	fwrite		2580686	0					
ANR	2581896	Identifier	fwrite		2580686	0					
ANR	2581897	ArgumentList	upd -> outbuf		2580686	1					
ANR	2581898	Argument	upd -> outbuf		2580686	0					
ANR	2581899	PtrMemberAccess	upd -> outbuf		2580686	0					
ANR	2581900	Identifier	upd		2580686	0					
ANR	2581901	Identifier	outbuf		2580686	1					
ANR	2581902	Argument	1		2580686	1					
ANR	2581903	PrimaryExpression	1		2580686	0					
ANR	2581904	Argument	ioutbuf		2580686	2					
ANR	2581905	Identifier	ioutbuf		2580686	0					
ANR	2581906	Argument	out		2580686	3					
ANR	2581907	Identifier	out		2580686	0					
ANR	2581908	ExpressionStatement	ioutbuf = 0	6044:12:215774:215785	2580686	3	True				
ANR	2581909	AssignmentExpression	ioutbuf = 0		2580686	0		=			
ANR	2581910	Identifier	ioutbuf		2580686	0					
ANR	2581911	PrimaryExpression	0		2580686	1					
ANR	2581912	ExpressionStatement	irow ++	6045:12:215799:215805	2580686	4	True				
ANR	2581913	PostIncDecOperationExpression	irow ++		2580686	0					
ANR	2581914	Identifier	irow		2580686	0					
ANR	2581915	IncDec	++		2580686	1					
ANR	2581916	ForStatement	for ( ; y < yend ; y += upd -> ints [ I_NYPASS ] )		2580686	14					
ANR	2581917	Condition	y < yend	6049:12:215839:215846	2580686	0	True				
ANR	2581918	RelationalExpression	y < yend		2580686	0		<			
ANR	2581919	Identifier	y		2580686	0					
ANR	2581920	Identifier	yend		2580686	1					
ANR	2581921	AssignmentExpression	y += upd -> ints [ I_NYPASS ]	6049:22:215849:215872	2580686	1	True	+=			
ANR	2581922	Identifier	y		2580686	0					
ANR	2581923	ArrayIndexing	upd -> ints [ I_NYPASS ]		2580686	1					
ANR	2581924	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2581925	Identifier	upd		2580686	0					
ANR	2581926	Identifier	ints		2580686	1					
ANR	2581927	Identifier	I_NYPASS		2580686	1					
ANR	2581928	CompoundStatement		213:9:6841:6881	2580686	2					
ANR	2581929	IdentifierDeclStatement	"int i , masklen = upd -> ints [ I_PATRPT ] , yinc = 0 ;"	6051:9:215887:215927	2580686	0	True				
ANR	2581930	IdentifierDecl	i		2580686	0					
ANR	2581931	IdentifierDeclType	int		2580686	0					
ANR	2581932	Identifier	i		2580686	1					
ANR	2581933	IdentifierDecl	masklen = upd -> ints [ I_PATRPT ]		2580686	1					
ANR	2581934	IdentifierDeclType	int		2580686	0					
ANR	2581935	Identifier	masklen		2580686	1					
ANR	2581936	AssignmentExpression	masklen = upd -> ints [ I_PATRPT ]		2580686	2		=			
ANR	2581937	Identifier	masklen		2580686	0					
ANR	2581938	ArrayIndexing	upd -> ints [ I_PATRPT ]		2580686	1					
ANR	2581939	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2581940	Identifier	upd		2580686	0					
ANR	2581941	Identifier	ints		2580686	1					
ANR	2581942	Identifier	I_PATRPT		2580686	1					
ANR	2581943	IdentifierDecl	yinc = 0		2580686	2					
ANR	2581944	IdentifierDeclType	int		2580686	0					
ANR	2581945	Identifier	yinc		2580686	1					
ANR	2581946	AssignmentExpression	yinc = 0		2580686	2		=			
ANR	2581947	Identifier	yinc		2580686	0					
ANR	2581948	PrimaryExpression	0		2580686	1					
ANR	2581949	ForStatement	for ( i = 0 ; ( i < upd -> ints [ I_PATRPT ] ) ; i ++ )		2580686	1					
ANR	2581950	ForInit	i = 0 ;	6053:13:215943:215947	2580686	0	True				
ANR	2581951	AssignmentExpression	i = 0		2580686	0		=			
ANR	2581952	Identifier	i		2580686	0					
ANR	2581953	PrimaryExpression	0		2580686	1					
ANR	2581954	Condition	i < upd -> ints [ I_PATRPT ]	6053:19:215949:215973	2580686	1	True				
ANR	2581955	RelationalExpression	i < upd -> ints [ I_PATRPT ]		2580686	0		<			
ANR	2581956	Identifier	i		2580686	0					
ANR	2581957	ArrayIndexing	upd -> ints [ I_PATRPT ]		2580686	1					
ANR	2581958	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2581959	Identifier	upd		2580686	0					
ANR	2581960	Identifier	ints		2580686	1					
ANR	2581961	Identifier	I_PATRPT		2580686	1					
ANR	2581962	PostIncDecOperationExpression	i ++	6053:46:215976:215978	2580686	2	True				
ANR	2581963	Identifier	i		2580686	0					
ANR	2581964	IncDec	++		2580686	1					
ANR	2581965	CompoundStatement		215:50:6934:6934	2580686	3					
ANR	2581966	IfStatement	if ( irow >= upd -> ints [ I_ROWS ] )		2580686	0					
ANR	2581967	Condition	irow >= upd -> ints [ I_ROWS ]	6054:15:215997:216021	2580686	0	True				
ANR	2581968	RelationalExpression	irow >= upd -> ints [ I_ROWS ]		2580686	0		>=			
ANR	2581969	Identifier	irow		2580686	0					
ANR	2581970	ArrayIndexing	upd -> ints [ I_ROWS ]		2580686	1					
ANR	2581971	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2581972	Identifier	upd		2580686	0					
ANR	2581973	Identifier	ints		2580686	1					
ANR	2581974	Identifier	I_ROWS		2580686	1					
ANR	2581975	BreakStatement	break ;	6054:42:216024:216029	2580686	1	True				
ANR	2581976	ExpressionStatement	imask = irow % masklen	6055:12:216043:216063	2580686	1	True				
ANR	2581977	AssignmentExpression	imask = irow % masklen		2580686	0		=			
ANR	2581978	Identifier	imask		2580686	0					
ANR	2581979	MultiplicativeExpression	irow % masklen		2580686	1		%			
ANR	2581980	Identifier	irow		2580686	0					
ANR	2581981	Identifier	masklen		2580686	1					
ANR	2581982	ExpressionStatement	icomp = upd -> int_a [ IA_ROWMASK ] . data [ imask ]	6056:12:216077:216119	2580686	2	True				
ANR	2581983	AssignmentExpression	icomp = upd -> int_a [ IA_ROWMASK ] . data [ imask ]		2580686	0		=			
ANR	2581984	Identifier	icomp		2580686	0					
ANR	2581985	ArrayIndexing	upd -> int_a [ IA_ROWMASK ] . data [ imask ]		2580686	1					
ANR	2581986	MemberAccess	upd -> int_a [ IA_ROWMASK ] . data		2580686	0					
ANR	2581987	ArrayIndexing	upd -> int_a [ IA_ROWMASK ]		2580686	0					
ANR	2581988	PtrMemberAccess	upd -> int_a		2580686	0					
ANR	2581989	Identifier	upd		2580686	0					
ANR	2581990	Identifier	int_a		2580686	1					
ANR	2581991	Identifier	IA_ROWMASK		2580686	1					
ANR	2581992	Identifier	data		2580686	1					
ANR	2581993	Identifier	imask		2580686	1					
ANR	2581994	IfStatement	if ( icomp == 0 )		2580686	3					
ANR	2581995	Condition	icomp == 0	6057:15:216136:216145	2580686	0	True				
ANR	2581996	EqualityExpression	icomp == 0		2580686	0		==			
ANR	2581997	Identifier	icomp		2580686	0					
ANR	2581998	PrimaryExpression	0		2580686	1					
ANR	2581999	CompoundStatement		219:27:7102:7102	2580686	1					
ANR	2582000	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"	6058:15:216165:216211	2580686	0	True				
ANR	2582001	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		2580686	0		+=			
ANR	2582002	Identifier	ioutbuf		2580686	0					
ANR	2582003	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		2580686	1					
ANR	2582004	Callee	upd_rle		2580686	0					
ANR	2582005	Identifier	upd_rle		2580686	0					
ANR	2582006	ArgumentList	upd -> outbuf + ioutbuf		2580686	1					
ANR	2582007	Argument	upd -> outbuf + ioutbuf		2580686	0					
ANR	2582008	AdditiveExpression	upd -> outbuf + ioutbuf		2580686	0		+			
ANR	2582009	PtrMemberAccess	upd -> outbuf		2580686	0					
ANR	2582010	Identifier	upd		2580686	0					
ANR	2582011	Identifier	outbuf		2580686	1					
ANR	2582012	Identifier	ioutbuf		2580686	1					
ANR	2582013	Argument	NULL		2580686	1					
ANR	2582014	Identifier	NULL		2580686	0					
ANR	2582015	Argument	n		2580686	2					
ANR	2582016	Identifier	n		2580686	0					
ANR	2582017	ElseStatement	else		2580686	0					
ANR	2582018	CompoundStatement		221:19:7186:7186	2580686	0					
ANR	2582019	ExpressionStatement	-- icomp	6060:15:216249:216256	2580686	0	True				
ANR	2582020	UnaryExpression	-- icomp		2580686	0					
ANR	2582021	IncDec	--		2580686	0					
ANR	2582022	Identifier	icomp		2580686	1					
ANR	2582023	ExpressionStatement	iyofs = upd -> int_a [ IA_SCNOFS ] . data [ imask ]	6061:15:216273:216314	2580686	1	True				
ANR	2582024	AssignmentExpression	iyofs = upd -> int_a [ IA_SCNOFS ] . data [ imask ]		2580686	0		=			
ANR	2582025	Identifier	iyofs		2580686	0					
ANR	2582026	ArrayIndexing	upd -> int_a [ IA_SCNOFS ] . data [ imask ]		2580686	1					
ANR	2582027	MemberAccess	upd -> int_a [ IA_SCNOFS ] . data		2580686	0					
ANR	2582028	ArrayIndexing	upd -> int_a [ IA_SCNOFS ]		2580686	0					
ANR	2582029	PtrMemberAccess	upd -> int_a		2580686	0					
ANR	2582030	Identifier	upd		2580686	0					
ANR	2582031	Identifier	int_a		2580686	1					
ANR	2582032	Identifier	IA_SCNOFS		2580686	1					
ANR	2582033	Identifier	data		2580686	1					
ANR	2582034	Identifier	imask		2580686	1					
ANR	2582035	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , upd -> scnbuf [ ( y + iyofs ) & upd -> scnmsk ] [ icomp ] . bytes + xbegin , n )"	6062:15:216331:216445	2580686	2	True				
ANR	2582036	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , upd -> scnbuf [ ( y + iyofs ) & upd -> scnmsk ] [ icomp ] . bytes + xbegin , n )"		2580686	0		+=			
ANR	2582037	Identifier	ioutbuf		2580686	0					
ANR	2582038	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , upd -> scnbuf [ ( y + iyofs ) & upd -> scnmsk ] [ icomp ] . bytes + xbegin , n )"		2580686	1					
ANR	2582039	Callee	upd_rle		2580686	0					
ANR	2582040	Identifier	upd_rle		2580686	0					
ANR	2582041	ArgumentList	upd -> outbuf + ioutbuf		2580686	1					
ANR	2582042	Argument	upd -> outbuf + ioutbuf		2580686	0					
ANR	2582043	AdditiveExpression	upd -> outbuf + ioutbuf		2580686	0		+			
ANR	2582044	PtrMemberAccess	upd -> outbuf		2580686	0					
ANR	2582045	Identifier	upd		2580686	0					
ANR	2582046	Identifier	outbuf		2580686	1					
ANR	2582047	Identifier	ioutbuf		2580686	1					
ANR	2582048	Argument	upd -> scnbuf [ ( y + iyofs ) & upd -> scnmsk ] [ icomp ] . bytes + xbegin		2580686	1					
ANR	2582049	AdditiveExpression	upd -> scnbuf [ ( y + iyofs ) & upd -> scnmsk ] [ icomp ] . bytes + xbegin		2580686	0		+			
ANR	2582050	MemberAccess	upd -> scnbuf [ ( y + iyofs ) & upd -> scnmsk ] [ icomp ] . bytes		2580686	0					
ANR	2582051	ArrayIndexing	upd -> scnbuf [ ( y + iyofs ) & upd -> scnmsk ] [ icomp ]		2580686	0					
ANR	2582052	ArrayIndexing	upd -> scnbuf [ ( y + iyofs ) & upd -> scnmsk ]		2580686	0					
ANR	2582053	PtrMemberAccess	upd -> scnbuf		2580686	0					
ANR	2582054	Identifier	upd		2580686	0					
ANR	2582055	Identifier	scnbuf		2580686	1					
ANR	2582056	BitAndExpression	( y + iyofs ) & upd -> scnmsk		2580686	1		&			
ANR	2582057	AdditiveExpression	y + iyofs		2580686	0		+			
ANR	2582058	Identifier	y		2580686	0					
ANR	2582059	Identifier	iyofs		2580686	1					
ANR	2582060	PtrMemberAccess	upd -> scnmsk		2580686	1					
ANR	2582061	Identifier	upd		2580686	0					
ANR	2582062	Identifier	scnmsk		2580686	1					
ANR	2582063	Identifier	icomp		2580686	1					
ANR	2582064	Identifier	bytes		2580686	1					
ANR	2582065	Identifier	xbegin		2580686	1					
ANR	2582066	Argument	n		2580686	2					
ANR	2582067	Identifier	n		2580686	0					
ANR	2582068	ExpressionStatement	yinc += upd -> ints [ I_NYPASS ]	6064:15:216462:216487	2580686	3	True				
ANR	2582069	AssignmentExpression	yinc += upd -> ints [ I_NYPASS ]		2580686	0		+=			
ANR	2582070	Identifier	yinc		2580686	0					
ANR	2582071	ArrayIndexing	upd -> ints [ I_NYPASS ]		2580686	1					
ANR	2582072	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2582073	Identifier	upd		2580686	0					
ANR	2582074	Identifier	ints		2580686	1					
ANR	2582075	Identifier	I_NYPASS		2580686	1					
ANR	2582076	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	6066:12:216515:216548	2580686	4	True				
ANR	2582077	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		2580686	0					
ANR	2582078	Callee	fwrite		2580686	0					
ANR	2582079	Identifier	fwrite		2580686	0					
ANR	2582080	ArgumentList	upd -> outbuf		2580686	1					
ANR	2582081	Argument	upd -> outbuf		2580686	0					
ANR	2582082	PtrMemberAccess	upd -> outbuf		2580686	0					
ANR	2582083	Identifier	upd		2580686	0					
ANR	2582084	Identifier	outbuf		2580686	1					
ANR	2582085	Argument	1		2580686	1					
ANR	2582086	PrimaryExpression	1		2580686	0					
ANR	2582087	Argument	ioutbuf		2580686	2					
ANR	2582088	Identifier	ioutbuf		2580686	0					
ANR	2582089	Argument	out		2580686	3					
ANR	2582090	Identifier	out		2580686	0					
ANR	2582091	ExpressionStatement	ioutbuf = 0	6067:12:216562:216573	2580686	5	True				
ANR	2582092	AssignmentExpression	ioutbuf = 0		2580686	0		=			
ANR	2582093	Identifier	ioutbuf		2580686	0					
ANR	2582094	PrimaryExpression	0		2580686	1					
ANR	2582095	ExpressionStatement	irow ++	6068:12:216587:216593	2580686	6	True				
ANR	2582096	PostIncDecOperationExpression	irow ++		2580686	0					
ANR	2582097	Identifier	irow		2580686	0					
ANR	2582098	IncDec	++		2580686	1					
ANR	2582099	IfStatement	if ( upd -> ints [ I_NYPASS ] < upd -> ints [ I_PATRPT ] )		2580686	2					
ANR	2582100	Condition	upd -> ints [ I_NYPASS ] < upd -> ints [ I_PATRPT ]	6071:13:216620:216660	2580686	0	True				
ANR	2582101	RelationalExpression	upd -> ints [ I_NYPASS ] < upd -> ints [ I_PATRPT ]		2580686	0		<			
ANR	2582102	ArrayIndexing	upd -> ints [ I_NYPASS ]		2580686	0					
ANR	2582103	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2582104	Identifier	upd		2580686	0					
ANR	2582105	Identifier	ints		2580686	1					
ANR	2582106	Identifier	I_NYPASS		2580686	1					
ANR	2582107	ArrayIndexing	upd -> ints [ I_PATRPT ]		2580686	1					
ANR	2582108	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2582109	Identifier	upd		2580686	0					
ANR	2582110	Identifier	ints		2580686	1					
ANR	2582111	Identifier	I_PATRPT		2580686	1					
ANR	2582112	CompoundStatement		233:56:7617:7617	2580686	1					
ANR	2582113	ExpressionStatement	y += yinc	6072:12:216677:216684	2580686	0	True				
ANR	2582114	AssignmentExpression	y += yinc		2580686	0		+=			
ANR	2582115	Identifier	y		2580686	0					
ANR	2582116	Identifier	yinc		2580686	1					
ANR	2582117	IfStatement	if ( y > 0 )		2580686	1					
ANR	2582118	Condition	y > 0	6073:16:216702:216706	2580686	0	True				
ANR	2582119	RelationalExpression	y > 0		2580686	0		>			
ANR	2582120	Identifier	y		2580686	0					
ANR	2582121	PrimaryExpression	0		2580686	1					
ANR	2582122	ExpressionStatement	y -= upd -> ints [ I_NYPASS ]	6074:15:216724:216746	2580686	1	True				
ANR	2582123	AssignmentExpression	y -= upd -> ints [ I_NYPASS ]		2580686	0		-=			
ANR	2582124	Identifier	y		2580686	0					
ANR	2582125	ArrayIndexing	upd -> ints [ I_NYPASS ]		2580686	1					
ANR	2582126	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2582127	Identifier	upd		2580686	0					
ANR	2582128	Identifier	ints		2580686	1					
ANR	2582129	Identifier	I_NYPASS		2580686	1					
ANR	2582130	ForStatement	for ( pin = pinbot ; pin < upd -> ints [ I_PINS2WRITE ] ; ++ pin )		2580686	15					
ANR	2582131	ForInit	pin = pinbot ;	6079:10:216859:216871	2580686	0	True				
ANR	2582132	AssignmentExpression	pin = pinbot		2580686	0		=			
ANR	2582133	Identifier	pin		2580686	0					
ANR	2582134	Identifier	pinbot		2580686	1					
ANR	2582135	Condition	pin < upd -> ints [ I_PINS2WRITE ]	6079:24:216873:216901	2580686	1	True				
ANR	2582136	RelationalExpression	pin < upd -> ints [ I_PINS2WRITE ]		2580686	0		<			
ANR	2582137	Identifier	pin		2580686	0					
ANR	2582138	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		2580686	1					
ANR	2582139	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2582140	Identifier	upd		2580686	0					
ANR	2582141	Identifier	ints		2580686	1					
ANR	2582142	Identifier	I_PINS2WRITE		2580686	1					
ANR	2582143	UnaryExpression	++ pin	6079:55:216904:216908	2580686	2	True				
ANR	2582144	IncDec	++		2580686	0					
ANR	2582145	Identifier	pin		2580686	1					
ANR	2582146	CompoundStatement		242:9:7876:7881	2580686	3					
ANR	2582147	IdentifierDeclStatement	int i ;	6080:9:216922:216927	2580686	0	True				
ANR	2582148	IdentifierDecl	i		2580686	0					
ANR	2582149	IdentifierDeclType	int		2580686	0					
ANR	2582150	Identifier	i		2580686	1					
ANR	2582151	ForStatement	for ( i = 0 ; i < upd -> ints [ I_PATRPT ] ; i ++ )		2580686	1					
ANR	2582152	ForInit	i = 0 ;	6081:13:216942:216946	2580686	0	True				
ANR	2582153	AssignmentExpression	i = 0		2580686	0		=			
ANR	2582154	Identifier	i		2580686	0					
ANR	2582155	PrimaryExpression	0		2580686	1					
ANR	2582156	Condition	i < upd -> ints [ I_PATRPT ]	6081:19:216948:216970	2580686	1	True				
ANR	2582157	RelationalExpression	i < upd -> ints [ I_PATRPT ]		2580686	0		<			
ANR	2582158	Identifier	i		2580686	0					
ANR	2582159	ArrayIndexing	upd -> ints [ I_PATRPT ]		2580686	1					
ANR	2582160	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2582161	Identifier	upd		2580686	0					
ANR	2582162	Identifier	ints		2580686	1					
ANR	2582163	Identifier	I_PATRPT		2580686	1					
ANR	2582164	PostIncDecOperationExpression	i ++	6081:44:216973:216975	2580686	2	True				
ANR	2582165	Identifier	i		2580686	0					
ANR	2582166	IncDec	++		2580686	1					
ANR	2582167	CompoundStatement		243:48:7931:7931	2580686	3					
ANR	2582168	IfStatement	if ( irow >= upd -> ints [ I_ROWS ] )		2580686	0					
ANR	2582169	Condition	irow >= upd -> ints [ I_ROWS ]	6082:15:216994:217018	2580686	0	True				
ANR	2582170	RelationalExpression	irow >= upd -> ints [ I_ROWS ]		2580686	0		>=			
ANR	2582171	Identifier	irow		2580686	0					
ANR	2582172	ArrayIndexing	upd -> ints [ I_ROWS ]		2580686	1					
ANR	2582173	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2582174	Identifier	upd		2580686	0					
ANR	2582175	Identifier	ints		2580686	1					
ANR	2582176	Identifier	I_ROWS		2580686	1					
ANR	2582177	BreakStatement	break ;	6082:42:217021:217026	2580686	1	True				
ANR	2582178	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"	6083:12:217040:217086	2580686	1	True				
ANR	2582179	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		2580686	0		+=			
ANR	2582180	Identifier	ioutbuf		2580686	0					
ANR	2582181	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		2580686	1					
ANR	2582182	Callee	upd_rle		2580686	0					
ANR	2582183	Identifier	upd_rle		2580686	0					
ANR	2582184	ArgumentList	upd -> outbuf + ioutbuf		2580686	1					
ANR	2582185	Argument	upd -> outbuf + ioutbuf		2580686	0					
ANR	2582186	AdditiveExpression	upd -> outbuf + ioutbuf		2580686	0		+			
ANR	2582187	PtrMemberAccess	upd -> outbuf		2580686	0					
ANR	2582188	Identifier	upd		2580686	0					
ANR	2582189	Identifier	outbuf		2580686	1					
ANR	2582190	Identifier	ioutbuf		2580686	1					
ANR	2582191	Argument	NULL		2580686	1					
ANR	2582192	Identifier	NULL		2580686	0					
ANR	2582193	Argument	n		2580686	2					
ANR	2582194	Identifier	n		2580686	0					
ANR	2582195	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	6084:12:217100:217133	2580686	2	True				
ANR	2582196	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		2580686	0					
ANR	2582197	Callee	fwrite		2580686	0					
ANR	2582198	Identifier	fwrite		2580686	0					
ANR	2582199	ArgumentList	upd -> outbuf		2580686	1					
ANR	2582200	Argument	upd -> outbuf		2580686	0					
ANR	2582201	PtrMemberAccess	upd -> outbuf		2580686	0					
ANR	2582202	Identifier	upd		2580686	0					
ANR	2582203	Identifier	outbuf		2580686	1					
ANR	2582204	Argument	1		2580686	1					
ANR	2582205	PrimaryExpression	1		2580686	0					
ANR	2582206	Argument	ioutbuf		2580686	2					
ANR	2582207	Identifier	ioutbuf		2580686	0					
ANR	2582208	Argument	out		2580686	3					
ANR	2582209	Identifier	out		2580686	0					
ANR	2582210	ExpressionStatement	ioutbuf = 0	6085:12:217147:217158	2580686	3	True				
ANR	2582211	AssignmentExpression	ioutbuf = 0		2580686	0		=			
ANR	2582212	Identifier	ioutbuf		2580686	0					
ANR	2582213	PrimaryExpression	0		2580686	1					
ANR	2582214	ExpressionStatement	irow ++	6086:12:217172:217178	2580686	4	True				
ANR	2582215	PostIncDecOperationExpression	irow ++		2580686	0					
ANR	2582216	Identifier	irow		2580686	0					
ANR	2582217	IncDec	++		2580686	1					
ANR	2582218	IfStatement	if ( irow < upd -> ints [ I_ROWS ] )		2580686	16					
ANR	2582219	Condition	irow < upd -> ints [ I_ROWS ]	6091:11:217266:217289	2580686	0	True				
ANR	2582220	RelationalExpression	irow < upd -> ints [ I_ROWS ]		2580686	0		<			
ANR	2582221	Identifier	irow		2580686	0					
ANR	2582222	ArrayIndexing	upd -> ints [ I_ROWS ]		2580686	1					
ANR	2582223	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2582224	Identifier	upd		2580686	0					
ANR	2582225	Identifier	ints		2580686	1					
ANR	2582226	Identifier	I_ROWS		2580686	1					
ANR	2582227	CompoundStatement		253:37:8246:8246	2580686	1					
ANR	2582228	ForStatement	for ( ; irow < upd -> ints [ I_ROWS ] ; irow ++ )		2580686	0					
ANR	2582229	Condition	irow < upd -> ints [ I_ROWS ]	6092:16:217310:217333	2580686	0	True				
ANR	2582230	RelationalExpression	irow < upd -> ints [ I_ROWS ]		2580686	0		<			
ANR	2582231	Identifier	irow		2580686	0					
ANR	2582232	ArrayIndexing	upd -> ints [ I_ROWS ]		2580686	1					
ANR	2582233	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2582234	Identifier	upd		2580686	0					
ANR	2582235	Identifier	ints		2580686	1					
ANR	2582236	Identifier	I_ROWS		2580686	1					
ANR	2582237	PostIncDecOperationExpression	irow ++	6092:42:217336:217341	2580686	1	True				
ANR	2582238	Identifier	irow		2580686	0					
ANR	2582239	IncDec	++		2580686	1					
ANR	2582240	CompoundStatement		254:49:8297:8297	2580686	2					
ANR	2582241	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"	6093:12:217357:217403	2580686	0	True				
ANR	2582242	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		2580686	0		+=			
ANR	2582243	Identifier	ioutbuf		2580686	0					
ANR	2582244	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		2580686	1					
ANR	2582245	Callee	upd_rle		2580686	0					
ANR	2582246	Identifier	upd_rle		2580686	0					
ANR	2582247	ArgumentList	upd -> outbuf + ioutbuf		2580686	1					
ANR	2582248	Argument	upd -> outbuf + ioutbuf		2580686	0					
ANR	2582249	AdditiveExpression	upd -> outbuf + ioutbuf		2580686	0		+			
ANR	2582250	PtrMemberAccess	upd -> outbuf		2580686	0					
ANR	2582251	Identifier	upd		2580686	0					
ANR	2582252	Identifier	outbuf		2580686	1					
ANR	2582253	Identifier	ioutbuf		2580686	1					
ANR	2582254	Argument	NULL		2580686	1					
ANR	2582255	Identifier	NULL		2580686	0					
ANR	2582256	Argument	n		2580686	2					
ANR	2582257	Identifier	n		2580686	0					
ANR	2582258	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	6094:12:217417:217450	2580686	1	True				
ANR	2582259	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		2580686	0					
ANR	2582260	Callee	fwrite		2580686	0					
ANR	2582261	Identifier	fwrite		2580686	0					
ANR	2582262	ArgumentList	upd -> outbuf		2580686	1					
ANR	2582263	Argument	upd -> outbuf		2580686	0					
ANR	2582264	PtrMemberAccess	upd -> outbuf		2580686	0					
ANR	2582265	Identifier	upd		2580686	0					
ANR	2582266	Identifier	outbuf		2580686	1					
ANR	2582267	Argument	1		2580686	1					
ANR	2582268	PrimaryExpression	1		2580686	0					
ANR	2582269	Argument	ioutbuf		2580686	2					
ANR	2582270	Identifier	ioutbuf		2580686	0					
ANR	2582271	Argument	out		2580686	3					
ANR	2582272	Identifier	out		2580686	0					
ANR	2582273	ExpressionStatement	ioutbuf = 0	6095:12:217464:217475	2580686	2	True				
ANR	2582274	AssignmentExpression	ioutbuf = 0		2580686	0		=			
ANR	2582275	Identifier	ioutbuf		2580686	0					
ANR	2582276	PrimaryExpression	0		2580686	1					
ANR	2582277	IfStatement	if ( upd -> yscan < upd -> ints [ I_BEG_Y ] )		2580686	11					
ANR	2582278	Condition	upd -> yscan < upd -> ints [ I_BEG_Y ]	6102:6:217591:217621	2580686	0	True				
ANR	2582279	RelationalExpression	upd -> yscan < upd -> ints [ I_BEG_Y ]		2580686	0		<			
ANR	2582280	PtrMemberAccess	upd -> yscan		2580686	0					
ANR	2582281	Identifier	upd		2580686	0					
ANR	2582282	Identifier	yscan		2580686	1					
ANR	2582283	ArrayIndexing	upd -> ints [ I_BEG_Y ]		2580686	1					
ANR	2582284	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2582285	Identifier	upd		2580686	0					
ANR	2582286	Identifier	ints		2580686	1					
ANR	2582287	Identifier	I_BEG_Y		2580686	1					
ANR	2582288	CompoundStatement		264:39:8578:8578	2580686	1					
ANR	2582289	ExpressionStatement	upd -> yscan += upd -> int_a [ IA_BEG_DY ] . data [ upd -> ipass ++ ]	6103:6:217632:217686	2580686	0	True				
ANR	2582290	AssignmentExpression	upd -> yscan += upd -> int_a [ IA_BEG_DY ] . data [ upd -> ipass ++ ]		2580686	0		+=			
ANR	2582291	PtrMemberAccess	upd -> yscan		2580686	0					
ANR	2582292	Identifier	upd		2580686	0					
ANR	2582293	Identifier	yscan		2580686	1					
ANR	2582294	ArrayIndexing	upd -> int_a [ IA_BEG_DY ] . data [ upd -> ipass ++ ]		2580686	1					
ANR	2582295	MemberAccess	upd -> int_a [ IA_BEG_DY ] . data		2580686	0					
ANR	2582296	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		2580686	0					
ANR	2582297	PtrMemberAccess	upd -> int_a		2580686	0					
ANR	2582298	Identifier	upd		2580686	0					
ANR	2582299	Identifier	int_a		2580686	1					
ANR	2582300	Identifier	IA_BEG_DY		2580686	1					
ANR	2582301	Identifier	data		2580686	1					
ANR	2582302	PostIncDecOperationExpression	upd -> ipass ++		2580686	1					
ANR	2582303	PtrMemberAccess	upd -> ipass		2580686	0					
ANR	2582304	Identifier	upd		2580686	0					
ANR	2582305	Identifier	ipass		2580686	1					
ANR	2582306	IncDec	++		2580686	1					
ANR	2582307	IfStatement	if ( upd -> ints [ I_BEG_Y ] <= upd -> yscan )		2580686	1					
ANR	2582308	Condition	upd -> ints [ I_BEG_Y ] <= upd -> yscan	6104:14:217702:217733	2580686	0	True				
ANR	2582309	RelationalExpression	upd -> ints [ I_BEG_Y ] <= upd -> yscan		2580686	0		<=			
ANR	2582310	ArrayIndexing	upd -> ints [ I_BEG_Y ]		2580686	0					
ANR	2582311	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2582312	Identifier	upd		2580686	0					
ANR	2582313	Identifier	ints		2580686	1					
ANR	2582314	Identifier	I_BEG_Y		2580686	1					
ANR	2582315	PtrMemberAccess	upd -> yscan		2580686	1					
ANR	2582316	Identifier	upd		2580686	0					
ANR	2582317	Identifier	yscan		2580686	1					
ANR	2582318	ExpressionStatement	upd -> ipass = 0	6104:48:217736:217750	2580686	1	True				
ANR	2582319	AssignmentExpression	upd -> ipass = 0		2580686	0		=			
ANR	2582320	PtrMemberAccess	upd -> ipass		2580686	0					
ANR	2582321	Identifier	upd		2580686	0					
ANR	2582322	Identifier	ipass		2580686	1					
ANR	2582323	PrimaryExpression	0		2580686	1					
ANR	2582324	ElseStatement	else		2580686	0					
ANR	2582325	IfStatement	if ( upd -> int_a [ IA_BEG_DY ] . size <= upd -> ipass )		2580686	0					
ANR	2582326	Condition	upd -> int_a [ IA_BEG_DY ] . size <= upd -> ipass	6105:14:217766:217805	2580686	0	True				
ANR	2582327	RelationalExpression	upd -> int_a [ IA_BEG_DY ] . size <= upd -> ipass		2580686	0		<=			
ANR	2582328	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		2580686	0					
ANR	2582329	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		2580686	0					
ANR	2582330	PtrMemberAccess	upd -> int_a		2580686	0					
ANR	2582331	Identifier	upd		2580686	0					
ANR	2582332	Identifier	int_a		2580686	1					
ANR	2582333	Identifier	IA_BEG_DY		2580686	1					
ANR	2582334	Identifier	size		2580686	1					
ANR	2582335	PtrMemberAccess	upd -> ipass		2580686	1					
ANR	2582336	Identifier	upd		2580686	0					
ANR	2582337	Identifier	ipass		2580686	1					
ANR	2582338	ExpressionStatement	upd -> ipass = 0	6105:56:217808:217822	2580686	1	True				
ANR	2582339	AssignmentExpression	upd -> ipass = 0		2580686	0		=			
ANR	2582340	PtrMemberAccess	upd -> ipass		2580686	0					
ANR	2582341	Identifier	upd		2580686	0					
ANR	2582342	Identifier	ipass		2580686	1					
ANR	2582343	PrimaryExpression	0		2580686	1					
ANR	2582344	ElseStatement	else		2580686	0					
ANR	2582345	IfStatement	if ( upd -> yscan >= upd -> ints [ I_END_Y ] )		2580686	0					
ANR	2582346	Condition	upd -> yscan >= upd -> ints [ I_END_Y ]	6106:13:217837:217868	2580686	0	True				
ANR	2582347	RelationalExpression	upd -> yscan >= upd -> ints [ I_END_Y ]		2580686	0		>=			
ANR	2582348	PtrMemberAccess	upd -> yscan		2580686	0					
ANR	2582349	Identifier	upd		2580686	0					
ANR	2582350	Identifier	yscan		2580686	1					
ANR	2582351	ArrayIndexing	upd -> ints [ I_END_Y ]		2580686	1					
ANR	2582352	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2582353	Identifier	upd		2580686	0					
ANR	2582354	Identifier	ints		2580686	1					
ANR	2582355	Identifier	I_END_Y		2580686	1					
ANR	2582356	CompoundStatement		268:47:8825:8825	2580686	1					
ANR	2582357	ExpressionStatement	upd -> yscan += upd -> int_a [ IA_END_DY ] . data [ upd -> ipass ++ ]	6107:6:217879:217933	2580686	0	True				
ANR	2582358	AssignmentExpression	upd -> yscan += upd -> int_a [ IA_END_DY ] . data [ upd -> ipass ++ ]		2580686	0		+=			
ANR	2582359	PtrMemberAccess	upd -> yscan		2580686	0					
ANR	2582360	Identifier	upd		2580686	0					
ANR	2582361	Identifier	yscan		2580686	1					
ANR	2582362	ArrayIndexing	upd -> int_a [ IA_END_DY ] . data [ upd -> ipass ++ ]		2580686	1					
ANR	2582363	MemberAccess	upd -> int_a [ IA_END_DY ] . data		2580686	0					
ANR	2582364	ArrayIndexing	upd -> int_a [ IA_END_DY ]		2580686	0					
ANR	2582365	PtrMemberAccess	upd -> int_a		2580686	0					
ANR	2582366	Identifier	upd		2580686	0					
ANR	2582367	Identifier	int_a		2580686	1					
ANR	2582368	Identifier	IA_END_DY		2580686	1					
ANR	2582369	Identifier	data		2580686	1					
ANR	2582370	PostIncDecOperationExpression	upd -> ipass ++		2580686	1					
ANR	2582371	PtrMemberAccess	upd -> ipass		2580686	0					
ANR	2582372	Identifier	upd		2580686	0					
ANR	2582373	Identifier	ipass		2580686	1					
ANR	2582374	IncDec	++		2580686	1					
ANR	2582375	IfStatement	if ( upd -> int_a [ IA_END_DY ] . size <= upd -> ipass )		2580686	1					
ANR	2582376	Condition	upd -> int_a [ IA_END_DY ] . size <= upd -> ipass	6108:9:217944:217983	2580686	0	True				
ANR	2582377	RelationalExpression	upd -> int_a [ IA_END_DY ] . size <= upd -> ipass		2580686	0		<=			
ANR	2582378	MemberAccess	upd -> int_a [ IA_END_DY ] . size		2580686	0					
ANR	2582379	ArrayIndexing	upd -> int_a [ IA_END_DY ]		2580686	0					
ANR	2582380	PtrMemberAccess	upd -> int_a		2580686	0					
ANR	2582381	Identifier	upd		2580686	0					
ANR	2582382	Identifier	int_a		2580686	1					
ANR	2582383	Identifier	IA_END_DY		2580686	1					
ANR	2582384	Identifier	size		2580686	1					
ANR	2582385	PtrMemberAccess	upd -> ipass		2580686	1					
ANR	2582386	Identifier	upd		2580686	0					
ANR	2582387	Identifier	ipass		2580686	1					
ANR	2582388	ExpressionStatement	upd -> ipass = 0	6108:51:217986:218000	2580686	1	True				
ANR	2582389	AssignmentExpression	upd -> ipass = 0		2580686	0		=			
ANR	2582390	PtrMemberAccess	upd -> ipass		2580686	0					
ANR	2582391	Identifier	upd		2580686	0					
ANR	2582392	Identifier	ipass		2580686	1					
ANR	2582393	PrimaryExpression	0		2580686	1					
ANR	2582394	ElseStatement	else		2580686	0					
ANR	2582395	CompoundStatement		271:10:8966:8966	2580686	0					
ANR	2582396	ExpressionStatement	upd -> yscan += upd -> int_a [ IA_STD_DY ] . data [ upd -> ipass ++ ]	6110:6:218020:218074	2580686	0	True				
ANR	2582397	AssignmentExpression	upd -> yscan += upd -> int_a [ IA_STD_DY ] . data [ upd -> ipass ++ ]		2580686	0		+=			
ANR	2582398	PtrMemberAccess	upd -> yscan		2580686	0					
ANR	2582399	Identifier	upd		2580686	0					
ANR	2582400	Identifier	yscan		2580686	1					
ANR	2582401	ArrayIndexing	upd -> int_a [ IA_STD_DY ] . data [ upd -> ipass ++ ]		2580686	1					
ANR	2582402	MemberAccess	upd -> int_a [ IA_STD_DY ] . data		2580686	0					
ANR	2582403	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		2580686	0					
ANR	2582404	PtrMemberAccess	upd -> int_a		2580686	0					
ANR	2582405	Identifier	upd		2580686	0					
ANR	2582406	Identifier	int_a		2580686	1					
ANR	2582407	Identifier	IA_STD_DY		2580686	1					
ANR	2582408	Identifier	data		2580686	1					
ANR	2582409	PostIncDecOperationExpression	upd -> ipass ++		2580686	1					
ANR	2582410	PtrMemberAccess	upd -> ipass		2580686	0					
ANR	2582411	Identifier	upd		2580686	0					
ANR	2582412	Identifier	ipass		2580686	1					
ANR	2582413	IncDec	++		2580686	1					
ANR	2582414	IfStatement	if ( upd -> int_a [ IA_STD_DY ] . size <= upd -> ipass )		2580686	1					
ANR	2582415	Condition	upd -> int_a [ IA_STD_DY ] . size <= upd -> ipass	6111:9:218085:218124	2580686	0	True				
ANR	2582416	RelationalExpression	upd -> int_a [ IA_STD_DY ] . size <= upd -> ipass		2580686	0		<=			
ANR	2582417	MemberAccess	upd -> int_a [ IA_STD_DY ] . size		2580686	0					
ANR	2582418	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		2580686	0					
ANR	2582419	PtrMemberAccess	upd -> int_a		2580686	0					
ANR	2582420	Identifier	upd		2580686	0					
ANR	2582421	Identifier	int_a		2580686	1					
ANR	2582422	Identifier	IA_STD_DY		2580686	1					
ANR	2582423	Identifier	size		2580686	1					
ANR	2582424	PtrMemberAccess	upd -> ipass		2580686	1					
ANR	2582425	Identifier	upd		2580686	0					
ANR	2582426	Identifier	ipass		2580686	1					
ANR	2582427	ExpressionStatement	upd -> ipass = 0	6111:51:218127:218141	2580686	1	True				
ANR	2582428	AssignmentExpression	upd -> ipass = 0		2580686	0		=			
ANR	2582429	PtrMemberAccess	upd -> ipass		2580686	0					
ANR	2582430	Identifier	upd		2580686	0					
ANR	2582431	Identifier	ipass		2580686	1					
ANR	2582432	PrimaryExpression	0		2580686	1					
ANR	2582433	IfStatement	if ( upd -> yscan >= upd -> ints [ I_END_Y ] )		2580686	2					
ANR	2582434	Condition	upd -> yscan >= upd -> ints [ I_END_Y ]	6112:9:218152:218183	2580686	0	True				
ANR	2582435	RelationalExpression	upd -> yscan >= upd -> ints [ I_END_Y ]		2580686	0		>=			
ANR	2582436	PtrMemberAccess	upd -> yscan		2580686	0					
ANR	2582437	Identifier	upd		2580686	0					
ANR	2582438	Identifier	yscan		2580686	1					
ANR	2582439	ArrayIndexing	upd -> ints [ I_END_Y ]		2580686	1					
ANR	2582440	PtrMemberAccess	upd -> ints		2580686	0					
ANR	2582441	Identifier	upd		2580686	0					
ANR	2582442	Identifier	ints		2580686	1					
ANR	2582443	Identifier	I_END_Y		2580686	1					
ANR	2582444	ExpressionStatement	upd -> ipass = 0	6112:51:218194:218208	2580686	1	True				
ANR	2582445	AssignmentExpression	upd -> ipass = 0		2580686	0		=			
ANR	2582446	PtrMemberAccess	upd -> ipass		2580686	0					
ANR	2582447	Identifier	upd		2580686	0					
ANR	2582448	Identifier	ipass		2580686	1					
ANR	2582449	PrimaryExpression	0		2580686	1					
ANR	2582450	ReturnStatement	return 0 ;	6115:3:218219:218227	2580686	12	True				
ANR	2582451	PrimaryExpression	0		2580686	0					
ANR	2582452	ReturnType	static int		2580686	1					
ANR	2582453	Identifier	upd_wrtescnm		2580686	2					
ANR	2582454	ParameterList	"upd_p upd , FILE * out"		2580686	3					
ANR	2582455	Parameter	upd_p upd	5838:13:209023:209031	2580686	0	True				
ANR	2582456	ParameterType	upd_p		2580686	0					
ANR	2582457	Identifier	upd		2580686	1					
ANR	2582458	Parameter	FILE * out	5838:24:209034:209042	2580686	1	True				
ANR	2582459	ParameterType	FILE *		2580686	0					
ANR	2582460	Identifier	out		2580686	1					
ANR	2582461	CFGEntryNode	ENTRY		2580686		True				
ANR	2582462	CFGExitNode	EXIT		2580686		True				
ANR	2582463	Symbol	I_PINS2WRITE		2580686						
ANR	2582464	Symbol	* upd -> int_a		2580686						
ANR	2582465	Symbol	* x		2580686						
ANR	2582466	Symbol	* y		2580686						
ANR	2582467	Symbol	* imask		2580686						
ANR	2582468	Symbol	* * IA_STD_DY		2580686						
ANR	2582469	Symbol	* I_YSTEP		2580686						
ANR	2582470	Symbol	pinbot		2580686						
ANR	2582471	Symbol	upd -> int_a [ IA_STD_DY ] . data		2580686						
ANR	2582472	Symbol	icomp		2580686						
ANR	2582473	Symbol	upd -> yscan		2580686						
ANR	2582474	Symbol	* upd -> string_a [ SA_WRITECOMP ] . data		2580686						
ANR	2582475	Symbol	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data		2580686						
ANR	2582476	Symbol	* scan		2580686						
ANR	2582477	Symbol	* upd -> int_a [ IA_ROWMASK ] . data		2580686						
ANR	2582478	Symbol	upd -> nbytes		2580686						
ANR	2582479	Symbol	upd -> int_a [ IA_SCNOFS ] . data		2580686						
ANR	2582480	Symbol	* I_PATRPT		2580686						
ANR	2582481	Symbol	* * iyofs		2580686						
ANR	2582482	Symbol	* upd -> int_a [ IA_BEG_DY ] . data		2580686						
ANR	2582483	Symbol	IA_ROWMASK		2580686						
ANR	2582484	Symbol	upd -> int_a [ IA_BEG_DY ] . data		2580686						
ANR	2582485	Symbol	* upd -> scnbuf		2580686						
ANR	2582486	Symbol	upd -> string_a [ SA_SETCOMP ] . data		2580686						
ANR	2582487	Symbol	upd		2580686						
ANR	2582488	Symbol	* SA_WRITECOMP		2580686						
ANR	2582489	Symbol	* I_NYPASS		2580686						
ANR	2582490	Symbol	* * SA_SETCOMP		2580686						
ANR	2582491	Symbol	* IA_ROWMASK		2580686						
ANR	2582492	Symbol	imask		2580686						
ANR	2582493	Symbol	* upd -> int_a [ IA_SCNOFS ] . data		2580686						
ANR	2582494	Symbol	B_YABS		2580686						
ANR	2582495	Symbol	IA_SCNOFS		2580686						
ANR	2582496	Symbol	* IA_BEGBOT		2580686						
ANR	2582497	Symbol	* I_BEG_Y		2580686						
ANR	2582498	Symbol	* upd -> ipass		2580686						
ANR	2582499	Symbol	* upd -> outbuf		2580686						
ANR	2582500	Symbol	scan		2580686						
ANR	2582501	Symbol	upd -> strings		2580686						
ANR	2582502	Symbol	* * IA_BEGBOT		2580686						
ANR	2582503	Symbol	iyofs		2580686						
ANR	2582504	Symbol	upd -> int_a [ IA_STD_DY ] . size		2580686						
ANR	2582505	Symbol	I_BEG_Y		2580686						
ANR	2582506	Symbol	out		2580686						
ANR	2582507	Symbol	upd -> flags		2580686						
ANR	2582508	Symbol	upd_rle		2580686						
ANR	2582509	Symbol	* upd -> string_a [ SA_SETCOMP ] . data		2580686						
ANR	2582510	Symbol	* * y		2580686						
ANR	2582511	Symbol	* upd		2580686						
ANR	2582512	Symbol	* S_XMOVE		2580686						
ANR	2582513	Symbol	xend		2580686						
ANR	2582514	Symbol	obytes		2580686						
ANR	2582515	Symbol	* upd -> scnmsk		2580686						
ANR	2582516	Symbol	upd -> ocomp		2580686						
ANR	2582517	Symbol	* upd -> strings		2580686						
ANR	2582518	Symbol	* I_XOFS		2580686						
ANR	2582519	Symbol	* upd -> int_a [ IA_END_DY ] . data		2580686						
ANR	2582520	Symbol	upd -> strings [ S_YMOVE ] . size		2580686						
ANR	2582521	Symbol	* S_XSTEP		2580686						
ANR	2582522	Symbol	* IA_SCNOFS		2580686						
ANR	2582523	Symbol	IA_BEGBOT		2580686						
ANR	2582524	Symbol	upd -> int_a [ IA_END_DY ] . data		2580686						
ANR	2582525	Symbol	i		2580686						
ANR	2582526	Symbol	xbegin		2580686						
ANR	2582527	Symbol	I_XSTEP		2580686						
ANR	2582528	Symbol	* * upd -> scnbuf		2580686						
ANR	2582529	Symbol	n		2580686						
ANR	2582530	Symbol	* I_ROWS		2580686						
ANR	2582531	Symbol	* * upd -> int_a		2580686						
ANR	2582532	Symbol	I_YOFS		2580686						
ANR	2582533	Symbol	upd -> yprinter		2580686						
ANR	2582534	Symbol	ioutbuf		2580686						
ANR	2582535	Symbol	upd -> scnbuf [ ( y + iyofs ) & upd -> scnmsk ] [ icomp ] . bytes		2580686						
ANR	2582536	Symbol	S_YMOVE		2580686						
ANR	2582537	Symbol	upd -> string_a [ SA_WRITECOMP ] . data		2580686						
ANR	2582538	Symbol	S_YSTEP		2580686						
ANR	2582539	Symbol	x		2580686						
ANR	2582540	Symbol	y		2580686						
ANR	2582541	Symbol	* I_END_Y		2580686						
ANR	2582542	Symbol	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		2580686						
ANR	2582543	Symbol	* * upd		2580686						
ANR	2582544	Symbol	* * upd -> scnmsk		2580686						
ANR	2582545	Symbol	S_XMOVE		2580686						
ANR	2582546	Symbol	* upd -> string_a		2580686						
ANR	2582547	Symbol	* IA_BEG_DY		2580686						
ANR	2582548	Symbol	SA_SETCOMP		2580686						
ANR	2582549	Symbol	* * IA_ENDTOP		2580686						
ANR	2582550	Symbol	upd -> icomp		2580686						
ANR	2582551	Symbol	* * IA_END_DY		2580686						
ANR	2582552	Symbol	upd -> ipass		2580686						
ANR	2582553	Symbol	upd -> strings [ S_YSTEP ] . size		2580686						
ANR	2582554	Symbol	* SA_SETCOMP		2580686						
ANR	2582555	Symbol	upd -> strings [ S_XSTEP ] . data		2580686						
ANR	2582556	Symbol	* upd -> int_a [ IA_BEGBOT ] . data		2580686						
ANR	2582557	Symbol	upd -> strings [ S_XMOVE ] . data		2580686						
ANR	2582558	Symbol	upd -> int_a		2580686						
ANR	2582559	Symbol	pin		2580686						
ANR	2582560	Symbol	* I_BEGSKIP		2580686						
ANR	2582561	Symbol	* I_XSTEP		2580686						
ANR	2582562	Symbol	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2580686						
ANR	2582563	Symbol	upd -> int_a [ IA_ENDTOP ] . data		2580686						
ANR	2582564	Symbol	NULL		2580686						
ANR	2582565	Symbol	* upd -> int_a [ IA_ENDTOP ] . data		2580686						
ANR	2582566	Symbol	SA_WRITECOMP		2580686						
ANR	2582567	Symbol	upd -> xprinter		2580686						
ANR	2582568	Symbol	* * IA_ROWMASK		2580686						
ANR	2582569	Symbol	* iyofs		2580686						
ANR	2582570	Symbol	pintop		2580686						
ANR	2582571	Symbol	upd -> ints		2580686						
ANR	2582572	Symbol	masklen		2580686						
ANR	2582573	Symbol	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2580686						
ANR	2582574	Symbol	* * IA_SCNOFS		2580686						
ANR	2582575	Symbol	upd -> strings [ S_XSTEP ] . size		2580686						
ANR	2582576	Symbol	upd -> strings [ S_YSTEP ] . data		2580686						
ANR	2582577	Symbol	I_PATRPT		2580686						
ANR	2582578	Symbol	scan [ icomp ] . bytes		2580686						
ANR	2582579	Symbol	I_XOFS		2580686						
ANR	2582580	Symbol	upd -> int_a [ IA_ROWMASK ] . data		2580686						
ANR	2582581	Symbol	I_BEGSKIP		2580686						
ANR	2582582	Symbol	upd -> int_a [ IA_END_DY ] . size		2580686						
ANR	2582583	Symbol	* obytes		2580686						
ANR	2582584	Symbol	B_XABS		2580686						
ANR	2582585	Symbol	* icomp		2580686						
ANR	2582586	Symbol	upd -> int_a [ IA_BEG_DY ] . size		2580686						
ANR	2582587	Symbol	* IA_ENDTOP		2580686						
ANR	2582588	Symbol	upd -> strings [ S_YMOVE ] . data		2580686						
ANR	2582589	Symbol	* IA_END_DY		2580686						
ANR	2582590	Symbol	* IA_STD_DY		2580686						
ANR	2582591	Symbol	I_NYPASS		2580686						
ANR	2582592	Symbol	* * upd -> string_a		2580686						
ANR	2582593	Symbol	IA_STD_DY		2580686						
ANR	2582594	Symbol	ybegin		2580686						
ANR	2582595	Symbol	* * SA_WRITECOMP		2580686						
ANR	2582596	Symbol	irow		2580686						
ANR	2582597	Symbol	* I_YOFS		2580686						
ANR	2582598	Symbol	* S_YMOVE		2580686						
ANR	2582599	Symbol	upd -> scnmsk		2580686						
ANR	2582600	Symbol	* * * upd		2580686						
ANR	2582601	Symbol	upd -> strings [ S_XMOVE ] . size		2580686						
ANR	2582602	Symbol	IA_ENDTOP		2580686						
ANR	2582603	Symbol	IA_END_DY		2580686						
ANR	2582604	Symbol	I_END_Y		2580686						
ANR	2582605	Symbol	* S_YSTEP		2580686						
ANR	2582606	Symbol	upd -> string_a		2580686						
ANR	2582607	Symbol	* upd -> ints		2580686						
ANR	2582608	Symbol	* I_PINS2WRITE		2580686						
ANR	2582609	Symbol	upd -> scnbuf		2580686						
ANR	2582610	Symbol	upd -> string_a [ SA_SETCOMP ] . size		2580686						
ANR	2582611	Symbol	S_XSTEP		2580686						
ANR	2582612	Symbol	yend		2580686						
ANR	2582613	Symbol	IA_BEG_DY		2580686						
ANR	2582614	Symbol	* upd -> int_a [ IA_STD_DY ] . data		2580686						
ANR	2582615	Symbol	upd -> outbuf		2580686						
ANR	2582616	Symbol	upd -> int_a [ IA_BEGBOT ] . data		2580686						
ANR	2582617	Symbol	I_ROWS		2580686						
ANR	2582618	Symbol	yinc		2580686						
ANR	2582619	Symbol	* * IA_BEG_DY		2580686						
ANR	2582620	Symbol	I_YSTEP		2580686						
ANR	2582621	Function	upd_wrtescp2x	6122:0:218455:227225							
ANR	2582622	FunctionDef	"upd_wrtescp2x (upd_p upd , FILE * out)"		2582621	0					
ANR	2582623	CompoundStatement		6124:0:218502:227225	2582621	0					
ANR	2582624	IdentifierDeclStatement	"int pinbot , pin , pintop , xbegin , x , xend , icomp , ybegin , yend , y , ioutbuf , n , ixpass ;"	6125:3:218507:218580	2582621	0	True				
ANR	2582625	IdentifierDecl	pinbot		2582621	0					
ANR	2582626	IdentifierDeclType	int		2582621	0					
ANR	2582627	Identifier	pinbot		2582621	1					
ANR	2582628	IdentifierDecl	pin		2582621	1					
ANR	2582629	IdentifierDeclType	int		2582621	0					
ANR	2582630	Identifier	pin		2582621	1					
ANR	2582631	IdentifierDecl	pintop		2582621	2					
ANR	2582632	IdentifierDeclType	int		2582621	0					
ANR	2582633	Identifier	pintop		2582621	1					
ANR	2582634	IdentifierDecl	xbegin		2582621	3					
ANR	2582635	IdentifierDeclType	int		2582621	0					
ANR	2582636	Identifier	xbegin		2582621	1					
ANR	2582637	IdentifierDecl	x		2582621	4					
ANR	2582638	IdentifierDeclType	int		2582621	0					
ANR	2582639	Identifier	x		2582621	1					
ANR	2582640	IdentifierDecl	xend		2582621	5					
ANR	2582641	IdentifierDeclType	int		2582621	0					
ANR	2582642	Identifier	xend		2582621	1					
ANR	2582643	IdentifierDecl	icomp		2582621	6					
ANR	2582644	IdentifierDeclType	int		2582621	0					
ANR	2582645	Identifier	icomp		2582621	1					
ANR	2582646	IdentifierDecl	ybegin		2582621	7					
ANR	2582647	IdentifierDeclType	int		2582621	0					
ANR	2582648	Identifier	ybegin		2582621	1					
ANR	2582649	IdentifierDecl	yend		2582621	8					
ANR	2582650	IdentifierDeclType	int		2582621	0					
ANR	2582651	Identifier	yend		2582621	1					
ANR	2582652	IdentifierDecl	y		2582621	9					
ANR	2582653	IdentifierDeclType	int		2582621	0					
ANR	2582654	Identifier	y		2582621	1					
ANR	2582655	IdentifierDecl	ioutbuf		2582621	10					
ANR	2582656	IdentifierDeclType	int		2582621	0					
ANR	2582657	Identifier	ioutbuf		2582621	1					
ANR	2582658	IdentifierDecl	n		2582621	11					
ANR	2582659	IdentifierDeclType	int		2582621	0					
ANR	2582660	Identifier	n		2582621	1					
ANR	2582661	IdentifierDecl	ixpass		2582621	12					
ANR	2582662	IdentifierDeclType	int		2582621	0					
ANR	2582663	Identifier	ixpass		2582621	1					
ANR	2582664	IdentifierDeclStatement	"byte * obytes , bit ;"	6126:3:218585:218601	2582621	1	True				
ANR	2582665	IdentifierDecl	* obytes		2582621	0					
ANR	2582666	IdentifierDeclType	byte *		2582621	0					
ANR	2582667	Identifier	obytes		2582621	1					
ANR	2582668	IdentifierDecl	bit		2582621	1					
ANR	2582669	IdentifierDeclType	byte		2582621	0					
ANR	2582670	Identifier	bit		2582621	1					
ANR	2582671	IdentifierDeclStatement	updscan_p scan ;	6127:3:218606:218620	2582621	2	True				
ANR	2582672	IdentifierDecl	scan		2582621	0					
ANR	2582673	IdentifierDeclType	updscan_p		2582621	0					
ANR	2582674	Identifier	scan		2582621	1					
ANR	2582675	IfStatement	if ( upd -> yscan < upd -> ints [ I_BEG_Y ] )		2582621	3					
ANR	2582676	Condition	upd -> yscan < upd -> ints [ I_BEG_Y ]	6131:6:218675:218705	2582621	0	True				
ANR	2582677	RelationalExpression	upd -> yscan < upd -> ints [ I_BEG_Y ]		2582621	0		<			
ANR	2582678	PtrMemberAccess	upd -> yscan		2582621	0					
ANR	2582679	Identifier	upd		2582621	0					
ANR	2582680	Identifier	yscan		2582621	1					
ANR	2582681	ArrayIndexing	upd -> ints [ I_BEG_Y ]		2582621	1					
ANR	2582682	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2582683	Identifier	upd		2582621	0					
ANR	2582684	Identifier	ints		2582621	1					
ANR	2582685	Identifier	I_BEG_Y		2582621	1					
ANR	2582686	CompoundStatement		8:39:205:205	2582621	1					
ANR	2582687	ExpressionStatement	ixpass = upd -> int_a [ IA_BEG_IX ] . data [ upd -> ipass ]	6132:6:218716:218763	2582621	0	True				
ANR	2582688	AssignmentExpression	ixpass = upd -> int_a [ IA_BEG_IX ] . data [ upd -> ipass ]		2582621	0		=			
ANR	2582689	Identifier	ixpass		2582621	0					
ANR	2582690	ArrayIndexing	upd -> int_a [ IA_BEG_IX ] . data [ upd -> ipass ]		2582621	1					
ANR	2582691	MemberAccess	upd -> int_a [ IA_BEG_IX ] . data		2582621	0					
ANR	2582692	ArrayIndexing	upd -> int_a [ IA_BEG_IX ]		2582621	0					
ANR	2582693	PtrMemberAccess	upd -> int_a		2582621	0					
ANR	2582694	Identifier	upd		2582621	0					
ANR	2582695	Identifier	int_a		2582621	1					
ANR	2582696	Identifier	IA_BEG_IX		2582621	1					
ANR	2582697	Identifier	data		2582621	1					
ANR	2582698	PtrMemberAccess	upd -> ipass		2582621	1					
ANR	2582699	Identifier	upd		2582621	0					
ANR	2582700	Identifier	ipass		2582621	1					
ANR	2582701	ExpressionStatement	pintop = 0	6133:6:218771:218781	2582621	1	True				
ANR	2582702	AssignmentExpression	pintop = 0		2582621	0		=			
ANR	2582703	Identifier	pintop		2582621	0					
ANR	2582704	PrimaryExpression	0		2582621	1					
ANR	2582705	ExpressionStatement	pinbot = upd -> int_a [ IA_BEGBOT ] . data [ upd -> ipass ]	6134:6:218789:218836	2582621	2	True				
ANR	2582706	AssignmentExpression	pinbot = upd -> int_a [ IA_BEGBOT ] . data [ upd -> ipass ]		2582621	0		=			
ANR	2582707	Identifier	pinbot		2582621	0					
ANR	2582708	ArrayIndexing	upd -> int_a [ IA_BEGBOT ] . data [ upd -> ipass ]		2582621	1					
ANR	2582709	MemberAccess	upd -> int_a [ IA_BEGBOT ] . data		2582621	0					
ANR	2582710	ArrayIndexing	upd -> int_a [ IA_BEGBOT ]		2582621	0					
ANR	2582711	PtrMemberAccess	upd -> int_a		2582621	0					
ANR	2582712	Identifier	upd		2582621	0					
ANR	2582713	Identifier	int_a		2582621	1					
ANR	2582714	Identifier	IA_BEGBOT		2582621	1					
ANR	2582715	Identifier	data		2582621	1					
ANR	2582716	PtrMemberAccess	upd -> ipass		2582621	1					
ANR	2582717	Identifier	upd		2582621	0					
ANR	2582718	Identifier	ipass		2582621	1					
ANR	2582719	ElseStatement	else		2582621	0					
ANR	2582720	IfStatement	if ( upd -> yscan >= upd -> ints [ I_END_Y ] )		2582621	0					
ANR	2582721	Condition	upd -> yscan >= upd -> ints [ I_END_Y ]	6135:13:218851:218882	2582621	0	True				
ANR	2582722	RelationalExpression	upd -> yscan >= upd -> ints [ I_END_Y ]		2582621	0		>=			
ANR	2582723	PtrMemberAccess	upd -> yscan		2582621	0					
ANR	2582724	Identifier	upd		2582621	0					
ANR	2582725	Identifier	yscan		2582621	1					
ANR	2582726	ArrayIndexing	upd -> ints [ I_END_Y ]		2582621	1					
ANR	2582727	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2582728	Identifier	upd		2582621	0					
ANR	2582729	Identifier	ints		2582621	1					
ANR	2582730	Identifier	I_END_Y		2582621	1					
ANR	2582731	CompoundStatement		12:47:382:382	2582621	1					
ANR	2582732	ExpressionStatement	ixpass = upd -> int_a [ IA_END_IX ] . data [ upd -> ipass ]	6136:6:218893:218940	2582621	0	True				
ANR	2582733	AssignmentExpression	ixpass = upd -> int_a [ IA_END_IX ] . data [ upd -> ipass ]		2582621	0		=			
ANR	2582734	Identifier	ixpass		2582621	0					
ANR	2582735	ArrayIndexing	upd -> int_a [ IA_END_IX ] . data [ upd -> ipass ]		2582621	1					
ANR	2582736	MemberAccess	upd -> int_a [ IA_END_IX ] . data		2582621	0					
ANR	2582737	ArrayIndexing	upd -> int_a [ IA_END_IX ]		2582621	0					
ANR	2582738	PtrMemberAccess	upd -> int_a		2582621	0					
ANR	2582739	Identifier	upd		2582621	0					
ANR	2582740	Identifier	int_a		2582621	1					
ANR	2582741	Identifier	IA_END_IX		2582621	1					
ANR	2582742	Identifier	data		2582621	1					
ANR	2582743	PtrMemberAccess	upd -> ipass		2582621	1					
ANR	2582744	Identifier	upd		2582621	0					
ANR	2582745	Identifier	ipass		2582621	1					
ANR	2582746	ExpressionStatement	pinbot = upd -> ints [ I_PINS2WRITE ]	6137:6:218948:218980	2582621	1	True				
ANR	2582747	AssignmentExpression	pinbot = upd -> ints [ I_PINS2WRITE ]		2582621	0		=			
ANR	2582748	Identifier	pinbot		2582621	0					
ANR	2582749	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		2582621	1					
ANR	2582750	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2582751	Identifier	upd		2582621	0					
ANR	2582752	Identifier	ints		2582621	1					
ANR	2582753	Identifier	I_PINS2WRITE		2582621	1					
ANR	2582754	ExpressionStatement	pintop = pinbot - upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]	6138:6:218988:219044	2582621	2	True				
ANR	2582755	AssignmentExpression	pintop = pinbot - upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]		2582621	0		=			
ANR	2582756	Identifier	pintop		2582621	0					
ANR	2582757	AdditiveExpression	pinbot - upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]		2582621	1		-			
ANR	2582758	Identifier	pinbot		2582621	0					
ANR	2582759	ArrayIndexing	upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]		2582621	1					
ANR	2582760	MemberAccess	upd -> int_a [ IA_ENDTOP ] . data		2582621	0					
ANR	2582761	ArrayIndexing	upd -> int_a [ IA_ENDTOP ]		2582621	0					
ANR	2582762	PtrMemberAccess	upd -> int_a		2582621	0					
ANR	2582763	Identifier	upd		2582621	0					
ANR	2582764	Identifier	int_a		2582621	1					
ANR	2582765	Identifier	IA_ENDTOP		2582621	1					
ANR	2582766	Identifier	data		2582621	1					
ANR	2582767	PtrMemberAccess	upd -> ipass		2582621	1					
ANR	2582768	Identifier	upd		2582621	0					
ANR	2582769	Identifier	ipass		2582621	1					
ANR	2582770	ElseStatement	else		2582621	0					
ANR	2582771	CompoundStatement		16:10:553:553	2582621	0					
ANR	2582772	ExpressionStatement	ixpass = upd -> int_a [ IA_STD_IX ] . data [ upd -> ipass ]	6140:6:219064:219111	2582621	0	True				
ANR	2582773	AssignmentExpression	ixpass = upd -> int_a [ IA_STD_IX ] . data [ upd -> ipass ]		2582621	0		=			
ANR	2582774	Identifier	ixpass		2582621	0					
ANR	2582775	ArrayIndexing	upd -> int_a [ IA_STD_IX ] . data [ upd -> ipass ]		2582621	1					
ANR	2582776	MemberAccess	upd -> int_a [ IA_STD_IX ] . data		2582621	0					
ANR	2582777	ArrayIndexing	upd -> int_a [ IA_STD_IX ]		2582621	0					
ANR	2582778	PtrMemberAccess	upd -> int_a		2582621	0					
ANR	2582779	Identifier	upd		2582621	0					
ANR	2582780	Identifier	int_a		2582621	1					
ANR	2582781	Identifier	IA_STD_IX		2582621	1					
ANR	2582782	Identifier	data		2582621	1					
ANR	2582783	PtrMemberAccess	upd -> ipass		2582621	1					
ANR	2582784	Identifier	upd		2582621	0					
ANR	2582785	Identifier	ipass		2582621	1					
ANR	2582786	ExpressionStatement	pintop = 0	6141:6:219119:219129	2582621	1	True				
ANR	2582787	AssignmentExpression	pintop = 0		2582621	0		=			
ANR	2582788	Identifier	pintop		2582621	0					
ANR	2582789	PrimaryExpression	0		2582621	1					
ANR	2582790	ExpressionStatement	pinbot = upd -> ints [ I_PINS2WRITE ]	6142:6:219137:219169	2582621	2	True				
ANR	2582791	AssignmentExpression	pinbot = upd -> ints [ I_PINS2WRITE ]		2582621	0		=			
ANR	2582792	Identifier	pinbot		2582621	0					
ANR	2582793	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		2582621	1					
ANR	2582794	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2582795	Identifier	upd		2582621	0					
ANR	2582796	Identifier	ints		2582621	1					
ANR	2582797	Identifier	I_PINS2WRITE		2582621	1					
ANR	2582798	ExpressionStatement	ybegin = pintop * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]	6145:3:219180:219254	2582621	4	True				
ANR	2582799	AssignmentExpression	ybegin = pintop * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		2582621	0		=			
ANR	2582800	Identifier	ybegin		2582621	0					
ANR	2582801	AdditiveExpression	pintop * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		2582621	1		+			
ANR	2582802	MultiplicativeExpression	pintop * upd -> ints [ I_NYPASS ]		2582621	0		*			
ANR	2582803	Identifier	pintop		2582621	0					
ANR	2582804	ArrayIndexing	upd -> ints [ I_NYPASS ]		2582621	1					
ANR	2582805	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2582806	Identifier	upd		2582621	0					
ANR	2582807	Identifier	ints		2582621	1					
ANR	2582808	Identifier	I_NYPASS		2582621	1					
ANR	2582809	AdditiveExpression	upd -> yscan - upd -> ints [ I_BEGSKIP ]		2582621	1		-			
ANR	2582810	PtrMemberAccess	upd -> yscan		2582621	0					
ANR	2582811	Identifier	upd		2582621	0					
ANR	2582812	Identifier	yscan		2582621	1					
ANR	2582813	ArrayIndexing	upd -> ints [ I_BEGSKIP ]		2582621	1					
ANR	2582814	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2582815	Identifier	upd		2582621	0					
ANR	2582816	Identifier	ints		2582621	1					
ANR	2582817	Identifier	I_BEGSKIP		2582621	1					
ANR	2582818	ExpressionStatement	yend = pinbot * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]	6146:3:219259:219333	2582621	5	True				
ANR	2582819	AssignmentExpression	yend = pinbot * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		2582621	0		=			
ANR	2582820	Identifier	yend		2582621	0					
ANR	2582821	AdditiveExpression	pinbot * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		2582621	1		+			
ANR	2582822	MultiplicativeExpression	pinbot * upd -> ints [ I_NYPASS ]		2582621	0		*			
ANR	2582823	Identifier	pinbot		2582621	0					
ANR	2582824	ArrayIndexing	upd -> ints [ I_NYPASS ]		2582621	1					
ANR	2582825	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2582826	Identifier	upd		2582621	0					
ANR	2582827	Identifier	ints		2582621	1					
ANR	2582828	Identifier	I_NYPASS		2582621	1					
ANR	2582829	AdditiveExpression	upd -> yscan - upd -> ints [ I_BEGSKIP ]		2582621	1		-			
ANR	2582830	PtrMemberAccess	upd -> yscan		2582621	0					
ANR	2582831	Identifier	upd		2582621	0					
ANR	2582832	Identifier	yscan		2582621	1					
ANR	2582833	ArrayIndexing	upd -> ints [ I_BEGSKIP ]		2582621	1					
ANR	2582834	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2582835	Identifier	upd		2582621	0					
ANR	2582836	Identifier	ints		2582621	1					
ANR	2582837	Identifier	I_BEGSKIP		2582621	1					
ANR	2582838	ExpressionStatement	xbegin = upd -> pwidth	6150:3:219376:219396	2582621	6	True				
ANR	2582839	AssignmentExpression	xbegin = upd -> pwidth		2582621	0		=			
ANR	2582840	Identifier	xbegin		2582621	0					
ANR	2582841	PtrMemberAccess	upd -> pwidth		2582621	1					
ANR	2582842	Identifier	upd		2582621	0					
ANR	2582843	Identifier	pwidth		2582621	1					
ANR	2582844	ExpressionStatement	xend = - 1	6151:3:219401:219412	2582621	7	True				
ANR	2582845	AssignmentExpression	xend = - 1		2582621	0		=			
ANR	2582846	Identifier	xend		2582621	0					
ANR	2582847	UnaryOperationExpression	- 1		2582621	1					
ANR	2582848	UnaryOperator	-		2582621	0					
ANR	2582849	PrimaryExpression	1		2582621	1					
ANR	2582850	ForStatement	for ( y = ybegin ; y < yend ; y += upd -> ints [ I_NYPASS ] )		2582621	8					
ANR	2582851	ForInit	y = ybegin ;	6153:7:219422:219432	2582621	0	True				
ANR	2582852	AssignmentExpression	y = ybegin		2582621	0		=			
ANR	2582853	Identifier	y		2582621	0					
ANR	2582854	Identifier	ybegin		2582621	1					
ANR	2582855	Condition	y < yend	6153:19:219434:219441	2582621	1	True				
ANR	2582856	RelationalExpression	y < yend		2582621	0		<			
ANR	2582857	Identifier	y		2582621	0					
ANR	2582858	Identifier	yend		2582621	1					
ANR	2582859	AssignmentExpression	y += upd -> ints [ I_NYPASS ]	6153:29:219444:219467	2582621	2	True	+=			
ANR	2582860	Identifier	y		2582621	0					
ANR	2582861	ArrayIndexing	upd -> ints [ I_NYPASS ]		2582621	1					
ANR	2582862	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2582863	Identifier	upd		2582621	0					
ANR	2582864	Identifier	ints		2582621	1					
ANR	2582865	Identifier	I_NYPASS		2582621	1					
ANR	2582866	CompoundStatement		30:55:967:967	2582621	3					
ANR	2582867	IfStatement	if ( 0 > y )		2582621	0					
ANR	2582868	Condition	0 > y	6155:9:219501:219505	2582621	0	True				
ANR	2582869	RelationalExpression	0 > y		2582621	0		>			
ANR	2582870	PrimaryExpression	0		2582621	0					
ANR	2582871	Identifier	y		2582621	1					
ANR	2582872	ContinueStatement	continue ;	6155:16:219508:219516	2582621	1	True				
ANR	2582873	ExpressionStatement	scan = upd -> scnbuf [ y & upd -> scnmsk ]	6157:6:219550:219585	2582621	1	True				
ANR	2582874	AssignmentExpression	scan = upd -> scnbuf [ y & upd -> scnmsk ]		2582621	0		=			
ANR	2582875	Identifier	scan		2582621	0					
ANR	2582876	ArrayIndexing	upd -> scnbuf [ y & upd -> scnmsk ]		2582621	1					
ANR	2582877	PtrMemberAccess	upd -> scnbuf		2582621	0					
ANR	2582878	Identifier	upd		2582621	0					
ANR	2582879	Identifier	scnbuf		2582621	1					
ANR	2582880	BitAndExpression	y & upd -> scnmsk		2582621	1		&			
ANR	2582881	Identifier	y		2582621	0					
ANR	2582882	PtrMemberAccess	upd -> scnmsk		2582621	1					
ANR	2582883	Identifier	upd		2582621	0					
ANR	2582884	Identifier	scnmsk		2582621	1					
ANR	2582885	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		2582621	2					
ANR	2582886	ForInit	icomp = 0 ;	6159:10:219598:219607	2582621	0	True				
ANR	2582887	AssignmentExpression	icomp = 0		2582621	0		=			
ANR	2582888	Identifier	icomp		2582621	0					
ANR	2582889	PrimaryExpression	0		2582621	1					
ANR	2582890	Condition	icomp < upd -> ocomp	6159:21:219609:219626	2582621	1	True				
ANR	2582891	RelationalExpression	icomp < upd -> ocomp		2582621	0		<			
ANR	2582892	Identifier	icomp		2582621	0					
ANR	2582893	PtrMemberAccess	upd -> ocomp		2582621	1					
ANR	2582894	Identifier	upd		2582621	0					
ANR	2582895	Identifier	ocomp		2582621	1					
ANR	2582896	UnaryExpression	++ icomp	6159:41:219629:219635	2582621	2	True				
ANR	2582897	IncDec	++		2582621	0					
ANR	2582898	Identifier	icomp		2582621	1					
ANR	2582899	CompoundStatement		36:50:1135:1135	2582621	3					
ANR	2582900	IfStatement	if ( xbegin > scan [ icomp ] . xbegin [ ixpass ] )		2582621	0					
ANR	2582901	Condition	xbegin > scan [ icomp ] . xbegin [ ixpass ]	6160:12:219672:219706	2582621	0	True				
ANR	2582902	RelationalExpression	xbegin > scan [ icomp ] . xbegin [ ixpass ]		2582621	0		>			
ANR	2582903	Identifier	xbegin		2582621	0					
ANR	2582904	ArrayIndexing	scan [ icomp ] . xbegin [ ixpass ]		2582621	1					
ANR	2582905	MemberAccess	scan [ icomp ] . xbegin		2582621	0					
ANR	2582906	ArrayIndexing	scan [ icomp ]		2582621	0					
ANR	2582907	Identifier	scan		2582621	0					
ANR	2582908	Identifier	icomp		2582621	1					
ANR	2582909	Identifier	xbegin		2582621	1					
ANR	2582910	Identifier	ixpass		2582621	1					
ANR	2582911	ExpressionStatement	xbegin = scan [ icomp ] . xbegin [ ixpass ]	6161:12:219721:219756	2582621	1	True				
ANR	2582912	AssignmentExpression	xbegin = scan [ icomp ] . xbegin [ ixpass ]		2582621	0		=			
ANR	2582913	Identifier	xbegin		2582621	0					
ANR	2582914	ArrayIndexing	scan [ icomp ] . xbegin [ ixpass ]		2582621	1					
ANR	2582915	MemberAccess	scan [ icomp ] . xbegin		2582621	0					
ANR	2582916	ArrayIndexing	scan [ icomp ]		2582621	0					
ANR	2582917	Identifier	scan		2582621	0					
ANR	2582918	Identifier	icomp		2582621	1					
ANR	2582919	Identifier	xbegin		2582621	1					
ANR	2582920	Identifier	ixpass		2582621	1					
ANR	2582921	IfStatement	if ( xend < scan [ icomp ] . xend [ ixpass ] )		2582621	1					
ANR	2582922	Condition	xend < scan [ icomp ] . xend [ ixpass ]	6162:12:219770:219804	2582621	0	True				
ANR	2582923	RelationalExpression	xend < scan [ icomp ] . xend [ ixpass ]		2582621	0		<			
ANR	2582924	Identifier	xend		2582621	0					
ANR	2582925	ArrayIndexing	scan [ icomp ] . xend [ ixpass ]		2582621	1					
ANR	2582926	MemberAccess	scan [ icomp ] . xend		2582621	0					
ANR	2582927	ArrayIndexing	scan [ icomp ]		2582621	0					
ANR	2582928	Identifier	scan		2582621	0					
ANR	2582929	Identifier	icomp		2582621	1					
ANR	2582930	Identifier	xend		2582621	1					
ANR	2582931	Identifier	ixpass		2582621	1					
ANR	2582932	ExpressionStatement	xend = scan [ icomp ] . xend [ ixpass ]	6163:12:219819:219854	2582621	1	True				
ANR	2582933	AssignmentExpression	xend = scan [ icomp ] . xend [ ixpass ]		2582621	0		=			
ANR	2582934	Identifier	xend		2582621	0					
ANR	2582935	ArrayIndexing	scan [ icomp ] . xend [ ixpass ]		2582621	1					
ANR	2582936	MemberAccess	scan [ icomp ] . xend		2582621	0					
ANR	2582937	ArrayIndexing	scan [ icomp ]		2582621	0					
ANR	2582938	Identifier	scan		2582621	0					
ANR	2582939	Identifier	icomp		2582621	1					
ANR	2582940	Identifier	xend		2582621	1					
ANR	2582941	Identifier	ixpass		2582621	1					
ANR	2582942	IfStatement	if ( xbegin <= xend )		2582621	9					
ANR	2582943	Condition	xbegin <= xend	6168:6:220012:220025	2582621	0	True				
ANR	2582944	RelationalExpression	xbegin <= xend		2582621	0		<=			
ANR	2582945	Identifier	xbegin		2582621	0					
ANR	2582946	Identifier	xend		2582621	1					
ANR	2582947	CompoundStatement		45:22:1525:1525	2582621	1					
ANR	2582948	ExpressionStatement	ioutbuf = upd -> nbytes	6170:6:220062:220083	2582621	0	True				
ANR	2582949	AssignmentExpression	ioutbuf = upd -> nbytes		2582621	0		=			
ANR	2582950	Identifier	ioutbuf		2582621	0					
ANR	2582951	PtrMemberAccess	upd -> nbytes		2582621	1					
ANR	2582952	Identifier	upd		2582621	0					
ANR	2582953	Identifier	nbytes		2582621	1					
ANR	2582954	IfStatement	if ( 0 == upd -> strings [ S_XMOVE ] . size )		2582621	1					
ANR	2582955	Condition	0 == upd -> strings [ S_XMOVE ] . size	6172:9:220095:220125	2582621	0	True				
ANR	2582956	EqualityExpression	0 == upd -> strings [ S_XMOVE ] . size		2582621	0		==			
ANR	2582957	PrimaryExpression	0		2582621	0					
ANR	2582958	MemberAccess	upd -> strings [ S_XMOVE ] . size		2582621	1					
ANR	2582959	ArrayIndexing	upd -> strings [ S_XMOVE ]		2582621	0					
ANR	2582960	PtrMemberAccess	upd -> strings		2582621	0					
ANR	2582961	Identifier	upd		2582621	0					
ANR	2582962	Identifier	strings		2582621	1					
ANR	2582963	Identifier	S_XMOVE		2582621	1					
ANR	2582964	Identifier	size		2582621	1					
ANR	2582965	ExpressionStatement	xbegin = ixpass	6172:42:220128:220143	2582621	1	True				
ANR	2582966	AssignmentExpression	xbegin = ixpass		2582621	0		=			
ANR	2582967	Identifier	xbegin		2582621	0					
ANR	2582968	Identifier	ixpass		2582621	1					
ANR	2582969	IfStatement	if ( upd -> yscan != upd -> yprinter )		2582621	2					
ANR	2582970	Condition	upd -> yscan != upd -> yprinter	6177:9:220199:220225	2582621	0	True				
ANR	2582971	EqualityExpression	upd -> yscan != upd -> yprinter		2582621	0		!=			
ANR	2582972	PtrMemberAccess	upd -> yscan		2582621	0					
ANR	2582973	Identifier	upd		2582621	0					
ANR	2582974	Identifier	yscan		2582621	1					
ANR	2582975	PtrMemberAccess	upd -> yprinter		2582621	1					
ANR	2582976	Identifier	upd		2582621	0					
ANR	2582977	Identifier	yprinter		2582621	1					
ANR	2582978	CompoundStatement		54:38:1725:1725	2582621	1					
ANR	2582979	IfStatement	if ( B_YABS & upd -> flags )		2582621	0					
ANR	2582980	Condition	B_YABS & upd -> flags	6178:12:220266:220284	2582621	0	True				
ANR	2582981	BitAndExpression	B_YABS & upd -> flags		2582621	0		&			
ANR	2582982	Identifier	B_YABS		2582621	0					
ANR	2582983	PtrMemberAccess	upd -> flags		2582621	1					
ANR	2582984	Identifier	upd		2582621	0					
ANR	2582985	Identifier	flags		2582621	1					
ANR	2582986	ExpressionStatement	y = upd -> yscan + upd -> ints [ I_YOFS ]	6178:33:220287:220321	2582621	1	True				
ANR	2582987	AssignmentExpression	y = upd -> yscan + upd -> ints [ I_YOFS ]		2582621	0		=			
ANR	2582988	Identifier	y		2582621	0					
ANR	2582989	AdditiveExpression	upd -> yscan + upd -> ints [ I_YOFS ]		2582621	1		+			
ANR	2582990	PtrMemberAccess	upd -> yscan		2582621	0					
ANR	2582991	Identifier	upd		2582621	0					
ANR	2582992	Identifier	yscan		2582621	1					
ANR	2582993	ArrayIndexing	upd -> ints [ I_YOFS ]		2582621	1					
ANR	2582994	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2582995	Identifier	upd		2582621	0					
ANR	2582996	Identifier	ints		2582621	1					
ANR	2582997	Identifier	I_YOFS		2582621	1					
ANR	2582998	ElseStatement	else		2582621	0					
ANR	2582999	ExpressionStatement	y = upd -> yscan - upd -> yprinter	6179:33:220356:220386	2582621	0	True				
ANR	2583000	AssignmentExpression	y = upd -> yscan - upd -> yprinter		2582621	0		=			
ANR	2583001	Identifier	y		2582621	0					
ANR	2583002	AdditiveExpression	upd -> yscan - upd -> yprinter		2582621	1		-			
ANR	2583003	PtrMemberAccess	upd -> yscan		2582621	0					
ANR	2583004	Identifier	upd		2582621	0					
ANR	2583005	Identifier	yscan		2582621	1					
ANR	2583006	PtrMemberAccess	upd -> yprinter		2582621	1					
ANR	2583007	Identifier	upd		2582621	0					
ANR	2583008	Identifier	yprinter		2582621	1					
ANR	2583009	IfStatement	if ( 1 < upd -> ints [ I_YSTEP ] )		2582621	1					
ANR	2583010	Condition	1 < upd -> ints [ I_YSTEP ]	6181:18:220407:220428	2582621	0	True				
ANR	2583011	RelationalExpression	1 < upd -> ints [ I_YSTEP ]		2582621	0		<			
ANR	2583012	PrimaryExpression	1		2582621	0					
ANR	2583013	ArrayIndexing	upd -> ints [ I_YSTEP ]		2582621	1					
ANR	2583014	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2583015	Identifier	upd		2582621	0					
ANR	2583016	Identifier	ints		2582621	1					
ANR	2583017	Identifier	I_YSTEP		2582621	1					
ANR	2583018	CompoundStatement		58:42:1928:1928	2582621	1					
ANR	2583019	ExpressionStatement	n = y / upd -> ints [ I_YSTEP ]	6182:12:220445:220477	2582621	0	True				
ANR	2583020	AssignmentExpression	n = y / upd -> ints [ I_YSTEP ]		2582621	0		=			
ANR	2583021	Identifier	n		2582621	0					
ANR	2583022	MultiplicativeExpression	y / upd -> ints [ I_YSTEP ]		2582621	1		/			
ANR	2583023	Identifier	y		2582621	0					
ANR	2583024	ArrayIndexing	upd -> ints [ I_YSTEP ]		2582621	1					
ANR	2583025	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2583026	Identifier	upd		2582621	0					
ANR	2583027	Identifier	ints		2582621	1					
ANR	2583028	Identifier	I_YSTEP		2582621	1					
ANR	2583029	ExpressionStatement	y -= n * upd -> ints [ I_YSTEP ]	6183:12:220510:220542	2582621	1	True				
ANR	2583030	AssignmentExpression	y -= n * upd -> ints [ I_YSTEP ]		2582621	0		-=			
ANR	2583031	Identifier	y		2582621	0					
ANR	2583032	MultiplicativeExpression	n * upd -> ints [ I_YSTEP ]		2582621	1		*			
ANR	2583033	Identifier	n		2582621	0					
ANR	2583034	ArrayIndexing	upd -> ints [ I_YSTEP ]		2582621	1					
ANR	2583035	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2583036	Identifier	upd		2582621	0					
ANR	2583037	Identifier	ints		2582621	1					
ANR	2583038	Identifier	I_YSTEP		2582621	1					
ANR	2583039	ElseStatement	else		2582621	0					
ANR	2583040	IfStatement	if ( - 1 > upd -> ints [ I_YSTEP ] )		2582621	0					
ANR	2583041	Condition	- 1 > upd -> ints [ I_YSTEP ]	6184:19:220582:220604	2582621	0	True				
ANR	2583042	RelationalExpression	- 1 > upd -> ints [ I_YSTEP ]		2582621	0		>			
ANR	2583043	UnaryOperationExpression	- 1		2582621	0					
ANR	2583044	UnaryOperator	-		2582621	0					
ANR	2583045	PrimaryExpression	1		2582621	1					
ANR	2583046	ArrayIndexing	upd -> ints [ I_YSTEP ]		2582621	1					
ANR	2583047	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2583048	Identifier	upd		2582621	0					
ANR	2583049	Identifier	ints		2582621	1					
ANR	2583050	Identifier	I_YSTEP		2582621	1					
ANR	2583051	CompoundStatement		61:44:2104:2104	2582621	1					
ANR	2583052	ExpressionStatement	n = y * - upd -> ints [ I_YSTEP ]	6185:12:220621:220653	2582621	0	True				
ANR	2583053	AssignmentExpression	n = y * - upd -> ints [ I_YSTEP ]		2582621	0		=			
ANR	2583054	Identifier	n		2582621	0					
ANR	2583055	MultiplicativeExpression	y * - upd -> ints [ I_YSTEP ]		2582621	1		*			
ANR	2583056	Identifier	y		2582621	0					
ANR	2583057	UnaryOperationExpression	- upd -> ints [ I_YSTEP ]		2582621	1					
ANR	2583058	UnaryOperator	-		2582621	0					
ANR	2583059	ArrayIndexing	upd -> ints [ I_YSTEP ]		2582621	1					
ANR	2583060	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2583061	Identifier	upd		2582621	0					
ANR	2583062	Identifier	ints		2582621	1					
ANR	2583063	Identifier	I_YSTEP		2582621	1					
ANR	2583064	ExpressionStatement	y = 0	6186:12:220689:220699	2582621	1	True				
ANR	2583065	AssignmentExpression	y = 0		2582621	0		=			
ANR	2583066	Identifier	y		2582621	0					
ANR	2583067	PrimaryExpression	0		2582621	1					
ANR	2583068	ElseStatement	else		2582621	0					
ANR	2583069	CompoundStatement		64:16:2214:2214	2582621	0					
ANR	2583070	ExpressionStatement	n = y	6188:12:220731:220741	2582621	0	True				
ANR	2583071	AssignmentExpression	n = y		2582621	0		=			
ANR	2583072	Identifier	n		2582621	0					
ANR	2583073	Identifier	y		2582621	1					
ANR	2583074	ExpressionStatement	y = 0	6189:12:220755:220765	2582621	1	True				
ANR	2583075	AssignmentExpression	y = 0		2582621	0		=			
ANR	2583076	Identifier	y		2582621	0					
ANR	2583077	PrimaryExpression	0		2582621	1					
ANR	2583078	IfStatement	if ( n )		2582621	2					
ANR	2583079	Condition	n	6192:12:220791:220791	2582621	0	True				
ANR	2583080	Identifier	n		2582621	0					
ANR	2583081	CompoundStatement		69:15:2291:2291	2582621	1					
ANR	2583082	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YMOVE ] . data , upd -> strings [ S_YMOVE ] . size )"	6193:12:220833:220938	2582621	0	True				
ANR	2583083	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YMOVE ] . data , upd -> strings [ S_YMOVE ] . size )"		2582621	0					
ANR	2583084	Callee	memcpy		2582621	0					
ANR	2583085	Identifier	memcpy		2582621	0					
ANR	2583086	ArgumentList	upd -> outbuf + ioutbuf		2582621	1					
ANR	2583087	Argument	upd -> outbuf + ioutbuf		2582621	0					
ANR	2583088	AdditiveExpression	upd -> outbuf + ioutbuf		2582621	0		+			
ANR	2583089	PtrMemberAccess	upd -> outbuf		2582621	0					
ANR	2583090	Identifier	upd		2582621	0					
ANR	2583091	Identifier	outbuf		2582621	1					
ANR	2583092	Identifier	ioutbuf		2582621	1					
ANR	2583093	Argument	upd -> strings [ S_YMOVE ] . data		2582621	1					
ANR	2583094	MemberAccess	upd -> strings [ S_YMOVE ] . data		2582621	0					
ANR	2583095	ArrayIndexing	upd -> strings [ S_YMOVE ]		2582621	0					
ANR	2583096	PtrMemberAccess	upd -> strings		2582621	0					
ANR	2583097	Identifier	upd		2582621	0					
ANR	2583098	Identifier	strings		2582621	1					
ANR	2583099	Identifier	S_YMOVE		2582621	1					
ANR	2583100	Identifier	data		2582621	1					
ANR	2583101	Argument	upd -> strings [ S_YMOVE ] . size		2582621	2					
ANR	2583102	MemberAccess	upd -> strings [ S_YMOVE ] . size		2582621	0					
ANR	2583103	ArrayIndexing	upd -> strings [ S_YMOVE ]		2582621	0					
ANR	2583104	PtrMemberAccess	upd -> strings		2582621	0					
ANR	2583105	Identifier	upd		2582621	0					
ANR	2583106	Identifier	strings		2582621	1					
ANR	2583107	Identifier	S_YMOVE		2582621	1					
ANR	2583108	Identifier	size		2582621	1					
ANR	2583109	ExpressionStatement	ioutbuf += upd -> strings [ S_YMOVE ] . size	6195:12:220952:220989	2582621	1	True				
ANR	2583110	AssignmentExpression	ioutbuf += upd -> strings [ S_YMOVE ] . size		2582621	0		+=			
ANR	2583111	Identifier	ioutbuf		2582621	0					
ANR	2583112	MemberAccess	upd -> strings [ S_YMOVE ] . size		2582621	1					
ANR	2583113	ArrayIndexing	upd -> strings [ S_YMOVE ]		2582621	0					
ANR	2583114	PtrMemberAccess	upd -> strings		2582621	0					
ANR	2583115	Identifier	upd		2582621	0					
ANR	2583116	Identifier	strings		2582621	1					
ANR	2583117	Identifier	S_YMOVE		2582621	1					
ANR	2583118	Identifier	size		2582621	1					
ANR	2583119	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = n & 0xff	6197:12:221004:221042	2582621	2	True				
ANR	2583120	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = n & 0xff		2582621	0		=			
ANR	2583121	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2582621	0					
ANR	2583122	PtrMemberAccess	upd -> outbuf		2582621	0					
ANR	2583123	Identifier	upd		2582621	0					
ANR	2583124	Identifier	outbuf		2582621	1					
ANR	2583125	PostIncDecOperationExpression	ioutbuf ++		2582621	1					
ANR	2583126	Identifier	ioutbuf		2582621	0					
ANR	2583127	IncDec	++		2582621	1					
ANR	2583128	BitAndExpression	n & 0xff		2582621	1		&			
ANR	2583129	Identifier	n		2582621	0					
ANR	2583130	PrimaryExpression	0xff		2582621	1					
ANR	2583131	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff	6198:12:221056:221094	2582621	3	True				
ANR	2583132	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff		2582621	0		=			
ANR	2583133	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2582621	0					
ANR	2583134	PtrMemberAccess	upd -> outbuf		2582621	0					
ANR	2583135	Identifier	upd		2582621	0					
ANR	2583136	Identifier	outbuf		2582621	1					
ANR	2583137	PostIncDecOperationExpression	ioutbuf ++		2582621	1					
ANR	2583138	Identifier	ioutbuf		2582621	0					
ANR	2583139	IncDec	++		2582621	1					
ANR	2583140	BitAndExpression	( n >> 8 ) & 0xff		2582621	1		&			
ANR	2583141	ShiftExpression	n >> 8		2582621	0		>>			
ANR	2583142	Identifier	n		2582621	0					
ANR	2583143	PrimaryExpression	8		2582621	1					
ANR	2583144	PrimaryExpression	0xff		2582621	1					
ANR	2583145	IfStatement	if ( 0 < upd -> strings [ S_YSTEP ] . size )		2582621	3					
ANR	2583146	Condition	0 < upd -> strings [ S_YSTEP ] . size	6202:12:221152:221181	2582621	0	True				
ANR	2583147	RelationalExpression	0 < upd -> strings [ S_YSTEP ] . size		2582621	0		<			
ANR	2583148	PrimaryExpression	0		2582621	0					
ANR	2583149	MemberAccess	upd -> strings [ S_YSTEP ] . size		2582621	1					
ANR	2583150	ArrayIndexing	upd -> strings [ S_YSTEP ]		2582621	0					
ANR	2583151	PtrMemberAccess	upd -> strings		2582621	0					
ANR	2583152	Identifier	upd		2582621	0					
ANR	2583153	Identifier	strings		2582621	1					
ANR	2583154	Identifier	S_YSTEP		2582621	1					
ANR	2583155	Identifier	size		2582621	1					
ANR	2583156	CompoundStatement		79:44:2681:2681	2582621	1					
ANR	2583157	WhileStatement	while ( y -- )		2582621	0					
ANR	2583158	Condition	y --	6203:18:221204:221206	2582621	0	True				
ANR	2583159	PostIncDecOperationExpression	y --		2582621	0					
ANR	2583160	Identifier	y		2582621	0					
ANR	2583161	IncDec	--		2582621	1					
ANR	2583162	CompoundStatement		80:23:2706:2706	2582621	1					
ANR	2583163	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YSTEP ] . data , upd -> strings [ S_YSTEP ] . size )"	6204:15:221226:221361	2582621	0	True				
ANR	2583164	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YSTEP ] . data , upd -> strings [ S_YSTEP ] . size )"		2582621	0					
ANR	2583165	Callee	memcpy		2582621	0					
ANR	2583166	Identifier	memcpy		2582621	0					
ANR	2583167	ArgumentList	upd -> outbuf + ioutbuf		2582621	1					
ANR	2583168	Argument	upd -> outbuf + ioutbuf		2582621	0					
ANR	2583169	AdditiveExpression	upd -> outbuf + ioutbuf		2582621	0		+			
ANR	2583170	PtrMemberAccess	upd -> outbuf		2582621	0					
ANR	2583171	Identifier	upd		2582621	0					
ANR	2583172	Identifier	outbuf		2582621	1					
ANR	2583173	Identifier	ioutbuf		2582621	1					
ANR	2583174	Argument	upd -> strings [ S_YSTEP ] . data		2582621	1					
ANR	2583175	MemberAccess	upd -> strings [ S_YSTEP ] . data		2582621	0					
ANR	2583176	ArrayIndexing	upd -> strings [ S_YSTEP ]		2582621	0					
ANR	2583177	PtrMemberAccess	upd -> strings		2582621	0					
ANR	2583178	Identifier	upd		2582621	0					
ANR	2583179	Identifier	strings		2582621	1					
ANR	2583180	Identifier	S_YSTEP		2582621	1					
ANR	2583181	Identifier	data		2582621	1					
ANR	2583182	Argument	upd -> strings [ S_YSTEP ] . size		2582621	2					
ANR	2583183	MemberAccess	upd -> strings [ S_YSTEP ] . size		2582621	0					
ANR	2583184	ArrayIndexing	upd -> strings [ S_YSTEP ]		2582621	0					
ANR	2583185	PtrMemberAccess	upd -> strings		2582621	0					
ANR	2583186	Identifier	upd		2582621	0					
ANR	2583187	Identifier	strings		2582621	1					
ANR	2583188	Identifier	S_YSTEP		2582621	1					
ANR	2583189	Identifier	size		2582621	1					
ANR	2583190	ExpressionStatement	ioutbuf += upd -> strings [ S_YSTEP ] . size	6207:15:221378:221415	2582621	1	True				
ANR	2583191	AssignmentExpression	ioutbuf += upd -> strings [ S_YSTEP ] . size		2582621	0		+=			
ANR	2583192	Identifier	ioutbuf		2582621	0					
ANR	2583193	MemberAccess	upd -> strings [ S_YSTEP ] . size		2582621	1					
ANR	2583194	ArrayIndexing	upd -> strings [ S_YSTEP ]		2582621	0					
ANR	2583195	PtrMemberAccess	upd -> strings		2582621	0					
ANR	2583196	Identifier	upd		2582621	0					
ANR	2583197	Identifier	strings		2582621	1					
ANR	2583198	Identifier	S_YSTEP		2582621	1					
ANR	2583199	Identifier	size		2582621	1					
ANR	2583200	ExpressionStatement	upd -> yprinter = upd -> yscan	6211:9:221452:221478	2582621	4	True				
ANR	2583201	AssignmentExpression	upd -> yprinter = upd -> yscan		2582621	0		=			
ANR	2583202	PtrMemberAccess	upd -> yprinter		2582621	0					
ANR	2583203	Identifier	upd		2582621	0					
ANR	2583204	Identifier	yprinter		2582621	1					
ANR	2583205	PtrMemberAccess	upd -> yscan		2582621	1					
ANR	2583206	Identifier	upd		2582621	0					
ANR	2583207	Identifier	yscan		2582621	1					
ANR	2583208	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		2582621	3					
ANR	2583209	ForInit	icomp = 0 ;	6217:10:221599:221608	2582621	0	True				
ANR	2583210	AssignmentExpression	icomp = 0		2582621	0		=			
ANR	2583211	Identifier	icomp		2582621	0					
ANR	2583212	PrimaryExpression	0		2582621	1					
ANR	2583213	Condition	icomp < upd -> ocomp	6217:21:221610:221627	2582621	1	True				
ANR	2583214	RelationalExpression	icomp < upd -> ocomp		2582621	0		<			
ANR	2583215	Identifier	icomp		2582621	0					
ANR	2583216	PtrMemberAccess	upd -> ocomp		2582621	1					
ANR	2583217	Identifier	upd		2582621	0					
ANR	2583218	Identifier	ocomp		2582621	1					
ANR	2583219	UnaryExpression	++ icomp	6217:41:221630:221636	2582621	2	True				
ANR	2583220	IncDec	++		2582621	0					
ANR	2583221	Identifier	icomp		2582621	1					
ANR	2583222	CompoundStatement		94:50:3136:3136	2582621	3					
ANR	2583223	ForStatement	for ( y = ybegin ; y < yend ; y += upd -> ints [ I_NYPASS ] )		2582621	0					
ANR	2583224	ForInit	y = ybegin ;	6221:13:221742:221752	2582621	0	True				
ANR	2583225	AssignmentExpression	y = ybegin		2582621	0		=			
ANR	2583226	Identifier	y		2582621	0					
ANR	2583227	Identifier	ybegin		2582621	1					
ANR	2583228	Condition	y < yend	6221:25:221754:221761	2582621	1	True				
ANR	2583229	RelationalExpression	y < yend		2582621	0		<			
ANR	2583230	Identifier	y		2582621	0					
ANR	2583231	Identifier	yend		2582621	1					
ANR	2583232	AssignmentExpression	y += upd -> ints [ I_NYPASS ]	6221:35:221764:221787	2582621	2	True	+=			
ANR	2583233	Identifier	y		2582621	0					
ANR	2583234	ArrayIndexing	upd -> ints [ I_NYPASS ]		2582621	1					
ANR	2583235	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2583236	Identifier	upd		2582621	0					
ANR	2583237	Identifier	ints		2582621	1					
ANR	2583238	Identifier	I_NYPASS		2582621	1					
ANR	2583239	CompoundStatement		98:61:3287:3287	2582621	3					
ANR	2583240	IfStatement	if ( 0 > y )		2582621	0					
ANR	2583241	Condition	0 > y	6222:15:221823:221827	2582621	0	True				
ANR	2583242	RelationalExpression	0 > y		2582621	0		>			
ANR	2583243	PrimaryExpression	0		2582621	0					
ANR	2583244	Identifier	y		2582621	1					
ANR	2583245	ContinueStatement	continue ;	6222:22:221830:221838	2582621	1	True				
ANR	2583246	ExpressionStatement	scan = upd -> scnbuf [ y & upd -> scnmsk ] + icomp	6223:12:221852:221893	2582621	1	True				
ANR	2583247	AssignmentExpression	scan = upd -> scnbuf [ y & upd -> scnmsk ] + icomp		2582621	0		=			
ANR	2583248	Identifier	scan		2582621	0					
ANR	2583249	AdditiveExpression	upd -> scnbuf [ y & upd -> scnmsk ] + icomp		2582621	1		+			
ANR	2583250	ArrayIndexing	upd -> scnbuf [ y & upd -> scnmsk ]		2582621	0					
ANR	2583251	PtrMemberAccess	upd -> scnbuf		2582621	0					
ANR	2583252	Identifier	upd		2582621	0					
ANR	2583253	Identifier	scnbuf		2582621	1					
ANR	2583254	BitAndExpression	y & upd -> scnmsk		2582621	1		&			
ANR	2583255	Identifier	y		2582621	0					
ANR	2583256	PtrMemberAccess	upd -> scnmsk		2582621	1					
ANR	2583257	Identifier	upd		2582621	0					
ANR	2583258	Identifier	scnmsk		2582621	1					
ANR	2583259	Identifier	icomp		2582621	1					
ANR	2583260	IfStatement	if ( 0 <= scan -> xend [ ixpass ] )		2582621	2					
ANR	2583261	Condition	0 <= scan -> xend [ ixpass ]	6224:15:221910:221932	2582621	0	True				
ANR	2583262	RelationalExpression	0 <= scan -> xend [ ixpass ]		2582621	0		<=			
ANR	2583263	PrimaryExpression	0		2582621	0					
ANR	2583264	ArrayIndexing	scan -> xend [ ixpass ]		2582621	1					
ANR	2583265	PtrMemberAccess	scan -> xend		2582621	0					
ANR	2583266	Identifier	scan		2582621	0					
ANR	2583267	Identifier	xend		2582621	1					
ANR	2583268	Identifier	ixpass		2582621	1					
ANR	2583269	BreakStatement	break ;	6224:40:221935:221940	2582621	1	True				
ANR	2583270	IfStatement	if ( y >= yend )		2582621	1					
ANR	2583271	Condition	y >= yend	6226:12:222033:222041	2582621	0	True				
ANR	2583272	RelationalExpression	y >= yend		2582621	0		>=			
ANR	2583273	Identifier	y		2582621	0					
ANR	2583274	Identifier	yend		2582621	1					
ANR	2583275	ContinueStatement	continue ;	6226:23:222044:222052	2582621	1	True				
ANR	2583276	IfStatement	if ( ( 0 < upd -> string_a [ SA_SETCOMP ] . size ) && ( upd -> icomp != icomp ) )		2582621	2					
ANR	2583277	Condition	( 0 < upd -> string_a [ SA_SETCOMP ] . size ) && ( upd -> icomp != icomp )	6230:12:222132:222219	2582621	0	True				
ANR	2583278	AndExpression	( 0 < upd -> string_a [ SA_SETCOMP ] . size ) && ( upd -> icomp != icomp )		2582621	0		&&			
ANR	2583279	RelationalExpression	0 < upd -> string_a [ SA_SETCOMP ] . size		2582621	0		<			
ANR	2583280	PrimaryExpression	0		2582621	0					
ANR	2583281	MemberAccess	upd -> string_a [ SA_SETCOMP ] . size		2582621	1					
ANR	2583282	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2582621	0					
ANR	2583283	PtrMemberAccess	upd -> string_a		2582621	0					
ANR	2583284	Identifier	upd		2582621	0					
ANR	2583285	Identifier	string_a		2582621	1					
ANR	2583286	Identifier	SA_SETCOMP		2582621	1					
ANR	2583287	Identifier	size		2582621	1					
ANR	2583288	EqualityExpression	upd -> icomp != icomp		2582621	1		!=			
ANR	2583289	PtrMemberAccess	upd -> icomp		2582621	0					
ANR	2583290	Identifier	upd		2582621	0					
ANR	2583291	Identifier	icomp		2582621	1					
ANR	2583292	Identifier	icomp		2582621	1					
ANR	2583293	CompoundStatement		108:53:3722:3722	2582621	1					
ANR	2583294	ExpressionStatement	upd -> icomp = icomp	6232:12:222263:222281	2582621	0	True				
ANR	2583295	AssignmentExpression	upd -> icomp = icomp		2582621	0		=			
ANR	2583296	PtrMemberAccess	upd -> icomp		2582621	0					
ANR	2583297	Identifier	upd		2582621	0					
ANR	2583298	Identifier	icomp		2582621	1					
ANR	2583299	Identifier	icomp		2582621	1					
ANR	2583300	IfStatement	if ( 0 < upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size )		2582621	1					
ANR	2583301	Condition	0 < upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size	6233:15:222298:222343	2582621	0	True				
ANR	2583302	RelationalExpression	0 < upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2582621	0		<			
ANR	2583303	PrimaryExpression	0		2582621	0					
ANR	2583304	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2582621	1					
ANR	2583305	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		2582621	0					
ANR	2583306	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		2582621	0					
ANR	2583307	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2582621	0					
ANR	2583308	PtrMemberAccess	upd -> string_a		2582621	0					
ANR	2583309	Identifier	upd		2582621	0					
ANR	2583310	Identifier	string_a		2582621	1					
ANR	2583311	Identifier	SA_SETCOMP		2582621	1					
ANR	2583312	Identifier	data		2582621	1					
ANR	2583313	Identifier	icomp		2582621	1					
ANR	2583314	Identifier	size		2582621	1					
ANR	2583315	CompoundStatement		110:63:3843:3843	2582621	1					
ANR	2583316	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size )"	6234:15:222363:222530	2582621	0	True				
ANR	2583317	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size )"		2582621	0					
ANR	2583318	Callee	memcpy		2582621	0					
ANR	2583319	Identifier	memcpy		2582621	0					
ANR	2583320	ArgumentList	upd -> outbuf + ioutbuf		2582621	1					
ANR	2583321	Argument	upd -> outbuf + ioutbuf		2582621	0					
ANR	2583322	AdditiveExpression	upd -> outbuf + ioutbuf		2582621	0		+			
ANR	2583323	PtrMemberAccess	upd -> outbuf		2582621	0					
ANR	2583324	Identifier	upd		2582621	0					
ANR	2583325	Identifier	outbuf		2582621	1					
ANR	2583326	Identifier	ioutbuf		2582621	1					
ANR	2583327	Argument	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data		2582621	1					
ANR	2583328	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data		2582621	0					
ANR	2583329	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		2582621	0					
ANR	2583330	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		2582621	0					
ANR	2583331	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2582621	0					
ANR	2583332	PtrMemberAccess	upd -> string_a		2582621	0					
ANR	2583333	Identifier	upd		2582621	0					
ANR	2583334	Identifier	string_a		2582621	1					
ANR	2583335	Identifier	SA_SETCOMP		2582621	1					
ANR	2583336	Identifier	data		2582621	1					
ANR	2583337	Identifier	icomp		2582621	1					
ANR	2583338	Identifier	data		2582621	1					
ANR	2583339	Argument	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2582621	2					
ANR	2583340	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2582621	0					
ANR	2583341	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		2582621	0					
ANR	2583342	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		2582621	0					
ANR	2583343	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2582621	0					
ANR	2583344	PtrMemberAccess	upd -> string_a		2582621	0					
ANR	2583345	Identifier	upd		2582621	0					
ANR	2583346	Identifier	string_a		2582621	1					
ANR	2583347	Identifier	SA_SETCOMP		2582621	1					
ANR	2583348	Identifier	data		2582621	1					
ANR	2583349	Identifier	icomp		2582621	1					
ANR	2583350	Identifier	size		2582621	1					
ANR	2583351	ExpressionStatement	ioutbuf += upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size	6237:15:222547:222600	2582621	1	True				
ANR	2583352	AssignmentExpression	ioutbuf += upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2582621	0		+=			
ANR	2583353	Identifier	ioutbuf		2582621	0					
ANR	2583354	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2582621	1					
ANR	2583355	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		2582621	0					
ANR	2583356	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		2582621	0					
ANR	2583357	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		2582621	0					
ANR	2583358	PtrMemberAccess	upd -> string_a		2582621	0					
ANR	2583359	Identifier	upd		2582621	0					
ANR	2583360	Identifier	string_a		2582621	1					
ANR	2583361	Identifier	SA_SETCOMP		2582621	1					
ANR	2583362	Identifier	data		2582621	1					
ANR	2583363	Identifier	icomp		2582621	1					
ANR	2583364	Identifier	size		2582621	1					
ANR	2583365	IfStatement	if ( xbegin != upd -> xprinter )		2582621	3					
ANR	2583366	Condition	xbegin != upd -> xprinter	6243:12:222741:222763	2582621	0	True				
ANR	2583367	EqualityExpression	xbegin != upd -> xprinter		2582621	0		!=			
ANR	2583368	Identifier	xbegin		2582621	0					
ANR	2583369	PtrMemberAccess	upd -> xprinter		2582621	1					
ANR	2583370	Identifier	upd		2582621	0					
ANR	2583371	Identifier	xprinter		2582621	1					
ANR	2583372	CompoundStatement		120:37:4263:4263	2582621	1					
ANR	2583373	IfStatement	if ( 0 == upd -> strings [ S_XMOVE ] . size )		2582621	0					
ANR	2583374	Condition	0 == upd -> strings [ S_XMOVE ] . size	6245:15:222784:222814	2582621	0	True				
ANR	2583375	EqualityExpression	0 == upd -> strings [ S_XMOVE ] . size		2582621	0		==			
ANR	2583376	PrimaryExpression	0		2582621	0					
ANR	2583377	MemberAccess	upd -> strings [ S_XMOVE ] . size		2582621	1					
ANR	2583378	ArrayIndexing	upd -> strings [ S_XMOVE ]		2582621	0					
ANR	2583379	PtrMemberAccess	upd -> strings		2582621	0					
ANR	2583380	Identifier	upd		2582621	0					
ANR	2583381	Identifier	strings		2582621	1					
ANR	2583382	Identifier	S_XMOVE		2582621	1					
ANR	2583383	Identifier	size		2582621	1					
ANR	2583384	CompoundStatement		122:48:4314:4314	2582621	1					
ANR	2583385	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = '\\r'	6247:15:222835:222864	2582621	0	True				
ANR	2583386	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = '\\r'		2582621	0		=			
ANR	2583387	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2582621	0					
ANR	2583388	PtrMemberAccess	upd -> outbuf		2582621	0					
ANR	2583389	Identifier	upd		2582621	0					
ANR	2583390	Identifier	outbuf		2582621	1					
ANR	2583391	PostIncDecOperationExpression	ioutbuf ++		2582621	1					
ANR	2583392	Identifier	ioutbuf		2582621	0					
ANR	2583393	IncDec	++		2582621	1					
ANR	2583394	PrimaryExpression	'\\r'		2582621	1					
ANR	2583395	ExpressionStatement	upd -> xprinter = 0	6248:15:222881:222908	2582621	1	True				
ANR	2583396	AssignmentExpression	upd -> xprinter = 0		2582621	0		=			
ANR	2583397	PtrMemberAccess	upd -> xprinter		2582621	0					
ANR	2583398	Identifier	upd		2582621	0					
ANR	2583399	Identifier	xprinter		2582621	1					
ANR	2583400	PrimaryExpression	0		2582621	1					
ANR	2583401	ExpressionStatement	n = 0	6249:15:222925:222930	2582621	2	True				
ANR	2583402	AssignmentExpression	n = 0		2582621	0		=			
ANR	2583403	Identifier	n		2582621	0					
ANR	2583404	PrimaryExpression	0		2582621	1					
ANR	2583405	ExpressionStatement	x = ixpass	6250:15:222947:222957	2582621	3	True				
ANR	2583406	AssignmentExpression	x = ixpass		2582621	0		=			
ANR	2583407	Identifier	x		2582621	0					
ANR	2583408	Identifier	ixpass		2582621	1					
ANR	2583409	ElseStatement	else		2582621	0					
ANR	2583410	CompoundStatement		129:19:4476:4476	2582621	0					
ANR	2583411	IfStatement	if ( B_XABS & upd -> flags )		2582621	0					
ANR	2583412	Condition	B_XABS & upd -> flags	6254:18:223000:223018	2582621	0	True				
ANR	2583413	BitAndExpression	B_XABS & upd -> flags		2582621	0		&			
ANR	2583414	Identifier	B_XABS		2582621	0					
ANR	2583415	PtrMemberAccess	upd -> flags		2582621	1					
ANR	2583416	Identifier	upd		2582621	0					
ANR	2583417	Identifier	flags		2582621	1					
ANR	2583418	ExpressionStatement	n = x = xbegin + upd -> ints [ I_XOFS ]	6254:39:223021:223055	2582621	1	True				
ANR	2583419	AssignmentExpression	n = x = xbegin + upd -> ints [ I_XOFS ]		2582621	0		=			
ANR	2583420	Identifier	n		2582621	0					
ANR	2583421	AssignmentExpression	x = xbegin + upd -> ints [ I_XOFS ]		2582621	1		=			
ANR	2583422	Identifier	x		2582621	0					
ANR	2583423	AdditiveExpression	xbegin + upd -> ints [ I_XOFS ]		2582621	1		+			
ANR	2583424	Identifier	xbegin		2582621	0					
ANR	2583425	ArrayIndexing	upd -> ints [ I_XOFS ]		2582621	1					
ANR	2583426	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2583427	Identifier	upd		2582621	0					
ANR	2583428	Identifier	ints		2582621	1					
ANR	2583429	Identifier	I_XOFS		2582621	1					
ANR	2583430	ElseStatement	else		2582621	0					
ANR	2583431	ExpressionStatement	n = x = xbegin - upd -> xprinter	6255:39:223096:223126	2582621	0	True				
ANR	2583432	AssignmentExpression	n = x = xbegin - upd -> xprinter		2582621	0		=			
ANR	2583433	Identifier	n		2582621	0					
ANR	2583434	AssignmentExpression	x = xbegin - upd -> xprinter		2582621	1		=			
ANR	2583435	Identifier	x		2582621	0					
ANR	2583436	AdditiveExpression	xbegin - upd -> xprinter		2582621	1		-			
ANR	2583437	Identifier	xbegin		2582621	0					
ANR	2583438	PtrMemberAccess	upd -> xprinter		2582621	1					
ANR	2583439	Identifier	upd		2582621	0					
ANR	2583440	Identifier	xprinter		2582621	1					
ANR	2583441	IfStatement	if ( 1 < upd -> ints [ I_XSTEP ] )		2582621	1					
ANR	2583442	Condition	1 < upd -> ints [ I_XSTEP ]	6257:26:223155:223176	2582621	0	True				
ANR	2583443	RelationalExpression	1 < upd -> ints [ I_XSTEP ]		2582621	0		<			
ANR	2583444	PrimaryExpression	1		2582621	0					
ANR	2583445	ArrayIndexing	upd -> ints [ I_XSTEP ]		2582621	1					
ANR	2583446	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2583447	Identifier	upd		2582621	0					
ANR	2583448	Identifier	ints		2582621	1					
ANR	2583449	Identifier	I_XSTEP		2582621	1					
ANR	2583450	CompoundStatement		134:50:4676:4676	2582621	1					
ANR	2583451	IfStatement	if ( 0 > n )		2582621	0					
ANR	2583452	Condition	0 > n	6258:21:223202:223206	2582621	0	True				
ANR	2583453	RelationalExpression	0 > n		2582621	0		>			
ANR	2583454	PrimaryExpression	0		2582621	0					
ANR	2583455	Identifier	n		2582621	1					
ANR	2583456	CompoundStatement		135:28:4706:4706	2582621	1					
ANR	2583457	ExpressionStatement	n -= upd -> ints [ I_XSTEP ]	6259:21:223232:223256	2582621	0	True				
ANR	2583458	AssignmentExpression	n -= upd -> ints [ I_XSTEP ]		2582621	0		-=			
ANR	2583459	Identifier	n		2582621	0					
ANR	2583460	ArrayIndexing	upd -> ints [ I_XSTEP ]		2582621	1					
ANR	2583461	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2583462	Identifier	upd		2582621	0					
ANR	2583463	Identifier	ints		2582621	1					
ANR	2583464	Identifier	I_XSTEP		2582621	1					
ANR	2583465	ExpressionStatement	x -= n	6260:21:223279:223286	2582621	1	True				
ANR	2583466	AssignmentExpression	x -= n		2582621	0		-=			
ANR	2583467	Identifier	x		2582621	0					
ANR	2583468	Identifier	n		2582621	1					
ANR	2583469	IfStatement	if ( n )		2582621	1					
ANR	2583470	Condition	n	6262:21:223329:223329	2582621	0	True				
ANR	2583471	Identifier	n		2582621	0					
ANR	2583472	ExpressionStatement	n /= upd -> ints [ I_XSTEP ]	6262:24:223332:223356	2582621	1	True				
ANR	2583473	AssignmentExpression	n /= upd -> ints [ I_XSTEP ]		2582621	0		/=			
ANR	2583474	Identifier	n		2582621	0					
ANR	2583475	ArrayIndexing	upd -> ints [ I_XSTEP ]		2582621	1					
ANR	2583476	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2583477	Identifier	upd		2582621	0					
ANR	2583478	Identifier	ints		2582621	1					
ANR	2583479	Identifier	I_XSTEP		2582621	1					
ANR	2583480	IfStatement	if ( x )		2582621	2					
ANR	2583481	Condition	x	6263:21:223397:223397	2582621	0	True				
ANR	2583482	Identifier	x		2582621	0					
ANR	2583483	ExpressionStatement	x %= upd -> ints [ I_XSTEP ]	6263:24:223400:223424	2582621	1	True				
ANR	2583484	AssignmentExpression	x %= upd -> ints [ I_XSTEP ]		2582621	0		%=			
ANR	2583485	Identifier	x		2582621	0					
ANR	2583486	ArrayIndexing	upd -> ints [ I_XSTEP ]		2582621	1					
ANR	2583487	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2583488	Identifier	upd		2582621	0					
ANR	2583489	Identifier	ints		2582621	1					
ANR	2583490	Identifier	I_XSTEP		2582621	1					
ANR	2583491	ElseStatement	else		2582621	0					
ANR	2583492	IfStatement	if ( - 1 > upd -> ints [ I_XSTEP ] )		2582621	0					
ANR	2583493	Condition	- 1 > upd -> ints [ I_XSTEP ]	6265:25:223470:223492	2582621	0	True				
ANR	2583494	RelationalExpression	- 1 > upd -> ints [ I_XSTEP ]		2582621	0		>			
ANR	2583495	UnaryOperationExpression	- 1		2582621	0					
ANR	2583496	UnaryOperator	-		2582621	0					
ANR	2583497	PrimaryExpression	1		2582621	1					
ANR	2583498	ArrayIndexing	upd -> ints [ I_XSTEP ]		2582621	1					
ANR	2583499	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2583500	Identifier	upd		2582621	0					
ANR	2583501	Identifier	ints		2582621	1					
ANR	2583502	Identifier	I_XSTEP		2582621	1					
ANR	2583503	CompoundStatement		142:50:4992:4992	2582621	1					
ANR	2583504	ExpressionStatement	n *= - upd -> ints [ I_XSTEP ]	6266:18:223515:223539	2582621	0	True				
ANR	2583505	AssignmentExpression	n *= - upd -> ints [ I_XSTEP ]		2582621	0		*=			
ANR	2583506	Identifier	n		2582621	0					
ANR	2583507	UnaryOperationExpression	- upd -> ints [ I_XSTEP ]		2582621	1					
ANR	2583508	UnaryOperator	-		2582621	0					
ANR	2583509	ArrayIndexing	upd -> ints [ I_XSTEP ]		2582621	1					
ANR	2583510	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2583511	Identifier	upd		2582621	0					
ANR	2583512	Identifier	ints		2582621	1					
ANR	2583513	Identifier	I_XSTEP		2582621	1					
ANR	2583514	ExpressionStatement	x = 0	6267:18:223580:223586	2582621	1	True				
ANR	2583515	AssignmentExpression	x = 0		2582621	0		=			
ANR	2583516	Identifier	x		2582621	0					
ANR	2583517	PrimaryExpression	0		2582621	1					
ANR	2583518	IfStatement	if ( n )		2582621	2					
ANR	2583519	Condition	n	6270:18:223624:223624	2582621	0	True				
ANR	2583520	Identifier	n		2582621	0					
ANR	2583521	CompoundStatement		147:21:5124:5124	2582621	1					
ANR	2583522	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XMOVE ] . data , upd -> strings [ S_XMOVE ] . size )"	6272:17:223671:223812	2582621	0	True				
ANR	2583523	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XMOVE ] . data , upd -> strings [ S_XMOVE ] . size )"		2582621	0					
ANR	2583524	Callee	memcpy		2582621	0					
ANR	2583525	Identifier	memcpy		2582621	0					
ANR	2583526	ArgumentList	upd -> outbuf + ioutbuf		2582621	1					
ANR	2583527	Argument	upd -> outbuf + ioutbuf		2582621	0					
ANR	2583528	AdditiveExpression	upd -> outbuf + ioutbuf		2582621	0		+			
ANR	2583529	PtrMemberAccess	upd -> outbuf		2582621	0					
ANR	2583530	Identifier	upd		2582621	0					
ANR	2583531	Identifier	outbuf		2582621	1					
ANR	2583532	Identifier	ioutbuf		2582621	1					
ANR	2583533	Argument	upd -> strings [ S_XMOVE ] . data		2582621	1					
ANR	2583534	MemberAccess	upd -> strings [ S_XMOVE ] . data		2582621	0					
ANR	2583535	ArrayIndexing	upd -> strings [ S_XMOVE ]		2582621	0					
ANR	2583536	PtrMemberAccess	upd -> strings		2582621	0					
ANR	2583537	Identifier	upd		2582621	0					
ANR	2583538	Identifier	strings		2582621	1					
ANR	2583539	Identifier	S_XMOVE		2582621	1					
ANR	2583540	Identifier	data		2582621	1					
ANR	2583541	Argument	upd -> strings [ S_XMOVE ] . size		2582621	2					
ANR	2583542	MemberAccess	upd -> strings [ S_XMOVE ] . size		2582621	0					
ANR	2583543	ArrayIndexing	upd -> strings [ S_XMOVE ]		2582621	0					
ANR	2583544	PtrMemberAccess	upd -> strings		2582621	0					
ANR	2583545	Identifier	upd		2582621	0					
ANR	2583546	Identifier	strings		2582621	1					
ANR	2583547	Identifier	S_XMOVE		2582621	1					
ANR	2583548	Identifier	size		2582621	1					
ANR	2583549	ExpressionStatement	ioutbuf += upd -> strings [ S_XMOVE ] . size	6275:18:223832:223869	2582621	1	True				
ANR	2583550	AssignmentExpression	ioutbuf += upd -> strings [ S_XMOVE ] . size		2582621	0		+=			
ANR	2583551	Identifier	ioutbuf		2582621	0					
ANR	2583552	MemberAccess	upd -> strings [ S_XMOVE ] . size		2582621	1					
ANR	2583553	ArrayIndexing	upd -> strings [ S_XMOVE ]		2582621	0					
ANR	2583554	PtrMemberAccess	upd -> strings		2582621	0					
ANR	2583555	Identifier	upd		2582621	0					
ANR	2583556	Identifier	strings		2582621	1					
ANR	2583557	Identifier	S_XMOVE		2582621	1					
ANR	2583558	Identifier	size		2582621	1					
ANR	2583559	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = n & 0xff	6277:18:223890:223928	2582621	2	True				
ANR	2583560	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = n & 0xff		2582621	0		=			
ANR	2583561	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2582621	0					
ANR	2583562	PtrMemberAccess	upd -> outbuf		2582621	0					
ANR	2583563	Identifier	upd		2582621	0					
ANR	2583564	Identifier	outbuf		2582621	1					
ANR	2583565	PostIncDecOperationExpression	ioutbuf ++		2582621	1					
ANR	2583566	Identifier	ioutbuf		2582621	0					
ANR	2583567	IncDec	++		2582621	1					
ANR	2583568	BitAndExpression	n & 0xff		2582621	1		&			
ANR	2583569	Identifier	n		2582621	0					
ANR	2583570	PrimaryExpression	0xff		2582621	1					
ANR	2583571	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff	6278:18:223948:223986	2582621	3	True				
ANR	2583572	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff		2582621	0		=			
ANR	2583573	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2582621	0					
ANR	2583574	PtrMemberAccess	upd -> outbuf		2582621	0					
ANR	2583575	Identifier	upd		2582621	0					
ANR	2583576	Identifier	outbuf		2582621	1					
ANR	2583577	PostIncDecOperationExpression	ioutbuf ++		2582621	1					
ANR	2583578	Identifier	ioutbuf		2582621	0					
ANR	2583579	IncDec	++		2582621	1					
ANR	2583580	BitAndExpression	( n >> 8 ) & 0xff		2582621	1		&			
ANR	2583581	ShiftExpression	n >> 8		2582621	0		>>			
ANR	2583582	Identifier	n		2582621	0					
ANR	2583583	PrimaryExpression	8		2582621	1					
ANR	2583584	PrimaryExpression	0xff		2582621	1					
ANR	2583585	IfStatement	if ( x && 0 < upd -> strings [ S_XSTEP ] . size )		2582621	1					
ANR	2583586	Condition	x && 0 < upd -> strings [ S_XSTEP ] . size	6284:15:224067:224101	2582621	0	True				
ANR	2583587	AndExpression	x && 0 < upd -> strings [ S_XSTEP ] . size		2582621	0		&&			
ANR	2583588	Identifier	x		2582621	0					
ANR	2583589	RelationalExpression	0 < upd -> strings [ S_XSTEP ] . size		2582621	1		<			
ANR	2583590	PrimaryExpression	0		2582621	0					
ANR	2583591	MemberAccess	upd -> strings [ S_XSTEP ] . size		2582621	1					
ANR	2583592	ArrayIndexing	upd -> strings [ S_XSTEP ]		2582621	0					
ANR	2583593	PtrMemberAccess	upd -> strings		2582621	0					
ANR	2583594	Identifier	upd		2582621	0					
ANR	2583595	Identifier	strings		2582621	1					
ANR	2583596	Identifier	S_XSTEP		2582621	1					
ANR	2583597	Identifier	size		2582621	1					
ANR	2583598	CompoundStatement		161:52:5601:5601	2582621	1					
ANR	2583599	WhileStatement	while ( x -- )		2582621	0					
ANR	2583600	Condition	x --	6285:21:224147:224149	2582621	0	True				
ANR	2583601	PostIncDecOperationExpression	x --		2582621	0					
ANR	2583602	Identifier	x		2582621	0					
ANR	2583603	IncDec	--		2582621	1					
ANR	2583604	CompoundStatement		162:26:5649:5649	2582621	1					
ANR	2583605	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XSTEP ] . data , upd -> strings [ S_XSTEP ] . size )"	6286:18:224172:224313	2582621	0	True				
ANR	2583606	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XSTEP ] . data , upd -> strings [ S_XSTEP ] . size )"		2582621	0					
ANR	2583607	Callee	memcpy		2582621	0					
ANR	2583608	Identifier	memcpy		2582621	0					
ANR	2583609	ArgumentList	upd -> outbuf + ioutbuf		2582621	1					
ANR	2583610	Argument	upd -> outbuf + ioutbuf		2582621	0					
ANR	2583611	AdditiveExpression	upd -> outbuf + ioutbuf		2582621	0		+			
ANR	2583612	PtrMemberAccess	upd -> outbuf		2582621	0					
ANR	2583613	Identifier	upd		2582621	0					
ANR	2583614	Identifier	outbuf		2582621	1					
ANR	2583615	Identifier	ioutbuf		2582621	1					
ANR	2583616	Argument	upd -> strings [ S_XSTEP ] . data		2582621	1					
ANR	2583617	MemberAccess	upd -> strings [ S_XSTEP ] . data		2582621	0					
ANR	2583618	ArrayIndexing	upd -> strings [ S_XSTEP ]		2582621	0					
ANR	2583619	PtrMemberAccess	upd -> strings		2582621	0					
ANR	2583620	Identifier	upd		2582621	0					
ANR	2583621	Identifier	strings		2582621	1					
ANR	2583622	Identifier	S_XSTEP		2582621	1					
ANR	2583623	Identifier	data		2582621	1					
ANR	2583624	Argument	upd -> strings [ S_XSTEP ] . size		2582621	2					
ANR	2583625	MemberAccess	upd -> strings [ S_XSTEP ] . size		2582621	0					
ANR	2583626	ArrayIndexing	upd -> strings [ S_XSTEP ]		2582621	0					
ANR	2583627	PtrMemberAccess	upd -> strings		2582621	0					
ANR	2583628	Identifier	upd		2582621	0					
ANR	2583629	Identifier	strings		2582621	1					
ANR	2583630	Identifier	S_XSTEP		2582621	1					
ANR	2583631	Identifier	size		2582621	1					
ANR	2583632	ExpressionStatement	ioutbuf += upd -> strings [ S_XSTEP ] . size	6289:18:224333:224370	2582621	1	True				
ANR	2583633	AssignmentExpression	ioutbuf += upd -> strings [ S_XSTEP ] . size		2582621	0		+=			
ANR	2583634	Identifier	ioutbuf		2582621	0					
ANR	2583635	MemberAccess	upd -> strings [ S_XSTEP ] . size		2582621	1					
ANR	2583636	ArrayIndexing	upd -> strings [ S_XSTEP ]		2582621	0					
ANR	2583637	PtrMemberAccess	upd -> strings		2582621	0					
ANR	2583638	Identifier	upd		2582621	0					
ANR	2583639	Identifier	strings		2582621	1					
ANR	2583640	Identifier	S_XSTEP		2582621	1					
ANR	2583641	Identifier	size		2582621	1					
ANR	2583642	ExpressionStatement	upd -> xprinter = xend + 1	6293:9:224483:224505	2582621	4	True				
ANR	2583643	AssignmentExpression	upd -> xprinter = xend + 1		2582621	0		=			
ANR	2583644	PtrMemberAccess	upd -> xprinter		2582621	0					
ANR	2583645	Identifier	upd		2582621	0					
ANR	2583646	Identifier	xprinter		2582621	1					
ANR	2583647	AdditiveExpression	xend + 1		2582621	1		+			
ANR	2583648	Identifier	xend		2582621	0					
ANR	2583649	PrimaryExpression	1		2582621	1					
ANR	2583650	IfStatement	if ( 0 < upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size )		2582621	5					
ANR	2583651	Condition	0 < upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size	6298:12:224559:224606	2582621	0	True				
ANR	2583652	RelationalExpression	0 < upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2582621	0		<			
ANR	2583653	PrimaryExpression	0		2582621	0					
ANR	2583654	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2582621	1					
ANR	2583655	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		2582621	0					
ANR	2583656	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		2582621	0					
ANR	2583657	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2582621	0					
ANR	2583658	PtrMemberAccess	upd -> string_a		2582621	0					
ANR	2583659	Identifier	upd		2582621	0					
ANR	2583660	Identifier	string_a		2582621	1					
ANR	2583661	Identifier	SA_WRITECOMP		2582621	1					
ANR	2583662	Identifier	data		2582621	1					
ANR	2583663	Identifier	icomp		2582621	1					
ANR	2583664	Identifier	size		2582621	1					
ANR	2583665	CompoundStatement		175:62:6106:6106	2582621	1					
ANR	2583666	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size )"	6299:12:224623:224788	2582621	0	True				
ANR	2583667	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size )"		2582621	0					
ANR	2583668	Callee	memcpy		2582621	0					
ANR	2583669	Identifier	memcpy		2582621	0					
ANR	2583670	ArgumentList	upd -> outbuf + ioutbuf		2582621	1					
ANR	2583671	Argument	upd -> outbuf + ioutbuf		2582621	0					
ANR	2583672	AdditiveExpression	upd -> outbuf + ioutbuf		2582621	0		+			
ANR	2583673	PtrMemberAccess	upd -> outbuf		2582621	0					
ANR	2583674	Identifier	upd		2582621	0					
ANR	2583675	Identifier	outbuf		2582621	1					
ANR	2583676	Identifier	ioutbuf		2582621	1					
ANR	2583677	Argument	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		2582621	1					
ANR	2583678	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		2582621	0					
ANR	2583679	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		2582621	0					
ANR	2583680	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		2582621	0					
ANR	2583681	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2582621	0					
ANR	2583682	PtrMemberAccess	upd -> string_a		2582621	0					
ANR	2583683	Identifier	upd		2582621	0					
ANR	2583684	Identifier	string_a		2582621	1					
ANR	2583685	Identifier	SA_WRITECOMP		2582621	1					
ANR	2583686	Identifier	data		2582621	1					
ANR	2583687	Identifier	icomp		2582621	1					
ANR	2583688	Identifier	data		2582621	1					
ANR	2583689	Argument	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2582621	2					
ANR	2583690	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2582621	0					
ANR	2583691	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		2582621	0					
ANR	2583692	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		2582621	0					
ANR	2583693	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2582621	0					
ANR	2583694	PtrMemberAccess	upd -> string_a		2582621	0					
ANR	2583695	Identifier	upd		2582621	0					
ANR	2583696	Identifier	string_a		2582621	1					
ANR	2583697	Identifier	SA_WRITECOMP		2582621	1					
ANR	2583698	Identifier	data		2582621	1					
ANR	2583699	Identifier	icomp		2582621	1					
ANR	2583700	Identifier	size		2582621	1					
ANR	2583701	ExpressionStatement	ioutbuf += upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size	6302:12:224802:224857	2582621	1	True				
ANR	2583702	AssignmentExpression	ioutbuf += upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2582621	0		+=			
ANR	2583703	Identifier	ioutbuf		2582621	0					
ANR	2583704	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2582621	1					
ANR	2583705	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		2582621	0					
ANR	2583706	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		2582621	0					
ANR	2583707	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2582621	0					
ANR	2583708	PtrMemberAccess	upd -> string_a		2582621	0					
ANR	2583709	Identifier	upd		2582621	0					
ANR	2583710	Identifier	string_a		2582621	1					
ANR	2583711	Identifier	SA_WRITECOMP		2582621	1					
ANR	2583712	Identifier	data		2582621	1					
ANR	2583713	Identifier	icomp		2582621	1					
ANR	2583714	Identifier	size		2582621	1					
ANR	2583715	ExpressionStatement	n = ( ( xend - xbegin ) / upd -> ints [ I_NXPASS ] + 8 ) & ~7	6304:9:224879:224931	2582621	6	True				
ANR	2583716	AssignmentExpression	n = ( ( xend - xbegin ) / upd -> ints [ I_NXPASS ] + 8 ) & ~7		2582621	0		=			
ANR	2583717	Identifier	n		2582621	0					
ANR	2583718	BitAndExpression	( ( xend - xbegin ) / upd -> ints [ I_NXPASS ] + 8 ) & ~7		2582621	1		&			
ANR	2583719	AdditiveExpression	( xend - xbegin ) / upd -> ints [ I_NXPASS ] + 8		2582621	0		+			
ANR	2583720	MultiplicativeExpression	( xend - xbegin ) / upd -> ints [ I_NXPASS ]		2582621	0		/			
ANR	2583721	AdditiveExpression	xend - xbegin		2582621	0		-			
ANR	2583722	Identifier	xend		2582621	0					
ANR	2583723	Identifier	xbegin		2582621	1					
ANR	2583724	ArrayIndexing	upd -> ints [ I_NXPASS ]		2582621	1					
ANR	2583725	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2583726	Identifier	upd		2582621	0					
ANR	2583727	Identifier	ints		2582621	1					
ANR	2583728	Identifier	I_NXPASS		2582621	1					
ANR	2583729	PrimaryExpression	8		2582621	1					
ANR	2583730	Identifier	~7		2582621	1					
ANR	2583731	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = n & 255	6305:9:224942:224979	2582621	7	True				
ANR	2583732	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = n & 255		2582621	0		=			
ANR	2583733	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2582621	0					
ANR	2583734	PtrMemberAccess	upd -> outbuf		2582621	0					
ANR	2583735	Identifier	upd		2582621	0					
ANR	2583736	Identifier	outbuf		2582621	1					
ANR	2583737	PostIncDecOperationExpression	ioutbuf ++		2582621	1					
ANR	2583738	Identifier	ioutbuf		2582621	0					
ANR	2583739	IncDec	++		2582621	1					
ANR	2583740	BitAndExpression	n & 255		2582621	1		&			
ANR	2583741	Identifier	n		2582621	0					
ANR	2583742	PrimaryExpression	255		2582621	1					
ANR	2583743	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 255	6306:9:224990:225027	2582621	8	True				
ANR	2583744	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 255		2582621	0		=			
ANR	2583745	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		2582621	0					
ANR	2583746	PtrMemberAccess	upd -> outbuf		2582621	0					
ANR	2583747	Identifier	upd		2582621	0					
ANR	2583748	Identifier	outbuf		2582621	1					
ANR	2583749	PostIncDecOperationExpression	ioutbuf ++		2582621	1					
ANR	2583750	Identifier	ioutbuf		2582621	0					
ANR	2583751	IncDec	++		2582621	1					
ANR	2583752	BitAndExpression	( n >> 8 ) & 255		2582621	1		&			
ANR	2583753	ShiftExpression	n >> 8		2582621	0		>>			
ANR	2583754	Identifier	n		2582621	0					
ANR	2583755	PrimaryExpression	8		2582621	1					
ANR	2583756	PrimaryExpression	255		2582621	1					
ANR	2583757	ExpressionStatement	n >>= 3	6307:9:225038:225045	2582621	9	True				
ANR	2583758	AssignmentExpression	n >>= 3		2582621	0		>>=			
ANR	2583759	Identifier	n		2582621	0					
ANR	2583760	PrimaryExpression	3		2582621	1					
ANR	2583761	ForStatement	for ( pin = 0 ; pin < pintop ; ++ pin )		2582621	10					
ANR	2583762	ForInit	pin = 0 ;	6311:13:225091:225098	2582621	0	True				
ANR	2583763	AssignmentExpression	pin = 0		2582621	0		=			
ANR	2583764	Identifier	pin		2582621	0					
ANR	2583765	PrimaryExpression	0		2582621	1					
ANR	2583766	Condition	pin < pintop	6311:22:225100:225111	2582621	1	True				
ANR	2583767	RelationalExpression	pin < pintop		2582621	0		<			
ANR	2583768	Identifier	pin		2582621	0					
ANR	2583769	Identifier	pintop		2582621	1					
ANR	2583770	UnaryExpression	++ pin	6311:36:225114:225118	2582621	2	True				
ANR	2583771	IncDec	++		2582621	0					
ANR	2583772	Identifier	pin		2582621	1					
ANR	2583773	CompoundStatement		188:43:6618:6618	2582621	3					
ANR	2583774	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"	6312:12:225135:225181	2582621	0	True				
ANR	2583775	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		2582621	0		+=			
ANR	2583776	Identifier	ioutbuf		2582621	0					
ANR	2583777	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		2582621	1					
ANR	2583778	Callee	upd_rle		2582621	0					
ANR	2583779	Identifier	upd_rle		2582621	0					
ANR	2583780	ArgumentList	upd -> outbuf + ioutbuf		2582621	1					
ANR	2583781	Argument	upd -> outbuf + ioutbuf		2582621	0					
ANR	2583782	AdditiveExpression	upd -> outbuf + ioutbuf		2582621	0		+			
ANR	2583783	PtrMemberAccess	upd -> outbuf		2582621	0					
ANR	2583784	Identifier	upd		2582621	0					
ANR	2583785	Identifier	outbuf		2582621	1					
ANR	2583786	Identifier	ioutbuf		2582621	1					
ANR	2583787	Argument	NULL		2582621	1					
ANR	2583788	Identifier	NULL		2582621	0					
ANR	2583789	Argument	n		2582621	2					
ANR	2583790	Identifier	n		2582621	0					
ANR	2583791	ExpressionStatement	"fwrite ( upd -> outbuf + upd -> nbytes , 1 , ioutbuf - upd -> nbytes , out )"	6313:12:225195:225252	2582621	1	True				
ANR	2583792	CallExpression	"fwrite ( upd -> outbuf + upd -> nbytes , 1 , ioutbuf - upd -> nbytes , out )"		2582621	0					
ANR	2583793	Callee	fwrite		2582621	0					
ANR	2583794	Identifier	fwrite		2582621	0					
ANR	2583795	ArgumentList	upd -> outbuf + upd -> nbytes		2582621	1					
ANR	2583796	Argument	upd -> outbuf + upd -> nbytes		2582621	0					
ANR	2583797	AdditiveExpression	upd -> outbuf + upd -> nbytes		2582621	0		+			
ANR	2583798	PtrMemberAccess	upd -> outbuf		2582621	0					
ANR	2583799	Identifier	upd		2582621	0					
ANR	2583800	Identifier	outbuf		2582621	1					
ANR	2583801	PtrMemberAccess	upd -> nbytes		2582621	1					
ANR	2583802	Identifier	upd		2582621	0					
ANR	2583803	Identifier	nbytes		2582621	1					
ANR	2583804	Argument	1		2582621	1					
ANR	2583805	PrimaryExpression	1		2582621	0					
ANR	2583806	Argument	ioutbuf - upd -> nbytes		2582621	2					
ANR	2583807	AdditiveExpression	ioutbuf - upd -> nbytes		2582621	0		-			
ANR	2583808	Identifier	ioutbuf		2582621	0					
ANR	2583809	PtrMemberAccess	upd -> nbytes		2582621	1					
ANR	2583810	Identifier	upd		2582621	0					
ANR	2583811	Identifier	nbytes		2582621	1					
ANR	2583812	Argument	out		2582621	3					
ANR	2583813	Identifier	out		2582621	0					
ANR	2583814	ExpressionStatement	ioutbuf = upd -> nbytes	6314:12:225266:225287	2582621	2	True				
ANR	2583815	AssignmentExpression	ioutbuf = upd -> nbytes		2582621	0		=			
ANR	2583816	Identifier	ioutbuf		2582621	0					
ANR	2583817	PtrMemberAccess	upd -> nbytes		2582621	1					
ANR	2583818	Identifier	upd		2582621	0					
ANR	2583819	Identifier	nbytes		2582621	1					
ANR	2583820	ForStatement	for ( y = ybegin ; 0 > y ; y += upd -> ints [ I_NYPASS ] )		2582621	11					
ANR	2583821	ForInit	y = ybegin ;	6317:13:225314:225324	2582621	0	True				
ANR	2583822	AssignmentExpression	y = ybegin		2582621	0		=			
ANR	2583823	Identifier	y		2582621	0					
ANR	2583824	Identifier	ybegin		2582621	1					
ANR	2583825	Condition	0 > y	6317:25:225326:225330	2582621	1	True				
ANR	2583826	RelationalExpression	0 > y		2582621	0		>			
ANR	2583827	PrimaryExpression	0		2582621	0					
ANR	2583828	Identifier	y		2582621	1					
ANR	2583829	AssignmentExpression	y += upd -> ints [ I_NYPASS ]	6317:35:225336:225359	2582621	2	True	+=			
ANR	2583830	Identifier	y		2582621	0					
ANR	2583831	ArrayIndexing	upd -> ints [ I_NYPASS ]		2582621	1					
ANR	2583832	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2583833	Identifier	upd		2582621	0					
ANR	2583834	Identifier	ints		2582621	1					
ANR	2583835	Identifier	I_NYPASS		2582621	1					
ANR	2583836	CompoundStatement		194:61:6859:6859	2582621	3					
ANR	2583837	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"	6318:12:225376:225422	2582621	0	True				
ANR	2583838	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		2582621	0		+=			
ANR	2583839	Identifier	ioutbuf		2582621	0					
ANR	2583840	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		2582621	1					
ANR	2583841	Callee	upd_rle		2582621	0					
ANR	2583842	Identifier	upd_rle		2582621	0					
ANR	2583843	ArgumentList	upd -> outbuf + ioutbuf		2582621	1					
ANR	2583844	Argument	upd -> outbuf + ioutbuf		2582621	0					
ANR	2583845	AdditiveExpression	upd -> outbuf + ioutbuf		2582621	0		+			
ANR	2583846	PtrMemberAccess	upd -> outbuf		2582621	0					
ANR	2583847	Identifier	upd		2582621	0					
ANR	2583848	Identifier	outbuf		2582621	1					
ANR	2583849	Identifier	ioutbuf		2582621	1					
ANR	2583850	Argument	NULL		2582621	1					
ANR	2583851	Identifier	NULL		2582621	0					
ANR	2583852	Argument	n		2582621	2					
ANR	2583853	Identifier	n		2582621	0					
ANR	2583854	ExpressionStatement	"fwrite ( upd -> outbuf + upd -> nbytes , 1 , ioutbuf - upd -> nbytes , out )"	6319:12:225436:225493	2582621	1	True				
ANR	2583855	CallExpression	"fwrite ( upd -> outbuf + upd -> nbytes , 1 , ioutbuf - upd -> nbytes , out )"		2582621	0					
ANR	2583856	Callee	fwrite		2582621	0					
ANR	2583857	Identifier	fwrite		2582621	0					
ANR	2583858	ArgumentList	upd -> outbuf + upd -> nbytes		2582621	1					
ANR	2583859	Argument	upd -> outbuf + upd -> nbytes		2582621	0					
ANR	2583860	AdditiveExpression	upd -> outbuf + upd -> nbytes		2582621	0		+			
ANR	2583861	PtrMemberAccess	upd -> outbuf		2582621	0					
ANR	2583862	Identifier	upd		2582621	0					
ANR	2583863	Identifier	outbuf		2582621	1					
ANR	2583864	PtrMemberAccess	upd -> nbytes		2582621	1					
ANR	2583865	Identifier	upd		2582621	0					
ANR	2583866	Identifier	nbytes		2582621	1					
ANR	2583867	Argument	1		2582621	1					
ANR	2583868	PrimaryExpression	1		2582621	0					
ANR	2583869	Argument	ioutbuf - upd -> nbytes		2582621	2					
ANR	2583870	AdditiveExpression	ioutbuf - upd -> nbytes		2582621	0		-			
ANR	2583871	Identifier	ioutbuf		2582621	0					
ANR	2583872	PtrMemberAccess	upd -> nbytes		2582621	1					
ANR	2583873	Identifier	upd		2582621	0					
ANR	2583874	Identifier	nbytes		2582621	1					
ANR	2583875	Argument	out		2582621	3					
ANR	2583876	Identifier	out		2582621	0					
ANR	2583877	ExpressionStatement	ioutbuf = upd -> nbytes	6320:12:225507:225528	2582621	2	True				
ANR	2583878	AssignmentExpression	ioutbuf = upd -> nbytes		2582621	0		=			
ANR	2583879	Identifier	ioutbuf		2582621	0					
ANR	2583880	PtrMemberAccess	upd -> nbytes		2582621	1					
ANR	2583881	Identifier	upd		2582621	0					
ANR	2583882	Identifier	nbytes		2582621	1					
ANR	2583883	ForStatement	for ( ; y < yend ; y += upd -> ints [ I_NYPASS ] )		2582621	12					
ANR	2583884	Condition	y < yend	6323:25:225567:225574	2582621	0	True				
ANR	2583885	RelationalExpression	y < yend		2582621	0		<			
ANR	2583886	Identifier	y		2582621	0					
ANR	2583887	Identifier	yend		2582621	1					
ANR	2583888	AssignmentExpression	y += upd -> ints [ I_NYPASS ]	6323:35:225577:225600	2582621	1	True	+=			
ANR	2583889	Identifier	y		2582621	0					
ANR	2583890	ArrayIndexing	upd -> ints [ I_NYPASS ]		2582621	1					
ANR	2583891	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2583892	Identifier	upd		2582621	0					
ANR	2583893	Identifier	ints		2582621	1					
ANR	2583894	Identifier	I_NYPASS		2582621	1					
ANR	2583895	CompoundStatement		201:12:7114:7171	2582621	2					
ANR	2583896	IdentifierDeclStatement	byte * ibytes = upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes ;	6324:12:225617:225674	2582621	0	True				
ANR	2583897	IdentifierDecl	* ibytes = upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes		2582621	0					
ANR	2583898	IdentifierDeclType	byte *		2582621	0					
ANR	2583899	Identifier	ibytes		2582621	1					
ANR	2583900	AssignmentExpression	* ibytes = upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes		2582621	2		=			
ANR	2583901	Identifier	ibytes		2582621	0					
ANR	2583902	MemberAccess	upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes		2582621	1					
ANR	2583903	ArrayIndexing	upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ]		2582621	0					
ANR	2583904	ArrayIndexing	upd -> scnbuf [ y & upd -> scnmsk ]		2582621	0					
ANR	2583905	PtrMemberAccess	upd -> scnbuf		2582621	0					
ANR	2583906	Identifier	upd		2582621	0					
ANR	2583907	Identifier	scnbuf		2582621	1					
ANR	2583908	BitAndExpression	y & upd -> scnmsk		2582621	1		&			
ANR	2583909	Identifier	y		2582621	0					
ANR	2583910	PtrMemberAccess	upd -> scnmsk		2582621	1					
ANR	2583911	Identifier	upd		2582621	0					
ANR	2583912	Identifier	scnmsk		2582621	1					
ANR	2583913	Identifier	icomp		2582621	1					
ANR	2583914	Identifier	bytes		2582621	1					
ANR	2583915	ExpressionStatement	obytes = upd -> outbuf	6325:12:225688:225708	2582621	1	True				
ANR	2583916	AssignmentExpression	obytes = upd -> outbuf		2582621	0		=			
ANR	2583917	Identifier	obytes		2582621	0					
ANR	2583918	PtrMemberAccess	upd -> outbuf		2582621	1					
ANR	2583919	Identifier	upd		2582621	0					
ANR	2583920	Identifier	outbuf		2582621	1					
ANR	2583921	ExpressionStatement	"memset ( obytes , 0 , upd -> nbytes )"	6326:12:225722:225750	2582621	2	True				
ANR	2583922	CallExpression	"memset ( obytes , 0 , upd -> nbytes )"		2582621	0					
ANR	2583923	Callee	memset		2582621	0					
ANR	2583924	Identifier	memset		2582621	0					
ANR	2583925	ArgumentList	obytes		2582621	1					
ANR	2583926	Argument	obytes		2582621	0					
ANR	2583927	Identifier	obytes		2582621	0					
ANR	2583928	Argument	0		2582621	1					
ANR	2583929	PrimaryExpression	0		2582621	0					
ANR	2583930	Argument	upd -> nbytes		2582621	2					
ANR	2583931	PtrMemberAccess	upd -> nbytes		2582621	0					
ANR	2583932	Identifier	upd		2582621	0					
ANR	2583933	Identifier	nbytes		2582621	1					
ANR	2583934	ExpressionStatement	bit = 0x80	6327:12:225764:225774	2582621	3	True				
ANR	2583935	AssignmentExpression	bit = 0x80		2582621	0		=			
ANR	2583936	Identifier	bit		2582621	0					
ANR	2583937	PrimaryExpression	0x80		2582621	1					
ANR	2583938	ForStatement	for ( x = xbegin ; x <= xend ; x += upd -> ints [ I_NXPASS ] )		2582621	4					
ANR	2583939	ForInit	x = xbegin ;	6328:16:225792:225802	2582621	0	True				
ANR	2583940	AssignmentExpression	x = xbegin		2582621	0		=			
ANR	2583941	Identifier	x		2582621	0					
ANR	2583942	Identifier	xbegin		2582621	1					
ANR	2583943	Condition	x <= xend	6328:28:225804:225812	2582621	1	True				
ANR	2583944	RelationalExpression	x <= xend		2582621	0		<=			
ANR	2583945	Identifier	x		2582621	0					
ANR	2583946	Identifier	xend		2582621	1					
ANR	2583947	AssignmentExpression	x += upd -> ints [ I_NXPASS ]	6328:39:225815:225838	2582621	2	True	+=			
ANR	2583948	Identifier	x		2582621	0					
ANR	2583949	ArrayIndexing	upd -> ints [ I_NXPASS ]		2582621	1					
ANR	2583950	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2583951	Identifier	upd		2582621	0					
ANR	2583952	Identifier	ints		2582621	1					
ANR	2583953	Identifier	I_NXPASS		2582621	1					
ANR	2583954	CompoundStatement		205:65:7338:7338	2582621	3					
ANR	2583955	IfStatement	if ( ibytes [ x >> 3 ] & ( 0x80 >> ( x & 7 ) ) )		2582621	0					
ANR	2583956	Condition	ibytes [ x >> 3 ] & ( 0x80 >> ( x & 7 ) )	6329:18:225861:225892	2582621	0	True				
ANR	2583957	BitAndExpression	ibytes [ x >> 3 ] & ( 0x80 >> ( x & 7 ) )		2582621	0		&			
ANR	2583958	ArrayIndexing	ibytes [ x >> 3 ]		2582621	0					
ANR	2583959	Identifier	ibytes		2582621	0					
ANR	2583960	ShiftExpression	x >> 3		2582621	1		>>			
ANR	2583961	Identifier	x		2582621	0					
ANR	2583962	PrimaryExpression	3		2582621	1					
ANR	2583963	ShiftExpression	0x80 >> ( x & 7 )		2582621	1		>>			
ANR	2583964	PrimaryExpression	0x80		2582621	0					
ANR	2583965	BitAndExpression	x & 7		2582621	1		&			
ANR	2583966	Identifier	x		2582621	0					
ANR	2583967	PrimaryExpression	7		2582621	1					
ANR	2583968	ExpressionStatement	* obytes |= bit	6329:52:225895:225909	2582621	1	True				
ANR	2583969	AssignmentExpression	* obytes |= bit		2582621	0		|=			
ANR	2583970	UnaryOperationExpression	* obytes		2582621	0					
ANR	2583971	UnaryOperator	*		2582621	0					
ANR	2583972	Identifier	obytes		2582621	1					
ANR	2583973	Identifier	bit		2582621	1					
ANR	2583974	IfStatement	if ( ! ( bit >>= 1 ) )		2582621	1					
ANR	2583975	Condition	! ( bit >>= 1 )	6330:18:225929:225940	2582621	0	True				
ANR	2583976	UnaryOperationExpression	! ( bit >>= 1 )		2582621	0					
ANR	2583977	UnaryOperator	!		2582621	0					
ANR	2583978	AssignmentExpression	bit >>= 1		2582621	1		>>=			
ANR	2583979	Identifier	bit		2582621	0					
ANR	2583980	PrimaryExpression	1		2582621	1					
ANR	2583981	CompoundStatement		207:32:7440:7440	2582621	1					
ANR	2583982	ExpressionStatement	obytes ++	6330:34:225945:225953	2582621	0	True				
ANR	2583983	PostIncDecOperationExpression	obytes ++		2582621	0					
ANR	2583984	Identifier	obytes		2582621	0					
ANR	2583985	IncDec	++		2582621	1					
ANR	2583986	ExpressionStatement	bit = 0x80	6330:44:225955:225965	2582621	1	True				
ANR	2583987	AssignmentExpression	bit = 0x80		2582621	0		=			
ANR	2583988	Identifier	bit		2582621	0					
ANR	2583989	PrimaryExpression	0x80		2582621	1					
ANR	2583990	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , upd -> outbuf , n )"	6332:12:225995:226048	2582621	5	True				
ANR	2583991	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , upd -> outbuf , n )"		2582621	0		+=			
ANR	2583992	Identifier	ioutbuf		2582621	0					
ANR	2583993	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , upd -> outbuf , n )"		2582621	1					
ANR	2583994	Callee	upd_rle		2582621	0					
ANR	2583995	Identifier	upd_rle		2582621	0					
ANR	2583996	ArgumentList	upd -> outbuf + ioutbuf		2582621	1					
ANR	2583997	Argument	upd -> outbuf + ioutbuf		2582621	0					
ANR	2583998	AdditiveExpression	upd -> outbuf + ioutbuf		2582621	0		+			
ANR	2583999	PtrMemberAccess	upd -> outbuf		2582621	0					
ANR	2584000	Identifier	upd		2582621	0					
ANR	2584001	Identifier	outbuf		2582621	1					
ANR	2584002	Identifier	ioutbuf		2582621	1					
ANR	2584003	Argument	upd -> outbuf		2582621	1					
ANR	2584004	PtrMemberAccess	upd -> outbuf		2582621	0					
ANR	2584005	Identifier	upd		2582621	0					
ANR	2584006	Identifier	outbuf		2582621	1					
ANR	2584007	Argument	n		2582621	2					
ANR	2584008	Identifier	n		2582621	0					
ANR	2584009	ExpressionStatement	"fwrite ( upd -> outbuf + upd -> nbytes , 1 , ioutbuf - upd -> nbytes , out )"	6333:12:226062:226119	2582621	6	True				
ANR	2584010	CallExpression	"fwrite ( upd -> outbuf + upd -> nbytes , 1 , ioutbuf - upd -> nbytes , out )"		2582621	0					
ANR	2584011	Callee	fwrite		2582621	0					
ANR	2584012	Identifier	fwrite		2582621	0					
ANR	2584013	ArgumentList	upd -> outbuf + upd -> nbytes		2582621	1					
ANR	2584014	Argument	upd -> outbuf + upd -> nbytes		2582621	0					
ANR	2584015	AdditiveExpression	upd -> outbuf + upd -> nbytes		2582621	0		+			
ANR	2584016	PtrMemberAccess	upd -> outbuf		2582621	0					
ANR	2584017	Identifier	upd		2582621	0					
ANR	2584018	Identifier	outbuf		2582621	1					
ANR	2584019	PtrMemberAccess	upd -> nbytes		2582621	1					
ANR	2584020	Identifier	upd		2582621	0					
ANR	2584021	Identifier	nbytes		2582621	1					
ANR	2584022	Argument	1		2582621	1					
ANR	2584023	PrimaryExpression	1		2582621	0					
ANR	2584024	Argument	ioutbuf - upd -> nbytes		2582621	2					
ANR	2584025	AdditiveExpression	ioutbuf - upd -> nbytes		2582621	0		-			
ANR	2584026	Identifier	ioutbuf		2582621	0					
ANR	2584027	PtrMemberAccess	upd -> nbytes		2582621	1					
ANR	2584028	Identifier	upd		2582621	0					
ANR	2584029	Identifier	nbytes		2582621	1					
ANR	2584030	Argument	out		2582621	3					
ANR	2584031	Identifier	out		2582621	0					
ANR	2584032	ExpressionStatement	ioutbuf = upd -> nbytes	6334:12:226133:226154	2582621	7	True				
ANR	2584033	AssignmentExpression	ioutbuf = upd -> nbytes		2582621	0		=			
ANR	2584034	Identifier	ioutbuf		2582621	0					
ANR	2584035	PtrMemberAccess	upd -> nbytes		2582621	1					
ANR	2584036	Identifier	upd		2582621	0					
ANR	2584037	Identifier	nbytes		2582621	1					
ANR	2584038	ForStatement	for ( pin = pinbot ; pin < upd -> ints [ I_PINS2WRITE ] ; ++ pin )		2582621	13					
ANR	2584039	ForInit	pin = pinbot ;	6337:13:226181:226193	2582621	0	True				
ANR	2584040	AssignmentExpression	pin = pinbot		2582621	0		=			
ANR	2584041	Identifier	pin		2582621	0					
ANR	2584042	Identifier	pinbot		2582621	1					
ANR	2584043	Condition	pin < upd -> ints [ I_PINS2WRITE ]	6337:27:226195:226223	2582621	1	True				
ANR	2584044	RelationalExpression	pin < upd -> ints [ I_PINS2WRITE ]		2582621	0		<			
ANR	2584045	Identifier	pin		2582621	0					
ANR	2584046	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		2582621	1					
ANR	2584047	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2584048	Identifier	upd		2582621	0					
ANR	2584049	Identifier	ints		2582621	1					
ANR	2584050	Identifier	I_PINS2WRITE		2582621	1					
ANR	2584051	UnaryExpression	++ pin	6337:58:226226:226230	2582621	2	True				
ANR	2584052	IncDec	++		2582621	0					
ANR	2584053	Identifier	pin		2582621	1					
ANR	2584054	CompoundStatement		214:65:7730:7730	2582621	3					
ANR	2584055	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"	6338:12:226247:226293	2582621	0	True				
ANR	2584056	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		2582621	0		+=			
ANR	2584057	Identifier	ioutbuf		2582621	0					
ANR	2584058	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		2582621	1					
ANR	2584059	Callee	upd_rle		2582621	0					
ANR	2584060	Identifier	upd_rle		2582621	0					
ANR	2584061	ArgumentList	upd -> outbuf + ioutbuf		2582621	1					
ANR	2584062	Argument	upd -> outbuf + ioutbuf		2582621	0					
ANR	2584063	AdditiveExpression	upd -> outbuf + ioutbuf		2582621	0		+			
ANR	2584064	PtrMemberAccess	upd -> outbuf		2582621	0					
ANR	2584065	Identifier	upd		2582621	0					
ANR	2584066	Identifier	outbuf		2582621	1					
ANR	2584067	Identifier	ioutbuf		2582621	1					
ANR	2584068	Argument	NULL		2582621	1					
ANR	2584069	Identifier	NULL		2582621	0					
ANR	2584070	Argument	n		2582621	2					
ANR	2584071	Identifier	n		2582621	0					
ANR	2584072	ExpressionStatement	"fwrite ( upd -> outbuf + upd -> nbytes , 1 , ioutbuf - upd -> nbytes , out )"	6339:12:226307:226364	2582621	1	True				
ANR	2584073	CallExpression	"fwrite ( upd -> outbuf + upd -> nbytes , 1 , ioutbuf - upd -> nbytes , out )"		2582621	0					
ANR	2584074	Callee	fwrite		2582621	0					
ANR	2584075	Identifier	fwrite		2582621	0					
ANR	2584076	ArgumentList	upd -> outbuf + upd -> nbytes		2582621	1					
ANR	2584077	Argument	upd -> outbuf + upd -> nbytes		2582621	0					
ANR	2584078	AdditiveExpression	upd -> outbuf + upd -> nbytes		2582621	0		+			
ANR	2584079	PtrMemberAccess	upd -> outbuf		2582621	0					
ANR	2584080	Identifier	upd		2582621	0					
ANR	2584081	Identifier	outbuf		2582621	1					
ANR	2584082	PtrMemberAccess	upd -> nbytes		2582621	1					
ANR	2584083	Identifier	upd		2582621	0					
ANR	2584084	Identifier	nbytes		2582621	1					
ANR	2584085	Argument	1		2582621	1					
ANR	2584086	PrimaryExpression	1		2582621	0					
ANR	2584087	Argument	ioutbuf - upd -> nbytes		2582621	2					
ANR	2584088	AdditiveExpression	ioutbuf - upd -> nbytes		2582621	0		-			
ANR	2584089	Identifier	ioutbuf		2582621	0					
ANR	2584090	PtrMemberAccess	upd -> nbytes		2582621	1					
ANR	2584091	Identifier	upd		2582621	0					
ANR	2584092	Identifier	nbytes		2582621	1					
ANR	2584093	Argument	out		2582621	3					
ANR	2584094	Identifier	out		2582621	0					
ANR	2584095	ExpressionStatement	ioutbuf = upd -> nbytes	6340:12:226378:226399	2582621	2	True				
ANR	2584096	AssignmentExpression	ioutbuf = upd -> nbytes		2582621	0		=			
ANR	2584097	Identifier	ioutbuf		2582621	0					
ANR	2584098	PtrMemberAccess	upd -> nbytes		2582621	1					
ANR	2584099	Identifier	upd		2582621	0					
ANR	2584100	Identifier	nbytes		2582621	1					
ANR	2584101	IfStatement	if ( upd -> yscan < upd -> ints [ I_BEG_Y ] )		2582621	10					
ANR	2584102	Condition	upd -> yscan < upd -> ints [ I_BEG_Y ]	6347:6:226587:226617	2582621	0	True				
ANR	2584103	RelationalExpression	upd -> yscan < upd -> ints [ I_BEG_Y ]		2582621	0		<			
ANR	2584104	PtrMemberAccess	upd -> yscan		2582621	0					
ANR	2584105	Identifier	upd		2582621	0					
ANR	2584106	Identifier	yscan		2582621	1					
ANR	2584107	ArrayIndexing	upd -> ints [ I_BEG_Y ]		2582621	1					
ANR	2584108	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2584109	Identifier	upd		2582621	0					
ANR	2584110	Identifier	ints		2582621	1					
ANR	2584111	Identifier	I_BEG_Y		2582621	1					
ANR	2584112	CompoundStatement		224:39:8117:8117	2582621	1					
ANR	2584113	ExpressionStatement	upd -> yscan += upd -> int_a [ IA_BEG_DY ] . data [ upd -> ipass ++ ]	6348:6:226628:226682	2582621	0	True				
ANR	2584114	AssignmentExpression	upd -> yscan += upd -> int_a [ IA_BEG_DY ] . data [ upd -> ipass ++ ]		2582621	0		+=			
ANR	2584115	PtrMemberAccess	upd -> yscan		2582621	0					
ANR	2584116	Identifier	upd		2582621	0					
ANR	2584117	Identifier	yscan		2582621	1					
ANR	2584118	ArrayIndexing	upd -> int_a [ IA_BEG_DY ] . data [ upd -> ipass ++ ]		2582621	1					
ANR	2584119	MemberAccess	upd -> int_a [ IA_BEG_DY ] . data		2582621	0					
ANR	2584120	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		2582621	0					
ANR	2584121	PtrMemberAccess	upd -> int_a		2582621	0					
ANR	2584122	Identifier	upd		2582621	0					
ANR	2584123	Identifier	int_a		2582621	1					
ANR	2584124	Identifier	IA_BEG_DY		2582621	1					
ANR	2584125	Identifier	data		2582621	1					
ANR	2584126	PostIncDecOperationExpression	upd -> ipass ++		2582621	1					
ANR	2584127	PtrMemberAccess	upd -> ipass		2582621	0					
ANR	2584128	Identifier	upd		2582621	0					
ANR	2584129	Identifier	ipass		2582621	1					
ANR	2584130	IncDec	++		2582621	1					
ANR	2584131	IfStatement	if ( upd -> ints [ I_BEG_Y ] <= upd -> yscan )		2582621	1					
ANR	2584132	Condition	upd -> ints [ I_BEG_Y ] <= upd -> yscan	6349:14:226698:226729	2582621	0	True				
ANR	2584133	RelationalExpression	upd -> ints [ I_BEG_Y ] <= upd -> yscan		2582621	0		<=			
ANR	2584134	ArrayIndexing	upd -> ints [ I_BEG_Y ]		2582621	0					
ANR	2584135	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2584136	Identifier	upd		2582621	0					
ANR	2584137	Identifier	ints		2582621	1					
ANR	2584138	Identifier	I_BEG_Y		2582621	1					
ANR	2584139	PtrMemberAccess	upd -> yscan		2582621	1					
ANR	2584140	Identifier	upd		2582621	0					
ANR	2584141	Identifier	yscan		2582621	1					
ANR	2584142	ExpressionStatement	upd -> ipass = 0	6349:48:226732:226746	2582621	1	True				
ANR	2584143	AssignmentExpression	upd -> ipass = 0		2582621	0		=			
ANR	2584144	PtrMemberAccess	upd -> ipass		2582621	0					
ANR	2584145	Identifier	upd		2582621	0					
ANR	2584146	Identifier	ipass		2582621	1					
ANR	2584147	PrimaryExpression	0		2582621	1					
ANR	2584148	ElseStatement	else		2582621	0					
ANR	2584149	IfStatement	if ( upd -> int_a [ IA_BEG_DY ] . size <= upd -> ipass )		2582621	0					
ANR	2584150	Condition	upd -> int_a [ IA_BEG_DY ] . size <= upd -> ipass	6350:14:226762:226801	2582621	0	True				
ANR	2584151	RelationalExpression	upd -> int_a [ IA_BEG_DY ] . size <= upd -> ipass		2582621	0		<=			
ANR	2584152	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		2582621	0					
ANR	2584153	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		2582621	0					
ANR	2584154	PtrMemberAccess	upd -> int_a		2582621	0					
ANR	2584155	Identifier	upd		2582621	0					
ANR	2584156	Identifier	int_a		2582621	1					
ANR	2584157	Identifier	IA_BEG_DY		2582621	1					
ANR	2584158	Identifier	size		2582621	1					
ANR	2584159	PtrMemberAccess	upd -> ipass		2582621	1					
ANR	2584160	Identifier	upd		2582621	0					
ANR	2584161	Identifier	ipass		2582621	1					
ANR	2584162	ExpressionStatement	upd -> ipass = 0	6350:56:226804:226818	2582621	1	True				
ANR	2584163	AssignmentExpression	upd -> ipass = 0		2582621	0		=			
ANR	2584164	PtrMemberAccess	upd -> ipass		2582621	0					
ANR	2584165	Identifier	upd		2582621	0					
ANR	2584166	Identifier	ipass		2582621	1					
ANR	2584167	PrimaryExpression	0		2582621	1					
ANR	2584168	ElseStatement	else		2582621	0					
ANR	2584169	IfStatement	if ( upd -> yscan >= upd -> ints [ I_END_Y ] )		2582621	0					
ANR	2584170	Condition	upd -> yscan >= upd -> ints [ I_END_Y ]	6351:13:226833:226864	2582621	0	True				
ANR	2584171	RelationalExpression	upd -> yscan >= upd -> ints [ I_END_Y ]		2582621	0		>=			
ANR	2584172	PtrMemberAccess	upd -> yscan		2582621	0					
ANR	2584173	Identifier	upd		2582621	0					
ANR	2584174	Identifier	yscan		2582621	1					
ANR	2584175	ArrayIndexing	upd -> ints [ I_END_Y ]		2582621	1					
ANR	2584176	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2584177	Identifier	upd		2582621	0					
ANR	2584178	Identifier	ints		2582621	1					
ANR	2584179	Identifier	I_END_Y		2582621	1					
ANR	2584180	CompoundStatement		228:47:8364:8364	2582621	1					
ANR	2584181	ExpressionStatement	upd -> yscan += upd -> int_a [ IA_END_DY ] . data [ upd -> ipass ++ ]	6352:6:226875:226929	2582621	0	True				
ANR	2584182	AssignmentExpression	upd -> yscan += upd -> int_a [ IA_END_DY ] . data [ upd -> ipass ++ ]		2582621	0		+=			
ANR	2584183	PtrMemberAccess	upd -> yscan		2582621	0					
ANR	2584184	Identifier	upd		2582621	0					
ANR	2584185	Identifier	yscan		2582621	1					
ANR	2584186	ArrayIndexing	upd -> int_a [ IA_END_DY ] . data [ upd -> ipass ++ ]		2582621	1					
ANR	2584187	MemberAccess	upd -> int_a [ IA_END_DY ] . data		2582621	0					
ANR	2584188	ArrayIndexing	upd -> int_a [ IA_END_DY ]		2582621	0					
ANR	2584189	PtrMemberAccess	upd -> int_a		2582621	0					
ANR	2584190	Identifier	upd		2582621	0					
ANR	2584191	Identifier	int_a		2582621	1					
ANR	2584192	Identifier	IA_END_DY		2582621	1					
ANR	2584193	Identifier	data		2582621	1					
ANR	2584194	PostIncDecOperationExpression	upd -> ipass ++		2582621	1					
ANR	2584195	PtrMemberAccess	upd -> ipass		2582621	0					
ANR	2584196	Identifier	upd		2582621	0					
ANR	2584197	Identifier	ipass		2582621	1					
ANR	2584198	IncDec	++		2582621	1					
ANR	2584199	IfStatement	if ( upd -> int_a [ IA_END_DY ] . size <= upd -> ipass )		2582621	1					
ANR	2584200	Condition	upd -> int_a [ IA_END_DY ] . size <= upd -> ipass	6353:9:226940:226979	2582621	0	True				
ANR	2584201	RelationalExpression	upd -> int_a [ IA_END_DY ] . size <= upd -> ipass		2582621	0		<=			
ANR	2584202	MemberAccess	upd -> int_a [ IA_END_DY ] . size		2582621	0					
ANR	2584203	ArrayIndexing	upd -> int_a [ IA_END_DY ]		2582621	0					
ANR	2584204	PtrMemberAccess	upd -> int_a		2582621	0					
ANR	2584205	Identifier	upd		2582621	0					
ANR	2584206	Identifier	int_a		2582621	1					
ANR	2584207	Identifier	IA_END_DY		2582621	1					
ANR	2584208	Identifier	size		2582621	1					
ANR	2584209	PtrMemberAccess	upd -> ipass		2582621	1					
ANR	2584210	Identifier	upd		2582621	0					
ANR	2584211	Identifier	ipass		2582621	1					
ANR	2584212	ExpressionStatement	upd -> ipass = 0	6353:51:226982:226996	2582621	1	True				
ANR	2584213	AssignmentExpression	upd -> ipass = 0		2582621	0		=			
ANR	2584214	PtrMemberAccess	upd -> ipass		2582621	0					
ANR	2584215	Identifier	upd		2582621	0					
ANR	2584216	Identifier	ipass		2582621	1					
ANR	2584217	PrimaryExpression	0		2582621	1					
ANR	2584218	ElseStatement	else		2582621	0					
ANR	2584219	CompoundStatement		231:10:8505:8505	2582621	0					
ANR	2584220	ExpressionStatement	upd -> yscan += upd -> int_a [ IA_STD_DY ] . data [ upd -> ipass ++ ]	6355:6:227016:227070	2582621	0	True				
ANR	2584221	AssignmentExpression	upd -> yscan += upd -> int_a [ IA_STD_DY ] . data [ upd -> ipass ++ ]		2582621	0		+=			
ANR	2584222	PtrMemberAccess	upd -> yscan		2582621	0					
ANR	2584223	Identifier	upd		2582621	0					
ANR	2584224	Identifier	yscan		2582621	1					
ANR	2584225	ArrayIndexing	upd -> int_a [ IA_STD_DY ] . data [ upd -> ipass ++ ]		2582621	1					
ANR	2584226	MemberAccess	upd -> int_a [ IA_STD_DY ] . data		2582621	0					
ANR	2584227	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		2582621	0					
ANR	2584228	PtrMemberAccess	upd -> int_a		2582621	0					
ANR	2584229	Identifier	upd		2582621	0					
ANR	2584230	Identifier	int_a		2582621	1					
ANR	2584231	Identifier	IA_STD_DY		2582621	1					
ANR	2584232	Identifier	data		2582621	1					
ANR	2584233	PostIncDecOperationExpression	upd -> ipass ++		2582621	1					
ANR	2584234	PtrMemberAccess	upd -> ipass		2582621	0					
ANR	2584235	Identifier	upd		2582621	0					
ANR	2584236	Identifier	ipass		2582621	1					
ANR	2584237	IncDec	++		2582621	1					
ANR	2584238	IfStatement	if ( upd -> int_a [ IA_STD_DY ] . size <= upd -> ipass )		2582621	1					
ANR	2584239	Condition	upd -> int_a [ IA_STD_DY ] . size <= upd -> ipass	6356:9:227081:227120	2582621	0	True				
ANR	2584240	RelationalExpression	upd -> int_a [ IA_STD_DY ] . size <= upd -> ipass		2582621	0		<=			
ANR	2584241	MemberAccess	upd -> int_a [ IA_STD_DY ] . size		2582621	0					
ANR	2584242	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		2582621	0					
ANR	2584243	PtrMemberAccess	upd -> int_a		2582621	0					
ANR	2584244	Identifier	upd		2582621	0					
ANR	2584245	Identifier	int_a		2582621	1					
ANR	2584246	Identifier	IA_STD_DY		2582621	1					
ANR	2584247	Identifier	size		2582621	1					
ANR	2584248	PtrMemberAccess	upd -> ipass		2582621	1					
ANR	2584249	Identifier	upd		2582621	0					
ANR	2584250	Identifier	ipass		2582621	1					
ANR	2584251	ExpressionStatement	upd -> ipass = 0	6356:51:227123:227137	2582621	1	True				
ANR	2584252	AssignmentExpression	upd -> ipass = 0		2582621	0		=			
ANR	2584253	PtrMemberAccess	upd -> ipass		2582621	0					
ANR	2584254	Identifier	upd		2582621	0					
ANR	2584255	Identifier	ipass		2582621	1					
ANR	2584256	PrimaryExpression	0		2582621	1					
ANR	2584257	IfStatement	if ( upd -> yscan >= upd -> ints [ I_END_Y ] )		2582621	2					
ANR	2584258	Condition	upd -> yscan >= upd -> ints [ I_END_Y ]	6357:9:227148:227179	2582621	0	True				
ANR	2584259	RelationalExpression	upd -> yscan >= upd -> ints [ I_END_Y ]		2582621	0		>=			
ANR	2584260	PtrMemberAccess	upd -> yscan		2582621	0					
ANR	2584261	Identifier	upd		2582621	0					
ANR	2584262	Identifier	yscan		2582621	1					
ANR	2584263	ArrayIndexing	upd -> ints [ I_END_Y ]		2582621	1					
ANR	2584264	PtrMemberAccess	upd -> ints		2582621	0					
ANR	2584265	Identifier	upd		2582621	0					
ANR	2584266	Identifier	ints		2582621	1					
ANR	2584267	Identifier	I_END_Y		2582621	1					
ANR	2584268	ExpressionStatement	upd -> ipass = 0	6357:51:227190:227204	2582621	1	True				
ANR	2584269	AssignmentExpression	upd -> ipass = 0		2582621	0		=			
ANR	2584270	PtrMemberAccess	upd -> ipass		2582621	0					
ANR	2584271	Identifier	upd		2582621	0					
ANR	2584272	Identifier	ipass		2582621	1					
ANR	2584273	PrimaryExpression	0		2582621	1					
ANR	2584274	ReturnStatement	return 0 ;	6360:3:227215:227223	2582621	11	True				
ANR	2584275	PrimaryExpression	0		2582621	0					
ANR	2584276	ReturnType	static int		2582621	1					
ANR	2584277	Identifier	upd_wrtescp2x		2582621	2					
ANR	2584278	ParameterList	"upd_p upd , FILE * out"		2582621	3					
ANR	2584279	Parameter	upd_p upd	6123:14:218480:218488	2582621	0	True				
ANR	2584280	ParameterType	upd_p		2582621	0					
ANR	2584281	Identifier	upd		2582621	1					
ANR	2584282	Parameter	FILE * out	6123:25:218491:218499	2582621	1	True				
ANR	2584283	ParameterType	FILE *		2582621	0					
ANR	2584284	Identifier	out		2582621	1					
ANR	2584285	CFGEntryNode	ENTRY		2582621		True				
ANR	2584286	CFGExitNode	EXIT		2582621		True				
ANR	2584287	Symbol	I_PINS2WRITE		2582621						
ANR	2584288	Symbol	* upd -> int_a		2582621						
ANR	2584289	Symbol	* x		2582621						
ANR	2584290	Symbol	* y		2582621						
ANR	2584291	Symbol	* * IA_STD_DY		2582621						
ANR	2584292	Symbol	* I_YSTEP		2582621						
ANR	2584293	Symbol	pinbot		2582621						
ANR	2584294	Symbol	bit		2582621						
ANR	2584295	Symbol	upd -> int_a [ IA_STD_DY ] . data		2582621						
ANR	2584296	Symbol	icomp		2582621						
ANR	2584297	Symbol	upd -> yscan		2582621						
ANR	2584298	Symbol	scan -> xend		2582621						
ANR	2584299	Symbol	* upd -> string_a [ SA_WRITECOMP ] . data		2582621						
ANR	2584300	Symbol	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data		2582621						
ANR	2584301	Symbol	* scan		2582621						
ANR	2584302	Symbol	* IA_BEG_IX		2582621						
ANR	2584303	Symbol	upd -> nbytes		2582621						
ANR	2584304	Symbol	* upd -> int_a [ IA_BEG_DY ] . data		2582621						
ANR	2584305	Symbol	upd -> int_a [ IA_BEG_DY ] . data		2582621						
ANR	2584306	Symbol	* upd -> scnbuf		2582621						
ANR	2584307	Symbol	upd -> string_a [ SA_SETCOMP ] . data		2582621						
ANR	2584308	Symbol	upd		2582621						
ANR	2584309	Symbol	* SA_WRITECOMP		2582621						
ANR	2584310	Symbol	I_NXPASS		2582621						
ANR	2584311	Symbol	* I_NYPASS		2582621						
ANR	2584312	Symbol	* * SA_SETCOMP		2582621						
ANR	2584313	Symbol	B_YABS		2582621						
ANR	2584314	Symbol	scan [ icomp ] . xbegin		2582621						
ANR	2584315	Symbol	* IA_BEGBOT		2582621						
ANR	2584316	Symbol	* * scan		2582621						
ANR	2584317	Symbol	* I_BEG_Y		2582621						
ANR	2584318	Symbol	* upd -> ipass		2582621						
ANR	2584319	Symbol	* upd -> outbuf		2582621						
ANR	2584320	Symbol	* IA_END_IX		2582621						
ANR	2584321	Symbol	* * icomp		2582621						
ANR	2584322	Symbol	ixpass		2582621						
ANR	2584323	Symbol	upd -> pwidth		2582621						
ANR	2584324	Symbol	* scan [ icomp ] . xend		2582621						
ANR	2584325	Symbol	scan		2582621						
ANR	2584326	Symbol	upd -> strings		2582621						
ANR	2584327	Symbol	* IA_STD_IX		2582621						
ANR	2584328	Symbol	* * IA_BEGBOT		2582621						
ANR	2584329	Symbol	upd -> int_a [ IA_STD_DY ] . size		2582621						
ANR	2584330	Symbol	I_BEG_Y		2582621						
ANR	2584331	Symbol	out		2582621						
ANR	2584332	Symbol	upd -> flags		2582621						
ANR	2584333	Symbol	upd_rle		2582621						
ANR	2584334	Symbol	* upd -> string_a [ SA_SETCOMP ] . data		2582621						
ANR	2584335	Symbol	* * y		2582621						
ANR	2584336	Symbol	* upd		2582621						
ANR	2584337	Symbol	* upd -> int_a [ IA_END_IX ] . data		2582621						
ANR	2584338	Symbol	* S_XMOVE		2582621						
ANR	2584339	Symbol	xend		2582621						
ANR	2584340	Symbol	obytes		2582621						
ANR	2584341	Symbol	* upd -> scnmsk		2582621						
ANR	2584342	Symbol	IA_BEG_IX		2582621						
ANR	2584343	Symbol	upd -> ocomp		2582621						
ANR	2584344	Symbol	* upd -> strings		2582621						
ANR	2584345	Symbol	* I_XOFS		2582621						
ANR	2584346	Symbol	upd -> int_a [ IA_BEG_IX ] . data		2582621						
ANR	2584347	Symbol	upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes		2582621						
ANR	2584348	Symbol	* upd -> int_a [ IA_END_DY ] . data		2582621						
ANR	2584349	Symbol	upd -> strings [ S_YMOVE ] . size		2582621						
ANR	2584350	Symbol	* S_XSTEP		2582621						
ANR	2584351	Symbol	* scan [ icomp ] . xbegin		2582621						
ANR	2584352	Symbol	IA_BEGBOT		2582621						
ANR	2584353	Symbol	upd -> int_a [ IA_END_DY ] . data		2582621						
ANR	2584354	Symbol	ibytes		2582621						
ANR	2584355	Symbol	xbegin		2582621						
ANR	2584356	Symbol	I_XSTEP		2582621						
ANR	2584357	Symbol	* * upd -> scnbuf		2582621						
ANR	2584358	Symbol	n		2582621						
ANR	2584359	Symbol	* * upd -> int_a		2582621						
ANR	2584360	Symbol	* * IA_STD_IX		2582621						
ANR	2584361	Symbol	I_YOFS		2582621						
ANR	2584362	Symbol	IA_STD_IX		2582621						
ANR	2584363	Symbol	upd -> yprinter		2582621						
ANR	2584364	Symbol	ioutbuf		2582621						
ANR	2584365	Symbol	IA_END_IX		2582621						
ANR	2584366	Symbol	S_YMOVE		2582621						
ANR	2584367	Symbol	upd -> string_a [ SA_WRITECOMP ] . data		2582621						
ANR	2584368	Symbol	S_YSTEP		2582621						
ANR	2584369	Symbol	x		2582621						
ANR	2584370	Symbol	y		2582621						
ANR	2584371	Symbol	~7		2582621						
ANR	2584372	Symbol	* I_END_Y		2582621						
ANR	2584373	Symbol	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		2582621						
ANR	2584374	Symbol	* * upd		2582621						
ANR	2584375	Symbol	* * IA_END_IX		2582621						
ANR	2584376	Symbol	* * upd -> scnmsk		2582621						
ANR	2584377	Symbol	S_XMOVE		2582621						
ANR	2584378	Symbol	* upd -> string_a		2582621						
ANR	2584379	Symbol	* IA_BEG_DY		2582621						
ANR	2584380	Symbol	SA_SETCOMP		2582621						
ANR	2584381	Symbol	* * IA_ENDTOP		2582621						
ANR	2584382	Symbol	upd -> icomp		2582621						
ANR	2584383	Symbol	* * IA_END_DY		2582621						
ANR	2584384	Symbol	upd -> ipass		2582621						
ANR	2584385	Symbol	upd -> strings [ S_YSTEP ] . size		2582621						
ANR	2584386	Symbol	* SA_SETCOMP		2582621						
ANR	2584387	Symbol	upd -> strings [ S_XSTEP ] . data		2582621						
ANR	2584388	Symbol	* upd -> int_a [ IA_BEGBOT ] . data		2582621						
ANR	2584389	Symbol	* * IA_BEG_IX		2582621						
ANR	2584390	Symbol	* I_NXPASS		2582621						
ANR	2584391	Symbol	upd -> strings [ S_XMOVE ] . data		2582621						
ANR	2584392	Symbol	upd -> int_a		2582621						
ANR	2584393	Symbol	pin		2582621						
ANR	2584394	Symbol	* upd -> int_a [ IA_STD_IX ] . data		2582621						
ANR	2584395	Symbol	* I_BEGSKIP		2582621						
ANR	2584396	Symbol	* I_XSTEP		2582621						
ANR	2584397	Symbol	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		2582621						
ANR	2584398	Symbol	upd -> int_a [ IA_ENDTOP ] . data		2582621						
ANR	2584399	Symbol	NULL		2582621						
ANR	2584400	Symbol	* upd -> int_a [ IA_ENDTOP ] . data		2582621						
ANR	2584401	Symbol	* scan -> xend		2582621						
ANR	2584402	Symbol	* upd -> int_a [ IA_BEG_IX ] . data		2582621						
ANR	2584403	Symbol	SA_WRITECOMP		2582621						
ANR	2584404	Symbol	upd -> int_a [ IA_END_IX ] . data		2582621						
ANR	2584405	Symbol	upd -> xprinter		2582621						
ANR	2584406	Symbol	upd -> int_a [ IA_STD_IX ] . data		2582621						
ANR	2584407	Symbol	pintop		2582621						
ANR	2584408	Symbol	upd -> ints		2582621						
ANR	2584409	Symbol	* ixpass		2582621						
ANR	2584410	Symbol	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		2582621						
ANR	2584411	Symbol	upd -> strings [ S_XSTEP ] . size		2582621						
ANR	2584412	Symbol	upd -> strings [ S_YSTEP ] . data		2582621						
ANR	2584413	Symbol	I_XOFS		2582621						
ANR	2584414	Symbol	I_BEGSKIP		2582621						
ANR	2584415	Symbol	upd -> int_a [ IA_END_DY ] . size		2582621						
ANR	2584416	Symbol	* obytes		2582621						
ANR	2584417	Symbol	B_XABS		2582621						
ANR	2584418	Symbol	* icomp		2582621						
ANR	2584419	Symbol	upd -> int_a [ IA_BEG_DY ] . size		2582621						
ANR	2584420	Symbol	* IA_ENDTOP		2582621						
ANR	2584421	Symbol	upd -> strings [ S_YMOVE ] . data		2582621						
ANR	2584422	Symbol	* IA_END_DY		2582621						
ANR	2584423	Symbol	* IA_STD_DY		2582621						
ANR	2584424	Symbol	I_NYPASS		2582621						
ANR	2584425	Symbol	* * upd -> string_a		2582621						
ANR	2584426	Symbol	IA_STD_DY		2582621						
ANR	2584427	Symbol	* ibytes		2582621						
ANR	2584428	Symbol	scan [ icomp ] . xend		2582621						
ANR	2584429	Symbol	ybegin		2582621						
ANR	2584430	Symbol	* * SA_WRITECOMP		2582621						
ANR	2584431	Symbol	* I_YOFS		2582621						
ANR	2584432	Symbol	* S_YMOVE		2582621						
ANR	2584433	Symbol	upd -> scnmsk		2582621						
ANR	2584434	Symbol	* * * upd		2582621						
ANR	2584435	Symbol	upd -> strings [ S_XMOVE ] . size		2582621						
ANR	2584436	Symbol	IA_ENDTOP		2582621						
ANR	2584437	Symbol	IA_END_DY		2582621						
ANR	2584438	Symbol	I_END_Y		2582621						
ANR	2584439	Symbol	* S_YSTEP		2582621						
ANR	2584440	Symbol	upd -> string_a		2582621						
ANR	2584441	Symbol	* upd -> ints		2582621						
ANR	2584442	Symbol	* I_PINS2WRITE		2582621						
ANR	2584443	Symbol	upd -> scnbuf		2582621						
ANR	2584444	Symbol	upd -> string_a [ SA_SETCOMP ] . size		2582621						
ANR	2584445	Symbol	S_XSTEP		2582621						
ANR	2584446	Symbol	yend		2582621						
ANR	2584447	Symbol	IA_BEG_DY		2582621						
ANR	2584448	Symbol	* upd -> int_a [ IA_STD_DY ] . data		2582621						
ANR	2584449	Symbol	upd -> outbuf		2582621						
ANR	2584450	Symbol	upd -> int_a [ IA_BEGBOT ] . data		2582621						
ANR	2584451	Symbol	* * IA_BEG_DY		2582621						
ANR	2584452	Symbol	I_YSTEP		2582621						
ANR	2584453	Function	upd_rle	6367:0:227451:228929							
ANR	2584454	FunctionDef	"upd_rle (byte * out , const byte * in , int nbytes)"		2584453	0					
ANR	2584455	CompoundStatement		6369:0:227507:228929	2584453	0					
ANR	2584456	IdentifierDeclStatement	int used = 0 ;	6371:3:227513:227525	2584453	0	True				
ANR	2584457	IdentifierDecl	used = 0		2584453	0					
ANR	2584458	IdentifierDeclType	int		2584453	0					
ANR	2584459	Identifier	used		2584453	1					
ANR	2584460	AssignmentExpression	used = 0		2584453	2		=			
ANR	2584461	Identifier	used		2584453	0					
ANR	2584462	PrimaryExpression	0		2584453	1					
ANR	2584463	IdentifierDeclStatement	"int crun , cdata ;"	6372:3:227530:227544	2584453	1	True				
ANR	2584464	IdentifierDecl	crun		2584453	0					
ANR	2584465	IdentifierDeclType	int		2584453	0					
ANR	2584466	Identifier	crun		2584453	1					
ANR	2584467	IdentifierDecl	cdata		2584453	1					
ANR	2584468	IdentifierDeclType	int		2584453	0					
ANR	2584469	Identifier	cdata		2584453	1					
ANR	2584470	IdentifierDeclStatement	byte run ;	6373:3:227549:227557	2584453	2	True				
ANR	2584471	IdentifierDecl	run		2584453	0					
ANR	2584472	IdentifierDeclType	byte		2584453	0					
ANR	2584473	Identifier	run		2584453	1					
ANR	2584474	IfStatement	if ( in != NULL )		2584453	3					
ANR	2584475	Condition	in != NULL	6375:6:227566:227575	2584453	0	True				
ANR	2584476	EqualityExpression	in != NULL		2584453	0		!=			
ANR	2584477	Identifier	in		2584453	0					
ANR	2584478	Identifier	NULL		2584453	1					
ANR	2584479	CompoundStatement		7:18:70:70	2584453	1					
ANR	2584480	ExpressionStatement	crun = 1	6377:6:227606:227614	2584453	0	True				
ANR	2584481	AssignmentExpression	crun = 1		2584453	0		=			
ANR	2584482	Identifier	crun		2584453	0					
ANR	2584483	PrimaryExpression	1		2584453	1					
ANR	2584484	WhileStatement	while ( nbytes > 0 )		2584453	1					
ANR	2584485	Condition	nbytes > 0	6379:12:227629:227638	2584453	0	True				
ANR	2584486	RelationalExpression	nbytes > 0		2584453	0		>			
ANR	2584487	Identifier	nbytes		2584453	0					
ANR	2584488	PrimaryExpression	0		2584453	1					
ANR	2584489	CompoundStatement		11:24:133:133	2584453	1					
ANR	2584490	ExpressionStatement	run = in [ 0 ]	6381:9:227681:227692	2584453	0	True				
ANR	2584491	AssignmentExpression	run = in [ 0 ]		2584453	0		=			
ANR	2584492	Identifier	run		2584453	0					
ANR	2584493	ArrayIndexing	in [ 0 ]		2584453	1					
ANR	2584494	Identifier	in		2584453	0					
ANR	2584495	PrimaryExpression	0		2584453	1					
ANR	2584496	WhileStatement	while ( ( nbytes > crun ) && ( run == in [ crun ] ) )		2584453	1					
ANR	2584497	Condition	( nbytes > crun ) && ( run == in [ crun ] )	6383:15:227710:227745	2584453	0	True				
ANR	2584498	AndExpression	( nbytes > crun ) && ( run == in [ crun ] )		2584453	0		&&			
ANR	2584499	RelationalExpression	nbytes > crun		2584453	0		>			
ANR	2584500	Identifier	nbytes		2584453	0					
ANR	2584501	Identifier	crun		2584453	1					
ANR	2584502	EqualityExpression	run == in [ crun ]		2584453	1		==			
ANR	2584503	Identifier	run		2584453	0					
ANR	2584504	ArrayIndexing	in [ crun ]		2584453	1					
ANR	2584505	Identifier	in		2584453	0					
ANR	2584506	Identifier	crun		2584453	1					
ANR	2584507	IfStatement	if ( ++ crun == 128 )		2584453	1					
ANR	2584508	Condition	++ crun == 128	6383:56:227751:227763	2584453	0	True				
ANR	2584509	EqualityExpression	++ crun == 128		2584453	0		==			
ANR	2584510	UnaryExpression	++ crun		2584453	0					
ANR	2584511	IncDec	++		2584453	0					
ANR	2584512	Identifier	crun		2584453	1					
ANR	2584513	PrimaryExpression	128		2584453	1					
ANR	2584514	BreakStatement	break ;	6383:71:227766:227771	2584453	1	True				
ANR	2584515	IfStatement	if ( ( crun > 2 ) || ( crun == nbytes ) )		2584453	2					
ANR	2584516	Condition	( crun > 2 ) || ( crun == nbytes )	6385:12:227786:227815	2584453	0	True				
ANR	2584517	OrExpression	( crun > 2 ) || ( crun == nbytes )		2584453	0		||			
ANR	2584518	RelationalExpression	crun > 2		2584453	0		>			
ANR	2584519	Identifier	crun		2584453	0					
ANR	2584520	PrimaryExpression	2		2584453	1					
ANR	2584521	EqualityExpression	crun == nbytes		2584453	1		==			
ANR	2584522	Identifier	crun		2584453	0					
ANR	2584523	Identifier	nbytes		2584453	1					
ANR	2584524	CompoundStatement		17:44:310:310	2584453	1					
ANR	2584525	ExpressionStatement	* out ++ = ( 257 - crun ) & 0xff	6387:12:227852:227881	2584453	0	True				
ANR	2584526	AssignmentExpression	* out ++ = ( 257 - crun ) & 0xff		2584453	0		=			
ANR	2584527	UnaryOperationExpression	* out ++		2584453	0					
ANR	2584528	UnaryOperator	*		2584453	0					
ANR	2584529	PostIncDecOperationExpression	out ++		2584453	1					
ANR	2584530	Identifier	out		2584453	0					
ANR	2584531	IncDec	++		2584453	1					
ANR	2584532	BitAndExpression	( 257 - crun ) & 0xff		2584453	1		&			
ANR	2584533	AdditiveExpression	257 - crun		2584453	0		-			
ANR	2584534	PrimaryExpression	257		2584453	0					
ANR	2584535	Identifier	crun		2584453	1					
ANR	2584536	PrimaryExpression	0xff		2584453	1					
ANR	2584537	ExpressionStatement	* out ++ = run	6387:43:227883:227895	2584453	1	True				
ANR	2584538	AssignmentExpression	* out ++ = run		2584453	0		=			
ANR	2584539	UnaryOperationExpression	* out ++		2584453	0					
ANR	2584540	UnaryOperator	*		2584453	0					
ANR	2584541	PostIncDecOperationExpression	out ++		2584453	1					
ANR	2584542	Identifier	out		2584453	0					
ANR	2584543	IncDec	++		2584453	1					
ANR	2584544	Identifier	run		2584453	1					
ANR	2584545	ExpressionStatement	used += 2	6387:57:227897:227906	2584453	2	True				
ANR	2584546	AssignmentExpression	used += 2		2584453	0		+=			
ANR	2584547	Identifier	used		2584453	0					
ANR	2584548	PrimaryExpression	2		2584453	1					
ANR	2584549	ExpressionStatement	nbytes -= crun	6389:12:227921:227935	2584453	3	True				
ANR	2584550	AssignmentExpression	nbytes -= crun		2584453	0		-=			
ANR	2584551	Identifier	nbytes		2584453	0					
ANR	2584552	Identifier	crun		2584453	1					
ANR	2584553	ExpressionStatement	in += crun	6389:28:227937:227950	2584453	4	True				
ANR	2584554	AssignmentExpression	in += crun		2584453	0		+=			
ANR	2584555	Identifier	in		2584453	0					
ANR	2584556	Identifier	crun		2584453	1					
ANR	2584557	ExpressionStatement	crun = 1	6390:12:227964:227972	2584453	5	True				
ANR	2584558	AssignmentExpression	crun = 1		2584453	0		=			
ANR	2584559	Identifier	crun		2584453	0					
ANR	2584560	PrimaryExpression	1		2584453	1					
ANR	2584561	ElseStatement	else		2584453	0					
ANR	2584562	CompoundStatement		24:16:483:483	2584453	0					
ANR	2584563	ForStatement	for ( cdata = crun ; ( nbytes > cdata ) && ( crun < 4 ) ; )		2584453	0					
ANR	2584564	ForInit	cdata = crun ;	6394:16:228059:228071	2584453	0	True				
ANR	2584565	AssignmentExpression	cdata = crun		2584453	0		=			
ANR	2584566	Identifier	cdata		2584453	0					
ANR	2584567	Identifier	crun		2584453	1					
ANR	2584568	Condition	( nbytes > cdata ) && ( crun < 4 )	6394:30:228073:228102	2584453	1	True				
ANR	2584569	AndExpression	( nbytes > cdata ) && ( crun < 4 )		2584453	0		&&			
ANR	2584570	RelationalExpression	nbytes > cdata		2584453	0		>			
ANR	2584571	Identifier	nbytes		2584453	0					
ANR	2584572	Identifier	cdata		2584453	1					
ANR	2584573	RelationalExpression	crun < 4		2584453	1		<			
ANR	2584574	Identifier	crun		2584453	0					
ANR	2584575	PrimaryExpression	4		2584453	1					
ANR	2584576	CompoundStatement		26:63:598:598	2584453	2					
ANR	2584577	IfStatement	if ( run == in [ cdata ] )		2584453	0					
ANR	2584578	Condition	run == in [ cdata ]	6395:18:228126:228142	2584453	0	True				
ANR	2584579	EqualityExpression	run == in [ cdata ]		2584453	0		==			
ANR	2584580	Identifier	run		2584453	0					
ANR	2584581	ArrayIndexing	in [ cdata ]		2584453	1					
ANR	2584582	Identifier	in		2584453	0					
ANR	2584583	Identifier	cdata		2584453	1					
ANR	2584584	ExpressionStatement	crun += 1	6395:37:228145:228154	2584453	1	True				
ANR	2584585	AssignmentExpression	crun += 1		2584453	0		+=			
ANR	2584586	Identifier	crun		2584453	0					
ANR	2584587	PrimaryExpression	1		2584453	1					
ANR	2584588	ElseStatement	else		2584453	0					
ANR	2584589	ExpressionStatement	"run = in [ cdata ] , crun = 1"	6396:20:228176:228202	2584453	0	True				
ANR	2584590	Expression	"run = in [ cdata ] , crun = 1"		2584453	0					
ANR	2584591	AssignmentExpression	run = in [ cdata ]		2584453	0		=			
ANR	2584592	Identifier	run		2584453	0					
ANR	2584593	ArrayIndexing	in [ cdata ]		2584453	1					
ANR	2584594	Identifier	in		2584453	0					
ANR	2584595	Identifier	cdata		2584453	1					
ANR	2584596	AssignmentExpression	crun = 1		2584453	1		=			
ANR	2584597	Identifier	crun		2584453	0					
ANR	2584598	PrimaryExpression	1		2584453	1					
ANR	2584599	IfStatement	if ( ++ cdata == 128 )		2584453	1					
ANR	2584600	Condition	++ cdata == 128	6397:18:228222:228235	2584453	0	True				
ANR	2584601	EqualityExpression	++ cdata == 128		2584453	0		==			
ANR	2584602	UnaryExpression	++ cdata		2584453	0					
ANR	2584603	IncDec	++		2584453	0					
ANR	2584604	Identifier	cdata		2584453	1					
ANR	2584605	PrimaryExpression	128		2584453	1					
ANR	2584606	BreakStatement	break ;	6397:34:228238:228243	2584453	1	True				
ANR	2584607	IfStatement	if ( crun < 3 )		2584453	1					
ANR	2584608	Condition	crun < 3	6400:15:228275:228282	2584453	0	True				
ANR	2584609	RelationalExpression	crun < 3		2584453	0		<			
ANR	2584610	Identifier	crun		2584453	0					
ANR	2584611	PrimaryExpression	3		2584453	1					
ANR	2584612	ExpressionStatement	crun = 0	6400:25:228285:228295	2584453	1	True				
ANR	2584613	AssignmentExpression	crun = 0		2584453	0		=			
ANR	2584614	Identifier	crun		2584453	0					
ANR	2584615	PrimaryExpression	0		2584453	1					
ANR	2584616	ElseStatement	else		2584453	0					
ANR	2584617	ExpressionStatement	cdata -= crun	6401:25:228351:228364	2584453	0	True				
ANR	2584618	AssignmentExpression	cdata -= crun		2584453	0		-=			
ANR	2584619	Identifier	cdata		2584453	0					
ANR	2584620	Identifier	crun		2584453	1					
ANR	2584621	ExpressionStatement	* out ++ = cdata - 1	6403:12:228379:228395	2584453	2	True				
ANR	2584622	AssignmentExpression	* out ++ = cdata - 1		2584453	0		=			
ANR	2584623	UnaryOperationExpression	* out ++		2584453	0					
ANR	2584624	UnaryOperator	*		2584453	0					
ANR	2584625	PostIncDecOperationExpression	out ++		2584453	1					
ANR	2584626	Identifier	out		2584453	0					
ANR	2584627	IncDec	++		2584453	1					
ANR	2584628	AdditiveExpression	cdata - 1		2584453	1		-			
ANR	2584629	Identifier	cdata		2584453	0					
ANR	2584630	PrimaryExpression	1		2584453	1					
ANR	2584631	ExpressionStatement	used ++	6403:34:228401:228407	2584453	3	True				
ANR	2584632	PostIncDecOperationExpression	used ++		2584453	0					
ANR	2584633	Identifier	used		2584453	0					
ANR	2584634	IncDec	++		2584453	1					
ANR	2584635	ExpressionStatement	"memcpy ( out , in , cdata )"	6404:12:228421:228441	2584453	4	True				
ANR	2584636	CallExpression	"memcpy ( out , in , cdata )"		2584453	0					
ANR	2584637	Callee	memcpy		2584453	0					
ANR	2584638	Identifier	memcpy		2584453	0					
ANR	2584639	ArgumentList	out		2584453	1					
ANR	2584640	Argument	out		2584453	0					
ANR	2584641	Identifier	out		2584453	0					
ANR	2584642	Argument	in		2584453	1					
ANR	2584643	Identifier	in		2584453	0					
ANR	2584644	Argument	cdata		2584453	2					
ANR	2584645	Identifier	cdata		2584453	0					
ANR	2584646	ExpressionStatement	used += cdata	6404:34:228443:228456	2584453	5	True				
ANR	2584647	AssignmentExpression	used += cdata		2584453	0		+=			
ANR	2584648	Identifier	used		2584453	0					
ANR	2584649	Identifier	cdata		2584453	1					
ANR	2584650	ExpressionStatement	out += cdata	6404:49:228458:228472	2584453	6	True				
ANR	2584651	AssignmentExpression	out += cdata		2584453	0		+=			
ANR	2584652	Identifier	out		2584453	0					
ANR	2584653	Identifier	cdata		2584453	1					
ANR	2584654	ExpressionStatement	nbytes -= cdata	6406:12:228487:228502	2584453	7	True				
ANR	2584655	AssignmentExpression	nbytes -= cdata		2584453	0		-=			
ANR	2584656	Identifier	nbytes		2584453	0					
ANR	2584657	Identifier	cdata		2584453	1					
ANR	2584658	ExpressionStatement	in += cdata	6406:29:228504:228518	2584453	8	True				
ANR	2584659	AssignmentExpression	in += cdata		2584453	0		+=			
ANR	2584660	Identifier	in		2584453	0					
ANR	2584661	Identifier	cdata		2584453	1					
ANR	2584662	ElseStatement	else		2584453	0					
ANR	2584663	CompoundStatement		44:10:1123:1123	2584453	0					
ANR	2584664	WhileStatement	while ( nbytes > 0 )		2584453	0					
ANR	2584665	Condition	nbytes > 0	6414:12:228686:228695	2584453	0	True				
ANR	2584666	RelationalExpression	nbytes > 0		2584453	0		>			
ANR	2584667	Identifier	nbytes		2584453	0					
ANR	2584668	PrimaryExpression	0		2584453	1					
ANR	2584669	CompoundStatement		46:24:1190:1190	2584453	1					
ANR	2584670	ExpressionStatement	crun = nbytes > 128 ? 128 : nbytes	6415:9:228709:228746	2584453	0	True				
ANR	2584671	AssignmentExpression	crun = nbytes > 128 ? 128 : nbytes		2584453	0		=			
ANR	2584672	Identifier	crun		2584453	0					
ANR	2584673	ConditionalExpression	nbytes > 128 ? 128 : nbytes		2584453	1					
ANR	2584674	Condition	nbytes > 128		2584453	0					
ANR	2584675	RelationalExpression	nbytes > 128		2584453	0		>			
ANR	2584676	Identifier	nbytes		2584453	0					
ANR	2584677	PrimaryExpression	128		2584453	1					
ANR	2584678	PrimaryExpression	128		2584453	1					
ANR	2584679	Identifier	nbytes		2584453	2					
ANR	2584680	ExpressionStatement	nbytes -= crun	6416:9:228757:228771	2584453	1	True				
ANR	2584681	AssignmentExpression	nbytes -= crun		2584453	0		-=			
ANR	2584682	Identifier	nbytes		2584453	0					
ANR	2584683	Identifier	crun		2584453	1					
ANR	2584684	ExpressionStatement	* out ++ = ( 257 - crun ) & 0xff	6417:9:228782:228811	2584453	2	True				
ANR	2584685	AssignmentExpression	* out ++ = ( 257 - crun ) & 0xff		2584453	0		=			
ANR	2584686	UnaryOperationExpression	* out ++		2584453	0					
ANR	2584687	UnaryOperator	*		2584453	0					
ANR	2584688	PostIncDecOperationExpression	out ++		2584453	1					
ANR	2584689	Identifier	out		2584453	0					
ANR	2584690	IncDec	++		2584453	1					
ANR	2584691	BitAndExpression	( 257 - crun ) & 0xff		2584453	1		&			
ANR	2584692	AdditiveExpression	257 - crun		2584453	0		-			
ANR	2584693	PrimaryExpression	257		2584453	0					
ANR	2584694	Identifier	crun		2584453	1					
ANR	2584695	PrimaryExpression	0xff		2584453	1					
ANR	2584696	ExpressionStatement	* out ++ = 0	6418:9:228822:228833	2584453	3	True				
ANR	2584697	AssignmentExpression	* out ++ = 0		2584453	0		=			
ANR	2584698	UnaryOperationExpression	* out ++		2584453	0					
ANR	2584699	UnaryOperator	*		2584453	0					
ANR	2584700	PostIncDecOperationExpression	out ++		2584453	1					
ANR	2584701	Identifier	out		2584453	0					
ANR	2584702	IncDec	++		2584453	1					
ANR	2584703	PrimaryExpression	0		2584453	1					
ANR	2584704	ExpressionStatement	used += 2	6419:9:228844:228855	2584453	4	True				
ANR	2584705	AssignmentExpression	used += 2		2584453	0		+=			
ANR	2584706	Identifier	used		2584453	0					
ANR	2584707	PrimaryExpression	2		2584453	1					
ANR	2584708	ReturnStatement	return used ;	6422:3:228916:228927	2584453	4	True				
ANR	2584709	Identifier	used		2584453	0					
ANR	2584710	ReturnType	static int		2584453	1					
ANR	2584711	Identifier	upd_rle		2584453	2					
ANR	2584712	ParameterList	"byte * out , const byte * in , int nbytes"		2584453	3					
ANR	2584713	Parameter	byte * out	6368:8:227470:227478	2584453	0	True				
ANR	2584714	ParameterType	byte *		2584453	0					
ANR	2584715	Identifier	out		2584453	1					
ANR	2584716	Parameter	const byte * in	6368:18:227480:227493	2584453	1	True				
ANR	2584717	ParameterType	const byte *		2584453	0					
ANR	2584718	Identifier	in		2584453	1					
ANR	2584719	Parameter	int nbytes	6368:33:227495:227504	2584453	2	True				
ANR	2584720	ParameterType	int		2584453	0					
ANR	2584721	Identifier	nbytes		2584453	1					
ANR	2584722	CFGEntryNode	ENTRY		2584453		True				
ANR	2584723	CFGExitNode	EXIT		2584453		True				
ANR	2584724	Symbol	* out ++		2584453						
ANR	2584725	Symbol	NULL		2584453						
ANR	2584726	Symbol	* crun		2584453						
ANR	2584727	Symbol	in		2584453						
ANR	2584728	Symbol	* cdata		2584453						
ANR	2584729	Symbol	crun		2584453						
ANR	2584730	Symbol	* in		2584453						
ANR	2584731	Symbol	run		2584453						
ANR	2584732	Symbol	used		2584453						
ANR	2584733	Symbol	out		2584453						
ANR	2584734	Symbol	nbytes		2584453						
ANR	2584735	Symbol	cdata		2584453						
ANR	2584736	Function	upd_open_wrtrtl	6429:0:229155:249759							
ANR	2584737	FunctionDef	upd_open_wrtrtl (upd_device * udev)		2584736	0					
ANR	2584738	CompoundStatement		6431:0:229200:249759	2584736	0					
ANR	2584739	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	6432:3:229205:229238	2584736	0	True				
ANR	2584740	IdentifierDecl	upd = udev -> upd		2584736	0					
ANR	2584741	IdentifierDeclType	const upd_p		2584736	0					
ANR	2584742	Identifier	upd		2584736	1					
ANR	2584743	AssignmentExpression	upd = udev -> upd		2584736	2		=			
ANR	2584744	Identifier	upd		2584736	0					
ANR	2584745	PtrMemberAccess	udev -> upd		2584736	1					
ANR	2584746	Identifier	udev		2584736	0					
ANR	2584747	Identifier	upd		2584736	1					
ANR	2584748	IdentifierDeclStatement	int error = 0 ;	6433:3:229243:229269	2584736	1	True				
ANR	2584749	IdentifierDecl	error = 0		2584736	0					
ANR	2584750	IdentifierDeclType	int		2584736	0					
ANR	2584751	Identifier	error		2584736	1					
ANR	2584752	AssignmentExpression	error = 0		2584736	2		=			
ANR	2584753	Identifier	error		2584736	0					
ANR	2584754	PrimaryExpression	0		2584736	1					
ANR	2584755	IfStatement	if ( 0 < upd -> strings [ S_BEGIN ] . size )		2584736	2					
ANR	2584756	Condition	0 < upd -> strings [ S_BEGIN ] . size	6437:6:229310:229339	2584736	0	True				
ANR	2584757	RelationalExpression	0 < upd -> strings [ S_BEGIN ] . size		2584736	0		<			
ANR	2584758	PrimaryExpression	0		2584736	0					
ANR	2584759	MemberAccess	upd -> strings [ S_BEGIN ] . size		2584736	1					
ANR	2584760	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2584761	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2584762	Identifier	upd		2584736	0					
ANR	2584763	Identifier	strings		2584736	1					
ANR	2584764	Identifier	S_BEGIN		2584736	1					
ANR	2584765	Identifier	size		2584736	1					
ANR	2584766	CompoundStatement		12:5:224:237	2584736	1					
ANR	2584767	IdentifierDeclStatement	"int i , j , state ;"	6439:5:229368:229383	2584736	0	True				
ANR	2584768	IdentifierDecl	i		2584736	0					
ANR	2584769	IdentifierDeclType	int		2584736	0					
ANR	2584770	Identifier	i		2584736	1					
ANR	2584771	IdentifierDecl	j		2584736	1					
ANR	2584772	IdentifierDeclType	int		2584736	0					
ANR	2584773	Identifier	j		2584736	1					
ANR	2584774	IdentifierDecl	state		2584736	2					
ANR	2584775	IdentifierDeclType	int		2584736	0					
ANR	2584776	Identifier	state		2584736	1					
ANR	2584777	IdentifierDeclStatement	char cv [ 24 ] ;	6440:5:229390:229402	2584736	1	True				
ANR	2584778	IdentifierDecl	cv [ 24 ]		2584736	0					
ANR	2584779	IdentifierDeclType	char [ 24 ]		2584736	0					
ANR	2584780	Identifier	cv		2584736	1					
ANR	2584781	PrimaryExpression	24		2584736	2					
ANR	2584782	IdentifierDeclStatement	byte * bp ;	6441:5:229409:229418	2584736	2	True				
ANR	2584783	IdentifierDecl	* bp		2584736	0					
ANR	2584784	IdentifierDeclType	byte *		2584736	0					
ANR	2584785	Identifier	bp		2584736	1					
ANR	2584786	IdentifierDeclStatement	"uint ncv , nbp ;"	6442:5:229425:229438	2584736	3	True				
ANR	2584787	IdentifierDecl	ncv		2584736	0					
ANR	2584788	IdentifierDeclType	uint		2584736	0					
ANR	2584789	Identifier	ncv		2584736	1					
ANR	2584790	IdentifierDecl	nbp		2584736	1					
ANR	2584791	IdentifierDeclType	uint		2584736	0					
ANR	2584792	Identifier	nbp		2584736	1					
ANR	2584793	ExpressionStatement	j = - 1	6444:5:229446:229456	2584736	4	True				
ANR	2584794	AssignmentExpression	j = - 1		2584736	0		=			
ANR	2584795	Identifier	j		2584736	0					
ANR	2584796	UnaryOperationExpression	- 1		2584736	1					
ANR	2584797	UnaryOperator	-		2584736	0					
ANR	2584798	PrimaryExpression	1		2584736	1					
ANR	2584799	ExpressionStatement	state = 0	6445:5:229463:229472	2584736	5	True				
ANR	2584800	AssignmentExpression	state = 0		2584736	0		=			
ANR	2584801	Identifier	state		2584736	0					
ANR	2584802	PrimaryExpression	0		2584736	1					
ANR	2584803	ForStatement	for ( i = 0 ; i < upd -> strings [ S_BEGIN ] . size ; ++ i )		2584736	6					
ANR	2584804	ForInit	i = 0 ;	6446:9:229483:229488	2584736	0	True				
ANR	2584805	AssignmentExpression	i = 0		2584736	0		=			
ANR	2584806	Identifier	i		2584736	0					
ANR	2584807	PrimaryExpression	0		2584736	1					
ANR	2584808	Condition	i < upd -> strings [ S_BEGIN ] . size	6446:16:229490:229519	2584736	1	True				
ANR	2584809	RelationalExpression	i < upd -> strings [ S_BEGIN ] . size		2584736	0		<			
ANR	2584810	Identifier	i		2584736	0					
ANR	2584811	MemberAccess	upd -> strings [ S_BEGIN ] . size		2584736	1					
ANR	2584812	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2584813	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2584814	Identifier	upd		2584736	0					
ANR	2584815	Identifier	strings		2584736	1					
ANR	2584816	Identifier	S_BEGIN		2584736	1					
ANR	2584817	Identifier	size		2584736	1					
ANR	2584818	UnaryExpression	++ i	6446:48:229522:229524	2584736	2	True				
ANR	2584819	IncDec	++		2584736	0					
ANR	2584820	Identifier	i		2584736	1					
ANR	2584821	CompoundStatement		17:7:335:378	2584736	3					
ANR	2584822	IdentifierDeclStatement	const int c = upd -> strings [ S_BEGIN ] . data [ i ] ;	6447:7:229536:229579	2584736	0	True				
ANR	2584823	IdentifierDecl	c = upd -> strings [ S_BEGIN ] . data [ i ]		2584736	0					
ANR	2584824	IdentifierDeclType	const int		2584736	0					
ANR	2584825	Identifier	c		2584736	1					
ANR	2584826	AssignmentExpression	c = upd -> strings [ S_BEGIN ] . data [ i ]		2584736	2		=			
ANR	2584827	Identifier	c		2584736	0					
ANR	2584828	ArrayIndexing	upd -> strings [ S_BEGIN ] . data [ i ]		2584736	1					
ANR	2584829	MemberAccess	upd -> strings [ S_BEGIN ] . data		2584736	0					
ANR	2584830	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2584831	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2584832	Identifier	upd		2584736	0					
ANR	2584833	Identifier	strings		2584736	1					
ANR	2584834	Identifier	S_BEGIN		2584736	1					
ANR	2584835	Identifier	data		2584736	1					
ANR	2584836	Identifier	i		2584736	1					
ANR	2584837	SwitchStatement	switch ( state )		2584736	1					
ANR	2584838	Condition	state	6449:14:229596:229600	2584736	0	True				
ANR	2584839	Identifier	state		2584736	0					
ANR	2584840	CompoundStatement		19:21:402:402	2584736	1					
ANR	2584841	Label	case 0 :	6451:9:229640:229647	2584736	0	True				
ANR	2584842	IfStatement	if ( c == 0x1b )		2584736	1					
ANR	2584843	Condition	c == 0x1b	6452:22:229671:229679	2584736	0	True				
ANR	2584844	EqualityExpression	c == 0x1b		2584736	0		==			
ANR	2584845	Identifier	c		2584736	0					
ANR	2584846	PrimaryExpression	0x1b		2584736	1					
ANR	2584847	ExpressionStatement	state = 1	6452:33:229682:229692	2584736	1	True				
ANR	2584848	AssignmentExpression	state = 1		2584736	0		=			
ANR	2584849	Identifier	state		2584736	0					
ANR	2584850	PrimaryExpression	1		2584736	1					
ANR	2584851	BreakStatement	break ;	6453:9:229713:229718	2584736	2	True				
ANR	2584852	Label	case 1 :	6456:9:229755:229762	2584736	3	True				
ANR	2584853	IfStatement	if ( c == 0x2a )		2584736	4					
ANR	2584854	Condition	c == 0x2a	6457:22:229786:229794	2584736	0	True				
ANR	2584855	EqualityExpression	c == 0x2a		2584736	0		==			
ANR	2584856	Identifier	c		2584736	0					
ANR	2584857	PrimaryExpression	0x2a		2584736	1					
ANR	2584858	ExpressionStatement	state = 2	6457:33:229797:229807	2584736	1	True				
ANR	2584859	AssignmentExpression	state = 2		2584736	0		=			
ANR	2584860	Identifier	state		2584736	0					
ANR	2584861	PrimaryExpression	2		2584736	1					
ANR	2584862	ElseStatement	else		2584736	0					
ANR	2584863	IfStatement	if ( c == 0x25 )		2584736	0					
ANR	2584864	Condition	c == 0x25	6458:22:229843:229851	2584736	0	True				
ANR	2584865	EqualityExpression	c == 0x25		2584736	0		==			
ANR	2584866	Identifier	c		2584736	0					
ANR	2584867	PrimaryExpression	0x25		2584736	1					
ANR	2584868	ExpressionStatement	state = 5	6458:33:229854:229864	2584736	1	True				
ANR	2584869	AssignmentExpression	state = 5		2584736	0		=			
ANR	2584870	Identifier	state		2584736	0					
ANR	2584871	PrimaryExpression	5		2584736	1					
ANR	2584872	ElseStatement	else		2584736	0					
ANR	2584873	ExpressionStatement	state = 0	6459:33:229911:229921	2584736	0	True				
ANR	2584874	AssignmentExpression	state = 0		2584736	0		=			
ANR	2584875	Identifier	state		2584736	0					
ANR	2584876	PrimaryExpression	0		2584736	1					
ANR	2584877	BreakStatement	break ;	6460:9:229932:229937	2584736	5	True				
ANR	2584878	Label	case 2 :	6463:9:229971:229978	2584736	6	True				
ANR	2584879	ExpressionStatement	j = i	6464:11:229991:229996	2584736	7	True				
ANR	2584880	AssignmentExpression	j = i		2584736	0		=			
ANR	2584881	Identifier	j		2584736	0					
ANR	2584882	Identifier	i		2584736	1					
ANR	2584883	IfStatement	if ( c == 0x72 )		2584736	8					
ANR	2584884	Condition	c == 0x72	6465:22:230074:230082	2584736	0	True				
ANR	2584885	EqualityExpression	c == 0x72		2584736	0		==			
ANR	2584886	Identifier	c		2584736	0					
ANR	2584887	PrimaryExpression	0x72		2584736	1					
ANR	2584888	ExpressionStatement	state = 3	6465:33:230085:230095	2584736	1	True				
ANR	2584889	AssignmentExpression	state = 3		2584736	0		=			
ANR	2584890	Identifier	state		2584736	0					
ANR	2584891	PrimaryExpression	3		2584736	1					
ANR	2584892	ElseStatement	else		2584736	0					
ANR	2584893	IfStatement	if ( c == 0x74 )		2584736	0					
ANR	2584894	Condition	c == 0x74	6466:22:230133:230141	2584736	0	True				
ANR	2584895	EqualityExpression	c == 0x74		2584736	0		==			
ANR	2584896	Identifier	c		2584736	0					
ANR	2584897	PrimaryExpression	0x74		2584736	1					
ANR	2584898	ExpressionStatement	state = 4	6466:33:230144:230154	2584736	1	True				
ANR	2584899	AssignmentExpression	state = 4		2584736	0		=			
ANR	2584900	Identifier	state		2584736	0					
ANR	2584901	PrimaryExpression	4		2584736	1					
ANR	2584902	ElseStatement	else		2584736	0					
ANR	2584903	ExpressionStatement	state = 0	6467:33:230203:230213	2584736	0	True				
ANR	2584904	AssignmentExpression	state = 0		2584736	0		=			
ANR	2584905	Identifier	state		2584736	0					
ANR	2584906	PrimaryExpression	0		2584736	1					
ANR	2584907	BreakStatement	break ;	6468:9:230224:230229	2584736	9	True				
ANR	2584908	Label	case 3 :	6472:9:230322:230329	2584736	10	True				
ANR	2584909	IfStatement	if ( ( B_PAGEWIDTH & upd -> flags ) && ( ( c == 0x73 ) || ( c == 0x53 ) ) )		2584736	11					
ANR	2584910	Condition	( B_PAGEWIDTH & upd -> flags ) && ( ( c == 0x73 ) || ( c == 0x53 ) )	6474:21:230353:230432	2584736	0	True				
ANR	2584911	AndExpression	( B_PAGEWIDTH & upd -> flags ) && ( ( c == 0x73 ) || ( c == 0x53 ) )		2584736	0		&&			
ANR	2584912	BitAndExpression	B_PAGEWIDTH & upd -> flags		2584736	0		&			
ANR	2584913	Identifier	B_PAGEWIDTH		2584736	0					
ANR	2584914	PtrMemberAccess	upd -> flags		2584736	1					
ANR	2584915	Identifier	upd		2584736	0					
ANR	2584916	Identifier	flags		2584736	1					
ANR	2584917	OrExpression	( c == 0x73 ) || ( c == 0x53 )		2584736	1		||			
ANR	2584918	EqualityExpression	c == 0x73		2584736	0		==			
ANR	2584919	Identifier	c		2584736	0					
ANR	2584920	PrimaryExpression	0x73		2584736	1					
ANR	2584921	EqualityExpression	c == 0x53		2584736	1		==			
ANR	2584922	Identifier	c		2584736	0					
ANR	2584923	PrimaryExpression	0x53		2584736	1					
ANR	2584924	CompoundStatement		45:53:1236:1236	2584736	1					
ANR	2584925	ExpressionStatement	"gs_sprintf ( cv , ""%d"" , upd -> pwidth )"	6477:13:230471:230502	2584736	0	True				
ANR	2584926	CallExpression	"gs_sprintf ( cv , ""%d"" , upd -> pwidth )"		2584736	0					
ANR	2584927	Callee	gs_sprintf		2584736	0					
ANR	2584928	Identifier	gs_sprintf		2584736	0					
ANR	2584929	ArgumentList	cv		2584736	1					
ANR	2584930	Argument	cv		2584736	0					
ANR	2584931	Identifier	cv		2584736	0					
ANR	2584932	Argument	"""%d"""		2584736	1					
ANR	2584933	PrimaryExpression	"""%d"""		2584736	0					
ANR	2584934	Argument	upd -> pwidth		2584736	2					
ANR	2584935	PtrMemberAccess	upd -> pwidth		2584736	0					
ANR	2584936	Identifier	upd		2584736	0					
ANR	2584937	Identifier	pwidth		2584736	1					
ANR	2584938	ExpressionStatement	ncv = strlen ( cv )	6478:13:230517:230533	2584736	1	True				
ANR	2584939	AssignmentExpression	ncv = strlen ( cv )		2584736	0		=			
ANR	2584940	Identifier	ncv		2584736	0					
ANR	2584941	CallExpression	strlen ( cv )		2584736	1					
ANR	2584942	Callee	strlen		2584736	0					
ANR	2584943	Identifier	strlen		2584736	0					
ANR	2584944	ArgumentList	cv		2584736	1					
ANR	2584945	Argument	cv		2584736	0					
ANR	2584946	Identifier	cv		2584736	0					
ANR	2584947	ExpressionStatement	nbp = ( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )	6480:13:230549:230599	2584736	2	True				
ANR	2584948	AssignmentExpression	nbp = ( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )		2584736	0		=			
ANR	2584949	Identifier	nbp		2584736	0					
ANR	2584950	AdditiveExpression	( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )		2584736	1		+			
ANR	2584951	AdditiveExpression	j + 1		2584736	0		+			
ANR	2584952	Identifier	j		2584736	0					
ANR	2584953	PrimaryExpression	1		2584736	1					
ANR	2584954	AdditiveExpression	ncv + ( upd -> strings [ S_BEGIN ] . size - i )		2584736	1		+			
ANR	2584955	Identifier	ncv		2584736	0					
ANR	2584956	AdditiveExpression	upd -> strings [ S_BEGIN ] . size - i		2584736	1		-			
ANR	2584957	MemberAccess	upd -> strings [ S_BEGIN ] . size		2584736	0					
ANR	2584958	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2584959	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2584960	Identifier	upd		2584736	0					
ANR	2584961	Identifier	strings		2584736	1					
ANR	2584962	Identifier	S_BEGIN		2584736	1					
ANR	2584963	Identifier	size		2584736	1					
ANR	2584964	Identifier	i		2584736	1					
ANR	2584965	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , bp , nbp )"	6481:13:230614:230652	2584736	3	True				
ANR	2584966	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , bp , nbp )"		2584736	0					
ANR	2584967	Callee	UPD_MM_GET_ARRAY		2584736	0					
ANR	2584968	Identifier	UPD_MM_GET_ARRAY		2584736	0					
ANR	2584969	ArgumentList	udev -> memory		2584736	1					
ANR	2584970	Argument	udev -> memory		2584736	0					
ANR	2584971	PtrMemberAccess	udev -> memory		2584736	0					
ANR	2584972	Identifier	udev		2584736	0					
ANR	2584973	Identifier	memory		2584736	1					
ANR	2584974	Argument	bp		2584736	1					
ANR	2584975	Identifier	bp		2584736	0					
ANR	2584976	Argument	nbp		2584736	2					
ANR	2584977	Identifier	nbp		2584736	0					
ANR	2584978	IfStatement	if ( 0 <= j )		2584736	4					
ANR	2584979	Condition	0 <= j	6483:16:230671:230676	2584736	0	True				
ANR	2584980	RelationalExpression	0 <= j		2584736	0		<=			
ANR	2584981	PrimaryExpression	0		2584736	0					
ANR	2584982	Identifier	j		2584736	1					
ANR	2584983	ExpressionStatement	"memcpy ( bp , upd -> strings [ S_BEGIN ] . data , j + 1 )"	6483:24:230679:230720	2584736	1	True				
ANR	2584984	CallExpression	"memcpy ( bp , upd -> strings [ S_BEGIN ] . data , j + 1 )"		2584736	0					
ANR	2584985	Callee	memcpy		2584736	0					
ANR	2584986	Identifier	memcpy		2584736	0					
ANR	2584987	ArgumentList	bp		2584736	1					
ANR	2584988	Argument	bp		2584736	0					
ANR	2584989	Identifier	bp		2584736	0					
ANR	2584990	Argument	upd -> strings [ S_BEGIN ] . data		2584736	1					
ANR	2584991	MemberAccess	upd -> strings [ S_BEGIN ] . data		2584736	0					
ANR	2584992	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2584993	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2584994	Identifier	upd		2584736	0					
ANR	2584995	Identifier	strings		2584736	1					
ANR	2584996	Identifier	S_BEGIN		2584736	1					
ANR	2584997	Identifier	data		2584736	1					
ANR	2584998	Argument	j + 1		2584736	2					
ANR	2584999	AdditiveExpression	j + 1		2584736	0		+			
ANR	2585000	Identifier	j		2584736	0					
ANR	2585001	PrimaryExpression	1		2584736	1					
ANR	2585002	ExpressionStatement	"memcpy ( bp + j + 1 , cv , ncv )"	6484:13:230735:230760	2584736	5	True				
ANR	2585003	CallExpression	"memcpy ( bp + j + 1 , cv , ncv )"		2584736	0					
ANR	2585004	Callee	memcpy		2584736	0					
ANR	2585005	Identifier	memcpy		2584736	0					
ANR	2585006	ArgumentList	bp + j + 1		2584736	1					
ANR	2585007	Argument	bp + j + 1		2584736	0					
ANR	2585008	AdditiveExpression	bp + j + 1		2584736	0		+			
ANR	2585009	Identifier	bp		2584736	0					
ANR	2585010	AdditiveExpression	j + 1		2584736	1		+			
ANR	2585011	Identifier	j		2584736	0					
ANR	2585012	PrimaryExpression	1		2584736	1					
ANR	2585013	Argument	cv		2584736	1					
ANR	2585014	Identifier	cv		2584736	0					
ANR	2585015	Argument	ncv		2584736	2					
ANR	2585016	Identifier	ncv		2584736	0					
ANR	2585017	ExpressionStatement	"memcpy ( bp + j + 1 + ncv , upd -> strings [ S_BEGIN ] . data + i , upd -> strings [ S_BEGIN ] . size - i )"	6485:13:230775:230883	2584736	6	True				
ANR	2585018	CallExpression	"memcpy ( bp + j + 1 + ncv , upd -> strings [ S_BEGIN ] . data + i , upd -> strings [ S_BEGIN ] . size - i )"		2584736	0					
ANR	2585019	Callee	memcpy		2584736	0					
ANR	2585020	Identifier	memcpy		2584736	0					
ANR	2585021	ArgumentList	bp + j + 1 + ncv		2584736	1					
ANR	2585022	Argument	bp + j + 1 + ncv		2584736	0					
ANR	2585023	AdditiveExpression	bp + j + 1 + ncv		2584736	0		+			
ANR	2585024	Identifier	bp		2584736	0					
ANR	2585025	AdditiveExpression	j + 1 + ncv		2584736	1		+			
ANR	2585026	Identifier	j		2584736	0					
ANR	2585027	AdditiveExpression	1 + ncv		2584736	1		+			
ANR	2585028	PrimaryExpression	1		2584736	0					
ANR	2585029	Identifier	ncv		2584736	1					
ANR	2585030	Argument	upd -> strings [ S_BEGIN ] . data + i		2584736	1					
ANR	2585031	AdditiveExpression	upd -> strings [ S_BEGIN ] . data + i		2584736	0		+			
ANR	2585032	MemberAccess	upd -> strings [ S_BEGIN ] . data		2584736	0					
ANR	2585033	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2585034	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2585035	Identifier	upd		2584736	0					
ANR	2585036	Identifier	strings		2584736	1					
ANR	2585037	Identifier	S_BEGIN		2584736	1					
ANR	2585038	Identifier	data		2584736	1					
ANR	2585039	Identifier	i		2584736	1					
ANR	2585040	Argument	upd -> strings [ S_BEGIN ] . size - i		2584736	2					
ANR	2585041	AdditiveExpression	upd -> strings [ S_BEGIN ] . size - i		2584736	0		-			
ANR	2585042	MemberAccess	upd -> strings [ S_BEGIN ] . size		2584736	0					
ANR	2585043	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2585044	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2585045	Identifier	upd		2584736	0					
ANR	2585046	Identifier	strings		2584736	1					
ANR	2585047	Identifier	S_BEGIN		2584736	1					
ANR	2585048	Identifier	size		2584736	1					
ANR	2585049	Identifier	i		2584736	1					
ANR	2585050	ExpressionStatement	i = j + 1 + ncv	6487:13:230898:230909	2584736	7	True				
ANR	2585051	AssignmentExpression	i = j + 1 + ncv		2584736	0		=			
ANR	2585052	Identifier	i		2584736	0					
ANR	2585053	AdditiveExpression	j + 1 + ncv		2584736	1		+			
ANR	2585054	Identifier	j		2584736	0					
ANR	2585055	AdditiveExpression	1 + ncv		2584736	1		+			
ANR	2585056	PrimaryExpression	1		2584736	0					
ANR	2585057	Identifier	ncv		2584736	1					
ANR	2585058	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_BEGIN ] )"	6488:13:230924:230977	2584736	8	True				
ANR	2585059	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_BEGIN ] )"		2584736	0					
ANR	2585060	Callee	UPD_MM_DEL_PARAM		2584736	0					
ANR	2585061	Identifier	UPD_MM_DEL_PARAM		2584736	0					
ANR	2585062	ArgumentList	udev -> memory		2584736	1					
ANR	2585063	Argument	udev -> memory		2584736	0					
ANR	2585064	PtrMemberAccess	udev -> memory		2584736	0					
ANR	2585065	Identifier	udev		2584736	0					
ANR	2585066	Identifier	memory		2584736	1					
ANR	2585067	Argument	upd -> strings [ S_BEGIN ]		2584736	1					
ANR	2585068	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2585069	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2585070	Identifier	upd		2584736	0					
ANR	2585071	Identifier	strings		2584736	1					
ANR	2585072	Identifier	S_BEGIN		2584736	1					
ANR	2585073	ExpressionStatement	upd -> strings [ S_BEGIN ] . data = bp	6489:13:230992:231023	2584736	9	True				
ANR	2585074	AssignmentExpression	upd -> strings [ S_BEGIN ] . data = bp		2584736	0		=			
ANR	2585075	MemberAccess	upd -> strings [ S_BEGIN ] . data		2584736	0					
ANR	2585076	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2585077	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2585078	Identifier	upd		2584736	0					
ANR	2585079	Identifier	strings		2584736	1					
ANR	2585080	Identifier	S_BEGIN		2584736	1					
ANR	2585081	Identifier	data		2584736	1					
ANR	2585082	Identifier	bp		2584736	1					
ANR	2585083	ExpressionStatement	upd -> strings [ S_BEGIN ] . size = nbp	6490:13:231038:231070	2584736	10	True				
ANR	2585084	AssignmentExpression	upd -> strings [ S_BEGIN ] . size = nbp		2584736	0		=			
ANR	2585085	MemberAccess	upd -> strings [ S_BEGIN ] . size		2584736	0					
ANR	2585086	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2585087	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2585088	Identifier	upd		2584736	0					
ANR	2585089	Identifier	strings		2584736	1					
ANR	2585090	Identifier	S_BEGIN		2584736	1					
ANR	2585091	Identifier	size		2584736	1					
ANR	2585092	Identifier	nbp		2584736	1					
ANR	2585093	ElseStatement	else		2584736	0					
ANR	2585094	IfStatement	if ( ( B_PAGELENGTH & upd -> flags ) && ( ( c == 0x74 ) || ( c == 0x54 ) ) )		2584736	0					
ANR	2585095	Condition	( B_PAGELENGTH & upd -> flags ) && ( ( c == 0x74 ) || ( c == 0x54 ) )	6492:21:231094:231173	2584736	0	True				
ANR	2585096	AndExpression	( B_PAGELENGTH & upd -> flags ) && ( ( c == 0x74 ) || ( c == 0x54 ) )		2584736	0		&&			
ANR	2585097	BitAndExpression	B_PAGELENGTH & upd -> flags		2584736	0		&			
ANR	2585098	Identifier	B_PAGELENGTH		2584736	0					
ANR	2585099	PtrMemberAccess	upd -> flags		2584736	1					
ANR	2585100	Identifier	upd		2584736	0					
ANR	2585101	Identifier	flags		2584736	1					
ANR	2585102	OrExpression	( c == 0x74 ) || ( c == 0x54 )		2584736	1		||			
ANR	2585103	EqualityExpression	c == 0x74		2584736	0		==			
ANR	2585104	Identifier	c		2584736	0					
ANR	2585105	PrimaryExpression	0x74		2584736	1					
ANR	2585106	EqualityExpression	c == 0x54		2584736	1		==			
ANR	2585107	Identifier	c		2584736	0					
ANR	2585108	PrimaryExpression	0x54		2584736	1					
ANR	2585109	CompoundStatement		63:53:1977:1977	2584736	1					
ANR	2585110	ExpressionStatement	"gs_sprintf ( cv , ""%d"" , upd -> pheight )"	6495:13:231212:231244	2584736	0	True				
ANR	2585111	CallExpression	"gs_sprintf ( cv , ""%d"" , upd -> pheight )"		2584736	0					
ANR	2585112	Callee	gs_sprintf		2584736	0					
ANR	2585113	Identifier	gs_sprintf		2584736	0					
ANR	2585114	ArgumentList	cv		2584736	1					
ANR	2585115	Argument	cv		2584736	0					
ANR	2585116	Identifier	cv		2584736	0					
ANR	2585117	Argument	"""%d"""		2584736	1					
ANR	2585118	PrimaryExpression	"""%d"""		2584736	0					
ANR	2585119	Argument	upd -> pheight		2584736	2					
ANR	2585120	PtrMemberAccess	upd -> pheight		2584736	0					
ANR	2585121	Identifier	upd		2584736	0					
ANR	2585122	Identifier	pheight		2584736	1					
ANR	2585123	ExpressionStatement	ncv = strlen ( cv )	6496:13:231259:231275	2584736	1	True				
ANR	2585124	AssignmentExpression	ncv = strlen ( cv )		2584736	0		=			
ANR	2585125	Identifier	ncv		2584736	0					
ANR	2585126	CallExpression	strlen ( cv )		2584736	1					
ANR	2585127	Callee	strlen		2584736	0					
ANR	2585128	Identifier	strlen		2584736	0					
ANR	2585129	ArgumentList	cv		2584736	1					
ANR	2585130	Argument	cv		2584736	0					
ANR	2585131	Identifier	cv		2584736	0					
ANR	2585132	ExpressionStatement	nbp = ( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )	6498:13:231291:231341	2584736	2	True				
ANR	2585133	AssignmentExpression	nbp = ( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )		2584736	0		=			
ANR	2585134	Identifier	nbp		2584736	0					
ANR	2585135	AdditiveExpression	( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )		2584736	1		+			
ANR	2585136	AdditiveExpression	j + 1		2584736	0		+			
ANR	2585137	Identifier	j		2584736	0					
ANR	2585138	PrimaryExpression	1		2584736	1					
ANR	2585139	AdditiveExpression	ncv + ( upd -> strings [ S_BEGIN ] . size - i )		2584736	1		+			
ANR	2585140	Identifier	ncv		2584736	0					
ANR	2585141	AdditiveExpression	upd -> strings [ S_BEGIN ] . size - i		2584736	1		-			
ANR	2585142	MemberAccess	upd -> strings [ S_BEGIN ] . size		2584736	0					
ANR	2585143	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2585144	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2585145	Identifier	upd		2584736	0					
ANR	2585146	Identifier	strings		2584736	1					
ANR	2585147	Identifier	S_BEGIN		2584736	1					
ANR	2585148	Identifier	size		2584736	1					
ANR	2585149	Identifier	i		2584736	1					
ANR	2585150	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , bp , nbp )"	6499:13:231356:231394	2584736	3	True				
ANR	2585151	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , bp , nbp )"		2584736	0					
ANR	2585152	Callee	UPD_MM_GET_ARRAY		2584736	0					
ANR	2585153	Identifier	UPD_MM_GET_ARRAY		2584736	0					
ANR	2585154	ArgumentList	udev -> memory		2584736	1					
ANR	2585155	Argument	udev -> memory		2584736	0					
ANR	2585156	PtrMemberAccess	udev -> memory		2584736	0					
ANR	2585157	Identifier	udev		2584736	0					
ANR	2585158	Identifier	memory		2584736	1					
ANR	2585159	Argument	bp		2584736	1					
ANR	2585160	Identifier	bp		2584736	0					
ANR	2585161	Argument	nbp		2584736	2					
ANR	2585162	Identifier	nbp		2584736	0					
ANR	2585163	IfStatement	if ( 0 <= j )		2584736	4					
ANR	2585164	Condition	0 <= j	6501:16:231413:231418	2584736	0	True				
ANR	2585165	RelationalExpression	0 <= j		2584736	0		<=			
ANR	2585166	PrimaryExpression	0		2584736	0					
ANR	2585167	Identifier	j		2584736	1					
ANR	2585168	ExpressionStatement	"memcpy ( bp , upd -> strings [ S_BEGIN ] . data , j + 1 )"	6501:24:231421:231462	2584736	1	True				
ANR	2585169	CallExpression	"memcpy ( bp , upd -> strings [ S_BEGIN ] . data , j + 1 )"		2584736	0					
ANR	2585170	Callee	memcpy		2584736	0					
ANR	2585171	Identifier	memcpy		2584736	0					
ANR	2585172	ArgumentList	bp		2584736	1					
ANR	2585173	Argument	bp		2584736	0					
ANR	2585174	Identifier	bp		2584736	0					
ANR	2585175	Argument	upd -> strings [ S_BEGIN ] . data		2584736	1					
ANR	2585176	MemberAccess	upd -> strings [ S_BEGIN ] . data		2584736	0					
ANR	2585177	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2585178	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2585179	Identifier	upd		2584736	0					
ANR	2585180	Identifier	strings		2584736	1					
ANR	2585181	Identifier	S_BEGIN		2584736	1					
ANR	2585182	Identifier	data		2584736	1					
ANR	2585183	Argument	j + 1		2584736	2					
ANR	2585184	AdditiveExpression	j + 1		2584736	0		+			
ANR	2585185	Identifier	j		2584736	0					
ANR	2585186	PrimaryExpression	1		2584736	1					
ANR	2585187	ExpressionStatement	"memcpy ( bp + j + 1 , cv , ncv )"	6502:13:231477:231502	2584736	5	True				
ANR	2585188	CallExpression	"memcpy ( bp + j + 1 , cv , ncv )"		2584736	0					
ANR	2585189	Callee	memcpy		2584736	0					
ANR	2585190	Identifier	memcpy		2584736	0					
ANR	2585191	ArgumentList	bp + j + 1		2584736	1					
ANR	2585192	Argument	bp + j + 1		2584736	0					
ANR	2585193	AdditiveExpression	bp + j + 1		2584736	0		+			
ANR	2585194	Identifier	bp		2584736	0					
ANR	2585195	AdditiveExpression	j + 1		2584736	1		+			
ANR	2585196	Identifier	j		2584736	0					
ANR	2585197	PrimaryExpression	1		2584736	1					
ANR	2585198	Argument	cv		2584736	1					
ANR	2585199	Identifier	cv		2584736	0					
ANR	2585200	Argument	ncv		2584736	2					
ANR	2585201	Identifier	ncv		2584736	0					
ANR	2585202	ExpressionStatement	"memcpy ( bp + j + 1 + ncv , upd -> strings [ S_BEGIN ] . data + i , upd -> strings [ S_BEGIN ] . size - i )"	6503:13:231517:231625	2584736	6	True				
ANR	2585203	CallExpression	"memcpy ( bp + j + 1 + ncv , upd -> strings [ S_BEGIN ] . data + i , upd -> strings [ S_BEGIN ] . size - i )"		2584736	0					
ANR	2585204	Callee	memcpy		2584736	0					
ANR	2585205	Identifier	memcpy		2584736	0					
ANR	2585206	ArgumentList	bp + j + 1 + ncv		2584736	1					
ANR	2585207	Argument	bp + j + 1 + ncv		2584736	0					
ANR	2585208	AdditiveExpression	bp + j + 1 + ncv		2584736	0		+			
ANR	2585209	Identifier	bp		2584736	0					
ANR	2585210	AdditiveExpression	j + 1 + ncv		2584736	1		+			
ANR	2585211	Identifier	j		2584736	0					
ANR	2585212	AdditiveExpression	1 + ncv		2584736	1		+			
ANR	2585213	PrimaryExpression	1		2584736	0					
ANR	2585214	Identifier	ncv		2584736	1					
ANR	2585215	Argument	upd -> strings [ S_BEGIN ] . data + i		2584736	1					
ANR	2585216	AdditiveExpression	upd -> strings [ S_BEGIN ] . data + i		2584736	0		+			
ANR	2585217	MemberAccess	upd -> strings [ S_BEGIN ] . data		2584736	0					
ANR	2585218	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2585219	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2585220	Identifier	upd		2584736	0					
ANR	2585221	Identifier	strings		2584736	1					
ANR	2585222	Identifier	S_BEGIN		2584736	1					
ANR	2585223	Identifier	data		2584736	1					
ANR	2585224	Identifier	i		2584736	1					
ANR	2585225	Argument	upd -> strings [ S_BEGIN ] . size - i		2584736	2					
ANR	2585226	AdditiveExpression	upd -> strings [ S_BEGIN ] . size - i		2584736	0		-			
ANR	2585227	MemberAccess	upd -> strings [ S_BEGIN ] . size		2584736	0					
ANR	2585228	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2585229	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2585230	Identifier	upd		2584736	0					
ANR	2585231	Identifier	strings		2584736	1					
ANR	2585232	Identifier	S_BEGIN		2584736	1					
ANR	2585233	Identifier	size		2584736	1					
ANR	2585234	Identifier	i		2584736	1					
ANR	2585235	ExpressionStatement	i = j + 1 + ncv	6505:13:231640:231651	2584736	7	True				
ANR	2585236	AssignmentExpression	i = j + 1 + ncv		2584736	0		=			
ANR	2585237	Identifier	i		2584736	0					
ANR	2585238	AdditiveExpression	j + 1 + ncv		2584736	1		+			
ANR	2585239	Identifier	j		2584736	0					
ANR	2585240	AdditiveExpression	1 + ncv		2584736	1		+			
ANR	2585241	PrimaryExpression	1		2584736	0					
ANR	2585242	Identifier	ncv		2584736	1					
ANR	2585243	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_BEGIN ] )"	6506:13:231666:231719	2584736	8	True				
ANR	2585244	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_BEGIN ] )"		2584736	0					
ANR	2585245	Callee	UPD_MM_DEL_PARAM		2584736	0					
ANR	2585246	Identifier	UPD_MM_DEL_PARAM		2584736	0					
ANR	2585247	ArgumentList	udev -> memory		2584736	1					
ANR	2585248	Argument	udev -> memory		2584736	0					
ANR	2585249	PtrMemberAccess	udev -> memory		2584736	0					
ANR	2585250	Identifier	udev		2584736	0					
ANR	2585251	Identifier	memory		2584736	1					
ANR	2585252	Argument	upd -> strings [ S_BEGIN ]		2584736	1					
ANR	2585253	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2585254	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2585255	Identifier	upd		2584736	0					
ANR	2585256	Identifier	strings		2584736	1					
ANR	2585257	Identifier	S_BEGIN		2584736	1					
ANR	2585258	ExpressionStatement	upd -> strings [ S_BEGIN ] . data = bp	6507:13:231734:231765	2584736	9	True				
ANR	2585259	AssignmentExpression	upd -> strings [ S_BEGIN ] . data = bp		2584736	0		=			
ANR	2585260	MemberAccess	upd -> strings [ S_BEGIN ] . data		2584736	0					
ANR	2585261	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2585262	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2585263	Identifier	upd		2584736	0					
ANR	2585264	Identifier	strings		2584736	1					
ANR	2585265	Identifier	S_BEGIN		2584736	1					
ANR	2585266	Identifier	data		2584736	1					
ANR	2585267	Identifier	bp		2584736	1					
ANR	2585268	ExpressionStatement	upd -> strings [ S_BEGIN ] . size = nbp	6508:13:231780:231812	2584736	10	True				
ANR	2585269	AssignmentExpression	upd -> strings [ S_BEGIN ] . size = nbp		2584736	0		=			
ANR	2585270	MemberAccess	upd -> strings [ S_BEGIN ] . size		2584736	0					
ANR	2585271	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2585272	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2585273	Identifier	upd		2584736	0					
ANR	2585274	Identifier	strings		2584736	1					
ANR	2585275	Identifier	S_BEGIN		2584736	1					
ANR	2585276	Identifier	size		2584736	1					
ANR	2585277	Identifier	nbp		2584736	1					
ANR	2585278	IfStatement	if ( ( 0x40 < c ) && ( c < 0x5b ) )		2584736	12					
ANR	2585279	Condition	( 0x40 < c ) && ( c < 0x5b )	6512:21:231850:231873	2584736	0	True				
ANR	2585280	AndExpression	( 0x40 < c ) && ( c < 0x5b )		2584736	0		&&			
ANR	2585281	RelationalExpression	0x40 < c		2584736	0		<			
ANR	2585282	PrimaryExpression	0x40		2584736	0					
ANR	2585283	Identifier	c		2584736	1					
ANR	2585284	RelationalExpression	c < 0x5b		2584736	1		<			
ANR	2585285	Identifier	c		2584736	0					
ANR	2585286	PrimaryExpression	0x5b		2584736	1					
ANR	2585287	ExpressionStatement	state = 0	6512:48:231877:231886	2584736	1	True				
ANR	2585288	AssignmentExpression	state = 0		2584736	0		=			
ANR	2585289	Identifier	state		2584736	0					
ANR	2585290	PrimaryExpression	0		2584736	1					
ANR	2585291	ElseStatement	else		2584736	0					
ANR	2585292	IfStatement	if ( ! ( ( 0x2f < c ) && ( c < 0x3a ) ) )		2584736	0					
ANR	2585293	Condition	! ( ( 0x2f < c ) && ( c < 0x3a ) )	6513:19:231924:231950	2584736	0	True				
ANR	2585294	UnaryOperationExpression	! ( ( 0x2f < c ) && ( c < 0x3a ) )		2584736	0					
ANR	2585295	UnaryOperator	!		2584736	0					
ANR	2585296	AndExpression	( 0x2f < c ) && ( c < 0x3a )		2584736	1		&&			
ANR	2585297	RelationalExpression	0x2f < c		2584736	0		<			
ANR	2585298	PrimaryExpression	0x2f		2584736	0					
ANR	2585299	Identifier	c		2584736	1					
ANR	2585300	RelationalExpression	c < 0x3a		2584736	1		<			
ANR	2585301	Identifier	c		2584736	0					
ANR	2585302	PrimaryExpression	0x3a		2584736	1					
ANR	2585303	ExpressionStatement	j = i	6513:48:231953:231962	2584736	1	True				
ANR	2585304	AssignmentExpression	j = i		2584736	0		=			
ANR	2585305	Identifier	j		2584736	0					
ANR	2585306	Identifier	i		2584736	1					
ANR	2585307	BreakStatement	break ;	6515:9:231991:231996	2584736	13	True				
ANR	2585308	Label	case 4 :	6519:9:232075:232082	2584736	14	True				
ANR	2585309	IfStatement	if ( ( B_RESOLUTION & upd -> flags ) && ( ( c == 0x72 ) || ( c == 0x52 ) ) )		2584736	15					
ANR	2585310	Condition	( B_RESOLUTION & upd -> flags ) && ( ( c == 0x72 ) || ( c == 0x52 ) )	6521:22:232121:232201	2584736	0	True				
ANR	2585311	AndExpression	( B_RESOLUTION & upd -> flags ) && ( ( c == 0x72 ) || ( c == 0x52 ) )		2584736	0		&&			
ANR	2585312	BitAndExpression	B_RESOLUTION & upd -> flags		2584736	0		&			
ANR	2585313	Identifier	B_RESOLUTION		2584736	0					
ANR	2585314	PtrMemberAccess	upd -> flags		2584736	1					
ANR	2585315	Identifier	upd		2584736	0					
ANR	2585316	Identifier	flags		2584736	1					
ANR	2585317	OrExpression	( c == 0x72 ) || ( c == 0x52 )		2584736	1		||			
ANR	2585318	EqualityExpression	c == 0x72		2584736	0		==			
ANR	2585319	Identifier	c		2584736	0					
ANR	2585320	PrimaryExpression	0x72		2584736	1					
ANR	2585321	EqualityExpression	c == 0x52		2584736	1		==			
ANR	2585322	Identifier	c		2584736	0					
ANR	2585323	PrimaryExpression	0x52		2584736	1					
ANR	2585324	CompoundStatement		92:53:3005:3005	2584736	1					
ANR	2585325	ExpressionStatement	"gs_sprintf ( cv , ""%d"" , ( int ) ( ( udev -> y_pixels_per_inch < udev -> x_pixels_per_inch ? udev -> x_pixels_per_inch : udev -> y_pixels_per_inch ) + 0.5 ) )"	6524:13:232240:232423	2584736	0	True				
ANR	2585326	CallExpression	"gs_sprintf ( cv , ""%d"" , ( int ) ( ( udev -> y_pixels_per_inch < udev -> x_pixels_per_inch ? udev -> x_pixels_per_inch : udev -> y_pixels_per_inch ) + 0.5 ) )"		2584736	0					
ANR	2585327	Callee	gs_sprintf		2584736	0					
ANR	2585328	Identifier	gs_sprintf		2584736	0					
ANR	2585329	ArgumentList	cv		2584736	1					
ANR	2585330	Argument	cv		2584736	0					
ANR	2585331	Identifier	cv		2584736	0					
ANR	2585332	Argument	"""%d"""		2584736	1					
ANR	2585333	PrimaryExpression	"""%d"""		2584736	0					
ANR	2585334	Argument	( int ) ( ( udev -> y_pixels_per_inch < udev -> x_pixels_per_inch ? udev -> x_pixels_per_inch : udev -> y_pixels_per_inch ) + 0.5 )		2584736	2					
ANR	2585335	CastExpression	( int ) ( ( udev -> y_pixels_per_inch < udev -> x_pixels_per_inch ? udev -> x_pixels_per_inch : udev -> y_pixels_per_inch ) + 0.5 )		2584736	0					
ANR	2585336	CastTarget	int		2584736	0					
ANR	2585337	AdditiveExpression	( udev -> y_pixels_per_inch < udev -> x_pixels_per_inch ? udev -> x_pixels_per_inch : udev -> y_pixels_per_inch ) + 0.5		2584736	1		+			
ANR	2585338	ConditionalExpression	udev -> y_pixels_per_inch < udev -> x_pixels_per_inch ? udev -> x_pixels_per_inch : udev -> y_pixels_per_inch		2584736	0					
ANR	2585339	Condition	udev -> y_pixels_per_inch < udev -> x_pixels_per_inch		2584736	0					
ANR	2585340	RelationalExpression	udev -> y_pixels_per_inch < udev -> x_pixels_per_inch		2584736	0		<			
ANR	2585341	PtrMemberAccess	udev -> y_pixels_per_inch		2584736	0					
ANR	2585342	Identifier	udev		2584736	0					
ANR	2585343	Identifier	y_pixels_per_inch		2584736	1					
ANR	2585344	PtrMemberAccess	udev -> x_pixels_per_inch		2584736	1					
ANR	2585345	Identifier	udev		2584736	0					
ANR	2585346	Identifier	x_pixels_per_inch		2584736	1					
ANR	2585347	PtrMemberAccess	udev -> x_pixels_per_inch		2584736	1					
ANR	2585348	Identifier	udev		2584736	0					
ANR	2585349	Identifier	x_pixels_per_inch		2584736	1					
ANR	2585350	PtrMemberAccess	udev -> y_pixels_per_inch		2584736	2					
ANR	2585351	Identifier	udev		2584736	0					
ANR	2585352	Identifier	y_pixels_per_inch		2584736	1					
ANR	2585353	PrimaryExpression	0.5		2584736	1					
ANR	2585354	ExpressionStatement	ncv = strlen ( cv )	6528:13:232438:232454	2584736	1	True				
ANR	2585355	AssignmentExpression	ncv = strlen ( cv )		2584736	0		=			
ANR	2585356	Identifier	ncv		2584736	0					
ANR	2585357	CallExpression	strlen ( cv )		2584736	1					
ANR	2585358	Callee	strlen		2584736	0					
ANR	2585359	Identifier	strlen		2584736	0					
ANR	2585360	ArgumentList	cv		2584736	1					
ANR	2585361	Argument	cv		2584736	0					
ANR	2585362	Identifier	cv		2584736	0					
ANR	2585363	ExpressionStatement	nbp = ( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )	6530:13:232470:232520	2584736	2	True				
ANR	2585364	AssignmentExpression	nbp = ( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )		2584736	0		=			
ANR	2585365	Identifier	nbp		2584736	0					
ANR	2585366	AdditiveExpression	( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )		2584736	1		+			
ANR	2585367	AdditiveExpression	j + 1		2584736	0		+			
ANR	2585368	Identifier	j		2584736	0					
ANR	2585369	PrimaryExpression	1		2584736	1					
ANR	2585370	AdditiveExpression	ncv + ( upd -> strings [ S_BEGIN ] . size - i )		2584736	1		+			
ANR	2585371	Identifier	ncv		2584736	0					
ANR	2585372	AdditiveExpression	upd -> strings [ S_BEGIN ] . size - i		2584736	1		-			
ANR	2585373	MemberAccess	upd -> strings [ S_BEGIN ] . size		2584736	0					
ANR	2585374	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2585375	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2585376	Identifier	upd		2584736	0					
ANR	2585377	Identifier	strings		2584736	1					
ANR	2585378	Identifier	S_BEGIN		2584736	1					
ANR	2585379	Identifier	size		2584736	1					
ANR	2585380	Identifier	i		2584736	1					
ANR	2585381	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , bp , nbp )"	6531:13:232535:232573	2584736	3	True				
ANR	2585382	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , bp , nbp )"		2584736	0					
ANR	2585383	Callee	UPD_MM_GET_ARRAY		2584736	0					
ANR	2585384	Identifier	UPD_MM_GET_ARRAY		2584736	0					
ANR	2585385	ArgumentList	udev -> memory		2584736	1					
ANR	2585386	Argument	udev -> memory		2584736	0					
ANR	2585387	PtrMemberAccess	udev -> memory		2584736	0					
ANR	2585388	Identifier	udev		2584736	0					
ANR	2585389	Identifier	memory		2584736	1					
ANR	2585390	Argument	bp		2584736	1					
ANR	2585391	Identifier	bp		2584736	0					
ANR	2585392	Argument	nbp		2584736	2					
ANR	2585393	Identifier	nbp		2584736	0					
ANR	2585394	IfStatement	if ( 0 <= j )		2584736	4					
ANR	2585395	Condition	0 <= j	6533:16:232592:232597	2584736	0	True				
ANR	2585396	RelationalExpression	0 <= j		2584736	0		<=			
ANR	2585397	PrimaryExpression	0		2584736	0					
ANR	2585398	Identifier	j		2584736	1					
ANR	2585399	ExpressionStatement	"memcpy ( bp , upd -> strings [ S_BEGIN ] . data , j + 1 )"	6533:24:232600:232641	2584736	1	True				
ANR	2585400	CallExpression	"memcpy ( bp , upd -> strings [ S_BEGIN ] . data , j + 1 )"		2584736	0					
ANR	2585401	Callee	memcpy		2584736	0					
ANR	2585402	Identifier	memcpy		2584736	0					
ANR	2585403	ArgumentList	bp		2584736	1					
ANR	2585404	Argument	bp		2584736	0					
ANR	2585405	Identifier	bp		2584736	0					
ANR	2585406	Argument	upd -> strings [ S_BEGIN ] . data		2584736	1					
ANR	2585407	MemberAccess	upd -> strings [ S_BEGIN ] . data		2584736	0					
ANR	2585408	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2585409	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2585410	Identifier	upd		2584736	0					
ANR	2585411	Identifier	strings		2584736	1					
ANR	2585412	Identifier	S_BEGIN		2584736	1					
ANR	2585413	Identifier	data		2584736	1					
ANR	2585414	Argument	j + 1		2584736	2					
ANR	2585415	AdditiveExpression	j + 1		2584736	0		+			
ANR	2585416	Identifier	j		2584736	0					
ANR	2585417	PrimaryExpression	1		2584736	1					
ANR	2585418	ExpressionStatement	"memcpy ( bp + j + 1 , cv , ncv )"	6534:13:232656:232681	2584736	5	True				
ANR	2585419	CallExpression	"memcpy ( bp + j + 1 , cv , ncv )"		2584736	0					
ANR	2585420	Callee	memcpy		2584736	0					
ANR	2585421	Identifier	memcpy		2584736	0					
ANR	2585422	ArgumentList	bp + j + 1		2584736	1					
ANR	2585423	Argument	bp + j + 1		2584736	0					
ANR	2585424	AdditiveExpression	bp + j + 1		2584736	0		+			
ANR	2585425	Identifier	bp		2584736	0					
ANR	2585426	AdditiveExpression	j + 1		2584736	1		+			
ANR	2585427	Identifier	j		2584736	0					
ANR	2585428	PrimaryExpression	1		2584736	1					
ANR	2585429	Argument	cv		2584736	1					
ANR	2585430	Identifier	cv		2584736	0					
ANR	2585431	Argument	ncv		2584736	2					
ANR	2585432	Identifier	ncv		2584736	0					
ANR	2585433	ExpressionStatement	"memcpy ( bp + j + 1 + ncv , upd -> strings [ S_BEGIN ] . data + i , upd -> strings [ S_BEGIN ] . size - i )"	6535:13:232696:232804	2584736	6	True				
ANR	2585434	CallExpression	"memcpy ( bp + j + 1 + ncv , upd -> strings [ S_BEGIN ] . data + i , upd -> strings [ S_BEGIN ] . size - i )"		2584736	0					
ANR	2585435	Callee	memcpy		2584736	0					
ANR	2585436	Identifier	memcpy		2584736	0					
ANR	2585437	ArgumentList	bp + j + 1 + ncv		2584736	1					
ANR	2585438	Argument	bp + j + 1 + ncv		2584736	0					
ANR	2585439	AdditiveExpression	bp + j + 1 + ncv		2584736	0		+			
ANR	2585440	Identifier	bp		2584736	0					
ANR	2585441	AdditiveExpression	j + 1 + ncv		2584736	1		+			
ANR	2585442	Identifier	j		2584736	0					
ANR	2585443	AdditiveExpression	1 + ncv		2584736	1		+			
ANR	2585444	PrimaryExpression	1		2584736	0					
ANR	2585445	Identifier	ncv		2584736	1					
ANR	2585446	Argument	upd -> strings [ S_BEGIN ] . data + i		2584736	1					
ANR	2585447	AdditiveExpression	upd -> strings [ S_BEGIN ] . data + i		2584736	0		+			
ANR	2585448	MemberAccess	upd -> strings [ S_BEGIN ] . data		2584736	0					
ANR	2585449	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2585450	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2585451	Identifier	upd		2584736	0					
ANR	2585452	Identifier	strings		2584736	1					
ANR	2585453	Identifier	S_BEGIN		2584736	1					
ANR	2585454	Identifier	data		2584736	1					
ANR	2585455	Identifier	i		2584736	1					
ANR	2585456	Argument	upd -> strings [ S_BEGIN ] . size - i		2584736	2					
ANR	2585457	AdditiveExpression	upd -> strings [ S_BEGIN ] . size - i		2584736	0		-			
ANR	2585458	MemberAccess	upd -> strings [ S_BEGIN ] . size		2584736	0					
ANR	2585459	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2585460	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2585461	Identifier	upd		2584736	0					
ANR	2585462	Identifier	strings		2584736	1					
ANR	2585463	Identifier	S_BEGIN		2584736	1					
ANR	2585464	Identifier	size		2584736	1					
ANR	2585465	Identifier	i		2584736	1					
ANR	2585466	ExpressionStatement	i = j + 1 + ncv	6537:13:232819:232830	2584736	7	True				
ANR	2585467	AssignmentExpression	i = j + 1 + ncv		2584736	0		=			
ANR	2585468	Identifier	i		2584736	0					
ANR	2585469	AdditiveExpression	j + 1 + ncv		2584736	1		+			
ANR	2585470	Identifier	j		2584736	0					
ANR	2585471	AdditiveExpression	1 + ncv		2584736	1		+			
ANR	2585472	PrimaryExpression	1		2584736	0					
ANR	2585473	Identifier	ncv		2584736	1					
ANR	2585474	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_BEGIN ] )"	6538:13:232845:232898	2584736	8	True				
ANR	2585475	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_BEGIN ] )"		2584736	0					
ANR	2585476	Callee	UPD_MM_DEL_PARAM		2584736	0					
ANR	2585477	Identifier	UPD_MM_DEL_PARAM		2584736	0					
ANR	2585478	ArgumentList	udev -> memory		2584736	1					
ANR	2585479	Argument	udev -> memory		2584736	0					
ANR	2585480	PtrMemberAccess	udev -> memory		2584736	0					
ANR	2585481	Identifier	udev		2584736	0					
ANR	2585482	Identifier	memory		2584736	1					
ANR	2585483	Argument	upd -> strings [ S_BEGIN ]		2584736	1					
ANR	2585484	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2585485	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2585486	Identifier	upd		2584736	0					
ANR	2585487	Identifier	strings		2584736	1					
ANR	2585488	Identifier	S_BEGIN		2584736	1					
ANR	2585489	ExpressionStatement	upd -> strings [ S_BEGIN ] . data = bp	6539:13:232913:232944	2584736	9	True				
ANR	2585490	AssignmentExpression	upd -> strings [ S_BEGIN ] . data = bp		2584736	0		=			
ANR	2585491	MemberAccess	upd -> strings [ S_BEGIN ] . data		2584736	0					
ANR	2585492	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2585493	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2585494	Identifier	upd		2584736	0					
ANR	2585495	Identifier	strings		2584736	1					
ANR	2585496	Identifier	S_BEGIN		2584736	1					
ANR	2585497	Identifier	data		2584736	1					
ANR	2585498	Identifier	bp		2584736	1					
ANR	2585499	ExpressionStatement	upd -> strings [ S_BEGIN ] . size = nbp	6540:13:232959:232991	2584736	10	True				
ANR	2585500	AssignmentExpression	upd -> strings [ S_BEGIN ] . size = nbp		2584736	0		=			
ANR	2585501	MemberAccess	upd -> strings [ S_BEGIN ] . size		2584736	0					
ANR	2585502	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2585503	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2585504	Identifier	upd		2584736	0					
ANR	2585505	Identifier	strings		2584736	1					
ANR	2585506	Identifier	S_BEGIN		2584736	1					
ANR	2585507	Identifier	size		2584736	1					
ANR	2585508	Identifier	nbp		2584736	1					
ANR	2585509	IfStatement	if ( ( 0x40 < c ) && ( c < 0x5b ) )		2584736	16					
ANR	2585510	Condition	( 0x40 < c ) && ( c < 0x5b )	6544:21:233029:233052	2584736	0	True				
ANR	2585511	AndExpression	( 0x40 < c ) && ( c < 0x5b )		2584736	0		&&			
ANR	2585512	RelationalExpression	0x40 < c		2584736	0		<			
ANR	2585513	PrimaryExpression	0x40		2584736	0					
ANR	2585514	Identifier	c		2584736	1					
ANR	2585515	RelationalExpression	c < 0x5b		2584736	1		<			
ANR	2585516	Identifier	c		2584736	0					
ANR	2585517	PrimaryExpression	0x5b		2584736	1					
ANR	2585518	ExpressionStatement	state = 0	6544:48:233056:233065	2584736	1	True				
ANR	2585519	AssignmentExpression	state = 0		2584736	0		=			
ANR	2585520	Identifier	state		2584736	0					
ANR	2585521	PrimaryExpression	0		2584736	1					
ANR	2585522	ElseStatement	else		2584736	0					
ANR	2585523	IfStatement	if ( ! ( ( 0x2f < c ) && ( c < 0x3a ) ) )		2584736	0					
ANR	2585524	Condition	! ( ( 0x2f < c ) && ( c < 0x3a ) )	6545:19:233103:233129	2584736	0	True				
ANR	2585525	UnaryOperationExpression	! ( ( 0x2f < c ) && ( c < 0x3a ) )		2584736	0					
ANR	2585526	UnaryOperator	!		2584736	0					
ANR	2585527	AndExpression	( 0x2f < c ) && ( c < 0x3a )		2584736	1		&&			
ANR	2585528	RelationalExpression	0x2f < c		2584736	0		<			
ANR	2585529	PrimaryExpression	0x2f		2584736	0					
ANR	2585530	Identifier	c		2584736	1					
ANR	2585531	RelationalExpression	c < 0x3a		2584736	1		<			
ANR	2585532	Identifier	c		2584736	0					
ANR	2585533	PrimaryExpression	0x3a		2584736	1					
ANR	2585534	ExpressionStatement	j = i	6545:48:233132:233141	2584736	1	True				
ANR	2585535	AssignmentExpression	j = i		2584736	0		=			
ANR	2585536	Identifier	j		2584736	0					
ANR	2585537	Identifier	i		2584736	1					
ANR	2585538	BreakStatement	break ;	6547:9:233170:233175	2584736	17	True				
ANR	2585539	Label	case 5 :	6549:9:233187:233194	2584736	18	True				
ANR	2585540	IfStatement	if ( c == 0x2d )		2584736	19					
ANR	2585541	Condition	c == 0x2d	6550:15:233237:233245	2584736	0	True				
ANR	2585542	EqualityExpression	c == 0x2d		2584736	0		==			
ANR	2585543	Identifier	c		2584736	0					
ANR	2585544	PrimaryExpression	0x2d		2584736	1					
ANR	2585545	ExpressionStatement	state = 6	6550:26:233248:233258	2584736	1	True				
ANR	2585546	AssignmentExpression	state = 6		2584736	0		=			
ANR	2585547	Identifier	state		2584736	0					
ANR	2585548	PrimaryExpression	6		2584736	1					
ANR	2585549	ElseStatement	else		2584736	0					
ANR	2585550	ExpressionStatement	state = 0	6551:26:233300:233310	2584736	0	True				
ANR	2585551	AssignmentExpression	state = 0		2584736	0		=			
ANR	2585552	Identifier	state		2584736	0					
ANR	2585553	PrimaryExpression	0		2584736	1					
ANR	2585554	BreakStatement	break ;	6552:9:233321:233326	2584736	20	True				
ANR	2585555	Label	case 6 :	6554:9:233338:233345	2584736	21	True				
ANR	2585556	IfStatement	if ( c == 0x31 )		2584736	22					
ANR	2585557	Condition	c == 0x31	6555:15:233389:233397	2584736	0	True				
ANR	2585558	EqualityExpression	c == 0x31		2584736	0		==			
ANR	2585559	Identifier	c		2584736	0					
ANR	2585560	PrimaryExpression	0x31		2584736	1					
ANR	2585561	ExpressionStatement	state = 7	6555:26:233400:233410	2584736	1	True				
ANR	2585562	AssignmentExpression	state = 7		2584736	0		=			
ANR	2585563	Identifier	state		2584736	0					
ANR	2585564	PrimaryExpression	7		2584736	1					
ANR	2585565	ElseStatement	else		2584736	0					
ANR	2585566	ExpressionStatement	state = 0	6556:26:233454:233464	2584736	0	True				
ANR	2585567	AssignmentExpression	state = 0		2584736	0		=			
ANR	2585568	Identifier	state		2584736	0					
ANR	2585569	PrimaryExpression	0		2584736	1					
ANR	2585570	BreakStatement	break ;	6557:9:233475:233480	2584736	23	True				
ANR	2585571	Label	case 7 :	6559:9:233492:233499	2584736	24	True				
ANR	2585572	IfStatement	if ( c == 0x32 )		2584736	25					
ANR	2585573	Condition	c == 0x32	6560:15:233543:233551	2584736	0	True				
ANR	2585574	EqualityExpression	c == 0x32		2584736	0		==			
ANR	2585575	Identifier	c		2584736	0					
ANR	2585576	PrimaryExpression	0x32		2584736	1					
ANR	2585577	ExpressionStatement	state = 8	6560:26:233554:233564	2584736	1	True				
ANR	2585578	AssignmentExpression	state = 8		2584736	0		=			
ANR	2585579	Identifier	state		2584736	0					
ANR	2585580	PrimaryExpression	8		2584736	1					
ANR	2585581	ElseStatement	else		2584736	0					
ANR	2585582	ExpressionStatement	state = 0	6561:26:233610:233620	2584736	0	True				
ANR	2585583	AssignmentExpression	state = 0		2584736	0		=			
ANR	2585584	Identifier	state		2584736	0					
ANR	2585585	PrimaryExpression	0		2584736	1					
ANR	2585586	BreakStatement	break ;	6562:9:233631:233636	2584736	26	True				
ANR	2585587	Label	case 8 :	6564:9:233648:233655	2584736	27	True				
ANR	2585588	IfStatement	if ( c == 0x33 )		2584736	28					
ANR	2585589	Condition	c == 0x33	6565:15:233699:233707	2584736	0	True				
ANR	2585590	EqualityExpression	c == 0x33		2584736	0		==			
ANR	2585591	Identifier	c		2584736	0					
ANR	2585592	PrimaryExpression	0x33		2584736	1					
ANR	2585593	ExpressionStatement	state = 9	6565:26:233710:233720	2584736	1	True				
ANR	2585594	AssignmentExpression	state = 9		2584736	0		=			
ANR	2585595	Identifier	state		2584736	0					
ANR	2585596	PrimaryExpression	9		2584736	1					
ANR	2585597	ElseStatement	else		2584736	0					
ANR	2585598	ExpressionStatement	state = 0	6566:26:233768:233778	2584736	0	True				
ANR	2585599	AssignmentExpression	state = 0		2584736	0		=			
ANR	2585600	Identifier	state		2584736	0					
ANR	2585601	PrimaryExpression	0		2584736	1					
ANR	2585602	BreakStatement	break ;	6567:9:233789:233794	2584736	29	True				
ANR	2585603	Label	case 9 :	6569:9:233806:233813	2584736	30	True				
ANR	2585604	IfStatement	if ( c == 0x34 )		2584736	31					
ANR	2585605	Condition	c == 0x34	6570:15:233857:233865	2584736	0	True				
ANR	2585606	EqualityExpression	c == 0x34		2584736	0		==			
ANR	2585607	Identifier	c		2584736	0					
ANR	2585608	PrimaryExpression	0x34		2584736	1					
ANR	2585609	ExpressionStatement	state = 10	6570:26:233868:233878	2584736	1	True				
ANR	2585610	AssignmentExpression	state = 10		2584736	0		=			
ANR	2585611	Identifier	state		2584736	0					
ANR	2585612	PrimaryExpression	10		2584736	1					
ANR	2585613	ElseStatement	else		2584736	0					
ANR	2585614	ExpressionStatement	state = 0	6571:26:233928:233938	2584736	0	True				
ANR	2585615	AssignmentExpression	state = 0		2584736	0		=			
ANR	2585616	Identifier	state		2584736	0					
ANR	2585617	PrimaryExpression	0		2584736	1					
ANR	2585618	BreakStatement	break ;	6572:9:233949:233954	2584736	32	True				
ANR	2585619	Label	case 10 :	6574:9:233966:233973	2584736	33	True				
ANR	2585620	IfStatement	if ( c == 0x35 )		2584736	34					
ANR	2585621	Condition	c == 0x35	6575:15:234017:234025	2584736	0	True				
ANR	2585622	EqualityExpression	c == 0x35		2584736	0		==			
ANR	2585623	Identifier	c		2584736	0					
ANR	2585624	PrimaryExpression	0x35		2584736	1					
ANR	2585625	ExpressionStatement	state = 11	6575:26:234028:234038	2584736	1	True				
ANR	2585626	AssignmentExpression	state = 11		2584736	0		=			
ANR	2585627	Identifier	state		2584736	0					
ANR	2585628	PrimaryExpression	11		2584736	1					
ANR	2585629	ElseStatement	else		2584736	0					
ANR	2585630	ExpressionStatement	state = 0	6576:26:234090:234100	2584736	0	True				
ANR	2585631	AssignmentExpression	state = 0		2584736	0		=			
ANR	2585632	Identifier	state		2584736	0					
ANR	2585633	PrimaryExpression	0		2584736	1					
ANR	2585634	BreakStatement	break ;	6577:9:234111:234116	2584736	35	True				
ANR	2585635	Label	case 11 :	6579:9:234128:234135	2584736	36	True				
ANR	2585636	IfStatement	if ( c == 0x58 )		2584736	37					
ANR	2585637	Condition	c == 0x58	6580:15:234179:234187	2584736	0	True				
ANR	2585638	EqualityExpression	c == 0x58		2584736	0		==			
ANR	2585639	Identifier	c		2584736	0					
ANR	2585640	PrimaryExpression	0x58		2584736	1					
ANR	2585641	ExpressionStatement	state = 12	6580:26:234190:234200	2584736	1	True				
ANR	2585642	AssignmentExpression	state = 12		2584736	0		=			
ANR	2585643	Identifier	state		2584736	0					
ANR	2585644	PrimaryExpression	12		2584736	1					
ANR	2585645	ElseStatement	else		2584736	0					
ANR	2585646	ExpressionStatement	state = 0	6581:26:234254:234264	2584736	0	True				
ANR	2585647	AssignmentExpression	state = 0		2584736	0		=			
ANR	2585648	Identifier	state		2584736	0					
ANR	2585649	PrimaryExpression	0		2584736	1					
ANR	2585650	BreakStatement	break ;	6582:9:234275:234280	2584736	38	True				
ANR	2585651	Label	case 12 :	6584:9:234292:234299	2584736	39	True				
ANR	2585652	IfStatement	if ( c == 0x40 )		2584736	40					
ANR	2585653	Condition	c == 0x40	6585:15:234343:234351	2584736	0	True				
ANR	2585654	EqualityExpression	c == 0x40		2584736	0		==			
ANR	2585655	Identifier	c		2584736	0					
ANR	2585656	PrimaryExpression	0x40		2584736	1					
ANR	2585657	ExpressionStatement	state = 13	6585:26:234354:234364	2584736	1	True				
ANR	2585658	AssignmentExpression	state = 13		2584736	0		=			
ANR	2585659	Identifier	state		2584736	0					
ANR	2585660	PrimaryExpression	13		2584736	1					
ANR	2585661	ElseStatement	else		2584736	0					
ANR	2585662	ExpressionStatement	state = 0	6586:26:234400:234410	2584736	0	True				
ANR	2585663	AssignmentExpression	state = 0		2584736	0		=			
ANR	2585664	Identifier	state		2584736	0					
ANR	2585665	PrimaryExpression	0		2584736	1					
ANR	2585666	BreakStatement	break ;	6587:9:234421:234426	2584736	41	True				
ANR	2585667	Label	case 13 :	6589:9:234438:234445	2584736	42	True				
ANR	2585668	IfStatement	if ( c == 0x50 )		2584736	43					
ANR	2585669	Condition	c == 0x50	6590:15:234488:234496	2584736	0	True				
ANR	2585670	EqualityExpression	c == 0x50		2584736	0		==			
ANR	2585671	Identifier	c		2584736	0					
ANR	2585672	PrimaryExpression	0x50		2584736	1					
ANR	2585673	ExpressionStatement	state = 14	6590:26:234499:234509	2584736	1	True				
ANR	2585674	AssignmentExpression	state = 14		2584736	0		=			
ANR	2585675	Identifier	state		2584736	0					
ANR	2585676	PrimaryExpression	14		2584736	1					
ANR	2585677	ElseStatement	else		2584736	0					
ANR	2585678	ExpressionStatement	state = 0	6591:26:234547:234557	2584736	0	True				
ANR	2585679	AssignmentExpression	state = 0		2584736	0		=			
ANR	2585680	Identifier	state		2584736	0					
ANR	2585681	PrimaryExpression	0		2584736	1					
ANR	2585682	BreakStatement	break ;	6592:9:234568:234573	2584736	44	True				
ANR	2585683	Label	case 14 :	6594:9:234585:234592	2584736	45	True				
ANR	2585684	IfStatement	if ( c == 0x4a )		2584736	46					
ANR	2585685	Condition	c == 0x4a	6595:15:234635:234643	2584736	0	True				
ANR	2585686	EqualityExpression	c == 0x4a		2584736	0		==			
ANR	2585687	Identifier	c		2584736	0					
ANR	2585688	PrimaryExpression	0x4a		2584736	1					
ANR	2585689	ExpressionStatement	state = 15	6595:26:234646:234656	2584736	1	True				
ANR	2585690	AssignmentExpression	state = 15		2584736	0		=			
ANR	2585691	Identifier	state		2584736	0					
ANR	2585692	PrimaryExpression	15		2584736	1					
ANR	2585693	ElseStatement	else		2584736	0					
ANR	2585694	ExpressionStatement	state = 0	6596:26:234696:234706	2584736	0	True				
ANR	2585695	AssignmentExpression	state = 0		2584736	0		=			
ANR	2585696	Identifier	state		2584736	0					
ANR	2585697	PrimaryExpression	0		2584736	1					
ANR	2585698	BreakStatement	break ;	6597:9:234717:234722	2584736	47	True				
ANR	2585699	Label	case 15 :	6599:9:234734:234741	2584736	48	True				
ANR	2585700	IfStatement	if ( c == 0x4c )		2584736	49					
ANR	2585701	Condition	c == 0x4c	6600:15:234784:234792	2584736	0	True				
ANR	2585702	EqualityExpression	c == 0x4c		2584736	0		==			
ANR	2585703	Identifier	c		2584736	0					
ANR	2585704	PrimaryExpression	0x4c		2584736	1					
ANR	2585705	ExpressionStatement	state = 16	6600:26:234795:234805	2584736	1	True				
ANR	2585706	AssignmentExpression	state = 16		2584736	0		=			
ANR	2585707	Identifier	state		2584736	0					
ANR	2585708	PrimaryExpression	16		2584736	1					
ANR	2585709	ElseStatement	else		2584736	0					
ANR	2585710	ExpressionStatement	state = 0	6601:26:234847:234857	2584736	0	True				
ANR	2585711	AssignmentExpression	state = 0		2584736	0		=			
ANR	2585712	Identifier	state		2584736	0					
ANR	2585713	PrimaryExpression	0		2584736	1					
ANR	2585714	BreakStatement	break ;	6602:9:234868:234873	2584736	50	True				
ANR	2585715	Label	case 16 :	6604:9:234885:234892	2584736	51	True				
ANR	2585716	IfStatement	if ( ( c == 0x20 ) || ( c == 0x09 ) )		2584736	52					
ANR	2585717	Condition	( c == 0x20 ) || ( c == 0x09 )	6605:14:234934:234959	2584736	0	True				
ANR	2585718	OrExpression	( c == 0x20 ) || ( c == 0x09 )		2584736	0		||			
ANR	2585719	EqualityExpression	c == 0x20		2584736	0		==			
ANR	2585720	Identifier	c		2584736	0					
ANR	2585721	PrimaryExpression	0x20		2584736	1					
ANR	2585722	EqualityExpression	c == 0x09		2584736	1		==			
ANR	2585723	Identifier	c		2584736	0					
ANR	2585724	PrimaryExpression	0x09		2584736	1					
ANR	2585725	ExpressionStatement	state = 19	6605:42:234962:234972	2584736	1	True				
ANR	2585726	AssignmentExpression	state = 19		2584736	0		=			
ANR	2585727	Identifier	state		2584736	0					
ANR	2585728	PrimaryExpression	19		2584736	1					
ANR	2585729	ElseStatement	else		2584736	0					
ANR	2585730	IfStatement	if ( c == 0x0d )		2584736	0					
ANR	2585731	Condition	c == 0x0d	6606:30:235021:235029	2584736	0	True				
ANR	2585732	EqualityExpression	c == 0x0d		2584736	0		==			
ANR	2585733	Identifier	c		2584736	0					
ANR	2585734	PrimaryExpression	0x0d		2584736	1					
ANR	2585735	ExpressionStatement	state = 17	6606:42:235033:235043	2584736	1	True				
ANR	2585736	AssignmentExpression	state = 17		2584736	0		=			
ANR	2585737	Identifier	state		2584736	0					
ANR	2585738	PrimaryExpression	17		2584736	1					
ANR	2585739	ElseStatement	else		2584736	0					
ANR	2585740	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2585741	Condition	c == 0x0a	6607:30:235075:235083	2584736	0	True				
ANR	2585742	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2585743	Identifier	c		2584736	0					
ANR	2585744	PrimaryExpression	0x0a		2584736	1					
ANR	2585745	ExpressionStatement	state = 12	6607:42:235087:235097	2584736	1	True				
ANR	2585746	AssignmentExpression	state = 12		2584736	0		=			
ANR	2585747	Identifier	state		2584736	0					
ANR	2585748	PrimaryExpression	12		2584736	1					
ANR	2585749	ElseStatement	else		2584736	0					
ANR	2585750	ExpressionStatement	state = 0	6608:42:235141:235151	2584736	0	True				
ANR	2585751	AssignmentExpression	state = 0		2584736	0		=			
ANR	2585752	Identifier	state		2584736	0					
ANR	2585753	PrimaryExpression	0		2584736	1					
ANR	2585754	BreakStatement	break ;	6609:9:235178:235183	2584736	53	True				
ANR	2585755	Label	case 17 :	6611:9:235195:235202	2584736	54	True				
ANR	2585756	IfStatement	if ( c == 0x0a )		2584736	55					
ANR	2585757	Condition	c == 0x0a	6612:15:235234:235242	2584736	0	True				
ANR	2585758	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2585759	Identifier	c		2584736	0					
ANR	2585760	PrimaryExpression	0x0a		2584736	1					
ANR	2585761	ExpressionStatement	state = 12	6612:26:235245:235255	2584736	1	True				
ANR	2585762	AssignmentExpression	state = 12		2584736	0		=			
ANR	2585763	Identifier	state		2584736	0					
ANR	2585764	PrimaryExpression	12		2584736	1					
ANR	2585765	ElseStatement	else		2584736	0					
ANR	2585766	ExpressionStatement	state = 0	6613:26:235306:235316	2584736	0	True				
ANR	2585767	AssignmentExpression	state = 0		2584736	0		=			
ANR	2585768	Identifier	state		2584736	0					
ANR	2585769	PrimaryExpression	0		2584736	1					
ANR	2585770	BreakStatement	break ;	6614:9:235343:235348	2584736	56	True				
ANR	2585771	Label	case 18 :	6616:9:235360:235367	2584736	57	True				
ANR	2585772	IfStatement	if ( c == 0x0a )		2584736	58					
ANR	2585773	Condition	c == 0x0a	6617:15:235416:235424	2584736	0	True				
ANR	2585774	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2585775	Identifier	c		2584736	0					
ANR	2585776	PrimaryExpression	0x0a		2584736	1					
ANR	2585777	ExpressionStatement	state = 12	6617:26:235427:235437	2584736	1	True				
ANR	2585778	AssignmentExpression	state = 12		2584736	0		=			
ANR	2585779	Identifier	state		2584736	0					
ANR	2585780	PrimaryExpression	12		2584736	1					
ANR	2585781	BreakStatement	break ;	6618:9:235448:235453	2584736	59	True				
ANR	2585782	Label	case 19 :	6620:9:235465:235472	2584736	60	True				
ANR	2585783	IfStatement	if ( ( c == 0x53 ) || ( c == 0x73 ) )		2584736	61					
ANR	2585784	Condition	( c == 0x53 ) || ( c == 0x73 )	6621:19:235520:235545	2584736	0	True				
ANR	2585785	OrExpression	( c == 0x53 ) || ( c == 0x73 )		2584736	0		||			
ANR	2585786	EqualityExpression	c == 0x53		2584736	0		==			
ANR	2585787	Identifier	c		2584736	0					
ANR	2585788	PrimaryExpression	0x53		2584736	1					
ANR	2585789	EqualityExpression	c == 0x73		2584736	1		==			
ANR	2585790	Identifier	c		2584736	0					
ANR	2585791	PrimaryExpression	0x73		2584736	1					
ANR	2585792	ExpressionStatement	state = 20	6621:47:235548:235558	2584736	1	True				
ANR	2585793	AssignmentExpression	state = 20		2584736	0		=			
ANR	2585794	Identifier	state		2584736	0					
ANR	2585795	PrimaryExpression	20		2584736	1					
ANR	2585796	ElseStatement	else		2584736	0					
ANR	2585797	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2585798	Condition	c == 0x0a	6622:20:235591:235599	2584736	0	True				
ANR	2585799	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2585800	Identifier	c		2584736	0					
ANR	2585801	PrimaryExpression	0x0a		2584736	1					
ANR	2585802	ExpressionStatement	state = 12	6622:47:235618:235628	2584736	1	True				
ANR	2585803	AssignmentExpression	state = 12		2584736	0		=			
ANR	2585804	Identifier	state		2584736	0					
ANR	2585805	PrimaryExpression	12		2584736	1					
ANR	2585806	ElseStatement	else		2584736	0					
ANR	2585807	IfStatement	if ( c == 0x0d )		2584736	0					
ANR	2585808	Condition	c == 0x0d	6623:20:235660:235668	2584736	0	True				
ANR	2585809	EqualityExpression	c == 0x0d		2584736	0		==			
ANR	2585810	Identifier	c		2584736	0					
ANR	2585811	PrimaryExpression	0x0d		2584736	1					
ANR	2585812	ExpressionStatement	state = 17	6623:47:235687:235697	2584736	1	True				
ANR	2585813	AssignmentExpression	state = 17		2584736	0		=			
ANR	2585814	Identifier	state		2584736	0					
ANR	2585815	PrimaryExpression	17		2584736	1					
ANR	2585816	BreakStatement	break ;	6624:9:235708:235713	2584736	62	True				
ANR	2585817	Label	case 20 :	6626:9:235725:235732	2584736	63	True				
ANR	2585818	IfStatement	if ( ( c == 0x45 ) || ( c == 0x65 ) )		2584736	64					
ANR	2585819	Condition	( c == 0x45 ) || ( c == 0x65 )	6627:19:235775:235800	2584736	0	True				
ANR	2585820	OrExpression	( c == 0x45 ) || ( c == 0x65 )		2584736	0		||			
ANR	2585821	EqualityExpression	c == 0x45		2584736	0		==			
ANR	2585822	Identifier	c		2584736	0					
ANR	2585823	PrimaryExpression	0x45		2584736	1					
ANR	2585824	EqualityExpression	c == 0x65		2584736	1		==			
ANR	2585825	Identifier	c		2584736	0					
ANR	2585826	PrimaryExpression	0x65		2584736	1					
ANR	2585827	ExpressionStatement	state = 21	6627:47:235803:235813	2584736	1	True				
ANR	2585828	AssignmentExpression	state = 21		2584736	0		=			
ANR	2585829	Identifier	state		2584736	0					
ANR	2585830	PrimaryExpression	21		2584736	1					
ANR	2585831	ElseStatement	else		2584736	0					
ANR	2585832	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2585833	Condition	c == 0x0a	6628:20:235845:235853	2584736	0	True				
ANR	2585834	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2585835	Identifier	c		2584736	0					
ANR	2585836	PrimaryExpression	0x0a		2584736	1					
ANR	2585837	ExpressionStatement	state = 12	6628:47:235872:235882	2584736	1	True				
ANR	2585838	AssignmentExpression	state = 12		2584736	0		=			
ANR	2585839	Identifier	state		2584736	0					
ANR	2585840	PrimaryExpression	12		2584736	1					
ANR	2585841	ElseStatement	else		2584736	0					
ANR	2585842	ExpressionStatement	state = 18	6629:47:235941:235951	2584736	0	True				
ANR	2585843	AssignmentExpression	state = 18		2584736	0		=			
ANR	2585844	Identifier	state		2584736	0					
ANR	2585845	PrimaryExpression	18		2584736	1					
ANR	2585846	BreakStatement	break ;	6630:9:235962:235967	2584736	65	True				
ANR	2585847	Label	case 21 :	6632:9:235979:235986	2584736	66	True				
ANR	2585848	IfStatement	if ( ( c == 0x54 ) || ( c == 0x74 ) )		2584736	67					
ANR	2585849	Condition	( c == 0x54 ) || ( c == 0x74 )	6633:19:236029:236054	2584736	0	True				
ANR	2585850	OrExpression	( c == 0x54 ) || ( c == 0x74 )		2584736	0		||			
ANR	2585851	EqualityExpression	c == 0x54		2584736	0		==			
ANR	2585852	Identifier	c		2584736	0					
ANR	2585853	PrimaryExpression	0x54		2584736	1					
ANR	2585854	EqualityExpression	c == 0x74		2584736	1		==			
ANR	2585855	Identifier	c		2584736	0					
ANR	2585856	PrimaryExpression	0x74		2584736	1					
ANR	2585857	ExpressionStatement	state = 22	6633:47:236057:236067	2584736	1	True				
ANR	2585858	AssignmentExpression	state = 22		2584736	0		=			
ANR	2585859	Identifier	state		2584736	0					
ANR	2585860	PrimaryExpression	22		2584736	1					
ANR	2585861	ElseStatement	else		2584736	0					
ANR	2585862	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2585863	Condition	c == 0x0a	6634:20:236101:236109	2584736	0	True				
ANR	2585864	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2585865	Identifier	c		2584736	0					
ANR	2585866	PrimaryExpression	0x0a		2584736	1					
ANR	2585867	ExpressionStatement	state = 12	6634:47:236128:236138	2584736	1	True				
ANR	2585868	AssignmentExpression	state = 12		2584736	0		=			
ANR	2585869	Identifier	state		2584736	0					
ANR	2585870	PrimaryExpression	12		2584736	1					
ANR	2585871	ElseStatement	else		2584736	0					
ANR	2585872	ExpressionStatement	state = 18	6635:47:236197:236207	2584736	0	True				
ANR	2585873	AssignmentExpression	state = 18		2584736	0		=			
ANR	2585874	Identifier	state		2584736	0					
ANR	2585875	PrimaryExpression	18		2584736	1					
ANR	2585876	BreakStatement	break ;	6636:9:236218:236223	2584736	68	True				
ANR	2585877	Label	case 22 :	6638:9:236235:236242	2584736	69	True				
ANR	2585878	IfStatement	if ( ( c == 0x20 ) || ( c == 0x09 ) )		2584736	70					
ANR	2585879	Condition	( c == 0x20 ) || ( c == 0x09 )	6639:19:236288:236313	2584736	0	True				
ANR	2585880	OrExpression	( c == 0x20 ) || ( c == 0x09 )		2584736	0		||			
ANR	2585881	EqualityExpression	c == 0x20		2584736	0		==			
ANR	2585882	Identifier	c		2584736	0					
ANR	2585883	PrimaryExpression	0x20		2584736	1					
ANR	2585884	EqualityExpression	c == 0x09		2584736	1		==			
ANR	2585885	Identifier	c		2584736	0					
ANR	2585886	PrimaryExpression	0x09		2584736	1					
ANR	2585887	ExpressionStatement	state = 23	6639:47:236316:236326	2584736	1	True				
ANR	2585888	AssignmentExpression	state = 23		2584736	0		=			
ANR	2585889	Identifier	state		2584736	0					
ANR	2585890	PrimaryExpression	23		2584736	1					
ANR	2585891	ElseStatement	else		2584736	0					
ANR	2585892	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2585893	Condition	c == 0x0a	6640:20:236363:236371	2584736	0	True				
ANR	2585894	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2585895	Identifier	c		2584736	0					
ANR	2585896	PrimaryExpression	0x0a		2584736	1					
ANR	2585897	ExpressionStatement	state = 12	6640:47:236390:236400	2584736	1	True				
ANR	2585898	AssignmentExpression	state = 12		2584736	0		=			
ANR	2585899	Identifier	state		2584736	0					
ANR	2585900	PrimaryExpression	12		2584736	1					
ANR	2585901	ElseStatement	else		2584736	0					
ANR	2585902	ExpressionStatement	state = 18	6641:47:236459:236469	2584736	0	True				
ANR	2585903	AssignmentExpression	state = 18		2584736	0		=			
ANR	2585904	Identifier	state		2584736	0					
ANR	2585905	PrimaryExpression	18		2584736	1					
ANR	2585906	BreakStatement	break ;	6642:9:236480:236485	2584736	71	True				
ANR	2585907	Label	case 23 :	6644:9:236497:236504	2584736	72	True				
ANR	2585908	IfStatement	if ( ( c == 0x50 ) || ( c == 0x70 ) )		2584736	73					
ANR	2585909	Condition	( c == 0x50 ) || ( c == 0x70 )	6645:19:236550:236575	2584736	0	True				
ANR	2585910	OrExpression	( c == 0x50 ) || ( c == 0x70 )		2584736	0		||			
ANR	2585911	EqualityExpression	c == 0x50		2584736	0		==			
ANR	2585912	Identifier	c		2584736	0					
ANR	2585913	PrimaryExpression	0x50		2584736	1					
ANR	2585914	EqualityExpression	c == 0x70		2584736	1		==			
ANR	2585915	Identifier	c		2584736	0					
ANR	2585916	PrimaryExpression	0x70		2584736	1					
ANR	2585917	ExpressionStatement	state = 24	6645:47:236578:236588	2584736	1	True				
ANR	2585918	AssignmentExpression	state = 24		2584736	0		=			
ANR	2585919	Identifier	state		2584736	0					
ANR	2585920	PrimaryExpression	24		2584736	1					
ANR	2585921	ElseStatement	else		2584736	0					
ANR	2585922	IfStatement	if ( ( c == 0x52 ) || ( c == 0x72 ) )		2584736	0					
ANR	2585923	Condition	( c == 0x52 ) || ( c == 0x72 )	6646:19:236628:236653	2584736	0	True				
ANR	2585924	OrExpression	( c == 0x52 ) || ( c == 0x72 )		2584736	0		||			
ANR	2585925	EqualityExpression	c == 0x52		2584736	0		==			
ANR	2585926	Identifier	c		2584736	0					
ANR	2585927	PrimaryExpression	0x52		2584736	1					
ANR	2585928	EqualityExpression	c == 0x72		2584736	1		==			
ANR	2585929	Identifier	c		2584736	0					
ANR	2585930	PrimaryExpression	0x72		2584736	1					
ANR	2585931	ExpressionStatement	state = 41	6646:47:236656:236666	2584736	1	True				
ANR	2585932	AssignmentExpression	state = 41		2584736	0		=			
ANR	2585933	Identifier	state		2584736	0					
ANR	2585934	PrimaryExpression	41		2584736	1					
ANR	2585935	ElseStatement	else		2584736	0					
ANR	2585936	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2585937	Condition	c == 0x0a	6647:20:236709:236717	2584736	0	True				
ANR	2585938	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2585939	Identifier	c		2584736	0					
ANR	2585940	PrimaryExpression	0x0a		2584736	1					
ANR	2585941	ExpressionStatement	state = 12	6647:47:236736:236746	2584736	1	True				
ANR	2585942	AssignmentExpression	state = 12		2584736	0		=			
ANR	2585943	Identifier	state		2584736	0					
ANR	2585944	PrimaryExpression	12		2584736	1					
ANR	2585945	ElseStatement	else		2584736	0					
ANR	2585946	ExpressionStatement	state = 18	6648:47:236805:236815	2584736	0	True				
ANR	2585947	AssignmentExpression	state = 18		2584736	0		=			
ANR	2585948	Identifier	state		2584736	0					
ANR	2585949	PrimaryExpression	18		2584736	1					
ANR	2585950	BreakStatement	break ;	6649:9:236826:236831	2584736	74	True				
ANR	2585951	Label	case 24 :	6651:9:236843:236850	2584736	75	True				
ANR	2585952	IfStatement	if ( ( c == 0x41 ) || ( c == 0x61 ) )		2584736	76					
ANR	2585953	Condition	( c == 0x41 ) || ( c == 0x61 )	6652:19:236900:236925	2584736	0	True				
ANR	2585954	OrExpression	( c == 0x41 ) || ( c == 0x61 )		2584736	0		||			
ANR	2585955	EqualityExpression	c == 0x41		2584736	0		==			
ANR	2585956	Identifier	c		2584736	0					
ANR	2585957	PrimaryExpression	0x41		2584736	1					
ANR	2585958	EqualityExpression	c == 0x61		2584736	1		==			
ANR	2585959	Identifier	c		2584736	0					
ANR	2585960	PrimaryExpression	0x61		2584736	1					
ANR	2585961	ExpressionStatement	state = 25	6652:47:236928:236938	2584736	1	True				
ANR	2585962	AssignmentExpression	state = 25		2584736	0		=			
ANR	2585963	Identifier	state		2584736	0					
ANR	2585964	PrimaryExpression	25		2584736	1					
ANR	2585965	ElseStatement	else		2584736	0					
ANR	2585966	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2585967	Condition	c == 0x0a	6653:20:236973:236981	2584736	0	True				
ANR	2585968	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2585969	Identifier	c		2584736	0					
ANR	2585970	PrimaryExpression	0x0a		2584736	1					
ANR	2585971	ExpressionStatement	state = 12	6653:47:237000:237010	2584736	1	True				
ANR	2585972	AssignmentExpression	state = 12		2584736	0		=			
ANR	2585973	Identifier	state		2584736	0					
ANR	2585974	PrimaryExpression	12		2584736	1					
ANR	2585975	ElseStatement	else		2584736	0					
ANR	2585976	ExpressionStatement	state = 18	6654:47:237069:237079	2584736	0	True				
ANR	2585977	AssignmentExpression	state = 18		2584736	0		=			
ANR	2585978	Identifier	state		2584736	0					
ANR	2585979	PrimaryExpression	18		2584736	1					
ANR	2585980	BreakStatement	break ;	6655:9:237090:237095	2584736	77	True				
ANR	2585981	Label	case 25 :	6657:9:237107:237114	2584736	78	True				
ANR	2585982	IfStatement	if ( ( c == 0x50 ) || ( c == 0x70 ) )		2584736	79					
ANR	2585983	Condition	( c == 0x50 ) || ( c == 0x70 )	6658:19:237164:237189	2584736	0	True				
ANR	2585984	OrExpression	( c == 0x50 ) || ( c == 0x70 )		2584736	0		||			
ANR	2585985	EqualityExpression	c == 0x50		2584736	0		==			
ANR	2585986	Identifier	c		2584736	0					
ANR	2585987	PrimaryExpression	0x50		2584736	1					
ANR	2585988	EqualityExpression	c == 0x70		2584736	1		==			
ANR	2585989	Identifier	c		2584736	0					
ANR	2585990	PrimaryExpression	0x70		2584736	1					
ANR	2585991	ExpressionStatement	state = 26	6658:47:237192:237202	2584736	1	True				
ANR	2585992	AssignmentExpression	state = 26		2584736	0		=			
ANR	2585993	Identifier	state		2584736	0					
ANR	2585994	PrimaryExpression	26		2584736	1					
ANR	2585995	ElseStatement	else		2584736	0					
ANR	2585996	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2585997	Condition	c == 0x0a	6659:20:237238:237246	2584736	0	True				
ANR	2585998	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2585999	Identifier	c		2584736	0					
ANR	2586000	PrimaryExpression	0x0a		2584736	1					
ANR	2586001	ExpressionStatement	state = 12	6659:47:237265:237275	2584736	1	True				
ANR	2586002	AssignmentExpression	state = 12		2584736	0		=			
ANR	2586003	Identifier	state		2584736	0					
ANR	2586004	PrimaryExpression	12		2584736	1					
ANR	2586005	ElseStatement	else		2584736	0					
ANR	2586006	ExpressionStatement	state = 18	6660:47:237334:237344	2584736	0	True				
ANR	2586007	AssignmentExpression	state = 18		2584736	0		=			
ANR	2586008	Identifier	state		2584736	0					
ANR	2586009	PrimaryExpression	18		2584736	1					
ANR	2586010	BreakStatement	break ;	6661:9:237355:237360	2584736	80	True				
ANR	2586011	Label	case 26 :	6663:9:237372:237379	2584736	81	True				
ANR	2586012	IfStatement	if ( ( c == 0x45 ) || ( c == 0x65 ) )		2584736	82					
ANR	2586013	Condition	( c == 0x45 ) || ( c == 0x65 )	6664:19:237429:237454	2584736	0	True				
ANR	2586014	OrExpression	( c == 0x45 ) || ( c == 0x65 )		2584736	0		||			
ANR	2586015	EqualityExpression	c == 0x45		2584736	0		==			
ANR	2586016	Identifier	c		2584736	0					
ANR	2586017	PrimaryExpression	0x45		2584736	1					
ANR	2586018	EqualityExpression	c == 0x65		2584736	1		==			
ANR	2586019	Identifier	c		2584736	0					
ANR	2586020	PrimaryExpression	0x65		2584736	1					
ANR	2586021	ExpressionStatement	state = 27	6664:47:237457:237467	2584736	1	True				
ANR	2586022	AssignmentExpression	state = 27		2584736	0		=			
ANR	2586023	Identifier	state		2584736	0					
ANR	2586024	PrimaryExpression	27		2584736	1					
ANR	2586025	ElseStatement	else		2584736	0					
ANR	2586026	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2586027	Condition	c == 0x0a	6665:20:237504:237512	2584736	0	True				
ANR	2586028	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2586029	Identifier	c		2584736	0					
ANR	2586030	PrimaryExpression	0x0a		2584736	1					
ANR	2586031	ExpressionStatement	state = 12	6665:47:237531:237541	2584736	1	True				
ANR	2586032	AssignmentExpression	state = 12		2584736	0		=			
ANR	2586033	Identifier	state		2584736	0					
ANR	2586034	PrimaryExpression	12		2584736	1					
ANR	2586035	ElseStatement	else		2584736	0					
ANR	2586036	ExpressionStatement	state = 18	6666:47:237600:237610	2584736	0	True				
ANR	2586037	AssignmentExpression	state = 18		2584736	0		=			
ANR	2586038	Identifier	state		2584736	0					
ANR	2586039	PrimaryExpression	18		2584736	1					
ANR	2586040	BreakStatement	break ;	6667:9:237621:237626	2584736	83	True				
ANR	2586041	Label	case 27 :	6669:9:237638:237645	2584736	84	True				
ANR	2586042	IfStatement	if ( ( c == 0x52 ) || ( c == 0x72 ) )		2584736	85					
ANR	2586043	Condition	( c == 0x52 ) || ( c == 0x72 )	6670:19:237695:237720	2584736	0	True				
ANR	2586044	OrExpression	( c == 0x52 ) || ( c == 0x72 )		2584736	0		||			
ANR	2586045	EqualityExpression	c == 0x52		2584736	0		==			
ANR	2586046	Identifier	c		2584736	0					
ANR	2586047	PrimaryExpression	0x52		2584736	1					
ANR	2586048	EqualityExpression	c == 0x72		2584736	1		==			
ANR	2586049	Identifier	c		2584736	0					
ANR	2586050	PrimaryExpression	0x72		2584736	1					
ANR	2586051	ExpressionStatement	state = 28	6670:47:237723:237733	2584736	1	True				
ANR	2586052	AssignmentExpression	state = 28		2584736	0		=			
ANR	2586053	Identifier	state		2584736	0					
ANR	2586054	PrimaryExpression	28		2584736	1					
ANR	2586055	ElseStatement	else		2584736	0					
ANR	2586056	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2586057	Condition	c == 0x0a	6671:20:237771:237779	2584736	0	True				
ANR	2586058	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2586059	Identifier	c		2584736	0					
ANR	2586060	PrimaryExpression	0x0a		2584736	1					
ANR	2586061	ExpressionStatement	state = 12	6671:47:237798:237808	2584736	1	True				
ANR	2586062	AssignmentExpression	state = 12		2584736	0		=			
ANR	2586063	Identifier	state		2584736	0					
ANR	2586064	PrimaryExpression	12		2584736	1					
ANR	2586065	ElseStatement	else		2584736	0					
ANR	2586066	ExpressionStatement	state = 18	6672:47:237867:237877	2584736	0	True				
ANR	2586067	AssignmentExpression	state = 18		2584736	0		=			
ANR	2586068	Identifier	state		2584736	0					
ANR	2586069	PrimaryExpression	18		2584736	1					
ANR	2586070	BreakStatement	break ;	6673:9:237888:237893	2584736	86	True				
ANR	2586071	Label	case 28 :	6675:9:237905:237912	2584736	87	True				
ANR	2586072	IfStatement	if ( ( c == 0x4c ) || ( c == 0x6c ) )		2584736	88					
ANR	2586073	Condition	( c == 0x4c ) || ( c == 0x6c )	6676:19:237960:237985	2584736	0	True				
ANR	2586074	OrExpression	( c == 0x4c ) || ( c == 0x6c )		2584736	0		||			
ANR	2586075	EqualityExpression	c == 0x4c		2584736	0		==			
ANR	2586076	Identifier	c		2584736	0					
ANR	2586077	PrimaryExpression	0x4c		2584736	1					
ANR	2586078	EqualityExpression	c == 0x6c		2584736	1		==			
ANR	2586079	Identifier	c		2584736	0					
ANR	2586080	PrimaryExpression	0x6c		2584736	1					
ANR	2586081	ExpressionStatement	state = 29	6676:47:237988:237998	2584736	1	True				
ANR	2586082	AssignmentExpression	state = 29		2584736	0		=			
ANR	2586083	Identifier	state		2584736	0					
ANR	2586084	PrimaryExpression	29		2584736	1					
ANR	2586085	ElseStatement	else		2584736	0					
ANR	2586086	IfStatement	if ( ( c == 0x57 ) || ( c == 0x77 ) )		2584736	0					
ANR	2586087	Condition	( c == 0x57 ) || ( c == 0x77 )	6677:19:238041:238066	2584736	0	True				
ANR	2586088	OrExpression	( c == 0x57 ) || ( c == 0x77 )		2584736	0		||			
ANR	2586089	EqualityExpression	c == 0x57		2584736	0		==			
ANR	2586090	Identifier	c		2584736	0					
ANR	2586091	PrimaryExpression	0x57		2584736	1					
ANR	2586092	EqualityExpression	c == 0x77		2584736	1		==			
ANR	2586093	Identifier	c		2584736	0					
ANR	2586094	PrimaryExpression	0x77		2584736	1					
ANR	2586095	ExpressionStatement	state = 36	6677:47:238069:238079	2584736	1	True				
ANR	2586096	AssignmentExpression	state = 36		2584736	0		=			
ANR	2586097	Identifier	state		2584736	0					
ANR	2586098	PrimaryExpression	36		2584736	1					
ANR	2586099	ElseStatement	else		2584736	0					
ANR	2586100	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2586101	Condition	c == 0x0a	6678:20:238122:238130	2584736	0	True				
ANR	2586102	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2586103	Identifier	c		2584736	0					
ANR	2586104	PrimaryExpression	0x0a		2584736	1					
ANR	2586105	ExpressionStatement	state = 12	6678:47:238149:238159	2584736	1	True				
ANR	2586106	AssignmentExpression	state = 12		2584736	0		=			
ANR	2586107	Identifier	state		2584736	0					
ANR	2586108	PrimaryExpression	12		2584736	1					
ANR	2586109	ElseStatement	else		2584736	0					
ANR	2586110	ExpressionStatement	state = 18	6679:47:238218:238228	2584736	0	True				
ANR	2586111	AssignmentExpression	state = 18		2584736	0		=			
ANR	2586112	Identifier	state		2584736	0					
ANR	2586113	PrimaryExpression	18		2584736	1					
ANR	2586114	BreakStatement	break ;	6680:9:238239:238244	2584736	89	True				
ANR	2586115	Label	case 29 :	6682:9:238256:238263	2584736	90	True				
ANR	2586116	IfStatement	if ( ( c == 0x45 ) || ( c == 0x65 ) )		2584736	91					
ANR	2586117	Condition	( c == 0x45 ) || ( c == 0x65 )	6683:19:238312:238337	2584736	0	True				
ANR	2586118	OrExpression	( c == 0x45 ) || ( c == 0x65 )		2584736	0		||			
ANR	2586119	EqualityExpression	c == 0x45		2584736	0		==			
ANR	2586120	Identifier	c		2584736	0					
ANR	2586121	PrimaryExpression	0x45		2584736	1					
ANR	2586122	EqualityExpression	c == 0x65		2584736	1		==			
ANR	2586123	Identifier	c		2584736	0					
ANR	2586124	PrimaryExpression	0x65		2584736	1					
ANR	2586125	ExpressionStatement	state = 30	6683:47:238340:238350	2584736	1	True				
ANR	2586126	AssignmentExpression	state = 30		2584736	0		=			
ANR	2586127	Identifier	state		2584736	0					
ANR	2586128	PrimaryExpression	30		2584736	1					
ANR	2586129	ElseStatement	else		2584736	0					
ANR	2586130	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2586131	Condition	c == 0x0a	6684:20:238390:238398	2584736	0	True				
ANR	2586132	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2586133	Identifier	c		2584736	0					
ANR	2586134	PrimaryExpression	0x0a		2584736	1					
ANR	2586135	ExpressionStatement	state = 12	6684:47:238417:238427	2584736	1	True				
ANR	2586136	AssignmentExpression	state = 12		2584736	0		=			
ANR	2586137	Identifier	state		2584736	0					
ANR	2586138	PrimaryExpression	12		2584736	1					
ANR	2586139	ElseStatement	else		2584736	0					
ANR	2586140	ExpressionStatement	state = 18	6685:47:238486:238496	2584736	0	True				
ANR	2586141	AssignmentExpression	state = 18		2584736	0		=			
ANR	2586142	Identifier	state		2584736	0					
ANR	2586143	PrimaryExpression	18		2584736	1					
ANR	2586144	BreakStatement	break ;	6686:9:238507:238512	2584736	92	True				
ANR	2586145	Label	case 30 :	6688:9:238524:238531	2584736	93	True				
ANR	2586146	IfStatement	if ( ( c == 0x4e ) || ( c == 0x6e ) )		2584736	94					
ANR	2586147	Condition	( c == 0x4e ) || ( c == 0x6e )	6689:19:238580:238605	2584736	0	True				
ANR	2586148	OrExpression	( c == 0x4e ) || ( c == 0x6e )		2584736	0		||			
ANR	2586149	EqualityExpression	c == 0x4e		2584736	0		==			
ANR	2586150	Identifier	c		2584736	0					
ANR	2586151	PrimaryExpression	0x4e		2584736	1					
ANR	2586152	EqualityExpression	c == 0x6e		2584736	1		==			
ANR	2586153	Identifier	c		2584736	0					
ANR	2586154	PrimaryExpression	0x6e		2584736	1					
ANR	2586155	ExpressionStatement	state = 31	6689:47:238608:238618	2584736	1	True				
ANR	2586156	AssignmentExpression	state = 31		2584736	0		=			
ANR	2586157	Identifier	state		2584736	0					
ANR	2586158	PrimaryExpression	31		2584736	1					
ANR	2586159	ElseStatement	else		2584736	0					
ANR	2586160	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2586161	Condition	c == 0x0a	6690:20:238659:238667	2584736	0	True				
ANR	2586162	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2586163	Identifier	c		2584736	0					
ANR	2586164	PrimaryExpression	0x0a		2584736	1					
ANR	2586165	ExpressionStatement	state = 12	6690:47:238686:238696	2584736	1	True				
ANR	2586166	AssignmentExpression	state = 12		2584736	0		=			
ANR	2586167	Identifier	state		2584736	0					
ANR	2586168	PrimaryExpression	12		2584736	1					
ANR	2586169	ElseStatement	else		2584736	0					
ANR	2586170	ExpressionStatement	state = 18	6691:47:238755:238765	2584736	0	True				
ANR	2586171	AssignmentExpression	state = 18		2584736	0		=			
ANR	2586172	Identifier	state		2584736	0					
ANR	2586173	PrimaryExpression	18		2584736	1					
ANR	2586174	BreakStatement	break ;	6692:9:238776:238781	2584736	95	True				
ANR	2586175	Label	case 31 :	6694:9:238793:238800	2584736	96	True				
ANR	2586176	IfStatement	if ( ( c == 0x47 ) || ( c == 0x67 ) )		2584736	97					
ANR	2586177	Condition	( c == 0x47 ) || ( c == 0x67 )	6695:19:238849:238874	2584736	0	True				
ANR	2586178	OrExpression	( c == 0x47 ) || ( c == 0x67 )		2584736	0		||			
ANR	2586179	EqualityExpression	c == 0x47		2584736	0		==			
ANR	2586180	Identifier	c		2584736	0					
ANR	2586181	PrimaryExpression	0x47		2584736	1					
ANR	2586182	EqualityExpression	c == 0x67		2584736	1		==			
ANR	2586183	Identifier	c		2584736	0					
ANR	2586184	PrimaryExpression	0x67		2584736	1					
ANR	2586185	ExpressionStatement	state = 32	6695:47:238877:238887	2584736	1	True				
ANR	2586186	AssignmentExpression	state = 32		2584736	0		=			
ANR	2586187	Identifier	state		2584736	0					
ANR	2586188	PrimaryExpression	32		2584736	1					
ANR	2586189	ElseStatement	else		2584736	0					
ANR	2586190	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2586191	Condition	c == 0x0a	6696:20:238929:238937	2584736	0	True				
ANR	2586192	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2586193	Identifier	c		2584736	0					
ANR	2586194	PrimaryExpression	0x0a		2584736	1					
ANR	2586195	ExpressionStatement	state = 12	6696:47:238956:238966	2584736	1	True				
ANR	2586196	AssignmentExpression	state = 12		2584736	0		=			
ANR	2586197	Identifier	state		2584736	0					
ANR	2586198	PrimaryExpression	12		2584736	1					
ANR	2586199	ElseStatement	else		2584736	0					
ANR	2586200	ExpressionStatement	state = 18	6697:47:239025:239035	2584736	0	True				
ANR	2586201	AssignmentExpression	state = 18		2584736	0		=			
ANR	2586202	Identifier	state		2584736	0					
ANR	2586203	PrimaryExpression	18		2584736	1					
ANR	2586204	BreakStatement	break ;	6698:9:239046:239051	2584736	98	True				
ANR	2586205	Label	case 32 :	6700:9:239063:239070	2584736	99	True				
ANR	2586206	IfStatement	if ( ( c == 0x54 ) || ( c == 0x74 ) )		2584736	100					
ANR	2586207	Condition	( c == 0x54 ) || ( c == 0x74 )	6701:19:239119:239144	2584736	0	True				
ANR	2586208	OrExpression	( c == 0x54 ) || ( c == 0x74 )		2584736	0		||			
ANR	2586209	EqualityExpression	c == 0x54		2584736	0		==			
ANR	2586210	Identifier	c		2584736	0					
ANR	2586211	PrimaryExpression	0x54		2584736	1					
ANR	2586212	EqualityExpression	c == 0x74		2584736	1		==			
ANR	2586213	Identifier	c		2584736	0					
ANR	2586214	PrimaryExpression	0x74		2584736	1					
ANR	2586215	ExpressionStatement	state = 33	6701:47:239147:239157	2584736	1	True				
ANR	2586216	AssignmentExpression	state = 33		2584736	0		=			
ANR	2586217	Identifier	state		2584736	0					
ANR	2586218	PrimaryExpression	33		2584736	1					
ANR	2586219	ElseStatement	else		2584736	0					
ANR	2586220	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2586221	Condition	c == 0x0a	6702:20:239200:239208	2584736	0	True				
ANR	2586222	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2586223	Identifier	c		2584736	0					
ANR	2586224	PrimaryExpression	0x0a		2584736	1					
ANR	2586225	ExpressionStatement	state = 12	6702:47:239227:239237	2584736	1	True				
ANR	2586226	AssignmentExpression	state = 12		2584736	0		=			
ANR	2586227	Identifier	state		2584736	0					
ANR	2586228	PrimaryExpression	12		2584736	1					
ANR	2586229	ElseStatement	else		2584736	0					
ANR	2586230	ExpressionStatement	state = 18	6703:47:239296:239306	2584736	0	True				
ANR	2586231	AssignmentExpression	state = 18		2584736	0		=			
ANR	2586232	Identifier	state		2584736	0					
ANR	2586233	PrimaryExpression	18		2584736	1					
ANR	2586234	BreakStatement	break ;	6704:9:239317:239322	2584736	101	True				
ANR	2586235	Label	case 33 :	6706:9:239334:239341	2584736	102	True				
ANR	2586236	IfStatement	if ( ( c == 0x48 ) || ( c == 0x68 ) )		2584736	103					
ANR	2586237	Condition	( c == 0x48 ) || ( c == 0x68 )	6707:19:239390:239415	2584736	0	True				
ANR	2586238	OrExpression	( c == 0x48 ) || ( c == 0x68 )		2584736	0		||			
ANR	2586239	EqualityExpression	c == 0x48		2584736	0		==			
ANR	2586240	Identifier	c		2584736	0					
ANR	2586241	PrimaryExpression	0x48		2584736	1					
ANR	2586242	EqualityExpression	c == 0x68		2584736	1		==			
ANR	2586243	Identifier	c		2584736	0					
ANR	2586244	PrimaryExpression	0x68		2584736	1					
ANR	2586245	ExpressionStatement	state = 34	6707:47:239418:239428	2584736	1	True				
ANR	2586246	AssignmentExpression	state = 34		2584736	0		=			
ANR	2586247	Identifier	state		2584736	0					
ANR	2586248	PrimaryExpression	34		2584736	1					
ANR	2586249	ElseStatement	else		2584736	0					
ANR	2586250	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2586251	Condition	c == 0x0a	6708:20:239472:239480	2584736	0	True				
ANR	2586252	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2586253	Identifier	c		2584736	0					
ANR	2586254	PrimaryExpression	0x0a		2584736	1					
ANR	2586255	ExpressionStatement	state = 12	6708:47:239499:239509	2584736	1	True				
ANR	2586256	AssignmentExpression	state = 12		2584736	0		=			
ANR	2586257	Identifier	state		2584736	0					
ANR	2586258	PrimaryExpression	12		2584736	1					
ANR	2586259	ElseStatement	else		2584736	0					
ANR	2586260	ExpressionStatement	state = 18	6709:47:239568:239578	2584736	0	True				
ANR	2586261	AssignmentExpression	state = 18		2584736	0		=			
ANR	2586262	Identifier	state		2584736	0					
ANR	2586263	PrimaryExpression	18		2584736	1					
ANR	2586264	BreakStatement	break ;	6710:9:239589:239594	2584736	104	True				
ANR	2586265	Label	case 34 :	6712:9:239606:239613	2584736	105	True				
ANR	2586266	ExpressionStatement	j = i	6713:11:239654:239659	2584736	106	True				
ANR	2586267	AssignmentExpression	j = i		2584736	0		=			
ANR	2586268	Identifier	j		2584736	0					
ANR	2586269	Identifier	i		2584736	1					
ANR	2586270	IfStatement	if ( c == 0x3d )		2584736	107					
ANR	2586271	Condition	c == 0x3d	6714:20:239735:239743	2584736	0	True				
ANR	2586272	EqualityExpression	c == 0x3d		2584736	0		==			
ANR	2586273	Identifier	c		2584736	0					
ANR	2586274	PrimaryExpression	0x3d		2584736	1					
ANR	2586275	ExpressionStatement	state = 51	6714:47:239762:239772	2584736	1	True				
ANR	2586276	AssignmentExpression	state = 51		2584736	0		=			
ANR	2586277	Identifier	state		2584736	0					
ANR	2586278	PrimaryExpression	51		2584736	1					
ANR	2586279	ElseStatement	else		2584736	0					
ANR	2586280	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2586281	Condition	c == 0x0a	6715:20:239816:239824	2584736	0	True				
ANR	2586282	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2586283	Identifier	c		2584736	0					
ANR	2586284	PrimaryExpression	0x0a		2584736	1					
ANR	2586285	ExpressionStatement	state = 12	6715:47:239843:239853	2584736	1	True				
ANR	2586286	AssignmentExpression	state = 12		2584736	0		=			
ANR	2586287	Identifier	state		2584736	0					
ANR	2586288	PrimaryExpression	12		2584736	1					
ANR	2586289	ElseStatement	else		2584736	0					
ANR	2586290	IfStatement	if ( ( c != 0x20 ) && ( c != 0x09 ) )		2584736	0					
ANR	2586291	Condition	( c != 0x20 ) && ( c != 0x09 )	6716:19:239884:239909	2584736	0	True				
ANR	2586292	AndExpression	( c != 0x20 ) && ( c != 0x09 )		2584736	0		&&			
ANR	2586293	EqualityExpression	c != 0x20		2584736	0		!=			
ANR	2586294	Identifier	c		2584736	0					
ANR	2586295	PrimaryExpression	0x20		2584736	1					
ANR	2586296	EqualityExpression	c != 0x09		2584736	1		!=			
ANR	2586297	Identifier	c		2584736	0					
ANR	2586298	PrimaryExpression	0x09		2584736	1					
ANR	2586299	ExpressionStatement	state = 18	6716:47:239912:239922	2584736	1	True				
ANR	2586300	AssignmentExpression	state = 18		2584736	0		=			
ANR	2586301	Identifier	state		2584736	0					
ANR	2586302	PrimaryExpression	18		2584736	1					
ANR	2586303	BreakStatement	break ;	6717:9:239933:239938	2584736	108	True				
ANR	2586304	Label	case 51 :	6719:9:239950:239957	2584736	109	True				
ANR	2586305	IfStatement	if ( c == 0x0a )		2584736	110					
ANR	2586306	Condition	c == 0x0a	6720:19:240010:240018	2584736	0	True				
ANR	2586307	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2586308	Identifier	c		2584736	0					
ANR	2586309	PrimaryExpression	0x0a		2584736	1					
ANR	2586310	ExpressionStatement	state = 12	6720:47:240038:240048	2584736	1	True				
ANR	2586311	AssignmentExpression	state = 12		2584736	0		=			
ANR	2586312	Identifier	state		2584736	0					
ANR	2586313	PrimaryExpression	12		2584736	1					
ANR	2586314	ElseStatement	else		2584736	0					
ANR	2586315	IfStatement	if ( ( c == 0x20 ) || ( c == 0x09 ) )		2584736	0					
ANR	2586316	Condition	( c == 0x20 ) || ( c == 0x09 )	6721:19:240069:240094	2584736	0	True				
ANR	2586317	OrExpression	( c == 0x20 ) || ( c == 0x09 )		2584736	0		||			
ANR	2586318	EqualityExpression	c == 0x20		2584736	0		==			
ANR	2586319	Identifier	c		2584736	0					
ANR	2586320	PrimaryExpression	0x20		2584736	1					
ANR	2586321	EqualityExpression	c == 0x09		2584736	1		==			
ANR	2586322	Identifier	c		2584736	0					
ANR	2586323	PrimaryExpression	0x09		2584736	1					
ANR	2586324	ExpressionStatement	j = i	6721:47:240097:240106	2584736	1	True				
ANR	2586325	AssignmentExpression	j = i		2584736	0		=			
ANR	2586326	Identifier	j		2584736	0					
ANR	2586327	Identifier	i		2584736	1					
ANR	2586328	ElseStatement	else		2584736	0					
ANR	2586329	IfStatement	if ( ( 0x30 > c ) || ( c > 0x39 ) )		2584736	0					
ANR	2586330	Condition	( 0x30 > c ) || ( c > 0x39 )	6722:19:240127:240152	2584736	0	True				
ANR	2586331	OrExpression	( 0x30 > c ) || ( c > 0x39 )		2584736	0		||			
ANR	2586332	RelationalExpression	0x30 > c		2584736	0		>			
ANR	2586333	PrimaryExpression	0x30		2584736	0					
ANR	2586334	Identifier	c		2584736	1					
ANR	2586335	RelationalExpression	c > 0x39		2584736	1		>			
ANR	2586336	Identifier	c		2584736	0					
ANR	2586337	PrimaryExpression	0x39		2584736	1					
ANR	2586338	ExpressionStatement	state = 18	6722:47:240155:240165	2584736	1	True				
ANR	2586339	AssignmentExpression	state = 18		2584736	0		=			
ANR	2586340	Identifier	state		2584736	0					
ANR	2586341	PrimaryExpression	18		2584736	1					
ANR	2586342	ElseStatement	else		2584736	0					
ANR	2586343	ExpressionStatement	state = 35	6723:47:240214:240224	2584736	0	True				
ANR	2586344	AssignmentExpression	state = 35		2584736	0		=			
ANR	2586345	Identifier	state		2584736	0					
ANR	2586346	PrimaryExpression	35		2584736	1					
ANR	2586347	BreakStatement	break ;	6724:9:240235:240240	2584736	111	True				
ANR	2586348	Label	case 35 :	6726:9:240252:240259	2584736	112	True				
ANR	2586349	IfStatement	if ( ( 0x30 > c ) || ( c > 0x39 ) )		2584736	113					
ANR	2586350	Condition	( 0x30 > c ) || ( c > 0x39 )	6727:14:240302:240325	2584736	0	True				
ANR	2586351	OrExpression	( 0x30 > c ) || ( c > 0x39 )		2584736	0		||			
ANR	2586352	RelationalExpression	0x30 > c		2584736	0		>			
ANR	2586353	PrimaryExpression	0x30		2584736	0					
ANR	2586354	Identifier	c		2584736	1					
ANR	2586355	RelationalExpression	c > 0x39		2584736	1		>			
ANR	2586356	Identifier	c		2584736	0					
ANR	2586357	PrimaryExpression	0x39		2584736	1					
ANR	2586358	CompoundStatement		297:40:11127:11127	2584736	1					
ANR	2586359	IfStatement	if ( B_PAGELENGTH & upd -> flags )		2584736	0					
ANR	2586360	Condition	B_PAGELENGTH & upd -> flags	6729:16:240367:240392	2584736	0	True				
ANR	2586361	BitAndExpression	B_PAGELENGTH & upd -> flags		2584736	0		&			
ANR	2586362	Identifier	B_PAGELENGTH		2584736	0					
ANR	2586363	PtrMemberAccess	upd -> flags		2584736	1					
ANR	2586364	Identifier	upd		2584736	0					
ANR	2586365	Identifier	flags		2584736	1					
ANR	2586366	CompoundStatement		299:44:11194:11194	2584736	1					
ANR	2586367	ExpressionStatement	"gs_sprintf ( cv , ""%d"" , ( int ) ( 720.0 * udev -> height / udev -> y_pixels_per_inch + 0.5 ) )"	6731:15:240437:240534	2584736	0	True				
ANR	2586368	CallExpression	"gs_sprintf ( cv , ""%d"" , ( int ) ( 720.0 * udev -> height / udev -> y_pixels_per_inch + 0.5 ) )"		2584736	0					
ANR	2586369	Callee	gs_sprintf		2584736	0					
ANR	2586370	Identifier	gs_sprintf		2584736	0					
ANR	2586371	ArgumentList	cv		2584736	1					
ANR	2586372	Argument	cv		2584736	0					
ANR	2586373	Identifier	cv		2584736	0					
ANR	2586374	Argument	"""%d"""		2584736	1					
ANR	2586375	PrimaryExpression	"""%d"""		2584736	0					
ANR	2586376	Argument	( int ) ( 720.0 * udev -> height / udev -> y_pixels_per_inch + 0.5 )		2584736	2					
ANR	2586377	CastExpression	( int ) ( 720.0 * udev -> height / udev -> y_pixels_per_inch + 0.5 )		2584736	0					
ANR	2586378	CastTarget	int		2584736	0					
ANR	2586379	AdditiveExpression	720.0 * udev -> height / udev -> y_pixels_per_inch + 0.5		2584736	1		+			
ANR	2586380	MultiplicativeExpression	720.0 * udev -> height / udev -> y_pixels_per_inch		2584736	0		*			
ANR	2586381	PrimaryExpression	720.0		2584736	0					
ANR	2586382	MultiplicativeExpression	udev -> height / udev -> y_pixels_per_inch		2584736	1		/			
ANR	2586383	PtrMemberAccess	udev -> height		2584736	0					
ANR	2586384	Identifier	udev		2584736	0					
ANR	2586385	Identifier	height		2584736	1					
ANR	2586386	PtrMemberAccess	udev -> y_pixels_per_inch		2584736	1					
ANR	2586387	Identifier	udev		2584736	0					
ANR	2586388	Identifier	y_pixels_per_inch		2584736	1					
ANR	2586389	PrimaryExpression	0.5		2584736	1					
ANR	2586390	ExpressionStatement	ncv = strlen ( cv )	6733:15:240551:240567	2584736	1	True				
ANR	2586391	AssignmentExpression	ncv = strlen ( cv )		2584736	0		=			
ANR	2586392	Identifier	ncv		2584736	0					
ANR	2586393	CallExpression	strlen ( cv )		2584736	1					
ANR	2586394	Callee	strlen		2584736	0					
ANR	2586395	Identifier	strlen		2584736	0					
ANR	2586396	ArgumentList	cv		2584736	1					
ANR	2586397	Argument	cv		2584736	0					
ANR	2586398	Identifier	cv		2584736	0					
ANR	2586399	ExpressionStatement	nbp = ( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )	6735:15:240585:240635	2584736	2	True				
ANR	2586400	AssignmentExpression	nbp = ( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )		2584736	0		=			
ANR	2586401	Identifier	nbp		2584736	0					
ANR	2586402	AdditiveExpression	( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )		2584736	1		+			
ANR	2586403	AdditiveExpression	j + 1		2584736	0		+			
ANR	2586404	Identifier	j		2584736	0					
ANR	2586405	PrimaryExpression	1		2584736	1					
ANR	2586406	AdditiveExpression	ncv + ( upd -> strings [ S_BEGIN ] . size - i )		2584736	1		+			
ANR	2586407	Identifier	ncv		2584736	0					
ANR	2586408	AdditiveExpression	upd -> strings [ S_BEGIN ] . size - i		2584736	1		-			
ANR	2586409	MemberAccess	upd -> strings [ S_BEGIN ] . size		2584736	0					
ANR	2586410	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2586411	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2586412	Identifier	upd		2584736	0					
ANR	2586413	Identifier	strings		2584736	1					
ANR	2586414	Identifier	S_BEGIN		2584736	1					
ANR	2586415	Identifier	size		2584736	1					
ANR	2586416	Identifier	i		2584736	1					
ANR	2586417	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , bp , nbp )"	6736:15:240652:240690	2584736	3	True				
ANR	2586418	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , bp , nbp )"		2584736	0					
ANR	2586419	Callee	UPD_MM_GET_ARRAY		2584736	0					
ANR	2586420	Identifier	UPD_MM_GET_ARRAY		2584736	0					
ANR	2586421	ArgumentList	udev -> memory		2584736	1					
ANR	2586422	Argument	udev -> memory		2584736	0					
ANR	2586423	PtrMemberAccess	udev -> memory		2584736	0					
ANR	2586424	Identifier	udev		2584736	0					
ANR	2586425	Identifier	memory		2584736	1					
ANR	2586426	Argument	bp		2584736	1					
ANR	2586427	Identifier	bp		2584736	0					
ANR	2586428	Argument	nbp		2584736	2					
ANR	2586429	Identifier	nbp		2584736	0					
ANR	2586430	IfStatement	if ( 0 <= j )		2584736	4					
ANR	2586431	Condition	0 <= j	6738:18:240711:240716	2584736	0	True				
ANR	2586432	RelationalExpression	0 <= j		2584736	0		<=			
ANR	2586433	PrimaryExpression	0		2584736	0					
ANR	2586434	Identifier	j		2584736	1					
ANR	2586435	ExpressionStatement	"memcpy ( bp , upd -> strings [ S_BEGIN ] . data , j + 1 )"	6738:26:240719:240760	2584736	1	True				
ANR	2586436	CallExpression	"memcpy ( bp , upd -> strings [ S_BEGIN ] . data , j + 1 )"		2584736	0					
ANR	2586437	Callee	memcpy		2584736	0					
ANR	2586438	Identifier	memcpy		2584736	0					
ANR	2586439	ArgumentList	bp		2584736	1					
ANR	2586440	Argument	bp		2584736	0					
ANR	2586441	Identifier	bp		2584736	0					
ANR	2586442	Argument	upd -> strings [ S_BEGIN ] . data		2584736	1					
ANR	2586443	MemberAccess	upd -> strings [ S_BEGIN ] . data		2584736	0					
ANR	2586444	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2586445	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2586446	Identifier	upd		2584736	0					
ANR	2586447	Identifier	strings		2584736	1					
ANR	2586448	Identifier	S_BEGIN		2584736	1					
ANR	2586449	Identifier	data		2584736	1					
ANR	2586450	Argument	j + 1		2584736	2					
ANR	2586451	AdditiveExpression	j + 1		2584736	0		+			
ANR	2586452	Identifier	j		2584736	0					
ANR	2586453	PrimaryExpression	1		2584736	1					
ANR	2586454	ExpressionStatement	"memcpy ( bp + j + 1 , cv , ncv )"	6739:15:240777:240802	2584736	5	True				
ANR	2586455	CallExpression	"memcpy ( bp + j + 1 , cv , ncv )"		2584736	0					
ANR	2586456	Callee	memcpy		2584736	0					
ANR	2586457	Identifier	memcpy		2584736	0					
ANR	2586458	ArgumentList	bp + j + 1		2584736	1					
ANR	2586459	Argument	bp + j + 1		2584736	0					
ANR	2586460	AdditiveExpression	bp + j + 1		2584736	0		+			
ANR	2586461	Identifier	bp		2584736	0					
ANR	2586462	AdditiveExpression	j + 1		2584736	1		+			
ANR	2586463	Identifier	j		2584736	0					
ANR	2586464	PrimaryExpression	1		2584736	1					
ANR	2586465	Argument	cv		2584736	1					
ANR	2586466	Identifier	cv		2584736	0					
ANR	2586467	Argument	ncv		2584736	2					
ANR	2586468	Identifier	ncv		2584736	0					
ANR	2586469	ExpressionStatement	"memcpy ( bp + j + 1 + ncv , upd -> strings [ S_BEGIN ] . data + i , upd -> strings [ S_BEGIN ] . size - i )"	6740:15:240819:240927	2584736	6	True				
ANR	2586470	CallExpression	"memcpy ( bp + j + 1 + ncv , upd -> strings [ S_BEGIN ] . data + i , upd -> strings [ S_BEGIN ] . size - i )"		2584736	0					
ANR	2586471	Callee	memcpy		2584736	0					
ANR	2586472	Identifier	memcpy		2584736	0					
ANR	2586473	ArgumentList	bp + j + 1 + ncv		2584736	1					
ANR	2586474	Argument	bp + j + 1 + ncv		2584736	0					
ANR	2586475	AdditiveExpression	bp + j + 1 + ncv		2584736	0		+			
ANR	2586476	Identifier	bp		2584736	0					
ANR	2586477	AdditiveExpression	j + 1 + ncv		2584736	1		+			
ANR	2586478	Identifier	j		2584736	0					
ANR	2586479	AdditiveExpression	1 + ncv		2584736	1		+			
ANR	2586480	PrimaryExpression	1		2584736	0					
ANR	2586481	Identifier	ncv		2584736	1					
ANR	2586482	Argument	upd -> strings [ S_BEGIN ] . data + i		2584736	1					
ANR	2586483	AdditiveExpression	upd -> strings [ S_BEGIN ] . data + i		2584736	0		+			
ANR	2586484	MemberAccess	upd -> strings [ S_BEGIN ] . data		2584736	0					
ANR	2586485	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2586486	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2586487	Identifier	upd		2584736	0					
ANR	2586488	Identifier	strings		2584736	1					
ANR	2586489	Identifier	S_BEGIN		2584736	1					
ANR	2586490	Identifier	data		2584736	1					
ANR	2586491	Identifier	i		2584736	1					
ANR	2586492	Argument	upd -> strings [ S_BEGIN ] . size - i		2584736	2					
ANR	2586493	AdditiveExpression	upd -> strings [ S_BEGIN ] . size - i		2584736	0		-			
ANR	2586494	MemberAccess	upd -> strings [ S_BEGIN ] . size		2584736	0					
ANR	2586495	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2586496	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2586497	Identifier	upd		2584736	0					
ANR	2586498	Identifier	strings		2584736	1					
ANR	2586499	Identifier	S_BEGIN		2584736	1					
ANR	2586500	Identifier	size		2584736	1					
ANR	2586501	Identifier	i		2584736	1					
ANR	2586502	ExpressionStatement	i = j + 1 + ncv	6742:15:240944:240955	2584736	7	True				
ANR	2586503	AssignmentExpression	i = j + 1 + ncv		2584736	0		=			
ANR	2586504	Identifier	i		2584736	0					
ANR	2586505	AdditiveExpression	j + 1 + ncv		2584736	1		+			
ANR	2586506	Identifier	j		2584736	0					
ANR	2586507	AdditiveExpression	1 + ncv		2584736	1		+			
ANR	2586508	PrimaryExpression	1		2584736	0					
ANR	2586509	Identifier	ncv		2584736	1					
ANR	2586510	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_BEGIN ] )"	6743:15:240972:241025	2584736	8	True				
ANR	2586511	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_BEGIN ] )"		2584736	0					
ANR	2586512	Callee	UPD_MM_DEL_PARAM		2584736	0					
ANR	2586513	Identifier	UPD_MM_DEL_PARAM		2584736	0					
ANR	2586514	ArgumentList	udev -> memory		2584736	1					
ANR	2586515	Argument	udev -> memory		2584736	0					
ANR	2586516	PtrMemberAccess	udev -> memory		2584736	0					
ANR	2586517	Identifier	udev		2584736	0					
ANR	2586518	Identifier	memory		2584736	1					
ANR	2586519	Argument	upd -> strings [ S_BEGIN ]		2584736	1					
ANR	2586520	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2586521	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2586522	Identifier	upd		2584736	0					
ANR	2586523	Identifier	strings		2584736	1					
ANR	2586524	Identifier	S_BEGIN		2584736	1					
ANR	2586525	ExpressionStatement	upd -> strings [ S_BEGIN ] . data = bp	6744:15:241042:241073	2584736	9	True				
ANR	2586526	AssignmentExpression	upd -> strings [ S_BEGIN ] . data = bp		2584736	0		=			
ANR	2586527	MemberAccess	upd -> strings [ S_BEGIN ] . data		2584736	0					
ANR	2586528	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2586529	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2586530	Identifier	upd		2584736	0					
ANR	2586531	Identifier	strings		2584736	1					
ANR	2586532	Identifier	S_BEGIN		2584736	1					
ANR	2586533	Identifier	data		2584736	1					
ANR	2586534	Identifier	bp		2584736	1					
ANR	2586535	ExpressionStatement	upd -> strings [ S_BEGIN ] . size = nbp	6745:15:241090:241122	2584736	10	True				
ANR	2586536	AssignmentExpression	upd -> strings [ S_BEGIN ] . size = nbp		2584736	0		=			
ANR	2586537	MemberAccess	upd -> strings [ S_BEGIN ] . size		2584736	0					
ANR	2586538	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2586539	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2586540	Identifier	upd		2584736	0					
ANR	2586541	Identifier	strings		2584736	1					
ANR	2586542	Identifier	S_BEGIN		2584736	1					
ANR	2586543	Identifier	size		2584736	1					
ANR	2586544	Identifier	nbp		2584736	1					
ANR	2586545	IfStatement	if ( c == 0x0a )		2584736	1					
ANR	2586546	Condition	c == 0x0a	6748:17:241212:241220	2584736	0	True				
ANR	2586547	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2586548	Identifier	c		2584736	0					
ANR	2586549	PrimaryExpression	0x0a		2584736	1					
ANR	2586550	ExpressionStatement	state = 12	6748:29:241224:241234	2584736	1	True				
ANR	2586551	AssignmentExpression	state = 12		2584736	0		=			
ANR	2586552	Identifier	state		2584736	0					
ANR	2586553	PrimaryExpression	12		2584736	1					
ANR	2586554	ElseStatement	else		2584736	0					
ANR	2586555	ExpressionStatement	state = 18	6749:29:241265:241275	2584736	0	True				
ANR	2586556	AssignmentExpression	state = 18		2584736	0		=			
ANR	2586557	Identifier	state		2584736	0					
ANR	2586558	PrimaryExpression	18		2584736	1					
ANR	2586559	BreakStatement	break ;	6751:9:241299:241304	2584736	114	True				
ANR	2586560	Label	case 36 :	6753:9:241316:241323	2584736	115	True				
ANR	2586561	IfStatement	if ( ( c == 0x49 ) || ( c == 0x69 ) )		2584736	116					
ANR	2586562	Condition	( c == 0x49 ) || ( c == 0x69 )	6754:19:241371:241396	2584736	0	True				
ANR	2586563	OrExpression	( c == 0x49 ) || ( c == 0x69 )		2584736	0		||			
ANR	2586564	EqualityExpression	c == 0x49		2584736	0		==			
ANR	2586565	Identifier	c		2584736	0					
ANR	2586566	PrimaryExpression	0x49		2584736	1					
ANR	2586567	EqualityExpression	c == 0x69		2584736	1		==			
ANR	2586568	Identifier	c		2584736	0					
ANR	2586569	PrimaryExpression	0x69		2584736	1					
ANR	2586570	ExpressionStatement	state = 37	6754:47:241399:241409	2584736	1	True				
ANR	2586571	AssignmentExpression	state = 37		2584736	0		=			
ANR	2586572	Identifier	state		2584736	0					
ANR	2586573	PrimaryExpression	37		2584736	1					
ANR	2586574	ElseStatement	else		2584736	0					
ANR	2586575	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2586576	Condition	c == 0x0a	6755:20:241449:241457	2584736	0	True				
ANR	2586577	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2586578	Identifier	c		2584736	0					
ANR	2586579	PrimaryExpression	0x0a		2584736	1					
ANR	2586580	ExpressionStatement	state = 12	6755:47:241476:241486	2584736	1	True				
ANR	2586581	AssignmentExpression	state = 12		2584736	0		=			
ANR	2586582	Identifier	state		2584736	0					
ANR	2586583	PrimaryExpression	12		2584736	1					
ANR	2586584	ElseStatement	else		2584736	0					
ANR	2586585	ExpressionStatement	state = 18	6756:47:241545:241555	2584736	0	True				
ANR	2586586	AssignmentExpression	state = 18		2584736	0		=			
ANR	2586587	Identifier	state		2584736	0					
ANR	2586588	PrimaryExpression	18		2584736	1					
ANR	2586589	BreakStatement	break ;	6757:9:241566:241571	2584736	117	True				
ANR	2586590	Label	case 37 :	6759:9:241583:241590	2584736	118	True				
ANR	2586591	IfStatement	if ( ( c == 0x44 ) || ( c == 0x64 ) )		2584736	119					
ANR	2586592	Condition	( c == 0x44 ) || ( c == 0x64 )	6760:19:241637:241662	2584736	0	True				
ANR	2586593	OrExpression	( c == 0x44 ) || ( c == 0x64 )		2584736	0		||			
ANR	2586594	EqualityExpression	c == 0x44		2584736	0		==			
ANR	2586595	Identifier	c		2584736	0					
ANR	2586596	PrimaryExpression	0x44		2584736	1					
ANR	2586597	EqualityExpression	c == 0x64		2584736	1		==			
ANR	2586598	Identifier	c		2584736	0					
ANR	2586599	PrimaryExpression	0x64		2584736	1					
ANR	2586600	ExpressionStatement	state = 38	6760:47:241665:241675	2584736	1	True				
ANR	2586601	AssignmentExpression	state = 38		2584736	0		=			
ANR	2586602	Identifier	state		2584736	0					
ANR	2586603	PrimaryExpression	38		2584736	1					
ANR	2586604	ElseStatement	else		2584736	0					
ANR	2586605	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2586606	Condition	c == 0x0a	6761:20:241716:241724	2584736	0	True				
ANR	2586607	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2586608	Identifier	c		2584736	0					
ANR	2586609	PrimaryExpression	0x0a		2584736	1					
ANR	2586610	ExpressionStatement	state = 12	6761:47:241743:241753	2584736	1	True				
ANR	2586611	AssignmentExpression	state = 12		2584736	0		=			
ANR	2586612	Identifier	state		2584736	0					
ANR	2586613	PrimaryExpression	12		2584736	1					
ANR	2586614	ElseStatement	else		2584736	0					
ANR	2586615	ExpressionStatement	state = 18	6762:47:241812:241822	2584736	0	True				
ANR	2586616	AssignmentExpression	state = 18		2584736	0		=			
ANR	2586617	Identifier	state		2584736	0					
ANR	2586618	PrimaryExpression	18		2584736	1					
ANR	2586619	BreakStatement	break ;	6763:9:241833:241838	2584736	120	True				
ANR	2586620	Label	case 38 :	6765:9:241850:241857	2584736	121	True				
ANR	2586621	IfStatement	if ( ( c == 0x54 ) || ( c == 0x74 ) )		2584736	122					
ANR	2586622	Condition	( c == 0x54 ) || ( c == 0x74 )	6766:19:241905:241930	2584736	0	True				
ANR	2586623	OrExpression	( c == 0x54 ) || ( c == 0x74 )		2584736	0		||			
ANR	2586624	EqualityExpression	c == 0x54		2584736	0		==			
ANR	2586625	Identifier	c		2584736	0					
ANR	2586626	PrimaryExpression	0x54		2584736	1					
ANR	2586627	EqualityExpression	c == 0x74		2584736	1		==			
ANR	2586628	Identifier	c		2584736	0					
ANR	2586629	PrimaryExpression	0x74		2584736	1					
ANR	2586630	ExpressionStatement	state = 39	6766:47:241933:241943	2584736	1	True				
ANR	2586631	AssignmentExpression	state = 39		2584736	0		=			
ANR	2586632	Identifier	state		2584736	0					
ANR	2586633	PrimaryExpression	39		2584736	1					
ANR	2586634	ElseStatement	else		2584736	0					
ANR	2586635	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2586636	Condition	c == 0x0a	6767:20:241985:241993	2584736	0	True				
ANR	2586637	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2586638	Identifier	c		2584736	0					
ANR	2586639	PrimaryExpression	0x0a		2584736	1					
ANR	2586640	ExpressionStatement	state = 12	6767:47:242012:242022	2584736	1	True				
ANR	2586641	AssignmentExpression	state = 12		2584736	0		=			
ANR	2586642	Identifier	state		2584736	0					
ANR	2586643	PrimaryExpression	12		2584736	1					
ANR	2586644	ElseStatement	else		2584736	0					
ANR	2586645	ExpressionStatement	state = 18	6768:47:242081:242091	2584736	0	True				
ANR	2586646	AssignmentExpression	state = 18		2584736	0		=			
ANR	2586647	Identifier	state		2584736	0					
ANR	2586648	PrimaryExpression	18		2584736	1					
ANR	2586649	BreakStatement	break ;	6769:9:242102:242107	2584736	123	True				
ANR	2586650	Label	case 39 :	6771:9:242119:242126	2584736	124	True				
ANR	2586651	IfStatement	if ( ( c == 0x48 ) || ( c == 0x68 ) )		2584736	125					
ANR	2586652	Condition	( c == 0x48 ) || ( c == 0x68 )	6772:19:242174:242199	2584736	0	True				
ANR	2586653	OrExpression	( c == 0x48 ) || ( c == 0x68 )		2584736	0		||			
ANR	2586654	EqualityExpression	c == 0x48		2584736	0		==			
ANR	2586655	Identifier	c		2584736	0					
ANR	2586656	PrimaryExpression	0x48		2584736	1					
ANR	2586657	EqualityExpression	c == 0x68		2584736	1		==			
ANR	2586658	Identifier	c		2584736	0					
ANR	2586659	PrimaryExpression	0x68		2584736	1					
ANR	2586660	ExpressionStatement	state = 52	6772:47:242202:242212	2584736	1	True				
ANR	2586661	AssignmentExpression	state = 52		2584736	0		=			
ANR	2586662	Identifier	state		2584736	0					
ANR	2586663	PrimaryExpression	52		2584736	1					
ANR	2586664	ElseStatement	else		2584736	0					
ANR	2586665	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2586666	Condition	c == 0x0a	6773:20:242255:242263	2584736	0	True				
ANR	2586667	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2586668	Identifier	c		2584736	0					
ANR	2586669	PrimaryExpression	0x0a		2584736	1					
ANR	2586670	ExpressionStatement	state = 12	6773:47:242282:242292	2584736	1	True				
ANR	2586671	AssignmentExpression	state = 12		2584736	0		=			
ANR	2586672	Identifier	state		2584736	0					
ANR	2586673	PrimaryExpression	12		2584736	1					
ANR	2586674	ElseStatement	else		2584736	0					
ANR	2586675	ExpressionStatement	state = 18	6774:47:242351:242361	2584736	0	True				
ANR	2586676	AssignmentExpression	state = 18		2584736	0		=			
ANR	2586677	Identifier	state		2584736	0					
ANR	2586678	PrimaryExpression	18		2584736	1					
ANR	2586679	BreakStatement	break ;	6775:9:242372:242377	2584736	126	True				
ANR	2586680	Label	case 52 :	6777:9:242389:242396	2584736	127	True				
ANR	2586681	ExpressionStatement	j = i	6778:11:242436:242441	2584736	128	True				
ANR	2586682	AssignmentExpression	j = i		2584736	0		=			
ANR	2586683	Identifier	j		2584736	0					
ANR	2586684	Identifier	i		2584736	1					
ANR	2586685	IfStatement	if ( c == 0x3d )		2584736	129					
ANR	2586686	Condition	c == 0x3d	6779:20:242517:242525	2584736	0	True				
ANR	2586687	EqualityExpression	c == 0x3d		2584736	0		==			
ANR	2586688	Identifier	c		2584736	0					
ANR	2586689	PrimaryExpression	0x3d		2584736	1					
ANR	2586690	ExpressionStatement	state = 53	6779:47:242544:242554	2584736	1	True				
ANR	2586691	AssignmentExpression	state = 53		2584736	0		=			
ANR	2586692	Identifier	state		2584736	0					
ANR	2586693	PrimaryExpression	53		2584736	1					
ANR	2586694	ElseStatement	else		2584736	0					
ANR	2586695	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2586696	Condition	c == 0x0a	6780:20:242597:242605	2584736	0	True				
ANR	2586697	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2586698	Identifier	c		2584736	0					
ANR	2586699	PrimaryExpression	0x0a		2584736	1					
ANR	2586700	ExpressionStatement	state = 12	6780:47:242624:242634	2584736	1	True				
ANR	2586701	AssignmentExpression	state = 12		2584736	0		=			
ANR	2586702	Identifier	state		2584736	0					
ANR	2586703	PrimaryExpression	12		2584736	1					
ANR	2586704	ElseStatement	else		2584736	0					
ANR	2586705	IfStatement	if ( ( c != 0x20 ) && ( c != 0x09 ) )		2584736	0					
ANR	2586706	Condition	( c != 0x20 ) && ( c != 0x09 )	6781:19:242665:242690	2584736	0	True				
ANR	2586707	AndExpression	( c != 0x20 ) && ( c != 0x09 )		2584736	0		&&			
ANR	2586708	EqualityExpression	c != 0x20		2584736	0		!=			
ANR	2586709	Identifier	c		2584736	0					
ANR	2586710	PrimaryExpression	0x20		2584736	1					
ANR	2586711	EqualityExpression	c != 0x09		2584736	1		!=			
ANR	2586712	Identifier	c		2584736	0					
ANR	2586713	PrimaryExpression	0x09		2584736	1					
ANR	2586714	ExpressionStatement	state = 18	6781:47:242693:242703	2584736	1	True				
ANR	2586715	AssignmentExpression	state = 18		2584736	0		=			
ANR	2586716	Identifier	state		2584736	0					
ANR	2586717	PrimaryExpression	18		2584736	1					
ANR	2586718	BreakStatement	break ;	6782:9:242714:242719	2584736	130	True				
ANR	2586719	Label	case 53 :	6784:9:242731:242738	2584736	131	True				
ANR	2586720	IfStatement	if ( c == 0x0a )		2584736	132					
ANR	2586721	Condition	c == 0x0a	6785:19:242790:242798	2584736	0	True				
ANR	2586722	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2586723	Identifier	c		2584736	0					
ANR	2586724	PrimaryExpression	0x0a		2584736	1					
ANR	2586725	ExpressionStatement	state = 12	6785:47:242818:242828	2584736	1	True				
ANR	2586726	AssignmentExpression	state = 12		2584736	0		=			
ANR	2586727	Identifier	state		2584736	0					
ANR	2586728	PrimaryExpression	12		2584736	1					
ANR	2586729	ElseStatement	else		2584736	0					
ANR	2586730	IfStatement	if ( ( c == 0x20 ) || ( c == 0x09 ) )		2584736	0					
ANR	2586731	Condition	( c == 0x20 ) || ( c == 0x09 )	6786:19:242849:242874	2584736	0	True				
ANR	2586732	OrExpression	( c == 0x20 ) || ( c == 0x09 )		2584736	0		||			
ANR	2586733	EqualityExpression	c == 0x20		2584736	0		==			
ANR	2586734	Identifier	c		2584736	0					
ANR	2586735	PrimaryExpression	0x20		2584736	1					
ANR	2586736	EqualityExpression	c == 0x09		2584736	1		==			
ANR	2586737	Identifier	c		2584736	0					
ANR	2586738	PrimaryExpression	0x09		2584736	1					
ANR	2586739	ExpressionStatement	j = i	6786:47:242877:242886	2584736	1	True				
ANR	2586740	AssignmentExpression	j = i		2584736	0		=			
ANR	2586741	Identifier	j		2584736	0					
ANR	2586742	Identifier	i		2584736	1					
ANR	2586743	ElseStatement	else		2584736	0					
ANR	2586744	IfStatement	if ( ( 0x30 > c ) || ( c > 0x39 ) )		2584736	0					
ANR	2586745	Condition	( 0x30 > c ) || ( c > 0x39 )	6787:19:242907:242932	2584736	0	True				
ANR	2586746	OrExpression	( 0x30 > c ) || ( c > 0x39 )		2584736	0		||			
ANR	2586747	RelationalExpression	0x30 > c		2584736	0		>			
ANR	2586748	PrimaryExpression	0x30		2584736	0					
ANR	2586749	Identifier	c		2584736	1					
ANR	2586750	RelationalExpression	c > 0x39		2584736	1		>			
ANR	2586751	Identifier	c		2584736	0					
ANR	2586752	PrimaryExpression	0x39		2584736	1					
ANR	2586753	ExpressionStatement	state = 18	6787:47:242935:242945	2584736	1	True				
ANR	2586754	AssignmentExpression	state = 18		2584736	0		=			
ANR	2586755	Identifier	state		2584736	0					
ANR	2586756	PrimaryExpression	18		2584736	1					
ANR	2586757	ElseStatement	else		2584736	0					
ANR	2586758	ExpressionStatement	state = 40	6788:47:242994:243004	2584736	0	True				
ANR	2586759	AssignmentExpression	state = 40		2584736	0		=			
ANR	2586760	Identifier	state		2584736	0					
ANR	2586761	PrimaryExpression	40		2584736	1					
ANR	2586762	BreakStatement	break ;	6789:9:243015:243020	2584736	133	True				
ANR	2586763	Label	case 40 :	6791:9:243032:243039	2584736	134	True				
ANR	2586764	IfStatement	if ( ( 0x30 > c ) || ( c > 0x39 ) )		2584736	135					
ANR	2586765	Condition	( 0x30 > c ) || ( c > 0x39 )	6792:14:243082:243105	2584736	0	True				
ANR	2586766	OrExpression	( 0x30 > c ) || ( c > 0x39 )		2584736	0		||			
ANR	2586767	RelationalExpression	0x30 > c		2584736	0		>			
ANR	2586768	PrimaryExpression	0x30		2584736	0					
ANR	2586769	Identifier	c		2584736	1					
ANR	2586770	RelationalExpression	c > 0x39		2584736	1		>			
ANR	2586771	Identifier	c		2584736	0					
ANR	2586772	PrimaryExpression	0x39		2584736	1					
ANR	2586773	CompoundStatement		362:40:13907:13907	2584736	1					
ANR	2586774	IfStatement	if ( B_PAGEWIDTH & upd -> flags )		2584736	0					
ANR	2586775	Condition	B_PAGEWIDTH & upd -> flags	6794:16:243147:243171	2584736	0	True				
ANR	2586776	BitAndExpression	B_PAGEWIDTH & upd -> flags		2584736	0		&			
ANR	2586777	Identifier	B_PAGEWIDTH		2584736	0					
ANR	2586778	PtrMemberAccess	upd -> flags		2584736	1					
ANR	2586779	Identifier	upd		2584736	0					
ANR	2586780	Identifier	flags		2584736	1					
ANR	2586781	CompoundStatement		364:43:13973:13973	2584736	1					
ANR	2586782	ExpressionStatement	"gs_sprintf ( cv , ""%d"" , ( int ) ( 720.0 * udev -> width / udev -> x_pixels_per_inch + 0.5 ) )"	6796:15:243216:243312	2584736	0	True				
ANR	2586783	CallExpression	"gs_sprintf ( cv , ""%d"" , ( int ) ( 720.0 * udev -> width / udev -> x_pixels_per_inch + 0.5 ) )"		2584736	0					
ANR	2586784	Callee	gs_sprintf		2584736	0					
ANR	2586785	Identifier	gs_sprintf		2584736	0					
ANR	2586786	ArgumentList	cv		2584736	1					
ANR	2586787	Argument	cv		2584736	0					
ANR	2586788	Identifier	cv		2584736	0					
ANR	2586789	Argument	"""%d"""		2584736	1					
ANR	2586790	PrimaryExpression	"""%d"""		2584736	0					
ANR	2586791	Argument	( int ) ( 720.0 * udev -> width / udev -> x_pixels_per_inch + 0.5 )		2584736	2					
ANR	2586792	CastExpression	( int ) ( 720.0 * udev -> width / udev -> x_pixels_per_inch + 0.5 )		2584736	0					
ANR	2586793	CastTarget	int		2584736	0					
ANR	2586794	AdditiveExpression	720.0 * udev -> width / udev -> x_pixels_per_inch + 0.5		2584736	1		+			
ANR	2586795	MultiplicativeExpression	720.0 * udev -> width / udev -> x_pixels_per_inch		2584736	0		*			
ANR	2586796	PrimaryExpression	720.0		2584736	0					
ANR	2586797	MultiplicativeExpression	udev -> width / udev -> x_pixels_per_inch		2584736	1		/			
ANR	2586798	PtrMemberAccess	udev -> width		2584736	0					
ANR	2586799	Identifier	udev		2584736	0					
ANR	2586800	Identifier	width		2584736	1					
ANR	2586801	PtrMemberAccess	udev -> x_pixels_per_inch		2584736	1					
ANR	2586802	Identifier	udev		2584736	0					
ANR	2586803	Identifier	x_pixels_per_inch		2584736	1					
ANR	2586804	PrimaryExpression	0.5		2584736	1					
ANR	2586805	ExpressionStatement	ncv = strlen ( cv )	6798:15:243329:243345	2584736	1	True				
ANR	2586806	AssignmentExpression	ncv = strlen ( cv )		2584736	0		=			
ANR	2586807	Identifier	ncv		2584736	0					
ANR	2586808	CallExpression	strlen ( cv )		2584736	1					
ANR	2586809	Callee	strlen		2584736	0					
ANR	2586810	Identifier	strlen		2584736	0					
ANR	2586811	ArgumentList	cv		2584736	1					
ANR	2586812	Argument	cv		2584736	0					
ANR	2586813	Identifier	cv		2584736	0					
ANR	2586814	ExpressionStatement	nbp = ( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )	6800:15:243363:243413	2584736	2	True				
ANR	2586815	AssignmentExpression	nbp = ( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )		2584736	0		=			
ANR	2586816	Identifier	nbp		2584736	0					
ANR	2586817	AdditiveExpression	( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )		2584736	1		+			
ANR	2586818	AdditiveExpression	j + 1		2584736	0		+			
ANR	2586819	Identifier	j		2584736	0					
ANR	2586820	PrimaryExpression	1		2584736	1					
ANR	2586821	AdditiveExpression	ncv + ( upd -> strings [ S_BEGIN ] . size - i )		2584736	1		+			
ANR	2586822	Identifier	ncv		2584736	0					
ANR	2586823	AdditiveExpression	upd -> strings [ S_BEGIN ] . size - i		2584736	1		-			
ANR	2586824	MemberAccess	upd -> strings [ S_BEGIN ] . size		2584736	0					
ANR	2586825	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2586826	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2586827	Identifier	upd		2584736	0					
ANR	2586828	Identifier	strings		2584736	1					
ANR	2586829	Identifier	S_BEGIN		2584736	1					
ANR	2586830	Identifier	size		2584736	1					
ANR	2586831	Identifier	i		2584736	1					
ANR	2586832	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , bp , nbp )"	6801:15:243430:243468	2584736	3	True				
ANR	2586833	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , bp , nbp )"		2584736	0					
ANR	2586834	Callee	UPD_MM_GET_ARRAY		2584736	0					
ANR	2586835	Identifier	UPD_MM_GET_ARRAY		2584736	0					
ANR	2586836	ArgumentList	udev -> memory		2584736	1					
ANR	2586837	Argument	udev -> memory		2584736	0					
ANR	2586838	PtrMemberAccess	udev -> memory		2584736	0					
ANR	2586839	Identifier	udev		2584736	0					
ANR	2586840	Identifier	memory		2584736	1					
ANR	2586841	Argument	bp		2584736	1					
ANR	2586842	Identifier	bp		2584736	0					
ANR	2586843	Argument	nbp		2584736	2					
ANR	2586844	Identifier	nbp		2584736	0					
ANR	2586845	IfStatement	if ( 0 <= j )		2584736	4					
ANR	2586846	Condition	0 <= j	6803:18:243489:243494	2584736	0	True				
ANR	2586847	RelationalExpression	0 <= j		2584736	0		<=			
ANR	2586848	PrimaryExpression	0		2584736	0					
ANR	2586849	Identifier	j		2584736	1					
ANR	2586850	ExpressionStatement	"memcpy ( bp , upd -> strings [ S_BEGIN ] . data , j + 1 )"	6803:26:243497:243538	2584736	1	True				
ANR	2586851	CallExpression	"memcpy ( bp , upd -> strings [ S_BEGIN ] . data , j + 1 )"		2584736	0					
ANR	2586852	Callee	memcpy		2584736	0					
ANR	2586853	Identifier	memcpy		2584736	0					
ANR	2586854	ArgumentList	bp		2584736	1					
ANR	2586855	Argument	bp		2584736	0					
ANR	2586856	Identifier	bp		2584736	0					
ANR	2586857	Argument	upd -> strings [ S_BEGIN ] . data		2584736	1					
ANR	2586858	MemberAccess	upd -> strings [ S_BEGIN ] . data		2584736	0					
ANR	2586859	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2586860	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2586861	Identifier	upd		2584736	0					
ANR	2586862	Identifier	strings		2584736	1					
ANR	2586863	Identifier	S_BEGIN		2584736	1					
ANR	2586864	Identifier	data		2584736	1					
ANR	2586865	Argument	j + 1		2584736	2					
ANR	2586866	AdditiveExpression	j + 1		2584736	0		+			
ANR	2586867	Identifier	j		2584736	0					
ANR	2586868	PrimaryExpression	1		2584736	1					
ANR	2586869	ExpressionStatement	"memcpy ( bp + j + 1 , cv , ncv )"	6804:15:243555:243580	2584736	5	True				
ANR	2586870	CallExpression	"memcpy ( bp + j + 1 , cv , ncv )"		2584736	0					
ANR	2586871	Callee	memcpy		2584736	0					
ANR	2586872	Identifier	memcpy		2584736	0					
ANR	2586873	ArgumentList	bp + j + 1		2584736	1					
ANR	2586874	Argument	bp + j + 1		2584736	0					
ANR	2586875	AdditiveExpression	bp + j + 1		2584736	0		+			
ANR	2586876	Identifier	bp		2584736	0					
ANR	2586877	AdditiveExpression	j + 1		2584736	1		+			
ANR	2586878	Identifier	j		2584736	0					
ANR	2586879	PrimaryExpression	1		2584736	1					
ANR	2586880	Argument	cv		2584736	1					
ANR	2586881	Identifier	cv		2584736	0					
ANR	2586882	Argument	ncv		2584736	2					
ANR	2586883	Identifier	ncv		2584736	0					
ANR	2586884	ExpressionStatement	"memcpy ( bp + j + 1 + ncv , upd -> strings [ S_BEGIN ] . data + i , upd -> strings [ S_BEGIN ] . size - i )"	6805:15:243597:243705	2584736	6	True				
ANR	2586885	CallExpression	"memcpy ( bp + j + 1 + ncv , upd -> strings [ S_BEGIN ] . data + i , upd -> strings [ S_BEGIN ] . size - i )"		2584736	0					
ANR	2586886	Callee	memcpy		2584736	0					
ANR	2586887	Identifier	memcpy		2584736	0					
ANR	2586888	ArgumentList	bp + j + 1 + ncv		2584736	1					
ANR	2586889	Argument	bp + j + 1 + ncv		2584736	0					
ANR	2586890	AdditiveExpression	bp + j + 1 + ncv		2584736	0		+			
ANR	2586891	Identifier	bp		2584736	0					
ANR	2586892	AdditiveExpression	j + 1 + ncv		2584736	1		+			
ANR	2586893	Identifier	j		2584736	0					
ANR	2586894	AdditiveExpression	1 + ncv		2584736	1		+			
ANR	2586895	PrimaryExpression	1		2584736	0					
ANR	2586896	Identifier	ncv		2584736	1					
ANR	2586897	Argument	upd -> strings [ S_BEGIN ] . data + i		2584736	1					
ANR	2586898	AdditiveExpression	upd -> strings [ S_BEGIN ] . data + i		2584736	0		+			
ANR	2586899	MemberAccess	upd -> strings [ S_BEGIN ] . data		2584736	0					
ANR	2586900	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2586901	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2586902	Identifier	upd		2584736	0					
ANR	2586903	Identifier	strings		2584736	1					
ANR	2586904	Identifier	S_BEGIN		2584736	1					
ANR	2586905	Identifier	data		2584736	1					
ANR	2586906	Identifier	i		2584736	1					
ANR	2586907	Argument	upd -> strings [ S_BEGIN ] . size - i		2584736	2					
ANR	2586908	AdditiveExpression	upd -> strings [ S_BEGIN ] . size - i		2584736	0		-			
ANR	2586909	MemberAccess	upd -> strings [ S_BEGIN ] . size		2584736	0					
ANR	2586910	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2586911	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2586912	Identifier	upd		2584736	0					
ANR	2586913	Identifier	strings		2584736	1					
ANR	2586914	Identifier	S_BEGIN		2584736	1					
ANR	2586915	Identifier	size		2584736	1					
ANR	2586916	Identifier	i		2584736	1					
ANR	2586917	ExpressionStatement	i = j + 1 + ncv	6807:15:243722:243733	2584736	7	True				
ANR	2586918	AssignmentExpression	i = j + 1 + ncv		2584736	0		=			
ANR	2586919	Identifier	i		2584736	0					
ANR	2586920	AdditiveExpression	j + 1 + ncv		2584736	1		+			
ANR	2586921	Identifier	j		2584736	0					
ANR	2586922	AdditiveExpression	1 + ncv		2584736	1		+			
ANR	2586923	PrimaryExpression	1		2584736	0					
ANR	2586924	Identifier	ncv		2584736	1					
ANR	2586925	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_BEGIN ] )"	6808:15:243750:243803	2584736	8	True				
ANR	2586926	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_BEGIN ] )"		2584736	0					
ANR	2586927	Callee	UPD_MM_DEL_PARAM		2584736	0					
ANR	2586928	Identifier	UPD_MM_DEL_PARAM		2584736	0					
ANR	2586929	ArgumentList	udev -> memory		2584736	1					
ANR	2586930	Argument	udev -> memory		2584736	0					
ANR	2586931	PtrMemberAccess	udev -> memory		2584736	0					
ANR	2586932	Identifier	udev		2584736	0					
ANR	2586933	Identifier	memory		2584736	1					
ANR	2586934	Argument	upd -> strings [ S_BEGIN ]		2584736	1					
ANR	2586935	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2586936	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2586937	Identifier	upd		2584736	0					
ANR	2586938	Identifier	strings		2584736	1					
ANR	2586939	Identifier	S_BEGIN		2584736	1					
ANR	2586940	ExpressionStatement	upd -> strings [ S_BEGIN ] . data = bp	6809:15:243820:243851	2584736	9	True				
ANR	2586941	AssignmentExpression	upd -> strings [ S_BEGIN ] . data = bp		2584736	0		=			
ANR	2586942	MemberAccess	upd -> strings [ S_BEGIN ] . data		2584736	0					
ANR	2586943	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2586944	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2586945	Identifier	upd		2584736	0					
ANR	2586946	Identifier	strings		2584736	1					
ANR	2586947	Identifier	S_BEGIN		2584736	1					
ANR	2586948	Identifier	data		2584736	1					
ANR	2586949	Identifier	bp		2584736	1					
ANR	2586950	ExpressionStatement	upd -> strings [ S_BEGIN ] . size = nbp	6810:15:243868:243900	2584736	10	True				
ANR	2586951	AssignmentExpression	upd -> strings [ S_BEGIN ] . size = nbp		2584736	0		=			
ANR	2586952	MemberAccess	upd -> strings [ S_BEGIN ] . size		2584736	0					
ANR	2586953	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2586954	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2586955	Identifier	upd		2584736	0					
ANR	2586956	Identifier	strings		2584736	1					
ANR	2586957	Identifier	S_BEGIN		2584736	1					
ANR	2586958	Identifier	size		2584736	1					
ANR	2586959	Identifier	nbp		2584736	1					
ANR	2586960	IfStatement	if ( c == 0x0a )		2584736	1					
ANR	2586961	Condition	c == 0x0a	6813:17:243990:243998	2584736	0	True				
ANR	2586962	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2586963	Identifier	c		2584736	0					
ANR	2586964	PrimaryExpression	0x0a		2584736	1					
ANR	2586965	ExpressionStatement	state = 12	6813:29:244002:244012	2584736	1	True				
ANR	2586966	AssignmentExpression	state = 12		2584736	0		=			
ANR	2586967	Identifier	state		2584736	0					
ANR	2586968	PrimaryExpression	12		2584736	1					
ANR	2586969	ElseStatement	else		2584736	0					
ANR	2586970	ExpressionStatement	state = 18	6814:29:244043:244053	2584736	0	True				
ANR	2586971	AssignmentExpression	state = 18		2584736	0		=			
ANR	2586972	Identifier	state		2584736	0					
ANR	2586973	PrimaryExpression	18		2584736	1					
ANR	2586974	BreakStatement	break ;	6816:9:244077:244082	2584736	136	True				
ANR	2586975	Label	case 41 :	6818:9:244094:244101	2584736	137	True				
ANR	2586976	IfStatement	if ( ( c == 0x45 ) || ( c == 0x65 ) )		2584736	138					
ANR	2586977	Condition	( c == 0x45 ) || ( c == 0x65 )	6819:19:244148:244173	2584736	0	True				
ANR	2586978	OrExpression	( c == 0x45 ) || ( c == 0x65 )		2584736	0		||			
ANR	2586979	EqualityExpression	c == 0x45		2584736	0		==			
ANR	2586980	Identifier	c		2584736	0					
ANR	2586981	PrimaryExpression	0x45		2584736	1					
ANR	2586982	EqualityExpression	c == 0x65		2584736	1		==			
ANR	2586983	Identifier	c		2584736	0					
ANR	2586984	PrimaryExpression	0x65		2584736	1					
ANR	2586985	ExpressionStatement	state = 42	6819:47:244176:244186	2584736	1	True				
ANR	2586986	AssignmentExpression	state = 42		2584736	0		=			
ANR	2586987	Identifier	state		2584736	0					
ANR	2586988	PrimaryExpression	42		2584736	1					
ANR	2586989	ElseStatement	else		2584736	0					
ANR	2586990	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2586991	Condition	c == 0x0a	6820:20:244221:244229	2584736	0	True				
ANR	2586992	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2586993	Identifier	c		2584736	0					
ANR	2586994	PrimaryExpression	0x0a		2584736	1					
ANR	2586995	ExpressionStatement	state = 12	6820:47:244248:244258	2584736	1	True				
ANR	2586996	AssignmentExpression	state = 12		2584736	0		=			
ANR	2586997	Identifier	state		2584736	0					
ANR	2586998	PrimaryExpression	12		2584736	1					
ANR	2586999	ElseStatement	else		2584736	0					
ANR	2587000	ExpressionStatement	state = 18	6821:47:244317:244327	2584736	0	True				
ANR	2587001	AssignmentExpression	state = 18		2584736	0		=			
ANR	2587002	Identifier	state		2584736	0					
ANR	2587003	PrimaryExpression	18		2584736	1					
ANR	2587004	BreakStatement	break ;	6822:9:244338:244343	2584736	139	True				
ANR	2587005	Label	case 42 :	6824:9:244355:244362	2584736	140	True				
ANR	2587006	IfStatement	if ( ( c == 0x53 ) || ( c == 0x73 ) )		2584736	141					
ANR	2587007	Condition	( c == 0x53 ) || ( c == 0x73 )	6825:19:244409:244434	2584736	0	True				
ANR	2587008	OrExpression	( c == 0x53 ) || ( c == 0x73 )		2584736	0		||			
ANR	2587009	EqualityExpression	c == 0x53		2584736	0		==			
ANR	2587010	Identifier	c		2584736	0					
ANR	2587011	PrimaryExpression	0x53		2584736	1					
ANR	2587012	EqualityExpression	c == 0x73		2584736	1		==			
ANR	2587013	Identifier	c		2584736	0					
ANR	2587014	PrimaryExpression	0x73		2584736	1					
ANR	2587015	ExpressionStatement	state = 43	6825:47:244437:244447	2584736	1	True				
ANR	2587016	AssignmentExpression	state = 43		2584736	0		=			
ANR	2587017	Identifier	state		2584736	0					
ANR	2587018	PrimaryExpression	43		2584736	1					
ANR	2587019	ElseStatement	else		2584736	0					
ANR	2587020	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2587021	Condition	c == 0x0a	6826:20:244483:244491	2584736	0	True				
ANR	2587022	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2587023	Identifier	c		2584736	0					
ANR	2587024	PrimaryExpression	0x0a		2584736	1					
ANR	2587025	ExpressionStatement	state = 12	6826:47:244510:244520	2584736	1	True				
ANR	2587026	AssignmentExpression	state = 12		2584736	0		=			
ANR	2587027	Identifier	state		2584736	0					
ANR	2587028	PrimaryExpression	12		2584736	1					
ANR	2587029	ElseStatement	else		2584736	0					
ANR	2587030	ExpressionStatement	state = 18	6827:47:244579:244589	2584736	0	True				
ANR	2587031	AssignmentExpression	state = 18		2584736	0		=			
ANR	2587032	Identifier	state		2584736	0					
ANR	2587033	PrimaryExpression	18		2584736	1					
ANR	2587034	BreakStatement	break ;	6828:9:244600:244605	2584736	142	True				
ANR	2587035	Label	case 43 :	6830:9:244617:244624	2584736	143	True				
ANR	2587036	IfStatement	if ( ( c == 0x4f ) || ( c == 0x6f ) )		2584736	144					
ANR	2587037	Condition	( c == 0x4f ) || ( c == 0x6f )	6831:19:244671:244696	2584736	0	True				
ANR	2587038	OrExpression	( c == 0x4f ) || ( c == 0x6f )		2584736	0		||			
ANR	2587039	EqualityExpression	c == 0x4f		2584736	0		==			
ANR	2587040	Identifier	c		2584736	0					
ANR	2587041	PrimaryExpression	0x4f		2584736	1					
ANR	2587042	EqualityExpression	c == 0x6f		2584736	1		==			
ANR	2587043	Identifier	c		2584736	0					
ANR	2587044	PrimaryExpression	0x6f		2584736	1					
ANR	2587045	ExpressionStatement	state = 44	6831:47:244699:244709	2584736	1	True				
ANR	2587046	AssignmentExpression	state = 44		2584736	0		=			
ANR	2587047	Identifier	state		2584736	0					
ANR	2587048	PrimaryExpression	44		2584736	1					
ANR	2587049	ElseStatement	else		2584736	0					
ANR	2587050	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2587051	Condition	c == 0x0a	6832:20:244746:244754	2584736	0	True				
ANR	2587052	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2587053	Identifier	c		2584736	0					
ANR	2587054	PrimaryExpression	0x0a		2584736	1					
ANR	2587055	ExpressionStatement	state = 12	6832:47:244773:244783	2584736	1	True				
ANR	2587056	AssignmentExpression	state = 12		2584736	0		=			
ANR	2587057	Identifier	state		2584736	0					
ANR	2587058	PrimaryExpression	12		2584736	1					
ANR	2587059	ElseStatement	else		2584736	0					
ANR	2587060	ExpressionStatement	state = 18	6833:47:244842:244852	2584736	0	True				
ANR	2587061	AssignmentExpression	state = 18		2584736	0		=			
ANR	2587062	Identifier	state		2584736	0					
ANR	2587063	PrimaryExpression	18		2584736	1					
ANR	2587064	BreakStatement	break ;	6834:9:244863:244868	2584736	145	True				
ANR	2587065	Label	case 44 :	6836:9:244880:244887	2584736	146	True				
ANR	2587066	IfStatement	if ( ( c == 0x4c ) || ( c == 0x6c ) )		2584736	147					
ANR	2587067	Condition	( c == 0x4c ) || ( c == 0x6c )	6837:19:244934:244959	2584736	0	True				
ANR	2587068	OrExpression	( c == 0x4c ) || ( c == 0x6c )		2584736	0		||			
ANR	2587069	EqualityExpression	c == 0x4c		2584736	0		==			
ANR	2587070	Identifier	c		2584736	0					
ANR	2587071	PrimaryExpression	0x4c		2584736	1					
ANR	2587072	EqualityExpression	c == 0x6c		2584736	1		==			
ANR	2587073	Identifier	c		2584736	0					
ANR	2587074	PrimaryExpression	0x6c		2584736	1					
ANR	2587075	ExpressionStatement	state = 45	6837:47:244962:244972	2584736	1	True				
ANR	2587076	AssignmentExpression	state = 45		2584736	0		=			
ANR	2587077	Identifier	state		2584736	0					
ANR	2587078	PrimaryExpression	45		2584736	1					
ANR	2587079	ElseStatement	else		2584736	0					
ANR	2587080	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2587081	Condition	c == 0x0a	6838:20:245010:245018	2584736	0	True				
ANR	2587082	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2587083	Identifier	c		2584736	0					
ANR	2587084	PrimaryExpression	0x0a		2584736	1					
ANR	2587085	ExpressionStatement	state = 12	6838:47:245037:245047	2584736	1	True				
ANR	2587086	AssignmentExpression	state = 12		2584736	0		=			
ANR	2587087	Identifier	state		2584736	0					
ANR	2587088	PrimaryExpression	12		2584736	1					
ANR	2587089	ElseStatement	else		2584736	0					
ANR	2587090	ExpressionStatement	state = 18	6839:47:245106:245116	2584736	0	True				
ANR	2587091	AssignmentExpression	state = 18		2584736	0		=			
ANR	2587092	Identifier	state		2584736	0					
ANR	2587093	PrimaryExpression	18		2584736	1					
ANR	2587094	BreakStatement	break ;	6840:9:245127:245132	2584736	148	True				
ANR	2587095	Label	case 45 :	6842:9:245144:245151	2584736	149	True				
ANR	2587096	IfStatement	if ( ( c == 0x55 ) || ( c == 0x75 ) )		2584736	150					
ANR	2587097	Condition	( c == 0x55 ) || ( c == 0x75 )	6843:19:245198:245223	2584736	0	True				
ANR	2587098	OrExpression	( c == 0x55 ) || ( c == 0x75 )		2584736	0		||			
ANR	2587099	EqualityExpression	c == 0x55		2584736	0		==			
ANR	2587100	Identifier	c		2584736	0					
ANR	2587101	PrimaryExpression	0x55		2584736	1					
ANR	2587102	EqualityExpression	c == 0x75		2584736	1		==			
ANR	2587103	Identifier	c		2584736	0					
ANR	2587104	PrimaryExpression	0x75		2584736	1					
ANR	2587105	ExpressionStatement	state = 46	6843:47:245226:245236	2584736	1	True				
ANR	2587106	AssignmentExpression	state = 46		2584736	0		=			
ANR	2587107	Identifier	state		2584736	0					
ANR	2587108	PrimaryExpression	46		2584736	1					
ANR	2587109	ElseStatement	else		2584736	0					
ANR	2587110	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2587111	Condition	c == 0x0a	6844:20:245275:245283	2584736	0	True				
ANR	2587112	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2587113	Identifier	c		2584736	0					
ANR	2587114	PrimaryExpression	0x0a		2584736	1					
ANR	2587115	ExpressionStatement	state = 12	6844:47:245302:245312	2584736	1	True				
ANR	2587116	AssignmentExpression	state = 12		2584736	0		=			
ANR	2587117	Identifier	state		2584736	0					
ANR	2587118	PrimaryExpression	12		2584736	1					
ANR	2587119	ElseStatement	else		2584736	0					
ANR	2587120	ExpressionStatement	state = 18	6845:47:245371:245381	2584736	0	True				
ANR	2587121	AssignmentExpression	state = 18		2584736	0		=			
ANR	2587122	Identifier	state		2584736	0					
ANR	2587123	PrimaryExpression	18		2584736	1					
ANR	2587124	BreakStatement	break ;	6846:9:245392:245397	2584736	151	True				
ANR	2587125	Label	case 46 :	6848:9:245409:245416	2584736	152	True				
ANR	2587126	IfStatement	if ( ( c == 0x54 ) || ( c == 0x74 ) )		2584736	153					
ANR	2587127	Condition	( c == 0x54 ) || ( c == 0x74 )	6849:19:245463:245488	2584736	0	True				
ANR	2587128	OrExpression	( c == 0x54 ) || ( c == 0x74 )		2584736	0		||			
ANR	2587129	EqualityExpression	c == 0x54		2584736	0		==			
ANR	2587130	Identifier	c		2584736	0					
ANR	2587131	PrimaryExpression	0x54		2584736	1					
ANR	2587132	EqualityExpression	c == 0x74		2584736	1		==			
ANR	2587133	Identifier	c		2584736	0					
ANR	2587134	PrimaryExpression	0x74		2584736	1					
ANR	2587135	ExpressionStatement	state = 47	6849:47:245491:245501	2584736	1	True				
ANR	2587136	AssignmentExpression	state = 47		2584736	0		=			
ANR	2587137	Identifier	state		2584736	0					
ANR	2587138	PrimaryExpression	47		2584736	1					
ANR	2587139	ElseStatement	else		2584736	0					
ANR	2587140	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2587141	Condition	c == 0x0a	6850:20:245541:245549	2584736	0	True				
ANR	2587142	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2587143	Identifier	c		2584736	0					
ANR	2587144	PrimaryExpression	0x0a		2584736	1					
ANR	2587145	ExpressionStatement	state = 12	6850:47:245568:245578	2584736	1	True				
ANR	2587146	AssignmentExpression	state = 12		2584736	0		=			
ANR	2587147	Identifier	state		2584736	0					
ANR	2587148	PrimaryExpression	12		2584736	1					
ANR	2587149	ElseStatement	else		2584736	0					
ANR	2587150	ExpressionStatement	state = 18	6851:47:245637:245647	2584736	0	True				
ANR	2587151	AssignmentExpression	state = 18		2584736	0		=			
ANR	2587152	Identifier	state		2584736	0					
ANR	2587153	PrimaryExpression	18		2584736	1					
ANR	2587154	BreakStatement	break ;	6852:9:245658:245663	2584736	154	True				
ANR	2587155	Label	case 47 :	6854:9:245675:245682	2584736	155	True				
ANR	2587156	IfStatement	if ( ( c == 0x49 ) || ( c == 0x69 ) )		2584736	156					
ANR	2587157	Condition	( c == 0x49 ) || ( c == 0x69 )	6855:19:245729:245754	2584736	0	True				
ANR	2587158	OrExpression	( c == 0x49 ) || ( c == 0x69 )		2584736	0		||			
ANR	2587159	EqualityExpression	c == 0x49		2584736	0		==			
ANR	2587160	Identifier	c		2584736	0					
ANR	2587161	PrimaryExpression	0x49		2584736	1					
ANR	2587162	EqualityExpression	c == 0x69		2584736	1		==			
ANR	2587163	Identifier	c		2584736	0					
ANR	2587164	PrimaryExpression	0x69		2584736	1					
ANR	2587165	ExpressionStatement	state = 48	6855:47:245757:245767	2584736	1	True				
ANR	2587166	AssignmentExpression	state = 48		2584736	0		=			
ANR	2587167	Identifier	state		2584736	0					
ANR	2587168	PrimaryExpression	48		2584736	1					
ANR	2587169	ElseStatement	else		2584736	0					
ANR	2587170	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2587171	Condition	c == 0x0a	6856:20:245808:245816	2584736	0	True				
ANR	2587172	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2587173	Identifier	c		2584736	0					
ANR	2587174	PrimaryExpression	0x0a		2584736	1					
ANR	2587175	ExpressionStatement	state = 12	6856:47:245835:245845	2584736	1	True				
ANR	2587176	AssignmentExpression	state = 12		2584736	0		=			
ANR	2587177	Identifier	state		2584736	0					
ANR	2587178	PrimaryExpression	12		2584736	1					
ANR	2587179	ElseStatement	else		2584736	0					
ANR	2587180	ExpressionStatement	state = 18	6857:47:245904:245914	2584736	0	True				
ANR	2587181	AssignmentExpression	state = 18		2584736	0		=			
ANR	2587182	Identifier	state		2584736	0					
ANR	2587183	PrimaryExpression	18		2584736	1					
ANR	2587184	BreakStatement	break ;	6858:9:245925:245930	2584736	157	True				
ANR	2587185	Label	case 48 :	6860:9:245942:245949	2584736	158	True				
ANR	2587186	IfStatement	if ( ( c == 0x4f ) || ( c == 0x6f ) )		2584736	159					
ANR	2587187	Condition	( c == 0x4f ) || ( c == 0x6f )	6861:19:245996:246021	2584736	0	True				
ANR	2587188	OrExpression	( c == 0x4f ) || ( c == 0x6f )		2584736	0		||			
ANR	2587189	EqualityExpression	c == 0x4f		2584736	0		==			
ANR	2587190	Identifier	c		2584736	0					
ANR	2587191	PrimaryExpression	0x4f		2584736	1					
ANR	2587192	EqualityExpression	c == 0x6f		2584736	1		==			
ANR	2587193	Identifier	c		2584736	0					
ANR	2587194	PrimaryExpression	0x6f		2584736	1					
ANR	2587195	ExpressionStatement	state = 49	6861:47:246024:246034	2584736	1	True				
ANR	2587196	AssignmentExpression	state = 49		2584736	0		=			
ANR	2587197	Identifier	state		2584736	0					
ANR	2587198	PrimaryExpression	49		2584736	1					
ANR	2587199	ElseStatement	else		2584736	0					
ANR	2587200	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2587201	Condition	c == 0x0a	6862:20:246076:246084	2584736	0	True				
ANR	2587202	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2587203	Identifier	c		2584736	0					
ANR	2587204	PrimaryExpression	0x0a		2584736	1					
ANR	2587205	ExpressionStatement	state = 12	6862:47:246103:246113	2584736	1	True				
ANR	2587206	AssignmentExpression	state = 12		2584736	0		=			
ANR	2587207	Identifier	state		2584736	0					
ANR	2587208	PrimaryExpression	12		2584736	1					
ANR	2587209	ElseStatement	else		2584736	0					
ANR	2587210	ExpressionStatement	state = 18	6863:47:246172:246182	2584736	0	True				
ANR	2587211	AssignmentExpression	state = 18		2584736	0		=			
ANR	2587212	Identifier	state		2584736	0					
ANR	2587213	PrimaryExpression	18		2584736	1					
ANR	2587214	BreakStatement	break ;	6864:9:246193:246198	2584736	160	True				
ANR	2587215	Label	case 49 :	6866:9:246210:246217	2584736	161	True				
ANR	2587216	IfStatement	if ( ( c == 0x4e ) || ( c == 0x6e ) )		2584736	162					
ANR	2587217	Condition	( c == 0x4e ) || ( c == 0x6e )	6867:19:246264:246289	2584736	0	True				
ANR	2587218	OrExpression	( c == 0x4e ) || ( c == 0x6e )		2584736	0		||			
ANR	2587219	EqualityExpression	c == 0x4e		2584736	0		==			
ANR	2587220	Identifier	c		2584736	0					
ANR	2587221	PrimaryExpression	0x4e		2584736	1					
ANR	2587222	EqualityExpression	c == 0x6e		2584736	1		==			
ANR	2587223	Identifier	c		2584736	0					
ANR	2587224	PrimaryExpression	0x6e		2584736	1					
ANR	2587225	ExpressionStatement	state = 54	6867:47:246292:246302	2584736	1	True				
ANR	2587226	AssignmentExpression	state = 54		2584736	0		=			
ANR	2587227	Identifier	state		2584736	0					
ANR	2587228	PrimaryExpression	54		2584736	1					
ANR	2587229	ElseStatement	else		2584736	0					
ANR	2587230	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2587231	Condition	c == 0x0a	6868:20:246345:246353	2584736	0	True				
ANR	2587232	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2587233	Identifier	c		2584736	0					
ANR	2587234	PrimaryExpression	0x0a		2584736	1					
ANR	2587235	ExpressionStatement	state = 12	6868:47:246372:246382	2584736	1	True				
ANR	2587236	AssignmentExpression	state = 12		2584736	0		=			
ANR	2587237	Identifier	state		2584736	0					
ANR	2587238	PrimaryExpression	12		2584736	1					
ANR	2587239	ElseStatement	else		2584736	0					
ANR	2587240	ExpressionStatement	state = 18	6869:47:246441:246451	2584736	0	True				
ANR	2587241	AssignmentExpression	state = 18		2584736	0		=			
ANR	2587242	Identifier	state		2584736	0					
ANR	2587243	PrimaryExpression	18		2584736	1					
ANR	2587244	BreakStatement	break ;	6870:9:246462:246467	2584736	163	True				
ANR	2587245	Label	case 54 :	6872:9:246479:246486	2584736	164	True				
ANR	2587246	ExpressionStatement	j = i	6873:11:246526:246531	2584736	165	True				
ANR	2587247	AssignmentExpression	j = i		2584736	0		=			
ANR	2587248	Identifier	j		2584736	0					
ANR	2587249	Identifier	i		2584736	1					
ANR	2587250	IfStatement	if ( c == 0x3d )		2584736	166					
ANR	2587251	Condition	c == 0x3d	6874:20:246607:246615	2584736	0	True				
ANR	2587252	EqualityExpression	c == 0x3d		2584736	0		==			
ANR	2587253	Identifier	c		2584736	0					
ANR	2587254	PrimaryExpression	0x3d		2584736	1					
ANR	2587255	ExpressionStatement	state = 55	6874:47:246634:246644	2584736	1	True				
ANR	2587256	AssignmentExpression	state = 55		2584736	0		=			
ANR	2587257	Identifier	state		2584736	0					
ANR	2587258	PrimaryExpression	55		2584736	1					
ANR	2587259	ElseStatement	else		2584736	0					
ANR	2587260	IfStatement	if ( c == 0x0a )		2584736	0					
ANR	2587261	Condition	c == 0x0a	6875:20:246687:246695	2584736	0	True				
ANR	2587262	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2587263	Identifier	c		2584736	0					
ANR	2587264	PrimaryExpression	0x0a		2584736	1					
ANR	2587265	ExpressionStatement	state = 12	6875:47:246714:246724	2584736	1	True				
ANR	2587266	AssignmentExpression	state = 12		2584736	0		=			
ANR	2587267	Identifier	state		2584736	0					
ANR	2587268	PrimaryExpression	12		2584736	1					
ANR	2587269	ElseStatement	else		2584736	0					
ANR	2587270	IfStatement	if ( ( c != 0x20 ) && ( c != 0x09 ) )		2584736	0					
ANR	2587271	Condition	( c != 0x20 ) && ( c != 0x09 )	6876:19:246755:246780	2584736	0	True				
ANR	2587272	AndExpression	( c != 0x20 ) && ( c != 0x09 )		2584736	0		&&			
ANR	2587273	EqualityExpression	c != 0x20		2584736	0		!=			
ANR	2587274	Identifier	c		2584736	0					
ANR	2587275	PrimaryExpression	0x20		2584736	1					
ANR	2587276	EqualityExpression	c != 0x09		2584736	1		!=			
ANR	2587277	Identifier	c		2584736	0					
ANR	2587278	PrimaryExpression	0x09		2584736	1					
ANR	2587279	ExpressionStatement	state = 18	6876:47:246783:246793	2584736	1	True				
ANR	2587280	AssignmentExpression	state = 18		2584736	0		=			
ANR	2587281	Identifier	state		2584736	0					
ANR	2587282	PrimaryExpression	18		2584736	1					
ANR	2587283	BreakStatement	break ;	6877:9:246804:246809	2584736	167	True				
ANR	2587284	Label	case 55 :	6879:9:246821:246828	2584736	168	True				
ANR	2587285	IfStatement	if ( c == 0x0a )		2584736	169					
ANR	2587286	Condition	c == 0x0a	6880:19:246880:246888	2584736	0	True				
ANR	2587287	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2587288	Identifier	c		2584736	0					
ANR	2587289	PrimaryExpression	0x0a		2584736	1					
ANR	2587290	ExpressionStatement	state = 12	6880:47:246908:246918	2584736	1	True				
ANR	2587291	AssignmentExpression	state = 12		2584736	0		=			
ANR	2587292	Identifier	state		2584736	0					
ANR	2587293	PrimaryExpression	12		2584736	1					
ANR	2587294	ElseStatement	else		2584736	0					
ANR	2587295	IfStatement	if ( ( c == 0x20 ) || ( c == 0x09 ) )		2584736	0					
ANR	2587296	Condition	( c == 0x20 ) || ( c == 0x09 )	6881:19:246939:246964	2584736	0	True				
ANR	2587297	OrExpression	( c == 0x20 ) || ( c == 0x09 )		2584736	0		||			
ANR	2587298	EqualityExpression	c == 0x20		2584736	0		==			
ANR	2587299	Identifier	c		2584736	0					
ANR	2587300	PrimaryExpression	0x20		2584736	1					
ANR	2587301	EqualityExpression	c == 0x09		2584736	1		==			
ANR	2587302	Identifier	c		2584736	0					
ANR	2587303	PrimaryExpression	0x09		2584736	1					
ANR	2587304	ExpressionStatement	j = i	6881:47:246967:246976	2584736	1	True				
ANR	2587305	AssignmentExpression	j = i		2584736	0		=			
ANR	2587306	Identifier	j		2584736	0					
ANR	2587307	Identifier	i		2584736	1					
ANR	2587308	ElseStatement	else		2584736	0					
ANR	2587309	IfStatement	if ( ( 0x30 > c ) || ( c > 0x39 ) )		2584736	0					
ANR	2587310	Condition	( 0x30 > c ) || ( c > 0x39 )	6882:19:246997:247022	2584736	0	True				
ANR	2587311	OrExpression	( 0x30 > c ) || ( c > 0x39 )		2584736	0		||			
ANR	2587312	RelationalExpression	0x30 > c		2584736	0		>			
ANR	2587313	PrimaryExpression	0x30		2584736	0					
ANR	2587314	Identifier	c		2584736	1					
ANR	2587315	RelationalExpression	c > 0x39		2584736	1		>			
ANR	2587316	Identifier	c		2584736	0					
ANR	2587317	PrimaryExpression	0x39		2584736	1					
ANR	2587318	ExpressionStatement	state = 18	6882:47:247025:247035	2584736	1	True				
ANR	2587319	AssignmentExpression	state = 18		2584736	0		=			
ANR	2587320	Identifier	state		2584736	0					
ANR	2587321	PrimaryExpression	18		2584736	1					
ANR	2587322	ElseStatement	else		2584736	0					
ANR	2587323	ExpressionStatement	state = 50	6883:47:247084:247094	2584736	0	True				
ANR	2587324	AssignmentExpression	state = 50		2584736	0		=			
ANR	2587325	Identifier	state		2584736	0					
ANR	2587326	PrimaryExpression	50		2584736	1					
ANR	2587327	BreakStatement	break ;	6884:9:247105:247110	2584736	170	True				
ANR	2587328	Label	case 50 :	6886:9:247122:247129	2584736	171	True				
ANR	2587329	IfStatement	if ( ( 0x30 > c ) || ( c > 0x39 ) )		2584736	172					
ANR	2587330	Condition	( 0x30 > c ) || ( c > 0x39 )	6887:14:247171:247194	2584736	0	True				
ANR	2587331	OrExpression	( 0x30 > c ) || ( c > 0x39 )		2584736	0		||			
ANR	2587332	RelationalExpression	0x30 > c		2584736	0		>			
ANR	2587333	PrimaryExpression	0x30		2584736	0					
ANR	2587334	Identifier	c		2584736	1					
ANR	2587335	RelationalExpression	c > 0x39		2584736	1		>			
ANR	2587336	Identifier	c		2584736	0					
ANR	2587337	PrimaryExpression	0x39		2584736	1					
ANR	2587338	CompoundStatement		457:40:17996:17996	2584736	1					
ANR	2587339	IfStatement	if ( B_RESOLUTION & upd -> flags )		2584736	0					
ANR	2587340	Condition	B_RESOLUTION & upd -> flags	6889:16:247236:247261	2584736	0	True				
ANR	2587341	BitAndExpression	B_RESOLUTION & upd -> flags		2584736	0		&			
ANR	2587342	Identifier	B_RESOLUTION		2584736	0					
ANR	2587343	PtrMemberAccess	upd -> flags		2584736	1					
ANR	2587344	Identifier	upd		2584736	0					
ANR	2587345	Identifier	flags		2584736	1					
ANR	2587346	CompoundStatement		459:44:18063:18063	2584736	1					
ANR	2587347	ExpressionStatement	"gs_sprintf ( cv , ""%d"" , ( int ) ( ( udev -> y_pixels_per_inch < udev -> x_pixels_per_inch ? udev -> x_pixels_per_inch : udev -> y_pixels_per_inch ) + 0.5 ) )"	6891:15:247306:247495	2584736	0	True				
ANR	2587348	CallExpression	"gs_sprintf ( cv , ""%d"" , ( int ) ( ( udev -> y_pixels_per_inch < udev -> x_pixels_per_inch ? udev -> x_pixels_per_inch : udev -> y_pixels_per_inch ) + 0.5 ) )"		2584736	0					
ANR	2587349	Callee	gs_sprintf		2584736	0					
ANR	2587350	Identifier	gs_sprintf		2584736	0					
ANR	2587351	ArgumentList	cv		2584736	1					
ANR	2587352	Argument	cv		2584736	0					
ANR	2587353	Identifier	cv		2584736	0					
ANR	2587354	Argument	"""%d"""		2584736	1					
ANR	2587355	PrimaryExpression	"""%d"""		2584736	0					
ANR	2587356	Argument	( int ) ( ( udev -> y_pixels_per_inch < udev -> x_pixels_per_inch ? udev -> x_pixels_per_inch : udev -> y_pixels_per_inch ) + 0.5 )		2584736	2					
ANR	2587357	CastExpression	( int ) ( ( udev -> y_pixels_per_inch < udev -> x_pixels_per_inch ? udev -> x_pixels_per_inch : udev -> y_pixels_per_inch ) + 0.5 )		2584736	0					
ANR	2587358	CastTarget	int		2584736	0					
ANR	2587359	AdditiveExpression	( udev -> y_pixels_per_inch < udev -> x_pixels_per_inch ? udev -> x_pixels_per_inch : udev -> y_pixels_per_inch ) + 0.5		2584736	1		+			
ANR	2587360	ConditionalExpression	udev -> y_pixels_per_inch < udev -> x_pixels_per_inch ? udev -> x_pixels_per_inch : udev -> y_pixels_per_inch		2584736	0					
ANR	2587361	Condition	udev -> y_pixels_per_inch < udev -> x_pixels_per_inch		2584736	0					
ANR	2587362	RelationalExpression	udev -> y_pixels_per_inch < udev -> x_pixels_per_inch		2584736	0		<			
ANR	2587363	PtrMemberAccess	udev -> y_pixels_per_inch		2584736	0					
ANR	2587364	Identifier	udev		2584736	0					
ANR	2587365	Identifier	y_pixels_per_inch		2584736	1					
ANR	2587366	PtrMemberAccess	udev -> x_pixels_per_inch		2584736	1					
ANR	2587367	Identifier	udev		2584736	0					
ANR	2587368	Identifier	x_pixels_per_inch		2584736	1					
ANR	2587369	PtrMemberAccess	udev -> x_pixels_per_inch		2584736	1					
ANR	2587370	Identifier	udev		2584736	0					
ANR	2587371	Identifier	x_pixels_per_inch		2584736	1					
ANR	2587372	PtrMemberAccess	udev -> y_pixels_per_inch		2584736	2					
ANR	2587373	Identifier	udev		2584736	0					
ANR	2587374	Identifier	y_pixels_per_inch		2584736	1					
ANR	2587375	PrimaryExpression	0.5		2584736	1					
ANR	2587376	ExpressionStatement	ncv = strlen ( cv )	6895:15:247512:247528	2584736	1	True				
ANR	2587377	AssignmentExpression	ncv = strlen ( cv )		2584736	0		=			
ANR	2587378	Identifier	ncv		2584736	0					
ANR	2587379	CallExpression	strlen ( cv )		2584736	1					
ANR	2587380	Callee	strlen		2584736	0					
ANR	2587381	Identifier	strlen		2584736	0					
ANR	2587382	ArgumentList	cv		2584736	1					
ANR	2587383	Argument	cv		2584736	0					
ANR	2587384	Identifier	cv		2584736	0					
ANR	2587385	ExpressionStatement	nbp = ( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )	6897:15:247546:247596	2584736	2	True				
ANR	2587386	AssignmentExpression	nbp = ( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )		2584736	0		=			
ANR	2587387	Identifier	nbp		2584736	0					
ANR	2587388	AdditiveExpression	( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )		2584736	1		+			
ANR	2587389	AdditiveExpression	j + 1		2584736	0		+			
ANR	2587390	Identifier	j		2584736	0					
ANR	2587391	PrimaryExpression	1		2584736	1					
ANR	2587392	AdditiveExpression	ncv + ( upd -> strings [ S_BEGIN ] . size - i )		2584736	1		+			
ANR	2587393	Identifier	ncv		2584736	0					
ANR	2587394	AdditiveExpression	upd -> strings [ S_BEGIN ] . size - i		2584736	1		-			
ANR	2587395	MemberAccess	upd -> strings [ S_BEGIN ] . size		2584736	0					
ANR	2587396	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2587397	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2587398	Identifier	upd		2584736	0					
ANR	2587399	Identifier	strings		2584736	1					
ANR	2587400	Identifier	S_BEGIN		2584736	1					
ANR	2587401	Identifier	size		2584736	1					
ANR	2587402	Identifier	i		2584736	1					
ANR	2587403	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , bp , nbp )"	6898:15:247613:247651	2584736	3	True				
ANR	2587404	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , bp , nbp )"		2584736	0					
ANR	2587405	Callee	UPD_MM_GET_ARRAY		2584736	0					
ANR	2587406	Identifier	UPD_MM_GET_ARRAY		2584736	0					
ANR	2587407	ArgumentList	udev -> memory		2584736	1					
ANR	2587408	Argument	udev -> memory		2584736	0					
ANR	2587409	PtrMemberAccess	udev -> memory		2584736	0					
ANR	2587410	Identifier	udev		2584736	0					
ANR	2587411	Identifier	memory		2584736	1					
ANR	2587412	Argument	bp		2584736	1					
ANR	2587413	Identifier	bp		2584736	0					
ANR	2587414	Argument	nbp		2584736	2					
ANR	2587415	Identifier	nbp		2584736	0					
ANR	2587416	IfStatement	if ( 0 <= j )		2584736	4					
ANR	2587417	Condition	0 <= j	6900:18:247672:247677	2584736	0	True				
ANR	2587418	RelationalExpression	0 <= j		2584736	0		<=			
ANR	2587419	PrimaryExpression	0		2584736	0					
ANR	2587420	Identifier	j		2584736	1					
ANR	2587421	ExpressionStatement	"memcpy ( bp , upd -> strings [ S_BEGIN ] . data , j + 1 )"	6900:26:247680:247721	2584736	1	True				
ANR	2587422	CallExpression	"memcpy ( bp , upd -> strings [ S_BEGIN ] . data , j + 1 )"		2584736	0					
ANR	2587423	Callee	memcpy		2584736	0					
ANR	2587424	Identifier	memcpy		2584736	0					
ANR	2587425	ArgumentList	bp		2584736	1					
ANR	2587426	Argument	bp		2584736	0					
ANR	2587427	Identifier	bp		2584736	0					
ANR	2587428	Argument	upd -> strings [ S_BEGIN ] . data		2584736	1					
ANR	2587429	MemberAccess	upd -> strings [ S_BEGIN ] . data		2584736	0					
ANR	2587430	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2587431	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2587432	Identifier	upd		2584736	0					
ANR	2587433	Identifier	strings		2584736	1					
ANR	2587434	Identifier	S_BEGIN		2584736	1					
ANR	2587435	Identifier	data		2584736	1					
ANR	2587436	Argument	j + 1		2584736	2					
ANR	2587437	AdditiveExpression	j + 1		2584736	0		+			
ANR	2587438	Identifier	j		2584736	0					
ANR	2587439	PrimaryExpression	1		2584736	1					
ANR	2587440	ExpressionStatement	"memcpy ( bp + j + 1 , cv , ncv )"	6901:15:247738:247763	2584736	5	True				
ANR	2587441	CallExpression	"memcpy ( bp + j + 1 , cv , ncv )"		2584736	0					
ANR	2587442	Callee	memcpy		2584736	0					
ANR	2587443	Identifier	memcpy		2584736	0					
ANR	2587444	ArgumentList	bp + j + 1		2584736	1					
ANR	2587445	Argument	bp + j + 1		2584736	0					
ANR	2587446	AdditiveExpression	bp + j + 1		2584736	0		+			
ANR	2587447	Identifier	bp		2584736	0					
ANR	2587448	AdditiveExpression	j + 1		2584736	1		+			
ANR	2587449	Identifier	j		2584736	0					
ANR	2587450	PrimaryExpression	1		2584736	1					
ANR	2587451	Argument	cv		2584736	1					
ANR	2587452	Identifier	cv		2584736	0					
ANR	2587453	Argument	ncv		2584736	2					
ANR	2587454	Identifier	ncv		2584736	0					
ANR	2587455	ExpressionStatement	"memcpy ( bp + j + 1 + ncv , upd -> strings [ S_BEGIN ] . data + i , upd -> strings [ S_BEGIN ] . size - i )"	6902:15:247780:247888	2584736	6	True				
ANR	2587456	CallExpression	"memcpy ( bp + j + 1 + ncv , upd -> strings [ S_BEGIN ] . data + i , upd -> strings [ S_BEGIN ] . size - i )"		2584736	0					
ANR	2587457	Callee	memcpy		2584736	0					
ANR	2587458	Identifier	memcpy		2584736	0					
ANR	2587459	ArgumentList	bp + j + 1 + ncv		2584736	1					
ANR	2587460	Argument	bp + j + 1 + ncv		2584736	0					
ANR	2587461	AdditiveExpression	bp + j + 1 + ncv		2584736	0		+			
ANR	2587462	Identifier	bp		2584736	0					
ANR	2587463	AdditiveExpression	j + 1 + ncv		2584736	1		+			
ANR	2587464	Identifier	j		2584736	0					
ANR	2587465	AdditiveExpression	1 + ncv		2584736	1		+			
ANR	2587466	PrimaryExpression	1		2584736	0					
ANR	2587467	Identifier	ncv		2584736	1					
ANR	2587468	Argument	upd -> strings [ S_BEGIN ] . data + i		2584736	1					
ANR	2587469	AdditiveExpression	upd -> strings [ S_BEGIN ] . data + i		2584736	0		+			
ANR	2587470	MemberAccess	upd -> strings [ S_BEGIN ] . data		2584736	0					
ANR	2587471	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2587472	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2587473	Identifier	upd		2584736	0					
ANR	2587474	Identifier	strings		2584736	1					
ANR	2587475	Identifier	S_BEGIN		2584736	1					
ANR	2587476	Identifier	data		2584736	1					
ANR	2587477	Identifier	i		2584736	1					
ANR	2587478	Argument	upd -> strings [ S_BEGIN ] . size - i		2584736	2					
ANR	2587479	AdditiveExpression	upd -> strings [ S_BEGIN ] . size - i		2584736	0		-			
ANR	2587480	MemberAccess	upd -> strings [ S_BEGIN ] . size		2584736	0					
ANR	2587481	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2587482	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2587483	Identifier	upd		2584736	0					
ANR	2587484	Identifier	strings		2584736	1					
ANR	2587485	Identifier	S_BEGIN		2584736	1					
ANR	2587486	Identifier	size		2584736	1					
ANR	2587487	Identifier	i		2584736	1					
ANR	2587488	ExpressionStatement	i = j + 1 + ncv	6904:15:247905:247916	2584736	7	True				
ANR	2587489	AssignmentExpression	i = j + 1 + ncv		2584736	0		=			
ANR	2587490	Identifier	i		2584736	0					
ANR	2587491	AdditiveExpression	j + 1 + ncv		2584736	1		+			
ANR	2587492	Identifier	j		2584736	0					
ANR	2587493	AdditiveExpression	1 + ncv		2584736	1		+			
ANR	2587494	PrimaryExpression	1		2584736	0					
ANR	2587495	Identifier	ncv		2584736	1					
ANR	2587496	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_BEGIN ] )"	6905:15:247933:247986	2584736	8	True				
ANR	2587497	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_BEGIN ] )"		2584736	0					
ANR	2587498	Callee	UPD_MM_DEL_PARAM		2584736	0					
ANR	2587499	Identifier	UPD_MM_DEL_PARAM		2584736	0					
ANR	2587500	ArgumentList	udev -> memory		2584736	1					
ANR	2587501	Argument	udev -> memory		2584736	0					
ANR	2587502	PtrMemberAccess	udev -> memory		2584736	0					
ANR	2587503	Identifier	udev		2584736	0					
ANR	2587504	Identifier	memory		2584736	1					
ANR	2587505	Argument	upd -> strings [ S_BEGIN ]		2584736	1					
ANR	2587506	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2587507	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2587508	Identifier	upd		2584736	0					
ANR	2587509	Identifier	strings		2584736	1					
ANR	2587510	Identifier	S_BEGIN		2584736	1					
ANR	2587511	ExpressionStatement	upd -> strings [ S_BEGIN ] . data = bp	6906:15:248003:248034	2584736	9	True				
ANR	2587512	AssignmentExpression	upd -> strings [ S_BEGIN ] . data = bp		2584736	0		=			
ANR	2587513	MemberAccess	upd -> strings [ S_BEGIN ] . data		2584736	0					
ANR	2587514	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2587515	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2587516	Identifier	upd		2584736	0					
ANR	2587517	Identifier	strings		2584736	1					
ANR	2587518	Identifier	S_BEGIN		2584736	1					
ANR	2587519	Identifier	data		2584736	1					
ANR	2587520	Identifier	bp		2584736	1					
ANR	2587521	ExpressionStatement	upd -> strings [ S_BEGIN ] . size = nbp	6907:15:248051:248083	2584736	10	True				
ANR	2587522	AssignmentExpression	upd -> strings [ S_BEGIN ] . size = nbp		2584736	0		=			
ANR	2587523	MemberAccess	upd -> strings [ S_BEGIN ] . size		2584736	0					
ANR	2587524	ArrayIndexing	upd -> strings [ S_BEGIN ]		2584736	0					
ANR	2587525	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2587526	Identifier	upd		2584736	0					
ANR	2587527	Identifier	strings		2584736	1					
ANR	2587528	Identifier	S_BEGIN		2584736	1					
ANR	2587529	Identifier	size		2584736	1					
ANR	2587530	Identifier	nbp		2584736	1					
ANR	2587531	IfStatement	if ( c == 0x0a )		2584736	1					
ANR	2587532	Condition	c == 0x0a	6910:17:248173:248181	2584736	0	True				
ANR	2587533	EqualityExpression	c == 0x0a		2584736	0		==			
ANR	2587534	Identifier	c		2584736	0					
ANR	2587535	PrimaryExpression	0x0a		2584736	1					
ANR	2587536	ExpressionStatement	state = 12	6910:29:248185:248195	2584736	1	True				
ANR	2587537	AssignmentExpression	state = 12		2584736	0		=			
ANR	2587538	Identifier	state		2584736	0					
ANR	2587539	PrimaryExpression	12		2584736	1					
ANR	2587540	ElseStatement	else		2584736	0					
ANR	2587541	ExpressionStatement	state = 18	6911:29:248226:248236	2584736	0	True				
ANR	2587542	AssignmentExpression	state = 18		2584736	0		=			
ANR	2587543	Identifier	state		2584736	0					
ANR	2587544	PrimaryExpression	18		2584736	1					
ANR	2587545	BreakStatement	break ;	6913:9:248260:248265	2584736	173	True				
ANR	2587546	Label	default :	6915:9:248277:248284	2584736	174	True				
ANR	2587547	Identifier	default		2584736	0					
ANR	2587548	ExpressionStatement	"errprintf ( udev -> memory , ""UNIPRINT-Coding error, wrrtl, state = %d\\n"" , state )"	6917:11:248328:248424	2584736	175	True				
ANR	2587549	CallExpression	"errprintf ( udev -> memory , ""UNIPRINT-Coding error, wrrtl, state = %d\\n"" , state )"		2584736	0					
ANR	2587550	Callee	errprintf		2584736	0					
ANR	2587551	Identifier	errprintf		2584736	0					
ANR	2587552	ArgumentList	udev -> memory		2584736	1					
ANR	2587553	Argument	udev -> memory		2584736	0					
ANR	2587554	PtrMemberAccess	udev -> memory		2584736	0					
ANR	2587555	Identifier	udev		2584736	0					
ANR	2587556	Identifier	memory		2584736	1					
ANR	2587557	Argument	"""UNIPRINT-Coding error, wrrtl, state = %d\\n"""		2584736	1					
ANR	2587558	PrimaryExpression	"""UNIPRINT-Coding error, wrrtl, state = %d\\n"""		2584736	0					
ANR	2587559	Argument	state		2584736	2					
ANR	2587560	Identifier	state		2584736	0					
ANR	2587561	ExpressionStatement	state = 0	6920:11:248444:248453	2584736	176	True				
ANR	2587562	AssignmentExpression	state = 0		2584736	0		=			
ANR	2587563	Identifier	state		2584736	0					
ANR	2587564	PrimaryExpression	0		2584736	1					
ANR	2587565	BreakStatement	break ;	6921:9:248464:248469	2584736	177	True				
ANR	2587566	IfStatement	if ( upd -> ocomp > upd -> string_a [ SA_WRITECOMP ] . size )		2584736	3					
ANR	2587567	Condition	upd -> ocomp > upd -> string_a [ SA_WRITECOMP ] . size	6927:6:248586:248630	2584736	0	True				
ANR	2587568	RelationalExpression	upd -> ocomp > upd -> string_a [ SA_WRITECOMP ] . size		2584736	0		>			
ANR	2587569	PtrMemberAccess	upd -> ocomp		2584736	0					
ANR	2587570	Identifier	upd		2584736	0					
ANR	2587571	Identifier	ocomp		2584736	1					
ANR	2587572	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . size		2584736	1					
ANR	2587573	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2584736	0					
ANR	2587574	PtrMemberAccess	upd -> string_a		2584736	0					
ANR	2587575	Identifier	upd		2584736	0					
ANR	2587576	Identifier	string_a		2584736	1					
ANR	2587577	Identifier	SA_WRITECOMP		2584736	1					
ANR	2587578	Identifier	size		2584736	1					
ANR	2587579	CompoundStatement		497:53:19432:19432	2584736	1					
ANR	2587580	ExpressionStatement	"errprintf ( udev -> memory , ""PCL-Open: WRITECOMP-Commands must be given\\n"" )"	6929:6:248674:248754	2584736	0	True				
ANR	2587581	CallExpression	"errprintf ( udev -> memory , ""PCL-Open: WRITECOMP-Commands must be given\\n"" )"		2584736	0					
ANR	2587582	Callee	errprintf		2584736	0					
ANR	2587583	Identifier	errprintf		2584736	0					
ANR	2587584	ArgumentList	udev -> memory		2584736	1					
ANR	2587585	Argument	udev -> memory		2584736	0					
ANR	2587586	PtrMemberAccess	udev -> memory		2584736	0					
ANR	2587587	Identifier	udev		2584736	0					
ANR	2587588	Identifier	memory		2584736	1					
ANR	2587589	Argument	"""PCL-Open: WRITECOMP-Commands must be given\\n"""		2584736	1					
ANR	2587590	PrimaryExpression	"""PCL-Open: WRITECOMP-Commands must be given\\n"""		2584736	0					
ANR	2587591	ExpressionStatement	error = - 1	6932:6:248769:248779	2584736	1	True				
ANR	2587592	AssignmentExpression	error = - 1		2584736	0		=			
ANR	2587593	Identifier	error		2584736	0					
ANR	2587594	UnaryOperationExpression	- 1		2584736	1					
ANR	2587595	UnaryOperator	-		2584736	0					
ANR	2587596	PrimaryExpression	1		2584736	1					
ANR	2587597	IfStatement	if ( 0 <= error )		2584736	4					
ANR	2587598	Condition	0 <= error	6941:6:248929:248938	2584736	0	True				
ANR	2587599	RelationalExpression	0 <= error		2584736	0		<=			
ANR	2587600	PrimaryExpression	0		2584736	0					
ANR	2587601	Identifier	error		2584736	1					
ANR	2587602	CompoundStatement		513:6:19774:19787	2584736	1					
ANR	2587603	IdentifierDeclStatement	"int32_t ny , noutbuf ;"	6942:6:248949:248967	2584736	0	True				
ANR	2587604	IdentifierDecl	ny		2584736	0					
ANR	2587605	IdentifierDeclType	int32_t		2584736	0					
ANR	2587606	Identifier	ny		2584736	1					
ANR	2587607	IdentifierDecl	noutbuf		2584736	1					
ANR	2587608	IdentifierDeclType	int32_t		2584736	0					
ANR	2587609	Identifier	noutbuf		2584736	1					
ANR	2587610	IdentifierDeclStatement	char tmp [ 16 ] ;	6943:6:248975:248988	2584736	1	True				
ANR	2587611	IdentifierDecl	tmp [ 16 ]		2584736	0					
ANR	2587612	IdentifierDeclType	char [ 16 ]		2584736	0					
ANR	2587613	Identifier	tmp		2584736	1					
ANR	2587614	PrimaryExpression	16		2584736	2					
ANR	2587615	IfStatement	if ( 0 < upd -> strings [ S_YMOVE ] . size )		2584736	2					
ANR	2587616	Condition	0 < upd -> strings [ S_YMOVE ] . size	6945:9:249000:249029	2584736	0	True				
ANR	2587617	RelationalExpression	0 < upd -> strings [ S_YMOVE ] . size		2584736	0		<			
ANR	2587618	PrimaryExpression	0		2584736	0					
ANR	2587619	MemberAccess	upd -> strings [ S_YMOVE ] . size		2584736	1					
ANR	2587620	ArrayIndexing	upd -> strings [ S_YMOVE ]		2584736	0					
ANR	2587621	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2587622	Identifier	upd		2584736	0					
ANR	2587623	Identifier	strings		2584736	1					
ANR	2587624	Identifier	S_YMOVE		2584736	1					
ANR	2587625	Identifier	size		2584736	1					
ANR	2587626	CompoundStatement		515:41:19831:19831	2584736	1					
ANR	2587627	ExpressionStatement	"gs_sprintf ( tmp , ""%d"" , upd -> pheight )"	6946:9:249043:249076	2584736	0	True				
ANR	2587628	CallExpression	"gs_sprintf ( tmp , ""%d"" , upd -> pheight )"		2584736	0					
ANR	2587629	Callee	gs_sprintf		2584736	0					
ANR	2587630	Identifier	gs_sprintf		2584736	0					
ANR	2587631	ArgumentList	tmp		2584736	1					
ANR	2587632	Argument	tmp		2584736	0					
ANR	2587633	Identifier	tmp		2584736	0					
ANR	2587634	Argument	"""%d"""		2584736	1					
ANR	2587635	PrimaryExpression	"""%d"""		2584736	0					
ANR	2587636	Argument	upd -> pheight		2584736	2					
ANR	2587637	PtrMemberAccess	upd -> pheight		2584736	0					
ANR	2587638	Identifier	upd		2584736	0					
ANR	2587639	Identifier	pheight		2584736	1					
ANR	2587640	ExpressionStatement	ny = upd -> strings [ S_YMOVE ] . size + strlen ( tmp )	6947:9:249087:249132	2584736	1	True				
ANR	2587641	AssignmentExpression	ny = upd -> strings [ S_YMOVE ] . size + strlen ( tmp )		2584736	0		=			
ANR	2587642	Identifier	ny		2584736	0					
ANR	2587643	AdditiveExpression	upd -> strings [ S_YMOVE ] . size + strlen ( tmp )		2584736	1		+			
ANR	2587644	MemberAccess	upd -> strings [ S_YMOVE ] . size		2584736	0					
ANR	2587645	ArrayIndexing	upd -> strings [ S_YMOVE ]		2584736	0					
ANR	2587646	PtrMemberAccess	upd -> strings		2584736	0					
ANR	2587647	Identifier	upd		2584736	0					
ANR	2587648	Identifier	strings		2584736	1					
ANR	2587649	Identifier	S_YMOVE		2584736	1					
ANR	2587650	Identifier	size		2584736	1					
ANR	2587651	CallExpression	strlen ( tmp )		2584736	1					
ANR	2587652	Callee	strlen		2584736	0					
ANR	2587653	Identifier	strlen		2584736	0					
ANR	2587654	ArgumentList	tmp		2584736	1					
ANR	2587655	Argument	tmp		2584736	0					
ANR	2587656	Identifier	tmp		2584736	0					
ANR	2587657	ElseStatement	else		2584736	0					
ANR	2587658	CompoundStatement		518:13:19946:19946	2584736	0					
ANR	2587659	ExpressionStatement	ny = 1 + upd -> string_a [ SA_WRITECOMP ] . data [ upd -> ocomp - 1 ] . size	6949:9:249158:249218	2584736	0	True				
ANR	2587660	AssignmentExpression	ny = 1 + upd -> string_a [ SA_WRITECOMP ] . data [ upd -> ocomp - 1 ] . size		2584736	0		=			
ANR	2587661	Identifier	ny		2584736	0					
ANR	2587662	AdditiveExpression	1 + upd -> string_a [ SA_WRITECOMP ] . data [ upd -> ocomp - 1 ] . size		2584736	1		+			
ANR	2587663	PrimaryExpression	1		2584736	0					
ANR	2587664	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ upd -> ocomp - 1 ] . size		2584736	1					
ANR	2587665	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ upd -> ocomp - 1 ]		2584736	0					
ANR	2587666	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		2584736	0					
ANR	2587667	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2584736	0					
ANR	2587668	PtrMemberAccess	upd -> string_a		2584736	0					
ANR	2587669	Identifier	upd		2584736	0					
ANR	2587670	Identifier	string_a		2584736	1					
ANR	2587671	Identifier	SA_WRITECOMP		2584736	1					
ANR	2587672	Identifier	data		2584736	1					
ANR	2587673	AdditiveExpression	upd -> ocomp - 1		2584736	1		-			
ANR	2587674	PtrMemberAccess	upd -> ocomp		2584736	0					
ANR	2587675	Identifier	upd		2584736	0					
ANR	2587676	Identifier	ocomp		2584736	1					
ANR	2587677	PrimaryExpression	1		2584736	1					
ANR	2587678	Identifier	size		2584736	1					
ANR	2587679	ExpressionStatement	ny *= upd -> pheight	6950:9:249229:249247	2584736	1	True				
ANR	2587680	AssignmentExpression	ny *= upd -> pheight		2584736	0		*=			
ANR	2587681	Identifier	ny		2584736	0					
ANR	2587682	PtrMemberAccess	upd -> pheight		2584736	1					
ANR	2587683	Identifier	upd		2584736	0					
ANR	2587684	Identifier	pheight		2584736	1					
ANR	2587685	ExpressionStatement	noutbuf = upd -> nbytes + ( upd -> nbytes + 127 ) / 128	6953:6:249264:249313	2584736	3	True				
ANR	2587686	AssignmentExpression	noutbuf = upd -> nbytes + ( upd -> nbytes + 127 ) / 128		2584736	0		=			
ANR	2587687	Identifier	noutbuf		2584736	0					
ANR	2587688	AdditiveExpression	upd -> nbytes + ( upd -> nbytes + 127 ) / 128		2584736	1		+			
ANR	2587689	PtrMemberAccess	upd -> nbytes		2584736	0					
ANR	2587690	Identifier	upd		2584736	0					
ANR	2587691	Identifier	nbytes		2584736	1					
ANR	2587692	MultiplicativeExpression	( upd -> nbytes + 127 ) / 128		2584736	1		/			
ANR	2587693	AdditiveExpression	upd -> nbytes + 127		2584736	0		+			
ANR	2587694	PtrMemberAccess	upd -> nbytes		2584736	0					
ANR	2587695	Identifier	upd		2584736	0					
ANR	2587696	Identifier	nbytes		2584736	1					
ANR	2587697	PrimaryExpression	127		2584736	1					
ANR	2587698	PrimaryExpression	128		2584736	1					
ANR	2587699	IfStatement	if ( ny > noutbuf )		2584736	4					
ANR	2587700	Condition	ny > noutbuf	6955:9:249325:249336	2584736	0	True				
ANR	2587701	RelationalExpression	ny > noutbuf		2584736	0		>			
ANR	2587702	Identifier	ny		2584736	0					
ANR	2587703	Identifier	noutbuf		2584736	1					
ANR	2587704	ExpressionStatement	noutbuf = ny	6955:23:249339:249351	2584736	1	True				
ANR	2587705	AssignmentExpression	noutbuf = ny		2584736	0		=			
ANR	2587706	Identifier	noutbuf		2584736	0					
ANR	2587707	Identifier	ny		2584736	1					
ANR	2587708	ExpressionStatement	noutbuf += 16	6956:6:249359:249372	2584736	5	True				
ANR	2587709	AssignmentExpression	noutbuf += 16		2584736	0		+=			
ANR	2587710	Identifier	noutbuf		2584736	0					
ANR	2587711	PrimaryExpression	16		2584736	1					
ANR	2587712	IfStatement	if ( noutbuf > 0 )		2584736	6					
ANR	2587713	Condition	noutbuf > 0	6958:9:249384:249394	2584736	0	True				
ANR	2587714	RelationalExpression	noutbuf > 0		2584736	0		>			
ANR	2587715	Identifier	noutbuf		2584736	0					
ANR	2587716	PrimaryExpression	0		2584736	1					
ANR	2587717	CompoundStatement		528:22:20196:20196	2584736	1					
ANR	2587718	ExpressionStatement	upd -> noutbuf = noutbuf	6959:9:249408:249435	2584736	0	True				
ANR	2587719	AssignmentExpression	upd -> noutbuf = noutbuf		2584736	0		=			
ANR	2587720	PtrMemberAccess	upd -> noutbuf		2584736	0					
ANR	2587721	Identifier	upd		2584736	0					
ANR	2587722	Identifier	noutbuf		2584736	1					
ANR	2587723	Identifier	noutbuf		2584736	1					
ANR	2587724	ExpressionStatement	upd -> writer = upd_wrtrtl	6960:9:249446:249476	2584736	1	True				
ANR	2587725	AssignmentExpression	upd -> writer = upd_wrtrtl		2584736	0		=			
ANR	2587726	PtrMemberAccess	upd -> writer		2584736	0					
ANR	2587727	Identifier	upd		2584736	0					
ANR	2587728	Identifier	writer		2584736	1					
ANR	2587729	Identifier	upd_wrtrtl		2584736	1					
ANR	2587730	ExpressionStatement	error = 1	6961:9:249487:249508	2584736	2	True				
ANR	2587731	AssignmentExpression	error = 1		2584736	0		=			
ANR	2587732	Identifier	error		2584736	0					
ANR	2587733	PrimaryExpression	1		2584736	1					
ANR	2587734	ElseStatement	else		2584736	0					
ANR	2587735	CompoundStatement		532:13:20322:20322	2584736	0					
ANR	2587736	ExpressionStatement	error = - 1	6963:9:249534:249544	2584736	0	True				
ANR	2587737	AssignmentExpression	error = - 1		2584736	0		=			
ANR	2587738	Identifier	error		2584736	0					
ANR	2587739	UnaryOperationExpression	- 1		2584736	1					
ANR	2587740	UnaryOperator	-		2584736	0					
ANR	2587741	PrimaryExpression	1		2584736	1					
ANR	2587742	ExpressionStatement	"errprintf ( udev -> memory , ""PCL-Open: %ld is unreasonable size of Outputbuffer\\n"" , ( long ) noutbuf )"	6965:12:249596:249719	2584736	1	True				
ANR	2587743	CallExpression	"errprintf ( udev -> memory , ""PCL-Open: %ld is unreasonable size of Outputbuffer\\n"" , ( long ) noutbuf )"		2584736	0					
ANR	2587744	Callee	errprintf		2584736	0					
ANR	2587745	Identifier	errprintf		2584736	0					
ANR	2587746	ArgumentList	udev -> memory		2584736	1					
ANR	2587747	Argument	udev -> memory		2584736	0					
ANR	2587748	PtrMemberAccess	udev -> memory		2584736	0					
ANR	2587749	Identifier	udev		2584736	0					
ANR	2587750	Identifier	memory		2584736	1					
ANR	2587751	Argument	"""PCL-Open: %ld is unreasonable size of Outputbuffer\\n"""		2584736	1					
ANR	2587752	PrimaryExpression	"""PCL-Open: %ld is unreasonable size of Outputbuffer\\n"""		2584736	0					
ANR	2587753	Argument	( long ) noutbuf		2584736	2					
ANR	2587754	CastExpression	( long ) noutbuf		2584736	0					
ANR	2587755	CastTarget	long		2584736	0					
ANR	2587756	Identifier	noutbuf		2584736	1					
ANR	2587757	ReturnStatement	return error ;	6972:3:249745:249757	2584736	5	True				
ANR	2587758	Identifier	error		2584736	0					
ANR	2587759	ReturnType	static int		2584736	1					
ANR	2587760	Identifier	upd_open_wrtrtl		2584736	2					
ANR	2587761	ParameterList	upd_device * udev		2584736	3					
ANR	2587762	Parameter	upd_device * udev	6430:16:229182:229197	2584736	0	True				
ANR	2587763	ParameterType	upd_device *		2584736	0					
ANR	2587764	Identifier	udev		2584736	1					
ANR	2587765	CFGEntryNode	ENTRY		2584736		True				
ANR	2587766	CFGExitNode	EXIT		2584736		True				
ANR	2587767	Symbol	* upd -> string_a		2584736						
ANR	2587768	Symbol	* upd -> strings [ S_BEGIN ] . data		2584736						
ANR	2587769	Symbol	* upd -> string_a [ SA_WRITECOMP ] . data		2584736						
ANR	2587770	Symbol	strlen		2584736						
ANR	2587771	Symbol	* udev		2584736						
ANR	2587772	Symbol	tmp		2584736						
ANR	2587773	Symbol	S_BEGIN		2584736						
ANR	2587774	Symbol	state		2584736						
ANR	2587775	Symbol	udev -> height		2584736						
ANR	2587776	Symbol	upd -> nbytes		2584736						
ANR	2587777	Symbol	* * S_BEGIN		2584736						
ANR	2587778	Symbol	upd		2584736						
ANR	2587779	Symbol	* SA_WRITECOMP		2584736						
ANR	2587780	Symbol	SA_WRITECOMP		2584736						
ANR	2587781	Symbol	udev -> y_pixels_per_inch		2584736						
ANR	2587782	Symbol	noutbuf		2584736						
ANR	2587783	Symbol	udev -> width		2584736						
ANR	2587784	Symbol	udev		2584736						
ANR	2587785	Symbol	nbp		2584736						
ANR	2587786	Symbol	upd -> pwidth		2584736						
ANR	2587787	Symbol	upd -> pheight		2584736						
ANR	2587788	Symbol	upd -> string_a [ SA_WRITECOMP ] . data [ upd -> ocomp - 1 ] . size		2584736						
ANR	2587789	Symbol	upd -> strings [ S_BEGIN ] . size		2584736						
ANR	2587790	Symbol	* S_BEGIN		2584736						
ANR	2587791	Symbol	upd -> strings		2584736						
ANR	2587792	Symbol	ny		2584736						
ANR	2587793	Symbol	error		2584736						
ANR	2587794	Symbol	bp		2584736						
ANR	2587795	Symbol	upd -> flags		2584736						
ANR	2587796	Symbol	udev -> upd		2584736						
ANR	2587797	Symbol	* upd		2584736						
ANR	2587798	Symbol	upd_wrtrtl		2584736						
ANR	2587799	Symbol	* * upd -> string_a		2584736						
ANR	2587800	Symbol	upd -> ocomp		2584736						
ANR	2587801	Symbol	upd -> string_a [ SA_WRITECOMP ] . size		2584736						
ANR	2587802	Symbol	* upd -> strings		2584736						
ANR	2587803	Symbol	* * SA_WRITECOMP		2584736						
ANR	2587804	Symbol	ncv		2584736						
ANR	2587805	Symbol	* upd -> ocomp		2584736						
ANR	2587806	Symbol	upd -> strings [ S_YMOVE ] . size		2584736						
ANR	2587807	Symbol	c		2584736						
ANR	2587808	Symbol	* S_YMOVE		2584736						
ANR	2587809	Symbol	udev -> memory		2584736						
ANR	2587810	Symbol	* * * upd		2584736						
ANR	2587811	Symbol	i		2584736						
ANR	2587812	Symbol	j		2584736						
ANR	2587813	Symbol	upd -> string_a		2584736						
ANR	2587814	Symbol	B_PAGEWIDTH		2584736						
ANR	2587815	Symbol	upd -> noutbuf		2584736						
ANR	2587816	Symbol	upd -> strings [ S_BEGIN ] . data		2584736						
ANR	2587817	Symbol	udev -> x_pixels_per_inch		2584736						
ANR	2587818	Symbol	cv		2584736						
ANR	2587819	Symbol	* i		2584736						
ANR	2587820	Symbol	B_PAGELENGTH		2584736						
ANR	2587821	Symbol	S_YMOVE		2584736						
ANR	2587822	Symbol	upd -> string_a [ SA_WRITECOMP ] . data		2584736						
ANR	2587823	Symbol	upd -> writer		2584736						
ANR	2587824	Symbol	* * upd		2584736						
ANR	2587825	Symbol	* * upd -> strings		2584736						
ANR	2587826	Symbol	B_RESOLUTION		2584736						
ANR	2587827	Function	upd_wrtrtl	6979:0:249985:252181							
ANR	2587828	FunctionDef	"upd_wrtrtl (upd_p upd , FILE * out)"		2587827	0					
ANR	2587829	CompoundStatement		6981:0:250029:252181	2587827	0					
ANR	2587830	IdentifierDeclStatement	const updscan_p scan = upd -> scnbuf [ upd -> yscan & upd -> scnmsk ] ;	6982:3:250034:250094	2587827	0	True				
ANR	2587831	IdentifierDecl	scan = upd -> scnbuf [ upd -> yscan & upd -> scnmsk ]		2587827	0					
ANR	2587832	IdentifierDeclType	const updscan_p		2587827	0					
ANR	2587833	Identifier	scan		2587827	1					
ANR	2587834	AssignmentExpression	scan = upd -> scnbuf [ upd -> yscan & upd -> scnmsk ]		2587827	2		=			
ANR	2587835	Identifier	scan		2587827	0					
ANR	2587836	ArrayIndexing	upd -> scnbuf [ upd -> yscan & upd -> scnmsk ]		2587827	1					
ANR	2587837	PtrMemberAccess	upd -> scnbuf		2587827	0					
ANR	2587838	Identifier	upd		2587827	0					
ANR	2587839	Identifier	scnbuf		2587827	1					
ANR	2587840	BitAndExpression	upd -> yscan & upd -> scnmsk		2587827	1		&			
ANR	2587841	PtrMemberAccess	upd -> yscan		2587827	0					
ANR	2587842	Identifier	upd		2587827	0					
ANR	2587843	Identifier	yscan		2587827	1					
ANR	2587844	PtrMemberAccess	upd -> scnmsk		2587827	1					
ANR	2587845	Identifier	upd		2587827	0					
ANR	2587846	Identifier	scnmsk		2587827	1					
ANR	2587847	IdentifierDeclStatement	"int x , xend , icomp , ioutbuf ;"	6984:3:250100:250125	2587827	1	True				
ANR	2587848	IdentifierDecl	x		2587827	0					
ANR	2587849	IdentifierDeclType	int		2587827	0					
ANR	2587850	Identifier	x		2587827	1					
ANR	2587851	IdentifierDecl	xend		2587827	1					
ANR	2587852	IdentifierDeclType	int		2587827	0					
ANR	2587853	Identifier	xend		2587827	1					
ANR	2587854	IdentifierDecl	icomp		2587827	2					
ANR	2587855	IdentifierDeclType	int		2587827	0					
ANR	2587856	Identifier	icomp		2587827	1					
ANR	2587857	IdentifierDecl	ioutbuf		2587827	3					
ANR	2587858	IdentifierDeclType	int		2587827	0					
ANR	2587859	Identifier	ioutbuf		2587827	1					
ANR	2587860	IdentifierDeclStatement	byte * data ;	6985:3:250130:250140	2587827	2	True				
ANR	2587861	IdentifierDecl	* data		2587827	0					
ANR	2587862	IdentifierDeclType	byte *		2587827	0					
ANR	2587863	Identifier	data		2587827	1					
ANR	2587864	ExpressionStatement	xend = - 1	6989:3:250183:250194	2587827	3	True				
ANR	2587865	AssignmentExpression	xend = - 1		2587827	0		=			
ANR	2587866	Identifier	xend		2587827	0					
ANR	2587867	UnaryOperationExpression	- 1		2587827	1					
ANR	2587868	UnaryOperator	-		2587827	0					
ANR	2587869	PrimaryExpression	1		2587827	1					
ANR	2587870	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		2587827	4					
ANR	2587871	ForInit	icomp = 0 ;	6990:7:250203:250212	2587827	0	True				
ANR	2587872	AssignmentExpression	icomp = 0		2587827	0		=			
ANR	2587873	Identifier	icomp		2587827	0					
ANR	2587874	PrimaryExpression	0		2587827	1					
ANR	2587875	Condition	icomp < upd -> ocomp	6990:18:250214:250231	2587827	1	True				
ANR	2587876	RelationalExpression	icomp < upd -> ocomp		2587827	0		<			
ANR	2587877	Identifier	icomp		2587827	0					
ANR	2587878	PtrMemberAccess	upd -> ocomp		2587827	1					
ANR	2587879	Identifier	upd		2587827	0					
ANR	2587880	Identifier	ocomp		2587827	1					
ANR	2587881	UnaryExpression	++ icomp	6990:38:250234:250240	2587827	2	True				
ANR	2587882	IncDec	++		2587827	0					
ANR	2587883	Identifier	icomp		2587827	1					
ANR	2587884	CompoundStatement		10:47:213:213	2587827	3					
ANR	2587885	ExpressionStatement	data = scan [ icomp ] . bytes	6992:6:250252:250276	2587827	0	True				
ANR	2587886	AssignmentExpression	data = scan [ icomp ] . bytes		2587827	0		=			
ANR	2587887	Identifier	data		2587827	0					
ANR	2587888	MemberAccess	scan [ icomp ] . bytes		2587827	1					
ANR	2587889	ArrayIndexing	scan [ icomp ]		2587827	0					
ANR	2587890	Identifier	scan		2587827	0					
ANR	2587891	Identifier	icomp		2587827	1					
ANR	2587892	Identifier	bytes		2587827	1					
ANR	2587893	ForStatement	for ( x = upd -> nbytes - 1 ; 0 <= x ; -- x )		2587827	1					
ANR	2587894	ForInit	x = upd -> nbytes - 1 ;	6994:10:250289:250306	2587827	0	True				
ANR	2587895	AssignmentExpression	x = upd -> nbytes - 1		2587827	0		=			
ANR	2587896	Identifier	x		2587827	0					
ANR	2587897	AdditiveExpression	upd -> nbytes - 1		2587827	1		-			
ANR	2587898	PtrMemberAccess	upd -> nbytes		2587827	0					
ANR	2587899	Identifier	upd		2587827	0					
ANR	2587900	Identifier	nbytes		2587827	1					
ANR	2587901	PrimaryExpression	1		2587827	1					
ANR	2587902	Condition	0 <= x	6994:29:250308:250313	2587827	1	True				
ANR	2587903	RelationalExpression	0 <= x		2587827	0		<=			
ANR	2587904	PrimaryExpression	0		2587827	0					
ANR	2587905	Identifier	x		2587827	1					
ANR	2587906	UnaryExpression	-- x	6994:37:250316:250318	2587827	2	True				
ANR	2587907	IncDec	--		2587827	0					
ANR	2587908	Identifier	x		2587827	1					
ANR	2587909	IfStatement	if ( data [ x ] )		2587827	3					
ANR	2587910	Condition	data [ x ]	6994:45:250324:250330	2587827	0	True				
ANR	2587911	ArrayIndexing	data [ x ]		2587827	0					
ANR	2587912	Identifier	data		2587827	0					
ANR	2587913	Identifier	x		2587827	1					
ANR	2587914	BreakStatement	break ;	6994:54:250333:250338	2587827	1	True				
ANR	2587915	IfStatement	if ( x > xend )		2587827	2					
ANR	2587916	Condition	x > xend	6995:9:250349:250356	2587827	0	True				
ANR	2587917	RelationalExpression	x > xend		2587827	0		>			
ANR	2587918	Identifier	x		2587827	0					
ANR	2587919	Identifier	xend		2587827	1					
ANR	2587920	ExpressionStatement	xend = x	6995:19:250359:250368	2587827	1	True				
ANR	2587921	AssignmentExpression	xend = x		2587827	0		=			
ANR	2587922	Identifier	xend		2587827	0					
ANR	2587923	Identifier	x		2587827	1					
ANR	2587924	IfStatement	if ( 0 <= xend )		2587827	5					
ANR	2587925	Condition	0 <= xend	6998:6:250382:250390	2587827	0	True				
ANR	2587926	RelationalExpression	0 <= xend		2587827	0		<=			
ANR	2587927	PrimaryExpression	0		2587827	0					
ANR	2587928	Identifier	xend		2587827	1					
ANR	2587929	CompoundStatement		18:17:363:363	2587827	1					
ANR	2587930	ExpressionStatement	ioutbuf = 0	7000:6:250427:250438	2587827	0	True				
ANR	2587931	AssignmentExpression	ioutbuf = 0		2587827	0		=			
ANR	2587932	Identifier	ioutbuf		2587827	0					
ANR	2587933	PrimaryExpression	0		2587827	1					
ANR	2587934	ExpressionStatement	xend += 1	7001:6:250446:250457	2587827	1	True				
ANR	2587935	AssignmentExpression	xend += 1		2587827	0		+=			
ANR	2587936	Identifier	xend		2587827	0					
ANR	2587937	PrimaryExpression	1		2587827	1					
ANR	2587938	IfStatement	if ( upd -> yscan != upd -> yprinter )		2587827	2					
ANR	2587939	Condition	upd -> yscan != upd -> yprinter	7005:9:250512:250538	2587827	0	True				
ANR	2587940	EqualityExpression	upd -> yscan != upd -> yprinter		2587827	0		!=			
ANR	2587941	PtrMemberAccess	upd -> yscan		2587827	0					
ANR	2587942	Identifier	upd		2587827	0					
ANR	2587943	Identifier	yscan		2587827	1					
ANR	2587944	PtrMemberAccess	upd -> yprinter		2587827	1					
ANR	2587945	Identifier	upd		2587827	0					
ANR	2587946	Identifier	yprinter		2587827	1					
ANR	2587947	CompoundStatement		25:38:511:511	2587827	1					
ANR	2587948	IfStatement	if ( 1 < upd -> strings [ S_YMOVE ] . size )		2587827	0					
ANR	2587949	Condition	1 < upd -> strings [ S_YMOVE ] . size	7006:12:250579:250608	2587827	0	True				
ANR	2587950	RelationalExpression	1 < upd -> strings [ S_YMOVE ] . size		2587827	0		<			
ANR	2587951	PrimaryExpression	1		2587827	0					
ANR	2587952	MemberAccess	upd -> strings [ S_YMOVE ] . size		2587827	1					
ANR	2587953	ArrayIndexing	upd -> strings [ S_YMOVE ]		2587827	0					
ANR	2587954	PtrMemberAccess	upd -> strings		2587827	0					
ANR	2587955	Identifier	upd		2587827	0					
ANR	2587956	Identifier	strings		2587827	1					
ANR	2587957	Identifier	S_YMOVE		2587827	1					
ANR	2587958	Identifier	size		2587827	1					
ANR	2587959	CompoundStatement		26:44:581:581	2587827	1					
ANR	2587960	ExpressionStatement	"gs_sprintf ( ( char * ) upd -> outbuf + ioutbuf , ( const char * ) upd -> strings [ S_YMOVE ] . data , upd -> yscan - upd -> yprinter )"	7007:11:250624:250760	2587827	0	True				
ANR	2587961	CallExpression	"gs_sprintf ( ( char * ) upd -> outbuf + ioutbuf , ( const char * ) upd -> strings [ S_YMOVE ] . data , upd -> yscan - upd -> yprinter )"		2587827	0					
ANR	2587962	Callee	gs_sprintf		2587827	0					
ANR	2587963	Identifier	gs_sprintf		2587827	0					
ANR	2587964	ArgumentList	( char * ) upd -> outbuf + ioutbuf		2587827	1					
ANR	2587965	Argument	( char * ) upd -> outbuf + ioutbuf		2587827	0					
ANR	2587966	AdditiveExpression	( char * ) upd -> outbuf + ioutbuf		2587827	0		+			
ANR	2587967	CastExpression	( char * ) upd -> outbuf		2587827	0					
ANR	2587968	CastTarget	char *		2587827	0					
ANR	2587969	PtrMemberAccess	upd -> outbuf		2587827	1					
ANR	2587970	Identifier	upd		2587827	0					
ANR	2587971	Identifier	outbuf		2587827	1					
ANR	2587972	Identifier	ioutbuf		2587827	1					
ANR	2587973	Argument	( const char * ) upd -> strings [ S_YMOVE ] . data		2587827	1					
ANR	2587974	CastExpression	( const char * ) upd -> strings [ S_YMOVE ] . data		2587827	0					
ANR	2587975	CastTarget	const char *		2587827	0					
ANR	2587976	MemberAccess	upd -> strings [ S_YMOVE ] . data		2587827	1					
ANR	2587977	ArrayIndexing	upd -> strings [ S_YMOVE ]		2587827	0					
ANR	2587978	PtrMemberAccess	upd -> strings		2587827	0					
ANR	2587979	Identifier	upd		2587827	0					
ANR	2587980	Identifier	strings		2587827	1					
ANR	2587981	Identifier	S_YMOVE		2587827	1					
ANR	2587982	Identifier	data		2587827	1					
ANR	2587983	Argument	upd -> yscan - upd -> yprinter		2587827	2					
ANR	2587984	AdditiveExpression	upd -> yscan - upd -> yprinter		2587827	0		-			
ANR	2587985	PtrMemberAccess	upd -> yscan		2587827	0					
ANR	2587986	Identifier	upd		2587827	0					
ANR	2587987	Identifier	yscan		2587827	1					
ANR	2587988	PtrMemberAccess	upd -> yprinter		2587827	1					
ANR	2587989	Identifier	upd		2587827	0					
ANR	2587990	Identifier	yprinter		2587827	1					
ANR	2587991	ExpressionStatement	ioutbuf += strlen ( ( char * ) upd -> outbuf + ioutbuf )	7010:11:250773:250819	2587827	1	True				
ANR	2587992	AssignmentExpression	ioutbuf += strlen ( ( char * ) upd -> outbuf + ioutbuf )		2587827	0		+=			
ANR	2587993	Identifier	ioutbuf		2587827	0					
ANR	2587994	CallExpression	strlen ( ( char * ) upd -> outbuf + ioutbuf )		2587827	1					
ANR	2587995	Callee	strlen		2587827	0					
ANR	2587996	Identifier	strlen		2587827	0					
ANR	2587997	ArgumentList	( char * ) upd -> outbuf + ioutbuf		2587827	1					
ANR	2587998	Argument	( char * ) upd -> outbuf + ioutbuf		2587827	0					
ANR	2587999	AdditiveExpression	( char * ) upd -> outbuf + ioutbuf		2587827	0		+			
ANR	2588000	CastExpression	( char * ) upd -> outbuf		2587827	0					
ANR	2588001	CastTarget	char *		2587827	0					
ANR	2588002	PtrMemberAccess	upd -> outbuf		2587827	1					
ANR	2588003	Identifier	upd		2587827	0					
ANR	2588004	Identifier	outbuf		2587827	1					
ANR	2588005	Identifier	ioutbuf		2587827	1					
ANR	2588006	ElseStatement	else		2587827	0					
ANR	2588007	CompoundStatement		31:16:807:807	2587827	0					
ANR	2588008	WhileStatement	while ( upd -> yscan > upd -> yprinter )		2587827	0					
ANR	2588009	Condition	upd -> yscan > upd -> yprinter	7012:17:250856:250881	2587827	0	True				
ANR	2588010	RelationalExpression	upd -> yscan > upd -> yprinter		2587827	0		>			
ANR	2588011	PtrMemberAccess	upd -> yscan		2587827	0					
ANR	2588012	Identifier	upd		2587827	0					
ANR	2588013	Identifier	yscan		2587827	1					
ANR	2588014	PtrMemberAccess	upd -> yprinter		2587827	1					
ANR	2588015	Identifier	upd		2587827	0					
ANR	2588016	Identifier	yprinter		2587827	1					
ANR	2588017	CompoundStatement		32:45:854:854	2587827	1					
ANR	2588018	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		2587827	0					
ANR	2588019	ForInit	icomp = 0 ;	7013:17:250903:250912	2587827	0	True				
ANR	2588020	AssignmentExpression	icomp = 0		2587827	0		=			
ANR	2588021	Identifier	icomp		2587827	0					
ANR	2588022	PrimaryExpression	0		2587827	1					
ANR	2588023	Condition	icomp < upd -> ocomp	7013:28:250914:250931	2587827	1	True				
ANR	2588024	RelationalExpression	icomp < upd -> ocomp		2587827	0		<			
ANR	2588025	Identifier	icomp		2587827	0					
ANR	2588026	PtrMemberAccess	upd -> ocomp		2587827	1					
ANR	2588027	Identifier	upd		2587827	0					
ANR	2588028	Identifier	ocomp		2587827	1					
ANR	2588029	UnaryExpression	++ icomp	7013:48:250934:250940	2587827	2	True				
ANR	2588030	IncDec	++		2587827	0					
ANR	2588031	Identifier	icomp		2587827	1					
ANR	2588032	CompoundStatement		33:57:913:913	2587827	3					
ANR	2588033	ExpressionStatement	"gs_sprintf ( ( char * ) upd -> outbuf + ioutbuf , ( const char * ) upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , 0 )"	7014:15:250960:251079	2587827	0	True				
ANR	2588034	CallExpression	"gs_sprintf ( ( char * ) upd -> outbuf + ioutbuf , ( const char * ) upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , 0 )"		2587827	0					
ANR	2588035	Callee	gs_sprintf		2587827	0					
ANR	2588036	Identifier	gs_sprintf		2587827	0					
ANR	2588037	ArgumentList	( char * ) upd -> outbuf + ioutbuf		2587827	1					
ANR	2588038	Argument	( char * ) upd -> outbuf + ioutbuf		2587827	0					
ANR	2588039	AdditiveExpression	( char * ) upd -> outbuf + ioutbuf		2587827	0		+			
ANR	2588040	CastExpression	( char * ) upd -> outbuf		2587827	0					
ANR	2588041	CastTarget	char *		2587827	0					
ANR	2588042	PtrMemberAccess	upd -> outbuf		2587827	1					
ANR	2588043	Identifier	upd		2587827	0					
ANR	2588044	Identifier	outbuf		2587827	1					
ANR	2588045	Identifier	ioutbuf		2587827	1					
ANR	2588046	Argument	( const char * ) upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		2587827	1					
ANR	2588047	CastExpression	( const char * ) upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		2587827	0					
ANR	2588048	CastTarget	const char *		2587827	0					
ANR	2588049	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		2587827	1					
ANR	2588050	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		2587827	0					
ANR	2588051	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		2587827	0					
ANR	2588052	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2587827	0					
ANR	2588053	PtrMemberAccess	upd -> string_a		2587827	0					
ANR	2588054	Identifier	upd		2587827	0					
ANR	2588055	Identifier	string_a		2587827	1					
ANR	2588056	Identifier	SA_WRITECOMP		2587827	1					
ANR	2588057	Identifier	data		2587827	1					
ANR	2588058	Identifier	icomp		2587827	1					
ANR	2588059	Identifier	data		2587827	1					
ANR	2588060	Argument	0		2587827	2					
ANR	2588061	PrimaryExpression	0		2587827	0					
ANR	2588062	ExpressionStatement	ioutbuf += strlen ( ( char * ) upd -> outbuf + ioutbuf )	7016:15:251096:251142	2587827	1	True				
ANR	2588063	AssignmentExpression	ioutbuf += strlen ( ( char * ) upd -> outbuf + ioutbuf )		2587827	0		+=			
ANR	2588064	Identifier	ioutbuf		2587827	0					
ANR	2588065	CallExpression	strlen ( ( char * ) upd -> outbuf + ioutbuf )		2587827	1					
ANR	2588066	Callee	strlen		2587827	0					
ANR	2588067	Identifier	strlen		2587827	0					
ANR	2588068	ArgumentList	( char * ) upd -> outbuf + ioutbuf		2587827	1					
ANR	2588069	Argument	( char * ) upd -> outbuf + ioutbuf		2587827	0					
ANR	2588070	AdditiveExpression	( char * ) upd -> outbuf + ioutbuf		2587827	0		+			
ANR	2588071	CastExpression	( char * ) upd -> outbuf		2587827	0					
ANR	2588072	CastTarget	char *		2587827	0					
ANR	2588073	PtrMemberAccess	upd -> outbuf		2587827	1					
ANR	2588074	Identifier	upd		2587827	0					
ANR	2588075	Identifier	outbuf		2587827	1					
ANR	2588076	Identifier	ioutbuf		2587827	1					
ANR	2588077	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	7018:13:251172:251205	2587827	1	True				
ANR	2588078	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		2587827	0					
ANR	2588079	Callee	fwrite		2587827	0					
ANR	2588080	Identifier	fwrite		2587827	0					
ANR	2588081	ArgumentList	upd -> outbuf		2587827	1					
ANR	2588082	Argument	upd -> outbuf		2587827	0					
ANR	2588083	PtrMemberAccess	upd -> outbuf		2587827	0					
ANR	2588084	Identifier	upd		2587827	0					
ANR	2588085	Identifier	outbuf		2587827	1					
ANR	2588086	Argument	1		2587827	1					
ANR	2588087	PrimaryExpression	1		2587827	0					
ANR	2588088	Argument	ioutbuf		2587827	2					
ANR	2588089	Identifier	ioutbuf		2587827	0					
ANR	2588090	Argument	out		2587827	3					
ANR	2588091	Identifier	out		2587827	0					
ANR	2588092	ExpressionStatement	ioutbuf = 0	7019:13:251220:251231	2587827	2	True				
ANR	2588093	AssignmentExpression	ioutbuf = 0		2587827	0		=			
ANR	2588094	Identifier	ioutbuf		2587827	0					
ANR	2588095	PrimaryExpression	0		2587827	1					
ANR	2588096	ExpressionStatement	upd -> yprinter += 1	7020:13:251246:251264	2587827	3	True				
ANR	2588097	AssignmentExpression	upd -> yprinter += 1		2587827	0		+=			
ANR	2588098	PtrMemberAccess	upd -> yprinter		2587827	0					
ANR	2588099	Identifier	upd		2587827	0					
ANR	2588100	Identifier	yprinter		2587827	1					
ANR	2588101	PrimaryExpression	1		2587827	1					
ANR	2588102	ExpressionStatement	upd -> yprinter = upd -> yscan	7023:9:251299:251325	2587827	1	True				
ANR	2588103	AssignmentExpression	upd -> yprinter = upd -> yscan		2587827	0		=			
ANR	2588104	PtrMemberAccess	upd -> yprinter		2587827	0					
ANR	2588105	Identifier	upd		2587827	0					
ANR	2588106	Identifier	yprinter		2587827	1					
ANR	2588107	PtrMemberAccess	upd -> yscan		2587827	1					
ANR	2588108	Identifier	upd		2587827	0					
ANR	2588109	Identifier	yscan		2587827	1					
ANR	2588110	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	7024:9:251336:251369	2587827	2	True				
ANR	2588111	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		2587827	0					
ANR	2588112	Callee	fwrite		2587827	0					
ANR	2588113	Identifier	fwrite		2587827	0					
ANR	2588114	ArgumentList	upd -> outbuf		2587827	1					
ANR	2588115	Argument	upd -> outbuf		2587827	0					
ANR	2588116	PtrMemberAccess	upd -> outbuf		2587827	0					
ANR	2588117	Identifier	upd		2587827	0					
ANR	2588118	Identifier	outbuf		2587827	1					
ANR	2588119	Argument	1		2587827	1					
ANR	2588120	PrimaryExpression	1		2587827	0					
ANR	2588121	Argument	ioutbuf		2587827	2					
ANR	2588122	Identifier	ioutbuf		2587827	0					
ANR	2588123	Argument	out		2587827	3					
ANR	2588124	Identifier	out		2587827	0					
ANR	2588125	ExpressionStatement	ioutbuf = 0	7025:9:251380:251391	2587827	3	True				
ANR	2588126	AssignmentExpression	ioutbuf = 0		2587827	0		=			
ANR	2588127	Identifier	ioutbuf		2587827	0					
ANR	2588128	PrimaryExpression	0		2587827	1					
ANR	2588129	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		2587827	3					
ANR	2588130	ForInit	icomp = 0 ;	7030:10:251507:251516	2587827	0	True				
ANR	2588131	AssignmentExpression	icomp = 0		2587827	0		=			
ANR	2588132	Identifier	icomp		2587827	0					
ANR	2588133	PrimaryExpression	0		2587827	1					
ANR	2588134	Condition	icomp < upd -> ocomp	7030:21:251518:251535	2587827	1	True				
ANR	2588135	RelationalExpression	icomp < upd -> ocomp		2587827	0		<			
ANR	2588136	Identifier	icomp		2587827	0					
ANR	2588137	PtrMemberAccess	upd -> ocomp		2587827	1					
ANR	2588138	Identifier	upd		2587827	0					
ANR	2588139	Identifier	ocomp		2587827	1					
ANR	2588140	UnaryExpression	++ icomp	7030:41:251538:251544	2587827	2	True				
ANR	2588141	IncDec	++		2587827	0					
ANR	2588142	Identifier	icomp		2587827	1					
ANR	2588143	CompoundStatement		50:50:1517:1517	2587827	3					
ANR	2588144	ExpressionStatement	data = scan [ icomp ] . bytes	7031:9:251580:251604	2587827	0	True				
ANR	2588145	AssignmentExpression	data = scan [ icomp ] . bytes		2587827	0		=			
ANR	2588146	Identifier	data		2587827	0					
ANR	2588147	MemberAccess	scan [ icomp ] . bytes		2587827	1					
ANR	2588148	ArrayIndexing	scan [ icomp ]		2587827	0					
ANR	2588149	Identifier	scan		2587827	0					
ANR	2588150	Identifier	icomp		2587827	1					
ANR	2588151	Identifier	bytes		2587827	1					
ANR	2588152	ForStatement	for ( x = 0 ; x <= xend ; ++ x )		2587827	1					
ANR	2588153	ForInit	x = 0 ;	7032:13:251619:251624	2587827	0	True				
ANR	2588154	AssignmentExpression	x = 0		2587827	0		=			
ANR	2588155	Identifier	x		2587827	0					
ANR	2588156	PrimaryExpression	0		2587827	1					
ANR	2588157	Condition	x <= xend	7032:20:251626:251634	2587827	1	True				
ANR	2588158	RelationalExpression	x <= xend		2587827	0		<=			
ANR	2588159	Identifier	x		2587827	0					
ANR	2588160	Identifier	xend		2587827	1					
ANR	2588161	UnaryExpression	++ x	7032:31:251637:251639	2587827	2	True				
ANR	2588162	IncDec	++		2587827	0					
ANR	2588163	Identifier	x		2587827	1					
ANR	2588164	IfStatement	if ( data [ x ] )		2587827	3					
ANR	2588165	Condition	data [ x ]	7032:39:251645:251651	2587827	0	True				
ANR	2588166	ArrayIndexing	data [ x ]		2587827	0					
ANR	2588167	Identifier	data		2587827	0					
ANR	2588168	Identifier	x		2587827	1					
ANR	2588169	BreakStatement	break ;	7032:48:251654:251659	2587827	1	True				
ANR	2588170	IfStatement	if ( x <= xend )		2587827	2					
ANR	2588171	Condition	x <= xend	7033:12:251673:251681	2587827	0	True				
ANR	2588172	RelationalExpression	x <= xend		2587827	0		<=			
ANR	2588173	Identifier	x		2587827	0					
ANR	2588174	Identifier	xend		2587827	1					
ANR	2588175	CompoundStatement		53:23:1654:1654	2587827	1					
ANR	2588176	ExpressionStatement	"ioutbuf = upd_rle ( upd -> outbuf , scan [ icomp ] . bytes , xend )"	7034:11:251697:251750	2587827	0	True				
ANR	2588177	AssignmentExpression	"ioutbuf = upd_rle ( upd -> outbuf , scan [ icomp ] . bytes , xend )"		2587827	0		=			
ANR	2588178	Identifier	ioutbuf		2587827	0					
ANR	2588179	CallExpression	"upd_rle ( upd -> outbuf , scan [ icomp ] . bytes , xend )"		2587827	1					
ANR	2588180	Callee	upd_rle		2587827	0					
ANR	2588181	Identifier	upd_rle		2587827	0					
ANR	2588182	ArgumentList	upd -> outbuf		2587827	1					
ANR	2588183	Argument	upd -> outbuf		2587827	0					
ANR	2588184	PtrMemberAccess	upd -> outbuf		2587827	0					
ANR	2588185	Identifier	upd		2587827	0					
ANR	2588186	Identifier	outbuf		2587827	1					
ANR	2588187	Argument	scan [ icomp ] . bytes		2587827	1					
ANR	2588188	MemberAccess	scan [ icomp ] . bytes		2587827	0					
ANR	2588189	ArrayIndexing	scan [ icomp ]		2587827	0					
ANR	2588190	Identifier	scan		2587827	0					
ANR	2588191	Identifier	icomp		2587827	1					
ANR	2588192	Identifier	bytes		2587827	1					
ANR	2588193	Argument	xend		2587827	2					
ANR	2588194	Identifier	xend		2587827	0					
ANR	2588195	ExpressionStatement	"fprintf ( out , ( const char * ) upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , ioutbuf )"	7035:11:251763:251855	2587827	1	True				
ANR	2588196	CallExpression	"fprintf ( out , ( const char * ) upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , ioutbuf )"		2587827	0					
ANR	2588197	Callee	fprintf		2587827	0					
ANR	2588198	Identifier	fprintf		2587827	0					
ANR	2588199	ArgumentList	out		2587827	1					
ANR	2588200	Argument	out		2587827	0					
ANR	2588201	Identifier	out		2587827	0					
ANR	2588202	Argument	( const char * ) upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		2587827	1					
ANR	2588203	CastExpression	( const char * ) upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		2587827	0					
ANR	2588204	CastTarget	const char *		2587827	0					
ANR	2588205	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		2587827	1					
ANR	2588206	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		2587827	0					
ANR	2588207	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		2587827	0					
ANR	2588208	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2587827	0					
ANR	2588209	PtrMemberAccess	upd -> string_a		2587827	0					
ANR	2588210	Identifier	upd		2587827	0					
ANR	2588211	Identifier	string_a		2587827	1					
ANR	2588212	Identifier	SA_WRITECOMP		2587827	1					
ANR	2588213	Identifier	data		2587827	1					
ANR	2588214	Identifier	icomp		2587827	1					
ANR	2588215	Identifier	data		2587827	1					
ANR	2588216	Argument	ioutbuf		2587827	2					
ANR	2588217	Identifier	ioutbuf		2587827	0					
ANR	2588218	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	7037:12:251869:251902	2587827	2	True				
ANR	2588219	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		2587827	0					
ANR	2588220	Callee	fwrite		2587827	0					
ANR	2588221	Identifier	fwrite		2587827	0					
ANR	2588222	ArgumentList	upd -> outbuf		2587827	1					
ANR	2588223	Argument	upd -> outbuf		2587827	0					
ANR	2588224	PtrMemberAccess	upd -> outbuf		2587827	0					
ANR	2588225	Identifier	upd		2587827	0					
ANR	2588226	Identifier	outbuf		2587827	1					
ANR	2588227	Argument	1		2587827	1					
ANR	2588228	PrimaryExpression	1		2587827	0					
ANR	2588229	Argument	ioutbuf		2587827	2					
ANR	2588230	Identifier	ioutbuf		2587827	0					
ANR	2588231	Argument	out		2587827	3					
ANR	2588232	Identifier	out		2587827	0					
ANR	2588233	ElseStatement	else		2587827	0					
ANR	2588234	CompoundStatement		58:16:1890:1890	2587827	0					
ANR	2588235	ExpressionStatement	"fprintf ( out , ( const char * ) upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , 0 )"	7039:11:251933:252020	2587827	0	True				
ANR	2588236	CallExpression	"fprintf ( out , ( const char * ) upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , 0 )"		2587827	0					
ANR	2588237	Callee	fprintf		2587827	0					
ANR	2588238	Identifier	fprintf		2587827	0					
ANR	2588239	ArgumentList	out		2587827	1					
ANR	2588240	Argument	out		2587827	0					
ANR	2588241	Identifier	out		2587827	0					
ANR	2588242	Argument	( const char * ) upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		2587827	1					
ANR	2588243	CastExpression	( const char * ) upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		2587827	0					
ANR	2588244	CastTarget	const char *		2587827	0					
ANR	2588245	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		2587827	1					
ANR	2588246	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		2587827	0					
ANR	2588247	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		2587827	0					
ANR	2588248	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		2587827	0					
ANR	2588249	PtrMemberAccess	upd -> string_a		2587827	0					
ANR	2588250	Identifier	upd		2587827	0					
ANR	2588251	Identifier	string_a		2587827	1					
ANR	2588252	Identifier	SA_WRITECOMP		2587827	1					
ANR	2588253	Identifier	data		2587827	1					
ANR	2588254	Identifier	icomp		2587827	1					
ANR	2588255	Identifier	data		2587827	1					
ANR	2588256	Argument	0		2587827	2					
ANR	2588257	PrimaryExpression	0		2587827	0					
ANR	2588258	ExpressionStatement	upd -> yprinter += 1	7044:6:252048:252066	2587827	4	True				
ANR	2588259	AssignmentExpression	upd -> yprinter += 1		2587827	0		+=			
ANR	2588260	PtrMemberAccess	upd -> yprinter		2587827	0					
ANR	2588261	Identifier	upd		2587827	0					
ANR	2588262	Identifier	yprinter		2587827	1					
ANR	2588263	PrimaryExpression	1		2587827	1					
ANR	2588264	ExpressionStatement	upd -> yscan += 1	7050:3:252150:252165	2587827	6	True				
ANR	2588265	AssignmentExpression	upd -> yscan += 1		2587827	0		+=			
ANR	2588266	PtrMemberAccess	upd -> yscan		2587827	0					
ANR	2588267	Identifier	upd		2587827	0					
ANR	2588268	Identifier	yscan		2587827	1					
ANR	2588269	PrimaryExpression	1		2587827	1					
ANR	2588270	ReturnStatement	return 0 ;	7052:3:252171:252179	2587827	7	True				
ANR	2588271	PrimaryExpression	0		2587827	0					
ANR	2588272	ReturnType	static int		2587827	1					
ANR	2588273	Identifier	upd_wrtrtl		2587827	2					
ANR	2588274	ParameterList	"upd_p upd , FILE * out"		2587827	3					
ANR	2588275	Parameter	upd_p upd	6980:11:250007:250015	2587827	0	True				
ANR	2588276	ParameterType	upd_p		2587827	0					
ANR	2588277	Identifier	upd		2587827	1					
ANR	2588278	Parameter	FILE * out	6980:22:250018:250026	2587827	1	True				
ANR	2588279	ParameterType	FILE *		2587827	0					
ANR	2588280	Identifier	out		2587827	1					
ANR	2588281	CFGEntryNode	ENTRY		2587827		True				
ANR	2588282	CFGExitNode	EXIT		2587827		True				
ANR	2588283	Symbol	* upd -> string_a		2587827						
ANR	2588284	Symbol	* x		2587827						
ANR	2588285	Symbol	data		2587827						
ANR	2588286	Symbol	* upd -> yscan		2587827						
ANR	2588287	Symbol	scan		2587827						
ANR	2588288	Symbol	upd -> strings		2587827						
ANR	2588289	Symbol	icomp		2587827						
ANR	2588290	Symbol	scan [ icomp ] . bytes		2587827						
ANR	2588291	Symbol	out		2587827						
ANR	2588292	Symbol	upd -> yscan		2587827						
ANR	2588293	Symbol	* upd -> string_a [ SA_WRITECOMP ] . data		2587827						
ANR	2588294	Symbol	upd_rle		2587827						
ANR	2588295	Symbol	strlen		2587827						
ANR	2588296	Symbol	* upd		2587827						
ANR	2588297	Symbol	* icomp		2587827						
ANR	2588298	Symbol	upd -> strings [ S_YMOVE ] . data		2587827						
ANR	2588299	Symbol	* scan		2587827						
ANR	2588300	Symbol	* * upd -> string_a		2587827						
ANR	2588301	Symbol	* upd -> scnmsk		2587827						
ANR	2588302	Symbol	xend		2587827						
ANR	2588303	Symbol	upd -> ocomp		2587827						
ANR	2588304	Symbol	upd -> nbytes		2587827						
ANR	2588305	Symbol	* upd -> strings		2587827						
ANR	2588306	Symbol	* * SA_WRITECOMP		2587827						
ANR	2588307	Symbol	upd -> strings [ S_YMOVE ] . size		2587827						
ANR	2588308	Symbol	* S_YMOVE		2587827						
ANR	2588309	Symbol	* upd -> scnbuf		2587827						
ANR	2588310	Symbol	upd -> scnmsk		2587827						
ANR	2588311	Symbol	* * * upd		2587827						
ANR	2588312	Symbol	upd		2587827						
ANR	2588313	Symbol	* SA_WRITECOMP		2587827						
ANR	2588314	Symbol	SA_WRITECOMP		2587827						
ANR	2588315	Symbol	upd -> yprinter		2587827						
ANR	2588316	Symbol	upd -> string_a		2587827						
ANR	2588317	Symbol	ioutbuf		2587827						
ANR	2588318	Symbol	upd -> scnbuf		2587827						
ANR	2588319	Symbol	S_YMOVE		2587827						
ANR	2588320	Symbol	upd -> string_a [ SA_WRITECOMP ] . data		2587827						
ANR	2588321	Symbol	x		2587827						
ANR	2588322	Symbol	upd -> outbuf		2587827						
ANR	2588323	Symbol	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		2587827						
ANR	2588324	Symbol	* * upd		2587827						
ANR	2588325	Symbol	* data		2587827						
ANR	2588326	Function	upd_open_wrtcanon	7059:0:252407:252670							
ANR	2588327	FunctionDef	upd_open_wrtcanon (upd_device * udev)		2588326	0					
ANR	2588328	CompoundStatement		7061:0:252454:252670	2588326	0					
ANR	2588329	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	7062:2:252458:252485	2588326	0	True				
ANR	2588330	IdentifierDecl	upd = udev -> upd		2588326	0					
ANR	2588331	IdentifierDeclType	const upd_p		2588326	0					
ANR	2588332	Identifier	upd		2588326	1					
ANR	2588333	AssignmentExpression	upd = udev -> upd		2588326	2		=			
ANR	2588334	Identifier	upd		2588326	0					
ANR	2588335	PtrMemberAccess	udev -> upd		2588326	1					
ANR	2588336	Identifier	udev		2588326	0					
ANR	2588337	Identifier	upd		2588326	1					
ANR	2588338	IdentifierDeclStatement	int error = 0 ;	7063:2:252489:252502	2588326	1	True				
ANR	2588339	IdentifierDecl	error = 0		2588326	0					
ANR	2588340	IdentifierDeclType	int		2588326	0					
ANR	2588341	Identifier	error		2588326	1					
ANR	2588342	AssignmentExpression	error = 0		2588326	2		=			
ANR	2588343	Identifier	error		2588326	0					
ANR	2588344	PrimaryExpression	0		2588326	1					
ANR	2588345	ExpressionStatement	upd -> noutbuf = upd -> nbytes + ( upd -> nbytes + 127 ) / 128	7066:2:252546:252600	2588326	2	True				
ANR	2588346	AssignmentExpression	upd -> noutbuf = upd -> nbytes + ( upd -> nbytes + 127 ) / 128		2588326	0		=			
ANR	2588347	PtrMemberAccess	upd -> noutbuf		2588326	0					
ANR	2588348	Identifier	upd		2588326	0					
ANR	2588349	Identifier	noutbuf		2588326	1					
ANR	2588350	AdditiveExpression	upd -> nbytes + ( upd -> nbytes + 127 ) / 128		2588326	1		+			
ANR	2588351	PtrMemberAccess	upd -> nbytes		2588326	0					
ANR	2588352	Identifier	upd		2588326	0					
ANR	2588353	Identifier	nbytes		2588326	1					
ANR	2588354	MultiplicativeExpression	( upd -> nbytes + 127 ) / 128		2588326	1		/			
ANR	2588355	AdditiveExpression	upd -> nbytes + 127		2588326	0		+			
ANR	2588356	PtrMemberAccess	upd -> nbytes		2588326	0					
ANR	2588357	Identifier	upd		2588326	0					
ANR	2588358	Identifier	nbytes		2588326	1					
ANR	2588359	PrimaryExpression	127		2588326	1					
ANR	2588360	PrimaryExpression	128		2588326	1					
ANR	2588361	ExpressionStatement	upd -> writer = upd_wrtcanon	7067:2:252604:252631	2588326	3	True				
ANR	2588362	AssignmentExpression	upd -> writer = upd_wrtcanon		2588326	0		=			
ANR	2588363	PtrMemberAccess	upd -> writer		2588326	0					
ANR	2588364	Identifier	upd		2588326	0					
ANR	2588365	Identifier	writer		2588326	1					
ANR	2588366	Identifier	upd_wrtcanon		2588326	1					
ANR	2588367	ExpressionStatement	error = 1	7068:2:252635:252651	2588326	4	True				
ANR	2588368	AssignmentExpression	error = 1		2588326	0		=			
ANR	2588369	Identifier	error		2588326	0					
ANR	2588370	PrimaryExpression	1		2588326	1					
ANR	2588371	ReturnStatement	return error ;	7070:2:252656:252668	2588326	5	True				
ANR	2588372	Identifier	error		2588326	0					
ANR	2588373	ReturnType	static int		2588326	1					
ANR	2588374	Identifier	upd_open_wrtcanon		2588326	2					
ANR	2588375	ParameterList	upd_device * udev		2588326	3					
ANR	2588376	Parameter	upd_device * udev	7060:18:252436:252451	2588326	0	True				
ANR	2588377	ParameterType	upd_device *		2588326	0					
ANR	2588378	Identifier	udev		2588326	1					
ANR	2588379	CFGEntryNode	ENTRY		2588326		True				
ANR	2588380	CFGExitNode	EXIT		2588326		True				
ANR	2588381	Symbol	udev -> upd		2588326						
ANR	2588382	Symbol	upd -> noutbuf		2588326						
ANR	2588383	Symbol	* udev		2588326						
ANR	2588384	Symbol	* upd		2588326						
ANR	2588385	Symbol	upd -> writer		2588326						
ANR	2588386	Symbol	upd_wrtcanon		2588326						
ANR	2588387	Symbol	udev		2588326						
ANR	2588388	Symbol	upd		2588326						
ANR	2588389	Symbol	error		2588326						
ANR	2588390	Symbol	upd -> nbytes		2588326						
ANR	2588391	Function	upd_wrtcanon	7082:0:252989:255269							
ANR	2588392	FunctionDef	"upd_wrtcanon (upd_p upd , FILE * out)"		2588391	0					
ANR	2588393	CompoundStatement		7084:0:253035:255269	2588391	0					
ANR	2588394	IdentifierDeclStatement	const updscan_p scan = upd -> scnbuf [ upd -> yscan & upd -> scnmsk ] ;	7085:2:253039:253099	2588391	0	True				
ANR	2588395	IdentifierDecl	scan = upd -> scnbuf [ upd -> yscan & upd -> scnmsk ]		2588391	0					
ANR	2588396	IdentifierDeclType	const updscan_p		2588391	0					
ANR	2588397	Identifier	scan		2588391	1					
ANR	2588398	AssignmentExpression	scan = upd -> scnbuf [ upd -> yscan & upd -> scnmsk ]		2588391	2		=			
ANR	2588399	Identifier	scan		2588391	0					
ANR	2588400	ArrayIndexing	upd -> scnbuf [ upd -> yscan & upd -> scnmsk ]		2588391	1					
ANR	2588401	PtrMemberAccess	upd -> scnbuf		2588391	0					
ANR	2588402	Identifier	upd		2588391	0					
ANR	2588403	Identifier	scnbuf		2588391	1					
ANR	2588404	BitAndExpression	upd -> yscan & upd -> scnmsk		2588391	1		&			
ANR	2588405	PtrMemberAccess	upd -> yscan		2588391	0					
ANR	2588406	Identifier	upd		2588391	0					
ANR	2588407	Identifier	yscan		2588391	1					
ANR	2588408	PtrMemberAccess	upd -> scnmsk		2588391	1					
ANR	2588409	Identifier	upd		2588391	0					
ANR	2588410	Identifier	scnmsk		2588391	1					
ANR	2588411	IdentifierDeclStatement	"int x , xend , icomp , ioutbuf , step , ioutbuf1 ;"	7087:2:253104:253147	2588391	1	True				
ANR	2588412	IdentifierDecl	x		2588391	0					
ANR	2588413	IdentifierDeclType	int		2588391	0					
ANR	2588414	Identifier	x		2588391	1					
ANR	2588415	IdentifierDecl	xend		2588391	1					
ANR	2588416	IdentifierDeclType	int		2588391	0					
ANR	2588417	Identifier	xend		2588391	1					
ANR	2588418	IdentifierDecl	icomp		2588391	2					
ANR	2588419	IdentifierDeclType	int		2588391	0					
ANR	2588420	Identifier	icomp		2588391	1					
ANR	2588421	IdentifierDecl	ioutbuf		2588391	3					
ANR	2588422	IdentifierDeclType	int		2588391	0					
ANR	2588423	Identifier	ioutbuf		2588391	1					
ANR	2588424	IdentifierDecl	step		2588391	4					
ANR	2588425	IdentifierDeclType	int		2588391	0					
ANR	2588426	Identifier	step		2588391	1					
ANR	2588427	IdentifierDecl	ioutbuf1		2588391	5					
ANR	2588428	IdentifierDeclType	int		2588391	0					
ANR	2588429	Identifier	ioutbuf1		2588391	1					
ANR	2588430	IdentifierDeclStatement	byte * data ;	7088:2:253151:253161	2588391	2	True				
ANR	2588431	IdentifierDecl	* data		2588391	0					
ANR	2588432	IdentifierDeclType	byte *		2588391	0					
ANR	2588433	Identifier	data		2588391	1					
ANR	2588434	ExpressionStatement	xend = - 1	7091:2:253209:253218	2588391	3	True				
ANR	2588435	AssignmentExpression	xend = - 1		2588391	0		=			
ANR	2588436	Identifier	xend		2588391	0					
ANR	2588437	UnaryOperationExpression	- 1		2588391	1					
ANR	2588438	UnaryOperator	-		2588391	0					
ANR	2588439	PrimaryExpression	1		2588391	1					
ANR	2588440	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		2588391	4					
ANR	2588441	ForInit	icomp = 0 ;	7092:6:253226:253235	2588391	0	True				
ANR	2588442	AssignmentExpression	icomp = 0		2588391	0		=			
ANR	2588443	Identifier	icomp		2588391	0					
ANR	2588444	PrimaryExpression	0		2588391	1					
ANR	2588445	Condition	icomp < upd -> ocomp	7092:17:253237:253254	2588391	1	True				
ANR	2588446	RelationalExpression	icomp < upd -> ocomp		2588391	0		<			
ANR	2588447	Identifier	icomp		2588391	0					
ANR	2588448	PtrMemberAccess	upd -> ocomp		2588391	1					
ANR	2588449	Identifier	upd		2588391	0					
ANR	2588450	Identifier	ocomp		2588391	1					
ANR	2588451	UnaryExpression	++ icomp	7092:37:253257:253263	2588391	2	True				
ANR	2588452	IncDec	++		2588391	0					
ANR	2588453	Identifier	icomp		2588391	1					
ANR	2588454	CompoundStatement		9:46:230:230	2588391	3					
ANR	2588455	ExpressionStatement	data = scan [ icomp ] . bytes	7093:4:253272:253296	2588391	0	True				
ANR	2588456	AssignmentExpression	data = scan [ icomp ] . bytes		2588391	0		=			
ANR	2588457	Identifier	data		2588391	0					
ANR	2588458	MemberAccess	scan [ icomp ] . bytes		2588391	1					
ANR	2588459	ArrayIndexing	scan [ icomp ]		2588391	0					
ANR	2588460	Identifier	scan		2588391	0					
ANR	2588461	Identifier	icomp		2588391	1					
ANR	2588462	Identifier	bytes		2588391	1					
ANR	2588463	ForStatement	for ( x = upd -> nbytes - 1 ; 0 <= x ; -- x )		2588391	1					
ANR	2588464	ForInit	x = upd -> nbytes - 1 ;	7095:8:253307:253324	2588391	0	True				
ANR	2588465	AssignmentExpression	x = upd -> nbytes - 1		2588391	0		=			
ANR	2588466	Identifier	x		2588391	0					
ANR	2588467	AdditiveExpression	upd -> nbytes - 1		2588391	1		-			
ANR	2588468	PtrMemberAccess	upd -> nbytes		2588391	0					
ANR	2588469	Identifier	upd		2588391	0					
ANR	2588470	Identifier	nbytes		2588391	1					
ANR	2588471	PrimaryExpression	1		2588391	1					
ANR	2588472	Condition	0 <= x	7095:27:253326:253331	2588391	1	True				
ANR	2588473	RelationalExpression	0 <= x		2588391	0		<=			
ANR	2588474	PrimaryExpression	0		2588391	0					
ANR	2588475	Identifier	x		2588391	1					
ANR	2588476	UnaryExpression	-- x	7095:35:253334:253336	2588391	2	True				
ANR	2588477	IncDec	--		2588391	0					
ANR	2588478	Identifier	x		2588391	1					
ANR	2588479	IfStatement	if ( data [ x ] )		2588391	3					
ANR	2588480	Condition	data [ x ]	7095:43:253342:253348	2588391	0	True				
ANR	2588481	ArrayIndexing	data [ x ]		2588391	0					
ANR	2588482	Identifier	data		2588391	0					
ANR	2588483	Identifier	x		2588391	1					
ANR	2588484	BreakStatement	break ;	7095:52:253351:253356	2588391	1	True				
ANR	2588485	IfStatement	if ( x > xend )		2588391	2					
ANR	2588486	Condition	x > xend	7097:7:253366:253373	2588391	0	True				
ANR	2588487	RelationalExpression	x > xend		2588391	0		>			
ANR	2588488	Identifier	x		2588391	0					
ANR	2588489	Identifier	xend		2588391	1					
ANR	2588490	ExpressionStatement	xend = x	7097:17:253376:253385	2588391	1	True				
ANR	2588491	AssignmentExpression	xend = x		2588391	0		=			
ANR	2588492	Identifier	xend		2588391	0					
ANR	2588493	Identifier	x		2588391	1					
ANR	2588494	IfStatement	if ( 0 <= xend )		2588391	5					
ANR	2588495	Condition	0 <= xend	7101:5:253427:253435	2588391	0	True				
ANR	2588496	RelationalExpression	0 <= xend		2588391	0		<=			
ANR	2588497	PrimaryExpression	0		2588391	0					
ANR	2588498	Identifier	xend		2588391	1					
ANR	2588499	CompoundStatement		18:16:402:402	2588391	1					
ANR	2588500	ExpressionStatement	ioutbuf = 0	7102:4:253469:253480	2588391	0	True				
ANR	2588501	AssignmentExpression	ioutbuf = 0		2588391	0		=			
ANR	2588502	Identifier	ioutbuf		2588391	0					
ANR	2588503	PrimaryExpression	0		2588391	1					
ANR	2588504	ExpressionStatement	xend += 1	7103:4:253486:253497	2588391	1	True				
ANR	2588505	AssignmentExpression	xend += 1		2588391	0		+=			
ANR	2588506	Identifier	xend		2588391	0					
ANR	2588507	PrimaryExpression	1		2588391	1					
ANR	2588508	IfStatement	if ( upd -> yscan != upd -> yprinter )		2588391	2					
ANR	2588509	Condition	upd -> yscan != upd -> yprinter	7106:7:253538:253564	2588391	0	True				
ANR	2588510	EqualityExpression	upd -> yscan != upd -> yprinter		2588391	0		!=			
ANR	2588511	PtrMemberAccess	upd -> yscan		2588391	0					
ANR	2588512	Identifier	upd		2588391	0					
ANR	2588513	Identifier	yscan		2588391	1					
ANR	2588514	PtrMemberAccess	upd -> yprinter		2588391	1					
ANR	2588515	Identifier	upd		2588391	0					
ANR	2588516	Identifier	yprinter		2588391	1					
ANR	2588517	CompoundStatement		23:36:531:531	2588391	1					
ANR	2588518	ExpressionStatement	step = upd -> yscan - upd -> yprinter	7107:6:253575:253608	2588391	0	True				
ANR	2588519	AssignmentExpression	step = upd -> yscan - upd -> yprinter		2588391	0		=			
ANR	2588520	Identifier	step		2588391	0					
ANR	2588521	AdditiveExpression	upd -> yscan - upd -> yprinter		2588391	1		-			
ANR	2588522	PtrMemberAccess	upd -> yscan		2588391	0					
ANR	2588523	Identifier	upd		2588391	0					
ANR	2588524	Identifier	yscan		2588391	1					
ANR	2588525	PtrMemberAccess	upd -> yprinter		2588391	1					
ANR	2588526	Identifier	upd		2588391	0					
ANR	2588527	Identifier	yprinter		2588391	1					
ANR	2588528	ExpressionStatement	"fputc ( ESC , out )"	7109:6:253617:253639	2588391	1	True				
ANR	2588529	CallExpression	"fputc ( ESC , out )"		2588391	0					
ANR	2588530	Callee	fputc		2588391	0					
ANR	2588531	Identifier	fputc		2588391	0					
ANR	2588532	ArgumentList	ESC		2588391	1					
ANR	2588533	Argument	ESC		2588391	0					
ANR	2588534	Identifier	ESC		2588391	0					
ANR	2588535	Argument	out		2588391	1					
ANR	2588536	Identifier	out		2588391	0					
ANR	2588537	ExpressionStatement	"fputc ( '(' , out )"	7110:6:253647:253669	2588391	2	True				
ANR	2588538	CallExpression	"fputc ( '(' , out )"		2588391	0					
ANR	2588539	Callee	fputc		2588391	0					
ANR	2588540	Identifier	fputc		2588391	0					
ANR	2588541	ArgumentList	'('		2588391	1					
ANR	2588542	Argument	'('		2588391	0					
ANR	2588543	PrimaryExpression	'('		2588391	0					
ANR	2588544	Argument	out		2588391	1					
ANR	2588545	Identifier	out		2588391	0					
ANR	2588546	ExpressionStatement	"fputc ( 'e' , out )"	7111:6:253677:253699	2588391	3	True				
ANR	2588547	CallExpression	"fputc ( 'e' , out )"		2588391	0					
ANR	2588548	Callee	fputc		2588391	0					
ANR	2588549	Identifier	fputc		2588391	0					
ANR	2588550	ArgumentList	'e'		2588391	1					
ANR	2588551	Argument	'e'		2588391	0					
ANR	2588552	PrimaryExpression	'e'		2588391	0					
ANR	2588553	Argument	out		2588391	1					
ANR	2588554	Identifier	out		2588391	0					
ANR	2588555	ExpressionStatement	"fputc ( 2 , out )"	7112:6:253707:253729	2588391	4	True				
ANR	2588556	CallExpression	"fputc ( 2 , out )"		2588391	0					
ANR	2588557	Callee	fputc		2588391	0					
ANR	2588558	Identifier	fputc		2588391	0					
ANR	2588559	ArgumentList	2		2588391	1					
ANR	2588560	Argument	2		2588391	0					
ANR	2588561	PrimaryExpression	2		2588391	0					
ANR	2588562	Argument	out		2588391	1					
ANR	2588563	Identifier	out		2588391	0					
ANR	2588564	ExpressionStatement	"fputc ( 0 , out )"	7113:6:253737:253759	2588391	5	True				
ANR	2588565	CallExpression	"fputc ( 0 , out )"		2588391	0					
ANR	2588566	Callee	fputc		2588391	0					
ANR	2588567	Identifier	fputc		2588391	0					
ANR	2588568	ArgumentList	0		2588391	1					
ANR	2588569	Argument	0		2588391	0					
ANR	2588570	PrimaryExpression	0		2588391	0					
ANR	2588571	Argument	out		2588391	1					
ANR	2588572	Identifier	out		2588391	0					
ANR	2588573	ExpressionStatement	"fputc ( HIGH ( step ) , out )"	7114:6:253767:253789	2588391	6	True				
ANR	2588574	CallExpression	"fputc ( HIGH ( step ) , out )"		2588391	0					
ANR	2588575	Callee	fputc		2588391	0					
ANR	2588576	Identifier	fputc		2588391	0					
ANR	2588577	ArgumentList	HIGH ( step )		2588391	1					
ANR	2588578	Argument	HIGH ( step )		2588391	0					
ANR	2588579	CallExpression	HIGH ( step )		2588391	0					
ANR	2588580	Callee	HIGH		2588391	0					
ANR	2588581	Identifier	HIGH		2588391	0					
ANR	2588582	ArgumentList	step		2588391	1					
ANR	2588583	Argument	step		2588391	0					
ANR	2588584	Identifier	step		2588391	0					
ANR	2588585	Argument	out		2588391	1					
ANR	2588586	Identifier	out		2588391	0					
ANR	2588587	ExpressionStatement	"fputc ( LOW ( step ) , out )"	7115:6:253797:253819	2588391	7	True				
ANR	2588588	CallExpression	"fputc ( LOW ( step ) , out )"		2588391	0					
ANR	2588589	Callee	fputc		2588391	0					
ANR	2588590	Identifier	fputc		2588391	0					
ANR	2588591	ArgumentList	LOW ( step )		2588391	1					
ANR	2588592	Argument	LOW ( step )		2588391	0					
ANR	2588593	CallExpression	LOW ( step )		2588391	0					
ANR	2588594	Callee	LOW		2588391	0					
ANR	2588595	Identifier	LOW		2588391	0					
ANR	2588596	ArgumentList	step		2588391	1					
ANR	2588597	Argument	step		2588391	0					
ANR	2588598	Identifier	step		2588391	0					
ANR	2588599	Argument	out		2588391	1					
ANR	2588600	Identifier	out		2588391	0					
ANR	2588601	ExpressionStatement	upd -> yprinter = upd -> yscan	7117:6:253828:253854	2588391	8	True				
ANR	2588602	AssignmentExpression	upd -> yprinter = upd -> yscan		2588391	0		=			
ANR	2588603	PtrMemberAccess	upd -> yprinter		2588391	0					
ANR	2588604	Identifier	upd		2588391	0					
ANR	2588605	Identifier	yprinter		2588391	1					
ANR	2588606	PtrMemberAccess	upd -> yscan		2588391	1					
ANR	2588607	Identifier	upd		2588391	0					
ANR	2588608	Identifier	yscan		2588391	1					
ANR	2588609	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		2588391	3					
ANR	2588610	ForInit	icomp = 0 ;	7120:8:253871:253880	2588391	0	True				
ANR	2588611	AssignmentExpression	icomp = 0		2588391	0		=			
ANR	2588612	Identifier	icomp		2588391	0					
ANR	2588613	PrimaryExpression	0		2588391	1					
ANR	2588614	Condition	icomp < upd -> ocomp	7120:19:253882:253899	2588391	1	True				
ANR	2588615	RelationalExpression	icomp < upd -> ocomp		2588391	0		<			
ANR	2588616	Identifier	icomp		2588391	0					
ANR	2588617	PtrMemberAccess	upd -> ocomp		2588391	1					
ANR	2588618	Identifier	upd		2588391	0					
ANR	2588619	Identifier	ocomp		2588391	1					
ANR	2588620	UnaryExpression	++ icomp	7120:39:253902:253908	2588391	2	True				
ANR	2588621	IncDec	++		2588391	0					
ANR	2588622	Identifier	icomp		2588391	1					
ANR	2588623	CompoundStatement		37:48:875:875	2588391	3					
ANR	2588624	ExpressionStatement	data = scan [ icomp ] . bytes	7123:6:253989:254013	2588391	0	True				
ANR	2588625	AssignmentExpression	data = scan [ icomp ] . bytes		2588391	0		=			
ANR	2588626	Identifier	data		2588391	0					
ANR	2588627	MemberAccess	scan [ icomp ] . bytes		2588391	1					
ANR	2588628	ArrayIndexing	scan [ icomp ]		2588391	0					
ANR	2588629	Identifier	scan		2588391	0					
ANR	2588630	Identifier	icomp		2588391	1					
ANR	2588631	Identifier	bytes		2588391	1					
ANR	2588632	ForStatement	for ( x = 0 ; x <= xend ; ++ x )		2588391	1					
ANR	2588633	ForInit	x = 0 ;	7124:10:254025:254030	2588391	0	True				
ANR	2588634	AssignmentExpression	x = 0		2588391	0		=			
ANR	2588635	Identifier	x		2588391	0					
ANR	2588636	PrimaryExpression	0		2588391	1					
ANR	2588637	Condition	x <= xend	7124:17:254032:254040	2588391	1	True				
ANR	2588638	RelationalExpression	x <= xend		2588391	0		<=			
ANR	2588639	Identifier	x		2588391	0					
ANR	2588640	Identifier	xend		2588391	1					
ANR	2588641	UnaryExpression	++ x	7124:28:254043:254045	2588391	2	True				
ANR	2588642	IncDec	++		2588391	0					
ANR	2588643	Identifier	x		2588391	1					
ANR	2588644	IfStatement	if ( data [ x ] )		2588391	3					
ANR	2588645	Condition	data [ x ]	7124:36:254051:254057	2588391	0	True				
ANR	2588646	ArrayIndexing	data [ x ]		2588391	0					
ANR	2588647	Identifier	data		2588391	0					
ANR	2588648	Identifier	x		2588391	1					
ANR	2588649	BreakStatement	break ;	7124:45:254060:254065	2588391	1	True				
ANR	2588650	IfStatement	if ( x <= xend )		2588391	2					
ANR	2588651	Condition	x <= xend	7127:9:254118:254126	2588391	0	True				
ANR	2588652	RelationalExpression	x <= xend		2588391	0		<=			
ANR	2588653	Identifier	x		2588391	0					
ANR	2588654	Identifier	xend		2588391	1					
ANR	2588655	CompoundStatement		44:20:1093:1093	2588391	1					
ANR	2588656	ExpressionStatement	"ioutbuf = upd_rle ( upd -> outbuf , scan [ icomp ] . bytes , xend )"	7128:8:254139:254194	2588391	0	True				
ANR	2588657	AssignmentExpression	"ioutbuf = upd_rle ( upd -> outbuf , scan [ icomp ] . bytes , xend )"		2588391	0		=			
ANR	2588658	Identifier	ioutbuf		2588391	0					
ANR	2588659	CallExpression	"upd_rle ( upd -> outbuf , scan [ icomp ] . bytes , xend )"		2588391	1					
ANR	2588660	Callee	upd_rle		2588391	0					
ANR	2588661	Identifier	upd_rle		2588391	0					
ANR	2588662	ArgumentList	upd -> outbuf		2588391	1					
ANR	2588663	Argument	upd -> outbuf		2588391	0					
ANR	2588664	PtrMemberAccess	upd -> outbuf		2588391	0					
ANR	2588665	Identifier	upd		2588391	0					
ANR	2588666	Identifier	outbuf		2588391	1					
ANR	2588667	Argument	scan [ icomp ] . bytes		2588391	1					
ANR	2588668	MemberAccess	scan [ icomp ] . bytes		2588391	0					
ANR	2588669	ArrayIndexing	scan [ icomp ]		2588391	0					
ANR	2588670	Identifier	scan		2588391	0					
ANR	2588671	Identifier	icomp		2588391	1					
ANR	2588672	Identifier	bytes		2588391	1					
ANR	2588673	Argument	xend		2588391	2					
ANR	2588674	Identifier	xend		2588391	0					
ANR	2588675	ElseStatement	else		2588391	0					
ANR	2588676	CompoundStatement		46:13:1173:1173	2588391	0					
ANR	2588677	ExpressionStatement	ioutbuf = 0	7130:8:254219:254230	2588391	0	True				
ANR	2588678	AssignmentExpression	ioutbuf = 0		2588391	0		=			
ANR	2588679	Identifier	ioutbuf		2588391	0					
ANR	2588680	PrimaryExpression	0		2588391	1					
ANR	2588681	ExpressionStatement	ioutbuf1 = ioutbuf + 1	7133:6:254247:254269	2588391	3	True				
ANR	2588682	AssignmentExpression	ioutbuf1 = ioutbuf + 1		2588391	0		=			
ANR	2588683	Identifier	ioutbuf1		2588391	0					
ANR	2588684	AdditiveExpression	ioutbuf + 1		2588391	1		+			
ANR	2588685	Identifier	ioutbuf		2588391	0					
ANR	2588686	PrimaryExpression	1		2588391	1					
ANR	2588687	ExpressionStatement	"fputc ( ESC , out )"	7136:6:254311:254337	2588391	4	True				
ANR	2588688	CallExpression	"fputc ( ESC , out )"		2588391	0					
ANR	2588689	Callee	fputc		2588391	0					
ANR	2588690	Identifier	fputc		2588391	0					
ANR	2588691	ArgumentList	ESC		2588391	1					
ANR	2588692	Argument	ESC		2588391	0					
ANR	2588693	Identifier	ESC		2588391	0					
ANR	2588694	Argument	out		2588391	1					
ANR	2588695	Identifier	out		2588391	0					
ANR	2588696	ExpressionStatement	"fputc ( '(' , out )"	7137:6:254345:254371	2588391	5	True				
ANR	2588697	CallExpression	"fputc ( '(' , out )"		2588391	0					
ANR	2588698	Callee	fputc		2588391	0					
ANR	2588699	Identifier	fputc		2588391	0					
ANR	2588700	ArgumentList	'('		2588391	1					
ANR	2588701	Argument	'('		2588391	0					
ANR	2588702	PrimaryExpression	'('		2588391	0					
ANR	2588703	Argument	out		2588391	1					
ANR	2588704	Identifier	out		2588391	0					
ANR	2588705	ExpressionStatement	"fputc ( 'A' , out )"	7138:6:254379:254405	2588391	6	True				
ANR	2588706	CallExpression	"fputc ( 'A' , out )"		2588391	0					
ANR	2588707	Callee	fputc		2588391	0					
ANR	2588708	Identifier	fputc		2588391	0					
ANR	2588709	ArgumentList	'A'		2588391	1					
ANR	2588710	Argument	'A'		2588391	0					
ANR	2588711	PrimaryExpression	'A'		2588391	0					
ANR	2588712	Argument	out		2588391	1					
ANR	2588713	Identifier	out		2588391	0					
ANR	2588714	ExpressionStatement	"fputc ( LOW ( ioutbuf1 ) , out )"	7139:6:254413:254439	2588391	7	True				
ANR	2588715	CallExpression	"fputc ( LOW ( ioutbuf1 ) , out )"		2588391	0					
ANR	2588716	Callee	fputc		2588391	0					
ANR	2588717	Identifier	fputc		2588391	0					
ANR	2588718	ArgumentList	LOW ( ioutbuf1 )		2588391	1					
ANR	2588719	Argument	LOW ( ioutbuf1 )		2588391	0					
ANR	2588720	CallExpression	LOW ( ioutbuf1 )		2588391	0					
ANR	2588721	Callee	LOW		2588391	0					
ANR	2588722	Identifier	LOW		2588391	0					
ANR	2588723	ArgumentList	ioutbuf1		2588391	1					
ANR	2588724	Argument	ioutbuf1		2588391	0					
ANR	2588725	Identifier	ioutbuf1		2588391	0					
ANR	2588726	Argument	out		2588391	1					
ANR	2588727	Identifier	out		2588391	0					
ANR	2588728	ExpressionStatement	"fputc ( HIGH ( ioutbuf1 ) , out )"	7140:6:254447:254473	2588391	8	True				
ANR	2588729	CallExpression	"fputc ( HIGH ( ioutbuf1 ) , out )"		2588391	0					
ANR	2588730	Callee	fputc		2588391	0					
ANR	2588731	Identifier	fputc		2588391	0					
ANR	2588732	ArgumentList	HIGH ( ioutbuf1 )		2588391	1					
ANR	2588733	Argument	HIGH ( ioutbuf1 )		2588391	0					
ANR	2588734	CallExpression	HIGH ( ioutbuf1 )		2588391	0					
ANR	2588735	Callee	HIGH		2588391	0					
ANR	2588736	Identifier	HIGH		2588391	0					
ANR	2588737	ArgumentList	ioutbuf1		2588391	1					
ANR	2588738	Argument	ioutbuf1		2588391	0					
ANR	2588739	Identifier	ioutbuf1		2588391	0					
ANR	2588740	Argument	out		2588391	1					
ANR	2588741	Identifier	out		2588391	0					
ANR	2588742	SwitchStatement	switch ( upd -> ocomp )		2588391	9					
ANR	2588743	Condition	upd -> ocomp	7141:13:254488:254497	2588391	0	True				
ANR	2588744	PtrMemberAccess	upd -> ocomp		2588391	0					
ANR	2588745	Identifier	upd		2588391	0					
ANR	2588746	Identifier	ocomp		2588391	1					
ANR	2588747	CompoundStatement		58:25:1464:1464	2588391	1					
ANR	2588748	Label	case 1 :	7142:8:254510:254516	2588391	0	True				
ANR	2588749	ExpressionStatement	"fputc ( 'K' , out )"	7142:17:254519:254533	2588391	1	True				
ANR	2588750	CallExpression	"fputc ( 'K' , out )"		2588391	0					
ANR	2588751	Callee	fputc		2588391	0					
ANR	2588752	Identifier	fputc		2588391	0					
ANR	2588753	ArgumentList	'K'		2588391	1					
ANR	2588754	Argument	'K'		2588391	0					
ANR	2588755	PrimaryExpression	'K'		2588391	0					
ANR	2588756	Argument	out		2588391	1					
ANR	2588757	Identifier	out		2588391	0					
ANR	2588758	BreakStatement	break ;	7142:33:254535:254540	2588391	2	True				
ANR	2588759	Label	case 3 :	7143:8:254550:254556	2588391	3	True				
ANR	2588760	Label	case 4 :	7144:8:254566:254572	2588391	4	True				
ANR	2588761	ExpressionStatement	"fputc ( ""YMCK"" [ icomp ] , out )"	7144:17:254575:254599	2588391	5	True				
ANR	2588762	CallExpression	"fputc ( ""YMCK"" [ icomp ] , out )"		2588391	0					
ANR	2588763	Callee	fputc		2588391	0					
ANR	2588764	Identifier	fputc		2588391	0					
ANR	2588765	ArgumentList	"""YMCK"" [ icomp ]"		2588391	1					
ANR	2588766	Argument	"""YMCK"" [ icomp ]"		2588391	0					
ANR	2588767	ArrayIndexing	"""YMCK"" [ icomp ]"		2588391	0					
ANR	2588768	PrimaryExpression	"""YMCK"""		2588391	0					
ANR	2588769	Identifier	icomp		2588391	1					
ANR	2588770	Argument	out		2588391	1					
ANR	2588771	Identifier	out		2588391	0					
ANR	2588772	BreakStatement	break ;	7144:43:254601:254606	2588391	6	True				
ANR	2588773	Label	default :	7151:8:254812:254819	2588391	7	True				
ANR	2588774	Identifier	default		2588391	0					
ANR	2588775	ExpressionStatement	"fputc ( 'K' , out )"	7151:17:254821:254835	2588391	8	True				
ANR	2588776	CallExpression	"fputc ( 'K' , out )"		2588391	0					
ANR	2588777	Callee	fputc		2588391	0					
ANR	2588778	Identifier	fputc		2588391	0					
ANR	2588779	ArgumentList	'K'		2588391	1					
ANR	2588780	Argument	'K'		2588391	0					
ANR	2588781	PrimaryExpression	'K'		2588391	0					
ANR	2588782	Argument	out		2588391	1					
ANR	2588783	Identifier	out		2588391	0					
ANR	2588784	BreakStatement	break ;	7151:33:254837:254842	2588391	9	True				
ANR	2588785	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	7154:6:254859:254895	2588391	10	True				
ANR	2588786	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		2588391	0					
ANR	2588787	Callee	fwrite		2588391	0					
ANR	2588788	Identifier	fwrite		2588391	0					
ANR	2588789	ArgumentList	upd -> outbuf		2588391	1					
ANR	2588790	Argument	upd -> outbuf		2588391	0					
ANR	2588791	PtrMemberAccess	upd -> outbuf		2588391	0					
ANR	2588792	Identifier	upd		2588391	0					
ANR	2588793	Identifier	outbuf		2588391	1					
ANR	2588794	Argument	1		2588391	1					
ANR	2588795	PrimaryExpression	1		2588391	0					
ANR	2588796	Argument	ioutbuf		2588391	2					
ANR	2588797	Identifier	ioutbuf		2588391	0					
ANR	2588798	Argument	out		2588391	3					
ANR	2588799	Identifier	out		2588391	0					
ANR	2588800	ExpressionStatement	"fputc ( CR , out )"	7156:6:254904:254930	2588391	11	True				
ANR	2588801	CallExpression	"fputc ( CR , out )"		2588391	0					
ANR	2588802	Callee	fputc		2588391	0					
ANR	2588803	Identifier	fputc		2588391	0					
ANR	2588804	ArgumentList	CR		2588391	1					
ANR	2588805	Argument	CR		2588391	0					
ANR	2588806	Identifier	CR		2588391	0					
ANR	2588807	Argument	out		2588391	1					
ANR	2588808	Identifier	out		2588391	0					
ANR	2588809	ExpressionStatement	"fputc ( ESC , out )"	7160:4:254986:255008	2588391	4	True				
ANR	2588810	CallExpression	"fputc ( ESC , out )"		2588391	0					
ANR	2588811	Callee	fputc		2588391	0					
ANR	2588812	Identifier	fputc		2588391	0					
ANR	2588813	ArgumentList	ESC		2588391	1					
ANR	2588814	Argument	ESC		2588391	0					
ANR	2588815	Identifier	ESC		2588391	0					
ANR	2588816	Argument	out		2588391	1					
ANR	2588817	Identifier	out		2588391	0					
ANR	2588818	ExpressionStatement	"fputc ( '(' , out )"	7161:4:255014:255036	2588391	5	True				
ANR	2588819	CallExpression	"fputc ( '(' , out )"		2588391	0					
ANR	2588820	Callee	fputc		2588391	0					
ANR	2588821	Identifier	fputc		2588391	0					
ANR	2588822	ArgumentList	'('		2588391	1					
ANR	2588823	Argument	'('		2588391	0					
ANR	2588824	PrimaryExpression	'('		2588391	0					
ANR	2588825	Argument	out		2588391	1					
ANR	2588826	Identifier	out		2588391	0					
ANR	2588827	ExpressionStatement	"fputc ( 'e' , out )"	7162:4:255042:255064	2588391	6	True				
ANR	2588828	CallExpression	"fputc ( 'e' , out )"		2588391	0					
ANR	2588829	Callee	fputc		2588391	0					
ANR	2588830	Identifier	fputc		2588391	0					
ANR	2588831	ArgumentList	'e'		2588391	1					
ANR	2588832	Argument	'e'		2588391	0					
ANR	2588833	PrimaryExpression	'e'		2588391	0					
ANR	2588834	Argument	out		2588391	1					
ANR	2588835	Identifier	out		2588391	0					
ANR	2588836	ExpressionStatement	"fputc ( 2 , out )"	7163:4:255070:255092	2588391	7	True				
ANR	2588837	CallExpression	"fputc ( 2 , out )"		2588391	0					
ANR	2588838	Callee	fputc		2588391	0					
ANR	2588839	Identifier	fputc		2588391	0					
ANR	2588840	ArgumentList	2		2588391	1					
ANR	2588841	Argument	2		2588391	0					
ANR	2588842	PrimaryExpression	2		2588391	0					
ANR	2588843	Argument	out		2588391	1					
ANR	2588844	Identifier	out		2588391	0					
ANR	2588845	ExpressionStatement	"fputc ( 0 , out )"	7164:4:255098:255120	2588391	8	True				
ANR	2588846	CallExpression	"fputc ( 0 , out )"		2588391	0					
ANR	2588847	Callee	fputc		2588391	0					
ANR	2588848	Identifier	fputc		2588391	0					
ANR	2588849	ArgumentList	0		2588391	1					
ANR	2588850	Argument	0		2588391	0					
ANR	2588851	PrimaryExpression	0		2588391	0					
ANR	2588852	Argument	out		2588391	1					
ANR	2588853	Identifier	out		2588391	0					
ANR	2588854	ExpressionStatement	"fputc ( HIGH ( 1 ) , out )"	7165:4:255126:255148	2588391	9	True				
ANR	2588855	CallExpression	"fputc ( HIGH ( 1 ) , out )"		2588391	0					
ANR	2588856	Callee	fputc		2588391	0					
ANR	2588857	Identifier	fputc		2588391	0					
ANR	2588858	ArgumentList	HIGH ( 1 )		2588391	1					
ANR	2588859	Argument	HIGH ( 1 )		2588391	0					
ANR	2588860	CallExpression	HIGH ( 1 )		2588391	0					
ANR	2588861	Callee	HIGH		2588391	0					
ANR	2588862	Identifier	HIGH		2588391	0					
ANR	2588863	ArgumentList	1		2588391	1					
ANR	2588864	Argument	1		2588391	0					
ANR	2588865	PrimaryExpression	1		2588391	0					
ANR	2588866	Argument	out		2588391	1					
ANR	2588867	Identifier	out		2588391	0					
ANR	2588868	ExpressionStatement	"fputc ( LOW ( 1 ) , out )"	7166:4:255154:255176	2588391	10	True				
ANR	2588869	CallExpression	"fputc ( LOW ( 1 ) , out )"		2588391	0					
ANR	2588870	Callee	fputc		2588391	0					
ANR	2588871	Identifier	fputc		2588391	0					
ANR	2588872	ArgumentList	LOW ( 1 )		2588391	1					
ANR	2588873	Argument	LOW ( 1 )		2588391	0					
ANR	2588874	CallExpression	LOW ( 1 )		2588391	0					
ANR	2588875	Callee	LOW		2588391	0					
ANR	2588876	Identifier	LOW		2588391	0					
ANR	2588877	ArgumentList	1		2588391	1					
ANR	2588878	Argument	1		2588391	0					
ANR	2588879	PrimaryExpression	1		2588391	0					
ANR	2588880	Argument	out		2588391	1					
ANR	2588881	Identifier	out		2588391	0					
ANR	2588882	ExpressionStatement	upd -> yprinter += 1	7168:4:255183:255201	2588391	11	True				
ANR	2588883	AssignmentExpression	upd -> yprinter += 1		2588391	0		+=			
ANR	2588884	PtrMemberAccess	upd -> yprinter		2588391	0					
ANR	2588885	Identifier	upd		2588391	0					
ANR	2588886	Identifier	yprinter		2588391	1					
ANR	2588887	PrimaryExpression	1		2588391	1					
ANR	2588888	ExpressionStatement	upd -> yscan += 1	7173:2:255239:255254	2588391	6	True				
ANR	2588889	AssignmentExpression	upd -> yscan += 1		2588391	0		+=			
ANR	2588890	PtrMemberAccess	upd -> yscan		2588391	0					
ANR	2588891	Identifier	upd		2588391	0					
ANR	2588892	Identifier	yscan		2588391	1					
ANR	2588893	PrimaryExpression	1		2588391	1					
ANR	2588894	ReturnStatement	return 0 ;	7175:2:255259:255267	2588391	7	True				
ANR	2588895	PrimaryExpression	0		2588391	0					
ANR	2588896	ReturnType	static int		2588391	1					
ANR	2588897	Identifier	upd_wrtcanon		2588391	2					
ANR	2588898	ParameterList	"upd_p upd , FILE * out"		2588391	3					
ANR	2588899	Parameter	upd_p upd	7083:13:253013:253021	2588391	0	True				
ANR	2588900	ParameterType	upd_p		2588391	0					
ANR	2588901	Identifier	upd		2588391	1					
ANR	2588902	Parameter	FILE * out	7083:24:253024:253032	2588391	1	True				
ANR	2588903	ParameterType	FILE *		2588391	0					
ANR	2588904	Identifier	out		2588391	1					
ANR	2588905	CFGEntryNode	ENTRY		2588391		True				
ANR	2588906	CFGExitNode	EXIT		2588391		True				
ANR	2588907	Symbol	* x		2588391						
ANR	2588908	Symbol	HIGH		2588391						
ANR	2588909	Symbol	ioutbuf1		2588391						
ANR	2588910	Symbol	data		2588391						
ANR	2588911	Symbol	* upd -> yscan		2588391						
ANR	2588912	Symbol	scan		2588391						
ANR	2588913	Symbol	icomp		2588391						
ANR	2588914	Symbol	scan [ icomp ] . bytes		2588391						
ANR	2588915	Symbol	out		2588391						
ANR	2588916	Symbol	upd -> yscan		2588391						
ANR	2588917	Symbol	upd_rle		2588391						
ANR	2588918	Symbol	* upd		2588391						
ANR	2588919	Symbol	ESC		2588391						
ANR	2588920	Symbol	* icomp		2588391						
ANR	2588921	Symbol	* scan		2588391						
ANR	2588922	Symbol	* upd -> scnmsk		2588391						
ANR	2588923	Symbol	xend		2588391						
ANR	2588924	Symbol	upd -> ocomp		2588391						
ANR	2588925	Symbol	upd -> nbytes		2588391						
ANR	2588926	Symbol	* upd -> scnbuf		2588391						
ANR	2588927	Symbol	upd -> scnmsk		2588391						
ANR	2588928	Symbol	upd		2588391						
ANR	2588929	Symbol	CR		2588391						
ANR	2588930	Symbol	upd -> yprinter		2588391						
ANR	2588931	Symbol	ioutbuf		2588391						
ANR	2588932	Symbol	upd -> scnbuf		2588391						
ANR	2588933	Symbol	LOW		2588391						
ANR	2588934	Symbol	x		2588391						
ANR	2588935	Symbol	step		2588391						
ANR	2588936	Symbol	upd -> outbuf		2588391						
ANR	2588937	Symbol	* * upd		2588391						
ANR	2588938	Symbol	* data		2588391						
ANR	2588939	Function	upd_pxlfwd	7234:0:257318:258155							
ANR	2588940	FunctionDef	upd_pxlfwd (upd_p upd)		2588939	0					
ANR	2588941	CompoundStatement		7236:0:257356:258155	2588939	0					
ANR	2588942	IfStatement	if ( ! ( upd -> pxlptr = upd -> gsscan ) )		2588939	0					
ANR	2588943	Condition	! ( upd -> pxlptr = upd -> gsscan )	7237:6:257364:257391	2588939	0	True				
ANR	2588944	UnaryOperationExpression	! ( upd -> pxlptr = upd -> gsscan )		2588939	0					
ANR	2588945	UnaryOperator	!		2588939	0					
ANR	2588946	AssignmentExpression	upd -> pxlptr = upd -> gsscan		2588939	1		=			
ANR	2588947	PtrMemberAccess	upd -> pxlptr		2588939	0					
ANR	2588948	Identifier	upd		2588939	0					
ANR	2588949	Identifier	pxlptr		2588939	1					
ANR	2588950	PtrMemberAccess	upd -> gsscan		2588939	1					
ANR	2588951	Identifier	upd		2588939	0					
ANR	2588952	Identifier	gsscan		2588939	1					
ANR	2588953	CompoundStatement		2:36:37:37	2588939	1					
ANR	2588954	ExpressionStatement	upd -> pxlget = upd_pxlgetnix	7239:6:257403:257430	2588939	0	True				
ANR	2588955	AssignmentExpression	upd -> pxlget = upd_pxlgetnix		2588939	0		=			
ANR	2588956	PtrMemberAccess	upd -> pxlget		2588939	0					
ANR	2588957	Identifier	upd		2588939	0					
ANR	2588958	Identifier	pxlget		2588939	1					
ANR	2588959	Identifier	upd_pxlgetnix		2588939	1					
ANR	2588960	ElseStatement	else		2588939	0					
ANR	2588961	CompoundStatement		6:10:86:86	2588939	0					
ANR	2588962	SwitchStatement	switch ( upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ] )		2588939	0					
ANR	2588963	Condition	upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ]	7242:13:257458:257490	2588939	0	True				
ANR	2588964	ArrayIndexing	upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ]		2588939	0					
ANR	2588965	MemberAccess	upd -> int_a [ IA_COLOR_INFO ] . data		2588939	0					
ANR	2588966	ArrayIndexing	upd -> int_a [ IA_COLOR_INFO ]		2588939	0					
ANR	2588967	PtrMemberAccess	upd -> int_a		2588939	0					
ANR	2588968	Identifier	upd		2588939	0					
ANR	2588969	Identifier	int_a		2588939	1					
ANR	2588970	Identifier	IA_COLOR_INFO		2588939	1					
ANR	2588971	Identifier	data		2588939	1					
ANR	2588972	PrimaryExpression	1		2588939	1					
ANR	2588973	CompoundStatement		7:48:136:136	2588939	1					
ANR	2588974	Label	case 1 :	7243:9:257504:257511	2588939	0	True				
ANR	2588975	ExpressionStatement	upd -> pxlget = upd_pxlget1f1	7243:18:257513:257540	2588939	1	True				
ANR	2588976	AssignmentExpression	upd -> pxlget = upd_pxlget1f1		2588939	0		=			
ANR	2588977	PtrMemberAccess	upd -> pxlget		2588939	0					
ANR	2588978	Identifier	upd		2588939	0					
ANR	2588979	Identifier	pxlget		2588939	1					
ANR	2588980	Identifier	upd_pxlget1f1		2588939	1					
ANR	2588981	BreakStatement	break ;	7243:47:257542:257547	2588939	2	True				
ANR	2588982	Label	case 2 :	7244:9:257558:257565	2588939	3	True				
ANR	2588983	ExpressionStatement	upd -> pxlget = upd_pxlget2f1	7244:18:257567:257594	2588939	4	True				
ANR	2588984	AssignmentExpression	upd -> pxlget = upd_pxlget2f1		2588939	0		=			
ANR	2588985	PtrMemberAccess	upd -> pxlget		2588939	0					
ANR	2588986	Identifier	upd		2588939	0					
ANR	2588987	Identifier	pxlget		2588939	1					
ANR	2588988	Identifier	upd_pxlget2f1		2588939	1					
ANR	2588989	BreakStatement	break ;	7244:47:257596:257601	2588939	5	True				
ANR	2588990	Label	case 4 :	7245:9:257612:257619	2588939	6	True				
ANR	2588991	ExpressionStatement	upd -> pxlget = upd_pxlget4f1	7245:18:257621:257648	2588939	7	True				
ANR	2588992	AssignmentExpression	upd -> pxlget = upd_pxlget4f1		2588939	0		=			
ANR	2588993	PtrMemberAccess	upd -> pxlget		2588939	0					
ANR	2588994	Identifier	upd		2588939	0					
ANR	2588995	Identifier	pxlget		2588939	1					
ANR	2588996	Identifier	upd_pxlget4f1		2588939	1					
ANR	2588997	BreakStatement	break ;	7245:47:257650:257655	2588939	8	True				
ANR	2588998	Label	case 8 :	7246:9:257666:257673	2588939	9	True				
ANR	2588999	ExpressionStatement	upd -> pxlget = upd_pxlget8f	7246:18:257675:257701	2588939	10	True				
ANR	2589000	AssignmentExpression	upd -> pxlget = upd_pxlget8f		2588939	0		=			
ANR	2589001	PtrMemberAccess	upd -> pxlget		2588939	0					
ANR	2589002	Identifier	upd		2588939	0					
ANR	2589003	Identifier	pxlget		2588939	1					
ANR	2589004	Identifier	upd_pxlget8f		2588939	1					
ANR	2589005	BreakStatement	break ;	7246:47:257704:257709	2588939	11	True				
ANR	2589006	Label	case 16 :	7247:9:257720:257727	2588939	12	True				
ANR	2589007	ExpressionStatement	upd -> pxlget = upd_pxlget16f	7247:18:257729:257756	2588939	13	True				
ANR	2589008	AssignmentExpression	upd -> pxlget = upd_pxlget16f		2588939	0		=			
ANR	2589009	PtrMemberAccess	upd -> pxlget		2588939	0					
ANR	2589010	Identifier	upd		2588939	0					
ANR	2589011	Identifier	pxlget		2588939	1					
ANR	2589012	Identifier	upd_pxlget16f		2588939	1					
ANR	2589013	BreakStatement	break ;	7247:47:257758:257763	2588939	14	True				
ANR	2589014	Label	case 24 :	7248:9:257774:257781	2588939	15	True				
ANR	2589015	ExpressionStatement	upd -> pxlget = upd_pxlget24f	7248:18:257783:257810	2588939	16	True				
ANR	2589016	AssignmentExpression	upd -> pxlget = upd_pxlget24f		2588939	0		=			
ANR	2589017	PtrMemberAccess	upd -> pxlget		2588939	0					
ANR	2589018	Identifier	upd		2588939	0					
ANR	2589019	Identifier	pxlget		2588939	1					
ANR	2589020	Identifier	upd_pxlget24f		2588939	1					
ANR	2589021	BreakStatement	break ;	7248:47:257812:257817	2588939	17	True				
ANR	2589022	Label	case 32 :	7249:9:257828:257835	2588939	18	True				
ANR	2589023	ExpressionStatement	upd -> pxlget = upd_pxlget32f	7249:18:257837:257864	2588939	19	True				
ANR	2589024	AssignmentExpression	upd -> pxlget = upd_pxlget32f		2588939	0		=			
ANR	2589025	PtrMemberAccess	upd -> pxlget		2588939	0					
ANR	2589026	Identifier	upd		2588939	0					
ANR	2589027	Identifier	pxlget		2588939	1					
ANR	2589028	Identifier	upd_pxlget32f		2588939	1					
ANR	2589029	BreakStatement	break ;	7249:47:257866:257871	2588939	20	True				
ANR	2589030	Label	default :	7250:9:257882:257889	2588939	21	True				
ANR	2589031	Identifier	default		2588939	0					
ANR	2589032	ExpressionStatement	"errprintf ( upd -> memory , ""upd_pxlfwd: unsupported depth (%d)\\n"" , upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ] )"	7252:11:257933:258051	2588939	22	True				
ANR	2589033	CallExpression	"errprintf ( upd -> memory , ""upd_pxlfwd: unsupported depth (%d)\\n"" , upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ] )"		2588939	0					
ANR	2589034	Callee	errprintf		2588939	0					
ANR	2589035	Identifier	errprintf		2588939	0					
ANR	2589036	ArgumentList	upd -> memory		2588939	1					
ANR	2589037	Argument	upd -> memory		2588939	0					
ANR	2589038	PtrMemberAccess	upd -> memory		2588939	0					
ANR	2589039	Identifier	upd		2588939	0					
ANR	2589040	Identifier	memory		2588939	1					
ANR	2589041	Argument	"""upd_pxlfwd: unsupported depth (%d)\\n"""		2588939	1					
ANR	2589042	PrimaryExpression	"""upd_pxlfwd: unsupported depth (%d)\\n"""		2588939	0					
ANR	2589043	Argument	upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ]		2588939	2					
ANR	2589044	ArrayIndexing	upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ]		2588939	0					
ANR	2589045	MemberAccess	upd -> int_a [ IA_COLOR_INFO ] . data		2588939	0					
ANR	2589046	ArrayIndexing	upd -> int_a [ IA_COLOR_INFO ]		2588939	0					
ANR	2589047	PtrMemberAccess	upd -> int_a		2588939	0					
ANR	2589048	Identifier	upd		2588939	0					
ANR	2589049	Identifier	int_a		2588939	1					
ANR	2589050	Identifier	IA_COLOR_INFO		2588939	1					
ANR	2589051	Identifier	data		2588939	1					
ANR	2589052	PrimaryExpression	1		2588939	1					
ANR	2589053	ExpressionStatement	upd -> pxlget = upd_pxlgetnix	7255:11:258071:258098	2588939	23	True				
ANR	2589054	AssignmentExpression	upd -> pxlget = upd_pxlgetnix		2588939	0		=			
ANR	2589055	PtrMemberAccess	upd -> pxlget		2588939	0					
ANR	2589056	Identifier	upd		2588939	0					
ANR	2589057	Identifier	pxlget		2588939	1					
ANR	2589058	Identifier	upd_pxlgetnix		2588939	1					
ANR	2589059	BreakStatement	break ;	7256:11:258111:258116	2588939	24	True				
ANR	2589060	ReturnStatement	return ( uint32_t ) 0 ;	7259:3:258134:258153	2588939	1	True				
ANR	2589061	CastExpression	( uint32_t ) 0		2588939	0					
ANR	2589062	CastTarget	uint32_t		2588939	0					
ANR	2589063	PrimaryExpression	0		2588939	1					
ANR	2589064	ReturnType	static uint32_t		2588939	1					
ANR	2589065	Identifier	upd_pxlfwd		2588939	2					
ANR	2589066	ParameterList	upd_p upd		2588939	3					
ANR	2589067	Parameter	upd_p upd	7235:11:257345:257353	2588939	0	True				
ANR	2589068	ParameterType	upd_p		2588939	0					
ANR	2589069	Identifier	upd		2588939	1					
ANR	2589070	CFGEntryNode	ENTRY		2588939		True				
ANR	2589071	CFGExitNode	EXIT		2588939		True				
ANR	2589072	Symbol	upd -> pxlptr		2588939						
ANR	2589073	Symbol	upd_pxlget4f1		2588939						
ANR	2589074	Symbol	* upd -> int_a		2588939						
ANR	2589075	Symbol	upd -> memory		2588939						
ANR	2589076	Symbol	upd -> gsscan		2588939						
ANR	2589077	Symbol	upd -> int_a [ IA_COLOR_INFO ] . data		2588939						
ANR	2589078	Symbol	upd_pxlget2f1		2588939						
ANR	2589079	Symbol	upd_pxlget1f1		2588939						
ANR	2589080	Symbol	* * * upd		2588939						
ANR	2589081	Symbol	upd		2588939						
ANR	2589082	Symbol	upd -> pxlget		2588939						
ANR	2589083	Symbol	upd_pxlget32f		2588939						
ANR	2589084	Symbol	* * IA_COLOR_INFO		2588939						
ANR	2589085	Symbol	upd_pxlget24f		2588939						
ANR	2589086	Symbol	IA_COLOR_INFO		2588939						
ANR	2589087	Symbol	upd_pxlgetnix		2588939						
ANR	2589088	Symbol	* IA_COLOR_INFO		2588939						
ANR	2589089	Symbol	upd_pxlget16f		2588939						
ANR	2589090	Symbol	* * upd -> int_a		2588939						
ANR	2589091	Symbol	* upd -> int_a [ IA_COLOR_INFO ] . data		2588939						
ANR	2589092	Symbol	* upd		2588939						
ANR	2589093	Symbol	upd -> int_a		2588939						
ANR	2589094	Symbol	upd_pxlget8f		2588939						
ANR	2589095	Symbol	* * upd		2588939						
ANR	2589096	Function	upd_pxlget1f1	7264:0:258179:258317							
ANR	2589097	FunctionDef	upd_pxlget1f1 (upd_p upd)		2589096	0					
ANR	2589098	CompoundStatement		7266:0:258220:258317	2589096	0					
ANR	2589099	ExpressionStatement	upd -> pxlget = upd_pxlget1f2	7267:3:258225:258252	2589096	0	True				
ANR	2589100	AssignmentExpression	upd -> pxlget = upd_pxlget1f2		2589096	0		=			
ANR	2589101	PtrMemberAccess	upd -> pxlget		2589096	0					
ANR	2589102	Identifier	upd		2589096	0					
ANR	2589103	Identifier	pxlget		2589096	1					
ANR	2589104	Identifier	upd_pxlget1f2		2589096	1					
ANR	2589105	ReturnStatement	return * upd -> pxlptr & 0x80 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7268:3:258257:258315	2589096	1	True				
ANR	2589106	ConditionalExpression	* upd -> pxlptr & 0x80 ? ( uint32_t ) 1 : ( uint32_t ) 0		2589096	0					
ANR	2589107	Condition	* upd -> pxlptr & 0x80		2589096	0					
ANR	2589108	BitAndExpression	* upd -> pxlptr & 0x80		2589096	0		&			
ANR	2589109	UnaryOperationExpression	* upd -> pxlptr		2589096	0					
ANR	2589110	UnaryOperator	*		2589096	0					
ANR	2589111	PtrMemberAccess	upd -> pxlptr		2589096	1					
ANR	2589112	Identifier	upd		2589096	0					
ANR	2589113	Identifier	pxlptr		2589096	1					
ANR	2589114	PrimaryExpression	0x80		2589096	1					
ANR	2589115	CastExpression	( uint32_t ) 1		2589096	1					
ANR	2589116	CastTarget	uint32_t		2589096	0					
ANR	2589117	PrimaryExpression	1		2589096	1					
ANR	2589118	CastExpression	( uint32_t ) 0		2589096	2					
ANR	2589119	CastTarget	uint32_t		2589096	0					
ANR	2589120	PrimaryExpression	0		2589096	1					
ANR	2589121	ReturnType	static uint32_t		2589096	1					
ANR	2589122	Identifier	upd_pxlget1f1		2589096	2					
ANR	2589123	ParameterList	upd_p upd		2589096	3					
ANR	2589124	Parameter	upd_p upd	7265:14:258209:258217	2589096	0	True				
ANR	2589125	ParameterType	upd_p		2589096	0					
ANR	2589126	Identifier	upd		2589096	1					
ANR	2589127	CFGEntryNode	ENTRY		2589096		True				
ANR	2589128	CFGExitNode	EXIT		2589096		True				
ANR	2589129	Symbol	upd -> pxlptr		2589096						
ANR	2589130	Symbol	upd_pxlget1f2		2589096						
ANR	2589131	Symbol	* upd		2589096						
ANR	2589132	Symbol	* upd -> pxlptr		2589096						
ANR	2589133	Symbol	upd		2589096						
ANR	2589134	Symbol	upd -> pxlget		2589096						
ANR	2589135	Symbol	* * upd		2589096						
ANR	2589136	Function	upd_pxlget1f2	7271:0:258320:258458							
ANR	2589137	FunctionDef	upd_pxlget1f2 (upd_p upd)		2589136	0					
ANR	2589138	CompoundStatement		7273:0:258361:258458	2589136	0					
ANR	2589139	ExpressionStatement	upd -> pxlget = upd_pxlget1f3	7274:3:258366:258393	2589136	0	True				
ANR	2589140	AssignmentExpression	upd -> pxlget = upd_pxlget1f3		2589136	0		=			
ANR	2589141	PtrMemberAccess	upd -> pxlget		2589136	0					
ANR	2589142	Identifier	upd		2589136	0					
ANR	2589143	Identifier	pxlget		2589136	1					
ANR	2589144	Identifier	upd_pxlget1f3		2589136	1					
ANR	2589145	ReturnStatement	return * upd -> pxlptr & 0x40 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7275:3:258398:258456	2589136	1	True				
ANR	2589146	ConditionalExpression	* upd -> pxlptr & 0x40 ? ( uint32_t ) 1 : ( uint32_t ) 0		2589136	0					
ANR	2589147	Condition	* upd -> pxlptr & 0x40		2589136	0					
ANR	2589148	BitAndExpression	* upd -> pxlptr & 0x40		2589136	0		&			
ANR	2589149	UnaryOperationExpression	* upd -> pxlptr		2589136	0					
ANR	2589150	UnaryOperator	*		2589136	0					
ANR	2589151	PtrMemberAccess	upd -> pxlptr		2589136	1					
ANR	2589152	Identifier	upd		2589136	0					
ANR	2589153	Identifier	pxlptr		2589136	1					
ANR	2589154	PrimaryExpression	0x40		2589136	1					
ANR	2589155	CastExpression	( uint32_t ) 1		2589136	1					
ANR	2589156	CastTarget	uint32_t		2589136	0					
ANR	2589157	PrimaryExpression	1		2589136	1					
ANR	2589158	CastExpression	( uint32_t ) 0		2589136	2					
ANR	2589159	CastTarget	uint32_t		2589136	0					
ANR	2589160	PrimaryExpression	0		2589136	1					
ANR	2589161	ReturnType	static uint32_t		2589136	1					
ANR	2589162	Identifier	upd_pxlget1f2		2589136	2					
ANR	2589163	ParameterList	upd_p upd		2589136	3					
ANR	2589164	Parameter	upd_p upd	7272:14:258350:258358	2589136	0	True				
ANR	2589165	ParameterType	upd_p		2589136	0					
ANR	2589166	Identifier	upd		2589136	1					
ANR	2589167	CFGEntryNode	ENTRY		2589136		True				
ANR	2589168	CFGExitNode	EXIT		2589136		True				
ANR	2589169	Symbol	upd -> pxlptr		2589136						
ANR	2589170	Symbol	upd_pxlget1f3		2589136						
ANR	2589171	Symbol	* upd		2589136						
ANR	2589172	Symbol	* upd -> pxlptr		2589136						
ANR	2589173	Symbol	upd		2589136						
ANR	2589174	Symbol	upd -> pxlget		2589136						
ANR	2589175	Symbol	* * upd		2589136						
ANR	2589176	Function	upd_pxlget1f3	7278:0:258461:258599							
ANR	2589177	FunctionDef	upd_pxlget1f3 (upd_p upd)		2589176	0					
ANR	2589178	CompoundStatement		7280:0:258502:258599	2589176	0					
ANR	2589179	ExpressionStatement	upd -> pxlget = upd_pxlget1f4	7281:3:258507:258534	2589176	0	True				
ANR	2589180	AssignmentExpression	upd -> pxlget = upd_pxlget1f4		2589176	0		=			
ANR	2589181	PtrMemberAccess	upd -> pxlget		2589176	0					
ANR	2589182	Identifier	upd		2589176	0					
ANR	2589183	Identifier	pxlget		2589176	1					
ANR	2589184	Identifier	upd_pxlget1f4		2589176	1					
ANR	2589185	ReturnStatement	return * upd -> pxlptr & 0x20 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7282:3:258539:258597	2589176	1	True				
ANR	2589186	ConditionalExpression	* upd -> pxlptr & 0x20 ? ( uint32_t ) 1 : ( uint32_t ) 0		2589176	0					
ANR	2589187	Condition	* upd -> pxlptr & 0x20		2589176	0					
ANR	2589188	BitAndExpression	* upd -> pxlptr & 0x20		2589176	0		&			
ANR	2589189	UnaryOperationExpression	* upd -> pxlptr		2589176	0					
ANR	2589190	UnaryOperator	*		2589176	0					
ANR	2589191	PtrMemberAccess	upd -> pxlptr		2589176	1					
ANR	2589192	Identifier	upd		2589176	0					
ANR	2589193	Identifier	pxlptr		2589176	1					
ANR	2589194	PrimaryExpression	0x20		2589176	1					
ANR	2589195	CastExpression	( uint32_t ) 1		2589176	1					
ANR	2589196	CastTarget	uint32_t		2589176	0					
ANR	2589197	PrimaryExpression	1		2589176	1					
ANR	2589198	CastExpression	( uint32_t ) 0		2589176	2					
ANR	2589199	CastTarget	uint32_t		2589176	0					
ANR	2589200	PrimaryExpression	0		2589176	1					
ANR	2589201	ReturnType	static uint32_t		2589176	1					
ANR	2589202	Identifier	upd_pxlget1f3		2589176	2					
ANR	2589203	ParameterList	upd_p upd		2589176	3					
ANR	2589204	Parameter	upd_p upd	7279:14:258491:258499	2589176	0	True				
ANR	2589205	ParameterType	upd_p		2589176	0					
ANR	2589206	Identifier	upd		2589176	1					
ANR	2589207	CFGEntryNode	ENTRY		2589176		True				
ANR	2589208	CFGExitNode	EXIT		2589176		True				
ANR	2589209	Symbol	upd_pxlget1f4		2589176						
ANR	2589210	Symbol	upd -> pxlptr		2589176						
ANR	2589211	Symbol	* upd		2589176						
ANR	2589212	Symbol	* upd -> pxlptr		2589176						
ANR	2589213	Symbol	upd		2589176						
ANR	2589214	Symbol	upd -> pxlget		2589176						
ANR	2589215	Symbol	* * upd		2589176						
ANR	2589216	Function	upd_pxlget1f4	7285:0:258602:258740							
ANR	2589217	FunctionDef	upd_pxlget1f4 (upd_p upd)		2589216	0					
ANR	2589218	CompoundStatement		7287:0:258643:258740	2589216	0					
ANR	2589219	ExpressionStatement	upd -> pxlget = upd_pxlget1f5	7288:3:258648:258675	2589216	0	True				
ANR	2589220	AssignmentExpression	upd -> pxlget = upd_pxlget1f5		2589216	0		=			
ANR	2589221	PtrMemberAccess	upd -> pxlget		2589216	0					
ANR	2589222	Identifier	upd		2589216	0					
ANR	2589223	Identifier	pxlget		2589216	1					
ANR	2589224	Identifier	upd_pxlget1f5		2589216	1					
ANR	2589225	ReturnStatement	return * upd -> pxlptr & 0x10 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7289:3:258680:258738	2589216	1	True				
ANR	2589226	ConditionalExpression	* upd -> pxlptr & 0x10 ? ( uint32_t ) 1 : ( uint32_t ) 0		2589216	0					
ANR	2589227	Condition	* upd -> pxlptr & 0x10		2589216	0					
ANR	2589228	BitAndExpression	* upd -> pxlptr & 0x10		2589216	0		&			
ANR	2589229	UnaryOperationExpression	* upd -> pxlptr		2589216	0					
ANR	2589230	UnaryOperator	*		2589216	0					
ANR	2589231	PtrMemberAccess	upd -> pxlptr		2589216	1					
ANR	2589232	Identifier	upd		2589216	0					
ANR	2589233	Identifier	pxlptr		2589216	1					
ANR	2589234	PrimaryExpression	0x10		2589216	1					
ANR	2589235	CastExpression	( uint32_t ) 1		2589216	1					
ANR	2589236	CastTarget	uint32_t		2589216	0					
ANR	2589237	PrimaryExpression	1		2589216	1					
ANR	2589238	CastExpression	( uint32_t ) 0		2589216	2					
ANR	2589239	CastTarget	uint32_t		2589216	0					
ANR	2589240	PrimaryExpression	0		2589216	1					
ANR	2589241	ReturnType	static uint32_t		2589216	1					
ANR	2589242	Identifier	upd_pxlget1f4		2589216	2					
ANR	2589243	ParameterList	upd_p upd		2589216	3					
ANR	2589244	Parameter	upd_p upd	7286:14:258632:258640	2589216	0	True				
ANR	2589245	ParameterType	upd_p		2589216	0					
ANR	2589246	Identifier	upd		2589216	1					
ANR	2589247	CFGEntryNode	ENTRY		2589216		True				
ANR	2589248	CFGExitNode	EXIT		2589216		True				
ANR	2589249	Symbol	upd -> pxlptr		2589216						
ANR	2589250	Symbol	* upd		2589216						
ANR	2589251	Symbol	* upd -> pxlptr		2589216						
ANR	2589252	Symbol	upd		2589216						
ANR	2589253	Symbol	upd -> pxlget		2589216						
ANR	2589254	Symbol	* * upd		2589216						
ANR	2589255	Symbol	upd_pxlget1f5		2589216						
ANR	2589256	Function	upd_pxlget1f5	7292:0:258743:258881							
ANR	2589257	FunctionDef	upd_pxlget1f5 (upd_p upd)		2589256	0					
ANR	2589258	CompoundStatement		7294:0:258784:258881	2589256	0					
ANR	2589259	ExpressionStatement	upd -> pxlget = upd_pxlget1f6	7295:3:258789:258816	2589256	0	True				
ANR	2589260	AssignmentExpression	upd -> pxlget = upd_pxlget1f6		2589256	0		=			
ANR	2589261	PtrMemberAccess	upd -> pxlget		2589256	0					
ANR	2589262	Identifier	upd		2589256	0					
ANR	2589263	Identifier	pxlget		2589256	1					
ANR	2589264	Identifier	upd_pxlget1f6		2589256	1					
ANR	2589265	ReturnStatement	return * upd -> pxlptr & 0x08 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7296:3:258821:258879	2589256	1	True				
ANR	2589266	ConditionalExpression	* upd -> pxlptr & 0x08 ? ( uint32_t ) 1 : ( uint32_t ) 0		2589256	0					
ANR	2589267	Condition	* upd -> pxlptr & 0x08		2589256	0					
ANR	2589268	BitAndExpression	* upd -> pxlptr & 0x08		2589256	0		&			
ANR	2589269	UnaryOperationExpression	* upd -> pxlptr		2589256	0					
ANR	2589270	UnaryOperator	*		2589256	0					
ANR	2589271	PtrMemberAccess	upd -> pxlptr		2589256	1					
ANR	2589272	Identifier	upd		2589256	0					
ANR	2589273	Identifier	pxlptr		2589256	1					
ANR	2589274	PrimaryExpression	0x08		2589256	1					
ANR	2589275	CastExpression	( uint32_t ) 1		2589256	1					
ANR	2589276	CastTarget	uint32_t		2589256	0					
ANR	2589277	PrimaryExpression	1		2589256	1					
ANR	2589278	CastExpression	( uint32_t ) 0		2589256	2					
ANR	2589279	CastTarget	uint32_t		2589256	0					
ANR	2589280	PrimaryExpression	0		2589256	1					
ANR	2589281	ReturnType	static uint32_t		2589256	1					
ANR	2589282	Identifier	upd_pxlget1f5		2589256	2					
ANR	2589283	ParameterList	upd_p upd		2589256	3					
ANR	2589284	Parameter	upd_p upd	7293:14:258773:258781	2589256	0	True				
ANR	2589285	ParameterType	upd_p		2589256	0					
ANR	2589286	Identifier	upd		2589256	1					
ANR	2589287	CFGEntryNode	ENTRY		2589256		True				
ANR	2589288	CFGExitNode	EXIT		2589256		True				
ANR	2589289	Symbol	upd -> pxlptr		2589256						
ANR	2589290	Symbol	* upd		2589256						
ANR	2589291	Symbol	* upd -> pxlptr		2589256						
ANR	2589292	Symbol	upd		2589256						
ANR	2589293	Symbol	upd -> pxlget		2589256						
ANR	2589294	Symbol	* * upd		2589256						
ANR	2589295	Symbol	upd_pxlget1f6		2589256						
ANR	2589296	Function	upd_pxlget1f6	7299:0:258884:259022							
ANR	2589297	FunctionDef	upd_pxlget1f6 (upd_p upd)		2589296	0					
ANR	2589298	CompoundStatement		7301:0:258925:259022	2589296	0					
ANR	2589299	ExpressionStatement	upd -> pxlget = upd_pxlget1f7	7302:3:258930:258957	2589296	0	True				
ANR	2589300	AssignmentExpression	upd -> pxlget = upd_pxlget1f7		2589296	0		=			
ANR	2589301	PtrMemberAccess	upd -> pxlget		2589296	0					
ANR	2589302	Identifier	upd		2589296	0					
ANR	2589303	Identifier	pxlget		2589296	1					
ANR	2589304	Identifier	upd_pxlget1f7		2589296	1					
ANR	2589305	ReturnStatement	return * upd -> pxlptr & 0x04 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7303:3:258962:259020	2589296	1	True				
ANR	2589306	ConditionalExpression	* upd -> pxlptr & 0x04 ? ( uint32_t ) 1 : ( uint32_t ) 0		2589296	0					
ANR	2589307	Condition	* upd -> pxlptr & 0x04		2589296	0					
ANR	2589308	BitAndExpression	* upd -> pxlptr & 0x04		2589296	0		&			
ANR	2589309	UnaryOperationExpression	* upd -> pxlptr		2589296	0					
ANR	2589310	UnaryOperator	*		2589296	0					
ANR	2589311	PtrMemberAccess	upd -> pxlptr		2589296	1					
ANR	2589312	Identifier	upd		2589296	0					
ANR	2589313	Identifier	pxlptr		2589296	1					
ANR	2589314	PrimaryExpression	0x04		2589296	1					
ANR	2589315	CastExpression	( uint32_t ) 1		2589296	1					
ANR	2589316	CastTarget	uint32_t		2589296	0					
ANR	2589317	PrimaryExpression	1		2589296	1					
ANR	2589318	CastExpression	( uint32_t ) 0		2589296	2					
ANR	2589319	CastTarget	uint32_t		2589296	0					
ANR	2589320	PrimaryExpression	0		2589296	1					
ANR	2589321	ReturnType	static uint32_t		2589296	1					
ANR	2589322	Identifier	upd_pxlget1f6		2589296	2					
ANR	2589323	ParameterList	upd_p upd		2589296	3					
ANR	2589324	Parameter	upd_p upd	7300:14:258914:258922	2589296	0	True				
ANR	2589325	ParameterType	upd_p		2589296	0					
ANR	2589326	Identifier	upd		2589296	1					
ANR	2589327	CFGEntryNode	ENTRY		2589296		True				
ANR	2589328	CFGExitNode	EXIT		2589296		True				
ANR	2589329	Symbol	upd -> pxlptr		2589296						
ANR	2589330	Symbol	* upd		2589296						
ANR	2589331	Symbol	* upd -> pxlptr		2589296						
ANR	2589332	Symbol	upd		2589296						
ANR	2589333	Symbol	upd -> pxlget		2589296						
ANR	2589334	Symbol	upd_pxlget1f7		2589296						
ANR	2589335	Symbol	* * upd		2589296						
ANR	2589336	Function	upd_pxlget1f7	7306:0:259025:259163							
ANR	2589337	FunctionDef	upd_pxlget1f7 (upd_p upd)		2589336	0					
ANR	2589338	CompoundStatement		7308:0:259066:259163	2589336	0					
ANR	2589339	ExpressionStatement	upd -> pxlget = upd_pxlget1f8	7309:3:259071:259098	2589336	0	True				
ANR	2589340	AssignmentExpression	upd -> pxlget = upd_pxlget1f8		2589336	0		=			
ANR	2589341	PtrMemberAccess	upd -> pxlget		2589336	0					
ANR	2589342	Identifier	upd		2589336	0					
ANR	2589343	Identifier	pxlget		2589336	1					
ANR	2589344	Identifier	upd_pxlget1f8		2589336	1					
ANR	2589345	ReturnStatement	return * upd -> pxlptr & 0x02 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7310:3:259103:259161	2589336	1	True				
ANR	2589346	ConditionalExpression	* upd -> pxlptr & 0x02 ? ( uint32_t ) 1 : ( uint32_t ) 0		2589336	0					
ANR	2589347	Condition	* upd -> pxlptr & 0x02		2589336	0					
ANR	2589348	BitAndExpression	* upd -> pxlptr & 0x02		2589336	0		&			
ANR	2589349	UnaryOperationExpression	* upd -> pxlptr		2589336	0					
ANR	2589350	UnaryOperator	*		2589336	0					
ANR	2589351	PtrMemberAccess	upd -> pxlptr		2589336	1					
ANR	2589352	Identifier	upd		2589336	0					
ANR	2589353	Identifier	pxlptr		2589336	1					
ANR	2589354	PrimaryExpression	0x02		2589336	1					
ANR	2589355	CastExpression	( uint32_t ) 1		2589336	1					
ANR	2589356	CastTarget	uint32_t		2589336	0					
ANR	2589357	PrimaryExpression	1		2589336	1					
ANR	2589358	CastExpression	( uint32_t ) 0		2589336	2					
ANR	2589359	CastTarget	uint32_t		2589336	0					
ANR	2589360	PrimaryExpression	0		2589336	1					
ANR	2589361	ReturnType	static uint32_t		2589336	1					
ANR	2589362	Identifier	upd_pxlget1f7		2589336	2					
ANR	2589363	ParameterList	upd_p upd		2589336	3					
ANR	2589364	Parameter	upd_p upd	7307:14:259055:259063	2589336	0	True				
ANR	2589365	ParameterType	upd_p		2589336	0					
ANR	2589366	Identifier	upd		2589336	1					
ANR	2589367	CFGEntryNode	ENTRY		2589336		True				
ANR	2589368	CFGExitNode	EXIT		2589336		True				
ANR	2589369	Symbol	upd -> pxlptr		2589336						
ANR	2589370	Symbol	* upd		2589336						
ANR	2589371	Symbol	* upd -> pxlptr		2589336						
ANR	2589372	Symbol	upd		2589336						
ANR	2589373	Symbol	upd -> pxlget		2589336						
ANR	2589374	Symbol	upd_pxlget1f8		2589336						
ANR	2589375	Symbol	* * upd		2589336						
ANR	2589376	Function	upd_pxlget1f8	7313:0:259166:259304							
ANR	2589377	FunctionDef	upd_pxlget1f8 (upd_p upd)		2589376	0					
ANR	2589378	CompoundStatement		7315:0:259207:259304	2589376	0					
ANR	2589379	ExpressionStatement	upd -> pxlget = upd_pxlget1f1	7316:3:259212:259239	2589376	0	True				
ANR	2589380	AssignmentExpression	upd -> pxlget = upd_pxlget1f1		2589376	0		=			
ANR	2589381	PtrMemberAccess	upd -> pxlget		2589376	0					
ANR	2589382	Identifier	upd		2589376	0					
ANR	2589383	Identifier	pxlget		2589376	1					
ANR	2589384	Identifier	upd_pxlget1f1		2589376	1					
ANR	2589385	ReturnStatement	return * upd -> pxlptr ++ & 0x01 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7317:3:259244:259302	2589376	1	True				
ANR	2589386	ConditionalExpression	* upd -> pxlptr ++ & 0x01 ? ( uint32_t ) 1 : ( uint32_t ) 0		2589376	0					
ANR	2589387	Condition	* upd -> pxlptr ++ & 0x01		2589376	0					
ANR	2589388	BitAndExpression	* upd -> pxlptr ++ & 0x01		2589376	0		&			
ANR	2589389	UnaryOperationExpression	* upd -> pxlptr ++		2589376	0					
ANR	2589390	UnaryOperator	*		2589376	0					
ANR	2589391	PostIncDecOperationExpression	upd -> pxlptr ++		2589376	1					
ANR	2589392	PtrMemberAccess	upd -> pxlptr		2589376	0					
ANR	2589393	Identifier	upd		2589376	0					
ANR	2589394	Identifier	pxlptr		2589376	1					
ANR	2589395	IncDec	++		2589376	1					
ANR	2589396	PrimaryExpression	0x01		2589376	1					
ANR	2589397	CastExpression	( uint32_t ) 1		2589376	1					
ANR	2589398	CastTarget	uint32_t		2589376	0					
ANR	2589399	PrimaryExpression	1		2589376	1					
ANR	2589400	CastExpression	( uint32_t ) 0		2589376	2					
ANR	2589401	CastTarget	uint32_t		2589376	0					
ANR	2589402	PrimaryExpression	0		2589376	1					
ANR	2589403	ReturnType	static uint32_t		2589376	1					
ANR	2589404	Identifier	upd_pxlget1f8		2589376	2					
ANR	2589405	ParameterList	upd_p upd		2589376	3					
ANR	2589406	Parameter	upd_p upd	7314:14:259196:259204	2589376	0	True				
ANR	2589407	ParameterType	upd_p		2589376	0					
ANR	2589408	Identifier	upd		2589376	1					
ANR	2589409	CFGEntryNode	ENTRY		2589376		True				
ANR	2589410	CFGExitNode	EXIT		2589376		True				
ANR	2589411	Symbol	upd -> pxlptr		2589376						
ANR	2589412	Symbol	upd_pxlget1f1		2589376						
ANR	2589413	Symbol	* upd		2589376						
ANR	2589414	Symbol	* upd -> pxlptr ++		2589376						
ANR	2589415	Symbol	upd		2589376						
ANR	2589416	Symbol	upd -> pxlget		2589376						
ANR	2589417	Function	upd_pxlget2f1	7322:0:259328:259467							
ANR	2589418	FunctionDef	upd_pxlget2f1 (upd_p upd)		2589417	0					
ANR	2589419	CompoundStatement		7324:0:259369:259467	2589417	0					
ANR	2589420	ExpressionStatement	upd -> pxlget = upd_pxlget2f2	7325:3:259374:259401	2589417	0	True				
ANR	2589421	AssignmentExpression	upd -> pxlget = upd_pxlget2f2		2589417	0		=			
ANR	2589422	PtrMemberAccess	upd -> pxlget		2589417	0					
ANR	2589423	Identifier	upd		2589417	0					
ANR	2589424	Identifier	pxlget		2589417	1					
ANR	2589425	Identifier	upd_pxlget2f2		2589417	1					
ANR	2589426	ReturnStatement	return ( ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0xC0 ) >> 6 ;	7326:3:259406:259465	2589417	1	True				
ANR	2589427	ShiftExpression	( ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0xC0 ) >> 6		2589417	0		>>			
ANR	2589428	BitAndExpression	( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0xC0		2589417	0		&			
ANR	2589429	CastExpression	( uint32_t ) ( * upd -> pxlptr )		2589417	0					
ANR	2589430	CastTarget	uint32_t		2589417	0					
ANR	2589431	UnaryOperationExpression	* upd -> pxlptr		2589417	1					
ANR	2589432	UnaryOperator	*		2589417	0					
ANR	2589433	PtrMemberAccess	upd -> pxlptr		2589417	1					
ANR	2589434	Identifier	upd		2589417	0					
ANR	2589435	Identifier	pxlptr		2589417	1					
ANR	2589436	CastExpression	( uint32_t ) 0xC0		2589417	1					
ANR	2589437	CastTarget	uint32_t		2589417	0					
ANR	2589438	PrimaryExpression	0xC0		2589417	1					
ANR	2589439	PrimaryExpression	6		2589417	1					
ANR	2589440	ReturnType	static uint32_t		2589417	1					
ANR	2589441	Identifier	upd_pxlget2f1		2589417	2					
ANR	2589442	ParameterList	upd_p upd		2589417	3					
ANR	2589443	Parameter	upd_p upd	7323:14:259358:259366	2589417	0	True				
ANR	2589444	ParameterType	upd_p		2589417	0					
ANR	2589445	Identifier	upd		2589417	1					
ANR	2589446	CFGEntryNode	ENTRY		2589417		True				
ANR	2589447	CFGExitNode	EXIT		2589417		True				
ANR	2589448	Symbol	upd -> pxlptr		2589417						
ANR	2589449	Symbol	upd_pxlget2f2		2589417						
ANR	2589450	Symbol	* upd		2589417						
ANR	2589451	Symbol	* upd -> pxlptr		2589417						
ANR	2589452	Symbol	upd		2589417						
ANR	2589453	Symbol	upd -> pxlget		2589417						
ANR	2589454	Symbol	* * upd		2589417						
ANR	2589455	Function	upd_pxlget2f2	7329:0:259470:259609							
ANR	2589456	FunctionDef	upd_pxlget2f2 (upd_p upd)		2589455	0					
ANR	2589457	CompoundStatement		7331:0:259511:259609	2589455	0					
ANR	2589458	ExpressionStatement	upd -> pxlget = upd_pxlget2f3	7332:3:259516:259543	2589455	0	True				
ANR	2589459	AssignmentExpression	upd -> pxlget = upd_pxlget2f3		2589455	0		=			
ANR	2589460	PtrMemberAccess	upd -> pxlget		2589455	0					
ANR	2589461	Identifier	upd		2589455	0					
ANR	2589462	Identifier	pxlget		2589455	1					
ANR	2589463	Identifier	upd_pxlget2f3		2589455	1					
ANR	2589464	ReturnStatement	return ( ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x30 ) >> 4 ;	7333:3:259548:259607	2589455	1	True				
ANR	2589465	ShiftExpression	( ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x30 ) >> 4		2589455	0		>>			
ANR	2589466	BitAndExpression	( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x30		2589455	0		&			
ANR	2589467	CastExpression	( uint32_t ) ( * upd -> pxlptr )		2589455	0					
ANR	2589468	CastTarget	uint32_t		2589455	0					
ANR	2589469	UnaryOperationExpression	* upd -> pxlptr		2589455	1					
ANR	2589470	UnaryOperator	*		2589455	0					
ANR	2589471	PtrMemberAccess	upd -> pxlptr		2589455	1					
ANR	2589472	Identifier	upd		2589455	0					
ANR	2589473	Identifier	pxlptr		2589455	1					
ANR	2589474	CastExpression	( uint32_t ) 0x30		2589455	1					
ANR	2589475	CastTarget	uint32_t		2589455	0					
ANR	2589476	PrimaryExpression	0x30		2589455	1					
ANR	2589477	PrimaryExpression	4		2589455	1					
ANR	2589478	ReturnType	static uint32_t		2589455	1					
ANR	2589479	Identifier	upd_pxlget2f2		2589455	2					
ANR	2589480	ParameterList	upd_p upd		2589455	3					
ANR	2589481	Parameter	upd_p upd	7330:14:259500:259508	2589455	0	True				
ANR	2589482	ParameterType	upd_p		2589455	0					
ANR	2589483	Identifier	upd		2589455	1					
ANR	2589484	CFGEntryNode	ENTRY		2589455		True				
ANR	2589485	CFGExitNode	EXIT		2589455		True				
ANR	2589486	Symbol	upd_pxlget2f3		2589455						
ANR	2589487	Symbol	upd -> pxlptr		2589455						
ANR	2589488	Symbol	* upd		2589455						
ANR	2589489	Symbol	* upd -> pxlptr		2589455						
ANR	2589490	Symbol	upd		2589455						
ANR	2589491	Symbol	upd -> pxlget		2589455						
ANR	2589492	Symbol	* * upd		2589455						
ANR	2589493	Function	upd_pxlget2f3	7336:0:259612:259751							
ANR	2589494	FunctionDef	upd_pxlget2f3 (upd_p upd)		2589493	0					
ANR	2589495	CompoundStatement		7338:0:259653:259751	2589493	0					
ANR	2589496	ExpressionStatement	upd -> pxlget = upd_pxlget2f4	7339:3:259658:259685	2589493	0	True				
ANR	2589497	AssignmentExpression	upd -> pxlget = upd_pxlget2f4		2589493	0		=			
ANR	2589498	PtrMemberAccess	upd -> pxlget		2589493	0					
ANR	2589499	Identifier	upd		2589493	0					
ANR	2589500	Identifier	pxlget		2589493	1					
ANR	2589501	Identifier	upd_pxlget2f4		2589493	1					
ANR	2589502	ReturnStatement	return ( ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x0C ) >> 2 ;	7340:3:259690:259749	2589493	1	True				
ANR	2589503	ShiftExpression	( ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x0C ) >> 2		2589493	0		>>			
ANR	2589504	BitAndExpression	( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x0C		2589493	0		&			
ANR	2589505	CastExpression	( uint32_t ) ( * upd -> pxlptr )		2589493	0					
ANR	2589506	CastTarget	uint32_t		2589493	0					
ANR	2589507	UnaryOperationExpression	* upd -> pxlptr		2589493	1					
ANR	2589508	UnaryOperator	*		2589493	0					
ANR	2589509	PtrMemberAccess	upd -> pxlptr		2589493	1					
ANR	2589510	Identifier	upd		2589493	0					
ANR	2589511	Identifier	pxlptr		2589493	1					
ANR	2589512	CastExpression	( uint32_t ) 0x0C		2589493	1					
ANR	2589513	CastTarget	uint32_t		2589493	0					
ANR	2589514	PrimaryExpression	0x0C		2589493	1					
ANR	2589515	PrimaryExpression	2		2589493	1					
ANR	2589516	ReturnType	static uint32_t		2589493	1					
ANR	2589517	Identifier	upd_pxlget2f3		2589493	2					
ANR	2589518	ParameterList	upd_p upd		2589493	3					
ANR	2589519	Parameter	upd_p upd	7337:14:259642:259650	2589493	0	True				
ANR	2589520	ParameterType	upd_p		2589493	0					
ANR	2589521	Identifier	upd		2589493	1					
ANR	2589522	CFGEntryNode	ENTRY		2589493		True				
ANR	2589523	CFGExitNode	EXIT		2589493		True				
ANR	2589524	Symbol	upd -> pxlptr		2589493						
ANR	2589525	Symbol	* upd		2589493						
ANR	2589526	Symbol	* upd -> pxlptr		2589493						
ANR	2589527	Symbol	upd		2589493						
ANR	2589528	Symbol	upd -> pxlget		2589493						
ANR	2589529	Symbol	* * upd		2589493						
ANR	2589530	Symbol	upd_pxlget2f4		2589493						
ANR	2589531	Function	upd_pxlget2f4	7343:0:259754:259887							
ANR	2589532	FunctionDef	upd_pxlget2f4 (upd_p upd)		2589531	0					
ANR	2589533	CompoundStatement		7345:0:259795:259887	2589531	0					
ANR	2589534	ExpressionStatement	upd -> pxlget = upd_pxlget2f1	7346:3:259800:259827	2589531	0	True				
ANR	2589535	AssignmentExpression	upd -> pxlget = upd_pxlget2f1		2589531	0		=			
ANR	2589536	PtrMemberAccess	upd -> pxlget		2589531	0					
ANR	2589537	Identifier	upd		2589531	0					
ANR	2589538	Identifier	pxlget		2589531	1					
ANR	2589539	Identifier	upd_pxlget2f1		2589531	1					
ANR	2589540	ReturnStatement	return ( uint32_t ) ( * upd -> pxlptr ++ ) & ( uint32_t ) 0x03 ;	7347:3:259832:259885	2589531	1	True				
ANR	2589541	BitAndExpression	( uint32_t ) ( * upd -> pxlptr ++ ) & ( uint32_t ) 0x03		2589531	0		&			
ANR	2589542	CastExpression	( uint32_t ) ( * upd -> pxlptr ++ )		2589531	0					
ANR	2589543	CastTarget	uint32_t		2589531	0					
ANR	2589544	UnaryOperationExpression	* upd -> pxlptr ++		2589531	1					
ANR	2589545	UnaryOperator	*		2589531	0					
ANR	2589546	PostIncDecOperationExpression	upd -> pxlptr ++		2589531	1					
ANR	2589547	PtrMemberAccess	upd -> pxlptr		2589531	0					
ANR	2589548	Identifier	upd		2589531	0					
ANR	2589549	Identifier	pxlptr		2589531	1					
ANR	2589550	IncDec	++		2589531	1					
ANR	2589551	CastExpression	( uint32_t ) 0x03		2589531	1					
ANR	2589552	CastTarget	uint32_t		2589531	0					
ANR	2589553	PrimaryExpression	0x03		2589531	1					
ANR	2589554	ReturnType	static uint32_t		2589531	1					
ANR	2589555	Identifier	upd_pxlget2f4		2589531	2					
ANR	2589556	ParameterList	upd_p upd		2589531	3					
ANR	2589557	Parameter	upd_p upd	7344:14:259784:259792	2589531	0	True				
ANR	2589558	ParameterType	upd_p		2589531	0					
ANR	2589559	Identifier	upd		2589531	1					
ANR	2589560	CFGEntryNode	ENTRY		2589531		True				
ANR	2589561	CFGExitNode	EXIT		2589531		True				
ANR	2589562	Symbol	upd -> pxlptr		2589531						
ANR	2589563	Symbol	upd_pxlget2f1		2589531						
ANR	2589564	Symbol	* upd		2589531						
ANR	2589565	Symbol	* upd -> pxlptr ++		2589531						
ANR	2589566	Symbol	upd		2589531						
ANR	2589567	Symbol	upd -> pxlget		2589531						
ANR	2589568	Function	upd_pxlget4f1	7351:0:259910:260049							
ANR	2589569	FunctionDef	upd_pxlget4f1 (upd_p upd)		2589568	0					
ANR	2589570	CompoundStatement		7353:0:259951:260049	2589568	0					
ANR	2589571	ExpressionStatement	upd -> pxlget = upd_pxlget4f2	7354:3:259956:259983	2589568	0	True				
ANR	2589572	AssignmentExpression	upd -> pxlget = upd_pxlget4f2		2589568	0		=			
ANR	2589573	PtrMemberAccess	upd -> pxlget		2589568	0					
ANR	2589574	Identifier	upd		2589568	0					
ANR	2589575	Identifier	pxlget		2589568	1					
ANR	2589576	Identifier	upd_pxlget4f2		2589568	1					
ANR	2589577	ReturnStatement	return ( ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0xF0 ) >> 4 ;	7355:3:259988:260047	2589568	1	True				
ANR	2589578	ShiftExpression	( ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0xF0 ) >> 4		2589568	0		>>			
ANR	2589579	BitAndExpression	( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0xF0		2589568	0		&			
ANR	2589580	CastExpression	( uint32_t ) ( * upd -> pxlptr )		2589568	0					
ANR	2589581	CastTarget	uint32_t		2589568	0					
ANR	2589582	UnaryOperationExpression	* upd -> pxlptr		2589568	1					
ANR	2589583	UnaryOperator	*		2589568	0					
ANR	2589584	PtrMemberAccess	upd -> pxlptr		2589568	1					
ANR	2589585	Identifier	upd		2589568	0					
ANR	2589586	Identifier	pxlptr		2589568	1					
ANR	2589587	CastExpression	( uint32_t ) 0xF0		2589568	1					
ANR	2589588	CastTarget	uint32_t		2589568	0					
ANR	2589589	PrimaryExpression	0xF0		2589568	1					
ANR	2589590	PrimaryExpression	4		2589568	1					
ANR	2589591	ReturnType	static uint32_t		2589568	1					
ANR	2589592	Identifier	upd_pxlget4f1		2589568	2					
ANR	2589593	ParameterList	upd_p upd		2589568	3					
ANR	2589594	Parameter	upd_p upd	7352:14:259940:259948	2589568	0	True				
ANR	2589595	ParameterType	upd_p		2589568	0					
ANR	2589596	Identifier	upd		2589568	1					
ANR	2589597	CFGEntryNode	ENTRY		2589568		True				
ANR	2589598	CFGExitNode	EXIT		2589568		True				
ANR	2589599	Symbol	upd -> pxlptr		2589568						
ANR	2589600	Symbol	* upd		2589568						
ANR	2589601	Symbol	* upd -> pxlptr		2589568						
ANR	2589602	Symbol	upd		2589568						
ANR	2589603	Symbol	upd -> pxlget		2589568						
ANR	2589604	Symbol	* * upd		2589568						
ANR	2589605	Symbol	upd_pxlget4f2		2589568						
ANR	2589606	Function	upd_pxlget4f2	7358:0:260052:260185							
ANR	2589607	FunctionDef	upd_pxlget4f2 (upd_p upd)		2589606	0					
ANR	2589608	CompoundStatement		7360:0:260093:260185	2589606	0					
ANR	2589609	ExpressionStatement	upd -> pxlget = upd_pxlget4f1	7361:3:260098:260125	2589606	0	True				
ANR	2589610	AssignmentExpression	upd -> pxlget = upd_pxlget4f1		2589606	0		=			
ANR	2589611	PtrMemberAccess	upd -> pxlget		2589606	0					
ANR	2589612	Identifier	upd		2589606	0					
ANR	2589613	Identifier	pxlget		2589606	1					
ANR	2589614	Identifier	upd_pxlget4f1		2589606	1					
ANR	2589615	ReturnStatement	return ( uint32_t ) ( * upd -> pxlptr ++ ) & ( uint32_t ) 0x0F ;	7362:3:260130:260183	2589606	1	True				
ANR	2589616	BitAndExpression	( uint32_t ) ( * upd -> pxlptr ++ ) & ( uint32_t ) 0x0F		2589606	0		&			
ANR	2589617	CastExpression	( uint32_t ) ( * upd -> pxlptr ++ )		2589606	0					
ANR	2589618	CastTarget	uint32_t		2589606	0					
ANR	2589619	UnaryOperationExpression	* upd -> pxlptr ++		2589606	1					
ANR	2589620	UnaryOperator	*		2589606	0					
ANR	2589621	PostIncDecOperationExpression	upd -> pxlptr ++		2589606	1					
ANR	2589622	PtrMemberAccess	upd -> pxlptr		2589606	0					
ANR	2589623	Identifier	upd		2589606	0					
ANR	2589624	Identifier	pxlptr		2589606	1					
ANR	2589625	IncDec	++		2589606	1					
ANR	2589626	CastExpression	( uint32_t ) 0x0F		2589606	1					
ANR	2589627	CastTarget	uint32_t		2589606	0					
ANR	2589628	PrimaryExpression	0x0F		2589606	1					
ANR	2589629	ReturnType	static uint32_t		2589606	1					
ANR	2589630	Identifier	upd_pxlget4f2		2589606	2					
ANR	2589631	ParameterList	upd_p upd		2589606	3					
ANR	2589632	Parameter	upd_p upd	7359:14:260082:260090	2589606	0	True				
ANR	2589633	ParameterType	upd_p		2589606	0					
ANR	2589634	Identifier	upd		2589606	1					
ANR	2589635	CFGEntryNode	ENTRY		2589606		True				
ANR	2589636	CFGExitNode	EXIT		2589606		True				
ANR	2589637	Symbol	upd_pxlget4f1		2589606						
ANR	2589638	Symbol	upd -> pxlptr		2589606						
ANR	2589639	Symbol	* upd		2589606						
ANR	2589640	Symbol	* upd -> pxlptr ++		2589606						
ANR	2589641	Symbol	upd		2589606						
ANR	2589642	Symbol	upd -> pxlget		2589606						
ANR	2589643	Function	upd_pxlget8f	7366:0:260208:260289							
ANR	2589644	FunctionDef	upd_pxlget8f (upd_p upd)		2589643	0					
ANR	2589645	CompoundStatement		7368:0:260248:260289	2589643	0					
ANR	2589646	ReturnStatement	return ( uint32_t ) ( * upd -> pxlptr ++ ) ;	7369:3:260253:260287	2589643	0	True				
ANR	2589647	CastExpression	( uint32_t ) ( * upd -> pxlptr ++ )		2589643	0					
ANR	2589648	CastTarget	uint32_t		2589643	0					
ANR	2589649	UnaryOperationExpression	* upd -> pxlptr ++		2589643	1					
ANR	2589650	UnaryOperator	*		2589643	0					
ANR	2589651	PostIncDecOperationExpression	upd -> pxlptr ++		2589643	1					
ANR	2589652	PtrMemberAccess	upd -> pxlptr		2589643	0					
ANR	2589653	Identifier	upd		2589643	0					
ANR	2589654	Identifier	pxlptr		2589643	1					
ANR	2589655	IncDec	++		2589643	1					
ANR	2589656	ReturnType	static uint32_t		2589643	1					
ANR	2589657	Identifier	upd_pxlget8f		2589643	2					
ANR	2589658	ParameterList	upd_p upd		2589643	3					
ANR	2589659	Parameter	upd_p upd	7367:13:260237:260245	2589643	0	True				
ANR	2589660	ParameterType	upd_p		2589643	0					
ANR	2589661	Identifier	upd		2589643	1					
ANR	2589662	CFGEntryNode	ENTRY		2589643		True				
ANR	2589663	CFGExitNode	EXIT		2589643		True				
ANR	2589664	Symbol	upd -> pxlptr		2589643						
ANR	2589665	Symbol	* upd		2589643						
ANR	2589666	Symbol	* upd -> pxlptr ++		2589643						
ANR	2589667	Symbol	upd		2589643						
ANR	2589668	Function	upd_pxlget16f	7373:0:260313:260488							
ANR	2589669	FunctionDef	upd_pxlget16f (upd_p upd)		2589668	0					
ANR	2589670	CompoundStatement		7375:0:260354:260488	2589668	0					
ANR	2589671	IdentifierDeclStatement	uint32_t ci = ( uint32_t ) ( * upd -> pxlptr ++ ) << 8 ;	7376:3:260359:260406	2589668	0	True				
ANR	2589672	IdentifierDecl	ci = ( uint32_t ) ( * upd -> pxlptr ++ ) << 8		2589668	0					
ANR	2589673	IdentifierDeclType	uint32_t		2589668	0					
ANR	2589674	Identifier	ci		2589668	1					
ANR	2589675	AssignmentExpression	ci = ( uint32_t ) ( * upd -> pxlptr ++ ) << 8		2589668	2		=			
ANR	2589676	Identifier	ci		2589668	0					
ANR	2589677	ShiftExpression	( uint32_t ) ( * upd -> pxlptr ++ ) << 8		2589668	1		<<			
ANR	2589678	CastExpression	( uint32_t ) ( * upd -> pxlptr ++ )		2589668	0					
ANR	2589679	CastTarget	uint32_t		2589668	0					
ANR	2589680	UnaryOperationExpression	* upd -> pxlptr ++		2589668	1					
ANR	2589681	UnaryOperator	*		2589668	0					
ANR	2589682	PostIncDecOperationExpression	upd -> pxlptr ++		2589668	1					
ANR	2589683	PtrMemberAccess	upd -> pxlptr		2589668	0					
ANR	2589684	Identifier	upd		2589668	0					
ANR	2589685	Identifier	pxlptr		2589668	1					
ANR	2589686	IncDec	++		2589668	1					
ANR	2589687	PrimaryExpression	8		2589668	1					
ANR	2589688	ExpressionStatement	ci |= * upd -> pxlptr ++	7377:18:260426:260464	2589668	1	True				
ANR	2589689	AssignmentExpression	ci |= * upd -> pxlptr ++		2589668	0		|=			
ANR	2589690	Identifier	ci		2589668	0					
ANR	2589691	UnaryOperationExpression	* upd -> pxlptr ++		2589668	1					
ANR	2589692	UnaryOperator	*		2589668	0					
ANR	2589693	PostIncDecOperationExpression	upd -> pxlptr ++		2589668	1					
ANR	2589694	PtrMemberAccess	upd -> pxlptr		2589668	0					
ANR	2589695	Identifier	upd		2589668	0					
ANR	2589696	Identifier	pxlptr		2589668	1					
ANR	2589697	IncDec	++		2589668	1					
ANR	2589698	ReturnStatement	return ci ;	7378:3:260469:260486	2589668	2	True				
ANR	2589699	Identifier	ci		2589668	0					
ANR	2589700	ReturnType	static uint32_t		2589668	1					
ANR	2589701	Identifier	upd_pxlget16f		2589668	2					
ANR	2589702	ParameterList	upd_p upd		2589668	3					
ANR	2589703	Parameter	upd_p upd	7374:14:260343:260351	2589668	0	True				
ANR	2589704	ParameterType	upd_p		2589668	0					
ANR	2589705	Identifier	upd		2589668	1					
ANR	2589706	CFGEntryNode	ENTRY		2589668		True				
ANR	2589707	CFGExitNode	EXIT		2589668		True				
ANR	2589708	Symbol	upd -> pxlptr		2589668						
ANR	2589709	Symbol	* upd		2589668						
ANR	2589710	Symbol	* upd -> pxlptr ++		2589668						
ANR	2589711	Symbol	ci		2589668						
ANR	2589712	Symbol	upd		2589668						
ANR	2589713	Function	upd_pxlget24f	7382:0:260512:260715							
ANR	2589714	FunctionDef	upd_pxlget24f (upd_p upd)		2589713	0					
ANR	2589715	CompoundStatement		7384:0:260553:260715	2589713	0					
ANR	2589716	IdentifierDeclStatement	uint32_t ci = ( uint32_t ) ( * upd -> pxlptr ++ ) << 16 ;	7385:3:260558:260606	2589713	0	True				
ANR	2589717	IdentifierDecl	ci = ( uint32_t ) ( * upd -> pxlptr ++ ) << 16		2589713	0					
ANR	2589718	IdentifierDeclType	uint32_t		2589713	0					
ANR	2589719	Identifier	ci		2589713	1					
ANR	2589720	AssignmentExpression	ci = ( uint32_t ) ( * upd -> pxlptr ++ ) << 16		2589713	2		=			
ANR	2589721	Identifier	ci		2589713	0					
ANR	2589722	ShiftExpression	( uint32_t ) ( * upd -> pxlptr ++ ) << 16		2589713	1		<<			
ANR	2589723	CastExpression	( uint32_t ) ( * upd -> pxlptr ++ )		2589713	0					
ANR	2589724	CastTarget	uint32_t		2589713	0					
ANR	2589725	UnaryOperationExpression	* upd -> pxlptr ++		2589713	1					
ANR	2589726	UnaryOperator	*		2589713	0					
ANR	2589727	PostIncDecOperationExpression	upd -> pxlptr ++		2589713	1					
ANR	2589728	PtrMemberAccess	upd -> pxlptr		2589713	0					
ANR	2589729	Identifier	upd		2589713	0					
ANR	2589730	Identifier	pxlptr		2589713	1					
ANR	2589731	IncDec	++		2589713	1					
ANR	2589732	PrimaryExpression	16		2589713	1					
ANR	2589733	ExpressionStatement	ci |= ( uint32_t ) ( * upd -> pxlptr ++ ) << 8	7386:10:260618:260657	2589713	1	True				
ANR	2589734	AssignmentExpression	ci |= ( uint32_t ) ( * upd -> pxlptr ++ ) << 8		2589713	0		|=			
ANR	2589735	Identifier	ci		2589713	0					
ANR	2589736	ShiftExpression	( uint32_t ) ( * upd -> pxlptr ++ ) << 8		2589713	1		<<			
ANR	2589737	CastExpression	( uint32_t ) ( * upd -> pxlptr ++ )		2589713	0					
ANR	2589738	CastTarget	uint32_t		2589713	0					
ANR	2589739	UnaryOperationExpression	* upd -> pxlptr ++		2589713	1					
ANR	2589740	UnaryOperator	*		2589713	0					
ANR	2589741	PostIncDecOperationExpression	upd -> pxlptr ++		2589713	1					
ANR	2589742	PtrMemberAccess	upd -> pxlptr		2589713	0					
ANR	2589743	Identifier	upd		2589713	0					
ANR	2589744	Identifier	pxlptr		2589713	1					
ANR	2589745	IncDec	++		2589713	1					
ANR	2589746	PrimaryExpression	8		2589713	1					
ANR	2589747	ExpressionStatement	ci |= * upd -> pxlptr ++	7387:10:260669:260699	2589713	2	True				
ANR	2589748	AssignmentExpression	ci |= * upd -> pxlptr ++		2589713	0		|=			
ANR	2589749	Identifier	ci		2589713	0					
ANR	2589750	UnaryOperationExpression	* upd -> pxlptr ++		2589713	1					
ANR	2589751	UnaryOperator	*		2589713	0					
ANR	2589752	PostIncDecOperationExpression	upd -> pxlptr ++		2589713	1					
ANR	2589753	PtrMemberAccess	upd -> pxlptr		2589713	0					
ANR	2589754	Identifier	upd		2589713	0					
ANR	2589755	Identifier	pxlptr		2589713	1					
ANR	2589756	IncDec	++		2589713	1					
ANR	2589757	ReturnStatement	return ci ;	7388:3:260704:260713	2589713	3	True				
ANR	2589758	Identifier	ci		2589713	0					
ANR	2589759	ReturnType	static uint32_t		2589713	1					
ANR	2589760	Identifier	upd_pxlget24f		2589713	2					
ANR	2589761	ParameterList	upd_p upd		2589713	3					
ANR	2589762	Parameter	upd_p upd	7383:14:260542:260550	2589713	0	True				
ANR	2589763	ParameterType	upd_p		2589713	0					
ANR	2589764	Identifier	upd		2589713	1					
ANR	2589765	CFGEntryNode	ENTRY		2589713		True				
ANR	2589766	CFGExitNode	EXIT		2589713		True				
ANR	2589767	Symbol	upd -> pxlptr		2589713						
ANR	2589768	Symbol	* upd		2589713						
ANR	2589769	Symbol	* upd -> pxlptr ++		2589713						
ANR	2589770	Symbol	ci		2589713						
ANR	2589771	Symbol	upd		2589713						
ANR	2589772	Function	upd_pxlget32f	7392:0:260739:261033							
ANR	2589773	FunctionDef	upd_pxlget32f (upd_p upd)		2589772	0					
ANR	2589774	CompoundStatement		7394:0:260780:261033	2589772	0					
ANR	2589775	IdentifierDeclStatement	uint32_t ci = ( uint32_t ) ( * upd -> pxlptr ++ ) << 24 ;	7395:3:260785:260833	2589772	0	True				
ANR	2589776	IdentifierDecl	ci = ( uint32_t ) ( * upd -> pxlptr ++ ) << 24		2589772	0					
ANR	2589777	IdentifierDeclType	uint32_t		2589772	0					
ANR	2589778	Identifier	ci		2589772	1					
ANR	2589779	AssignmentExpression	ci = ( uint32_t ) ( * upd -> pxlptr ++ ) << 24		2589772	2		=			
ANR	2589780	Identifier	ci		2589772	0					
ANR	2589781	ShiftExpression	( uint32_t ) ( * upd -> pxlptr ++ ) << 24		2589772	1		<<			
ANR	2589782	CastExpression	( uint32_t ) ( * upd -> pxlptr ++ )		2589772	0					
ANR	2589783	CastTarget	uint32_t		2589772	0					
ANR	2589784	UnaryOperationExpression	* upd -> pxlptr ++		2589772	1					
ANR	2589785	UnaryOperator	*		2589772	0					
ANR	2589786	PostIncDecOperationExpression	upd -> pxlptr ++		2589772	1					
ANR	2589787	PtrMemberAccess	upd -> pxlptr		2589772	0					
ANR	2589788	Identifier	upd		2589772	0					
ANR	2589789	Identifier	pxlptr		2589772	1					
ANR	2589790	IncDec	++		2589772	1					
ANR	2589791	PrimaryExpression	24		2589772	1					
ANR	2589792	ExpressionStatement	ci |= ( uint32_t ) ( * upd -> pxlptr ++ ) << 16	7396:18:260853:260892	2589772	1	True				
ANR	2589793	AssignmentExpression	ci |= ( uint32_t ) ( * upd -> pxlptr ++ ) << 16		2589772	0		|=			
ANR	2589794	Identifier	ci		2589772	0					
ANR	2589795	ShiftExpression	( uint32_t ) ( * upd -> pxlptr ++ ) << 16		2589772	1		<<			
ANR	2589796	CastExpression	( uint32_t ) ( * upd -> pxlptr ++ )		2589772	0					
ANR	2589797	CastTarget	uint32_t		2589772	0					
ANR	2589798	UnaryOperationExpression	* upd -> pxlptr ++		2589772	1					
ANR	2589799	UnaryOperator	*		2589772	0					
ANR	2589800	PostIncDecOperationExpression	upd -> pxlptr ++		2589772	1					
ANR	2589801	PtrMemberAccess	upd -> pxlptr		2589772	0					
ANR	2589802	Identifier	upd		2589772	0					
ANR	2589803	Identifier	pxlptr		2589772	1					
ANR	2589804	IncDec	++		2589772	1					
ANR	2589805	PrimaryExpression	16		2589772	1					
ANR	2589806	ExpressionStatement	ci |= ( uint32_t ) ( * upd -> pxlptr ++ ) << 8	7397:18:260912:260951	2589772	2	True				
ANR	2589807	AssignmentExpression	ci |= ( uint32_t ) ( * upd -> pxlptr ++ ) << 8		2589772	0		|=			
ANR	2589808	Identifier	ci		2589772	0					
ANR	2589809	ShiftExpression	( uint32_t ) ( * upd -> pxlptr ++ ) << 8		2589772	1		<<			
ANR	2589810	CastExpression	( uint32_t ) ( * upd -> pxlptr ++ )		2589772	0					
ANR	2589811	CastTarget	uint32_t		2589772	0					
ANR	2589812	UnaryOperationExpression	* upd -> pxlptr ++		2589772	1					
ANR	2589813	UnaryOperator	*		2589772	0					
ANR	2589814	PostIncDecOperationExpression	upd -> pxlptr ++		2589772	1					
ANR	2589815	PtrMemberAccess	upd -> pxlptr		2589772	0					
ANR	2589816	Identifier	upd		2589772	0					
ANR	2589817	Identifier	pxlptr		2589772	1					
ANR	2589818	IncDec	++		2589772	1					
ANR	2589819	PrimaryExpression	8		2589772	1					
ANR	2589820	ExpressionStatement	ci |= * upd -> pxlptr ++	7398:18:260971:261009	2589772	3	True				
ANR	2589821	AssignmentExpression	ci |= * upd -> pxlptr ++		2589772	0		|=			
ANR	2589822	Identifier	ci		2589772	0					
ANR	2589823	UnaryOperationExpression	* upd -> pxlptr ++		2589772	1					
ANR	2589824	UnaryOperator	*		2589772	0					
ANR	2589825	PostIncDecOperationExpression	upd -> pxlptr ++		2589772	1					
ANR	2589826	PtrMemberAccess	upd -> pxlptr		2589772	0					
ANR	2589827	Identifier	upd		2589772	0					
ANR	2589828	Identifier	pxlptr		2589772	1					
ANR	2589829	IncDec	++		2589772	1					
ANR	2589830	ReturnStatement	return ci ;	7399:3:261014:261031	2589772	4	True				
ANR	2589831	Identifier	ci		2589772	0					
ANR	2589832	ReturnType	static uint32_t		2589772	1					
ANR	2589833	Identifier	upd_pxlget32f		2589772	2					
ANR	2589834	ParameterList	upd_p upd		2589772	3					
ANR	2589835	Parameter	upd_p upd	7393:14:260769:260777	2589772	0	True				
ANR	2589836	ParameterType	upd_p		2589772	0					
ANR	2589837	Identifier	upd		2589772	1					
ANR	2589838	CFGEntryNode	ENTRY		2589772		True				
ANR	2589839	CFGExitNode	EXIT		2589772		True				
ANR	2589840	Symbol	upd -> pxlptr		2589772						
ANR	2589841	Symbol	* upd		2589772						
ANR	2589842	Symbol	* upd -> pxlptr ++		2589772						
ANR	2589843	Symbol	ci		2589772						
ANR	2589844	Symbol	upd		2589772						
ANR	2589845	Function	upd_pxlgetnix	7404:0:261057:261124							
ANR	2589846	FunctionDef	upd_pxlgetnix (upd_p upd)		2589845	0					
ANR	2589847	CompoundStatement		7406:0:261098:261124	2589845	0					
ANR	2589848	ReturnStatement	return ( uint32_t ) 0 ;	7407:3:261103:261122	2589845	0	True				
ANR	2589849	CastExpression	( uint32_t ) 0		2589845	0					
ANR	2589850	CastTarget	uint32_t		2589845	0					
ANR	2589851	PrimaryExpression	0		2589845	1					
ANR	2589852	ReturnType	static uint32_t		2589845	1					
ANR	2589853	Identifier	upd_pxlgetnix		2589845	2					
ANR	2589854	ParameterList	upd_p upd		2589845	3					
ANR	2589855	Parameter	upd_p upd	7405:14:261087:261095	2589845	0	True				
ANR	2589856	ParameterType	upd_p		2589845	0					
ANR	2589857	Identifier	upd		2589845	1					
ANR	2589858	CFGEntryNode	ENTRY		2589845		True				
ANR	2589859	CFGExitNode	EXIT		2589845		True				
ANR	2589860	Symbol	upd		2589845						
ANR	2589861	Function	upd_pxlrev	7412:0:261157:263201							
ANR	2589862	FunctionDef	upd_pxlrev (upd_p upd)		2589861	0					
ANR	2589863	CompoundStatement		7414:0:261195:263201	2589861	0					
ANR	2589864	IdentifierDeclStatement	const uint width = upd -> pwidth < upd -> gswidth ? upd -> pwidth : upd -> gswidth ;	7415:3:261200:261274	2589861	0	True				
ANR	2589865	IdentifierDecl	width = upd -> pwidth < upd -> gswidth ? upd -> pwidth : upd -> gswidth		2589861	0					
ANR	2589866	IdentifierDeclType	const uint		2589861	0					
ANR	2589867	Identifier	width		2589861	1					
ANR	2589868	AssignmentExpression	width = upd -> pwidth < upd -> gswidth ? upd -> pwidth : upd -> gswidth		2589861	2		=			
ANR	2589869	Identifier	width		2589861	0					
ANR	2589870	ConditionalExpression	upd -> pwidth < upd -> gswidth ? upd -> pwidth : upd -> gswidth		2589861	1					
ANR	2589871	Condition	upd -> pwidth < upd -> gswidth		2589861	0					
ANR	2589872	RelationalExpression	upd -> pwidth < upd -> gswidth		2589861	0		<			
ANR	2589873	PtrMemberAccess	upd -> pwidth		2589861	0					
ANR	2589874	Identifier	upd		2589861	0					
ANR	2589875	Identifier	pwidth		2589861	1					
ANR	2589876	PtrMemberAccess	upd -> gswidth		2589861	1					
ANR	2589877	Identifier	upd		2589861	0					
ANR	2589878	Identifier	gswidth		2589861	1					
ANR	2589879	PtrMemberAccess	upd -> pwidth		2589861	1					
ANR	2589880	Identifier	upd		2589861	0					
ANR	2589881	Identifier	pwidth		2589861	1					
ANR	2589882	PtrMemberAccess	upd -> gswidth		2589861	2					
ANR	2589883	Identifier	upd		2589861	0					
ANR	2589884	Identifier	gswidth		2589861	1					
ANR	2589885	IfStatement	if ( ! ( upd -> pxlptr = upd -> gsscan ) )		2589861	1					
ANR	2589886	Condition	! ( upd -> pxlptr = upd -> gsscan )	7417:6:261283:261310	2589861	0	True				
ANR	2589887	UnaryOperationExpression	! ( upd -> pxlptr = upd -> gsscan )		2589861	0					
ANR	2589888	UnaryOperator	!		2589861	0					
ANR	2589889	AssignmentExpression	upd -> pxlptr = upd -> gsscan		2589861	1		=			
ANR	2589890	PtrMemberAccess	upd -> pxlptr		2589861	0					
ANR	2589891	Identifier	upd		2589861	0					
ANR	2589892	Identifier	pxlptr		2589861	1					
ANR	2589893	PtrMemberAccess	upd -> gsscan		2589861	1					
ANR	2589894	Identifier	upd		2589861	0					
ANR	2589895	Identifier	gsscan		2589861	1					
ANR	2589896	CompoundStatement		4:36:117:117	2589861	1					
ANR	2589897	ExpressionStatement	upd -> pxlget = upd_pxlgetnix	7419:6:261322:261349	2589861	0	True				
ANR	2589898	AssignmentExpression	upd -> pxlget = upd_pxlgetnix		2589861	0		=			
ANR	2589899	PtrMemberAccess	upd -> pxlget		2589861	0					
ANR	2589900	Identifier	upd		2589861	0					
ANR	2589901	Identifier	pxlget		2589861	1					
ANR	2589902	Identifier	upd_pxlgetnix		2589861	1					
ANR	2589903	ElseStatement	else		2589861	0					
ANR	2589904	CompoundStatement		9:6:174:245	2589861	0					
ANR	2589905	IdentifierDeclStatement	uint32_t ofs = ( uint32_t ) upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ] * ( width - 1 ) ;	7422:6:261370:261441	2589861	0	True				
ANR	2589906	IdentifierDecl	ofs = ( uint32_t ) upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ] * ( width - 1 )		2589861	0					
ANR	2589907	IdentifierDeclType	uint32_t		2589861	0					
ANR	2589908	Identifier	ofs		2589861	1					
ANR	2589909	AssignmentExpression	ofs = ( uint32_t ) upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ] * ( width - 1 )		2589861	2		=			
ANR	2589910	Identifier	ofs		2589861	0					
ANR	2589911	MultiplicativeExpression	( uint32_t ) upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ] * ( width - 1 )		2589861	1		*			
ANR	2589912	CastExpression	( uint32_t ) upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ]		2589861	0					
ANR	2589913	CastTarget	uint32_t		2589861	0					
ANR	2589914	ArrayIndexing	upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ]		2589861	1					
ANR	2589915	MemberAccess	upd -> int_a [ IA_COLOR_INFO ] . data		2589861	0					
ANR	2589916	ArrayIndexing	upd -> int_a [ IA_COLOR_INFO ]		2589861	0					
ANR	2589917	PtrMemberAccess	upd -> int_a		2589861	0					
ANR	2589918	Identifier	upd		2589861	0					
ANR	2589919	Identifier	int_a		2589861	1					
ANR	2589920	Identifier	IA_COLOR_INFO		2589861	1					
ANR	2589921	Identifier	data		2589861	1					
ANR	2589922	PrimaryExpression	1		2589861	1					
ANR	2589923	AdditiveExpression	width - 1		2589861	1		-			
ANR	2589924	Identifier	width		2589861	0					
ANR	2589925	PrimaryExpression	1		2589861	1					
ANR	2589926	ExpressionStatement	upd -> pxlptr += ofs >> 3	7424:6:261450:261471	2589861	1	True				
ANR	2589927	AssignmentExpression	upd -> pxlptr += ofs >> 3		2589861	0		+=			
ANR	2589928	PtrMemberAccess	upd -> pxlptr		2589861	0					
ANR	2589929	Identifier	upd		2589861	0					
ANR	2589930	Identifier	pxlptr		2589861	1					
ANR	2589931	ShiftExpression	ofs >> 3		2589861	1		>>			
ANR	2589932	Identifier	ofs		2589861	0					
ANR	2589933	PrimaryExpression	3		2589861	1					
ANR	2589934	ExpressionStatement	ofs &= 7	7426:6:261480:261488	2589861	2	True				
ANR	2589935	AssignmentExpression	ofs &= 7		2589861	0		&=			
ANR	2589936	Identifier	ofs		2589861	0					
ANR	2589937	PrimaryExpression	7		2589861	1					
ANR	2589938	SwitchStatement	switch ( upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ] )		2589861	3					
ANR	2589939	Condition	upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ]	7428:13:261504:261536	2589861	0	True				
ANR	2589940	ArrayIndexing	upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ]		2589861	0					
ANR	2589941	MemberAccess	upd -> int_a [ IA_COLOR_INFO ] . data		2589861	0					
ANR	2589942	ArrayIndexing	upd -> int_a [ IA_COLOR_INFO ]		2589861	0					
ANR	2589943	PtrMemberAccess	upd -> int_a		2589861	0					
ANR	2589944	Identifier	upd		2589861	0					
ANR	2589945	Identifier	int_a		2589861	1					
ANR	2589946	Identifier	IA_COLOR_INFO		2589861	1					
ANR	2589947	Identifier	data		2589861	1					
ANR	2589948	PrimaryExpression	1		2589861	1					
ANR	2589949	CompoundStatement		15:48:343:343	2589861	1					
ANR	2589950	Label	case 1 :	7429:9:261550:261557	2589861	0	True				
ANR	2589951	SwitchStatement	switch ( ofs )		2589861	1					
ANR	2589952	Condition	ofs	7429:25:261566:261568	2589861	0	True				
ANR	2589953	Identifier	ofs		2589861	0					
ANR	2589954	CompoundStatement		16:30:375:375	2589861	1					
ANR	2589955	Label	case 0 :	7430:15:261588:261594	2589861	0	True				
ANR	2589956	ExpressionStatement	upd -> pxlget = upd_pxlget1r1	7430:24:261597:261624	2589861	1	True				
ANR	2589957	AssignmentExpression	upd -> pxlget = upd_pxlget1r1		2589861	0		=			
ANR	2589958	PtrMemberAccess	upd -> pxlget		2589861	0					
ANR	2589959	Identifier	upd		2589861	0					
ANR	2589960	Identifier	pxlget		2589861	1					
ANR	2589961	Identifier	upd_pxlget1r1		2589861	1					
ANR	2589962	BreakStatement	break ;	7430:53:261626:261631	2589861	2	True				
ANR	2589963	Label	case 1 :	7431:15:261648:261654	2589861	3	True				
ANR	2589964	ExpressionStatement	upd -> pxlget = upd_pxlget1r2	7431:24:261657:261684	2589861	4	True				
ANR	2589965	AssignmentExpression	upd -> pxlget = upd_pxlget1r2		2589861	0		=			
ANR	2589966	PtrMemberAccess	upd -> pxlget		2589861	0					
ANR	2589967	Identifier	upd		2589861	0					
ANR	2589968	Identifier	pxlget		2589861	1					
ANR	2589969	Identifier	upd_pxlget1r2		2589861	1					
ANR	2589970	BreakStatement	break ;	7431:53:261686:261691	2589861	5	True				
ANR	2589971	Label	case 2 :	7432:15:261708:261714	2589861	6	True				
ANR	2589972	ExpressionStatement	upd -> pxlget = upd_pxlget1r3	7432:24:261717:261744	2589861	7	True				
ANR	2589973	AssignmentExpression	upd -> pxlget = upd_pxlget1r3		2589861	0		=			
ANR	2589974	PtrMemberAccess	upd -> pxlget		2589861	0					
ANR	2589975	Identifier	upd		2589861	0					
ANR	2589976	Identifier	pxlget		2589861	1					
ANR	2589977	Identifier	upd_pxlget1r3		2589861	1					
ANR	2589978	BreakStatement	break ;	7432:53:261746:261751	2589861	8	True				
ANR	2589979	Label	case 3 :	7433:15:261768:261774	2589861	9	True				
ANR	2589980	ExpressionStatement	upd -> pxlget = upd_pxlget1r4	7433:24:261777:261804	2589861	10	True				
ANR	2589981	AssignmentExpression	upd -> pxlget = upd_pxlget1r4		2589861	0		=			
ANR	2589982	PtrMemberAccess	upd -> pxlget		2589861	0					
ANR	2589983	Identifier	upd		2589861	0					
ANR	2589984	Identifier	pxlget		2589861	1					
ANR	2589985	Identifier	upd_pxlget1r4		2589861	1					
ANR	2589986	BreakStatement	break ;	7433:53:261806:261811	2589861	11	True				
ANR	2589987	Label	case 4 :	7434:15:261828:261834	2589861	12	True				
ANR	2589988	ExpressionStatement	upd -> pxlget = upd_pxlget1r5	7434:24:261837:261864	2589861	13	True				
ANR	2589989	AssignmentExpression	upd -> pxlget = upd_pxlget1r5		2589861	0		=			
ANR	2589990	PtrMemberAccess	upd -> pxlget		2589861	0					
ANR	2589991	Identifier	upd		2589861	0					
ANR	2589992	Identifier	pxlget		2589861	1					
ANR	2589993	Identifier	upd_pxlget1r5		2589861	1					
ANR	2589994	BreakStatement	break ;	7434:53:261866:261871	2589861	14	True				
ANR	2589995	Label	case 5 :	7435:15:261888:261894	2589861	15	True				
ANR	2589996	ExpressionStatement	upd -> pxlget = upd_pxlget1r6	7435:24:261897:261924	2589861	16	True				
ANR	2589997	AssignmentExpression	upd -> pxlget = upd_pxlget1r6		2589861	0		=			
ANR	2589998	PtrMemberAccess	upd -> pxlget		2589861	0					
ANR	2589999	Identifier	upd		2589861	0					
ANR	2590000	Identifier	pxlget		2589861	1					
ANR	2590001	Identifier	upd_pxlget1r6		2589861	1					
ANR	2590002	BreakStatement	break ;	7435:53:261926:261931	2589861	17	True				
ANR	2590003	Label	case 6 :	7436:15:261948:261954	2589861	18	True				
ANR	2590004	ExpressionStatement	upd -> pxlget = upd_pxlget1r7	7436:24:261957:261984	2589861	19	True				
ANR	2590005	AssignmentExpression	upd -> pxlget = upd_pxlget1r7		2589861	0		=			
ANR	2590006	PtrMemberAccess	upd -> pxlget		2589861	0					
ANR	2590007	Identifier	upd		2589861	0					
ANR	2590008	Identifier	pxlget		2589861	1					
ANR	2590009	Identifier	upd_pxlget1r7		2589861	1					
ANR	2590010	BreakStatement	break ;	7436:53:261986:261991	2589861	20	True				
ANR	2590011	Label	case 7 :	7437:15:262008:262014	2589861	21	True				
ANR	2590012	ExpressionStatement	upd -> pxlget = upd_pxlget1r8	7437:24:262017:262044	2589861	22	True				
ANR	2590013	AssignmentExpression	upd -> pxlget = upd_pxlget1r8		2589861	0		=			
ANR	2590014	PtrMemberAccess	upd -> pxlget		2589861	0					
ANR	2590015	Identifier	upd		2589861	0					
ANR	2590016	Identifier	pxlget		2589861	1					
ANR	2590017	Identifier	upd_pxlget1r8		2589861	1					
ANR	2590018	BreakStatement	break ;	7437:53:262046:262051	2589861	23	True				
ANR	2590019	BreakStatement	break ;	7438:14:262067:262072	2589861	2	True				
ANR	2590020	Label	case 2 :	7439:9:262083:262090	2589861	3	True				
ANR	2590021	SwitchStatement	switch ( ofs )		2589861	4					
ANR	2590022	Condition	ofs	7439:25:262099:262101	2589861	0	True				
ANR	2590023	Identifier	ofs		2589861	0					
ANR	2590024	CompoundStatement		26:30:908:908	2589861	1					
ANR	2590025	Label	case 0 :	7440:15:262121:262127	2589861	0	True				
ANR	2590026	ExpressionStatement	upd -> pxlget = upd_pxlget2r1	7440:24:262130:262157	2589861	1	True				
ANR	2590027	AssignmentExpression	upd -> pxlget = upd_pxlget2r1		2589861	0		=			
ANR	2590028	PtrMemberAccess	upd -> pxlget		2589861	0					
ANR	2590029	Identifier	upd		2589861	0					
ANR	2590030	Identifier	pxlget		2589861	1					
ANR	2590031	Identifier	upd_pxlget2r1		2589861	1					
ANR	2590032	BreakStatement	break ;	7440:53:262159:262164	2589861	2	True				
ANR	2590033	Label	case 2 :	7441:15:262181:262187	2589861	3	True				
ANR	2590034	ExpressionStatement	upd -> pxlget = upd_pxlget2r2	7441:24:262190:262217	2589861	4	True				
ANR	2590035	AssignmentExpression	upd -> pxlget = upd_pxlget2r2		2589861	0		=			
ANR	2590036	PtrMemberAccess	upd -> pxlget		2589861	0					
ANR	2590037	Identifier	upd		2589861	0					
ANR	2590038	Identifier	pxlget		2589861	1					
ANR	2590039	Identifier	upd_pxlget2r2		2589861	1					
ANR	2590040	BreakStatement	break ;	7441:53:262219:262224	2589861	5	True				
ANR	2590041	Label	case 4 :	7442:15:262241:262247	2589861	6	True				
ANR	2590042	ExpressionStatement	upd -> pxlget = upd_pxlget2r3	7442:24:262250:262277	2589861	7	True				
ANR	2590043	AssignmentExpression	upd -> pxlget = upd_pxlget2r3		2589861	0		=			
ANR	2590044	PtrMemberAccess	upd -> pxlget		2589861	0					
ANR	2590045	Identifier	upd		2589861	0					
ANR	2590046	Identifier	pxlget		2589861	1					
ANR	2590047	Identifier	upd_pxlget2r3		2589861	1					
ANR	2590048	BreakStatement	break ;	7442:53:262279:262284	2589861	8	True				
ANR	2590049	Label	case 6 :	7443:15:262301:262307	2589861	9	True				
ANR	2590050	ExpressionStatement	upd -> pxlget = upd_pxlget2r4	7443:24:262310:262337	2589861	10	True				
ANR	2590051	AssignmentExpression	upd -> pxlget = upd_pxlget2r4		2589861	0		=			
ANR	2590052	PtrMemberAccess	upd -> pxlget		2589861	0					
ANR	2590053	Identifier	upd		2589861	0					
ANR	2590054	Identifier	pxlget		2589861	1					
ANR	2590055	Identifier	upd_pxlget2r4		2589861	1					
ANR	2590056	BreakStatement	break ;	7443:53:262339:262344	2589861	11	True				
ANR	2590057	BreakStatement	break ;	7444:14:262360:262365	2589861	5	True				
ANR	2590058	Label	case 4 :	7445:9:262376:262383	2589861	6	True				
ANR	2590059	SwitchStatement	switch ( ofs )		2589861	7					
ANR	2590060	Condition	ofs	7445:25:262392:262394	2589861	0	True				
ANR	2590061	Identifier	ofs		2589861	0					
ANR	2590062	CompoundStatement		32:30:1201:1201	2589861	1					
ANR	2590063	Label	case 0 :	7446:15:262414:262420	2589861	0	True				
ANR	2590064	ExpressionStatement	upd -> pxlget = upd_pxlget4r1	7446:24:262423:262450	2589861	1	True				
ANR	2590065	AssignmentExpression	upd -> pxlget = upd_pxlget4r1		2589861	0		=			
ANR	2590066	PtrMemberAccess	upd -> pxlget		2589861	0					
ANR	2590067	Identifier	upd		2589861	0					
ANR	2590068	Identifier	pxlget		2589861	1					
ANR	2590069	Identifier	upd_pxlget4r1		2589861	1					
ANR	2590070	BreakStatement	break ;	7446:53:262452:262457	2589861	2	True				
ANR	2590071	Label	case 4 :	7447:15:262474:262480	2589861	3	True				
ANR	2590072	ExpressionStatement	upd -> pxlget = upd_pxlget4r2	7447:24:262483:262510	2589861	4	True				
ANR	2590073	AssignmentExpression	upd -> pxlget = upd_pxlget4r2		2589861	0		=			
ANR	2590074	PtrMemberAccess	upd -> pxlget		2589861	0					
ANR	2590075	Identifier	upd		2589861	0					
ANR	2590076	Identifier	pxlget		2589861	1					
ANR	2590077	Identifier	upd_pxlget4r2		2589861	1					
ANR	2590078	BreakStatement	break ;	7447:53:262512:262517	2589861	5	True				
ANR	2590079	BreakStatement	break ;	7448:14:262533:262538	2589861	8	True				
ANR	2590080	Label	case 8 :	7449:9:262549:262556	2589861	9	True				
ANR	2590081	ExpressionStatement	upd -> pxlget = upd_pxlget8r	7449:18:262558:262584	2589861	10	True				
ANR	2590082	AssignmentExpression	upd -> pxlget = upd_pxlget8r		2589861	0		=			
ANR	2590083	PtrMemberAccess	upd -> pxlget		2589861	0					
ANR	2590084	Identifier	upd		2589861	0					
ANR	2590085	Identifier	pxlget		2589861	1					
ANR	2590086	Identifier	upd_pxlget8r		2589861	1					
ANR	2590087	BreakStatement	break ;	7449:47:262587:262592	2589861	11	True				
ANR	2590088	Label	case 16 :	7450:9:262603:262610	2589861	12	True				
ANR	2590089	ExpressionStatement	upd -> pxlget = upd_pxlget16r	7451:12:262624:262652	2589861	13	True				
ANR	2590090	AssignmentExpression	upd -> pxlget = upd_pxlget16r		2589861	0		=			
ANR	2590091	PtrMemberAccess	upd -> pxlget		2589861	0					
ANR	2590092	Identifier	upd		2589861	0					
ANR	2590093	Identifier	pxlget		2589861	1					
ANR	2590094	Identifier	upd_pxlget16r		2589861	1					
ANR	2590095	ExpressionStatement	upd -> pxlptr += 1	7452:12:262666:262682	2589861	14	True				
ANR	2590096	AssignmentExpression	upd -> pxlptr += 1		2589861	0		+=			
ANR	2590097	PtrMemberAccess	upd -> pxlptr		2589861	0					
ANR	2590098	Identifier	upd		2589861	0					
ANR	2590099	Identifier	pxlptr		2589861	1					
ANR	2590100	PrimaryExpression	1		2589861	1					
ANR	2590101	BreakStatement	break ;	7453:12:262696:262701	2589861	15	True				
ANR	2590102	Label	case 24 :	7454:9:262712:262719	2589861	16	True				
ANR	2590103	ExpressionStatement	upd -> pxlget = upd_pxlget24r	7455:12:262733:262760	2589861	17	True				
ANR	2590104	AssignmentExpression	upd -> pxlget = upd_pxlget24r		2589861	0		=			
ANR	2590105	PtrMemberAccess	upd -> pxlget		2589861	0					
ANR	2590106	Identifier	upd		2589861	0					
ANR	2590107	Identifier	pxlget		2589861	1					
ANR	2590108	Identifier	upd_pxlget24r		2589861	1					
ANR	2590109	ExpressionStatement	upd -> pxlptr += 2	7456:12:262774:262790	2589861	18	True				
ANR	2590110	AssignmentExpression	upd -> pxlptr += 2		2589861	0		+=			
ANR	2590111	PtrMemberAccess	upd -> pxlptr		2589861	0					
ANR	2590112	Identifier	upd		2589861	0					
ANR	2590113	Identifier	pxlptr		2589861	1					
ANR	2590114	PrimaryExpression	2		2589861	1					
ANR	2590115	BreakStatement	break ;	7457:12:262804:262809	2589861	19	True				
ANR	2590116	Label	case 32 :	7458:9:262820:262827	2589861	20	True				
ANR	2590117	ExpressionStatement	upd -> pxlget = upd_pxlget32r	7459:12:262841:262868	2589861	21	True				
ANR	2590118	AssignmentExpression	upd -> pxlget = upd_pxlget32r		2589861	0		=			
ANR	2590119	PtrMemberAccess	upd -> pxlget		2589861	0					
ANR	2590120	Identifier	upd		2589861	0					
ANR	2590121	Identifier	pxlget		2589861	1					
ANR	2590122	Identifier	upd_pxlget32r		2589861	1					
ANR	2590123	ExpressionStatement	upd -> pxlptr += 3	7460:12:262882:262898	2589861	22	True				
ANR	2590124	AssignmentExpression	upd -> pxlptr += 3		2589861	0		+=			
ANR	2590125	PtrMemberAccess	upd -> pxlptr		2589861	0					
ANR	2590126	Identifier	upd		2589861	0					
ANR	2590127	Identifier	pxlptr		2589861	1					
ANR	2590128	PrimaryExpression	3		2589861	1					
ANR	2590129	BreakStatement	break ;	7461:12:262912:262917	2589861	23	True				
ANR	2590130	Label	default :	7462:9:262928:262935	2589861	24	True				
ANR	2590131	Identifier	default		2589861	0					
ANR	2590132	ExpressionStatement	"errprintf ( upd -> memory , ""upd_pxlrev: unsupported depth (%d)\\n"" , upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ] )"	7464:11:262979:263097	2589861	25	True				
ANR	2590133	CallExpression	"errprintf ( upd -> memory , ""upd_pxlrev: unsupported depth (%d)\\n"" , upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ] )"		2589861	0					
ANR	2590134	Callee	errprintf		2589861	0					
ANR	2590135	Identifier	errprintf		2589861	0					
ANR	2590136	ArgumentList	upd -> memory		2589861	1					
ANR	2590137	Argument	upd -> memory		2589861	0					
ANR	2590138	PtrMemberAccess	upd -> memory		2589861	0					
ANR	2590139	Identifier	upd		2589861	0					
ANR	2590140	Identifier	memory		2589861	1					
ANR	2590141	Argument	"""upd_pxlrev: unsupported depth (%d)\\n"""		2589861	1					
ANR	2590142	PrimaryExpression	"""upd_pxlrev: unsupported depth (%d)\\n"""		2589861	0					
ANR	2590143	Argument	upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ]		2589861	2					
ANR	2590144	ArrayIndexing	upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ]		2589861	0					
ANR	2590145	MemberAccess	upd -> int_a [ IA_COLOR_INFO ] . data		2589861	0					
ANR	2590146	ArrayIndexing	upd -> int_a [ IA_COLOR_INFO ]		2589861	0					
ANR	2590147	PtrMemberAccess	upd -> int_a		2589861	0					
ANR	2590148	Identifier	upd		2589861	0					
ANR	2590149	Identifier	int_a		2589861	1					
ANR	2590150	Identifier	IA_COLOR_INFO		2589861	1					
ANR	2590151	Identifier	data		2589861	1					
ANR	2590152	PrimaryExpression	1		2589861	1					
ANR	2590153	ExpressionStatement	upd -> pxlget = upd_pxlgetnix	7467:11:263117:263144	2589861	26	True				
ANR	2590154	AssignmentExpression	upd -> pxlget = upd_pxlgetnix		2589861	0		=			
ANR	2590155	PtrMemberAccess	upd -> pxlget		2589861	0					
ANR	2590156	Identifier	upd		2589861	0					
ANR	2590157	Identifier	pxlget		2589861	1					
ANR	2590158	Identifier	upd_pxlgetnix		2589861	1					
ANR	2590159	BreakStatement	break ;	7468:11:263157:263162	2589861	27	True				
ANR	2590160	ReturnStatement	return ( uint32_t ) 0 ;	7471:3:263180:263199	2589861	2	True				
ANR	2590161	CastExpression	( uint32_t ) 0		2589861	0					
ANR	2590162	CastTarget	uint32_t		2589861	0					
ANR	2590163	PrimaryExpression	0		2589861	1					
ANR	2590164	ReturnType	static uint32_t		2589861	1					
ANR	2590165	Identifier	upd_pxlrev		2589861	2					
ANR	2590166	ParameterList	upd_p upd		2589861	3					
ANR	2590167	Parameter	upd_p upd	7413:11:261184:261192	2589861	0	True				
ANR	2590168	ParameterType	upd_p		2589861	0					
ANR	2590169	Identifier	upd		2589861	1					
ANR	2590170	CFGEntryNode	ENTRY		2589861		True				
ANR	2590171	CFGExitNode	EXIT		2589861		True				
ANR	2590172	Symbol	upd -> pxlptr		2589861						
ANR	2590173	Symbol	* upd -> int_a		2589861						
ANR	2590174	Symbol	upd -> gsscan		2589861						
ANR	2590175	Symbol	upd -> int_a [ IA_COLOR_INFO ] . data		2589861						
ANR	2590176	Symbol	upd_pxlgetnix		2589861						
ANR	2590177	Symbol	* upd		2589861						
ANR	2590178	Symbol	upd -> int_a		2589861						
ANR	2590179	Symbol	upd -> memory		2589861						
ANR	2590180	Symbol	* * * upd		2589861						
ANR	2590181	Symbol	upd		2589861						
ANR	2590182	Symbol	upd -> pxlget		2589861						
ANR	2590183	Symbol	upd_pxlget8r		2589861						
ANR	2590184	Symbol	* * IA_COLOR_INFO		2589861						
ANR	2590185	Symbol	upd -> gswidth		2589861						
ANR	2590186	Symbol	IA_COLOR_INFO		2589861						
ANR	2590187	Symbol	* IA_COLOR_INFO		2589861						
ANR	2590188	Symbol	* * upd -> int_a		2589861						
ANR	2590189	Symbol	* upd -> int_a [ IA_COLOR_INFO ] . data		2589861						
ANR	2590190	Symbol	upd_pxlget16r		2589861						
ANR	2590191	Symbol	width		2589861						
ANR	2590192	Symbol	upd_pxlget1r8		2589861						
ANR	2590193	Symbol	upd_pxlget1r7		2589861						
ANR	2590194	Symbol	upd_pxlget1r6		2589861						
ANR	2590195	Symbol	upd_pxlget1r5		2589861						
ANR	2590196	Symbol	upd_pxlget2r4		2589861						
ANR	2590197	Symbol	upd_pxlget4r2		2589861						
ANR	2590198	Symbol	upd_pxlget1r4		2589861						
ANR	2590199	Symbol	upd_pxlget2r3		2589861						
ANR	2590200	Symbol	upd_pxlget4r1		2589861						
ANR	2590201	Symbol	upd_pxlget32r		2589861						
ANR	2590202	Symbol	upd -> pwidth		2589861						
ANR	2590203	Symbol	* * upd		2589861						
ANR	2590204	Symbol	ofs		2589861						
ANR	2590205	Symbol	upd_pxlget1r3		2589861						
ANR	2590206	Symbol	upd_pxlget2r2		2589861						
ANR	2590207	Symbol	upd_pxlget1r2		2589861						
ANR	2590208	Symbol	upd_pxlget2r1		2589861						
ANR	2590209	Symbol	upd_pxlget1r1		2589861						
ANR	2590210	Symbol	upd_pxlget24r		2589861						
ANR	2590211	Function	upd_pxlget1r1	7476:0:263225:263363							
ANR	2590212	FunctionDef	upd_pxlget1r1 (upd_p upd)		2590211	0					
ANR	2590213	CompoundStatement		7478:0:263266:263363	2590211	0					
ANR	2590214	ExpressionStatement	upd -> pxlget = upd_pxlget1r8	7479:3:263271:263298	2590211	0	True				
ANR	2590215	AssignmentExpression	upd -> pxlget = upd_pxlget1r8		2590211	0		=			
ANR	2590216	PtrMemberAccess	upd -> pxlget		2590211	0					
ANR	2590217	Identifier	upd		2590211	0					
ANR	2590218	Identifier	pxlget		2590211	1					
ANR	2590219	Identifier	upd_pxlget1r8		2590211	1					
ANR	2590220	ReturnStatement	return * upd -> pxlptr -- & 0x80 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7480:3:263303:263361	2590211	1	True				
ANR	2590221	ConditionalExpression	* upd -> pxlptr -- & 0x80 ? ( uint32_t ) 1 : ( uint32_t ) 0		2590211	0					
ANR	2590222	Condition	* upd -> pxlptr -- & 0x80		2590211	0					
ANR	2590223	BitAndExpression	* upd -> pxlptr -- & 0x80		2590211	0		&			
ANR	2590224	UnaryOperationExpression	* upd -> pxlptr --		2590211	0					
ANR	2590225	UnaryOperator	*		2590211	0					
ANR	2590226	PostIncDecOperationExpression	upd -> pxlptr --		2590211	1					
ANR	2590227	PtrMemberAccess	upd -> pxlptr		2590211	0					
ANR	2590228	Identifier	upd		2590211	0					
ANR	2590229	Identifier	pxlptr		2590211	1					
ANR	2590230	IncDec	--		2590211	1					
ANR	2590231	PrimaryExpression	0x80		2590211	1					
ANR	2590232	CastExpression	( uint32_t ) 1		2590211	1					
ANR	2590233	CastTarget	uint32_t		2590211	0					
ANR	2590234	PrimaryExpression	1		2590211	1					
ANR	2590235	CastExpression	( uint32_t ) 0		2590211	2					
ANR	2590236	CastTarget	uint32_t		2590211	0					
ANR	2590237	PrimaryExpression	0		2590211	1					
ANR	2590238	ReturnType	static uint32_t		2590211	1					
ANR	2590239	Identifier	upd_pxlget1r1		2590211	2					
ANR	2590240	ParameterList	upd_p upd		2590211	3					
ANR	2590241	Parameter	upd_p upd	7477:14:263255:263263	2590211	0	True				
ANR	2590242	ParameterType	upd_p		2590211	0					
ANR	2590243	Identifier	upd		2590211	1					
ANR	2590244	CFGEntryNode	ENTRY		2590211		True				
ANR	2590245	CFGExitNode	EXIT		2590211		True				
ANR	2590246	Symbol	upd -> pxlptr		2590211						
ANR	2590247	Symbol	* upd		2590211						
ANR	2590248	Symbol	* upd -> pxlptr --		2590211						
ANR	2590249	Symbol	upd		2590211						
ANR	2590250	Symbol	upd_pxlget1r8		2590211						
ANR	2590251	Symbol	upd -> pxlget		2590211						
ANR	2590252	Function	upd_pxlget1r2	7483:0:263366:263504							
ANR	2590253	FunctionDef	upd_pxlget1r2 (upd_p upd)		2590252	0					
ANR	2590254	CompoundStatement		7485:0:263407:263504	2590252	0					
ANR	2590255	ExpressionStatement	upd -> pxlget = upd_pxlget1r1	7486:3:263412:263439	2590252	0	True				
ANR	2590256	AssignmentExpression	upd -> pxlget = upd_pxlget1r1		2590252	0		=			
ANR	2590257	PtrMemberAccess	upd -> pxlget		2590252	0					
ANR	2590258	Identifier	upd		2590252	0					
ANR	2590259	Identifier	pxlget		2590252	1					
ANR	2590260	Identifier	upd_pxlget1r1		2590252	1					
ANR	2590261	ReturnStatement	return * upd -> pxlptr & 0x40 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7487:3:263444:263502	2590252	1	True				
ANR	2590262	ConditionalExpression	* upd -> pxlptr & 0x40 ? ( uint32_t ) 1 : ( uint32_t ) 0		2590252	0					
ANR	2590263	Condition	* upd -> pxlptr & 0x40		2590252	0					
ANR	2590264	BitAndExpression	* upd -> pxlptr & 0x40		2590252	0		&			
ANR	2590265	UnaryOperationExpression	* upd -> pxlptr		2590252	0					
ANR	2590266	UnaryOperator	*		2590252	0					
ANR	2590267	PtrMemberAccess	upd -> pxlptr		2590252	1					
ANR	2590268	Identifier	upd		2590252	0					
ANR	2590269	Identifier	pxlptr		2590252	1					
ANR	2590270	PrimaryExpression	0x40		2590252	1					
ANR	2590271	CastExpression	( uint32_t ) 1		2590252	1					
ANR	2590272	CastTarget	uint32_t		2590252	0					
ANR	2590273	PrimaryExpression	1		2590252	1					
ANR	2590274	CastExpression	( uint32_t ) 0		2590252	2					
ANR	2590275	CastTarget	uint32_t		2590252	0					
ANR	2590276	PrimaryExpression	0		2590252	1					
ANR	2590277	ReturnType	static uint32_t		2590252	1					
ANR	2590278	Identifier	upd_pxlget1r2		2590252	2					
ANR	2590279	ParameterList	upd_p upd		2590252	3					
ANR	2590280	Parameter	upd_p upd	7484:14:263396:263404	2590252	0	True				
ANR	2590281	ParameterType	upd_p		2590252	0					
ANR	2590282	Identifier	upd		2590252	1					
ANR	2590283	CFGEntryNode	ENTRY		2590252		True				
ANR	2590284	CFGExitNode	EXIT		2590252		True				
ANR	2590285	Symbol	upd -> pxlptr		2590252						
ANR	2590286	Symbol	* upd		2590252						
ANR	2590287	Symbol	* upd -> pxlptr		2590252						
ANR	2590288	Symbol	upd		2590252						
ANR	2590289	Symbol	upd -> pxlget		2590252						
ANR	2590290	Symbol	* * upd		2590252						
ANR	2590291	Symbol	upd_pxlget1r1		2590252						
ANR	2590292	Function	upd_pxlget1r3	7490:0:263507:263645							
ANR	2590293	FunctionDef	upd_pxlget1r3 (upd_p upd)		2590292	0					
ANR	2590294	CompoundStatement		7492:0:263548:263645	2590292	0					
ANR	2590295	ExpressionStatement	upd -> pxlget = upd_pxlget1r2	7493:3:263553:263580	2590292	0	True				
ANR	2590296	AssignmentExpression	upd -> pxlget = upd_pxlget1r2		2590292	0		=			
ANR	2590297	PtrMemberAccess	upd -> pxlget		2590292	0					
ANR	2590298	Identifier	upd		2590292	0					
ANR	2590299	Identifier	pxlget		2590292	1					
ANR	2590300	Identifier	upd_pxlget1r2		2590292	1					
ANR	2590301	ReturnStatement	return * upd -> pxlptr & 0x20 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7494:3:263585:263643	2590292	1	True				
ANR	2590302	ConditionalExpression	* upd -> pxlptr & 0x20 ? ( uint32_t ) 1 : ( uint32_t ) 0		2590292	0					
ANR	2590303	Condition	* upd -> pxlptr & 0x20		2590292	0					
ANR	2590304	BitAndExpression	* upd -> pxlptr & 0x20		2590292	0		&			
ANR	2590305	UnaryOperationExpression	* upd -> pxlptr		2590292	0					
ANR	2590306	UnaryOperator	*		2590292	0					
ANR	2590307	PtrMemberAccess	upd -> pxlptr		2590292	1					
ANR	2590308	Identifier	upd		2590292	0					
ANR	2590309	Identifier	pxlptr		2590292	1					
ANR	2590310	PrimaryExpression	0x20		2590292	1					
ANR	2590311	CastExpression	( uint32_t ) 1		2590292	1					
ANR	2590312	CastTarget	uint32_t		2590292	0					
ANR	2590313	PrimaryExpression	1		2590292	1					
ANR	2590314	CastExpression	( uint32_t ) 0		2590292	2					
ANR	2590315	CastTarget	uint32_t		2590292	0					
ANR	2590316	PrimaryExpression	0		2590292	1					
ANR	2590317	ReturnType	static uint32_t		2590292	1					
ANR	2590318	Identifier	upd_pxlget1r3		2590292	2					
ANR	2590319	ParameterList	upd_p upd		2590292	3					
ANR	2590320	Parameter	upd_p upd	7491:14:263537:263545	2590292	0	True				
ANR	2590321	ParameterType	upd_p		2590292	0					
ANR	2590322	Identifier	upd		2590292	1					
ANR	2590323	CFGEntryNode	ENTRY		2590292		True				
ANR	2590324	CFGExitNode	EXIT		2590292		True				
ANR	2590325	Symbol	upd -> pxlptr		2590292						
ANR	2590326	Symbol	* upd		2590292						
ANR	2590327	Symbol	* upd -> pxlptr		2590292						
ANR	2590328	Symbol	upd		2590292						
ANR	2590329	Symbol	upd -> pxlget		2590292						
ANR	2590330	Symbol	* * upd		2590292						
ANR	2590331	Symbol	upd_pxlget1r2		2590292						
ANR	2590332	Function	upd_pxlget1r4	7497:0:263648:263786							
ANR	2590333	FunctionDef	upd_pxlget1r4 (upd_p upd)		2590332	0					
ANR	2590334	CompoundStatement		7499:0:263689:263786	2590332	0					
ANR	2590335	ExpressionStatement	upd -> pxlget = upd_pxlget1r3	7500:3:263694:263721	2590332	0	True				
ANR	2590336	AssignmentExpression	upd -> pxlget = upd_pxlget1r3		2590332	0		=			
ANR	2590337	PtrMemberAccess	upd -> pxlget		2590332	0					
ANR	2590338	Identifier	upd		2590332	0					
ANR	2590339	Identifier	pxlget		2590332	1					
ANR	2590340	Identifier	upd_pxlget1r3		2590332	1					
ANR	2590341	ReturnStatement	return * upd -> pxlptr & 0x10 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7501:3:263726:263784	2590332	1	True				
ANR	2590342	ConditionalExpression	* upd -> pxlptr & 0x10 ? ( uint32_t ) 1 : ( uint32_t ) 0		2590332	0					
ANR	2590343	Condition	* upd -> pxlptr & 0x10		2590332	0					
ANR	2590344	BitAndExpression	* upd -> pxlptr & 0x10		2590332	0		&			
ANR	2590345	UnaryOperationExpression	* upd -> pxlptr		2590332	0					
ANR	2590346	UnaryOperator	*		2590332	0					
ANR	2590347	PtrMemberAccess	upd -> pxlptr		2590332	1					
ANR	2590348	Identifier	upd		2590332	0					
ANR	2590349	Identifier	pxlptr		2590332	1					
ANR	2590350	PrimaryExpression	0x10		2590332	1					
ANR	2590351	CastExpression	( uint32_t ) 1		2590332	1					
ANR	2590352	CastTarget	uint32_t		2590332	0					
ANR	2590353	PrimaryExpression	1		2590332	1					
ANR	2590354	CastExpression	( uint32_t ) 0		2590332	2					
ANR	2590355	CastTarget	uint32_t		2590332	0					
ANR	2590356	PrimaryExpression	0		2590332	1					
ANR	2590357	ReturnType	static uint32_t		2590332	1					
ANR	2590358	Identifier	upd_pxlget1r4		2590332	2					
ANR	2590359	ParameterList	upd_p upd		2590332	3					
ANR	2590360	Parameter	upd_p upd	7498:14:263678:263686	2590332	0	True				
ANR	2590361	ParameterType	upd_p		2590332	0					
ANR	2590362	Identifier	upd		2590332	1					
ANR	2590363	CFGEntryNode	ENTRY		2590332		True				
ANR	2590364	CFGExitNode	EXIT		2590332		True				
ANR	2590365	Symbol	upd -> pxlptr		2590332						
ANR	2590366	Symbol	* upd		2590332						
ANR	2590367	Symbol	* upd -> pxlptr		2590332						
ANR	2590368	Symbol	upd		2590332						
ANR	2590369	Symbol	upd -> pxlget		2590332						
ANR	2590370	Symbol	upd_pxlget1r3		2590332						
ANR	2590371	Symbol	* * upd		2590332						
ANR	2590372	Function	upd_pxlget1r5	7504:0:263789:263927							
ANR	2590373	FunctionDef	upd_pxlget1r5 (upd_p upd)		2590372	0					
ANR	2590374	CompoundStatement		7506:0:263830:263927	2590372	0					
ANR	2590375	ExpressionStatement	upd -> pxlget = upd_pxlget1r4	7507:3:263835:263862	2590372	0	True				
ANR	2590376	AssignmentExpression	upd -> pxlget = upd_pxlget1r4		2590372	0		=			
ANR	2590377	PtrMemberAccess	upd -> pxlget		2590372	0					
ANR	2590378	Identifier	upd		2590372	0					
ANR	2590379	Identifier	pxlget		2590372	1					
ANR	2590380	Identifier	upd_pxlget1r4		2590372	1					
ANR	2590381	ReturnStatement	return * upd -> pxlptr & 0x08 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7508:3:263867:263925	2590372	1	True				
ANR	2590382	ConditionalExpression	* upd -> pxlptr & 0x08 ? ( uint32_t ) 1 : ( uint32_t ) 0		2590372	0					
ANR	2590383	Condition	* upd -> pxlptr & 0x08		2590372	0					
ANR	2590384	BitAndExpression	* upd -> pxlptr & 0x08		2590372	0		&			
ANR	2590385	UnaryOperationExpression	* upd -> pxlptr		2590372	0					
ANR	2590386	UnaryOperator	*		2590372	0					
ANR	2590387	PtrMemberAccess	upd -> pxlptr		2590372	1					
ANR	2590388	Identifier	upd		2590372	0					
ANR	2590389	Identifier	pxlptr		2590372	1					
ANR	2590390	PrimaryExpression	0x08		2590372	1					
ANR	2590391	CastExpression	( uint32_t ) 1		2590372	1					
ANR	2590392	CastTarget	uint32_t		2590372	0					
ANR	2590393	PrimaryExpression	1		2590372	1					
ANR	2590394	CastExpression	( uint32_t ) 0		2590372	2					
ANR	2590395	CastTarget	uint32_t		2590372	0					
ANR	2590396	PrimaryExpression	0		2590372	1					
ANR	2590397	ReturnType	static uint32_t		2590372	1					
ANR	2590398	Identifier	upd_pxlget1r5		2590372	2					
ANR	2590399	ParameterList	upd_p upd		2590372	3					
ANR	2590400	Parameter	upd_p upd	7505:14:263819:263827	2590372	0	True				
ANR	2590401	ParameterType	upd_p		2590372	0					
ANR	2590402	Identifier	upd		2590372	1					
ANR	2590403	CFGEntryNode	ENTRY		2590372		True				
ANR	2590404	CFGExitNode	EXIT		2590372		True				
ANR	2590405	Symbol	upd -> pxlptr		2590372						
ANR	2590406	Symbol	* upd		2590372						
ANR	2590407	Symbol	* upd -> pxlptr		2590372						
ANR	2590408	Symbol	upd		2590372						
ANR	2590409	Symbol	upd -> pxlget		2590372						
ANR	2590410	Symbol	upd_pxlget1r4		2590372						
ANR	2590411	Symbol	* * upd		2590372						
ANR	2590412	Function	upd_pxlget1r6	7511:0:263930:264068							
ANR	2590413	FunctionDef	upd_pxlget1r6 (upd_p upd)		2590412	0					
ANR	2590414	CompoundStatement		7513:0:263971:264068	2590412	0					
ANR	2590415	ExpressionStatement	upd -> pxlget = upd_pxlget1r5	7514:3:263976:264003	2590412	0	True				
ANR	2590416	AssignmentExpression	upd -> pxlget = upd_pxlget1r5		2590412	0		=			
ANR	2590417	PtrMemberAccess	upd -> pxlget		2590412	0					
ANR	2590418	Identifier	upd		2590412	0					
ANR	2590419	Identifier	pxlget		2590412	1					
ANR	2590420	Identifier	upd_pxlget1r5		2590412	1					
ANR	2590421	ReturnStatement	return * upd -> pxlptr & 0x04 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7515:3:264008:264066	2590412	1	True				
ANR	2590422	ConditionalExpression	* upd -> pxlptr & 0x04 ? ( uint32_t ) 1 : ( uint32_t ) 0		2590412	0					
ANR	2590423	Condition	* upd -> pxlptr & 0x04		2590412	0					
ANR	2590424	BitAndExpression	* upd -> pxlptr & 0x04		2590412	0		&			
ANR	2590425	UnaryOperationExpression	* upd -> pxlptr		2590412	0					
ANR	2590426	UnaryOperator	*		2590412	0					
ANR	2590427	PtrMemberAccess	upd -> pxlptr		2590412	1					
ANR	2590428	Identifier	upd		2590412	0					
ANR	2590429	Identifier	pxlptr		2590412	1					
ANR	2590430	PrimaryExpression	0x04		2590412	1					
ANR	2590431	CastExpression	( uint32_t ) 1		2590412	1					
ANR	2590432	CastTarget	uint32_t		2590412	0					
ANR	2590433	PrimaryExpression	1		2590412	1					
ANR	2590434	CastExpression	( uint32_t ) 0		2590412	2					
ANR	2590435	CastTarget	uint32_t		2590412	0					
ANR	2590436	PrimaryExpression	0		2590412	1					
ANR	2590437	ReturnType	static uint32_t		2590412	1					
ANR	2590438	Identifier	upd_pxlget1r6		2590412	2					
ANR	2590439	ParameterList	upd_p upd		2590412	3					
ANR	2590440	Parameter	upd_p upd	7512:14:263960:263968	2590412	0	True				
ANR	2590441	ParameterType	upd_p		2590412	0					
ANR	2590442	Identifier	upd		2590412	1					
ANR	2590443	CFGEntryNode	ENTRY		2590412		True				
ANR	2590444	CFGExitNode	EXIT		2590412		True				
ANR	2590445	Symbol	upd -> pxlptr		2590412						
ANR	2590446	Symbol	* upd		2590412						
ANR	2590447	Symbol	* upd -> pxlptr		2590412						
ANR	2590448	Symbol	upd		2590412						
ANR	2590449	Symbol	upd -> pxlget		2590412						
ANR	2590450	Symbol	upd_pxlget1r5		2590412						
ANR	2590451	Symbol	* * upd		2590412						
ANR	2590452	Function	upd_pxlget1r7	7518:0:264071:264209							
ANR	2590453	FunctionDef	upd_pxlget1r7 (upd_p upd)		2590452	0					
ANR	2590454	CompoundStatement		7520:0:264112:264209	2590452	0					
ANR	2590455	ExpressionStatement	upd -> pxlget = upd_pxlget1r6	7521:3:264117:264144	2590452	0	True				
ANR	2590456	AssignmentExpression	upd -> pxlget = upd_pxlget1r6		2590452	0		=			
ANR	2590457	PtrMemberAccess	upd -> pxlget		2590452	0					
ANR	2590458	Identifier	upd		2590452	0					
ANR	2590459	Identifier	pxlget		2590452	1					
ANR	2590460	Identifier	upd_pxlget1r6		2590452	1					
ANR	2590461	ReturnStatement	return * upd -> pxlptr & 0x02 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7522:3:264149:264207	2590452	1	True				
ANR	2590462	ConditionalExpression	* upd -> pxlptr & 0x02 ? ( uint32_t ) 1 : ( uint32_t ) 0		2590452	0					
ANR	2590463	Condition	* upd -> pxlptr & 0x02		2590452	0					
ANR	2590464	BitAndExpression	* upd -> pxlptr & 0x02		2590452	0		&			
ANR	2590465	UnaryOperationExpression	* upd -> pxlptr		2590452	0					
ANR	2590466	UnaryOperator	*		2590452	0					
ANR	2590467	PtrMemberAccess	upd -> pxlptr		2590452	1					
ANR	2590468	Identifier	upd		2590452	0					
ANR	2590469	Identifier	pxlptr		2590452	1					
ANR	2590470	PrimaryExpression	0x02		2590452	1					
ANR	2590471	CastExpression	( uint32_t ) 1		2590452	1					
ANR	2590472	CastTarget	uint32_t		2590452	0					
ANR	2590473	PrimaryExpression	1		2590452	1					
ANR	2590474	CastExpression	( uint32_t ) 0		2590452	2					
ANR	2590475	CastTarget	uint32_t		2590452	0					
ANR	2590476	PrimaryExpression	0		2590452	1					
ANR	2590477	ReturnType	static uint32_t		2590452	1					
ANR	2590478	Identifier	upd_pxlget1r7		2590452	2					
ANR	2590479	ParameterList	upd_p upd		2590452	3					
ANR	2590480	Parameter	upd_p upd	7519:14:264101:264109	2590452	0	True				
ANR	2590481	ParameterType	upd_p		2590452	0					
ANR	2590482	Identifier	upd		2590452	1					
ANR	2590483	CFGEntryNode	ENTRY		2590452		True				
ANR	2590484	CFGExitNode	EXIT		2590452		True				
ANR	2590485	Symbol	upd -> pxlptr		2590452						
ANR	2590486	Symbol	* upd		2590452						
ANR	2590487	Symbol	* upd -> pxlptr		2590452						
ANR	2590488	Symbol	upd		2590452						
ANR	2590489	Symbol	upd -> pxlget		2590452						
ANR	2590490	Symbol	upd_pxlget1r6		2590452						
ANR	2590491	Symbol	* * upd		2590452						
ANR	2590492	Function	upd_pxlget1r8	7525:0:264212:264350							
ANR	2590493	FunctionDef	upd_pxlget1r8 (upd_p upd)		2590492	0					
ANR	2590494	CompoundStatement		7527:0:264253:264350	2590492	0					
ANR	2590495	ExpressionStatement	upd -> pxlget = upd_pxlget1r7	7528:3:264258:264285	2590492	0	True				
ANR	2590496	AssignmentExpression	upd -> pxlget = upd_pxlget1r7		2590492	0		=			
ANR	2590497	PtrMemberAccess	upd -> pxlget		2590492	0					
ANR	2590498	Identifier	upd		2590492	0					
ANR	2590499	Identifier	pxlget		2590492	1					
ANR	2590500	Identifier	upd_pxlget1r7		2590492	1					
ANR	2590501	ReturnStatement	return * upd -> pxlptr & 0x01 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7529:3:264290:264348	2590492	1	True				
ANR	2590502	ConditionalExpression	* upd -> pxlptr & 0x01 ? ( uint32_t ) 1 : ( uint32_t ) 0		2590492	0					
ANR	2590503	Condition	* upd -> pxlptr & 0x01		2590492	0					
ANR	2590504	BitAndExpression	* upd -> pxlptr & 0x01		2590492	0		&			
ANR	2590505	UnaryOperationExpression	* upd -> pxlptr		2590492	0					
ANR	2590506	UnaryOperator	*		2590492	0					
ANR	2590507	PtrMemberAccess	upd -> pxlptr		2590492	1					
ANR	2590508	Identifier	upd		2590492	0					
ANR	2590509	Identifier	pxlptr		2590492	1					
ANR	2590510	PrimaryExpression	0x01		2590492	1					
ANR	2590511	CastExpression	( uint32_t ) 1		2590492	1					
ANR	2590512	CastTarget	uint32_t		2590492	0					
ANR	2590513	PrimaryExpression	1		2590492	1					
ANR	2590514	CastExpression	( uint32_t ) 0		2590492	2					
ANR	2590515	CastTarget	uint32_t		2590492	0					
ANR	2590516	PrimaryExpression	0		2590492	1					
ANR	2590517	ReturnType	static uint32_t		2590492	1					
ANR	2590518	Identifier	upd_pxlget1r8		2590492	2					
ANR	2590519	ParameterList	upd_p upd		2590492	3					
ANR	2590520	Parameter	upd_p upd	7526:14:264242:264250	2590492	0	True				
ANR	2590521	ParameterType	upd_p		2590492	0					
ANR	2590522	Identifier	upd		2590492	1					
ANR	2590523	CFGEntryNode	ENTRY		2590492		True				
ANR	2590524	CFGExitNode	EXIT		2590492		True				
ANR	2590525	Symbol	upd -> pxlptr		2590492						
ANR	2590526	Symbol	* upd		2590492						
ANR	2590527	Symbol	* upd -> pxlptr		2590492						
ANR	2590528	Symbol	upd		2590492						
ANR	2590529	Symbol	upd -> pxlget		2590492						
ANR	2590530	Symbol	upd_pxlget1r7		2590492						
ANR	2590531	Symbol	* * upd		2590492						
ANR	2590532	Function	upd_pxlget2r1	7534:0:264374:264513							
ANR	2590533	FunctionDef	upd_pxlget2r1 (upd_p upd)		2590532	0					
ANR	2590534	CompoundStatement		7536:0:264415:264513	2590532	0					
ANR	2590535	ExpressionStatement	upd -> pxlget = upd_pxlget2r4	7537:3:264420:264447	2590532	0	True				
ANR	2590536	AssignmentExpression	upd -> pxlget = upd_pxlget2r4		2590532	0		=			
ANR	2590537	PtrMemberAccess	upd -> pxlget		2590532	0					
ANR	2590538	Identifier	upd		2590532	0					
ANR	2590539	Identifier	pxlget		2590532	1					
ANR	2590540	Identifier	upd_pxlget2r4		2590532	1					
ANR	2590541	ReturnStatement	return ( ( uint32_t ) ( * upd -> pxlptr -- ) & ( uint32_t ) 0xC0 ) >> 6 ;	7538:3:264452:264511	2590532	1	True				
ANR	2590542	ShiftExpression	( ( uint32_t ) ( * upd -> pxlptr -- ) & ( uint32_t ) 0xC0 ) >> 6		2590532	0		>>			
ANR	2590543	BitAndExpression	( uint32_t ) ( * upd -> pxlptr -- ) & ( uint32_t ) 0xC0		2590532	0		&			
ANR	2590544	CastExpression	( uint32_t ) ( * upd -> pxlptr -- )		2590532	0					
ANR	2590545	CastTarget	uint32_t		2590532	0					
ANR	2590546	UnaryOperationExpression	* upd -> pxlptr --		2590532	1					
ANR	2590547	UnaryOperator	*		2590532	0					
ANR	2590548	PostIncDecOperationExpression	upd -> pxlptr --		2590532	1					
ANR	2590549	PtrMemberAccess	upd -> pxlptr		2590532	0					
ANR	2590550	Identifier	upd		2590532	0					
ANR	2590551	Identifier	pxlptr		2590532	1					
ANR	2590552	IncDec	--		2590532	1					
ANR	2590553	CastExpression	( uint32_t ) 0xC0		2590532	1					
ANR	2590554	CastTarget	uint32_t		2590532	0					
ANR	2590555	PrimaryExpression	0xC0		2590532	1					
ANR	2590556	PrimaryExpression	6		2590532	1					
ANR	2590557	ReturnType	static uint32_t		2590532	1					
ANR	2590558	Identifier	upd_pxlget2r1		2590532	2					
ANR	2590559	ParameterList	upd_p upd		2590532	3					
ANR	2590560	Parameter	upd_p upd	7535:14:264404:264412	2590532	0	True				
ANR	2590561	ParameterType	upd_p		2590532	0					
ANR	2590562	Identifier	upd		2590532	1					
ANR	2590563	CFGEntryNode	ENTRY		2590532		True				
ANR	2590564	CFGExitNode	EXIT		2590532		True				
ANR	2590565	Symbol	upd -> pxlptr		2590532						
ANR	2590566	Symbol	* upd		2590532						
ANR	2590567	Symbol	* upd -> pxlptr --		2590532						
ANR	2590568	Symbol	upd		2590532						
ANR	2590569	Symbol	upd -> pxlget		2590532						
ANR	2590570	Symbol	upd_pxlget2r4		2590532						
ANR	2590571	Function	upd_pxlget2r2	7541:0:264516:264655							
ANR	2590572	FunctionDef	upd_pxlget2r2 (upd_p upd)		2590571	0					
ANR	2590573	CompoundStatement		7543:0:264557:264655	2590571	0					
ANR	2590574	ExpressionStatement	upd -> pxlget = upd_pxlget2r1	7544:3:264562:264589	2590571	0	True				
ANR	2590575	AssignmentExpression	upd -> pxlget = upd_pxlget2r1		2590571	0		=			
ANR	2590576	PtrMemberAccess	upd -> pxlget		2590571	0					
ANR	2590577	Identifier	upd		2590571	0					
ANR	2590578	Identifier	pxlget		2590571	1					
ANR	2590579	Identifier	upd_pxlget2r1		2590571	1					
ANR	2590580	ReturnStatement	return ( ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x30 ) >> 4 ;	7545:3:264594:264653	2590571	1	True				
ANR	2590581	ShiftExpression	( ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x30 ) >> 4		2590571	0		>>			
ANR	2590582	BitAndExpression	( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x30		2590571	0		&			
ANR	2590583	CastExpression	( uint32_t ) ( * upd -> pxlptr )		2590571	0					
ANR	2590584	CastTarget	uint32_t		2590571	0					
ANR	2590585	UnaryOperationExpression	* upd -> pxlptr		2590571	1					
ANR	2590586	UnaryOperator	*		2590571	0					
ANR	2590587	PtrMemberAccess	upd -> pxlptr		2590571	1					
ANR	2590588	Identifier	upd		2590571	0					
ANR	2590589	Identifier	pxlptr		2590571	1					
ANR	2590590	CastExpression	( uint32_t ) 0x30		2590571	1					
ANR	2590591	CastTarget	uint32_t		2590571	0					
ANR	2590592	PrimaryExpression	0x30		2590571	1					
ANR	2590593	PrimaryExpression	4		2590571	1					
ANR	2590594	ReturnType	static uint32_t		2590571	1					
ANR	2590595	Identifier	upd_pxlget2r2		2590571	2					
ANR	2590596	ParameterList	upd_p upd		2590571	3					
ANR	2590597	Parameter	upd_p upd	7542:14:264546:264554	2590571	0	True				
ANR	2590598	ParameterType	upd_p		2590571	0					
ANR	2590599	Identifier	upd		2590571	1					
ANR	2590600	CFGEntryNode	ENTRY		2590571		True				
ANR	2590601	CFGExitNode	EXIT		2590571		True				
ANR	2590602	Symbol	upd -> pxlptr		2590571						
ANR	2590603	Symbol	* upd		2590571						
ANR	2590604	Symbol	* upd -> pxlptr		2590571						
ANR	2590605	Symbol	upd		2590571						
ANR	2590606	Symbol	upd -> pxlget		2590571						
ANR	2590607	Symbol	* * upd		2590571						
ANR	2590608	Symbol	upd_pxlget2r1		2590571						
ANR	2590609	Function	upd_pxlget2r3	7548:0:264658:264797							
ANR	2590610	FunctionDef	upd_pxlget2r3 (upd_p upd)		2590609	0					
ANR	2590611	CompoundStatement		7550:0:264699:264797	2590609	0					
ANR	2590612	ExpressionStatement	upd -> pxlget = upd_pxlget2r2	7551:3:264704:264731	2590609	0	True				
ANR	2590613	AssignmentExpression	upd -> pxlget = upd_pxlget2r2		2590609	0		=			
ANR	2590614	PtrMemberAccess	upd -> pxlget		2590609	0					
ANR	2590615	Identifier	upd		2590609	0					
ANR	2590616	Identifier	pxlget		2590609	1					
ANR	2590617	Identifier	upd_pxlget2r2		2590609	1					
ANR	2590618	ReturnStatement	return ( ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x0C ) >> 2 ;	7552:3:264736:264795	2590609	1	True				
ANR	2590619	ShiftExpression	( ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x0C ) >> 2		2590609	0		>>			
ANR	2590620	BitAndExpression	( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x0C		2590609	0		&			
ANR	2590621	CastExpression	( uint32_t ) ( * upd -> pxlptr )		2590609	0					
ANR	2590622	CastTarget	uint32_t		2590609	0					
ANR	2590623	UnaryOperationExpression	* upd -> pxlptr		2590609	1					
ANR	2590624	UnaryOperator	*		2590609	0					
ANR	2590625	PtrMemberAccess	upd -> pxlptr		2590609	1					
ANR	2590626	Identifier	upd		2590609	0					
ANR	2590627	Identifier	pxlptr		2590609	1					
ANR	2590628	CastExpression	( uint32_t ) 0x0C		2590609	1					
ANR	2590629	CastTarget	uint32_t		2590609	0					
ANR	2590630	PrimaryExpression	0x0C		2590609	1					
ANR	2590631	PrimaryExpression	2		2590609	1					
ANR	2590632	ReturnType	static uint32_t		2590609	1					
ANR	2590633	Identifier	upd_pxlget2r3		2590609	2					
ANR	2590634	ParameterList	upd_p upd		2590609	3					
ANR	2590635	Parameter	upd_p upd	7549:14:264688:264696	2590609	0	True				
ANR	2590636	ParameterType	upd_p		2590609	0					
ANR	2590637	Identifier	upd		2590609	1					
ANR	2590638	CFGEntryNode	ENTRY		2590609		True				
ANR	2590639	CFGExitNode	EXIT		2590609		True				
ANR	2590640	Symbol	upd -> pxlptr		2590609						
ANR	2590641	Symbol	* upd		2590609						
ANR	2590642	Symbol	* upd -> pxlptr		2590609						
ANR	2590643	Symbol	upd		2590609						
ANR	2590644	Symbol	upd -> pxlget		2590609						
ANR	2590645	Symbol	upd_pxlget2r2		2590609						
ANR	2590646	Symbol	* * upd		2590609						
ANR	2590647	Function	upd_pxlget2r4	7555:0:264800:264933							
ANR	2590648	FunctionDef	upd_pxlget2r4 (upd_p upd)		2590647	0					
ANR	2590649	CompoundStatement		7557:0:264841:264933	2590647	0					
ANR	2590650	ExpressionStatement	upd -> pxlget = upd_pxlget2r3	7558:3:264846:264873	2590647	0	True				
ANR	2590651	AssignmentExpression	upd -> pxlget = upd_pxlget2r3		2590647	0		=			
ANR	2590652	PtrMemberAccess	upd -> pxlget		2590647	0					
ANR	2590653	Identifier	upd		2590647	0					
ANR	2590654	Identifier	pxlget		2590647	1					
ANR	2590655	Identifier	upd_pxlget2r3		2590647	1					
ANR	2590656	ReturnStatement	return ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x03 ;	7559:3:264878:264931	2590647	1	True				
ANR	2590657	BitAndExpression	( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x03		2590647	0		&			
ANR	2590658	CastExpression	( uint32_t ) ( * upd -> pxlptr )		2590647	0					
ANR	2590659	CastTarget	uint32_t		2590647	0					
ANR	2590660	UnaryOperationExpression	* upd -> pxlptr		2590647	1					
ANR	2590661	UnaryOperator	*		2590647	0					
ANR	2590662	PtrMemberAccess	upd -> pxlptr		2590647	1					
ANR	2590663	Identifier	upd		2590647	0					
ANR	2590664	Identifier	pxlptr		2590647	1					
ANR	2590665	CastExpression	( uint32_t ) 0x03		2590647	1					
ANR	2590666	CastTarget	uint32_t		2590647	0					
ANR	2590667	PrimaryExpression	0x03		2590647	1					
ANR	2590668	ReturnType	static uint32_t		2590647	1					
ANR	2590669	Identifier	upd_pxlget2r4		2590647	2					
ANR	2590670	ParameterList	upd_p upd		2590647	3					
ANR	2590671	Parameter	upd_p upd	7556:14:264830:264838	2590647	0	True				
ANR	2590672	ParameterType	upd_p		2590647	0					
ANR	2590673	Identifier	upd		2590647	1					
ANR	2590674	CFGEntryNode	ENTRY		2590647		True				
ANR	2590675	CFGExitNode	EXIT		2590647		True				
ANR	2590676	Symbol	upd -> pxlptr		2590647						
ANR	2590677	Symbol	* upd		2590647						
ANR	2590678	Symbol	* upd -> pxlptr		2590647						
ANR	2590679	Symbol	upd		2590647						
ANR	2590680	Symbol	upd -> pxlget		2590647						
ANR	2590681	Symbol	upd_pxlget2r3		2590647						
ANR	2590682	Symbol	* * upd		2590647						
ANR	2590683	Function	upd_pxlget4r1	7564:0:264957:265096							
ANR	2590684	FunctionDef	upd_pxlget4r1 (upd_p upd)		2590683	0					
ANR	2590685	CompoundStatement		7566:0:264998:265096	2590683	0					
ANR	2590686	ExpressionStatement	upd -> pxlget = upd_pxlget4r2	7567:3:265003:265030	2590683	0	True				
ANR	2590687	AssignmentExpression	upd -> pxlget = upd_pxlget4r2		2590683	0		=			
ANR	2590688	PtrMemberAccess	upd -> pxlget		2590683	0					
ANR	2590689	Identifier	upd		2590683	0					
ANR	2590690	Identifier	pxlget		2590683	1					
ANR	2590691	Identifier	upd_pxlget4r2		2590683	1					
ANR	2590692	ReturnStatement	return ( ( uint32_t ) ( * upd -> pxlptr -- ) & ( uint32_t ) 0xF0 ) >> 4 ;	7568:3:265035:265094	2590683	1	True				
ANR	2590693	ShiftExpression	( ( uint32_t ) ( * upd -> pxlptr -- ) & ( uint32_t ) 0xF0 ) >> 4		2590683	0		>>			
ANR	2590694	BitAndExpression	( uint32_t ) ( * upd -> pxlptr -- ) & ( uint32_t ) 0xF0		2590683	0		&			
ANR	2590695	CastExpression	( uint32_t ) ( * upd -> pxlptr -- )		2590683	0					
ANR	2590696	CastTarget	uint32_t		2590683	0					
ANR	2590697	UnaryOperationExpression	* upd -> pxlptr --		2590683	1					
ANR	2590698	UnaryOperator	*		2590683	0					
ANR	2590699	PostIncDecOperationExpression	upd -> pxlptr --		2590683	1					
ANR	2590700	PtrMemberAccess	upd -> pxlptr		2590683	0					
ANR	2590701	Identifier	upd		2590683	0					
ANR	2590702	Identifier	pxlptr		2590683	1					
ANR	2590703	IncDec	--		2590683	1					
ANR	2590704	CastExpression	( uint32_t ) 0xF0		2590683	1					
ANR	2590705	CastTarget	uint32_t		2590683	0					
ANR	2590706	PrimaryExpression	0xF0		2590683	1					
ANR	2590707	PrimaryExpression	4		2590683	1					
ANR	2590708	ReturnType	static uint32_t		2590683	1					
ANR	2590709	Identifier	upd_pxlget4r1		2590683	2					
ANR	2590710	ParameterList	upd_p upd		2590683	3					
ANR	2590711	Parameter	upd_p upd	7565:14:264987:264995	2590683	0	True				
ANR	2590712	ParameterType	upd_p		2590683	0					
ANR	2590713	Identifier	upd		2590683	1					
ANR	2590714	CFGEntryNode	ENTRY		2590683		True				
ANR	2590715	CFGExitNode	EXIT		2590683		True				
ANR	2590716	Symbol	upd -> pxlptr		2590683						
ANR	2590717	Symbol	* upd		2590683						
ANR	2590718	Symbol	* upd -> pxlptr --		2590683						
ANR	2590719	Symbol	upd		2590683						
ANR	2590720	Symbol	upd -> pxlget		2590683						
ANR	2590721	Symbol	upd_pxlget4r2		2590683						
ANR	2590722	Function	upd_pxlget4r2	7571:0:265099:265232							
ANR	2590723	FunctionDef	upd_pxlget4r2 (upd_p upd)		2590722	0					
ANR	2590724	CompoundStatement		7573:0:265140:265232	2590722	0					
ANR	2590725	ExpressionStatement	upd -> pxlget = upd_pxlget4r1	7574:3:265145:265172	2590722	0	True				
ANR	2590726	AssignmentExpression	upd -> pxlget = upd_pxlget4r1		2590722	0		=			
ANR	2590727	PtrMemberAccess	upd -> pxlget		2590722	0					
ANR	2590728	Identifier	upd		2590722	0					
ANR	2590729	Identifier	pxlget		2590722	1					
ANR	2590730	Identifier	upd_pxlget4r1		2590722	1					
ANR	2590731	ReturnStatement	return ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x0F ;	7575:3:265177:265230	2590722	1	True				
ANR	2590732	BitAndExpression	( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x0F		2590722	0		&			
ANR	2590733	CastExpression	( uint32_t ) ( * upd -> pxlptr )		2590722	0					
ANR	2590734	CastTarget	uint32_t		2590722	0					
ANR	2590735	UnaryOperationExpression	* upd -> pxlptr		2590722	1					
ANR	2590736	UnaryOperator	*		2590722	0					
ANR	2590737	PtrMemberAccess	upd -> pxlptr		2590722	1					
ANR	2590738	Identifier	upd		2590722	0					
ANR	2590739	Identifier	pxlptr		2590722	1					
ANR	2590740	CastExpression	( uint32_t ) 0x0F		2590722	1					
ANR	2590741	CastTarget	uint32_t		2590722	0					
ANR	2590742	PrimaryExpression	0x0F		2590722	1					
ANR	2590743	ReturnType	static uint32_t		2590722	1					
ANR	2590744	Identifier	upd_pxlget4r2		2590722	2					
ANR	2590745	ParameterList	upd_p upd		2590722	3					
ANR	2590746	Parameter	upd_p upd	7572:14:265129:265137	2590722	0	True				
ANR	2590747	ParameterType	upd_p		2590722	0					
ANR	2590748	Identifier	upd		2590722	1					
ANR	2590749	CFGEntryNode	ENTRY		2590722		True				
ANR	2590750	CFGExitNode	EXIT		2590722		True				
ANR	2590751	Symbol	upd -> pxlptr		2590722						
ANR	2590752	Symbol	* upd		2590722						
ANR	2590753	Symbol	* upd -> pxlptr		2590722						
ANR	2590754	Symbol	upd		2590722						
ANR	2590755	Symbol	upd -> pxlget		2590722						
ANR	2590756	Symbol	upd_pxlget4r1		2590722						
ANR	2590757	Symbol	* * upd		2590722						
ANR	2590758	Function	upd_pxlget8r	7579:0:265255:265336							
ANR	2590759	FunctionDef	upd_pxlget8r (upd_p upd)		2590758	0					
ANR	2590760	CompoundStatement		7581:0:265295:265336	2590758	0					
ANR	2590761	ReturnStatement	return ( uint32_t ) ( * upd -> pxlptr -- ) ;	7582:3:265300:265334	2590758	0	True				
ANR	2590762	CastExpression	( uint32_t ) ( * upd -> pxlptr -- )		2590758	0					
ANR	2590763	CastTarget	uint32_t		2590758	0					
ANR	2590764	UnaryOperationExpression	* upd -> pxlptr --		2590758	1					
ANR	2590765	UnaryOperator	*		2590758	0					
ANR	2590766	PostIncDecOperationExpression	upd -> pxlptr --		2590758	1					
ANR	2590767	PtrMemberAccess	upd -> pxlptr		2590758	0					
ANR	2590768	Identifier	upd		2590758	0					
ANR	2590769	Identifier	pxlptr		2590758	1					
ANR	2590770	IncDec	--		2590758	1					
ANR	2590771	ReturnType	static uint32_t		2590758	1					
ANR	2590772	Identifier	upd_pxlget8r		2590758	2					
ANR	2590773	ParameterList	upd_p upd		2590758	3					
ANR	2590774	Parameter	upd_p upd	7580:13:265284:265292	2590758	0	True				
ANR	2590775	ParameterType	upd_p		2590758	0					
ANR	2590776	Identifier	upd		2590758	1					
ANR	2590777	CFGEntryNode	ENTRY		2590758		True				
ANR	2590778	CFGExitNode	EXIT		2590758		True				
ANR	2590779	Symbol	upd -> pxlptr		2590758						
ANR	2590780	Symbol	* upd		2590758						
ANR	2590781	Symbol	* upd -> pxlptr --		2590758						
ANR	2590782	Symbol	upd		2590758						
ANR	2590783	Function	upd_pxlget16r	7586:0:265360:265535							
ANR	2590784	FunctionDef	upd_pxlget16r (upd_p upd)		2590783	0					
ANR	2590785	CompoundStatement		7588:0:265401:265535	2590783	0					
ANR	2590786	IdentifierDeclStatement	uint32_t ci = * upd -> pxlptr -- ;	7589:3:265406:265453	2590783	0	True				
ANR	2590787	IdentifierDecl	ci = * upd -> pxlptr --		2590783	0					
ANR	2590788	IdentifierDeclType	uint32_t		2590783	0					
ANR	2590789	Identifier	ci		2590783	1					
ANR	2590790	AssignmentExpression	ci = * upd -> pxlptr --		2590783	2		=			
ANR	2590791	Identifier	ci		2590783	0					
ANR	2590792	UnaryOperationExpression	* upd -> pxlptr --		2590783	1					
ANR	2590793	UnaryOperator	*		2590783	0					
ANR	2590794	PostIncDecOperationExpression	upd -> pxlptr --		2590783	1					
ANR	2590795	PtrMemberAccess	upd -> pxlptr		2590783	0					
ANR	2590796	Identifier	upd		2590783	0					
ANR	2590797	Identifier	pxlptr		2590783	1					
ANR	2590798	IncDec	--		2590783	1					
ANR	2590799	ExpressionStatement	ci |= ( uint32_t ) ( * upd -> pxlptr -- ) << 8	7590:18:265473:265511	2590783	1	True				
ANR	2590800	AssignmentExpression	ci |= ( uint32_t ) ( * upd -> pxlptr -- ) << 8		2590783	0		|=			
ANR	2590801	Identifier	ci		2590783	0					
ANR	2590802	ShiftExpression	( uint32_t ) ( * upd -> pxlptr -- ) << 8		2590783	1		<<			
ANR	2590803	CastExpression	( uint32_t ) ( * upd -> pxlptr -- )		2590783	0					
ANR	2590804	CastTarget	uint32_t		2590783	0					
ANR	2590805	UnaryOperationExpression	* upd -> pxlptr --		2590783	1					
ANR	2590806	UnaryOperator	*		2590783	0					
ANR	2590807	PostIncDecOperationExpression	upd -> pxlptr --		2590783	1					
ANR	2590808	PtrMemberAccess	upd -> pxlptr		2590783	0					
ANR	2590809	Identifier	upd		2590783	0					
ANR	2590810	Identifier	pxlptr		2590783	1					
ANR	2590811	IncDec	--		2590783	1					
ANR	2590812	PrimaryExpression	8		2590783	1					
ANR	2590813	ReturnStatement	return ci ;	7591:3:265516:265533	2590783	2	True				
ANR	2590814	Identifier	ci		2590783	0					
ANR	2590815	ReturnType	static uint32_t		2590783	1					
ANR	2590816	Identifier	upd_pxlget16r		2590783	2					
ANR	2590817	ParameterList	upd_p upd		2590783	3					
ANR	2590818	Parameter	upd_p upd	7587:14:265390:265398	2590783	0	True				
ANR	2590819	ParameterType	upd_p		2590783	0					
ANR	2590820	Identifier	upd		2590783	1					
ANR	2590821	CFGEntryNode	ENTRY		2590783		True				
ANR	2590822	CFGExitNode	EXIT		2590783		True				
ANR	2590823	Symbol	upd -> pxlptr		2590783						
ANR	2590824	Symbol	* upd		2590783						
ANR	2590825	Symbol	* upd -> pxlptr --		2590783						
ANR	2590826	Symbol	ci		2590783						
ANR	2590827	Symbol	upd		2590783						
ANR	2590828	Function	upd_pxlget24r	7595:0:265559:265762							
ANR	2590829	FunctionDef	upd_pxlget24r (upd_p upd)		2590828	0					
ANR	2590830	CompoundStatement		7597:0:265600:265762	2590828	0					
ANR	2590831	IdentifierDeclStatement	uint32_t ci = * upd -> pxlptr -- ;	7598:3:265605:265644	2590828	0	True				
ANR	2590832	IdentifierDecl	ci = * upd -> pxlptr --		2590828	0					
ANR	2590833	IdentifierDeclType	uint32_t		2590828	0					
ANR	2590834	Identifier	ci		2590828	1					
ANR	2590835	AssignmentExpression	ci = * upd -> pxlptr --		2590828	2		=			
ANR	2590836	Identifier	ci		2590828	0					
ANR	2590837	UnaryOperationExpression	* upd -> pxlptr --		2590828	1					
ANR	2590838	UnaryOperator	*		2590828	0					
ANR	2590839	PostIncDecOperationExpression	upd -> pxlptr --		2590828	1					
ANR	2590840	PtrMemberAccess	upd -> pxlptr		2590828	0					
ANR	2590841	Identifier	upd		2590828	0					
ANR	2590842	Identifier	pxlptr		2590828	1					
ANR	2590843	IncDec	--		2590828	1					
ANR	2590844	ExpressionStatement	ci |= ( uint32_t ) ( * upd -> pxlptr -- ) << 8	7599:10:265656:265695	2590828	1	True				
ANR	2590845	AssignmentExpression	ci |= ( uint32_t ) ( * upd -> pxlptr -- ) << 8		2590828	0		|=			
ANR	2590846	Identifier	ci		2590828	0					
ANR	2590847	ShiftExpression	( uint32_t ) ( * upd -> pxlptr -- ) << 8		2590828	1		<<			
ANR	2590848	CastExpression	( uint32_t ) ( * upd -> pxlptr -- )		2590828	0					
ANR	2590849	CastTarget	uint32_t		2590828	0					
ANR	2590850	UnaryOperationExpression	* upd -> pxlptr --		2590828	1					
ANR	2590851	UnaryOperator	*		2590828	0					
ANR	2590852	PostIncDecOperationExpression	upd -> pxlptr --		2590828	1					
ANR	2590853	PtrMemberAccess	upd -> pxlptr		2590828	0					
ANR	2590854	Identifier	upd		2590828	0					
ANR	2590855	Identifier	pxlptr		2590828	1					
ANR	2590856	IncDec	--		2590828	1					
ANR	2590857	PrimaryExpression	8		2590828	1					
ANR	2590858	ExpressionStatement	ci |= ( uint32_t ) ( * upd -> pxlptr -- ) << 16	7600:10:265707:265746	2590828	2	True				
ANR	2590859	AssignmentExpression	ci |= ( uint32_t ) ( * upd -> pxlptr -- ) << 16		2590828	0		|=			
ANR	2590860	Identifier	ci		2590828	0					
ANR	2590861	ShiftExpression	( uint32_t ) ( * upd -> pxlptr -- ) << 16		2590828	1		<<			
ANR	2590862	CastExpression	( uint32_t ) ( * upd -> pxlptr -- )		2590828	0					
ANR	2590863	CastTarget	uint32_t		2590828	0					
ANR	2590864	UnaryOperationExpression	* upd -> pxlptr --		2590828	1					
ANR	2590865	UnaryOperator	*		2590828	0					
ANR	2590866	PostIncDecOperationExpression	upd -> pxlptr --		2590828	1					
ANR	2590867	PtrMemberAccess	upd -> pxlptr		2590828	0					
ANR	2590868	Identifier	upd		2590828	0					
ANR	2590869	Identifier	pxlptr		2590828	1					
ANR	2590870	IncDec	--		2590828	1					
ANR	2590871	PrimaryExpression	16		2590828	1					
ANR	2590872	ReturnStatement	return ci ;	7601:3:265751:265760	2590828	3	True				
ANR	2590873	Identifier	ci		2590828	0					
ANR	2590874	ReturnType	static uint32_t		2590828	1					
ANR	2590875	Identifier	upd_pxlget24r		2590828	2					
ANR	2590876	ParameterList	upd_p upd		2590828	3					
ANR	2590877	Parameter	upd_p upd	7596:14:265589:265597	2590828	0	True				
ANR	2590878	ParameterType	upd_p		2590828	0					
ANR	2590879	Identifier	upd		2590828	1					
ANR	2590880	CFGEntryNode	ENTRY		2590828		True				
ANR	2590881	CFGExitNode	EXIT		2590828		True				
ANR	2590882	Symbol	upd -> pxlptr		2590828						
ANR	2590883	Symbol	* upd		2590828						
ANR	2590884	Symbol	* upd -> pxlptr --		2590828						
ANR	2590885	Symbol	ci		2590828						
ANR	2590886	Symbol	upd		2590828						
ANR	2590887	Function	upd_pxlget32r	7605:0:265786:266080							
ANR	2590888	FunctionDef	upd_pxlget32r (upd_p upd)		2590887	0					
ANR	2590889	CompoundStatement		7607:0:265827:266080	2590887	0					
ANR	2590890	IdentifierDeclStatement	uint32_t ci = * upd -> pxlptr -- ;	7608:3:265832:265879	2590887	0	True				
ANR	2590891	IdentifierDecl	ci = * upd -> pxlptr --		2590887	0					
ANR	2590892	IdentifierDeclType	uint32_t		2590887	0					
ANR	2590893	Identifier	ci		2590887	1					
ANR	2590894	AssignmentExpression	ci = * upd -> pxlptr --		2590887	2		=			
ANR	2590895	Identifier	ci		2590887	0					
ANR	2590896	UnaryOperationExpression	* upd -> pxlptr --		2590887	1					
ANR	2590897	UnaryOperator	*		2590887	0					
ANR	2590898	PostIncDecOperationExpression	upd -> pxlptr --		2590887	1					
ANR	2590899	PtrMemberAccess	upd -> pxlptr		2590887	0					
ANR	2590900	Identifier	upd		2590887	0					
ANR	2590901	Identifier	pxlptr		2590887	1					
ANR	2590902	IncDec	--		2590887	1					
ANR	2590903	ExpressionStatement	ci |= ( uint32_t ) ( * upd -> pxlptr -- ) << 8	7609:18:265899:265938	2590887	1	True				
ANR	2590904	AssignmentExpression	ci |= ( uint32_t ) ( * upd -> pxlptr -- ) << 8		2590887	0		|=			
ANR	2590905	Identifier	ci		2590887	0					
ANR	2590906	ShiftExpression	( uint32_t ) ( * upd -> pxlptr -- ) << 8		2590887	1		<<			
ANR	2590907	CastExpression	( uint32_t ) ( * upd -> pxlptr -- )		2590887	0					
ANR	2590908	CastTarget	uint32_t		2590887	0					
ANR	2590909	UnaryOperationExpression	* upd -> pxlptr --		2590887	1					
ANR	2590910	UnaryOperator	*		2590887	0					
ANR	2590911	PostIncDecOperationExpression	upd -> pxlptr --		2590887	1					
ANR	2590912	PtrMemberAccess	upd -> pxlptr		2590887	0					
ANR	2590913	Identifier	upd		2590887	0					
ANR	2590914	Identifier	pxlptr		2590887	1					
ANR	2590915	IncDec	--		2590887	1					
ANR	2590916	PrimaryExpression	8		2590887	1					
ANR	2590917	ExpressionStatement	ci |= ( uint32_t ) ( * upd -> pxlptr -- ) << 16	7610:18:265958:265997	2590887	2	True				
ANR	2590918	AssignmentExpression	ci |= ( uint32_t ) ( * upd -> pxlptr -- ) << 16		2590887	0		|=			
ANR	2590919	Identifier	ci		2590887	0					
ANR	2590920	ShiftExpression	( uint32_t ) ( * upd -> pxlptr -- ) << 16		2590887	1		<<			
ANR	2590921	CastExpression	( uint32_t ) ( * upd -> pxlptr -- )		2590887	0					
ANR	2590922	CastTarget	uint32_t		2590887	0					
ANR	2590923	UnaryOperationExpression	* upd -> pxlptr --		2590887	1					
ANR	2590924	UnaryOperator	*		2590887	0					
ANR	2590925	PostIncDecOperationExpression	upd -> pxlptr --		2590887	1					
ANR	2590926	PtrMemberAccess	upd -> pxlptr		2590887	0					
ANR	2590927	Identifier	upd		2590887	0					
ANR	2590928	Identifier	pxlptr		2590887	1					
ANR	2590929	IncDec	--		2590887	1					
ANR	2590930	PrimaryExpression	16		2590887	1					
ANR	2590931	ExpressionStatement	ci |= ( uint32_t ) ( * upd -> pxlptr -- ) << 24	7611:18:266017:266056	2590887	3	True				
ANR	2590932	AssignmentExpression	ci |= ( uint32_t ) ( * upd -> pxlptr -- ) << 24		2590887	0		|=			
ANR	2590933	Identifier	ci		2590887	0					
ANR	2590934	ShiftExpression	( uint32_t ) ( * upd -> pxlptr -- ) << 24		2590887	1		<<			
ANR	2590935	CastExpression	( uint32_t ) ( * upd -> pxlptr -- )		2590887	0					
ANR	2590936	CastTarget	uint32_t		2590887	0					
ANR	2590937	UnaryOperationExpression	* upd -> pxlptr --		2590887	1					
ANR	2590938	UnaryOperator	*		2590887	0					
ANR	2590939	PostIncDecOperationExpression	upd -> pxlptr --		2590887	1					
ANR	2590940	PtrMemberAccess	upd -> pxlptr		2590887	0					
ANR	2590941	Identifier	upd		2590887	0					
ANR	2590942	Identifier	pxlptr		2590887	1					
ANR	2590943	IncDec	--		2590887	1					
ANR	2590944	PrimaryExpression	24		2590887	1					
ANR	2590945	ReturnStatement	return ci ;	7612:3:266061:266078	2590887	4	True				
ANR	2590946	Identifier	ci		2590887	0					
ANR	2590947	ReturnType	static uint32_t		2590887	1					
ANR	2590948	Identifier	upd_pxlget32r		2590887	2					
ANR	2590949	ParameterList	upd_p upd		2590887	3					
ANR	2590950	Parameter	upd_p upd	7606:14:265816:265824	2590887	0	True				
ANR	2590951	ParameterType	upd_p		2590887	0					
ANR	2590952	Identifier	upd		2590887	1					
ANR	2590953	CFGEntryNode	ENTRY		2590887		True				
ANR	2590954	CFGExitNode	EXIT		2590887		True				
ANR	2590955	Symbol	upd -> pxlptr		2590887						
ANR	2590956	Symbol	* upd		2590887						
ANR	2590957	Symbol	* upd -> pxlptr --		2590887						
ANR	2590958	Symbol	ci		2590887						
ANR	2590959	Symbol	upd		2590887						
