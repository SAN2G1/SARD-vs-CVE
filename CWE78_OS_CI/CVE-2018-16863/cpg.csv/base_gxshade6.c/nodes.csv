command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1248428	File	data/converged/CVE-2018-16863_ghostpdl/base_gxshade6.c								
ANR	1248429	DeclStmt									
ANR	1248430	Decl							bool	bool	dbg_nofill
ANR	1248431	DeclStmt									
ANR	1248432	Decl							int	int	dbg_patch_cnt
ANR	1248433	DeclStmt									
ANR	1248434	Decl							int	int	dbg_quad_cnt
ANR	1248435	DeclStmt									
ANR	1248436	Decl							int	int	dbg_triangle_cnt
ANR	1248437	DeclStmt									
ANR	1248438	Decl							int	int	dbg_wedge_triangle_cnt
ANR	1248439	ClassDef	<unnamed>	77:0:2896:3041							
ANR	1248440	Function	allocate_color_stack	84:0:3096:3847							
ANR	1248441	FunctionDef	"allocate_color_stack (patch_fill_state_t * pfs , gs_memory_t * memory)"		1248440	0					
ANR	1248442	CompoundStatement		86:0:3174:3847	1248440	0					
ANR	1248443	IfStatement	if ( pfs -> color_stack != NULL )		1248440	0					
ANR	1248444	Condition	pfs -> color_stack != NULL	87:8:3184:3207	1248440	0	True				
ANR	1248445	EqualityExpression	pfs -> color_stack != NULL		1248440	0		!=			
ANR	1248446	PtrMemberAccess	pfs -> color_stack		1248440	0					
ANR	1248447	Identifier	pfs		1248440	0					
ANR	1248448	Identifier	color_stack		1248440	1					
ANR	1248449	Identifier	NULL		1248440	1					
ANR	1248450	ReturnStatement	return 0 ;	88:8:3218:3226	1248440	1	True				
ANR	1248451	PrimaryExpression	0		1248440	0					
ANR	1248452	ExpressionStatement	"pfs -> color_stack_step = offset_of ( patch_color_t , cc . paint . values [ pfs -> num_components ] )"	89:4:3232:3318	1248440	1	True				
ANR	1248453	AssignmentExpression	"pfs -> color_stack_step = offset_of ( patch_color_t , cc . paint . values [ pfs -> num_components ] )"		1248440	0		=			
ANR	1248454	PtrMemberAccess	pfs -> color_stack_step		1248440	0					
ANR	1248455	Identifier	pfs		1248440	0					
ANR	1248456	Identifier	color_stack_step		1248440	1					
ANR	1248457	CallExpression	"offset_of ( patch_color_t , cc . paint . values [ pfs -> num_components ] )"		1248440	1					
ANR	1248458	Callee	offset_of		1248440	0					
ANR	1248459	Identifier	offset_of		1248440	0					
ANR	1248460	ArgumentList	patch_color_t		1248440	1					
ANR	1248461	Argument	patch_color_t		1248440	0					
ANR	1248462	Identifier	patch_color_t		1248440	0					
ANR	1248463	Argument	cc . paint . values [ pfs -> num_components ]		1248440	1					
ANR	1248464	ArrayIndexing	cc . paint . values [ pfs -> num_components ]		1248440	0					
ANR	1248465	MemberAccess	cc . paint . values		1248440	0					
ANR	1248466	MemberAccess	cc . paint		1248440	0					
ANR	1248467	Identifier	cc		1248440	0					
ANR	1248468	Identifier	paint		1248440	1					
ANR	1248469	Identifier	values		1248440	1					
ANR	1248470	PtrMemberAccess	pfs -> num_components		1248440	1					
ANR	1248471	Identifier	pfs		1248440	0					
ANR	1248472	Identifier	num_components		1248440	1					
ANR	1248473	ExpressionStatement	pfs -> color_stack_step = ( pfs -> color_stack_step + sizeof ( void * ) - 1 ) / sizeof ( void * ) * sizeof ( void * )	90:4:3324:3426	1248440	2	True				
ANR	1248474	AssignmentExpression	pfs -> color_stack_step = ( pfs -> color_stack_step + sizeof ( void * ) - 1 ) / sizeof ( void * ) * sizeof ( void * )		1248440	0		=			
ANR	1248475	PtrMemberAccess	pfs -> color_stack_step		1248440	0					
ANR	1248476	Identifier	pfs		1248440	0					
ANR	1248477	Identifier	color_stack_step		1248440	1					
ANR	1248478	MultiplicativeExpression	( pfs -> color_stack_step + sizeof ( void * ) - 1 ) / sizeof ( void * ) * sizeof ( void * )		1248440	1		/			
ANR	1248479	AdditiveExpression	pfs -> color_stack_step + sizeof ( void * ) - 1		1248440	0		+			
ANR	1248480	PtrMemberAccess	pfs -> color_stack_step		1248440	0					
ANR	1248481	Identifier	pfs		1248440	0					
ANR	1248482	Identifier	color_stack_step		1248440	1					
ANR	1248483	AdditiveExpression	sizeof ( void * ) - 1		1248440	1		-			
ANR	1248484	SizeofExpression	sizeof ( void * )		1248440	0					
ANR	1248485	Sizeof	sizeof		1248440	0					
ANR	1248486	SizeofOperand	void *		1248440	1					
ANR	1248487	PrimaryExpression	1		1248440	1					
ANR	1248488	MultiplicativeExpression	sizeof ( void * ) * sizeof ( void * )		1248440	1		*			
ANR	1248489	SizeofExpression	sizeof ( void * )		1248440	0					
ANR	1248490	Sizeof	sizeof		1248440	0					
ANR	1248491	SizeofOperand	void *		1248440	1					
ANR	1248492	SizeofExpression	sizeof ( void * )		1248440	1					
ANR	1248493	Sizeof	sizeof		1248440	0					
ANR	1248494	SizeofOperand	void *		1248440	1					
ANR	1248495	ExpressionStatement	pfs -> color_stack_size = pfs -> color_stack_step * SHADING_COLOR_STACK_SIZE	92:4:3449:3521	1248440	3	True				
ANR	1248496	AssignmentExpression	pfs -> color_stack_size = pfs -> color_stack_step * SHADING_COLOR_STACK_SIZE		1248440	0		=			
ANR	1248497	PtrMemberAccess	pfs -> color_stack_size		1248440	0					
ANR	1248498	Identifier	pfs		1248440	0					
ANR	1248499	Identifier	color_stack_size		1248440	1					
ANR	1248500	MultiplicativeExpression	pfs -> color_stack_step * SHADING_COLOR_STACK_SIZE		1248440	1		*			
ANR	1248501	PtrMemberAccess	pfs -> color_stack_step		1248440	0					
ANR	1248502	Identifier	pfs		1248440	0					
ANR	1248503	Identifier	color_stack_step		1248440	1					
ANR	1248504	Identifier	SHADING_COLOR_STACK_SIZE		1248440	1					
ANR	1248505	ExpressionStatement	"pfs -> color_stack = gs_alloc_bytes ( memory , pfs -> color_stack_size , ""allocate_color_stack"" )"	93:4:3527:3615	1248440	4	True				
ANR	1248506	AssignmentExpression	"pfs -> color_stack = gs_alloc_bytes ( memory , pfs -> color_stack_size , ""allocate_color_stack"" )"		1248440	0		=			
ANR	1248507	PtrMemberAccess	pfs -> color_stack		1248440	0					
ANR	1248508	Identifier	pfs		1248440	0					
ANR	1248509	Identifier	color_stack		1248440	1					
ANR	1248510	CallExpression	"gs_alloc_bytes ( memory , pfs -> color_stack_size , ""allocate_color_stack"" )"		1248440	1					
ANR	1248511	Callee	gs_alloc_bytes		1248440	0					
ANR	1248512	Identifier	gs_alloc_bytes		1248440	0					
ANR	1248513	ArgumentList	memory		1248440	1					
ANR	1248514	Argument	memory		1248440	0					
ANR	1248515	Identifier	memory		1248440	0					
ANR	1248516	Argument	pfs -> color_stack_size		1248440	1					
ANR	1248517	PtrMemberAccess	pfs -> color_stack_size		1248440	0					
ANR	1248518	Identifier	pfs		1248440	0					
ANR	1248519	Identifier	color_stack_size		1248440	1					
ANR	1248520	Argument	"""allocate_color_stack"""		1248440	2					
ANR	1248521	PrimaryExpression	"""allocate_color_stack"""		1248440	0					
ANR	1248522	IfStatement	if ( pfs -> color_stack == NULL )		1248440	5					
ANR	1248523	Condition	pfs -> color_stack == NULL	94:8:3625:3648	1248440	0	True				
ANR	1248524	EqualityExpression	pfs -> color_stack == NULL		1248440	0		==			
ANR	1248525	PtrMemberAccess	pfs -> color_stack		1248440	0					
ANR	1248526	Identifier	pfs		1248440	0					
ANR	1248527	Identifier	color_stack		1248440	1					
ANR	1248528	Identifier	NULL		1248440	1					
ANR	1248529	ExpressionStatement	return_error ( gs_error_VMerror )	95:8:3659:3689	1248440	1	True				
ANR	1248530	CallExpression	return_error ( gs_error_VMerror )		1248440	0					
ANR	1248531	Callee	return_error		1248440	0					
ANR	1248532	Identifier	return_error		1248440	0					
ANR	1248533	ArgumentList	gs_error_VMerror		1248440	1					
ANR	1248534	Argument	gs_error_VMerror		1248440	0					
ANR	1248535	Identifier	gs_error_VMerror		1248440	0					
ANR	1248536	ExpressionStatement	pfs -> color_stack_limit = pfs -> color_stack + pfs -> color_stack_size	96:4:3695:3760	1248440	6	True				
ANR	1248537	AssignmentExpression	pfs -> color_stack_limit = pfs -> color_stack + pfs -> color_stack_size		1248440	0		=			
ANR	1248538	PtrMemberAccess	pfs -> color_stack_limit		1248440	0					
ANR	1248539	Identifier	pfs		1248440	0					
ANR	1248540	Identifier	color_stack_limit		1248440	1					
ANR	1248541	AdditiveExpression	pfs -> color_stack + pfs -> color_stack_size		1248440	1		+			
ANR	1248542	PtrMemberAccess	pfs -> color_stack		1248440	0					
ANR	1248543	Identifier	pfs		1248440	0					
ANR	1248544	Identifier	color_stack		1248440	1					
ANR	1248545	PtrMemberAccess	pfs -> color_stack_size		1248440	1					
ANR	1248546	Identifier	pfs		1248440	0					
ANR	1248547	Identifier	color_stack_size		1248440	1					
ANR	1248548	ExpressionStatement	pfs -> color_stack_ptr = pfs -> color_stack	97:4:3766:3805	1248440	7	True				
ANR	1248549	AssignmentExpression	pfs -> color_stack_ptr = pfs -> color_stack		1248440	0		=			
ANR	1248550	PtrMemberAccess	pfs -> color_stack_ptr		1248440	0					
ANR	1248551	Identifier	pfs		1248440	0					
ANR	1248552	Identifier	color_stack_ptr		1248440	1					
ANR	1248553	PtrMemberAccess	pfs -> color_stack		1248440	1					
ANR	1248554	Identifier	pfs		1248440	0					
ANR	1248555	Identifier	color_stack		1248440	1					
ANR	1248556	ExpressionStatement	pfs -> memory = memory	98:4:3811:3831	1248440	8	True				
ANR	1248557	AssignmentExpression	pfs -> memory = memory		1248440	0		=			
ANR	1248558	PtrMemberAccess	pfs -> memory		1248440	0					
ANR	1248559	Identifier	pfs		1248440	0					
ANR	1248560	Identifier	memory		1248440	1					
ANR	1248561	Identifier	memory		1248440	1					
ANR	1248562	ReturnStatement	return 0 ;	99:4:3837:3845	1248440	9	True				
ANR	1248563	PrimaryExpression	0		1248440	0					
ANR	1248564	ReturnType	static int		1248440	1					
ANR	1248565	Identifier	allocate_color_stack		1248440	2					
ANR	1248566	ParameterList	"patch_fill_state_t * pfs , gs_memory_t * memory"		1248440	3					
ANR	1248567	Parameter	patch_fill_state_t * pfs	85:21:3128:3150	1248440	0	True				
ANR	1248568	ParameterType	patch_fill_state_t *		1248440	0					
ANR	1248569	Identifier	pfs		1248440	1					
ANR	1248570	Parameter	gs_memory_t * memory	85:46:3153:3171	1248440	1	True				
ANR	1248571	ParameterType	gs_memory_t *		1248440	0					
ANR	1248572	Identifier	memory		1248440	1					
ANR	1248573	CFGEntryNode	ENTRY		1248440		True				
ANR	1248574	CFGExitNode	EXIT		1248440		True				
ANR	1248575	Symbol	cc		1248440						
ANR	1248576	Symbol	offset_of		1248440						
ANR	1248577	Symbol	gs_alloc_bytes		1248440						
ANR	1248578	Symbol	memory		1248440						
ANR	1248579	Symbol	NULL		1248440						
ANR	1248580	Symbol	* cc		1248440						
ANR	1248581	Symbol	* pfs		1248440						
ANR	1248582	Symbol	pfs -> color_stack_ptr		1248440						
ANR	1248583	Symbol	* pfs -> num_components		1248440						
ANR	1248584	Symbol	* * pfs		1248440						
ANR	1248585	Symbol	gs_error_VMerror		1248440						
ANR	1248586	Symbol	pfs -> color_stack_step		1248440						
ANR	1248587	Symbol	* cc . paint		1248440						
ANR	1248588	Symbol	pfs -> memory		1248440						
ANR	1248589	Symbol	pfs -> num_components		1248440						
ANR	1248590	Symbol	* cc . paint . values		1248440						
ANR	1248591	Symbol	cc . paint		1248440						
ANR	1248592	Symbol	pfs -> color_stack_size		1248440						
ANR	1248593	Symbol	pfs -> color_stack		1248440						
ANR	1248594	Symbol	pfs -> color_stack_limit		1248440						
ANR	1248595	Symbol	pfs		1248440						
ANR	1248596	Symbol	cc . paint . values		1248440						
ANR	1248597	Symbol	patch_color_t		1248440						
ANR	1248598	Symbol	SHADING_COLOR_STACK_SIZE		1248440						
ANR	1248599	Function	reserve_colors_inline	102:0:3850:4257							
ANR	1248600	FunctionDef	"reserve_colors_inline (patch_fill_state_t * pfs , patch_color_t * c [ ] , int n)"		1248599	0					
ANR	1248601	CompoundStatement		104:0:3945:4257	1248599	0					
ANR	1248602	IdentifierDeclStatement	int i ;	105:4:3951:3956	1248599	0	True				
ANR	1248603	IdentifierDecl	i		1248599	0					
ANR	1248604	IdentifierDeclType	int		1248599	0					
ANR	1248605	Identifier	i		1248599	1					
ANR	1248606	IdentifierDeclStatement	"byte * ptr0 = pfs -> color_stack_ptr , * ptr = ptr0 ;"	106:4:3962:4008	1248599	1	True				
ANR	1248607	IdentifierDecl	* ptr0 = pfs -> color_stack_ptr		1248599	0					
ANR	1248608	IdentifierDeclType	byte *		1248599	0					
ANR	1248609	Identifier	ptr0		1248599	1					
ANR	1248610	AssignmentExpression	* ptr0 = pfs -> color_stack_ptr		1248599	2		=			
ANR	1248611	Identifier	ptr0		1248599	0					
ANR	1248612	PtrMemberAccess	pfs -> color_stack_ptr		1248599	1					
ANR	1248613	Identifier	pfs		1248599	0					
ANR	1248614	Identifier	color_stack_ptr		1248599	1					
ANR	1248615	IdentifierDecl	* ptr = ptr0		1248599	1					
ANR	1248616	IdentifierDeclType	byte *		1248599	0					
ANR	1248617	Identifier	ptr		1248599	1					
ANR	1248618	AssignmentExpression	* ptr = ptr0		1248599	2		=			
ANR	1248619	Identifier	ptr0		1248599	0					
ANR	1248620	Identifier	ptr0		1248599	1					
ANR	1248621	ForStatement	"for ( i = 0 ; i < n ; i ++ , ptr += pfs -> color_stack_step )"		1248599	2					
ANR	1248622	ForInit	i = 0 ;	108:9:4020:4025	1248599	0	True				
ANR	1248623	AssignmentExpression	i = 0		1248599	0		=			
ANR	1248624	Identifier	i		1248599	0					
ANR	1248625	PrimaryExpression	0		1248599	1					
ANR	1248626	Condition	i < n	108:16:4027:4031	1248599	1	True				
ANR	1248627	RelationalExpression	i < n		1248599	0		<			
ANR	1248628	Identifier	i		1248599	0					
ANR	1248629	Identifier	n		1248599	1					
ANR	1248630	Expression	"i ++ , ptr += pfs -> color_stack_step"	108:23:4034:4066	1248599	2	True				
ANR	1248631	PostIncDecOperationExpression	i ++		1248599	0					
ANR	1248632	Identifier	i		1248599	0					
ANR	1248633	IncDec	++		1248599	1					
ANR	1248634	AssignmentExpression	ptr += pfs -> color_stack_step		1248599	1		+=			
ANR	1248635	Identifier	ptr		1248599	0					
ANR	1248636	PtrMemberAccess	pfs -> color_stack_step		1248599	1					
ANR	1248637	Identifier	pfs		1248599	0					
ANR	1248638	Identifier	color_stack_step		1248599	1					
ANR	1248639	ExpressionStatement	c [ i ] = ( patch_color_t * ) ptr	109:8:4077:4104	1248599	3	True				
ANR	1248640	AssignmentExpression	c [ i ] = ( patch_color_t * ) ptr		1248599	0		=			
ANR	1248641	ArrayIndexing	c [ i ]		1248599	0					
ANR	1248642	Identifier	c		1248599	0					
ANR	1248643	Identifier	i		1248599	1					
ANR	1248644	CastExpression	( patch_color_t * ) ptr		1248599	1					
ANR	1248645	CastTarget	patch_color_t *		1248599	0					
ANR	1248646	Identifier	ptr		1248599	1					
ANR	1248647	IfStatement	if ( ptr > pfs -> color_stack_limit )		1248599	3					
ANR	1248648	Condition	ptr > pfs -> color_stack_limit	110:8:4114:4141	1248599	0	True				
ANR	1248649	RelationalExpression	ptr > pfs -> color_stack_limit		1248599	0		>			
ANR	1248650	Identifier	ptr		1248599	0					
ANR	1248651	PtrMemberAccess	pfs -> color_stack_limit		1248599	1					
ANR	1248652	Identifier	pfs		1248599	0					
ANR	1248653	Identifier	color_stack_limit		1248599	1					
ANR	1248654	CompoundStatement		7:38:198:198	1248599	1					
ANR	1248655	ExpressionStatement	c [ 0 ] = NULL	111:8:4154:4165	1248599	0	True				
ANR	1248656	AssignmentExpression	c [ 0 ] = NULL		1248599	0		=			
ANR	1248657	ArrayIndexing	c [ 0 ]		1248599	0					
ANR	1248658	Identifier	c		1248599	0					
ANR	1248659	PrimaryExpression	0		1248599	1					
ANR	1248660	Identifier	NULL		1248599	1					
ANR	1248661	ReturnStatement	return NULL ;	112:8:4189:4200	1248599	1	True				
ANR	1248662	Identifier	NULL		1248599	0					
ANR	1248663	ExpressionStatement	pfs -> color_stack_ptr = ptr	114:4:4212:4238	1248599	4	True				
ANR	1248664	AssignmentExpression	pfs -> color_stack_ptr = ptr		1248599	0		=			
ANR	1248665	PtrMemberAccess	pfs -> color_stack_ptr		1248599	0					
ANR	1248666	Identifier	pfs		1248599	0					
ANR	1248667	Identifier	color_stack_ptr		1248599	1					
ANR	1248668	Identifier	ptr		1248599	1					
ANR	1248669	ReturnStatement	return ptr0 ;	115:4:4244:4255	1248599	5	True				
ANR	1248670	Identifier	ptr0		1248599	0					
ANR	1248671	ReturnType	static inline byte *		1248599	1					
ANR	1248672	Identifier	reserve_colors_inline		1248599	2					
ANR	1248673	ParameterList	"patch_fill_state_t * pfs , patch_color_t * c [ ] , int n"		1248599	3					
ANR	1248674	Parameter	patch_fill_state_t * pfs	103:22:3893:3915	1248599	0	True				
ANR	1248675	ParameterType	patch_fill_state_t *		1248599	0					
ANR	1248676	Identifier	pfs		1248599	1					
ANR	1248677	Parameter	patch_color_t * c [ ]	103:47:3918:3935	1248599	1	True				
ANR	1248678	ParameterType	patch_color_t * [ ]		1248599	0					
ANR	1248679	Identifier	c		1248599	1					
ANR	1248680	Parameter	int n	103:67:3938:3942	1248599	2	True				
ANR	1248681	ParameterType	int		1248599	0					
ANR	1248682	Identifier	n		1248599	1					
ANR	1248683	CFGEntryNode	ENTRY		1248599		True				
ANR	1248684	CFGExitNode	EXIT		1248599		True				
ANR	1248685	Symbol	c		1248599						
ANR	1248686	Symbol	NULL		1248599						
ANR	1248687	Symbol	* pfs		1248599						
ANR	1248688	Symbol	i		1248599						
ANR	1248689	Symbol	pfs -> color_stack_ptr		1248599						
ANR	1248690	Symbol	* c		1248599						
ANR	1248691	Symbol	n		1248599						
ANR	1248692	Symbol	ptr		1248599						
ANR	1248693	Symbol	pfs -> color_stack_step		1248599						
ANR	1248694	Symbol	* i		1248599						
ANR	1248695	Symbol	ptr0		1248599						
ANR	1248696	Symbol	pfs -> color_stack_limit		1248599						
ANR	1248697	Symbol	pfs		1248599						
ANR	1248698	Function	reserve_colors	118:0:4260:4381							
ANR	1248699	FunctionDef	"reserve_colors (patch_fill_state_t * pfs , patch_color_t * c [ ] , int n)"		1248698	0					
ANR	1248700	CompoundStatement		120:0:4334:4381	1248698	0					
ANR	1248701	ReturnStatement	"return reserve_colors_inline ( pfs , c , n ) ;"	121:4:4340:4379	1248698	0	True				
ANR	1248702	CallExpression	"reserve_colors_inline ( pfs , c , n )"		1248698	0					
ANR	1248703	Callee	reserve_colors_inline		1248698	0					
ANR	1248704	Identifier	reserve_colors_inline		1248698	0					
ANR	1248705	ArgumentList	pfs		1248698	1					
ANR	1248706	Argument	pfs		1248698	0					
ANR	1248707	Identifier	pfs		1248698	0					
ANR	1248708	Argument	c		1248698	1					
ANR	1248709	Identifier	c		1248698	0					
ANR	1248710	Argument	n		1248698	2					
ANR	1248711	Identifier	n		1248698	0					
ANR	1248712	ReturnType	byte *		1248698	1					
ANR	1248713	Identifier	reserve_colors		1248698	2					
ANR	1248714	ParameterList	"patch_fill_state_t * pfs , patch_color_t * c [ ] , int n"		1248698	3					
ANR	1248715	Parameter	patch_fill_state_t * pfs	119:15:4282:4304	1248698	0	True				
ANR	1248716	ParameterType	patch_fill_state_t *		1248698	0					
ANR	1248717	Identifier	pfs		1248698	1					
ANR	1248718	Parameter	patch_color_t * c [ ]	119:40:4307:4324	1248698	1	True				
ANR	1248719	ParameterType	patch_color_t * [ ]		1248698	0					
ANR	1248720	Identifier	c		1248698	1					
ANR	1248721	Parameter	int n	119:60:4327:4331	1248698	2	True				
ANR	1248722	ParameterType	int		1248698	0					
ANR	1248723	Identifier	n		1248698	1					
ANR	1248724	CFGEntryNode	ENTRY		1248698		True				
ANR	1248725	CFGExitNode	EXIT		1248698		True				
ANR	1248726	Symbol	c		1248698						
ANR	1248727	Symbol	reserve_colors_inline		1248698						
ANR	1248728	Symbol	pfs		1248698						
ANR	1248729	Symbol	n		1248698						
ANR	1248730	Function	release_colors_inline	124:0:4384:4664							
ANR	1248731	FunctionDef	"release_colors_inline (patch_fill_state_t * pfs , byte * ptr , int n)"		1248730	0					
ANR	1248732	CompoundStatement		126:0:4468:4664	1248730	0					
ANR	1248733	ExpressionStatement	pfs -> color_stack_ptr = pfs -> color_stack_step * n	128:4:4520:4568	1248730	0	True				
ANR	1248734	AssignmentExpression	pfs -> color_stack_ptr = pfs -> color_stack_step * n		1248730	0		=			
ANR	1248735	PtrMemberAccess	pfs -> color_stack_ptr		1248730	0					
ANR	1248736	Identifier	pfs		1248730	0					
ANR	1248737	Identifier	color_stack_ptr		1248730	1					
ANR	1248738	MultiplicativeExpression	pfs -> color_stack_step * n		1248730	1		*			
ANR	1248739	PtrMemberAccess	pfs -> color_stack_step		1248730	0					
ANR	1248740	Identifier	pfs		1248730	0					
ANR	1248741	Identifier	color_stack_step		1248730	1					
ANR	1248742	Identifier	n		1248730	1					
ANR	1248743	ExpressionStatement	assert ( ( byte * ) pfs -> color_stack_ptr == ptr )	129:4:4574:4617	1248730	1	True				
ANR	1248744	CallExpression	assert ( ( byte * ) pfs -> color_stack_ptr == ptr )		1248730	0					
ANR	1248745	Callee	assert		1248730	0					
ANR	1248746	Identifier	assert		1248730	0					
ANR	1248747	ArgumentList	( byte * ) pfs -> color_stack_ptr == ptr		1248730	1					
ANR	1248748	Argument	( byte * ) pfs -> color_stack_ptr == ptr		1248730	0					
ANR	1248749	EqualityExpression	( byte * ) pfs -> color_stack_ptr == ptr		1248730	0		==			
ANR	1248750	CastExpression	( byte * ) pfs -> color_stack_ptr		1248730	0					
ANR	1248751	CastTarget	byte *		1248730	0					
ANR	1248752	PtrMemberAccess	pfs -> color_stack_ptr		1248730	1					
ANR	1248753	Identifier	pfs		1248730	0					
ANR	1248754	Identifier	color_stack_ptr		1248730	1					
ANR	1248755	Identifier	ptr		1248730	1					
ANR	1248756	ReturnType	static inline void		1248730	1					
ANR	1248757	Identifier	release_colors_inline		1248730	2					
ANR	1248758	ParameterList	"patch_fill_state_t * pfs , byte * ptr , int n"		1248730	3					
ANR	1248759	Parameter	patch_fill_state_t * pfs	125:22:4425:4447	1248730	0	True				
ANR	1248760	ParameterType	patch_fill_state_t *		1248730	0					
ANR	1248761	Identifier	pfs		1248730	1					
ANR	1248762	Parameter	byte * ptr	125:47:4450:4458	1248730	1	True				
ANR	1248763	ParameterType	byte *		1248730	0					
ANR	1248764	Identifier	ptr		1248730	1					
ANR	1248765	Parameter	int n	125:58:4461:4465	1248730	2	True				
ANR	1248766	ParameterType	int		1248730	0					
ANR	1248767	Identifier	n		1248730	1					
ANR	1248768	CFGEntryNode	ENTRY		1248730		True				
ANR	1248769	CFGExitNode	EXIT		1248730		True				
ANR	1248770	Symbol	pfs -> color_stack_step		1248730						
ANR	1248771	Symbol	* pfs		1248730						
ANR	1248772	Symbol	pfs -> color_stack_ptr		1248730						
ANR	1248773	Symbol	pfs		1248730						
ANR	1248774	Symbol	n		1248730						
ANR	1248775	Symbol	ptr		1248730						
ANR	1248776	Function	release_colors	134:0:4666:4771							
ANR	1248777	FunctionDef	"release_colors (patch_fill_state_t * pfs , byte * ptr , int n)"		1248776	0					
ANR	1248778	CompoundStatement		136:0:4729:4771	1248776	0					
ANR	1248779	ExpressionStatement	"release_colors_inline ( pfs , ptr , n )"	137:4:4735:4769	1248776	0	True				
ANR	1248780	CallExpression	"release_colors_inline ( pfs , ptr , n )"		1248776	0					
ANR	1248781	Callee	release_colors_inline		1248776	0					
ANR	1248782	Identifier	release_colors_inline		1248776	0					
ANR	1248783	ArgumentList	pfs		1248776	1					
ANR	1248784	Argument	pfs		1248776	0					
ANR	1248785	Identifier	pfs		1248776	0					
ANR	1248786	Argument	ptr		1248776	1					
ANR	1248787	Identifier	ptr		1248776	0					
ANR	1248788	Argument	n		1248776	2					
ANR	1248789	Identifier	n		1248776	0					
ANR	1248790	ReturnType	void		1248776	1					
ANR	1248791	Identifier	release_colors		1248776	2					
ANR	1248792	ParameterList	"patch_fill_state_t * pfs , byte * ptr , int n"		1248776	3					
ANR	1248793	Parameter	patch_fill_state_t * pfs	135:15:4686:4708	1248776	0	True				
ANR	1248794	ParameterType	patch_fill_state_t *		1248776	0					
ANR	1248795	Identifier	pfs		1248776	1					
ANR	1248796	Parameter	byte * ptr	135:40:4711:4719	1248776	1	True				
ANR	1248797	ParameterType	byte *		1248776	0					
ANR	1248798	Identifier	ptr		1248776	1					
ANR	1248799	Parameter	int n	135:51:4722:4726	1248776	2	True				
ANR	1248800	ParameterType	int		1248776	0					
ANR	1248801	Identifier	n		1248776	1					
ANR	1248802	CFGEntryNode	ENTRY		1248776		True				
ANR	1248803	CFGExitNode	EXIT		1248776		True				
ANR	1248804	Symbol	pfs		1248776						
ANR	1248805	Symbol	n		1248776						
ANR	1248806	Symbol	ptr		1248776						
ANR	1248807	Function	shade_next_colors	141:0:4811:5172							
ANR	1248808	FunctionDef	"shade_next_colors (shade_coord_stream_t * cs , patch_curve_t * curves , int num_vertices)"		1248807	0					
ANR	1248809	CompoundStatement		144:0:4927:5172	1248807	0					
ANR	1248810	IdentifierDeclStatement	"int i , code = 0 ;"	145:4:4933:4948	1248807	0	True				
ANR	1248811	IdentifierDecl	i		1248807	0					
ANR	1248812	IdentifierDeclType	int		1248807	0					
ANR	1248813	Identifier	i		1248807	1					
ANR	1248814	IdentifierDecl	code = 0		1248807	1					
ANR	1248815	IdentifierDeclType	int		1248807	0					
ANR	1248816	Identifier	code		1248807	1					
ANR	1248817	AssignmentExpression	code = 0		1248807	2		=			
ANR	1248818	Identifier	code		1248807	0					
ANR	1248819	PrimaryExpression	0		1248807	1					
ANR	1248820	ForStatement	for ( i = 0 ; i < num_vertices && code >= 0 ; ++ i )		1248807	1					
ANR	1248821	ForInit	i = 0 ;	147:9:4960:4965	1248807	0	True				
ANR	1248822	AssignmentExpression	i = 0		1248807	0		=			
ANR	1248823	Identifier	i		1248807	0					
ANR	1248824	PrimaryExpression	0		1248807	1					
ANR	1248825	Condition	i < num_vertices && code >= 0	147:16:4967:4995	1248807	1	True				
ANR	1248826	AndExpression	i < num_vertices && code >= 0		1248807	0		&&			
ANR	1248827	RelationalExpression	i < num_vertices		1248807	0		<			
ANR	1248828	Identifier	i		1248807	0					
ANR	1248829	Identifier	num_vertices		1248807	1					
ANR	1248830	RelationalExpression	code >= 0		1248807	1		>=			
ANR	1248831	Identifier	code		1248807	0					
ANR	1248832	PrimaryExpression	0		1248807	1					
ANR	1248833	UnaryExpression	++ i	147:47:4998:5000	1248807	2	True				
ANR	1248834	IncDec	++		1248807	0					
ANR	1248835	Identifier	i		1248807	1					
ANR	1248836	CompoundStatement		4:52:75:75	1248807	3					
ANR	1248837	ExpressionStatement	curves [ i ] . vertex . cc [ 1 ] = 0	148:8:5013:5039	1248807	0	True				
ANR	1248838	AssignmentExpression	curves [ i ] . vertex . cc [ 1 ] = 0		1248807	0		=			
ANR	1248839	ArrayIndexing	curves [ i ] . vertex . cc [ 1 ]		1248807	0					
ANR	1248840	MemberAccess	curves [ i ] . vertex . cc		1248807	0					
ANR	1248841	MemberAccess	curves [ i ] . vertex		1248807	0					
ANR	1248842	ArrayIndexing	curves [ i ]		1248807	0					
ANR	1248843	Identifier	curves		1248807	0					
ANR	1248844	Identifier	i		1248807	1					
ANR	1248845	Identifier	vertex		1248807	1					
ANR	1248846	Identifier	cc		1248807	1					
ANR	1248847	PrimaryExpression	1		1248807	1					
ANR	1248848	PrimaryExpression	0		1248807	1					
ANR	1248849	ExpressionStatement	"code = shade_next_color ( cs , curves [ i ] . vertex . cc )"	149:8:5099:5147	1248807	1	True				
ANR	1248850	AssignmentExpression	"code = shade_next_color ( cs , curves [ i ] . vertex . cc )"		1248807	0		=			
ANR	1248851	Identifier	code		1248807	0					
ANR	1248852	CallExpression	"shade_next_color ( cs , curves [ i ] . vertex . cc )"		1248807	1					
ANR	1248853	Callee	shade_next_color		1248807	0					
ANR	1248854	Identifier	shade_next_color		1248807	0					
ANR	1248855	ArgumentList	cs		1248807	1					
ANR	1248856	Argument	cs		1248807	0					
ANR	1248857	Identifier	cs		1248807	0					
ANR	1248858	Argument	curves [ i ] . vertex . cc		1248807	1					
ANR	1248859	MemberAccess	curves [ i ] . vertex . cc		1248807	0					
ANR	1248860	MemberAccess	curves [ i ] . vertex		1248807	0					
ANR	1248861	ArrayIndexing	curves [ i ]		1248807	0					
ANR	1248862	Identifier	curves		1248807	0					
ANR	1248863	Identifier	i		1248807	1					
ANR	1248864	Identifier	vertex		1248807	1					
ANR	1248865	Identifier	cc		1248807	1					
ANR	1248866	ReturnStatement	return code ;	151:4:5159:5170	1248807	2	True				
ANR	1248867	Identifier	code		1248807	0					
ANR	1248868	ReturnType	static int		1248807	1					
ANR	1248869	Identifier	shade_next_colors		1248807	2					
ANR	1248870	ParameterList	"shade_coord_stream_t * cs , patch_curve_t * curves , int num_vertices"		1248807	3					
ANR	1248871	Parameter	shade_coord_stream_t * cs	142:18:4840:4864	1248807	0	True				
ANR	1248872	ParameterType	shade_coord_stream_t *		1248807	0					
ANR	1248873	Identifier	cs		1248807	1					
ANR	1248874	Parameter	patch_curve_t * curves	142:45:4867:4888	1248807	1	True				
ANR	1248875	ParameterType	patch_curve_t *		1248807	0					
ANR	1248876	Identifier	curves		1248807	1					
ANR	1248877	Parameter	int num_vertices	143:18:4909:4924	1248807	2	True				
ANR	1248878	ParameterType	int		1248807	0					
ANR	1248879	Identifier	num_vertices		1248807	1					
ANR	1248880	CFGEntryNode	ENTRY		1248807		True				
ANR	1248881	CFGExitNode	EXIT		1248807		True				
ANR	1248882	Symbol	shade_next_color		1248807						
ANR	1248883	Symbol	* * i		1248807						
ANR	1248884	Symbol	code		1248807						
ANR	1248885	Symbol	curves [ i ] . vertex		1248807						
ANR	1248886	Symbol	* curves [ i ] . vertex		1248807						
ANR	1248887	Symbol	i		1248807						
ANR	1248888	Symbol	cs		1248807						
ANR	1248889	Symbol	curves		1248807						
ANR	1248890	Symbol	num_vertices		1248807						
ANR	1248891	Symbol	* i		1248807						
ANR	1248892	Symbol	* curves		1248807						
ANR	1248893	Symbol	* * curves		1248807						
ANR	1248894	Symbol	curves [ i ] . vertex . cc		1248807						
ANR	1248895	Symbol	* curves [ i ] . vertex . cc		1248807						
ANR	1248896	Function	shade_next_curve	155:0:5219:5507							
ANR	1248897	FunctionDef	"shade_next_curve (shade_coord_stream_t * cs , patch_curve_t * curve)"		1248896	0					
ANR	1248898	CompoundStatement		157:0:5297:5507	1248896	0					
ANR	1248899	IdentifierDeclStatement	"int code = shade_next_coords ( cs , & curve -> vertex . p , 1 ) ;"	158:4:5303:5356	1248896	0	True				
ANR	1248900	IdentifierDecl	"code = shade_next_coords ( cs , & curve -> vertex . p , 1 )"		1248896	0					
ANR	1248901	IdentifierDeclType	int		1248896	0					
ANR	1248902	Identifier	code		1248896	1					
ANR	1248903	AssignmentExpression	"code = shade_next_coords ( cs , & curve -> vertex . p , 1 )"		1248896	2		=			
ANR	1248904	Identifier	code		1248896	0					
ANR	1248905	CallExpression	"shade_next_coords ( cs , & curve -> vertex . p , 1 )"		1248896	1					
ANR	1248906	Callee	shade_next_coords		1248896	0					
ANR	1248907	Identifier	shade_next_coords		1248896	0					
ANR	1248908	ArgumentList	cs		1248896	1					
ANR	1248909	Argument	cs		1248896	0					
ANR	1248910	Identifier	cs		1248896	0					
ANR	1248911	Argument	& curve -> vertex . p		1248896	1					
ANR	1248912	UnaryOperationExpression	& curve -> vertex . p		1248896	0					
ANR	1248913	UnaryOperator	&		1248896	0					
ANR	1248914	MemberAccess	curve -> vertex . p		1248896	1					
ANR	1248915	PtrMemberAccess	curve -> vertex		1248896	0					
ANR	1248916	Identifier	curve		1248896	0					
ANR	1248917	Identifier	vertex		1248896	1					
ANR	1248918	Identifier	p		1248896	1					
ANR	1248919	Argument	1		1248896	2					
ANR	1248920	PrimaryExpression	1		1248896	0					
ANR	1248921	IfStatement	if ( code >= 0 )		1248896	1					
ANR	1248922	Condition	code >= 0	160:8:5367:5375	1248896	0	True				
ANR	1248923	RelationalExpression	code >= 0		1248896	0		>=			
ANR	1248924	Identifier	code		1248896	0					
ANR	1248925	PrimaryExpression	0		1248896	1					
ANR	1248926	ExpressionStatement	"code = shade_next_coords ( cs , curve -> control , countof ( curve -> control ) )"	161:8:5386:5488	1248896	1	True				
ANR	1248927	AssignmentExpression	"code = shade_next_coords ( cs , curve -> control , countof ( curve -> control ) )"		1248896	0		=			
ANR	1248928	Identifier	code		1248896	0					
ANR	1248929	CallExpression	"shade_next_coords ( cs , curve -> control , countof ( curve -> control ) )"		1248896	1					
ANR	1248930	Callee	shade_next_coords		1248896	0					
ANR	1248931	Identifier	shade_next_coords		1248896	0					
ANR	1248932	ArgumentList	cs		1248896	1					
ANR	1248933	Argument	cs		1248896	0					
ANR	1248934	Identifier	cs		1248896	0					
ANR	1248935	Argument	curve -> control		1248896	1					
ANR	1248936	PtrMemberAccess	curve -> control		1248896	0					
ANR	1248937	Identifier	curve		1248896	0					
ANR	1248938	Identifier	control		1248896	1					
ANR	1248939	Argument	countof ( curve -> control )		1248896	2					
ANR	1248940	CallExpression	countof ( curve -> control )		1248896	0					
ANR	1248941	Callee	countof		1248896	0					
ANR	1248942	Identifier	countof		1248896	0					
ANR	1248943	ArgumentList	curve -> control		1248896	1					
ANR	1248944	Argument	curve -> control		1248896	0					
ANR	1248945	PtrMemberAccess	curve -> control		1248896	0					
ANR	1248946	Identifier	curve		1248896	0					
ANR	1248947	Identifier	control		1248896	1					
ANR	1248948	ReturnStatement	return code ;	163:4:5494:5505	1248896	2	True				
ANR	1248949	Identifier	code		1248896	0					
ANR	1248950	ReturnType	static int		1248896	1					
ANR	1248951	Identifier	shade_next_curve		1248896	2					
ANR	1248952	ParameterList	"shade_coord_stream_t * cs , patch_curve_t * curve"		1248896	3					
ANR	1248953	Parameter	shade_coord_stream_t * cs	156:17:5247:5271	1248896	0	True				
ANR	1248954	ParameterType	shade_coord_stream_t *		1248896	0					
ANR	1248955	Identifier	cs		1248896	1					
ANR	1248956	Parameter	patch_curve_t * curve	156:44:5274:5294	1248896	1	True				
ANR	1248957	ParameterType	patch_curve_t *		1248896	0					
ANR	1248958	Identifier	curve		1248896	1					
ANR	1248959	CFGEntryNode	ENTRY		1248896		True				
ANR	1248960	CFGExitNode	EXIT		1248896		True				
ANR	1248961	Symbol	cs		1248896						
ANR	1248962	Symbol	curve -> vertex		1248896						
ANR	1248963	Symbol	curve -> control		1248896						
ANR	1248964	Symbol	countof		1248896						
ANR	1248965	Symbol	* curve		1248896						
ANR	1248966	Symbol	code		1248896						
ANR	1248967	Symbol	& curve -> vertex . p		1248896						
ANR	1248968	Symbol	curve		1248896						
ANR	1248969	Symbol	shade_next_coords		1248896						
ANR	1248970	Symbol	& curve -> vertex		1248896						
ANR	1248971	Function	shade_next_patch	170:0:5613:7242							
ANR	1248972	FunctionDef	"shade_next_patch (shade_coord_stream_t * cs , int BitsPerFlag , patch_curve_t curve [ 4 ] , gs_fixed_point interior [ 4 ])"		1248971	0					
ANR	1248973	CompoundStatement		173:0:5770:7242	1248971	0					
ANR	1248974	IdentifierDeclStatement	"int flag = shade_next_flag ( cs , BitsPerFlag ) ;"	174:4:5776:5819	1248971	0	True				
ANR	1248975	IdentifierDecl	"flag = shade_next_flag ( cs , BitsPerFlag )"		1248971	0					
ANR	1248976	IdentifierDeclType	int		1248971	0					
ANR	1248977	Identifier	flag		1248971	1					
ANR	1248978	AssignmentExpression	"flag = shade_next_flag ( cs , BitsPerFlag )"		1248971	2		=			
ANR	1248979	Identifier	flag		1248971	0					
ANR	1248980	CallExpression	"shade_next_flag ( cs , BitsPerFlag )"		1248971	1					
ANR	1248981	Callee	shade_next_flag		1248971	0					
ANR	1248982	Identifier	shade_next_flag		1248971	0					
ANR	1248983	ArgumentList	cs		1248971	1					
ANR	1248984	Argument	cs		1248971	0					
ANR	1248985	Identifier	cs		1248971	0					
ANR	1248986	Argument	BitsPerFlag		1248971	1					
ANR	1248987	Identifier	BitsPerFlag		1248971	0					
ANR	1248988	IdentifierDeclStatement	"int num_colors , code ;"	175:4:5825:5845	1248971	1	True				
ANR	1248989	IdentifierDecl	num_colors		1248971	0					
ANR	1248990	IdentifierDeclType	int		1248971	0					
ANR	1248991	Identifier	num_colors		1248971	1					
ANR	1248992	IdentifierDecl	code		1248971	1					
ANR	1248993	IdentifierDeclType	int		1248971	0					
ANR	1248994	Identifier	code		1248971	1					
ANR	1248995	IfStatement	if ( flag < 0 )		1248971	2					
ANR	1248996	Condition	flag < 0	177:8:5856:5863	1248971	0	True				
ANR	1248997	RelationalExpression	flag < 0		1248971	0		<			
ANR	1248998	Identifier	flag		1248971	0					
ANR	1248999	PrimaryExpression	0		1248971	1					
ANR	1249000	CompoundStatement		5:18:95:95	1248971	1					
ANR	1249001	IfStatement	if ( ! cs -> is_eod ( cs ) )		1248971	0					
ANR	1249002	Condition	! cs -> is_eod ( cs )	178:12:5880:5894	1248971	0	True				
ANR	1249003	UnaryOperationExpression	! cs -> is_eod ( cs )		1248971	0					
ANR	1249004	UnaryOperator	!		1248971	0					
ANR	1249005	CallExpression	cs -> is_eod ( cs )		1248971	1					
ANR	1249006	Callee	cs -> is_eod		1248971	0					
ANR	1249007	PtrMemberAccess	cs -> is_eod		1248971	0					
ANR	1249008	Identifier	cs		1248971	0					
ANR	1249009	Identifier	is_eod		1248971	1					
ANR	1249010	ArgumentList	cs		1248971	1					
ANR	1249011	Argument	cs		1248971	0					
ANR	1249012	Identifier	cs		1248971	0					
ANR	1249013	ExpressionStatement	return_error ( gs_error_rangecheck )	179:12:5909:5942	1248971	1	True				
ANR	1249014	CallExpression	return_error ( gs_error_rangecheck )		1248971	0					
ANR	1249015	Callee	return_error		1248971	0					
ANR	1249016	Identifier	return_error		1248971	0					
ANR	1249017	ArgumentList	gs_error_rangecheck		1248971	1					
ANR	1249018	Argument	gs_error_rangecheck		1248971	0					
ANR	1249019	Identifier	gs_error_rangecheck		1248971	0					
ANR	1249020	ReturnStatement	return 1 ;	180:8:5952:5960	1248971	1	True				
ANR	1249021	PrimaryExpression	1		1248971	0					
ANR	1249022	SwitchStatement	switch ( flag & 3 )		1248971	3					
ANR	1249023	Condition	flag & 3	182:12:6013:6020	1248971	0	True				
ANR	1249024	BitAndExpression	flag & 3		1248971	0		&			
ANR	1249025	Identifier	flag		1248971	0					
ANR	1249026	PrimaryExpression	3		1248971	1					
ANR	1249027	CompoundStatement		10:22:252:252	1248971	1					
ANR	1249028	Label	default :	183:8:6033:6040	1248971	0	True				
ANR	1249029	Identifier	default		1248971	0					
ANR	1249030	ExpressionStatement	return_error ( gs_error_rangecheck )	184:12:6054:6087	1248971	1	True				
ANR	1249031	CallExpression	return_error ( gs_error_rangecheck )		1248971	0					
ANR	1249032	Callee	return_error		1248971	0					
ANR	1249033	Identifier	return_error		1248971	0					
ANR	1249034	ArgumentList	gs_error_rangecheck		1248971	1					
ANR	1249035	Argument	gs_error_rangecheck		1248971	0					
ANR	1249036	Identifier	gs_error_rangecheck		1248971	0					
ANR	1249037	Label	case 0 :	185:8:6117:6123	1248971	2	True				
ANR	1249038	IfStatement	"if ( ( code = shade_next_curve ( cs , & curve [ 0 ] ) ) < 0 || ( code = shade_next_coords ( cs , & curve [ 1 ] . vertex . p , 1 ) ) < 0 )"		1248971	3					
ANR	1249039	Condition	"( code = shade_next_curve ( cs , & curve [ 0 ] ) ) < 0 || ( code = shade_next_coords ( cs , & curve [ 1 ] . vertex . p , 1 ) ) < 0"	186:16:6141:6261	1248971	0	True				
ANR	1249040	OrExpression	"( code = shade_next_curve ( cs , & curve [ 0 ] ) ) < 0 || ( code = shade_next_coords ( cs , & curve [ 1 ] . vertex . p , 1 ) ) < 0"		1248971	0		||			
ANR	1249041	RelationalExpression	"( code = shade_next_curve ( cs , & curve [ 0 ] ) ) < 0"		1248971	0		<			
ANR	1249042	AssignmentExpression	"code = shade_next_curve ( cs , & curve [ 0 ] )"		1248971	0		=			
ANR	1249043	Identifier	code		1248971	0					
ANR	1249044	CallExpression	"shade_next_curve ( cs , & curve [ 0 ] )"		1248971	1					
ANR	1249045	Callee	shade_next_curve		1248971	0					
ANR	1249046	Identifier	shade_next_curve		1248971	0					
ANR	1249047	ArgumentList	cs		1248971	1					
ANR	1249048	Argument	cs		1248971	0					
ANR	1249049	Identifier	cs		1248971	0					
ANR	1249050	Argument	& curve [ 0 ]		1248971	1					
ANR	1249051	UnaryOperationExpression	& curve [ 0 ]		1248971	0					
ANR	1249052	UnaryOperator	&		1248971	0					
ANR	1249053	ArrayIndexing	curve [ 0 ]		1248971	1					
ANR	1249054	Identifier	curve		1248971	0					
ANR	1249055	PrimaryExpression	0		1248971	1					
ANR	1249056	PrimaryExpression	0		1248971	1					
ANR	1249057	RelationalExpression	"( code = shade_next_coords ( cs , & curve [ 1 ] . vertex . p , 1 ) ) < 0"		1248971	1		<			
ANR	1249058	AssignmentExpression	"code = shade_next_coords ( cs , & curve [ 1 ] . vertex . p , 1 )"		1248971	0		=			
ANR	1249059	Identifier	code		1248971	0					
ANR	1249060	CallExpression	"shade_next_coords ( cs , & curve [ 1 ] . vertex . p , 1 )"		1248971	1					
ANR	1249061	Callee	shade_next_coords		1248971	0					
ANR	1249062	Identifier	shade_next_coords		1248971	0					
ANR	1249063	ArgumentList	cs		1248971	1					
ANR	1249064	Argument	cs		1248971	0					
ANR	1249065	Identifier	cs		1248971	0					
ANR	1249066	Argument	& curve [ 1 ] . vertex . p		1248971	1					
ANR	1249067	UnaryOperationExpression	& curve [ 1 ] . vertex . p		1248971	0					
ANR	1249068	UnaryOperator	&		1248971	0					
ANR	1249069	MemberAccess	curve [ 1 ] . vertex . p		1248971	1					
ANR	1249070	MemberAccess	curve [ 1 ] . vertex		1248971	0					
ANR	1249071	ArrayIndexing	curve [ 1 ]		1248971	0					
ANR	1249072	Identifier	curve		1248971	0					
ANR	1249073	PrimaryExpression	1		1248971	1					
ANR	1249074	Identifier	vertex		1248971	1					
ANR	1249075	Identifier	p		1248971	1					
ANR	1249076	Argument	1		1248971	2					
ANR	1249077	PrimaryExpression	1		1248971	0					
ANR	1249078	PrimaryExpression	0		1248971	1					
ANR	1249079	ReturnStatement	return code ;	189:16:6297:6308	1248971	1	True				
ANR	1249080	Identifier	code		1248971	0					
ANR	1249081	ExpressionStatement	num_colors = 4	190:12:6322:6336	1248971	4	True				
ANR	1249082	AssignmentExpression	num_colors = 4		1248971	0		=			
ANR	1249083	Identifier	num_colors		1248971	0					
ANR	1249084	PrimaryExpression	4		1248971	1					
ANR	1249085	GotoStatement	goto vx ;	191:12:6350:6357	1248971	5	True				
ANR	1249086	Identifier	vx		1248971	0					
ANR	1249087	Label	case 1 :	192:8:6367:6373	1248971	6	True				
ANR	1249088	ExpressionStatement	"curve [ 0 ] = curve [ 1 ] , curve [ 1 ] . vertex = curve [ 2 ] . vertex"	193:12:6387:6441	1248971	7	True				
ANR	1249089	Expression	"curve [ 0 ] = curve [ 1 ] , curve [ 1 ] . vertex = curve [ 2 ] . vertex"		1248971	0					
ANR	1249090	AssignmentExpression	curve [ 0 ] = curve [ 1 ]		1248971	0		=			
ANR	1249091	ArrayIndexing	curve [ 0 ]		1248971	0					
ANR	1249092	Identifier	curve		1248971	0					
ANR	1249093	PrimaryExpression	0		1248971	1					
ANR	1249094	ArrayIndexing	curve [ 1 ]		1248971	1					
ANR	1249095	Identifier	curve		1248971	0					
ANR	1249096	PrimaryExpression	1		1248971	1					
ANR	1249097	AssignmentExpression	curve [ 1 ] . vertex = curve [ 2 ] . vertex		1248971	1		=			
ANR	1249098	MemberAccess	curve [ 1 ] . vertex		1248971	0					
ANR	1249099	ArrayIndexing	curve [ 1 ]		1248971	0					
ANR	1249100	Identifier	curve		1248971	0					
ANR	1249101	PrimaryExpression	1		1248971	1					
ANR	1249102	Identifier	vertex		1248971	1					
ANR	1249103	MemberAccess	curve [ 2 ] . vertex		1248971	1					
ANR	1249104	ArrayIndexing	curve [ 2 ]		1248971	0					
ANR	1249105	Identifier	curve		1248971	0					
ANR	1249106	PrimaryExpression	2		1248971	1					
ANR	1249107	Identifier	vertex		1248971	1					
ANR	1249108	GotoStatement	goto v3 ;	194:12:6455:6462	1248971	8	True				
ANR	1249109	Identifier	v3		1248971	0					
ANR	1249110	Label	case 2 :	195:8:6472:6478	1248971	9	True				
ANR	1249111	ExpressionStatement	"curve [ 0 ] = curve [ 2 ] , curve [ 1 ] . vertex = curve [ 3 ] . vertex"	196:12:6492:6546	1248971	10	True				
ANR	1249112	Expression	"curve [ 0 ] = curve [ 2 ] , curve [ 1 ] . vertex = curve [ 3 ] . vertex"		1248971	0					
ANR	1249113	AssignmentExpression	curve [ 0 ] = curve [ 2 ]		1248971	0		=			
ANR	1249114	ArrayIndexing	curve [ 0 ]		1248971	0					
ANR	1249115	Identifier	curve		1248971	0					
ANR	1249116	PrimaryExpression	0		1248971	1					
ANR	1249117	ArrayIndexing	curve [ 2 ]		1248971	1					
ANR	1249118	Identifier	curve		1248971	0					
ANR	1249119	PrimaryExpression	2		1248971	1					
ANR	1249120	AssignmentExpression	curve [ 1 ] . vertex = curve [ 3 ] . vertex		1248971	1		=			
ANR	1249121	MemberAccess	curve [ 1 ] . vertex		1248971	0					
ANR	1249122	ArrayIndexing	curve [ 1 ]		1248971	0					
ANR	1249123	Identifier	curve		1248971	0					
ANR	1249124	PrimaryExpression	1		1248971	1					
ANR	1249125	Identifier	vertex		1248971	1					
ANR	1249126	MemberAccess	curve [ 3 ] . vertex		1248971	1					
ANR	1249127	ArrayIndexing	curve [ 3 ]		1248971	0					
ANR	1249128	Identifier	curve		1248971	0					
ANR	1249129	PrimaryExpression	3		1248971	1					
ANR	1249130	Identifier	vertex		1248971	1					
ANR	1249131	GotoStatement	goto v3 ;	197:12:6560:6567	1248971	11	True				
ANR	1249132	Identifier	v3		1248971	0					
ANR	1249133	Label	case 3 :	198:8:6577:6583	1248971	12	True				
ANR	1249134	ExpressionStatement	"curve [ 1 ] . vertex = curve [ 0 ] . vertex , curve [ 0 ] = curve [ 3 ]"	199:12:6597:6651	1248971	13	True				
ANR	1249135	Expression	"curve [ 1 ] . vertex = curve [ 0 ] . vertex , curve [ 0 ] = curve [ 3 ]"		1248971	0					
ANR	1249136	AssignmentExpression	curve [ 1 ] . vertex = curve [ 0 ] . vertex		1248971	0		=			
ANR	1249137	MemberAccess	curve [ 1 ] . vertex		1248971	0					
ANR	1249138	ArrayIndexing	curve [ 1 ]		1248971	0					
ANR	1249139	Identifier	curve		1248971	0					
ANR	1249140	PrimaryExpression	1		1248971	1					
ANR	1249141	Identifier	vertex		1248971	1					
ANR	1249142	MemberAccess	curve [ 0 ] . vertex		1248971	1					
ANR	1249143	ArrayIndexing	curve [ 0 ]		1248971	0					
ANR	1249144	Identifier	curve		1248971	0					
ANR	1249145	PrimaryExpression	0		1248971	1					
ANR	1249146	Identifier	vertex		1248971	1					
ANR	1249147	AssignmentExpression	curve [ 0 ] = curve [ 3 ]		1248971	1		=			
ANR	1249148	ArrayIndexing	curve [ 0 ]		1248971	0					
ANR	1249149	Identifier	curve		1248971	0					
ANR	1249150	PrimaryExpression	0		1248971	1					
ANR	1249151	ArrayIndexing	curve [ 3 ]		1248971	1					
ANR	1249152	Identifier	curve		1248971	0					
ANR	1249153	PrimaryExpression	3		1248971	1					
ANR	1249154	Label	v3 :	200:0:6653:6655	1248971	14	True				
ANR	1249155	Identifier	v3		1248971	0					
ANR	1249156	ExpressionStatement	num_colors = 2	200:12:6665:6679	1248971	15	True				
ANR	1249157	AssignmentExpression	num_colors = 2		1248971	0		=			
ANR	1249158	Identifier	num_colors		1248971	0					
ANR	1249159	PrimaryExpression	2		1248971	1					
ANR	1249160	Label	vx :	201:0:6681:6683	1248971	16	True				
ANR	1249161	Identifier	vx		1248971	0					
ANR	1249162	IfStatement	"if ( ( code = shade_next_coords ( cs , curve [ 1 ] . control , 2 ) ) < 0 || ( code = shade_next_curve ( cs , & curve [ 2 ] ) ) < 0 || ( code = shade_next_curve ( cs , & curve [ 3 ] ) ) < 0 || ( interior != 0 && ( code = shade_next_coords ( cs , interior , 4 ) ) < 0 ) || ( code = shade_next_colors ( cs , & curve [ 4 - num_colors ] , num_colors ) ) < 0 )"		1248971	17					
ANR	1249163	Condition	"( code = shade_next_coords ( cs , curve [ 1 ] . control , 2 ) ) < 0 || ( code = shade_next_curve ( cs , & curve [ 2 ] ) ) < 0 || ( code = shade_next_curve ( cs , & curve [ 3 ] ) ) < 0 || ( interior != 0 && ( code = shade_next_coords ( cs , interior , 4 ) ) < 0 ) || ( code = shade_next_colors ( cs , & curve [ 4 - num_colors ] , num_colors ) ) < 0"	201:16:6697:7114	1248971	0	True				
ANR	1249164	OrExpression	"( code = shade_next_coords ( cs , curve [ 1 ] . control , 2 ) ) < 0 || ( code = shade_next_curve ( cs , & curve [ 2 ] ) ) < 0 || ( code = shade_next_curve ( cs , & curve [ 3 ] ) ) < 0 || ( interior != 0 && ( code = shade_next_coords ( cs , interior , 4 ) ) < 0 ) || ( code = shade_next_colors ( cs , & curve [ 4 - num_colors ] , num_colors ) ) < 0"		1248971	0		||			
ANR	1249165	RelationalExpression	"( code = shade_next_coords ( cs , curve [ 1 ] . control , 2 ) ) < 0"		1248971	0		<			
ANR	1249166	AssignmentExpression	"code = shade_next_coords ( cs , curve [ 1 ] . control , 2 )"		1248971	0		=			
ANR	1249167	Identifier	code		1248971	0					
ANR	1249168	CallExpression	"shade_next_coords ( cs , curve [ 1 ] . control , 2 )"		1248971	1					
ANR	1249169	Callee	shade_next_coords		1248971	0					
ANR	1249170	Identifier	shade_next_coords		1248971	0					
ANR	1249171	ArgumentList	cs		1248971	1					
ANR	1249172	Argument	cs		1248971	0					
ANR	1249173	Identifier	cs		1248971	0					
ANR	1249174	Argument	curve [ 1 ] . control		1248971	1					
ANR	1249175	MemberAccess	curve [ 1 ] . control		1248971	0					
ANR	1249176	ArrayIndexing	curve [ 1 ]		1248971	0					
ANR	1249177	Identifier	curve		1248971	0					
ANR	1249178	PrimaryExpression	1		1248971	1					
ANR	1249179	Identifier	control		1248971	1					
ANR	1249180	Argument	2		1248971	2					
ANR	1249181	PrimaryExpression	2		1248971	0					
ANR	1249182	PrimaryExpression	0		1248971	1					
ANR	1249183	OrExpression	"( code = shade_next_curve ( cs , & curve [ 2 ] ) ) < 0 || ( code = shade_next_curve ( cs , & curve [ 3 ] ) ) < 0 || ( interior != 0 && ( code = shade_next_coords ( cs , interior , 4 ) ) < 0 ) || ( code = shade_next_colors ( cs , & curve [ 4 - num_colors ] , num_colors ) ) < 0"		1248971	1		||			
ANR	1249184	RelationalExpression	"( code = shade_next_curve ( cs , & curve [ 2 ] ) ) < 0"		1248971	0		<			
ANR	1249185	AssignmentExpression	"code = shade_next_curve ( cs , & curve [ 2 ] )"		1248971	0		=			
ANR	1249186	Identifier	code		1248971	0					
ANR	1249187	CallExpression	"shade_next_curve ( cs , & curve [ 2 ] )"		1248971	1					
ANR	1249188	Callee	shade_next_curve		1248971	0					
ANR	1249189	Identifier	shade_next_curve		1248971	0					
ANR	1249190	ArgumentList	cs		1248971	1					
ANR	1249191	Argument	cs		1248971	0					
ANR	1249192	Identifier	cs		1248971	0					
ANR	1249193	Argument	& curve [ 2 ]		1248971	1					
ANR	1249194	UnaryOperationExpression	& curve [ 2 ]		1248971	0					
ANR	1249195	UnaryOperator	&		1248971	0					
ANR	1249196	ArrayIndexing	curve [ 2 ]		1248971	1					
ANR	1249197	Identifier	curve		1248971	0					
ANR	1249198	PrimaryExpression	2		1248971	1					
ANR	1249199	PrimaryExpression	0		1248971	1					
ANR	1249200	OrExpression	"( code = shade_next_curve ( cs , & curve [ 3 ] ) ) < 0 || ( interior != 0 && ( code = shade_next_coords ( cs , interior , 4 ) ) < 0 ) || ( code = shade_next_colors ( cs , & curve [ 4 - num_colors ] , num_colors ) ) < 0"		1248971	1		||			
ANR	1249201	RelationalExpression	"( code = shade_next_curve ( cs , & curve [ 3 ] ) ) < 0"		1248971	0		<			
ANR	1249202	AssignmentExpression	"code = shade_next_curve ( cs , & curve [ 3 ] )"		1248971	0		=			
ANR	1249203	Identifier	code		1248971	0					
ANR	1249204	CallExpression	"shade_next_curve ( cs , & curve [ 3 ] )"		1248971	1					
ANR	1249205	Callee	shade_next_curve		1248971	0					
ANR	1249206	Identifier	shade_next_curve		1248971	0					
ANR	1249207	ArgumentList	cs		1248971	1					
ANR	1249208	Argument	cs		1248971	0					
ANR	1249209	Identifier	cs		1248971	0					
ANR	1249210	Argument	& curve [ 3 ]		1248971	1					
ANR	1249211	UnaryOperationExpression	& curve [ 3 ]		1248971	0					
ANR	1249212	UnaryOperator	&		1248971	0					
ANR	1249213	ArrayIndexing	curve [ 3 ]		1248971	1					
ANR	1249214	Identifier	curve		1248971	0					
ANR	1249215	PrimaryExpression	3		1248971	1					
ANR	1249216	PrimaryExpression	0		1248971	1					
ANR	1249217	OrExpression	"( interior != 0 && ( code = shade_next_coords ( cs , interior , 4 ) ) < 0 ) || ( code = shade_next_colors ( cs , & curve [ 4 - num_colors ] , num_colors ) ) < 0"		1248971	1		||			
ANR	1249218	AndExpression	"interior != 0 && ( code = shade_next_coords ( cs , interior , 4 ) ) < 0"		1248971	0		&&			
ANR	1249219	EqualityExpression	interior != 0		1248971	0		!=			
ANR	1249220	Identifier	interior		1248971	0					
ANR	1249221	PrimaryExpression	0		1248971	1					
ANR	1249222	RelationalExpression	"( code = shade_next_coords ( cs , interior , 4 ) ) < 0"		1248971	1		<			
ANR	1249223	AssignmentExpression	"code = shade_next_coords ( cs , interior , 4 )"		1248971	0		=			
ANR	1249224	Identifier	code		1248971	0					
ANR	1249225	CallExpression	"shade_next_coords ( cs , interior , 4 )"		1248971	1					
ANR	1249226	Callee	shade_next_coords		1248971	0					
ANR	1249227	Identifier	shade_next_coords		1248971	0					
ANR	1249228	ArgumentList	cs		1248971	1					
ANR	1249229	Argument	cs		1248971	0					
ANR	1249230	Identifier	cs		1248971	0					
ANR	1249231	Argument	interior		1248971	1					
ANR	1249232	Identifier	interior		1248971	0					
ANR	1249233	Argument	4		1248971	2					
ANR	1249234	PrimaryExpression	4		1248971	0					
ANR	1249235	PrimaryExpression	0		1248971	1					
ANR	1249236	RelationalExpression	"( code = shade_next_colors ( cs , & curve [ 4 - num_colors ] , num_colors ) ) < 0"		1248971	1		<			
ANR	1249237	AssignmentExpression	"code = shade_next_colors ( cs , & curve [ 4 - num_colors ] , num_colors )"		1248971	0		=			
ANR	1249238	Identifier	code		1248971	0					
ANR	1249239	CallExpression	"shade_next_colors ( cs , & curve [ 4 - num_colors ] , num_colors )"		1248971	1					
ANR	1249240	Callee	shade_next_colors		1248971	0					
ANR	1249241	Identifier	shade_next_colors		1248971	0					
ANR	1249242	ArgumentList	cs		1248971	1					
ANR	1249243	Argument	cs		1248971	0					
ANR	1249244	Identifier	cs		1248971	0					
ANR	1249245	Argument	& curve [ 4 - num_colors ]		1248971	1					
ANR	1249246	UnaryOperationExpression	& curve [ 4 - num_colors ]		1248971	0					
ANR	1249247	UnaryOperator	&		1248971	0					
ANR	1249248	ArrayIndexing	curve [ 4 - num_colors ]		1248971	1					
ANR	1249249	Identifier	curve		1248971	0					
ANR	1249250	AdditiveExpression	4 - num_colors		1248971	1		-			
ANR	1249251	PrimaryExpression	4		1248971	0					
ANR	1249252	Identifier	num_colors		1248971	1					
ANR	1249253	Argument	num_colors		1248971	2					
ANR	1249254	Identifier	num_colors		1248971	0					
ANR	1249255	PrimaryExpression	0		1248971	1					
ANR	1249256	ReturnStatement	return code ;	209:16:7150:7161	1248971	1	True				
ANR	1249257	Identifier	code		1248971	0					
ANR	1249258	ExpressionStatement	"cs -> align ( cs , 8 )"	210:12:7175:7191	1248971	18	True				
ANR	1249259	CallExpression	"cs -> align ( cs , 8 )"		1248971	0					
ANR	1249260	Callee	cs -> align		1248971	0					
ANR	1249261	PtrMemberAccess	cs -> align		1248971	0					
ANR	1249262	Identifier	cs		1248971	0					
ANR	1249263	Identifier	align		1248971	1					
ANR	1249264	ArgumentList	cs		1248971	1					
ANR	1249265	Argument	cs		1248971	0					
ANR	1249266	Identifier	cs		1248971	0					
ANR	1249267	Argument	8		1248971	1					
ANR	1249268	PrimaryExpression	8		1248971	0					
ANR	1249269	ReturnStatement	return 0 ;	212:4:7232:7240	1248971	4	True				
ANR	1249270	PrimaryExpression	0		1248971	0					
ANR	1249271	ReturnType	static int		1248971	1					
ANR	1249272	Identifier	shade_next_patch		1248971	2					
ANR	1249273	ParameterList	"shade_coord_stream_t * cs , int BitsPerFlag , patch_curve_t curve [ 4 ] , gs_fixed_point interior [ 4 ]"		1248971	3					
ANR	1249274	Parameter	shade_coord_stream_t * cs	171:17:5641:5665	1248971	0	True				
ANR	1249275	ParameterType	shade_coord_stream_t *		1248971	0					
ANR	1249276	Identifier	cs		1248971	1					
ANR	1249277	Parameter	int BitsPerFlag	171:44:5668:5682	1248971	1	True				
ANR	1249278	ParameterType	int		1248971	0					
ANR	1249279	Identifier	BitsPerFlag		1248971	1					
ANR	1249280	Parameter	patch_curve_t curve [ 4 ]	172:8:5693:5714	1248971	2	True				
ANR	1249281	ParameterType	patch_curve_t [ 4 ]		1248971	0					
ANR	1249282	Identifier	curve		1248971	1					
ANR	1249283	Parameter	gs_fixed_point interior [ 4 ]	172:32:5717:5742	1248971	3	True				
ANR	1249284	ParameterType	gs_fixed_point [ 4 ]		1248971	0					
ANR	1249285	Identifier	interior		1248971	1					
ANR	1249286	CFGEntryNode	ENTRY		1248971		True				
ANR	1249287	CFGExitNode	EXIT		1248971		True				
ANR	1249288	Symbol	curve [ 3 ] . vertex		1248971						
ANR	1249289	Symbol	flag		1248971						
ANR	1249290	Symbol	code		1248971						
ANR	1249291	Symbol	gs_error_rangecheck		1248971						
ANR	1249292	Symbol	curve [ 1 ] . vertex		1248971						
ANR	1249293	Symbol	curve		1248971						
ANR	1249294	Symbol	cs -> is_eod		1248971						
ANR	1249295	Symbol	shade_next_coords		1248971						
ANR	1249296	Symbol	& curve [ 1 ] . vertex		1248971						
ANR	1249297	Symbol	curve [ 1 ] . control		1248971						
ANR	1249298	Symbol	num_colors		1248971						
ANR	1249299	Symbol	interior		1248971						
ANR	1249300	Symbol	cs		1248971						
ANR	1249301	Symbol	BitsPerFlag		1248971						
ANR	1249302	Symbol	shade_next_flag		1248971						
ANR	1249303	Symbol	* curve		1248971						
ANR	1249304	Symbol	shade_next_colors		1248971						
ANR	1249305	Symbol	* cs		1248971						
ANR	1249306	Symbol	& curve [ 1 ] . vertex . p		1248971						
ANR	1249307	Symbol	curve [ 2 ] . vertex		1248971						
ANR	1249308	Symbol	curve [ 0 ] . vertex		1248971						
ANR	1249309	Symbol	shade_next_curve		1248971						
ANR	1249310	Function	is_linear_color_applicable	215:0:7245:7586							
ANR	1249311	FunctionDef	is_linear_color_applicable (const patch_fill_state_t * pfs)		1249310	0					
ANR	1249312	CompoundStatement		217:0:7322:7586	1249310	0					
ANR	1249313	IfStatement	if ( ! USE_LINEAR_COLOR_PROCS )		1249310	0					
ANR	1249314	Condition	! USE_LINEAR_COLOR_PROCS	218:8:7332:7354	1249310	0	True				
ANR	1249315	UnaryOperationExpression	! USE_LINEAR_COLOR_PROCS		1249310	0					
ANR	1249316	UnaryOperator	!		1249310	0					
ANR	1249317	Identifier	USE_LINEAR_COLOR_PROCS		1249310	1					
ANR	1249318	ReturnStatement	return false ;	219:8:7365:7377	1249310	1	True				
ANR	1249319	Identifier	false		1249310	0					
ANR	1249320	IfStatement	if ( ! colors_are_separable_and_linear ( & pfs -> dev -> color_info ) )		1249310	1					
ANR	1249321	Condition	! colors_are_separable_and_linear ( & pfs -> dev -> color_info )	220:8:7387:7441	1249310	0	True				
ANR	1249322	UnaryOperationExpression	! colors_are_separable_and_linear ( & pfs -> dev -> color_info )		1249310	0					
ANR	1249323	UnaryOperator	!		1249310	0					
ANR	1249324	CallExpression	colors_are_separable_and_linear ( & pfs -> dev -> color_info )		1249310	1					
ANR	1249325	Callee	colors_are_separable_and_linear		1249310	0					
ANR	1249326	Identifier	colors_are_separable_and_linear		1249310	0					
ANR	1249327	ArgumentList	& pfs -> dev -> color_info		1249310	1					
ANR	1249328	Argument	& pfs -> dev -> color_info		1249310	0					
ANR	1249329	UnaryOperationExpression	& pfs -> dev -> color_info		1249310	0					
ANR	1249330	UnaryOperator	&		1249310	0					
ANR	1249331	PtrMemberAccess	pfs -> dev -> color_info		1249310	1					
ANR	1249332	PtrMemberAccess	pfs -> dev		1249310	0					
ANR	1249333	Identifier	pfs		1249310	0					
ANR	1249334	Identifier	dev		1249310	1					
ANR	1249335	Identifier	color_info		1249310	1					
ANR	1249336	ReturnStatement	return false ;	221:8:7452:7464	1249310	1	True				
ANR	1249337	Identifier	false		1249310	0					
ANR	1249338	IfStatement	"if ( gx_get_cmap_procs ( pfs -> pgs , pfs -> dev ) -> is_halftoned ( pfs -> pgs , pfs -> dev ) )"		1249310	2					
ANR	1249339	Condition	"gx_get_cmap_procs ( pfs -> pgs , pfs -> dev ) -> is_halftoned ( pfs -> pgs , pfs -> dev )"	222:8:7474:7544	1249310	0	True				
ANR	1249340	CallExpression	"gx_get_cmap_procs ( pfs -> pgs , pfs -> dev ) -> is_halftoned ( pfs -> pgs , pfs -> dev )"		1249310	0					
ANR	1249341	Callee	"gx_get_cmap_procs ( pfs -> pgs , pfs -> dev ) -> is_halftoned"		1249310	0					
ANR	1249342	PtrMemberAccess	"gx_get_cmap_procs ( pfs -> pgs , pfs -> dev ) -> is_halftoned"		1249310	0					
ANR	1249343	CallExpression	"gx_get_cmap_procs ( pfs -> pgs , pfs -> dev )"		1249310	0					
ANR	1249344	Callee	gx_get_cmap_procs		1249310	0					
ANR	1249345	Identifier	gx_get_cmap_procs		1249310	0					
ANR	1249346	ArgumentList	pfs -> pgs		1249310	1					
ANR	1249347	Argument	pfs -> pgs		1249310	0					
ANR	1249348	PtrMemberAccess	pfs -> pgs		1249310	0					
ANR	1249349	Identifier	pfs		1249310	0					
ANR	1249350	Identifier	pgs		1249310	1					
ANR	1249351	Argument	pfs -> dev		1249310	1					
ANR	1249352	PtrMemberAccess	pfs -> dev		1249310	0					
ANR	1249353	Identifier	pfs		1249310	0					
ANR	1249354	Identifier	dev		1249310	1					
ANR	1249355	Identifier	is_halftoned		1249310	1					
ANR	1249356	ArgumentList	pfs -> pgs		1249310	1					
ANR	1249357	Argument	pfs -> pgs		1249310	0					
ANR	1249358	PtrMemberAccess	pfs -> pgs		1249310	0					
ANR	1249359	Identifier	pfs		1249310	0					
ANR	1249360	Identifier	pgs		1249310	1					
ANR	1249361	Argument	pfs -> dev		1249310	1					
ANR	1249362	PtrMemberAccess	pfs -> dev		1249310	0					
ANR	1249363	Identifier	pfs		1249310	0					
ANR	1249364	Identifier	dev		1249310	1					
ANR	1249365	ReturnStatement	return false ;	223:8:7555:7567	1249310	1	True				
ANR	1249366	Identifier	false		1249310	0					
ANR	1249367	ReturnStatement	return true ;	224:4:7573:7584	1249310	3	True				
ANR	1249368	Identifier	true		1249310	0					
ANR	1249369	ReturnType	static inline bool		1249310	1					
ANR	1249370	Identifier	is_linear_color_applicable		1249310	2					
ANR	1249371	ParameterList	const patch_fill_state_t * pfs		1249310	3					
ANR	1249372	Parameter	const patch_fill_state_t * pfs	216:27:7291:7319	1249310	0	True				
ANR	1249373	ParameterType	const patch_fill_state_t *		1249310	0					
ANR	1249374	Identifier	pfs		1249310	1					
ANR	1249375	CFGEntryNode	ENTRY		1249310		True				
ANR	1249376	CFGExitNode	EXIT		1249310		True				
ANR	1249377	Symbol	pfs -> dev		1249310						
ANR	1249378	Symbol	USE_LINEAR_COLOR_PROCS		1249310						
ANR	1249379	Symbol	"gx_get_cmap_procs ( pfs -> pgs , pfs -> dev ) -> is_halftoned"		1249310						
ANR	1249380	Symbol	* pfs		1249310						
ANR	1249381	Symbol	false		1249310						
ANR	1249382	Symbol	pfs -> pgs		1249310						
ANR	1249383	Symbol	true		1249310						
ANR	1249384	Symbol	* gx_get_cmap_procs		1249310						
ANR	1249385	Symbol	pfs		1249310						
ANR	1249386	Symbol	colors_are_separable_and_linear		1249310						
ANR	1249387	Symbol	& pfs -> dev -> color_info		1249310						
ANR	1249388	Symbol	gx_get_cmap_procs		1249310						
ANR	1249389	Function	alloc_patch_fill_memory	227:0:7589:8308							
ANR	1249390	FunctionDef	"alloc_patch_fill_memory (patch_fill_state_t * pfs , gs_memory_t * memory , const gs_color_space * pcs)"		1249389	0					
ANR	1249391	CompoundStatement		229:0:7697:8308	1249389	0					
ANR	1249392	IdentifierDeclStatement	int code ;	230:4:7703:7711	1249389	0	True				
ANR	1249393	IdentifierDecl	code		1249389	0					
ANR	1249394	IdentifierDeclType	int		1249389	0					
ANR	1249395	Identifier	code		1249389	1					
ANR	1249396	ExpressionStatement	pfs -> memory = memory	232:4:7718:7738	1249389	1	True				
ANR	1249397	AssignmentExpression	pfs -> memory = memory		1249389	0		=			
ANR	1249398	PtrMemberAccess	pfs -> memory		1249389	0					
ANR	1249399	Identifier	pfs		1249389	0					
ANR	1249400	Identifier	memory		1249389	1					
ANR	1249401	Identifier	memory		1249389	1					
ANR	1249402	Statement	if	233:4:7744:7745	1249389	2	True				
ANR	1249403	IdentifierDeclStatement	LAZY_WEDGES code = wedge_vertex_list_elem_buffer_alloc ( pfs ) ;	233:7:7747:7814	1249389	3	True				
ANR	1249404	IdentifierDecl	code = wedge_vertex_list_elem_buffer_alloc ( pfs )		1249389	0					
ANR	1249405	IdentifierDeclType	LAZY_WEDGES		1249389	0					
ANR	1249406	Identifier	code		1249389	1					
ANR	1249407	AssignmentExpression	code = wedge_vertex_list_elem_buffer_alloc ( pfs )		1249389	2		=			
ANR	1249408	Identifier	code		1249389	0					
ANR	1249409	CallExpression	wedge_vertex_list_elem_buffer_alloc ( pfs )		1249389	1					
ANR	1249410	Callee	wedge_vertex_list_elem_buffer_alloc		1249389	0					
ANR	1249411	Identifier	wedge_vertex_list_elem_buffer_alloc		1249389	0					
ANR	1249412	ArgumentList	pfs		1249389	1					
ANR	1249413	Argument	pfs		1249389	0					
ANR	1249414	Identifier	pfs		1249389	0					
ANR	1249415	IfStatement	if ( code < 0 )		1249389	4					
ANR	1249416	Condition	code < 0	235:12:7828:7835	1249389	0	True				
ANR	1249417	RelationalExpression	code < 0		1249389	0		<			
ANR	1249418	Identifier	code		1249389	0					
ANR	1249419	PrimaryExpression	0		1249389	1					
ANR	1249420	ReturnStatement	return code ;	236:12:7850:7861	1249389	1	True				
ANR	1249421	Identifier	code		1249389	0					
ANR	1249422	Statement	endif	237:4:7867:7871	1249389	5	True				
ANR	1249423	ExpressionStatement	pfs -> max_small_coord = 1 << ( ( sizeof ( int64_t ) * 8 - 1 ) / 3 )	238:4:7877:7944	1249389	6	True				
ANR	1249424	AssignmentExpression	pfs -> max_small_coord = 1 << ( ( sizeof ( int64_t ) * 8 - 1 ) / 3 )		1249389	0		=			
ANR	1249425	PtrMemberAccess	pfs -> max_small_coord		1249389	0					
ANR	1249426	Identifier	pfs		1249389	0					
ANR	1249427	Identifier	max_small_coord		1249389	1					
ANR	1249428	ShiftExpression	1 << ( ( sizeof ( int64_t ) * 8 - 1 ) / 3 )		1249389	1		<<			
ANR	1249429	PrimaryExpression	1		1249389	0					
ANR	1249430	MultiplicativeExpression	( sizeof ( int64_t ) * 8 - 1 ) / 3		1249389	1		/			
ANR	1249431	AdditiveExpression	sizeof ( int64_t ) * 8 - 1		1249389	0		-			
ANR	1249432	MultiplicativeExpression	sizeof ( int64_t ) * 8		1249389	0		*			
ANR	1249433	SizeofExpression	sizeof ( int64_t )		1249389	0					
ANR	1249434	Sizeof	sizeof		1249389	0					
ANR	1249435	SizeofOperand	int64_t		1249389	1					
ANR	1249436	PrimaryExpression	8		1249389	1					
ANR	1249437	PrimaryExpression	1		1249389	1					
ANR	1249438	PrimaryExpression	3		1249389	1					
ANR	1249439	ExpressionStatement	"code = allocate_color_stack ( pfs , memory )"	239:4:7950:7990	1249389	7	True				
ANR	1249440	AssignmentExpression	"code = allocate_color_stack ( pfs , memory )"		1249389	0		=			
ANR	1249441	Identifier	code		1249389	0					
ANR	1249442	CallExpression	"allocate_color_stack ( pfs , memory )"		1249389	1					
ANR	1249443	Callee	allocate_color_stack		1249389	0					
ANR	1249444	Identifier	allocate_color_stack		1249389	0					
ANR	1249445	ArgumentList	pfs		1249389	1					
ANR	1249446	Argument	pfs		1249389	0					
ANR	1249447	Identifier	pfs		1249389	0					
ANR	1249448	Argument	memory		1249389	1					
ANR	1249449	Identifier	memory		1249389	0					
ANR	1249450	IfStatement	if ( code < 0 )		1249389	8					
ANR	1249451	Condition	code < 0	240:8:8000:8007	1249389	0	True				
ANR	1249452	RelationalExpression	code < 0		1249389	0		<			
ANR	1249453	Identifier	code		1249389	0					
ANR	1249454	PrimaryExpression	0		1249389	1					
ANR	1249455	ReturnStatement	return code ;	241:8:8018:8029	1249389	1	True				
ANR	1249456	Identifier	code		1249389	0					
ANR	1249457	IfStatement	if ( pfs -> unlinear || pcs == NULL )		1249389	9					
ANR	1249458	Condition	pfs -> unlinear || pcs == NULL	242:8:8039:8066	1249389	0	True				
ANR	1249459	OrExpression	pfs -> unlinear || pcs == NULL		1249389	0		||			
ANR	1249460	PtrMemberAccess	pfs -> unlinear		1249389	0					
ANR	1249461	Identifier	pfs		1249389	0					
ANR	1249462	Identifier	unlinear		1249389	1					
ANR	1249463	EqualityExpression	pcs == NULL		1249389	1		==			
ANR	1249464	Identifier	pcs		1249389	0					
ANR	1249465	Identifier	NULL		1249389	1					
ANR	1249466	ExpressionStatement	pfs -> pcic = NULL	243:8:8077:8093	1249389	1	True				
ANR	1249467	AssignmentExpression	pfs -> pcic = NULL		1249389	0		=			
ANR	1249468	PtrMemberAccess	pfs -> pcic		1249389	0					
ANR	1249469	Identifier	pfs		1249389	0					
ANR	1249470	Identifier	pcic		1249389	1					
ANR	1249471	Identifier	NULL		1249389	1					
ANR	1249472	ElseStatement	else		1249389	0					
ANR	1249473	CompoundStatement		16:9:406:406	1249389	0					
ANR	1249474	ExpressionStatement	"pfs -> pcic = gs_color_index_cache_create ( memory , pcs , pfs -> dev , pfs -> pgs , true , pfs -> trans_device )"	245:8:8114:8211	1249389	0	True				
ANR	1249475	AssignmentExpression	"pfs -> pcic = gs_color_index_cache_create ( memory , pcs , pfs -> dev , pfs -> pgs , true , pfs -> trans_device )"		1249389	0		=			
ANR	1249476	PtrMemberAccess	pfs -> pcic		1249389	0					
ANR	1249477	Identifier	pfs		1249389	0					
ANR	1249478	Identifier	pcic		1249389	1					
ANR	1249479	CallExpression	"gs_color_index_cache_create ( memory , pcs , pfs -> dev , pfs -> pgs , true , pfs -> trans_device )"		1249389	1					
ANR	1249480	Callee	gs_color_index_cache_create		1249389	0					
ANR	1249481	Identifier	gs_color_index_cache_create		1249389	0					
ANR	1249482	ArgumentList	memory		1249389	1					
ANR	1249483	Argument	memory		1249389	0					
ANR	1249484	Identifier	memory		1249389	0					
ANR	1249485	Argument	pcs		1249389	1					
ANR	1249486	Identifier	pcs		1249389	0					
ANR	1249487	Argument	pfs -> dev		1249389	2					
ANR	1249488	PtrMemberAccess	pfs -> dev		1249389	0					
ANR	1249489	Identifier	pfs		1249389	0					
ANR	1249490	Identifier	dev		1249389	1					
ANR	1249491	Argument	pfs -> pgs		1249389	3					
ANR	1249492	PtrMemberAccess	pfs -> pgs		1249389	0					
ANR	1249493	Identifier	pfs		1249389	0					
ANR	1249494	Identifier	pgs		1249389	1					
ANR	1249495	Argument	true		1249389	4					
ANR	1249496	Identifier	true		1249389	0					
ANR	1249497	Argument	pfs -> trans_device		1249389	5					
ANR	1249498	PtrMemberAccess	pfs -> trans_device		1249389	0					
ANR	1249499	Identifier	pfs		1249389	0					
ANR	1249500	Identifier	trans_device		1249389	1					
ANR	1249501	IfStatement	if ( pfs -> pcic == NULL )		1249389	1					
ANR	1249502	Condition	pfs -> pcic == NULL	246:12:8225:8241	1249389	0	True				
ANR	1249503	EqualityExpression	pfs -> pcic == NULL		1249389	0		==			
ANR	1249504	PtrMemberAccess	pfs -> pcic		1249389	0					
ANR	1249505	Identifier	pfs		1249389	0					
ANR	1249506	Identifier	pcic		1249389	1					
ANR	1249507	Identifier	NULL		1249389	1					
ANR	1249508	ExpressionStatement	return_error ( gs_error_VMerror )	247:12:8256:8286	1249389	1	True				
ANR	1249509	CallExpression	return_error ( gs_error_VMerror )		1249389	0					
ANR	1249510	Callee	return_error		1249389	0					
ANR	1249511	Identifier	return_error		1249389	0					
ANR	1249512	ArgumentList	gs_error_VMerror		1249389	1					
ANR	1249513	Argument	gs_error_VMerror		1249389	0					
ANR	1249514	Identifier	gs_error_VMerror		1249389	0					
ANR	1249515	ReturnStatement	return 0 ;	249:4:8298:8306	1249389	10	True				
ANR	1249516	PrimaryExpression	0		1249389	0					
ANR	1249517	ReturnType	static int		1249389	1					
ANR	1249518	Identifier	alloc_patch_fill_memory		1249389	2					
ANR	1249519	ParameterList	"patch_fill_state_t * pfs , gs_memory_t * memory , const gs_color_space * pcs"		1249389	3					
ANR	1249520	Parameter	patch_fill_state_t * pfs	228:24:7624:7646	1249389	0	True				
ANR	1249521	ParameterType	patch_fill_state_t *		1249389	0					
ANR	1249522	Identifier	pfs		1249389	1					
ANR	1249523	Parameter	gs_memory_t * memory	228:49:7649:7667	1249389	1	True				
ANR	1249524	ParameterType	gs_memory_t *		1249389	0					
ANR	1249525	Identifier	memory		1249389	1					
ANR	1249526	Parameter	const gs_color_space * pcs	228:70:7670:7694	1249389	2	True				
ANR	1249527	ParameterType	const gs_color_space *		1249389	0					
ANR	1249528	Identifier	pcs		1249389	1					
ANR	1249529	CFGEntryNode	ENTRY		1249389		True				
ANR	1249530	CFGExitNode	EXIT		1249389		True				
ANR	1249531	Symbol	pcs		1249389						
ANR	1249532	Symbol	pfs -> max_small_coord		1249389						
ANR	1249533	Symbol	memory		1249389						
ANR	1249534	Symbol	code		1249389						
ANR	1249535	Symbol	NULL		1249389						
ANR	1249536	Symbol	* pfs		1249389						
ANR	1249537	Symbol	pfs -> pgs		1249389						
ANR	1249538	Symbol	pfs -> pcic		1249389						
ANR	1249539	Symbol	pfs -> trans_device		1249389						
ANR	1249540	Symbol	gs_color_index_cache_create		1249389						
ANR	1249541	Symbol	allocate_color_stack		1249389						
ANR	1249542	Symbol	pfs -> dev		1249389						
ANR	1249543	Symbol	gs_error_VMerror		1249389						
ANR	1249544	Symbol	pfs -> memory		1249389						
ANR	1249545	Symbol	wedge_vertex_list_elem_buffer_alloc		1249389						
ANR	1249546	Symbol	true		1249389						
ANR	1249547	Symbol	pfs		1249389						
ANR	1249548	Symbol	pfs -> unlinear		1249389						
ANR	1249549	Function	init_patch_fill_state	252:0:8311:10092							
ANR	1249550	FunctionDef	init_patch_fill_state (patch_fill_state_t * pfs)		1249549	0					
ANR	1249551	CompoundStatement		254:0:8362:10092	1249549	0					
ANR	1249552	IdentifierDeclStatement	const gs_color_space * pcs = pfs -> direct_space ;	256:4:8426:8471	1249549	0	True				
ANR	1249553	IdentifierDecl	* pcs = pfs -> direct_space		1249549	0					
ANR	1249554	IdentifierDeclType	const gs_color_space *		1249549	0					
ANR	1249555	Identifier	pcs		1249549	1					
ANR	1249556	AssignmentExpression	* pcs = pfs -> direct_space		1249549	2		=			
ANR	1249557	Identifier	pcs		1249549	0					
ANR	1249558	PtrMemberAccess	pfs -> direct_space		1249549	1					
ANR	1249559	Identifier	pfs		1249549	0					
ANR	1249560	Identifier	direct_space		1249549	1					
ANR	1249561	IdentifierDeclStatement	"gs_client_color fcc0 , fcc1 ;"	257:4:8477:8503	1249549	1	True				
ANR	1249562	IdentifierDecl	fcc0		1249549	0					
ANR	1249563	IdentifierDeclType	gs_client_color		1249549	0					
ANR	1249564	Identifier	fcc0		1249549	1					
ANR	1249565	IdentifierDecl	fcc1		1249549	1					
ANR	1249566	IdentifierDeclType	gs_client_color		1249549	0					
ANR	1249567	Identifier	fcc1		1249549	1					
ANR	1249568	IdentifierDeclStatement	int i ;	258:4:8509:8514	1249549	2	True				
ANR	1249569	IdentifierDecl	i		1249549	0					
ANR	1249570	IdentifierDeclType	int		1249549	0					
ANR	1249571	Identifier	i		1249549	1					
ANR	1249572	ForStatement	for ( i = 0 ; i < pfs -> num_components ; i ++ )		1249549	3					
ANR	1249573	ForInit	i = 0 ;	260:9:8526:8531	1249549	0	True				
ANR	1249574	AssignmentExpression	i = 0		1249549	0		=			
ANR	1249575	Identifier	i		1249549	0					
ANR	1249576	PrimaryExpression	0		1249549	1					
ANR	1249577	Condition	i < pfs -> num_components	260:16:8533:8555	1249549	1	True				
ANR	1249578	RelationalExpression	i < pfs -> num_components		1249549	0		<			
ANR	1249579	Identifier	i		1249549	0					
ANR	1249580	PtrMemberAccess	pfs -> num_components		1249549	1					
ANR	1249581	Identifier	pfs		1249549	0					
ANR	1249582	Identifier	num_components		1249549	1					
ANR	1249583	PostIncDecOperationExpression	i ++	260:41:8558:8560	1249549	2	True				
ANR	1249584	Identifier	i		1249549	0					
ANR	1249585	IncDec	++		1249549	1					
ANR	1249586	CompoundStatement		7:46:200:200	1249549	3					
ANR	1249587	ExpressionStatement	fcc0 . paint . values [ i ] = - 1000000	261:8:8573:8604	1249549	0	True				
ANR	1249588	AssignmentExpression	fcc0 . paint . values [ i ] = - 1000000		1249549	0		=			
ANR	1249589	ArrayIndexing	fcc0 . paint . values [ i ]		1249549	0					
ANR	1249590	MemberAccess	fcc0 . paint . values		1249549	0					
ANR	1249591	MemberAccess	fcc0 . paint		1249549	0					
ANR	1249592	Identifier	fcc0		1249549	0					
ANR	1249593	Identifier	paint		1249549	1					
ANR	1249594	Identifier	values		1249549	1					
ANR	1249595	Identifier	i		1249549	1					
ANR	1249596	UnaryOperationExpression	- 1000000		1249549	1					
ANR	1249597	UnaryOperator	-		1249549	0					
ANR	1249598	PrimaryExpression	1000000		1249549	1					
ANR	1249599	ExpressionStatement	fcc1 . paint . values [ i ] = 1000000	262:8:8614:8644	1249549	1	True				
ANR	1249600	AssignmentExpression	fcc1 . paint . values [ i ] = 1000000		1249549	0		=			
ANR	1249601	ArrayIndexing	fcc1 . paint . values [ i ]		1249549	0					
ANR	1249602	MemberAccess	fcc1 . paint . values		1249549	0					
ANR	1249603	MemberAccess	fcc1 . paint		1249549	0					
ANR	1249604	Identifier	fcc1		1249549	0					
ANR	1249605	Identifier	paint		1249549	1					
ANR	1249606	Identifier	values		1249549	1					
ANR	1249607	Identifier	i		1249549	1					
ANR	1249608	PrimaryExpression	1000000		1249549	1					
ANR	1249609	ExpressionStatement	"pcs -> type -> restrict_color ( & fcc0 , pcs )"	264:4:8656:8693	1249549	4	True				
ANR	1249610	CallExpression	"pcs -> type -> restrict_color ( & fcc0 , pcs )"		1249549	0					
ANR	1249611	Callee	pcs -> type -> restrict_color		1249549	0					
ANR	1249612	PtrMemberAccess	pcs -> type -> restrict_color		1249549	0					
ANR	1249613	PtrMemberAccess	pcs -> type		1249549	0					
ANR	1249614	Identifier	pcs		1249549	0					
ANR	1249615	Identifier	type		1249549	1					
ANR	1249616	Identifier	restrict_color		1249549	1					
ANR	1249617	ArgumentList	& fcc0		1249549	1					
ANR	1249618	Argument	& fcc0		1249549	0					
ANR	1249619	UnaryOperationExpression	& fcc0		1249549	0					
ANR	1249620	UnaryOperator	&		1249549	0					
ANR	1249621	Identifier	fcc0		1249549	1					
ANR	1249622	Argument	pcs		1249549	1					
ANR	1249623	Identifier	pcs		1249549	0					
ANR	1249624	ExpressionStatement	"pcs -> type -> restrict_color ( & fcc1 , pcs )"	265:4:8699:8736	1249549	5	True				
ANR	1249625	CallExpression	"pcs -> type -> restrict_color ( & fcc1 , pcs )"		1249549	0					
ANR	1249626	Callee	pcs -> type -> restrict_color		1249549	0					
ANR	1249627	PtrMemberAccess	pcs -> type -> restrict_color		1249549	0					
ANR	1249628	PtrMemberAccess	pcs -> type		1249549	0					
ANR	1249629	Identifier	pcs		1249549	0					
ANR	1249630	Identifier	type		1249549	1					
ANR	1249631	Identifier	restrict_color		1249549	1					
ANR	1249632	ArgumentList	& fcc1		1249549	1					
ANR	1249633	Argument	& fcc1		1249549	0					
ANR	1249634	UnaryOperationExpression	& fcc1		1249549	0					
ANR	1249635	UnaryOperator	&		1249549	0					
ANR	1249636	Identifier	fcc1		1249549	1					
ANR	1249637	Argument	pcs		1249549	1					
ANR	1249638	Identifier	pcs		1249549	0					
ANR	1249639	ForStatement	for ( i = 0 ; i < pfs -> num_components ; i ++ )		1249549	6					
ANR	1249640	ForInit	i = 0 ;	266:9:8747:8752	1249549	0	True				
ANR	1249641	AssignmentExpression	i = 0		1249549	0		=			
ANR	1249642	Identifier	i		1249549	0					
ANR	1249643	PrimaryExpression	0		1249549	1					
ANR	1249644	Condition	i < pfs -> num_components	266:16:8754:8776	1249549	1	True				
ANR	1249645	RelationalExpression	i < pfs -> num_components		1249549	0		<			
ANR	1249646	Identifier	i		1249549	0					
ANR	1249647	PtrMemberAccess	pfs -> num_components		1249549	1					
ANR	1249648	Identifier	pfs		1249549	0					
ANR	1249649	Identifier	num_components		1249549	1					
ANR	1249650	PostIncDecOperationExpression	i ++	266:41:8779:8781	1249549	2	True				
ANR	1249651	Identifier	i		1249549	0					
ANR	1249652	IncDec	++		1249549	1					
ANR	1249653	ExpressionStatement	"pfs -> color_domain . paint . values [ i ] = max ( fcc1 . paint . values [ i ] - fcc0 . paint . values [ i ] , 1 )"	267:8:8792:8879	1249549	3	True				
ANR	1249654	AssignmentExpression	"pfs -> color_domain . paint . values [ i ] = max ( fcc1 . paint . values [ i ] - fcc0 . paint . values [ i ] , 1 )"		1249549	0		=			
ANR	1249655	ArrayIndexing	pfs -> color_domain . paint . values [ i ]		1249549	0					
ANR	1249656	MemberAccess	pfs -> color_domain . paint . values		1249549	0					
ANR	1249657	MemberAccess	pfs -> color_domain . paint		1249549	0					
ANR	1249658	PtrMemberAccess	pfs -> color_domain		1249549	0					
ANR	1249659	Identifier	pfs		1249549	0					
ANR	1249660	Identifier	color_domain		1249549	1					
ANR	1249661	Identifier	paint		1249549	1					
ANR	1249662	Identifier	values		1249549	1					
ANR	1249663	Identifier	i		1249549	1					
ANR	1249664	CallExpression	"max ( fcc1 . paint . values [ i ] - fcc0 . paint . values [ i ] , 1 )"		1249549	1					
ANR	1249665	Callee	max		1249549	0					
ANR	1249666	Identifier	max		1249549	0					
ANR	1249667	ArgumentList	fcc1 . paint . values [ i ] - fcc0 . paint . values [ i ]		1249549	1					
ANR	1249668	Argument	fcc1 . paint . values [ i ] - fcc0 . paint . values [ i ]		1249549	0					
ANR	1249669	AdditiveExpression	fcc1 . paint . values [ i ] - fcc0 . paint . values [ i ]		1249549	0		-			
ANR	1249670	ArrayIndexing	fcc1 . paint . values [ i ]		1249549	0					
ANR	1249671	MemberAccess	fcc1 . paint . values		1249549	0					
ANR	1249672	MemberAccess	fcc1 . paint		1249549	0					
ANR	1249673	Identifier	fcc1		1249549	0					
ANR	1249674	Identifier	paint		1249549	1					
ANR	1249675	Identifier	values		1249549	1					
ANR	1249676	Identifier	i		1249549	1					
ANR	1249677	ArrayIndexing	fcc0 . paint . values [ i ]		1249549	1					
ANR	1249678	MemberAccess	fcc0 . paint . values		1249549	0					
ANR	1249679	MemberAccess	fcc0 . paint		1249549	0					
ANR	1249680	Identifier	fcc0		1249549	0					
ANR	1249681	Identifier	paint		1249549	1					
ANR	1249682	Identifier	values		1249549	1					
ANR	1249683	Identifier	i		1249549	1					
ANR	1249684	Argument	1		1249549	1					
ANR	1249685	PrimaryExpression	1		1249549	0					
ANR	1249686	ExpressionStatement	pfs -> vectorization = false	268:4:8885:8911	1249549	7	True				
ANR	1249687	AssignmentExpression	pfs -> vectorization = false		1249549	0		=			
ANR	1249688	PtrMemberAccess	pfs -> vectorization		1249549	0					
ANR	1249689	Identifier	pfs		1249549	0					
ANR	1249690	Identifier	vectorization		1249549	1					
ANR	1249691	Identifier	false		1249549	1					
ANR	1249692	ExpressionStatement	pfs -> maybe_self_intersecting = true	269:4:8967:9002	1249549	8	True				
ANR	1249693	AssignmentExpression	pfs -> maybe_self_intersecting = true		1249549	0		=			
ANR	1249694	PtrMemberAccess	pfs -> maybe_self_intersecting		1249549	0					
ANR	1249695	Identifier	pfs		1249549	0					
ANR	1249696	Identifier	maybe_self_intersecting		1249549	1					
ANR	1249697	Identifier	true		1249549	1					
ANR	1249698	ExpressionStatement	pfs -> monotonic_color = ( pfs -> Function == NULL )	270:4:9008:9054	1249549	9	True				
ANR	1249699	AssignmentExpression	pfs -> monotonic_color = ( pfs -> Function == NULL )		1249549	0		=			
ANR	1249700	PtrMemberAccess	pfs -> monotonic_color		1249549	0					
ANR	1249701	Identifier	pfs		1249549	0					
ANR	1249702	Identifier	monotonic_color		1249549	1					
ANR	1249703	EqualityExpression	pfs -> Function == NULL		1249549	1		==			
ANR	1249704	PtrMemberAccess	pfs -> Function		1249549	0					
ANR	1249705	Identifier	pfs		1249549	0					
ANR	1249706	Identifier	Function		1249549	1					
ANR	1249707	Identifier	NULL		1249549	1					
ANR	1249708	ExpressionStatement	pfs -> function_arg_shift = 0	271:4:9060:9087	1249549	10	True				
ANR	1249709	AssignmentExpression	pfs -> function_arg_shift = 0		1249549	0		=			
ANR	1249710	PtrMemberAccess	pfs -> function_arg_shift		1249549	0					
ANR	1249711	Identifier	pfs		1249549	0					
ANR	1249712	Identifier	function_arg_shift		1249549	1					
ANR	1249713	PrimaryExpression	0		1249549	1					
ANR	1249714	ExpressionStatement	pfs -> linear_color = false	272:4:9093:9118	1249549	11	True				
ANR	1249715	AssignmentExpression	pfs -> linear_color = false		1249549	0		=			
ANR	1249716	PtrMemberAccess	pfs -> linear_color		1249549	0					
ANR	1249717	Identifier	pfs		1249549	0					
ANR	1249718	Identifier	linear_color		1249549	1					
ANR	1249719	Identifier	false		1249549	1					
ANR	1249720	ExpressionStatement	pfs -> inside = false	273:4:9124:9143	1249549	12	True				
ANR	1249721	AssignmentExpression	pfs -> inside = false		1249549	0		=			
ANR	1249722	PtrMemberAccess	pfs -> inside		1249549	0					
ANR	1249723	Identifier	pfs		1249549	0					
ANR	1249724	Identifier	inside		1249549	1					
ANR	1249725	Identifier	false		1249549	1					
ANR	1249726	ExpressionStatement	pfs -> n_color_args = 1	274:4:9149:9170	1249549	13	True				
ANR	1249727	AssignmentExpression	pfs -> n_color_args = 1		1249549	0		=			
ANR	1249728	PtrMemberAccess	pfs -> n_color_args		1249549	0					
ANR	1249729	Identifier	pfs		1249549	0					
ANR	1249730	Identifier	n_color_args		1249549	1					
ANR	1249731	PrimaryExpression	1		1249549	1					
ANR	1249732	ExpressionStatement	"pfs -> decomposition_limit = float2fixed ( min ( pfs -> dev -> HWResolution [ 0 ] , pfs -> dev -> HWResolution [ 1 ] ) / MAX_SHADING_RESOLUTION )"	276:4:9206:9375	1249549	14	True				
ANR	1249733	AssignmentExpression	"pfs -> decomposition_limit = float2fixed ( min ( pfs -> dev -> HWResolution [ 0 ] , pfs -> dev -> HWResolution [ 1 ] ) / MAX_SHADING_RESOLUTION )"		1249549	0		=			
ANR	1249734	PtrMemberAccess	pfs -> decomposition_limit		1249549	0					
ANR	1249735	Identifier	pfs		1249549	0					
ANR	1249736	Identifier	decomposition_limit		1249549	1					
ANR	1249737	CallExpression	"float2fixed ( min ( pfs -> dev -> HWResolution [ 0 ] , pfs -> dev -> HWResolution [ 1 ] ) / MAX_SHADING_RESOLUTION )"		1249549	1					
ANR	1249738	Callee	float2fixed		1249549	0					
ANR	1249739	Identifier	float2fixed		1249549	0					
ANR	1249740	ArgumentList	"min ( pfs -> dev -> HWResolution [ 0 ] , pfs -> dev -> HWResolution [ 1 ] ) / MAX_SHADING_RESOLUTION"		1249549	1					
ANR	1249741	Argument	"min ( pfs -> dev -> HWResolution [ 0 ] , pfs -> dev -> HWResolution [ 1 ] ) / MAX_SHADING_RESOLUTION"		1249549	0					
ANR	1249742	MultiplicativeExpression	"min ( pfs -> dev -> HWResolution [ 0 ] , pfs -> dev -> HWResolution [ 1 ] ) / MAX_SHADING_RESOLUTION"		1249549	0		/			
ANR	1249743	CallExpression	"min ( pfs -> dev -> HWResolution [ 0 ] , pfs -> dev -> HWResolution [ 1 ] )"		1249549	0					
ANR	1249744	Callee	min		1249549	0					
ANR	1249745	Identifier	min		1249549	0					
ANR	1249746	ArgumentList	pfs -> dev -> HWResolution [ 0 ]		1249549	1					
ANR	1249747	Argument	pfs -> dev -> HWResolution [ 0 ]		1249549	0					
ANR	1249748	ArrayIndexing	pfs -> dev -> HWResolution [ 0 ]		1249549	0					
ANR	1249749	PtrMemberAccess	pfs -> dev -> HWResolution		1249549	0					
ANR	1249750	PtrMemberAccess	pfs -> dev		1249549	0					
ANR	1249751	Identifier	pfs		1249549	0					
ANR	1249752	Identifier	dev		1249549	1					
ANR	1249753	Identifier	HWResolution		1249549	1					
ANR	1249754	PrimaryExpression	0		1249549	1					
ANR	1249755	Argument	pfs -> dev -> HWResolution [ 1 ]		1249549	1					
ANR	1249756	ArrayIndexing	pfs -> dev -> HWResolution [ 1 ]		1249549	0					
ANR	1249757	PtrMemberAccess	pfs -> dev -> HWResolution		1249549	0					
ANR	1249758	PtrMemberAccess	pfs -> dev		1249549	0					
ANR	1249759	Identifier	pfs		1249549	0					
ANR	1249760	Identifier	dev		1249549	1					
ANR	1249761	Identifier	HWResolution		1249549	1					
ANR	1249762	PrimaryExpression	1		1249549	1					
ANR	1249763	Identifier	MAX_SHADING_RESOLUTION		1249549	1					
ANR	1249764	ExpressionStatement	"pfs -> decomposition_limit = max ( pfs -> decomposition_limit , fixed_1 )"	278:4:9381:9446	1249549	15	True				
ANR	1249765	AssignmentExpression	"pfs -> decomposition_limit = max ( pfs -> decomposition_limit , fixed_1 )"		1249549	0		=			
ANR	1249766	PtrMemberAccess	pfs -> decomposition_limit		1249549	0					
ANR	1249767	Identifier	pfs		1249549	0					
ANR	1249768	Identifier	decomposition_limit		1249549	1					
ANR	1249769	CallExpression	"max ( pfs -> decomposition_limit , fixed_1 )"		1249549	1					
ANR	1249770	Callee	max		1249549	0					
ANR	1249771	Identifier	max		1249549	0					
ANR	1249772	ArgumentList	pfs -> decomposition_limit		1249549	1					
ANR	1249773	Argument	pfs -> decomposition_limit		1249549	0					
ANR	1249774	PtrMemberAccess	pfs -> decomposition_limit		1249549	0					
ANR	1249775	Identifier	pfs		1249549	0					
ANR	1249776	Identifier	decomposition_limit		1249549	1					
ANR	1249777	Argument	fixed_1		1249549	1					
ANR	1249778	Identifier	fixed_1		1249549	0					
ANR	1249779	ExpressionStatement	pfs -> fixed_flat = float2fixed ( pfs -> pgs -> flatness )	282:4:9505:9554	1249549	16	True				
ANR	1249780	AssignmentExpression	pfs -> fixed_flat = float2fixed ( pfs -> pgs -> flatness )		1249549	0		=			
ANR	1249781	PtrMemberAccess	pfs -> fixed_flat		1249549	0					
ANR	1249782	Identifier	pfs		1249549	0					
ANR	1249783	Identifier	fixed_flat		1249549	1					
ANR	1249784	CallExpression	float2fixed ( pfs -> pgs -> flatness )		1249549	1					
ANR	1249785	Callee	float2fixed		1249549	0					
ANR	1249786	Identifier	float2fixed		1249549	0					
ANR	1249787	ArgumentList	pfs -> pgs -> flatness		1249549	1					
ANR	1249788	Argument	pfs -> pgs -> flatness		1249549	0					
ANR	1249789	PtrMemberAccess	pfs -> pgs -> flatness		1249549	0					
ANR	1249790	PtrMemberAccess	pfs -> pgs		1249549	0					
ANR	1249791	Identifier	pfs		1249549	0					
ANR	1249792	Identifier	pgs		1249549	1					
ANR	1249793	Identifier	flatness		1249549	1					
ANR	1249794	ExpressionStatement	"pfs -> smoothness = max ( pfs -> pgs -> smoothness , 1.0 / min_linear_grades )"	287:4:9745:9813	1249549	17	True				
ANR	1249795	AssignmentExpression	"pfs -> smoothness = max ( pfs -> pgs -> smoothness , 1.0 / min_linear_grades )"		1249549	0		=			
ANR	1249796	PtrMemberAccess	pfs -> smoothness		1249549	0					
ANR	1249797	Identifier	pfs		1249549	0					
ANR	1249798	Identifier	smoothness		1249549	1					
ANR	1249799	CallExpression	"max ( pfs -> pgs -> smoothness , 1.0 / min_linear_grades )"		1249549	1					
ANR	1249800	Callee	max		1249549	0					
ANR	1249801	Identifier	max		1249549	0					
ANR	1249802	ArgumentList	pfs -> pgs -> smoothness		1249549	1					
ANR	1249803	Argument	pfs -> pgs -> smoothness		1249549	0					
ANR	1249804	PtrMemberAccess	pfs -> pgs -> smoothness		1249549	0					
ANR	1249805	PtrMemberAccess	pfs -> pgs		1249549	0					
ANR	1249806	Identifier	pfs		1249549	0					
ANR	1249807	Identifier	pgs		1249549	1					
ANR	1249808	Identifier	smoothness		1249549	1					
ANR	1249809	Argument	1.0 / min_linear_grades		1249549	1					
ANR	1249810	MultiplicativeExpression	1.0 / min_linear_grades		1249549	0		/			
ANR	1249811	PrimaryExpression	1.0		1249549	0					
ANR	1249812	Identifier	min_linear_grades		1249549	1					
ANR	1249813	ExpressionStatement	pfs -> color_stack_size = 0	288:4:9819:9844	1249549	18	True				
ANR	1249814	AssignmentExpression	pfs -> color_stack_size = 0		1249549	0		=			
ANR	1249815	PtrMemberAccess	pfs -> color_stack_size		1249549	0					
ANR	1249816	Identifier	pfs		1249549	0					
ANR	1249817	Identifier	color_stack_size		1249549	1					
ANR	1249818	PrimaryExpression	0		1249549	1					
ANR	1249819	ExpressionStatement	pfs -> color_stack_step = 0	289:4:9850:9875	1249549	19	True				
ANR	1249820	AssignmentExpression	pfs -> color_stack_step = 0		1249549	0		=			
ANR	1249821	PtrMemberAccess	pfs -> color_stack_step		1249549	0					
ANR	1249822	Identifier	pfs		1249549	0					
ANR	1249823	Identifier	color_stack_step		1249549	1					
ANR	1249824	PrimaryExpression	0		1249549	1					
ANR	1249825	ExpressionStatement	pfs -> color_stack_ptr = NULL	290:4:9881:9908	1249549	20	True				
ANR	1249826	AssignmentExpression	pfs -> color_stack_ptr = NULL		1249549	0		=			
ANR	1249827	PtrMemberAccess	pfs -> color_stack_ptr		1249549	0					
ANR	1249828	Identifier	pfs		1249549	0					
ANR	1249829	Identifier	color_stack_ptr		1249549	1					
ANR	1249830	Identifier	NULL		1249549	1					
ANR	1249831	ExpressionStatement	pfs -> color_stack = NULL	291:4:9914:9937	1249549	21	True				
ANR	1249832	AssignmentExpression	pfs -> color_stack = NULL		1249549	0		=			
ANR	1249833	PtrMemberAccess	pfs -> color_stack		1249549	0					
ANR	1249834	Identifier	pfs		1249549	0					
ANR	1249835	Identifier	color_stack		1249549	1					
ANR	1249836	Identifier	NULL		1249549	1					
ANR	1249837	ExpressionStatement	pfs -> color_stack_limit = NULL	292:4:9943:9972	1249549	22	True				
ANR	1249838	AssignmentExpression	pfs -> color_stack_limit = NULL		1249549	0		=			
ANR	1249839	PtrMemberAccess	pfs -> color_stack_limit		1249549	0					
ANR	1249840	Identifier	pfs		1249549	0					
ANR	1249841	Identifier	color_stack_limit		1249549	1					
ANR	1249842	Identifier	NULL		1249549	1					
ANR	1249843	ExpressionStatement	pfs -> unlinear = ! is_linear_color_applicable ( pfs )	293:4:9978:10026	1249549	23	True				
ANR	1249844	AssignmentExpression	pfs -> unlinear = ! is_linear_color_applicable ( pfs )		1249549	0		=			
ANR	1249845	PtrMemberAccess	pfs -> unlinear		1249549	0					
ANR	1249846	Identifier	pfs		1249549	0					
ANR	1249847	Identifier	unlinear		1249549	1					
ANR	1249848	UnaryOperationExpression	! is_linear_color_applicable ( pfs )		1249549	1					
ANR	1249849	UnaryOperator	!		1249549	0					
ANR	1249850	CallExpression	is_linear_color_applicable ( pfs )		1249549	1					
ANR	1249851	Callee	is_linear_color_applicable		1249549	0					
ANR	1249852	Identifier	is_linear_color_applicable		1249549	0					
ANR	1249853	ArgumentList	pfs		1249549	1					
ANR	1249854	Argument	pfs		1249549	0					
ANR	1249855	Identifier	pfs		1249549	0					
ANR	1249856	ReturnStatement	"return alloc_patch_fill_memory ( pfs , pfs -> pgs -> memory , pcs ) ;"	294:4:10032:10090	1249549	24	True				
ANR	1249857	CallExpression	"alloc_patch_fill_memory ( pfs , pfs -> pgs -> memory , pcs )"		1249549	0					
ANR	1249858	Callee	alloc_patch_fill_memory		1249549	0					
ANR	1249859	Identifier	alloc_patch_fill_memory		1249549	0					
ANR	1249860	ArgumentList	pfs		1249549	1					
ANR	1249861	Argument	pfs		1249549	0					
ANR	1249862	Identifier	pfs		1249549	0					
ANR	1249863	Argument	pfs -> pgs -> memory		1249549	1					
ANR	1249864	PtrMemberAccess	pfs -> pgs -> memory		1249549	0					
ANR	1249865	PtrMemberAccess	pfs -> pgs		1249549	0					
ANR	1249866	Identifier	pfs		1249549	0					
ANR	1249867	Identifier	pgs		1249549	1					
ANR	1249868	Identifier	memory		1249549	1					
ANR	1249869	Argument	pcs		1249549	2					
ANR	1249870	Identifier	pcs		1249549	0					
ANR	1249871	ReturnType	int		1249549	1					
ANR	1249872	Identifier	init_patch_fill_state		1249549	2					
ANR	1249873	ParameterList	patch_fill_state_t * pfs		1249549	3					
ANR	1249874	Parameter	patch_fill_state_t * pfs	253:22:8337:8359	1249549	0	True				
ANR	1249875	ParameterType	patch_fill_state_t *		1249549	0					
ANR	1249876	Identifier	pfs		1249549	1					
ANR	1249877	CFGEntryNode	ENTRY		1249549		True				
ANR	1249878	CFGExitNode	EXIT		1249549		True				
ANR	1249879	Symbol	pfs -> dev -> HWResolution		1249549						
ANR	1249880	Symbol	* fcc0 . paint		1249549						
ANR	1249881	Symbol	fcc1		1249549						
ANR	1249882	Symbol	fcc0		1249549						
ANR	1249883	Symbol	pfs -> Function		1249549						
ANR	1249884	Symbol	pfs -> monotonic_color		1249549						
ANR	1249885	Symbol	* pfs -> color_domain		1249549						
ANR	1249886	Symbol	* pcs		1249549						
ANR	1249887	Symbol	pfs -> direct_space		1249549						
ANR	1249888	Symbol	* pfs -> color_domain . paint		1249549						
ANR	1249889	Symbol	* fcc0 . paint . values		1249549						
ANR	1249890	Symbol	* * pfs		1249549						
ANR	1249891	Symbol	alloc_patch_fill_memory		1249549						
ANR	1249892	Symbol	pfs -> color_stack_step		1249549						
ANR	1249893	Symbol	fixed_1		1249549						
ANR	1249894	Symbol	pfs -> pgs -> smoothness		1249549						
ANR	1249895	Symbol	pfs -> color_domain . paint . values		1249549						
ANR	1249896	Symbol	fcc0 . paint		1249549						
ANR	1249897	Symbol	pcs -> type		1249549						
ANR	1249898	Symbol	fcc1 . paint . values		1249549						
ANR	1249899	Symbol	NULL		1249549						
ANR	1249900	Symbol	* pfs		1249549						
ANR	1249901	Symbol	pfs -> pgs -> memory		1249549						
ANR	1249902	Symbol	pfs -> pgs		1249549						
ANR	1249903	Symbol	pfs -> pgs -> flatness		1249549						
ANR	1249904	Symbol	& fcc0		1249549						
ANR	1249905	Symbol	& fcc1		1249549						
ANR	1249906	Symbol	is_linear_color_applicable		1249549						
ANR	1249907	Symbol	pfs -> fixed_flat		1249549						
ANR	1249908	Symbol	* pfs -> pgs		1249549						
ANR	1249909	Symbol	true		1249549						
ANR	1249910	Symbol	pfs -> color_stack_limit		1249549						
ANR	1249911	Symbol	pfs		1249549						
ANR	1249912	Symbol	pfs -> linear_color		1249549						
ANR	1249913	Symbol	pfs -> n_color_args		1249549						
ANR	1249914	Symbol	* fcc1 . paint . values		1249549						
ANR	1249915	Symbol	pfs -> unlinear		1249549						
ANR	1249916	Symbol	pfs -> color_domain		1249549						
ANR	1249917	Symbol	* * pfs -> dev		1249549						
ANR	1249918	Symbol	fcc1 . paint		1249549						
ANR	1249919	Symbol	pfs -> color_stack_ptr		1249549						
ANR	1249920	Symbol	* pfs -> dev		1249549						
ANR	1249921	Symbol	pfs -> decomposition_limit		1249549						
ANR	1249922	Symbol	fcc0 . paint . values		1249549						
ANR	1249923	Symbol	pfs -> vectorization		1249549						
ANR	1249924	Symbol	float2fixed		1249549						
ANR	1249925	Symbol	min		1249549						
ANR	1249926	Symbol	min_linear_grades		1249549						
ANR	1249927	Symbol	pfs -> num_components		1249549						
ANR	1249928	Symbol	* fcc1 . paint		1249549						
ANR	1249929	Symbol	pfs -> color_stack_size		1249549						
ANR	1249930	Symbol	pfs -> color_stack		1249549						
ANR	1249931	Symbol	pfs -> maybe_self_intersecting		1249549						
ANR	1249932	Symbol	* pfs -> color_domain . paint . values		1249549						
ANR	1249933	Symbol	pcs		1249549						
ANR	1249934	Symbol	max		1249549						
ANR	1249935	Symbol	pfs -> inside		1249549						
ANR	1249936	Symbol	pfs -> smoothness		1249549						
ANR	1249937	Symbol	false		1249549						
ANR	1249938	Symbol	i		1249549						
ANR	1249939	Symbol	pfs -> color_domain . paint		1249549						
ANR	1249940	Symbol	pfs -> dev		1249549						
ANR	1249941	Symbol	pfs -> function_arg_shift		1249549						
ANR	1249942	Symbol	* i		1249549						
ANR	1249943	Symbol	MAX_SHADING_RESOLUTION		1249549						
ANR	1249944	Symbol	* pfs -> dev -> HWResolution		1249549						
ANR	1249945	Symbol	* * * pfs		1249549						
ANR	1249946	Symbol	* fcc0		1249549						
ANR	1249947	Symbol	* fcc1		1249549						
ANR	1249948	Function	term_patch_fill_state	297:0:10095:10480							
ANR	1249949	FunctionDef	term_patch_fill_state (patch_fill_state_t * pfs)		1249948	0					
ANR	1249950	CompoundStatement		299:0:10147:10480	1249948	0					
ANR	1249951	IdentifierDeclStatement	bool b = ( pfs -> color_stack_ptr != pfs -> color_stack ) ;	300:4:10153:10204	1249948	0	True				
ANR	1249952	IdentifierDecl	b = ( pfs -> color_stack_ptr != pfs -> color_stack )		1249948	0					
ANR	1249953	IdentifierDeclType	bool		1249948	0					
ANR	1249954	Identifier	b		1249948	1					
ANR	1249955	AssignmentExpression	b = ( pfs -> color_stack_ptr != pfs -> color_stack )		1249948	2		=			
ANR	1249956	Identifier	b		1249948	0					
ANR	1249957	EqualityExpression	pfs -> color_stack_ptr != pfs -> color_stack		1249948	1		!=			
ANR	1249958	PtrMemberAccess	pfs -> color_stack_ptr		1249948	0					
ANR	1249959	Identifier	pfs		1249948	0					
ANR	1249960	Identifier	color_stack_ptr		1249948	1					
ANR	1249961	PtrMemberAccess	pfs -> color_stack		1249948	1					
ANR	1249962	Identifier	pfs		1249948	0					
ANR	1249963	Identifier	color_stack		1249948	1					
ANR	1249964	Statement	if	301:4:10210:10211	1249948	1	True				
ANR	1249965	IdentifierDeclStatement	LAZY_WEDGES wedge_vertex_list_elem_buffer_free ( pfs ) ;	301:7:10213:10272	1249948	2	True				
ANR	1249966	IdentifierDecl	wedge_vertex_list_elem_buffer_free ( pfs )		1249948	0					
ANR	1249967	IdentifierDeclType	LAZY_WEDGES		1249948	0					
ANR	1249968	Identifier	wedge_vertex_list_elem_buffer_free		1249948	1					
ANR	1249969	Identifier	pfs		1249948	2					
ANR	1249970	Statement	endif	303:4:10278:10282	1249948	3	True				
ANR	1249971	IfStatement	if ( pfs -> color_stack )		1249948	4					
ANR	1249972	Condition	pfs -> color_stack	304:8:10292:10307	1249948	0	True				
ANR	1249973	PtrMemberAccess	pfs -> color_stack		1249948	0					
ANR	1249974	Identifier	pfs		1249948	0					
ANR	1249975	Identifier	color_stack		1249948	1					
ANR	1249976	ExpressionStatement	"gs_free_object ( pfs -> memory , pfs -> color_stack , ""term_patch_fill_state"" )"	305:8:10318:10388	1249948	1	True				
ANR	1249977	CallExpression	"gs_free_object ( pfs -> memory , pfs -> color_stack , ""term_patch_fill_state"" )"		1249948	0					
ANR	1249978	Callee	gs_free_object		1249948	0					
ANR	1249979	Identifier	gs_free_object		1249948	0					
ANR	1249980	ArgumentList	pfs -> memory		1249948	1					
ANR	1249981	Argument	pfs -> memory		1249948	0					
ANR	1249982	PtrMemberAccess	pfs -> memory		1249948	0					
ANR	1249983	Identifier	pfs		1249948	0					
ANR	1249984	Identifier	memory		1249948	1					
ANR	1249985	Argument	pfs -> color_stack		1249948	1					
ANR	1249986	PtrMemberAccess	pfs -> color_stack		1249948	0					
ANR	1249987	Identifier	pfs		1249948	0					
ANR	1249988	Identifier	color_stack		1249948	1					
ANR	1249989	Argument	"""term_patch_fill_state"""		1249948	2					
ANR	1249990	PrimaryExpression	"""term_patch_fill_state"""		1249948	0					
ANR	1249991	IfStatement	if ( pfs -> pcic != NULL )		1249948	5					
ANR	1249992	Condition	pfs -> pcic != NULL	306:8:10398:10414	1249948	0	True				
ANR	1249993	EqualityExpression	pfs -> pcic != NULL		1249948	0		!=			
ANR	1249994	PtrMemberAccess	pfs -> pcic		1249948	0					
ANR	1249995	Identifier	pfs		1249948	0					
ANR	1249996	Identifier	pcic		1249948	1					
ANR	1249997	Identifier	NULL		1249948	1					
ANR	1249998	ExpressionStatement	gs_color_index_cache_destroy ( pfs -> pcic )	307:8:10425:10464	1249948	1	True				
ANR	1249999	CallExpression	gs_color_index_cache_destroy ( pfs -> pcic )		1249948	0					
ANR	1250000	Callee	gs_color_index_cache_destroy		1249948	0					
ANR	1250001	Identifier	gs_color_index_cache_destroy		1249948	0					
ANR	1250002	ArgumentList	pfs -> pcic		1249948	1					
ANR	1250003	Argument	pfs -> pcic		1249948	0					
ANR	1250004	PtrMemberAccess	pfs -> pcic		1249948	0					
ANR	1250005	Identifier	pfs		1249948	0					
ANR	1250006	Identifier	pcic		1249948	1					
ANR	1250007	ReturnStatement	return b ;	308:4:10470:10478	1249948	6	True				
ANR	1250008	Identifier	b		1249948	0					
ANR	1250009	ReturnType	bool		1249948	1					
ANR	1250010	Identifier	term_patch_fill_state		1249948	2					
ANR	1250011	ParameterList	patch_fill_state_t * pfs		1249948	3					
ANR	1250012	Parameter	patch_fill_state_t * pfs	298:22:10122:10144	1249948	0	True				
ANR	1250013	ParameterType	patch_fill_state_t *		1249948	0					
ANR	1250014	Identifier	pfs		1249948	1					
ANR	1250015	CFGEntryNode	ENTRY		1249948		True				
ANR	1250016	CFGExitNode	EXIT		1249948		True				
ANR	1250017	Symbol	b		1249948						
ANR	1250018	Symbol	pfs -> memory		1249948						
ANR	1250019	Symbol	NULL		1249948						
ANR	1250020	Symbol	* pfs		1249948						
ANR	1250021	Symbol	pfs -> pcic		1249948						
ANR	1250022	Symbol	pfs -> color_stack		1249948						
ANR	1250023	Symbol	pfs -> color_stack_ptr		1249948						
ANR	1250024	Symbol	pfs		1249948						
ANR	1250025	Symbol	wedge_vertex_list_elem_buffer_free		1249948						
ANR	1250026	Function	patch_resolve_color_inline	312:0:10544:10860							
ANR	1250027	FunctionDef	"patch_resolve_color_inline (patch_color_t * ppcr , const patch_fill_state_t * pfs)"		1250026	0					
ANR	1250028	CompoundStatement		314:0:10643:10860	1250026	0					
ANR	1250029	IfStatement	if ( pfs -> Function )		1250026	0					
ANR	1250030	Condition	pfs -> Function	315:8:10653:10665	1250026	0	True				
ANR	1250031	PtrMemberAccess	pfs -> Function		1250026	0					
ANR	1250032	Identifier	pfs		1250026	0					
ANR	1250033	Identifier	Function		1250026	1					
ANR	1250034	CompoundStatement		3:8:34:79	1250026	1					
ANR	1250035	IdentifierDeclStatement	const gs_color_space * pcs = pfs -> direct_space ;	316:8:10678:10723	1250026	0	True				
ANR	1250036	IdentifierDecl	* pcs = pfs -> direct_space		1250026	0					
ANR	1250037	IdentifierDeclType	const gs_color_space *		1250026	0					
ANR	1250038	Identifier	pcs		1250026	1					
ANR	1250039	AssignmentExpression	* pcs = pfs -> direct_space		1250026	2		=			
ANR	1250040	Identifier	pcs		1250026	0					
ANR	1250041	PtrMemberAccess	pfs -> direct_space		1250026	1					
ANR	1250042	Identifier	pfs		1250026	0					
ANR	1250043	Identifier	direct_space		1250026	1					
ANR	1250044	ExpressionStatement	"gs_function_evaluate ( pfs -> Function , ppcr -> t , ppcr -> cc . paint . values )"	318:8:10734:10801	1250026	1	True				
ANR	1250045	CallExpression	"gs_function_evaluate ( pfs -> Function , ppcr -> t , ppcr -> cc . paint . values )"		1250026	0					
ANR	1250046	Callee	gs_function_evaluate		1250026	0					
ANR	1250047	Identifier	gs_function_evaluate		1250026	0					
ANR	1250048	ArgumentList	pfs -> Function		1250026	1					
ANR	1250049	Argument	pfs -> Function		1250026	0					
ANR	1250050	PtrMemberAccess	pfs -> Function		1250026	0					
ANR	1250051	Identifier	pfs		1250026	0					
ANR	1250052	Identifier	Function		1250026	1					
ANR	1250053	Argument	ppcr -> t		1250026	1					
ANR	1250054	PtrMemberAccess	ppcr -> t		1250026	0					
ANR	1250055	Identifier	ppcr		1250026	0					
ANR	1250056	Identifier	t		1250026	1					
ANR	1250057	Argument	ppcr -> cc . paint . values		1250026	2					
ANR	1250058	MemberAccess	ppcr -> cc . paint . values		1250026	0					
ANR	1250059	MemberAccess	ppcr -> cc . paint		1250026	0					
ANR	1250060	PtrMemberAccess	ppcr -> cc		1250026	0					
ANR	1250061	Identifier	ppcr		1250026	0					
ANR	1250062	Identifier	cc		1250026	1					
ANR	1250063	Identifier	paint		1250026	1					
ANR	1250064	Identifier	values		1250026	1					
ANR	1250065	ExpressionStatement	"pcs -> type -> restrict_color ( & ppcr -> cc , pcs )"	319:8:10811:10852	1250026	2	True				
ANR	1250066	CallExpression	"pcs -> type -> restrict_color ( & ppcr -> cc , pcs )"		1250026	0					
ANR	1250067	Callee	pcs -> type -> restrict_color		1250026	0					
ANR	1250068	PtrMemberAccess	pcs -> type -> restrict_color		1250026	0					
ANR	1250069	PtrMemberAccess	pcs -> type		1250026	0					
ANR	1250070	Identifier	pcs		1250026	0					
ANR	1250071	Identifier	type		1250026	1					
ANR	1250072	Identifier	restrict_color		1250026	1					
ANR	1250073	ArgumentList	& ppcr -> cc		1250026	1					
ANR	1250074	Argument	& ppcr -> cc		1250026	0					
ANR	1250075	UnaryOperationExpression	& ppcr -> cc		1250026	0					
ANR	1250076	UnaryOperator	&		1250026	0					
ANR	1250077	PtrMemberAccess	ppcr -> cc		1250026	1					
ANR	1250078	Identifier	ppcr		1250026	0					
ANR	1250079	Identifier	cc		1250026	1					
ANR	1250080	Argument	pcs		1250026	1					
ANR	1250081	Identifier	pcs		1250026	0					
ANR	1250082	ReturnType	static inline void		1250026	1					
ANR	1250083	Identifier	patch_resolve_color_inline		1250026	2					
ANR	1250084	ParameterList	"patch_color_t * ppcr , const patch_fill_state_t * pfs"		1250026	3					
ANR	1250085	Parameter	patch_color_t * ppcr	313:27:10590:10609	1250026	0	True				
ANR	1250086	ParameterType	patch_color_t *		1250026	0					
ANR	1250087	Identifier	ppcr		1250026	1					
ANR	1250088	Parameter	const patch_fill_state_t * pfs	313:49:10612:10640	1250026	1	True				
ANR	1250089	ParameterType	const patch_fill_state_t *		1250026	0					
ANR	1250090	Identifier	pfs		1250026	1					
ANR	1250091	CFGEntryNode	ENTRY		1250026		True				
ANR	1250092	CFGExitNode	EXIT		1250026		True				
ANR	1250093	Symbol	ppcr -> cc		1250026						
ANR	1250094	Symbol	pcs		1250026						
ANR	1250095	Symbol	pfs -> Function		1250026						
ANR	1250096	Symbol	* ppcr		1250026						
ANR	1250097	Symbol	* pfs		1250026						
ANR	1250098	Symbol	* pcs		1250026						
ANR	1250099	Symbol	ppcr -> t		1250026						
ANR	1250100	Symbol	& ppcr -> cc		1250026						
ANR	1250101	Symbol	pfs -> direct_space		1250026						
ANR	1250102	Symbol	ppcr -> cc . paint . values		1250026						
ANR	1250103	Symbol	ppcr		1250026						
ANR	1250104	Symbol	pfs		1250026						
ANR	1250105	Symbol	ppcr -> cc . paint		1250026						
ANR	1250106	Symbol	pcs -> type		1250026						
ANR	1250107	Function	patch_resolve_color	323:0:10863:10986							
ANR	1250108	FunctionDef	"patch_resolve_color (patch_color_t * ppcr , const patch_fill_state_t * pfs)"		1250107	0					
ANR	1250109	CompoundStatement		325:0:10941:10986	1250107	0					
ANR	1250110	ExpressionStatement	"patch_resolve_color_inline ( ppcr , pfs )"	326:4:10947:10984	1250107	0	True				
ANR	1250111	CallExpression	"patch_resolve_color_inline ( ppcr , pfs )"		1250107	0					
ANR	1250112	Callee	patch_resolve_color_inline		1250107	0					
ANR	1250113	Identifier	patch_resolve_color_inline		1250107	0					
ANR	1250114	ArgumentList	ppcr		1250107	1					
ANR	1250115	Argument	ppcr		1250107	0					
ANR	1250116	Identifier	ppcr		1250107	0					
ANR	1250117	Argument	pfs		1250107	1					
ANR	1250118	Identifier	pfs		1250107	0					
ANR	1250119	ReturnType	void		1250107	1					
ANR	1250120	Identifier	patch_resolve_color		1250107	2					
ANR	1250121	ParameterList	"patch_color_t * ppcr , const patch_fill_state_t * pfs"		1250107	3					
ANR	1250122	Parameter	patch_color_t * ppcr	324:20:10888:10907	1250107	0	True				
ANR	1250123	ParameterType	patch_color_t *		1250107	0					
ANR	1250124	Identifier	ppcr		1250107	1					
ANR	1250125	Parameter	const patch_fill_state_t * pfs	324:42:10910:10938	1250107	1	True				
ANR	1250126	ParameterType	const patch_fill_state_t *		1250107	0					
ANR	1250127	Identifier	pfs		1250107	1					
ANR	1250128	CFGEntryNode	ENTRY		1250107		True				
ANR	1250129	CFGExitNode	EXIT		1250107		True				
ANR	1250130	Symbol	ppcr		1250107						
ANR	1250131	Symbol	pfs		1250107						
ANR	1250132	Function	patch_interpolate_color	335:0:11233:11852							
ANR	1250133	FunctionDef	"patch_interpolate_color (patch_color_t * ppcr , const patch_color_t * ppc0 , const patch_color_t * ppc1 , const patch_fill_state_t * pfs , double t)"		1250132	0					
ANR	1250134	CompoundStatement		338:0:11395:11852	1250132	0					
ANR	1250135	IfStatement	if ( pfs -> Function )		1250132	0					
ANR	1250136	Condition	pfs -> Function	340:8:11449:11461	1250132	0	True				
ANR	1250137	PtrMemberAccess	pfs -> Function		1250132	0					
ANR	1250138	Identifier	pfs		1250132	0					
ANR	1250139	Identifier	Function		1250132	1					
ANR	1250140	CompoundStatement		3:23:68:68	1250132	1					
ANR	1250141	ExpressionStatement	ppcr -> t [ 0 ] = ppc0 -> t [ 0 ] * ( 1 - t ) + t * ppc1 -> t [ 0 ]	341:8:11474:11524	1250132	0	True				
ANR	1250142	AssignmentExpression	ppcr -> t [ 0 ] = ppc0 -> t [ 0 ] * ( 1 - t ) + t * ppc1 -> t [ 0 ]		1250132	0		=			
ANR	1250143	ArrayIndexing	ppcr -> t [ 0 ]		1250132	0					
ANR	1250144	PtrMemberAccess	ppcr -> t		1250132	0					
ANR	1250145	Identifier	ppcr		1250132	0					
ANR	1250146	Identifier	t		1250132	1					
ANR	1250147	PrimaryExpression	0		1250132	1					
ANR	1250148	AdditiveExpression	ppc0 -> t [ 0 ] * ( 1 - t ) + t * ppc1 -> t [ 0 ]		1250132	1		+			
ANR	1250149	MultiplicativeExpression	ppc0 -> t [ 0 ] * ( 1 - t )		1250132	0		*			
ANR	1250150	ArrayIndexing	ppc0 -> t [ 0 ]		1250132	0					
ANR	1250151	PtrMemberAccess	ppc0 -> t		1250132	0					
ANR	1250152	Identifier	ppc0		1250132	0					
ANR	1250153	Identifier	t		1250132	1					
ANR	1250154	PrimaryExpression	0		1250132	1					
ANR	1250155	AdditiveExpression	1 - t		1250132	1		-			
ANR	1250156	PrimaryExpression	1		1250132	0					
ANR	1250157	Identifier	t		1250132	1					
ANR	1250158	MultiplicativeExpression	t * ppc1 -> t [ 0 ]		1250132	1		*			
ANR	1250159	Identifier	t		1250132	0					
ANR	1250160	ArrayIndexing	ppc1 -> t [ 0 ]		1250132	1					
ANR	1250161	PtrMemberAccess	ppc1 -> t		1250132	0					
ANR	1250162	Identifier	ppc1		1250132	0					
ANR	1250163	Identifier	t		1250132	1					
ANR	1250164	PrimaryExpression	0		1250132	1					
ANR	1250165	ExpressionStatement	ppcr -> t [ 1 ] = ppc0 -> t [ 1 ] * ( 1 - t ) + t * ppc1 -> t [ 1 ]	342:8:11534:11584	1250132	1	True				
ANR	1250166	AssignmentExpression	ppcr -> t [ 1 ] = ppc0 -> t [ 1 ] * ( 1 - t ) + t * ppc1 -> t [ 1 ]		1250132	0		=			
ANR	1250167	ArrayIndexing	ppcr -> t [ 1 ]		1250132	0					
ANR	1250168	PtrMemberAccess	ppcr -> t		1250132	0					
ANR	1250169	Identifier	ppcr		1250132	0					
ANR	1250170	Identifier	t		1250132	1					
ANR	1250171	PrimaryExpression	1		1250132	1					
ANR	1250172	AdditiveExpression	ppc0 -> t [ 1 ] * ( 1 - t ) + t * ppc1 -> t [ 1 ]		1250132	1		+			
ANR	1250173	MultiplicativeExpression	ppc0 -> t [ 1 ] * ( 1 - t )		1250132	0		*			
ANR	1250174	ArrayIndexing	ppc0 -> t [ 1 ]		1250132	0					
ANR	1250175	PtrMemberAccess	ppc0 -> t		1250132	0					
ANR	1250176	Identifier	ppc0		1250132	0					
ANR	1250177	Identifier	t		1250132	1					
ANR	1250178	PrimaryExpression	1		1250132	1					
ANR	1250179	AdditiveExpression	1 - t		1250132	1		-			
ANR	1250180	PrimaryExpression	1		1250132	0					
ANR	1250181	Identifier	t		1250132	1					
ANR	1250182	MultiplicativeExpression	t * ppc1 -> t [ 1 ]		1250132	1		*			
ANR	1250183	Identifier	t		1250132	0					
ANR	1250184	ArrayIndexing	ppc1 -> t [ 1 ]		1250132	1					
ANR	1250185	PtrMemberAccess	ppc1 -> t		1250132	0					
ANR	1250186	Identifier	ppc1		1250132	0					
ANR	1250187	Identifier	t		1250132	1					
ANR	1250188	PrimaryExpression	1		1250132	1					
ANR	1250189	ExpressionStatement	"patch_resolve_color_inline ( ppcr , pfs )"	343:8:11594:11631	1250132	2	True				
ANR	1250190	CallExpression	"patch_resolve_color_inline ( ppcr , pfs )"		1250132	0					
ANR	1250191	Callee	patch_resolve_color_inline		1250132	0					
ANR	1250192	Identifier	patch_resolve_color_inline		1250132	0					
ANR	1250193	ArgumentList	ppcr		1250132	1					
ANR	1250194	Argument	ppcr		1250132	0					
ANR	1250195	Identifier	ppcr		1250132	0					
ANR	1250196	Argument	pfs		1250132	1					
ANR	1250197	Identifier	pfs		1250132	0					
ANR	1250198	ElseStatement	else		1250132	0					
ANR	1250199	CompoundStatement		8:8:258:264	1250132	0					
ANR	1250200	IdentifierDeclStatement	int ci ;	345:8:11654:11660	1250132	0	True				
ANR	1250201	IdentifierDecl	ci		1250132	0					
ANR	1250202	IdentifierDeclType	int		1250132	0					
ANR	1250203	Identifier	ci		1250132	1					
ANR	1250204	ForStatement	for ( ci = pfs -> num_components - 1 ; ci >= 0 ; -- ci )		1250132	1					
ANR	1250205	ForInit	ci = pfs -> num_components - 1 ;	347:13:11676:11704	1250132	0	True				
ANR	1250206	AssignmentExpression	ci = pfs -> num_components - 1		1250132	0		=			
ANR	1250207	Identifier	ci		1250132	0					
ANR	1250208	AdditiveExpression	pfs -> num_components - 1		1250132	1		-			
ANR	1250209	PtrMemberAccess	pfs -> num_components		1250132	0					
ANR	1250210	Identifier	pfs		1250132	0					
ANR	1250211	Identifier	num_components		1250132	1					
ANR	1250212	PrimaryExpression	1		1250132	1					
ANR	1250213	Condition	ci >= 0	347:43:11706:11712	1250132	1	True				
ANR	1250214	RelationalExpression	ci >= 0		1250132	0		>=			
ANR	1250215	Identifier	ci		1250132	0					
ANR	1250216	PrimaryExpression	0		1250132	1					
ANR	1250217	UnaryExpression	-- ci	347:52:11715:11718	1250132	2	True				
ANR	1250218	IncDec	--		1250132	0					
ANR	1250219	Identifier	ci		1250132	1					
ANR	1250220	ExpressionStatement	ppcr -> cc . paint . values [ ci ] = ppc0 -> cc . paint . values [ ci ] * ( 1 - t ) + t * ppc1 -> cc . paint . values [ ci ]	348:12:11733:11844	1250132	3	True				
ANR	1250221	AssignmentExpression	ppcr -> cc . paint . values [ ci ] = ppc0 -> cc . paint . values [ ci ] * ( 1 - t ) + t * ppc1 -> cc . paint . values [ ci ]		1250132	0		=			
ANR	1250222	ArrayIndexing	ppcr -> cc . paint . values [ ci ]		1250132	0					
ANR	1250223	MemberAccess	ppcr -> cc . paint . values		1250132	0					
ANR	1250224	MemberAccess	ppcr -> cc . paint		1250132	0					
ANR	1250225	PtrMemberAccess	ppcr -> cc		1250132	0					
ANR	1250226	Identifier	ppcr		1250132	0					
ANR	1250227	Identifier	cc		1250132	1					
ANR	1250228	Identifier	paint		1250132	1					
ANR	1250229	Identifier	values		1250132	1					
ANR	1250230	Identifier	ci		1250132	1					
ANR	1250231	AdditiveExpression	ppc0 -> cc . paint . values [ ci ] * ( 1 - t ) + t * ppc1 -> cc . paint . values [ ci ]		1250132	1		+			
ANR	1250232	MultiplicativeExpression	ppc0 -> cc . paint . values [ ci ] * ( 1 - t )		1250132	0		*			
ANR	1250233	ArrayIndexing	ppc0 -> cc . paint . values [ ci ]		1250132	0					
ANR	1250234	MemberAccess	ppc0 -> cc . paint . values		1250132	0					
ANR	1250235	MemberAccess	ppc0 -> cc . paint		1250132	0					
ANR	1250236	PtrMemberAccess	ppc0 -> cc		1250132	0					
ANR	1250237	Identifier	ppc0		1250132	0					
ANR	1250238	Identifier	cc		1250132	1					
ANR	1250239	Identifier	paint		1250132	1					
ANR	1250240	Identifier	values		1250132	1					
ANR	1250241	Identifier	ci		1250132	1					
ANR	1250242	AdditiveExpression	1 - t		1250132	1		-			
ANR	1250243	PrimaryExpression	1		1250132	0					
ANR	1250244	Identifier	t		1250132	1					
ANR	1250245	MultiplicativeExpression	t * ppc1 -> cc . paint . values [ ci ]		1250132	1		*			
ANR	1250246	Identifier	t		1250132	0					
ANR	1250247	ArrayIndexing	ppc1 -> cc . paint . values [ ci ]		1250132	1					
ANR	1250248	MemberAccess	ppc1 -> cc . paint . values		1250132	0					
ANR	1250249	MemberAccess	ppc1 -> cc . paint		1250132	0					
ANR	1250250	PtrMemberAccess	ppc1 -> cc		1250132	0					
ANR	1250251	Identifier	ppc1		1250132	0					
ANR	1250252	Identifier	cc		1250132	1					
ANR	1250253	Identifier	paint		1250132	1					
ANR	1250254	Identifier	values		1250132	1					
ANR	1250255	Identifier	ci		1250132	1					
ANR	1250256	ReturnType	static void		1250132	1					
ANR	1250257	Identifier	patch_interpolate_color		1250132	2					
ANR	1250258	ParameterList	"patch_color_t * ppcr , const patch_color_t * ppc0 , const patch_color_t * ppc1 , const patch_fill_state_t * pfs , double t"		1250132	3					
ANR	1250259	Parameter	patch_color_t * ppcr	336:24:11269:11288	1250132	0	True				
ANR	1250260	ParameterType	patch_color_t *		1250132	0					
ANR	1250261	Identifier	ppcr		1250132	1					
ANR	1250262	Parameter	const patch_color_t * ppc0	336:46:11291:11316	1250132	1	True				
ANR	1250263	ParameterType	const patch_color_t *		1250132	0					
ANR	1250264	Identifier	ppc0		1250132	1					
ANR	1250265	Parameter	const patch_color_t * ppc1	337:7:11326:11351	1250132	2	True				
ANR	1250266	ParameterType	const patch_color_t *		1250132	0					
ANR	1250267	Identifier	ppc1		1250132	1					
ANR	1250268	Parameter	const patch_fill_state_t * pfs	337:35:11354:11382	1250132	3	True				
ANR	1250269	ParameterType	const patch_fill_state_t *		1250132	0					
ANR	1250270	Identifier	pfs		1250132	1					
ANR	1250271	Parameter	double t	337:66:11385:11392	1250132	4	True				
ANR	1250272	ParameterType	double		1250132	0					
ANR	1250273	Identifier	t		1250132	1					
ANR	1250274	CFGEntryNode	ENTRY		1250132		True				
ANR	1250275	CFGExitNode	EXIT		1250132		True				
ANR	1250276	Symbol	* * ppcr		1250132						
ANR	1250277	Symbol	* ppc0		1250132						
ANR	1250278	Symbol	* * ppc1		1250132						
ANR	1250279	Symbol	* * ppc0		1250132						
ANR	1250280	Symbol	* ppc0 -> cc . paint		1250132						
ANR	1250281	Symbol	pfs -> Function		1250132						
ANR	1250282	Symbol	ppc1 -> t		1250132						
ANR	1250283	Symbol	* ppcr		1250132						
ANR	1250284	Symbol	* ppc0 -> cc . paint . values		1250132						
ANR	1250285	Symbol	* ppc1		1250132						
ANR	1250286	Symbol	ppcr -> t		1250132						
ANR	1250287	Symbol	* ppc0 -> cc		1250132						
ANR	1250288	Symbol	* ppcr -> cc . paint		1250132						
ANR	1250289	Symbol	* ci		1250132						
ANR	1250290	Symbol	* ppc0 -> t		1250132						
ANR	1250291	Symbol	ppc1 -> cc		1250132						
ANR	1250292	Symbol	pfs -> num_components		1250132						
ANR	1250293	Symbol	* ppc1 -> cc		1250132						
ANR	1250294	Symbol	ppc0 -> cc . paint . values		1250132						
ANR	1250295	Symbol	ppc0		1250132						
ANR	1250296	Symbol	ppc1		1250132						
ANR	1250297	Symbol	ppcr		1250132						
ANR	1250298	Symbol	ppcr -> cc		1250132						
ANR	1250299	Symbol	* ppcr -> cc . paint . values		1250132						
ANR	1250300	Symbol	ppc0 -> t		1250132						
ANR	1250301	Symbol	ci		1250132						
ANR	1250302	Symbol	* pfs		1250132						
ANR	1250303	Symbol	* ppc1 -> t		1250132						
ANR	1250304	Symbol	* ppc1 -> cc . paint		1250132						
ANR	1250305	Symbol	* ppc1 -> cc . paint . values		1250132						
ANR	1250306	Symbol	ppc0 -> cc . paint		1250132						
ANR	1250307	Symbol	* ppcr -> cc		1250132						
ANR	1250308	Symbol	ppcr -> cc . paint . values		1250132						
ANR	1250309	Symbol	* ppcr -> t		1250132						
ANR	1250310	Symbol	t		1250132						
ANR	1250311	Symbol	ppc1 -> cc . paint		1250132						
ANR	1250312	Symbol	pfs		1250132						
ANR	1250313	Symbol	ppc1 -> cc . paint . values		1250132						
ANR	1250314	Symbol	ppcr -> cc . paint		1250132						
ANR	1250315	Symbol	ppc0 -> cc		1250132						
ANR	1250316	Function	curve_eval	380:0:12644:13330							
ANR	1250317	FunctionDef	"curve_eval (gs_fixed_point * pt , const gs_fixed_point * p0 , const gs_fixed_point * p1 , const gs_fixed_point * p2 , const gs_fixed_point * p3 , double t)"		1250316	0					
ANR	1250318	CompoundStatement		384:0:12828:13330	1250316	0					
ANR	1250319	IdentifierDeclStatement	"fixed a , b , c , d ;"	385:4:12834:12850	1250316	0	True				
ANR	1250320	IdentifierDecl	a		1250316	0					
ANR	1250321	IdentifierDeclType	fixed		1250316	0					
ANR	1250322	Identifier	a		1250316	1					
ANR	1250323	IdentifierDecl	b		1250316	1					
ANR	1250324	IdentifierDeclType	fixed		1250316	0					
ANR	1250325	Identifier	b		1250316	1					
ANR	1250326	IdentifierDecl	c		1250316	2					
ANR	1250327	IdentifierDeclType	fixed		1250316	0					
ANR	1250328	Identifier	c		1250316	1					
ANR	1250329	IdentifierDecl	d		1250316	3					
ANR	1250330	IdentifierDeclType	fixed		1250316	0					
ANR	1250331	Identifier	d		1250316	1					
ANR	1250332	IdentifierDeclStatement	"fixed t01 , t12 ;"	386:4:12856:12870	1250316	1	True				
ANR	1250333	IdentifierDecl	t01		1250316	0					
ANR	1250334	IdentifierDeclType	fixed		1250316	0					
ANR	1250335	Identifier	t01		1250316	1					
ANR	1250336	IdentifierDecl	t12		1250316	1					
ANR	1250337	IdentifierDeclType	fixed		1250316	0					
ANR	1250338	Identifier	t12		1250316	1					
ANR	1250339	ExpressionStatement	d = p0 -> x	388:4:12877:12886	1250316	2	True				
ANR	1250340	AssignmentExpression	d = p0 -> x		1250316	0		=			
ANR	1250341	Identifier	d		1250316	0					
ANR	1250342	PtrMemberAccess	p0 -> x		1250316	1					
ANR	1250343	Identifier	p0		1250316	0					
ANR	1250344	Identifier	x		1250316	1					
ANR	1250345	ExpressionStatement	"curve_points_to_coefficients ( d , p1 -> x , p2 -> x , p3 -> x , a , b , c , t01 , t12 )"	389:4:12892:12996	1250316	3	True				
ANR	1250346	CallExpression	"curve_points_to_coefficients ( d , p1 -> x , p2 -> x , p3 -> x , a , b , c , t01 , t12 )"		1250316	0					
ANR	1250347	Callee	curve_points_to_coefficients		1250316	0					
ANR	1250348	Identifier	curve_points_to_coefficients		1250316	0					
ANR	1250349	ArgumentList	d		1250316	1					
ANR	1250350	Argument	d		1250316	0					
ANR	1250351	Identifier	d		1250316	0					
ANR	1250352	Argument	p1 -> x		1250316	1					
ANR	1250353	PtrMemberAccess	p1 -> x		1250316	0					
ANR	1250354	Identifier	p1		1250316	0					
ANR	1250355	Identifier	x		1250316	1					
ANR	1250356	Argument	p2 -> x		1250316	2					
ANR	1250357	PtrMemberAccess	p2 -> x		1250316	0					
ANR	1250358	Identifier	p2		1250316	0					
ANR	1250359	Identifier	x		1250316	1					
ANR	1250360	Argument	p3 -> x		1250316	3					
ANR	1250361	PtrMemberAccess	p3 -> x		1250316	0					
ANR	1250362	Identifier	p3		1250316	0					
ANR	1250363	Identifier	x		1250316	1					
ANR	1250364	Argument	a		1250316	4					
ANR	1250365	Identifier	a		1250316	0					
ANR	1250366	Argument	b		1250316	5					
ANR	1250367	Identifier	b		1250316	0					
ANR	1250368	Argument	c		1250316	6					
ANR	1250369	Identifier	c		1250316	0					
ANR	1250370	Argument	t01		1250316	7					
ANR	1250371	Identifier	t01		1250316	0					
ANR	1250372	Argument	t12		1250316	8					
ANR	1250373	Identifier	t12		1250316	0					
ANR	1250374	ExpressionStatement	pt -> x = ( fixed ) ( ( ( a * t + b ) * t + c ) * t + d )	391:4:13002:13049	1250316	4	True				
ANR	1250375	AssignmentExpression	pt -> x = ( fixed ) ( ( ( a * t + b ) * t + c ) * t + d )		1250316	0		=			
ANR	1250376	PtrMemberAccess	pt -> x		1250316	0					
ANR	1250377	Identifier	pt		1250316	0					
ANR	1250378	Identifier	x		1250316	1					
ANR	1250379	CastExpression	( fixed ) ( ( ( a * t + b ) * t + c ) * t + d )		1250316	1					
ANR	1250380	CastTarget	fixed		1250316	0					
ANR	1250381	AdditiveExpression	( ( a * t + b ) * t + c ) * t + d		1250316	1		+			
ANR	1250382	MultiplicativeExpression	( ( a * t + b ) * t + c ) * t		1250316	0		*			
ANR	1250383	AdditiveExpression	( a * t + b ) * t + c		1250316	0		+			
ANR	1250384	MultiplicativeExpression	( a * t + b ) * t		1250316	0		*			
ANR	1250385	AdditiveExpression	a * t + b		1250316	0		+			
ANR	1250386	MultiplicativeExpression	a * t		1250316	0		*			
ANR	1250387	Identifier	a		1250316	0					
ANR	1250388	Identifier	t		1250316	1					
ANR	1250389	Identifier	b		1250316	1					
ANR	1250390	Identifier	t		1250316	1					
ANR	1250391	Identifier	c		1250316	1					
ANR	1250392	Identifier	t		1250316	1					
ANR	1250393	Identifier	d		1250316	1					
ANR	1250394	ExpressionStatement	d = p0 -> y	392:4:13055:13064	1250316	5	True				
ANR	1250395	AssignmentExpression	d = p0 -> y		1250316	0		=			
ANR	1250396	Identifier	d		1250316	0					
ANR	1250397	PtrMemberAccess	p0 -> y		1250316	1					
ANR	1250398	Identifier	p0		1250316	0					
ANR	1250399	Identifier	y		1250316	1					
ANR	1250400	ExpressionStatement	"curve_points_to_coefficients ( d , p1 -> y , p2 -> y , p3 -> y , a , b , c , t01 , t12 )"	393:4:13070:13174	1250316	6	True				
ANR	1250401	CallExpression	"curve_points_to_coefficients ( d , p1 -> y , p2 -> y , p3 -> y , a , b , c , t01 , t12 )"		1250316	0					
ANR	1250402	Callee	curve_points_to_coefficients		1250316	0					
ANR	1250403	Identifier	curve_points_to_coefficients		1250316	0					
ANR	1250404	ArgumentList	d		1250316	1					
ANR	1250405	Argument	d		1250316	0					
ANR	1250406	Identifier	d		1250316	0					
ANR	1250407	Argument	p1 -> y		1250316	1					
ANR	1250408	PtrMemberAccess	p1 -> y		1250316	0					
ANR	1250409	Identifier	p1		1250316	0					
ANR	1250410	Identifier	y		1250316	1					
ANR	1250411	Argument	p2 -> y		1250316	2					
ANR	1250412	PtrMemberAccess	p2 -> y		1250316	0					
ANR	1250413	Identifier	p2		1250316	0					
ANR	1250414	Identifier	y		1250316	1					
ANR	1250415	Argument	p3 -> y		1250316	3					
ANR	1250416	PtrMemberAccess	p3 -> y		1250316	0					
ANR	1250417	Identifier	p3		1250316	0					
ANR	1250418	Identifier	y		1250316	1					
ANR	1250419	Argument	a		1250316	4					
ANR	1250420	Identifier	a		1250316	0					
ANR	1250421	Argument	b		1250316	5					
ANR	1250422	Identifier	b		1250316	0					
ANR	1250423	Argument	c		1250316	6					
ANR	1250424	Identifier	c		1250316	0					
ANR	1250425	Argument	t01		1250316	7					
ANR	1250426	Identifier	t01		1250316	0					
ANR	1250427	Argument	t12		1250316	8					
ANR	1250428	Identifier	t12		1250316	0					
ANR	1250429	ExpressionStatement	pt -> y = ( fixed ) ( ( ( a * t + b ) * t + c ) * t + d )	395:4:13180:13227	1250316	7	True				
ANR	1250430	AssignmentExpression	pt -> y = ( fixed ) ( ( ( a * t + b ) * t + c ) * t + d )		1250316	0		=			
ANR	1250431	PtrMemberAccess	pt -> y		1250316	0					
ANR	1250432	Identifier	pt		1250316	0					
ANR	1250433	Identifier	y		1250316	1					
ANR	1250434	CastExpression	( fixed ) ( ( ( a * t + b ) * t + c ) * t + d )		1250316	1					
ANR	1250435	CastTarget	fixed		1250316	0					
ANR	1250436	AdditiveExpression	( ( a * t + b ) * t + c ) * t + d		1250316	1		+			
ANR	1250437	MultiplicativeExpression	( ( a * t + b ) * t + c ) * t		1250316	0		*			
ANR	1250438	AdditiveExpression	( a * t + b ) * t + c		1250316	0		+			
ANR	1250439	MultiplicativeExpression	( a * t + b ) * t		1250316	0		*			
ANR	1250440	AdditiveExpression	a * t + b		1250316	0		+			
ANR	1250441	MultiplicativeExpression	a * t		1250316	0		*			
ANR	1250442	Identifier	a		1250316	0					
ANR	1250443	Identifier	t		1250316	1					
ANR	1250444	Identifier	b		1250316	1					
ANR	1250445	Identifier	t		1250316	1					
ANR	1250446	Identifier	c		1250316	1					
ANR	1250447	Identifier	t		1250316	1					
ANR	1250448	Identifier	d		1250316	1					
ANR	1250449	ExpressionStatement	"if_debug3 ( '2' , ""[2]t=%g => (%g,%g)\\n"" , t , fixed2float ( pt -> x ) , fixed2float ( pt -> y ) )"	396:4:13233:13328	1250316	8	True				
ANR	1250450	CallExpression	"if_debug3 ( '2' , ""[2]t=%g => (%g,%g)\\n"" , t , fixed2float ( pt -> x ) , fixed2float ( pt -> y ) )"		1250316	0					
ANR	1250451	Callee	if_debug3		1250316	0					
ANR	1250452	Identifier	if_debug3		1250316	0					
ANR	1250453	ArgumentList	'2'		1250316	1					
ANR	1250454	Argument	'2'		1250316	0					
ANR	1250455	PrimaryExpression	'2'		1250316	0					
ANR	1250456	Argument	"""[2]t=%g => (%g,%g)\\n"""		1250316	1					
ANR	1250457	PrimaryExpression	"""[2]t=%g => (%g,%g)\\n"""		1250316	0					
ANR	1250458	Argument	t		1250316	2					
ANR	1250459	Identifier	t		1250316	0					
ANR	1250460	Argument	fixed2float ( pt -> x )		1250316	3					
ANR	1250461	CallExpression	fixed2float ( pt -> x )		1250316	0					
ANR	1250462	Callee	fixed2float		1250316	0					
ANR	1250463	Identifier	fixed2float		1250316	0					
ANR	1250464	ArgumentList	pt -> x		1250316	1					
ANR	1250465	Argument	pt -> x		1250316	0					
ANR	1250466	PtrMemberAccess	pt -> x		1250316	0					
ANR	1250467	Identifier	pt		1250316	0					
ANR	1250468	Identifier	x		1250316	1					
ANR	1250469	Argument	fixed2float ( pt -> y )		1250316	4					
ANR	1250470	CallExpression	fixed2float ( pt -> y )		1250316	0					
ANR	1250471	Callee	fixed2float		1250316	0					
ANR	1250472	Identifier	fixed2float		1250316	0					
ANR	1250473	ArgumentList	pt -> y		1250316	1					
ANR	1250474	Argument	pt -> y		1250316	0					
ANR	1250475	PtrMemberAccess	pt -> y		1250316	0					
ANR	1250476	Identifier	pt		1250316	0					
ANR	1250477	Identifier	y		1250316	1					
ANR	1250478	ReturnType	static void		1250316	1					
ANR	1250479	Identifier	curve_eval		1250316	2					
ANR	1250480	ParameterList	"gs_fixed_point * pt , const gs_fixed_point * p0 , const gs_fixed_point * p1 , const gs_fixed_point * p2 , const gs_fixed_point * p3 , double t"		1250316	3					
ANR	1250481	Parameter	gs_fixed_point * pt	381:11:12667:12685	1250316	0	True				
ANR	1250482	ParameterType	gs_fixed_point *		1250316	0					
ANR	1250483	Identifier	pt		1250316	1					
ANR	1250484	Parameter	const gs_fixed_point * p0	381:32:12688:12712	1250316	1	True				
ANR	1250485	ParameterType	const gs_fixed_point *		1250316	0					
ANR	1250486	Identifier	p0		1250316	1					
ANR	1250487	Parameter	const gs_fixed_point * p1	382:11:12726:12750	1250316	2	True				
ANR	1250488	ParameterType	const gs_fixed_point *		1250316	0					
ANR	1250489	Identifier	p1		1250316	1					
ANR	1250490	Parameter	const gs_fixed_point * p2	382:38:12753:12777	1250316	3	True				
ANR	1250491	ParameterType	const gs_fixed_point *		1250316	0					
ANR	1250492	Identifier	p2		1250316	1					
ANR	1250493	Parameter	const gs_fixed_point * p3	383:11:12791:12815	1250316	4	True				
ANR	1250494	ParameterType	const gs_fixed_point *		1250316	0					
ANR	1250495	Identifier	p3		1250316	1					
ANR	1250496	Parameter	double t	383:38:12818:12825	1250316	5	True				
ANR	1250497	ParameterType	double		1250316	0					
ANR	1250498	Identifier	t		1250316	1					
ANR	1250499	CFGEntryNode	ENTRY		1250316		True				
ANR	1250500	CFGExitNode	EXIT		1250316		True				
ANR	1250501	Symbol	p0		1250316						
ANR	1250502	Symbol	p1		1250316						
ANR	1250503	Symbol	p2		1250316						
ANR	1250504	Symbol	p3		1250316						
ANR	1250505	Symbol	p2 -> x		1250316						
ANR	1250506	Symbol	pt		1250316						
ANR	1250507	Symbol	p2 -> y		1250316						
ANR	1250508	Symbol	p0 -> y		1250316						
ANR	1250509	Symbol	p0 -> x		1250316						
ANR	1250510	Symbol	t12		1250316						
ANR	1250511	Symbol	p3 -> y		1250316						
ANR	1250512	Symbol	p3 -> x		1250316						
ANR	1250513	Symbol	a		1250316						
ANR	1250514	Symbol	pt -> x		1250316						
ANR	1250515	Symbol	b		1250316						
ANR	1250516	Symbol	pt -> y		1250316						
ANR	1250517	Symbol	c		1250316						
ANR	1250518	Symbol	d		1250316						
ANR	1250519	Symbol	* p1		1250316						
ANR	1250520	Symbol	fixed2float		1250316						
ANR	1250521	Symbol	* p0		1250316						
ANR	1250522	Symbol	p1 -> y		1250316						
ANR	1250523	Symbol	p1 -> x		1250316						
ANR	1250524	Symbol	* pt		1250316						
ANR	1250525	Symbol	* p3		1250316						
ANR	1250526	Symbol	* p2		1250316						
ANR	1250527	Symbol	t		1250316						
ANR	1250528	Symbol	t01		1250316						
ANR	1250529	Function	Cp_transform	403:0:13462:14839							
ANR	1250530	FunctionDef	"Cp_transform (gs_fixed_point * pt , const patch_curve_t curve [ 4 ] , const gs_fixed_point ignore_interior [ 4 ] , double u , double v)"		1250529	0					
ANR	1250531	CompoundStatement		406:0:13612:14839	1250529	0					
ANR	1250532	IdentifierDeclStatement	"double co_u = 1.0 - u , co_v = 1.0 - v ;"	407:4:13618:13655	1250529	0	True				
ANR	1250533	IdentifierDecl	co_u = 1.0 - u		1250529	0					
ANR	1250534	IdentifierDeclType	double		1250529	0					
ANR	1250535	Identifier	co_u		1250529	1					
ANR	1250536	AssignmentExpression	co_u = 1.0 - u		1250529	2		=			
ANR	1250537	Identifier	co_u		1250529	0					
ANR	1250538	AdditiveExpression	1.0 - u		1250529	1		-			
ANR	1250539	PrimaryExpression	1.0		1250529	0					
ANR	1250540	Identifier	u		1250529	1					
ANR	1250541	IdentifierDecl	co_v = 1.0 - v		1250529	1					
ANR	1250542	IdentifierDeclType	double		1250529	0					
ANR	1250543	Identifier	co_v		1250529	1					
ANR	1250544	AssignmentExpression	co_v = 1.0 - v		1250529	2		=			
ANR	1250545	Identifier	co_v		1250529	0					
ANR	1250546	AdditiveExpression	1.0 - v		1250529	1		-			
ANR	1250547	PrimaryExpression	1.0		1250529	0					
ANR	1250548	Identifier	v		1250529	1					
ANR	1250549	IdentifierDeclStatement	"gs_fixed_point c1u , d1v , c2u , d2v ;"	408:4:13661:13694	1250529	1	True				
ANR	1250550	IdentifierDecl	c1u		1250529	0					
ANR	1250551	IdentifierDeclType	gs_fixed_point		1250529	0					
ANR	1250552	Identifier	c1u		1250529	1					
ANR	1250553	IdentifierDecl	d1v		1250529	1					
ANR	1250554	IdentifierDeclType	gs_fixed_point		1250529	0					
ANR	1250555	Identifier	d1v		1250529	1					
ANR	1250556	IdentifierDecl	c2u		1250529	2					
ANR	1250557	IdentifierDeclType	gs_fixed_point		1250529	0					
ANR	1250558	Identifier	c2u		1250529	1					
ANR	1250559	IdentifierDecl	d2v		1250529	3					
ANR	1250560	IdentifierDeclType	gs_fixed_point		1250529	0					
ANR	1250561	Identifier	d2v		1250529	1					
ANR	1250562	ExpressionStatement	"curve_eval ( & c1u , & curve [ C1START ] . vertex . p , & curve [ C1XCTRL ] . control [ 1 ] , & curve [ C1XCTRL ] . control [ 0 ] , & curve [ C1END ] . vertex . p , u )"	410:4:13701:13856	1250529	2	True				
ANR	1250563	CallExpression	"curve_eval ( & c1u , & curve [ C1START ] . vertex . p , & curve [ C1XCTRL ] . control [ 1 ] , & curve [ C1XCTRL ] . control [ 0 ] , & curve [ C1END ] . vertex . p , u )"		1250529	0					
ANR	1250564	Callee	curve_eval		1250529	0					
ANR	1250565	Identifier	curve_eval		1250529	0					
ANR	1250566	ArgumentList	& c1u		1250529	1					
ANR	1250567	Argument	& c1u		1250529	0					
ANR	1250568	UnaryOperationExpression	& c1u		1250529	0					
ANR	1250569	UnaryOperator	&		1250529	0					
ANR	1250570	Identifier	c1u		1250529	1					
ANR	1250571	Argument	& curve [ C1START ] . vertex . p		1250529	1					
ANR	1250572	UnaryOperationExpression	& curve [ C1START ] . vertex . p		1250529	0					
ANR	1250573	UnaryOperator	&		1250529	0					
ANR	1250574	MemberAccess	curve [ C1START ] . vertex . p		1250529	1					
ANR	1250575	MemberAccess	curve [ C1START ] . vertex		1250529	0					
ANR	1250576	ArrayIndexing	curve [ C1START ]		1250529	0					
ANR	1250577	Identifier	curve		1250529	0					
ANR	1250578	Identifier	C1START		1250529	1					
ANR	1250579	Identifier	vertex		1250529	1					
ANR	1250580	Identifier	p		1250529	1					
ANR	1250581	Argument	& curve [ C1XCTRL ] . control [ 1 ]		1250529	2					
ANR	1250582	UnaryOperationExpression	& curve [ C1XCTRL ] . control [ 1 ]		1250529	0					
ANR	1250583	UnaryOperator	&		1250529	0					
ANR	1250584	ArrayIndexing	curve [ C1XCTRL ] . control [ 1 ]		1250529	1					
ANR	1250585	MemberAccess	curve [ C1XCTRL ] . control		1250529	0					
ANR	1250586	ArrayIndexing	curve [ C1XCTRL ]		1250529	0					
ANR	1250587	Identifier	curve		1250529	0					
ANR	1250588	Identifier	C1XCTRL		1250529	1					
ANR	1250589	Identifier	control		1250529	1					
ANR	1250590	PrimaryExpression	1		1250529	1					
ANR	1250591	Argument	& curve [ C1XCTRL ] . control [ 0 ]		1250529	3					
ANR	1250592	UnaryOperationExpression	& curve [ C1XCTRL ] . control [ 0 ]		1250529	0					
ANR	1250593	UnaryOperator	&		1250529	0					
ANR	1250594	ArrayIndexing	curve [ C1XCTRL ] . control [ 0 ]		1250529	1					
ANR	1250595	MemberAccess	curve [ C1XCTRL ] . control		1250529	0					
ANR	1250596	ArrayIndexing	curve [ C1XCTRL ]		1250529	0					
ANR	1250597	Identifier	curve		1250529	0					
ANR	1250598	Identifier	C1XCTRL		1250529	1					
ANR	1250599	Identifier	control		1250529	1					
ANR	1250600	PrimaryExpression	0		1250529	1					
ANR	1250601	Argument	& curve [ C1END ] . vertex . p		1250529	4					
ANR	1250602	UnaryOperationExpression	& curve [ C1END ] . vertex . p		1250529	0					
ANR	1250603	UnaryOperator	&		1250529	0					
ANR	1250604	MemberAccess	curve [ C1END ] . vertex . p		1250529	1					
ANR	1250605	MemberAccess	curve [ C1END ] . vertex		1250529	0					
ANR	1250606	ArrayIndexing	curve [ C1END ]		1250529	0					
ANR	1250607	Identifier	curve		1250529	0					
ANR	1250608	Identifier	C1END		1250529	1					
ANR	1250609	Identifier	vertex		1250529	1					
ANR	1250610	Identifier	p		1250529	1					
ANR	1250611	Argument	u		1250529	5					
ANR	1250612	Identifier	u		1250529	0					
ANR	1250613	ExpressionStatement	"curve_eval ( & d1v , & curve [ D1START ] . vertex . p , & curve [ D1CTRL ] . control [ 0 ] , & curve [ D1CTRL ] . control [ 1 ] , & curve [ D1END ] . vertex . p , v )"	413:4:13862:14015	1250529	3	True				
ANR	1250614	CallExpression	"curve_eval ( & d1v , & curve [ D1START ] . vertex . p , & curve [ D1CTRL ] . control [ 0 ] , & curve [ D1CTRL ] . control [ 1 ] , & curve [ D1END ] . vertex . p , v )"		1250529	0					
ANR	1250615	Callee	curve_eval		1250529	0					
ANR	1250616	Identifier	curve_eval		1250529	0					
ANR	1250617	ArgumentList	& d1v		1250529	1					
ANR	1250618	Argument	& d1v		1250529	0					
ANR	1250619	UnaryOperationExpression	& d1v		1250529	0					
ANR	1250620	UnaryOperator	&		1250529	0					
ANR	1250621	Identifier	d1v		1250529	1					
ANR	1250622	Argument	& curve [ D1START ] . vertex . p		1250529	1					
ANR	1250623	UnaryOperationExpression	& curve [ D1START ] . vertex . p		1250529	0					
ANR	1250624	UnaryOperator	&		1250529	0					
ANR	1250625	MemberAccess	curve [ D1START ] . vertex . p		1250529	1					
ANR	1250626	MemberAccess	curve [ D1START ] . vertex		1250529	0					
ANR	1250627	ArrayIndexing	curve [ D1START ]		1250529	0					
ANR	1250628	Identifier	curve		1250529	0					
ANR	1250629	Identifier	D1START		1250529	1					
ANR	1250630	Identifier	vertex		1250529	1					
ANR	1250631	Identifier	p		1250529	1					
ANR	1250632	Argument	& curve [ D1CTRL ] . control [ 0 ]		1250529	2					
ANR	1250633	UnaryOperationExpression	& curve [ D1CTRL ] . control [ 0 ]		1250529	0					
ANR	1250634	UnaryOperator	&		1250529	0					
ANR	1250635	ArrayIndexing	curve [ D1CTRL ] . control [ 0 ]		1250529	1					
ANR	1250636	MemberAccess	curve [ D1CTRL ] . control		1250529	0					
ANR	1250637	ArrayIndexing	curve [ D1CTRL ]		1250529	0					
ANR	1250638	Identifier	curve		1250529	0					
ANR	1250639	Identifier	D1CTRL		1250529	1					
ANR	1250640	Identifier	control		1250529	1					
ANR	1250641	PrimaryExpression	0		1250529	1					
ANR	1250642	Argument	& curve [ D1CTRL ] . control [ 1 ]		1250529	3					
ANR	1250643	UnaryOperationExpression	& curve [ D1CTRL ] . control [ 1 ]		1250529	0					
ANR	1250644	UnaryOperator	&		1250529	0					
ANR	1250645	ArrayIndexing	curve [ D1CTRL ] . control [ 1 ]		1250529	1					
ANR	1250646	MemberAccess	curve [ D1CTRL ] . control		1250529	0					
ANR	1250647	ArrayIndexing	curve [ D1CTRL ]		1250529	0					
ANR	1250648	Identifier	curve		1250529	0					
ANR	1250649	Identifier	D1CTRL		1250529	1					
ANR	1250650	Identifier	control		1250529	1					
ANR	1250651	PrimaryExpression	1		1250529	1					
ANR	1250652	Argument	& curve [ D1END ] . vertex . p		1250529	4					
ANR	1250653	UnaryOperationExpression	& curve [ D1END ] . vertex . p		1250529	0					
ANR	1250654	UnaryOperator	&		1250529	0					
ANR	1250655	MemberAccess	curve [ D1END ] . vertex . p		1250529	1					
ANR	1250656	MemberAccess	curve [ D1END ] . vertex		1250529	0					
ANR	1250657	ArrayIndexing	curve [ D1END ]		1250529	0					
ANR	1250658	Identifier	curve		1250529	0					
ANR	1250659	Identifier	D1END		1250529	1					
ANR	1250660	Identifier	vertex		1250529	1					
ANR	1250661	Identifier	p		1250529	1					
ANR	1250662	Argument	v		1250529	5					
ANR	1250663	Identifier	v		1250529	0					
ANR	1250664	ExpressionStatement	"curve_eval ( & c2u , & curve [ C2START ] . vertex . p , & curve [ C2CTRL ] . control [ 0 ] , & curve [ C2CTRL ] . control [ 1 ] , & curve [ C2END ] . vertex . p , u )"	416:4:14021:14174	1250529	4	True				
ANR	1250665	CallExpression	"curve_eval ( & c2u , & curve [ C2START ] . vertex . p , & curve [ C2CTRL ] . control [ 0 ] , & curve [ C2CTRL ] . control [ 1 ] , & curve [ C2END ] . vertex . p , u )"		1250529	0					
ANR	1250666	Callee	curve_eval		1250529	0					
ANR	1250667	Identifier	curve_eval		1250529	0					
ANR	1250668	ArgumentList	& c2u		1250529	1					
ANR	1250669	Argument	& c2u		1250529	0					
ANR	1250670	UnaryOperationExpression	& c2u		1250529	0					
ANR	1250671	UnaryOperator	&		1250529	0					
ANR	1250672	Identifier	c2u		1250529	1					
ANR	1250673	Argument	& curve [ C2START ] . vertex . p		1250529	1					
ANR	1250674	UnaryOperationExpression	& curve [ C2START ] . vertex . p		1250529	0					
ANR	1250675	UnaryOperator	&		1250529	0					
ANR	1250676	MemberAccess	curve [ C2START ] . vertex . p		1250529	1					
ANR	1250677	MemberAccess	curve [ C2START ] . vertex		1250529	0					
ANR	1250678	ArrayIndexing	curve [ C2START ]		1250529	0					
ANR	1250679	Identifier	curve		1250529	0					
ANR	1250680	Identifier	C2START		1250529	1					
ANR	1250681	Identifier	vertex		1250529	1					
ANR	1250682	Identifier	p		1250529	1					
ANR	1250683	Argument	& curve [ C2CTRL ] . control [ 0 ]		1250529	2					
ANR	1250684	UnaryOperationExpression	& curve [ C2CTRL ] . control [ 0 ]		1250529	0					
ANR	1250685	UnaryOperator	&		1250529	0					
ANR	1250686	ArrayIndexing	curve [ C2CTRL ] . control [ 0 ]		1250529	1					
ANR	1250687	MemberAccess	curve [ C2CTRL ] . control		1250529	0					
ANR	1250688	ArrayIndexing	curve [ C2CTRL ]		1250529	0					
ANR	1250689	Identifier	curve		1250529	0					
ANR	1250690	Identifier	C2CTRL		1250529	1					
ANR	1250691	Identifier	control		1250529	1					
ANR	1250692	PrimaryExpression	0		1250529	1					
ANR	1250693	Argument	& curve [ C2CTRL ] . control [ 1 ]		1250529	3					
ANR	1250694	UnaryOperationExpression	& curve [ C2CTRL ] . control [ 1 ]		1250529	0					
ANR	1250695	UnaryOperator	&		1250529	0					
ANR	1250696	ArrayIndexing	curve [ C2CTRL ] . control [ 1 ]		1250529	1					
ANR	1250697	MemberAccess	curve [ C2CTRL ] . control		1250529	0					
ANR	1250698	ArrayIndexing	curve [ C2CTRL ]		1250529	0					
ANR	1250699	Identifier	curve		1250529	0					
ANR	1250700	Identifier	C2CTRL		1250529	1					
ANR	1250701	Identifier	control		1250529	1					
ANR	1250702	PrimaryExpression	1		1250529	1					
ANR	1250703	Argument	& curve [ C2END ] . vertex . p		1250529	4					
ANR	1250704	UnaryOperationExpression	& curve [ C2END ] . vertex . p		1250529	0					
ANR	1250705	UnaryOperator	&		1250529	0					
ANR	1250706	MemberAccess	curve [ C2END ] . vertex . p		1250529	1					
ANR	1250707	MemberAccess	curve [ C2END ] . vertex		1250529	0					
ANR	1250708	ArrayIndexing	curve [ C2END ]		1250529	0					
ANR	1250709	Identifier	curve		1250529	0					
ANR	1250710	Identifier	C2END		1250529	1					
ANR	1250711	Identifier	vertex		1250529	1					
ANR	1250712	Identifier	p		1250529	1					
ANR	1250713	Argument	u		1250529	5					
ANR	1250714	Identifier	u		1250529	0					
ANR	1250715	ExpressionStatement	"curve_eval ( & d2v , & curve [ D2START ] . vertex . p , & curve [ D2XCTRL ] . control [ 1 ] , & curve [ D2XCTRL ] . control [ 0 ] , & curve [ D2END ] . vertex . p , v )"	419:4:14180:14335	1250529	5	True				
ANR	1250716	CallExpression	"curve_eval ( & d2v , & curve [ D2START ] . vertex . p , & curve [ D2XCTRL ] . control [ 1 ] , & curve [ D2XCTRL ] . control [ 0 ] , & curve [ D2END ] . vertex . p , v )"		1250529	0					
ANR	1250717	Callee	curve_eval		1250529	0					
ANR	1250718	Identifier	curve_eval		1250529	0					
ANR	1250719	ArgumentList	& d2v		1250529	1					
ANR	1250720	Argument	& d2v		1250529	0					
ANR	1250721	UnaryOperationExpression	& d2v		1250529	0					
ANR	1250722	UnaryOperator	&		1250529	0					
ANR	1250723	Identifier	d2v		1250529	1					
ANR	1250724	Argument	& curve [ D2START ] . vertex . p		1250529	1					
ANR	1250725	UnaryOperationExpression	& curve [ D2START ] . vertex . p		1250529	0					
ANR	1250726	UnaryOperator	&		1250529	0					
ANR	1250727	MemberAccess	curve [ D2START ] . vertex . p		1250529	1					
ANR	1250728	MemberAccess	curve [ D2START ] . vertex		1250529	0					
ANR	1250729	ArrayIndexing	curve [ D2START ]		1250529	0					
ANR	1250730	Identifier	curve		1250529	0					
ANR	1250731	Identifier	D2START		1250529	1					
ANR	1250732	Identifier	vertex		1250529	1					
ANR	1250733	Identifier	p		1250529	1					
ANR	1250734	Argument	& curve [ D2XCTRL ] . control [ 1 ]		1250529	2					
ANR	1250735	UnaryOperationExpression	& curve [ D2XCTRL ] . control [ 1 ]		1250529	0					
ANR	1250736	UnaryOperator	&		1250529	0					
ANR	1250737	ArrayIndexing	curve [ D2XCTRL ] . control [ 1 ]		1250529	1					
ANR	1250738	MemberAccess	curve [ D2XCTRL ] . control		1250529	0					
ANR	1250739	ArrayIndexing	curve [ D2XCTRL ]		1250529	0					
ANR	1250740	Identifier	curve		1250529	0					
ANR	1250741	Identifier	D2XCTRL		1250529	1					
ANR	1250742	Identifier	control		1250529	1					
ANR	1250743	PrimaryExpression	1		1250529	1					
ANR	1250744	Argument	& curve [ D2XCTRL ] . control [ 0 ]		1250529	3					
ANR	1250745	UnaryOperationExpression	& curve [ D2XCTRL ] . control [ 0 ]		1250529	0					
ANR	1250746	UnaryOperator	&		1250529	0					
ANR	1250747	ArrayIndexing	curve [ D2XCTRL ] . control [ 0 ]		1250529	1					
ANR	1250748	MemberAccess	curve [ D2XCTRL ] . control		1250529	0					
ANR	1250749	ArrayIndexing	curve [ D2XCTRL ]		1250529	0					
ANR	1250750	Identifier	curve		1250529	0					
ANR	1250751	Identifier	D2XCTRL		1250529	1					
ANR	1250752	Identifier	control		1250529	1					
ANR	1250753	PrimaryExpression	0		1250529	1					
ANR	1250754	Argument	& curve [ D2END ] . vertex . p		1250529	4					
ANR	1250755	UnaryOperationExpression	& curve [ D2END ] . vertex . p		1250529	0					
ANR	1250756	UnaryOperator	&		1250529	0					
ANR	1250757	MemberAccess	curve [ D2END ] . vertex . p		1250529	1					
ANR	1250758	MemberAccess	curve [ D2END ] . vertex		1250529	0					
ANR	1250759	ArrayIndexing	curve [ D2END ]		1250529	0					
ANR	1250760	Identifier	curve		1250529	0					
ANR	1250761	Identifier	D2END		1250529	1					
ANR	1250762	Identifier	vertex		1250529	1					
ANR	1250763	Identifier	p		1250529	1					
ANR	1250764	Argument	v		1250529	5					
ANR	1250765	Identifier	v		1250529	0					
ANR	1250766	Statement	define	422:1:14338:14343	1250529	6	True				
ANR	1250767	Statement	COMPUTE_COORD	422:8:14345:14357	1250529	7	True				
ANR	1250768	Statement	(	422:21:14358:14358	1250529	8	True				
ANR	1250769	Statement	xy	422:22:14359:14360	1250529	9	True				
ANR	1250770	Statement	)	422:24:14361:14361	1250529	10	True				
ANR	1250771	Statement	pt	423:4:14368:14369	1250529	11	True				
ANR	1250772	Statement	->	423:6:14370:14371	1250529	12	True				
ANR	1250773	Statement	xy	423:8:14372:14373	1250529	13	True				
ANR	1250774	Statement	=	423:11:14375:14375	1250529	14	True				
ANR	1250775	Statement	(	423:13:14377:14377	1250529	15	True				
ANR	1250776	Statement	fixed	423:14:14378:14382	1250529	16	True				
ANR	1250777	Statement	)	423:19:14383:14383	1250529	17	True				
ANR	1250778	Statement	(	424:8:14394:14394	1250529	18	True				
ANR	1250779	Statement	(	424:9:14395:14395	1250529	19	True				
ANR	1250780	Statement	co_v	424:10:14396:14399	1250529	20	True				
ANR	1250781	Statement	*	424:15:14401:14401	1250529	21	True				
ANR	1250782	Statement	c1u	424:17:14403:14405	1250529	22	True				
ANR	1250783	Statement	.	424:20:14406:14406	1250529	23	True				
ANR	1250784	Statement	xy	424:21:14407:14408	1250529	24	True				
ANR	1250785	Statement	+	424:24:14410:14410	1250529	25	True				
ANR	1250786	Statement	v	424:26:14412:14412	1250529	26	True				
ANR	1250787	Statement	*	424:28:14414:14414	1250529	27	True				
ANR	1250788	Statement	c2u	424:30:14416:14418	1250529	28	True				
ANR	1250789	Statement	.	424:33:14419:14419	1250529	29	True				
ANR	1250790	Statement	xy	424:34:14420:14421	1250529	30	True				
ANR	1250791	Statement	)	424:36:14422:14422	1250529	31	True				
ANR	1250792	Statement	+	424:38:14424:14424	1250529	32	True				
ANR	1250793	Statement	(	424:40:14426:14426	1250529	33	True				
ANR	1250794	Statement	co_u	424:41:14427:14430	1250529	34	True				
ANR	1250795	Statement	*	424:46:14432:14432	1250529	35	True				
ANR	1250796	Statement	d1v	424:48:14434:14436	1250529	36	True				
ANR	1250797	Statement	.	424:51:14437:14437	1250529	37	True				
ANR	1250798	Statement	xy	424:52:14438:14439	1250529	38	True				
ANR	1250799	Statement	+	424:55:14441:14441	1250529	39	True				
ANR	1250800	Statement	u	424:57:14443:14443	1250529	40	True				
ANR	1250801	Statement	*	424:59:14445:14445	1250529	41	True				
ANR	1250802	Statement	d2v	424:61:14447:14449	1250529	42	True				
ANR	1250803	Statement	.	424:64:14450:14450	1250529	43	True				
ANR	1250804	Statement	xy	424:65:14451:14452	1250529	44	True				
ANR	1250805	Statement	)	424:67:14453:14453	1250529	45	True				
ANR	1250806	Statement	-	424:69:14455:14455	1250529	46	True				
ANR	1250807	Statement	(	425:9:14467:14467	1250529	47	True				
ANR	1250808	Statement	co_v	425:10:14468:14471	1250529	48	True				
ANR	1250809	Statement	*	425:15:14473:14473	1250529	49	True				
ANR	1250810	Statement	(	425:17:14475:14475	1250529	50	True				
ANR	1250811	Statement	co_u	425:18:14476:14479	1250529	51	True				
ANR	1250812	Statement	*	425:23:14481:14481	1250529	52	True				
ANR	1250813	Statement	curve	425:25:14483:14487	1250529	53	True				
ANR	1250814	Statement	[	425:30:14488:14488	1250529	54	True				
ANR	1250815	Statement	C1START	425:31:14489:14495	1250529	55	True				
ANR	1250816	Statement	]	425:38:14496:14496	1250529	56	True				
ANR	1250817	Statement	.	425:39:14497:14497	1250529	57	True				
ANR	1250818	Statement	vertex	425:40:14498:14503	1250529	58	True				
ANR	1250819	Statement	.	425:46:14504:14504	1250529	59	True				
ANR	1250820	Statement	p	425:47:14505:14505	1250529	60	True				
ANR	1250821	Statement	.	425:48:14506:14506	1250529	61	True				
ANR	1250822	Statement	xy	425:49:14507:14508	1250529	62	True				
ANR	1250823	Statement	+	425:52:14510:14510	1250529	63	True				
ANR	1250824	Statement	u	426:18:14531:14531	1250529	64	True				
ANR	1250825	Statement	*	426:20:14533:14533	1250529	65	True				
ANR	1250826	Statement	curve	426:22:14535:14539	1250529	66	True				
ANR	1250827	Statement	[	426:27:14540:14540	1250529	67	True				
ANR	1250828	Statement	C1END	426:28:14541:14545	1250529	68	True				
ANR	1250829	Statement	]	426:33:14546:14546	1250529	69	True				
ANR	1250830	Statement	.	426:34:14547:14547	1250529	70	True				
ANR	1250831	Statement	vertex	426:35:14548:14553	1250529	71	True				
ANR	1250832	Statement	.	426:41:14554:14554	1250529	72	True				
ANR	1250833	Statement	p	426:42:14555:14555	1250529	73	True				
ANR	1250834	Statement	.	426:43:14556:14556	1250529	74	True				
ANR	1250835	Statement	xy	426:44:14557:14558	1250529	75	True				
ANR	1250836	Statement	)	426:46:14559:14559	1250529	76	True				
ANR	1250837	Statement	+	426:48:14561:14561	1250529	77	True				
ANR	1250838	Statement	v	427:10:14574:14574	1250529	78	True				
ANR	1250839	Statement	*	427:12:14576:14576	1250529	79	True				
ANR	1250840	Statement	(	427:14:14578:14578	1250529	80	True				
ANR	1250841	Statement	co_u	427:15:14579:14582	1250529	81	True				
ANR	1250842	Statement	*	427:20:14584:14584	1250529	82	True				
ANR	1250843	Statement	curve	427:22:14586:14590	1250529	83	True				
ANR	1250844	Statement	[	427:27:14591:14591	1250529	84	True				
ANR	1250845	Statement	C2START	427:28:14592:14598	1250529	85	True				
ANR	1250846	Statement	]	427:35:14599:14599	1250529	86	True				
ANR	1250847	Statement	.	427:36:14600:14600	1250529	87	True				
ANR	1250848	Statement	vertex	427:37:14601:14606	1250529	88	True				
ANR	1250849	Statement	.	427:43:14607:14607	1250529	89	True				
ANR	1250850	Statement	p	427:44:14608:14608	1250529	90	True				
ANR	1250851	Statement	.	427:45:14609:14609	1250529	91	True				
ANR	1250852	Statement	xy	427:46:14610:14611	1250529	92	True				
ANR	1250853	Statement	+	427:49:14613:14613	1250529	93	True				
ANR	1250854	Statement	u	428:15:14631:14631	1250529	94	True				
ANR	1250855	Statement	*	428:17:14633:14633	1250529	95	True				
ANR	1250856	Statement	curve	428:19:14635:14639	1250529	96	True				
ANR	1250857	Statement	[	428:24:14640:14640	1250529	97	True				
ANR	1250858	Statement	C2END	428:25:14641:14645	1250529	98	True				
ANR	1250859	Statement	]	428:30:14646:14646	1250529	99	True				
ANR	1250860	Statement	.	428:31:14647:14647	1250529	100	True				
ANR	1250861	Statement	vertex	428:32:14648:14653	1250529	101	True				
ANR	1250862	Statement	.	428:38:14654:14654	1250529	102	True				
ANR	1250863	Statement	p	428:39:14655:14655	1250529	103	True				
ANR	1250864	Statement	.	428:40:14656:14656	1250529	104	True				
ANR	1250865	Statement	xy	428:41:14657:14658	1250529	105	True				
ANR	1250866	Statement	)	428:43:14659:14659	1250529	106	True				
ANR	1250867	Statement	)	428:44:14660:14660	1250529	107	True				
ANR	1250868	Statement	)	428:45:14661:14661	1250529	108	True				
ANR	1250869	ExpressionStatement	COMPUTE_COORD ( x )	429:4:14667:14683	1250529	109	True				
ANR	1250870	CallExpression	COMPUTE_COORD ( x )		1250529	0					
ANR	1250871	Callee	COMPUTE_COORD		1250529	0					
ANR	1250872	Identifier	COMPUTE_COORD		1250529	0					
ANR	1250873	ArgumentList	x		1250529	1					
ANR	1250874	Argument	x		1250529	0					
ANR	1250875	Identifier	x		1250529	0					
ANR	1250876	ExpressionStatement	COMPUTE_COORD ( y )	430:4:14689:14705	1250529	110	True				
ANR	1250877	CallExpression	COMPUTE_COORD ( y )		1250529	0					
ANR	1250878	Callee	COMPUTE_COORD		1250529	0					
ANR	1250879	Identifier	COMPUTE_COORD		1250529	0					
ANR	1250880	ArgumentList	y		1250529	1					
ANR	1250881	Argument	y		1250529	0					
ANR	1250882	Identifier	y		1250529	0					
ANR	1250883	IdentifierDeclStatement	"undef COMPUTE_COORD if_debug4 ( '2' , ""[2](u=%g,v=%g) => (%g,%g)\\n"" , u , v , fixed2float ( pt -> x ) , fixed2float ( pt -> y ) ) ;"	431:1:14708:14837	1250529	111	True				
ANR	1250884	IdentifierDecl	"if_debug4 ( '2' , ""[2](u=%g,v=%g) => (%g,%g)\\n"" , u , v , fixed2float ( pt -> x ) , fixed2float ( pt -> y ) )"		1250529	0					
ANR	1250885	IdentifierDeclType	undef COMPUTE_COORD		1250529	0					
ANR	1250886	Identifier	if_debug4		1250529	1					
ANR	1250887	Expression	"'2' , ""[2](u=%g,v=%g) => (%g,%g)\\n"" , u , v , fixed2float ( pt -> x ) , fixed2float ( pt -> y )"		1250529	2					
ANR	1250888	PrimaryExpression	'2'		1250529	0					
ANR	1250889	Expression	"""[2](u=%g,v=%g) => (%g,%g)\\n"" , u , v , fixed2float ( pt -> x ) , fixed2float ( pt -> y )"		1250529	1					
ANR	1250890	PrimaryExpression	"""[2](u=%g,v=%g) => (%g,%g)\\n"""		1250529	0					
ANR	1250891	Expression	"u , v , fixed2float ( pt -> x ) , fixed2float ( pt -> y )"		1250529	1					
ANR	1250892	Identifier	u		1250529	0					
ANR	1250893	Expression	"v , fixed2float ( pt -> x ) , fixed2float ( pt -> y )"		1250529	1					
ANR	1250894	Identifier	v		1250529	0					
ANR	1250895	Expression	"fixed2float ( pt -> x ) , fixed2float ( pt -> y )"		1250529	1					
ANR	1250896	CallExpression	fixed2float ( pt -> x )		1250529	0					
ANR	1250897	Callee	fixed2float		1250529	0					
ANR	1250898	Identifier	fixed2float		1250529	0					
ANR	1250899	ArgumentList	pt -> x		1250529	1					
ANR	1250900	Argument	pt -> x		1250529	0					
ANR	1250901	PtrMemberAccess	pt -> x		1250529	0					
ANR	1250902	Identifier	pt		1250529	0					
ANR	1250903	Identifier	x		1250529	1					
ANR	1250904	CallExpression	fixed2float ( pt -> y )		1250529	1					
ANR	1250905	Callee	fixed2float		1250529	0					
ANR	1250906	Identifier	fixed2float		1250529	0					
ANR	1250907	ArgumentList	pt -> y		1250529	1					
ANR	1250908	Argument	pt -> y		1250529	0					
ANR	1250909	PtrMemberAccess	pt -> y		1250529	0					
ANR	1250910	Identifier	pt		1250529	0					
ANR	1250911	Identifier	y		1250529	1					
ANR	1250912	ReturnType	static void		1250529	1					
ANR	1250913	Identifier	Cp_transform		1250529	2					
ANR	1250914	ParameterList	"gs_fixed_point * pt , const patch_curve_t curve [ 4 ] , const gs_fixed_point ignore_interior [ 4 ] , double u , double v"		1250529	3					
ANR	1250915	Parameter	gs_fixed_point * pt	404:13:13487:13505	1250529	0	True				
ANR	1250916	ParameterType	gs_fixed_point *		1250529	0					
ANR	1250917	Identifier	pt		1250529	1					
ANR	1250918	Parameter	const patch_curve_t curve [ 4 ]	404:34:13508:13535	1250529	1	True				
ANR	1250919	ParameterType	const patch_curve_t [ 4 ]		1250529	0					
ANR	1250920	Identifier	curve		1250529	1					
ANR	1250921	Parameter	const gs_fixed_point ignore_interior [ 4 ]	405:13:13551:13589	1250529	2	True				
ANR	1250922	ParameterType	const gs_fixed_point [ 4 ]		1250529	0					
ANR	1250923	Identifier	ignore_interior		1250529	1					
ANR	1250924	Parameter	double u	405:54:13592:13599	1250529	3	True				
ANR	1250925	ParameterType	double		1250529	0					
ANR	1250926	Identifier	u		1250529	1					
ANR	1250927	Parameter	double v	405:64:13602:13609	1250529	4	True				
ANR	1250928	ParameterType	double		1250529	0					
ANR	1250929	Identifier	v		1250529	1					
ANR	1250930	CFGEntryNode	ENTRY		1250529		True				
ANR	1250931	CFGExitNode	EXIT		1250529		True				
ANR	1250932	Symbol	curve [ C2CTRL ] . control		1250529						
ANR	1250933	Symbol	D1CTRL		1250529						
ANR	1250934	Symbol	curve [ D1END ] . vertex		1250529						
ANR	1250935	Symbol	pt		1250529						
ANR	1250936	Symbol	curve [ C1START ] . vertex		1250529						
ANR	1250937	Symbol	c1u		1250529						
ANR	1250938	Symbol	D1START		1250529						
ANR	1250939	Symbol	* C1XCTRL		1250529						
ANR	1250940	Symbol	& curve [ C2END ] . vertex . p		1250529						
ANR	1250941	Symbol	& curve [ C2END ] . vertex		1250529						
ANR	1250942	Symbol	curve [ D1START ] . vertex		1250529						
ANR	1250943	Symbol	& c2u		1250529						
ANR	1250944	Symbol	& curve [ D1START ] . vertex . p		1250529						
ANR	1250945	Symbol	curve [ D2XCTRL ] . control		1250529						
ANR	1250946	Symbol	* D2START		1250529						
ANR	1250947	Symbol	* D1END		1250529						
ANR	1250948	Symbol	C2CTRL		1250529						
ANR	1250949	Symbol	* D1CTRL		1250529						
ANR	1250950	Symbol	& curve [ C1START ] . vertex		1250529						
ANR	1250951	Symbol	* C2CTRL		1250529						
ANR	1250952	Symbol	* C1END		1250529						
ANR	1250953	Symbol	C2START		1250529						
ANR	1250954	Symbol	curve [ D2END ] . vertex		1250529						
ANR	1250955	Symbol	& curve [ C1END ] . vertex		1250529						
ANR	1250956	Symbol	* D2END		1250529						
ANR	1250957	Symbol	* D1START		1250529						
ANR	1250958	Symbol	C1START		1250529						
ANR	1250959	Symbol	& curve [ C2START ] . vertex		1250529						
ANR	1250960	Symbol	& curve [ D2START ] . vertex . p		1250529						
ANR	1250961	Symbol	D2START		1250529						
ANR	1250962	Symbol	c2u		1250529						
ANR	1250963	Symbol	curve [ C1XCTRL ] . control		1250529						
ANR	1250964	Symbol	* pt		1250529						
ANR	1250965	Symbol	& c1u		1250529						
ANR	1250966	Symbol	& curve [ D1START ] . vertex		1250529						
ANR	1250967	Symbol	& curve [ D1END ] . vertex . p		1250529						
ANR	1250968	Symbol	& curve [ D1END ] . vertex		1250529						
ANR	1250969	Symbol	if_debug4		1250529						
ANR	1250970	Symbol	ignore_interior		1250529						
ANR	1250971	Symbol	& curve [ C1END ] . vertex . p		1250529						
ANR	1250972	Symbol	* C2END		1250529						
ANR	1250973	Symbol	curve		1250529						
ANR	1250974	Symbol	& curve [ C2START ] . vertex . p		1250529						
ANR	1250975	Symbol	d1v		1250529						
ANR	1250976	Symbol	* C1START		1250529						
ANR	1250977	Symbol	& curve [ D2END ] . vertex . p		1250529						
ANR	1250978	Symbol	& d2v		1250529						
ANR	1250979	Symbol	C2END		1250529						
ANR	1250980	Symbol	co_u		1250529						
ANR	1250981	Symbol	co_v		1250529						
ANR	1250982	Symbol	* D2XCTRL		1250529						
ANR	1250983	Symbol	curve [ C1END ] . vertex		1250529						
ANR	1250984	Symbol	curve [ C2START ] . vertex		1250529						
ANR	1250985	Symbol	& curve [ D2END ] . vertex		1250529						
ANR	1250986	Symbol	D2END		1250529						
ANR	1250987	Symbol	curve [ D2START ] . vertex		1250529						
ANR	1250988	Symbol	pt -> x		1250529						
ANR	1250989	Symbol	pt -> y		1250529						
ANR	1250990	Symbol	C1XCTRL		1250529						
ANR	1250991	Symbol	D2XCTRL		1250529						
ANR	1250992	Symbol	& d1v		1250529						
ANR	1250993	Symbol	d2v		1250529						
ANR	1250994	Symbol	C1END		1250529						
ANR	1250995	Symbol	& curve [ C1START ] . vertex . p		1250529						
ANR	1250996	Symbol	curve [ C2END ] . vertex		1250529						
ANR	1250997	Symbol	* C2START		1250529						
ANR	1250998	Symbol	& curve [ D2START ] . vertex		1250529						
ANR	1250999	Symbol	* curve		1250529						
ANR	1251000	Symbol	curve [ D1CTRL ] . control		1250529						
ANR	1251001	Symbol	u		1250529						
ANR	1251002	Symbol	v		1250529						
ANR	1251003	Symbol	x		1250529						
ANR	1251004	Symbol	y		1250529						
ANR	1251005	Symbol	D1END		1250529						
ANR	1251006	Function	gs_shading_Cp_fill_rectangle	436:0:14842:16286							
ANR	1251007	FunctionDef	"gs_shading_Cp_fill_rectangle (const gs_shading_t * psh0 , const gs_rect * rect , const gs_fixed_rect * rect_clip , gx_device * dev , gs_gstate * pgs)"		1251006	0					
ANR	1251008	CompoundStatement		440:0:15049:16286	1251006	0					
ANR	1251009	Statement	const	441:4:15055:15059	1251006	0	True				
ANR	1251010	Statement	gs_shading_Cp_t	441:10:15061:15075	1251006	1	True				
ANR	1251011	Statement	*	441:26:15077:15077	1251006	2	True				
ANR	1251012	Statement	const	441:28:15079:15083	1251006	3	True				
ANR	1251013	ExpressionStatement	psh = ( const gs_shading_Cp_t * ) psh0	441:34:15085:15120	1251006	4	True				
ANR	1251014	AssignmentExpression	psh = ( const gs_shading_Cp_t * ) psh0		1251006	0		=			
ANR	1251015	Identifier	psh		1251006	0					
ANR	1251016	CastExpression	( const gs_shading_Cp_t * ) psh0		1251006	1					
ANR	1251017	CastTarget	const gs_shading_Cp_t *		1251006	0					
ANR	1251018	Identifier	psh0		1251006	1					
ANR	1251019	IdentifierDeclStatement	patch_fill_state_t state ;	442:4:15126:15150	1251006	5	True				
ANR	1251020	IdentifierDecl	state		1251006	0					
ANR	1251021	IdentifierDeclType	patch_fill_state_t		1251006	0					
ANR	1251022	Identifier	state		1251006	1					
ANR	1251023	IdentifierDeclStatement	shade_coord_stream_t cs ;	443:4:15156:15179	1251006	6	True				
ANR	1251024	IdentifierDecl	cs		1251006	0					
ANR	1251025	IdentifierDeclType	shade_coord_stream_t		1251006	0					
ANR	1251026	Identifier	cs		1251006	1					
ANR	1251027	IdentifierDeclStatement	patch_curve_t curve [ 4 ] ;	444:4:15185:15207	1251006	7	True				
ANR	1251028	IdentifierDecl	curve [ 4 ]		1251006	0					
ANR	1251029	IdentifierDeclType	patch_curve_t [ 4 ]		1251006	0					
ANR	1251030	Identifier	curve		1251006	1					
ANR	1251031	PrimaryExpression	4		1251006	2					
ANR	1251032	IdentifierDeclStatement	int code ;	445:4:15213:15221	1251006	8	True				
ANR	1251033	IdentifierDecl	code		1251006	0					
ANR	1251034	IdentifierDeclType	int		1251006	0					
ANR	1251035	Identifier	code		1251006	1					
ANR	1251036	ExpressionStatement	"code = mesh_init_fill_state ( ( mesh_fill_state_t * ) & state , ( const gs_shading_mesh_t * ) psh0 , rect_clip , dev , pgs )"	447:4:15228:15364	1251006	9	True				
ANR	1251037	AssignmentExpression	"code = mesh_init_fill_state ( ( mesh_fill_state_t * ) & state , ( const gs_shading_mesh_t * ) psh0 , rect_clip , dev , pgs )"		1251006	0		=			
ANR	1251038	Identifier	code		1251006	0					
ANR	1251039	CallExpression	"mesh_init_fill_state ( ( mesh_fill_state_t * ) & state , ( const gs_shading_mesh_t * ) psh0 , rect_clip , dev , pgs )"		1251006	1					
ANR	1251040	Callee	mesh_init_fill_state		1251006	0					
ANR	1251041	Identifier	mesh_init_fill_state		1251006	0					
ANR	1251042	ArgumentList	( mesh_fill_state_t * ) & state		1251006	1					
ANR	1251043	Argument	( mesh_fill_state_t * ) & state		1251006	0					
ANR	1251044	CastExpression	( mesh_fill_state_t * ) & state		1251006	0					
ANR	1251045	CastTarget	mesh_fill_state_t *		1251006	0					
ANR	1251046	UnaryOperationExpression	& state		1251006	1					
ANR	1251047	UnaryOperator	&		1251006	0					
ANR	1251048	Identifier	state		1251006	1					
ANR	1251049	Argument	( const gs_shading_mesh_t * ) psh0		1251006	1					
ANR	1251050	CastExpression	( const gs_shading_mesh_t * ) psh0		1251006	0					
ANR	1251051	CastTarget	const gs_shading_mesh_t *		1251006	0					
ANR	1251052	Identifier	psh0		1251006	1					
ANR	1251053	Argument	rect_clip		1251006	2					
ANR	1251054	Identifier	rect_clip		1251006	0					
ANR	1251055	Argument	dev		1251006	3					
ANR	1251056	Identifier	dev		1251006	0					
ANR	1251057	Argument	pgs		1251006	4					
ANR	1251058	Identifier	pgs		1251006	0					
ANR	1251059	IfStatement	if ( code < 0 )		1251006	10					
ANR	1251060	Condition	code < 0	449:8:15374:15381	1251006	0	True				
ANR	1251061	RelationalExpression	code < 0		1251006	0		<			
ANR	1251062	Identifier	code		1251006	0					
ANR	1251063	PrimaryExpression	0		1251006	1					
ANR	1251064	CompoundStatement		10:18:334:334	1251006	1					
ANR	1251065	IfStatement	if ( state . icclink != NULL )		1251006	0					
ANR	1251066	Condition	state . icclink != NULL	450:12:15398:15418	1251006	0	True				
ANR	1251067	EqualityExpression	state . icclink != NULL		1251006	0		!=			
ANR	1251068	MemberAccess	state . icclink		1251006	0					
ANR	1251069	Identifier	state		1251006	0					
ANR	1251070	Identifier	icclink		1251006	1					
ANR	1251071	Identifier	NULL		1251006	1					
ANR	1251072	ExpressionStatement	gsicc_release_link ( state . icclink )	450:35:15421:15454	1251006	1	True				
ANR	1251073	CallExpression	gsicc_release_link ( state . icclink )		1251006	0					
ANR	1251074	Callee	gsicc_release_link		1251006	0					
ANR	1251075	Identifier	gsicc_release_link		1251006	0					
ANR	1251076	ArgumentList	state . icclink		1251006	1					
ANR	1251077	Argument	state . icclink		1251006	0					
ANR	1251078	MemberAccess	state . icclink		1251006	0					
ANR	1251079	Identifier	state		1251006	0					
ANR	1251080	Identifier	icclink		1251006	1					
ANR	1251081	ReturnStatement	return code ;	451:8:15464:15475	1251006	1	True				
ANR	1251082	Identifier	code		1251006	0					
ANR	1251083	ExpressionStatement	state . Function = psh -> params . Function	453:4:15487:15524	1251006	11	True				
ANR	1251084	AssignmentExpression	state . Function = psh -> params . Function		1251006	0		=			
ANR	1251085	MemberAccess	state . Function		1251006	0					
ANR	1251086	Identifier	state		1251006	0					
ANR	1251087	Identifier	Function		1251006	1					
ANR	1251088	MemberAccess	psh -> params . Function		1251006	1					
ANR	1251089	PtrMemberAccess	psh -> params		1251006	0					
ANR	1251090	Identifier	psh		1251006	0					
ANR	1251091	Identifier	params		1251006	1					
ANR	1251092	Identifier	Function		1251006	1					
ANR	1251093	ExpressionStatement	code = init_patch_fill_state ( & state )	454:4:15530:15566	1251006	12	True				
ANR	1251094	AssignmentExpression	code = init_patch_fill_state ( & state )		1251006	0		=			
ANR	1251095	Identifier	code		1251006	0					
ANR	1251096	CallExpression	init_patch_fill_state ( & state )		1251006	1					
ANR	1251097	Callee	init_patch_fill_state		1251006	0					
ANR	1251098	Identifier	init_patch_fill_state		1251006	0					
ANR	1251099	ArgumentList	& state		1251006	1					
ANR	1251100	Argument	& state		1251006	0					
ANR	1251101	UnaryOperationExpression	& state		1251006	0					
ANR	1251102	UnaryOperator	&		1251006	0					
ANR	1251103	Identifier	state		1251006	1					
ANR	1251104	IfStatement	if ( code < 0 )		1251006	13					
ANR	1251105	Condition	code < 0	455:7:15575:15582	1251006	0	True				
ANR	1251106	RelationalExpression	code < 0		1251006	0		<			
ANR	1251107	Identifier	code		1251006	0					
ANR	1251108	PrimaryExpression	0		1251006	1					
ANR	1251109	CompoundStatement		16:17:535:535	1251006	1					
ANR	1251110	IfStatement	if ( state . icclink != NULL )		1251006	0					
ANR	1251111	Condition	state . icclink != NULL	456:12:15599:15619	1251006	0	True				
ANR	1251112	EqualityExpression	state . icclink != NULL		1251006	0		!=			
ANR	1251113	MemberAccess	state . icclink		1251006	0					
ANR	1251114	Identifier	state		1251006	0					
ANR	1251115	Identifier	icclink		1251006	1					
ANR	1251116	Identifier	NULL		1251006	1					
ANR	1251117	ExpressionStatement	gsicc_release_link ( state . icclink )	456:35:15622:15655	1251006	1	True				
ANR	1251118	CallExpression	gsicc_release_link ( state . icclink )		1251006	0					
ANR	1251119	Callee	gsicc_release_link		1251006	0					
ANR	1251120	Identifier	gsicc_release_link		1251006	0					
ANR	1251121	ArgumentList	state . icclink		1251006	1					
ANR	1251122	Argument	state . icclink		1251006	0					
ANR	1251123	MemberAccess	state . icclink		1251006	0					
ANR	1251124	Identifier	state		1251006	0					
ANR	1251125	Identifier	icclink		1251006	1					
ANR	1251126	ReturnStatement	return code ;	457:8:15665:15676	1251006	1	True				
ANR	1251127	Identifier	code		1251006	0					
ANR	1251128	ExpressionStatement	curve [ 0 ] . straight = curve [ 1 ] . straight = curve [ 2 ] . straight = curve [ 3 ] . straight = false	460:4:15689:15774	1251006	14	True				
ANR	1251129	AssignmentExpression	curve [ 0 ] . straight = curve [ 1 ] . straight = curve [ 2 ] . straight = curve [ 3 ] . straight = false		1251006	0		=			
ANR	1251130	MemberAccess	curve [ 0 ] . straight		1251006	0					
ANR	1251131	ArrayIndexing	curve [ 0 ]		1251006	0					
ANR	1251132	Identifier	curve		1251006	0					
ANR	1251133	PrimaryExpression	0		1251006	1					
ANR	1251134	Identifier	straight		1251006	1					
ANR	1251135	AssignmentExpression	curve [ 1 ] . straight = curve [ 2 ] . straight = curve [ 3 ] . straight = false		1251006	1		=			
ANR	1251136	MemberAccess	curve [ 1 ] . straight		1251006	0					
ANR	1251137	ArrayIndexing	curve [ 1 ]		1251006	0					
ANR	1251138	Identifier	curve		1251006	0					
ANR	1251139	PrimaryExpression	1		1251006	1					
ANR	1251140	Identifier	straight		1251006	1					
ANR	1251141	AssignmentExpression	curve [ 2 ] . straight = curve [ 3 ] . straight = false		1251006	1		=			
ANR	1251142	MemberAccess	curve [ 2 ] . straight		1251006	0					
ANR	1251143	ArrayIndexing	curve [ 2 ]		1251006	0					
ANR	1251144	Identifier	curve		1251006	0					
ANR	1251145	PrimaryExpression	2		1251006	1					
ANR	1251146	Identifier	straight		1251006	1					
ANR	1251147	AssignmentExpression	curve [ 3 ] . straight = false		1251006	1		=			
ANR	1251148	MemberAccess	curve [ 3 ] . straight		1251006	0					
ANR	1251149	ArrayIndexing	curve [ 3 ]		1251006	0					
ANR	1251150	Identifier	curve		1251006	0					
ANR	1251151	PrimaryExpression	3		1251006	1					
ANR	1251152	Identifier	straight		1251006	1					
ANR	1251153	Identifier	false		1251006	1					
ANR	1251154	ExpressionStatement	"shade_next_init ( & cs , ( const gs_shading_mesh_params_t * ) & psh -> params , pgs )"	461:4:15780:15853	1251006	15	True				
ANR	1251155	CallExpression	"shade_next_init ( & cs , ( const gs_shading_mesh_params_t * ) & psh -> params , pgs )"		1251006	0					
ANR	1251156	Callee	shade_next_init		1251006	0					
ANR	1251157	Identifier	shade_next_init		1251006	0					
ANR	1251158	ArgumentList	& cs		1251006	1					
ANR	1251159	Argument	& cs		1251006	0					
ANR	1251160	UnaryOperationExpression	& cs		1251006	0					
ANR	1251161	UnaryOperator	&		1251006	0					
ANR	1251162	Identifier	cs		1251006	1					
ANR	1251163	Argument	( const gs_shading_mesh_params_t * ) & psh -> params		1251006	1					
ANR	1251164	CastExpression	( const gs_shading_mesh_params_t * ) & psh -> params		1251006	0					
ANR	1251165	CastTarget	const gs_shading_mesh_params_t *		1251006	0					
ANR	1251166	UnaryOperationExpression	& psh -> params		1251006	1					
ANR	1251167	UnaryOperator	&		1251006	0					
ANR	1251168	PtrMemberAccess	psh -> params		1251006	1					
ANR	1251169	Identifier	psh		1251006	0					
ANR	1251170	Identifier	params		1251006	1					
ANR	1251171	Argument	pgs		1251006	2					
ANR	1251172	Identifier	pgs		1251006	0					
ANR	1251173	WhileStatement	"while ( ( code = shade_next_patch ( & cs , psh -> params . BitsPerFlag , curve , NULL ) ) == 0 && ( code = patch_fill ( & state , curve , NULL , Cp_transform ) ) >= 0 )"		1251006	16					
ANR	1251174	Condition	"( code = shade_next_patch ( & cs , psh -> params . BitsPerFlag , curve , NULL ) ) == 0 && ( code = patch_fill ( & state , curve , NULL , Cp_transform ) ) >= 0"	462:11:15866:16048	1251006	0	True				
ANR	1251175	AndExpression	"( code = shade_next_patch ( & cs , psh -> params . BitsPerFlag , curve , NULL ) ) == 0 && ( code = patch_fill ( & state , curve , NULL , Cp_transform ) ) >= 0"		1251006	0		&&			
ANR	1251176	EqualityExpression	"( code = shade_next_patch ( & cs , psh -> params . BitsPerFlag , curve , NULL ) ) == 0"		1251006	0		==			
ANR	1251177	AssignmentExpression	"code = shade_next_patch ( & cs , psh -> params . BitsPerFlag , curve , NULL )"		1251006	0		=			
ANR	1251178	Identifier	code		1251006	0					
ANR	1251179	CallExpression	"shade_next_patch ( & cs , psh -> params . BitsPerFlag , curve , NULL )"		1251006	1					
ANR	1251180	Callee	shade_next_patch		1251006	0					
ANR	1251181	Identifier	shade_next_patch		1251006	0					
ANR	1251182	ArgumentList	& cs		1251006	1					
ANR	1251183	Argument	& cs		1251006	0					
ANR	1251184	UnaryOperationExpression	& cs		1251006	0					
ANR	1251185	UnaryOperator	&		1251006	0					
ANR	1251186	Identifier	cs		1251006	1					
ANR	1251187	Argument	psh -> params . BitsPerFlag		1251006	1					
ANR	1251188	MemberAccess	psh -> params . BitsPerFlag		1251006	0					
ANR	1251189	PtrMemberAccess	psh -> params		1251006	0					
ANR	1251190	Identifier	psh		1251006	0					
ANR	1251191	Identifier	params		1251006	1					
ANR	1251192	Identifier	BitsPerFlag		1251006	1					
ANR	1251193	Argument	curve		1251006	2					
ANR	1251194	Identifier	curve		1251006	0					
ANR	1251195	Argument	NULL		1251006	3					
ANR	1251196	Identifier	NULL		1251006	0					
ANR	1251197	PrimaryExpression	0		1251006	1					
ANR	1251198	RelationalExpression	"( code = patch_fill ( & state , curve , NULL , Cp_transform ) ) >= 0"		1251006	1		>=			
ANR	1251199	AssignmentExpression	"code = patch_fill ( & state , curve , NULL , Cp_transform )"		1251006	0		=			
ANR	1251200	Identifier	code		1251006	0					
ANR	1251201	CallExpression	"patch_fill ( & state , curve , NULL , Cp_transform )"		1251006	1					
ANR	1251202	Callee	patch_fill		1251006	0					
ANR	1251203	Identifier	patch_fill		1251006	0					
ANR	1251204	ArgumentList	& state		1251006	1					
ANR	1251205	Argument	& state		1251006	0					
ANR	1251206	UnaryOperationExpression	& state		1251006	0					
ANR	1251207	UnaryOperator	&		1251006	0					
ANR	1251208	Identifier	state		1251006	1					
ANR	1251209	Argument	curve		1251006	1					
ANR	1251210	Identifier	curve		1251006	0					
ANR	1251211	Argument	NULL		1251006	2					
ANR	1251212	Identifier	NULL		1251006	0					
ANR	1251213	Argument	Cp_transform		1251006	3					
ANR	1251214	Identifier	Cp_transform		1251006	0					
ANR	1251215	PrimaryExpression	0		1251006	1					
ANR	1251216	CompoundStatement		26:10:1010:1010	1251006	1					
ANR	1251217	ExpressionStatement	DO_NOTHING	466:8:16070:16080	1251006	0	True				
ANR	1251218	Identifier	DO_NOTHING		1251006	0					
ANR	1251219	IfStatement	if ( term_patch_fill_state ( & state ) )		1251006	17					
ANR	1251220	Condition	term_patch_fill_state ( & state )	468:8:16096:16124	1251006	0	True				
ANR	1251221	CallExpression	term_patch_fill_state ( & state )		1251006	0					
ANR	1251222	Callee	term_patch_fill_state		1251006	0					
ANR	1251223	Identifier	term_patch_fill_state		1251006	0					
ANR	1251224	ArgumentList	& state		1251006	1					
ANR	1251225	Argument	& state		1251006	0					
ANR	1251226	UnaryOperationExpression	& state		1251006	0					
ANR	1251227	UnaryOperator	&		1251006	0					
ANR	1251228	Identifier	state		1251006	1					
ANR	1251229	ExpressionStatement	return_error ( gs_error_unregistered )	469:8:16135:16170	1251006	1	True				
ANR	1251230	CallExpression	return_error ( gs_error_unregistered )		1251006	0					
ANR	1251231	Callee	return_error		1251006	0					
ANR	1251232	Identifier	return_error		1251006	0					
ANR	1251233	ArgumentList	gs_error_unregistered		1251006	1					
ANR	1251234	Argument	gs_error_unregistered		1251006	0					
ANR	1251235	Identifier	gs_error_unregistered		1251006	0					
ANR	1251236	IfStatement	if ( state . icclink != NULL )		1251006	18					
ANR	1251237	Condition	state . icclink != NULL	470:8:16203:16223	1251006	0	True				
ANR	1251238	EqualityExpression	state . icclink != NULL		1251006	0		!=			
ANR	1251239	MemberAccess	state . icclink		1251006	0					
ANR	1251240	Identifier	state		1251006	0					
ANR	1251241	Identifier	icclink		1251006	1					
ANR	1251242	Identifier	NULL		1251006	1					
ANR	1251243	ExpressionStatement	gsicc_release_link ( state . icclink )	470:31:16226:16259	1251006	1	True				
ANR	1251244	CallExpression	gsicc_release_link ( state . icclink )		1251006	0					
ANR	1251245	Callee	gsicc_release_link		1251006	0					
ANR	1251246	Identifier	gsicc_release_link		1251006	0					
ANR	1251247	ArgumentList	state . icclink		1251006	1					
ANR	1251248	Argument	state . icclink		1251006	0					
ANR	1251249	MemberAccess	state . icclink		1251006	0					
ANR	1251250	Identifier	state		1251006	0					
ANR	1251251	Identifier	icclink		1251006	1					
ANR	1251252	ReturnStatement	"return min ( code , 0 ) ;"	471:4:16265:16284	1251006	19	True				
ANR	1251253	CallExpression	"min ( code , 0 )"		1251006	0					
ANR	1251254	Callee	min		1251006	0					
ANR	1251255	Identifier	min		1251006	0					
ANR	1251256	ArgumentList	code		1251006	1					
ANR	1251257	Argument	code		1251006	0					
ANR	1251258	Identifier	code		1251006	0					
ANR	1251259	Argument	0		1251006	1					
ANR	1251260	PrimaryExpression	0		1251006	0					
ANR	1251261	ReturnType	int		1251006	1					
ANR	1251262	Identifier	gs_shading_Cp_fill_rectangle		1251006	2					
ANR	1251263	ParameterList	"const gs_shading_t * psh0 , const gs_rect * rect , const gs_fixed_rect * rect_clip , gx_device * dev , gs_gstate * pgs"		1251006	3					
ANR	1251264	Parameter	const gs_shading_t * psh0	437:29:14875:14899	1251006	0	True				
ANR	1251265	ParameterType	const gs_shading_t *		1251006	0					
ANR	1251266	Identifier	psh0		1251006	1					
ANR	1251267	Parameter	const gs_rect * rect	437:56:14902:14921	1251006	1	True				
ANR	1251268	ParameterType	const gs_rect *		1251006	0					
ANR	1251269	Identifier	rect		1251006	1					
ANR	1251270	Parameter	const gs_fixed_rect * rect_clip	438:29:14953:14983	1251006	2	True				
ANR	1251271	ParameterType	const gs_fixed_rect *		1251006	0					
ANR	1251272	Identifier	rect_clip		1251006	1					
ANR	1251273	Parameter	gx_device * dev	439:29:15015:15029	1251006	3	True				
ANR	1251274	ParameterType	gx_device *		1251006	0					
ANR	1251275	Identifier	dev		1251006	1					
ANR	1251276	Parameter	gs_gstate * pgs	439:46:15032:15046	1251006	4	True				
ANR	1251277	ParameterType	gs_gstate *		1251006	0					
ANR	1251278	Identifier	pgs		1251006	1					
ANR	1251279	CFGEntryNode	ENTRY		1251006		True				
ANR	1251280	CFGExitNode	EXIT		1251006		True				
ANR	1251281	Symbol	gs_error_unregistered		1251006						
ANR	1251282	Symbol	code		1251006						
ANR	1251283	Symbol	psh -> params		1251006						
ANR	1251284	Symbol	psh		1251006						
ANR	1251285	Symbol	& psh -> params		1251006						
ANR	1251286	Symbol	curve		1251006						
ANR	1251287	Symbol	& state		1251006						
ANR	1251288	Symbol	state . icclink		1251006						
ANR	1251289	Symbol	rect		1251006						
ANR	1251290	Symbol	min		1251006						
ANR	1251291	Symbol	dev		1251006						
ANR	1251292	Symbol	curve [ 2 ] . straight		1251006						
ANR	1251293	Symbol	psh -> params . Function		1251006						
ANR	1251294	Symbol	curve [ 3 ] . straight		1251006						
ANR	1251295	Symbol	patch_fill		1251006						
ANR	1251296	Symbol	state		1251006						
ANR	1251297	Symbol	mesh_init_fill_state		1251006						
ANR	1251298	Symbol	pgs		1251006						
ANR	1251299	Symbol	curve [ 1 ] . straight		1251006						
ANR	1251300	Symbol	curve [ 0 ] . straight		1251006						
ANR	1251301	Symbol	psh -> params . BitsPerFlag		1251006						
ANR	1251302	Symbol	NULL		1251006						
ANR	1251303	Symbol	state . Function		1251006						
ANR	1251304	Symbol	false		1251006						
ANR	1251305	Symbol	init_patch_fill_state		1251006						
ANR	1251306	Symbol	term_patch_fill_state		1251006						
ANR	1251307	Symbol	* psh		1251006						
ANR	1251308	Symbol	cs		1251006						
ANR	1251309	Symbol	Cp_transform		1251006						
ANR	1251310	Symbol	* curve		1251006						
ANR	1251311	Symbol	shade_next_patch		1251006						
ANR	1251312	Symbol	& cs		1251006						
ANR	1251313	Symbol	psh0		1251006						
ANR	1251314	Symbol	rect_clip		1251006						
ANR	1251315	Function	Tpp_transform	477:0:16427:17941							
ANR	1251316	FunctionDef	"Tpp_transform (gs_fixed_point * pt , const patch_curve_t curve [ 4 ] , const gs_fixed_point interior [ 4 ] , double u , double v)"		1251315	0					
ANR	1251317	CompoundStatement		480:0:16572:17941	1251315	0					
ANR	1251318	IdentifierDeclStatement	"double Bu [ 4 ] , Bv [ 4 ] ;"	481:4:16578:16597	1251315	0	True				
ANR	1251319	IdentifierDecl	Bu [ 4 ]		1251315	0					
ANR	1251320	IdentifierDeclType	double [ 4 ]		1251315	0					
ANR	1251321	Identifier	Bu		1251315	1					
ANR	1251322	PrimaryExpression	4		1251315	2					
ANR	1251323	IdentifierDecl	Bv [ 4 ]		1251315	1					
ANR	1251324	IdentifierDeclType	double [ 4 ]		1251315	0					
ANR	1251325	Identifier	Bv		1251315	1					
ANR	1251326	PrimaryExpression	4		1251315	2					
ANR	1251327	Statement	gs_fixed_point	482:4:16603:16616	1251315	1	True				
ANR	1251328	ExpressionStatement	pts [ 4 ] [ 4 ]	482:19:16618:16627	1251315	2	True				
ANR	1251329	ArrayIndexing	pts [ 4 ] [ 4 ]		1251315	0					
ANR	1251330	ArrayIndexing	pts [ 4 ]		1251315	0					
ANR	1251331	Identifier	pts		1251315	0					
ANR	1251332	PrimaryExpression	4		1251315	1					
ANR	1251333	PrimaryExpression	4		1251315	1					
ANR	1251334	IdentifierDeclStatement	"int i , j ;"	483:4:16633:16641	1251315	3	True				
ANR	1251335	IdentifierDecl	i		1251315	0					
ANR	1251336	IdentifierDeclType	int		1251315	0					
ANR	1251337	Identifier	i		1251315	1					
ANR	1251338	IdentifierDecl	j		1251315	1					
ANR	1251339	IdentifierDeclType	int		1251315	0					
ANR	1251340	Identifier	j		1251315	1					
ANR	1251341	IdentifierDeclStatement	"double x = 0 , y = 0 ;"	484:4:16647:16666	1251315	4	True				
ANR	1251342	IdentifierDecl	x = 0		1251315	0					
ANR	1251343	IdentifierDeclType	double		1251315	0					
ANR	1251344	Identifier	x		1251315	1					
ANR	1251345	AssignmentExpression	x = 0		1251315	2		=			
ANR	1251346	Identifier	x		1251315	0					
ANR	1251347	PrimaryExpression	0		1251315	1					
ANR	1251348	IdentifierDecl	y = 0		1251315	1					
ANR	1251349	IdentifierDeclType	double		1251315	0					
ANR	1251350	Identifier	y		1251315	1					
ANR	1251351	AssignmentExpression	y = 0		1251315	2		=			
ANR	1251352	Identifier	y		1251315	0					
ANR	1251353	PrimaryExpression	0		1251315	1					
ANR	1251354	CompoundStatement		10:8:230:284	1251315	5					
ANR	1251355	IdentifierDeclStatement	"double u2 = u * u , co_u = 1.0 - u , co_u2 = co_u * co_u ;"	488:8:16739:16793	1251315	0	True				
ANR	1251356	IdentifierDecl	u2 = u * u		1251315	0					
ANR	1251357	IdentifierDeclType	double		1251315	0					
ANR	1251358	Identifier	u2		1251315	1					
ANR	1251359	AssignmentExpression	u2 = u * u		1251315	2		=			
ANR	1251360	Identifier	u2		1251315	0					
ANR	1251361	MultiplicativeExpression	u * u		1251315	1		*			
ANR	1251362	Identifier	u		1251315	0					
ANR	1251363	Identifier	u		1251315	1					
ANR	1251364	IdentifierDecl	co_u = 1.0 - u		1251315	1					
ANR	1251365	IdentifierDeclType	double		1251315	0					
ANR	1251366	Identifier	co_u		1251315	1					
ANR	1251367	AssignmentExpression	co_u = 1.0 - u		1251315	2		=			
ANR	1251368	Identifier	co_u		1251315	0					
ANR	1251369	AdditiveExpression	1.0 - u		1251315	1		-			
ANR	1251370	PrimaryExpression	1.0		1251315	0					
ANR	1251371	Identifier	u		1251315	1					
ANR	1251372	IdentifierDecl	co_u2 = co_u * co_u		1251315	2					
ANR	1251373	IdentifierDeclType	double		1251315	0					
ANR	1251374	Identifier	co_u2		1251315	1					
ANR	1251375	AssignmentExpression	co_u2 = co_u * co_u		1251315	2		=			
ANR	1251376	Identifier	co_u2		1251315	0					
ANR	1251377	MultiplicativeExpression	co_u * co_u		1251315	1		*			
ANR	1251378	Identifier	co_u		1251315	0					
ANR	1251379	Identifier	co_u		1251315	1					
ANR	1251380	IdentifierDeclStatement	"double v2 = v * v , co_v = 1.0 - v , co_v2 = co_v * co_v ;"	489:8:16803:16857	1251315	1	True				
ANR	1251381	IdentifierDecl	v2 = v * v		1251315	0					
ANR	1251382	IdentifierDeclType	double		1251315	0					
ANR	1251383	Identifier	v2		1251315	1					
ANR	1251384	AssignmentExpression	v2 = v * v		1251315	2		=			
ANR	1251385	Identifier	v2		1251315	0					
ANR	1251386	MultiplicativeExpression	v * v		1251315	1		*			
ANR	1251387	Identifier	v		1251315	0					
ANR	1251388	Identifier	v		1251315	1					
ANR	1251389	IdentifierDecl	co_v = 1.0 - v		1251315	1					
ANR	1251390	IdentifierDeclType	double		1251315	0					
ANR	1251391	Identifier	co_v		1251315	1					
ANR	1251392	AssignmentExpression	co_v = 1.0 - v		1251315	2		=			
ANR	1251393	Identifier	co_v		1251315	0					
ANR	1251394	AdditiveExpression	1.0 - v		1251315	1		-			
ANR	1251395	PrimaryExpression	1.0		1251315	0					
ANR	1251396	Identifier	v		1251315	1					
ANR	1251397	IdentifierDecl	co_v2 = co_v * co_v		1251315	2					
ANR	1251398	IdentifierDeclType	double		1251315	0					
ANR	1251399	Identifier	co_v2		1251315	1					
ANR	1251400	AssignmentExpression	co_v2 = co_v * co_v		1251315	2		=			
ANR	1251401	Identifier	co_v2		1251315	0					
ANR	1251402	MultiplicativeExpression	co_v * co_v		1251315	1		*			
ANR	1251403	Identifier	co_v		1251315	0					
ANR	1251404	Identifier	co_v		1251315	1					
ANR	1251405	ExpressionStatement	"Bu [ 0 ] = co_u * co_u2 , Bu [ 1 ] = 3 * u * co_u2 , Bu [ 2 ] = 3 * u2 * co_u , Bu [ 3 ] = u * u2"	491:8:16868:16962	1251315	2	True				
ANR	1251406	Expression	"Bu [ 0 ] = co_u * co_u2 , Bu [ 1 ] = 3 * u * co_u2 , Bu [ 2 ] = 3 * u2 * co_u , Bu [ 3 ] = u * u2"		1251315	0					
ANR	1251407	AssignmentExpression	Bu [ 0 ] = co_u * co_u2		1251315	0		=			
ANR	1251408	ArrayIndexing	Bu [ 0 ]		1251315	0					
ANR	1251409	Identifier	Bu		1251315	0					
ANR	1251410	PrimaryExpression	0		1251315	1					
ANR	1251411	MultiplicativeExpression	co_u * co_u2		1251315	1		*			
ANR	1251412	Identifier	co_u		1251315	0					
ANR	1251413	Identifier	co_u2		1251315	1					
ANR	1251414	Expression	"Bu [ 1 ] = 3 * u * co_u2 , Bu [ 2 ] = 3 * u2 * co_u , Bu [ 3 ] = u * u2"		1251315	1					
ANR	1251415	AssignmentExpression	Bu [ 1 ] = 3 * u * co_u2		1251315	0		=			
ANR	1251416	ArrayIndexing	Bu [ 1 ]		1251315	0					
ANR	1251417	Identifier	Bu		1251315	0					
ANR	1251418	PrimaryExpression	1		1251315	1					
ANR	1251419	MultiplicativeExpression	3 * u * co_u2		1251315	1		*			
ANR	1251420	PrimaryExpression	3		1251315	0					
ANR	1251421	MultiplicativeExpression	u * co_u2		1251315	1		*			
ANR	1251422	Identifier	u		1251315	0					
ANR	1251423	Identifier	co_u2		1251315	1					
ANR	1251424	Expression	"Bu [ 2 ] = 3 * u2 * co_u , Bu [ 3 ] = u * u2"		1251315	1					
ANR	1251425	AssignmentExpression	Bu [ 2 ] = 3 * u2 * co_u		1251315	0		=			
ANR	1251426	ArrayIndexing	Bu [ 2 ]		1251315	0					
ANR	1251427	Identifier	Bu		1251315	0					
ANR	1251428	PrimaryExpression	2		1251315	1					
ANR	1251429	MultiplicativeExpression	3 * u2 * co_u		1251315	1		*			
ANR	1251430	PrimaryExpression	3		1251315	0					
ANR	1251431	MultiplicativeExpression	u2 * co_u		1251315	1		*			
ANR	1251432	Identifier	u2		1251315	0					
ANR	1251433	Identifier	co_u		1251315	1					
ANR	1251434	AssignmentExpression	Bu [ 3 ] = u * u2		1251315	1		=			
ANR	1251435	ArrayIndexing	Bu [ 3 ]		1251315	0					
ANR	1251436	Identifier	Bu		1251315	0					
ANR	1251437	PrimaryExpression	3		1251315	1					
ANR	1251438	MultiplicativeExpression	u * u2		1251315	1		*			
ANR	1251439	Identifier	u		1251315	0					
ANR	1251440	Identifier	u2		1251315	1					
ANR	1251441	ExpressionStatement	"Bv [ 0 ] = co_v * co_v2 , Bv [ 1 ] = 3 * v * co_v2 , Bv [ 2 ] = 3 * v2 * co_v , Bv [ 3 ] = v * v2"	493:8:16972:17066	1251315	3	True				
ANR	1251442	Expression	"Bv [ 0 ] = co_v * co_v2 , Bv [ 1 ] = 3 * v * co_v2 , Bv [ 2 ] = 3 * v2 * co_v , Bv [ 3 ] = v * v2"		1251315	0					
ANR	1251443	AssignmentExpression	Bv [ 0 ] = co_v * co_v2		1251315	0		=			
ANR	1251444	ArrayIndexing	Bv [ 0 ]		1251315	0					
ANR	1251445	Identifier	Bv		1251315	0					
ANR	1251446	PrimaryExpression	0		1251315	1					
ANR	1251447	MultiplicativeExpression	co_v * co_v2		1251315	1		*			
ANR	1251448	Identifier	co_v		1251315	0					
ANR	1251449	Identifier	co_v2		1251315	1					
ANR	1251450	Expression	"Bv [ 1 ] = 3 * v * co_v2 , Bv [ 2 ] = 3 * v2 * co_v , Bv [ 3 ] = v * v2"		1251315	1					
ANR	1251451	AssignmentExpression	Bv [ 1 ] = 3 * v * co_v2		1251315	0		=			
ANR	1251452	ArrayIndexing	Bv [ 1 ]		1251315	0					
ANR	1251453	Identifier	Bv		1251315	0					
ANR	1251454	PrimaryExpression	1		1251315	1					
ANR	1251455	MultiplicativeExpression	3 * v * co_v2		1251315	1		*			
ANR	1251456	PrimaryExpression	3		1251315	0					
ANR	1251457	MultiplicativeExpression	v * co_v2		1251315	1		*			
ANR	1251458	Identifier	v		1251315	0					
ANR	1251459	Identifier	co_v2		1251315	1					
ANR	1251460	Expression	"Bv [ 2 ] = 3 * v2 * co_v , Bv [ 3 ] = v * v2"		1251315	1					
ANR	1251461	AssignmentExpression	Bv [ 2 ] = 3 * v2 * co_v		1251315	0		=			
ANR	1251462	ArrayIndexing	Bv [ 2 ]		1251315	0					
ANR	1251463	Identifier	Bv		1251315	0					
ANR	1251464	PrimaryExpression	2		1251315	1					
ANR	1251465	MultiplicativeExpression	3 * v2 * co_v		1251315	1		*			
ANR	1251466	PrimaryExpression	3		1251315	0					
ANR	1251467	MultiplicativeExpression	v2 * co_v		1251315	1		*			
ANR	1251468	Identifier	v2		1251315	0					
ANR	1251469	Identifier	co_v		1251315	1					
ANR	1251470	AssignmentExpression	Bv [ 3 ] = v * v2		1251315	1		=			
ANR	1251471	ArrayIndexing	Bv [ 3 ]		1251315	0					
ANR	1251472	Identifier	Bv		1251315	0					
ANR	1251473	PrimaryExpression	3		1251315	1					
ANR	1251474	MultiplicativeExpression	v * v2		1251315	1		*			
ANR	1251475	Identifier	v		1251315	0					
ANR	1251476	Identifier	v2		1251315	1					
ANR	1251477	ExpressionStatement	pts [ 0 ] [ 0 ] = curve [ 0 ] . vertex . p	498:4:17133:17162	1251315	6	True				
ANR	1251478	AssignmentExpression	pts [ 0 ] [ 0 ] = curve [ 0 ] . vertex . p		1251315	0		=			
ANR	1251479	ArrayIndexing	pts [ 0 ] [ 0 ]		1251315	0					
ANR	1251480	ArrayIndexing	pts [ 0 ]		1251315	0					
ANR	1251481	Identifier	pts		1251315	0					
ANR	1251482	PrimaryExpression	0		1251315	1					
ANR	1251483	PrimaryExpression	0		1251315	1					
ANR	1251484	MemberAccess	curve [ 0 ] . vertex . p		1251315	1					
ANR	1251485	MemberAccess	curve [ 0 ] . vertex		1251315	0					
ANR	1251486	ArrayIndexing	curve [ 0 ]		1251315	0					
ANR	1251487	Identifier	curve		1251315	0					
ANR	1251488	PrimaryExpression	0		1251315	1					
ANR	1251489	Identifier	vertex		1251315	1					
ANR	1251490	Identifier	p		1251315	1					
ANR	1251491	ExpressionStatement	pts [ 0 ] [ 1 ] = curve [ 0 ] . control [ 0 ]	499:4:17168:17199	1251315	7	True				
ANR	1251492	AssignmentExpression	pts [ 0 ] [ 1 ] = curve [ 0 ] . control [ 0 ]		1251315	0		=			
ANR	1251493	ArrayIndexing	pts [ 0 ] [ 1 ]		1251315	0					
ANR	1251494	ArrayIndexing	pts [ 0 ]		1251315	0					
ANR	1251495	Identifier	pts		1251315	0					
ANR	1251496	PrimaryExpression	0		1251315	1					
ANR	1251497	PrimaryExpression	1		1251315	1					
ANR	1251498	ArrayIndexing	curve [ 0 ] . control [ 0 ]		1251315	1					
ANR	1251499	MemberAccess	curve [ 0 ] . control		1251315	0					
ANR	1251500	ArrayIndexing	curve [ 0 ]		1251315	0					
ANR	1251501	Identifier	curve		1251315	0					
ANR	1251502	PrimaryExpression	0		1251315	1					
ANR	1251503	Identifier	control		1251315	1					
ANR	1251504	PrimaryExpression	0		1251315	1					
ANR	1251505	ExpressionStatement	pts [ 0 ] [ 2 ] = curve [ 0 ] . control [ 1 ]	500:4:17205:17236	1251315	8	True				
ANR	1251506	AssignmentExpression	pts [ 0 ] [ 2 ] = curve [ 0 ] . control [ 1 ]		1251315	0		=			
ANR	1251507	ArrayIndexing	pts [ 0 ] [ 2 ]		1251315	0					
ANR	1251508	ArrayIndexing	pts [ 0 ]		1251315	0					
ANR	1251509	Identifier	pts		1251315	0					
ANR	1251510	PrimaryExpression	0		1251315	1					
ANR	1251511	PrimaryExpression	2		1251315	1					
ANR	1251512	ArrayIndexing	curve [ 0 ] . control [ 1 ]		1251315	1					
ANR	1251513	MemberAccess	curve [ 0 ] . control		1251315	0					
ANR	1251514	ArrayIndexing	curve [ 0 ]		1251315	0					
ANR	1251515	Identifier	curve		1251315	0					
ANR	1251516	PrimaryExpression	0		1251315	1					
ANR	1251517	Identifier	control		1251315	1					
ANR	1251518	PrimaryExpression	1		1251315	1					
ANR	1251519	ExpressionStatement	pts [ 0 ] [ 3 ] = curve [ 1 ] . vertex . p	501:4:17242:17271	1251315	9	True				
ANR	1251520	AssignmentExpression	pts [ 0 ] [ 3 ] = curve [ 1 ] . vertex . p		1251315	0		=			
ANR	1251521	ArrayIndexing	pts [ 0 ] [ 3 ]		1251315	0					
ANR	1251522	ArrayIndexing	pts [ 0 ]		1251315	0					
ANR	1251523	Identifier	pts		1251315	0					
ANR	1251524	PrimaryExpression	0		1251315	1					
ANR	1251525	PrimaryExpression	3		1251315	1					
ANR	1251526	MemberAccess	curve [ 1 ] . vertex . p		1251315	1					
ANR	1251527	MemberAccess	curve [ 1 ] . vertex		1251315	0					
ANR	1251528	ArrayIndexing	curve [ 1 ]		1251315	0					
ANR	1251529	Identifier	curve		1251315	0					
ANR	1251530	PrimaryExpression	1		1251315	1					
ANR	1251531	Identifier	vertex		1251315	1					
ANR	1251532	Identifier	p		1251315	1					
ANR	1251533	ExpressionStatement	pts [ 1 ] [ 3 ] = curve [ 1 ] . control [ 0 ]	502:4:17277:17308	1251315	10	True				
ANR	1251534	AssignmentExpression	pts [ 1 ] [ 3 ] = curve [ 1 ] . control [ 0 ]		1251315	0		=			
ANR	1251535	ArrayIndexing	pts [ 1 ] [ 3 ]		1251315	0					
ANR	1251536	ArrayIndexing	pts [ 1 ]		1251315	0					
ANR	1251537	Identifier	pts		1251315	0					
ANR	1251538	PrimaryExpression	1		1251315	1					
ANR	1251539	PrimaryExpression	3		1251315	1					
ANR	1251540	ArrayIndexing	curve [ 1 ] . control [ 0 ]		1251315	1					
ANR	1251541	MemberAccess	curve [ 1 ] . control		1251315	0					
ANR	1251542	ArrayIndexing	curve [ 1 ]		1251315	0					
ANR	1251543	Identifier	curve		1251315	0					
ANR	1251544	PrimaryExpression	1		1251315	1					
ANR	1251545	Identifier	control		1251315	1					
ANR	1251546	PrimaryExpression	0		1251315	1					
ANR	1251547	ExpressionStatement	pts [ 2 ] [ 3 ] = curve [ 1 ] . control [ 1 ]	503:4:17314:17345	1251315	11	True				
ANR	1251548	AssignmentExpression	pts [ 2 ] [ 3 ] = curve [ 1 ] . control [ 1 ]		1251315	0		=			
ANR	1251549	ArrayIndexing	pts [ 2 ] [ 3 ]		1251315	0					
ANR	1251550	ArrayIndexing	pts [ 2 ]		1251315	0					
ANR	1251551	Identifier	pts		1251315	0					
ANR	1251552	PrimaryExpression	2		1251315	1					
ANR	1251553	PrimaryExpression	3		1251315	1					
ANR	1251554	ArrayIndexing	curve [ 1 ] . control [ 1 ]		1251315	1					
ANR	1251555	MemberAccess	curve [ 1 ] . control		1251315	0					
ANR	1251556	ArrayIndexing	curve [ 1 ]		1251315	0					
ANR	1251557	Identifier	curve		1251315	0					
ANR	1251558	PrimaryExpression	1		1251315	1					
ANR	1251559	Identifier	control		1251315	1					
ANR	1251560	PrimaryExpression	1		1251315	1					
ANR	1251561	ExpressionStatement	pts [ 3 ] [ 3 ] = curve [ 2 ] . vertex . p	504:4:17351:17380	1251315	12	True				
ANR	1251562	AssignmentExpression	pts [ 3 ] [ 3 ] = curve [ 2 ] . vertex . p		1251315	0		=			
ANR	1251563	ArrayIndexing	pts [ 3 ] [ 3 ]		1251315	0					
ANR	1251564	ArrayIndexing	pts [ 3 ]		1251315	0					
ANR	1251565	Identifier	pts		1251315	0					
ANR	1251566	PrimaryExpression	3		1251315	1					
ANR	1251567	PrimaryExpression	3		1251315	1					
ANR	1251568	MemberAccess	curve [ 2 ] . vertex . p		1251315	1					
ANR	1251569	MemberAccess	curve [ 2 ] . vertex		1251315	0					
ANR	1251570	ArrayIndexing	curve [ 2 ]		1251315	0					
ANR	1251571	Identifier	curve		1251315	0					
ANR	1251572	PrimaryExpression	2		1251315	1					
ANR	1251573	Identifier	vertex		1251315	1					
ANR	1251574	Identifier	p		1251315	1					
ANR	1251575	ExpressionStatement	pts [ 3 ] [ 2 ] = curve [ 2 ] . control [ 0 ]	505:4:17386:17417	1251315	13	True				
ANR	1251576	AssignmentExpression	pts [ 3 ] [ 2 ] = curve [ 2 ] . control [ 0 ]		1251315	0		=			
ANR	1251577	ArrayIndexing	pts [ 3 ] [ 2 ]		1251315	0					
ANR	1251578	ArrayIndexing	pts [ 3 ]		1251315	0					
ANR	1251579	Identifier	pts		1251315	0					
ANR	1251580	PrimaryExpression	3		1251315	1					
ANR	1251581	PrimaryExpression	2		1251315	1					
ANR	1251582	ArrayIndexing	curve [ 2 ] . control [ 0 ]		1251315	1					
ANR	1251583	MemberAccess	curve [ 2 ] . control		1251315	0					
ANR	1251584	ArrayIndexing	curve [ 2 ]		1251315	0					
ANR	1251585	Identifier	curve		1251315	0					
ANR	1251586	PrimaryExpression	2		1251315	1					
ANR	1251587	Identifier	control		1251315	1					
ANR	1251588	PrimaryExpression	0		1251315	1					
ANR	1251589	ExpressionStatement	pts [ 3 ] [ 1 ] = curve [ 2 ] . control [ 1 ]	506:4:17423:17454	1251315	14	True				
ANR	1251590	AssignmentExpression	pts [ 3 ] [ 1 ] = curve [ 2 ] . control [ 1 ]		1251315	0		=			
ANR	1251591	ArrayIndexing	pts [ 3 ] [ 1 ]		1251315	0					
ANR	1251592	ArrayIndexing	pts [ 3 ]		1251315	0					
ANR	1251593	Identifier	pts		1251315	0					
ANR	1251594	PrimaryExpression	3		1251315	1					
ANR	1251595	PrimaryExpression	1		1251315	1					
ANR	1251596	ArrayIndexing	curve [ 2 ] . control [ 1 ]		1251315	1					
ANR	1251597	MemberAccess	curve [ 2 ] . control		1251315	0					
ANR	1251598	ArrayIndexing	curve [ 2 ]		1251315	0					
ANR	1251599	Identifier	curve		1251315	0					
ANR	1251600	PrimaryExpression	2		1251315	1					
ANR	1251601	Identifier	control		1251315	1					
ANR	1251602	PrimaryExpression	1		1251315	1					
ANR	1251603	ExpressionStatement	pts [ 3 ] [ 0 ] = curve [ 3 ] . vertex . p	507:4:17460:17489	1251315	15	True				
ANR	1251604	AssignmentExpression	pts [ 3 ] [ 0 ] = curve [ 3 ] . vertex . p		1251315	0		=			
ANR	1251605	ArrayIndexing	pts [ 3 ] [ 0 ]		1251315	0					
ANR	1251606	ArrayIndexing	pts [ 3 ]		1251315	0					
ANR	1251607	Identifier	pts		1251315	0					
ANR	1251608	PrimaryExpression	3		1251315	1					
ANR	1251609	PrimaryExpression	0		1251315	1					
ANR	1251610	MemberAccess	curve [ 3 ] . vertex . p		1251315	1					
ANR	1251611	MemberAccess	curve [ 3 ] . vertex		1251315	0					
ANR	1251612	ArrayIndexing	curve [ 3 ]		1251315	0					
ANR	1251613	Identifier	curve		1251315	0					
ANR	1251614	PrimaryExpression	3		1251315	1					
ANR	1251615	Identifier	vertex		1251315	1					
ANR	1251616	Identifier	p		1251315	1					
ANR	1251617	ExpressionStatement	pts [ 2 ] [ 0 ] = curve [ 3 ] . control [ 0 ]	508:4:17495:17526	1251315	16	True				
ANR	1251618	AssignmentExpression	pts [ 2 ] [ 0 ] = curve [ 3 ] . control [ 0 ]		1251315	0		=			
ANR	1251619	ArrayIndexing	pts [ 2 ] [ 0 ]		1251315	0					
ANR	1251620	ArrayIndexing	pts [ 2 ]		1251315	0					
ANR	1251621	Identifier	pts		1251315	0					
ANR	1251622	PrimaryExpression	2		1251315	1					
ANR	1251623	PrimaryExpression	0		1251315	1					
ANR	1251624	ArrayIndexing	curve [ 3 ] . control [ 0 ]		1251315	1					
ANR	1251625	MemberAccess	curve [ 3 ] . control		1251315	0					
ANR	1251626	ArrayIndexing	curve [ 3 ]		1251315	0					
ANR	1251627	Identifier	curve		1251315	0					
ANR	1251628	PrimaryExpression	3		1251315	1					
ANR	1251629	Identifier	control		1251315	1					
ANR	1251630	PrimaryExpression	0		1251315	1					
ANR	1251631	ExpressionStatement	pts [ 1 ] [ 0 ] = curve [ 3 ] . control [ 1 ]	509:4:17532:17563	1251315	17	True				
ANR	1251632	AssignmentExpression	pts [ 1 ] [ 0 ] = curve [ 3 ] . control [ 1 ]		1251315	0		=			
ANR	1251633	ArrayIndexing	pts [ 1 ] [ 0 ]		1251315	0					
ANR	1251634	ArrayIndexing	pts [ 1 ]		1251315	0					
ANR	1251635	Identifier	pts		1251315	0					
ANR	1251636	PrimaryExpression	1		1251315	1					
ANR	1251637	PrimaryExpression	0		1251315	1					
ANR	1251638	ArrayIndexing	curve [ 3 ] . control [ 1 ]		1251315	1					
ANR	1251639	MemberAccess	curve [ 3 ] . control		1251315	0					
ANR	1251640	ArrayIndexing	curve [ 3 ]		1251315	0					
ANR	1251641	Identifier	curve		1251315	0					
ANR	1251642	PrimaryExpression	3		1251315	1					
ANR	1251643	Identifier	control		1251315	1					
ANR	1251644	PrimaryExpression	1		1251315	1					
ANR	1251645	ExpressionStatement	pts [ 1 ] [ 1 ] = interior [ 0 ]	510:4:17569:17592	1251315	18	True				
ANR	1251646	AssignmentExpression	pts [ 1 ] [ 1 ] = interior [ 0 ]		1251315	0		=			
ANR	1251647	ArrayIndexing	pts [ 1 ] [ 1 ]		1251315	0					
ANR	1251648	ArrayIndexing	pts [ 1 ]		1251315	0					
ANR	1251649	Identifier	pts		1251315	0					
ANR	1251650	PrimaryExpression	1		1251315	1					
ANR	1251651	PrimaryExpression	1		1251315	1					
ANR	1251652	ArrayIndexing	interior [ 0 ]		1251315	1					
ANR	1251653	Identifier	interior		1251315	0					
ANR	1251654	PrimaryExpression	0		1251315	1					
ANR	1251655	ExpressionStatement	pts [ 2 ] [ 1 ] = interior [ 1 ]	511:4:17598:17621	1251315	19	True				
ANR	1251656	AssignmentExpression	pts [ 2 ] [ 1 ] = interior [ 1 ]		1251315	0		=			
ANR	1251657	ArrayIndexing	pts [ 2 ] [ 1 ]		1251315	0					
ANR	1251658	ArrayIndexing	pts [ 2 ]		1251315	0					
ANR	1251659	Identifier	pts		1251315	0					
ANR	1251660	PrimaryExpression	2		1251315	1					
ANR	1251661	PrimaryExpression	1		1251315	1					
ANR	1251662	ArrayIndexing	interior [ 1 ]		1251315	1					
ANR	1251663	Identifier	interior		1251315	0					
ANR	1251664	PrimaryExpression	1		1251315	1					
ANR	1251665	ExpressionStatement	pts [ 2 ] [ 2 ] = interior [ 2 ]	512:4:17627:17650	1251315	20	True				
ANR	1251666	AssignmentExpression	pts [ 2 ] [ 2 ] = interior [ 2 ]		1251315	0		=			
ANR	1251667	ArrayIndexing	pts [ 2 ] [ 2 ]		1251315	0					
ANR	1251668	ArrayIndexing	pts [ 2 ]		1251315	0					
ANR	1251669	Identifier	pts		1251315	0					
ANR	1251670	PrimaryExpression	2		1251315	1					
ANR	1251671	PrimaryExpression	2		1251315	1					
ANR	1251672	ArrayIndexing	interior [ 2 ]		1251315	1					
ANR	1251673	Identifier	interior		1251315	0					
ANR	1251674	PrimaryExpression	2		1251315	1					
ANR	1251675	ExpressionStatement	pts [ 1 ] [ 2 ] = interior [ 3 ]	513:4:17656:17679	1251315	21	True				
ANR	1251676	AssignmentExpression	pts [ 1 ] [ 2 ] = interior [ 3 ]		1251315	0		=			
ANR	1251677	ArrayIndexing	pts [ 1 ] [ 2 ]		1251315	0					
ANR	1251678	ArrayIndexing	pts [ 1 ]		1251315	0					
ANR	1251679	Identifier	pts		1251315	0					
ANR	1251680	PrimaryExpression	1		1251315	1					
ANR	1251681	PrimaryExpression	2		1251315	1					
ANR	1251682	ArrayIndexing	interior [ 3 ]		1251315	1					
ANR	1251683	Identifier	interior		1251315	0					
ANR	1251684	PrimaryExpression	3		1251315	1					
ANR	1251685	ForStatement	for ( i = 0 ; i < 4 ; ++ i )		1251315	22					
ANR	1251686	ForInit	i = 0 ;	516:9:17731:17736	1251315	0	True				
ANR	1251687	AssignmentExpression	i = 0		1251315	0		=			
ANR	1251688	Identifier	i		1251315	0					
ANR	1251689	PrimaryExpression	0		1251315	1					
ANR	1251690	Condition	i < 4	516:16:17738:17742	1251315	1	True				
ANR	1251691	RelationalExpression	i < 4		1251315	0		<			
ANR	1251692	Identifier	i		1251315	0					
ANR	1251693	PrimaryExpression	4		1251315	1					
ANR	1251694	UnaryExpression	++ i	516:23:17745:17747	1251315	2	True				
ANR	1251695	IncDec	++		1251315	0					
ANR	1251696	Identifier	i		1251315	1					
ANR	1251697	ForStatement	for ( j = 0 ; j < 4 ; ++ j )		1251315	3					
ANR	1251698	ForInit	j = 0 ;	517:13:17763:17768	1251315	0	True				
ANR	1251699	AssignmentExpression	j = 0		1251315	0		=			
ANR	1251700	Identifier	j		1251315	0					
ANR	1251701	PrimaryExpression	0		1251315	1					
ANR	1251702	Condition	j < 4	517:20:17770:17774	1251315	1	True				
ANR	1251703	RelationalExpression	j < 4		1251315	0		<			
ANR	1251704	Identifier	j		1251315	0					
ANR	1251705	PrimaryExpression	4		1251315	1					
ANR	1251706	UnaryExpression	++ j	517:27:17777:17779	1251315	2	True				
ANR	1251707	IncDec	++		1251315	0					
ANR	1251708	Identifier	j		1251315	1					
ANR	1251709	CompoundStatement		39:12:1223:1251	1251315	3					
ANR	1251710	IdentifierDeclStatement	double coeff = Bu [ i ] * Bv [ j ] ;	518:12:17796:17824	1251315	0	True				
ANR	1251711	IdentifierDecl	coeff = Bu [ i ] * Bv [ j ]		1251315	0					
ANR	1251712	IdentifierDeclType	double		1251315	0					
ANR	1251713	Identifier	coeff		1251315	1					
ANR	1251714	AssignmentExpression	coeff = Bu [ i ] * Bv [ j ]		1251315	2		=			
ANR	1251715	Identifier	coeff		1251315	0					
ANR	1251716	MultiplicativeExpression	Bu [ i ] * Bv [ j ]		1251315	1		*			
ANR	1251717	ArrayIndexing	Bu [ i ]		1251315	0					
ANR	1251718	Identifier	Bu		1251315	0					
ANR	1251719	Identifier	i		1251315	1					
ANR	1251720	ArrayIndexing	Bv [ j ]		1251315	1					
ANR	1251721	Identifier	Bv		1251315	0					
ANR	1251722	Identifier	j		1251315	1					
ANR	1251723	ExpressionStatement	"x += pts [ i ] [ j ] . x * coeff , y += pts [ i ] [ j ] . y * coeff"	520:12:17839:17889	1251315	1	True				
ANR	1251724	Expression	"x += pts [ i ] [ j ] . x * coeff , y += pts [ i ] [ j ] . y * coeff"		1251315	0					
ANR	1251725	AssignmentExpression	x += pts [ i ] [ j ] . x * coeff		1251315	0		+=			
ANR	1251726	Identifier	x		1251315	0					
ANR	1251727	MultiplicativeExpression	pts [ i ] [ j ] . x * coeff		1251315	1		*			
ANR	1251728	MemberAccess	pts [ i ] [ j ] . x		1251315	0					
ANR	1251729	ArrayIndexing	pts [ i ] [ j ]		1251315	0					
ANR	1251730	ArrayIndexing	pts [ i ]		1251315	0					
ANR	1251731	Identifier	pts		1251315	0					
ANR	1251732	Identifier	i		1251315	1					
ANR	1251733	Identifier	j		1251315	1					
ANR	1251734	Identifier	x		1251315	1					
ANR	1251735	Identifier	coeff		1251315	1					
ANR	1251736	AssignmentExpression	y += pts [ i ] [ j ] . y * coeff		1251315	1		+=			
ANR	1251737	Identifier	y		1251315	0					
ANR	1251738	MultiplicativeExpression	pts [ i ] [ j ] . y * coeff		1251315	1		*			
ANR	1251739	MemberAccess	pts [ i ] [ j ] . y		1251315	0					
ANR	1251740	ArrayIndexing	pts [ i ] [ j ]		1251315	0					
ANR	1251741	ArrayIndexing	pts [ i ]		1251315	0					
ANR	1251742	Identifier	pts		1251315	0					
ANR	1251743	Identifier	i		1251315	1					
ANR	1251744	Identifier	j		1251315	1					
ANR	1251745	Identifier	y		1251315	1					
ANR	1251746	Identifier	coeff		1251315	1					
ANR	1251747	ExpressionStatement	"pt -> x = ( fixed ) x , pt -> y = ( fixed ) y"	522:4:17905:17939	1251315	23	True				
ANR	1251748	Expression	"pt -> x = ( fixed ) x , pt -> y = ( fixed ) y"		1251315	0					
ANR	1251749	AssignmentExpression	pt -> x = ( fixed ) x		1251315	0		=			
ANR	1251750	PtrMemberAccess	pt -> x		1251315	0					
ANR	1251751	Identifier	pt		1251315	0					
ANR	1251752	Identifier	x		1251315	1					
ANR	1251753	CastExpression	( fixed ) x		1251315	1					
ANR	1251754	CastTarget	fixed		1251315	0					
ANR	1251755	Identifier	x		1251315	1					
ANR	1251756	AssignmentExpression	pt -> y = ( fixed ) y		1251315	1		=			
ANR	1251757	PtrMemberAccess	pt -> y		1251315	0					
ANR	1251758	Identifier	pt		1251315	0					
ANR	1251759	Identifier	y		1251315	1					
ANR	1251760	CastExpression	( fixed ) y		1251315	1					
ANR	1251761	CastTarget	fixed		1251315	0					
ANR	1251762	Identifier	y		1251315	1					
ANR	1251763	ReturnType	static void		1251315	1					
ANR	1251764	Identifier	Tpp_transform		1251315	2					
ANR	1251765	ParameterList	"gs_fixed_point * pt , const patch_curve_t curve [ 4 ] , const gs_fixed_point interior [ 4 ] , double u , double v"		1251315	3					
ANR	1251766	Parameter	gs_fixed_point * pt	478:14:16453:16471	1251315	0	True				
ANR	1251767	ParameterType	gs_fixed_point *		1251315	0					
ANR	1251768	Identifier	pt		1251315	1					
ANR	1251769	Parameter	const patch_curve_t curve [ 4 ]	478:35:16474:16501	1251315	1	True				
ANR	1251770	ParameterType	const patch_curve_t [ 4 ]		1251315	0					
ANR	1251771	Identifier	curve		1251315	1					
ANR	1251772	Parameter	const gs_fixed_point interior [ 4 ]	479:14:16518:16549	1251315	2	True				
ANR	1251773	ParameterType	const gs_fixed_point [ 4 ]		1251315	0					
ANR	1251774	Identifier	interior		1251315	1					
ANR	1251775	Parameter	double u	479:48:16552:16559	1251315	3	True				
ANR	1251776	ParameterType	double		1251315	0					
ANR	1251777	Identifier	u		1251315	1					
ANR	1251778	Parameter	double v	479:58:16562:16569	1251315	4	True				
ANR	1251779	ParameterType	double		1251315	0					
ANR	1251780	Identifier	v		1251315	1					
ANR	1251781	CFGEntryNode	ENTRY		1251315		True				
ANR	1251782	CFGExitNode	EXIT		1251315		True				
ANR	1251783	Symbol	pt		1251315						
ANR	1251784	Symbol	* curve [ 3 ] . control		1251315						
ANR	1251785	Symbol	curve [ 1 ] . vertex . p		1251315						
ANR	1251786	Symbol	* curve [ 2 ] . control		1251315						
ANR	1251787	Symbol	co_v2		1251315						
ANR	1251788	Symbol	* curve [ 0 ] . control		1251315						
ANR	1251789	Symbol	* curve [ 1 ] . control		1251315						
ANR	1251790	Symbol	curve [ 2 ] . vertex		1251315						
ANR	1251791	Symbol	* pts		1251315						
ANR	1251792	Symbol	* * i		1251315						
ANR	1251793	Symbol	curve [ 0 ] . control		1251315						
ANR	1251794	Symbol	* pt		1251315						
ANR	1251795	Symbol	curve [ 1 ] . control		1251315						
ANR	1251796	Symbol	curve [ 3 ] . control		1251315						
ANR	1251797	Symbol	curve [ 2 ] . control		1251315						
ANR	1251798	Symbol	co_u2		1251315						
ANR	1251799	Symbol	* Bv		1251315						
ANR	1251800	Symbol	* Bu		1251315						
ANR	1251801	Symbol	curve [ 0 ] . vertex . p		1251315						
ANR	1251802	Symbol	curve [ 3 ] . vertex		1251315						
ANR	1251803	Symbol	* * pts		1251315						
ANR	1251804	Symbol	curve		1251315						
ANR	1251805	Symbol	co_u		1251315						
ANR	1251806	Symbol	co_v		1251315						
ANR	1251807	Symbol	interior		1251315						
ANR	1251808	Symbol	u2		1251315						
ANR	1251809	Symbol	curve [ 2 ] . vertex . p		1251315						
ANR	1251810	Symbol	coeff		1251315						
ANR	1251811	Symbol	pt -> x		1251315						
ANR	1251812	Symbol	curve [ 3 ] . vertex . p		1251315						
ANR	1251813	Symbol	pt -> y		1251315						
ANR	1251814	Symbol	curve [ 1 ] . vertex		1251315						
ANR	1251815	Symbol	i		1251315						
ANR	1251816	Symbol	* * curve		1251315						
ANR	1251817	Symbol	j		1251315						
ANR	1251818	Symbol	pts [ i ] [ j ] . y		1251315						
ANR	1251819	Symbol	pts [ i ] [ j ] . x		1251315						
ANR	1251820	Symbol	pts		1251315						
ANR	1251821	Symbol	Bu		1251315						
ANR	1251822	Symbol	* curve		1251315						
ANR	1251823	Symbol	* i		1251315						
ANR	1251824	Symbol	Bv		1251315						
ANR	1251825	Symbol	* j		1251315						
ANR	1251826	Symbol	u		1251315						
ANR	1251827	Symbol	v		1251315						
ANR	1251828	Symbol	curve [ 0 ] . vertex		1251315						
ANR	1251829	Symbol	x		1251315						
ANR	1251830	Symbol	y		1251315						
ANR	1251831	Symbol	v2		1251315						
ANR	1251832	Symbol	* interior		1251315						
ANR	1251833	Function	gs_shading_Tpp_fill_rectangle	525:0:17944:19754							
ANR	1251834	FunctionDef	"gs_shading_Tpp_fill_rectangle (const gs_shading_t * psh0 , const gs_rect * rect , const gs_fixed_rect * rect_clip , gx_device * dev , gs_gstate * pgs)"		1251833	0					
ANR	1251835	CompoundStatement		529:0:18153:19754	1251833	0					
ANR	1251836	Statement	const	530:4:18159:18163	1251833	0	True				
ANR	1251837	Statement	gs_shading_Tpp_t	530:10:18165:18180	1251833	1	True				
ANR	1251838	Statement	*	530:27:18182:18182	1251833	2	True				
ANR	1251839	Statement	const	530:29:18184:18188	1251833	3	True				
ANR	1251840	ExpressionStatement	psh = ( const gs_shading_Tpp_t * ) psh0	530:35:18190:18226	1251833	4	True				
ANR	1251841	AssignmentExpression	psh = ( const gs_shading_Tpp_t * ) psh0		1251833	0		=			
ANR	1251842	Identifier	psh		1251833	0					
ANR	1251843	CastExpression	( const gs_shading_Tpp_t * ) psh0		1251833	1					
ANR	1251844	CastTarget	const gs_shading_Tpp_t *		1251833	0					
ANR	1251845	Identifier	psh0		1251833	1					
ANR	1251846	IdentifierDeclStatement	patch_fill_state_t state ;	531:4:18232:18256	1251833	5	True				
ANR	1251847	IdentifierDecl	state		1251833	0					
ANR	1251848	IdentifierDeclType	patch_fill_state_t		1251833	0					
ANR	1251849	Identifier	state		1251833	1					
ANR	1251850	IdentifierDeclStatement	shade_coord_stream_t cs ;	532:4:18262:18285	1251833	6	True				
ANR	1251851	IdentifierDecl	cs		1251833	0					
ANR	1251852	IdentifierDeclType	shade_coord_stream_t		1251833	0					
ANR	1251853	Identifier	cs		1251833	1					
ANR	1251854	IdentifierDeclStatement	patch_curve_t curve [ 4 ] ;	533:4:18291:18313	1251833	7	True				
ANR	1251855	IdentifierDecl	curve [ 4 ]		1251833	0					
ANR	1251856	IdentifierDeclType	patch_curve_t [ 4 ]		1251833	0					
ANR	1251857	Identifier	curve		1251833	1					
ANR	1251858	PrimaryExpression	4		1251833	2					
ANR	1251859	IdentifierDeclStatement	gs_fixed_point interior [ 4 ] ;	534:4:18319:18345	1251833	8	True				
ANR	1251860	IdentifierDecl	interior [ 4 ]		1251833	0					
ANR	1251861	IdentifierDeclType	gs_fixed_point [ 4 ]		1251833	0					
ANR	1251862	Identifier	interior		1251833	1					
ANR	1251863	PrimaryExpression	4		1251833	2					
ANR	1251864	IdentifierDeclStatement	int code ;	535:4:18351:18359	1251833	9	True				
ANR	1251865	IdentifierDecl	code		1251833	0					
ANR	1251866	IdentifierDeclType	int		1251833	0					
ANR	1251867	Identifier	code		1251833	1					
ANR	1251868	ExpressionStatement	"code = mesh_init_fill_state ( ( mesh_fill_state_t * ) & state , ( const gs_shading_mesh_t * ) psh0 , rect_clip , dev , pgs )"	537:4:18366:18503	1251833	10	True				
ANR	1251869	AssignmentExpression	"code = mesh_init_fill_state ( ( mesh_fill_state_t * ) & state , ( const gs_shading_mesh_t * ) psh0 , rect_clip , dev , pgs )"		1251833	0		=			
ANR	1251870	Identifier	code		1251833	0					
ANR	1251871	CallExpression	"mesh_init_fill_state ( ( mesh_fill_state_t * ) & state , ( const gs_shading_mesh_t * ) psh0 , rect_clip , dev , pgs )"		1251833	1					
ANR	1251872	Callee	mesh_init_fill_state		1251833	0					
ANR	1251873	Identifier	mesh_init_fill_state		1251833	0					
ANR	1251874	ArgumentList	( mesh_fill_state_t * ) & state		1251833	1					
ANR	1251875	Argument	( mesh_fill_state_t * ) & state		1251833	0					
ANR	1251876	CastExpression	( mesh_fill_state_t * ) & state		1251833	0					
ANR	1251877	CastTarget	mesh_fill_state_t *		1251833	0					
ANR	1251878	UnaryOperationExpression	& state		1251833	1					
ANR	1251879	UnaryOperator	&		1251833	0					
ANR	1251880	Identifier	state		1251833	1					
ANR	1251881	Argument	( const gs_shading_mesh_t * ) psh0		1251833	1					
ANR	1251882	CastExpression	( const gs_shading_mesh_t * ) psh0		1251833	0					
ANR	1251883	CastTarget	const gs_shading_mesh_t *		1251833	0					
ANR	1251884	Identifier	psh0		1251833	1					
ANR	1251885	Argument	rect_clip		1251833	2					
ANR	1251886	Identifier	rect_clip		1251833	0					
ANR	1251887	Argument	dev		1251833	3					
ANR	1251888	Identifier	dev		1251833	0					
ANR	1251889	Argument	pgs		1251833	4					
ANR	1251890	Identifier	pgs		1251833	0					
ANR	1251891	IfStatement	if ( code < 0 )		1251833	11					
ANR	1251892	Condition	code < 0	539:8:18513:18520	1251833	0	True				
ANR	1251893	RelationalExpression	code < 0		1251833	0		<			
ANR	1251894	Identifier	code		1251833	0					
ANR	1251895	PrimaryExpression	0		1251833	1					
ANR	1251896	CompoundStatement		11:18:369:369	1251833	1					
ANR	1251897	IfStatement	if ( state . icclink != NULL )		1251833	0					
ANR	1251898	Condition	state . icclink != NULL	540:12:18537:18557	1251833	0	True				
ANR	1251899	EqualityExpression	state . icclink != NULL		1251833	0		!=			
ANR	1251900	MemberAccess	state . icclink		1251833	0					
ANR	1251901	Identifier	state		1251833	0					
ANR	1251902	Identifier	icclink		1251833	1					
ANR	1251903	Identifier	NULL		1251833	1					
ANR	1251904	ExpressionStatement	gsicc_release_link ( state . icclink )	540:35:18560:18593	1251833	1	True				
ANR	1251905	CallExpression	gsicc_release_link ( state . icclink )		1251833	0					
ANR	1251906	Callee	gsicc_release_link		1251833	0					
ANR	1251907	Identifier	gsicc_release_link		1251833	0					
ANR	1251908	ArgumentList	state . icclink		1251833	1					
ANR	1251909	Argument	state . icclink		1251833	0					
ANR	1251910	MemberAccess	state . icclink		1251833	0					
ANR	1251911	Identifier	state		1251833	0					
ANR	1251912	Identifier	icclink		1251833	1					
ANR	1251913	ReturnStatement	return code ;	541:8:18603:18614	1251833	1	True				
ANR	1251914	Identifier	code		1251833	0					
ANR	1251915	ExpressionStatement	state . Function = psh -> params . Function	543:4:18626:18663	1251833	12	True				
ANR	1251916	AssignmentExpression	state . Function = psh -> params . Function		1251833	0		=			
ANR	1251917	MemberAccess	state . Function		1251833	0					
ANR	1251918	Identifier	state		1251833	0					
ANR	1251919	Identifier	Function		1251833	1					
ANR	1251920	MemberAccess	psh -> params . Function		1251833	1					
ANR	1251921	PtrMemberAccess	psh -> params		1251833	0					
ANR	1251922	Identifier	psh		1251833	0					
ANR	1251923	Identifier	params		1251833	1					
ANR	1251924	Identifier	Function		1251833	1					
ANR	1251925	ExpressionStatement	code = init_patch_fill_state ( & state )	544:4:18669:18705	1251833	13	True				
ANR	1251926	AssignmentExpression	code = init_patch_fill_state ( & state )		1251833	0		=			
ANR	1251927	Identifier	code		1251833	0					
ANR	1251928	CallExpression	init_patch_fill_state ( & state )		1251833	1					
ANR	1251929	Callee	init_patch_fill_state		1251833	0					
ANR	1251930	Identifier	init_patch_fill_state		1251833	0					
ANR	1251931	ArgumentList	& state		1251833	1					
ANR	1251932	Argument	& state		1251833	0					
ANR	1251933	UnaryOperationExpression	& state		1251833	0					
ANR	1251934	UnaryOperator	&		1251833	0					
ANR	1251935	Identifier	state		1251833	1					
ANR	1251936	IfStatement	if ( code < 0 )		1251833	14					
ANR	1251937	Condition	code < 0	545:7:18714:18721	1251833	0	True				
ANR	1251938	RelationalExpression	code < 0		1251833	0		<			
ANR	1251939	Identifier	code		1251833	0					
ANR	1251940	PrimaryExpression	0		1251833	1					
ANR	1251941	ReturnStatement	return code ;	546:8:18732:18743	1251833	1	True				
ANR	1251942	Identifier	code		1251833	0					
ANR	1251943	ExpressionStatement	curve [ 0 ] . straight = curve [ 1 ] . straight = curve [ 2 ] . straight = curve [ 3 ] . straight = false	547:4:18749:18834	1251833	15	True				
ANR	1251944	AssignmentExpression	curve [ 0 ] . straight = curve [ 1 ] . straight = curve [ 2 ] . straight = curve [ 3 ] . straight = false		1251833	0		=			
ANR	1251945	MemberAccess	curve [ 0 ] . straight		1251833	0					
ANR	1251946	ArrayIndexing	curve [ 0 ]		1251833	0					
ANR	1251947	Identifier	curve		1251833	0					
ANR	1251948	PrimaryExpression	0		1251833	1					
ANR	1251949	Identifier	straight		1251833	1					
ANR	1251950	AssignmentExpression	curve [ 1 ] . straight = curve [ 2 ] . straight = curve [ 3 ] . straight = false		1251833	1		=			
ANR	1251951	MemberAccess	curve [ 1 ] . straight		1251833	0					
ANR	1251952	ArrayIndexing	curve [ 1 ]		1251833	0					
ANR	1251953	Identifier	curve		1251833	0					
ANR	1251954	PrimaryExpression	1		1251833	1					
ANR	1251955	Identifier	straight		1251833	1					
ANR	1251956	AssignmentExpression	curve [ 2 ] . straight = curve [ 3 ] . straight = false		1251833	1		=			
ANR	1251957	MemberAccess	curve [ 2 ] . straight		1251833	0					
ANR	1251958	ArrayIndexing	curve [ 2 ]		1251833	0					
ANR	1251959	Identifier	curve		1251833	0					
ANR	1251960	PrimaryExpression	2		1251833	1					
ANR	1251961	Identifier	straight		1251833	1					
ANR	1251962	AssignmentExpression	curve [ 3 ] . straight = false		1251833	1		=			
ANR	1251963	MemberAccess	curve [ 3 ] . straight		1251833	0					
ANR	1251964	ArrayIndexing	curve [ 3 ]		1251833	0					
ANR	1251965	Identifier	curve		1251833	0					
ANR	1251966	PrimaryExpression	3		1251833	1					
ANR	1251967	Identifier	straight		1251833	1					
ANR	1251968	Identifier	false		1251833	1					
ANR	1251969	ExpressionStatement	"shade_next_init ( & cs , ( const gs_shading_mesh_params_t * ) & psh -> params , pgs )"	548:4:18840:18913	1251833	16	True				
ANR	1251970	CallExpression	"shade_next_init ( & cs , ( const gs_shading_mesh_params_t * ) & psh -> params , pgs )"		1251833	0					
ANR	1251971	Callee	shade_next_init		1251833	0					
ANR	1251972	Identifier	shade_next_init		1251833	0					
ANR	1251973	ArgumentList	& cs		1251833	1					
ANR	1251974	Argument	& cs		1251833	0					
ANR	1251975	UnaryOperationExpression	& cs		1251833	0					
ANR	1251976	UnaryOperator	&		1251833	0					
ANR	1251977	Identifier	cs		1251833	1					
ANR	1251978	Argument	( const gs_shading_mesh_params_t * ) & psh -> params		1251833	1					
ANR	1251979	CastExpression	( const gs_shading_mesh_params_t * ) & psh -> params		1251833	0					
ANR	1251980	CastTarget	const gs_shading_mesh_params_t *		1251833	0					
ANR	1251981	UnaryOperationExpression	& psh -> params		1251833	1					
ANR	1251982	UnaryOperator	&		1251833	0					
ANR	1251983	PtrMemberAccess	psh -> params		1251833	1					
ANR	1251984	Identifier	psh		1251833	0					
ANR	1251985	Identifier	params		1251833	1					
ANR	1251986	Argument	pgs		1251833	2					
ANR	1251987	Identifier	pgs		1251833	0					
ANR	1251988	WhileStatement	"while ( ( code = shade_next_patch ( & cs , psh -> params . BitsPerFlag , curve , interior ) ) == 0 )"		1251833	17					
ANR	1251989	Condition	"( code = shade_next_patch ( & cs , psh -> params . BitsPerFlag , curve , interior ) ) == 0"	549:11:18926:19038	1251833	0	True				
ANR	1251990	EqualityExpression	"( code = shade_next_patch ( & cs , psh -> params . BitsPerFlag , curve , interior ) ) == 0"		1251833	0		==			
ANR	1251991	AssignmentExpression	"code = shade_next_patch ( & cs , psh -> params . BitsPerFlag , curve , interior )"		1251833	0		=			
ANR	1251992	Identifier	code		1251833	0					
ANR	1251993	CallExpression	"shade_next_patch ( & cs , psh -> params . BitsPerFlag , curve , interior )"		1251833	1					
ANR	1251994	Callee	shade_next_patch		1251833	0					
ANR	1251995	Identifier	shade_next_patch		1251833	0					
ANR	1251996	ArgumentList	& cs		1251833	1					
ANR	1251997	Argument	& cs		1251833	0					
ANR	1251998	UnaryOperationExpression	& cs		1251833	0					
ANR	1251999	UnaryOperator	&		1251833	0					
ANR	1252000	Identifier	cs		1251833	1					
ANR	1252001	Argument	psh -> params . BitsPerFlag		1251833	1					
ANR	1252002	MemberAccess	psh -> params . BitsPerFlag		1251833	0					
ANR	1252003	PtrMemberAccess	psh -> params		1251833	0					
ANR	1252004	Identifier	psh		1251833	0					
ANR	1252005	Identifier	params		1251833	1					
ANR	1252006	Identifier	BitsPerFlag		1251833	1					
ANR	1252007	Argument	curve		1251833	2					
ANR	1252008	Identifier	curve		1251833	0					
ANR	1252009	Argument	interior		1251833	3					
ANR	1252010	Identifier	interior		1251833	0					
ANR	1252011	PrimaryExpression	0		1251833	1					
ANR	1252012	CompoundStatement		27:8:1071:1105	1251833	1					
ANR	1252013	IdentifierDeclStatement	gs_fixed_point swapped_interior [ 4 ] ;	555:8:19225:19259	1251833	0	True				
ANR	1252014	IdentifierDecl	swapped_interior [ 4 ]		1251833	0					
ANR	1252015	IdentifierDeclType	gs_fixed_point [ 4 ]		1251833	0					
ANR	1252016	Identifier	swapped_interior		1251833	1					
ANR	1252017	PrimaryExpression	4		1251833	2					
ANR	1252018	ExpressionStatement	swapped_interior [ 0 ] = interior [ 0 ]	557:8:19270:19303	1251833	1	True				
ANR	1252019	AssignmentExpression	swapped_interior [ 0 ] = interior [ 0 ]		1251833	0		=			
ANR	1252020	ArrayIndexing	swapped_interior [ 0 ]		1251833	0					
ANR	1252021	Identifier	swapped_interior		1251833	0					
ANR	1252022	PrimaryExpression	0		1251833	1					
ANR	1252023	ArrayIndexing	interior [ 0 ]		1251833	1					
ANR	1252024	Identifier	interior		1251833	0					
ANR	1252025	PrimaryExpression	0		1251833	1					
ANR	1252026	ExpressionStatement	swapped_interior [ 1 ] = interior [ 3 ]	558:8:19313:19346	1251833	2	True				
ANR	1252027	AssignmentExpression	swapped_interior [ 1 ] = interior [ 3 ]		1251833	0		=			
ANR	1252028	ArrayIndexing	swapped_interior [ 1 ]		1251833	0					
ANR	1252029	Identifier	swapped_interior		1251833	0					
ANR	1252030	PrimaryExpression	1		1251833	1					
ANR	1252031	ArrayIndexing	interior [ 3 ]		1251833	1					
ANR	1252032	Identifier	interior		1251833	0					
ANR	1252033	PrimaryExpression	3		1251833	1					
ANR	1252034	ExpressionStatement	swapped_interior [ 2 ] = interior [ 2 ]	559:8:19356:19389	1251833	3	True				
ANR	1252035	AssignmentExpression	swapped_interior [ 2 ] = interior [ 2 ]		1251833	0		=			
ANR	1252036	ArrayIndexing	swapped_interior [ 2 ]		1251833	0					
ANR	1252037	Identifier	swapped_interior		1251833	0					
ANR	1252038	PrimaryExpression	2		1251833	1					
ANR	1252039	ArrayIndexing	interior [ 2 ]		1251833	1					
ANR	1252040	Identifier	interior		1251833	0					
ANR	1252041	PrimaryExpression	2		1251833	1					
ANR	1252042	ExpressionStatement	swapped_interior [ 3 ] = interior [ 1 ]	560:8:19399:19432	1251833	4	True				
ANR	1252043	AssignmentExpression	swapped_interior [ 3 ] = interior [ 1 ]		1251833	0		=			
ANR	1252044	ArrayIndexing	swapped_interior [ 3 ]		1251833	0					
ANR	1252045	Identifier	swapped_interior		1251833	0					
ANR	1252046	PrimaryExpression	3		1251833	1					
ANR	1252047	ArrayIndexing	interior [ 1 ]		1251833	1					
ANR	1252048	Identifier	interior		1251833	0					
ANR	1252049	PrimaryExpression	1		1251833	1					
ANR	1252050	ExpressionStatement	"code = patch_fill ( & state , curve , swapped_interior , Tpp_transform )"	561:8:19442:19507	1251833	5	True				
ANR	1252051	AssignmentExpression	"code = patch_fill ( & state , curve , swapped_interior , Tpp_transform )"		1251833	0		=			
ANR	1252052	Identifier	code		1251833	0					
ANR	1252053	CallExpression	"patch_fill ( & state , curve , swapped_interior , Tpp_transform )"		1251833	1					
ANR	1252054	Callee	patch_fill		1251833	0					
ANR	1252055	Identifier	patch_fill		1251833	0					
ANR	1252056	ArgumentList	& state		1251833	1					
ANR	1252057	Argument	& state		1251833	0					
ANR	1252058	UnaryOperationExpression	& state		1251833	0					
ANR	1252059	UnaryOperator	&		1251833	0					
ANR	1252060	Identifier	state		1251833	1					
ANR	1252061	Argument	curve		1251833	1					
ANR	1252062	Identifier	curve		1251833	0					
ANR	1252063	Argument	swapped_interior		1251833	2					
ANR	1252064	Identifier	swapped_interior		1251833	0					
ANR	1252065	Argument	Tpp_transform		1251833	3					
ANR	1252066	Identifier	Tpp_transform		1251833	0					
ANR	1252067	IfStatement	if ( code < 0 )		1251833	6					
ANR	1252068	Condition	code < 0	562:12:19521:19528	1251833	0	True				
ANR	1252069	RelationalExpression	code < 0		1251833	0		<			
ANR	1252070	Identifier	code		1251833	0					
ANR	1252071	PrimaryExpression	0		1251833	1					
ANR	1252072	BreakStatement	break ;	563:12:19543:19548	1251833	1	True				
ANR	1252073	IfStatement	if ( term_patch_fill_state ( & state ) )		1251833	18					
ANR	1252074	Condition	term_patch_fill_state ( & state )	565:8:19564:19592	1251833	0	True				
ANR	1252075	CallExpression	term_patch_fill_state ( & state )		1251833	0					
ANR	1252076	Callee	term_patch_fill_state		1251833	0					
ANR	1252077	Identifier	term_patch_fill_state		1251833	0					
ANR	1252078	ArgumentList	& state		1251833	1					
ANR	1252079	Argument	& state		1251833	0					
ANR	1252080	UnaryOperationExpression	& state		1251833	0					
ANR	1252081	UnaryOperator	&		1251833	0					
ANR	1252082	Identifier	state		1251833	1					
ANR	1252083	ExpressionStatement	return_error ( gs_error_unregistered )	566:8:19603:19638	1251833	1	True				
ANR	1252084	CallExpression	return_error ( gs_error_unregistered )		1251833	0					
ANR	1252085	Callee	return_error		1251833	0					
ANR	1252086	Identifier	return_error		1251833	0					
ANR	1252087	ArgumentList	gs_error_unregistered		1251833	1					
ANR	1252088	Argument	gs_error_unregistered		1251833	0					
ANR	1252089	Identifier	gs_error_unregistered		1251833	0					
ANR	1252090	IfStatement	if ( state . icclink != NULL )		1251833	19					
ANR	1252091	Condition	state . icclink != NULL	567:8:19671:19691	1251833	0	True				
ANR	1252092	EqualityExpression	state . icclink != NULL		1251833	0		!=			
ANR	1252093	MemberAccess	state . icclink		1251833	0					
ANR	1252094	Identifier	state		1251833	0					
ANR	1252095	Identifier	icclink		1251833	1					
ANR	1252096	Identifier	NULL		1251833	1					
ANR	1252097	ExpressionStatement	gsicc_release_link ( state . icclink )	567:31:19694:19727	1251833	1	True				
ANR	1252098	CallExpression	gsicc_release_link ( state . icclink )		1251833	0					
ANR	1252099	Callee	gsicc_release_link		1251833	0					
ANR	1252100	Identifier	gsicc_release_link		1251833	0					
ANR	1252101	ArgumentList	state . icclink		1251833	1					
ANR	1252102	Argument	state . icclink		1251833	0					
ANR	1252103	MemberAccess	state . icclink		1251833	0					
ANR	1252104	Identifier	state		1251833	0					
ANR	1252105	Identifier	icclink		1251833	1					
ANR	1252106	ReturnStatement	"return min ( code , 0 ) ;"	568:4:19733:19752	1251833	20	True				
ANR	1252107	CallExpression	"min ( code , 0 )"		1251833	0					
ANR	1252108	Callee	min		1251833	0					
ANR	1252109	Identifier	min		1251833	0					
ANR	1252110	ArgumentList	code		1251833	1					
ANR	1252111	Argument	code		1251833	0					
ANR	1252112	Identifier	code		1251833	0					
ANR	1252113	Argument	0		1251833	1					
ANR	1252114	PrimaryExpression	0		1251833	0					
ANR	1252115	ReturnType	int		1251833	1					
ANR	1252116	Identifier	gs_shading_Tpp_fill_rectangle		1251833	2					
ANR	1252117	ParameterList	"const gs_shading_t * psh0 , const gs_rect * rect , const gs_fixed_rect * rect_clip , gx_device * dev , gs_gstate * pgs"		1251833	3					
ANR	1252118	Parameter	const gs_shading_t * psh0	526:30:17978:18002	1251833	0	True				
ANR	1252119	ParameterType	const gs_shading_t *		1251833	0					
ANR	1252120	Identifier	psh0		1251833	1					
ANR	1252121	Parameter	const gs_rect * rect	526:57:18005:18024	1251833	1	True				
ANR	1252122	ParameterType	const gs_rect *		1251833	0					
ANR	1252123	Identifier	rect		1251833	1					
ANR	1252124	Parameter	const gs_fixed_rect * rect_clip	527:29:18056:18086	1251833	2	True				
ANR	1252125	ParameterType	const gs_fixed_rect *		1251833	0					
ANR	1252126	Identifier	rect_clip		1251833	1					
ANR	1252127	Parameter	gx_device * dev	528:30:18119:18133	1251833	3	True				
ANR	1252128	ParameterType	gx_device *		1251833	0					
ANR	1252129	Identifier	dev		1251833	1					
ANR	1252130	Parameter	gs_gstate * pgs	528:47:18136:18150	1251833	4	True				
ANR	1252131	ParameterType	gs_gstate *		1251833	0					
ANR	1252132	Identifier	pgs		1251833	1					
ANR	1252133	CFGEntryNode	ENTRY		1251833		True				
ANR	1252134	CFGExitNode	EXIT		1251833		True				
ANR	1252135	Symbol	gs_error_unregistered		1251833						
ANR	1252136	Symbol	code		1251833						
ANR	1252137	Symbol	psh -> params		1251833						
ANR	1252138	Symbol	psh		1251833						
ANR	1252139	Symbol	& psh -> params		1251833						
ANR	1252140	Symbol	curve		1251833						
ANR	1252141	Symbol	& state		1251833						
ANR	1252142	Symbol	Tpp_transform		1251833						
ANR	1252143	Symbol	interior		1251833						
ANR	1252144	Symbol	state . icclink		1251833						
ANR	1252145	Symbol	rect		1251833						
ANR	1252146	Symbol	min		1251833						
ANR	1252147	Symbol	dev		1251833						
ANR	1252148	Symbol	curve [ 2 ] . straight		1251833						
ANR	1252149	Symbol	psh -> params . Function		1251833						
ANR	1252150	Symbol	curve [ 3 ] . straight		1251833						
ANR	1252151	Symbol	patch_fill		1251833						
ANR	1252152	Symbol	swapped_interior		1251833						
ANR	1252153	Symbol	state		1251833						
ANR	1252154	Symbol	mesh_init_fill_state		1251833						
ANR	1252155	Symbol	pgs		1251833						
ANR	1252156	Symbol	curve [ 1 ] . straight		1251833						
ANR	1252157	Symbol	curve [ 0 ] . straight		1251833						
ANR	1252158	Symbol	psh -> params . BitsPerFlag		1251833						
ANR	1252159	Symbol	NULL		1251833						
ANR	1252160	Symbol	state . Function		1251833						
ANR	1252161	Symbol	false		1251833						
ANR	1252162	Symbol	init_patch_fill_state		1251833						
ANR	1252163	Symbol	term_patch_fill_state		1251833						
ANR	1252164	Symbol	* psh		1251833						
ANR	1252165	Symbol	cs		1251833						
ANR	1252166	Symbol	* curve		1251833						
ANR	1252167	Symbol	shade_next_patch		1251833						
ANR	1252168	Symbol	& cs		1251833						
ANR	1252169	Symbol	* interior		1251833						
ANR	1252170	Symbol	* swapped_interior		1251833						
ANR	1252171	Symbol	psh0		1251833						
ANR	1252172	Symbol	rect_clip		1251833						
ANR	1252173	ClassDef	<unnamed>	647:8:23475:23587							
ANR	1252174	DeclStmt									
ANR	1252175	Decl									tensor_patch
ANR	1252176	ClassDef	<unnamed>	652:8:23598:23775							
ANR	1252177	DeclStmt									
ANR	1252178	Decl									wedge_type_t
ANR	1252179	Function	wedge_vertex_list_elem_buffer_alloc	657:0:23778:24971							
ANR	1252180	FunctionDef	wedge_vertex_list_elem_buffer_alloc (patch_fill_state_t * pfs)		1252179	0					
ANR	1252181	CompoundStatement		659:0:23843:24971	1252179	0					
ANR	1252182	IdentifierDeclStatement	const int max_level = LAZY_WEDGES_MAX_LEVEL ;	660:4:23849:23892	1252179	0	True				
ANR	1252183	IdentifierDecl	max_level = LAZY_WEDGES_MAX_LEVEL		1252179	0					
ANR	1252184	IdentifierDeclType	const int		1252179	0					
ANR	1252185	Identifier	max_level		1252179	1					
ANR	1252186	AssignmentExpression	max_level = LAZY_WEDGES_MAX_LEVEL		1252179	2		=			
ANR	1252187	Identifier	LAZY_WEDGES_MAX_LEVEL		1252179	0					
ANR	1252188	Identifier	LAZY_WEDGES_MAX_LEVEL		1252179	1					
ANR	1252189	IdentifierDeclStatement	gs_memory_t * memory = pfs -> memory ;	661:4:23898:23931	1252179	1	True				
ANR	1252190	IdentifierDecl	* memory = pfs -> memory		1252179	0					
ANR	1252191	IdentifierDeclType	gs_memory_t *		1252179	0					
ANR	1252192	Identifier	memory		1252179	1					
ANR	1252193	AssignmentExpression	* memory = pfs -> memory		1252179	2		=			
ANR	1252194	Identifier	memory		1252179	0					
ANR	1252195	PtrMemberAccess	pfs -> memory		1252179	1					
ANR	1252196	Identifier	pfs		1252179	0					
ANR	1252197	Identifier	memory		1252179	1					
ANR	1252198	ExpressionStatement	pfs -> wedge_vertex_list_elem_count_max = max_level * ( 1 << max_level ) * 2	673:4:24483:24555	1252179	2	True				
ANR	1252199	AssignmentExpression	pfs -> wedge_vertex_list_elem_count_max = max_level * ( 1 << max_level ) * 2		1252179	0		=			
ANR	1252200	PtrMemberAccess	pfs -> wedge_vertex_list_elem_count_max		1252179	0					
ANR	1252201	Identifier	pfs		1252179	0					
ANR	1252202	Identifier	wedge_vertex_list_elem_count_max		1252179	1					
ANR	1252203	MultiplicativeExpression	max_level * ( 1 << max_level ) * 2		1252179	1		*			
ANR	1252204	Identifier	max_level		1252179	0					
ANR	1252205	MultiplicativeExpression	( 1 << max_level ) * 2		1252179	1		*			
ANR	1252206	ShiftExpression	1 << max_level		1252179	0		<<			
ANR	1252207	PrimaryExpression	1		1252179	0					
ANR	1252208	Identifier	max_level		1252179	1					
ANR	1252209	PrimaryExpression	2		1252179	1					
ANR	1252210	ExpressionStatement	"pfs -> wedge_vertex_list_elem_buffer = ( wedge_vertex_list_elem_t * ) gs_alloc_bytes ( memory , sizeof ( wedge_vertex_list_elem_t ) * pfs -> wedge_vertex_list_elem_count_max , ""alloc_wedge_vertex_list_elem_buffer"" )"	674:4:24561:24785	1252179	3	True				
ANR	1252211	AssignmentExpression	"pfs -> wedge_vertex_list_elem_buffer = ( wedge_vertex_list_elem_t * ) gs_alloc_bytes ( memory , sizeof ( wedge_vertex_list_elem_t ) * pfs -> wedge_vertex_list_elem_count_max , ""alloc_wedge_vertex_list_elem_buffer"" )"		1252179	0		=			
ANR	1252212	PtrMemberAccess	pfs -> wedge_vertex_list_elem_buffer		1252179	0					
ANR	1252213	Identifier	pfs		1252179	0					
ANR	1252214	Identifier	wedge_vertex_list_elem_buffer		1252179	1					
ANR	1252215	CastExpression	"( wedge_vertex_list_elem_t * ) gs_alloc_bytes ( memory , sizeof ( wedge_vertex_list_elem_t ) * pfs -> wedge_vertex_list_elem_count_max , ""alloc_wedge_vertex_list_elem_buffer"" )"		1252179	1					
ANR	1252216	CastTarget	wedge_vertex_list_elem_t *		1252179	0					
ANR	1252217	CallExpression	"gs_alloc_bytes ( memory , sizeof ( wedge_vertex_list_elem_t ) * pfs -> wedge_vertex_list_elem_count_max , ""alloc_wedge_vertex_list_elem_buffer"" )"		1252179	1					
ANR	1252218	Callee	gs_alloc_bytes		1252179	0					
ANR	1252219	Identifier	gs_alloc_bytes		1252179	0					
ANR	1252220	ArgumentList	memory		1252179	1					
ANR	1252221	Argument	memory		1252179	0					
ANR	1252222	Identifier	memory		1252179	0					
ANR	1252223	Argument	sizeof ( wedge_vertex_list_elem_t ) * pfs -> wedge_vertex_list_elem_count_max		1252179	1					
ANR	1252224	MultiplicativeExpression	sizeof ( wedge_vertex_list_elem_t ) * pfs -> wedge_vertex_list_elem_count_max		1252179	0		*			
ANR	1252225	SizeofExpression	sizeof ( wedge_vertex_list_elem_t )		1252179	0					
ANR	1252226	Sizeof	sizeof		1252179	0					
ANR	1252227	SizeofOperand	wedge_vertex_list_elem_t		1252179	1					
ANR	1252228	PtrMemberAccess	pfs -> wedge_vertex_list_elem_count_max		1252179	1					
ANR	1252229	Identifier	pfs		1252179	0					
ANR	1252230	Identifier	wedge_vertex_list_elem_count_max		1252179	1					
ANR	1252231	Argument	"""alloc_wedge_vertex_list_elem_buffer"""		1252179	2					
ANR	1252232	PrimaryExpression	"""alloc_wedge_vertex_list_elem_buffer"""		1252179	0					
ANR	1252233	IfStatement	if ( pfs -> wedge_vertex_list_elem_buffer == NULL )		1252179	4					
ANR	1252234	Condition	pfs -> wedge_vertex_list_elem_buffer == NULL	677:8:24795:24836	1252179	0	True				
ANR	1252235	EqualityExpression	pfs -> wedge_vertex_list_elem_buffer == NULL		1252179	0		==			
ANR	1252236	PtrMemberAccess	pfs -> wedge_vertex_list_elem_buffer		1252179	0					
ANR	1252237	Identifier	pfs		1252179	0					
ANR	1252238	Identifier	wedge_vertex_list_elem_buffer		1252179	1					
ANR	1252239	Identifier	NULL		1252179	1					
ANR	1252240	ExpressionStatement	return_error ( gs_error_VMerror )	678:8:24847:24877	1252179	1	True				
ANR	1252241	CallExpression	return_error ( gs_error_VMerror )		1252179	0					
ANR	1252242	Callee	return_error		1252179	0					
ANR	1252243	Identifier	return_error		1252179	0					
ANR	1252244	ArgumentList	gs_error_VMerror		1252179	1					
ANR	1252245	Argument	gs_error_VMerror		1252179	0					
ANR	1252246	Identifier	gs_error_VMerror		1252179	0					
ANR	1252247	ExpressionStatement	pfs -> free_wedge_vertex = NULL	679:4:24883:24912	1252179	5	True				
ANR	1252248	AssignmentExpression	pfs -> free_wedge_vertex = NULL		1252179	0		=			
ANR	1252249	PtrMemberAccess	pfs -> free_wedge_vertex		1252179	0					
ANR	1252250	Identifier	pfs		1252179	0					
ANR	1252251	Identifier	free_wedge_vertex		1252179	1					
ANR	1252252	Identifier	NULL		1252179	1					
ANR	1252253	ExpressionStatement	pfs -> wedge_vertex_list_elem_count = 0	680:4:24918:24955	1252179	6	True				
ANR	1252254	AssignmentExpression	pfs -> wedge_vertex_list_elem_count = 0		1252179	0		=			
ANR	1252255	PtrMemberAccess	pfs -> wedge_vertex_list_elem_count		1252179	0					
ANR	1252256	Identifier	pfs		1252179	0					
ANR	1252257	Identifier	wedge_vertex_list_elem_count		1252179	1					
ANR	1252258	PrimaryExpression	0		1252179	1					
ANR	1252259	ReturnStatement	return 0 ;	681:4:24961:24969	1252179	7	True				
ANR	1252260	PrimaryExpression	0		1252179	0					
ANR	1252261	ReturnType	int		1252179	1					
ANR	1252262	Identifier	wedge_vertex_list_elem_buffer_alloc		1252179	2					
ANR	1252263	ParameterList	patch_fill_state_t * pfs		1252179	3					
ANR	1252264	Parameter	patch_fill_state_t * pfs	658:36:23818:23840	1252179	0	True				
ANR	1252265	ParameterType	patch_fill_state_t *		1252179	0					
ANR	1252266	Identifier	pfs		1252179	1					
ANR	1252267	CFGEntryNode	ENTRY		1252179		True				
ANR	1252268	CFGExitNode	EXIT		1252179		True				
ANR	1252269	Symbol	gs_alloc_bytes		1252179						
ANR	1252270	Symbol	memory		1252179						
ANR	1252271	Symbol	NULL		1252179						
ANR	1252272	Symbol	pfs -> wedge_vertex_list_elem_buffer		1252179						
ANR	1252273	Symbol	* pfs		1252179						
ANR	1252274	Symbol	LAZY_WEDGES_MAX_LEVEL		1252179						
ANR	1252275	Symbol	pfs -> free_wedge_vertex		1252179						
ANR	1252276	Symbol	pfs -> wedge_vertex_list_elem_count		1252179						
ANR	1252277	Symbol	gs_error_VMerror		1252179						
ANR	1252278	Symbol	pfs -> memory		1252179						
ANR	1252279	Symbol	max_level		1252179						
ANR	1252280	Symbol	pfs -> wedge_vertex_list_elem_count_max		1252179						
ANR	1252281	Symbol	pfs		1252179						
ANR	1252282	Function	wedge_vertex_list_elem_buffer_free	684:0:24974:25281							
ANR	1252283	FunctionDef	wedge_vertex_list_elem_buffer_free (patch_fill_state_t * pfs)		1252282	0					
ANR	1252284	CompoundStatement		686:0:25039:25281	1252282	0					
ANR	1252285	IdentifierDeclStatement	gs_memory_t * memory = pfs -> memory ;	687:4:25045:25078	1252282	0	True				
ANR	1252286	IdentifierDecl	* memory = pfs -> memory		1252282	0					
ANR	1252287	IdentifierDeclType	gs_memory_t *		1252282	0					
ANR	1252288	Identifier	memory		1252282	1					
ANR	1252289	AssignmentExpression	* memory = pfs -> memory		1252282	2		=			
ANR	1252290	Identifier	memory		1252282	0					
ANR	1252291	PtrMemberAccess	pfs -> memory		1252282	1					
ANR	1252292	Identifier	pfs		1252282	0					
ANR	1252293	Identifier	memory		1252282	1					
ANR	1252294	ExpressionStatement	"gs_free_object ( memory , pfs -> wedge_vertex_list_elem_buffer , ""wedge_vertex_list_elem_buffer_free"" )"	689:4:25085:25197	1252282	1	True				
ANR	1252295	CallExpression	"gs_free_object ( memory , pfs -> wedge_vertex_list_elem_buffer , ""wedge_vertex_list_elem_buffer_free"" )"		1252282	0					
ANR	1252296	Callee	gs_free_object		1252282	0					
ANR	1252297	Identifier	gs_free_object		1252282	0					
ANR	1252298	ArgumentList	memory		1252282	1					
ANR	1252299	Argument	memory		1252282	0					
ANR	1252300	Identifier	memory		1252282	0					
ANR	1252301	Argument	pfs -> wedge_vertex_list_elem_buffer		1252282	1					
ANR	1252302	PtrMemberAccess	pfs -> wedge_vertex_list_elem_buffer		1252282	0					
ANR	1252303	Identifier	pfs		1252282	0					
ANR	1252304	Identifier	wedge_vertex_list_elem_buffer		1252282	1					
ANR	1252305	Argument	"""wedge_vertex_list_elem_buffer_free"""		1252282	2					
ANR	1252306	PrimaryExpression	"""wedge_vertex_list_elem_buffer_free"""		1252282	0					
ANR	1252307	ExpressionStatement	pfs -> wedge_vertex_list_elem_buffer = NULL	691:4:25203:25244	1252282	2	True				
ANR	1252308	AssignmentExpression	pfs -> wedge_vertex_list_elem_buffer = NULL		1252282	0		=			
ANR	1252309	PtrMemberAccess	pfs -> wedge_vertex_list_elem_buffer		1252282	0					
ANR	1252310	Identifier	pfs		1252282	0					
ANR	1252311	Identifier	wedge_vertex_list_elem_buffer		1252282	1					
ANR	1252312	Identifier	NULL		1252282	1					
ANR	1252313	ExpressionStatement	pfs -> free_wedge_vertex = NULL	692:4:25250:25279	1252282	3	True				
ANR	1252314	AssignmentExpression	pfs -> free_wedge_vertex = NULL		1252282	0		=			
ANR	1252315	PtrMemberAccess	pfs -> free_wedge_vertex		1252282	0					
ANR	1252316	Identifier	pfs		1252282	0					
ANR	1252317	Identifier	free_wedge_vertex		1252282	1					
ANR	1252318	Identifier	NULL		1252282	1					
ANR	1252319	ReturnType	void		1252282	1					
ANR	1252320	Identifier	wedge_vertex_list_elem_buffer_free		1252282	2					
ANR	1252321	ParameterList	patch_fill_state_t * pfs		1252282	3					
ANR	1252322	Parameter	patch_fill_state_t * pfs	685:35:25014:25036	1252282	0	True				
ANR	1252323	ParameterType	patch_fill_state_t *		1252282	0					
ANR	1252324	Identifier	pfs		1252282	1					
ANR	1252325	CFGEntryNode	ENTRY		1252282		True				
ANR	1252326	CFGExitNode	EXIT		1252282		True				
ANR	1252327	Symbol	pfs -> memory		1252282						
ANR	1252328	Symbol	memory		1252282						
ANR	1252329	Symbol	NULL		1252282						
ANR	1252330	Symbol	pfs -> wedge_vertex_list_elem_buffer		1252282						
ANR	1252331	Symbol	* pfs		1252282						
ANR	1252332	Symbol	pfs		1252282						
ANR	1252333	Symbol	pfs -> free_wedge_vertex		1252282						
ANR	1252334	Function	wedge_vertex_list_elem_reserve	695:0:25284:25718							
ANR	1252335	FunctionDef	wedge_vertex_list_elem_reserve (patch_fill_state_t * pfs)		1252334	0					
ANR	1252336	CompoundStatement		697:0:25381:25718	1252334	0					
ANR	1252337	IdentifierDeclStatement	wedge_vertex_list_elem_t * e = pfs -> free_wedge_vertex ;	698:4:25387:25439	1252334	0	True				
ANR	1252338	IdentifierDecl	* e = pfs -> free_wedge_vertex		1252334	0					
ANR	1252339	IdentifierDeclType	wedge_vertex_list_elem_t *		1252334	0					
ANR	1252340	Identifier	e		1252334	1					
ANR	1252341	AssignmentExpression	* e = pfs -> free_wedge_vertex		1252334	2		=			
ANR	1252342	Identifier	e		1252334	0					
ANR	1252343	PtrMemberAccess	pfs -> free_wedge_vertex		1252334	1					
ANR	1252344	Identifier	pfs		1252334	0					
ANR	1252345	Identifier	free_wedge_vertex		1252334	1					
ANR	1252346	IfStatement	if ( e != NULL )		1252334	1					
ANR	1252347	Condition	e != NULL	700:8:25450:25458	1252334	0	True				
ANR	1252348	EqualityExpression	e != NULL		1252334	0		!=			
ANR	1252349	Identifier	e		1252334	0					
ANR	1252350	Identifier	NULL		1252334	1					
ANR	1252351	CompoundStatement		4:19:79:79	1252334	1					
ANR	1252352	ExpressionStatement	pfs -> free_wedge_vertex = e -> next	701:8:25471:25503	1252334	0	True				
ANR	1252353	AssignmentExpression	pfs -> free_wedge_vertex = e -> next		1252334	0		=			
ANR	1252354	PtrMemberAccess	pfs -> free_wedge_vertex		1252334	0					
ANR	1252355	Identifier	pfs		1252334	0					
ANR	1252356	Identifier	free_wedge_vertex		1252334	1					
ANR	1252357	PtrMemberAccess	e -> next		1252334	1					
ANR	1252358	Identifier	e		1252334	0					
ANR	1252359	Identifier	next		1252334	1					
ANR	1252360	ReturnStatement	return e ;	702:8:25513:25521	1252334	1	True				
ANR	1252361	Identifier	e		1252334	0					
ANR	1252362	IfStatement	if ( pfs -> wedge_vertex_list_elem_count < pfs -> wedge_vertex_list_elem_count_max )		1252334	2					
ANR	1252363	Condition	pfs -> wedge_vertex_list_elem_count < pfs -> wedge_vertex_list_elem_count_max	704:8:25537:25609	1252334	0	True				
ANR	1252364	RelationalExpression	pfs -> wedge_vertex_list_elem_count < pfs -> wedge_vertex_list_elem_count_max		1252334	0		<			
ANR	1252365	PtrMemberAccess	pfs -> wedge_vertex_list_elem_count		1252334	0					
ANR	1252366	Identifier	pfs		1252334	0					
ANR	1252367	Identifier	wedge_vertex_list_elem_count		1252334	1					
ANR	1252368	PtrMemberAccess	pfs -> wedge_vertex_list_elem_count_max		1252334	1					
ANR	1252369	Identifier	pfs		1252334	0					
ANR	1252370	Identifier	wedge_vertex_list_elem_count_max		1252334	1					
ANR	1252371	ReturnStatement	return pfs -> wedge_vertex_list_elem_buffer + pfs -> wedge_vertex_list_elem_count ++ ;	705:8:25620:25699	1252334	1	True				
ANR	1252372	AdditiveExpression	pfs -> wedge_vertex_list_elem_buffer + pfs -> wedge_vertex_list_elem_count ++		1252334	0		+			
ANR	1252373	PtrMemberAccess	pfs -> wedge_vertex_list_elem_buffer		1252334	0					
ANR	1252374	Identifier	pfs		1252334	0					
ANR	1252375	Identifier	wedge_vertex_list_elem_buffer		1252334	1					
ANR	1252376	PostIncDecOperationExpression	pfs -> wedge_vertex_list_elem_count ++		1252334	1					
ANR	1252377	PtrMemberAccess	pfs -> wedge_vertex_list_elem_count		1252334	0					
ANR	1252378	Identifier	pfs		1252334	0					
ANR	1252379	Identifier	wedge_vertex_list_elem_count		1252334	1					
ANR	1252380	IncDec	++		1252334	1					
ANR	1252381	ReturnStatement	return NULL ;	706:4:25705:25716	1252334	3	True				
ANR	1252382	Identifier	NULL		1252334	0					
ANR	1252383	ReturnType	static inline wedge_vertex_list_elem_t *		1252334	1					
ANR	1252384	Identifier	wedge_vertex_list_elem_reserve		1252334	2					
ANR	1252385	ParameterList	patch_fill_state_t * pfs		1252334	3					
ANR	1252386	Parameter	patch_fill_state_t * pfs	696:31:25356:25378	1252334	0	True				
ANR	1252387	ParameterType	patch_fill_state_t *		1252334	0					
ANR	1252388	Identifier	pfs		1252334	1					
ANR	1252389	CFGEntryNode	ENTRY		1252334		True				
ANR	1252390	CFGExitNode	EXIT		1252334		True				
ANR	1252391	Symbol	NULL		1252334						
ANR	1252392	Symbol	pfs -> wedge_vertex_list_elem_buffer		1252334						
ANR	1252393	Symbol	e		1252334						
ANR	1252394	Symbol	* pfs		1252334						
ANR	1252395	Symbol	e -> next		1252334						
ANR	1252396	Symbol	pfs -> wedge_vertex_list_elem_count_max		1252334						
ANR	1252397	Symbol	pfs		1252334						
ANR	1252398	Symbol	pfs -> free_wedge_vertex		1252334						
ANR	1252399	Symbol	* e		1252334						
ANR	1252400	Symbol	pfs -> wedge_vertex_list_elem_count		1252334						
ANR	1252401	Function	wedge_vertex_list_elem_release	709:0:25721:25897							
ANR	1252402	FunctionDef	"wedge_vertex_list_elem_release (patch_fill_state_t * pfs , wedge_vertex_list_elem_t * e)"		1252401	0					
ANR	1252403	CompoundStatement		711:0:25825:25897	1252401	0					
ANR	1252404	ExpressionStatement	e -> next = pfs -> free_wedge_vertex	712:4:25831:25863	1252401	0	True				
ANR	1252405	AssignmentExpression	e -> next = pfs -> free_wedge_vertex		1252401	0		=			
ANR	1252406	PtrMemberAccess	e -> next		1252401	0					
ANR	1252407	Identifier	e		1252401	0					
ANR	1252408	Identifier	next		1252401	1					
ANR	1252409	PtrMemberAccess	pfs -> free_wedge_vertex		1252401	1					
ANR	1252410	Identifier	pfs		1252401	0					
ANR	1252411	Identifier	free_wedge_vertex		1252401	1					
ANR	1252412	ExpressionStatement	pfs -> free_wedge_vertex = e	713:4:25869:25895	1252401	1	True				
ANR	1252413	AssignmentExpression	pfs -> free_wedge_vertex = e		1252401	0		=			
ANR	1252414	PtrMemberAccess	pfs -> free_wedge_vertex		1252401	0					
ANR	1252415	Identifier	pfs		1252401	0					
ANR	1252416	Identifier	free_wedge_vertex		1252401	1					
ANR	1252417	Identifier	e		1252401	1					
ANR	1252418	ReturnType	static inline void		1252401	1					
ANR	1252419	Identifier	wedge_vertex_list_elem_release		1252401	2					
ANR	1252420	ParameterList	"patch_fill_state_t * pfs , wedge_vertex_list_elem_t * e"		1252401	3					
ANR	1252421	Parameter	patch_fill_state_t * pfs	710:31:25771:25793	1252401	0	True				
ANR	1252422	ParameterType	patch_fill_state_t *		1252401	0					
ANR	1252423	Identifier	pfs		1252401	1					
ANR	1252424	Parameter	wedge_vertex_list_elem_t * e	710:56:25796:25822	1252401	1	True				
ANR	1252425	ParameterType	wedge_vertex_list_elem_t *		1252401	0					
ANR	1252426	Identifier	e		1252401	1					
ANR	1252427	CFGEntryNode	ENTRY		1252401		True				
ANR	1252428	CFGExitNode	EXIT		1252401		True				
ANR	1252429	Symbol	e		1252401						
ANR	1252430	Symbol	e -> next		1252401						
ANR	1252431	Symbol	* pfs		1252401						
ANR	1252432	Symbol	pfs		1252401						
ANR	1252433	Symbol	pfs -> free_wedge_vertex		1252401						
ANR	1252434	Symbol	* e		1252401						
ANR	1252435	Function	release_wedge_vertex_list_interval	716:0:25900:26247							
ANR	1252436	FunctionDef	"release_wedge_vertex_list_interval (patch_fill_state_t * pfs , wedge_vertex_list_elem_t * beg , wedge_vertex_list_elem_t * end)"		1252435	0					
ANR	1252437	CompoundStatement		719:0:26045:26247	1252435	0					
ANR	1252438	IdentifierDeclStatement	"wedge_vertex_list_elem_t * e = beg -> next , * ee ;"	720:4:26051:26095	1252435	0	True				
ANR	1252439	IdentifierDecl	* e = beg -> next		1252435	0					
ANR	1252440	IdentifierDeclType	wedge_vertex_list_elem_t *		1252435	0					
ANR	1252441	Identifier	e		1252435	1					
ANR	1252442	AssignmentExpression	* e = beg -> next		1252435	2		=			
ANR	1252443	Identifier	e		1252435	0					
ANR	1252444	PtrMemberAccess	beg -> next		1252435	1					
ANR	1252445	Identifier	beg		1252435	0					
ANR	1252446	Identifier	next		1252435	1					
ANR	1252447	IdentifierDecl	* ee		1252435	1					
ANR	1252448	IdentifierDeclType	wedge_vertex_list_elem_t *		1252435	0					
ANR	1252449	Identifier	ee		1252435	1					
ANR	1252450	ExpressionStatement	beg -> next = end	722:4:26102:26117	1252435	1	True				
ANR	1252451	AssignmentExpression	beg -> next = end		1252435	0		=			
ANR	1252452	PtrMemberAccess	beg -> next		1252435	0					
ANR	1252453	Identifier	beg		1252435	0					
ANR	1252454	Identifier	next		1252435	1					
ANR	1252455	Identifier	end		1252435	1					
ANR	1252456	ExpressionStatement	end -> prev = beg	723:4:26123:26138	1252435	2	True				
ANR	1252457	AssignmentExpression	end -> prev = beg		1252435	0		=			
ANR	1252458	PtrMemberAccess	end -> prev		1252435	0					
ANR	1252459	Identifier	end		1252435	0					
ANR	1252460	Identifier	prev		1252435	1					
ANR	1252461	Identifier	beg		1252435	1					
ANR	1252462	ForStatement	for ( ; e != end ; e = ee )		1252435	3					
ANR	1252463	Condition	e != end	724:11:26151:26158	1252435	0	True				
ANR	1252464	EqualityExpression	e != end		1252435	0		!=			
ANR	1252465	Identifier	e		1252435	0					
ANR	1252466	Identifier	end		1252435	1					
ANR	1252467	AssignmentExpression	e = ee	724:21:26161:26166	1252435	1	True	=			
ANR	1252468	Identifier	e		1252435	0					
ANR	1252469	Identifier	ee		1252435	1					
ANR	1252470	CompoundStatement		6:29:123:123	1252435	2					
ANR	1252471	ExpressionStatement	ee = e -> next	725:8:26179:26191	1252435	0	True				
ANR	1252472	AssignmentExpression	ee = e -> next		1252435	0		=			
ANR	1252473	Identifier	ee		1252435	0					
ANR	1252474	PtrMemberAccess	e -> next		1252435	1					
ANR	1252475	Identifier	e		1252435	0					
ANR	1252476	Identifier	next		1252435	1					
ANR	1252477	ExpressionStatement	"wedge_vertex_list_elem_release ( pfs , e )"	726:8:26201:26239	1252435	1	True				
ANR	1252478	CallExpression	"wedge_vertex_list_elem_release ( pfs , e )"		1252435	0					
ANR	1252479	Callee	wedge_vertex_list_elem_release		1252435	0					
ANR	1252480	Identifier	wedge_vertex_list_elem_release		1252435	0					
ANR	1252481	ArgumentList	pfs		1252435	1					
ANR	1252482	Argument	pfs		1252435	0					
ANR	1252483	Identifier	pfs		1252435	0					
ANR	1252484	Argument	e		1252435	1					
ANR	1252485	Identifier	e		1252435	0					
ANR	1252486	ReturnType	static inline void		1252435	1					
ANR	1252487	Identifier	release_wedge_vertex_list_interval		1252435	2					
ANR	1252488	ParameterList	"patch_fill_state_t * pfs , wedge_vertex_list_elem_t * beg , wedge_vertex_list_elem_t * end"		1252435	3					
ANR	1252489	Parameter	patch_fill_state_t * pfs	717:35:25954:25976	1252435	0	True				
ANR	1252490	ParameterType	patch_fill_state_t *		1252435	0					
ANR	1252491	Identifier	pfs		1252435	1					
ANR	1252492	Parameter	wedge_vertex_list_elem_t * beg	718:4:25983:26011	1252435	1	True				
ANR	1252493	ParameterType	wedge_vertex_list_elem_t *		1252435	0					
ANR	1252494	Identifier	beg		1252435	1					
ANR	1252495	Parameter	wedge_vertex_list_elem_t * end	718:35:26014:26042	1252435	2	True				
ANR	1252496	ParameterType	wedge_vertex_list_elem_t *		1252435	0					
ANR	1252497	Identifier	end		1252435	1					
ANR	1252498	CFGEntryNode	ENTRY		1252435		True				
ANR	1252499	CFGExitNode	EXIT		1252435		True				
ANR	1252500	Symbol	ee		1252435						
ANR	1252501	Symbol	* beg		1252435						
ANR	1252502	Symbol	beg		1252435						
ANR	1252503	Symbol	e		1252435						
ANR	1252504	Symbol	e -> next		1252435						
ANR	1252505	Symbol	beg -> next		1252435						
ANR	1252506	Symbol	end		1252435						
ANR	1252507	Symbol	* end		1252435						
ANR	1252508	Symbol	end -> prev		1252435						
ANR	1252509	Symbol	pfs		1252435						
ANR	1252510	Symbol	* e		1252435						
ANR	1252511	Function	release_wedge_vertex_list	730:0:26250:26921							
ANR	1252512	FunctionDef	"release_wedge_vertex_list (patch_fill_state_t * pfs , wedge_vertex_list_t * ll , int n)"		1252511	0					
ANR	1252513	CompoundStatement		732:0:26351:26921	1252511	0					
ANR	1252514	IdentifierDeclStatement	int i ;	733:4:26357:26362	1252511	0	True				
ANR	1252515	IdentifierDecl	i		1252511	0					
ANR	1252516	IdentifierDeclType	int		1252511	0					
ANR	1252517	Identifier	i		1252511	1					
ANR	1252518	ForStatement	for ( i = 0 ; i < n ; i ++ )		1252511	1					
ANR	1252519	ForInit	i = 0 ;	735:9:26374:26379	1252511	0	True				
ANR	1252520	AssignmentExpression	i = 0		1252511	0		=			
ANR	1252521	Identifier	i		1252511	0					
ANR	1252522	PrimaryExpression	0		1252511	1					
ANR	1252523	Condition	i < n	735:16:26381:26385	1252511	1	True				
ANR	1252524	RelationalExpression	i < n		1252511	0		<			
ANR	1252525	Identifier	i		1252511	0					
ANR	1252526	Identifier	n		1252511	1					
ANR	1252527	PostIncDecOperationExpression	i ++	735:23:26388:26390	1252511	2	True				
ANR	1252528	Identifier	i		1252511	0					
ANR	1252529	IncDec	++		1252511	1					
ANR	1252530	CompoundStatement		5:8:51:82	1252511	3					
ANR	1252531	IdentifierDeclStatement	wedge_vertex_list_t * l = ll + i ;	736:8:26403:26434	1252511	0	True				
ANR	1252532	IdentifierDecl	* l = ll + i		1252511	0					
ANR	1252533	IdentifierDeclType	wedge_vertex_list_t *		1252511	0					
ANR	1252534	Identifier	l		1252511	1					
ANR	1252535	AssignmentExpression	* l = ll + i		1252511	2		=			
ANR	1252536	Identifier	l		1252511	0					
ANR	1252537	AdditiveExpression	ll + i		1252511	1		+			
ANR	1252538	Identifier	ll		1252511	0					
ANR	1252539	Identifier	i		1252511	1					
ANR	1252540	IfStatement	if ( l -> beg != NULL )		1252511	1					
ANR	1252541	Condition	l -> beg != NULL	738:12:26449:26462	1252511	0	True				
ANR	1252542	EqualityExpression	l -> beg != NULL		1252511	0		!=			
ANR	1252543	PtrMemberAccess	l -> beg		1252511	0					
ANR	1252544	Identifier	l		1252511	0					
ANR	1252545	Identifier	beg		1252511	1					
ANR	1252546	Identifier	NULL		1252511	1					
ANR	1252547	CompoundStatement		7:28:113:113	1252511	1					
ANR	1252548	IfStatement	if ( l -> end == NULL )		1252511	0					
ANR	1252549	Condition	l -> end == NULL	739:16:26483:26496	1252511	0	True				
ANR	1252550	EqualityExpression	l -> end == NULL		1252511	0		==			
ANR	1252551	PtrMemberAccess	l -> end		1252511	0					
ANR	1252552	Identifier	l		1252511	0					
ANR	1252553	Identifier	end		1252511	1					
ANR	1252554	Identifier	NULL		1252511	1					
ANR	1252555	ExpressionStatement	return_error ( gs_error_unregistered )	740:16:26515:26550	1252511	1	True				
ANR	1252556	CallExpression	return_error ( gs_error_unregistered )		1252511	0					
ANR	1252557	Callee	return_error		1252511	0					
ANR	1252558	Identifier	return_error		1252511	0					
ANR	1252559	ArgumentList	gs_error_unregistered		1252511	1					
ANR	1252560	Argument	gs_error_unregistered		1252511	0					
ANR	1252561	Identifier	gs_error_unregistered		1252511	0					
ANR	1252562	ExpressionStatement	"release_wedge_vertex_list_interval ( pfs , l -> beg , l -> end )"	741:12:26587:26642	1252511	1	True				
ANR	1252563	CallExpression	"release_wedge_vertex_list_interval ( pfs , l -> beg , l -> end )"		1252511	0					
ANR	1252564	Callee	release_wedge_vertex_list_interval		1252511	0					
ANR	1252565	Identifier	release_wedge_vertex_list_interval		1252511	0					
ANR	1252566	ArgumentList	pfs		1252511	1					
ANR	1252567	Argument	pfs		1252511	0					
ANR	1252568	Identifier	pfs		1252511	0					
ANR	1252569	Argument	l -> beg		1252511	1					
ANR	1252570	PtrMemberAccess	l -> beg		1252511	0					
ANR	1252571	Identifier	l		1252511	0					
ANR	1252572	Identifier	beg		1252511	1					
ANR	1252573	Argument	l -> end		1252511	2					
ANR	1252574	PtrMemberAccess	l -> end		1252511	0					
ANR	1252575	Identifier	l		1252511	0					
ANR	1252576	Identifier	end		1252511	1					
ANR	1252577	ExpressionStatement	"wedge_vertex_list_elem_release ( pfs , l -> beg )"	742:12:26656:26699	1252511	2	True				
ANR	1252578	CallExpression	"wedge_vertex_list_elem_release ( pfs , l -> beg )"		1252511	0					
ANR	1252579	Callee	wedge_vertex_list_elem_release		1252511	0					
ANR	1252580	Identifier	wedge_vertex_list_elem_release		1252511	0					
ANR	1252581	ArgumentList	pfs		1252511	1					
ANR	1252582	Argument	pfs		1252511	0					
ANR	1252583	Identifier	pfs		1252511	0					
ANR	1252584	Argument	l -> beg		1252511	1					
ANR	1252585	PtrMemberAccess	l -> beg		1252511	0					
ANR	1252586	Identifier	l		1252511	0					
ANR	1252587	Identifier	beg		1252511	1					
ANR	1252588	ExpressionStatement	"wedge_vertex_list_elem_release ( pfs , l -> end )"	743:12:26713:26756	1252511	3	True				
ANR	1252589	CallExpression	"wedge_vertex_list_elem_release ( pfs , l -> end )"		1252511	0					
ANR	1252590	Callee	wedge_vertex_list_elem_release		1252511	0					
ANR	1252591	Identifier	wedge_vertex_list_elem_release		1252511	0					
ANR	1252592	ArgumentList	pfs		1252511	1					
ANR	1252593	Argument	pfs		1252511	0					
ANR	1252594	Identifier	pfs		1252511	0					
ANR	1252595	Argument	l -> end		1252511	1					
ANR	1252596	PtrMemberAccess	l -> end		1252511	0					
ANR	1252597	Identifier	l		1252511	0					
ANR	1252598	Identifier	end		1252511	1					
ANR	1252599	ExpressionStatement	l -> beg = l -> end = NULL	744:12:26770:26792	1252511	4	True				
ANR	1252600	AssignmentExpression	l -> beg = l -> end = NULL		1252511	0		=			
ANR	1252601	PtrMemberAccess	l -> beg		1252511	0					
ANR	1252602	Identifier	l		1252511	0					
ANR	1252603	Identifier	beg		1252511	1					
ANR	1252604	AssignmentExpression	l -> end = NULL		1252511	1		=			
ANR	1252605	PtrMemberAccess	l -> end		1252511	0					
ANR	1252606	Identifier	l		1252511	0					
ANR	1252607	Identifier	end		1252511	1					
ANR	1252608	Identifier	NULL		1252511	1					
ANR	1252609	ElseStatement	else		1252511	0					
ANR	1252610	IfStatement	if ( l -> end != NULL )		1252511	0					
ANR	1252611	Condition	l -> end != NULL	745:19:26813:26826	1252511	0	True				
ANR	1252612	EqualityExpression	l -> end != NULL		1252511	0		!=			
ANR	1252613	PtrMemberAccess	l -> end		1252511	0					
ANR	1252614	Identifier	l		1252511	0					
ANR	1252615	Identifier	end		1252511	1					
ANR	1252616	Identifier	NULL		1252511	1					
ANR	1252617	ExpressionStatement	return_error ( gs_error_unregistered )	746:12:26841:26876	1252511	1	True				
ANR	1252618	CallExpression	return_error ( gs_error_unregistered )		1252511	0					
ANR	1252619	Callee	return_error		1252511	0					
ANR	1252620	Identifier	return_error		1252511	0					
ANR	1252621	ArgumentList	gs_error_unregistered		1252511	1					
ANR	1252622	Argument	gs_error_unregistered		1252511	0					
ANR	1252623	Identifier	gs_error_unregistered		1252511	0					
ANR	1252624	ReturnStatement	return 0 ;	748:4:26911:26919	1252511	2	True				
ANR	1252625	PrimaryExpression	0		1252511	0					
ANR	1252626	ReturnType	static inline int		1252511	1					
ANR	1252627	Identifier	release_wedge_vertex_list		1252511	2					
ANR	1252628	ParameterList	"patch_fill_state_t * pfs , wedge_vertex_list_t * ll , int n"		1252511	3					
ANR	1252629	Parameter	patch_fill_state_t * pfs	731:26:26294:26316	1252511	0	True				
ANR	1252630	ParameterType	patch_fill_state_t *		1252511	0					
ANR	1252631	Identifier	pfs		1252511	1					
ANR	1252632	Parameter	wedge_vertex_list_t * ll	731:51:26319:26341	1252511	1	True				
ANR	1252633	ParameterType	wedge_vertex_list_t *		1252511	0					
ANR	1252634	Identifier	ll		1252511	1					
ANR	1252635	Parameter	int n	731:76:26344:26348	1252511	2	True				
ANR	1252636	ParameterType	int		1252511	0					
ANR	1252637	Identifier	n		1252511	1					
ANR	1252638	CFGEntryNode	ENTRY		1252511		True				
ANR	1252639	CFGExitNode	EXIT		1252511		True				
ANR	1252640	Symbol	ll		1252511						
ANR	1252641	Symbol	gs_error_unregistered		1252511						
ANR	1252642	Symbol	NULL		1252511						
ANR	1252643	Symbol	l -> beg		1252511						
ANR	1252644	Symbol	* l		1252511						
ANR	1252645	Symbol	i		1252511						
ANR	1252646	Symbol	l -> end		1252511						
ANR	1252647	Symbol	pfs		1252511						
ANR	1252648	Symbol	l		1252511						
ANR	1252649	Symbol	n		1252511						
ANR	1252650	Function	wedge_vertex_list_find	751:0:26924:27305							
ANR	1252651	FunctionDef	"wedge_vertex_list_find (wedge_vertex_list_elem_t * beg , const wedge_vertex_list_elem_t * end , int level)"		1252650	0					
ANR	1252652	CompoundStatement		754:0:27079:27305	1252650	0					
ANR	1252653	IdentifierDeclStatement	wedge_vertex_list_elem_t * e = beg ;	755:4:27085:27118	1252650	0	True				
ANR	1252654	IdentifierDecl	* e = beg		1252650	0					
ANR	1252655	IdentifierDeclType	wedge_vertex_list_elem_t *		1252650	0					
ANR	1252656	Identifier	e		1252650	1					
ANR	1252657	AssignmentExpression	* e = beg		1252650	2		=			
ANR	1252658	Identifier	beg		1252650	0					
ANR	1252659	Identifier	beg		1252650	1					
ANR	1252660	IfStatement	if ( beg == NULL || end == NULL )		1252650	1					
ANR	1252661	Condition	beg == NULL || end == NULL	757:8:27129:27154	1252650	0	True				
ANR	1252662	OrExpression	beg == NULL || end == NULL		1252650	0		||			
ANR	1252663	EqualityExpression	beg == NULL		1252650	0		==			
ANR	1252664	Identifier	beg		1252650	0					
ANR	1252665	Identifier	NULL		1252650	1					
ANR	1252666	EqualityExpression	end == NULL		1252650	1		==			
ANR	1252667	Identifier	end		1252650	0					
ANR	1252668	Identifier	NULL		1252650	1					
ANR	1252669	ReturnStatement	return NULL ;	758:8:27165:27176	1252650	1	True				
ANR	1252670	Identifier	NULL		1252650	0					
ANR	1252671	ForStatement	for ( ; e != end ; e = e -> next )		1252650	2					
ANR	1252672	Condition	e != end	759:11:27212:27219	1252650	0	True				
ANR	1252673	EqualityExpression	e != end		1252650	0		!=			
ANR	1252674	Identifier	e		1252650	0					
ANR	1252675	Identifier	end		1252650	1					
ANR	1252676	AssignmentExpression	e = e -> next	759:21:27222:27232	1252650	1	True	=			
ANR	1252677	Identifier	e		1252650	0					
ANR	1252678	PtrMemberAccess	e -> next		1252650	1					
ANR	1252679	Identifier	e		1252650	0					
ANR	1252680	Identifier	next		1252650	1					
ANR	1252681	IfStatement	if ( e -> level == level )		1252650	2					
ANR	1252682	Condition	e -> level == level	760:12:27247:27263	1252650	0	True				
ANR	1252683	EqualityExpression	e -> level == level		1252650	0		==			
ANR	1252684	PtrMemberAccess	e -> level		1252650	0					
ANR	1252685	Identifier	e		1252650	0					
ANR	1252686	Identifier	level		1252650	1					
ANR	1252687	Identifier	level		1252650	1					
ANR	1252688	ReturnStatement	return e ;	761:12:27278:27286	1252650	1	True				
ANR	1252689	Identifier	e		1252650	0					
ANR	1252690	ReturnStatement	return NULL ;	762:4:27292:27303	1252650	3	True				
ANR	1252691	Identifier	NULL		1252650	0					
ANR	1252692	ReturnType	static inline wedge_vertex_list_elem_t *		1252650	1					
ANR	1252693	Identifier	wedge_vertex_list_find		1252650	2					
ANR	1252694	ParameterList	"wedge_vertex_list_elem_t * beg , const wedge_vertex_list_elem_t * end , int level"		1252650	3					
ANR	1252695	Parameter	wedge_vertex_list_elem_t * beg	752:23:26988:27016	1252650	0	True				
ANR	1252696	ParameterType	wedge_vertex_list_elem_t *		1252650	0					
ANR	1252697	Identifier	beg		1252650	1					
ANR	1252698	Parameter	const wedge_vertex_list_elem_t * end	752:54:27019:27053	1252650	1	True				
ANR	1252699	ParameterType	const wedge_vertex_list_elem_t *		1252650	0					
ANR	1252700	Identifier	end		1252650	1					
ANR	1252701	Parameter	int level	753:12:27068:27076	1252650	2	True				
ANR	1252702	ParameterType	int		1252650	0					
ANR	1252703	Identifier	level		1252650	1					
ANR	1252704	CFGEntryNode	ENTRY		1252650		True				
ANR	1252705	CFGExitNode	EXIT		1252650		True				
ANR	1252706	Symbol	NULL		1252650						
ANR	1252707	Symbol	beg		1252650						
ANR	1252708	Symbol	level		1252650						
ANR	1252709	Symbol	e		1252650						
ANR	1252710	Symbol	e -> next		1252650						
ANR	1252711	Symbol	end		1252650						
ANR	1252712	Symbol	e -> level		1252650						
ANR	1252713	Symbol	* e		1252650						
ANR	1252714	Function	init_wedge_vertex_list	765:0:27308:27417							
ANR	1252715	FunctionDef	"init_wedge_vertex_list (wedge_vertex_list_t * l , int n)"		1252714	0					
ANR	1252716	CompoundStatement		767:0:27381:27417	1252714	0					
ANR	1252717	ExpressionStatement	"memset ( l , 0 , sizeof ( * l ) * n )"	768:4:27387:27415	1252714	0	True				
ANR	1252718	CallExpression	"memset ( l , 0 , sizeof ( * l ) * n )"		1252714	0					
ANR	1252719	Callee	memset		1252714	0					
ANR	1252720	Identifier	memset		1252714	0					
ANR	1252721	ArgumentList	l		1252714	1					
ANR	1252722	Argument	l		1252714	0					
ANR	1252723	Identifier	l		1252714	0					
ANR	1252724	Argument	0		1252714	1					
ANR	1252725	PrimaryExpression	0		1252714	0					
ANR	1252726	Argument	sizeof ( * l ) * n		1252714	2					
ANR	1252727	MultiplicativeExpression	sizeof ( * l ) * n		1252714	0		*			
ANR	1252728	SizeofExpression	sizeof ( * l )		1252714	0					
ANR	1252729	Sizeof	sizeof		1252714	0					
ANR	1252730	UnaryOperationExpression	* l		1252714	1					
ANR	1252731	UnaryOperator	*		1252714	0					
ANR	1252732	Identifier	l		1252714	1					
ANR	1252733	Identifier	n		1252714	1					
ANR	1252734	ReturnType	static inline void		1252714	1					
ANR	1252735	Identifier	init_wedge_vertex_list		1252714	2					
ANR	1252736	ParameterList	"wedge_vertex_list_t * l , int n"		1252714	3					
ANR	1252737	Parameter	wedge_vertex_list_t * l	766:23:27350:27371	1252714	0	True				
ANR	1252738	ParameterType	wedge_vertex_list_t *		1252714	0					
ANR	1252739	Identifier	l		1252714	1					
ANR	1252740	Parameter	int n	766:47:27374:27378	1252714	1	True				
ANR	1252741	ParameterType	int		1252714	0					
ANR	1252742	Identifier	n		1252714	1					
ANR	1252743	CFGEntryNode	ENTRY		1252714		True				
ANR	1252744	CFGExitNode	EXIT		1252714		True				
ANR	1252745	Symbol	* l		1252714						
ANR	1252746	Symbol	l		1252714						
ANR	1252747	Symbol	n		1252714						
ANR	1252748	Function	curve_samples	776:0:27673:29011							
ANR	1252749	FunctionDef	"curve_samples (patch_fill_state_t * pfs , const gs_fixed_point * pole , int pole_step , fixed fixed_flat)"		1252748	0					
ANR	1252750	CompoundStatement		779:0:27807:29011	1252748	0					
ANR	1252751	IdentifierDeclStatement	curve_segment s ;	780:4:27813:27828	1252748	0	True				
ANR	1252752	IdentifierDecl	s		1252748	0					
ANR	1252753	IdentifierDeclType	curve_segment		1252748	0					
ANR	1252754	Identifier	s		1252748	1					
ANR	1252755	IdentifierDeclStatement	int k ;	781:4:27834:27839	1252748	1	True				
ANR	1252756	IdentifierDecl	k		1252748	0					
ANR	1252757	IdentifierDeclType	int		1252748	0					
ANR	1252758	Identifier	k		1252748	1					
ANR	1252759	ExpressionStatement	s . p1 . x = pole [ pole_step ] . x	783:4:27846:27872	1252748	2	True				
ANR	1252760	AssignmentExpression	s . p1 . x = pole [ pole_step ] . x		1252748	0		=			
ANR	1252761	MemberAccess	s . p1 . x		1252748	0					
ANR	1252762	MemberAccess	s . p1		1252748	0					
ANR	1252763	Identifier	s		1252748	0					
ANR	1252764	Identifier	p1		1252748	1					
ANR	1252765	Identifier	x		1252748	1					
ANR	1252766	MemberAccess	pole [ pole_step ] . x		1252748	1					
ANR	1252767	ArrayIndexing	pole [ pole_step ]		1252748	0					
ANR	1252768	Identifier	pole		1252748	0					
ANR	1252769	Identifier	pole_step		1252748	1					
ANR	1252770	Identifier	x		1252748	1					
ANR	1252771	ExpressionStatement	s . p1 . y = pole [ pole_step ] . y	784:4:27878:27904	1252748	3	True				
ANR	1252772	AssignmentExpression	s . p1 . y = pole [ pole_step ] . y		1252748	0		=			
ANR	1252773	MemberAccess	s . p1 . y		1252748	0					
ANR	1252774	MemberAccess	s . p1		1252748	0					
ANR	1252775	Identifier	s		1252748	0					
ANR	1252776	Identifier	p1		1252748	1					
ANR	1252777	Identifier	y		1252748	1					
ANR	1252778	MemberAccess	pole [ pole_step ] . y		1252748	1					
ANR	1252779	ArrayIndexing	pole [ pole_step ]		1252748	0					
ANR	1252780	Identifier	pole		1252748	0					
ANR	1252781	Identifier	pole_step		1252748	1					
ANR	1252782	Identifier	y		1252748	1					
ANR	1252783	ExpressionStatement	s . p2 . x = pole [ pole_step * 2 ] . x	785:4:27910:27940	1252748	4	True				
ANR	1252784	AssignmentExpression	s . p2 . x = pole [ pole_step * 2 ] . x		1252748	0		=			
ANR	1252785	MemberAccess	s . p2 . x		1252748	0					
ANR	1252786	MemberAccess	s . p2		1252748	0					
ANR	1252787	Identifier	s		1252748	0					
ANR	1252788	Identifier	p2		1252748	1					
ANR	1252789	Identifier	x		1252748	1					
ANR	1252790	MemberAccess	pole [ pole_step * 2 ] . x		1252748	1					
ANR	1252791	ArrayIndexing	pole [ pole_step * 2 ]		1252748	0					
ANR	1252792	Identifier	pole		1252748	0					
ANR	1252793	MultiplicativeExpression	pole_step * 2		1252748	1		*			
ANR	1252794	Identifier	pole_step		1252748	0					
ANR	1252795	PrimaryExpression	2		1252748	1					
ANR	1252796	Identifier	x		1252748	1					
ANR	1252797	ExpressionStatement	s . p2 . y = pole [ pole_step * 2 ] . y	786:4:27946:27976	1252748	5	True				
ANR	1252798	AssignmentExpression	s . p2 . y = pole [ pole_step * 2 ] . y		1252748	0		=			
ANR	1252799	MemberAccess	s . p2 . y		1252748	0					
ANR	1252800	MemberAccess	s . p2		1252748	0					
ANR	1252801	Identifier	s		1252748	0					
ANR	1252802	Identifier	p2		1252748	1					
ANR	1252803	Identifier	y		1252748	1					
ANR	1252804	MemberAccess	pole [ pole_step * 2 ] . y		1252748	1					
ANR	1252805	ArrayIndexing	pole [ pole_step * 2 ]		1252748	0					
ANR	1252806	Identifier	pole		1252748	0					
ANR	1252807	MultiplicativeExpression	pole_step * 2		1252748	1		*			
ANR	1252808	Identifier	pole_step		1252748	0					
ANR	1252809	PrimaryExpression	2		1252748	1					
ANR	1252810	Identifier	y		1252748	1					
ANR	1252811	ExpressionStatement	s . pt . x = pole [ pole_step * 3 ] . x	787:4:27982:28012	1252748	6	True				
ANR	1252812	AssignmentExpression	s . pt . x = pole [ pole_step * 3 ] . x		1252748	0		=			
ANR	1252813	MemberAccess	s . pt . x		1252748	0					
ANR	1252814	MemberAccess	s . pt		1252748	0					
ANR	1252815	Identifier	s		1252748	0					
ANR	1252816	Identifier	pt		1252748	1					
ANR	1252817	Identifier	x		1252748	1					
ANR	1252818	MemberAccess	pole [ pole_step * 3 ] . x		1252748	1					
ANR	1252819	ArrayIndexing	pole [ pole_step * 3 ]		1252748	0					
ANR	1252820	Identifier	pole		1252748	0					
ANR	1252821	MultiplicativeExpression	pole_step * 3		1252748	1		*			
ANR	1252822	Identifier	pole_step		1252748	0					
ANR	1252823	PrimaryExpression	3		1252748	1					
ANR	1252824	Identifier	x		1252748	1					
ANR	1252825	ExpressionStatement	s . pt . y = pole [ pole_step * 3 ] . y	788:4:28018:28048	1252748	7	True				
ANR	1252826	AssignmentExpression	s . pt . y = pole [ pole_step * 3 ] . y		1252748	0		=			
ANR	1252827	MemberAccess	s . pt . y		1252748	0					
ANR	1252828	MemberAccess	s . pt		1252748	0					
ANR	1252829	Identifier	s		1252748	0					
ANR	1252830	Identifier	pt		1252748	1					
ANR	1252831	Identifier	y		1252748	1					
ANR	1252832	MemberAccess	pole [ pole_step * 3 ] . y		1252748	1					
ANR	1252833	ArrayIndexing	pole [ pole_step * 3 ]		1252748	0					
ANR	1252834	Identifier	pole		1252748	0					
ANR	1252835	MultiplicativeExpression	pole_step * 3		1252748	1		*			
ANR	1252836	Identifier	pole_step		1252748	0					
ANR	1252837	PrimaryExpression	3		1252748	1					
ANR	1252838	Identifier	y		1252748	1					
ANR	1252839	ExpressionStatement	"k = gx_curve_log2_samples ( pole [ 0 ] . x , pole [ 0 ] . y , & s , fixed_flat )"	789:4:28054:28117	1252748	8	True				
ANR	1252840	AssignmentExpression	"k = gx_curve_log2_samples ( pole [ 0 ] . x , pole [ 0 ] . y , & s , fixed_flat )"		1252748	0		=			
ANR	1252841	Identifier	k		1252748	0					
ANR	1252842	CallExpression	"gx_curve_log2_samples ( pole [ 0 ] . x , pole [ 0 ] . y , & s , fixed_flat )"		1252748	1					
ANR	1252843	Callee	gx_curve_log2_samples		1252748	0					
ANR	1252844	Identifier	gx_curve_log2_samples		1252748	0					
ANR	1252845	ArgumentList	pole [ 0 ] . x		1252748	1					
ANR	1252846	Argument	pole [ 0 ] . x		1252748	0					
ANR	1252847	MemberAccess	pole [ 0 ] . x		1252748	0					
ANR	1252848	ArrayIndexing	pole [ 0 ]		1252748	0					
ANR	1252849	Identifier	pole		1252748	0					
ANR	1252850	PrimaryExpression	0		1252748	1					
ANR	1252851	Identifier	x		1252748	1					
ANR	1252852	Argument	pole [ 0 ] . y		1252748	1					
ANR	1252853	MemberAccess	pole [ 0 ] . y		1252748	0					
ANR	1252854	ArrayIndexing	pole [ 0 ]		1252748	0					
ANR	1252855	Identifier	pole		1252748	0					
ANR	1252856	PrimaryExpression	0		1252748	1					
ANR	1252857	Identifier	y		1252748	1					
ANR	1252858	Argument	& s		1252748	2					
ANR	1252859	UnaryOperationExpression	& s		1252748	0					
ANR	1252860	UnaryOperator	&		1252748	0					
ANR	1252861	Identifier	s		1252748	1					
ANR	1252862	Argument	fixed_flat		1252748	3					
ANR	1252863	Identifier	fixed_flat		1252748	0					
ANR	1252864	CompoundStatement		25:11:1020:1162	1252748	9					
ANR	1252865	Statement	if	791:8:28133:28134	1252748	0	True				
ANR	1252866	Statement	LAZY_WEDGES	791:11:28136:28146	1252748	1	True				
ANR	1252867	Statement	||	791:23:28148:28149	1252748	2	True				
ANR	1252868	IdentifierDeclStatement	QUADRANGLES int k1 ;	791:26:28151:28181	1252748	3	True				
ANR	1252869	IdentifierDecl	k1		1252748	0					
ANR	1252870	IdentifierDeclType	QUADRANGLES int		1252748	0					
ANR	1252871	Identifier	k1		1252748	1					
ANR	1252872	IdentifierDeclStatement	fixed L = any_abs ( pole [ pole_step * 1 ] . x - pole [ pole_step * 0 ] . x ) + any_abs ( pole [ pole_step * 1 ] . y - pole [ pole_step * 0 ] . y ) + any_abs ( pole [ pole_step * 2 ] . x - pole [ pole_step * 1 ] . x ) + any_abs ( pole [ pole_step * 2 ] . y - pole [ pole_step * 1 ] . y ) + any_abs ( pole [ pole_step * 3 ] . x - pole [ pole_step * 2 ] . x ) + any_abs ( pole [ pole_step * 3 ] . y - pole [ pole_step * 2 ] . y ) ;	793:12:28195:28588	1252748	4	True				
ANR	1252873	IdentifierDecl	L = any_abs ( pole [ pole_step * 1 ] . x - pole [ pole_step * 0 ] . x ) + any_abs ( pole [ pole_step * 1 ] . y - pole [ pole_step * 0 ] . y ) + any_abs ( pole [ pole_step * 2 ] . x - pole [ pole_step * 1 ] . x ) + any_abs ( pole [ pole_step * 2 ] . y - pole [ pole_step * 1 ] . y ) + any_abs ( pole [ pole_step * 3 ] . x - pole [ pole_step * 2 ] . x ) + any_abs ( pole [ pole_step * 3 ] . y - pole [ pole_step * 2 ] . y )		1252748	0					
ANR	1252874	IdentifierDeclType	fixed		1252748	0					
ANR	1252875	Identifier	L		1252748	1					
ANR	1252876	AssignmentExpression	L = any_abs ( pole [ pole_step * 1 ] . x - pole [ pole_step * 0 ] . x ) + any_abs ( pole [ pole_step * 1 ] . y - pole [ pole_step * 0 ] . y ) + any_abs ( pole [ pole_step * 2 ] . x - pole [ pole_step * 1 ] . x ) + any_abs ( pole [ pole_step * 2 ] . y - pole [ pole_step * 1 ] . y ) + any_abs ( pole [ pole_step * 3 ] . x - pole [ pole_step * 2 ] . x ) + any_abs ( pole [ pole_step * 3 ] . y - pole [ pole_step * 2 ] . y )		1252748	2		=			
ANR	1252877	Identifier	L		1252748	0					
ANR	1252878	AdditiveExpression	any_abs ( pole [ pole_step * 1 ] . x - pole [ pole_step * 0 ] . x ) + any_abs ( pole [ pole_step * 1 ] . y - pole [ pole_step * 0 ] . y ) + any_abs ( pole [ pole_step * 2 ] . x - pole [ pole_step * 1 ] . x ) + any_abs ( pole [ pole_step * 2 ] . y - pole [ pole_step * 1 ] . y ) + any_abs ( pole [ pole_step * 3 ] . x - pole [ pole_step * 2 ] . x ) + any_abs ( pole [ pole_step * 3 ] . y - pole [ pole_step * 2 ] . y )		1252748	1		+			
ANR	1252879	CallExpression	any_abs ( pole [ pole_step * 1 ] . x - pole [ pole_step * 0 ] . x )		1252748	0					
ANR	1252880	Callee	any_abs		1252748	0					
ANR	1252881	Identifier	any_abs		1252748	0					
ANR	1252882	ArgumentList	pole [ pole_step * 1 ] . x - pole [ pole_step * 0 ] . x		1252748	1					
ANR	1252883	Argument	pole [ pole_step * 1 ] . x - pole [ pole_step * 0 ] . x		1252748	0					
ANR	1252884	AdditiveExpression	pole [ pole_step * 1 ] . x - pole [ pole_step * 0 ] . x		1252748	0		-			
ANR	1252885	MemberAccess	pole [ pole_step * 1 ] . x		1252748	0					
ANR	1252886	ArrayIndexing	pole [ pole_step * 1 ]		1252748	0					
ANR	1252887	Identifier	pole		1252748	0					
ANR	1252888	MultiplicativeExpression	pole_step * 1		1252748	1		*			
ANR	1252889	Identifier	pole_step		1252748	0					
ANR	1252890	PrimaryExpression	1		1252748	1					
ANR	1252891	Identifier	x		1252748	1					
ANR	1252892	MemberAccess	pole [ pole_step * 0 ] . x		1252748	1					
ANR	1252893	ArrayIndexing	pole [ pole_step * 0 ]		1252748	0					
ANR	1252894	Identifier	pole		1252748	0					
ANR	1252895	MultiplicativeExpression	pole_step * 0		1252748	1		*			
ANR	1252896	Identifier	pole_step		1252748	0					
ANR	1252897	PrimaryExpression	0		1252748	1					
ANR	1252898	Identifier	x		1252748	1					
ANR	1252899	AdditiveExpression	any_abs ( pole [ pole_step * 1 ] . y - pole [ pole_step * 0 ] . y ) + any_abs ( pole [ pole_step * 2 ] . x - pole [ pole_step * 1 ] . x ) + any_abs ( pole [ pole_step * 2 ] . y - pole [ pole_step * 1 ] . y ) + any_abs ( pole [ pole_step * 3 ] . x - pole [ pole_step * 2 ] . x ) + any_abs ( pole [ pole_step * 3 ] . y - pole [ pole_step * 2 ] . y )		1252748	1		+			
ANR	1252900	CallExpression	any_abs ( pole [ pole_step * 1 ] . y - pole [ pole_step * 0 ] . y )		1252748	0					
ANR	1252901	Callee	any_abs		1252748	0					
ANR	1252902	Identifier	any_abs		1252748	0					
ANR	1252903	ArgumentList	pole [ pole_step * 1 ] . y - pole [ pole_step * 0 ] . y		1252748	1					
ANR	1252904	Argument	pole [ pole_step * 1 ] . y - pole [ pole_step * 0 ] . y		1252748	0					
ANR	1252905	AdditiveExpression	pole [ pole_step * 1 ] . y - pole [ pole_step * 0 ] . y		1252748	0		-			
ANR	1252906	MemberAccess	pole [ pole_step * 1 ] . y		1252748	0					
ANR	1252907	ArrayIndexing	pole [ pole_step * 1 ]		1252748	0					
ANR	1252908	Identifier	pole		1252748	0					
ANR	1252909	MultiplicativeExpression	pole_step * 1		1252748	1		*			
ANR	1252910	Identifier	pole_step		1252748	0					
ANR	1252911	PrimaryExpression	1		1252748	1					
ANR	1252912	Identifier	y		1252748	1					
ANR	1252913	MemberAccess	pole [ pole_step * 0 ] . y		1252748	1					
ANR	1252914	ArrayIndexing	pole [ pole_step * 0 ]		1252748	0					
ANR	1252915	Identifier	pole		1252748	0					
ANR	1252916	MultiplicativeExpression	pole_step * 0		1252748	1		*			
ANR	1252917	Identifier	pole_step		1252748	0					
ANR	1252918	PrimaryExpression	0		1252748	1					
ANR	1252919	Identifier	y		1252748	1					
ANR	1252920	AdditiveExpression	any_abs ( pole [ pole_step * 2 ] . x - pole [ pole_step * 1 ] . x ) + any_abs ( pole [ pole_step * 2 ] . y - pole [ pole_step * 1 ] . y ) + any_abs ( pole [ pole_step * 3 ] . x - pole [ pole_step * 2 ] . x ) + any_abs ( pole [ pole_step * 3 ] . y - pole [ pole_step * 2 ] . y )		1252748	1		+			
ANR	1252921	CallExpression	any_abs ( pole [ pole_step * 2 ] . x - pole [ pole_step * 1 ] . x )		1252748	0					
ANR	1252922	Callee	any_abs		1252748	0					
ANR	1252923	Identifier	any_abs		1252748	0					
ANR	1252924	ArgumentList	pole [ pole_step * 2 ] . x - pole [ pole_step * 1 ] . x		1252748	1					
ANR	1252925	Argument	pole [ pole_step * 2 ] . x - pole [ pole_step * 1 ] . x		1252748	0					
ANR	1252926	AdditiveExpression	pole [ pole_step * 2 ] . x - pole [ pole_step * 1 ] . x		1252748	0		-			
ANR	1252927	MemberAccess	pole [ pole_step * 2 ] . x		1252748	0					
ANR	1252928	ArrayIndexing	pole [ pole_step * 2 ]		1252748	0					
ANR	1252929	Identifier	pole		1252748	0					
ANR	1252930	MultiplicativeExpression	pole_step * 2		1252748	1		*			
ANR	1252931	Identifier	pole_step		1252748	0					
ANR	1252932	PrimaryExpression	2		1252748	1					
ANR	1252933	Identifier	x		1252748	1					
ANR	1252934	MemberAccess	pole [ pole_step * 1 ] . x		1252748	1					
ANR	1252935	ArrayIndexing	pole [ pole_step * 1 ]		1252748	0					
ANR	1252936	Identifier	pole		1252748	0					
ANR	1252937	MultiplicativeExpression	pole_step * 1		1252748	1		*			
ANR	1252938	Identifier	pole_step		1252748	0					
ANR	1252939	PrimaryExpression	1		1252748	1					
ANR	1252940	Identifier	x		1252748	1					
ANR	1252941	AdditiveExpression	any_abs ( pole [ pole_step * 2 ] . y - pole [ pole_step * 1 ] . y ) + any_abs ( pole [ pole_step * 3 ] . x - pole [ pole_step * 2 ] . x ) + any_abs ( pole [ pole_step * 3 ] . y - pole [ pole_step * 2 ] . y )		1252748	1		+			
ANR	1252942	CallExpression	any_abs ( pole [ pole_step * 2 ] . y - pole [ pole_step * 1 ] . y )		1252748	0					
ANR	1252943	Callee	any_abs		1252748	0					
ANR	1252944	Identifier	any_abs		1252748	0					
ANR	1252945	ArgumentList	pole [ pole_step * 2 ] . y - pole [ pole_step * 1 ] . y		1252748	1					
ANR	1252946	Argument	pole [ pole_step * 2 ] . y - pole [ pole_step * 1 ] . y		1252748	0					
ANR	1252947	AdditiveExpression	pole [ pole_step * 2 ] . y - pole [ pole_step * 1 ] . y		1252748	0		-			
ANR	1252948	MemberAccess	pole [ pole_step * 2 ] . y		1252748	0					
ANR	1252949	ArrayIndexing	pole [ pole_step * 2 ]		1252748	0					
ANR	1252950	Identifier	pole		1252748	0					
ANR	1252951	MultiplicativeExpression	pole_step * 2		1252748	1		*			
ANR	1252952	Identifier	pole_step		1252748	0					
ANR	1252953	PrimaryExpression	2		1252748	1					
ANR	1252954	Identifier	y		1252748	1					
ANR	1252955	MemberAccess	pole [ pole_step * 1 ] . y		1252748	1					
ANR	1252956	ArrayIndexing	pole [ pole_step * 1 ]		1252748	0					
ANR	1252957	Identifier	pole		1252748	0					
ANR	1252958	MultiplicativeExpression	pole_step * 1		1252748	1		*			
ANR	1252959	Identifier	pole_step		1252748	0					
ANR	1252960	PrimaryExpression	1		1252748	1					
ANR	1252961	Identifier	y		1252748	1					
ANR	1252962	AdditiveExpression	any_abs ( pole [ pole_step * 3 ] . x - pole [ pole_step * 2 ] . x ) + any_abs ( pole [ pole_step * 3 ] . y - pole [ pole_step * 2 ] . y )		1252748	1		+			
ANR	1252963	CallExpression	any_abs ( pole [ pole_step * 3 ] . x - pole [ pole_step * 2 ] . x )		1252748	0					
ANR	1252964	Callee	any_abs		1252748	0					
ANR	1252965	Identifier	any_abs		1252748	0					
ANR	1252966	ArgumentList	pole [ pole_step * 3 ] . x - pole [ pole_step * 2 ] . x		1252748	1					
ANR	1252967	Argument	pole [ pole_step * 3 ] . x - pole [ pole_step * 2 ] . x		1252748	0					
ANR	1252968	AdditiveExpression	pole [ pole_step * 3 ] . x - pole [ pole_step * 2 ] . x		1252748	0		-			
ANR	1252969	MemberAccess	pole [ pole_step * 3 ] . x		1252748	0					
ANR	1252970	ArrayIndexing	pole [ pole_step * 3 ]		1252748	0					
ANR	1252971	Identifier	pole		1252748	0					
ANR	1252972	MultiplicativeExpression	pole_step * 3		1252748	1		*			
ANR	1252973	Identifier	pole_step		1252748	0					
ANR	1252974	PrimaryExpression	3		1252748	1					
ANR	1252975	Identifier	x		1252748	1					
ANR	1252976	MemberAccess	pole [ pole_step * 2 ] . x		1252748	1					
ANR	1252977	ArrayIndexing	pole [ pole_step * 2 ]		1252748	0					
ANR	1252978	Identifier	pole		1252748	0					
ANR	1252979	MultiplicativeExpression	pole_step * 2		1252748	1		*			
ANR	1252980	Identifier	pole_step		1252748	0					
ANR	1252981	PrimaryExpression	2		1252748	1					
ANR	1252982	Identifier	x		1252748	1					
ANR	1252983	CallExpression	any_abs ( pole [ pole_step * 3 ] . y - pole [ pole_step * 2 ] . y )		1252748	1					
ANR	1252984	Callee	any_abs		1252748	0					
ANR	1252985	Identifier	any_abs		1252748	0					
ANR	1252986	ArgumentList	pole [ pole_step * 3 ] . y - pole [ pole_step * 2 ] . y		1252748	1					
ANR	1252987	Argument	pole [ pole_step * 3 ] . y - pole [ pole_step * 2 ] . y		1252748	0					
ANR	1252988	AdditiveExpression	pole [ pole_step * 3 ] . y - pole [ pole_step * 2 ] . y		1252748	0		-			
ANR	1252989	MemberAccess	pole [ pole_step * 3 ] . y		1252748	0					
ANR	1252990	ArrayIndexing	pole [ pole_step * 3 ]		1252748	0					
ANR	1252991	Identifier	pole		1252748	0					
ANR	1252992	MultiplicativeExpression	pole_step * 3		1252748	1		*			
ANR	1252993	Identifier	pole_step		1252748	0					
ANR	1252994	PrimaryExpression	3		1252748	1					
ANR	1252995	Identifier	y		1252748	1					
ANR	1252996	MemberAccess	pole [ pole_step * 2 ] . y		1252748	1					
ANR	1252997	ArrayIndexing	pole [ pole_step * 2 ]		1252748	0					
ANR	1252998	Identifier	pole		1252748	0					
ANR	1252999	MultiplicativeExpression	pole_step * 2		1252748	1		*			
ANR	1253000	Identifier	pole_step		1252748	0					
ANR	1253001	PrimaryExpression	2		1252748	1					
ANR	1253002	Identifier	y		1252748	1					
ANR	1253003	Statement	endif	796:8:28598:28602	1252748	5	True				
ANR	1253004	Statement	if	798:8:28613:28614	1252748	6	True				
ANR	1253005	IdentifierDeclStatement	LAZY_WEDGES k1 = ilog2 ( L / fixed_1 / ( 1 << ( LAZY_WEDGES_MAX_LEVEL - 1 ) ) ) ;	798:11:28616:28773	1252748	7	True				
ANR	1253006	IdentifierDecl	k1 = ilog2 ( L / fixed_1 / ( 1 << ( LAZY_WEDGES_MAX_LEVEL - 1 ) ) )		1252748	0					
ANR	1253007	IdentifierDeclType	LAZY_WEDGES		1252748	0					
ANR	1253008	Identifier	k1		1252748	1					
ANR	1253009	AssignmentExpression	k1 = ilog2 ( L / fixed_1 / ( 1 << ( LAZY_WEDGES_MAX_LEVEL - 1 ) ) )		1252748	2		=			
ANR	1253010	Identifier	k1		1252748	0					
ANR	1253011	CallExpression	ilog2 ( L / fixed_1 / ( 1 << ( LAZY_WEDGES_MAX_LEVEL - 1 ) ) )		1252748	1					
ANR	1253012	Callee	ilog2		1252748	0					
ANR	1253013	Identifier	ilog2		1252748	0					
ANR	1253014	ArgumentList	L / fixed_1 / ( 1 << ( LAZY_WEDGES_MAX_LEVEL - 1 ) )		1252748	1					
ANR	1253015	Argument	L / fixed_1 / ( 1 << ( LAZY_WEDGES_MAX_LEVEL - 1 ) )		1252748	0					
ANR	1253016	MultiplicativeExpression	L / fixed_1 / ( 1 << ( LAZY_WEDGES_MAX_LEVEL - 1 ) )		1252748	0		/			
ANR	1253017	Identifier	L		1252748	0					
ANR	1253018	MultiplicativeExpression	fixed_1 / ( 1 << ( LAZY_WEDGES_MAX_LEVEL - 1 ) )		1252748	1		/			
ANR	1253019	Identifier	fixed_1		1252748	0					
ANR	1253020	ShiftExpression	1 << ( LAZY_WEDGES_MAX_LEVEL - 1 )		1252748	1		<<			
ANR	1253021	PrimaryExpression	1		1252748	0					
ANR	1253022	AdditiveExpression	LAZY_WEDGES_MAX_LEVEL - 1		1252748	1		-			
ANR	1253023	Identifier	LAZY_WEDGES_MAX_LEVEL		1252748	0					
ANR	1253024	PrimaryExpression	1		1252748	1					
ANR	1253025	ExpressionStatement	"k = max ( k , k1 )"	801:12:28787:28801	1252748	8	True				
ANR	1253026	AssignmentExpression	"k = max ( k , k1 )"		1252748	0		=			
ANR	1253027	Identifier	k		1252748	0					
ANR	1253028	CallExpression	"max ( k , k1 )"		1252748	1					
ANR	1253029	Callee	max		1252748	0					
ANR	1253030	Identifier	max		1252748	0					
ANR	1253031	ArgumentList	k		1252748	1					
ANR	1253032	Argument	k		1252748	0					
ANR	1253033	Identifier	k		1252748	0					
ANR	1253034	Argument	k1		1252748	1					
ANR	1253035	Identifier	k1		1252748	0					
ANR	1253036	Statement	endif	802:8:28811:28815	1252748	9	True				
ANR	1253037	Statement	if	803:8:28825:28826	1252748	10	True				
ANR	1253038	IdentifierDeclStatement	"QUADRANGLES k = max ( k , ilog2 ( L ) - ilog2 ( pfs -> max_small_coord ) ) ;"	803:11:28828:28970	1252748	11	True				
ANR	1253039	IdentifierDecl	"k = max ( k , ilog2 ( L ) - ilog2 ( pfs -> max_small_coord ) )"		1252748	0					
ANR	1253040	IdentifierDeclType	QUADRANGLES		1252748	0					
ANR	1253041	Identifier	k		1252748	1					
ANR	1253042	AssignmentExpression	"k = max ( k , ilog2 ( L ) - ilog2 ( pfs -> max_small_coord ) )"		1252748	2		=			
ANR	1253043	Identifier	k		1252748	0					
ANR	1253044	CallExpression	"max ( k , ilog2 ( L ) - ilog2 ( pfs -> max_small_coord ) )"		1252748	1					
ANR	1253045	Callee	max		1252748	0					
ANR	1253046	Identifier	max		1252748	0					
ANR	1253047	ArgumentList	k		1252748	1					
ANR	1253048	Argument	k		1252748	0					
ANR	1253049	Identifier	k		1252748	0					
ANR	1253050	Argument	ilog2 ( L ) - ilog2 ( pfs -> max_small_coord )		1252748	1					
ANR	1253051	AdditiveExpression	ilog2 ( L ) - ilog2 ( pfs -> max_small_coord )		1252748	0		-			
ANR	1253052	CallExpression	ilog2 ( L )		1252748	0					
ANR	1253053	Callee	ilog2		1252748	0					
ANR	1253054	Identifier	ilog2		1252748	0					
ANR	1253055	ArgumentList	L		1252748	1					
ANR	1253056	Argument	L		1252748	0					
ANR	1253057	Identifier	L		1252748	0					
ANR	1253058	CallExpression	ilog2 ( pfs -> max_small_coord )		1252748	1					
ANR	1253059	Callee	ilog2		1252748	0					
ANR	1253060	Identifier	ilog2		1252748	0					
ANR	1253061	ArgumentList	pfs -> max_small_coord		1252748	1					
ANR	1253062	Argument	pfs -> max_small_coord		1252748	0					
ANR	1253063	PtrMemberAccess	pfs -> max_small_coord		1252748	0					
ANR	1253064	Identifier	pfs		1252748	0					
ANR	1253065	Identifier	max_small_coord		1252748	1					
ANR	1253066	Statement	endif	806:8:28980:28984	1252748	12	True				
ANR	1253067	ReturnStatement	return 1 << k ;	808:4:28996:29009	1252748	10	True				
ANR	1253068	ShiftExpression	1 << k		1252748	0		<<			
ANR	1253069	PrimaryExpression	1		1252748	0					
ANR	1253070	Identifier	k		1252748	1					
ANR	1253071	ReturnType	static inline int		1252748	1					
ANR	1253072	Identifier	curve_samples		1252748	2					
ANR	1253073	ParameterList	"patch_fill_state_t * pfs , const gs_fixed_point * pole , int pole_step , fixed fixed_flat"		1252748	3					
ANR	1253074	Parameter	patch_fill_state_t * pfs	777:14:27705:27727	1252748	0	True				
ANR	1253075	ParameterType	patch_fill_state_t *		1252748	0					
ANR	1253076	Identifier	pfs		1252748	1					
ANR	1253077	Parameter	const gs_fixed_point * pole	778:16:27746:27771	1252748	1	True				
ANR	1253078	ParameterType	const gs_fixed_point *		1252748	0					
ANR	1253079	Identifier	pole		1252748	1					
ANR	1253080	Parameter	int pole_step	778:44:27774:27786	1252748	2	True				
ANR	1253081	ParameterType	int		1252748	0					
ANR	1253082	Identifier	pole_step		1252748	1					
ANR	1253083	Parameter	fixed fixed_flat	778:59:27789:27804	1252748	3	True				
ANR	1253084	ParameterType	fixed		1252748	0					
ANR	1253085	Identifier	fixed_flat		1252748	1					
ANR	1253086	CFGEntryNode	ENTRY		1252748		True				
ANR	1253087	CFGExitNode	EXIT		1252748		True				
ANR	1253088	Symbol	pole [ pole_step ] . y		1252748						
ANR	1253089	Symbol	pole [ pole_step ] . x		1252748						
ANR	1253090	Symbol	pole [ pole_step * 1 ] . x		1252748						
ANR	1253091	Symbol	pole [ pole_step * 1 ] . y		1252748						
ANR	1253092	Symbol	pole		1252748						
ANR	1253093	Symbol	* pole_step		1252748						
ANR	1253094	Symbol	L		1252748						
ANR	1253095	Symbol	pole_step		1252748						
ANR	1253096	Symbol	* pole		1252748						
ANR	1253097	Symbol	s . p1 . y		1252748						
ANR	1253098	Symbol	s . p1 . x		1252748						
ANR	1253099	Symbol	s . p2 . x		1252748						
ANR	1253100	Symbol	s . p2		1252748						
ANR	1253101	Symbol	fixed_1		1252748						
ANR	1253102	Symbol	s . p1		1252748						
ANR	1253103	Symbol	s . pt		1252748						
ANR	1253104	Symbol	any_abs		1252748						
ANR	1253105	Symbol	pole [ pole_step * 3 ] . x		1252748						
ANR	1253106	Symbol	s . p2 . y		1252748						
ANR	1253107	Symbol	pole [ pole_step * 3 ] . y		1252748						
ANR	1253108	Symbol	pfs -> max_small_coord		1252748						
ANR	1253109	Symbol	fixed_flat		1252748						
ANR	1253110	Symbol	pole [ pole_step * 0 ] . y		1252748						
ANR	1253111	Symbol	pole [ pole_step * 0 ] . x		1252748						
ANR	1253112	Symbol	max		1252748						
ANR	1253113	Symbol	k1		1252748						
ANR	1253114	Symbol	* pfs		1252748						
ANR	1253115	Symbol	k		1252748						
ANR	1253116	Symbol	LAZY_WEDGES_MAX_LEVEL		1252748						
ANR	1253117	Symbol	ilog2		1252748						
ANR	1253118	Symbol	s . pt . x		1252748						
ANR	1253119	Symbol	s		1252748						
ANR	1253120	Symbol	s . pt . y		1252748						
ANR	1253121	Symbol	pole [ pole_step * 2 ] . y		1252748						
ANR	1253122	Symbol	gx_curve_log2_samples		1252748						
ANR	1253123	Symbol	pole [ pole_step * 2 ] . x		1252748						
ANR	1253124	Symbol	pole [ 0 ] . y		1252748						
ANR	1253125	Symbol	& s		1252748						
ANR	1253126	Symbol	pole [ 0 ] . x		1252748						
ANR	1253127	Symbol	pfs		1252748						
ANR	1253128	Function	intersection_of_small_bars	811:0:29014:29314							
ANR	1253129	FunctionDef	"intersection_of_small_bars (const gs_fixed_point q [ 4 ] , int i0 , int i1 , int i2 , int i3 , fixed * ry , fixed * ey)"		1253128	0					
ANR	1253130	CompoundStatement		813:0:29141:29314	1253128	0					
ANR	1253131	ReturnStatement	"return gx_intersect_small_bars ( q [ i0 ] . x , q [ i0 ] . y , q [ i1 ] . x , q [ i1 ] . y , q [ i2 ] . x , q [ i2 ] . y , q [ i3 ] . x , q [ i3 ] . y , ry , ey ) ;"	815:4:29202:29312	1253128	0	True				
ANR	1253132	CallExpression	"gx_intersect_small_bars ( q [ i0 ] . x , q [ i0 ] . y , q [ i1 ] . x , q [ i1 ] . y , q [ i2 ] . x , q [ i2 ] . y , q [ i3 ] . x , q [ i3 ] . y , ry , ey )"		1253128	0					
ANR	1253133	Callee	gx_intersect_small_bars		1253128	0					
ANR	1253134	Identifier	gx_intersect_small_bars		1253128	0					
ANR	1253135	ArgumentList	q [ i0 ] . x		1253128	1					
ANR	1253136	Argument	q [ i0 ] . x		1253128	0					
ANR	1253137	MemberAccess	q [ i0 ] . x		1253128	0					
ANR	1253138	ArrayIndexing	q [ i0 ]		1253128	0					
ANR	1253139	Identifier	q		1253128	0					
ANR	1253140	Identifier	i0		1253128	1					
ANR	1253141	Identifier	x		1253128	1					
ANR	1253142	Argument	q [ i0 ] . y		1253128	1					
ANR	1253143	MemberAccess	q [ i0 ] . y		1253128	0					
ANR	1253144	ArrayIndexing	q [ i0 ]		1253128	0					
ANR	1253145	Identifier	q		1253128	0					
ANR	1253146	Identifier	i0		1253128	1					
ANR	1253147	Identifier	y		1253128	1					
ANR	1253148	Argument	q [ i1 ] . x		1253128	2					
ANR	1253149	MemberAccess	q [ i1 ] . x		1253128	0					
ANR	1253150	ArrayIndexing	q [ i1 ]		1253128	0					
ANR	1253151	Identifier	q		1253128	0					
ANR	1253152	Identifier	i1		1253128	1					
ANR	1253153	Identifier	x		1253128	1					
ANR	1253154	Argument	q [ i1 ] . y		1253128	3					
ANR	1253155	MemberAccess	q [ i1 ] . y		1253128	0					
ANR	1253156	ArrayIndexing	q [ i1 ]		1253128	0					
ANR	1253157	Identifier	q		1253128	0					
ANR	1253158	Identifier	i1		1253128	1					
ANR	1253159	Identifier	y		1253128	1					
ANR	1253160	Argument	q [ i2 ] . x		1253128	4					
ANR	1253161	MemberAccess	q [ i2 ] . x		1253128	0					
ANR	1253162	ArrayIndexing	q [ i2 ]		1253128	0					
ANR	1253163	Identifier	q		1253128	0					
ANR	1253164	Identifier	i2		1253128	1					
ANR	1253165	Identifier	x		1253128	1					
ANR	1253166	Argument	q [ i2 ] . y		1253128	5					
ANR	1253167	MemberAccess	q [ i2 ] . y		1253128	0					
ANR	1253168	ArrayIndexing	q [ i2 ]		1253128	0					
ANR	1253169	Identifier	q		1253128	0					
ANR	1253170	Identifier	i2		1253128	1					
ANR	1253171	Identifier	y		1253128	1					
ANR	1253172	Argument	q [ i3 ] . x		1253128	6					
ANR	1253173	MemberAccess	q [ i3 ] . x		1253128	0					
ANR	1253174	ArrayIndexing	q [ i3 ]		1253128	0					
ANR	1253175	Identifier	q		1253128	0					
ANR	1253176	Identifier	i3		1253128	1					
ANR	1253177	Identifier	x		1253128	1					
ANR	1253178	Argument	q [ i3 ] . y		1253128	7					
ANR	1253179	MemberAccess	q [ i3 ] . y		1253128	0					
ANR	1253180	ArrayIndexing	q [ i3 ]		1253128	0					
ANR	1253181	Identifier	q		1253128	0					
ANR	1253182	Identifier	i3		1253128	1					
ANR	1253183	Identifier	y		1253128	1					
ANR	1253184	Argument	ry		1253128	8					
ANR	1253185	Identifier	ry		1253128	0					
ANR	1253186	Argument	ey		1253128	9					
ANR	1253187	Identifier	ey		1253128	0					
ANR	1253188	ReturnType	static inline bool		1253128	1					
ANR	1253189	Identifier	intersection_of_small_bars		1253128	2					
ANR	1253190	ParameterList	"const gs_fixed_point q [ 4 ] , int i0 , int i1 , int i2 , int i3 , fixed * ry , fixed * ey"		1253128	3					
ANR	1253191	Parameter	const gs_fixed_point q [ 4 ]	812:27:29060:29084	1253128	0	True				
ANR	1253192	ParameterType	const gs_fixed_point [ 4 ]		1253128	0					
ANR	1253193	Identifier	q		1253128	1					
ANR	1253194	Parameter	int i0	812:54:29087:29092	1253128	1	True				
ANR	1253195	ParameterType	int		1253128	0					
ANR	1253196	Identifier	i0		1253128	1					
ANR	1253197	Parameter	int i1	812:62:29095:29100	1253128	2	True				
ANR	1253198	ParameterType	int		1253128	0					
ANR	1253199	Identifier	i1		1253128	1					
ANR	1253200	Parameter	int i2	812:70:29103:29108	1253128	3	True				
ANR	1253201	ParameterType	int		1253128	0					
ANR	1253202	Identifier	i2		1253128	1					
ANR	1253203	Parameter	int i3	812:78:29111:29116	1253128	4	True				
ANR	1253204	ParameterType	int		1253128	0					
ANR	1253205	Identifier	i3		1253128	1					
ANR	1253206	Parameter	fixed * ry	812:86:29119:29127	1253128	5	True				
ANR	1253207	ParameterType	fixed *		1253128	0					
ANR	1253208	Identifier	ry		1253128	1					
ANR	1253209	Parameter	fixed * ey	812:97:29130:29138	1253128	6	True				
ANR	1253210	ParameterType	fixed *		1253128	0					
ANR	1253211	Identifier	ey		1253128	1					
ANR	1253212	CFGEntryNode	ENTRY		1253128		True				
ANR	1253213	CFGExitNode	EXIT		1253128		True				
ANR	1253214	Symbol	q [ i1 ] . x		1253128						
ANR	1253215	Symbol	q [ i2 ] . y		1253128						
ANR	1253216	Symbol	q [ i2 ] . x		1253128						
ANR	1253217	Symbol	q [ i0 ] . x		1253128						
ANR	1253218	Symbol	i0		1253128						
ANR	1253219	Symbol	ry		1253128						
ANR	1253220	Symbol	q [ i0 ] . y		1253128						
ANR	1253221	Symbol	i1		1253128						
ANR	1253222	Symbol	i2		1253128						
ANR	1253223	Symbol	q [ i3 ] . y		1253128						
ANR	1253224	Symbol	i3		1253128						
ANR	1253225	Symbol	q [ i3 ] . x		1253128						
ANR	1253226	Symbol	* i2		1253128						
ANR	1253227	Symbol	* i1		1253128						
ANR	1253228	Symbol	* i0		1253128						
ANR	1253229	Symbol	q		1253128						
ANR	1253230	Symbol	gx_intersect_small_bars		1253128						
ANR	1253231	Symbol	* i3		1253128						
ANR	1253232	Symbol	ey		1253128						
ANR	1253233	Symbol	* q		1253128						
ANR	1253234	Symbol	q [ i1 ] . y		1253128						
ANR	1253235	Function	adjust_swapped_boundary	818:0:29317:29881							
ANR	1253236	FunctionDef	"adjust_swapped_boundary (fixed * b , bool swap_axes)"		1253235	0					
ANR	1253237	CompoundStatement		820:0:29386:29881	1253235	0					
ANR	1253238	IfStatement	if ( swap_axes )		1253235	0					
ANR	1253239	Condition	swap_axes	821:8:29396:29404	1253235	0	True				
ANR	1253240	Identifier	swap_axes		1253235	0					
ANR	1253241	CompoundStatement		2:19:20:20	1253235	1					
ANR	1253242	ExpressionStatement	* b += fixed_epsilon	830:8:29854:29873	1253235	0	True				
ANR	1253243	AssignmentExpression	* b += fixed_epsilon		1253235	0		+=			
ANR	1253244	UnaryOperationExpression	* b		1253235	0					
ANR	1253245	UnaryOperator	*		1253235	0					
ANR	1253246	Identifier	b		1253235	1					
ANR	1253247	Identifier	fixed_epsilon		1253235	1					
ANR	1253248	ReturnType	static inline void		1253235	1					
ANR	1253249	Identifier	adjust_swapped_boundary		1253235	2					
ANR	1253250	ParameterList	"fixed * b , bool swap_axes"		1253235	3					
ANR	1253251	Parameter	fixed * b	819:24:29360:29367	1253235	0	True				
ANR	1253252	ParameterType	fixed *		1253235	0					
ANR	1253253	Identifier	b		1253235	1					
ANR	1253254	Parameter	bool swap_axes	819:34:29370:29383	1253235	1	True				
ANR	1253255	ParameterType	bool		1253235	0					
ANR	1253256	Identifier	swap_axes		1253235	1					
ANR	1253257	CFGEntryNode	ENTRY		1253235		True				
ANR	1253258	CFGExitNode	EXIT		1253235		True				
ANR	1253259	Symbol	b		1253235						
ANR	1253260	Symbol	swap_axes		1253235						
ANR	1253261	Symbol	* b		1253235						
ANR	1253262	Symbol	fixed_epsilon		1253235						
ANR	1253263	Function	make_trapezoid	834:0:29884:30450							
ANR	1253264	FunctionDef	"make_trapezoid (const gs_fixed_point q [ 4 ] , int vi0 , int vi1 , int vi2 , int vi3 , fixed ybot , fixed ytop , bool swap_axes , bool orient , gs_fixed_edge * le , gs_fixed_edge * re)"		1253263	0					
ANR	1253265	CompoundStatement		838:0:30088:30450	1253263	0					
ANR	1253266	IfStatement	if ( ! orient )		1253263	0					
ANR	1253267	Condition	! orient	839:8:30098:30104	1253263	0	True				
ANR	1253268	UnaryOperationExpression	! orient		1253263	0					
ANR	1253269	UnaryOperator	!		1253263	0					
ANR	1253270	Identifier	orient		1253263	1					
ANR	1253271	CompoundStatement		2:17:18:18	1253263	1					
ANR	1253272	ExpressionStatement	le -> start = q [ vi0 ]	840:8:30117:30135	1253263	0	True				
ANR	1253273	AssignmentExpression	le -> start = q [ vi0 ]		1253263	0		=			
ANR	1253274	PtrMemberAccess	le -> start		1253263	0					
ANR	1253275	Identifier	le		1253263	0					
ANR	1253276	Identifier	start		1253263	1					
ANR	1253277	ArrayIndexing	q [ vi0 ]		1253263	1					
ANR	1253278	Identifier	q		1253263	0					
ANR	1253279	Identifier	vi0		1253263	1					
ANR	1253280	ExpressionStatement	le -> end = q [ vi1 ]	841:8:30145:30161	1253263	1	True				
ANR	1253281	AssignmentExpression	le -> end = q [ vi1 ]		1253263	0		=			
ANR	1253282	PtrMemberAccess	le -> end		1253263	0					
ANR	1253283	Identifier	le		1253263	0					
ANR	1253284	Identifier	end		1253263	1					
ANR	1253285	ArrayIndexing	q [ vi1 ]		1253263	1					
ANR	1253286	Identifier	q		1253263	0					
ANR	1253287	Identifier	vi1		1253263	1					
ANR	1253288	ExpressionStatement	re -> start = q [ vi2 ]	842:8:30171:30189	1253263	2	True				
ANR	1253289	AssignmentExpression	re -> start = q [ vi2 ]		1253263	0		=			
ANR	1253290	PtrMemberAccess	re -> start		1253263	0					
ANR	1253291	Identifier	re		1253263	0					
ANR	1253292	Identifier	start		1253263	1					
ANR	1253293	ArrayIndexing	q [ vi2 ]		1253263	1					
ANR	1253294	Identifier	q		1253263	0					
ANR	1253295	Identifier	vi2		1253263	1					
ANR	1253296	ExpressionStatement	re -> end = q [ vi3 ]	843:8:30199:30215	1253263	3	True				
ANR	1253297	AssignmentExpression	re -> end = q [ vi3 ]		1253263	0		=			
ANR	1253298	PtrMemberAccess	re -> end		1253263	0					
ANR	1253299	Identifier	re		1253263	0					
ANR	1253300	Identifier	end		1253263	1					
ANR	1253301	ArrayIndexing	q [ vi3 ]		1253263	1					
ANR	1253302	Identifier	q		1253263	0					
ANR	1253303	Identifier	vi3		1253263	1					
ANR	1253304	ElseStatement	else		1253263	0					
ANR	1253305	CompoundStatement		7:11:139:139	1253263	0					
ANR	1253306	ExpressionStatement	le -> start = q [ vi2 ]	845:8:30238:30256	1253263	0	True				
ANR	1253307	AssignmentExpression	le -> start = q [ vi2 ]		1253263	0		=			
ANR	1253308	PtrMemberAccess	le -> start		1253263	0					
ANR	1253309	Identifier	le		1253263	0					
ANR	1253310	Identifier	start		1253263	1					
ANR	1253311	ArrayIndexing	q [ vi2 ]		1253263	1					
ANR	1253312	Identifier	q		1253263	0					
ANR	1253313	Identifier	vi2		1253263	1					
ANR	1253314	ExpressionStatement	le -> end = q [ vi3 ]	846:8:30266:30282	1253263	1	True				
ANR	1253315	AssignmentExpression	le -> end = q [ vi3 ]		1253263	0		=			
ANR	1253316	PtrMemberAccess	le -> end		1253263	0					
ANR	1253317	Identifier	le		1253263	0					
ANR	1253318	Identifier	end		1253263	1					
ANR	1253319	ArrayIndexing	q [ vi3 ]		1253263	1					
ANR	1253320	Identifier	q		1253263	0					
ANR	1253321	Identifier	vi3		1253263	1					
ANR	1253322	ExpressionStatement	re -> start = q [ vi0 ]	847:8:30292:30310	1253263	2	True				
ANR	1253323	AssignmentExpression	re -> start = q [ vi0 ]		1253263	0		=			
ANR	1253324	PtrMemberAccess	re -> start		1253263	0					
ANR	1253325	Identifier	re		1253263	0					
ANR	1253326	Identifier	start		1253263	1					
ANR	1253327	ArrayIndexing	q [ vi0 ]		1253263	1					
ANR	1253328	Identifier	q		1253263	0					
ANR	1253329	Identifier	vi0		1253263	1					
ANR	1253330	ExpressionStatement	re -> end = q [ vi1 ]	848:8:30320:30336	1253263	3	True				
ANR	1253331	AssignmentExpression	re -> end = q [ vi1 ]		1253263	0		=			
ANR	1253332	PtrMemberAccess	re -> end		1253263	0					
ANR	1253333	Identifier	re		1253263	0					
ANR	1253334	Identifier	end		1253263	1					
ANR	1253335	ArrayIndexing	q [ vi1 ]		1253263	1					
ANR	1253336	Identifier	q		1253263	0					
ANR	1253337	Identifier	vi1		1253263	1					
ANR	1253338	ExpressionStatement	"adjust_swapped_boundary ( & re -> start . x , swap_axes )"	850:4:30348:30396	1253263	1	True				
ANR	1253339	CallExpression	"adjust_swapped_boundary ( & re -> start . x , swap_axes )"		1253263	0					
ANR	1253340	Callee	adjust_swapped_boundary		1253263	0					
ANR	1253341	Identifier	adjust_swapped_boundary		1253263	0					
ANR	1253342	ArgumentList	& re -> start . x		1253263	1					
ANR	1253343	Argument	& re -> start . x		1253263	0					
ANR	1253344	UnaryOperationExpression	& re -> start . x		1253263	0					
ANR	1253345	UnaryOperator	&		1253263	0					
ANR	1253346	MemberAccess	re -> start . x		1253263	1					
ANR	1253347	PtrMemberAccess	re -> start		1253263	0					
ANR	1253348	Identifier	re		1253263	0					
ANR	1253349	Identifier	start		1253263	1					
ANR	1253350	Identifier	x		1253263	1					
ANR	1253351	Argument	swap_axes		1253263	1					
ANR	1253352	Identifier	swap_axes		1253263	0					
ANR	1253353	ExpressionStatement	"adjust_swapped_boundary ( & re -> end . x , swap_axes )"	851:4:30402:30448	1253263	2	True				
ANR	1253354	CallExpression	"adjust_swapped_boundary ( & re -> end . x , swap_axes )"		1253263	0					
ANR	1253355	Callee	adjust_swapped_boundary		1253263	0					
ANR	1253356	Identifier	adjust_swapped_boundary		1253263	0					
ANR	1253357	ArgumentList	& re -> end . x		1253263	1					
ANR	1253358	Argument	& re -> end . x		1253263	0					
ANR	1253359	UnaryOperationExpression	& re -> end . x		1253263	0					
ANR	1253360	UnaryOperator	&		1253263	0					
ANR	1253361	MemberAccess	re -> end . x		1253263	1					
ANR	1253362	PtrMemberAccess	re -> end		1253263	0					
ANR	1253363	Identifier	re		1253263	0					
ANR	1253364	Identifier	end		1253263	1					
ANR	1253365	Identifier	x		1253263	1					
ANR	1253366	Argument	swap_axes		1253263	1					
ANR	1253367	Identifier	swap_axes		1253263	0					
ANR	1253368	ReturnType	static inline void		1253263	1					
ANR	1253369	Identifier	make_trapezoid		1253263	2					
ANR	1253370	ParameterList	"const gs_fixed_point q [ 4 ] , int vi0 , int vi1 , int vi2 , int vi3 , fixed ybot , fixed ytop , bool swap_axes , bool orient , gs_fixed_edge * le , gs_fixed_edge * re"		1253263	3					
ANR	1253371	Parameter	const gs_fixed_point q [ 4 ]	835:15:29918:29942	1253263	0	True				
ANR	1253372	ParameterType	const gs_fixed_point [ 4 ]		1253263	0					
ANR	1253373	Identifier	q		1253263	1					
ANR	1253374	Parameter	int vi0	836:8:29953:29959	1253263	1	True				
ANR	1253375	ParameterType	int		1253263	0					
ANR	1253376	Identifier	vi0		1253263	1					
ANR	1253377	Parameter	int vi1	836:17:29962:29968	1253263	2	True				
ANR	1253378	ParameterType	int		1253263	0					
ANR	1253379	Identifier	vi1		1253263	1					
ANR	1253380	Parameter	int vi2	836:26:29971:29977	1253263	3	True				
ANR	1253381	ParameterType	int		1253263	0					
ANR	1253382	Identifier	vi2		1253263	1					
ANR	1253383	Parameter	int vi3	836:35:29980:29986	1253263	4	True				
ANR	1253384	ParameterType	int		1253263	0					
ANR	1253385	Identifier	vi3		1253263	1					
ANR	1253386	Parameter	fixed ybot	836:44:29989:29998	1253263	5	True				
ANR	1253387	ParameterType	fixed		1253263	0					
ANR	1253388	Identifier	ybot		1253263	1					
ANR	1253389	Parameter	fixed ytop	836:56:30001:30010	1253263	6	True				
ANR	1253390	ParameterType	fixed		1253263	0					
ANR	1253391	Identifier	ytop		1253263	1					
ANR	1253392	Parameter	bool swap_axes	837:8:30021:30034	1253263	7	True				
ANR	1253393	ParameterType	bool		1253263	0					
ANR	1253394	Identifier	swap_axes		1253263	1					
ANR	1253395	Parameter	bool orient	837:24:30037:30047	1253263	8	True				
ANR	1253396	ParameterType	bool		1253263	0					
ANR	1253397	Identifier	orient		1253263	1					
ANR	1253398	Parameter	gs_fixed_edge * le	837:37:30050:30066	1253263	9	True				
ANR	1253399	ParameterType	gs_fixed_edge *		1253263	0					
ANR	1253400	Identifier	le		1253263	1					
ANR	1253401	Parameter	gs_fixed_edge * re	837:56:30069:30085	1253263	10	True				
ANR	1253402	ParameterType	gs_fixed_edge *		1253263	0					
ANR	1253403	Identifier	re		1253263	1					
ANR	1253404	CFGEntryNode	ENTRY		1253263		True				
ANR	1253405	CFGExitNode	EXIT		1253263		True				
ANR	1253406	Symbol	& re -> end		1253263						
ANR	1253407	Symbol	ytop		1253263						
ANR	1253408	Symbol	le -> start		1253263						
ANR	1253409	Symbol	& re -> start		1253263						
ANR	1253410	Symbol	* vi0		1253263						
ANR	1253411	Symbol	* vi1		1253263						
ANR	1253412	Symbol	* vi2		1253263						
ANR	1253413	Symbol	* vi3		1253263						
ANR	1253414	Symbol	ybot		1253263						
ANR	1253415	Symbol	vi0		1253263						
ANR	1253416	Symbol	re -> start		1253263						
ANR	1253417	Symbol	vi2		1253263						
ANR	1253418	Symbol	vi1		1253263						
ANR	1253419	Symbol	vi3		1253263						
ANR	1253420	Symbol	re -> end		1253263						
ANR	1253421	Symbol	orient		1253263						
ANR	1253422	Symbol	& re -> end . x		1253263						
ANR	1253423	Symbol	q		1253263						
ANR	1253424	Symbol	re		1253263						
ANR	1253425	Symbol	le -> end		1253263						
ANR	1253426	Symbol	le		1253263						
ANR	1253427	Symbol	* re		1253263						
ANR	1253428	Symbol	* q		1253263						
ANR	1253429	Symbol	swap_axes		1253263						
ANR	1253430	Symbol	* le		1253263						
ANR	1253431	Symbol	& re -> start . x		1253263						
ANR	1253432	Function	gx_shade_trapezoid	854:0:30453:47990							
ANR	1253433	FunctionDef	"gx_shade_trapezoid (patch_fill_state_t * pfs , const gs_fixed_point q [ 4 ] , int vi0 , int vi1 , int vi2 , int vi3 , fixed ybot0 , fixed ytop0 , bool swap_axes , const gx_device_color * pdevc , bool orient)"		1253432	0					
ANR	1253434	CompoundStatement		858:0:30679:47990	1253432	0					
ANR	1253435	IdentifierDeclStatement	"gs_fixed_edge le , re ;"	859:4:30685:30705	1253432	0	True				
ANR	1253436	IdentifierDecl	le		1253432	0					
ANR	1253437	IdentifierDeclType	gs_fixed_edge		1253432	0					
ANR	1253438	Identifier	le		1253432	1					
ANR	1253439	IdentifierDecl	re		1253432	1					
ANR	1253440	IdentifierDeclType	gs_fixed_edge		1253432	0					
ANR	1253441	Identifier	re		1253432	1					
ANR	1253442	IdentifierDeclStatement	int code ;	860:4:30711:30719	1253432	1	True				
ANR	1253443	IdentifierDecl	code		1253432	0					
ANR	1253444	IdentifierDeclType	int		1253432	0					
ANR	1253445	Identifier	code		1253432	1					
ANR	1253446	IdentifierDeclStatement	"fixed ybot = max ( ybot0 , swap_axes ? pfs -> rect . p . x : pfs -> rect . p . y ) ;"	861:4:30725:30791	1253432	2	True				
ANR	1253447	IdentifierDecl	"ybot = max ( ybot0 , swap_axes ? pfs -> rect . p . x : pfs -> rect . p . y )"		1253432	0					
ANR	1253448	IdentifierDeclType	fixed		1253432	0					
ANR	1253449	Identifier	ybot		1253432	1					
ANR	1253450	AssignmentExpression	"ybot = max ( ybot0 , swap_axes ? pfs -> rect . p . x : pfs -> rect . p . y )"		1253432	2		=			
ANR	1253451	Identifier	ybot		1253432	0					
ANR	1253452	CallExpression	"max ( ybot0 , swap_axes ? pfs -> rect . p . x : pfs -> rect . p . y )"		1253432	1					
ANR	1253453	Callee	max		1253432	0					
ANR	1253454	Identifier	max		1253432	0					
ANR	1253455	ArgumentList	ybot0		1253432	1					
ANR	1253456	Argument	ybot0		1253432	0					
ANR	1253457	Identifier	ybot0		1253432	0					
ANR	1253458	Argument	swap_axes ? pfs -> rect . p . x : pfs -> rect . p . y		1253432	1					
ANR	1253459	ConditionalExpression	swap_axes ? pfs -> rect . p . x : pfs -> rect . p . y		1253432	0					
ANR	1253460	Condition	swap_axes		1253432	0					
ANR	1253461	Identifier	swap_axes		1253432	0					
ANR	1253462	MemberAccess	pfs -> rect . p . x		1253432	1					
ANR	1253463	MemberAccess	pfs -> rect . p		1253432	0					
ANR	1253464	PtrMemberAccess	pfs -> rect		1253432	0					
ANR	1253465	Identifier	pfs		1253432	0					
ANR	1253466	Identifier	rect		1253432	1					
ANR	1253467	Identifier	p		1253432	1					
ANR	1253468	Identifier	x		1253432	1					
ANR	1253469	MemberAccess	pfs -> rect . p . y		1253432	2					
ANR	1253470	MemberAccess	pfs -> rect . p		1253432	0					
ANR	1253471	PtrMemberAccess	pfs -> rect		1253432	0					
ANR	1253472	Identifier	pfs		1253432	0					
ANR	1253473	Identifier	rect		1253432	1					
ANR	1253474	Identifier	p		1253432	1					
ANR	1253475	Identifier	y		1253432	1					
ANR	1253476	IdentifierDeclStatement	"fixed ytop = min ( ytop0 , swap_axes ? pfs -> rect . q . x : pfs -> rect . q . y ) ;"	862:4:30797:30863	1253432	3	True				
ANR	1253477	IdentifierDecl	"ytop = min ( ytop0 , swap_axes ? pfs -> rect . q . x : pfs -> rect . q . y )"		1253432	0					
ANR	1253478	IdentifierDeclType	fixed		1253432	0					
ANR	1253479	Identifier	ytop		1253432	1					
ANR	1253480	AssignmentExpression	"ytop = min ( ytop0 , swap_axes ? pfs -> rect . q . x : pfs -> rect . q . y )"		1253432	2		=			
ANR	1253481	Identifier	ytop		1253432	0					
ANR	1253482	CallExpression	"min ( ytop0 , swap_axes ? pfs -> rect . q . x : pfs -> rect . q . y )"		1253432	1					
ANR	1253483	Callee	min		1253432	0					
ANR	1253484	Identifier	min		1253432	0					
ANR	1253485	ArgumentList	ytop0		1253432	1					
ANR	1253486	Argument	ytop0		1253432	0					
ANR	1253487	Identifier	ytop0		1253432	0					
ANR	1253488	Argument	swap_axes ? pfs -> rect . q . x : pfs -> rect . q . y		1253432	1					
ANR	1253489	ConditionalExpression	swap_axes ? pfs -> rect . q . x : pfs -> rect . q . y		1253432	0					
ANR	1253490	Condition	swap_axes		1253432	0					
ANR	1253491	Identifier	swap_axes		1253432	0					
ANR	1253492	MemberAccess	pfs -> rect . q . x		1253432	1					
ANR	1253493	MemberAccess	pfs -> rect . q		1253432	0					
ANR	1253494	PtrMemberAccess	pfs -> rect		1253432	0					
ANR	1253495	Identifier	pfs		1253432	0					
ANR	1253496	Identifier	rect		1253432	1					
ANR	1253497	Identifier	q		1253432	1					
ANR	1253498	Identifier	x		1253432	1					
ANR	1253499	MemberAccess	pfs -> rect . q . y		1253432	2					
ANR	1253500	MemberAccess	pfs -> rect . q		1253432	0					
ANR	1253501	PtrMemberAccess	pfs -> rect		1253432	0					
ANR	1253502	Identifier	pfs		1253432	0					
ANR	1253503	Identifier	rect		1253432	1					
ANR	1253504	Identifier	q		1253432	1					
ANR	1253505	Identifier	y		1253432	1					
ANR	1253506	IdentifierDeclStatement	fixed xleft = ( swap_axes ? pfs -> rect . p . y : pfs -> rect . p . x ) ;	863:4:30869:30927	1253432	4	True				
ANR	1253507	IdentifierDecl	xleft = ( swap_axes ? pfs -> rect . p . y : pfs -> rect . p . x )		1253432	0					
ANR	1253508	IdentifierDeclType	fixed		1253432	0					
ANR	1253509	Identifier	xleft		1253432	1					
ANR	1253510	AssignmentExpression	xleft = ( swap_axes ? pfs -> rect . p . y : pfs -> rect . p . x )		1253432	2		=			
ANR	1253511	Identifier	xleft		1253432	0					
ANR	1253512	ConditionalExpression	swap_axes ? pfs -> rect . p . y : pfs -> rect . p . x		1253432	1					
ANR	1253513	Condition	swap_axes		1253432	0					
ANR	1253514	Identifier	swap_axes		1253432	0					
ANR	1253515	MemberAccess	pfs -> rect . p . y		1253432	1					
ANR	1253516	MemberAccess	pfs -> rect . p		1253432	0					
ANR	1253517	PtrMemberAccess	pfs -> rect		1253432	0					
ANR	1253518	Identifier	pfs		1253432	0					
ANR	1253519	Identifier	rect		1253432	1					
ANR	1253520	Identifier	p		1253432	1					
ANR	1253521	Identifier	y		1253432	1					
ANR	1253522	MemberAccess	pfs -> rect . p . x		1253432	2					
ANR	1253523	MemberAccess	pfs -> rect . p		1253432	0					
ANR	1253524	PtrMemberAccess	pfs -> rect		1253432	0					
ANR	1253525	Identifier	pfs		1253432	0					
ANR	1253526	Identifier	rect		1253432	1					
ANR	1253527	Identifier	p		1253432	1					
ANR	1253528	Identifier	x		1253432	1					
ANR	1253529	IdentifierDeclStatement	fixed xright = ( swap_axes ? pfs -> rect . q . y : pfs -> rect . q . x ) ;	864:4:30933:30991	1253432	5	True				
ANR	1253530	IdentifierDecl	xright = ( swap_axes ? pfs -> rect . q . y : pfs -> rect . q . x )		1253432	0					
ANR	1253531	IdentifierDeclType	fixed		1253432	0					
ANR	1253532	Identifier	xright		1253432	1					
ANR	1253533	AssignmentExpression	xright = ( swap_axes ? pfs -> rect . q . y : pfs -> rect . q . x )		1253432	2		=			
ANR	1253534	Identifier	xright		1253432	0					
ANR	1253535	ConditionalExpression	swap_axes ? pfs -> rect . q . y : pfs -> rect . q . x		1253432	1					
ANR	1253536	Condition	swap_axes		1253432	0					
ANR	1253537	Identifier	swap_axes		1253432	0					
ANR	1253538	MemberAccess	pfs -> rect . q . y		1253432	1					
ANR	1253539	MemberAccess	pfs -> rect . q		1253432	0					
ANR	1253540	PtrMemberAccess	pfs -> rect		1253432	0					
ANR	1253541	Identifier	pfs		1253432	0					
ANR	1253542	Identifier	rect		1253432	1					
ANR	1253543	Identifier	q		1253432	1					
ANR	1253544	Identifier	y		1253432	1					
ANR	1253545	MemberAccess	pfs -> rect . q . x		1253432	2					
ANR	1253546	MemberAccess	pfs -> rect . q		1253432	0					
ANR	1253547	PtrMemberAccess	pfs -> rect		1253432	0					
ANR	1253548	Identifier	pfs		1253432	0					
ANR	1253549	Identifier	rect		1253432	1					
ANR	1253550	Identifier	q		1253432	1					
ANR	1253551	Identifier	x		1253432	1					
ANR	1253552	IfStatement	if ( ybot >= ytop )		1253432	6					
ANR	1253553	Condition	ybot >= ytop	866:8:31002:31013	1253432	0	True				
ANR	1253554	RelationalExpression	ybot >= ytop		1253432	0		>=			
ANR	1253555	Identifier	ybot		1253432	0					
ANR	1253556	Identifier	ytop		1253432	1					
ANR	1253557	ReturnStatement	return 0 ;	867:8:31024:31032	1253432	1	True				
ANR	1253558	PrimaryExpression	0		1253432	0					
ANR	1253559	Statement	if	868:4:31038:31039	1253432	7	True				
ANR	1253560	Statement	NOFILL_TEST	868:7:31041:31051	1253432	8	True				
ANR	1253561	IfStatement	if ( dbg_nofill )		1253432	9					
ANR	1253562	Condition	dbg_nofill	869:12:31065:31074	1253432	0	True				
ANR	1253563	Identifier	dbg_nofill		1253432	0					
ANR	1253564	ReturnStatement	return 0 ;	870:12:31089:31097	1253432	1	True				
ANR	1253565	PrimaryExpression	0		1253432	0					
ANR	1253566	IdentifierDeclStatement	"endif make_trapezoid ( q , vi0 , vi1 , vi2 , vi3 , ybot , ytop , swap_axes , orient , & le , & re ) ;"	871:4:31103:31191	1253432	10	True				
ANR	1253567	IdentifierDecl	"make_trapezoid ( q , vi0 , vi1 , vi2 , vi3 , ybot , ytop , swap_axes , orient , & le , & re )"		1253432	0					
ANR	1253568	IdentifierDeclType	endif		1253432	0					
ANR	1253569	Identifier	make_trapezoid		1253432	1					
ANR	1253570	Expression	"q , vi0 , vi1 , vi2 , vi3 , ybot , ytop , swap_axes , orient , & le , & re"		1253432	2					
ANR	1253571	Identifier	q		1253432	0					
ANR	1253572	Expression	"vi0 , vi1 , vi2 , vi3 , ybot , ytop , swap_axes , orient , & le , & re"		1253432	1					
ANR	1253573	Identifier	vi0		1253432	0					
ANR	1253574	Expression	"vi1 , vi2 , vi3 , ybot , ytop , swap_axes , orient , & le , & re"		1253432	1					
ANR	1253575	Identifier	vi1		1253432	0					
ANR	1253576	Expression	"vi2 , vi3 , ybot , ytop , swap_axes , orient , & le , & re"		1253432	1					
ANR	1253577	Identifier	vi2		1253432	0					
ANR	1253578	Expression	"vi3 , ybot , ytop , swap_axes , orient , & le , & re"		1253432	1					
ANR	1253579	Identifier	vi3		1253432	0					
ANR	1253580	Expression	"ybot , ytop , swap_axes , orient , & le , & re"		1253432	1					
ANR	1253581	Identifier	ybot		1253432	0					
ANR	1253582	Expression	"ytop , swap_axes , orient , & le , & re"		1253432	1					
ANR	1253583	Identifier	ytop		1253432	0					
ANR	1253584	Expression	"swap_axes , orient , & le , & re"		1253432	1					
ANR	1253585	Identifier	swap_axes		1253432	0					
ANR	1253586	Expression	"orient , & le , & re"		1253432	1					
ANR	1253587	Identifier	orient		1253432	0					
ANR	1253588	Expression	"& le , & re"		1253432	1					
ANR	1253589	UnaryOperationExpression	& le		1253432	0					
ANR	1253590	UnaryOperator	&		1253432	0					
ANR	1253591	Identifier	le		1253432	1					
ANR	1253592	UnaryOperationExpression	& re		1253432	1					
ANR	1253593	UnaryOperator	&		1253432	0					
ANR	1253594	Identifier	re		1253432	1					
ANR	1253595	IfStatement	if ( ! pfs -> inside )		1253432	11					
ANR	1253596	Condition	! pfs -> inside	873:8:31201:31212	1253432	0	True				
ANR	1253597	UnaryOperationExpression	! pfs -> inside		1253432	0					
ANR	1253598	UnaryOperator	!		1253432	0					
ANR	1253599	PtrMemberAccess	pfs -> inside		1253432	1					
ANR	1253600	Identifier	pfs		1253432	0					
ANR	1253601	Identifier	inside		1253432	1					
ANR	1253602	CompoundStatement		17:8:545:562	1253432	1					
ANR	1253603	IdentifierDeclStatement	bool clip = false ;	874:8:31225:31242	1253432	0	True				
ANR	1253604	IdentifierDecl	clip = false		1253432	0					
ANR	1253605	IdentifierDeclType	bool		1253432	0					
ANR	1253606	Identifier	clip		1253432	1					
ANR	1253607	AssignmentExpression	clip = false		1253432	2		=			
ANR	1253608	Identifier	false		1253432	0					
ANR	1253609	Identifier	false		1253432	1					
ANR	1253610	IfStatement	if ( le . start . x > xright )		1253432	1					
ANR	1253611	Condition	le . start . x > xright	884:12:31836:31854	1253432	0	True				
ANR	1253612	RelationalExpression	le . start . x > xright		1253432	0		>			
ANR	1253613	MemberAccess	le . start . x		1253432	0					
ANR	1253614	MemberAccess	le . start		1253432	0					
ANR	1253615	Identifier	le		1253432	0					
ANR	1253616	Identifier	start		1253432	1					
ANR	1253617	Identifier	x		1253432	1					
ANR	1253618	Identifier	xright		1253432	1					
ANR	1253619	CompoundStatement		27:33:1177:1177	1253432	1					
ANR	1253620	IfStatement	if ( le . end . x > xright )		1253432	0					
ANR	1253621	Condition	le . end . x > xright	885:16:31875:31891	1253432	0	True				
ANR	1253622	RelationalExpression	le . end . x > xright		1253432	0		>			
ANR	1253623	MemberAccess	le . end . x		1253432	0					
ANR	1253624	MemberAccess	le . end		1253432	0					
ANR	1253625	Identifier	le		1253432	0					
ANR	1253626	Identifier	end		1253432	1					
ANR	1253627	Identifier	x		1253432	1					
ANR	1253628	Identifier	xright		1253432	1					
ANR	1253629	CompoundStatement		28:35:1214:1214	1253432	1					
ANR	1253630	ReturnStatement	return 0 ;	886:16:31912:31920	1253432	0	True				
ANR	1253631	PrimaryExpression	0		1253432	0					
ANR	1253632	ExpressionStatement	clip = true	888:12:31948:31959	1253432	1	True				
ANR	1253633	AssignmentExpression	clip = true		1253432	0		=			
ANR	1253634	Identifier	clip		1253432	0					
ANR	1253635	Identifier	true		1253432	1					
ANR	1253636	ElseStatement	else		1253432	0					
ANR	1253637	IfStatement	if ( le . end . x > xright )		1253432	0					
ANR	1253638	Condition	le . end . x > xright	889:19:31980:31996	1253432	0	True				
ANR	1253639	RelationalExpression	le . end . x > xright		1253432	0		>			
ANR	1253640	MemberAccess	le . end . x		1253432	0					
ANR	1253641	MemberAccess	le . end		1253432	0					
ANR	1253642	Identifier	le		1253432	0					
ANR	1253643	Identifier	end		1253432	1					
ANR	1253644	Identifier	x		1253432	1					
ANR	1253645	Identifier	xright		1253432	1					
ANR	1253646	CompoundStatement		32:38:1319:1319	1253432	1					
ANR	1253647	ExpressionStatement	clip = true	890:12:32013:32024	1253432	0	True				
ANR	1253648	AssignmentExpression	clip = true		1253432	0		=			
ANR	1253649	Identifier	clip		1253432	0					
ANR	1253650	Identifier	true		1253432	1					
ANR	1253651	IfStatement	if ( le . start . x < xleft )		1253432	2					
ANR	1253652	Condition	le . start . x < xleft	892:12:32048:32065	1253432	0	True				
ANR	1253653	RelationalExpression	le . start . x < xleft		1253432	0		<			
ANR	1253654	MemberAccess	le . start . x		1253432	0					
ANR	1253655	MemberAccess	le . start		1253432	0					
ANR	1253656	Identifier	le		1253432	0					
ANR	1253657	Identifier	start		1253432	1					
ANR	1253658	Identifier	x		1253432	1					
ANR	1253659	Identifier	xleft		1253432	1					
ANR	1253660	CompoundStatement		35:32:1388:1388	1253432	1					
ANR	1253661	IfStatement	if ( le . end . x < xleft )		1253432	0					
ANR	1253662	Condition	le . end . x < xleft	893:16:32086:32101	1253432	0	True				
ANR	1253663	RelationalExpression	le . end . x < xleft		1253432	0		<			
ANR	1253664	MemberAccess	le . end . x		1253432	0					
ANR	1253665	MemberAccess	le . end		1253432	0					
ANR	1253666	Identifier	le		1253432	0					
ANR	1253667	Identifier	end		1253432	1					
ANR	1253668	Identifier	x		1253432	1					
ANR	1253669	Identifier	xleft		1253432	1					
ANR	1253670	CompoundStatement		36:34:1424:1424	1253432	1					
ANR	1253671	ExpressionStatement	le . start . x = xleft	894:16:32122:32140	1253432	0	True				
ANR	1253672	AssignmentExpression	le . start . x = xleft		1253432	0		=			
ANR	1253673	MemberAccess	le . start . x		1253432	0					
ANR	1253674	MemberAccess	le . start		1253432	0					
ANR	1253675	Identifier	le		1253432	0					
ANR	1253676	Identifier	start		1253432	1					
ANR	1253677	Identifier	x		1253432	1					
ANR	1253678	Identifier	xleft		1253432	1					
ANR	1253679	ExpressionStatement	le . end . x = xleft	895:16:32158:32176	1253432	1	True				
ANR	1253680	AssignmentExpression	le . end . x = xleft		1253432	0		=			
ANR	1253681	MemberAccess	le . end . x		1253432	0					
ANR	1253682	MemberAccess	le . end		1253432	0					
ANR	1253683	Identifier	le		1253432	0					
ANR	1253684	Identifier	end		1253432	1					
ANR	1253685	Identifier	x		1253432	1					
ANR	1253686	Identifier	xleft		1253432	1					
ANR	1253687	ExpressionStatement	le . start . y = ybot	896:16:32194:32211	1253432	2	True				
ANR	1253688	AssignmentExpression	le . start . y = ybot		1253432	0		=			
ANR	1253689	MemberAccess	le . start . y		1253432	0					
ANR	1253690	MemberAccess	le . start		1253432	0					
ANR	1253691	Identifier	le		1253432	0					
ANR	1253692	Identifier	start		1253432	1					
ANR	1253693	Identifier	y		1253432	1					
ANR	1253694	Identifier	ybot		1253432	1					
ANR	1253695	ExpressionStatement	le . end . y = ytop	897:16:32229:32246	1253432	3	True				
ANR	1253696	AssignmentExpression	le . end . y = ytop		1253432	0		=			
ANR	1253697	MemberAccess	le . end . y		1253432	0					
ANR	1253698	MemberAccess	le . end		1253432	0					
ANR	1253699	Identifier	le		1253432	0					
ANR	1253700	Identifier	end		1253432	1					
ANR	1253701	Identifier	y		1253432	1					
ANR	1253702	Identifier	ytop		1253432	1					
ANR	1253703	ElseStatement	else		1253432	0					
ANR	1253704	CompoundStatement		41:19:1587:1587	1253432	0					
ANR	1253705	ExpressionStatement	clip = true	899:16:32285:32296	1253432	0	True				
ANR	1253706	AssignmentExpression	clip = true		1253432	0		=			
ANR	1253707	Identifier	clip		1253432	0					
ANR	1253708	Identifier	true		1253432	1					
ANR	1253709	ElseStatement	else		1253432	0					
ANR	1253710	IfStatement	if ( le . end . x < xleft )		1253432	0					
ANR	1253711	Condition	le . end . x < xleft	901:19:32331:32346	1253432	0	True				
ANR	1253712	RelationalExpression	le . end . x < xleft		1253432	0		<			
ANR	1253713	MemberAccess	le . end . x		1253432	0					
ANR	1253714	MemberAccess	le . end		1253432	0					
ANR	1253715	Identifier	le		1253432	0					
ANR	1253716	Identifier	end		1253432	1					
ANR	1253717	Identifier	x		1253432	1					
ANR	1253718	Identifier	xleft		1253432	1					
ANR	1253719	CompoundStatement		44:37:1669:1669	1253432	1					
ANR	1253720	ExpressionStatement	clip = true	902:12:32363:32374	1253432	0	True				
ANR	1253721	AssignmentExpression	clip = true		1253432	0		=			
ANR	1253722	Identifier	clip		1253432	0					
ANR	1253723	Identifier	true		1253432	1					
ANR	1253724	IfStatement	if ( re . start . x < xleft )		1253432	3					
ANR	1253725	Condition	re . start . x < xleft	904:12:32398:32415	1253432	0	True				
ANR	1253726	RelationalExpression	re . start . x < xleft		1253432	0		<			
ANR	1253727	MemberAccess	re . start . x		1253432	0					
ANR	1253728	MemberAccess	re . start		1253432	0					
ANR	1253729	Identifier	re		1253432	0					
ANR	1253730	Identifier	start		1253432	1					
ANR	1253731	Identifier	x		1253432	1					
ANR	1253732	Identifier	xleft		1253432	1					
ANR	1253733	CompoundStatement		47:32:1738:1738	1253432	1					
ANR	1253734	IfStatement	if ( re . end . x < xleft )		1253432	0					
ANR	1253735	Condition	re . end . x < xleft	905:16:32436:32451	1253432	0	True				
ANR	1253736	RelationalExpression	re . end . x < xleft		1253432	0		<			
ANR	1253737	MemberAccess	re . end . x		1253432	0					
ANR	1253738	MemberAccess	re . end		1253432	0					
ANR	1253739	Identifier	re		1253432	0					
ANR	1253740	Identifier	end		1253432	1					
ANR	1253741	Identifier	x		1253432	1					
ANR	1253742	Identifier	xleft		1253432	1					
ANR	1253743	CompoundStatement		48:34:1774:1774	1253432	1					
ANR	1253744	ReturnStatement	return 0 ;	906:16:32472:32480	1253432	0	True				
ANR	1253745	PrimaryExpression	0		1253432	0					
ANR	1253746	ExpressionStatement	clip = true	908:12:32508:32519	1253432	1	True				
ANR	1253747	AssignmentExpression	clip = true		1253432	0		=			
ANR	1253748	Identifier	clip		1253432	0					
ANR	1253749	Identifier	true		1253432	1					
ANR	1253750	ElseStatement	else		1253432	0					
ANR	1253751	IfStatement	if ( re . end . x < xleft )		1253432	0					
ANR	1253752	Condition	re . end . x < xleft	909:19:32540:32555	1253432	0	True				
ANR	1253753	RelationalExpression	re . end . x < xleft		1253432	0		<			
ANR	1253754	MemberAccess	re . end . x		1253432	0					
ANR	1253755	MemberAccess	re . end		1253432	0					
ANR	1253756	Identifier	re		1253432	0					
ANR	1253757	Identifier	end		1253432	1					
ANR	1253758	Identifier	x		1253432	1					
ANR	1253759	Identifier	xleft		1253432	1					
ANR	1253760	CompoundStatement		52:37:1878:1878	1253432	1					
ANR	1253761	ExpressionStatement	clip = true	910:12:32572:32583	1253432	0	True				
ANR	1253762	AssignmentExpression	clip = true		1253432	0		=			
ANR	1253763	Identifier	clip		1253432	0					
ANR	1253764	Identifier	true		1253432	1					
ANR	1253765	IfStatement	if ( re . start . x > xright )		1253432	4					
ANR	1253766	Condition	re . start . x > xright	912:12:32607:32625	1253432	0	True				
ANR	1253767	RelationalExpression	re . start . x > xright		1253432	0		>			
ANR	1253768	MemberAccess	re . start . x		1253432	0					
ANR	1253769	MemberAccess	re . start		1253432	0					
ANR	1253770	Identifier	re		1253432	0					
ANR	1253771	Identifier	start		1253432	1					
ANR	1253772	Identifier	x		1253432	1					
ANR	1253773	Identifier	xright		1253432	1					
ANR	1253774	CompoundStatement		55:33:1948:1948	1253432	1					
ANR	1253775	IfStatement	if ( re . end . x > xright )		1253432	0					
ANR	1253776	Condition	re . end . x > xright	913:16:32646:32662	1253432	0	True				
ANR	1253777	RelationalExpression	re . end . x > xright		1253432	0		>			
ANR	1253778	MemberAccess	re . end . x		1253432	0					
ANR	1253779	MemberAccess	re . end		1253432	0					
ANR	1253780	Identifier	re		1253432	0					
ANR	1253781	Identifier	end		1253432	1					
ANR	1253782	Identifier	x		1253432	1					
ANR	1253783	Identifier	xright		1253432	1					
ANR	1253784	CompoundStatement		56:35:1985:1985	1253432	1					
ANR	1253785	ExpressionStatement	re . start . x = xright	914:16:32683:32702	1253432	0	True				
ANR	1253786	AssignmentExpression	re . start . x = xright		1253432	0		=			
ANR	1253787	MemberAccess	re . start . x		1253432	0					
ANR	1253788	MemberAccess	re . start		1253432	0					
ANR	1253789	Identifier	re		1253432	0					
ANR	1253790	Identifier	start		1253432	1					
ANR	1253791	Identifier	x		1253432	1					
ANR	1253792	Identifier	xright		1253432	1					
ANR	1253793	ExpressionStatement	re . end . x = xright	915:16:32720:32739	1253432	1	True				
ANR	1253794	AssignmentExpression	re . end . x = xright		1253432	0		=			
ANR	1253795	MemberAccess	re . end . x		1253432	0					
ANR	1253796	MemberAccess	re . end		1253432	0					
ANR	1253797	Identifier	re		1253432	0					
ANR	1253798	Identifier	end		1253432	1					
ANR	1253799	Identifier	x		1253432	1					
ANR	1253800	Identifier	xright		1253432	1					
ANR	1253801	ExpressionStatement	re . start . y = ybot	916:16:32757:32774	1253432	2	True				
ANR	1253802	AssignmentExpression	re . start . y = ybot		1253432	0		=			
ANR	1253803	MemberAccess	re . start . y		1253432	0					
ANR	1253804	MemberAccess	re . start		1253432	0					
ANR	1253805	Identifier	re		1253432	0					
ANR	1253806	Identifier	start		1253432	1					
ANR	1253807	Identifier	y		1253432	1					
ANR	1253808	Identifier	ybot		1253432	1					
ANR	1253809	ExpressionStatement	re . end . y = ytop	917:16:32792:32809	1253432	3	True				
ANR	1253810	AssignmentExpression	re . end . y = ytop		1253432	0		=			
ANR	1253811	MemberAccess	re . end . y		1253432	0					
ANR	1253812	MemberAccess	re . end		1253432	0					
ANR	1253813	Identifier	re		1253432	0					
ANR	1253814	Identifier	end		1253432	1					
ANR	1253815	Identifier	y		1253432	1					
ANR	1253816	Identifier	ytop		1253432	1					
ANR	1253817	ElseStatement	else		1253432	0					
ANR	1253818	CompoundStatement		61:19:2150:2150	1253432	0					
ANR	1253819	ExpressionStatement	clip = true	919:16:32848:32859	1253432	0	True				
ANR	1253820	AssignmentExpression	clip = true		1253432	0		=			
ANR	1253821	Identifier	clip		1253432	0					
ANR	1253822	Identifier	true		1253432	1					
ANR	1253823	ElseStatement	else		1253432	0					
ANR	1253824	IfStatement	if ( re . end . x > xright )		1253432	0					
ANR	1253825	Condition	re . end . x > xright	921:19:32894:32910	1253432	0	True				
ANR	1253826	RelationalExpression	re . end . x > xright		1253432	0		>			
ANR	1253827	MemberAccess	re . end . x		1253432	0					
ANR	1253828	MemberAccess	re . end		1253432	0					
ANR	1253829	Identifier	re		1253432	0					
ANR	1253830	Identifier	end		1253432	1					
ANR	1253831	Identifier	x		1253432	1					
ANR	1253832	Identifier	xright		1253432	1					
ANR	1253833	CompoundStatement		64:38:2233:2233	1253432	1					
ANR	1253834	ExpressionStatement	clip = true	922:12:32927:32938	1253432	0	True				
ANR	1253835	AssignmentExpression	clip = true		1253432	0		=			
ANR	1253836	Identifier	clip		1253432	0					
ANR	1253837	Identifier	true		1253432	1					
ANR	1253838	IfStatement	if ( clip )		1253432	5					
ANR	1253839	Condition	clip	924:12:32962:32965	1253432	0	True				
ANR	1253840	Identifier	clip		1253432	0					
ANR	1253841	CompoundStatement		73:12:2535:2565	1253432	1					
ANR	1253842	IdentifierDeclStatement	"gs_fixed_edge lenew , renew ;"	929:12:33175:33201	1253432	0	True				
ANR	1253843	IdentifierDecl	lenew		1253432	0					
ANR	1253844	IdentifierDeclType	gs_fixed_edge		1253432	0					
ANR	1253845	Identifier	lenew		1253432	1					
ANR	1253846	IdentifierDecl	renew		1253432	1					
ANR	1253847	IdentifierDeclType	gs_fixed_edge		1253432	0					
ANR	1253848	Identifier	renew		1253432	1					
ANR	1253849	IdentifierDeclStatement	"fixed ybl , ybr , ytl , ytr , ymid ;"	930:12:33215:33245	1253432	1	True				
ANR	1253850	IdentifierDecl	ybl		1253432	0					
ANR	1253851	IdentifierDeclType	fixed		1253432	0					
ANR	1253852	Identifier	ybl		1253432	1					
ANR	1253853	IdentifierDecl	ybr		1253432	1					
ANR	1253854	IdentifierDeclType	fixed		1253432	0					
ANR	1253855	Identifier	ybr		1253432	1					
ANR	1253856	IdentifierDecl	ytl		1253432	2					
ANR	1253857	IdentifierDeclType	fixed		1253432	0					
ANR	1253858	Identifier	ytl		1253432	1					
ANR	1253859	IdentifierDecl	ytr		1253432	3					
ANR	1253860	IdentifierDeclType	fixed		1253432	0					
ANR	1253861	Identifier	ytr		1253432	1					
ANR	1253862	IdentifierDecl	ymid		1253432	4					
ANR	1253863	IdentifierDeclType	fixed		1253432	0					
ANR	1253864	Identifier	ymid		1253432	1					
ANR	1253865	IfStatement	if ( re . start . x > re . end . x )		1253432	2					
ANR	1253866	Condition	re . start . x > re . end . x	933:16:33335:33355	1253432	0	True				
ANR	1253867	RelationalExpression	re . start . x > re . end . x		1253432	0		>			
ANR	1253868	MemberAccess	re . start . x		1253432	0					
ANR	1253869	MemberAccess	re . start		1253432	0					
ANR	1253870	Identifier	re		1253432	0					
ANR	1253871	Identifier	start		1253432	1					
ANR	1253872	Identifier	x		1253432	1					
ANR	1253873	MemberAccess	re . end . x		1253432	1					
ANR	1253874	MemberAccess	re . end		1253432	0					
ANR	1253875	Identifier	re		1253432	0					
ANR	1253876	Identifier	end		1253432	1					
ANR	1253877	Identifier	x		1253432	1					
ANR	1253878	CompoundStatement		76:39:2678:2678	1253432	1					
ANR	1253879	IfStatement	if ( re . start . x < xright )		1253432	0					
ANR	1253880	Condition	re . start . x < xright	934:20:33380:33398	1253432	0	True				
ANR	1253881	RelationalExpression	re . start . x < xright		1253432	0		<			
ANR	1253882	MemberAccess	re . start . x		1253432	0					
ANR	1253883	MemberAccess	re . start		1253432	0					
ANR	1253884	Identifier	re		1253432	0					
ANR	1253885	Identifier	start		1253432	1					
ANR	1253886	Identifier	x		1253432	1					
ANR	1253887	Identifier	xright		1253432	1					
ANR	1253888	ExpressionStatement	xright = re . start . x	935:20:33421:33440	1253432	1	True				
ANR	1253889	AssignmentExpression	xright = re . start . x		1253432	0		=			
ANR	1253890	Identifier	xright		1253432	0					
ANR	1253891	MemberAccess	re . start . x		1253432	1					
ANR	1253892	MemberAccess	re . start		1253432	0					
ANR	1253893	Identifier	re		1253432	0					
ANR	1253894	Identifier	start		1253432	1					
ANR	1253895	Identifier	x		1253432	1					
ANR	1253896	ElseStatement	else		1253432	0					
ANR	1253897	IfStatement	if ( re . end . x < xright )		1253432	0					
ANR	1253898	Condition	re . end . x < xright	936:23:33465:33481	1253432	0	True				
ANR	1253899	RelationalExpression	re . end . x < xright		1253432	0		<			
ANR	1253900	MemberAccess	re . end . x		1253432	0					
ANR	1253901	MemberAccess	re . end		1253432	0					
ANR	1253902	Identifier	re		1253432	0					
ANR	1253903	Identifier	end		1253432	1					
ANR	1253904	Identifier	x		1253432	1					
ANR	1253905	Identifier	xright		1253432	1					
ANR	1253906	ExpressionStatement	xright = re . end . x	937:16:33500:33517	1253432	1	True				
ANR	1253907	AssignmentExpression	xright = re . end . x		1253432	0		=			
ANR	1253908	Identifier	xright		1253432	0					
ANR	1253909	MemberAccess	re . end . x		1253432	1					
ANR	1253910	MemberAccess	re . end		1253432	0					
ANR	1253911	Identifier	re		1253432	0					
ANR	1253912	Identifier	end		1253432	1					
ANR	1253913	Identifier	x		1253432	1					
ANR	1253914	IfStatement	if ( le . start . x > le . end . x )		1253432	3					
ANR	1253915	Condition	le . start . x > le . end . x	938:16:33535:33555	1253432	0	True				
ANR	1253916	RelationalExpression	le . start . x > le . end . x		1253432	0		>			
ANR	1253917	MemberAccess	le . start . x		1253432	0					
ANR	1253918	MemberAccess	le . start		1253432	0					
ANR	1253919	Identifier	le		1253432	0					
ANR	1253920	Identifier	start		1253432	1					
ANR	1253921	Identifier	x		1253432	1					
ANR	1253922	MemberAccess	le . end . x		1253432	1					
ANR	1253923	MemberAccess	le . end		1253432	0					
ANR	1253924	Identifier	le		1253432	0					
ANR	1253925	Identifier	end		1253432	1					
ANR	1253926	Identifier	x		1253432	1					
ANR	1253927	CompoundStatement		81:39:2878:2878	1253432	1					
ANR	1253928	IfStatement	if ( le . end . x > xleft )		1253432	0					
ANR	1253929	Condition	le . end . x > xleft	939:20:33580:33595	1253432	0	True				
ANR	1253930	RelationalExpression	le . end . x > xleft		1253432	0		>			
ANR	1253931	MemberAccess	le . end . x		1253432	0					
ANR	1253932	MemberAccess	le . end		1253432	0					
ANR	1253933	Identifier	le		1253432	0					
ANR	1253934	Identifier	end		1253432	1					
ANR	1253935	Identifier	x		1253432	1					
ANR	1253936	Identifier	xleft		1253432	1					
ANR	1253937	ExpressionStatement	xleft = le . end . x	940:20:33618:33634	1253432	1	True				
ANR	1253938	AssignmentExpression	xleft = le . end . x		1253432	0		=			
ANR	1253939	Identifier	xleft		1253432	0					
ANR	1253940	MemberAccess	le . end . x		1253432	1					
ANR	1253941	MemberAccess	le . end		1253432	0					
ANR	1253942	Identifier	le		1253432	0					
ANR	1253943	Identifier	end		1253432	1					
ANR	1253944	Identifier	x		1253432	1					
ANR	1253945	ElseStatement	else		1253432	0					
ANR	1253946	IfStatement	if ( le . start . x > xleft )		1253432	0					
ANR	1253947	Condition	le . start . x > xleft	941:23:33659:33676	1253432	0	True				
ANR	1253948	RelationalExpression	le . start . x > xleft		1253432	0		>			
ANR	1253949	MemberAccess	le . start . x		1253432	0					
ANR	1253950	MemberAccess	le . start		1253432	0					
ANR	1253951	Identifier	le		1253432	0					
ANR	1253952	Identifier	start		1253432	1					
ANR	1253953	Identifier	x		1253432	1					
ANR	1253954	Identifier	xleft		1253432	1					
ANR	1253955	ExpressionStatement	xleft = le . start . x	942:16:33695:33713	1253432	1	True				
ANR	1253956	AssignmentExpression	xleft = le . start . x		1253432	0		=			
ANR	1253957	Identifier	xleft		1253432	0					
ANR	1253958	MemberAccess	le . start . x		1253432	1					
ANR	1253959	MemberAccess	le . start		1253432	0					
ANR	1253960	Identifier	le		1253432	0					
ANR	1253961	Identifier	start		1253432	1					
ANR	1253962	Identifier	x		1253432	1					
ANR	1253963	IfStatement	if ( le . start . x > xright )		1253432	4					
ANR	1253964	Condition	le . start . x > xright	946:16:33880:33898	1253432	0	True				
ANR	1253965	RelationalExpression	le . start . x > xright		1253432	0		>			
ANR	1253966	MemberAccess	le . start . x		1253432	0					
ANR	1253967	MemberAccess	le . start		1253432	0					
ANR	1253968	Identifier	le		1253432	0					
ANR	1253969	Identifier	start		1253432	1					
ANR	1253970	Identifier	x		1253432	1					
ANR	1253971	Identifier	xright		1253432	1					
ANR	1253972	CompoundStatement		89:37:3221:3221	1253432	1					
ANR	1253973	ExpressionStatement	le . start . y += ( fixed ) ( ( int64_t ) ( le . end . y - le . start . y ) * ( int64_t ) ( le . start . x - xright ) / ( int64_t ) ( le . start . x - le . end . x ) )	947:16:33919:34110	1253432	0	True				
ANR	1253974	AssignmentExpression	le . start . y += ( fixed ) ( ( int64_t ) ( le . end . y - le . start . y ) * ( int64_t ) ( le . start . x - xright ) / ( int64_t ) ( le . start . x - le . end . x ) )		1253432	0		+=			
ANR	1253975	MemberAccess	le . start . y		1253432	0					
ANR	1253976	MemberAccess	le . start		1253432	0					
ANR	1253977	Identifier	le		1253432	0					
ANR	1253978	Identifier	start		1253432	1					
ANR	1253979	Identifier	y		1253432	1					
ANR	1253980	CastExpression	( fixed ) ( ( int64_t ) ( le . end . y - le . start . y ) * ( int64_t ) ( le . start . x - xright ) / ( int64_t ) ( le . start . x - le . end . x ) )		1253432	1					
ANR	1253981	CastTarget	fixed		1253432	0					
ANR	1253982	MultiplicativeExpression	( int64_t ) ( le . end . y - le . start . y ) * ( int64_t ) ( le . start . x - xright ) / ( int64_t ) ( le . start . x - le . end . x )		1253432	1		*			
ANR	1253983	CastExpression	( int64_t ) ( le . end . y - le . start . y )		1253432	0					
ANR	1253984	CastTarget	int64_t		1253432	0					
ANR	1253985	AdditiveExpression	le . end . y - le . start . y		1253432	1		-			
ANR	1253986	MemberAccess	le . end . y		1253432	0					
ANR	1253987	MemberAccess	le . end		1253432	0					
ANR	1253988	Identifier	le		1253432	0					
ANR	1253989	Identifier	end		1253432	1					
ANR	1253990	Identifier	y		1253432	1					
ANR	1253991	MemberAccess	le . start . y		1253432	1					
ANR	1253992	MemberAccess	le . start		1253432	0					
ANR	1253993	Identifier	le		1253432	0					
ANR	1253994	Identifier	start		1253432	1					
ANR	1253995	Identifier	y		1253432	1					
ANR	1253996	MultiplicativeExpression	( int64_t ) ( le . start . x - xright ) / ( int64_t ) ( le . start . x - le . end . x )		1253432	1		/			
ANR	1253997	CastExpression	( int64_t ) ( le . start . x - xright )		1253432	0					
ANR	1253998	CastTarget	int64_t		1253432	0					
ANR	1253999	AdditiveExpression	le . start . x - xright		1253432	1		-			
ANR	1254000	MemberAccess	le . start . x		1253432	0					
ANR	1254001	MemberAccess	le . start		1253432	0					
ANR	1254002	Identifier	le		1253432	0					
ANR	1254003	Identifier	start		1253432	1					
ANR	1254004	Identifier	x		1253432	1					
ANR	1254005	Identifier	xright		1253432	1					
ANR	1254006	CastExpression	( int64_t ) ( le . start . x - le . end . x )		1253432	1					
ANR	1254007	CastTarget	int64_t		1253432	0					
ANR	1254008	AdditiveExpression	le . start . x - le . end . x		1253432	1		-			
ANR	1254009	MemberAccess	le . start . x		1253432	0					
ANR	1254010	MemberAccess	le . start		1253432	0					
ANR	1254011	Identifier	le		1253432	0					
ANR	1254012	Identifier	start		1253432	1					
ANR	1254013	Identifier	x		1253432	1					
ANR	1254014	MemberAccess	le . end . x		1253432	1					
ANR	1254015	MemberAccess	le . end		1253432	0					
ANR	1254016	Identifier	le		1253432	0					
ANR	1254017	Identifier	end		1253432	1					
ANR	1254018	Identifier	x		1253432	1					
ANR	1254019	IfStatement	if ( le . start . y > ybot )		1253432	1					
ANR	1254020	Condition	le . start . y > ybot	950:20:34132:34148	1253432	0	True				
ANR	1254021	RelationalExpression	le . start . y > ybot		1253432	0		>			
ANR	1254022	MemberAccess	le . start . y		1253432	0					
ANR	1254023	MemberAccess	le . start		1253432	0					
ANR	1254024	Identifier	le		1253432	0					
ANR	1254025	Identifier	start		1253432	1					
ANR	1254026	Identifier	y		1253432	1					
ANR	1254027	Identifier	ybot		1253432	1					
ANR	1254028	CompoundStatement		93:39:3471:3471	1253432	1					
ANR	1254029	ExpressionStatement	ybot = le . start . y	951:20:34173:34190	1253432	0	True				
ANR	1254030	AssignmentExpression	ybot = le . start . y		1253432	0		=			
ANR	1254031	Identifier	ybot		1253432	0					
ANR	1254032	MemberAccess	le . start . y		1253432	1					
ANR	1254033	MemberAccess	le . start		1253432	0					
ANR	1254034	Identifier	le		1253432	0					
ANR	1254035	Identifier	start		1253432	1					
ANR	1254036	Identifier	y		1253432	1					
ANR	1254037	ExpressionStatement	le . start . x = xright	953:16:34226:34245	1253432	2	True				
ANR	1254038	AssignmentExpression	le . start . x = xright		1253432	0		=			
ANR	1254039	MemberAccess	le . start . x		1253432	0					
ANR	1254040	MemberAccess	le . start		1253432	0					
ANR	1254041	Identifier	le		1253432	0					
ANR	1254042	Identifier	start		1253432	1					
ANR	1254043	Identifier	x		1253432	1					
ANR	1254044	Identifier	xright		1253432	1					
ANR	1254045	IfStatement	if ( re . start . x < xleft )		1253432	5					
ANR	1254046	Condition	re . start . x < xleft	955:16:34277:34294	1253432	0	True				
ANR	1254047	RelationalExpression	re . start . x < xleft		1253432	0		<			
ANR	1254048	MemberAccess	re . start . x		1253432	0					
ANR	1254049	MemberAccess	re . start		1253432	0					
ANR	1254050	Identifier	re		1253432	0					
ANR	1254051	Identifier	start		1253432	1					
ANR	1254052	Identifier	x		1253432	1					
ANR	1254053	Identifier	xleft		1253432	1					
ANR	1254054	CompoundStatement		98:36:3617:3617	1253432	1					
ANR	1254055	ExpressionStatement	re . start . y += ( fixed ) ( ( int64_t ) ( re . end . y - re . start . y ) * ( int64_t ) ( xleft - re . start . x ) / ( int64_t ) ( re . end . x - re . start . x ) )	956:16:34315:34505	1253432	0	True				
ANR	1254056	AssignmentExpression	re . start . y += ( fixed ) ( ( int64_t ) ( re . end . y - re . start . y ) * ( int64_t ) ( xleft - re . start . x ) / ( int64_t ) ( re . end . x - re . start . x ) )		1253432	0		+=			
ANR	1254057	MemberAccess	re . start . y		1253432	0					
ANR	1254058	MemberAccess	re . start		1253432	0					
ANR	1254059	Identifier	re		1253432	0					
ANR	1254060	Identifier	start		1253432	1					
ANR	1254061	Identifier	y		1253432	1					
ANR	1254062	CastExpression	( fixed ) ( ( int64_t ) ( re . end . y - re . start . y ) * ( int64_t ) ( xleft - re . start . x ) / ( int64_t ) ( re . end . x - re . start . x ) )		1253432	1					
ANR	1254063	CastTarget	fixed		1253432	0					
ANR	1254064	MultiplicativeExpression	( int64_t ) ( re . end . y - re . start . y ) * ( int64_t ) ( xleft - re . start . x ) / ( int64_t ) ( re . end . x - re . start . x )		1253432	1		*			
ANR	1254065	CastExpression	( int64_t ) ( re . end . y - re . start . y )		1253432	0					
ANR	1254066	CastTarget	int64_t		1253432	0					
ANR	1254067	AdditiveExpression	re . end . y - re . start . y		1253432	1		-			
ANR	1254068	MemberAccess	re . end . y		1253432	0					
ANR	1254069	MemberAccess	re . end		1253432	0					
ANR	1254070	Identifier	re		1253432	0					
ANR	1254071	Identifier	end		1253432	1					
ANR	1254072	Identifier	y		1253432	1					
ANR	1254073	MemberAccess	re . start . y		1253432	1					
ANR	1254074	MemberAccess	re . start		1253432	0					
ANR	1254075	Identifier	re		1253432	0					
ANR	1254076	Identifier	start		1253432	1					
ANR	1254077	Identifier	y		1253432	1					
ANR	1254078	MultiplicativeExpression	( int64_t ) ( xleft - re . start . x ) / ( int64_t ) ( re . end . x - re . start . x )		1253432	1		/			
ANR	1254079	CastExpression	( int64_t ) ( xleft - re . start . x )		1253432	0					
ANR	1254080	CastTarget	int64_t		1253432	0					
ANR	1254081	AdditiveExpression	xleft - re . start . x		1253432	1		-			
ANR	1254082	Identifier	xleft		1253432	0					
ANR	1254083	MemberAccess	re . start . x		1253432	1					
ANR	1254084	MemberAccess	re . start		1253432	0					
ANR	1254085	Identifier	re		1253432	0					
ANR	1254086	Identifier	start		1253432	1					
ANR	1254087	Identifier	x		1253432	1					
ANR	1254088	CastExpression	( int64_t ) ( re . end . x - re . start . x )		1253432	1					
ANR	1254089	CastTarget	int64_t		1253432	0					
ANR	1254090	AdditiveExpression	re . end . x - re . start . x		1253432	1		-			
ANR	1254091	MemberAccess	re . end . x		1253432	0					
ANR	1254092	MemberAccess	re . end		1253432	0					
ANR	1254093	Identifier	re		1253432	0					
ANR	1254094	Identifier	end		1253432	1					
ANR	1254095	Identifier	x		1253432	1					
ANR	1254096	MemberAccess	re . start . x		1253432	1					
ANR	1254097	MemberAccess	re . start		1253432	0					
ANR	1254098	Identifier	re		1253432	0					
ANR	1254099	Identifier	start		1253432	1					
ANR	1254100	Identifier	x		1253432	1					
ANR	1254101	IfStatement	if ( re . start . y > ybot )		1253432	1					
ANR	1254102	Condition	re . start . y > ybot	959:20:34527:34543	1253432	0	True				
ANR	1254103	RelationalExpression	re . start . y > ybot		1253432	0		>			
ANR	1254104	MemberAccess	re . start . y		1253432	0					
ANR	1254105	MemberAccess	re . start		1253432	0					
ANR	1254106	Identifier	re		1253432	0					
ANR	1254107	Identifier	start		1253432	1					
ANR	1254108	Identifier	y		1253432	1					
ANR	1254109	Identifier	ybot		1253432	1					
ANR	1254110	ExpressionStatement	ybot = re . start . y	960:20:34566:34583	1253432	1	True				
ANR	1254111	AssignmentExpression	ybot = re . start . y		1253432	0		=			
ANR	1254112	Identifier	ybot		1253432	0					
ANR	1254113	MemberAccess	re . start . y		1253432	1					
ANR	1254114	MemberAccess	re . start		1253432	0					
ANR	1254115	Identifier	re		1253432	0					
ANR	1254116	Identifier	start		1253432	1					
ANR	1254117	Identifier	y		1253432	1					
ANR	1254118	ExpressionStatement	re . start . x = xleft	961:16:34601:34619	1253432	2	True				
ANR	1254119	AssignmentExpression	re . start . x = xleft		1253432	0		=			
ANR	1254120	MemberAccess	re . start . x		1253432	0					
ANR	1254121	MemberAccess	re . start		1253432	0					
ANR	1254122	Identifier	re		1253432	0					
ANR	1254123	Identifier	start		1253432	1					
ANR	1254124	Identifier	x		1253432	1					
ANR	1254125	Identifier	xleft		1253432	1					
ANR	1254126	IfStatement	if ( le . end . x > xright )		1253432	6					
ANR	1254127	Condition	le . end . x > xright	963:16:34651:34667	1253432	0	True				
ANR	1254128	RelationalExpression	le . end . x > xright		1253432	0		>			
ANR	1254129	MemberAccess	le . end . x		1253432	0					
ANR	1254130	MemberAccess	le . end		1253432	0					
ANR	1254131	Identifier	le		1253432	0					
ANR	1254132	Identifier	end		1253432	1					
ANR	1254133	Identifier	x		1253432	1					
ANR	1254134	Identifier	xright		1253432	1					
ANR	1254135	CompoundStatement		106:35:3990:3990	1253432	1					
ANR	1254136	ExpressionStatement	le . end . y -= ( fixed ) ( ( int64_t ) ( le . end . y - le . start . y ) * ( int64_t ) ( le . end . x - xright ) / ( int64_t ) ( le . end . x - le . start . x ) )	964:16:34688:34871	1253432	0	True				
ANR	1254137	AssignmentExpression	le . end . y -= ( fixed ) ( ( int64_t ) ( le . end . y - le . start . y ) * ( int64_t ) ( le . end . x - xright ) / ( int64_t ) ( le . end . x - le . start . x ) )		1253432	0		-=			
ANR	1254138	MemberAccess	le . end . y		1253432	0					
ANR	1254139	MemberAccess	le . end		1253432	0					
ANR	1254140	Identifier	le		1253432	0					
ANR	1254141	Identifier	end		1253432	1					
ANR	1254142	Identifier	y		1253432	1					
ANR	1254143	CastExpression	( fixed ) ( ( int64_t ) ( le . end . y - le . start . y ) * ( int64_t ) ( le . end . x - xright ) / ( int64_t ) ( le . end . x - le . start . x ) )		1253432	1					
ANR	1254144	CastTarget	fixed		1253432	0					
ANR	1254145	MultiplicativeExpression	( int64_t ) ( le . end . y - le . start . y ) * ( int64_t ) ( le . end . x - xright ) / ( int64_t ) ( le . end . x - le . start . x )		1253432	1		*			
ANR	1254146	CastExpression	( int64_t ) ( le . end . y - le . start . y )		1253432	0					
ANR	1254147	CastTarget	int64_t		1253432	0					
ANR	1254148	AdditiveExpression	le . end . y - le . start . y		1253432	1		-			
ANR	1254149	MemberAccess	le . end . y		1253432	0					
ANR	1254150	MemberAccess	le . end		1253432	0					
ANR	1254151	Identifier	le		1253432	0					
ANR	1254152	Identifier	end		1253432	1					
ANR	1254153	Identifier	y		1253432	1					
ANR	1254154	MemberAccess	le . start . y		1253432	1					
ANR	1254155	MemberAccess	le . start		1253432	0					
ANR	1254156	Identifier	le		1253432	0					
ANR	1254157	Identifier	start		1253432	1					
ANR	1254158	Identifier	y		1253432	1					
ANR	1254159	MultiplicativeExpression	( int64_t ) ( le . end . x - xright ) / ( int64_t ) ( le . end . x - le . start . x )		1253432	1		/			
ANR	1254160	CastExpression	( int64_t ) ( le . end . x - xright )		1253432	0					
ANR	1254161	CastTarget	int64_t		1253432	0					
ANR	1254162	AdditiveExpression	le . end . x - xright		1253432	1		-			
ANR	1254163	MemberAccess	le . end . x		1253432	0					
ANR	1254164	MemberAccess	le . end		1253432	0					
ANR	1254165	Identifier	le		1253432	0					
ANR	1254166	Identifier	end		1253432	1					
ANR	1254167	Identifier	x		1253432	1					
ANR	1254168	Identifier	xright		1253432	1					
ANR	1254169	CastExpression	( int64_t ) ( le . end . x - le . start . x )		1253432	1					
ANR	1254170	CastTarget	int64_t		1253432	0					
ANR	1254171	AdditiveExpression	le . end . x - le . start . x		1253432	1		-			
ANR	1254172	MemberAccess	le . end . x		1253432	0					
ANR	1254173	MemberAccess	le . end		1253432	0					
ANR	1254174	Identifier	le		1253432	0					
ANR	1254175	Identifier	end		1253432	1					
ANR	1254176	Identifier	x		1253432	1					
ANR	1254177	MemberAccess	le . start . x		1253432	1					
ANR	1254178	MemberAccess	le . start		1253432	0					
ANR	1254179	Identifier	le		1253432	0					
ANR	1254180	Identifier	start		1253432	1					
ANR	1254181	Identifier	x		1253432	1					
ANR	1254182	IfStatement	if ( le . end . y < ytop )		1253432	1					
ANR	1254183	Condition	le . end . y < ytop	967:20:34893:34907	1253432	0	True				
ANR	1254184	RelationalExpression	le . end . y < ytop		1253432	0		<			
ANR	1254185	MemberAccess	le . end . y		1253432	0					
ANR	1254186	MemberAccess	le . end		1253432	0					
ANR	1254187	Identifier	le		1253432	0					
ANR	1254188	Identifier	end		1253432	1					
ANR	1254189	Identifier	y		1253432	1					
ANR	1254190	Identifier	ytop		1253432	1					
ANR	1254191	ExpressionStatement	ytop = le . end . y	968:20:34930:34945	1253432	1	True				
ANR	1254192	AssignmentExpression	ytop = le . end . y		1253432	0		=			
ANR	1254193	Identifier	ytop		1253432	0					
ANR	1254194	MemberAccess	le . end . y		1253432	1					
ANR	1254195	MemberAccess	le . end		1253432	0					
ANR	1254196	Identifier	le		1253432	0					
ANR	1254197	Identifier	end		1253432	1					
ANR	1254198	Identifier	y		1253432	1					
ANR	1254199	ExpressionStatement	le . end . x = xright	969:16:34963:34980	1253432	2	True				
ANR	1254200	AssignmentExpression	le . end . x = xright		1253432	0		=			
ANR	1254201	MemberAccess	le . end . x		1253432	0					
ANR	1254202	MemberAccess	le . end		1253432	0					
ANR	1254203	Identifier	le		1253432	0					
ANR	1254204	Identifier	end		1253432	1					
ANR	1254205	Identifier	x		1253432	1					
ANR	1254206	Identifier	xright		1253432	1					
ANR	1254207	IfStatement	if ( re . end . x < xleft )		1253432	7					
ANR	1254208	Condition	re . end . x < xleft	971:16:35012:35027	1253432	0	True				
ANR	1254209	RelationalExpression	re . end . x < xleft		1253432	0		<			
ANR	1254210	MemberAccess	re . end . x		1253432	0					
ANR	1254211	MemberAccess	re . end		1253432	0					
ANR	1254212	Identifier	re		1253432	0					
ANR	1254213	Identifier	end		1253432	1					
ANR	1254214	Identifier	x		1253432	1					
ANR	1254215	Identifier	xleft		1253432	1					
ANR	1254216	CompoundStatement		114:34:4350:4350	1253432	1					
ANR	1254217	ExpressionStatement	re . end . y -= ( fixed ) ( ( int64_t ) ( re . end . y - re . start . y ) * ( int64_t ) ( xleft - re . end . x ) / ( int64_t ) ( re . start . x - re . end . x ) )	972:16:35048:35230	1253432	0	True				
ANR	1254218	AssignmentExpression	re . end . y -= ( fixed ) ( ( int64_t ) ( re . end . y - re . start . y ) * ( int64_t ) ( xleft - re . end . x ) / ( int64_t ) ( re . start . x - re . end . x ) )		1253432	0		-=			
ANR	1254219	MemberAccess	re . end . y		1253432	0					
ANR	1254220	MemberAccess	re . end		1253432	0					
ANR	1254221	Identifier	re		1253432	0					
ANR	1254222	Identifier	end		1253432	1					
ANR	1254223	Identifier	y		1253432	1					
ANR	1254224	CastExpression	( fixed ) ( ( int64_t ) ( re . end . y - re . start . y ) * ( int64_t ) ( xleft - re . end . x ) / ( int64_t ) ( re . start . x - re . end . x ) )		1253432	1					
ANR	1254225	CastTarget	fixed		1253432	0					
ANR	1254226	MultiplicativeExpression	( int64_t ) ( re . end . y - re . start . y ) * ( int64_t ) ( xleft - re . end . x ) / ( int64_t ) ( re . start . x - re . end . x )		1253432	1		*			
ANR	1254227	CastExpression	( int64_t ) ( re . end . y - re . start . y )		1253432	0					
ANR	1254228	CastTarget	int64_t		1253432	0					
ANR	1254229	AdditiveExpression	re . end . y - re . start . y		1253432	1		-			
ANR	1254230	MemberAccess	re . end . y		1253432	0					
ANR	1254231	MemberAccess	re . end		1253432	0					
ANR	1254232	Identifier	re		1253432	0					
ANR	1254233	Identifier	end		1253432	1					
ANR	1254234	Identifier	y		1253432	1					
ANR	1254235	MemberAccess	re . start . y		1253432	1					
ANR	1254236	MemberAccess	re . start		1253432	0					
ANR	1254237	Identifier	re		1253432	0					
ANR	1254238	Identifier	start		1253432	1					
ANR	1254239	Identifier	y		1253432	1					
ANR	1254240	MultiplicativeExpression	( int64_t ) ( xleft - re . end . x ) / ( int64_t ) ( re . start . x - re . end . x )		1253432	1		/			
ANR	1254241	CastExpression	( int64_t ) ( xleft - re . end . x )		1253432	0					
ANR	1254242	CastTarget	int64_t		1253432	0					
ANR	1254243	AdditiveExpression	xleft - re . end . x		1253432	1		-			
ANR	1254244	Identifier	xleft		1253432	0					
ANR	1254245	MemberAccess	re . end . x		1253432	1					
ANR	1254246	MemberAccess	re . end		1253432	0					
ANR	1254247	Identifier	re		1253432	0					
ANR	1254248	Identifier	end		1253432	1					
ANR	1254249	Identifier	x		1253432	1					
ANR	1254250	CastExpression	( int64_t ) ( re . start . x - re . end . x )		1253432	1					
ANR	1254251	CastTarget	int64_t		1253432	0					
ANR	1254252	AdditiveExpression	re . start . x - re . end . x		1253432	1		-			
ANR	1254253	MemberAccess	re . start . x		1253432	0					
ANR	1254254	MemberAccess	re . start		1253432	0					
ANR	1254255	Identifier	re		1253432	0					
ANR	1254256	Identifier	start		1253432	1					
ANR	1254257	Identifier	x		1253432	1					
ANR	1254258	MemberAccess	re . end . x		1253432	1					
ANR	1254259	MemberAccess	re . end		1253432	0					
ANR	1254260	Identifier	re		1253432	0					
ANR	1254261	Identifier	end		1253432	1					
ANR	1254262	Identifier	x		1253432	1					
ANR	1254263	IfStatement	if ( re . end . y < ytop )		1253432	1					
ANR	1254264	Condition	re . end . y < ytop	975:20:35252:35266	1253432	0	True				
ANR	1254265	RelationalExpression	re . end . y < ytop		1253432	0		<			
ANR	1254266	MemberAccess	re . end . y		1253432	0					
ANR	1254267	MemberAccess	re . end		1253432	0					
ANR	1254268	Identifier	re		1253432	0					
ANR	1254269	Identifier	end		1253432	1					
ANR	1254270	Identifier	y		1253432	1					
ANR	1254271	Identifier	ytop		1253432	1					
ANR	1254272	ExpressionStatement	ytop = re . end . y	976:20:35289:35304	1253432	1	True				
ANR	1254273	AssignmentExpression	ytop = re . end . y		1253432	0		=			
ANR	1254274	Identifier	ytop		1253432	0					
ANR	1254275	MemberAccess	re . end . y		1253432	1					
ANR	1254276	MemberAccess	re . end		1253432	0					
ANR	1254277	Identifier	re		1253432	0					
ANR	1254278	Identifier	end		1253432	1					
ANR	1254279	Identifier	y		1253432	1					
ANR	1254280	ExpressionStatement	re . end . x = xleft	977:16:35322:35338	1253432	2	True				
ANR	1254281	AssignmentExpression	re . end . x = xleft		1253432	0		=			
ANR	1254282	MemberAccess	re . end . x		1253432	0					
ANR	1254283	MemberAccess	re . end		1253432	0					
ANR	1254284	Identifier	re		1253432	0					
ANR	1254285	Identifier	end		1253432	1					
ANR	1254286	Identifier	x		1253432	1					
ANR	1254287	Identifier	xleft		1253432	1					
ANR	1254288	IfStatement	if ( ybot > ytop )		1253432	8					
ANR	1254289	Condition	ybot > ytop	979:16:35370:35380	1253432	0	True				
ANR	1254290	RelationalExpression	ybot > ytop		1253432	0		>			
ANR	1254291	Identifier	ybot		1253432	0					
ANR	1254292	Identifier	ytop		1253432	1					
ANR	1254293	ReturnStatement	return 0 ;	980:16:35399:35407	1253432	1	True				
ANR	1254294	PrimaryExpression	0		1253432	0					
ANR	1254295	IfStatement	if ( le . start . y < ybot )		1253432	9					
ANR	1254296	Condition	le . start . y < ybot	982:16:35496:35512	1253432	0	True				
ANR	1254297	RelationalExpression	le . start . y < ybot		1253432	0		<			
ANR	1254298	MemberAccess	le . start . y		1253432	0					
ANR	1254299	MemberAccess	le . start		1253432	0					
ANR	1254300	Identifier	le		1253432	0					
ANR	1254301	Identifier	start		1253432	1					
ANR	1254302	Identifier	y		1253432	1					
ANR	1254303	Identifier	ybot		1253432	1					
ANR	1254304	CompoundStatement		126:16:4853:4949	1253432	1					
ANR	1254305	IdentifierDeclStatement	int round = ( ( le . end . x < le . start . x ) ? ( le . end . y - le . start . y - 1 ) : 0 ) ;	983:16:35533:35629	1253432	0	True				
ANR	1254306	IdentifierDecl	round = ( ( le . end . x < le . start . x ) ? ( le . end . y - le . start . y - 1 ) : 0 )		1253432	0					
ANR	1254307	IdentifierDeclType	int		1253432	0					
ANR	1254308	Identifier	round		1253432	1					
ANR	1254309	AssignmentExpression	round = ( ( le . end . x < le . start . x ) ? ( le . end . y - le . start . y - 1 ) : 0 )		1253432	2		=			
ANR	1254310	Identifier	round		1253432	0					
ANR	1254311	ConditionalExpression	( le . end . x < le . start . x ) ? ( le . end . y - le . start . y - 1 ) : 0		1253432	1					
ANR	1254312	Condition	le . end . x < le . start . x		1253432	0					
ANR	1254313	RelationalExpression	le . end . x < le . start . x		1253432	0		<			
ANR	1254314	MemberAccess	le . end . x		1253432	0					
ANR	1254315	MemberAccess	le . end		1253432	0					
ANR	1254316	Identifier	le		1253432	0					
ANR	1254317	Identifier	end		1253432	1					
ANR	1254318	Identifier	x		1253432	1					
ANR	1254319	MemberAccess	le . start . x		1253432	1					
ANR	1254320	MemberAccess	le . start		1253432	0					
ANR	1254321	Identifier	le		1253432	0					
ANR	1254322	Identifier	start		1253432	1					
ANR	1254323	Identifier	x		1253432	1					
ANR	1254324	AdditiveExpression	le . end . y - le . start . y - 1		1253432	1		-			
ANR	1254325	MemberAccess	le . end . y		1253432	0					
ANR	1254326	MemberAccess	le . end		1253432	0					
ANR	1254327	Identifier	le		1253432	0					
ANR	1254328	Identifier	end		1253432	1					
ANR	1254329	Identifier	y		1253432	1					
ANR	1254330	AdditiveExpression	le . start . y - 1		1253432	1		-			
ANR	1254331	MemberAccess	le . start . y		1253432	0					
ANR	1254332	MemberAccess	le . start		1253432	0					
ANR	1254333	Identifier	le		1253432	0					
ANR	1254334	Identifier	start		1253432	1					
ANR	1254335	Identifier	y		1253432	1					
ANR	1254336	PrimaryExpression	1		1253432	1					
ANR	1254337	PrimaryExpression	0		1253432	2					
ANR	1254338	ExpressionStatement	le . start . x += ( fixed ) ( ( ( int64_t ) ( ybot - le . start . y ) * ( int64_t ) ( le . end . x - le . start . x ) - round ) / ( int64_t ) ( le . end . y - le . start . y ) )	985:16:35647:35845	1253432	1	True				
ANR	1254339	AssignmentExpression	le . start . x += ( fixed ) ( ( ( int64_t ) ( ybot - le . start . y ) * ( int64_t ) ( le . end . x - le . start . x ) - round ) / ( int64_t ) ( le . end . y - le . start . y ) )		1253432	0		+=			
ANR	1254340	MemberAccess	le . start . x		1253432	0					
ANR	1254341	MemberAccess	le . start		1253432	0					
ANR	1254342	Identifier	le		1253432	0					
ANR	1254343	Identifier	start		1253432	1					
ANR	1254344	Identifier	x		1253432	1					
ANR	1254345	CastExpression	( fixed ) ( ( ( int64_t ) ( ybot - le . start . y ) * ( int64_t ) ( le . end . x - le . start . x ) - round ) / ( int64_t ) ( le . end . y - le . start . y ) )		1253432	1					
ANR	1254346	CastTarget	fixed		1253432	0					
ANR	1254347	MultiplicativeExpression	( ( int64_t ) ( ybot - le . start . y ) * ( int64_t ) ( le . end . x - le . start . x ) - round ) / ( int64_t ) ( le . end . y - le . start . y )		1253432	1		/			
ANR	1254348	AdditiveExpression	( int64_t ) ( ybot - le . start . y ) * ( int64_t ) ( le . end . x - le . start . x ) - round		1253432	0		-			
ANR	1254349	MultiplicativeExpression	( int64_t ) ( ybot - le . start . y ) * ( int64_t ) ( le . end . x - le . start . x )		1253432	0		*			
ANR	1254350	CastExpression	( int64_t ) ( ybot - le . start . y )		1253432	0					
ANR	1254351	CastTarget	int64_t		1253432	0					
ANR	1254352	AdditiveExpression	ybot - le . start . y		1253432	1		-			
ANR	1254353	Identifier	ybot		1253432	0					
ANR	1254354	MemberAccess	le . start . y		1253432	1					
ANR	1254355	MemberAccess	le . start		1253432	0					
ANR	1254356	Identifier	le		1253432	0					
ANR	1254357	Identifier	start		1253432	1					
ANR	1254358	Identifier	y		1253432	1					
ANR	1254359	CastExpression	( int64_t ) ( le . end . x - le . start . x )		1253432	1					
ANR	1254360	CastTarget	int64_t		1253432	0					
ANR	1254361	AdditiveExpression	le . end . x - le . start . x		1253432	1		-			
ANR	1254362	MemberAccess	le . end . x		1253432	0					
ANR	1254363	MemberAccess	le . end		1253432	0					
ANR	1254364	Identifier	le		1253432	0					
ANR	1254365	Identifier	end		1253432	1					
ANR	1254366	Identifier	x		1253432	1					
ANR	1254367	MemberAccess	le . start . x		1253432	1					
ANR	1254368	MemberAccess	le . start		1253432	0					
ANR	1254369	Identifier	le		1253432	0					
ANR	1254370	Identifier	start		1253432	1					
ANR	1254371	Identifier	x		1253432	1					
ANR	1254372	Identifier	round		1253432	1					
ANR	1254373	CastExpression	( int64_t ) ( le . end . y - le . start . y )		1253432	1					
ANR	1254374	CastTarget	int64_t		1253432	0					
ANR	1254375	AdditiveExpression	le . end . y - le . start . y		1253432	1		-			
ANR	1254376	MemberAccess	le . end . y		1253432	0					
ANR	1254377	MemberAccess	le . end		1253432	0					
ANR	1254378	Identifier	le		1253432	0					
ANR	1254379	Identifier	end		1253432	1					
ANR	1254380	Identifier	y		1253432	1					
ANR	1254381	MemberAccess	le . start . y		1253432	1					
ANR	1254382	MemberAccess	le . start		1253432	0					
ANR	1254383	Identifier	le		1253432	0					
ANR	1254384	Identifier	start		1253432	1					
ANR	1254385	Identifier	y		1253432	1					
ANR	1254386	ExpressionStatement	le . start . y = ybot	988:16:35863:35880	1253432	2	True				
ANR	1254387	AssignmentExpression	le . start . y = ybot		1253432	0		=			
ANR	1254388	MemberAccess	le . start . y		1253432	0					
ANR	1254389	MemberAccess	le . start		1253432	0					
ANR	1254390	Identifier	le		1253432	0					
ANR	1254391	Identifier	start		1253432	1					
ANR	1254392	Identifier	y		1253432	1					
ANR	1254393	Identifier	ybot		1253432	1					
ANR	1254394	IfStatement	if ( le . end . y > ytop )		1253432	10					
ANR	1254395	Condition	le . end . y > ytop	990:16:35912:35926	1253432	0	True				
ANR	1254396	RelationalExpression	le . end . y > ytop		1253432	0		>			
ANR	1254397	MemberAccess	le . end . y		1253432	0					
ANR	1254398	MemberAccess	le . end		1253432	0					
ANR	1254399	Identifier	le		1253432	0					
ANR	1254400	Identifier	end		1253432	1					
ANR	1254401	Identifier	y		1253432	1					
ANR	1254402	Identifier	ytop		1253432	1					
ANR	1254403	CompoundStatement		134:16:5267:5363	1253432	1					
ANR	1254404	IdentifierDeclStatement	int round = ( ( le . end . x > le . start . x ) ? ( le . end . y - le . start . y - 1 ) : 0 ) ;	991:16:35947:36043	1253432	0	True				
ANR	1254405	IdentifierDecl	round = ( ( le . end . x > le . start . x ) ? ( le . end . y - le . start . y - 1 ) : 0 )		1253432	0					
ANR	1254406	IdentifierDeclType	int		1253432	0					
ANR	1254407	Identifier	round		1253432	1					
ANR	1254408	AssignmentExpression	round = ( ( le . end . x > le . start . x ) ? ( le . end . y - le . start . y - 1 ) : 0 )		1253432	2		=			
ANR	1254409	Identifier	round		1253432	0					
ANR	1254410	ConditionalExpression	( le . end . x > le . start . x ) ? ( le . end . y - le . start . y - 1 ) : 0		1253432	1					
ANR	1254411	Condition	le . end . x > le . start . x		1253432	0					
ANR	1254412	RelationalExpression	le . end . x > le . start . x		1253432	0		>			
ANR	1254413	MemberAccess	le . end . x		1253432	0					
ANR	1254414	MemberAccess	le . end		1253432	0					
ANR	1254415	Identifier	le		1253432	0					
ANR	1254416	Identifier	end		1253432	1					
ANR	1254417	Identifier	x		1253432	1					
ANR	1254418	MemberAccess	le . start . x		1253432	1					
ANR	1254419	MemberAccess	le . start		1253432	0					
ANR	1254420	Identifier	le		1253432	0					
ANR	1254421	Identifier	start		1253432	1					
ANR	1254422	Identifier	x		1253432	1					
ANR	1254423	AdditiveExpression	le . end . y - le . start . y - 1		1253432	1		-			
ANR	1254424	MemberAccess	le . end . y		1253432	0					
ANR	1254425	MemberAccess	le . end		1253432	0					
ANR	1254426	Identifier	le		1253432	0					
ANR	1254427	Identifier	end		1253432	1					
ANR	1254428	Identifier	y		1253432	1					
ANR	1254429	AdditiveExpression	le . start . y - 1		1253432	1		-			
ANR	1254430	MemberAccess	le . start . y		1253432	0					
ANR	1254431	MemberAccess	le . start		1253432	0					
ANR	1254432	Identifier	le		1253432	0					
ANR	1254433	Identifier	start		1253432	1					
ANR	1254434	Identifier	y		1253432	1					
ANR	1254435	PrimaryExpression	1		1253432	1					
ANR	1254436	PrimaryExpression	0		1253432	2					
ANR	1254437	ExpressionStatement	le . end . x += ( fixed ) ( ( ( int64_t ) ( le . end . y - ytop ) * ( int64_t ) ( le . start . x - le . end . x ) - round ) / ( int64_t ) ( le . end . y - le . start . y ) )	993:16:36061:36251	1253432	1	True				
ANR	1254438	AssignmentExpression	le . end . x += ( fixed ) ( ( ( int64_t ) ( le . end . y - ytop ) * ( int64_t ) ( le . start . x - le . end . x ) - round ) / ( int64_t ) ( le . end . y - le . start . y ) )		1253432	0		+=			
ANR	1254439	MemberAccess	le . end . x		1253432	0					
ANR	1254440	MemberAccess	le . end		1253432	0					
ANR	1254441	Identifier	le		1253432	0					
ANR	1254442	Identifier	end		1253432	1					
ANR	1254443	Identifier	x		1253432	1					
ANR	1254444	CastExpression	( fixed ) ( ( ( int64_t ) ( le . end . y - ytop ) * ( int64_t ) ( le . start . x - le . end . x ) - round ) / ( int64_t ) ( le . end . y - le . start . y ) )		1253432	1					
ANR	1254445	CastTarget	fixed		1253432	0					
ANR	1254446	MultiplicativeExpression	( ( int64_t ) ( le . end . y - ytop ) * ( int64_t ) ( le . start . x - le . end . x ) - round ) / ( int64_t ) ( le . end . y - le . start . y )		1253432	1		/			
ANR	1254447	AdditiveExpression	( int64_t ) ( le . end . y - ytop ) * ( int64_t ) ( le . start . x - le . end . x ) - round		1253432	0		-			
ANR	1254448	MultiplicativeExpression	( int64_t ) ( le . end . y - ytop ) * ( int64_t ) ( le . start . x - le . end . x )		1253432	0		*			
ANR	1254449	CastExpression	( int64_t ) ( le . end . y - ytop )		1253432	0					
ANR	1254450	CastTarget	int64_t		1253432	0					
ANR	1254451	AdditiveExpression	le . end . y - ytop		1253432	1		-			
ANR	1254452	MemberAccess	le . end . y		1253432	0					
ANR	1254453	MemberAccess	le . end		1253432	0					
ANR	1254454	Identifier	le		1253432	0					
ANR	1254455	Identifier	end		1253432	1					
ANR	1254456	Identifier	y		1253432	1					
ANR	1254457	Identifier	ytop		1253432	1					
ANR	1254458	CastExpression	( int64_t ) ( le . start . x - le . end . x )		1253432	1					
ANR	1254459	CastTarget	int64_t		1253432	0					
ANR	1254460	AdditiveExpression	le . start . x - le . end . x		1253432	1		-			
ANR	1254461	MemberAccess	le . start . x		1253432	0					
ANR	1254462	MemberAccess	le . start		1253432	0					
ANR	1254463	Identifier	le		1253432	0					
ANR	1254464	Identifier	start		1253432	1					
ANR	1254465	Identifier	x		1253432	1					
ANR	1254466	MemberAccess	le . end . x		1253432	1					
ANR	1254467	MemberAccess	le . end		1253432	0					
ANR	1254468	Identifier	le		1253432	0					
ANR	1254469	Identifier	end		1253432	1					
ANR	1254470	Identifier	x		1253432	1					
ANR	1254471	Identifier	round		1253432	1					
ANR	1254472	CastExpression	( int64_t ) ( le . end . y - le . start . y )		1253432	1					
ANR	1254473	CastTarget	int64_t		1253432	0					
ANR	1254474	AdditiveExpression	le . end . y - le . start . y		1253432	1		-			
ANR	1254475	MemberAccess	le . end . y		1253432	0					
ANR	1254476	MemberAccess	le . end		1253432	0					
ANR	1254477	Identifier	le		1253432	0					
ANR	1254478	Identifier	end		1253432	1					
ANR	1254479	Identifier	y		1253432	1					
ANR	1254480	MemberAccess	le . start . y		1253432	1					
ANR	1254481	MemberAccess	le . start		1253432	0					
ANR	1254482	Identifier	le		1253432	0					
ANR	1254483	Identifier	start		1253432	1					
ANR	1254484	Identifier	y		1253432	1					
ANR	1254485	ExpressionStatement	le . end . y = ytop	996:16:36269:36284	1253432	2	True				
ANR	1254486	AssignmentExpression	le . end . y = ytop		1253432	0		=			
ANR	1254487	MemberAccess	le . end . y		1253432	0					
ANR	1254488	MemberAccess	le . end		1253432	0					
ANR	1254489	Identifier	le		1253432	0					
ANR	1254490	Identifier	end		1253432	1					
ANR	1254491	Identifier	y		1253432	1					
ANR	1254492	Identifier	ytop		1253432	1					
ANR	1254493	IfStatement	if ( ( le . start . x < xleft ) && ( le . end . x < xleft ) )		1253432	11					
ANR	1254494	Condition	( le . start . x < xleft ) && ( le . end . x < xleft )	998:16:36316:36357	1253432	0	True				
ANR	1254495	AndExpression	( le . start . x < xleft ) && ( le . end . x < xleft )		1253432	0		&&			
ANR	1254496	RelationalExpression	le . start . x < xleft		1253432	0		<			
ANR	1254497	MemberAccess	le . start . x		1253432	0					
ANR	1254498	MemberAccess	le . start		1253432	0					
ANR	1254499	Identifier	le		1253432	0					
ANR	1254500	Identifier	start		1253432	1					
ANR	1254501	Identifier	x		1253432	1					
ANR	1254502	Identifier	xleft		1253432	1					
ANR	1254503	RelationalExpression	le . end . x < xleft		1253432	1		<			
ANR	1254504	MemberAccess	le . end . x		1253432	0					
ANR	1254505	MemberAccess	le . end		1253432	0					
ANR	1254506	Identifier	le		1253432	0					
ANR	1254507	Identifier	end		1253432	1					
ANR	1254508	Identifier	x		1253432	1					
ANR	1254509	Identifier	xleft		1253432	1					
ANR	1254510	CompoundStatement		141:60:5680:5680	1253432	1					
ANR	1254511	ExpressionStatement	le . start . x = xleft	999:16:36378:36396	1253432	0	True				
ANR	1254512	AssignmentExpression	le . start . x = xleft		1253432	0		=			
ANR	1254513	MemberAccess	le . start . x		1253432	0					
ANR	1254514	MemberAccess	le . start		1253432	0					
ANR	1254515	Identifier	le		1253432	0					
ANR	1254516	Identifier	start		1253432	1					
ANR	1254517	Identifier	x		1253432	1					
ANR	1254518	Identifier	xleft		1253432	1					
ANR	1254519	ExpressionStatement	le . end . x = xleft	1000:16:36414:36432	1253432	1	True				
ANR	1254520	AssignmentExpression	le . end . x = xleft		1253432	0		=			
ANR	1254521	MemberAccess	le . end . x		1253432	0					
ANR	1254522	MemberAccess	le . end		1253432	0					
ANR	1254523	Identifier	le		1253432	0					
ANR	1254524	Identifier	end		1253432	1					
ANR	1254525	Identifier	x		1253432	1					
ANR	1254526	Identifier	xleft		1253432	1					
ANR	1254527	ExpressionStatement	le . start . y = ybot	1001:16:36450:36467	1253432	2	True				
ANR	1254528	AssignmentExpression	le . start . y = ybot		1253432	0		=			
ANR	1254529	MemberAccess	le . start . y		1253432	0					
ANR	1254530	MemberAccess	le . start		1253432	0					
ANR	1254531	Identifier	le		1253432	0					
ANR	1254532	Identifier	start		1253432	1					
ANR	1254533	Identifier	y		1253432	1					
ANR	1254534	Identifier	ybot		1253432	1					
ANR	1254535	ExpressionStatement	le . end . y = ytop	1002:16:36485:36502	1253432	3	True				
ANR	1254536	AssignmentExpression	le . end . y = ytop		1253432	0		=			
ANR	1254537	MemberAccess	le . end . y		1253432	0					
ANR	1254538	MemberAccess	le . end		1253432	0					
ANR	1254539	Identifier	le		1253432	0					
ANR	1254540	Identifier	end		1253432	1					
ANR	1254541	Identifier	y		1253432	1					
ANR	1254542	Identifier	ytop		1253432	1					
ANR	1254543	IfStatement	if ( re . start . y < ybot )		1253432	12					
ANR	1254544	Condition	re . start . y < ybot	1004:16:36534:36550	1253432	0	True				
ANR	1254545	RelationalExpression	re . start . y < ybot		1253432	0		<			
ANR	1254546	MemberAccess	re . start . y		1253432	0					
ANR	1254547	MemberAccess	re . start		1253432	0					
ANR	1254548	Identifier	re		1253432	0					
ANR	1254549	Identifier	start		1253432	1					
ANR	1254550	Identifier	y		1253432	1					
ANR	1254551	Identifier	ybot		1253432	1					
ANR	1254552	CompoundStatement		148:16:5891:5987	1253432	1					
ANR	1254553	IdentifierDeclStatement	int round = ( ( re . end . x > re . start . x ) ? ( re . end . y - re . start . y - 1 ) : 0 ) ;	1005:16:36571:36667	1253432	0	True				
ANR	1254554	IdentifierDecl	round = ( ( re . end . x > re . start . x ) ? ( re . end . y - re . start . y - 1 ) : 0 )		1253432	0					
ANR	1254555	IdentifierDeclType	int		1253432	0					
ANR	1254556	Identifier	round		1253432	1					
ANR	1254557	AssignmentExpression	round = ( ( re . end . x > re . start . x ) ? ( re . end . y - re . start . y - 1 ) : 0 )		1253432	2		=			
ANR	1254558	Identifier	round		1253432	0					
ANR	1254559	ConditionalExpression	( re . end . x > re . start . x ) ? ( re . end . y - re . start . y - 1 ) : 0		1253432	1					
ANR	1254560	Condition	re . end . x > re . start . x		1253432	0					
ANR	1254561	RelationalExpression	re . end . x > re . start . x		1253432	0		>			
ANR	1254562	MemberAccess	re . end . x		1253432	0					
ANR	1254563	MemberAccess	re . end		1253432	0					
ANR	1254564	Identifier	re		1253432	0					
ANR	1254565	Identifier	end		1253432	1					
ANR	1254566	Identifier	x		1253432	1					
ANR	1254567	MemberAccess	re . start . x		1253432	1					
ANR	1254568	MemberAccess	re . start		1253432	0					
ANR	1254569	Identifier	re		1253432	0					
ANR	1254570	Identifier	start		1253432	1					
ANR	1254571	Identifier	x		1253432	1					
ANR	1254572	AdditiveExpression	re . end . y - re . start . y - 1		1253432	1		-			
ANR	1254573	MemberAccess	re . end . y		1253432	0					
ANR	1254574	MemberAccess	re . end		1253432	0					
ANR	1254575	Identifier	re		1253432	0					
ANR	1254576	Identifier	end		1253432	1					
ANR	1254577	Identifier	y		1253432	1					
ANR	1254578	AdditiveExpression	re . start . y - 1		1253432	1		-			
ANR	1254579	MemberAccess	re . start . y		1253432	0					
ANR	1254580	MemberAccess	re . start		1253432	0					
ANR	1254581	Identifier	re		1253432	0					
ANR	1254582	Identifier	start		1253432	1					
ANR	1254583	Identifier	y		1253432	1					
ANR	1254584	PrimaryExpression	1		1253432	1					
ANR	1254585	PrimaryExpression	0		1253432	2					
ANR	1254586	ExpressionStatement	re . start . x += ( fixed ) ( ( ( int64_t ) ( ybot - re . start . y ) * ( int64_t ) ( re . end . x - re . start . x ) + round ) / ( int64_t ) ( re . end . y - re . start . y ) )	1007:16:36685:36883	1253432	1	True				
ANR	1254587	AssignmentExpression	re . start . x += ( fixed ) ( ( ( int64_t ) ( ybot - re . start . y ) * ( int64_t ) ( re . end . x - re . start . x ) + round ) / ( int64_t ) ( re . end . y - re . start . y ) )		1253432	0		+=			
ANR	1254588	MemberAccess	re . start . x		1253432	0					
ANR	1254589	MemberAccess	re . start		1253432	0					
ANR	1254590	Identifier	re		1253432	0					
ANR	1254591	Identifier	start		1253432	1					
ANR	1254592	Identifier	x		1253432	1					
ANR	1254593	CastExpression	( fixed ) ( ( ( int64_t ) ( ybot - re . start . y ) * ( int64_t ) ( re . end . x - re . start . x ) + round ) / ( int64_t ) ( re . end . y - re . start . y ) )		1253432	1					
ANR	1254594	CastTarget	fixed		1253432	0					
ANR	1254595	MultiplicativeExpression	( ( int64_t ) ( ybot - re . start . y ) * ( int64_t ) ( re . end . x - re . start . x ) + round ) / ( int64_t ) ( re . end . y - re . start . y )		1253432	1		/			
ANR	1254596	AdditiveExpression	( int64_t ) ( ybot - re . start . y ) * ( int64_t ) ( re . end . x - re . start . x ) + round		1253432	0		+			
ANR	1254597	MultiplicativeExpression	( int64_t ) ( ybot - re . start . y ) * ( int64_t ) ( re . end . x - re . start . x )		1253432	0		*			
ANR	1254598	CastExpression	( int64_t ) ( ybot - re . start . y )		1253432	0					
ANR	1254599	CastTarget	int64_t		1253432	0					
ANR	1254600	AdditiveExpression	ybot - re . start . y		1253432	1		-			
ANR	1254601	Identifier	ybot		1253432	0					
ANR	1254602	MemberAccess	re . start . y		1253432	1					
ANR	1254603	MemberAccess	re . start		1253432	0					
ANR	1254604	Identifier	re		1253432	0					
ANR	1254605	Identifier	start		1253432	1					
ANR	1254606	Identifier	y		1253432	1					
ANR	1254607	CastExpression	( int64_t ) ( re . end . x - re . start . x )		1253432	1					
ANR	1254608	CastTarget	int64_t		1253432	0					
ANR	1254609	AdditiveExpression	re . end . x - re . start . x		1253432	1		-			
ANR	1254610	MemberAccess	re . end . x		1253432	0					
ANR	1254611	MemberAccess	re . end		1253432	0					
ANR	1254612	Identifier	re		1253432	0					
ANR	1254613	Identifier	end		1253432	1					
ANR	1254614	Identifier	x		1253432	1					
ANR	1254615	MemberAccess	re . start . x		1253432	1					
ANR	1254616	MemberAccess	re . start		1253432	0					
ANR	1254617	Identifier	re		1253432	0					
ANR	1254618	Identifier	start		1253432	1					
ANR	1254619	Identifier	x		1253432	1					
ANR	1254620	Identifier	round		1253432	1					
ANR	1254621	CastExpression	( int64_t ) ( re . end . y - re . start . y )		1253432	1					
ANR	1254622	CastTarget	int64_t		1253432	0					
ANR	1254623	AdditiveExpression	re . end . y - re . start . y		1253432	1		-			
ANR	1254624	MemberAccess	re . end . y		1253432	0					
ANR	1254625	MemberAccess	re . end		1253432	0					
ANR	1254626	Identifier	re		1253432	0					
ANR	1254627	Identifier	end		1253432	1					
ANR	1254628	Identifier	y		1253432	1					
ANR	1254629	MemberAccess	re . start . y		1253432	1					
ANR	1254630	MemberAccess	re . start		1253432	0					
ANR	1254631	Identifier	re		1253432	0					
ANR	1254632	Identifier	start		1253432	1					
ANR	1254633	Identifier	y		1253432	1					
ANR	1254634	ExpressionStatement	re . start . y = ybot	1010:16:36901:36918	1253432	2	True				
ANR	1254635	AssignmentExpression	re . start . y = ybot		1253432	0		=			
ANR	1254636	MemberAccess	re . start . y		1253432	0					
ANR	1254637	MemberAccess	re . start		1253432	0					
ANR	1254638	Identifier	re		1253432	0					
ANR	1254639	Identifier	start		1253432	1					
ANR	1254640	Identifier	y		1253432	1					
ANR	1254641	Identifier	ybot		1253432	1					
ANR	1254642	IfStatement	if ( re . end . y > ytop )		1253432	13					
ANR	1254643	Condition	re . end . y > ytop	1012:16:36950:36964	1253432	0	True				
ANR	1254644	RelationalExpression	re . end . y > ytop		1253432	0		>			
ANR	1254645	MemberAccess	re . end . y		1253432	0					
ANR	1254646	MemberAccess	re . end		1253432	0					
ANR	1254647	Identifier	re		1253432	0					
ANR	1254648	Identifier	end		1253432	1					
ANR	1254649	Identifier	y		1253432	1					
ANR	1254650	Identifier	ytop		1253432	1					
ANR	1254651	CompoundStatement		156:16:6305:6401	1253432	1					
ANR	1254652	IdentifierDeclStatement	int round = ( ( re . end . x < re . start . x ) ? ( re . end . y - re . start . y - 1 ) : 0 ) ;	1013:16:36985:37081	1253432	0	True				
ANR	1254653	IdentifierDecl	round = ( ( re . end . x < re . start . x ) ? ( re . end . y - re . start . y - 1 ) : 0 )		1253432	0					
ANR	1254654	IdentifierDeclType	int		1253432	0					
ANR	1254655	Identifier	round		1253432	1					
ANR	1254656	AssignmentExpression	round = ( ( re . end . x < re . start . x ) ? ( re . end . y - re . start . y - 1 ) : 0 )		1253432	2		=			
ANR	1254657	Identifier	round		1253432	0					
ANR	1254658	ConditionalExpression	( re . end . x < re . start . x ) ? ( re . end . y - re . start . y - 1 ) : 0		1253432	1					
ANR	1254659	Condition	re . end . x < re . start . x		1253432	0					
ANR	1254660	RelationalExpression	re . end . x < re . start . x		1253432	0		<			
ANR	1254661	MemberAccess	re . end . x		1253432	0					
ANR	1254662	MemberAccess	re . end		1253432	0					
ANR	1254663	Identifier	re		1253432	0					
ANR	1254664	Identifier	end		1253432	1					
ANR	1254665	Identifier	x		1253432	1					
ANR	1254666	MemberAccess	re . start . x		1253432	1					
ANR	1254667	MemberAccess	re . start		1253432	0					
ANR	1254668	Identifier	re		1253432	0					
ANR	1254669	Identifier	start		1253432	1					
ANR	1254670	Identifier	x		1253432	1					
ANR	1254671	AdditiveExpression	re . end . y - re . start . y - 1		1253432	1		-			
ANR	1254672	MemberAccess	re . end . y		1253432	0					
ANR	1254673	MemberAccess	re . end		1253432	0					
ANR	1254674	Identifier	re		1253432	0					
ANR	1254675	Identifier	end		1253432	1					
ANR	1254676	Identifier	y		1253432	1					
ANR	1254677	AdditiveExpression	re . start . y - 1		1253432	1		-			
ANR	1254678	MemberAccess	re . start . y		1253432	0					
ANR	1254679	MemberAccess	re . start		1253432	0					
ANR	1254680	Identifier	re		1253432	0					
ANR	1254681	Identifier	start		1253432	1					
ANR	1254682	Identifier	y		1253432	1					
ANR	1254683	PrimaryExpression	1		1253432	1					
ANR	1254684	PrimaryExpression	0		1253432	2					
ANR	1254685	ExpressionStatement	re . end . x += ( fixed ) ( ( ( int64_t ) ( re . end . y - ytop ) * ( int64_t ) ( re . start . x - re . end . x ) + round ) / ( int64_t ) ( re . end . y - re . start . y ) )	1015:16:37099:37289	1253432	1	True				
ANR	1254686	AssignmentExpression	re . end . x += ( fixed ) ( ( ( int64_t ) ( re . end . y - ytop ) * ( int64_t ) ( re . start . x - re . end . x ) + round ) / ( int64_t ) ( re . end . y - re . start . y ) )		1253432	0		+=			
ANR	1254687	MemberAccess	re . end . x		1253432	0					
ANR	1254688	MemberAccess	re . end		1253432	0					
ANR	1254689	Identifier	re		1253432	0					
ANR	1254690	Identifier	end		1253432	1					
ANR	1254691	Identifier	x		1253432	1					
ANR	1254692	CastExpression	( fixed ) ( ( ( int64_t ) ( re . end . y - ytop ) * ( int64_t ) ( re . start . x - re . end . x ) + round ) / ( int64_t ) ( re . end . y - re . start . y ) )		1253432	1					
ANR	1254693	CastTarget	fixed		1253432	0					
ANR	1254694	MultiplicativeExpression	( ( int64_t ) ( re . end . y - ytop ) * ( int64_t ) ( re . start . x - re . end . x ) + round ) / ( int64_t ) ( re . end . y - re . start . y )		1253432	1		/			
ANR	1254695	AdditiveExpression	( int64_t ) ( re . end . y - ytop ) * ( int64_t ) ( re . start . x - re . end . x ) + round		1253432	0		+			
ANR	1254696	MultiplicativeExpression	( int64_t ) ( re . end . y - ytop ) * ( int64_t ) ( re . start . x - re . end . x )		1253432	0		*			
ANR	1254697	CastExpression	( int64_t ) ( re . end . y - ytop )		1253432	0					
ANR	1254698	CastTarget	int64_t		1253432	0					
ANR	1254699	AdditiveExpression	re . end . y - ytop		1253432	1		-			
ANR	1254700	MemberAccess	re . end . y		1253432	0					
ANR	1254701	MemberAccess	re . end		1253432	0					
ANR	1254702	Identifier	re		1253432	0					
ANR	1254703	Identifier	end		1253432	1					
ANR	1254704	Identifier	y		1253432	1					
ANR	1254705	Identifier	ytop		1253432	1					
ANR	1254706	CastExpression	( int64_t ) ( re . start . x - re . end . x )		1253432	1					
ANR	1254707	CastTarget	int64_t		1253432	0					
ANR	1254708	AdditiveExpression	re . start . x - re . end . x		1253432	1		-			
ANR	1254709	MemberAccess	re . start . x		1253432	0					
ANR	1254710	MemberAccess	re . start		1253432	0					
ANR	1254711	Identifier	re		1253432	0					
ANR	1254712	Identifier	start		1253432	1					
ANR	1254713	Identifier	x		1253432	1					
ANR	1254714	MemberAccess	re . end . x		1253432	1					
ANR	1254715	MemberAccess	re . end		1253432	0					
ANR	1254716	Identifier	re		1253432	0					
ANR	1254717	Identifier	end		1253432	1					
ANR	1254718	Identifier	x		1253432	1					
ANR	1254719	Identifier	round		1253432	1					
ANR	1254720	CastExpression	( int64_t ) ( re . end . y - re . start . y )		1253432	1					
ANR	1254721	CastTarget	int64_t		1253432	0					
ANR	1254722	AdditiveExpression	re . end . y - re . start . y		1253432	1		-			
ANR	1254723	MemberAccess	re . end . y		1253432	0					
ANR	1254724	MemberAccess	re . end		1253432	0					
ANR	1254725	Identifier	re		1253432	0					
ANR	1254726	Identifier	end		1253432	1					
ANR	1254727	Identifier	y		1253432	1					
ANR	1254728	MemberAccess	re . start . y		1253432	1					
ANR	1254729	MemberAccess	re . start		1253432	0					
ANR	1254730	Identifier	re		1253432	0					
ANR	1254731	Identifier	start		1253432	1					
ANR	1254732	Identifier	y		1253432	1					
ANR	1254733	ExpressionStatement	re . end . y = ytop	1018:16:37307:37322	1253432	2	True				
ANR	1254734	AssignmentExpression	re . end . y = ytop		1253432	0		=			
ANR	1254735	MemberAccess	re . end . y		1253432	0					
ANR	1254736	MemberAccess	re . end		1253432	0					
ANR	1254737	Identifier	re		1253432	0					
ANR	1254738	Identifier	end		1253432	1					
ANR	1254739	Identifier	y		1253432	1					
ANR	1254740	Identifier	ytop		1253432	1					
ANR	1254741	IfStatement	if ( ( re . start . x > xright ) && ( re . end . x > xright ) )		1253432	14					
ANR	1254742	Condition	( re . start . x > xright ) && ( re . end . x > xright )	1020:16:37354:37397	1253432	0	True				
ANR	1254743	AndExpression	( re . start . x > xright ) && ( re . end . x > xright )		1253432	0		&&			
ANR	1254744	RelationalExpression	re . start . x > xright		1253432	0		>			
ANR	1254745	MemberAccess	re . start . x		1253432	0					
ANR	1254746	MemberAccess	re . start		1253432	0					
ANR	1254747	Identifier	re		1253432	0					
ANR	1254748	Identifier	start		1253432	1					
ANR	1254749	Identifier	x		1253432	1					
ANR	1254750	Identifier	xright		1253432	1					
ANR	1254751	RelationalExpression	re . end . x > xright		1253432	1		>			
ANR	1254752	MemberAccess	re . end . x		1253432	0					
ANR	1254753	MemberAccess	re . end		1253432	0					
ANR	1254754	Identifier	re		1253432	0					
ANR	1254755	Identifier	end		1253432	1					
ANR	1254756	Identifier	x		1253432	1					
ANR	1254757	Identifier	xright		1253432	1					
ANR	1254758	CompoundStatement		163:62:6720:6720	1253432	1					
ANR	1254759	ExpressionStatement	re . start . x = xright	1021:16:37418:37437	1253432	0	True				
ANR	1254760	AssignmentExpression	re . start . x = xright		1253432	0		=			
ANR	1254761	MemberAccess	re . start . x		1253432	0					
ANR	1254762	MemberAccess	re . start		1253432	0					
ANR	1254763	Identifier	re		1253432	0					
ANR	1254764	Identifier	start		1253432	1					
ANR	1254765	Identifier	x		1253432	1					
ANR	1254766	Identifier	xright		1253432	1					
ANR	1254767	ExpressionStatement	re . end . x = xright	1022:16:37455:37474	1253432	1	True				
ANR	1254768	AssignmentExpression	re . end . x = xright		1253432	0		=			
ANR	1254769	MemberAccess	re . end . x		1253432	0					
ANR	1254770	MemberAccess	re . end		1253432	0					
ANR	1254771	Identifier	re		1253432	0					
ANR	1254772	Identifier	end		1253432	1					
ANR	1254773	Identifier	x		1253432	1					
ANR	1254774	Identifier	xright		1253432	1					
ANR	1254775	ExpressionStatement	re . start . y = ybot	1023:16:37492:37509	1253432	2	True				
ANR	1254776	AssignmentExpression	re . start . y = ybot		1253432	0		=			
ANR	1254777	MemberAccess	re . start . y		1253432	0					
ANR	1254778	MemberAccess	re . start		1253432	0					
ANR	1254779	Identifier	re		1253432	0					
ANR	1254780	Identifier	start		1253432	1					
ANR	1254781	Identifier	y		1253432	1					
ANR	1254782	Identifier	ybot		1253432	1					
ANR	1254783	ExpressionStatement	re . end . y = ytop	1024:16:37527:37544	1253432	3	True				
ANR	1254784	AssignmentExpression	re . end . y = ytop		1253432	0		=			
ANR	1254785	MemberAccess	re . end . y		1253432	0					
ANR	1254786	MemberAccess	re . end		1253432	0					
ANR	1254787	Identifier	re		1253432	0					
ANR	1254788	Identifier	end		1253432	1					
ANR	1254789	Identifier	y		1253432	1					
ANR	1254790	Identifier	ytop		1253432	1					
ANR	1254791	IfStatement	if ( le . start . x > re . start . x )		1253432	15					
ANR	1254792	Condition	le . start . x > re . start . x	1030:16:37857:37879	1253432	0	True				
ANR	1254793	RelationalExpression	le . start . x > re . start . x		1253432	0		>			
ANR	1254794	MemberAccess	le . start . x		1253432	0					
ANR	1254795	MemberAccess	le . start		1253432	0					
ANR	1254796	Identifier	le		1253432	0					
ANR	1254797	Identifier	start		1253432	1					
ANR	1254798	Identifier	x		1253432	1					
ANR	1254799	MemberAccess	re . start . x		1253432	1					
ANR	1254800	MemberAccess	re . start		1253432	0					
ANR	1254801	Identifier	re		1253432	0					
ANR	1254802	Identifier	start		1253432	1					
ANR	1254803	Identifier	x		1253432	1					
ANR	1254804	CompoundStatement		173:41:7202:7202	1253432	1					
ANR	1254805	IfStatement	if ( le . start . x == le . end . x )		1253432	0					
ANR	1254806	Condition	le . start . x == le . end . x	1031:20:37904:37925	1253432	0	True				
ANR	1254807	EqualityExpression	le . start . x == le . end . x		1253432	0		==			
ANR	1254808	MemberAccess	le . start . x		1253432	0					
ANR	1254809	MemberAccess	le . start		1253432	0					
ANR	1254810	Identifier	le		1253432	0					
ANR	1254811	Identifier	start		1253432	1					
ANR	1254812	Identifier	x		1253432	1					
ANR	1254813	MemberAccess	le . end . x		1253432	1					
ANR	1254814	MemberAccess	le . end		1253432	0					
ANR	1254815	Identifier	le		1253432	0					
ANR	1254816	Identifier	end		1253432	1					
ANR	1254817	Identifier	x		1253432	1					
ANR	1254818	CompoundStatement		174:44:7248:7248	1253432	1					
ANR	1254819	ExpressionStatement	ybot += ( fixed ) ( ( int64_t ) ( re . end . y - re . start . y ) * ( int64_t ) ( le . start . x - re . start . x ) / ( int64_t ) ( re . end . x - re . start . x ) )	1032:20:37950:38135	1253432	0	True				
ANR	1254820	AssignmentExpression	ybot += ( fixed ) ( ( int64_t ) ( re . end . y - re . start . y ) * ( int64_t ) ( le . start . x - re . start . x ) / ( int64_t ) ( re . end . x - re . start . x ) )		1253432	0		+=			
ANR	1254821	Identifier	ybot		1253432	0					
ANR	1254822	CastExpression	( fixed ) ( ( int64_t ) ( re . end . y - re . start . y ) * ( int64_t ) ( le . start . x - re . start . x ) / ( int64_t ) ( re . end . x - re . start . x ) )		1253432	1					
ANR	1254823	CastTarget	fixed		1253432	0					
ANR	1254824	MultiplicativeExpression	( int64_t ) ( re . end . y - re . start . y ) * ( int64_t ) ( le . start . x - re . start . x ) / ( int64_t ) ( re . end . x - re . start . x )		1253432	1		*			
ANR	1254825	CastExpression	( int64_t ) ( re . end . y - re . start . y )		1253432	0					
ANR	1254826	CastTarget	int64_t		1253432	0					
ANR	1254827	AdditiveExpression	re . end . y - re . start . y		1253432	1		-			
ANR	1254828	MemberAccess	re . end . y		1253432	0					
ANR	1254829	MemberAccess	re . end		1253432	0					
ANR	1254830	Identifier	re		1253432	0					
ANR	1254831	Identifier	end		1253432	1					
ANR	1254832	Identifier	y		1253432	1					
ANR	1254833	MemberAccess	re . start . y		1253432	1					
ANR	1254834	MemberAccess	re . start		1253432	0					
ANR	1254835	Identifier	re		1253432	0					
ANR	1254836	Identifier	start		1253432	1					
ANR	1254837	Identifier	y		1253432	1					
ANR	1254838	MultiplicativeExpression	( int64_t ) ( le . start . x - re . start . x ) / ( int64_t ) ( re . end . x - re . start . x )		1253432	1		/			
ANR	1254839	CastExpression	( int64_t ) ( le . start . x - re . start . x )		1253432	0					
ANR	1254840	CastTarget	int64_t		1253432	0					
ANR	1254841	AdditiveExpression	le . start . x - re . start . x		1253432	1		-			
ANR	1254842	MemberAccess	le . start . x		1253432	0					
ANR	1254843	MemberAccess	le . start		1253432	0					
ANR	1254844	Identifier	le		1253432	0					
ANR	1254845	Identifier	start		1253432	1					
ANR	1254846	Identifier	x		1253432	1					
ANR	1254847	MemberAccess	re . start . x		1253432	1					
ANR	1254848	MemberAccess	re . start		1253432	0					
ANR	1254849	Identifier	re		1253432	0					
ANR	1254850	Identifier	start		1253432	1					
ANR	1254851	Identifier	x		1253432	1					
ANR	1254852	CastExpression	( int64_t ) ( re . end . x - re . start . x )		1253432	1					
ANR	1254853	CastTarget	int64_t		1253432	0					
ANR	1254854	AdditiveExpression	re . end . x - re . start . x		1253432	1		-			
ANR	1254855	MemberAccess	re . end . x		1253432	0					
ANR	1254856	MemberAccess	re . end		1253432	0					
ANR	1254857	Identifier	re		1253432	0					
ANR	1254858	Identifier	end		1253432	1					
ANR	1254859	Identifier	x		1253432	1					
ANR	1254860	MemberAccess	re . start . x		1253432	1					
ANR	1254861	MemberAccess	re . start		1253432	0					
ANR	1254862	Identifier	re		1253432	0					
ANR	1254863	Identifier	start		1253432	1					
ANR	1254864	Identifier	x		1253432	1					
ANR	1254865	ExpressionStatement	re . start . x = le . start . x	1035:20:38157:38180	1253432	1	True				
ANR	1254866	AssignmentExpression	re . start . x = le . start . x		1253432	0		=			
ANR	1254867	MemberAccess	re . start . x		1253432	0					
ANR	1254868	MemberAccess	re . start		1253432	0					
ANR	1254869	Identifier	re		1253432	0					
ANR	1254870	Identifier	start		1253432	1					
ANR	1254871	Identifier	x		1253432	1					
ANR	1254872	MemberAccess	le . start . x		1253432	1					
ANR	1254873	MemberAccess	le . start		1253432	0					
ANR	1254874	Identifier	le		1253432	0					
ANR	1254875	Identifier	start		1253432	1					
ANR	1254876	Identifier	x		1253432	1					
ANR	1254877	ElseStatement	else		1253432	0					
ANR	1254878	CompoundStatement		179:23:7525:7525	1253432	0					
ANR	1254879	ExpressionStatement	ybot += ( fixed ) ( ( int64_t ) ( le . end . y - le . start . y ) * ( int64_t ) ( le . start . x - re . start . x ) / ( int64_t ) ( le . start . x - le . end . x ) )	1037:20:38227:38412	1253432	0	True				
ANR	1254880	AssignmentExpression	ybot += ( fixed ) ( ( int64_t ) ( le . end . y - le . start . y ) * ( int64_t ) ( le . start . x - re . start . x ) / ( int64_t ) ( le . start . x - le . end . x ) )		1253432	0		+=			
ANR	1254881	Identifier	ybot		1253432	0					
ANR	1254882	CastExpression	( fixed ) ( ( int64_t ) ( le . end . y - le . start . y ) * ( int64_t ) ( le . start . x - re . start . x ) / ( int64_t ) ( le . start . x - le . end . x ) )		1253432	1					
ANR	1254883	CastTarget	fixed		1253432	0					
ANR	1254884	MultiplicativeExpression	( int64_t ) ( le . end . y - le . start . y ) * ( int64_t ) ( le . start . x - re . start . x ) / ( int64_t ) ( le . start . x - le . end . x )		1253432	1		*			
ANR	1254885	CastExpression	( int64_t ) ( le . end . y - le . start . y )		1253432	0					
ANR	1254886	CastTarget	int64_t		1253432	0					
ANR	1254887	AdditiveExpression	le . end . y - le . start . y		1253432	1		-			
ANR	1254888	MemberAccess	le . end . y		1253432	0					
ANR	1254889	MemberAccess	le . end		1253432	0					
ANR	1254890	Identifier	le		1253432	0					
ANR	1254891	Identifier	end		1253432	1					
ANR	1254892	Identifier	y		1253432	1					
ANR	1254893	MemberAccess	le . start . y		1253432	1					
ANR	1254894	MemberAccess	le . start		1253432	0					
ANR	1254895	Identifier	le		1253432	0					
ANR	1254896	Identifier	start		1253432	1					
ANR	1254897	Identifier	y		1253432	1					
ANR	1254898	MultiplicativeExpression	( int64_t ) ( le . start . x - re . start . x ) / ( int64_t ) ( le . start . x - le . end . x )		1253432	1		/			
ANR	1254899	CastExpression	( int64_t ) ( le . start . x - re . start . x )		1253432	0					
ANR	1254900	CastTarget	int64_t		1253432	0					
ANR	1254901	AdditiveExpression	le . start . x - re . start . x		1253432	1		-			
ANR	1254902	MemberAccess	le . start . x		1253432	0					
ANR	1254903	MemberAccess	le . start		1253432	0					
ANR	1254904	Identifier	le		1253432	0					
ANR	1254905	Identifier	start		1253432	1					
ANR	1254906	Identifier	x		1253432	1					
ANR	1254907	MemberAccess	re . start . x		1253432	1					
ANR	1254908	MemberAccess	re . start		1253432	0					
ANR	1254909	Identifier	re		1253432	0					
ANR	1254910	Identifier	start		1253432	1					
ANR	1254911	Identifier	x		1253432	1					
ANR	1254912	CastExpression	( int64_t ) ( le . start . x - le . end . x )		1253432	1					
ANR	1254913	CastTarget	int64_t		1253432	0					
ANR	1254914	AdditiveExpression	le . start . x - le . end . x		1253432	1		-			
ANR	1254915	MemberAccess	le . start . x		1253432	0					
ANR	1254916	MemberAccess	le . start		1253432	0					
ANR	1254917	Identifier	le		1253432	0					
ANR	1254918	Identifier	start		1253432	1					
ANR	1254919	Identifier	x		1253432	1					
ANR	1254920	MemberAccess	le . end . x		1253432	1					
ANR	1254921	MemberAccess	le . end		1253432	0					
ANR	1254922	Identifier	le		1253432	0					
ANR	1254923	Identifier	end		1253432	1					
ANR	1254924	Identifier	x		1253432	1					
ANR	1254925	ExpressionStatement	le . start . x = re . start . x	1040:20:38434:38457	1253432	1	True				
ANR	1254926	AssignmentExpression	le . start . x = re . start . x		1253432	0		=			
ANR	1254927	MemberAccess	le . start . x		1253432	0					
ANR	1254928	MemberAccess	le . start		1253432	0					
ANR	1254929	Identifier	le		1253432	0					
ANR	1254930	Identifier	start		1253432	1					
ANR	1254931	Identifier	x		1253432	1					
ANR	1254932	MemberAccess	re . start . x		1253432	1					
ANR	1254933	MemberAccess	re . start		1253432	0					
ANR	1254934	Identifier	re		1253432	0					
ANR	1254935	Identifier	start		1253432	1					
ANR	1254936	Identifier	x		1253432	1					
ANR	1254937	IfStatement	if ( ybot > ytop )		1253432	1					
ANR	1254938	Condition	ybot > ytop	1042:20:38497:38507	1253432	0	True				
ANR	1254939	RelationalExpression	ybot > ytop		1253432	0		>			
ANR	1254940	Identifier	ybot		1253432	0					
ANR	1254941	Identifier	ytop		1253432	1					
ANR	1254942	ReturnStatement	return 0 ;	1043:20:38530:38538	1253432	1	True				
ANR	1254943	PrimaryExpression	0		1253432	0					
ANR	1254944	ExpressionStatement	le . start . y = ybot	1044:16:38556:38573	1253432	2	True				
ANR	1254945	AssignmentExpression	le . start . y = ybot		1253432	0		=			
ANR	1254946	MemberAccess	le . start . y		1253432	0					
ANR	1254947	MemberAccess	le . start		1253432	0					
ANR	1254948	Identifier	le		1253432	0					
ANR	1254949	Identifier	start		1253432	1					
ANR	1254950	Identifier	y		1253432	1					
ANR	1254951	Identifier	ybot		1253432	1					
ANR	1254952	ExpressionStatement	re . start . y = ybot	1045:16:38591:38608	1253432	3	True				
ANR	1254953	AssignmentExpression	re . start . y = ybot		1253432	0		=			
ANR	1254954	MemberAccess	re . start . y		1253432	0					
ANR	1254955	MemberAccess	re . start		1253432	0					
ANR	1254956	Identifier	re		1253432	0					
ANR	1254957	Identifier	start		1253432	1					
ANR	1254958	Identifier	y		1253432	1					
ANR	1254959	Identifier	ybot		1253432	1					
ANR	1254960	IfStatement	if ( le . end . x > re . end . x )		1253432	16					
ANR	1254961	Condition	le . end . x > re . end . x	1047:16:38640:38658	1253432	0	True				
ANR	1254962	RelationalExpression	le . end . x > re . end . x		1253432	0		>			
ANR	1254963	MemberAccess	le . end . x		1253432	0					
ANR	1254964	MemberAccess	le . end		1253432	0					
ANR	1254965	Identifier	le		1253432	0					
ANR	1254966	Identifier	end		1253432	1					
ANR	1254967	Identifier	x		1253432	1					
ANR	1254968	MemberAccess	re . end . x		1253432	1					
ANR	1254969	MemberAccess	re . end		1253432	0					
ANR	1254970	Identifier	re		1253432	0					
ANR	1254971	Identifier	end		1253432	1					
ANR	1254972	Identifier	x		1253432	1					
ANR	1254973	CompoundStatement		190:37:7981:7981	1253432	1					
ANR	1254974	IfStatement	if ( le . start . x == le . end . x )		1253432	0					
ANR	1254975	Condition	le . start . x == le . end . x	1048:20:38683:38704	1253432	0	True				
ANR	1254976	EqualityExpression	le . start . x == le . end . x		1253432	0		==			
ANR	1254977	MemberAccess	le . start . x		1253432	0					
ANR	1254978	MemberAccess	le . start		1253432	0					
ANR	1254979	Identifier	le		1253432	0					
ANR	1254980	Identifier	start		1253432	1					
ANR	1254981	Identifier	x		1253432	1					
ANR	1254982	MemberAccess	le . end . x		1253432	1					
ANR	1254983	MemberAccess	le . end		1253432	0					
ANR	1254984	Identifier	le		1253432	0					
ANR	1254985	Identifier	end		1253432	1					
ANR	1254986	Identifier	x		1253432	1					
ANR	1254987	CompoundStatement		191:44:8027:8027	1253432	1					
ANR	1254988	ExpressionStatement	ytop -= ( fixed ) ( ( int64_t ) ( re . end . y - re . start . y ) * ( int64_t ) ( le . end . x - re . end . x ) / ( int64_t ) ( re . start . x - re . end . x ) )	1049:20:38729:38910	1253432	0	True				
ANR	1254989	AssignmentExpression	ytop -= ( fixed ) ( ( int64_t ) ( re . end . y - re . start . y ) * ( int64_t ) ( le . end . x - re . end . x ) / ( int64_t ) ( re . start . x - re . end . x ) )		1253432	0		-=			
ANR	1254990	Identifier	ytop		1253432	0					
ANR	1254991	CastExpression	( fixed ) ( ( int64_t ) ( re . end . y - re . start . y ) * ( int64_t ) ( le . end . x - re . end . x ) / ( int64_t ) ( re . start . x - re . end . x ) )		1253432	1					
ANR	1254992	CastTarget	fixed		1253432	0					
ANR	1254993	MultiplicativeExpression	( int64_t ) ( re . end . y - re . start . y ) * ( int64_t ) ( le . end . x - re . end . x ) / ( int64_t ) ( re . start . x - re . end . x )		1253432	1		*			
ANR	1254994	CastExpression	( int64_t ) ( re . end . y - re . start . y )		1253432	0					
ANR	1254995	CastTarget	int64_t		1253432	0					
ANR	1254996	AdditiveExpression	re . end . y - re . start . y		1253432	1		-			
ANR	1254997	MemberAccess	re . end . y		1253432	0					
ANR	1254998	MemberAccess	re . end		1253432	0					
ANR	1254999	Identifier	re		1253432	0					
ANR	1255000	Identifier	end		1253432	1					
ANR	1255001	Identifier	y		1253432	1					
ANR	1255002	MemberAccess	re . start . y		1253432	1					
ANR	1255003	MemberAccess	re . start		1253432	0					
ANR	1255004	Identifier	re		1253432	0					
ANR	1255005	Identifier	start		1253432	1					
ANR	1255006	Identifier	y		1253432	1					
ANR	1255007	MultiplicativeExpression	( int64_t ) ( le . end . x - re . end . x ) / ( int64_t ) ( re . start . x - re . end . x )		1253432	1		/			
ANR	1255008	CastExpression	( int64_t ) ( le . end . x - re . end . x )		1253432	0					
ANR	1255009	CastTarget	int64_t		1253432	0					
ANR	1255010	AdditiveExpression	le . end . x - re . end . x		1253432	1		-			
ANR	1255011	MemberAccess	le . end . x		1253432	0					
ANR	1255012	MemberAccess	le . end		1253432	0					
ANR	1255013	Identifier	le		1253432	0					
ANR	1255014	Identifier	end		1253432	1					
ANR	1255015	Identifier	x		1253432	1					
ANR	1255016	MemberAccess	re . end . x		1253432	1					
ANR	1255017	MemberAccess	re . end		1253432	0					
ANR	1255018	Identifier	re		1253432	0					
ANR	1255019	Identifier	end		1253432	1					
ANR	1255020	Identifier	x		1253432	1					
ANR	1255021	CastExpression	( int64_t ) ( re . start . x - re . end . x )		1253432	1					
ANR	1255022	CastTarget	int64_t		1253432	0					
ANR	1255023	AdditiveExpression	re . start . x - re . end . x		1253432	1		-			
ANR	1255024	MemberAccess	re . start . x		1253432	0					
ANR	1255025	MemberAccess	re . start		1253432	0					
ANR	1255026	Identifier	re		1253432	0					
ANR	1255027	Identifier	start		1253432	1					
ANR	1255028	Identifier	x		1253432	1					
ANR	1255029	MemberAccess	re . end . x		1253432	1					
ANR	1255030	MemberAccess	re . end		1253432	0					
ANR	1255031	Identifier	re		1253432	0					
ANR	1255032	Identifier	end		1253432	1					
ANR	1255033	Identifier	x		1253432	1					
ANR	1255034	ExpressionStatement	re . end . x = le . end . x	1052:20:38932:38951	1253432	1	True				
ANR	1255035	AssignmentExpression	re . end . x = le . end . x		1253432	0		=			
ANR	1255036	MemberAccess	re . end . x		1253432	0					
ANR	1255037	MemberAccess	re . end		1253432	0					
ANR	1255038	Identifier	re		1253432	0					
ANR	1255039	Identifier	end		1253432	1					
ANR	1255040	Identifier	x		1253432	1					
ANR	1255041	MemberAccess	le . end . x		1253432	1					
ANR	1255042	MemberAccess	le . end		1253432	0					
ANR	1255043	Identifier	le		1253432	0					
ANR	1255044	Identifier	end		1253432	1					
ANR	1255045	Identifier	x		1253432	1					
ANR	1255046	ElseStatement	else		1253432	0					
ANR	1255047	CompoundStatement		196:23:8296:8296	1253432	0					
ANR	1255048	ExpressionStatement	ytop -= ( fixed ) ( ( int64_t ) ( le . end . y - le . start . y ) * ( int64_t ) ( le . end . x - re . end . x ) / ( int64_t ) ( le . end . x - le . start . x ) )	1054:20:38998:39179	1253432	0	True				
ANR	1255049	AssignmentExpression	ytop -= ( fixed ) ( ( int64_t ) ( le . end . y - le . start . y ) * ( int64_t ) ( le . end . x - re . end . x ) / ( int64_t ) ( le . end . x - le . start . x ) )		1253432	0		-=			
ANR	1255050	Identifier	ytop		1253432	0					
ANR	1255051	CastExpression	( fixed ) ( ( int64_t ) ( le . end . y - le . start . y ) * ( int64_t ) ( le . end . x - re . end . x ) / ( int64_t ) ( le . end . x - le . start . x ) )		1253432	1					
ANR	1255052	CastTarget	fixed		1253432	0					
ANR	1255053	MultiplicativeExpression	( int64_t ) ( le . end . y - le . start . y ) * ( int64_t ) ( le . end . x - re . end . x ) / ( int64_t ) ( le . end . x - le . start . x )		1253432	1		*			
ANR	1255054	CastExpression	( int64_t ) ( le . end . y - le . start . y )		1253432	0					
ANR	1255055	CastTarget	int64_t		1253432	0					
ANR	1255056	AdditiveExpression	le . end . y - le . start . y		1253432	1		-			
ANR	1255057	MemberAccess	le . end . y		1253432	0					
ANR	1255058	MemberAccess	le . end		1253432	0					
ANR	1255059	Identifier	le		1253432	0					
ANR	1255060	Identifier	end		1253432	1					
ANR	1255061	Identifier	y		1253432	1					
ANR	1255062	MemberAccess	le . start . y		1253432	1					
ANR	1255063	MemberAccess	le . start		1253432	0					
ANR	1255064	Identifier	le		1253432	0					
ANR	1255065	Identifier	start		1253432	1					
ANR	1255066	Identifier	y		1253432	1					
ANR	1255067	MultiplicativeExpression	( int64_t ) ( le . end . x - re . end . x ) / ( int64_t ) ( le . end . x - le . start . x )		1253432	1		/			
ANR	1255068	CastExpression	( int64_t ) ( le . end . x - re . end . x )		1253432	0					
ANR	1255069	CastTarget	int64_t		1253432	0					
ANR	1255070	AdditiveExpression	le . end . x - re . end . x		1253432	1		-			
ANR	1255071	MemberAccess	le . end . x		1253432	0					
ANR	1255072	MemberAccess	le . end		1253432	0					
ANR	1255073	Identifier	le		1253432	0					
ANR	1255074	Identifier	end		1253432	1					
ANR	1255075	Identifier	x		1253432	1					
ANR	1255076	MemberAccess	re . end . x		1253432	1					
ANR	1255077	MemberAccess	re . end		1253432	0					
ANR	1255078	Identifier	re		1253432	0					
ANR	1255079	Identifier	end		1253432	1					
ANR	1255080	Identifier	x		1253432	1					
ANR	1255081	CastExpression	( int64_t ) ( le . end . x - le . start . x )		1253432	1					
ANR	1255082	CastTarget	int64_t		1253432	0					
ANR	1255083	AdditiveExpression	le . end . x - le . start . x		1253432	1		-			
ANR	1255084	MemberAccess	le . end . x		1253432	0					
ANR	1255085	MemberAccess	le . end		1253432	0					
ANR	1255086	Identifier	le		1253432	0					
ANR	1255087	Identifier	end		1253432	1					
ANR	1255088	Identifier	x		1253432	1					
ANR	1255089	MemberAccess	le . start . x		1253432	1					
ANR	1255090	MemberAccess	le . start		1253432	0					
ANR	1255091	Identifier	le		1253432	0					
ANR	1255092	Identifier	start		1253432	1					
ANR	1255093	Identifier	x		1253432	1					
ANR	1255094	ExpressionStatement	le . end . x = re . end . x	1057:20:39201:39220	1253432	1	True				
ANR	1255095	AssignmentExpression	le . end . x = re . end . x		1253432	0		=			
ANR	1255096	MemberAccess	le . end . x		1253432	0					
ANR	1255097	MemberAccess	le . end		1253432	0					
ANR	1255098	Identifier	le		1253432	0					
ANR	1255099	Identifier	end		1253432	1					
ANR	1255100	Identifier	x		1253432	1					
ANR	1255101	MemberAccess	re . end . x		1253432	1					
ANR	1255102	MemberAccess	re . end		1253432	0					
ANR	1255103	Identifier	re		1253432	0					
ANR	1255104	Identifier	end		1253432	1					
ANR	1255105	Identifier	x		1253432	1					
ANR	1255106	IfStatement	if ( ybot > ytop )		1253432	1					
ANR	1255107	Condition	ybot > ytop	1059:20:39260:39270	1253432	0	True				
ANR	1255108	RelationalExpression	ybot > ytop		1253432	0		>			
ANR	1255109	Identifier	ybot		1253432	0					
ANR	1255110	Identifier	ytop		1253432	1					
ANR	1255111	ReturnStatement	return 0 ;	1060:20:39293:39301	1253432	1	True				
ANR	1255112	PrimaryExpression	0		1253432	0					
ANR	1255113	ExpressionStatement	le . end . y = ytop	1061:16:39319:39334	1253432	2	True				
ANR	1255114	AssignmentExpression	le . end . y = ytop		1253432	0		=			
ANR	1255115	MemberAccess	le . end . y		1253432	0					
ANR	1255116	MemberAccess	le . end		1253432	0					
ANR	1255117	Identifier	le		1253432	0					
ANR	1255118	Identifier	end		1253432	1					
ANR	1255119	Identifier	y		1253432	1					
ANR	1255120	Identifier	ytop		1253432	1					
ANR	1255121	ExpressionStatement	re . end . y = ytop	1062:16:39352:39367	1253432	3	True				
ANR	1255122	AssignmentExpression	re . end . y = ytop		1253432	0		=			
ANR	1255123	MemberAccess	re . end . y		1253432	0					
ANR	1255124	MemberAccess	re . end		1253432	0					
ANR	1255125	Identifier	re		1253432	0					
ANR	1255126	Identifier	end		1253432	1					
ANR	1255127	Identifier	y		1253432	1					
ANR	1255128	Identifier	ytop		1253432	1					
ANR	1255129	ExpressionStatement	lenew . start . x = xleft	1069:12:39706:39727	1253432	17	True				
ANR	1255130	AssignmentExpression	lenew . start . x = xleft		1253432	0		=			
ANR	1255131	MemberAccess	lenew . start . x		1253432	0					
ANR	1255132	MemberAccess	lenew . start		1253432	0					
ANR	1255133	Identifier	lenew		1253432	0					
ANR	1255134	Identifier	start		1253432	1					
ANR	1255135	Identifier	x		1253432	1					
ANR	1255136	Identifier	xleft		1253432	1					
ANR	1255137	ExpressionStatement	lenew . start . y = ybot	1070:12:39741:39761	1253432	18	True				
ANR	1255138	AssignmentExpression	lenew . start . y = ybot		1253432	0		=			
ANR	1255139	MemberAccess	lenew . start . y		1253432	0					
ANR	1255140	MemberAccess	lenew . start		1253432	0					
ANR	1255141	Identifier	lenew		1253432	0					
ANR	1255142	Identifier	start		1253432	1					
ANR	1255143	Identifier	y		1253432	1					
ANR	1255144	Identifier	ybot		1253432	1					
ANR	1255145	ExpressionStatement	lenew . end . x = xleft	1071:12:39775:39796	1253432	19	True				
ANR	1255146	AssignmentExpression	lenew . end . x = xleft		1253432	0		=			
ANR	1255147	MemberAccess	lenew . end . x		1253432	0					
ANR	1255148	MemberAccess	lenew . end		1253432	0					
ANR	1255149	Identifier	lenew		1253432	0					
ANR	1255150	Identifier	end		1253432	1					
ANR	1255151	Identifier	x		1253432	1					
ANR	1255152	Identifier	xleft		1253432	1					
ANR	1255153	ExpressionStatement	lenew . end . y = ytop	1072:12:39810:39830	1253432	20	True				
ANR	1255154	AssignmentExpression	lenew . end . y = ytop		1253432	0		=			
ANR	1255155	MemberAccess	lenew . end . y		1253432	0					
ANR	1255156	MemberAccess	lenew . end		1253432	0					
ANR	1255157	Identifier	lenew		1253432	0					
ANR	1255158	Identifier	end		1253432	1					
ANR	1255159	Identifier	y		1253432	1					
ANR	1255160	Identifier	ytop		1253432	1					
ANR	1255161	ExpressionStatement	renew . start . x = xright	1073:12:39844:39866	1253432	21	True				
ANR	1255162	AssignmentExpression	renew . start . x = xright		1253432	0		=			
ANR	1255163	MemberAccess	renew . start . x		1253432	0					
ANR	1255164	MemberAccess	renew . start		1253432	0					
ANR	1255165	Identifier	renew		1253432	0					
ANR	1255166	Identifier	start		1253432	1					
ANR	1255167	Identifier	x		1253432	1					
ANR	1255168	Identifier	xright		1253432	1					
ANR	1255169	ExpressionStatement	renew . start . y = ybot	1074:12:39880:39900	1253432	22	True				
ANR	1255170	AssignmentExpression	renew . start . y = ybot		1253432	0		=			
ANR	1255171	MemberAccess	renew . start . y		1253432	0					
ANR	1255172	MemberAccess	renew . start		1253432	0					
ANR	1255173	Identifier	renew		1253432	0					
ANR	1255174	Identifier	start		1253432	1					
ANR	1255175	Identifier	y		1253432	1					
ANR	1255176	Identifier	ybot		1253432	1					
ANR	1255177	ExpressionStatement	renew . end . x = xright	1075:12:39914:39936	1253432	23	True				
ANR	1255178	AssignmentExpression	renew . end . x = xright		1253432	0		=			
ANR	1255179	MemberAccess	renew . end . x		1253432	0					
ANR	1255180	MemberAccess	renew . end		1253432	0					
ANR	1255181	Identifier	renew		1253432	0					
ANR	1255182	Identifier	end		1253432	1					
ANR	1255183	Identifier	x		1253432	1					
ANR	1255184	Identifier	xright		1253432	1					
ANR	1255185	ExpressionStatement	renew . end . y = ytop	1076:12:39950:39970	1253432	24	True				
ANR	1255186	AssignmentExpression	renew . end . y = ytop		1253432	0		=			
ANR	1255187	MemberAccess	renew . end . y		1253432	0					
ANR	1255188	MemberAccess	renew . end		1253432	0					
ANR	1255189	Identifier	renew		1253432	0					
ANR	1255190	Identifier	end		1253432	1					
ANR	1255191	Identifier	y		1253432	1					
ANR	1255192	Identifier	ytop		1253432	1					
ANR	1255193	ExpressionStatement	ybl = ybot	1079:12:40087:40097	1253432	25	True				
ANR	1255194	AssignmentExpression	ybl = ybot		1253432	0		=			
ANR	1255195	Identifier	ybl		1253432	0					
ANR	1255196	Identifier	ybot		1253432	1					
ANR	1255197	IfStatement	if ( le . start . x > le . end . x )		1253432	26					
ANR	1255198	Condition	le . start . x > le . end . x	1080:16:40115:40135	1253432	0	True				
ANR	1255199	RelationalExpression	le . start . x > le . end . x		1253432	0		>			
ANR	1255200	MemberAccess	le . start . x		1253432	0					
ANR	1255201	MemberAccess	le . start		1253432	0					
ANR	1255202	Identifier	le		1253432	0					
ANR	1255203	Identifier	start		1253432	1					
ANR	1255204	Identifier	x		1253432	1					
ANR	1255205	MemberAccess	le . end . x		1253432	1					
ANR	1255206	MemberAccess	le . end		1253432	0					
ANR	1255207	Identifier	le		1253432	0					
ANR	1255208	Identifier	end		1253432	1					
ANR	1255209	Identifier	x		1253432	1					
ANR	1255210	CompoundStatement		223:39:9458:9458	1253432	1					
ANR	1255211	ExpressionStatement	ybl += ( fixed ) ( ( int64_t ) ( le . start . x - xleft ) * ( int64_t ) ( le . end . y - le . start . y ) / ( int64_t ) ( le . start . x - le . end . x ) )	1081:16:40156:40327	1253432	0	True				
ANR	1255212	AssignmentExpression	ybl += ( fixed ) ( ( int64_t ) ( le . start . x - xleft ) * ( int64_t ) ( le . end . y - le . start . y ) / ( int64_t ) ( le . start . x - le . end . x ) )		1253432	0		+=			
ANR	1255213	Identifier	ybl		1253432	0					
ANR	1255214	CastExpression	( fixed ) ( ( int64_t ) ( le . start . x - xleft ) * ( int64_t ) ( le . end . y - le . start . y ) / ( int64_t ) ( le . start . x - le . end . x ) )		1253432	1					
ANR	1255215	CastTarget	fixed		1253432	0					
ANR	1255216	MultiplicativeExpression	( int64_t ) ( le . start . x - xleft ) * ( int64_t ) ( le . end . y - le . start . y ) / ( int64_t ) ( le . start . x - le . end . x )		1253432	1		*			
ANR	1255217	CastExpression	( int64_t ) ( le . start . x - xleft )		1253432	0					
ANR	1255218	CastTarget	int64_t		1253432	0					
ANR	1255219	AdditiveExpression	le . start . x - xleft		1253432	1		-			
ANR	1255220	MemberAccess	le . start . x		1253432	0					
ANR	1255221	MemberAccess	le . start		1253432	0					
ANR	1255222	Identifier	le		1253432	0					
ANR	1255223	Identifier	start		1253432	1					
ANR	1255224	Identifier	x		1253432	1					
ANR	1255225	Identifier	xleft		1253432	1					
ANR	1255226	MultiplicativeExpression	( int64_t ) ( le . end . y - le . start . y ) / ( int64_t ) ( le . start . x - le . end . x )		1253432	1		/			
ANR	1255227	CastExpression	( int64_t ) ( le . end . y - le . start . y )		1253432	0					
ANR	1255228	CastTarget	int64_t		1253432	0					
ANR	1255229	AdditiveExpression	le . end . y - le . start . y		1253432	1		-			
ANR	1255230	MemberAccess	le . end . y		1253432	0					
ANR	1255231	MemberAccess	le . end		1253432	0					
ANR	1255232	Identifier	le		1253432	0					
ANR	1255233	Identifier	end		1253432	1					
ANR	1255234	Identifier	y		1253432	1					
ANR	1255235	MemberAccess	le . start . y		1253432	1					
ANR	1255236	MemberAccess	le . start		1253432	0					
ANR	1255237	Identifier	le		1253432	0					
ANR	1255238	Identifier	start		1253432	1					
ANR	1255239	Identifier	y		1253432	1					
ANR	1255240	CastExpression	( int64_t ) ( le . start . x - le . end . x )		1253432	1					
ANR	1255241	CastTarget	int64_t		1253432	0					
ANR	1255242	AdditiveExpression	le . start . x - le . end . x		1253432	1		-			
ANR	1255243	MemberAccess	le . start . x		1253432	0					
ANR	1255244	MemberAccess	le . start		1253432	0					
ANR	1255245	Identifier	le		1253432	0					
ANR	1255246	Identifier	start		1253432	1					
ANR	1255247	Identifier	x		1253432	1					
ANR	1255248	MemberAccess	le . end . x		1253432	1					
ANR	1255249	MemberAccess	le . end		1253432	0					
ANR	1255250	Identifier	le		1253432	0					
ANR	1255251	Identifier	end		1253432	1					
ANR	1255252	Identifier	x		1253432	1					
ANR	1255253	IfStatement	if ( ybl > ytop )		1253432	1					
ANR	1255254	Condition	ybl > ytop	1084:20:40349:40358	1253432	0	True				
ANR	1255255	RelationalExpression	ybl > ytop		1253432	0		>			
ANR	1255256	Identifier	ybl		1253432	0					
ANR	1255257	Identifier	ytop		1253432	1					
ANR	1255258	ExpressionStatement	ybl = ytop	1085:20:40381:40391	1253432	1	True				
ANR	1255259	AssignmentExpression	ybl = ytop		1253432	0		=			
ANR	1255260	Identifier	ybl		1253432	0					
ANR	1255261	Identifier	ytop		1253432	1					
ANR	1255262	ExpressionStatement	ybr = ybot	1089:12:40524:40534	1253432	27	True				
ANR	1255263	AssignmentExpression	ybr = ybot		1253432	0		=			
ANR	1255264	Identifier	ybr		1253432	0					
ANR	1255265	Identifier	ybot		1253432	1					
ANR	1255266	IfStatement	if ( re . start . x < re . end . x )		1253432	28					
ANR	1255267	Condition	re . start . x < re . end . x	1090:16:40552:40572	1253432	0	True				
ANR	1255268	RelationalExpression	re . start . x < re . end . x		1253432	0		<			
ANR	1255269	MemberAccess	re . start . x		1253432	0					
ANR	1255270	MemberAccess	re . start		1253432	0					
ANR	1255271	Identifier	re		1253432	0					
ANR	1255272	Identifier	start		1253432	1					
ANR	1255273	Identifier	x		1253432	1					
ANR	1255274	MemberAccess	re . end . x		1253432	1					
ANR	1255275	MemberAccess	re . end		1253432	0					
ANR	1255276	Identifier	re		1253432	0					
ANR	1255277	Identifier	end		1253432	1					
ANR	1255278	Identifier	x		1253432	1					
ANR	1255279	CompoundStatement		233:39:9895:9895	1253432	1					
ANR	1255280	ExpressionStatement	ybr += ( fixed ) ( ( int64_t ) ( xright - re . start . x ) * ( int64_t ) ( re . end . y - re . start . y ) / ( int64_t ) ( re . end . x - re . start . x ) )	1091:16:40593:40765	1253432	0	True				
ANR	1255281	AssignmentExpression	ybr += ( fixed ) ( ( int64_t ) ( xright - re . start . x ) * ( int64_t ) ( re . end . y - re . start . y ) / ( int64_t ) ( re . end . x - re . start . x ) )		1253432	0		+=			
ANR	1255282	Identifier	ybr		1253432	0					
ANR	1255283	CastExpression	( fixed ) ( ( int64_t ) ( xright - re . start . x ) * ( int64_t ) ( re . end . y - re . start . y ) / ( int64_t ) ( re . end . x - re . start . x ) )		1253432	1					
ANR	1255284	CastTarget	fixed		1253432	0					
ANR	1255285	MultiplicativeExpression	( int64_t ) ( xright - re . start . x ) * ( int64_t ) ( re . end . y - re . start . y ) / ( int64_t ) ( re . end . x - re . start . x )		1253432	1		*			
ANR	1255286	CastExpression	( int64_t ) ( xright - re . start . x )		1253432	0					
ANR	1255287	CastTarget	int64_t		1253432	0					
ANR	1255288	AdditiveExpression	xright - re . start . x		1253432	1		-			
ANR	1255289	Identifier	xright		1253432	0					
ANR	1255290	MemberAccess	re . start . x		1253432	1					
ANR	1255291	MemberAccess	re . start		1253432	0					
ANR	1255292	Identifier	re		1253432	0					
ANR	1255293	Identifier	start		1253432	1					
ANR	1255294	Identifier	x		1253432	1					
ANR	1255295	MultiplicativeExpression	( int64_t ) ( re . end . y - re . start . y ) / ( int64_t ) ( re . end . x - re . start . x )		1253432	1		/			
ANR	1255296	CastExpression	( int64_t ) ( re . end . y - re . start . y )		1253432	0					
ANR	1255297	CastTarget	int64_t		1253432	0					
ANR	1255298	AdditiveExpression	re . end . y - re . start . y		1253432	1		-			
ANR	1255299	MemberAccess	re . end . y		1253432	0					
ANR	1255300	MemberAccess	re . end		1253432	0					
ANR	1255301	Identifier	re		1253432	0					
ANR	1255302	Identifier	end		1253432	1					
ANR	1255303	Identifier	y		1253432	1					
ANR	1255304	MemberAccess	re . start . y		1253432	1					
ANR	1255305	MemberAccess	re . start		1253432	0					
ANR	1255306	Identifier	re		1253432	0					
ANR	1255307	Identifier	start		1253432	1					
ANR	1255308	Identifier	y		1253432	1					
ANR	1255309	CastExpression	( int64_t ) ( re . end . x - re . start . x )		1253432	1					
ANR	1255310	CastTarget	int64_t		1253432	0					
ANR	1255311	AdditiveExpression	re . end . x - re . start . x		1253432	1		-			
ANR	1255312	MemberAccess	re . end . x		1253432	0					
ANR	1255313	MemberAccess	re . end		1253432	0					
ANR	1255314	Identifier	re		1253432	0					
ANR	1255315	Identifier	end		1253432	1					
ANR	1255316	Identifier	x		1253432	1					
ANR	1255317	MemberAccess	re . start . x		1253432	1					
ANR	1255318	MemberAccess	re . start		1253432	0					
ANR	1255319	Identifier	re		1253432	0					
ANR	1255320	Identifier	start		1253432	1					
ANR	1255321	Identifier	x		1253432	1					
ANR	1255322	IfStatement	if ( ybr > ytop )		1253432	1					
ANR	1255323	Condition	ybr > ytop	1094:20:40787:40796	1253432	0	True				
ANR	1255324	RelationalExpression	ybr > ytop		1253432	0		>			
ANR	1255325	Identifier	ybr		1253432	0					
ANR	1255326	Identifier	ytop		1253432	1					
ANR	1255327	ExpressionStatement	ybr = ytop	1095:20:40819:40829	1253432	1	True				
ANR	1255328	AssignmentExpression	ybr = ytop		1253432	0		=			
ANR	1255329	Identifier	ybr		1253432	0					
ANR	1255330	Identifier	ytop		1253432	1					
ANR	1255331	ExpressionStatement	ytl = ytop	1099:12:40957:40967	1253432	29	True				
ANR	1255332	AssignmentExpression	ytl = ytop		1253432	0		=			
ANR	1255333	Identifier	ytl		1253432	0					
ANR	1255334	Identifier	ytop		1253432	1					
ANR	1255335	IfStatement	if ( le . end . x > le . start . x )		1253432	30					
ANR	1255336	Condition	le . end . x > le . start . x	1100:16:40985:41005	1253432	0	True				
ANR	1255337	RelationalExpression	le . end . x > le . start . x		1253432	0		>			
ANR	1255338	MemberAccess	le . end . x		1253432	0					
ANR	1255339	MemberAccess	le . end		1253432	0					
ANR	1255340	Identifier	le		1253432	0					
ANR	1255341	Identifier	end		1253432	1					
ANR	1255342	Identifier	x		1253432	1					
ANR	1255343	MemberAccess	le . start . x		1253432	1					
ANR	1255344	MemberAccess	le . start		1253432	0					
ANR	1255345	Identifier	le		1253432	0					
ANR	1255346	Identifier	start		1253432	1					
ANR	1255347	Identifier	x		1253432	1					
ANR	1255348	CompoundStatement		243:39:10328:10328	1253432	1					
ANR	1255349	ExpressionStatement	ytl -= ( fixed ) ( ( int64_t ) ( le . end . x - xleft ) * ( int64_t ) ( le . end . y - le . start . y ) / ( int64_t ) ( le . end . x - le . start . x ) )	1101:16:41026:41195	1253432	0	True				
ANR	1255350	AssignmentExpression	ytl -= ( fixed ) ( ( int64_t ) ( le . end . x - xleft ) * ( int64_t ) ( le . end . y - le . start . y ) / ( int64_t ) ( le . end . x - le . start . x ) )		1253432	0		-=			
ANR	1255351	Identifier	ytl		1253432	0					
ANR	1255352	CastExpression	( fixed ) ( ( int64_t ) ( le . end . x - xleft ) * ( int64_t ) ( le . end . y - le . start . y ) / ( int64_t ) ( le . end . x - le . start . x ) )		1253432	1					
ANR	1255353	CastTarget	fixed		1253432	0					
ANR	1255354	MultiplicativeExpression	( int64_t ) ( le . end . x - xleft ) * ( int64_t ) ( le . end . y - le . start . y ) / ( int64_t ) ( le . end . x - le . start . x )		1253432	1		*			
ANR	1255355	CastExpression	( int64_t ) ( le . end . x - xleft )		1253432	0					
ANR	1255356	CastTarget	int64_t		1253432	0					
ANR	1255357	AdditiveExpression	le . end . x - xleft		1253432	1		-			
ANR	1255358	MemberAccess	le . end . x		1253432	0					
ANR	1255359	MemberAccess	le . end		1253432	0					
ANR	1255360	Identifier	le		1253432	0					
ANR	1255361	Identifier	end		1253432	1					
ANR	1255362	Identifier	x		1253432	1					
ANR	1255363	Identifier	xleft		1253432	1					
ANR	1255364	MultiplicativeExpression	( int64_t ) ( le . end . y - le . start . y ) / ( int64_t ) ( le . end . x - le . start . x )		1253432	1		/			
ANR	1255365	CastExpression	( int64_t ) ( le . end . y - le . start . y )		1253432	0					
ANR	1255366	CastTarget	int64_t		1253432	0					
ANR	1255367	AdditiveExpression	le . end . y - le . start . y		1253432	1		-			
ANR	1255368	MemberAccess	le . end . y		1253432	0					
ANR	1255369	MemberAccess	le . end		1253432	0					
ANR	1255370	Identifier	le		1253432	0					
ANR	1255371	Identifier	end		1253432	1					
ANR	1255372	Identifier	y		1253432	1					
ANR	1255373	MemberAccess	le . start . y		1253432	1					
ANR	1255374	MemberAccess	le . start		1253432	0					
ANR	1255375	Identifier	le		1253432	0					
ANR	1255376	Identifier	start		1253432	1					
ANR	1255377	Identifier	y		1253432	1					
ANR	1255378	CastExpression	( int64_t ) ( le . end . x - le . start . x )		1253432	1					
ANR	1255379	CastTarget	int64_t		1253432	0					
ANR	1255380	AdditiveExpression	le . end . x - le . start . x		1253432	1		-			
ANR	1255381	MemberAccess	le . end . x		1253432	0					
ANR	1255382	MemberAccess	le . end		1253432	0					
ANR	1255383	Identifier	le		1253432	0					
ANR	1255384	Identifier	end		1253432	1					
ANR	1255385	Identifier	x		1253432	1					
ANR	1255386	MemberAccess	le . start . x		1253432	1					
ANR	1255387	MemberAccess	le . start		1253432	0					
ANR	1255388	Identifier	le		1253432	0					
ANR	1255389	Identifier	start		1253432	1					
ANR	1255390	Identifier	x		1253432	1					
ANR	1255391	IfStatement	if ( ytl < ybot )		1253432	1					
ANR	1255392	Condition	ytl < ybot	1104:20:41217:41226	1253432	0	True				
ANR	1255393	RelationalExpression	ytl < ybot		1253432	0		<			
ANR	1255394	Identifier	ytl		1253432	0					
ANR	1255395	Identifier	ybot		1253432	1					
ANR	1255396	ExpressionStatement	ytl = ybot	1105:20:41249:41259	1253432	1	True				
ANR	1255397	AssignmentExpression	ytl = ybot		1253432	0		=			
ANR	1255398	Identifier	ytl		1253432	0					
ANR	1255399	Identifier	ybot		1253432	1					
ANR	1255400	ExpressionStatement	ytr = ytop	1109:12:41392:41402	1253432	31	True				
ANR	1255401	AssignmentExpression	ytr = ytop		1253432	0		=			
ANR	1255402	Identifier	ytr		1253432	0					
ANR	1255403	Identifier	ytop		1253432	1					
ANR	1255404	IfStatement	if ( re . end . x < re . start . x )		1253432	32					
ANR	1255405	Condition	re . end . x < re . start . x	1110:16:41420:41440	1253432	0	True				
ANR	1255406	RelationalExpression	re . end . x < re . start . x		1253432	0		<			
ANR	1255407	MemberAccess	re . end . x		1253432	0					
ANR	1255408	MemberAccess	re . end		1253432	0					
ANR	1255409	Identifier	re		1253432	0					
ANR	1255410	Identifier	end		1253432	1					
ANR	1255411	Identifier	x		1253432	1					
ANR	1255412	MemberAccess	re . start . x		1253432	1					
ANR	1255413	MemberAccess	re . start		1253432	0					
ANR	1255414	Identifier	re		1253432	0					
ANR	1255415	Identifier	start		1253432	1					
ANR	1255416	Identifier	x		1253432	1					
ANR	1255417	CompoundStatement		253:39:10763:10763	1253432	1					
ANR	1255418	ExpressionStatement	ytr -= ( fixed ) ( ( int64_t ) ( xright - re . end . x ) * ( int64_t ) ( re . end . y - re . start . y ) / ( int64_t ) ( re . start . x - re . end . x ) )	1111:16:41461:41631	1253432	0	True				
ANR	1255419	AssignmentExpression	ytr -= ( fixed ) ( ( int64_t ) ( xright - re . end . x ) * ( int64_t ) ( re . end . y - re . start . y ) / ( int64_t ) ( re . start . x - re . end . x ) )		1253432	0		-=			
ANR	1255420	Identifier	ytr		1253432	0					
ANR	1255421	CastExpression	( fixed ) ( ( int64_t ) ( xright - re . end . x ) * ( int64_t ) ( re . end . y - re . start . y ) / ( int64_t ) ( re . start . x - re . end . x ) )		1253432	1					
ANR	1255422	CastTarget	fixed		1253432	0					
ANR	1255423	MultiplicativeExpression	( int64_t ) ( xright - re . end . x ) * ( int64_t ) ( re . end . y - re . start . y ) / ( int64_t ) ( re . start . x - re . end . x )		1253432	1		*			
ANR	1255424	CastExpression	( int64_t ) ( xright - re . end . x )		1253432	0					
ANR	1255425	CastTarget	int64_t		1253432	0					
ANR	1255426	AdditiveExpression	xright - re . end . x		1253432	1		-			
ANR	1255427	Identifier	xright		1253432	0					
ANR	1255428	MemberAccess	re . end . x		1253432	1					
ANR	1255429	MemberAccess	re . end		1253432	0					
ANR	1255430	Identifier	re		1253432	0					
ANR	1255431	Identifier	end		1253432	1					
ANR	1255432	Identifier	x		1253432	1					
ANR	1255433	MultiplicativeExpression	( int64_t ) ( re . end . y - re . start . y ) / ( int64_t ) ( re . start . x - re . end . x )		1253432	1		/			
ANR	1255434	CastExpression	( int64_t ) ( re . end . y - re . start . y )		1253432	0					
ANR	1255435	CastTarget	int64_t		1253432	0					
ANR	1255436	AdditiveExpression	re . end . y - re . start . y		1253432	1		-			
ANR	1255437	MemberAccess	re . end . y		1253432	0					
ANR	1255438	MemberAccess	re . end		1253432	0					
ANR	1255439	Identifier	re		1253432	0					
ANR	1255440	Identifier	end		1253432	1					
ANR	1255441	Identifier	y		1253432	1					
ANR	1255442	MemberAccess	re . start . y		1253432	1					
ANR	1255443	MemberAccess	re . start		1253432	0					
ANR	1255444	Identifier	re		1253432	0					
ANR	1255445	Identifier	start		1253432	1					
ANR	1255446	Identifier	y		1253432	1					
ANR	1255447	CastExpression	( int64_t ) ( re . start . x - re . end . x )		1253432	1					
ANR	1255448	CastTarget	int64_t		1253432	0					
ANR	1255449	AdditiveExpression	re . start . x - re . end . x		1253432	1		-			
ANR	1255450	MemberAccess	re . start . x		1253432	0					
ANR	1255451	MemberAccess	re . start		1253432	0					
ANR	1255452	Identifier	re		1253432	0					
ANR	1255453	Identifier	start		1253432	1					
ANR	1255454	Identifier	x		1253432	1					
ANR	1255455	MemberAccess	re . end . x		1253432	1					
ANR	1255456	MemberAccess	re . end		1253432	0					
ANR	1255457	Identifier	re		1253432	0					
ANR	1255458	Identifier	end		1253432	1					
ANR	1255459	Identifier	x		1253432	1					
ANR	1255460	IfStatement	if ( ytr < ybot )		1253432	1					
ANR	1255461	Condition	ytr < ybot	1114:20:41653:41662	1253432	0	True				
ANR	1255462	RelationalExpression	ytr < ybot		1253432	0		<			
ANR	1255463	Identifier	ytr		1253432	0					
ANR	1255464	Identifier	ybot		1253432	1					
ANR	1255465	ExpressionStatement	ytr = ybot	1115:20:41685:41695	1253432	1	True				
ANR	1255466	AssignmentExpression	ytr = ybot		1253432	0		=			
ANR	1255467	Identifier	ytr		1253432	0					
ANR	1255468	Identifier	ybot		1253432	1					
ANR	1255469	IfStatement	if ( ytl < ybr )		1253432	33					
ANR	1255470	Condition	ytl < ybr	1119:16:41860:41868	1253432	0	True				
ANR	1255471	RelationalExpression	ytl < ybr		1253432	0		<			
ANR	1255472	Identifier	ytl		1253432	0					
ANR	1255473	Identifier	ybr		1253432	1					
ANR	1255474	CompoundStatement		262:27:11191:11191	1253432	1					
ANR	1255475	ExpressionStatement	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & lenew , & re , ybot , ytl , swap_axes , pdevc , pfs -> pgs -> log_op )"	1128:16:42132:42323	1253432	0	True				
ANR	1255476	AssignmentExpression	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & lenew , & re , ybot , ytl , swap_axes , pdevc , pfs -> pgs -> log_op )"		1253432	0		=			
ANR	1255477	Identifier	code		1253432	0					
ANR	1255478	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & lenew , & re , ybot , ytl , swap_axes , pdevc , pfs -> pgs -> log_op )"		1253432	1					
ANR	1255479	Callee	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1255480	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1255481	Callee	dev_proc		1253432	0					
ANR	1255482	Identifier	dev_proc		1253432	0					
ANR	1255483	ArgumentList	pfs -> dev		1253432	1					
ANR	1255484	Argument	pfs -> dev		1253432	0					
ANR	1255485	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1255486	Identifier	pfs		1253432	0					
ANR	1255487	Identifier	dev		1253432	1					
ANR	1255488	Argument	fill_trapezoid		1253432	1					
ANR	1255489	Identifier	fill_trapezoid		1253432	0					
ANR	1255490	ArgumentList	pfs -> dev		1253432	1					
ANR	1255491	Argument	pfs -> dev		1253432	0					
ANR	1255492	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1255493	Identifier	pfs		1253432	0					
ANR	1255494	Identifier	dev		1253432	1					
ANR	1255495	Argument	& lenew		1253432	1					
ANR	1255496	UnaryOperationExpression	& lenew		1253432	0					
ANR	1255497	UnaryOperator	&		1253432	0					
ANR	1255498	Identifier	lenew		1253432	1					
ANR	1255499	Argument	& re		1253432	2					
ANR	1255500	UnaryOperationExpression	& re		1253432	0					
ANR	1255501	UnaryOperator	&		1253432	0					
ANR	1255502	Identifier	re		1253432	1					
ANR	1255503	Argument	ybot		1253432	3					
ANR	1255504	Identifier	ybot		1253432	0					
ANR	1255505	Argument	ytl		1253432	4					
ANR	1255506	Identifier	ytl		1253432	0					
ANR	1255507	Argument	swap_axes		1253432	5					
ANR	1255508	Identifier	swap_axes		1253432	0					
ANR	1255509	Argument	pdevc		1253432	6					
ANR	1255510	Identifier	pdevc		1253432	0					
ANR	1255511	Argument	pfs -> pgs -> log_op		1253432	7					
ANR	1255512	PtrMemberAccess	pfs -> pgs -> log_op		1253432	0					
ANR	1255513	PtrMemberAccess	pfs -> pgs		1253432	0					
ANR	1255514	Identifier	pfs		1253432	0					
ANR	1255515	Identifier	pgs		1253432	1					
ANR	1255516	Identifier	log_op		1253432	1					
ANR	1255517	IfStatement	if ( code < 0 )		1253432	1					
ANR	1255518	Condition	code < 0	1131:20:42345:42352	1253432	0	True				
ANR	1255519	RelationalExpression	code < 0		1253432	0		<			
ANR	1255520	Identifier	code		1253432	0					
ANR	1255521	PrimaryExpression	0		1253432	1					
ANR	1255522	ReturnStatement	return code ;	1132:20:42375:42386	1253432	1	True				
ANR	1255523	Identifier	code		1253432	0					
ANR	1255524	ExpressionStatement	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & le , & re , ytl , ybr , swap_axes , pdevc , pfs -> pgs -> log_op )"	1133:16:42404:42591	1253432	2	True				
ANR	1255525	AssignmentExpression	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & le , & re , ytl , ybr , swap_axes , pdevc , pfs -> pgs -> log_op )"		1253432	0		=			
ANR	1255526	Identifier	code		1253432	0					
ANR	1255527	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & le , & re , ytl , ybr , swap_axes , pdevc , pfs -> pgs -> log_op )"		1253432	1					
ANR	1255528	Callee	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1255529	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1255530	Callee	dev_proc		1253432	0					
ANR	1255531	Identifier	dev_proc		1253432	0					
ANR	1255532	ArgumentList	pfs -> dev		1253432	1					
ANR	1255533	Argument	pfs -> dev		1253432	0					
ANR	1255534	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1255535	Identifier	pfs		1253432	0					
ANR	1255536	Identifier	dev		1253432	1					
ANR	1255537	Argument	fill_trapezoid		1253432	1					
ANR	1255538	Identifier	fill_trapezoid		1253432	0					
ANR	1255539	ArgumentList	pfs -> dev		1253432	1					
ANR	1255540	Argument	pfs -> dev		1253432	0					
ANR	1255541	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1255542	Identifier	pfs		1253432	0					
ANR	1255543	Identifier	dev		1253432	1					
ANR	1255544	Argument	& le		1253432	1					
ANR	1255545	UnaryOperationExpression	& le		1253432	0					
ANR	1255546	UnaryOperator	&		1253432	0					
ANR	1255547	Identifier	le		1253432	1					
ANR	1255548	Argument	& re		1253432	2					
ANR	1255549	UnaryOperationExpression	& re		1253432	0					
ANR	1255550	UnaryOperator	&		1253432	0					
ANR	1255551	Identifier	re		1253432	1					
ANR	1255552	Argument	ytl		1253432	3					
ANR	1255553	Identifier	ytl		1253432	0					
ANR	1255554	Argument	ybr		1253432	4					
ANR	1255555	Identifier	ybr		1253432	0					
ANR	1255556	Argument	swap_axes		1253432	5					
ANR	1255557	Identifier	swap_axes		1253432	0					
ANR	1255558	Argument	pdevc		1253432	6					
ANR	1255559	Identifier	pdevc		1253432	0					
ANR	1255560	Argument	pfs -> pgs -> log_op		1253432	7					
ANR	1255561	PtrMemberAccess	pfs -> pgs -> log_op		1253432	0					
ANR	1255562	PtrMemberAccess	pfs -> pgs		1253432	0					
ANR	1255563	Identifier	pfs		1253432	0					
ANR	1255564	Identifier	pgs		1253432	1					
ANR	1255565	Identifier	log_op		1253432	1					
ANR	1255566	IfStatement	if ( code < 0 )		1253432	3					
ANR	1255567	Condition	code < 0	1136:20:42613:42620	1253432	0	True				
ANR	1255568	RelationalExpression	code < 0		1253432	0		<			
ANR	1255569	Identifier	code		1253432	0					
ANR	1255570	PrimaryExpression	0		1253432	1					
ANR	1255571	ReturnStatement	return code ;	1137:20:42643:42654	1253432	1	True				
ANR	1255572	Identifier	code		1253432	0					
ANR	1255573	ExpressionStatement	ybot = ybr	1138:16:42672:42682	1253432	4	True				
ANR	1255574	AssignmentExpression	ybot = ybr		1253432	0		=			
ANR	1255575	Identifier	ybot		1253432	0					
ANR	1255576	Identifier	ybr		1253432	1					
ANR	1255577	ReturnStatement	"return dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & le , & renew , ybr , ytop , swap_axes , pdevc , pfs -> pgs -> log_op ) ;"	1139:16:42700:42891	1253432	5	True				
ANR	1255578	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & le , & renew , ybr , ytop , swap_axes , pdevc , pfs -> pgs -> log_op )"		1253432	0					
ANR	1255579	Callee	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1255580	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1255581	Callee	dev_proc		1253432	0					
ANR	1255582	Identifier	dev_proc		1253432	0					
ANR	1255583	ArgumentList	pfs -> dev		1253432	1					
ANR	1255584	Argument	pfs -> dev		1253432	0					
ANR	1255585	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1255586	Identifier	pfs		1253432	0					
ANR	1255587	Identifier	dev		1253432	1					
ANR	1255588	Argument	fill_trapezoid		1253432	1					
ANR	1255589	Identifier	fill_trapezoid		1253432	0					
ANR	1255590	ArgumentList	pfs -> dev		1253432	1					
ANR	1255591	Argument	pfs -> dev		1253432	0					
ANR	1255592	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1255593	Identifier	pfs		1253432	0					
ANR	1255594	Identifier	dev		1253432	1					
ANR	1255595	Argument	& le		1253432	1					
ANR	1255596	UnaryOperationExpression	& le		1253432	0					
ANR	1255597	UnaryOperator	&		1253432	0					
ANR	1255598	Identifier	le		1253432	1					
ANR	1255599	Argument	& renew		1253432	2					
ANR	1255600	UnaryOperationExpression	& renew		1253432	0					
ANR	1255601	UnaryOperator	&		1253432	0					
ANR	1255602	Identifier	renew		1253432	1					
ANR	1255603	Argument	ybr		1253432	3					
ANR	1255604	Identifier	ybr		1253432	0					
ANR	1255605	Argument	ytop		1253432	4					
ANR	1255606	Identifier	ytop		1253432	0					
ANR	1255607	Argument	swap_axes		1253432	5					
ANR	1255608	Identifier	swap_axes		1253432	0					
ANR	1255609	Argument	pdevc		1253432	6					
ANR	1255610	Identifier	pdevc		1253432	0					
ANR	1255611	Argument	pfs -> pgs -> log_op		1253432	7					
ANR	1255612	PtrMemberAccess	pfs -> pgs -> log_op		1253432	0					
ANR	1255613	PtrMemberAccess	pfs -> pgs		1253432	0					
ANR	1255614	Identifier	pfs		1253432	0					
ANR	1255615	Identifier	pgs		1253432	1					
ANR	1255616	Identifier	log_op		1253432	1					
ANR	1255617	ElseStatement	else		1253432	0					
ANR	1255618	IfStatement	if ( ytr < ybl )		1253432	0					
ANR	1255619	Condition	ytr < ybl	1142:23:42916:42924	1253432	0	True				
ANR	1255620	RelationalExpression	ytr < ybl		1253432	0		<			
ANR	1255621	Identifier	ytr		1253432	0					
ANR	1255622	Identifier	ybl		1253432	1					
ANR	1255623	CompoundStatement		285:34:12247:12247	1253432	1					
ANR	1255624	ExpressionStatement	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & le , & renew , ybot , ytr , swap_axes , pdevc , pfs -> pgs -> log_op )"	1151:16:43189:43380	1253432	0	True				
ANR	1255625	AssignmentExpression	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & le , & renew , ybot , ytr , swap_axes , pdevc , pfs -> pgs -> log_op )"		1253432	0		=			
ANR	1255626	Identifier	code		1253432	0					
ANR	1255627	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & le , & renew , ybot , ytr , swap_axes , pdevc , pfs -> pgs -> log_op )"		1253432	1					
ANR	1255628	Callee	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1255629	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1255630	Callee	dev_proc		1253432	0					
ANR	1255631	Identifier	dev_proc		1253432	0					
ANR	1255632	ArgumentList	pfs -> dev		1253432	1					
ANR	1255633	Argument	pfs -> dev		1253432	0					
ANR	1255634	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1255635	Identifier	pfs		1253432	0					
ANR	1255636	Identifier	dev		1253432	1					
ANR	1255637	Argument	fill_trapezoid		1253432	1					
ANR	1255638	Identifier	fill_trapezoid		1253432	0					
ANR	1255639	ArgumentList	pfs -> dev		1253432	1					
ANR	1255640	Argument	pfs -> dev		1253432	0					
ANR	1255641	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1255642	Identifier	pfs		1253432	0					
ANR	1255643	Identifier	dev		1253432	1					
ANR	1255644	Argument	& le		1253432	1					
ANR	1255645	UnaryOperationExpression	& le		1253432	0					
ANR	1255646	UnaryOperator	&		1253432	0					
ANR	1255647	Identifier	le		1253432	1					
ANR	1255648	Argument	& renew		1253432	2					
ANR	1255649	UnaryOperationExpression	& renew		1253432	0					
ANR	1255650	UnaryOperator	&		1253432	0					
ANR	1255651	Identifier	renew		1253432	1					
ANR	1255652	Argument	ybot		1253432	3					
ANR	1255653	Identifier	ybot		1253432	0					
ANR	1255654	Argument	ytr		1253432	4					
ANR	1255655	Identifier	ytr		1253432	0					
ANR	1255656	Argument	swap_axes		1253432	5					
ANR	1255657	Identifier	swap_axes		1253432	0					
ANR	1255658	Argument	pdevc		1253432	6					
ANR	1255659	Identifier	pdevc		1253432	0					
ANR	1255660	Argument	pfs -> pgs -> log_op		1253432	7					
ANR	1255661	PtrMemberAccess	pfs -> pgs -> log_op		1253432	0					
ANR	1255662	PtrMemberAccess	pfs -> pgs		1253432	0					
ANR	1255663	Identifier	pfs		1253432	0					
ANR	1255664	Identifier	pgs		1253432	1					
ANR	1255665	Identifier	log_op		1253432	1					
ANR	1255666	IfStatement	if ( code < 0 )		1253432	1					
ANR	1255667	Condition	code < 0	1154:20:43402:43409	1253432	0	True				
ANR	1255668	RelationalExpression	code < 0		1253432	0		<			
ANR	1255669	Identifier	code		1253432	0					
ANR	1255670	PrimaryExpression	0		1253432	1					
ANR	1255671	ReturnStatement	return code ;	1155:20:43432:43443	1253432	1	True				
ANR	1255672	Identifier	code		1253432	0					
ANR	1255673	ExpressionStatement	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & le , & re , ytr , ybl , swap_axes , pdevc , pfs -> pgs -> log_op )"	1156:16:43461:43648	1253432	2	True				
ANR	1255674	AssignmentExpression	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & le , & re , ytr , ybl , swap_axes , pdevc , pfs -> pgs -> log_op )"		1253432	0		=			
ANR	1255675	Identifier	code		1253432	0					
ANR	1255676	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & le , & re , ytr , ybl , swap_axes , pdevc , pfs -> pgs -> log_op )"		1253432	1					
ANR	1255677	Callee	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1255678	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1255679	Callee	dev_proc		1253432	0					
ANR	1255680	Identifier	dev_proc		1253432	0					
ANR	1255681	ArgumentList	pfs -> dev		1253432	1					
ANR	1255682	Argument	pfs -> dev		1253432	0					
ANR	1255683	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1255684	Identifier	pfs		1253432	0					
ANR	1255685	Identifier	dev		1253432	1					
ANR	1255686	Argument	fill_trapezoid		1253432	1					
ANR	1255687	Identifier	fill_trapezoid		1253432	0					
ANR	1255688	ArgumentList	pfs -> dev		1253432	1					
ANR	1255689	Argument	pfs -> dev		1253432	0					
ANR	1255690	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1255691	Identifier	pfs		1253432	0					
ANR	1255692	Identifier	dev		1253432	1					
ANR	1255693	Argument	& le		1253432	1					
ANR	1255694	UnaryOperationExpression	& le		1253432	0					
ANR	1255695	UnaryOperator	&		1253432	0					
ANR	1255696	Identifier	le		1253432	1					
ANR	1255697	Argument	& re		1253432	2					
ANR	1255698	UnaryOperationExpression	& re		1253432	0					
ANR	1255699	UnaryOperator	&		1253432	0					
ANR	1255700	Identifier	re		1253432	1					
ANR	1255701	Argument	ytr		1253432	3					
ANR	1255702	Identifier	ytr		1253432	0					
ANR	1255703	Argument	ybl		1253432	4					
ANR	1255704	Identifier	ybl		1253432	0					
ANR	1255705	Argument	swap_axes		1253432	5					
ANR	1255706	Identifier	swap_axes		1253432	0					
ANR	1255707	Argument	pdevc		1253432	6					
ANR	1255708	Identifier	pdevc		1253432	0					
ANR	1255709	Argument	pfs -> pgs -> log_op		1253432	7					
ANR	1255710	PtrMemberAccess	pfs -> pgs -> log_op		1253432	0					
ANR	1255711	PtrMemberAccess	pfs -> pgs		1253432	0					
ANR	1255712	Identifier	pfs		1253432	0					
ANR	1255713	Identifier	pgs		1253432	1					
ANR	1255714	Identifier	log_op		1253432	1					
ANR	1255715	IfStatement	if ( code < 0 )		1253432	3					
ANR	1255716	Condition	code < 0	1159:20:43670:43677	1253432	0	True				
ANR	1255717	RelationalExpression	code < 0		1253432	0		<			
ANR	1255718	Identifier	code		1253432	0					
ANR	1255719	PrimaryExpression	0		1253432	1					
ANR	1255720	ReturnStatement	return code ;	1160:20:43700:43711	1253432	1	True				
ANR	1255721	Identifier	code		1253432	0					
ANR	1255722	ReturnStatement	"return dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & le , & re , ybl , ytop , swap_axes , pdevc , pfs -> pgs -> log_op ) ;"	1161:16:43729:43917	1253432	4	True				
ANR	1255723	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & le , & re , ybl , ytop , swap_axes , pdevc , pfs -> pgs -> log_op )"		1253432	0					
ANR	1255724	Callee	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1255725	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1255726	Callee	dev_proc		1253432	0					
ANR	1255727	Identifier	dev_proc		1253432	0					
ANR	1255728	ArgumentList	pfs -> dev		1253432	1					
ANR	1255729	Argument	pfs -> dev		1253432	0					
ANR	1255730	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1255731	Identifier	pfs		1253432	0					
ANR	1255732	Identifier	dev		1253432	1					
ANR	1255733	Argument	fill_trapezoid		1253432	1					
ANR	1255734	Identifier	fill_trapezoid		1253432	0					
ANR	1255735	ArgumentList	pfs -> dev		1253432	1					
ANR	1255736	Argument	pfs -> dev		1253432	0					
ANR	1255737	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1255738	Identifier	pfs		1253432	0					
ANR	1255739	Identifier	dev		1253432	1					
ANR	1255740	Argument	& le		1253432	1					
ANR	1255741	UnaryOperationExpression	& le		1253432	0					
ANR	1255742	UnaryOperator	&		1253432	0					
ANR	1255743	Identifier	le		1253432	1					
ANR	1255744	Argument	& re		1253432	2					
ANR	1255745	UnaryOperationExpression	& re		1253432	0					
ANR	1255746	UnaryOperator	&		1253432	0					
ANR	1255747	Identifier	re		1253432	1					
ANR	1255748	Argument	ybl		1253432	3					
ANR	1255749	Identifier	ybl		1253432	0					
ANR	1255750	Argument	ytop		1253432	4					
ANR	1255751	Identifier	ytop		1253432	0					
ANR	1255752	Argument	swap_axes		1253432	5					
ANR	1255753	Identifier	swap_axes		1253432	0					
ANR	1255754	Argument	pdevc		1253432	6					
ANR	1255755	Identifier	pdevc		1253432	0					
ANR	1255756	Argument	pfs -> pgs -> log_op		1253432	7					
ANR	1255757	PtrMemberAccess	pfs -> pgs -> log_op		1253432	0					
ANR	1255758	PtrMemberAccess	pfs -> pgs		1253432	0					
ANR	1255759	Identifier	pfs		1253432	0					
ANR	1255760	Identifier	pgs		1253432	1					
ANR	1255761	Identifier	log_op		1253432	1					
ANR	1255762	ExpressionStatement	ymid = ybl	1167:12:44057:44067	1253432	34	True				
ANR	1255763	AssignmentExpression	ymid = ybl		1253432	0		=			
ANR	1255764	Identifier	ymid		1253432	0					
ANR	1255765	Identifier	ybl		1253432	1					
ANR	1255766	IfStatement	if ( ymid > ybr )		1253432	35					
ANR	1255767	Condition	ymid > ybr	1168:16:44085:44094	1253432	0	True				
ANR	1255768	RelationalExpression	ymid > ybr		1253432	0		>			
ANR	1255769	Identifier	ymid		1253432	0					
ANR	1255770	Identifier	ybr		1253432	1					
ANR	1255771	ExpressionStatement	ymid = ybr	1169:16:44113:44123	1253432	1	True				
ANR	1255772	AssignmentExpression	ymid = ybr		1253432	0		=			
ANR	1255773	Identifier	ymid		1253432	0					
ANR	1255774	Identifier	ybr		1253432	1					
ANR	1255775	IfStatement	if ( ymid > ybot )		1253432	36					
ANR	1255776	Condition	ymid > ybot	1170:16:44141:44151	1253432	0	True				
ANR	1255777	RelationalExpression	ymid > ybot		1253432	0		>			
ANR	1255778	Identifier	ymid		1253432	0					
ANR	1255779	Identifier	ybot		1253432	1					
ANR	1255780	CompoundStatement		313:29:13474:13474	1253432	1					
ANR	1255781	ExpressionStatement	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & le , & re , ybot , ymid , swap_axes , pdevc , pfs -> pgs -> log_op )"	1176:16:44379:44568	1253432	0	True				
ANR	1255782	AssignmentExpression	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & le , & re , ybot , ymid , swap_axes , pdevc , pfs -> pgs -> log_op )"		1253432	0		=			
ANR	1255783	Identifier	code		1253432	0					
ANR	1255784	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & le , & re , ybot , ymid , swap_axes , pdevc , pfs -> pgs -> log_op )"		1253432	1					
ANR	1255785	Callee	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1255786	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1255787	Callee	dev_proc		1253432	0					
ANR	1255788	Identifier	dev_proc		1253432	0					
ANR	1255789	ArgumentList	pfs -> dev		1253432	1					
ANR	1255790	Argument	pfs -> dev		1253432	0					
ANR	1255791	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1255792	Identifier	pfs		1253432	0					
ANR	1255793	Identifier	dev		1253432	1					
ANR	1255794	Argument	fill_trapezoid		1253432	1					
ANR	1255795	Identifier	fill_trapezoid		1253432	0					
ANR	1255796	ArgumentList	pfs -> dev		1253432	1					
ANR	1255797	Argument	pfs -> dev		1253432	0					
ANR	1255798	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1255799	Identifier	pfs		1253432	0					
ANR	1255800	Identifier	dev		1253432	1					
ANR	1255801	Argument	& le		1253432	1					
ANR	1255802	UnaryOperationExpression	& le		1253432	0					
ANR	1255803	UnaryOperator	&		1253432	0					
ANR	1255804	Identifier	le		1253432	1					
ANR	1255805	Argument	& re		1253432	2					
ANR	1255806	UnaryOperationExpression	& re		1253432	0					
ANR	1255807	UnaryOperator	&		1253432	0					
ANR	1255808	Identifier	re		1253432	1					
ANR	1255809	Argument	ybot		1253432	3					
ANR	1255810	Identifier	ybot		1253432	0					
ANR	1255811	Argument	ymid		1253432	4					
ANR	1255812	Identifier	ymid		1253432	0					
ANR	1255813	Argument	swap_axes		1253432	5					
ANR	1255814	Identifier	swap_axes		1253432	0					
ANR	1255815	Argument	pdevc		1253432	6					
ANR	1255816	Identifier	pdevc		1253432	0					
ANR	1255817	Argument	pfs -> pgs -> log_op		1253432	7					
ANR	1255818	PtrMemberAccess	pfs -> pgs -> log_op		1253432	0					
ANR	1255819	PtrMemberAccess	pfs -> pgs		1253432	0					
ANR	1255820	Identifier	pfs		1253432	0					
ANR	1255821	Identifier	pgs		1253432	1					
ANR	1255822	Identifier	log_op		1253432	1					
ANR	1255823	IfStatement	if ( code < 0 )		1253432	1					
ANR	1255824	Condition	code < 0	1179:20:44590:44597	1253432	0	True				
ANR	1255825	RelationalExpression	code < 0		1253432	0		<			
ANR	1255826	Identifier	code		1253432	0					
ANR	1255827	PrimaryExpression	0		1253432	1					
ANR	1255828	ReturnStatement	return code ;	1180:20:44620:44631	1253432	1	True				
ANR	1255829	Identifier	code		1253432	0					
ANR	1255830	ExpressionStatement	ybot = ymid	1181:16:44649:44660	1253432	2	True				
ANR	1255831	AssignmentExpression	ybot = ymid		1253432	0		=			
ANR	1255832	Identifier	ybot		1253432	0					
ANR	1255833	Identifier	ymid		1253432	1					
ANR	1255834	ExpressionStatement	ymid = ytl	1185:12:44797:44807	1253432	37	True				
ANR	1255835	AssignmentExpression	ymid = ytl		1253432	0		=			
ANR	1255836	Identifier	ymid		1253432	0					
ANR	1255837	Identifier	ytl		1253432	1					
ANR	1255838	IfStatement	if ( ymid < ytr )		1253432	38					
ANR	1255839	Condition	ymid < ytr	1186:16:44825:44834	1253432	0	True				
ANR	1255840	RelationalExpression	ymid < ytr		1253432	0		<			
ANR	1255841	Identifier	ymid		1253432	0					
ANR	1255842	Identifier	ytr		1253432	1					
ANR	1255843	ExpressionStatement	ymid = ytr	1187:16:44853:44863	1253432	1	True				
ANR	1255844	AssignmentExpression	ymid = ytr		1253432	0		=			
ANR	1255845	Identifier	ymid		1253432	0					
ANR	1255846	Identifier	ytr		1253432	1					
ANR	1255847	IfStatement	if ( ymid < ytop )		1253432	39					
ANR	1255848	Condition	ymid < ytop	1188:16:44881:44891	1253432	0	True				
ANR	1255849	RelationalExpression	ymid < ytop		1253432	0		<			
ANR	1255850	Identifier	ymid		1253432	0					
ANR	1255851	Identifier	ytop		1253432	1					
ANR	1255852	CompoundStatement		331:29:14214:14214	1253432	1					
ANR	1255853	ExpressionStatement	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & le , & re , ymid , ytop , swap_axes , pdevc , pfs -> pgs -> log_op )"	1194:16:45119:45308	1253432	0	True				
ANR	1255854	AssignmentExpression	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & le , & re , ymid , ytop , swap_axes , pdevc , pfs -> pgs -> log_op )"		1253432	0		=			
ANR	1255855	Identifier	code		1253432	0					
ANR	1255856	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & le , & re , ymid , ytop , swap_axes , pdevc , pfs -> pgs -> log_op )"		1253432	1					
ANR	1255857	Callee	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1255858	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1255859	Callee	dev_proc		1253432	0					
ANR	1255860	Identifier	dev_proc		1253432	0					
ANR	1255861	ArgumentList	pfs -> dev		1253432	1					
ANR	1255862	Argument	pfs -> dev		1253432	0					
ANR	1255863	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1255864	Identifier	pfs		1253432	0					
ANR	1255865	Identifier	dev		1253432	1					
ANR	1255866	Argument	fill_trapezoid		1253432	1					
ANR	1255867	Identifier	fill_trapezoid		1253432	0					
ANR	1255868	ArgumentList	pfs -> dev		1253432	1					
ANR	1255869	Argument	pfs -> dev		1253432	0					
ANR	1255870	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1255871	Identifier	pfs		1253432	0					
ANR	1255872	Identifier	dev		1253432	1					
ANR	1255873	Argument	& le		1253432	1					
ANR	1255874	UnaryOperationExpression	& le		1253432	0					
ANR	1255875	UnaryOperator	&		1253432	0					
ANR	1255876	Identifier	le		1253432	1					
ANR	1255877	Argument	& re		1253432	2					
ANR	1255878	UnaryOperationExpression	& re		1253432	0					
ANR	1255879	UnaryOperator	&		1253432	0					
ANR	1255880	Identifier	re		1253432	1					
ANR	1255881	Argument	ymid		1253432	3					
ANR	1255882	Identifier	ymid		1253432	0					
ANR	1255883	Argument	ytop		1253432	4					
ANR	1255884	Identifier	ytop		1253432	0					
ANR	1255885	Argument	swap_axes		1253432	5					
ANR	1255886	Identifier	swap_axes		1253432	0					
ANR	1255887	Argument	pdevc		1253432	6					
ANR	1255888	Identifier	pdevc		1253432	0					
ANR	1255889	Argument	pfs -> pgs -> log_op		1253432	7					
ANR	1255890	PtrMemberAccess	pfs -> pgs -> log_op		1253432	0					
ANR	1255891	PtrMemberAccess	pfs -> pgs		1253432	0					
ANR	1255892	Identifier	pfs		1253432	0					
ANR	1255893	Identifier	pgs		1253432	1					
ANR	1255894	Identifier	log_op		1253432	1					
ANR	1255895	IfStatement	if ( code < 0 )		1253432	1					
ANR	1255896	Condition	code < 0	1197:20:45330:45337	1253432	0	True				
ANR	1255897	RelationalExpression	code < 0		1253432	0		<			
ANR	1255898	Identifier	code		1253432	0					
ANR	1255899	PrimaryExpression	0		1253432	1					
ANR	1255900	ReturnStatement	return code ;	1198:20:45360:45371	1253432	1	True				
ANR	1255901	Identifier	code		1253432	0					
ANR	1255902	ExpressionStatement	ytop = ymid	1199:16:45389:45400	1253432	2	True				
ANR	1255903	AssignmentExpression	ytop = ymid		1253432	0		=			
ANR	1255904	Identifier	ytop		1253432	0					
ANR	1255905	Identifier	ymid		1253432	1					
ANR	1255906	IfStatement	if ( ybl > ybot )		1253432	40					
ANR	1255907	Condition	ybl > ybot	1202:16:45497:45506	1253432	0	True				
ANR	1255908	RelationalExpression	ybl > ybot		1253432	0		>			
ANR	1255909	Identifier	ybl		1253432	0					
ANR	1255910	Identifier	ybot		1253432	1					
ANR	1255911	CompoundStatement		345:28:14829:14829	1253432	1					
ANR	1255912	ExpressionStatement	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & le , & renew , ybot , ybl , swap_axes , pdevc , pfs -> pgs -> log_op )"	1208:16:45670:45861	1253432	0	True				
ANR	1255913	AssignmentExpression	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & le , & renew , ybot , ybl , swap_axes , pdevc , pfs -> pgs -> log_op )"		1253432	0		=			
ANR	1255914	Identifier	code		1253432	0					
ANR	1255915	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & le , & renew , ybot , ybl , swap_axes , pdevc , pfs -> pgs -> log_op )"		1253432	1					
ANR	1255916	Callee	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1255917	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1255918	Callee	dev_proc		1253432	0					
ANR	1255919	Identifier	dev_proc		1253432	0					
ANR	1255920	ArgumentList	pfs -> dev		1253432	1					
ANR	1255921	Argument	pfs -> dev		1253432	0					
ANR	1255922	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1255923	Identifier	pfs		1253432	0					
ANR	1255924	Identifier	dev		1253432	1					
ANR	1255925	Argument	fill_trapezoid		1253432	1					
ANR	1255926	Identifier	fill_trapezoid		1253432	0					
ANR	1255927	ArgumentList	pfs -> dev		1253432	1					
ANR	1255928	Argument	pfs -> dev		1253432	0					
ANR	1255929	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1255930	Identifier	pfs		1253432	0					
ANR	1255931	Identifier	dev		1253432	1					
ANR	1255932	Argument	& le		1253432	1					
ANR	1255933	UnaryOperationExpression	& le		1253432	0					
ANR	1255934	UnaryOperator	&		1253432	0					
ANR	1255935	Identifier	le		1253432	1					
ANR	1255936	Argument	& renew		1253432	2					
ANR	1255937	UnaryOperationExpression	& renew		1253432	0					
ANR	1255938	UnaryOperator	&		1253432	0					
ANR	1255939	Identifier	renew		1253432	1					
ANR	1255940	Argument	ybot		1253432	3					
ANR	1255941	Identifier	ybot		1253432	0					
ANR	1255942	Argument	ybl		1253432	4					
ANR	1255943	Identifier	ybl		1253432	0					
ANR	1255944	Argument	swap_axes		1253432	5					
ANR	1255945	Identifier	swap_axes		1253432	0					
ANR	1255946	Argument	pdevc		1253432	6					
ANR	1255947	Identifier	pdevc		1253432	0					
ANR	1255948	Argument	pfs -> pgs -> log_op		1253432	7					
ANR	1255949	PtrMemberAccess	pfs -> pgs -> log_op		1253432	0					
ANR	1255950	PtrMemberAccess	pfs -> pgs		1253432	0					
ANR	1255951	Identifier	pfs		1253432	0					
ANR	1255952	Identifier	pgs		1253432	1					
ANR	1255953	Identifier	log_op		1253432	1					
ANR	1255954	IfStatement	if ( code < 0 )		1253432	1					
ANR	1255955	Condition	code < 0	1211:20:45883:45890	1253432	0	True				
ANR	1255956	RelationalExpression	code < 0		1253432	0		<			
ANR	1255957	Identifier	code		1253432	0					
ANR	1255958	PrimaryExpression	0		1253432	1					
ANR	1255959	ReturnStatement	return code ;	1212:20:45913:45924	1253432	1	True				
ANR	1255960	Identifier	code		1253432	0					
ANR	1255961	ExpressionStatement	ybot = ybl	1213:16:45942:45952	1253432	2	True				
ANR	1255962	AssignmentExpression	ybot = ybl		1253432	0		=			
ANR	1255963	Identifier	ybot		1253432	0					
ANR	1255964	Identifier	ybl		1253432	1					
ANR	1255965	ElseStatement	else		1253432	0					
ANR	1255966	IfStatement	if ( ybr > ybot )		1253432	0					
ANR	1255967	Condition	ybr > ybot	1214:23:45977:45986	1253432	0	True				
ANR	1255968	RelationalExpression	ybr > ybot		1253432	0		>			
ANR	1255969	Identifier	ybr		1253432	0					
ANR	1255970	Identifier	ybot		1253432	1					
ANR	1255971	CompoundStatement		357:35:15309:15309	1253432	1					
ANR	1255972	ExpressionStatement	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & lenew , & re , ybot , ybr , swap_axes , pdevc , pfs -> pgs -> log_op )"	1220:16:46150:46341	1253432	0	True				
ANR	1255973	AssignmentExpression	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & lenew , & re , ybot , ybr , swap_axes , pdevc , pfs -> pgs -> log_op )"		1253432	0		=			
ANR	1255974	Identifier	code		1253432	0					
ANR	1255975	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & lenew , & re , ybot , ybr , swap_axes , pdevc , pfs -> pgs -> log_op )"		1253432	1					
ANR	1255976	Callee	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1255977	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1255978	Callee	dev_proc		1253432	0					
ANR	1255979	Identifier	dev_proc		1253432	0					
ANR	1255980	ArgumentList	pfs -> dev		1253432	1					
ANR	1255981	Argument	pfs -> dev		1253432	0					
ANR	1255982	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1255983	Identifier	pfs		1253432	0					
ANR	1255984	Identifier	dev		1253432	1					
ANR	1255985	Argument	fill_trapezoid		1253432	1					
ANR	1255986	Identifier	fill_trapezoid		1253432	0					
ANR	1255987	ArgumentList	pfs -> dev		1253432	1					
ANR	1255988	Argument	pfs -> dev		1253432	0					
ANR	1255989	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1255990	Identifier	pfs		1253432	0					
ANR	1255991	Identifier	dev		1253432	1					
ANR	1255992	Argument	& lenew		1253432	1					
ANR	1255993	UnaryOperationExpression	& lenew		1253432	0					
ANR	1255994	UnaryOperator	&		1253432	0					
ANR	1255995	Identifier	lenew		1253432	1					
ANR	1255996	Argument	& re		1253432	2					
ANR	1255997	UnaryOperationExpression	& re		1253432	0					
ANR	1255998	UnaryOperator	&		1253432	0					
ANR	1255999	Identifier	re		1253432	1					
ANR	1256000	Argument	ybot		1253432	3					
ANR	1256001	Identifier	ybot		1253432	0					
ANR	1256002	Argument	ybr		1253432	4					
ANR	1256003	Identifier	ybr		1253432	0					
ANR	1256004	Argument	swap_axes		1253432	5					
ANR	1256005	Identifier	swap_axes		1253432	0					
ANR	1256006	Argument	pdevc		1253432	6					
ANR	1256007	Identifier	pdevc		1253432	0					
ANR	1256008	Argument	pfs -> pgs -> log_op		1253432	7					
ANR	1256009	PtrMemberAccess	pfs -> pgs -> log_op		1253432	0					
ANR	1256010	PtrMemberAccess	pfs -> pgs		1253432	0					
ANR	1256011	Identifier	pfs		1253432	0					
ANR	1256012	Identifier	pgs		1253432	1					
ANR	1256013	Identifier	log_op		1253432	1					
ANR	1256014	IfStatement	if ( code < 0 )		1253432	1					
ANR	1256015	Condition	code < 0	1223:20:46363:46370	1253432	0	True				
ANR	1256016	RelationalExpression	code < 0		1253432	0		<			
ANR	1256017	Identifier	code		1253432	0					
ANR	1256018	PrimaryExpression	0		1253432	1					
ANR	1256019	ReturnStatement	return code ;	1224:20:46393:46404	1253432	1	True				
ANR	1256020	Identifier	code		1253432	0					
ANR	1256021	ExpressionStatement	ybot = ybr	1225:16:46422:46432	1253432	2	True				
ANR	1256022	AssignmentExpression	ybot = ybr		1253432	0		=			
ANR	1256023	Identifier	ybot		1253432	0					
ANR	1256024	Identifier	ybr		1253432	1					
ANR	1256025	IfStatement	if ( ytl < ytop )		1253432	41					
ANR	1256026	Condition	ytl < ytop	1228:16:46526:46535	1253432	0	True				
ANR	1256027	RelationalExpression	ytl < ytop		1253432	0		<			
ANR	1256028	Identifier	ytl		1253432	0					
ANR	1256029	Identifier	ytop		1253432	1					
ANR	1256030	CompoundStatement		371:28:15858:15858	1253432	1					
ANR	1256031	ExpressionStatement	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & le , & renew , ytl , ytop , swap_axes , pdevc , pfs -> pgs -> log_op )"	1234:16:46699:46890	1253432	0	True				
ANR	1256032	AssignmentExpression	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & le , & renew , ytl , ytop , swap_axes , pdevc , pfs -> pgs -> log_op )"		1253432	0		=			
ANR	1256033	Identifier	code		1253432	0					
ANR	1256034	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & le , & renew , ytl , ytop , swap_axes , pdevc , pfs -> pgs -> log_op )"		1253432	1					
ANR	1256035	Callee	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1256036	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1256037	Callee	dev_proc		1253432	0					
ANR	1256038	Identifier	dev_proc		1253432	0					
ANR	1256039	ArgumentList	pfs -> dev		1253432	1					
ANR	1256040	Argument	pfs -> dev		1253432	0					
ANR	1256041	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1256042	Identifier	pfs		1253432	0					
ANR	1256043	Identifier	dev		1253432	1					
ANR	1256044	Argument	fill_trapezoid		1253432	1					
ANR	1256045	Identifier	fill_trapezoid		1253432	0					
ANR	1256046	ArgumentList	pfs -> dev		1253432	1					
ANR	1256047	Argument	pfs -> dev		1253432	0					
ANR	1256048	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1256049	Identifier	pfs		1253432	0					
ANR	1256050	Identifier	dev		1253432	1					
ANR	1256051	Argument	& le		1253432	1					
ANR	1256052	UnaryOperationExpression	& le		1253432	0					
ANR	1256053	UnaryOperator	&		1253432	0					
ANR	1256054	Identifier	le		1253432	1					
ANR	1256055	Argument	& renew		1253432	2					
ANR	1256056	UnaryOperationExpression	& renew		1253432	0					
ANR	1256057	UnaryOperator	&		1253432	0					
ANR	1256058	Identifier	renew		1253432	1					
ANR	1256059	Argument	ytl		1253432	3					
ANR	1256060	Identifier	ytl		1253432	0					
ANR	1256061	Argument	ytop		1253432	4					
ANR	1256062	Identifier	ytop		1253432	0					
ANR	1256063	Argument	swap_axes		1253432	5					
ANR	1256064	Identifier	swap_axes		1253432	0					
ANR	1256065	Argument	pdevc		1253432	6					
ANR	1256066	Identifier	pdevc		1253432	0					
ANR	1256067	Argument	pfs -> pgs -> log_op		1253432	7					
ANR	1256068	PtrMemberAccess	pfs -> pgs -> log_op		1253432	0					
ANR	1256069	PtrMemberAccess	pfs -> pgs		1253432	0					
ANR	1256070	Identifier	pfs		1253432	0					
ANR	1256071	Identifier	pgs		1253432	1					
ANR	1256072	Identifier	log_op		1253432	1					
ANR	1256073	IfStatement	if ( code < 0 )		1253432	1					
ANR	1256074	Condition	code < 0	1237:20:46912:46919	1253432	0	True				
ANR	1256075	RelationalExpression	code < 0		1253432	0		<			
ANR	1256076	Identifier	code		1253432	0					
ANR	1256077	PrimaryExpression	0		1253432	1					
ANR	1256078	ReturnStatement	return code ;	1238:20:46942:46953	1253432	1	True				
ANR	1256079	Identifier	code		1253432	0					
ANR	1256080	ExpressionStatement	ytop = ytl	1239:16:46971:46981	1253432	2	True				
ANR	1256081	AssignmentExpression	ytop = ytl		1253432	0		=			
ANR	1256082	Identifier	ytop		1253432	0					
ANR	1256083	Identifier	ytl		1253432	1					
ANR	1256084	ElseStatement	else		1253432	0					
ANR	1256085	IfStatement	if ( ytr < ytop )		1253432	0					
ANR	1256086	Condition	ytr < ytop	1240:23:47006:47015	1253432	0	True				
ANR	1256087	RelationalExpression	ytr < ytop		1253432	0		<			
ANR	1256088	Identifier	ytr		1253432	0					
ANR	1256089	Identifier	ytop		1253432	1					
ANR	1256090	CompoundStatement		383:35:16338:16338	1253432	1					
ANR	1256091	ExpressionStatement	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & lenew , & re , ytr , ytop , swap_axes , pdevc , pfs -> pgs -> log_op )"	1246:16:47179:47370	1253432	0	True				
ANR	1256092	AssignmentExpression	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & lenew , & re , ytr , ytop , swap_axes , pdevc , pfs -> pgs -> log_op )"		1253432	0		=			
ANR	1256093	Identifier	code		1253432	0					
ANR	1256094	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & lenew , & re , ytr , ytop , swap_axes , pdevc , pfs -> pgs -> log_op )"		1253432	1					
ANR	1256095	Callee	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1256096	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1256097	Callee	dev_proc		1253432	0					
ANR	1256098	Identifier	dev_proc		1253432	0					
ANR	1256099	ArgumentList	pfs -> dev		1253432	1					
ANR	1256100	Argument	pfs -> dev		1253432	0					
ANR	1256101	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1256102	Identifier	pfs		1253432	0					
ANR	1256103	Identifier	dev		1253432	1					
ANR	1256104	Argument	fill_trapezoid		1253432	1					
ANR	1256105	Identifier	fill_trapezoid		1253432	0					
ANR	1256106	ArgumentList	pfs -> dev		1253432	1					
ANR	1256107	Argument	pfs -> dev		1253432	0					
ANR	1256108	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1256109	Identifier	pfs		1253432	0					
ANR	1256110	Identifier	dev		1253432	1					
ANR	1256111	Argument	& lenew		1253432	1					
ANR	1256112	UnaryOperationExpression	& lenew		1253432	0					
ANR	1256113	UnaryOperator	&		1253432	0					
ANR	1256114	Identifier	lenew		1253432	1					
ANR	1256115	Argument	& re		1253432	2					
ANR	1256116	UnaryOperationExpression	& re		1253432	0					
ANR	1256117	UnaryOperator	&		1253432	0					
ANR	1256118	Identifier	re		1253432	1					
ANR	1256119	Argument	ytr		1253432	3					
ANR	1256120	Identifier	ytr		1253432	0					
ANR	1256121	Argument	ytop		1253432	4					
ANR	1256122	Identifier	ytop		1253432	0					
ANR	1256123	Argument	swap_axes		1253432	5					
ANR	1256124	Identifier	swap_axes		1253432	0					
ANR	1256125	Argument	pdevc		1253432	6					
ANR	1256126	Identifier	pdevc		1253432	0					
ANR	1256127	Argument	pfs -> pgs -> log_op		1253432	7					
ANR	1256128	PtrMemberAccess	pfs -> pgs -> log_op		1253432	0					
ANR	1256129	PtrMemberAccess	pfs -> pgs		1253432	0					
ANR	1256130	Identifier	pfs		1253432	0					
ANR	1256131	Identifier	pgs		1253432	1					
ANR	1256132	Identifier	log_op		1253432	1					
ANR	1256133	IfStatement	if ( code < 0 )		1253432	1					
ANR	1256134	Condition	code < 0	1249:20:47392:47399	1253432	0	True				
ANR	1256135	RelationalExpression	code < 0		1253432	0		<			
ANR	1256136	Identifier	code		1253432	0					
ANR	1256137	PrimaryExpression	0		1253432	1					
ANR	1256138	ReturnStatement	return code ;	1250:20:47422:47433	1253432	1	True				
ANR	1256139	Identifier	code		1253432	0					
ANR	1256140	ExpressionStatement	ytop = ytr	1251:16:47451:47461	1253432	2	True				
ANR	1256141	AssignmentExpression	ytop = ytr		1253432	0		=			
ANR	1256142	Identifier	ytop		1253432	0					
ANR	1256143	Identifier	ytr		1253432	1					
ANR	1256144	IfStatement	if ( ybot > ytop )		1253432	42					
ANR	1256145	Condition	ybot > ytop	1255:16:47599:47609	1253432	0	True				
ANR	1256146	RelationalExpression	ybot > ytop		1253432	0		>			
ANR	1256147	Identifier	ybot		1253432	0					
ANR	1256148	Identifier	ytop		1253432	1					
ANR	1256149	ReturnStatement	return 0 ;	1256:16:47628:47636	1253432	1	True				
ANR	1256150	PrimaryExpression	0		1253432	0					
ANR	1256151	ReturnStatement	"return dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & lenew , & renew , ybot , ytop , swap_axes , pdevc , pfs -> pgs -> log_op ) ;"	1257:12:47650:47845	1253432	43	True				
ANR	1256152	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & lenew , & renew , ybot , ytop , swap_axes , pdevc , pfs -> pgs -> log_op )"		1253432	0					
ANR	1256153	Callee	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1256154	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1256155	Callee	dev_proc		1253432	0					
ANR	1256156	Identifier	dev_proc		1253432	0					
ANR	1256157	ArgumentList	pfs -> dev		1253432	1					
ANR	1256158	Argument	pfs -> dev		1253432	0					
ANR	1256159	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1256160	Identifier	pfs		1253432	0					
ANR	1256161	Identifier	dev		1253432	1					
ANR	1256162	Argument	fill_trapezoid		1253432	1					
ANR	1256163	Identifier	fill_trapezoid		1253432	0					
ANR	1256164	ArgumentList	pfs -> dev		1253432	1					
ANR	1256165	Argument	pfs -> dev		1253432	0					
ANR	1256166	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1256167	Identifier	pfs		1253432	0					
ANR	1256168	Identifier	dev		1253432	1					
ANR	1256169	Argument	& lenew		1253432	1					
ANR	1256170	UnaryOperationExpression	& lenew		1253432	0					
ANR	1256171	UnaryOperator	&		1253432	0					
ANR	1256172	Identifier	lenew		1253432	1					
ANR	1256173	Argument	& renew		1253432	2					
ANR	1256174	UnaryOperationExpression	& renew		1253432	0					
ANR	1256175	UnaryOperator	&		1253432	0					
ANR	1256176	Identifier	renew		1253432	1					
ANR	1256177	Argument	ybot		1253432	3					
ANR	1256178	Identifier	ybot		1253432	0					
ANR	1256179	Argument	ytop		1253432	4					
ANR	1256180	Identifier	ytop		1253432	0					
ANR	1256181	Argument	swap_axes		1253432	5					
ANR	1256182	Identifier	swap_axes		1253432	0					
ANR	1256183	Argument	pdevc		1253432	6					
ANR	1256184	Identifier	pdevc		1253432	0					
ANR	1256185	Argument	pfs -> pgs -> log_op		1253432	7					
ANR	1256186	PtrMemberAccess	pfs -> pgs -> log_op		1253432	0					
ANR	1256187	PtrMemberAccess	pfs -> pgs		1253432	0					
ANR	1256188	Identifier	pfs		1253432	0					
ANR	1256189	Identifier	pgs		1253432	1					
ANR	1256190	Identifier	log_op		1253432	1					
ANR	1256191	ReturnStatement	"return dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & le , & re , ybot , ytop , swap_axes , pdevc , pfs -> pgs -> log_op ) ;"	1262:4:47867:47988	1253432	12	True				
ANR	1256192	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & le , & re , ybot , ytop , swap_axes , pdevc , pfs -> pgs -> log_op )"		1253432	0					
ANR	1256193	Callee	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1256194	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid )"		1253432	0					
ANR	1256195	Callee	dev_proc		1253432	0					
ANR	1256196	Identifier	dev_proc		1253432	0					
ANR	1256197	ArgumentList	pfs -> dev		1253432	1					
ANR	1256198	Argument	pfs -> dev		1253432	0					
ANR	1256199	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1256200	Identifier	pfs		1253432	0					
ANR	1256201	Identifier	dev		1253432	1					
ANR	1256202	Argument	fill_trapezoid		1253432	1					
ANR	1256203	Identifier	fill_trapezoid		1253432	0					
ANR	1256204	ArgumentList	pfs -> dev		1253432	1					
ANR	1256205	Argument	pfs -> dev		1253432	0					
ANR	1256206	PtrMemberAccess	pfs -> dev		1253432	0					
ANR	1256207	Identifier	pfs		1253432	0					
ANR	1256208	Identifier	dev		1253432	1					
ANR	1256209	Argument	& le		1253432	1					
ANR	1256210	UnaryOperationExpression	& le		1253432	0					
ANR	1256211	UnaryOperator	&		1253432	0					
ANR	1256212	Identifier	le		1253432	1					
ANR	1256213	Argument	& re		1253432	2					
ANR	1256214	UnaryOperationExpression	& re		1253432	0					
ANR	1256215	UnaryOperator	&		1253432	0					
ANR	1256216	Identifier	re		1253432	1					
ANR	1256217	Argument	ybot		1253432	3					
ANR	1256218	Identifier	ybot		1253432	0					
ANR	1256219	Argument	ytop		1253432	4					
ANR	1256220	Identifier	ytop		1253432	0					
ANR	1256221	Argument	swap_axes		1253432	5					
ANR	1256222	Identifier	swap_axes		1253432	0					
ANR	1256223	Argument	pdevc		1253432	6					
ANR	1256224	Identifier	pdevc		1253432	0					
ANR	1256225	Argument	pfs -> pgs -> log_op		1253432	7					
ANR	1256226	PtrMemberAccess	pfs -> pgs -> log_op		1253432	0					
ANR	1256227	PtrMemberAccess	pfs -> pgs		1253432	0					
ANR	1256228	Identifier	pfs		1253432	0					
ANR	1256229	Identifier	pgs		1253432	1					
ANR	1256230	Identifier	log_op		1253432	1					
ANR	1256231	ReturnType	static inline int		1253432	1					
ANR	1256232	Identifier	gx_shade_trapezoid		1253432	2					
ANR	1256233	ParameterList	"patch_fill_state_t * pfs , const gs_fixed_point q [ 4 ] , int vi0 , int vi1 , int vi2 , int vi3 , fixed ybot0 , fixed ytop0 , bool swap_axes , const gx_device_color * pdevc , bool orient"		1253432	3					
ANR	1256234	Parameter	patch_fill_state_t * pfs	855:19:30490:30512	1253432	0	True				
ANR	1256235	ParameterType	patch_fill_state_t *		1253432	0					
ANR	1256236	Identifier	pfs		1253432	1					
ANR	1256237	Parameter	const gs_fixed_point q [ 4 ]	855:44:30515:30539	1253432	1	True				
ANR	1256238	ParameterType	const gs_fixed_point [ 4 ]		1253432	0					
ANR	1256239	Identifier	q		1253432	1					
ANR	1256240	Parameter	int vi0	856:8:30550:30556	1253432	2	True				
ANR	1256241	ParameterType	int		1253432	0					
ANR	1256242	Identifier	vi0		1253432	1					
ANR	1256243	Parameter	int vi1	856:17:30559:30565	1253432	3	True				
ANR	1256244	ParameterType	int		1253432	0					
ANR	1256245	Identifier	vi1		1253432	1					
ANR	1256246	Parameter	int vi2	856:26:30568:30574	1253432	4	True				
ANR	1256247	ParameterType	int		1253432	0					
ANR	1256248	Identifier	vi2		1253432	1					
ANR	1256249	Parameter	int vi3	856:35:30577:30583	1253432	5	True				
ANR	1256250	ParameterType	int		1253432	0					
ANR	1256251	Identifier	vi3		1253432	1					
ANR	1256252	Parameter	fixed ybot0	856:44:30586:30596	1253432	6	True				
ANR	1256253	ParameterType	fixed		1253432	0					
ANR	1256254	Identifier	ybot0		1253432	1					
ANR	1256255	Parameter	fixed ytop0	856:57:30599:30609	1253432	7	True				
ANR	1256256	ParameterType	fixed		1253432	0					
ANR	1256257	Identifier	ytop0		1253432	1					
ANR	1256258	Parameter	bool swap_axes	857:8:30620:30633	1253432	8	True				
ANR	1256259	ParameterType	bool		1253432	0					
ANR	1256260	Identifier	swap_axes		1253432	1					
ANR	1256261	Parameter	const gx_device_color * pdevc	857:24:30636:30663	1253432	9	True				
ANR	1256262	ParameterType	const gx_device_color *		1253432	0					
ANR	1256263	Identifier	pdevc		1253432	1					
ANR	1256264	Parameter	bool orient	857:54:30666:30676	1253432	10	True				
ANR	1256265	ParameterType	bool		1253432	0					
ANR	1256266	Identifier	orient		1253432	1					
ANR	1256267	CFGEntryNode	ENTRY		1253432		True				
ANR	1256268	CFGExitNode	EXIT		1253432		True				
ANR	1256269	Symbol	ybl		1253432						
ANR	1256270	Symbol	ytop		1253432						
ANR	1256271	Symbol	re . start . x		1253432						
ANR	1256272	Symbol	le . end		1253432						
ANR	1256273	Symbol	pdevc		1253432						
ANR	1256274	Symbol	re . start . y		1253432						
ANR	1256275	Symbol	pfs -> pgs -> log_op		1253432						
ANR	1256276	Symbol	ybr		1253432						
ANR	1256277	Symbol	lenew . end . x		1253432						
ANR	1256278	Symbol	lenew . end . y		1253432						
ANR	1256279	Symbol	le . start . y		1253432						
ANR	1256280	Symbol	le . end . x		1253432						
ANR	1256281	Symbol	le . end . y		1253432						
ANR	1256282	Symbol	* * pfs		1253432						
ANR	1256283	Symbol	ybot0		1253432						
ANR	1256284	Symbol	le . start . x		1253432						
ANR	1256285	Symbol	ybot		1253432						
ANR	1256286	Symbol	ymid		1253432						
ANR	1256287	Symbol	xright		1253432						
ANR	1256288	Symbol	pfs -> rect . q		1253432						
ANR	1256289	Symbol	renew . start . x		1253432						
ANR	1256290	Symbol	fill_trapezoid		1253432						
ANR	1256291	Symbol	pfs -> rect . p		1253432						
ANR	1256292	Symbol	renew . start . y		1253432						
ANR	1256293	Symbol	pfs -> rect . p . x		1253432						
ANR	1256294	Symbol	& le		1253432						
ANR	1256295	Symbol	pfs -> rect . p . y		1253432						
ANR	1256296	Symbol	orient		1253432						
ANR	1256297	Symbol	lenew		1253432						
ANR	1256298	Symbol	* pfs		1253432						
ANR	1256299	Symbol	pfs -> pgs		1253432						
ANR	1256300	Symbol	ytop0		1253432						
ANR	1256301	Symbol	& renew		1253432						
ANR	1256302	Symbol	ytl		1253432						
ANR	1256303	Symbol	xleft		1253432						
ANR	1256304	Symbol	re . end . x		1253432						
ANR	1256305	Symbol	re		1253432						
ANR	1256306	Symbol	re . end . y		1253432						
ANR	1256307	Symbol	* pfs -> pgs		1253432						
ANR	1256308	Symbol	ytr		1253432						
ANR	1256309	Symbol	true		1253432						
ANR	1256310	Symbol	pfs		1253432						
ANR	1256311	Symbol	lenew . start		1253432						
ANR	1256312	Symbol	code		1253432						
ANR	1256313	Symbol	pfs -> rect . q . x		1253432						
ANR	1256314	Symbol	pfs -> rect . q . y		1253432						
ANR	1256315	Symbol	min		1253432						
ANR	1256316	Symbol	dev_proc		1253432						
ANR	1256317	Symbol	vi0		1253432						
ANR	1256318	Symbol	re . start		1253432						
ANR	1256319	Symbol	vi2		1253432						
ANR	1256320	Symbol	renew . end . x		1253432						
ANR	1256321	Symbol	renew . end		1253432						
ANR	1256322	Symbol	vi1		1253432						
ANR	1256323	Symbol	renew . end . y		1253432						
ANR	1256324	Symbol	lenew . start . y		1253432						
ANR	1256325	Symbol	vi3		1253432						
ANR	1256326	Symbol	pfs -> rect		1253432						
ANR	1256327	Symbol	lenew . start . x		1253432						
ANR	1256328	Symbol	& lenew		1253432						
ANR	1256329	Symbol	max		1253432						
ANR	1256330	Symbol	pfs -> inside		1253432						
ANR	1256331	Symbol	false		1253432						
ANR	1256332	Symbol	make_trapezoid		1253432						
ANR	1256333	Symbol	le . start		1253432						
ANR	1256334	Symbol	q		1253432						
ANR	1256335	Symbol	pfs -> dev		1253432						
ANR	1256336	Symbol	re . end		1253432						
ANR	1256337	Symbol	round		1253432						
ANR	1256338	Symbol	dbg_nofill		1253432						
ANR	1256339	Symbol	le		1253432						
ANR	1256340	Symbol	renew . start		1253432						
ANR	1256341	Symbol	renew		1253432						
ANR	1256342	Symbol	swap_axes		1253432						
ANR	1256343	Symbol	lenew . end		1253432						
ANR	1256344	Symbol	& re		1253432						
ANR	1256345	Symbol	clip		1253432						
ANR	1256346	Function	dc2fc31	1266:0:47993:48943							
ANR	1256347	FunctionDef	"dc2fc31 (const patch_fill_state_t * pfs , gx_device_color * pdevc , frac31 fc [ GX_DEVICE_COLOR_MAX_COMPONENTS ])"		1256346	0					
ANR	1256348	CompoundStatement		1269:0:48130:48943	1256346	0					
ANR	1256349	IdentifierDeclStatement	int j ;	1270:4:48136:48141	1256346	0	True				
ANR	1256350	IdentifierDecl	j		1256346	0					
ANR	1256351	IdentifierDeclType	int		1256346	0					
ANR	1256352	Identifier	j		1256346	1					
ANR	1256353	IdentifierDeclStatement	const gx_device_color_info * cinfo = & pfs -> trans_device -> color_info ;	1271:4:48147:48213	1256346	1	True				
ANR	1256354	IdentifierDecl	* cinfo = & pfs -> trans_device -> color_info		1256346	0					
ANR	1256355	IdentifierDeclType	const gx_device_color_info *		1256346	0					
ANR	1256356	Identifier	cinfo		1256346	1					
ANR	1256357	AssignmentExpression	* cinfo = & pfs -> trans_device -> color_info		1256346	2		=			
ANR	1256358	Identifier	cinfo		1256346	0					
ANR	1256359	UnaryOperationExpression	& pfs -> trans_device -> color_info		1256346	1					
ANR	1256360	UnaryOperator	&		1256346	0					
ANR	1256361	PtrMemberAccess	pfs -> trans_device -> color_info		1256346	1					
ANR	1256362	PtrMemberAccess	pfs -> trans_device		1256346	0					
ANR	1256363	Identifier	pfs		1256346	0					
ANR	1256364	Identifier	trans_device		1256346	1					
ANR	1256365	Identifier	color_info		1256346	1					
ANR	1256366	IfStatement	if ( pdevc -> type == & gx_dc_type_data_pure )		1256346	2					
ANR	1256367	Condition	pdevc -> type == & gx_dc_type_data_pure	1277:8:48456:48491	1256346	0	True				
ANR	1256368	EqualityExpression	pdevc -> type == & gx_dc_type_data_pure		1256346	0		==			
ANR	1256369	PtrMemberAccess	pdevc -> type		1256346	0					
ANR	1256370	Identifier	pdevc		1256346	0					
ANR	1256371	Identifier	type		1256346	1					
ANR	1256372	UnaryOperationExpression	& gx_dc_type_data_pure		1256346	1					
ANR	1256373	UnaryOperator	&		1256346	0					
ANR	1256374	Identifier	gx_dc_type_data_pure		1256346	1					
ANR	1256375	CompoundStatement		9:46:363:363	1256346	1					
ANR	1256376	ForStatement	for ( j = 0 ; j < cinfo -> num_components ; j ++ )		1256346	0					
ANR	1256377	ForInit	j = 0 ;	1278:13:48509:48514	1256346	0	True				
ANR	1256378	AssignmentExpression	j = 0		1256346	0		=			
ANR	1256379	Identifier	j		1256346	0					
ANR	1256380	PrimaryExpression	0		1256346	1					
ANR	1256381	Condition	j < cinfo -> num_components	1278:20:48516:48540	1256346	1	True				
ANR	1256382	RelationalExpression	j < cinfo -> num_components		1256346	0		<			
ANR	1256383	Identifier	j		1256346	0					
ANR	1256384	PtrMemberAccess	cinfo -> num_components		1256346	1					
ANR	1256385	Identifier	cinfo		1256346	0					
ANR	1256386	Identifier	num_components		1256346	1					
ANR	1256387	PostIncDecOperationExpression	j ++	1278:47:48543:48545	1256346	2	True				
ANR	1256388	Identifier	j		1256346	0					
ANR	1256389	IncDec	++		1256346	1					
ANR	1256390	CompoundStatement		12:16:485:515	1256346	3					
ANR	1256391	IdentifierDeclStatement	int shift = cinfo -> comp_shift [ j ] ;	1279:16:48566:48598	1256346	0	True				
ANR	1256392	IdentifierDecl	shift = cinfo -> comp_shift [ j ]		1256346	0					
ANR	1256393	IdentifierDeclType	int		1256346	0					
ANR	1256394	Identifier	shift		1256346	1					
ANR	1256395	AssignmentExpression	shift = cinfo -> comp_shift [ j ]		1256346	2		=			
ANR	1256396	Identifier	shift		1256346	0					
ANR	1256397	ArrayIndexing	cinfo -> comp_shift [ j ]		1256346	1					
ANR	1256398	PtrMemberAccess	cinfo -> comp_shift		1256346	0					
ANR	1256399	Identifier	cinfo		1256346	0					
ANR	1256400	Identifier	comp_shift		1256346	1					
ANR	1256401	Identifier	j		1256346	1					
ANR	1256402	IdentifierDeclStatement	int bits = cinfo -> comp_bits [ j ] ;	1280:16:48616:48646	1256346	1	True				
ANR	1256403	IdentifierDecl	bits = cinfo -> comp_bits [ j ]		1256346	0					
ANR	1256404	IdentifierDeclType	int		1256346	0					
ANR	1256405	Identifier	bits		1256346	1					
ANR	1256406	AssignmentExpression	bits = cinfo -> comp_bits [ j ]		1256346	2		=			
ANR	1256407	Identifier	bits		1256346	0					
ANR	1256408	ArrayIndexing	cinfo -> comp_bits [ j ]		1256346	1					
ANR	1256409	PtrMemberAccess	cinfo -> comp_bits		1256346	0					
ANR	1256410	Identifier	cinfo		1256346	0					
ANR	1256411	Identifier	comp_bits		1256346	1					
ANR	1256412	Identifier	j		1256346	1					
ANR	1256413	ExpressionStatement	fc [ j ] = ( ( pdevc -> colors . pure >> shift ) & ( ( 1 << bits ) - 1 ) ) << ( sizeof ( frac31 ) * 8 - 1 - bits )	1282:16:48665:48783	1256346	2	True				
ANR	1256414	AssignmentExpression	fc [ j ] = ( ( pdevc -> colors . pure >> shift ) & ( ( 1 << bits ) - 1 ) ) << ( sizeof ( frac31 ) * 8 - 1 - bits )		1256346	0		=			
ANR	1256415	ArrayIndexing	fc [ j ]		1256346	0					
ANR	1256416	Identifier	fc		1256346	0					
ANR	1256417	Identifier	j		1256346	1					
ANR	1256418	ShiftExpression	( ( pdevc -> colors . pure >> shift ) & ( ( 1 << bits ) - 1 ) ) << ( sizeof ( frac31 ) * 8 - 1 - bits )		1256346	1		<<			
ANR	1256419	BitAndExpression	( pdevc -> colors . pure >> shift ) & ( ( 1 << bits ) - 1 )		1256346	0		&			
ANR	1256420	ShiftExpression	pdevc -> colors . pure >> shift		1256346	0		>>			
ANR	1256421	MemberAccess	pdevc -> colors . pure		1256346	0					
ANR	1256422	PtrMemberAccess	pdevc -> colors		1256346	0					
ANR	1256423	Identifier	pdevc		1256346	0					
ANR	1256424	Identifier	colors		1256346	1					
ANR	1256425	Identifier	pure		1256346	1					
ANR	1256426	Identifier	shift		1256346	1					
ANR	1256427	AdditiveExpression	( 1 << bits ) - 1		1256346	1		-			
ANR	1256428	ShiftExpression	1 << bits		1256346	0		<<			
ANR	1256429	PrimaryExpression	1		1256346	0					
ANR	1256430	Identifier	bits		1256346	1					
ANR	1256431	PrimaryExpression	1		1256346	1					
ANR	1256432	AdditiveExpression	sizeof ( frac31 ) * 8 - 1 - bits		1256346	1		-			
ANR	1256433	MultiplicativeExpression	sizeof ( frac31 ) * 8		1256346	0		*			
ANR	1256434	SizeofExpression	sizeof ( frac31 )		1256346	0					
ANR	1256435	Sizeof	sizeof		1256346	0					
ANR	1256436	SizeofOperand	frac31		1256346	1					
ANR	1256437	PrimaryExpression	8		1256346	1					
ANR	1256438	AdditiveExpression	1 - bits		1256346	1		-			
ANR	1256439	PrimaryExpression	1		1256346	0					
ANR	1256440	Identifier	bits		1256346	1					
ANR	1256441	ElseStatement	else		1256346	0					
ANR	1256442	CompoundStatement		17:11:675:675	1256346	0					
ANR	1256443	ForStatement	for ( j = 0 ; j < cinfo -> num_components ; j ++ )		1256346	0					
ANR	1256444	ForInit	j = 0 ;	1286:13:48821:48826	1256346	0	True				
ANR	1256445	AssignmentExpression	j = 0		1256346	0		=			
ANR	1256446	Identifier	j		1256346	0					
ANR	1256447	PrimaryExpression	0		1256346	1					
ANR	1256448	Condition	j < cinfo -> num_components	1286:20:48828:48852	1256346	1	True				
ANR	1256449	RelationalExpression	j < cinfo -> num_components		1256346	0		<			
ANR	1256450	Identifier	j		1256346	0					
ANR	1256451	PtrMemberAccess	cinfo -> num_components		1256346	1					
ANR	1256452	Identifier	cinfo		1256346	0					
ANR	1256453	Identifier	num_components		1256346	1					
ANR	1256454	PostIncDecOperationExpression	j ++	1286:47:48855:48857	1256346	2	True				
ANR	1256455	Identifier	j		1256346	0					
ANR	1256456	IncDec	++		1256346	1					
ANR	1256457	CompoundStatement		18:52:729:729	1256346	3					
ANR	1256458	ExpressionStatement	fc [ j ] = cv2frac31 ( pdevc -> colors . devn . values [ j ] )	1287:16:48878:48925	1256346	0	True				
ANR	1256459	AssignmentExpression	fc [ j ] = cv2frac31 ( pdevc -> colors . devn . values [ j ] )		1256346	0		=			
ANR	1256460	ArrayIndexing	fc [ j ]		1256346	0					
ANR	1256461	Identifier	fc		1256346	0					
ANR	1256462	Identifier	j		1256346	1					
ANR	1256463	CallExpression	cv2frac31 ( pdevc -> colors . devn . values [ j ] )		1256346	1					
ANR	1256464	Callee	cv2frac31		1256346	0					
ANR	1256465	Identifier	cv2frac31		1256346	0					
ANR	1256466	ArgumentList	pdevc -> colors . devn . values [ j ]		1256346	1					
ANR	1256467	Argument	pdevc -> colors . devn . values [ j ]		1256346	0					
ANR	1256468	ArrayIndexing	pdevc -> colors . devn . values [ j ]		1256346	0					
ANR	1256469	MemberAccess	pdevc -> colors . devn . values		1256346	0					
ANR	1256470	MemberAccess	pdevc -> colors . devn		1256346	0					
ANR	1256471	PtrMemberAccess	pdevc -> colors		1256346	0					
ANR	1256472	Identifier	pdevc		1256346	0					
ANR	1256473	Identifier	colors		1256346	1					
ANR	1256474	Identifier	devn		1256346	1					
ANR	1256475	Identifier	values		1256346	1					
ANR	1256476	Identifier	j		1256346	1					
ANR	1256477	ReturnType	static inline void		1256346	1					
ANR	1256478	Identifier	dc2fc31		1256346	2					
ANR	1256479	ParameterList	"const patch_fill_state_t * pfs , gx_device_color * pdevc , frac31 fc [ GX_DEVICE_COLOR_MAX_COMPONENTS ]"		1256346	3					
ANR	1256480	Parameter	const patch_fill_state_t * pfs	1267:8:48020:48048	1256346	0	True				
ANR	1256481	ParameterType	const patch_fill_state_t *		1256346	0					
ANR	1256482	Identifier	pfs		1256346	1					
ANR	1256483	Parameter	gx_device_color * pdevc	1267:39:48051:48072	1256346	1	True				
ANR	1256484	ParameterType	gx_device_color *		1256346	0					
ANR	1256485	Identifier	pdevc		1256346	1					
ANR	1256486	Parameter	frac31 fc [ GX_DEVICE_COLOR_MAX_COMPONENTS ]	1268:12:48087:48127	1256346	2	True				
ANR	1256487	ParameterType	frac31 [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		1256346	0					
ANR	1256488	Identifier	fc		1256346	1					
ANR	1256489	CFGEntryNode	ENTRY		1256346		True				
ANR	1256490	CFGExitNode	EXIT		1256346		True				
ANR	1256491	Symbol	* * cinfo		1256346						
ANR	1256492	Symbol	& pfs -> trans_device -> color_info		1256346						
ANR	1256493	Symbol	pdevc -> colors . pure		1256346						
ANR	1256494	Symbol	pdevc -> colors . devn . values		1256346						
ANR	1256495	Symbol	* pdevc -> colors		1256346						
ANR	1256496	Symbol	pdevc		1256346						
ANR	1256497	Symbol	shift		1256346						
ANR	1256498	Symbol	pdevc -> colors . devn		1256346						
ANR	1256499	Symbol	pfs -> trans_device		1256346						
ANR	1256500	Symbol	cv2frac31		1256346						
ANR	1256501	Symbol	* pdevc		1256346						
ANR	1256502	Symbol	cinfo -> num_components		1256346						
ANR	1256503	Symbol	pdevc -> colors		1256346						
ANR	1256504	Symbol	cinfo -> comp_bits		1256346						
ANR	1256505	Symbol	* cinfo		1256346						
ANR	1256506	Symbol	pdevc -> type		1256346						
ANR	1256507	Symbol	* fc		1256346						
ANR	1256508	Symbol	* pdevc -> colors . devn . values		1256346						
ANR	1256509	Symbol	* cinfo -> comp_bits		1256346						
ANR	1256510	Symbol	* pfs		1256346						
ANR	1256511	Symbol	bits		1256346						
ANR	1256512	Symbol	& gx_dc_type_data_pure		1256346						
ANR	1256513	Symbol	j		1256346						
ANR	1256514	Symbol	* cinfo -> comp_shift		1256346						
ANR	1256515	Symbol	* * pdevc		1256346						
ANR	1256516	Symbol	* j		1256346						
ANR	1256517	Symbol	cinfo		1256346						
ANR	1256518	Symbol	cinfo -> comp_shift		1256346						
ANR	1256519	Symbol	* pdevc -> colors . devn		1256346						
ANR	1256520	Symbol	pfs		1256346						
ANR	1256521	Symbol	fc		1256346						
ANR	1256522	Function	patch_color_to_device_color_inline	1294:0:48981:51328							
ANR	1256523	FunctionDef	"patch_color_to_device_color_inline (const patch_fill_state_t * pfs , const patch_color_t * c , gx_device_color * pdevc , frac31 * frac_values)"		1256522	0					
ANR	1256524	CompoundStatement		1298:0:49204:51328	1256522	0					
ANR	1256525	IdentifierDeclStatement	int code ;	1302:4:49301:49309	1256522	0	True				
ANR	1256526	IdentifierDecl	code		1256522	0					
ANR	1256527	IdentifierDeclType	int		1256522	0					
ANR	1256528	Identifier	code		1256522	1					
ANR	1256529	IdentifierDeclStatement	gx_device_color devc ;	1303:4:49315:49335	1256522	1	True				
ANR	1256530	IdentifierDecl	devc		1256522	0					
ANR	1256531	IdentifierDeclType	gx_device_color		1256522	0					
ANR	1256532	Identifier	devc		1256522	1					
ANR	1256533	IfStatement	if ( DEBUG_COLOR_INDEX_CACHE && pdevc == NULL )		1256522	2					
ANR	1256534	Condition	DEBUG_COLOR_INDEX_CACHE && pdevc == NULL	1305:8:49346:49385	1256522	0	True				
ANR	1256535	AndExpression	DEBUG_COLOR_INDEX_CACHE && pdevc == NULL		1256522	0		&&			
ANR	1256536	Identifier	DEBUG_COLOR_INDEX_CACHE		1256522	0					
ANR	1256537	EqualityExpression	pdevc == NULL		1256522	1		==			
ANR	1256538	Identifier	pdevc		1256522	0					
ANR	1256539	Identifier	NULL		1256522	1					
ANR	1256540	ExpressionStatement	pdevc = & devc	1306:8:49396:49409	1256522	1	True				
ANR	1256541	AssignmentExpression	pdevc = & devc		1256522	0		=			
ANR	1256542	Identifier	pdevc		1256522	0					
ANR	1256543	UnaryOperationExpression	& devc		1256522	1					
ANR	1256544	UnaryOperator	&		1256522	0					
ANR	1256545	Identifier	devc		1256522	1					
ANR	1256546	IfStatement	if ( pfs -> pcic )		1256522	3					
ANR	1256547	Condition	pfs -> pcic	1307:8:49419:49427	1256522	0	True				
ANR	1256548	PtrMemberAccess	pfs -> pcic		1256522	0					
ANR	1256549	Identifier	pfs		1256522	0					
ANR	1256550	Identifier	pcic		1256522	1					
ANR	1256551	CompoundStatement		10:19:225:225	1256522	1					
ANR	1256552	ExpressionStatement	"code = gs_cached_color_index ( pfs -> pcic , c -> cc . paint . values , pdevc , frac_values )"	1308:8:49440:49519	1256522	0	True				
ANR	1256553	AssignmentExpression	"code = gs_cached_color_index ( pfs -> pcic , c -> cc . paint . values , pdevc , frac_values )"		1256522	0		=			
ANR	1256554	Identifier	code		1256522	0					
ANR	1256555	CallExpression	"gs_cached_color_index ( pfs -> pcic , c -> cc . paint . values , pdevc , frac_values )"		1256522	1					
ANR	1256556	Callee	gs_cached_color_index		1256522	0					
ANR	1256557	Identifier	gs_cached_color_index		1256522	0					
ANR	1256558	ArgumentList	pfs -> pcic		1256522	1					
ANR	1256559	Argument	pfs -> pcic		1256522	0					
ANR	1256560	PtrMemberAccess	pfs -> pcic		1256522	0					
ANR	1256561	Identifier	pfs		1256522	0					
ANR	1256562	Identifier	pcic		1256522	1					
ANR	1256563	Argument	c -> cc . paint . values		1256522	1					
ANR	1256564	MemberAccess	c -> cc . paint . values		1256522	0					
ANR	1256565	MemberAccess	c -> cc . paint		1256522	0					
ANR	1256566	PtrMemberAccess	c -> cc		1256522	0					
ANR	1256567	Identifier	c		1256522	0					
ANR	1256568	Identifier	cc		1256522	1					
ANR	1256569	Identifier	paint		1256522	1					
ANR	1256570	Identifier	values		1256522	1					
ANR	1256571	Argument	pdevc		1256522	2					
ANR	1256572	Identifier	pdevc		1256522	0					
ANR	1256573	Argument	frac_values		1256522	3					
ANR	1256574	Identifier	frac_values		1256522	0					
ANR	1256575	IfStatement	if ( code < 0 )		1256522	1					
ANR	1256576	Condition	code < 0	1309:12:49533:49540	1256522	0	True				
ANR	1256577	RelationalExpression	code < 0		1256522	0		<			
ANR	1256578	Identifier	code		1256522	0					
ANR	1256579	PrimaryExpression	0		1256522	1					
ANR	1256580	ReturnStatement	return code ;	1310:12:49555:49566	1256522	1	True				
ANR	1256581	Identifier	code		1256522	0					
ANR	1256582	IfStatement	if ( DEBUG_COLOR_INDEX_CACHE || pfs -> pcic == NULL )		1256522	4					
ANR	1256583	Condition	DEBUG_COLOR_INDEX_CACHE || pfs -> pcic == NULL	1312:8:49582:49625	1256522	0	True				
ANR	1256584	OrExpression	DEBUG_COLOR_INDEX_CACHE || pfs -> pcic == NULL		1256522	0		||			
ANR	1256585	Identifier	DEBUG_COLOR_INDEX_CACHE		1256522	0					
ANR	1256586	EqualityExpression	pfs -> pcic == NULL		1256522	1		==			
ANR	1256587	PtrMemberAccess	pfs -> pcic		1256522	0					
ANR	1256588	Identifier	pfs		1256522	0					
ANR	1256589	Identifier	pcic		1256522	1					
ANR	1256590	Identifier	NULL		1256522	1					
ANR	1256591	CompoundStatement		20:8:563:608	1256522	1					
ANR	1256592	Statement	if	1313:8:49638:49639	1256522	0	True				
ANR	1256593	IdentifierDeclStatement	DEBUG_COLOR_INDEX_CACHE gx_color_index cindex = pdevc -> colors . pure ;	1313:11:49641:49715	1256522	1	True				
ANR	1256594	IdentifierDecl	cindex = pdevc -> colors . pure		1256522	0					
ANR	1256595	IdentifierDeclType	DEBUG_COLOR_INDEX_CACHE gx_color_index		1256522	0					
ANR	1256596	Identifier	cindex		1256522	1					
ANR	1256597	AssignmentExpression	cindex = pdevc -> colors . pure		1256522	2		=			
ANR	1256598	Identifier	cindex		1256522	0					
ANR	1256599	MemberAccess	pdevc -> colors . pure		1256522	1					
ANR	1256600	PtrMemberAccess	pdevc -> colors		1256522	0					
ANR	1256601	Identifier	pdevc		1256522	0					
ANR	1256602	Identifier	colors		1256522	1					
ANR	1256603	Identifier	pure		1256522	1					
ANR	1256604	IdentifierDeclStatement	endif gs_client_color fcc ;	1315:8:49725:49758	1256522	2	True				
ANR	1256605	IdentifierDecl	fcc		1256522	0					
ANR	1256606	IdentifierDeclType	endif gs_client_color		1256522	0					
ANR	1256607	Identifier	fcc		1256522	1					
ANR	1256608	IdentifierDeclStatement	const gs_color_space * pcs = pfs -> direct_space ;	1317:8:49768:49813	1256522	3	True				
ANR	1256609	IdentifierDecl	* pcs = pfs -> direct_space		1256522	0					
ANR	1256610	IdentifierDeclType	const gs_color_space *		1256522	0					
ANR	1256611	Identifier	pcs		1256522	1					
ANR	1256612	AssignmentExpression	* pcs = pfs -> direct_space		1256522	2		=			
ANR	1256613	Identifier	pcs		1256522	0					
ANR	1256614	PtrMemberAccess	pfs -> direct_space		1256522	1					
ANR	1256615	Identifier	pfs		1256522	0					
ANR	1256616	Identifier	direct_space		1256522	1					
ANR	1256617	IfStatement	if ( pcs != NULL )		1256522	4					
ANR	1256618	Condition	pcs != NULL	1319:12:49828:49838	1256522	0	True				
ANR	1256619	EqualityExpression	pcs != NULL		1256522	0		!=			
ANR	1256620	Identifier	pcs		1256522	0					
ANR	1256621	Identifier	NULL		1256522	1					
ANR	1256622	CompoundStatement		22:25:636:636	1256522	1					
ANR	1256623	IfStatement	if ( pdevc == NULL )		1256522	0					
ANR	1256624	Condition	pdevc == NULL	1321:16:49860:49872	1256522	0	True				
ANR	1256625	EqualityExpression	pdevc == NULL		1256522	0		==			
ANR	1256626	Identifier	pdevc		1256522	0					
ANR	1256627	Identifier	NULL		1256522	1					
ANR	1256628	ExpressionStatement	pdevc = & devc	1322:16:49891:49904	1256522	1	True				
ANR	1256629	AssignmentExpression	pdevc = & devc		1256522	0		=			
ANR	1256630	Identifier	pdevc		1256522	0					
ANR	1256631	UnaryOperationExpression	& devc		1256522	1					
ANR	1256632	UnaryOperator	&		1256522	0					
ANR	1256633	Identifier	devc		1256522	1					
ANR	1256634	ExpressionStatement	"memcpy ( fcc . paint . values , c -> cc . paint . values , sizeof ( fcc . paint . values [ 0 ] ) * pfs -> num_components )"	1323:12:49918:50037	1256522	1	True				
ANR	1256635	CallExpression	"memcpy ( fcc . paint . values , c -> cc . paint . values , sizeof ( fcc . paint . values [ 0 ] ) * pfs -> num_components )"		1256522	0					
ANR	1256636	Callee	memcpy		1256522	0					
ANR	1256637	Identifier	memcpy		1256522	0					
ANR	1256638	ArgumentList	fcc . paint . values		1256522	1					
ANR	1256639	Argument	fcc . paint . values		1256522	0					
ANR	1256640	MemberAccess	fcc . paint . values		1256522	0					
ANR	1256641	MemberAccess	fcc . paint		1256522	0					
ANR	1256642	Identifier	fcc		1256522	0					
ANR	1256643	Identifier	paint		1256522	1					
ANR	1256644	Identifier	values		1256522	1					
ANR	1256645	Argument	c -> cc . paint . values		1256522	1					
ANR	1256646	MemberAccess	c -> cc . paint . values		1256522	0					
ANR	1256647	MemberAccess	c -> cc . paint		1256522	0					
ANR	1256648	PtrMemberAccess	c -> cc		1256522	0					
ANR	1256649	Identifier	c		1256522	0					
ANR	1256650	Identifier	cc		1256522	1					
ANR	1256651	Identifier	paint		1256522	1					
ANR	1256652	Identifier	values		1256522	1					
ANR	1256653	Argument	sizeof ( fcc . paint . values [ 0 ] ) * pfs -> num_components		1256522	2					
ANR	1256654	MultiplicativeExpression	sizeof ( fcc . paint . values [ 0 ] ) * pfs -> num_components		1256522	0		*			
ANR	1256655	SizeofExpression	sizeof ( fcc . paint . values [ 0 ] )		1256522	0					
ANR	1256656	Sizeof	sizeof		1256522	0					
ANR	1256657	ArrayIndexing	fcc . paint . values [ 0 ]		1256522	1					
ANR	1256658	MemberAccess	fcc . paint . values		1256522	0					
ANR	1256659	MemberAccess	fcc . paint		1256522	0					
ANR	1256660	Identifier	fcc		1256522	0					
ANR	1256661	Identifier	paint		1256522	1					
ANR	1256662	Identifier	values		1256522	1					
ANR	1256663	PrimaryExpression	0		1256522	1					
ANR	1256664	PtrMemberAccess	pfs -> num_components		1256522	1					
ANR	1256665	Identifier	pfs		1256522	0					
ANR	1256666	Identifier	num_components		1256522	1					
ANR	1256667	ExpressionStatement	"code = pcs -> type -> remap_color ( & fcc , pcs , pdevc , pfs -> pgs , pfs -> trans_device , gs_color_select_texture )"	1325:12:50051:50190	1256522	2	True				
ANR	1256668	AssignmentExpression	"code = pcs -> type -> remap_color ( & fcc , pcs , pdevc , pfs -> pgs , pfs -> trans_device , gs_color_select_texture )"		1256522	0		=			
ANR	1256669	Identifier	code		1256522	0					
ANR	1256670	CallExpression	"pcs -> type -> remap_color ( & fcc , pcs , pdevc , pfs -> pgs , pfs -> trans_device , gs_color_select_texture )"		1256522	1					
ANR	1256671	Callee	pcs -> type -> remap_color		1256522	0					
ANR	1256672	PtrMemberAccess	pcs -> type -> remap_color		1256522	0					
ANR	1256673	PtrMemberAccess	pcs -> type		1256522	0					
ANR	1256674	Identifier	pcs		1256522	0					
ANR	1256675	Identifier	type		1256522	1					
ANR	1256676	Identifier	remap_color		1256522	1					
ANR	1256677	ArgumentList	& fcc		1256522	1					
ANR	1256678	Argument	& fcc		1256522	0					
ANR	1256679	UnaryOperationExpression	& fcc		1256522	0					
ANR	1256680	UnaryOperator	&		1256522	0					
ANR	1256681	Identifier	fcc		1256522	1					
ANR	1256682	Argument	pcs		1256522	1					
ANR	1256683	Identifier	pcs		1256522	0					
ANR	1256684	Argument	pdevc		1256522	2					
ANR	1256685	Identifier	pdevc		1256522	0					
ANR	1256686	Argument	pfs -> pgs		1256522	3					
ANR	1256687	PtrMemberAccess	pfs -> pgs		1256522	0					
ANR	1256688	Identifier	pfs		1256522	0					
ANR	1256689	Identifier	pgs		1256522	1					
ANR	1256690	Argument	pfs -> trans_device		1256522	4					
ANR	1256691	PtrMemberAccess	pfs -> trans_device		1256522	0					
ANR	1256692	Identifier	pfs		1256522	0					
ANR	1256693	Identifier	trans_device		1256522	1					
ANR	1256694	Argument	gs_color_select_texture		1256522	5					
ANR	1256695	Identifier	gs_color_select_texture		1256522	0					
ANR	1256696	IfStatement	if ( code < 0 )		1256522	3					
ANR	1256697	Condition	code < 0	1327:16:50208:50215	1256522	0	True				
ANR	1256698	RelationalExpression	code < 0		1256522	0		<			
ANR	1256699	Identifier	code		1256522	0					
ANR	1256700	PrimaryExpression	0		1256522	1					
ANR	1256701	ReturnStatement	return code ;	1328:16:50234:50245	1256522	1	True				
ANR	1256702	Identifier	code		1256522	0					
ANR	1256703	IfStatement	if ( frac_values != NULL )		1256522	4					
ANR	1256704	Condition	frac_values != NULL	1329:16:50263:50281	1256522	0	True				
ANR	1256705	EqualityExpression	frac_values != NULL		1256522	0		!=			
ANR	1256706	Identifier	frac_values		1256522	0					
ANR	1256707	Identifier	NULL		1256522	1					
ANR	1256708	CompoundStatement		32:37:1079:1079	1256522	1					
ANR	1256709	IfStatement	if ( ! ( pdevc -> type == & gx_dc_type_data_devn || pdevc -> type == & gx_dc_type_data_pure ) )		1256522	0					
ANR	1256710	Condition	! ( pdevc -> type == & gx_dc_type_data_devn || pdevc -> type == & gx_dc_type_data_pure )	1330:20:50306:50406	1256522	0	True				
ANR	1256711	UnaryOperationExpression	! ( pdevc -> type == & gx_dc_type_data_devn || pdevc -> type == & gx_dc_type_data_pure )		1256522	0					
ANR	1256712	UnaryOperator	!		1256522	0					
ANR	1256713	OrExpression	pdevc -> type == & gx_dc_type_data_devn || pdevc -> type == & gx_dc_type_data_pure		1256522	1		||			
ANR	1256714	EqualityExpression	pdevc -> type == & gx_dc_type_data_devn		1256522	0		==			
ANR	1256715	PtrMemberAccess	pdevc -> type		1256522	0					
ANR	1256716	Identifier	pdevc		1256522	0					
ANR	1256717	Identifier	type		1256522	1					
ANR	1256718	UnaryOperationExpression	& gx_dc_type_data_devn		1256522	1					
ANR	1256719	UnaryOperator	&		1256522	0					
ANR	1256720	Identifier	gx_dc_type_data_devn		1256522	1					
ANR	1256721	EqualityExpression	pdevc -> type == & gx_dc_type_data_pure		1256522	1		==			
ANR	1256722	PtrMemberAccess	pdevc -> type		1256522	0					
ANR	1256723	Identifier	pdevc		1256522	0					
ANR	1256724	Identifier	type		1256522	1					
ANR	1256725	UnaryOperationExpression	& gx_dc_type_data_pure		1256522	1					
ANR	1256726	UnaryOperator	&		1256522	0					
ANR	1256727	Identifier	gx_dc_type_data_pure		1256522	1					
ANR	1256728	ReturnStatement	return 2 ;	1332:20:50429:50437	1256522	1	True				
ANR	1256729	PrimaryExpression	2		1256522	0					
ANR	1256730	ExpressionStatement	"dc2fc31 ( pfs , pdevc , frac_values )"	1333:16:50455:50487	1256522	1	True				
ANR	1256731	CallExpression	"dc2fc31 ( pfs , pdevc , frac_values )"		1256522	0					
ANR	1256732	Callee	dc2fc31		1256522	0					
ANR	1256733	Identifier	dc2fc31		1256522	0					
ANR	1256734	ArgumentList	pfs		1256522	1					
ANR	1256735	Argument	pfs		1256522	0					
ANR	1256736	Identifier	pfs		1256522	0					
ANR	1256737	Argument	pdevc		1256522	1					
ANR	1256738	Identifier	pdevc		1256522	0					
ANR	1256739	Argument	frac_values		1256522	2					
ANR	1256740	Identifier	frac_values		1256522	0					
ANR	1256741	Statement	if	1335:12:50515:50516	1256522	5	True				
ANR	1256742	Statement	DEBUG_COLOR_INDEX_CACHE	1335:15:50518:50540	1256522	6	True				
ANR	1256743	IfStatement	if ( cindex != pdevc -> colors . pure )		1256522	7					
ANR	1256744	Condition	cindex != pdevc -> colors . pure	1336:16:50558:50585	1256522	0	True				
ANR	1256745	EqualityExpression	cindex != pdevc -> colors . pure		1256522	0		!=			
ANR	1256746	Identifier	cindex		1256522	0					
ANR	1256747	MemberAccess	pdevc -> colors . pure		1256522	1					
ANR	1256748	PtrMemberAccess	pdevc -> colors		1256522	0					
ANR	1256749	Identifier	pdevc		1256522	0					
ANR	1256750	Identifier	colors		1256522	1					
ANR	1256751	Identifier	pure		1256522	1					
ANR	1256752	ExpressionStatement	return_error ( gs_error_unregistered )	1337:16:50604:50639	1256522	1	True				
ANR	1256753	CallExpression	return_error ( gs_error_unregistered )		1256522	0					
ANR	1256754	Callee	return_error		1256522	0					
ANR	1256755	Identifier	return_error		1256522	0					
ANR	1256756	ArgumentList	gs_error_unregistered		1256522	1					
ANR	1256757	Argument	gs_error_unregistered		1256522	0					
ANR	1256758	Identifier	gs_error_unregistered		1256522	0					
ANR	1256759	Statement	endif	1338:12:50653:50657	1256522	8	True				
ANR	1256760	ElseStatement	else		1256522	0					
ANR	1256761	CompoundStatement		49:12:1864:1921	1256522	0					
ANR	1256762	IdentifierDeclStatement	int j ;	1345:12:51050:51055	1256522	0	True				
ANR	1256763	IdentifierDecl	j		1256522	0					
ANR	1256764	IdentifierDeclType	int		1256522	0					
ANR	1256765	Identifier	j		1256522	1					
ANR	1256766	IdentifierDeclStatement	const gx_device_color_info * cinfo = & pfs -> dev -> color_info ;	1346:12:51069:51126	1256522	1	True				
ANR	1256767	IdentifierDecl	* cinfo = & pfs -> dev -> color_info		1256522	0					
ANR	1256768	IdentifierDeclType	const gx_device_color_info *		1256522	0					
ANR	1256769	Identifier	cinfo		1256522	1					
ANR	1256770	AssignmentExpression	* cinfo = & pfs -> dev -> color_info		1256522	2		=			
ANR	1256771	Identifier	cinfo		1256522	0					
ANR	1256772	UnaryOperationExpression	& pfs -> dev -> color_info		1256522	1					
ANR	1256773	UnaryOperator	&		1256522	0					
ANR	1256774	PtrMemberAccess	pfs -> dev -> color_info		1256522	1					
ANR	1256775	PtrMemberAccess	pfs -> dev		1256522	0					
ANR	1256776	Identifier	pfs		1256522	0					
ANR	1256777	Identifier	dev		1256522	1					
ANR	1256778	Identifier	color_info		1256522	1					
ANR	1256779	ForStatement	for ( j = 0 ; j < cinfo -> num_components ; j ++ )		1256522	2					
ANR	1256780	ForInit	j = 0 ;	1348:17:51146:51151	1256522	0	True				
ANR	1256781	AssignmentExpression	j = 0		1256522	0		=			
ANR	1256782	Identifier	j		1256522	0					
ANR	1256783	PrimaryExpression	0		1256522	1					
ANR	1256784	Condition	j < cinfo -> num_components	1348:24:51153:51177	1256522	1	True				
ANR	1256785	RelationalExpression	j < cinfo -> num_components		1256522	0		<			
ANR	1256786	Identifier	j		1256522	0					
ANR	1256787	PtrMemberAccess	cinfo -> num_components		1256522	1					
ANR	1256788	Identifier	cinfo		1256522	0					
ANR	1256789	Identifier	num_components		1256522	1					
ANR	1256790	PostIncDecOperationExpression	j ++	1348:51:51180:51182	1256522	2	True				
ANR	1256791	Identifier	j		1256522	0					
ANR	1256792	IncDec	++		1256522	1					
ANR	1256793	ExpressionStatement	frac_values [ j ] = ( frac31 ) c -> cc . paint . values [ j ]	1349:16:51201:51247	1256522	3	True				
ANR	1256794	AssignmentExpression	frac_values [ j ] = ( frac31 ) c -> cc . paint . values [ j ]		1256522	0		=			
ANR	1256795	ArrayIndexing	frac_values [ j ]		1256522	0					
ANR	1256796	Identifier	frac_values		1256522	0					
ANR	1256797	Identifier	j		1256522	1					
ANR	1256798	CastExpression	( frac31 ) c -> cc . paint . values [ j ]		1256522	1					
ANR	1256799	CastTarget	frac31		1256522	0					
ANR	1256800	ArrayIndexing	c -> cc . paint . values [ j ]		1256522	1					
ANR	1256801	MemberAccess	c -> cc . paint . values		1256522	0					
ANR	1256802	MemberAccess	c -> cc . paint		1256522	0					
ANR	1256803	PtrMemberAccess	c -> cc		1256522	0					
ANR	1256804	Identifier	c		1256522	0					
ANR	1256805	Identifier	cc		1256522	1					
ANR	1256806	Identifier	paint		1256522	1					
ANR	1256807	Identifier	values		1256522	1					
ANR	1256808	Identifier	j		1256522	1					
ANR	1256809	ExpressionStatement	pdevc -> type = & gx_dc_type_data_pure	1350:12:51261:51296	1256522	3	True				
ANR	1256810	AssignmentExpression	pdevc -> type = & gx_dc_type_data_pure		1256522	0		=			
ANR	1256811	PtrMemberAccess	pdevc -> type		1256522	0					
ANR	1256812	Identifier	pdevc		1256522	0					
ANR	1256813	Identifier	type		1256522	1					
ANR	1256814	UnaryOperationExpression	& gx_dc_type_data_pure		1256522	1					
ANR	1256815	UnaryOperator	&		1256522	0					
ANR	1256816	Identifier	gx_dc_type_data_pure		1256522	1					
ANR	1256817	ReturnStatement	return 0 ;	1353:4:51318:51326	1256522	5	True				
ANR	1256818	PrimaryExpression	0		1256522	0					
ANR	1256819	ReturnType	static inline int		1256522	1					
ANR	1256820	Identifier	patch_color_to_device_color_inline		1256522	2					
ANR	1256821	ParameterList	"const patch_fill_state_t * pfs , const patch_color_t * c , gx_device_color * pdevc , frac31 * frac_values"		1256522	3					
ANR	1256822	Parameter	const patch_fill_state_t * pfs	1295:35:49034:49062	1256522	0	True				
ANR	1256823	ParameterType	const patch_fill_state_t *		1256522	0					
ANR	1256824	Identifier	pfs		1256522	1					
ANR	1256825	Parameter	const patch_color_t * c	1296:35:49100:49121	1256522	1	True				
ANR	1256826	ParameterType	const patch_color_t *		1256522	0					
ANR	1256827	Identifier	c		1256522	1					
ANR	1256828	Parameter	gx_device_color * pdevc	1296:59:49124:49145	1256522	2	True				
ANR	1256829	ParameterType	gx_device_color *		1256522	0					
ANR	1256830	Identifier	pdevc		1256522	1					
ANR	1256831	Parameter	frac31 * frac_values	1297:35:49183:49201	1256522	3	True				
ANR	1256832	ParameterType	frac31 *		1256522	0					
ANR	1256833	Identifier	frac_values		1256522	1					
ANR	1256834	CFGEntryNode	ENTRY		1256522		True				
ANR	1256835	CFGExitNode	EXIT		1256522		True				
ANR	1256836	Symbol	pdevc -> colors . pure		1256522						
ANR	1256837	Symbol	pdevc		1256522						
ANR	1256838	Symbol	c -> cc		1256522						
ANR	1256839	Symbol	pfs -> pcic		1256522						
ANR	1256840	Symbol	* pcs		1256522						
ANR	1256841	Symbol	pfs -> trans_device		1256522						
ANR	1256842	Symbol	pfs -> direct_space		1256522						
ANR	1256843	Symbol	* fcc		1256522						
ANR	1256844	Symbol	cinfo -> num_components		1256522						
ANR	1256845	Symbol	pdevc -> colors		1256522						
ANR	1256846	Symbol	* cinfo		1256522						
ANR	1256847	Symbol	pcs -> type		1256522						
ANR	1256848	Symbol	pdevc -> type		1256522						
ANR	1256849	Symbol	NULL		1256522						
ANR	1256850	Symbol	cindex		1256522						
ANR	1256851	Symbol	* c -> cc		1256522						
ANR	1256852	Symbol	* pfs		1256522						
ANR	1256853	Symbol	* fcc . paint . values		1256522						
ANR	1256854	Symbol	pfs -> pgs		1256522						
ANR	1256855	Symbol	* * c		1256522						
ANR	1256856	Symbol	* c -> cc . paint		1256522						
ANR	1256857	Symbol	DEBUG_COLOR_INDEX_CACHE		1256522						
ANR	1256858	Symbol	* * pcs		1256522						
ANR	1256859	Symbol	cinfo		1256522						
ANR	1256860	Symbol	frac_values		1256522						
ANR	1256861	Symbol	* fcc . paint		1256522						
ANR	1256862	Symbol	pfs		1256522						
ANR	1256863	Symbol	c -> cc . paint . values		1256522						
ANR	1256864	Symbol	& pfs -> dev -> color_info		1256522						
ANR	1256865	Symbol	devc		1256522						
ANR	1256866	Symbol	gs_error_unregistered		1256522						
ANR	1256867	Symbol	* frac_values		1256522						
ANR	1256868	Symbol	code		1256522						
ANR	1256869	Symbol	gs_cached_color_index		1256522						
ANR	1256870	Symbol	fcc		1256522						
ANR	1256871	Symbol	* pdevc		1256522						
ANR	1256872	Symbol	fcc . paint . values		1256522						
ANR	1256873	Symbol	pfs -> num_components		1256522						
ANR	1256874	Symbol	* c -> cc . paint . values		1256522						
ANR	1256875	Symbol	* pcs -> type		1256522						
ANR	1256876	Symbol	pcs		1256522						
ANR	1256877	Symbol	pcs -> type -> remap_color		1256522						
ANR	1256878	Symbol	& devc		1256522						
ANR	1256879	Symbol	& gx_dc_type_data_devn		1256522						
ANR	1256880	Symbol	c		1256522						
ANR	1256881	Symbol	fcc . paint		1256522						
ANR	1256882	Symbol	& gx_dc_type_data_pure		1256522						
ANR	1256883	Symbol	j		1256522						
ANR	1256884	Symbol	& fcc		1256522						
ANR	1256885	Symbol	* c		1256522						
ANR	1256886	Symbol	gs_color_select_texture		1256522						
ANR	1256887	Symbol	pfs -> dev		1256522						
ANR	1256888	Symbol	c -> cc . paint		1256522						
ANR	1256889	Symbol	* j		1256522						
ANR	1256890	Function	patch_color_to_device_color	1356:0:51331:51512							
ANR	1256891	FunctionDef	"patch_color_to_device_color (const patch_fill_state_t * pfs , const patch_color_t * c , gx_device_color * pdevc)"		1256890	0					
ANR	1256892	CompoundStatement		1358:0:51442:51512	1256890	0					
ANR	1256893	ReturnStatement	"return patch_color_to_device_color_inline ( pfs , c , pdevc , NULL ) ;"	1359:4:51448:51510	1256890	0	True				
ANR	1256894	CallExpression	"patch_color_to_device_color_inline ( pfs , c , pdevc , NULL )"		1256890	0					
ANR	1256895	Callee	patch_color_to_device_color_inline		1256890	0					
ANR	1256896	Identifier	patch_color_to_device_color_inline		1256890	0					
ANR	1256897	ArgumentList	pfs		1256890	1					
ANR	1256898	Argument	pfs		1256890	0					
ANR	1256899	Identifier	pfs		1256890	0					
ANR	1256900	Argument	c		1256890	1					
ANR	1256901	Identifier	c		1256890	0					
ANR	1256902	Argument	pdevc		1256890	2					
ANR	1256903	Identifier	pdevc		1256890	0					
ANR	1256904	Argument	NULL		1256890	3					
ANR	1256905	Identifier	NULL		1256890	0					
ANR	1256906	ReturnType	int		1256890	1					
ANR	1256907	Identifier	patch_color_to_device_color		1256890	2					
ANR	1256908	ParameterList	"const patch_fill_state_t * pfs , const patch_color_t * c , gx_device_color * pdevc"		1256890	3					
ANR	1256909	Parameter	const patch_fill_state_t * pfs	1357:28:51363:51391	1256890	0	True				
ANR	1256910	ParameterType	const patch_fill_state_t *		1256890	0					
ANR	1256911	Identifier	pfs		1256890	1					
ANR	1256912	Parameter	const patch_color_t * c	1357:59:51394:51415	1256890	1	True				
ANR	1256913	ParameterType	const patch_color_t *		1256890	0					
ANR	1256914	Identifier	c		1256890	1					
ANR	1256915	Parameter	gx_device_color * pdevc	1357:83:51418:51439	1256890	2	True				
ANR	1256916	ParameterType	gx_device_color *		1256890	0					
ANR	1256917	Identifier	pdevc		1256890	1					
ANR	1256918	CFGEntryNode	ENTRY		1256890		True				
ANR	1256919	CFGExitNode	EXIT		1256890		True				
ANR	1256920	Symbol	c		1256890						
ANR	1256921	Symbol	NULL		1256890						
ANR	1256922	Symbol	pdevc		1256890						
ANR	1256923	Symbol	pfs		1256890						
ANR	1256924	Symbol	patch_color_to_device_color_inline		1256890						
ANR	1256925	Function	color_span	1362:0:51515:51997							
ANR	1256926	FunctionDef	"color_span (const patch_fill_state_t * pfs , const patch_color_t * c0 , const patch_color_t * c1)"		1256925	0					
ANR	1256927	CompoundStatement		1364:0:51628:51997	1256925	0					
ANR	1256928	IdentifierDeclStatement	"int n = pfs -> num_components , i ;"	1365:4:51634:51664	1256925	0	True				
ANR	1256929	IdentifierDecl	n = pfs -> num_components		1256925	0					
ANR	1256930	IdentifierDeclType	int		1256925	0					
ANR	1256931	Identifier	n		1256925	1					
ANR	1256932	AssignmentExpression	n = pfs -> num_components		1256925	2		=			
ANR	1256933	Identifier	n		1256925	0					
ANR	1256934	PtrMemberAccess	pfs -> num_components		1256925	1					
ANR	1256935	Identifier	pfs		1256925	0					
ANR	1256936	Identifier	num_components		1256925	1					
ANR	1256937	IdentifierDecl	i		1256925	1					
ANR	1256938	IdentifierDeclType	int		1256925	0					
ANR	1256939	Identifier	i		1256925	1					
ANR	1256940	IdentifierDeclStatement	double m ;	1366:4:51670:51678	1256925	1	True				
ANR	1256941	IdentifierDecl	m		1256925	0					
ANR	1256942	IdentifierDeclType	double		1256925	0					
ANR	1256943	Identifier	m		1256925	1					
ANR	1256944	ExpressionStatement	m = any_abs ( c1 -> cc . paint . values [ 0 ] - c0 -> cc . paint . values [ 0 ] ) / pfs -> color_domain . paint . values [ 0 ]	1369:4:51743:51839	1256925	2	True				
ANR	1256945	AssignmentExpression	m = any_abs ( c1 -> cc . paint . values [ 0 ] - c0 -> cc . paint . values [ 0 ] ) / pfs -> color_domain . paint . values [ 0 ]		1256925	0		=			
ANR	1256946	Identifier	m		1256925	0					
ANR	1256947	MultiplicativeExpression	any_abs ( c1 -> cc . paint . values [ 0 ] - c0 -> cc . paint . values [ 0 ] ) / pfs -> color_domain . paint . values [ 0 ]		1256925	1		/			
ANR	1256948	CallExpression	any_abs ( c1 -> cc . paint . values [ 0 ] - c0 -> cc . paint . values [ 0 ] )		1256925	0					
ANR	1256949	Callee	any_abs		1256925	0					
ANR	1256950	Identifier	any_abs		1256925	0					
ANR	1256951	ArgumentList	c1 -> cc . paint . values [ 0 ] - c0 -> cc . paint . values [ 0 ]		1256925	1					
ANR	1256952	Argument	c1 -> cc . paint . values [ 0 ] - c0 -> cc . paint . values [ 0 ]		1256925	0					
ANR	1256953	AdditiveExpression	c1 -> cc . paint . values [ 0 ] - c0 -> cc . paint . values [ 0 ]		1256925	0		-			
ANR	1256954	ArrayIndexing	c1 -> cc . paint . values [ 0 ]		1256925	0					
ANR	1256955	MemberAccess	c1 -> cc . paint . values		1256925	0					
ANR	1256956	MemberAccess	c1 -> cc . paint		1256925	0					
ANR	1256957	PtrMemberAccess	c1 -> cc		1256925	0					
ANR	1256958	Identifier	c1		1256925	0					
ANR	1256959	Identifier	cc		1256925	1					
ANR	1256960	Identifier	paint		1256925	1					
ANR	1256961	Identifier	values		1256925	1					
ANR	1256962	PrimaryExpression	0		1256925	1					
ANR	1256963	ArrayIndexing	c0 -> cc . paint . values [ 0 ]		1256925	1					
ANR	1256964	MemberAccess	c0 -> cc . paint . values		1256925	0					
ANR	1256965	MemberAccess	c0 -> cc . paint		1256925	0					
ANR	1256966	PtrMemberAccess	c0 -> cc		1256925	0					
ANR	1256967	Identifier	c0		1256925	0					
ANR	1256968	Identifier	cc		1256925	1					
ANR	1256969	Identifier	paint		1256925	1					
ANR	1256970	Identifier	values		1256925	1					
ANR	1256971	PrimaryExpression	0		1256925	1					
ANR	1256972	ArrayIndexing	pfs -> color_domain . paint . values [ 0 ]		1256925	1					
ANR	1256973	MemberAccess	pfs -> color_domain . paint . values		1256925	0					
ANR	1256974	MemberAccess	pfs -> color_domain . paint		1256925	0					
ANR	1256975	PtrMemberAccess	pfs -> color_domain		1256925	0					
ANR	1256976	Identifier	pfs		1256925	0					
ANR	1256977	Identifier	color_domain		1256925	1					
ANR	1256978	Identifier	paint		1256925	1					
ANR	1256979	Identifier	values		1256925	1					
ANR	1256980	PrimaryExpression	0		1256925	1					
ANR	1256981	ForStatement	for ( i = 1 ; i < n ; i ++ )		1256925	3					
ANR	1256982	ForInit	i = 1 ;	1370:9:51850:51855	1256925	0	True				
ANR	1256983	AssignmentExpression	i = 1		1256925	0		=			
ANR	1256984	Identifier	i		1256925	0					
ANR	1256985	PrimaryExpression	1		1256925	1					
ANR	1256986	Condition	i < n	1370:16:51857:51861	1256925	1	True				
ANR	1256987	RelationalExpression	i < n		1256925	0		<			
ANR	1256988	Identifier	i		1256925	0					
ANR	1256989	Identifier	n		1256925	1					
ANR	1256990	PostIncDecOperationExpression	i ++	1370:23:51864:51866	1256925	2	True				
ANR	1256991	Identifier	i		1256925	0					
ANR	1256992	IncDec	++		1256925	1					
ANR	1256993	ExpressionStatement	"m = max ( m , any_abs ( c1 -> cc . paint . values [ i ] - c0 -> cc . paint . values [ i ] ) / pfs -> color_domain . paint . values [ i ] )"	1371:8:51877:51981	1256925	3	True				
ANR	1256994	AssignmentExpression	"m = max ( m , any_abs ( c1 -> cc . paint . values [ i ] - c0 -> cc . paint . values [ i ] ) / pfs -> color_domain . paint . values [ i ] )"		1256925	0		=			
ANR	1256995	Identifier	m		1256925	0					
ANR	1256996	CallExpression	"max ( m , any_abs ( c1 -> cc . paint . values [ i ] - c0 -> cc . paint . values [ i ] ) / pfs -> color_domain . paint . values [ i ] )"		1256925	1					
ANR	1256997	Callee	max		1256925	0					
ANR	1256998	Identifier	max		1256925	0					
ANR	1256999	ArgumentList	m		1256925	1					
ANR	1257000	Argument	m		1256925	0					
ANR	1257001	Identifier	m		1256925	0					
ANR	1257002	Argument	any_abs ( c1 -> cc . paint . values [ i ] - c0 -> cc . paint . values [ i ] ) / pfs -> color_domain . paint . values [ i ]		1256925	1					
ANR	1257003	MultiplicativeExpression	any_abs ( c1 -> cc . paint . values [ i ] - c0 -> cc . paint . values [ i ] ) / pfs -> color_domain . paint . values [ i ]		1256925	0		/			
ANR	1257004	CallExpression	any_abs ( c1 -> cc . paint . values [ i ] - c0 -> cc . paint . values [ i ] )		1256925	0					
ANR	1257005	Callee	any_abs		1256925	0					
ANR	1257006	Identifier	any_abs		1256925	0					
ANR	1257007	ArgumentList	c1 -> cc . paint . values [ i ] - c0 -> cc . paint . values [ i ]		1256925	1					
ANR	1257008	Argument	c1 -> cc . paint . values [ i ] - c0 -> cc . paint . values [ i ]		1256925	0					
ANR	1257009	AdditiveExpression	c1 -> cc . paint . values [ i ] - c0 -> cc . paint . values [ i ]		1256925	0		-			
ANR	1257010	ArrayIndexing	c1 -> cc . paint . values [ i ]		1256925	0					
ANR	1257011	MemberAccess	c1 -> cc . paint . values		1256925	0					
ANR	1257012	MemberAccess	c1 -> cc . paint		1256925	0					
ANR	1257013	PtrMemberAccess	c1 -> cc		1256925	0					
ANR	1257014	Identifier	c1		1256925	0					
ANR	1257015	Identifier	cc		1256925	1					
ANR	1257016	Identifier	paint		1256925	1					
ANR	1257017	Identifier	values		1256925	1					
ANR	1257018	Identifier	i		1256925	1					
ANR	1257019	ArrayIndexing	c0 -> cc . paint . values [ i ]		1256925	1					
ANR	1257020	MemberAccess	c0 -> cc . paint . values		1256925	0					
ANR	1257021	MemberAccess	c0 -> cc . paint		1256925	0					
ANR	1257022	PtrMemberAccess	c0 -> cc		1256925	0					
ANR	1257023	Identifier	c0		1256925	0					
ANR	1257024	Identifier	cc		1256925	1					
ANR	1257025	Identifier	paint		1256925	1					
ANR	1257026	Identifier	values		1256925	1					
ANR	1257027	Identifier	i		1256925	1					
ANR	1257028	ArrayIndexing	pfs -> color_domain . paint . values [ i ]		1256925	1					
ANR	1257029	MemberAccess	pfs -> color_domain . paint . values		1256925	0					
ANR	1257030	MemberAccess	pfs -> color_domain . paint		1256925	0					
ANR	1257031	PtrMemberAccess	pfs -> color_domain		1256925	0					
ANR	1257032	Identifier	pfs		1256925	0					
ANR	1257033	Identifier	color_domain		1256925	1					
ANR	1257034	Identifier	paint		1256925	1					
ANR	1257035	Identifier	values		1256925	1					
ANR	1257036	Identifier	i		1256925	1					
ANR	1257037	ReturnStatement	return m ;	1372:4:51987:51995	1256925	4	True				
ANR	1257038	Identifier	m		1256925	0					
ANR	1257039	ReturnType	static inline double		1256925	1					
ANR	1257040	Identifier	color_span		1256925	2					
ANR	1257041	ParameterList	"const patch_fill_state_t * pfs , const patch_color_t * c0 , const patch_color_t * c1"		1256925	3					
ANR	1257042	Parameter	const patch_fill_state_t * pfs	1363:11:51547:51575	1256925	0	True				
ANR	1257043	ParameterType	const patch_fill_state_t *		1256925	0					
ANR	1257044	Identifier	pfs		1256925	1					
ANR	1257045	Parameter	const patch_color_t * c0	1363:42:51578:51600	1256925	1	True				
ANR	1257046	ParameterType	const patch_color_t *		1256925	0					
ANR	1257047	Identifier	c0		1256925	1					
ANR	1257048	Parameter	const patch_color_t * c1	1363:67:51603:51625	1256925	2	True				
ANR	1257049	ParameterType	const patch_color_t *		1256925	0					
ANR	1257050	Identifier	c1		1256925	1					
ANR	1257051	CFGEntryNode	ENTRY		1256925		True				
ANR	1257052	CFGExitNode	EXIT		1256925		True				
ANR	1257053	Symbol	pfs -> color_domain		1256925						
ANR	1257054	Symbol	* c1 -> cc		1256925						
ANR	1257055	Symbol	c0 -> cc . paint . values		1256925						
ANR	1257056	Symbol	* pfs -> color_domain		1256925						
ANR	1257057	Symbol	c0 -> cc		1256925						
ANR	1257058	Symbol	* pfs -> color_domain . paint		1256925						
ANR	1257059	Symbol	* * pfs		1256925						
ANR	1257060	Symbol	c1 -> cc . paint		1256925						
ANR	1257061	Symbol	* c0 -> cc . paint		1256925						
ANR	1257062	Symbol	pfs -> num_components		1256925						
ANR	1257063	Symbol	* * c1		1256925						
ANR	1257064	Symbol	any_abs		1256925						
ANR	1257065	Symbol	pfs -> color_domain . paint . values		1256925						
ANR	1257066	Symbol	* * c0		1256925						
ANR	1257067	Symbol	* pfs -> color_domain . paint . values		1256925						
ANR	1257068	Symbol	c1 -> cc . paint . values		1256925						
ANR	1257069	Symbol	max		1256925						
ANR	1257070	Symbol	* pfs		1256925						
ANR	1257071	Symbol	i		1256925						
ANR	1257072	Symbol	* c0 -> cc . paint . values		1256925						
ANR	1257073	Symbol	c1 -> cc		1256925						
ANR	1257074	Symbol	pfs -> color_domain . paint		1256925						
ANR	1257075	Symbol	c0		1256925						
ANR	1257076	Symbol	m		1256925						
ANR	1257077	Symbol	c1		1256925						
ANR	1257078	Symbol	n		1256925						
ANR	1257079	Symbol	* c0		1256925						
ANR	1257080	Symbol	* i		1256925						
ANR	1257081	Symbol	* c1 -> cc . paint . values		1256925						
ANR	1257082	Symbol	c0 -> cc . paint		1256925						
ANR	1257083	Symbol	* c1		1256925						
ANR	1257084	Symbol	* c0 -> cc		1256925						
ANR	1257085	Symbol	* c1 -> cc . paint		1256925						
ANR	1257086	Symbol	pfs		1256925						
ANR	1257087	Function	color_diff	1375:0:52000:52277							
ANR	1257088	FunctionDef	"color_diff (const patch_fill_state_t * pfs , const patch_color_t * c0 , const patch_color_t * c1 , patch_color_t * d)"		1257087	0					
ANR	1257089	CompoundStatement		1377:0:52129:52277	1257087	0					
ANR	1257090	IdentifierDeclStatement	"int n = pfs -> num_components , i ;"	1378:4:52135:52165	1257087	0	True				
ANR	1257091	IdentifierDecl	n = pfs -> num_components		1257087	0					
ANR	1257092	IdentifierDeclType	int		1257087	0					
ANR	1257093	Identifier	n		1257087	1					
ANR	1257094	AssignmentExpression	n = pfs -> num_components		1257087	2		=			
ANR	1257095	Identifier	n		1257087	0					
ANR	1257096	PtrMemberAccess	pfs -> num_components		1257087	1					
ANR	1257097	Identifier	pfs		1257087	0					
ANR	1257098	Identifier	num_components		1257087	1					
ANR	1257099	IdentifierDecl	i		1257087	1					
ANR	1257100	IdentifierDeclType	int		1257087	0					
ANR	1257101	Identifier	i		1257087	1					
ANR	1257102	ForStatement	for ( i = 0 ; i < n ; i ++ )		1257087	1					
ANR	1257103	ForInit	i = 0 ;	1380:9:52177:52182	1257087	0	True				
ANR	1257104	AssignmentExpression	i = 0		1257087	0		=			
ANR	1257105	Identifier	i		1257087	0					
ANR	1257106	PrimaryExpression	0		1257087	1					
ANR	1257107	Condition	i < n	1380:16:52184:52188	1257087	1	True				
ANR	1257108	RelationalExpression	i < n		1257087	0		<			
ANR	1257109	Identifier	i		1257087	0					
ANR	1257110	Identifier	n		1257087	1					
ANR	1257111	PostIncDecOperationExpression	i ++	1380:23:52191:52193	1257087	2	True				
ANR	1257112	Identifier	i		1257087	0					
ANR	1257113	IncDec	++		1257087	1					
ANR	1257114	ExpressionStatement	d -> cc . paint . values [ i ] = c1 -> cc . paint . values [ i ] - c0 -> cc . paint . values [ i ]	1381:8:52204:52275	1257087	3	True				
ANR	1257115	AssignmentExpression	d -> cc . paint . values [ i ] = c1 -> cc . paint . values [ i ] - c0 -> cc . paint . values [ i ]		1257087	0		=			
ANR	1257116	ArrayIndexing	d -> cc . paint . values [ i ]		1257087	0					
ANR	1257117	MemberAccess	d -> cc . paint . values		1257087	0					
ANR	1257118	MemberAccess	d -> cc . paint		1257087	0					
ANR	1257119	PtrMemberAccess	d -> cc		1257087	0					
ANR	1257120	Identifier	d		1257087	0					
ANR	1257121	Identifier	cc		1257087	1					
ANR	1257122	Identifier	paint		1257087	1					
ANR	1257123	Identifier	values		1257087	1					
ANR	1257124	Identifier	i		1257087	1					
ANR	1257125	AdditiveExpression	c1 -> cc . paint . values [ i ] - c0 -> cc . paint . values [ i ]		1257087	1		-			
ANR	1257126	ArrayIndexing	c1 -> cc . paint . values [ i ]		1257087	0					
ANR	1257127	MemberAccess	c1 -> cc . paint . values		1257087	0					
ANR	1257128	MemberAccess	c1 -> cc . paint		1257087	0					
ANR	1257129	PtrMemberAccess	c1 -> cc		1257087	0					
ANR	1257130	Identifier	c1		1257087	0					
ANR	1257131	Identifier	cc		1257087	1					
ANR	1257132	Identifier	paint		1257087	1					
ANR	1257133	Identifier	values		1257087	1					
ANR	1257134	Identifier	i		1257087	1					
ANR	1257135	ArrayIndexing	c0 -> cc . paint . values [ i ]		1257087	1					
ANR	1257136	MemberAccess	c0 -> cc . paint . values		1257087	0					
ANR	1257137	MemberAccess	c0 -> cc . paint		1257087	0					
ANR	1257138	PtrMemberAccess	c0 -> cc		1257087	0					
ANR	1257139	Identifier	c0		1257087	0					
ANR	1257140	Identifier	cc		1257087	1					
ANR	1257141	Identifier	paint		1257087	1					
ANR	1257142	Identifier	values		1257087	1					
ANR	1257143	Identifier	i		1257087	1					
ANR	1257144	ReturnType	static inline void		1257087	1					
ANR	1257145	Identifier	color_diff		1257087	2					
ANR	1257146	ParameterList	"const patch_fill_state_t * pfs , const patch_color_t * c0 , const patch_color_t * c1 , patch_color_t * d"		1257087	3					
ANR	1257147	Parameter	const patch_fill_state_t * pfs	1376:11:52030:52058	1257087	0	True				
ANR	1257148	ParameterType	const patch_fill_state_t *		1257087	0					
ANR	1257149	Identifier	pfs		1257087	1					
ANR	1257150	Parameter	const patch_color_t * c0	1376:42:52061:52083	1257087	1	True				
ANR	1257151	ParameterType	const patch_color_t *		1257087	0					
ANR	1257152	Identifier	c0		1257087	1					
ANR	1257153	Parameter	const patch_color_t * c1	1376:67:52086:52108	1257087	2	True				
ANR	1257154	ParameterType	const patch_color_t *		1257087	0					
ANR	1257155	Identifier	c1		1257087	1					
ANR	1257156	Parameter	patch_color_t * d	1376:92:52111:52126	1257087	3	True				
ANR	1257157	ParameterType	patch_color_t *		1257087	0					
ANR	1257158	Identifier	d		1257087	1					
ANR	1257159	CFGEntryNode	ENTRY		1257087		True				
ANR	1257160	CFGExitNode	EXIT		1257087		True				
ANR	1257161	Symbol	* c1 -> cc		1257087						
ANR	1257162	Symbol	c0 -> cc . paint . values		1257087						
ANR	1257163	Symbol	* d -> cc . paint		1257087						
ANR	1257164	Symbol	c0 -> cc		1257087						
ANR	1257165	Symbol	d -> cc		1257087						
ANR	1257166	Symbol	c1 -> cc . paint		1257087						
ANR	1257167	Symbol	* c0 -> cc . paint		1257087						
ANR	1257168	Symbol	pfs -> num_components		1257087						
ANR	1257169	Symbol	d -> cc . paint		1257087						
ANR	1257170	Symbol	* * c1		1257087						
ANR	1257171	Symbol	* * c0		1257087						
ANR	1257172	Symbol	d -> cc . paint . values		1257087						
ANR	1257173	Symbol	c1 -> cc . paint . values		1257087						
ANR	1257174	Symbol	d		1257087						
ANR	1257175	Symbol	* pfs		1257087						
ANR	1257176	Symbol	* * d		1257087						
ANR	1257177	Symbol	i		1257087						
ANR	1257178	Symbol	* c0 -> cc . paint . values		1257087						
ANR	1257179	Symbol	c1 -> cc		1257087						
ANR	1257180	Symbol	c0		1257087						
ANR	1257181	Symbol	c1		1257087						
ANR	1257182	Symbol	n		1257087						
ANR	1257183	Symbol	* d		1257087						
ANR	1257184	Symbol	* c0		1257087						
ANR	1257185	Symbol	* i		1257087						
ANR	1257186	Symbol	* c1 -> cc . paint . values		1257087						
ANR	1257187	Symbol	c0 -> cc . paint		1257087						
ANR	1257188	Symbol	* d -> cc . paint . values		1257087						
ANR	1257189	Symbol	* c1		1257087						
ANR	1257190	Symbol	* c0 -> cc		1257087						
ANR	1257191	Symbol	* c1 -> cc . paint		1257087						
ANR	1257192	Symbol	pfs		1257087						
ANR	1257193	Symbol	* d -> cc		1257087						
ANR	1257194	Function	color_norm	1384:0:52280:52626							
ANR	1257195	FunctionDef	"color_norm (const patch_fill_state_t * pfs , const patch_color_t * c)"		1257194	0					
ANR	1257196	CompoundStatement		1386:0:52367:52626	1257194	0					
ANR	1257197	IdentifierDeclStatement	"int n = pfs -> num_components , i ;"	1387:4:52373:52403	1257194	0	True				
ANR	1257198	IdentifierDecl	n = pfs -> num_components		1257194	0					
ANR	1257199	IdentifierDeclType	int		1257194	0					
ANR	1257200	Identifier	n		1257194	1					
ANR	1257201	AssignmentExpression	n = pfs -> num_components		1257194	2		=			
ANR	1257202	Identifier	n		1257194	0					
ANR	1257203	PtrMemberAccess	pfs -> num_components		1257194	1					
ANR	1257204	Identifier	pfs		1257194	0					
ANR	1257205	Identifier	num_components		1257194	1					
ANR	1257206	IdentifierDecl	i		1257194	1					
ANR	1257207	IdentifierDeclType	int		1257194	0					
ANR	1257208	Identifier	i		1257194	1					
ANR	1257209	IdentifierDeclStatement	double m ;	1388:4:52409:52417	1257194	1	True				
ANR	1257210	IdentifierDecl	m		1257194	0					
ANR	1257211	IdentifierDeclType	double		1257194	0					
ANR	1257212	Identifier	m		1257194	1					
ANR	1257213	ExpressionStatement	m = any_abs ( c -> cc . paint . values [ 0 ] ) / pfs -> color_domain . paint . values [ 0 ]	1390:4:52424:52494	1257194	2	True				
ANR	1257214	AssignmentExpression	m = any_abs ( c -> cc . paint . values [ 0 ] ) / pfs -> color_domain . paint . values [ 0 ]		1257194	0		=			
ANR	1257215	Identifier	m		1257194	0					
ANR	1257216	MultiplicativeExpression	any_abs ( c -> cc . paint . values [ 0 ] ) / pfs -> color_domain . paint . values [ 0 ]		1257194	1		/			
ANR	1257217	CallExpression	any_abs ( c -> cc . paint . values [ 0 ] )		1257194	0					
ANR	1257218	Callee	any_abs		1257194	0					
ANR	1257219	Identifier	any_abs		1257194	0					
ANR	1257220	ArgumentList	c -> cc . paint . values [ 0 ]		1257194	1					
ANR	1257221	Argument	c -> cc . paint . values [ 0 ]		1257194	0					
ANR	1257222	ArrayIndexing	c -> cc . paint . values [ 0 ]		1257194	0					
ANR	1257223	MemberAccess	c -> cc . paint . values		1257194	0					
ANR	1257224	MemberAccess	c -> cc . paint		1257194	0					
ANR	1257225	PtrMemberAccess	c -> cc		1257194	0					
ANR	1257226	Identifier	c		1257194	0					
ANR	1257227	Identifier	cc		1257194	1					
ANR	1257228	Identifier	paint		1257194	1					
ANR	1257229	Identifier	values		1257194	1					
ANR	1257230	PrimaryExpression	0		1257194	1					
ANR	1257231	ArrayIndexing	pfs -> color_domain . paint . values [ 0 ]		1257194	1					
ANR	1257232	MemberAccess	pfs -> color_domain . paint . values		1257194	0					
ANR	1257233	MemberAccess	pfs -> color_domain . paint		1257194	0					
ANR	1257234	PtrMemberAccess	pfs -> color_domain		1257194	0					
ANR	1257235	Identifier	pfs		1257194	0					
ANR	1257236	Identifier	color_domain		1257194	1					
ANR	1257237	Identifier	paint		1257194	1					
ANR	1257238	Identifier	values		1257194	1					
ANR	1257239	PrimaryExpression	0		1257194	1					
ANR	1257240	ForStatement	for ( i = 1 ; i < n ; i ++ )		1257194	3					
ANR	1257241	ForInit	i = 1 ;	1391:9:52505:52510	1257194	0	True				
ANR	1257242	AssignmentExpression	i = 1		1257194	0		=			
ANR	1257243	Identifier	i		1257194	0					
ANR	1257244	PrimaryExpression	1		1257194	1					
ANR	1257245	Condition	i < n	1391:16:52512:52516	1257194	1	True				
ANR	1257246	RelationalExpression	i < n		1257194	0		<			
ANR	1257247	Identifier	i		1257194	0					
ANR	1257248	Identifier	n		1257194	1					
ANR	1257249	PostIncDecOperationExpression	i ++	1391:23:52519:52521	1257194	2	True				
ANR	1257250	Identifier	i		1257194	0					
ANR	1257251	IncDec	++		1257194	1					
ANR	1257252	ExpressionStatement	"m = max ( m , any_abs ( c -> cc . paint . values [ i ] ) / pfs -> color_domain . paint . values [ i ] )"	1392:8:52532:52610	1257194	3	True				
ANR	1257253	AssignmentExpression	"m = max ( m , any_abs ( c -> cc . paint . values [ i ] ) / pfs -> color_domain . paint . values [ i ] )"		1257194	0		=			
ANR	1257254	Identifier	m		1257194	0					
ANR	1257255	CallExpression	"max ( m , any_abs ( c -> cc . paint . values [ i ] ) / pfs -> color_domain . paint . values [ i ] )"		1257194	1					
ANR	1257256	Callee	max		1257194	0					
ANR	1257257	Identifier	max		1257194	0					
ANR	1257258	ArgumentList	m		1257194	1					
ANR	1257259	Argument	m		1257194	0					
ANR	1257260	Identifier	m		1257194	0					
ANR	1257261	Argument	any_abs ( c -> cc . paint . values [ i ] ) / pfs -> color_domain . paint . values [ i ]		1257194	1					
ANR	1257262	MultiplicativeExpression	any_abs ( c -> cc . paint . values [ i ] ) / pfs -> color_domain . paint . values [ i ]		1257194	0		/			
ANR	1257263	CallExpression	any_abs ( c -> cc . paint . values [ i ] )		1257194	0					
ANR	1257264	Callee	any_abs		1257194	0					
ANR	1257265	Identifier	any_abs		1257194	0					
ANR	1257266	ArgumentList	c -> cc . paint . values [ i ]		1257194	1					
ANR	1257267	Argument	c -> cc . paint . values [ i ]		1257194	0					
ANR	1257268	ArrayIndexing	c -> cc . paint . values [ i ]		1257194	0					
ANR	1257269	MemberAccess	c -> cc . paint . values		1257194	0					
ANR	1257270	MemberAccess	c -> cc . paint		1257194	0					
ANR	1257271	PtrMemberAccess	c -> cc		1257194	0					
ANR	1257272	Identifier	c		1257194	0					
ANR	1257273	Identifier	cc		1257194	1					
ANR	1257274	Identifier	paint		1257194	1					
ANR	1257275	Identifier	values		1257194	1					
ANR	1257276	Identifier	i		1257194	1					
ANR	1257277	ArrayIndexing	pfs -> color_domain . paint . values [ i ]		1257194	1					
ANR	1257278	MemberAccess	pfs -> color_domain . paint . values		1257194	0					
ANR	1257279	MemberAccess	pfs -> color_domain . paint		1257194	0					
ANR	1257280	PtrMemberAccess	pfs -> color_domain		1257194	0					
ANR	1257281	Identifier	pfs		1257194	0					
ANR	1257282	Identifier	color_domain		1257194	1					
ANR	1257283	Identifier	paint		1257194	1					
ANR	1257284	Identifier	values		1257194	1					
ANR	1257285	Identifier	i		1257194	1					
ANR	1257286	ReturnStatement	return m ;	1393:4:52616:52624	1257194	4	True				
ANR	1257287	Identifier	m		1257194	0					
ANR	1257288	ReturnType	static inline double		1257194	1					
ANR	1257289	Identifier	color_norm		1257194	2					
ANR	1257290	ParameterList	"const patch_fill_state_t * pfs , const patch_color_t * c"		1257194	3					
ANR	1257291	Parameter	const patch_fill_state_t * pfs	1385:11:52312:52340	1257194	0	True				
ANR	1257292	ParameterType	const patch_fill_state_t *		1257194	0					
ANR	1257293	Identifier	pfs		1257194	1					
ANR	1257294	Parameter	const patch_color_t * c	1385:42:52343:52364	1257194	1	True				
ANR	1257295	ParameterType	const patch_color_t *		1257194	0					
ANR	1257296	Identifier	c		1257194	1					
ANR	1257297	CFGEntryNode	ENTRY		1257194		True				
ANR	1257298	CFGExitNode	EXIT		1257194		True				
ANR	1257299	Symbol	pfs -> color_domain		1257194						
ANR	1257300	Symbol	c -> cc		1257194						
ANR	1257301	Symbol	* pfs -> color_domain		1257194						
ANR	1257302	Symbol	* pfs -> color_domain . paint		1257194						
ANR	1257303	Symbol	* * pfs		1257194						
ANR	1257304	Symbol	pfs -> num_components		1257194						
ANR	1257305	Symbol	* c -> cc . paint . values		1257194						
ANR	1257306	Symbol	any_abs		1257194						
ANR	1257307	Symbol	pfs -> color_domain . paint . values		1257194						
ANR	1257308	Symbol	* pfs -> color_domain . paint . values		1257194						
ANR	1257309	Symbol	c		1257194						
ANR	1257310	Symbol	max		1257194						
ANR	1257311	Symbol	* c -> cc		1257194						
ANR	1257312	Symbol	* pfs		1257194						
ANR	1257313	Symbol	* * c		1257194						
ANR	1257314	Symbol	i		1257194						
ANR	1257315	Symbol	pfs -> color_domain . paint		1257194						
ANR	1257316	Symbol	m		1257194						
ANR	1257317	Symbol	* c		1257194						
ANR	1257318	Symbol	n		1257194						
ANR	1257319	Symbol	* c -> cc . paint		1257194						
ANR	1257320	Symbol	c -> cc . paint		1257194						
ANR	1257321	Symbol	* i		1257194						
ANR	1257322	Symbol	pfs		1257194						
ANR	1257323	Symbol	c -> cc . paint . values		1257194						
ANR	1257324	Function	isnt_color_monotonic	1396:0:52629:53582							
ANR	1257325	FunctionDef	"isnt_color_monotonic (const patch_fill_state_t * pfs , const patch_color_t * c0 , const patch_color_t * c1)"		1257324	0					
ANR	1257326	CompoundStatement		1398:0:52749:53582	1257324	0					
ANR	1257327	IdentifierDeclStatement	uint mask ;	1413:4:53436:53445	1257324	0	True				
ANR	1257328	IdentifierDecl	mask		1257324	0					
ANR	1257329	IdentifierDeclType	uint		1257324	0					
ANR	1257330	Identifier	mask		1257324	1					
ANR	1257331	IdentifierDeclStatement	"int code = gs_function_is_monotonic ( pfs -> Function , c0 -> t , c1 -> t , & mask ) ;"	1414:4:53451:53522	1257324	1	True				
ANR	1257332	IdentifierDecl	"code = gs_function_is_monotonic ( pfs -> Function , c0 -> t , c1 -> t , & mask )"		1257324	0					
ANR	1257333	IdentifierDeclType	int		1257324	0					
ANR	1257334	Identifier	code		1257324	1					
ANR	1257335	AssignmentExpression	"code = gs_function_is_monotonic ( pfs -> Function , c0 -> t , c1 -> t , & mask )"		1257324	2		=			
ANR	1257336	Identifier	code		1257324	0					
ANR	1257337	CallExpression	"gs_function_is_monotonic ( pfs -> Function , c0 -> t , c1 -> t , & mask )"		1257324	1					
ANR	1257338	Callee	gs_function_is_monotonic		1257324	0					
ANR	1257339	Identifier	gs_function_is_monotonic		1257324	0					
ANR	1257340	ArgumentList	pfs -> Function		1257324	1					
ANR	1257341	Argument	pfs -> Function		1257324	0					
ANR	1257342	PtrMemberAccess	pfs -> Function		1257324	0					
ANR	1257343	Identifier	pfs		1257324	0					
ANR	1257344	Identifier	Function		1257324	1					
ANR	1257345	Argument	c0 -> t		1257324	1					
ANR	1257346	PtrMemberAccess	c0 -> t		1257324	0					
ANR	1257347	Identifier	c0		1257324	0					
ANR	1257348	Identifier	t		1257324	1					
ANR	1257349	Argument	c1 -> t		1257324	2					
ANR	1257350	PtrMemberAccess	c1 -> t		1257324	0					
ANR	1257351	Identifier	c1		1257324	0					
ANR	1257352	Identifier	t		1257324	1					
ANR	1257353	Argument	& mask		1257324	3					
ANR	1257354	UnaryOperationExpression	& mask		1257324	0					
ANR	1257355	UnaryOperator	&		1257324	0					
ANR	1257356	Identifier	mask		1257324	1					
ANR	1257357	IfStatement	if ( code >= 0 )		1257324	2					
ANR	1257358	Condition	code >= 0	1416:8:53533:53541	1257324	0	True				
ANR	1257359	RelationalExpression	code >= 0		1257324	0		>=			
ANR	1257360	Identifier	code		1257324	0					
ANR	1257361	PrimaryExpression	0		1257324	1					
ANR	1257362	ReturnStatement	return mask ;	1417:8:53552:53563	1257324	1	True				
ANR	1257363	Identifier	mask		1257324	0					
ANR	1257364	ReturnStatement	return code ;	1418:4:53569:53580	1257324	3	True				
ANR	1257365	Identifier	code		1257324	0					
ANR	1257366	ReturnType	static inline int		1257324	1					
ANR	1257367	Identifier	isnt_color_monotonic		1257324	2					
ANR	1257368	ParameterList	"const patch_fill_state_t * pfs , const patch_color_t * c0 , const patch_color_t * c1"		1257324	3					
ANR	1257369	Parameter	const patch_fill_state_t * pfs	1397:21:52668:52696	1257324	0	True				
ANR	1257370	ParameterType	const patch_fill_state_t *		1257324	0					
ANR	1257371	Identifier	pfs		1257324	1					
ANR	1257372	Parameter	const patch_color_t * c0	1397:52:52699:52721	1257324	1	True				
ANR	1257373	ParameterType	const patch_color_t *		1257324	0					
ANR	1257374	Identifier	c0		1257324	1					
ANR	1257375	Parameter	const patch_color_t * c1	1397:77:52724:52746	1257324	2	True				
ANR	1257376	ParameterType	const patch_color_t *		1257324	0					
ANR	1257377	Identifier	c1		1257324	1					
ANR	1257378	CFGEntryNode	ENTRY		1257324		True				
ANR	1257379	CFGExitNode	EXIT		1257324		True				
ANR	1257380	Symbol	code		1257324						
ANR	1257381	Symbol	pfs -> Function		1257324						
ANR	1257382	Symbol	* pfs		1257324						
ANR	1257383	Symbol	& mask		1257324						
ANR	1257384	Symbol	c1 -> t		1257324						
ANR	1257385	Symbol	c0		1257324						
ANR	1257386	Symbol	c1		1257324						
ANR	1257387	Symbol	* c0		1257324						
ANR	1257388	Symbol	c0 -> t		1257324						
ANR	1257389	Symbol	gs_function_is_monotonic		1257324						
ANR	1257390	Symbol	* c1		1257324						
ANR	1257391	Symbol	pfs		1257324						
ANR	1257392	Symbol	mask		1257324						
ANR	1257393	Function	covers_pixel_centers	1421:0:53585:53707							
ANR	1257394	FunctionDef	"covers_pixel_centers (fixed ybot , fixed ytop)"		1257393	0					
ANR	1257395	CompoundStatement		1423:0:53649:53707	1257393	0					
ANR	1257396	ReturnStatement	return fixed_pixround ( ybot ) < fixed_pixround ( ytop ) ;	1424:4:53655:53705	1257393	0	True				
ANR	1257397	RelationalExpression	fixed_pixround ( ybot ) < fixed_pixround ( ytop )		1257393	0		<			
ANR	1257398	CallExpression	fixed_pixround ( ybot )		1257393	0					
ANR	1257399	Callee	fixed_pixround		1257393	0					
ANR	1257400	Identifier	fixed_pixround		1257393	0					
ANR	1257401	ArgumentList	ybot		1257393	1					
ANR	1257402	Argument	ybot		1257393	0					
ANR	1257403	Identifier	ybot		1257393	0					
ANR	1257404	CallExpression	fixed_pixround ( ytop )		1257393	1					
ANR	1257405	Callee	fixed_pixround		1257393	0					
ANR	1257406	Identifier	fixed_pixround		1257393	0					
ANR	1257407	ArgumentList	ytop		1257393	1					
ANR	1257408	Argument	ytop		1257393	0					
ANR	1257409	Identifier	ytop		1257393	0					
ANR	1257410	ReturnType	static inline bool		1257393	1					
ANR	1257411	Identifier	covers_pixel_centers		1257393	2					
ANR	1257412	ParameterList	"fixed ybot , fixed ytop"		1257393	3					
ANR	1257413	Parameter	fixed ybot	1422:21:53625:53634	1257393	0	True				
ANR	1257414	ParameterType	fixed		1257393	0					
ANR	1257415	Identifier	ybot		1257393	1					
ANR	1257416	Parameter	fixed ytop	1422:33:53637:53646	1257393	1	True				
ANR	1257417	ParameterType	fixed		1257393	0					
ANR	1257418	Identifier	ytop		1257393	1					
ANR	1257419	CFGEntryNode	ENTRY		1257393		True				
ANR	1257420	CFGExitNode	EXIT		1257393		True				
ANR	1257421	Symbol	ytop		1257393						
ANR	1257422	Symbol	ybot		1257393						
ANR	1257423	Symbol	fixed_pixround		1257393						
ANR	1257424	Function	constant_color_trapezoid	1427:0:53710:54267							
ANR	1257425	FunctionDef	"constant_color_trapezoid (patch_fill_state_t * pfs , gs_fixed_edge * le , gs_fixed_edge * re , fixed ybot , fixed ytop , bool swap_axes , const patch_color_t * c)"		1257424	0					
ANR	1257426	CompoundStatement		1430:0:53888:54267	1257424	0					
ANR	1257427	IdentifierDeclStatement	patch_color_t c1 = * c ;	1431:4:53894:53915	1257424	0	True				
ANR	1257428	IdentifierDecl	c1 = * c		1257424	0					
ANR	1257429	IdentifierDeclType	patch_color_t		1257424	0					
ANR	1257430	Identifier	c1		1257424	1					
ANR	1257431	AssignmentExpression	c1 = * c		1257424	2		=			
ANR	1257432	Identifier	c1		1257424	0					
ANR	1257433	UnaryOperationExpression	* c		1257424	1					
ANR	1257434	UnaryOperator	*		1257424	0					
ANR	1257435	Identifier	c		1257424	1					
ANR	1257436	IdentifierDeclStatement	gx_device_color dc ;	1432:4:53921:53939	1257424	1	True				
ANR	1257437	IdentifierDecl	dc		1257424	0					
ANR	1257438	IdentifierDeclType	gx_device_color		1257424	0					
ANR	1257439	Identifier	dc		1257424	1					
ANR	1257440	IdentifierDeclStatement	int code ;	1433:4:53945:53953	1257424	2	True				
ANR	1257441	IdentifierDecl	code		1257424	0					
ANR	1257442	IdentifierDeclType	int		1257424	0					
ANR	1257443	Identifier	code		1257424	1					
ANR	1257444	Statement	if	1435:4:53960:53961	1257424	3	True				
ANR	1257445	IdentifierDeclStatement	"NOFILL_TEST endif code = patch_color_to_device_color_inline ( pfs , & c1 , & dc , NULL ) ;"	1435:7:53963:54107	1257424	4	True				
ANR	1257446	IdentifierDecl	"code = patch_color_to_device_color_inline ( pfs , & c1 , & dc , NULL )"		1257424	0					
ANR	1257447	IdentifierDeclType	NOFILL_TEST endif		1257424	0					
ANR	1257448	Identifier	code		1257424	1					
ANR	1257449	AssignmentExpression	"code = patch_color_to_device_color_inline ( pfs , & c1 , & dc , NULL )"		1257424	2		=			
ANR	1257450	Identifier	code		1257424	0					
ANR	1257451	CallExpression	"patch_color_to_device_color_inline ( pfs , & c1 , & dc , NULL )"		1257424	1					
ANR	1257452	Callee	patch_color_to_device_color_inline		1257424	0					
ANR	1257453	Identifier	patch_color_to_device_color_inline		1257424	0					
ANR	1257454	ArgumentList	pfs		1257424	1					
ANR	1257455	Argument	pfs		1257424	0					
ANR	1257456	Identifier	pfs		1257424	0					
ANR	1257457	Argument	& c1		1257424	1					
ANR	1257458	UnaryOperationExpression	& c1		1257424	0					
ANR	1257459	UnaryOperator	&		1257424	0					
ANR	1257460	Identifier	c1		1257424	1					
ANR	1257461	Argument	& dc		1257424	2					
ANR	1257462	UnaryOperationExpression	& dc		1257424	0					
ANR	1257463	UnaryOperator	&		1257424	0					
ANR	1257464	Identifier	dc		1257424	1					
ANR	1257465	Argument	NULL		1257424	3					
ANR	1257466	Identifier	NULL		1257424	0					
ANR	1257467	IfStatement	if ( code < 0 )		1257424	5					
ANR	1257468	Condition	code < 0	1440:8:54117:54124	1257424	0	True				
ANR	1257469	RelationalExpression	code < 0		1257424	0		<			
ANR	1257470	Identifier	code		1257424	0					
ANR	1257471	PrimaryExpression	0		1257424	1					
ANR	1257472	ReturnStatement	return code ;	1441:8:54135:54146	1257424	1	True				
ANR	1257473	Identifier	code		1257424	0					
ANR	1257474	ReturnStatement	"return dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , le , re , ybot , ytop , swap_axes , & dc , pfs -> pgs -> log_op ) ;"	1442:4:54152:54265	1257424	6	True				
ANR	1257475	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , le , re , ybot , ytop , swap_axes , & dc , pfs -> pgs -> log_op )"		1257424	0					
ANR	1257476	Callee	"dev_proc ( pfs -> dev , fill_trapezoid )"		1257424	0					
ANR	1257477	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid )"		1257424	0					
ANR	1257478	Callee	dev_proc		1257424	0					
ANR	1257479	Identifier	dev_proc		1257424	0					
ANR	1257480	ArgumentList	pfs -> dev		1257424	1					
ANR	1257481	Argument	pfs -> dev		1257424	0					
ANR	1257482	PtrMemberAccess	pfs -> dev		1257424	0					
ANR	1257483	Identifier	pfs		1257424	0					
ANR	1257484	Identifier	dev		1257424	1					
ANR	1257485	Argument	fill_trapezoid		1257424	1					
ANR	1257486	Identifier	fill_trapezoid		1257424	0					
ANR	1257487	ArgumentList	pfs -> dev		1257424	1					
ANR	1257488	Argument	pfs -> dev		1257424	0					
ANR	1257489	PtrMemberAccess	pfs -> dev		1257424	0					
ANR	1257490	Identifier	pfs		1257424	0					
ANR	1257491	Identifier	dev		1257424	1					
ANR	1257492	Argument	le		1257424	1					
ANR	1257493	Identifier	le		1257424	0					
ANR	1257494	Argument	re		1257424	2					
ANR	1257495	Identifier	re		1257424	0					
ANR	1257496	Argument	ybot		1257424	3					
ANR	1257497	Identifier	ybot		1257424	0					
ANR	1257498	Argument	ytop		1257424	4					
ANR	1257499	Identifier	ytop		1257424	0					
ANR	1257500	Argument	swap_axes		1257424	5					
ANR	1257501	Identifier	swap_axes		1257424	0					
ANR	1257502	Argument	& dc		1257424	6					
ANR	1257503	UnaryOperationExpression	& dc		1257424	0					
ANR	1257504	UnaryOperator	&		1257424	0					
ANR	1257505	Identifier	dc		1257424	1					
ANR	1257506	Argument	pfs -> pgs -> log_op		1257424	7					
ANR	1257507	PtrMemberAccess	pfs -> pgs -> log_op		1257424	0					
ANR	1257508	PtrMemberAccess	pfs -> pgs		1257424	0					
ANR	1257509	Identifier	pfs		1257424	0					
ANR	1257510	Identifier	pgs		1257424	1					
ANR	1257511	Identifier	log_op		1257424	1					
ANR	1257512	ReturnType	static inline int		1257424	1					
ANR	1257513	Identifier	constant_color_trapezoid		1257424	2					
ANR	1257514	ParameterList	"patch_fill_state_t * pfs , gs_fixed_edge * le , gs_fixed_edge * re , fixed ybot , fixed ytop , bool swap_axes , const patch_color_t * c"		1257424	3					
ANR	1257515	Parameter	patch_fill_state_t * pfs	1428:25:53753:53775	1257424	0	True				
ANR	1257516	ParameterType	patch_fill_state_t *		1257424	0					
ANR	1257517	Identifier	pfs		1257424	1					
ANR	1257518	Parameter	gs_fixed_edge * le	1428:50:53778:53794	1257424	1	True				
ANR	1257519	ParameterType	gs_fixed_edge *		1257424	0					
ANR	1257520	Identifier	le		1257424	1					
ANR	1257521	Parameter	gs_fixed_edge * re	1428:69:53797:53813	1257424	2	True				
ANR	1257522	ParameterType	gs_fixed_edge *		1257424	0					
ANR	1257523	Identifier	re		1257424	1					
ANR	1257524	Parameter	fixed ybot	1429:8:53824:53833	1257424	3	True				
ANR	1257525	ParameterType	fixed		1257424	0					
ANR	1257526	Identifier	ybot		1257424	1					
ANR	1257527	Parameter	fixed ytop	1429:20:53836:53845	1257424	4	True				
ANR	1257528	ParameterType	fixed		1257424	0					
ANR	1257529	Identifier	ytop		1257424	1					
ANR	1257530	Parameter	bool swap_axes	1429:32:53848:53861	1257424	5	True				
ANR	1257531	ParameterType	bool		1257424	0					
ANR	1257532	Identifier	swap_axes		1257424	1					
ANR	1257533	Parameter	const patch_color_t * c	1429:48:53864:53885	1257424	6	True				
ANR	1257534	ParameterType	const patch_color_t *		1257424	0					
ANR	1257535	Identifier	c		1257424	1					
ANR	1257536	CFGEntryNode	ENTRY		1257424		True				
ANR	1257537	CFGExitNode	EXIT		1257424		True				
ANR	1257538	Symbol	c		1257424						
ANR	1257539	Symbol	code		1257424						
ANR	1257540	Symbol	NULL		1257424						
ANR	1257541	Symbol	ytop		1257424						
ANR	1257542	Symbol	pfs -> pgs -> log_op		1257424						
ANR	1257543	Symbol	* pfs		1257424						
ANR	1257544	Symbol	& dc		1257424						
ANR	1257545	Symbol	pfs -> pgs		1257424						
ANR	1257546	Symbol	* c		1257424						
ANR	1257547	Symbol	patch_color_to_device_color_inline		1257424						
ANR	1257548	Symbol	c1		1257424						
ANR	1257549	Symbol	* * pfs		1257424						
ANR	1257550	Symbol	pfs -> dev		1257424						
ANR	1257551	Symbol	re		1257424						
ANR	1257552	Symbol	* pfs -> pgs		1257424						
ANR	1257553	Symbol	ybot		1257424						
ANR	1257554	Symbol	dev_proc		1257424						
ANR	1257555	Symbol	le		1257424						
ANR	1257556	Symbol	& c1		1257424						
ANR	1257557	Symbol	fill_trapezoid		1257424						
ANR	1257558	Symbol	pfs		1257424						
ANR	1257559	Symbol	swap_axes		1257424						
ANR	1257560	Symbol	dc		1257424						
ANR	1257561	Function	function_linearity	1446:0:54270:55331							
ANR	1257562	FunctionDef	"function_linearity (const patch_fill_state_t * pfs , const patch_color_t * c0 , const patch_color_t * c1)"		1257561	0					
ANR	1257563	CompoundStatement		1448:0:54390:55331	1257561	0					
ANR	1257564	IdentifierDeclStatement	float s = 0 ;	1449:4:54396:54407	1257561	0	True				
ANR	1257565	IdentifierDecl	s = 0		1257561	0					
ANR	1257566	IdentifierDeclType	float		1257561	0					
ANR	1257567	Identifier	s		1257561	1					
ANR	1257568	AssignmentExpression	s = 0		1257561	2		=			
ANR	1257569	Identifier	s		1257561	0					
ANR	1257570	PrimaryExpression	0		1257561	1					
ANR	1257571	IfStatement	if ( pfs -> Function != NULL )		1257561	1					
ANR	1257572	Condition	pfs -> Function != NULL	1451:8:54418:54438	1257561	0	True				
ANR	1257573	EqualityExpression	pfs -> Function != NULL		1257561	0		!=			
ANR	1257574	PtrMemberAccess	pfs -> Function		1257561	0					
ANR	1257575	Identifier	pfs		1257561	0					
ANR	1257576	Identifier	Function		1257561	1					
ANR	1257577	Identifier	NULL		1257561	1					
ANR	1257578	CompoundStatement		9:8:260:268	1257561	1					
ANR	1257579	IdentifierDeclStatement	patch_color_t c ;	1452:8:54451:54466	1257561	0	True				
ANR	1257580	IdentifierDecl	c		1257561	0					
ANR	1257581	IdentifierDeclType	patch_color_t		1257561	0					
ANR	1257582	Identifier	c		1257561	1					
ANR	1257583	Statement	static	1455:8:54591:54596	1257561	1	True				
ANR	1257584	IdentifierDeclStatement	"const float q [ 2 ] = { ( float ) 0.3 , ( float ) 0.7 } ;"	1455:15:54598:54641	1257561	2	True				
ANR	1257585	IdentifierDecl	"q [ 2 ] = { ( float ) 0.3 , ( float ) 0.7 }"		1257561	0					
ANR	1257586	IdentifierDeclType	const float [ 2 ]		1257561	0					
ANR	1257587	Identifier	q		1257561	1					
ANR	1257588	PrimaryExpression	2		1257561	2					
ANR	1257589	AssignmentExpression	"q [ 2 ] = { ( float ) 0.3 , ( float ) 0.7 }"		1257561	3		=			
ANR	1257590	Identifier	q		1257561	0					
ANR	1257591	InitializerList	( float ) 0.3		1257561	1					
ANR	1257592	CastExpression	( float ) 0.3		1257561	0					
ANR	1257593	CastTarget	float		1257561	0					
ANR	1257594	PrimaryExpression	0.3		1257561	1					
ANR	1257595	CastExpression	( float ) 0.7		1257561	1					
ANR	1257596	CastTarget	float		1257561	0					
ANR	1257597	PrimaryExpression	0.7		1257561	1					
ANR	1257598	IdentifierDeclStatement	"int i , j ;"	1456:8:54651:54659	1257561	3	True				
ANR	1257599	IdentifierDecl	i		1257561	0					
ANR	1257600	IdentifierDeclType	int		1257561	0					
ANR	1257601	Identifier	i		1257561	1					
ANR	1257602	IdentifierDecl	j		1257561	1					
ANR	1257603	IdentifierDeclType	int		1257561	0					
ANR	1257604	Identifier	j		1257561	1					
ANR	1257605	ForStatement	for ( j = 0 ; j < count_of ( q ) ; j ++ )		1257561	4					
ANR	1257606	ForInit	j = 0 ;	1458:13:54675:54680	1257561	0	True				
ANR	1257607	AssignmentExpression	j = 0		1257561	0		=			
ANR	1257608	Identifier	j		1257561	0					
ANR	1257609	PrimaryExpression	0		1257561	1					
ANR	1257610	Condition	j < count_of ( q )	1458:20:54682:54696	1257561	1	True				
ANR	1257611	RelationalExpression	j < count_of ( q )		1257561	0		<			
ANR	1257612	Identifier	j		1257561	0					
ANR	1257613	CallExpression	count_of ( q )		1257561	1					
ANR	1257614	Callee	count_of		1257561	0					
ANR	1257615	Identifier	count_of		1257561	0					
ANR	1257616	ArgumentList	q		1257561	1					
ANR	1257617	Argument	q		1257561	0					
ANR	1257618	Identifier	q		1257561	0					
ANR	1257619	PostIncDecOperationExpression	j ++	1458:37:54699:54701	1257561	2	True				
ANR	1257620	Identifier	j		1257561	0					
ANR	1257621	IncDec	++		1257561	1					
ANR	1257622	CompoundStatement		11:42:313:313	1257561	3					
ANR	1257623	ExpressionStatement	c . t [ 0 ] = c0 -> t [ 0 ] * ( 1 - q [ j ] ) + c1 -> t [ 0 ] * q [ j ]	1459:12:54718:54766	1257561	0	True				
ANR	1257624	AssignmentExpression	c . t [ 0 ] = c0 -> t [ 0 ] * ( 1 - q [ j ] ) + c1 -> t [ 0 ] * q [ j ]		1257561	0		=			
ANR	1257625	ArrayIndexing	c . t [ 0 ]		1257561	0					
ANR	1257626	MemberAccess	c . t		1257561	0					
ANR	1257627	Identifier	c		1257561	0					
ANR	1257628	Identifier	t		1257561	1					
ANR	1257629	PrimaryExpression	0		1257561	1					
ANR	1257630	AdditiveExpression	c0 -> t [ 0 ] * ( 1 - q [ j ] ) + c1 -> t [ 0 ] * q [ j ]		1257561	1		+			
ANR	1257631	MultiplicativeExpression	c0 -> t [ 0 ] * ( 1 - q [ j ] )		1257561	0		*			
ANR	1257632	ArrayIndexing	c0 -> t [ 0 ]		1257561	0					
ANR	1257633	PtrMemberAccess	c0 -> t		1257561	0					
ANR	1257634	Identifier	c0		1257561	0					
ANR	1257635	Identifier	t		1257561	1					
ANR	1257636	PrimaryExpression	0		1257561	1					
ANR	1257637	AdditiveExpression	1 - q [ j ]		1257561	1		-			
ANR	1257638	PrimaryExpression	1		1257561	0					
ANR	1257639	ArrayIndexing	q [ j ]		1257561	1					
ANR	1257640	Identifier	q		1257561	0					
ANR	1257641	Identifier	j		1257561	1					
ANR	1257642	MultiplicativeExpression	c1 -> t [ 0 ] * q [ j ]		1257561	1		*			
ANR	1257643	ArrayIndexing	c1 -> t [ 0 ]		1257561	0					
ANR	1257644	PtrMemberAccess	c1 -> t		1257561	0					
ANR	1257645	Identifier	c1		1257561	0					
ANR	1257646	Identifier	t		1257561	1					
ANR	1257647	PrimaryExpression	0		1257561	1					
ANR	1257648	ArrayIndexing	q [ j ]		1257561	1					
ANR	1257649	Identifier	q		1257561	0					
ANR	1257650	Identifier	j		1257561	1					
ANR	1257651	ExpressionStatement	c . t [ 1 ] = c0 -> t [ 1 ] * ( 1 - q [ j ] ) + c1 -> t [ 1 ] * q [ j ]	1460:12:54780:54828	1257561	1	True				
ANR	1257652	AssignmentExpression	c . t [ 1 ] = c0 -> t [ 1 ] * ( 1 - q [ j ] ) + c1 -> t [ 1 ] * q [ j ]		1257561	0		=			
ANR	1257653	ArrayIndexing	c . t [ 1 ]		1257561	0					
ANR	1257654	MemberAccess	c . t		1257561	0					
ANR	1257655	Identifier	c		1257561	0					
ANR	1257656	Identifier	t		1257561	1					
ANR	1257657	PrimaryExpression	1		1257561	1					
ANR	1257658	AdditiveExpression	c0 -> t [ 1 ] * ( 1 - q [ j ] ) + c1 -> t [ 1 ] * q [ j ]		1257561	1		+			
ANR	1257659	MultiplicativeExpression	c0 -> t [ 1 ] * ( 1 - q [ j ] )		1257561	0		*			
ANR	1257660	ArrayIndexing	c0 -> t [ 1 ]		1257561	0					
ANR	1257661	PtrMemberAccess	c0 -> t		1257561	0					
ANR	1257662	Identifier	c0		1257561	0					
ANR	1257663	Identifier	t		1257561	1					
ANR	1257664	PrimaryExpression	1		1257561	1					
ANR	1257665	AdditiveExpression	1 - q [ j ]		1257561	1		-			
ANR	1257666	PrimaryExpression	1		1257561	0					
ANR	1257667	ArrayIndexing	q [ j ]		1257561	1					
ANR	1257668	Identifier	q		1257561	0					
ANR	1257669	Identifier	j		1257561	1					
ANR	1257670	MultiplicativeExpression	c1 -> t [ 1 ] * q [ j ]		1257561	1		*			
ANR	1257671	ArrayIndexing	c1 -> t [ 1 ]		1257561	0					
ANR	1257672	PtrMemberAccess	c1 -> t		1257561	0					
ANR	1257673	Identifier	c1		1257561	0					
ANR	1257674	Identifier	t		1257561	1					
ANR	1257675	PrimaryExpression	1		1257561	1					
ANR	1257676	ArrayIndexing	q [ j ]		1257561	1					
ANR	1257677	Identifier	q		1257561	0					
ANR	1257678	Identifier	j		1257561	1					
ANR	1257679	ExpressionStatement	"patch_resolve_color_inline ( & c , pfs )"	1461:12:54842:54877	1257561	2	True				
ANR	1257680	CallExpression	"patch_resolve_color_inline ( & c , pfs )"		1257561	0					
ANR	1257681	Callee	patch_resolve_color_inline		1257561	0					
ANR	1257682	Identifier	patch_resolve_color_inline		1257561	0					
ANR	1257683	ArgumentList	& c		1257561	1					
ANR	1257684	Argument	& c		1257561	0					
ANR	1257685	UnaryOperationExpression	& c		1257561	0					
ANR	1257686	UnaryOperator	&		1257561	0					
ANR	1257687	Identifier	c		1257561	1					
ANR	1257688	Argument	pfs		1257561	1					
ANR	1257689	Identifier	pfs		1257561	0					
ANR	1257690	ForStatement	for ( i = 0 ; i < pfs -> num_components ; i ++ )		1257561	3					
ANR	1257691	ForInit	i = 0 ;	1462:17:54896:54901	1257561	0	True				
ANR	1257692	AssignmentExpression	i = 0		1257561	0		=			
ANR	1257693	Identifier	i		1257561	0					
ANR	1257694	PrimaryExpression	0		1257561	1					
ANR	1257695	Condition	i < pfs -> num_components	1462:24:54903:54925	1257561	1	True				
ANR	1257696	RelationalExpression	i < pfs -> num_components		1257561	0		<			
ANR	1257697	Identifier	i		1257561	0					
ANR	1257698	PtrMemberAccess	pfs -> num_components		1257561	1					
ANR	1257699	Identifier	pfs		1257561	0					
ANR	1257700	Identifier	num_components		1257561	1					
ANR	1257701	PostIncDecOperationExpression	i ++	1462:49:54928:54930	1257561	2	True				
ANR	1257702	Identifier	i		1257561	0					
ANR	1257703	IncDec	++		1257561	1					
ANR	1257704	CompoundStatement		18:16:707:764	1257561	3					
ANR	1257705	IdentifierDeclStatement	float v = c0 -> cc . paint . values [ i ] * ( 1 - q [ j ] ) + c1 -> cc . paint . values [ i ] * q [ j ] ;	1463:16:54951:55028	1257561	0	True				
ANR	1257706	IdentifierDecl	v = c0 -> cc . paint . values [ i ] * ( 1 - q [ j ] ) + c1 -> cc . paint . values [ i ] * q [ j ]		1257561	0					
ANR	1257707	IdentifierDeclType	float		1257561	0					
ANR	1257708	Identifier	v		1257561	1					
ANR	1257709	AssignmentExpression	v = c0 -> cc . paint . values [ i ] * ( 1 - q [ j ] ) + c1 -> cc . paint . values [ i ] * q [ j ]		1257561	2		=			
ANR	1257710	Identifier	v		1257561	0					
ANR	1257711	AdditiveExpression	c0 -> cc . paint . values [ i ] * ( 1 - q [ j ] ) + c1 -> cc . paint . values [ i ] * q [ j ]		1257561	1		+			
ANR	1257712	MultiplicativeExpression	c0 -> cc . paint . values [ i ] * ( 1 - q [ j ] )		1257561	0		*			
ANR	1257713	ArrayIndexing	c0 -> cc . paint . values [ i ]		1257561	0					
ANR	1257714	MemberAccess	c0 -> cc . paint . values		1257561	0					
ANR	1257715	MemberAccess	c0 -> cc . paint		1257561	0					
ANR	1257716	PtrMemberAccess	c0 -> cc		1257561	0					
ANR	1257717	Identifier	c0		1257561	0					
ANR	1257718	Identifier	cc		1257561	1					
ANR	1257719	Identifier	paint		1257561	1					
ANR	1257720	Identifier	values		1257561	1					
ANR	1257721	Identifier	i		1257561	1					
ANR	1257722	AdditiveExpression	1 - q [ j ]		1257561	1		-			
ANR	1257723	PrimaryExpression	1		1257561	0					
ANR	1257724	ArrayIndexing	q [ j ]		1257561	1					
ANR	1257725	Identifier	q		1257561	0					
ANR	1257726	Identifier	j		1257561	1					
ANR	1257727	MultiplicativeExpression	c1 -> cc . paint . values [ i ] * q [ j ]		1257561	1		*			
ANR	1257728	ArrayIndexing	c1 -> cc . paint . values [ i ]		1257561	0					
ANR	1257729	MemberAccess	c1 -> cc . paint . values		1257561	0					
ANR	1257730	MemberAccess	c1 -> cc . paint		1257561	0					
ANR	1257731	PtrMemberAccess	c1 -> cc		1257561	0					
ANR	1257732	Identifier	c1		1257561	0					
ANR	1257733	Identifier	cc		1257561	1					
ANR	1257734	Identifier	paint		1257561	1					
ANR	1257735	Identifier	values		1257561	1					
ANR	1257736	Identifier	i		1257561	1					
ANR	1257737	ArrayIndexing	q [ j ]		1257561	1					
ANR	1257738	Identifier	q		1257561	0					
ANR	1257739	Identifier	j		1257561	1					
ANR	1257740	IdentifierDeclStatement	float d = v - c . cc . paint . values [ i ] ;	1464:16:55046:55080	1257561	1	True				
ANR	1257741	IdentifierDecl	d = v - c . cc . paint . values [ i ]		1257561	0					
ANR	1257742	IdentifierDeclType	float		1257561	0					
ANR	1257743	Identifier	d		1257561	1					
ANR	1257744	AssignmentExpression	d = v - c . cc . paint . values [ i ]		1257561	2		=			
ANR	1257745	Identifier	d		1257561	0					
ANR	1257746	AdditiveExpression	v - c . cc . paint . values [ i ]		1257561	1		-			
ANR	1257747	Identifier	v		1257561	0					
ANR	1257748	ArrayIndexing	c . cc . paint . values [ i ]		1257561	1					
ANR	1257749	MemberAccess	c . cc . paint . values		1257561	0					
ANR	1257750	MemberAccess	c . cc . paint		1257561	0					
ANR	1257751	MemberAccess	c . cc		1257561	0					
ANR	1257752	Identifier	c		1257561	0					
ANR	1257753	Identifier	cc		1257561	1					
ANR	1257754	Identifier	paint		1257561	1					
ANR	1257755	Identifier	values		1257561	1					
ANR	1257756	Identifier	i		1257561	1					
ANR	1257757	IdentifierDeclStatement	float s1 = any_abs ( d ) / pfs -> color_domain . paint . values [ i ] ;	1465:16:55098:55155	1257561	2	True				
ANR	1257758	IdentifierDecl	s1 = any_abs ( d ) / pfs -> color_domain . paint . values [ i ]		1257561	0					
ANR	1257759	IdentifierDeclType	float		1257561	0					
ANR	1257760	Identifier	s1		1257561	1					
ANR	1257761	AssignmentExpression	s1 = any_abs ( d ) / pfs -> color_domain . paint . values [ i ]		1257561	2		=			
ANR	1257762	Identifier	s1		1257561	0					
ANR	1257763	MultiplicativeExpression	any_abs ( d ) / pfs -> color_domain . paint . values [ i ]		1257561	1		/			
ANR	1257764	CallExpression	any_abs ( d )		1257561	0					
ANR	1257765	Callee	any_abs		1257561	0					
ANR	1257766	Identifier	any_abs		1257561	0					
ANR	1257767	ArgumentList	d		1257561	1					
ANR	1257768	Argument	d		1257561	0					
ANR	1257769	Identifier	d		1257561	0					
ANR	1257770	ArrayIndexing	pfs -> color_domain . paint . values [ i ]		1257561	1					
ANR	1257771	MemberAccess	pfs -> color_domain . paint . values		1257561	0					
ANR	1257772	MemberAccess	pfs -> color_domain . paint		1257561	0					
ANR	1257773	PtrMemberAccess	pfs -> color_domain		1257561	0					
ANR	1257774	Identifier	pfs		1257561	0					
ANR	1257775	Identifier	color_domain		1257561	1					
ANR	1257776	Identifier	paint		1257561	1					
ANR	1257777	Identifier	values		1257561	1					
ANR	1257778	Identifier	i		1257561	1					
ANR	1257779	IfStatement	if ( s1 > pfs -> smoothness )		1257561	3					
ANR	1257780	Condition	s1 > pfs -> smoothness	1467:20:55178:55197	1257561	0	True				
ANR	1257781	RelationalExpression	s1 > pfs -> smoothness		1257561	0		>			
ANR	1257782	Identifier	s1		1257561	0					
ANR	1257783	PtrMemberAccess	pfs -> smoothness		1257561	1					
ANR	1257784	Identifier	pfs		1257561	0					
ANR	1257785	Identifier	smoothness		1257561	1					
ANR	1257786	ReturnStatement	return s1 ;	1468:20:55220:55229	1257561	1	True				
ANR	1257787	Identifier	s1		1257561	0					
ANR	1257788	IfStatement	if ( s < s1 )		1257561	4					
ANR	1257789	Condition	s < s1	1469:20:55251:55256	1257561	0	True				
ANR	1257790	RelationalExpression	s < s1		1257561	0		<			
ANR	1257791	Identifier	s		1257561	0					
ANR	1257792	Identifier	s1		1257561	1					
ANR	1257793	ExpressionStatement	s = s1	1470:20:55279:55285	1257561	1	True				
ANR	1257794	AssignmentExpression	s = s1		1257561	0		=			
ANR	1257795	Identifier	s		1257561	0					
ANR	1257796	Identifier	s1		1257561	1					
ANR	1257797	ReturnStatement	return s ;	1474:4:55321:55329	1257561	2	True				
ANR	1257798	Identifier	s		1257561	0					
ANR	1257799	ReturnType	static inline float		1257561	1					
ANR	1257800	Identifier	function_linearity		1257561	2					
ANR	1257801	ParameterList	"const patch_fill_state_t * pfs , const patch_color_t * c0 , const patch_color_t * c1"		1257561	3					
ANR	1257802	Parameter	const patch_fill_state_t * pfs	1447:19:54309:54337	1257561	0	True				
ANR	1257803	ParameterType	const patch_fill_state_t *		1257561	0					
ANR	1257804	Identifier	pfs		1257561	1					
ANR	1257805	Parameter	const patch_color_t * c0	1447:50:54340:54362	1257561	1	True				
ANR	1257806	ParameterType	const patch_color_t *		1257561	0					
ANR	1257807	Identifier	c0		1257561	1					
ANR	1257808	Parameter	const patch_color_t * c1	1447:75:54365:54387	1257561	2	True				
ANR	1257809	ParameterType	const patch_color_t *		1257561	0					
ANR	1257810	Identifier	c1		1257561	1					
ANR	1257811	CFGEntryNode	ENTRY		1257561		True				
ANR	1257812	CFGExitNode	EXIT		1257561		True				
ANR	1257813	Symbol	* c1 -> cc		1257561						
ANR	1257814	Symbol	pfs -> Function		1257561						
ANR	1257815	Symbol	c . cc . paint		1257561						
ANR	1257816	Symbol	c1 -> t		1257561						
ANR	1257817	Symbol	* pfs -> color_domain		1257561						
ANR	1257818	Symbol	c0 -> cc		1257561						
ANR	1257819	Symbol	* pfs -> color_domain . paint		1257561						
ANR	1257820	Symbol	c0 -> t		1257561						
ANR	1257821	Symbol	* * pfs		1257561						
ANR	1257822	Symbol	c1 -> cc . paint		1257561						
ANR	1257823	Symbol	* c0 -> cc . paint		1257561						
ANR	1257824	Symbol	* * c1		1257561						
ANR	1257825	Symbol	pfs -> color_domain . paint . values		1257561						
ANR	1257826	Symbol	* * c0		1257561						
ANR	1257827	Symbol	s1		1257561						
ANR	1257828	Symbol	NULL		1257561						
ANR	1257829	Symbol	* pfs		1257561						
ANR	1257830	Symbol	* c . t		1257561						
ANR	1257831	Symbol	c0		1257561						
ANR	1257832	Symbol	c1		1257561						
ANR	1257833	Symbol	* c0 -> cc		1257561						
ANR	1257834	Symbol	pfs		1257561						
ANR	1257835	Symbol	pfs -> color_domain		1257561						
ANR	1257836	Symbol	c0 -> cc . paint . values		1257561						
ANR	1257837	Symbol	c . t		1257561						
ANR	1257838	Symbol	c . cc . paint . values		1257561						
ANR	1257839	Symbol	* c0 -> t		1257561						
ANR	1257840	Symbol	* c . cc . paint . values		1257561						
ANR	1257841	Symbol	count_of		1257561						
ANR	1257842	Symbol	pfs -> num_components		1257561						
ANR	1257843	Symbol	any_abs		1257561						
ANR	1257844	Symbol	* c1 -> t		1257561						
ANR	1257845	Symbol	* pfs -> color_domain . paint . values		1257561						
ANR	1257846	Symbol	c1 -> cc . paint . values		1257561						
ANR	1257847	Symbol	c		1257561						
ANR	1257848	Symbol	d		1257561						
ANR	1257849	Symbol	* c . cc		1257561						
ANR	1257850	Symbol	pfs -> smoothness		1257561						
ANR	1257851	Symbol	c . cc		1257561						
ANR	1257852	Symbol	i		1257561						
ANR	1257853	Symbol	& c		1257561						
ANR	1257854	Symbol	* c0 -> cc . paint . values		1257561						
ANR	1257855	Symbol	* c . cc . paint		1257561						
ANR	1257856	Symbol	j		1257561						
ANR	1257857	Symbol	c1 -> cc		1257561						
ANR	1257858	Symbol	pfs -> color_domain . paint		1257561						
ANR	1257859	Symbol	* c		1257561						
ANR	1257860	Symbol	* c0		1257561						
ANR	1257861	Symbol	q		1257561						
ANR	1257862	Symbol	s		1257561						
ANR	1257863	Symbol	* i		1257561						
ANR	1257864	Symbol	* j		1257561						
ANR	1257865	Symbol	* c1 -> cc . paint . values		1257561						
ANR	1257866	Symbol	v		1257561						
ANR	1257867	Symbol	* c1		1257561						
ANR	1257868	Symbol	c0 -> cc . paint		1257561						
ANR	1257869	Symbol	* c1 -> cc . paint		1257561						
ANR	1257870	Symbol	* q		1257561						
ANR	1257871	Function	is_color_linear	1477:0:55334:56036							
ANR	1257872	FunctionDef	"is_color_linear (const patch_fill_state_t * pfs , const patch_color_t * c0 , const patch_color_t * c1)"		1257871	0					
ANR	1257873	CompoundStatement		1479:0:55449:56036	1257871	0					
ANR	1257874	IfStatement	if ( pfs -> unlinear )		1257871	0					
ANR	1257875	Condition	pfs -> unlinear	1480:8:55515:55527	1257871	0	True				
ANR	1257876	PtrMemberAccess	pfs -> unlinear		1257871	0					
ANR	1257877	Identifier	pfs		1257871	0					
ANR	1257878	Identifier	unlinear		1257871	1					
ANR	1257879	ReturnStatement	return 1 ;	1481:8:55538:55546	1257871	1	True				
ANR	1257880	PrimaryExpression	1		1257871	0					
ANR	1257881	ElseStatement	else		1257871	0					
ANR	1257882	CompoundStatement		7:8:215:256	1257871	0					
ANR	1257883	IdentifierDeclStatement	const gs_color_space * cs = pfs -> direct_space ;	1483:8:55593:55637	1257871	0	True				
ANR	1257884	IdentifierDecl	* cs = pfs -> direct_space		1257871	0					
ANR	1257885	IdentifierDeclType	const gs_color_space *		1257871	0					
ANR	1257886	Identifier	cs		1257871	1					
ANR	1257887	AssignmentExpression	* cs = pfs -> direct_space		1257871	2		=			
ANR	1257888	Identifier	cs		1257871	0					
ANR	1257889	PtrMemberAccess	pfs -> direct_space		1257871	1					
ANR	1257890	Identifier	pfs		1257871	0					
ANR	1257891	Identifier	direct_space		1257871	1					
ANR	1257892	IdentifierDeclStatement	int code ;	1484:8:55647:55655	1257871	1	True				
ANR	1257893	IdentifierDecl	code		1257871	0					
ANR	1257894	IdentifierDeclType	int		1257871	0					
ANR	1257895	Identifier	code		1257871	1					
ANR	1257896	IdentifierDeclStatement	"float s = function_linearity ( pfs , c0 , c1 ) ;"	1485:8:55665:55706	1257871	2	True				
ANR	1257897	IdentifierDecl	"s = function_linearity ( pfs , c0 , c1 )"		1257871	0					
ANR	1257898	IdentifierDeclType	float		1257871	0					
ANR	1257899	Identifier	s		1257871	1					
ANR	1257900	AssignmentExpression	"s = function_linearity ( pfs , c0 , c1 )"		1257871	2		=			
ANR	1257901	Identifier	s		1257871	0					
ANR	1257902	CallExpression	"function_linearity ( pfs , c0 , c1 )"		1257871	1					
ANR	1257903	Callee	function_linearity		1257871	0					
ANR	1257904	Identifier	function_linearity		1257871	0					
ANR	1257905	ArgumentList	pfs		1257871	1					
ANR	1257906	Argument	pfs		1257871	0					
ANR	1257907	Identifier	pfs		1257871	0					
ANR	1257908	Argument	c0		1257871	1					
ANR	1257909	Identifier	c0		1257871	0					
ANR	1257910	Argument	c1		1257871	2					
ANR	1257911	Identifier	c1		1257871	0					
ANR	1257912	IfStatement	if ( s > pfs -> smoothness )		1257871	3					
ANR	1257913	Condition	s > pfs -> smoothness	1487:12:55721:55739	1257871	0	True				
ANR	1257914	RelationalExpression	s > pfs -> smoothness		1257871	0		>			
ANR	1257915	Identifier	s		1257871	0					
ANR	1257916	PtrMemberAccess	pfs -> smoothness		1257871	1					
ANR	1257917	Identifier	pfs		1257871	0					
ANR	1257918	Identifier	smoothness		1257871	1					
ANR	1257919	ReturnStatement	return 0 ;	1488:12:55754:55762	1257871	1	True				
ANR	1257920	PrimaryExpression	0		1257871	0					
ANR	1257921	IfStatement	if ( pfs -> cs_always_linear )		1257871	4					
ANR	1257922	Condition	pfs -> cs_always_linear	1489:12:55776:55796	1257871	0	True				
ANR	1257923	PtrMemberAccess	pfs -> cs_always_linear		1257871	0					
ANR	1257924	Identifier	pfs		1257871	0					
ANR	1257925	Identifier	cs_always_linear		1257871	1					
ANR	1257926	ReturnStatement	return 1 ;	1490:12:55811:55819	1257871	1	True				
ANR	1257927	PrimaryExpression	1		1257871	0					
ANR	1257928	ExpressionStatement	"code = cs_is_linear ( cs , pfs -> pgs , pfs -> trans_device , & c0 -> cc , & c1 -> cc , NULL , NULL , pfs -> smoothness - s , pfs -> icclink )"	1491:8:55829:55962	1257871	5	True				
ANR	1257929	AssignmentExpression	"code = cs_is_linear ( cs , pfs -> pgs , pfs -> trans_device , & c0 -> cc , & c1 -> cc , NULL , NULL , pfs -> smoothness - s , pfs -> icclink )"		1257871	0		=			
ANR	1257930	Identifier	code		1257871	0					
ANR	1257931	CallExpression	"cs_is_linear ( cs , pfs -> pgs , pfs -> trans_device , & c0 -> cc , & c1 -> cc , NULL , NULL , pfs -> smoothness - s , pfs -> icclink )"		1257871	1					
ANR	1257932	Callee	cs_is_linear		1257871	0					
ANR	1257933	Identifier	cs_is_linear		1257871	0					
ANR	1257934	ArgumentList	cs		1257871	1					
ANR	1257935	Argument	cs		1257871	0					
ANR	1257936	Identifier	cs		1257871	0					
ANR	1257937	Argument	pfs -> pgs		1257871	1					
ANR	1257938	PtrMemberAccess	pfs -> pgs		1257871	0					
ANR	1257939	Identifier	pfs		1257871	0					
ANR	1257940	Identifier	pgs		1257871	1					
ANR	1257941	Argument	pfs -> trans_device		1257871	2					
ANR	1257942	PtrMemberAccess	pfs -> trans_device		1257871	0					
ANR	1257943	Identifier	pfs		1257871	0					
ANR	1257944	Identifier	trans_device		1257871	1					
ANR	1257945	Argument	& c0 -> cc		1257871	3					
ANR	1257946	UnaryOperationExpression	& c0 -> cc		1257871	0					
ANR	1257947	UnaryOperator	&		1257871	0					
ANR	1257948	PtrMemberAccess	c0 -> cc		1257871	1					
ANR	1257949	Identifier	c0		1257871	0					
ANR	1257950	Identifier	cc		1257871	1					
ANR	1257951	Argument	& c1 -> cc		1257871	4					
ANR	1257952	UnaryOperationExpression	& c1 -> cc		1257871	0					
ANR	1257953	UnaryOperator	&		1257871	0					
ANR	1257954	PtrMemberAccess	c1 -> cc		1257871	1					
ANR	1257955	Identifier	c1		1257871	0					
ANR	1257956	Identifier	cc		1257871	1					
ANR	1257957	Argument	NULL		1257871	5					
ANR	1257958	Identifier	NULL		1257871	0					
ANR	1257959	Argument	NULL		1257871	6					
ANR	1257960	Identifier	NULL		1257871	0					
ANR	1257961	Argument	pfs -> smoothness - s		1257871	7					
ANR	1257962	AdditiveExpression	pfs -> smoothness - s		1257871	0		-			
ANR	1257963	PtrMemberAccess	pfs -> smoothness		1257871	0					
ANR	1257964	Identifier	pfs		1257871	0					
ANR	1257965	Identifier	smoothness		1257871	1					
ANR	1257966	Identifier	s		1257871	1					
ANR	1257967	Argument	pfs -> icclink		1257871	8					
ANR	1257968	PtrMemberAccess	pfs -> icclink		1257871	0					
ANR	1257969	Identifier	pfs		1257871	0					
ANR	1257970	Identifier	icclink		1257871	1					
ANR	1257971	IfStatement	if ( code <= 0 )		1257871	6					
ANR	1257972	Condition	code <= 0	1493:12:55976:55984	1257871	0	True				
ANR	1257973	RelationalExpression	code <= 0		1257871	0		<=			
ANR	1257974	Identifier	code		1257871	0					
ANR	1257975	PrimaryExpression	0		1257871	1					
ANR	1257976	ReturnStatement	return code ;	1494:12:55999:56010	1257871	1	True				
ANR	1257977	Identifier	code		1257871	0					
ANR	1257978	ReturnStatement	return 1 ;	1495:8:56020:56028	1257871	7	True				
ANR	1257979	PrimaryExpression	1		1257871	0					
ANR	1257980	ReturnType	static inline int		1257871	1					
ANR	1257981	Identifier	is_color_linear		1257871	2					
ANR	1257982	ParameterList	"const patch_fill_state_t * pfs , const patch_color_t * c0 , const patch_color_t * c1"		1257871	3					
ANR	1257983	Parameter	const patch_fill_state_t * pfs	1478:16:55368:55396	1257871	0	True				
ANR	1257984	ParameterType	const patch_fill_state_t *		1257871	0					
ANR	1257985	Identifier	pfs		1257871	1					
ANR	1257986	Parameter	const patch_color_t * c0	1478:47:55399:55421	1257871	1	True				
ANR	1257987	ParameterType	const patch_color_t *		1257871	0					
ANR	1257988	Identifier	c0		1257871	1					
ANR	1257989	Parameter	const patch_color_t * c1	1478:72:55424:55446	1257871	2	True				
ANR	1257990	ParameterType	const patch_color_t *		1257871	0					
ANR	1257991	Identifier	c1		1257871	1					
ANR	1257992	CFGEntryNode	ENTRY		1257871		True				
ANR	1257993	CFGExitNode	EXIT		1257871		True				
ANR	1257994	Symbol	function_linearity		1257871						
ANR	1257995	Symbol	code		1257871						
ANR	1257996	Symbol	NULL		1257871						
ANR	1257997	Symbol	pfs -> smoothness		1257871						
ANR	1257998	Symbol	* pfs		1257871						
ANR	1257999	Symbol	pfs -> pgs		1257871						
ANR	1258000	Symbol	pfs -> trans_device		1257871						
ANR	1258001	Symbol	c0		1257871						
ANR	1258002	Symbol	pfs -> direct_space		1257871						
ANR	1258003	Symbol	c1		1257871						
ANR	1258004	Symbol	cs		1257871						
ANR	1258005	Symbol	& c0 -> cc		1257871						
ANR	1258006	Symbol	pfs -> icclink		1257871						
ANR	1258007	Symbol	s		1257871						
ANR	1258008	Symbol	cs_is_linear		1257871						
ANR	1258009	Symbol	pfs -> cs_always_linear		1257871						
ANR	1258010	Symbol	& c1 -> cc		1257871						
ANR	1258011	Symbol	pfs		1257871						
ANR	1258012	Symbol	pfs -> unlinear		1257871						
ANR	1258013	Function	decompose_linear_color	1499:0:56039:61012							
ANR	1258014	FunctionDef	"decompose_linear_color (patch_fill_state_t * pfs , gs_fixed_edge * le , gs_fixed_edge * re , fixed ybot , fixed ytop , bool swap_axes , const patch_color_t * c0 , const patch_color_t * c1)"		1258013	0					
ANR	1258015	CompoundStatement		1503:0:56242:61012	1258013	0					
ANR	1258016	IdentifierDeclStatement	int code ;	1507:4:56471:56479	1258013	0	True				
ANR	1258017	IdentifierDecl	code		1258013	0					
ANR	1258018	IdentifierDeclType	int		1258013	0					
ANR	1258019	Identifier	code		1258013	1					
ANR	1258020	IdentifierDeclStatement	patch_color_t * c ;	1508:4:56485:56501	1258013	1	True				
ANR	1258021	IdentifierDecl	* c		1258013	0					
ANR	1258022	IdentifierDeclType	patch_color_t *		1258013	0					
ANR	1258023	Identifier	c		1258013	1					
ANR	1258024	IdentifierDeclStatement	byte * color_stack_ptr ;	1509:4:56507:56528	1258013	2	True				
ANR	1258025	IdentifierDecl	* color_stack_ptr		1258013	0					
ANR	1258026	IdentifierDeclType	byte *		1258013	0					
ANR	1258027	Identifier	color_stack_ptr		1258013	1					
ANR	1258028	IdentifierDeclStatement	bool save_inside = pfs -> inside ;	1510:4:56534:56564	1258013	3	True				
ANR	1258029	IdentifierDecl	save_inside = pfs -> inside		1258013	0					
ANR	1258030	IdentifierDeclType	bool		1258013	0					
ANR	1258031	Identifier	save_inside		1258013	1					
ANR	1258032	AssignmentExpression	save_inside = pfs -> inside		1258013	2		=			
ANR	1258033	Identifier	save_inside		1258013	0					
ANR	1258034	PtrMemberAccess	pfs -> inside		1258013	1					
ANR	1258035	Identifier	pfs		1258013	0					
ANR	1258036	Identifier	inside		1258013	1					
ANR	1258037	IfStatement	if ( ! pfs -> inside )		1258013	4					
ANR	1258038	Condition	! pfs -> inside	1512:8:56575:56586	1258013	0	True				
ANR	1258039	UnaryOperationExpression	! pfs -> inside		1258013	0					
ANR	1258040	UnaryOperator	!		1258013	0					
ANR	1258041	PtrMemberAccess	pfs -> inside		1258013	1					
ANR	1258042	Identifier	pfs		1258013	0					
ANR	1258043	Identifier	inside		1258013	1					
ANR	1258044	CompoundStatement		11:8:356:375	1258013	1					
ANR	1258045	IdentifierDeclStatement	"gs_fixed_rect r , r1 ;"	1513:8:56599:56618	1258013	0	True				
ANR	1258046	IdentifierDecl	r		1258013	0					
ANR	1258047	IdentifierDeclType	gs_fixed_rect		1258013	0					
ANR	1258048	Identifier	r		1258013	1					
ANR	1258049	IdentifierDecl	r1		1258013	1					
ANR	1258050	IdentifierDeclType	gs_fixed_rect		1258013	0					
ANR	1258051	Identifier	r1		1258013	1					
ANR	1258052	IfStatement	if ( swap_axes )		1258013	1					
ANR	1258053	Condition	swap_axes	1515:11:56632:56640	1258013	0	True				
ANR	1258054	Identifier	swap_axes		1258013	0					
ANR	1258055	CompoundStatement		13:22:400:400	1258013	1					
ANR	1258056	ExpressionStatement	"r . p . y = min ( le -> start . x , le -> end . x )"	1516:12:56657:56692	1258013	0	True				
ANR	1258057	AssignmentExpression	"r . p . y = min ( le -> start . x , le -> end . x )"		1258013	0		=			
ANR	1258058	MemberAccess	r . p . y		1258013	0					
ANR	1258059	MemberAccess	r . p		1258013	0					
ANR	1258060	Identifier	r		1258013	0					
ANR	1258061	Identifier	p		1258013	1					
ANR	1258062	Identifier	y		1258013	1					
ANR	1258063	CallExpression	"min ( le -> start . x , le -> end . x )"		1258013	1					
ANR	1258064	Callee	min		1258013	0					
ANR	1258065	Identifier	min		1258013	0					
ANR	1258066	ArgumentList	le -> start . x		1258013	1					
ANR	1258067	Argument	le -> start . x		1258013	0					
ANR	1258068	MemberAccess	le -> start . x		1258013	0					
ANR	1258069	PtrMemberAccess	le -> start		1258013	0					
ANR	1258070	Identifier	le		1258013	0					
ANR	1258071	Identifier	start		1258013	1					
ANR	1258072	Identifier	x		1258013	1					
ANR	1258073	Argument	le -> end . x		1258013	1					
ANR	1258074	MemberAccess	le -> end . x		1258013	0					
ANR	1258075	PtrMemberAccess	le -> end		1258013	0					
ANR	1258076	Identifier	le		1258013	0					
ANR	1258077	Identifier	end		1258013	1					
ANR	1258078	Identifier	x		1258013	1					
ANR	1258079	ExpressionStatement	"r . p . x = min ( le -> start . y , le -> end . y )"	1517:12:56706:56741	1258013	1	True				
ANR	1258080	AssignmentExpression	"r . p . x = min ( le -> start . y , le -> end . y )"		1258013	0		=			
ANR	1258081	MemberAccess	r . p . x		1258013	0					
ANR	1258082	MemberAccess	r . p		1258013	0					
ANR	1258083	Identifier	r		1258013	0					
ANR	1258084	Identifier	p		1258013	1					
ANR	1258085	Identifier	x		1258013	1					
ANR	1258086	CallExpression	"min ( le -> start . y , le -> end . y )"		1258013	1					
ANR	1258087	Callee	min		1258013	0					
ANR	1258088	Identifier	min		1258013	0					
ANR	1258089	ArgumentList	le -> start . y		1258013	1					
ANR	1258090	Argument	le -> start . y		1258013	0					
ANR	1258091	MemberAccess	le -> start . y		1258013	0					
ANR	1258092	PtrMemberAccess	le -> start		1258013	0					
ANR	1258093	Identifier	le		1258013	0					
ANR	1258094	Identifier	start		1258013	1					
ANR	1258095	Identifier	y		1258013	1					
ANR	1258096	Argument	le -> end . y		1258013	1					
ANR	1258097	MemberAccess	le -> end . y		1258013	0					
ANR	1258098	PtrMemberAccess	le -> end		1258013	0					
ANR	1258099	Identifier	le		1258013	0					
ANR	1258100	Identifier	end		1258013	1					
ANR	1258101	Identifier	y		1258013	1					
ANR	1258102	ExpressionStatement	"r . q . y = max ( re -> start . x , re -> end . x )"	1518:12:56755:56790	1258013	2	True				
ANR	1258103	AssignmentExpression	"r . q . y = max ( re -> start . x , re -> end . x )"		1258013	0		=			
ANR	1258104	MemberAccess	r . q . y		1258013	0					
ANR	1258105	MemberAccess	r . q		1258013	0					
ANR	1258106	Identifier	r		1258013	0					
ANR	1258107	Identifier	q		1258013	1					
ANR	1258108	Identifier	y		1258013	1					
ANR	1258109	CallExpression	"max ( re -> start . x , re -> end . x )"		1258013	1					
ANR	1258110	Callee	max		1258013	0					
ANR	1258111	Identifier	max		1258013	0					
ANR	1258112	ArgumentList	re -> start . x		1258013	1					
ANR	1258113	Argument	re -> start . x		1258013	0					
ANR	1258114	MemberAccess	re -> start . x		1258013	0					
ANR	1258115	PtrMemberAccess	re -> start		1258013	0					
ANR	1258116	Identifier	re		1258013	0					
ANR	1258117	Identifier	start		1258013	1					
ANR	1258118	Identifier	x		1258013	1					
ANR	1258119	Argument	re -> end . x		1258013	1					
ANR	1258120	MemberAccess	re -> end . x		1258013	0					
ANR	1258121	PtrMemberAccess	re -> end		1258013	0					
ANR	1258122	Identifier	re		1258013	0					
ANR	1258123	Identifier	end		1258013	1					
ANR	1258124	Identifier	x		1258013	1					
ANR	1258125	ExpressionStatement	"r . q . x = max ( re -> start . y , re -> end . y )"	1519:12:56804:56839	1258013	3	True				
ANR	1258126	AssignmentExpression	"r . q . x = max ( re -> start . y , re -> end . y )"		1258013	0		=			
ANR	1258127	MemberAccess	r . q . x		1258013	0					
ANR	1258128	MemberAccess	r . q		1258013	0					
ANR	1258129	Identifier	r		1258013	0					
ANR	1258130	Identifier	q		1258013	1					
ANR	1258131	Identifier	x		1258013	1					
ANR	1258132	CallExpression	"max ( re -> start . y , re -> end . y )"		1258013	1					
ANR	1258133	Callee	max		1258013	0					
ANR	1258134	Identifier	max		1258013	0					
ANR	1258135	ArgumentList	re -> start . y		1258013	1					
ANR	1258136	Argument	re -> start . y		1258013	0					
ANR	1258137	MemberAccess	re -> start . y		1258013	0					
ANR	1258138	PtrMemberAccess	re -> start		1258013	0					
ANR	1258139	Identifier	re		1258013	0					
ANR	1258140	Identifier	start		1258013	1					
ANR	1258141	Identifier	y		1258013	1					
ANR	1258142	Argument	re -> end . y		1258013	1					
ANR	1258143	MemberAccess	re -> end . y		1258013	0					
ANR	1258144	PtrMemberAccess	re -> end		1258013	0					
ANR	1258145	Identifier	re		1258013	0					
ANR	1258146	Identifier	end		1258013	1					
ANR	1258147	Identifier	y		1258013	1					
ANR	1258148	ElseStatement	else		1258013	0					
ANR	1258149	CompoundStatement		18:15:613:613	1258013	0					
ANR	1258150	ExpressionStatement	"r . p . x = min ( le -> start . x , le -> end . x )"	1521:12:56870:56905	1258013	0	True				
ANR	1258151	AssignmentExpression	"r . p . x = min ( le -> start . x , le -> end . x )"		1258013	0		=			
ANR	1258152	MemberAccess	r . p . x		1258013	0					
ANR	1258153	MemberAccess	r . p		1258013	0					
ANR	1258154	Identifier	r		1258013	0					
ANR	1258155	Identifier	p		1258013	1					
ANR	1258156	Identifier	x		1258013	1					
ANR	1258157	CallExpression	"min ( le -> start . x , le -> end . x )"		1258013	1					
ANR	1258158	Callee	min		1258013	0					
ANR	1258159	Identifier	min		1258013	0					
ANR	1258160	ArgumentList	le -> start . x		1258013	1					
ANR	1258161	Argument	le -> start . x		1258013	0					
ANR	1258162	MemberAccess	le -> start . x		1258013	0					
ANR	1258163	PtrMemberAccess	le -> start		1258013	0					
ANR	1258164	Identifier	le		1258013	0					
ANR	1258165	Identifier	start		1258013	1					
ANR	1258166	Identifier	x		1258013	1					
ANR	1258167	Argument	le -> end . x		1258013	1					
ANR	1258168	MemberAccess	le -> end . x		1258013	0					
ANR	1258169	PtrMemberAccess	le -> end		1258013	0					
ANR	1258170	Identifier	le		1258013	0					
ANR	1258171	Identifier	end		1258013	1					
ANR	1258172	Identifier	x		1258013	1					
ANR	1258173	ExpressionStatement	"r . p . y = min ( le -> start . y , le -> end . y )"	1522:12:56919:56954	1258013	1	True				
ANR	1258174	AssignmentExpression	"r . p . y = min ( le -> start . y , le -> end . y )"		1258013	0		=			
ANR	1258175	MemberAccess	r . p . y		1258013	0					
ANR	1258176	MemberAccess	r . p		1258013	0					
ANR	1258177	Identifier	r		1258013	0					
ANR	1258178	Identifier	p		1258013	1					
ANR	1258179	Identifier	y		1258013	1					
ANR	1258180	CallExpression	"min ( le -> start . y , le -> end . y )"		1258013	1					
ANR	1258181	Callee	min		1258013	0					
ANR	1258182	Identifier	min		1258013	0					
ANR	1258183	ArgumentList	le -> start . y		1258013	1					
ANR	1258184	Argument	le -> start . y		1258013	0					
ANR	1258185	MemberAccess	le -> start . y		1258013	0					
ANR	1258186	PtrMemberAccess	le -> start		1258013	0					
ANR	1258187	Identifier	le		1258013	0					
ANR	1258188	Identifier	start		1258013	1					
ANR	1258189	Identifier	y		1258013	1					
ANR	1258190	Argument	le -> end . y		1258013	1					
ANR	1258191	MemberAccess	le -> end . y		1258013	0					
ANR	1258192	PtrMemberAccess	le -> end		1258013	0					
ANR	1258193	Identifier	le		1258013	0					
ANR	1258194	Identifier	end		1258013	1					
ANR	1258195	Identifier	y		1258013	1					
ANR	1258196	ExpressionStatement	"r . q . x = max ( re -> start . x , re -> end . x )"	1523:12:56968:57003	1258013	2	True				
ANR	1258197	AssignmentExpression	"r . q . x = max ( re -> start . x , re -> end . x )"		1258013	0		=			
ANR	1258198	MemberAccess	r . q . x		1258013	0					
ANR	1258199	MemberAccess	r . q		1258013	0					
ANR	1258200	Identifier	r		1258013	0					
ANR	1258201	Identifier	q		1258013	1					
ANR	1258202	Identifier	x		1258013	1					
ANR	1258203	CallExpression	"max ( re -> start . x , re -> end . x )"		1258013	1					
ANR	1258204	Callee	max		1258013	0					
ANR	1258205	Identifier	max		1258013	0					
ANR	1258206	ArgumentList	re -> start . x		1258013	1					
ANR	1258207	Argument	re -> start . x		1258013	0					
ANR	1258208	MemberAccess	re -> start . x		1258013	0					
ANR	1258209	PtrMemberAccess	re -> start		1258013	0					
ANR	1258210	Identifier	re		1258013	0					
ANR	1258211	Identifier	start		1258013	1					
ANR	1258212	Identifier	x		1258013	1					
ANR	1258213	Argument	re -> end . x		1258013	1					
ANR	1258214	MemberAccess	re -> end . x		1258013	0					
ANR	1258215	PtrMemberAccess	re -> end		1258013	0					
ANR	1258216	Identifier	re		1258013	0					
ANR	1258217	Identifier	end		1258013	1					
ANR	1258218	Identifier	x		1258013	1					
ANR	1258219	ExpressionStatement	"r . q . y = max ( re -> start . y , re -> end . y )"	1524:12:57017:57052	1258013	3	True				
ANR	1258220	AssignmentExpression	"r . q . y = max ( re -> start . y , re -> end . y )"		1258013	0		=			
ANR	1258221	MemberAccess	r . q . y		1258013	0					
ANR	1258222	MemberAccess	r . q		1258013	0					
ANR	1258223	Identifier	r		1258013	0					
ANR	1258224	Identifier	q		1258013	1					
ANR	1258225	Identifier	y		1258013	1					
ANR	1258226	CallExpression	"max ( re -> start . y , re -> end . y )"		1258013	1					
ANR	1258227	Callee	max		1258013	0					
ANR	1258228	Identifier	max		1258013	0					
ANR	1258229	ArgumentList	re -> start . y		1258013	1					
ANR	1258230	Argument	re -> start . y		1258013	0					
ANR	1258231	MemberAccess	re -> start . y		1258013	0					
ANR	1258232	PtrMemberAccess	re -> start		1258013	0					
ANR	1258233	Identifier	re		1258013	0					
ANR	1258234	Identifier	start		1258013	1					
ANR	1258235	Identifier	y		1258013	1					
ANR	1258236	Argument	re -> end . y		1258013	1					
ANR	1258237	MemberAccess	re -> end . y		1258013	0					
ANR	1258238	PtrMemberAccess	re -> end		1258013	0					
ANR	1258239	Identifier	re		1258013	0					
ANR	1258240	Identifier	end		1258013	1					
ANR	1258241	Identifier	y		1258013	1					
ANR	1258242	ExpressionStatement	r1 = r	1526:8:57072:57078	1258013	2	True				
ANR	1258243	AssignmentExpression	r1 = r		1258013	0		=			
ANR	1258244	Identifier	r1		1258013	0					
ANR	1258245	Identifier	r		1258013	1					
ANR	1258246	ExpressionStatement	"rect_intersect ( r , pfs -> rect )"	1527:8:57088:57116	1258013	3	True				
ANR	1258247	CallExpression	"rect_intersect ( r , pfs -> rect )"		1258013	0					
ANR	1258248	Callee	rect_intersect		1258013	0					
ANR	1258249	Identifier	rect_intersect		1258013	0					
ANR	1258250	ArgumentList	r		1258013	1					
ANR	1258251	Argument	r		1258013	0					
ANR	1258252	Identifier	r		1258013	0					
ANR	1258253	Argument	pfs -> rect		1258013	1					
ANR	1258254	PtrMemberAccess	pfs -> rect		1258013	0					
ANR	1258255	Identifier	pfs		1258013	0					
ANR	1258256	Identifier	rect		1258013	1					
ANR	1258257	IfStatement	if ( r . q . x <= r . p . x || r . q . y <= r . p . y )		1258013	4					
ANR	1258258	Condition	r . q . x <= r . p . x || r . q . y <= r . p . y	1528:12:57130:57161	1258013	0	True				
ANR	1258259	OrExpression	r . q . x <= r . p . x || r . q . y <= r . p . y		1258013	0		||			
ANR	1258260	RelationalExpression	r . q . x <= r . p . x		1258013	0		<=			
ANR	1258261	MemberAccess	r . q . x		1258013	0					
ANR	1258262	MemberAccess	r . q		1258013	0					
ANR	1258263	Identifier	r		1258013	0					
ANR	1258264	Identifier	q		1258013	1					
ANR	1258265	Identifier	x		1258013	1					
ANR	1258266	MemberAccess	r . p . x		1258013	1					
ANR	1258267	MemberAccess	r . p		1258013	0					
ANR	1258268	Identifier	r		1258013	0					
ANR	1258269	Identifier	p		1258013	1					
ANR	1258270	Identifier	x		1258013	1					
ANR	1258271	RelationalExpression	r . q . y <= r . p . y		1258013	1		<=			
ANR	1258272	MemberAccess	r . q . y		1258013	0					
ANR	1258273	MemberAccess	r . q		1258013	0					
ANR	1258274	Identifier	r		1258013	0					
ANR	1258275	Identifier	q		1258013	1					
ANR	1258276	Identifier	y		1258013	1					
ANR	1258277	MemberAccess	r . p . y		1258013	1					
ANR	1258278	MemberAccess	r . p		1258013	0					
ANR	1258279	Identifier	r		1258013	0					
ANR	1258280	Identifier	p		1258013	1					
ANR	1258281	Identifier	y		1258013	1					
ANR	1258282	ReturnStatement	return 0 ;	1529:12:57176:57184	1258013	1	True				
ANR	1258283	PrimaryExpression	0		1258013	0					
ANR	1258284	IfStatement	if ( r1 . p . x == r . p . x && r1 . p . y == r . p . y && r1 . q . x == r . q . x && r1 . q . y == r . q . y )		1258013	5					
ANR	1258285	Condition	r1 . p . x == r . p . x && r1 . p . y == r . p . y && r1 . q . x == r . q . x && r1 . q . y == r . q . y	1530:12:57198:57281	1258013	0	True				
ANR	1258286	AndExpression	r1 . p . x == r . p . x && r1 . p . y == r . p . y && r1 . q . x == r . q . x && r1 . q . y == r . q . y		1258013	0		&&			
ANR	1258287	EqualityExpression	r1 . p . x == r . p . x		1258013	0		==			
ANR	1258288	MemberAccess	r1 . p . x		1258013	0					
ANR	1258289	MemberAccess	r1 . p		1258013	0					
ANR	1258290	Identifier	r1		1258013	0					
ANR	1258291	Identifier	p		1258013	1					
ANR	1258292	Identifier	x		1258013	1					
ANR	1258293	MemberAccess	r . p . x		1258013	1					
ANR	1258294	MemberAccess	r . p		1258013	0					
ANR	1258295	Identifier	r		1258013	0					
ANR	1258296	Identifier	p		1258013	1					
ANR	1258297	Identifier	x		1258013	1					
ANR	1258298	AndExpression	r1 . p . y == r . p . y && r1 . q . x == r . q . x && r1 . q . y == r . q . y		1258013	1		&&			
ANR	1258299	EqualityExpression	r1 . p . y == r . p . y		1258013	0		==			
ANR	1258300	MemberAccess	r1 . p . y		1258013	0					
ANR	1258301	MemberAccess	r1 . p		1258013	0					
ANR	1258302	Identifier	r1		1258013	0					
ANR	1258303	Identifier	p		1258013	1					
ANR	1258304	Identifier	y		1258013	1					
ANR	1258305	MemberAccess	r . p . y		1258013	1					
ANR	1258306	MemberAccess	r . p		1258013	0					
ANR	1258307	Identifier	r		1258013	0					
ANR	1258308	Identifier	p		1258013	1					
ANR	1258309	Identifier	y		1258013	1					
ANR	1258310	AndExpression	r1 . q . x == r . q . x && r1 . q . y == r . q . y		1258013	1		&&			
ANR	1258311	EqualityExpression	r1 . q . x == r . q . x		1258013	0		==			
ANR	1258312	MemberAccess	r1 . q . x		1258013	0					
ANR	1258313	MemberAccess	r1 . q		1258013	0					
ANR	1258314	Identifier	r1		1258013	0					
ANR	1258315	Identifier	q		1258013	1					
ANR	1258316	Identifier	x		1258013	1					
ANR	1258317	MemberAccess	r . q . x		1258013	1					
ANR	1258318	MemberAccess	r . q		1258013	0					
ANR	1258319	Identifier	r		1258013	0					
ANR	1258320	Identifier	q		1258013	1					
ANR	1258321	Identifier	x		1258013	1					
ANR	1258322	EqualityExpression	r1 . q . y == r . q . y		1258013	1		==			
ANR	1258323	MemberAccess	r1 . q . y		1258013	0					
ANR	1258324	MemberAccess	r1 . q		1258013	0					
ANR	1258325	Identifier	r1		1258013	0					
ANR	1258326	Identifier	q		1258013	1					
ANR	1258327	Identifier	y		1258013	1					
ANR	1258328	MemberAccess	r . q . y		1258013	1					
ANR	1258329	MemberAccess	r . q		1258013	0					
ANR	1258330	Identifier	r		1258013	0					
ANR	1258331	Identifier	q		1258013	1					
ANR	1258332	Identifier	y		1258013	1					
ANR	1258333	ExpressionStatement	pfs -> inside = true	1532:12:57296:57314	1258013	1	True				
ANR	1258334	AssignmentExpression	pfs -> inside = true		1258013	0		=			
ANR	1258335	PtrMemberAccess	pfs -> inside		1258013	0					
ANR	1258336	Identifier	pfs		1258013	0					
ANR	1258337	Identifier	inside		1258013	1					
ANR	1258338	Identifier	true		1258013	1					
ANR	1258339	ExpressionStatement	"color_stack_ptr = reserve_colors_inline ( pfs , & c , 1 )"	1534:4:57326:57377	1258013	5	True				
ANR	1258340	AssignmentExpression	"color_stack_ptr = reserve_colors_inline ( pfs , & c , 1 )"		1258013	0		=			
ANR	1258341	Identifier	color_stack_ptr		1258013	0					
ANR	1258342	CallExpression	"reserve_colors_inline ( pfs , & c , 1 )"		1258013	1					
ANR	1258343	Callee	reserve_colors_inline		1258013	0					
ANR	1258344	Identifier	reserve_colors_inline		1258013	0					
ANR	1258345	ArgumentList	pfs		1258013	1					
ANR	1258346	Argument	pfs		1258013	0					
ANR	1258347	Identifier	pfs		1258013	0					
ANR	1258348	Argument	& c		1258013	1					
ANR	1258349	UnaryOperationExpression	& c		1258013	0					
ANR	1258350	UnaryOperator	&		1258013	0					
ANR	1258351	Identifier	c		1258013	1					
ANR	1258352	Argument	1		1258013	2					
ANR	1258353	PrimaryExpression	1		1258013	0					
ANR	1258354	IfStatement	if ( color_stack_ptr == NULL )		1258013	6					
ANR	1258355	Condition	color_stack_ptr == NULL	1535:8:57387:57409	1258013	0	True				
ANR	1258356	EqualityExpression	color_stack_ptr == NULL		1258013	0		==			
ANR	1258357	Identifier	color_stack_ptr		1258013	0					
ANR	1258358	Identifier	NULL		1258013	1					
ANR	1258359	ExpressionStatement	return_error ( gs_error_unregistered )	1536:8:57420:57455	1258013	1	True				
ANR	1258360	CallExpression	return_error ( gs_error_unregistered )		1258013	0					
ANR	1258361	Callee	return_error		1258013	0					
ANR	1258362	Identifier	return_error		1258013	0					
ANR	1258363	ArgumentList	gs_error_unregistered		1258013	1					
ANR	1258364	Argument	gs_error_unregistered		1258013	0					
ANR	1258365	Identifier	gs_error_unregistered		1258013	0					
ANR	1258366	ExpressionStatement	"patch_interpolate_color ( c , c0 , c1 , pfs , 0.5 )"	1540:4:57642:57686	1258013	7	True				
ANR	1258367	CallExpression	"patch_interpolate_color ( c , c0 , c1 , pfs , 0.5 )"		1258013	0					
ANR	1258368	Callee	patch_interpolate_color		1258013	0					
ANR	1258369	Identifier	patch_interpolate_color		1258013	0					
ANR	1258370	ArgumentList	c		1258013	1					
ANR	1258371	Argument	c		1258013	0					
ANR	1258372	Identifier	c		1258013	0					
ANR	1258373	Argument	c0		1258013	1					
ANR	1258374	Identifier	c0		1258013	0					
ANR	1258375	Argument	c1		1258013	2					
ANR	1258376	Identifier	c1		1258013	0					
ANR	1258377	Argument	pfs		1258013	3					
ANR	1258378	Identifier	pfs		1258013	0					
ANR	1258379	Argument	0.5		1258013	4					
ANR	1258380	PrimaryExpression	0.5		1258013	0					
ANR	1258381	IfStatement	if ( ytop - ybot < pfs -> decomposition_limit )		1258013	8					
ANR	1258382	Condition	ytop - ybot < pfs -> decomposition_limit	1541:8:57696:57733	1258013	0	True				
ANR	1258383	RelationalExpression	ytop - ybot < pfs -> decomposition_limit		1258013	0		<			
ANR	1258384	AdditiveExpression	ytop - ybot		1258013	0		-			
ANR	1258385	Identifier	ytop		1258013	0					
ANR	1258386	Identifier	ybot		1258013	1					
ANR	1258387	PtrMemberAccess	pfs -> decomposition_limit		1258013	1					
ANR	1258388	Identifier	pfs		1258013	0					
ANR	1258389	Identifier	decomposition_limit		1258013	1					
ANR	1258390	ExpressionStatement	"code = constant_color_trapezoid ( pfs , le , re , ybot , ytop , swap_axes , c )"	1542:8:57791:57861	1258013	1	True				
ANR	1258391	AssignmentExpression	"code = constant_color_trapezoid ( pfs , le , re , ybot , ytop , swap_axes , c )"		1258013	0		=			
ANR	1258392	Identifier	code		1258013	0					
ANR	1258393	CallExpression	"constant_color_trapezoid ( pfs , le , re , ybot , ytop , swap_axes , c )"		1258013	1					
ANR	1258394	Callee	constant_color_trapezoid		1258013	0					
ANR	1258395	Identifier	constant_color_trapezoid		1258013	0					
ANR	1258396	ArgumentList	pfs		1258013	1					
ANR	1258397	Argument	pfs		1258013	0					
ANR	1258398	Identifier	pfs		1258013	0					
ANR	1258399	Argument	le		1258013	1					
ANR	1258400	Identifier	le		1258013	0					
ANR	1258401	Argument	re		1258013	2					
ANR	1258402	Identifier	re		1258013	0					
ANR	1258403	Argument	ybot		1258013	3					
ANR	1258404	Identifier	ybot		1258013	0					
ANR	1258405	Argument	ytop		1258013	4					
ANR	1258406	Identifier	ytop		1258013	0					
ANR	1258407	Argument	swap_axes		1258013	5					
ANR	1258408	Identifier	swap_axes		1258013	0					
ANR	1258409	Argument	c		1258013	6					
ANR	1258410	Identifier	c		1258013	0					
ANR	1258411	ElseStatement	else		1258013	0					
ANR	1258412	CompoundStatement		43:8:1697:1739	1258013	0					
ANR	1258413	IdentifierDeclStatement	bool monotonic_color_save = pfs -> monotonic_color ;	1544:8:57882:57930	1258013	0	True				
ANR	1258414	IdentifierDecl	monotonic_color_save = pfs -> monotonic_color		1258013	0					
ANR	1258415	IdentifierDeclType	bool		1258013	0					
ANR	1258416	Identifier	monotonic_color_save		1258013	1					
ANR	1258417	AssignmentExpression	monotonic_color_save = pfs -> monotonic_color		1258013	2		=			
ANR	1258418	Identifier	monotonic_color_save		1258013	0					
ANR	1258419	PtrMemberAccess	pfs -> monotonic_color		1258013	1					
ANR	1258420	Identifier	pfs		1258013	0					
ANR	1258421	Identifier	monotonic_color		1258013	1					
ANR	1258422	IdentifierDeclStatement	bool linear_color_save = pfs -> linear_color ;	1545:8:57940:57982	1258013	1	True				
ANR	1258423	IdentifierDecl	linear_color_save = pfs -> linear_color		1258013	0					
ANR	1258424	IdentifierDeclType	bool		1258013	0					
ANR	1258425	Identifier	linear_color_save		1258013	1					
ANR	1258426	AssignmentExpression	linear_color_save = pfs -> linear_color		1258013	2		=			
ANR	1258427	Identifier	linear_color_save		1258013	0					
ANR	1258428	PtrMemberAccess	pfs -> linear_color		1258013	1					
ANR	1258429	Identifier	pfs		1258013	0					
ANR	1258430	Identifier	linear_color		1258013	1					
ANR	1258431	IfStatement	if ( ! pfs -> monotonic_color )		1258013	2					
ANR	1258432	Condition	! pfs -> monotonic_color	1547:12:57997:58017	1258013	0	True				
ANR	1258433	UnaryOperationExpression	! pfs -> monotonic_color		1258013	0					
ANR	1258434	UnaryOperator	!		1258013	0					
ANR	1258435	PtrMemberAccess	pfs -> monotonic_color		1258013	1					
ANR	1258436	Identifier	pfs		1258013	0					
ANR	1258437	Identifier	monotonic_color		1258013	1					
ANR	1258438	CompoundStatement		45:35:1777:1777	1258013	1					
ANR	1258439	ExpressionStatement	"code = isnt_color_monotonic ( pfs , c0 , c1 )"	1548:12:58034:58074	1258013	0	True				
ANR	1258440	AssignmentExpression	"code = isnt_color_monotonic ( pfs , c0 , c1 )"		1258013	0		=			
ANR	1258441	Identifier	code		1258013	0					
ANR	1258442	CallExpression	"isnt_color_monotonic ( pfs , c0 , c1 )"		1258013	1					
ANR	1258443	Callee	isnt_color_monotonic		1258013	0					
ANR	1258444	Identifier	isnt_color_monotonic		1258013	0					
ANR	1258445	ArgumentList	pfs		1258013	1					
ANR	1258446	Argument	pfs		1258013	0					
ANR	1258447	Identifier	pfs		1258013	0					
ANR	1258448	Argument	c0		1258013	1					
ANR	1258449	Identifier	c0		1258013	0					
ANR	1258450	Argument	c1		1258013	2					
ANR	1258451	Identifier	c1		1258013	0					
ANR	1258452	IfStatement	if ( code < 0 )		1258013	1					
ANR	1258453	Condition	code < 0	1549:16:58092:58099	1258013	0	True				
ANR	1258454	RelationalExpression	code < 0		1258013	0		<			
ANR	1258455	Identifier	code		1258013	0					
ANR	1258456	PrimaryExpression	0		1258013	1					
ANR	1258457	GotoStatement	goto out ;	1550:16:58118:58126	1258013	1	True				
ANR	1258458	Identifier	out		1258013	0					
ANR	1258459	IfStatement	if ( ! code )		1258013	2					
ANR	1258460	Condition	! code	1551:16:58144:58148	1258013	0	True				
ANR	1258461	UnaryOperationExpression	! code		1258013	0					
ANR	1258462	UnaryOperator	!		1258013	0					
ANR	1258463	Identifier	code		1258013	1					
ANR	1258464	ExpressionStatement	pfs -> monotonic_color = true	1552:16:58167:58194	1258013	1	True				
ANR	1258465	AssignmentExpression	pfs -> monotonic_color = true		1258013	0		=			
ANR	1258466	PtrMemberAccess	pfs -> monotonic_color		1258013	0					
ANR	1258467	Identifier	pfs		1258013	0					
ANR	1258468	Identifier	monotonic_color		1258013	1					
ANR	1258469	Identifier	true		1258013	1					
ANR	1258470	IfStatement	if ( pfs -> monotonic_color && ! pfs -> linear_color )		1258013	3					
ANR	1258471	Condition	pfs -> monotonic_color && ! pfs -> linear_color	1554:12:58218:58259	1258013	0	True				
ANR	1258472	AndExpression	pfs -> monotonic_color && ! pfs -> linear_color		1258013	0		&&			
ANR	1258473	PtrMemberAccess	pfs -> monotonic_color		1258013	0					
ANR	1258474	Identifier	pfs		1258013	0					
ANR	1258475	Identifier	monotonic_color		1258013	1					
ANR	1258476	UnaryOperationExpression	! pfs -> linear_color		1258013	1					
ANR	1258477	UnaryOperator	!		1258013	0					
ANR	1258478	PtrMemberAccess	pfs -> linear_color		1258013	1					
ANR	1258479	Identifier	pfs		1258013	0					
ANR	1258480	Identifier	linear_color		1258013	1					
ANR	1258481	CompoundStatement		52:56:2019:2019	1258013	1					
ANR	1258482	ExpressionStatement	"code = is_color_linear ( pfs , c0 , c1 )"	1555:12:58276:58311	1258013	0	True				
ANR	1258483	AssignmentExpression	"code = is_color_linear ( pfs , c0 , c1 )"		1258013	0		=			
ANR	1258484	Identifier	code		1258013	0					
ANR	1258485	CallExpression	"is_color_linear ( pfs , c0 , c1 )"		1258013	1					
ANR	1258486	Callee	is_color_linear		1258013	0					
ANR	1258487	Identifier	is_color_linear		1258013	0					
ANR	1258488	ArgumentList	pfs		1258013	1					
ANR	1258489	Argument	pfs		1258013	0					
ANR	1258490	Identifier	pfs		1258013	0					
ANR	1258491	Argument	c0		1258013	1					
ANR	1258492	Identifier	c0		1258013	0					
ANR	1258493	Argument	c1		1258013	2					
ANR	1258494	Identifier	c1		1258013	0					
ANR	1258495	IfStatement	if ( code < 0 )		1258013	1					
ANR	1258496	Condition	code < 0	1556:16:58329:58336	1258013	0	True				
ANR	1258497	RelationalExpression	code < 0		1258013	0		<			
ANR	1258498	Identifier	code		1258013	0					
ANR	1258499	PrimaryExpression	0		1258013	1					
ANR	1258500	GotoStatement	goto out ;	1557:16:58355:58363	1258013	1	True				
ANR	1258501	Identifier	out		1258013	0					
ANR	1258502	IfStatement	if ( code > 0 )		1258013	2					
ANR	1258503	Condition	code > 0	1558:16:58381:58388	1258013	0	True				
ANR	1258504	RelationalExpression	code > 0		1258013	0		>			
ANR	1258505	Identifier	code		1258013	0					
ANR	1258506	PrimaryExpression	0		1258013	1					
ANR	1258507	ExpressionStatement	pfs -> linear_color = true	1559:16:58407:58432	1258013	1	True				
ANR	1258508	AssignmentExpression	pfs -> linear_color = true		1258013	0		=			
ANR	1258509	PtrMemberAccess	pfs -> linear_color		1258013	0					
ANR	1258510	Identifier	pfs		1258013	0					
ANR	1258511	Identifier	linear_color		1258013	1					
ANR	1258512	Identifier	true		1258013	1					
ANR	1258513	IfStatement	if ( ! pfs -> unlinear && pfs -> linear_color )		1258013	4					
ANR	1258514	Condition	! pfs -> unlinear && pfs -> linear_color	1561:12:58456:58490	1258013	0	True				
ANR	1258515	AndExpression	! pfs -> unlinear && pfs -> linear_color		1258013	0		&&			
ANR	1258516	UnaryOperationExpression	! pfs -> unlinear		1258013	0					
ANR	1258517	UnaryOperator	!		1258013	0					
ANR	1258518	PtrMemberAccess	pfs -> unlinear		1258013	1					
ANR	1258519	Identifier	pfs		1258013	0					
ANR	1258520	Identifier	unlinear		1258013	1					
ANR	1258521	PtrMemberAccess	pfs -> linear_color		1258013	1					
ANR	1258522	Identifier	pfs		1258013	0					
ANR	1258523	Identifier	linear_color		1258013	1					
ANR	1258524	CompoundStatement		63:12:2397:2415	1258013	1					
ANR	1258525	IdentifierDeclStatement	gx_device * pdev = pfs -> dev ;	1562:12:58507:58533	1258013	0	True				
ANR	1258526	IdentifierDecl	* pdev = pfs -> dev		1258013	0					
ANR	1258527	IdentifierDeclType	gx_device *		1258013	0					
ANR	1258528	Identifier	pdev		1258013	1					
ANR	1258529	AssignmentExpression	* pdev = pfs -> dev		1258013	2		=			
ANR	1258530	Identifier	pdev		1258013	0					
ANR	1258531	PtrMemberAccess	pfs -> dev		1258013	1					
ANR	1258532	Identifier	pfs		1258013	0					
ANR	1258533	Identifier	dev		1258013	1					
ANR	1258534	Statement	frac31	1563:12:58547:58552	1258013	1	True				
ANR	1258535	ExpressionStatement	fc [ 2 ] [ GX_DEVICE_COLOR_MAX_COMPONENTS ]	1563:19:58554:58591	1258013	2	True				
ANR	1258536	ArrayIndexing	fc [ 2 ] [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		1258013	0					
ANR	1258537	ArrayIndexing	fc [ 2 ]		1258013	0					
ANR	1258538	Identifier	fc		1258013	0					
ANR	1258539	PrimaryExpression	2		1258013	1					
ANR	1258540	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		1258013	1					
ANR	1258541	IdentifierDeclStatement	gs_fill_attributes fa ;	1564:12:58605:58626	1258013	3	True				
ANR	1258542	IdentifierDecl	fa		1258013	0					
ANR	1258543	IdentifierDeclType	gs_fill_attributes		1258013	0					
ANR	1258544	Identifier	fa		1258013	1					
ANR	1258545	IdentifierDeclStatement	gs_fixed_rect clip ;	1565:12:58640:58658	1258013	4	True				
ANR	1258546	IdentifierDecl	clip		1258013	0					
ANR	1258547	IdentifierDeclType	gs_fixed_rect		1258013	0					
ANR	1258548	Identifier	clip		1258013	1					
ANR	1258549	ExpressionStatement	clip = pfs -> rect	1567:12:58673:58689	1258013	5	True				
ANR	1258550	AssignmentExpression	clip = pfs -> rect		1258013	0		=			
ANR	1258551	Identifier	clip		1258013	0					
ANR	1258552	PtrMemberAccess	pfs -> rect		1258013	1					
ANR	1258553	Identifier	pfs		1258013	0					
ANR	1258554	Identifier	rect		1258013	1					
ANR	1258555	IfStatement	if ( swap_axes )		1258013	6					
ANR	1258556	Condition	swap_axes	1568:16:58707:58715	1258013	0	True				
ANR	1258557	Identifier	swap_axes		1258013	0					
ANR	1258558	CompoundStatement		67:16:2493:2500	1258013	1					
ANR	1258559	IdentifierDeclStatement	fixed v ;	1569:16:58736:58743	1258013	0	True				
ANR	1258560	IdentifierDecl	v		1258013	0					
ANR	1258561	IdentifierDeclType	fixed		1258013	0					
ANR	1258562	Identifier	v		1258013	1					
ANR	1258563	ExpressionStatement	v = clip . p . x	1571:16:58762:58774	1258013	1	True				
ANR	1258564	AssignmentExpression	v = clip . p . x		1258013	0		=			
ANR	1258565	Identifier	v		1258013	0					
ANR	1258566	MemberAccess	clip . p . x		1258013	1					
ANR	1258567	MemberAccess	clip . p		1258013	0					
ANR	1258568	Identifier	clip		1258013	0					
ANR	1258569	Identifier	p		1258013	1					
ANR	1258570	Identifier	x		1258013	1					
ANR	1258571	ExpressionStatement	clip . p . x = clip . p . y	1571:30:58776:58795	1258013	2	True				
ANR	1258572	AssignmentExpression	clip . p . x = clip . p . y		1258013	0		=			
ANR	1258573	MemberAccess	clip . p . x		1258013	0					
ANR	1258574	MemberAccess	clip . p		1258013	0					
ANR	1258575	Identifier	clip		1258013	0					
ANR	1258576	Identifier	p		1258013	1					
ANR	1258577	Identifier	x		1258013	1					
ANR	1258578	MemberAccess	clip . p . y		1258013	1					
ANR	1258579	MemberAccess	clip . p		1258013	0					
ANR	1258580	Identifier	clip		1258013	0					
ANR	1258581	Identifier	p		1258013	1					
ANR	1258582	Identifier	y		1258013	1					
ANR	1258583	ExpressionStatement	clip . p . y = v	1571:51:58797:58809	1258013	3	True				
ANR	1258584	AssignmentExpression	clip . p . y = v		1258013	0		=			
ANR	1258585	MemberAccess	clip . p . y		1258013	0					
ANR	1258586	MemberAccess	clip . p		1258013	0					
ANR	1258587	Identifier	clip		1258013	0					
ANR	1258588	Identifier	p		1258013	1					
ANR	1258589	Identifier	y		1258013	1					
ANR	1258590	Identifier	v		1258013	1					
ANR	1258591	ExpressionStatement	v = clip . q . x	1572:16:58827:58839	1258013	4	True				
ANR	1258592	AssignmentExpression	v = clip . q . x		1258013	0		=			
ANR	1258593	Identifier	v		1258013	0					
ANR	1258594	MemberAccess	clip . q . x		1258013	1					
ANR	1258595	MemberAccess	clip . q		1258013	0					
ANR	1258596	Identifier	clip		1258013	0					
ANR	1258597	Identifier	q		1258013	1					
ANR	1258598	Identifier	x		1258013	1					
ANR	1258599	ExpressionStatement	clip . q . x = clip . q . y	1572:30:58841:58860	1258013	5	True				
ANR	1258600	AssignmentExpression	clip . q . x = clip . q . y		1258013	0		=			
ANR	1258601	MemberAccess	clip . q . x		1258013	0					
ANR	1258602	MemberAccess	clip . q		1258013	0					
ANR	1258603	Identifier	clip		1258013	0					
ANR	1258604	Identifier	q		1258013	1					
ANR	1258605	Identifier	x		1258013	1					
ANR	1258606	MemberAccess	clip . q . y		1258013	1					
ANR	1258607	MemberAccess	clip . q		1258013	0					
ANR	1258608	Identifier	clip		1258013	0					
ANR	1258609	Identifier	q		1258013	1					
ANR	1258610	Identifier	y		1258013	1					
ANR	1258611	ExpressionStatement	clip . q . y = v	1572:51:58862:58874	1258013	6	True				
ANR	1258612	AssignmentExpression	clip . q . y = v		1258013	0		=			
ANR	1258613	MemberAccess	clip . q . y		1258013	0					
ANR	1258614	MemberAccess	clip . q		1258013	0					
ANR	1258615	Identifier	clip		1258013	0					
ANR	1258616	Identifier	q		1258013	1					
ANR	1258617	Identifier	y		1258013	1					
ANR	1258618	Identifier	v		1258013	1					
ANR	1258619	ExpressionStatement	"clip . p . y = max ( clip . p . y , ybot )"	1575:12:58965:58995	1258013	7	True				
ANR	1258620	AssignmentExpression	"clip . p . y = max ( clip . p . y , ybot )"		1258013	0		=			
ANR	1258621	MemberAccess	clip . p . y		1258013	0					
ANR	1258622	MemberAccess	clip . p		1258013	0					
ANR	1258623	Identifier	clip		1258013	0					
ANR	1258624	Identifier	p		1258013	1					
ANR	1258625	Identifier	y		1258013	1					
ANR	1258626	CallExpression	"max ( clip . p . y , ybot )"		1258013	1					
ANR	1258627	Callee	max		1258013	0					
ANR	1258628	Identifier	max		1258013	0					
ANR	1258629	ArgumentList	clip . p . y		1258013	1					
ANR	1258630	Argument	clip . p . y		1258013	0					
ANR	1258631	MemberAccess	clip . p . y		1258013	0					
ANR	1258632	MemberAccess	clip . p		1258013	0					
ANR	1258633	Identifier	clip		1258013	0					
ANR	1258634	Identifier	p		1258013	1					
ANR	1258635	Identifier	y		1258013	1					
ANR	1258636	Argument	ybot		1258013	1					
ANR	1258637	Identifier	ybot		1258013	0					
ANR	1258638	ExpressionStatement	"clip . q . y = min ( clip . q . y , ytop )"	1576:12:59009:59039	1258013	8	True				
ANR	1258639	AssignmentExpression	"clip . q . y = min ( clip . q . y , ytop )"		1258013	0		=			
ANR	1258640	MemberAccess	clip . q . y		1258013	0					
ANR	1258641	MemberAccess	clip . q		1258013	0					
ANR	1258642	Identifier	clip		1258013	0					
ANR	1258643	Identifier	q		1258013	1					
ANR	1258644	Identifier	y		1258013	1					
ANR	1258645	CallExpression	"min ( clip . q . y , ytop )"		1258013	1					
ANR	1258646	Callee	min		1258013	0					
ANR	1258647	Identifier	min		1258013	0					
ANR	1258648	ArgumentList	clip . q . y		1258013	1					
ANR	1258649	Argument	clip . q . y		1258013	0					
ANR	1258650	MemberAccess	clip . q . y		1258013	0					
ANR	1258651	MemberAccess	clip . q		1258013	0					
ANR	1258652	Identifier	clip		1258013	0					
ANR	1258653	Identifier	q		1258013	1					
ANR	1258654	Identifier	y		1258013	1					
ANR	1258655	Argument	ytop		1258013	1					
ANR	1258656	Identifier	ytop		1258013	0					
ANR	1258657	ExpressionStatement	fa . clip = & clip	1577:12:59053:59068	1258013	9	True				
ANR	1258658	AssignmentExpression	fa . clip = & clip		1258013	0		=			
ANR	1258659	MemberAccess	fa . clip		1258013	0					
ANR	1258660	Identifier	fa		1258013	0					
ANR	1258661	Identifier	clip		1258013	1					
ANR	1258662	UnaryOperationExpression	& clip		1258013	1					
ANR	1258663	UnaryOperator	&		1258013	0					
ANR	1258664	Identifier	clip		1258013	1					
ANR	1258665	ExpressionStatement	fa . ht = NULL	1578:12:59082:59094	1258013	10	True				
ANR	1258666	AssignmentExpression	fa . ht = NULL		1258013	0		=			
ANR	1258667	MemberAccess	fa . ht		1258013	0					
ANR	1258668	Identifier	fa		1258013	0					
ANR	1258669	Identifier	ht		1258013	1					
ANR	1258670	Identifier	NULL		1258013	1					
ANR	1258671	ExpressionStatement	fa . swap_axes = swap_axes	1579:12:59108:59132	1258013	11	True				
ANR	1258672	AssignmentExpression	fa . swap_axes = swap_axes		1258013	0		=			
ANR	1258673	MemberAccess	fa . swap_axes		1258013	0					
ANR	1258674	Identifier	fa		1258013	0					
ANR	1258675	Identifier	swap_axes		1258013	1					
ANR	1258676	Identifier	swap_axes		1258013	1					
ANR	1258677	ExpressionStatement	fa . lop = 0	1580:12:59146:59156	1258013	12	True				
ANR	1258678	AssignmentExpression	fa . lop = 0		1258013	0		=			
ANR	1258679	MemberAccess	fa . lop		1258013	0					
ANR	1258680	Identifier	fa		1258013	0					
ANR	1258681	Identifier	lop		1258013	1					
ANR	1258682	PrimaryExpression	0		1258013	1					
ANR	1258683	ExpressionStatement	fa . ystart = ybot	1581:12:59170:59186	1258013	13	True				
ANR	1258684	AssignmentExpression	fa . ystart = ybot		1258013	0		=			
ANR	1258685	MemberAccess	fa . ystart		1258013	0					
ANR	1258686	Identifier	fa		1258013	0					
ANR	1258687	Identifier	ystart		1258013	1					
ANR	1258688	Identifier	ybot		1258013	1					
ANR	1258689	ExpressionStatement	fa . yend = ytop	1582:12:59200:59214	1258013	14	True				
ANR	1258690	AssignmentExpression	fa . yend = ytop		1258013	0		=			
ANR	1258691	MemberAccess	fa . yend		1258013	0					
ANR	1258692	Identifier	fa		1258013	0					
ANR	1258693	Identifier	yend		1258013	1					
ANR	1258694	Identifier	ytop		1258013	1					
ANR	1258695	ExpressionStatement	"code = patch_color_to_device_color_inline ( pfs , c0 , NULL , fc [ 0 ] )"	1583:12:59228:59291	1258013	15	True				
ANR	1258696	AssignmentExpression	"code = patch_color_to_device_color_inline ( pfs , c0 , NULL , fc [ 0 ] )"		1258013	0		=			
ANR	1258697	Identifier	code		1258013	0					
ANR	1258698	CallExpression	"patch_color_to_device_color_inline ( pfs , c0 , NULL , fc [ 0 ] )"		1258013	1					
ANR	1258699	Callee	patch_color_to_device_color_inline		1258013	0					
ANR	1258700	Identifier	patch_color_to_device_color_inline		1258013	0					
ANR	1258701	ArgumentList	pfs		1258013	1					
ANR	1258702	Argument	pfs		1258013	0					
ANR	1258703	Identifier	pfs		1258013	0					
ANR	1258704	Argument	c0		1258013	1					
ANR	1258705	Identifier	c0		1258013	0					
ANR	1258706	Argument	NULL		1258013	2					
ANR	1258707	Identifier	NULL		1258013	0					
ANR	1258708	Argument	fc [ 0 ]		1258013	3					
ANR	1258709	ArrayIndexing	fc [ 0 ]		1258013	0					
ANR	1258710	Identifier	fc		1258013	0					
ANR	1258711	PrimaryExpression	0		1258013	1					
ANR	1258712	IfStatement	if ( code < 0 )		1258013	16					
ANR	1258713	Condition	code < 0	1584:16:59309:59316	1258013	0	True				
ANR	1258714	RelationalExpression	code < 0		1258013	0		<			
ANR	1258715	Identifier	code		1258013	0					
ANR	1258716	PrimaryExpression	0		1258013	1					
ANR	1258717	GotoStatement	goto out ;	1585:16:59335:59343	1258013	1	True				
ANR	1258718	Identifier	out		1258013	0					
ANR	1258719	IfStatement	if ( code == 2 )		1258013	17					
ANR	1258720	Condition	code == 2	1586:16:59361:59369	1258013	0	True				
ANR	1258721	EqualityExpression	code == 2		1258013	0		==			
ANR	1258722	Identifier	code		1258013	0					
ANR	1258723	PrimaryExpression	2		1258013	1					
ANR	1258724	CompoundStatement		84:27:3129:3129	1258013	1					
ANR	1258725	ExpressionStatement	code = gs_note_error ( gs_error_unregistered )	1588:16:59429:59470	1258013	0	True				
ANR	1258726	AssignmentExpression	code = gs_note_error ( gs_error_unregistered )		1258013	0		=			
ANR	1258727	Identifier	code		1258013	0					
ANR	1258728	CallExpression	gs_note_error ( gs_error_unregistered )		1258013	1					
ANR	1258729	Callee	gs_note_error		1258013	0					
ANR	1258730	Identifier	gs_note_error		1258013	0					
ANR	1258731	ArgumentList	gs_error_unregistered		1258013	1					
ANR	1258732	Argument	gs_error_unregistered		1258013	0					
ANR	1258733	Identifier	gs_error_unregistered		1258013	0					
ANR	1258734	GotoStatement	goto out ;	1589:16:59488:59496	1258013	1	True				
ANR	1258735	Identifier	out		1258013	0					
ANR	1258736	ExpressionStatement	"code = patch_color_to_device_color_inline ( pfs , c1 , NULL , fc [ 1 ] )"	1591:12:59524:59587	1258013	18	True				
ANR	1258737	AssignmentExpression	"code = patch_color_to_device_color_inline ( pfs , c1 , NULL , fc [ 1 ] )"		1258013	0		=			
ANR	1258738	Identifier	code		1258013	0					
ANR	1258739	CallExpression	"patch_color_to_device_color_inline ( pfs , c1 , NULL , fc [ 1 ] )"		1258013	1					
ANR	1258740	Callee	patch_color_to_device_color_inline		1258013	0					
ANR	1258741	Identifier	patch_color_to_device_color_inline		1258013	0					
ANR	1258742	ArgumentList	pfs		1258013	1					
ANR	1258743	Argument	pfs		1258013	0					
ANR	1258744	Identifier	pfs		1258013	0					
ANR	1258745	Argument	c1		1258013	1					
ANR	1258746	Identifier	c1		1258013	0					
ANR	1258747	Argument	NULL		1258013	2					
ANR	1258748	Identifier	NULL		1258013	0					
ANR	1258749	Argument	fc [ 1 ]		1258013	3					
ANR	1258750	ArrayIndexing	fc [ 1 ]		1258013	0					
ANR	1258751	Identifier	fc		1258013	0					
ANR	1258752	PrimaryExpression	1		1258013	1					
ANR	1258753	IfStatement	if ( code < 0 )		1258013	19					
ANR	1258754	Condition	code < 0	1592:16:59605:59612	1258013	0	True				
ANR	1258755	RelationalExpression	code < 0		1258013	0		<			
ANR	1258756	Identifier	code		1258013	0					
ANR	1258757	PrimaryExpression	0		1258013	1					
ANR	1258758	GotoStatement	goto out ;	1593:16:59631:59639	1258013	1	True				
ANR	1258759	Identifier	out		1258013	0					
ANR	1258760	ExpressionStatement	"code = dev_proc ( pdev , fill_linear_color_trapezoid ) ( pdev , & fa , & le -> start , & le -> end , & re -> start , & re -> end , fc [ 0 ] , fc [ 1 ] , NULL , NULL )"	1594:12:59653:59840	1258013	20	True				
ANR	1258761	AssignmentExpression	"code = dev_proc ( pdev , fill_linear_color_trapezoid ) ( pdev , & fa , & le -> start , & le -> end , & re -> start , & re -> end , fc [ 0 ] , fc [ 1 ] , NULL , NULL )"		1258013	0		=			
ANR	1258762	Identifier	code		1258013	0					
ANR	1258763	CallExpression	"dev_proc ( pdev , fill_linear_color_trapezoid ) ( pdev , & fa , & le -> start , & le -> end , & re -> start , & re -> end , fc [ 0 ] , fc [ 1 ] , NULL , NULL )"		1258013	1					
ANR	1258764	Callee	"dev_proc ( pdev , fill_linear_color_trapezoid )"		1258013	0					
ANR	1258765	CallExpression	"dev_proc ( pdev , fill_linear_color_trapezoid )"		1258013	0					
ANR	1258766	Callee	dev_proc		1258013	0					
ANR	1258767	Identifier	dev_proc		1258013	0					
ANR	1258768	ArgumentList	pdev		1258013	1					
ANR	1258769	Argument	pdev		1258013	0					
ANR	1258770	Identifier	pdev		1258013	0					
ANR	1258771	Argument	fill_linear_color_trapezoid		1258013	1					
ANR	1258772	Identifier	fill_linear_color_trapezoid		1258013	0					
ANR	1258773	ArgumentList	pdev		1258013	1					
ANR	1258774	Argument	pdev		1258013	0					
ANR	1258775	Identifier	pdev		1258013	0					
ANR	1258776	Argument	& fa		1258013	1					
ANR	1258777	UnaryOperationExpression	& fa		1258013	0					
ANR	1258778	UnaryOperator	&		1258013	0					
ANR	1258779	Identifier	fa		1258013	1					
ANR	1258780	Argument	& le -> start		1258013	2					
ANR	1258781	UnaryOperationExpression	& le -> start		1258013	0					
ANR	1258782	UnaryOperator	&		1258013	0					
ANR	1258783	PtrMemberAccess	le -> start		1258013	1					
ANR	1258784	Identifier	le		1258013	0					
ANR	1258785	Identifier	start		1258013	1					
ANR	1258786	Argument	& le -> end		1258013	3					
ANR	1258787	UnaryOperationExpression	& le -> end		1258013	0					
ANR	1258788	UnaryOperator	&		1258013	0					
ANR	1258789	PtrMemberAccess	le -> end		1258013	1					
ANR	1258790	Identifier	le		1258013	0					
ANR	1258791	Identifier	end		1258013	1					
ANR	1258792	Argument	& re -> start		1258013	4					
ANR	1258793	UnaryOperationExpression	& re -> start		1258013	0					
ANR	1258794	UnaryOperator	&		1258013	0					
ANR	1258795	PtrMemberAccess	re -> start		1258013	1					
ANR	1258796	Identifier	re		1258013	0					
ANR	1258797	Identifier	start		1258013	1					
ANR	1258798	Argument	& re -> end		1258013	5					
ANR	1258799	UnaryOperationExpression	& re -> end		1258013	0					
ANR	1258800	UnaryOperator	&		1258013	0					
ANR	1258801	PtrMemberAccess	re -> end		1258013	1					
ANR	1258802	Identifier	re		1258013	0					
ANR	1258803	Identifier	end		1258013	1					
ANR	1258804	Argument	fc [ 0 ]		1258013	6					
ANR	1258805	ArrayIndexing	fc [ 0 ]		1258013	0					
ANR	1258806	Identifier	fc		1258013	0					
ANR	1258807	PrimaryExpression	0		1258013	1					
ANR	1258808	Argument	fc [ 1 ]		1258013	7					
ANR	1258809	ArrayIndexing	fc [ 1 ]		1258013	0					
ANR	1258810	Identifier	fc		1258013	0					
ANR	1258811	PrimaryExpression	1		1258013	1					
ANR	1258812	Argument	NULL		1258013	8					
ANR	1258813	Identifier	NULL		1258013	0					
ANR	1258814	Argument	NULL		1258013	9					
ANR	1258815	Identifier	NULL		1258013	0					
ANR	1258816	IfStatement	if ( code == 1 )		1258013	21					
ANR	1258817	Condition	code == 1	1597:16:59858:59866	1258013	0	True				
ANR	1258818	EqualityExpression	code == 1		1258013	0		==			
ANR	1258819	Identifier	code		1258013	0					
ANR	1258820	PrimaryExpression	1		1258013	1					
ANR	1258821	CompoundStatement		95:27:3626:3626	1258013	1					
ANR	1258822	ExpressionStatement	pfs -> monotonic_color = monotonic_color_save	1598:16:59887:59930	1258013	0	True				
ANR	1258823	AssignmentExpression	pfs -> monotonic_color = monotonic_color_save		1258013	0		=			
ANR	1258824	PtrMemberAccess	pfs -> monotonic_color		1258013	0					
ANR	1258825	Identifier	pfs		1258013	0					
ANR	1258826	Identifier	monotonic_color		1258013	1					
ANR	1258827	Identifier	monotonic_color_save		1258013	1					
ANR	1258828	ExpressionStatement	pfs -> linear_color = linear_color_save	1599:16:59948:59985	1258013	1	True				
ANR	1258829	AssignmentExpression	pfs -> linear_color = linear_color_save		1258013	0		=			
ANR	1258830	PtrMemberAccess	pfs -> linear_color		1258013	0					
ANR	1258831	Identifier	pfs		1258013	0					
ANR	1258832	Identifier	linear_color		1258013	1					
ANR	1258833	Identifier	linear_color_save		1258013	1					
ANR	1258834	ExpressionStatement	code = 0	1600:16:60003:60011	1258013	2	True				
ANR	1258835	AssignmentExpression	code = 0		1258013	0		=			
ANR	1258836	Identifier	code		1258013	0					
ANR	1258837	PrimaryExpression	0		1258013	1					
ANR	1258838	GotoStatement	goto out ;	1601:16:60055:60063	1258013	3	True				
ANR	1258839	Identifier	out		1258013	0					
ANR	1258840	IfStatement	if ( code < 0 )		1258013	22					
ANR	1258841	Condition	code < 0	1603:16:60095:60102	1258013	0	True				
ANR	1258842	RelationalExpression	code < 0		1258013	0		<			
ANR	1258843	Identifier	code		1258013	0					
ANR	1258844	PrimaryExpression	0		1258013	1					
ANR	1258845	GotoStatement	goto out ;	1604:16:60121:60129	1258013	1	True				
ANR	1258846	Identifier	out		1258013	0					
ANR	1258847	ElseStatement	else		1258013	0					
ANR	1258848	CompoundStatement		103:17:3905:3905	1258013	0					
ANR	1258849	ExpressionStatement	code = gs_note_error ( gs_error_unregistered )	1606:16:60232:60275	1258013	0	True				
ANR	1258850	AssignmentExpression	code = gs_note_error ( gs_error_unregistered )		1258013	0		=			
ANR	1258851	Identifier	code		1258013	0					
ANR	1258852	CallExpression	gs_note_error ( gs_error_unregistered )		1258013	1					
ANR	1258853	Callee	gs_note_error		1258013	0					
ANR	1258854	Identifier	gs_note_error		1258013	0					
ANR	1258855	ArgumentList	gs_error_unregistered		1258013	1					
ANR	1258856	Argument	gs_error_unregistered		1258013	0					
ANR	1258857	Identifier	gs_error_unregistered		1258013	0					
ANR	1258858	GotoStatement	goto out ;	1607:16:60316:60324	1258013	1	True				
ANR	1258859	Identifier	out		1258013	0					
ANR	1258860	IfStatement	"if ( ! pfs -> unlinear || ! pfs -> linear_color || color_span ( pfs , c0 , c1 ) > pfs -> smoothness )"		1258013	5					
ANR	1258861	Condition	"! pfs -> unlinear || ! pfs -> linear_color || color_span ( pfs , c0 , c1 ) > pfs -> smoothness"	1610:12:60362:60458	1258013	0	True				
ANR	1258862	OrExpression	"! pfs -> unlinear || ! pfs -> linear_color || color_span ( pfs , c0 , c1 ) > pfs -> smoothness"		1258013	0		||			
ANR	1258863	UnaryOperationExpression	! pfs -> unlinear		1258013	0					
ANR	1258864	UnaryOperator	!		1258013	0					
ANR	1258865	PtrMemberAccess	pfs -> unlinear		1258013	1					
ANR	1258866	Identifier	pfs		1258013	0					
ANR	1258867	Identifier	unlinear		1258013	1					
ANR	1258868	OrExpression	"! pfs -> linear_color || color_span ( pfs , c0 , c1 ) > pfs -> smoothness"		1258013	1		||			
ANR	1258869	UnaryOperationExpression	! pfs -> linear_color		1258013	0					
ANR	1258870	UnaryOperator	!		1258013	0					
ANR	1258871	PtrMemberAccess	pfs -> linear_color		1258013	1					
ANR	1258872	Identifier	pfs		1258013	0					
ANR	1258873	Identifier	linear_color		1258013	1					
ANR	1258874	RelationalExpression	"color_span ( pfs , c0 , c1 ) > pfs -> smoothness"		1258013	1		>			
ANR	1258875	CallExpression	"color_span ( pfs , c0 , c1 )"		1258013	0					
ANR	1258876	Callee	color_span		1258013	0					
ANR	1258877	Identifier	color_span		1258013	0					
ANR	1258878	ArgumentList	pfs		1258013	1					
ANR	1258879	Argument	pfs		1258013	0					
ANR	1258880	Identifier	pfs		1258013	0					
ANR	1258881	Argument	c0		1258013	1					
ANR	1258882	Identifier	c0		1258013	0					
ANR	1258883	Argument	c1		1258013	2					
ANR	1258884	Identifier	c1		1258013	0					
ANR	1258885	PtrMemberAccess	pfs -> smoothness		1258013	1					
ANR	1258886	Identifier	pfs		1258013	0					
ANR	1258887	Identifier	smoothness		1258013	1					
ANR	1258888	CompoundStatement		110:12:4232:4259	1258013	1					
ANR	1258889	IdentifierDeclStatement	fixed y = ( ybot + ytop ) / 2 ;	1612:12:60475:60502	1258013	0	True				
ANR	1258890	IdentifierDecl	y = ( ybot + ytop ) / 2		1258013	0					
ANR	1258891	IdentifierDeclType	fixed		1258013	0					
ANR	1258892	Identifier	y		1258013	1					
ANR	1258893	AssignmentExpression	y = ( ybot + ytop ) / 2		1258013	2		=			
ANR	1258894	Identifier	y		1258013	0					
ANR	1258895	MultiplicativeExpression	( ybot + ytop ) / 2		1258013	1		/			
ANR	1258896	AdditiveExpression	ybot + ytop		1258013	0		+			
ANR	1258897	Identifier	ybot		1258013	0					
ANR	1258898	Identifier	ytop		1258013	1					
ANR	1258899	PrimaryExpression	2		1258013	1					
ANR	1258900	ExpressionStatement	"code = decompose_linear_color ( pfs , le , re , ybot , y , swap_axes , c0 , c )"	1614:12:60517:60586	1258013	1	True				
ANR	1258901	AssignmentExpression	"code = decompose_linear_color ( pfs , le , re , ybot , y , swap_axes , c0 , c )"		1258013	0		=			
ANR	1258902	Identifier	code		1258013	0					
ANR	1258903	CallExpression	"decompose_linear_color ( pfs , le , re , ybot , y , swap_axes , c0 , c )"		1258013	1					
ANR	1258904	Callee	decompose_linear_color		1258013	0					
ANR	1258905	Identifier	decompose_linear_color		1258013	0					
ANR	1258906	ArgumentList	pfs		1258013	1					
ANR	1258907	Argument	pfs		1258013	0					
ANR	1258908	Identifier	pfs		1258013	0					
ANR	1258909	Argument	le		1258013	1					
ANR	1258910	Identifier	le		1258013	0					
ANR	1258911	Argument	re		1258013	2					
ANR	1258912	Identifier	re		1258013	0					
ANR	1258913	Argument	ybot		1258013	3					
ANR	1258914	Identifier	ybot		1258013	0					
ANR	1258915	Argument	y		1258013	4					
ANR	1258916	Identifier	y		1258013	0					
ANR	1258917	Argument	swap_axes		1258013	5					
ANR	1258918	Identifier	swap_axes		1258013	0					
ANR	1258919	Argument	c0		1258013	6					
ANR	1258920	Identifier	c0		1258013	0					
ANR	1258921	Argument	c		1258013	7					
ANR	1258922	Identifier	c		1258013	0					
ANR	1258923	IfStatement	if ( code >= 0 )		1258013	2					
ANR	1258924	Condition	code >= 0	1615:16:60604:60612	1258013	0	True				
ANR	1258925	RelationalExpression	code >= 0		1258013	0		>=			
ANR	1258926	Identifier	code		1258013	0					
ANR	1258927	PrimaryExpression	0		1258013	1					
ANR	1258928	ExpressionStatement	"code = decompose_linear_color ( pfs , le , re , y , ytop , swap_axes , c , c1 )"	1616:16:60631:60700	1258013	1	True				
ANR	1258929	AssignmentExpression	"code = decompose_linear_color ( pfs , le , re , y , ytop , swap_axes , c , c1 )"		1258013	0		=			
ANR	1258930	Identifier	code		1258013	0					
ANR	1258931	CallExpression	"decompose_linear_color ( pfs , le , re , y , ytop , swap_axes , c , c1 )"		1258013	1					
ANR	1258932	Callee	decompose_linear_color		1258013	0					
ANR	1258933	Identifier	decompose_linear_color		1258013	0					
ANR	1258934	ArgumentList	pfs		1258013	1					
ANR	1258935	Argument	pfs		1258013	0					
ANR	1258936	Identifier	pfs		1258013	0					
ANR	1258937	Argument	le		1258013	1					
ANR	1258938	Identifier	le		1258013	0					
ANR	1258939	Argument	re		1258013	2					
ANR	1258940	Identifier	re		1258013	0					
ANR	1258941	Argument	y		1258013	3					
ANR	1258942	Identifier	y		1258013	0					
ANR	1258943	Argument	ytop		1258013	4					
ANR	1258944	Identifier	ytop		1258013	0					
ANR	1258945	Argument	swap_axes		1258013	5					
ANR	1258946	Identifier	swap_axes		1258013	0					
ANR	1258947	Argument	c		1258013	6					
ANR	1258948	Identifier	c		1258013	0					
ANR	1258949	Argument	c1		1258013	7					
ANR	1258950	Identifier	c1		1258013	0					
ANR	1258951	ElseStatement	else		1258013	0					
ANR	1258952	ExpressionStatement	"code = constant_color_trapezoid ( pfs , le , re , ybot , ytop , swap_axes , c )"	1618:12:60729:60799	1258013	0	True				
ANR	1258953	AssignmentExpression	"code = constant_color_trapezoid ( pfs , le , re , ybot , ytop , swap_axes , c )"		1258013	0		=			
ANR	1258954	Identifier	code		1258013	0					
ANR	1258955	CallExpression	"constant_color_trapezoid ( pfs , le , re , ybot , ytop , swap_axes , c )"		1258013	1					
ANR	1258956	Callee	constant_color_trapezoid		1258013	0					
ANR	1258957	Identifier	constant_color_trapezoid		1258013	0					
ANR	1258958	ArgumentList	pfs		1258013	1					
ANR	1258959	Argument	pfs		1258013	0					
ANR	1258960	Identifier	pfs		1258013	0					
ANR	1258961	Argument	le		1258013	1					
ANR	1258962	Identifier	le		1258013	0					
ANR	1258963	Argument	re		1258013	2					
ANR	1258964	Identifier	re		1258013	0					
ANR	1258965	Argument	ybot		1258013	3					
ANR	1258966	Identifier	ybot		1258013	0					
ANR	1258967	Argument	ytop		1258013	4					
ANR	1258968	Identifier	ytop		1258013	0					
ANR	1258969	Argument	swap_axes		1258013	5					
ANR	1258970	Identifier	swap_axes		1258013	0					
ANR	1258971	Argument	c		1258013	6					
ANR	1258972	Identifier	c		1258013	0					
ANR	1258973	ExpressionStatement	pfs -> monotonic_color = monotonic_color_save	1619:8:60809:60852	1258013	6	True				
ANR	1258974	AssignmentExpression	pfs -> monotonic_color = monotonic_color_save		1258013	0		=			
ANR	1258975	PtrMemberAccess	pfs -> monotonic_color		1258013	0					
ANR	1258976	Identifier	pfs		1258013	0					
ANR	1258977	Identifier	monotonic_color		1258013	1					
ANR	1258978	Identifier	monotonic_color_save		1258013	1					
ANR	1258979	ExpressionStatement	pfs -> linear_color = linear_color_save	1620:8:60862:60899	1258013	7	True				
ANR	1258980	AssignmentExpression	pfs -> linear_color = linear_color_save		1258013	0		=			
ANR	1258981	PtrMemberAccess	pfs -> linear_color		1258013	0					
ANR	1258982	Identifier	pfs		1258013	0					
ANR	1258983	Identifier	linear_color		1258013	1					
ANR	1258984	Identifier	linear_color_save		1258013	1					
ANR	1258985	Label	out :	1622:0:60907:60910	1258013	9	True				
ANR	1258986	Identifier	out		1258013	0					
ANR	1258987	ExpressionStatement	pfs -> inside = save_inside	1623:4:60916:60941	1258013	10	True				
ANR	1258988	AssignmentExpression	pfs -> inside = save_inside		1258013	0		=			
ANR	1258989	PtrMemberAccess	pfs -> inside		1258013	0					
ANR	1258990	Identifier	pfs		1258013	0					
ANR	1258991	Identifier	inside		1258013	1					
ANR	1258992	Identifier	save_inside		1258013	1					
ANR	1258993	ExpressionStatement	"release_colors_inline ( pfs , color_stack_ptr , 1 )"	1624:4:60947:60993	1258013	11	True				
ANR	1258994	CallExpression	"release_colors_inline ( pfs , color_stack_ptr , 1 )"		1258013	0					
ANR	1258995	Callee	release_colors_inline		1258013	0					
ANR	1258996	Identifier	release_colors_inline		1258013	0					
ANR	1258997	ArgumentList	pfs		1258013	1					
ANR	1258998	Argument	pfs		1258013	0					
ANR	1258999	Identifier	pfs		1258013	0					
ANR	1259000	Argument	color_stack_ptr		1258013	1					
ANR	1259001	Identifier	color_stack_ptr		1258013	0					
ANR	1259002	Argument	1		1258013	2					
ANR	1259003	PrimaryExpression	1		1258013	0					
ANR	1259004	ReturnStatement	return code ;	1625:4:60999:61010	1258013	12	True				
ANR	1259005	Identifier	code		1258013	0					
ANR	1259006	ReturnType	static int		1258013	1					
ANR	1259007	Identifier	decompose_linear_color		1258013	2					
ANR	1259008	ParameterList	"patch_fill_state_t * pfs , gs_fixed_edge * le , gs_fixed_edge * re , fixed ybot , fixed ytop , bool swap_axes , const patch_color_t * c0 , const patch_color_t * c1"		1258013	3					
ANR	1259009	Parameter	patch_fill_state_t * pfs	1500:23:56073:56095	1258013	0	True				
ANR	1259010	ParameterType	patch_fill_state_t *		1258013	0					
ANR	1259011	Identifier	pfs		1258013	1					
ANR	1259012	Parameter	gs_fixed_edge * le	1500:48:56098:56114	1258013	1	True				
ANR	1259013	ParameterType	gs_fixed_edge *		1258013	0					
ANR	1259014	Identifier	le		1258013	1					
ANR	1259015	Parameter	gs_fixed_edge * re	1500:67:56117:56133	1258013	2	True				
ANR	1259016	ParameterType	gs_fixed_edge *		1258013	0					
ANR	1259017	Identifier	re		1258013	1					
ANR	1259018	Parameter	fixed ybot	1501:8:56144:56153	1258013	3	True				
ANR	1259019	ParameterType	fixed		1258013	0					
ANR	1259020	Identifier	ybot		1258013	1					
ANR	1259021	Parameter	fixed ytop	1501:20:56156:56165	1258013	4	True				
ANR	1259022	ParameterType	fixed		1258013	0					
ANR	1259023	Identifier	ytop		1258013	1					
ANR	1259024	Parameter	bool swap_axes	1501:32:56168:56181	1258013	5	True				
ANR	1259025	ParameterType	bool		1258013	0					
ANR	1259026	Identifier	swap_axes		1258013	1					
ANR	1259027	Parameter	const patch_color_t * c0	1501:48:56184:56206	1258013	6	True				
ANR	1259028	ParameterType	const patch_color_t *		1258013	0					
ANR	1259029	Identifier	c0		1258013	1					
ANR	1259030	Parameter	const patch_color_t * c1	1502:8:56217:56239	1258013	7	True				
ANR	1259031	ParameterType	const patch_color_t *		1258013	0					
ANR	1259032	Identifier	c1		1258013	1					
ANR	1259033	CFGEntryNode	ENTRY		1258013		True				
ANR	1259034	CFGExitNode	EXIT		1258013		True				
ANR	1259035	Symbol	clip . p . y		1258013						
ANR	1259036	Symbol	clip . p . x		1258013						
ANR	1259037	Symbol	& re -> end		1258013						
ANR	1259038	Symbol	fill_linear_color_trapezoid		1258013						
ANR	1259039	Symbol	ytop		1258013						
ANR	1259040	Symbol	r . q		1258013						
ANR	1259041	Symbol	decompose_linear_color		1258013						
ANR	1259042	Symbol	le -> start		1258013						
ANR	1259043	Symbol	r . p		1258013						
ANR	1259044	Symbol	& re -> start		1258013						
ANR	1259045	Symbol	pfs -> monotonic_color		1258013						
ANR	1259046	Symbol	patch_color_to_device_color_inline		1258013						
ANR	1259047	Symbol	pdev		1258013						
ANR	1259048	Symbol	fa . lop		1258013						
ANR	1259049	Symbol	r1 . q		1258013						
ANR	1259050	Symbol	ybot		1258013						
ANR	1259051	Symbol	r1 . p		1258013						
ANR	1259052	Symbol	& le -> end		1258013						
ANR	1259053	Symbol	fa . ht		1258013						
ANR	1259054	Symbol	GX_DEVICE_COLOR_MAX_COMPONENTS		1258013						
ANR	1259055	Symbol	re -> end . x		1258013						
ANR	1259056	Symbol	re -> end . y		1258013						
ANR	1259057	Symbol	fa . yend		1258013						
ANR	1259058	Symbol	re -> end		1258013						
ANR	1259059	Symbol	NULL		1258013						
ANR	1259060	Symbol	* pfs		1258013						
ANR	1259061	Symbol	& le -> start		1258013						
ANR	1259062	Symbol	save_inside		1258013						
ANR	1259063	Symbol	c0		1258013						
ANR	1259064	Symbol	isnt_color_monotonic		1258013						
ANR	1259065	Symbol	c1		1258013						
ANR	1259066	Symbol	clip . q . x		1258013						
ANR	1259067	Symbol	re		1258013						
ANR	1259068	Symbol	le -> end		1258013						
ANR	1259069	Symbol	clip . q . y		1258013						
ANR	1259070	Symbol	clip . q		1258013						
ANR	1259071	Symbol	clip . p		1258013						
ANR	1259072	Symbol	color_stack_ptr		1258013						
ANR	1259073	Symbol	is_color_linear		1258013						
ANR	1259074	Symbol	re -> start . y		1258013						
ANR	1259075	Symbol	true		1258013						
ANR	1259076	Symbol	re -> start . x		1258013						
ANR	1259077	Symbol	constant_color_trapezoid		1258013						
ANR	1259078	Symbol	fa		1258013						
ANR	1259079	Symbol	pfs		1258013						
ANR	1259080	Symbol	* le		1258013						
ANR	1259081	Symbol	pfs -> linear_color		1258013						
ANR	1259082	Symbol	fc		1258013						
ANR	1259083	Symbol	pfs -> unlinear		1258013						
ANR	1259084	Symbol	gs_error_unregistered		1258013						
ANR	1259085	Symbol	code		1258013						
ANR	1259086	Symbol	& clip		1258013						
ANR	1259087	Symbol	fa . ystart		1258013						
ANR	1259088	Symbol	fa . clip		1258013						
ANR	1259089	Symbol	pfs -> decomposition_limit		1258013						
ANR	1259090	Symbol	min		1258013						
ANR	1259091	Symbol	fa . swap_axes		1258013						
ANR	1259092	Symbol	dev_proc		1258013						
ANR	1259093	Symbol	r . q . x		1258013						
ANR	1259094	Symbol	reserve_colors_inline		1258013						
ANR	1259095	Symbol	r . q . y		1258013						
ANR	1259096	Symbol	le -> start . x		1258013						
ANR	1259097	Symbol	monotonic_color_save		1258013						
ANR	1259098	Symbol	le -> start . y		1258013						
ANR	1259099	Symbol	re -> start		1258013						
ANR	1259100	Symbol	* fc		1258013						
ANR	1259101	Symbol	pfs -> rect		1258013						
ANR	1259102	Symbol	r1 . p . y		1258013						
ANR	1259103	Symbol	c		1258013						
ANR	1259104	Symbol	r . p . x		1258013						
ANR	1259105	Symbol	& fa		1258013						
ANR	1259106	Symbol	pfs -> inside		1258013						
ANR	1259107	Symbol	r . p . y		1258013						
ANR	1259108	Symbol	max		1258013						
ANR	1259109	Symbol	r1 . p . x		1258013						
ANR	1259110	Symbol	pfs -> smoothness		1258013						
ANR	1259111	Symbol	& c		1258013						
ANR	1259112	Symbol	r1 . q . x		1258013						
ANR	1259113	Symbol	linear_color_save		1258013						
ANR	1259114	Symbol	r1 . q . y		1258013						
ANR	1259115	Symbol	pfs -> dev		1258013						
ANR	1259116	Symbol	r		1258013						
ANR	1259117	Symbol	gs_note_error		1258013						
ANR	1259118	Symbol	le -> end . y		1258013						
ANR	1259119	Symbol	le -> end . x		1258013						
ANR	1259120	Symbol	v		1258013						
ANR	1259121	Symbol	color_span		1258013						
ANR	1259122	Symbol	le		1258013						
ANR	1259123	Symbol	y		1258013						
ANR	1259124	Symbol	* re		1258013						
ANR	1259125	Symbol	swap_axes		1258013						
ANR	1259126	Symbol	clip		1258013						
ANR	1259127	Symbol	r1		1258013						
ANR	1259128	Function	linear_color_trapezoid	1628:0:61015:61541							
ANR	1259129	FunctionDef	"linear_color_trapezoid (patch_fill_state_t * pfs , gs_fixed_point q [ 4 ] , int i0 , int i1 , int i2 , int i3 , fixed ybot , fixed ytop , bool swap_axes , const patch_color_t * c0 , const patch_color_t * c1 , bool orient)"		1259128	0					
ANR	1259130	CompoundStatement		1632:0:61269:61541	1259128	0					
ANR	1259131	IdentifierDeclStatement	"gs_fixed_edge le , re ;"	1634:4:61357:61377	1259128	0	True				
ANR	1259132	IdentifierDecl	le		1259128	0					
ANR	1259133	IdentifierDeclType	gs_fixed_edge		1259128	0					
ANR	1259134	Identifier	le		1259128	1					
ANR	1259135	IdentifierDecl	re		1259128	1					
ANR	1259136	IdentifierDeclType	gs_fixed_edge		1259128	0					
ANR	1259137	Identifier	re		1259128	1					
ANR	1259138	ExpressionStatement	"make_trapezoid ( q , i0 , i1 , i2 , i3 , ybot , ytop , swap_axes , orient , & le , & re )"	1636:4:61384:61458	1259128	1	True				
ANR	1259139	CallExpression	"make_trapezoid ( q , i0 , i1 , i2 , i3 , ybot , ytop , swap_axes , orient , & le , & re )"		1259128	0					
ANR	1259140	Callee	make_trapezoid		1259128	0					
ANR	1259141	Identifier	make_trapezoid		1259128	0					
ANR	1259142	ArgumentList	q		1259128	1					
ANR	1259143	Argument	q		1259128	0					
ANR	1259144	Identifier	q		1259128	0					
ANR	1259145	Argument	i0		1259128	1					
ANR	1259146	Identifier	i0		1259128	0					
ANR	1259147	Argument	i1		1259128	2					
ANR	1259148	Identifier	i1		1259128	0					
ANR	1259149	Argument	i2		1259128	3					
ANR	1259150	Identifier	i2		1259128	0					
ANR	1259151	Argument	i3		1259128	4					
ANR	1259152	Identifier	i3		1259128	0					
ANR	1259153	Argument	ybot		1259128	5					
ANR	1259154	Identifier	ybot		1259128	0					
ANR	1259155	Argument	ytop		1259128	6					
ANR	1259156	Identifier	ytop		1259128	0					
ANR	1259157	Argument	swap_axes		1259128	7					
ANR	1259158	Identifier	swap_axes		1259128	0					
ANR	1259159	Argument	orient		1259128	8					
ANR	1259160	Identifier	orient		1259128	0					
ANR	1259161	Argument	& le		1259128	9					
ANR	1259162	UnaryOperationExpression	& le		1259128	0					
ANR	1259163	UnaryOperator	&		1259128	0					
ANR	1259164	Identifier	le		1259128	1					
ANR	1259165	Argument	& re		1259128	10					
ANR	1259166	UnaryOperationExpression	& re		1259128	0					
ANR	1259167	UnaryOperator	&		1259128	0					
ANR	1259168	Identifier	re		1259128	1					
ANR	1259169	ReturnStatement	"return decompose_linear_color ( pfs , & le , & re , ybot , ytop , swap_axes , c0 , c1 ) ;"	1637:4:61464:61539	1259128	2	True				
ANR	1259170	CallExpression	"decompose_linear_color ( pfs , & le , & re , ybot , ytop , swap_axes , c0 , c1 )"		1259128	0					
ANR	1259171	Callee	decompose_linear_color		1259128	0					
ANR	1259172	Identifier	decompose_linear_color		1259128	0					
ANR	1259173	ArgumentList	pfs		1259128	1					
ANR	1259174	Argument	pfs		1259128	0					
ANR	1259175	Identifier	pfs		1259128	0					
ANR	1259176	Argument	& le		1259128	1					
ANR	1259177	UnaryOperationExpression	& le		1259128	0					
ANR	1259178	UnaryOperator	&		1259128	0					
ANR	1259179	Identifier	le		1259128	1					
ANR	1259180	Argument	& re		1259128	2					
ANR	1259181	UnaryOperationExpression	& re		1259128	0					
ANR	1259182	UnaryOperator	&		1259128	0					
ANR	1259183	Identifier	re		1259128	1					
ANR	1259184	Argument	ybot		1259128	3					
ANR	1259185	Identifier	ybot		1259128	0					
ANR	1259186	Argument	ytop		1259128	4					
ANR	1259187	Identifier	ytop		1259128	0					
ANR	1259188	Argument	swap_axes		1259128	5					
ANR	1259189	Identifier	swap_axes		1259128	0					
ANR	1259190	Argument	c0		1259128	6					
ANR	1259191	Identifier	c0		1259128	0					
ANR	1259192	Argument	c1		1259128	7					
ANR	1259193	Identifier	c1		1259128	0					
ANR	1259194	ReturnType	static inline int		1259128	1					
ANR	1259195	Identifier	linear_color_trapezoid		1259128	2					
ANR	1259196	ParameterList	"patch_fill_state_t * pfs , gs_fixed_point q [ 4 ] , int i0 , int i1 , int i2 , int i3 , fixed ybot , fixed ytop , bool swap_axes , const patch_color_t * c0 , const patch_color_t * c1 , bool orient"		1259128	3					
ANR	1259197	Parameter	patch_fill_state_t * pfs	1629:23:61056:61078	1259128	0	True				
ANR	1259198	ParameterType	patch_fill_state_t *		1259128	0					
ANR	1259199	Identifier	pfs		1259128	1					
ANR	1259200	Parameter	gs_fixed_point q [ 4 ]	1629:48:61081:61099	1259128	1	True				
ANR	1259201	ParameterType	gs_fixed_point [ 4 ]		1259128	0					
ANR	1259202	Identifier	q		1259128	1					
ANR	1259203	Parameter	int i0	1629:69:61102:61107	1259128	2	True				
ANR	1259204	ParameterType	int		1259128	0					
ANR	1259205	Identifier	i0		1259128	1					
ANR	1259206	Parameter	int i1	1629:77:61110:61115	1259128	3	True				
ANR	1259207	ParameterType	int		1259128	0					
ANR	1259208	Identifier	i1		1259128	1					
ANR	1259209	Parameter	int i2	1629:85:61118:61123	1259128	4	True				
ANR	1259210	ParameterType	int		1259128	0					
ANR	1259211	Identifier	i2		1259128	1					
ANR	1259212	Parameter	int i3	1629:93:61126:61131	1259128	5	True				
ANR	1259213	ParameterType	int		1259128	0					
ANR	1259214	Identifier	i3		1259128	1					
ANR	1259215	Parameter	fixed ybot	1630:16:61150:61159	1259128	6	True				
ANR	1259216	ParameterType	fixed		1259128	0					
ANR	1259217	Identifier	ybot		1259128	1					
ANR	1259218	Parameter	fixed ytop	1630:28:61162:61171	1259128	7	True				
ANR	1259219	ParameterType	fixed		1259128	0					
ANR	1259220	Identifier	ytop		1259128	1					
ANR	1259221	Parameter	bool swap_axes	1630:40:61174:61187	1259128	8	True				
ANR	1259222	ParameterType	bool		1259128	0					
ANR	1259223	Identifier	swap_axes		1259128	1					
ANR	1259224	Parameter	const patch_color_t * c0	1630:56:61190:61212	1259128	9	True				
ANR	1259225	ParameterType	const patch_color_t *		1259128	0					
ANR	1259226	Identifier	c0		1259128	1					
ANR	1259227	Parameter	const patch_color_t * c1	1630:81:61215:61237	1259128	10	True				
ANR	1259228	ParameterType	const patch_color_t *		1259128	0					
ANR	1259229	Identifier	c1		1259128	1					
ANR	1259230	Parameter	bool orient	1631:16:61256:61266	1259128	11	True				
ANR	1259231	ParameterType	bool		1259128	0					
ANR	1259232	Identifier	orient		1259128	1					
ANR	1259233	CFGEntryNode	ENTRY		1259128		True				
ANR	1259234	CFGExitNode	EXIT		1259128		True				
ANR	1259235	Symbol	& le		1259128						
ANR	1259236	Symbol	ytop		1259128						
ANR	1259237	Symbol	orient		1259128						
ANR	1259238	Symbol	decompose_linear_color		1259128						
ANR	1259239	Symbol	i0		1259128						
ANR	1259240	Symbol	i1		1259128						
ANR	1259241	Symbol	i2		1259128						
ANR	1259242	Symbol	i3		1259128						
ANR	1259243	Symbol	c0		1259128						
ANR	1259244	Symbol	c1		1259128						
ANR	1259245	Symbol	q		1259128						
ANR	1259246	Symbol	re		1259128						
ANR	1259247	Symbol	ybot		1259128						
ANR	1259248	Symbol	le		1259128						
ANR	1259249	Symbol	pfs		1259128						
ANR	1259250	Symbol	swap_axes		1259128						
ANR	1259251	Symbol	& re		1259128						
ANR	1259252	Function	wedge_trap_decompose	1640:0:61544:62556							
ANR	1259253	FunctionDef	"wedge_trap_decompose (patch_fill_state_t * pfs , gs_fixed_point q [ 4 ] , fixed ybot , fixed ytop , const patch_color_t * c0 , const patch_color_t * c1 , bool swap_axes , bool self_intersecting)"		1259252	0					
ANR	1259254	CompoundStatement		1644:0:61752:62556	1259252	0					
ANR	1259255	IdentifierDeclStatement	"fixed dx1 , dy1 , dx2 , dy2 ;"	1646:4:61840:61864	1259252	0	True				
ANR	1259256	IdentifierDecl	dx1		1259252	0					
ANR	1259257	IdentifierDeclType	fixed		1259252	0					
ANR	1259258	Identifier	dx1		1259252	1					
ANR	1259259	IdentifierDecl	dy1		1259252	1					
ANR	1259260	IdentifierDeclType	fixed		1259252	0					
ANR	1259261	Identifier	dy1		1259252	1					
ANR	1259262	IdentifierDecl	dx2		1259252	2					
ANR	1259263	IdentifierDeclType	fixed		1259252	0					
ANR	1259264	Identifier	dx2		1259252	1					
ANR	1259265	IdentifierDecl	dy2		1259252	3					
ANR	1259266	IdentifierDeclType	fixed		1259252	0					
ANR	1259267	Identifier	dy2		1259252	1					
ANR	1259268	IdentifierDeclStatement	bool orient ;	1647:4:61870:61881	1259252	1	True				
ANR	1259269	IdentifierDecl	orient		1259252	0					
ANR	1259270	IdentifierDeclType	bool		1259252	0					
ANR	1259271	Identifier	orient		1259252	1					
ANR	1259272	IfStatement	"if ( ! pfs -> vectorization && ! covers_pixel_centers ( ybot , ytop ) )"		1259252	2					
ANR	1259273	Condition	"! pfs -> vectorization && ! covers_pixel_centers ( ybot , ytop )"	1649:8:61892:61947	1259252	0	True				
ANR	1259274	AndExpression	"! pfs -> vectorization && ! covers_pixel_centers ( ybot , ytop )"		1259252	0		&&			
ANR	1259275	UnaryOperationExpression	! pfs -> vectorization		1259252	0					
ANR	1259276	UnaryOperator	!		1259252	0					
ANR	1259277	PtrMemberAccess	pfs -> vectorization		1259252	1					
ANR	1259278	Identifier	pfs		1259252	0					
ANR	1259279	Identifier	vectorization		1259252	1					
ANR	1259280	UnaryOperationExpression	"! covers_pixel_centers ( ybot , ytop )"		1259252	1					
ANR	1259281	UnaryOperator	!		1259252	0					
ANR	1259282	CallExpression	"covers_pixel_centers ( ybot , ytop )"		1259252	1					
ANR	1259283	Callee	covers_pixel_centers		1259252	0					
ANR	1259284	Identifier	covers_pixel_centers		1259252	0					
ANR	1259285	ArgumentList	ybot		1259252	1					
ANR	1259286	Argument	ybot		1259252	0					
ANR	1259287	Identifier	ybot		1259252	0					
ANR	1259288	Argument	ytop		1259252	1					
ANR	1259289	Identifier	ytop		1259252	0					
ANR	1259290	ReturnStatement	return 0 ;	1650:8:61958:61966	1259252	1	True				
ANR	1259291	PrimaryExpression	0		1259252	0					
ANR	1259292	IfStatement	if ( ybot == ytop )		1259252	3					
ANR	1259293	Condition	ybot == ytop	1651:8:61976:61987	1259252	0	True				
ANR	1259294	EqualityExpression	ybot == ytop		1259252	0		==			
ANR	1259295	Identifier	ybot		1259252	0					
ANR	1259296	Identifier	ytop		1259252	1					
ANR	1259297	ReturnStatement	return 0 ;	1652:8:61998:62006	1259252	1	True				
ANR	1259298	PrimaryExpression	0		1259252	0					
ANR	1259299	ExpressionStatement	"dx1 = q [ 1 ] . x - q [ 0 ] . x , dy1 = q [ 1 ] . y - q [ 0 ] . y"	1653:4:62012:62056	1259252	4	True				
ANR	1259300	Expression	"dx1 = q [ 1 ] . x - q [ 0 ] . x , dy1 = q [ 1 ] . y - q [ 0 ] . y"		1259252	0					
ANR	1259301	AssignmentExpression	dx1 = q [ 1 ] . x - q [ 0 ] . x		1259252	0		=			
ANR	1259302	Identifier	dx1		1259252	0					
ANR	1259303	AdditiveExpression	q [ 1 ] . x - q [ 0 ] . x		1259252	1		-			
ANR	1259304	MemberAccess	q [ 1 ] . x		1259252	0					
ANR	1259305	ArrayIndexing	q [ 1 ]		1259252	0					
ANR	1259306	Identifier	q		1259252	0					
ANR	1259307	PrimaryExpression	1		1259252	1					
ANR	1259308	Identifier	x		1259252	1					
ANR	1259309	MemberAccess	q [ 0 ] . x		1259252	1					
ANR	1259310	ArrayIndexing	q [ 0 ]		1259252	0					
ANR	1259311	Identifier	q		1259252	0					
ANR	1259312	PrimaryExpression	0		1259252	1					
ANR	1259313	Identifier	x		1259252	1					
ANR	1259314	AssignmentExpression	dy1 = q [ 1 ] . y - q [ 0 ] . y		1259252	1		=			
ANR	1259315	Identifier	dy1		1259252	0					
ANR	1259316	AdditiveExpression	q [ 1 ] . y - q [ 0 ] . y		1259252	1		-			
ANR	1259317	MemberAccess	q [ 1 ] . y		1259252	0					
ANR	1259318	ArrayIndexing	q [ 1 ]		1259252	0					
ANR	1259319	Identifier	q		1259252	0					
ANR	1259320	PrimaryExpression	1		1259252	1					
ANR	1259321	Identifier	y		1259252	1					
ANR	1259322	MemberAccess	q [ 0 ] . y		1259252	1					
ANR	1259323	ArrayIndexing	q [ 0 ]		1259252	0					
ANR	1259324	Identifier	q		1259252	0					
ANR	1259325	PrimaryExpression	0		1259252	1					
ANR	1259326	Identifier	y		1259252	1					
ANR	1259327	ExpressionStatement	"dx2 = q [ 2 ] . x - q [ 0 ] . x , dy2 = q [ 2 ] . y - q [ 0 ] . y"	1654:4:62062:62106	1259252	5	True				
ANR	1259328	Expression	"dx2 = q [ 2 ] . x - q [ 0 ] . x , dy2 = q [ 2 ] . y - q [ 0 ] . y"		1259252	0					
ANR	1259329	AssignmentExpression	dx2 = q [ 2 ] . x - q [ 0 ] . x		1259252	0		=			
ANR	1259330	Identifier	dx2		1259252	0					
ANR	1259331	AdditiveExpression	q [ 2 ] . x - q [ 0 ] . x		1259252	1		-			
ANR	1259332	MemberAccess	q [ 2 ] . x		1259252	0					
ANR	1259333	ArrayIndexing	q [ 2 ]		1259252	0					
ANR	1259334	Identifier	q		1259252	0					
ANR	1259335	PrimaryExpression	2		1259252	1					
ANR	1259336	Identifier	x		1259252	1					
ANR	1259337	MemberAccess	q [ 0 ] . x		1259252	1					
ANR	1259338	ArrayIndexing	q [ 0 ]		1259252	0					
ANR	1259339	Identifier	q		1259252	0					
ANR	1259340	PrimaryExpression	0		1259252	1					
ANR	1259341	Identifier	x		1259252	1					
ANR	1259342	AssignmentExpression	dy2 = q [ 2 ] . y - q [ 0 ] . y		1259252	1		=			
ANR	1259343	Identifier	dy2		1259252	0					
ANR	1259344	AdditiveExpression	q [ 2 ] . y - q [ 0 ] . y		1259252	1		-			
ANR	1259345	MemberAccess	q [ 2 ] . y		1259252	0					
ANR	1259346	ArrayIndexing	q [ 2 ]		1259252	0					
ANR	1259347	Identifier	q		1259252	0					
ANR	1259348	PrimaryExpression	2		1259252	1					
ANR	1259349	Identifier	y		1259252	1					
ANR	1259350	MemberAccess	q [ 0 ] . y		1259252	1					
ANR	1259351	ArrayIndexing	q [ 0 ]		1259252	0					
ANR	1259352	Identifier	q		1259252	0					
ANR	1259353	PrimaryExpression	0		1259252	1					
ANR	1259354	Identifier	y		1259252	1					
ANR	1259355	IfStatement	if ( ( int64_t ) dx1 * dy2 != ( int64_t ) dy1 * dx2 )		1259252	6					
ANR	1259356	Condition	( int64_t ) dx1 * dy2 != ( int64_t ) dy1 * dx2	1655:8:62116:62155	1259252	0	True				
ANR	1259357	EqualityExpression	( int64_t ) dx1 * dy2 != ( int64_t ) dy1 * dx2		1259252	0		!=			
ANR	1259358	MultiplicativeExpression	( int64_t ) dx1 * dy2		1259252	0		*			
ANR	1259359	CastExpression	( int64_t ) dx1		1259252	0					
ANR	1259360	CastTarget	int64_t		1259252	0					
ANR	1259361	Identifier	dx1		1259252	1					
ANR	1259362	Identifier	dy2		1259252	1					
ANR	1259363	MultiplicativeExpression	( int64_t ) dy1 * dx2		1259252	1		*			
ANR	1259364	CastExpression	( int64_t ) dy1		1259252	0					
ANR	1259365	CastTarget	int64_t		1259252	0					
ANR	1259366	Identifier	dy1		1259252	1					
ANR	1259367	Identifier	dx2		1259252	1					
ANR	1259368	CompoundStatement		12:50:405:405	1259252	1					
ANR	1259369	ExpressionStatement	orient = ( ( int64_t ) dx1 * dy2 > ( int64_t ) dy1 * dx2 )	1656:8:62168:62218	1259252	0	True				
ANR	1259370	AssignmentExpression	orient = ( ( int64_t ) dx1 * dy2 > ( int64_t ) dy1 * dx2 )		1259252	0		=			
ANR	1259371	Identifier	orient		1259252	0					
ANR	1259372	RelationalExpression	( int64_t ) dx1 * dy2 > ( int64_t ) dy1 * dx2		1259252	1		>			
ANR	1259373	MultiplicativeExpression	( int64_t ) dx1 * dy2		1259252	0		*			
ANR	1259374	CastExpression	( int64_t ) dx1		1259252	0					
ANR	1259375	CastTarget	int64_t		1259252	0					
ANR	1259376	Identifier	dx1		1259252	1					
ANR	1259377	Identifier	dy2		1259252	1					
ANR	1259378	MultiplicativeExpression	( int64_t ) dy1 * dx2		1259252	1		*			
ANR	1259379	CastExpression	( int64_t ) dy1		1259252	0					
ANR	1259380	CastTarget	int64_t		1259252	0					
ANR	1259381	Identifier	dy1		1259252	1					
ANR	1259382	Identifier	dx2		1259252	1					
ANR	1259383	ReturnStatement	"return linear_color_trapezoid ( pfs , q , 0 , 1 , 2 , 3 , ybot , ytop , swap_axes , c0 , c1 , orient ) ;"	1657:8:62228:62316	1259252	1	True				
ANR	1259384	CallExpression	"linear_color_trapezoid ( pfs , q , 0 , 1 , 2 , 3 , ybot , ytop , swap_axes , c0 , c1 , orient )"		1259252	0					
ANR	1259385	Callee	linear_color_trapezoid		1259252	0					
ANR	1259386	Identifier	linear_color_trapezoid		1259252	0					
ANR	1259387	ArgumentList	pfs		1259252	1					
ANR	1259388	Argument	pfs		1259252	0					
ANR	1259389	Identifier	pfs		1259252	0					
ANR	1259390	Argument	q		1259252	1					
ANR	1259391	Identifier	q		1259252	0					
ANR	1259392	Argument	0		1259252	2					
ANR	1259393	PrimaryExpression	0		1259252	0					
ANR	1259394	Argument	1		1259252	3					
ANR	1259395	PrimaryExpression	1		1259252	0					
ANR	1259396	Argument	2		1259252	4					
ANR	1259397	PrimaryExpression	2		1259252	0					
ANR	1259398	Argument	3		1259252	5					
ANR	1259399	PrimaryExpression	3		1259252	0					
ANR	1259400	Argument	ybot		1259252	6					
ANR	1259401	Identifier	ybot		1259252	0					
ANR	1259402	Argument	ytop		1259252	7					
ANR	1259403	Identifier	ytop		1259252	0					
ANR	1259404	Argument	swap_axes		1259252	8					
ANR	1259405	Identifier	swap_axes		1259252	0					
ANR	1259406	Argument	c0		1259252	9					
ANR	1259407	Identifier	c0		1259252	0					
ANR	1259408	Argument	c1		1259252	10					
ANR	1259409	Identifier	c1		1259252	0					
ANR	1259410	Argument	orient		1259252	11					
ANR	1259411	Identifier	orient		1259252	0					
ANR	1259412	ElseStatement	else		1259252	0					
ANR	1259413	CompoundStatement		16:8:586:636	1259252	0					
ANR	1259414	IdentifierDeclStatement	"fixed dx3 = q [ 3 ] . x - q [ 0 ] . x , dy3 = q [ 3 ] . y - q [ 0 ] . y ;"	1659:8:62339:62389	1259252	0	True				
ANR	1259415	IdentifierDecl	dx3 = q [ 3 ] . x - q [ 0 ] . x		1259252	0					
ANR	1259416	IdentifierDeclType	fixed		1259252	0					
ANR	1259417	Identifier	dx3		1259252	1					
ANR	1259418	AssignmentExpression	dx3 = q [ 3 ] . x - q [ 0 ] . x		1259252	2		=			
ANR	1259419	Identifier	dx3		1259252	0					
ANR	1259420	AdditiveExpression	q [ 3 ] . x - q [ 0 ] . x		1259252	1		-			
ANR	1259421	MemberAccess	q [ 3 ] . x		1259252	0					
ANR	1259422	ArrayIndexing	q [ 3 ]		1259252	0					
ANR	1259423	Identifier	q		1259252	0					
ANR	1259424	PrimaryExpression	3		1259252	1					
ANR	1259425	Identifier	x		1259252	1					
ANR	1259426	MemberAccess	q [ 0 ] . x		1259252	1					
ANR	1259427	ArrayIndexing	q [ 0 ]		1259252	0					
ANR	1259428	Identifier	q		1259252	0					
ANR	1259429	PrimaryExpression	0		1259252	1					
ANR	1259430	Identifier	x		1259252	1					
ANR	1259431	IdentifierDecl	dy3 = q [ 3 ] . y - q [ 0 ] . y		1259252	1					
ANR	1259432	IdentifierDeclType	fixed		1259252	0					
ANR	1259433	Identifier	dy3		1259252	1					
ANR	1259434	AssignmentExpression	dy3 = q [ 3 ] . y - q [ 0 ] . y		1259252	2		=			
ANR	1259435	Identifier	dy3		1259252	0					
ANR	1259436	AdditiveExpression	q [ 3 ] . y - q [ 0 ] . y		1259252	1		-			
ANR	1259437	MemberAccess	q [ 3 ] . y		1259252	0					
ANR	1259438	ArrayIndexing	q [ 3 ]		1259252	0					
ANR	1259439	Identifier	q		1259252	0					
ANR	1259440	PrimaryExpression	3		1259252	1					
ANR	1259441	Identifier	y		1259252	1					
ANR	1259442	MemberAccess	q [ 0 ] . y		1259252	1					
ANR	1259443	ArrayIndexing	q [ 0 ]		1259252	0					
ANR	1259444	Identifier	q		1259252	0					
ANR	1259445	PrimaryExpression	0		1259252	1					
ANR	1259446	Identifier	y		1259252	1					
ANR	1259447	ExpressionStatement	orient = ( ( int64_t ) dx1 * dy3 > ( int64_t ) dy1 * dx3 )	1661:8:62400:62450	1259252	1	True				
ANR	1259448	AssignmentExpression	orient = ( ( int64_t ) dx1 * dy3 > ( int64_t ) dy1 * dx3 )		1259252	0		=			
ANR	1259449	Identifier	orient		1259252	0					
ANR	1259450	RelationalExpression	( int64_t ) dx1 * dy3 > ( int64_t ) dy1 * dx3		1259252	1		>			
ANR	1259451	MultiplicativeExpression	( int64_t ) dx1 * dy3		1259252	0		*			
ANR	1259452	CastExpression	( int64_t ) dx1		1259252	0					
ANR	1259453	CastTarget	int64_t		1259252	0					
ANR	1259454	Identifier	dx1		1259252	1					
ANR	1259455	Identifier	dy3		1259252	1					
ANR	1259456	MultiplicativeExpression	( int64_t ) dy1 * dx3		1259252	1		*			
ANR	1259457	CastExpression	( int64_t ) dy1		1259252	0					
ANR	1259458	CastTarget	int64_t		1259252	0					
ANR	1259459	Identifier	dy1		1259252	1					
ANR	1259460	Identifier	dx3		1259252	1					
ANR	1259461	ReturnStatement	"return linear_color_trapezoid ( pfs , q , 0 , 1 , 2 , 3 , ybot , ytop , swap_axes , c0 , c1 , orient ) ;"	1662:8:62460:62548	1259252	2	True				
ANR	1259462	CallExpression	"linear_color_trapezoid ( pfs , q , 0 , 1 , 2 , 3 , ybot , ytop , swap_axes , c0 , c1 , orient )"		1259252	0					
ANR	1259463	Callee	linear_color_trapezoid		1259252	0					
ANR	1259464	Identifier	linear_color_trapezoid		1259252	0					
ANR	1259465	ArgumentList	pfs		1259252	1					
ANR	1259466	Argument	pfs		1259252	0					
ANR	1259467	Identifier	pfs		1259252	0					
ANR	1259468	Argument	q		1259252	1					
ANR	1259469	Identifier	q		1259252	0					
ANR	1259470	Argument	0		1259252	2					
ANR	1259471	PrimaryExpression	0		1259252	0					
ANR	1259472	Argument	1		1259252	3					
ANR	1259473	PrimaryExpression	1		1259252	0					
ANR	1259474	Argument	2		1259252	4					
ANR	1259475	PrimaryExpression	2		1259252	0					
ANR	1259476	Argument	3		1259252	5					
ANR	1259477	PrimaryExpression	3		1259252	0					
ANR	1259478	Argument	ybot		1259252	6					
ANR	1259479	Identifier	ybot		1259252	0					
ANR	1259480	Argument	ytop		1259252	7					
ANR	1259481	Identifier	ytop		1259252	0					
ANR	1259482	Argument	swap_axes		1259252	8					
ANR	1259483	Identifier	swap_axes		1259252	0					
ANR	1259484	Argument	c0		1259252	9					
ANR	1259485	Identifier	c0		1259252	0					
ANR	1259486	Argument	c1		1259252	10					
ANR	1259487	Identifier	c1		1259252	0					
ANR	1259488	Argument	orient		1259252	11					
ANR	1259489	Identifier	orient		1259252	0					
ANR	1259490	ReturnType	static int		1259252	1					
ANR	1259491	Identifier	wedge_trap_decompose		1259252	2					
ANR	1259492	ParameterList	"patch_fill_state_t * pfs , gs_fixed_point q [ 4 ] , fixed ybot , fixed ytop , const patch_color_t * c0 , const patch_color_t * c1 , bool swap_axes , bool self_intersecting"		1259252	3					
ANR	1259493	Parameter	patch_fill_state_t * pfs	1641:21:61576:61598	1259252	0	True				
ANR	1259494	ParameterType	patch_fill_state_t *		1259252	0					
ANR	1259495	Identifier	pfs		1259252	1					
ANR	1259496	Parameter	gs_fixed_point q [ 4 ]	1641:46:61601:61619	1259252	1	True				
ANR	1259497	ParameterType	gs_fixed_point [ 4 ]		1259252	0					
ANR	1259498	Identifier	q		1259252	1					
ANR	1259499	Parameter	fixed ybot	1642:8:61630:61639	1259252	2	True				
ANR	1259500	ParameterType	fixed		1259252	0					
ANR	1259501	Identifier	ybot		1259252	1					
ANR	1259502	Parameter	fixed ytop	1642:20:61642:61651	1259252	3	True				
ANR	1259503	ParameterType	fixed		1259252	0					
ANR	1259504	Identifier	ytop		1259252	1					
ANR	1259505	Parameter	const patch_color_t * c0	1642:32:61654:61676	1259252	4	True				
ANR	1259506	ParameterType	const patch_color_t *		1259252	0					
ANR	1259507	Identifier	c0		1259252	1					
ANR	1259508	Parameter	const patch_color_t * c1	1642:57:61679:61701	1259252	5	True				
ANR	1259509	ParameterType	const patch_color_t *		1259252	0					
ANR	1259510	Identifier	c1		1259252	1					
ANR	1259511	Parameter	bool swap_axes	1643:8:61712:61725	1259252	6	True				
ANR	1259512	ParameterType	bool		1259252	0					
ANR	1259513	Identifier	swap_axes		1259252	1					
ANR	1259514	Parameter	bool self_intersecting	1643:24:61728:61749	1259252	7	True				
ANR	1259515	ParameterType	bool		1259252	0					
ANR	1259516	Identifier	self_intersecting		1259252	1					
ANR	1259517	CFGEntryNode	ENTRY		1259252		True				
ANR	1259518	CFGExitNode	EXIT		1259252		True				
ANR	1259519	Symbol	ytop		1259252						
ANR	1259520	Symbol	q [ 0 ] . x		1259252						
ANR	1259521	Symbol	pfs -> vectorization		1259252						
ANR	1259522	Symbol	q [ 1 ] . x		1259252						
ANR	1259523	Symbol	q [ 1 ] . y		1259252						
ANR	1259524	Symbol	ybot		1259252						
ANR	1259525	Symbol	dx1		1259252						
ANR	1259526	Symbol	covers_pixel_centers		1259252						
ANR	1259527	Symbol	dx3		1259252						
ANR	1259528	Symbol	dx2		1259252						
ANR	1259529	Symbol	q [ 3 ] . x		1259252						
ANR	1259530	Symbol	q [ 3 ] . y		1259252						
ANR	1259531	Symbol	orient		1259252						
ANR	1259532	Symbol	* pfs		1259252						
ANR	1259533	Symbol	c0		1259252						
ANR	1259534	Symbol	c1		1259252						
ANR	1259535	Symbol	q [ 0 ] . y		1259252						
ANR	1259536	Symbol	q		1259252						
ANR	1259537	Symbol	q [ 2 ] . y		1259252						
ANR	1259538	Symbol	* q		1259252						
ANR	1259539	Symbol	q [ 2 ] . x		1259252						
ANR	1259540	Symbol	pfs		1259252						
ANR	1259541	Symbol	swap_axes		1259252						
ANR	1259542	Symbol	dy2		1259252						
ANR	1259543	Symbol	dy1		1259252						
ANR	1259544	Symbol	self_intersecting		1259252						
ANR	1259545	Symbol	linear_color_trapezoid		1259252						
ANR	1259546	Symbol	dy3		1259252						
ANR	1259547	Function	fill_wedge_trap	1666:0:62559:63363							
ANR	1259548	FunctionDef	"fill_wedge_trap (patch_fill_state_t * pfs , const gs_fixed_point * p0 , const gs_fixed_point * p1 , const gs_fixed_point * q0 , const gs_fixed_point * q1 , const patch_color_t * c0 , const patch_color_t * c1 , bool swap_axes , bool self_intersecting)"		1259547	0					
ANR	1259549	CompoundStatement		1670:0:62836:63363	1259547	0					
ANR	1259550	IdentifierDeclStatement	gs_fixed_point p [ 4 ] ;	1673:4:62980:62999	1259547	0	True				
ANR	1259551	IdentifierDecl	p [ 4 ]		1259547	0					
ANR	1259552	IdentifierDeclType	gs_fixed_point [ 4 ]		1259547	0					
ANR	1259553	Identifier	p		1259547	1					
ANR	1259554	PrimaryExpression	4		1259547	2					
ANR	1259555	IdentifierDeclStatement	"const patch_color_t * cc0 , * cc1 ;"	1674:4:63005:63035	1259547	1	True				
ANR	1259556	IdentifierDecl	* cc0		1259547	0					
ANR	1259557	IdentifierDeclType	const patch_color_t *		1259547	0					
ANR	1259558	Identifier	cc0		1259547	1					
ANR	1259559	IdentifierDecl	* cc1		1259547	1					
ANR	1259560	IdentifierDeclType	const patch_color_t *		1259547	0					
ANR	1259561	Identifier	cc1		1259547	1					
ANR	1259562	IfStatement	if ( p0 -> y < p1 -> y )		1259547	2					
ANR	1259563	Condition	p0 -> y < p1 -> y	1676:8:63046:63058	1259547	0	True				
ANR	1259564	RelationalExpression	p0 -> y < p1 -> y		1259547	0		<			
ANR	1259565	PtrMemberAccess	p0 -> y		1259547	0					
ANR	1259566	Identifier	p0		1259547	0					
ANR	1259567	Identifier	y		1259547	1					
ANR	1259568	PtrMemberAccess	p1 -> y		1259547	1					
ANR	1259569	Identifier	p1		1259547	0					
ANR	1259570	Identifier	y		1259547	1					
ANR	1259571	CompoundStatement		7:23:224:224	1259547	1					
ANR	1259572	ExpressionStatement	p [ 2 ] = * p0	1677:8:63071:63081	1259547	0	True				
ANR	1259573	AssignmentExpression	p [ 2 ] = * p0		1259547	0		=			
ANR	1259574	ArrayIndexing	p [ 2 ]		1259547	0					
ANR	1259575	Identifier	p		1259547	0					
ANR	1259576	PrimaryExpression	2		1259547	1					
ANR	1259577	UnaryOperationExpression	* p0		1259547	1					
ANR	1259578	UnaryOperator	*		1259547	0					
ANR	1259579	Identifier	p0		1259547	1					
ANR	1259580	ExpressionStatement	p [ 3 ] = * p1	1678:8:63091:63101	1259547	1	True				
ANR	1259581	AssignmentExpression	p [ 3 ] = * p1		1259547	0		=			
ANR	1259582	ArrayIndexing	p [ 3 ]		1259547	0					
ANR	1259583	Identifier	p		1259547	0					
ANR	1259584	PrimaryExpression	3		1259547	1					
ANR	1259585	UnaryOperationExpression	* p1		1259547	1					
ANR	1259586	UnaryOperator	*		1259547	0					
ANR	1259587	Identifier	p1		1259547	1					
ANR	1259588	ExpressionStatement	cc0 = c0	1679:8:63111:63119	1259547	2	True				
ANR	1259589	AssignmentExpression	cc0 = c0		1259547	0		=			
ANR	1259590	Identifier	cc0		1259547	0					
ANR	1259591	Identifier	c0		1259547	1					
ANR	1259592	ExpressionStatement	cc1 = c1	1680:8:63129:63137	1259547	3	True				
ANR	1259593	AssignmentExpression	cc1 = c1		1259547	0		=			
ANR	1259594	Identifier	cc1		1259547	0					
ANR	1259595	Identifier	c1		1259547	1					
ANR	1259596	ElseStatement	else		1259547	0					
ANR	1259597	CompoundStatement		12:11:313:313	1259547	0					
ANR	1259598	ExpressionStatement	p [ 2 ] = * p1	1682:8:63160:63170	1259547	0	True				
ANR	1259599	AssignmentExpression	p [ 2 ] = * p1		1259547	0		=			
ANR	1259600	ArrayIndexing	p [ 2 ]		1259547	0					
ANR	1259601	Identifier	p		1259547	0					
ANR	1259602	PrimaryExpression	2		1259547	1					
ANR	1259603	UnaryOperationExpression	* p1		1259547	1					
ANR	1259604	UnaryOperator	*		1259547	0					
ANR	1259605	Identifier	p1		1259547	1					
ANR	1259606	ExpressionStatement	p [ 3 ] = * p0	1683:8:63180:63190	1259547	1	True				
ANR	1259607	AssignmentExpression	p [ 3 ] = * p0		1259547	0		=			
ANR	1259608	ArrayIndexing	p [ 3 ]		1259547	0					
ANR	1259609	Identifier	p		1259547	0					
ANR	1259610	PrimaryExpression	3		1259547	1					
ANR	1259611	UnaryOperationExpression	* p0		1259547	1					
ANR	1259612	UnaryOperator	*		1259547	0					
ANR	1259613	Identifier	p0		1259547	1					
ANR	1259614	ExpressionStatement	cc0 = c1	1684:8:63200:63208	1259547	2	True				
ANR	1259615	AssignmentExpression	cc0 = c1		1259547	0		=			
ANR	1259616	Identifier	cc0		1259547	0					
ANR	1259617	Identifier	c1		1259547	1					
ANR	1259618	ExpressionStatement	cc1 = c0	1685:8:63218:63226	1259547	3	True				
ANR	1259619	AssignmentExpression	cc1 = c0		1259547	0		=			
ANR	1259620	Identifier	cc1		1259547	0					
ANR	1259621	Identifier	c0		1259547	1					
ANR	1259622	ExpressionStatement	p [ 0 ] = * q0	1687:4:63238:63248	1259547	3	True				
ANR	1259623	AssignmentExpression	p [ 0 ] = * q0		1259547	0		=			
ANR	1259624	ArrayIndexing	p [ 0 ]		1259547	0					
ANR	1259625	Identifier	p		1259547	0					
ANR	1259626	PrimaryExpression	0		1259547	1					
ANR	1259627	UnaryOperationExpression	* q0		1259547	1					
ANR	1259628	UnaryOperator	*		1259547	0					
ANR	1259629	Identifier	q0		1259547	1					
ANR	1259630	ExpressionStatement	p [ 1 ] = * q1	1688:4:63254:63264	1259547	4	True				
ANR	1259631	AssignmentExpression	p [ 1 ] = * q1		1259547	0		=			
ANR	1259632	ArrayIndexing	p [ 1 ]		1259547	0					
ANR	1259633	Identifier	p		1259547	0					
ANR	1259634	PrimaryExpression	1		1259547	1					
ANR	1259635	UnaryOperationExpression	* q1		1259547	1					
ANR	1259636	UnaryOperator	*		1259547	0					
ANR	1259637	Identifier	q1		1259547	1					
ANR	1259638	ReturnStatement	"return wedge_trap_decompose ( pfs , p , p [ 2 ] . y , p [ 3 ] . y , cc0 , cc1 , swap_axes , self_intersecting ) ;"	1689:4:63270:63361	1259547	5	True				
ANR	1259639	CallExpression	"wedge_trap_decompose ( pfs , p , p [ 2 ] . y , p [ 3 ] . y , cc0 , cc1 , swap_axes , self_intersecting )"		1259547	0					
ANR	1259640	Callee	wedge_trap_decompose		1259547	0					
ANR	1259641	Identifier	wedge_trap_decompose		1259547	0					
ANR	1259642	ArgumentList	pfs		1259547	1					
ANR	1259643	Argument	pfs		1259547	0					
ANR	1259644	Identifier	pfs		1259547	0					
ANR	1259645	Argument	p		1259547	1					
ANR	1259646	Identifier	p		1259547	0					
ANR	1259647	Argument	p [ 2 ] . y		1259547	2					
ANR	1259648	MemberAccess	p [ 2 ] . y		1259547	0					
ANR	1259649	ArrayIndexing	p [ 2 ]		1259547	0					
ANR	1259650	Identifier	p		1259547	0					
ANR	1259651	PrimaryExpression	2		1259547	1					
ANR	1259652	Identifier	y		1259547	1					
ANR	1259653	Argument	p [ 3 ] . y		1259547	3					
ANR	1259654	MemberAccess	p [ 3 ] . y		1259547	0					
ANR	1259655	ArrayIndexing	p [ 3 ]		1259547	0					
ANR	1259656	Identifier	p		1259547	0					
ANR	1259657	PrimaryExpression	3		1259547	1					
ANR	1259658	Identifier	y		1259547	1					
ANR	1259659	Argument	cc0		1259547	4					
ANR	1259660	Identifier	cc0		1259547	0					
ANR	1259661	Argument	cc1		1259547	5					
ANR	1259662	Identifier	cc1		1259547	0					
ANR	1259663	Argument	swap_axes		1259547	6					
ANR	1259664	Identifier	swap_axes		1259547	0					
ANR	1259665	Argument	self_intersecting		1259547	7					
ANR	1259666	Identifier	self_intersecting		1259547	0					
ANR	1259667	ReturnType	static inline int		1259547	1					
ANR	1259668	Identifier	fill_wedge_trap		1259547	2					
ANR	1259669	ParameterList	"patch_fill_state_t * pfs , const gs_fixed_point * p0 , const gs_fixed_point * p1 , const gs_fixed_point * q0 , const gs_fixed_point * q1 , const patch_color_t * c0 , const patch_color_t * c1 , bool swap_axes , bool self_intersecting"		1259547	3					
ANR	1259670	Parameter	patch_fill_state_t * pfs	1667:16:62593:62615	1259547	0	True				
ANR	1259671	ParameterType	patch_fill_state_t *		1259547	0					
ANR	1259672	Identifier	pfs		1259547	1					
ANR	1259673	Parameter	const gs_fixed_point * p0	1667:41:62618:62641	1259547	1	True				
ANR	1259674	ParameterType	const gs_fixed_point *		1259547	0					
ANR	1259675	Identifier	p0		1259547	1					
ANR	1259676	Parameter	const gs_fixed_point * p1	1667:67:62644:62667	1259547	2	True				
ANR	1259677	ParameterType	const gs_fixed_point *		1259547	0					
ANR	1259678	Identifier	p1		1259547	1					
ANR	1259679	Parameter	const gs_fixed_point * q0	1668:12:62682:62705	1259547	3	True				
ANR	1259680	ParameterType	const gs_fixed_point *		1259547	0					
ANR	1259681	Identifier	q0		1259547	1					
ANR	1259682	Parameter	const gs_fixed_point * q1	1668:38:62708:62731	1259547	4	True				
ANR	1259683	ParameterType	const gs_fixed_point *		1259547	0					
ANR	1259684	Identifier	q1		1259547	1					
ANR	1259685	Parameter	const patch_color_t * c0	1668:64:62734:62756	1259547	5	True				
ANR	1259686	ParameterType	const patch_color_t *		1259547	0					
ANR	1259687	Identifier	c0		1259547	1					
ANR	1259688	Parameter	const patch_color_t * c1	1668:89:62759:62781	1259547	6	True				
ANR	1259689	ParameterType	const patch_color_t *		1259547	0					
ANR	1259690	Identifier	c1		1259547	1					
ANR	1259691	Parameter	bool swap_axes	1669:12:62796:62809	1259547	7	True				
ANR	1259692	ParameterType	bool		1259547	0					
ANR	1259693	Identifier	swap_axes		1259547	1					
ANR	1259694	Parameter	bool self_intersecting	1669:28:62812:62833	1259547	8	True				
ANR	1259695	ParameterType	bool		1259547	0					
ANR	1259696	Identifier	self_intersecting		1259547	1					
ANR	1259697	CFGEntryNode	ENTRY		1259547		True				
ANR	1259698	CFGExitNode	EXIT		1259547		True				
ANR	1259699	Symbol	p0		1259547						
ANR	1259700	Symbol	q1		1259547						
ANR	1259701	Symbol	p1		1259547						
ANR	1259702	Symbol	* p1		1259547						
ANR	1259703	Symbol	* p0		1259547						
ANR	1259704	Symbol	* q1		1259547						
ANR	1259705	Symbol	p1 -> y		1259547						
ANR	1259706	Symbol	* q0		1259547						
ANR	1259707	Symbol	c0		1259547						
ANR	1259708	Symbol	c1		1259547						
ANR	1259709	Symbol	p		1259547						
ANR	1259710	Symbol	cc1		1259547						
ANR	1259711	Symbol	p0 -> y		1259547						
ANR	1259712	Symbol	cc0		1259547						
ANR	1259713	Symbol	p [ 2 ] . y		1259547						
ANR	1259714	Symbol	* p		1259547						
ANR	1259715	Symbol	wedge_trap_decompose		1259547						
ANR	1259716	Symbol	pfs		1259547						
ANR	1259717	Symbol	swap_axes		1259547						
ANR	1259718	Symbol	self_intersecting		1259547						
ANR	1259719	Symbol	p [ 3 ] . y		1259547						
ANR	1259720	Symbol	q0		1259547						
ANR	1259721	Function	split_curve_s	1692:0:63366:65063							
ANR	1259722	FunctionDef	"split_curve_s (const gs_fixed_point * pole , gs_fixed_point * q0 , gs_fixed_point * q1 , int pole_step)"		1259721	0					
ANR	1259723	CompoundStatement		1694:0:63475:65063	1259721	0					
ANR	1259724	Statement	define	1703:1:63792:63797	1259721	0	True				
ANR	1259725	Statement	midpoint	1703:8:63799:63806	1259721	1	True				
ANR	1259726	Statement	(	1703:16:63807:63807	1259721	2	True				
ANR	1259727	Statement	a	1703:17:63808:63808	1259721	3	True				
ANR	1259728	Statement	","	1703:18:63809:63809	1259721	4	True				
ANR	1259729	Statement	b	1703:19:63810:63810	1259721	5	True				
ANR	1259730	Statement	)	1703:20:63811:63811	1259721	6	True				
ANR	1259731	Statement	(	1704:2:63816:63816	1259721	7	True				
ANR	1259732	Statement	arith_rshift_1	1704:3:63817:63830	1259721	8	True				
ANR	1259733	Statement	(	1704:17:63831:63831	1259721	9	True				
ANR	1259734	Statement	a	1704:18:63832:63832	1259721	10	True				
ANR	1259735	Statement	)	1704:19:63833:63833	1259721	11	True				
ANR	1259736	Statement	+	1704:21:63835:63835	1259721	12	True				
ANR	1259737	Statement	arith_rshift_1	1704:23:63837:63850	1259721	13	True				
ANR	1259738	Statement	(	1704:37:63851:63851	1259721	14	True				
ANR	1259739	Statement	b	1704:38:63852:63852	1259721	15	True				
ANR	1259740	Statement	)	1704:39:63853:63853	1259721	16	True				
ANR	1259741	Statement	+	1704:41:63855:63855	1259721	17	True				
ANR	1259742	Statement	(	1704:43:63857:63857	1259721	18	True				
ANR	1259743	Statement	(	1704:44:63858:63858	1259721	19	True				
ANR	1259744	Statement	(	1704:45:63859:63859	1259721	20	True				
ANR	1259745	Statement	a	1704:46:63860:63860	1259721	21	True				
ANR	1259746	Statement	)	1704:47:63861:63861	1259721	22	True				
ANR	1259747	Statement	|	1704:49:63863:63863	1259721	23	True				
ANR	1259748	Statement	(	1704:51:63865:63865	1259721	24	True				
ANR	1259749	Statement	b	1704:52:63866:63866	1259721	25	True				
ANR	1259750	Statement	)	1704:53:63867:63867	1259721	26	True				
ANR	1259751	Statement	)	1704:54:63868:63868	1259721	27	True				
ANR	1259752	Statement	&	1704:56:63870:63870	1259721	28	True				
ANR	1259753	Statement	1	1704:58:63872:63872	1259721	29	True				
ANR	1259754	Statement	)	1704:59:63873:63873	1259721	30	True				
ANR	1259755	Statement	)	1704:60:63874:63874	1259721	31	True				
ANR	1259756	IdentifierDeclStatement	"fixed x12 = midpoint ( pole [ 1 * pole_step ] . x , pole [ 2 * pole_step ] . x ) ;"	1705:4:63880:63946	1259721	32	True				
ANR	1259757	IdentifierDecl	"x12 = midpoint ( pole [ 1 * pole_step ] . x , pole [ 2 * pole_step ] . x )"		1259721	0					
ANR	1259758	IdentifierDeclType	fixed		1259721	0					
ANR	1259759	Identifier	x12		1259721	1					
ANR	1259760	AssignmentExpression	"x12 = midpoint ( pole [ 1 * pole_step ] . x , pole [ 2 * pole_step ] . x )"		1259721	2		=			
ANR	1259761	Identifier	x12		1259721	0					
ANR	1259762	CallExpression	"midpoint ( pole [ 1 * pole_step ] . x , pole [ 2 * pole_step ] . x )"		1259721	1					
ANR	1259763	Callee	midpoint		1259721	0					
ANR	1259764	Identifier	midpoint		1259721	0					
ANR	1259765	ArgumentList	pole [ 1 * pole_step ] . x		1259721	1					
ANR	1259766	Argument	pole [ 1 * pole_step ] . x		1259721	0					
ANR	1259767	MemberAccess	pole [ 1 * pole_step ] . x		1259721	0					
ANR	1259768	ArrayIndexing	pole [ 1 * pole_step ]		1259721	0					
ANR	1259769	Identifier	pole		1259721	0					
ANR	1259770	MultiplicativeExpression	1 * pole_step		1259721	1		*			
ANR	1259771	PrimaryExpression	1		1259721	0					
ANR	1259772	Identifier	pole_step		1259721	1					
ANR	1259773	Identifier	x		1259721	1					
ANR	1259774	Argument	pole [ 2 * pole_step ] . x		1259721	1					
ANR	1259775	MemberAccess	pole [ 2 * pole_step ] . x		1259721	0					
ANR	1259776	ArrayIndexing	pole [ 2 * pole_step ]		1259721	0					
ANR	1259777	Identifier	pole		1259721	0					
ANR	1259778	MultiplicativeExpression	2 * pole_step		1259721	1		*			
ANR	1259779	PrimaryExpression	2		1259721	0					
ANR	1259780	Identifier	pole_step		1259721	1					
ANR	1259781	Identifier	x		1259721	1					
ANR	1259782	IdentifierDeclStatement	"fixed y12 = midpoint ( pole [ 1 * pole_step ] . y , pole [ 2 * pole_step ] . y ) ;"	1706:4:63952:64018	1259721	33	True				
ANR	1259783	IdentifierDecl	"y12 = midpoint ( pole [ 1 * pole_step ] . y , pole [ 2 * pole_step ] . y )"		1259721	0					
ANR	1259784	IdentifierDeclType	fixed		1259721	0					
ANR	1259785	Identifier	y12		1259721	1					
ANR	1259786	AssignmentExpression	"y12 = midpoint ( pole [ 1 * pole_step ] . y , pole [ 2 * pole_step ] . y )"		1259721	2		=			
ANR	1259787	Identifier	y12		1259721	0					
ANR	1259788	CallExpression	"midpoint ( pole [ 1 * pole_step ] . y , pole [ 2 * pole_step ] . y )"		1259721	1					
ANR	1259789	Callee	midpoint		1259721	0					
ANR	1259790	Identifier	midpoint		1259721	0					
ANR	1259791	ArgumentList	pole [ 1 * pole_step ] . y		1259721	1					
ANR	1259792	Argument	pole [ 1 * pole_step ] . y		1259721	0					
ANR	1259793	MemberAccess	pole [ 1 * pole_step ] . y		1259721	0					
ANR	1259794	ArrayIndexing	pole [ 1 * pole_step ]		1259721	0					
ANR	1259795	Identifier	pole		1259721	0					
ANR	1259796	MultiplicativeExpression	1 * pole_step		1259721	1		*			
ANR	1259797	PrimaryExpression	1		1259721	0					
ANR	1259798	Identifier	pole_step		1259721	1					
ANR	1259799	Identifier	y		1259721	1					
ANR	1259800	Argument	pole [ 2 * pole_step ] . y		1259721	1					
ANR	1259801	MemberAccess	pole [ 2 * pole_step ] . y		1259721	0					
ANR	1259802	ArrayIndexing	pole [ 2 * pole_step ]		1259721	0					
ANR	1259803	Identifier	pole		1259721	0					
ANR	1259804	MultiplicativeExpression	2 * pole_step		1259721	1		*			
ANR	1259805	PrimaryExpression	2		1259721	0					
ANR	1259806	Identifier	pole_step		1259721	1					
ANR	1259807	Identifier	y		1259721	1					
ANR	1259808	ExpressionStatement	"q0 [ 1 * pole_step ] . x = midpoint ( pole [ 0 * pole_step ] . x , pole [ 1 * pole_step ] . x )"	1709:4:64079:64155	1259721	34	True				
ANR	1259809	AssignmentExpression	"q0 [ 1 * pole_step ] . x = midpoint ( pole [ 0 * pole_step ] . x , pole [ 1 * pole_step ] . x )"		1259721	0		=			
ANR	1259810	MemberAccess	q0 [ 1 * pole_step ] . x		1259721	0					
ANR	1259811	ArrayIndexing	q0 [ 1 * pole_step ]		1259721	0					
ANR	1259812	Identifier	q0		1259721	0					
ANR	1259813	MultiplicativeExpression	1 * pole_step		1259721	1		*			
ANR	1259814	PrimaryExpression	1		1259721	0					
ANR	1259815	Identifier	pole_step		1259721	1					
ANR	1259816	Identifier	x		1259721	1					
ANR	1259817	CallExpression	"midpoint ( pole [ 0 * pole_step ] . x , pole [ 1 * pole_step ] . x )"		1259721	1					
ANR	1259818	Callee	midpoint		1259721	0					
ANR	1259819	Identifier	midpoint		1259721	0					
ANR	1259820	ArgumentList	pole [ 0 * pole_step ] . x		1259721	1					
ANR	1259821	Argument	pole [ 0 * pole_step ] . x		1259721	0					
ANR	1259822	MemberAccess	pole [ 0 * pole_step ] . x		1259721	0					
ANR	1259823	ArrayIndexing	pole [ 0 * pole_step ]		1259721	0					
ANR	1259824	Identifier	pole		1259721	0					
ANR	1259825	MultiplicativeExpression	0 * pole_step		1259721	1		*			
ANR	1259826	PrimaryExpression	0		1259721	0					
ANR	1259827	Identifier	pole_step		1259721	1					
ANR	1259828	Identifier	x		1259721	1					
ANR	1259829	Argument	pole [ 1 * pole_step ] . x		1259721	1					
ANR	1259830	MemberAccess	pole [ 1 * pole_step ] . x		1259721	0					
ANR	1259831	ArrayIndexing	pole [ 1 * pole_step ]		1259721	0					
ANR	1259832	Identifier	pole		1259721	0					
ANR	1259833	MultiplicativeExpression	1 * pole_step		1259721	1		*			
ANR	1259834	PrimaryExpression	1		1259721	0					
ANR	1259835	Identifier	pole_step		1259721	1					
ANR	1259836	Identifier	x		1259721	1					
ANR	1259837	ExpressionStatement	"q0 [ 1 * pole_step ] . y = midpoint ( pole [ 0 * pole_step ] . y , pole [ 1 * pole_step ] . y )"	1710:4:64161:64237	1259721	35	True				
ANR	1259838	AssignmentExpression	"q0 [ 1 * pole_step ] . y = midpoint ( pole [ 0 * pole_step ] . y , pole [ 1 * pole_step ] . y )"		1259721	0		=			
ANR	1259839	MemberAccess	q0 [ 1 * pole_step ] . y		1259721	0					
ANR	1259840	ArrayIndexing	q0 [ 1 * pole_step ]		1259721	0					
ANR	1259841	Identifier	q0		1259721	0					
ANR	1259842	MultiplicativeExpression	1 * pole_step		1259721	1		*			
ANR	1259843	PrimaryExpression	1		1259721	0					
ANR	1259844	Identifier	pole_step		1259721	1					
ANR	1259845	Identifier	y		1259721	1					
ANR	1259846	CallExpression	"midpoint ( pole [ 0 * pole_step ] . y , pole [ 1 * pole_step ] . y )"		1259721	1					
ANR	1259847	Callee	midpoint		1259721	0					
ANR	1259848	Identifier	midpoint		1259721	0					
ANR	1259849	ArgumentList	pole [ 0 * pole_step ] . y		1259721	1					
ANR	1259850	Argument	pole [ 0 * pole_step ] . y		1259721	0					
ANR	1259851	MemberAccess	pole [ 0 * pole_step ] . y		1259721	0					
ANR	1259852	ArrayIndexing	pole [ 0 * pole_step ]		1259721	0					
ANR	1259853	Identifier	pole		1259721	0					
ANR	1259854	MultiplicativeExpression	0 * pole_step		1259721	1		*			
ANR	1259855	PrimaryExpression	0		1259721	0					
ANR	1259856	Identifier	pole_step		1259721	1					
ANR	1259857	Identifier	y		1259721	1					
ANR	1259858	Argument	pole [ 1 * pole_step ] . y		1259721	1					
ANR	1259859	MemberAccess	pole [ 1 * pole_step ] . y		1259721	0					
ANR	1259860	ArrayIndexing	pole [ 1 * pole_step ]		1259721	0					
ANR	1259861	Identifier	pole		1259721	0					
ANR	1259862	MultiplicativeExpression	1 * pole_step		1259721	1		*			
ANR	1259863	PrimaryExpression	1		1259721	0					
ANR	1259864	Identifier	pole_step		1259721	1					
ANR	1259865	Identifier	y		1259721	1					
ANR	1259866	ExpressionStatement	"q1 [ 2 * pole_step ] . x = midpoint ( pole [ 2 * pole_step ] . x , pole [ 3 * pole_step ] . x )"	1711:4:64243:64319	1259721	36	True				
ANR	1259867	AssignmentExpression	"q1 [ 2 * pole_step ] . x = midpoint ( pole [ 2 * pole_step ] . x , pole [ 3 * pole_step ] . x )"		1259721	0		=			
ANR	1259868	MemberAccess	q1 [ 2 * pole_step ] . x		1259721	0					
ANR	1259869	ArrayIndexing	q1 [ 2 * pole_step ]		1259721	0					
ANR	1259870	Identifier	q1		1259721	0					
ANR	1259871	MultiplicativeExpression	2 * pole_step		1259721	1		*			
ANR	1259872	PrimaryExpression	2		1259721	0					
ANR	1259873	Identifier	pole_step		1259721	1					
ANR	1259874	Identifier	x		1259721	1					
ANR	1259875	CallExpression	"midpoint ( pole [ 2 * pole_step ] . x , pole [ 3 * pole_step ] . x )"		1259721	1					
ANR	1259876	Callee	midpoint		1259721	0					
ANR	1259877	Identifier	midpoint		1259721	0					
ANR	1259878	ArgumentList	pole [ 2 * pole_step ] . x		1259721	1					
ANR	1259879	Argument	pole [ 2 * pole_step ] . x		1259721	0					
ANR	1259880	MemberAccess	pole [ 2 * pole_step ] . x		1259721	0					
ANR	1259881	ArrayIndexing	pole [ 2 * pole_step ]		1259721	0					
ANR	1259882	Identifier	pole		1259721	0					
ANR	1259883	MultiplicativeExpression	2 * pole_step		1259721	1		*			
ANR	1259884	PrimaryExpression	2		1259721	0					
ANR	1259885	Identifier	pole_step		1259721	1					
ANR	1259886	Identifier	x		1259721	1					
ANR	1259887	Argument	pole [ 3 * pole_step ] . x		1259721	1					
ANR	1259888	MemberAccess	pole [ 3 * pole_step ] . x		1259721	0					
ANR	1259889	ArrayIndexing	pole [ 3 * pole_step ]		1259721	0					
ANR	1259890	Identifier	pole		1259721	0					
ANR	1259891	MultiplicativeExpression	3 * pole_step		1259721	1		*			
ANR	1259892	PrimaryExpression	3		1259721	0					
ANR	1259893	Identifier	pole_step		1259721	1					
ANR	1259894	Identifier	x		1259721	1					
ANR	1259895	ExpressionStatement	"q1 [ 2 * pole_step ] . y = midpoint ( pole [ 2 * pole_step ] . y , pole [ 3 * pole_step ] . y )"	1712:4:64325:64401	1259721	37	True				
ANR	1259896	AssignmentExpression	"q1 [ 2 * pole_step ] . y = midpoint ( pole [ 2 * pole_step ] . y , pole [ 3 * pole_step ] . y )"		1259721	0		=			
ANR	1259897	MemberAccess	q1 [ 2 * pole_step ] . y		1259721	0					
ANR	1259898	ArrayIndexing	q1 [ 2 * pole_step ]		1259721	0					
ANR	1259899	Identifier	q1		1259721	0					
ANR	1259900	MultiplicativeExpression	2 * pole_step		1259721	1		*			
ANR	1259901	PrimaryExpression	2		1259721	0					
ANR	1259902	Identifier	pole_step		1259721	1					
ANR	1259903	Identifier	y		1259721	1					
ANR	1259904	CallExpression	"midpoint ( pole [ 2 * pole_step ] . y , pole [ 3 * pole_step ] . y )"		1259721	1					
ANR	1259905	Callee	midpoint		1259721	0					
ANR	1259906	Identifier	midpoint		1259721	0					
ANR	1259907	ArgumentList	pole [ 2 * pole_step ] . y		1259721	1					
ANR	1259908	Argument	pole [ 2 * pole_step ] . y		1259721	0					
ANR	1259909	MemberAccess	pole [ 2 * pole_step ] . y		1259721	0					
ANR	1259910	ArrayIndexing	pole [ 2 * pole_step ]		1259721	0					
ANR	1259911	Identifier	pole		1259721	0					
ANR	1259912	MultiplicativeExpression	2 * pole_step		1259721	1		*			
ANR	1259913	PrimaryExpression	2		1259721	0					
ANR	1259914	Identifier	pole_step		1259721	1					
ANR	1259915	Identifier	y		1259721	1					
ANR	1259916	Argument	pole [ 3 * pole_step ] . y		1259721	1					
ANR	1259917	MemberAccess	pole [ 3 * pole_step ] . y		1259721	0					
ANR	1259918	ArrayIndexing	pole [ 3 * pole_step ]		1259721	0					
ANR	1259919	Identifier	pole		1259721	0					
ANR	1259920	MultiplicativeExpression	3 * pole_step		1259721	1		*			
ANR	1259921	PrimaryExpression	3		1259721	0					
ANR	1259922	Identifier	pole_step		1259721	1					
ANR	1259923	Identifier	y		1259721	1					
ANR	1259924	ExpressionStatement	"q0 [ 2 * pole_step ] . x = midpoint ( q0 [ 1 * pole_step ] . x , x12 )"	1713:4:64407:64463	1259721	38	True				
ANR	1259925	AssignmentExpression	"q0 [ 2 * pole_step ] . x = midpoint ( q0 [ 1 * pole_step ] . x , x12 )"		1259721	0		=			
ANR	1259926	MemberAccess	q0 [ 2 * pole_step ] . x		1259721	0					
ANR	1259927	ArrayIndexing	q0 [ 2 * pole_step ]		1259721	0					
ANR	1259928	Identifier	q0		1259721	0					
ANR	1259929	MultiplicativeExpression	2 * pole_step		1259721	1		*			
ANR	1259930	PrimaryExpression	2		1259721	0					
ANR	1259931	Identifier	pole_step		1259721	1					
ANR	1259932	Identifier	x		1259721	1					
ANR	1259933	CallExpression	"midpoint ( q0 [ 1 * pole_step ] . x , x12 )"		1259721	1					
ANR	1259934	Callee	midpoint		1259721	0					
ANR	1259935	Identifier	midpoint		1259721	0					
ANR	1259936	ArgumentList	q0 [ 1 * pole_step ] . x		1259721	1					
ANR	1259937	Argument	q0 [ 1 * pole_step ] . x		1259721	0					
ANR	1259938	MemberAccess	q0 [ 1 * pole_step ] . x		1259721	0					
ANR	1259939	ArrayIndexing	q0 [ 1 * pole_step ]		1259721	0					
ANR	1259940	Identifier	q0		1259721	0					
ANR	1259941	MultiplicativeExpression	1 * pole_step		1259721	1		*			
ANR	1259942	PrimaryExpression	1		1259721	0					
ANR	1259943	Identifier	pole_step		1259721	1					
ANR	1259944	Identifier	x		1259721	1					
ANR	1259945	Argument	x12		1259721	1					
ANR	1259946	Identifier	x12		1259721	0					
ANR	1259947	ExpressionStatement	"q0 [ 2 * pole_step ] . y = midpoint ( q0 [ 1 * pole_step ] . y , y12 )"	1714:4:64469:64525	1259721	39	True				
ANR	1259948	AssignmentExpression	"q0 [ 2 * pole_step ] . y = midpoint ( q0 [ 1 * pole_step ] . y , y12 )"		1259721	0		=			
ANR	1259949	MemberAccess	q0 [ 2 * pole_step ] . y		1259721	0					
ANR	1259950	ArrayIndexing	q0 [ 2 * pole_step ]		1259721	0					
ANR	1259951	Identifier	q0		1259721	0					
ANR	1259952	MultiplicativeExpression	2 * pole_step		1259721	1		*			
ANR	1259953	PrimaryExpression	2		1259721	0					
ANR	1259954	Identifier	pole_step		1259721	1					
ANR	1259955	Identifier	y		1259721	1					
ANR	1259956	CallExpression	"midpoint ( q0 [ 1 * pole_step ] . y , y12 )"		1259721	1					
ANR	1259957	Callee	midpoint		1259721	0					
ANR	1259958	Identifier	midpoint		1259721	0					
ANR	1259959	ArgumentList	q0 [ 1 * pole_step ] . y		1259721	1					
ANR	1259960	Argument	q0 [ 1 * pole_step ] . y		1259721	0					
ANR	1259961	MemberAccess	q0 [ 1 * pole_step ] . y		1259721	0					
ANR	1259962	ArrayIndexing	q0 [ 1 * pole_step ]		1259721	0					
ANR	1259963	Identifier	q0		1259721	0					
ANR	1259964	MultiplicativeExpression	1 * pole_step		1259721	1		*			
ANR	1259965	PrimaryExpression	1		1259721	0					
ANR	1259966	Identifier	pole_step		1259721	1					
ANR	1259967	Identifier	y		1259721	1					
ANR	1259968	Argument	y12		1259721	1					
ANR	1259969	Identifier	y12		1259721	0					
ANR	1259970	ExpressionStatement	"q1 [ 1 * pole_step ] . x = midpoint ( x12 , q1 [ 2 * pole_step ] . x )"	1715:4:64531:64587	1259721	40	True				
ANR	1259971	AssignmentExpression	"q1 [ 1 * pole_step ] . x = midpoint ( x12 , q1 [ 2 * pole_step ] . x )"		1259721	0		=			
ANR	1259972	MemberAccess	q1 [ 1 * pole_step ] . x		1259721	0					
ANR	1259973	ArrayIndexing	q1 [ 1 * pole_step ]		1259721	0					
ANR	1259974	Identifier	q1		1259721	0					
ANR	1259975	MultiplicativeExpression	1 * pole_step		1259721	1		*			
ANR	1259976	PrimaryExpression	1		1259721	0					
ANR	1259977	Identifier	pole_step		1259721	1					
ANR	1259978	Identifier	x		1259721	1					
ANR	1259979	CallExpression	"midpoint ( x12 , q1 [ 2 * pole_step ] . x )"		1259721	1					
ANR	1259980	Callee	midpoint		1259721	0					
ANR	1259981	Identifier	midpoint		1259721	0					
ANR	1259982	ArgumentList	x12		1259721	1					
ANR	1259983	Argument	x12		1259721	0					
ANR	1259984	Identifier	x12		1259721	0					
ANR	1259985	Argument	q1 [ 2 * pole_step ] . x		1259721	1					
ANR	1259986	MemberAccess	q1 [ 2 * pole_step ] . x		1259721	0					
ANR	1259987	ArrayIndexing	q1 [ 2 * pole_step ]		1259721	0					
ANR	1259988	Identifier	q1		1259721	0					
ANR	1259989	MultiplicativeExpression	2 * pole_step		1259721	1		*			
ANR	1259990	PrimaryExpression	2		1259721	0					
ANR	1259991	Identifier	pole_step		1259721	1					
ANR	1259992	Identifier	x		1259721	1					
ANR	1259993	ExpressionStatement	"q1 [ 1 * pole_step ] . y = midpoint ( y12 , q1 [ 2 * pole_step ] . y )"	1716:4:64593:64649	1259721	41	True				
ANR	1259994	AssignmentExpression	"q1 [ 1 * pole_step ] . y = midpoint ( y12 , q1 [ 2 * pole_step ] . y )"		1259721	0		=			
ANR	1259995	MemberAccess	q1 [ 1 * pole_step ] . y		1259721	0					
ANR	1259996	ArrayIndexing	q1 [ 1 * pole_step ]		1259721	0					
ANR	1259997	Identifier	q1		1259721	0					
ANR	1259998	MultiplicativeExpression	1 * pole_step		1259721	1		*			
ANR	1259999	PrimaryExpression	1		1259721	0					
ANR	1260000	Identifier	pole_step		1259721	1					
ANR	1260001	Identifier	y		1259721	1					
ANR	1260002	CallExpression	"midpoint ( y12 , q1 [ 2 * pole_step ] . y )"		1259721	1					
ANR	1260003	Callee	midpoint		1259721	0					
ANR	1260004	Identifier	midpoint		1259721	0					
ANR	1260005	ArgumentList	y12		1259721	1					
ANR	1260006	Argument	y12		1259721	0					
ANR	1260007	Identifier	y12		1259721	0					
ANR	1260008	Argument	q1 [ 2 * pole_step ] . y		1259721	1					
ANR	1260009	MemberAccess	q1 [ 2 * pole_step ] . y		1259721	0					
ANR	1260010	ArrayIndexing	q1 [ 2 * pole_step ]		1259721	0					
ANR	1260011	Identifier	q1		1259721	0					
ANR	1260012	MultiplicativeExpression	2 * pole_step		1259721	1		*			
ANR	1260013	PrimaryExpression	2		1259721	0					
ANR	1260014	Identifier	pole_step		1259721	1					
ANR	1260015	Identifier	y		1259721	1					
ANR	1260016	ExpressionStatement	q0 [ 0 * pole_step ] . x = pole [ 0 * pole_step ] . x	1717:4:64655:64698	1259721	42	True				
ANR	1260017	AssignmentExpression	q0 [ 0 * pole_step ] . x = pole [ 0 * pole_step ] . x		1259721	0		=			
ANR	1260018	MemberAccess	q0 [ 0 * pole_step ] . x		1259721	0					
ANR	1260019	ArrayIndexing	q0 [ 0 * pole_step ]		1259721	0					
ANR	1260020	Identifier	q0		1259721	0					
ANR	1260021	MultiplicativeExpression	0 * pole_step		1259721	1		*			
ANR	1260022	PrimaryExpression	0		1259721	0					
ANR	1260023	Identifier	pole_step		1259721	1					
ANR	1260024	Identifier	x		1259721	1					
ANR	1260025	MemberAccess	pole [ 0 * pole_step ] . x		1259721	1					
ANR	1260026	ArrayIndexing	pole [ 0 * pole_step ]		1259721	0					
ANR	1260027	Identifier	pole		1259721	0					
ANR	1260028	MultiplicativeExpression	0 * pole_step		1259721	1		*			
ANR	1260029	PrimaryExpression	0		1259721	0					
ANR	1260030	Identifier	pole_step		1259721	1					
ANR	1260031	Identifier	x		1259721	1					
ANR	1260032	ExpressionStatement	q0 [ 0 * pole_step ] . y = pole [ 0 * pole_step ] . y	1718:4:64704:64747	1259721	43	True				
ANR	1260033	AssignmentExpression	q0 [ 0 * pole_step ] . y = pole [ 0 * pole_step ] . y		1259721	0		=			
ANR	1260034	MemberAccess	q0 [ 0 * pole_step ] . y		1259721	0					
ANR	1260035	ArrayIndexing	q0 [ 0 * pole_step ]		1259721	0					
ANR	1260036	Identifier	q0		1259721	0					
ANR	1260037	MultiplicativeExpression	0 * pole_step		1259721	1		*			
ANR	1260038	PrimaryExpression	0		1259721	0					
ANR	1260039	Identifier	pole_step		1259721	1					
ANR	1260040	Identifier	y		1259721	1					
ANR	1260041	MemberAccess	pole [ 0 * pole_step ] . y		1259721	1					
ANR	1260042	ArrayIndexing	pole [ 0 * pole_step ]		1259721	0					
ANR	1260043	Identifier	pole		1259721	0					
ANR	1260044	MultiplicativeExpression	0 * pole_step		1259721	1		*			
ANR	1260045	PrimaryExpression	0		1259721	0					
ANR	1260046	Identifier	pole_step		1259721	1					
ANR	1260047	Identifier	y		1259721	1					
ANR	1260048	ExpressionStatement	"q0 [ 3 * pole_step ] . x = q1 [ 0 * pole_step ] . x = midpoint ( q0 [ 2 * pole_step ] . x , q1 [ 1 * pole_step ] . x )"	1719:4:64753:64847	1259721	44	True				
ANR	1260049	AssignmentExpression	"q0 [ 3 * pole_step ] . x = q1 [ 0 * pole_step ] . x = midpoint ( q0 [ 2 * pole_step ] . x , q1 [ 1 * pole_step ] . x )"		1259721	0		=			
ANR	1260050	MemberAccess	q0 [ 3 * pole_step ] . x		1259721	0					
ANR	1260051	ArrayIndexing	q0 [ 3 * pole_step ]		1259721	0					
ANR	1260052	Identifier	q0		1259721	0					
ANR	1260053	MultiplicativeExpression	3 * pole_step		1259721	1		*			
ANR	1260054	PrimaryExpression	3		1259721	0					
ANR	1260055	Identifier	pole_step		1259721	1					
ANR	1260056	Identifier	x		1259721	1					
ANR	1260057	AssignmentExpression	"q1 [ 0 * pole_step ] . x = midpoint ( q0 [ 2 * pole_step ] . x , q1 [ 1 * pole_step ] . x )"		1259721	1		=			
ANR	1260058	MemberAccess	q1 [ 0 * pole_step ] . x		1259721	0					
ANR	1260059	ArrayIndexing	q1 [ 0 * pole_step ]		1259721	0					
ANR	1260060	Identifier	q1		1259721	0					
ANR	1260061	MultiplicativeExpression	0 * pole_step		1259721	1		*			
ANR	1260062	PrimaryExpression	0		1259721	0					
ANR	1260063	Identifier	pole_step		1259721	1					
ANR	1260064	Identifier	x		1259721	1					
ANR	1260065	CallExpression	"midpoint ( q0 [ 2 * pole_step ] . x , q1 [ 1 * pole_step ] . x )"		1259721	1					
ANR	1260066	Callee	midpoint		1259721	0					
ANR	1260067	Identifier	midpoint		1259721	0					
ANR	1260068	ArgumentList	q0 [ 2 * pole_step ] . x		1259721	1					
ANR	1260069	Argument	q0 [ 2 * pole_step ] . x		1259721	0					
ANR	1260070	MemberAccess	q0 [ 2 * pole_step ] . x		1259721	0					
ANR	1260071	ArrayIndexing	q0 [ 2 * pole_step ]		1259721	0					
ANR	1260072	Identifier	q0		1259721	0					
ANR	1260073	MultiplicativeExpression	2 * pole_step		1259721	1		*			
ANR	1260074	PrimaryExpression	2		1259721	0					
ANR	1260075	Identifier	pole_step		1259721	1					
ANR	1260076	Identifier	x		1259721	1					
ANR	1260077	Argument	q1 [ 1 * pole_step ] . x		1259721	1					
ANR	1260078	MemberAccess	q1 [ 1 * pole_step ] . x		1259721	0					
ANR	1260079	ArrayIndexing	q1 [ 1 * pole_step ]		1259721	0					
ANR	1260080	Identifier	q1		1259721	0					
ANR	1260081	MultiplicativeExpression	1 * pole_step		1259721	1		*			
ANR	1260082	PrimaryExpression	1		1259721	0					
ANR	1260083	Identifier	pole_step		1259721	1					
ANR	1260084	Identifier	x		1259721	1					
ANR	1260085	ExpressionStatement	"q0 [ 3 * pole_step ] . y = q1 [ 0 * pole_step ] . y = midpoint ( q0 [ 2 * pole_step ] . y , q1 [ 1 * pole_step ] . y )"	1720:4:64853:64947	1259721	45	True				
ANR	1260086	AssignmentExpression	"q0 [ 3 * pole_step ] . y = q1 [ 0 * pole_step ] . y = midpoint ( q0 [ 2 * pole_step ] . y , q1 [ 1 * pole_step ] . y )"		1259721	0		=			
ANR	1260087	MemberAccess	q0 [ 3 * pole_step ] . y		1259721	0					
ANR	1260088	ArrayIndexing	q0 [ 3 * pole_step ]		1259721	0					
ANR	1260089	Identifier	q0		1259721	0					
ANR	1260090	MultiplicativeExpression	3 * pole_step		1259721	1		*			
ANR	1260091	PrimaryExpression	3		1259721	0					
ANR	1260092	Identifier	pole_step		1259721	1					
ANR	1260093	Identifier	y		1259721	1					
ANR	1260094	AssignmentExpression	"q1 [ 0 * pole_step ] . y = midpoint ( q0 [ 2 * pole_step ] . y , q1 [ 1 * pole_step ] . y )"		1259721	1		=			
ANR	1260095	MemberAccess	q1 [ 0 * pole_step ] . y		1259721	0					
ANR	1260096	ArrayIndexing	q1 [ 0 * pole_step ]		1259721	0					
ANR	1260097	Identifier	q1		1259721	0					
ANR	1260098	MultiplicativeExpression	0 * pole_step		1259721	1		*			
ANR	1260099	PrimaryExpression	0		1259721	0					
ANR	1260100	Identifier	pole_step		1259721	1					
ANR	1260101	Identifier	y		1259721	1					
ANR	1260102	CallExpression	"midpoint ( q0 [ 2 * pole_step ] . y , q1 [ 1 * pole_step ] . y )"		1259721	1					
ANR	1260103	Callee	midpoint		1259721	0					
ANR	1260104	Identifier	midpoint		1259721	0					
ANR	1260105	ArgumentList	q0 [ 2 * pole_step ] . y		1259721	1					
ANR	1260106	Argument	q0 [ 2 * pole_step ] . y		1259721	0					
ANR	1260107	MemberAccess	q0 [ 2 * pole_step ] . y		1259721	0					
ANR	1260108	ArrayIndexing	q0 [ 2 * pole_step ]		1259721	0					
ANR	1260109	Identifier	q0		1259721	0					
ANR	1260110	MultiplicativeExpression	2 * pole_step		1259721	1		*			
ANR	1260111	PrimaryExpression	2		1259721	0					
ANR	1260112	Identifier	pole_step		1259721	1					
ANR	1260113	Identifier	y		1259721	1					
ANR	1260114	Argument	q1 [ 1 * pole_step ] . y		1259721	1					
ANR	1260115	MemberAccess	q1 [ 1 * pole_step ] . y		1259721	0					
ANR	1260116	ArrayIndexing	q1 [ 1 * pole_step ]		1259721	0					
ANR	1260117	Identifier	q1		1259721	0					
ANR	1260118	MultiplicativeExpression	1 * pole_step		1259721	1		*			
ANR	1260119	PrimaryExpression	1		1259721	0					
ANR	1260120	Identifier	pole_step		1259721	1					
ANR	1260121	Identifier	y		1259721	1					
ANR	1260122	ExpressionStatement	q1 [ 3 * pole_step ] . x = pole [ 3 * pole_step ] . x	1721:4:64953:64996	1259721	46	True				
ANR	1260123	AssignmentExpression	q1 [ 3 * pole_step ] . x = pole [ 3 * pole_step ] . x		1259721	0		=			
ANR	1260124	MemberAccess	q1 [ 3 * pole_step ] . x		1259721	0					
ANR	1260125	ArrayIndexing	q1 [ 3 * pole_step ]		1259721	0					
ANR	1260126	Identifier	q1		1259721	0					
ANR	1260127	MultiplicativeExpression	3 * pole_step		1259721	1		*			
ANR	1260128	PrimaryExpression	3		1259721	0					
ANR	1260129	Identifier	pole_step		1259721	1					
ANR	1260130	Identifier	x		1259721	1					
ANR	1260131	MemberAccess	pole [ 3 * pole_step ] . x		1259721	1					
ANR	1260132	ArrayIndexing	pole [ 3 * pole_step ]		1259721	0					
ANR	1260133	Identifier	pole		1259721	0					
ANR	1260134	MultiplicativeExpression	3 * pole_step		1259721	1		*			
ANR	1260135	PrimaryExpression	3		1259721	0					
ANR	1260136	Identifier	pole_step		1259721	1					
ANR	1260137	Identifier	x		1259721	1					
ANR	1260138	ExpressionStatement	q1 [ 3 * pole_step ] . y = pole [ 3 * pole_step ] . y	1722:4:65002:65045	1259721	47	True				
ANR	1260139	AssignmentExpression	q1 [ 3 * pole_step ] . y = pole [ 3 * pole_step ] . y		1259721	0		=			
ANR	1260140	MemberAccess	q1 [ 3 * pole_step ] . y		1259721	0					
ANR	1260141	ArrayIndexing	q1 [ 3 * pole_step ]		1259721	0					
ANR	1260142	Identifier	q1		1259721	0					
ANR	1260143	MultiplicativeExpression	3 * pole_step		1259721	1		*			
ANR	1260144	PrimaryExpression	3		1259721	0					
ANR	1260145	Identifier	pole_step		1259721	1					
ANR	1260146	Identifier	y		1259721	1					
ANR	1260147	MemberAccess	pole [ 3 * pole_step ] . y		1259721	1					
ANR	1260148	ArrayIndexing	pole [ 3 * pole_step ]		1259721	0					
ANR	1260149	Identifier	pole		1259721	0					
ANR	1260150	MultiplicativeExpression	3 * pole_step		1259721	1		*			
ANR	1260151	PrimaryExpression	3		1259721	0					
ANR	1260152	Identifier	pole_step		1259721	1					
ANR	1260153	Identifier	y		1259721	1					
ANR	1260154	Statement	undef	1723:1:65048:65052	1259721	48	True				
ANR	1260155	Statement	midpoint	1723:7:65054:65061	1259721	49	True				
ANR	1260156	ReturnType	static void		1259721	1					
ANR	1260157	Identifier	split_curve_s		1259721	2					
ANR	1260158	ParameterList	"const gs_fixed_point * pole , gs_fixed_point * q0 , gs_fixed_point * q1 , int pole_step"		1259721	3					
ANR	1260159	Parameter	const gs_fixed_point * pole	1693:14:63392:63417	1259721	0	True				
ANR	1260160	ParameterType	const gs_fixed_point *		1259721	0					
ANR	1260161	Identifier	pole		1259721	1					
ANR	1260162	Parameter	gs_fixed_point * q0	1693:42:63420:63437	1259721	1	True				
ANR	1260163	ParameterType	gs_fixed_point *		1259721	0					
ANR	1260164	Identifier	q0		1259721	1					
ANR	1260165	Parameter	gs_fixed_point * q1	1693:62:63440:63457	1259721	2	True				
ANR	1260166	ParameterType	gs_fixed_point *		1259721	0					
ANR	1260167	Identifier	q1		1259721	1					
ANR	1260168	Parameter	int pole_step	1693:82:63460:63472	1259721	3	True				
ANR	1260169	ParameterType	int		1259721	0					
ANR	1260170	Identifier	pole_step		1259721	1					
ANR	1260171	CFGEntryNode	ENTRY		1259721		True				
ANR	1260172	CFGExitNode	EXIT		1259721		True				
ANR	1260173	Symbol	pole [ 1 * pole_step ] . y		1259721						
ANR	1260174	Symbol	q0 [ 2 * pole_step ] . y		1259721						
ANR	1260175	Symbol	pole [ 1 * pole_step ] . x		1259721						
ANR	1260176	Symbol	* q1		1259721						
ANR	1260177	Symbol	q0 [ 2 * pole_step ] . x		1259721						
ANR	1260178	Symbol	* q0		1259721						
ANR	1260179	Symbol	pole		1259721						
ANR	1260180	Symbol	* pole_step		1259721						
ANR	1260181	Symbol	pole_step		1259721						
ANR	1260182	Symbol	* pole		1259721						
ANR	1260183	Symbol	pole [ 3 * pole_step ] . x		1259721						
ANR	1260184	Symbol	pole [ 3 * pole_step ] . y		1259721						
ANR	1260185	Symbol	q0 [ 1 * pole_step ] . y		1259721						
ANR	1260186	Symbol	pole [ 0 * pole_step ] . y		1259721						
ANR	1260187	Symbol	pole [ 0 * pole_step ] . x		1259721						
ANR	1260188	Symbol	q0 [ 1 * pole_step ] . x		1259721						
ANR	1260189	Symbol	x12		1259721						
ANR	1260190	Symbol	midpoint		1259721						
ANR	1260191	Symbol	y12		1259721						
ANR	1260192	Symbol	q1 [ 1 * pole_step ] . x		1259721						
ANR	1260193	Symbol	q1 [ 1 * pole_step ] . y		1259721						
ANR	1260194	Symbol	q0		1259721						
ANR	1260195	Symbol	q1		1259721						
ANR	1260196	Symbol	pole [ 2 * pole_step ] . x		1259721						
ANR	1260197	Symbol	pole [ 2 * pole_step ] . y		1259721						
ANR	1260198	Symbol	q1 [ 0 * pole_step ] . y		1259721						
ANR	1260199	Symbol	q1 [ 3 * pole_step ] . y		1259721						
ANR	1260200	Symbol	q1 [ 3 * pole_step ] . x		1259721						
ANR	1260201	Symbol	q1 [ 0 * pole_step ] . x		1259721						
ANR	1260202	Symbol	q1 [ 2 * pole_step ] . y		1259721						
ANR	1260203	Symbol	q1 [ 2 * pole_step ] . x		1259721						
ANR	1260204	Symbol	q0 [ 3 * pole_step ] . y		1259721						
ANR	1260205	Symbol	q0 [ 0 * pole_step ] . x		1259721						
ANR	1260206	Symbol	q0 [ 3 * pole_step ] . x		1259721						
ANR	1260207	Symbol	q0 [ 0 * pole_step ] . y		1259721						
ANR	1260208	Function	split_curve	1726:0:65066:65202							
ANR	1260209	FunctionDef	"split_curve (const gs_fixed_point pole [ 4 ] , gs_fixed_point q0 [ 4 ] , gs_fixed_point q1 [ 4 ])"		1260208	0					
ANR	1260210	CompoundStatement		1728:0:65164:65202	1260208	0					
ANR	1260211	ExpressionStatement	"split_curve_s ( pole , q0 , q1 , 1 )"	1729:4:65170:65200	1260208	0	True				
ANR	1260212	CallExpression	"split_curve_s ( pole , q0 , q1 , 1 )"		1260208	0					
ANR	1260213	Callee	split_curve_s		1260208	0					
ANR	1260214	Identifier	split_curve_s		1260208	0					
ANR	1260215	ArgumentList	pole		1260208	1					
ANR	1260216	Argument	pole		1260208	0					
ANR	1260217	Identifier	pole		1260208	0					
ANR	1260218	Argument	q0		1260208	1					
ANR	1260219	Identifier	q0		1260208	0					
ANR	1260220	Argument	q1		1260208	2					
ANR	1260221	Identifier	q1		1260208	0					
ANR	1260222	Argument	1		1260208	3					
ANR	1260223	PrimaryExpression	1		1260208	0					
ANR	1260224	ReturnType	static void		1260208	1					
ANR	1260225	Identifier	split_curve		1260208	2					
ANR	1260226	ParameterList	"const gs_fixed_point pole [ 4 ] , gs_fixed_point q0 [ 4 ] , gs_fixed_point q1 [ 4 ]"		1260208	3					
ANR	1260227	Parameter	const gs_fixed_point pole [ 4 ]	1727:12:65090:65117	1260208	0	True				
ANR	1260228	ParameterType	const gs_fixed_point [ 4 ]		1260208	0					
ANR	1260229	Identifier	pole		1260208	1					
ANR	1260230	Parameter	gs_fixed_point q0 [ 4 ]	1727:42:65120:65139	1260208	1	True				
ANR	1260231	ParameterType	gs_fixed_point [ 4 ]		1260208	0					
ANR	1260232	Identifier	q0		1260208	1					
ANR	1260233	Parameter	gs_fixed_point q1 [ 4 ]	1727:64:65142:65161	1260208	2	True				
ANR	1260234	ParameterType	gs_fixed_point [ 4 ]		1260208	0					
ANR	1260235	Identifier	q1		1260208	1					
ANR	1260236	CFGEntryNode	ENTRY		1260208		True				
ANR	1260237	CFGExitNode	EXIT		1260208		True				
ANR	1260238	Symbol	q1		1260208						
ANR	1260239	Symbol	pole		1260208						
ANR	1260240	Symbol	q0		1260208						
ANR	1260241	Function	do_swap_axes	1733:0:65244:65414							
ANR	1260242	FunctionDef	"do_swap_axes (gs_fixed_point * p , int k)"		1260241	0					
ANR	1260243	CompoundStatement		1735:0:65302:65414	1260241	0					
ANR	1260244	IdentifierDeclStatement	int i ;	1736:4:65308:65313	1260241	0	True				
ANR	1260245	IdentifierDecl	i		1260241	0					
ANR	1260246	IdentifierDeclType	int		1260241	0					
ANR	1260247	Identifier	i		1260241	1					
ANR	1260248	ForStatement	for ( i = 0 ; i < k ; i ++ )		1260241	1					
ANR	1260249	ForInit	i = 0 ;	1738:9:65325:65330	1260241	0	True				
ANR	1260250	AssignmentExpression	i = 0		1260241	0		=			
ANR	1260251	Identifier	i		1260241	0					
ANR	1260252	PrimaryExpression	0		1260241	1					
ANR	1260253	Condition	i < k	1738:16:65332:65336	1260241	1	True				
ANR	1260254	RelationalExpression	i < k		1260241	0		<			
ANR	1260255	Identifier	i		1260241	0					
ANR	1260256	Identifier	k		1260241	1					
ANR	1260257	PostIncDecOperationExpression	i ++	1738:23:65339:65341	1260241	2	True				
ANR	1260258	Identifier	i		1260241	0					
ANR	1260259	IncDec	++		1260241	1					
ANR	1260260	CompoundStatement		4:28:41:41	1260241	3					
ANR	1260261	ExpressionStatement	p [ i ] . x ^= p [ i ] . y	1739:8:65354:65370	1260241	0	True				
ANR	1260262	AssignmentExpression	p [ i ] . x ^= p [ i ] . y		1260241	0		^=			
ANR	1260263	MemberAccess	p [ i ] . x		1260241	0					
ANR	1260264	ArrayIndexing	p [ i ]		1260241	0					
ANR	1260265	Identifier	p		1260241	0					
ANR	1260266	Identifier	i		1260241	1					
ANR	1260267	Identifier	x		1260241	1					
ANR	1260268	MemberAccess	p [ i ] . y		1260241	1					
ANR	1260269	ArrayIndexing	p [ i ]		1260241	0					
ANR	1260270	Identifier	p		1260241	0					
ANR	1260271	Identifier	i		1260241	1					
ANR	1260272	Identifier	y		1260241	1					
ANR	1260273	ExpressionStatement	p [ i ] . y ^= p [ i ] . x	1739:26:65372:65388	1260241	1	True				
ANR	1260274	AssignmentExpression	p [ i ] . y ^= p [ i ] . x		1260241	0		^=			
ANR	1260275	MemberAccess	p [ i ] . y		1260241	0					
ANR	1260276	ArrayIndexing	p [ i ]		1260241	0					
ANR	1260277	Identifier	p		1260241	0					
ANR	1260278	Identifier	i		1260241	1					
ANR	1260279	Identifier	y		1260241	1					
ANR	1260280	MemberAccess	p [ i ] . x		1260241	1					
ANR	1260281	ArrayIndexing	p [ i ]		1260241	0					
ANR	1260282	Identifier	p		1260241	0					
ANR	1260283	Identifier	i		1260241	1					
ANR	1260284	Identifier	x		1260241	1					
ANR	1260285	ExpressionStatement	p [ i ] . x ^= p [ i ] . y	1739:44:65390:65406	1260241	2	True				
ANR	1260286	AssignmentExpression	p [ i ] . x ^= p [ i ] . y		1260241	0		^=			
ANR	1260287	MemberAccess	p [ i ] . x		1260241	0					
ANR	1260288	ArrayIndexing	p [ i ]		1260241	0					
ANR	1260289	Identifier	p		1260241	0					
ANR	1260290	Identifier	i		1260241	1					
ANR	1260291	Identifier	x		1260241	1					
ANR	1260292	MemberAccess	p [ i ] . y		1260241	1					
ANR	1260293	ArrayIndexing	p [ i ]		1260241	0					
ANR	1260294	Identifier	p		1260241	0					
ANR	1260295	Identifier	i		1260241	1					
ANR	1260296	Identifier	y		1260241	1					
ANR	1260297	ReturnType	static inline void		1260241	1					
ANR	1260298	Identifier	do_swap_axes		1260241	2					
ANR	1260299	ParameterList	"gs_fixed_point * p , int k"		1260241	3					
ANR	1260300	Parameter	gs_fixed_point * p	1734:13:65276:65292	1260241	0	True				
ANR	1260301	ParameterType	gs_fixed_point *		1260241	0					
ANR	1260302	Identifier	p		1260241	1					
ANR	1260303	Parameter	int k	1734:32:65295:65299	1260241	1	True				
ANR	1260304	ParameterType	int		1260241	0					
ANR	1260305	Identifier	k		1260241	1					
ANR	1260306	CFGEntryNode	ENTRY		1260241		True				
ANR	1260307	CFGExitNode	EXIT		1260241		True				
ANR	1260308	Symbol	p		1260241						
ANR	1260309	Symbol	* i		1260241						
ANR	1260310	Symbol	p [ i ] . y		1260241						
ANR	1260311	Symbol	i		1260241						
ANR	1260312	Symbol	* p		1260241						
ANR	1260313	Symbol	k		1260241						
ANR	1260314	Symbol	p [ i ] . x		1260241						
ANR	1260315	Function	span_x	1743:0:65417:65658							
ANR	1260316	FunctionDef	"span_x (const gs_fixed_point * p , int k)"		1260315	0					
ANR	1260317	CompoundStatement		1745:0:65476:65658	1260315	0					
ANR	1260318	IdentifierDeclStatement	int i ;	1746:4:65482:65487	1260315	0	True				
ANR	1260319	IdentifierDecl	i		1260315	0					
ANR	1260320	IdentifierDeclType	int		1260315	0					
ANR	1260321	Identifier	i		1260315	1					
ANR	1260322	IdentifierDeclStatement	"fixed xmin = p [ 0 ] . x , xmax = p [ 0 ] . x ;"	1747:4:65493:65527	1260315	1	True				
ANR	1260323	IdentifierDecl	xmin = p [ 0 ] . x		1260315	0					
ANR	1260324	IdentifierDeclType	fixed		1260315	0					
ANR	1260325	Identifier	xmin		1260315	1					
ANR	1260326	AssignmentExpression	xmin = p [ 0 ] . x		1260315	2		=			
ANR	1260327	Identifier	xmin		1260315	0					
ANR	1260328	MemberAccess	p [ 0 ] . x		1260315	1					
ANR	1260329	ArrayIndexing	p [ 0 ]		1260315	0					
ANR	1260330	Identifier	p		1260315	0					
ANR	1260331	PrimaryExpression	0		1260315	1					
ANR	1260332	Identifier	x		1260315	1					
ANR	1260333	IdentifierDecl	xmax = p [ 0 ] . x		1260315	1					
ANR	1260334	IdentifierDeclType	fixed		1260315	0					
ANR	1260335	Identifier	xmax		1260315	1					
ANR	1260336	AssignmentExpression	xmax = p [ 0 ] . x		1260315	2		=			
ANR	1260337	Identifier	xmax		1260315	0					
ANR	1260338	MemberAccess	p [ 0 ] . x		1260315	1					
ANR	1260339	ArrayIndexing	p [ 0 ]		1260315	0					
ANR	1260340	Identifier	p		1260315	0					
ANR	1260341	PrimaryExpression	0		1260315	1					
ANR	1260342	Identifier	x		1260315	1					
ANR	1260343	ForStatement	for ( i = 1 ; i < k ; i ++ )		1260315	2					
ANR	1260344	ForInit	i = 1 ;	1749:9:65539:65544	1260315	0	True				
ANR	1260345	AssignmentExpression	i = 1		1260315	0		=			
ANR	1260346	Identifier	i		1260315	0					
ANR	1260347	PrimaryExpression	1		1260315	1					
ANR	1260348	Condition	i < k	1749:16:65546:65550	1260315	1	True				
ANR	1260349	RelationalExpression	i < k		1260315	0		<			
ANR	1260350	Identifier	i		1260315	0					
ANR	1260351	Identifier	k		1260315	1					
ANR	1260352	PostIncDecOperationExpression	i ++	1749:23:65553:65555	1260315	2	True				
ANR	1260353	Identifier	i		1260315	0					
ANR	1260354	IncDec	++		1260315	1					
ANR	1260355	CompoundStatement		5:28:81:81	1260315	3					
ANR	1260356	ExpressionStatement	"xmin = min ( xmin , p [ i ] . x )"	1750:8:65568:65592	1260315	0	True				
ANR	1260357	AssignmentExpression	"xmin = min ( xmin , p [ i ] . x )"		1260315	0		=			
ANR	1260358	Identifier	xmin		1260315	0					
ANR	1260359	CallExpression	"min ( xmin , p [ i ] . x )"		1260315	1					
ANR	1260360	Callee	min		1260315	0					
ANR	1260361	Identifier	min		1260315	0					
ANR	1260362	ArgumentList	xmin		1260315	1					
ANR	1260363	Argument	xmin		1260315	0					
ANR	1260364	Identifier	xmin		1260315	0					
ANR	1260365	Argument	p [ i ] . x		1260315	1					
ANR	1260366	MemberAccess	p [ i ] . x		1260315	0					
ANR	1260367	ArrayIndexing	p [ i ]		1260315	0					
ANR	1260368	Identifier	p		1260315	0					
ANR	1260369	Identifier	i		1260315	1					
ANR	1260370	Identifier	x		1260315	1					
ANR	1260371	ExpressionStatement	"xmax = max ( xmax , p [ i ] . x )"	1751:8:65602:65626	1260315	1	True				
ANR	1260372	AssignmentExpression	"xmax = max ( xmax , p [ i ] . x )"		1260315	0		=			
ANR	1260373	Identifier	xmax		1260315	0					
ANR	1260374	CallExpression	"max ( xmax , p [ i ] . x )"		1260315	1					
ANR	1260375	Callee	max		1260315	0					
ANR	1260376	Identifier	max		1260315	0					
ANR	1260377	ArgumentList	xmax		1260315	1					
ANR	1260378	Argument	xmax		1260315	0					
ANR	1260379	Identifier	xmax		1260315	0					
ANR	1260380	Argument	p [ i ] . x		1260315	1					
ANR	1260381	MemberAccess	p [ i ] . x		1260315	0					
ANR	1260382	ArrayIndexing	p [ i ]		1260315	0					
ANR	1260383	Identifier	p		1260315	0					
ANR	1260384	Identifier	i		1260315	1					
ANR	1260385	Identifier	x		1260315	1					
ANR	1260386	ReturnStatement	return xmax - xmin ;	1753:4:65638:65656	1260315	3	True				
ANR	1260387	AdditiveExpression	xmax - xmin		1260315	0		-			
ANR	1260388	Identifier	xmax		1260315	0					
ANR	1260389	Identifier	xmin		1260315	1					
ANR	1260390	ReturnType	static inline fixed		1260315	1					
ANR	1260391	Identifier	span_x		1260315	2					
ANR	1260392	ParameterList	"const gs_fixed_point * p , int k"		1260315	3					
ANR	1260393	Parameter	const gs_fixed_point * p	1744:7:65444:65466	1260315	0	True				
ANR	1260394	ParameterType	const gs_fixed_point *		1260315	0					
ANR	1260395	Identifier	p		1260315	1					
ANR	1260396	Parameter	int k	1744:32:65469:65473	1260315	1	True				
ANR	1260397	ParameterType	int		1260315	0					
ANR	1260398	Identifier	k		1260315	1					
ANR	1260399	CFGEntryNode	ENTRY		1260315		True				
ANR	1260400	CFGExitNode	EXIT		1260315		True				
ANR	1260401	Symbol	p		1260315						
ANR	1260402	Symbol	xmin		1260315						
ANR	1260403	Symbol	* i		1260315						
ANR	1260404	Symbol	min		1260315						
ANR	1260405	Symbol	xmax		1260315						
ANR	1260406	Symbol	max		1260315						
ANR	1260407	Symbol	p [ 0 ] . x		1260315						
ANR	1260408	Symbol	i		1260315						
ANR	1260409	Symbol	* p		1260315						
ANR	1260410	Symbol	k		1260315						
ANR	1260411	Symbol	p [ i ] . x		1260315						
ANR	1260412	Function	span_y	1756:0:65661:65902							
ANR	1260413	FunctionDef	"span_y (const gs_fixed_point * p , int k)"		1260412	0					
ANR	1260414	CompoundStatement		1758:0:65720:65902	1260412	0					
ANR	1260415	IdentifierDeclStatement	int i ;	1759:4:65726:65731	1260412	0	True				
ANR	1260416	IdentifierDecl	i		1260412	0					
ANR	1260417	IdentifierDeclType	int		1260412	0					
ANR	1260418	Identifier	i		1260412	1					
ANR	1260419	IdentifierDeclStatement	"fixed ymin = p [ 0 ] . y , ymax = p [ 0 ] . y ;"	1760:4:65737:65771	1260412	1	True				
ANR	1260420	IdentifierDecl	ymin = p [ 0 ] . y		1260412	0					
ANR	1260421	IdentifierDeclType	fixed		1260412	0					
ANR	1260422	Identifier	ymin		1260412	1					
ANR	1260423	AssignmentExpression	ymin = p [ 0 ] . y		1260412	2		=			
ANR	1260424	Identifier	ymin		1260412	0					
ANR	1260425	MemberAccess	p [ 0 ] . y		1260412	1					
ANR	1260426	ArrayIndexing	p [ 0 ]		1260412	0					
ANR	1260427	Identifier	p		1260412	0					
ANR	1260428	PrimaryExpression	0		1260412	1					
ANR	1260429	Identifier	y		1260412	1					
ANR	1260430	IdentifierDecl	ymax = p [ 0 ] . y		1260412	1					
ANR	1260431	IdentifierDeclType	fixed		1260412	0					
ANR	1260432	Identifier	ymax		1260412	1					
ANR	1260433	AssignmentExpression	ymax = p [ 0 ] . y		1260412	2		=			
ANR	1260434	Identifier	ymax		1260412	0					
ANR	1260435	MemberAccess	p [ 0 ] . y		1260412	1					
ANR	1260436	ArrayIndexing	p [ 0 ]		1260412	0					
ANR	1260437	Identifier	p		1260412	0					
ANR	1260438	PrimaryExpression	0		1260412	1					
ANR	1260439	Identifier	y		1260412	1					
ANR	1260440	ForStatement	for ( i = 1 ; i < k ; i ++ )		1260412	2					
ANR	1260441	ForInit	i = 1 ;	1762:9:65783:65788	1260412	0	True				
ANR	1260442	AssignmentExpression	i = 1		1260412	0		=			
ANR	1260443	Identifier	i		1260412	0					
ANR	1260444	PrimaryExpression	1		1260412	1					
ANR	1260445	Condition	i < k	1762:16:65790:65794	1260412	1	True				
ANR	1260446	RelationalExpression	i < k		1260412	0		<			
ANR	1260447	Identifier	i		1260412	0					
ANR	1260448	Identifier	k		1260412	1					
ANR	1260449	PostIncDecOperationExpression	i ++	1762:23:65797:65799	1260412	2	True				
ANR	1260450	Identifier	i		1260412	0					
ANR	1260451	IncDec	++		1260412	1					
ANR	1260452	CompoundStatement		5:28:81:81	1260412	3					
ANR	1260453	ExpressionStatement	"ymin = min ( ymin , p [ i ] . y )"	1763:8:65812:65836	1260412	0	True				
ANR	1260454	AssignmentExpression	"ymin = min ( ymin , p [ i ] . y )"		1260412	0		=			
ANR	1260455	Identifier	ymin		1260412	0					
ANR	1260456	CallExpression	"min ( ymin , p [ i ] . y )"		1260412	1					
ANR	1260457	Callee	min		1260412	0					
ANR	1260458	Identifier	min		1260412	0					
ANR	1260459	ArgumentList	ymin		1260412	1					
ANR	1260460	Argument	ymin		1260412	0					
ANR	1260461	Identifier	ymin		1260412	0					
ANR	1260462	Argument	p [ i ] . y		1260412	1					
ANR	1260463	MemberAccess	p [ i ] . y		1260412	0					
ANR	1260464	ArrayIndexing	p [ i ]		1260412	0					
ANR	1260465	Identifier	p		1260412	0					
ANR	1260466	Identifier	i		1260412	1					
ANR	1260467	Identifier	y		1260412	1					
ANR	1260468	ExpressionStatement	"ymax = max ( ymax , p [ i ] . y )"	1764:8:65846:65870	1260412	1	True				
ANR	1260469	AssignmentExpression	"ymax = max ( ymax , p [ i ] . y )"		1260412	0		=			
ANR	1260470	Identifier	ymax		1260412	0					
ANR	1260471	CallExpression	"max ( ymax , p [ i ] . y )"		1260412	1					
ANR	1260472	Callee	max		1260412	0					
ANR	1260473	Identifier	max		1260412	0					
ANR	1260474	ArgumentList	ymax		1260412	1					
ANR	1260475	Argument	ymax		1260412	0					
ANR	1260476	Identifier	ymax		1260412	0					
ANR	1260477	Argument	p [ i ] . y		1260412	1					
ANR	1260478	MemberAccess	p [ i ] . y		1260412	0					
ANR	1260479	ArrayIndexing	p [ i ]		1260412	0					
ANR	1260480	Identifier	p		1260412	0					
ANR	1260481	Identifier	i		1260412	1					
ANR	1260482	Identifier	y		1260412	1					
ANR	1260483	ReturnStatement	return ymax - ymin ;	1766:4:65882:65900	1260412	3	True				
ANR	1260484	AdditiveExpression	ymax - ymin		1260412	0		-			
ANR	1260485	Identifier	ymax		1260412	0					
ANR	1260486	Identifier	ymin		1260412	1					
ANR	1260487	ReturnType	static inline fixed		1260412	1					
ANR	1260488	Identifier	span_y		1260412	2					
ANR	1260489	ParameterList	"const gs_fixed_point * p , int k"		1260412	3					
ANR	1260490	Parameter	const gs_fixed_point * p	1757:7:65688:65710	1260412	0	True				
ANR	1260491	ParameterType	const gs_fixed_point *		1260412	0					
ANR	1260492	Identifier	p		1260412	1					
ANR	1260493	Parameter	int k	1757:32:65713:65717	1260412	1	True				
ANR	1260494	ParameterType	int		1260412	0					
ANR	1260495	Identifier	k		1260412	1					
ANR	1260496	CFGEntryNode	ENTRY		1260412		True				
ANR	1260497	CFGExitNode	EXIT		1260412		True				
ANR	1260498	Symbol	p		1260412						
ANR	1260499	Symbol	ymin		1260412						
ANR	1260500	Symbol	ymax		1260412						
ANR	1260501	Symbol	* i		1260412						
ANR	1260502	Symbol	min		1260412						
ANR	1260503	Symbol	p [ i ] . y		1260412						
ANR	1260504	Symbol	max		1260412						
ANR	1260505	Symbol	p [ 0 ] . y		1260412						
ANR	1260506	Symbol	i		1260412						
ANR	1260507	Symbol	* p		1260412						
ANR	1260508	Symbol	k		1260412						
ANR	1260509	Function	manhattan_dist	1770:0:65912:66094							
ANR	1260510	FunctionDef	"manhattan_dist (const gs_fixed_point * p0 , const gs_fixed_point * p1)"		1260509	0					
ANR	1260511	CompoundStatement		1772:0:65999:66094	1260509	0					
ANR	1260512	IdentifierDeclStatement	"fixed dx = any_abs ( p1 -> x - p0 -> x ) , dy = any_abs ( p1 -> y - p0 -> y ) ;"	1773:4:66005:66067	1260509	0	True				
ANR	1260513	IdentifierDecl	dx = any_abs ( p1 -> x - p0 -> x )		1260509	0					
ANR	1260514	IdentifierDeclType	fixed		1260509	0					
ANR	1260515	Identifier	dx		1260509	1					
ANR	1260516	AssignmentExpression	dx = any_abs ( p1 -> x - p0 -> x )		1260509	2		=			
ANR	1260517	Identifier	dx		1260509	0					
ANR	1260518	CallExpression	any_abs ( p1 -> x - p0 -> x )		1260509	1					
ANR	1260519	Callee	any_abs		1260509	0					
ANR	1260520	Identifier	any_abs		1260509	0					
ANR	1260521	ArgumentList	p1 -> x - p0 -> x		1260509	1					
ANR	1260522	Argument	p1 -> x - p0 -> x		1260509	0					
ANR	1260523	AdditiveExpression	p1 -> x - p0 -> x		1260509	0		-			
ANR	1260524	PtrMemberAccess	p1 -> x		1260509	0					
ANR	1260525	Identifier	p1		1260509	0					
ANR	1260526	Identifier	x		1260509	1					
ANR	1260527	PtrMemberAccess	p0 -> x		1260509	1					
ANR	1260528	Identifier	p0		1260509	0					
ANR	1260529	Identifier	x		1260509	1					
ANR	1260530	IdentifierDecl	dy = any_abs ( p1 -> y - p0 -> y )		1260509	1					
ANR	1260531	IdentifierDeclType	fixed		1260509	0					
ANR	1260532	Identifier	dy		1260509	1					
ANR	1260533	AssignmentExpression	dy = any_abs ( p1 -> y - p0 -> y )		1260509	2		=			
ANR	1260534	Identifier	dy		1260509	0					
ANR	1260535	CallExpression	any_abs ( p1 -> y - p0 -> y )		1260509	1					
ANR	1260536	Callee	any_abs		1260509	0					
ANR	1260537	Identifier	any_abs		1260509	0					
ANR	1260538	ArgumentList	p1 -> y - p0 -> y		1260509	1					
ANR	1260539	Argument	p1 -> y - p0 -> y		1260509	0					
ANR	1260540	AdditiveExpression	p1 -> y - p0 -> y		1260509	0		-			
ANR	1260541	PtrMemberAccess	p1 -> y		1260509	0					
ANR	1260542	Identifier	p1		1260509	0					
ANR	1260543	Identifier	y		1260509	1					
ANR	1260544	PtrMemberAccess	p0 -> y		1260509	1					
ANR	1260545	Identifier	p0		1260509	0					
ANR	1260546	Identifier	y		1260509	1					
ANR	1260547	ReturnStatement	"return max ( dx , dy ) ;"	1775:4:66074:66092	1260509	1	True				
ANR	1260548	CallExpression	"max ( dx , dy )"		1260509	0					
ANR	1260549	Callee	max		1260509	0					
ANR	1260550	Identifier	max		1260509	0					
ANR	1260551	ArgumentList	dx		1260509	1					
ANR	1260552	Argument	dx		1260509	0					
ANR	1260553	Identifier	dx		1260509	0					
ANR	1260554	Argument	dy		1260509	1					
ANR	1260555	Identifier	dy		1260509	0					
ANR	1260556	ReturnType	static inline fixed		1260509	1					
ANR	1260557	Identifier	manhattan_dist		1260509	2					
ANR	1260558	ParameterList	"const gs_fixed_point * p0 , const gs_fixed_point * p1"		1260509	3					
ANR	1260559	Parameter	const gs_fixed_point * p0	1771:15:65947:65970	1260509	0	True				
ANR	1260560	ParameterType	const gs_fixed_point *		1260509	0					
ANR	1260561	Identifier	p0		1260509	1					
ANR	1260562	Parameter	const gs_fixed_point * p1	1771:41:65973:65996	1260509	1	True				
ANR	1260563	ParameterType	const gs_fixed_point *		1260509	0					
ANR	1260564	Identifier	p1		1260509	1					
ANR	1260565	CFGEntryNode	ENTRY		1260509		True				
ANR	1260566	CFGExitNode	EXIT		1260509		True				
ANR	1260567	Symbol	p0		1260509						
ANR	1260568	Symbol	p0 -> y		1260509						
ANR	1260569	Symbol	p1		1260509						
ANR	1260570	Symbol	p0 -> x		1260509						
ANR	1260571	Symbol	dx		1260509						
ANR	1260572	Symbol	* p1		1260509						
ANR	1260573	Symbol	dy		1260509						
ANR	1260574	Symbol	* p0		1260509						
ANR	1260575	Symbol	max		1260509						
ANR	1260576	Symbol	p1 -> y		1260509						
ANR	1260577	Symbol	p1 -> x		1260509						
ANR	1260578	Symbol	any_abs		1260509						
ANR	1260579	Function	create_wedge_vertex_list	1778:0:66097:66816							
ANR	1260580	FunctionDef	"create_wedge_vertex_list (patch_fill_state_t * pfs , wedge_vertex_list_t * l , const gs_fixed_point * p0 , const gs_fixed_point * p1)"		1260579	0					
ANR	1260581	CompoundStatement		1781:0:66249:66816	1260579	0					
ANR	1260582	IfStatement	if ( l -> end != NULL )		1260579	0					
ANR	1260583	Condition	l -> end != NULL	1782:8:66259:66272	1260579	0	True				
ANR	1260584	EqualityExpression	l -> end != NULL		1260579	0		!=			
ANR	1260585	PtrMemberAccess	l -> end		1260579	0					
ANR	1260586	Identifier	l		1260579	0					
ANR	1260587	Identifier	end		1260579	1					
ANR	1260588	Identifier	NULL		1260579	1					
ANR	1260589	ExpressionStatement	return_error ( gs_error_unregistered )	1783:8:66283:66318	1260579	1	True				
ANR	1260590	CallExpression	return_error ( gs_error_unregistered )		1260579	0					
ANR	1260591	Callee	return_error		1260579	0					
ANR	1260592	Identifier	return_error		1260579	0					
ANR	1260593	ArgumentList	gs_error_unregistered		1260579	1					
ANR	1260594	Argument	gs_error_unregistered		1260579	0					
ANR	1260595	Identifier	gs_error_unregistered		1260579	0					
ANR	1260596	ExpressionStatement	l -> beg = wedge_vertex_list_elem_reserve ( pfs )	1784:4:66347:66391	1260579	1	True				
ANR	1260597	AssignmentExpression	l -> beg = wedge_vertex_list_elem_reserve ( pfs )		1260579	0		=			
ANR	1260598	PtrMemberAccess	l -> beg		1260579	0					
ANR	1260599	Identifier	l		1260579	0					
ANR	1260600	Identifier	beg		1260579	1					
ANR	1260601	CallExpression	wedge_vertex_list_elem_reserve ( pfs )		1260579	1					
ANR	1260602	Callee	wedge_vertex_list_elem_reserve		1260579	0					
ANR	1260603	Identifier	wedge_vertex_list_elem_reserve		1260579	0					
ANR	1260604	ArgumentList	pfs		1260579	1					
ANR	1260605	Argument	pfs		1260579	0					
ANR	1260606	Identifier	pfs		1260579	0					
ANR	1260607	ExpressionStatement	l -> end = wedge_vertex_list_elem_reserve ( pfs )	1785:4:66397:66441	1260579	2	True				
ANR	1260608	AssignmentExpression	l -> end = wedge_vertex_list_elem_reserve ( pfs )		1260579	0		=			
ANR	1260609	PtrMemberAccess	l -> end		1260579	0					
ANR	1260610	Identifier	l		1260579	0					
ANR	1260611	Identifier	end		1260579	1					
ANR	1260612	CallExpression	wedge_vertex_list_elem_reserve ( pfs )		1260579	1					
ANR	1260613	Callee	wedge_vertex_list_elem_reserve		1260579	0					
ANR	1260614	Identifier	wedge_vertex_list_elem_reserve		1260579	0					
ANR	1260615	ArgumentList	pfs		1260579	1					
ANR	1260616	Argument	pfs		1260579	0					
ANR	1260617	Identifier	pfs		1260579	0					
ANR	1260618	IfStatement	if ( l -> beg == NULL )		1260579	3					
ANR	1260619	Condition	l -> beg == NULL	1786:8:66451:66464	1260579	0	True				
ANR	1260620	EqualityExpression	l -> beg == NULL		1260579	0		==			
ANR	1260621	PtrMemberAccess	l -> beg		1260579	0					
ANR	1260622	Identifier	l		1260579	0					
ANR	1260623	Identifier	beg		1260579	1					
ANR	1260624	Identifier	NULL		1260579	1					
ANR	1260625	ExpressionStatement	return_error ( gs_error_unregistered )	1787:8:66475:66510	1260579	1	True				
ANR	1260626	CallExpression	return_error ( gs_error_unregistered )		1260579	0					
ANR	1260627	Callee	return_error		1260579	0					
ANR	1260628	Identifier	return_error		1260579	0					
ANR	1260629	ArgumentList	gs_error_unregistered		1260579	1					
ANR	1260630	Argument	gs_error_unregistered		1260579	0					
ANR	1260631	Identifier	gs_error_unregistered		1260579	0					
ANR	1260632	IfStatement	if ( l -> end == NULL )		1260579	4					
ANR	1260633	Condition	l -> end == NULL	1788:8:66543:66556	1260579	0	True				
ANR	1260634	EqualityExpression	l -> end == NULL		1260579	0		==			
ANR	1260635	PtrMemberAccess	l -> end		1260579	0					
ANR	1260636	Identifier	l		1260579	0					
ANR	1260637	Identifier	end		1260579	1					
ANR	1260638	Identifier	NULL		1260579	1					
ANR	1260639	ExpressionStatement	return_error ( gs_error_unregistered )	1789:8:66567:66602	1260579	1	True				
ANR	1260640	CallExpression	return_error ( gs_error_unregistered )		1260579	0					
ANR	1260641	Callee	return_error		1260579	0					
ANR	1260642	Identifier	return_error		1260579	0					
ANR	1260643	ArgumentList	gs_error_unregistered		1260579	1					
ANR	1260644	Argument	gs_error_unregistered		1260579	0					
ANR	1260645	Identifier	gs_error_unregistered		1260579	0					
ANR	1260646	ExpressionStatement	l -> beg -> prev = l -> end -> next = NULL	1790:4:66631:66665	1260579	5	True				
ANR	1260647	AssignmentExpression	l -> beg -> prev = l -> end -> next = NULL		1260579	0		=			
ANR	1260648	PtrMemberAccess	l -> beg -> prev		1260579	0					
ANR	1260649	PtrMemberAccess	l -> beg		1260579	0					
ANR	1260650	Identifier	l		1260579	0					
ANR	1260651	Identifier	beg		1260579	1					
ANR	1260652	Identifier	prev		1260579	1					
ANR	1260653	AssignmentExpression	l -> end -> next = NULL		1260579	1		=			
ANR	1260654	PtrMemberAccess	l -> end -> next		1260579	0					
ANR	1260655	PtrMemberAccess	l -> end		1260579	0					
ANR	1260656	Identifier	l		1260579	0					
ANR	1260657	Identifier	end		1260579	1					
ANR	1260658	Identifier	next		1260579	1					
ANR	1260659	Identifier	NULL		1260579	1					
ANR	1260660	ExpressionStatement	l -> beg -> next = l -> end	1791:4:66671:66692	1260579	6	True				
ANR	1260661	AssignmentExpression	l -> beg -> next = l -> end		1260579	0		=			
ANR	1260662	PtrMemberAccess	l -> beg -> next		1260579	0					
ANR	1260663	PtrMemberAccess	l -> beg		1260579	0					
ANR	1260664	Identifier	l		1260579	0					
ANR	1260665	Identifier	beg		1260579	1					
ANR	1260666	Identifier	next		1260579	1					
ANR	1260667	PtrMemberAccess	l -> end		1260579	1					
ANR	1260668	Identifier	l		1260579	0					
ANR	1260669	Identifier	end		1260579	1					
ANR	1260670	ExpressionStatement	l -> end -> prev = l -> beg	1792:4:66698:66719	1260579	7	True				
ANR	1260671	AssignmentExpression	l -> end -> prev = l -> beg		1260579	0		=			
ANR	1260672	PtrMemberAccess	l -> end -> prev		1260579	0					
ANR	1260673	PtrMemberAccess	l -> end		1260579	0					
ANR	1260674	Identifier	l		1260579	0					
ANR	1260675	Identifier	end		1260579	1					
ANR	1260676	Identifier	prev		1260579	1					
ANR	1260677	PtrMemberAccess	l -> beg		1260579	1					
ANR	1260678	Identifier	l		1260579	0					
ANR	1260679	Identifier	beg		1260579	1					
ANR	1260680	ExpressionStatement	l -> beg -> p = * p0	1793:4:66725:66740	1260579	8	True				
ANR	1260681	AssignmentExpression	l -> beg -> p = * p0		1260579	0		=			
ANR	1260682	PtrMemberAccess	l -> beg -> p		1260579	0					
ANR	1260683	PtrMemberAccess	l -> beg		1260579	0					
ANR	1260684	Identifier	l		1260579	0					
ANR	1260685	Identifier	beg		1260579	1					
ANR	1260686	Identifier	p		1260579	1					
ANR	1260687	UnaryOperationExpression	* p0		1260579	1					
ANR	1260688	UnaryOperator	*		1260579	0					
ANR	1260689	Identifier	p0		1260579	1					
ANR	1260690	ExpressionStatement	l -> end -> p = * p1	1794:4:66746:66761	1260579	9	True				
ANR	1260691	AssignmentExpression	l -> end -> p = * p1		1260579	0		=			
ANR	1260692	PtrMemberAccess	l -> end -> p		1260579	0					
ANR	1260693	PtrMemberAccess	l -> end		1260579	0					
ANR	1260694	Identifier	l		1260579	0					
ANR	1260695	Identifier	end		1260579	1					
ANR	1260696	Identifier	p		1260579	1					
ANR	1260697	UnaryOperationExpression	* p1		1260579	1					
ANR	1260698	UnaryOperator	*		1260579	0					
ANR	1260699	Identifier	p1		1260579	1					
ANR	1260700	ExpressionStatement	l -> beg -> level = l -> end -> level = 0	1795:4:66767:66800	1260579	10	True				
ANR	1260701	AssignmentExpression	l -> beg -> level = l -> end -> level = 0		1260579	0		=			
ANR	1260702	PtrMemberAccess	l -> beg -> level		1260579	0					
ANR	1260703	PtrMemberAccess	l -> beg		1260579	0					
ANR	1260704	Identifier	l		1260579	0					
ANR	1260705	Identifier	beg		1260579	1					
ANR	1260706	Identifier	level		1260579	1					
ANR	1260707	AssignmentExpression	l -> end -> level = 0		1260579	1		=			
ANR	1260708	PtrMemberAccess	l -> end -> level		1260579	0					
ANR	1260709	PtrMemberAccess	l -> end		1260579	0					
ANR	1260710	Identifier	l		1260579	0					
ANR	1260711	Identifier	end		1260579	1					
ANR	1260712	Identifier	level		1260579	1					
ANR	1260713	PrimaryExpression	0		1260579	1					
ANR	1260714	ReturnStatement	return 0 ;	1796:4:66806:66814	1260579	11	True				
ANR	1260715	PrimaryExpression	0		1260579	0					
ANR	1260716	ReturnType	static inline int		1260579	1					
ANR	1260717	Identifier	create_wedge_vertex_list		1260579	2					
ANR	1260718	ParameterList	"patch_fill_state_t * pfs , wedge_vertex_list_t * l , const gs_fixed_point * p0 , const gs_fixed_point * p1"		1260579	3					
ANR	1260719	Parameter	patch_fill_state_t * pfs	1779:25:66140:66162	1260579	0	True				
ANR	1260720	ParameterType	patch_fill_state_t *		1260579	0					
ANR	1260721	Identifier	pfs		1260579	1					
ANR	1260722	Parameter	wedge_vertex_list_t * l	1779:50:66165:66186	1260579	1	True				
ANR	1260723	ParameterType	wedge_vertex_list_t *		1260579	0					
ANR	1260724	Identifier	l		1260579	1					
ANR	1260725	Parameter	const gs_fixed_point * p0	1780:8:66197:66220	1260579	2	True				
ANR	1260726	ParameterType	const gs_fixed_point *		1260579	0					
ANR	1260727	Identifier	p0		1260579	1					
ANR	1260728	Parameter	const gs_fixed_point * p1	1780:34:66223:66246	1260579	3	True				
ANR	1260729	ParameterType	const gs_fixed_point *		1260579	0					
ANR	1260730	Identifier	p1		1260579	1					
ANR	1260731	CFGEntryNode	ENTRY		1260579		True				
ANR	1260732	CFGExitNode	EXIT		1260579		True				
ANR	1260733	Symbol	p0		1260579						
ANR	1260734	Symbol	p1		1260579						
ANR	1260735	Symbol	gs_error_unregistered		1260579						
ANR	1260736	Symbol	NULL		1260579						
ANR	1260737	Symbol	l -> beg		1260579						
ANR	1260738	Symbol	* p1		1260579						
ANR	1260739	Symbol	* p0		1260579						
ANR	1260740	Symbol	l -> end -> p		1260579						
ANR	1260741	Symbol	l -> end -> prev		1260579						
ANR	1260742	Symbol	l -> end		1260579						
ANR	1260743	Symbol	l -> end -> next		1260579						
ANR	1260744	Symbol	l		1260579						
ANR	1260745	Symbol	l -> end -> level		1260579						
ANR	1260746	Symbol	* l -> end		1260579						
ANR	1260747	Symbol	l -> beg -> p		1260579						
ANR	1260748	Symbol	l -> beg -> level		1260579						
ANR	1260749	Symbol	* l		1260579						
ANR	1260750	Symbol	l -> beg -> next		1260579						
ANR	1260751	Symbol	wedge_vertex_list_elem_reserve		1260579						
ANR	1260752	Symbol	* l -> beg		1260579						
ANR	1260753	Symbol	pfs		1260579						
ANR	1260754	Symbol	* * l		1260579						
ANR	1260755	Symbol	l -> beg -> prev		1260579						
ANR	1260756	Function	insert_wedge_vertex_list_elem	1799:0:66819:68278							
ANR	1260757	FunctionDef	"insert_wedge_vertex_list_elem (patch_fill_state_t * pfs , wedge_vertex_list_t * l , const gs_fixed_point * p , wedge_vertex_list_elem_t * * r)"		1260756	0					
ANR	1260758	CompoundStatement		1802:0:67001:68278	1260756	0					
ANR	1260759	IdentifierDeclStatement	wedge_vertex_list_elem_t * e = wedge_vertex_list_elem_reserve ( pfs ) ;	1803:4:67007:67072	1260756	0	True				
ANR	1260760	IdentifierDecl	* e = wedge_vertex_list_elem_reserve ( pfs )		1260756	0					
ANR	1260761	IdentifierDeclType	wedge_vertex_list_elem_t *		1260756	0					
ANR	1260762	Identifier	e		1260756	1					
ANR	1260763	AssignmentExpression	* e = wedge_vertex_list_elem_reserve ( pfs )		1260756	2		=			
ANR	1260764	Identifier	e		1260756	0					
ANR	1260765	CallExpression	wedge_vertex_list_elem_reserve ( pfs )		1260756	1					
ANR	1260766	Callee	wedge_vertex_list_elem_reserve		1260756	0					
ANR	1260767	Identifier	wedge_vertex_list_elem_reserve		1260756	0					
ANR	1260768	ArgumentList	pfs		1260756	1					
ANR	1260769	Argument	pfs		1260756	0					
ANR	1260770	Identifier	pfs		1260756	0					
ANR	1260771	IfStatement	if ( e == NULL )		1260756	1					
ANR	1260772	Condition	e == NULL	1807:8:67225:67233	1260756	0	True				
ANR	1260773	EqualityExpression	e == NULL		1260756	0		==			
ANR	1260774	Identifier	e		1260756	0					
ANR	1260775	Identifier	NULL		1260756	1					
ANR	1260776	ExpressionStatement	return_error ( gs_error_unregistered )	1808:8:67244:67279	1260756	1	True				
ANR	1260777	CallExpression	return_error ( gs_error_unregistered )		1260756	0					
ANR	1260778	Callee	return_error		1260756	0					
ANR	1260779	Identifier	return_error		1260756	0					
ANR	1260780	ArgumentList	gs_error_unregistered		1260756	1					
ANR	1260781	Argument	gs_error_unregistered		1260756	0					
ANR	1260782	Identifier	gs_error_unregistered		1260756	0					
ANR	1260783	IfStatement	if ( l -> beg -> next != l -> end )		1260756	2					
ANR	1260784	Condition	l -> beg -> next != l -> end	1809:8:67312:67333	1260756	0	True				
ANR	1260785	EqualityExpression	l -> beg -> next != l -> end		1260756	0		!=			
ANR	1260786	PtrMemberAccess	l -> beg -> next		1260756	0					
ANR	1260787	PtrMemberAccess	l -> beg		1260756	0					
ANR	1260788	Identifier	l		1260756	0					
ANR	1260789	Identifier	beg		1260756	1					
ANR	1260790	Identifier	next		1260756	1					
ANR	1260791	PtrMemberAccess	l -> end		1260756	1					
ANR	1260792	Identifier	l		1260756	0					
ANR	1260793	Identifier	end		1260756	1					
ANR	1260794	ExpressionStatement	return_error ( gs_error_unregistered )	1810:8:67344:67379	1260756	1	True				
ANR	1260795	CallExpression	return_error ( gs_error_unregistered )		1260756	0					
ANR	1260796	Callee	return_error		1260756	0					
ANR	1260797	Identifier	return_error		1260756	0					
ANR	1260798	ArgumentList	gs_error_unregistered		1260756	1					
ANR	1260799	Argument	gs_error_unregistered		1260756	0					
ANR	1260800	Identifier	gs_error_unregistered		1260756	0					
ANR	1260801	IfStatement	if ( l -> end -> prev != l -> beg )		1260756	3					
ANR	1260802	Condition	l -> end -> prev != l -> beg	1811:8:67412:67433	1260756	0	True				
ANR	1260803	EqualityExpression	l -> end -> prev != l -> beg		1260756	0		!=			
ANR	1260804	PtrMemberAccess	l -> end -> prev		1260756	0					
ANR	1260805	PtrMemberAccess	l -> end		1260756	0					
ANR	1260806	Identifier	l		1260756	0					
ANR	1260807	Identifier	end		1260756	1					
ANR	1260808	Identifier	prev		1260756	1					
ANR	1260809	PtrMemberAccess	l -> beg		1260756	1					
ANR	1260810	Identifier	l		1260756	0					
ANR	1260811	Identifier	beg		1260756	1					
ANR	1260812	ExpressionStatement	return_error ( gs_error_unregistered )	1812:8:67444:67479	1260756	1	True				
ANR	1260813	CallExpression	return_error ( gs_error_unregistered )		1260756	0					
ANR	1260814	Callee	return_error		1260756	0					
ANR	1260815	Identifier	return_error		1260756	0					
ANR	1260816	ArgumentList	gs_error_unregistered		1260756	1					
ANR	1260817	Argument	gs_error_unregistered		1260756	0					
ANR	1260818	Identifier	gs_error_unregistered		1260756	0					
ANR	1260819	ExpressionStatement	e -> next = l -> end	1813:4:67508:67524	1260756	4	True				
ANR	1260820	AssignmentExpression	e -> next = l -> end		1260756	0		=			
ANR	1260821	PtrMemberAccess	e -> next		1260756	0					
ANR	1260822	Identifier	e		1260756	0					
ANR	1260823	Identifier	next		1260756	1					
ANR	1260824	PtrMemberAccess	l -> end		1260756	1					
ANR	1260825	Identifier	l		1260756	0					
ANR	1260826	Identifier	end		1260756	1					
ANR	1260827	ExpressionStatement	e -> prev = l -> beg	1814:4:67530:67546	1260756	5	True				
ANR	1260828	AssignmentExpression	e -> prev = l -> beg		1260756	0		=			
ANR	1260829	PtrMemberAccess	e -> prev		1260756	0					
ANR	1260830	Identifier	e		1260756	0					
ANR	1260831	Identifier	prev		1260756	1					
ANR	1260832	PtrMemberAccess	l -> beg		1260756	1					
ANR	1260833	Identifier	l		1260756	0					
ANR	1260834	Identifier	beg		1260756	1					
ANR	1260835	ExpressionStatement	e -> p = * p	1815:4:67552:67561	1260756	6	True				
ANR	1260836	AssignmentExpression	e -> p = * p		1260756	0		=			
ANR	1260837	PtrMemberAccess	e -> p		1260756	0					
ANR	1260838	Identifier	e		1260756	0					
ANR	1260839	Identifier	p		1260756	1					
ANR	1260840	UnaryOperationExpression	* p		1260756	1					
ANR	1260841	UnaryOperator	*		1260756	0					
ANR	1260842	Identifier	p		1260756	1					
ANR	1260843	ExpressionStatement	"e -> level = max ( l -> beg -> level , l -> end -> level ) + 1"	1816:4:67567:67615	1260756	7	True				
ANR	1260844	AssignmentExpression	"e -> level = max ( l -> beg -> level , l -> end -> level ) + 1"		1260756	0		=			
ANR	1260845	PtrMemberAccess	e -> level		1260756	0					
ANR	1260846	Identifier	e		1260756	0					
ANR	1260847	Identifier	level		1260756	1					
ANR	1260848	AdditiveExpression	"max ( l -> beg -> level , l -> end -> level ) + 1"		1260756	1		+			
ANR	1260849	CallExpression	"max ( l -> beg -> level , l -> end -> level )"		1260756	0					
ANR	1260850	Callee	max		1260756	0					
ANR	1260851	Identifier	max		1260756	0					
ANR	1260852	ArgumentList	l -> beg -> level		1260756	1					
ANR	1260853	Argument	l -> beg -> level		1260756	0					
ANR	1260854	PtrMemberAccess	l -> beg -> level		1260756	0					
ANR	1260855	PtrMemberAccess	l -> beg		1260756	0					
ANR	1260856	Identifier	l		1260756	0					
ANR	1260857	Identifier	beg		1260756	1					
ANR	1260858	Identifier	level		1260756	1					
ANR	1260859	Argument	l -> end -> level		1260756	1					
ANR	1260860	PtrMemberAccess	l -> end -> level		1260756	0					
ANR	1260861	PtrMemberAccess	l -> end		1260756	0					
ANR	1260862	Identifier	l		1260756	0					
ANR	1260863	Identifier	end		1260756	1					
ANR	1260864	Identifier	level		1260756	1					
ANR	1260865	PrimaryExpression	1		1260756	1					
ANR	1260866	ExpressionStatement	e -> divide_count = 0	1817:4:67621:67640	1260756	8	True				
ANR	1260867	AssignmentExpression	e -> divide_count = 0		1260756	0		=			
ANR	1260868	PtrMemberAccess	e -> divide_count		1260756	0					
ANR	1260869	Identifier	e		1260756	0					
ANR	1260870	Identifier	divide_count		1260756	1					
ANR	1260871	PrimaryExpression	0		1260756	1					
ANR	1260872	ExpressionStatement	l -> beg -> next = l -> end -> prev = e	1818:4:67646:67677	1260756	9	True				
ANR	1260873	AssignmentExpression	l -> beg -> next = l -> end -> prev = e		1260756	0		=			
ANR	1260874	PtrMemberAccess	l -> beg -> next		1260756	0					
ANR	1260875	PtrMemberAccess	l -> beg		1260756	0					
ANR	1260876	Identifier	l		1260756	0					
ANR	1260877	Identifier	beg		1260756	1					
ANR	1260878	Identifier	next		1260756	1					
ANR	1260879	AssignmentExpression	l -> end -> prev = e		1260756	1		=			
ANR	1260880	PtrMemberAccess	l -> end -> prev		1260756	0					
ANR	1260881	PtrMemberAccess	l -> end		1260756	0					
ANR	1260882	Identifier	l		1260756	0					
ANR	1260883	Identifier	end		1260756	1					
ANR	1260884	Identifier	prev		1260756	1					
ANR	1260885	Identifier	e		1260756	1					
ANR	1260886	CompoundStatement		19:8:738:781	1260756	10					
ANR	1260887	IdentifierDeclStatement	int sx = l -> beg -> p . x < l -> end -> p . x ? 1 : - 1 ;	1819:8:67687:67730	1260756	0	True				
ANR	1260888	IdentifierDecl	sx = l -> beg -> p . x < l -> end -> p . x ? 1 : - 1		1260756	0					
ANR	1260889	IdentifierDeclType	int		1260756	0					
ANR	1260890	Identifier	sx		1260756	1					
ANR	1260891	AssignmentExpression	sx = l -> beg -> p . x < l -> end -> p . x ? 1 : - 1		1260756	2		=			
ANR	1260892	Identifier	sx		1260756	0					
ANR	1260893	ConditionalExpression	l -> beg -> p . x < l -> end -> p . x ? 1 : - 1		1260756	1					
ANR	1260894	Condition	l -> beg -> p . x < l -> end -> p . x		1260756	0					
ANR	1260895	RelationalExpression	l -> beg -> p . x < l -> end -> p . x		1260756	0		<			
ANR	1260896	MemberAccess	l -> beg -> p . x		1260756	0					
ANR	1260897	PtrMemberAccess	l -> beg -> p		1260756	0					
ANR	1260898	PtrMemberAccess	l -> beg		1260756	0					
ANR	1260899	Identifier	l		1260756	0					
ANR	1260900	Identifier	beg		1260756	1					
ANR	1260901	Identifier	p		1260756	1					
ANR	1260902	Identifier	x		1260756	1					
ANR	1260903	MemberAccess	l -> end -> p . x		1260756	1					
ANR	1260904	PtrMemberAccess	l -> end -> p		1260756	0					
ANR	1260905	PtrMemberAccess	l -> end		1260756	0					
ANR	1260906	Identifier	l		1260756	0					
ANR	1260907	Identifier	end		1260756	1					
ANR	1260908	Identifier	p		1260756	1					
ANR	1260909	Identifier	x		1260756	1					
ANR	1260910	PrimaryExpression	1		1260756	1					
ANR	1260911	UnaryOperationExpression	- 1		1260756	2					
ANR	1260912	UnaryOperator	-		1260756	0					
ANR	1260913	PrimaryExpression	1		1260756	1					
ANR	1260914	IdentifierDeclStatement	int sy = l -> beg -> p . y < l -> end -> p . y ? 1 : - 1 ;	1820:8:67740:67783	1260756	1	True				
ANR	1260915	IdentifierDecl	sy = l -> beg -> p . y < l -> end -> p . y ? 1 : - 1		1260756	0					
ANR	1260916	IdentifierDeclType	int		1260756	0					
ANR	1260917	Identifier	sy		1260756	1					
ANR	1260918	AssignmentExpression	sy = l -> beg -> p . y < l -> end -> p . y ? 1 : - 1		1260756	2		=			
ANR	1260919	Identifier	sy		1260756	0					
ANR	1260920	ConditionalExpression	l -> beg -> p . y < l -> end -> p . y ? 1 : - 1		1260756	1					
ANR	1260921	Condition	l -> beg -> p . y < l -> end -> p . y		1260756	0					
ANR	1260922	RelationalExpression	l -> beg -> p . y < l -> end -> p . y		1260756	0		<			
ANR	1260923	MemberAccess	l -> beg -> p . y		1260756	0					
ANR	1260924	PtrMemberAccess	l -> beg -> p		1260756	0					
ANR	1260925	PtrMemberAccess	l -> beg		1260756	0					
ANR	1260926	Identifier	l		1260756	0					
ANR	1260927	Identifier	beg		1260756	1					
ANR	1260928	Identifier	p		1260756	1					
ANR	1260929	Identifier	y		1260756	1					
ANR	1260930	MemberAccess	l -> end -> p . y		1260756	1					
ANR	1260931	PtrMemberAccess	l -> end -> p		1260756	0					
ANR	1260932	PtrMemberAccess	l -> end		1260756	0					
ANR	1260933	Identifier	l		1260756	0					
ANR	1260934	Identifier	end		1260756	1					
ANR	1260935	Identifier	p		1260756	1					
ANR	1260936	Identifier	y		1260756	1					
ANR	1260937	PrimaryExpression	1		1260756	1					
ANR	1260938	UnaryOperationExpression	- 1		1260756	2					
ANR	1260939	UnaryOperator	-		1260756	0					
ANR	1260940	PrimaryExpression	1		1260756	1					
ANR	1260941	IfStatement	if ( ( p -> x - l -> beg -> p . x ) * sx < 0 )		1260756	2					
ANR	1260942	Condition	( p -> x - l -> beg -> p . x ) * sx < 0	1822:12:67798:67826	1260756	0	True				
ANR	1260943	RelationalExpression	( p -> x - l -> beg -> p . x ) * sx < 0		1260756	0		<			
ANR	1260944	MultiplicativeExpression	( p -> x - l -> beg -> p . x ) * sx		1260756	0		*			
ANR	1260945	AdditiveExpression	p -> x - l -> beg -> p . x		1260756	0		-			
ANR	1260946	PtrMemberAccess	p -> x		1260756	0					
ANR	1260947	Identifier	p		1260756	0					
ANR	1260948	Identifier	x		1260756	1					
ANR	1260949	MemberAccess	l -> beg -> p . x		1260756	1					
ANR	1260950	PtrMemberAccess	l -> beg -> p		1260756	0					
ANR	1260951	PtrMemberAccess	l -> beg		1260756	0					
ANR	1260952	Identifier	l		1260756	0					
ANR	1260953	Identifier	beg		1260756	1					
ANR	1260954	Identifier	p		1260756	1					
ANR	1260955	Identifier	x		1260756	1					
ANR	1260956	Identifier	sx		1260756	1					
ANR	1260957	PrimaryExpression	0		1260756	1					
ANR	1260958	ExpressionStatement	return_error ( gs_error_unregistered )	1823:12:67841:67876	1260756	1	True				
ANR	1260959	CallExpression	return_error ( gs_error_unregistered )		1260756	0					
ANR	1260960	Callee	return_error		1260756	0					
ANR	1260961	Identifier	return_error		1260756	0					
ANR	1260962	ArgumentList	gs_error_unregistered		1260756	1					
ANR	1260963	Argument	gs_error_unregistered		1260756	0					
ANR	1260964	Identifier	gs_error_unregistered		1260756	0					
ANR	1260965	IfStatement	if ( ( p -> y - l -> beg -> p . y ) * sy < 0 )		1260756	3					
ANR	1260966	Condition	( p -> y - l -> beg -> p . y ) * sy < 0	1824:12:67913:67941	1260756	0	True				
ANR	1260967	RelationalExpression	( p -> y - l -> beg -> p . y ) * sy < 0		1260756	0		<			
ANR	1260968	MultiplicativeExpression	( p -> y - l -> beg -> p . y ) * sy		1260756	0		*			
ANR	1260969	AdditiveExpression	p -> y - l -> beg -> p . y		1260756	0		-			
ANR	1260970	PtrMemberAccess	p -> y		1260756	0					
ANR	1260971	Identifier	p		1260756	0					
ANR	1260972	Identifier	y		1260756	1					
ANR	1260973	MemberAccess	l -> beg -> p . y		1260756	1					
ANR	1260974	PtrMemberAccess	l -> beg -> p		1260756	0					
ANR	1260975	PtrMemberAccess	l -> beg		1260756	0					
ANR	1260976	Identifier	l		1260756	0					
ANR	1260977	Identifier	beg		1260756	1					
ANR	1260978	Identifier	p		1260756	1					
ANR	1260979	Identifier	y		1260756	1					
ANR	1260980	Identifier	sy		1260756	1					
ANR	1260981	PrimaryExpression	0		1260756	1					
ANR	1260982	ExpressionStatement	return_error ( gs_error_unregistered )	1825:12:67956:67991	1260756	1	True				
ANR	1260983	CallExpression	return_error ( gs_error_unregistered )		1260756	0					
ANR	1260984	Callee	return_error		1260756	0					
ANR	1260985	Identifier	return_error		1260756	0					
ANR	1260986	ArgumentList	gs_error_unregistered		1260756	1					
ANR	1260987	Argument	gs_error_unregistered		1260756	0					
ANR	1260988	Identifier	gs_error_unregistered		1260756	0					
ANR	1260989	IfStatement	if ( ( l -> end -> p . x - p -> x ) * sx < 0 )		1260756	4					
ANR	1260990	Condition	( l -> end -> p . x - p -> x ) * sx < 0	1826:12:68028:68056	1260756	0	True				
ANR	1260991	RelationalExpression	( l -> end -> p . x - p -> x ) * sx < 0		1260756	0		<			
ANR	1260992	MultiplicativeExpression	( l -> end -> p . x - p -> x ) * sx		1260756	0		*			
ANR	1260993	AdditiveExpression	l -> end -> p . x - p -> x		1260756	0		-			
ANR	1260994	MemberAccess	l -> end -> p . x		1260756	0					
ANR	1260995	PtrMemberAccess	l -> end -> p		1260756	0					
ANR	1260996	PtrMemberAccess	l -> end		1260756	0					
ANR	1260997	Identifier	l		1260756	0					
ANR	1260998	Identifier	end		1260756	1					
ANR	1260999	Identifier	p		1260756	1					
ANR	1261000	Identifier	x		1260756	1					
ANR	1261001	PtrMemberAccess	p -> x		1260756	1					
ANR	1261002	Identifier	p		1260756	0					
ANR	1261003	Identifier	x		1260756	1					
ANR	1261004	Identifier	sx		1260756	1					
ANR	1261005	PrimaryExpression	0		1260756	1					
ANR	1261006	ExpressionStatement	return_error ( gs_error_unregistered )	1827:12:68071:68106	1260756	1	True				
ANR	1261007	CallExpression	return_error ( gs_error_unregistered )		1260756	0					
ANR	1261008	Callee	return_error		1260756	0					
ANR	1261009	Identifier	return_error		1260756	0					
ANR	1261010	ArgumentList	gs_error_unregistered		1260756	1					
ANR	1261011	Argument	gs_error_unregistered		1260756	0					
ANR	1261012	Identifier	gs_error_unregistered		1260756	0					
ANR	1261013	IfStatement	if ( ( l -> end -> p . y - p -> y ) * sy < 0 )		1260756	5					
ANR	1261014	Condition	( l -> end -> p . y - p -> y ) * sy < 0	1828:12:68143:68171	1260756	0	True				
ANR	1261015	RelationalExpression	( l -> end -> p . y - p -> y ) * sy < 0		1260756	0		<			
ANR	1261016	MultiplicativeExpression	( l -> end -> p . y - p -> y ) * sy		1260756	0		*			
ANR	1261017	AdditiveExpression	l -> end -> p . y - p -> y		1260756	0		-			
ANR	1261018	MemberAccess	l -> end -> p . y		1260756	0					
ANR	1261019	PtrMemberAccess	l -> end -> p		1260756	0					
ANR	1261020	PtrMemberAccess	l -> end		1260756	0					
ANR	1261021	Identifier	l		1260756	0					
ANR	1261022	Identifier	end		1260756	1					
ANR	1261023	Identifier	p		1260756	1					
ANR	1261024	Identifier	y		1260756	1					
ANR	1261025	PtrMemberAccess	p -> y		1260756	1					
ANR	1261026	Identifier	p		1260756	0					
ANR	1261027	Identifier	y		1260756	1					
ANR	1261028	Identifier	sy		1260756	1					
ANR	1261029	PrimaryExpression	0		1260756	1					
ANR	1261030	ExpressionStatement	return_error ( gs_error_unregistered )	1829:12:68186:68221	1260756	1	True				
ANR	1261031	CallExpression	return_error ( gs_error_unregistered )		1260756	0					
ANR	1261032	Callee	return_error		1260756	0					
ANR	1261033	Identifier	return_error		1260756	0					
ANR	1261034	ArgumentList	gs_error_unregistered		1260756	1					
ANR	1261035	Argument	gs_error_unregistered		1260756	0					
ANR	1261036	Identifier	gs_error_unregistered		1260756	0					
ANR	1261037	ExpressionStatement	* r = e	1831:4:68256:68262	1260756	11	True				
ANR	1261038	AssignmentExpression	* r = e		1260756	0		=			
ANR	1261039	UnaryOperationExpression	* r		1260756	0					
ANR	1261040	UnaryOperator	*		1260756	0					
ANR	1261041	Identifier	r		1260756	1					
ANR	1261042	Identifier	e		1260756	1					
ANR	1261043	ReturnStatement	return 0 ;	1832:4:68268:68276	1260756	12	True				
ANR	1261044	PrimaryExpression	0		1260756	0					
ANR	1261045	ReturnType	static inline int		1260756	1					
ANR	1261046	Identifier	insert_wedge_vertex_list_elem		1260756	2					
ANR	1261047	ParameterList	"patch_fill_state_t * pfs , wedge_vertex_list_t * l , const gs_fixed_point * p , wedge_vertex_list_elem_t * * r"		1260756	3					
ANR	1261048	Parameter	patch_fill_state_t * pfs	1800:30:66867:66889	1260756	0	True				
ANR	1261049	ParameterType	patch_fill_state_t *		1260756	0					
ANR	1261050	Identifier	pfs		1260756	1					
ANR	1261051	Parameter	wedge_vertex_list_t * l	1800:55:66892:66913	1260756	1	True				
ANR	1261052	ParameterType	wedge_vertex_list_t *		1260756	0					
ANR	1261053	Identifier	l		1260756	1					
ANR	1261054	Parameter	const gs_fixed_point * p	1801:30:66946:66968	1260756	2	True				
ANR	1261055	ParameterType	const gs_fixed_point *		1260756	0					
ANR	1261056	Identifier	p		1260756	1					
ANR	1261057	Parameter	wedge_vertex_list_elem_t * * r	1801:55:66971:66998	1260756	3	True				
ANR	1261058	ParameterType	wedge_vertex_list_elem_t * *		1260756	0					
ANR	1261059	Identifier	r		1260756	1					
ANR	1261060	CFGEntryNode	ENTRY		1260756		True				
ANR	1261061	CFGExitNode	EXIT		1260756		True				
ANR	1261062	Symbol	gs_error_unregistered		1260756						
ANR	1261063	Symbol	l -> beg		1260756						
ANR	1261064	Symbol	l -> end -> p		1260756						
ANR	1261065	Symbol	l -> end -> prev		1260756						
ANR	1261066	Symbol	e -> divide_count		1260756						
ANR	1261067	Symbol	p -> y		1260756						
ANR	1261068	Symbol	l -> beg -> p . x		1260756						
ANR	1261069	Symbol	p -> x		1260756						
ANR	1261070	Symbol	l -> beg -> p . y		1260756						
ANR	1261071	Symbol	l -> beg -> p		1260756						
ANR	1261072	Symbol	wedge_vertex_list_elem_reserve		1260756						
ANR	1261073	Symbol	* l -> beg		1260756						
ANR	1261074	Symbol	* * l		1260756						
ANR	1261075	Symbol	NULL		1260756						
ANR	1261076	Symbol	e		1260756						
ANR	1261077	Symbol	max		1260756						
ANR	1261078	Symbol	sx		1260756						
ANR	1261079	Symbol	e -> prev		1260756						
ANR	1261080	Symbol	sy		1260756						
ANR	1261081	Symbol	e -> next		1260756						
ANR	1261082	Symbol	l -> end		1260756						
ANR	1261083	Symbol	e -> level		1260756						
ANR	1261084	Symbol	l		1260756						
ANR	1261085	Symbol	e -> p		1260756						
ANR	1261086	Symbol	l -> end -> level		1260756						
ANR	1261087	Symbol	* e		1260756						
ANR	1261088	Symbol	p		1260756						
ANR	1261089	Symbol	r		1260756						
ANR	1261090	Symbol	* l -> end		1260756						
ANR	1261091	Symbol	l -> beg -> level		1260756						
ANR	1261092	Symbol	l -> end -> p . x		1260756						
ANR	1261093	Symbol	* l		1260756						
ANR	1261094	Symbol	l -> beg -> next		1260756						
ANR	1261095	Symbol	* p		1260756						
ANR	1261096	Symbol	l -> end -> p . y		1260756						
ANR	1261097	Symbol	pfs		1260756						
ANR	1261098	Symbol	* r		1260756						
ANR	1261099	Function	open_wedge_median	1835:0:68281:70621							
ANR	1261100	FunctionDef	"open_wedge_median (patch_fill_state_t * pfs , wedge_vertex_list_t * l , const gs_fixed_point * p0 , const gs_fixed_point * p1 , const gs_fixed_point * pm , wedge_vertex_list_elem_t * * r)"		1261099	0					
ANR	1261101	CompoundStatement		1839:0:68490:70621	1261099	0					
ANR	1261102	IdentifierDeclStatement	wedge_vertex_list_elem_t * e ;	1840:4:68496:68523	1261099	0	True				
ANR	1261103	IdentifierDecl	* e		1261099	0					
ANR	1261104	IdentifierDeclType	wedge_vertex_list_elem_t *		1261099	0					
ANR	1261105	Identifier	e		1261099	1					
ANR	1261106	IdentifierDeclStatement	int code ;	1841:4:68529:68537	1261099	1	True				
ANR	1261107	IdentifierDecl	code		1261099	0					
ANR	1261108	IdentifierDeclType	int		1261099	0					
ANR	1261109	Identifier	code		1261099	1					
ANR	1261110	IfStatement	if ( ! l -> last_side )		1261099	2					
ANR	1261111	Condition	! l -> last_side	1843:8:68548:68560	1261099	0	True				
ANR	1261112	UnaryOperationExpression	! l -> last_side		1261099	0					
ANR	1261113	UnaryOperator	!		1261099	0					
ANR	1261114	PtrMemberAccess	l -> last_side		1261099	1					
ANR	1261115	Identifier	l		1261099	0					
ANR	1261116	Identifier	last_side		1261099	1					
ANR	1261117	CompoundStatement		5:23:72:72	1261099	1					
ANR	1261118	IfStatement	if ( l -> beg == NULL )		1261099	0					
ANR	1261119	Condition	l -> beg == NULL	1844:12:68577:68590	1261099	0	True				
ANR	1261120	EqualityExpression	l -> beg == NULL		1261099	0		==			
ANR	1261121	PtrMemberAccess	l -> beg		1261099	0					
ANR	1261122	Identifier	l		1261099	0					
ANR	1261123	Identifier	beg		1261099	1					
ANR	1261124	Identifier	NULL		1261099	1					
ANR	1261125	CompoundStatement		6:28:102:102	1261099	1					
ANR	1261126	ExpressionStatement	"code = create_wedge_vertex_list ( pfs , l , p0 , p1 )"	1845:12:68607:68654	1261099	0	True				
ANR	1261127	AssignmentExpression	"code = create_wedge_vertex_list ( pfs , l , p0 , p1 )"		1261099	0		=			
ANR	1261128	Identifier	code		1261099	0					
ANR	1261129	CallExpression	"create_wedge_vertex_list ( pfs , l , p0 , p1 )"		1261099	1					
ANR	1261130	Callee	create_wedge_vertex_list		1261099	0					
ANR	1261131	Identifier	create_wedge_vertex_list		1261099	0					
ANR	1261132	ArgumentList	pfs		1261099	1					
ANR	1261133	Argument	pfs		1261099	0					
ANR	1261134	Identifier	pfs		1261099	0					
ANR	1261135	Argument	l		1261099	1					
ANR	1261136	Identifier	l		1261099	0					
ANR	1261137	Argument	p0		1261099	2					
ANR	1261138	Identifier	p0		1261099	0					
ANR	1261139	Argument	p1		1261099	3					
ANR	1261140	Identifier	p1		1261099	0					
ANR	1261141	IfStatement	if ( code < 0 )		1261099	1					
ANR	1261142	Condition	code < 0	1846:16:68672:68679	1261099	0	True				
ANR	1261143	RelationalExpression	code < 0		1261099	0		<			
ANR	1261144	Identifier	code		1261099	0					
ANR	1261145	PrimaryExpression	0		1261099	1					
ANR	1261146	ReturnStatement	return code ;	1847:16:68698:68709	1261099	1	True				
ANR	1261147	Identifier	code		1261099	0					
ANR	1261148	IfStatement	if ( l -> beg -> p . x != p0 -> x )		1261099	1					
ANR	1261149	Condition	l -> beg -> p . x != p0 -> x	1849:12:68733:68752	1261099	0	True				
ANR	1261150	EqualityExpression	l -> beg -> p . x != p0 -> x		1261099	0		!=			
ANR	1261151	MemberAccess	l -> beg -> p . x		1261099	0					
ANR	1261152	PtrMemberAccess	l -> beg -> p		1261099	0					
ANR	1261153	PtrMemberAccess	l -> beg		1261099	0					
ANR	1261154	Identifier	l		1261099	0					
ANR	1261155	Identifier	beg		1261099	1					
ANR	1261156	Identifier	p		1261099	1					
ANR	1261157	Identifier	x		1261099	1					
ANR	1261158	PtrMemberAccess	p0 -> x		1261099	1					
ANR	1261159	Identifier	p0		1261099	0					
ANR	1261160	Identifier	x		1261099	1					
ANR	1261161	ExpressionStatement	return_error ( gs_error_unregistered )	1850:12:68767:68802	1261099	1	True				
ANR	1261162	CallExpression	return_error ( gs_error_unregistered )		1261099	0					
ANR	1261163	Callee	return_error		1261099	0					
ANR	1261164	Identifier	return_error		1261099	0					
ANR	1261165	ArgumentList	gs_error_unregistered		1261099	1					
ANR	1261166	Argument	gs_error_unregistered		1261099	0					
ANR	1261167	Identifier	gs_error_unregistered		1261099	0					
ANR	1261168	IfStatement	if ( l -> beg -> p . y != p0 -> y )		1261099	2					
ANR	1261169	Condition	l -> beg -> p . y != p0 -> y	1851:12:68839:68858	1261099	0	True				
ANR	1261170	EqualityExpression	l -> beg -> p . y != p0 -> y		1261099	0		!=			
ANR	1261171	MemberAccess	l -> beg -> p . y		1261099	0					
ANR	1261172	PtrMemberAccess	l -> beg -> p		1261099	0					
ANR	1261173	PtrMemberAccess	l -> beg		1261099	0					
ANR	1261174	Identifier	l		1261099	0					
ANR	1261175	Identifier	beg		1261099	1					
ANR	1261176	Identifier	p		1261099	1					
ANR	1261177	Identifier	y		1261099	1					
ANR	1261178	PtrMemberAccess	p0 -> y		1261099	1					
ANR	1261179	Identifier	p0		1261099	0					
ANR	1261180	Identifier	y		1261099	1					
ANR	1261181	ExpressionStatement	return_error ( gs_error_unregistered )	1852:12:68873:68908	1261099	1	True				
ANR	1261182	CallExpression	return_error ( gs_error_unregistered )		1261099	0					
ANR	1261183	Callee	return_error		1261099	0					
ANR	1261184	Identifier	return_error		1261099	0					
ANR	1261185	ArgumentList	gs_error_unregistered		1261099	1					
ANR	1261186	Argument	gs_error_unregistered		1261099	0					
ANR	1261187	Identifier	gs_error_unregistered		1261099	0					
ANR	1261188	IfStatement	if ( l -> end -> p . x != p1 -> x )		1261099	3					
ANR	1261189	Condition	l -> end -> p . x != p1 -> x	1853:12:68945:68964	1261099	0	True				
ANR	1261190	EqualityExpression	l -> end -> p . x != p1 -> x		1261099	0		!=			
ANR	1261191	MemberAccess	l -> end -> p . x		1261099	0					
ANR	1261192	PtrMemberAccess	l -> end -> p		1261099	0					
ANR	1261193	PtrMemberAccess	l -> end		1261099	0					
ANR	1261194	Identifier	l		1261099	0					
ANR	1261195	Identifier	end		1261099	1					
ANR	1261196	Identifier	p		1261099	1					
ANR	1261197	Identifier	x		1261099	1					
ANR	1261198	PtrMemberAccess	p1 -> x		1261099	1					
ANR	1261199	Identifier	p1		1261099	0					
ANR	1261200	Identifier	x		1261099	1					
ANR	1261201	ExpressionStatement	return_error ( gs_error_unregistered )	1854:12:68979:69014	1261099	1	True				
ANR	1261202	CallExpression	return_error ( gs_error_unregistered )		1261099	0					
ANR	1261203	Callee	return_error		1261099	0					
ANR	1261204	Identifier	return_error		1261099	0					
ANR	1261205	ArgumentList	gs_error_unregistered		1261099	1					
ANR	1261206	Argument	gs_error_unregistered		1261099	0					
ANR	1261207	Identifier	gs_error_unregistered		1261099	0					
ANR	1261208	IfStatement	if ( l -> end -> p . y != p1 -> y )		1261099	4					
ANR	1261209	Condition	l -> end -> p . y != p1 -> y	1855:12:69051:69070	1261099	0	True				
ANR	1261210	EqualityExpression	l -> end -> p . y != p1 -> y		1261099	0		!=			
ANR	1261211	MemberAccess	l -> end -> p . y		1261099	0					
ANR	1261212	PtrMemberAccess	l -> end -> p		1261099	0					
ANR	1261213	PtrMemberAccess	l -> end		1261099	0					
ANR	1261214	Identifier	l		1261099	0					
ANR	1261215	Identifier	end		1261099	1					
ANR	1261216	Identifier	p		1261099	1					
ANR	1261217	Identifier	y		1261099	1					
ANR	1261218	PtrMemberAccess	p1 -> y		1261099	1					
ANR	1261219	Identifier	p1		1261099	0					
ANR	1261220	Identifier	y		1261099	1					
ANR	1261221	ExpressionStatement	return_error ( gs_error_unregistered )	1856:12:69085:69120	1261099	1	True				
ANR	1261222	CallExpression	return_error ( gs_error_unregistered )		1261099	0					
ANR	1261223	Callee	return_error		1261099	0					
ANR	1261224	Identifier	return_error		1261099	0					
ANR	1261225	ArgumentList	gs_error_unregistered		1261099	1					
ANR	1261226	Argument	gs_error_unregistered		1261099	0					
ANR	1261227	Identifier	gs_error_unregistered		1261099	0					
ANR	1261228	ExpressionStatement	"code = insert_wedge_vertex_list_elem ( pfs , l , pm , & e )"	1857:8:69153:69205	1261099	5	True				
ANR	1261229	AssignmentExpression	"code = insert_wedge_vertex_list_elem ( pfs , l , pm , & e )"		1261099	0		=			
ANR	1261230	Identifier	code		1261099	0					
ANR	1261231	CallExpression	"insert_wedge_vertex_list_elem ( pfs , l , pm , & e )"		1261099	1					
ANR	1261232	Callee	insert_wedge_vertex_list_elem		1261099	0					
ANR	1261233	Identifier	insert_wedge_vertex_list_elem		1261099	0					
ANR	1261234	ArgumentList	pfs		1261099	1					
ANR	1261235	Argument	pfs		1261099	0					
ANR	1261236	Identifier	pfs		1261099	0					
ANR	1261237	Argument	l		1261099	1					
ANR	1261238	Identifier	l		1261099	0					
ANR	1261239	Argument	pm		1261099	2					
ANR	1261240	Identifier	pm		1261099	0					
ANR	1261241	Argument	& e		1261099	3					
ANR	1261242	UnaryOperationExpression	& e		1261099	0					
ANR	1261243	UnaryOperator	&		1261099	0					
ANR	1261244	Identifier	e		1261099	1					
ANR	1261245	IfStatement	if ( code < 0 )		1261099	6					
ANR	1261246	Condition	code < 0	1858:12:69219:69226	1261099	0	True				
ANR	1261247	RelationalExpression	code < 0		1261099	0		<			
ANR	1261248	Identifier	code		1261099	0					
ANR	1261249	PrimaryExpression	0		1261099	1					
ANR	1261250	ReturnStatement	return code ;	1859:12:69241:69252	1261099	1	True				
ANR	1261251	Identifier	code		1261099	0					
ANR	1261252	ExpressionStatement	e -> divide_count ++	1860:8:69262:69279	1261099	7	True				
ANR	1261253	PostIncDecOperationExpression	e -> divide_count ++		1261099	0					
ANR	1261254	PtrMemberAccess	e -> divide_count		1261099	0					
ANR	1261255	Identifier	e		1261099	0					
ANR	1261256	Identifier	divide_count		1261099	1					
ANR	1261257	IncDec	++		1261099	1					
ANR	1261258	ElseStatement	else		1261099	0					
ANR	1261259	IfStatement	if ( l -> beg == NULL )		1261099	0					
ANR	1261260	Condition	l -> beg == NULL	1861:15:69296:69309	1261099	0	True				
ANR	1261261	EqualityExpression	l -> beg == NULL		1261099	0		==			
ANR	1261262	PtrMemberAccess	l -> beg		1261099	0					
ANR	1261263	Identifier	l		1261099	0					
ANR	1261264	Identifier	beg		1261099	1					
ANR	1261265	Identifier	NULL		1261099	1					
ANR	1261266	CompoundStatement		23:31:821:821	1261099	1					
ANR	1261267	ExpressionStatement	"code = create_wedge_vertex_list ( pfs , l , p1 , p0 )"	1862:8:69322:69369	1261099	0	True				
ANR	1261268	AssignmentExpression	"code = create_wedge_vertex_list ( pfs , l , p1 , p0 )"		1261099	0		=			
ANR	1261269	Identifier	code		1261099	0					
ANR	1261270	CallExpression	"create_wedge_vertex_list ( pfs , l , p1 , p0 )"		1261099	1					
ANR	1261271	Callee	create_wedge_vertex_list		1261099	0					
ANR	1261272	Identifier	create_wedge_vertex_list		1261099	0					
ANR	1261273	ArgumentList	pfs		1261099	1					
ANR	1261274	Argument	pfs		1261099	0					
ANR	1261275	Identifier	pfs		1261099	0					
ANR	1261276	Argument	l		1261099	1					
ANR	1261277	Identifier	l		1261099	0					
ANR	1261278	Argument	p1		1261099	2					
ANR	1261279	Identifier	p1		1261099	0					
ANR	1261280	Argument	p0		1261099	3					
ANR	1261281	Identifier	p0		1261099	0					
ANR	1261282	IfStatement	if ( code < 0 )		1261099	1					
ANR	1261283	Condition	code < 0	1863:12:69383:69390	1261099	0	True				
ANR	1261284	RelationalExpression	code < 0		1261099	0		<			
ANR	1261285	Identifier	code		1261099	0					
ANR	1261286	PrimaryExpression	0		1261099	1					
ANR	1261287	ReturnStatement	return code ;	1864:12:69405:69416	1261099	1	True				
ANR	1261288	Identifier	code		1261099	0					
ANR	1261289	ExpressionStatement	"code = insert_wedge_vertex_list_elem ( pfs , l , pm , & e )"	1865:8:69426:69478	1261099	2	True				
ANR	1261290	AssignmentExpression	"code = insert_wedge_vertex_list_elem ( pfs , l , pm , & e )"		1261099	0		=			
ANR	1261291	Identifier	code		1261099	0					
ANR	1261292	CallExpression	"insert_wedge_vertex_list_elem ( pfs , l , pm , & e )"		1261099	1					
ANR	1261293	Callee	insert_wedge_vertex_list_elem		1261099	0					
ANR	1261294	Identifier	insert_wedge_vertex_list_elem		1261099	0					
ANR	1261295	ArgumentList	pfs		1261099	1					
ANR	1261296	Argument	pfs		1261099	0					
ANR	1261297	Identifier	pfs		1261099	0					
ANR	1261298	Argument	l		1261099	1					
ANR	1261299	Identifier	l		1261099	0					
ANR	1261300	Argument	pm		1261099	2					
ANR	1261301	Identifier	pm		1261099	0					
ANR	1261302	Argument	& e		1261099	3					
ANR	1261303	UnaryOperationExpression	& e		1261099	0					
ANR	1261304	UnaryOperator	&		1261099	0					
ANR	1261305	Identifier	e		1261099	1					
ANR	1261306	IfStatement	if ( code < 0 )		1261099	3					
ANR	1261307	Condition	code < 0	1866:12:69492:69499	1261099	0	True				
ANR	1261308	RelationalExpression	code < 0		1261099	0		<			
ANR	1261309	Identifier	code		1261099	0					
ANR	1261310	PrimaryExpression	0		1261099	1					
ANR	1261311	ReturnStatement	return code ;	1867:12:69514:69525	1261099	1	True				
ANR	1261312	Identifier	code		1261099	0					
ANR	1261313	ExpressionStatement	e -> divide_count ++	1868:8:69535:69552	1261099	4	True				
ANR	1261314	PostIncDecOperationExpression	e -> divide_count ++		1261099	0					
ANR	1261315	PtrMemberAccess	e -> divide_count		1261099	0					
ANR	1261316	Identifier	e		1261099	0					
ANR	1261317	Identifier	divide_count		1261099	1					
ANR	1261318	IncDec	++		1261099	1					
ANR	1261319	ElseStatement	else		1261099	0					
ANR	1261320	CompoundStatement		31:11:1074:1074	1261099	0					
ANR	1261321	IfStatement	if ( l -> beg -> p . x != p1 -> x )		1261099	0					
ANR	1261322	Condition	l -> beg -> p . x != p1 -> x	1870:12:69579:69598	1261099	0	True				
ANR	1261323	EqualityExpression	l -> beg -> p . x != p1 -> x		1261099	0		!=			
ANR	1261324	MemberAccess	l -> beg -> p . x		1261099	0					
ANR	1261325	PtrMemberAccess	l -> beg -> p		1261099	0					
ANR	1261326	PtrMemberAccess	l -> beg		1261099	0					
ANR	1261327	Identifier	l		1261099	0					
ANR	1261328	Identifier	beg		1261099	1					
ANR	1261329	Identifier	p		1261099	1					
ANR	1261330	Identifier	x		1261099	1					
ANR	1261331	PtrMemberAccess	p1 -> x		1261099	1					
ANR	1261332	Identifier	p1		1261099	0					
ANR	1261333	Identifier	x		1261099	1					
ANR	1261334	ExpressionStatement	return_error ( gs_error_unregistered )	1871:12:69613:69648	1261099	1	True				
ANR	1261335	CallExpression	return_error ( gs_error_unregistered )		1261099	0					
ANR	1261336	Callee	return_error		1261099	0					
ANR	1261337	Identifier	return_error		1261099	0					
ANR	1261338	ArgumentList	gs_error_unregistered		1261099	1					
ANR	1261339	Argument	gs_error_unregistered		1261099	0					
ANR	1261340	Identifier	gs_error_unregistered		1261099	0					
ANR	1261341	IfStatement	if ( l -> beg -> p . y != p1 -> y )		1261099	1					
ANR	1261342	Condition	l -> beg -> p . y != p1 -> y	1872:12:69685:69704	1261099	0	True				
ANR	1261343	EqualityExpression	l -> beg -> p . y != p1 -> y		1261099	0		!=			
ANR	1261344	MemberAccess	l -> beg -> p . y		1261099	0					
ANR	1261345	PtrMemberAccess	l -> beg -> p		1261099	0					
ANR	1261346	PtrMemberAccess	l -> beg		1261099	0					
ANR	1261347	Identifier	l		1261099	0					
ANR	1261348	Identifier	beg		1261099	1					
ANR	1261349	Identifier	p		1261099	1					
ANR	1261350	Identifier	y		1261099	1					
ANR	1261351	PtrMemberAccess	p1 -> y		1261099	1					
ANR	1261352	Identifier	p1		1261099	0					
ANR	1261353	Identifier	y		1261099	1					
ANR	1261354	ExpressionStatement	return_error ( gs_error_unregistered )	1873:12:69719:69754	1261099	1	True				
ANR	1261355	CallExpression	return_error ( gs_error_unregistered )		1261099	0					
ANR	1261356	Callee	return_error		1261099	0					
ANR	1261357	Identifier	return_error		1261099	0					
ANR	1261358	ArgumentList	gs_error_unregistered		1261099	1					
ANR	1261359	Argument	gs_error_unregistered		1261099	0					
ANR	1261360	Identifier	gs_error_unregistered		1261099	0					
ANR	1261361	IfStatement	if ( l -> end -> p . x != p0 -> x )		1261099	2					
ANR	1261362	Condition	l -> end -> p . x != p0 -> x	1874:12:69791:69810	1261099	0	True				
ANR	1261363	EqualityExpression	l -> end -> p . x != p0 -> x		1261099	0		!=			
ANR	1261364	MemberAccess	l -> end -> p . x		1261099	0					
ANR	1261365	PtrMemberAccess	l -> end -> p		1261099	0					
ANR	1261366	PtrMemberAccess	l -> end		1261099	0					
ANR	1261367	Identifier	l		1261099	0					
ANR	1261368	Identifier	end		1261099	1					
ANR	1261369	Identifier	p		1261099	1					
ANR	1261370	Identifier	x		1261099	1					
ANR	1261371	PtrMemberAccess	p0 -> x		1261099	1					
ANR	1261372	Identifier	p0		1261099	0					
ANR	1261373	Identifier	x		1261099	1					
ANR	1261374	ExpressionStatement	return_error ( gs_error_unregistered )	1875:12:69825:69860	1261099	1	True				
ANR	1261375	CallExpression	return_error ( gs_error_unregistered )		1261099	0					
ANR	1261376	Callee	return_error		1261099	0					
ANR	1261377	Identifier	return_error		1261099	0					
ANR	1261378	ArgumentList	gs_error_unregistered		1261099	1					
ANR	1261379	Argument	gs_error_unregistered		1261099	0					
ANR	1261380	Identifier	gs_error_unregistered		1261099	0					
ANR	1261381	IfStatement	if ( l -> end -> p . y != p0 -> y )		1261099	3					
ANR	1261382	Condition	l -> end -> p . y != p0 -> y	1876:12:69897:69916	1261099	0	True				
ANR	1261383	EqualityExpression	l -> end -> p . y != p0 -> y		1261099	0		!=			
ANR	1261384	MemberAccess	l -> end -> p . y		1261099	0					
ANR	1261385	PtrMemberAccess	l -> end -> p		1261099	0					
ANR	1261386	PtrMemberAccess	l -> end		1261099	0					
ANR	1261387	Identifier	l		1261099	0					
ANR	1261388	Identifier	end		1261099	1					
ANR	1261389	Identifier	p		1261099	1					
ANR	1261390	Identifier	y		1261099	1					
ANR	1261391	PtrMemberAccess	p0 -> y		1261099	1					
ANR	1261392	Identifier	p0		1261099	0					
ANR	1261393	Identifier	y		1261099	1					
ANR	1261394	ExpressionStatement	return_error ( gs_error_unregistered )	1877:12:69931:69966	1261099	1	True				
ANR	1261395	CallExpression	return_error ( gs_error_unregistered )		1261099	0					
ANR	1261396	Callee	return_error		1261099	0					
ANR	1261397	Identifier	return_error		1261099	0					
ANR	1261398	ArgumentList	gs_error_unregistered		1261099	1					
ANR	1261399	Argument	gs_error_unregistered		1261099	0					
ANR	1261400	Identifier	gs_error_unregistered		1261099	0					
ANR	1261401	IfStatement	if ( l -> beg -> next == l -> end )		1261099	4					
ANR	1261402	Condition	l -> beg -> next == l -> end	1878:12:70003:70024	1261099	0	True				
ANR	1261403	EqualityExpression	l -> beg -> next == l -> end		1261099	0		==			
ANR	1261404	PtrMemberAccess	l -> beg -> next		1261099	0					
ANR	1261405	PtrMemberAccess	l -> beg		1261099	0					
ANR	1261406	Identifier	l		1261099	0					
ANR	1261407	Identifier	beg		1261099	1					
ANR	1261408	Identifier	next		1261099	1					
ANR	1261409	PtrMemberAccess	l -> end		1261099	1					
ANR	1261410	Identifier	l		1261099	0					
ANR	1261411	Identifier	end		1261099	1					
ANR	1261412	CompoundStatement		40:36:1536:1536	1261099	1					
ANR	1261413	ExpressionStatement	"code = insert_wedge_vertex_list_elem ( pfs , l , pm , & e )"	1879:12:70041:70093	1261099	0	True				
ANR	1261414	AssignmentExpression	"code = insert_wedge_vertex_list_elem ( pfs , l , pm , & e )"		1261099	0		=			
ANR	1261415	Identifier	code		1261099	0					
ANR	1261416	CallExpression	"insert_wedge_vertex_list_elem ( pfs , l , pm , & e )"		1261099	1					
ANR	1261417	Callee	insert_wedge_vertex_list_elem		1261099	0					
ANR	1261418	Identifier	insert_wedge_vertex_list_elem		1261099	0					
ANR	1261419	ArgumentList	pfs		1261099	1					
ANR	1261420	Argument	pfs		1261099	0					
ANR	1261421	Identifier	pfs		1261099	0					
ANR	1261422	Argument	l		1261099	1					
ANR	1261423	Identifier	l		1261099	0					
ANR	1261424	Argument	pm		1261099	2					
ANR	1261425	Identifier	pm		1261099	0					
ANR	1261426	Argument	& e		1261099	3					
ANR	1261427	UnaryOperationExpression	& e		1261099	0					
ANR	1261428	UnaryOperator	&		1261099	0					
ANR	1261429	Identifier	e		1261099	1					
ANR	1261430	IfStatement	if ( code < 0 )		1261099	1					
ANR	1261431	Condition	code < 0	1880:16:70111:70118	1261099	0	True				
ANR	1261432	RelationalExpression	code < 0		1261099	0		<			
ANR	1261433	Identifier	code		1261099	0					
ANR	1261434	PrimaryExpression	0		1261099	1					
ANR	1261435	ReturnStatement	return code ;	1881:16:70137:70148	1261099	1	True				
ANR	1261436	Identifier	code		1261099	0					
ANR	1261437	ExpressionStatement	e -> divide_count ++	1882:12:70162:70179	1261099	2	True				
ANR	1261438	PostIncDecOperationExpression	e -> divide_count ++		1261099	0					
ANR	1261439	PtrMemberAccess	e -> divide_count		1261099	0					
ANR	1261440	Identifier	e		1261099	0					
ANR	1261441	Identifier	divide_count		1261099	1					
ANR	1261442	IncDec	++		1261099	1					
ANR	1261443	ElseStatement	else		1261099	0					
ANR	1261444	CompoundStatement		45:15:1705:1705	1261099	0					
ANR	1261445	ExpressionStatement	"e = wedge_vertex_list_find ( l -> beg , l -> end , max ( l -> beg -> level , l -> end -> level ) + 1 )"	1884:12:70210:70315	1261099	0	True				
ANR	1261446	AssignmentExpression	"e = wedge_vertex_list_find ( l -> beg , l -> end , max ( l -> beg -> level , l -> end -> level ) + 1 )"		1261099	0		=			
ANR	1261447	Identifier	e		1261099	0					
ANR	1261448	CallExpression	"wedge_vertex_list_find ( l -> beg , l -> end , max ( l -> beg -> level , l -> end -> level ) + 1 )"		1261099	1					
ANR	1261449	Callee	wedge_vertex_list_find		1261099	0					
ANR	1261450	Identifier	wedge_vertex_list_find		1261099	0					
ANR	1261451	ArgumentList	l -> beg		1261099	1					
ANR	1261452	Argument	l -> beg		1261099	0					
ANR	1261453	PtrMemberAccess	l -> beg		1261099	0					
ANR	1261454	Identifier	l		1261099	0					
ANR	1261455	Identifier	beg		1261099	1					
ANR	1261456	Argument	l -> end		1261099	1					
ANR	1261457	PtrMemberAccess	l -> end		1261099	0					
ANR	1261458	Identifier	l		1261099	0					
ANR	1261459	Identifier	end		1261099	1					
ANR	1261460	Argument	"max ( l -> beg -> level , l -> end -> level ) + 1"		1261099	2					
ANR	1261461	AdditiveExpression	"max ( l -> beg -> level , l -> end -> level ) + 1"		1261099	0		+			
ANR	1261462	CallExpression	"max ( l -> beg -> level , l -> end -> level )"		1261099	0					
ANR	1261463	Callee	max		1261099	0					
ANR	1261464	Identifier	max		1261099	0					
ANR	1261465	ArgumentList	l -> beg -> level		1261099	1					
ANR	1261466	Argument	l -> beg -> level		1261099	0					
ANR	1261467	PtrMemberAccess	l -> beg -> level		1261099	0					
ANR	1261468	PtrMemberAccess	l -> beg		1261099	0					
ANR	1261469	Identifier	l		1261099	0					
ANR	1261470	Identifier	beg		1261099	1					
ANR	1261471	Identifier	level		1261099	1					
ANR	1261472	Argument	l -> end -> level		1261099	1					
ANR	1261473	PtrMemberAccess	l -> end -> level		1261099	0					
ANR	1261474	PtrMemberAccess	l -> end		1261099	0					
ANR	1261475	Identifier	l		1261099	0					
ANR	1261476	Identifier	end		1261099	1					
ANR	1261477	Identifier	level		1261099	1					
ANR	1261478	PrimaryExpression	1		1261099	1					
ANR	1261479	IfStatement	if ( e == NULL )		1261099	1					
ANR	1261480	Condition	e == NULL	1886:16:70333:70341	1261099	0	True				
ANR	1261481	EqualityExpression	e == NULL		1261099	0		==			
ANR	1261482	Identifier	e		1261099	0					
ANR	1261483	Identifier	NULL		1261099	1					
ANR	1261484	ExpressionStatement	return_error ( gs_error_unregistered )	1887:16:70360:70395	1261099	1	True				
ANR	1261485	CallExpression	return_error ( gs_error_unregistered )		1261099	0					
ANR	1261486	Callee	return_error		1261099	0					
ANR	1261487	Identifier	return_error		1261099	0					
ANR	1261488	ArgumentList	gs_error_unregistered		1261099	1					
ANR	1261489	Argument	gs_error_unregistered		1261099	0					
ANR	1261490	Identifier	gs_error_unregistered		1261099	0					
ANR	1261491	IfStatement	if ( e -> p . x != pm -> x || e -> p . y != pm -> y )		1261099	2					
ANR	1261492	Condition	e -> p . x != pm -> x || e -> p . y != pm -> y	1888:16:70436:70469	1261099	0	True				
ANR	1261493	OrExpression	e -> p . x != pm -> x || e -> p . y != pm -> y		1261099	0		||			
ANR	1261494	EqualityExpression	e -> p . x != pm -> x		1261099	0		!=			
ANR	1261495	MemberAccess	e -> p . x		1261099	0					
ANR	1261496	PtrMemberAccess	e -> p		1261099	0					
ANR	1261497	Identifier	e		1261099	0					
ANR	1261498	Identifier	p		1261099	1					
ANR	1261499	Identifier	x		1261099	1					
ANR	1261500	PtrMemberAccess	pm -> x		1261099	1					
ANR	1261501	Identifier	pm		1261099	0					
ANR	1261502	Identifier	x		1261099	1					
ANR	1261503	EqualityExpression	e -> p . y != pm -> y		1261099	1		!=			
ANR	1261504	MemberAccess	e -> p . y		1261099	0					
ANR	1261505	PtrMemberAccess	e -> p		1261099	0					
ANR	1261506	Identifier	e		1261099	0					
ANR	1261507	Identifier	p		1261099	1					
ANR	1261508	Identifier	y		1261099	1					
ANR	1261509	PtrMemberAccess	pm -> y		1261099	1					
ANR	1261510	Identifier	pm		1261099	0					
ANR	1261511	Identifier	y		1261099	1					
ANR	1261512	ExpressionStatement	return_error ( gs_error_unregistered )	1889:16:70488:70523	1261099	1	True				
ANR	1261513	CallExpression	return_error ( gs_error_unregistered )		1261099	0					
ANR	1261514	Callee	return_error		1261099	0					
ANR	1261515	Identifier	return_error		1261099	0					
ANR	1261516	ArgumentList	gs_error_unregistered		1261099	1					
ANR	1261517	Argument	gs_error_unregistered		1261099	0					
ANR	1261518	Identifier	gs_error_unregistered		1261099	0					
ANR	1261519	ExpressionStatement	e -> divide_count ++	1890:12:70560:70577	1261099	3	True				
ANR	1261520	PostIncDecOperationExpression	e -> divide_count ++		1261099	0					
ANR	1261521	PtrMemberAccess	e -> divide_count		1261099	0					
ANR	1261522	Identifier	e		1261099	0					
ANR	1261523	Identifier	divide_count		1261099	1					
ANR	1261524	IncDec	++		1261099	1					
ANR	1261525	ExpressionStatement	* r = e	1893:4:70599:70605	1261099	3	True				
ANR	1261526	AssignmentExpression	* r = e		1261099	0		=			
ANR	1261527	UnaryOperationExpression	* r		1261099	0					
ANR	1261528	UnaryOperator	*		1261099	0					
ANR	1261529	Identifier	r		1261099	1					
ANR	1261530	Identifier	e		1261099	1					
ANR	1261531	ReturnStatement	return 0 ;	1894:4:70611:70619	1261099	4	True				
ANR	1261532	PrimaryExpression	0		1261099	0					
ANR	1261533	ReturnType	static inline int		1261099	1					
ANR	1261534	Identifier	open_wedge_median		1261099	2					
ANR	1261535	ParameterList	"patch_fill_state_t * pfs , wedge_vertex_list_t * l , const gs_fixed_point * p0 , const gs_fixed_point * p1 , const gs_fixed_point * pm , wedge_vertex_list_elem_t * * r"		1261099	3					
ANR	1261536	Parameter	patch_fill_state_t * pfs	1836:18:68317:68339	1261099	0	True				
ANR	1261537	ParameterType	patch_fill_state_t *		1261099	0					
ANR	1261538	Identifier	pfs		1261099	1					
ANR	1261539	Parameter	wedge_vertex_list_t * l	1836:43:68342:68363	1261099	1	True				
ANR	1261540	ParameterType	wedge_vertex_list_t *		1261099	0					
ANR	1261541	Identifier	l		1261099	1					
ANR	1261542	Parameter	const gs_fixed_point * p0	1837:8:68374:68397	1261099	2	True				
ANR	1261543	ParameterType	const gs_fixed_point *		1261099	0					
ANR	1261544	Identifier	p0		1261099	1					
ANR	1261545	Parameter	const gs_fixed_point * p1	1837:34:68400:68423	1261099	3	True				
ANR	1261546	ParameterType	const gs_fixed_point *		1261099	0					
ANR	1261547	Identifier	p1		1261099	1					
ANR	1261548	Parameter	const gs_fixed_point * pm	1837:60:68426:68449	1261099	4	True				
ANR	1261549	ParameterType	const gs_fixed_point *		1261099	0					
ANR	1261550	Identifier	pm		1261099	1					
ANR	1261551	Parameter	wedge_vertex_list_elem_t * * r	1838:8:68460:68487	1261099	5	True				
ANR	1261552	ParameterType	wedge_vertex_list_elem_t * *		1261099	0					
ANR	1261553	Identifier	r		1261099	1					
ANR	1261554	CFGEntryNode	ENTRY		1261099		True				
ANR	1261555	CFGExitNode	EXIT		1261099		True				
ANR	1261556	Symbol	p0		1261099						
ANR	1261557	Symbol	p1		1261099						
ANR	1261558	Symbol	gs_error_unregistered		1261099						
ANR	1261559	Symbol	code		1261099						
ANR	1261560	Symbol	l -> beg		1261099						
ANR	1261561	Symbol	l -> end -> p		1261099						
ANR	1261562	Symbol	e -> divide_count		1261099						
ANR	1261563	Symbol	l -> beg -> p . x		1261099						
ANR	1261564	Symbol	l -> beg -> p . y		1261099						
ANR	1261565	Symbol	p0 -> y		1261099						
ANR	1261566	Symbol	create_wedge_vertex_list		1261099						
ANR	1261567	Symbol	l -> beg -> p		1261099						
ANR	1261568	Symbol	p0 -> x		1261099						
ANR	1261569	Symbol	wedge_vertex_list_find		1261099						
ANR	1261570	Symbol	l -> last_side		1261099						
ANR	1261571	Symbol	* l -> beg		1261099						
ANR	1261572	Symbol	insert_wedge_vertex_list_elem		1261099						
ANR	1261573	Symbol	pm -> x		1261099						
ANR	1261574	Symbol	* * l		1261099						
ANR	1261575	Symbol	pm -> y		1261099						
ANR	1261576	Symbol	* pm		1261099						
ANR	1261577	Symbol	NULL		1261099						
ANR	1261578	Symbol	* p1		1261099						
ANR	1261579	Symbol	e		1261099						
ANR	1261580	Symbol	* p0		1261099						
ANR	1261581	Symbol	max		1261099						
ANR	1261582	Symbol	p1 -> y		1261099						
ANR	1261583	Symbol	p1 -> x		1261099						
ANR	1261584	Symbol	l -> end		1261099						
ANR	1261585	Symbol	& e		1261099						
ANR	1261586	Symbol	l		1261099						
ANR	1261587	Symbol	e -> p		1261099						
ANR	1261588	Symbol	l -> end -> level		1261099						
ANR	1261589	Symbol	* e		1261099						
ANR	1261590	Symbol	e -> p . y		1261099						
ANR	1261591	Symbol	e -> p . x		1261099						
ANR	1261592	Symbol	r		1261099						
ANR	1261593	Symbol	* l -> end		1261099						
ANR	1261594	Symbol	l -> end -> p . x		1261099						
ANR	1261595	Symbol	l -> beg -> level		1261099						
ANR	1261596	Symbol	* l		1261099						
ANR	1261597	Symbol	l -> beg -> next		1261099						
ANR	1261598	Symbol	l -> end -> p . y		1261099						
ANR	1261599	Symbol	pfs		1261099						
ANR	1261600	Symbol	* r		1261099						
ANR	1261601	Symbol	pm		1261099						
ANR	1261602	Function	make_wedge_median	1897:0:70624:71141							
ANR	1261603	FunctionDef	"make_wedge_median (patch_fill_state_t * pfs , wedge_vertex_list_t * l , wedge_vertex_list_t * l0 , bool forth , const gs_fixed_point * p0 , const gs_fixed_point * p1 , const gs_fixed_point * pm)"		1261602	0					
ANR	1261604	CompoundStatement		1901:0:70840:71141	1261602	0					
ANR	1261605	IdentifierDeclStatement	int code ;	1902:4:70846:70854	1261602	0	True				
ANR	1261606	IdentifierDecl	code		1261602	0					
ANR	1261607	IdentifierDeclType	int		1261602	0					
ANR	1261608	Identifier	code		1261602	1					
ANR	1261609	ExpressionStatement	l -> last_side = l0 -> last_side	1904:4:70861:70889	1261602	1	True				
ANR	1261610	AssignmentExpression	l -> last_side = l0 -> last_side		1261602	0		=			
ANR	1261611	PtrMemberAccess	l -> last_side		1261602	0					
ANR	1261612	Identifier	l		1261602	0					
ANR	1261613	Identifier	last_side		1261602	1					
ANR	1261614	PtrMemberAccess	l0 -> last_side		1261602	1					
ANR	1261615	Identifier	l0		1261602	0					
ANR	1261616	Identifier	last_side		1261602	1					
ANR	1261617	IfStatement	if ( ! l -> last_side ^ ! forth )		1261602	2					
ANR	1261618	Condition	! l -> last_side ^ ! forth	1905:8:70899:70920	1261602	0	True				
ANR	1261619	ExclusiveOrExpression	! l -> last_side ^ ! forth		1261602	0		^			
ANR	1261620	UnaryOperationExpression	! l -> last_side		1261602	0					
ANR	1261621	UnaryOperator	!		1261602	0					
ANR	1261622	PtrMemberAccess	l -> last_side		1261602	1					
ANR	1261623	Identifier	l		1261602	0					
ANR	1261624	Identifier	last_side		1261602	1					
ANR	1261625	UnaryOperationExpression	! forth		1261602	1					
ANR	1261626	UnaryOperator	!		1261602	0					
ANR	1261627	Identifier	forth		1261602	1					
ANR	1261628	CompoundStatement		5:32:82:82	1261602	1					
ANR	1261629	ExpressionStatement	"code = open_wedge_median ( pfs , l0 , p0 , p1 , pm , & l -> end )"	1906:8:70933:70987	1261602	0	True				
ANR	1261630	AssignmentExpression	"code = open_wedge_median ( pfs , l0 , p0 , p1 , pm , & l -> end )"		1261602	0		=			
ANR	1261631	Identifier	code		1261602	0					
ANR	1261632	CallExpression	"open_wedge_median ( pfs , l0 , p0 , p1 , pm , & l -> end )"		1261602	1					
ANR	1261633	Callee	open_wedge_median		1261602	0					
ANR	1261634	Identifier	open_wedge_median		1261602	0					
ANR	1261635	ArgumentList	pfs		1261602	1					
ANR	1261636	Argument	pfs		1261602	0					
ANR	1261637	Identifier	pfs		1261602	0					
ANR	1261638	Argument	l0		1261602	1					
ANR	1261639	Identifier	l0		1261602	0					
ANR	1261640	Argument	p0		1261602	2					
ANR	1261641	Identifier	p0		1261602	0					
ANR	1261642	Argument	p1		1261602	3					
ANR	1261643	Identifier	p1		1261602	0					
ANR	1261644	Argument	pm		1261602	4					
ANR	1261645	Identifier	pm		1261602	0					
ANR	1261646	Argument	& l -> end		1261602	5					
ANR	1261647	UnaryOperationExpression	& l -> end		1261602	0					
ANR	1261648	UnaryOperator	&		1261602	0					
ANR	1261649	PtrMemberAccess	l -> end		1261602	1					
ANR	1261650	Identifier	l		1261602	0					
ANR	1261651	Identifier	end		1261602	1					
ANR	1261652	ExpressionStatement	l -> beg = l0 -> beg	1907:8:70997:71013	1261602	1	True				
ANR	1261653	AssignmentExpression	l -> beg = l0 -> beg		1261602	0		=			
ANR	1261654	PtrMemberAccess	l -> beg		1261602	0					
ANR	1261655	Identifier	l		1261602	0					
ANR	1261656	Identifier	beg		1261602	1					
ANR	1261657	PtrMemberAccess	l0 -> beg		1261602	1					
ANR	1261658	Identifier	l0		1261602	0					
ANR	1261659	Identifier	beg		1261602	1					
ANR	1261660	ElseStatement	else		1261602	0					
ANR	1261661	CompoundStatement		8:11:185:185	1261602	0					
ANR	1261662	ExpressionStatement	"code = open_wedge_median ( pfs , l0 , p0 , p1 , pm , & l -> beg )"	1909:8:71036:71090	1261602	0	True				
ANR	1261663	AssignmentExpression	"code = open_wedge_median ( pfs , l0 , p0 , p1 , pm , & l -> beg )"		1261602	0		=			
ANR	1261664	Identifier	code		1261602	0					
ANR	1261665	CallExpression	"open_wedge_median ( pfs , l0 , p0 , p1 , pm , & l -> beg )"		1261602	1					
ANR	1261666	Callee	open_wedge_median		1261602	0					
ANR	1261667	Identifier	open_wedge_median		1261602	0					
ANR	1261668	ArgumentList	pfs		1261602	1					
ANR	1261669	Argument	pfs		1261602	0					
ANR	1261670	Identifier	pfs		1261602	0					
ANR	1261671	Argument	l0		1261602	1					
ANR	1261672	Identifier	l0		1261602	0					
ANR	1261673	Argument	p0		1261602	2					
ANR	1261674	Identifier	p0		1261602	0					
ANR	1261675	Argument	p1		1261602	3					
ANR	1261676	Identifier	p1		1261602	0					
ANR	1261677	Argument	pm		1261602	4					
ANR	1261678	Identifier	pm		1261602	0					
ANR	1261679	Argument	& l -> beg		1261602	5					
ANR	1261680	UnaryOperationExpression	& l -> beg		1261602	0					
ANR	1261681	UnaryOperator	&		1261602	0					
ANR	1261682	PtrMemberAccess	l -> beg		1261602	1					
ANR	1261683	Identifier	l		1261602	0					
ANR	1261684	Identifier	beg		1261602	1					
ANR	1261685	ExpressionStatement	l -> end = l0 -> end	1910:8:71100:71116	1261602	1	True				
ANR	1261686	AssignmentExpression	l -> end = l0 -> end		1261602	0		=			
ANR	1261687	PtrMemberAccess	l -> end		1261602	0					
ANR	1261688	Identifier	l		1261602	0					
ANR	1261689	Identifier	end		1261602	1					
ANR	1261690	PtrMemberAccess	l0 -> end		1261602	1					
ANR	1261691	Identifier	l0		1261602	0					
ANR	1261692	Identifier	end		1261602	1					
ANR	1261693	ReturnStatement	return code ;	1912:4:71128:71139	1261602	3	True				
ANR	1261694	Identifier	code		1261602	0					
ANR	1261695	ReturnType	static inline int		1261602	1					
ANR	1261696	Identifier	make_wedge_median		1261602	2					
ANR	1261697	ParameterList	"patch_fill_state_t * pfs , wedge_vertex_list_t * l , wedge_vertex_list_t * l0 , bool forth , const gs_fixed_point * p0 , const gs_fixed_point * p1 , const gs_fixed_point * pm"		1261602	3					
ANR	1261698	Parameter	patch_fill_state_t * pfs	1898:18:70660:70682	1261602	0	True				
ANR	1261699	ParameterType	patch_fill_state_t *		1261602	0					
ANR	1261700	Identifier	pfs		1261602	1					
ANR	1261701	Parameter	wedge_vertex_list_t * l	1898:43:70685:70706	1261602	1	True				
ANR	1261702	ParameterType	wedge_vertex_list_t *		1261602	0					
ANR	1261703	Identifier	l		1261602	1					
ANR	1261704	Parameter	wedge_vertex_list_t * l0	1899:8:70717:70739	1261602	2	True				
ANR	1261705	ParameterType	wedge_vertex_list_t *		1261602	0					
ANR	1261706	Identifier	l0		1261602	1					
ANR	1261707	Parameter	bool forth	1899:33:70742:70751	1261602	3	True				
ANR	1261708	ParameterType	bool		1261602	0					
ANR	1261709	Identifier	forth		1261602	1					
ANR	1261710	Parameter	const gs_fixed_point * p0	1900:8:70762:70785	1261602	4	True				
ANR	1261711	ParameterType	const gs_fixed_point *		1261602	0					
ANR	1261712	Identifier	p0		1261602	1					
ANR	1261713	Parameter	const gs_fixed_point * p1	1900:34:70788:70811	1261602	5	True				
ANR	1261714	ParameterType	const gs_fixed_point *		1261602	0					
ANR	1261715	Identifier	p1		1261602	1					
ANR	1261716	Parameter	const gs_fixed_point * pm	1900:60:70814:70837	1261602	6	True				
ANR	1261717	ParameterType	const gs_fixed_point *		1261602	0					
ANR	1261718	Identifier	pm		1261602	1					
ANR	1261719	CFGEntryNode	ENTRY		1261602		True				
ANR	1261720	CFGExitNode	EXIT		1261602		True				
ANR	1261721	Symbol	p0		1261602						
ANR	1261722	Symbol	p1		1261602						
ANR	1261723	Symbol	code		1261602						
ANR	1261724	Symbol	l -> beg		1261602						
ANR	1261725	Symbol	l0		1261602						
ANR	1261726	Symbol	& l -> end		1261602						
ANR	1261727	Symbol	* l0		1261602						
ANR	1261728	Symbol	l0 -> end		1261602						
ANR	1261729	Symbol	l -> end		1261602						
ANR	1261730	Symbol	open_wedge_median		1261602						
ANR	1261731	Symbol	l		1261602						
ANR	1261732	Symbol	forth		1261602						
ANR	1261733	Symbol	l0 -> beg		1261602						
ANR	1261734	Symbol	* l		1261602						
ANR	1261735	Symbol	l -> last_side		1261602						
ANR	1261736	Symbol	pfs		1261602						
ANR	1261737	Symbol	pm		1261602						
ANR	1261738	Symbol	& l -> beg		1261602						
ANR	1261739	Symbol	l0 -> last_side		1261602						
ANR	1261740	DeclStmt									
ANR	1261741	Decl							int	"int ( patch_fill_state_t * pfs , const wedge_vertex_list_t * l , const patch_color_t * c0 , const patch_color_t * c1 )"	fill_wedge_from_list
ANR	1261742	Function	close_wedge_median	1918:0:71295:71660							
ANR	1261743	FunctionDef	"close_wedge_median (patch_fill_state_t * pfs , wedge_vertex_list_t * l , const patch_color_t * c0 , const patch_color_t * c1)"		1261742	0					
ANR	1261744	CompoundStatement		1921:0:71439:71660	1261742	0					
ANR	1261745	IdentifierDeclStatement	int code ;	1922:4:71445:71453	1261742	0	True				
ANR	1261746	IdentifierDecl	code		1261742	0					
ANR	1261747	IdentifierDeclType	int		1261742	0					
ANR	1261748	Identifier	code		1261742	1					
ANR	1261749	IfStatement	if ( ! l -> last_side )		1261742	1					
ANR	1261750	Condition	! l -> last_side	1924:8:71464:71476	1261742	0	True				
ANR	1261751	UnaryOperationExpression	! l -> last_side		1261742	0					
ANR	1261752	UnaryOperator	!		1261742	0					
ANR	1261753	PtrMemberAccess	l -> last_side		1261742	1					
ANR	1261754	Identifier	l		1261742	0					
ANR	1261755	Identifier	last_side		1261742	1					
ANR	1261756	ReturnStatement	return 0 ;	1925:8:71487:71495	1261742	1	True				
ANR	1261757	PrimaryExpression	0		1261742	0					
ANR	1261758	ExpressionStatement	"code = fill_wedge_from_list ( pfs , l , c1 , c0 )"	1926:4:71501:71544	1261742	2	True				
ANR	1261759	AssignmentExpression	"code = fill_wedge_from_list ( pfs , l , c1 , c0 )"		1261742	0		=			
ANR	1261760	Identifier	code		1261742	0					
ANR	1261761	CallExpression	"fill_wedge_from_list ( pfs , l , c1 , c0 )"		1261742	1					
ANR	1261762	Callee	fill_wedge_from_list		1261742	0					
ANR	1261763	Identifier	fill_wedge_from_list		1261742	0					
ANR	1261764	ArgumentList	pfs		1261742	1					
ANR	1261765	Argument	pfs		1261742	0					
ANR	1261766	Identifier	pfs		1261742	0					
ANR	1261767	Argument	l		1261742	1					
ANR	1261768	Identifier	l		1261742	0					
ANR	1261769	Argument	c1		1261742	2					
ANR	1261770	Identifier	c1		1261742	0					
ANR	1261771	Argument	c0		1261742	3					
ANR	1261772	Identifier	c0		1261742	0					
ANR	1261773	IfStatement	if ( code < 0 )		1261742	3					
ANR	1261774	Condition	code < 0	1927:8:71554:71561	1261742	0	True				
ANR	1261775	RelationalExpression	code < 0		1261742	0		<			
ANR	1261776	Identifier	code		1261742	0					
ANR	1261777	PrimaryExpression	0		1261742	1					
ANR	1261778	ReturnStatement	return code ;	1928:8:71572:71583	1261742	1	True				
ANR	1261779	Identifier	code		1261742	0					
ANR	1261780	ExpressionStatement	"release_wedge_vertex_list_interval ( pfs , l -> beg , l -> end )"	1929:4:71589:71644	1261742	4	True				
ANR	1261781	CallExpression	"release_wedge_vertex_list_interval ( pfs , l -> beg , l -> end )"		1261742	0					
ANR	1261782	Callee	release_wedge_vertex_list_interval		1261742	0					
ANR	1261783	Identifier	release_wedge_vertex_list_interval		1261742	0					
ANR	1261784	ArgumentList	pfs		1261742	1					
ANR	1261785	Argument	pfs		1261742	0					
ANR	1261786	Identifier	pfs		1261742	0					
ANR	1261787	Argument	l -> beg		1261742	1					
ANR	1261788	PtrMemberAccess	l -> beg		1261742	0					
ANR	1261789	Identifier	l		1261742	0					
ANR	1261790	Identifier	beg		1261742	1					
ANR	1261791	Argument	l -> end		1261742	2					
ANR	1261792	PtrMemberAccess	l -> end		1261742	0					
ANR	1261793	Identifier	l		1261742	0					
ANR	1261794	Identifier	end		1261742	1					
ANR	1261795	ReturnStatement	return 0 ;	1930:4:71650:71658	1261742	5	True				
ANR	1261796	PrimaryExpression	0		1261742	0					
ANR	1261797	ReturnType	static inline int		1261742	1					
ANR	1261798	Identifier	close_wedge_median		1261742	2					
ANR	1261799	ParameterList	"patch_fill_state_t * pfs , wedge_vertex_list_t * l , const patch_color_t * c0 , const patch_color_t * c1"		1261742	3					
ANR	1261800	Parameter	patch_fill_state_t * pfs	1919:19:71332:71354	1261742	0	True				
ANR	1261801	ParameterType	patch_fill_state_t *		1261742	0					
ANR	1261802	Identifier	pfs		1261742	1					
ANR	1261803	Parameter	wedge_vertex_list_t * l	1919:44:71357:71378	1261742	1	True				
ANR	1261804	ParameterType	wedge_vertex_list_t *		1261742	0					
ANR	1261805	Identifier	l		1261742	1					
ANR	1261806	Parameter	const patch_color_t * c0	1920:8:71389:71411	1261742	2	True				
ANR	1261807	ParameterType	const patch_color_t *		1261742	0					
ANR	1261808	Identifier	c0		1261742	1					
ANR	1261809	Parameter	const patch_color_t * c1	1920:33:71414:71436	1261742	3	True				
ANR	1261810	ParameterType	const patch_color_t *		1261742	0					
ANR	1261811	Identifier	c1		1261742	1					
ANR	1261812	CFGEntryNode	ENTRY		1261742		True				
ANR	1261813	CFGExitNode	EXIT		1261742		True				
ANR	1261814	Symbol	code		1261742						
ANR	1261815	Symbol	l -> beg		1261742						
ANR	1261816	Symbol	* l		1261742						
ANR	1261817	Symbol	l -> last_side		1261742						
ANR	1261818	Symbol	l -> end		1261742						
ANR	1261819	Symbol	pfs		1261742						
ANR	1261820	Symbol	l		1261742						
ANR	1261821	Symbol	c0		1261742						
ANR	1261822	Symbol	fill_wedge_from_list		1261742						
ANR	1261823	Symbol	c1		1261742						
ANR	1261824	Function	move_wedge	1933:0:71663:71917							
ANR	1261825	FunctionDef	"move_wedge (wedge_vertex_list_t * l , const wedge_vertex_list_t * l0 , bool forth)"		1261824	0					
ANR	1261826	CompoundStatement		1935:0:71760:71917	1261824	0					
ANR	1261827	IfStatement	if ( ! l -> last_side ^ ! forth )		1261824	0					
ANR	1261828	Condition	! l -> last_side ^ ! forth	1936:8:71770:71791	1261824	0	True				
ANR	1261829	ExclusiveOrExpression	! l -> last_side ^ ! forth		1261824	0		^			
ANR	1261830	UnaryOperationExpression	! l -> last_side		1261824	0					
ANR	1261831	UnaryOperator	!		1261824	0					
ANR	1261832	PtrMemberAccess	l -> last_side		1261824	1					
ANR	1261833	Identifier	l		1261824	0					
ANR	1261834	Identifier	last_side		1261824	1					
ANR	1261835	UnaryOperationExpression	! forth		1261824	1					
ANR	1261836	UnaryOperator	!		1261824	0					
ANR	1261837	Identifier	forth		1261824	1					
ANR	1261838	CompoundStatement		2:32:33:33	1261824	1					
ANR	1261839	ExpressionStatement	l -> beg = l -> end	1937:8:71804:71819	1261824	0	True				
ANR	1261840	AssignmentExpression	l -> beg = l -> end		1261824	0		=			
ANR	1261841	PtrMemberAccess	l -> beg		1261824	0					
ANR	1261842	Identifier	l		1261824	0					
ANR	1261843	Identifier	beg		1261824	1					
ANR	1261844	PtrMemberAccess	l -> end		1261824	1					
ANR	1261845	Identifier	l		1261824	0					
ANR	1261846	Identifier	end		1261824	1					
ANR	1261847	ExpressionStatement	l -> end = l0 -> end	1938:8:71829:71845	1261824	1	True				
ANR	1261848	AssignmentExpression	l -> end = l0 -> end		1261824	0		=			
ANR	1261849	PtrMemberAccess	l -> end		1261824	0					
ANR	1261850	Identifier	l		1261824	0					
ANR	1261851	Identifier	end		1261824	1					
ANR	1261852	PtrMemberAccess	l0 -> end		1261824	1					
ANR	1261853	Identifier	l0		1261824	0					
ANR	1261854	Identifier	end		1261824	1					
ANR	1261855	ElseStatement	else		1261824	0					
ANR	1261856	CompoundStatement		5:11:97:97	1261824	0					
ANR	1261857	ExpressionStatement	l -> end = l -> beg	1940:8:71868:71883	1261824	0	True				
ANR	1261858	AssignmentExpression	l -> end = l -> beg		1261824	0		=			
ANR	1261859	PtrMemberAccess	l -> end		1261824	0					
ANR	1261860	Identifier	l		1261824	0					
ANR	1261861	Identifier	end		1261824	1					
ANR	1261862	PtrMemberAccess	l -> beg		1261824	1					
ANR	1261863	Identifier	l		1261824	0					
ANR	1261864	Identifier	beg		1261824	1					
ANR	1261865	ExpressionStatement	l -> beg = l0 -> beg	1941:8:71893:71909	1261824	1	True				
ANR	1261866	AssignmentExpression	l -> beg = l0 -> beg		1261824	0		=			
ANR	1261867	PtrMemberAccess	l -> beg		1261824	0					
ANR	1261868	Identifier	l		1261824	0					
ANR	1261869	Identifier	beg		1261824	1					
ANR	1261870	PtrMemberAccess	l0 -> beg		1261824	1					
ANR	1261871	Identifier	l0		1261824	0					
ANR	1261872	Identifier	beg		1261824	1					
ANR	1261873	ReturnType	static inline void		1261824	1					
ANR	1261874	Identifier	move_wedge		1261824	2					
ANR	1261875	ParameterList	"wedge_vertex_list_t * l , const wedge_vertex_list_t * l0 , bool forth"		1261824	3					
ANR	1261876	Parameter	wedge_vertex_list_t * l	1934:11:71693:71714	1261824	0	True				
ANR	1261877	ParameterType	wedge_vertex_list_t *		1261824	0					
ANR	1261878	Identifier	l		1261824	1					
ANR	1261879	Parameter	const wedge_vertex_list_t * l0	1934:35:71717:71745	1261824	1	True				
ANR	1261880	ParameterType	const wedge_vertex_list_t *		1261824	0					
ANR	1261881	Identifier	l0		1261824	1					
ANR	1261882	Parameter	bool forth	1934:66:71748:71757	1261824	2	True				
ANR	1261883	ParameterType	bool		1261824	0					
ANR	1261884	Identifier	forth		1261824	1					
ANR	1261885	CFGEntryNode	ENTRY		1261824		True				
ANR	1261886	CFGExitNode	EXIT		1261824		True				
ANR	1261887	Symbol	l -> beg		1261824						
ANR	1261888	Symbol	l0 -> beg		1261824						
ANR	1261889	Symbol	l0		1261824						
ANR	1261890	Symbol	* l		1261824						
ANR	1261891	Symbol	l -> last_side		1261824						
ANR	1261892	Symbol	* l0		1261824						
ANR	1261893	Symbol	l -> end		1261824						
ANR	1261894	Symbol	l0 -> end		1261824						
ANR	1261895	Symbol	l		1261824						
ANR	1261896	Symbol	forth		1261824						
ANR	1261897	Function	fill_triangle_wedge_aux	1945:0:71920:73410							
ANR	1261898	FunctionDef	"fill_triangle_wedge_aux (patch_fill_state_t * pfs , const shading_vertex_t * q0 , const shading_vertex_t * q1 , const shading_vertex_t * q2)"		1261897	0					
ANR	1261899	CompoundStatement		1948:0:72083:73410	1261897	0					
ANR	1261900	IdentifierDeclStatement	int code ;	1948:3:72087:72095	1261897	0	True				
ANR	1261901	IdentifierDecl	code		1261897	0					
ANR	1261902	IdentifierDeclType	int		1261897	0					
ANR	1261903	Identifier	code		1261897	1					
ANR	1261904	IdentifierDeclStatement	"const gs_fixed_point * p0 , * p1 , * p2 ;"	1949:4:72101:72135	1261897	1	True				
ANR	1261905	IdentifierDecl	* p0		1261897	0					
ANR	1261906	IdentifierDeclType	const gs_fixed_point *		1261897	0					
ANR	1261907	Identifier	p0		1261897	1					
ANR	1261908	IdentifierDecl	* p1		1261897	1					
ANR	1261909	IdentifierDeclType	const gs_fixed_point *		1261897	0					
ANR	1261910	Identifier	p1		1261897	1					
ANR	1261911	IdentifierDecl	* p2		1261897	2					
ANR	1261912	IdentifierDeclType	const gs_fixed_point *		1261897	0					
ANR	1261913	Identifier	p2		1261897	1					
ANR	1261914	IdentifierDeclStatement	"gs_fixed_point qq0 , qq1 , qq2 ;"	1950:4:72141:72169	1261897	2	True				
ANR	1261915	IdentifierDecl	qq0		1261897	0					
ANR	1261916	IdentifierDeclType	gs_fixed_point		1261897	0					
ANR	1261917	Identifier	qq0		1261897	1					
ANR	1261918	IdentifierDecl	qq1		1261897	1					
ANR	1261919	IdentifierDeclType	gs_fixed_point		1261897	0					
ANR	1261920	Identifier	qq1		1261897	1					
ANR	1261921	IdentifierDecl	qq2		1261897	2					
ANR	1261922	IdentifierDeclType	gs_fixed_point		1261897	0					
ANR	1261923	Identifier	qq2		1261897	1					
ANR	1261924	IdentifierDeclStatement	"fixed dx = any_abs ( q0 -> p . x - q1 -> p . x ) , dy = any_abs ( q0 -> p . y - q1 -> p . y ) ;"	1951:4:72175:72245	1261897	3	True				
ANR	1261925	IdentifierDecl	dx = any_abs ( q0 -> p . x - q1 -> p . x )		1261897	0					
ANR	1261926	IdentifierDeclType	fixed		1261897	0					
ANR	1261927	Identifier	dx		1261897	1					
ANR	1261928	AssignmentExpression	dx = any_abs ( q0 -> p . x - q1 -> p . x )		1261897	2		=			
ANR	1261929	Identifier	dx		1261897	0					
ANR	1261930	CallExpression	any_abs ( q0 -> p . x - q1 -> p . x )		1261897	1					
ANR	1261931	Callee	any_abs		1261897	0					
ANR	1261932	Identifier	any_abs		1261897	0					
ANR	1261933	ArgumentList	q0 -> p . x - q1 -> p . x		1261897	1					
ANR	1261934	Argument	q0 -> p . x - q1 -> p . x		1261897	0					
ANR	1261935	AdditiveExpression	q0 -> p . x - q1 -> p . x		1261897	0		-			
ANR	1261936	MemberAccess	q0 -> p . x		1261897	0					
ANR	1261937	PtrMemberAccess	q0 -> p		1261897	0					
ANR	1261938	Identifier	q0		1261897	0					
ANR	1261939	Identifier	p		1261897	1					
ANR	1261940	Identifier	x		1261897	1					
ANR	1261941	MemberAccess	q1 -> p . x		1261897	1					
ANR	1261942	PtrMemberAccess	q1 -> p		1261897	0					
ANR	1261943	Identifier	q1		1261897	0					
ANR	1261944	Identifier	p		1261897	1					
ANR	1261945	Identifier	x		1261897	1					
ANR	1261946	IdentifierDecl	dy = any_abs ( q0 -> p . y - q1 -> p . y )		1261897	1					
ANR	1261947	IdentifierDeclType	fixed		1261897	0					
ANR	1261948	Identifier	dy		1261897	1					
ANR	1261949	AssignmentExpression	dy = any_abs ( q0 -> p . y - q1 -> p . y )		1261897	2		=			
ANR	1261950	Identifier	dy		1261897	0					
ANR	1261951	CallExpression	any_abs ( q0 -> p . y - q1 -> p . y )		1261897	1					
ANR	1261952	Callee	any_abs		1261897	0					
ANR	1261953	Identifier	any_abs		1261897	0					
ANR	1261954	ArgumentList	q0 -> p . y - q1 -> p . y		1261897	1					
ANR	1261955	Argument	q0 -> p . y - q1 -> p . y		1261897	0					
ANR	1261956	AdditiveExpression	q0 -> p . y - q1 -> p . y		1261897	0		-			
ANR	1261957	MemberAccess	q0 -> p . y		1261897	0					
ANR	1261958	PtrMemberAccess	q0 -> p		1261897	0					
ANR	1261959	Identifier	q0		1261897	0					
ANR	1261960	Identifier	p		1261897	1					
ANR	1261961	Identifier	y		1261897	1					
ANR	1261962	MemberAccess	q1 -> p . y		1261897	1					
ANR	1261963	PtrMemberAccess	q1 -> p		1261897	0					
ANR	1261964	Identifier	q1		1261897	0					
ANR	1261965	Identifier	p		1261897	1					
ANR	1261966	Identifier	y		1261897	1					
ANR	1261967	IdentifierDeclStatement	bool swap_axes ;	1952:4:72251:72265	1261897	4	True				
ANR	1261968	IdentifierDecl	swap_axes		1261897	0					
ANR	1261969	IdentifierDeclType	bool		1261897	0					
ANR	1261970	Identifier	swap_axes		1261897	1					
ANR	1261971	Statement	if	1954:4:72272:72273	1261897	5	True				
ANR	1261972	Statement	SKIP_TEST	1954:7:72275:72283	1261897	6	True				
ANR	1261973	ExpressionStatement	dbg_wedge_triangle_cnt ++	1955:8:72293:72317	1261897	7	True				
ANR	1261974	PostIncDecOperationExpression	dbg_wedge_triangle_cnt ++		1261897	0					
ANR	1261975	Identifier	dbg_wedge_triangle_cnt		1261897	0					
ANR	1261976	IncDec	++		1261897	1					
ANR	1261977	Statement	endif	1956:4:72323:72327	1261897	8	True				
ANR	1261978	IfStatement	if ( dx > dy )		1261897	9					
ANR	1261979	Condition	dx > dy	1957:8:72337:72343	1261897	0	True				
ANR	1261980	RelationalExpression	dx > dy		1261897	0		>			
ANR	1261981	Identifier	dx		1261897	0					
ANR	1261982	Identifier	dy		1261897	1					
ANR	1261983	CompoundStatement		10:17:262:262	1261897	1					
ANR	1261984	ExpressionStatement	swap_axes = true	1958:8:72356:72372	1261897	0	True				
ANR	1261985	AssignmentExpression	swap_axes = true		1261897	0		=			
ANR	1261986	Identifier	swap_axes		1261897	0					
ANR	1261987	Identifier	true		1261897	1					
ANR	1261988	ExpressionStatement	qq0 . x = q0 -> p . y	1959:8:72382:72397	1261897	1	True				
ANR	1261989	AssignmentExpression	qq0 . x = q0 -> p . y		1261897	0		=			
ANR	1261990	MemberAccess	qq0 . x		1261897	0					
ANR	1261991	Identifier	qq0		1261897	0					
ANR	1261992	Identifier	x		1261897	1					
ANR	1261993	MemberAccess	q0 -> p . y		1261897	1					
ANR	1261994	PtrMemberAccess	q0 -> p		1261897	0					
ANR	1261995	Identifier	q0		1261897	0					
ANR	1261996	Identifier	p		1261897	1					
ANR	1261997	Identifier	y		1261897	1					
ANR	1261998	ExpressionStatement	qq0 . y = q0 -> p . x	1960:8:72407:72422	1261897	2	True				
ANR	1261999	AssignmentExpression	qq0 . y = q0 -> p . x		1261897	0		=			
ANR	1262000	MemberAccess	qq0 . y		1261897	0					
ANR	1262001	Identifier	qq0		1261897	0					
ANR	1262002	Identifier	y		1261897	1					
ANR	1262003	MemberAccess	q0 -> p . x		1261897	1					
ANR	1262004	PtrMemberAccess	q0 -> p		1261897	0					
ANR	1262005	Identifier	q0		1261897	0					
ANR	1262006	Identifier	p		1261897	1					
ANR	1262007	Identifier	x		1261897	1					
ANR	1262008	ExpressionStatement	qq1 . x = q1 -> p . y	1961:8:72432:72447	1261897	3	True				
ANR	1262009	AssignmentExpression	qq1 . x = q1 -> p . y		1261897	0		=			
ANR	1262010	MemberAccess	qq1 . x		1261897	0					
ANR	1262011	Identifier	qq1		1261897	0					
ANR	1262012	Identifier	x		1261897	1					
ANR	1262013	MemberAccess	q1 -> p . y		1261897	1					
ANR	1262014	PtrMemberAccess	q1 -> p		1261897	0					
ANR	1262015	Identifier	q1		1261897	0					
ANR	1262016	Identifier	p		1261897	1					
ANR	1262017	Identifier	y		1261897	1					
ANR	1262018	ExpressionStatement	qq1 . y = q1 -> p . x	1962:8:72457:72472	1261897	4	True				
ANR	1262019	AssignmentExpression	qq1 . y = q1 -> p . x		1261897	0		=			
ANR	1262020	MemberAccess	qq1 . y		1261897	0					
ANR	1262021	Identifier	qq1		1261897	0					
ANR	1262022	Identifier	y		1261897	1					
ANR	1262023	MemberAccess	q1 -> p . x		1261897	1					
ANR	1262024	PtrMemberAccess	q1 -> p		1261897	0					
ANR	1262025	Identifier	q1		1261897	0					
ANR	1262026	Identifier	p		1261897	1					
ANR	1262027	Identifier	x		1261897	1					
ANR	1262028	ExpressionStatement	qq2 . x = q2 -> p . y	1963:8:72482:72497	1261897	5	True				
ANR	1262029	AssignmentExpression	qq2 . x = q2 -> p . y		1261897	0		=			
ANR	1262030	MemberAccess	qq2 . x		1261897	0					
ANR	1262031	Identifier	qq2		1261897	0					
ANR	1262032	Identifier	x		1261897	1					
ANR	1262033	MemberAccess	q2 -> p . y		1261897	1					
ANR	1262034	PtrMemberAccess	q2 -> p		1261897	0					
ANR	1262035	Identifier	q2		1261897	0					
ANR	1262036	Identifier	p		1261897	1					
ANR	1262037	Identifier	y		1261897	1					
ANR	1262038	ExpressionStatement	qq2 . y = q2 -> p . x	1964:8:72507:72522	1261897	6	True				
ANR	1262039	AssignmentExpression	qq2 . y = q2 -> p . x		1261897	0		=			
ANR	1262040	MemberAccess	qq2 . y		1261897	0					
ANR	1262041	Identifier	qq2		1261897	0					
ANR	1262042	Identifier	y		1261897	1					
ANR	1262043	MemberAccess	q2 -> p . x		1261897	1					
ANR	1262044	PtrMemberAccess	q2 -> p		1261897	0					
ANR	1262045	Identifier	q2		1261897	0					
ANR	1262046	Identifier	p		1261897	1					
ANR	1262047	Identifier	x		1261897	1					
ANR	1262048	ExpressionStatement	p0 = & qq0	1965:8:72532:72541	1261897	7	True				
ANR	1262049	AssignmentExpression	p0 = & qq0		1261897	0		=			
ANR	1262050	Identifier	p0		1261897	0					
ANR	1262051	UnaryOperationExpression	& qq0		1261897	1					
ANR	1262052	UnaryOperator	&		1261897	0					
ANR	1262053	Identifier	qq0		1261897	1					
ANR	1262054	ExpressionStatement	p1 = & qq1	1966:8:72551:72560	1261897	8	True				
ANR	1262055	AssignmentExpression	p1 = & qq1		1261897	0		=			
ANR	1262056	Identifier	p1		1261897	0					
ANR	1262057	UnaryOperationExpression	& qq1		1261897	1					
ANR	1262058	UnaryOperator	&		1261897	0					
ANR	1262059	Identifier	qq1		1261897	1					
ANR	1262060	ExpressionStatement	p2 = & qq2	1967:8:72570:72579	1261897	9	True				
ANR	1262061	AssignmentExpression	p2 = & qq2		1261897	0		=			
ANR	1262062	Identifier	p2		1261897	0					
ANR	1262063	UnaryOperationExpression	& qq2		1261897	1					
ANR	1262064	UnaryOperator	&		1261897	0					
ANR	1262065	Identifier	qq2		1261897	1					
ANR	1262066	ElseStatement	else		1261897	0					
ANR	1262067	CompoundStatement		21:11:508:508	1261897	0					
ANR	1262068	ExpressionStatement	swap_axes = false	1969:8:72602:72619	1261897	0	True				
ANR	1262069	AssignmentExpression	swap_axes = false		1261897	0		=			
ANR	1262070	Identifier	swap_axes		1261897	0					
ANR	1262071	Identifier	false		1261897	1					
ANR	1262072	ExpressionStatement	p0 = & q0 -> p	1970:8:72629:72640	1261897	1	True				
ANR	1262073	AssignmentExpression	p0 = & q0 -> p		1261897	0		=			
ANR	1262074	Identifier	p0		1261897	0					
ANR	1262075	UnaryOperationExpression	& q0 -> p		1261897	1					
ANR	1262076	UnaryOperator	&		1261897	0					
ANR	1262077	PtrMemberAccess	q0 -> p		1261897	1					
ANR	1262078	Identifier	q0		1261897	0					
ANR	1262079	Identifier	p		1261897	1					
ANR	1262080	ExpressionStatement	p1 = & q1 -> p	1971:8:72650:72661	1261897	2	True				
ANR	1262081	AssignmentExpression	p1 = & q1 -> p		1261897	0		=			
ANR	1262082	Identifier	p1		1261897	0					
ANR	1262083	UnaryOperationExpression	& q1 -> p		1261897	1					
ANR	1262084	UnaryOperator	&		1261897	0					
ANR	1262085	PtrMemberAccess	q1 -> p		1261897	1					
ANR	1262086	Identifier	q1		1261897	0					
ANR	1262087	Identifier	p		1261897	1					
ANR	1262088	ExpressionStatement	p2 = & q2 -> p	1972:8:72671:72682	1261897	3	True				
ANR	1262089	AssignmentExpression	p2 = & q2 -> p		1261897	0		=			
ANR	1262090	Identifier	p2		1261897	0					
ANR	1262091	UnaryOperationExpression	& q2 -> p		1261897	1					
ANR	1262092	UnaryOperator	&		1261897	0					
ANR	1262093	PtrMemberAccess	q2 -> p		1261897	1					
ANR	1262094	Identifier	q2		1261897	0					
ANR	1262095	Identifier	p		1261897	1					
ANR	1262096	IfStatement	if ( p0 -> y < p1 -> y )		1261897	10					
ANR	1262097	Condition	p0 -> y < p1 -> y	1978:8:72940:72952	1261897	0	True				
ANR	1262098	RelationalExpression	p0 -> y < p1 -> y		1261897	0		<			
ANR	1262099	PtrMemberAccess	p0 -> y		1261897	0					
ANR	1262100	Identifier	p0		1261897	0					
ANR	1262101	Identifier	y		1261897	1					
ANR	1262102	PtrMemberAccess	p1 -> y		1261897	1					
ANR	1262103	Identifier	p1		1261897	0					
ANR	1262104	Identifier	y		1261897	1					
ANR	1262105	CompoundStatement		31:23:871:871	1261897	1					
ANR	1262106	ExpressionStatement	"code = fill_wedge_trap ( pfs , p0 , p2 , p0 , p1 , q0 -> c , q2 -> c , swap_axes , false )"	1979:8:72965:73040	1261897	0	True				
ANR	1262107	AssignmentExpression	"code = fill_wedge_trap ( pfs , p0 , p2 , p0 , p1 , q0 -> c , q2 -> c , swap_axes , false )"		1261897	0		=			
ANR	1262108	Identifier	code		1261897	0					
ANR	1262109	CallExpression	"fill_wedge_trap ( pfs , p0 , p2 , p0 , p1 , q0 -> c , q2 -> c , swap_axes , false )"		1261897	1					
ANR	1262110	Callee	fill_wedge_trap		1261897	0					
ANR	1262111	Identifier	fill_wedge_trap		1261897	0					
ANR	1262112	ArgumentList	pfs		1261897	1					
ANR	1262113	Argument	pfs		1261897	0					
ANR	1262114	Identifier	pfs		1261897	0					
ANR	1262115	Argument	p0		1261897	1					
ANR	1262116	Identifier	p0		1261897	0					
ANR	1262117	Argument	p2		1261897	2					
ANR	1262118	Identifier	p2		1261897	0					
ANR	1262119	Argument	p0		1261897	3					
ANR	1262120	Identifier	p0		1261897	0					
ANR	1262121	Argument	p1		1261897	4					
ANR	1262122	Identifier	p1		1261897	0					
ANR	1262123	Argument	q0 -> c		1261897	5					
ANR	1262124	PtrMemberAccess	q0 -> c		1261897	0					
ANR	1262125	Identifier	q0		1261897	0					
ANR	1262126	Identifier	c		1261897	1					
ANR	1262127	Argument	q2 -> c		1261897	6					
ANR	1262128	PtrMemberAccess	q2 -> c		1261897	0					
ANR	1262129	Identifier	q2		1261897	0					
ANR	1262130	Identifier	c		1261897	1					
ANR	1262131	Argument	swap_axes		1261897	7					
ANR	1262132	Identifier	swap_axes		1261897	0					
ANR	1262133	Argument	false		1261897	8					
ANR	1262134	Identifier	false		1261897	0					
ANR	1262135	IfStatement	if ( code < 0 )		1261897	1					
ANR	1262136	Condition	code < 0	1980:12:73054:73061	1261897	0	True				
ANR	1262137	RelationalExpression	code < 0		1261897	0		<			
ANR	1262138	Identifier	code		1261897	0					
ANR	1262139	PrimaryExpression	0		1261897	1					
ANR	1262140	ReturnStatement	return code ;	1981:12:73076:73087	1261897	1	True				
ANR	1262141	Identifier	code		1261897	0					
ANR	1262142	ReturnStatement	"return fill_wedge_trap ( pfs , p2 , p1 , p0 , p1 , q2 -> c , q1 -> c , swap_axes , false ) ;"	1982:8:73097:73172	1261897	2	True				
ANR	1262143	CallExpression	"fill_wedge_trap ( pfs , p2 , p1 , p0 , p1 , q2 -> c , q1 -> c , swap_axes , false )"		1261897	0					
ANR	1262144	Callee	fill_wedge_trap		1261897	0					
ANR	1262145	Identifier	fill_wedge_trap		1261897	0					
ANR	1262146	ArgumentList	pfs		1261897	1					
ANR	1262147	Argument	pfs		1261897	0					
ANR	1262148	Identifier	pfs		1261897	0					
ANR	1262149	Argument	p2		1261897	1					
ANR	1262150	Identifier	p2		1261897	0					
ANR	1262151	Argument	p1		1261897	2					
ANR	1262152	Identifier	p1		1261897	0					
ANR	1262153	Argument	p0		1261897	3					
ANR	1262154	Identifier	p0		1261897	0					
ANR	1262155	Argument	p1		1261897	4					
ANR	1262156	Identifier	p1		1261897	0					
ANR	1262157	Argument	q2 -> c		1261897	5					
ANR	1262158	PtrMemberAccess	q2 -> c		1261897	0					
ANR	1262159	Identifier	q2		1261897	0					
ANR	1262160	Identifier	c		1261897	1					
ANR	1262161	Argument	q1 -> c		1261897	6					
ANR	1262162	PtrMemberAccess	q1 -> c		1261897	0					
ANR	1262163	Identifier	q1		1261897	0					
ANR	1262164	Identifier	c		1261897	1					
ANR	1262165	Argument	swap_axes		1261897	7					
ANR	1262166	Identifier	swap_axes		1261897	0					
ANR	1262167	Argument	false		1261897	8					
ANR	1262168	Identifier	false		1261897	0					
ANR	1262169	ElseStatement	else		1261897	0					
ANR	1262170	CompoundStatement		36:11:1101:1101	1261897	0					
ANR	1262171	ExpressionStatement	"code = fill_wedge_trap ( pfs , p0 , p2 , p1 , p0 , q0 -> c , q2 -> c , swap_axes , false )"	1984:8:73195:73270	1261897	0	True				
ANR	1262172	AssignmentExpression	"code = fill_wedge_trap ( pfs , p0 , p2 , p1 , p0 , q0 -> c , q2 -> c , swap_axes , false )"		1261897	0		=			
ANR	1262173	Identifier	code		1261897	0					
ANR	1262174	CallExpression	"fill_wedge_trap ( pfs , p0 , p2 , p1 , p0 , q0 -> c , q2 -> c , swap_axes , false )"		1261897	1					
ANR	1262175	Callee	fill_wedge_trap		1261897	0					
ANR	1262176	Identifier	fill_wedge_trap		1261897	0					
ANR	1262177	ArgumentList	pfs		1261897	1					
ANR	1262178	Argument	pfs		1261897	0					
ANR	1262179	Identifier	pfs		1261897	0					
ANR	1262180	Argument	p0		1261897	1					
ANR	1262181	Identifier	p0		1261897	0					
ANR	1262182	Argument	p2		1261897	2					
ANR	1262183	Identifier	p2		1261897	0					
ANR	1262184	Argument	p1		1261897	3					
ANR	1262185	Identifier	p1		1261897	0					
ANR	1262186	Argument	p0		1261897	4					
ANR	1262187	Identifier	p0		1261897	0					
ANR	1262188	Argument	q0 -> c		1261897	5					
ANR	1262189	PtrMemberAccess	q0 -> c		1261897	0					
ANR	1262190	Identifier	q0		1261897	0					
ANR	1262191	Identifier	c		1261897	1					
ANR	1262192	Argument	q2 -> c		1261897	6					
ANR	1262193	PtrMemberAccess	q2 -> c		1261897	0					
ANR	1262194	Identifier	q2		1261897	0					
ANR	1262195	Identifier	c		1261897	1					
ANR	1262196	Argument	swap_axes		1261897	7					
ANR	1262197	Identifier	swap_axes		1261897	0					
ANR	1262198	Argument	false		1261897	8					
ANR	1262199	Identifier	false		1261897	0					
ANR	1262200	IfStatement	if ( code < 0 )		1261897	1					
ANR	1262201	Condition	code < 0	1985:12:73284:73291	1261897	0	True				
ANR	1262202	RelationalExpression	code < 0		1261897	0		<			
ANR	1262203	Identifier	code		1261897	0					
ANR	1262204	PrimaryExpression	0		1261897	1					
ANR	1262205	ReturnStatement	return code ;	1986:12:73306:73317	1261897	1	True				
ANR	1262206	Identifier	code		1261897	0					
ANR	1262207	ReturnStatement	"return fill_wedge_trap ( pfs , p2 , p1 , p1 , p0 , q2 -> c , q1 -> c , swap_axes , false ) ;"	1987:8:73327:73402	1261897	2	True				
ANR	1262208	CallExpression	"fill_wedge_trap ( pfs , p2 , p1 , p1 , p0 , q2 -> c , q1 -> c , swap_axes , false )"		1261897	0					
ANR	1262209	Callee	fill_wedge_trap		1261897	0					
ANR	1262210	Identifier	fill_wedge_trap		1261897	0					
ANR	1262211	ArgumentList	pfs		1261897	1					
ANR	1262212	Argument	pfs		1261897	0					
ANR	1262213	Identifier	pfs		1261897	0					
ANR	1262214	Argument	p2		1261897	1					
ANR	1262215	Identifier	p2		1261897	0					
ANR	1262216	Argument	p1		1261897	2					
ANR	1262217	Identifier	p1		1261897	0					
ANR	1262218	Argument	p1		1261897	3					
ANR	1262219	Identifier	p1		1261897	0					
ANR	1262220	Argument	p0		1261897	4					
ANR	1262221	Identifier	p0		1261897	0					
ANR	1262222	Argument	q2 -> c		1261897	5					
ANR	1262223	PtrMemberAccess	q2 -> c		1261897	0					
ANR	1262224	Identifier	q2		1261897	0					
ANR	1262225	Identifier	c		1261897	1					
ANR	1262226	Argument	q1 -> c		1261897	6					
ANR	1262227	PtrMemberAccess	q1 -> c		1261897	0					
ANR	1262228	Identifier	q1		1261897	0					
ANR	1262229	Identifier	c		1261897	1					
ANR	1262230	Argument	swap_axes		1261897	7					
ANR	1262231	Identifier	swap_axes		1261897	0					
ANR	1262232	Argument	false		1261897	8					
ANR	1262233	Identifier	false		1261897	0					
ANR	1262234	ReturnType	static inline int		1261897	1					
ANR	1262235	Identifier	fill_triangle_wedge_aux		1261897	2					
ANR	1262236	ParameterList	"patch_fill_state_t * pfs , const shading_vertex_t * q0 , const shading_vertex_t * q1 , const shading_vertex_t * q2"		1261897	3					
ANR	1262237	Parameter	patch_fill_state_t * pfs	1946:24:71962:71984	1261897	0	True				
ANR	1262238	ParameterType	patch_fill_state_t *		1261897	0					
ANR	1262239	Identifier	pfs		1261897	1					
ANR	1262240	Parameter	const shading_vertex_t * q0	1947:12:71999:72024	1261897	1	True				
ANR	1262241	ParameterType	const shading_vertex_t *		1261897	0					
ANR	1262242	Identifier	q0		1261897	1					
ANR	1262243	Parameter	const shading_vertex_t * q1	1947:40:72027:72052	1261897	2	True				
ANR	1262244	ParameterType	const shading_vertex_t *		1261897	0					
ANR	1262245	Identifier	q1		1261897	1					
ANR	1262246	Parameter	const shading_vertex_t * q2	1947:68:72055:72080	1261897	3	True				
ANR	1262247	ParameterType	const shading_vertex_t *		1261897	0					
ANR	1262248	Identifier	q2		1261897	1					
ANR	1262249	CFGEntryNode	ENTRY		1261897		True				
ANR	1262250	CFGExitNode	EXIT		1261897		True				
ANR	1262251	Symbol	q2 -> p . x		1261897						
ANR	1262252	Symbol	q0 -> p		1261897						
ANR	1262253	Symbol	q2 -> p . y		1261897						
ANR	1262254	Symbol	* q2		1261897						
ANR	1262255	Symbol	* q1		1261897						
ANR	1262256	Symbol	* q0		1261897						
ANR	1262257	Symbol	qq1		1261897						
ANR	1262258	Symbol	qq0		1261897						
ANR	1262259	Symbol	qq2		1261897						
ANR	1262260	Symbol	q1 -> p		1261897						
ANR	1262261	Symbol	dx		1261897						
ANR	1262262	Symbol	dbg_wedge_triangle_cnt		1261897						
ANR	1262263	Symbol	fill_wedge_trap		1261897						
ANR	1262264	Symbol	dy		1261897						
ANR	1262265	Symbol	& qq1		1261897						
ANR	1262266	Symbol	& qq0		1261897						
ANR	1262267	Symbol	q0 -> c		1261897						
ANR	1262268	Symbol	q0 -> p . y		1261897						
ANR	1262269	Symbol	true		1261897						
ANR	1262270	Symbol	q0 -> p . x		1261897						
ANR	1262271	Symbol	qq2 . y		1261897						
ANR	1262272	Symbol	qq2 . x		1261897						
ANR	1262273	Symbol	pfs		1261897						
ANR	1262274	Symbol	& q2 -> p		1261897						
ANR	1262275	Symbol	& qq2		1261897						
ANR	1262276	Symbol	p0		1261897						
ANR	1262277	Symbol	p1		1261897						
ANR	1262278	Symbol	p2		1261897						
ANR	1262279	Symbol	qq1 . x		1261897						
ANR	1262280	Symbol	code		1261897						
ANR	1262281	Symbol	& q0 -> p		1261897						
ANR	1262282	Symbol	qq1 . y		1261897						
ANR	1262283	Symbol	qq0 . y		1261897						
ANR	1262284	Symbol	p0 -> y		1261897						
ANR	1262285	Symbol	qq0 . x		1261897						
ANR	1262286	Symbol	q1 -> p . y		1261897						
ANR	1262287	Symbol	any_abs		1261897						
ANR	1262288	Symbol	q2 -> c		1261897						
ANR	1262289	Symbol	q1 -> p . x		1261897						
ANR	1262290	Symbol	q0		1261897						
ANR	1262291	Symbol	q1		1261897						
ANR	1262292	Symbol	q2		1261897						
ANR	1262293	Symbol	q1 -> c		1261897						
ANR	1262294	Symbol	& q1 -> p		1261897						
ANR	1262295	Symbol	* p1		1261897						
ANR	1262296	Symbol	* p0		1261897						
ANR	1262297	Symbol	p1 -> y		1261897						
ANR	1262298	Symbol	false		1261897						
ANR	1262299	Symbol	q2 -> p		1261897						
ANR	1262300	Symbol	swap_axes		1261897						
ANR	1262301	Function	try_device_linear_color	1991:0:73413:76048							
ANR	1262302	FunctionDef	"try_device_linear_color (patch_fill_state_t * pfs , bool wedge , const shading_vertex_t * p0 , const shading_vertex_t * p1 , const shading_vertex_t * p2)"		1262301	0					
ANR	1262303	CompoundStatement		1995:0:73592:76048	1262301	0					
ANR	1262304	IdentifierDeclStatement	int code ;	2002:4:73757:73765	1262301	0	True				
ANR	1262305	IdentifierDecl	code		1262301	0					
ANR	1262306	IdentifierDeclType	int		1262301	0					
ANR	1262307	Identifier	code		1262301	1					
ANR	1262308	IfStatement	if ( pfs -> unlinear )		1262301	1					
ANR	1262309	Condition	pfs -> unlinear	2004:8:73776:73788	1262301	0	True				
ANR	1262310	PtrMemberAccess	pfs -> unlinear		1262301	0					
ANR	1262311	Identifier	pfs		1262301	0					
ANR	1262312	Identifier	unlinear		1262301	1					
ANR	1262313	ReturnStatement	return 2 ;	2005:8:73799:73807	1262301	1	True				
ANR	1262314	PrimaryExpression	2		1262301	0					
ANR	1262315	IfStatement	if ( ! wedge )		1262301	2					
ANR	1262316	Condition	! wedge	2006:8:73817:73822	1262301	0	True				
ANR	1262317	UnaryOperationExpression	! wedge		1262301	0					
ANR	1262318	UnaryOperator	!		1262301	0					
ANR	1262319	Identifier	wedge		1262301	1					
ANR	1262320	CompoundStatement		13:8:242:286	1262301	1					
ANR	1262321	IdentifierDeclStatement	const gs_color_space * cs = pfs -> direct_space ;	2007:8:73835:73879	1262301	0	True				
ANR	1262322	IdentifierDecl	* cs = pfs -> direct_space		1262301	0					
ANR	1262323	IdentifierDeclType	const gs_color_space *		1262301	0					
ANR	1262324	Identifier	cs		1262301	1					
ANR	1262325	AssignmentExpression	* cs = pfs -> direct_space		1262301	2		=			
ANR	1262326	Identifier	cs		1262301	0					
ANR	1262327	PtrMemberAccess	pfs -> direct_space		1262301	1					
ANR	1262328	Identifier	pfs		1262301	0					
ANR	1262329	Identifier	direct_space		1262301	1					
ANR	1262330	IfStatement	if ( cs != NULL )		1262301	1					
ANR	1262331	Condition	cs != NULL	2009:12:73894:73903	1262301	0	True				
ANR	1262332	EqualityExpression	cs != NULL		1262301	0		!=			
ANR	1262333	Identifier	cs		1262301	0					
ANR	1262334	Identifier	NULL		1262301	1					
ANR	1262335	CompoundStatement		16:12:327:354	1262301	1					
ANR	1262336	IdentifierDeclStatement	"float s0 , s1 , s2 , s01 , s012 ;"	2010:12:73920:73947	1262301	0	True				
ANR	1262337	IdentifierDecl	s0		1262301	0					
ANR	1262338	IdentifierDeclType	float		1262301	0					
ANR	1262339	Identifier	s0		1262301	1					
ANR	1262340	IdentifierDecl	s1		1262301	1					
ANR	1262341	IdentifierDeclType	float		1262301	0					
ANR	1262342	Identifier	s1		1262301	1					
ANR	1262343	IdentifierDecl	s2		1262301	2					
ANR	1262344	IdentifierDeclType	float		1262301	0					
ANR	1262345	Identifier	s2		1262301	1					
ANR	1262346	IdentifierDecl	s01		1262301	3					
ANR	1262347	IdentifierDeclType	float		1262301	0					
ANR	1262348	Identifier	s01		1262301	1					
ANR	1262349	IdentifierDecl	s012		1262301	4					
ANR	1262350	IdentifierDeclType	float		1262301	0					
ANR	1262351	Identifier	s012		1262301	1					
ANR	1262352	ExpressionStatement	"s0 = function_linearity ( pfs , p0 -> c , p1 -> c )"	2012:12:73962:74004	1262301	1	True				
ANR	1262353	AssignmentExpression	"s0 = function_linearity ( pfs , p0 -> c , p1 -> c )"		1262301	0		=			
ANR	1262354	Identifier	s0		1262301	0					
ANR	1262355	CallExpression	"function_linearity ( pfs , p0 -> c , p1 -> c )"		1262301	1					
ANR	1262356	Callee	function_linearity		1262301	0					
ANR	1262357	Identifier	function_linearity		1262301	0					
ANR	1262358	ArgumentList	pfs		1262301	1					
ANR	1262359	Argument	pfs		1262301	0					
ANR	1262360	Identifier	pfs		1262301	0					
ANR	1262361	Argument	p0 -> c		1262301	1					
ANR	1262362	PtrMemberAccess	p0 -> c		1262301	0					
ANR	1262363	Identifier	p0		1262301	0					
ANR	1262364	Identifier	c		1262301	1					
ANR	1262365	Argument	p1 -> c		1262301	2					
ANR	1262366	PtrMemberAccess	p1 -> c		1262301	0					
ANR	1262367	Identifier	p1		1262301	0					
ANR	1262368	Identifier	c		1262301	1					
ANR	1262369	IfStatement	if ( s0 > pfs -> smoothness )		1262301	2					
ANR	1262370	Condition	s0 > pfs -> smoothness	2013:16:74022:74041	1262301	0	True				
ANR	1262371	RelationalExpression	s0 > pfs -> smoothness		1262301	0		>			
ANR	1262372	Identifier	s0		1262301	0					
ANR	1262373	PtrMemberAccess	pfs -> smoothness		1262301	1					
ANR	1262374	Identifier	pfs		1262301	0					
ANR	1262375	Identifier	smoothness		1262301	1					
ANR	1262376	ReturnStatement	return 1 ;	2014:16:74060:74068	1262301	1	True				
ANR	1262377	PrimaryExpression	1		1262301	0					
ANR	1262378	ExpressionStatement	"s1 = function_linearity ( pfs , p1 -> c , p2 -> c )"	2015:12:74082:74124	1262301	3	True				
ANR	1262379	AssignmentExpression	"s1 = function_linearity ( pfs , p1 -> c , p2 -> c )"		1262301	0		=			
ANR	1262380	Identifier	s1		1262301	0					
ANR	1262381	CallExpression	"function_linearity ( pfs , p1 -> c , p2 -> c )"		1262301	1					
ANR	1262382	Callee	function_linearity		1262301	0					
ANR	1262383	Identifier	function_linearity		1262301	0					
ANR	1262384	ArgumentList	pfs		1262301	1					
ANR	1262385	Argument	pfs		1262301	0					
ANR	1262386	Identifier	pfs		1262301	0					
ANR	1262387	Argument	p1 -> c		1262301	1					
ANR	1262388	PtrMemberAccess	p1 -> c		1262301	0					
ANR	1262389	Identifier	p1		1262301	0					
ANR	1262390	Identifier	c		1262301	1					
ANR	1262391	Argument	p2 -> c		1262301	2					
ANR	1262392	PtrMemberAccess	p2 -> c		1262301	0					
ANR	1262393	Identifier	p2		1262301	0					
ANR	1262394	Identifier	c		1262301	1					
ANR	1262395	IfStatement	if ( s1 > pfs -> smoothness )		1262301	4					
ANR	1262396	Condition	s1 > pfs -> smoothness	2016:16:74142:74161	1262301	0	True				
ANR	1262397	RelationalExpression	s1 > pfs -> smoothness		1262301	0		>			
ANR	1262398	Identifier	s1		1262301	0					
ANR	1262399	PtrMemberAccess	pfs -> smoothness		1262301	1					
ANR	1262400	Identifier	pfs		1262301	0					
ANR	1262401	Identifier	smoothness		1262301	1					
ANR	1262402	ReturnStatement	return 1 ;	2017:16:74180:74188	1262301	1	True				
ANR	1262403	PrimaryExpression	1		1262301	0					
ANR	1262404	ExpressionStatement	"s2 = function_linearity ( pfs , p2 -> c , p0 -> c )"	2018:12:74202:74244	1262301	5	True				
ANR	1262405	AssignmentExpression	"s2 = function_linearity ( pfs , p2 -> c , p0 -> c )"		1262301	0		=			
ANR	1262406	Identifier	s2		1262301	0					
ANR	1262407	CallExpression	"function_linearity ( pfs , p2 -> c , p0 -> c )"		1262301	1					
ANR	1262408	Callee	function_linearity		1262301	0					
ANR	1262409	Identifier	function_linearity		1262301	0					
ANR	1262410	ArgumentList	pfs		1262301	1					
ANR	1262411	Argument	pfs		1262301	0					
ANR	1262412	Identifier	pfs		1262301	0					
ANR	1262413	Argument	p2 -> c		1262301	1					
ANR	1262414	PtrMemberAccess	p2 -> c		1262301	0					
ANR	1262415	Identifier	p2		1262301	0					
ANR	1262416	Identifier	c		1262301	1					
ANR	1262417	Argument	p0 -> c		1262301	2					
ANR	1262418	PtrMemberAccess	p0 -> c		1262301	0					
ANR	1262419	Identifier	p0		1262301	0					
ANR	1262420	Identifier	c		1262301	1					
ANR	1262421	IfStatement	if ( s2 > pfs -> smoothness )		1262301	6					
ANR	1262422	Condition	s2 > pfs -> smoothness	2019:16:74262:74281	1262301	0	True				
ANR	1262423	RelationalExpression	s2 > pfs -> smoothness		1262301	0		>			
ANR	1262424	Identifier	s2		1262301	0					
ANR	1262425	PtrMemberAccess	pfs -> smoothness		1262301	1					
ANR	1262426	Identifier	pfs		1262301	0					
ANR	1262427	Identifier	smoothness		1262301	1					
ANR	1262428	ReturnStatement	return 1 ;	2020:16:74300:74308	1262301	1	True				
ANR	1262429	PrimaryExpression	1		1262301	0					
ANR	1262430	ExpressionStatement	"s01 = max ( s0 , s1 )"	2022:12:74370:74387	1262301	7	True				
ANR	1262431	AssignmentExpression	"s01 = max ( s0 , s1 )"		1262301	0		=			
ANR	1262432	Identifier	s01		1262301	0					
ANR	1262433	CallExpression	"max ( s0 , s1 )"		1262301	1					
ANR	1262434	Callee	max		1262301	0					
ANR	1262435	Identifier	max		1262301	0					
ANR	1262436	ArgumentList	s0		1262301	1					
ANR	1262437	Argument	s0		1262301	0					
ANR	1262438	Identifier	s0		1262301	0					
ANR	1262439	Argument	s1		1262301	1					
ANR	1262440	Identifier	s1		1262301	0					
ANR	1262441	ExpressionStatement	"s012 = max ( s01 , s2 )"	2023:12:74401:74420	1262301	8	True				
ANR	1262442	AssignmentExpression	"s012 = max ( s01 , s2 )"		1262301	0		=			
ANR	1262443	Identifier	s012		1262301	0					
ANR	1262444	CallExpression	"max ( s01 , s2 )"		1262301	1					
ANR	1262445	Callee	max		1262301	0					
ANR	1262446	Identifier	max		1262301	0					
ANR	1262447	ArgumentList	s01		1262301	1					
ANR	1262448	Argument	s01		1262301	0					
ANR	1262449	Identifier	s01		1262301	0					
ANR	1262450	Argument	s2		1262301	1					
ANR	1262451	Identifier	s2		1262301	0					
ANR	1262452	IfStatement	if ( pfs -> cs_always_linear )		1262301	9					
ANR	1262453	Condition	pfs -> cs_always_linear	2024:16:74438:74458	1262301	0	True				
ANR	1262454	PtrMemberAccess	pfs -> cs_always_linear		1262301	0					
ANR	1262455	Identifier	pfs		1262301	0					
ANR	1262456	Identifier	cs_always_linear		1262301	1					
ANR	1262457	ExpressionStatement	code = 1	2025:16:74477:74485	1262301	1	True				
ANR	1262458	AssignmentExpression	code = 1		1262301	0		=			
ANR	1262459	Identifier	code		1262301	0					
ANR	1262460	PrimaryExpression	1		1262301	1					
ANR	1262461	ElseStatement	else		1262301	0					
ANR	1262462	ExpressionStatement	"code = cs_is_linear ( cs , pfs -> pgs , pfs -> trans_device , & p0 -> c -> cc , & p1 -> c -> cc , & p2 -> c -> cc , NULL , pfs -> smoothness - s012 , pfs -> icclink )"	2027:16:74520:74720	1262301	0	True				
ANR	1262463	AssignmentExpression	"code = cs_is_linear ( cs , pfs -> pgs , pfs -> trans_device , & p0 -> c -> cc , & p1 -> c -> cc , & p2 -> c -> cc , NULL , pfs -> smoothness - s012 , pfs -> icclink )"		1262301	0		=			
ANR	1262464	Identifier	code		1262301	0					
ANR	1262465	CallExpression	"cs_is_linear ( cs , pfs -> pgs , pfs -> trans_device , & p0 -> c -> cc , & p1 -> c -> cc , & p2 -> c -> cc , NULL , pfs -> smoothness - s012 , pfs -> icclink )"		1262301	1					
ANR	1262466	Callee	cs_is_linear		1262301	0					
ANR	1262467	Identifier	cs_is_linear		1262301	0					
ANR	1262468	ArgumentList	cs		1262301	1					
ANR	1262469	Argument	cs		1262301	0					
ANR	1262470	Identifier	cs		1262301	0					
ANR	1262471	Argument	pfs -> pgs		1262301	1					
ANR	1262472	PtrMemberAccess	pfs -> pgs		1262301	0					
ANR	1262473	Identifier	pfs		1262301	0					
ANR	1262474	Identifier	pgs		1262301	1					
ANR	1262475	Argument	pfs -> trans_device		1262301	2					
ANR	1262476	PtrMemberAccess	pfs -> trans_device		1262301	0					
ANR	1262477	Identifier	pfs		1262301	0					
ANR	1262478	Identifier	trans_device		1262301	1					
ANR	1262479	Argument	& p0 -> c -> cc		1262301	3					
ANR	1262480	UnaryOperationExpression	& p0 -> c -> cc		1262301	0					
ANR	1262481	UnaryOperator	&		1262301	0					
ANR	1262482	PtrMemberAccess	p0 -> c -> cc		1262301	1					
ANR	1262483	PtrMemberAccess	p0 -> c		1262301	0					
ANR	1262484	Identifier	p0		1262301	0					
ANR	1262485	Identifier	c		1262301	1					
ANR	1262486	Identifier	cc		1262301	1					
ANR	1262487	Argument	& p1 -> c -> cc		1262301	4					
ANR	1262488	UnaryOperationExpression	& p1 -> c -> cc		1262301	0					
ANR	1262489	UnaryOperator	&		1262301	0					
ANR	1262490	PtrMemberAccess	p1 -> c -> cc		1262301	1					
ANR	1262491	PtrMemberAccess	p1 -> c		1262301	0					
ANR	1262492	Identifier	p1		1262301	0					
ANR	1262493	Identifier	c		1262301	1					
ANR	1262494	Identifier	cc		1262301	1					
ANR	1262495	Argument	& p2 -> c -> cc		1262301	5					
ANR	1262496	UnaryOperationExpression	& p2 -> c -> cc		1262301	0					
ANR	1262497	UnaryOperator	&		1262301	0					
ANR	1262498	PtrMemberAccess	p2 -> c -> cc		1262301	1					
ANR	1262499	PtrMemberAccess	p2 -> c		1262301	0					
ANR	1262500	Identifier	p2		1262301	0					
ANR	1262501	Identifier	c		1262301	1					
ANR	1262502	Identifier	cc		1262301	1					
ANR	1262503	Argument	NULL		1262301	6					
ANR	1262504	Identifier	NULL		1262301	0					
ANR	1262505	Argument	pfs -> smoothness - s012		1262301	7					
ANR	1262506	AdditiveExpression	pfs -> smoothness - s012		1262301	0		-			
ANR	1262507	PtrMemberAccess	pfs -> smoothness		1262301	0					
ANR	1262508	Identifier	pfs		1262301	0					
ANR	1262509	Identifier	smoothness		1262301	1					
ANR	1262510	Identifier	s012		1262301	1					
ANR	1262511	Argument	pfs -> icclink		1262301	8					
ANR	1262512	PtrMemberAccess	pfs -> icclink		1262301	0					
ANR	1262513	Identifier	pfs		1262301	0					
ANR	1262514	Identifier	icclink		1262301	1					
ANR	1262515	IfStatement	if ( code < 0 )		1262301	10					
ANR	1262516	Condition	code < 0	2030:16:74738:74745	1262301	0	True				
ANR	1262517	RelationalExpression	code < 0		1262301	0		<			
ANR	1262518	Identifier	code		1262301	0					
ANR	1262519	PrimaryExpression	0		1262301	1					
ANR	1262520	ReturnStatement	return code ;	2031:16:74764:74775	1262301	1	True				
ANR	1262521	Identifier	code		1262301	0					
ANR	1262522	IfStatement	if ( code == 0 )		1262301	11					
ANR	1262523	Condition	code == 0	2032:16:74793:74801	1262301	0	True				
ANR	1262524	EqualityExpression	code == 0		1262301	0		==			
ANR	1262525	Identifier	code		1262301	0					
ANR	1262526	PrimaryExpression	0		1262301	1					
ANR	1262527	ReturnStatement	return 1 ;	2033:16:74820:74828	1262301	1	True				
ANR	1262528	PrimaryExpression	1		1262301	0					
ANR	1262529	CompoundStatement		45:8:1382:1403	1262301	3					
ANR	1262530	IdentifierDeclStatement	gx_device * pdev = pfs -> dev ;	2036:8:74854:74880	1262301	0	True				
ANR	1262531	IdentifierDecl	* pdev = pfs -> dev		1262301	0					
ANR	1262532	IdentifierDeclType	gx_device *		1262301	0					
ANR	1262533	Identifier	pdev		1262301	1					
ANR	1262534	AssignmentExpression	* pdev = pfs -> dev		1262301	2		=			
ANR	1262535	Identifier	pdev		1262301	0					
ANR	1262536	PtrMemberAccess	pfs -> dev		1262301	1					
ANR	1262537	Identifier	pfs		1262301	0					
ANR	1262538	Identifier	dev		1262301	1					
ANR	1262539	Statement	frac31	2037:8:74890:74895	1262301	1	True				
ANR	1262540	ExpressionStatement	fc [ 3 ] [ GX_DEVICE_COLOR_MAX_COMPONENTS ]	2037:15:74897:74934	1262301	2	True				
ANR	1262541	ArrayIndexing	fc [ 3 ] [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		1262301	0					
ANR	1262542	ArrayIndexing	fc [ 3 ]		1262301	0					
ANR	1262543	Identifier	fc		1262301	0					
ANR	1262544	PrimaryExpression	3		1262301	1					
ANR	1262545	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		1262301	1					
ANR	1262546	IdentifierDeclStatement	gs_fill_attributes fa ;	2038:8:74944:74965	1262301	3	True				
ANR	1262547	IdentifierDecl	fa		1262301	0					
ANR	1262548	IdentifierDeclType	gs_fill_attributes		1262301	0					
ANR	1262549	Identifier	fa		1262301	1					
ANR	1262550	IdentifierDeclStatement	gx_device_color dc [ 3 ] ;	2039:8:74975:74996	1262301	4	True				
ANR	1262551	IdentifierDecl	dc [ 3 ]		1262301	0					
ANR	1262552	IdentifierDeclType	gx_device_color [ 3 ]		1262301	0					
ANR	1262553	Identifier	dc		1262301	1					
ANR	1262554	PrimaryExpression	3		1262301	2					
ANR	1262555	ExpressionStatement	fa . clip = & pfs -> rect	2041:8:75007:75027	1262301	5	True				
ANR	1262556	AssignmentExpression	fa . clip = & pfs -> rect		1262301	0		=			
ANR	1262557	MemberAccess	fa . clip		1262301	0					
ANR	1262558	Identifier	fa		1262301	0					
ANR	1262559	Identifier	clip		1262301	1					
ANR	1262560	UnaryOperationExpression	& pfs -> rect		1262301	1					
ANR	1262561	UnaryOperator	&		1262301	0					
ANR	1262562	PtrMemberAccess	pfs -> rect		1262301	1					
ANR	1262563	Identifier	pfs		1262301	0					
ANR	1262564	Identifier	rect		1262301	1					
ANR	1262565	ExpressionStatement	fa . ht = NULL	2042:8:75037:75049	1262301	6	True				
ANR	1262566	AssignmentExpression	fa . ht = NULL		1262301	0		=			
ANR	1262567	MemberAccess	fa . ht		1262301	0					
ANR	1262568	Identifier	fa		1262301	0					
ANR	1262569	Identifier	ht		1262301	1					
ANR	1262570	Identifier	NULL		1262301	1					
ANR	1262571	ExpressionStatement	fa . swap_axes = false	2043:8:75059:75079	1262301	7	True				
ANR	1262572	AssignmentExpression	fa . swap_axes = false		1262301	0		=			
ANR	1262573	MemberAccess	fa . swap_axes		1262301	0					
ANR	1262574	Identifier	fa		1262301	0					
ANR	1262575	Identifier	swap_axes		1262301	1					
ANR	1262576	Identifier	false		1262301	1					
ANR	1262577	ExpressionStatement	fa . lop = 0	2044:8:75089:75099	1262301	8	True				
ANR	1262578	AssignmentExpression	fa . lop = 0		1262301	0		=			
ANR	1262579	MemberAccess	fa . lop		1262301	0					
ANR	1262580	Identifier	fa		1262301	0					
ANR	1262581	Identifier	lop		1262301	1					
ANR	1262582	PrimaryExpression	0		1262301	1					
ANR	1262583	ExpressionStatement	"code = patch_color_to_device_color_inline ( pfs , p0 -> c , & dc [ 0 ] , fc [ 0 ] )"	2045:8:75109:75177	1262301	9	True				
ANR	1262584	AssignmentExpression	"code = patch_color_to_device_color_inline ( pfs , p0 -> c , & dc [ 0 ] , fc [ 0 ] )"		1262301	0		=			
ANR	1262585	Identifier	code		1262301	0					
ANR	1262586	CallExpression	"patch_color_to_device_color_inline ( pfs , p0 -> c , & dc [ 0 ] , fc [ 0 ] )"		1262301	1					
ANR	1262587	Callee	patch_color_to_device_color_inline		1262301	0					
ANR	1262588	Identifier	patch_color_to_device_color_inline		1262301	0					
ANR	1262589	ArgumentList	pfs		1262301	1					
ANR	1262590	Argument	pfs		1262301	0					
ANR	1262591	Identifier	pfs		1262301	0					
ANR	1262592	Argument	p0 -> c		1262301	1					
ANR	1262593	PtrMemberAccess	p0 -> c		1262301	0					
ANR	1262594	Identifier	p0		1262301	0					
ANR	1262595	Identifier	c		1262301	1					
ANR	1262596	Argument	& dc [ 0 ]		1262301	2					
ANR	1262597	UnaryOperationExpression	& dc [ 0 ]		1262301	0					
ANR	1262598	UnaryOperator	&		1262301	0					
ANR	1262599	ArrayIndexing	dc [ 0 ]		1262301	1					
ANR	1262600	Identifier	dc		1262301	0					
ANR	1262601	PrimaryExpression	0		1262301	1					
ANR	1262602	Argument	fc [ 0 ]		1262301	3					
ANR	1262603	ArrayIndexing	fc [ 0 ]		1262301	0					
ANR	1262604	Identifier	fc		1262301	0					
ANR	1262605	PrimaryExpression	0		1262301	1					
ANR	1262606	IfStatement	if ( code != 0 )		1262301	10					
ANR	1262607	Condition	code != 0	2046:12:75191:75199	1262301	0	True				
ANR	1262608	EqualityExpression	code != 0		1262301	0		!=			
ANR	1262609	Identifier	code		1262301	0					
ANR	1262610	PrimaryExpression	0		1262301	1					
ANR	1262611	ReturnStatement	return code ;	2047:12:75214:75225	1262301	1	True				
ANR	1262612	Identifier	code		1262301	0					
ANR	1262613	IfStatement	if ( ! ( dc [ 0 ] . type == & gx_dc_type_data_pure || dc [ 0 ] . type == & gx_dc_type_data_devn ) )		1262301	11					
ANR	1262614	Condition	! ( dc [ 0 ] . type == & gx_dc_type_data_pure || dc [ 0 ] . type == & gx_dc_type_data_devn )	2048:12:75239:75327	1262301	0	True				
ANR	1262615	UnaryOperationExpression	! ( dc [ 0 ] . type == & gx_dc_type_data_pure || dc [ 0 ] . type == & gx_dc_type_data_devn )		1262301	0					
ANR	1262616	UnaryOperator	!		1262301	0					
ANR	1262617	OrExpression	dc [ 0 ] . type == & gx_dc_type_data_pure || dc [ 0 ] . type == & gx_dc_type_data_devn		1262301	1		||			
ANR	1262618	EqualityExpression	dc [ 0 ] . type == & gx_dc_type_data_pure		1262301	0		==			
ANR	1262619	MemberAccess	dc [ 0 ] . type		1262301	0					
ANR	1262620	ArrayIndexing	dc [ 0 ]		1262301	0					
ANR	1262621	Identifier	dc		1262301	0					
ANR	1262622	PrimaryExpression	0		1262301	1					
ANR	1262623	Identifier	type		1262301	1					
ANR	1262624	UnaryOperationExpression	& gx_dc_type_data_pure		1262301	1					
ANR	1262625	UnaryOperator	&		1262301	0					
ANR	1262626	Identifier	gx_dc_type_data_pure		1262301	1					
ANR	1262627	EqualityExpression	dc [ 0 ] . type == & gx_dc_type_data_devn		1262301	1		==			
ANR	1262628	MemberAccess	dc [ 0 ] . type		1262301	0					
ANR	1262629	ArrayIndexing	dc [ 0 ]		1262301	0					
ANR	1262630	Identifier	dc		1262301	0					
ANR	1262631	PrimaryExpression	0		1262301	1					
ANR	1262632	Identifier	type		1262301	1					
ANR	1262633	UnaryOperationExpression	& gx_dc_type_data_devn		1262301	1					
ANR	1262634	UnaryOperator	&		1262301	0					
ANR	1262635	Identifier	gx_dc_type_data_devn		1262301	1					
ANR	1262636	ReturnStatement	return 2 ;	2050:12:75342:75350	1262301	1	True				
ANR	1262637	PrimaryExpression	2		1262301	0					
ANR	1262638	IfStatement	if ( ! wedge )		1262301	12					
ANR	1262639	Condition	! wedge	2051:12:75364:75369	1262301	0	True				
ANR	1262640	UnaryOperationExpression	! wedge		1262301	0					
ANR	1262641	UnaryOperator	!		1262301	0					
ANR	1262642	Identifier	wedge		1262301	1					
ANR	1262643	CompoundStatement		57:20:1779:1779	1262301	1					
ANR	1262644	ExpressionStatement	"code = patch_color_to_device_color_inline ( pfs , p1 -> c , & dc [ 1 ] , fc [ 1 ] )"	2052:12:75386:75454	1262301	0	True				
ANR	1262645	AssignmentExpression	"code = patch_color_to_device_color_inline ( pfs , p1 -> c , & dc [ 1 ] , fc [ 1 ] )"		1262301	0		=			
ANR	1262646	Identifier	code		1262301	0					
ANR	1262647	CallExpression	"patch_color_to_device_color_inline ( pfs , p1 -> c , & dc [ 1 ] , fc [ 1 ] )"		1262301	1					
ANR	1262648	Callee	patch_color_to_device_color_inline		1262301	0					
ANR	1262649	Identifier	patch_color_to_device_color_inline		1262301	0					
ANR	1262650	ArgumentList	pfs		1262301	1					
ANR	1262651	Argument	pfs		1262301	0					
ANR	1262652	Identifier	pfs		1262301	0					
ANR	1262653	Argument	p1 -> c		1262301	1					
ANR	1262654	PtrMemberAccess	p1 -> c		1262301	0					
ANR	1262655	Identifier	p1		1262301	0					
ANR	1262656	Identifier	c		1262301	1					
ANR	1262657	Argument	& dc [ 1 ]		1262301	2					
ANR	1262658	UnaryOperationExpression	& dc [ 1 ]		1262301	0					
ANR	1262659	UnaryOperator	&		1262301	0					
ANR	1262660	ArrayIndexing	dc [ 1 ]		1262301	1					
ANR	1262661	Identifier	dc		1262301	0					
ANR	1262662	PrimaryExpression	1		1262301	1					
ANR	1262663	Argument	fc [ 1 ]		1262301	3					
ANR	1262664	ArrayIndexing	fc [ 1 ]		1262301	0					
ANR	1262665	Identifier	fc		1262301	0					
ANR	1262666	PrimaryExpression	1		1262301	1					
ANR	1262667	IfStatement	if ( code != 0 )		1262301	1					
ANR	1262668	Condition	code != 0	2053:16:75472:75480	1262301	0	True				
ANR	1262669	EqualityExpression	code != 0		1262301	0		!=			
ANR	1262670	Identifier	code		1262301	0					
ANR	1262671	PrimaryExpression	0		1262301	1					
ANR	1262672	ReturnStatement	return code ;	2054:16:75499:75510	1262301	1	True				
ANR	1262673	Identifier	code		1262301	0					
ANR	1262674	ExpressionStatement	"code = patch_color_to_device_color_inline ( pfs , p2 -> c , & dc [ 2 ] , fc [ 2 ] )"	2056:8:75530:75598	1262301	13	True				
ANR	1262675	AssignmentExpression	"code = patch_color_to_device_color_inline ( pfs , p2 -> c , & dc [ 2 ] , fc [ 2 ] )"		1262301	0		=			
ANR	1262676	Identifier	code		1262301	0					
ANR	1262677	CallExpression	"patch_color_to_device_color_inline ( pfs , p2 -> c , & dc [ 2 ] , fc [ 2 ] )"		1262301	1					
ANR	1262678	Callee	patch_color_to_device_color_inline		1262301	0					
ANR	1262679	Identifier	patch_color_to_device_color_inline		1262301	0					
ANR	1262680	ArgumentList	pfs		1262301	1					
ANR	1262681	Argument	pfs		1262301	0					
ANR	1262682	Identifier	pfs		1262301	0					
ANR	1262683	Argument	p2 -> c		1262301	1					
ANR	1262684	PtrMemberAccess	p2 -> c		1262301	0					
ANR	1262685	Identifier	p2		1262301	0					
ANR	1262686	Identifier	c		1262301	1					
ANR	1262687	Argument	& dc [ 2 ]		1262301	2					
ANR	1262688	UnaryOperationExpression	& dc [ 2 ]		1262301	0					
ANR	1262689	UnaryOperator	&		1262301	0					
ANR	1262690	ArrayIndexing	dc [ 2 ]		1262301	1					
ANR	1262691	Identifier	dc		1262301	0					
ANR	1262692	PrimaryExpression	2		1262301	1					
ANR	1262693	Argument	fc [ 2 ]		1262301	3					
ANR	1262694	ArrayIndexing	fc [ 2 ]		1262301	0					
ANR	1262695	Identifier	fc		1262301	0					
ANR	1262696	PrimaryExpression	2		1262301	1					
ANR	1262697	IfStatement	if ( code != 0 )		1262301	14					
ANR	1262698	Condition	code != 0	2057:12:75612:75620	1262301	0	True				
ANR	1262699	EqualityExpression	code != 0		1262301	0		!=			
ANR	1262700	Identifier	code		1262301	0					
ANR	1262701	PrimaryExpression	0		1262301	1					
ANR	1262702	ReturnStatement	return code ;	2058:12:75635:75646	1262301	1	True				
ANR	1262703	Identifier	code		1262301	0					
ANR	1262704	ExpressionStatement	"code = dev_proc ( pdev , fill_linear_color_triangle ) ( pdev , & fa , & p0 -> p , & p1 -> p , & p2 -> p , fc [ 0 ] , ( wedge ? NULL : fc [ 1 ] ) , fc [ 2 ] )"	2059:8:75656:75826	1262301	15	True				
ANR	1262705	AssignmentExpression	"code = dev_proc ( pdev , fill_linear_color_triangle ) ( pdev , & fa , & p0 -> p , & p1 -> p , & p2 -> p , fc [ 0 ] , ( wedge ? NULL : fc [ 1 ] ) , fc [ 2 ] )"		1262301	0		=			
ANR	1262706	Identifier	code		1262301	0					
ANR	1262707	CallExpression	"dev_proc ( pdev , fill_linear_color_triangle ) ( pdev , & fa , & p0 -> p , & p1 -> p , & p2 -> p , fc [ 0 ] , ( wedge ? NULL : fc [ 1 ] ) , fc [ 2 ] )"		1262301	1					
ANR	1262708	Callee	"dev_proc ( pdev , fill_linear_color_triangle )"		1262301	0					
ANR	1262709	CallExpression	"dev_proc ( pdev , fill_linear_color_triangle )"		1262301	0					
ANR	1262710	Callee	dev_proc		1262301	0					
ANR	1262711	Identifier	dev_proc		1262301	0					
ANR	1262712	ArgumentList	pdev		1262301	1					
ANR	1262713	Argument	pdev		1262301	0					
ANR	1262714	Identifier	pdev		1262301	0					
ANR	1262715	Argument	fill_linear_color_triangle		1262301	1					
ANR	1262716	Identifier	fill_linear_color_triangle		1262301	0					
ANR	1262717	ArgumentList	pdev		1262301	1					
ANR	1262718	Argument	pdev		1262301	0					
ANR	1262719	Identifier	pdev		1262301	0					
ANR	1262720	Argument	& fa		1262301	1					
ANR	1262721	UnaryOperationExpression	& fa		1262301	0					
ANR	1262722	UnaryOperator	&		1262301	0					
ANR	1262723	Identifier	fa		1262301	1					
ANR	1262724	Argument	& p0 -> p		1262301	2					
ANR	1262725	UnaryOperationExpression	& p0 -> p		1262301	0					
ANR	1262726	UnaryOperator	&		1262301	0					
ANR	1262727	PtrMemberAccess	p0 -> p		1262301	1					
ANR	1262728	Identifier	p0		1262301	0					
ANR	1262729	Identifier	p		1262301	1					
ANR	1262730	Argument	& p1 -> p		1262301	3					
ANR	1262731	UnaryOperationExpression	& p1 -> p		1262301	0					
ANR	1262732	UnaryOperator	&		1262301	0					
ANR	1262733	PtrMemberAccess	p1 -> p		1262301	1					
ANR	1262734	Identifier	p1		1262301	0					
ANR	1262735	Identifier	p		1262301	1					
ANR	1262736	Argument	& p2 -> p		1262301	4					
ANR	1262737	UnaryOperationExpression	& p2 -> p		1262301	0					
ANR	1262738	UnaryOperator	&		1262301	0					
ANR	1262739	PtrMemberAccess	p2 -> p		1262301	1					
ANR	1262740	Identifier	p2		1262301	0					
ANR	1262741	Identifier	p		1262301	1					
ANR	1262742	Argument	fc [ 0 ]		1262301	5					
ANR	1262743	ArrayIndexing	fc [ 0 ]		1262301	0					
ANR	1262744	Identifier	fc		1262301	0					
ANR	1262745	PrimaryExpression	0		1262301	1					
ANR	1262746	Argument	wedge ? NULL : fc [ 1 ]		1262301	6					
ANR	1262747	ConditionalExpression	wedge ? NULL : fc [ 1 ]		1262301	0					
ANR	1262748	Condition	wedge		1262301	0					
ANR	1262749	Identifier	wedge		1262301	0					
ANR	1262750	Identifier	NULL		1262301	1					
ANR	1262751	ArrayIndexing	fc [ 1 ]		1262301	2					
ANR	1262752	Identifier	fc		1262301	0					
ANR	1262753	PrimaryExpression	1		1262301	1					
ANR	1262754	Argument	fc [ 2 ]		1262301	7					
ANR	1262755	ArrayIndexing	fc [ 2 ]		1262301	0					
ANR	1262756	Identifier	fc		1262301	0					
ANR	1262757	PrimaryExpression	2		1262301	1					
ANR	1262758	IfStatement	if ( code == 1 )		1262301	16					
ANR	1262759	Condition	code == 1	2062:12:75840:75848	1262301	0	True				
ANR	1262760	EqualityExpression	code == 1		1262301	0		==			
ANR	1262761	Identifier	code		1262301	0					
ANR	1262762	PrimaryExpression	1		1262301	1					
ANR	1262763	ReturnStatement	return 0 ;	2063:12:75863:75871	1262301	1	True				
ANR	1262764	PrimaryExpression	0		1262301	0					
ANR	1262765	IfStatement	if ( code < 0 )		1262301	17					
ANR	1262766	Condition	code < 0	2064:12:75911:75918	1262301	0	True				
ANR	1262767	RelationalExpression	code < 0		1262301	0		<			
ANR	1262768	Identifier	code		1262301	0					
ANR	1262769	PrimaryExpression	0		1262301	1					
ANR	1262770	ReturnStatement	return code ;	2065:12:75933:75944	1262301	1	True				
ANR	1262771	Identifier	code		1262301	0					
ANR	1262772	ElseStatement	else		1262301	0					
ANR	1262773	ReturnStatement	return 1 ;	2067:12:76032:76040	1262301	0	True				
ANR	1262774	PrimaryExpression	1		1262301	0					
ANR	1262775	ReturnType	static inline int		1262301	1					
ANR	1262776	Identifier	try_device_linear_color		1262301	2					
ANR	1262777	ParameterList	"patch_fill_state_t * pfs , bool wedge , const shading_vertex_t * p0 , const shading_vertex_t * p1 , const shading_vertex_t * p2"		1262301	3					
ANR	1262778	Parameter	patch_fill_state_t * pfs	1992:24:73455:73477	1262301	0	True				
ANR	1262779	ParameterType	patch_fill_state_t *		1262301	0					
ANR	1262780	Identifier	pfs		1262301	1					
ANR	1262781	Parameter	bool wedge	1992:49:73480:73489	1262301	1	True				
ANR	1262782	ParameterType	bool		1262301	0					
ANR	1262783	Identifier	wedge		1262301	1					
ANR	1262784	Parameter	const shading_vertex_t * p0	1993:8:73500:73525	1262301	2	True				
ANR	1262785	ParameterType	const shading_vertex_t *		1262301	0					
ANR	1262786	Identifier	p0		1262301	1					
ANR	1262787	Parameter	const shading_vertex_t * p1	1993:36:73528:73553	1262301	3	True				
ANR	1262788	ParameterType	const shading_vertex_t *		1262301	0					
ANR	1262789	Identifier	p1		1262301	1					
ANR	1262790	Parameter	const shading_vertex_t * p2	1994:8:73564:73589	1262301	4	True				
ANR	1262791	ParameterType	const shading_vertex_t *		1262301	0					
ANR	1262792	Identifier	p2		1262301	1					
ANR	1262793	CFGEntryNode	ENTRY		1262301		True				
ANR	1262794	CFGExitNode	EXIT		1262301		True				
ANR	1262795	Symbol	wedge		1262301						
ANR	1262796	Symbol	pfs -> trans_device		1262301						
ANR	1262797	Symbol	pfs -> direct_space		1262301						
ANR	1262798	Symbol	patch_color_to_device_color_inline		1262301						
ANR	1262799	Symbol	& pfs -> rect		1262301						
ANR	1262800	Symbol	pdev		1262301						
ANR	1262801	Symbol	fa . lop		1262301						
ANR	1262802	Symbol	pfs -> icclink		1262301						
ANR	1262803	Symbol	dc [ 0 ] . type		1262301						
ANR	1262804	Symbol	fill_linear_color_triangle		1262301						
ANR	1262805	Symbol	& p1 -> c -> cc		1262301						
ANR	1262806	Symbol	fa . ht		1262301						
ANR	1262807	Symbol	p1 -> c		1262301						
ANR	1262808	Symbol	GX_DEVICE_COLOR_MAX_COMPONENTS		1262301						
ANR	1262809	Symbol	s0		1262301						
ANR	1262810	Symbol	s1		1262301						
ANR	1262811	Symbol	s2		1262301						
ANR	1262812	Symbol	NULL		1262301						
ANR	1262813	Symbol	& p2 -> c -> cc		1262301						
ANR	1262814	Symbol	* dc		1262301						
ANR	1262815	Symbol	* pfs		1262301						
ANR	1262816	Symbol	pfs -> pgs		1262301						
ANR	1262817	Symbol	s01		1262301						
ANR	1262818	Symbol	p2 -> c		1262301						
ANR	1262819	Symbol	fa		1262301						
ANR	1262820	Symbol	& p1 -> p		1262301						
ANR	1262821	Symbol	pfs		1262301						
ANR	1262822	Symbol	fc		1262301						
ANR	1262823	Symbol	pfs -> unlinear		1262301						
ANR	1262824	Symbol	p0		1262301						
ANR	1262825	Symbol	p1		1262301						
ANR	1262826	Symbol	p2		1262301						
ANR	1262827	Symbol	code		1262301						
ANR	1262828	Symbol	fa . clip		1262301						
ANR	1262829	Symbol	s012		1262301						
ANR	1262830	Symbol	cs_is_linear		1262301						
ANR	1262831	Symbol	pfs -> cs_always_linear		1262301						
ANR	1262832	Symbol	fa . swap_axes		1262301						
ANR	1262833	Symbol	dev_proc		1262301						
ANR	1262834	Symbol	& p2 -> p		1262301						
ANR	1262835	Symbol	* fc		1262301						
ANR	1262836	Symbol	function_linearity		1262301						
ANR	1262837	Symbol	& gx_dc_type_data_devn		1262301						
ANR	1262838	Symbol	* p1		1262301						
ANR	1262839	Symbol	& fa		1262301						
ANR	1262840	Symbol	* p0		1262301						
ANR	1262841	Symbol	pfs -> smoothness		1262301						
ANR	1262842	Symbol	max		1262301						
ANR	1262843	Symbol	false		1262301						
ANR	1262844	Symbol	& gx_dc_type_data_pure		1262301						
ANR	1262845	Symbol	* p2		1262301						
ANR	1262846	Symbol	p0 -> c		1262301						
ANR	1262847	Symbol	& p0 -> p		1262301						
ANR	1262848	Symbol	cs		1262301						
ANR	1262849	Symbol	pfs -> dev		1262301						
ANR	1262850	Symbol	& p0 -> c -> cc		1262301						
ANR	1262851	Symbol	dc		1262301						
ANR	1262852	Function	fill_triangle_wedge	2071:0:76051:76621							
ANR	1262853	FunctionDef	"fill_triangle_wedge (patch_fill_state_t * pfs , const shading_vertex_t * q0 , const shading_vertex_t * q1 , const shading_vertex_t * q2)"		1262852	0					
ANR	1262854	CompoundStatement		2074:0:76210:76621	1262852	0					
ANR	1262855	IfStatement	if ( ( int64_t ) ( q1 -> p . x - q0 -> p . x ) * ( q2 -> p . y - q0 -> p . y ) == ( int64_t ) ( q1 -> p . y - q0 -> p . y ) * ( q2 -> p . x - q0 -> p . x ) )		1262852	0					
ANR	1262856	Condition	( int64_t ) ( q1 -> p . x - q0 -> p . x ) * ( q2 -> p . y - q0 -> p . y ) == ( int64_t ) ( q1 -> p . y - q0 -> p . y ) * ( q2 -> p . x - q0 -> p . x )	2075:8:76220:76331	1262852	0	True				
ANR	1262857	EqualityExpression	( int64_t ) ( q1 -> p . x - q0 -> p . x ) * ( q2 -> p . y - q0 -> p . y ) == ( int64_t ) ( q1 -> p . y - q0 -> p . y ) * ( q2 -> p . x - q0 -> p . x )		1262852	0		==			
ANR	1262858	MultiplicativeExpression	( int64_t ) ( q1 -> p . x - q0 -> p . x ) * ( q2 -> p . y - q0 -> p . y )		1262852	0		*			
ANR	1262859	CastExpression	( int64_t ) ( q1 -> p . x - q0 -> p . x )		1262852	0					
ANR	1262860	CastTarget	int64_t		1262852	0					
ANR	1262861	AdditiveExpression	q1 -> p . x - q0 -> p . x		1262852	1		-			
ANR	1262862	MemberAccess	q1 -> p . x		1262852	0					
ANR	1262863	PtrMemberAccess	q1 -> p		1262852	0					
ANR	1262864	Identifier	q1		1262852	0					
ANR	1262865	Identifier	p		1262852	1					
ANR	1262866	Identifier	x		1262852	1					
ANR	1262867	MemberAccess	q0 -> p . x		1262852	1					
ANR	1262868	PtrMemberAccess	q0 -> p		1262852	0					
ANR	1262869	Identifier	q0		1262852	0					
ANR	1262870	Identifier	p		1262852	1					
ANR	1262871	Identifier	x		1262852	1					
ANR	1262872	AdditiveExpression	q2 -> p . y - q0 -> p . y		1262852	1		-			
ANR	1262873	MemberAccess	q2 -> p . y		1262852	0					
ANR	1262874	PtrMemberAccess	q2 -> p		1262852	0					
ANR	1262875	Identifier	q2		1262852	0					
ANR	1262876	Identifier	p		1262852	1					
ANR	1262877	Identifier	y		1262852	1					
ANR	1262878	MemberAccess	q0 -> p . y		1262852	1					
ANR	1262879	PtrMemberAccess	q0 -> p		1262852	0					
ANR	1262880	Identifier	q0		1262852	0					
ANR	1262881	Identifier	p		1262852	1					
ANR	1262882	Identifier	y		1262852	1					
ANR	1262883	MultiplicativeExpression	( int64_t ) ( q1 -> p . y - q0 -> p . y ) * ( q2 -> p . x - q0 -> p . x )		1262852	1		*			
ANR	1262884	CastExpression	( int64_t ) ( q1 -> p . y - q0 -> p . y )		1262852	0					
ANR	1262885	CastTarget	int64_t		1262852	0					
ANR	1262886	AdditiveExpression	q1 -> p . y - q0 -> p . y		1262852	1		-			
ANR	1262887	MemberAccess	q1 -> p . y		1262852	0					
ANR	1262888	PtrMemberAccess	q1 -> p		1262852	0					
ANR	1262889	Identifier	q1		1262852	0					
ANR	1262890	Identifier	p		1262852	1					
ANR	1262891	Identifier	y		1262852	1					
ANR	1262892	MemberAccess	q0 -> p . y		1262852	1					
ANR	1262893	PtrMemberAccess	q0 -> p		1262852	0					
ANR	1262894	Identifier	q0		1262852	0					
ANR	1262895	Identifier	p		1262852	1					
ANR	1262896	Identifier	y		1262852	1					
ANR	1262897	AdditiveExpression	q2 -> p . x - q0 -> p . x		1262852	1		-			
ANR	1262898	MemberAccess	q2 -> p . x		1262852	0					
ANR	1262899	PtrMemberAccess	q2 -> p		1262852	0					
ANR	1262900	Identifier	q2		1262852	0					
ANR	1262901	Identifier	p		1262852	1					
ANR	1262902	Identifier	x		1262852	1					
ANR	1262903	MemberAccess	q0 -> p . x		1262852	1					
ANR	1262904	PtrMemberAccess	q0 -> p		1262852	0					
ANR	1262905	Identifier	q0		1262852	0					
ANR	1262906	Identifier	p		1262852	1					
ANR	1262907	Identifier	x		1262852	1					
ANR	1262908	ReturnStatement	return 0 ;	2077:8:76342:76350	1262852	1	True				
ANR	1262909	PrimaryExpression	0		1262852	0					
ANR	1262910	ReturnStatement	"return fill_triangle_wedge_aux ( pfs , q0 , q1 , q2 ) ;"	2084:4:76572:76619	1262852	1	True				
ANR	1262911	CallExpression	"fill_triangle_wedge_aux ( pfs , q0 , q1 , q2 )"		1262852	0					
ANR	1262912	Callee	fill_triangle_wedge_aux		1262852	0					
ANR	1262913	Identifier	fill_triangle_wedge_aux		1262852	0					
ANR	1262914	ArgumentList	pfs		1262852	1					
ANR	1262915	Argument	pfs		1262852	0					
ANR	1262916	Identifier	pfs		1262852	0					
ANR	1262917	Argument	q0		1262852	1					
ANR	1262918	Identifier	q0		1262852	0					
ANR	1262919	Argument	q1		1262852	2					
ANR	1262920	Identifier	q1		1262852	0					
ANR	1262921	Argument	q2		1262852	3					
ANR	1262922	Identifier	q2		1262852	0					
ANR	1262923	ReturnType	static inline int		1262852	1					
ANR	1262924	Identifier	fill_triangle_wedge		1262852	2					
ANR	1262925	ParameterList	"patch_fill_state_t * pfs , const shading_vertex_t * q0 , const shading_vertex_t * q1 , const shading_vertex_t * q2"		1262852	3					
ANR	1262926	Parameter	patch_fill_state_t * pfs	2072:20:76089:76111	1262852	0	True				
ANR	1262927	ParameterType	patch_fill_state_t *		1262852	0					
ANR	1262928	Identifier	pfs		1262852	1					
ANR	1262929	Parameter	const shading_vertex_t * q0	2073:12:76126:76151	1262852	1	True				
ANR	1262930	ParameterType	const shading_vertex_t *		1262852	0					
ANR	1262931	Identifier	q0		1262852	1					
ANR	1262932	Parameter	const shading_vertex_t * q1	2073:40:76154:76179	1262852	2	True				
ANR	1262933	ParameterType	const shading_vertex_t *		1262852	0					
ANR	1262934	Identifier	q1		1262852	1					
ANR	1262935	Parameter	const shading_vertex_t * q2	2073:68:76182:76207	1262852	3	True				
ANR	1262936	ParameterType	const shading_vertex_t *		1262852	0					
ANR	1262937	Identifier	q2		1262852	1					
ANR	1262938	CFGEntryNode	ENTRY		1262852		True				
ANR	1262939	CFGExitNode	EXIT		1262852		True				
ANR	1262940	Symbol	q1		1262852						
ANR	1262941	Symbol	q2		1262852						
ANR	1262942	Symbol	q2 -> p . x		1262852						
ANR	1262943	Symbol	q0 -> p		1262852						
ANR	1262944	Symbol	q2 -> p . y		1262852						
ANR	1262945	Symbol	* q2		1262852						
ANR	1262946	Symbol	* q1		1262852						
ANR	1262947	Symbol	* q0		1262852						
ANR	1262948	Symbol	q2 -> p		1262852						
ANR	1262949	Symbol	q1 -> p . y		1262852						
ANR	1262950	Symbol	q1 -> p		1262852						
ANR	1262951	Symbol	q0 -> p . y		1262852						
ANR	1262952	Symbol	q0 -> p . x		1262852						
ANR	1262953	Symbol	pfs		1262852						
ANR	1262954	Symbol	q1 -> p . x		1262852						
ANR	1262955	Symbol	q0		1262852						
ANR	1262956	Symbol	fill_triangle_wedge_aux		1262852						
ANR	1262957	Function	fill_triangle_wedge_from_list	2087:0:76624:77390							
ANR	1262958	FunctionDef	"fill_triangle_wedge_from_list (patch_fill_state_t * pfs , const wedge_vertex_list_elem_t * beg , const wedge_vertex_list_elem_t * end , const wedge_vertex_list_elem_t * mid , const patch_color_t * c0 , const patch_color_t * c1)"		1262957	0					
ANR	1262959	CompoundStatement		2092:0:76870:77390	1262957	0					
ANR	1262960	IdentifierDeclStatement	shading_vertex_t p [ 3 ] ;	2093:4:76876:76897	1262957	0	True				
ANR	1262961	IdentifierDecl	p [ 3 ]		1262957	0					
ANR	1262962	IdentifierDeclType	shading_vertex_t [ 3 ]		1262957	0					
ANR	1262963	Identifier	p		1262957	1					
ANR	1262964	PrimaryExpression	3		1262957	2					
ANR	1262965	IdentifierDeclStatement	patch_color_t * c ;	2094:4:76903:76919	1262957	1	True				
ANR	1262966	IdentifierDecl	* c		1262957	0					
ANR	1262967	IdentifierDeclType	patch_color_t *		1262957	0					
ANR	1262968	Identifier	c		1262957	1					
ANR	1262969	IdentifierDeclStatement	"byte * color_stack_ptr = reserve_colors_inline ( pfs , & c , 1 ) ;"	2095:4:76925:76982	1262957	2	True				
ANR	1262970	IdentifierDecl	"* color_stack_ptr = reserve_colors_inline ( pfs , & c , 1 )"		1262957	0					
ANR	1262971	IdentifierDeclType	byte *		1262957	0					
ANR	1262972	Identifier	color_stack_ptr		1262957	1					
ANR	1262973	AssignmentExpression	"* color_stack_ptr = reserve_colors_inline ( pfs , & c , 1 )"		1262957	2		=			
ANR	1262974	Identifier	color_stack_ptr		1262957	0					
ANR	1262975	CallExpression	"reserve_colors_inline ( pfs , & c , 1 )"		1262957	1					
ANR	1262976	Callee	reserve_colors_inline		1262957	0					
ANR	1262977	Identifier	reserve_colors_inline		1262957	0					
ANR	1262978	ArgumentList	pfs		1262957	1					
ANR	1262979	Argument	pfs		1262957	0					
ANR	1262980	Identifier	pfs		1262957	0					
ANR	1262981	Argument	& c		1262957	1					
ANR	1262982	UnaryOperationExpression	& c		1262957	0					
ANR	1262983	UnaryOperator	&		1262957	0					
ANR	1262984	Identifier	c		1262957	1					
ANR	1262985	Argument	1		1262957	2					
ANR	1262986	PrimaryExpression	1		1262957	0					
ANR	1262987	IdentifierDeclStatement	int code ;	2096:4:76988:76996	1262957	3	True				
ANR	1262988	IdentifierDecl	code		1262957	0					
ANR	1262989	IdentifierDeclType	int		1262957	0					
ANR	1262990	Identifier	code		1262957	1					
ANR	1262991	IfStatement	if ( color_stack_ptr == NULL )		1262957	4					
ANR	1262992	Condition	color_stack_ptr == NULL	2098:8:77007:77029	1262957	0	True				
ANR	1262993	EqualityExpression	color_stack_ptr == NULL		1262957	0		==			
ANR	1262994	Identifier	color_stack_ptr		1262957	0					
ANR	1262995	Identifier	NULL		1262957	1					
ANR	1262996	ExpressionStatement	return_error ( gs_error_unregistered )	2099:8:77040:77075	1262957	1	True				
ANR	1262997	CallExpression	return_error ( gs_error_unregistered )		1262957	0					
ANR	1262998	Callee	return_error		1262957	0					
ANR	1262999	Identifier	return_error		1262957	0					
ANR	1263000	ArgumentList	gs_error_unregistered		1262957	1					
ANR	1263001	Argument	gs_error_unregistered		1262957	0					
ANR	1263002	Identifier	gs_error_unregistered		1262957	0					
ANR	1263003	ExpressionStatement	p [ 2 ] . c = c	2100:4:77104:77114	1262957	5	True				
ANR	1263004	AssignmentExpression	p [ 2 ] . c = c		1262957	0		=			
ANR	1263005	MemberAccess	p [ 2 ] . c		1262957	0					
ANR	1263006	ArrayIndexing	p [ 2 ]		1262957	0					
ANR	1263007	Identifier	p		1262957	0					
ANR	1263008	PrimaryExpression	2		1262957	1					
ANR	1263009	Identifier	c		1262957	1					
ANR	1263010	Identifier	c		1262957	1					
ANR	1263011	ExpressionStatement	p [ 0 ] . p = beg -> p	2101:4:77120:77135	1262957	6	True				
ANR	1263012	AssignmentExpression	p [ 0 ] . p = beg -> p		1262957	0		=			
ANR	1263013	MemberAccess	p [ 0 ] . p		1262957	0					
ANR	1263014	ArrayIndexing	p [ 0 ]		1262957	0					
ANR	1263015	Identifier	p		1262957	0					
ANR	1263016	PrimaryExpression	0		1262957	1					
ANR	1263017	Identifier	p		1262957	1					
ANR	1263018	PtrMemberAccess	beg -> p		1262957	1					
ANR	1263019	Identifier	beg		1262957	0					
ANR	1263020	Identifier	p		1262957	1					
ANR	1263021	ExpressionStatement	p [ 0 ] . c = c0	2102:4:77141:77152	1262957	7	True				
ANR	1263022	AssignmentExpression	p [ 0 ] . c = c0		1262957	0		=			
ANR	1263023	MemberAccess	p [ 0 ] . c		1262957	0					
ANR	1263024	ArrayIndexing	p [ 0 ]		1262957	0					
ANR	1263025	Identifier	p		1262957	0					
ANR	1263026	PrimaryExpression	0		1262957	1					
ANR	1263027	Identifier	c		1262957	1					
ANR	1263028	Identifier	c0		1262957	1					
ANR	1263029	ExpressionStatement	p [ 1 ] . p = end -> p	2103:4:77158:77173	1262957	8	True				
ANR	1263030	AssignmentExpression	p [ 1 ] . p = end -> p		1262957	0		=			
ANR	1263031	MemberAccess	p [ 1 ] . p		1262957	0					
ANR	1263032	ArrayIndexing	p [ 1 ]		1262957	0					
ANR	1263033	Identifier	p		1262957	0					
ANR	1263034	PrimaryExpression	1		1262957	1					
ANR	1263035	Identifier	p		1262957	1					
ANR	1263036	PtrMemberAccess	end -> p		1262957	1					
ANR	1263037	Identifier	end		1262957	0					
ANR	1263038	Identifier	p		1262957	1					
ANR	1263039	ExpressionStatement	p [ 1 ] . c = c1	2104:4:77179:77190	1262957	9	True				
ANR	1263040	AssignmentExpression	p [ 1 ] . c = c1		1262957	0		=			
ANR	1263041	MemberAccess	p [ 1 ] . c		1262957	0					
ANR	1263042	ArrayIndexing	p [ 1 ]		1262957	0					
ANR	1263043	Identifier	p		1262957	0					
ANR	1263044	PrimaryExpression	1		1262957	1					
ANR	1263045	Identifier	c		1262957	1					
ANR	1263046	Identifier	c1		1262957	1					
ANR	1263047	ExpressionStatement	p [ 2 ] . p = mid -> p	2105:4:77196:77211	1262957	10	True				
ANR	1263048	AssignmentExpression	p [ 2 ] . p = mid -> p		1262957	0		=			
ANR	1263049	MemberAccess	p [ 2 ] . p		1262957	0					
ANR	1263050	ArrayIndexing	p [ 2 ]		1262957	0					
ANR	1263051	Identifier	p		1262957	0					
ANR	1263052	PrimaryExpression	2		1262957	1					
ANR	1263053	Identifier	p		1262957	1					
ANR	1263054	PtrMemberAccess	mid -> p		1262957	1					
ANR	1263055	Identifier	mid		1262957	0					
ANR	1263056	Identifier	p		1262957	1					
ANR	1263057	ExpressionStatement	"patch_interpolate_color ( c , c0 , c1 , pfs , 0.5 )"	2106:4:77217:77261	1262957	11	True				
ANR	1263058	CallExpression	"patch_interpolate_color ( c , c0 , c1 , pfs , 0.5 )"		1262957	0					
ANR	1263059	Callee	patch_interpolate_color		1262957	0					
ANR	1263060	Identifier	patch_interpolate_color		1262957	0					
ANR	1263061	ArgumentList	c		1262957	1					
ANR	1263062	Argument	c		1262957	0					
ANR	1263063	Identifier	c		1262957	0					
ANR	1263064	Argument	c0		1262957	1					
ANR	1263065	Identifier	c0		1262957	0					
ANR	1263066	Argument	c1		1262957	2					
ANR	1263067	Identifier	c1		1262957	0					
ANR	1263068	Argument	pfs		1262957	3					
ANR	1263069	Identifier	pfs		1262957	0					
ANR	1263070	Argument	0.5		1262957	4					
ANR	1263071	PrimaryExpression	0.5		1262957	0					
ANR	1263072	ExpressionStatement	"code = fill_triangle_wedge ( pfs , & p [ 0 ] , & p [ 1 ] , & p [ 2 ] )"	2107:4:77267:77319	1262957	12	True				
ANR	1263073	AssignmentExpression	"code = fill_triangle_wedge ( pfs , & p [ 0 ] , & p [ 1 ] , & p [ 2 ] )"		1262957	0		=			
ANR	1263074	Identifier	code		1262957	0					
ANR	1263075	CallExpression	"fill_triangle_wedge ( pfs , & p [ 0 ] , & p [ 1 ] , & p [ 2 ] )"		1262957	1					
ANR	1263076	Callee	fill_triangle_wedge		1262957	0					
ANR	1263077	Identifier	fill_triangle_wedge		1262957	0					
ANR	1263078	ArgumentList	pfs		1262957	1					
ANR	1263079	Argument	pfs		1262957	0					
ANR	1263080	Identifier	pfs		1262957	0					
ANR	1263081	Argument	& p [ 0 ]		1262957	1					
ANR	1263082	UnaryOperationExpression	& p [ 0 ]		1262957	0					
ANR	1263083	UnaryOperator	&		1262957	0					
ANR	1263084	ArrayIndexing	p [ 0 ]		1262957	1					
ANR	1263085	Identifier	p		1262957	0					
ANR	1263086	PrimaryExpression	0		1262957	1					
ANR	1263087	Argument	& p [ 1 ]		1262957	2					
ANR	1263088	UnaryOperationExpression	& p [ 1 ]		1262957	0					
ANR	1263089	UnaryOperator	&		1262957	0					
ANR	1263090	ArrayIndexing	p [ 1 ]		1262957	1					
ANR	1263091	Identifier	p		1262957	0					
ANR	1263092	PrimaryExpression	1		1262957	1					
ANR	1263093	Argument	& p [ 2 ]		1262957	3					
ANR	1263094	UnaryOperationExpression	& p [ 2 ]		1262957	0					
ANR	1263095	UnaryOperator	&		1262957	0					
ANR	1263096	ArrayIndexing	p [ 2 ]		1262957	1					
ANR	1263097	Identifier	p		1262957	0					
ANR	1263098	PrimaryExpression	2		1262957	1					
ANR	1263099	ExpressionStatement	"release_colors_inline ( pfs , color_stack_ptr , 1 )"	2108:4:77325:77371	1262957	13	True				
ANR	1263100	CallExpression	"release_colors_inline ( pfs , color_stack_ptr , 1 )"		1262957	0					
ANR	1263101	Callee	release_colors_inline		1262957	0					
ANR	1263102	Identifier	release_colors_inline		1262957	0					
ANR	1263103	ArgumentList	pfs		1262957	1					
ANR	1263104	Argument	pfs		1262957	0					
ANR	1263105	Identifier	pfs		1262957	0					
ANR	1263106	Argument	color_stack_ptr		1262957	1					
ANR	1263107	Identifier	color_stack_ptr		1262957	0					
ANR	1263108	Argument	1		1262957	2					
ANR	1263109	PrimaryExpression	1		1262957	0					
ANR	1263110	ReturnStatement	return code ;	2109:4:77377:77388	1262957	14	True				
ANR	1263111	Identifier	code		1262957	0					
ANR	1263112	ReturnType	static inline int		1262957	1					
ANR	1263113	Identifier	fill_triangle_wedge_from_list		1262957	2					
ANR	1263114	ParameterList	"patch_fill_state_t * pfs , const wedge_vertex_list_elem_t * beg , const wedge_vertex_list_elem_t * end , const wedge_vertex_list_elem_t * mid , const patch_color_t * c0 , const patch_color_t * c1"		1262957	3					
ANR	1263115	Parameter	patch_fill_state_t * pfs	2088:30:76672:76694	1262957	0	True				
ANR	1263116	ParameterType	patch_fill_state_t *		1262957	0					
ANR	1263117	Identifier	pfs		1262957	1					
ANR	1263118	Parameter	const wedge_vertex_list_elem_t * beg	2089:4:76701:76735	1262957	1	True				
ANR	1263119	ParameterType	const wedge_vertex_list_elem_t *		1262957	0					
ANR	1263120	Identifier	beg		1262957	1					
ANR	1263121	Parameter	const wedge_vertex_list_elem_t * end	2089:41:76738:76772	1262957	2	True				
ANR	1263122	ParameterType	const wedge_vertex_list_elem_t *		1262957	0					
ANR	1263123	Identifier	end		1262957	1					
ANR	1263124	Parameter	const wedge_vertex_list_elem_t * mid	2090:4:76779:76813	1262957	3	True				
ANR	1263125	ParameterType	const wedge_vertex_list_elem_t *		1262957	0					
ANR	1263126	Identifier	mid		1262957	1					
ANR	1263127	Parameter	const patch_color_t * c0	2091:4:76820:76842	1262957	4	True				
ANR	1263128	ParameterType	const patch_color_t *		1262957	0					
ANR	1263129	Identifier	c0		1262957	1					
ANR	1263130	Parameter	const patch_color_t * c1	2091:29:76845:76867	1262957	5	True				
ANR	1263131	ParameterType	const patch_color_t *		1262957	0					
ANR	1263132	Identifier	c1		1262957	1					
ANR	1263133	CFGEntryNode	ENTRY		1262957		True				
ANR	1263134	CFGExitNode	EXIT		1262957		True				
ANR	1263135	Symbol	fill_triangle_wedge		1262957						
ANR	1263136	Symbol	gs_error_unregistered		1262957						
ANR	1263137	Symbol	code		1262957						
ANR	1263138	Symbol	beg		1262957						
ANR	1263139	Symbol	p [ 1 ] . c		1262957						
ANR	1263140	Symbol	mid		1262957						
ANR	1263141	Symbol	* beg		1262957						
ANR	1263142	Symbol	mid -> p		1262957						
ANR	1263143	Symbol	reserve_colors_inline		1262957						
ANR	1263144	Symbol	p [ 1 ] . p		1262957						
ANR	1263145	Symbol	end		1262957						
ANR	1263146	Symbol	p [ 0 ] . c		1262957						
ANR	1263147	Symbol	c		1262957						
ANR	1263148	Symbol	NULL		1262957						
ANR	1263149	Symbol	end -> p		1262957						
ANR	1263150	Symbol	& c		1262957						
ANR	1263151	Symbol	c0		1262957						
ANR	1263152	Symbol	p [ 2 ] . p		1262957						
ANR	1263153	Symbol	c1		1262957						
ANR	1263154	Symbol	p		1262957						
ANR	1263155	Symbol	* mid		1262957						
ANR	1263156	Symbol	color_stack_ptr		1262957						
ANR	1263157	Symbol	beg -> p		1262957						
ANR	1263158	Symbol	* p		1262957						
ANR	1263159	Symbol	* end		1262957						
ANR	1263160	Symbol	pfs		1262957						
ANR	1263161	Symbol	p [ 2 ] . c		1262957						
ANR	1263162	Symbol	p [ 0 ] . p		1262957						
ANR	1263163	Function	fill_wedge_from_list_rec	2112:0:77393:79228							
ANR	1263164	FunctionDef	"fill_wedge_from_list_rec (patch_fill_state_t * pfs , wedge_vertex_list_elem_t * beg , const wedge_vertex_list_elem_t * end , int level , const patch_color_t * c0 , const patch_color_t * c1)"		1263163	0					
ANR	1263165	CompoundStatement		2116:0:77607:79228	1263163	0					
ANR	1263166	IfStatement	if ( beg -> next == end )		1263163	0					
ANR	1263167	Condition	beg -> next == end	2117:8:77617:77632	1263163	0	True				
ANR	1263168	EqualityExpression	beg -> next == end		1263163	0		==			
ANR	1263169	PtrMemberAccess	beg -> next		1263163	0					
ANR	1263170	Identifier	beg		1263163	0					
ANR	1263171	Identifier	next		1263163	1					
ANR	1263172	Identifier	end		1263163	1					
ANR	1263173	ReturnStatement	return 0 ;	2118:8:77643:77651	1263163	1	True				
ANR	1263174	PrimaryExpression	0		1263163	0					
ANR	1263175	ElseStatement	else		1263163	0					
ANR	1263176	IfStatement	if ( beg -> next -> next == end )		1263163	0					
ANR	1263177	Condition	beg -> next -> next == end	2119:13:77666:77687	1263163	0	True				
ANR	1263178	EqualityExpression	beg -> next -> next == end		1263163	0		==			
ANR	1263179	PtrMemberAccess	beg -> next -> next		1263163	0					
ANR	1263180	PtrMemberAccess	beg -> next		1263163	0					
ANR	1263181	Identifier	beg		1263163	0					
ANR	1263182	Identifier	next		1263163	1					
ANR	1263183	Identifier	next		1263163	1					
ANR	1263184	Identifier	end		1263163	1					
ANR	1263185	CompoundStatement		4:37:82:82	1263163	1					
ANR	1263186	IfStatement	if ( beg -> next -> divide_count != 1 && beg -> next -> divide_count != 2 )		1263163	0					
ANR	1263187	Condition	beg -> next -> divide_count != 1 && beg -> next -> divide_count != 2	2120:12:77704:77763	1263163	0	True				
ANR	1263188	AndExpression	beg -> next -> divide_count != 1 && beg -> next -> divide_count != 2		1263163	0		&&			
ANR	1263189	EqualityExpression	beg -> next -> divide_count != 1		1263163	0		!=			
ANR	1263190	PtrMemberAccess	beg -> next -> divide_count		1263163	0					
ANR	1263191	PtrMemberAccess	beg -> next		1263163	0					
ANR	1263192	Identifier	beg		1263163	0					
ANR	1263193	Identifier	next		1263163	1					
ANR	1263194	Identifier	divide_count		1263163	1					
ANR	1263195	PrimaryExpression	1		1263163	1					
ANR	1263196	EqualityExpression	beg -> next -> divide_count != 2		1263163	1		!=			
ANR	1263197	PtrMemberAccess	beg -> next -> divide_count		1263163	0					
ANR	1263198	PtrMemberAccess	beg -> next		1263163	0					
ANR	1263199	Identifier	beg		1263163	0					
ANR	1263200	Identifier	next		1263163	1					
ANR	1263201	Identifier	divide_count		1263163	1					
ANR	1263202	PrimaryExpression	2		1263163	1					
ANR	1263203	ExpressionStatement	return_error ( gs_error_unregistered )	2121:12:77778:77813	1263163	1	True				
ANR	1263204	CallExpression	return_error ( gs_error_unregistered )		1263163	0					
ANR	1263205	Callee	return_error		1263163	0					
ANR	1263206	Identifier	return_error		1263163	0					
ANR	1263207	ArgumentList	gs_error_unregistered		1263163	1					
ANR	1263208	Argument	gs_error_unregistered		1263163	0					
ANR	1263209	Identifier	gs_error_unregistered		1263163	0					
ANR	1263210	IfStatement	if ( beg -> next -> divide_count != 1 )		1263163	1					
ANR	1263211	Condition	beg -> next -> divide_count != 1	2122:12:77850:77877	1263163	0	True				
ANR	1263212	EqualityExpression	beg -> next -> divide_count != 1		1263163	0		!=			
ANR	1263213	PtrMemberAccess	beg -> next -> divide_count		1263163	0					
ANR	1263214	PtrMemberAccess	beg -> next		1263163	0					
ANR	1263215	Identifier	beg		1263163	0					
ANR	1263216	Identifier	next		1263163	1					
ANR	1263217	Identifier	divide_count		1263163	1					
ANR	1263218	PrimaryExpression	1		1263163	1					
ANR	1263219	ReturnStatement	return 0 ;	2123:12:77892:77900	1263163	1	True				
ANR	1263220	PrimaryExpression	0		1263163	0					
ANR	1263221	ReturnStatement	"return fill_triangle_wedge_from_list ( pfs , beg , end , beg -> next , c0 , c1 ) ;"	2124:8:77910:77980	1263163	2	True				
ANR	1263222	CallExpression	"fill_triangle_wedge_from_list ( pfs , beg , end , beg -> next , c0 , c1 )"		1263163	0					
ANR	1263223	Callee	fill_triangle_wedge_from_list		1263163	0					
ANR	1263224	Identifier	fill_triangle_wedge_from_list		1263163	0					
ANR	1263225	ArgumentList	pfs		1263163	1					
ANR	1263226	Argument	pfs		1263163	0					
ANR	1263227	Identifier	pfs		1263163	0					
ANR	1263228	Argument	beg		1263163	1					
ANR	1263229	Identifier	beg		1263163	0					
ANR	1263230	Argument	end		1263163	2					
ANR	1263231	Identifier	end		1263163	0					
ANR	1263232	Argument	beg -> next		1263163	3					
ANR	1263233	PtrMemberAccess	beg -> next		1263163	0					
ANR	1263234	Identifier	beg		1263163	0					
ANR	1263235	Identifier	next		1263163	1					
ANR	1263236	Argument	c0		1263163	4					
ANR	1263237	Identifier	c0		1263163	0					
ANR	1263238	Argument	c1		1263163	5					
ANR	1263239	Identifier	c1		1263163	0					
ANR	1263240	ElseStatement	else		1263163	0					
ANR	1263241	CompoundStatement		15:8:502:559	1263163	0					
ANR	1263242	IdentifierDeclStatement	gs_fixed_point p ;	2126:8:78003:78019	1263163	0	True				
ANR	1263243	IdentifierDecl	p		1263163	0					
ANR	1263244	IdentifierDeclType	gs_fixed_point		1263163	0					
ANR	1263245	Identifier	p		1263163	1					
ANR	1263246	IdentifierDeclStatement	wedge_vertex_list_elem_t * e ;	2127:8:78029:78056	1263163	1	True				
ANR	1263247	IdentifierDecl	* e		1263163	0					
ANR	1263248	IdentifierDeclType	wedge_vertex_list_elem_t *		1263163	0					
ANR	1263249	Identifier	e		1263163	1					
ANR	1263250	IdentifierDeclStatement	patch_color_t * c ;	2128:8:78066:78082	1263163	2	True				
ANR	1263251	IdentifierDecl	* c		1263163	0					
ANR	1263252	IdentifierDeclType	patch_color_t *		1263163	0					
ANR	1263253	Identifier	c		1263163	1					
ANR	1263254	IdentifierDeclStatement	int code ;	2129:8:78092:78100	1263163	3	True				
ANR	1263255	IdentifierDecl	code		1263163	0					
ANR	1263256	IdentifierDeclType	int		1263163	0					
ANR	1263257	Identifier	code		1263163	1					
ANR	1263258	IdentifierDeclStatement	"byte * color_stack_ptr = reserve_colors_inline ( pfs , & c , 1 ) ;"	2130:8:78110:78167	1263163	4	True				
ANR	1263259	IdentifierDecl	"* color_stack_ptr = reserve_colors_inline ( pfs , & c , 1 )"		1263163	0					
ANR	1263260	IdentifierDeclType	byte *		1263163	0					
ANR	1263261	Identifier	color_stack_ptr		1263163	1					
ANR	1263262	AssignmentExpression	"* color_stack_ptr = reserve_colors_inline ( pfs , & c , 1 )"		1263163	2		=			
ANR	1263263	Identifier	color_stack_ptr		1263163	0					
ANR	1263264	CallExpression	"reserve_colors_inline ( pfs , & c , 1 )"		1263163	1					
ANR	1263265	Callee	reserve_colors_inline		1263163	0					
ANR	1263266	Identifier	reserve_colors_inline		1263163	0					
ANR	1263267	ArgumentList	pfs		1263163	1					
ANR	1263268	Argument	pfs		1263163	0					
ANR	1263269	Identifier	pfs		1263163	0					
ANR	1263270	Argument	& c		1263163	1					
ANR	1263271	UnaryOperationExpression	& c		1263163	0					
ANR	1263272	UnaryOperator	&		1263163	0					
ANR	1263273	Identifier	c		1263163	1					
ANR	1263274	Argument	1		1263163	2					
ANR	1263275	PrimaryExpression	1		1263163	0					
ANR	1263276	IfStatement	if ( color_stack_ptr == NULL )		1263163	5					
ANR	1263277	Condition	color_stack_ptr == NULL	2132:12:78182:78204	1263163	0	True				
ANR	1263278	EqualityExpression	color_stack_ptr == NULL		1263163	0		==			
ANR	1263279	Identifier	color_stack_ptr		1263163	0					
ANR	1263280	Identifier	NULL		1263163	1					
ANR	1263281	ExpressionStatement	return_error ( gs_error_unregistered )	2133:12:78219:78254	1263163	1	True				
ANR	1263282	CallExpression	return_error ( gs_error_unregistered )		1263163	0					
ANR	1263283	Callee	return_error		1263163	0					
ANR	1263284	Identifier	return_error		1263163	0					
ANR	1263285	ArgumentList	gs_error_unregistered		1263163	1					
ANR	1263286	Argument	gs_error_unregistered		1263163	0					
ANR	1263287	Identifier	gs_error_unregistered		1263163	0					
ANR	1263288	ExpressionStatement	p . x = ( beg -> p . x + end -> p . x ) / 2	2134:8:78287:78318	1263163	6	True				
ANR	1263289	AssignmentExpression	p . x = ( beg -> p . x + end -> p . x ) / 2		1263163	0		=			
ANR	1263290	MemberAccess	p . x		1263163	0					
ANR	1263291	Identifier	p		1263163	0					
ANR	1263292	Identifier	x		1263163	1					
ANR	1263293	MultiplicativeExpression	( beg -> p . x + end -> p . x ) / 2		1263163	1		/			
ANR	1263294	AdditiveExpression	beg -> p . x + end -> p . x		1263163	0		+			
ANR	1263295	MemberAccess	beg -> p . x		1263163	0					
ANR	1263296	PtrMemberAccess	beg -> p		1263163	0					
ANR	1263297	Identifier	beg		1263163	0					
ANR	1263298	Identifier	p		1263163	1					
ANR	1263299	Identifier	x		1263163	1					
ANR	1263300	MemberAccess	end -> p . x		1263163	1					
ANR	1263301	PtrMemberAccess	end -> p		1263163	0					
ANR	1263302	Identifier	end		1263163	0					
ANR	1263303	Identifier	p		1263163	1					
ANR	1263304	Identifier	x		1263163	1					
ANR	1263305	PrimaryExpression	2		1263163	1					
ANR	1263306	ExpressionStatement	p . y = ( beg -> p . y + end -> p . y ) / 2	2135:8:78328:78359	1263163	7	True				
ANR	1263307	AssignmentExpression	p . y = ( beg -> p . y + end -> p . y ) / 2		1263163	0		=			
ANR	1263308	MemberAccess	p . y		1263163	0					
ANR	1263309	Identifier	p		1263163	0					
ANR	1263310	Identifier	y		1263163	1					
ANR	1263311	MultiplicativeExpression	( beg -> p . y + end -> p . y ) / 2		1263163	1		/			
ANR	1263312	AdditiveExpression	beg -> p . y + end -> p . y		1263163	0		+			
ANR	1263313	MemberAccess	beg -> p . y		1263163	0					
ANR	1263314	PtrMemberAccess	beg -> p		1263163	0					
ANR	1263315	Identifier	beg		1263163	0					
ANR	1263316	Identifier	p		1263163	1					
ANR	1263317	Identifier	y		1263163	1					
ANR	1263318	MemberAccess	end -> p . y		1263163	1					
ANR	1263319	PtrMemberAccess	end -> p		1263163	0					
ANR	1263320	Identifier	end		1263163	0					
ANR	1263321	Identifier	p		1263163	1					
ANR	1263322	Identifier	y		1263163	1					
ANR	1263323	PrimaryExpression	2		1263163	1					
ANR	1263324	ExpressionStatement	"e = wedge_vertex_list_find ( beg , end , level + 1 )"	2136:8:78369:78416	1263163	8	True				
ANR	1263325	AssignmentExpression	"e = wedge_vertex_list_find ( beg , end , level + 1 )"		1263163	0		=			
ANR	1263326	Identifier	e		1263163	0					
ANR	1263327	CallExpression	"wedge_vertex_list_find ( beg , end , level + 1 )"		1263163	1					
ANR	1263328	Callee	wedge_vertex_list_find		1263163	0					
ANR	1263329	Identifier	wedge_vertex_list_find		1263163	0					
ANR	1263330	ArgumentList	beg		1263163	1					
ANR	1263331	Argument	beg		1263163	0					
ANR	1263332	Identifier	beg		1263163	0					
ANR	1263333	Argument	end		1263163	1					
ANR	1263334	Identifier	end		1263163	0					
ANR	1263335	Argument	level + 1		1263163	2					
ANR	1263336	AdditiveExpression	level + 1		1263163	0		+			
ANR	1263337	Identifier	level		1263163	0					
ANR	1263338	PrimaryExpression	1		1263163	1					
ANR	1263339	IfStatement	if ( e == NULL )		1263163	9					
ANR	1263340	Condition	e == NULL	2137:12:78430:78438	1263163	0	True				
ANR	1263341	EqualityExpression	e == NULL		1263163	0		==			
ANR	1263342	Identifier	e		1263163	0					
ANR	1263343	Identifier	NULL		1263163	1					
ANR	1263344	ExpressionStatement	return_error ( gs_error_unregistered )	2138:12:78453:78488	1263163	1	True				
ANR	1263345	CallExpression	return_error ( gs_error_unregistered )		1263163	0					
ANR	1263346	Callee	return_error		1263163	0					
ANR	1263347	Identifier	return_error		1263163	0					
ANR	1263348	ArgumentList	gs_error_unregistered		1263163	1					
ANR	1263349	Argument	gs_error_unregistered		1263163	0					
ANR	1263350	Identifier	gs_error_unregistered		1263163	0					
ANR	1263351	IfStatement	if ( e -> p . x != p . x || e -> p . y != p . y )		1263163	10					
ANR	1263352	Condition	e -> p . x != p . x || e -> p . y != p . y	2139:12:78525:78554	1263163	0	True				
ANR	1263353	OrExpression	e -> p . x != p . x || e -> p . y != p . y		1263163	0		||			
ANR	1263354	EqualityExpression	e -> p . x != p . x		1263163	0		!=			
ANR	1263355	MemberAccess	e -> p . x		1263163	0					
ANR	1263356	PtrMemberAccess	e -> p		1263163	0					
ANR	1263357	Identifier	e		1263163	0					
ANR	1263358	Identifier	p		1263163	1					
ANR	1263359	Identifier	x		1263163	1					
ANR	1263360	MemberAccess	p . x		1263163	1					
ANR	1263361	Identifier	p		1263163	0					
ANR	1263362	Identifier	x		1263163	1					
ANR	1263363	EqualityExpression	e -> p . y != p . y		1263163	1		!=			
ANR	1263364	MemberAccess	e -> p . y		1263163	0					
ANR	1263365	PtrMemberAccess	e -> p		1263163	0					
ANR	1263366	Identifier	e		1263163	0					
ANR	1263367	Identifier	p		1263163	1					
ANR	1263368	Identifier	y		1263163	1					
ANR	1263369	MemberAccess	p . y		1263163	1					
ANR	1263370	Identifier	p		1263163	0					
ANR	1263371	Identifier	y		1263163	1					
ANR	1263372	ExpressionStatement	return_error ( gs_error_unregistered )	2140:12:78569:78604	1263163	1	True				
ANR	1263373	CallExpression	return_error ( gs_error_unregistered )		1263163	0					
ANR	1263374	Callee	return_error		1263163	0					
ANR	1263375	Identifier	return_error		1263163	0					
ANR	1263376	ArgumentList	gs_error_unregistered		1263163	1					
ANR	1263377	Argument	gs_error_unregistered		1263163	0					
ANR	1263378	Identifier	gs_error_unregistered		1263163	0					
ANR	1263379	ExpressionStatement	"patch_interpolate_color ( c , c0 , c1 , pfs , 0.5 )"	2141:8:78637:78681	1263163	11	True				
ANR	1263380	CallExpression	"patch_interpolate_color ( c , c0 , c1 , pfs , 0.5 )"		1263163	0					
ANR	1263381	Callee	patch_interpolate_color		1263163	0					
ANR	1263382	Identifier	patch_interpolate_color		1263163	0					
ANR	1263383	ArgumentList	c		1263163	1					
ANR	1263384	Argument	c		1263163	0					
ANR	1263385	Identifier	c		1263163	0					
ANR	1263386	Argument	c0		1263163	1					
ANR	1263387	Identifier	c0		1263163	0					
ANR	1263388	Argument	c1		1263163	2					
ANR	1263389	Identifier	c1		1263163	0					
ANR	1263390	Argument	pfs		1263163	3					
ANR	1263391	Identifier	pfs		1263163	0					
ANR	1263392	Argument	0.5		1263163	4					
ANR	1263393	PrimaryExpression	0.5		1263163	0					
ANR	1263394	ExpressionStatement	"code = fill_wedge_from_list_rec ( pfs , beg , e , level + 1 , c0 , c )"	2142:8:78691:78753	1263163	12	True				
ANR	1263395	AssignmentExpression	"code = fill_wedge_from_list_rec ( pfs , beg , e , level + 1 , c0 , c )"		1263163	0		=			
ANR	1263396	Identifier	code		1263163	0					
ANR	1263397	CallExpression	"fill_wedge_from_list_rec ( pfs , beg , e , level + 1 , c0 , c )"		1263163	1					
ANR	1263398	Callee	fill_wedge_from_list_rec		1263163	0					
ANR	1263399	Identifier	fill_wedge_from_list_rec		1263163	0					
ANR	1263400	ArgumentList	pfs		1263163	1					
ANR	1263401	Argument	pfs		1263163	0					
ANR	1263402	Identifier	pfs		1263163	0					
ANR	1263403	Argument	beg		1263163	1					
ANR	1263404	Identifier	beg		1263163	0					
ANR	1263405	Argument	e		1263163	2					
ANR	1263406	Identifier	e		1263163	0					
ANR	1263407	Argument	level + 1		1263163	3					
ANR	1263408	AdditiveExpression	level + 1		1263163	0		+			
ANR	1263409	Identifier	level		1263163	0					
ANR	1263410	PrimaryExpression	1		1263163	1					
ANR	1263411	Argument	c0		1263163	4					
ANR	1263412	Identifier	c0		1263163	0					
ANR	1263413	Argument	c		1263163	5					
ANR	1263414	Identifier	c		1263163	0					
ANR	1263415	IfStatement	if ( code >= 0 )		1263163	13					
ANR	1263416	Condition	code >= 0	2143:12:78767:78775	1263163	0	True				
ANR	1263417	RelationalExpression	code >= 0		1263163	0		>=			
ANR	1263418	Identifier	code		1263163	0					
ANR	1263419	PrimaryExpression	0		1263163	1					
ANR	1263420	ExpressionStatement	"code = fill_wedge_from_list_rec ( pfs , e , end , level + 1 , c , c1 )"	2144:12:78790:78852	1263163	1	True				
ANR	1263421	AssignmentExpression	"code = fill_wedge_from_list_rec ( pfs , e , end , level + 1 , c , c1 )"		1263163	0		=			
ANR	1263422	Identifier	code		1263163	0					
ANR	1263423	CallExpression	"fill_wedge_from_list_rec ( pfs , e , end , level + 1 , c , c1 )"		1263163	1					
ANR	1263424	Callee	fill_wedge_from_list_rec		1263163	0					
ANR	1263425	Identifier	fill_wedge_from_list_rec		1263163	0					
ANR	1263426	ArgumentList	pfs		1263163	1					
ANR	1263427	Argument	pfs		1263163	0					
ANR	1263428	Identifier	pfs		1263163	0					
ANR	1263429	Argument	e		1263163	1					
ANR	1263430	Identifier	e		1263163	0					
ANR	1263431	Argument	end		1263163	2					
ANR	1263432	Identifier	end		1263163	0					
ANR	1263433	Argument	level + 1		1263163	3					
ANR	1263434	AdditiveExpression	level + 1		1263163	0		+			
ANR	1263435	Identifier	level		1263163	0					
ANR	1263436	PrimaryExpression	1		1263163	1					
ANR	1263437	Argument	c		1263163	4					
ANR	1263438	Identifier	c		1263163	0					
ANR	1263439	Argument	c1		1263163	5					
ANR	1263440	Identifier	c1		1263163	0					
ANR	1263441	IfStatement	if ( code >= 0 )		1263163	14					
ANR	1263442	Condition	code >= 0	2145:12:78866:78874	1263163	0	True				
ANR	1263443	RelationalExpression	code >= 0		1263163	0		>=			
ANR	1263444	Identifier	code		1263163	0					
ANR	1263445	PrimaryExpression	0		1263163	1					
ANR	1263446	CompoundStatement		30:23:1269:1269	1263163	1					
ANR	1263447	IfStatement	if ( e -> divide_count != 1 && e -> divide_count != 2 )		1263163	0					
ANR	1263448	Condition	e -> divide_count != 1 && e -> divide_count != 2	2146:16:78895:78938	1263163	0	True				
ANR	1263449	AndExpression	e -> divide_count != 1 && e -> divide_count != 2		1263163	0		&&			
ANR	1263450	EqualityExpression	e -> divide_count != 1		1263163	0		!=			
ANR	1263451	PtrMemberAccess	e -> divide_count		1263163	0					
ANR	1263452	Identifier	e		1263163	0					
ANR	1263453	Identifier	divide_count		1263163	1					
ANR	1263454	PrimaryExpression	1		1263163	1					
ANR	1263455	EqualityExpression	e -> divide_count != 2		1263163	1		!=			
ANR	1263456	PtrMemberAccess	e -> divide_count		1263163	0					
ANR	1263457	Identifier	e		1263163	0					
ANR	1263458	Identifier	divide_count		1263163	1					
ANR	1263459	PrimaryExpression	2		1263163	1					
ANR	1263460	ExpressionStatement	return_error ( gs_error_unregistered )	2147:16:78957:78992	1263163	1	True				
ANR	1263461	CallExpression	return_error ( gs_error_unregistered )		1263163	0					
ANR	1263462	Callee	return_error		1263163	0					
ANR	1263463	Identifier	return_error		1263163	0					
ANR	1263464	ArgumentList	gs_error_unregistered		1263163	1					
ANR	1263465	Argument	gs_error_unregistered		1263163	0					
ANR	1263466	Identifier	gs_error_unregistered		1263163	0					
ANR	1263467	IfStatement	if ( e -> divide_count == 1 )		1263163	1					
ANR	1263468	Condition	e -> divide_count == 1	2148:16:79033:79052	1263163	0	True				
ANR	1263469	EqualityExpression	e -> divide_count == 1		1263163	0		==			
ANR	1263470	PtrMemberAccess	e -> divide_count		1263163	0					
ANR	1263471	Identifier	e		1263163	0					
ANR	1263472	Identifier	divide_count		1263163	1					
ANR	1263473	PrimaryExpression	1		1263163	1					
ANR	1263474	ExpressionStatement	"code = fill_triangle_wedge_from_list ( pfs , beg , end , e , c0 , c1 )"	2149:16:79071:79133	1263163	1	True				
ANR	1263475	AssignmentExpression	"code = fill_triangle_wedge_from_list ( pfs , beg , end , e , c0 , c1 )"		1263163	0		=			
ANR	1263476	Identifier	code		1263163	0					
ANR	1263477	CallExpression	"fill_triangle_wedge_from_list ( pfs , beg , end , e , c0 , c1 )"		1263163	1					
ANR	1263478	Callee	fill_triangle_wedge_from_list		1263163	0					
ANR	1263479	Identifier	fill_triangle_wedge_from_list		1263163	0					
ANR	1263480	ArgumentList	pfs		1263163	1					
ANR	1263481	Argument	pfs		1263163	0					
ANR	1263482	Identifier	pfs		1263163	0					
ANR	1263483	Argument	beg		1263163	1					
ANR	1263484	Identifier	beg		1263163	0					
ANR	1263485	Argument	end		1263163	2					
ANR	1263486	Identifier	end		1263163	0					
ANR	1263487	Argument	e		1263163	3					
ANR	1263488	Identifier	e		1263163	0					
ANR	1263489	Argument	c0		1263163	4					
ANR	1263490	Identifier	c0		1263163	0					
ANR	1263491	Argument	c1		1263163	5					
ANR	1263492	Identifier	c1		1263163	0					
ANR	1263493	ExpressionStatement	"release_colors_inline ( pfs , color_stack_ptr , 1 )"	2151:8:79153:79199	1263163	15	True				
ANR	1263494	CallExpression	"release_colors_inline ( pfs , color_stack_ptr , 1 )"		1263163	0					
ANR	1263495	Callee	release_colors_inline		1263163	0					
ANR	1263496	Identifier	release_colors_inline		1263163	0					
ANR	1263497	ArgumentList	pfs		1263163	1					
ANR	1263498	Argument	pfs		1263163	0					
ANR	1263499	Identifier	pfs		1263163	0					
ANR	1263500	Argument	color_stack_ptr		1263163	1					
ANR	1263501	Identifier	color_stack_ptr		1263163	0					
ANR	1263502	Argument	1		1263163	2					
ANR	1263503	PrimaryExpression	1		1263163	0					
ANR	1263504	ReturnStatement	return code ;	2152:8:79209:79220	1263163	16	True				
ANR	1263505	Identifier	code		1263163	0					
ANR	1263506	ReturnType	static int		1263163	1					
ANR	1263507	Identifier	fill_wedge_from_list_rec		1263163	2					
ANR	1263508	ParameterList	"patch_fill_state_t * pfs , wedge_vertex_list_elem_t * beg , const wedge_vertex_list_elem_t * end , int level , const patch_color_t * c0 , const patch_color_t * c1"		1263163	3					
ANR	1263509	Parameter	patch_fill_state_t * pfs	2113:25:77429:77451	1263163	0	True				
ANR	1263510	ParameterType	patch_fill_state_t *		1263163	0					
ANR	1263511	Identifier	pfs		1263163	1					
ANR	1263512	Parameter	wedge_vertex_list_elem_t * beg	2114:12:77466:77494	1263163	1	True				
ANR	1263513	ParameterType	wedge_vertex_list_elem_t *		1263163	0					
ANR	1263514	Identifier	beg		1263163	1					
ANR	1263515	Parameter	const wedge_vertex_list_elem_t * end	2114:43:77497:77531	1263163	2	True				
ANR	1263516	ParameterType	const wedge_vertex_list_elem_t *		1263163	0					
ANR	1263517	Identifier	end		1263163	1					
ANR	1263518	Parameter	int level	2115:12:77546:77554	1263163	3	True				
ANR	1263519	ParameterType	int		1263163	0					
ANR	1263520	Identifier	level		1263163	1					
ANR	1263521	Parameter	const patch_color_t * c0	2115:23:77557:77579	1263163	4	True				
ANR	1263522	ParameterType	const patch_color_t *		1263163	0					
ANR	1263523	Identifier	c0		1263163	1					
ANR	1263524	Parameter	const patch_color_t * c1	2115:48:77582:77604	1263163	5	True				
ANR	1263525	ParameterType	const patch_color_t *		1263163	0					
ANR	1263526	Identifier	c1		1263163	1					
ANR	1263527	CFGEntryNode	ENTRY		1263163		True				
ANR	1263528	CFGExitNode	EXIT		1263163		True				
ANR	1263529	Symbol	beg -> p . x		1263163						
ANR	1263530	Symbol	gs_error_unregistered		1263163						
ANR	1263531	Symbol	code		1263163						
ANR	1263532	Symbol	beg		1263163						
ANR	1263533	Symbol	beg -> p . y		1263163						
ANR	1263534	Symbol	end -> p . x		1263163						
ANR	1263535	Symbol	e -> divide_count		1263163						
ANR	1263536	Symbol	beg -> next		1263163						
ANR	1263537	Symbol	end -> p . y		1263163						
ANR	1263538	Symbol	* beg		1263163						
ANR	1263539	Symbol	beg -> next -> divide_count		1263163						
ANR	1263540	Symbol	* beg -> next		1263163						
ANR	1263541	Symbol	reserve_colors_inline		1263163						
ANR	1263542	Symbol	wedge_vertex_list_find		1263163						
ANR	1263543	Symbol	* * beg		1263163						
ANR	1263544	Symbol	end		1263163						
ANR	1263545	Symbol	fill_wedge_from_list_rec		1263163						
ANR	1263546	Symbol	c		1263163						
ANR	1263547	Symbol	NULL		1263163						
ANR	1263548	Symbol	level		1263163						
ANR	1263549	Symbol	e		1263163						
ANR	1263550	Symbol	end -> p		1263163						
ANR	1263551	Symbol	& c		1263163						
ANR	1263552	Symbol	beg -> next -> next		1263163						
ANR	1263553	Symbol	c0		1263163						
ANR	1263554	Symbol	e -> p		1263163						
ANR	1263555	Symbol	c1		1263163						
ANR	1263556	Symbol	p . y		1263163						
ANR	1263557	Symbol	p . x		1263163						
ANR	1263558	Symbol	* e		1263163						
ANR	1263559	Symbol	p		1263163						
ANR	1263560	Symbol	e -> p . y		1263163						
ANR	1263561	Symbol	e -> p . x		1263163						
ANR	1263562	Symbol	color_stack_ptr		1263163						
ANR	1263563	Symbol	beg -> p		1263163						
ANR	1263564	Symbol	* end		1263163						
ANR	1263565	Symbol	pfs		1263163						
ANR	1263566	Symbol	fill_triangle_wedge_from_list		1263163						
ANR	1263567	Function	fill_wedge_from_list	2156:0:79231:79503							
ANR	1263568	FunctionDef	"fill_wedge_from_list (patch_fill_state_t * pfs , const wedge_vertex_list_t * l , const patch_color_t * c0 , const patch_color_t * c1)"		1263567	0					
ANR	1263569	CompoundStatement		2159:0:79380:79503	1263567	0					
ANR	1263570	ReturnStatement	"return fill_wedge_from_list_rec ( pfs , l -> beg , l -> end , max ( l -> beg -> level , l -> end -> level ) , c0 , c1 ) ;"	2160:4:79386:79501	1263567	0	True				
ANR	1263571	CallExpression	"fill_wedge_from_list_rec ( pfs , l -> beg , l -> end , max ( l -> beg -> level , l -> end -> level ) , c0 , c1 )"		1263567	0					
ANR	1263572	Callee	fill_wedge_from_list_rec		1263567	0					
ANR	1263573	Identifier	fill_wedge_from_list_rec		1263567	0					
ANR	1263574	ArgumentList	pfs		1263567	1					
ANR	1263575	Argument	pfs		1263567	0					
ANR	1263576	Identifier	pfs		1263567	0					
ANR	1263577	Argument	l -> beg		1263567	1					
ANR	1263578	PtrMemberAccess	l -> beg		1263567	0					
ANR	1263579	Identifier	l		1263567	0					
ANR	1263580	Identifier	beg		1263567	1					
ANR	1263581	Argument	l -> end		1263567	2					
ANR	1263582	PtrMemberAccess	l -> end		1263567	0					
ANR	1263583	Identifier	l		1263567	0					
ANR	1263584	Identifier	end		1263567	1					
ANR	1263585	Argument	"max ( l -> beg -> level , l -> end -> level )"		1263567	3					
ANR	1263586	CallExpression	"max ( l -> beg -> level , l -> end -> level )"		1263567	0					
ANR	1263587	Callee	max		1263567	0					
ANR	1263588	Identifier	max		1263567	0					
ANR	1263589	ArgumentList	l -> beg -> level		1263567	1					
ANR	1263590	Argument	l -> beg -> level		1263567	0					
ANR	1263591	PtrMemberAccess	l -> beg -> level		1263567	0					
ANR	1263592	PtrMemberAccess	l -> beg		1263567	0					
ANR	1263593	Identifier	l		1263567	0					
ANR	1263594	Identifier	beg		1263567	1					
ANR	1263595	Identifier	level		1263567	1					
ANR	1263596	Argument	l -> end -> level		1263567	1					
ANR	1263597	PtrMemberAccess	l -> end -> level		1263567	0					
ANR	1263598	PtrMemberAccess	l -> end		1263567	0					
ANR	1263599	Identifier	l		1263567	0					
ANR	1263600	Identifier	end		1263567	1					
ANR	1263601	Identifier	level		1263567	1					
ANR	1263602	Argument	c0		1263567	4					
ANR	1263603	Identifier	c0		1263567	0					
ANR	1263604	Argument	c1		1263567	5					
ANR	1263605	Identifier	c1		1263567	0					
ANR	1263606	ReturnType	static int		1263567	1					
ANR	1263607	Identifier	fill_wedge_from_list		1263567	2					
ANR	1263608	ParameterList	"patch_fill_state_t * pfs , const wedge_vertex_list_t * l , const patch_color_t * c0 , const patch_color_t * c1"		1263567	3					
ANR	1263609	Parameter	patch_fill_state_t * pfs	2157:21:79263:79285	1263567	0	True				
ANR	1263610	ParameterType	patch_fill_state_t *		1263567	0					
ANR	1263611	Identifier	pfs		1263567	1					
ANR	1263612	Parameter	const wedge_vertex_list_t * l	2157:46:79288:79315	1263567	1	True				
ANR	1263613	ParameterType	const wedge_vertex_list_t *		1263567	0					
ANR	1263614	Identifier	l		1263567	1					
ANR	1263615	Parameter	const patch_color_t * c0	2158:12:79330:79352	1263567	2	True				
ANR	1263616	ParameterType	const patch_color_t *		1263567	0					
ANR	1263617	Identifier	c0		1263567	1					
ANR	1263618	Parameter	const patch_color_t * c1	2158:37:79355:79377	1263567	3	True				
ANR	1263619	ParameterType	const patch_color_t *		1263567	0					
ANR	1263620	Identifier	c1		1263567	1					
ANR	1263621	CFGEntryNode	ENTRY		1263567		True				
ANR	1263622	CFGExitNode	EXIT		1263567		True				
ANR	1263623	Symbol	l -> beg		1263567						
ANR	1263624	Symbol	max		1263567						
ANR	1263625	Symbol	l -> end		1263567						
ANR	1263626	Symbol	l		1263567						
ANR	1263627	Symbol	c0		1263567						
ANR	1263628	Symbol	c1		1263567						
ANR	1263629	Symbol	l -> end -> level		1263567						
ANR	1263630	Symbol	* l -> end		1263567						
ANR	1263631	Symbol	l -> beg -> level		1263567						
ANR	1263632	Symbol	* l		1263567						
ANR	1263633	Symbol	* l -> beg		1263567						
ANR	1263634	Symbol	pfs		1263567						
ANR	1263635	Symbol	fill_wedge_from_list_rec		1263567						
ANR	1263636	Symbol	* * l		1263567						
ANR	1263637	Function	terminate_wedge_vertex_list	2164:0:79506:79865							
ANR	1263638	FunctionDef	"terminate_wedge_vertex_list (patch_fill_state_t * pfs , wedge_vertex_list_t * l , const patch_color_t * c0 , const patch_color_t * c1)"		1263637	0					
ANR	1263639	CompoundStatement		2167:0:79659:79865	1263637	0					
ANR	1263640	IfStatement	if ( l -> beg != NULL )		1263637	0					
ANR	1263641	Condition	l -> beg != NULL	2168:8:79669:79682	1263637	0	True				
ANR	1263642	EqualityExpression	l -> beg != NULL		1263637	0		!=			
ANR	1263643	PtrMemberAccess	l -> beg		1263637	0					
ANR	1263644	Identifier	l		1263637	0					
ANR	1263645	Identifier	beg		1263637	1					
ANR	1263646	Identifier	NULL		1263637	1					
ANR	1263647	CompoundStatement		3:8:35:82	1263637	1					
ANR	1263648	IdentifierDeclStatement	"int code = fill_wedge_from_list ( pfs , l , c0 , c1 ) ;"	2169:8:79695:79742	1263637	0	True				
ANR	1263649	IdentifierDecl	"code = fill_wedge_from_list ( pfs , l , c0 , c1 )"		1263637	0					
ANR	1263650	IdentifierDeclType	int		1263637	0					
ANR	1263651	Identifier	code		1263637	1					
ANR	1263652	AssignmentExpression	"code = fill_wedge_from_list ( pfs , l , c0 , c1 )"		1263637	2		=			
ANR	1263653	Identifier	code		1263637	0					
ANR	1263654	CallExpression	"fill_wedge_from_list ( pfs , l , c0 , c1 )"		1263637	1					
ANR	1263655	Callee	fill_wedge_from_list		1263637	0					
ANR	1263656	Identifier	fill_wedge_from_list		1263637	0					
ANR	1263657	ArgumentList	pfs		1263637	1					
ANR	1263658	Argument	pfs		1263637	0					
ANR	1263659	Identifier	pfs		1263637	0					
ANR	1263660	Argument	l		1263637	1					
ANR	1263661	Identifier	l		1263637	0					
ANR	1263662	Argument	c0		1263637	2					
ANR	1263663	Identifier	c0		1263637	0					
ANR	1263664	Argument	c1		1263637	3					
ANR	1263665	Identifier	c1		1263637	0					
ANR	1263666	IfStatement	if ( code < 0 )		1263637	1					
ANR	1263667	Condition	code < 0	2171:12:79757:79764	1263637	0	True				
ANR	1263668	RelationalExpression	code < 0		1263637	0		<			
ANR	1263669	Identifier	code		1263637	0					
ANR	1263670	PrimaryExpression	0		1263637	1					
ANR	1263671	ReturnStatement	return code ;	2172:12:79779:79790	1263637	1	True				
ANR	1263672	Identifier	code		1263637	0					
ANR	1263673	ReturnStatement	"return release_wedge_vertex_list ( pfs , l , 1 ) ;"	2173:8:79800:79843	1263637	2	True				
ANR	1263674	CallExpression	"release_wedge_vertex_list ( pfs , l , 1 )"		1263637	0					
ANR	1263675	Callee	release_wedge_vertex_list		1263637	0					
ANR	1263676	Identifier	release_wedge_vertex_list		1263637	0					
ANR	1263677	ArgumentList	pfs		1263637	1					
ANR	1263678	Argument	pfs		1263637	0					
ANR	1263679	Identifier	pfs		1263637	0					
ANR	1263680	Argument	l		1263637	1					
ANR	1263681	Identifier	l		1263637	0					
ANR	1263682	Argument	1		1263637	2					
ANR	1263683	PrimaryExpression	1		1263637	0					
ANR	1263684	ReturnStatement	return 0 ;	2175:4:79855:79863	1263637	1	True				
ANR	1263685	PrimaryExpression	0		1263637	0					
ANR	1263686	ReturnType	static inline int		1263637	1					
ANR	1263687	Identifier	terminate_wedge_vertex_list		1263637	2					
ANR	1263688	ParameterList	"patch_fill_state_t * pfs , wedge_vertex_list_t * l , const patch_color_t * c0 , const patch_color_t * c1"		1263637	3					
ANR	1263689	Parameter	patch_fill_state_t * pfs	2165:28:79552:79574	1263637	0	True				
ANR	1263690	ParameterType	patch_fill_state_t *		1263637	0					
ANR	1263691	Identifier	pfs		1263637	1					
ANR	1263692	Parameter	wedge_vertex_list_t * l	2165:53:79577:79598	1263637	1	True				
ANR	1263693	ParameterType	wedge_vertex_list_t *		1263637	0					
ANR	1263694	Identifier	l		1263637	1					
ANR	1263695	Parameter	const patch_color_t * c0	2166:8:79609:79631	1263637	2	True				
ANR	1263696	ParameterType	const patch_color_t *		1263637	0					
ANR	1263697	Identifier	c0		1263637	1					
ANR	1263698	Parameter	const patch_color_t * c1	2166:33:79634:79656	1263637	3	True				
ANR	1263699	ParameterType	const patch_color_t *		1263637	0					
ANR	1263700	Identifier	c1		1263637	1					
ANR	1263701	CFGEntryNode	ENTRY		1263637		True				
ANR	1263702	CFGExitNode	EXIT		1263637		True				
ANR	1263703	Symbol	NULL		1263637						
ANR	1263704	Symbol	l -> beg		1263637						
ANR	1263705	Symbol	code		1263637						
ANR	1263706	Symbol	release_wedge_vertex_list		1263637						
ANR	1263707	Symbol	* l		1263637						
ANR	1263708	Symbol	pfs		1263637						
ANR	1263709	Symbol	l		1263637						
ANR	1263710	Symbol	c0		1263637						
ANR	1263711	Symbol	fill_wedge_from_list		1263637						
ANR	1263712	Symbol	c1		1263637						
ANR	1263713	Function	wedge_by_triangles	2178:0:79868:80874							
ANR	1263714	FunctionDef	"wedge_by_triangles (patch_fill_state_t * pfs , int ka , const gs_fixed_point pole [ 4 ] , const patch_color_t * c0 , const patch_color_t * c1)"		1263713	0					
ANR	1263715	CompoundStatement		2181:0:80019:80874	1263713	0					
ANR	1263716	Statement	gs_fixed_point	2182:4:80068:80081	1263713	0	True				
ANR	1263717	ExpressionStatement	q [ 2 ] [ 4 ]	2182:19:80083:80090	1263713	1	True				
ANR	1263718	ArrayIndexing	q [ 2 ] [ 4 ]		1263713	0					
ANR	1263719	ArrayIndexing	q [ 2 ]		1263713	0					
ANR	1263720	Identifier	q		1263713	0					
ANR	1263721	PrimaryExpression	2		1263713	1					
ANR	1263722	PrimaryExpression	4		1263713	1					
ANR	1263723	IdentifierDeclStatement	patch_color_t * c ;	2183:4:80096:80112	1263713	2	True				
ANR	1263724	IdentifierDecl	* c		1263713	0					
ANR	1263725	IdentifierDeclType	patch_color_t *		1263713	0					
ANR	1263726	Identifier	c		1263713	1					
ANR	1263727	IdentifierDeclStatement	shading_vertex_t p [ 3 ] ;	2184:4:80118:80139	1263713	3	True				
ANR	1263728	IdentifierDecl	p [ 3 ]		1263713	0					
ANR	1263729	IdentifierDeclType	shading_vertex_t [ 3 ]		1263713	0					
ANR	1263730	Identifier	p		1263713	1					
ANR	1263731	PrimaryExpression	3		1263713	2					
ANR	1263732	IdentifierDeclStatement	int code ;	2185:4:80145:80153	1263713	4	True				
ANR	1263733	IdentifierDecl	code		1263713	0					
ANR	1263734	IdentifierDeclType	int		1263713	0					
ANR	1263735	Identifier	code		1263713	1					
ANR	1263736	IdentifierDeclStatement	"byte * color_stack_ptr = reserve_colors_inline ( pfs , & c , 1 ) ;"	2186:4:80159:80216	1263713	5	True				
ANR	1263737	IdentifierDecl	"* color_stack_ptr = reserve_colors_inline ( pfs , & c , 1 )"		1263713	0					
ANR	1263738	IdentifierDeclType	byte *		1263713	0					
ANR	1263739	Identifier	color_stack_ptr		1263713	1					
ANR	1263740	AssignmentExpression	"* color_stack_ptr = reserve_colors_inline ( pfs , & c , 1 )"		1263713	2		=			
ANR	1263741	Identifier	color_stack_ptr		1263713	0					
ANR	1263742	CallExpression	"reserve_colors_inline ( pfs , & c , 1 )"		1263713	1					
ANR	1263743	Callee	reserve_colors_inline		1263713	0					
ANR	1263744	Identifier	reserve_colors_inline		1263713	0					
ANR	1263745	ArgumentList	pfs		1263713	1					
ANR	1263746	Argument	pfs		1263713	0					
ANR	1263747	Identifier	pfs		1263713	0					
ANR	1263748	Argument	& c		1263713	1					
ANR	1263749	UnaryOperationExpression	& c		1263713	0					
ANR	1263750	UnaryOperator	&		1263713	0					
ANR	1263751	Identifier	c		1263713	1					
ANR	1263752	Argument	1		1263713	2					
ANR	1263753	PrimaryExpression	1		1263713	0					
ANR	1263754	IfStatement	if ( color_stack_ptr == NULL )		1263713	6					
ANR	1263755	Condition	color_stack_ptr == NULL	2188:8:80227:80249	1263713	0	True				
ANR	1263756	EqualityExpression	color_stack_ptr == NULL		1263713	0		==			
ANR	1263757	Identifier	color_stack_ptr		1263713	0					
ANR	1263758	Identifier	NULL		1263713	1					
ANR	1263759	ExpressionStatement	return_error ( gs_error_unregistered )	2189:8:80260:80295	1263713	1	True				
ANR	1263760	CallExpression	return_error ( gs_error_unregistered )		1263713	0					
ANR	1263761	Callee	return_error		1263713	0					
ANR	1263762	Identifier	return_error		1263713	0					
ANR	1263763	ArgumentList	gs_error_unregistered		1263713	1					
ANR	1263764	Argument	gs_error_unregistered		1263713	0					
ANR	1263765	Identifier	gs_error_unregistered		1263713	0					
ANR	1263766	ExpressionStatement	p [ 2 ] . c = c	2190:4:80324:80334	1263713	7	True				
ANR	1263767	AssignmentExpression	p [ 2 ] . c = c		1263713	0		=			
ANR	1263768	MemberAccess	p [ 2 ] . c		1263713	0					
ANR	1263769	ArrayIndexing	p [ 2 ]		1263713	0					
ANR	1263770	Identifier	p		1263713	0					
ANR	1263771	PrimaryExpression	2		1263713	1					
ANR	1263772	Identifier	c		1263713	1					
ANR	1263773	Identifier	c		1263713	1					
ANR	1263774	ExpressionStatement	"split_curve ( pole , q [ 0 ] , q [ 1 ] )"	2191:4:80340:80369	1263713	8	True				
ANR	1263775	CallExpression	"split_curve ( pole , q [ 0 ] , q [ 1 ] )"		1263713	0					
ANR	1263776	Callee	split_curve		1263713	0					
ANR	1263777	Identifier	split_curve		1263713	0					
ANR	1263778	ArgumentList	pole		1263713	1					
ANR	1263779	Argument	pole		1263713	0					
ANR	1263780	Identifier	pole		1263713	0					
ANR	1263781	Argument	q [ 0 ]		1263713	1					
ANR	1263782	ArrayIndexing	q [ 0 ]		1263713	0					
ANR	1263783	Identifier	q		1263713	0					
ANR	1263784	PrimaryExpression	0		1263713	1					
ANR	1263785	Argument	q [ 1 ]		1263713	2					
ANR	1263786	ArrayIndexing	q [ 1 ]		1263713	0					
ANR	1263787	Identifier	q		1263713	0					
ANR	1263788	PrimaryExpression	1		1263713	1					
ANR	1263789	ExpressionStatement	p [ 0 ] . p = pole [ 0 ]	2192:4:80375:80391	1263713	9	True				
ANR	1263790	AssignmentExpression	p [ 0 ] . p = pole [ 0 ]		1263713	0		=			
ANR	1263791	MemberAccess	p [ 0 ] . p		1263713	0					
ANR	1263792	ArrayIndexing	p [ 0 ]		1263713	0					
ANR	1263793	Identifier	p		1263713	0					
ANR	1263794	PrimaryExpression	0		1263713	1					
ANR	1263795	Identifier	p		1263713	1					
ANR	1263796	ArrayIndexing	pole [ 0 ]		1263713	1					
ANR	1263797	Identifier	pole		1263713	0					
ANR	1263798	PrimaryExpression	0		1263713	1					
ANR	1263799	ExpressionStatement	p [ 0 ] . c = c0	2193:4:80397:80408	1263713	10	True				
ANR	1263800	AssignmentExpression	p [ 0 ] . c = c0		1263713	0		=			
ANR	1263801	MemberAccess	p [ 0 ] . c		1263713	0					
ANR	1263802	ArrayIndexing	p [ 0 ]		1263713	0					
ANR	1263803	Identifier	p		1263713	0					
ANR	1263804	PrimaryExpression	0		1263713	1					
ANR	1263805	Identifier	c		1263713	1					
ANR	1263806	Identifier	c0		1263713	1					
ANR	1263807	ExpressionStatement	p [ 1 ] . p = pole [ 3 ]	2194:4:80414:80430	1263713	11	True				
ANR	1263808	AssignmentExpression	p [ 1 ] . p = pole [ 3 ]		1263713	0		=			
ANR	1263809	MemberAccess	p [ 1 ] . p		1263713	0					
ANR	1263810	ArrayIndexing	p [ 1 ]		1263713	0					
ANR	1263811	Identifier	p		1263713	0					
ANR	1263812	PrimaryExpression	1		1263713	1					
ANR	1263813	Identifier	p		1263713	1					
ANR	1263814	ArrayIndexing	pole [ 3 ]		1263713	1					
ANR	1263815	Identifier	pole		1263713	0					
ANR	1263816	PrimaryExpression	3		1263713	1					
ANR	1263817	ExpressionStatement	p [ 1 ] . c = c1	2195:4:80436:80447	1263713	12	True				
ANR	1263818	AssignmentExpression	p [ 1 ] . c = c1		1263713	0		=			
ANR	1263819	MemberAccess	p [ 1 ] . c		1263713	0					
ANR	1263820	ArrayIndexing	p [ 1 ]		1263713	0					
ANR	1263821	Identifier	p		1263713	0					
ANR	1263822	PrimaryExpression	1		1263713	1					
ANR	1263823	Identifier	c		1263713	1					
ANR	1263824	Identifier	c1		1263713	1					
ANR	1263825	ExpressionStatement	p [ 2 ] . p = q [ 0 ] [ 3 ]	2196:4:80453:80469	1263713	13	True				
ANR	1263826	AssignmentExpression	p [ 2 ] . p = q [ 0 ] [ 3 ]		1263713	0		=			
ANR	1263827	MemberAccess	p [ 2 ] . p		1263713	0					
ANR	1263828	ArrayIndexing	p [ 2 ]		1263713	0					
ANR	1263829	Identifier	p		1263713	0					
ANR	1263830	PrimaryExpression	2		1263713	1					
ANR	1263831	Identifier	p		1263713	1					
ANR	1263832	ArrayIndexing	q [ 0 ] [ 3 ]		1263713	1					
ANR	1263833	ArrayIndexing	q [ 0 ]		1263713	0					
ANR	1263834	Identifier	q		1263713	0					
ANR	1263835	PrimaryExpression	0		1263713	1					
ANR	1263836	PrimaryExpression	3		1263713	1					
ANR	1263837	ExpressionStatement	"patch_interpolate_color ( c , c0 , c1 , pfs , 0.5 )"	2197:4:80475:80519	1263713	14	True				
ANR	1263838	CallExpression	"patch_interpolate_color ( c , c0 , c1 , pfs , 0.5 )"		1263713	0					
ANR	1263839	Callee	patch_interpolate_color		1263713	0					
ANR	1263840	Identifier	patch_interpolate_color		1263713	0					
ANR	1263841	ArgumentList	c		1263713	1					
ANR	1263842	Argument	c		1263713	0					
ANR	1263843	Identifier	c		1263713	0					
ANR	1263844	Argument	c0		1263713	1					
ANR	1263845	Identifier	c0		1263713	0					
ANR	1263846	Argument	c1		1263713	2					
ANR	1263847	Identifier	c1		1263713	0					
ANR	1263848	Argument	pfs		1263713	3					
ANR	1263849	Identifier	pfs		1263713	0					
ANR	1263850	Argument	0.5		1263713	4					
ANR	1263851	PrimaryExpression	0.5		1263713	0					
ANR	1263852	ExpressionStatement	"code = fill_triangle_wedge ( pfs , & p [ 0 ] , & p [ 1 ] , & p [ 2 ] )"	2198:4:80525:80577	1263713	15	True				
ANR	1263853	AssignmentExpression	"code = fill_triangle_wedge ( pfs , & p [ 0 ] , & p [ 1 ] , & p [ 2 ] )"		1263713	0		=			
ANR	1263854	Identifier	code		1263713	0					
ANR	1263855	CallExpression	"fill_triangle_wedge ( pfs , & p [ 0 ] , & p [ 1 ] , & p [ 2 ] )"		1263713	1					
ANR	1263856	Callee	fill_triangle_wedge		1263713	0					
ANR	1263857	Identifier	fill_triangle_wedge		1263713	0					
ANR	1263858	ArgumentList	pfs		1263713	1					
ANR	1263859	Argument	pfs		1263713	0					
ANR	1263860	Identifier	pfs		1263713	0					
ANR	1263861	Argument	& p [ 0 ]		1263713	1					
ANR	1263862	UnaryOperationExpression	& p [ 0 ]		1263713	0					
ANR	1263863	UnaryOperator	&		1263713	0					
ANR	1263864	ArrayIndexing	p [ 0 ]		1263713	1					
ANR	1263865	Identifier	p		1263713	0					
ANR	1263866	PrimaryExpression	0		1263713	1					
ANR	1263867	Argument	& p [ 1 ]		1263713	2					
ANR	1263868	UnaryOperationExpression	& p [ 1 ]		1263713	0					
ANR	1263869	UnaryOperator	&		1263713	0					
ANR	1263870	ArrayIndexing	p [ 1 ]		1263713	1					
ANR	1263871	Identifier	p		1263713	0					
ANR	1263872	PrimaryExpression	1		1263713	1					
ANR	1263873	Argument	& p [ 2 ]		1263713	3					
ANR	1263874	UnaryOperationExpression	& p [ 2 ]		1263713	0					
ANR	1263875	UnaryOperator	&		1263713	0					
ANR	1263876	ArrayIndexing	p [ 2 ]		1263713	1					
ANR	1263877	Identifier	p		1263713	0					
ANR	1263878	PrimaryExpression	2		1263713	1					
ANR	1263879	IfStatement	if ( code >= 0 )		1263713	16					
ANR	1263880	Condition	code >= 0	2199:8:80587:80595	1263713	0	True				
ANR	1263881	RelationalExpression	code >= 0		1263713	0		>=			
ANR	1263882	Identifier	code		1263713	0					
ANR	1263883	PrimaryExpression	0		1263713	1					
ANR	1263884	CompoundStatement		19:19:578:578	1263713	1					
ANR	1263885	IfStatement	if ( ka == 2 )		1263713	0					
ANR	1263886	Condition	ka == 2	2200:12:80612:80618	1263713	0	True				
ANR	1263887	EqualityExpression	ka == 2		1263713	0		==			
ANR	1263888	Identifier	ka		1263713	0					
ANR	1263889	PrimaryExpression	2		1263713	1					
ANR	1263890	GotoStatement	goto out ;	2201:12:80633:80641	1263713	1	True				
ANR	1263891	Identifier	out		1263713	0					
ANR	1263892	ExpressionStatement	"code = wedge_by_triangles ( pfs , ka / 2 , q [ 0 ] , c0 , p [ 2 ] . c )"	2202:8:80651:80707	1263713	1	True				
ANR	1263893	AssignmentExpression	"code = wedge_by_triangles ( pfs , ka / 2 , q [ 0 ] , c0 , p [ 2 ] . c )"		1263713	0		=			
ANR	1263894	Identifier	code		1263713	0					
ANR	1263895	CallExpression	"wedge_by_triangles ( pfs , ka / 2 , q [ 0 ] , c0 , p [ 2 ] . c )"		1263713	1					
ANR	1263896	Callee	wedge_by_triangles		1263713	0					
ANR	1263897	Identifier	wedge_by_triangles		1263713	0					
ANR	1263898	ArgumentList	pfs		1263713	1					
ANR	1263899	Argument	pfs		1263713	0					
ANR	1263900	Identifier	pfs		1263713	0					
ANR	1263901	Argument	ka / 2		1263713	1					
ANR	1263902	MultiplicativeExpression	ka / 2		1263713	0		/			
ANR	1263903	Identifier	ka		1263713	0					
ANR	1263904	PrimaryExpression	2		1263713	1					
ANR	1263905	Argument	q [ 0 ]		1263713	2					
ANR	1263906	ArrayIndexing	q [ 0 ]		1263713	0					
ANR	1263907	Identifier	q		1263713	0					
ANR	1263908	PrimaryExpression	0		1263713	1					
ANR	1263909	Argument	c0		1263713	3					
ANR	1263910	Identifier	c0		1263713	0					
ANR	1263911	Argument	p [ 2 ] . c		1263713	4					
ANR	1263912	MemberAccess	p [ 2 ] . c		1263713	0					
ANR	1263913	ArrayIndexing	p [ 2 ]		1263713	0					
ANR	1263914	Identifier	p		1263713	0					
ANR	1263915	PrimaryExpression	2		1263713	1					
ANR	1263916	Identifier	c		1263713	1					
ANR	1263917	IfStatement	if ( code >= 0 )		1263713	17					
ANR	1263918	Condition	code >= 0	2204:8:80723:80731	1263713	0	True				
ANR	1263919	RelationalExpression	code >= 0		1263713	0		>=			
ANR	1263920	Identifier	code		1263713	0					
ANR	1263921	PrimaryExpression	0		1263713	1					
ANR	1263922	ExpressionStatement	"code = wedge_by_triangles ( pfs , ka / 2 , q [ 1 ] , p [ 2 ] . c , c1 )"	2205:8:80742:80798	1263713	1	True				
ANR	1263923	AssignmentExpression	"code = wedge_by_triangles ( pfs , ka / 2 , q [ 1 ] , p [ 2 ] . c , c1 )"		1263713	0		=			
ANR	1263924	Identifier	code		1263713	0					
ANR	1263925	CallExpression	"wedge_by_triangles ( pfs , ka / 2 , q [ 1 ] , p [ 2 ] . c , c1 )"		1263713	1					
ANR	1263926	Callee	wedge_by_triangles		1263713	0					
ANR	1263927	Identifier	wedge_by_triangles		1263713	0					
ANR	1263928	ArgumentList	pfs		1263713	1					
ANR	1263929	Argument	pfs		1263713	0					
ANR	1263930	Identifier	pfs		1263713	0					
ANR	1263931	Argument	ka / 2		1263713	1					
ANR	1263932	MultiplicativeExpression	ka / 2		1263713	0		/			
ANR	1263933	Identifier	ka		1263713	0					
ANR	1263934	PrimaryExpression	2		1263713	1					
ANR	1263935	Argument	q [ 1 ]		1263713	2					
ANR	1263936	ArrayIndexing	q [ 1 ]		1263713	0					
ANR	1263937	Identifier	q		1263713	0					
ANR	1263938	PrimaryExpression	1		1263713	1					
ANR	1263939	Argument	p [ 2 ] . c		1263713	3					
ANR	1263940	MemberAccess	p [ 2 ] . c		1263713	0					
ANR	1263941	ArrayIndexing	p [ 2 ]		1263713	0					
ANR	1263942	Identifier	p		1263713	0					
ANR	1263943	PrimaryExpression	2		1263713	1					
ANR	1263944	Identifier	c		1263713	1					
ANR	1263945	Argument	c1		1263713	4					
ANR	1263946	Identifier	c1		1263713	0					
ANR	1263947	Label	out :	2206:0:80800:80803	1263713	18	True				
ANR	1263948	Identifier	out		1263713	0					
ANR	1263949	ExpressionStatement	"release_colors_inline ( pfs , color_stack_ptr , 1 )"	2207:4:80809:80855	1263713	19	True				
ANR	1263950	CallExpression	"release_colors_inline ( pfs , color_stack_ptr , 1 )"		1263713	0					
ANR	1263951	Callee	release_colors_inline		1263713	0					
ANR	1263952	Identifier	release_colors_inline		1263713	0					
ANR	1263953	ArgumentList	pfs		1263713	1					
ANR	1263954	Argument	pfs		1263713	0					
ANR	1263955	Identifier	pfs		1263713	0					
ANR	1263956	Argument	color_stack_ptr		1263713	1					
ANR	1263957	Identifier	color_stack_ptr		1263713	0					
ANR	1263958	Argument	1		1263713	2					
ANR	1263959	PrimaryExpression	1		1263713	0					
ANR	1263960	ReturnStatement	return code ;	2208:4:80861:80872	1263713	20	True				
ANR	1263961	Identifier	code		1263713	0					
ANR	1263962	ReturnType	static int		1263713	1					
ANR	1263963	Identifier	wedge_by_triangles		1263713	2					
ANR	1263964	ParameterList	"patch_fill_state_t * pfs , int ka , const gs_fixed_point pole [ 4 ] , const patch_color_t * c0 , const patch_color_t * c1"		1263713	3					
ANR	1263965	Parameter	patch_fill_state_t * pfs	2179:19:79898:79920	1263713	0	True				
ANR	1263966	ParameterType	patch_fill_state_t *		1263713	0					
ANR	1263967	Identifier	pfs		1263713	1					
ANR	1263968	Parameter	int ka	2179:44:79923:79928	1263713	1	True				
ANR	1263969	ParameterType	int		1263713	0					
ANR	1263970	Identifier	ka		1263713	1					
ANR	1263971	Parameter	const gs_fixed_point pole [ 4 ]	2180:8:79939:79966	1263713	2	True				
ANR	1263972	ParameterType	const gs_fixed_point [ 4 ]		1263713	0					
ANR	1263973	Identifier	pole		1263713	1					
ANR	1263974	Parameter	const patch_color_t * c0	2180:38:79969:79991	1263713	3	True				
ANR	1263975	ParameterType	const patch_color_t *		1263713	0					
ANR	1263976	Identifier	c0		1263713	1					
ANR	1263977	Parameter	const patch_color_t * c1	2180:63:79994:80016	1263713	4	True				
ANR	1263978	ParameterType	const patch_color_t *		1263713	0					
ANR	1263979	Identifier	c1		1263713	1					
ANR	1263980	CFGEntryNode	ENTRY		1263713		True				
ANR	1263981	CFGExitNode	EXIT		1263713		True				
ANR	1263982	Symbol	fill_triangle_wedge		1263713						
ANR	1263983	Symbol	gs_error_unregistered		1263713						
ANR	1263984	Symbol	code		1263713						
ANR	1263985	Symbol	p [ 1 ] . c		1263713						
ANR	1263986	Symbol	pole		1263713						
ANR	1263987	Symbol	* pole		1263713						
ANR	1263988	Symbol	ka		1263713						
ANR	1263989	Symbol	reserve_colors_inline		1263713						
ANR	1263990	Symbol	p [ 1 ] . p		1263713						
ANR	1263991	Symbol	* * q		1263713						
ANR	1263992	Symbol	p [ 0 ] . c		1263713						
ANR	1263993	Symbol	c		1263713						
ANR	1263994	Symbol	NULL		1263713						
ANR	1263995	Symbol	wedge_by_triangles		1263713						
ANR	1263996	Symbol	& c		1263713						
ANR	1263997	Symbol	c0		1263713						
ANR	1263998	Symbol	p [ 2 ] . p		1263713						
ANR	1263999	Symbol	c1		1263713						
ANR	1264000	Symbol	p		1263713						
ANR	1264001	Symbol	q		1263713						
ANR	1264002	Symbol	color_stack_ptr		1263713						
ANR	1264003	Symbol	* p		1263713						
ANR	1264004	Symbol	* q		1263713						
ANR	1264005	Symbol	pfs		1263713						
ANR	1264006	Symbol	p [ 2 ] . c		1263713						
ANR	1264007	Symbol	p [ 0 ] . p		1263713						
ANR	1264008	Function	mesh_padding	2211:0:80877:82600							
ANR	1264009	FunctionDef	"mesh_padding (patch_fill_state_t * pfs , const gs_fixed_point * p0 , const gs_fixed_point * p1 , const patch_color_t * c0 , const patch_color_t * c1)"		1264008	0					
ANR	1264010	CompoundStatement		2214:0:81033:82600	1264008	0					
ANR	1264011	IdentifierDeclStatement	"gs_fixed_point q0 , q1 ;"	2215:4:81039:81060	1264008	0	True				
ANR	1264012	IdentifierDecl	q0		1264008	0					
ANR	1264013	IdentifierDeclType	gs_fixed_point		1264008	0					
ANR	1264014	Identifier	q0		1264008	1					
ANR	1264015	IdentifierDecl	q1		1264008	1					
ANR	1264016	IdentifierDeclType	gs_fixed_point		1264008	0					
ANR	1264017	Identifier	q1		1264008	1					
ANR	1264018	IdentifierDeclStatement	"const patch_color_t * cc0 , * cc1 ;"	2216:4:81066:81096	1264008	1	True				
ANR	1264019	IdentifierDecl	* cc0		1264008	0					
ANR	1264020	IdentifierDeclType	const patch_color_t *		1264008	0					
ANR	1264021	Identifier	cc0		1264008	1					
ANR	1264022	IdentifierDecl	* cc1		1264008	1					
ANR	1264023	IdentifierDeclType	const patch_color_t *		1264008	0					
ANR	1264024	Identifier	cc1		1264008	1					
ANR	1264025	IdentifierDeclStatement	fixed dx = p1 -> x - p0 -> x ;	2217:4:81102:81126	1264008	2	True				
ANR	1264026	IdentifierDecl	dx = p1 -> x - p0 -> x		1264008	0					
ANR	1264027	IdentifierDeclType	fixed		1264008	0					
ANR	1264028	Identifier	dx		1264008	1					
ANR	1264029	AssignmentExpression	dx = p1 -> x - p0 -> x		1264008	2		=			
ANR	1264030	Identifier	dx		1264008	0					
ANR	1264031	AdditiveExpression	p1 -> x - p0 -> x		1264008	1		-			
ANR	1264032	PtrMemberAccess	p1 -> x		1264008	0					
ANR	1264033	Identifier	p1		1264008	0					
ANR	1264034	Identifier	x		1264008	1					
ANR	1264035	PtrMemberAccess	p0 -> x		1264008	1					
ANR	1264036	Identifier	p0		1264008	0					
ANR	1264037	Identifier	x		1264008	1					
ANR	1264038	IdentifierDeclStatement	fixed dy = p1 -> y - p0 -> y ;	2218:4:81132:81156	1264008	3	True				
ANR	1264039	IdentifierDecl	dy = p1 -> y - p0 -> y		1264008	0					
ANR	1264040	IdentifierDeclType	fixed		1264008	0					
ANR	1264041	Identifier	dy		1264008	1					
ANR	1264042	AssignmentExpression	dy = p1 -> y - p0 -> y		1264008	2		=			
ANR	1264043	Identifier	dy		1264008	0					
ANR	1264044	AdditiveExpression	p1 -> y - p0 -> y		1264008	1		-			
ANR	1264045	PtrMemberAccess	p1 -> y		1264008	0					
ANR	1264046	Identifier	p1		1264008	0					
ANR	1264047	Identifier	y		1264008	1					
ANR	1264048	PtrMemberAccess	p0 -> y		1264008	1					
ANR	1264049	Identifier	p0		1264008	0					
ANR	1264050	Identifier	y		1264008	1					
ANR	1264051	IdentifierDeclStatement	bool swap_axes = ( any_abs ( dx ) > any_abs ( dy ) ) ;	2219:4:81162:81206	1264008	4	True				
ANR	1264052	IdentifierDecl	swap_axes = ( any_abs ( dx ) > any_abs ( dy ) )		1264008	0					
ANR	1264053	IdentifierDeclType	bool		1264008	0					
ANR	1264054	Identifier	swap_axes		1264008	1					
ANR	1264055	AssignmentExpression	swap_axes = ( any_abs ( dx ) > any_abs ( dy ) )		1264008	2		=			
ANR	1264056	Identifier	swap_axes		1264008	0					
ANR	1264057	RelationalExpression	any_abs ( dx ) > any_abs ( dy )		1264008	1		>			
ANR	1264058	CallExpression	any_abs ( dx )		1264008	0					
ANR	1264059	Callee	any_abs		1264008	0					
ANR	1264060	Identifier	any_abs		1264008	0					
ANR	1264061	ArgumentList	dx		1264008	1					
ANR	1264062	Argument	dx		1264008	0					
ANR	1264063	Identifier	dx		1264008	0					
ANR	1264064	CallExpression	any_abs ( dy )		1264008	1					
ANR	1264065	Callee	any_abs		1264008	0					
ANR	1264066	Identifier	any_abs		1264008	0					
ANR	1264067	ArgumentList	dy		1264008	1					
ANR	1264068	Argument	dy		1264008	0					
ANR	1264069	Identifier	dy		1264008	0					
ANR	1264070	IdentifierDeclStatement	"gs_fixed_edge le , re ;"	2220:4:81212:81232	1264008	5	True				
ANR	1264071	IdentifierDecl	le		1264008	0					
ANR	1264072	IdentifierDeclType	gs_fixed_edge		1264008	0					
ANR	1264073	Identifier	le		1264008	1					
ANR	1264074	IdentifierDecl	re		1264008	1					
ANR	1264075	IdentifierDeclType	gs_fixed_edge		1264008	0					
ANR	1264076	Identifier	re		1264008	1					
ANR	1264077	IdentifierDeclStatement	const fixed adjust = INTERPATCH_PADDING ;	2221:4:81238:81277	1264008	6	True				
ANR	1264078	IdentifierDecl	adjust = INTERPATCH_PADDING		1264008	0					
ANR	1264079	IdentifierDeclType	const fixed		1264008	0					
ANR	1264080	Identifier	adjust		1264008	1					
ANR	1264081	AssignmentExpression	adjust = INTERPATCH_PADDING		1264008	2		=			
ANR	1264082	Identifier	INTERPATCH_PADDING		1264008	0					
ANR	1264083	Identifier	INTERPATCH_PADDING		1264008	1					
ANR	1264084	IfStatement	if ( swap_axes )		1264008	7					
ANR	1264085	Condition	swap_axes	2223:8:81288:81296	1264008	0	True				
ANR	1264086	Identifier	swap_axes		1264008	0					
ANR	1264087	CompoundStatement		10:19:265:265	1264008	1					
ANR	1264088	IfStatement	if ( p0 -> x < p1 -> x )		1264008	0					
ANR	1264089	Condition	p0 -> x < p1 -> x	2224:12:81313:81325	1264008	0	True				
ANR	1264090	RelationalExpression	p0 -> x < p1 -> x		1264008	0		<			
ANR	1264091	PtrMemberAccess	p0 -> x		1264008	0					
ANR	1264092	Identifier	p0		1264008	0					
ANR	1264093	Identifier	x		1264008	1					
ANR	1264094	PtrMemberAccess	p1 -> x		1264008	1					
ANR	1264095	Identifier	p1		1264008	0					
ANR	1264096	Identifier	x		1264008	1					
ANR	1264097	CompoundStatement		11:27:294:294	1264008	1					
ANR	1264098	ExpressionStatement	q0 . x = p0 -> y	2225:12:81342:81354	1264008	0	True				
ANR	1264099	AssignmentExpression	q0 . x = p0 -> y		1264008	0		=			
ANR	1264100	MemberAccess	q0 . x		1264008	0					
ANR	1264101	Identifier	q0		1264008	0					
ANR	1264102	Identifier	x		1264008	1					
ANR	1264103	PtrMemberAccess	p0 -> y		1264008	1					
ANR	1264104	Identifier	p0		1264008	0					
ANR	1264105	Identifier	y		1264008	1					
ANR	1264106	ExpressionStatement	q0 . y = p0 -> x	2226:12:81368:81380	1264008	1	True				
ANR	1264107	AssignmentExpression	q0 . y = p0 -> x		1264008	0		=			
ANR	1264108	MemberAccess	q0 . y		1264008	0					
ANR	1264109	Identifier	q0		1264008	0					
ANR	1264110	Identifier	y		1264008	1					
ANR	1264111	PtrMemberAccess	p0 -> x		1264008	1					
ANR	1264112	Identifier	p0		1264008	0					
ANR	1264113	Identifier	x		1264008	1					
ANR	1264114	ExpressionStatement	q1 . x = p1 -> y	2227:12:81394:81406	1264008	2	True				
ANR	1264115	AssignmentExpression	q1 . x = p1 -> y		1264008	0		=			
ANR	1264116	MemberAccess	q1 . x		1264008	0					
ANR	1264117	Identifier	q1		1264008	0					
ANR	1264118	Identifier	x		1264008	1					
ANR	1264119	PtrMemberAccess	p1 -> y		1264008	1					
ANR	1264120	Identifier	p1		1264008	0					
ANR	1264121	Identifier	y		1264008	1					
ANR	1264122	ExpressionStatement	q1 . y = p1 -> x	2228:12:81420:81432	1264008	3	True				
ANR	1264123	AssignmentExpression	q1 . y = p1 -> x		1264008	0		=			
ANR	1264124	MemberAccess	q1 . y		1264008	0					
ANR	1264125	Identifier	q1		1264008	0					
ANR	1264126	Identifier	y		1264008	1					
ANR	1264127	PtrMemberAccess	p1 -> x		1264008	1					
ANR	1264128	Identifier	p1		1264008	0					
ANR	1264129	Identifier	x		1264008	1					
ANR	1264130	ExpressionStatement	cc0 = c0	2229:12:81446:81454	1264008	4	True				
ANR	1264131	AssignmentExpression	cc0 = c0		1264008	0		=			
ANR	1264132	Identifier	cc0		1264008	0					
ANR	1264133	Identifier	c0		1264008	1					
ANR	1264134	ExpressionStatement	cc1 = c1	2230:12:81468:81476	1264008	5	True				
ANR	1264135	AssignmentExpression	cc1 = c1		1264008	0		=			
ANR	1264136	Identifier	cc1		1264008	0					
ANR	1264137	Identifier	c1		1264008	1					
ANR	1264138	ElseStatement	else		1264008	0					
ANR	1264139	CompoundStatement		18:15:459:459	1264008	0					
ANR	1264140	ExpressionStatement	q0 . x = p1 -> y	2232:12:81507:81519	1264008	0	True				
ANR	1264141	AssignmentExpression	q0 . x = p1 -> y		1264008	0		=			
ANR	1264142	MemberAccess	q0 . x		1264008	0					
ANR	1264143	Identifier	q0		1264008	0					
ANR	1264144	Identifier	x		1264008	1					
ANR	1264145	PtrMemberAccess	p1 -> y		1264008	1					
ANR	1264146	Identifier	p1		1264008	0					
ANR	1264147	Identifier	y		1264008	1					
ANR	1264148	ExpressionStatement	q0 . y = p1 -> x	2233:12:81533:81545	1264008	1	True				
ANR	1264149	AssignmentExpression	q0 . y = p1 -> x		1264008	0		=			
ANR	1264150	MemberAccess	q0 . y		1264008	0					
ANR	1264151	Identifier	q0		1264008	0					
ANR	1264152	Identifier	y		1264008	1					
ANR	1264153	PtrMemberAccess	p1 -> x		1264008	1					
ANR	1264154	Identifier	p1		1264008	0					
ANR	1264155	Identifier	x		1264008	1					
ANR	1264156	ExpressionStatement	q1 . x = p0 -> y	2234:12:81559:81571	1264008	2	True				
ANR	1264157	AssignmentExpression	q1 . x = p0 -> y		1264008	0		=			
ANR	1264158	MemberAccess	q1 . x		1264008	0					
ANR	1264159	Identifier	q1		1264008	0					
ANR	1264160	Identifier	x		1264008	1					
ANR	1264161	PtrMemberAccess	p0 -> y		1264008	1					
ANR	1264162	Identifier	p0		1264008	0					
ANR	1264163	Identifier	y		1264008	1					
ANR	1264164	ExpressionStatement	q1 . y = p0 -> x	2235:12:81585:81597	1264008	3	True				
ANR	1264165	AssignmentExpression	q1 . y = p0 -> x		1264008	0		=			
ANR	1264166	MemberAccess	q1 . y		1264008	0					
ANR	1264167	Identifier	q1		1264008	0					
ANR	1264168	Identifier	y		1264008	1					
ANR	1264169	PtrMemberAccess	p0 -> x		1264008	1					
ANR	1264170	Identifier	p0		1264008	0					
ANR	1264171	Identifier	x		1264008	1					
ANR	1264172	ExpressionStatement	cc0 = c1	2236:12:81611:81619	1264008	4	True				
ANR	1264173	AssignmentExpression	cc0 = c1		1264008	0		=			
ANR	1264174	Identifier	cc0		1264008	0					
ANR	1264175	Identifier	c1		1264008	1					
ANR	1264176	ExpressionStatement	cc1 = c0	2237:12:81633:81641	1264008	5	True				
ANR	1264177	AssignmentExpression	cc1 = c0		1264008	0		=			
ANR	1264178	Identifier	cc1		1264008	0					
ANR	1264179	Identifier	c0		1264008	1					
ANR	1264180	ElseStatement	else		1264008	0					
ANR	1264181	IfStatement	if ( p0 -> y < p1 -> y )		1264008	0					
ANR	1264182	Condition	p0 -> y < p1 -> y	2239:15:81668:81680	1264008	0	True				
ANR	1264183	RelationalExpression	p0 -> y < p1 -> y		1264008	0		<			
ANR	1264184	PtrMemberAccess	p0 -> y		1264008	0					
ANR	1264185	Identifier	p0		1264008	0					
ANR	1264186	Identifier	y		1264008	1					
ANR	1264187	PtrMemberAccess	p1 -> y		1264008	1					
ANR	1264188	Identifier	p1		1264008	0					
ANR	1264189	Identifier	y		1264008	1					
ANR	1264190	CompoundStatement		26:30:649:649	1264008	1					
ANR	1264191	ExpressionStatement	q0 = * p0	2240:8:81693:81701	1264008	0	True				
ANR	1264192	AssignmentExpression	q0 = * p0		1264008	0		=			
ANR	1264193	Identifier	q0		1264008	0					
ANR	1264194	UnaryOperationExpression	* p0		1264008	1					
ANR	1264195	UnaryOperator	*		1264008	0					
ANR	1264196	Identifier	p0		1264008	1					
ANR	1264197	ExpressionStatement	q1 = * p1	2241:8:81711:81719	1264008	1	True				
ANR	1264198	AssignmentExpression	q1 = * p1		1264008	0		=			
ANR	1264199	Identifier	q1		1264008	0					
ANR	1264200	UnaryOperationExpression	* p1		1264008	1					
ANR	1264201	UnaryOperator	*		1264008	0					
ANR	1264202	Identifier	p1		1264008	1					
ANR	1264203	ExpressionStatement	cc0 = c0	2242:8:81729:81737	1264008	2	True				
ANR	1264204	AssignmentExpression	cc0 = c0		1264008	0		=			
ANR	1264205	Identifier	cc0		1264008	0					
ANR	1264206	Identifier	c0		1264008	1					
ANR	1264207	ExpressionStatement	cc1 = c1	2243:8:81747:81755	1264008	3	True				
ANR	1264208	AssignmentExpression	cc1 = c1		1264008	0		=			
ANR	1264209	Identifier	cc1		1264008	0					
ANR	1264210	Identifier	c1		1264008	1					
ANR	1264211	ElseStatement	else		1264008	0					
ANR	1264212	CompoundStatement		31:11:734:734	1264008	0					
ANR	1264213	ExpressionStatement	q0 = * p1	2245:8:81778:81786	1264008	0	True				
ANR	1264214	AssignmentExpression	q0 = * p1		1264008	0		=			
ANR	1264215	Identifier	q0		1264008	0					
ANR	1264216	UnaryOperationExpression	* p1		1264008	1					
ANR	1264217	UnaryOperator	*		1264008	0					
ANR	1264218	Identifier	p1		1264008	1					
ANR	1264219	ExpressionStatement	q1 = * p0	2246:8:81796:81804	1264008	1	True				
ANR	1264220	AssignmentExpression	q1 = * p0		1264008	0		=			
ANR	1264221	Identifier	q1		1264008	0					
ANR	1264222	UnaryOperationExpression	* p0		1264008	1					
ANR	1264223	UnaryOperator	*		1264008	0					
ANR	1264224	Identifier	p0		1264008	1					
ANR	1264225	ExpressionStatement	cc0 = c1	2247:8:81814:81822	1264008	2	True				
ANR	1264226	AssignmentExpression	cc0 = c1		1264008	0		=			
ANR	1264227	Identifier	cc0		1264008	0					
ANR	1264228	Identifier	c1		1264008	1					
ANR	1264229	ExpressionStatement	cc1 = c0	2248:8:81832:81840	1264008	3	True				
ANR	1264230	AssignmentExpression	cc1 = c0		1264008	0		=			
ANR	1264231	Identifier	cc1		1264008	0					
ANR	1264232	Identifier	c0		1264008	1					
ANR	1264233	ExpressionStatement	le . start . x = q0 . x - adjust	2250:4:81852:81878	1264008	8	True				
ANR	1264234	AssignmentExpression	le . start . x = q0 . x - adjust		1264008	0		=			
ANR	1264235	MemberAccess	le . start . x		1264008	0					
ANR	1264236	MemberAccess	le . start		1264008	0					
ANR	1264237	Identifier	le		1264008	0					
ANR	1264238	Identifier	start		1264008	1					
ANR	1264239	Identifier	x		1264008	1					
ANR	1264240	AdditiveExpression	q0 . x - adjust		1264008	1		-			
ANR	1264241	MemberAccess	q0 . x		1264008	0					
ANR	1264242	Identifier	q0		1264008	0					
ANR	1264243	Identifier	x		1264008	1					
ANR	1264244	Identifier	adjust		1264008	1					
ANR	1264245	ExpressionStatement	re . start . x = q0 . x + adjust	2251:4:81884:81910	1264008	9	True				
ANR	1264246	AssignmentExpression	re . start . x = q0 . x + adjust		1264008	0		=			
ANR	1264247	MemberAccess	re . start . x		1264008	0					
ANR	1264248	MemberAccess	re . start		1264008	0					
ANR	1264249	Identifier	re		1264008	0					
ANR	1264250	Identifier	start		1264008	1					
ANR	1264251	Identifier	x		1264008	1					
ANR	1264252	AdditiveExpression	q0 . x + adjust		1264008	1		+			
ANR	1264253	MemberAccess	q0 . x		1264008	0					
ANR	1264254	Identifier	q0		1264008	0					
ANR	1264255	Identifier	x		1264008	1					
ANR	1264256	Identifier	adjust		1264008	1					
ANR	1264257	ExpressionStatement	le . start . y = re . start . y = q0 . y - adjust	2252:4:81916:81955	1264008	10	True				
ANR	1264258	AssignmentExpression	le . start . y = re . start . y = q0 . y - adjust		1264008	0		=			
ANR	1264259	MemberAccess	le . start . y		1264008	0					
ANR	1264260	MemberAccess	le . start		1264008	0					
ANR	1264261	Identifier	le		1264008	0					
ANR	1264262	Identifier	start		1264008	1					
ANR	1264263	Identifier	y		1264008	1					
ANR	1264264	AssignmentExpression	re . start . y = q0 . y - adjust		1264008	1		=			
ANR	1264265	MemberAccess	re . start . y		1264008	0					
ANR	1264266	MemberAccess	re . start		1264008	0					
ANR	1264267	Identifier	re		1264008	0					
ANR	1264268	Identifier	start		1264008	1					
ANR	1264269	Identifier	y		1264008	1					
ANR	1264270	AdditiveExpression	q0 . y - adjust		1264008	1		-			
ANR	1264271	MemberAccess	q0 . y		1264008	0					
ANR	1264272	Identifier	q0		1264008	0					
ANR	1264273	Identifier	y		1264008	1					
ANR	1264274	Identifier	adjust		1264008	1					
ANR	1264275	ExpressionStatement	le . end . x = q1 . x - adjust	2253:4:81961:81985	1264008	11	True				
ANR	1264276	AssignmentExpression	le . end . x = q1 . x - adjust		1264008	0		=			
ANR	1264277	MemberAccess	le . end . x		1264008	0					
ANR	1264278	MemberAccess	le . end		1264008	0					
ANR	1264279	Identifier	le		1264008	0					
ANR	1264280	Identifier	end		1264008	1					
ANR	1264281	Identifier	x		1264008	1					
ANR	1264282	AdditiveExpression	q1 . x - adjust		1264008	1		-			
ANR	1264283	MemberAccess	q1 . x		1264008	0					
ANR	1264284	Identifier	q1		1264008	0					
ANR	1264285	Identifier	x		1264008	1					
ANR	1264286	Identifier	adjust		1264008	1					
ANR	1264287	ExpressionStatement	re . end . x = q1 . x + adjust	2254:4:81991:82015	1264008	12	True				
ANR	1264288	AssignmentExpression	re . end . x = q1 . x + adjust		1264008	0		=			
ANR	1264289	MemberAccess	re . end . x		1264008	0					
ANR	1264290	MemberAccess	re . end		1264008	0					
ANR	1264291	Identifier	re		1264008	0					
ANR	1264292	Identifier	end		1264008	1					
ANR	1264293	Identifier	x		1264008	1					
ANR	1264294	AdditiveExpression	q1 . x + adjust		1264008	1		+			
ANR	1264295	MemberAccess	q1 . x		1264008	0					
ANR	1264296	Identifier	q1		1264008	0					
ANR	1264297	Identifier	x		1264008	1					
ANR	1264298	Identifier	adjust		1264008	1					
ANR	1264299	ExpressionStatement	le . end . y = re . end . y = q1 . y + adjust	2255:4:82021:82056	1264008	13	True				
ANR	1264300	AssignmentExpression	le . end . y = re . end . y = q1 . y + adjust		1264008	0		=			
ANR	1264301	MemberAccess	le . end . y		1264008	0					
ANR	1264302	MemberAccess	le . end		1264008	0					
ANR	1264303	Identifier	le		1264008	0					
ANR	1264304	Identifier	end		1264008	1					
ANR	1264305	Identifier	y		1264008	1					
ANR	1264306	AssignmentExpression	re . end . y = q1 . y + adjust		1264008	1		=			
ANR	1264307	MemberAccess	re . end . y		1264008	0					
ANR	1264308	MemberAccess	re . end		1264008	0					
ANR	1264309	Identifier	re		1264008	0					
ANR	1264310	Identifier	end		1264008	1					
ANR	1264311	Identifier	y		1264008	1					
ANR	1264312	AdditiveExpression	q1 . y + adjust		1264008	1		+			
ANR	1264313	MemberAccess	q1 . y		1264008	0					
ANR	1264314	Identifier	q1		1264008	0					
ANR	1264315	Identifier	y		1264008	1					
ANR	1264316	Identifier	adjust		1264008	1					
ANR	1264317	ExpressionStatement	"adjust_swapped_boundary ( & re . start . x , swap_axes )"	2256:4:82062:82109	1264008	14	True				
ANR	1264318	CallExpression	"adjust_swapped_boundary ( & re . start . x , swap_axes )"		1264008	0					
ANR	1264319	Callee	adjust_swapped_boundary		1264008	0					
ANR	1264320	Identifier	adjust_swapped_boundary		1264008	0					
ANR	1264321	ArgumentList	& re . start . x		1264008	1					
ANR	1264322	Argument	& re . start . x		1264008	0					
ANR	1264323	UnaryOperationExpression	& re . start . x		1264008	0					
ANR	1264324	UnaryOperator	&		1264008	0					
ANR	1264325	MemberAccess	re . start . x		1264008	1					
ANR	1264326	MemberAccess	re . start		1264008	0					
ANR	1264327	Identifier	re		1264008	0					
ANR	1264328	Identifier	start		1264008	1					
ANR	1264329	Identifier	x		1264008	1					
ANR	1264330	Argument	swap_axes		1264008	1					
ANR	1264331	Identifier	swap_axes		1264008	0					
ANR	1264332	ExpressionStatement	"adjust_swapped_boundary ( & re . end . x , swap_axes )"	2257:4:82115:82160	1264008	15	True				
ANR	1264333	CallExpression	"adjust_swapped_boundary ( & re . end . x , swap_axes )"		1264008	0					
ANR	1264334	Callee	adjust_swapped_boundary		1264008	0					
ANR	1264335	Identifier	adjust_swapped_boundary		1264008	0					
ANR	1264336	ArgumentList	& re . end . x		1264008	1					
ANR	1264337	Argument	& re . end . x		1264008	0					
ANR	1264338	UnaryOperationExpression	& re . end . x		1264008	0					
ANR	1264339	UnaryOperator	&		1264008	0					
ANR	1264340	MemberAccess	re . end . x		1264008	1					
ANR	1264341	MemberAccess	re . end		1264008	0					
ANR	1264342	Identifier	re		1264008	0					
ANR	1264343	Identifier	end		1264008	1					
ANR	1264344	Identifier	x		1264008	1					
ANR	1264345	Argument	swap_axes		1264008	1					
ANR	1264346	Identifier	swap_axes		1264008	0					
ANR	1264347	ReturnStatement	"return decompose_linear_color ( pfs , & le , & re , le . start . y , le . end . y , swap_axes , cc0 , cc1 ) ;"	2258:4:82166:82253	1264008	16	True				
ANR	1264348	CallExpression	"decompose_linear_color ( pfs , & le , & re , le . start . y , le . end . y , swap_axes , cc0 , cc1 )"		1264008	0					
ANR	1264349	Callee	decompose_linear_color		1264008	0					
ANR	1264350	Identifier	decompose_linear_color		1264008	0					
ANR	1264351	ArgumentList	pfs		1264008	1					
ANR	1264352	Argument	pfs		1264008	0					
ANR	1264353	Identifier	pfs		1264008	0					
ANR	1264354	Argument	& le		1264008	1					
ANR	1264355	UnaryOperationExpression	& le		1264008	0					
ANR	1264356	UnaryOperator	&		1264008	0					
ANR	1264357	Identifier	le		1264008	1					
ANR	1264358	Argument	& re		1264008	2					
ANR	1264359	UnaryOperationExpression	& re		1264008	0					
ANR	1264360	UnaryOperator	&		1264008	0					
ANR	1264361	Identifier	re		1264008	1					
ANR	1264362	Argument	le . start . y		1264008	3					
ANR	1264363	MemberAccess	le . start . y		1264008	0					
ANR	1264364	MemberAccess	le . start		1264008	0					
ANR	1264365	Identifier	le		1264008	0					
ANR	1264366	Identifier	start		1264008	1					
ANR	1264367	Identifier	y		1264008	1					
ANR	1264368	Argument	le . end . y		1264008	4					
ANR	1264369	MemberAccess	le . end . y		1264008	0					
ANR	1264370	MemberAccess	le . end		1264008	0					
ANR	1264371	Identifier	le		1264008	0					
ANR	1264372	Identifier	end		1264008	1					
ANR	1264373	Identifier	y		1264008	1					
ANR	1264374	Argument	swap_axes		1264008	5					
ANR	1264375	Identifier	swap_axes		1264008	0					
ANR	1264376	Argument	cc0		1264008	6					
ANR	1264377	Identifier	cc0		1264008	0					
ANR	1264378	Argument	cc1		1264008	7					
ANR	1264379	Identifier	cc1		1264008	0					
ANR	1264380	ReturnType	int		1264008	1					
ANR	1264381	Identifier	mesh_padding		1264008	2					
ANR	1264382	ParameterList	"patch_fill_state_t * pfs , const gs_fixed_point * p0 , const gs_fixed_point * p1 , const patch_color_t * c0 , const patch_color_t * c1"		1264008	3					
ANR	1264383	Parameter	patch_fill_state_t * pfs	2212:13:80894:80916	1264008	0	True				
ANR	1264384	ParameterType	patch_fill_state_t *		1264008	0					
ANR	1264385	Identifier	pfs		1264008	1					
ANR	1264386	Parameter	const gs_fixed_point * p0	2212:38:80919:80942	1264008	1	True				
ANR	1264387	ParameterType	const gs_fixed_point *		1264008	0					
ANR	1264388	Identifier	p0		1264008	1					
ANR	1264389	Parameter	const gs_fixed_point * p1	2212:64:80945:80968	1264008	2	True				
ANR	1264390	ParameterType	const gs_fixed_point *		1264008	0					
ANR	1264391	Identifier	p1		1264008	1					
ANR	1264392	Parameter	const patch_color_t * c0	2213:12:80983:81005	1264008	3	True				
ANR	1264393	ParameterType	const patch_color_t *		1264008	0					
ANR	1264394	Identifier	c0		1264008	1					
ANR	1264395	Parameter	const patch_color_t * c1	2213:37:81008:81030	1264008	4	True				
ANR	1264396	ParameterType	const patch_color_t *		1264008	0					
ANR	1264397	Identifier	c1		1264008	1					
ANR	1264398	CFGEntryNode	ENTRY		1264008		True				
ANR	1264399	CFGExitNode	EXIT		1264008		True				
ANR	1264400	Symbol	p0		1264008						
ANR	1264401	Symbol	p1		1264008						
ANR	1264402	Symbol	q0 . y		1264008						
ANR	1264403	Symbol	& re . end . x		1264008						
ANR	1264404	Symbol	q0 . x		1264008						
ANR	1264405	Symbol	re . start . x		1264008						
ANR	1264406	Symbol	decompose_linear_color		1264008						
ANR	1264407	Symbol	le . end		1264008						
ANR	1264408	Symbol	re . start . y		1264008						
ANR	1264409	Symbol	le . start . y		1264008						
ANR	1264410	Symbol	le . end . x		1264008						
ANR	1264411	Symbol	le . end . y		1264008						
ANR	1264412	Symbol	cc1		1264008						
ANR	1264413	Symbol	p0 -> y		1264008						
ANR	1264414	Symbol	cc0		1264008						
ANR	1264415	Symbol	q1 . y		1264008						
ANR	1264416	Symbol	p0 -> x		1264008						
ANR	1264417	Symbol	q1 . x		1264008						
ANR	1264418	Symbol	dx		1264008						
ANR	1264419	Symbol	dy		1264008						
ANR	1264420	Symbol	le . start . x		1264008						
ANR	1264421	Symbol	any_abs		1264008						
ANR	1264422	Symbol	re . start		1264008						
ANR	1264423	Symbol	q0		1264008						
ANR	1264424	Symbol	INTERPATCH_PADDING		1264008						
ANR	1264425	Symbol	q1		1264008						
ANR	1264426	Symbol	& re . start . x		1264008						
ANR	1264427	Symbol	& le		1264008						
ANR	1264428	Symbol	* p1		1264008						
ANR	1264429	Symbol	* p0		1264008						
ANR	1264430	Symbol	p1 -> y		1264008						
ANR	1264431	Symbol	p1 -> x		1264008						
ANR	1264432	Symbol	le . start		1264008						
ANR	1264433	Symbol	c0		1264008						
ANR	1264434	Symbol	c1		1264008						
ANR	1264435	Symbol	& re . start		1264008						
ANR	1264436	Symbol	re . end . x		1264008						
ANR	1264437	Symbol	re . end		1264008						
ANR	1264438	Symbol	re		1264008						
ANR	1264439	Symbol	re . end . y		1264008						
ANR	1264440	Symbol	& re . end		1264008						
ANR	1264441	Symbol	adjust		1264008						
ANR	1264442	Symbol	le		1264008						
ANR	1264443	Symbol	pfs		1264008						
ANR	1264444	Symbol	swap_axes		1264008						
ANR	1264445	Symbol	& re		1264008						
ANR	1264446	Function	bbox_of_points	2267:0:82603:83451							
ANR	1264447	FunctionDef	"bbox_of_points (gs_fixed_rect * r , const gs_fixed_point * p0 , const gs_fixed_point * p1 , const gs_fixed_point * p2 , const gs_fixed_point * p3)"		1264446	0					
ANR	1264448	CompoundStatement		2271:0:82775:83451	1264446	0					
ANR	1264449	ExpressionStatement	r -> p . x = r -> q . x = p0 -> x	2272:4:82781:82804	1264446	0	True				
ANR	1264450	AssignmentExpression	r -> p . x = r -> q . x = p0 -> x		1264446	0		=			
ANR	1264451	MemberAccess	r -> p . x		1264446	0					
ANR	1264452	PtrMemberAccess	r -> p		1264446	0					
ANR	1264453	Identifier	r		1264446	0					
ANR	1264454	Identifier	p		1264446	1					
ANR	1264455	Identifier	x		1264446	1					
ANR	1264456	AssignmentExpression	r -> q . x = p0 -> x		1264446	1		=			
ANR	1264457	MemberAccess	r -> q . x		1264446	0					
ANR	1264458	PtrMemberAccess	r -> q		1264446	0					
ANR	1264459	Identifier	r		1264446	0					
ANR	1264460	Identifier	q		1264446	1					
ANR	1264461	Identifier	x		1264446	1					
ANR	1264462	PtrMemberAccess	p0 -> x		1264446	1					
ANR	1264463	Identifier	p0		1264446	0					
ANR	1264464	Identifier	x		1264446	1					
ANR	1264465	ExpressionStatement	r -> p . y = r -> q . y = p0 -> y	2273:4:82810:82833	1264446	1	True				
ANR	1264466	AssignmentExpression	r -> p . y = r -> q . y = p0 -> y		1264446	0		=			
ANR	1264467	MemberAccess	r -> p . y		1264446	0					
ANR	1264468	PtrMemberAccess	r -> p		1264446	0					
ANR	1264469	Identifier	r		1264446	0					
ANR	1264470	Identifier	p		1264446	1					
ANR	1264471	Identifier	y		1264446	1					
ANR	1264472	AssignmentExpression	r -> q . y = p0 -> y		1264446	1		=			
ANR	1264473	MemberAccess	r -> q . y		1264446	0					
ANR	1264474	PtrMemberAccess	r -> q		1264446	0					
ANR	1264475	Identifier	r		1264446	0					
ANR	1264476	Identifier	q		1264446	1					
ANR	1264477	Identifier	y		1264446	1					
ANR	1264478	PtrMemberAccess	p0 -> y		1264446	1					
ANR	1264479	Identifier	p0		1264446	0					
ANR	1264480	Identifier	y		1264446	1					
ANR	1264481	IfStatement	if ( r -> p . x > p1 -> x )		1264446	2					
ANR	1264482	Condition	r -> p . x > p1 -> x	2275:8:82844:82857	1264446	0	True				
ANR	1264483	RelationalExpression	r -> p . x > p1 -> x		1264446	0		>			
ANR	1264484	MemberAccess	r -> p . x		1264446	0					
ANR	1264485	PtrMemberAccess	r -> p		1264446	0					
ANR	1264486	Identifier	r		1264446	0					
ANR	1264487	Identifier	p		1264446	1					
ANR	1264488	Identifier	x		1264446	1					
ANR	1264489	PtrMemberAccess	p1 -> x		1264446	1					
ANR	1264490	Identifier	p1		1264446	0					
ANR	1264491	Identifier	x		1264446	1					
ANR	1264492	ExpressionStatement	r -> p . x = p1 -> x	2276:8:82868:82882	1264446	1	True				
ANR	1264493	AssignmentExpression	r -> p . x = p1 -> x		1264446	0		=			
ANR	1264494	MemberAccess	r -> p . x		1264446	0					
ANR	1264495	PtrMemberAccess	r -> p		1264446	0					
ANR	1264496	Identifier	r		1264446	0					
ANR	1264497	Identifier	p		1264446	1					
ANR	1264498	Identifier	x		1264446	1					
ANR	1264499	PtrMemberAccess	p1 -> x		1264446	1					
ANR	1264500	Identifier	p1		1264446	0					
ANR	1264501	Identifier	x		1264446	1					
ANR	1264502	IfStatement	if ( r -> q . x < p1 -> x )		1264446	3					
ANR	1264503	Condition	r -> q . x < p1 -> x	2277:8:82892:82905	1264446	0	True				
ANR	1264504	RelationalExpression	r -> q . x < p1 -> x		1264446	0		<			
ANR	1264505	MemberAccess	r -> q . x		1264446	0					
ANR	1264506	PtrMemberAccess	r -> q		1264446	0					
ANR	1264507	Identifier	r		1264446	0					
ANR	1264508	Identifier	q		1264446	1					
ANR	1264509	Identifier	x		1264446	1					
ANR	1264510	PtrMemberAccess	p1 -> x		1264446	1					
ANR	1264511	Identifier	p1		1264446	0					
ANR	1264512	Identifier	x		1264446	1					
ANR	1264513	ExpressionStatement	r -> q . x = p1 -> x	2278:8:82916:82930	1264446	1	True				
ANR	1264514	AssignmentExpression	r -> q . x = p1 -> x		1264446	0		=			
ANR	1264515	MemberAccess	r -> q . x		1264446	0					
ANR	1264516	PtrMemberAccess	r -> q		1264446	0					
ANR	1264517	Identifier	r		1264446	0					
ANR	1264518	Identifier	q		1264446	1					
ANR	1264519	Identifier	x		1264446	1					
ANR	1264520	PtrMemberAccess	p1 -> x		1264446	1					
ANR	1264521	Identifier	p1		1264446	0					
ANR	1264522	Identifier	x		1264446	1					
ANR	1264523	IfStatement	if ( r -> p . y > p1 -> y )		1264446	4					
ANR	1264524	Condition	r -> p . y > p1 -> y	2279:8:82940:82953	1264446	0	True				
ANR	1264525	RelationalExpression	r -> p . y > p1 -> y		1264446	0		>			
ANR	1264526	MemberAccess	r -> p . y		1264446	0					
ANR	1264527	PtrMemberAccess	r -> p		1264446	0					
ANR	1264528	Identifier	r		1264446	0					
ANR	1264529	Identifier	p		1264446	1					
ANR	1264530	Identifier	y		1264446	1					
ANR	1264531	PtrMemberAccess	p1 -> y		1264446	1					
ANR	1264532	Identifier	p1		1264446	0					
ANR	1264533	Identifier	y		1264446	1					
ANR	1264534	ExpressionStatement	r -> p . y = p1 -> y	2280:8:82964:82978	1264446	1	True				
ANR	1264535	AssignmentExpression	r -> p . y = p1 -> y		1264446	0		=			
ANR	1264536	MemberAccess	r -> p . y		1264446	0					
ANR	1264537	PtrMemberAccess	r -> p		1264446	0					
ANR	1264538	Identifier	r		1264446	0					
ANR	1264539	Identifier	p		1264446	1					
ANR	1264540	Identifier	y		1264446	1					
ANR	1264541	PtrMemberAccess	p1 -> y		1264446	1					
ANR	1264542	Identifier	p1		1264446	0					
ANR	1264543	Identifier	y		1264446	1					
ANR	1264544	IfStatement	if ( r -> q . y < p1 -> y )		1264446	5					
ANR	1264545	Condition	r -> q . y < p1 -> y	2281:8:82988:83001	1264446	0	True				
ANR	1264546	RelationalExpression	r -> q . y < p1 -> y		1264446	0		<			
ANR	1264547	MemberAccess	r -> q . y		1264446	0					
ANR	1264548	PtrMemberAccess	r -> q		1264446	0					
ANR	1264549	Identifier	r		1264446	0					
ANR	1264550	Identifier	q		1264446	1					
ANR	1264551	Identifier	y		1264446	1					
ANR	1264552	PtrMemberAccess	p1 -> y		1264446	1					
ANR	1264553	Identifier	p1		1264446	0					
ANR	1264554	Identifier	y		1264446	1					
ANR	1264555	ExpressionStatement	r -> q . y = p1 -> y	2282:8:83012:83026	1264446	1	True				
ANR	1264556	AssignmentExpression	r -> q . y = p1 -> y		1264446	0		=			
ANR	1264557	MemberAccess	r -> q . y		1264446	0					
ANR	1264558	PtrMemberAccess	r -> q		1264446	0					
ANR	1264559	Identifier	r		1264446	0					
ANR	1264560	Identifier	q		1264446	1					
ANR	1264561	Identifier	y		1264446	1					
ANR	1264562	PtrMemberAccess	p1 -> y		1264446	1					
ANR	1264563	Identifier	p1		1264446	0					
ANR	1264564	Identifier	y		1264446	1					
ANR	1264565	IfStatement	if ( r -> p . x > p2 -> x )		1264446	6					
ANR	1264566	Condition	r -> p . x > p2 -> x	2284:8:83037:83050	1264446	0	True				
ANR	1264567	RelationalExpression	r -> p . x > p2 -> x		1264446	0		>			
ANR	1264568	MemberAccess	r -> p . x		1264446	0					
ANR	1264569	PtrMemberAccess	r -> p		1264446	0					
ANR	1264570	Identifier	r		1264446	0					
ANR	1264571	Identifier	p		1264446	1					
ANR	1264572	Identifier	x		1264446	1					
ANR	1264573	PtrMemberAccess	p2 -> x		1264446	1					
ANR	1264574	Identifier	p2		1264446	0					
ANR	1264575	Identifier	x		1264446	1					
ANR	1264576	ExpressionStatement	r -> p . x = p2 -> x	2285:8:83061:83075	1264446	1	True				
ANR	1264577	AssignmentExpression	r -> p . x = p2 -> x		1264446	0		=			
ANR	1264578	MemberAccess	r -> p . x		1264446	0					
ANR	1264579	PtrMemberAccess	r -> p		1264446	0					
ANR	1264580	Identifier	r		1264446	0					
ANR	1264581	Identifier	p		1264446	1					
ANR	1264582	Identifier	x		1264446	1					
ANR	1264583	PtrMemberAccess	p2 -> x		1264446	1					
ANR	1264584	Identifier	p2		1264446	0					
ANR	1264585	Identifier	x		1264446	1					
ANR	1264586	IfStatement	if ( r -> q . x < p2 -> x )		1264446	7					
ANR	1264587	Condition	r -> q . x < p2 -> x	2286:8:83085:83098	1264446	0	True				
ANR	1264588	RelationalExpression	r -> q . x < p2 -> x		1264446	0		<			
ANR	1264589	MemberAccess	r -> q . x		1264446	0					
ANR	1264590	PtrMemberAccess	r -> q		1264446	0					
ANR	1264591	Identifier	r		1264446	0					
ANR	1264592	Identifier	q		1264446	1					
ANR	1264593	Identifier	x		1264446	1					
ANR	1264594	PtrMemberAccess	p2 -> x		1264446	1					
ANR	1264595	Identifier	p2		1264446	0					
ANR	1264596	Identifier	x		1264446	1					
ANR	1264597	ExpressionStatement	r -> q . x = p2 -> x	2287:8:83109:83123	1264446	1	True				
ANR	1264598	AssignmentExpression	r -> q . x = p2 -> x		1264446	0		=			
ANR	1264599	MemberAccess	r -> q . x		1264446	0					
ANR	1264600	PtrMemberAccess	r -> q		1264446	0					
ANR	1264601	Identifier	r		1264446	0					
ANR	1264602	Identifier	q		1264446	1					
ANR	1264603	Identifier	x		1264446	1					
ANR	1264604	PtrMemberAccess	p2 -> x		1264446	1					
ANR	1264605	Identifier	p2		1264446	0					
ANR	1264606	Identifier	x		1264446	1					
ANR	1264607	IfStatement	if ( r -> p . y > p2 -> y )		1264446	8					
ANR	1264608	Condition	r -> p . y > p2 -> y	2288:8:83133:83146	1264446	0	True				
ANR	1264609	RelationalExpression	r -> p . y > p2 -> y		1264446	0		>			
ANR	1264610	MemberAccess	r -> p . y		1264446	0					
ANR	1264611	PtrMemberAccess	r -> p		1264446	0					
ANR	1264612	Identifier	r		1264446	0					
ANR	1264613	Identifier	p		1264446	1					
ANR	1264614	Identifier	y		1264446	1					
ANR	1264615	PtrMemberAccess	p2 -> y		1264446	1					
ANR	1264616	Identifier	p2		1264446	0					
ANR	1264617	Identifier	y		1264446	1					
ANR	1264618	ExpressionStatement	r -> p . y = p2 -> y	2289:8:83157:83171	1264446	1	True				
ANR	1264619	AssignmentExpression	r -> p . y = p2 -> y		1264446	0		=			
ANR	1264620	MemberAccess	r -> p . y		1264446	0					
ANR	1264621	PtrMemberAccess	r -> p		1264446	0					
ANR	1264622	Identifier	r		1264446	0					
ANR	1264623	Identifier	p		1264446	1					
ANR	1264624	Identifier	y		1264446	1					
ANR	1264625	PtrMemberAccess	p2 -> y		1264446	1					
ANR	1264626	Identifier	p2		1264446	0					
ANR	1264627	Identifier	y		1264446	1					
ANR	1264628	IfStatement	if ( r -> q . y < p2 -> y )		1264446	9					
ANR	1264629	Condition	r -> q . y < p2 -> y	2290:8:83181:83194	1264446	0	True				
ANR	1264630	RelationalExpression	r -> q . y < p2 -> y		1264446	0		<			
ANR	1264631	MemberAccess	r -> q . y		1264446	0					
ANR	1264632	PtrMemberAccess	r -> q		1264446	0					
ANR	1264633	Identifier	r		1264446	0					
ANR	1264634	Identifier	q		1264446	1					
ANR	1264635	Identifier	y		1264446	1					
ANR	1264636	PtrMemberAccess	p2 -> y		1264446	1					
ANR	1264637	Identifier	p2		1264446	0					
ANR	1264638	Identifier	y		1264446	1					
ANR	1264639	ExpressionStatement	r -> q . y = p2 -> y	2291:8:83205:83219	1264446	1	True				
ANR	1264640	AssignmentExpression	r -> q . y = p2 -> y		1264446	0		=			
ANR	1264641	MemberAccess	r -> q . y		1264446	0					
ANR	1264642	PtrMemberAccess	r -> q		1264446	0					
ANR	1264643	Identifier	r		1264446	0					
ANR	1264644	Identifier	q		1264446	1					
ANR	1264645	Identifier	y		1264446	1					
ANR	1264646	PtrMemberAccess	p2 -> y		1264446	1					
ANR	1264647	Identifier	p2		1264446	0					
ANR	1264648	Identifier	y		1264446	1					
ANR	1264649	IfStatement	if ( p3 == NULL )		1264446	10					
ANR	1264650	Condition	p3 == NULL	2293:8:83230:83239	1264446	0	True				
ANR	1264651	EqualityExpression	p3 == NULL		1264446	0		==			
ANR	1264652	Identifier	p3		1264446	0					
ANR	1264653	Identifier	NULL		1264446	1					
ANR	1264654	ReturnStatement	return ;	2294:8:83250:83256	1264446	1	True				
ANR	1264655	IfStatement	if ( r -> p . x > p3 -> x )		1264446	11					
ANR	1264656	Condition	r -> p . x > p3 -> x	2296:8:83267:83280	1264446	0	True				
ANR	1264657	RelationalExpression	r -> p . x > p3 -> x		1264446	0		>			
ANR	1264658	MemberAccess	r -> p . x		1264446	0					
ANR	1264659	PtrMemberAccess	r -> p		1264446	0					
ANR	1264660	Identifier	r		1264446	0					
ANR	1264661	Identifier	p		1264446	1					
ANR	1264662	Identifier	x		1264446	1					
ANR	1264663	PtrMemberAccess	p3 -> x		1264446	1					
ANR	1264664	Identifier	p3		1264446	0					
ANR	1264665	Identifier	x		1264446	1					
ANR	1264666	ExpressionStatement	r -> p . x = p3 -> x	2297:8:83291:83305	1264446	1	True				
ANR	1264667	AssignmentExpression	r -> p . x = p3 -> x		1264446	0		=			
ANR	1264668	MemberAccess	r -> p . x		1264446	0					
ANR	1264669	PtrMemberAccess	r -> p		1264446	0					
ANR	1264670	Identifier	r		1264446	0					
ANR	1264671	Identifier	p		1264446	1					
ANR	1264672	Identifier	x		1264446	1					
ANR	1264673	PtrMemberAccess	p3 -> x		1264446	1					
ANR	1264674	Identifier	p3		1264446	0					
ANR	1264675	Identifier	x		1264446	1					
ANR	1264676	IfStatement	if ( r -> q . x < p3 -> x )		1264446	12					
ANR	1264677	Condition	r -> q . x < p3 -> x	2298:8:83315:83328	1264446	0	True				
ANR	1264678	RelationalExpression	r -> q . x < p3 -> x		1264446	0		<			
ANR	1264679	MemberAccess	r -> q . x		1264446	0					
ANR	1264680	PtrMemberAccess	r -> q		1264446	0					
ANR	1264681	Identifier	r		1264446	0					
ANR	1264682	Identifier	q		1264446	1					
ANR	1264683	Identifier	x		1264446	1					
ANR	1264684	PtrMemberAccess	p3 -> x		1264446	1					
ANR	1264685	Identifier	p3		1264446	0					
ANR	1264686	Identifier	x		1264446	1					
ANR	1264687	ExpressionStatement	r -> q . x = p3 -> x	2299:8:83339:83353	1264446	1	True				
ANR	1264688	AssignmentExpression	r -> q . x = p3 -> x		1264446	0		=			
ANR	1264689	MemberAccess	r -> q . x		1264446	0					
ANR	1264690	PtrMemberAccess	r -> q		1264446	0					
ANR	1264691	Identifier	r		1264446	0					
ANR	1264692	Identifier	q		1264446	1					
ANR	1264693	Identifier	x		1264446	1					
ANR	1264694	PtrMemberAccess	p3 -> x		1264446	1					
ANR	1264695	Identifier	p3		1264446	0					
ANR	1264696	Identifier	x		1264446	1					
ANR	1264697	IfStatement	if ( r -> p . y > p3 -> y )		1264446	13					
ANR	1264698	Condition	r -> p . y > p3 -> y	2300:8:83363:83376	1264446	0	True				
ANR	1264699	RelationalExpression	r -> p . y > p3 -> y		1264446	0		>			
ANR	1264700	MemberAccess	r -> p . y		1264446	0					
ANR	1264701	PtrMemberAccess	r -> p		1264446	0					
ANR	1264702	Identifier	r		1264446	0					
ANR	1264703	Identifier	p		1264446	1					
ANR	1264704	Identifier	y		1264446	1					
ANR	1264705	PtrMemberAccess	p3 -> y		1264446	1					
ANR	1264706	Identifier	p3		1264446	0					
ANR	1264707	Identifier	y		1264446	1					
ANR	1264708	ExpressionStatement	r -> p . y = p3 -> y	2301:8:83387:83401	1264446	1	True				
ANR	1264709	AssignmentExpression	r -> p . y = p3 -> y		1264446	0		=			
ANR	1264710	MemberAccess	r -> p . y		1264446	0					
ANR	1264711	PtrMemberAccess	r -> p		1264446	0					
ANR	1264712	Identifier	r		1264446	0					
ANR	1264713	Identifier	p		1264446	1					
ANR	1264714	Identifier	y		1264446	1					
ANR	1264715	PtrMemberAccess	p3 -> y		1264446	1					
ANR	1264716	Identifier	p3		1264446	0					
ANR	1264717	Identifier	y		1264446	1					
ANR	1264718	IfStatement	if ( r -> q . y < p3 -> y )		1264446	14					
ANR	1264719	Condition	r -> q . y < p3 -> y	2302:8:83411:83424	1264446	0	True				
ANR	1264720	RelationalExpression	r -> q . y < p3 -> y		1264446	0		<			
ANR	1264721	MemberAccess	r -> q . y		1264446	0					
ANR	1264722	PtrMemberAccess	r -> q		1264446	0					
ANR	1264723	Identifier	r		1264446	0					
ANR	1264724	Identifier	q		1264446	1					
ANR	1264725	Identifier	y		1264446	1					
ANR	1264726	PtrMemberAccess	p3 -> y		1264446	1					
ANR	1264727	Identifier	p3		1264446	0					
ANR	1264728	Identifier	y		1264446	1					
ANR	1264729	ExpressionStatement	r -> q . y = p3 -> y	2303:8:83435:83449	1264446	1	True				
ANR	1264730	AssignmentExpression	r -> q . y = p3 -> y		1264446	0		=			
ANR	1264731	MemberAccess	r -> q . y		1264446	0					
ANR	1264732	PtrMemberAccess	r -> q		1264446	0					
ANR	1264733	Identifier	r		1264446	0					
ANR	1264734	Identifier	q		1264446	1					
ANR	1264735	Identifier	y		1264446	1					
ANR	1264736	PtrMemberAccess	p3 -> y		1264446	1					
ANR	1264737	Identifier	p3		1264446	0					
ANR	1264738	Identifier	y		1264446	1					
ANR	1264739	ReturnType	static inline void		1264446	1					
ANR	1264740	Identifier	bbox_of_points		1264446	2					
ANR	1264741	ParameterList	"gs_fixed_rect * r , const gs_fixed_point * p0 , const gs_fixed_point * p1 , const gs_fixed_point * p2 , const gs_fixed_point * p3"		1264446	3					
ANR	1264742	Parameter	gs_fixed_rect * r	2268:15:82637:82652	1264446	0	True				
ANR	1264743	ParameterType	gs_fixed_rect *		1264446	0					
ANR	1264744	Identifier	r		1264446	1					
ANR	1264745	Parameter	const gs_fixed_point * p0	2269:8:82663:82686	1264446	1	True				
ANR	1264746	ParameterType	const gs_fixed_point *		1264446	0					
ANR	1264747	Identifier	p0		1264446	1					
ANR	1264748	Parameter	const gs_fixed_point * p1	2269:34:82689:82712	1264446	2	True				
ANR	1264749	ParameterType	const gs_fixed_point *		1264446	0					
ANR	1264750	Identifier	p1		1264446	1					
ANR	1264751	Parameter	const gs_fixed_point * p2	2270:8:82723:82746	1264446	3	True				
ANR	1264752	ParameterType	const gs_fixed_point *		1264446	0					
ANR	1264753	Identifier	p2		1264446	1					
ANR	1264754	Parameter	const gs_fixed_point * p3	2270:34:82749:82772	1264446	4	True				
ANR	1264755	ParameterType	const gs_fixed_point *		1264446	0					
ANR	1264756	Identifier	p3		1264446	1					
ANR	1264757	CFGEntryNode	ENTRY		1264446		True				
ANR	1264758	CFGExitNode	EXIT		1264446		True				
ANR	1264759	Symbol	p0		1264446						
ANR	1264760	Symbol	p1		1264446						
ANR	1264761	Symbol	p2		1264446						
ANR	1264762	Symbol	p3		1264446						
ANR	1264763	Symbol	p2 -> x		1264446						
ANR	1264764	Symbol	p2 -> y		1264446						
ANR	1264765	Symbol	r -> p		1264446						
ANR	1264766	Symbol	r -> q		1264446						
ANR	1264767	Symbol	p0 -> y		1264446						
ANR	1264768	Symbol	p0 -> x		1264446						
ANR	1264769	Symbol	p3 -> y		1264446						
ANR	1264770	Symbol	p3 -> x		1264446						
ANR	1264771	Symbol	NULL		1264446						
ANR	1264772	Symbol	* p1		1264446						
ANR	1264773	Symbol	* p0		1264446						
ANR	1264774	Symbol	p1 -> y		1264446						
ANR	1264775	Symbol	p1 -> x		1264446						
ANR	1264776	Symbol	r -> q . x		1264446						
ANR	1264777	Symbol	* p3		1264446						
ANR	1264778	Symbol	r -> q . y		1264446						
ANR	1264779	Symbol	* p2		1264446						
ANR	1264780	Symbol	r		1264446						
ANR	1264781	Symbol	r -> p . y		1264446						
ANR	1264782	Symbol	r -> p . x		1264446						
ANR	1264783	Symbol	* r		1264446						
ANR	1264784	Function	fill_wedges_aux	2306:0:83454:85287							
ANR	1264785	FunctionDef	"fill_wedges_aux (patch_fill_state_t * pfs , int k , int ka , const gs_fixed_point pole [ 4 ] , const patch_color_t * c0 , const patch_color_t * c1 , int wedge_type)"		1264784	0					
ANR	1264786	CompoundStatement		2310:0:83633:85287	1264784	0					
ANR	1264787	IdentifierDeclStatement	int code ;	2311:4:83639:83647	1264784	0	True				
ANR	1264788	IdentifierDecl	code		1264784	0					
ANR	1264789	IdentifierDeclType	int		1264784	0					
ANR	1264790	Identifier	code		1264784	1					
ANR	1264791	IfStatement	if ( k > 1 )		1264784	1					
ANR	1264792	Condition	k > 1	2313:8:83658:83662	1264784	0	True				
ANR	1264793	RelationalExpression	k > 1		1264784	0		>			
ANR	1264794	Identifier	k		1264784	0					
ANR	1264795	PrimaryExpression	1		1264784	1					
ANR	1264796	CompoundStatement		8:8:139:160	1264784	1					
ANR	1264797	Statement	gs_fixed_point	2314:8:83675:83688	1264784	0	True				
ANR	1264798	ExpressionStatement	q [ 2 ] [ 4 ]	2314:23:83690:83697	1264784	1	True				
ANR	1264799	ArrayIndexing	q [ 2 ] [ 4 ]		1264784	0					
ANR	1264800	ArrayIndexing	q [ 2 ]		1264784	0					
ANR	1264801	Identifier	q		1264784	0					
ANR	1264802	PrimaryExpression	2		1264784	1					
ANR	1264803	PrimaryExpression	4		1264784	1					
ANR	1264804	IdentifierDeclStatement	patch_color_t * c ;	2315:8:83707:83723	1264784	2	True				
ANR	1264805	IdentifierDecl	* c		1264784	0					
ANR	1264806	IdentifierDeclType	patch_color_t *		1264784	0					
ANR	1264807	Identifier	c		1264784	1					
ANR	1264808	IdentifierDeclStatement	bool save_inside = pfs -> inside ;	2316:8:83733:83763	1264784	3	True				
ANR	1264809	IdentifierDecl	save_inside = pfs -> inside		1264784	0					
ANR	1264810	IdentifierDeclType	bool		1264784	0					
ANR	1264811	Identifier	save_inside		1264784	1					
ANR	1264812	AssignmentExpression	save_inside = pfs -> inside		1264784	2		=			
ANR	1264813	Identifier	save_inside		1264784	0					
ANR	1264814	PtrMemberAccess	pfs -> inside		1264784	1					
ANR	1264815	Identifier	pfs		1264784	0					
ANR	1264816	Identifier	inside		1264784	1					
ANR	1264817	IdentifierDeclStatement	byte * color_stack_ptr ;	2317:8:83773:83794	1264784	4	True				
ANR	1264818	IdentifierDecl	* color_stack_ptr		1264784	0					
ANR	1264819	IdentifierDeclType	byte *		1264784	0					
ANR	1264820	Identifier	color_stack_ptr		1264784	1					
ANR	1264821	IfStatement	if ( ! pfs -> inside )		1264784	5					
ANR	1264822	Condition	! pfs -> inside	2319:12:83809:83820	1264784	0	True				
ANR	1264823	UnaryOperationExpression	! pfs -> inside		1264784	0					
ANR	1264824	UnaryOperator	!		1264784	0					
ANR	1264825	PtrMemberAccess	pfs -> inside		1264784	1					
ANR	1264826	Identifier	pfs		1264784	0					
ANR	1264827	Identifier	inside		1264784	1					
ANR	1264828	CompoundStatement		11:12:203:222	1264784	1					
ANR	1264829	IdentifierDeclStatement	"gs_fixed_rect r , r1 ;"	2320:12:83837:83856	1264784	0	True				
ANR	1264830	IdentifierDecl	r		1264784	0					
ANR	1264831	IdentifierDeclType	gs_fixed_rect		1264784	0					
ANR	1264832	Identifier	r		1264784	1					
ANR	1264833	IdentifierDecl	r1		1264784	1					
ANR	1264834	IdentifierDeclType	gs_fixed_rect		1264784	0					
ANR	1264835	Identifier	r1		1264784	1					
ANR	1264836	ExpressionStatement	"bbox_of_points ( & r , & pole [ 0 ] , & pole [ 1 ] , & pole [ 2 ] , & pole [ 3 ] )"	2322:12:83871:83929	1264784	1	True				
ANR	1264837	CallExpression	"bbox_of_points ( & r , & pole [ 0 ] , & pole [ 1 ] , & pole [ 2 ] , & pole [ 3 ] )"		1264784	0					
ANR	1264838	Callee	bbox_of_points		1264784	0					
ANR	1264839	Identifier	bbox_of_points		1264784	0					
ANR	1264840	ArgumentList	& r		1264784	1					
ANR	1264841	Argument	& r		1264784	0					
ANR	1264842	UnaryOperationExpression	& r		1264784	0					
ANR	1264843	UnaryOperator	&		1264784	0					
ANR	1264844	Identifier	r		1264784	1					
ANR	1264845	Argument	& pole [ 0 ]		1264784	1					
ANR	1264846	UnaryOperationExpression	& pole [ 0 ]		1264784	0					
ANR	1264847	UnaryOperator	&		1264784	0					
ANR	1264848	ArrayIndexing	pole [ 0 ]		1264784	1					
ANR	1264849	Identifier	pole		1264784	0					
ANR	1264850	PrimaryExpression	0		1264784	1					
ANR	1264851	Argument	& pole [ 1 ]		1264784	2					
ANR	1264852	UnaryOperationExpression	& pole [ 1 ]		1264784	0					
ANR	1264853	UnaryOperator	&		1264784	0					
ANR	1264854	ArrayIndexing	pole [ 1 ]		1264784	1					
ANR	1264855	Identifier	pole		1264784	0					
ANR	1264856	PrimaryExpression	1		1264784	1					
ANR	1264857	Argument	& pole [ 2 ]		1264784	3					
ANR	1264858	UnaryOperationExpression	& pole [ 2 ]		1264784	0					
ANR	1264859	UnaryOperator	&		1264784	0					
ANR	1264860	ArrayIndexing	pole [ 2 ]		1264784	1					
ANR	1264861	Identifier	pole		1264784	0					
ANR	1264862	PrimaryExpression	2		1264784	1					
ANR	1264863	Argument	& pole [ 3 ]		1264784	4					
ANR	1264864	UnaryOperationExpression	& pole [ 3 ]		1264784	0					
ANR	1264865	UnaryOperator	&		1264784	0					
ANR	1264866	ArrayIndexing	pole [ 3 ]		1264784	1					
ANR	1264867	Identifier	pole		1264784	0					
ANR	1264868	PrimaryExpression	3		1264784	1					
ANR	1264869	ExpressionStatement	r . p . x -= INTERPATCH_PADDING	2323:12:83943:83970	1264784	2	True				
ANR	1264870	AssignmentExpression	r . p . x -= INTERPATCH_PADDING		1264784	0		-=			
ANR	1264871	MemberAccess	r . p . x		1264784	0					
ANR	1264872	MemberAccess	r . p		1264784	0					
ANR	1264873	Identifier	r		1264784	0					
ANR	1264874	Identifier	p		1264784	1					
ANR	1264875	Identifier	x		1264784	1					
ANR	1264876	Identifier	INTERPATCH_PADDING		1264784	1					
ANR	1264877	ExpressionStatement	r . p . y -= INTERPATCH_PADDING	2324:12:83984:84011	1264784	3	True				
ANR	1264878	AssignmentExpression	r . p . y -= INTERPATCH_PADDING		1264784	0		-=			
ANR	1264879	MemberAccess	r . p . y		1264784	0					
ANR	1264880	MemberAccess	r . p		1264784	0					
ANR	1264881	Identifier	r		1264784	0					
ANR	1264882	Identifier	p		1264784	1					
ANR	1264883	Identifier	y		1264784	1					
ANR	1264884	Identifier	INTERPATCH_PADDING		1264784	1					
ANR	1264885	ExpressionStatement	r . q . x += INTERPATCH_PADDING	2325:12:84025:84052	1264784	4	True				
ANR	1264886	AssignmentExpression	r . q . x += INTERPATCH_PADDING		1264784	0		+=			
ANR	1264887	MemberAccess	r . q . x		1264784	0					
ANR	1264888	MemberAccess	r . q		1264784	0					
ANR	1264889	Identifier	r		1264784	0					
ANR	1264890	Identifier	q		1264784	1					
ANR	1264891	Identifier	x		1264784	1					
ANR	1264892	Identifier	INTERPATCH_PADDING		1264784	1					
ANR	1264893	ExpressionStatement	r . q . y += INTERPATCH_PADDING	2326:12:84066:84093	1264784	5	True				
ANR	1264894	AssignmentExpression	r . q . y += INTERPATCH_PADDING		1264784	0		+=			
ANR	1264895	MemberAccess	r . q . y		1264784	0					
ANR	1264896	MemberAccess	r . q		1264784	0					
ANR	1264897	Identifier	r		1264784	0					
ANR	1264898	Identifier	q		1264784	1					
ANR	1264899	Identifier	y		1264784	1					
ANR	1264900	Identifier	INTERPATCH_PADDING		1264784	1					
ANR	1264901	ExpressionStatement	r1 = r	2327:12:84107:84113	1264784	6	True				
ANR	1264902	AssignmentExpression	r1 = r		1264784	0		=			
ANR	1264903	Identifier	r1		1264784	0					
ANR	1264904	Identifier	r		1264784	1					
ANR	1264905	ExpressionStatement	"rect_intersect ( r , pfs -> rect )"	2328:12:84127:84155	1264784	7	True				
ANR	1264906	CallExpression	"rect_intersect ( r , pfs -> rect )"		1264784	0					
ANR	1264907	Callee	rect_intersect		1264784	0					
ANR	1264908	Identifier	rect_intersect		1264784	0					
ANR	1264909	ArgumentList	r		1264784	1					
ANR	1264910	Argument	r		1264784	0					
ANR	1264911	Identifier	r		1264784	0					
ANR	1264912	Argument	pfs -> rect		1264784	1					
ANR	1264913	PtrMemberAccess	pfs -> rect		1264784	0					
ANR	1264914	Identifier	pfs		1264784	0					
ANR	1264915	Identifier	rect		1264784	1					
ANR	1264916	IfStatement	if ( r . q . x <= r . p . x || r . q . y <= r . p . y )		1264784	8					
ANR	1264917	Condition	r . q . x <= r . p . x || r . q . y <= r . p . y	2329:16:84173:84204	1264784	0	True				
ANR	1264918	OrExpression	r . q . x <= r . p . x || r . q . y <= r . p . y		1264784	0		||			
ANR	1264919	RelationalExpression	r . q . x <= r . p . x		1264784	0		<=			
ANR	1264920	MemberAccess	r . q . x		1264784	0					
ANR	1264921	MemberAccess	r . q		1264784	0					
ANR	1264922	Identifier	r		1264784	0					
ANR	1264923	Identifier	q		1264784	1					
ANR	1264924	Identifier	x		1264784	1					
ANR	1264925	MemberAccess	r . p . x		1264784	1					
ANR	1264926	MemberAccess	r . p		1264784	0					
ANR	1264927	Identifier	r		1264784	0					
ANR	1264928	Identifier	p		1264784	1					
ANR	1264929	Identifier	x		1264784	1					
ANR	1264930	RelationalExpression	r . q . y <= r . p . y		1264784	1		<=			
ANR	1264931	MemberAccess	r . q . y		1264784	0					
ANR	1264932	MemberAccess	r . q		1264784	0					
ANR	1264933	Identifier	r		1264784	0					
ANR	1264934	Identifier	q		1264784	1					
ANR	1264935	Identifier	y		1264784	1					
ANR	1264936	MemberAccess	r . p . y		1264784	1					
ANR	1264937	MemberAccess	r . p		1264784	0					
ANR	1264938	Identifier	r		1264784	0					
ANR	1264939	Identifier	p		1264784	1					
ANR	1264940	Identifier	y		1264784	1					
ANR	1264941	ReturnStatement	return 0 ;	2330:16:84223:84231	1264784	1	True				
ANR	1264942	PrimaryExpression	0		1264784	0					
ANR	1264943	IfStatement	if ( r1 . p . x == r . p . x && r1 . p . y == r . p . y && r1 . q . x == r . q . x && r1 . q . y == r . q . y )		1264784	9					
ANR	1264944	Condition	r1 . p . x == r . p . x && r1 . p . y == r . p . y && r1 . q . x == r . q . x && r1 . q . y == r . q . y	2331:16:84249:84336	1264784	0	True				
ANR	1264945	AndExpression	r1 . p . x == r . p . x && r1 . p . y == r . p . y && r1 . q . x == r . q . x && r1 . q . y == r . q . y		1264784	0		&&			
ANR	1264946	EqualityExpression	r1 . p . x == r . p . x		1264784	0		==			
ANR	1264947	MemberAccess	r1 . p . x		1264784	0					
ANR	1264948	MemberAccess	r1 . p		1264784	0					
ANR	1264949	Identifier	r1		1264784	0					
ANR	1264950	Identifier	p		1264784	1					
ANR	1264951	Identifier	x		1264784	1					
ANR	1264952	MemberAccess	r . p . x		1264784	1					
ANR	1264953	MemberAccess	r . p		1264784	0					
ANR	1264954	Identifier	r		1264784	0					
ANR	1264955	Identifier	p		1264784	1					
ANR	1264956	Identifier	x		1264784	1					
ANR	1264957	AndExpression	r1 . p . y == r . p . y && r1 . q . x == r . q . x && r1 . q . y == r . q . y		1264784	1		&&			
ANR	1264958	EqualityExpression	r1 . p . y == r . p . y		1264784	0		==			
ANR	1264959	MemberAccess	r1 . p . y		1264784	0					
ANR	1264960	MemberAccess	r1 . p		1264784	0					
ANR	1264961	Identifier	r1		1264784	0					
ANR	1264962	Identifier	p		1264784	1					
ANR	1264963	Identifier	y		1264784	1					
ANR	1264964	MemberAccess	r . p . y		1264784	1					
ANR	1264965	MemberAccess	r . p		1264784	0					
ANR	1264966	Identifier	r		1264784	0					
ANR	1264967	Identifier	p		1264784	1					
ANR	1264968	Identifier	y		1264784	1					
ANR	1264969	AndExpression	r1 . q . x == r . q . x && r1 . q . y == r . q . y		1264784	1		&&			
ANR	1264970	EqualityExpression	r1 . q . x == r . q . x		1264784	0		==			
ANR	1264971	MemberAccess	r1 . q . x		1264784	0					
ANR	1264972	MemberAccess	r1 . q		1264784	0					
ANR	1264973	Identifier	r1		1264784	0					
ANR	1264974	Identifier	q		1264784	1					
ANR	1264975	Identifier	x		1264784	1					
ANR	1264976	MemberAccess	r . q . x		1264784	1					
ANR	1264977	MemberAccess	r . q		1264784	0					
ANR	1264978	Identifier	r		1264784	0					
ANR	1264979	Identifier	q		1264784	1					
ANR	1264980	Identifier	x		1264784	1					
ANR	1264981	EqualityExpression	r1 . q . y == r . q . y		1264784	1		==			
ANR	1264982	MemberAccess	r1 . q . y		1264784	0					
ANR	1264983	MemberAccess	r1 . q		1264784	0					
ANR	1264984	Identifier	r1		1264784	0					
ANR	1264985	Identifier	q		1264784	1					
ANR	1264986	Identifier	y		1264784	1					
ANR	1264987	MemberAccess	r . q . y		1264784	1					
ANR	1264988	MemberAccess	r . q		1264784	0					
ANR	1264989	Identifier	r		1264784	0					
ANR	1264990	Identifier	q		1264784	1					
ANR	1264991	Identifier	y		1264784	1					
ANR	1264992	ExpressionStatement	pfs -> inside = true	2333:16:84355:84373	1264784	1	True				
ANR	1264993	AssignmentExpression	pfs -> inside = true		1264784	0		=			
ANR	1264994	PtrMemberAccess	pfs -> inside		1264784	0					
ANR	1264995	Identifier	pfs		1264784	0					
ANR	1264996	Identifier	inside		1264784	1					
ANR	1264997	Identifier	true		1264784	1					
ANR	1264998	ExpressionStatement	"color_stack_ptr = reserve_colors_inline ( pfs , & c , 1 )"	2335:8:84393:84444	1264784	6	True				
ANR	1264999	AssignmentExpression	"color_stack_ptr = reserve_colors_inline ( pfs , & c , 1 )"		1264784	0		=			
ANR	1265000	Identifier	color_stack_ptr		1264784	0					
ANR	1265001	CallExpression	"reserve_colors_inline ( pfs , & c , 1 )"		1264784	1					
ANR	1265002	Callee	reserve_colors_inline		1264784	0					
ANR	1265003	Identifier	reserve_colors_inline		1264784	0					
ANR	1265004	ArgumentList	pfs		1264784	1					
ANR	1265005	Argument	pfs		1264784	0					
ANR	1265006	Identifier	pfs		1264784	0					
ANR	1265007	Argument	& c		1264784	1					
ANR	1265008	UnaryOperationExpression	& c		1264784	0					
ANR	1265009	UnaryOperator	&		1264784	0					
ANR	1265010	Identifier	c		1264784	1					
ANR	1265011	Argument	1		1264784	2					
ANR	1265012	PrimaryExpression	1		1264784	0					
ANR	1265013	IfStatement	if ( color_stack_ptr == NULL )		1264784	7					
ANR	1265014	Condition	color_stack_ptr == NULL	2336:12:84458:84480	1264784	0	True				
ANR	1265015	EqualityExpression	color_stack_ptr == NULL		1264784	0		==			
ANR	1265016	Identifier	color_stack_ptr		1264784	0					
ANR	1265017	Identifier	NULL		1264784	1					
ANR	1265018	ExpressionStatement	return_error ( gs_error_unregistered )	2337:12:84495:84530	1264784	1	True				
ANR	1265019	CallExpression	return_error ( gs_error_unregistered )		1264784	0					
ANR	1265020	Callee	return_error		1264784	0					
ANR	1265021	Identifier	return_error		1264784	0					
ANR	1265022	ArgumentList	gs_error_unregistered		1264784	1					
ANR	1265023	Argument	gs_error_unregistered		1264784	0					
ANR	1265024	Identifier	gs_error_unregistered		1264784	0					
ANR	1265025	ExpressionStatement	"patch_interpolate_color ( c , c0 , c1 , pfs , 0.5 )"	2338:8:84563:84607	1264784	8	True				
ANR	1265026	CallExpression	"patch_interpolate_color ( c , c0 , c1 , pfs , 0.5 )"		1264784	0					
ANR	1265027	Callee	patch_interpolate_color		1264784	0					
ANR	1265028	Identifier	patch_interpolate_color		1264784	0					
ANR	1265029	ArgumentList	c		1264784	1					
ANR	1265030	Argument	c		1264784	0					
ANR	1265031	Identifier	c		1264784	0					
ANR	1265032	Argument	c0		1264784	1					
ANR	1265033	Identifier	c0		1264784	0					
ANR	1265034	Argument	c1		1264784	2					
ANR	1265035	Identifier	c1		1264784	0					
ANR	1265036	Argument	pfs		1264784	3					
ANR	1265037	Identifier	pfs		1264784	0					
ANR	1265038	Argument	0.5		1264784	4					
ANR	1265039	PrimaryExpression	0.5		1264784	0					
ANR	1265040	ExpressionStatement	"split_curve ( pole , q [ 0 ] , q [ 1 ] )"	2339:8:84617:84646	1264784	9	True				
ANR	1265041	CallExpression	"split_curve ( pole , q [ 0 ] , q [ 1 ] )"		1264784	0					
ANR	1265042	Callee	split_curve		1264784	0					
ANR	1265043	Identifier	split_curve		1264784	0					
ANR	1265044	ArgumentList	pole		1264784	1					
ANR	1265045	Argument	pole		1264784	0					
ANR	1265046	Identifier	pole		1264784	0					
ANR	1265047	Argument	q [ 0 ]		1264784	1					
ANR	1265048	ArrayIndexing	q [ 0 ]		1264784	0					
ANR	1265049	Identifier	q		1264784	0					
ANR	1265050	PrimaryExpression	0		1264784	1					
ANR	1265051	Argument	q [ 1 ]		1264784	2					
ANR	1265052	ArrayIndexing	q [ 1 ]		1264784	0					
ANR	1265053	Identifier	q		1264784	0					
ANR	1265054	PrimaryExpression	1		1264784	1					
ANR	1265055	ExpressionStatement	"code = fill_wedges_aux ( pfs , k / 2 , ka , q [ 0 ] , c0 , c , wedge_type )"	2340:8:84656:84719	1264784	10	True				
ANR	1265056	AssignmentExpression	"code = fill_wedges_aux ( pfs , k / 2 , ka , q [ 0 ] , c0 , c , wedge_type )"		1264784	0		=			
ANR	1265057	Identifier	code		1264784	0					
ANR	1265058	CallExpression	"fill_wedges_aux ( pfs , k / 2 , ka , q [ 0 ] , c0 , c , wedge_type )"		1264784	1					
ANR	1265059	Callee	fill_wedges_aux		1264784	0					
ANR	1265060	Identifier	fill_wedges_aux		1264784	0					
ANR	1265061	ArgumentList	pfs		1264784	1					
ANR	1265062	Argument	pfs		1264784	0					
ANR	1265063	Identifier	pfs		1264784	0					
ANR	1265064	Argument	k / 2		1264784	1					
ANR	1265065	MultiplicativeExpression	k / 2		1264784	0		/			
ANR	1265066	Identifier	k		1264784	0					
ANR	1265067	PrimaryExpression	2		1264784	1					
ANR	1265068	Argument	ka		1264784	2					
ANR	1265069	Identifier	ka		1264784	0					
ANR	1265070	Argument	q [ 0 ]		1264784	3					
ANR	1265071	ArrayIndexing	q [ 0 ]		1264784	0					
ANR	1265072	Identifier	q		1264784	0					
ANR	1265073	PrimaryExpression	0		1264784	1					
ANR	1265074	Argument	c0		1264784	4					
ANR	1265075	Identifier	c0		1264784	0					
ANR	1265076	Argument	c		1264784	5					
ANR	1265077	Identifier	c		1264784	0					
ANR	1265078	Argument	wedge_type		1264784	6					
ANR	1265079	Identifier	wedge_type		1264784	0					
ANR	1265080	IfStatement	if ( code >= 0 )		1264784	11					
ANR	1265081	Condition	code >= 0	2341:12:84733:84741	1264784	0	True				
ANR	1265082	RelationalExpression	code >= 0		1264784	0		>=			
ANR	1265083	Identifier	code		1264784	0					
ANR	1265084	PrimaryExpression	0		1264784	1					
ANR	1265085	ExpressionStatement	"code = fill_wedges_aux ( pfs , k / 2 , ka , q [ 1 ] , c , c1 , wedge_type )"	2342:12:84756:84819	1264784	1	True				
ANR	1265086	AssignmentExpression	"code = fill_wedges_aux ( pfs , k / 2 , ka , q [ 1 ] , c , c1 , wedge_type )"		1264784	0		=			
ANR	1265087	Identifier	code		1264784	0					
ANR	1265088	CallExpression	"fill_wedges_aux ( pfs , k / 2 , ka , q [ 1 ] , c , c1 , wedge_type )"		1264784	1					
ANR	1265089	Callee	fill_wedges_aux		1264784	0					
ANR	1265090	Identifier	fill_wedges_aux		1264784	0					
ANR	1265091	ArgumentList	pfs		1264784	1					
ANR	1265092	Argument	pfs		1264784	0					
ANR	1265093	Identifier	pfs		1264784	0					
ANR	1265094	Argument	k / 2		1264784	1					
ANR	1265095	MultiplicativeExpression	k / 2		1264784	0		/			
ANR	1265096	Identifier	k		1264784	0					
ANR	1265097	PrimaryExpression	2		1264784	1					
ANR	1265098	Argument	ka		1264784	2					
ANR	1265099	Identifier	ka		1264784	0					
ANR	1265100	Argument	q [ 1 ]		1264784	3					
ANR	1265101	ArrayIndexing	q [ 1 ]		1264784	0					
ANR	1265102	Identifier	q		1264784	0					
ANR	1265103	PrimaryExpression	1		1264784	1					
ANR	1265104	Argument	c		1264784	4					
ANR	1265105	Identifier	c		1264784	0					
ANR	1265106	Argument	c1		1264784	5					
ANR	1265107	Identifier	c1		1264784	0					
ANR	1265108	Argument	wedge_type		1264784	6					
ANR	1265109	Identifier	wedge_type		1264784	0					
ANR	1265110	ExpressionStatement	"release_colors_inline ( pfs , color_stack_ptr , 1 )"	2343:8:84829:84875	1264784	12	True				
ANR	1265111	CallExpression	"release_colors_inline ( pfs , color_stack_ptr , 1 )"		1264784	0					
ANR	1265112	Callee	release_colors_inline		1264784	0					
ANR	1265113	Identifier	release_colors_inline		1264784	0					
ANR	1265114	ArgumentList	pfs		1264784	1					
ANR	1265115	Argument	pfs		1264784	0					
ANR	1265116	Identifier	pfs		1264784	0					
ANR	1265117	Argument	color_stack_ptr		1264784	1					
ANR	1265118	Identifier	color_stack_ptr		1264784	0					
ANR	1265119	Argument	1		1264784	2					
ANR	1265120	PrimaryExpression	1		1264784	0					
ANR	1265121	ExpressionStatement	pfs -> inside = save_inside	2344:8:84885:84910	1264784	13	True				
ANR	1265122	AssignmentExpression	pfs -> inside = save_inside		1264784	0		=			
ANR	1265123	PtrMemberAccess	pfs -> inside		1264784	0					
ANR	1265124	Identifier	pfs		1264784	0					
ANR	1265125	Identifier	inside		1264784	1					
ANR	1265126	Identifier	save_inside		1264784	1					
ANR	1265127	ReturnStatement	return code ;	2345:8:84920:84931	1264784	14	True				
ANR	1265128	Identifier	code		1264784	0					
ANR	1265129	ElseStatement	else		1264784	0					
ANR	1265130	CompoundStatement		37:11:1310:1310	1264784	0					
ANR	1265131	IfStatement	if ( INTERPATCH_PADDING && ( wedge_type & interpatch_padding ) )		1264784	0					
ANR	1265132	Condition	INTERPATCH_PADDING && ( wedge_type & interpatch_padding )	2347:12:84958:85012	1264784	0	True				
ANR	1265133	AndExpression	INTERPATCH_PADDING && ( wedge_type & interpatch_padding )		1264784	0		&&			
ANR	1265134	Identifier	INTERPATCH_PADDING		1264784	0					
ANR	1265135	BitAndExpression	wedge_type & interpatch_padding		1264784	1		&			
ANR	1265136	Identifier	wedge_type		1264784	0					
ANR	1265137	Identifier	interpatch_padding		1264784	1					
ANR	1265138	CompoundStatement		38:69:1381:1381	1264784	1					
ANR	1265139	ExpressionStatement	"code = mesh_padding ( pfs , & pole [ 0 ] , & pole [ 3 ] , c0 , c1 )"	2348:12:85029:85081	1264784	0	True				
ANR	1265140	AssignmentExpression	"code = mesh_padding ( pfs , & pole [ 0 ] , & pole [ 3 ] , c0 , c1 )"		1264784	0		=			
ANR	1265141	Identifier	code		1264784	0					
ANR	1265142	CallExpression	"mesh_padding ( pfs , & pole [ 0 ] , & pole [ 3 ] , c0 , c1 )"		1264784	1					
ANR	1265143	Callee	mesh_padding		1264784	0					
ANR	1265144	Identifier	mesh_padding		1264784	0					
ANR	1265145	ArgumentList	pfs		1264784	1					
ANR	1265146	Argument	pfs		1264784	0					
ANR	1265147	Identifier	pfs		1264784	0					
ANR	1265148	Argument	& pole [ 0 ]		1264784	1					
ANR	1265149	UnaryOperationExpression	& pole [ 0 ]		1264784	0					
ANR	1265150	UnaryOperator	&		1264784	0					
ANR	1265151	ArrayIndexing	pole [ 0 ]		1264784	1					
ANR	1265152	Identifier	pole		1264784	0					
ANR	1265153	PrimaryExpression	0		1264784	1					
ANR	1265154	Argument	& pole [ 3 ]		1264784	2					
ANR	1265155	UnaryOperationExpression	& pole [ 3 ]		1264784	0					
ANR	1265156	UnaryOperator	&		1264784	0					
ANR	1265157	ArrayIndexing	pole [ 3 ]		1264784	1					
ANR	1265158	Identifier	pole		1264784	0					
ANR	1265159	PrimaryExpression	3		1264784	1					
ANR	1265160	Argument	c0		1264784	3					
ANR	1265161	Identifier	c0		1264784	0					
ANR	1265162	Argument	c1		1264784	4					
ANR	1265163	Identifier	c1		1264784	0					
ANR	1265164	IfStatement	if ( code < 0 )		1264784	1					
ANR	1265165	Condition	code < 0	2349:16:85099:85106	1264784	0	True				
ANR	1265166	RelationalExpression	code < 0		1264784	0		<			
ANR	1265167	Identifier	code		1264784	0					
ANR	1265168	PrimaryExpression	0		1264784	1					
ANR	1265169	ReturnStatement	return code ;	2350:16:85125:85136	1264784	1	True				
ANR	1265170	Identifier	code		1264784	0					
ANR	1265171	IfStatement	if ( ka >= 2 && ( wedge_type & inpatch_wedge ) )		1264784	1					
ANR	1265172	Condition	ka >= 2 && ( wedge_type & inpatch_wedge )	2352:12:85160:85198	1264784	0	True				
ANR	1265173	AndExpression	ka >= 2 && ( wedge_type & inpatch_wedge )		1264784	0		&&			
ANR	1265174	RelationalExpression	ka >= 2		1264784	0		>=			
ANR	1265175	Identifier	ka		1264784	0					
ANR	1265176	PrimaryExpression	2		1264784	1					
ANR	1265177	BitAndExpression	wedge_type & inpatch_wedge		1264784	1		&			
ANR	1265178	Identifier	wedge_type		1264784	0					
ANR	1265179	Identifier	inpatch_wedge		1264784	1					
ANR	1265180	ReturnStatement	"return wedge_by_triangles ( pfs , ka , pole , c0 , c1 ) ;"	2353:12:85213:85261	1264784	1	True				
ANR	1265181	CallExpression	"wedge_by_triangles ( pfs , ka , pole , c0 , c1 )"		1264784	0					
ANR	1265182	Callee	wedge_by_triangles		1264784	0					
ANR	1265183	Identifier	wedge_by_triangles		1264784	0					
ANR	1265184	ArgumentList	pfs		1264784	1					
ANR	1265185	Argument	pfs		1264784	0					
ANR	1265186	Identifier	pfs		1264784	0					
ANR	1265187	Argument	ka		1264784	1					
ANR	1265188	Identifier	ka		1264784	0					
ANR	1265189	Argument	pole		1264784	2					
ANR	1265190	Identifier	pole		1264784	0					
ANR	1265191	Argument	c0		1264784	3					
ANR	1265192	Identifier	c0		1264784	0					
ANR	1265193	Argument	c1		1264784	4					
ANR	1265194	Identifier	c1		1264784	0					
ANR	1265195	ReturnStatement	return 0 ;	2354:8:85271:85279	1264784	2	True				
ANR	1265196	PrimaryExpression	0		1264784	0					
ANR	1265197	ReturnType	static int		1264784	1					
ANR	1265198	Identifier	fill_wedges_aux		1264784	2					
ANR	1265199	ParameterList	"patch_fill_state_t * pfs , int k , int ka , const gs_fixed_point pole [ 4 ] , const patch_color_t * c0 , const patch_color_t * c1 , int wedge_type"		1264784	3					
ANR	1265200	Parameter	patch_fill_state_t * pfs	2307:16:83481:83503	1264784	0	True				
ANR	1265201	ParameterType	patch_fill_state_t *		1264784	0					
ANR	1265202	Identifier	pfs		1264784	1					
ANR	1265203	Parameter	int k	2307:41:83506:83510	1264784	1	True				
ANR	1265204	ParameterType	int		1264784	0					
ANR	1265205	Identifier	k		1264784	1					
ANR	1265206	Parameter	int ka	2307:48:83513:83518	1264784	2	True				
ANR	1265207	ParameterType	int		1264784	0					
ANR	1265208	Identifier	ka		1264784	1					
ANR	1265209	Parameter	const gs_fixed_point pole [ 4 ]	2308:8:83529:83556	1264784	3	True				
ANR	1265210	ParameterType	const gs_fixed_point [ 4 ]		1264784	0					
ANR	1265211	Identifier	pole		1264784	1					
ANR	1265212	Parameter	const patch_color_t * c0	2308:38:83559:83581	1264784	4	True				
ANR	1265213	ParameterType	const patch_color_t *		1264784	0					
ANR	1265214	Identifier	c0		1264784	1					
ANR	1265215	Parameter	const patch_color_t * c1	2308:63:83584:83606	1264784	5	True				
ANR	1265216	ParameterType	const patch_color_t *		1264784	0					
ANR	1265217	Identifier	c1		1264784	1					
ANR	1265218	Parameter	int wedge_type	2309:8:83617:83630	1264784	6	True				
ANR	1265219	ParameterType	int		1264784	0					
ANR	1265220	Identifier	wedge_type		1264784	1					
ANR	1265221	CFGEntryNode	ENTRY		1264784		True				
ANR	1265222	CFGExitNode	EXIT		1264784		True				
ANR	1265223	Symbol	gs_error_unregistered		1264784						
ANR	1265224	Symbol	code		1264784						
ANR	1265225	Symbol	r . q		1264784						
ANR	1265226	Symbol	r . p		1264784						
ANR	1265227	Symbol	interpatch_padding		1264784						
ANR	1265228	Symbol	pole		1264784						
ANR	1265229	Symbol	fill_wedges_aux		1264784						
ANR	1265230	Symbol	r1 . q		1264784						
ANR	1265231	Symbol	inpatch_wedge		1264784						
ANR	1265232	Symbol	ka		1264784						
ANR	1265233	Symbol	r . q . x		1264784						
ANR	1265234	Symbol	r1 . p		1264784						
ANR	1265235	Symbol	reserve_colors_inline		1264784						
ANR	1265236	Symbol	mesh_padding		1264784						
ANR	1265237	Symbol	r . q . y		1264784						
ANR	1265238	Symbol	INTERPATCH_PADDING		1264784						
ANR	1265239	Symbol	wedge_type		1264784						
ANR	1265240	Symbol	pfs -> rect		1264784						
ANR	1265241	Symbol	r1 . p . y		1264784						
ANR	1265242	Symbol	c		1264784						
ANR	1265243	Symbol	NULL		1264784						
ANR	1265244	Symbol	wedge_by_triangles		1264784						
ANR	1265245	Symbol	r . p . x		1264784						
ANR	1265246	Symbol	pfs -> inside		1264784						
ANR	1265247	Symbol	r . p . y		1264784						
ANR	1265248	Symbol	r1 . p . x		1264784						
ANR	1265249	Symbol	* pfs		1264784						
ANR	1265250	Symbol	& c		1264784						
ANR	1265251	Symbol	k		1264784						
ANR	1265252	Symbol	save_inside		1264784						
ANR	1265253	Symbol	c0		1264784						
ANR	1265254	Symbol	c1		1264784						
ANR	1265255	Symbol	r1 . q . x		1264784						
ANR	1265256	Symbol	q		1264784						
ANR	1265257	Symbol	r1 . q . y		1264784						
ANR	1265258	Symbol	r		1264784						
ANR	1265259	Symbol	color_stack_ptr		1264784						
ANR	1265260	Symbol	& r		1264784						
ANR	1265261	Symbol	true		1264784						
ANR	1265262	Symbol	* q		1264784						
ANR	1265263	Symbol	pfs		1264784						
ANR	1265264	Symbol	r1		1264784						
ANR	1265265	Function	fill_wedges	2358:0:85290:86004							
ANR	1265266	FunctionDef	"fill_wedges (patch_fill_state_t * pfs , int k0 , int k1 , const gs_fixed_point * pole , int pole_step , const patch_color_t * c0 , const patch_color_t * c1 , int wedge_type)"		1265265	0					
ANR	1265267	CompoundStatement		2363:0:85487:86004	1265265	0					
ANR	1265268	IdentifierDeclStatement	gs_fixed_point p [ 4 ] ;	2366:4:85595:85614	1265265	0	True				
ANR	1265269	IdentifierDecl	p [ 4 ]		1265265	0					
ANR	1265270	IdentifierDeclType	gs_fixed_point [ 4 ]		1265265	0					
ANR	1265271	Identifier	p		1265265	1					
ANR	1265272	PrimaryExpression	4		1265265	2					
ANR	1265273	IfStatement	if ( ! ( wedge_type & interpatch_padding ) && k0 == k1 )		1265265	1					
ANR	1265274	Condition	! ( wedge_type & interpatch_padding ) && k0 == k1	2368:8:85625:85670	1265265	0	True				
ANR	1265275	AndExpression	! ( wedge_type & interpatch_padding ) && k0 == k1		1265265	0		&&			
ANR	1265276	UnaryOperationExpression	! ( wedge_type & interpatch_padding )		1265265	0					
ANR	1265277	UnaryOperator	!		1265265	0					
ANR	1265278	BitAndExpression	wedge_type & interpatch_padding		1265265	1		&			
ANR	1265279	Identifier	wedge_type		1265265	0					
ANR	1265280	Identifier	interpatch_padding		1265265	1					
ANR	1265281	EqualityExpression	k0 == k1		1265265	1		==			
ANR	1265282	Identifier	k0		1265265	0					
ANR	1265283	Identifier	k1		1265265	1					
ANR	1265284	ReturnStatement	return 0 ;	2369:8:85681:85689	1265265	1	True				
ANR	1265285	PrimaryExpression	0		1265265	0					
ANR	1265286	IfStatement	if ( k0 > k1 )		1265265	2					
ANR	1265287	Condition	k0 > k1	2370:8:85727:85733	1265265	0	True				
ANR	1265288	RelationalExpression	k0 > k1		1265265	0		>			
ANR	1265289	Identifier	k0		1265265	0					
ANR	1265290	Identifier	k1		1265265	1					
ANR	1265291	CompoundStatement		8:17:248:248	1265265	1					
ANR	1265292	ExpressionStatement	k0 ^= k1	2371:8:85787:85795	1265265	0	True				
ANR	1265293	AssignmentExpression	k0 ^= k1		1265265	0		^=			
ANR	1265294	Identifier	k0		1265265	0					
ANR	1265295	Identifier	k1		1265265	1					
ANR	1265296	ExpressionStatement	k1 ^= k0	2371:18:85797:85805	1265265	1	True				
ANR	1265297	AssignmentExpression	k1 ^= k0		1265265	0		^=			
ANR	1265298	Identifier	k1		1265265	0					
ANR	1265299	Identifier	k0		1265265	1					
ANR	1265300	ExpressionStatement	k0 ^= k1	2371:28:85807:85815	1265265	2	True				
ANR	1265301	AssignmentExpression	k0 ^= k1		1265265	0		^=			
ANR	1265302	Identifier	k0		1265265	0					
ANR	1265303	Identifier	k1		1265265	1					
ANR	1265304	ExpressionStatement	p [ 0 ] = pole [ 0 ]	2373:4:85827:85841	1265265	3	True				
ANR	1265305	AssignmentExpression	p [ 0 ] = pole [ 0 ]		1265265	0		=			
ANR	1265306	ArrayIndexing	p [ 0 ]		1265265	0					
ANR	1265307	Identifier	p		1265265	0					
ANR	1265308	PrimaryExpression	0		1265265	1					
ANR	1265309	ArrayIndexing	pole [ 0 ]		1265265	1					
ANR	1265310	Identifier	pole		1265265	0					
ANR	1265311	PrimaryExpression	0		1265265	1					
ANR	1265312	ExpressionStatement	p [ 1 ] = pole [ pole_step ]	2374:4:85847:85869	1265265	4	True				
ANR	1265313	AssignmentExpression	p [ 1 ] = pole [ pole_step ]		1265265	0		=			
ANR	1265314	ArrayIndexing	p [ 1 ]		1265265	0					
ANR	1265315	Identifier	p		1265265	0					
ANR	1265316	PrimaryExpression	1		1265265	1					
ANR	1265317	ArrayIndexing	pole [ pole_step ]		1265265	1					
ANR	1265318	Identifier	pole		1265265	0					
ANR	1265319	Identifier	pole_step		1265265	1					
ANR	1265320	ExpressionStatement	p [ 2 ] = pole [ pole_step * 2 ]	2375:4:85875:85901	1265265	5	True				
ANR	1265321	AssignmentExpression	p [ 2 ] = pole [ pole_step * 2 ]		1265265	0		=			
ANR	1265322	ArrayIndexing	p [ 2 ]		1265265	0					
ANR	1265323	Identifier	p		1265265	0					
ANR	1265324	PrimaryExpression	2		1265265	1					
ANR	1265325	ArrayIndexing	pole [ pole_step * 2 ]		1265265	1					
ANR	1265326	Identifier	pole		1265265	0					
ANR	1265327	MultiplicativeExpression	pole_step * 2		1265265	1		*			
ANR	1265328	Identifier	pole_step		1265265	0					
ANR	1265329	PrimaryExpression	2		1265265	1					
ANR	1265330	ExpressionStatement	p [ 3 ] = pole [ pole_step * 3 ]	2376:4:85907:85933	1265265	6	True				
ANR	1265331	AssignmentExpression	p [ 3 ] = pole [ pole_step * 3 ]		1265265	0		=			
ANR	1265332	ArrayIndexing	p [ 3 ]		1265265	0					
ANR	1265333	Identifier	p		1265265	0					
ANR	1265334	PrimaryExpression	3		1265265	1					
ANR	1265335	ArrayIndexing	pole [ pole_step * 3 ]		1265265	1					
ANR	1265336	Identifier	pole		1265265	0					
ANR	1265337	MultiplicativeExpression	pole_step * 3		1265265	1		*			
ANR	1265338	Identifier	pole_step		1265265	0					
ANR	1265339	PrimaryExpression	3		1265265	1					
ANR	1265340	ReturnStatement	"return fill_wedges_aux ( pfs , k0 , k1 / k0 , p , c0 , c1 , wedge_type ) ;"	2377:4:85939:86002	1265265	7	True				
ANR	1265341	CallExpression	"fill_wedges_aux ( pfs , k0 , k1 / k0 , p , c0 , c1 , wedge_type )"		1265265	0					
ANR	1265342	Callee	fill_wedges_aux		1265265	0					
ANR	1265343	Identifier	fill_wedges_aux		1265265	0					
ANR	1265344	ArgumentList	pfs		1265265	1					
ANR	1265345	Argument	pfs		1265265	0					
ANR	1265346	Identifier	pfs		1265265	0					
ANR	1265347	Argument	k0		1265265	1					
ANR	1265348	Identifier	k0		1265265	0					
ANR	1265349	Argument	k1 / k0		1265265	2					
ANR	1265350	MultiplicativeExpression	k1 / k0		1265265	0		/			
ANR	1265351	Identifier	k1		1265265	0					
ANR	1265352	Identifier	k0		1265265	1					
ANR	1265353	Argument	p		1265265	3					
ANR	1265354	Identifier	p		1265265	0					
ANR	1265355	Argument	c0		1265265	4					
ANR	1265356	Identifier	c0		1265265	0					
ANR	1265357	Argument	c1		1265265	5					
ANR	1265358	Identifier	c1		1265265	0					
ANR	1265359	Argument	wedge_type		1265265	6					
ANR	1265360	Identifier	wedge_type		1265265	0					
ANR	1265361	ReturnType	static int		1265265	1					
ANR	1265362	Identifier	fill_wedges		1265265	2					
ANR	1265363	ParameterList	"patch_fill_state_t * pfs , int k0 , int k1 , const gs_fixed_point * pole , int pole_step , const patch_color_t * c0 , const patch_color_t * c1 , int wedge_type"		1265265	3					
ANR	1265364	Parameter	patch_fill_state_t * pfs	2359:12:85313:85335	1265265	0	True				
ANR	1265365	ParameterType	patch_fill_state_t *		1265265	0					
ANR	1265366	Identifier	pfs		1265265	1					
ANR	1265367	Parameter	int k0	2359:37:85338:85343	1265265	1	True				
ANR	1265368	ParameterType	int		1265265	0					
ANR	1265369	Identifier	k0		1265265	1					
ANR	1265370	Parameter	int k1	2359:45:85346:85351	1265265	2	True				
ANR	1265371	ParameterType	int		1265265	0					
ANR	1265372	Identifier	k1		1265265	1					
ANR	1265373	Parameter	const gs_fixed_point * pole	2360:8:85362:85387	1265265	3	True				
ANR	1265374	ParameterType	const gs_fixed_point *		1265265	0					
ANR	1265375	Identifier	pole		1265265	1					
ANR	1265376	Parameter	int pole_step	2360:36:85390:85402	1265265	4	True				
ANR	1265377	ParameterType	int		1265265	0					
ANR	1265378	Identifier	pole_step		1265265	1					
ANR	1265379	Parameter	const patch_color_t * c0	2361:8:85413:85435	1265265	5	True				
ANR	1265380	ParameterType	const patch_color_t *		1265265	0					
ANR	1265381	Identifier	c0		1265265	1					
ANR	1265382	Parameter	const patch_color_t * c1	2361:33:85438:85460	1265265	6	True				
ANR	1265383	ParameterType	const patch_color_t *		1265265	0					
ANR	1265384	Identifier	c1		1265265	1					
ANR	1265385	Parameter	int wedge_type	2362:8:85471:85484	1265265	7	True				
ANR	1265386	ParameterType	int		1265265	0					
ANR	1265387	Identifier	wedge_type		1265265	1					
ANR	1265388	CFGEntryNode	ENTRY		1265265		True				
ANR	1265389	CFGExitNode	EXIT		1265265		True				
ANR	1265390	Symbol	wedge_type		1265265						
ANR	1265391	Symbol	k0		1265265						
ANR	1265392	Symbol	k1		1265265						
ANR	1265393	Symbol	interpatch_padding		1265265						
ANR	1265394	Symbol	pole		1265265						
ANR	1265395	Symbol	* pole_step		1265265						
ANR	1265396	Symbol	pole_step		1265265						
ANR	1265397	Symbol	c0		1265265						
ANR	1265398	Symbol	* pole		1265265						
ANR	1265399	Symbol	c1		1265265						
ANR	1265400	Symbol	p		1265265						
ANR	1265401	Symbol	fill_wedges_aux		1265265						
ANR	1265402	Symbol	* p		1265265						
ANR	1265403	Symbol	pfs		1265265						
ANR	1265404	Function	make_vertices	2380:0:86007:86194							
ANR	1265405	FunctionDef	"make_vertices (gs_fixed_point q [ 4 ] , const quadrangle_patch * p)"		1265404	0					
ANR	1265406	CompoundStatement		2382:0:86088:86194	1265404	0					
ANR	1265407	ExpressionStatement	q [ 0 ] = p -> p [ 0 ] [ 0 ] -> p	2383:4:86094:86114	1265404	0	True				
ANR	1265408	AssignmentExpression	q [ 0 ] = p -> p [ 0 ] [ 0 ] -> p		1265404	0		=			
ANR	1265409	ArrayIndexing	q [ 0 ]		1265404	0					
ANR	1265410	Identifier	q		1265404	0					
ANR	1265411	PrimaryExpression	0		1265404	1					
ANR	1265412	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> p		1265404	1					
ANR	1265413	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1265404	0					
ANR	1265414	ArrayIndexing	p -> p [ 0 ]		1265404	0					
ANR	1265415	PtrMemberAccess	p -> p		1265404	0					
ANR	1265416	Identifier	p		1265404	0					
ANR	1265417	Identifier	p		1265404	1					
ANR	1265418	PrimaryExpression	0		1265404	1					
ANR	1265419	PrimaryExpression	0		1265404	1					
ANR	1265420	Identifier	p		1265404	1					
ANR	1265421	ExpressionStatement	q [ 1 ] = p -> p [ 0 ] [ 1 ] -> p	2384:4:86120:86140	1265404	1	True				
ANR	1265422	AssignmentExpression	q [ 1 ] = p -> p [ 0 ] [ 1 ] -> p		1265404	0		=			
ANR	1265423	ArrayIndexing	q [ 1 ]		1265404	0					
ANR	1265424	Identifier	q		1265404	0					
ANR	1265425	PrimaryExpression	1		1265404	1					
ANR	1265426	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> p		1265404	1					
ANR	1265427	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1265404	0					
ANR	1265428	ArrayIndexing	p -> p [ 0 ]		1265404	0					
ANR	1265429	PtrMemberAccess	p -> p		1265404	0					
ANR	1265430	Identifier	p		1265404	0					
ANR	1265431	Identifier	p		1265404	1					
ANR	1265432	PrimaryExpression	0		1265404	1					
ANR	1265433	PrimaryExpression	1		1265404	1					
ANR	1265434	Identifier	p		1265404	1					
ANR	1265435	ExpressionStatement	q [ 2 ] = p -> p [ 1 ] [ 1 ] -> p	2385:4:86146:86166	1265404	2	True				
ANR	1265436	AssignmentExpression	q [ 2 ] = p -> p [ 1 ] [ 1 ] -> p		1265404	0		=			
ANR	1265437	ArrayIndexing	q [ 2 ]		1265404	0					
ANR	1265438	Identifier	q		1265404	0					
ANR	1265439	PrimaryExpression	2		1265404	1					
ANR	1265440	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> p		1265404	1					
ANR	1265441	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1265404	0					
ANR	1265442	ArrayIndexing	p -> p [ 1 ]		1265404	0					
ANR	1265443	PtrMemberAccess	p -> p		1265404	0					
ANR	1265444	Identifier	p		1265404	0					
ANR	1265445	Identifier	p		1265404	1					
ANR	1265446	PrimaryExpression	1		1265404	1					
ANR	1265447	PrimaryExpression	1		1265404	1					
ANR	1265448	Identifier	p		1265404	1					
ANR	1265449	ExpressionStatement	q [ 3 ] = p -> p [ 1 ] [ 0 ] -> p	2386:4:86172:86192	1265404	3	True				
ANR	1265450	AssignmentExpression	q [ 3 ] = p -> p [ 1 ] [ 0 ] -> p		1265404	0		=			
ANR	1265451	ArrayIndexing	q [ 3 ]		1265404	0					
ANR	1265452	Identifier	q		1265404	0					
ANR	1265453	PrimaryExpression	3		1265404	1					
ANR	1265454	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> p		1265404	1					
ANR	1265455	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1265404	0					
ANR	1265456	ArrayIndexing	p -> p [ 1 ]		1265404	0					
ANR	1265457	PtrMemberAccess	p -> p		1265404	0					
ANR	1265458	Identifier	p		1265404	0					
ANR	1265459	Identifier	p		1265404	1					
ANR	1265460	PrimaryExpression	1		1265404	1					
ANR	1265461	PrimaryExpression	0		1265404	1					
ANR	1265462	Identifier	p		1265404	1					
ANR	1265463	ReturnType	static inline void		1265404	1					
ANR	1265464	Identifier	make_vertices		1265404	2					
ANR	1265465	ParameterList	"gs_fixed_point q [ 4 ] , const quadrangle_patch * p"		1265404	3					
ANR	1265466	Parameter	gs_fixed_point q [ 4 ]	2381:14:86040:86058	1265404	0	True				
ANR	1265467	ParameterType	gs_fixed_point [ 4 ]		1265404	0					
ANR	1265468	Identifier	q		1265404	1					
ANR	1265469	Parameter	const quadrangle_patch * p	2381:35:86061:86085	1265404	1	True				
ANR	1265470	ParameterType	const quadrangle_patch *		1265404	0					
ANR	1265471	Identifier	p		1265404	1					
ANR	1265472	CFGEntryNode	ENTRY		1265404		True				
ANR	1265473	CFGExitNode	EXIT		1265404		True				
ANR	1265474	Symbol	p -> p		1265404						
ANR	1265475	Symbol	* * * * p		1265404						
ANR	1265476	Symbol	* p -> p		1265404						
ANR	1265477	Symbol	p -> p [ 0 ] [ 0 ] -> p		1265404						
ANR	1265478	Symbol	p		1265404						
ANR	1265479	Symbol	q		1265404						
ANR	1265480	Symbol	* * * p		1265404						
ANR	1265481	Symbol	p -> p [ 0 ] [ 1 ] -> p		1265404						
ANR	1265482	Symbol	p -> p [ 1 ] [ 1 ] -> p		1265404						
ANR	1265483	Symbol	* * * p -> p		1265404						
ANR	1265484	Symbol	p -> p [ 1 ] [ 0 ] -> p		1265404						
ANR	1265485	Symbol	* * p -> p		1265404						
ANR	1265486	Symbol	* p		1265404						
ANR	1265487	Symbol	* q		1265404						
ANR	1265488	Symbol	* * p		1265404						
ANR	1265489	Function	wrap_vertices_by_y	2389:0:86197:86572							
ANR	1265490	FunctionDef	"wrap_vertices_by_y (gs_fixed_point q [ 4 ] , const gs_fixed_point s [ 4 ])"		1265489	0					
ANR	1265491	CompoundStatement		2391:0:86283:86572	1265489	0					
ANR	1265492	IdentifierDeclStatement	fixed y = s [ 0 ] . y ;	2392:4:86289:86305	1265489	0	True				
ANR	1265493	IdentifierDecl	y = s [ 0 ] . y		1265489	0					
ANR	1265494	IdentifierDeclType	fixed		1265489	0					
ANR	1265495	Identifier	y		1265489	1					
ANR	1265496	AssignmentExpression	y = s [ 0 ] . y		1265489	2		=			
ANR	1265497	Identifier	y		1265489	0					
ANR	1265498	MemberAccess	s [ 0 ] . y		1265489	1					
ANR	1265499	ArrayIndexing	s [ 0 ]		1265489	0					
ANR	1265500	Identifier	s		1265489	0					
ANR	1265501	PrimaryExpression	0		1265489	1					
ANR	1265502	Identifier	y		1265489	1					
ANR	1265503	IdentifierDeclStatement	int i = 0 ;	2393:4:86311:86320	1265489	1	True				
ANR	1265504	IdentifierDecl	i = 0		1265489	0					
ANR	1265505	IdentifierDeclType	int		1265489	0					
ANR	1265506	Identifier	i		1265489	1					
ANR	1265507	AssignmentExpression	i = 0		1265489	2		=			
ANR	1265508	Identifier	i		1265489	0					
ANR	1265509	PrimaryExpression	0		1265489	1					
ANR	1265510	IfStatement	if ( y > s [ 1 ] . y )		1265489	2					
ANR	1265511	Condition	y > s [ 1 ] . y	2395:8:86331:86340	1265489	0	True				
ANR	1265512	RelationalExpression	y > s [ 1 ] . y		1265489	0		>			
ANR	1265513	Identifier	y		1265489	0					
ANR	1265514	MemberAccess	s [ 1 ] . y		1265489	1					
ANR	1265515	ArrayIndexing	s [ 1 ]		1265489	0					
ANR	1265516	Identifier	s		1265489	0					
ANR	1265517	PrimaryExpression	1		1265489	1					
ANR	1265518	Identifier	y		1265489	1					
ANR	1265519	ExpressionStatement	"i = 1 , y = s [ 1 ] . y"	2396:8:86351:86368	1265489	1	True				
ANR	1265520	Expression	"i = 1 , y = s [ 1 ] . y"		1265489	0					
ANR	1265521	AssignmentExpression	i = 1		1265489	0		=			
ANR	1265522	Identifier	i		1265489	0					
ANR	1265523	PrimaryExpression	1		1265489	1					
ANR	1265524	AssignmentExpression	y = s [ 1 ] . y		1265489	1		=			
ANR	1265525	Identifier	y		1265489	0					
ANR	1265526	MemberAccess	s [ 1 ] . y		1265489	1					
ANR	1265527	ArrayIndexing	s [ 1 ]		1265489	0					
ANR	1265528	Identifier	s		1265489	0					
ANR	1265529	PrimaryExpression	1		1265489	1					
ANR	1265530	Identifier	y		1265489	1					
ANR	1265531	IfStatement	if ( y > s [ 2 ] . y )		1265489	3					
ANR	1265532	Condition	y > s [ 2 ] . y	2397:8:86378:86387	1265489	0	True				
ANR	1265533	RelationalExpression	y > s [ 2 ] . y		1265489	0		>			
ANR	1265534	Identifier	y		1265489	0					
ANR	1265535	MemberAccess	s [ 2 ] . y		1265489	1					
ANR	1265536	ArrayIndexing	s [ 2 ]		1265489	0					
ANR	1265537	Identifier	s		1265489	0					
ANR	1265538	PrimaryExpression	2		1265489	1					
ANR	1265539	Identifier	y		1265489	1					
ANR	1265540	ExpressionStatement	"i = 2 , y = s [ 2 ] . y"	2398:8:86398:86415	1265489	1	True				
ANR	1265541	Expression	"i = 2 , y = s [ 2 ] . y"		1265489	0					
ANR	1265542	AssignmentExpression	i = 2		1265489	0		=			
ANR	1265543	Identifier	i		1265489	0					
ANR	1265544	PrimaryExpression	2		1265489	1					
ANR	1265545	AssignmentExpression	y = s [ 2 ] . y		1265489	1		=			
ANR	1265546	Identifier	y		1265489	0					
ANR	1265547	MemberAccess	s [ 2 ] . y		1265489	1					
ANR	1265548	ArrayIndexing	s [ 2 ]		1265489	0					
ANR	1265549	Identifier	s		1265489	0					
ANR	1265550	PrimaryExpression	2		1265489	1					
ANR	1265551	Identifier	y		1265489	1					
ANR	1265552	IfStatement	if ( y > s [ 3 ] . y )		1265489	4					
ANR	1265553	Condition	y > s [ 3 ] . y	2399:8:86425:86434	1265489	0	True				
ANR	1265554	RelationalExpression	y > s [ 3 ] . y		1265489	0		>			
ANR	1265555	Identifier	y		1265489	0					
ANR	1265556	MemberAccess	s [ 3 ] . y		1265489	1					
ANR	1265557	ArrayIndexing	s [ 3 ]		1265489	0					
ANR	1265558	Identifier	s		1265489	0					
ANR	1265559	PrimaryExpression	3		1265489	1					
ANR	1265560	Identifier	y		1265489	1					
ANR	1265561	ExpressionStatement	"i = 3 , y = s [ 3 ] . y"	2400:8:86445:86462	1265489	1	True				
ANR	1265562	Expression	"i = 3 , y = s [ 3 ] . y"		1265489	0					
ANR	1265563	AssignmentExpression	i = 3		1265489	0		=			
ANR	1265564	Identifier	i		1265489	0					
ANR	1265565	PrimaryExpression	3		1265489	1					
ANR	1265566	AssignmentExpression	y = s [ 3 ] . y		1265489	1		=			
ANR	1265567	Identifier	y		1265489	0					
ANR	1265568	MemberAccess	s [ 3 ] . y		1265489	1					
ANR	1265569	ArrayIndexing	s [ 3 ]		1265489	0					
ANR	1265570	Identifier	s		1265489	0					
ANR	1265571	PrimaryExpression	3		1265489	1					
ANR	1265572	Identifier	y		1265489	1					
ANR	1265573	ExpressionStatement	q [ 0 ] = s [ ( i + 0 ) % 4 ]	2401:4:86468:86489	1265489	5	True				
ANR	1265574	AssignmentExpression	q [ 0 ] = s [ ( i + 0 ) % 4 ]		1265489	0		=			
ANR	1265575	ArrayIndexing	q [ 0 ]		1265489	0					
ANR	1265576	Identifier	q		1265489	0					
ANR	1265577	PrimaryExpression	0		1265489	1					
ANR	1265578	ArrayIndexing	s [ ( i + 0 ) % 4 ]		1265489	1					
ANR	1265579	Identifier	s		1265489	0					
ANR	1265580	MultiplicativeExpression	( i + 0 ) % 4		1265489	1		%			
ANR	1265581	AdditiveExpression	i + 0		1265489	0		+			
ANR	1265582	Identifier	i		1265489	0					
ANR	1265583	PrimaryExpression	0		1265489	1					
ANR	1265584	PrimaryExpression	4		1265489	1					
ANR	1265585	ExpressionStatement	q [ 1 ] = s [ ( i + 1 ) % 4 ]	2402:4:86495:86516	1265489	6	True				
ANR	1265586	AssignmentExpression	q [ 1 ] = s [ ( i + 1 ) % 4 ]		1265489	0		=			
ANR	1265587	ArrayIndexing	q [ 1 ]		1265489	0					
ANR	1265588	Identifier	q		1265489	0					
ANR	1265589	PrimaryExpression	1		1265489	1					
ANR	1265590	ArrayIndexing	s [ ( i + 1 ) % 4 ]		1265489	1					
ANR	1265591	Identifier	s		1265489	0					
ANR	1265592	MultiplicativeExpression	( i + 1 ) % 4		1265489	1		%			
ANR	1265593	AdditiveExpression	i + 1		1265489	0		+			
ANR	1265594	Identifier	i		1265489	0					
ANR	1265595	PrimaryExpression	1		1265489	1					
ANR	1265596	PrimaryExpression	4		1265489	1					
ANR	1265597	ExpressionStatement	q [ 2 ] = s [ ( i + 2 ) % 4 ]	2403:4:86522:86543	1265489	7	True				
ANR	1265598	AssignmentExpression	q [ 2 ] = s [ ( i + 2 ) % 4 ]		1265489	0		=			
ANR	1265599	ArrayIndexing	q [ 2 ]		1265489	0					
ANR	1265600	Identifier	q		1265489	0					
ANR	1265601	PrimaryExpression	2		1265489	1					
ANR	1265602	ArrayIndexing	s [ ( i + 2 ) % 4 ]		1265489	1					
ANR	1265603	Identifier	s		1265489	0					
ANR	1265604	MultiplicativeExpression	( i + 2 ) % 4		1265489	1		%			
ANR	1265605	AdditiveExpression	i + 2		1265489	0		+			
ANR	1265606	Identifier	i		1265489	0					
ANR	1265607	PrimaryExpression	2		1265489	1					
ANR	1265608	PrimaryExpression	4		1265489	1					
ANR	1265609	ExpressionStatement	q [ 3 ] = s [ ( i + 3 ) % 4 ]	2404:4:86549:86570	1265489	8	True				
ANR	1265610	AssignmentExpression	q [ 3 ] = s [ ( i + 3 ) % 4 ]		1265489	0		=			
ANR	1265611	ArrayIndexing	q [ 3 ]		1265489	0					
ANR	1265612	Identifier	q		1265489	0					
ANR	1265613	PrimaryExpression	3		1265489	1					
ANR	1265614	ArrayIndexing	s [ ( i + 3 ) % 4 ]		1265489	1					
ANR	1265615	Identifier	s		1265489	0					
ANR	1265616	MultiplicativeExpression	( i + 3 ) % 4		1265489	1		%			
ANR	1265617	AdditiveExpression	i + 3		1265489	0		+			
ANR	1265618	Identifier	i		1265489	0					
ANR	1265619	PrimaryExpression	3		1265489	1					
ANR	1265620	PrimaryExpression	4		1265489	1					
ANR	1265621	ReturnType	static inline void		1265489	1					
ANR	1265622	Identifier	wrap_vertices_by_y		1265489	2					
ANR	1265623	ParameterList	"gs_fixed_point q [ 4 ] , const gs_fixed_point s [ 4 ]"		1265489	3					
ANR	1265624	Parameter	gs_fixed_point q [ 4 ]	2390:19:86235:86253	1265489	0	True				
ANR	1265625	ParameterType	gs_fixed_point [ 4 ]		1265489	0					
ANR	1265626	Identifier	q		1265489	1					
ANR	1265627	Parameter	const gs_fixed_point s [ 4 ]	2390:40:86256:86280	1265489	1	True				
ANR	1265628	ParameterType	const gs_fixed_point [ 4 ]		1265489	0					
ANR	1265629	Identifier	s		1265489	1					
ANR	1265630	CFGEntryNode	ENTRY		1265489		True				
ANR	1265631	CFGExitNode	EXIT		1265489		True				
ANR	1265632	Symbol	q		1265489						
ANR	1265633	Symbol	s		1265489						
ANR	1265634	Symbol	* i		1265489						
ANR	1265635	Symbol	s [ 0 ] . y		1265489						
ANR	1265636	Symbol	s [ 2 ] . y		1265489						
ANR	1265637	Symbol	y		1265489						
ANR	1265638	Symbol	i		1265489						
ANR	1265639	Symbol	* q		1265489						
ANR	1265640	Symbol	* s		1265489						
ANR	1265641	Symbol	s [ 1 ] . y		1265489						
ANR	1265642	Symbol	s [ 3 ] . y		1265489						
ANR	1265643	Function	ordered_triangle	2407:0:86575:87911							
ANR	1265644	FunctionDef	"ordered_triangle (patch_fill_state_t * pfs , gs_fixed_edge * le , gs_fixed_edge * re , patch_color_t * c)"		1265643	0					
ANR	1265645	CompoundStatement		2409:0:86684:87911	1265643	0					
ANR	1265646	IdentifierDeclStatement	gs_fixed_edge ue ;	2410:4:86690:86706	1265643	0	True				
ANR	1265647	IdentifierDecl	ue		1265643	0					
ANR	1265648	IdentifierDeclType	gs_fixed_edge		1265643	0					
ANR	1265649	Identifier	ue		1265643	1					
ANR	1265650	IdentifierDeclStatement	int code ;	2411:4:86712:86720	1265643	1	True				
ANR	1265651	IdentifierDecl	code		1265643	0					
ANR	1265652	IdentifierDeclType	int		1265643	0					
ANR	1265653	Identifier	code		1265643	1					
ANR	1265654	IdentifierDeclStatement	gx_device_color dc ;	2412:4:86726:86744	1265643	2	True				
ANR	1265655	IdentifierDecl	dc		1265643	0					
ANR	1265656	IdentifierDeclType	gx_device_color		1265643	0					
ANR	1265657	Identifier	dc		1265643	1					
ANR	1265658	Statement	if	2414:4:86751:86752	1265643	3	True				
ANR	1265659	Statement	NOFILL_TEST	2414:7:86754:86764	1265643	4	True				
ANR	1265660	IfStatement	if ( dbg_nofill )		1265643	5					
ANR	1265661	Condition	dbg_nofill	2415:12:86778:86787	1265643	0	True				
ANR	1265662	Identifier	dbg_nofill		1265643	0					
ANR	1265663	ReturnStatement	return 0 ;	2416:12:86802:86810	1265643	1	True				
ANR	1265664	PrimaryExpression	0		1265643	0					
ANR	1265665	IdentifierDeclStatement	"endif code = patch_color_to_device_color_inline ( pfs , c , & dc , NULL ) ;"	2417:4:86816:86886	1265643	6	True				
ANR	1265666	IdentifierDecl	"code = patch_color_to_device_color_inline ( pfs , c , & dc , NULL )"		1265643	0					
ANR	1265667	IdentifierDeclType	endif		1265643	0					
ANR	1265668	Identifier	code		1265643	1					
ANR	1265669	AssignmentExpression	"code = patch_color_to_device_color_inline ( pfs , c , & dc , NULL )"		1265643	2		=			
ANR	1265670	Identifier	code		1265643	0					
ANR	1265671	CallExpression	"patch_color_to_device_color_inline ( pfs , c , & dc , NULL )"		1265643	1					
ANR	1265672	Callee	patch_color_to_device_color_inline		1265643	0					
ANR	1265673	Identifier	patch_color_to_device_color_inline		1265643	0					
ANR	1265674	ArgumentList	pfs		1265643	1					
ANR	1265675	Argument	pfs		1265643	0					
ANR	1265676	Identifier	pfs		1265643	0					
ANR	1265677	Argument	c		1265643	1					
ANR	1265678	Identifier	c		1265643	0					
ANR	1265679	Argument	& dc		1265643	2					
ANR	1265680	UnaryOperationExpression	& dc		1265643	0					
ANR	1265681	UnaryOperator	&		1265643	0					
ANR	1265682	Identifier	dc		1265643	1					
ANR	1265683	Argument	NULL		1265643	3					
ANR	1265684	Identifier	NULL		1265643	0					
ANR	1265685	IfStatement	if ( code < 0 )		1265643	7					
ANR	1265686	Condition	code < 0	2419:8:86896:86903	1265643	0	True				
ANR	1265687	RelationalExpression	code < 0		1265643	0		<			
ANR	1265688	Identifier	code		1265643	0					
ANR	1265689	PrimaryExpression	0		1265643	1					
ANR	1265690	ReturnStatement	return code ;	2420:8:86914:86925	1265643	1	True				
ANR	1265691	Identifier	code		1265643	0					
ANR	1265692	IfStatement	if ( le -> end . y < re -> end . y )		1265643	8					
ANR	1265693	Condition	le -> end . y < re -> end . y	2421:8:86935:86955	1265643	0	True				
ANR	1265694	RelationalExpression	le -> end . y < re -> end . y		1265643	0		<			
ANR	1265695	MemberAccess	le -> end . y		1265643	0					
ANR	1265696	PtrMemberAccess	le -> end		1265643	0					
ANR	1265697	Identifier	le		1265643	0					
ANR	1265698	Identifier	end		1265643	1					
ANR	1265699	Identifier	y		1265643	1					
ANR	1265700	MemberAccess	re -> end . y		1265643	1					
ANR	1265701	PtrMemberAccess	re -> end		1265643	0					
ANR	1265702	Identifier	re		1265643	0					
ANR	1265703	Identifier	end		1265643	1					
ANR	1265704	Identifier	y		1265643	1					
ANR	1265705	CompoundStatement		13:31:273:273	1265643	1					
ANR	1265706	ExpressionStatement	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , le , re , le -> start . y , le -> end . y , false , & dc , pfs -> pgs -> log_op )"	2422:8:86968:87093	1265643	0	True				
ANR	1265707	AssignmentExpression	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , le , re , le -> start . y , le -> end . y , false , & dc , pfs -> pgs -> log_op )"		1265643	0		=			
ANR	1265708	Identifier	code		1265643	0					
ANR	1265709	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , le , re , le -> start . y , le -> end . y , false , & dc , pfs -> pgs -> log_op )"		1265643	1					
ANR	1265710	Callee	"dev_proc ( pfs -> dev , fill_trapezoid )"		1265643	0					
ANR	1265711	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid )"		1265643	0					
ANR	1265712	Callee	dev_proc		1265643	0					
ANR	1265713	Identifier	dev_proc		1265643	0					
ANR	1265714	ArgumentList	pfs -> dev		1265643	1					
ANR	1265715	Argument	pfs -> dev		1265643	0					
ANR	1265716	PtrMemberAccess	pfs -> dev		1265643	0					
ANR	1265717	Identifier	pfs		1265643	0					
ANR	1265718	Identifier	dev		1265643	1					
ANR	1265719	Argument	fill_trapezoid		1265643	1					
ANR	1265720	Identifier	fill_trapezoid		1265643	0					
ANR	1265721	ArgumentList	pfs -> dev		1265643	1					
ANR	1265722	Argument	pfs -> dev		1265643	0					
ANR	1265723	PtrMemberAccess	pfs -> dev		1265643	0					
ANR	1265724	Identifier	pfs		1265643	0					
ANR	1265725	Identifier	dev		1265643	1					
ANR	1265726	Argument	le		1265643	1					
ANR	1265727	Identifier	le		1265643	0					
ANR	1265728	Argument	re		1265643	2					
ANR	1265729	Identifier	re		1265643	0					
ANR	1265730	Argument	le -> start . y		1265643	3					
ANR	1265731	MemberAccess	le -> start . y		1265643	0					
ANR	1265732	PtrMemberAccess	le -> start		1265643	0					
ANR	1265733	Identifier	le		1265643	0					
ANR	1265734	Identifier	start		1265643	1					
ANR	1265735	Identifier	y		1265643	1					
ANR	1265736	Argument	le -> end . y		1265643	4					
ANR	1265737	MemberAccess	le -> end . y		1265643	0					
ANR	1265738	PtrMemberAccess	le -> end		1265643	0					
ANR	1265739	Identifier	le		1265643	0					
ANR	1265740	Identifier	end		1265643	1					
ANR	1265741	Identifier	y		1265643	1					
ANR	1265742	Argument	false		1265643	5					
ANR	1265743	Identifier	false		1265643	0					
ANR	1265744	Argument	& dc		1265643	6					
ANR	1265745	UnaryOperationExpression	& dc		1265643	0					
ANR	1265746	UnaryOperator	&		1265643	0					
ANR	1265747	Identifier	dc		1265643	1					
ANR	1265748	Argument	pfs -> pgs -> log_op		1265643	7					
ANR	1265749	PtrMemberAccess	pfs -> pgs -> log_op		1265643	0					
ANR	1265750	PtrMemberAccess	pfs -> pgs		1265643	0					
ANR	1265751	Identifier	pfs		1265643	0					
ANR	1265752	Identifier	pgs		1265643	1					
ANR	1265753	Identifier	log_op		1265643	1					
ANR	1265754	IfStatement	if ( code >= 0 )		1265643	1					
ANR	1265755	Condition	code >= 0	2424:12:87107:87115	1265643	0	True				
ANR	1265756	RelationalExpression	code >= 0		1265643	0		>=			
ANR	1265757	Identifier	code		1265643	0					
ANR	1265758	PrimaryExpression	0		1265643	1					
ANR	1265759	CompoundStatement		16:23:433:433	1265643	1					
ANR	1265760	ExpressionStatement	ue . start = le -> end	2425:12:87132:87150	1265643	0	True				
ANR	1265761	AssignmentExpression	ue . start = le -> end		1265643	0		=			
ANR	1265762	MemberAccess	ue . start		1265643	0					
ANR	1265763	Identifier	ue		1265643	0					
ANR	1265764	Identifier	start		1265643	1					
ANR	1265765	PtrMemberAccess	le -> end		1265643	1					
ANR	1265766	Identifier	le		1265643	0					
ANR	1265767	Identifier	end		1265643	1					
ANR	1265768	ExpressionStatement	ue . end = re -> end	2426:12:87164:87180	1265643	1	True				
ANR	1265769	AssignmentExpression	ue . end = re -> end		1265643	0		=			
ANR	1265770	MemberAccess	ue . end		1265643	0					
ANR	1265771	Identifier	ue		1265643	0					
ANR	1265772	Identifier	end		1265643	1					
ANR	1265773	PtrMemberAccess	re -> end		1265643	1					
ANR	1265774	Identifier	re		1265643	0					
ANR	1265775	Identifier	end		1265643	1					
ANR	1265776	ExpressionStatement	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & ue , re , le -> end . y , re -> end . y , false , & dc , pfs -> pgs -> log_op )"	2427:12:87194:87322	1265643	2	True				
ANR	1265777	AssignmentExpression	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & ue , re , le -> end . y , re -> end . y , false , & dc , pfs -> pgs -> log_op )"		1265643	0		=			
ANR	1265778	Identifier	code		1265643	0					
ANR	1265779	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , & ue , re , le -> end . y , re -> end . y , false , & dc , pfs -> pgs -> log_op )"		1265643	1					
ANR	1265780	Callee	"dev_proc ( pfs -> dev , fill_trapezoid )"		1265643	0					
ANR	1265781	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid )"		1265643	0					
ANR	1265782	Callee	dev_proc		1265643	0					
ANR	1265783	Identifier	dev_proc		1265643	0					
ANR	1265784	ArgumentList	pfs -> dev		1265643	1					
ANR	1265785	Argument	pfs -> dev		1265643	0					
ANR	1265786	PtrMemberAccess	pfs -> dev		1265643	0					
ANR	1265787	Identifier	pfs		1265643	0					
ANR	1265788	Identifier	dev		1265643	1					
ANR	1265789	Argument	fill_trapezoid		1265643	1					
ANR	1265790	Identifier	fill_trapezoid		1265643	0					
ANR	1265791	ArgumentList	pfs -> dev		1265643	1					
ANR	1265792	Argument	pfs -> dev		1265643	0					
ANR	1265793	PtrMemberAccess	pfs -> dev		1265643	0					
ANR	1265794	Identifier	pfs		1265643	0					
ANR	1265795	Identifier	dev		1265643	1					
ANR	1265796	Argument	& ue		1265643	1					
ANR	1265797	UnaryOperationExpression	& ue		1265643	0					
ANR	1265798	UnaryOperator	&		1265643	0					
ANR	1265799	Identifier	ue		1265643	1					
ANR	1265800	Argument	re		1265643	2					
ANR	1265801	Identifier	re		1265643	0					
ANR	1265802	Argument	le -> end . y		1265643	3					
ANR	1265803	MemberAccess	le -> end . y		1265643	0					
ANR	1265804	PtrMemberAccess	le -> end		1265643	0					
ANR	1265805	Identifier	le		1265643	0					
ANR	1265806	Identifier	end		1265643	1					
ANR	1265807	Identifier	y		1265643	1					
ANR	1265808	Argument	re -> end . y		1265643	4					
ANR	1265809	MemberAccess	re -> end . y		1265643	0					
ANR	1265810	PtrMemberAccess	re -> end		1265643	0					
ANR	1265811	Identifier	re		1265643	0					
ANR	1265812	Identifier	end		1265643	1					
ANR	1265813	Identifier	y		1265643	1					
ANR	1265814	Argument	false		1265643	5					
ANR	1265815	Identifier	false		1265643	0					
ANR	1265816	Argument	& dc		1265643	6					
ANR	1265817	UnaryOperationExpression	& dc		1265643	0					
ANR	1265818	UnaryOperator	&		1265643	0					
ANR	1265819	Identifier	dc		1265643	1					
ANR	1265820	Argument	pfs -> pgs -> log_op		1265643	7					
ANR	1265821	PtrMemberAccess	pfs -> pgs -> log_op		1265643	0					
ANR	1265822	PtrMemberAccess	pfs -> pgs		1265643	0					
ANR	1265823	Identifier	pfs		1265643	0					
ANR	1265824	Identifier	pgs		1265643	1					
ANR	1265825	Identifier	log_op		1265643	1					
ANR	1265826	ElseStatement	else		1265643	0					
ANR	1265827	IfStatement	if ( le -> end . y > re -> end . y )		1265643	0					
ANR	1265828	Condition	le -> end . y > re -> end . y	2430:15:87349:87369	1265643	0	True				
ANR	1265829	RelationalExpression	le -> end . y > re -> end . y		1265643	0		>			
ANR	1265830	MemberAccess	le -> end . y		1265643	0					
ANR	1265831	PtrMemberAccess	le -> end		1265643	0					
ANR	1265832	Identifier	le		1265643	0					
ANR	1265833	Identifier	end		1265643	1					
ANR	1265834	Identifier	y		1265643	1					
ANR	1265835	MemberAccess	re -> end . y		1265643	1					
ANR	1265836	PtrMemberAccess	re -> end		1265643	0					
ANR	1265837	Identifier	re		1265643	0					
ANR	1265838	Identifier	end		1265643	1					
ANR	1265839	Identifier	y		1265643	1					
ANR	1265840	CompoundStatement		22:38:687:687	1265643	1					
ANR	1265841	ExpressionStatement	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , le , re , le -> start . y , re -> end . y , false , & dc , pfs -> pgs -> log_op )"	2431:8:87382:87507	1265643	0	True				
ANR	1265842	AssignmentExpression	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , le , re , le -> start . y , re -> end . y , false , & dc , pfs -> pgs -> log_op )"		1265643	0		=			
ANR	1265843	Identifier	code		1265643	0					
ANR	1265844	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , le , re , le -> start . y , re -> end . y , false , & dc , pfs -> pgs -> log_op )"		1265643	1					
ANR	1265845	Callee	"dev_proc ( pfs -> dev , fill_trapezoid )"		1265643	0					
ANR	1265846	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid )"		1265643	0					
ANR	1265847	Callee	dev_proc		1265643	0					
ANR	1265848	Identifier	dev_proc		1265643	0					
ANR	1265849	ArgumentList	pfs -> dev		1265643	1					
ANR	1265850	Argument	pfs -> dev		1265643	0					
ANR	1265851	PtrMemberAccess	pfs -> dev		1265643	0					
ANR	1265852	Identifier	pfs		1265643	0					
ANR	1265853	Identifier	dev		1265643	1					
ANR	1265854	Argument	fill_trapezoid		1265643	1					
ANR	1265855	Identifier	fill_trapezoid		1265643	0					
ANR	1265856	ArgumentList	pfs -> dev		1265643	1					
ANR	1265857	Argument	pfs -> dev		1265643	0					
ANR	1265858	PtrMemberAccess	pfs -> dev		1265643	0					
ANR	1265859	Identifier	pfs		1265643	0					
ANR	1265860	Identifier	dev		1265643	1					
ANR	1265861	Argument	le		1265643	1					
ANR	1265862	Identifier	le		1265643	0					
ANR	1265863	Argument	re		1265643	2					
ANR	1265864	Identifier	re		1265643	0					
ANR	1265865	Argument	le -> start . y		1265643	3					
ANR	1265866	MemberAccess	le -> start . y		1265643	0					
ANR	1265867	PtrMemberAccess	le -> start		1265643	0					
ANR	1265868	Identifier	le		1265643	0					
ANR	1265869	Identifier	start		1265643	1					
ANR	1265870	Identifier	y		1265643	1					
ANR	1265871	Argument	re -> end . y		1265643	4					
ANR	1265872	MemberAccess	re -> end . y		1265643	0					
ANR	1265873	PtrMemberAccess	re -> end		1265643	0					
ANR	1265874	Identifier	re		1265643	0					
ANR	1265875	Identifier	end		1265643	1					
ANR	1265876	Identifier	y		1265643	1					
ANR	1265877	Argument	false		1265643	5					
ANR	1265878	Identifier	false		1265643	0					
ANR	1265879	Argument	& dc		1265643	6					
ANR	1265880	UnaryOperationExpression	& dc		1265643	0					
ANR	1265881	UnaryOperator	&		1265643	0					
ANR	1265882	Identifier	dc		1265643	1					
ANR	1265883	Argument	pfs -> pgs -> log_op		1265643	7					
ANR	1265884	PtrMemberAccess	pfs -> pgs -> log_op		1265643	0					
ANR	1265885	PtrMemberAccess	pfs -> pgs		1265643	0					
ANR	1265886	Identifier	pfs		1265643	0					
ANR	1265887	Identifier	pgs		1265643	1					
ANR	1265888	Identifier	log_op		1265643	1					
ANR	1265889	IfStatement	if ( code >= 0 )		1265643	1					
ANR	1265890	Condition	code >= 0	2433:12:87521:87529	1265643	0	True				
ANR	1265891	RelationalExpression	code >= 0		1265643	0		>=			
ANR	1265892	Identifier	code		1265643	0					
ANR	1265893	PrimaryExpression	0		1265643	1					
ANR	1265894	CompoundStatement		25:23:847:847	1265643	1					
ANR	1265895	ExpressionStatement	ue . start = re -> end	2434:12:87546:87564	1265643	0	True				
ANR	1265896	AssignmentExpression	ue . start = re -> end		1265643	0		=			
ANR	1265897	MemberAccess	ue . start		1265643	0					
ANR	1265898	Identifier	ue		1265643	0					
ANR	1265899	Identifier	start		1265643	1					
ANR	1265900	PtrMemberAccess	re -> end		1265643	1					
ANR	1265901	Identifier	re		1265643	0					
ANR	1265902	Identifier	end		1265643	1					
ANR	1265903	ExpressionStatement	ue . end = le -> end	2435:12:87578:87594	1265643	1	True				
ANR	1265904	AssignmentExpression	ue . end = le -> end		1265643	0		=			
ANR	1265905	MemberAccess	ue . end		1265643	0					
ANR	1265906	Identifier	ue		1265643	0					
ANR	1265907	Identifier	end		1265643	1					
ANR	1265908	PtrMemberAccess	le -> end		1265643	1					
ANR	1265909	Identifier	le		1265643	0					
ANR	1265910	Identifier	end		1265643	1					
ANR	1265911	ExpressionStatement	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , le , & ue , re -> end . y , le -> end . y , false , & dc , pfs -> pgs -> log_op )"	2436:12:87608:87736	1265643	2	True				
ANR	1265912	AssignmentExpression	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , le , & ue , re -> end . y , le -> end . y , false , & dc , pfs -> pgs -> log_op )"		1265643	0		=			
ANR	1265913	Identifier	code		1265643	0					
ANR	1265914	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , le , & ue , re -> end . y , le -> end . y , false , & dc , pfs -> pgs -> log_op )"		1265643	1					
ANR	1265915	Callee	"dev_proc ( pfs -> dev , fill_trapezoid )"		1265643	0					
ANR	1265916	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid )"		1265643	0					
ANR	1265917	Callee	dev_proc		1265643	0					
ANR	1265918	Identifier	dev_proc		1265643	0					
ANR	1265919	ArgumentList	pfs -> dev		1265643	1					
ANR	1265920	Argument	pfs -> dev		1265643	0					
ANR	1265921	PtrMemberAccess	pfs -> dev		1265643	0					
ANR	1265922	Identifier	pfs		1265643	0					
ANR	1265923	Identifier	dev		1265643	1					
ANR	1265924	Argument	fill_trapezoid		1265643	1					
ANR	1265925	Identifier	fill_trapezoid		1265643	0					
ANR	1265926	ArgumentList	pfs -> dev		1265643	1					
ANR	1265927	Argument	pfs -> dev		1265643	0					
ANR	1265928	PtrMemberAccess	pfs -> dev		1265643	0					
ANR	1265929	Identifier	pfs		1265643	0					
ANR	1265930	Identifier	dev		1265643	1					
ANR	1265931	Argument	le		1265643	1					
ANR	1265932	Identifier	le		1265643	0					
ANR	1265933	Argument	& ue		1265643	2					
ANR	1265934	UnaryOperationExpression	& ue		1265643	0					
ANR	1265935	UnaryOperator	&		1265643	0					
ANR	1265936	Identifier	ue		1265643	1					
ANR	1265937	Argument	re -> end . y		1265643	3					
ANR	1265938	MemberAccess	re -> end . y		1265643	0					
ANR	1265939	PtrMemberAccess	re -> end		1265643	0					
ANR	1265940	Identifier	re		1265643	0					
ANR	1265941	Identifier	end		1265643	1					
ANR	1265942	Identifier	y		1265643	1					
ANR	1265943	Argument	le -> end . y		1265643	4					
ANR	1265944	MemberAccess	le -> end . y		1265643	0					
ANR	1265945	PtrMemberAccess	le -> end		1265643	0					
ANR	1265946	Identifier	le		1265643	0					
ANR	1265947	Identifier	end		1265643	1					
ANR	1265948	Identifier	y		1265643	1					
ANR	1265949	Argument	false		1265643	5					
ANR	1265950	Identifier	false		1265643	0					
ANR	1265951	Argument	& dc		1265643	6					
ANR	1265952	UnaryOperationExpression	& dc		1265643	0					
ANR	1265953	UnaryOperator	&		1265643	0					
ANR	1265954	Identifier	dc		1265643	1					
ANR	1265955	Argument	pfs -> pgs -> log_op		1265643	7					
ANR	1265956	PtrMemberAccess	pfs -> pgs -> log_op		1265643	0					
ANR	1265957	PtrMemberAccess	pfs -> pgs		1265643	0					
ANR	1265958	Identifier	pfs		1265643	0					
ANR	1265959	Identifier	pgs		1265643	1					
ANR	1265960	Identifier	log_op		1265643	1					
ANR	1265961	ElseStatement	else		1265643	0					
ANR	1265962	ExpressionStatement	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , le , re , le -> start . y , le -> end . y , false , & dc , pfs -> pgs -> log_op )"	2440:8:87767:87892	1265643	0	True				
ANR	1265963	AssignmentExpression	"code = dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , le , re , le -> start . y , le -> end . y , false , & dc , pfs -> pgs -> log_op )"		1265643	0		=			
ANR	1265964	Identifier	code		1265643	0					
ANR	1265965	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid ) ( pfs -> dev , le , re , le -> start . y , le -> end . y , false , & dc , pfs -> pgs -> log_op )"		1265643	1					
ANR	1265966	Callee	"dev_proc ( pfs -> dev , fill_trapezoid )"		1265643	0					
ANR	1265967	CallExpression	"dev_proc ( pfs -> dev , fill_trapezoid )"		1265643	0					
ANR	1265968	Callee	dev_proc		1265643	0					
ANR	1265969	Identifier	dev_proc		1265643	0					
ANR	1265970	ArgumentList	pfs -> dev		1265643	1					
ANR	1265971	Argument	pfs -> dev		1265643	0					
ANR	1265972	PtrMemberAccess	pfs -> dev		1265643	0					
ANR	1265973	Identifier	pfs		1265643	0					
ANR	1265974	Identifier	dev		1265643	1					
ANR	1265975	Argument	fill_trapezoid		1265643	1					
ANR	1265976	Identifier	fill_trapezoid		1265643	0					
ANR	1265977	ArgumentList	pfs -> dev		1265643	1					
ANR	1265978	Argument	pfs -> dev		1265643	0					
ANR	1265979	PtrMemberAccess	pfs -> dev		1265643	0					
ANR	1265980	Identifier	pfs		1265643	0					
ANR	1265981	Identifier	dev		1265643	1					
ANR	1265982	Argument	le		1265643	1					
ANR	1265983	Identifier	le		1265643	0					
ANR	1265984	Argument	re		1265643	2					
ANR	1265985	Identifier	re		1265643	0					
ANR	1265986	Argument	le -> start . y		1265643	3					
ANR	1265987	MemberAccess	le -> start . y		1265643	0					
ANR	1265988	PtrMemberAccess	le -> start		1265643	0					
ANR	1265989	Identifier	le		1265643	0					
ANR	1265990	Identifier	start		1265643	1					
ANR	1265991	Identifier	y		1265643	1					
ANR	1265992	Argument	le -> end . y		1265643	4					
ANR	1265993	MemberAccess	le -> end . y		1265643	0					
ANR	1265994	PtrMemberAccess	le -> end		1265643	0					
ANR	1265995	Identifier	le		1265643	0					
ANR	1265996	Identifier	end		1265643	1					
ANR	1265997	Identifier	y		1265643	1					
ANR	1265998	Argument	false		1265643	5					
ANR	1265999	Identifier	false		1265643	0					
ANR	1266000	Argument	& dc		1265643	6					
ANR	1266001	UnaryOperationExpression	& dc		1265643	0					
ANR	1266002	UnaryOperator	&		1265643	0					
ANR	1266003	Identifier	dc		1265643	1					
ANR	1266004	Argument	pfs -> pgs -> log_op		1265643	7					
ANR	1266005	PtrMemberAccess	pfs -> pgs -> log_op		1265643	0					
ANR	1266006	PtrMemberAccess	pfs -> pgs		1265643	0					
ANR	1266007	Identifier	pfs		1265643	0					
ANR	1266008	Identifier	pgs		1265643	1					
ANR	1266009	Identifier	log_op		1265643	1					
ANR	1266010	ReturnStatement	return code ;	2442:4:87898:87909	1265643	9	True				
ANR	1266011	Identifier	code		1265643	0					
ANR	1266012	ReturnType	static int		1265643	1					
ANR	1266013	Identifier	ordered_triangle		1265643	2					
ANR	1266014	ParameterList	"patch_fill_state_t * pfs , gs_fixed_edge * le , gs_fixed_edge * re , patch_color_t * c"		1265643	3					
ANR	1266015	Parameter	patch_fill_state_t * pfs	2408:17:86603:86625	1265643	0	True				
ANR	1266016	ParameterType	patch_fill_state_t *		1265643	0					
ANR	1266017	Identifier	pfs		1265643	1					
ANR	1266018	Parameter	gs_fixed_edge * le	2408:42:86628:86644	1265643	1	True				
ANR	1266019	ParameterType	gs_fixed_edge *		1265643	0					
ANR	1266020	Identifier	le		1265643	1					
ANR	1266021	Parameter	gs_fixed_edge * re	2408:61:86647:86663	1265643	2	True				
ANR	1266022	ParameterType	gs_fixed_edge *		1265643	0					
ANR	1266023	Identifier	re		1265643	1					
ANR	1266024	Parameter	patch_color_t * c	2408:80:86666:86681	1265643	3	True				
ANR	1266025	ParameterType	patch_color_t *		1265643	0					
ANR	1266026	Identifier	c		1265643	1					
ANR	1266027	CFGEntryNode	ENTRY		1265643		True				
ANR	1266028	CFGExitNode	EXIT		1265643		True				
ANR	1266029	Symbol	code		1265643						
ANR	1266030	Symbol	le -> start		1265643						
ANR	1266031	Symbol	pfs -> pgs -> log_op		1265643						
ANR	1266032	Symbol	patch_color_to_device_color_inline		1265643						
ANR	1266033	Symbol	ue		1265643						
ANR	1266034	Symbol	* * pfs		1265643						
ANR	1266035	Symbol	dev_proc		1265643						
ANR	1266036	Symbol	fill_trapezoid		1265643						
ANR	1266037	Symbol	ue . start		1265643						
ANR	1266038	Symbol	le -> start . y		1265643						
ANR	1266039	Symbol	& ue		1265643						
ANR	1266040	Symbol	re -> end . y		1265643						
ANR	1266041	Symbol	re -> end		1265643						
ANR	1266042	Symbol	c		1265643						
ANR	1266043	Symbol	NULL		1265643						
ANR	1266044	Symbol	* pfs		1265643						
ANR	1266045	Symbol	& dc		1265643						
ANR	1266046	Symbol	pfs -> pgs		1265643						
ANR	1266047	Symbol	false		1265643						
ANR	1266048	Symbol	ue . end		1265643						
ANR	1266049	Symbol	pfs -> dev		1265643						
ANR	1266050	Symbol	re		1265643						
ANR	1266051	Symbol	le -> end		1265643						
ANR	1266052	Symbol	le -> end . y		1265643						
ANR	1266053	Symbol	* pfs -> pgs		1265643						
ANR	1266054	Symbol	dbg_nofill		1265643						
ANR	1266055	Symbol	le		1265643						
ANR	1266056	Symbol	* re		1265643						
ANR	1266057	Symbol	pfs		1265643						
ANR	1266058	Symbol	* le		1265643						
ANR	1266059	Symbol	dc		1265643						
ANR	1266060	Function	constant_color_triangle	2445:0:87914:89273							
ANR	1266061	FunctionDef	"constant_color_triangle (patch_fill_state_t * pfs , const shading_vertex_t * p0 , const shading_vertex_t * p1 , const shading_vertex_t * p2)"		1266060	0					
ANR	1266062	CompoundStatement		2448:0:88066:89273	1266060	0					
ANR	1266063	IdentifierDeclStatement	patch_color_t * c [ 2 ] ;	2449:4:88072:88091	1266060	0	True				
ANR	1266064	IdentifierDecl	* c [ 2 ]		1266060	0					
ANR	1266065	IdentifierDeclType	patch_color_t * [ 2 ]		1266060	0					
ANR	1266066	Identifier	c		1266060	1					
ANR	1266067	PrimaryExpression	2		1266060	2					
ANR	1266068	IdentifierDeclStatement	"gs_fixed_edge le , re ;"	2450:4:88097:88117	1266060	1	True				
ANR	1266069	IdentifierDecl	le		1266060	0					
ANR	1266070	IdentifierDeclType	gs_fixed_edge		1266060	0					
ANR	1266071	Identifier	le		1266060	1					
ANR	1266072	IdentifierDecl	re		1266060	1					
ANR	1266073	IdentifierDeclType	gs_fixed_edge		1266060	0					
ANR	1266074	Identifier	re		1266060	1					
ANR	1266075	IdentifierDeclStatement	"fixed dx0 , dy0 , dx1 , dy1 ;"	2451:4:88123:88147	1266060	2	True				
ANR	1266076	IdentifierDecl	dx0		1266060	0					
ANR	1266077	IdentifierDeclType	fixed		1266060	0					
ANR	1266078	Identifier	dx0		1266060	1					
ANR	1266079	IdentifierDecl	dy0		1266060	1					
ANR	1266080	IdentifierDeclType	fixed		1266060	0					
ANR	1266081	Identifier	dy0		1266060	1					
ANR	1266082	IdentifierDecl	dx1		1266060	2					
ANR	1266083	IdentifierDeclType	fixed		1266060	0					
ANR	1266084	Identifier	dx1		1266060	1					
ANR	1266085	IdentifierDecl	dy1		1266060	3					
ANR	1266086	IdentifierDeclType	fixed		1266060	0					
ANR	1266087	Identifier	dy1		1266060	1					
ANR	1266088	IdentifierDeclStatement	const shading_vertex_t * pp ;	2452:4:88153:88179	1266060	3	True				
ANR	1266089	IdentifierDecl	* pp		1266060	0					
ANR	1266090	IdentifierDeclType	const shading_vertex_t *		1266060	0					
ANR	1266091	Identifier	pp		1266060	1					
ANR	1266092	IdentifierDeclStatement	"int i , code = 0 ;"	2453:4:88185:88200	1266060	4	True				
ANR	1266093	IdentifierDecl	i		1266060	0					
ANR	1266094	IdentifierDeclType	int		1266060	0					
ANR	1266095	Identifier	i		1266060	1					
ANR	1266096	IdentifierDecl	code = 0		1266060	1					
ANR	1266097	IdentifierDeclType	int		1266060	0					
ANR	1266098	Identifier	code		1266060	1					
ANR	1266099	AssignmentExpression	code = 0		1266060	2		=			
ANR	1266100	Identifier	code		1266060	0					
ANR	1266101	PrimaryExpression	0		1266060	1					
ANR	1266102	IdentifierDeclStatement	"byte * color_stack_ptr = reserve_colors_inline ( pfs , c , 2 ) ;"	2454:4:88206:88262	1266060	5	True				
ANR	1266103	IdentifierDecl	"* color_stack_ptr = reserve_colors_inline ( pfs , c , 2 )"		1266060	0					
ANR	1266104	IdentifierDeclType	byte *		1266060	0					
ANR	1266105	Identifier	color_stack_ptr		1266060	1					
ANR	1266106	AssignmentExpression	"* color_stack_ptr = reserve_colors_inline ( pfs , c , 2 )"		1266060	2		=			
ANR	1266107	Identifier	color_stack_ptr		1266060	0					
ANR	1266108	CallExpression	"reserve_colors_inline ( pfs , c , 2 )"		1266060	1					
ANR	1266109	Callee	reserve_colors_inline		1266060	0					
ANR	1266110	Identifier	reserve_colors_inline		1266060	0					
ANR	1266111	ArgumentList	pfs		1266060	1					
ANR	1266112	Argument	pfs		1266060	0					
ANR	1266113	Identifier	pfs		1266060	0					
ANR	1266114	Argument	c		1266060	1					
ANR	1266115	Identifier	c		1266060	0					
ANR	1266116	Argument	2		1266060	2					
ANR	1266117	PrimaryExpression	2		1266060	0					
ANR	1266118	IfStatement	if ( color_stack_ptr == NULL )		1266060	6					
ANR	1266119	Condition	color_stack_ptr == NULL	2456:8:88273:88295	1266060	0	True				
ANR	1266120	EqualityExpression	color_stack_ptr == NULL		1266060	0		==			
ANR	1266121	Identifier	color_stack_ptr		1266060	0					
ANR	1266122	Identifier	NULL		1266060	1					
ANR	1266123	ExpressionStatement	return_error ( gs_error_unregistered )	2457:8:88306:88341	1266060	1	True				
ANR	1266124	CallExpression	return_error ( gs_error_unregistered )		1266060	0					
ANR	1266125	Callee	return_error		1266060	0					
ANR	1266126	Identifier	return_error		1266060	0					
ANR	1266127	ArgumentList	gs_error_unregistered		1266060	1					
ANR	1266128	Argument	gs_error_unregistered		1266060	0					
ANR	1266129	Identifier	gs_error_unregistered		1266060	0					
ANR	1266130	ExpressionStatement	"patch_interpolate_color ( c [ 0 ] , p0 -> c , p1 -> c , pfs , 0.5 )"	2458:4:88370:88423	1266060	7	True				
ANR	1266131	CallExpression	"patch_interpolate_color ( c [ 0 ] , p0 -> c , p1 -> c , pfs , 0.5 )"		1266060	0					
ANR	1266132	Callee	patch_interpolate_color		1266060	0					
ANR	1266133	Identifier	patch_interpolate_color		1266060	0					
ANR	1266134	ArgumentList	c [ 0 ]		1266060	1					
ANR	1266135	Argument	c [ 0 ]		1266060	0					
ANR	1266136	ArrayIndexing	c [ 0 ]		1266060	0					
ANR	1266137	Identifier	c		1266060	0					
ANR	1266138	PrimaryExpression	0		1266060	1					
ANR	1266139	Argument	p0 -> c		1266060	1					
ANR	1266140	PtrMemberAccess	p0 -> c		1266060	0					
ANR	1266141	Identifier	p0		1266060	0					
ANR	1266142	Identifier	c		1266060	1					
ANR	1266143	Argument	p1 -> c		1266060	2					
ANR	1266144	PtrMemberAccess	p1 -> c		1266060	0					
ANR	1266145	Identifier	p1		1266060	0					
ANR	1266146	Identifier	c		1266060	1					
ANR	1266147	Argument	pfs		1266060	3					
ANR	1266148	Identifier	pfs		1266060	0					
ANR	1266149	Argument	0.5		1266060	4					
ANR	1266150	PrimaryExpression	0.5		1266060	0					
ANR	1266151	ExpressionStatement	"patch_interpolate_color ( c [ 1 ] , p2 -> c , c [ 0 ] , pfs , 0.5 )"	2459:4:88429:88481	1266060	8	True				
ANR	1266152	CallExpression	"patch_interpolate_color ( c [ 1 ] , p2 -> c , c [ 0 ] , pfs , 0.5 )"		1266060	0					
ANR	1266153	Callee	patch_interpolate_color		1266060	0					
ANR	1266154	Identifier	patch_interpolate_color		1266060	0					
ANR	1266155	ArgumentList	c [ 1 ]		1266060	1					
ANR	1266156	Argument	c [ 1 ]		1266060	0					
ANR	1266157	ArrayIndexing	c [ 1 ]		1266060	0					
ANR	1266158	Identifier	c		1266060	0					
ANR	1266159	PrimaryExpression	1		1266060	1					
ANR	1266160	Argument	p2 -> c		1266060	1					
ANR	1266161	PtrMemberAccess	p2 -> c		1266060	0					
ANR	1266162	Identifier	p2		1266060	0					
ANR	1266163	Identifier	c		1266060	1					
ANR	1266164	Argument	c [ 0 ]		1266060	2					
ANR	1266165	ArrayIndexing	c [ 0 ]		1266060	0					
ANR	1266166	Identifier	c		1266060	0					
ANR	1266167	PrimaryExpression	0		1266060	1					
ANR	1266168	Argument	pfs		1266060	3					
ANR	1266169	Identifier	pfs		1266060	0					
ANR	1266170	Argument	0.5		1266060	4					
ANR	1266171	PrimaryExpression	0.5		1266060	0					
ANR	1266172	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		1266060	9					
ANR	1266173	ForInit	i = 0 ;	2460:9:88492:88497	1266060	0	True				
ANR	1266174	AssignmentExpression	i = 0		1266060	0		=			
ANR	1266175	Identifier	i		1266060	0					
ANR	1266176	PrimaryExpression	0		1266060	1					
ANR	1266177	Condition	i < 3	2460:16:88499:88503	1266060	1	True				
ANR	1266178	RelationalExpression	i < 3		1266060	0		<			
ANR	1266179	Identifier	i		1266060	0					
ANR	1266180	PrimaryExpression	3		1266060	1					
ANR	1266181	PostIncDecOperationExpression	i ++	2460:23:88506:88508	1266060	2	True				
ANR	1266182	Identifier	i		1266060	0					
ANR	1266183	IncDec	++		1266060	1					
ANR	1266184	CompoundStatement		13:28:444:444	1266060	3					
ANR	1266185	IfStatement	if ( p0 -> p . y <= p1 -> p . y && p0 -> p . y <= p2 -> p . y )		1266060	0					
ANR	1266186	Condition	p0 -> p . y <= p1 -> p . y && p0 -> p . y <= p2 -> p . y	2462:12:88591:88630	1266060	0	True				
ANR	1266187	AndExpression	p0 -> p . y <= p1 -> p . y && p0 -> p . y <= p2 -> p . y		1266060	0		&&			
ANR	1266188	RelationalExpression	p0 -> p . y <= p1 -> p . y		1266060	0		<=			
ANR	1266189	MemberAccess	p0 -> p . y		1266060	0					
ANR	1266190	PtrMemberAccess	p0 -> p		1266060	0					
ANR	1266191	Identifier	p0		1266060	0					
ANR	1266192	Identifier	p		1266060	1					
ANR	1266193	Identifier	y		1266060	1					
ANR	1266194	MemberAccess	p1 -> p . y		1266060	1					
ANR	1266195	PtrMemberAccess	p1 -> p		1266060	0					
ANR	1266196	Identifier	p1		1266060	0					
ANR	1266197	Identifier	p		1266060	1					
ANR	1266198	Identifier	y		1266060	1					
ANR	1266199	RelationalExpression	p0 -> p . y <= p2 -> p . y		1266060	1		<=			
ANR	1266200	MemberAccess	p0 -> p . y		1266060	0					
ANR	1266201	PtrMemberAccess	p0 -> p		1266060	0					
ANR	1266202	Identifier	p0		1266060	0					
ANR	1266203	Identifier	p		1266060	1					
ANR	1266204	Identifier	y		1266060	1					
ANR	1266205	MemberAccess	p2 -> p . y		1266060	1					
ANR	1266206	PtrMemberAccess	p2 -> p		1266060	0					
ANR	1266207	Identifier	p2		1266060	0					
ANR	1266208	Identifier	p		1266060	1					
ANR	1266209	Identifier	y		1266060	1					
ANR	1266210	CompoundStatement		15:54:566:566	1266060	1					
ANR	1266211	ExpressionStatement	le . start = re . start = p0 -> p	2463:12:88647:88674	1266060	0	True				
ANR	1266212	AssignmentExpression	le . start = re . start = p0 -> p		1266060	0		=			
ANR	1266213	MemberAccess	le . start		1266060	0					
ANR	1266214	Identifier	le		1266060	0					
ANR	1266215	Identifier	start		1266060	1					
ANR	1266216	AssignmentExpression	re . start = p0 -> p		1266060	1		=			
ANR	1266217	MemberAccess	re . start		1266060	0					
ANR	1266218	Identifier	re		1266060	0					
ANR	1266219	Identifier	start		1266060	1					
ANR	1266220	PtrMemberAccess	p0 -> p		1266060	1					
ANR	1266221	Identifier	p0		1266060	0					
ANR	1266222	Identifier	p		1266060	1					
ANR	1266223	ExpressionStatement	le . end = p1 -> p	2464:12:88688:88702	1266060	1	True				
ANR	1266224	AssignmentExpression	le . end = p1 -> p		1266060	0		=			
ANR	1266225	MemberAccess	le . end		1266060	0					
ANR	1266226	Identifier	le		1266060	0					
ANR	1266227	Identifier	end		1266060	1					
ANR	1266228	PtrMemberAccess	p1 -> p		1266060	1					
ANR	1266229	Identifier	p1		1266060	0					
ANR	1266230	Identifier	p		1266060	1					
ANR	1266231	ExpressionStatement	re . end = p2 -> p	2465:12:88716:88730	1266060	2	True				
ANR	1266232	AssignmentExpression	re . end = p2 -> p		1266060	0		=			
ANR	1266233	MemberAccess	re . end		1266060	0					
ANR	1266234	Identifier	re		1266060	0					
ANR	1266235	Identifier	end		1266060	1					
ANR	1266236	PtrMemberAccess	p2 -> p		1266060	1					
ANR	1266237	Identifier	p2		1266060	0					
ANR	1266238	Identifier	p		1266060	1					
ANR	1266239	ExpressionStatement	dx0 = le . end . x - le . start . x	2467:12:88745:88772	1266060	3	True				
ANR	1266240	AssignmentExpression	dx0 = le . end . x - le . start . x		1266060	0		=			
ANR	1266241	Identifier	dx0		1266060	0					
ANR	1266242	AdditiveExpression	le . end . x - le . start . x		1266060	1		-			
ANR	1266243	MemberAccess	le . end . x		1266060	0					
ANR	1266244	MemberAccess	le . end		1266060	0					
ANR	1266245	Identifier	le		1266060	0					
ANR	1266246	Identifier	end		1266060	1					
ANR	1266247	Identifier	x		1266060	1					
ANR	1266248	MemberAccess	le . start . x		1266060	1					
ANR	1266249	MemberAccess	le . start		1266060	0					
ANR	1266250	Identifier	le		1266060	0					
ANR	1266251	Identifier	start		1266060	1					
ANR	1266252	Identifier	x		1266060	1					
ANR	1266253	ExpressionStatement	dy0 = le . end . y - le . start . y	2468:12:88786:88813	1266060	4	True				
ANR	1266254	AssignmentExpression	dy0 = le . end . y - le . start . y		1266060	0		=			
ANR	1266255	Identifier	dy0		1266060	0					
ANR	1266256	AdditiveExpression	le . end . y - le . start . y		1266060	1		-			
ANR	1266257	MemberAccess	le . end . y		1266060	0					
ANR	1266258	MemberAccess	le . end		1266060	0					
ANR	1266259	Identifier	le		1266060	0					
ANR	1266260	Identifier	end		1266060	1					
ANR	1266261	Identifier	y		1266060	1					
ANR	1266262	MemberAccess	le . start . y		1266060	1					
ANR	1266263	MemberAccess	le . start		1266060	0					
ANR	1266264	Identifier	le		1266060	0					
ANR	1266265	Identifier	start		1266060	1					
ANR	1266266	Identifier	y		1266060	1					
ANR	1266267	ExpressionStatement	dx1 = re . end . x - re . start . x	2469:12:88827:88854	1266060	5	True				
ANR	1266268	AssignmentExpression	dx1 = re . end . x - re . start . x		1266060	0		=			
ANR	1266269	Identifier	dx1		1266060	0					
ANR	1266270	AdditiveExpression	re . end . x - re . start . x		1266060	1		-			
ANR	1266271	MemberAccess	re . end . x		1266060	0					
ANR	1266272	MemberAccess	re . end		1266060	0					
ANR	1266273	Identifier	re		1266060	0					
ANR	1266274	Identifier	end		1266060	1					
ANR	1266275	Identifier	x		1266060	1					
ANR	1266276	MemberAccess	re . start . x		1266060	1					
ANR	1266277	MemberAccess	re . start		1266060	0					
ANR	1266278	Identifier	re		1266060	0					
ANR	1266279	Identifier	start		1266060	1					
ANR	1266280	Identifier	x		1266060	1					
ANR	1266281	ExpressionStatement	dy1 = re . end . y - re . start . y	2470:12:88868:88895	1266060	6	True				
ANR	1266282	AssignmentExpression	dy1 = re . end . y - re . start . y		1266060	0		=			
ANR	1266283	Identifier	dy1		1266060	0					
ANR	1266284	AdditiveExpression	re . end . y - re . start . y		1266060	1		-			
ANR	1266285	MemberAccess	re . end . y		1266060	0					
ANR	1266286	MemberAccess	re . end		1266060	0					
ANR	1266287	Identifier	re		1266060	0					
ANR	1266288	Identifier	end		1266060	1					
ANR	1266289	Identifier	y		1266060	1					
ANR	1266290	MemberAccess	re . start . y		1266060	1					
ANR	1266291	MemberAccess	re . start		1266060	0					
ANR	1266292	Identifier	re		1266060	0					
ANR	1266293	Identifier	start		1266060	1					
ANR	1266294	Identifier	y		1266060	1					
ANR	1266295	IfStatement	if ( ( int64_t ) dx0 * dy1 < ( int64_t ) dy0 * dx1 )		1266060	7					
ANR	1266296	Condition	( int64_t ) dx0 * dy1 < ( int64_t ) dy0 * dx1	2471:16:88913:88951	1266060	0	True				
ANR	1266297	RelationalExpression	( int64_t ) dx0 * dy1 < ( int64_t ) dy0 * dx1		1266060	0		<			
ANR	1266298	MultiplicativeExpression	( int64_t ) dx0 * dy1		1266060	0		*			
ANR	1266299	CastExpression	( int64_t ) dx0		1266060	0					
ANR	1266300	CastTarget	int64_t		1266060	0					
ANR	1266301	Identifier	dx0		1266060	1					
ANR	1266302	Identifier	dy1		1266060	1					
ANR	1266303	MultiplicativeExpression	( int64_t ) dy0 * dx1		1266060	1		*			
ANR	1266304	CastExpression	( int64_t ) dy0		1266060	0					
ANR	1266305	CastTarget	int64_t		1266060	0					
ANR	1266306	Identifier	dy0		1266060	1					
ANR	1266307	Identifier	dx1		1266060	1					
ANR	1266308	ExpressionStatement	"code = ordered_triangle ( pfs , & le , & re , c [ 1 ] )"	2472:16:88970:89014	1266060	1	True				
ANR	1266309	AssignmentExpression	"code = ordered_triangle ( pfs , & le , & re , c [ 1 ] )"		1266060	0		=			
ANR	1266310	Identifier	code		1266060	0					
ANR	1266311	CallExpression	"ordered_triangle ( pfs , & le , & re , c [ 1 ] )"		1266060	1					
ANR	1266312	Callee	ordered_triangle		1266060	0					
ANR	1266313	Identifier	ordered_triangle		1266060	0					
ANR	1266314	ArgumentList	pfs		1266060	1					
ANR	1266315	Argument	pfs		1266060	0					
ANR	1266316	Identifier	pfs		1266060	0					
ANR	1266317	Argument	& le		1266060	1					
ANR	1266318	UnaryOperationExpression	& le		1266060	0					
ANR	1266319	UnaryOperator	&		1266060	0					
ANR	1266320	Identifier	le		1266060	1					
ANR	1266321	Argument	& re		1266060	2					
ANR	1266322	UnaryOperationExpression	& re		1266060	0					
ANR	1266323	UnaryOperator	&		1266060	0					
ANR	1266324	Identifier	re		1266060	1					
ANR	1266325	Argument	c [ 1 ]		1266060	3					
ANR	1266326	ArrayIndexing	c [ 1 ]		1266060	0					
ANR	1266327	Identifier	c		1266060	0					
ANR	1266328	PrimaryExpression	1		1266060	1					
ANR	1266329	ElseStatement	else		1266060	0					
ANR	1266330	ExpressionStatement	"code = ordered_triangle ( pfs , & re , & le , c [ 1 ] )"	2474:16:89049:89093	1266060	0	True				
ANR	1266331	AssignmentExpression	"code = ordered_triangle ( pfs , & re , & le , c [ 1 ] )"		1266060	0		=			
ANR	1266332	Identifier	code		1266060	0					
ANR	1266333	CallExpression	"ordered_triangle ( pfs , & re , & le , c [ 1 ] )"		1266060	1					
ANR	1266334	Callee	ordered_triangle		1266060	0					
ANR	1266335	Identifier	ordered_triangle		1266060	0					
ANR	1266336	ArgumentList	pfs		1266060	1					
ANR	1266337	Argument	pfs		1266060	0					
ANR	1266338	Identifier	pfs		1266060	0					
ANR	1266339	Argument	& re		1266060	1					
ANR	1266340	UnaryOperationExpression	& re		1266060	0					
ANR	1266341	UnaryOperator	&		1266060	0					
ANR	1266342	Identifier	re		1266060	1					
ANR	1266343	Argument	& le		1266060	2					
ANR	1266344	UnaryOperationExpression	& le		1266060	0					
ANR	1266345	UnaryOperator	&		1266060	0					
ANR	1266346	Identifier	le		1266060	1					
ANR	1266347	Argument	c [ 1 ]		1266060	3					
ANR	1266348	ArrayIndexing	c [ 1 ]		1266060	0					
ANR	1266349	Identifier	c		1266060	0					
ANR	1266350	PrimaryExpression	1		1266060	1					
ANR	1266351	IfStatement	if ( code < 0 )		1266060	8					
ANR	1266352	Condition	code < 0	2475:16:89111:89118	1266060	0	True				
ANR	1266353	RelationalExpression	code < 0		1266060	0		<			
ANR	1266354	Identifier	code		1266060	0					
ANR	1266355	PrimaryExpression	0		1266060	1					
ANR	1266356	BreakStatement	break ;	2476:16:89137:89142	1266060	1	True				
ANR	1266357	ExpressionStatement	pp = p0	2478:8:89162:89169	1266060	1	True				
ANR	1266358	AssignmentExpression	pp = p0		1266060	0		=			
ANR	1266359	Identifier	pp		1266060	0					
ANR	1266360	Identifier	p0		1266060	1					
ANR	1266361	ExpressionStatement	p0 = p1	2478:17:89171:89178	1266060	2	True				
ANR	1266362	AssignmentExpression	p0 = p1		1266060	0		=			
ANR	1266363	Identifier	p0		1266060	0					
ANR	1266364	Identifier	p1		1266060	1					
ANR	1266365	ExpressionStatement	p1 = p2	2478:26:89180:89187	1266060	3	True				
ANR	1266366	AssignmentExpression	p1 = p2		1266060	0		=			
ANR	1266367	Identifier	p1		1266060	0					
ANR	1266368	Identifier	p2		1266060	1					
ANR	1266369	ExpressionStatement	p2 = pp	2478:35:89189:89196	1266060	4	True				
ANR	1266370	AssignmentExpression	p2 = pp		1266060	0		=			
ANR	1266371	Identifier	p2		1266060	0					
ANR	1266372	Identifier	pp		1266060	1					
ANR	1266373	ExpressionStatement	"release_colors_inline ( pfs , color_stack_ptr , 2 )"	2480:4:89208:89254	1266060	10	True				
ANR	1266374	CallExpression	"release_colors_inline ( pfs , color_stack_ptr , 2 )"		1266060	0					
ANR	1266375	Callee	release_colors_inline		1266060	0					
ANR	1266376	Identifier	release_colors_inline		1266060	0					
ANR	1266377	ArgumentList	pfs		1266060	1					
ANR	1266378	Argument	pfs		1266060	0					
ANR	1266379	Identifier	pfs		1266060	0					
ANR	1266380	Argument	color_stack_ptr		1266060	1					
ANR	1266381	Identifier	color_stack_ptr		1266060	0					
ANR	1266382	Argument	2		1266060	2					
ANR	1266383	PrimaryExpression	2		1266060	0					
ANR	1266384	ReturnStatement	return code ;	2481:4:89260:89271	1266060	11	True				
ANR	1266385	Identifier	code		1266060	0					
ANR	1266386	ReturnType	static int		1266060	1					
ANR	1266387	Identifier	constant_color_triangle		1266060	2					
ANR	1266388	ParameterList	"patch_fill_state_t * pfs , const shading_vertex_t * p0 , const shading_vertex_t * p1 , const shading_vertex_t * p2"		1266060	3					
ANR	1266389	Parameter	patch_fill_state_t * pfs	2446:24:87949:87971	1266060	0	True				
ANR	1266390	ParameterType	patch_fill_state_t *		1266060	0					
ANR	1266391	Identifier	pfs		1266060	1					
ANR	1266392	Parameter	const shading_vertex_t * p0	2447:8:87982:88007	1266060	1	True				
ANR	1266393	ParameterType	const shading_vertex_t *		1266060	0					
ANR	1266394	Identifier	p0		1266060	1					
ANR	1266395	Parameter	const shading_vertex_t * p1	2447:36:88010:88035	1266060	2	True				
ANR	1266396	ParameterType	const shading_vertex_t *		1266060	0					
ANR	1266397	Identifier	p1		1266060	1					
ANR	1266398	Parameter	const shading_vertex_t * p2	2447:64:88038:88063	1266060	3	True				
ANR	1266399	ParameterType	const shading_vertex_t *		1266060	0					
ANR	1266400	Identifier	p2		1266060	1					
ANR	1266401	CFGEntryNode	ENTRY		1266060		True				
ANR	1266402	CFGExitNode	EXIT		1266060		True				
ANR	1266403	Symbol	p0		1266060						
ANR	1266404	Symbol	pp		1266060						
ANR	1266405	Symbol	p1		1266060						
ANR	1266406	Symbol	p2		1266060						
ANR	1266407	Symbol	gs_error_unregistered		1266060						
ANR	1266408	Symbol	code		1266060						
ANR	1266409	Symbol	re . start . x		1266060						
ANR	1266410	Symbol	p0 -> p . y		1266060						
ANR	1266411	Symbol	le . end		1266060						
ANR	1266412	Symbol	re . start . y		1266060						
ANR	1266413	Symbol	le . start . y		1266060						
ANR	1266414	Symbol	le . end . x		1266060						
ANR	1266415	Symbol	le . end . y		1266060						
ANR	1266416	Symbol	le . start . x		1266060						
ANR	1266417	Symbol	reserve_colors_inline		1266060						
ANR	1266418	Symbol	p0 -> p		1266060						
ANR	1266419	Symbol	dx1		1266060						
ANR	1266420	Symbol	p1 -> c		1266060						
ANR	1266421	Symbol	dx0		1266060						
ANR	1266422	Symbol	re . start		1266060						
ANR	1266423	Symbol	ordered_triangle		1266060						
ANR	1266424	Symbol	& le		1266060						
ANR	1266425	Symbol	c		1266060						
ANR	1266426	Symbol	NULL		1266060						
ANR	1266427	Symbol	* p1		1266060						
ANR	1266428	Symbol	* p0		1266060						
ANR	1266429	Symbol	p2 -> p . y		1266060						
ANR	1266430	Symbol	i		1266060						
ANR	1266431	Symbol	* p2		1266060						
ANR	1266432	Symbol	le . start		1266060						
ANR	1266433	Symbol	* c		1266060						
ANR	1266434	Symbol	p0 -> c		1266060						
ANR	1266435	Symbol	p1 -> p		1266060						
ANR	1266436	Symbol	p1 -> p . y		1266060						
ANR	1266437	Symbol	re . end		1266060						
ANR	1266438	Symbol	re . end . x		1266060						
ANR	1266439	Symbol	re		1266060						
ANR	1266440	Symbol	re . end . y		1266060						
ANR	1266441	Symbol	color_stack_ptr		1266060						
ANR	1266442	Symbol	p2 -> c		1266060						
ANR	1266443	Symbol	le		1266060						
ANR	1266444	Symbol	dy0		1266060						
ANR	1266445	Symbol	p2 -> p		1266060						
ANR	1266446	Symbol	pfs		1266060						
ANR	1266447	Symbol	& re		1266060						
ANR	1266448	Symbol	dy1		1266060						
ANR	1266449	Function	constant_color_quadrangle_aux	2484:0:89276:100221							
ANR	1266450	FunctionDef	"constant_color_quadrangle_aux (patch_fill_state_t * pfs , const quadrangle_patch * p , bool self_intersecting , patch_color_t * c [ 3 ])"		1266449	0					
ANR	1266451	CompoundStatement		2487:0:89429:100221	1266449	0					
ANR	1266452	IdentifierDeclStatement	gs_fixed_point q [ 4 ] ;	2490:4:89573:89592	1266449	0	True				
ANR	1266453	IdentifierDecl	q [ 4 ]		1266449	0					
ANR	1266454	IdentifierDeclType	gs_fixed_point [ 4 ]		1266449	0					
ANR	1266455	Identifier	q		1266449	1					
ANR	1266456	PrimaryExpression	4		1266449	2					
ANR	1266457	IdentifierDeclStatement	"fixed ry , ey ;"	2491:4:89598:89610	1266449	1	True				
ANR	1266458	IdentifierDecl	ry		1266449	0					
ANR	1266459	IdentifierDeclType	fixed		1266449	0					
ANR	1266460	Identifier	ry		1266449	1					
ANR	1266461	IdentifierDecl	ey		1266449	1					
ANR	1266462	IdentifierDeclType	fixed		1266449	0					
ANR	1266463	Identifier	ey		1266449	1					
ANR	1266464	IdentifierDeclStatement	int code ;	2492:4:89616:89624	1266449	2	True				
ANR	1266465	IdentifierDecl	code		1266449	0					
ANR	1266466	IdentifierDeclType	int		1266449	0					
ANR	1266467	Identifier	code		1266449	1					
ANR	1266468	IdentifierDeclStatement	bool swap_axes = false ;	2493:4:89630:89652	1266449	3	True				
ANR	1266469	IdentifierDecl	swap_axes = false		1266449	0					
ANR	1266470	IdentifierDeclType	bool		1266449	0					
ANR	1266471	Identifier	swap_axes		1266449	1					
ANR	1266472	AssignmentExpression	swap_axes = false		1266449	2		=			
ANR	1266473	Identifier	false		1266449	0					
ANR	1266474	Identifier	false		1266449	1					
ANR	1266475	IdentifierDeclStatement	gx_device_color dc ;	2494:4:89658:89676	1266449	4	True				
ANR	1266476	IdentifierDecl	dc		1266449	0					
ANR	1266477	IdentifierDeclType	gx_device_color		1266449	0					
ANR	1266478	Identifier	dc		1266449	1					
ANR	1266479	IdentifierDeclStatement	bool orient ;	2495:4:89682:89693	1266449	5	True				
ANR	1266480	IdentifierDecl	orient		1266449	0					
ANR	1266481	IdentifierDeclType	bool		1266449	0					
ANR	1266482	Identifier	orient		1266449	1					
ANR	1266483	ExpressionStatement	"patch_interpolate_color ( c [ 1 ] , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 0 ] [ 1 ] -> c , pfs , 0.5 )"	2497:4:89700:89769	1266449	6	True				
ANR	1266484	CallExpression	"patch_interpolate_color ( c [ 1 ] , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 0 ] [ 1 ] -> c , pfs , 0.5 )"		1266449	0					
ANR	1266485	Callee	patch_interpolate_color		1266449	0					
ANR	1266486	Identifier	patch_interpolate_color		1266449	0					
ANR	1266487	ArgumentList	c [ 1 ]		1266449	1					
ANR	1266488	Argument	c [ 1 ]		1266449	0					
ANR	1266489	ArrayIndexing	c [ 1 ]		1266449	0					
ANR	1266490	Identifier	c		1266449	0					
ANR	1266491	PrimaryExpression	1		1266449	1					
ANR	1266492	Argument	p -> p [ 0 ] [ 0 ] -> c		1266449	1					
ANR	1266493	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> c		1266449	0					
ANR	1266494	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1266449	0					
ANR	1266495	ArrayIndexing	p -> p [ 0 ]		1266449	0					
ANR	1266496	PtrMemberAccess	p -> p		1266449	0					
ANR	1266497	Identifier	p		1266449	0					
ANR	1266498	Identifier	p		1266449	1					
ANR	1266499	PrimaryExpression	0		1266449	1					
ANR	1266500	PrimaryExpression	0		1266449	1					
ANR	1266501	Identifier	c		1266449	1					
ANR	1266502	Argument	p -> p [ 0 ] [ 1 ] -> c		1266449	2					
ANR	1266503	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> c		1266449	0					
ANR	1266504	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1266449	0					
ANR	1266505	ArrayIndexing	p -> p [ 0 ]		1266449	0					
ANR	1266506	PtrMemberAccess	p -> p		1266449	0					
ANR	1266507	Identifier	p		1266449	0					
ANR	1266508	Identifier	p		1266449	1					
ANR	1266509	PrimaryExpression	0		1266449	1					
ANR	1266510	PrimaryExpression	1		1266449	1					
ANR	1266511	Identifier	c		1266449	1					
ANR	1266512	Argument	pfs		1266449	3					
ANR	1266513	Identifier	pfs		1266449	0					
ANR	1266514	Argument	0.5		1266449	4					
ANR	1266515	PrimaryExpression	0.5		1266449	0					
ANR	1266516	ExpressionStatement	"patch_interpolate_color ( c [ 2 ] , p -> p [ 1 ] [ 0 ] -> c , p -> p [ 1 ] [ 1 ] -> c , pfs , 0.5 )"	2498:4:89775:89844	1266449	7	True				
ANR	1266517	CallExpression	"patch_interpolate_color ( c [ 2 ] , p -> p [ 1 ] [ 0 ] -> c , p -> p [ 1 ] [ 1 ] -> c , pfs , 0.5 )"		1266449	0					
ANR	1266518	Callee	patch_interpolate_color		1266449	0					
ANR	1266519	Identifier	patch_interpolate_color		1266449	0					
ANR	1266520	ArgumentList	c [ 2 ]		1266449	1					
ANR	1266521	Argument	c [ 2 ]		1266449	0					
ANR	1266522	ArrayIndexing	c [ 2 ]		1266449	0					
ANR	1266523	Identifier	c		1266449	0					
ANR	1266524	PrimaryExpression	2		1266449	1					
ANR	1266525	Argument	p -> p [ 1 ] [ 0 ] -> c		1266449	1					
ANR	1266526	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> c		1266449	0					
ANR	1266527	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1266449	0					
ANR	1266528	ArrayIndexing	p -> p [ 1 ]		1266449	0					
ANR	1266529	PtrMemberAccess	p -> p		1266449	0					
ANR	1266530	Identifier	p		1266449	0					
ANR	1266531	Identifier	p		1266449	1					
ANR	1266532	PrimaryExpression	1		1266449	1					
ANR	1266533	PrimaryExpression	0		1266449	1					
ANR	1266534	Identifier	c		1266449	1					
ANR	1266535	Argument	p -> p [ 1 ] [ 1 ] -> c		1266449	2					
ANR	1266536	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> c		1266449	0					
ANR	1266537	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1266449	0					
ANR	1266538	ArrayIndexing	p -> p [ 1 ]		1266449	0					
ANR	1266539	PtrMemberAccess	p -> p		1266449	0					
ANR	1266540	Identifier	p		1266449	0					
ANR	1266541	Identifier	p		1266449	1					
ANR	1266542	PrimaryExpression	1		1266449	1					
ANR	1266543	PrimaryExpression	1		1266449	1					
ANR	1266544	Identifier	c		1266449	1					
ANR	1266545	Argument	pfs		1266449	3					
ANR	1266546	Identifier	pfs		1266449	0					
ANR	1266547	Argument	0.5		1266449	4					
ANR	1266548	PrimaryExpression	0.5		1266449	0					
ANR	1266549	ExpressionStatement	"patch_interpolate_color ( c [ 0 ] , c [ 1 ] , c [ 2 ] , pfs , 0.5 )"	2499:4:89850:89901	1266449	8	True				
ANR	1266550	CallExpression	"patch_interpolate_color ( c [ 0 ] , c [ 1 ] , c [ 2 ] , pfs , 0.5 )"		1266449	0					
ANR	1266551	Callee	patch_interpolate_color		1266449	0					
ANR	1266552	Identifier	patch_interpolate_color		1266449	0					
ANR	1266553	ArgumentList	c [ 0 ]		1266449	1					
ANR	1266554	Argument	c [ 0 ]		1266449	0					
ANR	1266555	ArrayIndexing	c [ 0 ]		1266449	0					
ANR	1266556	Identifier	c		1266449	0					
ANR	1266557	PrimaryExpression	0		1266449	1					
ANR	1266558	Argument	c [ 1 ]		1266449	1					
ANR	1266559	ArrayIndexing	c [ 1 ]		1266449	0					
ANR	1266560	Identifier	c		1266449	0					
ANR	1266561	PrimaryExpression	1		1266449	1					
ANR	1266562	Argument	c [ 2 ]		1266449	2					
ANR	1266563	ArrayIndexing	c [ 2 ]		1266449	0					
ANR	1266564	Identifier	c		1266449	0					
ANR	1266565	PrimaryExpression	2		1266449	1					
ANR	1266566	Argument	pfs		1266449	3					
ANR	1266567	Identifier	pfs		1266449	0					
ANR	1266568	Argument	0.5		1266449	4					
ANR	1266569	PrimaryExpression	0.5		1266449	0					
ANR	1266570	ExpressionStatement	"code = patch_color_to_device_color_inline ( pfs , c [ 0 ] , & dc , NULL )"	2500:4:89907:89970	1266449	9	True				
ANR	1266571	AssignmentExpression	"code = patch_color_to_device_color_inline ( pfs , c [ 0 ] , & dc , NULL )"		1266449	0		=			
ANR	1266572	Identifier	code		1266449	0					
ANR	1266573	CallExpression	"patch_color_to_device_color_inline ( pfs , c [ 0 ] , & dc , NULL )"		1266449	1					
ANR	1266574	Callee	patch_color_to_device_color_inline		1266449	0					
ANR	1266575	Identifier	patch_color_to_device_color_inline		1266449	0					
ANR	1266576	ArgumentList	pfs		1266449	1					
ANR	1266577	Argument	pfs		1266449	0					
ANR	1266578	Identifier	pfs		1266449	0					
ANR	1266579	Argument	c [ 0 ]		1266449	1					
ANR	1266580	ArrayIndexing	c [ 0 ]		1266449	0					
ANR	1266581	Identifier	c		1266449	0					
ANR	1266582	PrimaryExpression	0		1266449	1					
ANR	1266583	Argument	& dc		1266449	2					
ANR	1266584	UnaryOperationExpression	& dc		1266449	0					
ANR	1266585	UnaryOperator	&		1266449	0					
ANR	1266586	Identifier	dc		1266449	1					
ANR	1266587	Argument	NULL		1266449	3					
ANR	1266588	Identifier	NULL		1266449	0					
ANR	1266589	IfStatement	if ( code < 0 )		1266449	10					
ANR	1266590	Condition	code < 0	2501:8:89980:89987	1266449	0	True				
ANR	1266591	RelationalExpression	code < 0		1266449	0		<			
ANR	1266592	Identifier	code		1266449	0					
ANR	1266593	PrimaryExpression	0		1266449	1					
ANR	1266594	ReturnStatement	return code ;	2502:8:89998:90009	1266449	1	True				
ANR	1266595	Identifier	code		1266449	0					
ANR	1266596	CompoundStatement		17:8:589:609	1266449	11					
ANR	1266597	IdentifierDeclStatement	gs_fixed_point qq [ 4 ] ;	2503:8:90019:90039	1266449	0	True				
ANR	1266598	IdentifierDecl	qq [ 4 ]		1266449	0					
ANR	1266599	IdentifierDeclType	gs_fixed_point [ 4 ]		1266449	0					
ANR	1266600	Identifier	qq		1266449	1					
ANR	1266601	PrimaryExpression	4		1266449	2					
ANR	1266602	ExpressionStatement	"make_vertices ( qq , p )"	2505:8:90050:90070	1266449	1	True				
ANR	1266603	CallExpression	"make_vertices ( qq , p )"		1266449	0					
ANR	1266604	Callee	make_vertices		1266449	0					
ANR	1266605	Identifier	make_vertices		1266449	0					
ANR	1266606	ArgumentList	qq		1266449	1					
ANR	1266607	Argument	qq		1266449	0					
ANR	1266608	Identifier	qq		1266449	0					
ANR	1266609	Argument	p		1266449	1					
ANR	1266610	Identifier	p		1266449	0					
ANR	1266611	ExpressionStatement	"dx = span_x ( qq , 4 )"	2510:12:90286:90304	1266449	2	True				
ANR	1266612	AssignmentExpression	"dx = span_x ( qq , 4 )"		1266449	0		=			
ANR	1266613	Identifier	dx		1266449	0					
ANR	1266614	CallExpression	"span_x ( qq , 4 )"		1266449	1					
ANR	1266615	Callee	span_x		1266449	0					
ANR	1266616	Identifier	span_x		1266449	0					
ANR	1266617	ArgumentList	qq		1266449	1					
ANR	1266618	Argument	qq		1266449	0					
ANR	1266619	Identifier	qq		1266449	0					
ANR	1266620	Argument	4		1266449	1					
ANR	1266621	PrimaryExpression	4		1266449	0					
ANR	1266622	ExpressionStatement	"dy = span_y ( qq , 4 )"	2511:12:90318:90336	1266449	3	True				
ANR	1266623	AssignmentExpression	"dy = span_y ( qq , 4 )"		1266449	0		=			
ANR	1266624	Identifier	dy		1266449	0					
ANR	1266625	CallExpression	"span_y ( qq , 4 )"		1266449	1					
ANR	1266626	Callee	span_y		1266449	0					
ANR	1266627	Identifier	span_y		1266449	0					
ANR	1266628	ArgumentList	qq		1266449	1					
ANR	1266629	Argument	qq		1266449	0					
ANR	1266630	Identifier	qq		1266449	0					
ANR	1266631	Argument	4		1266449	1					
ANR	1266632	PrimaryExpression	4		1266449	0					
ANR	1266633	IfStatement	if ( dy < dx )		1266449	4					
ANR	1266634	Condition	dy < dx	2512:16:90354:90360	1266449	0	True				
ANR	1266635	RelationalExpression	dy < dx		1266449	0		<			
ANR	1266636	Identifier	dy		1266449	0					
ANR	1266637	Identifier	dx		1266449	1					
ANR	1266638	CompoundStatement		26:25:933:933	1266449	1					
ANR	1266639	ExpressionStatement	"do_swap_axes ( qq , 4 )"	2513:16:90381:90400	1266449	0	True				
ANR	1266640	CallExpression	"do_swap_axes ( qq , 4 )"		1266449	0					
ANR	1266641	Callee	do_swap_axes		1266449	0					
ANR	1266642	Identifier	do_swap_axes		1266449	0					
ANR	1266643	ArgumentList	qq		1266449	1					
ANR	1266644	Argument	qq		1266449	0					
ANR	1266645	Identifier	qq		1266449	0					
ANR	1266646	Argument	4		1266449	1					
ANR	1266647	PrimaryExpression	4		1266449	0					
ANR	1266648	ExpressionStatement	swap_axes = true	2514:16:90418:90434	1266449	1	True				
ANR	1266649	AssignmentExpression	swap_axes = true		1266449	0		=			
ANR	1266650	Identifier	swap_axes		1266449	0					
ANR	1266651	Identifier	true		1266449	1					
ANR	1266652	ExpressionStatement	"wrap_vertices_by_y ( q , qq )"	2517:8:90465:90490	1266449	5	True				
ANR	1266653	CallExpression	"wrap_vertices_by_y ( q , qq )"		1266449	0					
ANR	1266654	Callee	wrap_vertices_by_y		1266449	0					
ANR	1266655	Identifier	wrap_vertices_by_y		1266449	0					
ANR	1266656	ArgumentList	q		1266449	1					
ANR	1266657	Argument	q		1266449	0					
ANR	1266658	Identifier	q		1266449	0					
ANR	1266659	Argument	qq		1266449	1					
ANR	1266660	Identifier	qq		1266449	0					
ANR	1266661	CompoundStatement		35:8:1196:1254	1266449	12					
ANR	1266662	IdentifierDeclStatement	"fixed dx1 = q [ 1 ] . x - q [ 0 ] . x , dy1 = q [ 1 ] . y - q [ 0 ] . y ;"	2519:8:90506:90556	1266449	0	True				
ANR	1266663	IdentifierDecl	dx1 = q [ 1 ] . x - q [ 0 ] . x		1266449	0					
ANR	1266664	IdentifierDeclType	fixed		1266449	0					
ANR	1266665	Identifier	dx1		1266449	1					
ANR	1266666	AssignmentExpression	dx1 = q [ 1 ] . x - q [ 0 ] . x		1266449	2		=			
ANR	1266667	Identifier	dx1		1266449	0					
ANR	1266668	AdditiveExpression	q [ 1 ] . x - q [ 0 ] . x		1266449	1		-			
ANR	1266669	MemberAccess	q [ 1 ] . x		1266449	0					
ANR	1266670	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1266671	Identifier	q		1266449	0					
ANR	1266672	PrimaryExpression	1		1266449	1					
ANR	1266673	Identifier	x		1266449	1					
ANR	1266674	MemberAccess	q [ 0 ] . x		1266449	1					
ANR	1266675	ArrayIndexing	q [ 0 ]		1266449	0					
ANR	1266676	Identifier	q		1266449	0					
ANR	1266677	PrimaryExpression	0		1266449	1					
ANR	1266678	Identifier	x		1266449	1					
ANR	1266679	IdentifierDecl	dy1 = q [ 1 ] . y - q [ 0 ] . y		1266449	1					
ANR	1266680	IdentifierDeclType	fixed		1266449	0					
ANR	1266681	Identifier	dy1		1266449	1					
ANR	1266682	AssignmentExpression	dy1 = q [ 1 ] . y - q [ 0 ] . y		1266449	2		=			
ANR	1266683	Identifier	dy1		1266449	0					
ANR	1266684	AdditiveExpression	q [ 1 ] . y - q [ 0 ] . y		1266449	1		-			
ANR	1266685	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1266686	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1266687	Identifier	q		1266449	0					
ANR	1266688	PrimaryExpression	1		1266449	1					
ANR	1266689	Identifier	y		1266449	1					
ANR	1266690	MemberAccess	q [ 0 ] . y		1266449	1					
ANR	1266691	ArrayIndexing	q [ 0 ]		1266449	0					
ANR	1266692	Identifier	q		1266449	0					
ANR	1266693	PrimaryExpression	0		1266449	1					
ANR	1266694	Identifier	y		1266449	1					
ANR	1266695	IdentifierDeclStatement	"fixed dx3 = q [ 3 ] . x - q [ 0 ] . x , dy3 = q [ 3 ] . y - q [ 0 ] . y ;"	2520:8:90566:90616	1266449	1	True				
ANR	1266696	IdentifierDecl	dx3 = q [ 3 ] . x - q [ 0 ] . x		1266449	0					
ANR	1266697	IdentifierDeclType	fixed		1266449	0					
ANR	1266698	Identifier	dx3		1266449	1					
ANR	1266699	AssignmentExpression	dx3 = q [ 3 ] . x - q [ 0 ] . x		1266449	2		=			
ANR	1266700	Identifier	dx3		1266449	0					
ANR	1266701	AdditiveExpression	q [ 3 ] . x - q [ 0 ] . x		1266449	1		-			
ANR	1266702	MemberAccess	q [ 3 ] . x		1266449	0					
ANR	1266703	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1266704	Identifier	q		1266449	0					
ANR	1266705	PrimaryExpression	3		1266449	1					
ANR	1266706	Identifier	x		1266449	1					
ANR	1266707	MemberAccess	q [ 0 ] . x		1266449	1					
ANR	1266708	ArrayIndexing	q [ 0 ]		1266449	0					
ANR	1266709	Identifier	q		1266449	0					
ANR	1266710	PrimaryExpression	0		1266449	1					
ANR	1266711	Identifier	x		1266449	1					
ANR	1266712	IdentifierDecl	dy3 = q [ 3 ] . y - q [ 0 ] . y		1266449	1					
ANR	1266713	IdentifierDeclType	fixed		1266449	0					
ANR	1266714	Identifier	dy3		1266449	1					
ANR	1266715	AssignmentExpression	dy3 = q [ 3 ] . y - q [ 0 ] . y		1266449	2		=			
ANR	1266716	Identifier	dy3		1266449	0					
ANR	1266717	AdditiveExpression	q [ 3 ] . y - q [ 0 ] . y		1266449	1		-			
ANR	1266718	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1266719	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1266720	Identifier	q		1266449	0					
ANR	1266721	PrimaryExpression	3		1266449	1					
ANR	1266722	Identifier	y		1266449	1					
ANR	1266723	MemberAccess	q [ 0 ] . y		1266449	1					
ANR	1266724	ArrayIndexing	q [ 0 ]		1266449	0					
ANR	1266725	Identifier	q		1266449	0					
ANR	1266726	PrimaryExpression	0		1266449	1					
ANR	1266727	Identifier	y		1266449	1					
ANR	1266728	IdentifierDeclStatement	"int64_t g13 = ( int64_t ) dx1 * dy3 , h13 = ( int64_t ) dy1 * dx3 ;"	2521:8:90626:90684	1266449	2	True				
ANR	1266729	IdentifierDecl	g13 = ( int64_t ) dx1 * dy3		1266449	0					
ANR	1266730	IdentifierDeclType	int64_t		1266449	0					
ANR	1266731	Identifier	g13		1266449	1					
ANR	1266732	AssignmentExpression	g13 = ( int64_t ) dx1 * dy3		1266449	2		=			
ANR	1266733	Identifier	g13		1266449	0					
ANR	1266734	MultiplicativeExpression	( int64_t ) dx1 * dy3		1266449	1		*			
ANR	1266735	CastExpression	( int64_t ) dx1		1266449	0					
ANR	1266736	CastTarget	int64_t		1266449	0					
ANR	1266737	Identifier	dx1		1266449	1					
ANR	1266738	Identifier	dy3		1266449	1					
ANR	1266739	IdentifierDecl	h13 = ( int64_t ) dy1 * dx3		1266449	1					
ANR	1266740	IdentifierDeclType	int64_t		1266449	0					
ANR	1266741	Identifier	h13		1266449	1					
ANR	1266742	AssignmentExpression	h13 = ( int64_t ) dy1 * dx3		1266449	2		=			
ANR	1266743	Identifier	h13		1266449	0					
ANR	1266744	MultiplicativeExpression	( int64_t ) dy1 * dx3		1266449	1		*			
ANR	1266745	CastExpression	( int64_t ) dy1		1266449	0					
ANR	1266746	CastTarget	int64_t		1266449	0					
ANR	1266747	Identifier	dy1		1266449	1					
ANR	1266748	Identifier	dx3		1266449	1					
ANR	1266749	IfStatement	if ( g13 == h13 )		1266449	3					
ANR	1266750	Condition	g13 == h13	2523:12:90699:90708	1266449	0	True				
ANR	1266751	EqualityExpression	g13 == h13		1266449	0		==			
ANR	1266752	Identifier	g13		1266449	0					
ANR	1266753	Identifier	h13		1266449	1					
ANR	1266754	CompoundStatement		39:12:1359:1417	1266449	1					
ANR	1266755	IdentifierDeclStatement	"fixed dx2 = q [ 2 ] . x - q [ 0 ] . x , dy2 = q [ 2 ] . y - q [ 0 ] . y ;"	2524:12:90725:90775	1266449	0	True				
ANR	1266756	IdentifierDecl	dx2 = q [ 2 ] . x - q [ 0 ] . x		1266449	0					
ANR	1266757	IdentifierDeclType	fixed		1266449	0					
ANR	1266758	Identifier	dx2		1266449	1					
ANR	1266759	AssignmentExpression	dx2 = q [ 2 ] . x - q [ 0 ] . x		1266449	2		=			
ANR	1266760	Identifier	dx2		1266449	0					
ANR	1266761	AdditiveExpression	q [ 2 ] . x - q [ 0 ] . x		1266449	1		-			
ANR	1266762	MemberAccess	q [ 2 ] . x		1266449	0					
ANR	1266763	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1266764	Identifier	q		1266449	0					
ANR	1266765	PrimaryExpression	2		1266449	1					
ANR	1266766	Identifier	x		1266449	1					
ANR	1266767	MemberAccess	q [ 0 ] . x		1266449	1					
ANR	1266768	ArrayIndexing	q [ 0 ]		1266449	0					
ANR	1266769	Identifier	q		1266449	0					
ANR	1266770	PrimaryExpression	0		1266449	1					
ANR	1266771	Identifier	x		1266449	1					
ANR	1266772	IdentifierDecl	dy2 = q [ 2 ] . y - q [ 0 ] . y		1266449	1					
ANR	1266773	IdentifierDeclType	fixed		1266449	0					
ANR	1266774	Identifier	dy2		1266449	1					
ANR	1266775	AssignmentExpression	dy2 = q [ 2 ] . y - q [ 0 ] . y		1266449	2		=			
ANR	1266776	Identifier	dy2		1266449	0					
ANR	1266777	AdditiveExpression	q [ 2 ] . y - q [ 0 ] . y		1266449	1		-			
ANR	1266778	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1266779	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1266780	Identifier	q		1266449	0					
ANR	1266781	PrimaryExpression	2		1266449	1					
ANR	1266782	Identifier	y		1266449	1					
ANR	1266783	MemberAccess	q [ 0 ] . y		1266449	1					
ANR	1266784	ArrayIndexing	q [ 0 ]		1266449	0					
ANR	1266785	Identifier	q		1266449	0					
ANR	1266786	PrimaryExpression	0		1266449	1					
ANR	1266787	Identifier	y		1266449	1					
ANR	1266788	IdentifierDeclStatement	"int64_t g23 = ( int64_t ) dx2 * dy3 , h23 = ( int64_t ) dy2 * dx3 ;"	2525:12:90789:90847	1266449	1	True				
ANR	1266789	IdentifierDecl	g23 = ( int64_t ) dx2 * dy3		1266449	0					
ANR	1266790	IdentifierDeclType	int64_t		1266449	0					
ANR	1266791	Identifier	g23		1266449	1					
ANR	1266792	AssignmentExpression	g23 = ( int64_t ) dx2 * dy3		1266449	2		=			
ANR	1266793	Identifier	g23		1266449	0					
ANR	1266794	MultiplicativeExpression	( int64_t ) dx2 * dy3		1266449	1		*			
ANR	1266795	CastExpression	( int64_t ) dx2		1266449	0					
ANR	1266796	CastTarget	int64_t		1266449	0					
ANR	1266797	Identifier	dx2		1266449	1					
ANR	1266798	Identifier	dy3		1266449	1					
ANR	1266799	IdentifierDecl	h23 = ( int64_t ) dy2 * dx3		1266449	1					
ANR	1266800	IdentifierDeclType	int64_t		1266449	0					
ANR	1266801	Identifier	h23		1266449	1					
ANR	1266802	AssignmentExpression	h23 = ( int64_t ) dy2 * dx3		1266449	2		=			
ANR	1266803	Identifier	h23		1266449	0					
ANR	1266804	MultiplicativeExpression	( int64_t ) dy2 * dx3		1266449	1		*			
ANR	1266805	CastExpression	( int64_t ) dy2		1266449	0					
ANR	1266806	CastTarget	int64_t		1266449	0					
ANR	1266807	Identifier	dy2		1266449	1					
ANR	1266808	Identifier	dx3		1266449	1					
ANR	1266809	IfStatement	if ( dx1 == 0 && dy1 == 0 && g23 == h23 )		1266449	2					
ANR	1266810	Condition	dx1 == 0 && dy1 == 0 && g23 == h23	2527:16:90866:90899	1266449	0	True				
ANR	1266811	AndExpression	dx1 == 0 && dy1 == 0 && g23 == h23		1266449	0		&&			
ANR	1266812	EqualityExpression	dx1 == 0		1266449	0		==			
ANR	1266813	Identifier	dx1		1266449	0					
ANR	1266814	PrimaryExpression	0		1266449	1					
ANR	1266815	AndExpression	dy1 == 0 && g23 == h23		1266449	1		&&			
ANR	1266816	EqualityExpression	dy1 == 0		1266449	0		==			
ANR	1266817	Identifier	dy1		1266449	0					
ANR	1266818	PrimaryExpression	0		1266449	1					
ANR	1266819	EqualityExpression	g23 == h23		1266449	1		==			
ANR	1266820	Identifier	g23		1266449	0					
ANR	1266821	Identifier	h23		1266449	1					
ANR	1266822	ReturnStatement	return 0 ;	2528:16:90918:90926	1266449	1	True				
ANR	1266823	PrimaryExpression	0		1266449	0					
ANR	1266824	IfStatement	if ( g23 != h23 )		1266449	3					
ANR	1266825	Condition	g23 != h23	2529:16:90944:90953	1266449	0	True				
ANR	1266826	EqualityExpression	g23 != h23		1266449	0		!=			
ANR	1266827	Identifier	g23		1266449	0					
ANR	1266828	Identifier	h23		1266449	1					
ANR	1266829	CompoundStatement		43:28:1526:1526	1266449	1					
ANR	1266830	ExpressionStatement	orient = ( g23 > h23 )	2530:16:90974:90994	1266449	0	True				
ANR	1266831	AssignmentExpression	orient = ( g23 > h23 )		1266449	0		=			
ANR	1266832	Identifier	orient		1266449	0					
ANR	1266833	RelationalExpression	g23 > h23		1266449	1		>			
ANR	1266834	Identifier	g23		1266449	0					
ANR	1266835	Identifier	h23		1266449	1					
ANR	1266836	IfStatement	if ( q [ 2 ] . y <= q [ 3 ] . y )		1266449	1					
ANR	1266837	Condition	q [ 2 ] . y <= q [ 3 ] . y	2531:20:91016:91031	1266449	0	True				
ANR	1266838	RelationalExpression	q [ 2 ] . y <= q [ 3 ] . y		1266449	0		<=			
ANR	1266839	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1266840	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1266841	Identifier	q		1266449	0					
ANR	1266842	PrimaryExpression	2		1266449	1					
ANR	1266843	Identifier	y		1266449	1					
ANR	1266844	MemberAccess	q [ 3 ] . y		1266449	1					
ANR	1266845	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1266846	Identifier	q		1266449	0					
ANR	1266847	PrimaryExpression	3		1266449	1					
ANR	1266848	Identifier	y		1266449	1					
ANR	1266849	CompoundStatement		45:38:1604:1604	1266449	1					
ANR	1266850	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , q [ 1 ] . y , q [ 2 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	0					
ANR	1266851	Condition	"( code = gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , q [ 1 ] . y , q [ 2 ] . y , swap_axes , & dc , orient ) ) < 0"	2532:24:91060:91150	1266449	0	True				
ANR	1266852	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , q [ 1 ] . y , q [ 2 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1266853	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , q [ 1 ] . y , q [ 2 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1266854	Identifier	code		1266449	0					
ANR	1266855	CallExpression	"gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , q [ 1 ] . y , q [ 2 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1266856	Callee	gx_shade_trapezoid		1266449	0					
ANR	1266857	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1266858	ArgumentList	pfs		1266449	1					
ANR	1266859	Argument	pfs		1266449	0					
ANR	1266860	Identifier	pfs		1266449	0					
ANR	1266861	Argument	q		1266449	1					
ANR	1266862	Identifier	q		1266449	0					
ANR	1266863	Argument	1		1266449	2					
ANR	1266864	PrimaryExpression	1		1266449	0					
ANR	1266865	Argument	2		1266449	3					
ANR	1266866	PrimaryExpression	2		1266449	0					
ANR	1266867	Argument	0		1266449	4					
ANR	1266868	PrimaryExpression	0		1266449	0					
ANR	1266869	Argument	3		1266449	5					
ANR	1266870	PrimaryExpression	3		1266449	0					
ANR	1266871	Argument	q [ 1 ] . y		1266449	6					
ANR	1266872	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1266873	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1266874	Identifier	q		1266449	0					
ANR	1266875	PrimaryExpression	1		1266449	1					
ANR	1266876	Identifier	y		1266449	1					
ANR	1266877	Argument	q [ 2 ] . y		1266449	7					
ANR	1266878	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1266879	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1266880	Identifier	q		1266449	0					
ANR	1266881	PrimaryExpression	2		1266449	1					
ANR	1266882	Identifier	y		1266449	1					
ANR	1266883	Argument	swap_axes		1266449	8					
ANR	1266884	Identifier	swap_axes		1266449	0					
ANR	1266885	Argument	& dc		1266449	9					
ANR	1266886	UnaryOperationExpression	& dc		1266449	0					
ANR	1266887	UnaryOperator	&		1266449	0					
ANR	1266888	Identifier	dc		1266449	1					
ANR	1266889	Argument	orient		1266449	10					
ANR	1266890	Identifier	orient		1266449	0					
ANR	1266891	PrimaryExpression	0		1266449	1					
ANR	1266892	ReturnStatement	return code ;	2533:24:91177:91188	1266449	1	True				
ANR	1266893	Identifier	code		1266449	0					
ANR	1266894	ReturnStatement	"return gx_shade_trapezoid ( pfs , q , 2 , 3 , 0 , 3 , q [ 2 ] . y , q [ 3 ] . y , swap_axes , & dc , orient ) ;"	2534:20:91210:91295	1266449	1	True				
ANR	1266895	CallExpression	"gx_shade_trapezoid ( pfs , q , 2 , 3 , 0 , 3 , q [ 2 ] . y , q [ 3 ] . y , swap_axes , & dc , orient )"		1266449	0					
ANR	1266896	Callee	gx_shade_trapezoid		1266449	0					
ANR	1266897	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1266898	ArgumentList	pfs		1266449	1					
ANR	1266899	Argument	pfs		1266449	0					
ANR	1266900	Identifier	pfs		1266449	0					
ANR	1266901	Argument	q		1266449	1					
ANR	1266902	Identifier	q		1266449	0					
ANR	1266903	Argument	2		1266449	2					
ANR	1266904	PrimaryExpression	2		1266449	0					
ANR	1266905	Argument	3		1266449	3					
ANR	1266906	PrimaryExpression	3		1266449	0					
ANR	1266907	Argument	0		1266449	4					
ANR	1266908	PrimaryExpression	0		1266449	0					
ANR	1266909	Argument	3		1266449	5					
ANR	1266910	PrimaryExpression	3		1266449	0					
ANR	1266911	Argument	q [ 2 ] . y		1266449	6					
ANR	1266912	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1266913	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1266914	Identifier	q		1266449	0					
ANR	1266915	PrimaryExpression	2		1266449	1					
ANR	1266916	Identifier	y		1266449	1					
ANR	1266917	Argument	q [ 3 ] . y		1266449	7					
ANR	1266918	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1266919	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1266920	Identifier	q		1266449	0					
ANR	1266921	PrimaryExpression	3		1266449	1					
ANR	1266922	Identifier	y		1266449	1					
ANR	1266923	Argument	swap_axes		1266449	8					
ANR	1266924	Identifier	swap_axes		1266449	0					
ANR	1266925	Argument	& dc		1266449	9					
ANR	1266926	UnaryOperationExpression	& dc		1266449	0					
ANR	1266927	UnaryOperator	&		1266449	0					
ANR	1266928	Identifier	dc		1266449	1					
ANR	1266929	Argument	orient		1266449	10					
ANR	1266930	Identifier	orient		1266449	0					
ANR	1266931	ElseStatement	else		1266449	0					
ANR	1266932	CompoundStatement		49:23:1890:1890	1266449	0					
ANR	1266933	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , q [ 1 ] . y , q [ 3 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	0					
ANR	1266934	Condition	"( code = gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , q [ 1 ] . y , q [ 3 ] . y , swap_axes , & dc , orient ) ) < 0"	2536:24:91346:91436	1266449	0	True				
ANR	1266935	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , q [ 1 ] . y , q [ 3 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1266936	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , q [ 1 ] . y , q [ 3 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1266937	Identifier	code		1266449	0					
ANR	1266938	CallExpression	"gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , q [ 1 ] . y , q [ 3 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1266939	Callee	gx_shade_trapezoid		1266449	0					
ANR	1266940	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1266941	ArgumentList	pfs		1266449	1					
ANR	1266942	Argument	pfs		1266449	0					
ANR	1266943	Identifier	pfs		1266449	0					
ANR	1266944	Argument	q		1266449	1					
ANR	1266945	Identifier	q		1266449	0					
ANR	1266946	Argument	1		1266449	2					
ANR	1266947	PrimaryExpression	1		1266449	0					
ANR	1266948	Argument	2		1266449	3					
ANR	1266949	PrimaryExpression	2		1266449	0					
ANR	1266950	Argument	0		1266449	4					
ANR	1266951	PrimaryExpression	0		1266449	0					
ANR	1266952	Argument	3		1266449	5					
ANR	1266953	PrimaryExpression	3		1266449	0					
ANR	1266954	Argument	q [ 1 ] . y		1266449	6					
ANR	1266955	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1266956	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1266957	Identifier	q		1266449	0					
ANR	1266958	PrimaryExpression	1		1266449	1					
ANR	1266959	Identifier	y		1266449	1					
ANR	1266960	Argument	q [ 3 ] . y		1266449	7					
ANR	1266961	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1266962	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1266963	Identifier	q		1266449	0					
ANR	1266964	PrimaryExpression	3		1266449	1					
ANR	1266965	Identifier	y		1266449	1					
ANR	1266966	Argument	swap_axes		1266449	8					
ANR	1266967	Identifier	swap_axes		1266449	0					
ANR	1266968	Argument	& dc		1266449	9					
ANR	1266969	UnaryOperationExpression	& dc		1266449	0					
ANR	1266970	UnaryOperator	&		1266449	0					
ANR	1266971	Identifier	dc		1266449	1					
ANR	1266972	Argument	orient		1266449	10					
ANR	1266973	Identifier	orient		1266449	0					
ANR	1266974	PrimaryExpression	0		1266449	1					
ANR	1266975	ReturnStatement	return code ;	2537:24:91463:91474	1266449	1	True				
ANR	1266976	Identifier	code		1266449	0					
ANR	1266977	ReturnStatement	"return gx_shade_trapezoid ( pfs , q , 1 , 2 , 3 , 2 , q [ 3 ] . y , q [ 2 ] . y , swap_axes , & dc , orient ) ;"	2538:20:91496:91581	1266449	1	True				
ANR	1266978	CallExpression	"gx_shade_trapezoid ( pfs , q , 1 , 2 , 3 , 2 , q [ 3 ] . y , q [ 2 ] . y , swap_axes , & dc , orient )"		1266449	0					
ANR	1266979	Callee	gx_shade_trapezoid		1266449	0					
ANR	1266980	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1266981	ArgumentList	pfs		1266449	1					
ANR	1266982	Argument	pfs		1266449	0					
ANR	1266983	Identifier	pfs		1266449	0					
ANR	1266984	Argument	q		1266449	1					
ANR	1266985	Identifier	q		1266449	0					
ANR	1266986	Argument	1		1266449	2					
ANR	1266987	PrimaryExpression	1		1266449	0					
ANR	1266988	Argument	2		1266449	3					
ANR	1266989	PrimaryExpression	2		1266449	0					
ANR	1266990	Argument	3		1266449	4					
ANR	1266991	PrimaryExpression	3		1266449	0					
ANR	1266992	Argument	2		1266449	5					
ANR	1266993	PrimaryExpression	2		1266449	0					
ANR	1266994	Argument	q [ 3 ] . y		1266449	6					
ANR	1266995	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1266996	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1266997	Identifier	q		1266449	0					
ANR	1266998	PrimaryExpression	3		1266449	1					
ANR	1266999	Identifier	y		1266449	1					
ANR	1267000	Argument	q [ 2 ] . y		1266449	7					
ANR	1267001	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1267002	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1267003	Identifier	q		1266449	0					
ANR	1267004	PrimaryExpression	2		1266449	1					
ANR	1267005	Identifier	y		1266449	1					
ANR	1267006	Argument	swap_axes		1266449	8					
ANR	1267007	Identifier	swap_axes		1266449	0					
ANR	1267008	Argument	& dc		1266449	9					
ANR	1267009	UnaryOperationExpression	& dc		1266449	0					
ANR	1267010	UnaryOperator	&		1266449	0					
ANR	1267011	Identifier	dc		1266449	1					
ANR	1267012	Argument	orient		1266449	10					
ANR	1267013	Identifier	orient		1266449	0					
ANR	1267014	ElseStatement	else		1266449	0					
ANR	1267015	CompoundStatement		55:16:2208:2266	1266449	0					
ANR	1267016	IdentifierDeclStatement	"int64_t g12 = ( int64_t ) dx1 * dy2 , h12 = ( int64_t ) dy1 * dx2 ;"	2541:16:91638:91696	1266449	0	True				
ANR	1267017	IdentifierDecl	g12 = ( int64_t ) dx1 * dy2		1266449	0					
ANR	1267018	IdentifierDeclType	int64_t		1266449	0					
ANR	1267019	Identifier	g12		1266449	1					
ANR	1267020	AssignmentExpression	g12 = ( int64_t ) dx1 * dy2		1266449	2		=			
ANR	1267021	Identifier	g12		1266449	0					
ANR	1267022	MultiplicativeExpression	( int64_t ) dx1 * dy2		1266449	1		*			
ANR	1267023	CastExpression	( int64_t ) dx1		1266449	0					
ANR	1267024	CastTarget	int64_t		1266449	0					
ANR	1267025	Identifier	dx1		1266449	1					
ANR	1267026	Identifier	dy2		1266449	1					
ANR	1267027	IdentifierDecl	h12 = ( int64_t ) dy1 * dx2		1266449	1					
ANR	1267028	IdentifierDeclType	int64_t		1266449	0					
ANR	1267029	Identifier	h12		1266449	1					
ANR	1267030	AssignmentExpression	h12 = ( int64_t ) dy1 * dx2		1266449	2		=			
ANR	1267031	Identifier	h12		1266449	0					
ANR	1267032	MultiplicativeExpression	( int64_t ) dy1 * dx2		1266449	1		*			
ANR	1267033	CastExpression	( int64_t ) dy1		1266449	0					
ANR	1267034	CastTarget	int64_t		1266449	0					
ANR	1267035	Identifier	dy1		1266449	1					
ANR	1267036	Identifier	dx2		1266449	1					
ANR	1267037	IfStatement	if ( dx3 == 0 && dy3 == 0 && g12 == h12 )		1266449	1					
ANR	1267038	Condition	dx3 == 0 && dy3 == 0 && g12 == h12	2543:20:91719:91752	1266449	0	True				
ANR	1267039	AndExpression	dx3 == 0 && dy3 == 0 && g12 == h12		1266449	0		&&			
ANR	1267040	EqualityExpression	dx3 == 0		1266449	0		==			
ANR	1267041	Identifier	dx3		1266449	0					
ANR	1267042	PrimaryExpression	0		1266449	1					
ANR	1267043	AndExpression	dy3 == 0 && g12 == h12		1266449	1		&&			
ANR	1267044	EqualityExpression	dy3 == 0		1266449	0		==			
ANR	1267045	Identifier	dy3		1266449	0					
ANR	1267046	PrimaryExpression	0		1266449	1					
ANR	1267047	EqualityExpression	g12 == h12		1266449	1		==			
ANR	1267048	Identifier	g12		1266449	0					
ANR	1267049	Identifier	h12		1266449	1					
ANR	1267050	ReturnStatement	return 0 ;	2544:20:91775:91783	1266449	1	True				
ANR	1267051	PrimaryExpression	0		1266449	0					
ANR	1267052	ExpressionStatement	orient = ( g12 > h12 )	2545:16:91801:91821	1266449	2	True				
ANR	1267053	AssignmentExpression	orient = ( g12 > h12 )		1266449	0		=			
ANR	1267054	Identifier	orient		1266449	0					
ANR	1267055	RelationalExpression	g12 > h12		1266449	1		>			
ANR	1267056	Identifier	g12		1266449	0					
ANR	1267057	Identifier	h12		1266449	1					
ANR	1267058	IfStatement	if ( q [ 1 ] . y <= q [ 2 ] . y )		1266449	3					
ANR	1267059	Condition	q [ 1 ] . y <= q [ 2 ] . y	2546:20:91843:91858	1266449	0	True				
ANR	1267060	RelationalExpression	q [ 1 ] . y <= q [ 2 ] . y		1266449	0		<=			
ANR	1267061	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1267062	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1267063	Identifier	q		1266449	0					
ANR	1267064	PrimaryExpression	1		1266449	1					
ANR	1267065	Identifier	y		1266449	1					
ANR	1267066	MemberAccess	q [ 2 ] . y		1266449	1					
ANR	1267067	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1267068	Identifier	q		1266449	0					
ANR	1267069	PrimaryExpression	2		1266449	1					
ANR	1267070	Identifier	y		1266449	1					
ANR	1267071	CompoundStatement		60:38:2431:2431	1266449	1					
ANR	1267072	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	0					
ANR	1267073	Condition	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0"	2547:24:91887:91977	1266449	0	True				
ANR	1267074	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1267075	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1267076	Identifier	code		1266449	0					
ANR	1267077	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1267078	Callee	gx_shade_trapezoid		1266449	0					
ANR	1267079	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1267080	ArgumentList	pfs		1266449	1					
ANR	1267081	Argument	pfs		1266449	0					
ANR	1267082	Identifier	pfs		1266449	0					
ANR	1267083	Argument	q		1266449	1					
ANR	1267084	Identifier	q		1266449	0					
ANR	1267085	Argument	0		1266449	2					
ANR	1267086	PrimaryExpression	0		1266449	0					
ANR	1267087	Argument	1		1266449	3					
ANR	1267088	PrimaryExpression	1		1266449	0					
ANR	1267089	Argument	3		1266449	4					
ANR	1267090	PrimaryExpression	3		1266449	0					
ANR	1267091	Argument	2		1266449	5					
ANR	1267092	PrimaryExpression	2		1266449	0					
ANR	1267093	Argument	q [ 0 ] . y		1266449	6					
ANR	1267094	MemberAccess	q [ 0 ] . y		1266449	0					
ANR	1267095	ArrayIndexing	q [ 0 ]		1266449	0					
ANR	1267096	Identifier	q		1266449	0					
ANR	1267097	PrimaryExpression	0		1266449	1					
ANR	1267098	Identifier	y		1266449	1					
ANR	1267099	Argument	q [ 1 ] . y		1266449	7					
ANR	1267100	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1267101	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1267102	Identifier	q		1266449	0					
ANR	1267103	PrimaryExpression	1		1266449	1					
ANR	1267104	Identifier	y		1266449	1					
ANR	1267105	Argument	swap_axes		1266449	8					
ANR	1267106	Identifier	swap_axes		1266449	0					
ANR	1267107	Argument	& dc		1266449	9					
ANR	1267108	UnaryOperationExpression	& dc		1266449	0					
ANR	1267109	UnaryOperator	&		1266449	0					
ANR	1267110	Identifier	dc		1266449	1					
ANR	1267111	Argument	orient		1266449	10					
ANR	1267112	Identifier	orient		1266449	0					
ANR	1267113	PrimaryExpression	0		1266449	1					
ANR	1267114	ReturnStatement	return code ;	2548:24:92004:92015	1266449	1	True				
ANR	1267115	Identifier	code		1266449	0					
ANR	1267116	ReturnStatement	"return gx_shade_trapezoid ( pfs , q , 1 , 2 , 3 , 2 , q [ 1 ] . y , q [ 2 ] . y , swap_axes , & dc , orient ) ;"	2549:20:92037:92122	1266449	1	True				
ANR	1267117	CallExpression	"gx_shade_trapezoid ( pfs , q , 1 , 2 , 3 , 2 , q [ 1 ] . y , q [ 2 ] . y , swap_axes , & dc , orient )"		1266449	0					
ANR	1267118	Callee	gx_shade_trapezoid		1266449	0					
ANR	1267119	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1267120	ArgumentList	pfs		1266449	1					
ANR	1267121	Argument	pfs		1266449	0					
ANR	1267122	Identifier	pfs		1266449	0					
ANR	1267123	Argument	q		1266449	1					
ANR	1267124	Identifier	q		1266449	0					
ANR	1267125	Argument	1		1266449	2					
ANR	1267126	PrimaryExpression	1		1266449	0					
ANR	1267127	Argument	2		1266449	3					
ANR	1267128	PrimaryExpression	2		1266449	0					
ANR	1267129	Argument	3		1266449	4					
ANR	1267130	PrimaryExpression	3		1266449	0					
ANR	1267131	Argument	2		1266449	5					
ANR	1267132	PrimaryExpression	2		1266449	0					
ANR	1267133	Argument	q [ 1 ] . y		1266449	6					
ANR	1267134	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1267135	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1267136	Identifier	q		1266449	0					
ANR	1267137	PrimaryExpression	1		1266449	1					
ANR	1267138	Identifier	y		1266449	1					
ANR	1267139	Argument	q [ 2 ] . y		1266449	7					
ANR	1267140	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1267141	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1267142	Identifier	q		1266449	0					
ANR	1267143	PrimaryExpression	2		1266449	1					
ANR	1267144	Identifier	y		1266449	1					
ANR	1267145	Argument	swap_axes		1266449	8					
ANR	1267146	Identifier	swap_axes		1266449	0					
ANR	1267147	Argument	& dc		1266449	9					
ANR	1267148	UnaryOperationExpression	& dc		1266449	0					
ANR	1267149	UnaryOperator	&		1266449	0					
ANR	1267150	Identifier	dc		1266449	1					
ANR	1267151	Argument	orient		1266449	10					
ANR	1267152	Identifier	orient		1266449	0					
ANR	1267153	ElseStatement	else		1266449	0					
ANR	1267154	CompoundStatement		64:23:2717:2717	1266449	0					
ANR	1267155	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 0 ] . y , q [ 2 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	0					
ANR	1267156	Condition	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 0 ] . y , q [ 2 ] . y , swap_axes , & dc , orient ) ) < 0"	2551:24:92173:92263	1266449	0	True				
ANR	1267157	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 0 ] . y , q [ 2 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1267158	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 0 ] . y , q [ 2 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1267159	Identifier	code		1266449	0					
ANR	1267160	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 0 ] . y , q [ 2 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1267161	Callee	gx_shade_trapezoid		1266449	0					
ANR	1267162	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1267163	ArgumentList	pfs		1266449	1					
ANR	1267164	Argument	pfs		1266449	0					
ANR	1267165	Identifier	pfs		1266449	0					
ANR	1267166	Argument	q		1266449	1					
ANR	1267167	Identifier	q		1266449	0					
ANR	1267168	Argument	0		1266449	2					
ANR	1267169	PrimaryExpression	0		1266449	0					
ANR	1267170	Argument	1		1266449	3					
ANR	1267171	PrimaryExpression	1		1266449	0					
ANR	1267172	Argument	3		1266449	4					
ANR	1267173	PrimaryExpression	3		1266449	0					
ANR	1267174	Argument	2		1266449	5					
ANR	1267175	PrimaryExpression	2		1266449	0					
ANR	1267176	Argument	q [ 0 ] . y		1266449	6					
ANR	1267177	MemberAccess	q [ 0 ] . y		1266449	0					
ANR	1267178	ArrayIndexing	q [ 0 ]		1266449	0					
ANR	1267179	Identifier	q		1266449	0					
ANR	1267180	PrimaryExpression	0		1266449	1					
ANR	1267181	Identifier	y		1266449	1					
ANR	1267182	Argument	q [ 2 ] . y		1266449	7					
ANR	1267183	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1267184	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1267185	Identifier	q		1266449	0					
ANR	1267186	PrimaryExpression	2		1266449	1					
ANR	1267187	Identifier	y		1266449	1					
ANR	1267188	Argument	swap_axes		1266449	8					
ANR	1267189	Identifier	swap_axes		1266449	0					
ANR	1267190	Argument	& dc		1266449	9					
ANR	1267191	UnaryOperationExpression	& dc		1266449	0					
ANR	1267192	UnaryOperator	&		1266449	0					
ANR	1267193	Identifier	dc		1266449	1					
ANR	1267194	Argument	orient		1266449	10					
ANR	1267195	Identifier	orient		1266449	0					
ANR	1267196	PrimaryExpression	0		1266449	1					
ANR	1267197	ReturnStatement	return code ;	2552:24:92290:92301	1266449	1	True				
ANR	1267198	Identifier	code		1266449	0					
ANR	1267199	ReturnStatement	"return gx_shade_trapezoid ( pfs , q , 0 , 1 , 2 , 1 , q [ 2 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ;"	2553:20:92323:92408	1266449	1	True				
ANR	1267200	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 1 , 2 , 1 , q [ 2 ] . y , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	0					
ANR	1267201	Callee	gx_shade_trapezoid		1266449	0					
ANR	1267202	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1267203	ArgumentList	pfs		1266449	1					
ANR	1267204	Argument	pfs		1266449	0					
ANR	1267205	Identifier	pfs		1266449	0					
ANR	1267206	Argument	q		1266449	1					
ANR	1267207	Identifier	q		1266449	0					
ANR	1267208	Argument	0		1266449	2					
ANR	1267209	PrimaryExpression	0		1266449	0					
ANR	1267210	Argument	1		1266449	3					
ANR	1267211	PrimaryExpression	1		1266449	0					
ANR	1267212	Argument	2		1266449	4					
ANR	1267213	PrimaryExpression	2		1266449	0					
ANR	1267214	Argument	1		1266449	5					
ANR	1267215	PrimaryExpression	1		1266449	0					
ANR	1267216	Argument	q [ 2 ] . y		1266449	6					
ANR	1267217	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1267218	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1267219	Identifier	q		1266449	0					
ANR	1267220	PrimaryExpression	2		1266449	1					
ANR	1267221	Identifier	y		1266449	1					
ANR	1267222	Argument	q [ 1 ] . y		1266449	7					
ANR	1267223	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1267224	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1267225	Identifier	q		1266449	0					
ANR	1267226	PrimaryExpression	1		1266449	1					
ANR	1267227	Identifier	y		1266449	1					
ANR	1267228	Argument	swap_axes		1266449	8					
ANR	1267229	Identifier	swap_axes		1266449	0					
ANR	1267230	Argument	& dc		1266449	9					
ANR	1267231	UnaryOperationExpression	& dc		1266449	0					
ANR	1267232	UnaryOperator	&		1266449	0					
ANR	1267233	Identifier	dc		1266449	1					
ANR	1267234	Argument	orient		1266449	10					
ANR	1267235	Identifier	orient		1266449	0					
ANR	1267236	ExpressionStatement	orient = ( ( int64_t ) dx1 * dy3 > ( int64_t ) dy1 * dx3 )	2557:8:92460:92510	1266449	4	True				
ANR	1267237	AssignmentExpression	orient = ( ( int64_t ) dx1 * dy3 > ( int64_t ) dy1 * dx3 )		1266449	0		=			
ANR	1267238	Identifier	orient		1266449	0					
ANR	1267239	RelationalExpression	( int64_t ) dx1 * dy3 > ( int64_t ) dy1 * dx3		1266449	1		>			
ANR	1267240	MultiplicativeExpression	( int64_t ) dx1 * dy3		1266449	0		*			
ANR	1267241	CastExpression	( int64_t ) dx1		1266449	0					
ANR	1267242	CastTarget	int64_t		1266449	0					
ANR	1267243	Identifier	dx1		1266449	1					
ANR	1267244	Identifier	dy3		1266449	1					
ANR	1267245	MultiplicativeExpression	( int64_t ) dy1 * dx3		1266449	1		*			
ANR	1267246	CastExpression	( int64_t ) dy1		1266449	0					
ANR	1267247	CastTarget	int64_t		1266449	0					
ANR	1267248	Identifier	dy1		1266449	1					
ANR	1267249	Identifier	dx3		1266449	1					
ANR	1267250	IfStatement	if ( q [ 1 ] . y <= q [ 2 ] . y && q [ 2 ] . y <= q [ 3 ] . y )		1266449	13					
ANR	1267251	Condition	q [ 1 ] . y <= q [ 2 ] . y && q [ 2 ] . y <= q [ 3 ] . y	2559:8:92526:92561	1266449	0	True				
ANR	1267252	AndExpression	q [ 1 ] . y <= q [ 2 ] . y && q [ 2 ] . y <= q [ 3 ] . y		1266449	0		&&			
ANR	1267253	RelationalExpression	q [ 1 ] . y <= q [ 2 ] . y		1266449	0		<=			
ANR	1267254	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1267255	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1267256	Identifier	q		1266449	0					
ANR	1267257	PrimaryExpression	1		1266449	1					
ANR	1267258	Identifier	y		1266449	1					
ANR	1267259	MemberAccess	q [ 2 ] . y		1266449	1					
ANR	1267260	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1267261	Identifier	q		1266449	0					
ANR	1267262	PrimaryExpression	2		1266449	1					
ANR	1267263	Identifier	y		1266449	1					
ANR	1267264	RelationalExpression	q [ 2 ] . y <= q [ 3 ] . y		1266449	1		<=			
ANR	1267265	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1267266	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1267267	Identifier	q		1266449	0					
ANR	1267268	PrimaryExpression	2		1266449	1					
ANR	1267269	Identifier	y		1266449	1					
ANR	1267270	MemberAccess	q [ 3 ] . y		1266449	1					
ANR	1267271	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1267272	Identifier	q		1266449	0					
ANR	1267273	PrimaryExpression	3		1266449	1					
ANR	1267274	Identifier	y		1266449	1					
ANR	1267275	CompoundStatement		73:46:3134:3134	1266449	1					
ANR	1267276	IfStatement	"if ( self_intersecting && intersection_of_small_bars ( q , 0 , 3 , 1 , 2 , & ry , & ey ) )"		1266449	0					
ANR	1267277	Condition	"self_intersecting && intersection_of_small_bars ( q , 0 , 3 , 1 , 2 , & ry , & ey )"	2560:12:92578:92649	1266449	0	True				
ANR	1267278	AndExpression	"self_intersecting && intersection_of_small_bars ( q , 0 , 3 , 1 , 2 , & ry , & ey )"		1266449	0		&&			
ANR	1267279	Identifier	self_intersecting		1266449	0					
ANR	1267280	CallExpression	"intersection_of_small_bars ( q , 0 , 3 , 1 , 2 , & ry , & ey )"		1266449	1					
ANR	1267281	Callee	intersection_of_small_bars		1266449	0					
ANR	1267282	Identifier	intersection_of_small_bars		1266449	0					
ANR	1267283	ArgumentList	q		1266449	1					
ANR	1267284	Argument	q		1266449	0					
ANR	1267285	Identifier	q		1266449	0					
ANR	1267286	Argument	0		1266449	1					
ANR	1267287	PrimaryExpression	0		1266449	0					
ANR	1267288	Argument	3		1266449	2					
ANR	1267289	PrimaryExpression	3		1266449	0					
ANR	1267290	Argument	1		1266449	3					
ANR	1267291	PrimaryExpression	1		1266449	0					
ANR	1267292	Argument	2		1266449	4					
ANR	1267293	PrimaryExpression	2		1266449	0					
ANR	1267294	Argument	& ry		1266449	5					
ANR	1267295	UnaryOperationExpression	& ry		1266449	0					
ANR	1267296	UnaryOperator	&		1266449	0					
ANR	1267297	Identifier	ry		1266449	1					
ANR	1267298	Argument	& ey		1266449	6					
ANR	1267299	UnaryOperationExpression	& ey		1266449	0					
ANR	1267300	UnaryOperator	&		1266449	0					
ANR	1267301	Identifier	ey		1266449	1					
ANR	1267302	CompoundStatement		74:86:3222:3222	1266449	1					
ANR	1267303	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	0					
ANR	1267304	Condition	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0"	2561:16:92670:92760	1266449	0	True				
ANR	1267305	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1267306	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1267307	Identifier	code		1266449	0					
ANR	1267308	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1267309	Callee	gx_shade_trapezoid		1266449	0					
ANR	1267310	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1267311	ArgumentList	pfs		1266449	1					
ANR	1267312	Argument	pfs		1266449	0					
ANR	1267313	Identifier	pfs		1266449	0					
ANR	1267314	Argument	q		1266449	1					
ANR	1267315	Identifier	q		1266449	0					
ANR	1267316	Argument	0		1266449	2					
ANR	1267317	PrimaryExpression	0		1266449	0					
ANR	1267318	Argument	1		1266449	3					
ANR	1267319	PrimaryExpression	1		1266449	0					
ANR	1267320	Argument	0		1266449	4					
ANR	1267321	PrimaryExpression	0		1266449	0					
ANR	1267322	Argument	3		1266449	5					
ANR	1267323	PrimaryExpression	3		1266449	0					
ANR	1267324	Argument	q [ 0 ] . y		1266449	6					
ANR	1267325	MemberAccess	q [ 0 ] . y		1266449	0					
ANR	1267326	ArrayIndexing	q [ 0 ]		1266449	0					
ANR	1267327	Identifier	q		1266449	0					
ANR	1267328	PrimaryExpression	0		1266449	1					
ANR	1267329	Identifier	y		1266449	1					
ANR	1267330	Argument	q [ 1 ] . y		1266449	7					
ANR	1267331	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1267332	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1267333	Identifier	q		1266449	0					
ANR	1267334	PrimaryExpression	1		1266449	1					
ANR	1267335	Identifier	y		1266449	1					
ANR	1267336	Argument	swap_axes		1266449	8					
ANR	1267337	Identifier	swap_axes		1266449	0					
ANR	1267338	Argument	& dc		1266449	9					
ANR	1267339	UnaryOperationExpression	& dc		1266449	0					
ANR	1267340	UnaryOperator	&		1266449	0					
ANR	1267341	Identifier	dc		1266449	1					
ANR	1267342	Argument	orient		1266449	10					
ANR	1267343	Identifier	orient		1266449	0					
ANR	1267344	PrimaryExpression	0		1266449	1					
ANR	1267345	ReturnStatement	return code ;	2562:16:92779:92790	1266449	1	True				
ANR	1267346	Identifier	code		1266449	0					
ANR	1267347	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 0 , 3 , 1 , 2 , q [ 1 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0 )"		1266449	1					
ANR	1267348	Condition	"( code = gx_shade_trapezoid ( pfs , q , 0 , 3 , 1 , 2 , q [ 1 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0"	2563:16:92808:92899	1266449	0	True				
ANR	1267349	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 0 , 3 , 1 , 2 , q [ 1 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1267350	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 0 , 3 , 1 , 2 , q [ 1 ] . y , ry + ey , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1267351	Identifier	code		1266449	0					
ANR	1267352	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 3 , 1 , 2 , q [ 1 ] . y , ry + ey , swap_axes , & dc , orient )"		1266449	1					
ANR	1267353	Callee	gx_shade_trapezoid		1266449	0					
ANR	1267354	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1267355	ArgumentList	pfs		1266449	1					
ANR	1267356	Argument	pfs		1266449	0					
ANR	1267357	Identifier	pfs		1266449	0					
ANR	1267358	Argument	q		1266449	1					
ANR	1267359	Identifier	q		1266449	0					
ANR	1267360	Argument	0		1266449	2					
ANR	1267361	PrimaryExpression	0		1266449	0					
ANR	1267362	Argument	3		1266449	3					
ANR	1267363	PrimaryExpression	3		1266449	0					
ANR	1267364	Argument	1		1266449	4					
ANR	1267365	PrimaryExpression	1		1266449	0					
ANR	1267366	Argument	2		1266449	5					
ANR	1267367	PrimaryExpression	2		1266449	0					
ANR	1267368	Argument	q [ 1 ] . y		1266449	6					
ANR	1267369	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1267370	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1267371	Identifier	q		1266449	0					
ANR	1267372	PrimaryExpression	1		1266449	1					
ANR	1267373	Identifier	y		1266449	1					
ANR	1267374	Argument	ry + ey		1266449	7					
ANR	1267375	AdditiveExpression	ry + ey		1266449	0		+			
ANR	1267376	Identifier	ry		1266449	0					
ANR	1267377	Identifier	ey		1266449	1					
ANR	1267378	Argument	swap_axes		1266449	8					
ANR	1267379	Identifier	swap_axes		1266449	0					
ANR	1267380	Argument	& dc		1266449	9					
ANR	1267381	UnaryOperationExpression	& dc		1266449	0					
ANR	1267382	UnaryOperator	&		1266449	0					
ANR	1267383	Identifier	dc		1266449	1					
ANR	1267384	Argument	orient		1266449	10					
ANR	1267385	Identifier	orient		1266449	0					
ANR	1267386	PrimaryExpression	0		1266449	1					
ANR	1267387	ReturnStatement	return code ;	2564:16:92918:92929	1266449	1	True				
ANR	1267388	Identifier	code		1266449	0					
ANR	1267389	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , ry , q [ 2 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	2					
ANR	1267390	Condition	"( code = gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , ry , q [ 2 ] . y , swap_axes , & dc , orient ) ) < 0"	2565:16:92947:93033	1266449	0	True				
ANR	1267391	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , ry , q [ 2 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1267392	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , ry , q [ 2 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1267393	Identifier	code		1266449	0					
ANR	1267394	CallExpression	"gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , ry , q [ 2 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1267395	Callee	gx_shade_trapezoid		1266449	0					
ANR	1267396	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1267397	ArgumentList	pfs		1266449	1					
ANR	1267398	Argument	pfs		1266449	0					
ANR	1267399	Identifier	pfs		1266449	0					
ANR	1267400	Argument	q		1266449	1					
ANR	1267401	Identifier	q		1266449	0					
ANR	1267402	Argument	1		1266449	2					
ANR	1267403	PrimaryExpression	1		1266449	0					
ANR	1267404	Argument	2		1266449	3					
ANR	1267405	PrimaryExpression	2		1266449	0					
ANR	1267406	Argument	0		1266449	4					
ANR	1267407	PrimaryExpression	0		1266449	0					
ANR	1267408	Argument	3		1266449	5					
ANR	1267409	PrimaryExpression	3		1266449	0					
ANR	1267410	Argument	ry		1266449	6					
ANR	1267411	Identifier	ry		1266449	0					
ANR	1267412	Argument	q [ 2 ] . y		1266449	7					
ANR	1267413	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1267414	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1267415	Identifier	q		1266449	0					
ANR	1267416	PrimaryExpression	2		1266449	1					
ANR	1267417	Identifier	y		1266449	1					
ANR	1267418	Argument	swap_axes		1266449	8					
ANR	1267419	Identifier	swap_axes		1266449	0					
ANR	1267420	Argument	& dc		1266449	9					
ANR	1267421	UnaryOperationExpression	& dc		1266449	0					
ANR	1267422	UnaryOperator	&		1266449	0					
ANR	1267423	Identifier	dc		1266449	1					
ANR	1267424	Argument	orient		1266449	10					
ANR	1267425	Identifier	orient		1266449	0					
ANR	1267426	PrimaryExpression	0		1266449	1					
ANR	1267427	ReturnStatement	return code ;	2566:16:93052:93063	1266449	1	True				
ANR	1267428	Identifier	code		1266449	0					
ANR	1267429	ReturnStatement	"return gx_shade_trapezoid ( pfs , q , 0 , 3 , 2 , 3 , q [ 2 ] . y , q [ 3 ] . y , swap_axes , & dc , orient ) ;"	2567:12:93077:93162	1266449	3	True				
ANR	1267430	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 3 , 2 , 3 , q [ 2 ] . y , q [ 3 ] . y , swap_axes , & dc , orient )"		1266449	0					
ANR	1267431	Callee	gx_shade_trapezoid		1266449	0					
ANR	1267432	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1267433	ArgumentList	pfs		1266449	1					
ANR	1267434	Argument	pfs		1266449	0					
ANR	1267435	Identifier	pfs		1266449	0					
ANR	1267436	Argument	q		1266449	1					
ANR	1267437	Identifier	q		1266449	0					
ANR	1267438	Argument	0		1266449	2					
ANR	1267439	PrimaryExpression	0		1266449	0					
ANR	1267440	Argument	3		1266449	3					
ANR	1267441	PrimaryExpression	3		1266449	0					
ANR	1267442	Argument	2		1266449	4					
ANR	1267443	PrimaryExpression	2		1266449	0					
ANR	1267444	Argument	3		1266449	5					
ANR	1267445	PrimaryExpression	3		1266449	0					
ANR	1267446	Argument	q [ 2 ] . y		1266449	6					
ANR	1267447	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1267448	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1267449	Identifier	q		1266449	0					
ANR	1267450	PrimaryExpression	2		1266449	1					
ANR	1267451	Identifier	y		1266449	1					
ANR	1267452	Argument	q [ 3 ] . y		1266449	7					
ANR	1267453	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1267454	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1267455	Identifier	q		1266449	0					
ANR	1267456	PrimaryExpression	3		1266449	1					
ANR	1267457	Identifier	y		1266449	1					
ANR	1267458	Argument	swap_axes		1266449	8					
ANR	1267459	Identifier	swap_axes		1266449	0					
ANR	1267460	Argument	& dc		1266449	9					
ANR	1267461	UnaryOperationExpression	& dc		1266449	0					
ANR	1267462	UnaryOperator	&		1266449	0					
ANR	1267463	Identifier	dc		1266449	1					
ANR	1267464	Argument	orient		1266449	10					
ANR	1267465	Identifier	orient		1266449	0					
ANR	1267466	ElseStatement	else		1266449	0					
ANR	1267467	CompoundStatement		82:15:3749:3749	1266449	0					
ANR	1267468	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	0					
ANR	1267469	Condition	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0"	2569:16:93197:93287	1266449	0	True				
ANR	1267470	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1267471	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1267472	Identifier	code		1266449	0					
ANR	1267473	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1267474	Callee	gx_shade_trapezoid		1266449	0					
ANR	1267475	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1267476	ArgumentList	pfs		1266449	1					
ANR	1267477	Argument	pfs		1266449	0					
ANR	1267478	Identifier	pfs		1266449	0					
ANR	1267479	Argument	q		1266449	1					
ANR	1267480	Identifier	q		1266449	0					
ANR	1267481	Argument	0		1266449	2					
ANR	1267482	PrimaryExpression	0		1266449	0					
ANR	1267483	Argument	1		1266449	3					
ANR	1267484	PrimaryExpression	1		1266449	0					
ANR	1267485	Argument	0		1266449	4					
ANR	1267486	PrimaryExpression	0		1266449	0					
ANR	1267487	Argument	3		1266449	5					
ANR	1267488	PrimaryExpression	3		1266449	0					
ANR	1267489	Argument	q [ 0 ] . y		1266449	6					
ANR	1267490	MemberAccess	q [ 0 ] . y		1266449	0					
ANR	1267491	ArrayIndexing	q [ 0 ]		1266449	0					
ANR	1267492	Identifier	q		1266449	0					
ANR	1267493	PrimaryExpression	0		1266449	1					
ANR	1267494	Identifier	y		1266449	1					
ANR	1267495	Argument	q [ 1 ] . y		1266449	7					
ANR	1267496	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1267497	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1267498	Identifier	q		1266449	0					
ANR	1267499	PrimaryExpression	1		1266449	1					
ANR	1267500	Identifier	y		1266449	1					
ANR	1267501	Argument	swap_axes		1266449	8					
ANR	1267502	Identifier	swap_axes		1266449	0					
ANR	1267503	Argument	& dc		1266449	9					
ANR	1267504	UnaryOperationExpression	& dc		1266449	0					
ANR	1267505	UnaryOperator	&		1266449	0					
ANR	1267506	Identifier	dc		1266449	1					
ANR	1267507	Argument	orient		1266449	10					
ANR	1267508	Identifier	orient		1266449	0					
ANR	1267509	PrimaryExpression	0		1266449	1					
ANR	1267510	ReturnStatement	return code ;	2570:16:93306:93317	1266449	1	True				
ANR	1267511	Identifier	code		1266449	0					
ANR	1267512	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , q [ 1 ] . y , q [ 2 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	1					
ANR	1267513	Condition	"( code = gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , q [ 1 ] . y , q [ 2 ] . y , swap_axes , & dc , orient ) ) < 0"	2571:16:93335:93425	1266449	0	True				
ANR	1267514	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , q [ 1 ] . y , q [ 2 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1267515	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , q [ 1 ] . y , q [ 2 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1267516	Identifier	code		1266449	0					
ANR	1267517	CallExpression	"gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , q [ 1 ] . y , q [ 2 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1267518	Callee	gx_shade_trapezoid		1266449	0					
ANR	1267519	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1267520	ArgumentList	pfs		1266449	1					
ANR	1267521	Argument	pfs		1266449	0					
ANR	1267522	Identifier	pfs		1266449	0					
ANR	1267523	Argument	q		1266449	1					
ANR	1267524	Identifier	q		1266449	0					
ANR	1267525	Argument	1		1266449	2					
ANR	1267526	PrimaryExpression	1		1266449	0					
ANR	1267527	Argument	2		1266449	3					
ANR	1267528	PrimaryExpression	2		1266449	0					
ANR	1267529	Argument	0		1266449	4					
ANR	1267530	PrimaryExpression	0		1266449	0					
ANR	1267531	Argument	3		1266449	5					
ANR	1267532	PrimaryExpression	3		1266449	0					
ANR	1267533	Argument	q [ 1 ] . y		1266449	6					
ANR	1267534	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1267535	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1267536	Identifier	q		1266449	0					
ANR	1267537	PrimaryExpression	1		1266449	1					
ANR	1267538	Identifier	y		1266449	1					
ANR	1267539	Argument	q [ 2 ] . y		1266449	7					
ANR	1267540	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1267541	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1267542	Identifier	q		1266449	0					
ANR	1267543	PrimaryExpression	2		1266449	1					
ANR	1267544	Identifier	y		1266449	1					
ANR	1267545	Argument	swap_axes		1266449	8					
ANR	1267546	Identifier	swap_axes		1266449	0					
ANR	1267547	Argument	& dc		1266449	9					
ANR	1267548	UnaryOperationExpression	& dc		1266449	0					
ANR	1267549	UnaryOperator	&		1266449	0					
ANR	1267550	Identifier	dc		1266449	1					
ANR	1267551	Argument	orient		1266449	10					
ANR	1267552	Identifier	orient		1266449	0					
ANR	1267553	PrimaryExpression	0		1266449	1					
ANR	1267554	ReturnStatement	return code ;	2572:16:93444:93455	1266449	1	True				
ANR	1267555	Identifier	code		1266449	0					
ANR	1267556	ReturnStatement	"return gx_shade_trapezoid ( pfs , q , 2 , 3 , 0 , 3 , q [ 2 ] . y , q [ 3 ] . y , swap_axes , & dc , orient ) ;"	2573:12:93469:93554	1266449	2	True				
ANR	1267557	CallExpression	"gx_shade_trapezoid ( pfs , q , 2 , 3 , 0 , 3 , q [ 2 ] . y , q [ 3 ] . y , swap_axes , & dc , orient )"		1266449	0					
ANR	1267558	Callee	gx_shade_trapezoid		1266449	0					
ANR	1267559	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1267560	ArgumentList	pfs		1266449	1					
ANR	1267561	Argument	pfs		1266449	0					
ANR	1267562	Identifier	pfs		1266449	0					
ANR	1267563	Argument	q		1266449	1					
ANR	1267564	Identifier	q		1266449	0					
ANR	1267565	Argument	2		1266449	2					
ANR	1267566	PrimaryExpression	2		1266449	0					
ANR	1267567	Argument	3		1266449	3					
ANR	1267568	PrimaryExpression	3		1266449	0					
ANR	1267569	Argument	0		1266449	4					
ANR	1267570	PrimaryExpression	0		1266449	0					
ANR	1267571	Argument	3		1266449	5					
ANR	1267572	PrimaryExpression	3		1266449	0					
ANR	1267573	Argument	q [ 2 ] . y		1266449	6					
ANR	1267574	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1267575	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1267576	Identifier	q		1266449	0					
ANR	1267577	PrimaryExpression	2		1266449	1					
ANR	1267578	Identifier	y		1266449	1					
ANR	1267579	Argument	q [ 3 ] . y		1266449	7					
ANR	1267580	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1267581	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1267582	Identifier	q		1266449	0					
ANR	1267583	PrimaryExpression	3		1266449	1					
ANR	1267584	Identifier	y		1266449	1					
ANR	1267585	Argument	swap_axes		1266449	8					
ANR	1267586	Identifier	swap_axes		1266449	0					
ANR	1267587	Argument	& dc		1266449	9					
ANR	1267588	UnaryOperationExpression	& dc		1266449	0					
ANR	1267589	UnaryOperator	&		1266449	0					
ANR	1267590	Identifier	dc		1266449	1					
ANR	1267591	Argument	orient		1266449	10					
ANR	1267592	Identifier	orient		1266449	0					
ANR	1267593	ElseStatement	else		1266449	0					
ANR	1267594	IfStatement	if ( q [ 1 ] . y <= q [ 3 ] . y && q [ 3 ] . y <= q [ 2 ] . y )		1266449	0					
ANR	1267595	Condition	q [ 1 ] . y <= q [ 3 ] . y && q [ 3 ] . y <= q [ 2 ] . y	2575:15:93581:93616	1266449	0	True				
ANR	1267596	AndExpression	q [ 1 ] . y <= q [ 3 ] . y && q [ 3 ] . y <= q [ 2 ] . y		1266449	0		&&			
ANR	1267597	RelationalExpression	q [ 1 ] . y <= q [ 3 ] . y		1266449	0		<=			
ANR	1267598	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1267599	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1267600	Identifier	q		1266449	0					
ANR	1267601	PrimaryExpression	1		1266449	1					
ANR	1267602	Identifier	y		1266449	1					
ANR	1267603	MemberAccess	q [ 3 ] . y		1266449	1					
ANR	1267604	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1267605	Identifier	q		1266449	0					
ANR	1267606	PrimaryExpression	3		1266449	1					
ANR	1267607	Identifier	y		1266449	1					
ANR	1267608	RelationalExpression	q [ 3 ] . y <= q [ 2 ] . y		1266449	1		<=			
ANR	1267609	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1267610	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1267611	Identifier	q		1266449	0					
ANR	1267612	PrimaryExpression	3		1266449	1					
ANR	1267613	Identifier	y		1266449	1					
ANR	1267614	MemberAccess	q [ 2 ] . y		1266449	1					
ANR	1267615	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1267616	Identifier	q		1266449	0					
ANR	1267617	PrimaryExpression	2		1266449	1					
ANR	1267618	Identifier	y		1266449	1					
ANR	1267619	CompoundStatement		89:53:4189:4189	1266449	1					
ANR	1267620	IfStatement	"if ( self_intersecting && intersection_of_small_bars ( q , 0 , 3 , 1 , 2 , & ry , & ey ) )"		1266449	0					
ANR	1267621	Condition	"self_intersecting && intersection_of_small_bars ( q , 0 , 3 , 1 , 2 , & ry , & ey )"	2576:12:93633:93704	1266449	0	True				
ANR	1267622	AndExpression	"self_intersecting && intersection_of_small_bars ( q , 0 , 3 , 1 , 2 , & ry , & ey )"		1266449	0		&&			
ANR	1267623	Identifier	self_intersecting		1266449	0					
ANR	1267624	CallExpression	"intersection_of_small_bars ( q , 0 , 3 , 1 , 2 , & ry , & ey )"		1266449	1					
ANR	1267625	Callee	intersection_of_small_bars		1266449	0					
ANR	1267626	Identifier	intersection_of_small_bars		1266449	0					
ANR	1267627	ArgumentList	q		1266449	1					
ANR	1267628	Argument	q		1266449	0					
ANR	1267629	Identifier	q		1266449	0					
ANR	1267630	Argument	0		1266449	1					
ANR	1267631	PrimaryExpression	0		1266449	0					
ANR	1267632	Argument	3		1266449	2					
ANR	1267633	PrimaryExpression	3		1266449	0					
ANR	1267634	Argument	1		1266449	3					
ANR	1267635	PrimaryExpression	1		1266449	0					
ANR	1267636	Argument	2		1266449	4					
ANR	1267637	PrimaryExpression	2		1266449	0					
ANR	1267638	Argument	& ry		1266449	5					
ANR	1267639	UnaryOperationExpression	& ry		1266449	0					
ANR	1267640	UnaryOperator	&		1266449	0					
ANR	1267641	Identifier	ry		1266449	1					
ANR	1267642	Argument	& ey		1266449	6					
ANR	1267643	UnaryOperationExpression	& ey		1266449	0					
ANR	1267644	UnaryOperator	&		1266449	0					
ANR	1267645	Identifier	ey		1266449	1					
ANR	1267646	CompoundStatement		90:86:4277:4277	1266449	1					
ANR	1267647	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	0					
ANR	1267648	Condition	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0"	2577:16:93725:93815	1266449	0	True				
ANR	1267649	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1267650	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1267651	Identifier	code		1266449	0					
ANR	1267652	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1267653	Callee	gx_shade_trapezoid		1266449	0					
ANR	1267654	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1267655	ArgumentList	pfs		1266449	1					
ANR	1267656	Argument	pfs		1266449	0					
ANR	1267657	Identifier	pfs		1266449	0					
ANR	1267658	Argument	q		1266449	1					
ANR	1267659	Identifier	q		1266449	0					
ANR	1267660	Argument	0		1266449	2					
ANR	1267661	PrimaryExpression	0		1266449	0					
ANR	1267662	Argument	1		1266449	3					
ANR	1267663	PrimaryExpression	1		1266449	0					
ANR	1267664	Argument	0		1266449	4					
ANR	1267665	PrimaryExpression	0		1266449	0					
ANR	1267666	Argument	3		1266449	5					
ANR	1267667	PrimaryExpression	3		1266449	0					
ANR	1267668	Argument	q [ 0 ] . y		1266449	6					
ANR	1267669	MemberAccess	q [ 0 ] . y		1266449	0					
ANR	1267670	ArrayIndexing	q [ 0 ]		1266449	0					
ANR	1267671	Identifier	q		1266449	0					
ANR	1267672	PrimaryExpression	0		1266449	1					
ANR	1267673	Identifier	y		1266449	1					
ANR	1267674	Argument	q [ 1 ] . y		1266449	7					
ANR	1267675	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1267676	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1267677	Identifier	q		1266449	0					
ANR	1267678	PrimaryExpression	1		1266449	1					
ANR	1267679	Identifier	y		1266449	1					
ANR	1267680	Argument	swap_axes		1266449	8					
ANR	1267681	Identifier	swap_axes		1266449	0					
ANR	1267682	Argument	& dc		1266449	9					
ANR	1267683	UnaryOperationExpression	& dc		1266449	0					
ANR	1267684	UnaryOperator	&		1266449	0					
ANR	1267685	Identifier	dc		1266449	1					
ANR	1267686	Argument	orient		1266449	10					
ANR	1267687	Identifier	orient		1266449	0					
ANR	1267688	PrimaryExpression	0		1266449	1					
ANR	1267689	ReturnStatement	return code ;	2578:16:93834:93845	1266449	1	True				
ANR	1267690	Identifier	code		1266449	0					
ANR	1267691	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , q [ 1 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0 )"		1266449	1					
ANR	1267692	Condition	"( code = gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , q [ 1 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0"	2579:16:93863:93954	1266449	0	True				
ANR	1267693	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , q [ 1 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1267694	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , q [ 1 ] . y , ry + ey , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1267695	Identifier	code		1266449	0					
ANR	1267696	CallExpression	"gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , q [ 1 ] . y , ry + ey , swap_axes , & dc , orient )"		1266449	1					
ANR	1267697	Callee	gx_shade_trapezoid		1266449	0					
ANR	1267698	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1267699	ArgumentList	pfs		1266449	1					
ANR	1267700	Argument	pfs		1266449	0					
ANR	1267701	Identifier	pfs		1266449	0					
ANR	1267702	Argument	q		1266449	1					
ANR	1267703	Identifier	q		1266449	0					
ANR	1267704	Argument	1		1266449	2					
ANR	1267705	PrimaryExpression	1		1266449	0					
ANR	1267706	Argument	2		1266449	3					
ANR	1267707	PrimaryExpression	2		1266449	0					
ANR	1267708	Argument	0		1266449	4					
ANR	1267709	PrimaryExpression	0		1266449	0					
ANR	1267710	Argument	3		1266449	5					
ANR	1267711	PrimaryExpression	3		1266449	0					
ANR	1267712	Argument	q [ 1 ] . y		1266449	6					
ANR	1267713	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1267714	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1267715	Identifier	q		1266449	0					
ANR	1267716	PrimaryExpression	1		1266449	1					
ANR	1267717	Identifier	y		1266449	1					
ANR	1267718	Argument	ry + ey		1266449	7					
ANR	1267719	AdditiveExpression	ry + ey		1266449	0		+			
ANR	1267720	Identifier	ry		1266449	0					
ANR	1267721	Identifier	ey		1266449	1					
ANR	1267722	Argument	swap_axes		1266449	8					
ANR	1267723	Identifier	swap_axes		1266449	0					
ANR	1267724	Argument	& dc		1266449	9					
ANR	1267725	UnaryOperationExpression	& dc		1266449	0					
ANR	1267726	UnaryOperator	&		1266449	0					
ANR	1267727	Identifier	dc		1266449	1					
ANR	1267728	Argument	orient		1266449	10					
ANR	1267729	Identifier	orient		1266449	0					
ANR	1267730	PrimaryExpression	0		1266449	1					
ANR	1267731	ReturnStatement	return code ;	2580:16:93973:93984	1266449	1	True				
ANR	1267732	Identifier	code		1266449	0					
ANR	1267733	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 0 , 3 , 1 , 2 , ry , q [ 3 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	2					
ANR	1267734	Condition	"( code = gx_shade_trapezoid ( pfs , q , 0 , 3 , 1 , 2 , ry , q [ 3 ] . y , swap_axes , & dc , orient ) ) < 0"	2581:16:94002:94088	1266449	0	True				
ANR	1267735	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 0 , 3 , 1 , 2 , ry , q [ 3 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1267736	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 0 , 3 , 1 , 2 , ry , q [ 3 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1267737	Identifier	code		1266449	0					
ANR	1267738	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 3 , 1 , 2 , ry , q [ 3 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1267739	Callee	gx_shade_trapezoid		1266449	0					
ANR	1267740	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1267741	ArgumentList	pfs		1266449	1					
ANR	1267742	Argument	pfs		1266449	0					
ANR	1267743	Identifier	pfs		1266449	0					
ANR	1267744	Argument	q		1266449	1					
ANR	1267745	Identifier	q		1266449	0					
ANR	1267746	Argument	0		1266449	2					
ANR	1267747	PrimaryExpression	0		1266449	0					
ANR	1267748	Argument	3		1266449	3					
ANR	1267749	PrimaryExpression	3		1266449	0					
ANR	1267750	Argument	1		1266449	4					
ANR	1267751	PrimaryExpression	1		1266449	0					
ANR	1267752	Argument	2		1266449	5					
ANR	1267753	PrimaryExpression	2		1266449	0					
ANR	1267754	Argument	ry		1266449	6					
ANR	1267755	Identifier	ry		1266449	0					
ANR	1267756	Argument	q [ 3 ] . y		1266449	7					
ANR	1267757	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1267758	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1267759	Identifier	q		1266449	0					
ANR	1267760	PrimaryExpression	3		1266449	1					
ANR	1267761	Identifier	y		1266449	1					
ANR	1267762	Argument	swap_axes		1266449	8					
ANR	1267763	Identifier	swap_axes		1266449	0					
ANR	1267764	Argument	& dc		1266449	9					
ANR	1267765	UnaryOperationExpression	& dc		1266449	0					
ANR	1267766	UnaryOperator	&		1266449	0					
ANR	1267767	Identifier	dc		1266449	1					
ANR	1267768	Argument	orient		1266449	10					
ANR	1267769	Identifier	orient		1266449	0					
ANR	1267770	PrimaryExpression	0		1266449	1					
ANR	1267771	ReturnStatement	return code ;	2582:16:94107:94118	1266449	1	True				
ANR	1267772	Identifier	code		1266449	0					
ANR	1267773	ReturnStatement	"return gx_shade_trapezoid ( pfs , q , 3 , 2 , 1 , 2 , q [ 3 ] . y , q [ 2 ] . y , swap_axes , & dc , orient ) ;"	2583:12:94132:94217	1266449	3	True				
ANR	1267774	CallExpression	"gx_shade_trapezoid ( pfs , q , 3 , 2 , 1 , 2 , q [ 3 ] . y , q [ 2 ] . y , swap_axes , & dc , orient )"		1266449	0					
ANR	1267775	Callee	gx_shade_trapezoid		1266449	0					
ANR	1267776	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1267777	ArgumentList	pfs		1266449	1					
ANR	1267778	Argument	pfs		1266449	0					
ANR	1267779	Identifier	pfs		1266449	0					
ANR	1267780	Argument	q		1266449	1					
ANR	1267781	Identifier	q		1266449	0					
ANR	1267782	Argument	3		1266449	2					
ANR	1267783	PrimaryExpression	3		1266449	0					
ANR	1267784	Argument	2		1266449	3					
ANR	1267785	PrimaryExpression	2		1266449	0					
ANR	1267786	Argument	1		1266449	4					
ANR	1267787	PrimaryExpression	1		1266449	0					
ANR	1267788	Argument	2		1266449	5					
ANR	1267789	PrimaryExpression	2		1266449	0					
ANR	1267790	Argument	q [ 3 ] . y		1266449	6					
ANR	1267791	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1267792	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1267793	Identifier	q		1266449	0					
ANR	1267794	PrimaryExpression	3		1266449	1					
ANR	1267795	Identifier	y		1266449	1					
ANR	1267796	Argument	q [ 2 ] . y		1266449	7					
ANR	1267797	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1267798	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1267799	Identifier	q		1266449	0					
ANR	1267800	PrimaryExpression	2		1266449	1					
ANR	1267801	Identifier	y		1266449	1					
ANR	1267802	Argument	swap_axes		1266449	8					
ANR	1267803	Identifier	swap_axes		1266449	0					
ANR	1267804	Argument	& dc		1266449	9					
ANR	1267805	UnaryOperationExpression	& dc		1266449	0					
ANR	1267806	UnaryOperator	&		1266449	0					
ANR	1267807	Identifier	dc		1266449	1					
ANR	1267808	Argument	orient		1266449	10					
ANR	1267809	Identifier	orient		1266449	0					
ANR	1267810	ElseStatement	else		1266449	0					
ANR	1267811	CompoundStatement		98:15:4804:4804	1266449	0					
ANR	1267812	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	0					
ANR	1267813	Condition	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0"	2585:16:94252:94342	1266449	0	True				
ANR	1267814	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1267815	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1267816	Identifier	code		1266449	0					
ANR	1267817	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1267818	Callee	gx_shade_trapezoid		1266449	0					
ANR	1267819	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1267820	ArgumentList	pfs		1266449	1					
ANR	1267821	Argument	pfs		1266449	0					
ANR	1267822	Identifier	pfs		1266449	0					
ANR	1267823	Argument	q		1266449	1					
ANR	1267824	Identifier	q		1266449	0					
ANR	1267825	Argument	0		1266449	2					
ANR	1267826	PrimaryExpression	0		1266449	0					
ANR	1267827	Argument	1		1266449	3					
ANR	1267828	PrimaryExpression	1		1266449	0					
ANR	1267829	Argument	0		1266449	4					
ANR	1267830	PrimaryExpression	0		1266449	0					
ANR	1267831	Argument	3		1266449	5					
ANR	1267832	PrimaryExpression	3		1266449	0					
ANR	1267833	Argument	q [ 0 ] . y		1266449	6					
ANR	1267834	MemberAccess	q [ 0 ] . y		1266449	0					
ANR	1267835	ArrayIndexing	q [ 0 ]		1266449	0					
ANR	1267836	Identifier	q		1266449	0					
ANR	1267837	PrimaryExpression	0		1266449	1					
ANR	1267838	Identifier	y		1266449	1					
ANR	1267839	Argument	q [ 1 ] . y		1266449	7					
ANR	1267840	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1267841	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1267842	Identifier	q		1266449	0					
ANR	1267843	PrimaryExpression	1		1266449	1					
ANR	1267844	Identifier	y		1266449	1					
ANR	1267845	Argument	swap_axes		1266449	8					
ANR	1267846	Identifier	swap_axes		1266449	0					
ANR	1267847	Argument	& dc		1266449	9					
ANR	1267848	UnaryOperationExpression	& dc		1266449	0					
ANR	1267849	UnaryOperator	&		1266449	0					
ANR	1267850	Identifier	dc		1266449	1					
ANR	1267851	Argument	orient		1266449	10					
ANR	1267852	Identifier	orient		1266449	0					
ANR	1267853	PrimaryExpression	0		1266449	1					
ANR	1267854	ReturnStatement	return code ;	2586:16:94361:94372	1266449	1	True				
ANR	1267855	Identifier	code		1266449	0					
ANR	1267856	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , q [ 1 ] . y , q [ 3 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	1					
ANR	1267857	Condition	"( code = gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , q [ 1 ] . y , q [ 3 ] . y , swap_axes , & dc , orient ) ) < 0"	2587:16:94390:94480	1266449	0	True				
ANR	1267858	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , q [ 1 ] . y , q [ 3 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1267859	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , q [ 1 ] . y , q [ 3 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1267860	Identifier	code		1266449	0					
ANR	1267861	CallExpression	"gx_shade_trapezoid ( pfs , q , 1 , 2 , 0 , 3 , q [ 1 ] . y , q [ 3 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1267862	Callee	gx_shade_trapezoid		1266449	0					
ANR	1267863	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1267864	ArgumentList	pfs		1266449	1					
ANR	1267865	Argument	pfs		1266449	0					
ANR	1267866	Identifier	pfs		1266449	0					
ANR	1267867	Argument	q		1266449	1					
ANR	1267868	Identifier	q		1266449	0					
ANR	1267869	Argument	1		1266449	2					
ANR	1267870	PrimaryExpression	1		1266449	0					
ANR	1267871	Argument	2		1266449	3					
ANR	1267872	PrimaryExpression	2		1266449	0					
ANR	1267873	Argument	0		1266449	4					
ANR	1267874	PrimaryExpression	0		1266449	0					
ANR	1267875	Argument	3		1266449	5					
ANR	1267876	PrimaryExpression	3		1266449	0					
ANR	1267877	Argument	q [ 1 ] . y		1266449	6					
ANR	1267878	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1267879	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1267880	Identifier	q		1266449	0					
ANR	1267881	PrimaryExpression	1		1266449	1					
ANR	1267882	Identifier	y		1266449	1					
ANR	1267883	Argument	q [ 3 ] . y		1266449	7					
ANR	1267884	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1267885	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1267886	Identifier	q		1266449	0					
ANR	1267887	PrimaryExpression	3		1266449	1					
ANR	1267888	Identifier	y		1266449	1					
ANR	1267889	Argument	swap_axes		1266449	8					
ANR	1267890	Identifier	swap_axes		1266449	0					
ANR	1267891	Argument	& dc		1266449	9					
ANR	1267892	UnaryOperationExpression	& dc		1266449	0					
ANR	1267893	UnaryOperator	&		1266449	0					
ANR	1267894	Identifier	dc		1266449	1					
ANR	1267895	Argument	orient		1266449	10					
ANR	1267896	Identifier	orient		1266449	0					
ANR	1267897	PrimaryExpression	0		1266449	1					
ANR	1267898	ReturnStatement	return code ;	2588:16:94499:94510	1266449	1	True				
ANR	1267899	Identifier	code		1266449	0					
ANR	1267900	ReturnStatement	"return gx_shade_trapezoid ( pfs , q , 1 , 2 , 3 , 2 , q [ 3 ] . y , q [ 2 ] . y , swap_axes , & dc , orient ) ;"	2589:12:94524:94609	1266449	2	True				
ANR	1267901	CallExpression	"gx_shade_trapezoid ( pfs , q , 1 , 2 , 3 , 2 , q [ 3 ] . y , q [ 2 ] . y , swap_axes , & dc , orient )"		1266449	0					
ANR	1267902	Callee	gx_shade_trapezoid		1266449	0					
ANR	1267903	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1267904	ArgumentList	pfs		1266449	1					
ANR	1267905	Argument	pfs		1266449	0					
ANR	1267906	Identifier	pfs		1266449	0					
ANR	1267907	Argument	q		1266449	1					
ANR	1267908	Identifier	q		1266449	0					
ANR	1267909	Argument	1		1266449	2					
ANR	1267910	PrimaryExpression	1		1266449	0					
ANR	1267911	Argument	2		1266449	3					
ANR	1267912	PrimaryExpression	2		1266449	0					
ANR	1267913	Argument	3		1266449	4					
ANR	1267914	PrimaryExpression	3		1266449	0					
ANR	1267915	Argument	2		1266449	5					
ANR	1267916	PrimaryExpression	2		1266449	0					
ANR	1267917	Argument	q [ 3 ] . y		1266449	6					
ANR	1267918	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1267919	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1267920	Identifier	q		1266449	0					
ANR	1267921	PrimaryExpression	3		1266449	1					
ANR	1267922	Identifier	y		1266449	1					
ANR	1267923	Argument	q [ 2 ] . y		1266449	7					
ANR	1267924	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1267925	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1267926	Identifier	q		1266449	0					
ANR	1267927	PrimaryExpression	2		1266449	1					
ANR	1267928	Identifier	y		1266449	1					
ANR	1267929	Argument	swap_axes		1266449	8					
ANR	1267930	Identifier	swap_axes		1266449	0					
ANR	1267931	Argument	& dc		1266449	9					
ANR	1267932	UnaryOperationExpression	& dc		1266449	0					
ANR	1267933	UnaryOperator	&		1266449	0					
ANR	1267934	Identifier	dc		1266449	1					
ANR	1267935	Argument	orient		1266449	10					
ANR	1267936	Identifier	orient		1266449	0					
ANR	1267937	ElseStatement	else		1266449	0					
ANR	1267938	IfStatement	if ( q [ 2 ] . y <= q [ 1 ] . y && q [ 1 ] . y <= q [ 3 ] . y )		1266449	0					
ANR	1267939	Condition	q [ 2 ] . y <= q [ 1 ] . y && q [ 1 ] . y <= q [ 3 ] . y	2591:15:94636:94671	1266449	0	True				
ANR	1267940	AndExpression	q [ 2 ] . y <= q [ 1 ] . y && q [ 1 ] . y <= q [ 3 ] . y		1266449	0		&&			
ANR	1267941	RelationalExpression	q [ 2 ] . y <= q [ 1 ] . y		1266449	0		<=			
ANR	1267942	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1267943	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1267944	Identifier	q		1266449	0					
ANR	1267945	PrimaryExpression	2		1266449	1					
ANR	1267946	Identifier	y		1266449	1					
ANR	1267947	MemberAccess	q [ 1 ] . y		1266449	1					
ANR	1267948	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1267949	Identifier	q		1266449	0					
ANR	1267950	PrimaryExpression	1		1266449	1					
ANR	1267951	Identifier	y		1266449	1					
ANR	1267952	RelationalExpression	q [ 1 ] . y <= q [ 3 ] . y		1266449	1		<=			
ANR	1267953	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1267954	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1267955	Identifier	q		1266449	0					
ANR	1267956	PrimaryExpression	1		1266449	1					
ANR	1267957	Identifier	y		1266449	1					
ANR	1267958	MemberAccess	q [ 3 ] . y		1266449	1					
ANR	1267959	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1267960	Identifier	q		1266449	0					
ANR	1267961	PrimaryExpression	3		1266449	1					
ANR	1267962	Identifier	y		1266449	1					
ANR	1267963	CompoundStatement		105:53:5244:5244	1266449	1					
ANR	1267964	IfStatement	"if ( self_intersecting && intersection_of_small_bars ( q , 0 , 1 , 2 , 3 , & ry , & ey ) )"		1266449	0					
ANR	1267965	Condition	"self_intersecting && intersection_of_small_bars ( q , 0 , 1 , 2 , 3 , & ry , & ey )"	2592:12:94688:94759	1266449	0	True				
ANR	1267966	AndExpression	"self_intersecting && intersection_of_small_bars ( q , 0 , 1 , 2 , 3 , & ry , & ey )"		1266449	0		&&			
ANR	1267967	Identifier	self_intersecting		1266449	0					
ANR	1267968	CallExpression	"intersection_of_small_bars ( q , 0 , 1 , 2 , 3 , & ry , & ey )"		1266449	1					
ANR	1267969	Callee	intersection_of_small_bars		1266449	0					
ANR	1267970	Identifier	intersection_of_small_bars		1266449	0					
ANR	1267971	ArgumentList	q		1266449	1					
ANR	1267972	Argument	q		1266449	0					
ANR	1267973	Identifier	q		1266449	0					
ANR	1267974	Argument	0		1266449	1					
ANR	1267975	PrimaryExpression	0		1266449	0					
ANR	1267976	Argument	1		1266449	2					
ANR	1267977	PrimaryExpression	1		1266449	0					
ANR	1267978	Argument	2		1266449	3					
ANR	1267979	PrimaryExpression	2		1266449	0					
ANR	1267980	Argument	3		1266449	4					
ANR	1267981	PrimaryExpression	3		1266449	0					
ANR	1267982	Argument	& ry		1266449	5					
ANR	1267983	UnaryOperationExpression	& ry		1266449	0					
ANR	1267984	UnaryOperator	&		1266449	0					
ANR	1267985	Identifier	ry		1266449	1					
ANR	1267986	Argument	& ey		1266449	6					
ANR	1267987	UnaryOperationExpression	& ey		1266449	0					
ANR	1267988	UnaryOperator	&		1266449	0					
ANR	1267989	Identifier	ey		1266449	1					
ANR	1267990	CompoundStatement		106:86:5332:5332	1266449	1					
ANR	1267991	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0 )"		1266449	0					
ANR	1267992	Condition	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0"	2593:16:94780:94871	1266449	0	True				
ANR	1267993	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1267994	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , ry + ey , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1267995	Identifier	code		1266449	0					
ANR	1267996	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , ry + ey , swap_axes , & dc , orient )"		1266449	1					
ANR	1267997	Callee	gx_shade_trapezoid		1266449	0					
ANR	1267998	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1267999	ArgumentList	pfs		1266449	1					
ANR	1268000	Argument	pfs		1266449	0					
ANR	1268001	Identifier	pfs		1266449	0					
ANR	1268002	Argument	q		1266449	1					
ANR	1268003	Identifier	q		1266449	0					
ANR	1268004	Argument	0		1266449	2					
ANR	1268005	PrimaryExpression	0		1266449	0					
ANR	1268006	Argument	1		1266449	3					
ANR	1268007	PrimaryExpression	1		1266449	0					
ANR	1268008	Argument	0		1266449	4					
ANR	1268009	PrimaryExpression	0		1266449	0					
ANR	1268010	Argument	3		1266449	5					
ANR	1268011	PrimaryExpression	3		1266449	0					
ANR	1268012	Argument	q [ 0 ] . y		1266449	6					
ANR	1268013	MemberAccess	q [ 0 ] . y		1266449	0					
ANR	1268014	ArrayIndexing	q [ 0 ]		1266449	0					
ANR	1268015	Identifier	q		1266449	0					
ANR	1268016	PrimaryExpression	0		1266449	1					
ANR	1268017	Identifier	y		1266449	1					
ANR	1268018	Argument	ry + ey		1266449	7					
ANR	1268019	AdditiveExpression	ry + ey		1266449	0		+			
ANR	1268020	Identifier	ry		1266449	0					
ANR	1268021	Identifier	ey		1266449	1					
ANR	1268022	Argument	swap_axes		1266449	8					
ANR	1268023	Identifier	swap_axes		1266449	0					
ANR	1268024	Argument	& dc		1266449	9					
ANR	1268025	UnaryOperationExpression	& dc		1266449	0					
ANR	1268026	UnaryOperator	&		1266449	0					
ANR	1268027	Identifier	dc		1266449	1					
ANR	1268028	Argument	orient		1266449	10					
ANR	1268029	Identifier	orient		1266449	0					
ANR	1268030	PrimaryExpression	0		1266449	1					
ANR	1268031	ReturnStatement	return code ;	2594:16:94890:94901	1266449	1	True				
ANR	1268032	Identifier	code		1266449	0					
ANR	1268033	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 2 , 1 , 2 , 3 , q [ 2 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0 )"		1266449	1					
ANR	1268034	Condition	"( code = gx_shade_trapezoid ( pfs , q , 2 , 1 , 2 , 3 , q [ 2 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0"	2595:16:94919:95010	1266449	0	True				
ANR	1268035	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 2 , 1 , 2 , 3 , q [ 2 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1268036	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 2 , 1 , 2 , 3 , q [ 2 ] . y , ry + ey , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1268037	Identifier	code		1266449	0					
ANR	1268038	CallExpression	"gx_shade_trapezoid ( pfs , q , 2 , 1 , 2 , 3 , q [ 2 ] . y , ry + ey , swap_axes , & dc , orient )"		1266449	1					
ANR	1268039	Callee	gx_shade_trapezoid		1266449	0					
ANR	1268040	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1268041	ArgumentList	pfs		1266449	1					
ANR	1268042	Argument	pfs		1266449	0					
ANR	1268043	Identifier	pfs		1266449	0					
ANR	1268044	Argument	q		1266449	1					
ANR	1268045	Identifier	q		1266449	0					
ANR	1268046	Argument	2		1266449	2					
ANR	1268047	PrimaryExpression	2		1266449	0					
ANR	1268048	Argument	1		1266449	3					
ANR	1268049	PrimaryExpression	1		1266449	0					
ANR	1268050	Argument	2		1266449	4					
ANR	1268051	PrimaryExpression	2		1266449	0					
ANR	1268052	Argument	3		1266449	5					
ANR	1268053	PrimaryExpression	3		1266449	0					
ANR	1268054	Argument	q [ 2 ] . y		1266449	6					
ANR	1268055	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1268056	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1268057	Identifier	q		1266449	0					
ANR	1268058	PrimaryExpression	2		1266449	1					
ANR	1268059	Identifier	y		1266449	1					
ANR	1268060	Argument	ry + ey		1266449	7					
ANR	1268061	AdditiveExpression	ry + ey		1266449	0		+			
ANR	1268062	Identifier	ry		1266449	0					
ANR	1268063	Identifier	ey		1266449	1					
ANR	1268064	Argument	swap_axes		1266449	8					
ANR	1268065	Identifier	swap_axes		1266449	0					
ANR	1268066	Argument	& dc		1266449	9					
ANR	1268067	UnaryOperationExpression	& dc		1266449	0					
ANR	1268068	UnaryOperator	&		1266449	0					
ANR	1268069	Identifier	dc		1266449	1					
ANR	1268070	Argument	orient		1266449	10					
ANR	1268071	Identifier	orient		1266449	0					
ANR	1268072	PrimaryExpression	0		1266449	1					
ANR	1268073	ReturnStatement	return code ;	2596:16:95029:95040	1266449	1	True				
ANR	1268074	Identifier	code		1266449	0					
ANR	1268075	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 2 , 1 , 0 , 1 , ry , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	2					
ANR	1268076	Condition	"( code = gx_shade_trapezoid ( pfs , q , 2 , 1 , 0 , 1 , ry , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0"	2597:16:95058:95144	1266449	0	True				
ANR	1268077	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 2 , 1 , 0 , 1 , ry , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1268078	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 2 , 1 , 0 , 1 , ry , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1268079	Identifier	code		1266449	0					
ANR	1268080	CallExpression	"gx_shade_trapezoid ( pfs , q , 2 , 1 , 0 , 1 , ry , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1268081	Callee	gx_shade_trapezoid		1266449	0					
ANR	1268082	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1268083	ArgumentList	pfs		1266449	1					
ANR	1268084	Argument	pfs		1266449	0					
ANR	1268085	Identifier	pfs		1266449	0					
ANR	1268086	Argument	q		1266449	1					
ANR	1268087	Identifier	q		1266449	0					
ANR	1268088	Argument	2		1266449	2					
ANR	1268089	PrimaryExpression	2		1266449	0					
ANR	1268090	Argument	1		1266449	3					
ANR	1268091	PrimaryExpression	1		1266449	0					
ANR	1268092	Argument	0		1266449	4					
ANR	1268093	PrimaryExpression	0		1266449	0					
ANR	1268094	Argument	1		1266449	5					
ANR	1268095	PrimaryExpression	1		1266449	0					
ANR	1268096	Argument	ry		1266449	6					
ANR	1268097	Identifier	ry		1266449	0					
ANR	1268098	Argument	q [ 1 ] . y		1266449	7					
ANR	1268099	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1268100	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1268101	Identifier	q		1266449	0					
ANR	1268102	PrimaryExpression	1		1266449	1					
ANR	1268103	Identifier	y		1266449	1					
ANR	1268104	Argument	swap_axes		1266449	8					
ANR	1268105	Identifier	swap_axes		1266449	0					
ANR	1268106	Argument	& dc		1266449	9					
ANR	1268107	UnaryOperationExpression	& dc		1266449	0					
ANR	1268108	UnaryOperator	&		1266449	0					
ANR	1268109	Identifier	dc		1266449	1					
ANR	1268110	Argument	orient		1266449	10					
ANR	1268111	Identifier	orient		1266449	0					
ANR	1268112	PrimaryExpression	0		1266449	1					
ANR	1268113	ReturnStatement	return code ;	2598:16:95163:95174	1266449	1	True				
ANR	1268114	Identifier	code		1266449	0					
ANR	1268115	ReturnStatement	"return gx_shade_trapezoid ( pfs , q , 2 , 3 , 0 , 3 , ry , q [ 3 ] . y , swap_axes , & dc , orient ) ;"	2599:12:95188:95269	1266449	3	True				
ANR	1268116	CallExpression	"gx_shade_trapezoid ( pfs , q , 2 , 3 , 0 , 3 , ry , q [ 3 ] . y , swap_axes , & dc , orient )"		1266449	0					
ANR	1268117	Callee	gx_shade_trapezoid		1266449	0					
ANR	1268118	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1268119	ArgumentList	pfs		1266449	1					
ANR	1268120	Argument	pfs		1266449	0					
ANR	1268121	Identifier	pfs		1266449	0					
ANR	1268122	Argument	q		1266449	1					
ANR	1268123	Identifier	q		1266449	0					
ANR	1268124	Argument	2		1266449	2					
ANR	1268125	PrimaryExpression	2		1266449	0					
ANR	1268126	Argument	3		1266449	3					
ANR	1268127	PrimaryExpression	3		1266449	0					
ANR	1268128	Argument	0		1266449	4					
ANR	1268129	PrimaryExpression	0		1266449	0					
ANR	1268130	Argument	3		1266449	5					
ANR	1268131	PrimaryExpression	3		1266449	0					
ANR	1268132	Argument	ry		1266449	6					
ANR	1268133	Identifier	ry		1266449	0					
ANR	1268134	Argument	q [ 3 ] . y		1266449	7					
ANR	1268135	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1268136	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1268137	Identifier	q		1266449	0					
ANR	1268138	PrimaryExpression	3		1266449	1					
ANR	1268139	Identifier	y		1266449	1					
ANR	1268140	Argument	swap_axes		1266449	8					
ANR	1268141	Identifier	swap_axes		1266449	0					
ANR	1268142	Argument	& dc		1266449	9					
ANR	1268143	UnaryOperationExpression	& dc		1266449	0					
ANR	1268144	UnaryOperator	&		1266449	0					
ANR	1268145	Identifier	dc		1266449	1					
ANR	1268146	Argument	orient		1266449	10					
ANR	1268147	Identifier	orient		1266449	0					
ANR	1268148	ElseStatement	else		1266449	0					
ANR	1268149	IfStatement	"if ( self_intersecting && intersection_of_small_bars ( q , 0 , 3 , 1 , 2 , & ry , & ey ) )"		1266449	0					
ANR	1268150	Condition	"self_intersecting && intersection_of_small_bars ( q , 0 , 3 , 1 , 2 , & ry , & ey )"	2600:19:95290:95361	1266449	0	True				
ANR	1268151	AndExpression	"self_intersecting && intersection_of_small_bars ( q , 0 , 3 , 1 , 2 , & ry , & ey )"		1266449	0		&&			
ANR	1268152	Identifier	self_intersecting		1266449	0					
ANR	1268153	CallExpression	"intersection_of_small_bars ( q , 0 , 3 , 1 , 2 , & ry , & ey )"		1266449	1					
ANR	1268154	Callee	intersection_of_small_bars		1266449	0					
ANR	1268155	Identifier	intersection_of_small_bars		1266449	0					
ANR	1268156	ArgumentList	q		1266449	1					
ANR	1268157	Argument	q		1266449	0					
ANR	1268158	Identifier	q		1266449	0					
ANR	1268159	Argument	0		1266449	1					
ANR	1268160	PrimaryExpression	0		1266449	0					
ANR	1268161	Argument	3		1266449	2					
ANR	1268162	PrimaryExpression	3		1266449	0					
ANR	1268163	Argument	1		1266449	3					
ANR	1268164	PrimaryExpression	1		1266449	0					
ANR	1268165	Argument	2		1266449	4					
ANR	1268166	PrimaryExpression	2		1266449	0					
ANR	1268167	Argument	& ry		1266449	5					
ANR	1268168	UnaryOperationExpression	& ry		1266449	0					
ANR	1268169	UnaryOperator	&		1266449	0					
ANR	1268170	Identifier	ry		1266449	1					
ANR	1268171	Argument	& ey		1266449	6					
ANR	1268172	UnaryOperationExpression	& ey		1266449	0					
ANR	1268173	UnaryOperator	&		1266449	0					
ANR	1268174	Identifier	ey		1266449	1					
ANR	1268175	CompoundStatement		114:93:5934:5934	1266449	1					
ANR	1268176	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0 )"		1266449	0					
ANR	1268177	Condition	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0"	2601:16:95382:95473	1266449	0	True				
ANR	1268178	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1268179	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , ry + ey , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1268180	Identifier	code		1266449	0					
ANR	1268181	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , ry + ey , swap_axes , & dc , orient )"		1266449	1					
ANR	1268182	Callee	gx_shade_trapezoid		1266449	0					
ANR	1268183	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1268184	ArgumentList	pfs		1266449	1					
ANR	1268185	Argument	pfs		1266449	0					
ANR	1268186	Identifier	pfs		1266449	0					
ANR	1268187	Argument	q		1266449	1					
ANR	1268188	Identifier	q		1266449	0					
ANR	1268189	Argument	0		1266449	2					
ANR	1268190	PrimaryExpression	0		1266449	0					
ANR	1268191	Argument	1		1266449	3					
ANR	1268192	PrimaryExpression	1		1266449	0					
ANR	1268193	Argument	0		1266449	4					
ANR	1268194	PrimaryExpression	0		1266449	0					
ANR	1268195	Argument	3		1266449	5					
ANR	1268196	PrimaryExpression	3		1266449	0					
ANR	1268197	Argument	q [ 0 ] . y		1266449	6					
ANR	1268198	MemberAccess	q [ 0 ] . y		1266449	0					
ANR	1268199	ArrayIndexing	q [ 0 ]		1266449	0					
ANR	1268200	Identifier	q		1266449	0					
ANR	1268201	PrimaryExpression	0		1266449	1					
ANR	1268202	Identifier	y		1266449	1					
ANR	1268203	Argument	ry + ey		1266449	7					
ANR	1268204	AdditiveExpression	ry + ey		1266449	0		+			
ANR	1268205	Identifier	ry		1266449	0					
ANR	1268206	Identifier	ey		1266449	1					
ANR	1268207	Argument	swap_axes		1266449	8					
ANR	1268208	Identifier	swap_axes		1266449	0					
ANR	1268209	Argument	& dc		1266449	9					
ANR	1268210	UnaryOperationExpression	& dc		1266449	0					
ANR	1268211	UnaryOperator	&		1266449	0					
ANR	1268212	Identifier	dc		1266449	1					
ANR	1268213	Argument	orient		1266449	10					
ANR	1268214	Identifier	orient		1266449	0					
ANR	1268215	PrimaryExpression	0		1266449	1					
ANR	1268216	ReturnStatement	return code ;	2602:16:95492:95503	1266449	1	True				
ANR	1268217	Identifier	code		1266449	0					
ANR	1268218	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 2 , 1 , 2 , 3 , q [ 2 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0 )"		1266449	1					
ANR	1268219	Condition	"( code = gx_shade_trapezoid ( pfs , q , 2 , 1 , 2 , 3 , q [ 2 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0"	2603:16:95521:95612	1266449	0	True				
ANR	1268220	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 2 , 1 , 2 , 3 , q [ 2 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1268221	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 2 , 1 , 2 , 3 , q [ 2 ] . y , ry + ey , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1268222	Identifier	code		1266449	0					
ANR	1268223	CallExpression	"gx_shade_trapezoid ( pfs , q , 2 , 1 , 2 , 3 , q [ 2 ] . y , ry + ey , swap_axes , & dc , orient )"		1266449	1					
ANR	1268224	Callee	gx_shade_trapezoid		1266449	0					
ANR	1268225	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1268226	ArgumentList	pfs		1266449	1					
ANR	1268227	Argument	pfs		1266449	0					
ANR	1268228	Identifier	pfs		1266449	0					
ANR	1268229	Argument	q		1266449	1					
ANR	1268230	Identifier	q		1266449	0					
ANR	1268231	Argument	2		1266449	2					
ANR	1268232	PrimaryExpression	2		1266449	0					
ANR	1268233	Argument	1		1266449	3					
ANR	1268234	PrimaryExpression	1		1266449	0					
ANR	1268235	Argument	2		1266449	4					
ANR	1268236	PrimaryExpression	2		1266449	0					
ANR	1268237	Argument	3		1266449	5					
ANR	1268238	PrimaryExpression	3		1266449	0					
ANR	1268239	Argument	q [ 2 ] . y		1266449	6					
ANR	1268240	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1268241	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1268242	Identifier	q		1266449	0					
ANR	1268243	PrimaryExpression	2		1266449	1					
ANR	1268244	Identifier	y		1266449	1					
ANR	1268245	Argument	ry + ey		1266449	7					
ANR	1268246	AdditiveExpression	ry + ey		1266449	0		+			
ANR	1268247	Identifier	ry		1266449	0					
ANR	1268248	Identifier	ey		1266449	1					
ANR	1268249	Argument	swap_axes		1266449	8					
ANR	1268250	Identifier	swap_axes		1266449	0					
ANR	1268251	Argument	& dc		1266449	9					
ANR	1268252	UnaryOperationExpression	& dc		1266449	0					
ANR	1268253	UnaryOperator	&		1266449	0					
ANR	1268254	Identifier	dc		1266449	1					
ANR	1268255	Argument	orient		1266449	10					
ANR	1268256	Identifier	orient		1266449	0					
ANR	1268257	PrimaryExpression	0		1266449	1					
ANR	1268258	ReturnStatement	return code ;	2604:16:95631:95642	1266449	1	True				
ANR	1268259	Identifier	code		1266449	0					
ANR	1268260	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 2 , 1 , ry , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	2					
ANR	1268261	Condition	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 2 , 1 , ry , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0"	2605:16:95660:95746	1266449	0	True				
ANR	1268262	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 2 , 1 , ry , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1268263	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 2 , 1 , ry , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1268264	Identifier	code		1266449	0					
ANR	1268265	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 1 , 2 , 1 , ry , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1268266	Callee	gx_shade_trapezoid		1266449	0					
ANR	1268267	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1268268	ArgumentList	pfs		1266449	1					
ANR	1268269	Argument	pfs		1266449	0					
ANR	1268270	Identifier	pfs		1266449	0					
ANR	1268271	Argument	q		1266449	1					
ANR	1268272	Identifier	q		1266449	0					
ANR	1268273	Argument	0		1266449	2					
ANR	1268274	PrimaryExpression	0		1266449	0					
ANR	1268275	Argument	1		1266449	3					
ANR	1268276	PrimaryExpression	1		1266449	0					
ANR	1268277	Argument	2		1266449	4					
ANR	1268278	PrimaryExpression	2		1266449	0					
ANR	1268279	Argument	1		1266449	5					
ANR	1268280	PrimaryExpression	1		1266449	0					
ANR	1268281	Argument	ry		1266449	6					
ANR	1268282	Identifier	ry		1266449	0					
ANR	1268283	Argument	q [ 1 ] . y		1266449	7					
ANR	1268284	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1268285	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1268286	Identifier	q		1266449	0					
ANR	1268287	PrimaryExpression	1		1266449	1					
ANR	1268288	Identifier	y		1266449	1					
ANR	1268289	Argument	swap_axes		1266449	8					
ANR	1268290	Identifier	swap_axes		1266449	0					
ANR	1268291	Argument	& dc		1266449	9					
ANR	1268292	UnaryOperationExpression	& dc		1266449	0					
ANR	1268293	UnaryOperator	&		1266449	0					
ANR	1268294	Identifier	dc		1266449	1					
ANR	1268295	Argument	orient		1266449	10					
ANR	1268296	Identifier	orient		1266449	0					
ANR	1268297	PrimaryExpression	0		1266449	1					
ANR	1268298	ReturnStatement	return code ;	2606:16:95765:95776	1266449	1	True				
ANR	1268299	Identifier	code		1266449	0					
ANR	1268300	ReturnStatement	"return gx_shade_trapezoid ( pfs , q , 0 , 3 , 2 , 3 , ry , q [ 3 ] . y , swap_axes , & dc , orient ) ;"	2607:12:95790:95871	1266449	3	True				
ANR	1268301	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 3 , 2 , 3 , ry , q [ 3 ] . y , swap_axes , & dc , orient )"		1266449	0					
ANR	1268302	Callee	gx_shade_trapezoid		1266449	0					
ANR	1268303	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1268304	ArgumentList	pfs		1266449	1					
ANR	1268305	Argument	pfs		1266449	0					
ANR	1268306	Identifier	pfs		1266449	0					
ANR	1268307	Argument	q		1266449	1					
ANR	1268308	Identifier	q		1266449	0					
ANR	1268309	Argument	0		1266449	2					
ANR	1268310	PrimaryExpression	0		1266449	0					
ANR	1268311	Argument	3		1266449	3					
ANR	1268312	PrimaryExpression	3		1266449	0					
ANR	1268313	Argument	2		1266449	4					
ANR	1268314	PrimaryExpression	2		1266449	0					
ANR	1268315	Argument	3		1266449	5					
ANR	1268316	PrimaryExpression	3		1266449	0					
ANR	1268317	Argument	ry		1266449	6					
ANR	1268318	Identifier	ry		1266449	0					
ANR	1268319	Argument	q [ 3 ] . y		1266449	7					
ANR	1268320	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1268321	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1268322	Identifier	q		1266449	0					
ANR	1268323	PrimaryExpression	3		1266449	1					
ANR	1268324	Identifier	y		1266449	1					
ANR	1268325	Argument	swap_axes		1266449	8					
ANR	1268326	Identifier	swap_axes		1266449	0					
ANR	1268327	Argument	& dc		1266449	9					
ANR	1268328	UnaryOperationExpression	& dc		1266449	0					
ANR	1268329	UnaryOperator	&		1266449	0					
ANR	1268330	Identifier	dc		1266449	1					
ANR	1268331	Argument	orient		1266449	10					
ANR	1268332	Identifier	orient		1266449	0					
ANR	1268333	ElseStatement	else		1266449	0					
ANR	1268334	CompoundStatement		122:15:6458:6458	1266449	0					
ANR	1268335	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	0					
ANR	1268336	Condition	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0"	2609:16:95906:95996	1266449	0	True				
ANR	1268337	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1268338	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1268339	Identifier	code		1266449	0					
ANR	1268340	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1268341	Callee	gx_shade_trapezoid		1266449	0					
ANR	1268342	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1268343	ArgumentList	pfs		1266449	1					
ANR	1268344	Argument	pfs		1266449	0					
ANR	1268345	Identifier	pfs		1266449	0					
ANR	1268346	Argument	q		1266449	1					
ANR	1268347	Identifier	q		1266449	0					
ANR	1268348	Argument	0		1266449	2					
ANR	1268349	PrimaryExpression	0		1266449	0					
ANR	1268350	Argument	1		1266449	3					
ANR	1268351	PrimaryExpression	1		1266449	0					
ANR	1268352	Argument	0		1266449	4					
ANR	1268353	PrimaryExpression	0		1266449	0					
ANR	1268354	Argument	3		1266449	5					
ANR	1268355	PrimaryExpression	3		1266449	0					
ANR	1268356	Argument	q [ 0 ] . y		1266449	6					
ANR	1268357	MemberAccess	q [ 0 ] . y		1266449	0					
ANR	1268358	ArrayIndexing	q [ 0 ]		1266449	0					
ANR	1268359	Identifier	q		1266449	0					
ANR	1268360	PrimaryExpression	0		1266449	1					
ANR	1268361	Identifier	y		1266449	1					
ANR	1268362	Argument	q [ 1 ] . y		1266449	7					
ANR	1268363	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1268364	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1268365	Identifier	q		1266449	0					
ANR	1268366	PrimaryExpression	1		1266449	1					
ANR	1268367	Identifier	y		1266449	1					
ANR	1268368	Argument	swap_axes		1266449	8					
ANR	1268369	Identifier	swap_axes		1266449	0					
ANR	1268370	Argument	& dc		1266449	9					
ANR	1268371	UnaryOperationExpression	& dc		1266449	0					
ANR	1268372	UnaryOperator	&		1266449	0					
ANR	1268373	Identifier	dc		1266449	1					
ANR	1268374	Argument	orient		1266449	10					
ANR	1268375	Identifier	orient		1266449	0					
ANR	1268376	PrimaryExpression	0		1266449	1					
ANR	1268377	ReturnStatement	return code ;	2610:16:96015:96026	1266449	1	True				
ANR	1268378	Identifier	code		1266449	0					
ANR	1268379	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 2 , 3 , 2 , 1 , q [ 2 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	1					
ANR	1268380	Condition	"( code = gx_shade_trapezoid ( pfs , q , 2 , 3 , 2 , 1 , q [ 2 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0"	2611:16:96044:96134	1266449	0	True				
ANR	1268381	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 2 , 3 , 2 , 1 , q [ 2 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1268382	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 2 , 3 , 2 , 1 , q [ 2 ] . y , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1268383	Identifier	code		1266449	0					
ANR	1268384	CallExpression	"gx_shade_trapezoid ( pfs , q , 2 , 3 , 2 , 1 , q [ 2 ] . y , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1268385	Callee	gx_shade_trapezoid		1266449	0					
ANR	1268386	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1268387	ArgumentList	pfs		1266449	1					
ANR	1268388	Argument	pfs		1266449	0					
ANR	1268389	Identifier	pfs		1266449	0					
ANR	1268390	Argument	q		1266449	1					
ANR	1268391	Identifier	q		1266449	0					
ANR	1268392	Argument	2		1266449	2					
ANR	1268393	PrimaryExpression	2		1266449	0					
ANR	1268394	Argument	3		1266449	3					
ANR	1268395	PrimaryExpression	3		1266449	0					
ANR	1268396	Argument	2		1266449	4					
ANR	1268397	PrimaryExpression	2		1266449	0					
ANR	1268398	Argument	1		1266449	5					
ANR	1268399	PrimaryExpression	1		1266449	0					
ANR	1268400	Argument	q [ 2 ] . y		1266449	6					
ANR	1268401	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1268402	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1268403	Identifier	q		1266449	0					
ANR	1268404	PrimaryExpression	2		1266449	1					
ANR	1268405	Identifier	y		1266449	1					
ANR	1268406	Argument	q [ 1 ] . y		1266449	7					
ANR	1268407	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1268408	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1268409	Identifier	q		1266449	0					
ANR	1268410	PrimaryExpression	1		1266449	1					
ANR	1268411	Identifier	y		1266449	1					
ANR	1268412	Argument	swap_axes		1266449	8					
ANR	1268413	Identifier	swap_axes		1266449	0					
ANR	1268414	Argument	& dc		1266449	9					
ANR	1268415	UnaryOperationExpression	& dc		1266449	0					
ANR	1268416	UnaryOperator	&		1266449	0					
ANR	1268417	Identifier	dc		1266449	1					
ANR	1268418	Argument	orient		1266449	10					
ANR	1268419	Identifier	orient		1266449	0					
ANR	1268420	PrimaryExpression	0		1266449	1					
ANR	1268421	ReturnStatement	return code ;	2612:16:96153:96164	1266449	1	True				
ANR	1268422	Identifier	code		1266449	0					
ANR	1268423	ReturnStatement	"return gx_shade_trapezoid ( pfs , q , 2 , 3 , 0 , 3 , q [ 1 ] . y , q [ 3 ] . y , swap_axes , & dc , orient ) ;"	2613:12:96178:96263	1266449	2	True				
ANR	1268424	CallExpression	"gx_shade_trapezoid ( pfs , q , 2 , 3 , 0 , 3 , q [ 1 ] . y , q [ 3 ] . y , swap_axes , & dc , orient )"		1266449	0					
ANR	1268425	Callee	gx_shade_trapezoid		1266449	0					
ANR	1268426	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1268427	ArgumentList	pfs		1266449	1					
ANR	1268428	Argument	pfs		1266449	0					
ANR	1268429	Identifier	pfs		1266449	0					
ANR	1268430	Argument	q		1266449	1					
ANR	1268431	Identifier	q		1266449	0					
ANR	1268432	Argument	2		1266449	2					
ANR	1268433	PrimaryExpression	2		1266449	0					
ANR	1268434	Argument	3		1266449	3					
ANR	1268435	PrimaryExpression	3		1266449	0					
ANR	1268436	Argument	0		1266449	4					
ANR	1268437	PrimaryExpression	0		1266449	0					
ANR	1268438	Argument	3		1266449	5					
ANR	1268439	PrimaryExpression	3		1266449	0					
ANR	1268440	Argument	q [ 1 ] . y		1266449	6					
ANR	1268441	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1268442	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1268443	Identifier	q		1266449	0					
ANR	1268444	PrimaryExpression	1		1266449	1					
ANR	1268445	Identifier	y		1266449	1					
ANR	1268446	Argument	q [ 3 ] . y		1266449	7					
ANR	1268447	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1268448	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1268449	Identifier	q		1266449	0					
ANR	1268450	PrimaryExpression	3		1266449	1					
ANR	1268451	Identifier	y		1266449	1					
ANR	1268452	Argument	swap_axes		1266449	8					
ANR	1268453	Identifier	swap_axes		1266449	0					
ANR	1268454	Argument	& dc		1266449	9					
ANR	1268455	UnaryOperationExpression	& dc		1266449	0					
ANR	1268456	UnaryOperator	&		1266449	0					
ANR	1268457	Identifier	dc		1266449	1					
ANR	1268458	Argument	orient		1266449	10					
ANR	1268459	Identifier	orient		1266449	0					
ANR	1268460	ElseStatement	else		1266449	0					
ANR	1268461	IfStatement	if ( q [ 2 ] . y <= q [ 3 ] . y && q [ 3 ] . y <= q [ 1 ] . y )		1266449	0					
ANR	1268462	Condition	q [ 2 ] . y <= q [ 3 ] . y && q [ 3 ] . y <= q [ 1 ] . y	2615:15:96290:96325	1266449	0	True				
ANR	1268463	AndExpression	q [ 2 ] . y <= q [ 3 ] . y && q [ 3 ] . y <= q [ 1 ] . y		1266449	0		&&			
ANR	1268464	RelationalExpression	q [ 2 ] . y <= q [ 3 ] . y		1266449	0		<=			
ANR	1268465	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1268466	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1268467	Identifier	q		1266449	0					
ANR	1268468	PrimaryExpression	2		1266449	1					
ANR	1268469	Identifier	y		1266449	1					
ANR	1268470	MemberAccess	q [ 3 ] . y		1266449	1					
ANR	1268471	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1268472	Identifier	q		1266449	0					
ANR	1268473	PrimaryExpression	3		1266449	1					
ANR	1268474	Identifier	y		1266449	1					
ANR	1268475	RelationalExpression	q [ 3 ] . y <= q [ 1 ] . y		1266449	1		<=			
ANR	1268476	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1268477	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1268478	Identifier	q		1266449	0					
ANR	1268479	PrimaryExpression	3		1266449	1					
ANR	1268480	Identifier	y		1266449	1					
ANR	1268481	MemberAccess	q [ 1 ] . y		1266449	1					
ANR	1268482	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1268483	Identifier	q		1266449	0					
ANR	1268484	PrimaryExpression	1		1266449	1					
ANR	1268485	Identifier	y		1266449	1					
ANR	1268486	CompoundStatement		129:53:6898:6898	1266449	1					
ANR	1268487	IfStatement	"if ( self_intersecting && intersection_of_small_bars ( q , 0 , 1 , 2 , 3 , & ry , & ey ) )"		1266449	0					
ANR	1268488	Condition	"self_intersecting && intersection_of_small_bars ( q , 0 , 1 , 2 , 3 , & ry , & ey )"	2616:12:96342:96413	1266449	0	True				
ANR	1268489	AndExpression	"self_intersecting && intersection_of_small_bars ( q , 0 , 1 , 2 , 3 , & ry , & ey )"		1266449	0		&&			
ANR	1268490	Identifier	self_intersecting		1266449	0					
ANR	1268491	CallExpression	"intersection_of_small_bars ( q , 0 , 1 , 2 , 3 , & ry , & ey )"		1266449	1					
ANR	1268492	Callee	intersection_of_small_bars		1266449	0					
ANR	1268493	Identifier	intersection_of_small_bars		1266449	0					
ANR	1268494	ArgumentList	q		1266449	1					
ANR	1268495	Argument	q		1266449	0					
ANR	1268496	Identifier	q		1266449	0					
ANR	1268497	Argument	0		1266449	1					
ANR	1268498	PrimaryExpression	0		1266449	0					
ANR	1268499	Argument	1		1266449	2					
ANR	1268500	PrimaryExpression	1		1266449	0					
ANR	1268501	Argument	2		1266449	3					
ANR	1268502	PrimaryExpression	2		1266449	0					
ANR	1268503	Argument	3		1266449	4					
ANR	1268504	PrimaryExpression	3		1266449	0					
ANR	1268505	Argument	& ry		1266449	5					
ANR	1268506	UnaryOperationExpression	& ry		1266449	0					
ANR	1268507	UnaryOperator	&		1266449	0					
ANR	1268508	Identifier	ry		1266449	1					
ANR	1268509	Argument	& ey		1266449	6					
ANR	1268510	UnaryOperationExpression	& ey		1266449	0					
ANR	1268511	UnaryOperator	&		1266449	0					
ANR	1268512	Identifier	ey		1266449	1					
ANR	1268513	CompoundStatement		130:86:6986:6986	1266449	1					
ANR	1268514	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0 )"		1266449	0					
ANR	1268515	Condition	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0"	2618:16:96480:96571	1266449	0	True				
ANR	1268516	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1268517	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , ry + ey , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1268518	Identifier	code		1266449	0					
ANR	1268519	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , ry + ey , swap_axes , & dc , orient )"		1266449	1					
ANR	1268520	Callee	gx_shade_trapezoid		1266449	0					
ANR	1268521	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1268522	ArgumentList	pfs		1266449	1					
ANR	1268523	Argument	pfs		1266449	0					
ANR	1268524	Identifier	pfs		1266449	0					
ANR	1268525	Argument	q		1266449	1					
ANR	1268526	Identifier	q		1266449	0					
ANR	1268527	Argument	0		1266449	2					
ANR	1268528	PrimaryExpression	0		1266449	0					
ANR	1268529	Argument	1		1266449	3					
ANR	1268530	PrimaryExpression	1		1266449	0					
ANR	1268531	Argument	0		1266449	4					
ANR	1268532	PrimaryExpression	0		1266449	0					
ANR	1268533	Argument	3		1266449	5					
ANR	1268534	PrimaryExpression	3		1266449	0					
ANR	1268535	Argument	q [ 0 ] . y		1266449	6					
ANR	1268536	MemberAccess	q [ 0 ] . y		1266449	0					
ANR	1268537	ArrayIndexing	q [ 0 ]		1266449	0					
ANR	1268538	Identifier	q		1266449	0					
ANR	1268539	PrimaryExpression	0		1266449	1					
ANR	1268540	Identifier	y		1266449	1					
ANR	1268541	Argument	ry + ey		1266449	7					
ANR	1268542	AdditiveExpression	ry + ey		1266449	0		+			
ANR	1268543	Identifier	ry		1266449	0					
ANR	1268544	Identifier	ey		1266449	1					
ANR	1268545	Argument	swap_axes		1266449	8					
ANR	1268546	Identifier	swap_axes		1266449	0					
ANR	1268547	Argument	& dc		1266449	9					
ANR	1268548	UnaryOperationExpression	& dc		1266449	0					
ANR	1268549	UnaryOperator	&		1266449	0					
ANR	1268550	Identifier	dc		1266449	1					
ANR	1268551	Argument	orient		1266449	10					
ANR	1268552	Identifier	orient		1266449	0					
ANR	1268553	PrimaryExpression	0		1266449	1					
ANR	1268554	ReturnStatement	return code ;	2619:16:96590:96601	1266449	1	True				
ANR	1268555	Identifier	code		1266449	0					
ANR	1268556	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 2 , 1 , 2 , 3 , q [ 2 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0 )"		1266449	1					
ANR	1268557	Condition	"( code = gx_shade_trapezoid ( pfs , q , 2 , 1 , 2 , 3 , q [ 2 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0"	2620:16:96619:96710	1266449	0	True				
ANR	1268558	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 2 , 1 , 2 , 3 , q [ 2 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1268559	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 2 , 1 , 2 , 3 , q [ 2 ] . y , ry + ey , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1268560	Identifier	code		1266449	0					
ANR	1268561	CallExpression	"gx_shade_trapezoid ( pfs , q , 2 , 1 , 2 , 3 , q [ 2 ] . y , ry + ey , swap_axes , & dc , orient )"		1266449	1					
ANR	1268562	Callee	gx_shade_trapezoid		1266449	0					
ANR	1268563	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1268564	ArgumentList	pfs		1266449	1					
ANR	1268565	Argument	pfs		1266449	0					
ANR	1268566	Identifier	pfs		1266449	0					
ANR	1268567	Argument	q		1266449	1					
ANR	1268568	Identifier	q		1266449	0					
ANR	1268569	Argument	2		1266449	2					
ANR	1268570	PrimaryExpression	2		1266449	0					
ANR	1268571	Argument	1		1266449	3					
ANR	1268572	PrimaryExpression	1		1266449	0					
ANR	1268573	Argument	2		1266449	4					
ANR	1268574	PrimaryExpression	2		1266449	0					
ANR	1268575	Argument	3		1266449	5					
ANR	1268576	PrimaryExpression	3		1266449	0					
ANR	1268577	Argument	q [ 2 ] . y		1266449	6					
ANR	1268578	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1268579	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1268580	Identifier	q		1266449	0					
ANR	1268581	PrimaryExpression	2		1266449	1					
ANR	1268582	Identifier	y		1266449	1					
ANR	1268583	Argument	ry + ey		1266449	7					
ANR	1268584	AdditiveExpression	ry + ey		1266449	0		+			
ANR	1268585	Identifier	ry		1266449	0					
ANR	1268586	Identifier	ey		1266449	1					
ANR	1268587	Argument	swap_axes		1266449	8					
ANR	1268588	Identifier	swap_axes		1266449	0					
ANR	1268589	Argument	& dc		1266449	9					
ANR	1268590	UnaryOperationExpression	& dc		1266449	0					
ANR	1268591	UnaryOperator	&		1266449	0					
ANR	1268592	Identifier	dc		1266449	1					
ANR	1268593	Argument	orient		1266449	10					
ANR	1268594	Identifier	orient		1266449	0					
ANR	1268595	PrimaryExpression	0		1266449	1					
ANR	1268596	ReturnStatement	return code ;	2621:16:96729:96740	1266449	1	True				
ANR	1268597	Identifier	code		1266449	0					
ANR	1268598	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 2 , 1 , 0 , 1 , ry , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	2					
ANR	1268599	Condition	"( code = gx_shade_trapezoid ( pfs , q , 2 , 1 , 0 , 1 , ry , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0"	2622:16:96758:96844	1266449	0	True				
ANR	1268600	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 2 , 1 , 0 , 1 , ry , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1268601	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 2 , 1 , 0 , 1 , ry , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1268602	Identifier	code		1266449	0					
ANR	1268603	CallExpression	"gx_shade_trapezoid ( pfs , q , 2 , 1 , 0 , 1 , ry , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1268604	Callee	gx_shade_trapezoid		1266449	0					
ANR	1268605	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1268606	ArgumentList	pfs		1266449	1					
ANR	1268607	Argument	pfs		1266449	0					
ANR	1268608	Identifier	pfs		1266449	0					
ANR	1268609	Argument	q		1266449	1					
ANR	1268610	Identifier	q		1266449	0					
ANR	1268611	Argument	2		1266449	2					
ANR	1268612	PrimaryExpression	2		1266449	0					
ANR	1268613	Argument	1		1266449	3					
ANR	1268614	PrimaryExpression	1		1266449	0					
ANR	1268615	Argument	0		1266449	4					
ANR	1268616	PrimaryExpression	0		1266449	0					
ANR	1268617	Argument	1		1266449	5					
ANR	1268618	PrimaryExpression	1		1266449	0					
ANR	1268619	Argument	ry		1266449	6					
ANR	1268620	Identifier	ry		1266449	0					
ANR	1268621	Argument	q [ 1 ] . y		1266449	7					
ANR	1268622	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1268623	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1268624	Identifier	q		1266449	0					
ANR	1268625	PrimaryExpression	1		1266449	1					
ANR	1268626	Identifier	y		1266449	1					
ANR	1268627	Argument	swap_axes		1266449	8					
ANR	1268628	Identifier	swap_axes		1266449	0					
ANR	1268629	Argument	& dc		1266449	9					
ANR	1268630	UnaryOperationExpression	& dc		1266449	0					
ANR	1268631	UnaryOperator	&		1266449	0					
ANR	1268632	Identifier	dc		1266449	1					
ANR	1268633	Argument	orient		1266449	10					
ANR	1268634	Identifier	orient		1266449	0					
ANR	1268635	PrimaryExpression	0		1266449	1					
ANR	1268636	ReturnStatement	return code ;	2623:16:96863:96874	1266449	1	True				
ANR	1268637	Identifier	code		1266449	0					
ANR	1268638	ReturnStatement	"return gx_shade_trapezoid ( pfs , q , 2 , 3 , 0 , 3 , ry , q [ 3 ] . y , swap_axes , & dc , orient ) ;"	2624:12:96888:96969	1266449	3	True				
ANR	1268639	CallExpression	"gx_shade_trapezoid ( pfs , q , 2 , 3 , 0 , 3 , ry , q [ 3 ] . y , swap_axes , & dc , orient )"		1266449	0					
ANR	1268640	Callee	gx_shade_trapezoid		1266449	0					
ANR	1268641	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1268642	ArgumentList	pfs		1266449	1					
ANR	1268643	Argument	pfs		1266449	0					
ANR	1268644	Identifier	pfs		1266449	0					
ANR	1268645	Argument	q		1266449	1					
ANR	1268646	Identifier	q		1266449	0					
ANR	1268647	Argument	2		1266449	2					
ANR	1268648	PrimaryExpression	2		1266449	0					
ANR	1268649	Argument	3		1266449	3					
ANR	1268650	PrimaryExpression	3		1266449	0					
ANR	1268651	Argument	0		1266449	4					
ANR	1268652	PrimaryExpression	0		1266449	0					
ANR	1268653	Argument	3		1266449	5					
ANR	1268654	PrimaryExpression	3		1266449	0					
ANR	1268655	Argument	ry		1266449	6					
ANR	1268656	Identifier	ry		1266449	0					
ANR	1268657	Argument	q [ 3 ] . y		1266449	7					
ANR	1268658	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1268659	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1268660	Identifier	q		1266449	0					
ANR	1268661	PrimaryExpression	3		1266449	1					
ANR	1268662	Identifier	y		1266449	1					
ANR	1268663	Argument	swap_axes		1266449	8					
ANR	1268664	Identifier	swap_axes		1266449	0					
ANR	1268665	Argument	& dc		1266449	9					
ANR	1268666	UnaryOperationExpression	& dc		1266449	0					
ANR	1268667	UnaryOperator	&		1266449	0					
ANR	1268668	Identifier	dc		1266449	1					
ANR	1268669	Argument	orient		1266449	10					
ANR	1268670	Identifier	orient		1266449	0					
ANR	1268671	ElseStatement	else		1266449	0					
ANR	1268672	IfStatement	"if ( self_intersecting && intersection_of_small_bars ( q , 0 , 3 , 2 , 1 , & ry , & ey ) )"		1266449	0					
ANR	1268673	Condition	"self_intersecting && intersection_of_small_bars ( q , 0 , 3 , 2 , 1 , & ry , & ey )"	2625:19:96990:97061	1266449	0	True				
ANR	1268674	AndExpression	"self_intersecting && intersection_of_small_bars ( q , 0 , 3 , 2 , 1 , & ry , & ey )"		1266449	0		&&			
ANR	1268675	Identifier	self_intersecting		1266449	0					
ANR	1268676	CallExpression	"intersection_of_small_bars ( q , 0 , 3 , 2 , 1 , & ry , & ey )"		1266449	1					
ANR	1268677	Callee	intersection_of_small_bars		1266449	0					
ANR	1268678	Identifier	intersection_of_small_bars		1266449	0					
ANR	1268679	ArgumentList	q		1266449	1					
ANR	1268680	Argument	q		1266449	0					
ANR	1268681	Identifier	q		1266449	0					
ANR	1268682	Argument	0		1266449	1					
ANR	1268683	PrimaryExpression	0		1266449	0					
ANR	1268684	Argument	3		1266449	2					
ANR	1268685	PrimaryExpression	3		1266449	0					
ANR	1268686	Argument	2		1266449	3					
ANR	1268687	PrimaryExpression	2		1266449	0					
ANR	1268688	Argument	1		1266449	4					
ANR	1268689	PrimaryExpression	1		1266449	0					
ANR	1268690	Argument	& ry		1266449	5					
ANR	1268691	UnaryOperationExpression	& ry		1266449	0					
ANR	1268692	UnaryOperator	&		1266449	0					
ANR	1268693	Identifier	ry		1266449	1					
ANR	1268694	Argument	& ey		1266449	6					
ANR	1268695	UnaryOperationExpression	& ey		1266449	0					
ANR	1268696	UnaryOperator	&		1266449	0					
ANR	1268697	Identifier	ey		1266449	1					
ANR	1268698	CompoundStatement		139:93:7634:7634	1266449	1					
ANR	1268699	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0 )"		1266449	0					
ANR	1268700	Condition	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0"	2627:16:97128:97219	1266449	0	True				
ANR	1268701	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1268702	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , ry + ey , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1268703	Identifier	code		1266449	0					
ANR	1268704	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , ry + ey , swap_axes , & dc , orient )"		1266449	1					
ANR	1268705	Callee	gx_shade_trapezoid		1266449	0					
ANR	1268706	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1268707	ArgumentList	pfs		1266449	1					
ANR	1268708	Argument	pfs		1266449	0					
ANR	1268709	Identifier	pfs		1266449	0					
ANR	1268710	Argument	q		1266449	1					
ANR	1268711	Identifier	q		1266449	0					
ANR	1268712	Argument	0		1266449	2					
ANR	1268713	PrimaryExpression	0		1266449	0					
ANR	1268714	Argument	1		1266449	3					
ANR	1268715	PrimaryExpression	1		1266449	0					
ANR	1268716	Argument	0		1266449	4					
ANR	1268717	PrimaryExpression	0		1266449	0					
ANR	1268718	Argument	3		1266449	5					
ANR	1268719	PrimaryExpression	3		1266449	0					
ANR	1268720	Argument	q [ 0 ] . y		1266449	6					
ANR	1268721	MemberAccess	q [ 0 ] . y		1266449	0					
ANR	1268722	ArrayIndexing	q [ 0 ]		1266449	0					
ANR	1268723	Identifier	q		1266449	0					
ANR	1268724	PrimaryExpression	0		1266449	1					
ANR	1268725	Identifier	y		1266449	1					
ANR	1268726	Argument	ry + ey		1266449	7					
ANR	1268727	AdditiveExpression	ry + ey		1266449	0		+			
ANR	1268728	Identifier	ry		1266449	0					
ANR	1268729	Identifier	ey		1266449	1					
ANR	1268730	Argument	swap_axes		1266449	8					
ANR	1268731	Identifier	swap_axes		1266449	0					
ANR	1268732	Argument	& dc		1266449	9					
ANR	1268733	UnaryOperationExpression	& dc		1266449	0					
ANR	1268734	UnaryOperator	&		1266449	0					
ANR	1268735	Identifier	dc		1266449	1					
ANR	1268736	Argument	orient		1266449	10					
ANR	1268737	Identifier	orient		1266449	0					
ANR	1268738	PrimaryExpression	0		1266449	1					
ANR	1268739	ReturnStatement	return code ;	2628:16:97238:97249	1266449	1	True				
ANR	1268740	Identifier	code		1266449	0					
ANR	1268741	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 2 , 1 , 2 , 3 , q [ 2 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0 )"		1266449	1					
ANR	1268742	Condition	"( code = gx_shade_trapezoid ( pfs , q , 2 , 1 , 2 , 3 , q [ 2 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0"	2629:16:97267:97358	1266449	0	True				
ANR	1268743	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 2 , 1 , 2 , 3 , q [ 2 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1268744	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 2 , 1 , 2 , 3 , q [ 2 ] . y , ry + ey , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1268745	Identifier	code		1266449	0					
ANR	1268746	CallExpression	"gx_shade_trapezoid ( pfs , q , 2 , 1 , 2 , 3 , q [ 2 ] . y , ry + ey , swap_axes , & dc , orient )"		1266449	1					
ANR	1268747	Callee	gx_shade_trapezoid		1266449	0					
ANR	1268748	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1268749	ArgumentList	pfs		1266449	1					
ANR	1268750	Argument	pfs		1266449	0					
ANR	1268751	Identifier	pfs		1266449	0					
ANR	1268752	Argument	q		1266449	1					
ANR	1268753	Identifier	q		1266449	0					
ANR	1268754	Argument	2		1266449	2					
ANR	1268755	PrimaryExpression	2		1266449	0					
ANR	1268756	Argument	1		1266449	3					
ANR	1268757	PrimaryExpression	1		1266449	0					
ANR	1268758	Argument	2		1266449	4					
ANR	1268759	PrimaryExpression	2		1266449	0					
ANR	1268760	Argument	3		1266449	5					
ANR	1268761	PrimaryExpression	3		1266449	0					
ANR	1268762	Argument	q [ 2 ] . y		1266449	6					
ANR	1268763	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1268764	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1268765	Identifier	q		1266449	0					
ANR	1268766	PrimaryExpression	2		1266449	1					
ANR	1268767	Identifier	y		1266449	1					
ANR	1268768	Argument	ry + ey		1266449	7					
ANR	1268769	AdditiveExpression	ry + ey		1266449	0		+			
ANR	1268770	Identifier	ry		1266449	0					
ANR	1268771	Identifier	ey		1266449	1					
ANR	1268772	Argument	swap_axes		1266449	8					
ANR	1268773	Identifier	swap_axes		1266449	0					
ANR	1268774	Argument	& dc		1266449	9					
ANR	1268775	UnaryOperationExpression	& dc		1266449	0					
ANR	1268776	UnaryOperator	&		1266449	0					
ANR	1268777	Identifier	dc		1266449	1					
ANR	1268778	Argument	orient		1266449	10					
ANR	1268779	Identifier	orient		1266449	0					
ANR	1268780	PrimaryExpression	0		1266449	1					
ANR	1268781	ReturnStatement	return code ;	2630:16:97377:97388	1266449	1	True				
ANR	1268782	Identifier	code		1266449	0					
ANR	1268783	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 2 , 1 , ry , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	2					
ANR	1268784	Condition	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 2 , 1 , ry , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0"	2631:16:97406:97492	1266449	0	True				
ANR	1268785	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 2 , 1 , ry , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1268786	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 2 , 1 , ry , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1268787	Identifier	code		1266449	0					
ANR	1268788	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 1 , 2 , 1 , ry , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1268789	Callee	gx_shade_trapezoid		1266449	0					
ANR	1268790	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1268791	ArgumentList	pfs		1266449	1					
ANR	1268792	Argument	pfs		1266449	0					
ANR	1268793	Identifier	pfs		1266449	0					
ANR	1268794	Argument	q		1266449	1					
ANR	1268795	Identifier	q		1266449	0					
ANR	1268796	Argument	0		1266449	2					
ANR	1268797	PrimaryExpression	0		1266449	0					
ANR	1268798	Argument	1		1266449	3					
ANR	1268799	PrimaryExpression	1		1266449	0					
ANR	1268800	Argument	2		1266449	4					
ANR	1268801	PrimaryExpression	2		1266449	0					
ANR	1268802	Argument	1		1266449	5					
ANR	1268803	PrimaryExpression	1		1266449	0					
ANR	1268804	Argument	ry		1266449	6					
ANR	1268805	Identifier	ry		1266449	0					
ANR	1268806	Argument	q [ 1 ] . y		1266449	7					
ANR	1268807	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1268808	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1268809	Identifier	q		1266449	0					
ANR	1268810	PrimaryExpression	1		1266449	1					
ANR	1268811	Identifier	y		1266449	1					
ANR	1268812	Argument	swap_axes		1266449	8					
ANR	1268813	Identifier	swap_axes		1266449	0					
ANR	1268814	Argument	& dc		1266449	9					
ANR	1268815	UnaryOperationExpression	& dc		1266449	0					
ANR	1268816	UnaryOperator	&		1266449	0					
ANR	1268817	Identifier	dc		1266449	1					
ANR	1268818	Argument	orient		1266449	10					
ANR	1268819	Identifier	orient		1266449	0					
ANR	1268820	PrimaryExpression	0		1266449	1					
ANR	1268821	ReturnStatement	return code ;	2632:16:97511:97522	1266449	1	True				
ANR	1268822	Identifier	code		1266449	0					
ANR	1268823	ReturnStatement	"return gx_shade_trapezoid ( pfs , q , 0 , 3 , 2 , 3 , ry , q [ 3 ] . y , swap_axes , & dc , orient ) ;"	2633:12:97536:97617	1266449	3	True				
ANR	1268824	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 3 , 2 , 3 , ry , q [ 3 ] . y , swap_axes , & dc , orient )"		1266449	0					
ANR	1268825	Callee	gx_shade_trapezoid		1266449	0					
ANR	1268826	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1268827	ArgumentList	pfs		1266449	1					
ANR	1268828	Argument	pfs		1266449	0					
ANR	1268829	Identifier	pfs		1266449	0					
ANR	1268830	Argument	q		1266449	1					
ANR	1268831	Identifier	q		1266449	0					
ANR	1268832	Argument	0		1266449	2					
ANR	1268833	PrimaryExpression	0		1266449	0					
ANR	1268834	Argument	3		1266449	3					
ANR	1268835	PrimaryExpression	3		1266449	0					
ANR	1268836	Argument	2		1266449	4					
ANR	1268837	PrimaryExpression	2		1266449	0					
ANR	1268838	Argument	3		1266449	5					
ANR	1268839	PrimaryExpression	3		1266449	0					
ANR	1268840	Argument	ry		1266449	6					
ANR	1268841	Identifier	ry		1266449	0					
ANR	1268842	Argument	q [ 3 ] . y		1266449	7					
ANR	1268843	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1268844	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1268845	Identifier	q		1266449	0					
ANR	1268846	PrimaryExpression	3		1266449	1					
ANR	1268847	Identifier	y		1266449	1					
ANR	1268848	Argument	swap_axes		1266449	8					
ANR	1268849	Identifier	swap_axes		1266449	0					
ANR	1268850	Argument	& dc		1266449	9					
ANR	1268851	UnaryOperationExpression	& dc		1266449	0					
ANR	1268852	UnaryOperator	&		1266449	0					
ANR	1268853	Identifier	dc		1266449	1					
ANR	1268854	Argument	orient		1266449	10					
ANR	1268855	Identifier	orient		1266449	0					
ANR	1268856	ElseStatement	else		1266449	0					
ANR	1268857	CompoundStatement		148:15:8204:8204	1266449	0					
ANR	1268858	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 2 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	0					
ANR	1268859	Condition	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 2 ] . y , swap_axes , & dc , orient ) ) < 0"	2635:16:97652:97742	1266449	0	True				
ANR	1268860	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 2 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1268861	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 2 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1268862	Identifier	code		1266449	0					
ANR	1268863	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 2 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1268864	Callee	gx_shade_trapezoid		1266449	0					
ANR	1268865	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1268866	ArgumentList	pfs		1266449	1					
ANR	1268867	Argument	pfs		1266449	0					
ANR	1268868	Identifier	pfs		1266449	0					
ANR	1268869	Argument	q		1266449	1					
ANR	1268870	Identifier	q		1266449	0					
ANR	1268871	Argument	0		1266449	2					
ANR	1268872	PrimaryExpression	0		1266449	0					
ANR	1268873	Argument	1		1266449	3					
ANR	1268874	PrimaryExpression	1		1266449	0					
ANR	1268875	Argument	0		1266449	4					
ANR	1268876	PrimaryExpression	0		1266449	0					
ANR	1268877	Argument	3		1266449	5					
ANR	1268878	PrimaryExpression	3		1266449	0					
ANR	1268879	Argument	q [ 0 ] . y		1266449	6					
ANR	1268880	MemberAccess	q [ 0 ] . y		1266449	0					
ANR	1268881	ArrayIndexing	q [ 0 ]		1266449	0					
ANR	1268882	Identifier	q		1266449	0					
ANR	1268883	PrimaryExpression	0		1266449	1					
ANR	1268884	Identifier	y		1266449	1					
ANR	1268885	Argument	q [ 2 ] . y		1266449	7					
ANR	1268886	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1268887	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1268888	Identifier	q		1266449	0					
ANR	1268889	PrimaryExpression	2		1266449	1					
ANR	1268890	Identifier	y		1266449	1					
ANR	1268891	Argument	swap_axes		1266449	8					
ANR	1268892	Identifier	swap_axes		1266449	0					
ANR	1268893	Argument	& dc		1266449	9					
ANR	1268894	UnaryOperationExpression	& dc		1266449	0					
ANR	1268895	UnaryOperator	&		1266449	0					
ANR	1268896	Identifier	dc		1266449	1					
ANR	1268897	Argument	orient		1266449	10					
ANR	1268898	Identifier	orient		1266449	0					
ANR	1268899	PrimaryExpression	0		1266449	1					
ANR	1268900	ReturnStatement	return code ;	2636:16:97761:97772	1266449	1	True				
ANR	1268901	Identifier	code		1266449	0					
ANR	1268902	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 2 , 3 , 0 , 3 , q [ 2 ] . y , q [ 3 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	1					
ANR	1268903	Condition	"( code = gx_shade_trapezoid ( pfs , q , 2 , 3 , 0 , 3 , q [ 2 ] . y , q [ 3 ] . y , swap_axes , & dc , orient ) ) < 0"	2637:16:97790:97880	1266449	0	True				
ANR	1268904	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 2 , 3 , 0 , 3 , q [ 2 ] . y , q [ 3 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1268905	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 2 , 3 , 0 , 3 , q [ 2 ] . y , q [ 3 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1268906	Identifier	code		1266449	0					
ANR	1268907	CallExpression	"gx_shade_trapezoid ( pfs , q , 2 , 3 , 0 , 3 , q [ 2 ] . y , q [ 3 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1268908	Callee	gx_shade_trapezoid		1266449	0					
ANR	1268909	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1268910	ArgumentList	pfs		1266449	1					
ANR	1268911	Argument	pfs		1266449	0					
ANR	1268912	Identifier	pfs		1266449	0					
ANR	1268913	Argument	q		1266449	1					
ANR	1268914	Identifier	q		1266449	0					
ANR	1268915	Argument	2		1266449	2					
ANR	1268916	PrimaryExpression	2		1266449	0					
ANR	1268917	Argument	3		1266449	3					
ANR	1268918	PrimaryExpression	3		1266449	0					
ANR	1268919	Argument	0		1266449	4					
ANR	1268920	PrimaryExpression	0		1266449	0					
ANR	1268921	Argument	3		1266449	5					
ANR	1268922	PrimaryExpression	3		1266449	0					
ANR	1268923	Argument	q [ 2 ] . y		1266449	6					
ANR	1268924	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1268925	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1268926	Identifier	q		1266449	0					
ANR	1268927	PrimaryExpression	2		1266449	1					
ANR	1268928	Identifier	y		1266449	1					
ANR	1268929	Argument	q [ 3 ] . y		1266449	7					
ANR	1268930	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1268931	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1268932	Identifier	q		1266449	0					
ANR	1268933	PrimaryExpression	3		1266449	1					
ANR	1268934	Identifier	y		1266449	1					
ANR	1268935	Argument	swap_axes		1266449	8					
ANR	1268936	Identifier	swap_axes		1266449	0					
ANR	1268937	Argument	& dc		1266449	9					
ANR	1268938	UnaryOperationExpression	& dc		1266449	0					
ANR	1268939	UnaryOperator	&		1266449	0					
ANR	1268940	Identifier	dc		1266449	1					
ANR	1268941	Argument	orient		1266449	10					
ANR	1268942	Identifier	orient		1266449	0					
ANR	1268943	PrimaryExpression	0		1266449	1					
ANR	1268944	ReturnStatement	return code ;	2638:16:97899:97910	1266449	1	True				
ANR	1268945	Identifier	code		1266449	0					
ANR	1268946	ReturnStatement	"return gx_shade_trapezoid ( pfs , q , 0 , 1 , 2 , 1 , q [ 2 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ;"	2639:12:97924:98009	1266449	2	True				
ANR	1268947	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 1 , 2 , 1 , q [ 2 ] . y , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	0					
ANR	1268948	Callee	gx_shade_trapezoid		1266449	0					
ANR	1268949	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1268950	ArgumentList	pfs		1266449	1					
ANR	1268951	Argument	pfs		1266449	0					
ANR	1268952	Identifier	pfs		1266449	0					
ANR	1268953	Argument	q		1266449	1					
ANR	1268954	Identifier	q		1266449	0					
ANR	1268955	Argument	0		1266449	2					
ANR	1268956	PrimaryExpression	0		1266449	0					
ANR	1268957	Argument	1		1266449	3					
ANR	1268958	PrimaryExpression	1		1266449	0					
ANR	1268959	Argument	2		1266449	4					
ANR	1268960	PrimaryExpression	2		1266449	0					
ANR	1268961	Argument	1		1266449	5					
ANR	1268962	PrimaryExpression	1		1266449	0					
ANR	1268963	Argument	q [ 2 ] . y		1266449	6					
ANR	1268964	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1268965	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1268966	Identifier	q		1266449	0					
ANR	1268967	PrimaryExpression	2		1266449	1					
ANR	1268968	Identifier	y		1266449	1					
ANR	1268969	Argument	q [ 1 ] . y		1266449	7					
ANR	1268970	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1268971	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1268972	Identifier	q		1266449	0					
ANR	1268973	PrimaryExpression	1		1266449	1					
ANR	1268974	Identifier	y		1266449	1					
ANR	1268975	Argument	swap_axes		1266449	8					
ANR	1268976	Identifier	swap_axes		1266449	0					
ANR	1268977	Argument	& dc		1266449	9					
ANR	1268978	UnaryOperationExpression	& dc		1266449	0					
ANR	1268979	UnaryOperator	&		1266449	0					
ANR	1268980	Identifier	dc		1266449	1					
ANR	1268981	Argument	orient		1266449	10					
ANR	1268982	Identifier	orient		1266449	0					
ANR	1268983	ElseStatement	else		1266449	0					
ANR	1268984	IfStatement	if ( q [ 3 ] . y <= q [ 1 ] . y && q [ 1 ] . y <= q [ 2 ] . y )		1266449	0					
ANR	1268985	Condition	q [ 3 ] . y <= q [ 1 ] . y && q [ 1 ] . y <= q [ 2 ] . y	2641:15:98036:98071	1266449	0	True				
ANR	1268986	AndExpression	q [ 3 ] . y <= q [ 1 ] . y && q [ 1 ] . y <= q [ 2 ] . y		1266449	0		&&			
ANR	1268987	RelationalExpression	q [ 3 ] . y <= q [ 1 ] . y		1266449	0		<=			
ANR	1268988	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1268989	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1268990	Identifier	q		1266449	0					
ANR	1268991	PrimaryExpression	3		1266449	1					
ANR	1268992	Identifier	y		1266449	1					
ANR	1268993	MemberAccess	q [ 1 ] . y		1266449	1					
ANR	1268994	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1268995	Identifier	q		1266449	0					
ANR	1268996	PrimaryExpression	1		1266449	1					
ANR	1268997	Identifier	y		1266449	1					
ANR	1268998	RelationalExpression	q [ 1 ] . y <= q [ 2 ] . y		1266449	1		<=			
ANR	1268999	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1269000	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1269001	Identifier	q		1266449	0					
ANR	1269002	PrimaryExpression	1		1266449	1					
ANR	1269003	Identifier	y		1266449	1					
ANR	1269004	MemberAccess	q [ 2 ] . y		1266449	1					
ANR	1269005	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1269006	Identifier	q		1266449	0					
ANR	1269007	PrimaryExpression	2		1266449	1					
ANR	1269008	Identifier	y		1266449	1					
ANR	1269009	CompoundStatement		155:53:8644:8644	1266449	1					
ANR	1269010	IfStatement	"if ( self_intersecting && intersection_of_small_bars ( q , 0 , 1 , 3 , 2 , & ry , & ey ) )"		1266449	0					
ANR	1269011	Condition	"self_intersecting && intersection_of_small_bars ( q , 0 , 1 , 3 , 2 , & ry , & ey )"	2642:12:98088:98159	1266449	0	True				
ANR	1269012	AndExpression	"self_intersecting && intersection_of_small_bars ( q , 0 , 1 , 3 , 2 , & ry , & ey )"		1266449	0		&&			
ANR	1269013	Identifier	self_intersecting		1266449	0					
ANR	1269014	CallExpression	"intersection_of_small_bars ( q , 0 , 1 , 3 , 2 , & ry , & ey )"		1266449	1					
ANR	1269015	Callee	intersection_of_small_bars		1266449	0					
ANR	1269016	Identifier	intersection_of_small_bars		1266449	0					
ANR	1269017	ArgumentList	q		1266449	1					
ANR	1269018	Argument	q		1266449	0					
ANR	1269019	Identifier	q		1266449	0					
ANR	1269020	Argument	0		1266449	1					
ANR	1269021	PrimaryExpression	0		1266449	0					
ANR	1269022	Argument	1		1266449	2					
ANR	1269023	PrimaryExpression	1		1266449	0					
ANR	1269024	Argument	3		1266449	3					
ANR	1269025	PrimaryExpression	3		1266449	0					
ANR	1269026	Argument	2		1266449	4					
ANR	1269027	PrimaryExpression	2		1266449	0					
ANR	1269028	Argument	& ry		1266449	5					
ANR	1269029	UnaryOperationExpression	& ry		1266449	0					
ANR	1269030	UnaryOperator	&		1266449	0					
ANR	1269031	Identifier	ry		1266449	1					
ANR	1269032	Argument	& ey		1266449	6					
ANR	1269033	UnaryOperationExpression	& ey		1266449	0					
ANR	1269034	UnaryOperator	&		1266449	0					
ANR	1269035	Identifier	ey		1266449	1					
ANR	1269036	CompoundStatement		156:86:8732:8732	1266449	1					
ANR	1269037	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 3 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	0					
ANR	1269038	Condition	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 3 ] . y , swap_axes , & dc , orient ) ) < 0"	2643:16:98180:98270	1266449	0	True				
ANR	1269039	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 3 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1269040	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 3 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1269041	Identifier	code		1266449	0					
ANR	1269042	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 3 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1269043	Callee	gx_shade_trapezoid		1266449	0					
ANR	1269044	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1269045	ArgumentList	pfs		1266449	1					
ANR	1269046	Argument	pfs		1266449	0					
ANR	1269047	Identifier	pfs		1266449	0					
ANR	1269048	Argument	q		1266449	1					
ANR	1269049	Identifier	q		1266449	0					
ANR	1269050	Argument	0		1266449	2					
ANR	1269051	PrimaryExpression	0		1266449	0					
ANR	1269052	Argument	1		1266449	3					
ANR	1269053	PrimaryExpression	1		1266449	0					
ANR	1269054	Argument	0		1266449	4					
ANR	1269055	PrimaryExpression	0		1266449	0					
ANR	1269056	Argument	3		1266449	5					
ANR	1269057	PrimaryExpression	3		1266449	0					
ANR	1269058	Argument	q [ 0 ] . y		1266449	6					
ANR	1269059	MemberAccess	q [ 0 ] . y		1266449	0					
ANR	1269060	ArrayIndexing	q [ 0 ]		1266449	0					
ANR	1269061	Identifier	q		1266449	0					
ANR	1269062	PrimaryExpression	0		1266449	1					
ANR	1269063	Identifier	y		1266449	1					
ANR	1269064	Argument	q [ 3 ] . y		1266449	7					
ANR	1269065	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1269066	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1269067	Identifier	q		1266449	0					
ANR	1269068	PrimaryExpression	3		1266449	1					
ANR	1269069	Identifier	y		1266449	1					
ANR	1269070	Argument	swap_axes		1266449	8					
ANR	1269071	Identifier	swap_axes		1266449	0					
ANR	1269072	Argument	& dc		1266449	9					
ANR	1269073	UnaryOperationExpression	& dc		1266449	0					
ANR	1269074	UnaryOperator	&		1266449	0					
ANR	1269075	Identifier	dc		1266449	1					
ANR	1269076	Argument	orient		1266449	10					
ANR	1269077	Identifier	orient		1266449	0					
ANR	1269078	PrimaryExpression	0		1266449	1					
ANR	1269079	ReturnStatement	return code ;	2644:16:98289:98300	1266449	1	True				
ANR	1269080	Identifier	code		1266449	0					
ANR	1269081	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 3 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0 )"		1266449	1					
ANR	1269082	Condition	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 3 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0"	2645:16:98318:98409	1266449	0	True				
ANR	1269083	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 3 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1269084	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 3 ] . y , ry + ey , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1269085	Identifier	code		1266449	0					
ANR	1269086	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 3 ] . y , ry + ey , swap_axes , & dc , orient )"		1266449	1					
ANR	1269087	Callee	gx_shade_trapezoid		1266449	0					
ANR	1269088	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1269089	ArgumentList	pfs		1266449	1					
ANR	1269090	Argument	pfs		1266449	0					
ANR	1269091	Identifier	pfs		1266449	0					
ANR	1269092	Argument	q		1266449	1					
ANR	1269093	Identifier	q		1266449	0					
ANR	1269094	Argument	0		1266449	2					
ANR	1269095	PrimaryExpression	0		1266449	0					
ANR	1269096	Argument	1		1266449	3					
ANR	1269097	PrimaryExpression	1		1266449	0					
ANR	1269098	Argument	3		1266449	4					
ANR	1269099	PrimaryExpression	3		1266449	0					
ANR	1269100	Argument	2		1266449	5					
ANR	1269101	PrimaryExpression	2		1266449	0					
ANR	1269102	Argument	q [ 3 ] . y		1266449	6					
ANR	1269103	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1269104	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1269105	Identifier	q		1266449	0					
ANR	1269106	PrimaryExpression	3		1266449	1					
ANR	1269107	Identifier	y		1266449	1					
ANR	1269108	Argument	ry + ey		1266449	7					
ANR	1269109	AdditiveExpression	ry + ey		1266449	0		+			
ANR	1269110	Identifier	ry		1266449	0					
ANR	1269111	Identifier	ey		1266449	1					
ANR	1269112	Argument	swap_axes		1266449	8					
ANR	1269113	Identifier	swap_axes		1266449	0					
ANR	1269114	Argument	& dc		1266449	9					
ANR	1269115	UnaryOperationExpression	& dc		1266449	0					
ANR	1269116	UnaryOperator	&		1266449	0					
ANR	1269117	Identifier	dc		1266449	1					
ANR	1269118	Argument	orient		1266449	10					
ANR	1269119	Identifier	orient		1266449	0					
ANR	1269120	PrimaryExpression	0		1266449	1					
ANR	1269121	ReturnStatement	return code ;	2646:16:98428:98439	1266449	1	True				
ANR	1269122	Identifier	code		1266449	0					
ANR	1269123	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 3 , 2 , 0 , 1 , ry , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	2					
ANR	1269124	Condition	"( code = gx_shade_trapezoid ( pfs , q , 3 , 2 , 0 , 1 , ry , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0"	2647:16:98457:98543	1266449	0	True				
ANR	1269125	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 3 , 2 , 0 , 1 , ry , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1269126	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 3 , 2 , 0 , 1 , ry , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1269127	Identifier	code		1266449	0					
ANR	1269128	CallExpression	"gx_shade_trapezoid ( pfs , q , 3 , 2 , 0 , 1 , ry , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1269129	Callee	gx_shade_trapezoid		1266449	0					
ANR	1269130	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1269131	ArgumentList	pfs		1266449	1					
ANR	1269132	Argument	pfs		1266449	0					
ANR	1269133	Identifier	pfs		1266449	0					
ANR	1269134	Argument	q		1266449	1					
ANR	1269135	Identifier	q		1266449	0					
ANR	1269136	Argument	3		1266449	2					
ANR	1269137	PrimaryExpression	3		1266449	0					
ANR	1269138	Argument	2		1266449	3					
ANR	1269139	PrimaryExpression	2		1266449	0					
ANR	1269140	Argument	0		1266449	4					
ANR	1269141	PrimaryExpression	0		1266449	0					
ANR	1269142	Argument	1		1266449	5					
ANR	1269143	PrimaryExpression	1		1266449	0					
ANR	1269144	Argument	ry		1266449	6					
ANR	1269145	Identifier	ry		1266449	0					
ANR	1269146	Argument	q [ 1 ] . y		1266449	7					
ANR	1269147	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1269148	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1269149	Identifier	q		1266449	0					
ANR	1269150	PrimaryExpression	1		1266449	1					
ANR	1269151	Identifier	y		1266449	1					
ANR	1269152	Argument	swap_axes		1266449	8					
ANR	1269153	Identifier	swap_axes		1266449	0					
ANR	1269154	Argument	& dc		1266449	9					
ANR	1269155	UnaryOperationExpression	& dc		1266449	0					
ANR	1269156	UnaryOperator	&		1266449	0					
ANR	1269157	Identifier	dc		1266449	1					
ANR	1269158	Argument	orient		1266449	10					
ANR	1269159	Identifier	orient		1266449	0					
ANR	1269160	PrimaryExpression	0		1266449	1					
ANR	1269161	ReturnStatement	return code ;	2648:16:98562:98573	1266449	1	True				
ANR	1269162	Identifier	code		1266449	0					
ANR	1269163	ReturnStatement	"return gx_shade_trapezoid ( pfs , q , 3 , 2 , 1 , 2 , q [ 1 ] . y , q [ 2 ] . y , swap_axes , & dc , orient ) ;"	2649:12:98587:98672	1266449	3	True				
ANR	1269164	CallExpression	"gx_shade_trapezoid ( pfs , q , 3 , 2 , 1 , 2 , q [ 1 ] . y , q [ 2 ] . y , swap_axes , & dc , orient )"		1266449	0					
ANR	1269165	Callee	gx_shade_trapezoid		1266449	0					
ANR	1269166	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1269167	ArgumentList	pfs		1266449	1					
ANR	1269168	Argument	pfs		1266449	0					
ANR	1269169	Identifier	pfs		1266449	0					
ANR	1269170	Argument	q		1266449	1					
ANR	1269171	Identifier	q		1266449	0					
ANR	1269172	Argument	3		1266449	2					
ANR	1269173	PrimaryExpression	3		1266449	0					
ANR	1269174	Argument	2		1266449	3					
ANR	1269175	PrimaryExpression	2		1266449	0					
ANR	1269176	Argument	1		1266449	4					
ANR	1269177	PrimaryExpression	1		1266449	0					
ANR	1269178	Argument	2		1266449	5					
ANR	1269179	PrimaryExpression	2		1266449	0					
ANR	1269180	Argument	q [ 1 ] . y		1266449	6					
ANR	1269181	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1269182	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1269183	Identifier	q		1266449	0					
ANR	1269184	PrimaryExpression	1		1266449	1					
ANR	1269185	Identifier	y		1266449	1					
ANR	1269186	Argument	q [ 2 ] . y		1266449	7					
ANR	1269187	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1269188	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1269189	Identifier	q		1266449	0					
ANR	1269190	PrimaryExpression	2		1266449	1					
ANR	1269191	Identifier	y		1266449	1					
ANR	1269192	Argument	swap_axes		1266449	8					
ANR	1269193	Identifier	swap_axes		1266449	0					
ANR	1269194	Argument	& dc		1266449	9					
ANR	1269195	UnaryOperationExpression	& dc		1266449	0					
ANR	1269196	UnaryOperator	&		1266449	0					
ANR	1269197	Identifier	dc		1266449	1					
ANR	1269198	Argument	orient		1266449	10					
ANR	1269199	Identifier	orient		1266449	0					
ANR	1269200	ElseStatement	else		1266449	0					
ANR	1269201	CompoundStatement		164:15:9259:9259	1266449	0					
ANR	1269202	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 3 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	0					
ANR	1269203	Condition	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 3 ] . y , swap_axes , & dc , orient ) ) < 0"	2651:16:98707:98797	1266449	0	True				
ANR	1269204	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 3 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1269205	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 3 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1269206	Identifier	code		1266449	0					
ANR	1269207	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 3 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1269208	Callee	gx_shade_trapezoid		1266449	0					
ANR	1269209	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1269210	ArgumentList	pfs		1266449	1					
ANR	1269211	Argument	pfs		1266449	0					
ANR	1269212	Identifier	pfs		1266449	0					
ANR	1269213	Argument	q		1266449	1					
ANR	1269214	Identifier	q		1266449	0					
ANR	1269215	Argument	0		1266449	2					
ANR	1269216	PrimaryExpression	0		1266449	0					
ANR	1269217	Argument	1		1266449	3					
ANR	1269218	PrimaryExpression	1		1266449	0					
ANR	1269219	Argument	0		1266449	4					
ANR	1269220	PrimaryExpression	0		1266449	0					
ANR	1269221	Argument	3		1266449	5					
ANR	1269222	PrimaryExpression	3		1266449	0					
ANR	1269223	Argument	q [ 0 ] . y		1266449	6					
ANR	1269224	MemberAccess	q [ 0 ] . y		1266449	0					
ANR	1269225	ArrayIndexing	q [ 0 ]		1266449	0					
ANR	1269226	Identifier	q		1266449	0					
ANR	1269227	PrimaryExpression	0		1266449	1					
ANR	1269228	Identifier	y		1266449	1					
ANR	1269229	Argument	q [ 3 ] . y		1266449	7					
ANR	1269230	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1269231	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1269232	Identifier	q		1266449	0					
ANR	1269233	PrimaryExpression	3		1266449	1					
ANR	1269234	Identifier	y		1266449	1					
ANR	1269235	Argument	swap_axes		1266449	8					
ANR	1269236	Identifier	swap_axes		1266449	0					
ANR	1269237	Argument	& dc		1266449	9					
ANR	1269238	UnaryOperationExpression	& dc		1266449	0					
ANR	1269239	UnaryOperator	&		1266449	0					
ANR	1269240	Identifier	dc		1266449	1					
ANR	1269241	Argument	orient		1266449	10					
ANR	1269242	Identifier	orient		1266449	0					
ANR	1269243	PrimaryExpression	0		1266449	1					
ANR	1269244	ReturnStatement	return code ;	2652:16:98816:98827	1266449	1	True				
ANR	1269245	Identifier	code		1266449	0					
ANR	1269246	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 3 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	1					
ANR	1269247	Condition	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 3 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0"	2653:16:98845:98935	1266449	0	True				
ANR	1269248	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 3 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1269249	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 3 ] . y , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1269250	Identifier	code		1266449	0					
ANR	1269251	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 3 ] . y , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1269252	Callee	gx_shade_trapezoid		1266449	0					
ANR	1269253	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1269254	ArgumentList	pfs		1266449	1					
ANR	1269255	Argument	pfs		1266449	0					
ANR	1269256	Identifier	pfs		1266449	0					
ANR	1269257	Argument	q		1266449	1					
ANR	1269258	Identifier	q		1266449	0					
ANR	1269259	Argument	0		1266449	2					
ANR	1269260	PrimaryExpression	0		1266449	0					
ANR	1269261	Argument	1		1266449	3					
ANR	1269262	PrimaryExpression	1		1266449	0					
ANR	1269263	Argument	3		1266449	4					
ANR	1269264	PrimaryExpression	3		1266449	0					
ANR	1269265	Argument	2		1266449	5					
ANR	1269266	PrimaryExpression	2		1266449	0					
ANR	1269267	Argument	q [ 3 ] . y		1266449	6					
ANR	1269268	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1269269	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1269270	Identifier	q		1266449	0					
ANR	1269271	PrimaryExpression	3		1266449	1					
ANR	1269272	Identifier	y		1266449	1					
ANR	1269273	Argument	q [ 1 ] . y		1266449	7					
ANR	1269274	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1269275	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1269276	Identifier	q		1266449	0					
ANR	1269277	PrimaryExpression	1		1266449	1					
ANR	1269278	Identifier	y		1266449	1					
ANR	1269279	Argument	swap_axes		1266449	8					
ANR	1269280	Identifier	swap_axes		1266449	0					
ANR	1269281	Argument	& dc		1266449	9					
ANR	1269282	UnaryOperationExpression	& dc		1266449	0					
ANR	1269283	UnaryOperator	&		1266449	0					
ANR	1269284	Identifier	dc		1266449	1					
ANR	1269285	Argument	orient		1266449	10					
ANR	1269286	Identifier	orient		1266449	0					
ANR	1269287	PrimaryExpression	0		1266449	1					
ANR	1269288	ReturnStatement	return code ;	2654:16:98954:98965	1266449	1	True				
ANR	1269289	Identifier	code		1266449	0					
ANR	1269290	ReturnStatement	"return gx_shade_trapezoid ( pfs , q , 1 , 2 , 3 , 2 , q [ 1 ] . y , q [ 2 ] . y , swap_axes , & dc , orient ) ;"	2655:12:98979:99064	1266449	2	True				
ANR	1269291	CallExpression	"gx_shade_trapezoid ( pfs , q , 1 , 2 , 3 , 2 , q [ 1 ] . y , q [ 2 ] . y , swap_axes , & dc , orient )"		1266449	0					
ANR	1269292	Callee	gx_shade_trapezoid		1266449	0					
ANR	1269293	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1269294	ArgumentList	pfs		1266449	1					
ANR	1269295	Argument	pfs		1266449	0					
ANR	1269296	Identifier	pfs		1266449	0					
ANR	1269297	Argument	q		1266449	1					
ANR	1269298	Identifier	q		1266449	0					
ANR	1269299	Argument	1		1266449	2					
ANR	1269300	PrimaryExpression	1		1266449	0					
ANR	1269301	Argument	2		1266449	3					
ANR	1269302	PrimaryExpression	2		1266449	0					
ANR	1269303	Argument	3		1266449	4					
ANR	1269304	PrimaryExpression	3		1266449	0					
ANR	1269305	Argument	2		1266449	5					
ANR	1269306	PrimaryExpression	2		1266449	0					
ANR	1269307	Argument	q [ 1 ] . y		1266449	6					
ANR	1269308	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1269309	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1269310	Identifier	q		1266449	0					
ANR	1269311	PrimaryExpression	1		1266449	1					
ANR	1269312	Identifier	y		1266449	1					
ANR	1269313	Argument	q [ 2 ] . y		1266449	7					
ANR	1269314	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1269315	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1269316	Identifier	q		1266449	0					
ANR	1269317	PrimaryExpression	2		1266449	1					
ANR	1269318	Identifier	y		1266449	1					
ANR	1269319	Argument	swap_axes		1266449	8					
ANR	1269320	Identifier	swap_axes		1266449	0					
ANR	1269321	Argument	& dc		1266449	9					
ANR	1269322	UnaryOperationExpression	& dc		1266449	0					
ANR	1269323	UnaryOperator	&		1266449	0					
ANR	1269324	Identifier	dc		1266449	1					
ANR	1269325	Argument	orient		1266449	10					
ANR	1269326	Identifier	orient		1266449	0					
ANR	1269327	ElseStatement	else		1266449	0					
ANR	1269328	IfStatement	if ( q [ 3 ] . y <= q [ 2 ] . y && q [ 2 ] . y <= q [ 1 ] . y )		1266449	0					
ANR	1269329	Condition	q [ 3 ] . y <= q [ 2 ] . y && q [ 2 ] . y <= q [ 1 ] . y	2657:15:99091:99126	1266449	0	True				
ANR	1269330	AndExpression	q [ 3 ] . y <= q [ 2 ] . y && q [ 2 ] . y <= q [ 1 ] . y		1266449	0		&&			
ANR	1269331	RelationalExpression	q [ 3 ] . y <= q [ 2 ] . y		1266449	0		<=			
ANR	1269332	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1269333	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1269334	Identifier	q		1266449	0					
ANR	1269335	PrimaryExpression	3		1266449	1					
ANR	1269336	Identifier	y		1266449	1					
ANR	1269337	MemberAccess	q [ 2 ] . y		1266449	1					
ANR	1269338	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1269339	Identifier	q		1266449	0					
ANR	1269340	PrimaryExpression	2		1266449	1					
ANR	1269341	Identifier	y		1266449	1					
ANR	1269342	RelationalExpression	q [ 2 ] . y <= q [ 1 ] . y		1266449	1		<=			
ANR	1269343	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1269344	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1269345	Identifier	q		1266449	0					
ANR	1269346	PrimaryExpression	2		1266449	1					
ANR	1269347	Identifier	y		1266449	1					
ANR	1269348	MemberAccess	q [ 1 ] . y		1266449	1					
ANR	1269349	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1269350	Identifier	q		1266449	0					
ANR	1269351	PrimaryExpression	1		1266449	1					
ANR	1269352	Identifier	y		1266449	1					
ANR	1269353	CompoundStatement		171:53:9699:9699	1266449	1					
ANR	1269354	IfStatement	"if ( self_intersecting && intersection_of_small_bars ( q , 0 , 1 , 2 , 3 , & ry , & ey ) )"		1266449	0					
ANR	1269355	Condition	"self_intersecting && intersection_of_small_bars ( q , 0 , 1 , 2 , 3 , & ry , & ey )"	2658:12:99143:99214	1266449	0	True				
ANR	1269356	AndExpression	"self_intersecting && intersection_of_small_bars ( q , 0 , 1 , 2 , 3 , & ry , & ey )"		1266449	0		&&			
ANR	1269357	Identifier	self_intersecting		1266449	0					
ANR	1269358	CallExpression	"intersection_of_small_bars ( q , 0 , 1 , 2 , 3 , & ry , & ey )"		1266449	1					
ANR	1269359	Callee	intersection_of_small_bars		1266449	0					
ANR	1269360	Identifier	intersection_of_small_bars		1266449	0					
ANR	1269361	ArgumentList	q		1266449	1					
ANR	1269362	Argument	q		1266449	0					
ANR	1269363	Identifier	q		1266449	0					
ANR	1269364	Argument	0		1266449	1					
ANR	1269365	PrimaryExpression	0		1266449	0					
ANR	1269366	Argument	1		1266449	2					
ANR	1269367	PrimaryExpression	1		1266449	0					
ANR	1269368	Argument	2		1266449	3					
ANR	1269369	PrimaryExpression	2		1266449	0					
ANR	1269370	Argument	3		1266449	4					
ANR	1269371	PrimaryExpression	3		1266449	0					
ANR	1269372	Argument	& ry		1266449	5					
ANR	1269373	UnaryOperationExpression	& ry		1266449	0					
ANR	1269374	UnaryOperator	&		1266449	0					
ANR	1269375	Identifier	ry		1266449	1					
ANR	1269376	Argument	& ey		1266449	6					
ANR	1269377	UnaryOperationExpression	& ey		1266449	0					
ANR	1269378	UnaryOperator	&		1266449	0					
ANR	1269379	Identifier	ey		1266449	1					
ANR	1269380	CompoundStatement		172:86:9787:9787	1266449	1					
ANR	1269381	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 3 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	0					
ANR	1269382	Condition	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 3 ] . y , swap_axes , & dc , orient ) ) < 0"	2659:16:99235:99325	1266449	0	True				
ANR	1269383	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 3 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1269384	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 3 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1269385	Identifier	code		1266449	0					
ANR	1269386	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 3 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1269387	Callee	gx_shade_trapezoid		1266449	0					
ANR	1269388	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1269389	ArgumentList	pfs		1266449	1					
ANR	1269390	Argument	pfs		1266449	0					
ANR	1269391	Identifier	pfs		1266449	0					
ANR	1269392	Argument	q		1266449	1					
ANR	1269393	Identifier	q		1266449	0					
ANR	1269394	Argument	0		1266449	2					
ANR	1269395	PrimaryExpression	0		1266449	0					
ANR	1269396	Argument	1		1266449	3					
ANR	1269397	PrimaryExpression	1		1266449	0					
ANR	1269398	Argument	0		1266449	4					
ANR	1269399	PrimaryExpression	0		1266449	0					
ANR	1269400	Argument	3		1266449	5					
ANR	1269401	PrimaryExpression	3		1266449	0					
ANR	1269402	Argument	q [ 0 ] . y		1266449	6					
ANR	1269403	MemberAccess	q [ 0 ] . y		1266449	0					
ANR	1269404	ArrayIndexing	q [ 0 ]		1266449	0					
ANR	1269405	Identifier	q		1266449	0					
ANR	1269406	PrimaryExpression	0		1266449	1					
ANR	1269407	Identifier	y		1266449	1					
ANR	1269408	Argument	q [ 3 ] . y		1266449	7					
ANR	1269409	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1269410	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1269411	Identifier	q		1266449	0					
ANR	1269412	PrimaryExpression	3		1266449	1					
ANR	1269413	Identifier	y		1266449	1					
ANR	1269414	Argument	swap_axes		1266449	8					
ANR	1269415	Identifier	swap_axes		1266449	0					
ANR	1269416	Argument	& dc		1266449	9					
ANR	1269417	UnaryOperationExpression	& dc		1266449	0					
ANR	1269418	UnaryOperator	&		1266449	0					
ANR	1269419	Identifier	dc		1266449	1					
ANR	1269420	Argument	orient		1266449	10					
ANR	1269421	Identifier	orient		1266449	0					
ANR	1269422	PrimaryExpression	0		1266449	1					
ANR	1269423	ReturnStatement	return code ;	2660:16:99344:99355	1266449	1	True				
ANR	1269424	Identifier	code		1266449	0					
ANR	1269425	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 3 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0 )"		1266449	1					
ANR	1269426	Condition	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 3 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0"	2661:16:99373:99464	1266449	0	True				
ANR	1269427	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 3 ] . y , ry + ey , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1269428	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 3 ] . y , ry + ey , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1269429	Identifier	code		1266449	0					
ANR	1269430	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 3 ] . y , ry + ey , swap_axes , & dc , orient )"		1266449	1					
ANR	1269431	Callee	gx_shade_trapezoid		1266449	0					
ANR	1269432	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1269433	ArgumentList	pfs		1266449	1					
ANR	1269434	Argument	pfs		1266449	0					
ANR	1269435	Identifier	pfs		1266449	0					
ANR	1269436	Argument	q		1266449	1					
ANR	1269437	Identifier	q		1266449	0					
ANR	1269438	Argument	0		1266449	2					
ANR	1269439	PrimaryExpression	0		1266449	0					
ANR	1269440	Argument	1		1266449	3					
ANR	1269441	PrimaryExpression	1		1266449	0					
ANR	1269442	Argument	3		1266449	4					
ANR	1269443	PrimaryExpression	3		1266449	0					
ANR	1269444	Argument	2		1266449	5					
ANR	1269445	PrimaryExpression	2		1266449	0					
ANR	1269446	Argument	q [ 3 ] . y		1266449	6					
ANR	1269447	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1269448	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1269449	Identifier	q		1266449	0					
ANR	1269450	PrimaryExpression	3		1266449	1					
ANR	1269451	Identifier	y		1266449	1					
ANR	1269452	Argument	ry + ey		1266449	7					
ANR	1269453	AdditiveExpression	ry + ey		1266449	0		+			
ANR	1269454	Identifier	ry		1266449	0					
ANR	1269455	Identifier	ey		1266449	1					
ANR	1269456	Argument	swap_axes		1266449	8					
ANR	1269457	Identifier	swap_axes		1266449	0					
ANR	1269458	Argument	& dc		1266449	9					
ANR	1269459	UnaryOperationExpression	& dc		1266449	0					
ANR	1269460	UnaryOperator	&		1266449	0					
ANR	1269461	Identifier	dc		1266449	1					
ANR	1269462	Argument	orient		1266449	10					
ANR	1269463	Identifier	orient		1266449	0					
ANR	1269464	PrimaryExpression	0		1266449	1					
ANR	1269465	ReturnStatement	return code ;	2662:16:99483:99494	1266449	1	True				
ANR	1269466	Identifier	code		1266449	0					
ANR	1269467	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 3 , 2 , 0 , 1 , ry , q [ 2 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	2					
ANR	1269468	Condition	"( code = gx_shade_trapezoid ( pfs , q , 3 , 2 , 0 , 1 , ry , q [ 2 ] . y , swap_axes , & dc , orient ) ) < 0"	2663:16:99512:99598	1266449	0	True				
ANR	1269469	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 3 , 2 , 0 , 1 , ry , q [ 2 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1269470	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 3 , 2 , 0 , 1 , ry , q [ 2 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1269471	Identifier	code		1266449	0					
ANR	1269472	CallExpression	"gx_shade_trapezoid ( pfs , q , 3 , 2 , 0 , 1 , ry , q [ 2 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1269473	Callee	gx_shade_trapezoid		1266449	0					
ANR	1269474	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1269475	ArgumentList	pfs		1266449	1					
ANR	1269476	Argument	pfs		1266449	0					
ANR	1269477	Identifier	pfs		1266449	0					
ANR	1269478	Argument	q		1266449	1					
ANR	1269479	Identifier	q		1266449	0					
ANR	1269480	Argument	3		1266449	2					
ANR	1269481	PrimaryExpression	3		1266449	0					
ANR	1269482	Argument	2		1266449	3					
ANR	1269483	PrimaryExpression	2		1266449	0					
ANR	1269484	Argument	0		1266449	4					
ANR	1269485	PrimaryExpression	0		1266449	0					
ANR	1269486	Argument	1		1266449	5					
ANR	1269487	PrimaryExpression	1		1266449	0					
ANR	1269488	Argument	ry		1266449	6					
ANR	1269489	Identifier	ry		1266449	0					
ANR	1269490	Argument	q [ 2 ] . y		1266449	7					
ANR	1269491	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1269492	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1269493	Identifier	q		1266449	0					
ANR	1269494	PrimaryExpression	2		1266449	1					
ANR	1269495	Identifier	y		1266449	1					
ANR	1269496	Argument	swap_axes		1266449	8					
ANR	1269497	Identifier	swap_axes		1266449	0					
ANR	1269498	Argument	& dc		1266449	9					
ANR	1269499	UnaryOperationExpression	& dc		1266449	0					
ANR	1269500	UnaryOperator	&		1266449	0					
ANR	1269501	Identifier	dc		1266449	1					
ANR	1269502	Argument	orient		1266449	10					
ANR	1269503	Identifier	orient		1266449	0					
ANR	1269504	PrimaryExpression	0		1266449	1					
ANR	1269505	ReturnStatement	return code ;	2664:16:99617:99628	1266449	1	True				
ANR	1269506	Identifier	code		1266449	0					
ANR	1269507	ReturnStatement	"return gx_shade_trapezoid ( pfs , q , 2 , 1 , 0 , 1 , q [ 2 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ;"	2665:12:99642:99727	1266449	3	True				
ANR	1269508	CallExpression	"gx_shade_trapezoid ( pfs , q , 2 , 1 , 0 , 1 , q [ 2 ] . y , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	0					
ANR	1269509	Callee	gx_shade_trapezoid		1266449	0					
ANR	1269510	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1269511	ArgumentList	pfs		1266449	1					
ANR	1269512	Argument	pfs		1266449	0					
ANR	1269513	Identifier	pfs		1266449	0					
ANR	1269514	Argument	q		1266449	1					
ANR	1269515	Identifier	q		1266449	0					
ANR	1269516	Argument	2		1266449	2					
ANR	1269517	PrimaryExpression	2		1266449	0					
ANR	1269518	Argument	1		1266449	3					
ANR	1269519	PrimaryExpression	1		1266449	0					
ANR	1269520	Argument	0		1266449	4					
ANR	1269521	PrimaryExpression	0		1266449	0					
ANR	1269522	Argument	1		1266449	5					
ANR	1269523	PrimaryExpression	1		1266449	0					
ANR	1269524	Argument	q [ 2 ] . y		1266449	6					
ANR	1269525	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1269526	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1269527	Identifier	q		1266449	0					
ANR	1269528	PrimaryExpression	2		1266449	1					
ANR	1269529	Identifier	y		1266449	1					
ANR	1269530	Argument	q [ 1 ] . y		1266449	7					
ANR	1269531	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1269532	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1269533	Identifier	q		1266449	0					
ANR	1269534	PrimaryExpression	1		1266449	1					
ANR	1269535	Identifier	y		1266449	1					
ANR	1269536	Argument	swap_axes		1266449	8					
ANR	1269537	Identifier	swap_axes		1266449	0					
ANR	1269538	Argument	& dc		1266449	9					
ANR	1269539	UnaryOperationExpression	& dc		1266449	0					
ANR	1269540	UnaryOperator	&		1266449	0					
ANR	1269541	Identifier	dc		1266449	1					
ANR	1269542	Argument	orient		1266449	10					
ANR	1269543	Identifier	orient		1266449	0					
ANR	1269544	ElseStatement	else		1266449	0					
ANR	1269545	CompoundStatement		180:15:10314:10314	1266449	0					
ANR	1269546	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 3 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	0					
ANR	1269547	Condition	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 3 ] . y , swap_axes , & dc , orient ) ) < 0"	2667:16:99762:99852	1266449	0	True				
ANR	1269548	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 3 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1269549	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 3 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1269550	Identifier	code		1266449	0					
ANR	1269551	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 1 , 0 , 3 , q [ 0 ] . y , q [ 3 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1269552	Callee	gx_shade_trapezoid		1266449	0					
ANR	1269553	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1269554	ArgumentList	pfs		1266449	1					
ANR	1269555	Argument	pfs		1266449	0					
ANR	1269556	Identifier	pfs		1266449	0					
ANR	1269557	Argument	q		1266449	1					
ANR	1269558	Identifier	q		1266449	0					
ANR	1269559	Argument	0		1266449	2					
ANR	1269560	PrimaryExpression	0		1266449	0					
ANR	1269561	Argument	1		1266449	3					
ANR	1269562	PrimaryExpression	1		1266449	0					
ANR	1269563	Argument	0		1266449	4					
ANR	1269564	PrimaryExpression	0		1266449	0					
ANR	1269565	Argument	3		1266449	5					
ANR	1269566	PrimaryExpression	3		1266449	0					
ANR	1269567	Argument	q [ 0 ] . y		1266449	6					
ANR	1269568	MemberAccess	q [ 0 ] . y		1266449	0					
ANR	1269569	ArrayIndexing	q [ 0 ]		1266449	0					
ANR	1269570	Identifier	q		1266449	0					
ANR	1269571	PrimaryExpression	0		1266449	1					
ANR	1269572	Identifier	y		1266449	1					
ANR	1269573	Argument	q [ 3 ] . y		1266449	7					
ANR	1269574	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1269575	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1269576	Identifier	q		1266449	0					
ANR	1269577	PrimaryExpression	3		1266449	1					
ANR	1269578	Identifier	y		1266449	1					
ANR	1269579	Argument	swap_axes		1266449	8					
ANR	1269580	Identifier	swap_axes		1266449	0					
ANR	1269581	Argument	& dc		1266449	9					
ANR	1269582	UnaryOperationExpression	& dc		1266449	0					
ANR	1269583	UnaryOperator	&		1266449	0					
ANR	1269584	Identifier	dc		1266449	1					
ANR	1269585	Argument	orient		1266449	10					
ANR	1269586	Identifier	orient		1266449	0					
ANR	1269587	PrimaryExpression	0		1266449	1					
ANR	1269588	ReturnStatement	return code ;	2668:16:99871:99882	1266449	1	True				
ANR	1269589	Identifier	code		1266449	0					
ANR	1269590	IfStatement	"if ( ( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 3 ] . y , q [ 2 ] . y , swap_axes , & dc , orient ) ) < 0 )"		1266449	1					
ANR	1269591	Condition	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 3 ] . y , q [ 2 ] . y , swap_axes , & dc , orient ) ) < 0"	2669:16:99900:99990	1266449	0	True				
ANR	1269592	RelationalExpression	"( code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 3 ] . y , q [ 2 ] . y , swap_axes , & dc , orient ) ) < 0"		1266449	0		<			
ANR	1269593	AssignmentExpression	"code = gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 3 ] . y , q [ 2 ] . y , swap_axes , & dc , orient )"		1266449	0		=			
ANR	1269594	Identifier	code		1266449	0					
ANR	1269595	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 1 , 3 , 2 , q [ 3 ] . y , q [ 2 ] . y , swap_axes , & dc , orient )"		1266449	1					
ANR	1269596	Callee	gx_shade_trapezoid		1266449	0					
ANR	1269597	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1269598	ArgumentList	pfs		1266449	1					
ANR	1269599	Argument	pfs		1266449	0					
ANR	1269600	Identifier	pfs		1266449	0					
ANR	1269601	Argument	q		1266449	1					
ANR	1269602	Identifier	q		1266449	0					
ANR	1269603	Argument	0		1266449	2					
ANR	1269604	PrimaryExpression	0		1266449	0					
ANR	1269605	Argument	1		1266449	3					
ANR	1269606	PrimaryExpression	1		1266449	0					
ANR	1269607	Argument	3		1266449	4					
ANR	1269608	PrimaryExpression	3		1266449	0					
ANR	1269609	Argument	2		1266449	5					
ANR	1269610	PrimaryExpression	2		1266449	0					
ANR	1269611	Argument	q [ 3 ] . y		1266449	6					
ANR	1269612	MemberAccess	q [ 3 ] . y		1266449	0					
ANR	1269613	ArrayIndexing	q [ 3 ]		1266449	0					
ANR	1269614	Identifier	q		1266449	0					
ANR	1269615	PrimaryExpression	3		1266449	1					
ANR	1269616	Identifier	y		1266449	1					
ANR	1269617	Argument	q [ 2 ] . y		1266449	7					
ANR	1269618	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1269619	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1269620	Identifier	q		1266449	0					
ANR	1269621	PrimaryExpression	2		1266449	1					
ANR	1269622	Identifier	y		1266449	1					
ANR	1269623	Argument	swap_axes		1266449	8					
ANR	1269624	Identifier	swap_axes		1266449	0					
ANR	1269625	Argument	& dc		1266449	9					
ANR	1269626	UnaryOperationExpression	& dc		1266449	0					
ANR	1269627	UnaryOperator	&		1266449	0					
ANR	1269628	Identifier	dc		1266449	1					
ANR	1269629	Argument	orient		1266449	10					
ANR	1269630	Identifier	orient		1266449	0					
ANR	1269631	PrimaryExpression	0		1266449	1					
ANR	1269632	ReturnStatement	return code ;	2670:16:100009:100020	1266449	1	True				
ANR	1269633	Identifier	code		1266449	0					
ANR	1269634	ReturnStatement	"return gx_shade_trapezoid ( pfs , q , 0 , 1 , 2 , 1 , q [ 2 ] . y , q [ 1 ] . y , swap_axes , & dc , orient ) ;"	2671:12:100034:100119	1266449	2	True				
ANR	1269635	CallExpression	"gx_shade_trapezoid ( pfs , q , 0 , 1 , 2 , 1 , q [ 2 ] . y , q [ 1 ] . y , swap_axes , & dc , orient )"		1266449	0					
ANR	1269636	Callee	gx_shade_trapezoid		1266449	0					
ANR	1269637	Identifier	gx_shade_trapezoid		1266449	0					
ANR	1269638	ArgumentList	pfs		1266449	1					
ANR	1269639	Argument	pfs		1266449	0					
ANR	1269640	Identifier	pfs		1266449	0					
ANR	1269641	Argument	q		1266449	1					
ANR	1269642	Identifier	q		1266449	0					
ANR	1269643	Argument	0		1266449	2					
ANR	1269644	PrimaryExpression	0		1266449	0					
ANR	1269645	Argument	1		1266449	3					
ANR	1269646	PrimaryExpression	1		1266449	0					
ANR	1269647	Argument	2		1266449	4					
ANR	1269648	PrimaryExpression	2		1266449	0					
ANR	1269649	Argument	1		1266449	5					
ANR	1269650	PrimaryExpression	1		1266449	0					
ANR	1269651	Argument	q [ 2 ] . y		1266449	6					
ANR	1269652	MemberAccess	q [ 2 ] . y		1266449	0					
ANR	1269653	ArrayIndexing	q [ 2 ]		1266449	0					
ANR	1269654	Identifier	q		1266449	0					
ANR	1269655	PrimaryExpression	2		1266449	1					
ANR	1269656	Identifier	y		1266449	1					
ANR	1269657	Argument	q [ 1 ] . y		1266449	7					
ANR	1269658	MemberAccess	q [ 1 ] . y		1266449	0					
ANR	1269659	ArrayIndexing	q [ 1 ]		1266449	0					
ANR	1269660	Identifier	q		1266449	0					
ANR	1269661	PrimaryExpression	1		1266449	1					
ANR	1269662	Identifier	y		1266449	1					
ANR	1269663	Argument	swap_axes		1266449	8					
ANR	1269664	Identifier	swap_axes		1266449	0					
ANR	1269665	Argument	& dc		1266449	9					
ANR	1269666	UnaryOperationExpression	& dc		1266449	0					
ANR	1269667	UnaryOperator	&		1266449	0					
ANR	1269668	Identifier	dc		1266449	1					
ANR	1269669	Argument	orient		1266449	10					
ANR	1269670	Identifier	orient		1266449	0					
ANR	1269671	ElseStatement	else		1266449	0					
ANR	1269672	CompoundStatement		187:11:10712:10712	1266449	0					
ANR	1269673	ExpressionStatement	return_error ( gs_error_unregistered )	2675:8:100178:100213	1266449	0	True				
ANR	1269674	CallExpression	return_error ( gs_error_unregistered )		1266449	0					
ANR	1269675	Callee	return_error		1266449	0					
ANR	1269676	Identifier	return_error		1266449	0					
ANR	1269677	ArgumentList	gs_error_unregistered		1266449	1					
ANR	1269678	Argument	gs_error_unregistered		1266449	0					
ANR	1269679	Identifier	gs_error_unregistered		1266449	0					
ANR	1269680	ReturnType	static inline int		1266449	1					
ANR	1269681	Identifier	constant_color_quadrangle_aux		1266449	2					
ANR	1269682	ParameterList	"patch_fill_state_t * pfs , const quadrangle_patch * p , bool self_intersecting , patch_color_t * c [ 3 ]"		1266449	3					
ANR	1269683	Parameter	patch_fill_state_t * pfs	2485:30:89324:89346	1266449	0	True				
ANR	1269684	ParameterType	patch_fill_state_t *		1266449	0					
ANR	1269685	Identifier	pfs		1266449	1					
ANR	1269686	Parameter	const quadrangle_patch * p	2485:55:89349:89373	1266449	1	True				
ANR	1269687	ParameterType	const quadrangle_patch *		1266449	0					
ANR	1269688	Identifier	p		1266449	1					
ANR	1269689	Parameter	bool self_intersecting	2485:82:89376:89397	1266449	2	True				
ANR	1269690	ParameterType	bool		1266449	0					
ANR	1269691	Identifier	self_intersecting		1266449	1					
ANR	1269692	Parameter	patch_color_t * c [ 3 ]	2486:8:89408:89426	1266449	3	True				
ANR	1269693	ParameterType	patch_color_t * [ 3 ]		1266449	0					
ANR	1269694	Identifier	c		1266449	1					
ANR	1269695	CFGEntryNode	ENTRY		1266449		True				
ANR	1269696	CFGExitNode	EXIT		1266449		True				
ANR	1269697	Symbol	p -> p		1266449						
ANR	1269698	Symbol	* * * * p		1266449						
ANR	1269699	Symbol	gx_shade_trapezoid		1266449						
ANR	1269700	Symbol	* p -> p		1266449						
ANR	1269701	Symbol	h12		1266449						
ANR	1269702	Symbol	h13		1266449						
ANR	1269703	Symbol	patch_color_to_device_color_inline		1266449						
ANR	1269704	Symbol	& ry		1266449						
ANR	1269705	Symbol	q [ 0 ] . x		1266449						
ANR	1269706	Symbol	dx		1266449						
ANR	1269707	Symbol	q [ 1 ] . x		1266449						
ANR	1269708	Symbol	dy		1266449						
ANR	1269709	Symbol	q [ 1 ] . y		1266449						
ANR	1269710	Symbol	* * * p -> p		1266449						
ANR	1269711	Symbol	* * p -> p		1266449						
ANR	1269712	Symbol	p -> p [ 0 ] [ 0 ] -> c		1266449						
ANR	1269713	Symbol	dx1		1266449						
ANR	1269714	Symbol	p -> p [ 0 ] [ 1 ] -> c		1266449						
ANR	1269715	Symbol	dx3		1266449						
ANR	1269716	Symbol	dx2		1266449						
ANR	1269717	Symbol	qq		1266449						
ANR	1269718	Symbol	q [ 3 ] . x		1266449						
ANR	1269719	Symbol	NULL		1266449						
ANR	1269720	Symbol	q [ 3 ] . y		1266449						
ANR	1269721	Symbol	orient		1266449						
ANR	1269722	Symbol	& dc		1266449						
ANR	1269723	Symbol	h23		1266449						
ANR	1269724	Symbol	q [ 0 ] . y		1266449						
ANR	1269725	Symbol	intersection_of_small_bars		1266449						
ANR	1269726	Symbol	* * * p		1266449						
ANR	1269727	Symbol	ey		1266449						
ANR	1269728	Symbol	true		1266449						
ANR	1269729	Symbol	pfs		1266449						
ANR	1269730	Symbol	dy2		1266449						
ANR	1269731	Symbol	dy1		1266449						
ANR	1269732	Symbol	dy3		1266449						
ANR	1269733	Symbol	gs_error_unregistered		1266449						
ANR	1269734	Symbol	code		1266449						
ANR	1269735	Symbol	ry		1266449						
ANR	1269736	Symbol	g13		1266449						
ANR	1269737	Symbol	g12		1266449						
ANR	1269738	Symbol	span_y		1266449						
ANR	1269739	Symbol	span_x		1266449						
ANR	1269740	Symbol	* * p		1266449						
ANR	1269741	Symbol	p -> p [ 1 ] [ 0 ] -> c		1266449						
ANR	1269742	Symbol	p -> p [ 1 ] [ 1 ] -> c		1266449						
ANR	1269743	Symbol	c		1266449						
ANR	1269744	Symbol	false		1266449						
ANR	1269745	Symbol	g23		1266449						
ANR	1269746	Symbol	* c		1266449						
ANR	1269747	Symbol	p		1266449						
ANR	1269748	Symbol	q		1266449						
ANR	1269749	Symbol	q [ 2 ] . y		1266449						
ANR	1269750	Symbol	* p		1266449						
ANR	1269751	Symbol	* q		1266449						
ANR	1269752	Symbol	q [ 2 ] . x		1266449						
ANR	1269753	Symbol	swap_axes		1266449						
ANR	1269754	Symbol	self_intersecting		1266449						
ANR	1269755	Symbol	dc		1266449						
ANR	1269756	Symbol	& ey		1266449						
ANR	1269757	Function	constant_color_quadrangle	2679:0:100224:100676							
ANR	1269758	FunctionDef	"constant_color_quadrangle (patch_fill_state_t * pfs , const quadrangle_patch * p , bool self_intersecting)"		1269757	0					
ANR	1269759	CompoundStatement		2681:0:100330:100676	1269757	0					
ANR	1269760	IdentifierDeclStatement	patch_color_t * c [ 3 ] ;	2682:4:100336:100355	1269757	0	True				
ANR	1269761	IdentifierDecl	* c [ 3 ]		1269757	0					
ANR	1269762	IdentifierDeclType	patch_color_t * [ 3 ]		1269757	0					
ANR	1269763	Identifier	c		1269757	1					
ANR	1269764	PrimaryExpression	3		1269757	2					
ANR	1269765	IdentifierDeclStatement	"byte * color_stack_ptr = reserve_colors_inline ( pfs , c , 3 ) ;"	2683:4:100361:100417	1269757	1	True				
ANR	1269766	IdentifierDecl	"* color_stack_ptr = reserve_colors_inline ( pfs , c , 3 )"		1269757	0					
ANR	1269767	IdentifierDeclType	byte *		1269757	0					
ANR	1269768	Identifier	color_stack_ptr		1269757	1					
ANR	1269769	AssignmentExpression	"* color_stack_ptr = reserve_colors_inline ( pfs , c , 3 )"		1269757	2		=			
ANR	1269770	Identifier	color_stack_ptr		1269757	0					
ANR	1269771	CallExpression	"reserve_colors_inline ( pfs , c , 3 )"		1269757	1					
ANR	1269772	Callee	reserve_colors_inline		1269757	0					
ANR	1269773	Identifier	reserve_colors_inline		1269757	0					
ANR	1269774	ArgumentList	pfs		1269757	1					
ANR	1269775	Argument	pfs		1269757	0					
ANR	1269776	Identifier	pfs		1269757	0					
ANR	1269777	Argument	c		1269757	1					
ANR	1269778	Identifier	c		1269757	0					
ANR	1269779	Argument	3		1269757	2					
ANR	1269780	PrimaryExpression	3		1269757	0					
ANR	1269781	IdentifierDeclStatement	int code ;	2684:4:100423:100431	1269757	2	True				
ANR	1269782	IdentifierDecl	code		1269757	0					
ANR	1269783	IdentifierDeclType	int		1269757	0					
ANR	1269784	Identifier	code		1269757	1					
ANR	1269785	IfStatement	if ( color_stack_ptr == NULL )		1269757	3					
ANR	1269786	Condition	color_stack_ptr == NULL	2686:8:100442:100464	1269757	0	True				
ANR	1269787	EqualityExpression	color_stack_ptr == NULL		1269757	0		==			
ANR	1269788	Identifier	color_stack_ptr		1269757	0					
ANR	1269789	Identifier	NULL		1269757	1					
ANR	1269790	ExpressionStatement	return_error ( gs_error_unregistered )	2687:8:100475:100510	1269757	1	True				
ANR	1269791	CallExpression	return_error ( gs_error_unregistered )		1269757	0					
ANR	1269792	Callee	return_error		1269757	0					
ANR	1269793	Identifier	return_error		1269757	0					
ANR	1269794	ArgumentList	gs_error_unregistered		1269757	1					
ANR	1269795	Argument	gs_error_unregistered		1269757	0					
ANR	1269796	Identifier	gs_error_unregistered		1269757	0					
ANR	1269797	ExpressionStatement	"code = constant_color_quadrangle_aux ( pfs , p , self_intersecting , c )"	2688:4:100539:100605	1269757	4	True				
ANR	1269798	AssignmentExpression	"code = constant_color_quadrangle_aux ( pfs , p , self_intersecting , c )"		1269757	0		=			
ANR	1269799	Identifier	code		1269757	0					
ANR	1269800	CallExpression	"constant_color_quadrangle_aux ( pfs , p , self_intersecting , c )"		1269757	1					
ANR	1269801	Callee	constant_color_quadrangle_aux		1269757	0					
ANR	1269802	Identifier	constant_color_quadrangle_aux		1269757	0					
ANR	1269803	ArgumentList	pfs		1269757	1					
ANR	1269804	Argument	pfs		1269757	0					
ANR	1269805	Identifier	pfs		1269757	0					
ANR	1269806	Argument	p		1269757	1					
ANR	1269807	Identifier	p		1269757	0					
ANR	1269808	Argument	self_intersecting		1269757	2					
ANR	1269809	Identifier	self_intersecting		1269757	0					
ANR	1269810	Argument	c		1269757	3					
ANR	1269811	Identifier	c		1269757	0					
ANR	1269812	ExpressionStatement	"release_colors_inline ( pfs , color_stack_ptr , 3 )"	2689:4:100611:100657	1269757	5	True				
ANR	1269813	CallExpression	"release_colors_inline ( pfs , color_stack_ptr , 3 )"		1269757	0					
ANR	1269814	Callee	release_colors_inline		1269757	0					
ANR	1269815	Identifier	release_colors_inline		1269757	0					
ANR	1269816	ArgumentList	pfs		1269757	1					
ANR	1269817	Argument	pfs		1269757	0					
ANR	1269818	Identifier	pfs		1269757	0					
ANR	1269819	Argument	color_stack_ptr		1269757	1					
ANR	1269820	Identifier	color_stack_ptr		1269757	0					
ANR	1269821	Argument	3		1269757	2					
ANR	1269822	PrimaryExpression	3		1269757	0					
ANR	1269823	ReturnStatement	return code ;	2690:4:100663:100674	1269757	6	True				
ANR	1269824	Identifier	code		1269757	0					
ANR	1269825	ReturnType	int		1269757	1					
ANR	1269826	Identifier	constant_color_quadrangle		1269757	2					
ANR	1269827	ParameterList	"patch_fill_state_t * pfs , const quadrangle_patch * p , bool self_intersecting"		1269757	3					
ANR	1269828	Parameter	patch_fill_state_t * pfs	2680:26:100254:100276	1269757	0	True				
ANR	1269829	ParameterType	patch_fill_state_t *		1269757	0					
ANR	1269830	Identifier	pfs		1269757	1					
ANR	1269831	Parameter	const quadrangle_patch * p	2680:51:100279:100303	1269757	1	True				
ANR	1269832	ParameterType	const quadrangle_patch *		1269757	0					
ANR	1269833	Identifier	p		1269757	1					
ANR	1269834	Parameter	bool self_intersecting	2680:78:100306:100327	1269757	2	True				
ANR	1269835	ParameterType	bool		1269757	0					
ANR	1269836	Identifier	self_intersecting		1269757	1					
ANR	1269837	CFGEntryNode	ENTRY		1269757		True				
ANR	1269838	CFGExitNode	EXIT		1269757		True				
ANR	1269839	Symbol	p		1269757						
ANR	1269840	Symbol	gs_error_unregistered		1269757						
ANR	1269841	Symbol	c		1269757						
ANR	1269842	Symbol	code		1269757						
ANR	1269843	Symbol	NULL		1269757						
ANR	1269844	Symbol	constant_color_quadrangle_aux		1269757						
ANR	1269845	Symbol	color_stack_ptr		1269757						
ANR	1269846	Symbol	reserve_colors_inline		1269757						
ANR	1269847	Symbol	pfs		1269757						
ANR	1269848	Symbol	self_intersecting		1269757						
ANR	1269849	Function	divide_quadrangle_by_v	2693:0:100679:101485							
ANR	1269850	FunctionDef	"divide_quadrangle_by_v (patch_fill_state_t * pfs , quadrangle_patch * s0 , quadrangle_patch * s1 , shading_vertex_t q [ 2 ] , const quadrangle_patch * p , patch_color_t * c [ 2 ])"		1269849	0					
ANR	1269851	CompoundStatement		2696:0:100873:101485	1269849	0					
ANR	1269852	ExpressionStatement	q [ 0 ] . c = c [ 0 ]	2697:4:100879:100892	1269849	0	True				
ANR	1269853	AssignmentExpression	q [ 0 ] . c = c [ 0 ]		1269849	0		=			
ANR	1269854	MemberAccess	q [ 0 ] . c		1269849	0					
ANR	1269855	ArrayIndexing	q [ 0 ]		1269849	0					
ANR	1269856	Identifier	q		1269849	0					
ANR	1269857	PrimaryExpression	0		1269849	1					
ANR	1269858	Identifier	c		1269849	1					
ANR	1269859	ArrayIndexing	c [ 0 ]		1269849	1					
ANR	1269860	Identifier	c		1269849	0					
ANR	1269861	PrimaryExpression	0		1269849	1					
ANR	1269862	ExpressionStatement	q [ 1 ] . c = c [ 1 ]	2698:4:100898:100911	1269849	1	True				
ANR	1269863	AssignmentExpression	q [ 1 ] . c = c [ 1 ]		1269849	0		=			
ANR	1269864	MemberAccess	q [ 1 ] . c		1269849	0					
ANR	1269865	ArrayIndexing	q [ 1 ]		1269849	0					
ANR	1269866	Identifier	q		1269849	0					
ANR	1269867	PrimaryExpression	1		1269849	1					
ANR	1269868	Identifier	c		1269849	1					
ANR	1269869	ArrayIndexing	c [ 1 ]		1269849	1					
ANR	1269870	Identifier	c		1269849	0					
ANR	1269871	PrimaryExpression	1		1269849	1					
ANR	1269872	ExpressionStatement	q [ 0 ] . p . x = ( p -> p [ 0 ] [ 0 ] -> p . x + p -> p [ 1 ] [ 0 ] -> p . x ) / 2	2699:4:100917:100967	1269849	2	True				
ANR	1269873	AssignmentExpression	q [ 0 ] . p . x = ( p -> p [ 0 ] [ 0 ] -> p . x + p -> p [ 1 ] [ 0 ] -> p . x ) / 2		1269849	0		=			
ANR	1269874	MemberAccess	q [ 0 ] . p . x		1269849	0					
ANR	1269875	MemberAccess	q [ 0 ] . p		1269849	0					
ANR	1269876	ArrayIndexing	q [ 0 ]		1269849	0					
ANR	1269877	Identifier	q		1269849	0					
ANR	1269878	PrimaryExpression	0		1269849	1					
ANR	1269879	Identifier	p		1269849	1					
ANR	1269880	Identifier	x		1269849	1					
ANR	1269881	MultiplicativeExpression	( p -> p [ 0 ] [ 0 ] -> p . x + p -> p [ 1 ] [ 0 ] -> p . x ) / 2		1269849	1		/			
ANR	1269882	AdditiveExpression	p -> p [ 0 ] [ 0 ] -> p . x + p -> p [ 1 ] [ 0 ] -> p . x		1269849	0		+			
ANR	1269883	MemberAccess	p -> p [ 0 ] [ 0 ] -> p . x		1269849	0					
ANR	1269884	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> p		1269849	0					
ANR	1269885	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1269849	0					
ANR	1269886	ArrayIndexing	p -> p [ 0 ]		1269849	0					
ANR	1269887	PtrMemberAccess	p -> p		1269849	0					
ANR	1269888	Identifier	p		1269849	0					
ANR	1269889	Identifier	p		1269849	1					
ANR	1269890	PrimaryExpression	0		1269849	1					
ANR	1269891	PrimaryExpression	0		1269849	1					
ANR	1269892	Identifier	p		1269849	1					
ANR	1269893	Identifier	x		1269849	1					
ANR	1269894	MemberAccess	p -> p [ 1 ] [ 0 ] -> p . x		1269849	1					
ANR	1269895	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> p		1269849	0					
ANR	1269896	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1269849	0					
ANR	1269897	ArrayIndexing	p -> p [ 1 ]		1269849	0					
ANR	1269898	PtrMemberAccess	p -> p		1269849	0					
ANR	1269899	Identifier	p		1269849	0					
ANR	1269900	Identifier	p		1269849	1					
ANR	1269901	PrimaryExpression	1		1269849	1					
ANR	1269902	PrimaryExpression	0		1269849	1					
ANR	1269903	Identifier	p		1269849	1					
ANR	1269904	Identifier	x		1269849	1					
ANR	1269905	PrimaryExpression	2		1269849	1					
ANR	1269906	ExpressionStatement	q [ 1 ] . p . x = ( p -> p [ 0 ] [ 1 ] -> p . x + p -> p [ 1 ] [ 1 ] -> p . x ) / 2	2700:4:100973:101023	1269849	3	True				
ANR	1269907	AssignmentExpression	q [ 1 ] . p . x = ( p -> p [ 0 ] [ 1 ] -> p . x + p -> p [ 1 ] [ 1 ] -> p . x ) / 2		1269849	0		=			
ANR	1269908	MemberAccess	q [ 1 ] . p . x		1269849	0					
ANR	1269909	MemberAccess	q [ 1 ] . p		1269849	0					
ANR	1269910	ArrayIndexing	q [ 1 ]		1269849	0					
ANR	1269911	Identifier	q		1269849	0					
ANR	1269912	PrimaryExpression	1		1269849	1					
ANR	1269913	Identifier	p		1269849	1					
ANR	1269914	Identifier	x		1269849	1					
ANR	1269915	MultiplicativeExpression	( p -> p [ 0 ] [ 1 ] -> p . x + p -> p [ 1 ] [ 1 ] -> p . x ) / 2		1269849	1		/			
ANR	1269916	AdditiveExpression	p -> p [ 0 ] [ 1 ] -> p . x + p -> p [ 1 ] [ 1 ] -> p . x		1269849	0		+			
ANR	1269917	MemberAccess	p -> p [ 0 ] [ 1 ] -> p . x		1269849	0					
ANR	1269918	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> p		1269849	0					
ANR	1269919	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1269849	0					
ANR	1269920	ArrayIndexing	p -> p [ 0 ]		1269849	0					
ANR	1269921	PtrMemberAccess	p -> p		1269849	0					
ANR	1269922	Identifier	p		1269849	0					
ANR	1269923	Identifier	p		1269849	1					
ANR	1269924	PrimaryExpression	0		1269849	1					
ANR	1269925	PrimaryExpression	1		1269849	1					
ANR	1269926	Identifier	p		1269849	1					
ANR	1269927	Identifier	x		1269849	1					
ANR	1269928	MemberAccess	p -> p [ 1 ] [ 1 ] -> p . x		1269849	1					
ANR	1269929	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> p		1269849	0					
ANR	1269930	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1269849	0					
ANR	1269931	ArrayIndexing	p -> p [ 1 ]		1269849	0					
ANR	1269932	PtrMemberAccess	p -> p		1269849	0					
ANR	1269933	Identifier	p		1269849	0					
ANR	1269934	Identifier	p		1269849	1					
ANR	1269935	PrimaryExpression	1		1269849	1					
ANR	1269936	PrimaryExpression	1		1269849	1					
ANR	1269937	Identifier	p		1269849	1					
ANR	1269938	Identifier	x		1269849	1					
ANR	1269939	PrimaryExpression	2		1269849	1					
ANR	1269940	ExpressionStatement	q [ 0 ] . p . y = ( p -> p [ 0 ] [ 0 ] -> p . y + p -> p [ 1 ] [ 0 ] -> p . y ) / 2	2701:4:101029:101079	1269849	4	True				
ANR	1269941	AssignmentExpression	q [ 0 ] . p . y = ( p -> p [ 0 ] [ 0 ] -> p . y + p -> p [ 1 ] [ 0 ] -> p . y ) / 2		1269849	0		=			
ANR	1269942	MemberAccess	q [ 0 ] . p . y		1269849	0					
ANR	1269943	MemberAccess	q [ 0 ] . p		1269849	0					
ANR	1269944	ArrayIndexing	q [ 0 ]		1269849	0					
ANR	1269945	Identifier	q		1269849	0					
ANR	1269946	PrimaryExpression	0		1269849	1					
ANR	1269947	Identifier	p		1269849	1					
ANR	1269948	Identifier	y		1269849	1					
ANR	1269949	MultiplicativeExpression	( p -> p [ 0 ] [ 0 ] -> p . y + p -> p [ 1 ] [ 0 ] -> p . y ) / 2		1269849	1		/			
ANR	1269950	AdditiveExpression	p -> p [ 0 ] [ 0 ] -> p . y + p -> p [ 1 ] [ 0 ] -> p . y		1269849	0		+			
ANR	1269951	MemberAccess	p -> p [ 0 ] [ 0 ] -> p . y		1269849	0					
ANR	1269952	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> p		1269849	0					
ANR	1269953	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1269849	0					
ANR	1269954	ArrayIndexing	p -> p [ 0 ]		1269849	0					
ANR	1269955	PtrMemberAccess	p -> p		1269849	0					
ANR	1269956	Identifier	p		1269849	0					
ANR	1269957	Identifier	p		1269849	1					
ANR	1269958	PrimaryExpression	0		1269849	1					
ANR	1269959	PrimaryExpression	0		1269849	1					
ANR	1269960	Identifier	p		1269849	1					
ANR	1269961	Identifier	y		1269849	1					
ANR	1269962	MemberAccess	p -> p [ 1 ] [ 0 ] -> p . y		1269849	1					
ANR	1269963	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> p		1269849	0					
ANR	1269964	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1269849	0					
ANR	1269965	ArrayIndexing	p -> p [ 1 ]		1269849	0					
ANR	1269966	PtrMemberAccess	p -> p		1269849	0					
ANR	1269967	Identifier	p		1269849	0					
ANR	1269968	Identifier	p		1269849	1					
ANR	1269969	PrimaryExpression	1		1269849	1					
ANR	1269970	PrimaryExpression	0		1269849	1					
ANR	1269971	Identifier	p		1269849	1					
ANR	1269972	Identifier	y		1269849	1					
ANR	1269973	PrimaryExpression	2		1269849	1					
ANR	1269974	ExpressionStatement	q [ 1 ] . p . y = ( p -> p [ 0 ] [ 1 ] -> p . y + p -> p [ 1 ] [ 1 ] -> p . y ) / 2	2702:4:101085:101135	1269849	5	True				
ANR	1269975	AssignmentExpression	q [ 1 ] . p . y = ( p -> p [ 0 ] [ 1 ] -> p . y + p -> p [ 1 ] [ 1 ] -> p . y ) / 2		1269849	0		=			
ANR	1269976	MemberAccess	q [ 1 ] . p . y		1269849	0					
ANR	1269977	MemberAccess	q [ 1 ] . p		1269849	0					
ANR	1269978	ArrayIndexing	q [ 1 ]		1269849	0					
ANR	1269979	Identifier	q		1269849	0					
ANR	1269980	PrimaryExpression	1		1269849	1					
ANR	1269981	Identifier	p		1269849	1					
ANR	1269982	Identifier	y		1269849	1					
ANR	1269983	MultiplicativeExpression	( p -> p [ 0 ] [ 1 ] -> p . y + p -> p [ 1 ] [ 1 ] -> p . y ) / 2		1269849	1		/			
ANR	1269984	AdditiveExpression	p -> p [ 0 ] [ 1 ] -> p . y + p -> p [ 1 ] [ 1 ] -> p . y		1269849	0		+			
ANR	1269985	MemberAccess	p -> p [ 0 ] [ 1 ] -> p . y		1269849	0					
ANR	1269986	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> p		1269849	0					
ANR	1269987	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1269849	0					
ANR	1269988	ArrayIndexing	p -> p [ 0 ]		1269849	0					
ANR	1269989	PtrMemberAccess	p -> p		1269849	0					
ANR	1269990	Identifier	p		1269849	0					
ANR	1269991	Identifier	p		1269849	1					
ANR	1269992	PrimaryExpression	0		1269849	1					
ANR	1269993	PrimaryExpression	1		1269849	1					
ANR	1269994	Identifier	p		1269849	1					
ANR	1269995	Identifier	y		1269849	1					
ANR	1269996	MemberAccess	p -> p [ 1 ] [ 1 ] -> p . y		1269849	1					
ANR	1269997	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> p		1269849	0					
ANR	1269998	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1269849	0					
ANR	1269999	ArrayIndexing	p -> p [ 1 ]		1269849	0					
ANR	1270000	PtrMemberAccess	p -> p		1269849	0					
ANR	1270001	Identifier	p		1269849	0					
ANR	1270002	Identifier	p		1269849	1					
ANR	1270003	PrimaryExpression	1		1269849	1					
ANR	1270004	PrimaryExpression	1		1269849	1					
ANR	1270005	Identifier	p		1269849	1					
ANR	1270006	Identifier	y		1269849	1					
ANR	1270007	PrimaryExpression	2		1269849	1					
ANR	1270008	ExpressionStatement	"patch_interpolate_color ( c [ 0 ] , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 1 ] [ 0 ] -> c , pfs , 0.5 )"	2703:4:101141:101210	1269849	6	True				
ANR	1270009	CallExpression	"patch_interpolate_color ( c [ 0 ] , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 1 ] [ 0 ] -> c , pfs , 0.5 )"		1269849	0					
ANR	1270010	Callee	patch_interpolate_color		1269849	0					
ANR	1270011	Identifier	patch_interpolate_color		1269849	0					
ANR	1270012	ArgumentList	c [ 0 ]		1269849	1					
ANR	1270013	Argument	c [ 0 ]		1269849	0					
ANR	1270014	ArrayIndexing	c [ 0 ]		1269849	0					
ANR	1270015	Identifier	c		1269849	0					
ANR	1270016	PrimaryExpression	0		1269849	1					
ANR	1270017	Argument	p -> p [ 0 ] [ 0 ] -> c		1269849	1					
ANR	1270018	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> c		1269849	0					
ANR	1270019	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1269849	0					
ANR	1270020	ArrayIndexing	p -> p [ 0 ]		1269849	0					
ANR	1270021	PtrMemberAccess	p -> p		1269849	0					
ANR	1270022	Identifier	p		1269849	0					
ANR	1270023	Identifier	p		1269849	1					
ANR	1270024	PrimaryExpression	0		1269849	1					
ANR	1270025	PrimaryExpression	0		1269849	1					
ANR	1270026	Identifier	c		1269849	1					
ANR	1270027	Argument	p -> p [ 1 ] [ 0 ] -> c		1269849	2					
ANR	1270028	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> c		1269849	0					
ANR	1270029	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1269849	0					
ANR	1270030	ArrayIndexing	p -> p [ 1 ]		1269849	0					
ANR	1270031	PtrMemberAccess	p -> p		1269849	0					
ANR	1270032	Identifier	p		1269849	0					
ANR	1270033	Identifier	p		1269849	1					
ANR	1270034	PrimaryExpression	1		1269849	1					
ANR	1270035	PrimaryExpression	0		1269849	1					
ANR	1270036	Identifier	c		1269849	1					
ANR	1270037	Argument	pfs		1269849	3					
ANR	1270038	Identifier	pfs		1269849	0					
ANR	1270039	Argument	0.5		1269849	4					
ANR	1270040	PrimaryExpression	0.5		1269849	0					
ANR	1270041	ExpressionStatement	"patch_interpolate_color ( c [ 1 ] , p -> p [ 0 ] [ 1 ] -> c , p -> p [ 1 ] [ 1 ] -> c , pfs , 0.5 )"	2704:4:101216:101285	1269849	7	True				
ANR	1270042	CallExpression	"patch_interpolate_color ( c [ 1 ] , p -> p [ 0 ] [ 1 ] -> c , p -> p [ 1 ] [ 1 ] -> c , pfs , 0.5 )"		1269849	0					
ANR	1270043	Callee	patch_interpolate_color		1269849	0					
ANR	1270044	Identifier	patch_interpolate_color		1269849	0					
ANR	1270045	ArgumentList	c [ 1 ]		1269849	1					
ANR	1270046	Argument	c [ 1 ]		1269849	0					
ANR	1270047	ArrayIndexing	c [ 1 ]		1269849	0					
ANR	1270048	Identifier	c		1269849	0					
ANR	1270049	PrimaryExpression	1		1269849	1					
ANR	1270050	Argument	p -> p [ 0 ] [ 1 ] -> c		1269849	1					
ANR	1270051	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> c		1269849	0					
ANR	1270052	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1269849	0					
ANR	1270053	ArrayIndexing	p -> p [ 0 ]		1269849	0					
ANR	1270054	PtrMemberAccess	p -> p		1269849	0					
ANR	1270055	Identifier	p		1269849	0					
ANR	1270056	Identifier	p		1269849	1					
ANR	1270057	PrimaryExpression	0		1269849	1					
ANR	1270058	PrimaryExpression	1		1269849	1					
ANR	1270059	Identifier	c		1269849	1					
ANR	1270060	Argument	p -> p [ 1 ] [ 1 ] -> c		1269849	2					
ANR	1270061	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> c		1269849	0					
ANR	1270062	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1269849	0					
ANR	1270063	ArrayIndexing	p -> p [ 1 ]		1269849	0					
ANR	1270064	PtrMemberAccess	p -> p		1269849	0					
ANR	1270065	Identifier	p		1269849	0					
ANR	1270066	Identifier	p		1269849	1					
ANR	1270067	PrimaryExpression	1		1269849	1					
ANR	1270068	PrimaryExpression	1		1269849	1					
ANR	1270069	Identifier	c		1269849	1					
ANR	1270070	Argument	pfs		1269849	3					
ANR	1270071	Identifier	pfs		1269849	0					
ANR	1270072	Argument	0.5		1269849	4					
ANR	1270073	PrimaryExpression	0.5		1269849	0					
ANR	1270074	ExpressionStatement	s0 -> p [ 0 ] [ 0 ] = p -> p [ 0 ] [ 0 ]	2705:4:101291:101315	1269849	8	True				
ANR	1270075	AssignmentExpression	s0 -> p [ 0 ] [ 0 ] = p -> p [ 0 ] [ 0 ]		1269849	0		=			
ANR	1270076	ArrayIndexing	s0 -> p [ 0 ] [ 0 ]		1269849	0					
ANR	1270077	ArrayIndexing	s0 -> p [ 0 ]		1269849	0					
ANR	1270078	PtrMemberAccess	s0 -> p		1269849	0					
ANR	1270079	Identifier	s0		1269849	0					
ANR	1270080	Identifier	p		1269849	1					
ANR	1270081	PrimaryExpression	0		1269849	1					
ANR	1270082	PrimaryExpression	0		1269849	1					
ANR	1270083	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1269849	1					
ANR	1270084	ArrayIndexing	p -> p [ 0 ]		1269849	0					
ANR	1270085	PtrMemberAccess	p -> p		1269849	0					
ANR	1270086	Identifier	p		1269849	0					
ANR	1270087	Identifier	p		1269849	1					
ANR	1270088	PrimaryExpression	0		1269849	1					
ANR	1270089	PrimaryExpression	0		1269849	1					
ANR	1270090	ExpressionStatement	s0 -> p [ 0 ] [ 1 ] = p -> p [ 0 ] [ 1 ]	2706:4:101321:101345	1269849	9	True				
ANR	1270091	AssignmentExpression	s0 -> p [ 0 ] [ 1 ] = p -> p [ 0 ] [ 1 ]		1269849	0		=			
ANR	1270092	ArrayIndexing	s0 -> p [ 0 ] [ 1 ]		1269849	0					
ANR	1270093	ArrayIndexing	s0 -> p [ 0 ]		1269849	0					
ANR	1270094	PtrMemberAccess	s0 -> p		1269849	0					
ANR	1270095	Identifier	s0		1269849	0					
ANR	1270096	Identifier	p		1269849	1					
ANR	1270097	PrimaryExpression	0		1269849	1					
ANR	1270098	PrimaryExpression	1		1269849	1					
ANR	1270099	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1269849	1					
ANR	1270100	ArrayIndexing	p -> p [ 0 ]		1269849	0					
ANR	1270101	PtrMemberAccess	p -> p		1269849	0					
ANR	1270102	Identifier	p		1269849	0					
ANR	1270103	Identifier	p		1269849	1					
ANR	1270104	PrimaryExpression	0		1269849	1					
ANR	1270105	PrimaryExpression	1		1269849	1					
ANR	1270106	ExpressionStatement	s0 -> p [ 1 ] [ 0 ] = s1 -> p [ 0 ] [ 0 ] = & q [ 0 ]	2707:4:101351:101384	1269849	10	True				
ANR	1270107	AssignmentExpression	s0 -> p [ 1 ] [ 0 ] = s1 -> p [ 0 ] [ 0 ] = & q [ 0 ]		1269849	0		=			
ANR	1270108	ArrayIndexing	s0 -> p [ 1 ] [ 0 ]		1269849	0					
ANR	1270109	ArrayIndexing	s0 -> p [ 1 ]		1269849	0					
ANR	1270110	PtrMemberAccess	s0 -> p		1269849	0					
ANR	1270111	Identifier	s0		1269849	0					
ANR	1270112	Identifier	p		1269849	1					
ANR	1270113	PrimaryExpression	1		1269849	1					
ANR	1270114	PrimaryExpression	0		1269849	1					
ANR	1270115	AssignmentExpression	s1 -> p [ 0 ] [ 0 ] = & q [ 0 ]		1269849	1		=			
ANR	1270116	ArrayIndexing	s1 -> p [ 0 ] [ 0 ]		1269849	0					
ANR	1270117	ArrayIndexing	s1 -> p [ 0 ]		1269849	0					
ANR	1270118	PtrMemberAccess	s1 -> p		1269849	0					
ANR	1270119	Identifier	s1		1269849	0					
ANR	1270120	Identifier	p		1269849	1					
ANR	1270121	PrimaryExpression	0		1269849	1					
ANR	1270122	PrimaryExpression	0		1269849	1					
ANR	1270123	UnaryOperationExpression	& q [ 0 ]		1269849	1					
ANR	1270124	UnaryOperator	&		1269849	0					
ANR	1270125	ArrayIndexing	q [ 0 ]		1269849	1					
ANR	1270126	Identifier	q		1269849	0					
ANR	1270127	PrimaryExpression	0		1269849	1					
ANR	1270128	ExpressionStatement	s0 -> p [ 1 ] [ 1 ] = s1 -> p [ 0 ] [ 1 ] = & q [ 1 ]	2708:4:101390:101423	1269849	11	True				
ANR	1270129	AssignmentExpression	s0 -> p [ 1 ] [ 1 ] = s1 -> p [ 0 ] [ 1 ] = & q [ 1 ]		1269849	0		=			
ANR	1270130	ArrayIndexing	s0 -> p [ 1 ] [ 1 ]		1269849	0					
ANR	1270131	ArrayIndexing	s0 -> p [ 1 ]		1269849	0					
ANR	1270132	PtrMemberAccess	s0 -> p		1269849	0					
ANR	1270133	Identifier	s0		1269849	0					
ANR	1270134	Identifier	p		1269849	1					
ANR	1270135	PrimaryExpression	1		1269849	1					
ANR	1270136	PrimaryExpression	1		1269849	1					
ANR	1270137	AssignmentExpression	s1 -> p [ 0 ] [ 1 ] = & q [ 1 ]		1269849	1		=			
ANR	1270138	ArrayIndexing	s1 -> p [ 0 ] [ 1 ]		1269849	0					
ANR	1270139	ArrayIndexing	s1 -> p [ 0 ]		1269849	0					
ANR	1270140	PtrMemberAccess	s1 -> p		1269849	0					
ANR	1270141	Identifier	s1		1269849	0					
ANR	1270142	Identifier	p		1269849	1					
ANR	1270143	PrimaryExpression	0		1269849	1					
ANR	1270144	PrimaryExpression	1		1269849	1					
ANR	1270145	UnaryOperationExpression	& q [ 1 ]		1269849	1					
ANR	1270146	UnaryOperator	&		1269849	0					
ANR	1270147	ArrayIndexing	q [ 1 ]		1269849	1					
ANR	1270148	Identifier	q		1269849	0					
ANR	1270149	PrimaryExpression	1		1269849	1					
ANR	1270150	ExpressionStatement	s1 -> p [ 1 ] [ 0 ] = p -> p [ 1 ] [ 0 ]	2709:4:101429:101453	1269849	12	True				
ANR	1270151	AssignmentExpression	s1 -> p [ 1 ] [ 0 ] = p -> p [ 1 ] [ 0 ]		1269849	0		=			
ANR	1270152	ArrayIndexing	s1 -> p [ 1 ] [ 0 ]		1269849	0					
ANR	1270153	ArrayIndexing	s1 -> p [ 1 ]		1269849	0					
ANR	1270154	PtrMemberAccess	s1 -> p		1269849	0					
ANR	1270155	Identifier	s1		1269849	0					
ANR	1270156	Identifier	p		1269849	1					
ANR	1270157	PrimaryExpression	1		1269849	1					
ANR	1270158	PrimaryExpression	0		1269849	1					
ANR	1270159	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1269849	1					
ANR	1270160	ArrayIndexing	p -> p [ 1 ]		1269849	0					
ANR	1270161	PtrMemberAccess	p -> p		1269849	0					
ANR	1270162	Identifier	p		1269849	0					
ANR	1270163	Identifier	p		1269849	1					
ANR	1270164	PrimaryExpression	1		1269849	1					
ANR	1270165	PrimaryExpression	0		1269849	1					
ANR	1270166	ExpressionStatement	s1 -> p [ 1 ] [ 1 ] = p -> p [ 1 ] [ 1 ]	2710:4:101459:101483	1269849	13	True				
ANR	1270167	AssignmentExpression	s1 -> p [ 1 ] [ 1 ] = p -> p [ 1 ] [ 1 ]		1269849	0		=			
ANR	1270168	ArrayIndexing	s1 -> p [ 1 ] [ 1 ]		1269849	0					
ANR	1270169	ArrayIndexing	s1 -> p [ 1 ]		1269849	0					
ANR	1270170	PtrMemberAccess	s1 -> p		1269849	0					
ANR	1270171	Identifier	s1		1269849	0					
ANR	1270172	Identifier	p		1269849	1					
ANR	1270173	PrimaryExpression	1		1269849	1					
ANR	1270174	PrimaryExpression	1		1269849	1					
ANR	1270175	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1269849	1					
ANR	1270176	ArrayIndexing	p -> p [ 1 ]		1269849	0					
ANR	1270177	PtrMemberAccess	p -> p		1269849	0					
ANR	1270178	Identifier	p		1269849	0					
ANR	1270179	Identifier	p		1269849	1					
ANR	1270180	PrimaryExpression	1		1269849	1					
ANR	1270181	PrimaryExpression	1		1269849	1					
ANR	1270182	ReturnType	static inline void		1269849	1					
ANR	1270183	Identifier	divide_quadrangle_by_v		1269849	2					
ANR	1270184	ParameterList	"patch_fill_state_t * pfs , quadrangle_patch * s0 , quadrangle_patch * s1 , shading_vertex_t q [ 2 ] , const quadrangle_patch * p , patch_color_t * c [ 2 ]"		1269849	3					
ANR	1270185	Parameter	patch_fill_state_t * pfs	2694:23:100721:100743	1269849	0	True				
ANR	1270186	ParameterType	patch_fill_state_t *		1269849	0					
ANR	1270187	Identifier	pfs		1269849	1					
ANR	1270188	Parameter	quadrangle_patch * s0	2694:48:100746:100765	1269849	1	True				
ANR	1270189	ParameterType	quadrangle_patch *		1269849	0					
ANR	1270190	Identifier	s0		1269849	1					
ANR	1270191	Parameter	quadrangle_patch * s1	2694:70:100768:100787	1269849	2	True				
ANR	1270192	ParameterType	quadrangle_patch *		1269849	0					
ANR	1270193	Identifier	s1		1269849	1					
ANR	1270194	Parameter	shading_vertex_t q [ 2 ]	2695:12:100802:100822	1269849	3	True				
ANR	1270195	ParameterType	shading_vertex_t [ 2 ]		1269849	0					
ANR	1270196	Identifier	q		1269849	1					
ANR	1270197	Parameter	const quadrangle_patch * p	2695:35:100825:100849	1269849	4	True				
ANR	1270198	ParameterType	const quadrangle_patch *		1269849	0					
ANR	1270199	Identifier	p		1269849	1					
ANR	1270200	Parameter	patch_color_t * c [ 2 ]	2695:62:100852:100870	1269849	5	True				
ANR	1270201	ParameterType	patch_color_t * [ 2 ]		1269849	0					
ANR	1270202	Identifier	c		1269849	1					
ANR	1270203	CFGEntryNode	ENTRY		1269849		True				
ANR	1270204	CFGExitNode	EXIT		1269849		True				
ANR	1270205	Symbol	q [ 0 ] . c		1269849						
ANR	1270206	Symbol	* * * s0		1269849						
ANR	1270207	Symbol	p -> p		1269849						
ANR	1270208	Symbol	* * * * p		1269849						
ANR	1270209	Symbol	* p -> p		1269849						
ANR	1270210	Symbol	* * s1		1269849						
ANR	1270211	Symbol	p -> p [ 1 ] [ 1 ] -> p . y		1269849						
ANR	1270212	Symbol	p -> p [ 1 ] [ 1 ] -> p . x		1269849						
ANR	1270213	Symbol	* * s0		1269849						
ANR	1270214	Symbol	p -> p [ 0 ] [ 1 ] -> p		1269849						
ANR	1270215	Symbol	* * * p -> p		1269849						
ANR	1270216	Symbol	* * p -> p		1269849						
ANR	1270217	Symbol	p -> p [ 0 ] [ 1 ] -> p . y		1269849						
ANR	1270218	Symbol	p -> p [ 0 ] [ 0 ] -> c		1269849						
ANR	1270219	Symbol	q [ 0 ] . p		1269849						
ANR	1270220	Symbol	p -> p [ 0 ] [ 1 ] -> p . x		1269849						
ANR	1270221	Symbol	s0		1269849						
ANR	1270222	Symbol	s1		1269849						
ANR	1270223	Symbol	p -> p [ 0 ] [ 1 ] -> c		1269849						
ANR	1270224	Symbol	q [ 1 ] . p		1269849						
ANR	1270225	Symbol	* * * p		1269849						
ANR	1270226	Symbol	p -> p [ 1 ] [ 0 ] -> p . y		1269849						
ANR	1270227	Symbol	* * s0 -> p		1269849						
ANR	1270228	Symbol	q [ 1 ] . p . x		1269849						
ANR	1270229	Symbol	p -> p [ 1 ] [ 0 ] -> p . x		1269849						
ANR	1270230	Symbol	q [ 1 ] . p . y		1269849						
ANR	1270231	Symbol	pfs		1269849						
ANR	1270232	Symbol	q [ 1 ] . c		1269849						
ANR	1270233	Symbol	* s0		1269849						
ANR	1270234	Symbol	* s1		1269849						
ANR	1270235	Symbol	s0 -> p		1269849						
ANR	1270236	Symbol	p -> p [ 0 ] [ 0 ] -> p . x		1269849						
ANR	1270237	Symbol	p -> p [ 0 ] [ 0 ] -> p . y		1269849						
ANR	1270238	Symbol	* s1 -> p		1269849						
ANR	1270239	Symbol	p -> p [ 1 ] [ 1 ] -> p		1269849						
ANR	1270240	Symbol	p -> p [ 1 ] [ 0 ] -> p		1269849						
ANR	1270241	Symbol	* * p		1269849						
ANR	1270242	Symbol	p -> p [ 1 ] [ 0 ] -> c		1269849						
ANR	1270243	Symbol	p -> p [ 1 ] [ 1 ] -> c		1269849						
ANR	1270244	Symbol	q [ 0 ] . p . y		1269849						
ANR	1270245	Symbol	s1 -> p		1269849						
ANR	1270246	Symbol	q [ 0 ] . p . x		1269849						
ANR	1270247	Symbol	* * s1 -> p		1269849						
ANR	1270248	Symbol	c		1269849						
ANR	1270249	Symbol	* s0 -> p		1269849						
ANR	1270250	Symbol	p -> p [ 0 ] [ 0 ] -> p		1269849						
ANR	1270251	Symbol	* c		1269849						
ANR	1270252	Symbol	p		1269849						
ANR	1270253	Symbol	q		1269849						
ANR	1270254	Symbol	* p		1269849						
ANR	1270255	Symbol	* * * s1		1269849						
ANR	1270256	Symbol	* q		1269849						
ANR	1270257	Function	divide_quadrangle_by_u	2713:0:101488:102294							
ANR	1270258	FunctionDef	"divide_quadrangle_by_u (patch_fill_state_t * pfs , quadrangle_patch * s0 , quadrangle_patch * s1 , shading_vertex_t q [ 2 ] , const quadrangle_patch * p , patch_color_t * c [ 2 ])"		1270257	0					
ANR	1270259	CompoundStatement		2716:0:101682:102294	1270257	0					
ANR	1270260	ExpressionStatement	q [ 0 ] . c = c [ 0 ]	2717:4:101688:101701	1270257	0	True				
ANR	1270261	AssignmentExpression	q [ 0 ] . c = c [ 0 ]		1270257	0		=			
ANR	1270262	MemberAccess	q [ 0 ] . c		1270257	0					
ANR	1270263	ArrayIndexing	q [ 0 ]		1270257	0					
ANR	1270264	Identifier	q		1270257	0					
ANR	1270265	PrimaryExpression	0		1270257	1					
ANR	1270266	Identifier	c		1270257	1					
ANR	1270267	ArrayIndexing	c [ 0 ]		1270257	1					
ANR	1270268	Identifier	c		1270257	0					
ANR	1270269	PrimaryExpression	0		1270257	1					
ANR	1270270	ExpressionStatement	q [ 1 ] . c = c [ 1 ]	2718:4:101707:101720	1270257	1	True				
ANR	1270271	AssignmentExpression	q [ 1 ] . c = c [ 1 ]		1270257	0		=			
ANR	1270272	MemberAccess	q [ 1 ] . c		1270257	0					
ANR	1270273	ArrayIndexing	q [ 1 ]		1270257	0					
ANR	1270274	Identifier	q		1270257	0					
ANR	1270275	PrimaryExpression	1		1270257	1					
ANR	1270276	Identifier	c		1270257	1					
ANR	1270277	ArrayIndexing	c [ 1 ]		1270257	1					
ANR	1270278	Identifier	c		1270257	0					
ANR	1270279	PrimaryExpression	1		1270257	1					
ANR	1270280	ExpressionStatement	q [ 0 ] . p . x = ( p -> p [ 0 ] [ 0 ] -> p . x + p -> p [ 0 ] [ 1 ] -> p . x ) / 2	2719:4:101726:101776	1270257	2	True				
ANR	1270281	AssignmentExpression	q [ 0 ] . p . x = ( p -> p [ 0 ] [ 0 ] -> p . x + p -> p [ 0 ] [ 1 ] -> p . x ) / 2		1270257	0		=			
ANR	1270282	MemberAccess	q [ 0 ] . p . x		1270257	0					
ANR	1270283	MemberAccess	q [ 0 ] . p		1270257	0					
ANR	1270284	ArrayIndexing	q [ 0 ]		1270257	0					
ANR	1270285	Identifier	q		1270257	0					
ANR	1270286	PrimaryExpression	0		1270257	1					
ANR	1270287	Identifier	p		1270257	1					
ANR	1270288	Identifier	x		1270257	1					
ANR	1270289	MultiplicativeExpression	( p -> p [ 0 ] [ 0 ] -> p . x + p -> p [ 0 ] [ 1 ] -> p . x ) / 2		1270257	1		/			
ANR	1270290	AdditiveExpression	p -> p [ 0 ] [ 0 ] -> p . x + p -> p [ 0 ] [ 1 ] -> p . x		1270257	0		+			
ANR	1270291	MemberAccess	p -> p [ 0 ] [ 0 ] -> p . x		1270257	0					
ANR	1270292	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> p		1270257	0					
ANR	1270293	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1270257	0					
ANR	1270294	ArrayIndexing	p -> p [ 0 ]		1270257	0					
ANR	1270295	PtrMemberAccess	p -> p		1270257	0					
ANR	1270296	Identifier	p		1270257	0					
ANR	1270297	Identifier	p		1270257	1					
ANR	1270298	PrimaryExpression	0		1270257	1					
ANR	1270299	PrimaryExpression	0		1270257	1					
ANR	1270300	Identifier	p		1270257	1					
ANR	1270301	Identifier	x		1270257	1					
ANR	1270302	MemberAccess	p -> p [ 0 ] [ 1 ] -> p . x		1270257	1					
ANR	1270303	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> p		1270257	0					
ANR	1270304	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1270257	0					
ANR	1270305	ArrayIndexing	p -> p [ 0 ]		1270257	0					
ANR	1270306	PtrMemberAccess	p -> p		1270257	0					
ANR	1270307	Identifier	p		1270257	0					
ANR	1270308	Identifier	p		1270257	1					
ANR	1270309	PrimaryExpression	0		1270257	1					
ANR	1270310	PrimaryExpression	1		1270257	1					
ANR	1270311	Identifier	p		1270257	1					
ANR	1270312	Identifier	x		1270257	1					
ANR	1270313	PrimaryExpression	2		1270257	1					
ANR	1270314	ExpressionStatement	q [ 1 ] . p . x = ( p -> p [ 1 ] [ 0 ] -> p . x + p -> p [ 1 ] [ 1 ] -> p . x ) / 2	2720:4:101782:101832	1270257	3	True				
ANR	1270315	AssignmentExpression	q [ 1 ] . p . x = ( p -> p [ 1 ] [ 0 ] -> p . x + p -> p [ 1 ] [ 1 ] -> p . x ) / 2		1270257	0		=			
ANR	1270316	MemberAccess	q [ 1 ] . p . x		1270257	0					
ANR	1270317	MemberAccess	q [ 1 ] . p		1270257	0					
ANR	1270318	ArrayIndexing	q [ 1 ]		1270257	0					
ANR	1270319	Identifier	q		1270257	0					
ANR	1270320	PrimaryExpression	1		1270257	1					
ANR	1270321	Identifier	p		1270257	1					
ANR	1270322	Identifier	x		1270257	1					
ANR	1270323	MultiplicativeExpression	( p -> p [ 1 ] [ 0 ] -> p . x + p -> p [ 1 ] [ 1 ] -> p . x ) / 2		1270257	1		/			
ANR	1270324	AdditiveExpression	p -> p [ 1 ] [ 0 ] -> p . x + p -> p [ 1 ] [ 1 ] -> p . x		1270257	0		+			
ANR	1270325	MemberAccess	p -> p [ 1 ] [ 0 ] -> p . x		1270257	0					
ANR	1270326	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> p		1270257	0					
ANR	1270327	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1270257	0					
ANR	1270328	ArrayIndexing	p -> p [ 1 ]		1270257	0					
ANR	1270329	PtrMemberAccess	p -> p		1270257	0					
ANR	1270330	Identifier	p		1270257	0					
ANR	1270331	Identifier	p		1270257	1					
ANR	1270332	PrimaryExpression	1		1270257	1					
ANR	1270333	PrimaryExpression	0		1270257	1					
ANR	1270334	Identifier	p		1270257	1					
ANR	1270335	Identifier	x		1270257	1					
ANR	1270336	MemberAccess	p -> p [ 1 ] [ 1 ] -> p . x		1270257	1					
ANR	1270337	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> p		1270257	0					
ANR	1270338	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1270257	0					
ANR	1270339	ArrayIndexing	p -> p [ 1 ]		1270257	0					
ANR	1270340	PtrMemberAccess	p -> p		1270257	0					
ANR	1270341	Identifier	p		1270257	0					
ANR	1270342	Identifier	p		1270257	1					
ANR	1270343	PrimaryExpression	1		1270257	1					
ANR	1270344	PrimaryExpression	1		1270257	1					
ANR	1270345	Identifier	p		1270257	1					
ANR	1270346	Identifier	x		1270257	1					
ANR	1270347	PrimaryExpression	2		1270257	1					
ANR	1270348	ExpressionStatement	q [ 0 ] . p . y = ( p -> p [ 0 ] [ 0 ] -> p . y + p -> p [ 0 ] [ 1 ] -> p . y ) / 2	2721:4:101838:101888	1270257	4	True				
ANR	1270349	AssignmentExpression	q [ 0 ] . p . y = ( p -> p [ 0 ] [ 0 ] -> p . y + p -> p [ 0 ] [ 1 ] -> p . y ) / 2		1270257	0		=			
ANR	1270350	MemberAccess	q [ 0 ] . p . y		1270257	0					
ANR	1270351	MemberAccess	q [ 0 ] . p		1270257	0					
ANR	1270352	ArrayIndexing	q [ 0 ]		1270257	0					
ANR	1270353	Identifier	q		1270257	0					
ANR	1270354	PrimaryExpression	0		1270257	1					
ANR	1270355	Identifier	p		1270257	1					
ANR	1270356	Identifier	y		1270257	1					
ANR	1270357	MultiplicativeExpression	( p -> p [ 0 ] [ 0 ] -> p . y + p -> p [ 0 ] [ 1 ] -> p . y ) / 2		1270257	1		/			
ANR	1270358	AdditiveExpression	p -> p [ 0 ] [ 0 ] -> p . y + p -> p [ 0 ] [ 1 ] -> p . y		1270257	0		+			
ANR	1270359	MemberAccess	p -> p [ 0 ] [ 0 ] -> p . y		1270257	0					
ANR	1270360	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> p		1270257	0					
ANR	1270361	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1270257	0					
ANR	1270362	ArrayIndexing	p -> p [ 0 ]		1270257	0					
ANR	1270363	PtrMemberAccess	p -> p		1270257	0					
ANR	1270364	Identifier	p		1270257	0					
ANR	1270365	Identifier	p		1270257	1					
ANR	1270366	PrimaryExpression	0		1270257	1					
ANR	1270367	PrimaryExpression	0		1270257	1					
ANR	1270368	Identifier	p		1270257	1					
ANR	1270369	Identifier	y		1270257	1					
ANR	1270370	MemberAccess	p -> p [ 0 ] [ 1 ] -> p . y		1270257	1					
ANR	1270371	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> p		1270257	0					
ANR	1270372	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1270257	0					
ANR	1270373	ArrayIndexing	p -> p [ 0 ]		1270257	0					
ANR	1270374	PtrMemberAccess	p -> p		1270257	0					
ANR	1270375	Identifier	p		1270257	0					
ANR	1270376	Identifier	p		1270257	1					
ANR	1270377	PrimaryExpression	0		1270257	1					
ANR	1270378	PrimaryExpression	1		1270257	1					
ANR	1270379	Identifier	p		1270257	1					
ANR	1270380	Identifier	y		1270257	1					
ANR	1270381	PrimaryExpression	2		1270257	1					
ANR	1270382	ExpressionStatement	q [ 1 ] . p . y = ( p -> p [ 1 ] [ 0 ] -> p . y + p -> p [ 1 ] [ 1 ] -> p . y ) / 2	2722:4:101894:101944	1270257	5	True				
ANR	1270383	AssignmentExpression	q [ 1 ] . p . y = ( p -> p [ 1 ] [ 0 ] -> p . y + p -> p [ 1 ] [ 1 ] -> p . y ) / 2		1270257	0		=			
ANR	1270384	MemberAccess	q [ 1 ] . p . y		1270257	0					
ANR	1270385	MemberAccess	q [ 1 ] . p		1270257	0					
ANR	1270386	ArrayIndexing	q [ 1 ]		1270257	0					
ANR	1270387	Identifier	q		1270257	0					
ANR	1270388	PrimaryExpression	1		1270257	1					
ANR	1270389	Identifier	p		1270257	1					
ANR	1270390	Identifier	y		1270257	1					
ANR	1270391	MultiplicativeExpression	( p -> p [ 1 ] [ 0 ] -> p . y + p -> p [ 1 ] [ 1 ] -> p . y ) / 2		1270257	1		/			
ANR	1270392	AdditiveExpression	p -> p [ 1 ] [ 0 ] -> p . y + p -> p [ 1 ] [ 1 ] -> p . y		1270257	0		+			
ANR	1270393	MemberAccess	p -> p [ 1 ] [ 0 ] -> p . y		1270257	0					
ANR	1270394	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> p		1270257	0					
ANR	1270395	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1270257	0					
ANR	1270396	ArrayIndexing	p -> p [ 1 ]		1270257	0					
ANR	1270397	PtrMemberAccess	p -> p		1270257	0					
ANR	1270398	Identifier	p		1270257	0					
ANR	1270399	Identifier	p		1270257	1					
ANR	1270400	PrimaryExpression	1		1270257	1					
ANR	1270401	PrimaryExpression	0		1270257	1					
ANR	1270402	Identifier	p		1270257	1					
ANR	1270403	Identifier	y		1270257	1					
ANR	1270404	MemberAccess	p -> p [ 1 ] [ 1 ] -> p . y		1270257	1					
ANR	1270405	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> p		1270257	0					
ANR	1270406	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1270257	0					
ANR	1270407	ArrayIndexing	p -> p [ 1 ]		1270257	0					
ANR	1270408	PtrMemberAccess	p -> p		1270257	0					
ANR	1270409	Identifier	p		1270257	0					
ANR	1270410	Identifier	p		1270257	1					
ANR	1270411	PrimaryExpression	1		1270257	1					
ANR	1270412	PrimaryExpression	1		1270257	1					
ANR	1270413	Identifier	p		1270257	1					
ANR	1270414	Identifier	y		1270257	1					
ANR	1270415	PrimaryExpression	2		1270257	1					
ANR	1270416	ExpressionStatement	"patch_interpolate_color ( c [ 0 ] , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 0 ] [ 1 ] -> c , pfs , 0.5 )"	2723:4:101950:102019	1270257	6	True				
ANR	1270417	CallExpression	"patch_interpolate_color ( c [ 0 ] , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 0 ] [ 1 ] -> c , pfs , 0.5 )"		1270257	0					
ANR	1270418	Callee	patch_interpolate_color		1270257	0					
ANR	1270419	Identifier	patch_interpolate_color		1270257	0					
ANR	1270420	ArgumentList	c [ 0 ]		1270257	1					
ANR	1270421	Argument	c [ 0 ]		1270257	0					
ANR	1270422	ArrayIndexing	c [ 0 ]		1270257	0					
ANR	1270423	Identifier	c		1270257	0					
ANR	1270424	PrimaryExpression	0		1270257	1					
ANR	1270425	Argument	p -> p [ 0 ] [ 0 ] -> c		1270257	1					
ANR	1270426	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> c		1270257	0					
ANR	1270427	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1270257	0					
ANR	1270428	ArrayIndexing	p -> p [ 0 ]		1270257	0					
ANR	1270429	PtrMemberAccess	p -> p		1270257	0					
ANR	1270430	Identifier	p		1270257	0					
ANR	1270431	Identifier	p		1270257	1					
ANR	1270432	PrimaryExpression	0		1270257	1					
ANR	1270433	PrimaryExpression	0		1270257	1					
ANR	1270434	Identifier	c		1270257	1					
ANR	1270435	Argument	p -> p [ 0 ] [ 1 ] -> c		1270257	2					
ANR	1270436	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> c		1270257	0					
ANR	1270437	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1270257	0					
ANR	1270438	ArrayIndexing	p -> p [ 0 ]		1270257	0					
ANR	1270439	PtrMemberAccess	p -> p		1270257	0					
ANR	1270440	Identifier	p		1270257	0					
ANR	1270441	Identifier	p		1270257	1					
ANR	1270442	PrimaryExpression	0		1270257	1					
ANR	1270443	PrimaryExpression	1		1270257	1					
ANR	1270444	Identifier	c		1270257	1					
ANR	1270445	Argument	pfs		1270257	3					
ANR	1270446	Identifier	pfs		1270257	0					
ANR	1270447	Argument	0.5		1270257	4					
ANR	1270448	PrimaryExpression	0.5		1270257	0					
ANR	1270449	ExpressionStatement	"patch_interpolate_color ( c [ 1 ] , p -> p [ 1 ] [ 0 ] -> c , p -> p [ 1 ] [ 1 ] -> c , pfs , 0.5 )"	2724:4:102025:102094	1270257	7	True				
ANR	1270450	CallExpression	"patch_interpolate_color ( c [ 1 ] , p -> p [ 1 ] [ 0 ] -> c , p -> p [ 1 ] [ 1 ] -> c , pfs , 0.5 )"		1270257	0					
ANR	1270451	Callee	patch_interpolate_color		1270257	0					
ANR	1270452	Identifier	patch_interpolate_color		1270257	0					
ANR	1270453	ArgumentList	c [ 1 ]		1270257	1					
ANR	1270454	Argument	c [ 1 ]		1270257	0					
ANR	1270455	ArrayIndexing	c [ 1 ]		1270257	0					
ANR	1270456	Identifier	c		1270257	0					
ANR	1270457	PrimaryExpression	1		1270257	1					
ANR	1270458	Argument	p -> p [ 1 ] [ 0 ] -> c		1270257	1					
ANR	1270459	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> c		1270257	0					
ANR	1270460	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1270257	0					
ANR	1270461	ArrayIndexing	p -> p [ 1 ]		1270257	0					
ANR	1270462	PtrMemberAccess	p -> p		1270257	0					
ANR	1270463	Identifier	p		1270257	0					
ANR	1270464	Identifier	p		1270257	1					
ANR	1270465	PrimaryExpression	1		1270257	1					
ANR	1270466	PrimaryExpression	0		1270257	1					
ANR	1270467	Identifier	c		1270257	1					
ANR	1270468	Argument	p -> p [ 1 ] [ 1 ] -> c		1270257	2					
ANR	1270469	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> c		1270257	0					
ANR	1270470	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1270257	0					
ANR	1270471	ArrayIndexing	p -> p [ 1 ]		1270257	0					
ANR	1270472	PtrMemberAccess	p -> p		1270257	0					
ANR	1270473	Identifier	p		1270257	0					
ANR	1270474	Identifier	p		1270257	1					
ANR	1270475	PrimaryExpression	1		1270257	1					
ANR	1270476	PrimaryExpression	1		1270257	1					
ANR	1270477	Identifier	c		1270257	1					
ANR	1270478	Argument	pfs		1270257	3					
ANR	1270479	Identifier	pfs		1270257	0					
ANR	1270480	Argument	0.5		1270257	4					
ANR	1270481	PrimaryExpression	0.5		1270257	0					
ANR	1270482	ExpressionStatement	s0 -> p [ 0 ] [ 0 ] = p -> p [ 0 ] [ 0 ]	2725:4:102100:102124	1270257	8	True				
ANR	1270483	AssignmentExpression	s0 -> p [ 0 ] [ 0 ] = p -> p [ 0 ] [ 0 ]		1270257	0		=			
ANR	1270484	ArrayIndexing	s0 -> p [ 0 ] [ 0 ]		1270257	0					
ANR	1270485	ArrayIndexing	s0 -> p [ 0 ]		1270257	0					
ANR	1270486	PtrMemberAccess	s0 -> p		1270257	0					
ANR	1270487	Identifier	s0		1270257	0					
ANR	1270488	Identifier	p		1270257	1					
ANR	1270489	PrimaryExpression	0		1270257	1					
ANR	1270490	PrimaryExpression	0		1270257	1					
ANR	1270491	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1270257	1					
ANR	1270492	ArrayIndexing	p -> p [ 0 ]		1270257	0					
ANR	1270493	PtrMemberAccess	p -> p		1270257	0					
ANR	1270494	Identifier	p		1270257	0					
ANR	1270495	Identifier	p		1270257	1					
ANR	1270496	PrimaryExpression	0		1270257	1					
ANR	1270497	PrimaryExpression	0		1270257	1					
ANR	1270498	ExpressionStatement	s0 -> p [ 1 ] [ 0 ] = p -> p [ 1 ] [ 0 ]	2726:4:102130:102154	1270257	9	True				
ANR	1270499	AssignmentExpression	s0 -> p [ 1 ] [ 0 ] = p -> p [ 1 ] [ 0 ]		1270257	0		=			
ANR	1270500	ArrayIndexing	s0 -> p [ 1 ] [ 0 ]		1270257	0					
ANR	1270501	ArrayIndexing	s0 -> p [ 1 ]		1270257	0					
ANR	1270502	PtrMemberAccess	s0 -> p		1270257	0					
ANR	1270503	Identifier	s0		1270257	0					
ANR	1270504	Identifier	p		1270257	1					
ANR	1270505	PrimaryExpression	1		1270257	1					
ANR	1270506	PrimaryExpression	0		1270257	1					
ANR	1270507	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1270257	1					
ANR	1270508	ArrayIndexing	p -> p [ 1 ]		1270257	0					
ANR	1270509	PtrMemberAccess	p -> p		1270257	0					
ANR	1270510	Identifier	p		1270257	0					
ANR	1270511	Identifier	p		1270257	1					
ANR	1270512	PrimaryExpression	1		1270257	1					
ANR	1270513	PrimaryExpression	0		1270257	1					
ANR	1270514	ExpressionStatement	s0 -> p [ 0 ] [ 1 ] = s1 -> p [ 0 ] [ 0 ] = & q [ 0 ]	2727:4:102160:102193	1270257	10	True				
ANR	1270515	AssignmentExpression	s0 -> p [ 0 ] [ 1 ] = s1 -> p [ 0 ] [ 0 ] = & q [ 0 ]		1270257	0		=			
ANR	1270516	ArrayIndexing	s0 -> p [ 0 ] [ 1 ]		1270257	0					
ANR	1270517	ArrayIndexing	s0 -> p [ 0 ]		1270257	0					
ANR	1270518	PtrMemberAccess	s0 -> p		1270257	0					
ANR	1270519	Identifier	s0		1270257	0					
ANR	1270520	Identifier	p		1270257	1					
ANR	1270521	PrimaryExpression	0		1270257	1					
ANR	1270522	PrimaryExpression	1		1270257	1					
ANR	1270523	AssignmentExpression	s1 -> p [ 0 ] [ 0 ] = & q [ 0 ]		1270257	1		=			
ANR	1270524	ArrayIndexing	s1 -> p [ 0 ] [ 0 ]		1270257	0					
ANR	1270525	ArrayIndexing	s1 -> p [ 0 ]		1270257	0					
ANR	1270526	PtrMemberAccess	s1 -> p		1270257	0					
ANR	1270527	Identifier	s1		1270257	0					
ANR	1270528	Identifier	p		1270257	1					
ANR	1270529	PrimaryExpression	0		1270257	1					
ANR	1270530	PrimaryExpression	0		1270257	1					
ANR	1270531	UnaryOperationExpression	& q [ 0 ]		1270257	1					
ANR	1270532	UnaryOperator	&		1270257	0					
ANR	1270533	ArrayIndexing	q [ 0 ]		1270257	1					
ANR	1270534	Identifier	q		1270257	0					
ANR	1270535	PrimaryExpression	0		1270257	1					
ANR	1270536	ExpressionStatement	s0 -> p [ 1 ] [ 1 ] = s1 -> p [ 1 ] [ 0 ] = & q [ 1 ]	2728:4:102199:102232	1270257	11	True				
ANR	1270537	AssignmentExpression	s0 -> p [ 1 ] [ 1 ] = s1 -> p [ 1 ] [ 0 ] = & q [ 1 ]		1270257	0		=			
ANR	1270538	ArrayIndexing	s0 -> p [ 1 ] [ 1 ]		1270257	0					
ANR	1270539	ArrayIndexing	s0 -> p [ 1 ]		1270257	0					
ANR	1270540	PtrMemberAccess	s0 -> p		1270257	0					
ANR	1270541	Identifier	s0		1270257	0					
ANR	1270542	Identifier	p		1270257	1					
ANR	1270543	PrimaryExpression	1		1270257	1					
ANR	1270544	PrimaryExpression	1		1270257	1					
ANR	1270545	AssignmentExpression	s1 -> p [ 1 ] [ 0 ] = & q [ 1 ]		1270257	1		=			
ANR	1270546	ArrayIndexing	s1 -> p [ 1 ] [ 0 ]		1270257	0					
ANR	1270547	ArrayIndexing	s1 -> p [ 1 ]		1270257	0					
ANR	1270548	PtrMemberAccess	s1 -> p		1270257	0					
ANR	1270549	Identifier	s1		1270257	0					
ANR	1270550	Identifier	p		1270257	1					
ANR	1270551	PrimaryExpression	1		1270257	1					
ANR	1270552	PrimaryExpression	0		1270257	1					
ANR	1270553	UnaryOperationExpression	& q [ 1 ]		1270257	1					
ANR	1270554	UnaryOperator	&		1270257	0					
ANR	1270555	ArrayIndexing	q [ 1 ]		1270257	1					
ANR	1270556	Identifier	q		1270257	0					
ANR	1270557	PrimaryExpression	1		1270257	1					
ANR	1270558	ExpressionStatement	s1 -> p [ 0 ] [ 1 ] = p -> p [ 0 ] [ 1 ]	2729:4:102238:102262	1270257	12	True				
ANR	1270559	AssignmentExpression	s1 -> p [ 0 ] [ 1 ] = p -> p [ 0 ] [ 1 ]		1270257	0		=			
ANR	1270560	ArrayIndexing	s1 -> p [ 0 ] [ 1 ]		1270257	0					
ANR	1270561	ArrayIndexing	s1 -> p [ 0 ]		1270257	0					
ANR	1270562	PtrMemberAccess	s1 -> p		1270257	0					
ANR	1270563	Identifier	s1		1270257	0					
ANR	1270564	Identifier	p		1270257	1					
ANR	1270565	PrimaryExpression	0		1270257	1					
ANR	1270566	PrimaryExpression	1		1270257	1					
ANR	1270567	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1270257	1					
ANR	1270568	ArrayIndexing	p -> p [ 0 ]		1270257	0					
ANR	1270569	PtrMemberAccess	p -> p		1270257	0					
ANR	1270570	Identifier	p		1270257	0					
ANR	1270571	Identifier	p		1270257	1					
ANR	1270572	PrimaryExpression	0		1270257	1					
ANR	1270573	PrimaryExpression	1		1270257	1					
ANR	1270574	ExpressionStatement	s1 -> p [ 1 ] [ 1 ] = p -> p [ 1 ] [ 1 ]	2730:4:102268:102292	1270257	13	True				
ANR	1270575	AssignmentExpression	s1 -> p [ 1 ] [ 1 ] = p -> p [ 1 ] [ 1 ]		1270257	0		=			
ANR	1270576	ArrayIndexing	s1 -> p [ 1 ] [ 1 ]		1270257	0					
ANR	1270577	ArrayIndexing	s1 -> p [ 1 ]		1270257	0					
ANR	1270578	PtrMemberAccess	s1 -> p		1270257	0					
ANR	1270579	Identifier	s1		1270257	0					
ANR	1270580	Identifier	p		1270257	1					
ANR	1270581	PrimaryExpression	1		1270257	1					
ANR	1270582	PrimaryExpression	1		1270257	1					
ANR	1270583	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1270257	1					
ANR	1270584	ArrayIndexing	p -> p [ 1 ]		1270257	0					
ANR	1270585	PtrMemberAccess	p -> p		1270257	0					
ANR	1270586	Identifier	p		1270257	0					
ANR	1270587	Identifier	p		1270257	1					
ANR	1270588	PrimaryExpression	1		1270257	1					
ANR	1270589	PrimaryExpression	1		1270257	1					
ANR	1270590	ReturnType	static inline void		1270257	1					
ANR	1270591	Identifier	divide_quadrangle_by_u		1270257	2					
ANR	1270592	ParameterList	"patch_fill_state_t * pfs , quadrangle_patch * s0 , quadrangle_patch * s1 , shading_vertex_t q [ 2 ] , const quadrangle_patch * p , patch_color_t * c [ 2 ]"		1270257	3					
ANR	1270593	Parameter	patch_fill_state_t * pfs	2714:23:101530:101552	1270257	0	True				
ANR	1270594	ParameterType	patch_fill_state_t *		1270257	0					
ANR	1270595	Identifier	pfs		1270257	1					
ANR	1270596	Parameter	quadrangle_patch * s0	2714:48:101555:101574	1270257	1	True				
ANR	1270597	ParameterType	quadrangle_patch *		1270257	0					
ANR	1270598	Identifier	s0		1270257	1					
ANR	1270599	Parameter	quadrangle_patch * s1	2714:70:101577:101596	1270257	2	True				
ANR	1270600	ParameterType	quadrangle_patch *		1270257	0					
ANR	1270601	Identifier	s1		1270257	1					
ANR	1270602	Parameter	shading_vertex_t q [ 2 ]	2715:12:101611:101631	1270257	3	True				
ANR	1270603	ParameterType	shading_vertex_t [ 2 ]		1270257	0					
ANR	1270604	Identifier	q		1270257	1					
ANR	1270605	Parameter	const quadrangle_patch * p	2715:35:101634:101658	1270257	4	True				
ANR	1270606	ParameterType	const quadrangle_patch *		1270257	0					
ANR	1270607	Identifier	p		1270257	1					
ANR	1270608	Parameter	patch_color_t * c [ 2 ]	2715:62:101661:101679	1270257	5	True				
ANR	1270609	ParameterType	patch_color_t * [ 2 ]		1270257	0					
ANR	1270610	Identifier	c		1270257	1					
ANR	1270611	CFGEntryNode	ENTRY		1270257		True				
ANR	1270612	CFGExitNode	EXIT		1270257		True				
ANR	1270613	Symbol	q [ 0 ] . c		1270257						
ANR	1270614	Symbol	* * * s0		1270257						
ANR	1270615	Symbol	p -> p		1270257						
ANR	1270616	Symbol	* * * * p		1270257						
ANR	1270617	Symbol	* p -> p		1270257						
ANR	1270618	Symbol	* * s1		1270257						
ANR	1270619	Symbol	p -> p [ 1 ] [ 1 ] -> p . y		1270257						
ANR	1270620	Symbol	p -> p [ 1 ] [ 1 ] -> p . x		1270257						
ANR	1270621	Symbol	* * s0		1270257						
ANR	1270622	Symbol	p -> p [ 0 ] [ 1 ] -> p		1270257						
ANR	1270623	Symbol	* * * p -> p		1270257						
ANR	1270624	Symbol	* * p -> p		1270257						
ANR	1270625	Symbol	p -> p [ 0 ] [ 1 ] -> p . y		1270257						
ANR	1270626	Symbol	p -> p [ 0 ] [ 0 ] -> c		1270257						
ANR	1270627	Symbol	q [ 0 ] . p		1270257						
ANR	1270628	Symbol	p -> p [ 0 ] [ 1 ] -> p . x		1270257						
ANR	1270629	Symbol	s0		1270257						
ANR	1270630	Symbol	s1		1270257						
ANR	1270631	Symbol	p -> p [ 0 ] [ 1 ] -> c		1270257						
ANR	1270632	Symbol	q [ 1 ] . p		1270257						
ANR	1270633	Symbol	* * * p		1270257						
ANR	1270634	Symbol	p -> p [ 1 ] [ 0 ] -> p . y		1270257						
ANR	1270635	Symbol	* * s0 -> p		1270257						
ANR	1270636	Symbol	q [ 1 ] . p . x		1270257						
ANR	1270637	Symbol	p -> p [ 1 ] [ 0 ] -> p . x		1270257						
ANR	1270638	Symbol	q [ 1 ] . p . y		1270257						
ANR	1270639	Symbol	pfs		1270257						
ANR	1270640	Symbol	q [ 1 ] . c		1270257						
ANR	1270641	Symbol	* s0		1270257						
ANR	1270642	Symbol	* s1		1270257						
ANR	1270643	Symbol	s0 -> p		1270257						
ANR	1270644	Symbol	p -> p [ 0 ] [ 0 ] -> p . x		1270257						
ANR	1270645	Symbol	p -> p [ 0 ] [ 0 ] -> p . y		1270257						
ANR	1270646	Symbol	* s1 -> p		1270257						
ANR	1270647	Symbol	p -> p [ 1 ] [ 1 ] -> p		1270257						
ANR	1270648	Symbol	p -> p [ 1 ] [ 0 ] -> p		1270257						
ANR	1270649	Symbol	* * p		1270257						
ANR	1270650	Symbol	p -> p [ 1 ] [ 0 ] -> c		1270257						
ANR	1270651	Symbol	p -> p [ 1 ] [ 1 ] -> c		1270257						
ANR	1270652	Symbol	q [ 0 ] . p . y		1270257						
ANR	1270653	Symbol	s1 -> p		1270257						
ANR	1270654	Symbol	q [ 0 ] . p . x		1270257						
ANR	1270655	Symbol	* * s1 -> p		1270257						
ANR	1270656	Symbol	c		1270257						
ANR	1270657	Symbol	* s0 -> p		1270257						
ANR	1270658	Symbol	p -> p [ 0 ] [ 0 ] -> p		1270257						
ANR	1270659	Symbol	* c		1270257						
ANR	1270660	Symbol	p		1270257						
ANR	1270661	Symbol	q		1270257						
ANR	1270662	Symbol	* p		1270257						
ANR	1270663	Symbol	* * * s1		1270257						
ANR	1270664	Symbol	* q		1270257						
ANR	1270665	Function	is_quadrangle_color_monotonic	2733:0:102297:102835							
ANR	1270666	FunctionDef	"is_quadrangle_color_monotonic (const patch_fill_state_t * pfs , const quadrangle_patch * p , bool * not_monotonic_by_u , bool * not_monotonic_by_v)"		1270665	0					
ANR	1270667	CompoundStatement		2736:0:102485:102835	1270665	0					
ANR	1270668	IdentifierDeclStatement	"int code , r ;"	2737:4:102552:102563	1270665	0	True				
ANR	1270669	IdentifierDecl	code		1270665	0					
ANR	1270670	IdentifierDeclType	int		1270665	0					
ANR	1270671	Identifier	code		1270665	1					
ANR	1270672	IdentifierDecl	r		1270665	1					
ANR	1270673	IdentifierDeclType	int		1270665	0					
ANR	1270674	Identifier	r		1270665	1					
ANR	1270675	ExpressionStatement	"code = isnt_color_monotonic ( pfs , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 1 ] [ 1 ] -> c )"	2739:4:102570:102632	1270665	1	True				
ANR	1270676	AssignmentExpression	"code = isnt_color_monotonic ( pfs , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 1 ] [ 1 ] -> c )"		1270665	0		=			
ANR	1270677	Identifier	code		1270665	0					
ANR	1270678	CallExpression	"isnt_color_monotonic ( pfs , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 1 ] [ 1 ] -> c )"		1270665	1					
ANR	1270679	Callee	isnt_color_monotonic		1270665	0					
ANR	1270680	Identifier	isnt_color_monotonic		1270665	0					
ANR	1270681	ArgumentList	pfs		1270665	1					
ANR	1270682	Argument	pfs		1270665	0					
ANR	1270683	Identifier	pfs		1270665	0					
ANR	1270684	Argument	p -> p [ 0 ] [ 0 ] -> c		1270665	1					
ANR	1270685	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> c		1270665	0					
ANR	1270686	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1270665	0					
ANR	1270687	ArrayIndexing	p -> p [ 0 ]		1270665	0					
ANR	1270688	PtrMemberAccess	p -> p		1270665	0					
ANR	1270689	Identifier	p		1270665	0					
ANR	1270690	Identifier	p		1270665	1					
ANR	1270691	PrimaryExpression	0		1270665	1					
ANR	1270692	PrimaryExpression	0		1270665	1					
ANR	1270693	Identifier	c		1270665	1					
ANR	1270694	Argument	p -> p [ 1 ] [ 1 ] -> c		1270665	2					
ANR	1270695	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> c		1270665	0					
ANR	1270696	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1270665	0					
ANR	1270697	ArrayIndexing	p -> p [ 1 ]		1270665	0					
ANR	1270698	PtrMemberAccess	p -> p		1270665	0					
ANR	1270699	Identifier	p		1270665	0					
ANR	1270700	Identifier	p		1270665	1					
ANR	1270701	PrimaryExpression	1		1270665	1					
ANR	1270702	PrimaryExpression	1		1270665	1					
ANR	1270703	Identifier	c		1270665	1					
ANR	1270704	IfStatement	if ( code <= 0 )		1270665	2					
ANR	1270705	Condition	code <= 0	2740:8:102642:102650	1270665	0	True				
ANR	1270706	RelationalExpression	code <= 0		1270665	0		<=			
ANR	1270707	Identifier	code		1270665	0					
ANR	1270708	PrimaryExpression	0		1270665	1					
ANR	1270709	ReturnStatement	return code ;	2741:8:102661:102672	1270665	1	True				
ANR	1270710	Identifier	code		1270665	0					
ANR	1270711	ExpressionStatement	r = code << pfs -> function_arg_shift	2742:4:102678:102713	1270665	3	True				
ANR	1270712	AssignmentExpression	r = code << pfs -> function_arg_shift		1270665	0		=			
ANR	1270713	Identifier	r		1270665	0					
ANR	1270714	ShiftExpression	code << pfs -> function_arg_shift		1270665	1		<<			
ANR	1270715	Identifier	code		1270665	0					
ANR	1270716	PtrMemberAccess	pfs -> function_arg_shift		1270665	1					
ANR	1270717	Identifier	pfs		1270665	0					
ANR	1270718	Identifier	function_arg_shift		1270665	1					
ANR	1270719	IfStatement	if ( r & 1 )		1270665	4					
ANR	1270720	Condition	r & 1	2743:8:102723:102727	1270665	0	True				
ANR	1270721	BitAndExpression	r & 1		1270665	0		&			
ANR	1270722	Identifier	r		1270665	0					
ANR	1270723	PrimaryExpression	1		1270665	1					
ANR	1270724	ExpressionStatement	* not_monotonic_by_u = true	2744:8:102738:102764	1270665	1	True				
ANR	1270725	AssignmentExpression	* not_monotonic_by_u = true		1270665	0		=			
ANR	1270726	UnaryOperationExpression	* not_monotonic_by_u		1270665	0					
ANR	1270727	UnaryOperator	*		1270665	0					
ANR	1270728	Identifier	not_monotonic_by_u		1270665	1					
ANR	1270729	Identifier	true		1270665	1					
ANR	1270730	IfStatement	if ( r & 2 )		1270665	5					
ANR	1270731	Condition	r & 2	2745:8:102774:102778	1270665	0	True				
ANR	1270732	BitAndExpression	r & 2		1270665	0		&			
ANR	1270733	Identifier	r		1270665	0					
ANR	1270734	PrimaryExpression	2		1270665	1					
ANR	1270735	ExpressionStatement	* not_monotonic_by_v = true	2746:8:102789:102815	1270665	1	True				
ANR	1270736	AssignmentExpression	* not_monotonic_by_v = true		1270665	0		=			
ANR	1270737	UnaryOperationExpression	* not_monotonic_by_v		1270665	0					
ANR	1270738	UnaryOperator	*		1270665	0					
ANR	1270739	Identifier	not_monotonic_by_v		1270665	1					
ANR	1270740	Identifier	true		1270665	1					
ANR	1270741	ReturnStatement	return ! code ;	2747:4:102821:102833	1270665	6	True				
ANR	1270742	UnaryOperationExpression	! code		1270665	0					
ANR	1270743	UnaryOperator	!		1270665	0					
ANR	1270744	Identifier	code		1270665	1					
ANR	1270745	ReturnType	static inline int		1270665	1					
ANR	1270746	Identifier	is_quadrangle_color_monotonic		1270665	2					
ANR	1270747	ParameterList	"const patch_fill_state_t * pfs , const quadrangle_patch * p , bool * not_monotonic_by_u , bool * not_monotonic_by_v"		1270665	3					
ANR	1270748	Parameter	const patch_fill_state_t * pfs	2734:30:102345:102373	1270665	0	True				
ANR	1270749	ParameterType	const patch_fill_state_t *		1270665	0					
ANR	1270750	Identifier	pfs		1270665	1					
ANR	1270751	Parameter	const quadrangle_patch * p	2734:61:102376:102400	1270665	1	True				
ANR	1270752	ParameterType	const quadrangle_patch *		1270665	0					
ANR	1270753	Identifier	p		1270665	1					
ANR	1270754	Parameter	bool * not_monotonic_by_u	2735:30:102433:102456	1270665	2	True				
ANR	1270755	ParameterType	bool *		1270665	0					
ANR	1270756	Identifier	not_monotonic_by_u		1270665	1					
ANR	1270757	Parameter	bool * not_monotonic_by_v	2735:56:102459:102482	1270665	3	True				
ANR	1270758	ParameterType	bool *		1270665	0					
ANR	1270759	Identifier	not_monotonic_by_v		1270665	1					
ANR	1270760	CFGEntryNode	ENTRY		1270665		True				
ANR	1270761	CFGExitNode	EXIT		1270665		True				
ANR	1270762	Symbol	code		1270665						
ANR	1270763	Symbol	p -> p		1270665						
ANR	1270764	Symbol	* * * * p		1270665						
ANR	1270765	Symbol	* pfs		1270665						
ANR	1270766	Symbol	* p -> p		1270665						
ANR	1270767	Symbol	* not_monotonic_by_v		1270665						
ANR	1270768	Symbol	* not_monotonic_by_u		1270665						
ANR	1270769	Symbol	isnt_color_monotonic		1270665						
ANR	1270770	Symbol	p		1270665						
ANR	1270771	Symbol	* * * p		1270665						
ANR	1270772	Symbol	r		1270665						
ANR	1270773	Symbol	pfs -> function_arg_shift		1270665						
ANR	1270774	Symbol	* * * p -> p		1270665						
ANR	1270775	Symbol	* * p -> p		1270665						
ANR	1270776	Symbol	p -> p [ 0 ] [ 0 ] -> c		1270665						
ANR	1270777	Symbol	true		1270665						
ANR	1270778	Symbol	not_monotonic_by_u		1270665						
ANR	1270779	Symbol	* p		1270665						
ANR	1270780	Symbol	not_monotonic_by_v		1270665						
ANR	1270781	Symbol	p -> p [ 1 ] [ 1 ] -> c		1270665						
ANR	1270782	Symbol	* * p		1270665						
ANR	1270783	Symbol	pfs		1270665						
ANR	1270784	Function	divide_bar	2750:0:102838:103303							
ANR	1270785	FunctionDef	"divide_bar (patch_fill_state_t * pfs , const shading_vertex_t * p0 , const shading_vertex_t * p1 , int radix , shading_vertex_t * p , patch_color_t * c)"		1270784	0					
ANR	1270786	CompoundStatement		2754:0:103015:103303	1270784	0					
ANR	1270787	ExpressionStatement	p -> p . x = ( fixed ) ( ( int64_t ) p0 -> p . x * ( radix - 1 ) + p1 -> p . x ) / radix	2756:4:103083:103149	1270784	0	True				
ANR	1270788	AssignmentExpression	p -> p . x = ( fixed ) ( ( int64_t ) p0 -> p . x * ( radix - 1 ) + p1 -> p . x ) / radix		1270784	0		=			
ANR	1270789	MemberAccess	p -> p . x		1270784	0					
ANR	1270790	PtrMemberAccess	p -> p		1270784	0					
ANR	1270791	Identifier	p		1270784	0					
ANR	1270792	Identifier	p		1270784	1					
ANR	1270793	Identifier	x		1270784	1					
ANR	1270794	MultiplicativeExpression	( fixed ) ( ( int64_t ) p0 -> p . x * ( radix - 1 ) + p1 -> p . x ) / radix		1270784	1		/			
ANR	1270795	CastExpression	( fixed ) ( ( int64_t ) p0 -> p . x * ( radix - 1 ) + p1 -> p . x )		1270784	0					
ANR	1270796	CastTarget	fixed		1270784	0					
ANR	1270797	AdditiveExpression	( int64_t ) p0 -> p . x * ( radix - 1 ) + p1 -> p . x		1270784	1		+			
ANR	1270798	MultiplicativeExpression	( int64_t ) p0 -> p . x * ( radix - 1 )		1270784	0		*			
ANR	1270799	CastExpression	( int64_t ) p0 -> p . x		1270784	0					
ANR	1270800	CastTarget	int64_t		1270784	0					
ANR	1270801	MemberAccess	p0 -> p . x		1270784	1					
ANR	1270802	PtrMemberAccess	p0 -> p		1270784	0					
ANR	1270803	Identifier	p0		1270784	0					
ANR	1270804	Identifier	p		1270784	1					
ANR	1270805	Identifier	x		1270784	1					
ANR	1270806	AdditiveExpression	radix - 1		1270784	1		-			
ANR	1270807	Identifier	radix		1270784	0					
ANR	1270808	PrimaryExpression	1		1270784	1					
ANR	1270809	MemberAccess	p1 -> p . x		1270784	1					
ANR	1270810	PtrMemberAccess	p1 -> p		1270784	0					
ANR	1270811	Identifier	p1		1270784	0					
ANR	1270812	Identifier	p		1270784	1					
ANR	1270813	Identifier	x		1270784	1					
ANR	1270814	Identifier	radix		1270784	1					
ANR	1270815	ExpressionStatement	p -> p . y = ( fixed ) ( ( int64_t ) p0 -> p . y * ( radix - 1 ) + p1 -> p . y ) / radix	2757:4:103155:103221	1270784	1	True				
ANR	1270816	AssignmentExpression	p -> p . y = ( fixed ) ( ( int64_t ) p0 -> p . y * ( radix - 1 ) + p1 -> p . y ) / radix		1270784	0		=			
ANR	1270817	MemberAccess	p -> p . y		1270784	0					
ANR	1270818	PtrMemberAccess	p -> p		1270784	0					
ANR	1270819	Identifier	p		1270784	0					
ANR	1270820	Identifier	p		1270784	1					
ANR	1270821	Identifier	y		1270784	1					
ANR	1270822	MultiplicativeExpression	( fixed ) ( ( int64_t ) p0 -> p . y * ( radix - 1 ) + p1 -> p . y ) / radix		1270784	1		/			
ANR	1270823	CastExpression	( fixed ) ( ( int64_t ) p0 -> p . y * ( radix - 1 ) + p1 -> p . y )		1270784	0					
ANR	1270824	CastTarget	fixed		1270784	0					
ANR	1270825	AdditiveExpression	( int64_t ) p0 -> p . y * ( radix - 1 ) + p1 -> p . y		1270784	1		+			
ANR	1270826	MultiplicativeExpression	( int64_t ) p0 -> p . y * ( radix - 1 )		1270784	0		*			
ANR	1270827	CastExpression	( int64_t ) p0 -> p . y		1270784	0					
ANR	1270828	CastTarget	int64_t		1270784	0					
ANR	1270829	MemberAccess	p0 -> p . y		1270784	1					
ANR	1270830	PtrMemberAccess	p0 -> p		1270784	0					
ANR	1270831	Identifier	p0		1270784	0					
ANR	1270832	Identifier	p		1270784	1					
ANR	1270833	Identifier	y		1270784	1					
ANR	1270834	AdditiveExpression	radix - 1		1270784	1		-			
ANR	1270835	Identifier	radix		1270784	0					
ANR	1270836	PrimaryExpression	1		1270784	1					
ANR	1270837	MemberAccess	p1 -> p . y		1270784	1					
ANR	1270838	PtrMemberAccess	p1 -> p		1270784	0					
ANR	1270839	Identifier	p1		1270784	0					
ANR	1270840	Identifier	p		1270784	1					
ANR	1270841	Identifier	y		1270784	1					
ANR	1270842	Identifier	radix		1270784	1					
ANR	1270843	ExpressionStatement	"patch_interpolate_color ( c , p0 -> c , p1 -> c , pfs , ( double ) ( radix - 1 ) / radix )"	2758:4:103227:103301	1270784	2	True				
ANR	1270844	CallExpression	"patch_interpolate_color ( c , p0 -> c , p1 -> c , pfs , ( double ) ( radix - 1 ) / radix )"		1270784	0					
ANR	1270845	Callee	patch_interpolate_color		1270784	0					
ANR	1270846	Identifier	patch_interpolate_color		1270784	0					
ANR	1270847	ArgumentList	c		1270784	1					
ANR	1270848	Argument	c		1270784	0					
ANR	1270849	Identifier	c		1270784	0					
ANR	1270850	Argument	p0 -> c		1270784	1					
ANR	1270851	PtrMemberAccess	p0 -> c		1270784	0					
ANR	1270852	Identifier	p0		1270784	0					
ANR	1270853	Identifier	c		1270784	1					
ANR	1270854	Argument	p1 -> c		1270784	2					
ANR	1270855	PtrMemberAccess	p1 -> c		1270784	0					
ANR	1270856	Identifier	p1		1270784	0					
ANR	1270857	Identifier	c		1270784	1					
ANR	1270858	Argument	pfs		1270784	3					
ANR	1270859	Identifier	pfs		1270784	0					
ANR	1270860	Argument	( double ) ( radix - 1 ) / radix		1270784	4					
ANR	1270861	MultiplicativeExpression	( double ) ( radix - 1 ) / radix		1270784	0		/			
ANR	1270862	CastExpression	( double ) ( radix - 1 )		1270784	0					
ANR	1270863	CastTarget	double		1270784	0					
ANR	1270864	AdditiveExpression	radix - 1		1270784	1		-			
ANR	1270865	Identifier	radix		1270784	0					
ANR	1270866	PrimaryExpression	1		1270784	1					
ANR	1270867	Identifier	radix		1270784	1					
ANR	1270868	ReturnType	static inline void		1270784	1					
ANR	1270869	Identifier	divide_bar		1270784	2					
ANR	1270870	ParameterList	"patch_fill_state_t * pfs , const shading_vertex_t * p0 , const shading_vertex_t * p1 , int radix , shading_vertex_t * p , patch_color_t * c"		1270784	3					
ANR	1270871	Parameter	patch_fill_state_t * pfs	2751:11:102868:102890	1270784	0	True				
ANR	1270872	ParameterType	patch_fill_state_t *		1270784	0					
ANR	1270873	Identifier	pfs		1270784	1					
ANR	1270874	Parameter	const shading_vertex_t * p0	2752:8:102901:102926	1270784	1	True				
ANR	1270875	ParameterType	const shading_vertex_t *		1270784	0					
ANR	1270876	Identifier	p0		1270784	1					
ANR	1270877	Parameter	const shading_vertex_t * p1	2752:36:102929:102954	1270784	2	True				
ANR	1270878	ParameterType	const shading_vertex_t *		1270784	0					
ANR	1270879	Identifier	p1		1270784	1					
ANR	1270880	Parameter	int radix	2752:64:102957:102965	1270784	3	True				
ANR	1270881	ParameterType	int		1270784	0					
ANR	1270882	Identifier	radix		1270784	1					
ANR	1270883	Parameter	shading_vertex_t * p	2752:75:102968:102986	1270784	4	True				
ANR	1270884	ParameterType	shading_vertex_t *		1270784	0					
ANR	1270885	Identifier	p		1270784	1					
ANR	1270886	Parameter	patch_color_t * c	2753:8:102997:103012	1270784	5	True				
ANR	1270887	ParameterType	patch_color_t *		1270784	0					
ANR	1270888	Identifier	c		1270784	1					
ANR	1270889	CFGEntryNode	ENTRY		1270784		True				
ANR	1270890	CFGExitNode	EXIT		1270784		True				
ANR	1270891	Symbol	p0		1270784						
ANR	1270892	Symbol	p1		1270784						
ANR	1270893	Symbol	c		1270784						
ANR	1270894	Symbol	p -> p . y		1270784						
ANR	1270895	Symbol	* p1		1270784						
ANR	1270896	Symbol	* p0		1270784						
ANR	1270897	Symbol	p0 -> p . y		1270784						
ANR	1270898	Symbol	p -> p		1270784						
ANR	1270899	Symbol	p0 -> p . x		1270784						
ANR	1270900	Symbol	p -> p . x		1270784						
ANR	1270901	Symbol	p0 -> c		1270784						
ANR	1270902	Symbol	p1 -> p		1270784						
ANR	1270903	Symbol	radix		1270784						
ANR	1270904	Symbol	p		1270784						
ANR	1270905	Symbol	p1 -> p . x		1270784						
ANR	1270906	Symbol	p1 -> p . y		1270784						
ANR	1270907	Symbol	* p		1270784						
ANR	1270908	Symbol	p0 -> p		1270784						
ANR	1270909	Symbol	pfs		1270784						
ANR	1270910	Symbol	p1 -> c		1270784						
ANR	1270911	Function	triangle_by_4	2761:0:103306:108161							
ANR	1270912	FunctionDef	"triangle_by_4 (patch_fill_state_t * pfs , const shading_vertex_t * p0 , const shading_vertex_t * p1 , const shading_vertex_t * p2 , wedge_vertex_list_t * l01 , wedge_vertex_list_t * l12 , wedge_vertex_list_t * l20 , double cd , fixed sd)"		1270911	0					
ANR	1270913	CompoundStatement		2766:0:103563:108161	1270911	0					
ANR	1270914	IdentifierDeclStatement	"shading_vertex_t p01 , p12 , p20 ;"	2767:4:103569:103599	1270911	0	True				
ANR	1270915	IdentifierDecl	p01		1270911	0					
ANR	1270916	IdentifierDeclType	shading_vertex_t		1270911	0					
ANR	1270917	Identifier	p01		1270911	1					
ANR	1270918	IdentifierDecl	p12		1270911	1					
ANR	1270919	IdentifierDeclType	shading_vertex_t		1270911	0					
ANR	1270920	Identifier	p12		1270911	1					
ANR	1270921	IdentifierDecl	p20		1270911	2					
ANR	1270922	IdentifierDeclType	shading_vertex_t		1270911	0					
ANR	1270923	Identifier	p20		1270911	1					
ANR	1270924	IdentifierDeclStatement	patch_color_t * c [ 3 ] ;	2768:4:103605:103624	1270911	1	True				
ANR	1270925	IdentifierDecl	* c [ 3 ]		1270911	0					
ANR	1270926	IdentifierDeclType	patch_color_t * [ 3 ]		1270911	0					
ANR	1270927	Identifier	c		1270911	1					
ANR	1270928	PrimaryExpression	3		1270911	2					
ANR	1270929	IdentifierDeclStatement	"wedge_vertex_list_t L01 , L12 , L20 , L [ 3 ] ;"	2769:4:103630:103669	1270911	2	True				
ANR	1270930	IdentifierDecl	L01		1270911	0					
ANR	1270931	IdentifierDeclType	wedge_vertex_list_t		1270911	0					
ANR	1270932	Identifier	L01		1270911	1					
ANR	1270933	IdentifierDecl	L12		1270911	1					
ANR	1270934	IdentifierDeclType	wedge_vertex_list_t		1270911	0					
ANR	1270935	Identifier	L12		1270911	1					
ANR	1270936	IdentifierDecl	L20		1270911	2					
ANR	1270937	IdentifierDeclType	wedge_vertex_list_t		1270911	0					
ANR	1270938	Identifier	L20		1270911	1					
ANR	1270939	IdentifierDecl	L [ 3 ]		1270911	3					
ANR	1270940	IdentifierDeclType	wedge_vertex_list_t [ 3 ]		1270911	0					
ANR	1270941	Identifier	L		1270911	1					
ANR	1270942	PrimaryExpression	3		1270911	2					
ANR	1270943	IdentifierDeclStatement	bool inside_save = pfs -> inside ;	2770:4:103675:103705	1270911	3	True				
ANR	1270944	IdentifierDecl	inside_save = pfs -> inside		1270911	0					
ANR	1270945	IdentifierDeclType	bool		1270911	0					
ANR	1270946	Identifier	inside_save		1270911	1					
ANR	1270947	AssignmentExpression	inside_save = pfs -> inside		1270911	2		=			
ANR	1270948	Identifier	inside_save		1270911	0					
ANR	1270949	PtrMemberAccess	pfs -> inside		1270911	1					
ANR	1270950	Identifier	pfs		1270911	0					
ANR	1270951	Identifier	inside		1270911	1					
ANR	1270952	IdentifierDeclStatement	"gs_fixed_rect r = { { 0 , 0 } , { 0 , 0 } } , r1 = { { 0 , 0 } , { 0 , 0 } } ;"	2771:4:103711:103763	1270911	4	True				
ANR	1270953	IdentifierDecl	"r = { { 0 , 0 } , { 0 , 0 } }"		1270911	0					
ANR	1270954	IdentifierDeclType	gs_fixed_rect		1270911	0					
ANR	1270955	Identifier	r		1270911	1					
ANR	1270956	AssignmentExpression	"r = { { 0 , 0 } , { 0 , 0 } }"		1270911	2		=			
ANR	1270957	Identifier	r		1270911	0					
ANR	1270958	InitializerList	0		1270911	1					
ANR	1270959	InitializerList	0		1270911	0					
ANR	1270960	PrimaryExpression	0		1270911	0					
ANR	1270961	PrimaryExpression	0		1270911	1					
ANR	1270962	InitializerList	0		1270911	1					
ANR	1270963	PrimaryExpression	0		1270911	0					
ANR	1270964	PrimaryExpression	0		1270911	1					
ANR	1270965	IdentifierDecl	"r1 = { { 0 , 0 } , { 0 , 0 } }"		1270911	1					
ANR	1270966	IdentifierDeclType	gs_fixed_rect		1270911	0					
ANR	1270967	Identifier	r1		1270911	1					
ANR	1270968	AssignmentExpression	"r1 = { { 0 , 0 } , { 0 , 0 } }"		1270911	2		=			
ANR	1270969	Identifier	r1		1270911	0					
ANR	1270970	InitializerList	0		1270911	1					
ANR	1270971	InitializerList	0		1270911	0					
ANR	1270972	PrimaryExpression	0		1270911	0					
ANR	1270973	PrimaryExpression	0		1270911	1					
ANR	1270974	InitializerList	0		1270911	1					
ANR	1270975	PrimaryExpression	0		1270911	0					
ANR	1270976	PrimaryExpression	0		1270911	1					
ANR	1270977	IdentifierDeclStatement	int code = 0 ;	2772:4:103769:103781	1270911	5	True				
ANR	1270978	IdentifierDecl	code = 0		1270911	0					
ANR	1270979	IdentifierDeclType	int		1270911	0					
ANR	1270980	Identifier	code		1270911	1					
ANR	1270981	AssignmentExpression	code = 0		1270911	2		=			
ANR	1270982	Identifier	code		1270911	0					
ANR	1270983	PrimaryExpression	0		1270911	1					
ANR	1270984	IdentifierDeclStatement	byte * color_stack_ptr ;	2773:4:103787:103808	1270911	6	True				
ANR	1270985	IdentifierDecl	* color_stack_ptr		1270911	0					
ANR	1270986	IdentifierDeclType	byte *		1270911	0					
ANR	1270987	Identifier	color_stack_ptr		1270911	1					
ANR	1270988	IdentifierDeclStatement	const bool inside = pfs -> inside ;	2774:4:103814:103845	1270911	7	True				
ANR	1270989	IdentifierDecl	inside = pfs -> inside		1270911	0					
ANR	1270990	IdentifierDeclType	const bool		1270911	0					
ANR	1270991	Identifier	inside		1270911	1					
ANR	1270992	AssignmentExpression	inside = pfs -> inside		1270911	2		=			
ANR	1270993	Identifier	inside		1270911	0					
ANR	1270994	PtrMemberAccess	pfs -> inside		1270911	1					
ANR	1270995	Identifier	pfs		1270911	0					
ANR	1270996	Identifier	inside		1270911	1					
ANR	1270997	IfStatement	if ( ! inside )		1270911	8					
ANR	1270998	Condition	! inside	2776:8:103919:103925	1270911	0	True				
ANR	1270999	UnaryOperationExpression	! inside		1270911	0					
ANR	1271000	UnaryOperator	!		1270911	0					
ANR	1271001	Identifier	inside		1270911	1					
ANR	1271002	CompoundStatement		11:17:364:364	1270911	1					
ANR	1271003	ExpressionStatement	"bbox_of_points ( & r , & p0 -> p , & p1 -> p , & p2 -> p , NULL )"	2777:8:103938:103986	1270911	0	True				
ANR	1271004	CallExpression	"bbox_of_points ( & r , & p0 -> p , & p1 -> p , & p2 -> p , NULL )"		1270911	0					
ANR	1271005	Callee	bbox_of_points		1270911	0					
ANR	1271006	Identifier	bbox_of_points		1270911	0					
ANR	1271007	ArgumentList	& r		1270911	1					
ANR	1271008	Argument	& r		1270911	0					
ANR	1271009	UnaryOperationExpression	& r		1270911	0					
ANR	1271010	UnaryOperator	&		1270911	0					
ANR	1271011	Identifier	r		1270911	1					
ANR	1271012	Argument	& p0 -> p		1270911	1					
ANR	1271013	UnaryOperationExpression	& p0 -> p		1270911	0					
ANR	1271014	UnaryOperator	&		1270911	0					
ANR	1271015	PtrMemberAccess	p0 -> p		1270911	1					
ANR	1271016	Identifier	p0		1270911	0					
ANR	1271017	Identifier	p		1270911	1					
ANR	1271018	Argument	& p1 -> p		1270911	2					
ANR	1271019	UnaryOperationExpression	& p1 -> p		1270911	0					
ANR	1271020	UnaryOperator	&		1270911	0					
ANR	1271021	PtrMemberAccess	p1 -> p		1270911	1					
ANR	1271022	Identifier	p1		1270911	0					
ANR	1271023	Identifier	p		1270911	1					
ANR	1271024	Argument	& p2 -> p		1270911	3					
ANR	1271025	UnaryOperationExpression	& p2 -> p		1270911	0					
ANR	1271026	UnaryOperator	&		1270911	0					
ANR	1271027	PtrMemberAccess	p2 -> p		1270911	1					
ANR	1271028	Identifier	p2		1270911	0					
ANR	1271029	Identifier	p		1270911	1					
ANR	1271030	Argument	NULL		1270911	4					
ANR	1271031	Identifier	NULL		1270911	0					
ANR	1271032	ExpressionStatement	r1 = r	2778:8:103996:104002	1270911	1	True				
ANR	1271033	AssignmentExpression	r1 = r		1270911	0		=			
ANR	1271034	Identifier	r1		1270911	0					
ANR	1271035	Identifier	r		1270911	1					
ANR	1271036	ExpressionStatement	"rect_intersect ( r , pfs -> rect )"	2779:8:104012:104040	1270911	2	True				
ANR	1271037	CallExpression	"rect_intersect ( r , pfs -> rect )"		1270911	0					
ANR	1271038	Callee	rect_intersect		1270911	0					
ANR	1271039	Identifier	rect_intersect		1270911	0					
ANR	1271040	ArgumentList	r		1270911	1					
ANR	1271041	Argument	r		1270911	0					
ANR	1271042	Identifier	r		1270911	0					
ANR	1271043	Argument	pfs -> rect		1270911	1					
ANR	1271044	PtrMemberAccess	pfs -> rect		1270911	0					
ANR	1271045	Identifier	pfs		1270911	0					
ANR	1271046	Identifier	rect		1270911	1					
ANR	1271047	IfStatement	if ( r . q . x <= r . p . x || r . q . y <= r . p . y )		1270911	3					
ANR	1271048	Condition	r . q . x <= r . p . x || r . q . y <= r . p . y	2780:12:104054:104085	1270911	0	True				
ANR	1271049	OrExpression	r . q . x <= r . p . x || r . q . y <= r . p . y		1270911	0		||			
ANR	1271050	RelationalExpression	r . q . x <= r . p . x		1270911	0		<=			
ANR	1271051	MemberAccess	r . q . x		1270911	0					
ANR	1271052	MemberAccess	r . q		1270911	0					
ANR	1271053	Identifier	r		1270911	0					
ANR	1271054	Identifier	q		1270911	1					
ANR	1271055	Identifier	x		1270911	1					
ANR	1271056	MemberAccess	r . p . x		1270911	1					
ANR	1271057	MemberAccess	r . p		1270911	0					
ANR	1271058	Identifier	r		1270911	0					
ANR	1271059	Identifier	p		1270911	1					
ANR	1271060	Identifier	x		1270911	1					
ANR	1271061	RelationalExpression	r . q . y <= r . p . y		1270911	1		<=			
ANR	1271062	MemberAccess	r . q . y		1270911	0					
ANR	1271063	MemberAccess	r . q		1270911	0					
ANR	1271064	Identifier	r		1270911	0					
ANR	1271065	Identifier	q		1270911	1					
ANR	1271066	Identifier	y		1270911	1					
ANR	1271067	MemberAccess	r . p . y		1270911	1					
ANR	1271068	MemberAccess	r . p		1270911	0					
ANR	1271069	Identifier	r		1270911	0					
ANR	1271070	Identifier	p		1270911	1					
ANR	1271071	Identifier	y		1270911	1					
ANR	1271072	ReturnStatement	return 0 ;	2781:12:104100:104108	1270911	1	True				
ANR	1271073	PrimaryExpression	0		1270911	0					
ANR	1271074	ExpressionStatement	"color_stack_ptr = reserve_colors_inline ( pfs , c , 3 )"	2783:4:104120:104170	1270911	9	True				
ANR	1271075	AssignmentExpression	"color_stack_ptr = reserve_colors_inline ( pfs , c , 3 )"		1270911	0		=			
ANR	1271076	Identifier	color_stack_ptr		1270911	0					
ANR	1271077	CallExpression	"reserve_colors_inline ( pfs , c , 3 )"		1270911	1					
ANR	1271078	Callee	reserve_colors_inline		1270911	0					
ANR	1271079	Identifier	reserve_colors_inline		1270911	0					
ANR	1271080	ArgumentList	pfs		1270911	1					
ANR	1271081	Argument	pfs		1270911	0					
ANR	1271082	Identifier	pfs		1270911	0					
ANR	1271083	Argument	c		1270911	1					
ANR	1271084	Identifier	c		1270911	0					
ANR	1271085	Argument	3		1270911	2					
ANR	1271086	PrimaryExpression	3		1270911	0					
ANR	1271087	IfStatement	if ( color_stack_ptr == NULL )		1270911	10					
ANR	1271088	Condition	color_stack_ptr == NULL	2784:7:104179:104201	1270911	0	True				
ANR	1271089	EqualityExpression	color_stack_ptr == NULL		1270911	0		==			
ANR	1271090	Identifier	color_stack_ptr		1270911	0					
ANR	1271091	Identifier	NULL		1270911	1					
ANR	1271092	ExpressionStatement	return_error ( gs_error_unregistered )	2785:8:104212:104247	1270911	1	True				
ANR	1271093	CallExpression	return_error ( gs_error_unregistered )		1270911	0					
ANR	1271094	Callee	return_error		1270911	0					
ANR	1271095	Identifier	return_error		1270911	0					
ANR	1271096	ArgumentList	gs_error_unregistered		1270911	1					
ANR	1271097	Argument	gs_error_unregistered		1270911	0					
ANR	1271098	Identifier	gs_error_unregistered		1270911	0					
ANR	1271099	ExpressionStatement	p01 . c = c [ 0 ]	2786:4:104253:104265	1270911	11	True				
ANR	1271100	AssignmentExpression	p01 . c = c [ 0 ]		1270911	0		=			
ANR	1271101	MemberAccess	p01 . c		1270911	0					
ANR	1271102	Identifier	p01		1270911	0					
ANR	1271103	Identifier	c		1270911	1					
ANR	1271104	ArrayIndexing	c [ 0 ]		1270911	1					
ANR	1271105	Identifier	c		1270911	0					
ANR	1271106	PrimaryExpression	0		1270911	1					
ANR	1271107	ExpressionStatement	p12 . c = c [ 1 ]	2787:4:104271:104283	1270911	12	True				
ANR	1271108	AssignmentExpression	p12 . c = c [ 1 ]		1270911	0		=			
ANR	1271109	MemberAccess	p12 . c		1270911	0					
ANR	1271110	Identifier	p12		1270911	0					
ANR	1271111	Identifier	c		1270911	1					
ANR	1271112	ArrayIndexing	c [ 1 ]		1270911	1					
ANR	1271113	Identifier	c		1270911	0					
ANR	1271114	PrimaryExpression	1		1270911	1					
ANR	1271115	ExpressionStatement	p20 . c = c [ 2 ]	2788:4:104289:104301	1270911	13	True				
ANR	1271116	AssignmentExpression	p20 . c = c [ 2 ]		1270911	0		=			
ANR	1271117	MemberAccess	p20 . c		1270911	0					
ANR	1271118	Identifier	p20		1270911	0					
ANR	1271119	Identifier	c		1270911	1					
ANR	1271120	ArrayIndexing	c [ 2 ]		1270911	1					
ANR	1271121	Identifier	c		1270911	0					
ANR	1271122	PrimaryExpression	2		1270911	1					
ANR	1271123	ExpressionStatement	"code = try_device_linear_color ( pfs , false , p0 , p1 , p2 )"	2789:4:104307:104361	1270911	14	True				
ANR	1271124	AssignmentExpression	"code = try_device_linear_color ( pfs , false , p0 , p1 , p2 )"		1270911	0		=			
ANR	1271125	Identifier	code		1270911	0					
ANR	1271126	CallExpression	"try_device_linear_color ( pfs , false , p0 , p1 , p2 )"		1270911	1					
ANR	1271127	Callee	try_device_linear_color		1270911	0					
ANR	1271128	Identifier	try_device_linear_color		1270911	0					
ANR	1271129	ArgumentList	pfs		1270911	1					
ANR	1271130	Argument	pfs		1270911	0					
ANR	1271131	Identifier	pfs		1270911	0					
ANR	1271132	Argument	false		1270911	1					
ANR	1271133	Identifier	false		1270911	0					
ANR	1271134	Argument	p0		1270911	2					
ANR	1271135	Identifier	p0		1270911	0					
ANR	1271136	Argument	p1		1270911	3					
ANR	1271137	Identifier	p1		1270911	0					
ANR	1271138	Argument	p2		1270911	4					
ANR	1271139	Identifier	p2		1270911	0					
ANR	1271140	SwitchStatement	switch ( code )		1270911	15					
ANR	1271141	Condition	code	2790:11:104374:104377	1270911	0	True				
ANR	1271142	Identifier	code		1270911	0					
ANR	1271143	CompoundStatement		25:17:816:816	1270911	1					
ANR	1271144	Label	case 0 :	2791:8:104390:104396	1270911	0	True				
ANR	1271145	GotoStatement	goto out ;	2792:12:104436:104444	1270911	1	True				
ANR	1271146	Identifier	out		1270911	0					
ANR	1271147	Label	case 2 :	2793:8:104454:104460	1270911	2	True				
ANR	1271148	IfStatement	if ( sd < pfs -> decomposition_limit * 4 )		1270911	3					
ANR	1271149	Condition	sd < pfs -> decomposition_limit * 4	2797:16:104734:104766	1270911	0	True				
ANR	1271150	RelationalExpression	sd < pfs -> decomposition_limit * 4		1270911	0		<			
ANR	1271151	Identifier	sd		1270911	0					
ANR	1271152	MultiplicativeExpression	pfs -> decomposition_limit * 4		1270911	1		*			
ANR	1271153	PtrMemberAccess	pfs -> decomposition_limit		1270911	0					
ANR	1271154	Identifier	pfs		1270911	0					
ANR	1271155	Identifier	decomposition_limit		1270911	1					
ANR	1271156	PrimaryExpression	4		1270911	1					
ANR	1271157	CompoundStatement		32:51:1205:1205	1270911	1					
ANR	1271158	ExpressionStatement	"code = constant_color_triangle ( pfs , p2 , p0 , p1 )"	2798:16:104787:104834	1270911	0	True				
ANR	1271159	AssignmentExpression	"code = constant_color_triangle ( pfs , p2 , p0 , p1 )"		1270911	0		=			
ANR	1271160	Identifier	code		1270911	0					
ANR	1271161	CallExpression	"constant_color_triangle ( pfs , p2 , p0 , p1 )"		1270911	1					
ANR	1271162	Callee	constant_color_triangle		1270911	0					
ANR	1271163	Identifier	constant_color_triangle		1270911	0					
ANR	1271164	ArgumentList	pfs		1270911	1					
ANR	1271165	Argument	pfs		1270911	0					
ANR	1271166	Identifier	pfs		1270911	0					
ANR	1271167	Argument	p2		1270911	1					
ANR	1271168	Identifier	p2		1270911	0					
ANR	1271169	Argument	p0		1270911	2					
ANR	1271170	Identifier	p0		1270911	0					
ANR	1271171	Argument	p1		1270911	3					
ANR	1271172	Identifier	p1		1270911	0					
ANR	1271173	GotoStatement	goto out ;	2799:16:104852:104860	1270911	1	True				
ANR	1271174	Identifier	out		1270911	0					
ANR	1271175	IfStatement	if ( pfs -> Function != NULL )		1270911	4					
ANR	1271176	Condition	pfs -> Function != NULL	2801:16:104892:104912	1270911	0	True				
ANR	1271177	EqualityExpression	pfs -> Function != NULL		1270911	0		!=			
ANR	1271178	PtrMemberAccess	pfs -> Function		1270911	0					
ANR	1271179	Identifier	pfs		1270911	0					
ANR	1271180	Identifier	Function		1270911	1					
ANR	1271181	Identifier	NULL		1270911	1					
ANR	1271182	CompoundStatement		39:16:1489:1531	1270911	1					
ANR	1271183	IdentifierDeclStatement	"double d01 = color_span ( pfs , p1 -> c , p0 -> c ) ;"	2802:16:104933:104975	1270911	0	True				
ANR	1271184	IdentifierDecl	"d01 = color_span ( pfs , p1 -> c , p0 -> c )"		1270911	0					
ANR	1271185	IdentifierDeclType	double		1270911	0					
ANR	1271186	Identifier	d01		1270911	1					
ANR	1271187	AssignmentExpression	"d01 = color_span ( pfs , p1 -> c , p0 -> c )"		1270911	2		=			
ANR	1271188	Identifier	d01		1270911	0					
ANR	1271189	CallExpression	"color_span ( pfs , p1 -> c , p0 -> c )"		1270911	1					
ANR	1271190	Callee	color_span		1270911	0					
ANR	1271191	Identifier	color_span		1270911	0					
ANR	1271192	ArgumentList	pfs		1270911	1					
ANR	1271193	Argument	pfs		1270911	0					
ANR	1271194	Identifier	pfs		1270911	0					
ANR	1271195	Argument	p1 -> c		1270911	1					
ANR	1271196	PtrMemberAccess	p1 -> c		1270911	0					
ANR	1271197	Identifier	p1		1270911	0					
ANR	1271198	Identifier	c		1270911	1					
ANR	1271199	Argument	p0 -> c		1270911	2					
ANR	1271200	PtrMemberAccess	p0 -> c		1270911	0					
ANR	1271201	Identifier	p0		1270911	0					
ANR	1271202	Identifier	c		1270911	1					
ANR	1271203	IdentifierDeclStatement	"double d12 = color_span ( pfs , p2 -> c , p1 -> c ) ;"	2803:16:104993:105035	1270911	1	True				
ANR	1271204	IdentifierDecl	"d12 = color_span ( pfs , p2 -> c , p1 -> c )"		1270911	0					
ANR	1271205	IdentifierDeclType	double		1270911	0					
ANR	1271206	Identifier	d12		1270911	1					
ANR	1271207	AssignmentExpression	"d12 = color_span ( pfs , p2 -> c , p1 -> c )"		1270911	2		=			
ANR	1271208	Identifier	d12		1270911	0					
ANR	1271209	CallExpression	"color_span ( pfs , p2 -> c , p1 -> c )"		1270911	1					
ANR	1271210	Callee	color_span		1270911	0					
ANR	1271211	Identifier	color_span		1270911	0					
ANR	1271212	ArgumentList	pfs		1270911	1					
ANR	1271213	Argument	pfs		1270911	0					
ANR	1271214	Identifier	pfs		1270911	0					
ANR	1271215	Argument	p2 -> c		1270911	1					
ANR	1271216	PtrMemberAccess	p2 -> c		1270911	0					
ANR	1271217	Identifier	p2		1270911	0					
ANR	1271218	Identifier	c		1270911	1					
ANR	1271219	Argument	p1 -> c		1270911	2					
ANR	1271220	PtrMemberAccess	p1 -> c		1270911	0					
ANR	1271221	Identifier	p1		1270911	0					
ANR	1271222	Identifier	c		1270911	1					
ANR	1271223	IdentifierDeclStatement	"double d20 = color_span ( pfs , p0 -> c , p2 -> c ) ;"	2804:16:105053:105095	1270911	2	True				
ANR	1271224	IdentifierDecl	"d20 = color_span ( pfs , p0 -> c , p2 -> c )"		1270911	0					
ANR	1271225	IdentifierDeclType	double		1270911	0					
ANR	1271226	Identifier	d20		1270911	1					
ANR	1271227	AssignmentExpression	"d20 = color_span ( pfs , p0 -> c , p2 -> c )"		1270911	2		=			
ANR	1271228	Identifier	d20		1270911	0					
ANR	1271229	CallExpression	"color_span ( pfs , p0 -> c , p2 -> c )"		1270911	1					
ANR	1271230	Callee	color_span		1270911	0					
ANR	1271231	Identifier	color_span		1270911	0					
ANR	1271232	ArgumentList	pfs		1270911	1					
ANR	1271233	Argument	pfs		1270911	0					
ANR	1271234	Identifier	pfs		1270911	0					
ANR	1271235	Argument	p0 -> c		1270911	1					
ANR	1271236	PtrMemberAccess	p0 -> c		1270911	0					
ANR	1271237	Identifier	p0		1270911	0					
ANR	1271238	Identifier	c		1270911	1					
ANR	1271239	Argument	p2 -> c		1270911	2					
ANR	1271240	PtrMemberAccess	p2 -> c		1270911	0					
ANR	1271241	Identifier	p2		1270911	0					
ANR	1271242	Identifier	c		1270911	1					
ANR	1271243	IfStatement	if ( d01 <= pfs -> smoothness / COLOR_CONTIGUITY && d12 <= pfs -> smoothness / COLOR_CONTIGUITY && d20 <= pfs -> smoothness / COLOR_CONTIGUITY )		1270911	3					
ANR	1271244	Condition	d01 <= pfs -> smoothness / COLOR_CONTIGUITY && d12 <= pfs -> smoothness / COLOR_CONTIGUITY && d20 <= pfs -> smoothness / COLOR_CONTIGUITY	2806:20:105118:105288	1270911	0	True				
ANR	1271245	AndExpression	d01 <= pfs -> smoothness / COLOR_CONTIGUITY && d12 <= pfs -> smoothness / COLOR_CONTIGUITY && d20 <= pfs -> smoothness / COLOR_CONTIGUITY		1270911	0		&&			
ANR	1271246	RelationalExpression	d01 <= pfs -> smoothness / COLOR_CONTIGUITY		1270911	0		<=			
ANR	1271247	Identifier	d01		1270911	0					
ANR	1271248	MultiplicativeExpression	pfs -> smoothness / COLOR_CONTIGUITY		1270911	1		/			
ANR	1271249	PtrMemberAccess	pfs -> smoothness		1270911	0					
ANR	1271250	Identifier	pfs		1270911	0					
ANR	1271251	Identifier	smoothness		1270911	1					
ANR	1271252	Identifier	COLOR_CONTIGUITY		1270911	1					
ANR	1271253	AndExpression	d12 <= pfs -> smoothness / COLOR_CONTIGUITY && d20 <= pfs -> smoothness / COLOR_CONTIGUITY		1270911	1		&&			
ANR	1271254	RelationalExpression	d12 <= pfs -> smoothness / COLOR_CONTIGUITY		1270911	0		<=			
ANR	1271255	Identifier	d12		1270911	0					
ANR	1271256	MultiplicativeExpression	pfs -> smoothness / COLOR_CONTIGUITY		1270911	1		/			
ANR	1271257	PtrMemberAccess	pfs -> smoothness		1270911	0					
ANR	1271258	Identifier	pfs		1270911	0					
ANR	1271259	Identifier	smoothness		1270911	1					
ANR	1271260	Identifier	COLOR_CONTIGUITY		1270911	1					
ANR	1271261	RelationalExpression	d20 <= pfs -> smoothness / COLOR_CONTIGUITY		1270911	1		<=			
ANR	1271262	Identifier	d20		1270911	0					
ANR	1271263	MultiplicativeExpression	pfs -> smoothness / COLOR_CONTIGUITY		1270911	1		/			
ANR	1271264	PtrMemberAccess	pfs -> smoothness		1270911	0					
ANR	1271265	Identifier	pfs		1270911	0					
ANR	1271266	Identifier	smoothness		1270911	1					
ANR	1271267	Identifier	COLOR_CONTIGUITY		1270911	1					
ANR	1271268	CompoundStatement		43:63:1727:1727	1270911	1					
ANR	1271269	ExpressionStatement	"code = constant_color_triangle ( pfs , p2 , p0 , p1 )"	2809:20:105313:105360	1270911	0	True				
ANR	1271270	AssignmentExpression	"code = constant_color_triangle ( pfs , p2 , p0 , p1 )"		1270911	0		=			
ANR	1271271	Identifier	code		1270911	0					
ANR	1271272	CallExpression	"constant_color_triangle ( pfs , p2 , p0 , p1 )"		1270911	1					
ANR	1271273	Callee	constant_color_triangle		1270911	0					
ANR	1271274	Identifier	constant_color_triangle		1270911	0					
ANR	1271275	ArgumentList	pfs		1270911	1					
ANR	1271276	Argument	pfs		1270911	0					
ANR	1271277	Identifier	pfs		1270911	0					
ANR	1271278	Argument	p2		1270911	1					
ANR	1271279	Identifier	p2		1270911	0					
ANR	1271280	Argument	p0		1270911	2					
ANR	1271281	Identifier	p0		1270911	0					
ANR	1271282	Argument	p1		1270911	3					
ANR	1271283	Identifier	p1		1270911	0					
ANR	1271284	GotoStatement	goto out ;	2810:20:105382:105390	1270911	1	True				
ANR	1271285	Identifier	out		1270911	0					
ANR	1271286	ElseStatement	else		1270911	0					
ANR	1271287	IfStatement	if ( cd <= pfs -> smoothness / COLOR_CONTIGUITY )		1270911	0					
ANR	1271288	Condition	cd <= pfs -> smoothness / COLOR_CONTIGUITY	2812:23:105433:105472	1270911	0	True				
ANR	1271289	RelationalExpression	cd <= pfs -> smoothness / COLOR_CONTIGUITY		1270911	0		<=			
ANR	1271290	Identifier	cd		1270911	0					
ANR	1271291	MultiplicativeExpression	pfs -> smoothness / COLOR_CONTIGUITY		1270911	1		/			
ANR	1271292	PtrMemberAccess	pfs -> smoothness		1270911	0					
ANR	1271293	Identifier	pfs		1270911	0					
ANR	1271294	Identifier	smoothness		1270911	1					
ANR	1271295	Identifier	COLOR_CONTIGUITY		1270911	1					
ANR	1271296	CompoundStatement		47:65:1911:1911	1270911	1					
ANR	1271297	ExpressionStatement	"code = constant_color_triangle ( pfs , p2 , p0 , p1 )"	2813:16:105493:105540	1270911	0	True				
ANR	1271298	AssignmentExpression	"code = constant_color_triangle ( pfs , p2 , p0 , p1 )"		1270911	0		=			
ANR	1271299	Identifier	code		1270911	0					
ANR	1271300	CallExpression	"constant_color_triangle ( pfs , p2 , p0 , p1 )"		1270911	1					
ANR	1271301	Callee	constant_color_triangle		1270911	0					
ANR	1271302	Identifier	constant_color_triangle		1270911	0					
ANR	1271303	ArgumentList	pfs		1270911	1					
ANR	1271304	Argument	pfs		1270911	0					
ANR	1271305	Identifier	pfs		1270911	0					
ANR	1271306	Argument	p2		1270911	1					
ANR	1271307	Identifier	p2		1270911	0					
ANR	1271308	Argument	p0		1270911	2					
ANR	1271309	Identifier	p0		1270911	0					
ANR	1271310	Argument	p1		1270911	3					
ANR	1271311	Identifier	p1		1270911	0					
ANR	1271312	GotoStatement	goto out ;	2814:16:105558:105566	1270911	1	True				
ANR	1271313	Identifier	out		1270911	0					
ANR	1271314	BreakStatement	break ;	2816:12:105594:105599	1270911	5	True				
ANR	1271315	Label	case 1 :	2817:8:105609:105615	1270911	6	True				
ANR	1271316	IfStatement	if ( sd < pfs -> decomposition_limit )		1270911	7					
ANR	1271317	Condition	sd < pfs -> decomposition_limit	2818:16:105671:105699	1270911	0	True				
ANR	1271318	RelationalExpression	sd < pfs -> decomposition_limit		1270911	0		<			
ANR	1271319	Identifier	sd		1270911	0					
ANR	1271320	PtrMemberAccess	pfs -> decomposition_limit		1270911	1					
ANR	1271321	Identifier	pfs		1270911	0					
ANR	1271322	Identifier	decomposition_limit		1270911	1					
ANR	1271323	CompoundStatement		53:47:2138:2138	1270911	1					
ANR	1271324	ExpressionStatement	"code = constant_color_triangle ( pfs , p2 , p0 , p1 )"	2819:16:105720:105767	1270911	0	True				
ANR	1271325	AssignmentExpression	"code = constant_color_triangle ( pfs , p2 , p0 , p1 )"		1270911	0		=			
ANR	1271326	Identifier	code		1270911	0					
ANR	1271327	CallExpression	"constant_color_triangle ( pfs , p2 , p0 , p1 )"		1270911	1					
ANR	1271328	Callee	constant_color_triangle		1270911	0					
ANR	1271329	Identifier	constant_color_triangle		1270911	0					
ANR	1271330	ArgumentList	pfs		1270911	1					
ANR	1271331	Argument	pfs		1270911	0					
ANR	1271332	Identifier	pfs		1270911	0					
ANR	1271333	Argument	p2		1270911	1					
ANR	1271334	Identifier	p2		1270911	0					
ANR	1271335	Argument	p0		1270911	2					
ANR	1271336	Identifier	p0		1270911	0					
ANR	1271337	Argument	p1		1270911	3					
ANR	1271338	Identifier	p1		1270911	0					
ANR	1271339	GotoStatement	goto out ;	2820:16:105785:105793	1270911	1	True				
ANR	1271340	Identifier	out		1270911	0					
ANR	1271341	BreakStatement	break ;	2822:12:105821:105826	1270911	8	True				
ANR	1271342	Label	default :	2823:8:105836:105843	1270911	9	True				
ANR	1271343	Identifier	default		1270911	0					
ANR	1271344	GotoStatement	goto out ;	2824:12:105870:105878	1270911	10	True				
ANR	1271345	Identifier	out		1270911	0					
ANR	1271346	IfStatement	if ( ! inside )		1270911	16					
ANR	1271347	Condition	! inside	2826:8:105894:105900	1270911	0	True				
ANR	1271348	UnaryOperationExpression	! inside		1270911	0					
ANR	1271349	UnaryOperator	!		1270911	0					
ANR	1271350	Identifier	inside		1270911	1					
ANR	1271351	CompoundStatement		61:17:2339:2339	1270911	1					
ANR	1271352	IfStatement	if ( r . p . x == r1 . p . x && r . p . y == r1 . p . y && r . q . x == r1 . q . x && r . q . y == r1 . q . y )		1270911	0					
ANR	1271353	Condition	r . p . x == r1 . p . x && r . p . y == r1 . p . y && r . q . x == r1 . q . x && r . q . y == r1 . q . y	2827:12:105917:106000	1270911	0	True				
ANR	1271354	AndExpression	r . p . x == r1 . p . x && r . p . y == r1 . p . y && r . q . x == r1 . q . x && r . q . y == r1 . q . y		1270911	0		&&			
ANR	1271355	EqualityExpression	r . p . x == r1 . p . x		1270911	0		==			
ANR	1271356	MemberAccess	r . p . x		1270911	0					
ANR	1271357	MemberAccess	r . p		1270911	0					
ANR	1271358	Identifier	r		1270911	0					
ANR	1271359	Identifier	p		1270911	1					
ANR	1271360	Identifier	x		1270911	1					
ANR	1271361	MemberAccess	r1 . p . x		1270911	1					
ANR	1271362	MemberAccess	r1 . p		1270911	0					
ANR	1271363	Identifier	r1		1270911	0					
ANR	1271364	Identifier	p		1270911	1					
ANR	1271365	Identifier	x		1270911	1					
ANR	1271366	AndExpression	r . p . y == r1 . p . y && r . q . x == r1 . q . x && r . q . y == r1 . q . y		1270911	1		&&			
ANR	1271367	EqualityExpression	r . p . y == r1 . p . y		1270911	0		==			
ANR	1271368	MemberAccess	r . p . y		1270911	0					
ANR	1271369	MemberAccess	r . p		1270911	0					
ANR	1271370	Identifier	r		1270911	0					
ANR	1271371	Identifier	p		1270911	1					
ANR	1271372	Identifier	y		1270911	1					
ANR	1271373	MemberAccess	r1 . p . y		1270911	1					
ANR	1271374	MemberAccess	r1 . p		1270911	0					
ANR	1271375	Identifier	r1		1270911	0					
ANR	1271376	Identifier	p		1270911	1					
ANR	1271377	Identifier	y		1270911	1					
ANR	1271378	AndExpression	r . q . x == r1 . q . x && r . q . y == r1 . q . y		1270911	1		&&			
ANR	1271379	EqualityExpression	r . q . x == r1 . q . x		1270911	0		==			
ANR	1271380	MemberAccess	r . q . x		1270911	0					
ANR	1271381	MemberAccess	r . q		1270911	0					
ANR	1271382	Identifier	r		1270911	0					
ANR	1271383	Identifier	q		1270911	1					
ANR	1271384	Identifier	x		1270911	1					
ANR	1271385	MemberAccess	r1 . q . x		1270911	1					
ANR	1271386	MemberAccess	r1 . q		1270911	0					
ANR	1271387	Identifier	r1		1270911	0					
ANR	1271388	Identifier	q		1270911	1					
ANR	1271389	Identifier	x		1270911	1					
ANR	1271390	EqualityExpression	r . q . y == r1 . q . y		1270911	1		==			
ANR	1271391	MemberAccess	r . q . y		1270911	0					
ANR	1271392	MemberAccess	r . q		1270911	0					
ANR	1271393	Identifier	r		1270911	0					
ANR	1271394	Identifier	q		1270911	1					
ANR	1271395	Identifier	y		1270911	1					
ANR	1271396	MemberAccess	r1 . q . y		1270911	1					
ANR	1271397	MemberAccess	r1 . q		1270911	0					
ANR	1271398	Identifier	r1		1270911	0					
ANR	1271399	Identifier	q		1270911	1					
ANR	1271400	Identifier	y		1270911	1					
ANR	1271401	ExpressionStatement	pfs -> inside = true	2829:12:106015:106033	1270911	1	True				
ANR	1271402	AssignmentExpression	pfs -> inside = true		1270911	0		=			
ANR	1271403	PtrMemberAccess	pfs -> inside		1270911	0					
ANR	1271404	Identifier	pfs		1270911	0					
ANR	1271405	Identifier	inside		1270911	1					
ANR	1271406	Identifier	true		1270911	1					
ANR	1271407	ExpressionStatement	"divide_bar ( pfs , p0 , p1 , 2 , & p01 , c [ 0 ] )"	2831:4:106045:106083	1270911	17	True				
ANR	1271408	CallExpression	"divide_bar ( pfs , p0 , p1 , 2 , & p01 , c [ 0 ] )"		1270911	0					
ANR	1271409	Callee	divide_bar		1270911	0					
ANR	1271410	Identifier	divide_bar		1270911	0					
ANR	1271411	ArgumentList	pfs		1270911	1					
ANR	1271412	Argument	pfs		1270911	0					
ANR	1271413	Identifier	pfs		1270911	0					
ANR	1271414	Argument	p0		1270911	1					
ANR	1271415	Identifier	p0		1270911	0					
ANR	1271416	Argument	p1		1270911	2					
ANR	1271417	Identifier	p1		1270911	0					
ANR	1271418	Argument	2		1270911	3					
ANR	1271419	PrimaryExpression	2		1270911	0					
ANR	1271420	Argument	& p01		1270911	4					
ANR	1271421	UnaryOperationExpression	& p01		1270911	0					
ANR	1271422	UnaryOperator	&		1270911	0					
ANR	1271423	Identifier	p01		1270911	1					
ANR	1271424	Argument	c [ 0 ]		1270911	5					
ANR	1271425	ArrayIndexing	c [ 0 ]		1270911	0					
ANR	1271426	Identifier	c		1270911	0					
ANR	1271427	PrimaryExpression	0		1270911	1					
ANR	1271428	ExpressionStatement	"divide_bar ( pfs , p1 , p2 , 2 , & p12 , c [ 1 ] )"	2832:4:106089:106127	1270911	18	True				
ANR	1271429	CallExpression	"divide_bar ( pfs , p1 , p2 , 2 , & p12 , c [ 1 ] )"		1270911	0					
ANR	1271430	Callee	divide_bar		1270911	0					
ANR	1271431	Identifier	divide_bar		1270911	0					
ANR	1271432	ArgumentList	pfs		1270911	1					
ANR	1271433	Argument	pfs		1270911	0					
ANR	1271434	Identifier	pfs		1270911	0					
ANR	1271435	Argument	p1		1270911	1					
ANR	1271436	Identifier	p1		1270911	0					
ANR	1271437	Argument	p2		1270911	2					
ANR	1271438	Identifier	p2		1270911	0					
ANR	1271439	Argument	2		1270911	3					
ANR	1271440	PrimaryExpression	2		1270911	0					
ANR	1271441	Argument	& p12		1270911	4					
ANR	1271442	UnaryOperationExpression	& p12		1270911	0					
ANR	1271443	UnaryOperator	&		1270911	0					
ANR	1271444	Identifier	p12		1270911	1					
ANR	1271445	Argument	c [ 1 ]		1270911	5					
ANR	1271446	ArrayIndexing	c [ 1 ]		1270911	0					
ANR	1271447	Identifier	c		1270911	0					
ANR	1271448	PrimaryExpression	1		1270911	1					
ANR	1271449	ExpressionStatement	"divide_bar ( pfs , p2 , p0 , 2 , & p20 , c [ 2 ] )"	2833:4:106133:106171	1270911	19	True				
ANR	1271450	CallExpression	"divide_bar ( pfs , p2 , p0 , 2 , & p20 , c [ 2 ] )"		1270911	0					
ANR	1271451	Callee	divide_bar		1270911	0					
ANR	1271452	Identifier	divide_bar		1270911	0					
ANR	1271453	ArgumentList	pfs		1270911	1					
ANR	1271454	Argument	pfs		1270911	0					
ANR	1271455	Identifier	pfs		1270911	0					
ANR	1271456	Argument	p2		1270911	1					
ANR	1271457	Identifier	p2		1270911	0					
ANR	1271458	Argument	p0		1270911	2					
ANR	1271459	Identifier	p0		1270911	0					
ANR	1271460	Argument	2		1270911	3					
ANR	1271461	PrimaryExpression	2		1270911	0					
ANR	1271462	Argument	& p20		1270911	4					
ANR	1271463	UnaryOperationExpression	& p20		1270911	0					
ANR	1271464	UnaryOperator	&		1270911	0					
ANR	1271465	Identifier	p20		1270911	1					
ANR	1271466	Argument	c [ 2 ]		1270911	5					
ANR	1271467	ArrayIndexing	c [ 2 ]		1270911	0					
ANR	1271468	Identifier	c		1270911	0					
ANR	1271469	PrimaryExpression	2		1270911	1					
ANR	1271470	IfStatement	if ( LAZY_WEDGES )		1270911	20					
ANR	1271471	Condition	LAZY_WEDGES	2834:8:106181:106191	1270911	0	True				
ANR	1271472	Identifier	LAZY_WEDGES		1270911	0					
ANR	1271473	CompoundStatement		69:21:2630:2630	1270911	1					
ANR	1271474	ExpressionStatement	"init_wedge_vertex_list ( L , count_of ( L ) )"	2835:8:106204:106242	1270911	0	True				
ANR	1271475	CallExpression	"init_wedge_vertex_list ( L , count_of ( L ) )"		1270911	0					
ANR	1271476	Callee	init_wedge_vertex_list		1270911	0					
ANR	1271477	Identifier	init_wedge_vertex_list		1270911	0					
ANR	1271478	ArgumentList	L		1270911	1					
ANR	1271479	Argument	L		1270911	0					
ANR	1271480	Identifier	L		1270911	0					
ANR	1271481	Argument	count_of ( L )		1270911	1					
ANR	1271482	CallExpression	count_of ( L )		1270911	0					
ANR	1271483	Callee	count_of		1270911	0					
ANR	1271484	Identifier	count_of		1270911	0					
ANR	1271485	ArgumentList	L		1270911	1					
ANR	1271486	Argument	L		1270911	0					
ANR	1271487	Identifier	L		1270911	0					
ANR	1271488	ExpressionStatement	"code = make_wedge_median ( pfs , & L01 , l01 , true , & p0 -> p , & p1 -> p , & p01 . p )"	2836:8:106252:106323	1270911	1	True				
ANR	1271489	AssignmentExpression	"code = make_wedge_median ( pfs , & L01 , l01 , true , & p0 -> p , & p1 -> p , & p01 . p )"		1270911	0		=			
ANR	1271490	Identifier	code		1270911	0					
ANR	1271491	CallExpression	"make_wedge_median ( pfs , & L01 , l01 , true , & p0 -> p , & p1 -> p , & p01 . p )"		1270911	1					
ANR	1271492	Callee	make_wedge_median		1270911	0					
ANR	1271493	Identifier	make_wedge_median		1270911	0					
ANR	1271494	ArgumentList	pfs		1270911	1					
ANR	1271495	Argument	pfs		1270911	0					
ANR	1271496	Identifier	pfs		1270911	0					
ANR	1271497	Argument	& L01		1270911	1					
ANR	1271498	UnaryOperationExpression	& L01		1270911	0					
ANR	1271499	UnaryOperator	&		1270911	0					
ANR	1271500	Identifier	L01		1270911	1					
ANR	1271501	Argument	l01		1270911	2					
ANR	1271502	Identifier	l01		1270911	0					
ANR	1271503	Argument	true		1270911	3					
ANR	1271504	Identifier	true		1270911	0					
ANR	1271505	Argument	& p0 -> p		1270911	4					
ANR	1271506	UnaryOperationExpression	& p0 -> p		1270911	0					
ANR	1271507	UnaryOperator	&		1270911	0					
ANR	1271508	PtrMemberAccess	p0 -> p		1270911	1					
ANR	1271509	Identifier	p0		1270911	0					
ANR	1271510	Identifier	p		1270911	1					
ANR	1271511	Argument	& p1 -> p		1270911	5					
ANR	1271512	UnaryOperationExpression	& p1 -> p		1270911	0					
ANR	1271513	UnaryOperator	&		1270911	0					
ANR	1271514	PtrMemberAccess	p1 -> p		1270911	1					
ANR	1271515	Identifier	p1		1270911	0					
ANR	1271516	Identifier	p		1270911	1					
ANR	1271517	Argument	& p01 . p		1270911	6					
ANR	1271518	UnaryOperationExpression	& p01 . p		1270911	0					
ANR	1271519	UnaryOperator	&		1270911	0					
ANR	1271520	MemberAccess	p01 . p		1270911	1					
ANR	1271521	Identifier	p01		1270911	0					
ANR	1271522	Identifier	p		1270911	1					
ANR	1271523	IfStatement	if ( code >= 0 )		1270911	2					
ANR	1271524	Condition	code >= 0	2837:12:106337:106345	1270911	0	True				
ANR	1271525	RelationalExpression	code >= 0		1270911	0		>=			
ANR	1271526	Identifier	code		1270911	0					
ANR	1271527	PrimaryExpression	0		1270911	1					
ANR	1271528	ExpressionStatement	"code = make_wedge_median ( pfs , & L12 , l12 , true , & p1 -> p , & p2 -> p , & p12 . p )"	2838:12:106360:106431	1270911	1	True				
ANR	1271529	AssignmentExpression	"code = make_wedge_median ( pfs , & L12 , l12 , true , & p1 -> p , & p2 -> p , & p12 . p )"		1270911	0		=			
ANR	1271530	Identifier	code		1270911	0					
ANR	1271531	CallExpression	"make_wedge_median ( pfs , & L12 , l12 , true , & p1 -> p , & p2 -> p , & p12 . p )"		1270911	1					
ANR	1271532	Callee	make_wedge_median		1270911	0					
ANR	1271533	Identifier	make_wedge_median		1270911	0					
ANR	1271534	ArgumentList	pfs		1270911	1					
ANR	1271535	Argument	pfs		1270911	0					
ANR	1271536	Identifier	pfs		1270911	0					
ANR	1271537	Argument	& L12		1270911	1					
ANR	1271538	UnaryOperationExpression	& L12		1270911	0					
ANR	1271539	UnaryOperator	&		1270911	0					
ANR	1271540	Identifier	L12		1270911	1					
ANR	1271541	Argument	l12		1270911	2					
ANR	1271542	Identifier	l12		1270911	0					
ANR	1271543	Argument	true		1270911	3					
ANR	1271544	Identifier	true		1270911	0					
ANR	1271545	Argument	& p1 -> p		1270911	4					
ANR	1271546	UnaryOperationExpression	& p1 -> p		1270911	0					
ANR	1271547	UnaryOperator	&		1270911	0					
ANR	1271548	PtrMemberAccess	p1 -> p		1270911	1					
ANR	1271549	Identifier	p1		1270911	0					
ANR	1271550	Identifier	p		1270911	1					
ANR	1271551	Argument	& p2 -> p		1270911	5					
ANR	1271552	UnaryOperationExpression	& p2 -> p		1270911	0					
ANR	1271553	UnaryOperator	&		1270911	0					
ANR	1271554	PtrMemberAccess	p2 -> p		1270911	1					
ANR	1271555	Identifier	p2		1270911	0					
ANR	1271556	Identifier	p		1270911	1					
ANR	1271557	Argument	& p12 . p		1270911	6					
ANR	1271558	UnaryOperationExpression	& p12 . p		1270911	0					
ANR	1271559	UnaryOperator	&		1270911	0					
ANR	1271560	MemberAccess	p12 . p		1270911	1					
ANR	1271561	Identifier	p12		1270911	0					
ANR	1271562	Identifier	p		1270911	1					
ANR	1271563	IfStatement	if ( code >= 0 )		1270911	3					
ANR	1271564	Condition	code >= 0	2839:12:106445:106453	1270911	0	True				
ANR	1271565	RelationalExpression	code >= 0		1270911	0		>=			
ANR	1271566	Identifier	code		1270911	0					
ANR	1271567	PrimaryExpression	0		1270911	1					
ANR	1271568	ExpressionStatement	"code = make_wedge_median ( pfs , & L20 , l20 , false , & p2 -> p , & p0 -> p , & p20 . p )"	2840:12:106468:106539	1270911	1	True				
ANR	1271569	AssignmentExpression	"code = make_wedge_median ( pfs , & L20 , l20 , false , & p2 -> p , & p0 -> p , & p20 . p )"		1270911	0		=			
ANR	1271570	Identifier	code		1270911	0					
ANR	1271571	CallExpression	"make_wedge_median ( pfs , & L20 , l20 , false , & p2 -> p , & p0 -> p , & p20 . p )"		1270911	1					
ANR	1271572	Callee	make_wedge_median		1270911	0					
ANR	1271573	Identifier	make_wedge_median		1270911	0					
ANR	1271574	ArgumentList	pfs		1270911	1					
ANR	1271575	Argument	pfs		1270911	0					
ANR	1271576	Identifier	pfs		1270911	0					
ANR	1271577	Argument	& L20		1270911	1					
ANR	1271578	UnaryOperationExpression	& L20		1270911	0					
ANR	1271579	UnaryOperator	&		1270911	0					
ANR	1271580	Identifier	L20		1270911	1					
ANR	1271581	Argument	l20		1270911	2					
ANR	1271582	Identifier	l20		1270911	0					
ANR	1271583	Argument	false		1270911	3					
ANR	1271584	Identifier	false		1270911	0					
ANR	1271585	Argument	& p2 -> p		1270911	4					
ANR	1271586	UnaryOperationExpression	& p2 -> p		1270911	0					
ANR	1271587	UnaryOperator	&		1270911	0					
ANR	1271588	PtrMemberAccess	p2 -> p		1270911	1					
ANR	1271589	Identifier	p2		1270911	0					
ANR	1271590	Identifier	p		1270911	1					
ANR	1271591	Argument	& p0 -> p		1270911	5					
ANR	1271592	UnaryOperationExpression	& p0 -> p		1270911	0					
ANR	1271593	UnaryOperator	&		1270911	0					
ANR	1271594	PtrMemberAccess	p0 -> p		1270911	1					
ANR	1271595	Identifier	p0		1270911	0					
ANR	1271596	Identifier	p		1270911	1					
ANR	1271597	Argument	& p20 . p		1270911	6					
ANR	1271598	UnaryOperationExpression	& p20 . p		1270911	0					
ANR	1271599	UnaryOperator	&		1270911	0					
ANR	1271600	MemberAccess	p20 . p		1270911	1					
ANR	1271601	Identifier	p20		1270911	0					
ANR	1271602	Identifier	p		1270911	1					
ANR	1271603	ElseStatement	else		1270911	0					
ANR	1271604	CompoundStatement		76:11:2988:2988	1270911	0					
ANR	1271605	ExpressionStatement	"code = fill_triangle_wedge ( pfs , p0 , p1 , & p01 )"	2842:8:106562:106607	1270911	0	True				
ANR	1271606	AssignmentExpression	"code = fill_triangle_wedge ( pfs , p0 , p1 , & p01 )"		1270911	0		=			
ANR	1271607	Identifier	code		1270911	0					
ANR	1271608	CallExpression	"fill_triangle_wedge ( pfs , p0 , p1 , & p01 )"		1270911	1					
ANR	1271609	Callee	fill_triangle_wedge		1270911	0					
ANR	1271610	Identifier	fill_triangle_wedge		1270911	0					
ANR	1271611	ArgumentList	pfs		1270911	1					
ANR	1271612	Argument	pfs		1270911	0					
ANR	1271613	Identifier	pfs		1270911	0					
ANR	1271614	Argument	p0		1270911	1					
ANR	1271615	Identifier	p0		1270911	0					
ANR	1271616	Argument	p1		1270911	2					
ANR	1271617	Identifier	p1		1270911	0					
ANR	1271618	Argument	& p01		1270911	3					
ANR	1271619	UnaryOperationExpression	& p01		1270911	0					
ANR	1271620	UnaryOperator	&		1270911	0					
ANR	1271621	Identifier	p01		1270911	1					
ANR	1271622	IfStatement	if ( code >= 0 )		1270911	1					
ANR	1271623	Condition	code >= 0	2843:12:106621:106629	1270911	0	True				
ANR	1271624	RelationalExpression	code >= 0		1270911	0		>=			
ANR	1271625	Identifier	code		1270911	0					
ANR	1271626	PrimaryExpression	0		1270911	1					
ANR	1271627	ExpressionStatement	"code = fill_triangle_wedge ( pfs , p1 , p2 , & p12 )"	2844:12:106644:106689	1270911	1	True				
ANR	1271628	AssignmentExpression	"code = fill_triangle_wedge ( pfs , p1 , p2 , & p12 )"		1270911	0		=			
ANR	1271629	Identifier	code		1270911	0					
ANR	1271630	CallExpression	"fill_triangle_wedge ( pfs , p1 , p2 , & p12 )"		1270911	1					
ANR	1271631	Callee	fill_triangle_wedge		1270911	0					
ANR	1271632	Identifier	fill_triangle_wedge		1270911	0					
ANR	1271633	ArgumentList	pfs		1270911	1					
ANR	1271634	Argument	pfs		1270911	0					
ANR	1271635	Identifier	pfs		1270911	0					
ANR	1271636	Argument	p1		1270911	1					
ANR	1271637	Identifier	p1		1270911	0					
ANR	1271638	Argument	p2		1270911	2					
ANR	1271639	Identifier	p2		1270911	0					
ANR	1271640	Argument	& p12		1270911	3					
ANR	1271641	UnaryOperationExpression	& p12		1270911	0					
ANR	1271642	UnaryOperator	&		1270911	0					
ANR	1271643	Identifier	p12		1270911	1					
ANR	1271644	IfStatement	if ( code >= 0 )		1270911	2					
ANR	1271645	Condition	code >= 0	2845:12:106703:106711	1270911	0	True				
ANR	1271646	RelationalExpression	code >= 0		1270911	0		>=			
ANR	1271647	Identifier	code		1270911	0					
ANR	1271648	PrimaryExpression	0		1270911	1					
ANR	1271649	ExpressionStatement	"code = fill_triangle_wedge ( pfs , p2 , p0 , & p20 )"	2846:12:106726:106771	1270911	1	True				
ANR	1271650	AssignmentExpression	"code = fill_triangle_wedge ( pfs , p2 , p0 , & p20 )"		1270911	0		=			
ANR	1271651	Identifier	code		1270911	0					
ANR	1271652	CallExpression	"fill_triangle_wedge ( pfs , p2 , p0 , & p20 )"		1270911	1					
ANR	1271653	Callee	fill_triangle_wedge		1270911	0					
ANR	1271654	Identifier	fill_triangle_wedge		1270911	0					
ANR	1271655	ArgumentList	pfs		1270911	1					
ANR	1271656	Argument	pfs		1270911	0					
ANR	1271657	Identifier	pfs		1270911	0					
ANR	1271658	Argument	p2		1270911	1					
ANR	1271659	Identifier	p2		1270911	0					
ANR	1271660	Argument	p0		1270911	2					
ANR	1271661	Identifier	p0		1270911	0					
ANR	1271662	Argument	& p20		1270911	3					
ANR	1271663	UnaryOperationExpression	& p20		1270911	0					
ANR	1271664	UnaryOperator	&		1270911	0					
ANR	1271665	Identifier	p20		1270911	1					
ANR	1271666	IfStatement	if ( code >= 0 )		1270911	21					
ANR	1271667	Condition	code >= 0	2848:8:106787:106795	1270911	0	True				
ANR	1271668	RelationalExpression	code >= 0		1270911	0		>=			
ANR	1271669	Identifier	code		1270911	0					
ANR	1271670	PrimaryExpression	0		1270911	1					
ANR	1271671	ExpressionStatement	"code = triangle_by_4 ( pfs , p0 , & p01 , & p20 , & L01 , & L [ 0 ] , & L20 , cd / 2 , sd / 2 )"	2849:8:106806:106882	1270911	1	True				
ANR	1271672	AssignmentExpression	"code = triangle_by_4 ( pfs , p0 , & p01 , & p20 , & L01 , & L [ 0 ] , & L20 , cd / 2 , sd / 2 )"		1270911	0		=			
ANR	1271673	Identifier	code		1270911	0					
ANR	1271674	CallExpression	"triangle_by_4 ( pfs , p0 , & p01 , & p20 , & L01 , & L [ 0 ] , & L20 , cd / 2 , sd / 2 )"		1270911	1					
ANR	1271675	Callee	triangle_by_4		1270911	0					
ANR	1271676	Identifier	triangle_by_4		1270911	0					
ANR	1271677	ArgumentList	pfs		1270911	1					
ANR	1271678	Argument	pfs		1270911	0					
ANR	1271679	Identifier	pfs		1270911	0					
ANR	1271680	Argument	p0		1270911	1					
ANR	1271681	Identifier	p0		1270911	0					
ANR	1271682	Argument	& p01		1270911	2					
ANR	1271683	UnaryOperationExpression	& p01		1270911	0					
ANR	1271684	UnaryOperator	&		1270911	0					
ANR	1271685	Identifier	p01		1270911	1					
ANR	1271686	Argument	& p20		1270911	3					
ANR	1271687	UnaryOperationExpression	& p20		1270911	0					
ANR	1271688	UnaryOperator	&		1270911	0					
ANR	1271689	Identifier	p20		1270911	1					
ANR	1271690	Argument	& L01		1270911	4					
ANR	1271691	UnaryOperationExpression	& L01		1270911	0					
ANR	1271692	UnaryOperator	&		1270911	0					
ANR	1271693	Identifier	L01		1270911	1					
ANR	1271694	Argument	& L [ 0 ]		1270911	5					
ANR	1271695	UnaryOperationExpression	& L [ 0 ]		1270911	0					
ANR	1271696	UnaryOperator	&		1270911	0					
ANR	1271697	ArrayIndexing	L [ 0 ]		1270911	1					
ANR	1271698	Identifier	L		1270911	0					
ANR	1271699	PrimaryExpression	0		1270911	1					
ANR	1271700	Argument	& L20		1270911	6					
ANR	1271701	UnaryOperationExpression	& L20		1270911	0					
ANR	1271702	UnaryOperator	&		1270911	0					
ANR	1271703	Identifier	L20		1270911	1					
ANR	1271704	Argument	cd / 2		1270911	7					
ANR	1271705	MultiplicativeExpression	cd / 2		1270911	0		/			
ANR	1271706	Identifier	cd		1270911	0					
ANR	1271707	PrimaryExpression	2		1270911	1					
ANR	1271708	Argument	sd / 2		1270911	8					
ANR	1271709	MultiplicativeExpression	sd / 2		1270911	0		/			
ANR	1271710	Identifier	sd		1270911	0					
ANR	1271711	PrimaryExpression	2		1270911	1					
ANR	1271712	IfStatement	if ( code >= 0 )		1270911	22					
ANR	1271713	Condition	code >= 0	2850:8:106892:106900	1270911	0	True				
ANR	1271714	RelationalExpression	code >= 0		1270911	0		>=			
ANR	1271715	Identifier	code		1270911	0					
ANR	1271716	PrimaryExpression	0		1270911	1					
ANR	1271717	CompoundStatement		85:19:3339:3339	1270911	1					
ANR	1271718	IfStatement	if ( LAZY_WEDGES )		1270911	0					
ANR	1271719	Condition	LAZY_WEDGES	2851:12:106917:106927	1270911	0	True				
ANR	1271720	Identifier	LAZY_WEDGES		1270911	0					
ANR	1271721	CompoundStatement		86:25:3366:3366	1270911	1					
ANR	1271722	ExpressionStatement	"move_wedge ( & L01 , l01 , true )"	2852:12:106944:106971	1270911	0	True				
ANR	1271723	CallExpression	"move_wedge ( & L01 , l01 , true )"		1270911	0					
ANR	1271724	Callee	move_wedge		1270911	0					
ANR	1271725	Identifier	move_wedge		1270911	0					
ANR	1271726	ArgumentList	& L01		1270911	1					
ANR	1271727	Argument	& L01		1270911	0					
ANR	1271728	UnaryOperationExpression	& L01		1270911	0					
ANR	1271729	UnaryOperator	&		1270911	0					
ANR	1271730	Identifier	L01		1270911	1					
ANR	1271731	Argument	l01		1270911	1					
ANR	1271732	Identifier	l01		1270911	0					
ANR	1271733	Argument	true		1270911	2					
ANR	1271734	Identifier	true		1270911	0					
ANR	1271735	ExpressionStatement	"move_wedge ( & L20 , l20 , false )"	2853:12:106985:107013	1270911	1	True				
ANR	1271736	CallExpression	"move_wedge ( & L20 , l20 , false )"		1270911	0					
ANR	1271737	Callee	move_wedge		1270911	0					
ANR	1271738	Identifier	move_wedge		1270911	0					
ANR	1271739	ArgumentList	& L20		1270911	1					
ANR	1271740	Argument	& L20		1270911	0					
ANR	1271741	UnaryOperationExpression	& L20		1270911	0					
ANR	1271742	UnaryOperator	&		1270911	0					
ANR	1271743	Identifier	L20		1270911	1					
ANR	1271744	Argument	l20		1270911	1					
ANR	1271745	Identifier	l20		1270911	0					
ANR	1271746	Argument	false		1270911	2					
ANR	1271747	Identifier	false		1270911	0					
ANR	1271748	ExpressionStatement	"code = triangle_by_4 ( pfs , p1 , & p12 , & p01 , & L12 , & L [ 1 ] , & L01 , cd / 2 , sd / 2 )"	2855:8:107033:107109	1270911	1	True				
ANR	1271749	AssignmentExpression	"code = triangle_by_4 ( pfs , p1 , & p12 , & p01 , & L12 , & L [ 1 ] , & L01 , cd / 2 , sd / 2 )"		1270911	0		=			
ANR	1271750	Identifier	code		1270911	0					
ANR	1271751	CallExpression	"triangle_by_4 ( pfs , p1 , & p12 , & p01 , & L12 , & L [ 1 ] , & L01 , cd / 2 , sd / 2 )"		1270911	1					
ANR	1271752	Callee	triangle_by_4		1270911	0					
ANR	1271753	Identifier	triangle_by_4		1270911	0					
ANR	1271754	ArgumentList	pfs		1270911	1					
ANR	1271755	Argument	pfs		1270911	0					
ANR	1271756	Identifier	pfs		1270911	0					
ANR	1271757	Argument	p1		1270911	1					
ANR	1271758	Identifier	p1		1270911	0					
ANR	1271759	Argument	& p12		1270911	2					
ANR	1271760	UnaryOperationExpression	& p12		1270911	0					
ANR	1271761	UnaryOperator	&		1270911	0					
ANR	1271762	Identifier	p12		1270911	1					
ANR	1271763	Argument	& p01		1270911	3					
ANR	1271764	UnaryOperationExpression	& p01		1270911	0					
ANR	1271765	UnaryOperator	&		1270911	0					
ANR	1271766	Identifier	p01		1270911	1					
ANR	1271767	Argument	& L12		1270911	4					
ANR	1271768	UnaryOperationExpression	& L12		1270911	0					
ANR	1271769	UnaryOperator	&		1270911	0					
ANR	1271770	Identifier	L12		1270911	1					
ANR	1271771	Argument	& L [ 1 ]		1270911	5					
ANR	1271772	UnaryOperationExpression	& L [ 1 ]		1270911	0					
ANR	1271773	UnaryOperator	&		1270911	0					
ANR	1271774	ArrayIndexing	L [ 1 ]		1270911	1					
ANR	1271775	Identifier	L		1270911	0					
ANR	1271776	PrimaryExpression	1		1270911	1					
ANR	1271777	Argument	& L01		1270911	6					
ANR	1271778	UnaryOperationExpression	& L01		1270911	0					
ANR	1271779	UnaryOperator	&		1270911	0					
ANR	1271780	Identifier	L01		1270911	1					
ANR	1271781	Argument	cd / 2		1270911	7					
ANR	1271782	MultiplicativeExpression	cd / 2		1270911	0		/			
ANR	1271783	Identifier	cd		1270911	0					
ANR	1271784	PrimaryExpression	2		1270911	1					
ANR	1271785	Argument	sd / 2		1270911	8					
ANR	1271786	MultiplicativeExpression	sd / 2		1270911	0		/			
ANR	1271787	Identifier	sd		1270911	0					
ANR	1271788	PrimaryExpression	2		1270911	1					
ANR	1271789	IfStatement	if ( code >= 0 )		1270911	23					
ANR	1271790	Condition	code >= 0	2857:8:107125:107133	1270911	0	True				
ANR	1271791	RelationalExpression	code >= 0		1270911	0		>=			
ANR	1271792	Identifier	code		1270911	0					
ANR	1271793	PrimaryExpression	0		1270911	1					
ANR	1271794	CompoundStatement		92:19:3572:3572	1270911	1					
ANR	1271795	IfStatement	if ( LAZY_WEDGES )		1270911	0					
ANR	1271796	Condition	LAZY_WEDGES	2858:12:107150:107160	1270911	0	True				
ANR	1271797	Identifier	LAZY_WEDGES		1270911	0					
ANR	1271798	ExpressionStatement	"move_wedge ( & L12 , l12 , true )"	2859:12:107175:107202	1270911	1	True				
ANR	1271799	CallExpression	"move_wedge ( & L12 , l12 , true )"		1270911	0					
ANR	1271800	Callee	move_wedge		1270911	0					
ANR	1271801	Identifier	move_wedge		1270911	0					
ANR	1271802	ArgumentList	& L12		1270911	1					
ANR	1271803	Argument	& L12		1270911	0					
ANR	1271804	UnaryOperationExpression	& L12		1270911	0					
ANR	1271805	UnaryOperator	&		1270911	0					
ANR	1271806	Identifier	L12		1270911	1					
ANR	1271807	Argument	l12		1270911	1					
ANR	1271808	Identifier	l12		1270911	0					
ANR	1271809	Argument	true		1270911	2					
ANR	1271810	Identifier	true		1270911	0					
ANR	1271811	ExpressionStatement	"code = triangle_by_4 ( pfs , p2 , & p20 , & p12 , & L20 , & L [ 2 ] , & L12 , cd / 2 , sd / 2 )"	2860:8:107212:107288	1270911	1	True				
ANR	1271812	AssignmentExpression	"code = triangle_by_4 ( pfs , p2 , & p20 , & p12 , & L20 , & L [ 2 ] , & L12 , cd / 2 , sd / 2 )"		1270911	0		=			
ANR	1271813	Identifier	code		1270911	0					
ANR	1271814	CallExpression	"triangle_by_4 ( pfs , p2 , & p20 , & p12 , & L20 , & L [ 2 ] , & L12 , cd / 2 , sd / 2 )"		1270911	1					
ANR	1271815	Callee	triangle_by_4		1270911	0					
ANR	1271816	Identifier	triangle_by_4		1270911	0					
ANR	1271817	ArgumentList	pfs		1270911	1					
ANR	1271818	Argument	pfs		1270911	0					
ANR	1271819	Identifier	pfs		1270911	0					
ANR	1271820	Argument	p2		1270911	1					
ANR	1271821	Identifier	p2		1270911	0					
ANR	1271822	Argument	& p20		1270911	2					
ANR	1271823	UnaryOperationExpression	& p20		1270911	0					
ANR	1271824	UnaryOperator	&		1270911	0					
ANR	1271825	Identifier	p20		1270911	1					
ANR	1271826	Argument	& p12		1270911	3					
ANR	1271827	UnaryOperationExpression	& p12		1270911	0					
ANR	1271828	UnaryOperator	&		1270911	0					
ANR	1271829	Identifier	p12		1270911	1					
ANR	1271830	Argument	& L20		1270911	4					
ANR	1271831	UnaryOperationExpression	& L20		1270911	0					
ANR	1271832	UnaryOperator	&		1270911	0					
ANR	1271833	Identifier	L20		1270911	1					
ANR	1271834	Argument	& L [ 2 ]		1270911	5					
ANR	1271835	UnaryOperationExpression	& L [ 2 ]		1270911	0					
ANR	1271836	UnaryOperator	&		1270911	0					
ANR	1271837	ArrayIndexing	L [ 2 ]		1270911	1					
ANR	1271838	Identifier	L		1270911	0					
ANR	1271839	PrimaryExpression	2		1270911	1					
ANR	1271840	Argument	& L12		1270911	6					
ANR	1271841	UnaryOperationExpression	& L12		1270911	0					
ANR	1271842	UnaryOperator	&		1270911	0					
ANR	1271843	Identifier	L12		1270911	1					
ANR	1271844	Argument	cd / 2		1270911	7					
ANR	1271845	MultiplicativeExpression	cd / 2		1270911	0		/			
ANR	1271846	Identifier	cd		1270911	0					
ANR	1271847	PrimaryExpression	2		1270911	1					
ANR	1271848	Argument	sd / 2		1270911	8					
ANR	1271849	MultiplicativeExpression	sd / 2		1270911	0		/			
ANR	1271850	Identifier	sd		1270911	0					
ANR	1271851	PrimaryExpression	2		1270911	1					
ANR	1271852	IfStatement	if ( code >= 0 )		1270911	24					
ANR	1271853	Condition	code >= 0	2862:8:107304:107312	1270911	0	True				
ANR	1271854	RelationalExpression	code >= 0		1270911	0		>=			
ANR	1271855	Identifier	code		1270911	0					
ANR	1271856	PrimaryExpression	0		1270911	1					
ANR	1271857	CompoundStatement		97:19:3751:3751	1270911	1					
ANR	1271858	ExpressionStatement	L [ 0 ] . last_side = L [ 1 ] . last_side = L [ 2 ] . last_side = true	2863:8:107325:107380	1270911	0	True				
ANR	1271859	AssignmentExpression	L [ 0 ] . last_side = L [ 1 ] . last_side = L [ 2 ] . last_side = true		1270911	0		=			
ANR	1271860	MemberAccess	L [ 0 ] . last_side		1270911	0					
ANR	1271861	ArrayIndexing	L [ 0 ]		1270911	0					
ANR	1271862	Identifier	L		1270911	0					
ANR	1271863	PrimaryExpression	0		1270911	1					
ANR	1271864	Identifier	last_side		1270911	1					
ANR	1271865	AssignmentExpression	L [ 1 ] . last_side = L [ 2 ] . last_side = true		1270911	1		=			
ANR	1271866	MemberAccess	L [ 1 ] . last_side		1270911	0					
ANR	1271867	ArrayIndexing	L [ 1 ]		1270911	0					
ANR	1271868	Identifier	L		1270911	0					
ANR	1271869	PrimaryExpression	1		1270911	1					
ANR	1271870	Identifier	last_side		1270911	1					
ANR	1271871	AssignmentExpression	L [ 2 ] . last_side = true		1270911	1		=			
ANR	1271872	MemberAccess	L [ 2 ] . last_side		1270911	0					
ANR	1271873	ArrayIndexing	L [ 2 ]		1270911	0					
ANR	1271874	Identifier	L		1270911	0					
ANR	1271875	PrimaryExpression	2		1270911	1					
ANR	1271876	Identifier	last_side		1270911	1					
ANR	1271877	Identifier	true		1270911	1					
ANR	1271878	ExpressionStatement	"code = triangle_by_4 ( pfs , & p01 , & p12 , & p20 , & L [ 1 ] , & L [ 2 ] , & L [ 0 ] , cd / 2 , sd / 2 )"	2864:8:107390:107470	1270911	1	True				
ANR	1271879	AssignmentExpression	"code = triangle_by_4 ( pfs , & p01 , & p12 , & p20 , & L [ 1 ] , & L [ 2 ] , & L [ 0 ] , cd / 2 , sd / 2 )"		1270911	0		=			
ANR	1271880	Identifier	code		1270911	0					
ANR	1271881	CallExpression	"triangle_by_4 ( pfs , & p01 , & p12 , & p20 , & L [ 1 ] , & L [ 2 ] , & L [ 0 ] , cd / 2 , sd / 2 )"		1270911	1					
ANR	1271882	Callee	triangle_by_4		1270911	0					
ANR	1271883	Identifier	triangle_by_4		1270911	0					
ANR	1271884	ArgumentList	pfs		1270911	1					
ANR	1271885	Argument	pfs		1270911	0					
ANR	1271886	Identifier	pfs		1270911	0					
ANR	1271887	Argument	& p01		1270911	1					
ANR	1271888	UnaryOperationExpression	& p01		1270911	0					
ANR	1271889	UnaryOperator	&		1270911	0					
ANR	1271890	Identifier	p01		1270911	1					
ANR	1271891	Argument	& p12		1270911	2					
ANR	1271892	UnaryOperationExpression	& p12		1270911	0					
ANR	1271893	UnaryOperator	&		1270911	0					
ANR	1271894	Identifier	p12		1270911	1					
ANR	1271895	Argument	& p20		1270911	3					
ANR	1271896	UnaryOperationExpression	& p20		1270911	0					
ANR	1271897	UnaryOperator	&		1270911	0					
ANR	1271898	Identifier	p20		1270911	1					
ANR	1271899	Argument	& L [ 1 ]		1270911	4					
ANR	1271900	UnaryOperationExpression	& L [ 1 ]		1270911	0					
ANR	1271901	UnaryOperator	&		1270911	0					
ANR	1271902	ArrayIndexing	L [ 1 ]		1270911	1					
ANR	1271903	Identifier	L		1270911	0					
ANR	1271904	PrimaryExpression	1		1270911	1					
ANR	1271905	Argument	& L [ 2 ]		1270911	5					
ANR	1271906	UnaryOperationExpression	& L [ 2 ]		1270911	0					
ANR	1271907	UnaryOperator	&		1270911	0					
ANR	1271908	ArrayIndexing	L [ 2 ]		1270911	1					
ANR	1271909	Identifier	L		1270911	0					
ANR	1271910	PrimaryExpression	2		1270911	1					
ANR	1271911	Argument	& L [ 0 ]		1270911	6					
ANR	1271912	UnaryOperationExpression	& L [ 0 ]		1270911	0					
ANR	1271913	UnaryOperator	&		1270911	0					
ANR	1271914	ArrayIndexing	L [ 0 ]		1270911	1					
ANR	1271915	Identifier	L		1270911	0					
ANR	1271916	PrimaryExpression	0		1270911	1					
ANR	1271917	Argument	cd / 2		1270911	7					
ANR	1271918	MultiplicativeExpression	cd / 2		1270911	0		/			
ANR	1271919	Identifier	cd		1270911	0					
ANR	1271920	PrimaryExpression	2		1270911	1					
ANR	1271921	Argument	sd / 2		1270911	8					
ANR	1271922	MultiplicativeExpression	sd / 2		1270911	0		/			
ANR	1271923	Identifier	sd		1270911	0					
ANR	1271924	PrimaryExpression	2		1270911	1					
ANR	1271925	IfStatement	if ( LAZY_WEDGES )		1270911	25					
ANR	1271926	Condition	LAZY_WEDGES	2866:8:107486:107496	1270911	0	True				
ANR	1271927	Identifier	LAZY_WEDGES		1270911	0					
ANR	1271928	CompoundStatement		101:21:3935:3935	1270911	1					
ANR	1271929	IfStatement	if ( code >= 0 )		1270911	0					
ANR	1271930	Condition	code >= 0	2867:12:107513:107521	1270911	0	True				
ANR	1271931	RelationalExpression	code >= 0		1270911	0		>=			
ANR	1271932	Identifier	code		1270911	0					
ANR	1271933	PrimaryExpression	0		1270911	1					
ANR	1271934	ExpressionStatement	"code = close_wedge_median ( pfs , l01 , p0 -> c , p1 -> c )"	2868:12:107536:107585	1270911	1	True				
ANR	1271935	AssignmentExpression	"code = close_wedge_median ( pfs , l01 , p0 -> c , p1 -> c )"		1270911	0		=			
ANR	1271936	Identifier	code		1270911	0					
ANR	1271937	CallExpression	"close_wedge_median ( pfs , l01 , p0 -> c , p1 -> c )"		1270911	1					
ANR	1271938	Callee	close_wedge_median		1270911	0					
ANR	1271939	Identifier	close_wedge_median		1270911	0					
ANR	1271940	ArgumentList	pfs		1270911	1					
ANR	1271941	Argument	pfs		1270911	0					
ANR	1271942	Identifier	pfs		1270911	0					
ANR	1271943	Argument	l01		1270911	1					
ANR	1271944	Identifier	l01		1270911	0					
ANR	1271945	Argument	p0 -> c		1270911	2					
ANR	1271946	PtrMemberAccess	p0 -> c		1270911	0					
ANR	1271947	Identifier	p0		1270911	0					
ANR	1271948	Identifier	c		1270911	1					
ANR	1271949	Argument	p1 -> c		1270911	3					
ANR	1271950	PtrMemberAccess	p1 -> c		1270911	0					
ANR	1271951	Identifier	p1		1270911	0					
ANR	1271952	Identifier	c		1270911	1					
ANR	1271953	IfStatement	if ( code >= 0 )		1270911	1					
ANR	1271954	Condition	code >= 0	2869:12:107599:107607	1270911	0	True				
ANR	1271955	RelationalExpression	code >= 0		1270911	0		>=			
ANR	1271956	Identifier	code		1270911	0					
ANR	1271957	PrimaryExpression	0		1270911	1					
ANR	1271958	ExpressionStatement	"code = close_wedge_median ( pfs , l12 , p1 -> c , p2 -> c )"	2870:12:107622:107671	1270911	1	True				
ANR	1271959	AssignmentExpression	"code = close_wedge_median ( pfs , l12 , p1 -> c , p2 -> c )"		1270911	0		=			
ANR	1271960	Identifier	code		1270911	0					
ANR	1271961	CallExpression	"close_wedge_median ( pfs , l12 , p1 -> c , p2 -> c )"		1270911	1					
ANR	1271962	Callee	close_wedge_median		1270911	0					
ANR	1271963	Identifier	close_wedge_median		1270911	0					
ANR	1271964	ArgumentList	pfs		1270911	1					
ANR	1271965	Argument	pfs		1270911	0					
ANR	1271966	Identifier	pfs		1270911	0					
ANR	1271967	Argument	l12		1270911	1					
ANR	1271968	Identifier	l12		1270911	0					
ANR	1271969	Argument	p1 -> c		1270911	2					
ANR	1271970	PtrMemberAccess	p1 -> c		1270911	0					
ANR	1271971	Identifier	p1		1270911	0					
ANR	1271972	Identifier	c		1270911	1					
ANR	1271973	Argument	p2 -> c		1270911	3					
ANR	1271974	PtrMemberAccess	p2 -> c		1270911	0					
ANR	1271975	Identifier	p2		1270911	0					
ANR	1271976	Identifier	c		1270911	1					
ANR	1271977	IfStatement	if ( code >= 0 )		1270911	2					
ANR	1271978	Condition	code >= 0	2871:12:107685:107693	1270911	0	True				
ANR	1271979	RelationalExpression	code >= 0		1270911	0		>=			
ANR	1271980	Identifier	code		1270911	0					
ANR	1271981	PrimaryExpression	0		1270911	1					
ANR	1271982	ExpressionStatement	"code = close_wedge_median ( pfs , l20 , p2 -> c , p0 -> c )"	2872:12:107708:107757	1270911	1	True				
ANR	1271983	AssignmentExpression	"code = close_wedge_median ( pfs , l20 , p2 -> c , p0 -> c )"		1270911	0		=			
ANR	1271984	Identifier	code		1270911	0					
ANR	1271985	CallExpression	"close_wedge_median ( pfs , l20 , p2 -> c , p0 -> c )"		1270911	1					
ANR	1271986	Callee	close_wedge_median		1270911	0					
ANR	1271987	Identifier	close_wedge_median		1270911	0					
ANR	1271988	ArgumentList	pfs		1270911	1					
ANR	1271989	Argument	pfs		1270911	0					
ANR	1271990	Identifier	pfs		1270911	0					
ANR	1271991	Argument	l20		1270911	1					
ANR	1271992	Identifier	l20		1270911	0					
ANR	1271993	Argument	p2 -> c		1270911	2					
ANR	1271994	PtrMemberAccess	p2 -> c		1270911	0					
ANR	1271995	Identifier	p2		1270911	0					
ANR	1271996	Identifier	c		1270911	1					
ANR	1271997	Argument	p0 -> c		1270911	3					
ANR	1271998	PtrMemberAccess	p0 -> c		1270911	0					
ANR	1271999	Identifier	p0		1270911	0					
ANR	1272000	Identifier	c		1270911	1					
ANR	1272001	IfStatement	if ( code >= 0 )		1270911	3					
ANR	1272002	Condition	code >= 0	2873:12:107771:107779	1270911	0	True				
ANR	1272003	RelationalExpression	code >= 0		1270911	0		>=			
ANR	1272004	Identifier	code		1270911	0					
ANR	1272005	PrimaryExpression	0		1270911	1					
ANR	1272006	ExpressionStatement	"code = terminate_wedge_vertex_list ( pfs , & L [ 0 ] , p01 . c , p20 . c )"	2874:12:107794:107854	1270911	1	True				
ANR	1272007	AssignmentExpression	"code = terminate_wedge_vertex_list ( pfs , & L [ 0 ] , p01 . c , p20 . c )"		1270911	0		=			
ANR	1272008	Identifier	code		1270911	0					
ANR	1272009	CallExpression	"terminate_wedge_vertex_list ( pfs , & L [ 0 ] , p01 . c , p20 . c )"		1270911	1					
ANR	1272010	Callee	terminate_wedge_vertex_list		1270911	0					
ANR	1272011	Identifier	terminate_wedge_vertex_list		1270911	0					
ANR	1272012	ArgumentList	pfs		1270911	1					
ANR	1272013	Argument	pfs		1270911	0					
ANR	1272014	Identifier	pfs		1270911	0					
ANR	1272015	Argument	& L [ 0 ]		1270911	1					
ANR	1272016	UnaryOperationExpression	& L [ 0 ]		1270911	0					
ANR	1272017	UnaryOperator	&		1270911	0					
ANR	1272018	ArrayIndexing	L [ 0 ]		1270911	1					
ANR	1272019	Identifier	L		1270911	0					
ANR	1272020	PrimaryExpression	0		1270911	1					
ANR	1272021	Argument	p01 . c		1270911	2					
ANR	1272022	MemberAccess	p01 . c		1270911	0					
ANR	1272023	Identifier	p01		1270911	0					
ANR	1272024	Identifier	c		1270911	1					
ANR	1272025	Argument	p20 . c		1270911	3					
ANR	1272026	MemberAccess	p20 . c		1270911	0					
ANR	1272027	Identifier	p20		1270911	0					
ANR	1272028	Identifier	c		1270911	1					
ANR	1272029	IfStatement	if ( code >= 0 )		1270911	4					
ANR	1272030	Condition	code >= 0	2875:12:107868:107876	1270911	0	True				
ANR	1272031	RelationalExpression	code >= 0		1270911	0		>=			
ANR	1272032	Identifier	code		1270911	0					
ANR	1272033	PrimaryExpression	0		1270911	1					
ANR	1272034	ExpressionStatement	"code = terminate_wedge_vertex_list ( pfs , & L [ 1 ] , p12 . c , p01 . c )"	2876:12:107891:107951	1270911	1	True				
ANR	1272035	AssignmentExpression	"code = terminate_wedge_vertex_list ( pfs , & L [ 1 ] , p12 . c , p01 . c )"		1270911	0		=			
ANR	1272036	Identifier	code		1270911	0					
ANR	1272037	CallExpression	"terminate_wedge_vertex_list ( pfs , & L [ 1 ] , p12 . c , p01 . c )"		1270911	1					
ANR	1272038	Callee	terminate_wedge_vertex_list		1270911	0					
ANR	1272039	Identifier	terminate_wedge_vertex_list		1270911	0					
ANR	1272040	ArgumentList	pfs		1270911	1					
ANR	1272041	Argument	pfs		1270911	0					
ANR	1272042	Identifier	pfs		1270911	0					
ANR	1272043	Argument	& L [ 1 ]		1270911	1					
ANR	1272044	UnaryOperationExpression	& L [ 1 ]		1270911	0					
ANR	1272045	UnaryOperator	&		1270911	0					
ANR	1272046	ArrayIndexing	L [ 1 ]		1270911	1					
ANR	1272047	Identifier	L		1270911	0					
ANR	1272048	PrimaryExpression	1		1270911	1					
ANR	1272049	Argument	p12 . c		1270911	2					
ANR	1272050	MemberAccess	p12 . c		1270911	0					
ANR	1272051	Identifier	p12		1270911	0					
ANR	1272052	Identifier	c		1270911	1					
ANR	1272053	Argument	p01 . c		1270911	3					
ANR	1272054	MemberAccess	p01 . c		1270911	0					
ANR	1272055	Identifier	p01		1270911	0					
ANR	1272056	Identifier	c		1270911	1					
ANR	1272057	IfStatement	if ( code >= 0 )		1270911	5					
ANR	1272058	Condition	code >= 0	2877:12:107965:107973	1270911	0	True				
ANR	1272059	RelationalExpression	code >= 0		1270911	0		>=			
ANR	1272060	Identifier	code		1270911	0					
ANR	1272061	PrimaryExpression	0		1270911	1					
ANR	1272062	ExpressionStatement	"code = terminate_wedge_vertex_list ( pfs , & L [ 2 ] , p20 . c , p12 . c )"	2878:12:107988:108048	1270911	1	True				
ANR	1272063	AssignmentExpression	"code = terminate_wedge_vertex_list ( pfs , & L [ 2 ] , p20 . c , p12 . c )"		1270911	0		=			
ANR	1272064	Identifier	code		1270911	0					
ANR	1272065	CallExpression	"terminate_wedge_vertex_list ( pfs , & L [ 2 ] , p20 . c , p12 . c )"		1270911	1					
ANR	1272066	Callee	terminate_wedge_vertex_list		1270911	0					
ANR	1272067	Identifier	terminate_wedge_vertex_list		1270911	0					
ANR	1272068	ArgumentList	pfs		1270911	1					
ANR	1272069	Argument	pfs		1270911	0					
ANR	1272070	Identifier	pfs		1270911	0					
ANR	1272071	Argument	& L [ 2 ]		1270911	1					
ANR	1272072	UnaryOperationExpression	& L [ 2 ]		1270911	0					
ANR	1272073	UnaryOperator	&		1270911	0					
ANR	1272074	ArrayIndexing	L [ 2 ]		1270911	1					
ANR	1272075	Identifier	L		1270911	0					
ANR	1272076	PrimaryExpression	2		1270911	1					
ANR	1272077	Argument	p20 . c		1270911	2					
ANR	1272078	MemberAccess	p20 . c		1270911	0					
ANR	1272079	Identifier	p20		1270911	0					
ANR	1272080	Identifier	c		1270911	1					
ANR	1272081	Argument	p12 . c		1270911	3					
ANR	1272082	MemberAccess	p12 . c		1270911	0					
ANR	1272083	Identifier	p12		1270911	0					
ANR	1272084	Identifier	c		1270911	1					
ANR	1272085	ExpressionStatement	pfs -> inside = inside_save	2880:4:108060:108085	1270911	26	True				
ANR	1272086	AssignmentExpression	pfs -> inside = inside_save		1270911	0		=			
ANR	1272087	PtrMemberAccess	pfs -> inside		1270911	0					
ANR	1272088	Identifier	pfs		1270911	0					
ANR	1272089	Identifier	inside		1270911	1					
ANR	1272090	Identifier	inside_save		1270911	1					
ANR	1272091	Label	out :	2881:0:108087:108090	1270911	27	True				
ANR	1272092	Identifier	out		1270911	0					
ANR	1272093	ExpressionStatement	"release_colors_inline ( pfs , color_stack_ptr , 3 )"	2882:4:108096:108142	1270911	28	True				
ANR	1272094	CallExpression	"release_colors_inline ( pfs , color_stack_ptr , 3 )"		1270911	0					
ANR	1272095	Callee	release_colors_inline		1270911	0					
ANR	1272096	Identifier	release_colors_inline		1270911	0					
ANR	1272097	ArgumentList	pfs		1270911	1					
ANR	1272098	Argument	pfs		1270911	0					
ANR	1272099	Identifier	pfs		1270911	0					
ANR	1272100	Argument	color_stack_ptr		1270911	1					
ANR	1272101	Identifier	color_stack_ptr		1270911	0					
ANR	1272102	Argument	3		1270911	2					
ANR	1272103	PrimaryExpression	3		1270911	0					
ANR	1272104	ReturnStatement	return code ;	2883:4:108148:108159	1270911	29	True				
ANR	1272105	Identifier	code		1270911	0					
ANR	1272106	ReturnType	static int		1270911	1					
ANR	1272107	Identifier	triangle_by_4		1270911	2					
ANR	1272108	ParameterList	"patch_fill_state_t * pfs , const shading_vertex_t * p0 , const shading_vertex_t * p1 , const shading_vertex_t * p2 , wedge_vertex_list_t * l01 , wedge_vertex_list_t * l12 , wedge_vertex_list_t * l20 , double cd , fixed sd"		1270911	3					
ANR	1272109	Parameter	patch_fill_state_t * pfs	2762:14:103331:103353	1270911	0	True				
ANR	1272110	ParameterType	patch_fill_state_t *		1270911	0					
ANR	1272111	Identifier	pfs		1270911	1					
ANR	1272112	Parameter	const shading_vertex_t * p0	2763:8:103364:103389	1270911	1	True				
ANR	1272113	ParameterType	const shading_vertex_t *		1270911	0					
ANR	1272114	Identifier	p0		1270911	1					
ANR	1272115	Parameter	const shading_vertex_t * p1	2763:36:103392:103417	1270911	2	True				
ANR	1272116	ParameterType	const shading_vertex_t *		1270911	0					
ANR	1272117	Identifier	p1		1270911	1					
ANR	1272118	Parameter	const shading_vertex_t * p2	2763:64:103420:103445	1270911	3	True				
ANR	1272119	ParameterType	const shading_vertex_t *		1270911	0					
ANR	1272120	Identifier	p2		1270911	1					
ANR	1272121	Parameter	wedge_vertex_list_t * l01	2764:8:103456:103479	1270911	4	True				
ANR	1272122	ParameterType	wedge_vertex_list_t *		1270911	0					
ANR	1272123	Identifier	l01		1270911	1					
ANR	1272124	Parameter	wedge_vertex_list_t * l12	2764:34:103482:103505	1270911	5	True				
ANR	1272125	ParameterType	wedge_vertex_list_t *		1270911	0					
ANR	1272126	Identifier	l12		1270911	1					
ANR	1272127	Parameter	wedge_vertex_list_t * l20	2764:60:103508:103531	1270911	6	True				
ANR	1272128	ParameterType	wedge_vertex_list_t *		1270911	0					
ANR	1272129	Identifier	l20		1270911	1					
ANR	1272130	Parameter	double cd	2765:8:103542:103550	1270911	7	True				
ANR	1272131	ParameterType	double		1270911	0					
ANR	1272132	Identifier	cd		1270911	1					
ANR	1272133	Parameter	fixed sd	2765:19:103553:103560	1270911	8	True				
ANR	1272134	ParameterType	fixed		1270911	0					
ANR	1272135	Identifier	sd		1270911	1					
ANR	1272136	CFGEntryNode	ENTRY		1270911		True				
ANR	1272137	CFGExitNode	EXIT		1270911		True				
ANR	1272138	Symbol	& p12 . p		1270911						
ANR	1272139	Symbol	fill_triangle_wedge		1270911						
ANR	1272140	Symbol	r . q		1270911						
ANR	1272141	Symbol	d12		1270911						
ANR	1272142	Symbol	r . p		1270911						
ANR	1272143	Symbol	pfs -> Function		1270911						
ANR	1272144	Symbol	L20		1270911						
ANR	1272145	Symbol	l12		1270911						
ANR	1272146	Symbol	inside		1270911						
ANR	1272147	Symbol	try_device_linear_color		1270911						
ANR	1272148	Symbol	p12		1270911						
ANR	1272149	Symbol	& p20		1270911						
ANR	1272150	Symbol	r1 . q		1270911						
ANR	1272151	Symbol	r1 . p		1270911						
ANR	1272152	Symbol	p1 -> c		1270911						
ANR	1272153	Symbol	& p20 . p		1270911						
ANR	1272154	Symbol	NULL		1270911						
ANR	1272155	Symbol	d20		1270911						
ANR	1272156	Symbol	triangle_by_4		1270911						
ANR	1272157	Symbol	p01 . c		1270911						
ANR	1272158	Symbol	* pfs		1270911						
ANR	1272159	Symbol	l20		1270911						
ANR	1272160	Symbol	p20		1270911						
ANR	1272161	Symbol	& p12		1270911						
ANR	1272162	Symbol	L [ 2 ] . last_side		1270911						
ANR	1272163	Symbol	color_stack_ptr		1270911						
ANR	1272164	Symbol	p2 -> c		1270911						
ANR	1272165	Symbol	& L20		1270911						
ANR	1272166	Symbol	true		1270911						
ANR	1272167	Symbol	& p1 -> p		1270911						
ANR	1272168	Symbol	pfs		1270911						
ANR	1272169	Symbol	p0		1270911						
ANR	1272170	Symbol	p20 . c		1270911						
ANR	1272171	Symbol	p1		1270911						
ANR	1272172	Symbol	p2		1270911						
ANR	1272173	Symbol	gs_error_unregistered		1270911						
ANR	1272174	Symbol	L [ 0 ] . last_side		1270911						
ANR	1272175	Symbol	code		1270911						
ANR	1272176	Symbol	p12 . c		1270911						
ANR	1272177	Symbol	L01		1270911						
ANR	1272178	Symbol	L		1270911						
ANR	1272179	Symbol	pfs -> decomposition_limit		1270911						
ANR	1272180	Symbol	close_wedge_median		1270911						
ANR	1272181	Symbol	inside_save		1270911						
ANR	1272182	Symbol	& p01		1270911						
ANR	1272183	Symbol	sd		1270911						
ANR	1272184	Symbol	count_of		1270911						
ANR	1272185	Symbol	& L12		1270911						
ANR	1272186	Symbol	* L		1270911						
ANR	1272187	Symbol	& p2 -> p		1270911						
ANR	1272188	Symbol	r . q . x		1270911						
ANR	1272189	Symbol	reserve_colors_inline		1270911						
ANR	1272190	Symbol	r . q . y		1270911						
ANR	1272191	Symbol	L [ 1 ] . last_side		1270911						
ANR	1272192	Symbol	make_wedge_median		1270911						
ANR	1272193	Symbol	LAZY_WEDGES		1270911						
ANR	1272194	Symbol	cd		1270911						
ANR	1272195	Symbol	pfs -> rect		1270911						
ANR	1272196	Symbol	r1 . p . y		1270911						
ANR	1272197	Symbol	c		1270911						
ANR	1272198	Symbol	r . p . x		1270911						
ANR	1272199	Symbol	d01		1270911						
ANR	1272200	Symbol	* p1		1270911						
ANR	1272201	Symbol	pfs -> inside		1270911						
ANR	1272202	Symbol	r . p . y		1270911						
ANR	1272203	Symbol	* p0		1270911						
ANR	1272204	Symbol	pfs -> smoothness		1270911						
ANR	1272205	Symbol	r1 . p . x		1270911						
ANR	1272206	Symbol	& p01 . p		1270911						
ANR	1272207	Symbol	false		1270911						
ANR	1272208	Symbol	terminate_wedge_vertex_list		1270911						
ANR	1272209	Symbol	COLOR_CONTIGUITY		1270911						
ANR	1272210	Symbol	* p2		1270911						
ANR	1272211	Symbol	l01		1270911						
ANR	1272212	Symbol	L12		1270911						
ANR	1272213	Symbol	* c		1270911						
ANR	1272214	Symbol	p0 -> c		1270911						
ANR	1272215	Symbol	& p0 -> p		1270911						
ANR	1272216	Symbol	p01		1270911						
ANR	1272217	Symbol	r1 . q . x		1270911						
ANR	1272218	Symbol	r1 . q . y		1270911						
ANR	1272219	Symbol	r		1270911						
ANR	1272220	Symbol	& L01		1270911						
ANR	1272221	Symbol	& r		1270911						
ANR	1272222	Symbol	color_span		1270911						
ANR	1272223	Symbol	constant_color_triangle		1270911						
ANR	1272224	Symbol	r1		1270911						
ANR	1272225	Function	fill_triangle	2886:0:108164:109100							
ANR	1272226	FunctionDef	"fill_triangle (patch_fill_state_t * pfs , const shading_vertex_t * p0 , const shading_vertex_t * p1 , const shading_vertex_t * p2 , wedge_vertex_list_t * l01 , wedge_vertex_list_t * l12 , wedge_vertex_list_t * l20)"		1272225	0					
ANR	1272227	CompoundStatement		2890:0:108399:109100	1272225	0					
ANR	1272228	IdentifierDeclStatement	"fixed sd01 = max ( any_abs ( p1 -> p . x - p0 -> p . x ) , any_abs ( p1 -> p . y - p0 -> p . y ) ) ;"	2891:4:108405:108477	1272225	0	True				
ANR	1272229	IdentifierDecl	"sd01 = max ( any_abs ( p1 -> p . x - p0 -> p . x ) , any_abs ( p1 -> p . y - p0 -> p . y ) )"		1272225	0					
ANR	1272230	IdentifierDeclType	fixed		1272225	0					
ANR	1272231	Identifier	sd01		1272225	1					
ANR	1272232	AssignmentExpression	"sd01 = max ( any_abs ( p1 -> p . x - p0 -> p . x ) , any_abs ( p1 -> p . y - p0 -> p . y ) )"		1272225	2		=			
ANR	1272233	Identifier	sd01		1272225	0					
ANR	1272234	CallExpression	"max ( any_abs ( p1 -> p . x - p0 -> p . x ) , any_abs ( p1 -> p . y - p0 -> p . y ) )"		1272225	1					
ANR	1272235	Callee	max		1272225	0					
ANR	1272236	Identifier	max		1272225	0					
ANR	1272237	ArgumentList	any_abs ( p1 -> p . x - p0 -> p . x )		1272225	1					
ANR	1272238	Argument	any_abs ( p1 -> p . x - p0 -> p . x )		1272225	0					
ANR	1272239	CallExpression	any_abs ( p1 -> p . x - p0 -> p . x )		1272225	0					
ANR	1272240	Callee	any_abs		1272225	0					
ANR	1272241	Identifier	any_abs		1272225	0					
ANR	1272242	ArgumentList	p1 -> p . x - p0 -> p . x		1272225	1					
ANR	1272243	Argument	p1 -> p . x - p0 -> p . x		1272225	0					
ANR	1272244	AdditiveExpression	p1 -> p . x - p0 -> p . x		1272225	0		-			
ANR	1272245	MemberAccess	p1 -> p . x		1272225	0					
ANR	1272246	PtrMemberAccess	p1 -> p		1272225	0					
ANR	1272247	Identifier	p1		1272225	0					
ANR	1272248	Identifier	p		1272225	1					
ANR	1272249	Identifier	x		1272225	1					
ANR	1272250	MemberAccess	p0 -> p . x		1272225	1					
ANR	1272251	PtrMemberAccess	p0 -> p		1272225	0					
ANR	1272252	Identifier	p0		1272225	0					
ANR	1272253	Identifier	p		1272225	1					
ANR	1272254	Identifier	x		1272225	1					
ANR	1272255	Argument	any_abs ( p1 -> p . y - p0 -> p . y )		1272225	1					
ANR	1272256	CallExpression	any_abs ( p1 -> p . y - p0 -> p . y )		1272225	0					
ANR	1272257	Callee	any_abs		1272225	0					
ANR	1272258	Identifier	any_abs		1272225	0					
ANR	1272259	ArgumentList	p1 -> p . y - p0 -> p . y		1272225	1					
ANR	1272260	Argument	p1 -> p . y - p0 -> p . y		1272225	0					
ANR	1272261	AdditiveExpression	p1 -> p . y - p0 -> p . y		1272225	0		-			
ANR	1272262	MemberAccess	p1 -> p . y		1272225	0					
ANR	1272263	PtrMemberAccess	p1 -> p		1272225	0					
ANR	1272264	Identifier	p1		1272225	0					
ANR	1272265	Identifier	p		1272225	1					
ANR	1272266	Identifier	y		1272225	1					
ANR	1272267	MemberAccess	p0 -> p . y		1272225	1					
ANR	1272268	PtrMemberAccess	p0 -> p		1272225	0					
ANR	1272269	Identifier	p0		1272225	0					
ANR	1272270	Identifier	p		1272225	1					
ANR	1272271	Identifier	y		1272225	1					
ANR	1272272	IdentifierDeclStatement	"fixed sd12 = max ( any_abs ( p2 -> p . x - p1 -> p . x ) , any_abs ( p2 -> p . y - p1 -> p . y ) ) ;"	2892:4:108483:108555	1272225	1	True				
ANR	1272273	IdentifierDecl	"sd12 = max ( any_abs ( p2 -> p . x - p1 -> p . x ) , any_abs ( p2 -> p . y - p1 -> p . y ) )"		1272225	0					
ANR	1272274	IdentifierDeclType	fixed		1272225	0					
ANR	1272275	Identifier	sd12		1272225	1					
ANR	1272276	AssignmentExpression	"sd12 = max ( any_abs ( p2 -> p . x - p1 -> p . x ) , any_abs ( p2 -> p . y - p1 -> p . y ) )"		1272225	2		=			
ANR	1272277	Identifier	sd12		1272225	0					
ANR	1272278	CallExpression	"max ( any_abs ( p2 -> p . x - p1 -> p . x ) , any_abs ( p2 -> p . y - p1 -> p . y ) )"		1272225	1					
ANR	1272279	Callee	max		1272225	0					
ANR	1272280	Identifier	max		1272225	0					
ANR	1272281	ArgumentList	any_abs ( p2 -> p . x - p1 -> p . x )		1272225	1					
ANR	1272282	Argument	any_abs ( p2 -> p . x - p1 -> p . x )		1272225	0					
ANR	1272283	CallExpression	any_abs ( p2 -> p . x - p1 -> p . x )		1272225	0					
ANR	1272284	Callee	any_abs		1272225	0					
ANR	1272285	Identifier	any_abs		1272225	0					
ANR	1272286	ArgumentList	p2 -> p . x - p1 -> p . x		1272225	1					
ANR	1272287	Argument	p2 -> p . x - p1 -> p . x		1272225	0					
ANR	1272288	AdditiveExpression	p2 -> p . x - p1 -> p . x		1272225	0		-			
ANR	1272289	MemberAccess	p2 -> p . x		1272225	0					
ANR	1272290	PtrMemberAccess	p2 -> p		1272225	0					
ANR	1272291	Identifier	p2		1272225	0					
ANR	1272292	Identifier	p		1272225	1					
ANR	1272293	Identifier	x		1272225	1					
ANR	1272294	MemberAccess	p1 -> p . x		1272225	1					
ANR	1272295	PtrMemberAccess	p1 -> p		1272225	0					
ANR	1272296	Identifier	p1		1272225	0					
ANR	1272297	Identifier	p		1272225	1					
ANR	1272298	Identifier	x		1272225	1					
ANR	1272299	Argument	any_abs ( p2 -> p . y - p1 -> p . y )		1272225	1					
ANR	1272300	CallExpression	any_abs ( p2 -> p . y - p1 -> p . y )		1272225	0					
ANR	1272301	Callee	any_abs		1272225	0					
ANR	1272302	Identifier	any_abs		1272225	0					
ANR	1272303	ArgumentList	p2 -> p . y - p1 -> p . y		1272225	1					
ANR	1272304	Argument	p2 -> p . y - p1 -> p . y		1272225	0					
ANR	1272305	AdditiveExpression	p2 -> p . y - p1 -> p . y		1272225	0		-			
ANR	1272306	MemberAccess	p2 -> p . y		1272225	0					
ANR	1272307	PtrMemberAccess	p2 -> p		1272225	0					
ANR	1272308	Identifier	p2		1272225	0					
ANR	1272309	Identifier	p		1272225	1					
ANR	1272310	Identifier	y		1272225	1					
ANR	1272311	MemberAccess	p1 -> p . y		1272225	1					
ANR	1272312	PtrMemberAccess	p1 -> p		1272225	0					
ANR	1272313	Identifier	p1		1272225	0					
ANR	1272314	Identifier	p		1272225	1					
ANR	1272315	Identifier	y		1272225	1					
ANR	1272316	IdentifierDeclStatement	"fixed sd20 = max ( any_abs ( p0 -> p . x - p2 -> p . x ) , any_abs ( p0 -> p . y - p2 -> p . y ) ) ;"	2893:4:108561:108633	1272225	2	True				
ANR	1272317	IdentifierDecl	"sd20 = max ( any_abs ( p0 -> p . x - p2 -> p . x ) , any_abs ( p0 -> p . y - p2 -> p . y ) )"		1272225	0					
ANR	1272318	IdentifierDeclType	fixed		1272225	0					
ANR	1272319	Identifier	sd20		1272225	1					
ANR	1272320	AssignmentExpression	"sd20 = max ( any_abs ( p0 -> p . x - p2 -> p . x ) , any_abs ( p0 -> p . y - p2 -> p . y ) )"		1272225	2		=			
ANR	1272321	Identifier	sd20		1272225	0					
ANR	1272322	CallExpression	"max ( any_abs ( p0 -> p . x - p2 -> p . x ) , any_abs ( p0 -> p . y - p2 -> p . y ) )"		1272225	1					
ANR	1272323	Callee	max		1272225	0					
ANR	1272324	Identifier	max		1272225	0					
ANR	1272325	ArgumentList	any_abs ( p0 -> p . x - p2 -> p . x )		1272225	1					
ANR	1272326	Argument	any_abs ( p0 -> p . x - p2 -> p . x )		1272225	0					
ANR	1272327	CallExpression	any_abs ( p0 -> p . x - p2 -> p . x )		1272225	0					
ANR	1272328	Callee	any_abs		1272225	0					
ANR	1272329	Identifier	any_abs		1272225	0					
ANR	1272330	ArgumentList	p0 -> p . x - p2 -> p . x		1272225	1					
ANR	1272331	Argument	p0 -> p . x - p2 -> p . x		1272225	0					
ANR	1272332	AdditiveExpression	p0 -> p . x - p2 -> p . x		1272225	0		-			
ANR	1272333	MemberAccess	p0 -> p . x		1272225	0					
ANR	1272334	PtrMemberAccess	p0 -> p		1272225	0					
ANR	1272335	Identifier	p0		1272225	0					
ANR	1272336	Identifier	p		1272225	1					
ANR	1272337	Identifier	x		1272225	1					
ANR	1272338	MemberAccess	p2 -> p . x		1272225	1					
ANR	1272339	PtrMemberAccess	p2 -> p		1272225	0					
ANR	1272340	Identifier	p2		1272225	0					
ANR	1272341	Identifier	p		1272225	1					
ANR	1272342	Identifier	x		1272225	1					
ANR	1272343	Argument	any_abs ( p0 -> p . y - p2 -> p . y )		1272225	1					
ANR	1272344	CallExpression	any_abs ( p0 -> p . y - p2 -> p . y )		1272225	0					
ANR	1272345	Callee	any_abs		1272225	0					
ANR	1272346	Identifier	any_abs		1272225	0					
ANR	1272347	ArgumentList	p0 -> p . y - p2 -> p . y		1272225	1					
ANR	1272348	Argument	p0 -> p . y - p2 -> p . y		1272225	0					
ANR	1272349	AdditiveExpression	p0 -> p . y - p2 -> p . y		1272225	0		-			
ANR	1272350	MemberAccess	p0 -> p . y		1272225	0					
ANR	1272351	PtrMemberAccess	p0 -> p		1272225	0					
ANR	1272352	Identifier	p0		1272225	0					
ANR	1272353	Identifier	p		1272225	1					
ANR	1272354	Identifier	y		1272225	1					
ANR	1272355	MemberAccess	p2 -> p . y		1272225	1					
ANR	1272356	PtrMemberAccess	p2 -> p		1272225	0					
ANR	1272357	Identifier	p2		1272225	0					
ANR	1272358	Identifier	p		1272225	1					
ANR	1272359	Identifier	y		1272225	1					
ANR	1272360	IdentifierDeclStatement	"fixed sd1 = max ( sd01 , sd12 ) ;"	2894:4:108639:108666	1272225	3	True				
ANR	1272361	IdentifierDecl	"sd1 = max ( sd01 , sd12 )"		1272225	0					
ANR	1272362	IdentifierDeclType	fixed		1272225	0					
ANR	1272363	Identifier	sd1		1272225	1					
ANR	1272364	AssignmentExpression	"sd1 = max ( sd01 , sd12 )"		1272225	2		=			
ANR	1272365	Identifier	sd1		1272225	0					
ANR	1272366	CallExpression	"max ( sd01 , sd12 )"		1272225	1					
ANR	1272367	Callee	max		1272225	0					
ANR	1272368	Identifier	max		1272225	0					
ANR	1272369	ArgumentList	sd01		1272225	1					
ANR	1272370	Argument	sd01		1272225	0					
ANR	1272371	Identifier	sd01		1272225	0					
ANR	1272372	Argument	sd12		1272225	1					
ANR	1272373	Identifier	sd12		1272225	0					
ANR	1272374	IdentifierDeclStatement	"fixed sd = max ( sd1 , sd20 ) ;"	2895:4:108672:108697	1272225	4	True				
ANR	1272375	IdentifierDecl	"sd = max ( sd1 , sd20 )"		1272225	0					
ANR	1272376	IdentifierDeclType	fixed		1272225	0					
ANR	1272377	Identifier	sd		1272225	1					
ANR	1272378	AssignmentExpression	"sd = max ( sd1 , sd20 )"		1272225	2		=			
ANR	1272379	Identifier	sd		1272225	0					
ANR	1272380	CallExpression	"max ( sd1 , sd20 )"		1272225	1					
ANR	1272381	Callee	max		1272225	0					
ANR	1272382	Identifier	max		1272225	0					
ANR	1272383	ArgumentList	sd1		1272225	1					
ANR	1272384	Argument	sd1		1272225	0					
ANR	1272385	Identifier	sd1		1272225	0					
ANR	1272386	Argument	sd20		1272225	1					
ANR	1272387	Identifier	sd20		1272225	0					
ANR	1272388	IdentifierDeclStatement	double cd = 0 ;	2896:4:108703:108716	1272225	5	True				
ANR	1272389	IdentifierDecl	cd = 0		1272225	0					
ANR	1272390	IdentifierDeclType	double		1272225	0					
ANR	1272391	Identifier	cd		1272225	1					
ANR	1272392	AssignmentExpression	cd = 0		1272225	2		=			
ANR	1272393	Identifier	cd		1272225	0					
ANR	1272394	PrimaryExpression	0		1272225	1					
ANR	1272395	Statement	if	2898:4:108723:108724	1272225	6	True				
ANR	1272396	Statement	SKIP_TEST	2898:7:108726:108734	1272225	7	True				
ANR	1272397	ExpressionStatement	dbg_triangle_cnt ++	2899:8:108744:108762	1272225	8	True				
ANR	1272398	PostIncDecOperationExpression	dbg_triangle_cnt ++		1272225	0					
ANR	1272399	Identifier	dbg_triangle_cnt		1272225	0					
ANR	1272400	IncDec	++		1272225	1					
ANR	1272401	Statement	endif	2900:4:108768:108772	1272225	9	True				
ANR	1272402	IfStatement	if ( pfs -> Function == NULL )		1272225	10					
ANR	1272403	Condition	pfs -> Function == NULL	2901:8:108782:108802	1272225	0	True				
ANR	1272404	EqualityExpression	pfs -> Function == NULL		1272225	0		==			
ANR	1272405	PtrMemberAccess	pfs -> Function		1272225	0					
ANR	1272406	Identifier	pfs		1272225	0					
ANR	1272407	Identifier	Function		1272225	1					
ANR	1272408	Identifier	NULL		1272225	1					
ANR	1272409	CompoundStatement		16:8:571:597	1272225	1					
ANR	1272410	IdentifierDeclStatement	"double d01 = color_span ( pfs , p1 -> c , p0 -> c ) ;"	2902:8:108815:108857	1272225	0	True				
ANR	1272411	IdentifierDecl	"d01 = color_span ( pfs , p1 -> c , p0 -> c )"		1272225	0					
ANR	1272412	IdentifierDeclType	double		1272225	0					
ANR	1272413	Identifier	d01		1272225	1					
ANR	1272414	AssignmentExpression	"d01 = color_span ( pfs , p1 -> c , p0 -> c )"		1272225	2		=			
ANR	1272415	Identifier	d01		1272225	0					
ANR	1272416	CallExpression	"color_span ( pfs , p1 -> c , p0 -> c )"		1272225	1					
ANR	1272417	Callee	color_span		1272225	0					
ANR	1272418	Identifier	color_span		1272225	0					
ANR	1272419	ArgumentList	pfs		1272225	1					
ANR	1272420	Argument	pfs		1272225	0					
ANR	1272421	Identifier	pfs		1272225	0					
ANR	1272422	Argument	p1 -> c		1272225	1					
ANR	1272423	PtrMemberAccess	p1 -> c		1272225	0					
ANR	1272424	Identifier	p1		1272225	0					
ANR	1272425	Identifier	c		1272225	1					
ANR	1272426	Argument	p0 -> c		1272225	2					
ANR	1272427	PtrMemberAccess	p0 -> c		1272225	0					
ANR	1272428	Identifier	p0		1272225	0					
ANR	1272429	Identifier	c		1272225	1					
ANR	1272430	IdentifierDeclStatement	"double d12 = color_span ( pfs , p2 -> c , p1 -> c ) ;"	2903:8:108867:108909	1272225	1	True				
ANR	1272431	IdentifierDecl	"d12 = color_span ( pfs , p2 -> c , p1 -> c )"		1272225	0					
ANR	1272432	IdentifierDeclType	double		1272225	0					
ANR	1272433	Identifier	d12		1272225	1					
ANR	1272434	AssignmentExpression	"d12 = color_span ( pfs , p2 -> c , p1 -> c )"		1272225	2		=			
ANR	1272435	Identifier	d12		1272225	0					
ANR	1272436	CallExpression	"color_span ( pfs , p2 -> c , p1 -> c )"		1272225	1					
ANR	1272437	Callee	color_span		1272225	0					
ANR	1272438	Identifier	color_span		1272225	0					
ANR	1272439	ArgumentList	pfs		1272225	1					
ANR	1272440	Argument	pfs		1272225	0					
ANR	1272441	Identifier	pfs		1272225	0					
ANR	1272442	Argument	p2 -> c		1272225	1					
ANR	1272443	PtrMemberAccess	p2 -> c		1272225	0					
ANR	1272444	Identifier	p2		1272225	0					
ANR	1272445	Identifier	c		1272225	1					
ANR	1272446	Argument	p1 -> c		1272225	2					
ANR	1272447	PtrMemberAccess	p1 -> c		1272225	0					
ANR	1272448	Identifier	p1		1272225	0					
ANR	1272449	Identifier	c		1272225	1					
ANR	1272450	IdentifierDeclStatement	"double d20 = color_span ( pfs , p0 -> c , p2 -> c ) ;"	2904:8:108919:108961	1272225	2	True				
ANR	1272451	IdentifierDecl	"d20 = color_span ( pfs , p0 -> c , p2 -> c )"		1272225	0					
ANR	1272452	IdentifierDeclType	double		1272225	0					
ANR	1272453	Identifier	d20		1272225	1					
ANR	1272454	AssignmentExpression	"d20 = color_span ( pfs , p0 -> c , p2 -> c )"		1272225	2		=			
ANR	1272455	Identifier	d20		1272225	0					
ANR	1272456	CallExpression	"color_span ( pfs , p0 -> c , p2 -> c )"		1272225	1					
ANR	1272457	Callee	color_span		1272225	0					
ANR	1272458	Identifier	color_span		1272225	0					
ANR	1272459	ArgumentList	pfs		1272225	1					
ANR	1272460	Argument	pfs		1272225	0					
ANR	1272461	Identifier	pfs		1272225	0					
ANR	1272462	Argument	p0 -> c		1272225	1					
ANR	1272463	PtrMemberAccess	p0 -> c		1272225	0					
ANR	1272464	Identifier	p0		1272225	0					
ANR	1272465	Identifier	c		1272225	1					
ANR	1272466	Argument	p2 -> c		1272225	2					
ANR	1272467	PtrMemberAccess	p2 -> c		1272225	0					
ANR	1272468	Identifier	p2		1272225	0					
ANR	1272469	Identifier	c		1272225	1					
ANR	1272470	IdentifierDeclStatement	"double cd1 = max ( d01 , d12 ) ;"	2905:8:108971:108997	1272225	3	True				
ANR	1272471	IdentifierDecl	"cd1 = max ( d01 , d12 )"		1272225	0					
ANR	1272472	IdentifierDeclType	double		1272225	0					
ANR	1272473	Identifier	cd1		1272225	1					
ANR	1272474	AssignmentExpression	"cd1 = max ( d01 , d12 )"		1272225	2		=			
ANR	1272475	Identifier	cd1		1272225	0					
ANR	1272476	CallExpression	"max ( d01 , d12 )"		1272225	1					
ANR	1272477	Callee	max		1272225	0					
ANR	1272478	Identifier	max		1272225	0					
ANR	1272479	ArgumentList	d01		1272225	1					
ANR	1272480	Argument	d01		1272225	0					
ANR	1272481	Identifier	d01		1272225	0					
ANR	1272482	Argument	d12		1272225	1					
ANR	1272483	Identifier	d12		1272225	0					
ANR	1272484	ExpressionStatement	"cd = max ( cd1 , d20 )"	2907:8:109008:109026	1272225	4	True				
ANR	1272485	AssignmentExpression	"cd = max ( cd1 , d20 )"		1272225	0		=			
ANR	1272486	Identifier	cd		1272225	0					
ANR	1272487	CallExpression	"max ( cd1 , d20 )"		1272225	1					
ANR	1272488	Callee	max		1272225	0					
ANR	1272489	Identifier	max		1272225	0					
ANR	1272490	ArgumentList	cd1		1272225	1					
ANR	1272491	Argument	cd1		1272225	0					
ANR	1272492	Identifier	cd1		1272225	0					
ANR	1272493	Argument	d20		1272225	1					
ANR	1272494	Identifier	d20		1272225	0					
ANR	1272495	ReturnStatement	"return triangle_by_4 ( pfs , p0 , p1 , p2 , l01 , l12 , l20 , cd , sd ) ;"	2909:4:109038:109098	1272225	11	True				
ANR	1272496	CallExpression	"triangle_by_4 ( pfs , p0 , p1 , p2 , l01 , l12 , l20 , cd , sd )"		1272225	0					
ANR	1272497	Callee	triangle_by_4		1272225	0					
ANR	1272498	Identifier	triangle_by_4		1272225	0					
ANR	1272499	ArgumentList	pfs		1272225	1					
ANR	1272500	Argument	pfs		1272225	0					
ANR	1272501	Identifier	pfs		1272225	0					
ANR	1272502	Argument	p0		1272225	1					
ANR	1272503	Identifier	p0		1272225	0					
ANR	1272504	Argument	p1		1272225	2					
ANR	1272505	Identifier	p1		1272225	0					
ANR	1272506	Argument	p2		1272225	3					
ANR	1272507	Identifier	p2		1272225	0					
ANR	1272508	Argument	l01		1272225	4					
ANR	1272509	Identifier	l01		1272225	0					
ANR	1272510	Argument	l12		1272225	5					
ANR	1272511	Identifier	l12		1272225	0					
ANR	1272512	Argument	l20		1272225	6					
ANR	1272513	Identifier	l20		1272225	0					
ANR	1272514	Argument	cd		1272225	7					
ANR	1272515	Identifier	cd		1272225	0					
ANR	1272516	Argument	sd		1272225	8					
ANR	1272517	Identifier	sd		1272225	0					
ANR	1272518	ReturnType	static inline int		1272225	1					
ANR	1272519	Identifier	fill_triangle		1272225	2					
ANR	1272520	ParameterList	"patch_fill_state_t * pfs , const shading_vertex_t * p0 , const shading_vertex_t * p1 , const shading_vertex_t * p2 , wedge_vertex_list_t * l01 , wedge_vertex_list_t * l12 , wedge_vertex_list_t * l20"		1272225	3					
ANR	1272521	Parameter	patch_fill_state_t * pfs	2887:14:108196:108218	1272225	0	True				
ANR	1272522	ParameterType	patch_fill_state_t *		1272225	0					
ANR	1272523	Identifier	pfs		1272225	1					
ANR	1272524	Parameter	const shading_vertex_t * p0	2888:8:108229:108254	1272225	1	True				
ANR	1272525	ParameterType	const shading_vertex_t *		1272225	0					
ANR	1272526	Identifier	p0		1272225	1					
ANR	1272527	Parameter	const shading_vertex_t * p1	2888:36:108257:108282	1272225	2	True				
ANR	1272528	ParameterType	const shading_vertex_t *		1272225	0					
ANR	1272529	Identifier	p1		1272225	1					
ANR	1272530	Parameter	const shading_vertex_t * p2	2888:64:108285:108310	1272225	3	True				
ANR	1272531	ParameterType	const shading_vertex_t *		1272225	0					
ANR	1272532	Identifier	p2		1272225	1					
ANR	1272533	Parameter	wedge_vertex_list_t * l01	2889:8:108321:108344	1272225	4	True				
ANR	1272534	ParameterType	wedge_vertex_list_t *		1272225	0					
ANR	1272535	Identifier	l01		1272225	1					
ANR	1272536	Parameter	wedge_vertex_list_t * l12	2889:34:108347:108370	1272225	5	True				
ANR	1272537	ParameterType	wedge_vertex_list_t *		1272225	0					
ANR	1272538	Identifier	l12		1272225	1					
ANR	1272539	Parameter	wedge_vertex_list_t * l20	2889:60:108373:108396	1272225	6	True				
ANR	1272540	ParameterType	wedge_vertex_list_t *		1272225	0					
ANR	1272541	Identifier	l20		1272225	1					
ANR	1272542	CFGEntryNode	ENTRY		1272225		True				
ANR	1272543	CFGExitNode	EXIT		1272225		True				
ANR	1272544	Symbol	p0		1272225						
ANR	1272545	Symbol	p1		1272225						
ANR	1272546	Symbol	sd1		1272225						
ANR	1272547	Symbol	p2		1272225						
ANR	1272548	Symbol	d12		1272225						
ANR	1272549	Symbol	p0 -> p . y		1272225						
ANR	1272550	Symbol	pfs -> Function		1272225						
ANR	1272551	Symbol	sd12		1272225						
ANR	1272552	Symbol	p0 -> p . x		1272225						
ANR	1272553	Symbol	l12		1272225						
ANR	1272554	Symbol	sd		1272225						
ANR	1272555	Symbol	any_abs		1272225						
ANR	1272556	Symbol	p0 -> p		1272225						
ANR	1272557	Symbol	p1 -> c		1272225						
ANR	1272558	Symbol	cd		1272225						
ANR	1272559	Symbol	NULL		1272225						
ANR	1272560	Symbol	d20		1272225						
ANR	1272561	Symbol	triangle_by_4		1272225						
ANR	1272562	Symbol	* p1		1272225						
ANR	1272563	Symbol	d01		1272225						
ANR	1272564	Symbol	* p0		1272225						
ANR	1272565	Symbol	max		1272225						
ANR	1272566	Symbol	p2 -> p . x		1272225						
ANR	1272567	Symbol	p2 -> p . y		1272225						
ANR	1272568	Symbol	sd01		1272225						
ANR	1272569	Symbol	* pfs		1272225						
ANR	1272570	Symbol	l20		1272225						
ANR	1272571	Symbol	* p2		1272225						
ANR	1272572	Symbol	dbg_triangle_cnt		1272225						
ANR	1272573	Symbol	l01		1272225						
ANR	1272574	Symbol	p0 -> c		1272225						
ANR	1272575	Symbol	p1 -> p		1272225						
ANR	1272576	Symbol	p1 -> p . x		1272225						
ANR	1272577	Symbol	p1 -> p . y		1272225						
ANR	1272578	Symbol	cd1		1272225						
ANR	1272579	Symbol	p2 -> c		1272225						
ANR	1272580	Symbol	color_span		1272225						
ANR	1272581	Symbol	sd20		1272225						
ANR	1272582	Symbol	p2 -> p		1272225						
ANR	1272583	Symbol	pfs		1272225						
ANR	1272584	Function	small_mesh_triangle	2912:0:109103:109721							
ANR	1272585	FunctionDef	"small_mesh_triangle (patch_fill_state_t * pfs , const shading_vertex_t * p0 , const shading_vertex_t * p1 , const shading_vertex_t * p2)"		1272584	0					
ANR	1272586	CompoundStatement		2915:0:109251:109721	1272584	0					
ANR	1272587	IdentifierDeclStatement	int code ;	2916:4:109257:109265	1272584	0	True				
ANR	1272588	IdentifierDecl	code		1272584	0					
ANR	1272589	IdentifierDeclType	int		1272584	0					
ANR	1272590	Identifier	code		1272584	1					
ANR	1272591	IdentifierDeclStatement	wedge_vertex_list_t l [ 3 ] ;	2917:4:109271:109295	1272584	1	True				
ANR	1272592	IdentifierDecl	l [ 3 ]		1272584	0					
ANR	1272593	IdentifierDeclType	wedge_vertex_list_t [ 3 ]		1272584	0					
ANR	1272594	Identifier	l		1272584	1					
ANR	1272595	PrimaryExpression	3		1272584	2					
ANR	1272596	ExpressionStatement	"init_wedge_vertex_list ( l , count_of ( l ) )"	2919:4:109302:109340	1272584	2	True				
ANR	1272597	CallExpression	"init_wedge_vertex_list ( l , count_of ( l ) )"		1272584	0					
ANR	1272598	Callee	init_wedge_vertex_list		1272584	0					
ANR	1272599	Identifier	init_wedge_vertex_list		1272584	0					
ANR	1272600	ArgumentList	l		1272584	1					
ANR	1272601	Argument	l		1272584	0					
ANR	1272602	Identifier	l		1272584	0					
ANR	1272603	Argument	count_of ( l )		1272584	1					
ANR	1272604	CallExpression	count_of ( l )		1272584	0					
ANR	1272605	Callee	count_of		1272584	0					
ANR	1272606	Identifier	count_of		1272584	0					
ANR	1272607	ArgumentList	l		1272584	1					
ANR	1272608	Argument	l		1272584	0					
ANR	1272609	Identifier	l		1272584	0					
ANR	1272610	ExpressionStatement	"code = fill_triangle ( pfs , p0 , p1 , p2 , & l [ 0 ] , & l [ 1 ] , & l [ 2 ] )"	2920:4:109346:109404	1272584	3	True				
ANR	1272611	AssignmentExpression	"code = fill_triangle ( pfs , p0 , p1 , p2 , & l [ 0 ] , & l [ 1 ] , & l [ 2 ] )"		1272584	0		=			
ANR	1272612	Identifier	code		1272584	0					
ANR	1272613	CallExpression	"fill_triangle ( pfs , p0 , p1 , p2 , & l [ 0 ] , & l [ 1 ] , & l [ 2 ] )"		1272584	1					
ANR	1272614	Callee	fill_triangle		1272584	0					
ANR	1272615	Identifier	fill_triangle		1272584	0					
ANR	1272616	ArgumentList	pfs		1272584	1					
ANR	1272617	Argument	pfs		1272584	0					
ANR	1272618	Identifier	pfs		1272584	0					
ANR	1272619	Argument	p0		1272584	1					
ANR	1272620	Identifier	p0		1272584	0					
ANR	1272621	Argument	p1		1272584	2					
ANR	1272622	Identifier	p1		1272584	0					
ANR	1272623	Argument	p2		1272584	3					
ANR	1272624	Identifier	p2		1272584	0					
ANR	1272625	Argument	& l [ 0 ]		1272584	4					
ANR	1272626	UnaryOperationExpression	& l [ 0 ]		1272584	0					
ANR	1272627	UnaryOperator	&		1272584	0					
ANR	1272628	ArrayIndexing	l [ 0 ]		1272584	1					
ANR	1272629	Identifier	l		1272584	0					
ANR	1272630	PrimaryExpression	0		1272584	1					
ANR	1272631	Argument	& l [ 1 ]		1272584	5					
ANR	1272632	UnaryOperationExpression	& l [ 1 ]		1272584	0					
ANR	1272633	UnaryOperator	&		1272584	0					
ANR	1272634	ArrayIndexing	l [ 1 ]		1272584	1					
ANR	1272635	Identifier	l		1272584	0					
ANR	1272636	PrimaryExpression	1		1272584	1					
ANR	1272637	Argument	& l [ 2 ]		1272584	6					
ANR	1272638	UnaryOperationExpression	& l [ 2 ]		1272584	0					
ANR	1272639	UnaryOperator	&		1272584	0					
ANR	1272640	ArrayIndexing	l [ 2 ]		1272584	1					
ANR	1272641	Identifier	l		1272584	0					
ANR	1272642	PrimaryExpression	2		1272584	1					
ANR	1272643	IfStatement	if ( code < 0 )		1272584	4					
ANR	1272644	Condition	code < 0	2921:8:109414:109421	1272584	0	True				
ANR	1272645	RelationalExpression	code < 0		1272584	0		<			
ANR	1272646	Identifier	code		1272584	0					
ANR	1272647	PrimaryExpression	0		1272584	1					
ANR	1272648	ReturnStatement	return code ;	2922:8:109432:109443	1272584	1	True				
ANR	1272649	Identifier	code		1272584	0					
ANR	1272650	ExpressionStatement	"code = terminate_wedge_vertex_list ( pfs , & l [ 0 ] , p0 -> c , p1 -> c )"	2923:4:109449:109509	1272584	5	True				
ANR	1272651	AssignmentExpression	"code = terminate_wedge_vertex_list ( pfs , & l [ 0 ] , p0 -> c , p1 -> c )"		1272584	0		=			
ANR	1272652	Identifier	code		1272584	0					
ANR	1272653	CallExpression	"terminate_wedge_vertex_list ( pfs , & l [ 0 ] , p0 -> c , p1 -> c )"		1272584	1					
ANR	1272654	Callee	terminate_wedge_vertex_list		1272584	0					
ANR	1272655	Identifier	terminate_wedge_vertex_list		1272584	0					
ANR	1272656	ArgumentList	pfs		1272584	1					
ANR	1272657	Argument	pfs		1272584	0					
ANR	1272658	Identifier	pfs		1272584	0					
ANR	1272659	Argument	& l [ 0 ]		1272584	1					
ANR	1272660	UnaryOperationExpression	& l [ 0 ]		1272584	0					
ANR	1272661	UnaryOperator	&		1272584	0					
ANR	1272662	ArrayIndexing	l [ 0 ]		1272584	1					
ANR	1272663	Identifier	l		1272584	0					
ANR	1272664	PrimaryExpression	0		1272584	1					
ANR	1272665	Argument	p0 -> c		1272584	2					
ANR	1272666	PtrMemberAccess	p0 -> c		1272584	0					
ANR	1272667	Identifier	p0		1272584	0					
ANR	1272668	Identifier	c		1272584	1					
ANR	1272669	Argument	p1 -> c		1272584	3					
ANR	1272670	PtrMemberAccess	p1 -> c		1272584	0					
ANR	1272671	Identifier	p1		1272584	0					
ANR	1272672	Identifier	c		1272584	1					
ANR	1272673	IfStatement	if ( code < 0 )		1272584	6					
ANR	1272674	Condition	code < 0	2924:8:109519:109526	1272584	0	True				
ANR	1272675	RelationalExpression	code < 0		1272584	0		<			
ANR	1272676	Identifier	code		1272584	0					
ANR	1272677	PrimaryExpression	0		1272584	1					
ANR	1272678	ReturnStatement	return code ;	2925:8:109537:109548	1272584	1	True				
ANR	1272679	Identifier	code		1272584	0					
ANR	1272680	ExpressionStatement	"code = terminate_wedge_vertex_list ( pfs , & l [ 1 ] , p1 -> c , p2 -> c )"	2926:4:109554:109614	1272584	7	True				
ANR	1272681	AssignmentExpression	"code = terminate_wedge_vertex_list ( pfs , & l [ 1 ] , p1 -> c , p2 -> c )"		1272584	0		=			
ANR	1272682	Identifier	code		1272584	0					
ANR	1272683	CallExpression	"terminate_wedge_vertex_list ( pfs , & l [ 1 ] , p1 -> c , p2 -> c )"		1272584	1					
ANR	1272684	Callee	terminate_wedge_vertex_list		1272584	0					
ANR	1272685	Identifier	terminate_wedge_vertex_list		1272584	0					
ANR	1272686	ArgumentList	pfs		1272584	1					
ANR	1272687	Argument	pfs		1272584	0					
ANR	1272688	Identifier	pfs		1272584	0					
ANR	1272689	Argument	& l [ 1 ]		1272584	1					
ANR	1272690	UnaryOperationExpression	& l [ 1 ]		1272584	0					
ANR	1272691	UnaryOperator	&		1272584	0					
ANR	1272692	ArrayIndexing	l [ 1 ]		1272584	1					
ANR	1272693	Identifier	l		1272584	0					
ANR	1272694	PrimaryExpression	1		1272584	1					
ANR	1272695	Argument	p1 -> c		1272584	2					
ANR	1272696	PtrMemberAccess	p1 -> c		1272584	0					
ANR	1272697	Identifier	p1		1272584	0					
ANR	1272698	Identifier	c		1272584	1					
ANR	1272699	Argument	p2 -> c		1272584	3					
ANR	1272700	PtrMemberAccess	p2 -> c		1272584	0					
ANR	1272701	Identifier	p2		1272584	0					
ANR	1272702	Identifier	c		1272584	1					
ANR	1272703	IfStatement	if ( code < 0 )		1272584	8					
ANR	1272704	Condition	code < 0	2927:8:109624:109631	1272584	0	True				
ANR	1272705	RelationalExpression	code < 0		1272584	0		<			
ANR	1272706	Identifier	code		1272584	0					
ANR	1272707	PrimaryExpression	0		1272584	1					
ANR	1272708	ReturnStatement	return code ;	2928:8:109642:109653	1272584	1	True				
ANR	1272709	Identifier	code		1272584	0					
ANR	1272710	ReturnStatement	"return terminate_wedge_vertex_list ( pfs , & l [ 2 ] , p2 -> c , p0 -> c ) ;"	2929:4:109659:109719	1272584	9	True				
ANR	1272711	CallExpression	"terminate_wedge_vertex_list ( pfs , & l [ 2 ] , p2 -> c , p0 -> c )"		1272584	0					
ANR	1272712	Callee	terminate_wedge_vertex_list		1272584	0					
ANR	1272713	Identifier	terminate_wedge_vertex_list		1272584	0					
ANR	1272714	ArgumentList	pfs		1272584	1					
ANR	1272715	Argument	pfs		1272584	0					
ANR	1272716	Identifier	pfs		1272584	0					
ANR	1272717	Argument	& l [ 2 ]		1272584	1					
ANR	1272718	UnaryOperationExpression	& l [ 2 ]		1272584	0					
ANR	1272719	UnaryOperator	&		1272584	0					
ANR	1272720	ArrayIndexing	l [ 2 ]		1272584	1					
ANR	1272721	Identifier	l		1272584	0					
ANR	1272722	PrimaryExpression	2		1272584	1					
ANR	1272723	Argument	p2 -> c		1272584	2					
ANR	1272724	PtrMemberAccess	p2 -> c		1272584	0					
ANR	1272725	Identifier	p2		1272584	0					
ANR	1272726	Identifier	c		1272584	1					
ANR	1272727	Argument	p0 -> c		1272584	3					
ANR	1272728	PtrMemberAccess	p0 -> c		1272584	0					
ANR	1272729	Identifier	p0		1272584	0					
ANR	1272730	Identifier	c		1272584	1					
ANR	1272731	ReturnType	static int		1272584	1					
ANR	1272732	Identifier	small_mesh_triangle		1272584	2					
ANR	1272733	ParameterList	"patch_fill_state_t * pfs , const shading_vertex_t * p0 , const shading_vertex_t * p1 , const shading_vertex_t * p2"		1272584	3					
ANR	1272734	Parameter	patch_fill_state_t * pfs	2913:20:109134:109156	1272584	0	True				
ANR	1272735	ParameterType	patch_fill_state_t *		1272584	0					
ANR	1272736	Identifier	pfs		1272584	1					
ANR	1272737	Parameter	const shading_vertex_t * p0	2914:8:109167:109192	1272584	1	True				
ANR	1272738	ParameterType	const shading_vertex_t *		1272584	0					
ANR	1272739	Identifier	p0		1272584	1					
ANR	1272740	Parameter	const shading_vertex_t * p1	2914:36:109195:109220	1272584	2	True				
ANR	1272741	ParameterType	const shading_vertex_t *		1272584	0					
ANR	1272742	Identifier	p1		1272584	1					
ANR	1272743	Parameter	const shading_vertex_t * p2	2914:64:109223:109248	1272584	3	True				
ANR	1272744	ParameterType	const shading_vertex_t *		1272584	0					
ANR	1272745	Identifier	p2		1272584	1					
ANR	1272746	CFGEntryNode	ENTRY		1272584		True				
ANR	1272747	CFGExitNode	EXIT		1272584		True				
ANR	1272748	Symbol	p0		1272584						
ANR	1272749	Symbol	p1		1272584						
ANR	1272750	Symbol	p2		1272584						
ANR	1272751	Symbol	code		1272584						
ANR	1272752	Symbol	* p1		1272584						
ANR	1272753	Symbol	* p0		1272584						
ANR	1272754	Symbol	terminate_wedge_vertex_list		1272584						
ANR	1272755	Symbol	* p2		1272584						
ANR	1272756	Symbol	l		1272584						
ANR	1272757	Symbol	p0 -> c		1272584						
ANR	1272758	Symbol	count_of		1272584						
ANR	1272759	Symbol	p2 -> c		1272584						
ANR	1272760	Symbol	fill_triangle		1272584						
ANR	1272761	Symbol	pfs		1272584						
ANR	1272762	Symbol	p1 -> c		1272584						
ANR	1272763	Function	gx_init_patch_fill_state_for_clist	2932:0:109724:111710							
ANR	1272764	FunctionDef	"gx_init_patch_fill_state_for_clist (gx_device * dev , patch_fill_state_t * pfs , gs_memory_t * memory)"		1272763	0					
ANR	1272765	CompoundStatement		2934:0:109825:111710	1272763	0					
ANR	1272766	IdentifierDeclStatement	int i ;	2935:4:109831:109836	1272763	0	True				
ANR	1272767	IdentifierDecl	i		1272763	0					
ANR	1272768	IdentifierDeclType	int		1272763	0					
ANR	1272769	Identifier	i		1272763	1					
ANR	1272770	ExpressionStatement	pfs -> dev = dev	2937:4:109843:109857	1272763	1	True				
ANR	1272771	AssignmentExpression	pfs -> dev = dev		1272763	0		=			
ANR	1272772	PtrMemberAccess	pfs -> dev		1272763	0					
ANR	1272773	Identifier	pfs		1272763	0					
ANR	1272774	Identifier	dev		1272763	1					
ANR	1272775	Identifier	dev		1272763	1					
ANR	1272776	ExpressionStatement	pfs -> pgs = NULL	2938:4:109863:109878	1272763	2	True				
ANR	1272777	AssignmentExpression	pfs -> pgs = NULL		1272763	0		=			
ANR	1272778	PtrMemberAccess	pfs -> pgs		1272763	0					
ANR	1272779	Identifier	pfs		1272763	0					
ANR	1272780	Identifier	pgs		1272763	1					
ANR	1272781	Identifier	NULL		1272763	1					
ANR	1272782	ExpressionStatement	pfs -> direct_space = NULL	2939:4:109884:109908	1272763	3	True				
ANR	1272783	AssignmentExpression	pfs -> direct_space = NULL		1272763	0		=			
ANR	1272784	PtrMemberAccess	pfs -> direct_space		1272763	0					
ANR	1272785	Identifier	pfs		1272763	0					
ANR	1272786	Identifier	direct_space		1272763	1					
ANR	1272787	Identifier	NULL		1272763	1					
ANR	1272788	ExpressionStatement	pfs -> num_components = dev -> color_info . num_components	2940:4:109914:109966	1272763	4	True				
ANR	1272789	AssignmentExpression	pfs -> num_components = dev -> color_info . num_components		1272763	0		=			
ANR	1272790	PtrMemberAccess	pfs -> num_components		1272763	0					
ANR	1272791	Identifier	pfs		1272763	0					
ANR	1272792	Identifier	num_components		1272763	1					
ANR	1272793	MemberAccess	dev -> color_info . num_components		1272763	1					
ANR	1272794	PtrMemberAccess	dev -> color_info		1272763	0					
ANR	1272795	Identifier	dev		1272763	0					
ANR	1272796	Identifier	color_info		1272763	1					
ANR	1272797	Identifier	num_components		1272763	1					
ANR	1272798	ExpressionStatement	pfs -> pshm = NULL	2942:4:110039:110055	1272763	5	True				
ANR	1272799	AssignmentExpression	pfs -> pshm = NULL		1272763	0		=			
ANR	1272800	PtrMemberAccess	pfs -> pshm		1272763	0					
ANR	1272801	Identifier	pfs		1272763	0					
ANR	1272802	Identifier	pshm		1272763	1					
ANR	1272803	Identifier	NULL		1272763	1					
ANR	1272804	ExpressionStatement	pfs -> Function = NULL	2943:4:110061:110081	1272763	6	True				
ANR	1272805	AssignmentExpression	pfs -> Function = NULL		1272763	0		=			
ANR	1272806	PtrMemberAccess	pfs -> Function		1272763	0					
ANR	1272807	Identifier	pfs		1272763	0					
ANR	1272808	Identifier	Function		1272763	1					
ANR	1272809	Identifier	NULL		1272763	1					
ANR	1272810	ExpressionStatement	pfs -> function_arg_shift = 0	2944:4:110087:110114	1272763	7	True				
ANR	1272811	AssignmentExpression	pfs -> function_arg_shift = 0		1272763	0		=			
ANR	1272812	PtrMemberAccess	pfs -> function_arg_shift		1272763	0					
ANR	1272813	Identifier	pfs		1272763	0					
ANR	1272814	Identifier	function_arg_shift		1272763	1					
ANR	1272815	PrimaryExpression	0		1272763	1					
ANR	1272816	ExpressionStatement	pfs -> vectorization = false	2945:4:110120:110146	1272763	8	True				
ANR	1272817	AssignmentExpression	pfs -> vectorization = false		1272763	0		=			
ANR	1272818	PtrMemberAccess	pfs -> vectorization		1272763	0					
ANR	1272819	Identifier	pfs		1272763	0					
ANR	1272820	Identifier	vectorization		1272763	1					
ANR	1272821	Identifier	false		1272763	1					
ANR	1272822	ExpressionStatement	pfs -> n_color_args = 1	2946:4:110202:110223	1272763	9	True				
ANR	1272823	AssignmentExpression	pfs -> n_color_args = 1		1272763	0		=			
ANR	1272824	PtrMemberAccess	pfs -> n_color_args		1272763	0					
ANR	1272825	Identifier	pfs		1272763	0					
ANR	1272826	Identifier	n_color_args		1272763	1					
ANR	1272827	PrimaryExpression	1		1272763	1					
ANR	1272828	ExpressionStatement	pfs -> max_small_coord = 0	2947:4:110243:110267	1272763	10	True				
ANR	1272829	AssignmentExpression	pfs -> max_small_coord = 0		1272763	0		=			
ANR	1272830	PtrMemberAccess	pfs -> max_small_coord		1272763	0					
ANR	1272831	Identifier	pfs		1272763	0					
ANR	1272832	Identifier	max_small_coord		1272763	1					
ANR	1272833	PrimaryExpression	0		1272763	1					
ANR	1272834	ExpressionStatement	pfs -> wedge_vertex_list_elem_buffer = NULL	2948:4:110287:110328	1272763	11	True				
ANR	1272835	AssignmentExpression	pfs -> wedge_vertex_list_elem_buffer = NULL		1272763	0		=			
ANR	1272836	PtrMemberAccess	pfs -> wedge_vertex_list_elem_buffer		1272763	0					
ANR	1272837	Identifier	pfs		1272763	0					
ANR	1272838	Identifier	wedge_vertex_list_elem_buffer		1272763	1					
ANR	1272839	Identifier	NULL		1272763	1					
ANR	1272840	ExpressionStatement	pfs -> free_wedge_vertex = NULL	2949:4:110346:110375	1272763	12	True				
ANR	1272841	AssignmentExpression	pfs -> free_wedge_vertex = NULL		1272763	0		=			
ANR	1272842	PtrMemberAccess	pfs -> free_wedge_vertex		1272763	0					
ANR	1272843	Identifier	pfs		1272763	0					
ANR	1272844	Identifier	free_wedge_vertex		1272763	1					
ANR	1272845	Identifier	NULL		1272763	1					
ANR	1272846	ExpressionStatement	pfs -> wedge_vertex_list_elem_count = 0	2950:4:110393:110430	1272763	13	True				
ANR	1272847	AssignmentExpression	pfs -> wedge_vertex_list_elem_count = 0		1272763	0		=			
ANR	1272848	PtrMemberAccess	pfs -> wedge_vertex_list_elem_count		1272763	0					
ANR	1272849	Identifier	pfs		1272763	0					
ANR	1272850	Identifier	wedge_vertex_list_elem_count		1272763	1					
ANR	1272851	PrimaryExpression	0		1272763	1					
ANR	1272852	ExpressionStatement	pfs -> wedge_vertex_list_elem_count_max = 0	2951:4:110448:110489	1272763	14	True				
ANR	1272853	AssignmentExpression	pfs -> wedge_vertex_list_elem_count_max = 0		1272763	0		=			
ANR	1272854	PtrMemberAccess	pfs -> wedge_vertex_list_elem_count_max		1272763	0					
ANR	1272855	Identifier	pfs		1272763	0					
ANR	1272856	Identifier	wedge_vertex_list_elem_count_max		1272763	1					
ANR	1272857	PrimaryExpression	0		1272763	1					
ANR	1272858	ForStatement	for ( i = 0 ; i < pfs -> num_components ; i ++ )		1272763	15					
ANR	1272859	ForInit	i = 0 ;	2952:9:110512:110517	1272763	0	True				
ANR	1272860	AssignmentExpression	i = 0		1272763	0		=			
ANR	1272861	Identifier	i		1272763	0					
ANR	1272862	PrimaryExpression	0		1272763	1					
ANR	1272863	Condition	i < pfs -> num_components	2952:16:110519:110541	1272763	1	True				
ANR	1272864	RelationalExpression	i < pfs -> num_components		1272763	0		<			
ANR	1272865	Identifier	i		1272763	0					
ANR	1272866	PtrMemberAccess	pfs -> num_components		1272763	1					
ANR	1272867	Identifier	pfs		1272763	0					
ANR	1272868	Identifier	num_components		1272763	1					
ANR	1272869	PostIncDecOperationExpression	i ++	2952:41:110544:110546	1272763	2	True				
ANR	1272870	Identifier	i		1272763	0					
ANR	1272871	IncDec	++		1272763	1					
ANR	1272872	ExpressionStatement	pfs -> color_domain . paint . values [ i ] = ( float ) 0x7fffffff	2953:8:110557:110610	1272763	3	True				
ANR	1272873	AssignmentExpression	pfs -> color_domain . paint . values [ i ] = ( float ) 0x7fffffff		1272763	0		=			
ANR	1272874	ArrayIndexing	pfs -> color_domain . paint . values [ i ]		1272763	0					
ANR	1272875	MemberAccess	pfs -> color_domain . paint . values		1272763	0					
ANR	1272876	MemberAccess	pfs -> color_domain . paint		1272763	0					
ANR	1272877	PtrMemberAccess	pfs -> color_domain		1272763	0					
ANR	1272878	Identifier	pfs		1272763	0					
ANR	1272879	Identifier	color_domain		1272763	1					
ANR	1272880	Identifier	paint		1272763	1					
ANR	1272881	Identifier	values		1272763	1					
ANR	1272882	Identifier	i		1272763	1					
ANR	1272883	CastExpression	( float ) 0x7fffffff		1272763	1					
ANR	1272884	CastTarget	float		1272763	0					
ANR	1272885	PrimaryExpression	0x7fffffff		1272763	1					
ANR	1272886	ExpressionStatement	"pfs -> decomposition_limit = float2fixed ( min ( pfs -> dev -> HWResolution [ 0 ] , pfs -> dev -> HWResolution [ 1 ] ) / MAX_SHADING_RESOLUTION )"	2956:4:110721:110890	1272763	16	True				
ANR	1272887	AssignmentExpression	"pfs -> decomposition_limit = float2fixed ( min ( pfs -> dev -> HWResolution [ 0 ] , pfs -> dev -> HWResolution [ 1 ] ) / MAX_SHADING_RESOLUTION )"		1272763	0		=			
ANR	1272888	PtrMemberAccess	pfs -> decomposition_limit		1272763	0					
ANR	1272889	Identifier	pfs		1272763	0					
ANR	1272890	Identifier	decomposition_limit		1272763	1					
ANR	1272891	CallExpression	"float2fixed ( min ( pfs -> dev -> HWResolution [ 0 ] , pfs -> dev -> HWResolution [ 1 ] ) / MAX_SHADING_RESOLUTION )"		1272763	1					
ANR	1272892	Callee	float2fixed		1272763	0					
ANR	1272893	Identifier	float2fixed		1272763	0					
ANR	1272894	ArgumentList	"min ( pfs -> dev -> HWResolution [ 0 ] , pfs -> dev -> HWResolution [ 1 ] ) / MAX_SHADING_RESOLUTION"		1272763	1					
ANR	1272895	Argument	"min ( pfs -> dev -> HWResolution [ 0 ] , pfs -> dev -> HWResolution [ 1 ] ) / MAX_SHADING_RESOLUTION"		1272763	0					
ANR	1272896	MultiplicativeExpression	"min ( pfs -> dev -> HWResolution [ 0 ] , pfs -> dev -> HWResolution [ 1 ] ) / MAX_SHADING_RESOLUTION"		1272763	0		/			
ANR	1272897	CallExpression	"min ( pfs -> dev -> HWResolution [ 0 ] , pfs -> dev -> HWResolution [ 1 ] )"		1272763	0					
ANR	1272898	Callee	min		1272763	0					
ANR	1272899	Identifier	min		1272763	0					
ANR	1272900	ArgumentList	pfs -> dev -> HWResolution [ 0 ]		1272763	1					
ANR	1272901	Argument	pfs -> dev -> HWResolution [ 0 ]		1272763	0					
ANR	1272902	ArrayIndexing	pfs -> dev -> HWResolution [ 0 ]		1272763	0					
ANR	1272903	PtrMemberAccess	pfs -> dev -> HWResolution		1272763	0					
ANR	1272904	PtrMemberAccess	pfs -> dev		1272763	0					
ANR	1272905	Identifier	pfs		1272763	0					
ANR	1272906	Identifier	dev		1272763	1					
ANR	1272907	Identifier	HWResolution		1272763	1					
ANR	1272908	PrimaryExpression	0		1272763	1					
ANR	1272909	Argument	pfs -> dev -> HWResolution [ 1 ]		1272763	1					
ANR	1272910	ArrayIndexing	pfs -> dev -> HWResolution [ 1 ]		1272763	0					
ANR	1272911	PtrMemberAccess	pfs -> dev -> HWResolution		1272763	0					
ANR	1272912	PtrMemberAccess	pfs -> dev		1272763	0					
ANR	1272913	Identifier	pfs		1272763	0					
ANR	1272914	Identifier	dev		1272763	1					
ANR	1272915	Identifier	HWResolution		1272763	1					
ANR	1272916	PrimaryExpression	1		1272763	1					
ANR	1272917	Identifier	MAX_SHADING_RESOLUTION		1272763	1					
ANR	1272918	ExpressionStatement	"pfs -> decomposition_limit = max ( pfs -> decomposition_limit , fixed_1 )"	2958:4:110896:110961	1272763	17	True				
ANR	1272919	AssignmentExpression	"pfs -> decomposition_limit = max ( pfs -> decomposition_limit , fixed_1 )"		1272763	0		=			
ANR	1272920	PtrMemberAccess	pfs -> decomposition_limit		1272763	0					
ANR	1272921	Identifier	pfs		1272763	0					
ANR	1272922	Identifier	decomposition_limit		1272763	1					
ANR	1272923	CallExpression	"max ( pfs -> decomposition_limit , fixed_1 )"		1272763	1					
ANR	1272924	Callee	max		1272763	0					
ANR	1272925	Identifier	max		1272763	0					
ANR	1272926	ArgumentList	pfs -> decomposition_limit		1272763	1					
ANR	1272927	Argument	pfs -> decomposition_limit		1272763	0					
ANR	1272928	PtrMemberAccess	pfs -> decomposition_limit		1272763	0					
ANR	1272929	Identifier	pfs		1272763	0					
ANR	1272930	Identifier	decomposition_limit		1272763	1					
ANR	1272931	Argument	fixed_1		1272763	1					
ANR	1272932	Identifier	fixed_1		1272763	0					
ANR	1272933	ExpressionStatement	pfs -> fixed_flat = 0	2962:4:111020:111039	1272763	18	True				
ANR	1272934	AssignmentExpression	pfs -> fixed_flat = 0		1272763	0		=			
ANR	1272935	PtrMemberAccess	pfs -> fixed_flat		1272763	0					
ANR	1272936	Identifier	pfs		1272763	0					
ANR	1272937	Identifier	fixed_flat		1272763	1					
ANR	1272938	PrimaryExpression	0		1272763	1					
ANR	1272939	ExpressionStatement	pfs -> smoothness = 0	2963:4:111058:111077	1272763	19	True				
ANR	1272940	AssignmentExpression	pfs -> smoothness = 0		1272763	0		=			
ANR	1272941	PtrMemberAccess	pfs -> smoothness		1272763	0					
ANR	1272942	Identifier	pfs		1272763	0					
ANR	1272943	Identifier	smoothness		1272763	1					
ANR	1272944	PrimaryExpression	0		1272763	1					
ANR	1272945	ExpressionStatement	pfs -> maybe_self_intersecting = false	2964:4:111096:111132	1272763	20	True				
ANR	1272946	AssignmentExpression	pfs -> maybe_self_intersecting = false		1272763	0		=			
ANR	1272947	PtrMemberAccess	pfs -> maybe_self_intersecting		1272763	0					
ANR	1272948	Identifier	pfs		1272763	0					
ANR	1272949	Identifier	maybe_self_intersecting		1272763	1					
ANR	1272950	Identifier	false		1272763	1					
ANR	1272951	ExpressionStatement	pfs -> monotonic_color = true	2965:4:111151:111178	1272763	21	True				
ANR	1272952	AssignmentExpression	pfs -> monotonic_color = true		1272763	0		=			
ANR	1272953	PtrMemberAccess	pfs -> monotonic_color		1272763	0					
ANR	1272954	Identifier	pfs		1272763	0					
ANR	1272955	Identifier	monotonic_color		1272763	1					
ANR	1272956	Identifier	true		1272763	1					
ANR	1272957	ExpressionStatement	pfs -> linear_color = true	2966:4:111184:111208	1272763	22	True				
ANR	1272958	AssignmentExpression	pfs -> linear_color = true		1272763	0		=			
ANR	1272959	PtrMemberAccess	pfs -> linear_color		1272763	0					
ANR	1272960	Identifier	pfs		1272763	0					
ANR	1272961	Identifier	linear_color		1272763	1					
ANR	1272962	Identifier	true		1272763	1					
ANR	1272963	ExpressionStatement	pfs -> unlinear = false	2967:4:111214:111235	1272763	23	True				
ANR	1272964	AssignmentExpression	pfs -> unlinear = false		1272763	0		=			
ANR	1272965	PtrMemberAccess	pfs -> unlinear		1272763	0					
ANR	1272966	Identifier	pfs		1272763	0					
ANR	1272967	Identifier	unlinear		1272763	1					
ANR	1272968	Identifier	false		1272763	1					
ANR	1272969	ExpressionStatement	pfs -> inside = false	2968:4:111310:111329	1272763	24	True				
ANR	1272970	AssignmentExpression	pfs -> inside = false		1272763	0		=			
ANR	1272971	PtrMemberAccess	pfs -> inside		1272763	0					
ANR	1272972	Identifier	pfs		1272763	0					
ANR	1272973	Identifier	inside		1272763	1					
ANR	1272974	Identifier	false		1272763	1					
ANR	1272975	ExpressionStatement	pfs -> color_stack_size = 0	2969:4:111335:111360	1272763	25	True				
ANR	1272976	AssignmentExpression	pfs -> color_stack_size = 0		1272763	0		=			
ANR	1272977	PtrMemberAccess	pfs -> color_stack_size		1272763	0					
ANR	1272978	Identifier	pfs		1272763	0					
ANR	1272979	Identifier	color_stack_size		1272763	1					
ANR	1272980	PrimaryExpression	0		1272763	1					
ANR	1272981	ExpressionStatement	pfs -> color_stack_step = dev -> color_info . num_components	2970:4:111366:111420	1272763	26	True				
ANR	1272982	AssignmentExpression	pfs -> color_stack_step = dev -> color_info . num_components		1272763	0		=			
ANR	1272983	PtrMemberAccess	pfs -> color_stack_step		1272763	0					
ANR	1272984	Identifier	pfs		1272763	0					
ANR	1272985	Identifier	color_stack_step		1272763	1					
ANR	1272986	MemberAccess	dev -> color_info . num_components		1272763	1					
ANR	1272987	PtrMemberAccess	dev -> color_info		1272763	0					
ANR	1272988	Identifier	dev		1272763	0					
ANR	1272989	Identifier	color_info		1272763	1					
ANR	1272990	Identifier	num_components		1272763	1					
ANR	1272991	ExpressionStatement	pfs -> color_stack_ptr = NULL	2971:4:111426:111453	1272763	27	True				
ANR	1272992	AssignmentExpression	pfs -> color_stack_ptr = NULL		1272763	0		=			
ANR	1272993	PtrMemberAccess	pfs -> color_stack_ptr		1272763	0					
ANR	1272994	Identifier	pfs		1272763	0					
ANR	1272995	Identifier	color_stack_ptr		1272763	1					
ANR	1272996	Identifier	NULL		1272763	1					
ANR	1272997	ExpressionStatement	pfs -> color_stack = NULL	2972:4:111471:111494	1272763	28	True				
ANR	1272998	AssignmentExpression	pfs -> color_stack = NULL		1272763	0		=			
ANR	1272999	PtrMemberAccess	pfs -> color_stack		1272763	0					
ANR	1273000	Identifier	pfs		1272763	0					
ANR	1273001	Identifier	color_stack		1272763	1					
ANR	1273002	Identifier	NULL		1272763	1					
ANR	1273003	ExpressionStatement	pfs -> color_stack_limit = NULL	2973:4:111512:111541	1272763	29	True				
ANR	1273004	AssignmentExpression	pfs -> color_stack_limit = NULL		1272763	0		=			
ANR	1273005	PtrMemberAccess	pfs -> color_stack_limit		1272763	0					
ANR	1273006	Identifier	pfs		1272763	0					
ANR	1273007	Identifier	color_stack_limit		1272763	1					
ANR	1273008	Identifier	NULL		1272763	1					
ANR	1273009	ExpressionStatement	pfs -> pcic = NULL	2974:4:111559:111575	1272763	30	True				
ANR	1273010	AssignmentExpression	pfs -> pcic = NULL		1272763	0		=			
ANR	1273011	PtrMemberAccess	pfs -> pcic		1272763	0					
ANR	1273012	Identifier	pfs		1272763	0					
ANR	1273013	Identifier	pcic		1272763	1					
ANR	1273014	Identifier	NULL		1272763	1					
ANR	1273015	ExpressionStatement	pfs -> trans_device = NULL	2975:4:111604:111628	1272763	31	True				
ANR	1273016	AssignmentExpression	pfs -> trans_device = NULL		1272763	0		=			
ANR	1273017	PtrMemberAccess	pfs -> trans_device		1272763	0					
ANR	1273018	Identifier	pfs		1272763	0					
ANR	1273019	Identifier	trans_device		1272763	1					
ANR	1273020	Identifier	NULL		1272763	1					
ANR	1273021	ExpressionStatement	pfs -> icclink = NULL	2976:4:111634:111653	1272763	32	True				
ANR	1273022	AssignmentExpression	pfs -> icclink = NULL		1272763	0		=			
ANR	1273023	PtrMemberAccess	pfs -> icclink		1272763	0					
ANR	1273024	Identifier	pfs		1272763	0					
ANR	1273025	Identifier	icclink		1272763	1					
ANR	1273026	Identifier	NULL		1272763	1					
ANR	1273027	ReturnStatement	"return alloc_patch_fill_memory ( pfs , memory , NULL ) ;"	2977:4:111659:111708	1272763	33	True				
ANR	1273028	CallExpression	"alloc_patch_fill_memory ( pfs , memory , NULL )"		1272763	0					
ANR	1273029	Callee	alloc_patch_fill_memory		1272763	0					
ANR	1273030	Identifier	alloc_patch_fill_memory		1272763	0					
ANR	1273031	ArgumentList	pfs		1272763	1					
ANR	1273032	Argument	pfs		1272763	0					
ANR	1273033	Identifier	pfs		1272763	0					
ANR	1273034	Argument	memory		1272763	1					
ANR	1273035	Identifier	memory		1272763	0					
ANR	1273036	Argument	NULL		1272763	2					
ANR	1273037	Identifier	NULL		1272763	0					
ANR	1273038	ReturnType	int		1272763	1					
ANR	1273039	Identifier	gx_init_patch_fill_state_for_clist		1272763	2					
ANR	1273040	ParameterList	"gx_device * dev , patch_fill_state_t * pfs , gs_memory_t * memory"		1272763	3					
ANR	1273041	Parameter	gx_device * dev	2933:35:109763:109776	1272763	0	True				
ANR	1273042	ParameterType	gx_device *		1272763	0					
ANR	1273043	Identifier	dev		1272763	1					
ANR	1273044	Parameter	patch_fill_state_t * pfs	2933:51:109779:109801	1272763	1	True				
ANR	1273045	ParameterType	patch_fill_state_t *		1272763	0					
ANR	1273046	Identifier	pfs		1272763	1					
ANR	1273047	Parameter	gs_memory_t * memory	2933:76:109804:109822	1272763	2	True				
ANR	1273048	ParameterType	gs_memory_t *		1272763	0					
ANR	1273049	Identifier	memory		1272763	1					
ANR	1273050	CFGEntryNode	ENTRY		1272763		True				
ANR	1273051	CFGExitNode	EXIT		1272763		True				
ANR	1273052	Symbol	pfs -> dev -> HWResolution		1272763						
ANR	1273053	Symbol	pfs -> pshm		1272763						
ANR	1273054	Symbol	pfs -> Function		1272763						
ANR	1273055	Symbol	pfs -> monotonic_color		1272763						
ANR	1273056	Symbol	* pfs -> color_domain		1272763						
ANR	1273057	Symbol	pfs -> pcic		1272763						
ANR	1273058	Symbol	pfs -> trans_device		1272763						
ANR	1273059	Symbol	pfs -> direct_space		1272763						
ANR	1273060	Symbol	* pfs -> color_domain . paint		1272763						
ANR	1273061	Symbol	pfs -> free_wedge_vertex		1272763						
ANR	1273062	Symbol	* * pfs		1272763						
ANR	1273063	Symbol	alloc_patch_fill_memory		1272763						
ANR	1273064	Symbol	pfs -> color_stack_step		1272763						
ANR	1273065	Symbol	pfs -> icclink		1272763						
ANR	1273066	Symbol	dev		1272763						
ANR	1273067	Symbol	fixed_1		1272763						
ANR	1273068	Symbol	pfs -> wedge_vertex_list_elem_count_max		1272763						
ANR	1273069	Symbol	pfs -> color_domain . paint . values		1272763						
ANR	1273070	Symbol	pfs -> max_small_coord		1272763						
ANR	1273071	Symbol	NULL		1272763						
ANR	1273072	Symbol	dev -> color_info . num_components		1272763						
ANR	1273073	Symbol	* pfs		1272763						
ANR	1273074	Symbol	pfs -> pgs		1272763						
ANR	1273075	Symbol	pfs -> fixed_flat		1272763						
ANR	1273076	Symbol	true		1272763						
ANR	1273077	Symbol	pfs -> color_stack_limit		1272763						
ANR	1273078	Symbol	pfs		1272763						
ANR	1273079	Symbol	pfs -> linear_color		1272763						
ANR	1273080	Symbol	pfs -> n_color_args		1272763						
ANR	1273081	Symbol	pfs -> unlinear		1272763						
ANR	1273082	Symbol	* dev		1272763						
ANR	1273083	Symbol	pfs -> color_domain		1272763						
ANR	1273084	Symbol	* * pfs -> dev		1272763						
ANR	1273085	Symbol	memory		1272763						
ANR	1273086	Symbol	pfs -> wedge_vertex_list_elem_buffer		1272763						
ANR	1273087	Symbol	pfs -> color_stack_ptr		1272763						
ANR	1273088	Symbol	dev -> color_info		1272763						
ANR	1273089	Symbol	* pfs -> dev		1272763						
ANR	1273090	Symbol	pfs -> decomposition_limit		1272763						
ANR	1273091	Symbol	pfs -> vectorization		1272763						
ANR	1273092	Symbol	min		1272763						
ANR	1273093	Symbol	float2fixed		1272763						
ANR	1273094	Symbol	pfs -> num_components		1272763						
ANR	1273095	Symbol	pfs -> color_stack_size		1272763						
ANR	1273096	Symbol	pfs -> color_stack		1272763						
ANR	1273097	Symbol	pfs -> maybe_self_intersecting		1272763						
ANR	1273098	Symbol	* pfs -> color_domain . paint . values		1272763						
ANR	1273099	Symbol	max		1272763						
ANR	1273100	Symbol	pfs -> smoothness		1272763						
ANR	1273101	Symbol	pfs -> inside		1272763						
ANR	1273102	Symbol	false		1272763						
ANR	1273103	Symbol	i		1272763						
ANR	1273104	Symbol	pfs -> color_domain . paint		1272763						
ANR	1273105	Symbol	pfs -> wedge_vertex_list_elem_count		1272763						
ANR	1273106	Symbol	pfs -> dev		1272763						
ANR	1273107	Symbol	pfs -> function_arg_shift		1272763						
ANR	1273108	Symbol	* i		1272763						
ANR	1273109	Symbol	MAX_SHADING_RESOLUTION		1272763						
ANR	1273110	Symbol	* pfs -> dev -> HWResolution		1272763						
ANR	1273111	Symbol	* * * pfs		1272763						
ANR	1273112	Function	gx_fill_triangle_small	2982:0:111814:113454							
ANR	1273113	FunctionDef	"gx_fill_triangle_small (gx_device * dev , const gs_fill_attributes * fa , const gs_fixed_point * p0 , const gs_fixed_point * p1 , const gs_fixed_point * p2 , const frac31 * c0 , const frac31 * c1 , const frac31 * c2)"		1273112	0					
ANR	1273114	CompoundStatement		2987:0:112043:113454	1273112	0					
ANR	1273115	IdentifierDeclStatement	patch_fill_state_t * pfs = fa -> pfs ;	2988:4:112049:112082	1273112	0	True				
ANR	1273116	IdentifierDecl	* pfs = fa -> pfs		1273112	0					
ANR	1273117	IdentifierDeclType	patch_fill_state_t *		1273112	0					
ANR	1273118	Identifier	pfs		1273112	1					
ANR	1273119	AssignmentExpression	* pfs = fa -> pfs		1273112	2		=			
ANR	1273120	Identifier	pfs		1273112	0					
ANR	1273121	PtrMemberAccess	fa -> pfs		1273112	1					
ANR	1273122	Identifier	fa		1273112	0					
ANR	1273123	Identifier	pfs		1273112	1					
ANR	1273124	IdentifierDeclStatement	patch_color_t c [ 3 ] ;	2989:4:112088:112106	1273112	1	True				
ANR	1273125	IdentifierDecl	c [ 3 ]		1273112	0					
ANR	1273126	IdentifierDeclType	patch_color_t [ 3 ]		1273112	0					
ANR	1273127	Identifier	c		1273112	1					
ANR	1273128	PrimaryExpression	3		1273112	2					
ANR	1273129	IdentifierDeclStatement	shading_vertex_t p [ 3 ] ;	2990:4:112112:112133	1273112	2	True				
ANR	1273130	IdentifierDecl	p [ 3 ]		1273112	0					
ANR	1273131	IdentifierDeclType	shading_vertex_t [ 3 ]		1273112	0					
ANR	1273132	Identifier	p		1273112	1					
ANR	1273133	PrimaryExpression	3		1273112	2					
ANR	1273134	IdentifierDeclStatement	uchar i ;	2991:4:112139:112146	1273112	3	True				
ANR	1273135	IdentifierDecl	i		1273112	0					
ANR	1273136	IdentifierDeclType	uchar		1273112	0					
ANR	1273137	Identifier	i		1273112	1					
ANR	1273138	ExpressionStatement	p [ 0 ] . p = * p0	2994:4:112195:112207	1273112	4	True				
ANR	1273139	AssignmentExpression	p [ 0 ] . p = * p0		1273112	0		=			
ANR	1273140	MemberAccess	p [ 0 ] . p		1273112	0					
ANR	1273141	ArrayIndexing	p [ 0 ]		1273112	0					
ANR	1273142	Identifier	p		1273112	0					
ANR	1273143	PrimaryExpression	0		1273112	1					
ANR	1273144	Identifier	p		1273112	1					
ANR	1273145	UnaryOperationExpression	* p0		1273112	1					
ANR	1273146	UnaryOperator	*		1273112	0					
ANR	1273147	Identifier	p0		1273112	1					
ANR	1273148	ExpressionStatement	p [ 1 ] . p = * p1	2995:4:112213:112225	1273112	5	True				
ANR	1273149	AssignmentExpression	p [ 1 ] . p = * p1		1273112	0		=			
ANR	1273150	MemberAccess	p [ 1 ] . p		1273112	0					
ANR	1273151	ArrayIndexing	p [ 1 ]		1273112	0					
ANR	1273152	Identifier	p		1273112	0					
ANR	1273153	PrimaryExpression	1		1273112	1					
ANR	1273154	Identifier	p		1273112	1					
ANR	1273155	UnaryOperationExpression	* p1		1273112	1					
ANR	1273156	UnaryOperator	*		1273112	0					
ANR	1273157	Identifier	p1		1273112	1					
ANR	1273158	ExpressionStatement	p [ 2 ] . p = * p2	2996:4:112231:112243	1273112	6	True				
ANR	1273159	AssignmentExpression	p [ 2 ] . p = * p2		1273112	0		=			
ANR	1273160	MemberAccess	p [ 2 ] . p		1273112	0					
ANR	1273161	ArrayIndexing	p [ 2 ]		1273112	0					
ANR	1273162	Identifier	p		1273112	0					
ANR	1273163	PrimaryExpression	2		1273112	1					
ANR	1273164	Identifier	p		1273112	1					
ANR	1273165	UnaryOperationExpression	* p2		1273112	1					
ANR	1273166	UnaryOperator	*		1273112	0					
ANR	1273167	Identifier	p2		1273112	1					
ANR	1273168	ExpressionStatement	p [ 0 ] . c = & c [ 0 ]	2997:4:112249:112263	1273112	7	True				
ANR	1273169	AssignmentExpression	p [ 0 ] . c = & c [ 0 ]		1273112	0		=			
ANR	1273170	MemberAccess	p [ 0 ] . c		1273112	0					
ANR	1273171	ArrayIndexing	p [ 0 ]		1273112	0					
ANR	1273172	Identifier	p		1273112	0					
ANR	1273173	PrimaryExpression	0		1273112	1					
ANR	1273174	Identifier	c		1273112	1					
ANR	1273175	UnaryOperationExpression	& c [ 0 ]		1273112	1					
ANR	1273176	UnaryOperator	&		1273112	0					
ANR	1273177	ArrayIndexing	c [ 0 ]		1273112	1					
ANR	1273178	Identifier	c		1273112	0					
ANR	1273179	PrimaryExpression	0		1273112	1					
ANR	1273180	ExpressionStatement	p [ 1 ] . c = & c [ 1 ]	2998:4:112269:112283	1273112	8	True				
ANR	1273181	AssignmentExpression	p [ 1 ] . c = & c [ 1 ]		1273112	0		=			
ANR	1273182	MemberAccess	p [ 1 ] . c		1273112	0					
ANR	1273183	ArrayIndexing	p [ 1 ]		1273112	0					
ANR	1273184	Identifier	p		1273112	0					
ANR	1273185	PrimaryExpression	1		1273112	1					
ANR	1273186	Identifier	c		1273112	1					
ANR	1273187	UnaryOperationExpression	& c [ 1 ]		1273112	1					
ANR	1273188	UnaryOperator	&		1273112	0					
ANR	1273189	ArrayIndexing	c [ 1 ]		1273112	1					
ANR	1273190	Identifier	c		1273112	0					
ANR	1273191	PrimaryExpression	1		1273112	1					
ANR	1273192	ExpressionStatement	p [ 2 ] . c = & c [ 2 ]	2999:4:112289:112303	1273112	9	True				
ANR	1273193	AssignmentExpression	p [ 2 ] . c = & c [ 2 ]		1273112	0		=			
ANR	1273194	MemberAccess	p [ 2 ] . c		1273112	0					
ANR	1273195	ArrayIndexing	p [ 2 ]		1273112	0					
ANR	1273196	Identifier	p		1273112	0					
ANR	1273197	PrimaryExpression	2		1273112	1					
ANR	1273198	Identifier	c		1273112	1					
ANR	1273199	UnaryOperationExpression	& c [ 2 ]		1273112	1					
ANR	1273200	UnaryOperator	&		1273112	0					
ANR	1273201	ArrayIndexing	c [ 2 ]		1273112	1					
ANR	1273202	Identifier	c		1273112	0					
ANR	1273203	PrimaryExpression	2		1273112	1					
ANR	1273204	ExpressionStatement	c [ 0 ] . t [ 0 ] = c [ 0 ] . t [ 1 ] = c [ 1 ] . t [ 0 ] = c [ 1 ] . t [ 1 ] = c [ 2 ] . t [ 0 ] = c [ 2 ] . t [ 1 ] = 0	3000:4:112309:112382	1273112	10	True				
ANR	1273205	AssignmentExpression	c [ 0 ] . t [ 0 ] = c [ 0 ] . t [ 1 ] = c [ 1 ] . t [ 0 ] = c [ 1 ] . t [ 1 ] = c [ 2 ] . t [ 0 ] = c [ 2 ] . t [ 1 ] = 0		1273112	0		=			
ANR	1273206	ArrayIndexing	c [ 0 ] . t [ 0 ]		1273112	0					
ANR	1273207	MemberAccess	c [ 0 ] . t		1273112	0					
ANR	1273208	ArrayIndexing	c [ 0 ]		1273112	0					
ANR	1273209	Identifier	c		1273112	0					
ANR	1273210	PrimaryExpression	0		1273112	1					
ANR	1273211	Identifier	t		1273112	1					
ANR	1273212	PrimaryExpression	0		1273112	1					
ANR	1273213	AssignmentExpression	c [ 0 ] . t [ 1 ] = c [ 1 ] . t [ 0 ] = c [ 1 ] . t [ 1 ] = c [ 2 ] . t [ 0 ] = c [ 2 ] . t [ 1 ] = 0		1273112	1		=			
ANR	1273214	ArrayIndexing	c [ 0 ] . t [ 1 ]		1273112	0					
ANR	1273215	MemberAccess	c [ 0 ] . t		1273112	0					
ANR	1273216	ArrayIndexing	c [ 0 ]		1273112	0					
ANR	1273217	Identifier	c		1273112	0					
ANR	1273218	PrimaryExpression	0		1273112	1					
ANR	1273219	Identifier	t		1273112	1					
ANR	1273220	PrimaryExpression	1		1273112	1					
ANR	1273221	AssignmentExpression	c [ 1 ] . t [ 0 ] = c [ 1 ] . t [ 1 ] = c [ 2 ] . t [ 0 ] = c [ 2 ] . t [ 1 ] = 0		1273112	1		=			
ANR	1273222	ArrayIndexing	c [ 1 ] . t [ 0 ]		1273112	0					
ANR	1273223	MemberAccess	c [ 1 ] . t		1273112	0					
ANR	1273224	ArrayIndexing	c [ 1 ]		1273112	0					
ANR	1273225	Identifier	c		1273112	0					
ANR	1273226	PrimaryExpression	1		1273112	1					
ANR	1273227	Identifier	t		1273112	1					
ANR	1273228	PrimaryExpression	0		1273112	1					
ANR	1273229	AssignmentExpression	c [ 1 ] . t [ 1 ] = c [ 2 ] . t [ 0 ] = c [ 2 ] . t [ 1 ] = 0		1273112	1		=			
ANR	1273230	ArrayIndexing	c [ 1 ] . t [ 1 ]		1273112	0					
ANR	1273231	MemberAccess	c [ 1 ] . t		1273112	0					
ANR	1273232	ArrayIndexing	c [ 1 ]		1273112	0					
ANR	1273233	Identifier	c		1273112	0					
ANR	1273234	PrimaryExpression	1		1273112	1					
ANR	1273235	Identifier	t		1273112	1					
ANR	1273236	PrimaryExpression	1		1273112	1					
ANR	1273237	AssignmentExpression	c [ 2 ] . t [ 0 ] = c [ 2 ] . t [ 1 ] = 0		1273112	1		=			
ANR	1273238	ArrayIndexing	c [ 2 ] . t [ 0 ]		1273112	0					
ANR	1273239	MemberAccess	c [ 2 ] . t		1273112	0					
ANR	1273240	ArrayIndexing	c [ 2 ]		1273112	0					
ANR	1273241	Identifier	c		1273112	0					
ANR	1273242	PrimaryExpression	2		1273112	1					
ANR	1273243	Identifier	t		1273112	1					
ANR	1273244	PrimaryExpression	0		1273112	1					
ANR	1273245	AssignmentExpression	c [ 2 ] . t [ 1 ] = 0		1273112	1		=			
ANR	1273246	ArrayIndexing	c [ 2 ] . t [ 1 ]		1273112	0					
ANR	1273247	MemberAccess	c [ 2 ] . t		1273112	0					
ANR	1273248	ArrayIndexing	c [ 2 ]		1273112	0					
ANR	1273249	Identifier	c		1273112	0					
ANR	1273250	PrimaryExpression	2		1273112	1					
ANR	1273251	Identifier	t		1273112	1					
ANR	1273252	PrimaryExpression	1		1273112	1					
ANR	1273253	PrimaryExpression	0		1273112	1					
ANR	1273254	ForStatement	for ( i = 0 ; i < dev -> color_info . num_components ; i ++ )		1273112	11					
ANR	1273255	ForInit	i = 0 ;	3001:9:112417:112422	1273112	0	True				
ANR	1273256	AssignmentExpression	i = 0		1273112	0		=			
ANR	1273257	Identifier	i		1273112	0					
ANR	1273258	PrimaryExpression	0		1273112	1					
ANR	1273259	Condition	i < dev -> color_info . num_components	3001:16:112424:112457	1273112	1	True				
ANR	1273260	RelationalExpression	i < dev -> color_info . num_components		1273112	0		<			
ANR	1273261	Identifier	i		1273112	0					
ANR	1273262	MemberAccess	dev -> color_info . num_components		1273112	1					
ANR	1273263	PtrMemberAccess	dev -> color_info		1273112	0					
ANR	1273264	Identifier	dev		1273112	0					
ANR	1273265	Identifier	color_info		1273112	1					
ANR	1273266	Identifier	num_components		1273112	1					
ANR	1273267	PostIncDecOperationExpression	i ++	3001:52:112460:112462	1273112	2	True				
ANR	1273268	Identifier	i		1273112	0					
ANR	1273269	IncDec	++		1273112	1					
ANR	1273270	CompoundStatement		15:57:421:421	1273112	3					
ANR	1273271	ExpressionStatement	c [ 0 ] . cc . paint . values [ i ] = ( float ) c0 [ i ]	3002:8:112475:112513	1273112	0	True				
ANR	1273272	AssignmentExpression	c [ 0 ] . cc . paint . values [ i ] = ( float ) c0 [ i ]		1273112	0		=			
ANR	1273273	ArrayIndexing	c [ 0 ] . cc . paint . values [ i ]		1273112	0					
ANR	1273274	MemberAccess	c [ 0 ] . cc . paint . values		1273112	0					
ANR	1273275	MemberAccess	c [ 0 ] . cc . paint		1273112	0					
ANR	1273276	MemberAccess	c [ 0 ] . cc		1273112	0					
ANR	1273277	ArrayIndexing	c [ 0 ]		1273112	0					
ANR	1273278	Identifier	c		1273112	0					
ANR	1273279	PrimaryExpression	0		1273112	1					
ANR	1273280	Identifier	cc		1273112	1					
ANR	1273281	Identifier	paint		1273112	1					
ANR	1273282	Identifier	values		1273112	1					
ANR	1273283	Identifier	i		1273112	1					
ANR	1273284	CastExpression	( float ) c0 [ i ]		1273112	1					
ANR	1273285	CastTarget	float		1273112	0					
ANR	1273286	ArrayIndexing	c0 [ i ]		1273112	1					
ANR	1273287	Identifier	c0		1273112	0					
ANR	1273288	Identifier	i		1273112	1					
ANR	1273289	ExpressionStatement	c [ 1 ] . cc . paint . values [ i ] = ( float ) c1 [ i ]	3003:8:112523:112561	1273112	1	True				
ANR	1273290	AssignmentExpression	c [ 1 ] . cc . paint . values [ i ] = ( float ) c1 [ i ]		1273112	0		=			
ANR	1273291	ArrayIndexing	c [ 1 ] . cc . paint . values [ i ]		1273112	0					
ANR	1273292	MemberAccess	c [ 1 ] . cc . paint . values		1273112	0					
ANR	1273293	MemberAccess	c [ 1 ] . cc . paint		1273112	0					
ANR	1273294	MemberAccess	c [ 1 ] . cc		1273112	0					
ANR	1273295	ArrayIndexing	c [ 1 ]		1273112	0					
ANR	1273296	Identifier	c		1273112	0					
ANR	1273297	PrimaryExpression	1		1273112	1					
ANR	1273298	Identifier	cc		1273112	1					
ANR	1273299	Identifier	paint		1273112	1					
ANR	1273300	Identifier	values		1273112	1					
ANR	1273301	Identifier	i		1273112	1					
ANR	1273302	CastExpression	( float ) c1 [ i ]		1273112	1					
ANR	1273303	CastTarget	float		1273112	0					
ANR	1273304	ArrayIndexing	c1 [ i ]		1273112	1					
ANR	1273305	Identifier	c1		1273112	0					
ANR	1273306	Identifier	i		1273112	1					
ANR	1273307	ExpressionStatement	c [ 2 ] . cc . paint . values [ i ] = ( float ) c2 [ i ]	3004:8:112571:112609	1273112	2	True				
ANR	1273308	AssignmentExpression	c [ 2 ] . cc . paint . values [ i ] = ( float ) c2 [ i ]		1273112	0		=			
ANR	1273309	ArrayIndexing	c [ 2 ] . cc . paint . values [ i ]		1273112	0					
ANR	1273310	MemberAccess	c [ 2 ] . cc . paint . values		1273112	0					
ANR	1273311	MemberAccess	c [ 2 ] . cc . paint		1273112	0					
ANR	1273312	MemberAccess	c [ 2 ] . cc		1273112	0					
ANR	1273313	ArrayIndexing	c [ 2 ]		1273112	0					
ANR	1273314	Identifier	c		1273112	0					
ANR	1273315	PrimaryExpression	2		1273112	1					
ANR	1273316	Identifier	cc		1273112	1					
ANR	1273317	Identifier	paint		1273112	1					
ANR	1273318	Identifier	values		1273112	1					
ANR	1273319	Identifier	i		1273112	1					
ANR	1273320	CastExpression	( float ) c2 [ i ]		1273112	1					
ANR	1273321	CastTarget	float		1273112	0					
ANR	1273322	ArrayIndexing	c2 [ i ]		1273112	1					
ANR	1273323	Identifier	c2		1273112	0					
ANR	1273324	Identifier	i		1273112	1					
ANR	1273325	ReturnStatement	"return small_mesh_triangle ( pfs , & p [ 0 ] , & p [ 1 ] , & p [ 2 ] ) ;"	3021:4:113400:113452	1273112	12	True				
ANR	1273326	CallExpression	"small_mesh_triangle ( pfs , & p [ 0 ] , & p [ 1 ] , & p [ 2 ] )"		1273112	0					
ANR	1273327	Callee	small_mesh_triangle		1273112	0					
ANR	1273328	Identifier	small_mesh_triangle		1273112	0					
ANR	1273329	ArgumentList	pfs		1273112	1					
ANR	1273330	Argument	pfs		1273112	0					
ANR	1273331	Identifier	pfs		1273112	0					
ANR	1273332	Argument	& p [ 0 ]		1273112	1					
ANR	1273333	UnaryOperationExpression	& p [ 0 ]		1273112	0					
ANR	1273334	UnaryOperator	&		1273112	0					
ANR	1273335	ArrayIndexing	p [ 0 ]		1273112	1					
ANR	1273336	Identifier	p		1273112	0					
ANR	1273337	PrimaryExpression	0		1273112	1					
ANR	1273338	Argument	& p [ 1 ]		1273112	2					
ANR	1273339	UnaryOperationExpression	& p [ 1 ]		1273112	0					
ANR	1273340	UnaryOperator	&		1273112	0					
ANR	1273341	ArrayIndexing	p [ 1 ]		1273112	1					
ANR	1273342	Identifier	p		1273112	0					
ANR	1273343	PrimaryExpression	1		1273112	1					
ANR	1273344	Argument	& p [ 2 ]		1273112	3					
ANR	1273345	UnaryOperationExpression	& p [ 2 ]		1273112	0					
ANR	1273346	UnaryOperator	&		1273112	0					
ANR	1273347	ArrayIndexing	p [ 2 ]		1273112	1					
ANR	1273348	Identifier	p		1273112	0					
ANR	1273349	PrimaryExpression	2		1273112	1					
ANR	1273350	ReturnType	int		1273112	1					
ANR	1273351	Identifier	gx_fill_triangle_small		1273112	2					
ANR	1273352	ParameterList	"gx_device * dev , const gs_fill_attributes * fa , const gs_fixed_point * p0 , const gs_fixed_point * p1 , const gs_fixed_point * p2 , const frac31 * c0 , const frac31 * c1 , const frac31 * c2"		1273112	3					
ANR	1273353	Parameter	gx_device * dev	2983:23:111841:111854	1273112	0	True				
ANR	1273354	ParameterType	gx_device *		1273112	0					
ANR	1273355	Identifier	dev		1273112	1					
ANR	1273356	Parameter	const gs_fill_attributes * fa	2983:39:111857:111884	1273112	1	True				
ANR	1273357	ParameterType	const gs_fill_attributes *		1273112	0					
ANR	1273358	Identifier	fa		1273112	1					
ANR	1273359	Parameter	const gs_fixed_point * p0	2984:8:111895:111918	1273112	2	True				
ANR	1273360	ParameterType	const gs_fixed_point *		1273112	0					
ANR	1273361	Identifier	p0		1273112	1					
ANR	1273362	Parameter	const gs_fixed_point * p1	2984:34:111921:111944	1273112	3	True				
ANR	1273363	ParameterType	const gs_fixed_point *		1273112	0					
ANR	1273364	Identifier	p1		1273112	1					
ANR	1273365	Parameter	const gs_fixed_point * p2	2985:8:111955:111978	1273112	4	True				
ANR	1273366	ParameterType	const gs_fixed_point *		1273112	0					
ANR	1273367	Identifier	p2		1273112	1					
ANR	1273368	Parameter	const frac31 * c0	2986:8:111989:112004	1273112	5	True				
ANR	1273369	ParameterType	const frac31 *		1273112	0					
ANR	1273370	Identifier	c0		1273112	1					
ANR	1273371	Parameter	const frac31 * c1	2986:26:112007:112022	1273112	6	True				
ANR	1273372	ParameterType	const frac31 *		1273112	0					
ANR	1273373	Identifier	c1		1273112	1					
ANR	1273374	Parameter	const frac31 * c2	2986:44:112025:112040	1273112	7	True				
ANR	1273375	ParameterType	const frac31 *		1273112	0					
ANR	1273376	Identifier	c2		1273112	1					
ANR	1273377	CFGEntryNode	ENTRY		1273112		True				
ANR	1273378	CFGExitNode	EXIT		1273112		True				
ANR	1273379	Symbol	c [ 0 ] . t		1273112						
ANR	1273380	Symbol	p [ 1 ] . c		1273112						
ANR	1273381	Symbol	c [ 0 ] . cc . paint . values		1273112						
ANR	1273382	Symbol	* c [ 1 ] . cc . paint . values		1273112						
ANR	1273383	Symbol	c [ 1 ] . cc . paint		1273112						
ANR	1273384	Symbol	dev		1273112						
ANR	1273385	Symbol	* c [ 2 ] . t		1273112						
ANR	1273386	Symbol	p [ 1 ] . p		1273112						
ANR	1273387	Symbol	c [ 1 ] . cc		1273112						
ANR	1273388	Symbol	c [ 0 ] . cc		1273112						
ANR	1273389	Symbol	c [ 2 ] . cc		1273112						
ANR	1273390	Symbol	* c [ 2 ] . cc . paint		1273112						
ANR	1273391	Symbol	dev -> color_info . num_components		1273112						
ANR	1273392	Symbol	* * c		1273112						
ANR	1273393	Symbol	c [ 2 ] . cc . paint . values		1273112						
ANR	1273394	Symbol	c0		1273112						
ANR	1273395	Symbol	p [ 2 ] . p		1273112						
ANR	1273396	Symbol	c1		1273112						
ANR	1273397	Symbol	c2		1273112						
ANR	1273398	Symbol	c [ 0 ] . cc . paint		1273112						
ANR	1273399	Symbol	fa		1273112						
ANR	1273400	Symbol	pfs		1273112						
ANR	1273401	Symbol	c [ 1 ] . t		1273112						
ANR	1273402	Symbol	p [ 2 ] . c		1273112						
ANR	1273403	Symbol	p0		1273112						
ANR	1273404	Symbol	* dev		1273112						
ANR	1273405	Symbol	p1		1273112						
ANR	1273406	Symbol	p2		1273112						
ANR	1273407	Symbol	* c [ 0 ] . cc . paint . values		1273112						
ANR	1273408	Symbol	dev -> color_info		1273112						
ANR	1273409	Symbol	* c [ 0 ] . t		1273112						
ANR	1273410	Symbol	c [ 2 ] . t		1273112						
ANR	1273411	Symbol	* c [ 2 ] . cc		1273112						
ANR	1273412	Symbol	* c [ 0 ] . cc		1273112						
ANR	1273413	Symbol	c [ 2 ] . cc . paint		1273112						
ANR	1273414	Symbol	* c [ 1 ] . cc		1273112						
ANR	1273415	Symbol	p [ 0 ] . c		1273112						
ANR	1273416	Symbol	* fa		1273112						
ANR	1273417	Symbol	c		1273112						
ANR	1273418	Symbol	* c [ 1 ] . cc . paint		1273112						
ANR	1273419	Symbol	* p1		1273112						
ANR	1273420	Symbol	* p0		1273112						
ANR	1273421	Symbol	small_mesh_triangle		1273112						
ANR	1273422	Symbol	i		1273112						
ANR	1273423	Symbol	* p2		1273112						
ANR	1273424	Symbol	* c		1273112						
ANR	1273425	Symbol	p		1273112						
ANR	1273426	Symbol	* c0		1273112						
ANR	1273427	Symbol	* c [ 0 ] . cc . paint		1273112						
ANR	1273428	Symbol	fa -> pfs		1273112						
ANR	1273429	Symbol	* i		1273112						
ANR	1273430	Symbol	* c2		1273112						
ANR	1273431	Symbol	* c1		1273112						
ANR	1273432	Symbol	* p		1273112						
ANR	1273433	Symbol	c [ 1 ] . cc . paint . values		1273112						
ANR	1273434	Symbol	* c [ 2 ] . cc . paint . values		1273112						
ANR	1273435	Symbol	* c [ 1 ] . t		1273112						
ANR	1273436	Symbol	p [ 0 ] . p		1273112						
ANR	1273437	Function	mesh_triangle_rec	3024:0:113457:115601							
ANR	1273438	FunctionDef	"mesh_triangle_rec (patch_fill_state_t * pfs , const shading_vertex_t * p0 , const shading_vertex_t * p1 , const shading_vertex_t * p2)"		1273437	0					
ANR	1273439	CompoundStatement		3027:0:113603:115601	1273437	0					
ANR	1273440	ExpressionStatement	pfs -> unlinear = ! is_linear_color_applicable ( pfs )	3028:4:113609:113657	1273437	0	True				
ANR	1273441	AssignmentExpression	pfs -> unlinear = ! is_linear_color_applicable ( pfs )		1273437	0		=			
ANR	1273442	PtrMemberAccess	pfs -> unlinear		1273437	0					
ANR	1273443	Identifier	pfs		1273437	0					
ANR	1273444	Identifier	unlinear		1273437	1					
ANR	1273445	UnaryOperationExpression	! is_linear_color_applicable ( pfs )		1273437	1					
ANR	1273446	UnaryOperator	!		1273437	0					
ANR	1273447	CallExpression	is_linear_color_applicable ( pfs )		1273437	1					
ANR	1273448	Callee	is_linear_color_applicable		1273437	0					
ANR	1273449	Identifier	is_linear_color_applicable		1273437	0					
ANR	1273450	ArgumentList	pfs		1273437	1					
ANR	1273451	Argument	pfs		1273437	0					
ANR	1273452	Identifier	pfs		1273437	0					
ANR	1273453	IfStatement	"if ( manhattan_dist ( & p0 -> p , & p1 -> p ) < pfs -> max_small_coord && manhattan_dist ( & p1 -> p , & p2 -> p ) < pfs -> max_small_coord && manhattan_dist ( & p2 -> p , & p0 -> p ) < pfs -> max_small_coord )"		1273437	1					
ANR	1273454	Condition	"manhattan_dist ( & p0 -> p , & p1 -> p ) < pfs -> max_small_coord && manhattan_dist ( & p1 -> p , & p2 -> p ) < pfs -> max_small_coord && manhattan_dist ( & p2 -> p , & p0 -> p ) < pfs -> max_small_coord"	3029:8:113667:113849	1273437	0	True				
ANR	1273455	AndExpression	"manhattan_dist ( & p0 -> p , & p1 -> p ) < pfs -> max_small_coord && manhattan_dist ( & p1 -> p , & p2 -> p ) < pfs -> max_small_coord && manhattan_dist ( & p2 -> p , & p0 -> p ) < pfs -> max_small_coord"		1273437	0		&&			
ANR	1273456	RelationalExpression	"manhattan_dist ( & p0 -> p , & p1 -> p ) < pfs -> max_small_coord"		1273437	0		<			
ANR	1273457	CallExpression	"manhattan_dist ( & p0 -> p , & p1 -> p )"		1273437	0					
ANR	1273458	Callee	manhattan_dist		1273437	0					
ANR	1273459	Identifier	manhattan_dist		1273437	0					
ANR	1273460	ArgumentList	& p0 -> p		1273437	1					
ANR	1273461	Argument	& p0 -> p		1273437	0					
ANR	1273462	UnaryOperationExpression	& p0 -> p		1273437	0					
ANR	1273463	UnaryOperator	&		1273437	0					
ANR	1273464	PtrMemberAccess	p0 -> p		1273437	1					
ANR	1273465	Identifier	p0		1273437	0					
ANR	1273466	Identifier	p		1273437	1					
ANR	1273467	Argument	& p1 -> p		1273437	1					
ANR	1273468	UnaryOperationExpression	& p1 -> p		1273437	0					
ANR	1273469	UnaryOperator	&		1273437	0					
ANR	1273470	PtrMemberAccess	p1 -> p		1273437	1					
ANR	1273471	Identifier	p1		1273437	0					
ANR	1273472	Identifier	p		1273437	1					
ANR	1273473	PtrMemberAccess	pfs -> max_small_coord		1273437	1					
ANR	1273474	Identifier	pfs		1273437	0					
ANR	1273475	Identifier	max_small_coord		1273437	1					
ANR	1273476	AndExpression	"manhattan_dist ( & p1 -> p , & p2 -> p ) < pfs -> max_small_coord && manhattan_dist ( & p2 -> p , & p0 -> p ) < pfs -> max_small_coord"		1273437	1		&&			
ANR	1273477	RelationalExpression	"manhattan_dist ( & p1 -> p , & p2 -> p ) < pfs -> max_small_coord"		1273437	0		<			
ANR	1273478	CallExpression	"manhattan_dist ( & p1 -> p , & p2 -> p )"		1273437	0					
ANR	1273479	Callee	manhattan_dist		1273437	0					
ANR	1273480	Identifier	manhattan_dist		1273437	0					
ANR	1273481	ArgumentList	& p1 -> p		1273437	1					
ANR	1273482	Argument	& p1 -> p		1273437	0					
ANR	1273483	UnaryOperationExpression	& p1 -> p		1273437	0					
ANR	1273484	UnaryOperator	&		1273437	0					
ANR	1273485	PtrMemberAccess	p1 -> p		1273437	1					
ANR	1273486	Identifier	p1		1273437	0					
ANR	1273487	Identifier	p		1273437	1					
ANR	1273488	Argument	& p2 -> p		1273437	1					
ANR	1273489	UnaryOperationExpression	& p2 -> p		1273437	0					
ANR	1273490	UnaryOperator	&		1273437	0					
ANR	1273491	PtrMemberAccess	p2 -> p		1273437	1					
ANR	1273492	Identifier	p2		1273437	0					
ANR	1273493	Identifier	p		1273437	1					
ANR	1273494	PtrMemberAccess	pfs -> max_small_coord		1273437	1					
ANR	1273495	Identifier	pfs		1273437	0					
ANR	1273496	Identifier	max_small_coord		1273437	1					
ANR	1273497	RelationalExpression	"manhattan_dist ( & p2 -> p , & p0 -> p ) < pfs -> max_small_coord"		1273437	1		<			
ANR	1273498	CallExpression	"manhattan_dist ( & p2 -> p , & p0 -> p )"		1273437	0					
ANR	1273499	Callee	manhattan_dist		1273437	0					
ANR	1273500	Identifier	manhattan_dist		1273437	0					
ANR	1273501	ArgumentList	& p2 -> p		1273437	1					
ANR	1273502	Argument	& p2 -> p		1273437	0					
ANR	1273503	UnaryOperationExpression	& p2 -> p		1273437	0					
ANR	1273504	UnaryOperator	&		1273437	0					
ANR	1273505	PtrMemberAccess	p2 -> p		1273437	1					
ANR	1273506	Identifier	p2		1273437	0					
ANR	1273507	Identifier	p		1273437	1					
ANR	1273508	Argument	& p0 -> p		1273437	1					
ANR	1273509	UnaryOperationExpression	& p0 -> p		1273437	0					
ANR	1273510	UnaryOperator	&		1273437	0					
ANR	1273511	PtrMemberAccess	p0 -> p		1273437	1					
ANR	1273512	Identifier	p0		1273437	0					
ANR	1273513	Identifier	p		1273437	1					
ANR	1273514	PtrMemberAccess	pfs -> max_small_coord		1273437	1					
ANR	1273515	Identifier	pfs		1273437	0					
ANR	1273516	Identifier	max_small_coord		1273437	1					
ANR	1273517	ReturnStatement	"return small_mesh_triangle ( pfs , p0 , p1 , p2 ) ;"	3032:8:113860:113903	1273437	1	True				
ANR	1273518	CallExpression	"small_mesh_triangle ( pfs , p0 , p1 , p2 )"		1273437	0					
ANR	1273519	Callee	small_mesh_triangle		1273437	0					
ANR	1273520	Identifier	small_mesh_triangle		1273437	0					
ANR	1273521	ArgumentList	pfs		1273437	1					
ANR	1273522	Argument	pfs		1273437	0					
ANR	1273523	Identifier	pfs		1273437	0					
ANR	1273524	Argument	p0		1273437	1					
ANR	1273525	Identifier	p0		1273437	0					
ANR	1273526	Argument	p1		1273437	2					
ANR	1273527	Identifier	p1		1273437	0					
ANR	1273528	Argument	p2		1273437	3					
ANR	1273529	Identifier	p2		1273437	0					
ANR	1273530	ElseStatement	else		1273437	0					
ANR	1273531	CompoundStatement		21:8:987:1043	1273437	0					
ANR	1273532	IdentifierDeclStatement	"shading_vertex_t p01 , p12 , p20 ;"	3044:8:114504:114534	1273437	0	True				
ANR	1273533	IdentifierDecl	p01		1273437	0					
ANR	1273534	IdentifierDeclType	shading_vertex_t		1273437	0					
ANR	1273535	Identifier	p01		1273437	1					
ANR	1273536	IdentifierDecl	p12		1273437	1					
ANR	1273537	IdentifierDeclType	shading_vertex_t		1273437	0					
ANR	1273538	Identifier	p12		1273437	1					
ANR	1273539	IdentifierDecl	p20		1273437	2					
ANR	1273540	IdentifierDeclType	shading_vertex_t		1273437	0					
ANR	1273541	Identifier	p20		1273437	1					
ANR	1273542	IdentifierDeclStatement	patch_color_t * c [ 3 ] ;	3045:8:114544:114563	1273437	1	True				
ANR	1273543	IdentifierDecl	* c [ 3 ]		1273437	0					
ANR	1273544	IdentifierDeclType	patch_color_t * [ 3 ]		1273437	0					
ANR	1273545	Identifier	c		1273437	1					
ANR	1273546	PrimaryExpression	3		1273437	2					
ANR	1273547	IdentifierDeclStatement	int code ;	3046:8:114573:114581	1273437	2	True				
ANR	1273548	IdentifierDecl	code		1273437	0					
ANR	1273549	IdentifierDeclType	int		1273437	0					
ANR	1273550	Identifier	code		1273437	1					
ANR	1273551	IdentifierDeclStatement	"byte * color_stack_ptr = reserve_colors_inline ( pfs , c , 3 ) ;"	3047:8:114591:114647	1273437	3	True				
ANR	1273552	IdentifierDecl	"* color_stack_ptr = reserve_colors_inline ( pfs , c , 3 )"		1273437	0					
ANR	1273553	IdentifierDeclType	byte *		1273437	0					
ANR	1273554	Identifier	color_stack_ptr		1273437	1					
ANR	1273555	AssignmentExpression	"* color_stack_ptr = reserve_colors_inline ( pfs , c , 3 )"		1273437	2		=			
ANR	1273556	Identifier	color_stack_ptr		1273437	0					
ANR	1273557	CallExpression	"reserve_colors_inline ( pfs , c , 3 )"		1273437	1					
ANR	1273558	Callee	reserve_colors_inline		1273437	0					
ANR	1273559	Identifier	reserve_colors_inline		1273437	0					
ANR	1273560	ArgumentList	pfs		1273437	1					
ANR	1273561	Argument	pfs		1273437	0					
ANR	1273562	Identifier	pfs		1273437	0					
ANR	1273563	Argument	c		1273437	1					
ANR	1273564	Identifier	c		1273437	0					
ANR	1273565	Argument	3		1273437	2					
ANR	1273566	PrimaryExpression	3		1273437	0					
ANR	1273567	IfStatement	if ( color_stack_ptr == NULL )		1273437	4					
ANR	1273568	Condition	color_stack_ptr == NULL	3049:12:114662:114684	1273437	0	True				
ANR	1273569	EqualityExpression	color_stack_ptr == NULL		1273437	0		==			
ANR	1273570	Identifier	color_stack_ptr		1273437	0					
ANR	1273571	Identifier	NULL		1273437	1					
ANR	1273572	ExpressionStatement	return_error ( gs_error_unregistered )	3050:12:114699:114734	1273437	1	True				
ANR	1273573	CallExpression	return_error ( gs_error_unregistered )		1273437	0					
ANR	1273574	Callee	return_error		1273437	0					
ANR	1273575	Identifier	return_error		1273437	0					
ANR	1273576	ArgumentList	gs_error_unregistered		1273437	1					
ANR	1273577	Argument	gs_error_unregistered		1273437	0					
ANR	1273578	Identifier	gs_error_unregistered		1273437	0					
ANR	1273579	ExpressionStatement	p01 . c = c [ 0 ]	3051:8:114767:114779	1273437	5	True				
ANR	1273580	AssignmentExpression	p01 . c = c [ 0 ]		1273437	0		=			
ANR	1273581	MemberAccess	p01 . c		1273437	0					
ANR	1273582	Identifier	p01		1273437	0					
ANR	1273583	Identifier	c		1273437	1					
ANR	1273584	ArrayIndexing	c [ 0 ]		1273437	1					
ANR	1273585	Identifier	c		1273437	0					
ANR	1273586	PrimaryExpression	0		1273437	1					
ANR	1273587	ExpressionStatement	p12 . c = c [ 1 ]	3052:8:114789:114801	1273437	6	True				
ANR	1273588	AssignmentExpression	p12 . c = c [ 1 ]		1273437	0		=			
ANR	1273589	MemberAccess	p12 . c		1273437	0					
ANR	1273590	Identifier	p12		1273437	0					
ANR	1273591	Identifier	c		1273437	1					
ANR	1273592	ArrayIndexing	c [ 1 ]		1273437	1					
ANR	1273593	Identifier	c		1273437	0					
ANR	1273594	PrimaryExpression	1		1273437	1					
ANR	1273595	ExpressionStatement	p20 . c = c [ 2 ]	3053:8:114811:114823	1273437	7	True				
ANR	1273596	AssignmentExpression	p20 . c = c [ 2 ]		1273437	0		=			
ANR	1273597	MemberAccess	p20 . c		1273437	0					
ANR	1273598	Identifier	p20		1273437	0					
ANR	1273599	Identifier	c		1273437	1					
ANR	1273600	ArrayIndexing	c [ 2 ]		1273437	1					
ANR	1273601	Identifier	c		1273437	0					
ANR	1273602	PrimaryExpression	2		1273437	1					
ANR	1273603	ExpressionStatement	"divide_bar ( pfs , p0 , p1 , 2 , & p01 , c [ 0 ] )"	3054:8:114833:114871	1273437	8	True				
ANR	1273604	CallExpression	"divide_bar ( pfs , p0 , p1 , 2 , & p01 , c [ 0 ] )"		1273437	0					
ANR	1273605	Callee	divide_bar		1273437	0					
ANR	1273606	Identifier	divide_bar		1273437	0					
ANR	1273607	ArgumentList	pfs		1273437	1					
ANR	1273608	Argument	pfs		1273437	0					
ANR	1273609	Identifier	pfs		1273437	0					
ANR	1273610	Argument	p0		1273437	1					
ANR	1273611	Identifier	p0		1273437	0					
ANR	1273612	Argument	p1		1273437	2					
ANR	1273613	Identifier	p1		1273437	0					
ANR	1273614	Argument	2		1273437	3					
ANR	1273615	PrimaryExpression	2		1273437	0					
ANR	1273616	Argument	& p01		1273437	4					
ANR	1273617	UnaryOperationExpression	& p01		1273437	0					
ANR	1273618	UnaryOperator	&		1273437	0					
ANR	1273619	Identifier	p01		1273437	1					
ANR	1273620	Argument	c [ 0 ]		1273437	5					
ANR	1273621	ArrayIndexing	c [ 0 ]		1273437	0					
ANR	1273622	Identifier	c		1273437	0					
ANR	1273623	PrimaryExpression	0		1273437	1					
ANR	1273624	ExpressionStatement	"divide_bar ( pfs , p1 , p2 , 2 , & p12 , c [ 1 ] )"	3055:8:114881:114919	1273437	9	True				
ANR	1273625	CallExpression	"divide_bar ( pfs , p1 , p2 , 2 , & p12 , c [ 1 ] )"		1273437	0					
ANR	1273626	Callee	divide_bar		1273437	0					
ANR	1273627	Identifier	divide_bar		1273437	0					
ANR	1273628	ArgumentList	pfs		1273437	1					
ANR	1273629	Argument	pfs		1273437	0					
ANR	1273630	Identifier	pfs		1273437	0					
ANR	1273631	Argument	p1		1273437	1					
ANR	1273632	Identifier	p1		1273437	0					
ANR	1273633	Argument	p2		1273437	2					
ANR	1273634	Identifier	p2		1273437	0					
ANR	1273635	Argument	2		1273437	3					
ANR	1273636	PrimaryExpression	2		1273437	0					
ANR	1273637	Argument	& p12		1273437	4					
ANR	1273638	UnaryOperationExpression	& p12		1273437	0					
ANR	1273639	UnaryOperator	&		1273437	0					
ANR	1273640	Identifier	p12		1273437	1					
ANR	1273641	Argument	c [ 1 ]		1273437	5					
ANR	1273642	ArrayIndexing	c [ 1 ]		1273437	0					
ANR	1273643	Identifier	c		1273437	0					
ANR	1273644	PrimaryExpression	1		1273437	1					
ANR	1273645	ExpressionStatement	"divide_bar ( pfs , p2 , p0 , 2 , & p20 , c [ 2 ] )"	3056:8:114929:114967	1273437	10	True				
ANR	1273646	CallExpression	"divide_bar ( pfs , p2 , p0 , 2 , & p20 , c [ 2 ] )"		1273437	0					
ANR	1273647	Callee	divide_bar		1273437	0					
ANR	1273648	Identifier	divide_bar		1273437	0					
ANR	1273649	ArgumentList	pfs		1273437	1					
ANR	1273650	Argument	pfs		1273437	0					
ANR	1273651	Identifier	pfs		1273437	0					
ANR	1273652	Argument	p2		1273437	1					
ANR	1273653	Identifier	p2		1273437	0					
ANR	1273654	Argument	p0		1273437	2					
ANR	1273655	Identifier	p0		1273437	0					
ANR	1273656	Argument	2		1273437	3					
ANR	1273657	PrimaryExpression	2		1273437	0					
ANR	1273658	Argument	& p20		1273437	4					
ANR	1273659	UnaryOperationExpression	& p20		1273437	0					
ANR	1273660	UnaryOperator	&		1273437	0					
ANR	1273661	Identifier	p20		1273437	1					
ANR	1273662	Argument	c [ 2 ]		1273437	5					
ANR	1273663	ArrayIndexing	c [ 2 ]		1273437	0					
ANR	1273664	Identifier	c		1273437	0					
ANR	1273665	PrimaryExpression	2		1273437	1					
ANR	1273666	ExpressionStatement	"code = fill_triangle_wedge ( pfs , p0 , p1 , & p01 )"	3057:8:114977:115022	1273437	11	True				
ANR	1273667	AssignmentExpression	"code = fill_triangle_wedge ( pfs , p0 , p1 , & p01 )"		1273437	0		=			
ANR	1273668	Identifier	code		1273437	0					
ANR	1273669	CallExpression	"fill_triangle_wedge ( pfs , p0 , p1 , & p01 )"		1273437	1					
ANR	1273670	Callee	fill_triangle_wedge		1273437	0					
ANR	1273671	Identifier	fill_triangle_wedge		1273437	0					
ANR	1273672	ArgumentList	pfs		1273437	1					
ANR	1273673	Argument	pfs		1273437	0					
ANR	1273674	Identifier	pfs		1273437	0					
ANR	1273675	Argument	p0		1273437	1					
ANR	1273676	Identifier	p0		1273437	0					
ANR	1273677	Argument	p1		1273437	2					
ANR	1273678	Identifier	p1		1273437	0					
ANR	1273679	Argument	& p01		1273437	3					
ANR	1273680	UnaryOperationExpression	& p01		1273437	0					
ANR	1273681	UnaryOperator	&		1273437	0					
ANR	1273682	Identifier	p01		1273437	1					
ANR	1273683	IfStatement	if ( code >= 0 )		1273437	12					
ANR	1273684	Condition	code >= 0	3058:12:115036:115044	1273437	0	True				
ANR	1273685	RelationalExpression	code >= 0		1273437	0		>=			
ANR	1273686	Identifier	code		1273437	0					
ANR	1273687	PrimaryExpression	0		1273437	1					
ANR	1273688	ExpressionStatement	"code = fill_triangle_wedge ( pfs , p1 , p2 , & p12 )"	3059:12:115059:115104	1273437	1	True				
ANR	1273689	AssignmentExpression	"code = fill_triangle_wedge ( pfs , p1 , p2 , & p12 )"		1273437	0		=			
ANR	1273690	Identifier	code		1273437	0					
ANR	1273691	CallExpression	"fill_triangle_wedge ( pfs , p1 , p2 , & p12 )"		1273437	1					
ANR	1273692	Callee	fill_triangle_wedge		1273437	0					
ANR	1273693	Identifier	fill_triangle_wedge		1273437	0					
ANR	1273694	ArgumentList	pfs		1273437	1					
ANR	1273695	Argument	pfs		1273437	0					
ANR	1273696	Identifier	pfs		1273437	0					
ANR	1273697	Argument	p1		1273437	1					
ANR	1273698	Identifier	p1		1273437	0					
ANR	1273699	Argument	p2		1273437	2					
ANR	1273700	Identifier	p2		1273437	0					
ANR	1273701	Argument	& p12		1273437	3					
ANR	1273702	UnaryOperationExpression	& p12		1273437	0					
ANR	1273703	UnaryOperator	&		1273437	0					
ANR	1273704	Identifier	p12		1273437	1					
ANR	1273705	IfStatement	if ( code >= 0 )		1273437	13					
ANR	1273706	Condition	code >= 0	3060:12:115118:115126	1273437	0	True				
ANR	1273707	RelationalExpression	code >= 0		1273437	0		>=			
ANR	1273708	Identifier	code		1273437	0					
ANR	1273709	PrimaryExpression	0		1273437	1					
ANR	1273710	ExpressionStatement	"code = fill_triangle_wedge ( pfs , p2 , p0 , & p20 )"	3061:12:115141:115186	1273437	1	True				
ANR	1273711	AssignmentExpression	"code = fill_triangle_wedge ( pfs , p2 , p0 , & p20 )"		1273437	0		=			
ANR	1273712	Identifier	code		1273437	0					
ANR	1273713	CallExpression	"fill_triangle_wedge ( pfs , p2 , p0 , & p20 )"		1273437	1					
ANR	1273714	Callee	fill_triangle_wedge		1273437	0					
ANR	1273715	Identifier	fill_triangle_wedge		1273437	0					
ANR	1273716	ArgumentList	pfs		1273437	1					
ANR	1273717	Argument	pfs		1273437	0					
ANR	1273718	Identifier	pfs		1273437	0					
ANR	1273719	Argument	p2		1273437	1					
ANR	1273720	Identifier	p2		1273437	0					
ANR	1273721	Argument	p0		1273437	2					
ANR	1273722	Identifier	p0		1273437	0					
ANR	1273723	Argument	& p20		1273437	3					
ANR	1273724	UnaryOperationExpression	& p20		1273437	0					
ANR	1273725	UnaryOperator	&		1273437	0					
ANR	1273726	Identifier	p20		1273437	1					
ANR	1273727	IfStatement	if ( code >= 0 )		1273437	14					
ANR	1273728	Condition	code >= 0	3062:12:115200:115208	1273437	0	True				
ANR	1273729	RelationalExpression	code >= 0		1273437	0		>=			
ANR	1273730	Identifier	code		1273437	0					
ANR	1273731	PrimaryExpression	0		1273437	1					
ANR	1273732	ExpressionStatement	"code = mesh_triangle_rec ( pfs , p0 , & p01 , & p20 )"	3063:12:115223:115268	1273437	1	True				
ANR	1273733	AssignmentExpression	"code = mesh_triangle_rec ( pfs , p0 , & p01 , & p20 )"		1273437	0		=			
ANR	1273734	Identifier	code		1273437	0					
ANR	1273735	CallExpression	"mesh_triangle_rec ( pfs , p0 , & p01 , & p20 )"		1273437	1					
ANR	1273736	Callee	mesh_triangle_rec		1273437	0					
ANR	1273737	Identifier	mesh_triangle_rec		1273437	0					
ANR	1273738	ArgumentList	pfs		1273437	1					
ANR	1273739	Argument	pfs		1273437	0					
ANR	1273740	Identifier	pfs		1273437	0					
ANR	1273741	Argument	p0		1273437	1					
ANR	1273742	Identifier	p0		1273437	0					
ANR	1273743	Argument	& p01		1273437	2					
ANR	1273744	UnaryOperationExpression	& p01		1273437	0					
ANR	1273745	UnaryOperator	&		1273437	0					
ANR	1273746	Identifier	p01		1273437	1					
ANR	1273747	Argument	& p20		1273437	3					
ANR	1273748	UnaryOperationExpression	& p20		1273437	0					
ANR	1273749	UnaryOperator	&		1273437	0					
ANR	1273750	Identifier	p20		1273437	1					
ANR	1273751	IfStatement	if ( code >= 0 )		1273437	15					
ANR	1273752	Condition	code >= 0	3064:12:115282:115290	1273437	0	True				
ANR	1273753	RelationalExpression	code >= 0		1273437	0		>=			
ANR	1273754	Identifier	code		1273437	0					
ANR	1273755	PrimaryExpression	0		1273437	1					
ANR	1273756	ExpressionStatement	"code = mesh_triangle_rec ( pfs , p1 , & p12 , & p01 )"	3065:12:115305:115350	1273437	1	True				
ANR	1273757	AssignmentExpression	"code = mesh_triangle_rec ( pfs , p1 , & p12 , & p01 )"		1273437	0		=			
ANR	1273758	Identifier	code		1273437	0					
ANR	1273759	CallExpression	"mesh_triangle_rec ( pfs , p1 , & p12 , & p01 )"		1273437	1					
ANR	1273760	Callee	mesh_triangle_rec		1273437	0					
ANR	1273761	Identifier	mesh_triangle_rec		1273437	0					
ANR	1273762	ArgumentList	pfs		1273437	1					
ANR	1273763	Argument	pfs		1273437	0					
ANR	1273764	Identifier	pfs		1273437	0					
ANR	1273765	Argument	p1		1273437	1					
ANR	1273766	Identifier	p1		1273437	0					
ANR	1273767	Argument	& p12		1273437	2					
ANR	1273768	UnaryOperationExpression	& p12		1273437	0					
ANR	1273769	UnaryOperator	&		1273437	0					
ANR	1273770	Identifier	p12		1273437	1					
ANR	1273771	Argument	& p01		1273437	3					
ANR	1273772	UnaryOperationExpression	& p01		1273437	0					
ANR	1273773	UnaryOperator	&		1273437	0					
ANR	1273774	Identifier	p01		1273437	1					
ANR	1273775	IfStatement	if ( code >= 0 )		1273437	16					
ANR	1273776	Condition	code >= 0	3066:12:115364:115372	1273437	0	True				
ANR	1273777	RelationalExpression	code >= 0		1273437	0		>=			
ANR	1273778	Identifier	code		1273437	0					
ANR	1273779	PrimaryExpression	0		1273437	1					
ANR	1273780	ExpressionStatement	"code = mesh_triangle_rec ( pfs , p2 , & p20 , & p12 )"	3067:12:115387:115432	1273437	1	True				
ANR	1273781	AssignmentExpression	"code = mesh_triangle_rec ( pfs , p2 , & p20 , & p12 )"		1273437	0		=			
ANR	1273782	Identifier	code		1273437	0					
ANR	1273783	CallExpression	"mesh_triangle_rec ( pfs , p2 , & p20 , & p12 )"		1273437	1					
ANR	1273784	Callee	mesh_triangle_rec		1273437	0					
ANR	1273785	Identifier	mesh_triangle_rec		1273437	0					
ANR	1273786	ArgumentList	pfs		1273437	1					
ANR	1273787	Argument	pfs		1273437	0					
ANR	1273788	Identifier	pfs		1273437	0					
ANR	1273789	Argument	p2		1273437	1					
ANR	1273790	Identifier	p2		1273437	0					
ANR	1273791	Argument	& p20		1273437	2					
ANR	1273792	UnaryOperationExpression	& p20		1273437	0					
ANR	1273793	UnaryOperator	&		1273437	0					
ANR	1273794	Identifier	p20		1273437	1					
ANR	1273795	Argument	& p12		1273437	3					
ANR	1273796	UnaryOperationExpression	& p12		1273437	0					
ANR	1273797	UnaryOperator	&		1273437	0					
ANR	1273798	Identifier	p12		1273437	1					
ANR	1273799	IfStatement	if ( code >= 0 )		1273437	17					
ANR	1273800	Condition	code >= 0	3068:12:115446:115454	1273437	0	True				
ANR	1273801	RelationalExpression	code >= 0		1273437	0		>=			
ANR	1273802	Identifier	code		1273437	0					
ANR	1273803	PrimaryExpression	0		1273437	1					
ANR	1273804	ExpressionStatement	"code = mesh_triangle_rec ( pfs , & p01 , & p12 , & p20 )"	3069:12:115469:115516	1273437	1	True				
ANR	1273805	AssignmentExpression	"code = mesh_triangle_rec ( pfs , & p01 , & p12 , & p20 )"		1273437	0		=			
ANR	1273806	Identifier	code		1273437	0					
ANR	1273807	CallExpression	"mesh_triangle_rec ( pfs , & p01 , & p12 , & p20 )"		1273437	1					
ANR	1273808	Callee	mesh_triangle_rec		1273437	0					
ANR	1273809	Identifier	mesh_triangle_rec		1273437	0					
ANR	1273810	ArgumentList	pfs		1273437	1					
ANR	1273811	Argument	pfs		1273437	0					
ANR	1273812	Identifier	pfs		1273437	0					
ANR	1273813	Argument	& p01		1273437	1					
ANR	1273814	UnaryOperationExpression	& p01		1273437	0					
ANR	1273815	UnaryOperator	&		1273437	0					
ANR	1273816	Identifier	p01		1273437	1					
ANR	1273817	Argument	& p12		1273437	2					
ANR	1273818	UnaryOperationExpression	& p12		1273437	0					
ANR	1273819	UnaryOperator	&		1273437	0					
ANR	1273820	Identifier	p12		1273437	1					
ANR	1273821	Argument	& p20		1273437	3					
ANR	1273822	UnaryOperationExpression	& p20		1273437	0					
ANR	1273823	UnaryOperator	&		1273437	0					
ANR	1273824	Identifier	p20		1273437	1					
ANR	1273825	ExpressionStatement	"release_colors_inline ( pfs , color_stack_ptr , 3 )"	3070:8:115526:115572	1273437	18	True				
ANR	1273826	CallExpression	"release_colors_inline ( pfs , color_stack_ptr , 3 )"		1273437	0					
ANR	1273827	Callee	release_colors_inline		1273437	0					
ANR	1273828	Identifier	release_colors_inline		1273437	0					
ANR	1273829	ArgumentList	pfs		1273437	1					
ANR	1273830	Argument	pfs		1273437	0					
ANR	1273831	Identifier	pfs		1273437	0					
ANR	1273832	Argument	color_stack_ptr		1273437	1					
ANR	1273833	Identifier	color_stack_ptr		1273437	0					
ANR	1273834	Argument	3		1273437	2					
ANR	1273835	PrimaryExpression	3		1273437	0					
ANR	1273836	ReturnStatement	return code ;	3071:8:115582:115593	1273437	19	True				
ANR	1273837	Identifier	code		1273437	0					
ANR	1273838	ReturnType	static int		1273437	1					
ANR	1273839	Identifier	mesh_triangle_rec		1273437	2					
ANR	1273840	ParameterList	"patch_fill_state_t * pfs , const shading_vertex_t * p0 , const shading_vertex_t * p1 , const shading_vertex_t * p2"		1273437	3					
ANR	1273841	Parameter	patch_fill_state_t * pfs	3025:18:113486:113508	1273437	0	True				
ANR	1273842	ParameterType	patch_fill_state_t *		1273437	0					
ANR	1273843	Identifier	pfs		1273437	1					
ANR	1273844	Parameter	const shading_vertex_t * p0	3026:8:113519:113544	1273437	1	True				
ANR	1273845	ParameterType	const shading_vertex_t *		1273437	0					
ANR	1273846	Identifier	p0		1273437	1					
ANR	1273847	Parameter	const shading_vertex_t * p1	3026:36:113547:113572	1273437	2	True				
ANR	1273848	ParameterType	const shading_vertex_t *		1273437	0					
ANR	1273849	Identifier	p1		1273437	1					
ANR	1273850	Parameter	const shading_vertex_t * p2	3026:64:113575:113600	1273437	3	True				
ANR	1273851	ParameterType	const shading_vertex_t *		1273437	0					
ANR	1273852	Identifier	p2		1273437	1					
ANR	1273853	CFGEntryNode	ENTRY		1273437		True				
ANR	1273854	CFGExitNode	EXIT		1273437		True				
ANR	1273855	Symbol	p0		1273437						
ANR	1273856	Symbol	p20 . c		1273437						
ANR	1273857	Symbol	fill_triangle_wedge		1273437						
ANR	1273858	Symbol	p1		1273437						
ANR	1273859	Symbol	p2		1273437						
ANR	1273860	Symbol	gs_error_unregistered		1273437						
ANR	1273861	Symbol	code		1273437						
ANR	1273862	Symbol	p12 . c		1273437						
ANR	1273863	Symbol	manhattan_dist		1273437						
ANR	1273864	Symbol	p12		1273437						
ANR	1273865	Symbol	& p01		1273437						
ANR	1273866	Symbol	& p20		1273437						
ANR	1273867	Symbol	mesh_triangle_rec		1273437						
ANR	1273868	Symbol	& p2 -> p		1273437						
ANR	1273869	Symbol	reserve_colors_inline		1273437						
ANR	1273870	Symbol	pfs -> max_small_coord		1273437						
ANR	1273871	Symbol	c		1273437						
ANR	1273872	Symbol	NULL		1273437						
ANR	1273873	Symbol	p01 . c		1273437						
ANR	1273874	Symbol	* pfs		1273437						
ANR	1273875	Symbol	small_mesh_triangle		1273437						
ANR	1273876	Symbol	* c		1273437						
ANR	1273877	Symbol	is_linear_color_applicable		1273437						
ANR	1273878	Symbol	& p0 -> p		1273437						
ANR	1273879	Symbol	p20		1273437						
ANR	1273880	Symbol	p01		1273437						
ANR	1273881	Symbol	& p12		1273437						
ANR	1273882	Symbol	color_stack_ptr		1273437						
ANR	1273883	Symbol	& p1 -> p		1273437						
ANR	1273884	Symbol	pfs		1273437						
ANR	1273885	Symbol	pfs -> unlinear		1273437						
ANR	1273886	Function	mesh_triangle	3075:0:115604:117013							
ANR	1273887	FunctionDef	"mesh_triangle (patch_fill_state_t * pfs , const shading_vertex_t * p0 , const shading_vertex_t * p1 , const shading_vertex_t * p2)"		1273886	0					
ANR	1273888	CompoundStatement		3078:0:115739:117013	1273886	0					
ANR	1273889	IfStatement	"if ( ( * dev_proc ( pfs -> dev , dev_spec_op ) ) ( pfs -> dev , gxdso_pattern_shading_area , NULL , 0 ) > 0 )"		1273886	0					
ANR	1273890	Condition	"( * dev_proc ( pfs -> dev , dev_spec_op ) ) ( pfs -> dev , gxdso_pattern_shading_area , NULL , 0 ) > 0"	3079:8:115749:115845	1273886	0	True				
ANR	1273891	RelationalExpression	"( * dev_proc ( pfs -> dev , dev_spec_op ) ) ( pfs -> dev , gxdso_pattern_shading_area , NULL , 0 ) > 0"		1273886	0		>			
ANR	1273892	CallExpression	"( * dev_proc ( pfs -> dev , dev_spec_op ) ) ( pfs -> dev , gxdso_pattern_shading_area , NULL , 0 )"		1273886	0					
ANR	1273893	Callee	"* dev_proc ( pfs -> dev , dev_spec_op )"		1273886	0					
ANR	1273894	UnaryOperationExpression	"* dev_proc ( pfs -> dev , dev_spec_op )"		1273886	0					
ANR	1273895	UnaryOperator	*		1273886	0					
ANR	1273896	CallExpression	"dev_proc ( pfs -> dev , dev_spec_op )"		1273886	1					
ANR	1273897	Callee	dev_proc		1273886	0					
ANR	1273898	Identifier	dev_proc		1273886	0					
ANR	1273899	ArgumentList	pfs -> dev		1273886	1					
ANR	1273900	Argument	pfs -> dev		1273886	0					
ANR	1273901	PtrMemberAccess	pfs -> dev		1273886	0					
ANR	1273902	Identifier	pfs		1273886	0					
ANR	1273903	Identifier	dev		1273886	1					
ANR	1273904	Argument	dev_spec_op		1273886	1					
ANR	1273905	Identifier	dev_spec_op		1273886	0					
ANR	1273906	ArgumentList	pfs -> dev		1273886	1					
ANR	1273907	Argument	pfs -> dev		1273886	0					
ANR	1273908	PtrMemberAccess	pfs -> dev		1273886	0					
ANR	1273909	Identifier	pfs		1273886	0					
ANR	1273910	Identifier	dev		1273886	1					
ANR	1273911	Argument	gxdso_pattern_shading_area		1273886	1					
ANR	1273912	Identifier	gxdso_pattern_shading_area		1273886	0					
ANR	1273913	Argument	NULL		1273886	2					
ANR	1273914	Identifier	NULL		1273886	0					
ANR	1273915	Argument	0		1273886	3					
ANR	1273916	PrimaryExpression	0		1273886	0					
ANR	1273917	PrimaryExpression	0		1273886	1					
ANR	1273918	CompoundStatement		12:8:499:555	1273886	1					
ANR	1273919	IdentifierDeclStatement	gx_device * pdev = pfs -> dev ;	3084:8:116031:116057	1273886	0	True				
ANR	1273920	IdentifierDecl	* pdev = pfs -> dev		1273886	0					
ANR	1273921	IdentifierDeclType	gx_device *		1273886	0					
ANR	1273922	Identifier	pdev		1273886	1					
ANR	1273923	AssignmentExpression	* pdev = pfs -> dev		1273886	2		=			
ANR	1273924	Identifier	pdev		1273886	0					
ANR	1273925	PtrMemberAccess	pfs -> dev		1273886	1					
ANR	1273926	Identifier	pfs		1273886	0					
ANR	1273927	Identifier	dev		1273886	1					
ANR	1273928	IdentifierDeclStatement	gx_path path ;	3085:8:116067:116079	1273886	1	True				
ANR	1273929	IdentifierDecl	path		1273886	0					
ANR	1273930	IdentifierDeclType	gx_path		1273886	0					
ANR	1273931	Identifier	path		1273886	1					
ANR	1273932	IdentifierDeclStatement	int code ;	3086:8:116089:116097	1273886	2	True				
ANR	1273933	IdentifierDecl	code		1273886	0					
ANR	1273934	IdentifierDeclType	int		1273886	0					
ANR	1273935	Identifier	code		1273886	1					
ANR	1273936	IdentifierDeclStatement	"fixed d01x = p1 -> p . x - p0 -> p . x , d01y = p1 -> p . y - p0 -> p . y ;"	3087:8:116107:116163	1273886	3	True				
ANR	1273937	IdentifierDecl	d01x = p1 -> p . x - p0 -> p . x		1273886	0					
ANR	1273938	IdentifierDeclType	fixed		1273886	0					
ANR	1273939	Identifier	d01x		1273886	1					
ANR	1273940	AssignmentExpression	d01x = p1 -> p . x - p0 -> p . x		1273886	2		=			
ANR	1273941	Identifier	d01x		1273886	0					
ANR	1273942	AdditiveExpression	p1 -> p . x - p0 -> p . x		1273886	1		-			
ANR	1273943	MemberAccess	p1 -> p . x		1273886	0					
ANR	1273944	PtrMemberAccess	p1 -> p		1273886	0					
ANR	1273945	Identifier	p1		1273886	0					
ANR	1273946	Identifier	p		1273886	1					
ANR	1273947	Identifier	x		1273886	1					
ANR	1273948	MemberAccess	p0 -> p . x		1273886	1					
ANR	1273949	PtrMemberAccess	p0 -> p		1273886	0					
ANR	1273950	Identifier	p0		1273886	0					
ANR	1273951	Identifier	p		1273886	1					
ANR	1273952	Identifier	x		1273886	1					
ANR	1273953	IdentifierDecl	d01y = p1 -> p . y - p0 -> p . y		1273886	1					
ANR	1273954	IdentifierDeclType	fixed		1273886	0					
ANR	1273955	Identifier	d01y		1273886	1					
ANR	1273956	AssignmentExpression	d01y = p1 -> p . y - p0 -> p . y		1273886	2		=			
ANR	1273957	Identifier	d01y		1273886	0					
ANR	1273958	AdditiveExpression	p1 -> p . y - p0 -> p . y		1273886	1		-			
ANR	1273959	MemberAccess	p1 -> p . y		1273886	0					
ANR	1273960	PtrMemberAccess	p1 -> p		1273886	0					
ANR	1273961	Identifier	p1		1273886	0					
ANR	1273962	Identifier	p		1273886	1					
ANR	1273963	Identifier	y		1273886	1					
ANR	1273964	MemberAccess	p0 -> p . y		1273886	1					
ANR	1273965	PtrMemberAccess	p0 -> p		1273886	0					
ANR	1273966	Identifier	p0		1273886	0					
ANR	1273967	Identifier	p		1273886	1					
ANR	1273968	Identifier	y		1273886	1					
ANR	1273969	IdentifierDeclStatement	"fixed d12x = p2 -> p . x - p1 -> p . x , d12y = p2 -> p . y - p1 -> p . y ;"	3088:8:116173:116229	1273886	4	True				
ANR	1273970	IdentifierDecl	d12x = p2 -> p . x - p1 -> p . x		1273886	0					
ANR	1273971	IdentifierDeclType	fixed		1273886	0					
ANR	1273972	Identifier	d12x		1273886	1					
ANR	1273973	AssignmentExpression	d12x = p2 -> p . x - p1 -> p . x		1273886	2		=			
ANR	1273974	Identifier	d12x		1273886	0					
ANR	1273975	AdditiveExpression	p2 -> p . x - p1 -> p . x		1273886	1		-			
ANR	1273976	MemberAccess	p2 -> p . x		1273886	0					
ANR	1273977	PtrMemberAccess	p2 -> p		1273886	0					
ANR	1273978	Identifier	p2		1273886	0					
ANR	1273979	Identifier	p		1273886	1					
ANR	1273980	Identifier	x		1273886	1					
ANR	1273981	MemberAccess	p1 -> p . x		1273886	1					
ANR	1273982	PtrMemberAccess	p1 -> p		1273886	0					
ANR	1273983	Identifier	p1		1273886	0					
ANR	1273984	Identifier	p		1273886	1					
ANR	1273985	Identifier	x		1273886	1					
ANR	1273986	IdentifierDecl	d12y = p2 -> p . y - p1 -> p . y		1273886	1					
ANR	1273987	IdentifierDeclType	fixed		1273886	0					
ANR	1273988	Identifier	d12y		1273886	1					
ANR	1273989	AssignmentExpression	d12y = p2 -> p . y - p1 -> p . y		1273886	2		=			
ANR	1273990	Identifier	d12y		1273886	0					
ANR	1273991	AdditiveExpression	p2 -> p . y - p1 -> p . y		1273886	1		-			
ANR	1273992	MemberAccess	p2 -> p . y		1273886	0					
ANR	1273993	PtrMemberAccess	p2 -> p		1273886	0					
ANR	1273994	Identifier	p2		1273886	0					
ANR	1273995	Identifier	p		1273886	1					
ANR	1273996	Identifier	y		1273886	1					
ANR	1273997	MemberAccess	p1 -> p . y		1273886	1					
ANR	1273998	PtrMemberAccess	p1 -> p		1273886	0					
ANR	1273999	Identifier	p1		1273886	0					
ANR	1274000	Identifier	p		1273886	1					
ANR	1274001	Identifier	y		1273886	1					
ANR	1274002	IdentifierDeclStatement	int64_t s1 = ( int64_t ) d01x * d12y - ( int64_t ) d01y * d12x ;	3089:8:116239:116295	1273886	5	True				
ANR	1274003	IdentifierDecl	s1 = ( int64_t ) d01x * d12y - ( int64_t ) d01y * d12x		1273886	0					
ANR	1274004	IdentifierDeclType	int64_t		1273886	0					
ANR	1274005	Identifier	s1		1273886	1					
ANR	1274006	AssignmentExpression	s1 = ( int64_t ) d01x * d12y - ( int64_t ) d01y * d12x		1273886	2		=			
ANR	1274007	Identifier	s1		1273886	0					
ANR	1274008	AdditiveExpression	( int64_t ) d01x * d12y - ( int64_t ) d01y * d12x		1273886	1		-			
ANR	1274009	MultiplicativeExpression	( int64_t ) d01x * d12y		1273886	0		*			
ANR	1274010	CastExpression	( int64_t ) d01x		1273886	0					
ANR	1274011	CastTarget	int64_t		1273886	0					
ANR	1274012	Identifier	d01x		1273886	1					
ANR	1274013	Identifier	d12y		1273886	1					
ANR	1274014	MultiplicativeExpression	( int64_t ) d01y * d12x		1273886	1		*			
ANR	1274015	CastExpression	( int64_t ) d01y		1273886	0					
ANR	1274016	CastTarget	int64_t		1273886	0					
ANR	1274017	Identifier	d01y		1273886	1					
ANR	1274018	Identifier	d12x		1273886	1					
ANR	1274019	ExpressionStatement	"gx_path_init_local ( & path , pdev -> memory )"	3091:8:116306:116345	1273886	6	True				
ANR	1274020	CallExpression	"gx_path_init_local ( & path , pdev -> memory )"		1273886	0					
ANR	1274021	Callee	gx_path_init_local		1273886	0					
ANR	1274022	Identifier	gx_path_init_local		1273886	0					
ANR	1274023	ArgumentList	& path		1273886	1					
ANR	1274024	Argument	& path		1273886	0					
ANR	1274025	UnaryOperationExpression	& path		1273886	0					
ANR	1274026	UnaryOperator	&		1273886	0					
ANR	1274027	Identifier	path		1273886	1					
ANR	1274028	Argument	pdev -> memory		1273886	1					
ANR	1274029	PtrMemberAccess	pdev -> memory		1273886	0					
ANR	1274030	Identifier	pdev		1273886	0					
ANR	1274031	Identifier	memory		1273886	1					
ANR	1274032	ExpressionStatement	"code = gx_path_add_point ( & path , p0 -> p . x , p0 -> p . y )"	3092:8:116355:116404	1273886	7	True				
ANR	1274033	AssignmentExpression	"code = gx_path_add_point ( & path , p0 -> p . x , p0 -> p . y )"		1273886	0		=			
ANR	1274034	Identifier	code		1273886	0					
ANR	1274035	CallExpression	"gx_path_add_point ( & path , p0 -> p . x , p0 -> p . y )"		1273886	1					
ANR	1274036	Callee	gx_path_add_point		1273886	0					
ANR	1274037	Identifier	gx_path_add_point		1273886	0					
ANR	1274038	ArgumentList	& path		1273886	1					
ANR	1274039	Argument	& path		1273886	0					
ANR	1274040	UnaryOperationExpression	& path		1273886	0					
ANR	1274041	UnaryOperator	&		1273886	0					
ANR	1274042	Identifier	path		1273886	1					
ANR	1274043	Argument	p0 -> p . x		1273886	1					
ANR	1274044	MemberAccess	p0 -> p . x		1273886	0					
ANR	1274045	PtrMemberAccess	p0 -> p		1273886	0					
ANR	1274046	Identifier	p0		1273886	0					
ANR	1274047	Identifier	p		1273886	1					
ANR	1274048	Identifier	x		1273886	1					
ANR	1274049	Argument	p0 -> p . y		1273886	2					
ANR	1274050	MemberAccess	p0 -> p . y		1273886	0					
ANR	1274051	PtrMemberAccess	p0 -> p		1273886	0					
ANR	1274052	Identifier	p0		1273886	0					
ANR	1274053	Identifier	p		1273886	1					
ANR	1274054	Identifier	y		1273886	1					
ANR	1274055	IfStatement	if ( code >= 0 && s1 >= 0 )		1273886	8					
ANR	1274056	Condition	code >= 0 && s1 >= 0	3093:12:116418:116437	1273886	0	True				
ANR	1274057	AndExpression	code >= 0 && s1 >= 0		1273886	0		&&			
ANR	1274058	RelationalExpression	code >= 0		1273886	0		>=			
ANR	1274059	Identifier	code		1273886	0					
ANR	1274060	PrimaryExpression	0		1273886	1					
ANR	1274061	RelationalExpression	s1 >= 0		1273886	1		>=			
ANR	1274062	Identifier	s1		1273886	0					
ANR	1274063	PrimaryExpression	0		1273886	1					
ANR	1274064	ExpressionStatement	"code = gx_path_add_line ( & path , p1 -> p . x , p1 -> p . y )"	3094:12:116452:116500	1273886	1	True				
ANR	1274065	AssignmentExpression	"code = gx_path_add_line ( & path , p1 -> p . x , p1 -> p . y )"		1273886	0		=			
ANR	1274066	Identifier	code		1273886	0					
ANR	1274067	CallExpression	"gx_path_add_line ( & path , p1 -> p . x , p1 -> p . y )"		1273886	1					
ANR	1274068	Callee	gx_path_add_line		1273886	0					
ANR	1274069	Identifier	gx_path_add_line		1273886	0					
ANR	1274070	ArgumentList	& path		1273886	1					
ANR	1274071	Argument	& path		1273886	0					
ANR	1274072	UnaryOperationExpression	& path		1273886	0					
ANR	1274073	UnaryOperator	&		1273886	0					
ANR	1274074	Identifier	path		1273886	1					
ANR	1274075	Argument	p1 -> p . x		1273886	1					
ANR	1274076	MemberAccess	p1 -> p . x		1273886	0					
ANR	1274077	PtrMemberAccess	p1 -> p		1273886	0					
ANR	1274078	Identifier	p1		1273886	0					
ANR	1274079	Identifier	p		1273886	1					
ANR	1274080	Identifier	x		1273886	1					
ANR	1274081	Argument	p1 -> p . y		1273886	2					
ANR	1274082	MemberAccess	p1 -> p . y		1273886	0					
ANR	1274083	PtrMemberAccess	p1 -> p		1273886	0					
ANR	1274084	Identifier	p1		1273886	0					
ANR	1274085	Identifier	p		1273886	1					
ANR	1274086	Identifier	y		1273886	1					
ANR	1274087	IfStatement	if ( code >= 0 )		1273886	9					
ANR	1274088	Condition	code >= 0	3095:12:116514:116522	1273886	0	True				
ANR	1274089	RelationalExpression	code >= 0		1273886	0		>=			
ANR	1274090	Identifier	code		1273886	0					
ANR	1274091	PrimaryExpression	0		1273886	1					
ANR	1274092	ExpressionStatement	"code = gx_path_add_line ( & path , p2 -> p . x , p2 -> p . y )"	3096:12:116537:116585	1273886	1	True				
ANR	1274093	AssignmentExpression	"code = gx_path_add_line ( & path , p2 -> p . x , p2 -> p . y )"		1273886	0		=			
ANR	1274094	Identifier	code		1273886	0					
ANR	1274095	CallExpression	"gx_path_add_line ( & path , p2 -> p . x , p2 -> p . y )"		1273886	1					
ANR	1274096	Callee	gx_path_add_line		1273886	0					
ANR	1274097	Identifier	gx_path_add_line		1273886	0					
ANR	1274098	ArgumentList	& path		1273886	1					
ANR	1274099	Argument	& path		1273886	0					
ANR	1274100	UnaryOperationExpression	& path		1273886	0					
ANR	1274101	UnaryOperator	&		1273886	0					
ANR	1274102	Identifier	path		1273886	1					
ANR	1274103	Argument	p2 -> p . x		1273886	1					
ANR	1274104	MemberAccess	p2 -> p . x		1273886	0					
ANR	1274105	PtrMemberAccess	p2 -> p		1273886	0					
ANR	1274106	Identifier	p2		1273886	0					
ANR	1274107	Identifier	p		1273886	1					
ANR	1274108	Identifier	x		1273886	1					
ANR	1274109	Argument	p2 -> p . y		1273886	2					
ANR	1274110	MemberAccess	p2 -> p . y		1273886	0					
ANR	1274111	PtrMemberAccess	p2 -> p		1273886	0					
ANR	1274112	Identifier	p2		1273886	0					
ANR	1274113	Identifier	p		1273886	1					
ANR	1274114	Identifier	y		1273886	1					
ANR	1274115	IfStatement	if ( code >= 0 && s1 < 0 )		1273886	10					
ANR	1274116	Condition	code >= 0 && s1 < 0	3097:12:116599:116617	1273886	0	True				
ANR	1274117	AndExpression	code >= 0 && s1 < 0		1273886	0		&&			
ANR	1274118	RelationalExpression	code >= 0		1273886	0		>=			
ANR	1274119	Identifier	code		1273886	0					
ANR	1274120	PrimaryExpression	0		1273886	1					
ANR	1274121	RelationalExpression	s1 < 0		1273886	1		<			
ANR	1274122	Identifier	s1		1273886	0					
ANR	1274123	PrimaryExpression	0		1273886	1					
ANR	1274124	ExpressionStatement	"code = gx_path_add_line ( & path , p1 -> p . x , p1 -> p . y )"	3098:12:116632:116680	1273886	1	True				
ANR	1274125	AssignmentExpression	"code = gx_path_add_line ( & path , p1 -> p . x , p1 -> p . y )"		1273886	0		=			
ANR	1274126	Identifier	code		1273886	0					
ANR	1274127	CallExpression	"gx_path_add_line ( & path , p1 -> p . x , p1 -> p . y )"		1273886	1					
ANR	1274128	Callee	gx_path_add_line		1273886	0					
ANR	1274129	Identifier	gx_path_add_line		1273886	0					
ANR	1274130	ArgumentList	& path		1273886	1					
ANR	1274131	Argument	& path		1273886	0					
ANR	1274132	UnaryOperationExpression	& path		1273886	0					
ANR	1274133	UnaryOperator	&		1273886	0					
ANR	1274134	Identifier	path		1273886	1					
ANR	1274135	Argument	p1 -> p . x		1273886	1					
ANR	1274136	MemberAccess	p1 -> p . x		1273886	0					
ANR	1274137	PtrMemberAccess	p1 -> p		1273886	0					
ANR	1274138	Identifier	p1		1273886	0					
ANR	1274139	Identifier	p		1273886	1					
ANR	1274140	Identifier	x		1273886	1					
ANR	1274141	Argument	p1 -> p . y		1273886	2					
ANR	1274142	MemberAccess	p1 -> p . y		1273886	0					
ANR	1274143	PtrMemberAccess	p1 -> p		1273886	0					
ANR	1274144	Identifier	p1		1273886	0					
ANR	1274145	Identifier	p		1273886	1					
ANR	1274146	Identifier	y		1273886	1					
ANR	1274147	IfStatement	if ( code >= 0 )		1273886	11					
ANR	1274148	Condition	code >= 0	3099:12:116694:116702	1273886	0	True				
ANR	1274149	RelationalExpression	code >= 0		1273886	0		>=			
ANR	1274150	Identifier	code		1273886	0					
ANR	1274151	PrimaryExpression	0		1273886	1					
ANR	1274152	ExpressionStatement	code = gx_path_close_subpath ( & path )	3100:12:116717:116752	1273886	1	True				
ANR	1274153	AssignmentExpression	code = gx_path_close_subpath ( & path )		1273886	0		=			
ANR	1274154	Identifier	code		1273886	0					
ANR	1274155	CallExpression	gx_path_close_subpath ( & path )		1273886	1					
ANR	1274156	Callee	gx_path_close_subpath		1273886	0					
ANR	1274157	Identifier	gx_path_close_subpath		1273886	0					
ANR	1274158	ArgumentList	& path		1273886	1					
ANR	1274159	Argument	& path		1273886	0					
ANR	1274160	UnaryOperationExpression	& path		1273886	0					
ANR	1274161	UnaryOperator	&		1273886	0					
ANR	1274162	Identifier	path		1273886	1					
ANR	1274163	IfStatement	if ( code >= 0 )		1273886	12					
ANR	1274164	Condition	code >= 0	3101:12:116766:116774	1273886	0	True				
ANR	1274165	RelationalExpression	code >= 0		1273886	0		>=			
ANR	1274166	Identifier	code		1273886	0					
ANR	1274167	PrimaryExpression	0		1273886	1					
ANR	1274168	ExpressionStatement	"code = ( * dev_proc ( pfs -> dev , fill_path ) ) ( pdev , NULL , & path , NULL , NULL , NULL )"	3102:12:116789:116865	1273886	1	True				
ANR	1274169	AssignmentExpression	"code = ( * dev_proc ( pfs -> dev , fill_path ) ) ( pdev , NULL , & path , NULL , NULL , NULL )"		1273886	0		=			
ANR	1274170	Identifier	code		1273886	0					
ANR	1274171	CallExpression	"( * dev_proc ( pfs -> dev , fill_path ) ) ( pdev , NULL , & path , NULL , NULL , NULL )"		1273886	1					
ANR	1274172	Callee	"* dev_proc ( pfs -> dev , fill_path )"		1273886	0					
ANR	1274173	UnaryOperationExpression	"* dev_proc ( pfs -> dev , fill_path )"		1273886	0					
ANR	1274174	UnaryOperator	*		1273886	0					
ANR	1274175	CallExpression	"dev_proc ( pfs -> dev , fill_path )"		1273886	1					
ANR	1274176	Callee	dev_proc		1273886	0					
ANR	1274177	Identifier	dev_proc		1273886	0					
ANR	1274178	ArgumentList	pfs -> dev		1273886	1					
ANR	1274179	Argument	pfs -> dev		1273886	0					
ANR	1274180	PtrMemberAccess	pfs -> dev		1273886	0					
ANR	1274181	Identifier	pfs		1273886	0					
ANR	1274182	Identifier	dev		1273886	1					
ANR	1274183	Argument	fill_path		1273886	1					
ANR	1274184	Identifier	fill_path		1273886	0					
ANR	1274185	ArgumentList	pdev		1273886	1					
ANR	1274186	Argument	pdev		1273886	0					
ANR	1274187	Identifier	pdev		1273886	0					
ANR	1274188	Argument	NULL		1273886	1					
ANR	1274189	Identifier	NULL		1273886	0					
ANR	1274190	Argument	& path		1273886	2					
ANR	1274191	UnaryOperationExpression	& path		1273886	0					
ANR	1274192	UnaryOperator	&		1273886	0					
ANR	1274193	Identifier	path		1273886	1					
ANR	1274194	Argument	NULL		1273886	3					
ANR	1274195	Identifier	NULL		1273886	0					
ANR	1274196	Argument	NULL		1273886	4					
ANR	1274197	Identifier	NULL		1273886	0					
ANR	1274198	Argument	NULL		1273886	5					
ANR	1274199	Identifier	NULL		1273886	0					
ANR	1274200	ExpressionStatement	"gx_path_free ( & path , ""mesh_triangle"" )"	3103:8:116875:116911	1273886	13	True				
ANR	1274201	CallExpression	"gx_path_free ( & path , ""mesh_triangle"" )"		1273886	0					
ANR	1274202	Callee	gx_path_free		1273886	0					
ANR	1274203	Identifier	gx_path_free		1273886	0					
ANR	1274204	ArgumentList	& path		1273886	1					
ANR	1274205	Argument	& path		1273886	0					
ANR	1274206	UnaryOperationExpression	& path		1273886	0					
ANR	1274207	UnaryOperator	&		1273886	0					
ANR	1274208	Identifier	path		1273886	1					
ANR	1274209	Argument	"""mesh_triangle"""		1273886	1					
ANR	1274210	PrimaryExpression	"""mesh_triangle"""		1273886	0					
ANR	1274211	IfStatement	if ( code < 0 )		1273886	14					
ANR	1274212	Condition	code < 0	3104:12:116925:116932	1273886	0	True				
ANR	1274213	RelationalExpression	code < 0		1273886	0		<			
ANR	1274214	Identifier	code		1273886	0					
ANR	1274215	PrimaryExpression	0		1273886	1					
ANR	1274216	ReturnStatement	return code ;	3105:12:116947:116958	1273886	1	True				
ANR	1274217	Identifier	code		1273886	0					
ANR	1274218	ReturnStatement	"return mesh_triangle_rec ( pfs , p0 , p1 , p2 ) ;"	3107:4:116970:117011	1273886	1	True				
ANR	1274219	CallExpression	"mesh_triangle_rec ( pfs , p0 , p1 , p2 )"		1273886	0					
ANR	1274220	Callee	mesh_triangle_rec		1273886	0					
ANR	1274221	Identifier	mesh_triangle_rec		1273886	0					
ANR	1274222	ArgumentList	pfs		1273886	1					
ANR	1274223	Argument	pfs		1273886	0					
ANR	1274224	Identifier	pfs		1273886	0					
ANR	1274225	Argument	p0		1273886	1					
ANR	1274226	Identifier	p0		1273886	0					
ANR	1274227	Argument	p1		1273886	2					
ANR	1274228	Identifier	p1		1273886	0					
ANR	1274229	Argument	p2		1273886	3					
ANR	1274230	Identifier	p2		1273886	0					
ANR	1274231	ReturnType	int		1273886	1					
ANR	1274232	Identifier	mesh_triangle		1273886	2					
ANR	1274233	ParameterList	"patch_fill_state_t * pfs , const shading_vertex_t * p0 , const shading_vertex_t * p1 , const shading_vertex_t * p2"		1273886	3					
ANR	1274234	Parameter	patch_fill_state_t * pfs	3076:14:115622:115644	1273886	0	True				
ANR	1274235	ParameterType	patch_fill_state_t *		1273886	0					
ANR	1274236	Identifier	pfs		1273886	1					
ANR	1274237	Parameter	const shading_vertex_t * p0	3077:8:115655:115680	1273886	1	True				
ANR	1274238	ParameterType	const shading_vertex_t *		1273886	0					
ANR	1274239	Identifier	p0		1273886	1					
ANR	1274240	Parameter	const shading_vertex_t * p1	3077:36:115683:115708	1273886	2	True				
ANR	1274241	ParameterType	const shading_vertex_t *		1273886	0					
ANR	1274242	Identifier	p1		1273886	1					
ANR	1274243	Parameter	const shading_vertex_t * p2	3077:64:115711:115736	1273886	3	True				
ANR	1274244	ParameterType	const shading_vertex_t *		1273886	0					
ANR	1274245	Identifier	p2		1273886	1					
ANR	1274246	CFGEntryNode	ENTRY		1273886		True				
ANR	1274247	CFGExitNode	EXIT		1273886		True				
ANR	1274248	Symbol	p0		1273886						
ANR	1274249	Symbol	p1		1273886						
ANR	1274250	Symbol	p2		1273886						
ANR	1274251	Symbol	code		1273886						
ANR	1274252	Symbol	p0 -> p . y		1273886						
ANR	1274253	Symbol	* dev_proc		1273886						
ANR	1274254	Symbol	dev_spec_op		1273886						
ANR	1274255	Symbol	p0 -> p . x		1273886						
ANR	1274256	Symbol	gx_path_close_subpath		1273886						
ANR	1274257	Symbol	& path		1273886						
ANR	1274258	Symbol	pdev		1273886						
ANR	1274259	Symbol	path		1273886						
ANR	1274260	Symbol	mesh_triangle_rec		1273886						
ANR	1274261	Symbol	pdev -> memory		1273886						
ANR	1274262	Symbol	dev_proc		1273886						
ANR	1274263	Symbol	d01y		1273886						
ANR	1274264	Symbol	fill_path		1273886						
ANR	1274265	Symbol	p0 -> p		1273886						
ANR	1274266	Symbol	d01x		1273886						
ANR	1274267	Symbol	s1		1273886						
ANR	1274268	Symbol	NULL		1273886						
ANR	1274269	Symbol	* p1		1273886						
ANR	1274270	Symbol	* p0		1273886						
ANR	1274271	Symbol	p2 -> p . x		1273886						
ANR	1274272	Symbol	p2 -> p . y		1273886						
ANR	1274273	Symbol	* pfs		1273886						
ANR	1274274	Symbol	* p2		1273886						
ANR	1274275	Symbol	gx_path_add_point		1273886						
ANR	1274276	Symbol	gxdso_pattern_shading_area		1273886						
ANR	1274277	Symbol	p1 -> p		1273886						
ANR	1274278	Symbol	p1 -> p . x		1273886						
ANR	1274279	Symbol	pfs -> dev		1273886						
ANR	1274280	Symbol	p1 -> p . y		1273886						
ANR	1274281	Symbol	gx_path_add_line		1273886						
ANR	1274282	Symbol	* pdev		1273886						
ANR	1274283	Symbol	d12y		1273886						
ANR	1274284	Symbol	p2 -> p		1273886						
ANR	1274285	Symbol	pfs		1273886						
ANR	1274286	Symbol	"* dev_proc ( pfs -> dev , fill_path )"		1273886						
ANR	1274287	Symbol	d12x		1273886						
ANR	1274288	Symbol	"* dev_proc ( pfs -> dev , dev_spec_op )"		1273886						
ANR	1274289	Function	triangles4	3110:0:117016:118662							
ANR	1274290	FunctionDef	"triangles4 (patch_fill_state_t * pfs , const quadrangle_patch * p , bool dummy_argument)"		1274289	0					
ANR	1274291	CompoundStatement		3112:0:117118:118662	1274289	0					
ANR	1274292	IdentifierDeclStatement	"shading_vertex_t p0001 , p1011 , q ;"	3113:4:117124:117156	1274289	0	True				
ANR	1274293	IdentifierDecl	p0001		1274289	0					
ANR	1274294	IdentifierDeclType	shading_vertex_t		1274289	0					
ANR	1274295	Identifier	p0001		1274289	1					
ANR	1274296	IdentifierDecl	p1011		1274289	1					
ANR	1274297	IdentifierDeclType	shading_vertex_t		1274289	0					
ANR	1274298	Identifier	p1011		1274289	1					
ANR	1274299	IdentifierDecl	q		1274289	2					
ANR	1274300	IdentifierDeclType	shading_vertex_t		1274289	0					
ANR	1274301	Identifier	q		1274289	1					
ANR	1274302	IdentifierDeclStatement	patch_color_t * c [ 3 ] ;	3114:4:117162:117181	1274289	1	True				
ANR	1274303	IdentifierDecl	* c [ 3 ]		1274289	0					
ANR	1274304	IdentifierDeclType	patch_color_t * [ 3 ]		1274289	0					
ANR	1274305	Identifier	c		1274289	1					
ANR	1274306	PrimaryExpression	3		1274289	2					
ANR	1274307	IdentifierDeclStatement	wedge_vertex_list_t l [ 4 ] ;	3115:4:117187:117211	1274289	2	True				
ANR	1274308	IdentifierDecl	l [ 4 ]		1274289	0					
ANR	1274309	IdentifierDeclType	wedge_vertex_list_t [ 4 ]		1274289	0					
ANR	1274310	Identifier	l		1274289	1					
ANR	1274311	PrimaryExpression	4		1274289	2					
ANR	1274312	IdentifierDeclStatement	int code ;	3116:4:117217:117225	1274289	3	True				
ANR	1274313	IdentifierDecl	code		1274289	0					
ANR	1274314	IdentifierDeclType	int		1274289	0					
ANR	1274315	Identifier	code		1274289	1					
ANR	1274316	IdentifierDeclStatement	"byte * color_stack_ptr = reserve_colors_inline ( pfs , c , 3 ) ;"	3117:4:117231:117287	1274289	4	True				
ANR	1274317	IdentifierDecl	"* color_stack_ptr = reserve_colors_inline ( pfs , c , 3 )"		1274289	0					
ANR	1274318	IdentifierDeclType	byte *		1274289	0					
ANR	1274319	Identifier	color_stack_ptr		1274289	1					
ANR	1274320	AssignmentExpression	"* color_stack_ptr = reserve_colors_inline ( pfs , c , 3 )"		1274289	2		=			
ANR	1274321	Identifier	color_stack_ptr		1274289	0					
ANR	1274322	CallExpression	"reserve_colors_inline ( pfs , c , 3 )"		1274289	1					
ANR	1274323	Callee	reserve_colors_inline		1274289	0					
ANR	1274324	Identifier	reserve_colors_inline		1274289	0					
ANR	1274325	ArgumentList	pfs		1274289	1					
ANR	1274326	Argument	pfs		1274289	0					
ANR	1274327	Identifier	pfs		1274289	0					
ANR	1274328	Argument	c		1274289	1					
ANR	1274329	Identifier	c		1274289	0					
ANR	1274330	Argument	3		1274289	2					
ANR	1274331	PrimaryExpression	3		1274289	0					
ANR	1274332	IfStatement	if ( color_stack_ptr == NULL )		1274289	5					
ANR	1274333	Condition	color_stack_ptr == NULL	3119:7:117297:117319	1274289	0	True				
ANR	1274334	EqualityExpression	color_stack_ptr == NULL		1274289	0		==			
ANR	1274335	Identifier	color_stack_ptr		1274289	0					
ANR	1274336	Identifier	NULL		1274289	1					
ANR	1274337	ExpressionStatement	return_error ( gs_error_unregistered )	3120:8:117330:117365	1274289	1	True				
ANR	1274338	CallExpression	return_error ( gs_error_unregistered )		1274289	0					
ANR	1274339	Callee	return_error		1274289	0					
ANR	1274340	Identifier	return_error		1274289	0					
ANR	1274341	ArgumentList	gs_error_unregistered		1274289	1					
ANR	1274342	Argument	gs_error_unregistered		1274289	0					
ANR	1274343	Identifier	gs_error_unregistered		1274289	0					
ANR	1274344	ExpressionStatement	p0001 . c = c [ 0 ]	3121:4:117394:117408	1274289	6	True				
ANR	1274345	AssignmentExpression	p0001 . c = c [ 0 ]		1274289	0		=			
ANR	1274346	MemberAccess	p0001 . c		1274289	0					
ANR	1274347	Identifier	p0001		1274289	0					
ANR	1274348	Identifier	c		1274289	1					
ANR	1274349	ArrayIndexing	c [ 0 ]		1274289	1					
ANR	1274350	Identifier	c		1274289	0					
ANR	1274351	PrimaryExpression	0		1274289	1					
ANR	1274352	ExpressionStatement	p1011 . c = c [ 1 ]	3122:4:117414:117428	1274289	7	True				
ANR	1274353	AssignmentExpression	p1011 . c = c [ 1 ]		1274289	0		=			
ANR	1274354	MemberAccess	p1011 . c		1274289	0					
ANR	1274355	Identifier	p1011		1274289	0					
ANR	1274356	Identifier	c		1274289	1					
ANR	1274357	ArrayIndexing	c [ 1 ]		1274289	1					
ANR	1274358	Identifier	c		1274289	0					
ANR	1274359	PrimaryExpression	1		1274289	1					
ANR	1274360	ExpressionStatement	q . c = c [ 2 ]	3123:4:117434:117444	1274289	8	True				
ANR	1274361	AssignmentExpression	q . c = c [ 2 ]		1274289	0		=			
ANR	1274362	MemberAccess	q . c		1274289	0					
ANR	1274363	Identifier	q		1274289	0					
ANR	1274364	Identifier	c		1274289	1					
ANR	1274365	ArrayIndexing	c [ 2 ]		1274289	1					
ANR	1274366	Identifier	c		1274289	0					
ANR	1274367	PrimaryExpression	2		1274289	1					
ANR	1274368	ExpressionStatement	"init_wedge_vertex_list ( l , count_of ( l ) )"	3124:4:117450:117488	1274289	9	True				
ANR	1274369	CallExpression	"init_wedge_vertex_list ( l , count_of ( l ) )"		1274289	0					
ANR	1274370	Callee	init_wedge_vertex_list		1274289	0					
ANR	1274371	Identifier	init_wedge_vertex_list		1274289	0					
ANR	1274372	ArgumentList	l		1274289	1					
ANR	1274373	Argument	l		1274289	0					
ANR	1274374	Identifier	l		1274289	0					
ANR	1274375	Argument	count_of ( l )		1274289	1					
ANR	1274376	CallExpression	count_of ( l )		1274289	0					
ANR	1274377	Callee	count_of		1274289	0					
ANR	1274378	Identifier	count_of		1274289	0					
ANR	1274379	ArgumentList	l		1274289	1					
ANR	1274380	Argument	l		1274289	0					
ANR	1274381	Identifier	l		1274289	0					
ANR	1274382	ExpressionStatement	"divide_bar ( pfs , p -> p [ 0 ] [ 0 ] , p -> p [ 0 ] [ 1 ] , 2 , & p0001 , c [ 0 ] )"	3125:4:117494:117550	1274289	10	True				
ANR	1274383	CallExpression	"divide_bar ( pfs , p -> p [ 0 ] [ 0 ] , p -> p [ 0 ] [ 1 ] , 2 , & p0001 , c [ 0 ] )"		1274289	0					
ANR	1274384	Callee	divide_bar		1274289	0					
ANR	1274385	Identifier	divide_bar		1274289	0					
ANR	1274386	ArgumentList	pfs		1274289	1					
ANR	1274387	Argument	pfs		1274289	0					
ANR	1274388	Identifier	pfs		1274289	0					
ANR	1274389	Argument	p -> p [ 0 ] [ 0 ]		1274289	1					
ANR	1274390	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1274289	0					
ANR	1274391	ArrayIndexing	p -> p [ 0 ]		1274289	0					
ANR	1274392	PtrMemberAccess	p -> p		1274289	0					
ANR	1274393	Identifier	p		1274289	0					
ANR	1274394	Identifier	p		1274289	1					
ANR	1274395	PrimaryExpression	0		1274289	1					
ANR	1274396	PrimaryExpression	0		1274289	1					
ANR	1274397	Argument	p -> p [ 0 ] [ 1 ]		1274289	2					
ANR	1274398	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1274289	0					
ANR	1274399	ArrayIndexing	p -> p [ 0 ]		1274289	0					
ANR	1274400	PtrMemberAccess	p -> p		1274289	0					
ANR	1274401	Identifier	p		1274289	0					
ANR	1274402	Identifier	p		1274289	1					
ANR	1274403	PrimaryExpression	0		1274289	1					
ANR	1274404	PrimaryExpression	1		1274289	1					
ANR	1274405	Argument	2		1274289	3					
ANR	1274406	PrimaryExpression	2		1274289	0					
ANR	1274407	Argument	& p0001		1274289	4					
ANR	1274408	UnaryOperationExpression	& p0001		1274289	0					
ANR	1274409	UnaryOperator	&		1274289	0					
ANR	1274410	Identifier	p0001		1274289	1					
ANR	1274411	Argument	c [ 0 ]		1274289	5					
ANR	1274412	ArrayIndexing	c [ 0 ]		1274289	0					
ANR	1274413	Identifier	c		1274289	0					
ANR	1274414	PrimaryExpression	0		1274289	1					
ANR	1274415	ExpressionStatement	"divide_bar ( pfs , p -> p [ 1 ] [ 0 ] , p -> p [ 1 ] [ 1 ] , 2 , & p1011 , c [ 1 ] )"	3126:4:117556:117612	1274289	11	True				
ANR	1274416	CallExpression	"divide_bar ( pfs , p -> p [ 1 ] [ 0 ] , p -> p [ 1 ] [ 1 ] , 2 , & p1011 , c [ 1 ] )"		1274289	0					
ANR	1274417	Callee	divide_bar		1274289	0					
ANR	1274418	Identifier	divide_bar		1274289	0					
ANR	1274419	ArgumentList	pfs		1274289	1					
ANR	1274420	Argument	pfs		1274289	0					
ANR	1274421	Identifier	pfs		1274289	0					
ANR	1274422	Argument	p -> p [ 1 ] [ 0 ]		1274289	1					
ANR	1274423	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1274289	0					
ANR	1274424	ArrayIndexing	p -> p [ 1 ]		1274289	0					
ANR	1274425	PtrMemberAccess	p -> p		1274289	0					
ANR	1274426	Identifier	p		1274289	0					
ANR	1274427	Identifier	p		1274289	1					
ANR	1274428	PrimaryExpression	1		1274289	1					
ANR	1274429	PrimaryExpression	0		1274289	1					
ANR	1274430	Argument	p -> p [ 1 ] [ 1 ]		1274289	2					
ANR	1274431	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1274289	0					
ANR	1274432	ArrayIndexing	p -> p [ 1 ]		1274289	0					
ANR	1274433	PtrMemberAccess	p -> p		1274289	0					
ANR	1274434	Identifier	p		1274289	0					
ANR	1274435	Identifier	p		1274289	1					
ANR	1274436	PrimaryExpression	1		1274289	1					
ANR	1274437	PrimaryExpression	1		1274289	1					
ANR	1274438	Argument	2		1274289	3					
ANR	1274439	PrimaryExpression	2		1274289	0					
ANR	1274440	Argument	& p1011		1274289	4					
ANR	1274441	UnaryOperationExpression	& p1011		1274289	0					
ANR	1274442	UnaryOperator	&		1274289	0					
ANR	1274443	Identifier	p1011		1274289	1					
ANR	1274444	Argument	c [ 1 ]		1274289	5					
ANR	1274445	ArrayIndexing	c [ 1 ]		1274289	0					
ANR	1274446	Identifier	c		1274289	0					
ANR	1274447	PrimaryExpression	1		1274289	1					
ANR	1274448	ExpressionStatement	"divide_bar ( pfs , & p0001 , & p1011 , 2 , & q , c [ 2 ] )"	3127:4:117618:117662	1274289	12	True				
ANR	1274449	CallExpression	"divide_bar ( pfs , & p0001 , & p1011 , 2 , & q , c [ 2 ] )"		1274289	0					
ANR	1274450	Callee	divide_bar		1274289	0					
ANR	1274451	Identifier	divide_bar		1274289	0					
ANR	1274452	ArgumentList	pfs		1274289	1					
ANR	1274453	Argument	pfs		1274289	0					
ANR	1274454	Identifier	pfs		1274289	0					
ANR	1274455	Argument	& p0001		1274289	1					
ANR	1274456	UnaryOperationExpression	& p0001		1274289	0					
ANR	1274457	UnaryOperator	&		1274289	0					
ANR	1274458	Identifier	p0001		1274289	1					
ANR	1274459	Argument	& p1011		1274289	2					
ANR	1274460	UnaryOperationExpression	& p1011		1274289	0					
ANR	1274461	UnaryOperator	&		1274289	0					
ANR	1274462	Identifier	p1011		1274289	1					
ANR	1274463	Argument	2		1274289	3					
ANR	1274464	PrimaryExpression	2		1274289	0					
ANR	1274465	Argument	& q		1274289	4					
ANR	1274466	UnaryOperationExpression	& q		1274289	0					
ANR	1274467	UnaryOperator	&		1274289	0					
ANR	1274468	Identifier	q		1274289	1					
ANR	1274469	Argument	c [ 2 ]		1274289	5					
ANR	1274470	ArrayIndexing	c [ 2 ]		1274289	0					
ANR	1274471	Identifier	c		1274289	0					
ANR	1274472	PrimaryExpression	2		1274289	1					
ANR	1274473	ExpressionStatement	"code = fill_triangle ( pfs , p -> p [ 0 ] [ 0 ] , p -> p [ 0 ] [ 1 ] , & q , p -> l0001 , & l [ 0 ] , & l [ 3 ] )"	3128:4:117668:117745	1274289	13	True				
ANR	1274474	AssignmentExpression	"code = fill_triangle ( pfs , p -> p [ 0 ] [ 0 ] , p -> p [ 0 ] [ 1 ] , & q , p -> l0001 , & l [ 0 ] , & l [ 3 ] )"		1274289	0		=			
ANR	1274475	Identifier	code		1274289	0					
ANR	1274476	CallExpression	"fill_triangle ( pfs , p -> p [ 0 ] [ 0 ] , p -> p [ 0 ] [ 1 ] , & q , p -> l0001 , & l [ 0 ] , & l [ 3 ] )"		1274289	1					
ANR	1274477	Callee	fill_triangle		1274289	0					
ANR	1274478	Identifier	fill_triangle		1274289	0					
ANR	1274479	ArgumentList	pfs		1274289	1					
ANR	1274480	Argument	pfs		1274289	0					
ANR	1274481	Identifier	pfs		1274289	0					
ANR	1274482	Argument	p -> p [ 0 ] [ 0 ]		1274289	1					
ANR	1274483	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1274289	0					
ANR	1274484	ArrayIndexing	p -> p [ 0 ]		1274289	0					
ANR	1274485	PtrMemberAccess	p -> p		1274289	0					
ANR	1274486	Identifier	p		1274289	0					
ANR	1274487	Identifier	p		1274289	1					
ANR	1274488	PrimaryExpression	0		1274289	1					
ANR	1274489	PrimaryExpression	0		1274289	1					
ANR	1274490	Argument	p -> p [ 0 ] [ 1 ]		1274289	2					
ANR	1274491	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1274289	0					
ANR	1274492	ArrayIndexing	p -> p [ 0 ]		1274289	0					
ANR	1274493	PtrMemberAccess	p -> p		1274289	0					
ANR	1274494	Identifier	p		1274289	0					
ANR	1274495	Identifier	p		1274289	1					
ANR	1274496	PrimaryExpression	0		1274289	1					
ANR	1274497	PrimaryExpression	1		1274289	1					
ANR	1274498	Argument	& q		1274289	3					
ANR	1274499	UnaryOperationExpression	& q		1274289	0					
ANR	1274500	UnaryOperator	&		1274289	0					
ANR	1274501	Identifier	q		1274289	1					
ANR	1274502	Argument	p -> l0001		1274289	4					
ANR	1274503	PtrMemberAccess	p -> l0001		1274289	0					
ANR	1274504	Identifier	p		1274289	0					
ANR	1274505	Identifier	l0001		1274289	1					
ANR	1274506	Argument	& l [ 0 ]		1274289	5					
ANR	1274507	UnaryOperationExpression	& l [ 0 ]		1274289	0					
ANR	1274508	UnaryOperator	&		1274289	0					
ANR	1274509	ArrayIndexing	l [ 0 ]		1274289	1					
ANR	1274510	Identifier	l		1274289	0					
ANR	1274511	PrimaryExpression	0		1274289	1					
ANR	1274512	Argument	& l [ 3 ]		1274289	6					
ANR	1274513	UnaryOperationExpression	& l [ 3 ]		1274289	0					
ANR	1274514	UnaryOperator	&		1274289	0					
ANR	1274515	ArrayIndexing	l [ 3 ]		1274289	1					
ANR	1274516	Identifier	l		1274289	0					
ANR	1274517	PrimaryExpression	3		1274289	1					
ANR	1274518	IfStatement	if ( code >= 0 )		1274289	14					
ANR	1274519	Condition	code >= 0	3129:8:117755:117763	1274289	0	True				
ANR	1274520	RelationalExpression	code >= 0		1274289	0		>=			
ANR	1274521	Identifier	code		1274289	0					
ANR	1274522	PrimaryExpression	0		1274289	1					
ANR	1274523	CompoundStatement		18:19:647:647	1274289	1					
ANR	1274524	ExpressionStatement	l [ 0 ] . last_side = true	3130:8:117776:117797	1274289	0	True				
ANR	1274525	AssignmentExpression	l [ 0 ] . last_side = true		1274289	0		=			
ANR	1274526	MemberAccess	l [ 0 ] . last_side		1274289	0					
ANR	1274527	ArrayIndexing	l [ 0 ]		1274289	0					
ANR	1274528	Identifier	l		1274289	0					
ANR	1274529	PrimaryExpression	0		1274289	1					
ANR	1274530	Identifier	last_side		1274289	1					
ANR	1274531	Identifier	true		1274289	1					
ANR	1274532	ExpressionStatement	l [ 3 ] . last_side = true	3131:8:117807:117828	1274289	1	True				
ANR	1274533	AssignmentExpression	l [ 3 ] . last_side = true		1274289	0		=			
ANR	1274534	MemberAccess	l [ 3 ] . last_side		1274289	0					
ANR	1274535	ArrayIndexing	l [ 3 ]		1274289	0					
ANR	1274536	Identifier	l		1274289	0					
ANR	1274537	PrimaryExpression	3		1274289	1					
ANR	1274538	Identifier	last_side		1274289	1					
ANR	1274539	Identifier	true		1274289	1					
ANR	1274540	ExpressionStatement	"code = fill_triangle ( pfs , p -> p [ 0 ] [ 1 ] , p -> p [ 1 ] [ 1 ] , & q , p -> l0111 , & l [ 1 ] , & l [ 0 ] )"	3132:8:117838:117915	1274289	2	True				
ANR	1274541	AssignmentExpression	"code = fill_triangle ( pfs , p -> p [ 0 ] [ 1 ] , p -> p [ 1 ] [ 1 ] , & q , p -> l0111 , & l [ 1 ] , & l [ 0 ] )"		1274289	0		=			
ANR	1274542	Identifier	code		1274289	0					
ANR	1274543	CallExpression	"fill_triangle ( pfs , p -> p [ 0 ] [ 1 ] , p -> p [ 1 ] [ 1 ] , & q , p -> l0111 , & l [ 1 ] , & l [ 0 ] )"		1274289	1					
ANR	1274544	Callee	fill_triangle		1274289	0					
ANR	1274545	Identifier	fill_triangle		1274289	0					
ANR	1274546	ArgumentList	pfs		1274289	1					
ANR	1274547	Argument	pfs		1274289	0					
ANR	1274548	Identifier	pfs		1274289	0					
ANR	1274549	Argument	p -> p [ 0 ] [ 1 ]		1274289	1					
ANR	1274550	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1274289	0					
ANR	1274551	ArrayIndexing	p -> p [ 0 ]		1274289	0					
ANR	1274552	PtrMemberAccess	p -> p		1274289	0					
ANR	1274553	Identifier	p		1274289	0					
ANR	1274554	Identifier	p		1274289	1					
ANR	1274555	PrimaryExpression	0		1274289	1					
ANR	1274556	PrimaryExpression	1		1274289	1					
ANR	1274557	Argument	p -> p [ 1 ] [ 1 ]		1274289	2					
ANR	1274558	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1274289	0					
ANR	1274559	ArrayIndexing	p -> p [ 1 ]		1274289	0					
ANR	1274560	PtrMemberAccess	p -> p		1274289	0					
ANR	1274561	Identifier	p		1274289	0					
ANR	1274562	Identifier	p		1274289	1					
ANR	1274563	PrimaryExpression	1		1274289	1					
ANR	1274564	PrimaryExpression	1		1274289	1					
ANR	1274565	Argument	& q		1274289	3					
ANR	1274566	UnaryOperationExpression	& q		1274289	0					
ANR	1274567	UnaryOperator	&		1274289	0					
ANR	1274568	Identifier	q		1274289	1					
ANR	1274569	Argument	p -> l0111		1274289	4					
ANR	1274570	PtrMemberAccess	p -> l0111		1274289	0					
ANR	1274571	Identifier	p		1274289	0					
ANR	1274572	Identifier	l0111		1274289	1					
ANR	1274573	Argument	& l [ 1 ]		1274289	5					
ANR	1274574	UnaryOperationExpression	& l [ 1 ]		1274289	0					
ANR	1274575	UnaryOperator	&		1274289	0					
ANR	1274576	ArrayIndexing	l [ 1 ]		1274289	1					
ANR	1274577	Identifier	l		1274289	0					
ANR	1274578	PrimaryExpression	1		1274289	1					
ANR	1274579	Argument	& l [ 0 ]		1274289	6					
ANR	1274580	UnaryOperationExpression	& l [ 0 ]		1274289	0					
ANR	1274581	UnaryOperator	&		1274289	0					
ANR	1274582	ArrayIndexing	l [ 0 ]		1274289	1					
ANR	1274583	Identifier	l		1274289	0					
ANR	1274584	PrimaryExpression	0		1274289	1					
ANR	1274585	IfStatement	if ( code >= 0 )		1274289	15					
ANR	1274586	Condition	code >= 0	3134:8:117931:117939	1274289	0	True				
ANR	1274587	RelationalExpression	code >= 0		1274289	0		>=			
ANR	1274588	Identifier	code		1274289	0					
ANR	1274589	PrimaryExpression	0		1274289	1					
ANR	1274590	CompoundStatement		23:19:823:823	1274289	1					
ANR	1274591	ExpressionStatement	l [ 1 ] . last_side = true	3135:8:117952:117973	1274289	0	True				
ANR	1274592	AssignmentExpression	l [ 1 ] . last_side = true		1274289	0		=			
ANR	1274593	MemberAccess	l [ 1 ] . last_side		1274289	0					
ANR	1274594	ArrayIndexing	l [ 1 ]		1274289	0					
ANR	1274595	Identifier	l		1274289	0					
ANR	1274596	PrimaryExpression	1		1274289	1					
ANR	1274597	Identifier	last_side		1274289	1					
ANR	1274598	Identifier	true		1274289	1					
ANR	1274599	ExpressionStatement	"code = fill_triangle ( pfs , p -> p [ 1 ] [ 1 ] , p -> p [ 1 ] [ 0 ] , & q , p -> l1110 , & l [ 2 ] , & l [ 1 ] )"	3136:8:117983:118060	1274289	1	True				
ANR	1274600	AssignmentExpression	"code = fill_triangle ( pfs , p -> p [ 1 ] [ 1 ] , p -> p [ 1 ] [ 0 ] , & q , p -> l1110 , & l [ 2 ] , & l [ 1 ] )"		1274289	0		=			
ANR	1274601	Identifier	code		1274289	0					
ANR	1274602	CallExpression	"fill_triangle ( pfs , p -> p [ 1 ] [ 1 ] , p -> p [ 1 ] [ 0 ] , & q , p -> l1110 , & l [ 2 ] , & l [ 1 ] )"		1274289	1					
ANR	1274603	Callee	fill_triangle		1274289	0					
ANR	1274604	Identifier	fill_triangle		1274289	0					
ANR	1274605	ArgumentList	pfs		1274289	1					
ANR	1274606	Argument	pfs		1274289	0					
ANR	1274607	Identifier	pfs		1274289	0					
ANR	1274608	Argument	p -> p [ 1 ] [ 1 ]		1274289	1					
ANR	1274609	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1274289	0					
ANR	1274610	ArrayIndexing	p -> p [ 1 ]		1274289	0					
ANR	1274611	PtrMemberAccess	p -> p		1274289	0					
ANR	1274612	Identifier	p		1274289	0					
ANR	1274613	Identifier	p		1274289	1					
ANR	1274614	PrimaryExpression	1		1274289	1					
ANR	1274615	PrimaryExpression	1		1274289	1					
ANR	1274616	Argument	p -> p [ 1 ] [ 0 ]		1274289	2					
ANR	1274617	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1274289	0					
ANR	1274618	ArrayIndexing	p -> p [ 1 ]		1274289	0					
ANR	1274619	PtrMemberAccess	p -> p		1274289	0					
ANR	1274620	Identifier	p		1274289	0					
ANR	1274621	Identifier	p		1274289	1					
ANR	1274622	PrimaryExpression	1		1274289	1					
ANR	1274623	PrimaryExpression	0		1274289	1					
ANR	1274624	Argument	& q		1274289	3					
ANR	1274625	UnaryOperationExpression	& q		1274289	0					
ANR	1274626	UnaryOperator	&		1274289	0					
ANR	1274627	Identifier	q		1274289	1					
ANR	1274628	Argument	p -> l1110		1274289	4					
ANR	1274629	PtrMemberAccess	p -> l1110		1274289	0					
ANR	1274630	Identifier	p		1274289	0					
ANR	1274631	Identifier	l1110		1274289	1					
ANR	1274632	Argument	& l [ 2 ]		1274289	5					
ANR	1274633	UnaryOperationExpression	& l [ 2 ]		1274289	0					
ANR	1274634	UnaryOperator	&		1274289	0					
ANR	1274635	ArrayIndexing	l [ 2 ]		1274289	1					
ANR	1274636	Identifier	l		1274289	0					
ANR	1274637	PrimaryExpression	2		1274289	1					
ANR	1274638	Argument	& l [ 1 ]		1274289	6					
ANR	1274639	UnaryOperationExpression	& l [ 1 ]		1274289	0					
ANR	1274640	UnaryOperator	&		1274289	0					
ANR	1274641	ArrayIndexing	l [ 1 ]		1274289	1					
ANR	1274642	Identifier	l		1274289	0					
ANR	1274643	PrimaryExpression	1		1274289	1					
ANR	1274644	IfStatement	if ( code >= 0 )		1274289	16					
ANR	1274645	Condition	code >= 0	3138:8:118076:118084	1274289	0	True				
ANR	1274646	RelationalExpression	code >= 0		1274289	0		>=			
ANR	1274647	Identifier	code		1274289	0					
ANR	1274648	PrimaryExpression	0		1274289	1					
ANR	1274649	CompoundStatement		27:19:968:968	1274289	1					
ANR	1274650	ExpressionStatement	l [ 2 ] . last_side = true	3139:8:118097:118118	1274289	0	True				
ANR	1274651	AssignmentExpression	l [ 2 ] . last_side = true		1274289	0		=			
ANR	1274652	MemberAccess	l [ 2 ] . last_side		1274289	0					
ANR	1274653	ArrayIndexing	l [ 2 ]		1274289	0					
ANR	1274654	Identifier	l		1274289	0					
ANR	1274655	PrimaryExpression	2		1274289	1					
ANR	1274656	Identifier	last_side		1274289	1					
ANR	1274657	Identifier	true		1274289	1					
ANR	1274658	ExpressionStatement	"code = fill_triangle ( pfs , p -> p [ 1 ] [ 0 ] , p -> p [ 0 ] [ 0 ] , & q , p -> l1000 , & l [ 3 ] , & l [ 2 ] )"	3140:8:118128:118205	1274289	1	True				
ANR	1274659	AssignmentExpression	"code = fill_triangle ( pfs , p -> p [ 1 ] [ 0 ] , p -> p [ 0 ] [ 0 ] , & q , p -> l1000 , & l [ 3 ] , & l [ 2 ] )"		1274289	0		=			
ANR	1274660	Identifier	code		1274289	0					
ANR	1274661	CallExpression	"fill_triangle ( pfs , p -> p [ 1 ] [ 0 ] , p -> p [ 0 ] [ 0 ] , & q , p -> l1000 , & l [ 3 ] , & l [ 2 ] )"		1274289	1					
ANR	1274662	Callee	fill_triangle		1274289	0					
ANR	1274663	Identifier	fill_triangle		1274289	0					
ANR	1274664	ArgumentList	pfs		1274289	1					
ANR	1274665	Argument	pfs		1274289	0					
ANR	1274666	Identifier	pfs		1274289	0					
ANR	1274667	Argument	p -> p [ 1 ] [ 0 ]		1274289	1					
ANR	1274668	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1274289	0					
ANR	1274669	ArrayIndexing	p -> p [ 1 ]		1274289	0					
ANR	1274670	PtrMemberAccess	p -> p		1274289	0					
ANR	1274671	Identifier	p		1274289	0					
ANR	1274672	Identifier	p		1274289	1					
ANR	1274673	PrimaryExpression	1		1274289	1					
ANR	1274674	PrimaryExpression	0		1274289	1					
ANR	1274675	Argument	p -> p [ 0 ] [ 0 ]		1274289	2					
ANR	1274676	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1274289	0					
ANR	1274677	ArrayIndexing	p -> p [ 0 ]		1274289	0					
ANR	1274678	PtrMemberAccess	p -> p		1274289	0					
ANR	1274679	Identifier	p		1274289	0					
ANR	1274680	Identifier	p		1274289	1					
ANR	1274681	PrimaryExpression	0		1274289	1					
ANR	1274682	PrimaryExpression	0		1274289	1					
ANR	1274683	Argument	& q		1274289	3					
ANR	1274684	UnaryOperationExpression	& q		1274289	0					
ANR	1274685	UnaryOperator	&		1274289	0					
ANR	1274686	Identifier	q		1274289	1					
ANR	1274687	Argument	p -> l1000		1274289	4					
ANR	1274688	PtrMemberAccess	p -> l1000		1274289	0					
ANR	1274689	Identifier	p		1274289	0					
ANR	1274690	Identifier	l1000		1274289	1					
ANR	1274691	Argument	& l [ 3 ]		1274289	5					
ANR	1274692	UnaryOperationExpression	& l [ 3 ]		1274289	0					
ANR	1274693	UnaryOperator	&		1274289	0					
ANR	1274694	ArrayIndexing	l [ 3 ]		1274289	1					
ANR	1274695	Identifier	l		1274289	0					
ANR	1274696	PrimaryExpression	3		1274289	1					
ANR	1274697	Argument	& l [ 2 ]		1274289	6					
ANR	1274698	UnaryOperationExpression	& l [ 2 ]		1274289	0					
ANR	1274699	UnaryOperator	&		1274289	0					
ANR	1274700	ArrayIndexing	l [ 2 ]		1274289	1					
ANR	1274701	Identifier	l		1274289	0					
ANR	1274702	PrimaryExpression	2		1274289	1					
ANR	1274703	IfStatement	if ( code >= 0 )		1274289	17					
ANR	1274704	Condition	code >= 0	3142:8:118221:118229	1274289	0	True				
ANR	1274705	RelationalExpression	code >= 0		1274289	0		>=			
ANR	1274706	Identifier	code		1274289	0					
ANR	1274707	PrimaryExpression	0		1274289	1					
ANR	1274708	ExpressionStatement	"code = terminate_wedge_vertex_list ( pfs , & l [ 0 ] , p -> p [ 0 ] [ 1 ] -> c , q . c )"	3143:8:118240:118306	1274289	1	True				
ANR	1274709	AssignmentExpression	"code = terminate_wedge_vertex_list ( pfs , & l [ 0 ] , p -> p [ 0 ] [ 1 ] -> c , q . c )"		1274289	0		=			
ANR	1274710	Identifier	code		1274289	0					
ANR	1274711	CallExpression	"terminate_wedge_vertex_list ( pfs , & l [ 0 ] , p -> p [ 0 ] [ 1 ] -> c , q . c )"		1274289	1					
ANR	1274712	Callee	terminate_wedge_vertex_list		1274289	0					
ANR	1274713	Identifier	terminate_wedge_vertex_list		1274289	0					
ANR	1274714	ArgumentList	pfs		1274289	1					
ANR	1274715	Argument	pfs		1274289	0					
ANR	1274716	Identifier	pfs		1274289	0					
ANR	1274717	Argument	& l [ 0 ]		1274289	1					
ANR	1274718	UnaryOperationExpression	& l [ 0 ]		1274289	0					
ANR	1274719	UnaryOperator	&		1274289	0					
ANR	1274720	ArrayIndexing	l [ 0 ]		1274289	1					
ANR	1274721	Identifier	l		1274289	0					
ANR	1274722	PrimaryExpression	0		1274289	1					
ANR	1274723	Argument	p -> p [ 0 ] [ 1 ] -> c		1274289	2					
ANR	1274724	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> c		1274289	0					
ANR	1274725	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1274289	0					
ANR	1274726	ArrayIndexing	p -> p [ 0 ]		1274289	0					
ANR	1274727	PtrMemberAccess	p -> p		1274289	0					
ANR	1274728	Identifier	p		1274289	0					
ANR	1274729	Identifier	p		1274289	1					
ANR	1274730	PrimaryExpression	0		1274289	1					
ANR	1274731	PrimaryExpression	1		1274289	1					
ANR	1274732	Identifier	c		1274289	1					
ANR	1274733	Argument	q . c		1274289	3					
ANR	1274734	MemberAccess	q . c		1274289	0					
ANR	1274735	Identifier	q		1274289	0					
ANR	1274736	Identifier	c		1274289	1					
ANR	1274737	IfStatement	if ( code >= 0 )		1274289	18					
ANR	1274738	Condition	code >= 0	3144:8:118316:118324	1274289	0	True				
ANR	1274739	RelationalExpression	code >= 0		1274289	0		>=			
ANR	1274740	Identifier	code		1274289	0					
ANR	1274741	PrimaryExpression	0		1274289	1					
ANR	1274742	ExpressionStatement	"code = terminate_wedge_vertex_list ( pfs , & l [ 1 ] , p -> p [ 1 ] [ 1 ] -> c , q . c )"	3145:8:118335:118401	1274289	1	True				
ANR	1274743	AssignmentExpression	"code = terminate_wedge_vertex_list ( pfs , & l [ 1 ] , p -> p [ 1 ] [ 1 ] -> c , q . c )"		1274289	0		=			
ANR	1274744	Identifier	code		1274289	0					
ANR	1274745	CallExpression	"terminate_wedge_vertex_list ( pfs , & l [ 1 ] , p -> p [ 1 ] [ 1 ] -> c , q . c )"		1274289	1					
ANR	1274746	Callee	terminate_wedge_vertex_list		1274289	0					
ANR	1274747	Identifier	terminate_wedge_vertex_list		1274289	0					
ANR	1274748	ArgumentList	pfs		1274289	1					
ANR	1274749	Argument	pfs		1274289	0					
ANR	1274750	Identifier	pfs		1274289	0					
ANR	1274751	Argument	& l [ 1 ]		1274289	1					
ANR	1274752	UnaryOperationExpression	& l [ 1 ]		1274289	0					
ANR	1274753	UnaryOperator	&		1274289	0					
ANR	1274754	ArrayIndexing	l [ 1 ]		1274289	1					
ANR	1274755	Identifier	l		1274289	0					
ANR	1274756	PrimaryExpression	1		1274289	1					
ANR	1274757	Argument	p -> p [ 1 ] [ 1 ] -> c		1274289	2					
ANR	1274758	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> c		1274289	0					
ANR	1274759	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1274289	0					
ANR	1274760	ArrayIndexing	p -> p [ 1 ]		1274289	0					
ANR	1274761	PtrMemberAccess	p -> p		1274289	0					
ANR	1274762	Identifier	p		1274289	0					
ANR	1274763	Identifier	p		1274289	1					
ANR	1274764	PrimaryExpression	1		1274289	1					
ANR	1274765	PrimaryExpression	1		1274289	1					
ANR	1274766	Identifier	c		1274289	1					
ANR	1274767	Argument	q . c		1274289	3					
ANR	1274768	MemberAccess	q . c		1274289	0					
ANR	1274769	Identifier	q		1274289	0					
ANR	1274770	Identifier	c		1274289	1					
ANR	1274771	IfStatement	if ( code >= 0 )		1274289	19					
ANR	1274772	Condition	code >= 0	3146:8:118411:118419	1274289	0	True				
ANR	1274773	RelationalExpression	code >= 0		1274289	0		>=			
ANR	1274774	Identifier	code		1274289	0					
ANR	1274775	PrimaryExpression	0		1274289	1					
ANR	1274776	ExpressionStatement	"code = terminate_wedge_vertex_list ( pfs , & l [ 2 ] , p -> p [ 1 ] [ 0 ] -> c , q . c )"	3147:8:118430:118496	1274289	1	True				
ANR	1274777	AssignmentExpression	"code = terminate_wedge_vertex_list ( pfs , & l [ 2 ] , p -> p [ 1 ] [ 0 ] -> c , q . c )"		1274289	0		=			
ANR	1274778	Identifier	code		1274289	0					
ANR	1274779	CallExpression	"terminate_wedge_vertex_list ( pfs , & l [ 2 ] , p -> p [ 1 ] [ 0 ] -> c , q . c )"		1274289	1					
ANR	1274780	Callee	terminate_wedge_vertex_list		1274289	0					
ANR	1274781	Identifier	terminate_wedge_vertex_list		1274289	0					
ANR	1274782	ArgumentList	pfs		1274289	1					
ANR	1274783	Argument	pfs		1274289	0					
ANR	1274784	Identifier	pfs		1274289	0					
ANR	1274785	Argument	& l [ 2 ]		1274289	1					
ANR	1274786	UnaryOperationExpression	& l [ 2 ]		1274289	0					
ANR	1274787	UnaryOperator	&		1274289	0					
ANR	1274788	ArrayIndexing	l [ 2 ]		1274289	1					
ANR	1274789	Identifier	l		1274289	0					
ANR	1274790	PrimaryExpression	2		1274289	1					
ANR	1274791	Argument	p -> p [ 1 ] [ 0 ] -> c		1274289	2					
ANR	1274792	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> c		1274289	0					
ANR	1274793	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1274289	0					
ANR	1274794	ArrayIndexing	p -> p [ 1 ]		1274289	0					
ANR	1274795	PtrMemberAccess	p -> p		1274289	0					
ANR	1274796	Identifier	p		1274289	0					
ANR	1274797	Identifier	p		1274289	1					
ANR	1274798	PrimaryExpression	1		1274289	1					
ANR	1274799	PrimaryExpression	0		1274289	1					
ANR	1274800	Identifier	c		1274289	1					
ANR	1274801	Argument	q . c		1274289	3					
ANR	1274802	MemberAccess	q . c		1274289	0					
ANR	1274803	Identifier	q		1274289	0					
ANR	1274804	Identifier	c		1274289	1					
ANR	1274805	IfStatement	if ( code >= 0 )		1274289	20					
ANR	1274806	Condition	code >= 0	3148:8:118506:118514	1274289	0	True				
ANR	1274807	RelationalExpression	code >= 0		1274289	0		>=			
ANR	1274808	Identifier	code		1274289	0					
ANR	1274809	PrimaryExpression	0		1274289	1					
ANR	1274810	ExpressionStatement	"code = terminate_wedge_vertex_list ( pfs , & l [ 3 ] , q . c , p -> p [ 0 ] [ 0 ] -> c )"	3149:8:118525:118591	1274289	1	True				
ANR	1274811	AssignmentExpression	"code = terminate_wedge_vertex_list ( pfs , & l [ 3 ] , q . c , p -> p [ 0 ] [ 0 ] -> c )"		1274289	0		=			
ANR	1274812	Identifier	code		1274289	0					
ANR	1274813	CallExpression	"terminate_wedge_vertex_list ( pfs , & l [ 3 ] , q . c , p -> p [ 0 ] [ 0 ] -> c )"		1274289	1					
ANR	1274814	Callee	terminate_wedge_vertex_list		1274289	0					
ANR	1274815	Identifier	terminate_wedge_vertex_list		1274289	0					
ANR	1274816	ArgumentList	pfs		1274289	1					
ANR	1274817	Argument	pfs		1274289	0					
ANR	1274818	Identifier	pfs		1274289	0					
ANR	1274819	Argument	& l [ 3 ]		1274289	1					
ANR	1274820	UnaryOperationExpression	& l [ 3 ]		1274289	0					
ANR	1274821	UnaryOperator	&		1274289	0					
ANR	1274822	ArrayIndexing	l [ 3 ]		1274289	1					
ANR	1274823	Identifier	l		1274289	0					
ANR	1274824	PrimaryExpression	3		1274289	1					
ANR	1274825	Argument	q . c		1274289	2					
ANR	1274826	MemberAccess	q . c		1274289	0					
ANR	1274827	Identifier	q		1274289	0					
ANR	1274828	Identifier	c		1274289	1					
ANR	1274829	Argument	p -> p [ 0 ] [ 0 ] -> c		1274289	3					
ANR	1274830	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> c		1274289	0					
ANR	1274831	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1274289	0					
ANR	1274832	ArrayIndexing	p -> p [ 0 ]		1274289	0					
ANR	1274833	PtrMemberAccess	p -> p		1274289	0					
ANR	1274834	Identifier	p		1274289	0					
ANR	1274835	Identifier	p		1274289	1					
ANR	1274836	PrimaryExpression	0		1274289	1					
ANR	1274837	PrimaryExpression	0		1274289	1					
ANR	1274838	Identifier	c		1274289	1					
ANR	1274839	ExpressionStatement	"release_colors_inline ( pfs , color_stack_ptr , 3 )"	3150:4:118597:118643	1274289	21	True				
ANR	1274840	CallExpression	"release_colors_inline ( pfs , color_stack_ptr , 3 )"		1274289	0					
ANR	1274841	Callee	release_colors_inline		1274289	0					
ANR	1274842	Identifier	release_colors_inline		1274289	0					
ANR	1274843	ArgumentList	pfs		1274289	1					
ANR	1274844	Argument	pfs		1274289	0					
ANR	1274845	Identifier	pfs		1274289	0					
ANR	1274846	Argument	color_stack_ptr		1274289	1					
ANR	1274847	Identifier	color_stack_ptr		1274289	0					
ANR	1274848	Argument	3		1274289	2					
ANR	1274849	PrimaryExpression	3		1274289	0					
ANR	1274850	ReturnStatement	return code ;	3151:4:118649:118660	1274289	22	True				
ANR	1274851	Identifier	code		1274289	0					
ANR	1274852	ReturnType	static inline int		1274289	1					
ANR	1274853	Identifier	triangles4		1274289	2					
ANR	1274854	ParameterList	"patch_fill_state_t * pfs , const quadrangle_patch * p , bool dummy_argument"		1274289	3					
ANR	1274855	Parameter	patch_fill_state_t * pfs	3111:11:117045:117067	1274289	0	True				
ANR	1274856	ParameterType	patch_fill_state_t *		1274289	0					
ANR	1274857	Identifier	pfs		1274289	1					
ANR	1274858	Parameter	const quadrangle_patch * p	3111:36:117070:117094	1274289	1	True				
ANR	1274859	ParameterType	const quadrangle_patch *		1274289	0					
ANR	1274860	Identifier	p		1274289	1					
ANR	1274861	Parameter	bool dummy_argument	3111:63:117097:117115	1274289	2	True				
ANR	1274862	ParameterType	bool		1274289	0					
ANR	1274863	Identifier	dummy_argument		1274289	1					
ANR	1274864	CFGEntryNode	ENTRY		1274289		True				
ANR	1274865	CFGExitNode	EXIT		1274289		True				
ANR	1274866	Symbol	gs_error_unregistered		1274289						
ANR	1274867	Symbol	code		1274289						
ANR	1274868	Symbol	p -> l0001		1274289						
ANR	1274869	Symbol	q . c		1274289						
ANR	1274870	Symbol	p -> p		1274289						
ANR	1274871	Symbol	p -> l1110		1274289						
ANR	1274872	Symbol	* * * * p		1274289						
ANR	1274873	Symbol	* p -> p		1274289						
ANR	1274874	Symbol	l [ 1 ] . last_side		1274289						
ANR	1274875	Symbol	p1011 . c		1274289						
ANR	1274876	Symbol	count_of		1274289						
ANR	1274877	Symbol	* * * p -> p		1274289						
ANR	1274878	Symbol	dummy_argument		1274289						
ANR	1274879	Symbol	reserve_colors_inline		1274289						
ANR	1274880	Symbol	* * p -> p		1274289						
ANR	1274881	Symbol	p -> p [ 0 ] [ 0 ] -> c		1274289						
ANR	1274882	Symbol	* * p		1274289						
ANR	1274883	Symbol	p -> p [ 1 ] [ 1 ] -> c		1274289						
ANR	1274884	Symbol	p -> p [ 1 ] [ 0 ] -> c		1274289						
ANR	1274885	Symbol	p -> p [ 0 ] [ 1 ] -> c		1274289						
ANR	1274886	Symbol	c		1274289						
ANR	1274887	Symbol	NULL		1274289						
ANR	1274888	Symbol	p -> l0111		1274289						
ANR	1274889	Symbol	p -> l1000		1274289						
ANR	1274890	Symbol	l [ 2 ] . last_side		1274289						
ANR	1274891	Symbol	terminate_wedge_vertex_list		1274289						
ANR	1274892	Symbol	l		1274289						
ANR	1274893	Symbol	* c		1274289						
ANR	1274894	Symbol	p1011		1274289						
ANR	1274895	Symbol	l [ 0 ] . last_side		1274289						
ANR	1274896	Symbol	p		1274289						
ANR	1274897	Symbol	q		1274289						
ANR	1274898	Symbol	p0001		1274289						
ANR	1274899	Symbol	* * * p		1274289						
ANR	1274900	Symbol	color_stack_ptr		1274289						
ANR	1274901	Symbol	* l		1274289						
ANR	1274902	Symbol	& q		1274289						
ANR	1274903	Symbol	fill_triangle		1274289						
ANR	1274904	Symbol	true		1274289						
ANR	1274905	Symbol	* p		1274289						
ANR	1274906	Symbol	l [ 3 ] . last_side		1274289						
ANR	1274907	Symbol	pfs		1274289						
ANR	1274908	Symbol	p0001 . c		1274289						
ANR	1274909	Symbol	& p1011		1274289						
ANR	1274910	Symbol	& p0001		1274289						
ANR	1274911	Function	triangles2	3154:0:118665:119262							
ANR	1274912	FunctionDef	"triangles2 (patch_fill_state_t * pfs , const quadrangle_patch * p , bool dummy_argument)"		1274911	0					
ANR	1274913	CompoundStatement		3156:0:118767:119262	1274911	0					
ANR	1274914	IdentifierDeclStatement	wedge_vertex_list_t l ;	3157:4:118773:118794	1274911	0	True				
ANR	1274915	IdentifierDecl	l		1274911	0					
ANR	1274916	IdentifierDeclType	wedge_vertex_list_t		1274911	0					
ANR	1274917	Identifier	l		1274911	1					
ANR	1274918	IdentifierDeclStatement	int code ;	3158:4:118800:118808	1274911	1	True				
ANR	1274919	IdentifierDecl	code		1274911	0					
ANR	1274920	IdentifierDeclType	int		1274911	0					
ANR	1274921	Identifier	code		1274911	1					
ANR	1274922	ExpressionStatement	"init_wedge_vertex_list ( & l , 1 )"	3160:4:118815:118844	1274911	2	True				
ANR	1274923	CallExpression	"init_wedge_vertex_list ( & l , 1 )"		1274911	0					
ANR	1274924	Callee	init_wedge_vertex_list		1274911	0					
ANR	1274925	Identifier	init_wedge_vertex_list		1274911	0					
ANR	1274926	ArgumentList	& l		1274911	1					
ANR	1274927	Argument	& l		1274911	0					
ANR	1274928	UnaryOperationExpression	& l		1274911	0					
ANR	1274929	UnaryOperator	&		1274911	0					
ANR	1274930	Identifier	l		1274911	1					
ANR	1274931	Argument	1		1274911	1					
ANR	1274932	PrimaryExpression	1		1274911	0					
ANR	1274933	ExpressionStatement	"code = fill_triangle ( pfs , p -> p [ 0 ] [ 0 ] , p -> p [ 0 ] [ 1 ] , p -> p [ 1 ] [ 1 ] , p -> l0001 , p -> l0111 , & l )"	3161:4:118850:118935	1274911	3	True				
ANR	1274934	AssignmentExpression	"code = fill_triangle ( pfs , p -> p [ 0 ] [ 0 ] , p -> p [ 0 ] [ 1 ] , p -> p [ 1 ] [ 1 ] , p -> l0001 , p -> l0111 , & l )"		1274911	0		=			
ANR	1274935	Identifier	code		1274911	0					
ANR	1274936	CallExpression	"fill_triangle ( pfs , p -> p [ 0 ] [ 0 ] , p -> p [ 0 ] [ 1 ] , p -> p [ 1 ] [ 1 ] , p -> l0001 , p -> l0111 , & l )"		1274911	1					
ANR	1274937	Callee	fill_triangle		1274911	0					
ANR	1274938	Identifier	fill_triangle		1274911	0					
ANR	1274939	ArgumentList	pfs		1274911	1					
ANR	1274940	Argument	pfs		1274911	0					
ANR	1274941	Identifier	pfs		1274911	0					
ANR	1274942	Argument	p -> p [ 0 ] [ 0 ]		1274911	1					
ANR	1274943	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1274911	0					
ANR	1274944	ArrayIndexing	p -> p [ 0 ]		1274911	0					
ANR	1274945	PtrMemberAccess	p -> p		1274911	0					
ANR	1274946	Identifier	p		1274911	0					
ANR	1274947	Identifier	p		1274911	1					
ANR	1274948	PrimaryExpression	0		1274911	1					
ANR	1274949	PrimaryExpression	0		1274911	1					
ANR	1274950	Argument	p -> p [ 0 ] [ 1 ]		1274911	2					
ANR	1274951	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1274911	0					
ANR	1274952	ArrayIndexing	p -> p [ 0 ]		1274911	0					
ANR	1274953	PtrMemberAccess	p -> p		1274911	0					
ANR	1274954	Identifier	p		1274911	0					
ANR	1274955	Identifier	p		1274911	1					
ANR	1274956	PrimaryExpression	0		1274911	1					
ANR	1274957	PrimaryExpression	1		1274911	1					
ANR	1274958	Argument	p -> p [ 1 ] [ 1 ]		1274911	3					
ANR	1274959	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1274911	0					
ANR	1274960	ArrayIndexing	p -> p [ 1 ]		1274911	0					
ANR	1274961	PtrMemberAccess	p -> p		1274911	0					
ANR	1274962	Identifier	p		1274911	0					
ANR	1274963	Identifier	p		1274911	1					
ANR	1274964	PrimaryExpression	1		1274911	1					
ANR	1274965	PrimaryExpression	1		1274911	1					
ANR	1274966	Argument	p -> l0001		1274911	4					
ANR	1274967	PtrMemberAccess	p -> l0001		1274911	0					
ANR	1274968	Identifier	p		1274911	0					
ANR	1274969	Identifier	l0001		1274911	1					
ANR	1274970	Argument	p -> l0111		1274911	5					
ANR	1274971	PtrMemberAccess	p -> l0111		1274911	0					
ANR	1274972	Identifier	p		1274911	0					
ANR	1274973	Identifier	l0111		1274911	1					
ANR	1274974	Argument	& l		1274911	6					
ANR	1274975	UnaryOperationExpression	& l		1274911	0					
ANR	1274976	UnaryOperator	&		1274911	0					
ANR	1274977	Identifier	l		1274911	1					
ANR	1274978	IfStatement	if ( code < 0 )		1274911	4					
ANR	1274979	Condition	code < 0	3162:8:118945:118952	1274911	0	True				
ANR	1274980	RelationalExpression	code < 0		1274911	0		<			
ANR	1274981	Identifier	code		1274911	0					
ANR	1274982	PrimaryExpression	0		1274911	1					
ANR	1274983	ReturnStatement	return code ;	3163:8:118963:118974	1274911	1	True				
ANR	1274984	Identifier	code		1274911	0					
ANR	1274985	ExpressionStatement	l . last_side = true	3164:4:118980:118998	1274911	5	True				
ANR	1274986	AssignmentExpression	l . last_side = true		1274911	0		=			
ANR	1274987	MemberAccess	l . last_side		1274911	0					
ANR	1274988	Identifier	l		1274911	0					
ANR	1274989	Identifier	last_side		1274911	1					
ANR	1274990	Identifier	true		1274911	1					
ANR	1274991	ExpressionStatement	"code = fill_triangle ( pfs , p -> p [ 1 ] [ 1 ] , p -> p [ 1 ] [ 0 ] , p -> p [ 0 ] [ 0 ] , p -> l1110 , p -> l1000 , & l )"	3165:4:119004:119089	1274911	6	True				
ANR	1274992	AssignmentExpression	"code = fill_triangle ( pfs , p -> p [ 1 ] [ 1 ] , p -> p [ 1 ] [ 0 ] , p -> p [ 0 ] [ 0 ] , p -> l1110 , p -> l1000 , & l )"		1274911	0		=			
ANR	1274993	Identifier	code		1274911	0					
ANR	1274994	CallExpression	"fill_triangle ( pfs , p -> p [ 1 ] [ 1 ] , p -> p [ 1 ] [ 0 ] , p -> p [ 0 ] [ 0 ] , p -> l1110 , p -> l1000 , & l )"		1274911	1					
ANR	1274995	Callee	fill_triangle		1274911	0					
ANR	1274996	Identifier	fill_triangle		1274911	0					
ANR	1274997	ArgumentList	pfs		1274911	1					
ANR	1274998	Argument	pfs		1274911	0					
ANR	1274999	Identifier	pfs		1274911	0					
ANR	1275000	Argument	p -> p [ 1 ] [ 1 ]		1274911	1					
ANR	1275001	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1274911	0					
ANR	1275002	ArrayIndexing	p -> p [ 1 ]		1274911	0					
ANR	1275003	PtrMemberAccess	p -> p		1274911	0					
ANR	1275004	Identifier	p		1274911	0					
ANR	1275005	Identifier	p		1274911	1					
ANR	1275006	PrimaryExpression	1		1274911	1					
ANR	1275007	PrimaryExpression	1		1274911	1					
ANR	1275008	Argument	p -> p [ 1 ] [ 0 ]		1274911	2					
ANR	1275009	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1274911	0					
ANR	1275010	ArrayIndexing	p -> p [ 1 ]		1274911	0					
ANR	1275011	PtrMemberAccess	p -> p		1274911	0					
ANR	1275012	Identifier	p		1274911	0					
ANR	1275013	Identifier	p		1274911	1					
ANR	1275014	PrimaryExpression	1		1274911	1					
ANR	1275015	PrimaryExpression	0		1274911	1					
ANR	1275016	Argument	p -> p [ 0 ] [ 0 ]		1274911	3					
ANR	1275017	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1274911	0					
ANR	1275018	ArrayIndexing	p -> p [ 0 ]		1274911	0					
ANR	1275019	PtrMemberAccess	p -> p		1274911	0					
ANR	1275020	Identifier	p		1274911	0					
ANR	1275021	Identifier	p		1274911	1					
ANR	1275022	PrimaryExpression	0		1274911	1					
ANR	1275023	PrimaryExpression	0		1274911	1					
ANR	1275024	Argument	p -> l1110		1274911	4					
ANR	1275025	PtrMemberAccess	p -> l1110		1274911	0					
ANR	1275026	Identifier	p		1274911	0					
ANR	1275027	Identifier	l1110		1274911	1					
ANR	1275028	Argument	p -> l1000		1274911	5					
ANR	1275029	PtrMemberAccess	p -> l1000		1274911	0					
ANR	1275030	Identifier	p		1274911	0					
ANR	1275031	Identifier	l1000		1274911	1					
ANR	1275032	Argument	& l		1274911	6					
ANR	1275033	UnaryOperationExpression	& l		1274911	0					
ANR	1275034	UnaryOperator	&		1274911	0					
ANR	1275035	Identifier	l		1274911	1					
ANR	1275036	IfStatement	if ( code < 0 )		1274911	7					
ANR	1275037	Condition	code < 0	3166:8:119099:119106	1274911	0	True				
ANR	1275038	RelationalExpression	code < 0		1274911	0		<			
ANR	1275039	Identifier	code		1274911	0					
ANR	1275040	PrimaryExpression	0		1274911	1					
ANR	1275041	ReturnStatement	return code ;	3167:8:119117:119128	1274911	1	True				
ANR	1275042	Identifier	code		1274911	0					
ANR	1275043	ExpressionStatement	"code = terminate_wedge_vertex_list ( pfs , & l , p -> p [ 1 ] [ 1 ] -> c , p -> p [ 0 ] [ 0 ] -> c )"	3168:4:119134:119207	1274911	8	True				
ANR	1275044	AssignmentExpression	"code = terminate_wedge_vertex_list ( pfs , & l , p -> p [ 1 ] [ 1 ] -> c , p -> p [ 0 ] [ 0 ] -> c )"		1274911	0		=			
ANR	1275045	Identifier	code		1274911	0					
ANR	1275046	CallExpression	"terminate_wedge_vertex_list ( pfs , & l , p -> p [ 1 ] [ 1 ] -> c , p -> p [ 0 ] [ 0 ] -> c )"		1274911	1					
ANR	1275047	Callee	terminate_wedge_vertex_list		1274911	0					
ANR	1275048	Identifier	terminate_wedge_vertex_list		1274911	0					
ANR	1275049	ArgumentList	pfs		1274911	1					
ANR	1275050	Argument	pfs		1274911	0					
ANR	1275051	Identifier	pfs		1274911	0					
ANR	1275052	Argument	& l		1274911	1					
ANR	1275053	UnaryOperationExpression	& l		1274911	0					
ANR	1275054	UnaryOperator	&		1274911	0					
ANR	1275055	Identifier	l		1274911	1					
ANR	1275056	Argument	p -> p [ 1 ] [ 1 ] -> c		1274911	2					
ANR	1275057	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> c		1274911	0					
ANR	1275058	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1274911	0					
ANR	1275059	ArrayIndexing	p -> p [ 1 ]		1274911	0					
ANR	1275060	PtrMemberAccess	p -> p		1274911	0					
ANR	1275061	Identifier	p		1274911	0					
ANR	1275062	Identifier	p		1274911	1					
ANR	1275063	PrimaryExpression	1		1274911	1					
ANR	1275064	PrimaryExpression	1		1274911	1					
ANR	1275065	Identifier	c		1274911	1					
ANR	1275066	Argument	p -> p [ 0 ] [ 0 ] -> c		1274911	3					
ANR	1275067	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> c		1274911	0					
ANR	1275068	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1274911	0					
ANR	1275069	ArrayIndexing	p -> p [ 0 ]		1274911	0					
ANR	1275070	PtrMemberAccess	p -> p		1274911	0					
ANR	1275071	Identifier	p		1274911	0					
ANR	1275072	Identifier	p		1274911	1					
ANR	1275073	PrimaryExpression	0		1274911	1					
ANR	1275074	PrimaryExpression	0		1274911	1					
ANR	1275075	Identifier	c		1274911	1					
ANR	1275076	IfStatement	if ( code < 0 )		1274911	9					
ANR	1275077	Condition	code < 0	3169:8:119217:119224	1274911	0	True				
ANR	1275078	RelationalExpression	code < 0		1274911	0		<			
ANR	1275079	Identifier	code		1274911	0					
ANR	1275080	PrimaryExpression	0		1274911	1					
ANR	1275081	ReturnStatement	return code ;	3170:8:119235:119246	1274911	1	True				
ANR	1275082	Identifier	code		1274911	0					
ANR	1275083	ReturnStatement	return 0 ;	3171:4:119252:119260	1274911	10	True				
ANR	1275084	PrimaryExpression	0		1274911	0					
ANR	1275085	ReturnType	static inline int		1274911	1					
ANR	1275086	Identifier	triangles2		1274911	2					
ANR	1275087	ParameterList	"patch_fill_state_t * pfs , const quadrangle_patch * p , bool dummy_argument"		1274911	3					
ANR	1275088	Parameter	patch_fill_state_t * pfs	3155:11:118694:118716	1274911	0	True				
ANR	1275089	ParameterType	patch_fill_state_t *		1274911	0					
ANR	1275090	Identifier	pfs		1274911	1					
ANR	1275091	Parameter	const quadrangle_patch * p	3155:36:118719:118743	1274911	1	True				
ANR	1275092	ParameterType	const quadrangle_patch *		1274911	0					
ANR	1275093	Identifier	p		1274911	1					
ANR	1275094	Parameter	bool dummy_argument	3155:63:118746:118764	1274911	2	True				
ANR	1275095	ParameterType	bool		1274911	0					
ANR	1275096	Identifier	dummy_argument		1274911	1					
ANR	1275097	CFGEntryNode	ENTRY		1274911		True				
ANR	1275098	CFGExitNode	EXIT		1274911		True				
ANR	1275099	Symbol	code		1274911						
ANR	1275100	Symbol	p -> l0111		1274911						
ANR	1275101	Symbol	p -> l0001		1274911						
ANR	1275102	Symbol	p -> p		1274911						
ANR	1275103	Symbol	p -> l1000		1274911						
ANR	1275104	Symbol	p -> l1110		1274911						
ANR	1275105	Symbol	* * * * p		1274911						
ANR	1275106	Symbol	* p -> p		1274911						
ANR	1275107	Symbol	terminate_wedge_vertex_list		1274911						
ANR	1275108	Symbol	l		1274911						
ANR	1275109	Symbol	p		1274911						
ANR	1275110	Symbol	* * * p		1274911						
ANR	1275111	Symbol	& l		1274911						
ANR	1275112	Symbol	* * * p -> p		1274911						
ANR	1275113	Symbol	dummy_argument		1274911						
ANR	1275114	Symbol	* * p -> p		1274911						
ANR	1275115	Symbol	fill_triangle		1274911						
ANR	1275116	Symbol	true		1274911						
ANR	1275117	Symbol	p -> p [ 0 ] [ 0 ] -> c		1274911						
ANR	1275118	Symbol	* p		1274911						
ANR	1275119	Symbol	* * p		1274911						
ANR	1275120	Symbol	l . last_side		1274911						
ANR	1275121	Symbol	p -> p [ 1 ] [ 1 ] -> c		1274911						
ANR	1275122	Symbol	pfs		1274911						
ANR	1275123	Function	is_quadrangle_color_linear_by_u	3196:0:119854:120201							
ANR	1275124	FunctionDef	"is_quadrangle_color_linear_by_u (const patch_fill_state_t * pfs , const quadrangle_patch * p)"		1275123	0					
ANR	1275125	CompoundStatement		3198:0:119962:120201	1275123	0					
ANR	1275126	IdentifierDeclStatement	int code ;	3199:4:120024:120032	1275123	0	True				
ANR	1275127	IdentifierDecl	code		1275123	0					
ANR	1275128	IdentifierDeclType	int		1275123	0					
ANR	1275129	Identifier	code		1275123	1					
ANR	1275130	ExpressionStatement	"code = is_color_linear ( pfs , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 0 ] [ 1 ] -> c )"	3201:4:120039:120096	1275123	1	True				
ANR	1275131	AssignmentExpression	"code = is_color_linear ( pfs , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 0 ] [ 1 ] -> c )"		1275123	0		=			
ANR	1275132	Identifier	code		1275123	0					
ANR	1275133	CallExpression	"is_color_linear ( pfs , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 0 ] [ 1 ] -> c )"		1275123	1					
ANR	1275134	Callee	is_color_linear		1275123	0					
ANR	1275135	Identifier	is_color_linear		1275123	0					
ANR	1275136	ArgumentList	pfs		1275123	1					
ANR	1275137	Argument	pfs		1275123	0					
ANR	1275138	Identifier	pfs		1275123	0					
ANR	1275139	Argument	p -> p [ 0 ] [ 0 ] -> c		1275123	1					
ANR	1275140	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> c		1275123	0					
ANR	1275141	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1275123	0					
ANR	1275142	ArrayIndexing	p -> p [ 0 ]		1275123	0					
ANR	1275143	PtrMemberAccess	p -> p		1275123	0					
ANR	1275144	Identifier	p		1275123	0					
ANR	1275145	Identifier	p		1275123	1					
ANR	1275146	PrimaryExpression	0		1275123	1					
ANR	1275147	PrimaryExpression	0		1275123	1					
ANR	1275148	Identifier	c		1275123	1					
ANR	1275149	Argument	p -> p [ 0 ] [ 1 ] -> c		1275123	2					
ANR	1275150	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> c		1275123	0					
ANR	1275151	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1275123	0					
ANR	1275152	ArrayIndexing	p -> p [ 0 ]		1275123	0					
ANR	1275153	PtrMemberAccess	p -> p		1275123	0					
ANR	1275154	Identifier	p		1275123	0					
ANR	1275155	Identifier	p		1275123	1					
ANR	1275156	PrimaryExpression	0		1275123	1					
ANR	1275157	PrimaryExpression	1		1275123	1					
ANR	1275158	Identifier	c		1275123	1					
ANR	1275159	IfStatement	if ( code <= 0 )		1275123	2					
ANR	1275160	Condition	code <= 0	3202:8:120106:120114	1275123	0	True				
ANR	1275161	RelationalExpression	code <= 0		1275123	0		<=			
ANR	1275162	Identifier	code		1275123	0					
ANR	1275163	PrimaryExpression	0		1275123	1					
ANR	1275164	ReturnStatement	return code ;	3203:8:120125:120136	1275123	1	True				
ANR	1275165	Identifier	code		1275123	0					
ANR	1275166	ReturnStatement	"return is_color_linear ( pfs , p -> p [ 1 ] [ 0 ] -> c , p -> p [ 1 ] [ 1 ] -> c ) ;"	3204:4:120142:120199	1275123	3	True				
ANR	1275167	CallExpression	"is_color_linear ( pfs , p -> p [ 1 ] [ 0 ] -> c , p -> p [ 1 ] [ 1 ] -> c )"		1275123	0					
ANR	1275168	Callee	is_color_linear		1275123	0					
ANR	1275169	Identifier	is_color_linear		1275123	0					
ANR	1275170	ArgumentList	pfs		1275123	1					
ANR	1275171	Argument	pfs		1275123	0					
ANR	1275172	Identifier	pfs		1275123	0					
ANR	1275173	Argument	p -> p [ 1 ] [ 0 ] -> c		1275123	1					
ANR	1275174	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> c		1275123	0					
ANR	1275175	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1275123	0					
ANR	1275176	ArrayIndexing	p -> p [ 1 ]		1275123	0					
ANR	1275177	PtrMemberAccess	p -> p		1275123	0					
ANR	1275178	Identifier	p		1275123	0					
ANR	1275179	Identifier	p		1275123	1					
ANR	1275180	PrimaryExpression	1		1275123	1					
ANR	1275181	PrimaryExpression	0		1275123	1					
ANR	1275182	Identifier	c		1275123	1					
ANR	1275183	Argument	p -> p [ 1 ] [ 1 ] -> c		1275123	2					
ANR	1275184	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> c		1275123	0					
ANR	1275185	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1275123	0					
ANR	1275186	ArrayIndexing	p -> p [ 1 ]		1275123	0					
ANR	1275187	PtrMemberAccess	p -> p		1275123	0					
ANR	1275188	Identifier	p		1275123	0					
ANR	1275189	Identifier	p		1275123	1					
ANR	1275190	PrimaryExpression	1		1275123	1					
ANR	1275191	PrimaryExpression	1		1275123	1					
ANR	1275192	Identifier	c		1275123	1					
ANR	1275193	ReturnType	static inline int		1275123	1					
ANR	1275194	Identifier	is_quadrangle_color_linear_by_u		1275123	2					
ANR	1275195	ParameterList	"const patch_fill_state_t * pfs , const quadrangle_patch * p"		1275123	3					
ANR	1275196	Parameter	const patch_fill_state_t * pfs	3197:32:119904:119932	1275123	0	True				
ANR	1275197	ParameterType	const patch_fill_state_t *		1275123	0					
ANR	1275198	Identifier	pfs		1275123	1					
ANR	1275199	Parameter	const quadrangle_patch * p	3197:63:119935:119959	1275123	1	True				
ANR	1275200	ParameterType	const quadrangle_patch *		1275123	0					
ANR	1275201	Identifier	p		1275123	1					
ANR	1275202	CFGEntryNode	ENTRY		1275123		True				
ANR	1275203	CFGExitNode	EXIT		1275123		True				
ANR	1275204	Symbol	code		1275123						
ANR	1275205	Symbol	p -> p		1275123						
ANR	1275206	Symbol	* * * * p		1275123						
ANR	1275207	Symbol	* p -> p		1275123						
ANR	1275208	Symbol	p		1275123						
ANR	1275209	Symbol	* * * p		1275123						
ANR	1275210	Symbol	is_color_linear		1275123						
ANR	1275211	Symbol	* * * p -> p		1275123						
ANR	1275212	Symbol	* * p -> p		1275123						
ANR	1275213	Symbol	p -> p [ 0 ] [ 0 ] -> c		1275123						
ANR	1275214	Symbol	* p		1275123						
ANR	1275215	Symbol	* * p		1275123						
ANR	1275216	Symbol	p -> p [ 1 ] [ 0 ] -> c		1275123						
ANR	1275217	Symbol	p -> p [ 1 ] [ 1 ] -> c		1275123						
ANR	1275218	Symbol	pfs		1275123						
ANR	1275219	Symbol	p -> p [ 0 ] [ 1 ] -> c		1275123						
ANR	1275220	Function	is_quadrangle_color_linear_by_v	3207:0:120204:120551							
ANR	1275221	FunctionDef	"is_quadrangle_color_linear_by_v (const patch_fill_state_t * pfs , const quadrangle_patch * p)"		1275220	0					
ANR	1275222	CompoundStatement		3209:0:120312:120551	1275220	0					
ANR	1275223	IdentifierDeclStatement	int code ;	3210:4:120374:120382	1275220	0	True				
ANR	1275224	IdentifierDecl	code		1275220	0					
ANR	1275225	IdentifierDeclType	int		1275220	0					
ANR	1275226	Identifier	code		1275220	1					
ANR	1275227	ExpressionStatement	"code = is_color_linear ( pfs , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 1 ] [ 0 ] -> c )"	3212:4:120389:120446	1275220	1	True				
ANR	1275228	AssignmentExpression	"code = is_color_linear ( pfs , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 1 ] [ 0 ] -> c )"		1275220	0		=			
ANR	1275229	Identifier	code		1275220	0					
ANR	1275230	CallExpression	"is_color_linear ( pfs , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 1 ] [ 0 ] -> c )"		1275220	1					
ANR	1275231	Callee	is_color_linear		1275220	0					
ANR	1275232	Identifier	is_color_linear		1275220	0					
ANR	1275233	ArgumentList	pfs		1275220	1					
ANR	1275234	Argument	pfs		1275220	0					
ANR	1275235	Identifier	pfs		1275220	0					
ANR	1275236	Argument	p -> p [ 0 ] [ 0 ] -> c		1275220	1					
ANR	1275237	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> c		1275220	0					
ANR	1275238	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1275220	0					
ANR	1275239	ArrayIndexing	p -> p [ 0 ]		1275220	0					
ANR	1275240	PtrMemberAccess	p -> p		1275220	0					
ANR	1275241	Identifier	p		1275220	0					
ANR	1275242	Identifier	p		1275220	1					
ANR	1275243	PrimaryExpression	0		1275220	1					
ANR	1275244	PrimaryExpression	0		1275220	1					
ANR	1275245	Identifier	c		1275220	1					
ANR	1275246	Argument	p -> p [ 1 ] [ 0 ] -> c		1275220	2					
ANR	1275247	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> c		1275220	0					
ANR	1275248	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1275220	0					
ANR	1275249	ArrayIndexing	p -> p [ 1 ]		1275220	0					
ANR	1275250	PtrMemberAccess	p -> p		1275220	0					
ANR	1275251	Identifier	p		1275220	0					
ANR	1275252	Identifier	p		1275220	1					
ANR	1275253	PrimaryExpression	1		1275220	1					
ANR	1275254	PrimaryExpression	0		1275220	1					
ANR	1275255	Identifier	c		1275220	1					
ANR	1275256	IfStatement	if ( code <= 0 )		1275220	2					
ANR	1275257	Condition	code <= 0	3213:8:120456:120464	1275220	0	True				
ANR	1275258	RelationalExpression	code <= 0		1275220	0		<=			
ANR	1275259	Identifier	code		1275220	0					
ANR	1275260	PrimaryExpression	0		1275220	1					
ANR	1275261	ReturnStatement	return code ;	3214:8:120475:120486	1275220	1	True				
ANR	1275262	Identifier	code		1275220	0					
ANR	1275263	ReturnStatement	"return is_color_linear ( pfs , p -> p [ 0 ] [ 1 ] -> c , p -> p [ 1 ] [ 1 ] -> c ) ;"	3215:4:120492:120549	1275220	3	True				
ANR	1275264	CallExpression	"is_color_linear ( pfs , p -> p [ 0 ] [ 1 ] -> c , p -> p [ 1 ] [ 1 ] -> c )"		1275220	0					
ANR	1275265	Callee	is_color_linear		1275220	0					
ANR	1275266	Identifier	is_color_linear		1275220	0					
ANR	1275267	ArgumentList	pfs		1275220	1					
ANR	1275268	Argument	pfs		1275220	0					
ANR	1275269	Identifier	pfs		1275220	0					
ANR	1275270	Argument	p -> p [ 0 ] [ 1 ] -> c		1275220	1					
ANR	1275271	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> c		1275220	0					
ANR	1275272	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1275220	0					
ANR	1275273	ArrayIndexing	p -> p [ 0 ]		1275220	0					
ANR	1275274	PtrMemberAccess	p -> p		1275220	0					
ANR	1275275	Identifier	p		1275220	0					
ANR	1275276	Identifier	p		1275220	1					
ANR	1275277	PrimaryExpression	0		1275220	1					
ANR	1275278	PrimaryExpression	1		1275220	1					
ANR	1275279	Identifier	c		1275220	1					
ANR	1275280	Argument	p -> p [ 1 ] [ 1 ] -> c		1275220	2					
ANR	1275281	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> c		1275220	0					
ANR	1275282	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1275220	0					
ANR	1275283	ArrayIndexing	p -> p [ 1 ]		1275220	0					
ANR	1275284	PtrMemberAccess	p -> p		1275220	0					
ANR	1275285	Identifier	p		1275220	0					
ANR	1275286	Identifier	p		1275220	1					
ANR	1275287	PrimaryExpression	1		1275220	1					
ANR	1275288	PrimaryExpression	1		1275220	1					
ANR	1275289	Identifier	c		1275220	1					
ANR	1275290	ReturnType	static inline int		1275220	1					
ANR	1275291	Identifier	is_quadrangle_color_linear_by_v		1275220	2					
ANR	1275292	ParameterList	"const patch_fill_state_t * pfs , const quadrangle_patch * p"		1275220	3					
ANR	1275293	Parameter	const patch_fill_state_t * pfs	3208:32:120254:120282	1275220	0	True				
ANR	1275294	ParameterType	const patch_fill_state_t *		1275220	0					
ANR	1275295	Identifier	pfs		1275220	1					
ANR	1275296	Parameter	const quadrangle_patch * p	3208:63:120285:120309	1275220	1	True				
ANR	1275297	ParameterType	const quadrangle_patch *		1275220	0					
ANR	1275298	Identifier	p		1275220	1					
ANR	1275299	CFGEntryNode	ENTRY		1275220		True				
ANR	1275300	CFGExitNode	EXIT		1275220		True				
ANR	1275301	Symbol	code		1275220						
ANR	1275302	Symbol	p -> p		1275220						
ANR	1275303	Symbol	* * * * p		1275220						
ANR	1275304	Symbol	* p -> p		1275220						
ANR	1275305	Symbol	p		1275220						
ANR	1275306	Symbol	* * * p		1275220						
ANR	1275307	Symbol	* * * p -> p		1275220						
ANR	1275308	Symbol	is_color_linear		1275220						
ANR	1275309	Symbol	* * p -> p		1275220						
ANR	1275310	Symbol	p -> p [ 0 ] [ 0 ] -> c		1275220						
ANR	1275311	Symbol	* p		1275220						
ANR	1275312	Symbol	* * p		1275220						
ANR	1275313	Symbol	p -> p [ 1 ] [ 0 ] -> c		1275220						
ANR	1275314	Symbol	p -> p [ 1 ] [ 1 ] -> c		1275220						
ANR	1275315	Symbol	pfs		1275220						
ANR	1275316	Symbol	p -> p [ 0 ] [ 1 ] -> c		1275220						
ANR	1275317	Function	is_quadrangle_color_linear_by_diagonals	3218:0:120554:120909							
ANR	1275318	FunctionDef	"is_quadrangle_color_linear_by_diagonals (const patch_fill_state_t * pfs , const quadrangle_patch * p)"		1275317	0					
ANR	1275319	CompoundStatement		3220:0:120670:120909	1275317	0					
ANR	1275320	IdentifierDeclStatement	int code ;	3221:4:120732:120740	1275317	0	True				
ANR	1275321	IdentifierDecl	code		1275317	0					
ANR	1275322	IdentifierDeclType	int		1275317	0					
ANR	1275323	Identifier	code		1275317	1					
ANR	1275324	ExpressionStatement	"code = is_color_linear ( pfs , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 1 ] [ 1 ] -> c )"	3223:4:120747:120804	1275317	1	True				
ANR	1275325	AssignmentExpression	"code = is_color_linear ( pfs , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 1 ] [ 1 ] -> c )"		1275317	0		=			
ANR	1275326	Identifier	code		1275317	0					
ANR	1275327	CallExpression	"is_color_linear ( pfs , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 1 ] [ 1 ] -> c )"		1275317	1					
ANR	1275328	Callee	is_color_linear		1275317	0					
ANR	1275329	Identifier	is_color_linear		1275317	0					
ANR	1275330	ArgumentList	pfs		1275317	1					
ANR	1275331	Argument	pfs		1275317	0					
ANR	1275332	Identifier	pfs		1275317	0					
ANR	1275333	Argument	p -> p [ 0 ] [ 0 ] -> c		1275317	1					
ANR	1275334	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> c		1275317	0					
ANR	1275335	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1275317	0					
ANR	1275336	ArrayIndexing	p -> p [ 0 ]		1275317	0					
ANR	1275337	PtrMemberAccess	p -> p		1275317	0					
ANR	1275338	Identifier	p		1275317	0					
ANR	1275339	Identifier	p		1275317	1					
ANR	1275340	PrimaryExpression	0		1275317	1					
ANR	1275341	PrimaryExpression	0		1275317	1					
ANR	1275342	Identifier	c		1275317	1					
ANR	1275343	Argument	p -> p [ 1 ] [ 1 ] -> c		1275317	2					
ANR	1275344	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> c		1275317	0					
ANR	1275345	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1275317	0					
ANR	1275346	ArrayIndexing	p -> p [ 1 ]		1275317	0					
ANR	1275347	PtrMemberAccess	p -> p		1275317	0					
ANR	1275348	Identifier	p		1275317	0					
ANR	1275349	Identifier	p		1275317	1					
ANR	1275350	PrimaryExpression	1		1275317	1					
ANR	1275351	PrimaryExpression	1		1275317	1					
ANR	1275352	Identifier	c		1275317	1					
ANR	1275353	IfStatement	if ( code <= 0 )		1275317	2					
ANR	1275354	Condition	code <= 0	3224:8:120814:120822	1275317	0	True				
ANR	1275355	RelationalExpression	code <= 0		1275317	0		<=			
ANR	1275356	Identifier	code		1275317	0					
ANR	1275357	PrimaryExpression	0		1275317	1					
ANR	1275358	ReturnStatement	return code ;	3225:8:120833:120844	1275317	1	True				
ANR	1275359	Identifier	code		1275317	0					
ANR	1275360	ReturnStatement	"return is_color_linear ( pfs , p -> p [ 0 ] [ 1 ] -> c , p -> p [ 1 ] [ 0 ] -> c ) ;"	3226:4:120850:120907	1275317	3	True				
ANR	1275361	CallExpression	"is_color_linear ( pfs , p -> p [ 0 ] [ 1 ] -> c , p -> p [ 1 ] [ 0 ] -> c )"		1275317	0					
ANR	1275362	Callee	is_color_linear		1275317	0					
ANR	1275363	Identifier	is_color_linear		1275317	0					
ANR	1275364	ArgumentList	pfs		1275317	1					
ANR	1275365	Argument	pfs		1275317	0					
ANR	1275366	Identifier	pfs		1275317	0					
ANR	1275367	Argument	p -> p [ 0 ] [ 1 ] -> c		1275317	1					
ANR	1275368	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> c		1275317	0					
ANR	1275369	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1275317	0					
ANR	1275370	ArrayIndexing	p -> p [ 0 ]		1275317	0					
ANR	1275371	PtrMemberAccess	p -> p		1275317	0					
ANR	1275372	Identifier	p		1275317	0					
ANR	1275373	Identifier	p		1275317	1					
ANR	1275374	PrimaryExpression	0		1275317	1					
ANR	1275375	PrimaryExpression	1		1275317	1					
ANR	1275376	Identifier	c		1275317	1					
ANR	1275377	Argument	p -> p [ 1 ] [ 0 ] -> c		1275317	2					
ANR	1275378	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> c		1275317	0					
ANR	1275379	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1275317	0					
ANR	1275380	ArrayIndexing	p -> p [ 1 ]		1275317	0					
ANR	1275381	PtrMemberAccess	p -> p		1275317	0					
ANR	1275382	Identifier	p		1275317	0					
ANR	1275383	Identifier	p		1275317	1					
ANR	1275384	PrimaryExpression	1		1275317	1					
ANR	1275385	PrimaryExpression	0		1275317	1					
ANR	1275386	Identifier	c		1275317	1					
ANR	1275387	ReturnType	static inline int		1275317	1					
ANR	1275388	Identifier	is_quadrangle_color_linear_by_diagonals		1275317	2					
ANR	1275389	ParameterList	"const patch_fill_state_t * pfs , const quadrangle_patch * p"		1275317	3					
ANR	1275390	Parameter	const patch_fill_state_t * pfs	3219:40:120612:120640	1275317	0	True				
ANR	1275391	ParameterType	const patch_fill_state_t *		1275317	0					
ANR	1275392	Identifier	pfs		1275317	1					
ANR	1275393	Parameter	const quadrangle_patch * p	3219:71:120643:120667	1275317	1	True				
ANR	1275394	ParameterType	const quadrangle_patch *		1275317	0					
ANR	1275395	Identifier	p		1275317	1					
ANR	1275396	CFGEntryNode	ENTRY		1275317		True				
ANR	1275397	CFGExitNode	EXIT		1275317		True				
ANR	1275398	Symbol	code		1275317						
ANR	1275399	Symbol	p -> p		1275317						
ANR	1275400	Symbol	* * * * p		1275317						
ANR	1275401	Symbol	* p -> p		1275317						
ANR	1275402	Symbol	p		1275317						
ANR	1275403	Symbol	* * * p		1275317						
ANR	1275404	Symbol	* * * p -> p		1275317						
ANR	1275405	Symbol	is_color_linear		1275317						
ANR	1275406	Symbol	* * p -> p		1275317						
ANR	1275407	Symbol	p -> p [ 0 ] [ 0 ] -> c		1275317						
ANR	1275408	Symbol	* p		1275317						
ANR	1275409	Symbol	p -> p [ 1 ] [ 1 ] -> c		1275317						
ANR	1275410	Symbol	* * p		1275317						
ANR	1275411	Symbol	p -> p [ 1 ] [ 0 ] -> c		1275317						
ANR	1275412	Symbol	pfs		1275317						
ANR	1275413	Symbol	p -> p [ 0 ] [ 1 ] -> c		1275317						
ANR	1275414	ClassDef	<unnamed>	3229:8:120920:121076							
ANR	1275415	DeclStmt									
ANR	1275416	Decl									color_change_type_t
ANR	1275417	Function	quadrangle_color_change	3237:0:121079:123872							
ANR	1275418	FunctionDef	"quadrangle_color_change (const patch_fill_state_t * pfs , const quadrangle_patch * p , bool is_big_u , bool is_big_v , double size_u , double size_v , bool * divide_u , bool * divide_v)"		1275417	0					
ANR	1275419	CompoundStatement		3241:0:121335:123872	1275417	0					
ANR	1275420	IdentifierDeclStatement	"patch_color_t d0001 , d1011 , d ;"	3242:4:121341:121370	1275417	0	True				
ANR	1275421	IdentifierDecl	d0001		1275417	0					
ANR	1275422	IdentifierDeclType	patch_color_t		1275417	0					
ANR	1275423	Identifier	d0001		1275417	1					
ANR	1275424	IdentifierDecl	d1011		1275417	1					
ANR	1275425	IdentifierDeclType	patch_color_t		1275417	0					
ANR	1275426	Identifier	d1011		1275417	1					
ANR	1275427	IdentifierDecl	d		1275417	2					
ANR	1275428	IdentifierDeclType	patch_color_t		1275417	0					
ANR	1275429	Identifier	d		1275417	1					
ANR	1275430	IdentifierDeclStatement	"double D , D0001 , D1011 , D0010 , D0111 , D0011 , D0110 ;"	3243:4:121376:121426	1275417	1	True				
ANR	1275431	IdentifierDecl	D		1275417	0					
ANR	1275432	IdentifierDeclType	double		1275417	0					
ANR	1275433	Identifier	D		1275417	1					
ANR	1275434	IdentifierDecl	D0001		1275417	1					
ANR	1275435	IdentifierDeclType	double		1275417	0					
ANR	1275436	Identifier	D0001		1275417	1					
ANR	1275437	IdentifierDecl	D1011		1275417	2					
ANR	1275438	IdentifierDeclType	double		1275417	0					
ANR	1275439	Identifier	D1011		1275417	1					
ANR	1275440	IdentifierDecl	D0010		1275417	3					
ANR	1275441	IdentifierDeclType	double		1275417	0					
ANR	1275442	Identifier	D0010		1275417	1					
ANR	1275443	IdentifierDecl	D0111		1275417	4					
ANR	1275444	IdentifierDeclType	double		1275417	0					
ANR	1275445	Identifier	D0111		1275417	1					
ANR	1275446	IdentifierDecl	D0011		1275417	5					
ANR	1275447	IdentifierDeclType	double		1275417	0					
ANR	1275448	Identifier	D0011		1275417	1					
ANR	1275449	IdentifierDecl	D0110		1275417	6					
ANR	1275450	IdentifierDeclType	double		1275417	0					
ANR	1275451	Identifier	D0110		1275417	1					
ANR	1275452	IdentifierDeclStatement	"double Du , Dv ;"	3244:4:121432:121445	1275417	2	True				
ANR	1275453	IdentifierDecl	Du		1275417	0					
ANR	1275454	IdentifierDeclType	double		1275417	0					
ANR	1275455	Identifier	Du		1275417	1					
ANR	1275456	IdentifierDecl	Dv		1275417	1					
ANR	1275457	IdentifierDeclType	double		1275417	0					
ANR	1275458	Identifier	Dv		1275417	1					
ANR	1275459	ExpressionStatement	"color_diff ( pfs , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 0 ] [ 1 ] -> c , & d0001 )"	3246:4:121452:121505	1275417	3	True				
ANR	1275460	CallExpression	"color_diff ( pfs , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 0 ] [ 1 ] -> c , & d0001 )"		1275417	0					
ANR	1275461	Callee	color_diff		1275417	0					
ANR	1275462	Identifier	color_diff		1275417	0					
ANR	1275463	ArgumentList	pfs		1275417	1					
ANR	1275464	Argument	pfs		1275417	0					
ANR	1275465	Identifier	pfs		1275417	0					
ANR	1275466	Argument	p -> p [ 0 ] [ 0 ] -> c		1275417	1					
ANR	1275467	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> c		1275417	0					
ANR	1275468	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1275417	0					
ANR	1275469	ArrayIndexing	p -> p [ 0 ]		1275417	0					
ANR	1275470	PtrMemberAccess	p -> p		1275417	0					
ANR	1275471	Identifier	p		1275417	0					
ANR	1275472	Identifier	p		1275417	1					
ANR	1275473	PrimaryExpression	0		1275417	1					
ANR	1275474	PrimaryExpression	0		1275417	1					
ANR	1275475	Identifier	c		1275417	1					
ANR	1275476	Argument	p -> p [ 0 ] [ 1 ] -> c		1275417	2					
ANR	1275477	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> c		1275417	0					
ANR	1275478	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1275417	0					
ANR	1275479	ArrayIndexing	p -> p [ 0 ]		1275417	0					
ANR	1275480	PtrMemberAccess	p -> p		1275417	0					
ANR	1275481	Identifier	p		1275417	0					
ANR	1275482	Identifier	p		1275417	1					
ANR	1275483	PrimaryExpression	0		1275417	1					
ANR	1275484	PrimaryExpression	1		1275417	1					
ANR	1275485	Identifier	c		1275417	1					
ANR	1275486	Argument	& d0001		1275417	3					
ANR	1275487	UnaryOperationExpression	& d0001		1275417	0					
ANR	1275488	UnaryOperator	&		1275417	0					
ANR	1275489	Identifier	d0001		1275417	1					
ANR	1275490	ExpressionStatement	"color_diff ( pfs , p -> p [ 1 ] [ 0 ] -> c , p -> p [ 1 ] [ 1 ] -> c , & d1011 )"	3247:4:121511:121564	1275417	4	True				
ANR	1275491	CallExpression	"color_diff ( pfs , p -> p [ 1 ] [ 0 ] -> c , p -> p [ 1 ] [ 1 ] -> c , & d1011 )"		1275417	0					
ANR	1275492	Callee	color_diff		1275417	0					
ANR	1275493	Identifier	color_diff		1275417	0					
ANR	1275494	ArgumentList	pfs		1275417	1					
ANR	1275495	Argument	pfs		1275417	0					
ANR	1275496	Identifier	pfs		1275417	0					
ANR	1275497	Argument	p -> p [ 1 ] [ 0 ] -> c		1275417	1					
ANR	1275498	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> c		1275417	0					
ANR	1275499	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1275417	0					
ANR	1275500	ArrayIndexing	p -> p [ 1 ]		1275417	0					
ANR	1275501	PtrMemberAccess	p -> p		1275417	0					
ANR	1275502	Identifier	p		1275417	0					
ANR	1275503	Identifier	p		1275417	1					
ANR	1275504	PrimaryExpression	1		1275417	1					
ANR	1275505	PrimaryExpression	0		1275417	1					
ANR	1275506	Identifier	c		1275417	1					
ANR	1275507	Argument	p -> p [ 1 ] [ 1 ] -> c		1275417	2					
ANR	1275508	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> c		1275417	0					
ANR	1275509	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1275417	0					
ANR	1275510	ArrayIndexing	p -> p [ 1 ]		1275417	0					
ANR	1275511	PtrMemberAccess	p -> p		1275417	0					
ANR	1275512	Identifier	p		1275417	0					
ANR	1275513	Identifier	p		1275417	1					
ANR	1275514	PrimaryExpression	1		1275417	1					
ANR	1275515	PrimaryExpression	1		1275417	1					
ANR	1275516	Identifier	c		1275417	1					
ANR	1275517	Argument	& d1011		1275417	3					
ANR	1275518	UnaryOperationExpression	& d1011		1275417	0					
ANR	1275519	UnaryOperator	&		1275417	0					
ANR	1275520	Identifier	d1011		1275417	1					
ANR	1275521	ExpressionStatement	"D0001 = color_norm ( pfs , & d0001 )"	3248:4:121570:121601	1275417	5	True				
ANR	1275522	AssignmentExpression	"D0001 = color_norm ( pfs , & d0001 )"		1275417	0		=			
ANR	1275523	Identifier	D0001		1275417	0					
ANR	1275524	CallExpression	"color_norm ( pfs , & d0001 )"		1275417	1					
ANR	1275525	Callee	color_norm		1275417	0					
ANR	1275526	Identifier	color_norm		1275417	0					
ANR	1275527	ArgumentList	pfs		1275417	1					
ANR	1275528	Argument	pfs		1275417	0					
ANR	1275529	Identifier	pfs		1275417	0					
ANR	1275530	Argument	& d0001		1275417	1					
ANR	1275531	UnaryOperationExpression	& d0001		1275417	0					
ANR	1275532	UnaryOperator	&		1275417	0					
ANR	1275533	Identifier	d0001		1275417	1					
ANR	1275534	ExpressionStatement	"D1011 = color_norm ( pfs , & d1011 )"	3249:4:121607:121638	1275417	6	True				
ANR	1275535	AssignmentExpression	"D1011 = color_norm ( pfs , & d1011 )"		1275417	0		=			
ANR	1275536	Identifier	D1011		1275417	0					
ANR	1275537	CallExpression	"color_norm ( pfs , & d1011 )"		1275417	1					
ANR	1275538	Callee	color_norm		1275417	0					
ANR	1275539	Identifier	color_norm		1275417	0					
ANR	1275540	ArgumentList	pfs		1275417	1					
ANR	1275541	Argument	pfs		1275417	0					
ANR	1275542	Identifier	pfs		1275417	0					
ANR	1275543	Argument	& d1011		1275417	1					
ANR	1275544	UnaryOperationExpression	& d1011		1275417	0					
ANR	1275545	UnaryOperator	&		1275417	0					
ANR	1275546	Identifier	d1011		1275417	1					
ANR	1275547	ExpressionStatement	"D0010 = color_span ( pfs , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 1 ] [ 0 ] -> c )"	3250:4:121644:121697	1275417	7	True				
ANR	1275548	AssignmentExpression	"D0010 = color_span ( pfs , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 1 ] [ 0 ] -> c )"		1275417	0		=			
ANR	1275549	Identifier	D0010		1275417	0					
ANR	1275550	CallExpression	"color_span ( pfs , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 1 ] [ 0 ] -> c )"		1275417	1					
ANR	1275551	Callee	color_span		1275417	0					
ANR	1275552	Identifier	color_span		1275417	0					
ANR	1275553	ArgumentList	pfs		1275417	1					
ANR	1275554	Argument	pfs		1275417	0					
ANR	1275555	Identifier	pfs		1275417	0					
ANR	1275556	Argument	p -> p [ 0 ] [ 0 ] -> c		1275417	1					
ANR	1275557	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> c		1275417	0					
ANR	1275558	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1275417	0					
ANR	1275559	ArrayIndexing	p -> p [ 0 ]		1275417	0					
ANR	1275560	PtrMemberAccess	p -> p		1275417	0					
ANR	1275561	Identifier	p		1275417	0					
ANR	1275562	Identifier	p		1275417	1					
ANR	1275563	PrimaryExpression	0		1275417	1					
ANR	1275564	PrimaryExpression	0		1275417	1					
ANR	1275565	Identifier	c		1275417	1					
ANR	1275566	Argument	p -> p [ 1 ] [ 0 ] -> c		1275417	2					
ANR	1275567	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> c		1275417	0					
ANR	1275568	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1275417	0					
ANR	1275569	ArrayIndexing	p -> p [ 1 ]		1275417	0					
ANR	1275570	PtrMemberAccess	p -> p		1275417	0					
ANR	1275571	Identifier	p		1275417	0					
ANR	1275572	Identifier	p		1275417	1					
ANR	1275573	PrimaryExpression	1		1275417	1					
ANR	1275574	PrimaryExpression	0		1275417	1					
ANR	1275575	Identifier	c		1275417	1					
ANR	1275576	ExpressionStatement	"D0111 = color_span ( pfs , p -> p [ 0 ] [ 1 ] -> c , p -> p [ 1 ] [ 1 ] -> c )"	3251:4:121703:121756	1275417	8	True				
ANR	1275577	AssignmentExpression	"D0111 = color_span ( pfs , p -> p [ 0 ] [ 1 ] -> c , p -> p [ 1 ] [ 1 ] -> c )"		1275417	0		=			
ANR	1275578	Identifier	D0111		1275417	0					
ANR	1275579	CallExpression	"color_span ( pfs , p -> p [ 0 ] [ 1 ] -> c , p -> p [ 1 ] [ 1 ] -> c )"		1275417	1					
ANR	1275580	Callee	color_span		1275417	0					
ANR	1275581	Identifier	color_span		1275417	0					
ANR	1275582	ArgumentList	pfs		1275417	1					
ANR	1275583	Argument	pfs		1275417	0					
ANR	1275584	Identifier	pfs		1275417	0					
ANR	1275585	Argument	p -> p [ 0 ] [ 1 ] -> c		1275417	1					
ANR	1275586	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> c		1275417	0					
ANR	1275587	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1275417	0					
ANR	1275588	ArrayIndexing	p -> p [ 0 ]		1275417	0					
ANR	1275589	PtrMemberAccess	p -> p		1275417	0					
ANR	1275590	Identifier	p		1275417	0					
ANR	1275591	Identifier	p		1275417	1					
ANR	1275592	PrimaryExpression	0		1275417	1					
ANR	1275593	PrimaryExpression	1		1275417	1					
ANR	1275594	Identifier	c		1275417	1					
ANR	1275595	Argument	p -> p [ 1 ] [ 1 ] -> c		1275417	2					
ANR	1275596	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> c		1275417	0					
ANR	1275597	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1275417	0					
ANR	1275598	ArrayIndexing	p -> p [ 1 ]		1275417	0					
ANR	1275599	PtrMemberAccess	p -> p		1275417	0					
ANR	1275600	Identifier	p		1275417	0					
ANR	1275601	Identifier	p		1275417	1					
ANR	1275602	PrimaryExpression	1		1275417	1					
ANR	1275603	PrimaryExpression	1		1275417	1					
ANR	1275604	Identifier	c		1275417	1					
ANR	1275605	ExpressionStatement	"D0011 = color_span ( pfs , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 1 ] [ 1 ] -> c )"	3252:4:121762:121815	1275417	9	True				
ANR	1275606	AssignmentExpression	"D0011 = color_span ( pfs , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 1 ] [ 1 ] -> c )"		1275417	0		=			
ANR	1275607	Identifier	D0011		1275417	0					
ANR	1275608	CallExpression	"color_span ( pfs , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 1 ] [ 1 ] -> c )"		1275417	1					
ANR	1275609	Callee	color_span		1275417	0					
ANR	1275610	Identifier	color_span		1275417	0					
ANR	1275611	ArgumentList	pfs		1275417	1					
ANR	1275612	Argument	pfs		1275417	0					
ANR	1275613	Identifier	pfs		1275417	0					
ANR	1275614	Argument	p -> p [ 0 ] [ 0 ] -> c		1275417	1					
ANR	1275615	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> c		1275417	0					
ANR	1275616	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1275417	0					
ANR	1275617	ArrayIndexing	p -> p [ 0 ]		1275417	0					
ANR	1275618	PtrMemberAccess	p -> p		1275417	0					
ANR	1275619	Identifier	p		1275417	0					
ANR	1275620	Identifier	p		1275417	1					
ANR	1275621	PrimaryExpression	0		1275417	1					
ANR	1275622	PrimaryExpression	0		1275417	1					
ANR	1275623	Identifier	c		1275417	1					
ANR	1275624	Argument	p -> p [ 1 ] [ 1 ] -> c		1275417	2					
ANR	1275625	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> c		1275417	0					
ANR	1275626	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1275417	0					
ANR	1275627	ArrayIndexing	p -> p [ 1 ]		1275417	0					
ANR	1275628	PtrMemberAccess	p -> p		1275417	0					
ANR	1275629	Identifier	p		1275417	0					
ANR	1275630	Identifier	p		1275417	1					
ANR	1275631	PrimaryExpression	1		1275417	1					
ANR	1275632	PrimaryExpression	1		1275417	1					
ANR	1275633	Identifier	c		1275417	1					
ANR	1275634	ExpressionStatement	"D0110 = color_span ( pfs , p -> p [ 0 ] [ 1 ] -> c , p -> p [ 1 ] [ 0 ] -> c )"	3253:4:121821:121874	1275417	10	True				
ANR	1275635	AssignmentExpression	"D0110 = color_span ( pfs , p -> p [ 0 ] [ 1 ] -> c , p -> p [ 1 ] [ 0 ] -> c )"		1275417	0		=			
ANR	1275636	Identifier	D0110		1275417	0					
ANR	1275637	CallExpression	"color_span ( pfs , p -> p [ 0 ] [ 1 ] -> c , p -> p [ 1 ] [ 0 ] -> c )"		1275417	1					
ANR	1275638	Callee	color_span		1275417	0					
ANR	1275639	Identifier	color_span		1275417	0					
ANR	1275640	ArgumentList	pfs		1275417	1					
ANR	1275641	Argument	pfs		1275417	0					
ANR	1275642	Identifier	pfs		1275417	0					
ANR	1275643	Argument	p -> p [ 0 ] [ 1 ] -> c		1275417	1					
ANR	1275644	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> c		1275417	0					
ANR	1275645	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1275417	0					
ANR	1275646	ArrayIndexing	p -> p [ 0 ]		1275417	0					
ANR	1275647	PtrMemberAccess	p -> p		1275417	0					
ANR	1275648	Identifier	p		1275417	0					
ANR	1275649	Identifier	p		1275417	1					
ANR	1275650	PrimaryExpression	0		1275417	1					
ANR	1275651	PrimaryExpression	1		1275417	1					
ANR	1275652	Identifier	c		1275417	1					
ANR	1275653	Argument	p -> p [ 1 ] [ 0 ] -> c		1275417	2					
ANR	1275654	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> c		1275417	0					
ANR	1275655	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1275417	0					
ANR	1275656	ArrayIndexing	p -> p [ 1 ]		1275417	0					
ANR	1275657	PtrMemberAccess	p -> p		1275417	0					
ANR	1275658	Identifier	p		1275417	0					
ANR	1275659	Identifier	p		1275417	1					
ANR	1275660	PrimaryExpression	1		1275417	1					
ANR	1275661	PrimaryExpression	0		1275417	1					
ANR	1275662	Identifier	c		1275417	1					
ANR	1275663	IfStatement	if ( pfs -> unlinear )		1275417	11					
ANR	1275664	Condition	pfs -> unlinear	3254:8:121884:121896	1275417	0	True				
ANR	1275665	PtrMemberAccess	pfs -> unlinear		1275417	0					
ANR	1275666	Identifier	pfs		1275417	0					
ANR	1275667	Identifier	unlinear		1275417	1					
ANR	1275668	CompoundStatement		14:23:563:563	1275417	1					
ANR	1275669	IfStatement	if ( D0001 <= pfs -> smoothness && D1011 <= pfs -> smoothness && D0010 <= pfs -> smoothness && D0111 <= pfs -> smoothness && D0011 <= pfs -> smoothness && D0110 <= pfs -> smoothness )		1275417	0					
ANR	1275670	Condition	D0001 <= pfs -> smoothness && D1011 <= pfs -> smoothness && D0010 <= pfs -> smoothness && D0111 <= pfs -> smoothness && D0011 <= pfs -> smoothness && D0110 <= pfs -> smoothness	3255:12:121913:122100	1275417	0	True				
ANR	1275671	AndExpression	D0001 <= pfs -> smoothness && D1011 <= pfs -> smoothness && D0010 <= pfs -> smoothness && D0111 <= pfs -> smoothness && D0011 <= pfs -> smoothness && D0110 <= pfs -> smoothness		1275417	0		&&			
ANR	1275672	RelationalExpression	D0001 <= pfs -> smoothness		1275417	0		<=			
ANR	1275673	Identifier	D0001		1275417	0					
ANR	1275674	PtrMemberAccess	pfs -> smoothness		1275417	1					
ANR	1275675	Identifier	pfs		1275417	0					
ANR	1275676	Identifier	smoothness		1275417	1					
ANR	1275677	AndExpression	D1011 <= pfs -> smoothness && D0010 <= pfs -> smoothness && D0111 <= pfs -> smoothness && D0011 <= pfs -> smoothness && D0110 <= pfs -> smoothness		1275417	1		&&			
ANR	1275678	RelationalExpression	D1011 <= pfs -> smoothness		1275417	0		<=			
ANR	1275679	Identifier	D1011		1275417	0					
ANR	1275680	PtrMemberAccess	pfs -> smoothness		1275417	1					
ANR	1275681	Identifier	pfs		1275417	0					
ANR	1275682	Identifier	smoothness		1275417	1					
ANR	1275683	AndExpression	D0010 <= pfs -> smoothness && D0111 <= pfs -> smoothness && D0011 <= pfs -> smoothness && D0110 <= pfs -> smoothness		1275417	1		&&			
ANR	1275684	RelationalExpression	D0010 <= pfs -> smoothness		1275417	0		<=			
ANR	1275685	Identifier	D0010		1275417	0					
ANR	1275686	PtrMemberAccess	pfs -> smoothness		1275417	1					
ANR	1275687	Identifier	pfs		1275417	0					
ANR	1275688	Identifier	smoothness		1275417	1					
ANR	1275689	AndExpression	D0111 <= pfs -> smoothness && D0011 <= pfs -> smoothness && D0110 <= pfs -> smoothness		1275417	1		&&			
ANR	1275690	RelationalExpression	D0111 <= pfs -> smoothness		1275417	0		<=			
ANR	1275691	Identifier	D0111		1275417	0					
ANR	1275692	PtrMemberAccess	pfs -> smoothness		1275417	1					
ANR	1275693	Identifier	pfs		1275417	0					
ANR	1275694	Identifier	smoothness		1275417	1					
ANR	1275695	AndExpression	D0011 <= pfs -> smoothness && D0110 <= pfs -> smoothness		1275417	1		&&			
ANR	1275696	RelationalExpression	D0011 <= pfs -> smoothness		1275417	0		<=			
ANR	1275697	Identifier	D0011		1275417	0					
ANR	1275698	PtrMemberAccess	pfs -> smoothness		1275417	1					
ANR	1275699	Identifier	pfs		1275417	0					
ANR	1275700	Identifier	smoothness		1275417	1					
ANR	1275701	RelationalExpression	D0110 <= pfs -> smoothness		1275417	1		<=			
ANR	1275702	Identifier	D0110		1275417	0					
ANR	1275703	PtrMemberAccess	pfs -> smoothness		1275417	1					
ANR	1275704	Identifier	pfs		1275417	0					
ANR	1275705	Identifier	smoothness		1275417	1					
ANR	1275706	ReturnStatement	return color_change_small ;	3258:12:122115:122140	1275417	1	True				
ANR	1275707	Identifier	color_change_small		1275417	0					
ANR	1275708	IfStatement	if ( D0001 <= pfs -> smoothness && D1011 <= pfs -> smoothness )		1275417	1					
ANR	1275709	Condition	D0001 <= pfs -> smoothness && D1011 <= pfs -> smoothness	3259:12:122154:122205	1275417	0	True				
ANR	1275710	AndExpression	D0001 <= pfs -> smoothness && D1011 <= pfs -> smoothness		1275417	0		&&			
ANR	1275711	RelationalExpression	D0001 <= pfs -> smoothness		1275417	0		<=			
ANR	1275712	Identifier	D0001		1275417	0					
ANR	1275713	PtrMemberAccess	pfs -> smoothness		1275417	1					
ANR	1275714	Identifier	pfs		1275417	0					
ANR	1275715	Identifier	smoothness		1275417	1					
ANR	1275716	RelationalExpression	D1011 <= pfs -> smoothness		1275417	1		<=			
ANR	1275717	Identifier	D1011		1275417	0					
ANR	1275718	PtrMemberAccess	pfs -> smoothness		1275417	1					
ANR	1275719	Identifier	pfs		1275417	0					
ANR	1275720	Identifier	smoothness		1275417	1					
ANR	1275721	CompoundStatement		19:66:872:872	1275417	1					
ANR	1275722	IfStatement	if ( ! is_big_v )		1275417	0					
ANR	1275723	Condition	! is_big_v	3260:16:122226:122234	1275417	0	True				
ANR	1275724	UnaryOperationExpression	! is_big_v		1275417	0					
ANR	1275725	UnaryOperator	!		1275417	0					
ANR	1275726	Identifier	is_big_v		1275417	1					
ANR	1275727	CompoundStatement		20:27:901:901	1275417	1					
ANR	1275728	ReturnStatement	return color_change_small ;	3262:16:122316:122341	1275417	0	True				
ANR	1275729	Identifier	color_change_small		1275417	0					
ANR	1275730	ExpressionStatement	* divide_v = true	3264:12:122369:122385	1275417	1	True				
ANR	1275731	AssignmentExpression	* divide_v = true		1275417	0		=			
ANR	1275732	UnaryOperationExpression	* divide_v		1275417	0					
ANR	1275733	UnaryOperator	*		1275417	0					
ANR	1275734	Identifier	divide_v		1275417	1					
ANR	1275735	Identifier	true		1275417	1					
ANR	1275736	ReturnStatement	return color_change_gradient ;	3265:12:122399:122427	1275417	2	True				
ANR	1275737	Identifier	color_change_gradient		1275417	0					
ANR	1275738	IfStatement	if ( D0010 <= pfs -> smoothness && D0111 <= pfs -> smoothness )		1275417	2					
ANR	1275739	Condition	D0010 <= pfs -> smoothness && D0111 <= pfs -> smoothness	3267:12:122451:122502	1275417	0	True				
ANR	1275740	AndExpression	D0010 <= pfs -> smoothness && D0111 <= pfs -> smoothness		1275417	0		&&			
ANR	1275741	RelationalExpression	D0010 <= pfs -> smoothness		1275417	0		<=			
ANR	1275742	Identifier	D0010		1275417	0					
ANR	1275743	PtrMemberAccess	pfs -> smoothness		1275417	1					
ANR	1275744	Identifier	pfs		1275417	0					
ANR	1275745	Identifier	smoothness		1275417	1					
ANR	1275746	RelationalExpression	D0111 <= pfs -> smoothness		1275417	1		<=			
ANR	1275747	Identifier	D0111		1275417	0					
ANR	1275748	PtrMemberAccess	pfs -> smoothness		1275417	1					
ANR	1275749	Identifier	pfs		1275417	0					
ANR	1275750	Identifier	smoothness		1275417	1					
ANR	1275751	CompoundStatement		27:66:1169:1169	1275417	1					
ANR	1275752	IfStatement	if ( ! is_big_u )		1275417	0					
ANR	1275753	Condition	! is_big_u	3268:16:122523:122531	1275417	0	True				
ANR	1275754	UnaryOperationExpression	! is_big_u		1275417	0					
ANR	1275755	UnaryOperator	!		1275417	0					
ANR	1275756	Identifier	is_big_u		1275417	1					
ANR	1275757	CompoundStatement		28:27:1198:1198	1275417	1					
ANR	1275758	ReturnStatement	return color_change_small ;	3270:16:122613:122638	1275417	0	True				
ANR	1275759	Identifier	color_change_small		1275417	0					
ANR	1275760	ExpressionStatement	* divide_u = true	3272:12:122666:122682	1275417	1	True				
ANR	1275761	AssignmentExpression	* divide_u = true		1275417	0		=			
ANR	1275762	UnaryOperationExpression	* divide_u		1275417	0					
ANR	1275763	UnaryOperator	*		1275417	0					
ANR	1275764	Identifier	divide_u		1275417	1					
ANR	1275765	Identifier	true		1275417	1					
ANR	1275766	ReturnStatement	return color_change_gradient ;	3273:12:122696:122724	1275417	2	True				
ANR	1275767	Identifier	color_change_gradient		1275417	0					
ANR	1275768	ExpressionStatement	"color_diff ( pfs , & d0001 , & d1011 , & d )"	3276:4:122746:122781	1275417	12	True				
ANR	1275769	CallExpression	"color_diff ( pfs , & d0001 , & d1011 , & d )"		1275417	0					
ANR	1275770	Callee	color_diff		1275417	0					
ANR	1275771	Identifier	color_diff		1275417	0					
ANR	1275772	ArgumentList	pfs		1275417	1					
ANR	1275773	Argument	pfs		1275417	0					
ANR	1275774	Identifier	pfs		1275417	0					
ANR	1275775	Argument	& d0001		1275417	1					
ANR	1275776	UnaryOperationExpression	& d0001		1275417	0					
ANR	1275777	UnaryOperator	&		1275417	0					
ANR	1275778	Identifier	d0001		1275417	1					
ANR	1275779	Argument	& d1011		1275417	2					
ANR	1275780	UnaryOperationExpression	& d1011		1275417	0					
ANR	1275781	UnaryOperator	&		1275417	0					
ANR	1275782	Identifier	d1011		1275417	1					
ANR	1275783	Argument	& d		1275417	3					
ANR	1275784	UnaryOperationExpression	& d		1275417	0					
ANR	1275785	UnaryOperator	&		1275417	0					
ANR	1275786	Identifier	d		1275417	1					
ANR	1275787	ExpressionStatement	"Du = max ( D0001 , D1011 )"	3277:4:122787:122809	1275417	13	True				
ANR	1275788	AssignmentExpression	"Du = max ( D0001 , D1011 )"		1275417	0		=			
ANR	1275789	Identifier	Du		1275417	0					
ANR	1275790	CallExpression	"max ( D0001 , D1011 )"		1275417	1					
ANR	1275791	Callee	max		1275417	0					
ANR	1275792	Identifier	max		1275417	0					
ANR	1275793	ArgumentList	D0001		1275417	1					
ANR	1275794	Argument	D0001		1275417	0					
ANR	1275795	Identifier	D0001		1275417	0					
ANR	1275796	Argument	D1011		1275417	1					
ANR	1275797	Identifier	D1011		1275417	0					
ANR	1275798	ExpressionStatement	"Dv = max ( D0010 , D0111 )"	3278:4:122815:122837	1275417	14	True				
ANR	1275799	AssignmentExpression	"Dv = max ( D0010 , D0111 )"		1275417	0		=			
ANR	1275800	Identifier	Dv		1275417	0					
ANR	1275801	CallExpression	"max ( D0010 , D0111 )"		1275417	1					
ANR	1275802	Callee	max		1275417	0					
ANR	1275803	Identifier	max		1275417	0					
ANR	1275804	ArgumentList	D0010		1275417	1					
ANR	1275805	Argument	D0010		1275417	0					
ANR	1275806	Identifier	D0010		1275417	0					
ANR	1275807	Argument	D0111		1275417	1					
ANR	1275808	Identifier	D0111		1275417	0					
ANR	1275809	IfStatement	if ( Du <= pfs -> smoothness / 8 && Dv <= pfs -> smoothness / 8 )		1275417	15					
ANR	1275810	Condition	Du <= pfs -> smoothness / 8 && Dv <= pfs -> smoothness / 8	3279:8:122847:122900	1275417	0	True				
ANR	1275811	AndExpression	Du <= pfs -> smoothness / 8 && Dv <= pfs -> smoothness / 8		1275417	0		&&			
ANR	1275812	RelationalExpression	Du <= pfs -> smoothness / 8		1275417	0		<=			
ANR	1275813	Identifier	Du		1275417	0					
ANR	1275814	MultiplicativeExpression	pfs -> smoothness / 8		1275417	1		/			
ANR	1275815	PtrMemberAccess	pfs -> smoothness		1275417	0					
ANR	1275816	Identifier	pfs		1275417	0					
ANR	1275817	Identifier	smoothness		1275417	1					
ANR	1275818	PrimaryExpression	8		1275417	1					
ANR	1275819	RelationalExpression	Dv <= pfs -> smoothness / 8		1275417	1		<=			
ANR	1275820	Identifier	Dv		1275417	0					
ANR	1275821	MultiplicativeExpression	pfs -> smoothness / 8		1275417	1		/			
ANR	1275822	PtrMemberAccess	pfs -> smoothness		1275417	0					
ANR	1275823	Identifier	pfs		1275417	0					
ANR	1275824	Identifier	smoothness		1275417	1					
ANR	1275825	PrimaryExpression	8		1275417	1					
ANR	1275826	ReturnStatement	return color_change_small ;	3280:8:122911:122936	1275417	1	True				
ANR	1275827	Identifier	color_change_small		1275417	0					
ANR	1275828	IfStatement	if ( Du <= pfs -> smoothness / 8 )		1275417	16					
ANR	1275829	Condition	Du <= pfs -> smoothness / 8	3281:8:122946:122970	1275417	0	True				
ANR	1275830	RelationalExpression	Du <= pfs -> smoothness / 8		1275417	0		<=			
ANR	1275831	Identifier	Du		1275417	0					
ANR	1275832	MultiplicativeExpression	pfs -> smoothness / 8		1275417	1		/			
ANR	1275833	PtrMemberAccess	pfs -> smoothness		1275417	0					
ANR	1275834	Identifier	pfs		1275417	0					
ANR	1275835	Identifier	smoothness		1275417	1					
ANR	1275836	PrimaryExpression	8		1275417	1					
ANR	1275837	ReturnStatement	return color_change_linear ;	3282:8:122981:123007	1275417	1	True				
ANR	1275838	Identifier	color_change_linear		1275417	0					
ANR	1275839	IfStatement	if ( Dv <= pfs -> smoothness / 8 )		1275417	17					
ANR	1275840	Condition	Dv <= pfs -> smoothness / 8	3283:8:123017:123041	1275417	0	True				
ANR	1275841	RelationalExpression	Dv <= pfs -> smoothness / 8		1275417	0		<=			
ANR	1275842	Identifier	Dv		1275417	0					
ANR	1275843	MultiplicativeExpression	pfs -> smoothness / 8		1275417	1		/			
ANR	1275844	PtrMemberAccess	pfs -> smoothness		1275417	0					
ANR	1275845	Identifier	pfs		1275417	0					
ANR	1275846	Identifier	smoothness		1275417	1					
ANR	1275847	PrimaryExpression	8		1275417	1					
ANR	1275848	ReturnStatement	return color_change_linear ;	3284:8:123052:123078	1275417	1	True				
ANR	1275849	Identifier	color_change_linear		1275417	0					
ANR	1275850	ExpressionStatement	"D = color_norm ( pfs , & d )"	3285:4:123084:123107	1275417	18	True				
ANR	1275851	AssignmentExpression	"D = color_norm ( pfs , & d )"		1275417	0		=			
ANR	1275852	Identifier	D		1275417	0					
ANR	1275853	CallExpression	"color_norm ( pfs , & d )"		1275417	1					
ANR	1275854	Callee	color_norm		1275417	0					
ANR	1275855	Identifier	color_norm		1275417	0					
ANR	1275856	ArgumentList	pfs		1275417	1					
ANR	1275857	Argument	pfs		1275417	0					
ANR	1275858	Identifier	pfs		1275417	0					
ANR	1275859	Argument	& d		1275417	1					
ANR	1275860	UnaryOperationExpression	& d		1275417	0					
ANR	1275861	UnaryOperator	&		1275417	0					
ANR	1275862	Identifier	d		1275417	1					
ANR	1275863	IfStatement	if ( D <= pfs -> smoothness )		1275417	19					
ANR	1275864	Condition	D <= pfs -> smoothness	3286:8:123117:123136	1275417	0	True				
ANR	1275865	RelationalExpression	D <= pfs -> smoothness		1275417	0		<=			
ANR	1275866	Identifier	D		1275417	0					
ANR	1275867	PtrMemberAccess	pfs -> smoothness		1275417	1					
ANR	1275868	Identifier	pfs		1275417	0					
ANR	1275869	Identifier	smoothness		1275417	1					
ANR	1275870	ReturnStatement	return color_change_bilinear ;	3287:8:123147:123175	1275417	1	True				
ANR	1275871	Identifier	color_change_bilinear		1275417	0					
ANR	1275872	IfStatement	if ( Du > Dv && is_big_u )		1275417	20					
ANR	1275873	Condition	Du > Dv && is_big_u	3289:8:123191:123209	1275417	0	True				
ANR	1275874	AndExpression	Du > Dv && is_big_u		1275417	0		&&			
ANR	1275875	RelationalExpression	Du > Dv		1275417	0		>			
ANR	1275876	Identifier	Du		1275417	0					
ANR	1275877	Identifier	Dv		1275417	1					
ANR	1275878	Identifier	is_big_u		1275417	1					
ANR	1275879	ExpressionStatement	* divide_u = true	3290:8:123220:123236	1275417	1	True				
ANR	1275880	AssignmentExpression	* divide_u = true		1275417	0		=			
ANR	1275881	UnaryOperationExpression	* divide_u		1275417	0					
ANR	1275882	UnaryOperator	*		1275417	0					
ANR	1275883	Identifier	divide_u		1275417	1					
ANR	1275884	Identifier	true		1275417	1					
ANR	1275885	ElseStatement	else		1275417	0					
ANR	1275886	IfStatement	if ( Du < Dv && is_big_v )		1275417	0					
ANR	1275887	Condition	Du < Dv && is_big_v	3291:13:123251:123269	1275417	0	True				
ANR	1275888	AndExpression	Du < Dv && is_big_v		1275417	0		&&			
ANR	1275889	RelationalExpression	Du < Dv		1275417	0		<			
ANR	1275890	Identifier	Du		1275417	0					
ANR	1275891	Identifier	Dv		1275417	1					
ANR	1275892	Identifier	is_big_v		1275417	1					
ANR	1275893	ExpressionStatement	* divide_v = true	3292:8:123280:123296	1275417	1	True				
ANR	1275894	AssignmentExpression	* divide_v = true		1275417	0		=			
ANR	1275895	UnaryOperationExpression	* divide_v		1275417	0					
ANR	1275896	UnaryOperator	*		1275417	0					
ANR	1275897	Identifier	divide_v		1275417	1					
ANR	1275898	Identifier	true		1275417	1					
ANR	1275899	ElseStatement	else		1275417	0					
ANR	1275900	IfStatement	if ( is_big_u && size_u > size_v )		1275417	0					
ANR	1275901	Condition	is_big_u && size_u > size_v	3293:13:123311:123337	1275417	0	True				
ANR	1275902	AndExpression	is_big_u && size_u > size_v		1275417	0		&&			
ANR	1275903	Identifier	is_big_u		1275417	0					
ANR	1275904	RelationalExpression	size_u > size_v		1275417	1		>			
ANR	1275905	Identifier	size_u		1275417	0					
ANR	1275906	Identifier	size_v		1275417	1					
ANR	1275907	ExpressionStatement	* divide_u = true	3294:8:123348:123364	1275417	1	True				
ANR	1275908	AssignmentExpression	* divide_u = true		1275417	0		=			
ANR	1275909	UnaryOperationExpression	* divide_u		1275417	0					
ANR	1275910	UnaryOperator	*		1275417	0					
ANR	1275911	Identifier	divide_u		1275417	1					
ANR	1275912	Identifier	true		1275417	1					
ANR	1275913	ElseStatement	else		1275417	0					
ANR	1275914	IfStatement	if ( is_big_v && size_v > size_u )		1275417	0					
ANR	1275915	Condition	is_big_v && size_v > size_u	3295:13:123379:123405	1275417	0	True				
ANR	1275916	AndExpression	is_big_v && size_v > size_u		1275417	0		&&			
ANR	1275917	Identifier	is_big_v		1275417	0					
ANR	1275918	RelationalExpression	size_v > size_u		1275417	1		>			
ANR	1275919	Identifier	size_v		1275417	0					
ANR	1275920	Identifier	size_u		1275417	1					
ANR	1275921	ExpressionStatement	* divide_v = true	3296:8:123416:123432	1275417	1	True				
ANR	1275922	AssignmentExpression	* divide_v = true		1275417	0		=			
ANR	1275923	UnaryOperationExpression	* divide_v		1275417	0					
ANR	1275924	UnaryOperator	*		1275417	0					
ANR	1275925	Identifier	divide_v		1275417	1					
ANR	1275926	Identifier	true		1275417	1					
ANR	1275927	ElseStatement	else		1275417	0					
ANR	1275928	IfStatement	if ( is_big_u )		1275417	0					
ANR	1275929	Condition	is_big_u	3297:13:123447:123454	1275417	0	True				
ANR	1275930	Identifier	is_big_u		1275417	0					
ANR	1275931	ExpressionStatement	* divide_u = true	3298:8:123465:123481	1275417	1	True				
ANR	1275932	AssignmentExpression	* divide_u = true		1275417	0		=			
ANR	1275933	UnaryOperationExpression	* divide_u		1275417	0					
ANR	1275934	UnaryOperator	*		1275417	0					
ANR	1275935	Identifier	divide_u		1275417	1					
ANR	1275936	Identifier	true		1275417	1					
ANR	1275937	ElseStatement	else		1275417	0					
ANR	1275938	IfStatement	if ( is_big_v )		1275417	0					
ANR	1275939	Condition	is_big_v	3299:13:123496:123503	1275417	0	True				
ANR	1275940	Identifier	is_big_v		1275417	0					
ANR	1275941	ExpressionStatement	* divide_v = true	3300:8:123514:123530	1275417	1	True				
ANR	1275942	AssignmentExpression	* divide_v = true		1275417	0		=			
ANR	1275943	UnaryOperationExpression	* divide_v		1275417	0					
ANR	1275944	UnaryOperator	*		1275417	0					
ANR	1275945	Identifier	divide_v		1275417	1					
ANR	1275946	Identifier	true		1275417	1					
ANR	1275947	ElseStatement	else		1275417	0					
ANR	1275948	CompoundStatement		61:9:2205:2205	1275417	0					
ANR	1275949	ReturnStatement	return color_change_small ;	3303:8:123604:123629	1275417	0	True				
ANR	1275950	Identifier	color_change_small		1275417	0					
ANR	1275951	ReturnStatement	return color_change_general ;	3312:4:123843:123870	1275417	21	True				
ANR	1275952	Identifier	color_change_general		1275417	0					
ANR	1275953	ReturnType	static inline color_change_type_t		1275417	1					
ANR	1275954	Identifier	quadrangle_color_change		1275417	2					
ANR	1275955	ParameterList	"const patch_fill_state_t * pfs , const quadrangle_patch * p , bool is_big_u , bool is_big_v , double size_u , double size_v , bool * divide_u , bool * divide_v"		1275417	3					
ANR	1275956	Parameter	const patch_fill_state_t * pfs	3238:24:121137:121165	1275417	0	True				
ANR	1275957	ParameterType	const patch_fill_state_t *		1275417	0					
ANR	1275958	Identifier	pfs		1275417	1					
ANR	1275959	Parameter	const quadrangle_patch * p	3238:55:121168:121192	1275417	1	True				
ANR	1275960	ParameterType	const quadrangle_patch *		1275417	0					
ANR	1275961	Identifier	p		1275417	1					
ANR	1275962	Parameter	bool is_big_u	3239:24:121219:121231	1275417	2	True				
ANR	1275963	ParameterType	bool		1275417	0					
ANR	1275964	Identifier	is_big_u		1275417	1					
ANR	1275965	Parameter	bool is_big_v	3239:39:121234:121246	1275417	3	True				
ANR	1275966	ParameterType	bool		1275417	0					
ANR	1275967	Identifier	is_big_v		1275417	1					
ANR	1275968	Parameter	double size_u	3239:54:121249:121261	1275417	4	True				
ANR	1275969	ParameterType	double		1275417	0					
ANR	1275970	Identifier	size_u		1275417	1					
ANR	1275971	Parameter	double size_v	3239:69:121264:121276	1275417	5	True				
ANR	1275972	ParameterType	double		1275417	0					
ANR	1275973	Identifier	size_v		1275417	1					
ANR	1275974	Parameter	bool * divide_u	3240:24:121303:121316	1275417	6	True				
ANR	1275975	ParameterType	bool *		1275417	0					
ANR	1275976	Identifier	divide_u		1275417	1					
ANR	1275977	Parameter	bool * divide_v	3240:40:121319:121332	1275417	7	True				
ANR	1275978	ParameterType	bool *		1275417	0					
ANR	1275979	Identifier	divide_v		1275417	1					
ANR	1275980	CFGEntryNode	ENTRY		1275417		True				
ANR	1275981	CFGExitNode	EXIT		1275417		True				
ANR	1275982	Symbol	size_v		1275417						
ANR	1275983	Symbol	divide_v		1275417						
ANR	1275984	Symbol	p -> p		1275417						
ANR	1275985	Symbol	* * * * p		1275417						
ANR	1275986	Symbol	* p -> p		1275417						
ANR	1275987	Symbol	& d1011		1275417						
ANR	1275988	Symbol	size_u		1275417						
ANR	1275989	Symbol	color_change_linear		1275417						
ANR	1275990	Symbol	color_change_bilinear		1275417						
ANR	1275991	Symbol	D0001		1275417						
ANR	1275992	Symbol	D1011		1275417						
ANR	1275993	Symbol	* * * p -> p		1275417						
ANR	1275994	Symbol	* * p -> p		1275417						
ANR	1275995	Symbol	p -> p [ 0 ] [ 0 ] -> c		1275417						
ANR	1275996	Symbol	divide_u		1275417						
ANR	1275997	Symbol	p -> p [ 0 ] [ 1 ] -> c		1275417						
ANR	1275998	Symbol	color_change_small		1275417						
ANR	1275999	Symbol	* pfs		1275417						
ANR	1276000	Symbol	D0011		1275417						
ANR	1276001	Symbol	Du		1275417						
ANR	1276002	Symbol	* * * p		1275417						
ANR	1276003	Symbol	Dv		1275417						
ANR	1276004	Symbol	& d0001		1275417						
ANR	1276005	Symbol	* divide_u		1275417						
ANR	1276006	Symbol	* divide_v		1275417						
ANR	1276007	Symbol	D0010		1275417						
ANR	1276008	Symbol	true		1275417						
ANR	1276009	Symbol	pfs		1275417						
ANR	1276010	Symbol	pfs -> unlinear		1275417						
ANR	1276011	Symbol	D		1275417						
ANR	1276012	Symbol	color_norm		1275417						
ANR	1276013	Symbol	color_change_general		1275417						
ANR	1276014	Symbol	is_big_v		1275417						
ANR	1276015	Symbol	is_big_u		1275417						
ANR	1276016	Symbol	* * p		1275417						
ANR	1276017	Symbol	p -> p [ 1 ] [ 1 ] -> c		1275417						
ANR	1276018	Symbol	p -> p [ 1 ] [ 0 ] -> c		1275417						
ANR	1276019	Symbol	d		1275417						
ANR	1276020	Symbol	pfs -> smoothness		1275417						
ANR	1276021	Symbol	max		1275417						
ANR	1276022	Symbol	color_change_gradient		1275417						
ANR	1276023	Symbol	& d		1275417						
ANR	1276024	Symbol	p		1275417						
ANR	1276025	Symbol	D0110		1275417						
ANR	1276026	Symbol	D0111		1275417						
ANR	1276027	Symbol	d0001		1275417						
ANR	1276028	Symbol	color_span		1275417						
ANR	1276029	Symbol	* p		1275417						
ANR	1276030	Symbol	d1011		1275417						
ANR	1276031	Function	fill_quadrangle	3315:0:123875:135264							
ANR	1276032	FunctionDef	"fill_quadrangle (patch_fill_state_t * pfs , const quadrangle_patch * p , bool big)"		1276031	0					
ANR	1276033	CompoundStatement		3317:0:123964:135264	1276031	0					
ANR	1276034	IdentifierDeclStatement	"quadrangle_patch s0 , s1 ;"	3321:4:124188:124211	1276031	0	True				
ANR	1276035	IdentifierDecl	s0		1276031	0					
ANR	1276036	IdentifierDeclType	quadrangle_patch		1276031	0					
ANR	1276037	Identifier	s0		1276031	1					
ANR	1276038	IdentifierDecl	s1		1276031	1					
ANR	1276039	IdentifierDeclType	quadrangle_patch		1276031	0					
ANR	1276040	Identifier	s1		1276031	1					
ANR	1276041	IdentifierDeclStatement	"wedge_vertex_list_t l0 , l1 , l2 ;"	3322:4:124217:124247	1276031	1	True				
ANR	1276042	IdentifierDecl	l0		1276031	0					
ANR	1276043	IdentifierDeclType	wedge_vertex_list_t		1276031	0					
ANR	1276044	Identifier	l0		1276031	1					
ANR	1276045	IdentifierDecl	l1		1276031	1					
ANR	1276046	IdentifierDeclType	wedge_vertex_list_t		1276031	0					
ANR	1276047	Identifier	l1		1276031	1					
ANR	1276048	IdentifierDecl	l2		1276031	2					
ANR	1276049	IdentifierDeclType	wedge_vertex_list_t		1276031	0					
ANR	1276050	Identifier	l2		1276031	1					
ANR	1276051	IdentifierDeclStatement	int code ;	3323:4:124253:124261	1276031	2	True				
ANR	1276052	IdentifierDecl	code		1276031	0					
ANR	1276053	IdentifierDeclType	int		1276031	0					
ANR	1276054	Identifier	code		1276031	1					
ANR	1276055	IdentifierDeclStatement	"bool divide_u = false , divide_v = false , big1 = big ;"	3324:4:124267:124318	1276031	3	True				
ANR	1276056	IdentifierDecl	divide_u = false		1276031	0					
ANR	1276057	IdentifierDeclType	bool		1276031	0					
ANR	1276058	Identifier	divide_u		1276031	1					
ANR	1276059	AssignmentExpression	divide_u = false		1276031	2		=			
ANR	1276060	Identifier	false		1276031	0					
ANR	1276061	Identifier	false		1276031	1					
ANR	1276062	IdentifierDecl	divide_v = false		1276031	1					
ANR	1276063	IdentifierDeclType	bool		1276031	0					
ANR	1276064	Identifier	divide_v		1276031	1					
ANR	1276065	AssignmentExpression	divide_v = false		1276031	2		=			
ANR	1276066	Identifier	false		1276031	0					
ANR	1276067	Identifier	false		1276031	1					
ANR	1276068	IdentifierDecl	big1 = big		1276031	2					
ANR	1276069	IdentifierDeclType	bool		1276031	0					
ANR	1276070	Identifier	big1		1276031	1					
ANR	1276071	AssignmentExpression	big1 = big		1276031	2		=			
ANR	1276072	Identifier	big		1276031	0					
ANR	1276073	Identifier	big		1276031	1					
ANR	1276074	IdentifierDeclStatement	shading_vertex_t q [ 2 ] ;	3325:4:124324:124345	1276031	4	True				
ANR	1276075	IdentifierDecl	q [ 2 ]		1276031	0					
ANR	1276076	IdentifierDeclType	shading_vertex_t [ 2 ]		1276031	0					
ANR	1276077	Identifier	q		1276031	1					
ANR	1276078	PrimaryExpression	2		1276031	2					
ANR	1276079	IdentifierDeclStatement	bool monotonic_color_save = pfs -> monotonic_color ;	3326:4:124351:124399	1276031	5	True				
ANR	1276080	IdentifierDecl	monotonic_color_save = pfs -> monotonic_color		1276031	0					
ANR	1276081	IdentifierDeclType	bool		1276031	0					
ANR	1276082	Identifier	monotonic_color_save		1276031	1					
ANR	1276083	AssignmentExpression	monotonic_color_save = pfs -> monotonic_color		1276031	2		=			
ANR	1276084	Identifier	monotonic_color_save		1276031	0					
ANR	1276085	PtrMemberAccess	pfs -> monotonic_color		1276031	1					
ANR	1276086	Identifier	pfs		1276031	0					
ANR	1276087	Identifier	monotonic_color		1276031	1					
ANR	1276088	IdentifierDeclStatement	bool linear_color_save = pfs -> linear_color ;	3327:4:124405:124447	1276031	6	True				
ANR	1276089	IdentifierDecl	linear_color_save = pfs -> linear_color		1276031	0					
ANR	1276090	IdentifierDeclType	bool		1276031	0					
ANR	1276091	Identifier	linear_color_save		1276031	1					
ANR	1276092	AssignmentExpression	linear_color_save = pfs -> linear_color		1276031	2		=			
ANR	1276093	Identifier	linear_color_save		1276031	0					
ANR	1276094	PtrMemberAccess	pfs -> linear_color		1276031	1					
ANR	1276095	Identifier	pfs		1276031	0					
ANR	1276096	Identifier	linear_color		1276031	1					
ANR	1276097	IdentifierDeclStatement	bool inside_save = pfs -> inside ;	3328:4:124453:124483	1276031	7	True				
ANR	1276098	IdentifierDecl	inside_save = pfs -> inside		1276031	0					
ANR	1276099	IdentifierDeclType	bool		1276031	0					
ANR	1276100	Identifier	inside_save		1276031	1					
ANR	1276101	AssignmentExpression	inside_save = pfs -> inside		1276031	2		=			
ANR	1276102	Identifier	inside_save		1276031	0					
ANR	1276103	PtrMemberAccess	pfs -> inside		1276031	1					
ANR	1276104	Identifier	pfs		1276031	0					
ANR	1276105	Identifier	inside		1276031	1					
ANR	1276106	IdentifierDeclStatement	const bool inside = pfs -> inside ;	3329:4:124489:124520	1276031	8	True				
ANR	1276107	IdentifierDecl	inside = pfs -> inside		1276031	0					
ANR	1276108	IdentifierDeclType	const bool		1276031	0					
ANR	1276109	Identifier	inside		1276031	1					
ANR	1276110	AssignmentExpression	inside = pfs -> inside		1276031	2		=			
ANR	1276111	Identifier	inside		1276031	0					
ANR	1276112	PtrMemberAccess	pfs -> inside		1276031	1					
ANR	1276113	Identifier	pfs		1276031	0					
ANR	1276114	Identifier	inside		1276031	1					
ANR	1276115	IdentifierDeclStatement	"gs_fixed_rect r = { { 0 , 0 } , { 0 , 0 } } , r1 = { { 0 , 0 } , { 0 , 0 } } ;"	3330:4:124589:124640	1276031	9	True				
ANR	1276116	IdentifierDecl	"r = { { 0 , 0 } , { 0 , 0 } }"		1276031	0					
ANR	1276117	IdentifierDeclType	gs_fixed_rect		1276031	0					
ANR	1276118	Identifier	r		1276031	1					
ANR	1276119	AssignmentExpression	"r = { { 0 , 0 } , { 0 , 0 } }"		1276031	2		=			
ANR	1276120	Identifier	r		1276031	0					
ANR	1276121	InitializerList	0		1276031	1					
ANR	1276122	InitializerList	0		1276031	0					
ANR	1276123	PrimaryExpression	0		1276031	0					
ANR	1276124	PrimaryExpression	0		1276031	1					
ANR	1276125	InitializerList	0		1276031	1					
ANR	1276126	PrimaryExpression	0		1276031	0					
ANR	1276127	PrimaryExpression	0		1276031	1					
ANR	1276128	IdentifierDecl	"r1 = { { 0 , 0 } , { 0 , 0 } }"		1276031	1					
ANR	1276129	IdentifierDeclType	gs_fixed_rect		1276031	0					
ANR	1276130	Identifier	r1		1276031	1					
ANR	1276131	AssignmentExpression	"r1 = { { 0 , 0 } , { 0 , 0 } }"		1276031	2		=			
ANR	1276132	Identifier	r1		1276031	0					
ANR	1276133	InitializerList	0		1276031	1					
ANR	1276134	InitializerList	0		1276031	0					
ANR	1276135	PrimaryExpression	0		1276031	0					
ANR	1276136	PrimaryExpression	0		1276031	1					
ANR	1276137	InitializerList	0		1276031	1					
ANR	1276138	PrimaryExpression	0		1276031	0					
ANR	1276139	PrimaryExpression	0		1276031	1					
ANR	1276140	IfStatement	if ( ! inside )		1276031	10					
ANR	1276141	Condition	! inside	3333:8:124718:124724	1276031	0	True				
ANR	1276142	UnaryOperationExpression	! inside		1276031	0					
ANR	1276143	UnaryOperator	!		1276031	0					
ANR	1276144	Identifier	inside		1276031	1					
ANR	1276145	CompoundStatement		17:17:762:762	1276031	1					
ANR	1276146	ExpressionStatement	"bbox_of_points ( & r , & p -> p [ 0 ] [ 0 ] -> p , & p -> p [ 0 ] [ 1 ] -> p , & p -> p [ 1 ] [ 0 ] -> p , & p -> p [ 1 ] [ 1 ] -> p )"	3334:8:124737:124819	1276031	0	True				
ANR	1276147	CallExpression	"bbox_of_points ( & r , & p -> p [ 0 ] [ 0 ] -> p , & p -> p [ 0 ] [ 1 ] -> p , & p -> p [ 1 ] [ 0 ] -> p , & p -> p [ 1 ] [ 1 ] -> p )"		1276031	0					
ANR	1276148	Callee	bbox_of_points		1276031	0					
ANR	1276149	Identifier	bbox_of_points		1276031	0					
ANR	1276150	ArgumentList	& r		1276031	1					
ANR	1276151	Argument	& r		1276031	0					
ANR	1276152	UnaryOperationExpression	& r		1276031	0					
ANR	1276153	UnaryOperator	&		1276031	0					
ANR	1276154	Identifier	r		1276031	1					
ANR	1276155	Argument	& p -> p [ 0 ] [ 0 ] -> p		1276031	1					
ANR	1276156	UnaryOperationExpression	& p -> p [ 0 ] [ 0 ] -> p		1276031	0					
ANR	1276157	UnaryOperator	&		1276031	0					
ANR	1276158	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> p		1276031	1					
ANR	1276159	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1276031	0					
ANR	1276160	ArrayIndexing	p -> p [ 0 ]		1276031	0					
ANR	1276161	PtrMemberAccess	p -> p		1276031	0					
ANR	1276162	Identifier	p		1276031	0					
ANR	1276163	Identifier	p		1276031	1					
ANR	1276164	PrimaryExpression	0		1276031	1					
ANR	1276165	PrimaryExpression	0		1276031	1					
ANR	1276166	Identifier	p		1276031	1					
ANR	1276167	Argument	& p -> p [ 0 ] [ 1 ] -> p		1276031	2					
ANR	1276168	UnaryOperationExpression	& p -> p [ 0 ] [ 1 ] -> p		1276031	0					
ANR	1276169	UnaryOperator	&		1276031	0					
ANR	1276170	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> p		1276031	1					
ANR	1276171	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1276031	0					
ANR	1276172	ArrayIndexing	p -> p [ 0 ]		1276031	0					
ANR	1276173	PtrMemberAccess	p -> p		1276031	0					
ANR	1276174	Identifier	p		1276031	0					
ANR	1276175	Identifier	p		1276031	1					
ANR	1276176	PrimaryExpression	0		1276031	1					
ANR	1276177	PrimaryExpression	1		1276031	1					
ANR	1276178	Identifier	p		1276031	1					
ANR	1276179	Argument	& p -> p [ 1 ] [ 0 ] -> p		1276031	3					
ANR	1276180	UnaryOperationExpression	& p -> p [ 1 ] [ 0 ] -> p		1276031	0					
ANR	1276181	UnaryOperator	&		1276031	0					
ANR	1276182	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> p		1276031	1					
ANR	1276183	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1276031	0					
ANR	1276184	ArrayIndexing	p -> p [ 1 ]		1276031	0					
ANR	1276185	PtrMemberAccess	p -> p		1276031	0					
ANR	1276186	Identifier	p		1276031	0					
ANR	1276187	Identifier	p		1276031	1					
ANR	1276188	PrimaryExpression	1		1276031	1					
ANR	1276189	PrimaryExpression	0		1276031	1					
ANR	1276190	Identifier	p		1276031	1					
ANR	1276191	Argument	& p -> p [ 1 ] [ 1 ] -> p		1276031	4					
ANR	1276192	UnaryOperationExpression	& p -> p [ 1 ] [ 1 ] -> p		1276031	0					
ANR	1276193	UnaryOperator	&		1276031	0					
ANR	1276194	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> p		1276031	1					
ANR	1276195	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1276031	0					
ANR	1276196	ArrayIndexing	p -> p [ 1 ]		1276031	0					
ANR	1276197	PtrMemberAccess	p -> p		1276031	0					
ANR	1276198	Identifier	p		1276031	0					
ANR	1276199	Identifier	p		1276031	1					
ANR	1276200	PrimaryExpression	1		1276031	1					
ANR	1276201	PrimaryExpression	1		1276031	1					
ANR	1276202	Identifier	p		1276031	1					
ANR	1276203	ExpressionStatement	r1 = r	3335:8:124829:124835	1276031	1	True				
ANR	1276204	AssignmentExpression	r1 = r		1276031	0		=			
ANR	1276205	Identifier	r1		1276031	0					
ANR	1276206	Identifier	r		1276031	1					
ANR	1276207	ExpressionStatement	"rect_intersect ( r , pfs -> rect )"	3336:8:124845:124873	1276031	2	True				
ANR	1276208	CallExpression	"rect_intersect ( r , pfs -> rect )"		1276031	0					
ANR	1276209	Callee	rect_intersect		1276031	0					
ANR	1276210	Identifier	rect_intersect		1276031	0					
ANR	1276211	ArgumentList	r		1276031	1					
ANR	1276212	Argument	r		1276031	0					
ANR	1276213	Identifier	r		1276031	0					
ANR	1276214	Argument	pfs -> rect		1276031	1					
ANR	1276215	PtrMemberAccess	pfs -> rect		1276031	0					
ANR	1276216	Identifier	pfs		1276031	0					
ANR	1276217	Identifier	rect		1276031	1					
ANR	1276218	IfStatement	if ( r . q . x <= r . p . x || r . q . y <= r . p . y )		1276031	3					
ANR	1276219	Condition	r . q . x <= r . p . x || r . q . y <= r . p . y	3337:12:124887:124918	1276031	0	True				
ANR	1276220	OrExpression	r . q . x <= r . p . x || r . q . y <= r . p . y		1276031	0		||			
ANR	1276221	RelationalExpression	r . q . x <= r . p . x		1276031	0		<=			
ANR	1276222	MemberAccess	r . q . x		1276031	0					
ANR	1276223	MemberAccess	r . q		1276031	0					
ANR	1276224	Identifier	r		1276031	0					
ANR	1276225	Identifier	q		1276031	1					
ANR	1276226	Identifier	x		1276031	1					
ANR	1276227	MemberAccess	r . p . x		1276031	1					
ANR	1276228	MemberAccess	r . p		1276031	0					
ANR	1276229	Identifier	r		1276031	0					
ANR	1276230	Identifier	p		1276031	1					
ANR	1276231	Identifier	x		1276031	1					
ANR	1276232	RelationalExpression	r . q . y <= r . p . y		1276031	1		<=			
ANR	1276233	MemberAccess	r . q . y		1276031	0					
ANR	1276234	MemberAccess	r . q		1276031	0					
ANR	1276235	Identifier	r		1276031	0					
ANR	1276236	Identifier	q		1276031	1					
ANR	1276237	Identifier	y		1276031	1					
ANR	1276238	MemberAccess	r . p . y		1276031	1					
ANR	1276239	MemberAccess	r . p		1276031	0					
ANR	1276240	Identifier	r		1276031	0					
ANR	1276241	Identifier	p		1276031	1					
ANR	1276242	Identifier	y		1276031	1					
ANR	1276243	ReturnStatement	return 0 ;	3338:12:124933:124941	1276031	1	True				
ANR	1276244	PrimaryExpression	0		1276031	0					
ANR	1276245	IfStatement	if ( big )		1276031	11					
ANR	1276246	Condition	big	3340:8:124972:124974	1276031	0	True				
ANR	1276247	Identifier	big		1276031	0					
ANR	1276248	CompoundStatement		33:8:1557:1850	1276031	1					
ANR	1276249	IdentifierDeclStatement	"fixed size_u = max ( max ( any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 0 ] [ 1 ] -> p . x ) , any_abs ( p -> p [ 1 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x ) ) , max ( any_abs ( p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 0 ] [ 1 ] -> p . y ) , any_abs ( p -> p [ 1 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y ) ) ) ;"	3345:8:125219:125512	1276031	0	True				
ANR	1276250	IdentifierDecl	"size_u = max ( max ( any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 0 ] [ 1 ] -> p . x ) , any_abs ( p -> p [ 1 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x ) ) , max ( any_abs ( p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 0 ] [ 1 ] -> p . y ) , any_abs ( p -> p [ 1 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y ) ) )"		1276031	0					
ANR	1276251	IdentifierDeclType	fixed		1276031	0					
ANR	1276252	Identifier	size_u		1276031	1					
ANR	1276253	AssignmentExpression	"size_u = max ( max ( any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 0 ] [ 1 ] -> p . x ) , any_abs ( p -> p [ 1 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x ) ) , max ( any_abs ( p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 0 ] [ 1 ] -> p . y ) , any_abs ( p -> p [ 1 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y ) ) )"		1276031	2		=			
ANR	1276254	Identifier	size_u		1276031	0					
ANR	1276255	CallExpression	"max ( max ( any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 0 ] [ 1 ] -> p . x ) , any_abs ( p -> p [ 1 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x ) ) , max ( any_abs ( p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 0 ] [ 1 ] -> p . y ) , any_abs ( p -> p [ 1 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y ) ) )"		1276031	1					
ANR	1276256	Callee	max		1276031	0					
ANR	1276257	Identifier	max		1276031	0					
ANR	1276258	ArgumentList	"max ( any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 0 ] [ 1 ] -> p . x ) , any_abs ( p -> p [ 1 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x ) )"		1276031	1					
ANR	1276259	Argument	"max ( any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 0 ] [ 1 ] -> p . x ) , any_abs ( p -> p [ 1 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x ) )"		1276031	0					
ANR	1276260	CallExpression	"max ( any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 0 ] [ 1 ] -> p . x ) , any_abs ( p -> p [ 1 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x ) )"		1276031	0					
ANR	1276261	Callee	max		1276031	0					
ANR	1276262	Identifier	max		1276031	0					
ANR	1276263	ArgumentList	any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 0 ] [ 1 ] -> p . x )		1276031	1					
ANR	1276264	Argument	any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 0 ] [ 1 ] -> p . x )		1276031	0					
ANR	1276265	CallExpression	any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 0 ] [ 1 ] -> p . x )		1276031	0					
ANR	1276266	Callee	any_abs		1276031	0					
ANR	1276267	Identifier	any_abs		1276031	0					
ANR	1276268	ArgumentList	p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 0 ] [ 1 ] -> p . x		1276031	1					
ANR	1276269	Argument	p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 0 ] [ 1 ] -> p . x		1276031	0					
ANR	1276270	AdditiveExpression	p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 0 ] [ 1 ] -> p . x		1276031	0		-			
ANR	1276271	MemberAccess	p -> p [ 0 ] [ 0 ] -> p . x		1276031	0					
ANR	1276272	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> p		1276031	0					
ANR	1276273	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1276031	0					
ANR	1276274	ArrayIndexing	p -> p [ 0 ]		1276031	0					
ANR	1276275	PtrMemberAccess	p -> p		1276031	0					
ANR	1276276	Identifier	p		1276031	0					
ANR	1276277	Identifier	p		1276031	1					
ANR	1276278	PrimaryExpression	0		1276031	1					
ANR	1276279	PrimaryExpression	0		1276031	1					
ANR	1276280	Identifier	p		1276031	1					
ANR	1276281	Identifier	x		1276031	1					
ANR	1276282	MemberAccess	p -> p [ 0 ] [ 1 ] -> p . x		1276031	1					
ANR	1276283	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> p		1276031	0					
ANR	1276284	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1276031	0					
ANR	1276285	ArrayIndexing	p -> p [ 0 ]		1276031	0					
ANR	1276286	PtrMemberAccess	p -> p		1276031	0					
ANR	1276287	Identifier	p		1276031	0					
ANR	1276288	Identifier	p		1276031	1					
ANR	1276289	PrimaryExpression	0		1276031	1					
ANR	1276290	PrimaryExpression	1		1276031	1					
ANR	1276291	Identifier	p		1276031	1					
ANR	1276292	Identifier	x		1276031	1					
ANR	1276293	Argument	any_abs ( p -> p [ 1 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x )		1276031	1					
ANR	1276294	CallExpression	any_abs ( p -> p [ 1 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x )		1276031	0					
ANR	1276295	Callee	any_abs		1276031	0					
ANR	1276296	Identifier	any_abs		1276031	0					
ANR	1276297	ArgumentList	p -> p [ 1 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x		1276031	1					
ANR	1276298	Argument	p -> p [ 1 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x		1276031	0					
ANR	1276299	AdditiveExpression	p -> p [ 1 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x		1276031	0		-			
ANR	1276300	MemberAccess	p -> p [ 1 ] [ 0 ] -> p . x		1276031	0					
ANR	1276301	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> p		1276031	0					
ANR	1276302	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1276031	0					
ANR	1276303	ArrayIndexing	p -> p [ 1 ]		1276031	0					
ANR	1276304	PtrMemberAccess	p -> p		1276031	0					
ANR	1276305	Identifier	p		1276031	0					
ANR	1276306	Identifier	p		1276031	1					
ANR	1276307	PrimaryExpression	1		1276031	1					
ANR	1276308	PrimaryExpression	0		1276031	1					
ANR	1276309	Identifier	p		1276031	1					
ANR	1276310	Identifier	x		1276031	1					
ANR	1276311	MemberAccess	p -> p [ 1 ] [ 1 ] -> p . x		1276031	1					
ANR	1276312	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> p		1276031	0					
ANR	1276313	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1276031	0					
ANR	1276314	ArrayIndexing	p -> p [ 1 ]		1276031	0					
ANR	1276315	PtrMemberAccess	p -> p		1276031	0					
ANR	1276316	Identifier	p		1276031	0					
ANR	1276317	Identifier	p		1276031	1					
ANR	1276318	PrimaryExpression	1		1276031	1					
ANR	1276319	PrimaryExpression	1		1276031	1					
ANR	1276320	Identifier	p		1276031	1					
ANR	1276321	Identifier	x		1276031	1					
ANR	1276322	Argument	"max ( any_abs ( p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 0 ] [ 1 ] -> p . y ) , any_abs ( p -> p [ 1 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y ) )"		1276031	1					
ANR	1276323	CallExpression	"max ( any_abs ( p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 0 ] [ 1 ] -> p . y ) , any_abs ( p -> p [ 1 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y ) )"		1276031	0					
ANR	1276324	Callee	max		1276031	0					
ANR	1276325	Identifier	max		1276031	0					
ANR	1276326	ArgumentList	any_abs ( p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 0 ] [ 1 ] -> p . y )		1276031	1					
ANR	1276327	Argument	any_abs ( p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 0 ] [ 1 ] -> p . y )		1276031	0					
ANR	1276328	CallExpression	any_abs ( p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 0 ] [ 1 ] -> p . y )		1276031	0					
ANR	1276329	Callee	any_abs		1276031	0					
ANR	1276330	Identifier	any_abs		1276031	0					
ANR	1276331	ArgumentList	p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 0 ] [ 1 ] -> p . y		1276031	1					
ANR	1276332	Argument	p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 0 ] [ 1 ] -> p . y		1276031	0					
ANR	1276333	AdditiveExpression	p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 0 ] [ 1 ] -> p . y		1276031	0		-			
ANR	1276334	MemberAccess	p -> p [ 0 ] [ 0 ] -> p . y		1276031	0					
ANR	1276335	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> p		1276031	0					
ANR	1276336	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1276031	0					
ANR	1276337	ArrayIndexing	p -> p [ 0 ]		1276031	0					
ANR	1276338	PtrMemberAccess	p -> p		1276031	0					
ANR	1276339	Identifier	p		1276031	0					
ANR	1276340	Identifier	p		1276031	1					
ANR	1276341	PrimaryExpression	0		1276031	1					
ANR	1276342	PrimaryExpression	0		1276031	1					
ANR	1276343	Identifier	p		1276031	1					
ANR	1276344	Identifier	y		1276031	1					
ANR	1276345	MemberAccess	p -> p [ 0 ] [ 1 ] -> p . y		1276031	1					
ANR	1276346	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> p		1276031	0					
ANR	1276347	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1276031	0					
ANR	1276348	ArrayIndexing	p -> p [ 0 ]		1276031	0					
ANR	1276349	PtrMemberAccess	p -> p		1276031	0					
ANR	1276350	Identifier	p		1276031	0					
ANR	1276351	Identifier	p		1276031	1					
ANR	1276352	PrimaryExpression	0		1276031	1					
ANR	1276353	PrimaryExpression	1		1276031	1					
ANR	1276354	Identifier	p		1276031	1					
ANR	1276355	Identifier	y		1276031	1					
ANR	1276356	Argument	any_abs ( p -> p [ 1 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y )		1276031	1					
ANR	1276357	CallExpression	any_abs ( p -> p [ 1 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y )		1276031	0					
ANR	1276358	Callee	any_abs		1276031	0					
ANR	1276359	Identifier	any_abs		1276031	0					
ANR	1276360	ArgumentList	p -> p [ 1 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y		1276031	1					
ANR	1276361	Argument	p -> p [ 1 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y		1276031	0					
ANR	1276362	AdditiveExpression	p -> p [ 1 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y		1276031	0		-			
ANR	1276363	MemberAccess	p -> p [ 1 ] [ 0 ] -> p . y		1276031	0					
ANR	1276364	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> p		1276031	0					
ANR	1276365	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1276031	0					
ANR	1276366	ArrayIndexing	p -> p [ 1 ]		1276031	0					
ANR	1276367	PtrMemberAccess	p -> p		1276031	0					
ANR	1276368	Identifier	p		1276031	0					
ANR	1276369	Identifier	p		1276031	1					
ANR	1276370	PrimaryExpression	1		1276031	1					
ANR	1276371	PrimaryExpression	0		1276031	1					
ANR	1276372	Identifier	p		1276031	1					
ANR	1276373	Identifier	y		1276031	1					
ANR	1276374	MemberAccess	p -> p [ 1 ] [ 1 ] -> p . y		1276031	1					
ANR	1276375	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> p		1276031	0					
ANR	1276376	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1276031	0					
ANR	1276377	ArrayIndexing	p -> p [ 1 ]		1276031	0					
ANR	1276378	PtrMemberAccess	p -> p		1276031	0					
ANR	1276379	Identifier	p		1276031	0					
ANR	1276380	Identifier	p		1276031	1					
ANR	1276381	PrimaryExpression	1		1276031	1					
ANR	1276382	PrimaryExpression	1		1276031	1					
ANR	1276383	Identifier	p		1276031	1					
ANR	1276384	Identifier	y		1276031	1					
ANR	1276385	IdentifierDeclStatement	"fixed size_v = max ( max ( any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 0 ] -> p . x ) , any_abs ( p -> p [ 0 ] [ 1 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x ) ) , max ( any_abs ( p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 0 ] -> p . y ) , any_abs ( p -> p [ 0 ] [ 1 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y ) ) ) ;"	3349:8:125522:125815	1276031	1	True				
ANR	1276386	IdentifierDecl	"size_v = max ( max ( any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 0 ] -> p . x ) , any_abs ( p -> p [ 0 ] [ 1 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x ) ) , max ( any_abs ( p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 0 ] -> p . y ) , any_abs ( p -> p [ 0 ] [ 1 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y ) ) )"		1276031	0					
ANR	1276387	IdentifierDeclType	fixed		1276031	0					
ANR	1276388	Identifier	size_v		1276031	1					
ANR	1276389	AssignmentExpression	"size_v = max ( max ( any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 0 ] -> p . x ) , any_abs ( p -> p [ 0 ] [ 1 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x ) ) , max ( any_abs ( p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 0 ] -> p . y ) , any_abs ( p -> p [ 0 ] [ 1 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y ) ) )"		1276031	2		=			
ANR	1276390	Identifier	size_v		1276031	0					
ANR	1276391	CallExpression	"max ( max ( any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 0 ] -> p . x ) , any_abs ( p -> p [ 0 ] [ 1 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x ) ) , max ( any_abs ( p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 0 ] -> p . y ) , any_abs ( p -> p [ 0 ] [ 1 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y ) ) )"		1276031	1					
ANR	1276392	Callee	max		1276031	0					
ANR	1276393	Identifier	max		1276031	0					
ANR	1276394	ArgumentList	"max ( any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 0 ] -> p . x ) , any_abs ( p -> p [ 0 ] [ 1 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x ) )"		1276031	1					
ANR	1276395	Argument	"max ( any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 0 ] -> p . x ) , any_abs ( p -> p [ 0 ] [ 1 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x ) )"		1276031	0					
ANR	1276396	CallExpression	"max ( any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 0 ] -> p . x ) , any_abs ( p -> p [ 0 ] [ 1 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x ) )"		1276031	0					
ANR	1276397	Callee	max		1276031	0					
ANR	1276398	Identifier	max		1276031	0					
ANR	1276399	ArgumentList	any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 0 ] -> p . x )		1276031	1					
ANR	1276400	Argument	any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 0 ] -> p . x )		1276031	0					
ANR	1276401	CallExpression	any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 0 ] -> p . x )		1276031	0					
ANR	1276402	Callee	any_abs		1276031	0					
ANR	1276403	Identifier	any_abs		1276031	0					
ANR	1276404	ArgumentList	p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 0 ] -> p . x		1276031	1					
ANR	1276405	Argument	p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 0 ] -> p . x		1276031	0					
ANR	1276406	AdditiveExpression	p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 0 ] -> p . x		1276031	0		-			
ANR	1276407	MemberAccess	p -> p [ 0 ] [ 0 ] -> p . x		1276031	0					
ANR	1276408	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> p		1276031	0					
ANR	1276409	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1276031	0					
ANR	1276410	ArrayIndexing	p -> p [ 0 ]		1276031	0					
ANR	1276411	PtrMemberAccess	p -> p		1276031	0					
ANR	1276412	Identifier	p		1276031	0					
ANR	1276413	Identifier	p		1276031	1					
ANR	1276414	PrimaryExpression	0		1276031	1					
ANR	1276415	PrimaryExpression	0		1276031	1					
ANR	1276416	Identifier	p		1276031	1					
ANR	1276417	Identifier	x		1276031	1					
ANR	1276418	MemberAccess	p -> p [ 1 ] [ 0 ] -> p . x		1276031	1					
ANR	1276419	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> p		1276031	0					
ANR	1276420	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1276031	0					
ANR	1276421	ArrayIndexing	p -> p [ 1 ]		1276031	0					
ANR	1276422	PtrMemberAccess	p -> p		1276031	0					
ANR	1276423	Identifier	p		1276031	0					
ANR	1276424	Identifier	p		1276031	1					
ANR	1276425	PrimaryExpression	1		1276031	1					
ANR	1276426	PrimaryExpression	0		1276031	1					
ANR	1276427	Identifier	p		1276031	1					
ANR	1276428	Identifier	x		1276031	1					
ANR	1276429	Argument	any_abs ( p -> p [ 0 ] [ 1 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x )		1276031	1					
ANR	1276430	CallExpression	any_abs ( p -> p [ 0 ] [ 1 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x )		1276031	0					
ANR	1276431	Callee	any_abs		1276031	0					
ANR	1276432	Identifier	any_abs		1276031	0					
ANR	1276433	ArgumentList	p -> p [ 0 ] [ 1 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x		1276031	1					
ANR	1276434	Argument	p -> p [ 0 ] [ 1 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x		1276031	0					
ANR	1276435	AdditiveExpression	p -> p [ 0 ] [ 1 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x		1276031	0		-			
ANR	1276436	MemberAccess	p -> p [ 0 ] [ 1 ] -> p . x		1276031	0					
ANR	1276437	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> p		1276031	0					
ANR	1276438	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1276031	0					
ANR	1276439	ArrayIndexing	p -> p [ 0 ]		1276031	0					
ANR	1276440	PtrMemberAccess	p -> p		1276031	0					
ANR	1276441	Identifier	p		1276031	0					
ANR	1276442	Identifier	p		1276031	1					
ANR	1276443	PrimaryExpression	0		1276031	1					
ANR	1276444	PrimaryExpression	1		1276031	1					
ANR	1276445	Identifier	p		1276031	1					
ANR	1276446	Identifier	x		1276031	1					
ANR	1276447	MemberAccess	p -> p [ 1 ] [ 1 ] -> p . x		1276031	1					
ANR	1276448	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> p		1276031	0					
ANR	1276449	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1276031	0					
ANR	1276450	ArrayIndexing	p -> p [ 1 ]		1276031	0					
ANR	1276451	PtrMemberAccess	p -> p		1276031	0					
ANR	1276452	Identifier	p		1276031	0					
ANR	1276453	Identifier	p		1276031	1					
ANR	1276454	PrimaryExpression	1		1276031	1					
ANR	1276455	PrimaryExpression	1		1276031	1					
ANR	1276456	Identifier	p		1276031	1					
ANR	1276457	Identifier	x		1276031	1					
ANR	1276458	Argument	"max ( any_abs ( p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 0 ] -> p . y ) , any_abs ( p -> p [ 0 ] [ 1 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y ) )"		1276031	1					
ANR	1276459	CallExpression	"max ( any_abs ( p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 0 ] -> p . y ) , any_abs ( p -> p [ 0 ] [ 1 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y ) )"		1276031	0					
ANR	1276460	Callee	max		1276031	0					
ANR	1276461	Identifier	max		1276031	0					
ANR	1276462	ArgumentList	any_abs ( p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 0 ] -> p . y )		1276031	1					
ANR	1276463	Argument	any_abs ( p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 0 ] -> p . y )		1276031	0					
ANR	1276464	CallExpression	any_abs ( p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 0 ] -> p . y )		1276031	0					
ANR	1276465	Callee	any_abs		1276031	0					
ANR	1276466	Identifier	any_abs		1276031	0					
ANR	1276467	ArgumentList	p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 0 ] -> p . y		1276031	1					
ANR	1276468	Argument	p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 0 ] -> p . y		1276031	0					
ANR	1276469	AdditiveExpression	p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 0 ] -> p . y		1276031	0		-			
ANR	1276470	MemberAccess	p -> p [ 0 ] [ 0 ] -> p . y		1276031	0					
ANR	1276471	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> p		1276031	0					
ANR	1276472	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1276031	0					
ANR	1276473	ArrayIndexing	p -> p [ 0 ]		1276031	0					
ANR	1276474	PtrMemberAccess	p -> p		1276031	0					
ANR	1276475	Identifier	p		1276031	0					
ANR	1276476	Identifier	p		1276031	1					
ANR	1276477	PrimaryExpression	0		1276031	1					
ANR	1276478	PrimaryExpression	0		1276031	1					
ANR	1276479	Identifier	p		1276031	1					
ANR	1276480	Identifier	y		1276031	1					
ANR	1276481	MemberAccess	p -> p [ 1 ] [ 0 ] -> p . y		1276031	1					
ANR	1276482	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> p		1276031	0					
ANR	1276483	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1276031	0					
ANR	1276484	ArrayIndexing	p -> p [ 1 ]		1276031	0					
ANR	1276485	PtrMemberAccess	p -> p		1276031	0					
ANR	1276486	Identifier	p		1276031	0					
ANR	1276487	Identifier	p		1276031	1					
ANR	1276488	PrimaryExpression	1		1276031	1					
ANR	1276489	PrimaryExpression	0		1276031	1					
ANR	1276490	Identifier	p		1276031	1					
ANR	1276491	Identifier	y		1276031	1					
ANR	1276492	Argument	any_abs ( p -> p [ 0 ] [ 1 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y )		1276031	1					
ANR	1276493	CallExpression	any_abs ( p -> p [ 0 ] [ 1 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y )		1276031	0					
ANR	1276494	Callee	any_abs		1276031	0					
ANR	1276495	Identifier	any_abs		1276031	0					
ANR	1276496	ArgumentList	p -> p [ 0 ] [ 1 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y		1276031	1					
ANR	1276497	Argument	p -> p [ 0 ] [ 1 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y		1276031	0					
ANR	1276498	AdditiveExpression	p -> p [ 0 ] [ 1 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y		1276031	0		-			
ANR	1276499	MemberAccess	p -> p [ 0 ] [ 1 ] -> p . y		1276031	0					
ANR	1276500	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> p		1276031	0					
ANR	1276501	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1276031	0					
ANR	1276502	ArrayIndexing	p -> p [ 0 ]		1276031	0					
ANR	1276503	PtrMemberAccess	p -> p		1276031	0					
ANR	1276504	Identifier	p		1276031	0					
ANR	1276505	Identifier	p		1276031	1					
ANR	1276506	PrimaryExpression	0		1276031	1					
ANR	1276507	PrimaryExpression	1		1276031	1					
ANR	1276508	Identifier	p		1276031	1					
ANR	1276509	Identifier	y		1276031	1					
ANR	1276510	MemberAccess	p -> p [ 1 ] [ 1 ] -> p . y		1276031	1					
ANR	1276511	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> p		1276031	0					
ANR	1276512	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1276031	0					
ANR	1276513	ArrayIndexing	p -> p [ 1 ]		1276031	0					
ANR	1276514	PtrMemberAccess	p -> p		1276031	0					
ANR	1276515	Identifier	p		1276031	0					
ANR	1276516	Identifier	p		1276031	1					
ANR	1276517	PrimaryExpression	1		1276031	1					
ANR	1276518	PrimaryExpression	1		1276031	1					
ANR	1276519	Identifier	p		1276031	1					
ANR	1276520	Identifier	y		1276031	1					
ANR	1276521	IfStatement	if ( QUADRANGLES && pfs -> maybe_self_intersecting )		1276031	2					
ANR	1276522	Condition	QUADRANGLES && pfs -> maybe_self_intersecting	3354:12:125830:125872	1276031	0	True				
ANR	1276523	AndExpression	QUADRANGLES && pfs -> maybe_self_intersecting		1276031	0		&&			
ANR	1276524	Identifier	QUADRANGLES		1276031	0					
ANR	1276525	PtrMemberAccess	pfs -> maybe_self_intersecting		1276031	1					
ANR	1276526	Identifier	pfs		1276031	0					
ANR	1276527	Identifier	maybe_self_intersecting		1276031	1					
ANR	1276528	CompoundStatement		38:57:1910:1910	1276031	1					
ANR	1276529	IfStatement	if ( size_v > pfs -> max_small_coord )		1276031	0					
ANR	1276530	Condition	size_v > pfs -> max_small_coord	3355:16:125893:125921	1276031	0	True				
ANR	1276531	RelationalExpression	size_v > pfs -> max_small_coord		1276031	0		>			
ANR	1276532	Identifier	size_v		1276031	0					
ANR	1276533	PtrMemberAccess	pfs -> max_small_coord		1276031	1					
ANR	1276534	Identifier	pfs		1276031	0					
ANR	1276535	Identifier	max_small_coord		1276031	1					
ANR	1276536	CompoundStatement		39:47:1959:1959	1276031	1					
ANR	1276537	ExpressionStatement	divide_v = true	3358:16:126087:126102	1276031	0	True				
ANR	1276538	AssignmentExpression	divide_v = true		1276031	0		=			
ANR	1276539	Identifier	divide_v		1276031	0					
ANR	1276540	Identifier	true		1276031	1					
ANR	1276541	ElseStatement	else		1276031	0					
ANR	1276542	IfStatement	if ( size_u > pfs -> max_small_coord )		1276031	0					
ANR	1276543	Condition	size_u > pfs -> max_small_coord	3359:23:126127:126155	1276031	0	True				
ANR	1276544	RelationalExpression	size_u > pfs -> max_small_coord		1276031	0		>			
ANR	1276545	Identifier	size_u		1276031	0					
ANR	1276546	PtrMemberAccess	pfs -> max_small_coord		1276031	1					
ANR	1276547	Identifier	pfs		1276031	0					
ANR	1276548	Identifier	max_small_coord		1276031	1					
ANR	1276549	CompoundStatement		43:54:2193:2193	1276031	1					
ANR	1276550	ExpressionStatement	divide_u = true	3362:16:126322:126337	1276031	0	True				
ANR	1276551	AssignmentExpression	divide_u = true		1276031	0		=			
ANR	1276552	Identifier	divide_u		1276031	0					
ANR	1276553	Identifier	true		1276031	1					
ANR	1276554	ElseStatement	else		1276031	0					
ANR	1276555	ExpressionStatement	big1 = false	3364:16:126374:126386	1276031	0	True				
ANR	1276556	AssignmentExpression	big1 = false		1276031	0		=			
ANR	1276557	Identifier	big1		1276031	0					
ANR	1276558	Identifier	false		1276031	1					
ANR	1276559	ElseStatement	else		1276031	0					
ANR	1276560	ExpressionStatement	big1 = false	3366:12:126415:126427	1276031	0	True				
ANR	1276561	AssignmentExpression	big1 = false		1276031	0		=			
ANR	1276562	Identifier	big1		1276031	0					
ANR	1276563	Identifier	false		1276031	1					
ANR	1276564	IfStatement	if ( ! big1 )		1276031	12					
ANR	1276565	Condition	! big1	3368:8:126443:126447	1276031	0	True				
ANR	1276566	UnaryOperationExpression	! big1		1276031	0					
ANR	1276567	UnaryOperator	!		1276031	0					
ANR	1276568	Identifier	big1		1276031	1					
ANR	1276569	CompoundStatement		63:8:3159:3220	1276031	1					
ANR	1276570	IdentifierDeclStatement	"bool is_big_u = false , is_big_v = false ;"	3369:8:126460:126499	1276031	0	True				
ANR	1276571	IdentifierDecl	is_big_u = false		1276031	0					
ANR	1276572	IdentifierDeclType	bool		1276031	0					
ANR	1276573	Identifier	is_big_u		1276031	1					
ANR	1276574	AssignmentExpression	is_big_u = false		1276031	2		=			
ANR	1276575	Identifier	false		1276031	0					
ANR	1276576	Identifier	false		1276031	1					
ANR	1276577	IdentifierDecl	is_big_v = false		1276031	1					
ANR	1276578	IdentifierDeclType	bool		1276031	0					
ANR	1276579	Identifier	is_big_v		1276031	1					
ANR	1276580	AssignmentExpression	is_big_v = false		1276031	2		=			
ANR	1276581	Identifier	false		1276031	0					
ANR	1276582	Identifier	false		1276031	1					
ANR	1276583	IdentifierDeclStatement	double d0001x = any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 0 ] [ 1 ] -> p . x ) ;	3370:8:126509:126567	1276031	1	True				
ANR	1276584	IdentifierDecl	d0001x = any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 0 ] [ 1 ] -> p . x )		1276031	0					
ANR	1276585	IdentifierDeclType	double		1276031	0					
ANR	1276586	Identifier	d0001x		1276031	1					
ANR	1276587	AssignmentExpression	d0001x = any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 0 ] [ 1 ] -> p . x )		1276031	2		=			
ANR	1276588	Identifier	d0001x		1276031	0					
ANR	1276589	CallExpression	any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 0 ] [ 1 ] -> p . x )		1276031	1					
ANR	1276590	Callee	any_abs		1276031	0					
ANR	1276591	Identifier	any_abs		1276031	0					
ANR	1276592	ArgumentList	p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 0 ] [ 1 ] -> p . x		1276031	1					
ANR	1276593	Argument	p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 0 ] [ 1 ] -> p . x		1276031	0					
ANR	1276594	AdditiveExpression	p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 0 ] [ 1 ] -> p . x		1276031	0		-			
ANR	1276595	MemberAccess	p -> p [ 0 ] [ 0 ] -> p . x		1276031	0					
ANR	1276596	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> p		1276031	0					
ANR	1276597	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1276031	0					
ANR	1276598	ArrayIndexing	p -> p [ 0 ]		1276031	0					
ANR	1276599	PtrMemberAccess	p -> p		1276031	0					
ANR	1276600	Identifier	p		1276031	0					
ANR	1276601	Identifier	p		1276031	1					
ANR	1276602	PrimaryExpression	0		1276031	1					
ANR	1276603	PrimaryExpression	0		1276031	1					
ANR	1276604	Identifier	p		1276031	1					
ANR	1276605	Identifier	x		1276031	1					
ANR	1276606	MemberAccess	p -> p [ 0 ] [ 1 ] -> p . x		1276031	1					
ANR	1276607	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> p		1276031	0					
ANR	1276608	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1276031	0					
ANR	1276609	ArrayIndexing	p -> p [ 0 ]		1276031	0					
ANR	1276610	PtrMemberAccess	p -> p		1276031	0					
ANR	1276611	Identifier	p		1276031	0					
ANR	1276612	Identifier	p		1276031	1					
ANR	1276613	PrimaryExpression	0		1276031	1					
ANR	1276614	PrimaryExpression	1		1276031	1					
ANR	1276615	Identifier	p		1276031	1					
ANR	1276616	Identifier	x		1276031	1					
ANR	1276617	IdentifierDeclStatement	double d1011x = any_abs ( p -> p [ 1 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x ) ;	3371:8:126577:126635	1276031	2	True				
ANR	1276618	IdentifierDecl	d1011x = any_abs ( p -> p [ 1 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x )		1276031	0					
ANR	1276619	IdentifierDeclType	double		1276031	0					
ANR	1276620	Identifier	d1011x		1276031	1					
ANR	1276621	AssignmentExpression	d1011x = any_abs ( p -> p [ 1 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x )		1276031	2		=			
ANR	1276622	Identifier	d1011x		1276031	0					
ANR	1276623	CallExpression	any_abs ( p -> p [ 1 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x )		1276031	1					
ANR	1276624	Callee	any_abs		1276031	0					
ANR	1276625	Identifier	any_abs		1276031	0					
ANR	1276626	ArgumentList	p -> p [ 1 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x		1276031	1					
ANR	1276627	Argument	p -> p [ 1 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x		1276031	0					
ANR	1276628	AdditiveExpression	p -> p [ 1 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x		1276031	0		-			
ANR	1276629	MemberAccess	p -> p [ 1 ] [ 0 ] -> p . x		1276031	0					
ANR	1276630	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> p		1276031	0					
ANR	1276631	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1276031	0					
ANR	1276632	ArrayIndexing	p -> p [ 1 ]		1276031	0					
ANR	1276633	PtrMemberAccess	p -> p		1276031	0					
ANR	1276634	Identifier	p		1276031	0					
ANR	1276635	Identifier	p		1276031	1					
ANR	1276636	PrimaryExpression	1		1276031	1					
ANR	1276637	PrimaryExpression	0		1276031	1					
ANR	1276638	Identifier	p		1276031	1					
ANR	1276639	Identifier	x		1276031	1					
ANR	1276640	MemberAccess	p -> p [ 1 ] [ 1 ] -> p . x		1276031	1					
ANR	1276641	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> p		1276031	0					
ANR	1276642	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1276031	0					
ANR	1276643	ArrayIndexing	p -> p [ 1 ]		1276031	0					
ANR	1276644	PtrMemberAccess	p -> p		1276031	0					
ANR	1276645	Identifier	p		1276031	0					
ANR	1276646	Identifier	p		1276031	1					
ANR	1276647	PrimaryExpression	1		1276031	1					
ANR	1276648	PrimaryExpression	1		1276031	1					
ANR	1276649	Identifier	p		1276031	1					
ANR	1276650	Identifier	x		1276031	1					
ANR	1276651	IdentifierDeclStatement	double d0001y = any_abs ( p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 0 ] [ 1 ] -> p . y ) ;	3372:8:126645:126703	1276031	3	True				
ANR	1276652	IdentifierDecl	d0001y = any_abs ( p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 0 ] [ 1 ] -> p . y )		1276031	0					
ANR	1276653	IdentifierDeclType	double		1276031	0					
ANR	1276654	Identifier	d0001y		1276031	1					
ANR	1276655	AssignmentExpression	d0001y = any_abs ( p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 0 ] [ 1 ] -> p . y )		1276031	2		=			
ANR	1276656	Identifier	d0001y		1276031	0					
ANR	1276657	CallExpression	any_abs ( p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 0 ] [ 1 ] -> p . y )		1276031	1					
ANR	1276658	Callee	any_abs		1276031	0					
ANR	1276659	Identifier	any_abs		1276031	0					
ANR	1276660	ArgumentList	p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 0 ] [ 1 ] -> p . y		1276031	1					
ANR	1276661	Argument	p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 0 ] [ 1 ] -> p . y		1276031	0					
ANR	1276662	AdditiveExpression	p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 0 ] [ 1 ] -> p . y		1276031	0		-			
ANR	1276663	MemberAccess	p -> p [ 0 ] [ 0 ] -> p . y		1276031	0					
ANR	1276664	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> p		1276031	0					
ANR	1276665	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1276031	0					
ANR	1276666	ArrayIndexing	p -> p [ 0 ]		1276031	0					
ANR	1276667	PtrMemberAccess	p -> p		1276031	0					
ANR	1276668	Identifier	p		1276031	0					
ANR	1276669	Identifier	p		1276031	1					
ANR	1276670	PrimaryExpression	0		1276031	1					
ANR	1276671	PrimaryExpression	0		1276031	1					
ANR	1276672	Identifier	p		1276031	1					
ANR	1276673	Identifier	y		1276031	1					
ANR	1276674	MemberAccess	p -> p [ 0 ] [ 1 ] -> p . y		1276031	1					
ANR	1276675	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> p		1276031	0					
ANR	1276676	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1276031	0					
ANR	1276677	ArrayIndexing	p -> p [ 0 ]		1276031	0					
ANR	1276678	PtrMemberAccess	p -> p		1276031	0					
ANR	1276679	Identifier	p		1276031	0					
ANR	1276680	Identifier	p		1276031	1					
ANR	1276681	PrimaryExpression	0		1276031	1					
ANR	1276682	PrimaryExpression	1		1276031	1					
ANR	1276683	Identifier	p		1276031	1					
ANR	1276684	Identifier	y		1276031	1					
ANR	1276685	IdentifierDeclStatement	double d1011y = any_abs ( p -> p [ 1 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y ) ;	3373:8:126713:126771	1276031	4	True				
ANR	1276686	IdentifierDecl	d1011y = any_abs ( p -> p [ 1 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y )		1276031	0					
ANR	1276687	IdentifierDeclType	double		1276031	0					
ANR	1276688	Identifier	d1011y		1276031	1					
ANR	1276689	AssignmentExpression	d1011y = any_abs ( p -> p [ 1 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y )		1276031	2		=			
ANR	1276690	Identifier	d1011y		1276031	0					
ANR	1276691	CallExpression	any_abs ( p -> p [ 1 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y )		1276031	1					
ANR	1276692	Callee	any_abs		1276031	0					
ANR	1276693	Identifier	any_abs		1276031	0					
ANR	1276694	ArgumentList	p -> p [ 1 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y		1276031	1					
ANR	1276695	Argument	p -> p [ 1 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y		1276031	0					
ANR	1276696	AdditiveExpression	p -> p [ 1 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y		1276031	0		-			
ANR	1276697	MemberAccess	p -> p [ 1 ] [ 0 ] -> p . y		1276031	0					
ANR	1276698	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> p		1276031	0					
ANR	1276699	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1276031	0					
ANR	1276700	ArrayIndexing	p -> p [ 1 ]		1276031	0					
ANR	1276701	PtrMemberAccess	p -> p		1276031	0					
ANR	1276702	Identifier	p		1276031	0					
ANR	1276703	Identifier	p		1276031	1					
ANR	1276704	PrimaryExpression	1		1276031	1					
ANR	1276705	PrimaryExpression	0		1276031	1					
ANR	1276706	Identifier	p		1276031	1					
ANR	1276707	Identifier	y		1276031	1					
ANR	1276708	MemberAccess	p -> p [ 1 ] [ 1 ] -> p . y		1276031	1					
ANR	1276709	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> p		1276031	0					
ANR	1276710	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1276031	0					
ANR	1276711	ArrayIndexing	p -> p [ 1 ]		1276031	0					
ANR	1276712	PtrMemberAccess	p -> p		1276031	0					
ANR	1276713	Identifier	p		1276031	0					
ANR	1276714	Identifier	p		1276031	1					
ANR	1276715	PrimaryExpression	1		1276031	1					
ANR	1276716	PrimaryExpression	1		1276031	1					
ANR	1276717	Identifier	p		1276031	1					
ANR	1276718	Identifier	y		1276031	1					
ANR	1276719	IdentifierDeclStatement	double d0010x = any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 0 ] -> p . x ) ;	3374:8:126781:126839	1276031	5	True				
ANR	1276720	IdentifierDecl	d0010x = any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 0 ] -> p . x )		1276031	0					
ANR	1276721	IdentifierDeclType	double		1276031	0					
ANR	1276722	Identifier	d0010x		1276031	1					
ANR	1276723	AssignmentExpression	d0010x = any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 0 ] -> p . x )		1276031	2		=			
ANR	1276724	Identifier	d0010x		1276031	0					
ANR	1276725	CallExpression	any_abs ( p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 0 ] -> p . x )		1276031	1					
ANR	1276726	Callee	any_abs		1276031	0					
ANR	1276727	Identifier	any_abs		1276031	0					
ANR	1276728	ArgumentList	p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 0 ] -> p . x		1276031	1					
ANR	1276729	Argument	p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 0 ] -> p . x		1276031	0					
ANR	1276730	AdditiveExpression	p -> p [ 0 ] [ 0 ] -> p . x - p -> p [ 1 ] [ 0 ] -> p . x		1276031	0		-			
ANR	1276731	MemberAccess	p -> p [ 0 ] [ 0 ] -> p . x		1276031	0					
ANR	1276732	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> p		1276031	0					
ANR	1276733	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1276031	0					
ANR	1276734	ArrayIndexing	p -> p [ 0 ]		1276031	0					
ANR	1276735	PtrMemberAccess	p -> p		1276031	0					
ANR	1276736	Identifier	p		1276031	0					
ANR	1276737	Identifier	p		1276031	1					
ANR	1276738	PrimaryExpression	0		1276031	1					
ANR	1276739	PrimaryExpression	0		1276031	1					
ANR	1276740	Identifier	p		1276031	1					
ANR	1276741	Identifier	x		1276031	1					
ANR	1276742	MemberAccess	p -> p [ 1 ] [ 0 ] -> p . x		1276031	1					
ANR	1276743	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> p		1276031	0					
ANR	1276744	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1276031	0					
ANR	1276745	ArrayIndexing	p -> p [ 1 ]		1276031	0					
ANR	1276746	PtrMemberAccess	p -> p		1276031	0					
ANR	1276747	Identifier	p		1276031	0					
ANR	1276748	Identifier	p		1276031	1					
ANR	1276749	PrimaryExpression	1		1276031	1					
ANR	1276750	PrimaryExpression	0		1276031	1					
ANR	1276751	Identifier	p		1276031	1					
ANR	1276752	Identifier	x		1276031	1					
ANR	1276753	IdentifierDeclStatement	double d0111x = any_abs ( p -> p [ 0 ] [ 1 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x ) ;	3375:8:126849:126907	1276031	6	True				
ANR	1276754	IdentifierDecl	d0111x = any_abs ( p -> p [ 0 ] [ 1 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x )		1276031	0					
ANR	1276755	IdentifierDeclType	double		1276031	0					
ANR	1276756	Identifier	d0111x		1276031	1					
ANR	1276757	AssignmentExpression	d0111x = any_abs ( p -> p [ 0 ] [ 1 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x )		1276031	2		=			
ANR	1276758	Identifier	d0111x		1276031	0					
ANR	1276759	CallExpression	any_abs ( p -> p [ 0 ] [ 1 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x )		1276031	1					
ANR	1276760	Callee	any_abs		1276031	0					
ANR	1276761	Identifier	any_abs		1276031	0					
ANR	1276762	ArgumentList	p -> p [ 0 ] [ 1 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x		1276031	1					
ANR	1276763	Argument	p -> p [ 0 ] [ 1 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x		1276031	0					
ANR	1276764	AdditiveExpression	p -> p [ 0 ] [ 1 ] -> p . x - p -> p [ 1 ] [ 1 ] -> p . x		1276031	0		-			
ANR	1276765	MemberAccess	p -> p [ 0 ] [ 1 ] -> p . x		1276031	0					
ANR	1276766	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> p		1276031	0					
ANR	1276767	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1276031	0					
ANR	1276768	ArrayIndexing	p -> p [ 0 ]		1276031	0					
ANR	1276769	PtrMemberAccess	p -> p		1276031	0					
ANR	1276770	Identifier	p		1276031	0					
ANR	1276771	Identifier	p		1276031	1					
ANR	1276772	PrimaryExpression	0		1276031	1					
ANR	1276773	PrimaryExpression	1		1276031	1					
ANR	1276774	Identifier	p		1276031	1					
ANR	1276775	Identifier	x		1276031	1					
ANR	1276776	MemberAccess	p -> p [ 1 ] [ 1 ] -> p . x		1276031	1					
ANR	1276777	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> p		1276031	0					
ANR	1276778	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1276031	0					
ANR	1276779	ArrayIndexing	p -> p [ 1 ]		1276031	0					
ANR	1276780	PtrMemberAccess	p -> p		1276031	0					
ANR	1276781	Identifier	p		1276031	0					
ANR	1276782	Identifier	p		1276031	1					
ANR	1276783	PrimaryExpression	1		1276031	1					
ANR	1276784	PrimaryExpression	1		1276031	1					
ANR	1276785	Identifier	p		1276031	1					
ANR	1276786	Identifier	x		1276031	1					
ANR	1276787	IdentifierDeclStatement	double d0010y = any_abs ( p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 0 ] -> p . y ) ;	3376:8:126917:126975	1276031	7	True				
ANR	1276788	IdentifierDecl	d0010y = any_abs ( p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 0 ] -> p . y )		1276031	0					
ANR	1276789	IdentifierDeclType	double		1276031	0					
ANR	1276790	Identifier	d0010y		1276031	1					
ANR	1276791	AssignmentExpression	d0010y = any_abs ( p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 0 ] -> p . y )		1276031	2		=			
ANR	1276792	Identifier	d0010y		1276031	0					
ANR	1276793	CallExpression	any_abs ( p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 0 ] -> p . y )		1276031	1					
ANR	1276794	Callee	any_abs		1276031	0					
ANR	1276795	Identifier	any_abs		1276031	0					
ANR	1276796	ArgumentList	p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 0 ] -> p . y		1276031	1					
ANR	1276797	Argument	p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 0 ] -> p . y		1276031	0					
ANR	1276798	AdditiveExpression	p -> p [ 0 ] [ 0 ] -> p . y - p -> p [ 1 ] [ 0 ] -> p . y		1276031	0		-			
ANR	1276799	MemberAccess	p -> p [ 0 ] [ 0 ] -> p . y		1276031	0					
ANR	1276800	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> p		1276031	0					
ANR	1276801	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1276031	0					
ANR	1276802	ArrayIndexing	p -> p [ 0 ]		1276031	0					
ANR	1276803	PtrMemberAccess	p -> p		1276031	0					
ANR	1276804	Identifier	p		1276031	0					
ANR	1276805	Identifier	p		1276031	1					
ANR	1276806	PrimaryExpression	0		1276031	1					
ANR	1276807	PrimaryExpression	0		1276031	1					
ANR	1276808	Identifier	p		1276031	1					
ANR	1276809	Identifier	y		1276031	1					
ANR	1276810	MemberAccess	p -> p [ 1 ] [ 0 ] -> p . y		1276031	1					
ANR	1276811	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> p		1276031	0					
ANR	1276812	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1276031	0					
ANR	1276813	ArrayIndexing	p -> p [ 1 ]		1276031	0					
ANR	1276814	PtrMemberAccess	p -> p		1276031	0					
ANR	1276815	Identifier	p		1276031	0					
ANR	1276816	Identifier	p		1276031	1					
ANR	1276817	PrimaryExpression	1		1276031	1					
ANR	1276818	PrimaryExpression	0		1276031	1					
ANR	1276819	Identifier	p		1276031	1					
ANR	1276820	Identifier	y		1276031	1					
ANR	1276821	IdentifierDeclStatement	double d0111y = any_abs ( p -> p [ 0 ] [ 1 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y ) ;	3377:8:126985:127043	1276031	8	True				
ANR	1276822	IdentifierDecl	d0111y = any_abs ( p -> p [ 0 ] [ 1 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y )		1276031	0					
ANR	1276823	IdentifierDeclType	double		1276031	0					
ANR	1276824	Identifier	d0111y		1276031	1					
ANR	1276825	AssignmentExpression	d0111y = any_abs ( p -> p [ 0 ] [ 1 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y )		1276031	2		=			
ANR	1276826	Identifier	d0111y		1276031	0					
ANR	1276827	CallExpression	any_abs ( p -> p [ 0 ] [ 1 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y )		1276031	1					
ANR	1276828	Callee	any_abs		1276031	0					
ANR	1276829	Identifier	any_abs		1276031	0					
ANR	1276830	ArgumentList	p -> p [ 0 ] [ 1 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y		1276031	1					
ANR	1276831	Argument	p -> p [ 0 ] [ 1 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y		1276031	0					
ANR	1276832	AdditiveExpression	p -> p [ 0 ] [ 1 ] -> p . y - p -> p [ 1 ] [ 1 ] -> p . y		1276031	0		-			
ANR	1276833	MemberAccess	p -> p [ 0 ] [ 1 ] -> p . y		1276031	0					
ANR	1276834	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> p		1276031	0					
ANR	1276835	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1276031	0					
ANR	1276836	ArrayIndexing	p -> p [ 0 ]		1276031	0					
ANR	1276837	PtrMemberAccess	p -> p		1276031	0					
ANR	1276838	Identifier	p		1276031	0					
ANR	1276839	Identifier	p		1276031	1					
ANR	1276840	PrimaryExpression	0		1276031	1					
ANR	1276841	PrimaryExpression	1		1276031	1					
ANR	1276842	Identifier	p		1276031	1					
ANR	1276843	Identifier	y		1276031	1					
ANR	1276844	MemberAccess	p -> p [ 1 ] [ 1 ] -> p . y		1276031	1					
ANR	1276845	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> p		1276031	0					
ANR	1276846	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1276031	0					
ANR	1276847	ArrayIndexing	p -> p [ 1 ]		1276031	0					
ANR	1276848	PtrMemberAccess	p -> p		1276031	0					
ANR	1276849	Identifier	p		1276031	0					
ANR	1276850	Identifier	p		1276031	1					
ANR	1276851	PrimaryExpression	1		1276031	1					
ANR	1276852	PrimaryExpression	1		1276031	1					
ANR	1276853	Identifier	p		1276031	1					
ANR	1276854	Identifier	y		1276031	1					
ANR	1276855	IdentifierDeclStatement	"double size_u = max ( max ( d0001x , d1011x ) , max ( d0001y , d1011y ) ) ;"	3378:8:127053:127114	1276031	9	True				
ANR	1276856	IdentifierDecl	"size_u = max ( max ( d0001x , d1011x ) , max ( d0001y , d1011y ) )"		1276031	0					
ANR	1276857	IdentifierDeclType	double		1276031	0					
ANR	1276858	Identifier	size_u		1276031	1					
ANR	1276859	AssignmentExpression	"size_u = max ( max ( d0001x , d1011x ) , max ( d0001y , d1011y ) )"		1276031	2		=			
ANR	1276860	Identifier	size_u		1276031	0					
ANR	1276861	CallExpression	"max ( max ( d0001x , d1011x ) , max ( d0001y , d1011y ) )"		1276031	1					
ANR	1276862	Callee	max		1276031	0					
ANR	1276863	Identifier	max		1276031	0					
ANR	1276864	ArgumentList	"max ( d0001x , d1011x )"		1276031	1					
ANR	1276865	Argument	"max ( d0001x , d1011x )"		1276031	0					
ANR	1276866	CallExpression	"max ( d0001x , d1011x )"		1276031	0					
ANR	1276867	Callee	max		1276031	0					
ANR	1276868	Identifier	max		1276031	0					
ANR	1276869	ArgumentList	d0001x		1276031	1					
ANR	1276870	Argument	d0001x		1276031	0					
ANR	1276871	Identifier	d0001x		1276031	0					
ANR	1276872	Argument	d1011x		1276031	1					
ANR	1276873	Identifier	d1011x		1276031	0					
ANR	1276874	Argument	"max ( d0001y , d1011y )"		1276031	1					
ANR	1276875	CallExpression	"max ( d0001y , d1011y )"		1276031	0					
ANR	1276876	Callee	max		1276031	0					
ANR	1276877	Identifier	max		1276031	0					
ANR	1276878	ArgumentList	d0001y		1276031	1					
ANR	1276879	Argument	d0001y		1276031	0					
ANR	1276880	Identifier	d0001y		1276031	0					
ANR	1276881	Argument	d1011y		1276031	1					
ANR	1276882	Identifier	d1011y		1276031	0					
ANR	1276883	IdentifierDeclStatement	"double size_v = max ( max ( d0010x , d0111x ) , max ( d0010y , d0111y ) ) ;"	3379:8:127124:127185	1276031	10	True				
ANR	1276884	IdentifierDecl	"size_v = max ( max ( d0010x , d0111x ) , max ( d0010y , d0111y ) )"		1276031	0					
ANR	1276885	IdentifierDeclType	double		1276031	0					
ANR	1276886	Identifier	size_v		1276031	1					
ANR	1276887	AssignmentExpression	"size_v = max ( max ( d0010x , d0111x ) , max ( d0010y , d0111y ) )"		1276031	2		=			
ANR	1276888	Identifier	size_v		1276031	0					
ANR	1276889	CallExpression	"max ( max ( d0010x , d0111x ) , max ( d0010y , d0111y ) )"		1276031	1					
ANR	1276890	Callee	max		1276031	0					
ANR	1276891	Identifier	max		1276031	0					
ANR	1276892	ArgumentList	"max ( d0010x , d0111x )"		1276031	1					
ANR	1276893	Argument	"max ( d0010x , d0111x )"		1276031	0					
ANR	1276894	CallExpression	"max ( d0010x , d0111x )"		1276031	0					
ANR	1276895	Callee	max		1276031	0					
ANR	1276896	Identifier	max		1276031	0					
ANR	1276897	ArgumentList	d0010x		1276031	1					
ANR	1276898	Argument	d0010x		1276031	0					
ANR	1276899	Identifier	d0010x		1276031	0					
ANR	1276900	Argument	d0111x		1276031	1					
ANR	1276901	Identifier	d0111x		1276031	0					
ANR	1276902	Argument	"max ( d0010y , d0111y )"		1276031	1					
ANR	1276903	CallExpression	"max ( d0010y , d0111y )"		1276031	0					
ANR	1276904	Callee	max		1276031	0					
ANR	1276905	Identifier	max		1276031	0					
ANR	1276906	ArgumentList	d0010y		1276031	1					
ANR	1276907	Argument	d0010y		1276031	0					
ANR	1276908	Identifier	d0010y		1276031	0					
ANR	1276909	Argument	d0111y		1276031	1					
ANR	1276910	Identifier	d0111y		1276031	0					
ANR	1276911	IfStatement	if ( size_u > pfs -> decomposition_limit )		1276031	11					
ANR	1276912	Condition	size_u > pfs -> decomposition_limit	3381:12:127200:127232	1276031	0	True				
ANR	1276913	RelationalExpression	size_u > pfs -> decomposition_limit		1276031	0		>			
ANR	1276914	Identifier	size_u		1276031	0					
ANR	1276915	PtrMemberAccess	pfs -> decomposition_limit		1276031	1					
ANR	1276916	Identifier	pfs		1276031	0					
ANR	1276917	Identifier	decomposition_limit		1276031	1					
ANR	1276918	ExpressionStatement	is_big_u = true	3382:12:127247:127262	1276031	1	True				
ANR	1276919	AssignmentExpression	is_big_u = true		1276031	0		=			
ANR	1276920	Identifier	is_big_u		1276031	0					
ANR	1276921	Identifier	true		1276031	1					
ANR	1276922	IfStatement	if ( size_v > pfs -> decomposition_limit )		1276031	12					
ANR	1276923	Condition	size_v > pfs -> decomposition_limit	3383:12:127276:127308	1276031	0	True				
ANR	1276924	RelationalExpression	size_v > pfs -> decomposition_limit		1276031	0		>			
ANR	1276925	Identifier	size_v		1276031	0					
ANR	1276926	PtrMemberAccess	pfs -> decomposition_limit		1276031	1					
ANR	1276927	Identifier	pfs		1276031	0					
ANR	1276928	Identifier	decomposition_limit		1276031	1					
ANR	1276929	ExpressionStatement	is_big_v = true	3384:12:127323:127338	1276031	1	True				
ANR	1276930	AssignmentExpression	is_big_v = true		1276031	0		=			
ANR	1276931	Identifier	is_big_v		1276031	0					
ANR	1276932	Identifier	true		1276031	1					
ANR	1276933	ElseStatement	else		1276031	0					
ANR	1276934	IfStatement	if ( ! is_big_u )		1276031	0					
ANR	1276935	Condition	! is_big_u	3385:17:127357:127365	1276031	0	True				
ANR	1276936	UnaryOperationExpression	! is_big_u		1276031	0					
ANR	1276937	UnaryOperator	!		1276031	0					
ANR	1276938	Identifier	is_big_u		1276031	1					
ANR	1276939	ReturnStatement	"return ( QUADRANGLES || ! pfs -> maybe_self_intersecting ? constant_color_quadrangle : triangles4 ) ( pfs , p , pfs -> maybe_self_intersecting ) ;"	3386:12:127380:127564	1276031	1	True				
ANR	1276940	CallExpression	"( QUADRANGLES || ! pfs -> maybe_self_intersecting ? constant_color_quadrangle : triangles4 ) ( pfs , p , pfs -> maybe_self_intersecting )"		1276031	0					
ANR	1276941	Callee	QUADRANGLES || ! pfs -> maybe_self_intersecting ? constant_color_quadrangle : triangles4		1276031	0					
ANR	1276942	ConditionalExpression	QUADRANGLES || ! pfs -> maybe_self_intersecting ? constant_color_quadrangle : triangles4		1276031	0					
ANR	1276943	Condition	QUADRANGLES || ! pfs -> maybe_self_intersecting		1276031	0					
ANR	1276944	OrExpression	QUADRANGLES || ! pfs -> maybe_self_intersecting		1276031	0		||			
ANR	1276945	Identifier	QUADRANGLES		1276031	0					
ANR	1276946	UnaryOperationExpression	! pfs -> maybe_self_intersecting		1276031	1					
ANR	1276947	UnaryOperator	!		1276031	0					
ANR	1276948	PtrMemberAccess	pfs -> maybe_self_intersecting		1276031	1					
ANR	1276949	Identifier	pfs		1276031	0					
ANR	1276950	Identifier	maybe_self_intersecting		1276031	1					
ANR	1276951	Identifier	constant_color_quadrangle		1276031	1					
ANR	1276952	Identifier	triangles4		1276031	2					
ANR	1276953	ArgumentList	pfs		1276031	1					
ANR	1276954	Argument	pfs		1276031	0					
ANR	1276955	Identifier	pfs		1276031	0					
ANR	1276956	Argument	p		1276031	1					
ANR	1276957	Identifier	p		1276031	0					
ANR	1276958	Argument	pfs -> maybe_self_intersecting		1276031	2					
ANR	1276959	PtrMemberAccess	pfs -> maybe_self_intersecting		1276031	0					
ANR	1276960	Identifier	pfs		1276031	0					
ANR	1276961	Identifier	maybe_self_intersecting		1276031	1					
ANR	1276962	IfStatement	if ( ! pfs -> monotonic_color )		1276031	13					
ANR	1276963	Condition	! pfs -> monotonic_color	3389:12:127578:127598	1276031	0	True				
ANR	1276964	UnaryOperationExpression	! pfs -> monotonic_color		1276031	0					
ANR	1276965	UnaryOperator	!		1276031	0					
ANR	1276966	PtrMemberAccess	pfs -> monotonic_color		1276031	1					
ANR	1276967	Identifier	pfs		1276031	0					
ANR	1276968	Identifier	monotonic_color		1276031	1					
ANR	1276969	CompoundStatement		74:12:3650:3709	1276031	1					
ANR	1276970	IdentifierDeclStatement	"bool not_monotonic_by_u = false , not_monotonic_by_v = false ;"	3390:12:127615:127674	1276031	0	True				
ANR	1276971	IdentifierDecl	not_monotonic_by_u = false		1276031	0					
ANR	1276972	IdentifierDeclType	bool		1276031	0					
ANR	1276973	Identifier	not_monotonic_by_u		1276031	1					
ANR	1276974	AssignmentExpression	not_monotonic_by_u = false		1276031	2		=			
ANR	1276975	Identifier	false		1276031	0					
ANR	1276976	Identifier	false		1276031	1					
ANR	1276977	IdentifierDecl	not_monotonic_by_v = false		1276031	1					
ANR	1276978	IdentifierDeclType	bool		1276031	0					
ANR	1276979	Identifier	not_monotonic_by_v		1276031	1					
ANR	1276980	AssignmentExpression	not_monotonic_by_v = false		1276031	2		=			
ANR	1276981	Identifier	false		1276031	0					
ANR	1276982	Identifier	false		1276031	1					
ANR	1276983	ExpressionStatement	"code = is_quadrangle_color_monotonic ( pfs , p , & not_monotonic_by_u , & not_monotonic_by_v )"	3392:12:127689:127775	1276031	1	True				
ANR	1276984	AssignmentExpression	"code = is_quadrangle_color_monotonic ( pfs , p , & not_monotonic_by_u , & not_monotonic_by_v )"		1276031	0		=			
ANR	1276985	Identifier	code		1276031	0					
ANR	1276986	CallExpression	"is_quadrangle_color_monotonic ( pfs , p , & not_monotonic_by_u , & not_monotonic_by_v )"		1276031	1					
ANR	1276987	Callee	is_quadrangle_color_monotonic		1276031	0					
ANR	1276988	Identifier	is_quadrangle_color_monotonic		1276031	0					
ANR	1276989	ArgumentList	pfs		1276031	1					
ANR	1276990	Argument	pfs		1276031	0					
ANR	1276991	Identifier	pfs		1276031	0					
ANR	1276992	Argument	p		1276031	1					
ANR	1276993	Identifier	p		1276031	0					
ANR	1276994	Argument	& not_monotonic_by_u		1276031	2					
ANR	1276995	UnaryOperationExpression	& not_monotonic_by_u		1276031	0					
ANR	1276996	UnaryOperator	&		1276031	0					
ANR	1276997	Identifier	not_monotonic_by_u		1276031	1					
ANR	1276998	Argument	& not_monotonic_by_v		1276031	3					
ANR	1276999	UnaryOperationExpression	& not_monotonic_by_v		1276031	0					
ANR	1277000	UnaryOperator	&		1276031	0					
ANR	1277001	Identifier	not_monotonic_by_v		1276031	1					
ANR	1277002	IfStatement	if ( code < 0 )		1276031	2					
ANR	1277003	Condition	code < 0	3393:16:127793:127800	1276031	0	True				
ANR	1277004	RelationalExpression	code < 0		1276031	0		<			
ANR	1277005	Identifier	code		1276031	0					
ANR	1277006	PrimaryExpression	0		1276031	1					
ANR	1277007	ReturnStatement	return code ;	3394:16:127819:127830	1276031	1	True				
ANR	1277008	Identifier	code		1276031	0					
ANR	1277009	IfStatement	if ( is_big_u )		1276031	3					
ANR	1277010	Condition	is_big_u	3395:16:127848:127855	1276031	0	True				
ANR	1277011	Identifier	is_big_u		1276031	0					
ANR	1277012	ExpressionStatement	divide_u = not_monotonic_by_u	3396:16:127874:127903	1276031	1	True				
ANR	1277013	AssignmentExpression	divide_u = not_monotonic_by_u		1276031	0		=			
ANR	1277014	Identifier	divide_u		1276031	0					
ANR	1277015	Identifier	not_monotonic_by_u		1276031	1					
ANR	1277016	IfStatement	if ( is_big_v )		1276031	4					
ANR	1277017	Condition	is_big_v	3397:16:127921:127928	1276031	0	True				
ANR	1277018	Identifier	is_big_v		1276031	0					
ANR	1277019	ExpressionStatement	divide_v = not_monotonic_by_v	3398:16:127947:127976	1276031	1	True				
ANR	1277020	AssignmentExpression	divide_v = not_monotonic_by_v		1276031	0		=			
ANR	1277021	Identifier	divide_v		1276031	0					
ANR	1277022	Identifier	not_monotonic_by_v		1276031	1					
ANR	1277023	IfStatement	if ( ! divide_u && ! divide_v )		1276031	5					
ANR	1277024	Condition	! divide_u && ! divide_v	3399:16:127994:128015	1276031	0	True				
ANR	1277025	AndExpression	! divide_u && ! divide_v		1276031	0		&&			
ANR	1277026	UnaryOperationExpression	! divide_u		1276031	0					
ANR	1277027	UnaryOperator	!		1276031	0					
ANR	1277028	Identifier	divide_u		1276031	1					
ANR	1277029	UnaryOperationExpression	! divide_v		1276031	1					
ANR	1277030	UnaryOperator	!		1276031	0					
ANR	1277031	Identifier	divide_v		1276031	1					
ANR	1277032	ExpressionStatement	pfs -> monotonic_color = true	3400:16:128034:128061	1276031	1	True				
ANR	1277033	AssignmentExpression	pfs -> monotonic_color = true		1276031	0		=			
ANR	1277034	PtrMemberAccess	pfs -> monotonic_color		1276031	0					
ANR	1277035	Identifier	pfs		1276031	0					
ANR	1277036	Identifier	monotonic_color		1276031	1					
ANR	1277037	Identifier	true		1276031	1					
ANR	1277038	IfStatement	if ( pfs -> monotonic_color && ! pfs -> linear_color )		1276031	14					
ANR	1277039	Condition	pfs -> monotonic_color && ! pfs -> linear_color	3402:12:128085:128126	1276031	0	True				
ANR	1277040	AndExpression	pfs -> monotonic_color && ! pfs -> linear_color		1276031	0		&&			
ANR	1277041	PtrMemberAccess	pfs -> monotonic_color		1276031	0					
ANR	1277042	Identifier	pfs		1276031	0					
ANR	1277043	Identifier	monotonic_color		1276031	1					
ANR	1277044	UnaryOperationExpression	! pfs -> linear_color		1276031	1					
ANR	1277045	UnaryOperator	!		1276031	0					
ANR	1277046	PtrMemberAccess	pfs -> linear_color		1276031	1					
ANR	1277047	Identifier	pfs		1276031	0					
ANR	1277048	Identifier	linear_color		1276031	1					
ANR	1277049	CompoundStatement		86:56:4164:4164	1276031	1					
ANR	1277050	IfStatement	if ( divide_v && divide_u )		1276031	0					
ANR	1277051	Condition	divide_v && divide_u	3403:16:128147:128166	1276031	0	True				
ANR	1277052	AndExpression	divide_v && divide_u		1276031	0		&&			
ANR	1277053	Identifier	divide_v		1276031	0					
ANR	1277054	Identifier	divide_u		1276031	1					
ANR	1277055	CompoundStatement		87:38:4204:4204	1276031	1					
ANR	1277056	IfStatement	if ( size_u > size_v )		1276031	0					
ANR	1277057	Condition	size_u > size_v	3404:20:128191:128205	1276031	0	True				
ANR	1277058	RelationalExpression	size_u > size_v		1276031	0		>			
ANR	1277059	Identifier	size_u		1276031	0					
ANR	1277060	Identifier	size_v		1276031	1					
ANR	1277061	ExpressionStatement	divide_v = false	3405:20:128228:128244	1276031	1	True				
ANR	1277062	AssignmentExpression	divide_v = false		1276031	0		=			
ANR	1277063	Identifier	divide_v		1276031	0					
ANR	1277064	Identifier	false		1276031	1					
ANR	1277065	ElseStatement	else		1276031	0					
ANR	1277066	ExpressionStatement	divide_u = false	3407:20:128287:128303	1276031	0	True				
ANR	1277067	AssignmentExpression	divide_u = false		1276031	0		=			
ANR	1277068	Identifier	divide_u		1276031	0					
ANR	1277069	Identifier	false		1276031	1					
ANR	1277070	ElseStatement	else		1276031	0					
ANR	1277071	IfStatement	if ( ! divide_u && ! divide_v && ! pfs -> unlinear )		1276031	0					
ANR	1277072	Condition	! divide_u && ! divide_v && ! pfs -> unlinear	3408:23:128328:128367	1276031	0	True				
ANR	1277073	AndExpression	! divide_u && ! divide_v && ! pfs -> unlinear		1276031	0		&&			
ANR	1277074	UnaryOperationExpression	! divide_u		1276031	0					
ANR	1277075	UnaryOperator	!		1276031	0					
ANR	1277076	Identifier	divide_u		1276031	1					
ANR	1277077	AndExpression	! divide_v && ! pfs -> unlinear		1276031	1		&&			
ANR	1277078	UnaryOperationExpression	! divide_v		1276031	0					
ANR	1277079	UnaryOperator	!		1276031	0					
ANR	1277080	Identifier	divide_v		1276031	1					
ANR	1277081	UnaryOperationExpression	! pfs -> unlinear		1276031	1					
ANR	1277082	UnaryOperator	!		1276031	0					
ANR	1277083	PtrMemberAccess	pfs -> unlinear		1276031	1					
ANR	1277084	Identifier	pfs		1276031	0					
ANR	1277085	Identifier	unlinear		1276031	1					
ANR	1277086	CompoundStatement		92:65:4405:4405	1276031	1					
ANR	1277087	IfStatement	if ( d0001x + d1011x + d0001y + d1011y > d0010x + d0111x + d0010y + d0111y )		1276031	0					
ANR	1277088	Condition	d0001x + d1011x + d0001y + d1011y > d0010x + d0111x + d0010y + d0111y	3409:20:128392:128460	1276031	0	True				
ANR	1277089	RelationalExpression	d0001x + d1011x + d0001y + d1011y > d0010x + d0111x + d0010y + d0111y		1276031	0		>			
ANR	1277090	AdditiveExpression	d0001x + d1011x + d0001y + d1011y		1276031	0		+			
ANR	1277091	Identifier	d0001x		1276031	0					
ANR	1277092	AdditiveExpression	d1011x + d0001y + d1011y		1276031	1		+			
ANR	1277093	Identifier	d1011x		1276031	0					
ANR	1277094	AdditiveExpression	d0001y + d1011y		1276031	1		+			
ANR	1277095	Identifier	d0001y		1276031	0					
ANR	1277096	Identifier	d1011y		1276031	1					
ANR	1277097	AdditiveExpression	d0010x + d0111x + d0010y + d0111y		1276031	1		+			
ANR	1277098	Identifier	d0010x		1276031	0					
ANR	1277099	AdditiveExpression	d0111x + d0010y + d0111y		1276031	1		+			
ANR	1277100	Identifier	d0111x		1276031	0					
ANR	1277101	AdditiveExpression	d0010y + d0111y		1276031	1		+			
ANR	1277102	Identifier	d0010y		1276031	0					
ANR	1277103	Identifier	d0111y		1276031	1					
ANR	1277104	CompoundStatement		93:91:4498:4498	1276031	1					
ANR	1277105	ExpressionStatement	"code = is_quadrangle_color_linear_by_u ( pfs , p )"	3410:20:128517:128563	1276031	0	True				
ANR	1277106	AssignmentExpression	"code = is_quadrangle_color_linear_by_u ( pfs , p )"		1276031	0		=			
ANR	1277107	Identifier	code		1276031	0					
ANR	1277108	CallExpression	"is_quadrangle_color_linear_by_u ( pfs , p )"		1276031	1					
ANR	1277109	Callee	is_quadrangle_color_linear_by_u		1276031	0					
ANR	1277110	Identifier	is_quadrangle_color_linear_by_u		1276031	0					
ANR	1277111	ArgumentList	pfs		1276031	1					
ANR	1277112	Argument	pfs		1276031	0					
ANR	1277113	Identifier	pfs		1276031	0					
ANR	1277114	Argument	p		1276031	1					
ANR	1277115	Identifier	p		1276031	0					
ANR	1277116	IfStatement	if ( code < 0 )		1276031	1					
ANR	1277117	Condition	code < 0	3411:24:128589:128596	1276031	0	True				
ANR	1277118	RelationalExpression	code < 0		1276031	0		<			
ANR	1277119	Identifier	code		1276031	0					
ANR	1277120	PrimaryExpression	0		1276031	1					
ANR	1277121	ReturnStatement	return code ;	3412:24:128623:128634	1276031	1	True				
ANR	1277122	Identifier	code		1276031	0					
ANR	1277123	ExpressionStatement	divide_u = ! code	3413:20:128656:128672	1276031	2	True				
ANR	1277124	AssignmentExpression	divide_u = ! code		1276031	0		=			
ANR	1277125	Identifier	divide_u		1276031	0					
ANR	1277126	UnaryOperationExpression	! code		1276031	1					
ANR	1277127	UnaryOperator	!		1276031	0					
ANR	1277128	Identifier	code		1276031	1					
ANR	1277129	IfStatement	if ( is_big_v )		1276031	1					
ANR	1277130	Condition	is_big_v	3415:20:128712:128719	1276031	0	True				
ANR	1277131	Identifier	is_big_v		1276031	0					
ANR	1277132	CompoundStatement		99:30:4757:4757	1276031	1					
ANR	1277133	ExpressionStatement	"code = is_quadrangle_color_linear_by_v ( pfs , p )"	3416:20:128744:128790	1276031	0	True				
ANR	1277134	AssignmentExpression	"code = is_quadrangle_color_linear_by_v ( pfs , p )"		1276031	0		=			
ANR	1277135	Identifier	code		1276031	0					
ANR	1277136	CallExpression	"is_quadrangle_color_linear_by_v ( pfs , p )"		1276031	1					
ANR	1277137	Callee	is_quadrangle_color_linear_by_v		1276031	0					
ANR	1277138	Identifier	is_quadrangle_color_linear_by_v		1276031	0					
ANR	1277139	ArgumentList	pfs		1276031	1					
ANR	1277140	Argument	pfs		1276031	0					
ANR	1277141	Identifier	pfs		1276031	0					
ANR	1277142	Argument	p		1276031	1					
ANR	1277143	Identifier	p		1276031	0					
ANR	1277144	IfStatement	if ( code < 0 )		1276031	1					
ANR	1277145	Condition	code < 0	3417:24:128816:128823	1276031	0	True				
ANR	1277146	RelationalExpression	code < 0		1276031	0		<			
ANR	1277147	Identifier	code		1276031	0					
ANR	1277148	PrimaryExpression	0		1276031	1					
ANR	1277149	ReturnStatement	return code ;	3418:24:128850:128861	1276031	1	True				
ANR	1277150	Identifier	code		1276031	0					
ANR	1277151	ExpressionStatement	divide_v = ! code	3419:20:128883:128899	1276031	2	True				
ANR	1277152	AssignmentExpression	divide_v = ! code		1276031	0		=			
ANR	1277153	Identifier	divide_v		1276031	0					
ANR	1277154	UnaryOperationExpression	! code		1276031	1					
ANR	1277155	UnaryOperator	!		1276031	0					
ANR	1277156	Identifier	code		1276031	1					
ANR	1277157	IfStatement	if ( is_big_u && is_big_v )		1276031	2					
ANR	1277158	Condition	is_big_u && is_big_v	3421:20:128939:128958	1276031	0	True				
ANR	1277159	AndExpression	is_big_u && is_big_v		1276031	0		&&			
ANR	1277160	Identifier	is_big_u		1276031	0					
ANR	1277161	Identifier	is_big_v		1276031	1					
ANR	1277162	CompoundStatement		105:42:4996:4996	1276031	1					
ANR	1277163	ExpressionStatement	"code = is_quadrangle_color_linear_by_diagonals ( pfs , p )"	3422:20:128983:129037	1276031	0	True				
ANR	1277164	AssignmentExpression	"code = is_quadrangle_color_linear_by_diagonals ( pfs , p )"		1276031	0		=			
ANR	1277165	Identifier	code		1276031	0					
ANR	1277166	CallExpression	"is_quadrangle_color_linear_by_diagonals ( pfs , p )"		1276031	1					
ANR	1277167	Callee	is_quadrangle_color_linear_by_diagonals		1276031	0					
ANR	1277168	Identifier	is_quadrangle_color_linear_by_diagonals		1276031	0					
ANR	1277169	ArgumentList	pfs		1276031	1					
ANR	1277170	Argument	pfs		1276031	0					
ANR	1277171	Identifier	pfs		1276031	0					
ANR	1277172	Argument	p		1276031	1					
ANR	1277173	Identifier	p		1276031	0					
ANR	1277174	IfStatement	if ( code < 0 )		1276031	1					
ANR	1277175	Condition	code < 0	3423:24:129063:129070	1276031	0	True				
ANR	1277176	RelationalExpression	code < 0		1276031	0		<			
ANR	1277177	Identifier	code		1276031	0					
ANR	1277178	PrimaryExpression	0		1276031	1					
ANR	1277179	ReturnStatement	return code ;	3424:24:129097:129108	1276031	1	True				
ANR	1277180	Identifier	code		1276031	0					
ANR	1277181	IfStatement	if ( ! code )		1276031	2					
ANR	1277182	Condition	! code	3425:24:129134:129138	1276031	0	True				
ANR	1277183	UnaryOperationExpression	! code		1276031	0					
ANR	1277184	UnaryOperator	!		1276031	0					
ANR	1277185	Identifier	code		1276031	1					
ANR	1277186	CompoundStatement		109:31:5176:5176	1276031	1					
ANR	1277187	IfStatement	if ( d0001x + d1011x + d0001y + d1011y > d0010x + d0111x + d0010y + d0111y )		1276031	0					
ANR	1277188	Condition	d0001x + d1011x + d0001y + d1011y > d0010x + d0111x + d0010y + d0111y	3426:28:129171:129239	1276031	0	True				
ANR	1277189	RelationalExpression	d0001x + d1011x + d0001y + d1011y > d0010x + d0111x + d0010y + d0111y		1276031	0		>			
ANR	1277190	AdditiveExpression	d0001x + d1011x + d0001y + d1011y		1276031	0		+			
ANR	1277191	Identifier	d0001x		1276031	0					
ANR	1277192	AdditiveExpression	d1011x + d0001y + d1011y		1276031	1		+			
ANR	1277193	Identifier	d1011x		1276031	0					
ANR	1277194	AdditiveExpression	d0001y + d1011y		1276031	1		+			
ANR	1277195	Identifier	d0001y		1276031	0					
ANR	1277196	Identifier	d1011y		1276031	1					
ANR	1277197	AdditiveExpression	d0010x + d0111x + d0010y + d0111y		1276031	1		+			
ANR	1277198	Identifier	d0010x		1276031	0					
ANR	1277199	AdditiveExpression	d0111x + d0010y + d0111y		1276031	1		+			
ANR	1277200	Identifier	d0111x		1276031	0					
ANR	1277201	AdditiveExpression	d0010y + d0111y		1276031	1		+			
ANR	1277202	Identifier	d0010y		1276031	0					
ANR	1277203	Identifier	d0111y		1276031	1					
ANR	1277204	CompoundStatement		110:99:5277:5277	1276031	1					
ANR	1277205	ExpressionStatement	divide_u = true	3427:28:129304:129319	1276031	0	True				
ANR	1277206	AssignmentExpression	divide_u = true		1276031	0		=			
ANR	1277207	Identifier	divide_u		1276031	0					
ANR	1277208	Identifier	true		1276031	1					
ANR	1277209	ExpressionStatement	divide_v = false	3428:28:129349:129365	1276031	1	True				
ANR	1277210	AssignmentExpression	divide_v = false		1276031	0		=			
ANR	1277211	Identifier	divide_v		1276031	0					
ANR	1277212	Identifier	false		1276031	1					
ANR	1277213	ElseStatement	else		1276031	0					
ANR	1277214	CompoundStatement		113:31:5433:5433	1276031	0					
ANR	1277215	ExpressionStatement	divide_v = true	3430:28:129428:129443	1276031	0	True				
ANR	1277216	AssignmentExpression	divide_v = true		1276031	0		=			
ANR	1277217	Identifier	divide_v		1276031	0					
ANR	1277218	Identifier	true		1276031	1					
ANR	1277219	ExpressionStatement	divide_u = false	3431:28:129473:129489	1276031	1	True				
ANR	1277220	AssignmentExpression	divide_u = false		1276031	0		=			
ANR	1277221	Identifier	divide_u		1276031	0					
ANR	1277222	Identifier	false		1276031	1					
ANR	1277223	IfStatement	if ( ! divide_u && ! divide_v )		1276031	1					
ANR	1277224	Condition	! divide_u && ! divide_v	3436:16:129587:129608	1276031	0	True				
ANR	1277225	AndExpression	! divide_u && ! divide_v		1276031	0		&&			
ANR	1277226	UnaryOperationExpression	! divide_u		1276031	0					
ANR	1277227	UnaryOperator	!		1276031	0					
ANR	1277228	Identifier	divide_u		1276031	1					
ANR	1277229	UnaryOperationExpression	! divide_v		1276031	1					
ANR	1277230	UnaryOperator	!		1276031	0					
ANR	1277231	Identifier	divide_v		1276031	1					
ANR	1277232	ExpressionStatement	pfs -> linear_color = true	3437:16:129627:129651	1276031	1	True				
ANR	1277233	AssignmentExpression	pfs -> linear_color = true		1276031	0		=			
ANR	1277234	PtrMemberAccess	pfs -> linear_color		1276031	0					
ANR	1277235	Identifier	pfs		1276031	0					
ANR	1277236	Identifier	linear_color		1276031	1					
ANR	1277237	Identifier	true		1276031	1					
ANR	1277238	IfStatement	if ( ! pfs -> linear_color )		1276031	15					
ANR	1277239	Condition	! pfs -> linear_color	3439:12:129675:129692	1276031	0	True				
ANR	1277240	UnaryOperationExpression	! pfs -> linear_color		1276031	0					
ANR	1277241	UnaryOperator	!		1276031	0					
ANR	1277242	PtrMemberAccess	pfs -> linear_color		1276031	1					
ANR	1277243	Identifier	pfs		1276031	0					
ANR	1277244	Identifier	linear_color		1276031	1					
ANR	1277245	CompoundStatement		123:32:5730:5730	1276031	1					
ANR	1277246	ElseStatement	else		1276031	0					
ANR	1277247	SwitchStatement	"switch ( quadrangle_color_change ( pfs , p , is_big_u , is_big_v , size_u , size_v , & divide_u , & divide_v ) )"		1276031	0					
ANR	1277248	Condition	"quadrangle_color_change ( pfs , p , is_big_u , is_big_v , size_u , size_v , & divide_u , & divide_v )"	3441:22:129751:129839	1276031	0	True				
ANR	1277249	CallExpression	"quadrangle_color_change ( pfs , p , is_big_u , is_big_v , size_u , size_v , & divide_u , & divide_v )"		1276031	0					
ANR	1277250	Callee	quadrangle_color_change		1276031	0					
ANR	1277251	Identifier	quadrangle_color_change		1276031	0					
ANR	1277252	ArgumentList	pfs		1276031	1					
ANR	1277253	Argument	pfs		1276031	0					
ANR	1277254	Identifier	pfs		1276031	0					
ANR	1277255	Argument	p		1276031	1					
ANR	1277256	Identifier	p		1276031	0					
ANR	1277257	Argument	is_big_u		1276031	2					
ANR	1277258	Identifier	is_big_u		1276031	0					
ANR	1277259	Argument	is_big_v		1276031	3					
ANR	1277260	Identifier	is_big_v		1276031	0					
ANR	1277261	Argument	size_u		1276031	4					
ANR	1277262	Identifier	size_u		1276031	0					
ANR	1277263	Argument	size_v		1276031	5					
ANR	1277264	Identifier	size_v		1276031	0					
ANR	1277265	Argument	& divide_u		1276031	6					
ANR	1277266	UnaryOperationExpression	& divide_u		1276031	0					
ANR	1277267	UnaryOperator	&		1276031	0					
ANR	1277268	Identifier	divide_u		1276031	1					
ANR	1277269	Argument	& divide_v		1276031	7					
ANR	1277270	UnaryOperationExpression	& divide_v		1276031	0					
ANR	1277271	UnaryOperator	&		1276031	0					
ANR	1277272	Identifier	divide_v		1276031	1					
ANR	1277273	CompoundStatement		125:113:5877:5877	1276031	1					
ANR	1277274	Label	case color_change_small :	3442:12:129856:129879	1276031	0	True				
ANR	1277275	Identifier	color_change_small		1276031	0					
ANR	1277276	ExpressionStatement	"code = ( QUADRANGLES || ! pfs -> maybe_self_intersecting ? constant_color_quadrangle : triangles4 ) ( pfs , p , pfs -> maybe_self_intersecting )"	3443:16:129897:130089	1276031	1	True				
ANR	1277277	AssignmentExpression	"code = ( QUADRANGLES || ! pfs -> maybe_self_intersecting ? constant_color_quadrangle : triangles4 ) ( pfs , p , pfs -> maybe_self_intersecting )"		1276031	0		=			
ANR	1277278	Identifier	code		1276031	0					
ANR	1277279	CallExpression	"( QUADRANGLES || ! pfs -> maybe_self_intersecting ? constant_color_quadrangle : triangles4 ) ( pfs , p , pfs -> maybe_self_intersecting )"		1276031	1					
ANR	1277280	Callee	QUADRANGLES || ! pfs -> maybe_self_intersecting ? constant_color_quadrangle : triangles4		1276031	0					
ANR	1277281	ConditionalExpression	QUADRANGLES || ! pfs -> maybe_self_intersecting ? constant_color_quadrangle : triangles4		1276031	0					
ANR	1277282	Condition	QUADRANGLES || ! pfs -> maybe_self_intersecting		1276031	0					
ANR	1277283	OrExpression	QUADRANGLES || ! pfs -> maybe_self_intersecting		1276031	0		||			
ANR	1277284	Identifier	QUADRANGLES		1276031	0					
ANR	1277285	UnaryOperationExpression	! pfs -> maybe_self_intersecting		1276031	1					
ANR	1277286	UnaryOperator	!		1276031	0					
ANR	1277287	PtrMemberAccess	pfs -> maybe_self_intersecting		1276031	1					
ANR	1277288	Identifier	pfs		1276031	0					
ANR	1277289	Identifier	maybe_self_intersecting		1276031	1					
ANR	1277290	Identifier	constant_color_quadrangle		1276031	1					
ANR	1277291	Identifier	triangles4		1276031	2					
ANR	1277292	ArgumentList	pfs		1276031	1					
ANR	1277293	Argument	pfs		1276031	0					
ANR	1277294	Identifier	pfs		1276031	0					
ANR	1277295	Argument	p		1276031	1					
ANR	1277296	Identifier	p		1276031	0					
ANR	1277297	Argument	pfs -> maybe_self_intersecting		1276031	2					
ANR	1277298	PtrMemberAccess	pfs -> maybe_self_intersecting		1276031	0					
ANR	1277299	Identifier	pfs		1276031	0					
ANR	1277300	Identifier	maybe_self_intersecting		1276031	1					
ANR	1277301	ExpressionStatement	pfs -> monotonic_color = monotonic_color_save	3446:16:130107:130150	1276031	2	True				
ANR	1277302	AssignmentExpression	pfs -> monotonic_color = monotonic_color_save		1276031	0		=			
ANR	1277303	PtrMemberAccess	pfs -> monotonic_color		1276031	0					
ANR	1277304	Identifier	pfs		1276031	0					
ANR	1277305	Identifier	monotonic_color		1276031	1					
ANR	1277306	Identifier	monotonic_color_save		1276031	1					
ANR	1277307	ExpressionStatement	pfs -> linear_color = linear_color_save	3447:16:130168:130205	1276031	3	True				
ANR	1277308	AssignmentExpression	pfs -> linear_color = linear_color_save		1276031	0		=			
ANR	1277309	PtrMemberAccess	pfs -> linear_color		1276031	0					
ANR	1277310	Identifier	pfs		1276031	0					
ANR	1277311	Identifier	linear_color		1276031	1					
ANR	1277312	Identifier	linear_color_save		1276031	1					
ANR	1277313	ReturnStatement	return code ;	3448:16:130223:130234	1276031	4	True				
ANR	1277314	Identifier	code		1276031	0					
ANR	1277315	Label	case color_change_bilinear :	3449:12:130248:130274	1276031	5	True				
ANR	1277316	Identifier	color_change_bilinear		1276031	0					
ANR	1277317	IfStatement	if ( ! QUADRANGLES )		1276031	6					
ANR	1277318	Condition	! QUADRANGLES	3450:20:130296:130307	1276031	0	True				
ANR	1277319	UnaryOperationExpression	! QUADRANGLES		1276031	0					
ANR	1277320	UnaryOperator	!		1276031	0					
ANR	1277321	Identifier	QUADRANGLES		1276031	1					
ANR	1277322	CompoundStatement		134:34:6345:6345	1276031	1					
ANR	1277323	ExpressionStatement	"code = triangles4 ( pfs , p , true )"	3451:20:130332:130363	1276031	0	True				
ANR	1277324	AssignmentExpression	"code = triangles4 ( pfs , p , true )"		1276031	0		=			
ANR	1277325	Identifier	code		1276031	0					
ANR	1277326	CallExpression	"triangles4 ( pfs , p , true )"		1276031	1					
ANR	1277327	Callee	triangles4		1276031	0					
ANR	1277328	Identifier	triangles4		1276031	0					
ANR	1277329	ArgumentList	pfs		1276031	1					
ANR	1277330	Argument	pfs		1276031	0					
ANR	1277331	Identifier	pfs		1276031	0					
ANR	1277332	Argument	p		1276031	1					
ANR	1277333	Identifier	p		1276031	0					
ANR	1277334	Argument	true		1276031	2					
ANR	1277335	Identifier	true		1276031	0					
ANR	1277336	ExpressionStatement	pfs -> monotonic_color = monotonic_color_save	3452:20:130385:130428	1276031	1	True				
ANR	1277337	AssignmentExpression	pfs -> monotonic_color = monotonic_color_save		1276031	0		=			
ANR	1277338	PtrMemberAccess	pfs -> monotonic_color		1276031	0					
ANR	1277339	Identifier	pfs		1276031	0					
ANR	1277340	Identifier	monotonic_color		1276031	1					
ANR	1277341	Identifier	monotonic_color_save		1276031	1					
ANR	1277342	ExpressionStatement	pfs -> linear_color = linear_color_save	3453:20:130450:130487	1276031	2	True				
ANR	1277343	AssignmentExpression	pfs -> linear_color = linear_color_save		1276031	0		=			
ANR	1277344	PtrMemberAccess	pfs -> linear_color		1276031	0					
ANR	1277345	Identifier	pfs		1276031	0					
ANR	1277346	Identifier	linear_color		1276031	1					
ANR	1277347	Identifier	linear_color_save		1276031	1					
ANR	1277348	ReturnStatement	return code ;	3454:20:130509:130520	1276031	3	True				
ANR	1277349	Identifier	code		1276031	0					
ANR	1277350	Label	case color_change_linear :	3456:12:130552:130576	1276031	7	True				
ANR	1277351	Identifier	color_change_linear		1276031	0					
ANR	1277352	IfStatement	if ( ! QUADRANGLES )		1276031	8					
ANR	1277353	Condition	! QUADRANGLES	3457:20:130598:130609	1276031	0	True				
ANR	1277354	UnaryOperationExpression	! QUADRANGLES		1276031	0					
ANR	1277355	UnaryOperator	!		1276031	0					
ANR	1277356	Identifier	QUADRANGLES		1276031	1					
ANR	1277357	CompoundStatement		141:34:6647:6647	1276031	1					
ANR	1277358	ExpressionStatement	"code = triangles2 ( pfs , p , true )"	3458:20:130634:130665	1276031	0	True				
ANR	1277359	AssignmentExpression	"code = triangles2 ( pfs , p , true )"		1276031	0		=			
ANR	1277360	Identifier	code		1276031	0					
ANR	1277361	CallExpression	"triangles2 ( pfs , p , true )"		1276031	1					
ANR	1277362	Callee	triangles2		1276031	0					
ANR	1277363	Identifier	triangles2		1276031	0					
ANR	1277364	ArgumentList	pfs		1276031	1					
ANR	1277365	Argument	pfs		1276031	0					
ANR	1277366	Identifier	pfs		1276031	0					
ANR	1277367	Argument	p		1276031	1					
ANR	1277368	Identifier	p		1276031	0					
ANR	1277369	Argument	true		1276031	2					
ANR	1277370	Identifier	true		1276031	0					
ANR	1277371	ExpressionStatement	pfs -> monotonic_color = monotonic_color_save	3459:20:130687:130730	1276031	1	True				
ANR	1277372	AssignmentExpression	pfs -> monotonic_color = monotonic_color_save		1276031	0		=			
ANR	1277373	PtrMemberAccess	pfs -> monotonic_color		1276031	0					
ANR	1277374	Identifier	pfs		1276031	0					
ANR	1277375	Identifier	monotonic_color		1276031	1					
ANR	1277376	Identifier	monotonic_color_save		1276031	1					
ANR	1277377	ExpressionStatement	pfs -> linear_color = linear_color_save	3460:20:130752:130789	1276031	2	True				
ANR	1277378	AssignmentExpression	pfs -> linear_color = linear_color_save		1276031	0		=			
ANR	1277379	PtrMemberAccess	pfs -> linear_color		1276031	0					
ANR	1277380	Identifier	pfs		1276031	0					
ANR	1277381	Identifier	linear_color		1276031	1					
ANR	1277382	Identifier	linear_color_save		1276031	1					
ANR	1277383	ReturnStatement	return code ;	3461:20:130811:130822	1276031	3	True				
ANR	1277384	Identifier	code		1276031	0					
ANR	1277385	Label	case color_change_gradient :	3463:12:130854:130880	1276031	9	True				
ANR	1277386	Identifier	color_change_gradient		1276031	0					
ANR	1277387	Label	case color_change_general :	3464:12:130894:130919	1276031	10	True				
ANR	1277388	Identifier	color_change_general		1276031	0					
ANR	1277389	ExpressionStatement		3465:16:130937:130937	1276031	11	True				
ANR	1277390	IfStatement	if ( ! inside )		1276031	13					
ANR	1277391	Condition	! inside	3468:8:130982:130988	1276031	0	True				
ANR	1277392	UnaryOperationExpression	! inside		1276031	0					
ANR	1277393	UnaryOperator	!		1276031	0					
ANR	1277394	Identifier	inside		1276031	1					
ANR	1277395	CompoundStatement		152:17:7026:7026	1276031	1					
ANR	1277396	IfStatement	if ( r . p . x == r1 . p . x && r . p . y == r1 . p . y && r . q . x == r1 . q . x && r . q . y == r1 . q . y )		1276031	0					
ANR	1277397	Condition	r . p . x == r1 . p . x && r . p . y == r1 . p . y && r . q . x == r1 . q . x && r . q . y == r1 . q . y	3469:12:131005:131088	1276031	0	True				
ANR	1277398	AndExpression	r . p . x == r1 . p . x && r . p . y == r1 . p . y && r . q . x == r1 . q . x && r . q . y == r1 . q . y		1276031	0		&&			
ANR	1277399	EqualityExpression	r . p . x == r1 . p . x		1276031	0		==			
ANR	1277400	MemberAccess	r . p . x		1276031	0					
ANR	1277401	MemberAccess	r . p		1276031	0					
ANR	1277402	Identifier	r		1276031	0					
ANR	1277403	Identifier	p		1276031	1					
ANR	1277404	Identifier	x		1276031	1					
ANR	1277405	MemberAccess	r1 . p . x		1276031	1					
ANR	1277406	MemberAccess	r1 . p		1276031	0					
ANR	1277407	Identifier	r1		1276031	0					
ANR	1277408	Identifier	p		1276031	1					
ANR	1277409	Identifier	x		1276031	1					
ANR	1277410	AndExpression	r . p . y == r1 . p . y && r . q . x == r1 . q . x && r . q . y == r1 . q . y		1276031	1		&&			
ANR	1277411	EqualityExpression	r . p . y == r1 . p . y		1276031	0		==			
ANR	1277412	MemberAccess	r . p . y		1276031	0					
ANR	1277413	MemberAccess	r . p		1276031	0					
ANR	1277414	Identifier	r		1276031	0					
ANR	1277415	Identifier	p		1276031	1					
ANR	1277416	Identifier	y		1276031	1					
ANR	1277417	MemberAccess	r1 . p . y		1276031	1					
ANR	1277418	MemberAccess	r1 . p		1276031	0					
ANR	1277419	Identifier	r1		1276031	0					
ANR	1277420	Identifier	p		1276031	1					
ANR	1277421	Identifier	y		1276031	1					
ANR	1277422	AndExpression	r . q . x == r1 . q . x && r . q . y == r1 . q . y		1276031	1		&&			
ANR	1277423	EqualityExpression	r . q . x == r1 . q . x		1276031	0		==			
ANR	1277424	MemberAccess	r . q . x		1276031	0					
ANR	1277425	MemberAccess	r . q		1276031	0					
ANR	1277426	Identifier	r		1276031	0					
ANR	1277427	Identifier	q		1276031	1					
ANR	1277428	Identifier	x		1276031	1					
ANR	1277429	MemberAccess	r1 . q . x		1276031	1					
ANR	1277430	MemberAccess	r1 . q		1276031	0					
ANR	1277431	Identifier	r1		1276031	0					
ANR	1277432	Identifier	q		1276031	1					
ANR	1277433	Identifier	x		1276031	1					
ANR	1277434	EqualityExpression	r . q . y == r1 . q . y		1276031	1		==			
ANR	1277435	MemberAccess	r . q . y		1276031	0					
ANR	1277436	MemberAccess	r . q		1276031	0					
ANR	1277437	Identifier	r		1276031	0					
ANR	1277438	Identifier	q		1276031	1					
ANR	1277439	Identifier	y		1276031	1					
ANR	1277440	MemberAccess	r1 . q . y		1276031	1					
ANR	1277441	MemberAccess	r1 . q		1276031	0					
ANR	1277442	Identifier	r1		1276031	0					
ANR	1277443	Identifier	q		1276031	1					
ANR	1277444	Identifier	y		1276031	1					
ANR	1277445	ExpressionStatement	pfs -> inside = true	3471:12:131103:131121	1276031	1	True				
ANR	1277446	AssignmentExpression	pfs -> inside = true		1276031	0		=			
ANR	1277447	PtrMemberAccess	pfs -> inside		1276031	0					
ANR	1277448	Identifier	pfs		1276031	0					
ANR	1277449	Identifier	inside		1276031	1					
ANR	1277450	Identifier	true		1276031	1					
ANR	1277451	IfStatement	if ( LAZY_WEDGES )		1276031	14					
ANR	1277452	Condition	LAZY_WEDGES	3473:8:131137:131147	1276031	0	True				
ANR	1277453	Identifier	LAZY_WEDGES		1276031	0					
ANR	1277454	ExpressionStatement	"init_wedge_vertex_list ( & l0 , 1 )"	3474:8:131158:131188	1276031	1	True				
ANR	1277455	CallExpression	"init_wedge_vertex_list ( & l0 , 1 )"		1276031	0					
ANR	1277456	Callee	init_wedge_vertex_list		1276031	0					
ANR	1277457	Identifier	init_wedge_vertex_list		1276031	0					
ANR	1277458	ArgumentList	& l0		1276031	1					
ANR	1277459	Argument	& l0		1276031	0					
ANR	1277460	UnaryOperationExpression	& l0		1276031	0					
ANR	1277461	UnaryOperator	&		1276031	0					
ANR	1277462	Identifier	l0		1276031	1					
ANR	1277463	Argument	1		1276031	1					
ANR	1277464	PrimaryExpression	1		1276031	0					
ANR	1277465	IfStatement	if ( divide_v )		1276031	15					
ANR	1277466	Condition	divide_v	3475:8:131198:131205	1276031	0	True				
ANR	1277467	Identifier	divide_v		1276031	0					
ANR	1277468	CompoundStatement		161:8:7282:7338	1276031	1					
ANR	1277469	IdentifierDeclStatement	patch_color_t * c [ 2 ] ;	3476:8:131218:131237	1276031	0	True				
ANR	1277470	IdentifierDecl	* c [ 2 ]		1276031	0					
ANR	1277471	IdentifierDeclType	patch_color_t * [ 2 ]		1276031	0					
ANR	1277472	Identifier	c		1276031	1					
ANR	1277473	PrimaryExpression	2		1276031	2					
ANR	1277474	IdentifierDeclStatement	"byte * color_stack_ptr = reserve_colors_inline ( pfs , c , 2 ) ;"	3477:8:131247:131303	1276031	1	True				
ANR	1277475	IdentifierDecl	"* color_stack_ptr = reserve_colors_inline ( pfs , c , 2 )"		1276031	0					
ANR	1277476	IdentifierDeclType	byte *		1276031	0					
ANR	1277477	Identifier	color_stack_ptr		1276031	1					
ANR	1277478	AssignmentExpression	"* color_stack_ptr = reserve_colors_inline ( pfs , c , 2 )"		1276031	2		=			
ANR	1277479	Identifier	color_stack_ptr		1276031	0					
ANR	1277480	CallExpression	"reserve_colors_inline ( pfs , c , 2 )"		1276031	1					
ANR	1277481	Callee	reserve_colors_inline		1276031	0					
ANR	1277482	Identifier	reserve_colors_inline		1276031	0					
ANR	1277483	ArgumentList	pfs		1276031	1					
ANR	1277484	Argument	pfs		1276031	0					
ANR	1277485	Identifier	pfs		1276031	0					
ANR	1277486	Argument	c		1276031	1					
ANR	1277487	Identifier	c		1276031	0					
ANR	1277488	Argument	2		1276031	2					
ANR	1277489	PrimaryExpression	2		1276031	0					
ANR	1277490	IfStatement	if ( color_stack_ptr == NULL )		1276031	2					
ANR	1277491	Condition	color_stack_ptr == NULL	3479:11:131317:131339	1276031	0	True				
ANR	1277492	EqualityExpression	color_stack_ptr == NULL		1276031	0		==			
ANR	1277493	Identifier	color_stack_ptr		1276031	0					
ANR	1277494	Identifier	NULL		1276031	1					
ANR	1277495	ExpressionStatement	return_error ( gs_error_unregistered )	3480:12:131354:131389	1276031	1	True				
ANR	1277496	CallExpression	return_error ( gs_error_unregistered )		1276031	0					
ANR	1277497	Callee	return_error		1276031	0					
ANR	1277498	Identifier	return_error		1276031	0					
ANR	1277499	ArgumentList	gs_error_unregistered		1276031	1					
ANR	1277500	Argument	gs_error_unregistered		1276031	0					
ANR	1277501	Identifier	gs_error_unregistered		1276031	0					
ANR	1277502	ExpressionStatement	q [ 0 ] . c = c [ 0 ]	3481:8:131422:131435	1276031	3	True				
ANR	1277503	AssignmentExpression	q [ 0 ] . c = c [ 0 ]		1276031	0		=			
ANR	1277504	MemberAccess	q [ 0 ] . c		1276031	0					
ANR	1277505	ArrayIndexing	q [ 0 ]		1276031	0					
ANR	1277506	Identifier	q		1276031	0					
ANR	1277507	PrimaryExpression	0		1276031	1					
ANR	1277508	Identifier	c		1276031	1					
ANR	1277509	ArrayIndexing	c [ 0 ]		1276031	1					
ANR	1277510	Identifier	c		1276031	0					
ANR	1277511	PrimaryExpression	0		1276031	1					
ANR	1277512	ExpressionStatement	q [ 1 ] . c = c [ 1 ]	3482:8:131445:131458	1276031	4	True				
ANR	1277513	AssignmentExpression	q [ 1 ] . c = c [ 1 ]		1276031	0		=			
ANR	1277514	MemberAccess	q [ 1 ] . c		1276031	0					
ANR	1277515	ArrayIndexing	q [ 1 ]		1276031	0					
ANR	1277516	Identifier	q		1276031	0					
ANR	1277517	PrimaryExpression	1		1276031	1					
ANR	1277518	Identifier	c		1276031	1					
ANR	1277519	ArrayIndexing	c [ 1 ]		1276031	1					
ANR	1277520	Identifier	c		1276031	0					
ANR	1277521	PrimaryExpression	1		1276031	1					
ANR	1277522	ExpressionStatement	"divide_quadrangle_by_v ( pfs , & s0 , & s1 , q , p , c )"	3483:8:131468:131514	1276031	5	True				
ANR	1277523	CallExpression	"divide_quadrangle_by_v ( pfs , & s0 , & s1 , q , p , c )"		1276031	0					
ANR	1277524	Callee	divide_quadrangle_by_v		1276031	0					
ANR	1277525	Identifier	divide_quadrangle_by_v		1276031	0					
ANR	1277526	ArgumentList	pfs		1276031	1					
ANR	1277527	Argument	pfs		1276031	0					
ANR	1277528	Identifier	pfs		1276031	0					
ANR	1277529	Argument	& s0		1276031	1					
ANR	1277530	UnaryOperationExpression	& s0		1276031	0					
ANR	1277531	UnaryOperator	&		1276031	0					
ANR	1277532	Identifier	s0		1276031	1					
ANR	1277533	Argument	& s1		1276031	2					
ANR	1277534	UnaryOperationExpression	& s1		1276031	0					
ANR	1277535	UnaryOperator	&		1276031	0					
ANR	1277536	Identifier	s1		1276031	1					
ANR	1277537	Argument	q		1276031	3					
ANR	1277538	Identifier	q		1276031	0					
ANR	1277539	Argument	p		1276031	4					
ANR	1277540	Identifier	p		1276031	0					
ANR	1277541	Argument	c		1276031	5					
ANR	1277542	Identifier	c		1276031	0					
ANR	1277543	IfStatement	if ( LAZY_WEDGES )		1276031	6					
ANR	1277544	Condition	LAZY_WEDGES	3484:12:131528:131538	1276031	0	True				
ANR	1277545	Identifier	LAZY_WEDGES		1276031	0					
ANR	1277546	CompoundStatement		168:25:7576:7576	1276031	1					
ANR	1277547	ExpressionStatement	"code = make_wedge_median ( pfs , & l1 , p -> l0111 , true , & p -> p [ 0 ] [ 1 ] -> p , & p -> p [ 1 ] [ 1 ] -> p , & s0 . p [ 1 ] [ 1 ] -> p )"	3485:12:131555:131654	1276031	0	True				
ANR	1277548	AssignmentExpression	"code = make_wedge_median ( pfs , & l1 , p -> l0111 , true , & p -> p [ 0 ] [ 1 ] -> p , & p -> p [ 1 ] [ 1 ] -> p , & s0 . p [ 1 ] [ 1 ] -> p )"		1276031	0		=			
ANR	1277549	Identifier	code		1276031	0					
ANR	1277550	CallExpression	"make_wedge_median ( pfs , & l1 , p -> l0111 , true , & p -> p [ 0 ] [ 1 ] -> p , & p -> p [ 1 ] [ 1 ] -> p , & s0 . p [ 1 ] [ 1 ] -> p )"		1276031	1					
ANR	1277551	Callee	make_wedge_median		1276031	0					
ANR	1277552	Identifier	make_wedge_median		1276031	0					
ANR	1277553	ArgumentList	pfs		1276031	1					
ANR	1277554	Argument	pfs		1276031	0					
ANR	1277555	Identifier	pfs		1276031	0					
ANR	1277556	Argument	& l1		1276031	1					
ANR	1277557	UnaryOperationExpression	& l1		1276031	0					
ANR	1277558	UnaryOperator	&		1276031	0					
ANR	1277559	Identifier	l1		1276031	1					
ANR	1277560	Argument	p -> l0111		1276031	2					
ANR	1277561	PtrMemberAccess	p -> l0111		1276031	0					
ANR	1277562	Identifier	p		1276031	0					
ANR	1277563	Identifier	l0111		1276031	1					
ANR	1277564	Argument	true		1276031	3					
ANR	1277565	Identifier	true		1276031	0					
ANR	1277566	Argument	& p -> p [ 0 ] [ 1 ] -> p		1276031	4					
ANR	1277567	UnaryOperationExpression	& p -> p [ 0 ] [ 1 ] -> p		1276031	0					
ANR	1277568	UnaryOperator	&		1276031	0					
ANR	1277569	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> p		1276031	1					
ANR	1277570	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1276031	0					
ANR	1277571	ArrayIndexing	p -> p [ 0 ]		1276031	0					
ANR	1277572	PtrMemberAccess	p -> p		1276031	0					
ANR	1277573	Identifier	p		1276031	0					
ANR	1277574	Identifier	p		1276031	1					
ANR	1277575	PrimaryExpression	0		1276031	1					
ANR	1277576	PrimaryExpression	1		1276031	1					
ANR	1277577	Identifier	p		1276031	1					
ANR	1277578	Argument	& p -> p [ 1 ] [ 1 ] -> p		1276031	5					
ANR	1277579	UnaryOperationExpression	& p -> p [ 1 ] [ 1 ] -> p		1276031	0					
ANR	1277580	UnaryOperator	&		1276031	0					
ANR	1277581	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> p		1276031	1					
ANR	1277582	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1276031	0					
ANR	1277583	ArrayIndexing	p -> p [ 1 ]		1276031	0					
ANR	1277584	PtrMemberAccess	p -> p		1276031	0					
ANR	1277585	Identifier	p		1276031	0					
ANR	1277586	Identifier	p		1276031	1					
ANR	1277587	PrimaryExpression	1		1276031	1					
ANR	1277588	PrimaryExpression	1		1276031	1					
ANR	1277589	Identifier	p		1276031	1					
ANR	1277590	Argument	& s0 . p [ 1 ] [ 1 ] -> p		1276031	6					
ANR	1277591	UnaryOperationExpression	& s0 . p [ 1 ] [ 1 ] -> p		1276031	0					
ANR	1277592	UnaryOperator	&		1276031	0					
ANR	1277593	PtrMemberAccess	s0 . p [ 1 ] [ 1 ] -> p		1276031	1					
ANR	1277594	ArrayIndexing	s0 . p [ 1 ] [ 1 ]		1276031	0					
ANR	1277595	ArrayIndexing	s0 . p [ 1 ]		1276031	0					
ANR	1277596	MemberAccess	s0 . p		1276031	0					
ANR	1277597	Identifier	s0		1276031	0					
ANR	1277598	Identifier	p		1276031	1					
ANR	1277599	PrimaryExpression	1		1276031	1					
ANR	1277600	PrimaryExpression	1		1276031	1					
ANR	1277601	Identifier	p		1276031	1					
ANR	1277602	IfStatement	if ( code >= 0 )		1276031	1					
ANR	1277603	Condition	code >= 0	3486:16:131672:131680	1276031	0	True				
ANR	1277604	RelationalExpression	code >= 0		1276031	0		>=			
ANR	1277605	Identifier	code		1276031	0					
ANR	1277606	PrimaryExpression	0		1276031	1					
ANR	1277607	ExpressionStatement	"code = make_wedge_median ( pfs , & l2 , p -> l1000 , false , & p -> p [ 1 ] [ 0 ] -> p , & p -> p [ 0 ] [ 0 ] -> p , & s0 . p [ 1 ] [ 0 ] -> p )"	3487:16:131699:131798	1276031	1	True				
ANR	1277608	AssignmentExpression	"code = make_wedge_median ( pfs , & l2 , p -> l1000 , false , & p -> p [ 1 ] [ 0 ] -> p , & p -> p [ 0 ] [ 0 ] -> p , & s0 . p [ 1 ] [ 0 ] -> p )"		1276031	0		=			
ANR	1277609	Identifier	code		1276031	0					
ANR	1277610	CallExpression	"make_wedge_median ( pfs , & l2 , p -> l1000 , false , & p -> p [ 1 ] [ 0 ] -> p , & p -> p [ 0 ] [ 0 ] -> p , & s0 . p [ 1 ] [ 0 ] -> p )"		1276031	1					
ANR	1277611	Callee	make_wedge_median		1276031	0					
ANR	1277612	Identifier	make_wedge_median		1276031	0					
ANR	1277613	ArgumentList	pfs		1276031	1					
ANR	1277614	Argument	pfs		1276031	0					
ANR	1277615	Identifier	pfs		1276031	0					
ANR	1277616	Argument	& l2		1276031	1					
ANR	1277617	UnaryOperationExpression	& l2		1276031	0					
ANR	1277618	UnaryOperator	&		1276031	0					
ANR	1277619	Identifier	l2		1276031	1					
ANR	1277620	Argument	p -> l1000		1276031	2					
ANR	1277621	PtrMemberAccess	p -> l1000		1276031	0					
ANR	1277622	Identifier	p		1276031	0					
ANR	1277623	Identifier	l1000		1276031	1					
ANR	1277624	Argument	false		1276031	3					
ANR	1277625	Identifier	false		1276031	0					
ANR	1277626	Argument	& p -> p [ 1 ] [ 0 ] -> p		1276031	4					
ANR	1277627	UnaryOperationExpression	& p -> p [ 1 ] [ 0 ] -> p		1276031	0					
ANR	1277628	UnaryOperator	&		1276031	0					
ANR	1277629	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> p		1276031	1					
ANR	1277630	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1276031	0					
ANR	1277631	ArrayIndexing	p -> p [ 1 ]		1276031	0					
ANR	1277632	PtrMemberAccess	p -> p		1276031	0					
ANR	1277633	Identifier	p		1276031	0					
ANR	1277634	Identifier	p		1276031	1					
ANR	1277635	PrimaryExpression	1		1276031	1					
ANR	1277636	PrimaryExpression	0		1276031	1					
ANR	1277637	Identifier	p		1276031	1					
ANR	1277638	Argument	& p -> p [ 0 ] [ 0 ] -> p		1276031	5					
ANR	1277639	UnaryOperationExpression	& p -> p [ 0 ] [ 0 ] -> p		1276031	0					
ANR	1277640	UnaryOperator	&		1276031	0					
ANR	1277641	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> p		1276031	1					
ANR	1277642	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1276031	0					
ANR	1277643	ArrayIndexing	p -> p [ 0 ]		1276031	0					
ANR	1277644	PtrMemberAccess	p -> p		1276031	0					
ANR	1277645	Identifier	p		1276031	0					
ANR	1277646	Identifier	p		1276031	1					
ANR	1277647	PrimaryExpression	0		1276031	1					
ANR	1277648	PrimaryExpression	0		1276031	1					
ANR	1277649	Identifier	p		1276031	1					
ANR	1277650	Argument	& s0 . p [ 1 ] [ 0 ] -> p		1276031	6					
ANR	1277651	UnaryOperationExpression	& s0 . p [ 1 ] [ 0 ] -> p		1276031	0					
ANR	1277652	UnaryOperator	&		1276031	0					
ANR	1277653	PtrMemberAccess	s0 . p [ 1 ] [ 0 ] -> p		1276031	1					
ANR	1277654	ArrayIndexing	s0 . p [ 1 ] [ 0 ]		1276031	0					
ANR	1277655	ArrayIndexing	s0 . p [ 1 ]		1276031	0					
ANR	1277656	MemberAccess	s0 . p		1276031	0					
ANR	1277657	Identifier	s0		1276031	0					
ANR	1277658	Identifier	p		1276031	1					
ANR	1277659	PrimaryExpression	1		1276031	1					
ANR	1277660	PrimaryExpression	0		1276031	1					
ANR	1277661	Identifier	p		1276031	1					
ANR	1277662	IfStatement	if ( code >= 0 )		1276031	2					
ANR	1277663	Condition	code >= 0	3488:16:131816:131824	1276031	0	True				
ANR	1277664	RelationalExpression	code >= 0		1276031	0		>=			
ANR	1277665	Identifier	code		1276031	0					
ANR	1277666	PrimaryExpression	0		1276031	1					
ANR	1277667	CompoundStatement		172:27:7862:7862	1276031	1					
ANR	1277668	ExpressionStatement	s0 . l1110 = s1 . l0001 = & l0	3489:16:131845:131870	1276031	0	True				
ANR	1277669	AssignmentExpression	s0 . l1110 = s1 . l0001 = & l0		1276031	0		=			
ANR	1277670	MemberAccess	s0 . l1110		1276031	0					
ANR	1277671	Identifier	s0		1276031	0					
ANR	1277672	Identifier	l1110		1276031	1					
ANR	1277673	AssignmentExpression	s1 . l0001 = & l0		1276031	1		=			
ANR	1277674	MemberAccess	s1 . l0001		1276031	0					
ANR	1277675	Identifier	s1		1276031	0					
ANR	1277676	Identifier	l0001		1276031	1					
ANR	1277677	UnaryOperationExpression	& l0		1276031	1					
ANR	1277678	UnaryOperator	&		1276031	0					
ANR	1277679	Identifier	l0		1276031	1					
ANR	1277680	ExpressionStatement	s0 . l0111 = s1 . l0111 = & l1	3490:16:131888:131913	1276031	1	True				
ANR	1277681	AssignmentExpression	s0 . l0111 = s1 . l0111 = & l1		1276031	0		=			
ANR	1277682	MemberAccess	s0 . l0111		1276031	0					
ANR	1277683	Identifier	s0		1276031	0					
ANR	1277684	Identifier	l0111		1276031	1					
ANR	1277685	AssignmentExpression	s1 . l0111 = & l1		1276031	1		=			
ANR	1277686	MemberAccess	s1 . l0111		1276031	0					
ANR	1277687	Identifier	s1		1276031	0					
ANR	1277688	Identifier	l0111		1276031	1					
ANR	1277689	UnaryOperationExpression	& l1		1276031	1					
ANR	1277690	UnaryOperator	&		1276031	0					
ANR	1277691	Identifier	l1		1276031	1					
ANR	1277692	ExpressionStatement	s0 . l1000 = s1 . l1000 = & l2	3491:16:131931:131956	1276031	2	True				
ANR	1277693	AssignmentExpression	s0 . l1000 = s1 . l1000 = & l2		1276031	0		=			
ANR	1277694	MemberAccess	s0 . l1000		1276031	0					
ANR	1277695	Identifier	s0		1276031	0					
ANR	1277696	Identifier	l1000		1276031	1					
ANR	1277697	AssignmentExpression	s1 . l1000 = & l2		1276031	1		=			
ANR	1277698	MemberAccess	s1 . l1000		1276031	0					
ANR	1277699	Identifier	s1		1276031	0					
ANR	1277700	Identifier	l1000		1276031	1					
ANR	1277701	UnaryOperationExpression	& l2		1276031	1					
ANR	1277702	UnaryOperator	&		1276031	0					
ANR	1277703	Identifier	l2		1276031	1					
ANR	1277704	ExpressionStatement	s0 . l0001 = p -> l0001	3492:16:131974:131993	1276031	3	True				
ANR	1277705	AssignmentExpression	s0 . l0001 = p -> l0001		1276031	0		=			
ANR	1277706	MemberAccess	s0 . l0001		1276031	0					
ANR	1277707	Identifier	s0		1276031	0					
ANR	1277708	Identifier	l0001		1276031	1					
ANR	1277709	PtrMemberAccess	p -> l0001		1276031	1					
ANR	1277710	Identifier	p		1276031	0					
ANR	1277711	Identifier	l0001		1276031	1					
ANR	1277712	ExpressionStatement	s1 . l1110 = p -> l1110	3493:16:132011:132030	1276031	4	True				
ANR	1277713	AssignmentExpression	s1 . l1110 = p -> l1110		1276031	0		=			
ANR	1277714	MemberAccess	s1 . l1110		1276031	0					
ANR	1277715	Identifier	s1		1276031	0					
ANR	1277716	Identifier	l1110		1276031	1					
ANR	1277717	PtrMemberAccess	p -> l1110		1276031	1					
ANR	1277718	Identifier	p		1276031	0					
ANR	1277719	Identifier	l1110		1276031	1					
ANR	1277720	ElseStatement	else		1276031	0					
ANR	1277721	CompoundStatement		179:15:8096:8096	1276031	0					
ANR	1277722	ExpressionStatement	"code = fill_triangle_wedge ( pfs , s0 . p [ 0 ] [ 0 ] , s1 . p [ 1 ] [ 0 ] , s0 . p [ 1 ] [ 0 ] )"	3496:12:132075:132142	1276031	0	True				
ANR	1277723	AssignmentExpression	"code = fill_triangle_wedge ( pfs , s0 . p [ 0 ] [ 0 ] , s1 . p [ 1 ] [ 0 ] , s0 . p [ 1 ] [ 0 ] )"		1276031	0		=			
ANR	1277724	Identifier	code		1276031	0					
ANR	1277725	CallExpression	"fill_triangle_wedge ( pfs , s0 . p [ 0 ] [ 0 ] , s1 . p [ 1 ] [ 0 ] , s0 . p [ 1 ] [ 0 ] )"		1276031	1					
ANR	1277726	Callee	fill_triangle_wedge		1276031	0					
ANR	1277727	Identifier	fill_triangle_wedge		1276031	0					
ANR	1277728	ArgumentList	pfs		1276031	1					
ANR	1277729	Argument	pfs		1276031	0					
ANR	1277730	Identifier	pfs		1276031	0					
ANR	1277731	Argument	s0 . p [ 0 ] [ 0 ]		1276031	1					
ANR	1277732	ArrayIndexing	s0 . p [ 0 ] [ 0 ]		1276031	0					
ANR	1277733	ArrayIndexing	s0 . p [ 0 ]		1276031	0					
ANR	1277734	MemberAccess	s0 . p		1276031	0					
ANR	1277735	Identifier	s0		1276031	0					
ANR	1277736	Identifier	p		1276031	1					
ANR	1277737	PrimaryExpression	0		1276031	1					
ANR	1277738	PrimaryExpression	0		1276031	1					
ANR	1277739	Argument	s1 . p [ 1 ] [ 0 ]		1276031	2					
ANR	1277740	ArrayIndexing	s1 . p [ 1 ] [ 0 ]		1276031	0					
ANR	1277741	ArrayIndexing	s1 . p [ 1 ]		1276031	0					
ANR	1277742	MemberAccess	s1 . p		1276031	0					
ANR	1277743	Identifier	s1		1276031	0					
ANR	1277744	Identifier	p		1276031	1					
ANR	1277745	PrimaryExpression	1		1276031	1					
ANR	1277746	PrimaryExpression	0		1276031	1					
ANR	1277747	Argument	s0 . p [ 1 ] [ 0 ]		1276031	3					
ANR	1277748	ArrayIndexing	s0 . p [ 1 ] [ 0 ]		1276031	0					
ANR	1277749	ArrayIndexing	s0 . p [ 1 ]		1276031	0					
ANR	1277750	MemberAccess	s0 . p		1276031	0					
ANR	1277751	Identifier	s0		1276031	0					
ANR	1277752	Identifier	p		1276031	1					
ANR	1277753	PrimaryExpression	1		1276031	1					
ANR	1277754	PrimaryExpression	0		1276031	1					
ANR	1277755	IfStatement	if ( code >= 0 )		1276031	1					
ANR	1277756	Condition	code >= 0	3497:16:132160:132168	1276031	0	True				
ANR	1277757	RelationalExpression	code >= 0		1276031	0		>=			
ANR	1277758	Identifier	code		1276031	0					
ANR	1277759	PrimaryExpression	0		1276031	1					
ANR	1277760	ExpressionStatement	"code = fill_triangle_wedge ( pfs , s0 . p [ 0 ] [ 1 ] , s1 . p [ 1 ] [ 1 ] , s0 . p [ 1 ] [ 1 ] )"	3498:16:132187:132254	1276031	1	True				
ANR	1277761	AssignmentExpression	"code = fill_triangle_wedge ( pfs , s0 . p [ 0 ] [ 1 ] , s1 . p [ 1 ] [ 1 ] , s0 . p [ 1 ] [ 1 ] )"		1276031	0		=			
ANR	1277762	Identifier	code		1276031	0					
ANR	1277763	CallExpression	"fill_triangle_wedge ( pfs , s0 . p [ 0 ] [ 1 ] , s1 . p [ 1 ] [ 1 ] , s0 . p [ 1 ] [ 1 ] )"		1276031	1					
ANR	1277764	Callee	fill_triangle_wedge		1276031	0					
ANR	1277765	Identifier	fill_triangle_wedge		1276031	0					
ANR	1277766	ArgumentList	pfs		1276031	1					
ANR	1277767	Argument	pfs		1276031	0					
ANR	1277768	Identifier	pfs		1276031	0					
ANR	1277769	Argument	s0 . p [ 0 ] [ 1 ]		1276031	1					
ANR	1277770	ArrayIndexing	s0 . p [ 0 ] [ 1 ]		1276031	0					
ANR	1277771	ArrayIndexing	s0 . p [ 0 ]		1276031	0					
ANR	1277772	MemberAccess	s0 . p		1276031	0					
ANR	1277773	Identifier	s0		1276031	0					
ANR	1277774	Identifier	p		1276031	1					
ANR	1277775	PrimaryExpression	0		1276031	1					
ANR	1277776	PrimaryExpression	1		1276031	1					
ANR	1277777	Argument	s1 . p [ 1 ] [ 1 ]		1276031	2					
ANR	1277778	ArrayIndexing	s1 . p [ 1 ] [ 1 ]		1276031	0					
ANR	1277779	ArrayIndexing	s1 . p [ 1 ]		1276031	0					
ANR	1277780	MemberAccess	s1 . p		1276031	0					
ANR	1277781	Identifier	s1		1276031	0					
ANR	1277782	Identifier	p		1276031	1					
ANR	1277783	PrimaryExpression	1		1276031	1					
ANR	1277784	PrimaryExpression	1		1276031	1					
ANR	1277785	Argument	s0 . p [ 1 ] [ 1 ]		1276031	3					
ANR	1277786	ArrayIndexing	s0 . p [ 1 ] [ 1 ]		1276031	0					
ANR	1277787	ArrayIndexing	s0 . p [ 1 ]		1276031	0					
ANR	1277788	MemberAccess	s0 . p		1276031	0					
ANR	1277789	Identifier	s0		1276031	0					
ANR	1277790	Identifier	p		1276031	1					
ANR	1277791	PrimaryExpression	1		1276031	1					
ANR	1277792	PrimaryExpression	1		1276031	1					
ANR	1277793	IfStatement	if ( code >= 0 )		1276031	7					
ANR	1277794	Condition	code >= 0	3500:12:132278:132286	1276031	0	True				
ANR	1277795	RelationalExpression	code >= 0		1276031	0		>=			
ANR	1277796	Identifier	code		1276031	0					
ANR	1277797	PrimaryExpression	0		1276031	1					
ANR	1277798	ExpressionStatement	"code = fill_quadrangle ( pfs , & s0 , big1 )"	3501:12:132301:132339	1276031	1	True				
ANR	1277799	AssignmentExpression	"code = fill_quadrangle ( pfs , & s0 , big1 )"		1276031	0		=			
ANR	1277800	Identifier	code		1276031	0					
ANR	1277801	CallExpression	"fill_quadrangle ( pfs , & s0 , big1 )"		1276031	1					
ANR	1277802	Callee	fill_quadrangle		1276031	0					
ANR	1277803	Identifier	fill_quadrangle		1276031	0					
ANR	1277804	ArgumentList	pfs		1276031	1					
ANR	1277805	Argument	pfs		1276031	0					
ANR	1277806	Identifier	pfs		1276031	0					
ANR	1277807	Argument	& s0		1276031	1					
ANR	1277808	UnaryOperationExpression	& s0		1276031	0					
ANR	1277809	UnaryOperator	&		1276031	0					
ANR	1277810	Identifier	s0		1276031	1					
ANR	1277811	Argument	big1		1276031	2					
ANR	1277812	Identifier	big1		1276031	0					
ANR	1277813	IfStatement	if ( code >= 0 )		1276031	8					
ANR	1277814	Condition	code >= 0	3502:12:132353:132361	1276031	0	True				
ANR	1277815	RelationalExpression	code >= 0		1276031	0		>=			
ANR	1277816	Identifier	code		1276031	0					
ANR	1277817	PrimaryExpression	0		1276031	1					
ANR	1277818	CompoundStatement		186:23:8399:8399	1276031	1					
ANR	1277819	IfStatement	if ( LAZY_WEDGES )		1276031	0					
ANR	1277820	Condition	LAZY_WEDGES	3503:16:132382:132392	1276031	0	True				
ANR	1277821	Identifier	LAZY_WEDGES		1276031	0					
ANR	1277822	CompoundStatement		187:29:8430:8430	1276031	1					
ANR	1277823	ExpressionStatement	l0 . last_side = true	3504:16:132413:132432	1276031	0	True				
ANR	1277824	AssignmentExpression	l0 . last_side = true		1276031	0		=			
ANR	1277825	MemberAccess	l0 . last_side		1276031	0					
ANR	1277826	Identifier	l0		1276031	0					
ANR	1277827	Identifier	last_side		1276031	1					
ANR	1277828	Identifier	true		1276031	1					
ANR	1277829	ExpressionStatement	"move_wedge ( & l1 , p -> l0111 , true )"	3505:16:132450:132481	1276031	1	True				
ANR	1277830	CallExpression	"move_wedge ( & l1 , p -> l0111 , true )"		1276031	0					
ANR	1277831	Callee	move_wedge		1276031	0					
ANR	1277832	Identifier	move_wedge		1276031	0					
ANR	1277833	ArgumentList	& l1		1276031	1					
ANR	1277834	Argument	& l1		1276031	0					
ANR	1277835	UnaryOperationExpression	& l1		1276031	0					
ANR	1277836	UnaryOperator	&		1276031	0					
ANR	1277837	Identifier	l1		1276031	1					
ANR	1277838	Argument	p -> l0111		1276031	1					
ANR	1277839	PtrMemberAccess	p -> l0111		1276031	0					
ANR	1277840	Identifier	p		1276031	0					
ANR	1277841	Identifier	l0111		1276031	1					
ANR	1277842	Argument	true		1276031	2					
ANR	1277843	Identifier	true		1276031	0					
ANR	1277844	ExpressionStatement	"move_wedge ( & l2 , p -> l1000 , false )"	3506:16:132499:132531	1276031	2	True				
ANR	1277845	CallExpression	"move_wedge ( & l2 , p -> l1000 , false )"		1276031	0					
ANR	1277846	Callee	move_wedge		1276031	0					
ANR	1277847	Identifier	move_wedge		1276031	0					
ANR	1277848	ArgumentList	& l2		1276031	1					
ANR	1277849	Argument	& l2		1276031	0					
ANR	1277850	UnaryOperationExpression	& l2		1276031	0					
ANR	1277851	UnaryOperator	&		1276031	0					
ANR	1277852	Identifier	l2		1276031	1					
ANR	1277853	Argument	p -> l1000		1276031	1					
ANR	1277854	PtrMemberAccess	p -> l1000		1276031	0					
ANR	1277855	Identifier	p		1276031	0					
ANR	1277856	Identifier	l1000		1276031	1					
ANR	1277857	Argument	false		1276031	2					
ANR	1277858	Identifier	false		1276031	0					
ANR	1277859	ExpressionStatement	"code = fill_quadrangle ( pfs , & s1 , big1 )"	3508:12:132559:132597	1276031	1	True				
ANR	1277860	AssignmentExpression	"code = fill_quadrangle ( pfs , & s1 , big1 )"		1276031	0		=			
ANR	1277861	Identifier	code		1276031	0					
ANR	1277862	CallExpression	"fill_quadrangle ( pfs , & s1 , big1 )"		1276031	1					
ANR	1277863	Callee	fill_quadrangle		1276031	0					
ANR	1277864	Identifier	fill_quadrangle		1276031	0					
ANR	1277865	ArgumentList	pfs		1276031	1					
ANR	1277866	Argument	pfs		1276031	0					
ANR	1277867	Identifier	pfs		1276031	0					
ANR	1277868	Argument	& s1		1276031	1					
ANR	1277869	UnaryOperationExpression	& s1		1276031	0					
ANR	1277870	UnaryOperator	&		1276031	0					
ANR	1277871	Identifier	s1		1276031	1					
ANR	1277872	Argument	big1		1276031	2					
ANR	1277873	Identifier	big1		1276031	0					
ANR	1277874	IfStatement	if ( LAZY_WEDGES )		1276031	9					
ANR	1277875	Condition	LAZY_WEDGES	3510:12:132621:132631	1276031	0	True				
ANR	1277876	Identifier	LAZY_WEDGES		1276031	0					
ANR	1277877	CompoundStatement		194:25:8669:8669	1276031	1					
ANR	1277878	IfStatement	if ( code >= 0 )		1276031	0					
ANR	1277879	Condition	code >= 0	3511:16:132652:132660	1276031	0	True				
ANR	1277880	RelationalExpression	code >= 0		1276031	0		>=			
ANR	1277881	Identifier	code		1276031	0					
ANR	1277882	PrimaryExpression	0		1276031	1					
ANR	1277883	ExpressionStatement	"code = close_wedge_median ( pfs , p -> l0111 , p -> p [ 0 ] [ 1 ] -> c , p -> p [ 1 ] [ 1 ] -> c )"	3512:16:132679:132749	1276031	1	True				
ANR	1277884	AssignmentExpression	"code = close_wedge_median ( pfs , p -> l0111 , p -> p [ 0 ] [ 1 ] -> c , p -> p [ 1 ] [ 1 ] -> c )"		1276031	0		=			
ANR	1277885	Identifier	code		1276031	0					
ANR	1277886	CallExpression	"close_wedge_median ( pfs , p -> l0111 , p -> p [ 0 ] [ 1 ] -> c , p -> p [ 1 ] [ 1 ] -> c )"		1276031	1					
ANR	1277887	Callee	close_wedge_median		1276031	0					
ANR	1277888	Identifier	close_wedge_median		1276031	0					
ANR	1277889	ArgumentList	pfs		1276031	1					
ANR	1277890	Argument	pfs		1276031	0					
ANR	1277891	Identifier	pfs		1276031	0					
ANR	1277892	Argument	p -> l0111		1276031	1					
ANR	1277893	PtrMemberAccess	p -> l0111		1276031	0					
ANR	1277894	Identifier	p		1276031	0					
ANR	1277895	Identifier	l0111		1276031	1					
ANR	1277896	Argument	p -> p [ 0 ] [ 1 ] -> c		1276031	2					
ANR	1277897	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> c		1276031	0					
ANR	1277898	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1276031	0					
ANR	1277899	ArrayIndexing	p -> p [ 0 ]		1276031	0					
ANR	1277900	PtrMemberAccess	p -> p		1276031	0					
ANR	1277901	Identifier	p		1276031	0					
ANR	1277902	Identifier	p		1276031	1					
ANR	1277903	PrimaryExpression	0		1276031	1					
ANR	1277904	PrimaryExpression	1		1276031	1					
ANR	1277905	Identifier	c		1276031	1					
ANR	1277906	Argument	p -> p [ 1 ] [ 1 ] -> c		1276031	3					
ANR	1277907	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> c		1276031	0					
ANR	1277908	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1276031	0					
ANR	1277909	ArrayIndexing	p -> p [ 1 ]		1276031	0					
ANR	1277910	PtrMemberAccess	p -> p		1276031	0					
ANR	1277911	Identifier	p		1276031	0					
ANR	1277912	Identifier	p		1276031	1					
ANR	1277913	PrimaryExpression	1		1276031	1					
ANR	1277914	PrimaryExpression	1		1276031	1					
ANR	1277915	Identifier	c		1276031	1					
ANR	1277916	IfStatement	if ( code >= 0 )		1276031	1					
ANR	1277917	Condition	code >= 0	3513:16:132767:132775	1276031	0	True				
ANR	1277918	RelationalExpression	code >= 0		1276031	0		>=			
ANR	1277919	Identifier	code		1276031	0					
ANR	1277920	PrimaryExpression	0		1276031	1					
ANR	1277921	ExpressionStatement	"code = close_wedge_median ( pfs , p -> l1000 , p -> p [ 1 ] [ 0 ] -> c , p -> p [ 0 ] [ 0 ] -> c )"	3514:16:132794:132864	1276031	1	True				
ANR	1277922	AssignmentExpression	"code = close_wedge_median ( pfs , p -> l1000 , p -> p [ 1 ] [ 0 ] -> c , p -> p [ 0 ] [ 0 ] -> c )"		1276031	0		=			
ANR	1277923	Identifier	code		1276031	0					
ANR	1277924	CallExpression	"close_wedge_median ( pfs , p -> l1000 , p -> p [ 1 ] [ 0 ] -> c , p -> p [ 0 ] [ 0 ] -> c )"		1276031	1					
ANR	1277925	Callee	close_wedge_median		1276031	0					
ANR	1277926	Identifier	close_wedge_median		1276031	0					
ANR	1277927	ArgumentList	pfs		1276031	1					
ANR	1277928	Argument	pfs		1276031	0					
ANR	1277929	Identifier	pfs		1276031	0					
ANR	1277930	Argument	p -> l1000		1276031	1					
ANR	1277931	PtrMemberAccess	p -> l1000		1276031	0					
ANR	1277932	Identifier	p		1276031	0					
ANR	1277933	Identifier	l1000		1276031	1					
ANR	1277934	Argument	p -> p [ 1 ] [ 0 ] -> c		1276031	2					
ANR	1277935	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> c		1276031	0					
ANR	1277936	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1276031	0					
ANR	1277937	ArrayIndexing	p -> p [ 1 ]		1276031	0					
ANR	1277938	PtrMemberAccess	p -> p		1276031	0					
ANR	1277939	Identifier	p		1276031	0					
ANR	1277940	Identifier	p		1276031	1					
ANR	1277941	PrimaryExpression	1		1276031	1					
ANR	1277942	PrimaryExpression	0		1276031	1					
ANR	1277943	Identifier	c		1276031	1					
ANR	1277944	Argument	p -> p [ 0 ] [ 0 ] -> c		1276031	3					
ANR	1277945	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> c		1276031	0					
ANR	1277946	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1276031	0					
ANR	1277947	ArrayIndexing	p -> p [ 0 ]		1276031	0					
ANR	1277948	PtrMemberAccess	p -> p		1276031	0					
ANR	1277949	Identifier	p		1276031	0					
ANR	1277950	Identifier	p		1276031	1					
ANR	1277951	PrimaryExpression	0		1276031	1					
ANR	1277952	PrimaryExpression	0		1276031	1					
ANR	1277953	Identifier	c		1276031	1					
ANR	1277954	IfStatement	if ( code >= 0 )		1276031	2					
ANR	1277955	Condition	code >= 0	3515:16:132882:132890	1276031	0	True				
ANR	1277956	RelationalExpression	code >= 0		1276031	0		>=			
ANR	1277957	Identifier	code		1276031	0					
ANR	1277958	PrimaryExpression	0		1276031	1					
ANR	1277959	ExpressionStatement	"code = terminate_wedge_vertex_list ( pfs , & l0 , s0 . p [ 1 ] [ 0 ] -> c , s0 . p [ 1 ] [ 1 ] -> c )"	3516:16:132909:132983	1276031	1	True				
ANR	1277960	AssignmentExpression	"code = terminate_wedge_vertex_list ( pfs , & l0 , s0 . p [ 1 ] [ 0 ] -> c , s0 . p [ 1 ] [ 1 ] -> c )"		1276031	0		=			
ANR	1277961	Identifier	code		1276031	0					
ANR	1277962	CallExpression	"terminate_wedge_vertex_list ( pfs , & l0 , s0 . p [ 1 ] [ 0 ] -> c , s0 . p [ 1 ] [ 1 ] -> c )"		1276031	1					
ANR	1277963	Callee	terminate_wedge_vertex_list		1276031	0					
ANR	1277964	Identifier	terminate_wedge_vertex_list		1276031	0					
ANR	1277965	ArgumentList	pfs		1276031	1					
ANR	1277966	Argument	pfs		1276031	0					
ANR	1277967	Identifier	pfs		1276031	0					
ANR	1277968	Argument	& l0		1276031	1					
ANR	1277969	UnaryOperationExpression	& l0		1276031	0					
ANR	1277970	UnaryOperator	&		1276031	0					
ANR	1277971	Identifier	l0		1276031	1					
ANR	1277972	Argument	s0 . p [ 1 ] [ 0 ] -> c		1276031	2					
ANR	1277973	PtrMemberAccess	s0 . p [ 1 ] [ 0 ] -> c		1276031	0					
ANR	1277974	ArrayIndexing	s0 . p [ 1 ] [ 0 ]		1276031	0					
ANR	1277975	ArrayIndexing	s0 . p [ 1 ]		1276031	0					
ANR	1277976	MemberAccess	s0 . p		1276031	0					
ANR	1277977	Identifier	s0		1276031	0					
ANR	1277978	Identifier	p		1276031	1					
ANR	1277979	PrimaryExpression	1		1276031	1					
ANR	1277980	PrimaryExpression	0		1276031	1					
ANR	1277981	Identifier	c		1276031	1					
ANR	1277982	Argument	s0 . p [ 1 ] [ 1 ] -> c		1276031	3					
ANR	1277983	PtrMemberAccess	s0 . p [ 1 ] [ 1 ] -> c		1276031	0					
ANR	1277984	ArrayIndexing	s0 . p [ 1 ] [ 1 ]		1276031	0					
ANR	1277985	ArrayIndexing	s0 . p [ 1 ]		1276031	0					
ANR	1277986	MemberAccess	s0 . p		1276031	0					
ANR	1277987	Identifier	s0		1276031	0					
ANR	1277988	Identifier	p		1276031	1					
ANR	1277989	PrimaryExpression	1		1276031	1					
ANR	1277990	PrimaryExpression	1		1276031	1					
ANR	1277991	Identifier	c		1276031	1					
ANR	1277992	ExpressionStatement	"release_colors_inline ( pfs , color_stack_ptr , 2 )"	3517:12:132997:133043	1276031	3	True				
ANR	1277993	CallExpression	"release_colors_inline ( pfs , color_stack_ptr , 2 )"		1276031	0					
ANR	1277994	Callee	release_colors_inline		1276031	0					
ANR	1277995	Identifier	release_colors_inline		1276031	0					
ANR	1277996	ArgumentList	pfs		1276031	1					
ANR	1277997	Argument	pfs		1276031	0					
ANR	1277998	Identifier	pfs		1276031	0					
ANR	1277999	Argument	color_stack_ptr		1276031	1					
ANR	1278000	Identifier	color_stack_ptr		1276031	0					
ANR	1278001	Argument	2		1276031	2					
ANR	1278002	PrimaryExpression	2		1276031	0					
ANR	1278003	ElseStatement	else		1276031	0					
ANR	1278004	IfStatement	if ( divide_u )		1276031	0					
ANR	1278005	Condition	divide_u	3519:15:133070:133077	1276031	0	True				
ANR	1278006	Identifier	divide_u		1276031	0					
ANR	1278007	CompoundStatement		205:8:9154:9210	1276031	1					
ANR	1278008	IdentifierDeclStatement	patch_color_t * c [ 2 ] ;	3520:8:133090:133109	1276031	0	True				
ANR	1278009	IdentifierDecl	* c [ 2 ]		1276031	0					
ANR	1278010	IdentifierDeclType	patch_color_t * [ 2 ]		1276031	0					
ANR	1278011	Identifier	c		1276031	1					
ANR	1278012	PrimaryExpression	2		1276031	2					
ANR	1278013	IdentifierDeclStatement	"byte * color_stack_ptr = reserve_colors_inline ( pfs , c , 2 ) ;"	3521:8:133119:133175	1276031	1	True				
ANR	1278014	IdentifierDecl	"* color_stack_ptr = reserve_colors_inline ( pfs , c , 2 )"		1276031	0					
ANR	1278015	IdentifierDeclType	byte *		1276031	0					
ANR	1278016	Identifier	color_stack_ptr		1276031	1					
ANR	1278017	AssignmentExpression	"* color_stack_ptr = reserve_colors_inline ( pfs , c , 2 )"		1276031	2		=			
ANR	1278018	Identifier	color_stack_ptr		1276031	0					
ANR	1278019	CallExpression	"reserve_colors_inline ( pfs , c , 2 )"		1276031	1					
ANR	1278020	Callee	reserve_colors_inline		1276031	0					
ANR	1278021	Identifier	reserve_colors_inline		1276031	0					
ANR	1278022	ArgumentList	pfs		1276031	1					
ANR	1278023	Argument	pfs		1276031	0					
ANR	1278024	Identifier	pfs		1276031	0					
ANR	1278025	Argument	c		1276031	1					
ANR	1278026	Identifier	c		1276031	0					
ANR	1278027	Argument	2		1276031	2					
ANR	1278028	PrimaryExpression	2		1276031	0					
ANR	1278029	IfStatement	if ( color_stack_ptr == NULL )		1276031	2					
ANR	1278030	Condition	color_stack_ptr == NULL	3523:11:133189:133211	1276031	0	True				
ANR	1278031	EqualityExpression	color_stack_ptr == NULL		1276031	0		==			
ANR	1278032	Identifier	color_stack_ptr		1276031	0					
ANR	1278033	Identifier	NULL		1276031	1					
ANR	1278034	ExpressionStatement	return_error ( gs_error_unregistered )	3524:12:133226:133261	1276031	1	True				
ANR	1278035	CallExpression	return_error ( gs_error_unregistered )		1276031	0					
ANR	1278036	Callee	return_error		1276031	0					
ANR	1278037	Identifier	return_error		1276031	0					
ANR	1278038	ArgumentList	gs_error_unregistered		1276031	1					
ANR	1278039	Argument	gs_error_unregistered		1276031	0					
ANR	1278040	Identifier	gs_error_unregistered		1276031	0					
ANR	1278041	ExpressionStatement	q [ 0 ] . c = c [ 0 ]	3525:8:133294:133307	1276031	3	True				
ANR	1278042	AssignmentExpression	q [ 0 ] . c = c [ 0 ]		1276031	0		=			
ANR	1278043	MemberAccess	q [ 0 ] . c		1276031	0					
ANR	1278044	ArrayIndexing	q [ 0 ]		1276031	0					
ANR	1278045	Identifier	q		1276031	0					
ANR	1278046	PrimaryExpression	0		1276031	1					
ANR	1278047	Identifier	c		1276031	1					
ANR	1278048	ArrayIndexing	c [ 0 ]		1276031	1					
ANR	1278049	Identifier	c		1276031	0					
ANR	1278050	PrimaryExpression	0		1276031	1					
ANR	1278051	ExpressionStatement	q [ 1 ] . c = c [ 1 ]	3526:8:133317:133330	1276031	4	True				
ANR	1278052	AssignmentExpression	q [ 1 ] . c = c [ 1 ]		1276031	0		=			
ANR	1278053	MemberAccess	q [ 1 ] . c		1276031	0					
ANR	1278054	ArrayIndexing	q [ 1 ]		1276031	0					
ANR	1278055	Identifier	q		1276031	0					
ANR	1278056	PrimaryExpression	1		1276031	1					
ANR	1278057	Identifier	c		1276031	1					
ANR	1278058	ArrayIndexing	c [ 1 ]		1276031	1					
ANR	1278059	Identifier	c		1276031	0					
ANR	1278060	PrimaryExpression	1		1276031	1					
ANR	1278061	ExpressionStatement	"divide_quadrangle_by_u ( pfs , & s0 , & s1 , q , p , c )"	3527:8:133340:133386	1276031	5	True				
ANR	1278062	CallExpression	"divide_quadrangle_by_u ( pfs , & s0 , & s1 , q , p , c )"		1276031	0					
ANR	1278063	Callee	divide_quadrangle_by_u		1276031	0					
ANR	1278064	Identifier	divide_quadrangle_by_u		1276031	0					
ANR	1278065	ArgumentList	pfs		1276031	1					
ANR	1278066	Argument	pfs		1276031	0					
ANR	1278067	Identifier	pfs		1276031	0					
ANR	1278068	Argument	& s0		1276031	1					
ANR	1278069	UnaryOperationExpression	& s0		1276031	0					
ANR	1278070	UnaryOperator	&		1276031	0					
ANR	1278071	Identifier	s0		1276031	1					
ANR	1278072	Argument	& s1		1276031	2					
ANR	1278073	UnaryOperationExpression	& s1		1276031	0					
ANR	1278074	UnaryOperator	&		1276031	0					
ANR	1278075	Identifier	s1		1276031	1					
ANR	1278076	Argument	q		1276031	3					
ANR	1278077	Identifier	q		1276031	0					
ANR	1278078	Argument	p		1276031	4					
ANR	1278079	Identifier	p		1276031	0					
ANR	1278080	Argument	c		1276031	5					
ANR	1278081	Identifier	c		1276031	0					
ANR	1278082	IfStatement	if ( LAZY_WEDGES )		1276031	6					
ANR	1278083	Condition	LAZY_WEDGES	3528:12:133400:133410	1276031	0	True				
ANR	1278084	Identifier	LAZY_WEDGES		1276031	0					
ANR	1278085	CompoundStatement		212:25:9448:9448	1276031	1					
ANR	1278086	ExpressionStatement	"code = make_wedge_median ( pfs , & l1 , p -> l0001 , true , & p -> p [ 0 ] [ 0 ] -> p , & p -> p [ 0 ] [ 1 ] -> p , & s0 . p [ 0 ] [ 1 ] -> p )"	3529:12:133427:133526	1276031	0	True				
ANR	1278087	AssignmentExpression	"code = make_wedge_median ( pfs , & l1 , p -> l0001 , true , & p -> p [ 0 ] [ 0 ] -> p , & p -> p [ 0 ] [ 1 ] -> p , & s0 . p [ 0 ] [ 1 ] -> p )"		1276031	0		=			
ANR	1278088	Identifier	code		1276031	0					
ANR	1278089	CallExpression	"make_wedge_median ( pfs , & l1 , p -> l0001 , true , & p -> p [ 0 ] [ 0 ] -> p , & p -> p [ 0 ] [ 1 ] -> p , & s0 . p [ 0 ] [ 1 ] -> p )"		1276031	1					
ANR	1278090	Callee	make_wedge_median		1276031	0					
ANR	1278091	Identifier	make_wedge_median		1276031	0					
ANR	1278092	ArgumentList	pfs		1276031	1					
ANR	1278093	Argument	pfs		1276031	0					
ANR	1278094	Identifier	pfs		1276031	0					
ANR	1278095	Argument	& l1		1276031	1					
ANR	1278096	UnaryOperationExpression	& l1		1276031	0					
ANR	1278097	UnaryOperator	&		1276031	0					
ANR	1278098	Identifier	l1		1276031	1					
ANR	1278099	Argument	p -> l0001		1276031	2					
ANR	1278100	PtrMemberAccess	p -> l0001		1276031	0					
ANR	1278101	Identifier	p		1276031	0					
ANR	1278102	Identifier	l0001		1276031	1					
ANR	1278103	Argument	true		1276031	3					
ANR	1278104	Identifier	true		1276031	0					
ANR	1278105	Argument	& p -> p [ 0 ] [ 0 ] -> p		1276031	4					
ANR	1278106	UnaryOperationExpression	& p -> p [ 0 ] [ 0 ] -> p		1276031	0					
ANR	1278107	UnaryOperator	&		1276031	0					
ANR	1278108	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> p		1276031	1					
ANR	1278109	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1276031	0					
ANR	1278110	ArrayIndexing	p -> p [ 0 ]		1276031	0					
ANR	1278111	PtrMemberAccess	p -> p		1276031	0					
ANR	1278112	Identifier	p		1276031	0					
ANR	1278113	Identifier	p		1276031	1					
ANR	1278114	PrimaryExpression	0		1276031	1					
ANR	1278115	PrimaryExpression	0		1276031	1					
ANR	1278116	Identifier	p		1276031	1					
ANR	1278117	Argument	& p -> p [ 0 ] [ 1 ] -> p		1276031	5					
ANR	1278118	UnaryOperationExpression	& p -> p [ 0 ] [ 1 ] -> p		1276031	0					
ANR	1278119	UnaryOperator	&		1276031	0					
ANR	1278120	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> p		1276031	1					
ANR	1278121	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1276031	0					
ANR	1278122	ArrayIndexing	p -> p [ 0 ]		1276031	0					
ANR	1278123	PtrMemberAccess	p -> p		1276031	0					
ANR	1278124	Identifier	p		1276031	0					
ANR	1278125	Identifier	p		1276031	1					
ANR	1278126	PrimaryExpression	0		1276031	1					
ANR	1278127	PrimaryExpression	1		1276031	1					
ANR	1278128	Identifier	p		1276031	1					
ANR	1278129	Argument	& s0 . p [ 0 ] [ 1 ] -> p		1276031	6					
ANR	1278130	UnaryOperationExpression	& s0 . p [ 0 ] [ 1 ] -> p		1276031	0					
ANR	1278131	UnaryOperator	&		1276031	0					
ANR	1278132	PtrMemberAccess	s0 . p [ 0 ] [ 1 ] -> p		1276031	1					
ANR	1278133	ArrayIndexing	s0 . p [ 0 ] [ 1 ]		1276031	0					
ANR	1278134	ArrayIndexing	s0 . p [ 0 ]		1276031	0					
ANR	1278135	MemberAccess	s0 . p		1276031	0					
ANR	1278136	Identifier	s0		1276031	0					
ANR	1278137	Identifier	p		1276031	1					
ANR	1278138	PrimaryExpression	0		1276031	1					
ANR	1278139	PrimaryExpression	1		1276031	1					
ANR	1278140	Identifier	p		1276031	1					
ANR	1278141	IfStatement	if ( code >= 0 )		1276031	1					
ANR	1278142	Condition	code >= 0	3530:16:133544:133552	1276031	0	True				
ANR	1278143	RelationalExpression	code >= 0		1276031	0		>=			
ANR	1278144	Identifier	code		1276031	0					
ANR	1278145	PrimaryExpression	0		1276031	1					
ANR	1278146	ExpressionStatement	"code = make_wedge_median ( pfs , & l2 , p -> l1110 , false , & p -> p [ 1 ] [ 1 ] -> p , & p -> p [ 1 ] [ 0 ] -> p , & s0 . p [ 1 ] [ 1 ] -> p )"	3531:16:133571:133670	1276031	1	True				
ANR	1278147	AssignmentExpression	"code = make_wedge_median ( pfs , & l2 , p -> l1110 , false , & p -> p [ 1 ] [ 1 ] -> p , & p -> p [ 1 ] [ 0 ] -> p , & s0 . p [ 1 ] [ 1 ] -> p )"		1276031	0		=			
ANR	1278148	Identifier	code		1276031	0					
ANR	1278149	CallExpression	"make_wedge_median ( pfs , & l2 , p -> l1110 , false , & p -> p [ 1 ] [ 1 ] -> p , & p -> p [ 1 ] [ 0 ] -> p , & s0 . p [ 1 ] [ 1 ] -> p )"		1276031	1					
ANR	1278150	Callee	make_wedge_median		1276031	0					
ANR	1278151	Identifier	make_wedge_median		1276031	0					
ANR	1278152	ArgumentList	pfs		1276031	1					
ANR	1278153	Argument	pfs		1276031	0					
ANR	1278154	Identifier	pfs		1276031	0					
ANR	1278155	Argument	& l2		1276031	1					
ANR	1278156	UnaryOperationExpression	& l2		1276031	0					
ANR	1278157	UnaryOperator	&		1276031	0					
ANR	1278158	Identifier	l2		1276031	1					
ANR	1278159	Argument	p -> l1110		1276031	2					
ANR	1278160	PtrMemberAccess	p -> l1110		1276031	0					
ANR	1278161	Identifier	p		1276031	0					
ANR	1278162	Identifier	l1110		1276031	1					
ANR	1278163	Argument	false		1276031	3					
ANR	1278164	Identifier	false		1276031	0					
ANR	1278165	Argument	& p -> p [ 1 ] [ 1 ] -> p		1276031	4					
ANR	1278166	UnaryOperationExpression	& p -> p [ 1 ] [ 1 ] -> p		1276031	0					
ANR	1278167	UnaryOperator	&		1276031	0					
ANR	1278168	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> p		1276031	1					
ANR	1278169	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1276031	0					
ANR	1278170	ArrayIndexing	p -> p [ 1 ]		1276031	0					
ANR	1278171	PtrMemberAccess	p -> p		1276031	0					
ANR	1278172	Identifier	p		1276031	0					
ANR	1278173	Identifier	p		1276031	1					
ANR	1278174	PrimaryExpression	1		1276031	1					
ANR	1278175	PrimaryExpression	1		1276031	1					
ANR	1278176	Identifier	p		1276031	1					
ANR	1278177	Argument	& p -> p [ 1 ] [ 0 ] -> p		1276031	5					
ANR	1278178	UnaryOperationExpression	& p -> p [ 1 ] [ 0 ] -> p		1276031	0					
ANR	1278179	UnaryOperator	&		1276031	0					
ANR	1278180	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> p		1276031	1					
ANR	1278181	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1276031	0					
ANR	1278182	ArrayIndexing	p -> p [ 1 ]		1276031	0					
ANR	1278183	PtrMemberAccess	p -> p		1276031	0					
ANR	1278184	Identifier	p		1276031	0					
ANR	1278185	Identifier	p		1276031	1					
ANR	1278186	PrimaryExpression	1		1276031	1					
ANR	1278187	PrimaryExpression	0		1276031	1					
ANR	1278188	Identifier	p		1276031	1					
ANR	1278189	Argument	& s0 . p [ 1 ] [ 1 ] -> p		1276031	6					
ANR	1278190	UnaryOperationExpression	& s0 . p [ 1 ] [ 1 ] -> p		1276031	0					
ANR	1278191	UnaryOperator	&		1276031	0					
ANR	1278192	PtrMemberAccess	s0 . p [ 1 ] [ 1 ] -> p		1276031	1					
ANR	1278193	ArrayIndexing	s0 . p [ 1 ] [ 1 ]		1276031	0					
ANR	1278194	ArrayIndexing	s0 . p [ 1 ]		1276031	0					
ANR	1278195	MemberAccess	s0 . p		1276031	0					
ANR	1278196	Identifier	s0		1276031	0					
ANR	1278197	Identifier	p		1276031	1					
ANR	1278198	PrimaryExpression	1		1276031	1					
ANR	1278199	PrimaryExpression	1		1276031	1					
ANR	1278200	Identifier	p		1276031	1					
ANR	1278201	IfStatement	if ( code >= 0 )		1276031	2					
ANR	1278202	Condition	code >= 0	3532:16:133688:133696	1276031	0	True				
ANR	1278203	RelationalExpression	code >= 0		1276031	0		>=			
ANR	1278204	Identifier	code		1276031	0					
ANR	1278205	PrimaryExpression	0		1276031	1					
ANR	1278206	CompoundStatement		216:27:9734:9734	1276031	1					
ANR	1278207	ExpressionStatement	s0 . l0111 = s1 . l1000 = & l0	3533:16:133717:133742	1276031	0	True				
ANR	1278208	AssignmentExpression	s0 . l0111 = s1 . l1000 = & l0		1276031	0		=			
ANR	1278209	MemberAccess	s0 . l0111		1276031	0					
ANR	1278210	Identifier	s0		1276031	0					
ANR	1278211	Identifier	l0111		1276031	1					
ANR	1278212	AssignmentExpression	s1 . l1000 = & l0		1276031	1		=			
ANR	1278213	MemberAccess	s1 . l1000		1276031	0					
ANR	1278214	Identifier	s1		1276031	0					
ANR	1278215	Identifier	l1000		1276031	1					
ANR	1278216	UnaryOperationExpression	& l0		1276031	1					
ANR	1278217	UnaryOperator	&		1276031	0					
ANR	1278218	Identifier	l0		1276031	1					
ANR	1278219	ExpressionStatement	s0 . l0001 = s1 . l0001 = & l1	3534:16:133760:133785	1276031	1	True				
ANR	1278220	AssignmentExpression	s0 . l0001 = s1 . l0001 = & l1		1276031	0		=			
ANR	1278221	MemberAccess	s0 . l0001		1276031	0					
ANR	1278222	Identifier	s0		1276031	0					
ANR	1278223	Identifier	l0001		1276031	1					
ANR	1278224	AssignmentExpression	s1 . l0001 = & l1		1276031	1		=			
ANR	1278225	MemberAccess	s1 . l0001		1276031	0					
ANR	1278226	Identifier	s1		1276031	0					
ANR	1278227	Identifier	l0001		1276031	1					
ANR	1278228	UnaryOperationExpression	& l1		1276031	1					
ANR	1278229	UnaryOperator	&		1276031	0					
ANR	1278230	Identifier	l1		1276031	1					
ANR	1278231	ExpressionStatement	s0 . l1110 = s1 . l1110 = & l2	3535:16:133803:133828	1276031	2	True				
ANR	1278232	AssignmentExpression	s0 . l1110 = s1 . l1110 = & l2		1276031	0		=			
ANR	1278233	MemberAccess	s0 . l1110		1276031	0					
ANR	1278234	Identifier	s0		1276031	0					
ANR	1278235	Identifier	l1110		1276031	1					
ANR	1278236	AssignmentExpression	s1 . l1110 = & l2		1276031	1		=			
ANR	1278237	MemberAccess	s1 . l1110		1276031	0					
ANR	1278238	Identifier	s1		1276031	0					
ANR	1278239	Identifier	l1110		1276031	1					
ANR	1278240	UnaryOperationExpression	& l2		1276031	1					
ANR	1278241	UnaryOperator	&		1276031	0					
ANR	1278242	Identifier	l2		1276031	1					
ANR	1278243	ExpressionStatement	s0 . l1000 = p -> l1000	3536:16:133846:133865	1276031	3	True				
ANR	1278244	AssignmentExpression	s0 . l1000 = p -> l1000		1276031	0		=			
ANR	1278245	MemberAccess	s0 . l1000		1276031	0					
ANR	1278246	Identifier	s0		1276031	0					
ANR	1278247	Identifier	l1000		1276031	1					
ANR	1278248	PtrMemberAccess	p -> l1000		1276031	1					
ANR	1278249	Identifier	p		1276031	0					
ANR	1278250	Identifier	l1000		1276031	1					
ANR	1278251	ExpressionStatement	s1 . l0111 = p -> l0111	3537:16:133883:133902	1276031	4	True				
ANR	1278252	AssignmentExpression	s1 . l0111 = p -> l0111		1276031	0		=			
ANR	1278253	MemberAccess	s1 . l0111		1276031	0					
ANR	1278254	Identifier	s1		1276031	0					
ANR	1278255	Identifier	l0111		1276031	1					
ANR	1278256	PtrMemberAccess	p -> l0111		1276031	1					
ANR	1278257	Identifier	p		1276031	0					
ANR	1278258	Identifier	l0111		1276031	1					
ANR	1278259	ElseStatement	else		1276031	0					
ANR	1278260	CompoundStatement		223:15:9968:9968	1276031	0					
ANR	1278261	ExpressionStatement	"code = fill_triangle_wedge ( pfs , s0 . p [ 0 ] [ 0 ] , s1 . p [ 0 ] [ 1 ] , s0 . p [ 0 ] [ 1 ] )"	3540:12:133947:134014	1276031	0	True				
ANR	1278262	AssignmentExpression	"code = fill_triangle_wedge ( pfs , s0 . p [ 0 ] [ 0 ] , s1 . p [ 0 ] [ 1 ] , s0 . p [ 0 ] [ 1 ] )"		1276031	0		=			
ANR	1278263	Identifier	code		1276031	0					
ANR	1278264	CallExpression	"fill_triangle_wedge ( pfs , s0 . p [ 0 ] [ 0 ] , s1 . p [ 0 ] [ 1 ] , s0 . p [ 0 ] [ 1 ] )"		1276031	1					
ANR	1278265	Callee	fill_triangle_wedge		1276031	0					
ANR	1278266	Identifier	fill_triangle_wedge		1276031	0					
ANR	1278267	ArgumentList	pfs		1276031	1					
ANR	1278268	Argument	pfs		1276031	0					
ANR	1278269	Identifier	pfs		1276031	0					
ANR	1278270	Argument	s0 . p [ 0 ] [ 0 ]		1276031	1					
ANR	1278271	ArrayIndexing	s0 . p [ 0 ] [ 0 ]		1276031	0					
ANR	1278272	ArrayIndexing	s0 . p [ 0 ]		1276031	0					
ANR	1278273	MemberAccess	s0 . p		1276031	0					
ANR	1278274	Identifier	s0		1276031	0					
ANR	1278275	Identifier	p		1276031	1					
ANR	1278276	PrimaryExpression	0		1276031	1					
ANR	1278277	PrimaryExpression	0		1276031	1					
ANR	1278278	Argument	s1 . p [ 0 ] [ 1 ]		1276031	2					
ANR	1278279	ArrayIndexing	s1 . p [ 0 ] [ 1 ]		1276031	0					
ANR	1278280	ArrayIndexing	s1 . p [ 0 ]		1276031	0					
ANR	1278281	MemberAccess	s1 . p		1276031	0					
ANR	1278282	Identifier	s1		1276031	0					
ANR	1278283	Identifier	p		1276031	1					
ANR	1278284	PrimaryExpression	0		1276031	1					
ANR	1278285	PrimaryExpression	1		1276031	1					
ANR	1278286	Argument	s0 . p [ 0 ] [ 1 ]		1276031	3					
ANR	1278287	ArrayIndexing	s0 . p [ 0 ] [ 1 ]		1276031	0					
ANR	1278288	ArrayIndexing	s0 . p [ 0 ]		1276031	0					
ANR	1278289	MemberAccess	s0 . p		1276031	0					
ANR	1278290	Identifier	s0		1276031	0					
ANR	1278291	Identifier	p		1276031	1					
ANR	1278292	PrimaryExpression	0		1276031	1					
ANR	1278293	PrimaryExpression	1		1276031	1					
ANR	1278294	IfStatement	if ( code >= 0 )		1276031	1					
ANR	1278295	Condition	code >= 0	3541:16:134032:134040	1276031	0	True				
ANR	1278296	RelationalExpression	code >= 0		1276031	0		>=			
ANR	1278297	Identifier	code		1276031	0					
ANR	1278298	PrimaryExpression	0		1276031	1					
ANR	1278299	ExpressionStatement	"code = fill_triangle_wedge ( pfs , s0 . p [ 1 ] [ 0 ] , s1 . p [ 1 ] [ 1 ] , s0 . p [ 1 ] [ 1 ] )"	3542:16:134059:134126	1276031	1	True				
ANR	1278300	AssignmentExpression	"code = fill_triangle_wedge ( pfs , s0 . p [ 1 ] [ 0 ] , s1 . p [ 1 ] [ 1 ] , s0 . p [ 1 ] [ 1 ] )"		1276031	0		=			
ANR	1278301	Identifier	code		1276031	0					
ANR	1278302	CallExpression	"fill_triangle_wedge ( pfs , s0 . p [ 1 ] [ 0 ] , s1 . p [ 1 ] [ 1 ] , s0 . p [ 1 ] [ 1 ] )"		1276031	1					
ANR	1278303	Callee	fill_triangle_wedge		1276031	0					
ANR	1278304	Identifier	fill_triangle_wedge		1276031	0					
ANR	1278305	ArgumentList	pfs		1276031	1					
ANR	1278306	Argument	pfs		1276031	0					
ANR	1278307	Identifier	pfs		1276031	0					
ANR	1278308	Argument	s0 . p [ 1 ] [ 0 ]		1276031	1					
ANR	1278309	ArrayIndexing	s0 . p [ 1 ] [ 0 ]		1276031	0					
ANR	1278310	ArrayIndexing	s0 . p [ 1 ]		1276031	0					
ANR	1278311	MemberAccess	s0 . p		1276031	0					
ANR	1278312	Identifier	s0		1276031	0					
ANR	1278313	Identifier	p		1276031	1					
ANR	1278314	PrimaryExpression	1		1276031	1					
ANR	1278315	PrimaryExpression	0		1276031	1					
ANR	1278316	Argument	s1 . p [ 1 ] [ 1 ]		1276031	2					
ANR	1278317	ArrayIndexing	s1 . p [ 1 ] [ 1 ]		1276031	0					
ANR	1278318	ArrayIndexing	s1 . p [ 1 ]		1276031	0					
ANR	1278319	MemberAccess	s1 . p		1276031	0					
ANR	1278320	Identifier	s1		1276031	0					
ANR	1278321	Identifier	p		1276031	1					
ANR	1278322	PrimaryExpression	1		1276031	1					
ANR	1278323	PrimaryExpression	1		1276031	1					
ANR	1278324	Argument	s0 . p [ 1 ] [ 1 ]		1276031	3					
ANR	1278325	ArrayIndexing	s0 . p [ 1 ] [ 1 ]		1276031	0					
ANR	1278326	ArrayIndexing	s0 . p [ 1 ]		1276031	0					
ANR	1278327	MemberAccess	s0 . p		1276031	0					
ANR	1278328	Identifier	s0		1276031	0					
ANR	1278329	Identifier	p		1276031	1					
ANR	1278330	PrimaryExpression	1		1276031	1					
ANR	1278331	PrimaryExpression	1		1276031	1					
ANR	1278332	IfStatement	if ( code >= 0 )		1276031	7					
ANR	1278333	Condition	code >= 0	3544:12:134150:134158	1276031	0	True				
ANR	1278334	RelationalExpression	code >= 0		1276031	0		>=			
ANR	1278335	Identifier	code		1276031	0					
ANR	1278336	PrimaryExpression	0		1276031	1					
ANR	1278337	ExpressionStatement	"code = fill_quadrangle ( pfs , & s0 , big1 )"	3545:12:134173:134211	1276031	1	True				
ANR	1278338	AssignmentExpression	"code = fill_quadrangle ( pfs , & s0 , big1 )"		1276031	0		=			
ANR	1278339	Identifier	code		1276031	0					
ANR	1278340	CallExpression	"fill_quadrangle ( pfs , & s0 , big1 )"		1276031	1					
ANR	1278341	Callee	fill_quadrangle		1276031	0					
ANR	1278342	Identifier	fill_quadrangle		1276031	0					
ANR	1278343	ArgumentList	pfs		1276031	1					
ANR	1278344	Argument	pfs		1276031	0					
ANR	1278345	Identifier	pfs		1276031	0					
ANR	1278346	Argument	& s0		1276031	1					
ANR	1278347	UnaryOperationExpression	& s0		1276031	0					
ANR	1278348	UnaryOperator	&		1276031	0					
ANR	1278349	Identifier	s0		1276031	1					
ANR	1278350	Argument	big1		1276031	2					
ANR	1278351	Identifier	big1		1276031	0					
ANR	1278352	IfStatement	if ( code >= 0 )		1276031	8					
ANR	1278353	Condition	code >= 0	3546:12:134225:134233	1276031	0	True				
ANR	1278354	RelationalExpression	code >= 0		1276031	0		>=			
ANR	1278355	Identifier	code		1276031	0					
ANR	1278356	PrimaryExpression	0		1276031	1					
ANR	1278357	CompoundStatement		230:23:10271:10271	1276031	1					
ANR	1278358	IfStatement	if ( LAZY_WEDGES )		1276031	0					
ANR	1278359	Condition	LAZY_WEDGES	3547:16:134254:134264	1276031	0	True				
ANR	1278360	Identifier	LAZY_WEDGES		1276031	0					
ANR	1278361	CompoundStatement		231:29:10302:10302	1276031	1					
ANR	1278362	ExpressionStatement	l0 . last_side = true	3548:16:134285:134304	1276031	0	True				
ANR	1278363	AssignmentExpression	l0 . last_side = true		1276031	0		=			
ANR	1278364	MemberAccess	l0 . last_side		1276031	0					
ANR	1278365	Identifier	l0		1276031	0					
ANR	1278366	Identifier	last_side		1276031	1					
ANR	1278367	Identifier	true		1276031	1					
ANR	1278368	ExpressionStatement	"move_wedge ( & l1 , p -> l0001 , true )"	3549:16:134322:134353	1276031	1	True				
ANR	1278369	CallExpression	"move_wedge ( & l1 , p -> l0001 , true )"		1276031	0					
ANR	1278370	Callee	move_wedge		1276031	0					
ANR	1278371	Identifier	move_wedge		1276031	0					
ANR	1278372	ArgumentList	& l1		1276031	1					
ANR	1278373	Argument	& l1		1276031	0					
ANR	1278374	UnaryOperationExpression	& l1		1276031	0					
ANR	1278375	UnaryOperator	&		1276031	0					
ANR	1278376	Identifier	l1		1276031	1					
ANR	1278377	Argument	p -> l0001		1276031	1					
ANR	1278378	PtrMemberAccess	p -> l0001		1276031	0					
ANR	1278379	Identifier	p		1276031	0					
ANR	1278380	Identifier	l0001		1276031	1					
ANR	1278381	Argument	true		1276031	2					
ANR	1278382	Identifier	true		1276031	0					
ANR	1278383	ExpressionStatement	"move_wedge ( & l2 , p -> l1110 , false )"	3550:16:134371:134403	1276031	2	True				
ANR	1278384	CallExpression	"move_wedge ( & l2 , p -> l1110 , false )"		1276031	0					
ANR	1278385	Callee	move_wedge		1276031	0					
ANR	1278386	Identifier	move_wedge		1276031	0					
ANR	1278387	ArgumentList	& l2		1276031	1					
ANR	1278388	Argument	& l2		1276031	0					
ANR	1278389	UnaryOperationExpression	& l2		1276031	0					
ANR	1278390	UnaryOperator	&		1276031	0					
ANR	1278391	Identifier	l2		1276031	1					
ANR	1278392	Argument	p -> l1110		1276031	1					
ANR	1278393	PtrMemberAccess	p -> l1110		1276031	0					
ANR	1278394	Identifier	p		1276031	0					
ANR	1278395	Identifier	l1110		1276031	1					
ANR	1278396	Argument	false		1276031	2					
ANR	1278397	Identifier	false		1276031	0					
ANR	1278398	ExpressionStatement	"code = fill_quadrangle ( pfs , & s1 , big1 )"	3552:12:134431:134469	1276031	1	True				
ANR	1278399	AssignmentExpression	"code = fill_quadrangle ( pfs , & s1 , big1 )"		1276031	0		=			
ANR	1278400	Identifier	code		1276031	0					
ANR	1278401	CallExpression	"fill_quadrangle ( pfs , & s1 , big1 )"		1276031	1					
ANR	1278402	Callee	fill_quadrangle		1276031	0					
ANR	1278403	Identifier	fill_quadrangle		1276031	0					
ANR	1278404	ArgumentList	pfs		1276031	1					
ANR	1278405	Argument	pfs		1276031	0					
ANR	1278406	Identifier	pfs		1276031	0					
ANR	1278407	Argument	& s1		1276031	1					
ANR	1278408	UnaryOperationExpression	& s1		1276031	0					
ANR	1278409	UnaryOperator	&		1276031	0					
ANR	1278410	Identifier	s1		1276031	1					
ANR	1278411	Argument	big1		1276031	2					
ANR	1278412	Identifier	big1		1276031	0					
ANR	1278413	IfStatement	if ( LAZY_WEDGES )		1276031	9					
ANR	1278414	Condition	LAZY_WEDGES	3554:12:134493:134503	1276031	0	True				
ANR	1278415	Identifier	LAZY_WEDGES		1276031	0					
ANR	1278416	CompoundStatement		238:25:10541:10541	1276031	1					
ANR	1278417	IfStatement	if ( code >= 0 )		1276031	0					
ANR	1278418	Condition	code >= 0	3555:16:134524:134532	1276031	0	True				
ANR	1278419	RelationalExpression	code >= 0		1276031	0		>=			
ANR	1278420	Identifier	code		1276031	0					
ANR	1278421	PrimaryExpression	0		1276031	1					
ANR	1278422	ExpressionStatement	"code = close_wedge_median ( pfs , p -> l0001 , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 0 ] [ 1 ] -> c )"	3556:16:134551:134621	1276031	1	True				
ANR	1278423	AssignmentExpression	"code = close_wedge_median ( pfs , p -> l0001 , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 0 ] [ 1 ] -> c )"		1276031	0		=			
ANR	1278424	Identifier	code		1276031	0					
ANR	1278425	CallExpression	"close_wedge_median ( pfs , p -> l0001 , p -> p [ 0 ] [ 0 ] -> c , p -> p [ 0 ] [ 1 ] -> c )"		1276031	1					
ANR	1278426	Callee	close_wedge_median		1276031	0					
ANR	1278427	Identifier	close_wedge_median		1276031	0					
ANR	1278428	ArgumentList	pfs		1276031	1					
ANR	1278429	Argument	pfs		1276031	0					
ANR	1278430	Identifier	pfs		1276031	0					
ANR	1278431	Argument	p -> l0001		1276031	1					
ANR	1278432	PtrMemberAccess	p -> l0001		1276031	0					
ANR	1278433	Identifier	p		1276031	0					
ANR	1278434	Identifier	l0001		1276031	1					
ANR	1278435	Argument	p -> p [ 0 ] [ 0 ] -> c		1276031	2					
ANR	1278436	PtrMemberAccess	p -> p [ 0 ] [ 0 ] -> c		1276031	0					
ANR	1278437	ArrayIndexing	p -> p [ 0 ] [ 0 ]		1276031	0					
ANR	1278438	ArrayIndexing	p -> p [ 0 ]		1276031	0					
ANR	1278439	PtrMemberAccess	p -> p		1276031	0					
ANR	1278440	Identifier	p		1276031	0					
ANR	1278441	Identifier	p		1276031	1					
ANR	1278442	PrimaryExpression	0		1276031	1					
ANR	1278443	PrimaryExpression	0		1276031	1					
ANR	1278444	Identifier	c		1276031	1					
ANR	1278445	Argument	p -> p [ 0 ] [ 1 ] -> c		1276031	3					
ANR	1278446	PtrMemberAccess	p -> p [ 0 ] [ 1 ] -> c		1276031	0					
ANR	1278447	ArrayIndexing	p -> p [ 0 ] [ 1 ]		1276031	0					
ANR	1278448	ArrayIndexing	p -> p [ 0 ]		1276031	0					
ANR	1278449	PtrMemberAccess	p -> p		1276031	0					
ANR	1278450	Identifier	p		1276031	0					
ANR	1278451	Identifier	p		1276031	1					
ANR	1278452	PrimaryExpression	0		1276031	1					
ANR	1278453	PrimaryExpression	1		1276031	1					
ANR	1278454	Identifier	c		1276031	1					
ANR	1278455	IfStatement	if ( code >= 0 )		1276031	1					
ANR	1278456	Condition	code >= 0	3557:16:134639:134647	1276031	0	True				
ANR	1278457	RelationalExpression	code >= 0		1276031	0		>=			
ANR	1278458	Identifier	code		1276031	0					
ANR	1278459	PrimaryExpression	0		1276031	1					
ANR	1278460	ExpressionStatement	"code = close_wedge_median ( pfs , p -> l1110 , p -> p [ 1 ] [ 1 ] -> c , p -> p [ 1 ] [ 0 ] -> c )"	3558:16:134666:134736	1276031	1	True				
ANR	1278461	AssignmentExpression	"code = close_wedge_median ( pfs , p -> l1110 , p -> p [ 1 ] [ 1 ] -> c , p -> p [ 1 ] [ 0 ] -> c )"		1276031	0		=			
ANR	1278462	Identifier	code		1276031	0					
ANR	1278463	CallExpression	"close_wedge_median ( pfs , p -> l1110 , p -> p [ 1 ] [ 1 ] -> c , p -> p [ 1 ] [ 0 ] -> c )"		1276031	1					
ANR	1278464	Callee	close_wedge_median		1276031	0					
ANR	1278465	Identifier	close_wedge_median		1276031	0					
ANR	1278466	ArgumentList	pfs		1276031	1					
ANR	1278467	Argument	pfs		1276031	0					
ANR	1278468	Identifier	pfs		1276031	0					
ANR	1278469	Argument	p -> l1110		1276031	1					
ANR	1278470	PtrMemberAccess	p -> l1110		1276031	0					
ANR	1278471	Identifier	p		1276031	0					
ANR	1278472	Identifier	l1110		1276031	1					
ANR	1278473	Argument	p -> p [ 1 ] [ 1 ] -> c		1276031	2					
ANR	1278474	PtrMemberAccess	p -> p [ 1 ] [ 1 ] -> c		1276031	0					
ANR	1278475	ArrayIndexing	p -> p [ 1 ] [ 1 ]		1276031	0					
ANR	1278476	ArrayIndexing	p -> p [ 1 ]		1276031	0					
ANR	1278477	PtrMemberAccess	p -> p		1276031	0					
ANR	1278478	Identifier	p		1276031	0					
ANR	1278479	Identifier	p		1276031	1					
ANR	1278480	PrimaryExpression	1		1276031	1					
ANR	1278481	PrimaryExpression	1		1276031	1					
ANR	1278482	Identifier	c		1276031	1					
ANR	1278483	Argument	p -> p [ 1 ] [ 0 ] -> c		1276031	3					
ANR	1278484	PtrMemberAccess	p -> p [ 1 ] [ 0 ] -> c		1276031	0					
ANR	1278485	ArrayIndexing	p -> p [ 1 ] [ 0 ]		1276031	0					
ANR	1278486	ArrayIndexing	p -> p [ 1 ]		1276031	0					
ANR	1278487	PtrMemberAccess	p -> p		1276031	0					
ANR	1278488	Identifier	p		1276031	0					
ANR	1278489	Identifier	p		1276031	1					
ANR	1278490	PrimaryExpression	1		1276031	1					
ANR	1278491	PrimaryExpression	0		1276031	1					
ANR	1278492	Identifier	c		1276031	1					
ANR	1278493	IfStatement	if ( code >= 0 )		1276031	2					
ANR	1278494	Condition	code >= 0	3559:16:134754:134762	1276031	0	True				
ANR	1278495	RelationalExpression	code >= 0		1276031	0		>=			
ANR	1278496	Identifier	code		1276031	0					
ANR	1278497	PrimaryExpression	0		1276031	1					
ANR	1278498	ExpressionStatement	"code = terminate_wedge_vertex_list ( pfs , & l0 , s0 . p [ 0 ] [ 1 ] -> c , s0 . p [ 1 ] [ 1 ] -> c )"	3560:16:134781:134855	1276031	1	True				
ANR	1278499	AssignmentExpression	"code = terminate_wedge_vertex_list ( pfs , & l0 , s0 . p [ 0 ] [ 1 ] -> c , s0 . p [ 1 ] [ 1 ] -> c )"		1276031	0		=			
ANR	1278500	Identifier	code		1276031	0					
ANR	1278501	CallExpression	"terminate_wedge_vertex_list ( pfs , & l0 , s0 . p [ 0 ] [ 1 ] -> c , s0 . p [ 1 ] [ 1 ] -> c )"		1276031	1					
ANR	1278502	Callee	terminate_wedge_vertex_list		1276031	0					
ANR	1278503	Identifier	terminate_wedge_vertex_list		1276031	0					
ANR	1278504	ArgumentList	pfs		1276031	1					
ANR	1278505	Argument	pfs		1276031	0					
ANR	1278506	Identifier	pfs		1276031	0					
ANR	1278507	Argument	& l0		1276031	1					
ANR	1278508	UnaryOperationExpression	& l0		1276031	0					
ANR	1278509	UnaryOperator	&		1276031	0					
ANR	1278510	Identifier	l0		1276031	1					
ANR	1278511	Argument	s0 . p [ 0 ] [ 1 ] -> c		1276031	2					
ANR	1278512	PtrMemberAccess	s0 . p [ 0 ] [ 1 ] -> c		1276031	0					
ANR	1278513	ArrayIndexing	s0 . p [ 0 ] [ 1 ]		1276031	0					
ANR	1278514	ArrayIndexing	s0 . p [ 0 ]		1276031	0					
ANR	1278515	MemberAccess	s0 . p		1276031	0					
ANR	1278516	Identifier	s0		1276031	0					
ANR	1278517	Identifier	p		1276031	1					
ANR	1278518	PrimaryExpression	0		1276031	1					
ANR	1278519	PrimaryExpression	1		1276031	1					
ANR	1278520	Identifier	c		1276031	1					
ANR	1278521	Argument	s0 . p [ 1 ] [ 1 ] -> c		1276031	3					
ANR	1278522	PtrMemberAccess	s0 . p [ 1 ] [ 1 ] -> c		1276031	0					
ANR	1278523	ArrayIndexing	s0 . p [ 1 ] [ 1 ]		1276031	0					
ANR	1278524	ArrayIndexing	s0 . p [ 1 ]		1276031	0					
ANR	1278525	MemberAccess	s0 . p		1276031	0					
ANR	1278526	Identifier	s0		1276031	0					
ANR	1278527	Identifier	p		1276031	1					
ANR	1278528	PrimaryExpression	1		1276031	1					
ANR	1278529	PrimaryExpression	1		1276031	1					
ANR	1278530	Identifier	c		1276031	1					
ANR	1278531	ExpressionStatement	"release_colors_inline ( pfs , color_stack_ptr , 2 )"	3561:12:134869:134915	1276031	3	True				
ANR	1278532	CallExpression	"release_colors_inline ( pfs , color_stack_ptr , 2 )"		1276031	0					
ANR	1278533	Callee	release_colors_inline		1276031	0					
ANR	1278534	Identifier	release_colors_inline		1276031	0					
ANR	1278535	ArgumentList	pfs		1276031	1					
ANR	1278536	Argument	pfs		1276031	0					
ANR	1278537	Identifier	pfs		1276031	0					
ANR	1278538	Argument	color_stack_ptr		1276031	1					
ANR	1278539	Identifier	color_stack_ptr		1276031	0					
ANR	1278540	Argument	2		1276031	2					
ANR	1278541	PrimaryExpression	2		1276031	0					
ANR	1278542	ElseStatement	else		1276031	0					
ANR	1278543	ExpressionStatement	"code = ( QUADRANGLES || ! pfs -> maybe_self_intersecting ? constant_color_quadrangle : triangles4 ) ( pfs , p , pfs -> maybe_self_intersecting )"	3564:8:134946:135122	1276031	0	True				
ANR	1278544	AssignmentExpression	"code = ( QUADRANGLES || ! pfs -> maybe_self_intersecting ? constant_color_quadrangle : triangles4 ) ( pfs , p , pfs -> maybe_self_intersecting )"		1276031	0		=			
ANR	1278545	Identifier	code		1276031	0					
ANR	1278546	CallExpression	"( QUADRANGLES || ! pfs -> maybe_self_intersecting ? constant_color_quadrangle : triangles4 ) ( pfs , p , pfs -> maybe_self_intersecting )"		1276031	1					
ANR	1278547	Callee	QUADRANGLES || ! pfs -> maybe_self_intersecting ? constant_color_quadrangle : triangles4		1276031	0					
ANR	1278548	ConditionalExpression	QUADRANGLES || ! pfs -> maybe_self_intersecting ? constant_color_quadrangle : triangles4		1276031	0					
ANR	1278549	Condition	QUADRANGLES || ! pfs -> maybe_self_intersecting		1276031	0					
ANR	1278550	OrExpression	QUADRANGLES || ! pfs -> maybe_self_intersecting		1276031	0		||			
ANR	1278551	Identifier	QUADRANGLES		1276031	0					
ANR	1278552	UnaryOperationExpression	! pfs -> maybe_self_intersecting		1276031	1					
ANR	1278553	UnaryOperator	!		1276031	0					
ANR	1278554	PtrMemberAccess	pfs -> maybe_self_intersecting		1276031	1					
ANR	1278555	Identifier	pfs		1276031	0					
ANR	1278556	Identifier	maybe_self_intersecting		1276031	1					
ANR	1278557	Identifier	constant_color_quadrangle		1276031	1					
ANR	1278558	Identifier	triangles4		1276031	2					
ANR	1278559	ArgumentList	pfs		1276031	1					
ANR	1278560	Argument	pfs		1276031	0					
ANR	1278561	Identifier	pfs		1276031	0					
ANR	1278562	Argument	p		1276031	1					
ANR	1278563	Identifier	p		1276031	0					
ANR	1278564	Argument	pfs -> maybe_self_intersecting		1276031	2					
ANR	1278565	PtrMemberAccess	pfs -> maybe_self_intersecting		1276031	0					
ANR	1278566	Identifier	pfs		1276031	0					
ANR	1278567	Identifier	maybe_self_intersecting		1276031	1					
ANR	1278568	ExpressionStatement	pfs -> monotonic_color = monotonic_color_save	3567:4:135128:135171	1276031	16	True				
ANR	1278569	AssignmentExpression	pfs -> monotonic_color = monotonic_color_save		1276031	0		=			
ANR	1278570	PtrMemberAccess	pfs -> monotonic_color		1276031	0					
ANR	1278571	Identifier	pfs		1276031	0					
ANR	1278572	Identifier	monotonic_color		1276031	1					
ANR	1278573	Identifier	monotonic_color_save		1276031	1					
ANR	1278574	ExpressionStatement	pfs -> linear_color = linear_color_save	3568:4:135177:135214	1276031	17	True				
ANR	1278575	AssignmentExpression	pfs -> linear_color = linear_color_save		1276031	0		=			
ANR	1278576	PtrMemberAccess	pfs -> linear_color		1276031	0					
ANR	1278577	Identifier	pfs		1276031	0					
ANR	1278578	Identifier	linear_color		1276031	1					
ANR	1278579	Identifier	linear_color_save		1276031	1					
ANR	1278580	ExpressionStatement	pfs -> inside = inside_save	3569:4:135220:135245	1276031	18	True				
ANR	1278581	AssignmentExpression	pfs -> inside = inside_save		1276031	0		=			
ANR	1278582	PtrMemberAccess	pfs -> inside		1276031	0					
ANR	1278583	Identifier	pfs		1276031	0					
ANR	1278584	Identifier	inside		1276031	1					
ANR	1278585	Identifier	inside_save		1276031	1					
ANR	1278586	ReturnStatement	return code ;	3570:4:135251:135262	1276031	19	True				
ANR	1278587	Identifier	code		1276031	0					
ANR	1278588	ReturnType	static int		1276031	1					
ANR	1278589	Identifier	fill_quadrangle		1276031	2					
ANR	1278590	ParameterList	"patch_fill_state_t * pfs , const quadrangle_patch * p , bool big"		1276031	3					
ANR	1278591	Parameter	patch_fill_state_t * pfs	3316:16:123902:123924	1276031	0	True				
ANR	1278592	ParameterType	patch_fill_state_t *		1276031	0					
ANR	1278593	Identifier	pfs		1276031	1					
ANR	1278594	Parameter	const quadrangle_patch * p	3316:41:123927:123951	1276031	1	True				
ANR	1278595	ParameterType	const quadrangle_patch *		1276031	0					
ANR	1278596	Identifier	p		1276031	1					
ANR	1278597	Parameter	bool big	3316:68:123954:123961	1276031	2	True				
ANR	1278598	ParameterType	bool		1276031	0					
ANR	1278599	Identifier	big		1276031	1					
ANR	1278600	CFGEntryNode	ENTRY		1276031		True				
ANR	1278601	CFGExitNode	EXIT		1276031		True				
ANR	1278602	Symbol	big		1276031						
ANR	1278603	Symbol	s0 . l0001		1276031						
ANR	1278604	Symbol	s1 . p		1276031						
ANR	1278605	Symbol	r . q		1276031						
ANR	1278606	Symbol	r . p		1276031						
ANR	1278607	Symbol	* s1 . p		1276031						
ANR	1278608	Symbol	s1 . l1110		1276031						
ANR	1278609	Symbol	d0010y		1276031						
ANR	1278610	Symbol	p -> p [ 1 ] [ 1 ] -> p . y		1276031						
ANR	1278611	Symbol	d0010x		1276031						
ANR	1278612	Symbol	p -> p [ 1 ] [ 1 ] -> p . x		1276031						
ANR	1278613	Symbol	p -> p [ 0 ] [ 1 ] -> p		1276031						
ANR	1278614	Symbol	r1 . q		1276031						
ANR	1278615	Symbol	* * * p -> p		1276031						
ANR	1278616	Symbol	* * p -> p		1276031						
ANR	1278617	Symbol	r1 . p		1276031						
ANR	1278618	Symbol	p -> p [ 0 ] [ 0 ] -> c		1276031						
ANR	1278619	Symbol	s0		1276031						
ANR	1278620	Symbol	s1		1276031						
ANR	1278621	Symbol	p -> p [ 0 ] [ 1 ] -> c		1276031						
ANR	1278622	Symbol	s0 . p [ 1 ] [ 1 ] -> c		1276031						
ANR	1278623	Symbol	big1		1276031						
ANR	1278624	Symbol	s0 . p [ 1 ] [ 0 ] -> c		1276031						
ANR	1278625	Symbol	s0 . l0111		1276031						
ANR	1278626	Symbol	* * s0 . p		1276031						
ANR	1278627	Symbol	& s0 . p [ 0 ] [ 1 ] -> p		1276031						
ANR	1278628	Symbol	* pfs		1276031						
ANR	1278629	Symbol	* * * p		1276031						
ANR	1278630	Symbol	pfs		1276031						
ANR	1278631	Symbol	pfs -> linear_color		1276031						
ANR	1278632	Symbol	pfs -> unlinear		1276031						
ANR	1278633	Symbol	q [ 1 ] . c		1276031						
ANR	1278634	Symbol	l0		1276031						
ANR	1278635	Symbol	p -> l0001		1276031						
ANR	1278636	Symbol	l1		1276031						
ANR	1278637	Symbol	l2		1276031						
ANR	1278638	Symbol	& s0		1276031						
ANR	1278639	Symbol	& s1		1276031						
ANR	1278640	Symbol	is_quadrangle_color_monotonic		1276031						
ANR	1278641	Symbol	& p -> p [ 0 ] [ 0 ] -> p		1276031						
ANR	1278642	Symbol	& not_monotonic_by_u		1276031						
ANR	1278643	Symbol	& not_monotonic_by_v		1276031						
ANR	1278644	Symbol	p -> p [ 1 ] [ 0 ] -> p		1276031						
ANR	1278645	Symbol	r . q . x		1276031						
ANR	1278646	Symbol	reserve_colors_inline		1276031						
ANR	1278647	Symbol	r . q . y		1276031						
ANR	1278648	Symbol	any_abs		1276031						
ANR	1278649	Symbol	monotonic_color_save		1276031						
ANR	1278650	Symbol	* * p		1276031						
ANR	1278651	Symbol	p -> p [ 1 ] [ 0 ] -> c		1276031						
ANR	1278652	Symbol	pfs -> rect		1276031						
ANR	1278653	Symbol	c		1276031						
ANR	1278654	Symbol	p -> l0111		1276031						
ANR	1278655	Symbol	fill_quadrangle		1276031						
ANR	1278656	Symbol	max		1276031						
ANR	1278657	Symbol	s1 . l1000		1276031						
ANR	1278658	Symbol	& l1		1276031						
ANR	1278659	Symbol	& l0		1276031						
ANR	1278660	Symbol	p		1276031						
ANR	1278661	Symbol	r1 . q . x		1276031						
ANR	1278662	Symbol	q		1276031						
ANR	1278663	Symbol	r1 . q . y		1276031						
ANR	1278664	Symbol	r		1276031						
ANR	1278665	Symbol	fill_triangle_wedge		1276031						
ANR	1278666	Symbol	& p -> p [ 1 ] [ 0 ] -> p		1276031						
ANR	1278667	Symbol	& p -> p [ 1 ] [ 1 ] -> p		1276031						
ANR	1278668	Symbol	q [ 0 ] . c		1276031						
ANR	1278669	Symbol	size_v		1276031						
ANR	1278670	Symbol	* * * s0		1276031						
ANR	1278671	Symbol	divide_v		1276031						
ANR	1278672	Symbol	p -> p		1276031						
ANR	1278673	Symbol	quadrangle_color_change		1276031						
ANR	1278674	Symbol	p -> l1110		1276031						
ANR	1278675	Symbol	* * * * p		1276031						
ANR	1278676	Symbol	pfs -> monotonic_color		1276031						
ANR	1278677	Symbol	* p -> p		1276031						
ANR	1278678	Symbol	* * s1		1276031						
ANR	1278679	Symbol	size_u		1276031						
ANR	1278680	Symbol	* * s0		1276031						
ANR	1278681	Symbol	s0 . p		1276031						
ANR	1278682	Symbol	inside		1276031						
ANR	1278683	Symbol	l0 . last_side		1276031						
ANR	1278684	Symbol	& l2		1276031						
ANR	1278685	Symbol	p -> p [ 0 ] [ 1 ] -> p . y		1276031						
ANR	1278686	Symbol	d1011x		1276031						
ANR	1278687	Symbol	* s0 . p		1276031						
ANR	1278688	Symbol	divide_u		1276031						
ANR	1278689	Symbol	constant_color_quadrangle		1276031						
ANR	1278690	Symbol	p -> p [ 0 ] [ 1 ] -> p . x		1276031						
ANR	1278691	Symbol	d1011y		1276031						
ANR	1278692	Symbol	pfs -> max_small_coord		1276031						
ANR	1278693	Symbol	NULL		1276031						
ANR	1278694	Symbol	& s0 . p [ 1 ] [ 1 ] -> p		1276031						
ANR	1278695	Symbol	s0 . l1000		1276031						
ANR	1278696	Symbol	QUADRANGLES		1276031						
ANR	1278697	Symbol	d0111x		1276031						
ANR	1278698	Symbol	d0111y		1276031						
ANR	1278699	Symbol	color_stack_ptr		1276031						
ANR	1278700	Symbol	p -> p [ 1 ] [ 0 ] -> p . y		1276031						
ANR	1278701	Symbol	true		1276031						
ANR	1278702	Symbol	* * s1 . p		1276031						
ANR	1278703	Symbol	p -> p [ 1 ] [ 0 ] -> p . x		1276031						
ANR	1278704	Symbol	& divide_v		1276031						
ANR	1278705	Symbol	* s0		1276031						
ANR	1278706	Symbol	triangles4		1276031						
ANR	1278707	Symbol	gs_error_unregistered		1276031						
ANR	1278708	Symbol	code		1276031						
ANR	1278709	Symbol	& divide_u		1276031						
ANR	1278710	Symbol	s1 . l0001		1276031						
ANR	1278711	Symbol	* s1		1276031						
ANR	1278712	Symbol	p -> p [ 0 ] [ 0 ] -> p . x		1276031						
ANR	1278713	Symbol	p -> p [ 0 ] [ 0 ] -> p . y		1276031						
ANR	1278714	Symbol	& p -> p [ 0 ] [ 1 ] -> p		1276031						
ANR	1278715	Symbol	pfs -> decomposition_limit		1276031						
ANR	1278716	Symbol	is_quadrangle_color_linear_by_diagonals		1276031						
ANR	1278717	Symbol	triangles2		1276031						
ANR	1278718	Symbol	s0 . l1110		1276031						
ANR	1278719	Symbol	close_wedge_median		1276031						
ANR	1278720	Symbol	inside_save		1276031						
ANR	1278721	Symbol	s0 . p [ 0 ] [ 1 ] -> c		1276031						
ANR	1278722	Symbol	p -> p [ 1 ] [ 1 ] -> p		1276031						
ANR	1278723	Symbol	is_big_v		1276031						
ANR	1278724	Symbol	is_big_u		1276031						
ANR	1278725	Symbol	p -> p [ 1 ] [ 1 ] -> c		1276031						
ANR	1278726	Symbol	make_wedge_median		1276031						
ANR	1278727	Symbol	pfs -> maybe_self_intersecting		1276031						
ANR	1278728	Symbol	LAZY_WEDGES		1276031						
ANR	1278729	Symbol	r1 . p . y		1276031						
ANR	1278730	Symbol	* * * s0 . p		1276031						
ANR	1278731	Symbol	r . p . x		1276031						
ANR	1278732	Symbol	pfs -> inside		1276031						
ANR	1278733	Symbol	r . p . y		1276031						
ANR	1278734	Symbol	is_quadrangle_color_linear_by_v		1276031						
ANR	1278735	Symbol	r1 . p . x		1276031						
ANR	1278736	Symbol	is_quadrangle_color_linear_by_u		1276031						
ANR	1278737	Symbol	p -> l1000		1276031						
ANR	1278738	Symbol	s1 . l0111		1276031						
ANR	1278739	Symbol	false		1276031						
ANR	1278740	Symbol	terminate_wedge_vertex_list		1276031						
ANR	1278741	Symbol	p -> p [ 0 ] [ 0 ] -> p		1276031						
ANR	1278742	Symbol	d0001y		1276031						
ANR	1278743	Symbol	d0001x		1276031						
ANR	1278744	Symbol	* c		1276031						
ANR	1278745	Symbol	& s0 . p [ 1 ] [ 0 ] -> p		1276031						
ANR	1278746	Symbol	linear_color_save		1276031						
ANR	1278747	Symbol	& r		1276031						
ANR	1278748	Symbol	* p		1276031						
ANR	1278749	Symbol	not_monotonic_by_u		1276031						
ANR	1278750	Symbol	not_monotonic_by_v		1276031						
ANR	1278751	Symbol	* q		1276031						
ANR	1278752	Symbol	r1		1276031						
ANR	1278753	Function	split_stripe	3574:0:135359:136120							
ANR	1278754	FunctionDef	"split_stripe (patch_fill_state_t * pfs , tensor_patch * s0 , tensor_patch * s1 , const tensor_patch * p , patch_color_t * c [ 2 ])"		1278753	0					
ANR	1278755	CompoundStatement		3576:0:135496:136120	1278753	0					
ANR	1278756	ExpressionStatement	s0 -> c [ 0 ] [ 1 ] = c [ 0 ]	3577:4:135502:135520	1278753	0	True				
ANR	1278757	AssignmentExpression	s0 -> c [ 0 ] [ 1 ] = c [ 0 ]		1278753	0		=			
ANR	1278758	ArrayIndexing	s0 -> c [ 0 ] [ 1 ]		1278753	0					
ANR	1278759	ArrayIndexing	s0 -> c [ 0 ]		1278753	0					
ANR	1278760	PtrMemberAccess	s0 -> c		1278753	0					
ANR	1278761	Identifier	s0		1278753	0					
ANR	1278762	Identifier	c		1278753	1					
ANR	1278763	PrimaryExpression	0		1278753	1					
ANR	1278764	PrimaryExpression	1		1278753	1					
ANR	1278765	ArrayIndexing	c [ 0 ]		1278753	1					
ANR	1278766	Identifier	c		1278753	0					
ANR	1278767	PrimaryExpression	0		1278753	1					
ANR	1278768	ExpressionStatement	s0 -> c [ 1 ] [ 1 ] = c [ 1 ]	3578:4:135526:135544	1278753	1	True				
ANR	1278769	AssignmentExpression	s0 -> c [ 1 ] [ 1 ] = c [ 1 ]		1278753	0		=			
ANR	1278770	ArrayIndexing	s0 -> c [ 1 ] [ 1 ]		1278753	0					
ANR	1278771	ArrayIndexing	s0 -> c [ 1 ]		1278753	0					
ANR	1278772	PtrMemberAccess	s0 -> c		1278753	0					
ANR	1278773	Identifier	s0		1278753	0					
ANR	1278774	Identifier	c		1278753	1					
ANR	1278775	PrimaryExpression	1		1278753	1					
ANR	1278776	PrimaryExpression	1		1278753	1					
ANR	1278777	ArrayIndexing	c [ 1 ]		1278753	1					
ANR	1278778	Identifier	c		1278753	0					
ANR	1278779	PrimaryExpression	1		1278753	1					
ANR	1278780	ExpressionStatement	"split_curve_s ( p -> pole [ 0 ] , s0 -> pole [ 0 ] , s1 -> pole [ 0 ] , 1 )"	3579:4:135550:135604	1278753	2	True				
ANR	1278781	CallExpression	"split_curve_s ( p -> pole [ 0 ] , s0 -> pole [ 0 ] , s1 -> pole [ 0 ] , 1 )"		1278753	0					
ANR	1278782	Callee	split_curve_s		1278753	0					
ANR	1278783	Identifier	split_curve_s		1278753	0					
ANR	1278784	ArgumentList	p -> pole [ 0 ]		1278753	1					
ANR	1278785	Argument	p -> pole [ 0 ]		1278753	0					
ANR	1278786	ArrayIndexing	p -> pole [ 0 ]		1278753	0					
ANR	1278787	PtrMemberAccess	p -> pole		1278753	0					
ANR	1278788	Identifier	p		1278753	0					
ANR	1278789	Identifier	pole		1278753	1					
ANR	1278790	PrimaryExpression	0		1278753	1					
ANR	1278791	Argument	s0 -> pole [ 0 ]		1278753	1					
ANR	1278792	ArrayIndexing	s0 -> pole [ 0 ]		1278753	0					
ANR	1278793	PtrMemberAccess	s0 -> pole		1278753	0					
ANR	1278794	Identifier	s0		1278753	0					
ANR	1278795	Identifier	pole		1278753	1					
ANR	1278796	PrimaryExpression	0		1278753	1					
ANR	1278797	Argument	s1 -> pole [ 0 ]		1278753	2					
ANR	1278798	ArrayIndexing	s1 -> pole [ 0 ]		1278753	0					
ANR	1278799	PtrMemberAccess	s1 -> pole		1278753	0					
ANR	1278800	Identifier	s1		1278753	0					
ANR	1278801	Identifier	pole		1278753	1					
ANR	1278802	PrimaryExpression	0		1278753	1					
ANR	1278803	Argument	1		1278753	3					
ANR	1278804	PrimaryExpression	1		1278753	0					
ANR	1278805	ExpressionStatement	"split_curve_s ( p -> pole [ 1 ] , s0 -> pole [ 1 ] , s1 -> pole [ 1 ] , 1 )"	3580:4:135610:135664	1278753	3	True				
ANR	1278806	CallExpression	"split_curve_s ( p -> pole [ 1 ] , s0 -> pole [ 1 ] , s1 -> pole [ 1 ] , 1 )"		1278753	0					
ANR	1278807	Callee	split_curve_s		1278753	0					
ANR	1278808	Identifier	split_curve_s		1278753	0					
ANR	1278809	ArgumentList	p -> pole [ 1 ]		1278753	1					
ANR	1278810	Argument	p -> pole [ 1 ]		1278753	0					
ANR	1278811	ArrayIndexing	p -> pole [ 1 ]		1278753	0					
ANR	1278812	PtrMemberAccess	p -> pole		1278753	0					
ANR	1278813	Identifier	p		1278753	0					
ANR	1278814	Identifier	pole		1278753	1					
ANR	1278815	PrimaryExpression	1		1278753	1					
ANR	1278816	Argument	s0 -> pole [ 1 ]		1278753	1					
ANR	1278817	ArrayIndexing	s0 -> pole [ 1 ]		1278753	0					
ANR	1278818	PtrMemberAccess	s0 -> pole		1278753	0					
ANR	1278819	Identifier	s0		1278753	0					
ANR	1278820	Identifier	pole		1278753	1					
ANR	1278821	PrimaryExpression	1		1278753	1					
ANR	1278822	Argument	s1 -> pole [ 1 ]		1278753	2					
ANR	1278823	ArrayIndexing	s1 -> pole [ 1 ]		1278753	0					
ANR	1278824	PtrMemberAccess	s1 -> pole		1278753	0					
ANR	1278825	Identifier	s1		1278753	0					
ANR	1278826	Identifier	pole		1278753	1					
ANR	1278827	PrimaryExpression	1		1278753	1					
ANR	1278828	Argument	1		1278753	3					
ANR	1278829	PrimaryExpression	1		1278753	0					
ANR	1278830	ExpressionStatement	"split_curve_s ( p -> pole [ 2 ] , s0 -> pole [ 2 ] , s1 -> pole [ 2 ] , 1 )"	3581:4:135670:135724	1278753	4	True				
ANR	1278831	CallExpression	"split_curve_s ( p -> pole [ 2 ] , s0 -> pole [ 2 ] , s1 -> pole [ 2 ] , 1 )"		1278753	0					
ANR	1278832	Callee	split_curve_s		1278753	0					
ANR	1278833	Identifier	split_curve_s		1278753	0					
ANR	1278834	ArgumentList	p -> pole [ 2 ]		1278753	1					
ANR	1278835	Argument	p -> pole [ 2 ]		1278753	0					
ANR	1278836	ArrayIndexing	p -> pole [ 2 ]		1278753	0					
ANR	1278837	PtrMemberAccess	p -> pole		1278753	0					
ANR	1278838	Identifier	p		1278753	0					
ANR	1278839	Identifier	pole		1278753	1					
ANR	1278840	PrimaryExpression	2		1278753	1					
ANR	1278841	Argument	s0 -> pole [ 2 ]		1278753	1					
ANR	1278842	ArrayIndexing	s0 -> pole [ 2 ]		1278753	0					
ANR	1278843	PtrMemberAccess	s0 -> pole		1278753	0					
ANR	1278844	Identifier	s0		1278753	0					
ANR	1278845	Identifier	pole		1278753	1					
ANR	1278846	PrimaryExpression	2		1278753	1					
ANR	1278847	Argument	s1 -> pole [ 2 ]		1278753	2					
ANR	1278848	ArrayIndexing	s1 -> pole [ 2 ]		1278753	0					
ANR	1278849	PtrMemberAccess	s1 -> pole		1278753	0					
ANR	1278850	Identifier	s1		1278753	0					
ANR	1278851	Identifier	pole		1278753	1					
ANR	1278852	PrimaryExpression	2		1278753	1					
ANR	1278853	Argument	1		1278753	3					
ANR	1278854	PrimaryExpression	1		1278753	0					
ANR	1278855	ExpressionStatement	"split_curve_s ( p -> pole [ 3 ] , s0 -> pole [ 3 ] , s1 -> pole [ 3 ] , 1 )"	3582:4:135730:135784	1278753	5	True				
ANR	1278856	CallExpression	"split_curve_s ( p -> pole [ 3 ] , s0 -> pole [ 3 ] , s1 -> pole [ 3 ] , 1 )"		1278753	0					
ANR	1278857	Callee	split_curve_s		1278753	0					
ANR	1278858	Identifier	split_curve_s		1278753	0					
ANR	1278859	ArgumentList	p -> pole [ 3 ]		1278753	1					
ANR	1278860	Argument	p -> pole [ 3 ]		1278753	0					
ANR	1278861	ArrayIndexing	p -> pole [ 3 ]		1278753	0					
ANR	1278862	PtrMemberAccess	p -> pole		1278753	0					
ANR	1278863	Identifier	p		1278753	0					
ANR	1278864	Identifier	pole		1278753	1					
ANR	1278865	PrimaryExpression	3		1278753	1					
ANR	1278866	Argument	s0 -> pole [ 3 ]		1278753	1					
ANR	1278867	ArrayIndexing	s0 -> pole [ 3 ]		1278753	0					
ANR	1278868	PtrMemberAccess	s0 -> pole		1278753	0					
ANR	1278869	Identifier	s0		1278753	0					
ANR	1278870	Identifier	pole		1278753	1					
ANR	1278871	PrimaryExpression	3		1278753	1					
ANR	1278872	Argument	s1 -> pole [ 3 ]		1278753	2					
ANR	1278873	ArrayIndexing	s1 -> pole [ 3 ]		1278753	0					
ANR	1278874	PtrMemberAccess	s1 -> pole		1278753	0					
ANR	1278875	Identifier	s1		1278753	0					
ANR	1278876	Identifier	pole		1278753	1					
ANR	1278877	PrimaryExpression	3		1278753	1					
ANR	1278878	Argument	1		1278753	3					
ANR	1278879	PrimaryExpression	1		1278753	0					
ANR	1278880	ExpressionStatement	s0 -> c [ 0 ] [ 0 ] = p -> c [ 0 ] [ 0 ]	3583:4:135790:135814	1278753	6	True				
ANR	1278881	AssignmentExpression	s0 -> c [ 0 ] [ 0 ] = p -> c [ 0 ] [ 0 ]		1278753	0		=			
ANR	1278882	ArrayIndexing	s0 -> c [ 0 ] [ 0 ]		1278753	0					
ANR	1278883	ArrayIndexing	s0 -> c [ 0 ]		1278753	0					
ANR	1278884	PtrMemberAccess	s0 -> c		1278753	0					
ANR	1278885	Identifier	s0		1278753	0					
ANR	1278886	Identifier	c		1278753	1					
ANR	1278887	PrimaryExpression	0		1278753	1					
ANR	1278888	PrimaryExpression	0		1278753	1					
ANR	1278889	ArrayIndexing	p -> c [ 0 ] [ 0 ]		1278753	1					
ANR	1278890	ArrayIndexing	p -> c [ 0 ]		1278753	0					
ANR	1278891	PtrMemberAccess	p -> c		1278753	0					
ANR	1278892	Identifier	p		1278753	0					
ANR	1278893	Identifier	c		1278753	1					
ANR	1278894	PrimaryExpression	0		1278753	1					
ANR	1278895	PrimaryExpression	0		1278753	1					
ANR	1278896	ExpressionStatement	s0 -> c [ 1 ] [ 0 ] = p -> c [ 1 ] [ 0 ]	3584:4:135820:135844	1278753	7	True				
ANR	1278897	AssignmentExpression	s0 -> c [ 1 ] [ 0 ] = p -> c [ 1 ] [ 0 ]		1278753	0		=			
ANR	1278898	ArrayIndexing	s0 -> c [ 1 ] [ 0 ]		1278753	0					
ANR	1278899	ArrayIndexing	s0 -> c [ 1 ]		1278753	0					
ANR	1278900	PtrMemberAccess	s0 -> c		1278753	0					
ANR	1278901	Identifier	s0		1278753	0					
ANR	1278902	Identifier	c		1278753	1					
ANR	1278903	PrimaryExpression	1		1278753	1					
ANR	1278904	PrimaryExpression	0		1278753	1					
ANR	1278905	ArrayIndexing	p -> c [ 1 ] [ 0 ]		1278753	1					
ANR	1278906	ArrayIndexing	p -> c [ 1 ]		1278753	0					
ANR	1278907	PtrMemberAccess	p -> c		1278753	0					
ANR	1278908	Identifier	p		1278753	0					
ANR	1278909	Identifier	c		1278753	1					
ANR	1278910	PrimaryExpression	1		1278753	1					
ANR	1278911	PrimaryExpression	0		1278753	1					
ANR	1278912	ExpressionStatement	s1 -> c [ 0 ] [ 0 ] = s0 -> c [ 0 ] [ 1 ]	3585:4:135850:135875	1278753	8	True				
ANR	1278913	AssignmentExpression	s1 -> c [ 0 ] [ 0 ] = s0 -> c [ 0 ] [ 1 ]		1278753	0		=			
ANR	1278914	ArrayIndexing	s1 -> c [ 0 ] [ 0 ]		1278753	0					
ANR	1278915	ArrayIndexing	s1 -> c [ 0 ]		1278753	0					
ANR	1278916	PtrMemberAccess	s1 -> c		1278753	0					
ANR	1278917	Identifier	s1		1278753	0					
ANR	1278918	Identifier	c		1278753	1					
ANR	1278919	PrimaryExpression	0		1278753	1					
ANR	1278920	PrimaryExpression	0		1278753	1					
ANR	1278921	ArrayIndexing	s0 -> c [ 0 ] [ 1 ]		1278753	1					
ANR	1278922	ArrayIndexing	s0 -> c [ 0 ]		1278753	0					
ANR	1278923	PtrMemberAccess	s0 -> c		1278753	0					
ANR	1278924	Identifier	s0		1278753	0					
ANR	1278925	Identifier	c		1278753	1					
ANR	1278926	PrimaryExpression	0		1278753	1					
ANR	1278927	PrimaryExpression	1		1278753	1					
ANR	1278928	ExpressionStatement	s1 -> c [ 1 ] [ 0 ] = s0 -> c [ 1 ] [ 1 ]	3586:4:135881:135906	1278753	9	True				
ANR	1278929	AssignmentExpression	s1 -> c [ 1 ] [ 0 ] = s0 -> c [ 1 ] [ 1 ]		1278753	0		=			
ANR	1278930	ArrayIndexing	s1 -> c [ 1 ] [ 0 ]		1278753	0					
ANR	1278931	ArrayIndexing	s1 -> c [ 1 ]		1278753	0					
ANR	1278932	PtrMemberAccess	s1 -> c		1278753	0					
ANR	1278933	Identifier	s1		1278753	0					
ANR	1278934	Identifier	c		1278753	1					
ANR	1278935	PrimaryExpression	1		1278753	1					
ANR	1278936	PrimaryExpression	0		1278753	1					
ANR	1278937	ArrayIndexing	s0 -> c [ 1 ] [ 1 ]		1278753	1					
ANR	1278938	ArrayIndexing	s0 -> c [ 1 ]		1278753	0					
ANR	1278939	PtrMemberAccess	s0 -> c		1278753	0					
ANR	1278940	Identifier	s0		1278753	0					
ANR	1278941	Identifier	c		1278753	1					
ANR	1278942	PrimaryExpression	1		1278753	1					
ANR	1278943	PrimaryExpression	1		1278753	1					
ANR	1278944	ExpressionStatement	"patch_interpolate_color ( s0 -> c [ 0 ] [ 1 ] , p -> c [ 0 ] [ 0 ] , p -> c [ 0 ] [ 1 ] , pfs , 0.5 )"	3587:4:135912:135982	1278753	10	True				
ANR	1278945	CallExpression	"patch_interpolate_color ( s0 -> c [ 0 ] [ 1 ] , p -> c [ 0 ] [ 0 ] , p -> c [ 0 ] [ 1 ] , pfs , 0.5 )"		1278753	0					
ANR	1278946	Callee	patch_interpolate_color		1278753	0					
ANR	1278947	Identifier	patch_interpolate_color		1278753	0					
ANR	1278948	ArgumentList	s0 -> c [ 0 ] [ 1 ]		1278753	1					
ANR	1278949	Argument	s0 -> c [ 0 ] [ 1 ]		1278753	0					
ANR	1278950	ArrayIndexing	s0 -> c [ 0 ] [ 1 ]		1278753	0					
ANR	1278951	ArrayIndexing	s0 -> c [ 0 ]		1278753	0					
ANR	1278952	PtrMemberAccess	s0 -> c		1278753	0					
ANR	1278953	Identifier	s0		1278753	0					
ANR	1278954	Identifier	c		1278753	1					
ANR	1278955	PrimaryExpression	0		1278753	1					
ANR	1278956	PrimaryExpression	1		1278753	1					
ANR	1278957	Argument	p -> c [ 0 ] [ 0 ]		1278753	1					
ANR	1278958	ArrayIndexing	p -> c [ 0 ] [ 0 ]		1278753	0					
ANR	1278959	ArrayIndexing	p -> c [ 0 ]		1278753	0					
ANR	1278960	PtrMemberAccess	p -> c		1278753	0					
ANR	1278961	Identifier	p		1278753	0					
ANR	1278962	Identifier	c		1278753	1					
ANR	1278963	PrimaryExpression	0		1278753	1					
ANR	1278964	PrimaryExpression	0		1278753	1					
ANR	1278965	Argument	p -> c [ 0 ] [ 1 ]		1278753	2					
ANR	1278966	ArrayIndexing	p -> c [ 0 ] [ 1 ]		1278753	0					
ANR	1278967	ArrayIndexing	p -> c [ 0 ]		1278753	0					
ANR	1278968	PtrMemberAccess	p -> c		1278753	0					
ANR	1278969	Identifier	p		1278753	0					
ANR	1278970	Identifier	c		1278753	1					
ANR	1278971	PrimaryExpression	0		1278753	1					
ANR	1278972	PrimaryExpression	1		1278753	1					
ANR	1278973	Argument	pfs		1278753	3					
ANR	1278974	Identifier	pfs		1278753	0					
ANR	1278975	Argument	0.5		1278753	4					
ANR	1278976	PrimaryExpression	0.5		1278753	0					
ANR	1278977	ExpressionStatement	"patch_interpolate_color ( s0 -> c [ 1 ] [ 1 ] , p -> c [ 1 ] [ 0 ] , p -> c [ 1 ] [ 1 ] , pfs , 0.5 )"	3588:4:135988:136058	1278753	11	True				
ANR	1278978	CallExpression	"patch_interpolate_color ( s0 -> c [ 1 ] [ 1 ] , p -> c [ 1 ] [ 0 ] , p -> c [ 1 ] [ 1 ] , pfs , 0.5 )"		1278753	0					
ANR	1278979	Callee	patch_interpolate_color		1278753	0					
ANR	1278980	Identifier	patch_interpolate_color		1278753	0					
ANR	1278981	ArgumentList	s0 -> c [ 1 ] [ 1 ]		1278753	1					
ANR	1278982	Argument	s0 -> c [ 1 ] [ 1 ]		1278753	0					
ANR	1278983	ArrayIndexing	s0 -> c [ 1 ] [ 1 ]		1278753	0					
ANR	1278984	ArrayIndexing	s0 -> c [ 1 ]		1278753	0					
ANR	1278985	PtrMemberAccess	s0 -> c		1278753	0					
ANR	1278986	Identifier	s0		1278753	0					
ANR	1278987	Identifier	c		1278753	1					
ANR	1278988	PrimaryExpression	1		1278753	1					
ANR	1278989	PrimaryExpression	1		1278753	1					
ANR	1278990	Argument	p -> c [ 1 ] [ 0 ]		1278753	1					
ANR	1278991	ArrayIndexing	p -> c [ 1 ] [ 0 ]		1278753	0					
ANR	1278992	ArrayIndexing	p -> c [ 1 ]		1278753	0					
ANR	1278993	PtrMemberAccess	p -> c		1278753	0					
ANR	1278994	Identifier	p		1278753	0					
ANR	1278995	Identifier	c		1278753	1					
ANR	1278996	PrimaryExpression	1		1278753	1					
ANR	1278997	PrimaryExpression	0		1278753	1					
ANR	1278998	Argument	p -> c [ 1 ] [ 1 ]		1278753	2					
ANR	1278999	ArrayIndexing	p -> c [ 1 ] [ 1 ]		1278753	0					
ANR	1279000	ArrayIndexing	p -> c [ 1 ]		1278753	0					
ANR	1279001	PtrMemberAccess	p -> c		1278753	0					
ANR	1279002	Identifier	p		1278753	0					
ANR	1279003	Identifier	c		1278753	1					
ANR	1279004	PrimaryExpression	1		1278753	1					
ANR	1279005	PrimaryExpression	1		1278753	1					
ANR	1279006	Argument	pfs		1278753	3					
ANR	1279007	Identifier	pfs		1278753	0					
ANR	1279008	Argument	0.5		1278753	4					
ANR	1279009	PrimaryExpression	0.5		1278753	0					
ANR	1279010	ExpressionStatement	s1 -> c [ 0 ] [ 1 ] = p -> c [ 0 ] [ 1 ]	3589:4:136064:136088	1278753	12	True				
ANR	1279011	AssignmentExpression	s1 -> c [ 0 ] [ 1 ] = p -> c [ 0 ] [ 1 ]		1278753	0		=			
ANR	1279012	ArrayIndexing	s1 -> c [ 0 ] [ 1 ]		1278753	0					
ANR	1279013	ArrayIndexing	s1 -> c [ 0 ]		1278753	0					
ANR	1279014	PtrMemberAccess	s1 -> c		1278753	0					
ANR	1279015	Identifier	s1		1278753	0					
ANR	1279016	Identifier	c		1278753	1					
ANR	1279017	PrimaryExpression	0		1278753	1					
ANR	1279018	PrimaryExpression	1		1278753	1					
ANR	1279019	ArrayIndexing	p -> c [ 0 ] [ 1 ]		1278753	1					
ANR	1279020	ArrayIndexing	p -> c [ 0 ]		1278753	0					
ANR	1279021	PtrMemberAccess	p -> c		1278753	0					
ANR	1279022	Identifier	p		1278753	0					
ANR	1279023	Identifier	c		1278753	1					
ANR	1279024	PrimaryExpression	0		1278753	1					
ANR	1279025	PrimaryExpression	1		1278753	1					
ANR	1279026	ExpressionStatement	s1 -> c [ 1 ] [ 1 ] = p -> c [ 1 ] [ 1 ]	3590:4:136094:136118	1278753	13	True				
ANR	1279027	AssignmentExpression	s1 -> c [ 1 ] [ 1 ] = p -> c [ 1 ] [ 1 ]		1278753	0		=			
ANR	1279028	ArrayIndexing	s1 -> c [ 1 ] [ 1 ]		1278753	0					
ANR	1279029	ArrayIndexing	s1 -> c [ 1 ]		1278753	0					
ANR	1279030	PtrMemberAccess	s1 -> c		1278753	0					
ANR	1279031	Identifier	s1		1278753	0					
ANR	1279032	Identifier	c		1278753	1					
ANR	1279033	PrimaryExpression	1		1278753	1					
ANR	1279034	PrimaryExpression	1		1278753	1					
ANR	1279035	ArrayIndexing	p -> c [ 1 ] [ 1 ]		1278753	1					
ANR	1279036	ArrayIndexing	p -> c [ 1 ]		1278753	0					
ANR	1279037	PtrMemberAccess	p -> c		1278753	0					
ANR	1279038	Identifier	p		1278753	0					
ANR	1279039	Identifier	c		1278753	1					
ANR	1279040	PrimaryExpression	1		1278753	1					
ANR	1279041	PrimaryExpression	1		1278753	1					
ANR	1279042	ReturnType	static inline void		1278753	1					
ANR	1279043	Identifier	split_stripe		1278753	2					
ANR	1279044	ParameterList	"patch_fill_state_t * pfs , tensor_patch * s0 , tensor_patch * s1 , const tensor_patch * p , patch_color_t * c [ 2 ]"		1278753	3					
ANR	1279045	Parameter	patch_fill_state_t * pfs	3575:13:135391:135413	1278753	0	True				
ANR	1279046	ParameterType	patch_fill_state_t *		1278753	0					
ANR	1279047	Identifier	pfs		1278753	1					
ANR	1279048	Parameter	tensor_patch * s0	3575:38:135416:135431	1278753	1	True				
ANR	1279049	ParameterType	tensor_patch *		1278753	0					
ANR	1279050	Identifier	s0		1278753	1					
ANR	1279051	Parameter	tensor_patch * s1	3575:56:135434:135449	1278753	2	True				
ANR	1279052	ParameterType	tensor_patch *		1278753	0					
ANR	1279053	Identifier	s1		1278753	1					
ANR	1279054	Parameter	const tensor_patch * p	3575:74:135452:135472	1278753	3	True				
ANR	1279055	ParameterType	const tensor_patch *		1278753	0					
ANR	1279056	Identifier	p		1278753	1					
ANR	1279057	Parameter	patch_color_t * c [ 2 ]	3575:97:135475:135493	1278753	4	True				
ANR	1279058	ParameterType	patch_color_t * [ 2 ]		1278753	0					
ANR	1279059	Identifier	c		1278753	1					
ANR	1279060	CFGEntryNode	ENTRY		1278753		True				
ANR	1279061	CFGExitNode	EXIT		1278753		True				
ANR	1279062	Symbol	* s0		1278753						
ANR	1279063	Symbol	* s1 -> c		1278753						
ANR	1279064	Symbol	* * * s0		1278753						
ANR	1279065	Symbol	p -> pole		1278753						
ANR	1279066	Symbol	* s1		1278753						
ANR	1279067	Symbol	* * s1		1278753						
ANR	1279068	Symbol	* s0 -> pole		1278753						
ANR	1279069	Symbol	* * s0		1278753						
ANR	1279070	Symbol	* s1 -> pole		1278753						
ANR	1279071	Symbol	p -> c		1278753						
ANR	1279072	Symbol	s1 -> c		1278753						
ANR	1279073	Symbol	* * p -> c		1278753						
ANR	1279074	Symbol	* * p		1278753						
ANR	1279075	Symbol	s0		1278753						
ANR	1279076	Symbol	s1		1278753						
ANR	1279077	Symbol	c		1278753						
ANR	1279078	Symbol	* p -> pole		1278753						
ANR	1279079	Symbol	* * s0 -> c		1278753						
ANR	1279080	Symbol	* s0 -> c		1278753						
ANR	1279081	Symbol	* c		1278753						
ANR	1279082	Symbol	p		1278753						
ANR	1279083	Symbol	s0 -> pole		1278753						
ANR	1279084	Symbol	* * * p		1278753						
ANR	1279085	Symbol	* p -> c		1278753						
ANR	1279086	Symbol	s0 -> c		1278753						
ANR	1279087	Symbol	* p		1278753						
ANR	1279088	Symbol	* * * s1		1278753						
ANR	1279089	Symbol	pfs		1278753						
ANR	1279090	Symbol	s1 -> pole		1278753						
ANR	1279091	Symbol	* * s1 -> c		1278753						
ANR	1279092	Function	split_patch	3594:0:136215:137023							
ANR	1279093	FunctionDef	"split_patch (patch_fill_state_t * pfs , tensor_patch * s0 , tensor_patch * s1 , const tensor_patch * p , patch_color_t * c [ 2 ])"		1279092	0					
ANR	1279094	CompoundStatement		3596:0:136351:137023	1279092	0					
ANR	1279095	ExpressionStatement	s0 -> c [ 1 ] [ 0 ] = c [ 0 ]	3597:4:136357:136375	1279092	0	True				
ANR	1279096	AssignmentExpression	s0 -> c [ 1 ] [ 0 ] = c [ 0 ]		1279092	0		=			
ANR	1279097	ArrayIndexing	s0 -> c [ 1 ] [ 0 ]		1279092	0					
ANR	1279098	ArrayIndexing	s0 -> c [ 1 ]		1279092	0					
ANR	1279099	PtrMemberAccess	s0 -> c		1279092	0					
ANR	1279100	Identifier	s0		1279092	0					
ANR	1279101	Identifier	c		1279092	1					
ANR	1279102	PrimaryExpression	1		1279092	1					
ANR	1279103	PrimaryExpression	0		1279092	1					
ANR	1279104	ArrayIndexing	c [ 0 ]		1279092	1					
ANR	1279105	Identifier	c		1279092	0					
ANR	1279106	PrimaryExpression	0		1279092	1					
ANR	1279107	ExpressionStatement	s0 -> c [ 1 ] [ 1 ] = c [ 1 ]	3598:4:136381:136399	1279092	1	True				
ANR	1279108	AssignmentExpression	s0 -> c [ 1 ] [ 1 ] = c [ 1 ]		1279092	0		=			
ANR	1279109	ArrayIndexing	s0 -> c [ 1 ] [ 1 ]		1279092	0					
ANR	1279110	ArrayIndexing	s0 -> c [ 1 ]		1279092	0					
ANR	1279111	PtrMemberAccess	s0 -> c		1279092	0					
ANR	1279112	Identifier	s0		1279092	0					
ANR	1279113	Identifier	c		1279092	1					
ANR	1279114	PrimaryExpression	1		1279092	1					
ANR	1279115	PrimaryExpression	1		1279092	1					
ANR	1279116	ArrayIndexing	c [ 1 ]		1279092	1					
ANR	1279117	Identifier	c		1279092	0					
ANR	1279118	PrimaryExpression	1		1279092	1					
ANR	1279119	ExpressionStatement	"split_curve_s ( & p -> pole [ 0 ] [ 0 ] , & s0 -> pole [ 0 ] [ 0 ] , & s1 -> pole [ 0 ] [ 0 ] , 4 )"	3599:4:136405:136471	1279092	2	True				
ANR	1279120	CallExpression	"split_curve_s ( & p -> pole [ 0 ] [ 0 ] , & s0 -> pole [ 0 ] [ 0 ] , & s1 -> pole [ 0 ] [ 0 ] , 4 )"		1279092	0					
ANR	1279121	Callee	split_curve_s		1279092	0					
ANR	1279122	Identifier	split_curve_s		1279092	0					
ANR	1279123	ArgumentList	& p -> pole [ 0 ] [ 0 ]		1279092	1					
ANR	1279124	Argument	& p -> pole [ 0 ] [ 0 ]		1279092	0					
ANR	1279125	UnaryOperationExpression	& p -> pole [ 0 ] [ 0 ]		1279092	0					
ANR	1279126	UnaryOperator	&		1279092	0					
ANR	1279127	ArrayIndexing	p -> pole [ 0 ] [ 0 ]		1279092	1					
ANR	1279128	ArrayIndexing	p -> pole [ 0 ]		1279092	0					
ANR	1279129	PtrMemberAccess	p -> pole		1279092	0					
ANR	1279130	Identifier	p		1279092	0					
ANR	1279131	Identifier	pole		1279092	1					
ANR	1279132	PrimaryExpression	0		1279092	1					
ANR	1279133	PrimaryExpression	0		1279092	1					
ANR	1279134	Argument	& s0 -> pole [ 0 ] [ 0 ]		1279092	1					
ANR	1279135	UnaryOperationExpression	& s0 -> pole [ 0 ] [ 0 ]		1279092	0					
ANR	1279136	UnaryOperator	&		1279092	0					
ANR	1279137	ArrayIndexing	s0 -> pole [ 0 ] [ 0 ]		1279092	1					
ANR	1279138	ArrayIndexing	s0 -> pole [ 0 ]		1279092	0					
ANR	1279139	PtrMemberAccess	s0 -> pole		1279092	0					
ANR	1279140	Identifier	s0		1279092	0					
ANR	1279141	Identifier	pole		1279092	1					
ANR	1279142	PrimaryExpression	0		1279092	1					
ANR	1279143	PrimaryExpression	0		1279092	1					
ANR	1279144	Argument	& s1 -> pole [ 0 ] [ 0 ]		1279092	2					
ANR	1279145	UnaryOperationExpression	& s1 -> pole [ 0 ] [ 0 ]		1279092	0					
ANR	1279146	UnaryOperator	&		1279092	0					
ANR	1279147	ArrayIndexing	s1 -> pole [ 0 ] [ 0 ]		1279092	1					
ANR	1279148	ArrayIndexing	s1 -> pole [ 0 ]		1279092	0					
ANR	1279149	PtrMemberAccess	s1 -> pole		1279092	0					
ANR	1279150	Identifier	s1		1279092	0					
ANR	1279151	Identifier	pole		1279092	1					
ANR	1279152	PrimaryExpression	0		1279092	1					
ANR	1279153	PrimaryExpression	0		1279092	1					
ANR	1279154	Argument	4		1279092	3					
ANR	1279155	PrimaryExpression	4		1279092	0					
ANR	1279156	ExpressionStatement	"split_curve_s ( & p -> pole [ 0 ] [ 1 ] , & s0 -> pole [ 0 ] [ 1 ] , & s1 -> pole [ 0 ] [ 1 ] , 4 )"	3600:4:136477:136543	1279092	3	True				
ANR	1279157	CallExpression	"split_curve_s ( & p -> pole [ 0 ] [ 1 ] , & s0 -> pole [ 0 ] [ 1 ] , & s1 -> pole [ 0 ] [ 1 ] , 4 )"		1279092	0					
ANR	1279158	Callee	split_curve_s		1279092	0					
ANR	1279159	Identifier	split_curve_s		1279092	0					
ANR	1279160	ArgumentList	& p -> pole [ 0 ] [ 1 ]		1279092	1					
ANR	1279161	Argument	& p -> pole [ 0 ] [ 1 ]		1279092	0					
ANR	1279162	UnaryOperationExpression	& p -> pole [ 0 ] [ 1 ]		1279092	0					
ANR	1279163	UnaryOperator	&		1279092	0					
ANR	1279164	ArrayIndexing	p -> pole [ 0 ] [ 1 ]		1279092	1					
ANR	1279165	ArrayIndexing	p -> pole [ 0 ]		1279092	0					
ANR	1279166	PtrMemberAccess	p -> pole		1279092	0					
ANR	1279167	Identifier	p		1279092	0					
ANR	1279168	Identifier	pole		1279092	1					
ANR	1279169	PrimaryExpression	0		1279092	1					
ANR	1279170	PrimaryExpression	1		1279092	1					
ANR	1279171	Argument	& s0 -> pole [ 0 ] [ 1 ]		1279092	1					
ANR	1279172	UnaryOperationExpression	& s0 -> pole [ 0 ] [ 1 ]		1279092	0					
ANR	1279173	UnaryOperator	&		1279092	0					
ANR	1279174	ArrayIndexing	s0 -> pole [ 0 ] [ 1 ]		1279092	1					
ANR	1279175	ArrayIndexing	s0 -> pole [ 0 ]		1279092	0					
ANR	1279176	PtrMemberAccess	s0 -> pole		1279092	0					
ANR	1279177	Identifier	s0		1279092	0					
ANR	1279178	Identifier	pole		1279092	1					
ANR	1279179	PrimaryExpression	0		1279092	1					
ANR	1279180	PrimaryExpression	1		1279092	1					
ANR	1279181	Argument	& s1 -> pole [ 0 ] [ 1 ]		1279092	2					
ANR	1279182	UnaryOperationExpression	& s1 -> pole [ 0 ] [ 1 ]		1279092	0					
ANR	1279183	UnaryOperator	&		1279092	0					
ANR	1279184	ArrayIndexing	s1 -> pole [ 0 ] [ 1 ]		1279092	1					
ANR	1279185	ArrayIndexing	s1 -> pole [ 0 ]		1279092	0					
ANR	1279186	PtrMemberAccess	s1 -> pole		1279092	0					
ANR	1279187	Identifier	s1		1279092	0					
ANR	1279188	Identifier	pole		1279092	1					
ANR	1279189	PrimaryExpression	0		1279092	1					
ANR	1279190	PrimaryExpression	1		1279092	1					
ANR	1279191	Argument	4		1279092	3					
ANR	1279192	PrimaryExpression	4		1279092	0					
ANR	1279193	ExpressionStatement	"split_curve_s ( & p -> pole [ 0 ] [ 2 ] , & s0 -> pole [ 0 ] [ 2 ] , & s1 -> pole [ 0 ] [ 2 ] , 4 )"	3601:4:136549:136615	1279092	4	True				
ANR	1279194	CallExpression	"split_curve_s ( & p -> pole [ 0 ] [ 2 ] , & s0 -> pole [ 0 ] [ 2 ] , & s1 -> pole [ 0 ] [ 2 ] , 4 )"		1279092	0					
ANR	1279195	Callee	split_curve_s		1279092	0					
ANR	1279196	Identifier	split_curve_s		1279092	0					
ANR	1279197	ArgumentList	& p -> pole [ 0 ] [ 2 ]		1279092	1					
ANR	1279198	Argument	& p -> pole [ 0 ] [ 2 ]		1279092	0					
ANR	1279199	UnaryOperationExpression	& p -> pole [ 0 ] [ 2 ]		1279092	0					
ANR	1279200	UnaryOperator	&		1279092	0					
ANR	1279201	ArrayIndexing	p -> pole [ 0 ] [ 2 ]		1279092	1					
ANR	1279202	ArrayIndexing	p -> pole [ 0 ]		1279092	0					
ANR	1279203	PtrMemberAccess	p -> pole		1279092	0					
ANR	1279204	Identifier	p		1279092	0					
ANR	1279205	Identifier	pole		1279092	1					
ANR	1279206	PrimaryExpression	0		1279092	1					
ANR	1279207	PrimaryExpression	2		1279092	1					
ANR	1279208	Argument	& s0 -> pole [ 0 ] [ 2 ]		1279092	1					
ANR	1279209	UnaryOperationExpression	& s0 -> pole [ 0 ] [ 2 ]		1279092	0					
ANR	1279210	UnaryOperator	&		1279092	0					
ANR	1279211	ArrayIndexing	s0 -> pole [ 0 ] [ 2 ]		1279092	1					
ANR	1279212	ArrayIndexing	s0 -> pole [ 0 ]		1279092	0					
ANR	1279213	PtrMemberAccess	s0 -> pole		1279092	0					
ANR	1279214	Identifier	s0		1279092	0					
ANR	1279215	Identifier	pole		1279092	1					
ANR	1279216	PrimaryExpression	0		1279092	1					
ANR	1279217	PrimaryExpression	2		1279092	1					
ANR	1279218	Argument	& s1 -> pole [ 0 ] [ 2 ]		1279092	2					
ANR	1279219	UnaryOperationExpression	& s1 -> pole [ 0 ] [ 2 ]		1279092	0					
ANR	1279220	UnaryOperator	&		1279092	0					
ANR	1279221	ArrayIndexing	s1 -> pole [ 0 ] [ 2 ]		1279092	1					
ANR	1279222	ArrayIndexing	s1 -> pole [ 0 ]		1279092	0					
ANR	1279223	PtrMemberAccess	s1 -> pole		1279092	0					
ANR	1279224	Identifier	s1		1279092	0					
ANR	1279225	Identifier	pole		1279092	1					
ANR	1279226	PrimaryExpression	0		1279092	1					
ANR	1279227	PrimaryExpression	2		1279092	1					
ANR	1279228	Argument	4		1279092	3					
ANR	1279229	PrimaryExpression	4		1279092	0					
ANR	1279230	ExpressionStatement	"split_curve_s ( & p -> pole [ 0 ] [ 3 ] , & s0 -> pole [ 0 ] [ 3 ] , & s1 -> pole [ 0 ] [ 3 ] , 4 )"	3602:4:136621:136687	1279092	5	True				
ANR	1279231	CallExpression	"split_curve_s ( & p -> pole [ 0 ] [ 3 ] , & s0 -> pole [ 0 ] [ 3 ] , & s1 -> pole [ 0 ] [ 3 ] , 4 )"		1279092	0					
ANR	1279232	Callee	split_curve_s		1279092	0					
ANR	1279233	Identifier	split_curve_s		1279092	0					
ANR	1279234	ArgumentList	& p -> pole [ 0 ] [ 3 ]		1279092	1					
ANR	1279235	Argument	& p -> pole [ 0 ] [ 3 ]		1279092	0					
ANR	1279236	UnaryOperationExpression	& p -> pole [ 0 ] [ 3 ]		1279092	0					
ANR	1279237	UnaryOperator	&		1279092	0					
ANR	1279238	ArrayIndexing	p -> pole [ 0 ] [ 3 ]		1279092	1					
ANR	1279239	ArrayIndexing	p -> pole [ 0 ]		1279092	0					
ANR	1279240	PtrMemberAccess	p -> pole		1279092	0					
ANR	1279241	Identifier	p		1279092	0					
ANR	1279242	Identifier	pole		1279092	1					
ANR	1279243	PrimaryExpression	0		1279092	1					
ANR	1279244	PrimaryExpression	3		1279092	1					
ANR	1279245	Argument	& s0 -> pole [ 0 ] [ 3 ]		1279092	1					
ANR	1279246	UnaryOperationExpression	& s0 -> pole [ 0 ] [ 3 ]		1279092	0					
ANR	1279247	UnaryOperator	&		1279092	0					
ANR	1279248	ArrayIndexing	s0 -> pole [ 0 ] [ 3 ]		1279092	1					
ANR	1279249	ArrayIndexing	s0 -> pole [ 0 ]		1279092	0					
ANR	1279250	PtrMemberAccess	s0 -> pole		1279092	0					
ANR	1279251	Identifier	s0		1279092	0					
ANR	1279252	Identifier	pole		1279092	1					
ANR	1279253	PrimaryExpression	0		1279092	1					
ANR	1279254	PrimaryExpression	3		1279092	1					
ANR	1279255	Argument	& s1 -> pole [ 0 ] [ 3 ]		1279092	2					
ANR	1279256	UnaryOperationExpression	& s1 -> pole [ 0 ] [ 3 ]		1279092	0					
ANR	1279257	UnaryOperator	&		1279092	0					
ANR	1279258	ArrayIndexing	s1 -> pole [ 0 ] [ 3 ]		1279092	1					
ANR	1279259	ArrayIndexing	s1 -> pole [ 0 ]		1279092	0					
ANR	1279260	PtrMemberAccess	s1 -> pole		1279092	0					
ANR	1279261	Identifier	s1		1279092	0					
ANR	1279262	Identifier	pole		1279092	1					
ANR	1279263	PrimaryExpression	0		1279092	1					
ANR	1279264	PrimaryExpression	3		1279092	1					
ANR	1279265	Argument	4		1279092	3					
ANR	1279266	PrimaryExpression	4		1279092	0					
ANR	1279267	ExpressionStatement	s0 -> c [ 0 ] [ 0 ] = p -> c [ 0 ] [ 0 ]	3603:4:136693:136717	1279092	6	True				
ANR	1279268	AssignmentExpression	s0 -> c [ 0 ] [ 0 ] = p -> c [ 0 ] [ 0 ]		1279092	0		=			
ANR	1279269	ArrayIndexing	s0 -> c [ 0 ] [ 0 ]		1279092	0					
ANR	1279270	ArrayIndexing	s0 -> c [ 0 ]		1279092	0					
ANR	1279271	PtrMemberAccess	s0 -> c		1279092	0					
ANR	1279272	Identifier	s0		1279092	0					
ANR	1279273	Identifier	c		1279092	1					
ANR	1279274	PrimaryExpression	0		1279092	1					
ANR	1279275	PrimaryExpression	0		1279092	1					
ANR	1279276	ArrayIndexing	p -> c [ 0 ] [ 0 ]		1279092	1					
ANR	1279277	ArrayIndexing	p -> c [ 0 ]		1279092	0					
ANR	1279278	PtrMemberAccess	p -> c		1279092	0					
ANR	1279279	Identifier	p		1279092	0					
ANR	1279280	Identifier	c		1279092	1					
ANR	1279281	PrimaryExpression	0		1279092	1					
ANR	1279282	PrimaryExpression	0		1279092	1					
ANR	1279283	ExpressionStatement	s0 -> c [ 0 ] [ 1 ] = p -> c [ 0 ] [ 1 ]	3604:4:136723:136747	1279092	7	True				
ANR	1279284	AssignmentExpression	s0 -> c [ 0 ] [ 1 ] = p -> c [ 0 ] [ 1 ]		1279092	0		=			
ANR	1279285	ArrayIndexing	s0 -> c [ 0 ] [ 1 ]		1279092	0					
ANR	1279286	ArrayIndexing	s0 -> c [ 0 ]		1279092	0					
ANR	1279287	PtrMemberAccess	s0 -> c		1279092	0					
ANR	1279288	Identifier	s0		1279092	0					
ANR	1279289	Identifier	c		1279092	1					
ANR	1279290	PrimaryExpression	0		1279092	1					
ANR	1279291	PrimaryExpression	1		1279092	1					
ANR	1279292	ArrayIndexing	p -> c [ 0 ] [ 1 ]		1279092	1					
ANR	1279293	ArrayIndexing	p -> c [ 0 ]		1279092	0					
ANR	1279294	PtrMemberAccess	p -> c		1279092	0					
ANR	1279295	Identifier	p		1279092	0					
ANR	1279296	Identifier	c		1279092	1					
ANR	1279297	PrimaryExpression	0		1279092	1					
ANR	1279298	PrimaryExpression	1		1279092	1					
ANR	1279299	ExpressionStatement	s1 -> c [ 0 ] [ 0 ] = s0 -> c [ 1 ] [ 0 ]	3605:4:136753:136778	1279092	8	True				
ANR	1279300	AssignmentExpression	s1 -> c [ 0 ] [ 0 ] = s0 -> c [ 1 ] [ 0 ]		1279092	0		=			
ANR	1279301	ArrayIndexing	s1 -> c [ 0 ] [ 0 ]		1279092	0					
ANR	1279302	ArrayIndexing	s1 -> c [ 0 ]		1279092	0					
ANR	1279303	PtrMemberAccess	s1 -> c		1279092	0					
ANR	1279304	Identifier	s1		1279092	0					
ANR	1279305	Identifier	c		1279092	1					
ANR	1279306	PrimaryExpression	0		1279092	1					
ANR	1279307	PrimaryExpression	0		1279092	1					
ANR	1279308	ArrayIndexing	s0 -> c [ 1 ] [ 0 ]		1279092	1					
ANR	1279309	ArrayIndexing	s0 -> c [ 1 ]		1279092	0					
ANR	1279310	PtrMemberAccess	s0 -> c		1279092	0					
ANR	1279311	Identifier	s0		1279092	0					
ANR	1279312	Identifier	c		1279092	1					
ANR	1279313	PrimaryExpression	1		1279092	1					
ANR	1279314	PrimaryExpression	0		1279092	1					
ANR	1279315	ExpressionStatement	s1 -> c [ 0 ] [ 1 ] = s0 -> c [ 1 ] [ 1 ]	3606:4:136784:136809	1279092	9	True				
ANR	1279316	AssignmentExpression	s1 -> c [ 0 ] [ 1 ] = s0 -> c [ 1 ] [ 1 ]		1279092	0		=			
ANR	1279317	ArrayIndexing	s1 -> c [ 0 ] [ 1 ]		1279092	0					
ANR	1279318	ArrayIndexing	s1 -> c [ 0 ]		1279092	0					
ANR	1279319	PtrMemberAccess	s1 -> c		1279092	0					
ANR	1279320	Identifier	s1		1279092	0					
ANR	1279321	Identifier	c		1279092	1					
ANR	1279322	PrimaryExpression	0		1279092	1					
ANR	1279323	PrimaryExpression	1		1279092	1					
ANR	1279324	ArrayIndexing	s0 -> c [ 1 ] [ 1 ]		1279092	1					
ANR	1279325	ArrayIndexing	s0 -> c [ 1 ]		1279092	0					
ANR	1279326	PtrMemberAccess	s0 -> c		1279092	0					
ANR	1279327	Identifier	s0		1279092	0					
ANR	1279328	Identifier	c		1279092	1					
ANR	1279329	PrimaryExpression	1		1279092	1					
ANR	1279330	PrimaryExpression	1		1279092	1					
ANR	1279331	ExpressionStatement	"patch_interpolate_color ( s0 -> c [ 1 ] [ 0 ] , p -> c [ 0 ] [ 0 ] , p -> c [ 1 ] [ 0 ] , pfs , 0.5 )"	3607:4:136815:136885	1279092	10	True				
ANR	1279332	CallExpression	"patch_interpolate_color ( s0 -> c [ 1 ] [ 0 ] , p -> c [ 0 ] [ 0 ] , p -> c [ 1 ] [ 0 ] , pfs , 0.5 )"		1279092	0					
ANR	1279333	Callee	patch_interpolate_color		1279092	0					
ANR	1279334	Identifier	patch_interpolate_color		1279092	0					
ANR	1279335	ArgumentList	s0 -> c [ 1 ] [ 0 ]		1279092	1					
ANR	1279336	Argument	s0 -> c [ 1 ] [ 0 ]		1279092	0					
ANR	1279337	ArrayIndexing	s0 -> c [ 1 ] [ 0 ]		1279092	0					
ANR	1279338	ArrayIndexing	s0 -> c [ 1 ]		1279092	0					
ANR	1279339	PtrMemberAccess	s0 -> c		1279092	0					
ANR	1279340	Identifier	s0		1279092	0					
ANR	1279341	Identifier	c		1279092	1					
ANR	1279342	PrimaryExpression	1		1279092	1					
ANR	1279343	PrimaryExpression	0		1279092	1					
ANR	1279344	Argument	p -> c [ 0 ] [ 0 ]		1279092	1					
ANR	1279345	ArrayIndexing	p -> c [ 0 ] [ 0 ]		1279092	0					
ANR	1279346	ArrayIndexing	p -> c [ 0 ]		1279092	0					
ANR	1279347	PtrMemberAccess	p -> c		1279092	0					
ANR	1279348	Identifier	p		1279092	0					
ANR	1279349	Identifier	c		1279092	1					
ANR	1279350	PrimaryExpression	0		1279092	1					
ANR	1279351	PrimaryExpression	0		1279092	1					
ANR	1279352	Argument	p -> c [ 1 ] [ 0 ]		1279092	2					
ANR	1279353	ArrayIndexing	p -> c [ 1 ] [ 0 ]		1279092	0					
ANR	1279354	ArrayIndexing	p -> c [ 1 ]		1279092	0					
ANR	1279355	PtrMemberAccess	p -> c		1279092	0					
ANR	1279356	Identifier	p		1279092	0					
ANR	1279357	Identifier	c		1279092	1					
ANR	1279358	PrimaryExpression	1		1279092	1					
ANR	1279359	PrimaryExpression	0		1279092	1					
ANR	1279360	Argument	pfs		1279092	3					
ANR	1279361	Identifier	pfs		1279092	0					
ANR	1279362	Argument	0.5		1279092	4					
ANR	1279363	PrimaryExpression	0.5		1279092	0					
ANR	1279364	ExpressionStatement	"patch_interpolate_color ( s0 -> c [ 1 ] [ 1 ] , p -> c [ 0 ] [ 1 ] , p -> c [ 1 ] [ 1 ] , pfs , 0.5 )"	3608:4:136891:136961	1279092	11	True				
ANR	1279365	CallExpression	"patch_interpolate_color ( s0 -> c [ 1 ] [ 1 ] , p -> c [ 0 ] [ 1 ] , p -> c [ 1 ] [ 1 ] , pfs , 0.5 )"		1279092	0					
ANR	1279366	Callee	patch_interpolate_color		1279092	0					
ANR	1279367	Identifier	patch_interpolate_color		1279092	0					
ANR	1279368	ArgumentList	s0 -> c [ 1 ] [ 1 ]		1279092	1					
ANR	1279369	Argument	s0 -> c [ 1 ] [ 1 ]		1279092	0					
ANR	1279370	ArrayIndexing	s0 -> c [ 1 ] [ 1 ]		1279092	0					
ANR	1279371	ArrayIndexing	s0 -> c [ 1 ]		1279092	0					
ANR	1279372	PtrMemberAccess	s0 -> c		1279092	0					
ANR	1279373	Identifier	s0		1279092	0					
ANR	1279374	Identifier	c		1279092	1					
ANR	1279375	PrimaryExpression	1		1279092	1					
ANR	1279376	PrimaryExpression	1		1279092	1					
ANR	1279377	Argument	p -> c [ 0 ] [ 1 ]		1279092	1					
ANR	1279378	ArrayIndexing	p -> c [ 0 ] [ 1 ]		1279092	0					
ANR	1279379	ArrayIndexing	p -> c [ 0 ]		1279092	0					
ANR	1279380	PtrMemberAccess	p -> c		1279092	0					
ANR	1279381	Identifier	p		1279092	0					
ANR	1279382	Identifier	c		1279092	1					
ANR	1279383	PrimaryExpression	0		1279092	1					
ANR	1279384	PrimaryExpression	1		1279092	1					
ANR	1279385	Argument	p -> c [ 1 ] [ 1 ]		1279092	2					
ANR	1279386	ArrayIndexing	p -> c [ 1 ] [ 1 ]		1279092	0					
ANR	1279387	ArrayIndexing	p -> c [ 1 ]		1279092	0					
ANR	1279388	PtrMemberAccess	p -> c		1279092	0					
ANR	1279389	Identifier	p		1279092	0					
ANR	1279390	Identifier	c		1279092	1					
ANR	1279391	PrimaryExpression	1		1279092	1					
ANR	1279392	PrimaryExpression	1		1279092	1					
ANR	1279393	Argument	pfs		1279092	3					
ANR	1279394	Identifier	pfs		1279092	0					
ANR	1279395	Argument	0.5		1279092	4					
ANR	1279396	PrimaryExpression	0.5		1279092	0					
ANR	1279397	ExpressionStatement	s1 -> c [ 1 ] [ 0 ] = p -> c [ 1 ] [ 0 ]	3609:4:136967:136991	1279092	12	True				
ANR	1279398	AssignmentExpression	s1 -> c [ 1 ] [ 0 ] = p -> c [ 1 ] [ 0 ]		1279092	0		=			
ANR	1279399	ArrayIndexing	s1 -> c [ 1 ] [ 0 ]		1279092	0					
ANR	1279400	ArrayIndexing	s1 -> c [ 1 ]		1279092	0					
ANR	1279401	PtrMemberAccess	s1 -> c		1279092	0					
ANR	1279402	Identifier	s1		1279092	0					
ANR	1279403	Identifier	c		1279092	1					
ANR	1279404	PrimaryExpression	1		1279092	1					
ANR	1279405	PrimaryExpression	0		1279092	1					
ANR	1279406	ArrayIndexing	p -> c [ 1 ] [ 0 ]		1279092	1					
ANR	1279407	ArrayIndexing	p -> c [ 1 ]		1279092	0					
ANR	1279408	PtrMemberAccess	p -> c		1279092	0					
ANR	1279409	Identifier	p		1279092	0					
ANR	1279410	Identifier	c		1279092	1					
ANR	1279411	PrimaryExpression	1		1279092	1					
ANR	1279412	PrimaryExpression	0		1279092	1					
ANR	1279413	ExpressionStatement	s1 -> c [ 1 ] [ 1 ] = p -> c [ 1 ] [ 1 ]	3610:4:136997:137021	1279092	13	True				
ANR	1279414	AssignmentExpression	s1 -> c [ 1 ] [ 1 ] = p -> c [ 1 ] [ 1 ]		1279092	0		=			
ANR	1279415	ArrayIndexing	s1 -> c [ 1 ] [ 1 ]		1279092	0					
ANR	1279416	ArrayIndexing	s1 -> c [ 1 ]		1279092	0					
ANR	1279417	PtrMemberAccess	s1 -> c		1279092	0					
ANR	1279418	Identifier	s1		1279092	0					
ANR	1279419	Identifier	c		1279092	1					
ANR	1279420	PrimaryExpression	1		1279092	1					
ANR	1279421	PrimaryExpression	1		1279092	1					
ANR	1279422	ArrayIndexing	p -> c [ 1 ] [ 1 ]		1279092	1					
ANR	1279423	ArrayIndexing	p -> c [ 1 ]		1279092	0					
ANR	1279424	PtrMemberAccess	p -> c		1279092	0					
ANR	1279425	Identifier	p		1279092	0					
ANR	1279426	Identifier	c		1279092	1					
ANR	1279427	PrimaryExpression	1		1279092	1					
ANR	1279428	PrimaryExpression	1		1279092	1					
ANR	1279429	ReturnType	static inline void		1279092	1					
ANR	1279430	Identifier	split_patch		1279092	2					
ANR	1279431	ParameterList	"patch_fill_state_t * pfs , tensor_patch * s0 , tensor_patch * s1 , const tensor_patch * p , patch_color_t * c [ 2 ]"		1279092	3					
ANR	1279432	Parameter	patch_fill_state_t * pfs	3595:12:136246:136268	1279092	0	True				
ANR	1279433	ParameterType	patch_fill_state_t *		1279092	0					
ANR	1279434	Identifier	pfs		1279092	1					
ANR	1279435	Parameter	tensor_patch * s0	3595:37:136271:136286	1279092	1	True				
ANR	1279436	ParameterType	tensor_patch *		1279092	0					
ANR	1279437	Identifier	s0		1279092	1					
ANR	1279438	Parameter	tensor_patch * s1	3595:55:136289:136304	1279092	2	True				
ANR	1279439	ParameterType	tensor_patch *		1279092	0					
ANR	1279440	Identifier	s1		1279092	1					
ANR	1279441	Parameter	const tensor_patch * p	3595:73:136307:136327	1279092	3	True				
ANR	1279442	ParameterType	const tensor_patch *		1279092	0					
ANR	1279443	Identifier	p		1279092	1					
ANR	1279444	Parameter	patch_color_t * c [ 2 ]	3595:96:136330:136348	1279092	4	True				
ANR	1279445	ParameterType	patch_color_t * [ 2 ]		1279092	0					
ANR	1279446	Identifier	c		1279092	1					
ANR	1279447	CFGEntryNode	ENTRY		1279092		True				
ANR	1279448	CFGExitNode	EXIT		1279092		True				
ANR	1279449	Symbol	* s0		1279092						
ANR	1279450	Symbol	* s1 -> c		1279092						
ANR	1279451	Symbol	* * * s0		1279092						
ANR	1279452	Symbol	p -> pole		1279092						
ANR	1279453	Symbol	* s1		1279092						
ANR	1279454	Symbol	* * s1		1279092						
ANR	1279455	Symbol	* s0 -> pole		1279092						
ANR	1279456	Symbol	* * s0		1279092						
ANR	1279457	Symbol	* s1 -> pole		1279092						
ANR	1279458	Symbol	p -> c		1279092						
ANR	1279459	Symbol	s1 -> c		1279092						
ANR	1279460	Symbol	* * p -> c		1279092						
ANR	1279461	Symbol	* * p		1279092						
ANR	1279462	Symbol	s0		1279092						
ANR	1279463	Symbol	s1		1279092						
ANR	1279464	Symbol	c		1279092						
ANR	1279465	Symbol	* p -> pole		1279092						
ANR	1279466	Symbol	* * s0 -> c		1279092						
ANR	1279467	Symbol	* s0 -> c		1279092						
ANR	1279468	Symbol	* c		1279092						
ANR	1279469	Symbol	p		1279092						
ANR	1279470	Symbol	s0 -> pole		1279092						
ANR	1279471	Symbol	* * * p		1279092						
ANR	1279472	Symbol	* p -> c		1279092						
ANR	1279473	Symbol	s0 -> c		1279092						
ANR	1279474	Symbol	* p		1279092						
ANR	1279475	Symbol	* * * s1		1279092						
ANR	1279476	Symbol	pfs		1279092						
ANR	1279477	Symbol	s1 -> pole		1279092						
ANR	1279478	Symbol	* * s1 -> c		1279092						
ANR	1279479	Function	tensor_patch_bbox	3613:0:137026:137582							
ANR	1279480	FunctionDef	"tensor_patch_bbox (gs_fixed_rect * r , const tensor_patch * p)"		1279479	0					
ANR	1279481	CompoundStatement		3615:0:137104:137582	1279479	0					
ANR	1279482	IdentifierDeclStatement	"int i , j ;"	3616:4:137110:137118	1279479	0	True				
ANR	1279483	IdentifierDecl	i		1279479	0					
ANR	1279484	IdentifierDeclType	int		1279479	0					
ANR	1279485	Identifier	i		1279479	1					
ANR	1279486	IdentifierDecl	j		1279479	1					
ANR	1279487	IdentifierDeclType	int		1279479	0					
ANR	1279488	Identifier	j		1279479	1					
ANR	1279489	ExpressionStatement	r -> p . x = r -> q . x = p -> pole [ 0 ] [ 0 ] . x	3618:4:137125:137158	1279479	1	True				
ANR	1279490	AssignmentExpression	r -> p . x = r -> q . x = p -> pole [ 0 ] [ 0 ] . x		1279479	0		=			
ANR	1279491	MemberAccess	r -> p . x		1279479	0					
ANR	1279492	PtrMemberAccess	r -> p		1279479	0					
ANR	1279493	Identifier	r		1279479	0					
ANR	1279494	Identifier	p		1279479	1					
ANR	1279495	Identifier	x		1279479	1					
ANR	1279496	AssignmentExpression	r -> q . x = p -> pole [ 0 ] [ 0 ] . x		1279479	1		=			
ANR	1279497	MemberAccess	r -> q . x		1279479	0					
ANR	1279498	PtrMemberAccess	r -> q		1279479	0					
ANR	1279499	Identifier	r		1279479	0					
ANR	1279500	Identifier	q		1279479	1					
ANR	1279501	Identifier	x		1279479	1					
ANR	1279502	MemberAccess	p -> pole [ 0 ] [ 0 ] . x		1279479	1					
ANR	1279503	ArrayIndexing	p -> pole [ 0 ] [ 0 ]		1279479	0					
ANR	1279504	ArrayIndexing	p -> pole [ 0 ]		1279479	0					
ANR	1279505	PtrMemberAccess	p -> pole		1279479	0					
ANR	1279506	Identifier	p		1279479	0					
ANR	1279507	Identifier	pole		1279479	1					
ANR	1279508	PrimaryExpression	0		1279479	1					
ANR	1279509	PrimaryExpression	0		1279479	1					
ANR	1279510	Identifier	x		1279479	1					
ANR	1279511	ExpressionStatement	r -> p . y = r -> q . y = p -> pole [ 0 ] [ 0 ] . y	3619:4:137164:137197	1279479	2	True				
ANR	1279512	AssignmentExpression	r -> p . y = r -> q . y = p -> pole [ 0 ] [ 0 ] . y		1279479	0		=			
ANR	1279513	MemberAccess	r -> p . y		1279479	0					
ANR	1279514	PtrMemberAccess	r -> p		1279479	0					
ANR	1279515	Identifier	r		1279479	0					
ANR	1279516	Identifier	p		1279479	1					
ANR	1279517	Identifier	y		1279479	1					
ANR	1279518	AssignmentExpression	r -> q . y = p -> pole [ 0 ] [ 0 ] . y		1279479	1		=			
ANR	1279519	MemberAccess	r -> q . y		1279479	0					
ANR	1279520	PtrMemberAccess	r -> q		1279479	0					
ANR	1279521	Identifier	r		1279479	0					
ANR	1279522	Identifier	q		1279479	1					
ANR	1279523	Identifier	y		1279479	1					
ANR	1279524	MemberAccess	p -> pole [ 0 ] [ 0 ] . y		1279479	1					
ANR	1279525	ArrayIndexing	p -> pole [ 0 ] [ 0 ]		1279479	0					
ANR	1279526	ArrayIndexing	p -> pole [ 0 ]		1279479	0					
ANR	1279527	PtrMemberAccess	p -> pole		1279479	0					
ANR	1279528	Identifier	p		1279479	0					
ANR	1279529	Identifier	pole		1279479	1					
ANR	1279530	PrimaryExpression	0		1279479	1					
ANR	1279531	PrimaryExpression	0		1279479	1					
ANR	1279532	Identifier	y		1279479	1					
ANR	1279533	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		1279479	3					
ANR	1279534	ForInit	i = 0 ;	3620:9:137208:137213	1279479	0	True				
ANR	1279535	AssignmentExpression	i = 0		1279479	0		=			
ANR	1279536	Identifier	i		1279479	0					
ANR	1279537	PrimaryExpression	0		1279479	1					
ANR	1279538	Condition	i < 4	3620:16:137215:137219	1279479	1	True				
ANR	1279539	RelationalExpression	i < 4		1279479	0		<			
ANR	1279540	Identifier	i		1279479	0					
ANR	1279541	PrimaryExpression	4		1279479	1					
ANR	1279542	PostIncDecOperationExpression	i ++	3620:23:137222:137224	1279479	2	True				
ANR	1279543	Identifier	i		1279479	0					
ANR	1279544	IncDec	++		1279479	1					
ANR	1279545	CompoundStatement		6:28:122:122	1279479	3					
ANR	1279546	ForStatement	for ( j = 0 ; j < 4 ; j ++ )		1279479	0					
ANR	1279547	ForInit	j = 0 ;	3621:13:137242:137247	1279479	0	True				
ANR	1279548	AssignmentExpression	j = 0		1279479	0		=			
ANR	1279549	Identifier	j		1279479	0					
ANR	1279550	PrimaryExpression	0		1279479	1					
ANR	1279551	Condition	j < 4	3621:20:137249:137253	1279479	1	True				
ANR	1279552	RelationalExpression	j < 4		1279479	0		<			
ANR	1279553	Identifier	j		1279479	0					
ANR	1279554	PrimaryExpression	4		1279479	1					
ANR	1279555	PostIncDecOperationExpression	j ++	3621:27:137256:137258	1279479	2	True				
ANR	1279556	Identifier	j		1279479	0					
ANR	1279557	IncDec	++		1279479	1					
ANR	1279558	CompoundStatement		8:12:170:210	1279479	3					
ANR	1279559	IdentifierDeclStatement	const gs_fixed_point * q = & p -> pole [ i ] [ j ] ;	3622:12:137275:137315	1279479	0	True				
ANR	1279560	IdentifierDecl	* q = & p -> pole [ i ] [ j ]		1279479	0					
ANR	1279561	IdentifierDeclType	const gs_fixed_point *		1279479	0					
ANR	1279562	Identifier	q		1279479	1					
ANR	1279563	AssignmentExpression	* q = & p -> pole [ i ] [ j ]		1279479	2		=			
ANR	1279564	Identifier	q		1279479	0					
ANR	1279565	UnaryOperationExpression	& p -> pole [ i ] [ j ]		1279479	1					
ANR	1279566	UnaryOperator	&		1279479	0					
ANR	1279567	ArrayIndexing	p -> pole [ i ] [ j ]		1279479	1					
ANR	1279568	ArrayIndexing	p -> pole [ i ]		1279479	0					
ANR	1279569	PtrMemberAccess	p -> pole		1279479	0					
ANR	1279570	Identifier	p		1279479	0					
ANR	1279571	Identifier	pole		1279479	1					
ANR	1279572	Identifier	i		1279479	1					
ANR	1279573	Identifier	j		1279479	1					
ANR	1279574	IfStatement	if ( r -> p . x > q -> x )		1279479	1					
ANR	1279575	Condition	r -> p . x > q -> x	3624:16:137334:137346	1279479	0	True				
ANR	1279576	RelationalExpression	r -> p . x > q -> x		1279479	0		>			
ANR	1279577	MemberAccess	r -> p . x		1279479	0					
ANR	1279578	PtrMemberAccess	r -> p		1279479	0					
ANR	1279579	Identifier	r		1279479	0					
ANR	1279580	Identifier	p		1279479	1					
ANR	1279581	Identifier	x		1279479	1					
ANR	1279582	PtrMemberAccess	q -> x		1279479	1					
ANR	1279583	Identifier	q		1279479	0					
ANR	1279584	Identifier	x		1279479	1					
ANR	1279585	ExpressionStatement	r -> p . x = q -> x	3625:16:137365:137378	1279479	1	True				
ANR	1279586	AssignmentExpression	r -> p . x = q -> x		1279479	0		=			
ANR	1279587	MemberAccess	r -> p . x		1279479	0					
ANR	1279588	PtrMemberAccess	r -> p		1279479	0					
ANR	1279589	Identifier	r		1279479	0					
ANR	1279590	Identifier	p		1279479	1					
ANR	1279591	Identifier	x		1279479	1					
ANR	1279592	PtrMemberAccess	q -> x		1279479	1					
ANR	1279593	Identifier	q		1279479	0					
ANR	1279594	Identifier	x		1279479	1					
ANR	1279595	IfStatement	if ( r -> p . y > q -> y )		1279479	2					
ANR	1279596	Condition	r -> p . y > q -> y	3626:16:137396:137408	1279479	0	True				
ANR	1279597	RelationalExpression	r -> p . y > q -> y		1279479	0		>			
ANR	1279598	MemberAccess	r -> p . y		1279479	0					
ANR	1279599	PtrMemberAccess	r -> p		1279479	0					
ANR	1279600	Identifier	r		1279479	0					
ANR	1279601	Identifier	p		1279479	1					
ANR	1279602	Identifier	y		1279479	1					
ANR	1279603	PtrMemberAccess	q -> y		1279479	1					
ANR	1279604	Identifier	q		1279479	0					
ANR	1279605	Identifier	y		1279479	1					
ANR	1279606	ExpressionStatement	r -> p . y = q -> y	3627:16:137427:137440	1279479	1	True				
ANR	1279607	AssignmentExpression	r -> p . y = q -> y		1279479	0		=			
ANR	1279608	MemberAccess	r -> p . y		1279479	0					
ANR	1279609	PtrMemberAccess	r -> p		1279479	0					
ANR	1279610	Identifier	r		1279479	0					
ANR	1279611	Identifier	p		1279479	1					
ANR	1279612	Identifier	y		1279479	1					
ANR	1279613	PtrMemberAccess	q -> y		1279479	1					
ANR	1279614	Identifier	q		1279479	0					
ANR	1279615	Identifier	y		1279479	1					
ANR	1279616	IfStatement	if ( r -> q . x < q -> x )		1279479	3					
ANR	1279617	Condition	r -> q . x < q -> x	3628:16:137458:137470	1279479	0	True				
ANR	1279618	RelationalExpression	r -> q . x < q -> x		1279479	0		<			
ANR	1279619	MemberAccess	r -> q . x		1279479	0					
ANR	1279620	PtrMemberAccess	r -> q		1279479	0					
ANR	1279621	Identifier	r		1279479	0					
ANR	1279622	Identifier	q		1279479	1					
ANR	1279623	Identifier	x		1279479	1					
ANR	1279624	PtrMemberAccess	q -> x		1279479	1					
ANR	1279625	Identifier	q		1279479	0					
ANR	1279626	Identifier	x		1279479	1					
ANR	1279627	ExpressionStatement	r -> q . x = q -> x	3629:16:137489:137502	1279479	1	True				
ANR	1279628	AssignmentExpression	r -> q . x = q -> x		1279479	0		=			
ANR	1279629	MemberAccess	r -> q . x		1279479	0					
ANR	1279630	PtrMemberAccess	r -> q		1279479	0					
ANR	1279631	Identifier	r		1279479	0					
ANR	1279632	Identifier	q		1279479	1					
ANR	1279633	Identifier	x		1279479	1					
ANR	1279634	PtrMemberAccess	q -> x		1279479	1					
ANR	1279635	Identifier	q		1279479	0					
ANR	1279636	Identifier	x		1279479	1					
ANR	1279637	IfStatement	if ( r -> q . y < q -> y )		1279479	4					
ANR	1279638	Condition	r -> q . y < q -> y	3630:16:137520:137532	1279479	0	True				
ANR	1279639	RelationalExpression	r -> q . y < q -> y		1279479	0		<			
ANR	1279640	MemberAccess	r -> q . y		1279479	0					
ANR	1279641	PtrMemberAccess	r -> q		1279479	0					
ANR	1279642	Identifier	r		1279479	0					
ANR	1279643	Identifier	q		1279479	1					
ANR	1279644	Identifier	y		1279479	1					
ANR	1279645	PtrMemberAccess	q -> y		1279479	1					
ANR	1279646	Identifier	q		1279479	0					
ANR	1279647	Identifier	y		1279479	1					
ANR	1279648	ExpressionStatement	r -> q . y = q -> y	3631:16:137551:137564	1279479	1	True				
ANR	1279649	AssignmentExpression	r -> q . y = q -> y		1279479	0		=			
ANR	1279650	MemberAccess	r -> q . y		1279479	0					
ANR	1279651	PtrMemberAccess	r -> q		1279479	0					
ANR	1279652	Identifier	r		1279479	0					
ANR	1279653	Identifier	q		1279479	1					
ANR	1279654	Identifier	y		1279479	1					
ANR	1279655	PtrMemberAccess	q -> y		1279479	1					
ANR	1279656	Identifier	q		1279479	0					
ANR	1279657	Identifier	y		1279479	1					
ANR	1279658	ReturnType	static inline void		1279479	1					
ANR	1279659	Identifier	tensor_patch_bbox		1279479	2					
ANR	1279660	ParameterList	"gs_fixed_rect * r , const tensor_patch * p"		1279479	3					
ANR	1279661	Parameter	gs_fixed_rect * r	3614:18:137063:137078	1279479	0	True				
ANR	1279662	ParameterType	gs_fixed_rect *		1279479	0					
ANR	1279663	Identifier	r		1279479	1					
ANR	1279664	Parameter	const tensor_patch * p	3614:36:137081:137101	1279479	1	True				
ANR	1279665	ParameterType	const tensor_patch *		1279479	0					
ANR	1279666	Identifier	p		1279479	1					
ANR	1279667	CFGEntryNode	ENTRY		1279479		True				
ANR	1279668	CFGExitNode	EXIT		1279479		True				
ANR	1279669	Symbol	p -> pole		1279479						
ANR	1279670	Symbol	* p -> pole		1279479						
ANR	1279671	Symbol	i		1279479						
ANR	1279672	Symbol	j		1279479						
ANR	1279673	Symbol	r -> q . x		1279479						
ANR	1279674	Symbol	r -> q . y		1279479						
ANR	1279675	Symbol	r -> p		1279479						
ANR	1279676	Symbol	p		1279479						
ANR	1279677	Symbol	r -> q		1279479						
ANR	1279678	Symbol	* * * p		1279479						
ANR	1279679	Symbol	q		1279479						
ANR	1279680	Symbol	r		1279479						
ANR	1279681	Symbol	* * p -> pole		1279479						
ANR	1279682	Symbol	q -> y		1279479						
ANR	1279683	Symbol	* i		1279479						
ANR	1279684	Symbol	q -> x		1279479						
ANR	1279685	Symbol	p -> pole [ 0 ] [ 0 ] . x		1279479						
ANR	1279686	Symbol	r -> p . y		1279479						
ANR	1279687	Symbol	* p		1279479						
ANR	1279688	Symbol	* * p		1279479						
ANR	1279689	Symbol	r -> p . x		1279479						
ANR	1279690	Symbol	p -> pole [ 0 ] [ 0 ] . y		1279479						
ANR	1279691	Symbol	* q		1279479						
ANR	1279692	Symbol	* r		1279479						
ANR	1279693	Function	decompose_stripe	3636:0:137585:139688							
ANR	1279694	FunctionDef	"decompose_stripe (patch_fill_state_t * pfs , const tensor_patch * p , int ku)"		1279693	0					
ANR	1279695	CompoundStatement		3638:0:137669:139688	1279693	0					
ANR	1279696	IfStatement	if ( ku > 1 )		1279693	0					
ANR	1279697	Condition	ku > 1	3639:8:137679:137684	1279693	0	True				
ANR	1279698	RelationalExpression	ku > 1		1279693	0		>			
ANR	1279699	Identifier	ku		1279693	0					
ANR	1279700	PrimaryExpression	1		1279693	1					
ANR	1279701	CompoundStatement		7:8:134:164	1279693	1					
ANR	1279702	IdentifierDeclStatement	"tensor_patch s0 , s1 ;"	3640:8:137697:137716	1279693	0	True				
ANR	1279703	IdentifierDecl	s0		1279693	0					
ANR	1279704	IdentifierDeclType	tensor_patch		1279693	0					
ANR	1279705	Identifier	s0		1279693	1					
ANR	1279706	IdentifierDecl	s1		1279693	1					
ANR	1279707	IdentifierDeclType	tensor_patch		1279693	0					
ANR	1279708	Identifier	s1		1279693	1					
ANR	1279709	IdentifierDeclStatement	patch_color_t * c [ 2 ] ;	3641:8:137726:137745	1279693	1	True				
ANR	1279710	IdentifierDecl	* c [ 2 ]		1279693	0					
ANR	1279711	IdentifierDeclType	patch_color_t * [ 2 ]		1279693	0					
ANR	1279712	Identifier	c		1279693	1					
ANR	1279713	PrimaryExpression	2		1279693	2					
ANR	1279714	IdentifierDeclStatement	int code ;	3642:8:137755:137763	1279693	2	True				
ANR	1279715	IdentifierDecl	code		1279693	0					
ANR	1279716	IdentifierDeclType	int		1279693	0					
ANR	1279717	Identifier	code		1279693	1					
ANR	1279718	IdentifierDeclStatement	byte * color_stack_ptr ;	3643:8:137773:137794	1279693	3	True				
ANR	1279719	IdentifierDecl	* color_stack_ptr		1279693	0					
ANR	1279720	IdentifierDeclType	byte *		1279693	0					
ANR	1279721	Identifier	color_stack_ptr		1279693	1					
ANR	1279722	IdentifierDeclStatement	bool save_inside = pfs -> inside ;	3644:8:137804:137834	1279693	4	True				
ANR	1279723	IdentifierDecl	save_inside = pfs -> inside		1279693	0					
ANR	1279724	IdentifierDeclType	bool		1279693	0					
ANR	1279725	Identifier	save_inside		1279693	1					
ANR	1279726	AssignmentExpression	save_inside = pfs -> inside		1279693	2		=			
ANR	1279727	Identifier	save_inside		1279693	0					
ANR	1279728	PtrMemberAccess	pfs -> inside		1279693	1					
ANR	1279729	Identifier	pfs		1279693	0					
ANR	1279730	Identifier	inside		1279693	1					
ANR	1279731	IfStatement	if ( ! pfs -> inside )		1279693	5					
ANR	1279732	Condition	! pfs -> inside	3646:12:137849:137860	1279693	0	True				
ANR	1279733	UnaryOperationExpression	! pfs -> inside		1279693	0					
ANR	1279734	UnaryOperator	!		1279693	0					
ANR	1279735	PtrMemberAccess	pfs -> inside		1279693	1					
ANR	1279736	Identifier	pfs		1279693	0					
ANR	1279737	Identifier	inside		1279693	1					
ANR	1279738	CompoundStatement		10:12:207:226	1279693	1					
ANR	1279739	IdentifierDeclStatement	"gs_fixed_rect r , r1 ;"	3647:12:137877:137896	1279693	0	True				
ANR	1279740	IdentifierDecl	r		1279693	0					
ANR	1279741	IdentifierDeclType	gs_fixed_rect		1279693	0					
ANR	1279742	Identifier	r		1279693	1					
ANR	1279743	IdentifierDecl	r1		1279693	1					
ANR	1279744	IdentifierDeclType	gs_fixed_rect		1279693	0					
ANR	1279745	Identifier	r1		1279693	1					
ANR	1279746	ExpressionStatement	"tensor_patch_bbox ( & r , p )"	3649:12:137911:137935	1279693	1	True				
ANR	1279747	CallExpression	"tensor_patch_bbox ( & r , p )"		1279693	0					
ANR	1279748	Callee	tensor_patch_bbox		1279693	0					
ANR	1279749	Identifier	tensor_patch_bbox		1279693	0					
ANR	1279750	ArgumentList	& r		1279693	1					
ANR	1279751	Argument	& r		1279693	0					
ANR	1279752	UnaryOperationExpression	& r		1279693	0					
ANR	1279753	UnaryOperator	&		1279693	0					
ANR	1279754	Identifier	r		1279693	1					
ANR	1279755	Argument	p		1279693	1					
ANR	1279756	Identifier	p		1279693	0					
ANR	1279757	ExpressionStatement	r1 = r	3650:12:137949:137955	1279693	2	True				
ANR	1279758	AssignmentExpression	r1 = r		1279693	0		=			
ANR	1279759	Identifier	r1		1279693	0					
ANR	1279760	Identifier	r		1279693	1					
ANR	1279761	ExpressionStatement	"rect_intersect ( r , pfs -> rect )"	3651:12:137969:137997	1279693	3	True				
ANR	1279762	CallExpression	"rect_intersect ( r , pfs -> rect )"		1279693	0					
ANR	1279763	Callee	rect_intersect		1279693	0					
ANR	1279764	Identifier	rect_intersect		1279693	0					
ANR	1279765	ArgumentList	r		1279693	1					
ANR	1279766	Argument	r		1279693	0					
ANR	1279767	Identifier	r		1279693	0					
ANR	1279768	Argument	pfs -> rect		1279693	1					
ANR	1279769	PtrMemberAccess	pfs -> rect		1279693	0					
ANR	1279770	Identifier	pfs		1279693	0					
ANR	1279771	Identifier	rect		1279693	1					
ANR	1279772	IfStatement	if ( r . q . x <= r . p . x || r . q . y <= r . p . y )		1279693	4					
ANR	1279773	Condition	r . q . x <= r . p . x || r . q . y <= r . p . y	3652:16:138015:138046	1279693	0	True				
ANR	1279774	OrExpression	r . q . x <= r . p . x || r . q . y <= r . p . y		1279693	0		||			
ANR	1279775	RelationalExpression	r . q . x <= r . p . x		1279693	0		<=			
ANR	1279776	MemberAccess	r . q . x		1279693	0					
ANR	1279777	MemberAccess	r . q		1279693	0					
ANR	1279778	Identifier	r		1279693	0					
ANR	1279779	Identifier	q		1279693	1					
ANR	1279780	Identifier	x		1279693	1					
ANR	1279781	MemberAccess	r . p . x		1279693	1					
ANR	1279782	MemberAccess	r . p		1279693	0					
ANR	1279783	Identifier	r		1279693	0					
ANR	1279784	Identifier	p		1279693	1					
ANR	1279785	Identifier	x		1279693	1					
ANR	1279786	RelationalExpression	r . q . y <= r . p . y		1279693	1		<=			
ANR	1279787	MemberAccess	r . q . y		1279693	0					
ANR	1279788	MemberAccess	r . q		1279693	0					
ANR	1279789	Identifier	r		1279693	0					
ANR	1279790	Identifier	q		1279693	1					
ANR	1279791	Identifier	y		1279693	1					
ANR	1279792	MemberAccess	r . p . y		1279693	1					
ANR	1279793	MemberAccess	r . p		1279693	0					
ANR	1279794	Identifier	r		1279693	0					
ANR	1279795	Identifier	p		1279693	1					
ANR	1279796	Identifier	y		1279693	1					
ANR	1279797	ReturnStatement	return 0 ;	3653:16:138065:138073	1279693	1	True				
ANR	1279798	PrimaryExpression	0		1279693	0					
ANR	1279799	IfStatement	if ( r1 . p . x == r . p . x && r1 . p . y == r . p . y && r1 . q . x == r . q . x && r1 . q . y == r . q . y )		1279693	5					
ANR	1279800	Condition	r1 . p . x == r . p . x && r1 . p . y == r . p . y && r1 . q . x == r . q . x && r1 . q . y == r . q . y	3654:16:138091:138178	1279693	0	True				
ANR	1279801	AndExpression	r1 . p . x == r . p . x && r1 . p . y == r . p . y && r1 . q . x == r . q . x && r1 . q . y == r . q . y		1279693	0		&&			
ANR	1279802	EqualityExpression	r1 . p . x == r . p . x		1279693	0		==			
ANR	1279803	MemberAccess	r1 . p . x		1279693	0					
ANR	1279804	MemberAccess	r1 . p		1279693	0					
ANR	1279805	Identifier	r1		1279693	0					
ANR	1279806	Identifier	p		1279693	1					
ANR	1279807	Identifier	x		1279693	1					
ANR	1279808	MemberAccess	r . p . x		1279693	1					
ANR	1279809	MemberAccess	r . p		1279693	0					
ANR	1279810	Identifier	r		1279693	0					
ANR	1279811	Identifier	p		1279693	1					
ANR	1279812	Identifier	x		1279693	1					
ANR	1279813	AndExpression	r1 . p . y == r . p . y && r1 . q . x == r . q . x && r1 . q . y == r . q . y		1279693	1		&&			
ANR	1279814	EqualityExpression	r1 . p . y == r . p . y		1279693	0		==			
ANR	1279815	MemberAccess	r1 . p . y		1279693	0					
ANR	1279816	MemberAccess	r1 . p		1279693	0					
ANR	1279817	Identifier	r1		1279693	0					
ANR	1279818	Identifier	p		1279693	1					
ANR	1279819	Identifier	y		1279693	1					
ANR	1279820	MemberAccess	r . p . y		1279693	1					
ANR	1279821	MemberAccess	r . p		1279693	0					
ANR	1279822	Identifier	r		1279693	0					
ANR	1279823	Identifier	p		1279693	1					
ANR	1279824	Identifier	y		1279693	1					
ANR	1279825	AndExpression	r1 . q . x == r . q . x && r1 . q . y == r . q . y		1279693	1		&&			
ANR	1279826	EqualityExpression	r1 . q . x == r . q . x		1279693	0		==			
ANR	1279827	MemberAccess	r1 . q . x		1279693	0					
ANR	1279828	MemberAccess	r1 . q		1279693	0					
ANR	1279829	Identifier	r1		1279693	0					
ANR	1279830	Identifier	q		1279693	1					
ANR	1279831	Identifier	x		1279693	1					
ANR	1279832	MemberAccess	r . q . x		1279693	1					
ANR	1279833	MemberAccess	r . q		1279693	0					
ANR	1279834	Identifier	r		1279693	0					
ANR	1279835	Identifier	q		1279693	1					
ANR	1279836	Identifier	x		1279693	1					
ANR	1279837	EqualityExpression	r1 . q . y == r . q . y		1279693	1		==			
ANR	1279838	MemberAccess	r1 . q . y		1279693	0					
ANR	1279839	MemberAccess	r1 . q		1279693	0					
ANR	1279840	Identifier	r1		1279693	0					
ANR	1279841	Identifier	q		1279693	1					
ANR	1279842	Identifier	y		1279693	1					
ANR	1279843	MemberAccess	r . q . y		1279693	1					
ANR	1279844	MemberAccess	r . q		1279693	0					
ANR	1279845	Identifier	r		1279693	0					
ANR	1279846	Identifier	q		1279693	1					
ANR	1279847	Identifier	y		1279693	1					
ANR	1279848	ExpressionStatement	pfs -> inside = true	3656:16:138197:138215	1279693	1	True				
ANR	1279849	AssignmentExpression	pfs -> inside = true		1279693	0		=			
ANR	1279850	PtrMemberAccess	pfs -> inside		1279693	0					
ANR	1279851	Identifier	pfs		1279693	0					
ANR	1279852	Identifier	inside		1279693	1					
ANR	1279853	Identifier	true		1279693	1					
ANR	1279854	ExpressionStatement	"color_stack_ptr = reserve_colors_inline ( pfs , c , 2 )"	3658:8:138235:138285	1279693	6	True				
ANR	1279855	AssignmentExpression	"color_stack_ptr = reserve_colors_inline ( pfs , c , 2 )"		1279693	0		=			
ANR	1279856	Identifier	color_stack_ptr		1279693	0					
ANR	1279857	CallExpression	"reserve_colors_inline ( pfs , c , 2 )"		1279693	1					
ANR	1279858	Callee	reserve_colors_inline		1279693	0					
ANR	1279859	Identifier	reserve_colors_inline		1279693	0					
ANR	1279860	ArgumentList	pfs		1279693	1					
ANR	1279861	Argument	pfs		1279693	0					
ANR	1279862	Identifier	pfs		1279693	0					
ANR	1279863	Argument	c		1279693	1					
ANR	1279864	Identifier	c		1279693	0					
ANR	1279865	Argument	2		1279693	2					
ANR	1279866	PrimaryExpression	2		1279693	0					
ANR	1279867	IfStatement	if ( color_stack_ptr == NULL )		1279693	7					
ANR	1279868	Condition	color_stack_ptr == NULL	3659:11:138298:138320	1279693	0	True				
ANR	1279869	EqualityExpression	color_stack_ptr == NULL		1279693	0		==			
ANR	1279870	Identifier	color_stack_ptr		1279693	0					
ANR	1279871	Identifier	NULL		1279693	1					
ANR	1279872	ExpressionStatement	return_error ( gs_error_unregistered )	3660:12:138335:138370	1279693	1	True				
ANR	1279873	CallExpression	return_error ( gs_error_unregistered )		1279693	0					
ANR	1279874	Callee	return_error		1279693	0					
ANR	1279875	Identifier	return_error		1279693	0					
ANR	1279876	ArgumentList	gs_error_unregistered		1279693	1					
ANR	1279877	Argument	gs_error_unregistered		1279693	0					
ANR	1279878	Identifier	gs_error_unregistered		1279693	0					
ANR	1279879	ExpressionStatement	"split_stripe ( pfs , & s0 , & s1 , p , c )"	3661:8:138403:138436	1279693	8	True				
ANR	1279880	CallExpression	"split_stripe ( pfs , & s0 , & s1 , p , c )"		1279693	0					
ANR	1279881	Callee	split_stripe		1279693	0					
ANR	1279882	Identifier	split_stripe		1279693	0					
ANR	1279883	ArgumentList	pfs		1279693	1					
ANR	1279884	Argument	pfs		1279693	0					
ANR	1279885	Identifier	pfs		1279693	0					
ANR	1279886	Argument	& s0		1279693	1					
ANR	1279887	UnaryOperationExpression	& s0		1279693	0					
ANR	1279888	UnaryOperator	&		1279693	0					
ANR	1279889	Identifier	s0		1279693	1					
ANR	1279890	Argument	& s1		1279693	2					
ANR	1279891	UnaryOperationExpression	& s1		1279693	0					
ANR	1279892	UnaryOperator	&		1279693	0					
ANR	1279893	Identifier	s1		1279693	1					
ANR	1279894	Argument	p		1279693	3					
ANR	1279895	Identifier	p		1279693	0					
ANR	1279896	Argument	c		1279693	4					
ANR	1279897	Identifier	c		1279693	0					
ANR	1279898	ExpressionStatement	"code = decompose_stripe ( pfs , & s0 , ku / 2 )"	3662:8:138446:138487	1279693	9	True				
ANR	1279899	AssignmentExpression	"code = decompose_stripe ( pfs , & s0 , ku / 2 )"		1279693	0		=			
ANR	1279900	Identifier	code		1279693	0					
ANR	1279901	CallExpression	"decompose_stripe ( pfs , & s0 , ku / 2 )"		1279693	1					
ANR	1279902	Callee	decompose_stripe		1279693	0					
ANR	1279903	Identifier	decompose_stripe		1279693	0					
ANR	1279904	ArgumentList	pfs		1279693	1					
ANR	1279905	Argument	pfs		1279693	0					
ANR	1279906	Identifier	pfs		1279693	0					
ANR	1279907	Argument	& s0		1279693	1					
ANR	1279908	UnaryOperationExpression	& s0		1279693	0					
ANR	1279909	UnaryOperator	&		1279693	0					
ANR	1279910	Identifier	s0		1279693	1					
ANR	1279911	Argument	ku / 2		1279693	2					
ANR	1279912	MultiplicativeExpression	ku / 2		1279693	0		/			
ANR	1279913	Identifier	ku		1279693	0					
ANR	1279914	PrimaryExpression	2		1279693	1					
ANR	1279915	IfStatement	if ( code >= 0 )		1279693	10					
ANR	1279916	Condition	code >= 0	3663:12:138501:138509	1279693	0	True				
ANR	1279917	RelationalExpression	code >= 0		1279693	0		>=			
ANR	1279918	Identifier	code		1279693	0					
ANR	1279919	PrimaryExpression	0		1279693	1					
ANR	1279920	ExpressionStatement	"code = decompose_stripe ( pfs , & s1 , ku / 2 )"	3664:12:138524:138565	1279693	1	True				
ANR	1279921	AssignmentExpression	"code = decompose_stripe ( pfs , & s1 , ku / 2 )"		1279693	0		=			
ANR	1279922	Identifier	code		1279693	0					
ANR	1279923	CallExpression	"decompose_stripe ( pfs , & s1 , ku / 2 )"		1279693	1					
ANR	1279924	Callee	decompose_stripe		1279693	0					
ANR	1279925	Identifier	decompose_stripe		1279693	0					
ANR	1279926	ArgumentList	pfs		1279693	1					
ANR	1279927	Argument	pfs		1279693	0					
ANR	1279928	Identifier	pfs		1279693	0					
ANR	1279929	Argument	& s1		1279693	1					
ANR	1279930	UnaryOperationExpression	& s1		1279693	0					
ANR	1279931	UnaryOperator	&		1279693	0					
ANR	1279932	Identifier	s1		1279693	1					
ANR	1279933	Argument	ku / 2		1279693	2					
ANR	1279934	MultiplicativeExpression	ku / 2		1279693	0		/			
ANR	1279935	Identifier	ku		1279693	0					
ANR	1279936	PrimaryExpression	2		1279693	1					
ANR	1279937	ExpressionStatement	"release_colors_inline ( pfs , color_stack_ptr , 2 )"	3665:8:138575:138621	1279693	11	True				
ANR	1279938	CallExpression	"release_colors_inline ( pfs , color_stack_ptr , 2 )"		1279693	0					
ANR	1279939	Callee	release_colors_inline		1279693	0					
ANR	1279940	Identifier	release_colors_inline		1279693	0					
ANR	1279941	ArgumentList	pfs		1279693	1					
ANR	1279942	Argument	pfs		1279693	0					
ANR	1279943	Identifier	pfs		1279693	0					
ANR	1279944	Argument	color_stack_ptr		1279693	1					
ANR	1279945	Identifier	color_stack_ptr		1279693	0					
ANR	1279946	Argument	2		1279693	2					
ANR	1279947	PrimaryExpression	2		1279693	0					
ANR	1279948	ExpressionStatement	pfs -> inside = save_inside	3666:8:138631:138656	1279693	12	True				
ANR	1279949	AssignmentExpression	pfs -> inside = save_inside		1279693	0		=			
ANR	1279950	PtrMemberAccess	pfs -> inside		1279693	0					
ANR	1279951	Identifier	pfs		1279693	0					
ANR	1279952	Identifier	inside		1279693	1					
ANR	1279953	Identifier	save_inside		1279693	1					
ANR	1279954	ReturnStatement	return code ;	3667:8:138666:138677	1279693	13	True				
ANR	1279955	Identifier	code		1279693	0					
ANR	1279956	ElseStatement	else		1279693	0					
ANR	1279957	CompoundStatement		41:8:1282:1333	1279693	0					
ANR	1279958	IdentifierDeclStatement	quadrangle_patch q ;	3669:8:138700:138718	1279693	0	True				
ANR	1279959	IdentifierDecl	q		1279693	0					
ANR	1279960	IdentifierDeclType	quadrangle_patch		1279693	0					
ANR	1279961	Identifier	q		1279693	1					
ANR	1279962	Statement	shading_vertex_t	3670:8:138728:138743	1279693	1	True				
ANR	1279963	ExpressionStatement	qq [ 2 ] [ 2 ]	3670:25:138745:138753	1279693	2	True				
ANR	1279964	ArrayIndexing	qq [ 2 ] [ 2 ]		1279693	0					
ANR	1279965	ArrayIndexing	qq [ 2 ]		1279693	0					
ANR	1279966	Identifier	qq		1279693	0					
ANR	1279967	PrimaryExpression	2		1279693	1					
ANR	1279968	PrimaryExpression	2		1279693	1					
ANR	1279969	IdentifierDeclStatement	wedge_vertex_list_t l [ 4 ] ;	3671:8:138763:138787	1279693	3	True				
ANR	1279970	IdentifierDecl	l [ 4 ]		1279693	0					
ANR	1279971	IdentifierDeclType	wedge_vertex_list_t [ 4 ]		1279693	0					
ANR	1279972	Identifier	l		1279693	1					
ANR	1279973	PrimaryExpression	4		1279693	2					
ANR	1279974	IdentifierDeclStatement	int code ;	3672:8:138797:138805	1279693	4	True				
ANR	1279975	IdentifierDecl	code		1279693	0					
ANR	1279976	IdentifierDeclType	int		1279693	0					
ANR	1279977	Identifier	code		1279693	1					
ANR	1279978	ExpressionStatement	"init_wedge_vertex_list ( l , count_of ( l ) )"	3674:8:138816:138854	1279693	5	True				
ANR	1279979	CallExpression	"init_wedge_vertex_list ( l , count_of ( l ) )"		1279693	0					
ANR	1279980	Callee	init_wedge_vertex_list		1279693	0					
ANR	1279981	Identifier	init_wedge_vertex_list		1279693	0					
ANR	1279982	ArgumentList	l		1279693	1					
ANR	1279983	Argument	l		1279693	0					
ANR	1279984	Identifier	l		1279693	0					
ANR	1279985	Argument	count_of ( l )		1279693	1					
ANR	1279986	CallExpression	count_of ( l )		1279693	0					
ANR	1279987	Callee	count_of		1279693	0					
ANR	1279988	Identifier	count_of		1279693	0					
ANR	1279989	ArgumentList	l		1279693	1					
ANR	1279990	Argument	l		1279693	0					
ANR	1279991	Identifier	l		1279693	0					
ANR	1279992	ExpressionStatement	"make_quadrangle ( p , qq , l , & q )"	3675:8:138864:138893	1279693	6	True				
ANR	1279993	CallExpression	"make_quadrangle ( p , qq , l , & q )"		1279693	0					
ANR	1279994	Callee	make_quadrangle		1279693	0					
ANR	1279995	Identifier	make_quadrangle		1279693	0					
ANR	1279996	ArgumentList	p		1279693	1					
ANR	1279997	Argument	p		1279693	0					
ANR	1279998	Identifier	p		1279693	0					
ANR	1279999	Argument	qq		1279693	1					
ANR	1280000	Identifier	qq		1279693	0					
ANR	1280001	Argument	l		1279693	2					
ANR	1280002	Identifier	l		1279693	0					
ANR	1280003	Argument	& q		1279693	3					
ANR	1280004	UnaryOperationExpression	& q		1279693	0					
ANR	1280005	UnaryOperator	&		1279693	0					
ANR	1280006	Identifier	q		1279693	1					
ANR	1280007	Statement	if	3676:8:138903:138904	1279693	7	True				
ANR	1280008	Statement	SKIP_TEST	3676:11:138906:138914	1279693	8	True				
ANR	1280009	ExpressionStatement	dbg_quad_cnt ++	3677:12:138928:138942	1279693	9	True				
ANR	1280010	PostIncDecOperationExpression	dbg_quad_cnt ++		1279693	0					
ANR	1280011	Identifier	dbg_quad_cnt		1279693	0					
ANR	1280012	IncDec	++		1279693	1					
ANR	1280013	IdentifierDeclStatement	"endif code = fill_quadrangle ( pfs , & q , true ) ;"	3678:8:138952:139003	1279693	10	True				
ANR	1280014	IdentifierDecl	"code = fill_quadrangle ( pfs , & q , true )"		1279693	0					
ANR	1280015	IdentifierDeclType	endif		1279693	0					
ANR	1280016	Identifier	code		1279693	1					
ANR	1280017	AssignmentExpression	"code = fill_quadrangle ( pfs , & q , true )"		1279693	2		=			
ANR	1280018	Identifier	code		1279693	0					
ANR	1280019	CallExpression	"fill_quadrangle ( pfs , & q , true )"		1279693	1					
ANR	1280020	Callee	fill_quadrangle		1279693	0					
ANR	1280021	Identifier	fill_quadrangle		1279693	0					
ANR	1280022	ArgumentList	pfs		1279693	1					
ANR	1280023	Argument	pfs		1279693	0					
ANR	1280024	Identifier	pfs		1279693	0					
ANR	1280025	Argument	& q		1279693	1					
ANR	1280026	UnaryOperationExpression	& q		1279693	0					
ANR	1280027	UnaryOperator	&		1279693	0					
ANR	1280028	Identifier	q		1279693	1					
ANR	1280029	Argument	true		1279693	2					
ANR	1280030	Identifier	true		1279693	0					
ANR	1280031	IfStatement	if ( code < 0 )		1279693	11					
ANR	1280032	Condition	code < 0	3680:12:139017:139024	1279693	0	True				
ANR	1280033	RelationalExpression	code < 0		1279693	0		<			
ANR	1280034	Identifier	code		1279693	0					
ANR	1280035	PrimaryExpression	0		1279693	1					
ANR	1280036	ReturnStatement	return code ;	3681:12:139039:139050	1279693	1	True				
ANR	1280037	Identifier	code		1279693	0					
ANR	1280038	IfStatement	if ( LAZY_WEDGES )		1279693	12					
ANR	1280039	Condition	LAZY_WEDGES	3682:12:139064:139074	1279693	0	True				
ANR	1280040	Identifier	LAZY_WEDGES		1279693	0					
ANR	1280041	CompoundStatement		45:25:1407:1407	1279693	1					
ANR	1280042	ExpressionStatement	"code = terminate_wedge_vertex_list ( pfs , & l [ 0 ] , q . p [ 0 ] [ 0 ] -> c , q . p [ 0 ] [ 1 ] -> c )"	3683:12:139091:139165	1279693	0	True				
ANR	1280043	AssignmentExpression	"code = terminate_wedge_vertex_list ( pfs , & l [ 0 ] , q . p [ 0 ] [ 0 ] -> c , q . p [ 0 ] [ 1 ] -> c )"		1279693	0		=			
ANR	1280044	Identifier	code		1279693	0					
ANR	1280045	CallExpression	"terminate_wedge_vertex_list ( pfs , & l [ 0 ] , q . p [ 0 ] [ 0 ] -> c , q . p [ 0 ] [ 1 ] -> c )"		1279693	1					
ANR	1280046	Callee	terminate_wedge_vertex_list		1279693	0					
ANR	1280047	Identifier	terminate_wedge_vertex_list		1279693	0					
ANR	1280048	ArgumentList	pfs		1279693	1					
ANR	1280049	Argument	pfs		1279693	0					
ANR	1280050	Identifier	pfs		1279693	0					
ANR	1280051	Argument	& l [ 0 ]		1279693	1					
ANR	1280052	UnaryOperationExpression	& l [ 0 ]		1279693	0					
ANR	1280053	UnaryOperator	&		1279693	0					
ANR	1280054	ArrayIndexing	l [ 0 ]		1279693	1					
ANR	1280055	Identifier	l		1279693	0					
ANR	1280056	PrimaryExpression	0		1279693	1					
ANR	1280057	Argument	q . p [ 0 ] [ 0 ] -> c		1279693	2					
ANR	1280058	PtrMemberAccess	q . p [ 0 ] [ 0 ] -> c		1279693	0					
ANR	1280059	ArrayIndexing	q . p [ 0 ] [ 0 ]		1279693	0					
ANR	1280060	ArrayIndexing	q . p [ 0 ]		1279693	0					
ANR	1280061	MemberAccess	q . p		1279693	0					
ANR	1280062	Identifier	q		1279693	0					
ANR	1280063	Identifier	p		1279693	1					
ANR	1280064	PrimaryExpression	0		1279693	1					
ANR	1280065	PrimaryExpression	0		1279693	1					
ANR	1280066	Identifier	c		1279693	1					
ANR	1280067	Argument	q . p [ 0 ] [ 1 ] -> c		1279693	3					
ANR	1280068	PtrMemberAccess	q . p [ 0 ] [ 1 ] -> c		1279693	0					
ANR	1280069	ArrayIndexing	q . p [ 0 ] [ 1 ]		1279693	0					
ANR	1280070	ArrayIndexing	q . p [ 0 ]		1279693	0					
ANR	1280071	MemberAccess	q . p		1279693	0					
ANR	1280072	Identifier	q		1279693	0					
ANR	1280073	Identifier	p		1279693	1					
ANR	1280074	PrimaryExpression	0		1279693	1					
ANR	1280075	PrimaryExpression	1		1279693	1					
ANR	1280076	Identifier	c		1279693	1					
ANR	1280077	IfStatement	if ( code < 0 )		1279693	1					
ANR	1280078	Condition	code < 0	3684:16:139183:139190	1279693	0	True				
ANR	1280079	RelationalExpression	code < 0		1279693	0		<			
ANR	1280080	Identifier	code		1279693	0					
ANR	1280081	PrimaryExpression	0		1279693	1					
ANR	1280082	ReturnStatement	return code ;	3685:16:139209:139220	1279693	1	True				
ANR	1280083	Identifier	code		1279693	0					
ANR	1280084	ExpressionStatement	"code = terminate_wedge_vertex_list ( pfs , & l [ 1 ] , q . p [ 0 ] [ 1 ] -> c , q . p [ 1 ] [ 1 ] -> c )"	3686:12:139234:139308	1279693	2	True				
ANR	1280085	AssignmentExpression	"code = terminate_wedge_vertex_list ( pfs , & l [ 1 ] , q . p [ 0 ] [ 1 ] -> c , q . p [ 1 ] [ 1 ] -> c )"		1279693	0		=			
ANR	1280086	Identifier	code		1279693	0					
ANR	1280087	CallExpression	"terminate_wedge_vertex_list ( pfs , & l [ 1 ] , q . p [ 0 ] [ 1 ] -> c , q . p [ 1 ] [ 1 ] -> c )"		1279693	1					
ANR	1280088	Callee	terminate_wedge_vertex_list		1279693	0					
ANR	1280089	Identifier	terminate_wedge_vertex_list		1279693	0					
ANR	1280090	ArgumentList	pfs		1279693	1					
ANR	1280091	Argument	pfs		1279693	0					
ANR	1280092	Identifier	pfs		1279693	0					
ANR	1280093	Argument	& l [ 1 ]		1279693	1					
ANR	1280094	UnaryOperationExpression	& l [ 1 ]		1279693	0					
ANR	1280095	UnaryOperator	&		1279693	0					
ANR	1280096	ArrayIndexing	l [ 1 ]		1279693	1					
ANR	1280097	Identifier	l		1279693	0					
ANR	1280098	PrimaryExpression	1		1279693	1					
ANR	1280099	Argument	q . p [ 0 ] [ 1 ] -> c		1279693	2					
ANR	1280100	PtrMemberAccess	q . p [ 0 ] [ 1 ] -> c		1279693	0					
ANR	1280101	ArrayIndexing	q . p [ 0 ] [ 1 ]		1279693	0					
ANR	1280102	ArrayIndexing	q . p [ 0 ]		1279693	0					
ANR	1280103	MemberAccess	q . p		1279693	0					
ANR	1280104	Identifier	q		1279693	0					
ANR	1280105	Identifier	p		1279693	1					
ANR	1280106	PrimaryExpression	0		1279693	1					
ANR	1280107	PrimaryExpression	1		1279693	1					
ANR	1280108	Identifier	c		1279693	1					
ANR	1280109	Argument	q . p [ 1 ] [ 1 ] -> c		1279693	3					
ANR	1280110	PtrMemberAccess	q . p [ 1 ] [ 1 ] -> c		1279693	0					
ANR	1280111	ArrayIndexing	q . p [ 1 ] [ 1 ]		1279693	0					
ANR	1280112	ArrayIndexing	q . p [ 1 ]		1279693	0					
ANR	1280113	MemberAccess	q . p		1279693	0					
ANR	1280114	Identifier	q		1279693	0					
ANR	1280115	Identifier	p		1279693	1					
ANR	1280116	PrimaryExpression	1		1279693	1					
ANR	1280117	PrimaryExpression	1		1279693	1					
ANR	1280118	Identifier	c		1279693	1					
ANR	1280119	IfStatement	if ( code < 0 )		1279693	3					
ANR	1280120	Condition	code < 0	3687:16:139326:139333	1279693	0	True				
ANR	1280121	RelationalExpression	code < 0		1279693	0		<			
ANR	1280122	Identifier	code		1279693	0					
ANR	1280123	PrimaryExpression	0		1279693	1					
ANR	1280124	ReturnStatement	return code ;	3688:16:139352:139363	1279693	1	True				
ANR	1280125	Identifier	code		1279693	0					
ANR	1280126	ExpressionStatement	"code = terminate_wedge_vertex_list ( pfs , & l [ 2 ] , q . p [ 1 ] [ 1 ] -> c , q . p [ 1 ] [ 0 ] -> c )"	3689:12:139377:139451	1279693	4	True				
ANR	1280127	AssignmentExpression	"code = terminate_wedge_vertex_list ( pfs , & l [ 2 ] , q . p [ 1 ] [ 1 ] -> c , q . p [ 1 ] [ 0 ] -> c )"		1279693	0		=			
ANR	1280128	Identifier	code		1279693	0					
ANR	1280129	CallExpression	"terminate_wedge_vertex_list ( pfs , & l [ 2 ] , q . p [ 1 ] [ 1 ] -> c , q . p [ 1 ] [ 0 ] -> c )"		1279693	1					
ANR	1280130	Callee	terminate_wedge_vertex_list		1279693	0					
ANR	1280131	Identifier	terminate_wedge_vertex_list		1279693	0					
ANR	1280132	ArgumentList	pfs		1279693	1					
ANR	1280133	Argument	pfs		1279693	0					
ANR	1280134	Identifier	pfs		1279693	0					
ANR	1280135	Argument	& l [ 2 ]		1279693	1					
ANR	1280136	UnaryOperationExpression	& l [ 2 ]		1279693	0					
ANR	1280137	UnaryOperator	&		1279693	0					
ANR	1280138	ArrayIndexing	l [ 2 ]		1279693	1					
ANR	1280139	Identifier	l		1279693	0					
ANR	1280140	PrimaryExpression	2		1279693	1					
ANR	1280141	Argument	q . p [ 1 ] [ 1 ] -> c		1279693	2					
ANR	1280142	PtrMemberAccess	q . p [ 1 ] [ 1 ] -> c		1279693	0					
ANR	1280143	ArrayIndexing	q . p [ 1 ] [ 1 ]		1279693	0					
ANR	1280144	ArrayIndexing	q . p [ 1 ]		1279693	0					
ANR	1280145	MemberAccess	q . p		1279693	0					
ANR	1280146	Identifier	q		1279693	0					
ANR	1280147	Identifier	p		1279693	1					
ANR	1280148	PrimaryExpression	1		1279693	1					
ANR	1280149	PrimaryExpression	1		1279693	1					
ANR	1280150	Identifier	c		1279693	1					
ANR	1280151	Argument	q . p [ 1 ] [ 0 ] -> c		1279693	3					
ANR	1280152	PtrMemberAccess	q . p [ 1 ] [ 0 ] -> c		1279693	0					
ANR	1280153	ArrayIndexing	q . p [ 1 ] [ 0 ]		1279693	0					
ANR	1280154	ArrayIndexing	q . p [ 1 ]		1279693	0					
ANR	1280155	MemberAccess	q . p		1279693	0					
ANR	1280156	Identifier	q		1279693	0					
ANR	1280157	Identifier	p		1279693	1					
ANR	1280158	PrimaryExpression	1		1279693	1					
ANR	1280159	PrimaryExpression	0		1279693	1					
ANR	1280160	Identifier	c		1279693	1					
ANR	1280161	IfStatement	if ( code < 0 )		1279693	5					
ANR	1280162	Condition	code < 0	3690:16:139469:139476	1279693	0	True				
ANR	1280163	RelationalExpression	code < 0		1279693	0		<			
ANR	1280164	Identifier	code		1279693	0					
ANR	1280165	PrimaryExpression	0		1279693	1					
ANR	1280166	ReturnStatement	return code ;	3691:16:139495:139506	1279693	1	True				
ANR	1280167	Identifier	code		1279693	0					
ANR	1280168	ExpressionStatement	"code = terminate_wedge_vertex_list ( pfs , & l [ 3 ] , q . p [ 1 ] [ 0 ] -> c , q . p [ 0 ] [ 1 ] -> c )"	3692:12:139520:139594	1279693	6	True				
ANR	1280169	AssignmentExpression	"code = terminate_wedge_vertex_list ( pfs , & l [ 3 ] , q . p [ 1 ] [ 0 ] -> c , q . p [ 0 ] [ 1 ] -> c )"		1279693	0		=			
ANR	1280170	Identifier	code		1279693	0					
ANR	1280171	CallExpression	"terminate_wedge_vertex_list ( pfs , & l [ 3 ] , q . p [ 1 ] [ 0 ] -> c , q . p [ 0 ] [ 1 ] -> c )"		1279693	1					
ANR	1280172	Callee	terminate_wedge_vertex_list		1279693	0					
ANR	1280173	Identifier	terminate_wedge_vertex_list		1279693	0					
ANR	1280174	ArgumentList	pfs		1279693	1					
ANR	1280175	Argument	pfs		1279693	0					
ANR	1280176	Identifier	pfs		1279693	0					
ANR	1280177	Argument	& l [ 3 ]		1279693	1					
ANR	1280178	UnaryOperationExpression	& l [ 3 ]		1279693	0					
ANR	1280179	UnaryOperator	&		1279693	0					
ANR	1280180	ArrayIndexing	l [ 3 ]		1279693	1					
ANR	1280181	Identifier	l		1279693	0					
ANR	1280182	PrimaryExpression	3		1279693	1					
ANR	1280183	Argument	q . p [ 1 ] [ 0 ] -> c		1279693	2					
ANR	1280184	PtrMemberAccess	q . p [ 1 ] [ 0 ] -> c		1279693	0					
ANR	1280185	ArrayIndexing	q . p [ 1 ] [ 0 ]		1279693	0					
ANR	1280186	ArrayIndexing	q . p [ 1 ]		1279693	0					
ANR	1280187	MemberAccess	q . p		1279693	0					
ANR	1280188	Identifier	q		1279693	0					
ANR	1280189	Identifier	p		1279693	1					
ANR	1280190	PrimaryExpression	1		1279693	1					
ANR	1280191	PrimaryExpression	0		1279693	1					
ANR	1280192	Identifier	c		1279693	1					
ANR	1280193	Argument	q . p [ 0 ] [ 1 ] -> c		1279693	3					
ANR	1280194	PtrMemberAccess	q . p [ 0 ] [ 1 ] -> c		1279693	0					
ANR	1280195	ArrayIndexing	q . p [ 0 ] [ 1 ]		1279693	0					
ANR	1280196	ArrayIndexing	q . p [ 0 ]		1279693	0					
ANR	1280197	MemberAccess	q . p		1279693	0					
ANR	1280198	Identifier	q		1279693	0					
ANR	1280199	Identifier	p		1279693	1					
ANR	1280200	PrimaryExpression	0		1279693	1					
ANR	1280201	PrimaryExpression	1		1279693	1					
ANR	1280202	Identifier	c		1279693	1					
ANR	1280203	IfStatement	if ( code < 0 )		1279693	7					
ANR	1280204	Condition	code < 0	3693:16:139612:139619	1279693	0	True				
ANR	1280205	RelationalExpression	code < 0		1279693	0		<			
ANR	1280206	Identifier	code		1279693	0					
ANR	1280207	PrimaryExpression	0		1279693	1					
ANR	1280208	ReturnStatement	return code ;	3694:16:139638:139649	1279693	1	True				
ANR	1280209	Identifier	code		1279693	0					
ANR	1280210	ReturnStatement	return code ;	3696:8:139669:139680	1279693	13	True				
ANR	1280211	Identifier	code		1279693	0					
ANR	1280212	ReturnType	static int		1279693	1					
ANR	1280213	Identifier	decompose_stripe		1279693	2					
ANR	1280214	ParameterList	"patch_fill_state_t * pfs , const tensor_patch * p , int ku"		1279693	3					
ANR	1280215	Parameter	patch_fill_state_t * pfs	3637:17:137613:137635	1279693	0	True				
ANR	1280216	ParameterType	patch_fill_state_t *		1279693	0					
ANR	1280217	Identifier	pfs		1279693	1					
ANR	1280218	Parameter	const tensor_patch * p	3637:42:137638:137658	1279693	1	True				
ANR	1280219	ParameterType	const tensor_patch *		1279693	0					
ANR	1280220	Identifier	p		1279693	1					
ANR	1280221	Parameter	int ku	3637:65:137661:137666	1279693	2	True				
ANR	1280222	ParameterType	int		1279693	0					
ANR	1280223	Identifier	ku		1279693	1					
ANR	1280224	CFGEntryNode	ENTRY		1279693		True				
ANR	1280225	CFGExitNode	EXIT		1279693		True				
ANR	1280226	Symbol	r . q		1279693						
ANR	1280227	Symbol	r . p		1279693						
ANR	1280228	Symbol	q . p		1279693						
ANR	1280229	Symbol	r1 . q		1279693						
ANR	1280230	Symbol	r1 . p		1279693						
ANR	1280231	Symbol	s0		1279693						
ANR	1280232	Symbol	s1		1279693						
ANR	1280233	Symbol	qq		1279693						
ANR	1280234	Symbol	NULL		1279693						
ANR	1280235	Symbol	* pfs		1279693						
ANR	1280236	Symbol	save_inside		1279693						
ANR	1280237	Symbol	* * * q		1279693						
ANR	1280238	Symbol	q . p [ 0 ] [ 1 ] -> c		1279693						
ANR	1280239	Symbol	color_stack_ptr		1279693						
ANR	1280240	Symbol	q . p [ 1 ] [ 1 ] -> c		1279693						
ANR	1280241	Symbol	true		1279693						
ANR	1280242	Symbol	pfs		1279693						
ANR	1280243	Symbol	gs_error_unregistered		1279693						
ANR	1280244	Symbol	code		1279693						
ANR	1280245	Symbol	* qq		1279693						
ANR	1280246	Symbol	& s0		1279693						
ANR	1280247	Symbol	& s1		1279693						
ANR	1280248	Symbol	count_of		1279693						
ANR	1280249	Symbol	* * * q . p		1279693						
ANR	1280250	Symbol	r . q . x		1279693						
ANR	1280251	Symbol	reserve_colors_inline		1279693						
ANR	1280252	Symbol	r . q . y		1279693						
ANR	1280253	Symbol	decompose_stripe		1279693						
ANR	1280254	Symbol	* * q		1279693						
ANR	1280255	Symbol	LAZY_WEDGES		1279693						
ANR	1280256	Symbol	pfs -> rect		1279693						
ANR	1280257	Symbol	r1 . p . y		1279693						
ANR	1280258	Symbol	c		1279693						
ANR	1280259	Symbol	r . p . x		1279693						
ANR	1280260	Symbol	fill_quadrangle		1279693						
ANR	1280261	Symbol	pfs -> inside		1279693						
ANR	1280262	Symbol	r . p . y		1279693						
ANR	1280263	Symbol	r1 . p . x		1279693						
ANR	1280264	Symbol	terminate_wedge_vertex_list		1279693						
ANR	1280265	Symbol	ku		1279693						
ANR	1280266	Symbol	* * q . p		1279693						
ANR	1280267	Symbol	l		1279693						
ANR	1280268	Symbol	p		1279693						
ANR	1280269	Symbol	r1 . q . x		1279693						
ANR	1280270	Symbol	q . p [ 1 ] [ 0 ] -> c		1279693						
ANR	1280271	Symbol	r1 . q . y		1279693						
ANR	1280272	Symbol	q		1279693						
ANR	1280273	Symbol	* q . p		1279693						
ANR	1280274	Symbol	r		1279693						
ANR	1280275	Symbol	dbg_quad_cnt		1279693						
ANR	1280276	Symbol	q . p [ 0 ] [ 0 ] -> c		1279693						
ANR	1280277	Symbol	& q		1279693						
ANR	1280278	Symbol	& r		1279693						
ANR	1280279	Symbol	* q		1279693						
ANR	1280280	Symbol	r1		1279693						
ANR	1280281	Function	fill_stripe	3700:0:139691:141022							
ANR	1280282	FunctionDef	"fill_stripe (patch_fill_state_t * pfs , const tensor_patch * p)"		1280281	0					
ANR	1280283	CompoundStatement		3702:0:139762:141022	1280281	0					
ANR	1280284	IdentifierDeclStatement	"int ku [ 4 ] , kum , code ;"	3704:4:139838:139858	1280281	0	True				
ANR	1280285	IdentifierDecl	ku [ 4 ]		1280281	0					
ANR	1280286	IdentifierDeclType	int [ 4 ]		1280281	0					
ANR	1280287	Identifier	ku		1280281	1					
ANR	1280288	PrimaryExpression	4		1280281	2					
ANR	1280289	IdentifierDecl	kum		1280281	1					
ANR	1280290	IdentifierDeclType	int		1280281	0					
ANR	1280291	Identifier	kum		1280281	1					
ANR	1280292	IdentifierDecl	code		1280281	2					
ANR	1280293	IdentifierDeclType	int		1280281	0					
ANR	1280294	Identifier	code		1280281	1					
ANR	1280295	ExpressionStatement	"ku [ 0 ] = curve_samples ( pfs , p -> pole [ 0 ] , 1 , pfs -> fixed_flat )"	3712:4:140249:140307	1280281	1	True				
ANR	1280296	AssignmentExpression	"ku [ 0 ] = curve_samples ( pfs , p -> pole [ 0 ] , 1 , pfs -> fixed_flat )"		1280281	0		=			
ANR	1280297	ArrayIndexing	ku [ 0 ]		1280281	0					
ANR	1280298	Identifier	ku		1280281	0					
ANR	1280299	PrimaryExpression	0		1280281	1					
ANR	1280300	CallExpression	"curve_samples ( pfs , p -> pole [ 0 ] , 1 , pfs -> fixed_flat )"		1280281	1					
ANR	1280301	Callee	curve_samples		1280281	0					
ANR	1280302	Identifier	curve_samples		1280281	0					
ANR	1280303	ArgumentList	pfs		1280281	1					
ANR	1280304	Argument	pfs		1280281	0					
ANR	1280305	Identifier	pfs		1280281	0					
ANR	1280306	Argument	p -> pole [ 0 ]		1280281	1					
ANR	1280307	ArrayIndexing	p -> pole [ 0 ]		1280281	0					
ANR	1280308	PtrMemberAccess	p -> pole		1280281	0					
ANR	1280309	Identifier	p		1280281	0					
ANR	1280310	Identifier	pole		1280281	1					
ANR	1280311	PrimaryExpression	0		1280281	1					
ANR	1280312	Argument	1		1280281	2					
ANR	1280313	PrimaryExpression	1		1280281	0					
ANR	1280314	Argument	pfs -> fixed_flat		1280281	3					
ANR	1280315	PtrMemberAccess	pfs -> fixed_flat		1280281	0					
ANR	1280316	Identifier	pfs		1280281	0					
ANR	1280317	Identifier	fixed_flat		1280281	1					
ANR	1280318	ExpressionStatement	"ku [ 3 ] = curve_samples ( pfs , p -> pole [ 3 ] , 1 , pfs -> fixed_flat )"	3713:4:140313:140371	1280281	2	True				
ANR	1280319	AssignmentExpression	"ku [ 3 ] = curve_samples ( pfs , p -> pole [ 3 ] , 1 , pfs -> fixed_flat )"		1280281	0		=			
ANR	1280320	ArrayIndexing	ku [ 3 ]		1280281	0					
ANR	1280321	Identifier	ku		1280281	0					
ANR	1280322	PrimaryExpression	3		1280281	1					
ANR	1280323	CallExpression	"curve_samples ( pfs , p -> pole [ 3 ] , 1 , pfs -> fixed_flat )"		1280281	1					
ANR	1280324	Callee	curve_samples		1280281	0					
ANR	1280325	Identifier	curve_samples		1280281	0					
ANR	1280326	ArgumentList	pfs		1280281	1					
ANR	1280327	Argument	pfs		1280281	0					
ANR	1280328	Identifier	pfs		1280281	0					
ANR	1280329	Argument	p -> pole [ 3 ]		1280281	1					
ANR	1280330	ArrayIndexing	p -> pole [ 3 ]		1280281	0					
ANR	1280331	PtrMemberAccess	p -> pole		1280281	0					
ANR	1280332	Identifier	p		1280281	0					
ANR	1280333	Identifier	pole		1280281	1					
ANR	1280334	PrimaryExpression	3		1280281	1					
ANR	1280335	Argument	1		1280281	2					
ANR	1280336	PrimaryExpression	1		1280281	0					
ANR	1280337	Argument	pfs -> fixed_flat		1280281	3					
ANR	1280338	PtrMemberAccess	pfs -> fixed_flat		1280281	0					
ANR	1280339	Identifier	pfs		1280281	0					
ANR	1280340	Identifier	fixed_flat		1280281	1					
ANR	1280341	ExpressionStatement	"kum = max ( ku [ 0 ] , ku [ 3 ] )"	3714:4:140377:140400	1280281	3	True				
ANR	1280342	AssignmentExpression	"kum = max ( ku [ 0 ] , ku [ 3 ] )"		1280281	0		=			
ANR	1280343	Identifier	kum		1280281	0					
ANR	1280344	CallExpression	"max ( ku [ 0 ] , ku [ 3 ] )"		1280281	1					
ANR	1280345	Callee	max		1280281	0					
ANR	1280346	Identifier	max		1280281	0					
ANR	1280347	ArgumentList	ku [ 0 ]		1280281	1					
ANR	1280348	Argument	ku [ 0 ]		1280281	0					
ANR	1280349	ArrayIndexing	ku [ 0 ]		1280281	0					
ANR	1280350	Identifier	ku		1280281	0					
ANR	1280351	PrimaryExpression	0		1280281	1					
ANR	1280352	Argument	ku [ 3 ]		1280281	1					
ANR	1280353	ArrayIndexing	ku [ 3 ]		1280281	0					
ANR	1280354	Identifier	ku		1280281	0					
ANR	1280355	PrimaryExpression	3		1280281	1					
ANR	1280356	ExpressionStatement	"code = fill_wedges ( pfs , ku [ 0 ] , kum , p -> pole [ 0 ] , 1 , p -> c [ 0 ] [ 0 ] , p -> c [ 0 ] [ 1 ] , inpatch_wedge )"	3715:4:140406:140495	1280281	4	True				
ANR	1280357	AssignmentExpression	"code = fill_wedges ( pfs , ku [ 0 ] , kum , p -> pole [ 0 ] , 1 , p -> c [ 0 ] [ 0 ] , p -> c [ 0 ] [ 1 ] , inpatch_wedge )"		1280281	0		=			
ANR	1280358	Identifier	code		1280281	0					
ANR	1280359	CallExpression	"fill_wedges ( pfs , ku [ 0 ] , kum , p -> pole [ 0 ] , 1 , p -> c [ 0 ] [ 0 ] , p -> c [ 0 ] [ 1 ] , inpatch_wedge )"		1280281	1					
ANR	1280360	Callee	fill_wedges		1280281	0					
ANR	1280361	Identifier	fill_wedges		1280281	0					
ANR	1280362	ArgumentList	pfs		1280281	1					
ANR	1280363	Argument	pfs		1280281	0					
ANR	1280364	Identifier	pfs		1280281	0					
ANR	1280365	Argument	ku [ 0 ]		1280281	1					
ANR	1280366	ArrayIndexing	ku [ 0 ]		1280281	0					
ANR	1280367	Identifier	ku		1280281	0					
ANR	1280368	PrimaryExpression	0		1280281	1					
ANR	1280369	Argument	kum		1280281	2					
ANR	1280370	Identifier	kum		1280281	0					
ANR	1280371	Argument	p -> pole [ 0 ]		1280281	3					
ANR	1280372	ArrayIndexing	p -> pole [ 0 ]		1280281	0					
ANR	1280373	PtrMemberAccess	p -> pole		1280281	0					
ANR	1280374	Identifier	p		1280281	0					
ANR	1280375	Identifier	pole		1280281	1					
ANR	1280376	PrimaryExpression	0		1280281	1					
ANR	1280377	Argument	1		1280281	4					
ANR	1280378	PrimaryExpression	1		1280281	0					
ANR	1280379	Argument	p -> c [ 0 ] [ 0 ]		1280281	5					
ANR	1280380	ArrayIndexing	p -> c [ 0 ] [ 0 ]		1280281	0					
ANR	1280381	ArrayIndexing	p -> c [ 0 ]		1280281	0					
ANR	1280382	PtrMemberAccess	p -> c		1280281	0					
ANR	1280383	Identifier	p		1280281	0					
ANR	1280384	Identifier	c		1280281	1					
ANR	1280385	PrimaryExpression	0		1280281	1					
ANR	1280386	PrimaryExpression	0		1280281	1					
ANR	1280387	Argument	p -> c [ 0 ] [ 1 ]		1280281	6					
ANR	1280388	ArrayIndexing	p -> c [ 0 ] [ 1 ]		1280281	0					
ANR	1280389	ArrayIndexing	p -> c [ 0 ]		1280281	0					
ANR	1280390	PtrMemberAccess	p -> c		1280281	0					
ANR	1280391	Identifier	p		1280281	0					
ANR	1280392	Identifier	c		1280281	1					
ANR	1280393	PrimaryExpression	0		1280281	1					
ANR	1280394	PrimaryExpression	1		1280281	1					
ANR	1280395	Argument	inpatch_wedge		1280281	7					
ANR	1280396	Identifier	inpatch_wedge		1280281	0					
ANR	1280397	IfStatement	if ( code < 0 )		1280281	5					
ANR	1280398	Condition	code < 0	3716:8:140505:140512	1280281	0	True				
ANR	1280399	RelationalExpression	code < 0		1280281	0		<			
ANR	1280400	Identifier	code		1280281	0					
ANR	1280401	PrimaryExpression	0		1280281	1					
ANR	1280402	ReturnStatement	return code ;	3717:8:140523:140534	1280281	1	True				
ANR	1280403	Identifier	code		1280281	0					
ANR	1280404	IfStatement	if ( INTERPATCH_PADDING )		1280281	6					
ANR	1280405	Condition	INTERPATCH_PADDING	3718:8:140544:140561	1280281	0	True				
ANR	1280406	Identifier	INTERPATCH_PADDING		1280281	0					
ANR	1280407	CompoundStatement		17:28:801:801	1280281	1					
ANR	1280408	ExpressionStatement	"code = mesh_padding ( pfs , & p -> pole [ 0 ] [ 0 ] , & p -> pole [ 3 ] [ 0 ] , p -> c [ 0 ] [ 0 ] , p -> c [ 1 ] [ 0 ] )"	3719:8:140574:140654	1280281	0	True				
ANR	1280409	AssignmentExpression	"code = mesh_padding ( pfs , & p -> pole [ 0 ] [ 0 ] , & p -> pole [ 3 ] [ 0 ] , p -> c [ 0 ] [ 0 ] , p -> c [ 1 ] [ 0 ] )"		1280281	0		=			
ANR	1280410	Identifier	code		1280281	0					
ANR	1280411	CallExpression	"mesh_padding ( pfs , & p -> pole [ 0 ] [ 0 ] , & p -> pole [ 3 ] [ 0 ] , p -> c [ 0 ] [ 0 ] , p -> c [ 1 ] [ 0 ] )"		1280281	1					
ANR	1280412	Callee	mesh_padding		1280281	0					
ANR	1280413	Identifier	mesh_padding		1280281	0					
ANR	1280414	ArgumentList	pfs		1280281	1					
ANR	1280415	Argument	pfs		1280281	0					
ANR	1280416	Identifier	pfs		1280281	0					
ANR	1280417	Argument	& p -> pole [ 0 ] [ 0 ]		1280281	1					
ANR	1280418	UnaryOperationExpression	& p -> pole [ 0 ] [ 0 ]		1280281	0					
ANR	1280419	UnaryOperator	&		1280281	0					
ANR	1280420	ArrayIndexing	p -> pole [ 0 ] [ 0 ]		1280281	1					
ANR	1280421	ArrayIndexing	p -> pole [ 0 ]		1280281	0					
ANR	1280422	PtrMemberAccess	p -> pole		1280281	0					
ANR	1280423	Identifier	p		1280281	0					
ANR	1280424	Identifier	pole		1280281	1					
ANR	1280425	PrimaryExpression	0		1280281	1					
ANR	1280426	PrimaryExpression	0		1280281	1					
ANR	1280427	Argument	& p -> pole [ 3 ] [ 0 ]		1280281	2					
ANR	1280428	UnaryOperationExpression	& p -> pole [ 3 ] [ 0 ]		1280281	0					
ANR	1280429	UnaryOperator	&		1280281	0					
ANR	1280430	ArrayIndexing	p -> pole [ 3 ] [ 0 ]		1280281	1					
ANR	1280431	ArrayIndexing	p -> pole [ 3 ]		1280281	0					
ANR	1280432	PtrMemberAccess	p -> pole		1280281	0					
ANR	1280433	Identifier	p		1280281	0					
ANR	1280434	Identifier	pole		1280281	1					
ANR	1280435	PrimaryExpression	3		1280281	1					
ANR	1280436	PrimaryExpression	0		1280281	1					
ANR	1280437	Argument	p -> c [ 0 ] [ 0 ]		1280281	3					
ANR	1280438	ArrayIndexing	p -> c [ 0 ] [ 0 ]		1280281	0					
ANR	1280439	ArrayIndexing	p -> c [ 0 ]		1280281	0					
ANR	1280440	PtrMemberAccess	p -> c		1280281	0					
ANR	1280441	Identifier	p		1280281	0					
ANR	1280442	Identifier	c		1280281	1					
ANR	1280443	PrimaryExpression	0		1280281	1					
ANR	1280444	PrimaryExpression	0		1280281	1					
ANR	1280445	Argument	p -> c [ 1 ] [ 0 ]		1280281	4					
ANR	1280446	ArrayIndexing	p -> c [ 1 ] [ 0 ]		1280281	0					
ANR	1280447	ArrayIndexing	p -> c [ 1 ]		1280281	0					
ANR	1280448	PtrMemberAccess	p -> c		1280281	0					
ANR	1280449	Identifier	p		1280281	0					
ANR	1280450	Identifier	c		1280281	1					
ANR	1280451	PrimaryExpression	1		1280281	1					
ANR	1280452	PrimaryExpression	0		1280281	1					
ANR	1280453	IfStatement	if ( code < 0 )		1280281	1					
ANR	1280454	Condition	code < 0	3720:12:140668:140675	1280281	0	True				
ANR	1280455	RelationalExpression	code < 0		1280281	0		<			
ANR	1280456	Identifier	code		1280281	0					
ANR	1280457	PrimaryExpression	0		1280281	1					
ANR	1280458	ReturnStatement	return code ;	3721:12:140690:140701	1280281	1	True				
ANR	1280459	Identifier	code		1280281	0					
ANR	1280460	ExpressionStatement	"code = mesh_padding ( pfs , & p -> pole [ 0 ] [ 3 ] , & p -> pole [ 3 ] [ 3 ] , p -> c [ 0 ] [ 1 ] , p -> c [ 1 ] [ 1 ] )"	3722:8:140711:140791	1280281	2	True				
ANR	1280461	AssignmentExpression	"code = mesh_padding ( pfs , & p -> pole [ 0 ] [ 3 ] , & p -> pole [ 3 ] [ 3 ] , p -> c [ 0 ] [ 1 ] , p -> c [ 1 ] [ 1 ] )"		1280281	0		=			
ANR	1280462	Identifier	code		1280281	0					
ANR	1280463	CallExpression	"mesh_padding ( pfs , & p -> pole [ 0 ] [ 3 ] , & p -> pole [ 3 ] [ 3 ] , p -> c [ 0 ] [ 1 ] , p -> c [ 1 ] [ 1 ] )"		1280281	1					
ANR	1280464	Callee	mesh_padding		1280281	0					
ANR	1280465	Identifier	mesh_padding		1280281	0					
ANR	1280466	ArgumentList	pfs		1280281	1					
ANR	1280467	Argument	pfs		1280281	0					
ANR	1280468	Identifier	pfs		1280281	0					
ANR	1280469	Argument	& p -> pole [ 0 ] [ 3 ]		1280281	1					
ANR	1280470	UnaryOperationExpression	& p -> pole [ 0 ] [ 3 ]		1280281	0					
ANR	1280471	UnaryOperator	&		1280281	0					
ANR	1280472	ArrayIndexing	p -> pole [ 0 ] [ 3 ]		1280281	1					
ANR	1280473	ArrayIndexing	p -> pole [ 0 ]		1280281	0					
ANR	1280474	PtrMemberAccess	p -> pole		1280281	0					
ANR	1280475	Identifier	p		1280281	0					
ANR	1280476	Identifier	pole		1280281	1					
ANR	1280477	PrimaryExpression	0		1280281	1					
ANR	1280478	PrimaryExpression	3		1280281	1					
ANR	1280479	Argument	& p -> pole [ 3 ] [ 3 ]		1280281	2					
ANR	1280480	UnaryOperationExpression	& p -> pole [ 3 ] [ 3 ]		1280281	0					
ANR	1280481	UnaryOperator	&		1280281	0					
ANR	1280482	ArrayIndexing	p -> pole [ 3 ] [ 3 ]		1280281	1					
ANR	1280483	ArrayIndexing	p -> pole [ 3 ]		1280281	0					
ANR	1280484	PtrMemberAccess	p -> pole		1280281	0					
ANR	1280485	Identifier	p		1280281	0					
ANR	1280486	Identifier	pole		1280281	1					
ANR	1280487	PrimaryExpression	3		1280281	1					
ANR	1280488	PrimaryExpression	3		1280281	1					
ANR	1280489	Argument	p -> c [ 0 ] [ 1 ]		1280281	3					
ANR	1280490	ArrayIndexing	p -> c [ 0 ] [ 1 ]		1280281	0					
ANR	1280491	ArrayIndexing	p -> c [ 0 ]		1280281	0					
ANR	1280492	PtrMemberAccess	p -> c		1280281	0					
ANR	1280493	Identifier	p		1280281	0					
ANR	1280494	Identifier	c		1280281	1					
ANR	1280495	PrimaryExpression	0		1280281	1					
ANR	1280496	PrimaryExpression	1		1280281	1					
ANR	1280497	Argument	p -> c [ 1 ] [ 1 ]		1280281	4					
ANR	1280498	ArrayIndexing	p -> c [ 1 ] [ 1 ]		1280281	0					
ANR	1280499	ArrayIndexing	p -> c [ 1 ]		1280281	0					
ANR	1280500	PtrMemberAccess	p -> c		1280281	0					
ANR	1280501	Identifier	p		1280281	0					
ANR	1280502	Identifier	c		1280281	1					
ANR	1280503	PrimaryExpression	1		1280281	1					
ANR	1280504	PrimaryExpression	1		1280281	1					
ANR	1280505	IfStatement	if ( code < 0 )		1280281	3					
ANR	1280506	Condition	code < 0	3723:12:140805:140812	1280281	0	True				
ANR	1280507	RelationalExpression	code < 0		1280281	0		<			
ANR	1280508	Identifier	code		1280281	0					
ANR	1280509	PrimaryExpression	0		1280281	1					
ANR	1280510	ReturnStatement	return code ;	3724:12:140827:140838	1280281	1	True				
ANR	1280511	Identifier	code		1280281	0					
ANR	1280512	ExpressionStatement	"code = decompose_stripe ( pfs , p , kum )"	3726:4:140850:140886	1280281	7	True				
ANR	1280513	AssignmentExpression	"code = decompose_stripe ( pfs , p , kum )"		1280281	0		=			
ANR	1280514	Identifier	code		1280281	0					
ANR	1280515	CallExpression	"decompose_stripe ( pfs , p , kum )"		1280281	1					
ANR	1280516	Callee	decompose_stripe		1280281	0					
ANR	1280517	Identifier	decompose_stripe		1280281	0					
ANR	1280518	ArgumentList	pfs		1280281	1					
ANR	1280519	Argument	pfs		1280281	0					
ANR	1280520	Identifier	pfs		1280281	0					
ANR	1280521	Argument	p		1280281	1					
ANR	1280522	Identifier	p		1280281	0					
ANR	1280523	Argument	kum		1280281	2					
ANR	1280524	Identifier	kum		1280281	0					
ANR	1280525	IfStatement	if ( code < 0 )		1280281	8					
ANR	1280526	Condition	code < 0	3727:8:140896:140903	1280281	0	True				
ANR	1280527	RelationalExpression	code < 0		1280281	0		<			
ANR	1280528	Identifier	code		1280281	0					
ANR	1280529	PrimaryExpression	0		1280281	1					
ANR	1280530	ReturnStatement	return code ;	3728:8:140914:140925	1280281	1	True				
ANR	1280531	Identifier	code		1280281	0					
ANR	1280532	ReturnStatement	"return fill_wedges ( pfs , ku [ 3 ] , kum , p -> pole [ 3 ] , 1 , p -> c [ 1 ] [ 0 ] , p -> c [ 1 ] [ 1 ] , inpatch_wedge ) ;"	3729:4:140931:141020	1280281	9	True				
ANR	1280533	CallExpression	"fill_wedges ( pfs , ku [ 3 ] , kum , p -> pole [ 3 ] , 1 , p -> c [ 1 ] [ 0 ] , p -> c [ 1 ] [ 1 ] , inpatch_wedge )"		1280281	0					
ANR	1280534	Callee	fill_wedges		1280281	0					
ANR	1280535	Identifier	fill_wedges		1280281	0					
ANR	1280536	ArgumentList	pfs		1280281	1					
ANR	1280537	Argument	pfs		1280281	0					
ANR	1280538	Identifier	pfs		1280281	0					
ANR	1280539	Argument	ku [ 3 ]		1280281	1					
ANR	1280540	ArrayIndexing	ku [ 3 ]		1280281	0					
ANR	1280541	Identifier	ku		1280281	0					
ANR	1280542	PrimaryExpression	3		1280281	1					
ANR	1280543	Argument	kum		1280281	2					
ANR	1280544	Identifier	kum		1280281	0					
ANR	1280545	Argument	p -> pole [ 3 ]		1280281	3					
ANR	1280546	ArrayIndexing	p -> pole [ 3 ]		1280281	0					
ANR	1280547	PtrMemberAccess	p -> pole		1280281	0					
ANR	1280548	Identifier	p		1280281	0					
ANR	1280549	Identifier	pole		1280281	1					
ANR	1280550	PrimaryExpression	3		1280281	1					
ANR	1280551	Argument	1		1280281	4					
ANR	1280552	PrimaryExpression	1		1280281	0					
ANR	1280553	Argument	p -> c [ 1 ] [ 0 ]		1280281	5					
ANR	1280554	ArrayIndexing	p -> c [ 1 ] [ 0 ]		1280281	0					
ANR	1280555	ArrayIndexing	p -> c [ 1 ]		1280281	0					
ANR	1280556	PtrMemberAccess	p -> c		1280281	0					
ANR	1280557	Identifier	p		1280281	0					
ANR	1280558	Identifier	c		1280281	1					
ANR	1280559	PrimaryExpression	1		1280281	1					
ANR	1280560	PrimaryExpression	0		1280281	1					
ANR	1280561	Argument	p -> c [ 1 ] [ 1 ]		1280281	6					
ANR	1280562	ArrayIndexing	p -> c [ 1 ] [ 1 ]		1280281	0					
ANR	1280563	ArrayIndexing	p -> c [ 1 ]		1280281	0					
ANR	1280564	PtrMemberAccess	p -> c		1280281	0					
ANR	1280565	Identifier	p		1280281	0					
ANR	1280566	Identifier	c		1280281	1					
ANR	1280567	PrimaryExpression	1		1280281	1					
ANR	1280568	PrimaryExpression	1		1280281	1					
ANR	1280569	Argument	inpatch_wedge		1280281	7					
ANR	1280570	Identifier	inpatch_wedge		1280281	0					
ANR	1280571	ReturnType	static int		1280281	1					
ANR	1280572	Identifier	fill_stripe		1280281	2					
ANR	1280573	ParameterList	"patch_fill_state_t * pfs , const tensor_patch * p"		1280281	3					
ANR	1280574	Parameter	patch_fill_state_t * pfs	3701:12:139714:139736	1280281	0	True				
ANR	1280575	ParameterType	patch_fill_state_t *		1280281	0					
ANR	1280576	Identifier	pfs		1280281	1					
ANR	1280577	Parameter	const tensor_patch * p	3701:37:139739:139759	1280281	1	True				
ANR	1280578	ParameterType	const tensor_patch *		1280281	0					
ANR	1280579	Identifier	p		1280281	1					
ANR	1280580	CFGEntryNode	ENTRY		1280281		True				
ANR	1280581	CFGExitNode	EXIT		1280281		True				
ANR	1280582	Symbol	fill_wedges		1280281						
ANR	1280583	Symbol	kum		1280281						
ANR	1280584	Symbol	code		1280281						
ANR	1280585	Symbol	p -> pole		1280281						
ANR	1280586	Symbol	max		1280281						
ANR	1280587	Symbol	* p -> pole		1280281						
ANR	1280588	Symbol	* pfs		1280281						
ANR	1280589	Symbol	ku		1280281						
ANR	1280590	Symbol	p		1280281						
ANR	1280591	Symbol	* * * p		1280281						
ANR	1280592	Symbol	* ku		1280281						
ANR	1280593	Symbol	p -> c		1280281						
ANR	1280594	Symbol	pfs -> fixed_flat		1280281						
ANR	1280595	Symbol	inpatch_wedge		1280281						
ANR	1280596	Symbol	* p -> c		1280281						
ANR	1280597	Symbol	mesh_padding		1280281						
ANR	1280598	Symbol	decompose_stripe		1280281						
ANR	1280599	Symbol	* p		1280281						
ANR	1280600	Symbol	* * p -> c		1280281						
ANR	1280601	Symbol	* * p		1280281						
ANR	1280602	Symbol	pfs		1280281						
ANR	1280603	Symbol	curve_samples		1280281						
ANR	1280604	Symbol	INTERPATCH_PADDING		1280281						
ANR	1280605	Function	neqs	3732:0:141025:141201							
ANR	1280606	FunctionDef	"neqs (int * a , int b)"		1280605	0					
ANR	1280607	CompoundStatement		3733:0:141064:141201	1280605	0					
ANR	1280608	IfStatement	if ( * a * b < 0 )		1280605	0					
ANR	1280609	Condition	* a * b < 0	3734:8:141121:141130	1280605	0	True				
ANR	1280610	RelationalExpression	* a * b < 0		1280605	0		<			
ANR	1280611	MultiplicativeExpression	* a * b		1280605	0		*			
ANR	1280612	UnaryOperationExpression	* a		1280605	0					
ANR	1280613	UnaryOperator	*		1280605	0					
ANR	1280614	Identifier	a		1280605	1					
ANR	1280615	Identifier	b		1280605	1					
ANR	1280616	PrimaryExpression	0		1280605	1					
ANR	1280617	ReturnStatement	return true ;	3735:8:141141:141152	1280605	1	True				
ANR	1280618	Identifier	true		1280605	0					
ANR	1280619	IfStatement	if ( ! * a )		1280605	1					
ANR	1280620	Condition	! * a	3736:8:141162:141164	1280605	0	True				
ANR	1280621	UnaryOperationExpression	! * a		1280605	0					
ANR	1280622	UnaryOperator	!		1280605	0					
ANR	1280623	UnaryOperationExpression	* a		1280605	1					
ANR	1280624	UnaryOperator	*		1280605	0					
ANR	1280625	Identifier	a		1280605	1					
ANR	1280626	ExpressionStatement	* a = b	3737:8:141175:141181	1280605	1	True				
ANR	1280627	AssignmentExpression	* a = b		1280605	0		=			
ANR	1280628	UnaryOperationExpression	* a		1280605	0					
ANR	1280629	UnaryOperator	*		1280605	0					
ANR	1280630	Identifier	a		1280605	1					
ANR	1280631	Identifier	b		1280605	1					
ANR	1280632	ReturnStatement	return false ;	3738:4:141187:141199	1280605	2	True				
ANR	1280633	Identifier	false		1280605	0					
ANR	1280634	ReturnType	static inline bool		1280605	1					
ANR	1280635	Identifier	neqs		1280605	2					
ANR	1280636	ParameterList	"int * a , int b"		1280605	3					
ANR	1280637	Parameter	int * a	3732:24:141049:141054	1280605	0	True				
ANR	1280638	ParameterType	int *		1280605	0					
ANR	1280639	Identifier	a		1280605	1					
ANR	1280640	Parameter	int b	3732:32:141057:141061	1280605	1	True				
ANR	1280641	ParameterType	int		1280605	0					
ANR	1280642	Identifier	b		1280605	1					
ANR	1280643	CFGEntryNode	ENTRY		1280605		True				
ANR	1280644	CFGExitNode	EXIT		1280605		True				
ANR	1280645	Symbol	a		1280605						
ANR	1280646	Symbol	b		1280605						
ANR	1280647	Symbol	true		1280605						
ANR	1280648	Symbol	false		1280605						
ANR	1280649	Symbol	* a		1280605						
ANR	1280650	Function	vector_pair_orientation	3741:0:141204:141530							
ANR	1280651	FunctionDef	"vector_pair_orientation (const gs_fixed_point * p0 , const gs_fixed_point * p1 , const gs_fixed_point * p2)"		1280650	0					
ANR	1280652	CompoundStatement		3743:0:141324:141530	1280650	0					
ANR	1280653	IdentifierDeclStatement	"fixed dx1 = p1 -> x - p0 -> x , dy1 = p1 -> y - p0 -> y ;"	3743:3:141328:141374	1280650	0	True				
ANR	1280654	IdentifierDecl	dx1 = p1 -> x - p0 -> x		1280650	0					
ANR	1280655	IdentifierDeclType	fixed		1280650	0					
ANR	1280656	Identifier	dx1		1280650	1					
ANR	1280657	AssignmentExpression	dx1 = p1 -> x - p0 -> x		1280650	2		=			
ANR	1280658	Identifier	dx1		1280650	0					
ANR	1280659	AdditiveExpression	p1 -> x - p0 -> x		1280650	1		-			
ANR	1280660	PtrMemberAccess	p1 -> x		1280650	0					
ANR	1280661	Identifier	p1		1280650	0					
ANR	1280662	Identifier	x		1280650	1					
ANR	1280663	PtrMemberAccess	p0 -> x		1280650	1					
ANR	1280664	Identifier	p0		1280650	0					
ANR	1280665	Identifier	x		1280650	1					
ANR	1280666	IdentifierDecl	dy1 = p1 -> y - p0 -> y		1280650	1					
ANR	1280667	IdentifierDeclType	fixed		1280650	0					
ANR	1280668	Identifier	dy1		1280650	1					
ANR	1280669	AssignmentExpression	dy1 = p1 -> y - p0 -> y		1280650	2		=			
ANR	1280670	Identifier	dy1		1280650	0					
ANR	1280671	AdditiveExpression	p1 -> y - p0 -> y		1280650	1		-			
ANR	1280672	PtrMemberAccess	p1 -> y		1280650	0					
ANR	1280673	Identifier	p1		1280650	0					
ANR	1280674	Identifier	y		1280650	1					
ANR	1280675	PtrMemberAccess	p0 -> y		1280650	1					
ANR	1280676	Identifier	p0		1280650	0					
ANR	1280677	Identifier	y		1280650	1					
ANR	1280678	IdentifierDeclStatement	"fixed dx2 = p2 -> x - p0 -> x , dy2 = p2 -> y - p0 -> y ;"	3744:4:141380:141426	1280650	1	True				
ANR	1280679	IdentifierDecl	dx2 = p2 -> x - p0 -> x		1280650	0					
ANR	1280680	IdentifierDeclType	fixed		1280650	0					
ANR	1280681	Identifier	dx2		1280650	1					
ANR	1280682	AssignmentExpression	dx2 = p2 -> x - p0 -> x		1280650	2		=			
ANR	1280683	Identifier	dx2		1280650	0					
ANR	1280684	AdditiveExpression	p2 -> x - p0 -> x		1280650	1		-			
ANR	1280685	PtrMemberAccess	p2 -> x		1280650	0					
ANR	1280686	Identifier	p2		1280650	0					
ANR	1280687	Identifier	x		1280650	1					
ANR	1280688	PtrMemberAccess	p0 -> x		1280650	1					
ANR	1280689	Identifier	p0		1280650	0					
ANR	1280690	Identifier	x		1280650	1					
ANR	1280691	IdentifierDecl	dy2 = p2 -> y - p0 -> y		1280650	1					
ANR	1280692	IdentifierDeclType	fixed		1280650	0					
ANR	1280693	Identifier	dy2		1280650	1					
ANR	1280694	AssignmentExpression	dy2 = p2 -> y - p0 -> y		1280650	2		=			
ANR	1280695	Identifier	dy2		1280650	0					
ANR	1280696	AdditiveExpression	p2 -> y - p0 -> y		1280650	1		-			
ANR	1280697	PtrMemberAccess	p2 -> y		1280650	0					
ANR	1280698	Identifier	p2		1280650	0					
ANR	1280699	Identifier	y		1280650	1					
ANR	1280700	PtrMemberAccess	p0 -> y		1280650	1					
ANR	1280701	Identifier	p0		1280650	0					
ANR	1280702	Identifier	y		1280650	1					
ANR	1280703	IdentifierDeclStatement	int64_t vp = ( int64_t ) dx1 * dy2 - ( int64_t ) dy1 * dx2 ;	3745:4:141432:141484	1280650	2	True				
ANR	1280704	IdentifierDecl	vp = ( int64_t ) dx1 * dy2 - ( int64_t ) dy1 * dx2		1280650	0					
ANR	1280705	IdentifierDeclType	int64_t		1280650	0					
ANR	1280706	Identifier	vp		1280650	1					
ANR	1280707	AssignmentExpression	vp = ( int64_t ) dx1 * dy2 - ( int64_t ) dy1 * dx2		1280650	2		=			
ANR	1280708	Identifier	vp		1280650	0					
ANR	1280709	AdditiveExpression	( int64_t ) dx1 * dy2 - ( int64_t ) dy1 * dx2		1280650	1		-			
ANR	1280710	MultiplicativeExpression	( int64_t ) dx1 * dy2		1280650	0		*			
ANR	1280711	CastExpression	( int64_t ) dx1		1280650	0					
ANR	1280712	CastTarget	int64_t		1280650	0					
ANR	1280713	Identifier	dx1		1280650	1					
ANR	1280714	Identifier	dy2		1280650	1					
ANR	1280715	MultiplicativeExpression	( int64_t ) dy1 * dx2		1280650	1		*			
ANR	1280716	CastExpression	( int64_t ) dy1		1280650	0					
ANR	1280717	CastTarget	int64_t		1280650	0					
ANR	1280718	Identifier	dy1		1280650	1					
ANR	1280719	Identifier	dx2		1280650	1					
ANR	1280720	ReturnStatement	return ( vp > 0 ? 1 : vp < 0 ? - 1 : 0 ) ;	3747:4:141491:141528	1280650	3	True				
ANR	1280721	ConditionalExpression	vp > 0 ? 1 : vp < 0 ? - 1 : 0		1280650	0					
ANR	1280722	Condition	vp > 0		1280650	0					
ANR	1280723	RelationalExpression	vp > 0		1280650	0		>			
ANR	1280724	Identifier	vp		1280650	0					
ANR	1280725	PrimaryExpression	0		1280650	1					
ANR	1280726	PrimaryExpression	1		1280650	1					
ANR	1280727	ConditionalExpression	vp < 0 ? - 1 : 0		1280650	2					
ANR	1280728	Condition	vp < 0		1280650	0					
ANR	1280729	RelationalExpression	vp < 0		1280650	0		<			
ANR	1280730	Identifier	vp		1280650	0					
ANR	1280731	PrimaryExpression	0		1280650	1					
ANR	1280732	UnaryOperationExpression	- 1		1280650	1					
ANR	1280733	UnaryOperator	-		1280650	0					
ANR	1280734	PrimaryExpression	1		1280650	1					
ANR	1280735	PrimaryExpression	0		1280650	2					
ANR	1280736	ReturnType	static inline int		1280650	1					
ANR	1280737	Identifier	vector_pair_orientation		1280650	2					
ANR	1280738	ParameterList	"const gs_fixed_point * p0 , const gs_fixed_point * p1 , const gs_fixed_point * p2"		1280650	3					
ANR	1280739	Parameter	const gs_fixed_point * p0	3742:24:141246:141269	1280650	0	True				
ANR	1280740	ParameterType	const gs_fixed_point *		1280650	0					
ANR	1280741	Identifier	p0		1280650	1					
ANR	1280742	Parameter	const gs_fixed_point * p1	3742:50:141272:141295	1280650	1	True				
ANR	1280743	ParameterType	const gs_fixed_point *		1280650	0					
ANR	1280744	Identifier	p1		1280650	1					
ANR	1280745	Parameter	const gs_fixed_point * p2	3742:76:141298:141321	1280650	2	True				
ANR	1280746	ParameterType	const gs_fixed_point *		1280650	0					
ANR	1280747	Identifier	p2		1280650	1					
ANR	1280748	CFGEntryNode	ENTRY		1280650		True				
ANR	1280749	CFGExitNode	EXIT		1280650		True				
ANR	1280750	Symbol	p0		1280650						
ANR	1280751	Symbol	p1		1280650						
ANR	1280752	Symbol	p2		1280650						
ANR	1280753	Symbol	p2 -> x		1280650						
ANR	1280754	Symbol	* p1		1280650						
ANR	1280755	Symbol	* p0		1280650						
ANR	1280756	Symbol	p1 -> y		1280650						
ANR	1280757	Symbol	p1 -> x		1280650						
ANR	1280758	Symbol	* p2		1280650						
ANR	1280759	Symbol	p2 -> y		1280650						
ANR	1280760	Symbol	p0 -> y		1280650						
ANR	1280761	Symbol	p0 -> x		1280650						
ANR	1280762	Symbol	vp		1280650						
ANR	1280763	Symbol	dx1		1280650						
ANR	1280764	Symbol	dy2		1280650						
ANR	1280765	Symbol	dy1		1280650						
ANR	1280766	Symbol	dx2		1280650						
ANR	1280767	Function	is_x_bended	3750:0:141533:143430							
ANR	1280768	FunctionDef	is_x_bended (const tensor_patch * p)		1280767	0					
ANR	1280769	CompoundStatement		3752:0:141587:143430	1280767	0					
ANR	1280770	IdentifierDeclStatement	"int sign = vector_pair_orientation ( & p -> pole [ 0 ] [ 0 ] , & p -> pole [ 0 ] [ 1 ] , & p -> pole [ 1 ] [ 0 ] ) ;"	3753:4:141593:141675	1280767	0	True				
ANR	1280771	IdentifierDecl	"sign = vector_pair_orientation ( & p -> pole [ 0 ] [ 0 ] , & p -> pole [ 0 ] [ 1 ] , & p -> pole [ 1 ] [ 0 ] )"		1280767	0					
ANR	1280772	IdentifierDeclType	int		1280767	0					
ANR	1280773	Identifier	sign		1280767	1					
ANR	1280774	AssignmentExpression	"sign = vector_pair_orientation ( & p -> pole [ 0 ] [ 0 ] , & p -> pole [ 0 ] [ 1 ] , & p -> pole [ 1 ] [ 0 ] )"		1280767	2		=			
ANR	1280775	Identifier	sign		1280767	0					
ANR	1280776	CallExpression	"vector_pair_orientation ( & p -> pole [ 0 ] [ 0 ] , & p -> pole [ 0 ] [ 1 ] , & p -> pole [ 1 ] [ 0 ] )"		1280767	1					
ANR	1280777	Callee	vector_pair_orientation		1280767	0					
ANR	1280778	Identifier	vector_pair_orientation		1280767	0					
ANR	1280779	ArgumentList	& p -> pole [ 0 ] [ 0 ]		1280767	1					
ANR	1280780	Argument	& p -> pole [ 0 ] [ 0 ]		1280767	0					
ANR	1280781	UnaryOperationExpression	& p -> pole [ 0 ] [ 0 ]		1280767	0					
ANR	1280782	UnaryOperator	&		1280767	0					
ANR	1280783	ArrayIndexing	p -> pole [ 0 ] [ 0 ]		1280767	1					
ANR	1280784	ArrayIndexing	p -> pole [ 0 ]		1280767	0					
ANR	1280785	PtrMemberAccess	p -> pole		1280767	0					
ANR	1280786	Identifier	p		1280767	0					
ANR	1280787	Identifier	pole		1280767	1					
ANR	1280788	PrimaryExpression	0		1280767	1					
ANR	1280789	PrimaryExpression	0		1280767	1					
ANR	1280790	Argument	& p -> pole [ 0 ] [ 1 ]		1280767	1					
ANR	1280791	UnaryOperationExpression	& p -> pole [ 0 ] [ 1 ]		1280767	0					
ANR	1280792	UnaryOperator	&		1280767	0					
ANR	1280793	ArrayIndexing	p -> pole [ 0 ] [ 1 ]		1280767	1					
ANR	1280794	ArrayIndexing	p -> pole [ 0 ]		1280767	0					
ANR	1280795	PtrMemberAccess	p -> pole		1280767	0					
ANR	1280796	Identifier	p		1280767	0					
ANR	1280797	Identifier	pole		1280767	1					
ANR	1280798	PrimaryExpression	0		1280767	1					
ANR	1280799	PrimaryExpression	1		1280767	1					
ANR	1280800	Argument	& p -> pole [ 1 ] [ 0 ]		1280767	2					
ANR	1280801	UnaryOperationExpression	& p -> pole [ 1 ] [ 0 ]		1280767	0					
ANR	1280802	UnaryOperator	&		1280767	0					
ANR	1280803	ArrayIndexing	p -> pole [ 1 ] [ 0 ]		1280767	1					
ANR	1280804	ArrayIndexing	p -> pole [ 1 ]		1280767	0					
ANR	1280805	PtrMemberAccess	p -> pole		1280767	0					
ANR	1280806	Identifier	p		1280767	0					
ANR	1280807	Identifier	pole		1280767	1					
ANR	1280808	PrimaryExpression	1		1280767	1					
ANR	1280809	PrimaryExpression	0		1280767	1					
ANR	1280810	IfStatement	"if ( neqs ( & sign , vector_pair_orientation ( & p -> pole [ 0 ] [ 1 ] , & p -> pole [ 0 ] [ 2 ] , & p -> pole [ 1 ] [ 1 ] ) ) )"		1280767	1					
ANR	1280811	Condition	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 0 ] [ 1 ] , & p -> pole [ 0 ] [ 2 ] , & p -> pole [ 1 ] [ 1 ] ) )"	3755:8:141686:141769	1280767	0	True				
ANR	1280812	CallExpression	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 0 ] [ 1 ] , & p -> pole [ 0 ] [ 2 ] , & p -> pole [ 1 ] [ 1 ] ) )"		1280767	0					
ANR	1280813	Callee	neqs		1280767	0					
ANR	1280814	Identifier	neqs		1280767	0					
ANR	1280815	ArgumentList	& sign		1280767	1					
ANR	1280816	Argument	& sign		1280767	0					
ANR	1280817	UnaryOperationExpression	& sign		1280767	0					
ANR	1280818	UnaryOperator	&		1280767	0					
ANR	1280819	Identifier	sign		1280767	1					
ANR	1280820	Argument	"vector_pair_orientation ( & p -> pole [ 0 ] [ 1 ] , & p -> pole [ 0 ] [ 2 ] , & p -> pole [ 1 ] [ 1 ] )"		1280767	1					
ANR	1280821	CallExpression	"vector_pair_orientation ( & p -> pole [ 0 ] [ 1 ] , & p -> pole [ 0 ] [ 2 ] , & p -> pole [ 1 ] [ 1 ] )"		1280767	0					
ANR	1280822	Callee	vector_pair_orientation		1280767	0					
ANR	1280823	Identifier	vector_pair_orientation		1280767	0					
ANR	1280824	ArgumentList	& p -> pole [ 0 ] [ 1 ]		1280767	1					
ANR	1280825	Argument	& p -> pole [ 0 ] [ 1 ]		1280767	0					
ANR	1280826	UnaryOperationExpression	& p -> pole [ 0 ] [ 1 ]		1280767	0					
ANR	1280827	UnaryOperator	&		1280767	0					
ANR	1280828	ArrayIndexing	p -> pole [ 0 ] [ 1 ]		1280767	1					
ANR	1280829	ArrayIndexing	p -> pole [ 0 ]		1280767	0					
ANR	1280830	PtrMemberAccess	p -> pole		1280767	0					
ANR	1280831	Identifier	p		1280767	0					
ANR	1280832	Identifier	pole		1280767	1					
ANR	1280833	PrimaryExpression	0		1280767	1					
ANR	1280834	PrimaryExpression	1		1280767	1					
ANR	1280835	Argument	& p -> pole [ 0 ] [ 2 ]		1280767	1					
ANR	1280836	UnaryOperationExpression	& p -> pole [ 0 ] [ 2 ]		1280767	0					
ANR	1280837	UnaryOperator	&		1280767	0					
ANR	1280838	ArrayIndexing	p -> pole [ 0 ] [ 2 ]		1280767	1					
ANR	1280839	ArrayIndexing	p -> pole [ 0 ]		1280767	0					
ANR	1280840	PtrMemberAccess	p -> pole		1280767	0					
ANR	1280841	Identifier	p		1280767	0					
ANR	1280842	Identifier	pole		1280767	1					
ANR	1280843	PrimaryExpression	0		1280767	1					
ANR	1280844	PrimaryExpression	2		1280767	1					
ANR	1280845	Argument	& p -> pole [ 1 ] [ 1 ]		1280767	2					
ANR	1280846	UnaryOperationExpression	& p -> pole [ 1 ] [ 1 ]		1280767	0					
ANR	1280847	UnaryOperator	&		1280767	0					
ANR	1280848	ArrayIndexing	p -> pole [ 1 ] [ 1 ]		1280767	1					
ANR	1280849	ArrayIndexing	p -> pole [ 1 ]		1280767	0					
ANR	1280850	PtrMemberAccess	p -> pole		1280767	0					
ANR	1280851	Identifier	p		1280767	0					
ANR	1280852	Identifier	pole		1280767	1					
ANR	1280853	PrimaryExpression	1		1280767	1					
ANR	1280854	PrimaryExpression	1		1280767	1					
ANR	1280855	ReturnStatement	return true ;	3756:8:141780:141791	1280767	1	True				
ANR	1280856	Identifier	true		1280767	0					
ANR	1280857	IfStatement	"if ( neqs ( & sign , vector_pair_orientation ( & p -> pole [ 0 ] [ 2 ] , & p -> pole [ 0 ] [ 3 ] , & p -> pole [ 1 ] [ 2 ] ) ) )"		1280767	2					
ANR	1280858	Condition	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 0 ] [ 2 ] , & p -> pole [ 0 ] [ 3 ] , & p -> pole [ 1 ] [ 2 ] ) )"	3757:8:141801:141884	1280767	0	True				
ANR	1280859	CallExpression	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 0 ] [ 2 ] , & p -> pole [ 0 ] [ 3 ] , & p -> pole [ 1 ] [ 2 ] ) )"		1280767	0					
ANR	1280860	Callee	neqs		1280767	0					
ANR	1280861	Identifier	neqs		1280767	0					
ANR	1280862	ArgumentList	& sign		1280767	1					
ANR	1280863	Argument	& sign		1280767	0					
ANR	1280864	UnaryOperationExpression	& sign		1280767	0					
ANR	1280865	UnaryOperator	&		1280767	0					
ANR	1280866	Identifier	sign		1280767	1					
ANR	1280867	Argument	"vector_pair_orientation ( & p -> pole [ 0 ] [ 2 ] , & p -> pole [ 0 ] [ 3 ] , & p -> pole [ 1 ] [ 2 ] )"		1280767	1					
ANR	1280868	CallExpression	"vector_pair_orientation ( & p -> pole [ 0 ] [ 2 ] , & p -> pole [ 0 ] [ 3 ] , & p -> pole [ 1 ] [ 2 ] )"		1280767	0					
ANR	1280869	Callee	vector_pair_orientation		1280767	0					
ANR	1280870	Identifier	vector_pair_orientation		1280767	0					
ANR	1280871	ArgumentList	& p -> pole [ 0 ] [ 2 ]		1280767	1					
ANR	1280872	Argument	& p -> pole [ 0 ] [ 2 ]		1280767	0					
ANR	1280873	UnaryOperationExpression	& p -> pole [ 0 ] [ 2 ]		1280767	0					
ANR	1280874	UnaryOperator	&		1280767	0					
ANR	1280875	ArrayIndexing	p -> pole [ 0 ] [ 2 ]		1280767	1					
ANR	1280876	ArrayIndexing	p -> pole [ 0 ]		1280767	0					
ANR	1280877	PtrMemberAccess	p -> pole		1280767	0					
ANR	1280878	Identifier	p		1280767	0					
ANR	1280879	Identifier	pole		1280767	1					
ANR	1280880	PrimaryExpression	0		1280767	1					
ANR	1280881	PrimaryExpression	2		1280767	1					
ANR	1280882	Argument	& p -> pole [ 0 ] [ 3 ]		1280767	1					
ANR	1280883	UnaryOperationExpression	& p -> pole [ 0 ] [ 3 ]		1280767	0					
ANR	1280884	UnaryOperator	&		1280767	0					
ANR	1280885	ArrayIndexing	p -> pole [ 0 ] [ 3 ]		1280767	1					
ANR	1280886	ArrayIndexing	p -> pole [ 0 ]		1280767	0					
ANR	1280887	PtrMemberAccess	p -> pole		1280767	0					
ANR	1280888	Identifier	p		1280767	0					
ANR	1280889	Identifier	pole		1280767	1					
ANR	1280890	PrimaryExpression	0		1280767	1					
ANR	1280891	PrimaryExpression	3		1280767	1					
ANR	1280892	Argument	& p -> pole [ 1 ] [ 2 ]		1280767	2					
ANR	1280893	UnaryOperationExpression	& p -> pole [ 1 ] [ 2 ]		1280767	0					
ANR	1280894	UnaryOperator	&		1280767	0					
ANR	1280895	ArrayIndexing	p -> pole [ 1 ] [ 2 ]		1280767	1					
ANR	1280896	ArrayIndexing	p -> pole [ 1 ]		1280767	0					
ANR	1280897	PtrMemberAccess	p -> pole		1280767	0					
ANR	1280898	Identifier	p		1280767	0					
ANR	1280899	Identifier	pole		1280767	1					
ANR	1280900	PrimaryExpression	1		1280767	1					
ANR	1280901	PrimaryExpression	2		1280767	1					
ANR	1280902	ReturnStatement	return true ;	3758:8:141895:141906	1280767	1	True				
ANR	1280903	Identifier	true		1280767	0					
ANR	1280904	IfStatement	"if ( neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 0 ] [ 3 ] , & p -> pole [ 0 ] [ 2 ] , & p -> pole [ 1 ] [ 3 ] ) ) )"		1280767	3					
ANR	1280905	Condition	"neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 0 ] [ 3 ] , & p -> pole [ 0 ] [ 2 ] , & p -> pole [ 1 ] [ 3 ] ) )"	3759:8:141916:142000	1280767	0	True				
ANR	1280906	CallExpression	"neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 0 ] [ 3 ] , & p -> pole [ 0 ] [ 2 ] , & p -> pole [ 1 ] [ 3 ] ) )"		1280767	0					
ANR	1280907	Callee	neqs		1280767	0					
ANR	1280908	Identifier	neqs		1280767	0					
ANR	1280909	ArgumentList	& sign		1280767	1					
ANR	1280910	Argument	& sign		1280767	0					
ANR	1280911	UnaryOperationExpression	& sign		1280767	0					
ANR	1280912	UnaryOperator	&		1280767	0					
ANR	1280913	Identifier	sign		1280767	1					
ANR	1280914	Argument	"- vector_pair_orientation ( & p -> pole [ 0 ] [ 3 ] , & p -> pole [ 0 ] [ 2 ] , & p -> pole [ 1 ] [ 3 ] )"		1280767	1					
ANR	1280915	UnaryOperationExpression	"- vector_pair_orientation ( & p -> pole [ 0 ] [ 3 ] , & p -> pole [ 0 ] [ 2 ] , & p -> pole [ 1 ] [ 3 ] )"		1280767	0					
ANR	1280916	UnaryOperator	-		1280767	0					
ANR	1280917	CallExpression	"vector_pair_orientation ( & p -> pole [ 0 ] [ 3 ] , & p -> pole [ 0 ] [ 2 ] , & p -> pole [ 1 ] [ 3 ] )"		1280767	1					
ANR	1280918	Callee	vector_pair_orientation		1280767	0					
ANR	1280919	Identifier	vector_pair_orientation		1280767	0					
ANR	1280920	ArgumentList	& p -> pole [ 0 ] [ 3 ]		1280767	1					
ANR	1280921	Argument	& p -> pole [ 0 ] [ 3 ]		1280767	0					
ANR	1280922	UnaryOperationExpression	& p -> pole [ 0 ] [ 3 ]		1280767	0					
ANR	1280923	UnaryOperator	&		1280767	0					
ANR	1280924	ArrayIndexing	p -> pole [ 0 ] [ 3 ]		1280767	1					
ANR	1280925	ArrayIndexing	p -> pole [ 0 ]		1280767	0					
ANR	1280926	PtrMemberAccess	p -> pole		1280767	0					
ANR	1280927	Identifier	p		1280767	0					
ANR	1280928	Identifier	pole		1280767	1					
ANR	1280929	PrimaryExpression	0		1280767	1					
ANR	1280930	PrimaryExpression	3		1280767	1					
ANR	1280931	Argument	& p -> pole [ 0 ] [ 2 ]		1280767	1					
ANR	1280932	UnaryOperationExpression	& p -> pole [ 0 ] [ 2 ]		1280767	0					
ANR	1280933	UnaryOperator	&		1280767	0					
ANR	1280934	ArrayIndexing	p -> pole [ 0 ] [ 2 ]		1280767	1					
ANR	1280935	ArrayIndexing	p -> pole [ 0 ]		1280767	0					
ANR	1280936	PtrMemberAccess	p -> pole		1280767	0					
ANR	1280937	Identifier	p		1280767	0					
ANR	1280938	Identifier	pole		1280767	1					
ANR	1280939	PrimaryExpression	0		1280767	1					
ANR	1280940	PrimaryExpression	2		1280767	1					
ANR	1280941	Argument	& p -> pole [ 1 ] [ 3 ]		1280767	2					
ANR	1280942	UnaryOperationExpression	& p -> pole [ 1 ] [ 3 ]		1280767	0					
ANR	1280943	UnaryOperator	&		1280767	0					
ANR	1280944	ArrayIndexing	p -> pole [ 1 ] [ 3 ]		1280767	1					
ANR	1280945	ArrayIndexing	p -> pole [ 1 ]		1280767	0					
ANR	1280946	PtrMemberAccess	p -> pole		1280767	0					
ANR	1280947	Identifier	p		1280767	0					
ANR	1280948	Identifier	pole		1280767	1					
ANR	1280949	PrimaryExpression	1		1280767	1					
ANR	1280950	PrimaryExpression	3		1280767	1					
ANR	1280951	ReturnStatement	return true ;	3760:8:142011:142022	1280767	1	True				
ANR	1280952	Identifier	true		1280767	0					
ANR	1280953	IfStatement	"if ( neqs ( & sign , vector_pair_orientation ( & p -> pole [ 1 ] [ 1 ] , & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 2 ] [ 1 ] ) ) )"		1280767	4					
ANR	1280954	Condition	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 1 ] [ 1 ] , & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 2 ] [ 1 ] ) )"	3762:8:142033:142116	1280767	0	True				
ANR	1280955	CallExpression	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 1 ] [ 1 ] , & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 2 ] [ 1 ] ) )"		1280767	0					
ANR	1280956	Callee	neqs		1280767	0					
ANR	1280957	Identifier	neqs		1280767	0					
ANR	1280958	ArgumentList	& sign		1280767	1					
ANR	1280959	Argument	& sign		1280767	0					
ANR	1280960	UnaryOperationExpression	& sign		1280767	0					
ANR	1280961	UnaryOperator	&		1280767	0					
ANR	1280962	Identifier	sign		1280767	1					
ANR	1280963	Argument	"vector_pair_orientation ( & p -> pole [ 1 ] [ 1 ] , & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 2 ] [ 1 ] )"		1280767	1					
ANR	1280964	CallExpression	"vector_pair_orientation ( & p -> pole [ 1 ] [ 1 ] , & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 2 ] [ 1 ] )"		1280767	0					
ANR	1280965	Callee	vector_pair_orientation		1280767	0					
ANR	1280966	Identifier	vector_pair_orientation		1280767	0					
ANR	1280967	ArgumentList	& p -> pole [ 1 ] [ 1 ]		1280767	1					
ANR	1280968	Argument	& p -> pole [ 1 ] [ 1 ]		1280767	0					
ANR	1280969	UnaryOperationExpression	& p -> pole [ 1 ] [ 1 ]		1280767	0					
ANR	1280970	UnaryOperator	&		1280767	0					
ANR	1280971	ArrayIndexing	p -> pole [ 1 ] [ 1 ]		1280767	1					
ANR	1280972	ArrayIndexing	p -> pole [ 1 ]		1280767	0					
ANR	1280973	PtrMemberAccess	p -> pole		1280767	0					
ANR	1280974	Identifier	p		1280767	0					
ANR	1280975	Identifier	pole		1280767	1					
ANR	1280976	PrimaryExpression	1		1280767	1					
ANR	1280977	PrimaryExpression	1		1280767	1					
ANR	1280978	Argument	& p -> pole [ 1 ] [ 2 ]		1280767	1					
ANR	1280979	UnaryOperationExpression	& p -> pole [ 1 ] [ 2 ]		1280767	0					
ANR	1280980	UnaryOperator	&		1280767	0					
ANR	1280981	ArrayIndexing	p -> pole [ 1 ] [ 2 ]		1280767	1					
ANR	1280982	ArrayIndexing	p -> pole [ 1 ]		1280767	0					
ANR	1280983	PtrMemberAccess	p -> pole		1280767	0					
ANR	1280984	Identifier	p		1280767	0					
ANR	1280985	Identifier	pole		1280767	1					
ANR	1280986	PrimaryExpression	1		1280767	1					
ANR	1280987	PrimaryExpression	2		1280767	1					
ANR	1280988	Argument	& p -> pole [ 2 ] [ 1 ]		1280767	2					
ANR	1280989	UnaryOperationExpression	& p -> pole [ 2 ] [ 1 ]		1280767	0					
ANR	1280990	UnaryOperator	&		1280767	0					
ANR	1280991	ArrayIndexing	p -> pole [ 2 ] [ 1 ]		1280767	1					
ANR	1280992	ArrayIndexing	p -> pole [ 2 ]		1280767	0					
ANR	1280993	PtrMemberAccess	p -> pole		1280767	0					
ANR	1280994	Identifier	p		1280767	0					
ANR	1280995	Identifier	pole		1280767	1					
ANR	1280996	PrimaryExpression	2		1280767	1					
ANR	1280997	PrimaryExpression	1		1280767	1					
ANR	1280998	ReturnStatement	return true ;	3763:8:142127:142138	1280767	1	True				
ANR	1280999	Identifier	true		1280767	0					
ANR	1281000	IfStatement	"if ( neqs ( & sign , vector_pair_orientation ( & p -> pole [ 1 ] [ 1 ] , & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 2 ] [ 1 ] ) ) )"		1280767	5					
ANR	1281001	Condition	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 1 ] [ 1 ] , & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 2 ] [ 1 ] ) )"	3764:8:142148:142231	1280767	0	True				
ANR	1281002	CallExpression	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 1 ] [ 1 ] , & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 2 ] [ 1 ] ) )"		1280767	0					
ANR	1281003	Callee	neqs		1280767	0					
ANR	1281004	Identifier	neqs		1280767	0					
ANR	1281005	ArgumentList	& sign		1280767	1					
ANR	1281006	Argument	& sign		1280767	0					
ANR	1281007	UnaryOperationExpression	& sign		1280767	0					
ANR	1281008	UnaryOperator	&		1280767	0					
ANR	1281009	Identifier	sign		1280767	1					
ANR	1281010	Argument	"vector_pair_orientation ( & p -> pole [ 1 ] [ 1 ] , & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 2 ] [ 1 ] )"		1280767	1					
ANR	1281011	CallExpression	"vector_pair_orientation ( & p -> pole [ 1 ] [ 1 ] , & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 2 ] [ 1 ] )"		1280767	0					
ANR	1281012	Callee	vector_pair_orientation		1280767	0					
ANR	1281013	Identifier	vector_pair_orientation		1280767	0					
ANR	1281014	ArgumentList	& p -> pole [ 1 ] [ 1 ]		1280767	1					
ANR	1281015	Argument	& p -> pole [ 1 ] [ 1 ]		1280767	0					
ANR	1281016	UnaryOperationExpression	& p -> pole [ 1 ] [ 1 ]		1280767	0					
ANR	1281017	UnaryOperator	&		1280767	0					
ANR	1281018	ArrayIndexing	p -> pole [ 1 ] [ 1 ]		1280767	1					
ANR	1281019	ArrayIndexing	p -> pole [ 1 ]		1280767	0					
ANR	1281020	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281021	Identifier	p		1280767	0					
ANR	1281022	Identifier	pole		1280767	1					
ANR	1281023	PrimaryExpression	1		1280767	1					
ANR	1281024	PrimaryExpression	1		1280767	1					
ANR	1281025	Argument	& p -> pole [ 1 ] [ 2 ]		1280767	1					
ANR	1281026	UnaryOperationExpression	& p -> pole [ 1 ] [ 2 ]		1280767	0					
ANR	1281027	UnaryOperator	&		1280767	0					
ANR	1281028	ArrayIndexing	p -> pole [ 1 ] [ 2 ]		1280767	1					
ANR	1281029	ArrayIndexing	p -> pole [ 1 ]		1280767	0					
ANR	1281030	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281031	Identifier	p		1280767	0					
ANR	1281032	Identifier	pole		1280767	1					
ANR	1281033	PrimaryExpression	1		1280767	1					
ANR	1281034	PrimaryExpression	2		1280767	1					
ANR	1281035	Argument	& p -> pole [ 2 ] [ 1 ]		1280767	2					
ANR	1281036	UnaryOperationExpression	& p -> pole [ 2 ] [ 1 ]		1280767	0					
ANR	1281037	UnaryOperator	&		1280767	0					
ANR	1281038	ArrayIndexing	p -> pole [ 2 ] [ 1 ]		1280767	1					
ANR	1281039	ArrayIndexing	p -> pole [ 2 ]		1280767	0					
ANR	1281040	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281041	Identifier	p		1280767	0					
ANR	1281042	Identifier	pole		1280767	1					
ANR	1281043	PrimaryExpression	2		1280767	1					
ANR	1281044	PrimaryExpression	1		1280767	1					
ANR	1281045	ReturnStatement	return true ;	3765:8:142242:142253	1280767	1	True				
ANR	1281046	Identifier	true		1280767	0					
ANR	1281047	IfStatement	"if ( neqs ( & sign , vector_pair_orientation ( & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 1 ] [ 3 ] , & p -> pole [ 2 ] [ 2 ] ) ) )"		1280767	6					
ANR	1281048	Condition	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 1 ] [ 3 ] , & p -> pole [ 2 ] [ 2 ] ) )"	3766:8:142263:142346	1280767	0	True				
ANR	1281049	CallExpression	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 1 ] [ 3 ] , & p -> pole [ 2 ] [ 2 ] ) )"		1280767	0					
ANR	1281050	Callee	neqs		1280767	0					
ANR	1281051	Identifier	neqs		1280767	0					
ANR	1281052	ArgumentList	& sign		1280767	1					
ANR	1281053	Argument	& sign		1280767	0					
ANR	1281054	UnaryOperationExpression	& sign		1280767	0					
ANR	1281055	UnaryOperator	&		1280767	0					
ANR	1281056	Identifier	sign		1280767	1					
ANR	1281057	Argument	"vector_pair_orientation ( & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 1 ] [ 3 ] , & p -> pole [ 2 ] [ 2 ] )"		1280767	1					
ANR	1281058	CallExpression	"vector_pair_orientation ( & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 1 ] [ 3 ] , & p -> pole [ 2 ] [ 2 ] )"		1280767	0					
ANR	1281059	Callee	vector_pair_orientation		1280767	0					
ANR	1281060	Identifier	vector_pair_orientation		1280767	0					
ANR	1281061	ArgumentList	& p -> pole [ 1 ] [ 2 ]		1280767	1					
ANR	1281062	Argument	& p -> pole [ 1 ] [ 2 ]		1280767	0					
ANR	1281063	UnaryOperationExpression	& p -> pole [ 1 ] [ 2 ]		1280767	0					
ANR	1281064	UnaryOperator	&		1280767	0					
ANR	1281065	ArrayIndexing	p -> pole [ 1 ] [ 2 ]		1280767	1					
ANR	1281066	ArrayIndexing	p -> pole [ 1 ]		1280767	0					
ANR	1281067	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281068	Identifier	p		1280767	0					
ANR	1281069	Identifier	pole		1280767	1					
ANR	1281070	PrimaryExpression	1		1280767	1					
ANR	1281071	PrimaryExpression	2		1280767	1					
ANR	1281072	Argument	& p -> pole [ 1 ] [ 3 ]		1280767	1					
ANR	1281073	UnaryOperationExpression	& p -> pole [ 1 ] [ 3 ]		1280767	0					
ANR	1281074	UnaryOperator	&		1280767	0					
ANR	1281075	ArrayIndexing	p -> pole [ 1 ] [ 3 ]		1280767	1					
ANR	1281076	ArrayIndexing	p -> pole [ 1 ]		1280767	0					
ANR	1281077	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281078	Identifier	p		1280767	0					
ANR	1281079	Identifier	pole		1280767	1					
ANR	1281080	PrimaryExpression	1		1280767	1					
ANR	1281081	PrimaryExpression	3		1280767	1					
ANR	1281082	Argument	& p -> pole [ 2 ] [ 2 ]		1280767	2					
ANR	1281083	UnaryOperationExpression	& p -> pole [ 2 ] [ 2 ]		1280767	0					
ANR	1281084	UnaryOperator	&		1280767	0					
ANR	1281085	ArrayIndexing	p -> pole [ 2 ] [ 2 ]		1280767	1					
ANR	1281086	ArrayIndexing	p -> pole [ 2 ]		1280767	0					
ANR	1281087	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281088	Identifier	p		1280767	0					
ANR	1281089	Identifier	pole		1280767	1					
ANR	1281090	PrimaryExpression	2		1280767	1					
ANR	1281091	PrimaryExpression	2		1280767	1					
ANR	1281092	ReturnStatement	return true ;	3767:8:142357:142368	1280767	1	True				
ANR	1281093	Identifier	true		1280767	0					
ANR	1281094	IfStatement	"if ( neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 1 ] [ 3 ] , & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 2 ] [ 3 ] ) ) )"		1280767	7					
ANR	1281095	Condition	"neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 1 ] [ 3 ] , & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 2 ] [ 3 ] ) )"	3768:8:142378:142462	1280767	0	True				
ANR	1281096	CallExpression	"neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 1 ] [ 3 ] , & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 2 ] [ 3 ] ) )"		1280767	0					
ANR	1281097	Callee	neqs		1280767	0					
ANR	1281098	Identifier	neqs		1280767	0					
ANR	1281099	ArgumentList	& sign		1280767	1					
ANR	1281100	Argument	& sign		1280767	0					
ANR	1281101	UnaryOperationExpression	& sign		1280767	0					
ANR	1281102	UnaryOperator	&		1280767	0					
ANR	1281103	Identifier	sign		1280767	1					
ANR	1281104	Argument	"- vector_pair_orientation ( & p -> pole [ 1 ] [ 3 ] , & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 2 ] [ 3 ] )"		1280767	1					
ANR	1281105	UnaryOperationExpression	"- vector_pair_orientation ( & p -> pole [ 1 ] [ 3 ] , & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 2 ] [ 3 ] )"		1280767	0					
ANR	1281106	UnaryOperator	-		1280767	0					
ANR	1281107	CallExpression	"vector_pair_orientation ( & p -> pole [ 1 ] [ 3 ] , & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 2 ] [ 3 ] )"		1280767	1					
ANR	1281108	Callee	vector_pair_orientation		1280767	0					
ANR	1281109	Identifier	vector_pair_orientation		1280767	0					
ANR	1281110	ArgumentList	& p -> pole [ 1 ] [ 3 ]		1280767	1					
ANR	1281111	Argument	& p -> pole [ 1 ] [ 3 ]		1280767	0					
ANR	1281112	UnaryOperationExpression	& p -> pole [ 1 ] [ 3 ]		1280767	0					
ANR	1281113	UnaryOperator	&		1280767	0					
ANR	1281114	ArrayIndexing	p -> pole [ 1 ] [ 3 ]		1280767	1					
ANR	1281115	ArrayIndexing	p -> pole [ 1 ]		1280767	0					
ANR	1281116	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281117	Identifier	p		1280767	0					
ANR	1281118	Identifier	pole		1280767	1					
ANR	1281119	PrimaryExpression	1		1280767	1					
ANR	1281120	PrimaryExpression	3		1280767	1					
ANR	1281121	Argument	& p -> pole [ 1 ] [ 2 ]		1280767	1					
ANR	1281122	UnaryOperationExpression	& p -> pole [ 1 ] [ 2 ]		1280767	0					
ANR	1281123	UnaryOperator	&		1280767	0					
ANR	1281124	ArrayIndexing	p -> pole [ 1 ] [ 2 ]		1280767	1					
ANR	1281125	ArrayIndexing	p -> pole [ 1 ]		1280767	0					
ANR	1281126	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281127	Identifier	p		1280767	0					
ANR	1281128	Identifier	pole		1280767	1					
ANR	1281129	PrimaryExpression	1		1280767	1					
ANR	1281130	PrimaryExpression	2		1280767	1					
ANR	1281131	Argument	& p -> pole [ 2 ] [ 3 ]		1280767	2					
ANR	1281132	UnaryOperationExpression	& p -> pole [ 2 ] [ 3 ]		1280767	0					
ANR	1281133	UnaryOperator	&		1280767	0					
ANR	1281134	ArrayIndexing	p -> pole [ 2 ] [ 3 ]		1280767	1					
ANR	1281135	ArrayIndexing	p -> pole [ 2 ]		1280767	0					
ANR	1281136	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281137	Identifier	p		1280767	0					
ANR	1281138	Identifier	pole		1280767	1					
ANR	1281139	PrimaryExpression	2		1280767	1					
ANR	1281140	PrimaryExpression	3		1280767	1					
ANR	1281141	ReturnStatement	return true ;	3769:8:142473:142484	1280767	1	True				
ANR	1281142	Identifier	true		1280767	0					
ANR	1281143	IfStatement	"if ( neqs ( & sign , vector_pair_orientation ( & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 3 ] [ 1 ] ) ) )"		1280767	8					
ANR	1281144	Condition	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 3 ] [ 1 ] ) )"	3771:8:142495:142578	1280767	0	True				
ANR	1281145	CallExpression	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 3 ] [ 1 ] ) )"		1280767	0					
ANR	1281146	Callee	neqs		1280767	0					
ANR	1281147	Identifier	neqs		1280767	0					
ANR	1281148	ArgumentList	& sign		1280767	1					
ANR	1281149	Argument	& sign		1280767	0					
ANR	1281150	UnaryOperationExpression	& sign		1280767	0					
ANR	1281151	UnaryOperator	&		1280767	0					
ANR	1281152	Identifier	sign		1280767	1					
ANR	1281153	Argument	"vector_pair_orientation ( & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 3 ] [ 1 ] )"		1280767	1					
ANR	1281154	CallExpression	"vector_pair_orientation ( & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 3 ] [ 1 ] )"		1280767	0					
ANR	1281155	Callee	vector_pair_orientation		1280767	0					
ANR	1281156	Identifier	vector_pair_orientation		1280767	0					
ANR	1281157	ArgumentList	& p -> pole [ 2 ] [ 1 ]		1280767	1					
ANR	1281158	Argument	& p -> pole [ 2 ] [ 1 ]		1280767	0					
ANR	1281159	UnaryOperationExpression	& p -> pole [ 2 ] [ 1 ]		1280767	0					
ANR	1281160	UnaryOperator	&		1280767	0					
ANR	1281161	ArrayIndexing	p -> pole [ 2 ] [ 1 ]		1280767	1					
ANR	1281162	ArrayIndexing	p -> pole [ 2 ]		1280767	0					
ANR	1281163	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281164	Identifier	p		1280767	0					
ANR	1281165	Identifier	pole		1280767	1					
ANR	1281166	PrimaryExpression	2		1280767	1					
ANR	1281167	PrimaryExpression	1		1280767	1					
ANR	1281168	Argument	& p -> pole [ 2 ] [ 2 ]		1280767	1					
ANR	1281169	UnaryOperationExpression	& p -> pole [ 2 ] [ 2 ]		1280767	0					
ANR	1281170	UnaryOperator	&		1280767	0					
ANR	1281171	ArrayIndexing	p -> pole [ 2 ] [ 2 ]		1280767	1					
ANR	1281172	ArrayIndexing	p -> pole [ 2 ]		1280767	0					
ANR	1281173	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281174	Identifier	p		1280767	0					
ANR	1281175	Identifier	pole		1280767	1					
ANR	1281176	PrimaryExpression	2		1280767	1					
ANR	1281177	PrimaryExpression	2		1280767	1					
ANR	1281178	Argument	& p -> pole [ 3 ] [ 1 ]		1280767	2					
ANR	1281179	UnaryOperationExpression	& p -> pole [ 3 ] [ 1 ]		1280767	0					
ANR	1281180	UnaryOperator	&		1280767	0					
ANR	1281181	ArrayIndexing	p -> pole [ 3 ] [ 1 ]		1280767	1					
ANR	1281182	ArrayIndexing	p -> pole [ 3 ]		1280767	0					
ANR	1281183	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281184	Identifier	p		1280767	0					
ANR	1281185	Identifier	pole		1280767	1					
ANR	1281186	PrimaryExpression	3		1280767	1					
ANR	1281187	PrimaryExpression	1		1280767	1					
ANR	1281188	ReturnStatement	return true ;	3772:8:142589:142600	1280767	1	True				
ANR	1281189	Identifier	true		1280767	0					
ANR	1281190	IfStatement	"if ( neqs ( & sign , vector_pair_orientation ( & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 3 ] [ 1 ] ) ) )"		1280767	9					
ANR	1281191	Condition	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 3 ] [ 1 ] ) )"	3773:8:142610:142693	1280767	0	True				
ANR	1281192	CallExpression	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 3 ] [ 1 ] ) )"		1280767	0					
ANR	1281193	Callee	neqs		1280767	0					
ANR	1281194	Identifier	neqs		1280767	0					
ANR	1281195	ArgumentList	& sign		1280767	1					
ANR	1281196	Argument	& sign		1280767	0					
ANR	1281197	UnaryOperationExpression	& sign		1280767	0					
ANR	1281198	UnaryOperator	&		1280767	0					
ANR	1281199	Identifier	sign		1280767	1					
ANR	1281200	Argument	"vector_pair_orientation ( & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 3 ] [ 1 ] )"		1280767	1					
ANR	1281201	CallExpression	"vector_pair_orientation ( & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 3 ] [ 1 ] )"		1280767	0					
ANR	1281202	Callee	vector_pair_orientation		1280767	0					
ANR	1281203	Identifier	vector_pair_orientation		1280767	0					
ANR	1281204	ArgumentList	& p -> pole [ 2 ] [ 1 ]		1280767	1					
ANR	1281205	Argument	& p -> pole [ 2 ] [ 1 ]		1280767	0					
ANR	1281206	UnaryOperationExpression	& p -> pole [ 2 ] [ 1 ]		1280767	0					
ANR	1281207	UnaryOperator	&		1280767	0					
ANR	1281208	ArrayIndexing	p -> pole [ 2 ] [ 1 ]		1280767	1					
ANR	1281209	ArrayIndexing	p -> pole [ 2 ]		1280767	0					
ANR	1281210	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281211	Identifier	p		1280767	0					
ANR	1281212	Identifier	pole		1280767	1					
ANR	1281213	PrimaryExpression	2		1280767	1					
ANR	1281214	PrimaryExpression	1		1280767	1					
ANR	1281215	Argument	& p -> pole [ 2 ] [ 2 ]		1280767	1					
ANR	1281216	UnaryOperationExpression	& p -> pole [ 2 ] [ 2 ]		1280767	0					
ANR	1281217	UnaryOperator	&		1280767	0					
ANR	1281218	ArrayIndexing	p -> pole [ 2 ] [ 2 ]		1280767	1					
ANR	1281219	ArrayIndexing	p -> pole [ 2 ]		1280767	0					
ANR	1281220	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281221	Identifier	p		1280767	0					
ANR	1281222	Identifier	pole		1280767	1					
ANR	1281223	PrimaryExpression	2		1280767	1					
ANR	1281224	PrimaryExpression	2		1280767	1					
ANR	1281225	Argument	& p -> pole [ 3 ] [ 1 ]		1280767	2					
ANR	1281226	UnaryOperationExpression	& p -> pole [ 3 ] [ 1 ]		1280767	0					
ANR	1281227	UnaryOperator	&		1280767	0					
ANR	1281228	ArrayIndexing	p -> pole [ 3 ] [ 1 ]		1280767	1					
ANR	1281229	ArrayIndexing	p -> pole [ 3 ]		1280767	0					
ANR	1281230	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281231	Identifier	p		1280767	0					
ANR	1281232	Identifier	pole		1280767	1					
ANR	1281233	PrimaryExpression	3		1280767	1					
ANR	1281234	PrimaryExpression	1		1280767	1					
ANR	1281235	ReturnStatement	return true ;	3774:8:142704:142715	1280767	1	True				
ANR	1281236	Identifier	true		1280767	0					
ANR	1281237	IfStatement	"if ( neqs ( & sign , vector_pair_orientation ( & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 3 ] [ 2 ] ) ) )"		1280767	10					
ANR	1281238	Condition	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 3 ] [ 2 ] ) )"	3775:8:142725:142808	1280767	0	True				
ANR	1281239	CallExpression	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 3 ] [ 2 ] ) )"		1280767	0					
ANR	1281240	Callee	neqs		1280767	0					
ANR	1281241	Identifier	neqs		1280767	0					
ANR	1281242	ArgumentList	& sign		1280767	1					
ANR	1281243	Argument	& sign		1280767	0					
ANR	1281244	UnaryOperationExpression	& sign		1280767	0					
ANR	1281245	UnaryOperator	&		1280767	0					
ANR	1281246	Identifier	sign		1280767	1					
ANR	1281247	Argument	"vector_pair_orientation ( & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 3 ] [ 2 ] )"		1280767	1					
ANR	1281248	CallExpression	"vector_pair_orientation ( & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 3 ] [ 2 ] )"		1280767	0					
ANR	1281249	Callee	vector_pair_orientation		1280767	0					
ANR	1281250	Identifier	vector_pair_orientation		1280767	0					
ANR	1281251	ArgumentList	& p -> pole [ 2 ] [ 2 ]		1280767	1					
ANR	1281252	Argument	& p -> pole [ 2 ] [ 2 ]		1280767	0					
ANR	1281253	UnaryOperationExpression	& p -> pole [ 2 ] [ 2 ]		1280767	0					
ANR	1281254	UnaryOperator	&		1280767	0					
ANR	1281255	ArrayIndexing	p -> pole [ 2 ] [ 2 ]		1280767	1					
ANR	1281256	ArrayIndexing	p -> pole [ 2 ]		1280767	0					
ANR	1281257	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281258	Identifier	p		1280767	0					
ANR	1281259	Identifier	pole		1280767	1					
ANR	1281260	PrimaryExpression	2		1280767	1					
ANR	1281261	PrimaryExpression	2		1280767	1					
ANR	1281262	Argument	& p -> pole [ 2 ] [ 3 ]		1280767	1					
ANR	1281263	UnaryOperationExpression	& p -> pole [ 2 ] [ 3 ]		1280767	0					
ANR	1281264	UnaryOperator	&		1280767	0					
ANR	1281265	ArrayIndexing	p -> pole [ 2 ] [ 3 ]		1280767	1					
ANR	1281266	ArrayIndexing	p -> pole [ 2 ]		1280767	0					
ANR	1281267	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281268	Identifier	p		1280767	0					
ANR	1281269	Identifier	pole		1280767	1					
ANR	1281270	PrimaryExpression	2		1280767	1					
ANR	1281271	PrimaryExpression	3		1280767	1					
ANR	1281272	Argument	& p -> pole [ 3 ] [ 2 ]		1280767	2					
ANR	1281273	UnaryOperationExpression	& p -> pole [ 3 ] [ 2 ]		1280767	0					
ANR	1281274	UnaryOperator	&		1280767	0					
ANR	1281275	ArrayIndexing	p -> pole [ 3 ] [ 2 ]		1280767	1					
ANR	1281276	ArrayIndexing	p -> pole [ 3 ]		1280767	0					
ANR	1281277	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281278	Identifier	p		1280767	0					
ANR	1281279	Identifier	pole		1280767	1					
ANR	1281280	PrimaryExpression	3		1280767	1					
ANR	1281281	PrimaryExpression	2		1280767	1					
ANR	1281282	ReturnStatement	return true ;	3776:8:142819:142830	1280767	1	True				
ANR	1281283	Identifier	true		1280767	0					
ANR	1281284	IfStatement	"if ( neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 3 ] [ 3 ] ) ) )"		1280767	11					
ANR	1281285	Condition	"neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 3 ] [ 3 ] ) )"	3777:8:142840:142924	1280767	0	True				
ANR	1281286	CallExpression	"neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 3 ] [ 3 ] ) )"		1280767	0					
ANR	1281287	Callee	neqs		1280767	0					
ANR	1281288	Identifier	neqs		1280767	0					
ANR	1281289	ArgumentList	& sign		1280767	1					
ANR	1281290	Argument	& sign		1280767	0					
ANR	1281291	UnaryOperationExpression	& sign		1280767	0					
ANR	1281292	UnaryOperator	&		1280767	0					
ANR	1281293	Identifier	sign		1280767	1					
ANR	1281294	Argument	"- vector_pair_orientation ( & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 3 ] [ 3 ] )"		1280767	1					
ANR	1281295	UnaryOperationExpression	"- vector_pair_orientation ( & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 3 ] [ 3 ] )"		1280767	0					
ANR	1281296	UnaryOperator	-		1280767	0					
ANR	1281297	CallExpression	"vector_pair_orientation ( & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 3 ] [ 3 ] )"		1280767	1					
ANR	1281298	Callee	vector_pair_orientation		1280767	0					
ANR	1281299	Identifier	vector_pair_orientation		1280767	0					
ANR	1281300	ArgumentList	& p -> pole [ 2 ] [ 3 ]		1280767	1					
ANR	1281301	Argument	& p -> pole [ 2 ] [ 3 ]		1280767	0					
ANR	1281302	UnaryOperationExpression	& p -> pole [ 2 ] [ 3 ]		1280767	0					
ANR	1281303	UnaryOperator	&		1280767	0					
ANR	1281304	ArrayIndexing	p -> pole [ 2 ] [ 3 ]		1280767	1					
ANR	1281305	ArrayIndexing	p -> pole [ 2 ]		1280767	0					
ANR	1281306	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281307	Identifier	p		1280767	0					
ANR	1281308	Identifier	pole		1280767	1					
ANR	1281309	PrimaryExpression	2		1280767	1					
ANR	1281310	PrimaryExpression	3		1280767	1					
ANR	1281311	Argument	& p -> pole [ 2 ] [ 2 ]		1280767	1					
ANR	1281312	UnaryOperationExpression	& p -> pole [ 2 ] [ 2 ]		1280767	0					
ANR	1281313	UnaryOperator	&		1280767	0					
ANR	1281314	ArrayIndexing	p -> pole [ 2 ] [ 2 ]		1280767	1					
ANR	1281315	ArrayIndexing	p -> pole [ 2 ]		1280767	0					
ANR	1281316	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281317	Identifier	p		1280767	0					
ANR	1281318	Identifier	pole		1280767	1					
ANR	1281319	PrimaryExpression	2		1280767	1					
ANR	1281320	PrimaryExpression	2		1280767	1					
ANR	1281321	Argument	& p -> pole [ 3 ] [ 3 ]		1280767	2					
ANR	1281322	UnaryOperationExpression	& p -> pole [ 3 ] [ 3 ]		1280767	0					
ANR	1281323	UnaryOperator	&		1280767	0					
ANR	1281324	ArrayIndexing	p -> pole [ 3 ] [ 3 ]		1280767	1					
ANR	1281325	ArrayIndexing	p -> pole [ 3 ]		1280767	0					
ANR	1281326	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281327	Identifier	p		1280767	0					
ANR	1281328	Identifier	pole		1280767	1					
ANR	1281329	PrimaryExpression	3		1280767	1					
ANR	1281330	PrimaryExpression	3		1280767	1					
ANR	1281331	ReturnStatement	return true ;	3778:8:142935:142946	1280767	1	True				
ANR	1281332	Identifier	true		1280767	0					
ANR	1281333	IfStatement	"if ( neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 3 ] [ 1 ] , & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 1 ] ) ) )"		1280767	12					
ANR	1281334	Condition	"neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 3 ] [ 1 ] , & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 1 ] ) )"	3780:8:142957:143041	1280767	0	True				
ANR	1281335	CallExpression	"neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 3 ] [ 1 ] , & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 1 ] ) )"		1280767	0					
ANR	1281336	Callee	neqs		1280767	0					
ANR	1281337	Identifier	neqs		1280767	0					
ANR	1281338	ArgumentList	& sign		1280767	1					
ANR	1281339	Argument	& sign		1280767	0					
ANR	1281340	UnaryOperationExpression	& sign		1280767	0					
ANR	1281341	UnaryOperator	&		1280767	0					
ANR	1281342	Identifier	sign		1280767	1					
ANR	1281343	Argument	"- vector_pair_orientation ( & p -> pole [ 3 ] [ 1 ] , & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 1 ] )"		1280767	1					
ANR	1281344	UnaryOperationExpression	"- vector_pair_orientation ( & p -> pole [ 3 ] [ 1 ] , & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 1 ] )"		1280767	0					
ANR	1281345	UnaryOperator	-		1280767	0					
ANR	1281346	CallExpression	"vector_pair_orientation ( & p -> pole [ 3 ] [ 1 ] , & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 1 ] )"		1280767	1					
ANR	1281347	Callee	vector_pair_orientation		1280767	0					
ANR	1281348	Identifier	vector_pair_orientation		1280767	0					
ANR	1281349	ArgumentList	& p -> pole [ 3 ] [ 1 ]		1280767	1					
ANR	1281350	Argument	& p -> pole [ 3 ] [ 1 ]		1280767	0					
ANR	1281351	UnaryOperationExpression	& p -> pole [ 3 ] [ 1 ]		1280767	0					
ANR	1281352	UnaryOperator	&		1280767	0					
ANR	1281353	ArrayIndexing	p -> pole [ 3 ] [ 1 ]		1280767	1					
ANR	1281354	ArrayIndexing	p -> pole [ 3 ]		1280767	0					
ANR	1281355	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281356	Identifier	p		1280767	0					
ANR	1281357	Identifier	pole		1280767	1					
ANR	1281358	PrimaryExpression	3		1280767	1					
ANR	1281359	PrimaryExpression	1		1280767	1					
ANR	1281360	Argument	& p -> pole [ 3 ] [ 2 ]		1280767	1					
ANR	1281361	UnaryOperationExpression	& p -> pole [ 3 ] [ 2 ]		1280767	0					
ANR	1281362	UnaryOperator	&		1280767	0					
ANR	1281363	ArrayIndexing	p -> pole [ 3 ] [ 2 ]		1280767	1					
ANR	1281364	ArrayIndexing	p -> pole [ 3 ]		1280767	0					
ANR	1281365	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281366	Identifier	p		1280767	0					
ANR	1281367	Identifier	pole		1280767	1					
ANR	1281368	PrimaryExpression	3		1280767	1					
ANR	1281369	PrimaryExpression	2		1280767	1					
ANR	1281370	Argument	& p -> pole [ 2 ] [ 1 ]		1280767	2					
ANR	1281371	UnaryOperationExpression	& p -> pole [ 2 ] [ 1 ]		1280767	0					
ANR	1281372	UnaryOperator	&		1280767	0					
ANR	1281373	ArrayIndexing	p -> pole [ 2 ] [ 1 ]		1280767	1					
ANR	1281374	ArrayIndexing	p -> pole [ 2 ]		1280767	0					
ANR	1281375	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281376	Identifier	p		1280767	0					
ANR	1281377	Identifier	pole		1280767	1					
ANR	1281378	PrimaryExpression	2		1280767	1					
ANR	1281379	PrimaryExpression	1		1280767	1					
ANR	1281380	ReturnStatement	return true ;	3781:8:143052:143063	1280767	1	True				
ANR	1281381	Identifier	true		1280767	0					
ANR	1281382	IfStatement	"if ( neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 3 ] [ 1 ] , & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 1 ] ) ) )"		1280767	13					
ANR	1281383	Condition	"neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 3 ] [ 1 ] , & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 1 ] ) )"	3782:8:143073:143157	1280767	0	True				
ANR	1281384	CallExpression	"neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 3 ] [ 1 ] , & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 1 ] ) )"		1280767	0					
ANR	1281385	Callee	neqs		1280767	0					
ANR	1281386	Identifier	neqs		1280767	0					
ANR	1281387	ArgumentList	& sign		1280767	1					
ANR	1281388	Argument	& sign		1280767	0					
ANR	1281389	UnaryOperationExpression	& sign		1280767	0					
ANR	1281390	UnaryOperator	&		1280767	0					
ANR	1281391	Identifier	sign		1280767	1					
ANR	1281392	Argument	"- vector_pair_orientation ( & p -> pole [ 3 ] [ 1 ] , & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 1 ] )"		1280767	1					
ANR	1281393	UnaryOperationExpression	"- vector_pair_orientation ( & p -> pole [ 3 ] [ 1 ] , & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 1 ] )"		1280767	0					
ANR	1281394	UnaryOperator	-		1280767	0					
ANR	1281395	CallExpression	"vector_pair_orientation ( & p -> pole [ 3 ] [ 1 ] , & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 1 ] )"		1280767	1					
ANR	1281396	Callee	vector_pair_orientation		1280767	0					
ANR	1281397	Identifier	vector_pair_orientation		1280767	0					
ANR	1281398	ArgumentList	& p -> pole [ 3 ] [ 1 ]		1280767	1					
ANR	1281399	Argument	& p -> pole [ 3 ] [ 1 ]		1280767	0					
ANR	1281400	UnaryOperationExpression	& p -> pole [ 3 ] [ 1 ]		1280767	0					
ANR	1281401	UnaryOperator	&		1280767	0					
ANR	1281402	ArrayIndexing	p -> pole [ 3 ] [ 1 ]		1280767	1					
ANR	1281403	ArrayIndexing	p -> pole [ 3 ]		1280767	0					
ANR	1281404	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281405	Identifier	p		1280767	0					
ANR	1281406	Identifier	pole		1280767	1					
ANR	1281407	PrimaryExpression	3		1280767	1					
ANR	1281408	PrimaryExpression	1		1280767	1					
ANR	1281409	Argument	& p -> pole [ 3 ] [ 2 ]		1280767	1					
ANR	1281410	UnaryOperationExpression	& p -> pole [ 3 ] [ 2 ]		1280767	0					
ANR	1281411	UnaryOperator	&		1280767	0					
ANR	1281412	ArrayIndexing	p -> pole [ 3 ] [ 2 ]		1280767	1					
ANR	1281413	ArrayIndexing	p -> pole [ 3 ]		1280767	0					
ANR	1281414	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281415	Identifier	p		1280767	0					
ANR	1281416	Identifier	pole		1280767	1					
ANR	1281417	PrimaryExpression	3		1280767	1					
ANR	1281418	PrimaryExpression	2		1280767	1					
ANR	1281419	Argument	& p -> pole [ 2 ] [ 1 ]		1280767	2					
ANR	1281420	UnaryOperationExpression	& p -> pole [ 2 ] [ 1 ]		1280767	0					
ANR	1281421	UnaryOperator	&		1280767	0					
ANR	1281422	ArrayIndexing	p -> pole [ 2 ] [ 1 ]		1280767	1					
ANR	1281423	ArrayIndexing	p -> pole [ 2 ]		1280767	0					
ANR	1281424	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281425	Identifier	p		1280767	0					
ANR	1281426	Identifier	pole		1280767	1					
ANR	1281427	PrimaryExpression	2		1280767	1					
ANR	1281428	PrimaryExpression	1		1280767	1					
ANR	1281429	ReturnStatement	return true ;	3783:8:143168:143179	1280767	1	True				
ANR	1281430	Identifier	true		1280767	0					
ANR	1281431	IfStatement	"if ( neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 3 ] [ 3 ] , & p -> pole [ 2 ] [ 2 ] ) ) )"		1280767	14					
ANR	1281432	Condition	"neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 3 ] [ 3 ] , & p -> pole [ 2 ] [ 2 ] ) )"	3784:8:143189:143273	1280767	0	True				
ANR	1281433	CallExpression	"neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 3 ] [ 3 ] , & p -> pole [ 2 ] [ 2 ] ) )"		1280767	0					
ANR	1281434	Callee	neqs		1280767	0					
ANR	1281435	Identifier	neqs		1280767	0					
ANR	1281436	ArgumentList	& sign		1280767	1					
ANR	1281437	Argument	& sign		1280767	0					
ANR	1281438	UnaryOperationExpression	& sign		1280767	0					
ANR	1281439	UnaryOperator	&		1280767	0					
ANR	1281440	Identifier	sign		1280767	1					
ANR	1281441	Argument	"- vector_pair_orientation ( & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 3 ] [ 3 ] , & p -> pole [ 2 ] [ 2 ] )"		1280767	1					
ANR	1281442	UnaryOperationExpression	"- vector_pair_orientation ( & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 3 ] [ 3 ] , & p -> pole [ 2 ] [ 2 ] )"		1280767	0					
ANR	1281443	UnaryOperator	-		1280767	0					
ANR	1281444	CallExpression	"vector_pair_orientation ( & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 3 ] [ 3 ] , & p -> pole [ 2 ] [ 2 ] )"		1280767	1					
ANR	1281445	Callee	vector_pair_orientation		1280767	0					
ANR	1281446	Identifier	vector_pair_orientation		1280767	0					
ANR	1281447	ArgumentList	& p -> pole [ 3 ] [ 2 ]		1280767	1					
ANR	1281448	Argument	& p -> pole [ 3 ] [ 2 ]		1280767	0					
ANR	1281449	UnaryOperationExpression	& p -> pole [ 3 ] [ 2 ]		1280767	0					
ANR	1281450	UnaryOperator	&		1280767	0					
ANR	1281451	ArrayIndexing	p -> pole [ 3 ] [ 2 ]		1280767	1					
ANR	1281452	ArrayIndexing	p -> pole [ 3 ]		1280767	0					
ANR	1281453	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281454	Identifier	p		1280767	0					
ANR	1281455	Identifier	pole		1280767	1					
ANR	1281456	PrimaryExpression	3		1280767	1					
ANR	1281457	PrimaryExpression	2		1280767	1					
ANR	1281458	Argument	& p -> pole [ 3 ] [ 3 ]		1280767	1					
ANR	1281459	UnaryOperationExpression	& p -> pole [ 3 ] [ 3 ]		1280767	0					
ANR	1281460	UnaryOperator	&		1280767	0					
ANR	1281461	ArrayIndexing	p -> pole [ 3 ] [ 3 ]		1280767	1					
ANR	1281462	ArrayIndexing	p -> pole [ 3 ]		1280767	0					
ANR	1281463	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281464	Identifier	p		1280767	0					
ANR	1281465	Identifier	pole		1280767	1					
ANR	1281466	PrimaryExpression	3		1280767	1					
ANR	1281467	PrimaryExpression	3		1280767	1					
ANR	1281468	Argument	& p -> pole [ 2 ] [ 2 ]		1280767	2					
ANR	1281469	UnaryOperationExpression	& p -> pole [ 2 ] [ 2 ]		1280767	0					
ANR	1281470	UnaryOperator	&		1280767	0					
ANR	1281471	ArrayIndexing	p -> pole [ 2 ] [ 2 ]		1280767	1					
ANR	1281472	ArrayIndexing	p -> pole [ 2 ]		1280767	0					
ANR	1281473	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281474	Identifier	p		1280767	0					
ANR	1281475	Identifier	pole		1280767	1					
ANR	1281476	PrimaryExpression	2		1280767	1					
ANR	1281477	PrimaryExpression	2		1280767	1					
ANR	1281478	ReturnStatement	return true ;	3785:8:143284:143295	1280767	1	True				
ANR	1281479	Identifier	true		1280767	0					
ANR	1281480	IfStatement	"if ( neqs ( & sign , vector_pair_orientation ( & p -> pole [ 3 ] [ 3 ] , & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 3 ] ) ) )"		1280767	15					
ANR	1281481	Condition	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 3 ] [ 3 ] , & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 3 ] ) )"	3786:8:143305:143388	1280767	0	True				
ANR	1281482	CallExpression	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 3 ] [ 3 ] , & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 3 ] ) )"		1280767	0					
ANR	1281483	Callee	neqs		1280767	0					
ANR	1281484	Identifier	neqs		1280767	0					
ANR	1281485	ArgumentList	& sign		1280767	1					
ANR	1281486	Argument	& sign		1280767	0					
ANR	1281487	UnaryOperationExpression	& sign		1280767	0					
ANR	1281488	UnaryOperator	&		1280767	0					
ANR	1281489	Identifier	sign		1280767	1					
ANR	1281490	Argument	"vector_pair_orientation ( & p -> pole [ 3 ] [ 3 ] , & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 3 ] )"		1280767	1					
ANR	1281491	CallExpression	"vector_pair_orientation ( & p -> pole [ 3 ] [ 3 ] , & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 3 ] )"		1280767	0					
ANR	1281492	Callee	vector_pair_orientation		1280767	0					
ANR	1281493	Identifier	vector_pair_orientation		1280767	0					
ANR	1281494	ArgumentList	& p -> pole [ 3 ] [ 3 ]		1280767	1					
ANR	1281495	Argument	& p -> pole [ 3 ] [ 3 ]		1280767	0					
ANR	1281496	UnaryOperationExpression	& p -> pole [ 3 ] [ 3 ]		1280767	0					
ANR	1281497	UnaryOperator	&		1280767	0					
ANR	1281498	ArrayIndexing	p -> pole [ 3 ] [ 3 ]		1280767	1					
ANR	1281499	ArrayIndexing	p -> pole [ 3 ]		1280767	0					
ANR	1281500	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281501	Identifier	p		1280767	0					
ANR	1281502	Identifier	pole		1280767	1					
ANR	1281503	PrimaryExpression	3		1280767	1					
ANR	1281504	PrimaryExpression	3		1280767	1					
ANR	1281505	Argument	& p -> pole [ 3 ] [ 2 ]		1280767	1					
ANR	1281506	UnaryOperationExpression	& p -> pole [ 3 ] [ 2 ]		1280767	0					
ANR	1281507	UnaryOperator	&		1280767	0					
ANR	1281508	ArrayIndexing	p -> pole [ 3 ] [ 2 ]		1280767	1					
ANR	1281509	ArrayIndexing	p -> pole [ 3 ]		1280767	0					
ANR	1281510	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281511	Identifier	p		1280767	0					
ANR	1281512	Identifier	pole		1280767	1					
ANR	1281513	PrimaryExpression	3		1280767	1					
ANR	1281514	PrimaryExpression	2		1280767	1					
ANR	1281515	Argument	& p -> pole [ 2 ] [ 3 ]		1280767	2					
ANR	1281516	UnaryOperationExpression	& p -> pole [ 2 ] [ 3 ]		1280767	0					
ANR	1281517	UnaryOperator	&		1280767	0					
ANR	1281518	ArrayIndexing	p -> pole [ 2 ] [ 3 ]		1280767	1					
ANR	1281519	ArrayIndexing	p -> pole [ 2 ]		1280767	0					
ANR	1281520	PtrMemberAccess	p -> pole		1280767	0					
ANR	1281521	Identifier	p		1280767	0					
ANR	1281522	Identifier	pole		1280767	1					
ANR	1281523	PrimaryExpression	2		1280767	1					
ANR	1281524	PrimaryExpression	3		1280767	1					
ANR	1281525	ReturnStatement	return true ;	3787:8:143399:143410	1280767	1	True				
ANR	1281526	Identifier	true		1280767	0					
ANR	1281527	ReturnStatement	return false ;	3788:4:143416:143428	1280767	16	True				
ANR	1281528	Identifier	false		1280767	0					
ANR	1281529	ReturnType	static inline bool		1280767	1					
ANR	1281530	Identifier	is_x_bended		1280767	2					
ANR	1281531	ParameterList	const tensor_patch * p		1280767	3					
ANR	1281532	Parameter	const tensor_patch * p	3751:12:141564:141584	1280767	0	True				
ANR	1281533	ParameterType	const tensor_patch *		1280767	0					
ANR	1281534	Identifier	p		1280767	1					
ANR	1281535	CFGEntryNode	ENTRY		1280767		True				
ANR	1281536	CFGExitNode	EXIT		1280767		True				
ANR	1281537	Symbol	p		1280767						
ANR	1281538	Symbol	p -> pole		1280767						
ANR	1281539	Symbol	* p -> pole		1280767						
ANR	1281540	Symbol	vector_pair_orientation		1280767						
ANR	1281541	Symbol	& sign		1280767						
ANR	1281542	Symbol	sign		1280767						
ANR	1281543	Symbol	true		1280767						
ANR	1281544	Symbol	false		1280767						
ANR	1281545	Symbol	* p		1280767						
ANR	1281546	Symbol	neqs		1280767						
ANR	1281547	Symbol	* * p		1280767						
ANR	1281548	Function	is_y_bended	3791:0:143433:145330							
ANR	1281549	FunctionDef	is_y_bended (const tensor_patch * p)		1281548	0					
ANR	1281550	CompoundStatement		3793:0:143487:145330	1281548	0					
ANR	1281551	IdentifierDeclStatement	"int sign = vector_pair_orientation ( & p -> pole [ 0 ] [ 0 ] , & p -> pole [ 1 ] [ 0 ] , & p -> pole [ 0 ] [ 1 ] ) ;"	3794:4:143493:143575	1281548	0	True				
ANR	1281552	IdentifierDecl	"sign = vector_pair_orientation ( & p -> pole [ 0 ] [ 0 ] , & p -> pole [ 1 ] [ 0 ] , & p -> pole [ 0 ] [ 1 ] )"		1281548	0					
ANR	1281553	IdentifierDeclType	int		1281548	0					
ANR	1281554	Identifier	sign		1281548	1					
ANR	1281555	AssignmentExpression	"sign = vector_pair_orientation ( & p -> pole [ 0 ] [ 0 ] , & p -> pole [ 1 ] [ 0 ] , & p -> pole [ 0 ] [ 1 ] )"		1281548	2		=			
ANR	1281556	Identifier	sign		1281548	0					
ANR	1281557	CallExpression	"vector_pair_orientation ( & p -> pole [ 0 ] [ 0 ] , & p -> pole [ 1 ] [ 0 ] , & p -> pole [ 0 ] [ 1 ] )"		1281548	1					
ANR	1281558	Callee	vector_pair_orientation		1281548	0					
ANR	1281559	Identifier	vector_pair_orientation		1281548	0					
ANR	1281560	ArgumentList	& p -> pole [ 0 ] [ 0 ]		1281548	1					
ANR	1281561	Argument	& p -> pole [ 0 ] [ 0 ]		1281548	0					
ANR	1281562	UnaryOperationExpression	& p -> pole [ 0 ] [ 0 ]		1281548	0					
ANR	1281563	UnaryOperator	&		1281548	0					
ANR	1281564	ArrayIndexing	p -> pole [ 0 ] [ 0 ]		1281548	1					
ANR	1281565	ArrayIndexing	p -> pole [ 0 ]		1281548	0					
ANR	1281566	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281567	Identifier	p		1281548	0					
ANR	1281568	Identifier	pole		1281548	1					
ANR	1281569	PrimaryExpression	0		1281548	1					
ANR	1281570	PrimaryExpression	0		1281548	1					
ANR	1281571	Argument	& p -> pole [ 1 ] [ 0 ]		1281548	1					
ANR	1281572	UnaryOperationExpression	& p -> pole [ 1 ] [ 0 ]		1281548	0					
ANR	1281573	UnaryOperator	&		1281548	0					
ANR	1281574	ArrayIndexing	p -> pole [ 1 ] [ 0 ]		1281548	1					
ANR	1281575	ArrayIndexing	p -> pole [ 1 ]		1281548	0					
ANR	1281576	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281577	Identifier	p		1281548	0					
ANR	1281578	Identifier	pole		1281548	1					
ANR	1281579	PrimaryExpression	1		1281548	1					
ANR	1281580	PrimaryExpression	0		1281548	1					
ANR	1281581	Argument	& p -> pole [ 0 ] [ 1 ]		1281548	2					
ANR	1281582	UnaryOperationExpression	& p -> pole [ 0 ] [ 1 ]		1281548	0					
ANR	1281583	UnaryOperator	&		1281548	0					
ANR	1281584	ArrayIndexing	p -> pole [ 0 ] [ 1 ]		1281548	1					
ANR	1281585	ArrayIndexing	p -> pole [ 0 ]		1281548	0					
ANR	1281586	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281587	Identifier	p		1281548	0					
ANR	1281588	Identifier	pole		1281548	1					
ANR	1281589	PrimaryExpression	0		1281548	1					
ANR	1281590	PrimaryExpression	1		1281548	1					
ANR	1281591	IfStatement	"if ( neqs ( & sign , vector_pair_orientation ( & p -> pole [ 1 ] [ 0 ] , & p -> pole [ 2 ] [ 0 ] , & p -> pole [ 1 ] [ 1 ] ) ) )"		1281548	1					
ANR	1281592	Condition	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 1 ] [ 0 ] , & p -> pole [ 2 ] [ 0 ] , & p -> pole [ 1 ] [ 1 ] ) )"	3796:8:143586:143669	1281548	0	True				
ANR	1281593	CallExpression	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 1 ] [ 0 ] , & p -> pole [ 2 ] [ 0 ] , & p -> pole [ 1 ] [ 1 ] ) )"		1281548	0					
ANR	1281594	Callee	neqs		1281548	0					
ANR	1281595	Identifier	neqs		1281548	0					
ANR	1281596	ArgumentList	& sign		1281548	1					
ANR	1281597	Argument	& sign		1281548	0					
ANR	1281598	UnaryOperationExpression	& sign		1281548	0					
ANR	1281599	UnaryOperator	&		1281548	0					
ANR	1281600	Identifier	sign		1281548	1					
ANR	1281601	Argument	"vector_pair_orientation ( & p -> pole [ 1 ] [ 0 ] , & p -> pole [ 2 ] [ 0 ] , & p -> pole [ 1 ] [ 1 ] )"		1281548	1					
ANR	1281602	CallExpression	"vector_pair_orientation ( & p -> pole [ 1 ] [ 0 ] , & p -> pole [ 2 ] [ 0 ] , & p -> pole [ 1 ] [ 1 ] )"		1281548	0					
ANR	1281603	Callee	vector_pair_orientation		1281548	0					
ANR	1281604	Identifier	vector_pair_orientation		1281548	0					
ANR	1281605	ArgumentList	& p -> pole [ 1 ] [ 0 ]		1281548	1					
ANR	1281606	Argument	& p -> pole [ 1 ] [ 0 ]		1281548	0					
ANR	1281607	UnaryOperationExpression	& p -> pole [ 1 ] [ 0 ]		1281548	0					
ANR	1281608	UnaryOperator	&		1281548	0					
ANR	1281609	ArrayIndexing	p -> pole [ 1 ] [ 0 ]		1281548	1					
ANR	1281610	ArrayIndexing	p -> pole [ 1 ]		1281548	0					
ANR	1281611	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281612	Identifier	p		1281548	0					
ANR	1281613	Identifier	pole		1281548	1					
ANR	1281614	PrimaryExpression	1		1281548	1					
ANR	1281615	PrimaryExpression	0		1281548	1					
ANR	1281616	Argument	& p -> pole [ 2 ] [ 0 ]		1281548	1					
ANR	1281617	UnaryOperationExpression	& p -> pole [ 2 ] [ 0 ]		1281548	0					
ANR	1281618	UnaryOperator	&		1281548	0					
ANR	1281619	ArrayIndexing	p -> pole [ 2 ] [ 0 ]		1281548	1					
ANR	1281620	ArrayIndexing	p -> pole [ 2 ]		1281548	0					
ANR	1281621	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281622	Identifier	p		1281548	0					
ANR	1281623	Identifier	pole		1281548	1					
ANR	1281624	PrimaryExpression	2		1281548	1					
ANR	1281625	PrimaryExpression	0		1281548	1					
ANR	1281626	Argument	& p -> pole [ 1 ] [ 1 ]		1281548	2					
ANR	1281627	UnaryOperationExpression	& p -> pole [ 1 ] [ 1 ]		1281548	0					
ANR	1281628	UnaryOperator	&		1281548	0					
ANR	1281629	ArrayIndexing	p -> pole [ 1 ] [ 1 ]		1281548	1					
ANR	1281630	ArrayIndexing	p -> pole [ 1 ]		1281548	0					
ANR	1281631	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281632	Identifier	p		1281548	0					
ANR	1281633	Identifier	pole		1281548	1					
ANR	1281634	PrimaryExpression	1		1281548	1					
ANR	1281635	PrimaryExpression	1		1281548	1					
ANR	1281636	ReturnStatement	return true ;	3797:8:143680:143691	1281548	1	True				
ANR	1281637	Identifier	true		1281548	0					
ANR	1281638	IfStatement	"if ( neqs ( & sign , vector_pair_orientation ( & p -> pole [ 2 ] [ 0 ] , & p -> pole [ 3 ] [ 0 ] , & p -> pole [ 2 ] [ 1 ] ) ) )"		1281548	2					
ANR	1281639	Condition	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 2 ] [ 0 ] , & p -> pole [ 3 ] [ 0 ] , & p -> pole [ 2 ] [ 1 ] ) )"	3798:8:143701:143784	1281548	0	True				
ANR	1281640	CallExpression	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 2 ] [ 0 ] , & p -> pole [ 3 ] [ 0 ] , & p -> pole [ 2 ] [ 1 ] ) )"		1281548	0					
ANR	1281641	Callee	neqs		1281548	0					
ANR	1281642	Identifier	neqs		1281548	0					
ANR	1281643	ArgumentList	& sign		1281548	1					
ANR	1281644	Argument	& sign		1281548	0					
ANR	1281645	UnaryOperationExpression	& sign		1281548	0					
ANR	1281646	UnaryOperator	&		1281548	0					
ANR	1281647	Identifier	sign		1281548	1					
ANR	1281648	Argument	"vector_pair_orientation ( & p -> pole [ 2 ] [ 0 ] , & p -> pole [ 3 ] [ 0 ] , & p -> pole [ 2 ] [ 1 ] )"		1281548	1					
ANR	1281649	CallExpression	"vector_pair_orientation ( & p -> pole [ 2 ] [ 0 ] , & p -> pole [ 3 ] [ 0 ] , & p -> pole [ 2 ] [ 1 ] )"		1281548	0					
ANR	1281650	Callee	vector_pair_orientation		1281548	0					
ANR	1281651	Identifier	vector_pair_orientation		1281548	0					
ANR	1281652	ArgumentList	& p -> pole [ 2 ] [ 0 ]		1281548	1					
ANR	1281653	Argument	& p -> pole [ 2 ] [ 0 ]		1281548	0					
ANR	1281654	UnaryOperationExpression	& p -> pole [ 2 ] [ 0 ]		1281548	0					
ANR	1281655	UnaryOperator	&		1281548	0					
ANR	1281656	ArrayIndexing	p -> pole [ 2 ] [ 0 ]		1281548	1					
ANR	1281657	ArrayIndexing	p -> pole [ 2 ]		1281548	0					
ANR	1281658	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281659	Identifier	p		1281548	0					
ANR	1281660	Identifier	pole		1281548	1					
ANR	1281661	PrimaryExpression	2		1281548	1					
ANR	1281662	PrimaryExpression	0		1281548	1					
ANR	1281663	Argument	& p -> pole [ 3 ] [ 0 ]		1281548	1					
ANR	1281664	UnaryOperationExpression	& p -> pole [ 3 ] [ 0 ]		1281548	0					
ANR	1281665	UnaryOperator	&		1281548	0					
ANR	1281666	ArrayIndexing	p -> pole [ 3 ] [ 0 ]		1281548	1					
ANR	1281667	ArrayIndexing	p -> pole [ 3 ]		1281548	0					
ANR	1281668	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281669	Identifier	p		1281548	0					
ANR	1281670	Identifier	pole		1281548	1					
ANR	1281671	PrimaryExpression	3		1281548	1					
ANR	1281672	PrimaryExpression	0		1281548	1					
ANR	1281673	Argument	& p -> pole [ 2 ] [ 1 ]		1281548	2					
ANR	1281674	UnaryOperationExpression	& p -> pole [ 2 ] [ 1 ]		1281548	0					
ANR	1281675	UnaryOperator	&		1281548	0					
ANR	1281676	ArrayIndexing	p -> pole [ 2 ] [ 1 ]		1281548	1					
ANR	1281677	ArrayIndexing	p -> pole [ 2 ]		1281548	0					
ANR	1281678	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281679	Identifier	p		1281548	0					
ANR	1281680	Identifier	pole		1281548	1					
ANR	1281681	PrimaryExpression	2		1281548	1					
ANR	1281682	PrimaryExpression	1		1281548	1					
ANR	1281683	ReturnStatement	return true ;	3799:8:143795:143806	1281548	1	True				
ANR	1281684	Identifier	true		1281548	0					
ANR	1281685	IfStatement	"if ( neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 3 ] [ 0 ] , & p -> pole [ 2 ] [ 0 ] , & p -> pole [ 3 ] [ 1 ] ) ) )"		1281548	3					
ANR	1281686	Condition	"neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 3 ] [ 0 ] , & p -> pole [ 2 ] [ 0 ] , & p -> pole [ 3 ] [ 1 ] ) )"	3800:8:143816:143900	1281548	0	True				
ANR	1281687	CallExpression	"neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 3 ] [ 0 ] , & p -> pole [ 2 ] [ 0 ] , & p -> pole [ 3 ] [ 1 ] ) )"		1281548	0					
ANR	1281688	Callee	neqs		1281548	0					
ANR	1281689	Identifier	neqs		1281548	0					
ANR	1281690	ArgumentList	& sign		1281548	1					
ANR	1281691	Argument	& sign		1281548	0					
ANR	1281692	UnaryOperationExpression	& sign		1281548	0					
ANR	1281693	UnaryOperator	&		1281548	0					
ANR	1281694	Identifier	sign		1281548	1					
ANR	1281695	Argument	"- vector_pair_orientation ( & p -> pole [ 3 ] [ 0 ] , & p -> pole [ 2 ] [ 0 ] , & p -> pole [ 3 ] [ 1 ] )"		1281548	1					
ANR	1281696	UnaryOperationExpression	"- vector_pair_orientation ( & p -> pole [ 3 ] [ 0 ] , & p -> pole [ 2 ] [ 0 ] , & p -> pole [ 3 ] [ 1 ] )"		1281548	0					
ANR	1281697	UnaryOperator	-		1281548	0					
ANR	1281698	CallExpression	"vector_pair_orientation ( & p -> pole [ 3 ] [ 0 ] , & p -> pole [ 2 ] [ 0 ] , & p -> pole [ 3 ] [ 1 ] )"		1281548	1					
ANR	1281699	Callee	vector_pair_orientation		1281548	0					
ANR	1281700	Identifier	vector_pair_orientation		1281548	0					
ANR	1281701	ArgumentList	& p -> pole [ 3 ] [ 0 ]		1281548	1					
ANR	1281702	Argument	& p -> pole [ 3 ] [ 0 ]		1281548	0					
ANR	1281703	UnaryOperationExpression	& p -> pole [ 3 ] [ 0 ]		1281548	0					
ANR	1281704	UnaryOperator	&		1281548	0					
ANR	1281705	ArrayIndexing	p -> pole [ 3 ] [ 0 ]		1281548	1					
ANR	1281706	ArrayIndexing	p -> pole [ 3 ]		1281548	0					
ANR	1281707	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281708	Identifier	p		1281548	0					
ANR	1281709	Identifier	pole		1281548	1					
ANR	1281710	PrimaryExpression	3		1281548	1					
ANR	1281711	PrimaryExpression	0		1281548	1					
ANR	1281712	Argument	& p -> pole [ 2 ] [ 0 ]		1281548	1					
ANR	1281713	UnaryOperationExpression	& p -> pole [ 2 ] [ 0 ]		1281548	0					
ANR	1281714	UnaryOperator	&		1281548	0					
ANR	1281715	ArrayIndexing	p -> pole [ 2 ] [ 0 ]		1281548	1					
ANR	1281716	ArrayIndexing	p -> pole [ 2 ]		1281548	0					
ANR	1281717	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281718	Identifier	p		1281548	0					
ANR	1281719	Identifier	pole		1281548	1					
ANR	1281720	PrimaryExpression	2		1281548	1					
ANR	1281721	PrimaryExpression	0		1281548	1					
ANR	1281722	Argument	& p -> pole [ 3 ] [ 1 ]		1281548	2					
ANR	1281723	UnaryOperationExpression	& p -> pole [ 3 ] [ 1 ]		1281548	0					
ANR	1281724	UnaryOperator	&		1281548	0					
ANR	1281725	ArrayIndexing	p -> pole [ 3 ] [ 1 ]		1281548	1					
ANR	1281726	ArrayIndexing	p -> pole [ 3 ]		1281548	0					
ANR	1281727	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281728	Identifier	p		1281548	0					
ANR	1281729	Identifier	pole		1281548	1					
ANR	1281730	PrimaryExpression	3		1281548	1					
ANR	1281731	PrimaryExpression	1		1281548	1					
ANR	1281732	ReturnStatement	return true ;	3801:8:143911:143922	1281548	1	True				
ANR	1281733	Identifier	true		1281548	0					
ANR	1281734	IfStatement	"if ( neqs ( & sign , vector_pair_orientation ( & p -> pole [ 1 ] [ 1 ] , & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 1 ] [ 2 ] ) ) )"		1281548	4					
ANR	1281735	Condition	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 1 ] [ 1 ] , & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 1 ] [ 2 ] ) )"	3803:8:143933:144016	1281548	0	True				
ANR	1281736	CallExpression	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 1 ] [ 1 ] , & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 1 ] [ 2 ] ) )"		1281548	0					
ANR	1281737	Callee	neqs		1281548	0					
ANR	1281738	Identifier	neqs		1281548	0					
ANR	1281739	ArgumentList	& sign		1281548	1					
ANR	1281740	Argument	& sign		1281548	0					
ANR	1281741	UnaryOperationExpression	& sign		1281548	0					
ANR	1281742	UnaryOperator	&		1281548	0					
ANR	1281743	Identifier	sign		1281548	1					
ANR	1281744	Argument	"vector_pair_orientation ( & p -> pole [ 1 ] [ 1 ] , & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 1 ] [ 2 ] )"		1281548	1					
ANR	1281745	CallExpression	"vector_pair_orientation ( & p -> pole [ 1 ] [ 1 ] , & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 1 ] [ 2 ] )"		1281548	0					
ANR	1281746	Callee	vector_pair_orientation		1281548	0					
ANR	1281747	Identifier	vector_pair_orientation		1281548	0					
ANR	1281748	ArgumentList	& p -> pole [ 1 ] [ 1 ]		1281548	1					
ANR	1281749	Argument	& p -> pole [ 1 ] [ 1 ]		1281548	0					
ANR	1281750	UnaryOperationExpression	& p -> pole [ 1 ] [ 1 ]		1281548	0					
ANR	1281751	UnaryOperator	&		1281548	0					
ANR	1281752	ArrayIndexing	p -> pole [ 1 ] [ 1 ]		1281548	1					
ANR	1281753	ArrayIndexing	p -> pole [ 1 ]		1281548	0					
ANR	1281754	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281755	Identifier	p		1281548	0					
ANR	1281756	Identifier	pole		1281548	1					
ANR	1281757	PrimaryExpression	1		1281548	1					
ANR	1281758	PrimaryExpression	1		1281548	1					
ANR	1281759	Argument	& p -> pole [ 2 ] [ 1 ]		1281548	1					
ANR	1281760	UnaryOperationExpression	& p -> pole [ 2 ] [ 1 ]		1281548	0					
ANR	1281761	UnaryOperator	&		1281548	0					
ANR	1281762	ArrayIndexing	p -> pole [ 2 ] [ 1 ]		1281548	1					
ANR	1281763	ArrayIndexing	p -> pole [ 2 ]		1281548	0					
ANR	1281764	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281765	Identifier	p		1281548	0					
ANR	1281766	Identifier	pole		1281548	1					
ANR	1281767	PrimaryExpression	2		1281548	1					
ANR	1281768	PrimaryExpression	1		1281548	1					
ANR	1281769	Argument	& p -> pole [ 1 ] [ 2 ]		1281548	2					
ANR	1281770	UnaryOperationExpression	& p -> pole [ 1 ] [ 2 ]		1281548	0					
ANR	1281771	UnaryOperator	&		1281548	0					
ANR	1281772	ArrayIndexing	p -> pole [ 1 ] [ 2 ]		1281548	1					
ANR	1281773	ArrayIndexing	p -> pole [ 1 ]		1281548	0					
ANR	1281774	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281775	Identifier	p		1281548	0					
ANR	1281776	Identifier	pole		1281548	1					
ANR	1281777	PrimaryExpression	1		1281548	1					
ANR	1281778	PrimaryExpression	2		1281548	1					
ANR	1281779	ReturnStatement	return true ;	3804:8:144027:144038	1281548	1	True				
ANR	1281780	Identifier	true		1281548	0					
ANR	1281781	IfStatement	"if ( neqs ( & sign , vector_pair_orientation ( & p -> pole [ 1 ] [ 1 ] , & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 1 ] [ 2 ] ) ) )"		1281548	5					
ANR	1281782	Condition	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 1 ] [ 1 ] , & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 1 ] [ 2 ] ) )"	3805:8:144048:144131	1281548	0	True				
ANR	1281783	CallExpression	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 1 ] [ 1 ] , & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 1 ] [ 2 ] ) )"		1281548	0					
ANR	1281784	Callee	neqs		1281548	0					
ANR	1281785	Identifier	neqs		1281548	0					
ANR	1281786	ArgumentList	& sign		1281548	1					
ANR	1281787	Argument	& sign		1281548	0					
ANR	1281788	UnaryOperationExpression	& sign		1281548	0					
ANR	1281789	UnaryOperator	&		1281548	0					
ANR	1281790	Identifier	sign		1281548	1					
ANR	1281791	Argument	"vector_pair_orientation ( & p -> pole [ 1 ] [ 1 ] , & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 1 ] [ 2 ] )"		1281548	1					
ANR	1281792	CallExpression	"vector_pair_orientation ( & p -> pole [ 1 ] [ 1 ] , & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 1 ] [ 2 ] )"		1281548	0					
ANR	1281793	Callee	vector_pair_orientation		1281548	0					
ANR	1281794	Identifier	vector_pair_orientation		1281548	0					
ANR	1281795	ArgumentList	& p -> pole [ 1 ] [ 1 ]		1281548	1					
ANR	1281796	Argument	& p -> pole [ 1 ] [ 1 ]		1281548	0					
ANR	1281797	UnaryOperationExpression	& p -> pole [ 1 ] [ 1 ]		1281548	0					
ANR	1281798	UnaryOperator	&		1281548	0					
ANR	1281799	ArrayIndexing	p -> pole [ 1 ] [ 1 ]		1281548	1					
ANR	1281800	ArrayIndexing	p -> pole [ 1 ]		1281548	0					
ANR	1281801	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281802	Identifier	p		1281548	0					
ANR	1281803	Identifier	pole		1281548	1					
ANR	1281804	PrimaryExpression	1		1281548	1					
ANR	1281805	PrimaryExpression	1		1281548	1					
ANR	1281806	Argument	& p -> pole [ 2 ] [ 1 ]		1281548	1					
ANR	1281807	UnaryOperationExpression	& p -> pole [ 2 ] [ 1 ]		1281548	0					
ANR	1281808	UnaryOperator	&		1281548	0					
ANR	1281809	ArrayIndexing	p -> pole [ 2 ] [ 1 ]		1281548	1					
ANR	1281810	ArrayIndexing	p -> pole [ 2 ]		1281548	0					
ANR	1281811	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281812	Identifier	p		1281548	0					
ANR	1281813	Identifier	pole		1281548	1					
ANR	1281814	PrimaryExpression	2		1281548	1					
ANR	1281815	PrimaryExpression	1		1281548	1					
ANR	1281816	Argument	& p -> pole [ 1 ] [ 2 ]		1281548	2					
ANR	1281817	UnaryOperationExpression	& p -> pole [ 1 ] [ 2 ]		1281548	0					
ANR	1281818	UnaryOperator	&		1281548	0					
ANR	1281819	ArrayIndexing	p -> pole [ 1 ] [ 2 ]		1281548	1					
ANR	1281820	ArrayIndexing	p -> pole [ 1 ]		1281548	0					
ANR	1281821	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281822	Identifier	p		1281548	0					
ANR	1281823	Identifier	pole		1281548	1					
ANR	1281824	PrimaryExpression	1		1281548	1					
ANR	1281825	PrimaryExpression	2		1281548	1					
ANR	1281826	ReturnStatement	return true ;	3806:8:144142:144153	1281548	1	True				
ANR	1281827	Identifier	true		1281548	0					
ANR	1281828	IfStatement	"if ( neqs ( & sign , vector_pair_orientation ( & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 3 ] [ 1 ] , & p -> pole [ 2 ] [ 2 ] ) ) )"		1281548	6					
ANR	1281829	Condition	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 3 ] [ 1 ] , & p -> pole [ 2 ] [ 2 ] ) )"	3807:8:144163:144246	1281548	0	True				
ANR	1281830	CallExpression	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 3 ] [ 1 ] , & p -> pole [ 2 ] [ 2 ] ) )"		1281548	0					
ANR	1281831	Callee	neqs		1281548	0					
ANR	1281832	Identifier	neqs		1281548	0					
ANR	1281833	ArgumentList	& sign		1281548	1					
ANR	1281834	Argument	& sign		1281548	0					
ANR	1281835	UnaryOperationExpression	& sign		1281548	0					
ANR	1281836	UnaryOperator	&		1281548	0					
ANR	1281837	Identifier	sign		1281548	1					
ANR	1281838	Argument	"vector_pair_orientation ( & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 3 ] [ 1 ] , & p -> pole [ 2 ] [ 2 ] )"		1281548	1					
ANR	1281839	CallExpression	"vector_pair_orientation ( & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 3 ] [ 1 ] , & p -> pole [ 2 ] [ 2 ] )"		1281548	0					
ANR	1281840	Callee	vector_pair_orientation		1281548	0					
ANR	1281841	Identifier	vector_pair_orientation		1281548	0					
ANR	1281842	ArgumentList	& p -> pole [ 2 ] [ 1 ]		1281548	1					
ANR	1281843	Argument	& p -> pole [ 2 ] [ 1 ]		1281548	0					
ANR	1281844	UnaryOperationExpression	& p -> pole [ 2 ] [ 1 ]		1281548	0					
ANR	1281845	UnaryOperator	&		1281548	0					
ANR	1281846	ArrayIndexing	p -> pole [ 2 ] [ 1 ]		1281548	1					
ANR	1281847	ArrayIndexing	p -> pole [ 2 ]		1281548	0					
ANR	1281848	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281849	Identifier	p		1281548	0					
ANR	1281850	Identifier	pole		1281548	1					
ANR	1281851	PrimaryExpression	2		1281548	1					
ANR	1281852	PrimaryExpression	1		1281548	1					
ANR	1281853	Argument	& p -> pole [ 3 ] [ 1 ]		1281548	1					
ANR	1281854	UnaryOperationExpression	& p -> pole [ 3 ] [ 1 ]		1281548	0					
ANR	1281855	UnaryOperator	&		1281548	0					
ANR	1281856	ArrayIndexing	p -> pole [ 3 ] [ 1 ]		1281548	1					
ANR	1281857	ArrayIndexing	p -> pole [ 3 ]		1281548	0					
ANR	1281858	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281859	Identifier	p		1281548	0					
ANR	1281860	Identifier	pole		1281548	1					
ANR	1281861	PrimaryExpression	3		1281548	1					
ANR	1281862	PrimaryExpression	1		1281548	1					
ANR	1281863	Argument	& p -> pole [ 2 ] [ 2 ]		1281548	2					
ANR	1281864	UnaryOperationExpression	& p -> pole [ 2 ] [ 2 ]		1281548	0					
ANR	1281865	UnaryOperator	&		1281548	0					
ANR	1281866	ArrayIndexing	p -> pole [ 2 ] [ 2 ]		1281548	1					
ANR	1281867	ArrayIndexing	p -> pole [ 2 ]		1281548	0					
ANR	1281868	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281869	Identifier	p		1281548	0					
ANR	1281870	Identifier	pole		1281548	1					
ANR	1281871	PrimaryExpression	2		1281548	1					
ANR	1281872	PrimaryExpression	2		1281548	1					
ANR	1281873	ReturnStatement	return true ;	3808:8:144257:144268	1281548	1	True				
ANR	1281874	Identifier	true		1281548	0					
ANR	1281875	IfStatement	"if ( neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 3 ] [ 1 ] , & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 3 ] [ 2 ] ) ) )"		1281548	7					
ANR	1281876	Condition	"neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 3 ] [ 1 ] , & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 3 ] [ 2 ] ) )"	3809:8:144278:144362	1281548	0	True				
ANR	1281877	CallExpression	"neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 3 ] [ 1 ] , & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 3 ] [ 2 ] ) )"		1281548	0					
ANR	1281878	Callee	neqs		1281548	0					
ANR	1281879	Identifier	neqs		1281548	0					
ANR	1281880	ArgumentList	& sign		1281548	1					
ANR	1281881	Argument	& sign		1281548	0					
ANR	1281882	UnaryOperationExpression	& sign		1281548	0					
ANR	1281883	UnaryOperator	&		1281548	0					
ANR	1281884	Identifier	sign		1281548	1					
ANR	1281885	Argument	"- vector_pair_orientation ( & p -> pole [ 3 ] [ 1 ] , & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 3 ] [ 2 ] )"		1281548	1					
ANR	1281886	UnaryOperationExpression	"- vector_pair_orientation ( & p -> pole [ 3 ] [ 1 ] , & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 3 ] [ 2 ] )"		1281548	0					
ANR	1281887	UnaryOperator	-		1281548	0					
ANR	1281888	CallExpression	"vector_pair_orientation ( & p -> pole [ 3 ] [ 1 ] , & p -> pole [ 2 ] [ 1 ] , & p -> pole [ 3 ] [ 2 ] )"		1281548	1					
ANR	1281889	Callee	vector_pair_orientation		1281548	0					
ANR	1281890	Identifier	vector_pair_orientation		1281548	0					
ANR	1281891	ArgumentList	& p -> pole [ 3 ] [ 1 ]		1281548	1					
ANR	1281892	Argument	& p -> pole [ 3 ] [ 1 ]		1281548	0					
ANR	1281893	UnaryOperationExpression	& p -> pole [ 3 ] [ 1 ]		1281548	0					
ANR	1281894	UnaryOperator	&		1281548	0					
ANR	1281895	ArrayIndexing	p -> pole [ 3 ] [ 1 ]		1281548	1					
ANR	1281896	ArrayIndexing	p -> pole [ 3 ]		1281548	0					
ANR	1281897	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281898	Identifier	p		1281548	0					
ANR	1281899	Identifier	pole		1281548	1					
ANR	1281900	PrimaryExpression	3		1281548	1					
ANR	1281901	PrimaryExpression	1		1281548	1					
ANR	1281902	Argument	& p -> pole [ 2 ] [ 1 ]		1281548	1					
ANR	1281903	UnaryOperationExpression	& p -> pole [ 2 ] [ 1 ]		1281548	0					
ANR	1281904	UnaryOperator	&		1281548	0					
ANR	1281905	ArrayIndexing	p -> pole [ 2 ] [ 1 ]		1281548	1					
ANR	1281906	ArrayIndexing	p -> pole [ 2 ]		1281548	0					
ANR	1281907	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281908	Identifier	p		1281548	0					
ANR	1281909	Identifier	pole		1281548	1					
ANR	1281910	PrimaryExpression	2		1281548	1					
ANR	1281911	PrimaryExpression	1		1281548	1					
ANR	1281912	Argument	& p -> pole [ 3 ] [ 2 ]		1281548	2					
ANR	1281913	UnaryOperationExpression	& p -> pole [ 3 ] [ 2 ]		1281548	0					
ANR	1281914	UnaryOperator	&		1281548	0					
ANR	1281915	ArrayIndexing	p -> pole [ 3 ] [ 2 ]		1281548	1					
ANR	1281916	ArrayIndexing	p -> pole [ 3 ]		1281548	0					
ANR	1281917	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281918	Identifier	p		1281548	0					
ANR	1281919	Identifier	pole		1281548	1					
ANR	1281920	PrimaryExpression	3		1281548	1					
ANR	1281921	PrimaryExpression	2		1281548	1					
ANR	1281922	ReturnStatement	return true ;	3810:8:144373:144384	1281548	1	True				
ANR	1281923	Identifier	true		1281548	0					
ANR	1281924	IfStatement	"if ( neqs ( & sign , vector_pair_orientation ( & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 1 ] [ 3 ] ) ) )"		1281548	8					
ANR	1281925	Condition	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 1 ] [ 3 ] ) )"	3812:8:144395:144478	1281548	0	True				
ANR	1281926	CallExpression	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 1 ] [ 3 ] ) )"		1281548	0					
ANR	1281927	Callee	neqs		1281548	0					
ANR	1281928	Identifier	neqs		1281548	0					
ANR	1281929	ArgumentList	& sign		1281548	1					
ANR	1281930	Argument	& sign		1281548	0					
ANR	1281931	UnaryOperationExpression	& sign		1281548	0					
ANR	1281932	UnaryOperator	&		1281548	0					
ANR	1281933	Identifier	sign		1281548	1					
ANR	1281934	Argument	"vector_pair_orientation ( & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 1 ] [ 3 ] )"		1281548	1					
ANR	1281935	CallExpression	"vector_pair_orientation ( & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 1 ] [ 3 ] )"		1281548	0					
ANR	1281936	Callee	vector_pair_orientation		1281548	0					
ANR	1281937	Identifier	vector_pair_orientation		1281548	0					
ANR	1281938	ArgumentList	& p -> pole [ 1 ] [ 2 ]		1281548	1					
ANR	1281939	Argument	& p -> pole [ 1 ] [ 2 ]		1281548	0					
ANR	1281940	UnaryOperationExpression	& p -> pole [ 1 ] [ 2 ]		1281548	0					
ANR	1281941	UnaryOperator	&		1281548	0					
ANR	1281942	ArrayIndexing	p -> pole [ 1 ] [ 2 ]		1281548	1					
ANR	1281943	ArrayIndexing	p -> pole [ 1 ]		1281548	0					
ANR	1281944	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281945	Identifier	p		1281548	0					
ANR	1281946	Identifier	pole		1281548	1					
ANR	1281947	PrimaryExpression	1		1281548	1					
ANR	1281948	PrimaryExpression	2		1281548	1					
ANR	1281949	Argument	& p -> pole [ 2 ] [ 2 ]		1281548	1					
ANR	1281950	UnaryOperationExpression	& p -> pole [ 2 ] [ 2 ]		1281548	0					
ANR	1281951	UnaryOperator	&		1281548	0					
ANR	1281952	ArrayIndexing	p -> pole [ 2 ] [ 2 ]		1281548	1					
ANR	1281953	ArrayIndexing	p -> pole [ 2 ]		1281548	0					
ANR	1281954	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281955	Identifier	p		1281548	0					
ANR	1281956	Identifier	pole		1281548	1					
ANR	1281957	PrimaryExpression	2		1281548	1					
ANR	1281958	PrimaryExpression	2		1281548	1					
ANR	1281959	Argument	& p -> pole [ 1 ] [ 3 ]		1281548	2					
ANR	1281960	UnaryOperationExpression	& p -> pole [ 1 ] [ 3 ]		1281548	0					
ANR	1281961	UnaryOperator	&		1281548	0					
ANR	1281962	ArrayIndexing	p -> pole [ 1 ] [ 3 ]		1281548	1					
ANR	1281963	ArrayIndexing	p -> pole [ 1 ]		1281548	0					
ANR	1281964	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281965	Identifier	p		1281548	0					
ANR	1281966	Identifier	pole		1281548	1					
ANR	1281967	PrimaryExpression	1		1281548	1					
ANR	1281968	PrimaryExpression	3		1281548	1					
ANR	1281969	ReturnStatement	return true ;	3813:8:144489:144500	1281548	1	True				
ANR	1281970	Identifier	true		1281548	0					
ANR	1281971	IfStatement	"if ( neqs ( & sign , vector_pair_orientation ( & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 1 ] [ 3 ] ) ) )"		1281548	9					
ANR	1281972	Condition	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 1 ] [ 3 ] ) )"	3814:8:144510:144593	1281548	0	True				
ANR	1281973	CallExpression	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 1 ] [ 3 ] ) )"		1281548	0					
ANR	1281974	Callee	neqs		1281548	0					
ANR	1281975	Identifier	neqs		1281548	0					
ANR	1281976	ArgumentList	& sign		1281548	1					
ANR	1281977	Argument	& sign		1281548	0					
ANR	1281978	UnaryOperationExpression	& sign		1281548	0					
ANR	1281979	UnaryOperator	&		1281548	0					
ANR	1281980	Identifier	sign		1281548	1					
ANR	1281981	Argument	"vector_pair_orientation ( & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 1 ] [ 3 ] )"		1281548	1					
ANR	1281982	CallExpression	"vector_pair_orientation ( & p -> pole [ 1 ] [ 2 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 1 ] [ 3 ] )"		1281548	0					
ANR	1281983	Callee	vector_pair_orientation		1281548	0					
ANR	1281984	Identifier	vector_pair_orientation		1281548	0					
ANR	1281985	ArgumentList	& p -> pole [ 1 ] [ 2 ]		1281548	1					
ANR	1281986	Argument	& p -> pole [ 1 ] [ 2 ]		1281548	0					
ANR	1281987	UnaryOperationExpression	& p -> pole [ 1 ] [ 2 ]		1281548	0					
ANR	1281988	UnaryOperator	&		1281548	0					
ANR	1281989	ArrayIndexing	p -> pole [ 1 ] [ 2 ]		1281548	1					
ANR	1281990	ArrayIndexing	p -> pole [ 1 ]		1281548	0					
ANR	1281991	PtrMemberAccess	p -> pole		1281548	0					
ANR	1281992	Identifier	p		1281548	0					
ANR	1281993	Identifier	pole		1281548	1					
ANR	1281994	PrimaryExpression	1		1281548	1					
ANR	1281995	PrimaryExpression	2		1281548	1					
ANR	1281996	Argument	& p -> pole [ 2 ] [ 2 ]		1281548	1					
ANR	1281997	UnaryOperationExpression	& p -> pole [ 2 ] [ 2 ]		1281548	0					
ANR	1281998	UnaryOperator	&		1281548	0					
ANR	1281999	ArrayIndexing	p -> pole [ 2 ] [ 2 ]		1281548	1					
ANR	1282000	ArrayIndexing	p -> pole [ 2 ]		1281548	0					
ANR	1282001	PtrMemberAccess	p -> pole		1281548	0					
ANR	1282002	Identifier	p		1281548	0					
ANR	1282003	Identifier	pole		1281548	1					
ANR	1282004	PrimaryExpression	2		1281548	1					
ANR	1282005	PrimaryExpression	2		1281548	1					
ANR	1282006	Argument	& p -> pole [ 1 ] [ 3 ]		1281548	2					
ANR	1282007	UnaryOperationExpression	& p -> pole [ 1 ] [ 3 ]		1281548	0					
ANR	1282008	UnaryOperator	&		1281548	0					
ANR	1282009	ArrayIndexing	p -> pole [ 1 ] [ 3 ]		1281548	1					
ANR	1282010	ArrayIndexing	p -> pole [ 1 ]		1281548	0					
ANR	1282011	PtrMemberAccess	p -> pole		1281548	0					
ANR	1282012	Identifier	p		1281548	0					
ANR	1282013	Identifier	pole		1281548	1					
ANR	1282014	PrimaryExpression	1		1281548	1					
ANR	1282015	PrimaryExpression	3		1281548	1					
ANR	1282016	ReturnStatement	return true ;	3815:8:144604:144615	1281548	1	True				
ANR	1282017	Identifier	true		1281548	0					
ANR	1282018	IfStatement	"if ( neqs ( & sign , vector_pair_orientation ( & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 3 ] ) ) )"		1281548	10					
ANR	1282019	Condition	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 3 ] ) )"	3816:8:144625:144708	1281548	0	True				
ANR	1282020	CallExpression	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 3 ] ) )"		1281548	0					
ANR	1282021	Callee	neqs		1281548	0					
ANR	1282022	Identifier	neqs		1281548	0					
ANR	1282023	ArgumentList	& sign		1281548	1					
ANR	1282024	Argument	& sign		1281548	0					
ANR	1282025	UnaryOperationExpression	& sign		1281548	0					
ANR	1282026	UnaryOperator	&		1281548	0					
ANR	1282027	Identifier	sign		1281548	1					
ANR	1282028	Argument	"vector_pair_orientation ( & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 3 ] )"		1281548	1					
ANR	1282029	CallExpression	"vector_pair_orientation ( & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 3 ] )"		1281548	0					
ANR	1282030	Callee	vector_pair_orientation		1281548	0					
ANR	1282031	Identifier	vector_pair_orientation		1281548	0					
ANR	1282032	ArgumentList	& p -> pole [ 2 ] [ 2 ]		1281548	1					
ANR	1282033	Argument	& p -> pole [ 2 ] [ 2 ]		1281548	0					
ANR	1282034	UnaryOperationExpression	& p -> pole [ 2 ] [ 2 ]		1281548	0					
ANR	1282035	UnaryOperator	&		1281548	0					
ANR	1282036	ArrayIndexing	p -> pole [ 2 ] [ 2 ]		1281548	1					
ANR	1282037	ArrayIndexing	p -> pole [ 2 ]		1281548	0					
ANR	1282038	PtrMemberAccess	p -> pole		1281548	0					
ANR	1282039	Identifier	p		1281548	0					
ANR	1282040	Identifier	pole		1281548	1					
ANR	1282041	PrimaryExpression	2		1281548	1					
ANR	1282042	PrimaryExpression	2		1281548	1					
ANR	1282043	Argument	& p -> pole [ 3 ] [ 2 ]		1281548	1					
ANR	1282044	UnaryOperationExpression	& p -> pole [ 3 ] [ 2 ]		1281548	0					
ANR	1282045	UnaryOperator	&		1281548	0					
ANR	1282046	ArrayIndexing	p -> pole [ 3 ] [ 2 ]		1281548	1					
ANR	1282047	ArrayIndexing	p -> pole [ 3 ]		1281548	0					
ANR	1282048	PtrMemberAccess	p -> pole		1281548	0					
ANR	1282049	Identifier	p		1281548	0					
ANR	1282050	Identifier	pole		1281548	1					
ANR	1282051	PrimaryExpression	3		1281548	1					
ANR	1282052	PrimaryExpression	2		1281548	1					
ANR	1282053	Argument	& p -> pole [ 2 ] [ 3 ]		1281548	2					
ANR	1282054	UnaryOperationExpression	& p -> pole [ 2 ] [ 3 ]		1281548	0					
ANR	1282055	UnaryOperator	&		1281548	0					
ANR	1282056	ArrayIndexing	p -> pole [ 2 ] [ 3 ]		1281548	1					
ANR	1282057	ArrayIndexing	p -> pole [ 2 ]		1281548	0					
ANR	1282058	PtrMemberAccess	p -> pole		1281548	0					
ANR	1282059	Identifier	p		1281548	0					
ANR	1282060	Identifier	pole		1281548	1					
ANR	1282061	PrimaryExpression	2		1281548	1					
ANR	1282062	PrimaryExpression	3		1281548	1					
ANR	1282063	ReturnStatement	return true ;	3817:8:144719:144730	1281548	1	True				
ANR	1282064	Identifier	true		1281548	0					
ANR	1282065	IfStatement	"if ( neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 3 ] [ 3 ] ) ) )"		1281548	11					
ANR	1282066	Condition	"neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 3 ] [ 3 ] ) )"	3818:8:144740:144824	1281548	0	True				
ANR	1282067	CallExpression	"neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 3 ] [ 3 ] ) )"		1281548	0					
ANR	1282068	Callee	neqs		1281548	0					
ANR	1282069	Identifier	neqs		1281548	0					
ANR	1282070	ArgumentList	& sign		1281548	1					
ANR	1282071	Argument	& sign		1281548	0					
ANR	1282072	UnaryOperationExpression	& sign		1281548	0					
ANR	1282073	UnaryOperator	&		1281548	0					
ANR	1282074	Identifier	sign		1281548	1					
ANR	1282075	Argument	"- vector_pair_orientation ( & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 3 ] [ 3 ] )"		1281548	1					
ANR	1282076	UnaryOperationExpression	"- vector_pair_orientation ( & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 3 ] [ 3 ] )"		1281548	0					
ANR	1282077	UnaryOperator	-		1281548	0					
ANR	1282078	CallExpression	"vector_pair_orientation ( & p -> pole [ 3 ] [ 2 ] , & p -> pole [ 2 ] [ 2 ] , & p -> pole [ 3 ] [ 3 ] )"		1281548	1					
ANR	1282079	Callee	vector_pair_orientation		1281548	0					
ANR	1282080	Identifier	vector_pair_orientation		1281548	0					
ANR	1282081	ArgumentList	& p -> pole [ 3 ] [ 2 ]		1281548	1					
ANR	1282082	Argument	& p -> pole [ 3 ] [ 2 ]		1281548	0					
ANR	1282083	UnaryOperationExpression	& p -> pole [ 3 ] [ 2 ]		1281548	0					
ANR	1282084	UnaryOperator	&		1281548	0					
ANR	1282085	ArrayIndexing	p -> pole [ 3 ] [ 2 ]		1281548	1					
ANR	1282086	ArrayIndexing	p -> pole [ 3 ]		1281548	0					
ANR	1282087	PtrMemberAccess	p -> pole		1281548	0					
ANR	1282088	Identifier	p		1281548	0					
ANR	1282089	Identifier	pole		1281548	1					
ANR	1282090	PrimaryExpression	3		1281548	1					
ANR	1282091	PrimaryExpression	2		1281548	1					
ANR	1282092	Argument	& p -> pole [ 2 ] [ 2 ]		1281548	1					
ANR	1282093	UnaryOperationExpression	& p -> pole [ 2 ] [ 2 ]		1281548	0					
ANR	1282094	UnaryOperator	&		1281548	0					
ANR	1282095	ArrayIndexing	p -> pole [ 2 ] [ 2 ]		1281548	1					
ANR	1282096	ArrayIndexing	p -> pole [ 2 ]		1281548	0					
ANR	1282097	PtrMemberAccess	p -> pole		1281548	0					
ANR	1282098	Identifier	p		1281548	0					
ANR	1282099	Identifier	pole		1281548	1					
ANR	1282100	PrimaryExpression	2		1281548	1					
ANR	1282101	PrimaryExpression	2		1281548	1					
ANR	1282102	Argument	& p -> pole [ 3 ] [ 3 ]		1281548	2					
ANR	1282103	UnaryOperationExpression	& p -> pole [ 3 ] [ 3 ]		1281548	0					
ANR	1282104	UnaryOperator	&		1281548	0					
ANR	1282105	ArrayIndexing	p -> pole [ 3 ] [ 3 ]		1281548	1					
ANR	1282106	ArrayIndexing	p -> pole [ 3 ]		1281548	0					
ANR	1282107	PtrMemberAccess	p -> pole		1281548	0					
ANR	1282108	Identifier	p		1281548	0					
ANR	1282109	Identifier	pole		1281548	1					
ANR	1282110	PrimaryExpression	3		1281548	1					
ANR	1282111	PrimaryExpression	3		1281548	1					
ANR	1282112	ReturnStatement	return true ;	3819:8:144835:144846	1281548	1	True				
ANR	1282113	Identifier	true		1281548	0					
ANR	1282114	IfStatement	"if ( neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 1 ] [ 3 ] , & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 1 ] [ 2 ] ) ) )"		1281548	12					
ANR	1282115	Condition	"neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 1 ] [ 3 ] , & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 1 ] [ 2 ] ) )"	3821:8:144857:144941	1281548	0	True				
ANR	1282116	CallExpression	"neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 1 ] [ 3 ] , & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 1 ] [ 2 ] ) )"		1281548	0					
ANR	1282117	Callee	neqs		1281548	0					
ANR	1282118	Identifier	neqs		1281548	0					
ANR	1282119	ArgumentList	& sign		1281548	1					
ANR	1282120	Argument	& sign		1281548	0					
ANR	1282121	UnaryOperationExpression	& sign		1281548	0					
ANR	1282122	UnaryOperator	&		1281548	0					
ANR	1282123	Identifier	sign		1281548	1					
ANR	1282124	Argument	"- vector_pair_orientation ( & p -> pole [ 1 ] [ 3 ] , & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 1 ] [ 2 ] )"		1281548	1					
ANR	1282125	UnaryOperationExpression	"- vector_pair_orientation ( & p -> pole [ 1 ] [ 3 ] , & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 1 ] [ 2 ] )"		1281548	0					
ANR	1282126	UnaryOperator	-		1281548	0					
ANR	1282127	CallExpression	"vector_pair_orientation ( & p -> pole [ 1 ] [ 3 ] , & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 1 ] [ 2 ] )"		1281548	1					
ANR	1282128	Callee	vector_pair_orientation		1281548	0					
ANR	1282129	Identifier	vector_pair_orientation		1281548	0					
ANR	1282130	ArgumentList	& p -> pole [ 1 ] [ 3 ]		1281548	1					
ANR	1282131	Argument	& p -> pole [ 1 ] [ 3 ]		1281548	0					
ANR	1282132	UnaryOperationExpression	& p -> pole [ 1 ] [ 3 ]		1281548	0					
ANR	1282133	UnaryOperator	&		1281548	0					
ANR	1282134	ArrayIndexing	p -> pole [ 1 ] [ 3 ]		1281548	1					
ANR	1282135	ArrayIndexing	p -> pole [ 1 ]		1281548	0					
ANR	1282136	PtrMemberAccess	p -> pole		1281548	0					
ANR	1282137	Identifier	p		1281548	0					
ANR	1282138	Identifier	pole		1281548	1					
ANR	1282139	PrimaryExpression	1		1281548	1					
ANR	1282140	PrimaryExpression	3		1281548	1					
ANR	1282141	Argument	& p -> pole [ 2 ] [ 3 ]		1281548	1					
ANR	1282142	UnaryOperationExpression	& p -> pole [ 2 ] [ 3 ]		1281548	0					
ANR	1282143	UnaryOperator	&		1281548	0					
ANR	1282144	ArrayIndexing	p -> pole [ 2 ] [ 3 ]		1281548	1					
ANR	1282145	ArrayIndexing	p -> pole [ 2 ]		1281548	0					
ANR	1282146	PtrMemberAccess	p -> pole		1281548	0					
ANR	1282147	Identifier	p		1281548	0					
ANR	1282148	Identifier	pole		1281548	1					
ANR	1282149	PrimaryExpression	2		1281548	1					
ANR	1282150	PrimaryExpression	3		1281548	1					
ANR	1282151	Argument	& p -> pole [ 1 ] [ 2 ]		1281548	2					
ANR	1282152	UnaryOperationExpression	& p -> pole [ 1 ] [ 2 ]		1281548	0					
ANR	1282153	UnaryOperator	&		1281548	0					
ANR	1282154	ArrayIndexing	p -> pole [ 1 ] [ 2 ]		1281548	1					
ANR	1282155	ArrayIndexing	p -> pole [ 1 ]		1281548	0					
ANR	1282156	PtrMemberAccess	p -> pole		1281548	0					
ANR	1282157	Identifier	p		1281548	0					
ANR	1282158	Identifier	pole		1281548	1					
ANR	1282159	PrimaryExpression	1		1281548	1					
ANR	1282160	PrimaryExpression	2		1281548	1					
ANR	1282161	ReturnStatement	return true ;	3822:8:144952:144963	1281548	1	True				
ANR	1282162	Identifier	true		1281548	0					
ANR	1282163	IfStatement	"if ( neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 1 ] [ 3 ] , & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 1 ] [ 2 ] ) ) )"		1281548	13					
ANR	1282164	Condition	"neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 1 ] [ 3 ] , & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 1 ] [ 2 ] ) )"	3823:8:144973:145057	1281548	0	True				
ANR	1282165	CallExpression	"neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 1 ] [ 3 ] , & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 1 ] [ 2 ] ) )"		1281548	0					
ANR	1282166	Callee	neqs		1281548	0					
ANR	1282167	Identifier	neqs		1281548	0					
ANR	1282168	ArgumentList	& sign		1281548	1					
ANR	1282169	Argument	& sign		1281548	0					
ANR	1282170	UnaryOperationExpression	& sign		1281548	0					
ANR	1282171	UnaryOperator	&		1281548	0					
ANR	1282172	Identifier	sign		1281548	1					
ANR	1282173	Argument	"- vector_pair_orientation ( & p -> pole [ 1 ] [ 3 ] , & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 1 ] [ 2 ] )"		1281548	1					
ANR	1282174	UnaryOperationExpression	"- vector_pair_orientation ( & p -> pole [ 1 ] [ 3 ] , & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 1 ] [ 2 ] )"		1281548	0					
ANR	1282175	UnaryOperator	-		1281548	0					
ANR	1282176	CallExpression	"vector_pair_orientation ( & p -> pole [ 1 ] [ 3 ] , & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 1 ] [ 2 ] )"		1281548	1					
ANR	1282177	Callee	vector_pair_orientation		1281548	0					
ANR	1282178	Identifier	vector_pair_orientation		1281548	0					
ANR	1282179	ArgumentList	& p -> pole [ 1 ] [ 3 ]		1281548	1					
ANR	1282180	Argument	& p -> pole [ 1 ] [ 3 ]		1281548	0					
ANR	1282181	UnaryOperationExpression	& p -> pole [ 1 ] [ 3 ]		1281548	0					
ANR	1282182	UnaryOperator	&		1281548	0					
ANR	1282183	ArrayIndexing	p -> pole [ 1 ] [ 3 ]		1281548	1					
ANR	1282184	ArrayIndexing	p -> pole [ 1 ]		1281548	0					
ANR	1282185	PtrMemberAccess	p -> pole		1281548	0					
ANR	1282186	Identifier	p		1281548	0					
ANR	1282187	Identifier	pole		1281548	1					
ANR	1282188	PrimaryExpression	1		1281548	1					
ANR	1282189	PrimaryExpression	3		1281548	1					
ANR	1282190	Argument	& p -> pole [ 2 ] [ 3 ]		1281548	1					
ANR	1282191	UnaryOperationExpression	& p -> pole [ 2 ] [ 3 ]		1281548	0					
ANR	1282192	UnaryOperator	&		1281548	0					
ANR	1282193	ArrayIndexing	p -> pole [ 2 ] [ 3 ]		1281548	1					
ANR	1282194	ArrayIndexing	p -> pole [ 2 ]		1281548	0					
ANR	1282195	PtrMemberAccess	p -> pole		1281548	0					
ANR	1282196	Identifier	p		1281548	0					
ANR	1282197	Identifier	pole		1281548	1					
ANR	1282198	PrimaryExpression	2		1281548	1					
ANR	1282199	PrimaryExpression	3		1281548	1					
ANR	1282200	Argument	& p -> pole [ 1 ] [ 2 ]		1281548	2					
ANR	1282201	UnaryOperationExpression	& p -> pole [ 1 ] [ 2 ]		1281548	0					
ANR	1282202	UnaryOperator	&		1281548	0					
ANR	1282203	ArrayIndexing	p -> pole [ 1 ] [ 2 ]		1281548	1					
ANR	1282204	ArrayIndexing	p -> pole [ 1 ]		1281548	0					
ANR	1282205	PtrMemberAccess	p -> pole		1281548	0					
ANR	1282206	Identifier	p		1281548	0					
ANR	1282207	Identifier	pole		1281548	1					
ANR	1282208	PrimaryExpression	1		1281548	1					
ANR	1282209	PrimaryExpression	2		1281548	1					
ANR	1282210	ReturnStatement	return true ;	3824:8:145068:145079	1281548	1	True				
ANR	1282211	Identifier	true		1281548	0					
ANR	1282212	IfStatement	"if ( neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 3 ] [ 3 ] , & p -> pole [ 2 ] [ 2 ] ) ) )"		1281548	14					
ANR	1282213	Condition	"neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 3 ] [ 3 ] , & p -> pole [ 2 ] [ 2 ] ) )"	3825:8:145089:145173	1281548	0	True				
ANR	1282214	CallExpression	"neqs ( & sign , - vector_pair_orientation ( & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 3 ] [ 3 ] , & p -> pole [ 2 ] [ 2 ] ) )"		1281548	0					
ANR	1282215	Callee	neqs		1281548	0					
ANR	1282216	Identifier	neqs		1281548	0					
ANR	1282217	ArgumentList	& sign		1281548	1					
ANR	1282218	Argument	& sign		1281548	0					
ANR	1282219	UnaryOperationExpression	& sign		1281548	0					
ANR	1282220	UnaryOperator	&		1281548	0					
ANR	1282221	Identifier	sign		1281548	1					
ANR	1282222	Argument	"- vector_pair_orientation ( & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 3 ] [ 3 ] , & p -> pole [ 2 ] [ 2 ] )"		1281548	1					
ANR	1282223	UnaryOperationExpression	"- vector_pair_orientation ( & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 3 ] [ 3 ] , & p -> pole [ 2 ] [ 2 ] )"		1281548	0					
ANR	1282224	UnaryOperator	-		1281548	0					
ANR	1282225	CallExpression	"vector_pair_orientation ( & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 3 ] [ 3 ] , & p -> pole [ 2 ] [ 2 ] )"		1281548	1					
ANR	1282226	Callee	vector_pair_orientation		1281548	0					
ANR	1282227	Identifier	vector_pair_orientation		1281548	0					
ANR	1282228	ArgumentList	& p -> pole [ 2 ] [ 3 ]		1281548	1					
ANR	1282229	Argument	& p -> pole [ 2 ] [ 3 ]		1281548	0					
ANR	1282230	UnaryOperationExpression	& p -> pole [ 2 ] [ 3 ]		1281548	0					
ANR	1282231	UnaryOperator	&		1281548	0					
ANR	1282232	ArrayIndexing	p -> pole [ 2 ] [ 3 ]		1281548	1					
ANR	1282233	ArrayIndexing	p -> pole [ 2 ]		1281548	0					
ANR	1282234	PtrMemberAccess	p -> pole		1281548	0					
ANR	1282235	Identifier	p		1281548	0					
ANR	1282236	Identifier	pole		1281548	1					
ANR	1282237	PrimaryExpression	2		1281548	1					
ANR	1282238	PrimaryExpression	3		1281548	1					
ANR	1282239	Argument	& p -> pole [ 3 ] [ 3 ]		1281548	1					
ANR	1282240	UnaryOperationExpression	& p -> pole [ 3 ] [ 3 ]		1281548	0					
ANR	1282241	UnaryOperator	&		1281548	0					
ANR	1282242	ArrayIndexing	p -> pole [ 3 ] [ 3 ]		1281548	1					
ANR	1282243	ArrayIndexing	p -> pole [ 3 ]		1281548	0					
ANR	1282244	PtrMemberAccess	p -> pole		1281548	0					
ANR	1282245	Identifier	p		1281548	0					
ANR	1282246	Identifier	pole		1281548	1					
ANR	1282247	PrimaryExpression	3		1281548	1					
ANR	1282248	PrimaryExpression	3		1281548	1					
ANR	1282249	Argument	& p -> pole [ 2 ] [ 2 ]		1281548	2					
ANR	1282250	UnaryOperationExpression	& p -> pole [ 2 ] [ 2 ]		1281548	0					
ANR	1282251	UnaryOperator	&		1281548	0					
ANR	1282252	ArrayIndexing	p -> pole [ 2 ] [ 2 ]		1281548	1					
ANR	1282253	ArrayIndexing	p -> pole [ 2 ]		1281548	0					
ANR	1282254	PtrMemberAccess	p -> pole		1281548	0					
ANR	1282255	Identifier	p		1281548	0					
ANR	1282256	Identifier	pole		1281548	1					
ANR	1282257	PrimaryExpression	2		1281548	1					
ANR	1282258	PrimaryExpression	2		1281548	1					
ANR	1282259	ReturnStatement	return true ;	3826:8:145184:145195	1281548	1	True				
ANR	1282260	Identifier	true		1281548	0					
ANR	1282261	IfStatement	"if ( neqs ( & sign , vector_pair_orientation ( & p -> pole [ 3 ] [ 3 ] , & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 3 ] [ 2 ] ) ) )"		1281548	15					
ANR	1282262	Condition	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 3 ] [ 3 ] , & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 3 ] [ 2 ] ) )"	3827:8:145205:145288	1281548	0	True				
ANR	1282263	CallExpression	"neqs ( & sign , vector_pair_orientation ( & p -> pole [ 3 ] [ 3 ] , & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 3 ] [ 2 ] ) )"		1281548	0					
ANR	1282264	Callee	neqs		1281548	0					
ANR	1282265	Identifier	neqs		1281548	0					
ANR	1282266	ArgumentList	& sign		1281548	1					
ANR	1282267	Argument	& sign		1281548	0					
ANR	1282268	UnaryOperationExpression	& sign		1281548	0					
ANR	1282269	UnaryOperator	&		1281548	0					
ANR	1282270	Identifier	sign		1281548	1					
ANR	1282271	Argument	"vector_pair_orientation ( & p -> pole [ 3 ] [ 3 ] , & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 3 ] [ 2 ] )"		1281548	1					
ANR	1282272	CallExpression	"vector_pair_orientation ( & p -> pole [ 3 ] [ 3 ] , & p -> pole [ 2 ] [ 3 ] , & p -> pole [ 3 ] [ 2 ] )"		1281548	0					
ANR	1282273	Callee	vector_pair_orientation		1281548	0					
ANR	1282274	Identifier	vector_pair_orientation		1281548	0					
ANR	1282275	ArgumentList	& p -> pole [ 3 ] [ 3 ]		1281548	1					
ANR	1282276	Argument	& p -> pole [ 3 ] [ 3 ]		1281548	0					
ANR	1282277	UnaryOperationExpression	& p -> pole [ 3 ] [ 3 ]		1281548	0					
ANR	1282278	UnaryOperator	&		1281548	0					
ANR	1282279	ArrayIndexing	p -> pole [ 3 ] [ 3 ]		1281548	1					
ANR	1282280	ArrayIndexing	p -> pole [ 3 ]		1281548	0					
ANR	1282281	PtrMemberAccess	p -> pole		1281548	0					
ANR	1282282	Identifier	p		1281548	0					
ANR	1282283	Identifier	pole		1281548	1					
ANR	1282284	PrimaryExpression	3		1281548	1					
ANR	1282285	PrimaryExpression	3		1281548	1					
ANR	1282286	Argument	& p -> pole [ 2 ] [ 3 ]		1281548	1					
ANR	1282287	UnaryOperationExpression	& p -> pole [ 2 ] [ 3 ]		1281548	0					
ANR	1282288	UnaryOperator	&		1281548	0					
ANR	1282289	ArrayIndexing	p -> pole [ 2 ] [ 3 ]		1281548	1					
ANR	1282290	ArrayIndexing	p -> pole [ 2 ]		1281548	0					
ANR	1282291	PtrMemberAccess	p -> pole		1281548	0					
ANR	1282292	Identifier	p		1281548	0					
ANR	1282293	Identifier	pole		1281548	1					
ANR	1282294	PrimaryExpression	2		1281548	1					
ANR	1282295	PrimaryExpression	3		1281548	1					
ANR	1282296	Argument	& p -> pole [ 3 ] [ 2 ]		1281548	2					
ANR	1282297	UnaryOperationExpression	& p -> pole [ 3 ] [ 2 ]		1281548	0					
ANR	1282298	UnaryOperator	&		1281548	0					
ANR	1282299	ArrayIndexing	p -> pole [ 3 ] [ 2 ]		1281548	1					
ANR	1282300	ArrayIndexing	p -> pole [ 3 ]		1281548	0					
ANR	1282301	PtrMemberAccess	p -> pole		1281548	0					
ANR	1282302	Identifier	p		1281548	0					
ANR	1282303	Identifier	pole		1281548	1					
ANR	1282304	PrimaryExpression	3		1281548	1					
ANR	1282305	PrimaryExpression	2		1281548	1					
ANR	1282306	ReturnStatement	return true ;	3828:8:145299:145310	1281548	1	True				
ANR	1282307	Identifier	true		1281548	0					
ANR	1282308	ReturnStatement	return false ;	3829:4:145316:145328	1281548	16	True				
ANR	1282309	Identifier	false		1281548	0					
ANR	1282310	ReturnType	static inline bool		1281548	1					
ANR	1282311	Identifier	is_y_bended		1281548	2					
ANR	1282312	ParameterList	const tensor_patch * p		1281548	3					
ANR	1282313	Parameter	const tensor_patch * p	3792:12:143464:143484	1281548	0	True				
ANR	1282314	ParameterType	const tensor_patch *		1281548	0					
ANR	1282315	Identifier	p		1281548	1					
ANR	1282316	CFGEntryNode	ENTRY		1281548		True				
ANR	1282317	CFGExitNode	EXIT		1281548		True				
ANR	1282318	Symbol	p		1281548						
ANR	1282319	Symbol	p -> pole		1281548						
ANR	1282320	Symbol	vector_pair_orientation		1281548						
ANR	1282321	Symbol	* p -> pole		1281548						
ANR	1282322	Symbol	& sign		1281548						
ANR	1282323	Symbol	sign		1281548						
ANR	1282324	Symbol	true		1281548						
ANR	1282325	Symbol	false		1281548						
ANR	1282326	Symbol	* p		1281548						
ANR	1282327	Symbol	neqs		1281548						
ANR	1282328	Symbol	* * p		1281548						
ANR	1282329	Function	is_curve_x_small	3832:0:145333:145970							
ANR	1282330	FunctionDef	"is_curve_x_small (const patch_fill_state_t * pfs , const gs_fixed_point * pole , int pole_step , fixed fixed_flat)"		1282329	0					
ANR	1282331	CompoundStatement		3834:0:145461:145970	1282329	0					
ANR	1282332	IdentifierDeclStatement	"fixed xmin0 = min ( pole [ 0 * pole_step ] . x , pole [ 1 * pole_step ] . x ) ;"	3835:4:145536:145599	1282329	0	True				
ANR	1282333	IdentifierDecl	"xmin0 = min ( pole [ 0 * pole_step ] . x , pole [ 1 * pole_step ] . x )"		1282329	0					
ANR	1282334	IdentifierDeclType	fixed		1282329	0					
ANR	1282335	Identifier	xmin0		1282329	1					
ANR	1282336	AssignmentExpression	"xmin0 = min ( pole [ 0 * pole_step ] . x , pole [ 1 * pole_step ] . x )"		1282329	2		=			
ANR	1282337	Identifier	xmin0		1282329	0					
ANR	1282338	CallExpression	"min ( pole [ 0 * pole_step ] . x , pole [ 1 * pole_step ] . x )"		1282329	1					
ANR	1282339	Callee	min		1282329	0					
ANR	1282340	Identifier	min		1282329	0					
ANR	1282341	ArgumentList	pole [ 0 * pole_step ] . x		1282329	1					
ANR	1282342	Argument	pole [ 0 * pole_step ] . x		1282329	0					
ANR	1282343	MemberAccess	pole [ 0 * pole_step ] . x		1282329	0					
ANR	1282344	ArrayIndexing	pole [ 0 * pole_step ]		1282329	0					
ANR	1282345	Identifier	pole		1282329	0					
ANR	1282346	MultiplicativeExpression	0 * pole_step		1282329	1		*			
ANR	1282347	PrimaryExpression	0		1282329	0					
ANR	1282348	Identifier	pole_step		1282329	1					
ANR	1282349	Identifier	x		1282329	1					
ANR	1282350	Argument	pole [ 1 * pole_step ] . x		1282329	1					
ANR	1282351	MemberAccess	pole [ 1 * pole_step ] . x		1282329	0					
ANR	1282352	ArrayIndexing	pole [ 1 * pole_step ]		1282329	0					
ANR	1282353	Identifier	pole		1282329	0					
ANR	1282354	MultiplicativeExpression	1 * pole_step		1282329	1		*			
ANR	1282355	PrimaryExpression	1		1282329	0					
ANR	1282356	Identifier	pole_step		1282329	1					
ANR	1282357	Identifier	x		1282329	1					
ANR	1282358	IdentifierDeclStatement	"fixed xmin1 = min ( pole [ 2 * pole_step ] . x , pole [ 3 * pole_step ] . x ) ;"	3836:4:145605:145668	1282329	1	True				
ANR	1282359	IdentifierDecl	"xmin1 = min ( pole [ 2 * pole_step ] . x , pole [ 3 * pole_step ] . x )"		1282329	0					
ANR	1282360	IdentifierDeclType	fixed		1282329	0					
ANR	1282361	Identifier	xmin1		1282329	1					
ANR	1282362	AssignmentExpression	"xmin1 = min ( pole [ 2 * pole_step ] . x , pole [ 3 * pole_step ] . x )"		1282329	2		=			
ANR	1282363	Identifier	xmin1		1282329	0					
ANR	1282364	CallExpression	"min ( pole [ 2 * pole_step ] . x , pole [ 3 * pole_step ] . x )"		1282329	1					
ANR	1282365	Callee	min		1282329	0					
ANR	1282366	Identifier	min		1282329	0					
ANR	1282367	ArgumentList	pole [ 2 * pole_step ] . x		1282329	1					
ANR	1282368	Argument	pole [ 2 * pole_step ] . x		1282329	0					
ANR	1282369	MemberAccess	pole [ 2 * pole_step ] . x		1282329	0					
ANR	1282370	ArrayIndexing	pole [ 2 * pole_step ]		1282329	0					
ANR	1282371	Identifier	pole		1282329	0					
ANR	1282372	MultiplicativeExpression	2 * pole_step		1282329	1		*			
ANR	1282373	PrimaryExpression	2		1282329	0					
ANR	1282374	Identifier	pole_step		1282329	1					
ANR	1282375	Identifier	x		1282329	1					
ANR	1282376	Argument	pole [ 3 * pole_step ] . x		1282329	1					
ANR	1282377	MemberAccess	pole [ 3 * pole_step ] . x		1282329	0					
ANR	1282378	ArrayIndexing	pole [ 3 * pole_step ]		1282329	0					
ANR	1282379	Identifier	pole		1282329	0					
ANR	1282380	MultiplicativeExpression	3 * pole_step		1282329	1		*			
ANR	1282381	PrimaryExpression	3		1282329	0					
ANR	1282382	Identifier	pole_step		1282329	1					
ANR	1282383	Identifier	x		1282329	1					
ANR	1282384	IdentifierDeclStatement	"fixed xmin = min ( xmin0 , xmin1 ) ;"	3837:4:145674:145705	1282329	2	True				
ANR	1282385	IdentifierDecl	"xmin = min ( xmin0 , xmin1 )"		1282329	0					
ANR	1282386	IdentifierDeclType	fixed		1282329	0					
ANR	1282387	Identifier	xmin		1282329	1					
ANR	1282388	AssignmentExpression	"xmin = min ( xmin0 , xmin1 )"		1282329	2		=			
ANR	1282389	Identifier	xmin		1282329	0					
ANR	1282390	CallExpression	"min ( xmin0 , xmin1 )"		1282329	1					
ANR	1282391	Callee	min		1282329	0					
ANR	1282392	Identifier	min		1282329	0					
ANR	1282393	ArgumentList	xmin0		1282329	1					
ANR	1282394	Argument	xmin0		1282329	0					
ANR	1282395	Identifier	xmin0		1282329	0					
ANR	1282396	Argument	xmin1		1282329	1					
ANR	1282397	Identifier	xmin1		1282329	0					
ANR	1282398	IdentifierDeclStatement	"fixed xmax0 = max ( pole [ 0 * pole_step ] . x , pole [ 1 * pole_step ] . x ) ;"	3838:4:145711:145774	1282329	3	True				
ANR	1282399	IdentifierDecl	"xmax0 = max ( pole [ 0 * pole_step ] . x , pole [ 1 * pole_step ] . x )"		1282329	0					
ANR	1282400	IdentifierDeclType	fixed		1282329	0					
ANR	1282401	Identifier	xmax0		1282329	1					
ANR	1282402	AssignmentExpression	"xmax0 = max ( pole [ 0 * pole_step ] . x , pole [ 1 * pole_step ] . x )"		1282329	2		=			
ANR	1282403	Identifier	xmax0		1282329	0					
ANR	1282404	CallExpression	"max ( pole [ 0 * pole_step ] . x , pole [ 1 * pole_step ] . x )"		1282329	1					
ANR	1282405	Callee	max		1282329	0					
ANR	1282406	Identifier	max		1282329	0					
ANR	1282407	ArgumentList	pole [ 0 * pole_step ] . x		1282329	1					
ANR	1282408	Argument	pole [ 0 * pole_step ] . x		1282329	0					
ANR	1282409	MemberAccess	pole [ 0 * pole_step ] . x		1282329	0					
ANR	1282410	ArrayIndexing	pole [ 0 * pole_step ]		1282329	0					
ANR	1282411	Identifier	pole		1282329	0					
ANR	1282412	MultiplicativeExpression	0 * pole_step		1282329	1		*			
ANR	1282413	PrimaryExpression	0		1282329	0					
ANR	1282414	Identifier	pole_step		1282329	1					
ANR	1282415	Identifier	x		1282329	1					
ANR	1282416	Argument	pole [ 1 * pole_step ] . x		1282329	1					
ANR	1282417	MemberAccess	pole [ 1 * pole_step ] . x		1282329	0					
ANR	1282418	ArrayIndexing	pole [ 1 * pole_step ]		1282329	0					
ANR	1282419	Identifier	pole		1282329	0					
ANR	1282420	MultiplicativeExpression	1 * pole_step		1282329	1		*			
ANR	1282421	PrimaryExpression	1		1282329	0					
ANR	1282422	Identifier	pole_step		1282329	1					
ANR	1282423	Identifier	x		1282329	1					
ANR	1282424	IdentifierDeclStatement	"fixed xmax1 = max ( pole [ 2 * pole_step ] . x , pole [ 3 * pole_step ] . x ) ;"	3839:4:145780:145843	1282329	4	True				
ANR	1282425	IdentifierDecl	"xmax1 = max ( pole [ 2 * pole_step ] . x , pole [ 3 * pole_step ] . x )"		1282329	0					
ANR	1282426	IdentifierDeclType	fixed		1282329	0					
ANR	1282427	Identifier	xmax1		1282329	1					
ANR	1282428	AssignmentExpression	"xmax1 = max ( pole [ 2 * pole_step ] . x , pole [ 3 * pole_step ] . x )"		1282329	2		=			
ANR	1282429	Identifier	xmax1		1282329	0					
ANR	1282430	CallExpression	"max ( pole [ 2 * pole_step ] . x , pole [ 3 * pole_step ] . x )"		1282329	1					
ANR	1282431	Callee	max		1282329	0					
ANR	1282432	Identifier	max		1282329	0					
ANR	1282433	ArgumentList	pole [ 2 * pole_step ] . x		1282329	1					
ANR	1282434	Argument	pole [ 2 * pole_step ] . x		1282329	0					
ANR	1282435	MemberAccess	pole [ 2 * pole_step ] . x		1282329	0					
ANR	1282436	ArrayIndexing	pole [ 2 * pole_step ]		1282329	0					
ANR	1282437	Identifier	pole		1282329	0					
ANR	1282438	MultiplicativeExpression	2 * pole_step		1282329	1		*			
ANR	1282439	PrimaryExpression	2		1282329	0					
ANR	1282440	Identifier	pole_step		1282329	1					
ANR	1282441	Identifier	x		1282329	1					
ANR	1282442	Argument	pole [ 3 * pole_step ] . x		1282329	1					
ANR	1282443	MemberAccess	pole [ 3 * pole_step ] . x		1282329	0					
ANR	1282444	ArrayIndexing	pole [ 3 * pole_step ]		1282329	0					
ANR	1282445	Identifier	pole		1282329	0					
ANR	1282446	MultiplicativeExpression	3 * pole_step		1282329	1		*			
ANR	1282447	PrimaryExpression	3		1282329	0					
ANR	1282448	Identifier	pole_step		1282329	1					
ANR	1282449	Identifier	x		1282329	1					
ANR	1282450	IdentifierDeclStatement	"fixed xmax = max ( xmax0 , xmax1 ) ;"	3840:4:145849:145880	1282329	5	True				
ANR	1282451	IdentifierDecl	"xmax = max ( xmax0 , xmax1 )"		1282329	0					
ANR	1282452	IdentifierDeclType	fixed		1282329	0					
ANR	1282453	Identifier	xmax		1282329	1					
ANR	1282454	AssignmentExpression	"xmax = max ( xmax0 , xmax1 )"		1282329	2		=			
ANR	1282455	Identifier	xmax		1282329	0					
ANR	1282456	CallExpression	"max ( xmax0 , xmax1 )"		1282329	1					
ANR	1282457	Callee	max		1282329	0					
ANR	1282458	Identifier	max		1282329	0					
ANR	1282459	ArgumentList	xmax0		1282329	1					
ANR	1282460	Argument	xmax0		1282329	0					
ANR	1282461	Identifier	xmax0		1282329	0					
ANR	1282462	Argument	xmax1		1282329	1					
ANR	1282463	Identifier	xmax1		1282329	0					
ANR	1282464	IfStatement	if ( xmax - xmin <= pfs -> decomposition_limit )		1282329	6					
ANR	1282465	Condition	xmax - xmin <= pfs -> decomposition_limit	3842:7:145890:145928	1282329	0	True				
ANR	1282466	RelationalExpression	xmax - xmin <= pfs -> decomposition_limit		1282329	0		<=			
ANR	1282467	AdditiveExpression	xmax - xmin		1282329	0		-			
ANR	1282468	Identifier	xmax		1282329	0					
ANR	1282469	Identifier	xmin		1282329	1					
ANR	1282470	PtrMemberAccess	pfs -> decomposition_limit		1282329	1					
ANR	1282471	Identifier	pfs		1282329	0					
ANR	1282472	Identifier	decomposition_limit		1282329	1					
ANR	1282473	ReturnStatement	return true ;	3843:8:145939:145950	1282329	1	True				
ANR	1282474	Identifier	true		1282329	0					
ANR	1282475	ReturnStatement	return false ;	3844:4:145956:145968	1282329	7	True				
ANR	1282476	Identifier	false		1282329	0					
ANR	1282477	ReturnType	static inline bool		1282329	1					
ANR	1282478	Identifier	is_curve_x_small		1282329	2					
ANR	1282479	ParameterList	"const patch_fill_state_t * pfs , const gs_fixed_point * pole , int pole_step , fixed fixed_flat"		1282329	3					
ANR	1282480	Parameter	const patch_fill_state_t * pfs	3833:17:145369:145397	1282329	0	True				
ANR	1282481	ParameterType	const patch_fill_state_t *		1282329	0					
ANR	1282482	Identifier	pfs		1282329	1					
ANR	1282483	Parameter	const gs_fixed_point * pole	3833:48:145400:145425	1282329	1	True				
ANR	1282484	ParameterType	const gs_fixed_point *		1282329	0					
ANR	1282485	Identifier	pole		1282329	1					
ANR	1282486	Parameter	int pole_step	3833:76:145428:145440	1282329	2	True				
ANR	1282487	ParameterType	int		1282329	0					
ANR	1282488	Identifier	pole_step		1282329	1					
ANR	1282489	Parameter	fixed fixed_flat	3833:91:145443:145458	1282329	3	True				
ANR	1282490	ParameterType	fixed		1282329	0					
ANR	1282491	Identifier	fixed_flat		1282329	1					
ANR	1282492	CFGEntryNode	ENTRY		1282329		True				
ANR	1282493	CFGExitNode	EXIT		1282329		True				
ANR	1282494	Symbol	fixed_flat		1282329						
ANR	1282495	Symbol	xmin		1282329						
ANR	1282496	Symbol	pole [ 1 * pole_step ] . x		1282329						
ANR	1282497	Symbol	max		1282329						
ANR	1282498	Symbol	* pfs		1282329						
ANR	1282499	Symbol	false		1282329						
ANR	1282500	Symbol	pole [ 2 * pole_step ] . x		1282329						
ANR	1282501	Symbol	xmax0		1282329						
ANR	1282502	Symbol	xmax1		1282329						
ANR	1282503	Symbol	pole		1282329						
ANR	1282504	Symbol	* pole_step		1282329						
ANR	1282505	Symbol	pfs -> decomposition_limit		1282329						
ANR	1282506	Symbol	pole_step		1282329						
ANR	1282507	Symbol	* pole		1282329						
ANR	1282508	Symbol	pole [ 3 * pole_step ] . x		1282329						
ANR	1282509	Symbol	min		1282329						
ANR	1282510	Symbol	pole [ 0 * pole_step ] . x		1282329						
ANR	1282511	Symbol	xmax		1282329						
ANR	1282512	Symbol	xmin0		1282329						
ANR	1282513	Symbol	true		1282329						
ANR	1282514	Symbol	xmin1		1282329						
ANR	1282515	Symbol	pfs		1282329						
ANR	1282516	Function	is_curve_y_small	3847:0:145973:146611							
ANR	1282517	FunctionDef	"is_curve_y_small (const patch_fill_state_t * pfs , const gs_fixed_point * pole , int pole_step , fixed fixed_flat)"		1282516	0					
ANR	1282518	CompoundStatement		3849:0:146101:146611	1282516	0					
ANR	1282519	IdentifierDeclStatement	"fixed ymin0 = min ( pole [ 0 * pole_step ] . y , pole [ 1 * pole_step ] . y ) ;"	3850:4:146176:146239	1282516	0	True				
ANR	1282520	IdentifierDecl	"ymin0 = min ( pole [ 0 * pole_step ] . y , pole [ 1 * pole_step ] . y )"		1282516	0					
ANR	1282521	IdentifierDeclType	fixed		1282516	0					
ANR	1282522	Identifier	ymin0		1282516	1					
ANR	1282523	AssignmentExpression	"ymin0 = min ( pole [ 0 * pole_step ] . y , pole [ 1 * pole_step ] . y )"		1282516	2		=			
ANR	1282524	Identifier	ymin0		1282516	0					
ANR	1282525	CallExpression	"min ( pole [ 0 * pole_step ] . y , pole [ 1 * pole_step ] . y )"		1282516	1					
ANR	1282526	Callee	min		1282516	0					
ANR	1282527	Identifier	min		1282516	0					
ANR	1282528	ArgumentList	pole [ 0 * pole_step ] . y		1282516	1					
ANR	1282529	Argument	pole [ 0 * pole_step ] . y		1282516	0					
ANR	1282530	MemberAccess	pole [ 0 * pole_step ] . y		1282516	0					
ANR	1282531	ArrayIndexing	pole [ 0 * pole_step ]		1282516	0					
ANR	1282532	Identifier	pole		1282516	0					
ANR	1282533	MultiplicativeExpression	0 * pole_step		1282516	1		*			
ANR	1282534	PrimaryExpression	0		1282516	0					
ANR	1282535	Identifier	pole_step		1282516	1					
ANR	1282536	Identifier	y		1282516	1					
ANR	1282537	Argument	pole [ 1 * pole_step ] . y		1282516	1					
ANR	1282538	MemberAccess	pole [ 1 * pole_step ] . y		1282516	0					
ANR	1282539	ArrayIndexing	pole [ 1 * pole_step ]		1282516	0					
ANR	1282540	Identifier	pole		1282516	0					
ANR	1282541	MultiplicativeExpression	1 * pole_step		1282516	1		*			
ANR	1282542	PrimaryExpression	1		1282516	0					
ANR	1282543	Identifier	pole_step		1282516	1					
ANR	1282544	Identifier	y		1282516	1					
ANR	1282545	IdentifierDeclStatement	"fixed ymin1 = min ( pole [ 2 * pole_step ] . y , pole [ 3 * pole_step ] . y ) ;"	3851:4:146245:146308	1282516	1	True				
ANR	1282546	IdentifierDecl	"ymin1 = min ( pole [ 2 * pole_step ] . y , pole [ 3 * pole_step ] . y )"		1282516	0					
ANR	1282547	IdentifierDeclType	fixed		1282516	0					
ANR	1282548	Identifier	ymin1		1282516	1					
ANR	1282549	AssignmentExpression	"ymin1 = min ( pole [ 2 * pole_step ] . y , pole [ 3 * pole_step ] . y )"		1282516	2		=			
ANR	1282550	Identifier	ymin1		1282516	0					
ANR	1282551	CallExpression	"min ( pole [ 2 * pole_step ] . y , pole [ 3 * pole_step ] . y )"		1282516	1					
ANR	1282552	Callee	min		1282516	0					
ANR	1282553	Identifier	min		1282516	0					
ANR	1282554	ArgumentList	pole [ 2 * pole_step ] . y		1282516	1					
ANR	1282555	Argument	pole [ 2 * pole_step ] . y		1282516	0					
ANR	1282556	MemberAccess	pole [ 2 * pole_step ] . y		1282516	0					
ANR	1282557	ArrayIndexing	pole [ 2 * pole_step ]		1282516	0					
ANR	1282558	Identifier	pole		1282516	0					
ANR	1282559	MultiplicativeExpression	2 * pole_step		1282516	1		*			
ANR	1282560	PrimaryExpression	2		1282516	0					
ANR	1282561	Identifier	pole_step		1282516	1					
ANR	1282562	Identifier	y		1282516	1					
ANR	1282563	Argument	pole [ 3 * pole_step ] . y		1282516	1					
ANR	1282564	MemberAccess	pole [ 3 * pole_step ] . y		1282516	0					
ANR	1282565	ArrayIndexing	pole [ 3 * pole_step ]		1282516	0					
ANR	1282566	Identifier	pole		1282516	0					
ANR	1282567	MultiplicativeExpression	3 * pole_step		1282516	1		*			
ANR	1282568	PrimaryExpression	3		1282516	0					
ANR	1282569	Identifier	pole_step		1282516	1					
ANR	1282570	Identifier	y		1282516	1					
ANR	1282571	IdentifierDeclStatement	"fixed ymin = min ( ymin0 , ymin1 ) ;"	3852:4:146314:146345	1282516	2	True				
ANR	1282572	IdentifierDecl	"ymin = min ( ymin0 , ymin1 )"		1282516	0					
ANR	1282573	IdentifierDeclType	fixed		1282516	0					
ANR	1282574	Identifier	ymin		1282516	1					
ANR	1282575	AssignmentExpression	"ymin = min ( ymin0 , ymin1 )"		1282516	2		=			
ANR	1282576	Identifier	ymin		1282516	0					
ANR	1282577	CallExpression	"min ( ymin0 , ymin1 )"		1282516	1					
ANR	1282578	Callee	min		1282516	0					
ANR	1282579	Identifier	min		1282516	0					
ANR	1282580	ArgumentList	ymin0		1282516	1					
ANR	1282581	Argument	ymin0		1282516	0					
ANR	1282582	Identifier	ymin0		1282516	0					
ANR	1282583	Argument	ymin1		1282516	1					
ANR	1282584	Identifier	ymin1		1282516	0					
ANR	1282585	IdentifierDeclStatement	"fixed ymax0 = max ( pole [ 0 * pole_step ] . y , pole [ 1 * pole_step ] . y ) ;"	3853:4:146351:146414	1282516	3	True				
ANR	1282586	IdentifierDecl	"ymax0 = max ( pole [ 0 * pole_step ] . y , pole [ 1 * pole_step ] . y )"		1282516	0					
ANR	1282587	IdentifierDeclType	fixed		1282516	0					
ANR	1282588	Identifier	ymax0		1282516	1					
ANR	1282589	AssignmentExpression	"ymax0 = max ( pole [ 0 * pole_step ] . y , pole [ 1 * pole_step ] . y )"		1282516	2		=			
ANR	1282590	Identifier	ymax0		1282516	0					
ANR	1282591	CallExpression	"max ( pole [ 0 * pole_step ] . y , pole [ 1 * pole_step ] . y )"		1282516	1					
ANR	1282592	Callee	max		1282516	0					
ANR	1282593	Identifier	max		1282516	0					
ANR	1282594	ArgumentList	pole [ 0 * pole_step ] . y		1282516	1					
ANR	1282595	Argument	pole [ 0 * pole_step ] . y		1282516	0					
ANR	1282596	MemberAccess	pole [ 0 * pole_step ] . y		1282516	0					
ANR	1282597	ArrayIndexing	pole [ 0 * pole_step ]		1282516	0					
ANR	1282598	Identifier	pole		1282516	0					
ANR	1282599	MultiplicativeExpression	0 * pole_step		1282516	1		*			
ANR	1282600	PrimaryExpression	0		1282516	0					
ANR	1282601	Identifier	pole_step		1282516	1					
ANR	1282602	Identifier	y		1282516	1					
ANR	1282603	Argument	pole [ 1 * pole_step ] . y		1282516	1					
ANR	1282604	MemberAccess	pole [ 1 * pole_step ] . y		1282516	0					
ANR	1282605	ArrayIndexing	pole [ 1 * pole_step ]		1282516	0					
ANR	1282606	Identifier	pole		1282516	0					
ANR	1282607	MultiplicativeExpression	1 * pole_step		1282516	1		*			
ANR	1282608	PrimaryExpression	1		1282516	0					
ANR	1282609	Identifier	pole_step		1282516	1					
ANR	1282610	Identifier	y		1282516	1					
ANR	1282611	IdentifierDeclStatement	"fixed ymax1 = max ( pole [ 2 * pole_step ] . y , pole [ 3 * pole_step ] . y ) ;"	3854:4:146420:146483	1282516	4	True				
ANR	1282612	IdentifierDecl	"ymax1 = max ( pole [ 2 * pole_step ] . y , pole [ 3 * pole_step ] . y )"		1282516	0					
ANR	1282613	IdentifierDeclType	fixed		1282516	0					
ANR	1282614	Identifier	ymax1		1282516	1					
ANR	1282615	AssignmentExpression	"ymax1 = max ( pole [ 2 * pole_step ] . y , pole [ 3 * pole_step ] . y )"		1282516	2		=			
ANR	1282616	Identifier	ymax1		1282516	0					
ANR	1282617	CallExpression	"max ( pole [ 2 * pole_step ] . y , pole [ 3 * pole_step ] . y )"		1282516	1					
ANR	1282618	Callee	max		1282516	0					
ANR	1282619	Identifier	max		1282516	0					
ANR	1282620	ArgumentList	pole [ 2 * pole_step ] . y		1282516	1					
ANR	1282621	Argument	pole [ 2 * pole_step ] . y		1282516	0					
ANR	1282622	MemberAccess	pole [ 2 * pole_step ] . y		1282516	0					
ANR	1282623	ArrayIndexing	pole [ 2 * pole_step ]		1282516	0					
ANR	1282624	Identifier	pole		1282516	0					
ANR	1282625	MultiplicativeExpression	2 * pole_step		1282516	1		*			
ANR	1282626	PrimaryExpression	2		1282516	0					
ANR	1282627	Identifier	pole_step		1282516	1					
ANR	1282628	Identifier	y		1282516	1					
ANR	1282629	Argument	pole [ 3 * pole_step ] . y		1282516	1					
ANR	1282630	MemberAccess	pole [ 3 * pole_step ] . y		1282516	0					
ANR	1282631	ArrayIndexing	pole [ 3 * pole_step ]		1282516	0					
ANR	1282632	Identifier	pole		1282516	0					
ANR	1282633	MultiplicativeExpression	3 * pole_step		1282516	1		*			
ANR	1282634	PrimaryExpression	3		1282516	0					
ANR	1282635	Identifier	pole_step		1282516	1					
ANR	1282636	Identifier	y		1282516	1					
ANR	1282637	IdentifierDeclStatement	"fixed ymax = max ( ymax0 , ymax1 ) ;"	3855:4:146489:146520	1282516	5	True				
ANR	1282638	IdentifierDecl	"ymax = max ( ymax0 , ymax1 )"		1282516	0					
ANR	1282639	IdentifierDeclType	fixed		1282516	0					
ANR	1282640	Identifier	ymax		1282516	1					
ANR	1282641	AssignmentExpression	"ymax = max ( ymax0 , ymax1 )"		1282516	2		=			
ANR	1282642	Identifier	ymax		1282516	0					
ANR	1282643	CallExpression	"max ( ymax0 , ymax1 )"		1282516	1					
ANR	1282644	Callee	max		1282516	0					
ANR	1282645	Identifier	max		1282516	0					
ANR	1282646	ArgumentList	ymax0		1282516	1					
ANR	1282647	Argument	ymax0		1282516	0					
ANR	1282648	Identifier	ymax0		1282516	0					
ANR	1282649	Argument	ymax1		1282516	1					
ANR	1282650	Identifier	ymax1		1282516	0					
ANR	1282651	IfStatement	if ( ymax - ymin <= pfs -> decomposition_limit )		1282516	6					
ANR	1282652	Condition	ymax - ymin <= pfs -> decomposition_limit	3857:8:146531:146569	1282516	0	True				
ANR	1282653	RelationalExpression	ymax - ymin <= pfs -> decomposition_limit		1282516	0		<=			
ANR	1282654	AdditiveExpression	ymax - ymin		1282516	0		-			
ANR	1282655	Identifier	ymax		1282516	0					
ANR	1282656	Identifier	ymin		1282516	1					
ANR	1282657	PtrMemberAccess	pfs -> decomposition_limit		1282516	1					
ANR	1282658	Identifier	pfs		1282516	0					
ANR	1282659	Identifier	decomposition_limit		1282516	1					
ANR	1282660	ReturnStatement	return true ;	3858:8:146580:146591	1282516	1	True				
ANR	1282661	Identifier	true		1282516	0					
ANR	1282662	ReturnStatement	return false ;	3859:4:146597:146609	1282516	7	True				
ANR	1282663	Identifier	false		1282516	0					
ANR	1282664	ReturnType	static inline bool		1282516	1					
ANR	1282665	Identifier	is_curve_y_small		1282516	2					
ANR	1282666	ParameterList	"const patch_fill_state_t * pfs , const gs_fixed_point * pole , int pole_step , fixed fixed_flat"		1282516	3					
ANR	1282667	Parameter	const patch_fill_state_t * pfs	3848:17:146009:146037	1282516	0	True				
ANR	1282668	ParameterType	const patch_fill_state_t *		1282516	0					
ANR	1282669	Identifier	pfs		1282516	1					
ANR	1282670	Parameter	const gs_fixed_point * pole	3848:48:146040:146065	1282516	1	True				
ANR	1282671	ParameterType	const gs_fixed_point *		1282516	0					
ANR	1282672	Identifier	pole		1282516	1					
ANR	1282673	Parameter	int pole_step	3848:76:146068:146080	1282516	2	True				
ANR	1282674	ParameterType	int		1282516	0					
ANR	1282675	Identifier	pole_step		1282516	1					
ANR	1282676	Parameter	fixed fixed_flat	3848:91:146083:146098	1282516	3	True				
ANR	1282677	ParameterType	fixed		1282516	0					
ANR	1282678	Identifier	fixed_flat		1282516	1					
ANR	1282679	CFGEntryNode	ENTRY		1282516		True				
ANR	1282680	CFGExitNode	EXIT		1282516		True				
ANR	1282681	Symbol	ymin		1282516						
ANR	1282682	Symbol	fixed_flat		1282516						
ANR	1282683	Symbol	pole [ 1 * pole_step ] . y		1282516						
ANR	1282684	Symbol	ymin1		1282516						
ANR	1282685	Symbol	max		1282516						
ANR	1282686	Symbol	* pfs		1282516						
ANR	1282687	Symbol	false		1282516						
ANR	1282688	Symbol	pole [ 2 * pole_step ] . y		1282516						
ANR	1282689	Symbol	ymin0		1282516						
ANR	1282690	Symbol	pole		1282516						
ANR	1282691	Symbol	* pole_step		1282516						
ANR	1282692	Symbol	pfs -> decomposition_limit		1282516						
ANR	1282693	Symbol	pole_step		1282516						
ANR	1282694	Symbol	* pole		1282516						
ANR	1282695	Symbol	pole [ 3 * pole_step ] . y		1282516						
ANR	1282696	Symbol	min		1282516						
ANR	1282697	Symbol	pole [ 0 * pole_step ] . y		1282516						
ANR	1282698	Symbol	ymax		1282516						
ANR	1282699	Symbol	true		1282516						
ANR	1282700	Symbol	ymax0		1282516						
ANR	1282701	Symbol	ymax1		1282516						
ANR	1282702	Symbol	pfs		1282516						
ANR	1282703	Function	is_patch_narrow	3862:0:146614:147442							
ANR	1282704	FunctionDef	"is_patch_narrow (const patch_fill_state_t * pfs , const tensor_patch * p)"		1282703	0					
ANR	1282705	CompoundStatement		3864:0:146703:147442	1282703	0					
ANR	1282706	IfStatement	"if ( ! is_curve_x_small ( pfs , & p -> pole [ 0 ] [ 0 ] , 4 , pfs -> fixed_flat ) )"		1282703	0					
ANR	1282707	Condition	"! is_curve_x_small ( pfs , & p -> pole [ 0 ] [ 0 ] , 4 , pfs -> fixed_flat )"	3865:8:146713:146770	1282703	0	True				
ANR	1282708	UnaryOperationExpression	"! is_curve_x_small ( pfs , & p -> pole [ 0 ] [ 0 ] , 4 , pfs -> fixed_flat )"		1282703	0					
ANR	1282709	UnaryOperator	!		1282703	0					
ANR	1282710	CallExpression	"is_curve_x_small ( pfs , & p -> pole [ 0 ] [ 0 ] , 4 , pfs -> fixed_flat )"		1282703	1					
ANR	1282711	Callee	is_curve_x_small		1282703	0					
ANR	1282712	Identifier	is_curve_x_small		1282703	0					
ANR	1282713	ArgumentList	pfs		1282703	1					
ANR	1282714	Argument	pfs		1282703	0					
ANR	1282715	Identifier	pfs		1282703	0					
ANR	1282716	Argument	& p -> pole [ 0 ] [ 0 ]		1282703	1					
ANR	1282717	UnaryOperationExpression	& p -> pole [ 0 ] [ 0 ]		1282703	0					
ANR	1282718	UnaryOperator	&		1282703	0					
ANR	1282719	ArrayIndexing	p -> pole [ 0 ] [ 0 ]		1282703	1					
ANR	1282720	ArrayIndexing	p -> pole [ 0 ]		1282703	0					
ANR	1282721	PtrMemberAccess	p -> pole		1282703	0					
ANR	1282722	Identifier	p		1282703	0					
ANR	1282723	Identifier	pole		1282703	1					
ANR	1282724	PrimaryExpression	0		1282703	1					
ANR	1282725	PrimaryExpression	0		1282703	1					
ANR	1282726	Argument	4		1282703	2					
ANR	1282727	PrimaryExpression	4		1282703	0					
ANR	1282728	Argument	pfs -> fixed_flat		1282703	3					
ANR	1282729	PtrMemberAccess	pfs -> fixed_flat		1282703	0					
ANR	1282730	Identifier	pfs		1282703	0					
ANR	1282731	Identifier	fixed_flat		1282703	1					
ANR	1282732	ReturnStatement	return false ;	3866:8:146781:146793	1282703	1	True				
ANR	1282733	Identifier	false		1282703	0					
ANR	1282734	IfStatement	"if ( ! is_curve_x_small ( pfs , & p -> pole [ 0 ] [ 1 ] , 4 , pfs -> fixed_flat ) )"		1282703	1					
ANR	1282735	Condition	"! is_curve_x_small ( pfs , & p -> pole [ 0 ] [ 1 ] , 4 , pfs -> fixed_flat )"	3867:8:146803:146860	1282703	0	True				
ANR	1282736	UnaryOperationExpression	"! is_curve_x_small ( pfs , & p -> pole [ 0 ] [ 1 ] , 4 , pfs -> fixed_flat )"		1282703	0					
ANR	1282737	UnaryOperator	!		1282703	0					
ANR	1282738	CallExpression	"is_curve_x_small ( pfs , & p -> pole [ 0 ] [ 1 ] , 4 , pfs -> fixed_flat )"		1282703	1					
ANR	1282739	Callee	is_curve_x_small		1282703	0					
ANR	1282740	Identifier	is_curve_x_small		1282703	0					
ANR	1282741	ArgumentList	pfs		1282703	1					
ANR	1282742	Argument	pfs		1282703	0					
ANR	1282743	Identifier	pfs		1282703	0					
ANR	1282744	Argument	& p -> pole [ 0 ] [ 1 ]		1282703	1					
ANR	1282745	UnaryOperationExpression	& p -> pole [ 0 ] [ 1 ]		1282703	0					
ANR	1282746	UnaryOperator	&		1282703	0					
ANR	1282747	ArrayIndexing	p -> pole [ 0 ] [ 1 ]		1282703	1					
ANR	1282748	ArrayIndexing	p -> pole [ 0 ]		1282703	0					
ANR	1282749	PtrMemberAccess	p -> pole		1282703	0					
ANR	1282750	Identifier	p		1282703	0					
ANR	1282751	Identifier	pole		1282703	1					
ANR	1282752	PrimaryExpression	0		1282703	1					
ANR	1282753	PrimaryExpression	1		1282703	1					
ANR	1282754	Argument	4		1282703	2					
ANR	1282755	PrimaryExpression	4		1282703	0					
ANR	1282756	Argument	pfs -> fixed_flat		1282703	3					
ANR	1282757	PtrMemberAccess	pfs -> fixed_flat		1282703	0					
ANR	1282758	Identifier	pfs		1282703	0					
ANR	1282759	Identifier	fixed_flat		1282703	1					
ANR	1282760	ReturnStatement	return false ;	3868:8:146871:146883	1282703	1	True				
ANR	1282761	Identifier	false		1282703	0					
ANR	1282762	IfStatement	"if ( ! is_curve_x_small ( pfs , & p -> pole [ 0 ] [ 2 ] , 4 , pfs -> fixed_flat ) )"		1282703	2					
ANR	1282763	Condition	"! is_curve_x_small ( pfs , & p -> pole [ 0 ] [ 2 ] , 4 , pfs -> fixed_flat )"	3869:8:146893:146950	1282703	0	True				
ANR	1282764	UnaryOperationExpression	"! is_curve_x_small ( pfs , & p -> pole [ 0 ] [ 2 ] , 4 , pfs -> fixed_flat )"		1282703	0					
ANR	1282765	UnaryOperator	!		1282703	0					
ANR	1282766	CallExpression	"is_curve_x_small ( pfs , & p -> pole [ 0 ] [ 2 ] , 4 , pfs -> fixed_flat )"		1282703	1					
ANR	1282767	Callee	is_curve_x_small		1282703	0					
ANR	1282768	Identifier	is_curve_x_small		1282703	0					
ANR	1282769	ArgumentList	pfs		1282703	1					
ANR	1282770	Argument	pfs		1282703	0					
ANR	1282771	Identifier	pfs		1282703	0					
ANR	1282772	Argument	& p -> pole [ 0 ] [ 2 ]		1282703	1					
ANR	1282773	UnaryOperationExpression	& p -> pole [ 0 ] [ 2 ]		1282703	0					
ANR	1282774	UnaryOperator	&		1282703	0					
ANR	1282775	ArrayIndexing	p -> pole [ 0 ] [ 2 ]		1282703	1					
ANR	1282776	ArrayIndexing	p -> pole [ 0 ]		1282703	0					
ANR	1282777	PtrMemberAccess	p -> pole		1282703	0					
ANR	1282778	Identifier	p		1282703	0					
ANR	1282779	Identifier	pole		1282703	1					
ANR	1282780	PrimaryExpression	0		1282703	1					
ANR	1282781	PrimaryExpression	2		1282703	1					
ANR	1282782	Argument	4		1282703	2					
ANR	1282783	PrimaryExpression	4		1282703	0					
ANR	1282784	Argument	pfs -> fixed_flat		1282703	3					
ANR	1282785	PtrMemberAccess	pfs -> fixed_flat		1282703	0					
ANR	1282786	Identifier	pfs		1282703	0					
ANR	1282787	Identifier	fixed_flat		1282703	1					
ANR	1282788	ReturnStatement	return false ;	3870:8:146961:146973	1282703	1	True				
ANR	1282789	Identifier	false		1282703	0					
ANR	1282790	IfStatement	"if ( ! is_curve_x_small ( pfs , & p -> pole [ 0 ] [ 3 ] , 4 , pfs -> fixed_flat ) )"		1282703	3					
ANR	1282791	Condition	"! is_curve_x_small ( pfs , & p -> pole [ 0 ] [ 3 ] , 4 , pfs -> fixed_flat )"	3871:8:146983:147040	1282703	0	True				
ANR	1282792	UnaryOperationExpression	"! is_curve_x_small ( pfs , & p -> pole [ 0 ] [ 3 ] , 4 , pfs -> fixed_flat )"		1282703	0					
ANR	1282793	UnaryOperator	!		1282703	0					
ANR	1282794	CallExpression	"is_curve_x_small ( pfs , & p -> pole [ 0 ] [ 3 ] , 4 , pfs -> fixed_flat )"		1282703	1					
ANR	1282795	Callee	is_curve_x_small		1282703	0					
ANR	1282796	Identifier	is_curve_x_small		1282703	0					
ANR	1282797	ArgumentList	pfs		1282703	1					
ANR	1282798	Argument	pfs		1282703	0					
ANR	1282799	Identifier	pfs		1282703	0					
ANR	1282800	Argument	& p -> pole [ 0 ] [ 3 ]		1282703	1					
ANR	1282801	UnaryOperationExpression	& p -> pole [ 0 ] [ 3 ]		1282703	0					
ANR	1282802	UnaryOperator	&		1282703	0					
ANR	1282803	ArrayIndexing	p -> pole [ 0 ] [ 3 ]		1282703	1					
ANR	1282804	ArrayIndexing	p -> pole [ 0 ]		1282703	0					
ANR	1282805	PtrMemberAccess	p -> pole		1282703	0					
ANR	1282806	Identifier	p		1282703	0					
ANR	1282807	Identifier	pole		1282703	1					
ANR	1282808	PrimaryExpression	0		1282703	1					
ANR	1282809	PrimaryExpression	3		1282703	1					
ANR	1282810	Argument	4		1282703	2					
ANR	1282811	PrimaryExpression	4		1282703	0					
ANR	1282812	Argument	pfs -> fixed_flat		1282703	3					
ANR	1282813	PtrMemberAccess	pfs -> fixed_flat		1282703	0					
ANR	1282814	Identifier	pfs		1282703	0					
ANR	1282815	Identifier	fixed_flat		1282703	1					
ANR	1282816	ReturnStatement	return false ;	3872:8:147051:147063	1282703	1	True				
ANR	1282817	Identifier	false		1282703	0					
ANR	1282818	IfStatement	"if ( ! is_curve_y_small ( pfs , & p -> pole [ 0 ] [ 0 ] , 4 , pfs -> fixed_flat ) )"		1282703	4					
ANR	1282819	Condition	"! is_curve_y_small ( pfs , & p -> pole [ 0 ] [ 0 ] , 4 , pfs -> fixed_flat )"	3873:8:147073:147130	1282703	0	True				
ANR	1282820	UnaryOperationExpression	"! is_curve_y_small ( pfs , & p -> pole [ 0 ] [ 0 ] , 4 , pfs -> fixed_flat )"		1282703	0					
ANR	1282821	UnaryOperator	!		1282703	0					
ANR	1282822	CallExpression	"is_curve_y_small ( pfs , & p -> pole [ 0 ] [ 0 ] , 4 , pfs -> fixed_flat )"		1282703	1					
ANR	1282823	Callee	is_curve_y_small		1282703	0					
ANR	1282824	Identifier	is_curve_y_small		1282703	0					
ANR	1282825	ArgumentList	pfs		1282703	1					
ANR	1282826	Argument	pfs		1282703	0					
ANR	1282827	Identifier	pfs		1282703	0					
ANR	1282828	Argument	& p -> pole [ 0 ] [ 0 ]		1282703	1					
ANR	1282829	UnaryOperationExpression	& p -> pole [ 0 ] [ 0 ]		1282703	0					
ANR	1282830	UnaryOperator	&		1282703	0					
ANR	1282831	ArrayIndexing	p -> pole [ 0 ] [ 0 ]		1282703	1					
ANR	1282832	ArrayIndexing	p -> pole [ 0 ]		1282703	0					
ANR	1282833	PtrMemberAccess	p -> pole		1282703	0					
ANR	1282834	Identifier	p		1282703	0					
ANR	1282835	Identifier	pole		1282703	1					
ANR	1282836	PrimaryExpression	0		1282703	1					
ANR	1282837	PrimaryExpression	0		1282703	1					
ANR	1282838	Argument	4		1282703	2					
ANR	1282839	PrimaryExpression	4		1282703	0					
ANR	1282840	Argument	pfs -> fixed_flat		1282703	3					
ANR	1282841	PtrMemberAccess	pfs -> fixed_flat		1282703	0					
ANR	1282842	Identifier	pfs		1282703	0					
ANR	1282843	Identifier	fixed_flat		1282703	1					
ANR	1282844	ReturnStatement	return false ;	3874:8:147141:147153	1282703	1	True				
ANR	1282845	Identifier	false		1282703	0					
ANR	1282846	IfStatement	"if ( ! is_curve_y_small ( pfs , & p -> pole [ 0 ] [ 1 ] , 4 , pfs -> fixed_flat ) )"		1282703	5					
ANR	1282847	Condition	"! is_curve_y_small ( pfs , & p -> pole [ 0 ] [ 1 ] , 4 , pfs -> fixed_flat )"	3875:8:147163:147220	1282703	0	True				
ANR	1282848	UnaryOperationExpression	"! is_curve_y_small ( pfs , & p -> pole [ 0 ] [ 1 ] , 4 , pfs -> fixed_flat )"		1282703	0					
ANR	1282849	UnaryOperator	!		1282703	0					
ANR	1282850	CallExpression	"is_curve_y_small ( pfs , & p -> pole [ 0 ] [ 1 ] , 4 , pfs -> fixed_flat )"		1282703	1					
ANR	1282851	Callee	is_curve_y_small		1282703	0					
ANR	1282852	Identifier	is_curve_y_small		1282703	0					
ANR	1282853	ArgumentList	pfs		1282703	1					
ANR	1282854	Argument	pfs		1282703	0					
ANR	1282855	Identifier	pfs		1282703	0					
ANR	1282856	Argument	& p -> pole [ 0 ] [ 1 ]		1282703	1					
ANR	1282857	UnaryOperationExpression	& p -> pole [ 0 ] [ 1 ]		1282703	0					
ANR	1282858	UnaryOperator	&		1282703	0					
ANR	1282859	ArrayIndexing	p -> pole [ 0 ] [ 1 ]		1282703	1					
ANR	1282860	ArrayIndexing	p -> pole [ 0 ]		1282703	0					
ANR	1282861	PtrMemberAccess	p -> pole		1282703	0					
ANR	1282862	Identifier	p		1282703	0					
ANR	1282863	Identifier	pole		1282703	1					
ANR	1282864	PrimaryExpression	0		1282703	1					
ANR	1282865	PrimaryExpression	1		1282703	1					
ANR	1282866	Argument	4		1282703	2					
ANR	1282867	PrimaryExpression	4		1282703	0					
ANR	1282868	Argument	pfs -> fixed_flat		1282703	3					
ANR	1282869	PtrMemberAccess	pfs -> fixed_flat		1282703	0					
ANR	1282870	Identifier	pfs		1282703	0					
ANR	1282871	Identifier	fixed_flat		1282703	1					
ANR	1282872	ReturnStatement	return false ;	3876:8:147231:147243	1282703	1	True				
ANR	1282873	Identifier	false		1282703	0					
ANR	1282874	IfStatement	"if ( ! is_curve_y_small ( pfs , & p -> pole [ 0 ] [ 2 ] , 4 , pfs -> fixed_flat ) )"		1282703	6					
ANR	1282875	Condition	"! is_curve_y_small ( pfs , & p -> pole [ 0 ] [ 2 ] , 4 , pfs -> fixed_flat )"	3877:8:147253:147310	1282703	0	True				
ANR	1282876	UnaryOperationExpression	"! is_curve_y_small ( pfs , & p -> pole [ 0 ] [ 2 ] , 4 , pfs -> fixed_flat )"		1282703	0					
ANR	1282877	UnaryOperator	!		1282703	0					
ANR	1282878	CallExpression	"is_curve_y_small ( pfs , & p -> pole [ 0 ] [ 2 ] , 4 , pfs -> fixed_flat )"		1282703	1					
ANR	1282879	Callee	is_curve_y_small		1282703	0					
ANR	1282880	Identifier	is_curve_y_small		1282703	0					
ANR	1282881	ArgumentList	pfs		1282703	1					
ANR	1282882	Argument	pfs		1282703	0					
ANR	1282883	Identifier	pfs		1282703	0					
ANR	1282884	Argument	& p -> pole [ 0 ] [ 2 ]		1282703	1					
ANR	1282885	UnaryOperationExpression	& p -> pole [ 0 ] [ 2 ]		1282703	0					
ANR	1282886	UnaryOperator	&		1282703	0					
ANR	1282887	ArrayIndexing	p -> pole [ 0 ] [ 2 ]		1282703	1					
ANR	1282888	ArrayIndexing	p -> pole [ 0 ]		1282703	0					
ANR	1282889	PtrMemberAccess	p -> pole		1282703	0					
ANR	1282890	Identifier	p		1282703	0					
ANR	1282891	Identifier	pole		1282703	1					
ANR	1282892	PrimaryExpression	0		1282703	1					
ANR	1282893	PrimaryExpression	2		1282703	1					
ANR	1282894	Argument	4		1282703	2					
ANR	1282895	PrimaryExpression	4		1282703	0					
ANR	1282896	Argument	pfs -> fixed_flat		1282703	3					
ANR	1282897	PtrMemberAccess	pfs -> fixed_flat		1282703	0					
ANR	1282898	Identifier	pfs		1282703	0					
ANR	1282899	Identifier	fixed_flat		1282703	1					
ANR	1282900	ReturnStatement	return false ;	3878:8:147321:147333	1282703	1	True				
ANR	1282901	Identifier	false		1282703	0					
ANR	1282902	IfStatement	"if ( ! is_curve_y_small ( pfs , & p -> pole [ 0 ] [ 3 ] , 4 , pfs -> fixed_flat ) )"		1282703	7					
ANR	1282903	Condition	"! is_curve_y_small ( pfs , & p -> pole [ 0 ] [ 3 ] , 4 , pfs -> fixed_flat )"	3879:8:147343:147400	1282703	0	True				
ANR	1282904	UnaryOperationExpression	"! is_curve_y_small ( pfs , & p -> pole [ 0 ] [ 3 ] , 4 , pfs -> fixed_flat )"		1282703	0					
ANR	1282905	UnaryOperator	!		1282703	0					
ANR	1282906	CallExpression	"is_curve_y_small ( pfs , & p -> pole [ 0 ] [ 3 ] , 4 , pfs -> fixed_flat )"		1282703	1					
ANR	1282907	Callee	is_curve_y_small		1282703	0					
ANR	1282908	Identifier	is_curve_y_small		1282703	0					
ANR	1282909	ArgumentList	pfs		1282703	1					
ANR	1282910	Argument	pfs		1282703	0					
ANR	1282911	Identifier	pfs		1282703	0					
ANR	1282912	Argument	& p -> pole [ 0 ] [ 3 ]		1282703	1					
ANR	1282913	UnaryOperationExpression	& p -> pole [ 0 ] [ 3 ]		1282703	0					
ANR	1282914	UnaryOperator	&		1282703	0					
ANR	1282915	ArrayIndexing	p -> pole [ 0 ] [ 3 ]		1282703	1					
ANR	1282916	ArrayIndexing	p -> pole [ 0 ]		1282703	0					
ANR	1282917	PtrMemberAccess	p -> pole		1282703	0					
ANR	1282918	Identifier	p		1282703	0					
ANR	1282919	Identifier	pole		1282703	1					
ANR	1282920	PrimaryExpression	0		1282703	1					
ANR	1282921	PrimaryExpression	3		1282703	1					
ANR	1282922	Argument	4		1282703	2					
ANR	1282923	PrimaryExpression	4		1282703	0					
ANR	1282924	Argument	pfs -> fixed_flat		1282703	3					
ANR	1282925	PtrMemberAccess	pfs -> fixed_flat		1282703	0					
ANR	1282926	Identifier	pfs		1282703	0					
ANR	1282927	Identifier	fixed_flat		1282703	1					
ANR	1282928	ReturnStatement	return false ;	3880:8:147411:147423	1282703	1	True				
ANR	1282929	Identifier	false		1282703	0					
ANR	1282930	ReturnStatement	return true ;	3881:4:147429:147440	1282703	8	True				
ANR	1282931	Identifier	true		1282703	0					
ANR	1282932	ReturnType	static inline bool		1282703	1					
ANR	1282933	Identifier	is_patch_narrow		1282703	2					
ANR	1282934	ParameterList	"const patch_fill_state_t * pfs , const tensor_patch * p"		1282703	3					
ANR	1282935	Parameter	const patch_fill_state_t * pfs	3863:16:146649:146677	1282703	0	True				
ANR	1282936	ParameterType	const patch_fill_state_t *		1282703	0					
ANR	1282937	Identifier	pfs		1282703	1					
ANR	1282938	Parameter	const tensor_patch * p	3863:47:146680:146700	1282703	1	True				
ANR	1282939	ParameterType	const tensor_patch *		1282703	0					
ANR	1282940	Identifier	p		1282703	1					
ANR	1282941	CFGEntryNode	ENTRY		1282703		True				
ANR	1282942	CFGExitNode	EXIT		1282703		True				
ANR	1282943	Symbol	p		1282703						
ANR	1282944	Symbol	pfs -> fixed_flat		1282703						
ANR	1282945	Symbol	is_curve_x_small		1282703						
ANR	1282946	Symbol	p -> pole		1282703						
ANR	1282947	Symbol	* pfs		1282703						
ANR	1282948	Symbol	* p -> pole		1282703						
ANR	1282949	Symbol	false		1282703						
ANR	1282950	Symbol	true		1282703						
ANR	1282951	Symbol	is_curve_y_small		1282703						
ANR	1282952	Symbol	* p		1282703						
ANR	1282953	Symbol	* * p		1282703						
ANR	1282954	Symbol	pfs		1282703						
ANR	1282955	Function	fill_patch	3884:0:147445:150544							
ANR	1282956	FunctionDef	"fill_patch (patch_fill_state_t * pfs , const tensor_patch * p , int kv , int kv0 , int kv1)"		1282955	0					
ANR	1282957	CompoundStatement		3886:0:147541:150544	1282955	0					
ANR	1282958	IfStatement	if ( kv <= 1 )		1282955	0					
ANR	1282959	Condition	kv <= 1	3887:8:147551:147557	1282955	0	True				
ANR	1282960	RelationalExpression	kv <= 1		1282955	0		<=			
ANR	1282961	Identifier	kv		1282955	0					
ANR	1282962	PrimaryExpression	1		1282955	1					
ANR	1282963	CompoundStatement		2:17:18:18	1282955	1					
ANR	1282964	IfStatement	"if ( is_patch_narrow ( pfs , p ) )"		1282955	0					
ANR	1282965	Condition	"is_patch_narrow ( pfs , p )"	3888:12:147574:147596	1282955	0	True				
ANR	1282966	CallExpression	"is_patch_narrow ( pfs , p )"		1282955	0					
ANR	1282967	Callee	is_patch_narrow		1282955	0					
ANR	1282968	Identifier	is_patch_narrow		1282955	0					
ANR	1282969	ArgumentList	pfs		1282955	1					
ANR	1282970	Argument	pfs		1282955	0					
ANR	1282971	Identifier	pfs		1282955	0					
ANR	1282972	Argument	p		1282955	1					
ANR	1282973	Identifier	p		1282955	0					
ANR	1282974	ReturnStatement	"return fill_stripe ( pfs , p ) ;"	3889:12:147611:147637	1282955	1	True				
ANR	1282975	CallExpression	"fill_stripe ( pfs , p )"		1282955	0					
ANR	1282976	Callee	fill_stripe		1282955	0					
ANR	1282977	Identifier	fill_stripe		1282955	0					
ANR	1282978	ArgumentList	pfs		1282955	1					
ANR	1282979	Argument	pfs		1282955	0					
ANR	1282980	Identifier	pfs		1282955	0					
ANR	1282981	Argument	p		1282955	1					
ANR	1282982	Identifier	p		1282955	0					
ANR	1282983	IfStatement	if ( ! is_x_bended ( p ) )		1282955	1					
ANR	1282984	Condition	! is_x_bended ( p )	3890:12:147651:147665	1282955	0	True				
ANR	1282985	UnaryOperationExpression	! is_x_bended ( p )		1282955	0					
ANR	1282986	UnaryOperator	!		1282955	0					
ANR	1282987	CallExpression	is_x_bended ( p )		1282955	1					
ANR	1282988	Callee	is_x_bended		1282955	0					
ANR	1282989	Identifier	is_x_bended		1282955	0					
ANR	1282990	ArgumentList	p		1282955	1					
ANR	1282991	Argument	p		1282955	0					
ANR	1282992	Identifier	p		1282955	0					
ANR	1282993	ReturnStatement	"return fill_stripe ( pfs , p ) ;"	3891:12:147680:147706	1282955	1	True				
ANR	1282994	CallExpression	"fill_stripe ( pfs , p )"		1282955	0					
ANR	1282995	Callee	fill_stripe		1282955	0					
ANR	1282996	Identifier	fill_stripe		1282955	0					
ANR	1282997	ArgumentList	pfs		1282955	1					
ANR	1282998	Argument	pfs		1282955	0					
ANR	1282999	Identifier	pfs		1282955	0					
ANR	1283000	Argument	p		1282955	1					
ANR	1283001	Identifier	p		1282955	0					
ANR	1283002	CompoundStatement		13:8:328:358	1282955	1					
ANR	1283003	IdentifierDeclStatement	"tensor_patch s0 , s1 ;"	3893:8:147722:147741	1282955	0	True				
ANR	1283004	IdentifierDecl	s0		1282955	0					
ANR	1283005	IdentifierDeclType	tensor_patch		1282955	0					
ANR	1283006	Identifier	s0		1282955	1					
ANR	1283007	IdentifierDecl	s1		1282955	1					
ANR	1283008	IdentifierDeclType	tensor_patch		1282955	0					
ANR	1283009	Identifier	s1		1282955	1					
ANR	1283010	IdentifierDeclStatement	patch_color_t * c [ 2 ] ;	3894:8:147751:147770	1282955	1	True				
ANR	1283011	IdentifierDecl	* c [ 2 ]		1282955	0					
ANR	1283012	IdentifierDeclType	patch_color_t * [ 2 ]		1282955	0					
ANR	1283013	Identifier	c		1282955	1					
ANR	1283014	PrimaryExpression	2		1282955	2					
ANR	1283015	IdentifierDeclStatement	"shading_vertex_t q0 , q1 , q2 ;"	3895:8:147780:147807	1282955	2	True				
ANR	1283016	IdentifierDecl	q0		1282955	0					
ANR	1283017	IdentifierDeclType	shading_vertex_t		1282955	0					
ANR	1283018	Identifier	q0		1282955	1					
ANR	1283019	IdentifierDecl	q1		1282955	1					
ANR	1283020	IdentifierDeclType	shading_vertex_t		1282955	0					
ANR	1283021	Identifier	q1		1282955	1					
ANR	1283022	IdentifierDecl	q2		1282955	2					
ANR	1283023	IdentifierDeclType	shading_vertex_t		1282955	0					
ANR	1283024	Identifier	q2		1282955	1					
ANR	1283025	IdentifierDeclStatement	int code = 0 ;	3896:8:147817:147829	1282955	3	True				
ANR	1283026	IdentifierDecl	code = 0		1282955	0					
ANR	1283027	IdentifierDeclType	int		1282955	0					
ANR	1283028	Identifier	code		1282955	1					
ANR	1283029	AssignmentExpression	code = 0		1282955	2		=			
ANR	1283030	Identifier	code		1282955	0					
ANR	1283031	PrimaryExpression	0		1282955	1					
ANR	1283032	IdentifierDeclStatement	byte * color_stack_ptr ;	3897:8:147839:147860	1282955	4	True				
ANR	1283033	IdentifierDecl	* color_stack_ptr		1282955	0					
ANR	1283034	IdentifierDeclType	byte *		1282955	0					
ANR	1283035	Identifier	color_stack_ptr		1282955	1					
ANR	1283036	IdentifierDeclStatement	bool save_inside = pfs -> inside ;	3898:8:147870:147900	1282955	5	True				
ANR	1283037	IdentifierDecl	save_inside = pfs -> inside		1282955	0					
ANR	1283038	IdentifierDeclType	bool		1282955	0					
ANR	1283039	Identifier	save_inside		1282955	1					
ANR	1283040	AssignmentExpression	save_inside = pfs -> inside		1282955	2		=			
ANR	1283041	Identifier	save_inside		1282955	0					
ANR	1283042	PtrMemberAccess	pfs -> inside		1282955	1					
ANR	1283043	Identifier	pfs		1282955	0					
ANR	1283044	Identifier	inside		1282955	1					
ANR	1283045	IfStatement	if ( ! pfs -> inside )		1282955	6					
ANR	1283046	Condition	! pfs -> inside	3900:12:147915:147926	1282955	0	True				
ANR	1283047	UnaryOperationExpression	! pfs -> inside		1282955	0					
ANR	1283048	UnaryOperator	!		1282955	0					
ANR	1283049	PtrMemberAccess	pfs -> inside		1282955	1					
ANR	1283050	Identifier	pfs		1282955	0					
ANR	1283051	Identifier	inside		1282955	1					
ANR	1283052	CompoundStatement		16:12:401:420	1282955	1					
ANR	1283053	IdentifierDeclStatement	"gs_fixed_rect r , r1 ;"	3901:12:147943:147962	1282955	0	True				
ANR	1283054	IdentifierDecl	r		1282955	0					
ANR	1283055	IdentifierDeclType	gs_fixed_rect		1282955	0					
ANR	1283056	Identifier	r		1282955	1					
ANR	1283057	IdentifierDecl	r1		1282955	1					
ANR	1283058	IdentifierDeclType	gs_fixed_rect		1282955	0					
ANR	1283059	Identifier	r1		1282955	1					
ANR	1283060	ExpressionStatement	"tensor_patch_bbox ( & r , p )"	3903:12:147977:148001	1282955	1	True				
ANR	1283061	CallExpression	"tensor_patch_bbox ( & r , p )"		1282955	0					
ANR	1283062	Callee	tensor_patch_bbox		1282955	0					
ANR	1283063	Identifier	tensor_patch_bbox		1282955	0					
ANR	1283064	ArgumentList	& r		1282955	1					
ANR	1283065	Argument	& r		1282955	0					
ANR	1283066	UnaryOperationExpression	& r		1282955	0					
ANR	1283067	UnaryOperator	&		1282955	0					
ANR	1283068	Identifier	r		1282955	1					
ANR	1283069	Argument	p		1282955	1					
ANR	1283070	Identifier	p		1282955	0					
ANR	1283071	ExpressionStatement	r . p . x -= INTERPATCH_PADDING	3904:12:148015:148042	1282955	2	True				
ANR	1283072	AssignmentExpression	r . p . x -= INTERPATCH_PADDING		1282955	0		-=			
ANR	1283073	MemberAccess	r . p . x		1282955	0					
ANR	1283074	MemberAccess	r . p		1282955	0					
ANR	1283075	Identifier	r		1282955	0					
ANR	1283076	Identifier	p		1282955	1					
ANR	1283077	Identifier	x		1282955	1					
ANR	1283078	Identifier	INTERPATCH_PADDING		1282955	1					
ANR	1283079	ExpressionStatement	r . p . y -= INTERPATCH_PADDING	3905:12:148056:148083	1282955	3	True				
ANR	1283080	AssignmentExpression	r . p . y -= INTERPATCH_PADDING		1282955	0		-=			
ANR	1283081	MemberAccess	r . p . y		1282955	0					
ANR	1283082	MemberAccess	r . p		1282955	0					
ANR	1283083	Identifier	r		1282955	0					
ANR	1283084	Identifier	p		1282955	1					
ANR	1283085	Identifier	y		1282955	1					
ANR	1283086	Identifier	INTERPATCH_PADDING		1282955	1					
ANR	1283087	ExpressionStatement	r . q . x += INTERPATCH_PADDING	3906:12:148097:148124	1282955	4	True				
ANR	1283088	AssignmentExpression	r . q . x += INTERPATCH_PADDING		1282955	0		+=			
ANR	1283089	MemberAccess	r . q . x		1282955	0					
ANR	1283090	MemberAccess	r . q		1282955	0					
ANR	1283091	Identifier	r		1282955	0					
ANR	1283092	Identifier	q		1282955	1					
ANR	1283093	Identifier	x		1282955	1					
ANR	1283094	Identifier	INTERPATCH_PADDING		1282955	1					
ANR	1283095	ExpressionStatement	r . q . y += INTERPATCH_PADDING	3907:12:148138:148165	1282955	5	True				
ANR	1283096	AssignmentExpression	r . q . y += INTERPATCH_PADDING		1282955	0		+=			
ANR	1283097	MemberAccess	r . q . y		1282955	0					
ANR	1283098	MemberAccess	r . q		1282955	0					
ANR	1283099	Identifier	r		1282955	0					
ANR	1283100	Identifier	q		1282955	1					
ANR	1283101	Identifier	y		1282955	1					
ANR	1283102	Identifier	INTERPATCH_PADDING		1282955	1					
ANR	1283103	ExpressionStatement	r1 = r	3908:12:148179:148185	1282955	6	True				
ANR	1283104	AssignmentExpression	r1 = r		1282955	0		=			
ANR	1283105	Identifier	r1		1282955	0					
ANR	1283106	Identifier	r		1282955	1					
ANR	1283107	ExpressionStatement	"rect_intersect ( r , pfs -> rect )"	3909:12:148199:148227	1282955	7	True				
ANR	1283108	CallExpression	"rect_intersect ( r , pfs -> rect )"		1282955	0					
ANR	1283109	Callee	rect_intersect		1282955	0					
ANR	1283110	Identifier	rect_intersect		1282955	0					
ANR	1283111	ArgumentList	r		1282955	1					
ANR	1283112	Argument	r		1282955	0					
ANR	1283113	Identifier	r		1282955	0					
ANR	1283114	Argument	pfs -> rect		1282955	1					
ANR	1283115	PtrMemberAccess	pfs -> rect		1282955	0					
ANR	1283116	Identifier	pfs		1282955	0					
ANR	1283117	Identifier	rect		1282955	1					
ANR	1283118	IfStatement	if ( r . q . x <= r . p . x || r . q . y <= r . p . y )		1282955	8					
ANR	1283119	Condition	r . q . x <= r . p . x || r . q . y <= r . p . y	3910:16:148245:148276	1282955	0	True				
ANR	1283120	OrExpression	r . q . x <= r . p . x || r . q . y <= r . p . y		1282955	0		||			
ANR	1283121	RelationalExpression	r . q . x <= r . p . x		1282955	0		<=			
ANR	1283122	MemberAccess	r . q . x		1282955	0					
ANR	1283123	MemberAccess	r . q		1282955	0					
ANR	1283124	Identifier	r		1282955	0					
ANR	1283125	Identifier	q		1282955	1					
ANR	1283126	Identifier	x		1282955	1					
ANR	1283127	MemberAccess	r . p . x		1282955	1					
ANR	1283128	MemberAccess	r . p		1282955	0					
ANR	1283129	Identifier	r		1282955	0					
ANR	1283130	Identifier	p		1282955	1					
ANR	1283131	Identifier	x		1282955	1					
ANR	1283132	RelationalExpression	r . q . y <= r . p . y		1282955	1		<=			
ANR	1283133	MemberAccess	r . q . y		1282955	0					
ANR	1283134	MemberAccess	r . q		1282955	0					
ANR	1283135	Identifier	r		1282955	0					
ANR	1283136	Identifier	q		1282955	1					
ANR	1283137	Identifier	y		1282955	1					
ANR	1283138	MemberAccess	r . p . y		1282955	1					
ANR	1283139	MemberAccess	r . p		1282955	0					
ANR	1283140	Identifier	r		1282955	0					
ANR	1283141	Identifier	p		1282955	1					
ANR	1283142	Identifier	y		1282955	1					
ANR	1283143	ReturnStatement	return 0 ;	3911:16:148295:148303	1282955	1	True				
ANR	1283144	PrimaryExpression	0		1282955	0					
ANR	1283145	IfStatement	if ( r1 . p . x == r . p . x && r1 . p . y == r . p . y && r1 . q . x == r . q . x && r1 . q . y == r . q . y )		1282955	9					
ANR	1283146	Condition	r1 . p . x == r . p . x && r1 . p . y == r . p . y && r1 . q . x == r . q . x && r1 . q . y == r . q . y	3912:16:148321:148408	1282955	0	True				
ANR	1283147	AndExpression	r1 . p . x == r . p . x && r1 . p . y == r . p . y && r1 . q . x == r . q . x && r1 . q . y == r . q . y		1282955	0		&&			
ANR	1283148	EqualityExpression	r1 . p . x == r . p . x		1282955	0		==			
ANR	1283149	MemberAccess	r1 . p . x		1282955	0					
ANR	1283150	MemberAccess	r1 . p		1282955	0					
ANR	1283151	Identifier	r1		1282955	0					
ANR	1283152	Identifier	p		1282955	1					
ANR	1283153	Identifier	x		1282955	1					
ANR	1283154	MemberAccess	r . p . x		1282955	1					
ANR	1283155	MemberAccess	r . p		1282955	0					
ANR	1283156	Identifier	r		1282955	0					
ANR	1283157	Identifier	p		1282955	1					
ANR	1283158	Identifier	x		1282955	1					
ANR	1283159	AndExpression	r1 . p . y == r . p . y && r1 . q . x == r . q . x && r1 . q . y == r . q . y		1282955	1		&&			
ANR	1283160	EqualityExpression	r1 . p . y == r . p . y		1282955	0		==			
ANR	1283161	MemberAccess	r1 . p . y		1282955	0					
ANR	1283162	MemberAccess	r1 . p		1282955	0					
ANR	1283163	Identifier	r1		1282955	0					
ANR	1283164	Identifier	p		1282955	1					
ANR	1283165	Identifier	y		1282955	1					
ANR	1283166	MemberAccess	r . p . y		1282955	1					
ANR	1283167	MemberAccess	r . p		1282955	0					
ANR	1283168	Identifier	r		1282955	0					
ANR	1283169	Identifier	p		1282955	1					
ANR	1283170	Identifier	y		1282955	1					
ANR	1283171	AndExpression	r1 . q . x == r . q . x && r1 . q . y == r . q . y		1282955	1		&&			
ANR	1283172	EqualityExpression	r1 . q . x == r . q . x		1282955	0		==			
ANR	1283173	MemberAccess	r1 . q . x		1282955	0					
ANR	1283174	MemberAccess	r1 . q		1282955	0					
ANR	1283175	Identifier	r1		1282955	0					
ANR	1283176	Identifier	q		1282955	1					
ANR	1283177	Identifier	x		1282955	1					
ANR	1283178	MemberAccess	r . q . x		1282955	1					
ANR	1283179	MemberAccess	r . q		1282955	0					
ANR	1283180	Identifier	r		1282955	0					
ANR	1283181	Identifier	q		1282955	1					
ANR	1283182	Identifier	x		1282955	1					
ANR	1283183	EqualityExpression	r1 . q . y == r . q . y		1282955	1		==			
ANR	1283184	MemberAccess	r1 . q . y		1282955	0					
ANR	1283185	MemberAccess	r1 . q		1282955	0					
ANR	1283186	Identifier	r1		1282955	0					
ANR	1283187	Identifier	q		1282955	1					
ANR	1283188	Identifier	y		1282955	1					
ANR	1283189	MemberAccess	r . q . y		1282955	1					
ANR	1283190	MemberAccess	r . q		1282955	0					
ANR	1283191	Identifier	r		1282955	0					
ANR	1283192	Identifier	q		1282955	1					
ANR	1283193	Identifier	y		1282955	1					
ANR	1283194	ExpressionStatement	pfs -> inside = true	3914:16:148427:148445	1282955	1	True				
ANR	1283195	AssignmentExpression	pfs -> inside = true		1282955	0		=			
ANR	1283196	PtrMemberAccess	pfs -> inside		1282955	0					
ANR	1283197	Identifier	pfs		1282955	0					
ANR	1283198	Identifier	inside		1282955	1					
ANR	1283199	Identifier	true		1282955	1					
ANR	1283200	ExpressionStatement	"color_stack_ptr = reserve_colors_inline ( pfs , c , 2 )"	3916:8:148465:148515	1282955	7	True				
ANR	1283201	AssignmentExpression	"color_stack_ptr = reserve_colors_inline ( pfs , c , 2 )"		1282955	0		=			
ANR	1283202	Identifier	color_stack_ptr		1282955	0					
ANR	1283203	CallExpression	"reserve_colors_inline ( pfs , c , 2 )"		1282955	1					
ANR	1283204	Callee	reserve_colors_inline		1282955	0					
ANR	1283205	Identifier	reserve_colors_inline		1282955	0					
ANR	1283206	ArgumentList	pfs		1282955	1					
ANR	1283207	Argument	pfs		1282955	0					
ANR	1283208	Identifier	pfs		1282955	0					
ANR	1283209	Argument	c		1282955	1					
ANR	1283210	Identifier	c		1282955	0					
ANR	1283211	Argument	2		1282955	2					
ANR	1283212	PrimaryExpression	2		1282955	0					
ANR	1283213	IfStatement	if ( color_stack_ptr == NULL )		1282955	8					
ANR	1283214	Condition	color_stack_ptr == NULL	3917:11:148528:148550	1282955	0	True				
ANR	1283215	EqualityExpression	color_stack_ptr == NULL		1282955	0		==			
ANR	1283216	Identifier	color_stack_ptr		1282955	0					
ANR	1283217	Identifier	NULL		1282955	1					
ANR	1283218	ExpressionStatement	return_error ( gs_error_unregistered )	3918:12:148565:148600	1282955	1	True				
ANR	1283219	CallExpression	return_error ( gs_error_unregistered )		1282955	0					
ANR	1283220	Callee	return_error		1282955	0					
ANR	1283221	Identifier	return_error		1282955	0					
ANR	1283222	ArgumentList	gs_error_unregistered		1282955	1					
ANR	1283223	Argument	gs_error_unregistered		1282955	0					
ANR	1283224	Identifier	gs_error_unregistered		1282955	0					
ANR	1283225	ExpressionStatement	"split_patch ( pfs , & s0 , & s1 , p , c )"	3919:8:148633:148665	1282955	9	True				
ANR	1283226	CallExpression	"split_patch ( pfs , & s0 , & s1 , p , c )"		1282955	0					
ANR	1283227	Callee	split_patch		1282955	0					
ANR	1283228	Identifier	split_patch		1282955	0					
ANR	1283229	ArgumentList	pfs		1282955	1					
ANR	1283230	Argument	pfs		1282955	0					
ANR	1283231	Identifier	pfs		1282955	0					
ANR	1283232	Argument	& s0		1282955	1					
ANR	1283233	UnaryOperationExpression	& s0		1282955	0					
ANR	1283234	UnaryOperator	&		1282955	0					
ANR	1283235	Identifier	s0		1282955	1					
ANR	1283236	Argument	& s1		1282955	2					
ANR	1283237	UnaryOperationExpression	& s1		1282955	0					
ANR	1283238	UnaryOperator	&		1282955	0					
ANR	1283239	Identifier	s1		1282955	1					
ANR	1283240	Argument	p		1282955	3					
ANR	1283241	Identifier	p		1282955	0					
ANR	1283242	Argument	c		1282955	4					
ANR	1283243	Identifier	c		1282955	0					
ANR	1283244	IfStatement	if ( kv0 <= 1 )		1282955	10					
ANR	1283245	Condition	kv0 <= 1	3920:12:148679:148686	1282955	0	True				
ANR	1283246	RelationalExpression	kv0 <= 1		1282955	0		<=			
ANR	1283247	Identifier	kv0		1282955	0					
ANR	1283248	PrimaryExpression	1		1282955	1					
ANR	1283249	CompoundStatement		35:22:1147:1147	1282955	1					
ANR	1283250	ExpressionStatement	q0 . p = s0 . pole [ 0 ] [ 0 ]	3921:12:148703:148723	1282955	0	True				
ANR	1283251	AssignmentExpression	q0 . p = s0 . pole [ 0 ] [ 0 ]		1282955	0		=			
ANR	1283252	MemberAccess	q0 . p		1282955	0					
ANR	1283253	Identifier	q0		1282955	0					
ANR	1283254	Identifier	p		1282955	1					
ANR	1283255	ArrayIndexing	s0 . pole [ 0 ] [ 0 ]		1282955	1					
ANR	1283256	ArrayIndexing	s0 . pole [ 0 ]		1282955	0					
ANR	1283257	MemberAccess	s0 . pole		1282955	0					
ANR	1283258	Identifier	s0		1282955	0					
ANR	1283259	Identifier	pole		1282955	1					
ANR	1283260	PrimaryExpression	0		1282955	1					
ANR	1283261	PrimaryExpression	0		1282955	1					
ANR	1283262	ExpressionStatement	q0 . c = s0 . c [ 0 ] [ 0 ]	3922:12:148737:148754	1282955	1	True				
ANR	1283263	AssignmentExpression	q0 . c = s0 . c [ 0 ] [ 0 ]		1282955	0		=			
ANR	1283264	MemberAccess	q0 . c		1282955	0					
ANR	1283265	Identifier	q0		1282955	0					
ANR	1283266	Identifier	c		1282955	1					
ANR	1283267	ArrayIndexing	s0 . c [ 0 ] [ 0 ]		1282955	1					
ANR	1283268	ArrayIndexing	s0 . c [ 0 ]		1282955	0					
ANR	1283269	MemberAccess	s0 . c		1282955	0					
ANR	1283270	Identifier	s0		1282955	0					
ANR	1283271	Identifier	c		1282955	1					
ANR	1283272	PrimaryExpression	0		1282955	1					
ANR	1283273	PrimaryExpression	0		1282955	1					
ANR	1283274	ExpressionStatement	q1 . p = s1 . pole [ 3 ] [ 0 ]	3923:12:148768:148788	1282955	2	True				
ANR	1283275	AssignmentExpression	q1 . p = s1 . pole [ 3 ] [ 0 ]		1282955	0		=			
ANR	1283276	MemberAccess	q1 . p		1282955	0					
ANR	1283277	Identifier	q1		1282955	0					
ANR	1283278	Identifier	p		1282955	1					
ANR	1283279	ArrayIndexing	s1 . pole [ 3 ] [ 0 ]		1282955	1					
ANR	1283280	ArrayIndexing	s1 . pole [ 3 ]		1282955	0					
ANR	1283281	MemberAccess	s1 . pole		1282955	0					
ANR	1283282	Identifier	s1		1282955	0					
ANR	1283283	Identifier	pole		1282955	1					
ANR	1283284	PrimaryExpression	3		1282955	1					
ANR	1283285	PrimaryExpression	0		1282955	1					
ANR	1283286	ExpressionStatement	q1 . c = s1 . c [ 1 ] [ 0 ]	3924:12:148802:148819	1282955	3	True				
ANR	1283287	AssignmentExpression	q1 . c = s1 . c [ 1 ] [ 0 ]		1282955	0		=			
ANR	1283288	MemberAccess	q1 . c		1282955	0					
ANR	1283289	Identifier	q1		1282955	0					
ANR	1283290	Identifier	c		1282955	1					
ANR	1283291	ArrayIndexing	s1 . c [ 1 ] [ 0 ]		1282955	1					
ANR	1283292	ArrayIndexing	s1 . c [ 1 ]		1282955	0					
ANR	1283293	MemberAccess	s1 . c		1282955	0					
ANR	1283294	Identifier	s1		1282955	0					
ANR	1283295	Identifier	c		1282955	1					
ANR	1283296	PrimaryExpression	1		1282955	1					
ANR	1283297	PrimaryExpression	0		1282955	1					
ANR	1283298	ExpressionStatement	q2 . p = s0 . pole [ 3 ] [ 0 ]	3925:12:148833:148853	1282955	4	True				
ANR	1283299	AssignmentExpression	q2 . p = s0 . pole [ 3 ] [ 0 ]		1282955	0		=			
ANR	1283300	MemberAccess	q2 . p		1282955	0					
ANR	1283301	Identifier	q2		1282955	0					
ANR	1283302	Identifier	p		1282955	1					
ANR	1283303	ArrayIndexing	s0 . pole [ 3 ] [ 0 ]		1282955	1					
ANR	1283304	ArrayIndexing	s0 . pole [ 3 ]		1282955	0					
ANR	1283305	MemberAccess	s0 . pole		1282955	0					
ANR	1283306	Identifier	s0		1282955	0					
ANR	1283307	Identifier	pole		1282955	1					
ANR	1283308	PrimaryExpression	3		1282955	1					
ANR	1283309	PrimaryExpression	0		1282955	1					
ANR	1283310	ExpressionStatement	q2 . c = s0 . c [ 1 ] [ 0 ]	3926:12:148867:148884	1282955	5	True				
ANR	1283311	AssignmentExpression	q2 . c = s0 . c [ 1 ] [ 0 ]		1282955	0		=			
ANR	1283312	MemberAccess	q2 . c		1282955	0					
ANR	1283313	Identifier	q2		1282955	0					
ANR	1283314	Identifier	c		1282955	1					
ANR	1283315	ArrayIndexing	s0 . c [ 1 ] [ 0 ]		1282955	1					
ANR	1283316	ArrayIndexing	s0 . c [ 1 ]		1282955	0					
ANR	1283317	MemberAccess	s0 . c		1282955	0					
ANR	1283318	Identifier	s0		1282955	0					
ANR	1283319	Identifier	c		1282955	1					
ANR	1283320	PrimaryExpression	1		1282955	1					
ANR	1283321	PrimaryExpression	0		1282955	1					
ANR	1283322	ExpressionStatement	"code = fill_triangle_wedge ( pfs , & q0 , & q1 , & q2 )"	3927:12:148898:148944	1282955	6	True				
ANR	1283323	AssignmentExpression	"code = fill_triangle_wedge ( pfs , & q0 , & q1 , & q2 )"		1282955	0		=			
ANR	1283324	Identifier	code		1282955	0					
ANR	1283325	CallExpression	"fill_triangle_wedge ( pfs , & q0 , & q1 , & q2 )"		1282955	1					
ANR	1283326	Callee	fill_triangle_wedge		1282955	0					
ANR	1283327	Identifier	fill_triangle_wedge		1282955	0					
ANR	1283328	ArgumentList	pfs		1282955	1					
ANR	1283329	Argument	pfs		1282955	0					
ANR	1283330	Identifier	pfs		1282955	0					
ANR	1283331	Argument	& q0		1282955	1					
ANR	1283332	UnaryOperationExpression	& q0		1282955	0					
ANR	1283333	UnaryOperator	&		1282955	0					
ANR	1283334	Identifier	q0		1282955	1					
ANR	1283335	Argument	& q1		1282955	2					
ANR	1283336	UnaryOperationExpression	& q1		1282955	0					
ANR	1283337	UnaryOperator	&		1282955	0					
ANR	1283338	Identifier	q1		1282955	1					
ANR	1283339	Argument	& q2		1282955	3					
ANR	1283340	UnaryOperationExpression	& q2		1282955	0					
ANR	1283341	UnaryOperator	&		1282955	0					
ANR	1283342	Identifier	q2		1282955	1					
ANR	1283343	IfStatement	if ( kv1 <= 1 && code >= 0 )		1282955	11					
ANR	1283344	Condition	kv1 <= 1 && code >= 0	3929:12:148968:148988	1282955	0	True				
ANR	1283345	AndExpression	kv1 <= 1 && code >= 0		1282955	0		&&			
ANR	1283346	RelationalExpression	kv1 <= 1		1282955	0		<=			
ANR	1283347	Identifier	kv1		1282955	0					
ANR	1283348	PrimaryExpression	1		1282955	1					
ANR	1283349	RelationalExpression	code >= 0		1282955	1		>=			
ANR	1283350	Identifier	code		1282955	0					
ANR	1283351	PrimaryExpression	0		1282955	1					
ANR	1283352	CompoundStatement		44:35:1449:1449	1282955	1					
ANR	1283353	ExpressionStatement	q0 . p = s0 . pole [ 0 ] [ 3 ]	3930:12:149005:149025	1282955	0	True				
ANR	1283354	AssignmentExpression	q0 . p = s0 . pole [ 0 ] [ 3 ]		1282955	0		=			
ANR	1283355	MemberAccess	q0 . p		1282955	0					
ANR	1283356	Identifier	q0		1282955	0					
ANR	1283357	Identifier	p		1282955	1					
ANR	1283358	ArrayIndexing	s0 . pole [ 0 ] [ 3 ]		1282955	1					
ANR	1283359	ArrayIndexing	s0 . pole [ 0 ]		1282955	0					
ANR	1283360	MemberAccess	s0 . pole		1282955	0					
ANR	1283361	Identifier	s0		1282955	0					
ANR	1283362	Identifier	pole		1282955	1					
ANR	1283363	PrimaryExpression	0		1282955	1					
ANR	1283364	PrimaryExpression	3		1282955	1					
ANR	1283365	ExpressionStatement	q0 . c = s0 . c [ 0 ] [ 1 ]	3931:12:149039:149056	1282955	1	True				
ANR	1283366	AssignmentExpression	q0 . c = s0 . c [ 0 ] [ 1 ]		1282955	0		=			
ANR	1283367	MemberAccess	q0 . c		1282955	0					
ANR	1283368	Identifier	q0		1282955	0					
ANR	1283369	Identifier	c		1282955	1					
ANR	1283370	ArrayIndexing	s0 . c [ 0 ] [ 1 ]		1282955	1					
ANR	1283371	ArrayIndexing	s0 . c [ 0 ]		1282955	0					
ANR	1283372	MemberAccess	s0 . c		1282955	0					
ANR	1283373	Identifier	s0		1282955	0					
ANR	1283374	Identifier	c		1282955	1					
ANR	1283375	PrimaryExpression	0		1282955	1					
ANR	1283376	PrimaryExpression	1		1282955	1					
ANR	1283377	ExpressionStatement	q1 . p = s1 . pole [ 3 ] [ 3 ]	3932:12:149070:149090	1282955	2	True				
ANR	1283378	AssignmentExpression	q1 . p = s1 . pole [ 3 ] [ 3 ]		1282955	0		=			
ANR	1283379	MemberAccess	q1 . p		1282955	0					
ANR	1283380	Identifier	q1		1282955	0					
ANR	1283381	Identifier	p		1282955	1					
ANR	1283382	ArrayIndexing	s1 . pole [ 3 ] [ 3 ]		1282955	1					
ANR	1283383	ArrayIndexing	s1 . pole [ 3 ]		1282955	0					
ANR	1283384	MemberAccess	s1 . pole		1282955	0					
ANR	1283385	Identifier	s1		1282955	0					
ANR	1283386	Identifier	pole		1282955	1					
ANR	1283387	PrimaryExpression	3		1282955	1					
ANR	1283388	PrimaryExpression	3		1282955	1					
ANR	1283389	ExpressionStatement	q1 . c = s1 . c [ 1 ] [ 1 ]	3933:12:149104:149121	1282955	3	True				
ANR	1283390	AssignmentExpression	q1 . c = s1 . c [ 1 ] [ 1 ]		1282955	0		=			
ANR	1283391	MemberAccess	q1 . c		1282955	0					
ANR	1283392	Identifier	q1		1282955	0					
ANR	1283393	Identifier	c		1282955	1					
ANR	1283394	ArrayIndexing	s1 . c [ 1 ] [ 1 ]		1282955	1					
ANR	1283395	ArrayIndexing	s1 . c [ 1 ]		1282955	0					
ANR	1283396	MemberAccess	s1 . c		1282955	0					
ANR	1283397	Identifier	s1		1282955	0					
ANR	1283398	Identifier	c		1282955	1					
ANR	1283399	PrimaryExpression	1		1282955	1					
ANR	1283400	PrimaryExpression	1		1282955	1					
ANR	1283401	ExpressionStatement	q2 . p = s0 . pole [ 3 ] [ 3 ]	3934:12:149135:149155	1282955	4	True				
ANR	1283402	AssignmentExpression	q2 . p = s0 . pole [ 3 ] [ 3 ]		1282955	0		=			
ANR	1283403	MemberAccess	q2 . p		1282955	0					
ANR	1283404	Identifier	q2		1282955	0					
ANR	1283405	Identifier	p		1282955	1					
ANR	1283406	ArrayIndexing	s0 . pole [ 3 ] [ 3 ]		1282955	1					
ANR	1283407	ArrayIndexing	s0 . pole [ 3 ]		1282955	0					
ANR	1283408	MemberAccess	s0 . pole		1282955	0					
ANR	1283409	Identifier	s0		1282955	0					
ANR	1283410	Identifier	pole		1282955	1					
ANR	1283411	PrimaryExpression	3		1282955	1					
ANR	1283412	PrimaryExpression	3		1282955	1					
ANR	1283413	ExpressionStatement	q2 . c = s0 . c [ 1 ] [ 1 ]	3935:12:149169:149186	1282955	5	True				
ANR	1283414	AssignmentExpression	q2 . c = s0 . c [ 1 ] [ 1 ]		1282955	0		=			
ANR	1283415	MemberAccess	q2 . c		1282955	0					
ANR	1283416	Identifier	q2		1282955	0					
ANR	1283417	Identifier	c		1282955	1					
ANR	1283418	ArrayIndexing	s0 . c [ 1 ] [ 1 ]		1282955	1					
ANR	1283419	ArrayIndexing	s0 . c [ 1 ]		1282955	0					
ANR	1283420	MemberAccess	s0 . c		1282955	0					
ANR	1283421	Identifier	s0		1282955	0					
ANR	1283422	Identifier	c		1282955	1					
ANR	1283423	PrimaryExpression	1		1282955	1					
ANR	1283424	PrimaryExpression	1		1282955	1					
ANR	1283425	ExpressionStatement	"code = fill_triangle_wedge ( pfs , & q0 , & q1 , & q2 )"	3936:12:149200:149246	1282955	6	True				
ANR	1283426	AssignmentExpression	"code = fill_triangle_wedge ( pfs , & q0 , & q1 , & q2 )"		1282955	0		=			
ANR	1283427	Identifier	code		1282955	0					
ANR	1283428	CallExpression	"fill_triangle_wedge ( pfs , & q0 , & q1 , & q2 )"		1282955	1					
ANR	1283429	Callee	fill_triangle_wedge		1282955	0					
ANR	1283430	Identifier	fill_triangle_wedge		1282955	0					
ANR	1283431	ArgumentList	pfs		1282955	1					
ANR	1283432	Argument	pfs		1282955	0					
ANR	1283433	Identifier	pfs		1282955	0					
ANR	1283434	Argument	& q0		1282955	1					
ANR	1283435	UnaryOperationExpression	& q0		1282955	0					
ANR	1283436	UnaryOperator	&		1282955	0					
ANR	1283437	Identifier	q0		1282955	1					
ANR	1283438	Argument	& q1		1282955	2					
ANR	1283439	UnaryOperationExpression	& q1		1282955	0					
ANR	1283440	UnaryOperator	&		1282955	0					
ANR	1283441	Identifier	q1		1282955	1					
ANR	1283442	Argument	& q2		1282955	3					
ANR	1283443	UnaryOperationExpression	& q2		1282955	0					
ANR	1283444	UnaryOperator	&		1282955	0					
ANR	1283445	Identifier	q2		1282955	1					
ANR	1283446	IfStatement	if ( code >= 0 )		1282955	12					
ANR	1283447	Condition	code >= 0	3938:12:149270:149278	1282955	0	True				
ANR	1283448	RelationalExpression	code >= 0		1282955	0		>=			
ANR	1283449	Identifier	code		1282955	0					
ANR	1283450	PrimaryExpression	0		1282955	1					
ANR	1283451	ExpressionStatement	"code = fill_patch ( pfs , & s0 , kv / 2 , kv0 / 2 , kv1 / 2 )"	3939:12:149293:149346	1282955	1	True				
ANR	1283452	AssignmentExpression	"code = fill_patch ( pfs , & s0 , kv / 2 , kv0 / 2 , kv1 / 2 )"		1282955	0		=			
ANR	1283453	Identifier	code		1282955	0					
ANR	1283454	CallExpression	"fill_patch ( pfs , & s0 , kv / 2 , kv0 / 2 , kv1 / 2 )"		1282955	1					
ANR	1283455	Callee	fill_patch		1282955	0					
ANR	1283456	Identifier	fill_patch		1282955	0					
ANR	1283457	ArgumentList	pfs		1282955	1					
ANR	1283458	Argument	pfs		1282955	0					
ANR	1283459	Identifier	pfs		1282955	0					
ANR	1283460	Argument	& s0		1282955	1					
ANR	1283461	UnaryOperationExpression	& s0		1282955	0					
ANR	1283462	UnaryOperator	&		1282955	0					
ANR	1283463	Identifier	s0		1282955	1					
ANR	1283464	Argument	kv / 2		1282955	2					
ANR	1283465	MultiplicativeExpression	kv / 2		1282955	0		/			
ANR	1283466	Identifier	kv		1282955	0					
ANR	1283467	PrimaryExpression	2		1282955	1					
ANR	1283468	Argument	kv0 / 2		1282955	3					
ANR	1283469	MultiplicativeExpression	kv0 / 2		1282955	0		/			
ANR	1283470	Identifier	kv0		1282955	0					
ANR	1283471	PrimaryExpression	2		1282955	1					
ANR	1283472	Argument	kv1 / 2		1282955	4					
ANR	1283473	MultiplicativeExpression	kv1 / 2		1282955	0		/			
ANR	1283474	Identifier	kv1		1282955	0					
ANR	1283475	PrimaryExpression	2		1282955	1					
ANR	1283476	IfStatement	if ( code >= 0 )		1282955	13					
ANR	1283477	Condition	code >= 0	3940:12:149360:149368	1282955	0	True				
ANR	1283478	RelationalExpression	code >= 0		1282955	0		>=			
ANR	1283479	Identifier	code		1282955	0					
ANR	1283480	PrimaryExpression	0		1282955	1					
ANR	1283481	ExpressionStatement	"code = fill_patch ( pfs , & s1 , kv / 2 , kv0 / 2 , kv1 / 2 )"	3941:12:149383:149436	1282955	1	True				
ANR	1283482	AssignmentExpression	"code = fill_patch ( pfs , & s1 , kv / 2 , kv0 / 2 , kv1 / 2 )"		1282955	0		=			
ANR	1283483	Identifier	code		1282955	0					
ANR	1283484	CallExpression	"fill_patch ( pfs , & s1 , kv / 2 , kv0 / 2 , kv1 / 2 )"		1282955	1					
ANR	1283485	Callee	fill_patch		1282955	0					
ANR	1283486	Identifier	fill_patch		1282955	0					
ANR	1283487	ArgumentList	pfs		1282955	1					
ANR	1283488	Argument	pfs		1282955	0					
ANR	1283489	Identifier	pfs		1282955	0					
ANR	1283490	Argument	& s1		1282955	1					
ANR	1283491	UnaryOperationExpression	& s1		1282955	0					
ANR	1283492	UnaryOperator	&		1282955	0					
ANR	1283493	Identifier	s1		1282955	1					
ANR	1283494	Argument	kv / 2		1282955	2					
ANR	1283495	MultiplicativeExpression	kv / 2		1282955	0		/			
ANR	1283496	Identifier	kv		1282955	0					
ANR	1283497	PrimaryExpression	2		1282955	1					
ANR	1283498	Argument	kv0 / 2		1282955	3					
ANR	1283499	MultiplicativeExpression	kv0 / 2		1282955	0		/			
ANR	1283500	Identifier	kv0		1282955	0					
ANR	1283501	PrimaryExpression	2		1282955	1					
ANR	1283502	Argument	kv1 / 2		1282955	4					
ANR	1283503	MultiplicativeExpression	kv1 / 2		1282955	0		/			
ANR	1283504	Identifier	kv1		1282955	0					
ANR	1283505	PrimaryExpression	2		1282955	1					
ANR	1283506	ExpressionStatement	"release_colors_inline ( pfs , color_stack_ptr , 2 )"	3961:8:150434:150480	1282955	14	True				
ANR	1283507	CallExpression	"release_colors_inline ( pfs , color_stack_ptr , 2 )"		1282955	0					
ANR	1283508	Callee	release_colors_inline		1282955	0					
ANR	1283509	Identifier	release_colors_inline		1282955	0					
ANR	1283510	ArgumentList	pfs		1282955	1					
ANR	1283511	Argument	pfs		1282955	0					
ANR	1283512	Identifier	pfs		1282955	0					
ANR	1283513	Argument	color_stack_ptr		1282955	1					
ANR	1283514	Identifier	color_stack_ptr		1282955	0					
ANR	1283515	Argument	2		1282955	2					
ANR	1283516	PrimaryExpression	2		1282955	0					
ANR	1283517	ExpressionStatement	pfs -> inside = save_inside	3962:8:150490:150515	1282955	15	True				
ANR	1283518	AssignmentExpression	pfs -> inside = save_inside		1282955	0		=			
ANR	1283519	PtrMemberAccess	pfs -> inside		1282955	0					
ANR	1283520	Identifier	pfs		1282955	0					
ANR	1283521	Identifier	inside		1282955	1					
ANR	1283522	Identifier	save_inside		1282955	1					
ANR	1283523	ReturnStatement	return code ;	3963:8:150525:150536	1282955	16	True				
ANR	1283524	Identifier	code		1282955	0					
ANR	1283525	ReturnType	static int		1282955	1					
ANR	1283526	Identifier	fill_patch		1282955	2					
ANR	1283527	ParameterList	"patch_fill_state_t * pfs , const tensor_patch * p , int kv , int kv0 , int kv1"		1282955	3					
ANR	1283528	Parameter	patch_fill_state_t * pfs	3885:11:147467:147489	1282955	0	True				
ANR	1283529	ParameterType	patch_fill_state_t *		1282955	0					
ANR	1283530	Identifier	pfs		1282955	1					
ANR	1283531	Parameter	const tensor_patch * p	3885:36:147492:147512	1282955	1	True				
ANR	1283532	ParameterType	const tensor_patch *		1282955	0					
ANR	1283533	Identifier	p		1282955	1					
ANR	1283534	Parameter	int kv	3885:59:147515:147520	1282955	2	True				
ANR	1283535	ParameterType	int		1282955	0					
ANR	1283536	Identifier	kv		1282955	1					
ANR	1283537	Parameter	int kv0	3885:67:147523:147529	1282955	3	True				
ANR	1283538	ParameterType	int		1282955	0					
ANR	1283539	Identifier	kv0		1282955	1					
ANR	1283540	Parameter	int kv1	3885:76:147532:147538	1282955	4	True				
ANR	1283541	ParameterType	int		1282955	0					
ANR	1283542	Identifier	kv1		1282955	1					
ANR	1283543	CFGEntryNode	ENTRY		1282955		True				
ANR	1283544	CFGExitNode	EXIT		1282955		True				
ANR	1283545	Symbol	fill_triangle_wedge		1282955						
ANR	1283546	Symbol	r . q		1282955						
ANR	1283547	Symbol	r . p		1282955						
ANR	1283548	Symbol	* * s1		1282955						
ANR	1283549	Symbol	& q0		1282955						
ANR	1283550	Symbol	* * s1 . c		1282955						
ANR	1283551	Symbol	& q2		1282955						
ANR	1283552	Symbol	* * s0		1282955						
ANR	1283553	Symbol	& q1		1282955						
ANR	1283554	Symbol	* s0 . c		1282955						
ANR	1283555	Symbol	s1 . c		1282955						
ANR	1283556	Symbol	q2 . c		1282955						
ANR	1283557	Symbol	* s1 . c		1282955						
ANR	1283558	Symbol	r1 . q		1282955						
ANR	1283559	Symbol	r1 . p		1282955						
ANR	1283560	Symbol	q2 . p		1282955						
ANR	1283561	Symbol	s0		1282955						
ANR	1283562	Symbol	s1		1282955						
ANR	1283563	Symbol	s0 . c		1282955						
ANR	1283564	Symbol	* * s0 . c		1282955						
ANR	1283565	Symbol	is_x_bended		1282955						
ANR	1283566	Symbol	NULL		1282955						
ANR	1283567	Symbol	kv0		1282955						
ANR	1283568	Symbol	q1 . c		1282955						
ANR	1283569	Symbol	kv1		1282955						
ANR	1283570	Symbol	* pfs		1282955						
ANR	1283571	Symbol	q1 . p		1282955						
ANR	1283572	Symbol	save_inside		1282955						
ANR	1283573	Symbol	is_patch_narrow		1282955						
ANR	1283574	Symbol	* s0 . pole		1282955						
ANR	1283575	Symbol	color_stack_ptr		1282955						
ANR	1283576	Symbol	q0 . c		1282955						
ANR	1283577	Symbol	true		1282955						
ANR	1283578	Symbol	s1 . pole		1282955						
ANR	1283579	Symbol	q0 . p		1282955						
ANR	1283580	Symbol	pfs		1282955						
ANR	1283581	Symbol	* * s1 . pole		1282955						
ANR	1283582	Symbol	* s0		1282955						
ANR	1283583	Symbol	gs_error_unregistered		1282955						
ANR	1283584	Symbol	code		1282955						
ANR	1283585	Symbol	& s0		1282955						
ANR	1283586	Symbol	* s1		1282955						
ANR	1283587	Symbol	& s1		1282955						
ANR	1283588	Symbol	r . q . x		1282955						
ANR	1283589	Symbol	reserve_colors_inline		1282955						
ANR	1283590	Symbol	r . q . y		1282955						
ANR	1283591	Symbol	q0		1282955						
ANR	1283592	Symbol	INTERPATCH_PADDING		1282955						
ANR	1283593	Symbol	q1		1282955						
ANR	1283594	Symbol	q2		1282955						
ANR	1283595	Symbol	pfs -> rect		1282955						
ANR	1283596	Symbol	r1 . p . y		1282955						
ANR	1283597	Symbol	c		1282955						
ANR	1283598	Symbol	r . p . x		1282955						
ANR	1283599	Symbol	pfs -> inside		1282955						
ANR	1283600	Symbol	r . p . y		1282955						
ANR	1283601	Symbol	r1 . p . x		1282955						
ANR	1283602	Symbol	fill_patch		1282955						
ANR	1283603	Symbol	fill_stripe		1282955						
ANR	1283604	Symbol	kv		1282955						
ANR	1283605	Symbol	p		1282955						
ANR	1283606	Symbol	r1 . q . x		1282955						
ANR	1283607	Symbol	r1 . q . y		1282955						
ANR	1283608	Symbol	r		1282955						
ANR	1283609	Symbol	& r		1282955						
ANR	1283610	Symbol	s0 . pole		1282955						
ANR	1283611	Symbol	* * s0 . pole		1282955						
ANR	1283612	Symbol	* s1 . pole		1282955						
ANR	1283613	Symbol	r1		1282955						
ANR	1283614	Function	lcp1	3967:0:150547:150702							
ANR	1283615	FunctionDef	"lcp1 (int64_t p0 , int64_t p3)"		1283614	0					
ANR	1283616	CompoundStatement		3969:0:150598:150702	1283614	0					
ANR	1283617	ReturnStatement	return ( p0 + p0 + p3 ) ;	3970:4:150679:150700	1283614	0	True				
ANR	1283618	AdditiveExpression	p0 + p0 + p3		1283614	0		+			
ANR	1283619	Identifier	p0		1283614	0					
ANR	1283620	AdditiveExpression	p0 + p3		1283614	1		+			
ANR	1283621	Identifier	p0		1283614	0					
ANR	1283622	Identifier	p3		1283614	1					
ANR	1283623	ReturnType	static inline int64_t		1283614	1					
ANR	1283624	Identifier	lcp1		1283614	2					
ANR	1283625	ParameterList	"int64_t p0 , int64_t p3"		1283614	3					
ANR	1283626	Parameter	int64_t p0	3968:5:150574:150583	1283614	0	True				
ANR	1283627	ParameterType	int64_t		1283614	0					
ANR	1283628	Identifier	p0		1283614	1					
ANR	1283629	Parameter	int64_t p3	3968:17:150586:150595	1283614	1	True				
ANR	1283630	ParameterType	int64_t		1283614	0					
ANR	1283631	Identifier	p3		1283614	1					
ANR	1283632	CFGEntryNode	ENTRY		1283614		True				
ANR	1283633	CFGExitNode	EXIT		1283614		True				
ANR	1283634	Symbol	p0		1283614						
ANR	1283635	Symbol	p3		1283614						
ANR	1283636	Function	lcp2	3972:0:150704:150859							
ANR	1283637	FunctionDef	"lcp2 (int64_t p0 , int64_t p3)"		1283636	0					
ANR	1283638	CompoundStatement		3974:0:150755:150859	1283636	0					
ANR	1283639	ReturnStatement	return ( p0 + p3 + p3 ) ;	3975:4:150836:150857	1283636	0	True				
ANR	1283640	AdditiveExpression	p0 + p3 + p3		1283636	0		+			
ANR	1283641	Identifier	p0		1283636	0					
ANR	1283642	AdditiveExpression	p3 + p3		1283636	1		+			
ANR	1283643	Identifier	p3		1283636	0					
ANR	1283644	Identifier	p3		1283636	1					
ANR	1283645	ReturnType	static inline int64_t		1283636	1					
ANR	1283646	Identifier	lcp2		1283636	2					
ANR	1283647	ParameterList	"int64_t p0 , int64_t p3"		1283636	3					
ANR	1283648	Parameter	int64_t p0	3973:5:150731:150740	1283636	0	True				
ANR	1283649	ParameterType	int64_t		1283636	0					
ANR	1283650	Identifier	p0		1283636	1					
ANR	1283651	Parameter	int64_t p3	3973:17:150743:150752	1283636	1	True				
ANR	1283652	ParameterType	int64_t		1283636	0					
ANR	1283653	Identifier	p3		1283636	1					
ANR	1283654	CFGEntryNode	ENTRY		1283636		True				
ANR	1283655	CFGExitNode	EXIT		1283636		True				
ANR	1283656	Symbol	p0		1283636						
ANR	1283657	Symbol	p3		1283636						
ANR	1283658	Function	patch_set_color	3978:0:150862:151137							
ANR	1283659	FunctionDef	"patch_set_color (const patch_fill_state_t * pfs , patch_color_t * c , const float * cc)"		1283658	0					
ANR	1283660	CompoundStatement		3980:0:150956:151137	1283658	0					
ANR	1283661	IfStatement	if ( pfs -> Function )		1283658	0					
ANR	1283662	Condition	pfs -> Function	3981:8:150966:150978	1283658	0	True				
ANR	1283663	PtrMemberAccess	pfs -> Function		1283658	0					
ANR	1283664	Identifier	pfs		1283658	0					
ANR	1283665	Identifier	Function		1283658	1					
ANR	1283666	CompoundStatement		2:23:24:24	1283658	1					
ANR	1283667	ExpressionStatement	c -> t [ 0 ] = cc [ 0 ]	3982:8:150991:151006	1283658	0	True				
ANR	1283668	AssignmentExpression	c -> t [ 0 ] = cc [ 0 ]		1283658	0		=			
ANR	1283669	ArrayIndexing	c -> t [ 0 ]		1283658	0					
ANR	1283670	PtrMemberAccess	c -> t		1283658	0					
ANR	1283671	Identifier	c		1283658	0					
ANR	1283672	Identifier	t		1283658	1					
ANR	1283673	PrimaryExpression	0		1283658	1					
ANR	1283674	ArrayIndexing	cc [ 0 ]		1283658	1					
ANR	1283675	Identifier	cc		1283658	0					
ANR	1283676	PrimaryExpression	0		1283658	1					
ANR	1283677	ExpressionStatement	c -> t [ 1 ] = cc [ 1 ]	3983:8:151016:151031	1283658	1	True				
ANR	1283678	AssignmentExpression	c -> t [ 1 ] = cc [ 1 ]		1283658	0		=			
ANR	1283679	ArrayIndexing	c -> t [ 1 ]		1283658	0					
ANR	1283680	PtrMemberAccess	c -> t		1283658	0					
ANR	1283681	Identifier	c		1283658	0					
ANR	1283682	Identifier	t		1283658	1					
ANR	1283683	PrimaryExpression	1		1283658	1					
ANR	1283684	ArrayIndexing	cc [ 1 ]		1283658	1					
ANR	1283685	Identifier	cc		1283658	0					
ANR	1283686	PrimaryExpression	1		1283658	1					
ANR	1283687	ElseStatement	else		1283658	0					
ANR	1283688	ExpressionStatement	"memcpy ( c -> cc . paint . values , cc , sizeof ( c -> cc . paint . values [ 0 ] ) * pfs -> num_components )"	3985:8:151052:151135	1283658	0	True				
ANR	1283689	CallExpression	"memcpy ( c -> cc . paint . values , cc , sizeof ( c -> cc . paint . values [ 0 ] ) * pfs -> num_components )"		1283658	0					
ANR	1283690	Callee	memcpy		1283658	0					
ANR	1283691	Identifier	memcpy		1283658	0					
ANR	1283692	ArgumentList	c -> cc . paint . values		1283658	1					
ANR	1283693	Argument	c -> cc . paint . values		1283658	0					
ANR	1283694	MemberAccess	c -> cc . paint . values		1283658	0					
ANR	1283695	MemberAccess	c -> cc . paint		1283658	0					
ANR	1283696	PtrMemberAccess	c -> cc		1283658	0					
ANR	1283697	Identifier	c		1283658	0					
ANR	1283698	Identifier	cc		1283658	1					
ANR	1283699	Identifier	paint		1283658	1					
ANR	1283700	Identifier	values		1283658	1					
ANR	1283701	Argument	cc		1283658	1					
ANR	1283702	Identifier	cc		1283658	0					
ANR	1283703	Argument	sizeof ( c -> cc . paint . values [ 0 ] ) * pfs -> num_components		1283658	2					
ANR	1283704	MultiplicativeExpression	sizeof ( c -> cc . paint . values [ 0 ] ) * pfs -> num_components		1283658	0		*			
ANR	1283705	SizeofExpression	sizeof ( c -> cc . paint . values [ 0 ] )		1283658	0					
ANR	1283706	Sizeof	sizeof		1283658	0					
ANR	1283707	ArrayIndexing	c -> cc . paint . values [ 0 ]		1283658	1					
ANR	1283708	MemberAccess	c -> cc . paint . values		1283658	0					
ANR	1283709	MemberAccess	c -> cc . paint		1283658	0					
ANR	1283710	PtrMemberAccess	c -> cc		1283658	0					
ANR	1283711	Identifier	c		1283658	0					
ANR	1283712	Identifier	cc		1283658	1					
ANR	1283713	Identifier	paint		1283658	1					
ANR	1283714	Identifier	values		1283658	1					
ANR	1283715	PrimaryExpression	0		1283658	1					
ANR	1283716	PtrMemberAccess	pfs -> num_components		1283658	1					
ANR	1283717	Identifier	pfs		1283658	0					
ANR	1283718	Identifier	num_components		1283658	1					
ANR	1283719	ReturnType	static void		1283658	1					
ANR	1283720	Identifier	patch_set_color		1283658	2					
ANR	1283721	ParameterList	"const patch_fill_state_t * pfs , patch_color_t * c , const float * cc"		1283658	3					
ANR	1283722	Parameter	const patch_fill_state_t * pfs	3979:16:150890:150918	1283658	0	True				
ANR	1283723	ParameterType	const patch_fill_state_t *		1283658	0					
ANR	1283724	Identifier	pfs		1283658	1					
ANR	1283725	Parameter	patch_color_t * c	3979:47:150921:150936	1283658	1	True				
ANR	1283726	ParameterType	patch_color_t *		1283658	0					
ANR	1283727	Identifier	c		1283658	1					
ANR	1283728	Parameter	const float * cc	3979:65:150939:150953	1283658	2	True				
ANR	1283729	ParameterType	const float *		1283658	0					
ANR	1283730	Identifier	cc		1283658	1					
ANR	1283731	CFGEntryNode	ENTRY		1283658		True				
ANR	1283732	CFGExitNode	EXIT		1283658		True				
ANR	1283733	Symbol	cc		1283658						
ANR	1283734	Symbol	c		1283658						
ANR	1283735	Symbol	pfs -> Function		1283658						
ANR	1283736	Symbol	* cc		1283658						
ANR	1283737	Symbol	* c -> cc		1283658						
ANR	1283738	Symbol	* pfs		1283658						
ANR	1283739	Symbol	* * c		1283658						
ANR	1283740	Symbol	c -> cc		1283658						
ANR	1283741	Symbol	c -> t		1283658						
ANR	1283742	Symbol	* c		1283658						
ANR	1283743	Symbol	* c -> cc . paint		1283658						
ANR	1283744	Symbol	c -> cc . paint		1283658						
ANR	1283745	Symbol	pfs -> num_components		1283658						
ANR	1283746	Symbol	* c -> cc . paint . values		1283658						
ANR	1283747	Symbol	* c -> t		1283658						
ANR	1283748	Symbol	pfs		1283658						
ANR	1283749	Symbol	c -> cc . paint . values		1283658						
ANR	1283750	Function	make_tensor_patch	3988:0:151140:155307							
ANR	1283751	FunctionDef	"make_tensor_patch (const patch_fill_state_t * pfs , tensor_patch * p , const patch_curve_t curve [ 4 ] , const gs_fixed_point interior [ 4 ])"		1283750	0					
ANR	1283752	CompoundStatement		3991:0:151293:155307	1283750	0					
ANR	1283753	IdentifierDeclStatement	const gs_color_space * pcs = pfs -> direct_space ;	3992:4:151299:151344	1283750	0	True				
ANR	1283754	IdentifierDecl	* pcs = pfs -> direct_space		1283750	0					
ANR	1283755	IdentifierDeclType	const gs_color_space *		1283750	0					
ANR	1283756	Identifier	pcs		1283750	1					
ANR	1283757	AssignmentExpression	* pcs = pfs -> direct_space		1283750	2		=			
ANR	1283758	Identifier	pcs		1283750	0					
ANR	1283759	PtrMemberAccess	pfs -> direct_space		1283750	1					
ANR	1283760	Identifier	pfs		1283750	0					
ANR	1283761	Identifier	direct_space		1283750	1					
ANR	1283762	ExpressionStatement	p -> pole [ 0 ] [ 0 ] = curve [ 0 ] . vertex . p	3994:4:151351:151384	1283750	1	True				
ANR	1283763	AssignmentExpression	p -> pole [ 0 ] [ 0 ] = curve [ 0 ] . vertex . p		1283750	0		=			
ANR	1283764	ArrayIndexing	p -> pole [ 0 ] [ 0 ]		1283750	0					
ANR	1283765	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1283766	PtrMemberAccess	p -> pole		1283750	0					
ANR	1283767	Identifier	p		1283750	0					
ANR	1283768	Identifier	pole		1283750	1					
ANR	1283769	PrimaryExpression	0		1283750	1					
ANR	1283770	PrimaryExpression	0		1283750	1					
ANR	1283771	MemberAccess	curve [ 0 ] . vertex . p		1283750	1					
ANR	1283772	MemberAccess	curve [ 0 ] . vertex		1283750	0					
ANR	1283773	ArrayIndexing	curve [ 0 ]		1283750	0					
ANR	1283774	Identifier	curve		1283750	0					
ANR	1283775	PrimaryExpression	0		1283750	1					
ANR	1283776	Identifier	vertex		1283750	1					
ANR	1283777	Identifier	p		1283750	1					
ANR	1283778	ExpressionStatement	p -> pole [ 1 ] [ 0 ] = curve [ 0 ] . control [ 0 ]	3995:4:151390:151425	1283750	2	True				
ANR	1283779	AssignmentExpression	p -> pole [ 1 ] [ 0 ] = curve [ 0 ] . control [ 0 ]		1283750	0		=			
ANR	1283780	ArrayIndexing	p -> pole [ 1 ] [ 0 ]		1283750	0					
ANR	1283781	ArrayIndexing	p -> pole [ 1 ]		1283750	0					
ANR	1283782	PtrMemberAccess	p -> pole		1283750	0					
ANR	1283783	Identifier	p		1283750	0					
ANR	1283784	Identifier	pole		1283750	1					
ANR	1283785	PrimaryExpression	1		1283750	1					
ANR	1283786	PrimaryExpression	0		1283750	1					
ANR	1283787	ArrayIndexing	curve [ 0 ] . control [ 0 ]		1283750	1					
ANR	1283788	MemberAccess	curve [ 0 ] . control		1283750	0					
ANR	1283789	ArrayIndexing	curve [ 0 ]		1283750	0					
ANR	1283790	Identifier	curve		1283750	0					
ANR	1283791	PrimaryExpression	0		1283750	1					
ANR	1283792	Identifier	control		1283750	1					
ANR	1283793	PrimaryExpression	0		1283750	1					
ANR	1283794	ExpressionStatement	p -> pole [ 2 ] [ 0 ] = curve [ 0 ] . control [ 1 ]	3996:4:151431:151466	1283750	3	True				
ANR	1283795	AssignmentExpression	p -> pole [ 2 ] [ 0 ] = curve [ 0 ] . control [ 1 ]		1283750	0		=			
ANR	1283796	ArrayIndexing	p -> pole [ 2 ] [ 0 ]		1283750	0					
ANR	1283797	ArrayIndexing	p -> pole [ 2 ]		1283750	0					
ANR	1283798	PtrMemberAccess	p -> pole		1283750	0					
ANR	1283799	Identifier	p		1283750	0					
ANR	1283800	Identifier	pole		1283750	1					
ANR	1283801	PrimaryExpression	2		1283750	1					
ANR	1283802	PrimaryExpression	0		1283750	1					
ANR	1283803	ArrayIndexing	curve [ 0 ] . control [ 1 ]		1283750	1					
ANR	1283804	MemberAccess	curve [ 0 ] . control		1283750	0					
ANR	1283805	ArrayIndexing	curve [ 0 ]		1283750	0					
ANR	1283806	Identifier	curve		1283750	0					
ANR	1283807	PrimaryExpression	0		1283750	1					
ANR	1283808	Identifier	control		1283750	1					
ANR	1283809	PrimaryExpression	1		1283750	1					
ANR	1283810	ExpressionStatement	p -> pole [ 3 ] [ 0 ] = curve [ 1 ] . vertex . p	3997:4:151472:151505	1283750	4	True				
ANR	1283811	AssignmentExpression	p -> pole [ 3 ] [ 0 ] = curve [ 1 ] . vertex . p		1283750	0		=			
ANR	1283812	ArrayIndexing	p -> pole [ 3 ] [ 0 ]		1283750	0					
ANR	1283813	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1283814	PtrMemberAccess	p -> pole		1283750	0					
ANR	1283815	Identifier	p		1283750	0					
ANR	1283816	Identifier	pole		1283750	1					
ANR	1283817	PrimaryExpression	3		1283750	1					
ANR	1283818	PrimaryExpression	0		1283750	1					
ANR	1283819	MemberAccess	curve [ 1 ] . vertex . p		1283750	1					
ANR	1283820	MemberAccess	curve [ 1 ] . vertex		1283750	0					
ANR	1283821	ArrayIndexing	curve [ 1 ]		1283750	0					
ANR	1283822	Identifier	curve		1283750	0					
ANR	1283823	PrimaryExpression	1		1283750	1					
ANR	1283824	Identifier	vertex		1283750	1					
ANR	1283825	Identifier	p		1283750	1					
ANR	1283826	ExpressionStatement	p -> pole [ 3 ] [ 1 ] = curve [ 1 ] . control [ 0 ]	3998:4:151511:151546	1283750	5	True				
ANR	1283827	AssignmentExpression	p -> pole [ 3 ] [ 1 ] = curve [ 1 ] . control [ 0 ]		1283750	0		=			
ANR	1283828	ArrayIndexing	p -> pole [ 3 ] [ 1 ]		1283750	0					
ANR	1283829	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1283830	PtrMemberAccess	p -> pole		1283750	0					
ANR	1283831	Identifier	p		1283750	0					
ANR	1283832	Identifier	pole		1283750	1					
ANR	1283833	PrimaryExpression	3		1283750	1					
ANR	1283834	PrimaryExpression	1		1283750	1					
ANR	1283835	ArrayIndexing	curve [ 1 ] . control [ 0 ]		1283750	1					
ANR	1283836	MemberAccess	curve [ 1 ] . control		1283750	0					
ANR	1283837	ArrayIndexing	curve [ 1 ]		1283750	0					
ANR	1283838	Identifier	curve		1283750	0					
ANR	1283839	PrimaryExpression	1		1283750	1					
ANR	1283840	Identifier	control		1283750	1					
ANR	1283841	PrimaryExpression	0		1283750	1					
ANR	1283842	ExpressionStatement	p -> pole [ 3 ] [ 2 ] = curve [ 1 ] . control [ 1 ]	3999:4:151552:151587	1283750	6	True				
ANR	1283843	AssignmentExpression	p -> pole [ 3 ] [ 2 ] = curve [ 1 ] . control [ 1 ]		1283750	0		=			
ANR	1283844	ArrayIndexing	p -> pole [ 3 ] [ 2 ]		1283750	0					
ANR	1283845	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1283846	PtrMemberAccess	p -> pole		1283750	0					
ANR	1283847	Identifier	p		1283750	0					
ANR	1283848	Identifier	pole		1283750	1					
ANR	1283849	PrimaryExpression	3		1283750	1					
ANR	1283850	PrimaryExpression	2		1283750	1					
ANR	1283851	ArrayIndexing	curve [ 1 ] . control [ 1 ]		1283750	1					
ANR	1283852	MemberAccess	curve [ 1 ] . control		1283750	0					
ANR	1283853	ArrayIndexing	curve [ 1 ]		1283750	0					
ANR	1283854	Identifier	curve		1283750	0					
ANR	1283855	PrimaryExpression	1		1283750	1					
ANR	1283856	Identifier	control		1283750	1					
ANR	1283857	PrimaryExpression	1		1283750	1					
ANR	1283858	ExpressionStatement	p -> pole [ 3 ] [ 3 ] = curve [ 2 ] . vertex . p	4000:4:151593:151626	1283750	7	True				
ANR	1283859	AssignmentExpression	p -> pole [ 3 ] [ 3 ] = curve [ 2 ] . vertex . p		1283750	0		=			
ANR	1283860	ArrayIndexing	p -> pole [ 3 ] [ 3 ]		1283750	0					
ANR	1283861	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1283862	PtrMemberAccess	p -> pole		1283750	0					
ANR	1283863	Identifier	p		1283750	0					
ANR	1283864	Identifier	pole		1283750	1					
ANR	1283865	PrimaryExpression	3		1283750	1					
ANR	1283866	PrimaryExpression	3		1283750	1					
ANR	1283867	MemberAccess	curve [ 2 ] . vertex . p		1283750	1					
ANR	1283868	MemberAccess	curve [ 2 ] . vertex		1283750	0					
ANR	1283869	ArrayIndexing	curve [ 2 ]		1283750	0					
ANR	1283870	Identifier	curve		1283750	0					
ANR	1283871	PrimaryExpression	2		1283750	1					
ANR	1283872	Identifier	vertex		1283750	1					
ANR	1283873	Identifier	p		1283750	1					
ANR	1283874	ExpressionStatement	p -> pole [ 2 ] [ 3 ] = curve [ 2 ] . control [ 0 ]	4001:4:151632:151667	1283750	8	True				
ANR	1283875	AssignmentExpression	p -> pole [ 2 ] [ 3 ] = curve [ 2 ] . control [ 0 ]		1283750	0		=			
ANR	1283876	ArrayIndexing	p -> pole [ 2 ] [ 3 ]		1283750	0					
ANR	1283877	ArrayIndexing	p -> pole [ 2 ]		1283750	0					
ANR	1283878	PtrMemberAccess	p -> pole		1283750	0					
ANR	1283879	Identifier	p		1283750	0					
ANR	1283880	Identifier	pole		1283750	1					
ANR	1283881	PrimaryExpression	2		1283750	1					
ANR	1283882	PrimaryExpression	3		1283750	1					
ANR	1283883	ArrayIndexing	curve [ 2 ] . control [ 0 ]		1283750	1					
ANR	1283884	MemberAccess	curve [ 2 ] . control		1283750	0					
ANR	1283885	ArrayIndexing	curve [ 2 ]		1283750	0					
ANR	1283886	Identifier	curve		1283750	0					
ANR	1283887	PrimaryExpression	2		1283750	1					
ANR	1283888	Identifier	control		1283750	1					
ANR	1283889	PrimaryExpression	0		1283750	1					
ANR	1283890	ExpressionStatement	p -> pole [ 1 ] [ 3 ] = curve [ 2 ] . control [ 1 ]	4002:4:151673:151708	1283750	9	True				
ANR	1283891	AssignmentExpression	p -> pole [ 1 ] [ 3 ] = curve [ 2 ] . control [ 1 ]		1283750	0		=			
ANR	1283892	ArrayIndexing	p -> pole [ 1 ] [ 3 ]		1283750	0					
ANR	1283893	ArrayIndexing	p -> pole [ 1 ]		1283750	0					
ANR	1283894	PtrMemberAccess	p -> pole		1283750	0					
ANR	1283895	Identifier	p		1283750	0					
ANR	1283896	Identifier	pole		1283750	1					
ANR	1283897	PrimaryExpression	1		1283750	1					
ANR	1283898	PrimaryExpression	3		1283750	1					
ANR	1283899	ArrayIndexing	curve [ 2 ] . control [ 1 ]		1283750	1					
ANR	1283900	MemberAccess	curve [ 2 ] . control		1283750	0					
ANR	1283901	ArrayIndexing	curve [ 2 ]		1283750	0					
ANR	1283902	Identifier	curve		1283750	0					
ANR	1283903	PrimaryExpression	2		1283750	1					
ANR	1283904	Identifier	control		1283750	1					
ANR	1283905	PrimaryExpression	1		1283750	1					
ANR	1283906	ExpressionStatement	p -> pole [ 0 ] [ 3 ] = curve [ 3 ] . vertex . p	4003:4:151714:151747	1283750	10	True				
ANR	1283907	AssignmentExpression	p -> pole [ 0 ] [ 3 ] = curve [ 3 ] . vertex . p		1283750	0		=			
ANR	1283908	ArrayIndexing	p -> pole [ 0 ] [ 3 ]		1283750	0					
ANR	1283909	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1283910	PtrMemberAccess	p -> pole		1283750	0					
ANR	1283911	Identifier	p		1283750	0					
ANR	1283912	Identifier	pole		1283750	1					
ANR	1283913	PrimaryExpression	0		1283750	1					
ANR	1283914	PrimaryExpression	3		1283750	1					
ANR	1283915	MemberAccess	curve [ 3 ] . vertex . p		1283750	1					
ANR	1283916	MemberAccess	curve [ 3 ] . vertex		1283750	0					
ANR	1283917	ArrayIndexing	curve [ 3 ]		1283750	0					
ANR	1283918	Identifier	curve		1283750	0					
ANR	1283919	PrimaryExpression	3		1283750	1					
ANR	1283920	Identifier	vertex		1283750	1					
ANR	1283921	Identifier	p		1283750	1					
ANR	1283922	ExpressionStatement	p -> pole [ 0 ] [ 2 ] = curve [ 3 ] . control [ 0 ]	4004:4:151753:151788	1283750	11	True				
ANR	1283923	AssignmentExpression	p -> pole [ 0 ] [ 2 ] = curve [ 3 ] . control [ 0 ]		1283750	0		=			
ANR	1283924	ArrayIndexing	p -> pole [ 0 ] [ 2 ]		1283750	0					
ANR	1283925	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1283926	PtrMemberAccess	p -> pole		1283750	0					
ANR	1283927	Identifier	p		1283750	0					
ANR	1283928	Identifier	pole		1283750	1					
ANR	1283929	PrimaryExpression	0		1283750	1					
ANR	1283930	PrimaryExpression	2		1283750	1					
ANR	1283931	ArrayIndexing	curve [ 3 ] . control [ 0 ]		1283750	1					
ANR	1283932	MemberAccess	curve [ 3 ] . control		1283750	0					
ANR	1283933	ArrayIndexing	curve [ 3 ]		1283750	0					
ANR	1283934	Identifier	curve		1283750	0					
ANR	1283935	PrimaryExpression	3		1283750	1					
ANR	1283936	Identifier	control		1283750	1					
ANR	1283937	PrimaryExpression	0		1283750	1					
ANR	1283938	ExpressionStatement	p -> pole [ 0 ] [ 1 ] = curve [ 3 ] . control [ 1 ]	4005:4:151794:151829	1283750	12	True				
ANR	1283939	AssignmentExpression	p -> pole [ 0 ] [ 1 ] = curve [ 3 ] . control [ 1 ]		1283750	0		=			
ANR	1283940	ArrayIndexing	p -> pole [ 0 ] [ 1 ]		1283750	0					
ANR	1283941	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1283942	PtrMemberAccess	p -> pole		1283750	0					
ANR	1283943	Identifier	p		1283750	0					
ANR	1283944	Identifier	pole		1283750	1					
ANR	1283945	PrimaryExpression	0		1283750	1					
ANR	1283946	PrimaryExpression	1		1283750	1					
ANR	1283947	ArrayIndexing	curve [ 3 ] . control [ 1 ]		1283750	1					
ANR	1283948	MemberAccess	curve [ 3 ] . control		1283750	0					
ANR	1283949	ArrayIndexing	curve [ 3 ]		1283750	0					
ANR	1283950	Identifier	curve		1283750	0					
ANR	1283951	PrimaryExpression	3		1283750	1					
ANR	1283952	Identifier	control		1283750	1					
ANR	1283953	PrimaryExpression	1		1283750	1					
ANR	1283954	IfStatement	if ( interior != NULL )		1283750	13					
ANR	1283955	Condition	interior != NULL	4006:8:151839:151854	1283750	0	True				
ANR	1283956	EqualityExpression	interior != NULL		1283750	0		!=			
ANR	1283957	Identifier	interior		1283750	0					
ANR	1283958	Identifier	NULL		1283750	1					
ANR	1283959	CompoundStatement		16:26:563:563	1283750	1					
ANR	1283960	ExpressionStatement	p -> pole [ 1 ] [ 1 ] = interior [ 0 ]	4007:8:151867:151894	1283750	0	True				
ANR	1283961	AssignmentExpression	p -> pole [ 1 ] [ 1 ] = interior [ 0 ]		1283750	0		=			
ANR	1283962	ArrayIndexing	p -> pole [ 1 ] [ 1 ]		1283750	0					
ANR	1283963	ArrayIndexing	p -> pole [ 1 ]		1283750	0					
ANR	1283964	PtrMemberAccess	p -> pole		1283750	0					
ANR	1283965	Identifier	p		1283750	0					
ANR	1283966	Identifier	pole		1283750	1					
ANR	1283967	PrimaryExpression	1		1283750	1					
ANR	1283968	PrimaryExpression	1		1283750	1					
ANR	1283969	ArrayIndexing	interior [ 0 ]		1283750	1					
ANR	1283970	Identifier	interior		1283750	0					
ANR	1283971	PrimaryExpression	0		1283750	1					
ANR	1283972	ExpressionStatement	p -> pole [ 1 ] [ 2 ] = interior [ 1 ]	4008:8:151904:151931	1283750	1	True				
ANR	1283973	AssignmentExpression	p -> pole [ 1 ] [ 2 ] = interior [ 1 ]		1283750	0		=			
ANR	1283974	ArrayIndexing	p -> pole [ 1 ] [ 2 ]		1283750	0					
ANR	1283975	ArrayIndexing	p -> pole [ 1 ]		1283750	0					
ANR	1283976	PtrMemberAccess	p -> pole		1283750	0					
ANR	1283977	Identifier	p		1283750	0					
ANR	1283978	Identifier	pole		1283750	1					
ANR	1283979	PrimaryExpression	1		1283750	1					
ANR	1283980	PrimaryExpression	2		1283750	1					
ANR	1283981	ArrayIndexing	interior [ 1 ]		1283750	1					
ANR	1283982	Identifier	interior		1283750	0					
ANR	1283983	PrimaryExpression	1		1283750	1					
ANR	1283984	ExpressionStatement	p -> pole [ 2 ] [ 2 ] = interior [ 2 ]	4009:8:151941:151968	1283750	2	True				
ANR	1283985	AssignmentExpression	p -> pole [ 2 ] [ 2 ] = interior [ 2 ]		1283750	0		=			
ANR	1283986	ArrayIndexing	p -> pole [ 2 ] [ 2 ]		1283750	0					
ANR	1283987	ArrayIndexing	p -> pole [ 2 ]		1283750	0					
ANR	1283988	PtrMemberAccess	p -> pole		1283750	0					
ANR	1283989	Identifier	p		1283750	0					
ANR	1283990	Identifier	pole		1283750	1					
ANR	1283991	PrimaryExpression	2		1283750	1					
ANR	1283992	PrimaryExpression	2		1283750	1					
ANR	1283993	ArrayIndexing	interior [ 2 ]		1283750	1					
ANR	1283994	Identifier	interior		1283750	0					
ANR	1283995	PrimaryExpression	2		1283750	1					
ANR	1283996	ExpressionStatement	p -> pole [ 2 ] [ 1 ] = interior [ 3 ]	4010:8:151978:152005	1283750	3	True				
ANR	1283997	AssignmentExpression	p -> pole [ 2 ] [ 1 ] = interior [ 3 ]		1283750	0		=			
ANR	1283998	ArrayIndexing	p -> pole [ 2 ] [ 1 ]		1283750	0					
ANR	1283999	ArrayIndexing	p -> pole [ 2 ]		1283750	0					
ANR	1284000	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284001	Identifier	p		1283750	0					
ANR	1284002	Identifier	pole		1283750	1					
ANR	1284003	PrimaryExpression	2		1283750	1					
ANR	1284004	PrimaryExpression	1		1283750	1					
ANR	1284005	ArrayIndexing	interior [ 3 ]		1283750	1					
ANR	1284006	Identifier	interior		1283750	0					
ANR	1284007	PrimaryExpression	3		1283750	1					
ANR	1284008	ElseStatement	else		1283750	0					
ANR	1284009	CompoundStatement		21:11:724:724	1283750	0					
ANR	1284010	ExpressionStatement	"p -> pole [ 1 ] [ 1 ] . x = ( fixed ) ( ( 3 * ( lcp1 ( p -> pole [ 0 ] [ 1 ] . x , p -> pole [ 3 ] [ 1 ] . x ) + lcp1 ( p -> pole [ 1 ] [ 0 ] . x , p -> pole [ 1 ] [ 3 ] . x ) ) - lcp1 ( lcp1 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x ) , lcp1 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x ) ) ) / 9 )"	4012:8:152028:152342	1283750	0	True				
ANR	1284011	AssignmentExpression	"p -> pole [ 1 ] [ 1 ] . x = ( fixed ) ( ( 3 * ( lcp1 ( p -> pole [ 0 ] [ 1 ] . x , p -> pole [ 3 ] [ 1 ] . x ) + lcp1 ( p -> pole [ 1 ] [ 0 ] . x , p -> pole [ 1 ] [ 3 ] . x ) ) - lcp1 ( lcp1 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x ) , lcp1 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x ) ) ) / 9 )"		1283750	0		=			
ANR	1284012	MemberAccess	p -> pole [ 1 ] [ 1 ] . x		1283750	0					
ANR	1284013	ArrayIndexing	p -> pole [ 1 ] [ 1 ]		1283750	0					
ANR	1284014	ArrayIndexing	p -> pole [ 1 ]		1283750	0					
ANR	1284015	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284016	Identifier	p		1283750	0					
ANR	1284017	Identifier	pole		1283750	1					
ANR	1284018	PrimaryExpression	1		1283750	1					
ANR	1284019	PrimaryExpression	1		1283750	1					
ANR	1284020	Identifier	x		1283750	1					
ANR	1284021	CastExpression	"( fixed ) ( ( 3 * ( lcp1 ( p -> pole [ 0 ] [ 1 ] . x , p -> pole [ 3 ] [ 1 ] . x ) + lcp1 ( p -> pole [ 1 ] [ 0 ] . x , p -> pole [ 1 ] [ 3 ] . x ) ) - lcp1 ( lcp1 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x ) , lcp1 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x ) ) ) / 9 )"		1283750	1					
ANR	1284022	CastTarget	fixed		1283750	0					
ANR	1284023	MultiplicativeExpression	"( 3 * ( lcp1 ( p -> pole [ 0 ] [ 1 ] . x , p -> pole [ 3 ] [ 1 ] . x ) + lcp1 ( p -> pole [ 1 ] [ 0 ] . x , p -> pole [ 1 ] [ 3 ] . x ) ) - lcp1 ( lcp1 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x ) , lcp1 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x ) ) ) / 9"		1283750	1		/			
ANR	1284024	AdditiveExpression	"3 * ( lcp1 ( p -> pole [ 0 ] [ 1 ] . x , p -> pole [ 3 ] [ 1 ] . x ) + lcp1 ( p -> pole [ 1 ] [ 0 ] . x , p -> pole [ 1 ] [ 3 ] . x ) ) - lcp1 ( lcp1 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x ) , lcp1 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x ) )"		1283750	0		-			
ANR	1284025	MultiplicativeExpression	"3 * ( lcp1 ( p -> pole [ 0 ] [ 1 ] . x , p -> pole [ 3 ] [ 1 ] . x ) + lcp1 ( p -> pole [ 1 ] [ 0 ] . x , p -> pole [ 1 ] [ 3 ] . x ) )"		1283750	0		*			
ANR	1284026	PrimaryExpression	3		1283750	0					
ANR	1284027	AdditiveExpression	"lcp1 ( p -> pole [ 0 ] [ 1 ] . x , p -> pole [ 3 ] [ 1 ] . x ) + lcp1 ( p -> pole [ 1 ] [ 0 ] . x , p -> pole [ 1 ] [ 3 ] . x )"		1283750	1		+			
ANR	1284028	CallExpression	"lcp1 ( p -> pole [ 0 ] [ 1 ] . x , p -> pole [ 3 ] [ 1 ] . x )"		1283750	0					
ANR	1284029	Callee	lcp1		1283750	0					
ANR	1284030	Identifier	lcp1		1283750	0					
ANR	1284031	ArgumentList	p -> pole [ 0 ] [ 1 ] . x		1283750	1					
ANR	1284032	Argument	p -> pole [ 0 ] [ 1 ] . x		1283750	0					
ANR	1284033	MemberAccess	p -> pole [ 0 ] [ 1 ] . x		1283750	0					
ANR	1284034	ArrayIndexing	p -> pole [ 0 ] [ 1 ]		1283750	0					
ANR	1284035	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1284036	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284037	Identifier	p		1283750	0					
ANR	1284038	Identifier	pole		1283750	1					
ANR	1284039	PrimaryExpression	0		1283750	1					
ANR	1284040	PrimaryExpression	1		1283750	1					
ANR	1284041	Identifier	x		1283750	1					
ANR	1284042	Argument	p -> pole [ 3 ] [ 1 ] . x		1283750	1					
ANR	1284043	MemberAccess	p -> pole [ 3 ] [ 1 ] . x		1283750	0					
ANR	1284044	ArrayIndexing	p -> pole [ 3 ] [ 1 ]		1283750	0					
ANR	1284045	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1284046	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284047	Identifier	p		1283750	0					
ANR	1284048	Identifier	pole		1283750	1					
ANR	1284049	PrimaryExpression	3		1283750	1					
ANR	1284050	PrimaryExpression	1		1283750	1					
ANR	1284051	Identifier	x		1283750	1					
ANR	1284052	CallExpression	"lcp1 ( p -> pole [ 1 ] [ 0 ] . x , p -> pole [ 1 ] [ 3 ] . x )"		1283750	1					
ANR	1284053	Callee	lcp1		1283750	0					
ANR	1284054	Identifier	lcp1		1283750	0					
ANR	1284055	ArgumentList	p -> pole [ 1 ] [ 0 ] . x		1283750	1					
ANR	1284056	Argument	p -> pole [ 1 ] [ 0 ] . x		1283750	0					
ANR	1284057	MemberAccess	p -> pole [ 1 ] [ 0 ] . x		1283750	0					
ANR	1284058	ArrayIndexing	p -> pole [ 1 ] [ 0 ]		1283750	0					
ANR	1284059	ArrayIndexing	p -> pole [ 1 ]		1283750	0					
ANR	1284060	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284061	Identifier	p		1283750	0					
ANR	1284062	Identifier	pole		1283750	1					
ANR	1284063	PrimaryExpression	1		1283750	1					
ANR	1284064	PrimaryExpression	0		1283750	1					
ANR	1284065	Identifier	x		1283750	1					
ANR	1284066	Argument	p -> pole [ 1 ] [ 3 ] . x		1283750	1					
ANR	1284067	MemberAccess	p -> pole [ 1 ] [ 3 ] . x		1283750	0					
ANR	1284068	ArrayIndexing	p -> pole [ 1 ] [ 3 ]		1283750	0					
ANR	1284069	ArrayIndexing	p -> pole [ 1 ]		1283750	0					
ANR	1284070	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284071	Identifier	p		1283750	0					
ANR	1284072	Identifier	pole		1283750	1					
ANR	1284073	PrimaryExpression	1		1283750	1					
ANR	1284074	PrimaryExpression	3		1283750	1					
ANR	1284075	Identifier	x		1283750	1					
ANR	1284076	CallExpression	"lcp1 ( lcp1 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x ) , lcp1 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x ) )"		1283750	1					
ANR	1284077	Callee	lcp1		1283750	0					
ANR	1284078	Identifier	lcp1		1283750	0					
ANR	1284079	ArgumentList	"lcp1 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x )"		1283750	1					
ANR	1284080	Argument	"lcp1 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x )"		1283750	0					
ANR	1284081	CallExpression	"lcp1 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x )"		1283750	0					
ANR	1284082	Callee	lcp1		1283750	0					
ANR	1284083	Identifier	lcp1		1283750	0					
ANR	1284084	ArgumentList	p -> pole [ 0 ] [ 0 ] . x		1283750	1					
ANR	1284085	Argument	p -> pole [ 0 ] [ 0 ] . x		1283750	0					
ANR	1284086	MemberAccess	p -> pole [ 0 ] [ 0 ] . x		1283750	0					
ANR	1284087	ArrayIndexing	p -> pole [ 0 ] [ 0 ]		1283750	0					
ANR	1284088	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1284089	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284090	Identifier	p		1283750	0					
ANR	1284091	Identifier	pole		1283750	1					
ANR	1284092	PrimaryExpression	0		1283750	1					
ANR	1284093	PrimaryExpression	0		1283750	1					
ANR	1284094	Identifier	x		1283750	1					
ANR	1284095	Argument	p -> pole [ 0 ] [ 3 ] . x		1283750	1					
ANR	1284096	MemberAccess	p -> pole [ 0 ] [ 3 ] . x		1283750	0					
ANR	1284097	ArrayIndexing	p -> pole [ 0 ] [ 3 ]		1283750	0					
ANR	1284098	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1284099	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284100	Identifier	p		1283750	0					
ANR	1284101	Identifier	pole		1283750	1					
ANR	1284102	PrimaryExpression	0		1283750	1					
ANR	1284103	PrimaryExpression	3		1283750	1					
ANR	1284104	Identifier	x		1283750	1					
ANR	1284105	Argument	"lcp1 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x )"		1283750	1					
ANR	1284106	CallExpression	"lcp1 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x )"		1283750	0					
ANR	1284107	Callee	lcp1		1283750	0					
ANR	1284108	Identifier	lcp1		1283750	0					
ANR	1284109	ArgumentList	p -> pole [ 3 ] [ 0 ] . x		1283750	1					
ANR	1284110	Argument	p -> pole [ 3 ] [ 0 ] . x		1283750	0					
ANR	1284111	MemberAccess	p -> pole [ 3 ] [ 0 ] . x		1283750	0					
ANR	1284112	ArrayIndexing	p -> pole [ 3 ] [ 0 ]		1283750	0					
ANR	1284113	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1284114	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284115	Identifier	p		1283750	0					
ANR	1284116	Identifier	pole		1283750	1					
ANR	1284117	PrimaryExpression	3		1283750	1					
ANR	1284118	PrimaryExpression	0		1283750	1					
ANR	1284119	Identifier	x		1283750	1					
ANR	1284120	Argument	p -> pole [ 3 ] [ 3 ] . x		1283750	1					
ANR	1284121	MemberAccess	p -> pole [ 3 ] [ 3 ] . x		1283750	0					
ANR	1284122	ArrayIndexing	p -> pole [ 3 ] [ 3 ]		1283750	0					
ANR	1284123	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1284124	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284125	Identifier	p		1283750	0					
ANR	1284126	Identifier	pole		1283750	1					
ANR	1284127	PrimaryExpression	3		1283750	1					
ANR	1284128	PrimaryExpression	3		1283750	1					
ANR	1284129	Identifier	x		1283750	1					
ANR	1284130	PrimaryExpression	9		1283750	1					
ANR	1284131	ExpressionStatement	"p -> pole [ 1 ] [ 2 ] . x = ( fixed ) ( ( 3 * ( lcp1 ( p -> pole [ 0 ] [ 2 ] . x , p -> pole [ 3 ] [ 2 ] . x ) + lcp2 ( p -> pole [ 1 ] [ 0 ] . x , p -> pole [ 1 ] [ 3 ] . x ) ) - lcp1 ( lcp2 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x ) , lcp2 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x ) ) ) / 9 )"	4016:8:152352:152666	1283750	1	True				
ANR	1284132	AssignmentExpression	"p -> pole [ 1 ] [ 2 ] . x = ( fixed ) ( ( 3 * ( lcp1 ( p -> pole [ 0 ] [ 2 ] . x , p -> pole [ 3 ] [ 2 ] . x ) + lcp2 ( p -> pole [ 1 ] [ 0 ] . x , p -> pole [ 1 ] [ 3 ] . x ) ) - lcp1 ( lcp2 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x ) , lcp2 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x ) ) ) / 9 )"		1283750	0		=			
ANR	1284133	MemberAccess	p -> pole [ 1 ] [ 2 ] . x		1283750	0					
ANR	1284134	ArrayIndexing	p -> pole [ 1 ] [ 2 ]		1283750	0					
ANR	1284135	ArrayIndexing	p -> pole [ 1 ]		1283750	0					
ANR	1284136	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284137	Identifier	p		1283750	0					
ANR	1284138	Identifier	pole		1283750	1					
ANR	1284139	PrimaryExpression	1		1283750	1					
ANR	1284140	PrimaryExpression	2		1283750	1					
ANR	1284141	Identifier	x		1283750	1					
ANR	1284142	CastExpression	"( fixed ) ( ( 3 * ( lcp1 ( p -> pole [ 0 ] [ 2 ] . x , p -> pole [ 3 ] [ 2 ] . x ) + lcp2 ( p -> pole [ 1 ] [ 0 ] . x , p -> pole [ 1 ] [ 3 ] . x ) ) - lcp1 ( lcp2 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x ) , lcp2 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x ) ) ) / 9 )"		1283750	1					
ANR	1284143	CastTarget	fixed		1283750	0					
ANR	1284144	MultiplicativeExpression	"( 3 * ( lcp1 ( p -> pole [ 0 ] [ 2 ] . x , p -> pole [ 3 ] [ 2 ] . x ) + lcp2 ( p -> pole [ 1 ] [ 0 ] . x , p -> pole [ 1 ] [ 3 ] . x ) ) - lcp1 ( lcp2 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x ) , lcp2 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x ) ) ) / 9"		1283750	1		/			
ANR	1284145	AdditiveExpression	"3 * ( lcp1 ( p -> pole [ 0 ] [ 2 ] . x , p -> pole [ 3 ] [ 2 ] . x ) + lcp2 ( p -> pole [ 1 ] [ 0 ] . x , p -> pole [ 1 ] [ 3 ] . x ) ) - lcp1 ( lcp2 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x ) , lcp2 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x ) )"		1283750	0		-			
ANR	1284146	MultiplicativeExpression	"3 * ( lcp1 ( p -> pole [ 0 ] [ 2 ] . x , p -> pole [ 3 ] [ 2 ] . x ) + lcp2 ( p -> pole [ 1 ] [ 0 ] . x , p -> pole [ 1 ] [ 3 ] . x ) )"		1283750	0		*			
ANR	1284147	PrimaryExpression	3		1283750	0					
ANR	1284148	AdditiveExpression	"lcp1 ( p -> pole [ 0 ] [ 2 ] . x , p -> pole [ 3 ] [ 2 ] . x ) + lcp2 ( p -> pole [ 1 ] [ 0 ] . x , p -> pole [ 1 ] [ 3 ] . x )"		1283750	1		+			
ANR	1284149	CallExpression	"lcp1 ( p -> pole [ 0 ] [ 2 ] . x , p -> pole [ 3 ] [ 2 ] . x )"		1283750	0					
ANR	1284150	Callee	lcp1		1283750	0					
ANR	1284151	Identifier	lcp1		1283750	0					
ANR	1284152	ArgumentList	p -> pole [ 0 ] [ 2 ] . x		1283750	1					
ANR	1284153	Argument	p -> pole [ 0 ] [ 2 ] . x		1283750	0					
ANR	1284154	MemberAccess	p -> pole [ 0 ] [ 2 ] . x		1283750	0					
ANR	1284155	ArrayIndexing	p -> pole [ 0 ] [ 2 ]		1283750	0					
ANR	1284156	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1284157	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284158	Identifier	p		1283750	0					
ANR	1284159	Identifier	pole		1283750	1					
ANR	1284160	PrimaryExpression	0		1283750	1					
ANR	1284161	PrimaryExpression	2		1283750	1					
ANR	1284162	Identifier	x		1283750	1					
ANR	1284163	Argument	p -> pole [ 3 ] [ 2 ] . x		1283750	1					
ANR	1284164	MemberAccess	p -> pole [ 3 ] [ 2 ] . x		1283750	0					
ANR	1284165	ArrayIndexing	p -> pole [ 3 ] [ 2 ]		1283750	0					
ANR	1284166	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1284167	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284168	Identifier	p		1283750	0					
ANR	1284169	Identifier	pole		1283750	1					
ANR	1284170	PrimaryExpression	3		1283750	1					
ANR	1284171	PrimaryExpression	2		1283750	1					
ANR	1284172	Identifier	x		1283750	1					
ANR	1284173	CallExpression	"lcp2 ( p -> pole [ 1 ] [ 0 ] . x , p -> pole [ 1 ] [ 3 ] . x )"		1283750	1					
ANR	1284174	Callee	lcp2		1283750	0					
ANR	1284175	Identifier	lcp2		1283750	0					
ANR	1284176	ArgumentList	p -> pole [ 1 ] [ 0 ] . x		1283750	1					
ANR	1284177	Argument	p -> pole [ 1 ] [ 0 ] . x		1283750	0					
ANR	1284178	MemberAccess	p -> pole [ 1 ] [ 0 ] . x		1283750	0					
ANR	1284179	ArrayIndexing	p -> pole [ 1 ] [ 0 ]		1283750	0					
ANR	1284180	ArrayIndexing	p -> pole [ 1 ]		1283750	0					
ANR	1284181	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284182	Identifier	p		1283750	0					
ANR	1284183	Identifier	pole		1283750	1					
ANR	1284184	PrimaryExpression	1		1283750	1					
ANR	1284185	PrimaryExpression	0		1283750	1					
ANR	1284186	Identifier	x		1283750	1					
ANR	1284187	Argument	p -> pole [ 1 ] [ 3 ] . x		1283750	1					
ANR	1284188	MemberAccess	p -> pole [ 1 ] [ 3 ] . x		1283750	0					
ANR	1284189	ArrayIndexing	p -> pole [ 1 ] [ 3 ]		1283750	0					
ANR	1284190	ArrayIndexing	p -> pole [ 1 ]		1283750	0					
ANR	1284191	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284192	Identifier	p		1283750	0					
ANR	1284193	Identifier	pole		1283750	1					
ANR	1284194	PrimaryExpression	1		1283750	1					
ANR	1284195	PrimaryExpression	3		1283750	1					
ANR	1284196	Identifier	x		1283750	1					
ANR	1284197	CallExpression	"lcp1 ( lcp2 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x ) , lcp2 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x ) )"		1283750	1					
ANR	1284198	Callee	lcp1		1283750	0					
ANR	1284199	Identifier	lcp1		1283750	0					
ANR	1284200	ArgumentList	"lcp2 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x )"		1283750	1					
ANR	1284201	Argument	"lcp2 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x )"		1283750	0					
ANR	1284202	CallExpression	"lcp2 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x )"		1283750	0					
ANR	1284203	Callee	lcp2		1283750	0					
ANR	1284204	Identifier	lcp2		1283750	0					
ANR	1284205	ArgumentList	p -> pole [ 0 ] [ 0 ] . x		1283750	1					
ANR	1284206	Argument	p -> pole [ 0 ] [ 0 ] . x		1283750	0					
ANR	1284207	MemberAccess	p -> pole [ 0 ] [ 0 ] . x		1283750	0					
ANR	1284208	ArrayIndexing	p -> pole [ 0 ] [ 0 ]		1283750	0					
ANR	1284209	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1284210	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284211	Identifier	p		1283750	0					
ANR	1284212	Identifier	pole		1283750	1					
ANR	1284213	PrimaryExpression	0		1283750	1					
ANR	1284214	PrimaryExpression	0		1283750	1					
ANR	1284215	Identifier	x		1283750	1					
ANR	1284216	Argument	p -> pole [ 0 ] [ 3 ] . x		1283750	1					
ANR	1284217	MemberAccess	p -> pole [ 0 ] [ 3 ] . x		1283750	0					
ANR	1284218	ArrayIndexing	p -> pole [ 0 ] [ 3 ]		1283750	0					
ANR	1284219	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1284220	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284221	Identifier	p		1283750	0					
ANR	1284222	Identifier	pole		1283750	1					
ANR	1284223	PrimaryExpression	0		1283750	1					
ANR	1284224	PrimaryExpression	3		1283750	1					
ANR	1284225	Identifier	x		1283750	1					
ANR	1284226	Argument	"lcp2 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x )"		1283750	1					
ANR	1284227	CallExpression	"lcp2 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x )"		1283750	0					
ANR	1284228	Callee	lcp2		1283750	0					
ANR	1284229	Identifier	lcp2		1283750	0					
ANR	1284230	ArgumentList	p -> pole [ 3 ] [ 0 ] . x		1283750	1					
ANR	1284231	Argument	p -> pole [ 3 ] [ 0 ] . x		1283750	0					
ANR	1284232	MemberAccess	p -> pole [ 3 ] [ 0 ] . x		1283750	0					
ANR	1284233	ArrayIndexing	p -> pole [ 3 ] [ 0 ]		1283750	0					
ANR	1284234	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1284235	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284236	Identifier	p		1283750	0					
ANR	1284237	Identifier	pole		1283750	1					
ANR	1284238	PrimaryExpression	3		1283750	1					
ANR	1284239	PrimaryExpression	0		1283750	1					
ANR	1284240	Identifier	x		1283750	1					
ANR	1284241	Argument	p -> pole [ 3 ] [ 3 ] . x		1283750	1					
ANR	1284242	MemberAccess	p -> pole [ 3 ] [ 3 ] . x		1283750	0					
ANR	1284243	ArrayIndexing	p -> pole [ 3 ] [ 3 ]		1283750	0					
ANR	1284244	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1284245	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284246	Identifier	p		1283750	0					
ANR	1284247	Identifier	pole		1283750	1					
ANR	1284248	PrimaryExpression	3		1283750	1					
ANR	1284249	PrimaryExpression	3		1283750	1					
ANR	1284250	Identifier	x		1283750	1					
ANR	1284251	PrimaryExpression	9		1283750	1					
ANR	1284252	ExpressionStatement	"p -> pole [ 2 ] [ 1 ] . x = ( fixed ) ( ( 3 * ( lcp2 ( p -> pole [ 0 ] [ 1 ] . x , p -> pole [ 3 ] [ 1 ] . x ) + lcp1 ( p -> pole [ 2 ] [ 0 ] . x , p -> pole [ 2 ] [ 3 ] . x ) ) - lcp2 ( lcp1 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x ) , lcp1 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x ) ) ) / 9 )"	4020:8:152676:152990	1283750	2	True				
ANR	1284253	AssignmentExpression	"p -> pole [ 2 ] [ 1 ] . x = ( fixed ) ( ( 3 * ( lcp2 ( p -> pole [ 0 ] [ 1 ] . x , p -> pole [ 3 ] [ 1 ] . x ) + lcp1 ( p -> pole [ 2 ] [ 0 ] . x , p -> pole [ 2 ] [ 3 ] . x ) ) - lcp2 ( lcp1 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x ) , lcp1 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x ) ) ) / 9 )"		1283750	0		=			
ANR	1284254	MemberAccess	p -> pole [ 2 ] [ 1 ] . x		1283750	0					
ANR	1284255	ArrayIndexing	p -> pole [ 2 ] [ 1 ]		1283750	0					
ANR	1284256	ArrayIndexing	p -> pole [ 2 ]		1283750	0					
ANR	1284257	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284258	Identifier	p		1283750	0					
ANR	1284259	Identifier	pole		1283750	1					
ANR	1284260	PrimaryExpression	2		1283750	1					
ANR	1284261	PrimaryExpression	1		1283750	1					
ANR	1284262	Identifier	x		1283750	1					
ANR	1284263	CastExpression	"( fixed ) ( ( 3 * ( lcp2 ( p -> pole [ 0 ] [ 1 ] . x , p -> pole [ 3 ] [ 1 ] . x ) + lcp1 ( p -> pole [ 2 ] [ 0 ] . x , p -> pole [ 2 ] [ 3 ] . x ) ) - lcp2 ( lcp1 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x ) , lcp1 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x ) ) ) / 9 )"		1283750	1					
ANR	1284264	CastTarget	fixed		1283750	0					
ANR	1284265	MultiplicativeExpression	"( 3 * ( lcp2 ( p -> pole [ 0 ] [ 1 ] . x , p -> pole [ 3 ] [ 1 ] . x ) + lcp1 ( p -> pole [ 2 ] [ 0 ] . x , p -> pole [ 2 ] [ 3 ] . x ) ) - lcp2 ( lcp1 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x ) , lcp1 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x ) ) ) / 9"		1283750	1		/			
ANR	1284266	AdditiveExpression	"3 * ( lcp2 ( p -> pole [ 0 ] [ 1 ] . x , p -> pole [ 3 ] [ 1 ] . x ) + lcp1 ( p -> pole [ 2 ] [ 0 ] . x , p -> pole [ 2 ] [ 3 ] . x ) ) - lcp2 ( lcp1 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x ) , lcp1 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x ) )"		1283750	0		-			
ANR	1284267	MultiplicativeExpression	"3 * ( lcp2 ( p -> pole [ 0 ] [ 1 ] . x , p -> pole [ 3 ] [ 1 ] . x ) + lcp1 ( p -> pole [ 2 ] [ 0 ] . x , p -> pole [ 2 ] [ 3 ] . x ) )"		1283750	0		*			
ANR	1284268	PrimaryExpression	3		1283750	0					
ANR	1284269	AdditiveExpression	"lcp2 ( p -> pole [ 0 ] [ 1 ] . x , p -> pole [ 3 ] [ 1 ] . x ) + lcp1 ( p -> pole [ 2 ] [ 0 ] . x , p -> pole [ 2 ] [ 3 ] . x )"		1283750	1		+			
ANR	1284270	CallExpression	"lcp2 ( p -> pole [ 0 ] [ 1 ] . x , p -> pole [ 3 ] [ 1 ] . x )"		1283750	0					
ANR	1284271	Callee	lcp2		1283750	0					
ANR	1284272	Identifier	lcp2		1283750	0					
ANR	1284273	ArgumentList	p -> pole [ 0 ] [ 1 ] . x		1283750	1					
ANR	1284274	Argument	p -> pole [ 0 ] [ 1 ] . x		1283750	0					
ANR	1284275	MemberAccess	p -> pole [ 0 ] [ 1 ] . x		1283750	0					
ANR	1284276	ArrayIndexing	p -> pole [ 0 ] [ 1 ]		1283750	0					
ANR	1284277	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1284278	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284279	Identifier	p		1283750	0					
ANR	1284280	Identifier	pole		1283750	1					
ANR	1284281	PrimaryExpression	0		1283750	1					
ANR	1284282	PrimaryExpression	1		1283750	1					
ANR	1284283	Identifier	x		1283750	1					
ANR	1284284	Argument	p -> pole [ 3 ] [ 1 ] . x		1283750	1					
ANR	1284285	MemberAccess	p -> pole [ 3 ] [ 1 ] . x		1283750	0					
ANR	1284286	ArrayIndexing	p -> pole [ 3 ] [ 1 ]		1283750	0					
ANR	1284287	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1284288	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284289	Identifier	p		1283750	0					
ANR	1284290	Identifier	pole		1283750	1					
ANR	1284291	PrimaryExpression	3		1283750	1					
ANR	1284292	PrimaryExpression	1		1283750	1					
ANR	1284293	Identifier	x		1283750	1					
ANR	1284294	CallExpression	"lcp1 ( p -> pole [ 2 ] [ 0 ] . x , p -> pole [ 2 ] [ 3 ] . x )"		1283750	1					
ANR	1284295	Callee	lcp1		1283750	0					
ANR	1284296	Identifier	lcp1		1283750	0					
ANR	1284297	ArgumentList	p -> pole [ 2 ] [ 0 ] . x		1283750	1					
ANR	1284298	Argument	p -> pole [ 2 ] [ 0 ] . x		1283750	0					
ANR	1284299	MemberAccess	p -> pole [ 2 ] [ 0 ] . x		1283750	0					
ANR	1284300	ArrayIndexing	p -> pole [ 2 ] [ 0 ]		1283750	0					
ANR	1284301	ArrayIndexing	p -> pole [ 2 ]		1283750	0					
ANR	1284302	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284303	Identifier	p		1283750	0					
ANR	1284304	Identifier	pole		1283750	1					
ANR	1284305	PrimaryExpression	2		1283750	1					
ANR	1284306	PrimaryExpression	0		1283750	1					
ANR	1284307	Identifier	x		1283750	1					
ANR	1284308	Argument	p -> pole [ 2 ] [ 3 ] . x		1283750	1					
ANR	1284309	MemberAccess	p -> pole [ 2 ] [ 3 ] . x		1283750	0					
ANR	1284310	ArrayIndexing	p -> pole [ 2 ] [ 3 ]		1283750	0					
ANR	1284311	ArrayIndexing	p -> pole [ 2 ]		1283750	0					
ANR	1284312	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284313	Identifier	p		1283750	0					
ANR	1284314	Identifier	pole		1283750	1					
ANR	1284315	PrimaryExpression	2		1283750	1					
ANR	1284316	PrimaryExpression	3		1283750	1					
ANR	1284317	Identifier	x		1283750	1					
ANR	1284318	CallExpression	"lcp2 ( lcp1 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x ) , lcp1 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x ) )"		1283750	1					
ANR	1284319	Callee	lcp2		1283750	0					
ANR	1284320	Identifier	lcp2		1283750	0					
ANR	1284321	ArgumentList	"lcp1 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x )"		1283750	1					
ANR	1284322	Argument	"lcp1 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x )"		1283750	0					
ANR	1284323	CallExpression	"lcp1 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x )"		1283750	0					
ANR	1284324	Callee	lcp1		1283750	0					
ANR	1284325	Identifier	lcp1		1283750	0					
ANR	1284326	ArgumentList	p -> pole [ 0 ] [ 0 ] . x		1283750	1					
ANR	1284327	Argument	p -> pole [ 0 ] [ 0 ] . x		1283750	0					
ANR	1284328	MemberAccess	p -> pole [ 0 ] [ 0 ] . x		1283750	0					
ANR	1284329	ArrayIndexing	p -> pole [ 0 ] [ 0 ]		1283750	0					
ANR	1284330	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1284331	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284332	Identifier	p		1283750	0					
ANR	1284333	Identifier	pole		1283750	1					
ANR	1284334	PrimaryExpression	0		1283750	1					
ANR	1284335	PrimaryExpression	0		1283750	1					
ANR	1284336	Identifier	x		1283750	1					
ANR	1284337	Argument	p -> pole [ 0 ] [ 3 ] . x		1283750	1					
ANR	1284338	MemberAccess	p -> pole [ 0 ] [ 3 ] . x		1283750	0					
ANR	1284339	ArrayIndexing	p -> pole [ 0 ] [ 3 ]		1283750	0					
ANR	1284340	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1284341	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284342	Identifier	p		1283750	0					
ANR	1284343	Identifier	pole		1283750	1					
ANR	1284344	PrimaryExpression	0		1283750	1					
ANR	1284345	PrimaryExpression	3		1283750	1					
ANR	1284346	Identifier	x		1283750	1					
ANR	1284347	Argument	"lcp1 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x )"		1283750	1					
ANR	1284348	CallExpression	"lcp1 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x )"		1283750	0					
ANR	1284349	Callee	lcp1		1283750	0					
ANR	1284350	Identifier	lcp1		1283750	0					
ANR	1284351	ArgumentList	p -> pole [ 3 ] [ 0 ] . x		1283750	1					
ANR	1284352	Argument	p -> pole [ 3 ] [ 0 ] . x		1283750	0					
ANR	1284353	MemberAccess	p -> pole [ 3 ] [ 0 ] . x		1283750	0					
ANR	1284354	ArrayIndexing	p -> pole [ 3 ] [ 0 ]		1283750	0					
ANR	1284355	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1284356	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284357	Identifier	p		1283750	0					
ANR	1284358	Identifier	pole		1283750	1					
ANR	1284359	PrimaryExpression	3		1283750	1					
ANR	1284360	PrimaryExpression	0		1283750	1					
ANR	1284361	Identifier	x		1283750	1					
ANR	1284362	Argument	p -> pole [ 3 ] [ 3 ] . x		1283750	1					
ANR	1284363	MemberAccess	p -> pole [ 3 ] [ 3 ] . x		1283750	0					
ANR	1284364	ArrayIndexing	p -> pole [ 3 ] [ 3 ]		1283750	0					
ANR	1284365	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1284366	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284367	Identifier	p		1283750	0					
ANR	1284368	Identifier	pole		1283750	1					
ANR	1284369	PrimaryExpression	3		1283750	1					
ANR	1284370	PrimaryExpression	3		1283750	1					
ANR	1284371	Identifier	x		1283750	1					
ANR	1284372	PrimaryExpression	9		1283750	1					
ANR	1284373	ExpressionStatement	"p -> pole [ 2 ] [ 2 ] . x = ( fixed ) ( ( 3 * ( lcp2 ( p -> pole [ 0 ] [ 2 ] . x , p -> pole [ 3 ] [ 2 ] . x ) + lcp2 ( p -> pole [ 2 ] [ 0 ] . x , p -> pole [ 2 ] [ 3 ] . x ) ) - lcp2 ( lcp2 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x ) , lcp2 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x ) ) ) / 9 )"	4024:8:153000:153314	1283750	3	True				
ANR	1284374	AssignmentExpression	"p -> pole [ 2 ] [ 2 ] . x = ( fixed ) ( ( 3 * ( lcp2 ( p -> pole [ 0 ] [ 2 ] . x , p -> pole [ 3 ] [ 2 ] . x ) + lcp2 ( p -> pole [ 2 ] [ 0 ] . x , p -> pole [ 2 ] [ 3 ] . x ) ) - lcp2 ( lcp2 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x ) , lcp2 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x ) ) ) / 9 )"		1283750	0		=			
ANR	1284375	MemberAccess	p -> pole [ 2 ] [ 2 ] . x		1283750	0					
ANR	1284376	ArrayIndexing	p -> pole [ 2 ] [ 2 ]		1283750	0					
ANR	1284377	ArrayIndexing	p -> pole [ 2 ]		1283750	0					
ANR	1284378	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284379	Identifier	p		1283750	0					
ANR	1284380	Identifier	pole		1283750	1					
ANR	1284381	PrimaryExpression	2		1283750	1					
ANR	1284382	PrimaryExpression	2		1283750	1					
ANR	1284383	Identifier	x		1283750	1					
ANR	1284384	CastExpression	"( fixed ) ( ( 3 * ( lcp2 ( p -> pole [ 0 ] [ 2 ] . x , p -> pole [ 3 ] [ 2 ] . x ) + lcp2 ( p -> pole [ 2 ] [ 0 ] . x , p -> pole [ 2 ] [ 3 ] . x ) ) - lcp2 ( lcp2 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x ) , lcp2 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x ) ) ) / 9 )"		1283750	1					
ANR	1284385	CastTarget	fixed		1283750	0					
ANR	1284386	MultiplicativeExpression	"( 3 * ( lcp2 ( p -> pole [ 0 ] [ 2 ] . x , p -> pole [ 3 ] [ 2 ] . x ) + lcp2 ( p -> pole [ 2 ] [ 0 ] . x , p -> pole [ 2 ] [ 3 ] . x ) ) - lcp2 ( lcp2 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x ) , lcp2 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x ) ) ) / 9"		1283750	1		/			
ANR	1284387	AdditiveExpression	"3 * ( lcp2 ( p -> pole [ 0 ] [ 2 ] . x , p -> pole [ 3 ] [ 2 ] . x ) + lcp2 ( p -> pole [ 2 ] [ 0 ] . x , p -> pole [ 2 ] [ 3 ] . x ) ) - lcp2 ( lcp2 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x ) , lcp2 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x ) )"		1283750	0		-			
ANR	1284388	MultiplicativeExpression	"3 * ( lcp2 ( p -> pole [ 0 ] [ 2 ] . x , p -> pole [ 3 ] [ 2 ] . x ) + lcp2 ( p -> pole [ 2 ] [ 0 ] . x , p -> pole [ 2 ] [ 3 ] . x ) )"		1283750	0		*			
ANR	1284389	PrimaryExpression	3		1283750	0					
ANR	1284390	AdditiveExpression	"lcp2 ( p -> pole [ 0 ] [ 2 ] . x , p -> pole [ 3 ] [ 2 ] . x ) + lcp2 ( p -> pole [ 2 ] [ 0 ] . x , p -> pole [ 2 ] [ 3 ] . x )"		1283750	1		+			
ANR	1284391	CallExpression	"lcp2 ( p -> pole [ 0 ] [ 2 ] . x , p -> pole [ 3 ] [ 2 ] . x )"		1283750	0					
ANR	1284392	Callee	lcp2		1283750	0					
ANR	1284393	Identifier	lcp2		1283750	0					
ANR	1284394	ArgumentList	p -> pole [ 0 ] [ 2 ] . x		1283750	1					
ANR	1284395	Argument	p -> pole [ 0 ] [ 2 ] . x		1283750	0					
ANR	1284396	MemberAccess	p -> pole [ 0 ] [ 2 ] . x		1283750	0					
ANR	1284397	ArrayIndexing	p -> pole [ 0 ] [ 2 ]		1283750	0					
ANR	1284398	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1284399	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284400	Identifier	p		1283750	0					
ANR	1284401	Identifier	pole		1283750	1					
ANR	1284402	PrimaryExpression	0		1283750	1					
ANR	1284403	PrimaryExpression	2		1283750	1					
ANR	1284404	Identifier	x		1283750	1					
ANR	1284405	Argument	p -> pole [ 3 ] [ 2 ] . x		1283750	1					
ANR	1284406	MemberAccess	p -> pole [ 3 ] [ 2 ] . x		1283750	0					
ANR	1284407	ArrayIndexing	p -> pole [ 3 ] [ 2 ]		1283750	0					
ANR	1284408	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1284409	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284410	Identifier	p		1283750	0					
ANR	1284411	Identifier	pole		1283750	1					
ANR	1284412	PrimaryExpression	3		1283750	1					
ANR	1284413	PrimaryExpression	2		1283750	1					
ANR	1284414	Identifier	x		1283750	1					
ANR	1284415	CallExpression	"lcp2 ( p -> pole [ 2 ] [ 0 ] . x , p -> pole [ 2 ] [ 3 ] . x )"		1283750	1					
ANR	1284416	Callee	lcp2		1283750	0					
ANR	1284417	Identifier	lcp2		1283750	0					
ANR	1284418	ArgumentList	p -> pole [ 2 ] [ 0 ] . x		1283750	1					
ANR	1284419	Argument	p -> pole [ 2 ] [ 0 ] . x		1283750	0					
ANR	1284420	MemberAccess	p -> pole [ 2 ] [ 0 ] . x		1283750	0					
ANR	1284421	ArrayIndexing	p -> pole [ 2 ] [ 0 ]		1283750	0					
ANR	1284422	ArrayIndexing	p -> pole [ 2 ]		1283750	0					
ANR	1284423	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284424	Identifier	p		1283750	0					
ANR	1284425	Identifier	pole		1283750	1					
ANR	1284426	PrimaryExpression	2		1283750	1					
ANR	1284427	PrimaryExpression	0		1283750	1					
ANR	1284428	Identifier	x		1283750	1					
ANR	1284429	Argument	p -> pole [ 2 ] [ 3 ] . x		1283750	1					
ANR	1284430	MemberAccess	p -> pole [ 2 ] [ 3 ] . x		1283750	0					
ANR	1284431	ArrayIndexing	p -> pole [ 2 ] [ 3 ]		1283750	0					
ANR	1284432	ArrayIndexing	p -> pole [ 2 ]		1283750	0					
ANR	1284433	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284434	Identifier	p		1283750	0					
ANR	1284435	Identifier	pole		1283750	1					
ANR	1284436	PrimaryExpression	2		1283750	1					
ANR	1284437	PrimaryExpression	3		1283750	1					
ANR	1284438	Identifier	x		1283750	1					
ANR	1284439	CallExpression	"lcp2 ( lcp2 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x ) , lcp2 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x ) )"		1283750	1					
ANR	1284440	Callee	lcp2		1283750	0					
ANR	1284441	Identifier	lcp2		1283750	0					
ANR	1284442	ArgumentList	"lcp2 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x )"		1283750	1					
ANR	1284443	Argument	"lcp2 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x )"		1283750	0					
ANR	1284444	CallExpression	"lcp2 ( p -> pole [ 0 ] [ 0 ] . x , p -> pole [ 0 ] [ 3 ] . x )"		1283750	0					
ANR	1284445	Callee	lcp2		1283750	0					
ANR	1284446	Identifier	lcp2		1283750	0					
ANR	1284447	ArgumentList	p -> pole [ 0 ] [ 0 ] . x		1283750	1					
ANR	1284448	Argument	p -> pole [ 0 ] [ 0 ] . x		1283750	0					
ANR	1284449	MemberAccess	p -> pole [ 0 ] [ 0 ] . x		1283750	0					
ANR	1284450	ArrayIndexing	p -> pole [ 0 ] [ 0 ]		1283750	0					
ANR	1284451	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1284452	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284453	Identifier	p		1283750	0					
ANR	1284454	Identifier	pole		1283750	1					
ANR	1284455	PrimaryExpression	0		1283750	1					
ANR	1284456	PrimaryExpression	0		1283750	1					
ANR	1284457	Identifier	x		1283750	1					
ANR	1284458	Argument	p -> pole [ 0 ] [ 3 ] . x		1283750	1					
ANR	1284459	MemberAccess	p -> pole [ 0 ] [ 3 ] . x		1283750	0					
ANR	1284460	ArrayIndexing	p -> pole [ 0 ] [ 3 ]		1283750	0					
ANR	1284461	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1284462	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284463	Identifier	p		1283750	0					
ANR	1284464	Identifier	pole		1283750	1					
ANR	1284465	PrimaryExpression	0		1283750	1					
ANR	1284466	PrimaryExpression	3		1283750	1					
ANR	1284467	Identifier	x		1283750	1					
ANR	1284468	Argument	"lcp2 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x )"		1283750	1					
ANR	1284469	CallExpression	"lcp2 ( p -> pole [ 3 ] [ 0 ] . x , p -> pole [ 3 ] [ 3 ] . x )"		1283750	0					
ANR	1284470	Callee	lcp2		1283750	0					
ANR	1284471	Identifier	lcp2		1283750	0					
ANR	1284472	ArgumentList	p -> pole [ 3 ] [ 0 ] . x		1283750	1					
ANR	1284473	Argument	p -> pole [ 3 ] [ 0 ] . x		1283750	0					
ANR	1284474	MemberAccess	p -> pole [ 3 ] [ 0 ] . x		1283750	0					
ANR	1284475	ArrayIndexing	p -> pole [ 3 ] [ 0 ]		1283750	0					
ANR	1284476	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1284477	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284478	Identifier	p		1283750	0					
ANR	1284479	Identifier	pole		1283750	1					
ANR	1284480	PrimaryExpression	3		1283750	1					
ANR	1284481	PrimaryExpression	0		1283750	1					
ANR	1284482	Identifier	x		1283750	1					
ANR	1284483	Argument	p -> pole [ 3 ] [ 3 ] . x		1283750	1					
ANR	1284484	MemberAccess	p -> pole [ 3 ] [ 3 ] . x		1283750	0					
ANR	1284485	ArrayIndexing	p -> pole [ 3 ] [ 3 ]		1283750	0					
ANR	1284486	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1284487	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284488	Identifier	p		1283750	0					
ANR	1284489	Identifier	pole		1283750	1					
ANR	1284490	PrimaryExpression	3		1283750	1					
ANR	1284491	PrimaryExpression	3		1283750	1					
ANR	1284492	Identifier	x		1283750	1					
ANR	1284493	PrimaryExpression	9		1283750	1					
ANR	1284494	ExpressionStatement	"p -> pole [ 1 ] [ 1 ] . y = ( fixed ) ( ( 3 * ( lcp1 ( p -> pole [ 0 ] [ 1 ] . y , p -> pole [ 3 ] [ 1 ] . y ) + lcp1 ( p -> pole [ 1 ] [ 0 ] . y , p -> pole [ 1 ] [ 3 ] . y ) ) - lcp1 ( lcp1 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y ) , lcp1 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y ) ) ) / 9 )"	4029:8:153325:153639	1283750	4	True				
ANR	1284495	AssignmentExpression	"p -> pole [ 1 ] [ 1 ] . y = ( fixed ) ( ( 3 * ( lcp1 ( p -> pole [ 0 ] [ 1 ] . y , p -> pole [ 3 ] [ 1 ] . y ) + lcp1 ( p -> pole [ 1 ] [ 0 ] . y , p -> pole [ 1 ] [ 3 ] . y ) ) - lcp1 ( lcp1 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y ) , lcp1 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y ) ) ) / 9 )"		1283750	0		=			
ANR	1284496	MemberAccess	p -> pole [ 1 ] [ 1 ] . y		1283750	0					
ANR	1284497	ArrayIndexing	p -> pole [ 1 ] [ 1 ]		1283750	0					
ANR	1284498	ArrayIndexing	p -> pole [ 1 ]		1283750	0					
ANR	1284499	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284500	Identifier	p		1283750	0					
ANR	1284501	Identifier	pole		1283750	1					
ANR	1284502	PrimaryExpression	1		1283750	1					
ANR	1284503	PrimaryExpression	1		1283750	1					
ANR	1284504	Identifier	y		1283750	1					
ANR	1284505	CastExpression	"( fixed ) ( ( 3 * ( lcp1 ( p -> pole [ 0 ] [ 1 ] . y , p -> pole [ 3 ] [ 1 ] . y ) + lcp1 ( p -> pole [ 1 ] [ 0 ] . y , p -> pole [ 1 ] [ 3 ] . y ) ) - lcp1 ( lcp1 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y ) , lcp1 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y ) ) ) / 9 )"		1283750	1					
ANR	1284506	CastTarget	fixed		1283750	0					
ANR	1284507	MultiplicativeExpression	"( 3 * ( lcp1 ( p -> pole [ 0 ] [ 1 ] . y , p -> pole [ 3 ] [ 1 ] . y ) + lcp1 ( p -> pole [ 1 ] [ 0 ] . y , p -> pole [ 1 ] [ 3 ] . y ) ) - lcp1 ( lcp1 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y ) , lcp1 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y ) ) ) / 9"		1283750	1		/			
ANR	1284508	AdditiveExpression	"3 * ( lcp1 ( p -> pole [ 0 ] [ 1 ] . y , p -> pole [ 3 ] [ 1 ] . y ) + lcp1 ( p -> pole [ 1 ] [ 0 ] . y , p -> pole [ 1 ] [ 3 ] . y ) ) - lcp1 ( lcp1 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y ) , lcp1 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y ) )"		1283750	0		-			
ANR	1284509	MultiplicativeExpression	"3 * ( lcp1 ( p -> pole [ 0 ] [ 1 ] . y , p -> pole [ 3 ] [ 1 ] . y ) + lcp1 ( p -> pole [ 1 ] [ 0 ] . y , p -> pole [ 1 ] [ 3 ] . y ) )"		1283750	0		*			
ANR	1284510	PrimaryExpression	3		1283750	0					
ANR	1284511	AdditiveExpression	"lcp1 ( p -> pole [ 0 ] [ 1 ] . y , p -> pole [ 3 ] [ 1 ] . y ) + lcp1 ( p -> pole [ 1 ] [ 0 ] . y , p -> pole [ 1 ] [ 3 ] . y )"		1283750	1		+			
ANR	1284512	CallExpression	"lcp1 ( p -> pole [ 0 ] [ 1 ] . y , p -> pole [ 3 ] [ 1 ] . y )"		1283750	0					
ANR	1284513	Callee	lcp1		1283750	0					
ANR	1284514	Identifier	lcp1		1283750	0					
ANR	1284515	ArgumentList	p -> pole [ 0 ] [ 1 ] . y		1283750	1					
ANR	1284516	Argument	p -> pole [ 0 ] [ 1 ] . y		1283750	0					
ANR	1284517	MemberAccess	p -> pole [ 0 ] [ 1 ] . y		1283750	0					
ANR	1284518	ArrayIndexing	p -> pole [ 0 ] [ 1 ]		1283750	0					
ANR	1284519	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1284520	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284521	Identifier	p		1283750	0					
ANR	1284522	Identifier	pole		1283750	1					
ANR	1284523	PrimaryExpression	0		1283750	1					
ANR	1284524	PrimaryExpression	1		1283750	1					
ANR	1284525	Identifier	y		1283750	1					
ANR	1284526	Argument	p -> pole [ 3 ] [ 1 ] . y		1283750	1					
ANR	1284527	MemberAccess	p -> pole [ 3 ] [ 1 ] . y		1283750	0					
ANR	1284528	ArrayIndexing	p -> pole [ 3 ] [ 1 ]		1283750	0					
ANR	1284529	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1284530	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284531	Identifier	p		1283750	0					
ANR	1284532	Identifier	pole		1283750	1					
ANR	1284533	PrimaryExpression	3		1283750	1					
ANR	1284534	PrimaryExpression	1		1283750	1					
ANR	1284535	Identifier	y		1283750	1					
ANR	1284536	CallExpression	"lcp1 ( p -> pole [ 1 ] [ 0 ] . y , p -> pole [ 1 ] [ 3 ] . y )"		1283750	1					
ANR	1284537	Callee	lcp1		1283750	0					
ANR	1284538	Identifier	lcp1		1283750	0					
ANR	1284539	ArgumentList	p -> pole [ 1 ] [ 0 ] . y		1283750	1					
ANR	1284540	Argument	p -> pole [ 1 ] [ 0 ] . y		1283750	0					
ANR	1284541	MemberAccess	p -> pole [ 1 ] [ 0 ] . y		1283750	0					
ANR	1284542	ArrayIndexing	p -> pole [ 1 ] [ 0 ]		1283750	0					
ANR	1284543	ArrayIndexing	p -> pole [ 1 ]		1283750	0					
ANR	1284544	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284545	Identifier	p		1283750	0					
ANR	1284546	Identifier	pole		1283750	1					
ANR	1284547	PrimaryExpression	1		1283750	1					
ANR	1284548	PrimaryExpression	0		1283750	1					
ANR	1284549	Identifier	y		1283750	1					
ANR	1284550	Argument	p -> pole [ 1 ] [ 3 ] . y		1283750	1					
ANR	1284551	MemberAccess	p -> pole [ 1 ] [ 3 ] . y		1283750	0					
ANR	1284552	ArrayIndexing	p -> pole [ 1 ] [ 3 ]		1283750	0					
ANR	1284553	ArrayIndexing	p -> pole [ 1 ]		1283750	0					
ANR	1284554	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284555	Identifier	p		1283750	0					
ANR	1284556	Identifier	pole		1283750	1					
ANR	1284557	PrimaryExpression	1		1283750	1					
ANR	1284558	PrimaryExpression	3		1283750	1					
ANR	1284559	Identifier	y		1283750	1					
ANR	1284560	CallExpression	"lcp1 ( lcp1 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y ) , lcp1 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y ) )"		1283750	1					
ANR	1284561	Callee	lcp1		1283750	0					
ANR	1284562	Identifier	lcp1		1283750	0					
ANR	1284563	ArgumentList	"lcp1 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y )"		1283750	1					
ANR	1284564	Argument	"lcp1 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y )"		1283750	0					
ANR	1284565	CallExpression	"lcp1 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y )"		1283750	0					
ANR	1284566	Callee	lcp1		1283750	0					
ANR	1284567	Identifier	lcp1		1283750	0					
ANR	1284568	ArgumentList	p -> pole [ 0 ] [ 0 ] . y		1283750	1					
ANR	1284569	Argument	p -> pole [ 0 ] [ 0 ] . y		1283750	0					
ANR	1284570	MemberAccess	p -> pole [ 0 ] [ 0 ] . y		1283750	0					
ANR	1284571	ArrayIndexing	p -> pole [ 0 ] [ 0 ]		1283750	0					
ANR	1284572	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1284573	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284574	Identifier	p		1283750	0					
ANR	1284575	Identifier	pole		1283750	1					
ANR	1284576	PrimaryExpression	0		1283750	1					
ANR	1284577	PrimaryExpression	0		1283750	1					
ANR	1284578	Identifier	y		1283750	1					
ANR	1284579	Argument	p -> pole [ 0 ] [ 3 ] . y		1283750	1					
ANR	1284580	MemberAccess	p -> pole [ 0 ] [ 3 ] . y		1283750	0					
ANR	1284581	ArrayIndexing	p -> pole [ 0 ] [ 3 ]		1283750	0					
ANR	1284582	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1284583	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284584	Identifier	p		1283750	0					
ANR	1284585	Identifier	pole		1283750	1					
ANR	1284586	PrimaryExpression	0		1283750	1					
ANR	1284587	PrimaryExpression	3		1283750	1					
ANR	1284588	Identifier	y		1283750	1					
ANR	1284589	Argument	"lcp1 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y )"		1283750	1					
ANR	1284590	CallExpression	"lcp1 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y )"		1283750	0					
ANR	1284591	Callee	lcp1		1283750	0					
ANR	1284592	Identifier	lcp1		1283750	0					
ANR	1284593	ArgumentList	p -> pole [ 3 ] [ 0 ] . y		1283750	1					
ANR	1284594	Argument	p -> pole [ 3 ] [ 0 ] . y		1283750	0					
ANR	1284595	MemberAccess	p -> pole [ 3 ] [ 0 ] . y		1283750	0					
ANR	1284596	ArrayIndexing	p -> pole [ 3 ] [ 0 ]		1283750	0					
ANR	1284597	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1284598	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284599	Identifier	p		1283750	0					
ANR	1284600	Identifier	pole		1283750	1					
ANR	1284601	PrimaryExpression	3		1283750	1					
ANR	1284602	PrimaryExpression	0		1283750	1					
ANR	1284603	Identifier	y		1283750	1					
ANR	1284604	Argument	p -> pole [ 3 ] [ 3 ] . y		1283750	1					
ANR	1284605	MemberAccess	p -> pole [ 3 ] [ 3 ] . y		1283750	0					
ANR	1284606	ArrayIndexing	p -> pole [ 3 ] [ 3 ]		1283750	0					
ANR	1284607	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1284608	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284609	Identifier	p		1283750	0					
ANR	1284610	Identifier	pole		1283750	1					
ANR	1284611	PrimaryExpression	3		1283750	1					
ANR	1284612	PrimaryExpression	3		1283750	1					
ANR	1284613	Identifier	y		1283750	1					
ANR	1284614	PrimaryExpression	9		1283750	1					
ANR	1284615	ExpressionStatement	"p -> pole [ 1 ] [ 2 ] . y = ( fixed ) ( ( 3 * ( lcp1 ( p -> pole [ 0 ] [ 2 ] . y , p -> pole [ 3 ] [ 2 ] . y ) + lcp2 ( p -> pole [ 1 ] [ 0 ] . y , p -> pole [ 1 ] [ 3 ] . y ) ) - lcp1 ( lcp2 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y ) , lcp2 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y ) ) ) / 9 )"	4033:8:153649:153963	1283750	5	True				
ANR	1284616	AssignmentExpression	"p -> pole [ 1 ] [ 2 ] . y = ( fixed ) ( ( 3 * ( lcp1 ( p -> pole [ 0 ] [ 2 ] . y , p -> pole [ 3 ] [ 2 ] . y ) + lcp2 ( p -> pole [ 1 ] [ 0 ] . y , p -> pole [ 1 ] [ 3 ] . y ) ) - lcp1 ( lcp2 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y ) , lcp2 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y ) ) ) / 9 )"		1283750	0		=			
ANR	1284617	MemberAccess	p -> pole [ 1 ] [ 2 ] . y		1283750	0					
ANR	1284618	ArrayIndexing	p -> pole [ 1 ] [ 2 ]		1283750	0					
ANR	1284619	ArrayIndexing	p -> pole [ 1 ]		1283750	0					
ANR	1284620	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284621	Identifier	p		1283750	0					
ANR	1284622	Identifier	pole		1283750	1					
ANR	1284623	PrimaryExpression	1		1283750	1					
ANR	1284624	PrimaryExpression	2		1283750	1					
ANR	1284625	Identifier	y		1283750	1					
ANR	1284626	CastExpression	"( fixed ) ( ( 3 * ( lcp1 ( p -> pole [ 0 ] [ 2 ] . y , p -> pole [ 3 ] [ 2 ] . y ) + lcp2 ( p -> pole [ 1 ] [ 0 ] . y , p -> pole [ 1 ] [ 3 ] . y ) ) - lcp1 ( lcp2 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y ) , lcp2 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y ) ) ) / 9 )"		1283750	1					
ANR	1284627	CastTarget	fixed		1283750	0					
ANR	1284628	MultiplicativeExpression	"( 3 * ( lcp1 ( p -> pole [ 0 ] [ 2 ] . y , p -> pole [ 3 ] [ 2 ] . y ) + lcp2 ( p -> pole [ 1 ] [ 0 ] . y , p -> pole [ 1 ] [ 3 ] . y ) ) - lcp1 ( lcp2 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y ) , lcp2 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y ) ) ) / 9"		1283750	1		/			
ANR	1284629	AdditiveExpression	"3 * ( lcp1 ( p -> pole [ 0 ] [ 2 ] . y , p -> pole [ 3 ] [ 2 ] . y ) + lcp2 ( p -> pole [ 1 ] [ 0 ] . y , p -> pole [ 1 ] [ 3 ] . y ) ) - lcp1 ( lcp2 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y ) , lcp2 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y ) )"		1283750	0		-			
ANR	1284630	MultiplicativeExpression	"3 * ( lcp1 ( p -> pole [ 0 ] [ 2 ] . y , p -> pole [ 3 ] [ 2 ] . y ) + lcp2 ( p -> pole [ 1 ] [ 0 ] . y , p -> pole [ 1 ] [ 3 ] . y ) )"		1283750	0		*			
ANR	1284631	PrimaryExpression	3		1283750	0					
ANR	1284632	AdditiveExpression	"lcp1 ( p -> pole [ 0 ] [ 2 ] . y , p -> pole [ 3 ] [ 2 ] . y ) + lcp2 ( p -> pole [ 1 ] [ 0 ] . y , p -> pole [ 1 ] [ 3 ] . y )"		1283750	1		+			
ANR	1284633	CallExpression	"lcp1 ( p -> pole [ 0 ] [ 2 ] . y , p -> pole [ 3 ] [ 2 ] . y )"		1283750	0					
ANR	1284634	Callee	lcp1		1283750	0					
ANR	1284635	Identifier	lcp1		1283750	0					
ANR	1284636	ArgumentList	p -> pole [ 0 ] [ 2 ] . y		1283750	1					
ANR	1284637	Argument	p -> pole [ 0 ] [ 2 ] . y		1283750	0					
ANR	1284638	MemberAccess	p -> pole [ 0 ] [ 2 ] . y		1283750	0					
ANR	1284639	ArrayIndexing	p -> pole [ 0 ] [ 2 ]		1283750	0					
ANR	1284640	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1284641	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284642	Identifier	p		1283750	0					
ANR	1284643	Identifier	pole		1283750	1					
ANR	1284644	PrimaryExpression	0		1283750	1					
ANR	1284645	PrimaryExpression	2		1283750	1					
ANR	1284646	Identifier	y		1283750	1					
ANR	1284647	Argument	p -> pole [ 3 ] [ 2 ] . y		1283750	1					
ANR	1284648	MemberAccess	p -> pole [ 3 ] [ 2 ] . y		1283750	0					
ANR	1284649	ArrayIndexing	p -> pole [ 3 ] [ 2 ]		1283750	0					
ANR	1284650	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1284651	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284652	Identifier	p		1283750	0					
ANR	1284653	Identifier	pole		1283750	1					
ANR	1284654	PrimaryExpression	3		1283750	1					
ANR	1284655	PrimaryExpression	2		1283750	1					
ANR	1284656	Identifier	y		1283750	1					
ANR	1284657	CallExpression	"lcp2 ( p -> pole [ 1 ] [ 0 ] . y , p -> pole [ 1 ] [ 3 ] . y )"		1283750	1					
ANR	1284658	Callee	lcp2		1283750	0					
ANR	1284659	Identifier	lcp2		1283750	0					
ANR	1284660	ArgumentList	p -> pole [ 1 ] [ 0 ] . y		1283750	1					
ANR	1284661	Argument	p -> pole [ 1 ] [ 0 ] . y		1283750	0					
ANR	1284662	MemberAccess	p -> pole [ 1 ] [ 0 ] . y		1283750	0					
ANR	1284663	ArrayIndexing	p -> pole [ 1 ] [ 0 ]		1283750	0					
ANR	1284664	ArrayIndexing	p -> pole [ 1 ]		1283750	0					
ANR	1284665	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284666	Identifier	p		1283750	0					
ANR	1284667	Identifier	pole		1283750	1					
ANR	1284668	PrimaryExpression	1		1283750	1					
ANR	1284669	PrimaryExpression	0		1283750	1					
ANR	1284670	Identifier	y		1283750	1					
ANR	1284671	Argument	p -> pole [ 1 ] [ 3 ] . y		1283750	1					
ANR	1284672	MemberAccess	p -> pole [ 1 ] [ 3 ] . y		1283750	0					
ANR	1284673	ArrayIndexing	p -> pole [ 1 ] [ 3 ]		1283750	0					
ANR	1284674	ArrayIndexing	p -> pole [ 1 ]		1283750	0					
ANR	1284675	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284676	Identifier	p		1283750	0					
ANR	1284677	Identifier	pole		1283750	1					
ANR	1284678	PrimaryExpression	1		1283750	1					
ANR	1284679	PrimaryExpression	3		1283750	1					
ANR	1284680	Identifier	y		1283750	1					
ANR	1284681	CallExpression	"lcp1 ( lcp2 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y ) , lcp2 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y ) )"		1283750	1					
ANR	1284682	Callee	lcp1		1283750	0					
ANR	1284683	Identifier	lcp1		1283750	0					
ANR	1284684	ArgumentList	"lcp2 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y )"		1283750	1					
ANR	1284685	Argument	"lcp2 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y )"		1283750	0					
ANR	1284686	CallExpression	"lcp2 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y )"		1283750	0					
ANR	1284687	Callee	lcp2		1283750	0					
ANR	1284688	Identifier	lcp2		1283750	0					
ANR	1284689	ArgumentList	p -> pole [ 0 ] [ 0 ] . y		1283750	1					
ANR	1284690	Argument	p -> pole [ 0 ] [ 0 ] . y		1283750	0					
ANR	1284691	MemberAccess	p -> pole [ 0 ] [ 0 ] . y		1283750	0					
ANR	1284692	ArrayIndexing	p -> pole [ 0 ] [ 0 ]		1283750	0					
ANR	1284693	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1284694	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284695	Identifier	p		1283750	0					
ANR	1284696	Identifier	pole		1283750	1					
ANR	1284697	PrimaryExpression	0		1283750	1					
ANR	1284698	PrimaryExpression	0		1283750	1					
ANR	1284699	Identifier	y		1283750	1					
ANR	1284700	Argument	p -> pole [ 0 ] [ 3 ] . y		1283750	1					
ANR	1284701	MemberAccess	p -> pole [ 0 ] [ 3 ] . y		1283750	0					
ANR	1284702	ArrayIndexing	p -> pole [ 0 ] [ 3 ]		1283750	0					
ANR	1284703	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1284704	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284705	Identifier	p		1283750	0					
ANR	1284706	Identifier	pole		1283750	1					
ANR	1284707	PrimaryExpression	0		1283750	1					
ANR	1284708	PrimaryExpression	3		1283750	1					
ANR	1284709	Identifier	y		1283750	1					
ANR	1284710	Argument	"lcp2 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y )"		1283750	1					
ANR	1284711	CallExpression	"lcp2 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y )"		1283750	0					
ANR	1284712	Callee	lcp2		1283750	0					
ANR	1284713	Identifier	lcp2		1283750	0					
ANR	1284714	ArgumentList	p -> pole [ 3 ] [ 0 ] . y		1283750	1					
ANR	1284715	Argument	p -> pole [ 3 ] [ 0 ] . y		1283750	0					
ANR	1284716	MemberAccess	p -> pole [ 3 ] [ 0 ] . y		1283750	0					
ANR	1284717	ArrayIndexing	p -> pole [ 3 ] [ 0 ]		1283750	0					
ANR	1284718	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1284719	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284720	Identifier	p		1283750	0					
ANR	1284721	Identifier	pole		1283750	1					
ANR	1284722	PrimaryExpression	3		1283750	1					
ANR	1284723	PrimaryExpression	0		1283750	1					
ANR	1284724	Identifier	y		1283750	1					
ANR	1284725	Argument	p -> pole [ 3 ] [ 3 ] . y		1283750	1					
ANR	1284726	MemberAccess	p -> pole [ 3 ] [ 3 ] . y		1283750	0					
ANR	1284727	ArrayIndexing	p -> pole [ 3 ] [ 3 ]		1283750	0					
ANR	1284728	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1284729	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284730	Identifier	p		1283750	0					
ANR	1284731	Identifier	pole		1283750	1					
ANR	1284732	PrimaryExpression	3		1283750	1					
ANR	1284733	PrimaryExpression	3		1283750	1					
ANR	1284734	Identifier	y		1283750	1					
ANR	1284735	PrimaryExpression	9		1283750	1					
ANR	1284736	ExpressionStatement	"p -> pole [ 2 ] [ 1 ] . y = ( fixed ) ( ( 3 * ( lcp2 ( p -> pole [ 0 ] [ 1 ] . y , p -> pole [ 3 ] [ 1 ] . y ) + lcp1 ( p -> pole [ 2 ] [ 0 ] . y , p -> pole [ 2 ] [ 3 ] . y ) ) - lcp2 ( lcp1 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y ) , lcp1 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y ) ) ) / 9 )"	4037:8:153973:154287	1283750	6	True				
ANR	1284737	AssignmentExpression	"p -> pole [ 2 ] [ 1 ] . y = ( fixed ) ( ( 3 * ( lcp2 ( p -> pole [ 0 ] [ 1 ] . y , p -> pole [ 3 ] [ 1 ] . y ) + lcp1 ( p -> pole [ 2 ] [ 0 ] . y , p -> pole [ 2 ] [ 3 ] . y ) ) - lcp2 ( lcp1 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y ) , lcp1 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y ) ) ) / 9 )"		1283750	0		=			
ANR	1284738	MemberAccess	p -> pole [ 2 ] [ 1 ] . y		1283750	0					
ANR	1284739	ArrayIndexing	p -> pole [ 2 ] [ 1 ]		1283750	0					
ANR	1284740	ArrayIndexing	p -> pole [ 2 ]		1283750	0					
ANR	1284741	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284742	Identifier	p		1283750	0					
ANR	1284743	Identifier	pole		1283750	1					
ANR	1284744	PrimaryExpression	2		1283750	1					
ANR	1284745	PrimaryExpression	1		1283750	1					
ANR	1284746	Identifier	y		1283750	1					
ANR	1284747	CastExpression	"( fixed ) ( ( 3 * ( lcp2 ( p -> pole [ 0 ] [ 1 ] . y , p -> pole [ 3 ] [ 1 ] . y ) + lcp1 ( p -> pole [ 2 ] [ 0 ] . y , p -> pole [ 2 ] [ 3 ] . y ) ) - lcp2 ( lcp1 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y ) , lcp1 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y ) ) ) / 9 )"		1283750	1					
ANR	1284748	CastTarget	fixed		1283750	0					
ANR	1284749	MultiplicativeExpression	"( 3 * ( lcp2 ( p -> pole [ 0 ] [ 1 ] . y , p -> pole [ 3 ] [ 1 ] . y ) + lcp1 ( p -> pole [ 2 ] [ 0 ] . y , p -> pole [ 2 ] [ 3 ] . y ) ) - lcp2 ( lcp1 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y ) , lcp1 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y ) ) ) / 9"		1283750	1		/			
ANR	1284750	AdditiveExpression	"3 * ( lcp2 ( p -> pole [ 0 ] [ 1 ] . y , p -> pole [ 3 ] [ 1 ] . y ) + lcp1 ( p -> pole [ 2 ] [ 0 ] . y , p -> pole [ 2 ] [ 3 ] . y ) ) - lcp2 ( lcp1 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y ) , lcp1 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y ) )"		1283750	0		-			
ANR	1284751	MultiplicativeExpression	"3 * ( lcp2 ( p -> pole [ 0 ] [ 1 ] . y , p -> pole [ 3 ] [ 1 ] . y ) + lcp1 ( p -> pole [ 2 ] [ 0 ] . y , p -> pole [ 2 ] [ 3 ] . y ) )"		1283750	0		*			
ANR	1284752	PrimaryExpression	3		1283750	0					
ANR	1284753	AdditiveExpression	"lcp2 ( p -> pole [ 0 ] [ 1 ] . y , p -> pole [ 3 ] [ 1 ] . y ) + lcp1 ( p -> pole [ 2 ] [ 0 ] . y , p -> pole [ 2 ] [ 3 ] . y )"		1283750	1		+			
ANR	1284754	CallExpression	"lcp2 ( p -> pole [ 0 ] [ 1 ] . y , p -> pole [ 3 ] [ 1 ] . y )"		1283750	0					
ANR	1284755	Callee	lcp2		1283750	0					
ANR	1284756	Identifier	lcp2		1283750	0					
ANR	1284757	ArgumentList	p -> pole [ 0 ] [ 1 ] . y		1283750	1					
ANR	1284758	Argument	p -> pole [ 0 ] [ 1 ] . y		1283750	0					
ANR	1284759	MemberAccess	p -> pole [ 0 ] [ 1 ] . y		1283750	0					
ANR	1284760	ArrayIndexing	p -> pole [ 0 ] [ 1 ]		1283750	0					
ANR	1284761	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1284762	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284763	Identifier	p		1283750	0					
ANR	1284764	Identifier	pole		1283750	1					
ANR	1284765	PrimaryExpression	0		1283750	1					
ANR	1284766	PrimaryExpression	1		1283750	1					
ANR	1284767	Identifier	y		1283750	1					
ANR	1284768	Argument	p -> pole [ 3 ] [ 1 ] . y		1283750	1					
ANR	1284769	MemberAccess	p -> pole [ 3 ] [ 1 ] . y		1283750	0					
ANR	1284770	ArrayIndexing	p -> pole [ 3 ] [ 1 ]		1283750	0					
ANR	1284771	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1284772	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284773	Identifier	p		1283750	0					
ANR	1284774	Identifier	pole		1283750	1					
ANR	1284775	PrimaryExpression	3		1283750	1					
ANR	1284776	PrimaryExpression	1		1283750	1					
ANR	1284777	Identifier	y		1283750	1					
ANR	1284778	CallExpression	"lcp1 ( p -> pole [ 2 ] [ 0 ] . y , p -> pole [ 2 ] [ 3 ] . y )"		1283750	1					
ANR	1284779	Callee	lcp1		1283750	0					
ANR	1284780	Identifier	lcp1		1283750	0					
ANR	1284781	ArgumentList	p -> pole [ 2 ] [ 0 ] . y		1283750	1					
ANR	1284782	Argument	p -> pole [ 2 ] [ 0 ] . y		1283750	0					
ANR	1284783	MemberAccess	p -> pole [ 2 ] [ 0 ] . y		1283750	0					
ANR	1284784	ArrayIndexing	p -> pole [ 2 ] [ 0 ]		1283750	0					
ANR	1284785	ArrayIndexing	p -> pole [ 2 ]		1283750	0					
ANR	1284786	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284787	Identifier	p		1283750	0					
ANR	1284788	Identifier	pole		1283750	1					
ANR	1284789	PrimaryExpression	2		1283750	1					
ANR	1284790	PrimaryExpression	0		1283750	1					
ANR	1284791	Identifier	y		1283750	1					
ANR	1284792	Argument	p -> pole [ 2 ] [ 3 ] . y		1283750	1					
ANR	1284793	MemberAccess	p -> pole [ 2 ] [ 3 ] . y		1283750	0					
ANR	1284794	ArrayIndexing	p -> pole [ 2 ] [ 3 ]		1283750	0					
ANR	1284795	ArrayIndexing	p -> pole [ 2 ]		1283750	0					
ANR	1284796	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284797	Identifier	p		1283750	0					
ANR	1284798	Identifier	pole		1283750	1					
ANR	1284799	PrimaryExpression	2		1283750	1					
ANR	1284800	PrimaryExpression	3		1283750	1					
ANR	1284801	Identifier	y		1283750	1					
ANR	1284802	CallExpression	"lcp2 ( lcp1 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y ) , lcp1 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y ) )"		1283750	1					
ANR	1284803	Callee	lcp2		1283750	0					
ANR	1284804	Identifier	lcp2		1283750	0					
ANR	1284805	ArgumentList	"lcp1 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y )"		1283750	1					
ANR	1284806	Argument	"lcp1 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y )"		1283750	0					
ANR	1284807	CallExpression	"lcp1 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y )"		1283750	0					
ANR	1284808	Callee	lcp1		1283750	0					
ANR	1284809	Identifier	lcp1		1283750	0					
ANR	1284810	ArgumentList	p -> pole [ 0 ] [ 0 ] . y		1283750	1					
ANR	1284811	Argument	p -> pole [ 0 ] [ 0 ] . y		1283750	0					
ANR	1284812	MemberAccess	p -> pole [ 0 ] [ 0 ] . y		1283750	0					
ANR	1284813	ArrayIndexing	p -> pole [ 0 ] [ 0 ]		1283750	0					
ANR	1284814	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1284815	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284816	Identifier	p		1283750	0					
ANR	1284817	Identifier	pole		1283750	1					
ANR	1284818	PrimaryExpression	0		1283750	1					
ANR	1284819	PrimaryExpression	0		1283750	1					
ANR	1284820	Identifier	y		1283750	1					
ANR	1284821	Argument	p -> pole [ 0 ] [ 3 ] . y		1283750	1					
ANR	1284822	MemberAccess	p -> pole [ 0 ] [ 3 ] . y		1283750	0					
ANR	1284823	ArrayIndexing	p -> pole [ 0 ] [ 3 ]		1283750	0					
ANR	1284824	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1284825	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284826	Identifier	p		1283750	0					
ANR	1284827	Identifier	pole		1283750	1					
ANR	1284828	PrimaryExpression	0		1283750	1					
ANR	1284829	PrimaryExpression	3		1283750	1					
ANR	1284830	Identifier	y		1283750	1					
ANR	1284831	Argument	"lcp1 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y )"		1283750	1					
ANR	1284832	CallExpression	"lcp1 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y )"		1283750	0					
ANR	1284833	Callee	lcp1		1283750	0					
ANR	1284834	Identifier	lcp1		1283750	0					
ANR	1284835	ArgumentList	p -> pole [ 3 ] [ 0 ] . y		1283750	1					
ANR	1284836	Argument	p -> pole [ 3 ] [ 0 ] . y		1283750	0					
ANR	1284837	MemberAccess	p -> pole [ 3 ] [ 0 ] . y		1283750	0					
ANR	1284838	ArrayIndexing	p -> pole [ 3 ] [ 0 ]		1283750	0					
ANR	1284839	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1284840	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284841	Identifier	p		1283750	0					
ANR	1284842	Identifier	pole		1283750	1					
ANR	1284843	PrimaryExpression	3		1283750	1					
ANR	1284844	PrimaryExpression	0		1283750	1					
ANR	1284845	Identifier	y		1283750	1					
ANR	1284846	Argument	p -> pole [ 3 ] [ 3 ] . y		1283750	1					
ANR	1284847	MemberAccess	p -> pole [ 3 ] [ 3 ] . y		1283750	0					
ANR	1284848	ArrayIndexing	p -> pole [ 3 ] [ 3 ]		1283750	0					
ANR	1284849	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1284850	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284851	Identifier	p		1283750	0					
ANR	1284852	Identifier	pole		1283750	1					
ANR	1284853	PrimaryExpression	3		1283750	1					
ANR	1284854	PrimaryExpression	3		1283750	1					
ANR	1284855	Identifier	y		1283750	1					
ANR	1284856	PrimaryExpression	9		1283750	1					
ANR	1284857	ExpressionStatement	"p -> pole [ 2 ] [ 2 ] . y = ( fixed ) ( ( 3 * ( lcp2 ( p -> pole [ 0 ] [ 2 ] . y , p -> pole [ 3 ] [ 2 ] . y ) + lcp2 ( p -> pole [ 2 ] [ 0 ] . y , p -> pole [ 2 ] [ 3 ] . y ) ) - lcp2 ( lcp2 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y ) , lcp2 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y ) ) ) / 9 )"	4041:8:154297:154611	1283750	7	True				
ANR	1284858	AssignmentExpression	"p -> pole [ 2 ] [ 2 ] . y = ( fixed ) ( ( 3 * ( lcp2 ( p -> pole [ 0 ] [ 2 ] . y , p -> pole [ 3 ] [ 2 ] . y ) + lcp2 ( p -> pole [ 2 ] [ 0 ] . y , p -> pole [ 2 ] [ 3 ] . y ) ) - lcp2 ( lcp2 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y ) , lcp2 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y ) ) ) / 9 )"		1283750	0		=			
ANR	1284859	MemberAccess	p -> pole [ 2 ] [ 2 ] . y		1283750	0					
ANR	1284860	ArrayIndexing	p -> pole [ 2 ] [ 2 ]		1283750	0					
ANR	1284861	ArrayIndexing	p -> pole [ 2 ]		1283750	0					
ANR	1284862	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284863	Identifier	p		1283750	0					
ANR	1284864	Identifier	pole		1283750	1					
ANR	1284865	PrimaryExpression	2		1283750	1					
ANR	1284866	PrimaryExpression	2		1283750	1					
ANR	1284867	Identifier	y		1283750	1					
ANR	1284868	CastExpression	"( fixed ) ( ( 3 * ( lcp2 ( p -> pole [ 0 ] [ 2 ] . y , p -> pole [ 3 ] [ 2 ] . y ) + lcp2 ( p -> pole [ 2 ] [ 0 ] . y , p -> pole [ 2 ] [ 3 ] . y ) ) - lcp2 ( lcp2 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y ) , lcp2 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y ) ) ) / 9 )"		1283750	1					
ANR	1284869	CastTarget	fixed		1283750	0					
ANR	1284870	MultiplicativeExpression	"( 3 * ( lcp2 ( p -> pole [ 0 ] [ 2 ] . y , p -> pole [ 3 ] [ 2 ] . y ) + lcp2 ( p -> pole [ 2 ] [ 0 ] . y , p -> pole [ 2 ] [ 3 ] . y ) ) - lcp2 ( lcp2 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y ) , lcp2 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y ) ) ) / 9"		1283750	1		/			
ANR	1284871	AdditiveExpression	"3 * ( lcp2 ( p -> pole [ 0 ] [ 2 ] . y , p -> pole [ 3 ] [ 2 ] . y ) + lcp2 ( p -> pole [ 2 ] [ 0 ] . y , p -> pole [ 2 ] [ 3 ] . y ) ) - lcp2 ( lcp2 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y ) , lcp2 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y ) )"		1283750	0		-			
ANR	1284872	MultiplicativeExpression	"3 * ( lcp2 ( p -> pole [ 0 ] [ 2 ] . y , p -> pole [ 3 ] [ 2 ] . y ) + lcp2 ( p -> pole [ 2 ] [ 0 ] . y , p -> pole [ 2 ] [ 3 ] . y ) )"		1283750	0		*			
ANR	1284873	PrimaryExpression	3		1283750	0					
ANR	1284874	AdditiveExpression	"lcp2 ( p -> pole [ 0 ] [ 2 ] . y , p -> pole [ 3 ] [ 2 ] . y ) + lcp2 ( p -> pole [ 2 ] [ 0 ] . y , p -> pole [ 2 ] [ 3 ] . y )"		1283750	1		+			
ANR	1284875	CallExpression	"lcp2 ( p -> pole [ 0 ] [ 2 ] . y , p -> pole [ 3 ] [ 2 ] . y )"		1283750	0					
ANR	1284876	Callee	lcp2		1283750	0					
ANR	1284877	Identifier	lcp2		1283750	0					
ANR	1284878	ArgumentList	p -> pole [ 0 ] [ 2 ] . y		1283750	1					
ANR	1284879	Argument	p -> pole [ 0 ] [ 2 ] . y		1283750	0					
ANR	1284880	MemberAccess	p -> pole [ 0 ] [ 2 ] . y		1283750	0					
ANR	1284881	ArrayIndexing	p -> pole [ 0 ] [ 2 ]		1283750	0					
ANR	1284882	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1284883	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284884	Identifier	p		1283750	0					
ANR	1284885	Identifier	pole		1283750	1					
ANR	1284886	PrimaryExpression	0		1283750	1					
ANR	1284887	PrimaryExpression	2		1283750	1					
ANR	1284888	Identifier	y		1283750	1					
ANR	1284889	Argument	p -> pole [ 3 ] [ 2 ] . y		1283750	1					
ANR	1284890	MemberAccess	p -> pole [ 3 ] [ 2 ] . y		1283750	0					
ANR	1284891	ArrayIndexing	p -> pole [ 3 ] [ 2 ]		1283750	0					
ANR	1284892	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1284893	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284894	Identifier	p		1283750	0					
ANR	1284895	Identifier	pole		1283750	1					
ANR	1284896	PrimaryExpression	3		1283750	1					
ANR	1284897	PrimaryExpression	2		1283750	1					
ANR	1284898	Identifier	y		1283750	1					
ANR	1284899	CallExpression	"lcp2 ( p -> pole [ 2 ] [ 0 ] . y , p -> pole [ 2 ] [ 3 ] . y )"		1283750	1					
ANR	1284900	Callee	lcp2		1283750	0					
ANR	1284901	Identifier	lcp2		1283750	0					
ANR	1284902	ArgumentList	p -> pole [ 2 ] [ 0 ] . y		1283750	1					
ANR	1284903	Argument	p -> pole [ 2 ] [ 0 ] . y		1283750	0					
ANR	1284904	MemberAccess	p -> pole [ 2 ] [ 0 ] . y		1283750	0					
ANR	1284905	ArrayIndexing	p -> pole [ 2 ] [ 0 ]		1283750	0					
ANR	1284906	ArrayIndexing	p -> pole [ 2 ]		1283750	0					
ANR	1284907	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284908	Identifier	p		1283750	0					
ANR	1284909	Identifier	pole		1283750	1					
ANR	1284910	PrimaryExpression	2		1283750	1					
ANR	1284911	PrimaryExpression	0		1283750	1					
ANR	1284912	Identifier	y		1283750	1					
ANR	1284913	Argument	p -> pole [ 2 ] [ 3 ] . y		1283750	1					
ANR	1284914	MemberAccess	p -> pole [ 2 ] [ 3 ] . y		1283750	0					
ANR	1284915	ArrayIndexing	p -> pole [ 2 ] [ 3 ]		1283750	0					
ANR	1284916	ArrayIndexing	p -> pole [ 2 ]		1283750	0					
ANR	1284917	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284918	Identifier	p		1283750	0					
ANR	1284919	Identifier	pole		1283750	1					
ANR	1284920	PrimaryExpression	2		1283750	1					
ANR	1284921	PrimaryExpression	3		1283750	1					
ANR	1284922	Identifier	y		1283750	1					
ANR	1284923	CallExpression	"lcp2 ( lcp2 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y ) , lcp2 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y ) )"		1283750	1					
ANR	1284924	Callee	lcp2		1283750	0					
ANR	1284925	Identifier	lcp2		1283750	0					
ANR	1284926	ArgumentList	"lcp2 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y )"		1283750	1					
ANR	1284927	Argument	"lcp2 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y )"		1283750	0					
ANR	1284928	CallExpression	"lcp2 ( p -> pole [ 0 ] [ 0 ] . y , p -> pole [ 0 ] [ 3 ] . y )"		1283750	0					
ANR	1284929	Callee	lcp2		1283750	0					
ANR	1284930	Identifier	lcp2		1283750	0					
ANR	1284931	ArgumentList	p -> pole [ 0 ] [ 0 ] . y		1283750	1					
ANR	1284932	Argument	p -> pole [ 0 ] [ 0 ] . y		1283750	0					
ANR	1284933	MemberAccess	p -> pole [ 0 ] [ 0 ] . y		1283750	0					
ANR	1284934	ArrayIndexing	p -> pole [ 0 ] [ 0 ]		1283750	0					
ANR	1284935	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1284936	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284937	Identifier	p		1283750	0					
ANR	1284938	Identifier	pole		1283750	1					
ANR	1284939	PrimaryExpression	0		1283750	1					
ANR	1284940	PrimaryExpression	0		1283750	1					
ANR	1284941	Identifier	y		1283750	1					
ANR	1284942	Argument	p -> pole [ 0 ] [ 3 ] . y		1283750	1					
ANR	1284943	MemberAccess	p -> pole [ 0 ] [ 3 ] . y		1283750	0					
ANR	1284944	ArrayIndexing	p -> pole [ 0 ] [ 3 ]		1283750	0					
ANR	1284945	ArrayIndexing	p -> pole [ 0 ]		1283750	0					
ANR	1284946	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284947	Identifier	p		1283750	0					
ANR	1284948	Identifier	pole		1283750	1					
ANR	1284949	PrimaryExpression	0		1283750	1					
ANR	1284950	PrimaryExpression	3		1283750	1					
ANR	1284951	Identifier	y		1283750	1					
ANR	1284952	Argument	"lcp2 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y )"		1283750	1					
ANR	1284953	CallExpression	"lcp2 ( p -> pole [ 3 ] [ 0 ] . y , p -> pole [ 3 ] [ 3 ] . y )"		1283750	0					
ANR	1284954	Callee	lcp2		1283750	0					
ANR	1284955	Identifier	lcp2		1283750	0					
ANR	1284956	ArgumentList	p -> pole [ 3 ] [ 0 ] . y		1283750	1					
ANR	1284957	Argument	p -> pole [ 3 ] [ 0 ] . y		1283750	0					
ANR	1284958	MemberAccess	p -> pole [ 3 ] [ 0 ] . y		1283750	0					
ANR	1284959	ArrayIndexing	p -> pole [ 3 ] [ 0 ]		1283750	0					
ANR	1284960	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1284961	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284962	Identifier	p		1283750	0					
ANR	1284963	Identifier	pole		1283750	1					
ANR	1284964	PrimaryExpression	3		1283750	1					
ANR	1284965	PrimaryExpression	0		1283750	1					
ANR	1284966	Identifier	y		1283750	1					
ANR	1284967	Argument	p -> pole [ 3 ] [ 3 ] . y		1283750	1					
ANR	1284968	MemberAccess	p -> pole [ 3 ] [ 3 ] . y		1283750	0					
ANR	1284969	ArrayIndexing	p -> pole [ 3 ] [ 3 ]		1283750	0					
ANR	1284970	ArrayIndexing	p -> pole [ 3 ]		1283750	0					
ANR	1284971	PtrMemberAccess	p -> pole		1283750	0					
ANR	1284972	Identifier	p		1283750	0					
ANR	1284973	Identifier	pole		1283750	1					
ANR	1284974	PrimaryExpression	3		1283750	1					
ANR	1284975	PrimaryExpression	3		1283750	1					
ANR	1284976	Identifier	y		1283750	1					
ANR	1284977	PrimaryExpression	9		1283750	1					
ANR	1284978	ExpressionStatement	"patch_set_color ( pfs , p -> c [ 0 ] [ 0 ] , curve [ 0 ] . vertex . cc )"	4046:4:154623:154675	1283750	14	True				
ANR	1284979	CallExpression	"patch_set_color ( pfs , p -> c [ 0 ] [ 0 ] , curve [ 0 ] . vertex . cc )"		1283750	0					
ANR	1284980	Callee	patch_set_color		1283750	0					
ANR	1284981	Identifier	patch_set_color		1283750	0					
ANR	1284982	ArgumentList	pfs		1283750	1					
ANR	1284983	Argument	pfs		1283750	0					
ANR	1284984	Identifier	pfs		1283750	0					
ANR	1284985	Argument	p -> c [ 0 ] [ 0 ]		1283750	1					
ANR	1284986	ArrayIndexing	p -> c [ 0 ] [ 0 ]		1283750	0					
ANR	1284987	ArrayIndexing	p -> c [ 0 ]		1283750	0					
ANR	1284988	PtrMemberAccess	p -> c		1283750	0					
ANR	1284989	Identifier	p		1283750	0					
ANR	1284990	Identifier	c		1283750	1					
ANR	1284991	PrimaryExpression	0		1283750	1					
ANR	1284992	PrimaryExpression	0		1283750	1					
ANR	1284993	Argument	curve [ 0 ] . vertex . cc		1283750	2					
ANR	1284994	MemberAccess	curve [ 0 ] . vertex . cc		1283750	0					
ANR	1284995	MemberAccess	curve [ 0 ] . vertex		1283750	0					
ANR	1284996	ArrayIndexing	curve [ 0 ]		1283750	0					
ANR	1284997	Identifier	curve		1283750	0					
ANR	1284998	PrimaryExpression	0		1283750	1					
ANR	1284999	Identifier	vertex		1283750	1					
ANR	1285000	Identifier	cc		1283750	1					
ANR	1285001	ExpressionStatement	"patch_set_color ( pfs , p -> c [ 1 ] [ 0 ] , curve [ 1 ] . vertex . cc )"	4047:4:154681:154733	1283750	15	True				
ANR	1285002	CallExpression	"patch_set_color ( pfs , p -> c [ 1 ] [ 0 ] , curve [ 1 ] . vertex . cc )"		1283750	0					
ANR	1285003	Callee	patch_set_color		1283750	0					
ANR	1285004	Identifier	patch_set_color		1283750	0					
ANR	1285005	ArgumentList	pfs		1283750	1					
ANR	1285006	Argument	pfs		1283750	0					
ANR	1285007	Identifier	pfs		1283750	0					
ANR	1285008	Argument	p -> c [ 1 ] [ 0 ]		1283750	1					
ANR	1285009	ArrayIndexing	p -> c [ 1 ] [ 0 ]		1283750	0					
ANR	1285010	ArrayIndexing	p -> c [ 1 ]		1283750	0					
ANR	1285011	PtrMemberAccess	p -> c		1283750	0					
ANR	1285012	Identifier	p		1283750	0					
ANR	1285013	Identifier	c		1283750	1					
ANR	1285014	PrimaryExpression	1		1283750	1					
ANR	1285015	PrimaryExpression	0		1283750	1					
ANR	1285016	Argument	curve [ 1 ] . vertex . cc		1283750	2					
ANR	1285017	MemberAccess	curve [ 1 ] . vertex . cc		1283750	0					
ANR	1285018	MemberAccess	curve [ 1 ] . vertex		1283750	0					
ANR	1285019	ArrayIndexing	curve [ 1 ]		1283750	0					
ANR	1285020	Identifier	curve		1283750	0					
ANR	1285021	PrimaryExpression	1		1283750	1					
ANR	1285022	Identifier	vertex		1283750	1					
ANR	1285023	Identifier	cc		1283750	1					
ANR	1285024	ExpressionStatement	"patch_set_color ( pfs , p -> c [ 1 ] [ 1 ] , curve [ 2 ] . vertex . cc )"	4048:4:154739:154791	1283750	16	True				
ANR	1285025	CallExpression	"patch_set_color ( pfs , p -> c [ 1 ] [ 1 ] , curve [ 2 ] . vertex . cc )"		1283750	0					
ANR	1285026	Callee	patch_set_color		1283750	0					
ANR	1285027	Identifier	patch_set_color		1283750	0					
ANR	1285028	ArgumentList	pfs		1283750	1					
ANR	1285029	Argument	pfs		1283750	0					
ANR	1285030	Identifier	pfs		1283750	0					
ANR	1285031	Argument	p -> c [ 1 ] [ 1 ]		1283750	1					
ANR	1285032	ArrayIndexing	p -> c [ 1 ] [ 1 ]		1283750	0					
ANR	1285033	ArrayIndexing	p -> c [ 1 ]		1283750	0					
ANR	1285034	PtrMemberAccess	p -> c		1283750	0					
ANR	1285035	Identifier	p		1283750	0					
ANR	1285036	Identifier	c		1283750	1					
ANR	1285037	PrimaryExpression	1		1283750	1					
ANR	1285038	PrimaryExpression	1		1283750	1					
ANR	1285039	Argument	curve [ 2 ] . vertex . cc		1283750	2					
ANR	1285040	MemberAccess	curve [ 2 ] . vertex . cc		1283750	0					
ANR	1285041	MemberAccess	curve [ 2 ] . vertex		1283750	0					
ANR	1285042	ArrayIndexing	curve [ 2 ]		1283750	0					
ANR	1285043	Identifier	curve		1283750	0					
ANR	1285044	PrimaryExpression	2		1283750	1					
ANR	1285045	Identifier	vertex		1283750	1					
ANR	1285046	Identifier	cc		1283750	1					
ANR	1285047	ExpressionStatement	"patch_set_color ( pfs , p -> c [ 0 ] [ 1 ] , curve [ 3 ] . vertex . cc )"	4049:4:154797:154849	1283750	17	True				
ANR	1285048	CallExpression	"patch_set_color ( pfs , p -> c [ 0 ] [ 1 ] , curve [ 3 ] . vertex . cc )"		1283750	0					
ANR	1285049	Callee	patch_set_color		1283750	0					
ANR	1285050	Identifier	patch_set_color		1283750	0					
ANR	1285051	ArgumentList	pfs		1283750	1					
ANR	1285052	Argument	pfs		1283750	0					
ANR	1285053	Identifier	pfs		1283750	0					
ANR	1285054	Argument	p -> c [ 0 ] [ 1 ]		1283750	1					
ANR	1285055	ArrayIndexing	p -> c [ 0 ] [ 1 ]		1283750	0					
ANR	1285056	ArrayIndexing	p -> c [ 0 ]		1283750	0					
ANR	1285057	PtrMemberAccess	p -> c		1283750	0					
ANR	1285058	Identifier	p		1283750	0					
ANR	1285059	Identifier	c		1283750	1					
ANR	1285060	PrimaryExpression	0		1283750	1					
ANR	1285061	PrimaryExpression	1		1283750	1					
ANR	1285062	Argument	curve [ 3 ] . vertex . cc		1283750	2					
ANR	1285063	MemberAccess	curve [ 3 ] . vertex . cc		1283750	0					
ANR	1285064	MemberAccess	curve [ 3 ] . vertex		1283750	0					
ANR	1285065	ArrayIndexing	curve [ 3 ]		1283750	0					
ANR	1285066	Identifier	curve		1283750	0					
ANR	1285067	PrimaryExpression	3		1283750	1					
ANR	1285068	Identifier	vertex		1283750	1					
ANR	1285069	Identifier	cc		1283750	1					
ANR	1285070	ExpressionStatement	"patch_resolve_color_inline ( p -> c [ 0 ] [ 0 ] , pfs )"	4050:4:154855:154898	1283750	18	True				
ANR	1285071	CallExpression	"patch_resolve_color_inline ( p -> c [ 0 ] [ 0 ] , pfs )"		1283750	0					
ANR	1285072	Callee	patch_resolve_color_inline		1283750	0					
ANR	1285073	Identifier	patch_resolve_color_inline		1283750	0					
ANR	1285074	ArgumentList	p -> c [ 0 ] [ 0 ]		1283750	1					
ANR	1285075	Argument	p -> c [ 0 ] [ 0 ]		1283750	0					
ANR	1285076	ArrayIndexing	p -> c [ 0 ] [ 0 ]		1283750	0					
ANR	1285077	ArrayIndexing	p -> c [ 0 ]		1283750	0					
ANR	1285078	PtrMemberAccess	p -> c		1283750	0					
ANR	1285079	Identifier	p		1283750	0					
ANR	1285080	Identifier	c		1283750	1					
ANR	1285081	PrimaryExpression	0		1283750	1					
ANR	1285082	PrimaryExpression	0		1283750	1					
ANR	1285083	Argument	pfs		1283750	1					
ANR	1285084	Identifier	pfs		1283750	0					
ANR	1285085	ExpressionStatement	"patch_resolve_color_inline ( p -> c [ 0 ] [ 1 ] , pfs )"	4051:4:154904:154947	1283750	19	True				
ANR	1285086	CallExpression	"patch_resolve_color_inline ( p -> c [ 0 ] [ 1 ] , pfs )"		1283750	0					
ANR	1285087	Callee	patch_resolve_color_inline		1283750	0					
ANR	1285088	Identifier	patch_resolve_color_inline		1283750	0					
ANR	1285089	ArgumentList	p -> c [ 0 ] [ 1 ]		1283750	1					
ANR	1285090	Argument	p -> c [ 0 ] [ 1 ]		1283750	0					
ANR	1285091	ArrayIndexing	p -> c [ 0 ] [ 1 ]		1283750	0					
ANR	1285092	ArrayIndexing	p -> c [ 0 ]		1283750	0					
ANR	1285093	PtrMemberAccess	p -> c		1283750	0					
ANR	1285094	Identifier	p		1283750	0					
ANR	1285095	Identifier	c		1283750	1					
ANR	1285096	PrimaryExpression	0		1283750	1					
ANR	1285097	PrimaryExpression	1		1283750	1					
ANR	1285098	Argument	pfs		1283750	1					
ANR	1285099	Identifier	pfs		1283750	0					
ANR	1285100	ExpressionStatement	"patch_resolve_color_inline ( p -> c [ 1 ] [ 0 ] , pfs )"	4052:4:154953:154996	1283750	20	True				
ANR	1285101	CallExpression	"patch_resolve_color_inline ( p -> c [ 1 ] [ 0 ] , pfs )"		1283750	0					
ANR	1285102	Callee	patch_resolve_color_inline		1283750	0					
ANR	1285103	Identifier	patch_resolve_color_inline		1283750	0					
ANR	1285104	ArgumentList	p -> c [ 1 ] [ 0 ]		1283750	1					
ANR	1285105	Argument	p -> c [ 1 ] [ 0 ]		1283750	0					
ANR	1285106	ArrayIndexing	p -> c [ 1 ] [ 0 ]		1283750	0					
ANR	1285107	ArrayIndexing	p -> c [ 1 ]		1283750	0					
ANR	1285108	PtrMemberAccess	p -> c		1283750	0					
ANR	1285109	Identifier	p		1283750	0					
ANR	1285110	Identifier	c		1283750	1					
ANR	1285111	PrimaryExpression	1		1283750	1					
ANR	1285112	PrimaryExpression	0		1283750	1					
ANR	1285113	Argument	pfs		1283750	1					
ANR	1285114	Identifier	pfs		1283750	0					
ANR	1285115	ExpressionStatement	"patch_resolve_color_inline ( p -> c [ 1 ] [ 1 ] , pfs )"	4053:4:155002:155045	1283750	21	True				
ANR	1285116	CallExpression	"patch_resolve_color_inline ( p -> c [ 1 ] [ 1 ] , pfs )"		1283750	0					
ANR	1285117	Callee	patch_resolve_color_inline		1283750	0					
ANR	1285118	Identifier	patch_resolve_color_inline		1283750	0					
ANR	1285119	ArgumentList	p -> c [ 1 ] [ 1 ]		1283750	1					
ANR	1285120	Argument	p -> c [ 1 ] [ 1 ]		1283750	0					
ANR	1285121	ArrayIndexing	p -> c [ 1 ] [ 1 ]		1283750	0					
ANR	1285122	ArrayIndexing	p -> c [ 1 ]		1283750	0					
ANR	1285123	PtrMemberAccess	p -> c		1283750	0					
ANR	1285124	Identifier	p		1283750	0					
ANR	1285125	Identifier	c		1283750	1					
ANR	1285126	PrimaryExpression	1		1283750	1					
ANR	1285127	PrimaryExpression	1		1283750	1					
ANR	1285128	Argument	pfs		1283750	1					
ANR	1285129	Identifier	pfs		1283750	0					
ANR	1285130	IfStatement	if ( ! pfs -> Function )		1283750	22					
ANR	1285131	Condition	! pfs -> Function	4054:8:155055:155068	1283750	0	True				
ANR	1285132	UnaryOperationExpression	! pfs -> Function		1283750	0					
ANR	1285133	UnaryOperator	!		1283750	0					
ANR	1285134	PtrMemberAccess	pfs -> Function		1283750	1					
ANR	1285135	Identifier	pfs		1283750	0					
ANR	1285136	Identifier	Function		1283750	1					
ANR	1285137	CompoundStatement		64:24:3777:3777	1283750	1					
ANR	1285138	ExpressionStatement	"pcs -> type -> restrict_color ( & p -> c [ 0 ] [ 0 ] -> cc , pcs )"	4055:8:155081:155128	1283750	0	True				
ANR	1285139	CallExpression	"pcs -> type -> restrict_color ( & p -> c [ 0 ] [ 0 ] -> cc , pcs )"		1283750	0					
ANR	1285140	Callee	pcs -> type -> restrict_color		1283750	0					
ANR	1285141	PtrMemberAccess	pcs -> type -> restrict_color		1283750	0					
ANR	1285142	PtrMemberAccess	pcs -> type		1283750	0					
ANR	1285143	Identifier	pcs		1283750	0					
ANR	1285144	Identifier	type		1283750	1					
ANR	1285145	Identifier	restrict_color		1283750	1					
ANR	1285146	ArgumentList	& p -> c [ 0 ] [ 0 ] -> cc		1283750	1					
ANR	1285147	Argument	& p -> c [ 0 ] [ 0 ] -> cc		1283750	0					
ANR	1285148	UnaryOperationExpression	& p -> c [ 0 ] [ 0 ] -> cc		1283750	0					
ANR	1285149	UnaryOperator	&		1283750	0					
ANR	1285150	PtrMemberAccess	p -> c [ 0 ] [ 0 ] -> cc		1283750	1					
ANR	1285151	ArrayIndexing	p -> c [ 0 ] [ 0 ]		1283750	0					
ANR	1285152	ArrayIndexing	p -> c [ 0 ]		1283750	0					
ANR	1285153	PtrMemberAccess	p -> c		1283750	0					
ANR	1285154	Identifier	p		1283750	0					
ANR	1285155	Identifier	c		1283750	1					
ANR	1285156	PrimaryExpression	0		1283750	1					
ANR	1285157	PrimaryExpression	0		1283750	1					
ANR	1285158	Identifier	cc		1283750	1					
ANR	1285159	Argument	pcs		1283750	1					
ANR	1285160	Identifier	pcs		1283750	0					
ANR	1285161	ExpressionStatement	"pcs -> type -> restrict_color ( & p -> c [ 0 ] [ 1 ] -> cc , pcs )"	4056:8:155138:155185	1283750	1	True				
ANR	1285162	CallExpression	"pcs -> type -> restrict_color ( & p -> c [ 0 ] [ 1 ] -> cc , pcs )"		1283750	0					
ANR	1285163	Callee	pcs -> type -> restrict_color		1283750	0					
ANR	1285164	PtrMemberAccess	pcs -> type -> restrict_color		1283750	0					
ANR	1285165	PtrMemberAccess	pcs -> type		1283750	0					
ANR	1285166	Identifier	pcs		1283750	0					
ANR	1285167	Identifier	type		1283750	1					
ANR	1285168	Identifier	restrict_color		1283750	1					
ANR	1285169	ArgumentList	& p -> c [ 0 ] [ 1 ] -> cc		1283750	1					
ANR	1285170	Argument	& p -> c [ 0 ] [ 1 ] -> cc		1283750	0					
ANR	1285171	UnaryOperationExpression	& p -> c [ 0 ] [ 1 ] -> cc		1283750	0					
ANR	1285172	UnaryOperator	&		1283750	0					
ANR	1285173	PtrMemberAccess	p -> c [ 0 ] [ 1 ] -> cc		1283750	1					
ANR	1285174	ArrayIndexing	p -> c [ 0 ] [ 1 ]		1283750	0					
ANR	1285175	ArrayIndexing	p -> c [ 0 ]		1283750	0					
ANR	1285176	PtrMemberAccess	p -> c		1283750	0					
ANR	1285177	Identifier	p		1283750	0					
ANR	1285178	Identifier	c		1283750	1					
ANR	1285179	PrimaryExpression	0		1283750	1					
ANR	1285180	PrimaryExpression	1		1283750	1					
ANR	1285181	Identifier	cc		1283750	1					
ANR	1285182	Argument	pcs		1283750	1					
ANR	1285183	Identifier	pcs		1283750	0					
ANR	1285184	ExpressionStatement	"pcs -> type -> restrict_color ( & p -> c [ 1 ] [ 0 ] -> cc , pcs )"	4057:8:155195:155242	1283750	2	True				
ANR	1285185	CallExpression	"pcs -> type -> restrict_color ( & p -> c [ 1 ] [ 0 ] -> cc , pcs )"		1283750	0					
ANR	1285186	Callee	pcs -> type -> restrict_color		1283750	0					
ANR	1285187	PtrMemberAccess	pcs -> type -> restrict_color		1283750	0					
ANR	1285188	PtrMemberAccess	pcs -> type		1283750	0					
ANR	1285189	Identifier	pcs		1283750	0					
ANR	1285190	Identifier	type		1283750	1					
ANR	1285191	Identifier	restrict_color		1283750	1					
ANR	1285192	ArgumentList	& p -> c [ 1 ] [ 0 ] -> cc		1283750	1					
ANR	1285193	Argument	& p -> c [ 1 ] [ 0 ] -> cc		1283750	0					
ANR	1285194	UnaryOperationExpression	& p -> c [ 1 ] [ 0 ] -> cc		1283750	0					
ANR	1285195	UnaryOperator	&		1283750	0					
ANR	1285196	PtrMemberAccess	p -> c [ 1 ] [ 0 ] -> cc		1283750	1					
ANR	1285197	ArrayIndexing	p -> c [ 1 ] [ 0 ]		1283750	0					
ANR	1285198	ArrayIndexing	p -> c [ 1 ]		1283750	0					
ANR	1285199	PtrMemberAccess	p -> c		1283750	0					
ANR	1285200	Identifier	p		1283750	0					
ANR	1285201	Identifier	c		1283750	1					
ANR	1285202	PrimaryExpression	1		1283750	1					
ANR	1285203	PrimaryExpression	0		1283750	1					
ANR	1285204	Identifier	cc		1283750	1					
ANR	1285205	Argument	pcs		1283750	1					
ANR	1285206	Identifier	pcs		1283750	0					
ANR	1285207	ExpressionStatement	"pcs -> type -> restrict_color ( & p -> c [ 1 ] [ 1 ] -> cc , pcs )"	4058:8:155252:155299	1283750	3	True				
ANR	1285208	CallExpression	"pcs -> type -> restrict_color ( & p -> c [ 1 ] [ 1 ] -> cc , pcs )"		1283750	0					
ANR	1285209	Callee	pcs -> type -> restrict_color		1283750	0					
ANR	1285210	PtrMemberAccess	pcs -> type -> restrict_color		1283750	0					
ANR	1285211	PtrMemberAccess	pcs -> type		1283750	0					
ANR	1285212	Identifier	pcs		1283750	0					
ANR	1285213	Identifier	type		1283750	1					
ANR	1285214	Identifier	restrict_color		1283750	1					
ANR	1285215	ArgumentList	& p -> c [ 1 ] [ 1 ] -> cc		1283750	1					
ANR	1285216	Argument	& p -> c [ 1 ] [ 1 ] -> cc		1283750	0					
ANR	1285217	UnaryOperationExpression	& p -> c [ 1 ] [ 1 ] -> cc		1283750	0					
ANR	1285218	UnaryOperator	&		1283750	0					
ANR	1285219	PtrMemberAccess	p -> c [ 1 ] [ 1 ] -> cc		1283750	1					
ANR	1285220	ArrayIndexing	p -> c [ 1 ] [ 1 ]		1283750	0					
ANR	1285221	ArrayIndexing	p -> c [ 1 ]		1283750	0					
ANR	1285222	PtrMemberAccess	p -> c		1283750	0					
ANR	1285223	Identifier	p		1283750	0					
ANR	1285224	Identifier	c		1283750	1					
ANR	1285225	PrimaryExpression	1		1283750	1					
ANR	1285226	PrimaryExpression	1		1283750	1					
ANR	1285227	Identifier	cc		1283750	1					
ANR	1285228	Argument	pcs		1283750	1					
ANR	1285229	Identifier	pcs		1283750	0					
ANR	1285230	ReturnType	static void		1283750	1					
ANR	1285231	Identifier	make_tensor_patch		1283750	2					
ANR	1285232	ParameterList	"const patch_fill_state_t * pfs , tensor_patch * p , const patch_curve_t curve [ 4 ] , const gs_fixed_point interior [ 4 ]"		1283750	3					
ANR	1285233	Parameter	const patch_fill_state_t * pfs	3989:18:151170:151198	1283750	0	True				
ANR	1285234	ParameterType	const patch_fill_state_t *		1283750	0					
ANR	1285235	Identifier	pfs		1283750	1					
ANR	1285236	Parameter	tensor_patch * p	3989:49:151201:151215	1283750	1	True				
ANR	1285237	ParameterType	tensor_patch *		1283750	0					
ANR	1285238	Identifier	p		1283750	1					
ANR	1285239	Parameter	const patch_curve_t curve [ 4 ]	3989:66:151218:151245	1283750	2	True				
ANR	1285240	ParameterType	const patch_curve_t [ 4 ]		1283750	0					
ANR	1285241	Identifier	curve		1283750	1					
ANR	1285242	Parameter	const gs_fixed_point interior [ 4 ]	3990:11:151259:151290	1283750	3	True				
ANR	1285243	ParameterType	const gs_fixed_point [ 4 ]		1283750	0					
ANR	1285244	Identifier	interior		1283750	1					
ANR	1285245	CFGEntryNode	ENTRY		1283750		True				
ANR	1285246	CFGExitNode	EXIT		1283750		True				
ANR	1285247	Symbol	pfs -> Function		1283750						
ANR	1285248	Symbol	* curve [ 3 ] . control		1283750						
ANR	1285249	Symbol	curve [ 1 ] . vertex . p		1283750						
ANR	1285250	Symbol	* curve [ 2 ] . control		1283750						
ANR	1285251	Symbol	* pcs		1283750						
ANR	1285252	Symbol	* curve [ 0 ] . control		1283750						
ANR	1285253	Symbol	pfs -> direct_space		1283750						
ANR	1285254	Symbol	* curve [ 1 ] . control		1283750						
ANR	1285255	Symbol	p -> pole [ 0 ] [ 2 ] . x		1283750						
ANR	1285256	Symbol	p -> pole [ 0 ] [ 2 ] . y		1283750						
ANR	1285257	Symbol	* * p -> pole		1283750						
ANR	1285258	Symbol	p -> c		1283750						
ANR	1285259	Symbol	p -> pole [ 1 ] [ 2 ] . x		1283750						
ANR	1285260	Symbol	p -> pole [ 1 ] [ 2 ] . y		1283750						
ANR	1285261	Symbol	p -> pole [ 2 ] [ 2 ] . y		1283750						
ANR	1285262	Symbol	& p -> c [ 0 ] [ 0 ] -> cc		1283750						
ANR	1285263	Symbol	curve [ 2 ] . vertex		1283750						
ANR	1285264	Symbol	p -> pole [ 2 ] [ 2 ] . x		1283750						
ANR	1285265	Symbol	p -> pole [ 3 ] [ 2 ] . x		1283750						
ANR	1285266	Symbol	p -> pole [ 3 ] [ 2 ] . y		1283750						
ANR	1285267	Symbol	* * p -> c		1283750						
ANR	1285268	Symbol	curve [ 2 ] . vertex . cc		1283750						
ANR	1285269	Symbol	pcs -> type		1283750						
ANR	1285270	Symbol	p -> pole [ 3 ] [ 3 ] . x		1283750						
ANR	1285271	Symbol	NULL		1283750						
ANR	1285272	Symbol	p -> pole [ 3 ] [ 3 ] . y		1283750						
ANR	1285273	Symbol	* pfs		1283750						
ANR	1285274	Symbol	* p -> pole		1283750						
ANR	1285275	Symbol	curve [ 0 ] . control		1283750						
ANR	1285276	Symbol	curve [ 1 ] . control		1283750						
ANR	1285277	Symbol	curve [ 3 ] . control		1283750						
ANR	1285278	Symbol	p -> pole [ 2 ] [ 0 ] . y		1283750						
ANR	1285279	Symbol	p -> pole [ 3 ] [ 0 ] . x		1283750						
ANR	1285280	Symbol	curve [ 2 ] . control		1283750						
ANR	1285281	Symbol	p -> pole [ 3 ] [ 0 ] . y		1283750						
ANR	1285282	Symbol	* * * p		1283750						
ANR	1285283	Symbol	curve [ 1 ] . vertex . cc		1283750						
ANR	1285284	Symbol	p -> pole [ 2 ] [ 0 ] . x		1283750						
ANR	1285285	Symbol	* p -> c		1283750						
ANR	1285286	Symbol	p -> pole [ 1 ] [ 0 ] . x		1283750						
ANR	1285287	Symbol	p -> pole [ 0 ] [ 3 ] . y		1283750						
ANR	1285288	Symbol	p -> pole [ 0 ] [ 3 ] . x		1283750						
ANR	1285289	Symbol	p -> pole [ 1 ] [ 0 ] . y		1283750						
ANR	1285290	Symbol	p -> pole [ 0 ] [ 0 ] . x		1283750						
ANR	1285291	Symbol	p -> pole [ 1 ] [ 3 ] . y		1283750						
ANR	1285292	Symbol	& p -> c [ 1 ] [ 1 ] -> cc		1283750						
ANR	1285293	Symbol	p -> pole [ 1 ] [ 3 ] . x		1283750						
ANR	1285294	Symbol	p -> pole [ 0 ] [ 0 ] . y		1283750						
ANR	1285295	Symbol	pfs		1283750						
ANR	1285296	Symbol	p -> pole [ 2 ] [ 3 ] . y		1283750						
ANR	1285297	Symbol	curve [ 0 ] . vertex . p		1283750						
ANR	1285298	Symbol	p -> pole [ 2 ] [ 3 ] . x		1283750						
ANR	1285299	Symbol	curve [ 3 ] . vertex		1283750						
ANR	1285300	Symbol	curve		1283750						
ANR	1285301	Symbol	p -> pole		1283750						
ANR	1285302	Symbol	lcp1		1283750						
ANR	1285303	Symbol	lcp2		1283750						
ANR	1285304	Symbol	p -> pole [ 1 ] [ 1 ] . y		1283750						
ANR	1285305	Symbol	interior		1283750						
ANR	1285306	Symbol	p -> pole [ 1 ] [ 1 ] . x		1283750						
ANR	1285307	Symbol	& p -> c [ 0 ] [ 1 ] -> cc		1283750						
ANR	1285308	Symbol	p -> pole [ 0 ] [ 1 ] . y		1283750						
ANR	1285309	Symbol	p -> pole [ 0 ] [ 1 ] . x		1283750						
ANR	1285310	Symbol	* * p		1283750						
ANR	1285311	Symbol	curve [ 2 ] . vertex . p		1283750						
ANR	1285312	Symbol	pcs		1283750						
ANR	1285313	Symbol	curve [ 3 ] . vertex . p		1283750						
ANR	1285314	Symbol	curve [ 1 ] . vertex		1283750						
ANR	1285315	Symbol	* * curve		1283750						
ANR	1285316	Symbol	curve [ 0 ] . vertex . cc		1283750						
ANR	1285317	Symbol	curve [ 3 ] . vertex . cc		1283750						
ANR	1285318	Symbol	p		1283750						
ANR	1285319	Symbol	p -> pole [ 2 ] [ 1 ] . y		1283750						
ANR	1285320	Symbol	p -> pole [ 2 ] [ 1 ] . x		1283750						
ANR	1285321	Symbol	* curve		1283750						
ANR	1285322	Symbol	p -> pole [ 3 ] [ 1 ] . x		1283750						
ANR	1285323	Symbol	p -> pole [ 3 ] [ 1 ] . y		1283750						
ANR	1285324	Symbol	curve [ 0 ] . vertex		1283750						
ANR	1285325	Symbol	* p		1283750						
ANR	1285326	Symbol	* interior		1283750						
ANR	1285327	Symbol	& p -> c [ 1 ] [ 0 ] -> cc		1283750						
ANR	1285328	Function	gx_shade_background	4062:0:155310:155975							
ANR	1285329	FunctionDef	"gx_shade_background (gx_device * pdev , const gs_fixed_rect * rect , const gx_device_color * pdevc , gs_logical_operation_t log_op)"		1285328	0					
ANR	1285330	CompoundStatement		4065:0:155447:155975	1285328	0					
ANR	1285331	IdentifierDeclStatement	"gs_fixed_edge le , re ;"	4066:4:155453:155473	1285328	0	True				
ANR	1285332	IdentifierDecl	le		1285328	0					
ANR	1285333	IdentifierDeclType	gs_fixed_edge		1285328	0					
ANR	1285334	Identifier	le		1285328	1					
ANR	1285335	IdentifierDecl	re		1285328	1					
ANR	1285336	IdentifierDeclType	gs_fixed_edge		1285328	0					
ANR	1285337	Identifier	re		1285328	1					
ANR	1285338	ExpressionStatement	le . start . x = rect -> p . x - INTERPATCH_PADDING	4068:4:155480:155523	1285328	1	True				
ANR	1285339	AssignmentExpression	le . start . x = rect -> p . x - INTERPATCH_PADDING		1285328	0		=			
ANR	1285340	MemberAccess	le . start . x		1285328	0					
ANR	1285341	MemberAccess	le . start		1285328	0					
ANR	1285342	Identifier	le		1285328	0					
ANR	1285343	Identifier	start		1285328	1					
ANR	1285344	Identifier	x		1285328	1					
ANR	1285345	AdditiveExpression	rect -> p . x - INTERPATCH_PADDING		1285328	1		-			
ANR	1285346	MemberAccess	rect -> p . x		1285328	0					
ANR	1285347	PtrMemberAccess	rect -> p		1285328	0					
ANR	1285348	Identifier	rect		1285328	0					
ANR	1285349	Identifier	p		1285328	1					
ANR	1285350	Identifier	x		1285328	1					
ANR	1285351	Identifier	INTERPATCH_PADDING		1285328	1					
ANR	1285352	ExpressionStatement	le . start . y = rect -> p . y - INTERPATCH_PADDING	4069:4:155529:155572	1285328	2	True				
ANR	1285353	AssignmentExpression	le . start . y = rect -> p . y - INTERPATCH_PADDING		1285328	0		=			
ANR	1285354	MemberAccess	le . start . y		1285328	0					
ANR	1285355	MemberAccess	le . start		1285328	0					
ANR	1285356	Identifier	le		1285328	0					
ANR	1285357	Identifier	start		1285328	1					
ANR	1285358	Identifier	y		1285328	1					
ANR	1285359	AdditiveExpression	rect -> p . y - INTERPATCH_PADDING		1285328	1		-			
ANR	1285360	MemberAccess	rect -> p . y		1285328	0					
ANR	1285361	PtrMemberAccess	rect -> p		1285328	0					
ANR	1285362	Identifier	rect		1285328	0					
ANR	1285363	Identifier	p		1285328	1					
ANR	1285364	Identifier	y		1285328	1					
ANR	1285365	Identifier	INTERPATCH_PADDING		1285328	1					
ANR	1285366	ExpressionStatement	le . end . x = rect -> p . x - INTERPATCH_PADDING	4070:4:155578:155619	1285328	3	True				
ANR	1285367	AssignmentExpression	le . end . x = rect -> p . x - INTERPATCH_PADDING		1285328	0		=			
ANR	1285368	MemberAccess	le . end . x		1285328	0					
ANR	1285369	MemberAccess	le . end		1285328	0					
ANR	1285370	Identifier	le		1285328	0					
ANR	1285371	Identifier	end		1285328	1					
ANR	1285372	Identifier	x		1285328	1					
ANR	1285373	AdditiveExpression	rect -> p . x - INTERPATCH_PADDING		1285328	1		-			
ANR	1285374	MemberAccess	rect -> p . x		1285328	0					
ANR	1285375	PtrMemberAccess	rect -> p		1285328	0					
ANR	1285376	Identifier	rect		1285328	0					
ANR	1285377	Identifier	p		1285328	1					
ANR	1285378	Identifier	x		1285328	1					
ANR	1285379	Identifier	INTERPATCH_PADDING		1285328	1					
ANR	1285380	ExpressionStatement	le . end . y = rect -> q . y + INTERPATCH_PADDING	4071:4:155625:155666	1285328	4	True				
ANR	1285381	AssignmentExpression	le . end . y = rect -> q . y + INTERPATCH_PADDING		1285328	0		=			
ANR	1285382	MemberAccess	le . end . y		1285328	0					
ANR	1285383	MemberAccess	le . end		1285328	0					
ANR	1285384	Identifier	le		1285328	0					
ANR	1285385	Identifier	end		1285328	1					
ANR	1285386	Identifier	y		1285328	1					
ANR	1285387	AdditiveExpression	rect -> q . y + INTERPATCH_PADDING		1285328	1		+			
ANR	1285388	MemberAccess	rect -> q . y		1285328	0					
ANR	1285389	PtrMemberAccess	rect -> q		1285328	0					
ANR	1285390	Identifier	rect		1285328	0					
ANR	1285391	Identifier	q		1285328	1					
ANR	1285392	Identifier	y		1285328	1					
ANR	1285393	Identifier	INTERPATCH_PADDING		1285328	1					
ANR	1285394	ExpressionStatement	re . start . x = rect -> q . x + INTERPATCH_PADDING	4072:4:155672:155715	1285328	5	True				
ANR	1285395	AssignmentExpression	re . start . x = rect -> q . x + INTERPATCH_PADDING		1285328	0		=			
ANR	1285396	MemberAccess	re . start . x		1285328	0					
ANR	1285397	MemberAccess	re . start		1285328	0					
ANR	1285398	Identifier	re		1285328	0					
ANR	1285399	Identifier	start		1285328	1					
ANR	1285400	Identifier	x		1285328	1					
ANR	1285401	AdditiveExpression	rect -> q . x + INTERPATCH_PADDING		1285328	1		+			
ANR	1285402	MemberAccess	rect -> q . x		1285328	0					
ANR	1285403	PtrMemberAccess	rect -> q		1285328	0					
ANR	1285404	Identifier	rect		1285328	0					
ANR	1285405	Identifier	q		1285328	1					
ANR	1285406	Identifier	x		1285328	1					
ANR	1285407	Identifier	INTERPATCH_PADDING		1285328	1					
ANR	1285408	ExpressionStatement	re . start . y = rect -> p . y - INTERPATCH_PADDING	4073:4:155721:155764	1285328	6	True				
ANR	1285409	AssignmentExpression	re . start . y = rect -> p . y - INTERPATCH_PADDING		1285328	0		=			
ANR	1285410	MemberAccess	re . start . y		1285328	0					
ANR	1285411	MemberAccess	re . start		1285328	0					
ANR	1285412	Identifier	re		1285328	0					
ANR	1285413	Identifier	start		1285328	1					
ANR	1285414	Identifier	y		1285328	1					
ANR	1285415	AdditiveExpression	rect -> p . y - INTERPATCH_PADDING		1285328	1		-			
ANR	1285416	MemberAccess	rect -> p . y		1285328	0					
ANR	1285417	PtrMemberAccess	rect -> p		1285328	0					
ANR	1285418	Identifier	rect		1285328	0					
ANR	1285419	Identifier	p		1285328	1					
ANR	1285420	Identifier	y		1285328	1					
ANR	1285421	Identifier	INTERPATCH_PADDING		1285328	1					
ANR	1285422	ExpressionStatement	re . end . x = rect -> q . x + INTERPATCH_PADDING	4074:4:155770:155811	1285328	7	True				
ANR	1285423	AssignmentExpression	re . end . x = rect -> q . x + INTERPATCH_PADDING		1285328	0		=			
ANR	1285424	MemberAccess	re . end . x		1285328	0					
ANR	1285425	MemberAccess	re . end		1285328	0					
ANR	1285426	Identifier	re		1285328	0					
ANR	1285427	Identifier	end		1285328	1					
ANR	1285428	Identifier	x		1285328	1					
ANR	1285429	AdditiveExpression	rect -> q . x + INTERPATCH_PADDING		1285328	1		+			
ANR	1285430	MemberAccess	rect -> q . x		1285328	0					
ANR	1285431	PtrMemberAccess	rect -> q		1285328	0					
ANR	1285432	Identifier	rect		1285328	0					
ANR	1285433	Identifier	q		1285328	1					
ANR	1285434	Identifier	x		1285328	1					
ANR	1285435	Identifier	INTERPATCH_PADDING		1285328	1					
ANR	1285436	ExpressionStatement	re . end . y = rect -> q . y + INTERPATCH_PADDING	4075:4:155817:155858	1285328	8	True				
ANR	1285437	AssignmentExpression	re . end . y = rect -> q . y + INTERPATCH_PADDING		1285328	0		=			
ANR	1285438	MemberAccess	re . end . y		1285328	0					
ANR	1285439	MemberAccess	re . end		1285328	0					
ANR	1285440	Identifier	re		1285328	0					
ANR	1285441	Identifier	end		1285328	1					
ANR	1285442	Identifier	y		1285328	1					
ANR	1285443	AdditiveExpression	rect -> q . y + INTERPATCH_PADDING		1285328	1		+			
ANR	1285444	MemberAccess	rect -> q . y		1285328	0					
ANR	1285445	PtrMemberAccess	rect -> q		1285328	0					
ANR	1285446	Identifier	rect		1285328	0					
ANR	1285447	Identifier	q		1285328	1					
ANR	1285448	Identifier	y		1285328	1					
ANR	1285449	Identifier	INTERPATCH_PADDING		1285328	1					
ANR	1285450	ReturnStatement	"return dev_proc ( pdev , fill_trapezoid ) ( pdev , & le , & re , le . start . y , le . end . y , false , pdevc , log_op ) ;"	4076:4:155864:155973	1285328	9	True				
ANR	1285451	CallExpression	"dev_proc ( pdev , fill_trapezoid ) ( pdev , & le , & re , le . start . y , le . end . y , false , pdevc , log_op )"		1285328	0					
ANR	1285452	Callee	"dev_proc ( pdev , fill_trapezoid )"		1285328	0					
ANR	1285453	CallExpression	"dev_proc ( pdev , fill_trapezoid )"		1285328	0					
ANR	1285454	Callee	dev_proc		1285328	0					
ANR	1285455	Identifier	dev_proc		1285328	0					
ANR	1285456	ArgumentList	pdev		1285328	1					
ANR	1285457	Argument	pdev		1285328	0					
ANR	1285458	Identifier	pdev		1285328	0					
ANR	1285459	Argument	fill_trapezoid		1285328	1					
ANR	1285460	Identifier	fill_trapezoid		1285328	0					
ANR	1285461	ArgumentList	pdev		1285328	1					
ANR	1285462	Argument	pdev		1285328	0					
ANR	1285463	Identifier	pdev		1285328	0					
ANR	1285464	Argument	& le		1285328	1					
ANR	1285465	UnaryOperationExpression	& le		1285328	0					
ANR	1285466	UnaryOperator	&		1285328	0					
ANR	1285467	Identifier	le		1285328	1					
ANR	1285468	Argument	& re		1285328	2					
ANR	1285469	UnaryOperationExpression	& re		1285328	0					
ANR	1285470	UnaryOperator	&		1285328	0					
ANR	1285471	Identifier	re		1285328	1					
ANR	1285472	Argument	le . start . y		1285328	3					
ANR	1285473	MemberAccess	le . start . y		1285328	0					
ANR	1285474	MemberAccess	le . start		1285328	0					
ANR	1285475	Identifier	le		1285328	0					
ANR	1285476	Identifier	start		1285328	1					
ANR	1285477	Identifier	y		1285328	1					
ANR	1285478	Argument	le . end . y		1285328	4					
ANR	1285479	MemberAccess	le . end . y		1285328	0					
ANR	1285480	MemberAccess	le . end		1285328	0					
ANR	1285481	Identifier	le		1285328	0					
ANR	1285482	Identifier	end		1285328	1					
ANR	1285483	Identifier	y		1285328	1					
ANR	1285484	Argument	false		1285328	5					
ANR	1285485	Identifier	false		1285328	0					
ANR	1285486	Argument	pdevc		1285328	6					
ANR	1285487	Identifier	pdevc		1285328	0					
ANR	1285488	Argument	log_op		1285328	7					
ANR	1285489	Identifier	log_op		1285328	0					
ANR	1285490	ReturnType	int		1285328	1					
ANR	1285491	Identifier	gx_shade_background		1285328	2					
ANR	1285492	ParameterList	"gx_device * pdev , const gs_fixed_rect * rect , const gx_device_color * pdevc , gs_logical_operation_t log_op"		1285328	3					
ANR	1285493	Parameter	gx_device * pdev	4063:20:155334:155348	1285328	0	True				
ANR	1285494	ParameterType	gx_device *		1285328	0					
ANR	1285495	Identifier	pdev		1285328	1					
ANR	1285496	Parameter	const gs_fixed_rect * rect	4063:37:155351:155375	1285328	1	True				
ANR	1285497	ParameterType	const gs_fixed_rect *		1285328	0					
ANR	1285498	Identifier	rect		1285328	1					
ANR	1285499	Parameter	const gx_device_color * pdevc	4064:8:155386:155413	1285328	2	True				
ANR	1285500	ParameterType	const gx_device_color *		1285328	0					
ANR	1285501	Identifier	pdevc		1285328	1					
ANR	1285502	Parameter	gs_logical_operation_t log_op	4064:38:155416:155444	1285328	3	True				
ANR	1285503	ParameterType	gs_logical_operation_t		1285328	0					
ANR	1285504	Identifier	log_op		1285328	1					
ANR	1285505	CFGEntryNode	ENTRY		1285328		True				
ANR	1285506	CFGExitNode	EXIT		1285328		True				
ANR	1285507	Symbol	rect -> p . x		1285328						
ANR	1285508	Symbol	re . start . x		1285328						
ANR	1285509	Symbol	rect -> p . y		1285328						
ANR	1285510	Symbol	le . end		1285328						
ANR	1285511	Symbol	pdevc		1285328						
ANR	1285512	Symbol	re . start . y		1285328						
ANR	1285513	Symbol	le . start . y		1285328						
ANR	1285514	Symbol	rect -> q . y		1285328						
ANR	1285515	Symbol	rect -> q . x		1285328						
ANR	1285516	Symbol	le . end . x		1285328						
ANR	1285517	Symbol	le . end . y		1285328						
ANR	1285518	Symbol	pdev		1285328						
ANR	1285519	Symbol	rect		1285328						
ANR	1285520	Symbol	le . start . x		1285328						
ANR	1285521	Symbol	dev_proc		1285328						
ANR	1285522	Symbol	fill_trapezoid		1285328						
ANR	1285523	Symbol	rect -> q		1285328						
ANR	1285524	Symbol	re . start		1285328						
ANR	1285525	Symbol	rect -> p		1285328						
ANR	1285526	Symbol	INTERPATCH_PADDING		1285328						
ANR	1285527	Symbol	& le		1285328						
ANR	1285528	Symbol	false		1285328						
ANR	1285529	Symbol	log_op		1285328						
ANR	1285530	Symbol	le . start		1285328						
ANR	1285531	Symbol	re . end		1285328						
ANR	1285532	Symbol	re . end . x		1285328						
ANR	1285533	Symbol	re		1285328						
ANR	1285534	Symbol	re . end . y		1285328						
ANR	1285535	Symbol	le		1285328						
ANR	1285536	Symbol	* rect		1285328						
ANR	1285537	Symbol	& re		1285328						
ANR	1285538	Function	patch_fill	4080:0:155978:161192							
ANR	1285539	FunctionDef	"patch_fill (patch_fill_state_t * pfs , const patch_curve_t curve [ 4 ] , const gs_fixed_point interior [ 4 ] , void ( * transform ) ( gs_fixed_point * , const patch_curve_t [ 4 ] , const gs_fixed_point [ 4 ] , double , double ))"		1285538	0					
ANR	1285540	CompoundStatement		4085:0:156237:161192	1285538	0					
ANR	1285541	IdentifierDeclStatement	tensor_patch p ;	4086:4:156243:156257	1285538	0	True				
ANR	1285542	IdentifierDecl	p		1285538	0					
ANR	1285543	IdentifierDeclType	tensor_patch		1285538	0					
ANR	1285544	Identifier	p		1285538	1					
ANR	1285545	IdentifierDeclStatement	patch_color_t * c [ 4 ] ;	4087:4:156263:156282	1285538	1	True				
ANR	1285546	IdentifierDecl	* c [ 4 ]		1285538	0					
ANR	1285547	IdentifierDeclType	patch_color_t * [ 4 ]		1285538	0					
ANR	1285548	Identifier	c		1285538	1					
ANR	1285549	PrimaryExpression	4		1285538	2					
ANR	1285550	IdentifierDeclStatement	"int kv [ 4 ] , kvm , ku [ 4 ] , kum ;"	4088:4:156288:156314	1285538	2	True				
ANR	1285551	IdentifierDecl	kv [ 4 ]		1285538	0					
ANR	1285552	IdentifierDeclType	int [ 4 ]		1285538	0					
ANR	1285553	Identifier	kv		1285538	1					
ANR	1285554	PrimaryExpression	4		1285538	2					
ANR	1285555	IdentifierDecl	kvm		1285538	1					
ANR	1285556	IdentifierDeclType	int		1285538	0					
ANR	1285557	Identifier	kvm		1285538	1					
ANR	1285558	IdentifierDecl	ku [ 4 ]		1285538	2					
ANR	1285559	IdentifierDeclType	int [ 4 ]		1285538	0					
ANR	1285560	Identifier	ku		1285538	1					
ANR	1285561	PrimaryExpression	4		1285538	2					
ANR	1285562	IdentifierDecl	kum		1285538	3					
ANR	1285563	IdentifierDeclType	int		1285538	0					
ANR	1285564	Identifier	kum		1285538	1					
ANR	1285565	IdentifierDeclStatement	int code = 0 ;	4089:4:156320:156332	1285538	3	True				
ANR	1285566	IdentifierDecl	code = 0		1285538	0					
ANR	1285567	IdentifierDeclType	int		1285538	0					
ANR	1285568	Identifier	code		1285538	1					
ANR	1285569	AssignmentExpression	code = 0		1285538	2		=			
ANR	1285570	Identifier	code		1285538	0					
ANR	1285571	PrimaryExpression	0		1285538	1					
ANR	1285572	IdentifierDeclStatement	"byte * color_stack_ptr = reserve_colors_inline ( pfs , c , 4 ) ;"	4090:4:156338:156394	1285538	4	True				
ANR	1285573	IdentifierDecl	"* color_stack_ptr = reserve_colors_inline ( pfs , c , 4 )"		1285538	0					
ANR	1285574	IdentifierDeclType	byte *		1285538	0					
ANR	1285575	Identifier	color_stack_ptr		1285538	1					
ANR	1285576	AssignmentExpression	"* color_stack_ptr = reserve_colors_inline ( pfs , c , 4 )"		1285538	2		=			
ANR	1285577	Identifier	color_stack_ptr		1285538	0					
ANR	1285578	CallExpression	"reserve_colors_inline ( pfs , c , 4 )"		1285538	1					
ANR	1285579	Callee	reserve_colors_inline		1285538	0					
ANR	1285580	Identifier	reserve_colors_inline		1285538	0					
ANR	1285581	ArgumentList	pfs		1285538	1					
ANR	1285582	Argument	pfs		1285538	0					
ANR	1285583	Identifier	pfs		1285538	0					
ANR	1285584	Argument	c		1285538	1					
ANR	1285585	Identifier	c		1285538	0					
ANR	1285586	Argument	4		1285538	2					
ANR	1285587	PrimaryExpression	4		1285538	0					
ANR	1285588	ExpressionStatement	p . c [ 0 ] [ 0 ] = c [ 0 ]	4092:4:156418:156434	1285538	5	True				
ANR	1285589	AssignmentExpression	p . c [ 0 ] [ 0 ] = c [ 0 ]		1285538	0		=			
ANR	1285590	ArrayIndexing	p . c [ 0 ] [ 0 ]		1285538	0					
ANR	1285591	ArrayIndexing	p . c [ 0 ]		1285538	0					
ANR	1285592	MemberAccess	p . c		1285538	0					
ANR	1285593	Identifier	p		1285538	0					
ANR	1285594	Identifier	c		1285538	1					
ANR	1285595	PrimaryExpression	0		1285538	1					
ANR	1285596	PrimaryExpression	0		1285538	1					
ANR	1285597	ArrayIndexing	c [ 0 ]		1285538	1					
ANR	1285598	Identifier	c		1285538	0					
ANR	1285599	PrimaryExpression	0		1285538	1					
ANR	1285600	ExpressionStatement	p . c [ 0 ] [ 1 ] = c [ 1 ]	4093:4:156440:156456	1285538	6	True				
ANR	1285601	AssignmentExpression	p . c [ 0 ] [ 1 ] = c [ 1 ]		1285538	0		=			
ANR	1285602	ArrayIndexing	p . c [ 0 ] [ 1 ]		1285538	0					
ANR	1285603	ArrayIndexing	p . c [ 0 ]		1285538	0					
ANR	1285604	MemberAccess	p . c		1285538	0					
ANR	1285605	Identifier	p		1285538	0					
ANR	1285606	Identifier	c		1285538	1					
ANR	1285607	PrimaryExpression	0		1285538	1					
ANR	1285608	PrimaryExpression	1		1285538	1					
ANR	1285609	ArrayIndexing	c [ 1 ]		1285538	1					
ANR	1285610	Identifier	c		1285538	0					
ANR	1285611	PrimaryExpression	1		1285538	1					
ANR	1285612	ExpressionStatement	p . c [ 1 ] [ 0 ] = c [ 2 ]	4094:4:156462:156478	1285538	7	True				
ANR	1285613	AssignmentExpression	p . c [ 1 ] [ 0 ] = c [ 2 ]		1285538	0		=			
ANR	1285614	ArrayIndexing	p . c [ 1 ] [ 0 ]		1285538	0					
ANR	1285615	ArrayIndexing	p . c [ 1 ]		1285538	0					
ANR	1285616	MemberAccess	p . c		1285538	0					
ANR	1285617	Identifier	p		1285538	0					
ANR	1285618	Identifier	c		1285538	1					
ANR	1285619	PrimaryExpression	1		1285538	1					
ANR	1285620	PrimaryExpression	0		1285538	1					
ANR	1285621	ArrayIndexing	c [ 2 ]		1285538	1					
ANR	1285622	Identifier	c		1285538	0					
ANR	1285623	PrimaryExpression	2		1285538	1					
ANR	1285624	ExpressionStatement	p . c [ 1 ] [ 1 ] = c [ 3 ]	4095:4:156484:156500	1285538	8	True				
ANR	1285625	AssignmentExpression	p . c [ 1 ] [ 1 ] = c [ 3 ]		1285538	0		=			
ANR	1285626	ArrayIndexing	p . c [ 1 ] [ 1 ]		1285538	0					
ANR	1285627	ArrayIndexing	p . c [ 1 ]		1285538	0					
ANR	1285628	MemberAccess	p . c		1285538	0					
ANR	1285629	Identifier	p		1285538	0					
ANR	1285630	Identifier	c		1285538	1					
ANR	1285631	PrimaryExpression	1		1285538	1					
ANR	1285632	PrimaryExpression	1		1285538	1					
ANR	1285633	ArrayIndexing	c [ 3 ]		1285538	1					
ANR	1285634	Identifier	c		1285538	0					
ANR	1285635	PrimaryExpression	3		1285538	1					
ANR	1285636	ExpressionStatement	dbg_patch_cnt ++	4097:4:156520:156535	1285538	9	True				
ANR	1285637	PostIncDecOperationExpression	dbg_patch_cnt ++		1285538	0					
ANR	1285638	Identifier	dbg_patch_cnt		1285538	0					
ANR	1285639	IncDec	++		1285538	1					
ANR	1285640	ExpressionStatement	"make_tensor_patch ( pfs , & p , curve , interior )"	4103:4:156743:156786	1285538	10	True				
ANR	1285641	CallExpression	"make_tensor_patch ( pfs , & p , curve , interior )"		1285538	0					
ANR	1285642	Callee	make_tensor_patch		1285538	0					
ANR	1285643	Identifier	make_tensor_patch		1285538	0					
ANR	1285644	ArgumentList	pfs		1285538	1					
ANR	1285645	Argument	pfs		1285538	0					
ANR	1285646	Identifier	pfs		1285538	0					
ANR	1285647	Argument	& p		1285538	1					
ANR	1285648	UnaryOperationExpression	& p		1285538	0					
ANR	1285649	UnaryOperator	&		1285538	0					
ANR	1285650	Identifier	p		1285538	1					
ANR	1285651	Argument	curve		1285538	2					
ANR	1285652	Identifier	curve		1285538	0					
ANR	1285653	Argument	interior		1285538	3					
ANR	1285654	Identifier	interior		1285538	0					
ANR	1285655	ExpressionStatement	pfs -> unlinear = ! is_linear_color_applicable ( pfs )	4104:4:156792:156840	1285538	11	True				
ANR	1285656	AssignmentExpression	pfs -> unlinear = ! is_linear_color_applicable ( pfs )		1285538	0		=			
ANR	1285657	PtrMemberAccess	pfs -> unlinear		1285538	0					
ANR	1285658	Identifier	pfs		1285538	0					
ANR	1285659	Identifier	unlinear		1285538	1					
ANR	1285660	UnaryOperationExpression	! is_linear_color_applicable ( pfs )		1285538	1					
ANR	1285661	UnaryOperator	!		1285538	0					
ANR	1285662	CallExpression	is_linear_color_applicable ( pfs )		1285538	1					
ANR	1285663	Callee	is_linear_color_applicable		1285538	0					
ANR	1285664	Identifier	is_linear_color_applicable		1285538	0					
ANR	1285665	ArgumentList	pfs		1285538	1					
ANR	1285666	Argument	pfs		1285538	0					
ANR	1285667	Identifier	pfs		1285538	0					
ANR	1285668	ExpressionStatement	pfs -> linear_color = false	4105:4:156846:156871	1285538	12	True				
ANR	1285669	AssignmentExpression	pfs -> linear_color = false		1285538	0		=			
ANR	1285670	PtrMemberAccess	pfs -> linear_color		1285538	0					
ANR	1285671	Identifier	pfs		1285538	0					
ANR	1285672	Identifier	linear_color		1285538	1					
ANR	1285673	Identifier	false		1285538	1					
ANR	1285674	IfStatement	"if ( ( * dev_proc ( pfs -> dev , dev_spec_op ) ) ( pfs -> dev , gxdso_pattern_shading_area , NULL , 0 ) > 0 )"		1285538	13					
ANR	1285675	Condition	"( * dev_proc ( pfs -> dev , dev_spec_op ) ) ( pfs -> dev , gxdso_pattern_shading_area , NULL , 0 ) > 0"	4106:8:156881:156977	1285538	0	True				
ANR	1285676	RelationalExpression	"( * dev_proc ( pfs -> dev , dev_spec_op ) ) ( pfs -> dev , gxdso_pattern_shading_area , NULL , 0 ) > 0"		1285538	0		>			
ANR	1285677	CallExpression	"( * dev_proc ( pfs -> dev , dev_spec_op ) ) ( pfs -> dev , gxdso_pattern_shading_area , NULL , 0 )"		1285538	0					
ANR	1285678	Callee	"* dev_proc ( pfs -> dev , dev_spec_op )"		1285538	0					
ANR	1285679	UnaryOperationExpression	"* dev_proc ( pfs -> dev , dev_spec_op )"		1285538	0					
ANR	1285680	UnaryOperator	*		1285538	0					
ANR	1285681	CallExpression	"dev_proc ( pfs -> dev , dev_spec_op )"		1285538	1					
ANR	1285682	Callee	dev_proc		1285538	0					
ANR	1285683	Identifier	dev_proc		1285538	0					
ANR	1285684	ArgumentList	pfs -> dev		1285538	1					
ANR	1285685	Argument	pfs -> dev		1285538	0					
ANR	1285686	PtrMemberAccess	pfs -> dev		1285538	0					
ANR	1285687	Identifier	pfs		1285538	0					
ANR	1285688	Identifier	dev		1285538	1					
ANR	1285689	Argument	dev_spec_op		1285538	1					
ANR	1285690	Identifier	dev_spec_op		1285538	0					
ANR	1285691	ArgumentList	pfs -> dev		1285538	1					
ANR	1285692	Argument	pfs -> dev		1285538	0					
ANR	1285693	PtrMemberAccess	pfs -> dev		1285538	0					
ANR	1285694	Identifier	pfs		1285538	0					
ANR	1285695	Identifier	dev		1285538	1					
ANR	1285696	Argument	gxdso_pattern_shading_area		1285538	1					
ANR	1285697	Identifier	gxdso_pattern_shading_area		1285538	0					
ANR	1285698	Argument	NULL		1285538	2					
ANR	1285699	Identifier	NULL		1285538	0					
ANR	1285700	Argument	0		1285538	3					
ANR	1285701	PrimaryExpression	0		1285538	0					
ANR	1285702	PrimaryExpression	0		1285538	1					
ANR	1285703	CompoundStatement		39:8:1683:1747	1285538	1					
ANR	1285704	IdentifierDeclStatement	gx_device * pdev = pfs -> dev ;	4111:8:157163:157189	1285538	0	True				
ANR	1285705	IdentifierDecl	* pdev = pfs -> dev		1285538	0					
ANR	1285706	IdentifierDeclType	gx_device *		1285538	0					
ANR	1285707	Identifier	pdev		1285538	1					
ANR	1285708	AssignmentExpression	* pdev = pfs -> dev		1285538	2		=			
ANR	1285709	Identifier	pdev		1285538	0					
ANR	1285710	PtrMemberAccess	pfs -> dev		1285538	1					
ANR	1285711	Identifier	pfs		1285538	0					
ANR	1285712	Identifier	dev		1285538	1					
ANR	1285713	IdentifierDeclStatement	gx_path path ;	4112:8:157199:157211	1285538	1	True				
ANR	1285714	IdentifierDecl	path		1285538	0					
ANR	1285715	IdentifierDeclType	gx_path		1285538	0					
ANR	1285716	Identifier	path		1285538	1					
ANR	1285717	IdentifierDeclStatement	fixed d01x = ( curve [ 1 ] . vertex . p . x - curve [ 0 ] . vertex . p . x ) >> 1 ;	4113:8:157221:157282	1285538	2	True				
ANR	1285718	IdentifierDecl	d01x = ( curve [ 1 ] . vertex . p . x - curve [ 0 ] . vertex . p . x ) >> 1		1285538	0					
ANR	1285719	IdentifierDeclType	fixed		1285538	0					
ANR	1285720	Identifier	d01x		1285538	1					
ANR	1285721	AssignmentExpression	d01x = ( curve [ 1 ] . vertex . p . x - curve [ 0 ] . vertex . p . x ) >> 1		1285538	2		=			
ANR	1285722	Identifier	d01x		1285538	0					
ANR	1285723	ShiftExpression	( curve [ 1 ] . vertex . p . x - curve [ 0 ] . vertex . p . x ) >> 1		1285538	1		>>			
ANR	1285724	AdditiveExpression	curve [ 1 ] . vertex . p . x - curve [ 0 ] . vertex . p . x		1285538	0		-			
ANR	1285725	MemberAccess	curve [ 1 ] . vertex . p . x		1285538	0					
ANR	1285726	MemberAccess	curve [ 1 ] . vertex . p		1285538	0					
ANR	1285727	MemberAccess	curve [ 1 ] . vertex		1285538	0					
ANR	1285728	ArrayIndexing	curve [ 1 ]		1285538	0					
ANR	1285729	Identifier	curve		1285538	0					
ANR	1285730	PrimaryExpression	1		1285538	1					
ANR	1285731	Identifier	vertex		1285538	1					
ANR	1285732	Identifier	p		1285538	1					
ANR	1285733	Identifier	x		1285538	1					
ANR	1285734	MemberAccess	curve [ 0 ] . vertex . p . x		1285538	1					
ANR	1285735	MemberAccess	curve [ 0 ] . vertex . p		1285538	0					
ANR	1285736	MemberAccess	curve [ 0 ] . vertex		1285538	0					
ANR	1285737	ArrayIndexing	curve [ 0 ]		1285538	0					
ANR	1285738	Identifier	curve		1285538	0					
ANR	1285739	PrimaryExpression	0		1285538	1					
ANR	1285740	Identifier	vertex		1285538	1					
ANR	1285741	Identifier	p		1285538	1					
ANR	1285742	Identifier	x		1285538	1					
ANR	1285743	PrimaryExpression	1		1285538	1					
ANR	1285744	IdentifierDeclStatement	fixed d01y = ( curve [ 1 ] . vertex . p . y - curve [ 0 ] . vertex . p . y ) >> 1 ;	4114:8:157292:157353	1285538	3	True				
ANR	1285745	IdentifierDecl	d01y = ( curve [ 1 ] . vertex . p . y - curve [ 0 ] . vertex . p . y ) >> 1		1285538	0					
ANR	1285746	IdentifierDeclType	fixed		1285538	0					
ANR	1285747	Identifier	d01y		1285538	1					
ANR	1285748	AssignmentExpression	d01y = ( curve [ 1 ] . vertex . p . y - curve [ 0 ] . vertex . p . y ) >> 1		1285538	2		=			
ANR	1285749	Identifier	d01y		1285538	0					
ANR	1285750	ShiftExpression	( curve [ 1 ] . vertex . p . y - curve [ 0 ] . vertex . p . y ) >> 1		1285538	1		>>			
ANR	1285751	AdditiveExpression	curve [ 1 ] . vertex . p . y - curve [ 0 ] . vertex . p . y		1285538	0		-			
ANR	1285752	MemberAccess	curve [ 1 ] . vertex . p . y		1285538	0					
ANR	1285753	MemberAccess	curve [ 1 ] . vertex . p		1285538	0					
ANR	1285754	MemberAccess	curve [ 1 ] . vertex		1285538	0					
ANR	1285755	ArrayIndexing	curve [ 1 ]		1285538	0					
ANR	1285756	Identifier	curve		1285538	0					
ANR	1285757	PrimaryExpression	1		1285538	1					
ANR	1285758	Identifier	vertex		1285538	1					
ANR	1285759	Identifier	p		1285538	1					
ANR	1285760	Identifier	y		1285538	1					
ANR	1285761	MemberAccess	curve [ 0 ] . vertex . p . y		1285538	1					
ANR	1285762	MemberAccess	curve [ 0 ] . vertex . p		1285538	0					
ANR	1285763	MemberAccess	curve [ 0 ] . vertex		1285538	0					
ANR	1285764	ArrayIndexing	curve [ 0 ]		1285538	0					
ANR	1285765	Identifier	curve		1285538	0					
ANR	1285766	PrimaryExpression	0		1285538	1					
ANR	1285767	Identifier	vertex		1285538	1					
ANR	1285768	Identifier	p		1285538	1					
ANR	1285769	Identifier	y		1285538	1					
ANR	1285770	PrimaryExpression	1		1285538	1					
ANR	1285771	IdentifierDeclStatement	fixed d12x = ( curve [ 2 ] . vertex . p . x - curve [ 1 ] . vertex . p . x ) >> 1 ;	4115:8:157363:157424	1285538	4	True				
ANR	1285772	IdentifierDecl	d12x = ( curve [ 2 ] . vertex . p . x - curve [ 1 ] . vertex . p . x ) >> 1		1285538	0					
ANR	1285773	IdentifierDeclType	fixed		1285538	0					
ANR	1285774	Identifier	d12x		1285538	1					
ANR	1285775	AssignmentExpression	d12x = ( curve [ 2 ] . vertex . p . x - curve [ 1 ] . vertex . p . x ) >> 1		1285538	2		=			
ANR	1285776	Identifier	d12x		1285538	0					
ANR	1285777	ShiftExpression	( curve [ 2 ] . vertex . p . x - curve [ 1 ] . vertex . p . x ) >> 1		1285538	1		>>			
ANR	1285778	AdditiveExpression	curve [ 2 ] . vertex . p . x - curve [ 1 ] . vertex . p . x		1285538	0		-			
ANR	1285779	MemberAccess	curve [ 2 ] . vertex . p . x		1285538	0					
ANR	1285780	MemberAccess	curve [ 2 ] . vertex . p		1285538	0					
ANR	1285781	MemberAccess	curve [ 2 ] . vertex		1285538	0					
ANR	1285782	ArrayIndexing	curve [ 2 ]		1285538	0					
ANR	1285783	Identifier	curve		1285538	0					
ANR	1285784	PrimaryExpression	2		1285538	1					
ANR	1285785	Identifier	vertex		1285538	1					
ANR	1285786	Identifier	p		1285538	1					
ANR	1285787	Identifier	x		1285538	1					
ANR	1285788	MemberAccess	curve [ 1 ] . vertex . p . x		1285538	1					
ANR	1285789	MemberAccess	curve [ 1 ] . vertex . p		1285538	0					
ANR	1285790	MemberAccess	curve [ 1 ] . vertex		1285538	0					
ANR	1285791	ArrayIndexing	curve [ 1 ]		1285538	0					
ANR	1285792	Identifier	curve		1285538	0					
ANR	1285793	PrimaryExpression	1		1285538	1					
ANR	1285794	Identifier	vertex		1285538	1					
ANR	1285795	Identifier	p		1285538	1					
ANR	1285796	Identifier	x		1285538	1					
ANR	1285797	PrimaryExpression	1		1285538	1					
ANR	1285798	IdentifierDeclStatement	fixed d12y = ( curve [ 2 ] . vertex . p . y - curve [ 1 ] . vertex . p . y ) >> 1 ;	4116:8:157434:157495	1285538	5	True				
ANR	1285799	IdentifierDecl	d12y = ( curve [ 2 ] . vertex . p . y - curve [ 1 ] . vertex . p . y ) >> 1		1285538	0					
ANR	1285800	IdentifierDeclType	fixed		1285538	0					
ANR	1285801	Identifier	d12y		1285538	1					
ANR	1285802	AssignmentExpression	d12y = ( curve [ 2 ] . vertex . p . y - curve [ 1 ] . vertex . p . y ) >> 1		1285538	2		=			
ANR	1285803	Identifier	d12y		1285538	0					
ANR	1285804	ShiftExpression	( curve [ 2 ] . vertex . p . y - curve [ 1 ] . vertex . p . y ) >> 1		1285538	1		>>			
ANR	1285805	AdditiveExpression	curve [ 2 ] . vertex . p . y - curve [ 1 ] . vertex . p . y		1285538	0		-			
ANR	1285806	MemberAccess	curve [ 2 ] . vertex . p . y		1285538	0					
ANR	1285807	MemberAccess	curve [ 2 ] . vertex . p		1285538	0					
ANR	1285808	MemberAccess	curve [ 2 ] . vertex		1285538	0					
ANR	1285809	ArrayIndexing	curve [ 2 ]		1285538	0					
ANR	1285810	Identifier	curve		1285538	0					
ANR	1285811	PrimaryExpression	2		1285538	1					
ANR	1285812	Identifier	vertex		1285538	1					
ANR	1285813	Identifier	p		1285538	1					
ANR	1285814	Identifier	y		1285538	1					
ANR	1285815	MemberAccess	curve [ 1 ] . vertex . p . y		1285538	1					
ANR	1285816	MemberAccess	curve [ 1 ] . vertex . p		1285538	0					
ANR	1285817	MemberAccess	curve [ 1 ] . vertex		1285538	0					
ANR	1285818	ArrayIndexing	curve [ 1 ]		1285538	0					
ANR	1285819	Identifier	curve		1285538	0					
ANR	1285820	PrimaryExpression	1		1285538	1					
ANR	1285821	Identifier	vertex		1285538	1					
ANR	1285822	Identifier	p		1285538	1					
ANR	1285823	Identifier	y		1285538	1					
ANR	1285824	PrimaryExpression	1		1285538	1					
ANR	1285825	IdentifierDeclStatement	fixed d23x = ( curve [ 3 ] . vertex . p . x - curve [ 2 ] . vertex . p . x ) >> 1 ;	4117:8:157505:157566	1285538	6	True				
ANR	1285826	IdentifierDecl	d23x = ( curve [ 3 ] . vertex . p . x - curve [ 2 ] . vertex . p . x ) >> 1		1285538	0					
ANR	1285827	IdentifierDeclType	fixed		1285538	0					
ANR	1285828	Identifier	d23x		1285538	1					
ANR	1285829	AssignmentExpression	d23x = ( curve [ 3 ] . vertex . p . x - curve [ 2 ] . vertex . p . x ) >> 1		1285538	2		=			
ANR	1285830	Identifier	d23x		1285538	0					
ANR	1285831	ShiftExpression	( curve [ 3 ] . vertex . p . x - curve [ 2 ] . vertex . p . x ) >> 1		1285538	1		>>			
ANR	1285832	AdditiveExpression	curve [ 3 ] . vertex . p . x - curve [ 2 ] . vertex . p . x		1285538	0		-			
ANR	1285833	MemberAccess	curve [ 3 ] . vertex . p . x		1285538	0					
ANR	1285834	MemberAccess	curve [ 3 ] . vertex . p		1285538	0					
ANR	1285835	MemberAccess	curve [ 3 ] . vertex		1285538	0					
ANR	1285836	ArrayIndexing	curve [ 3 ]		1285538	0					
ANR	1285837	Identifier	curve		1285538	0					
ANR	1285838	PrimaryExpression	3		1285538	1					
ANR	1285839	Identifier	vertex		1285538	1					
ANR	1285840	Identifier	p		1285538	1					
ANR	1285841	Identifier	x		1285538	1					
ANR	1285842	MemberAccess	curve [ 2 ] . vertex . p . x		1285538	1					
ANR	1285843	MemberAccess	curve [ 2 ] . vertex . p		1285538	0					
ANR	1285844	MemberAccess	curve [ 2 ] . vertex		1285538	0					
ANR	1285845	ArrayIndexing	curve [ 2 ]		1285538	0					
ANR	1285846	Identifier	curve		1285538	0					
ANR	1285847	PrimaryExpression	2		1285538	1					
ANR	1285848	Identifier	vertex		1285538	1					
ANR	1285849	Identifier	p		1285538	1					
ANR	1285850	Identifier	x		1285538	1					
ANR	1285851	PrimaryExpression	1		1285538	1					
ANR	1285852	IdentifierDeclStatement	fixed d23y = ( curve [ 3 ] . vertex . p . y - curve [ 2 ] . vertex . p . y ) >> 1 ;	4118:8:157576:157637	1285538	7	True				
ANR	1285853	IdentifierDecl	d23y = ( curve [ 3 ] . vertex . p . y - curve [ 2 ] . vertex . p . y ) >> 1		1285538	0					
ANR	1285854	IdentifierDeclType	fixed		1285538	0					
ANR	1285855	Identifier	d23y		1285538	1					
ANR	1285856	AssignmentExpression	d23y = ( curve [ 3 ] . vertex . p . y - curve [ 2 ] . vertex . p . y ) >> 1		1285538	2		=			
ANR	1285857	Identifier	d23y		1285538	0					
ANR	1285858	ShiftExpression	( curve [ 3 ] . vertex . p . y - curve [ 2 ] . vertex . p . y ) >> 1		1285538	1		>>			
ANR	1285859	AdditiveExpression	curve [ 3 ] . vertex . p . y - curve [ 2 ] . vertex . p . y		1285538	0		-			
ANR	1285860	MemberAccess	curve [ 3 ] . vertex . p . y		1285538	0					
ANR	1285861	MemberAccess	curve [ 3 ] . vertex . p		1285538	0					
ANR	1285862	MemberAccess	curve [ 3 ] . vertex		1285538	0					
ANR	1285863	ArrayIndexing	curve [ 3 ]		1285538	0					
ANR	1285864	Identifier	curve		1285538	0					
ANR	1285865	PrimaryExpression	3		1285538	1					
ANR	1285866	Identifier	vertex		1285538	1					
ANR	1285867	Identifier	p		1285538	1					
ANR	1285868	Identifier	y		1285538	1					
ANR	1285869	MemberAccess	curve [ 2 ] . vertex . p . y		1285538	1					
ANR	1285870	MemberAccess	curve [ 2 ] . vertex . p		1285538	0					
ANR	1285871	MemberAccess	curve [ 2 ] . vertex		1285538	0					
ANR	1285872	ArrayIndexing	curve [ 2 ]		1285538	0					
ANR	1285873	Identifier	curve		1285538	0					
ANR	1285874	PrimaryExpression	2		1285538	1					
ANR	1285875	Identifier	vertex		1285538	1					
ANR	1285876	Identifier	p		1285538	1					
ANR	1285877	Identifier	y		1285538	1					
ANR	1285878	PrimaryExpression	1		1285538	1					
ANR	1285879	IdentifierDeclStatement	fixed d30x = ( curve [ 0 ] . vertex . p . x - curve [ 3 ] . vertex . p . x ) >> 1 ;	4119:8:157647:157708	1285538	8	True				
ANR	1285880	IdentifierDecl	d30x = ( curve [ 0 ] . vertex . p . x - curve [ 3 ] . vertex . p . x ) >> 1		1285538	0					
ANR	1285881	IdentifierDeclType	fixed		1285538	0					
ANR	1285882	Identifier	d30x		1285538	1					
ANR	1285883	AssignmentExpression	d30x = ( curve [ 0 ] . vertex . p . x - curve [ 3 ] . vertex . p . x ) >> 1		1285538	2		=			
ANR	1285884	Identifier	d30x		1285538	0					
ANR	1285885	ShiftExpression	( curve [ 0 ] . vertex . p . x - curve [ 3 ] . vertex . p . x ) >> 1		1285538	1		>>			
ANR	1285886	AdditiveExpression	curve [ 0 ] . vertex . p . x - curve [ 3 ] . vertex . p . x		1285538	0		-			
ANR	1285887	MemberAccess	curve [ 0 ] . vertex . p . x		1285538	0					
ANR	1285888	MemberAccess	curve [ 0 ] . vertex . p		1285538	0					
ANR	1285889	MemberAccess	curve [ 0 ] . vertex		1285538	0					
ANR	1285890	ArrayIndexing	curve [ 0 ]		1285538	0					
ANR	1285891	Identifier	curve		1285538	0					
ANR	1285892	PrimaryExpression	0		1285538	1					
ANR	1285893	Identifier	vertex		1285538	1					
ANR	1285894	Identifier	p		1285538	1					
ANR	1285895	Identifier	x		1285538	1					
ANR	1285896	MemberAccess	curve [ 3 ] . vertex . p . x		1285538	1					
ANR	1285897	MemberAccess	curve [ 3 ] . vertex . p		1285538	0					
ANR	1285898	MemberAccess	curve [ 3 ] . vertex		1285538	0					
ANR	1285899	ArrayIndexing	curve [ 3 ]		1285538	0					
ANR	1285900	Identifier	curve		1285538	0					
ANR	1285901	PrimaryExpression	3		1285538	1					
ANR	1285902	Identifier	vertex		1285538	1					
ANR	1285903	Identifier	p		1285538	1					
ANR	1285904	Identifier	x		1285538	1					
ANR	1285905	PrimaryExpression	1		1285538	1					
ANR	1285906	IdentifierDeclStatement	fixed d30y = ( curve [ 0 ] . vertex . p . y - curve [ 3 ] . vertex . p . y ) >> 1 ;	4120:8:157718:157779	1285538	9	True				
ANR	1285907	IdentifierDecl	d30y = ( curve [ 0 ] . vertex . p . y - curve [ 3 ] . vertex . p . y ) >> 1		1285538	0					
ANR	1285908	IdentifierDeclType	fixed		1285538	0					
ANR	1285909	Identifier	d30y		1285538	1					
ANR	1285910	AssignmentExpression	d30y = ( curve [ 0 ] . vertex . p . y - curve [ 3 ] . vertex . p . y ) >> 1		1285538	2		=			
ANR	1285911	Identifier	d30y		1285538	0					
ANR	1285912	ShiftExpression	( curve [ 0 ] . vertex . p . y - curve [ 3 ] . vertex . p . y ) >> 1		1285538	1		>>			
ANR	1285913	AdditiveExpression	curve [ 0 ] . vertex . p . y - curve [ 3 ] . vertex . p . y		1285538	0		-			
ANR	1285914	MemberAccess	curve [ 0 ] . vertex . p . y		1285538	0					
ANR	1285915	MemberAccess	curve [ 0 ] . vertex . p		1285538	0					
ANR	1285916	MemberAccess	curve [ 0 ] . vertex		1285538	0					
ANR	1285917	ArrayIndexing	curve [ 0 ]		1285538	0					
ANR	1285918	Identifier	curve		1285538	0					
ANR	1285919	PrimaryExpression	0		1285538	1					
ANR	1285920	Identifier	vertex		1285538	1					
ANR	1285921	Identifier	p		1285538	1					
ANR	1285922	Identifier	y		1285538	1					
ANR	1285923	MemberAccess	curve [ 3 ] . vertex . p . y		1285538	1					
ANR	1285924	MemberAccess	curve [ 3 ] . vertex . p		1285538	0					
ANR	1285925	MemberAccess	curve [ 3 ] . vertex		1285538	0					
ANR	1285926	ArrayIndexing	curve [ 3 ]		1285538	0					
ANR	1285927	Identifier	curve		1285538	0					
ANR	1285928	PrimaryExpression	3		1285538	1					
ANR	1285929	Identifier	vertex		1285538	1					
ANR	1285930	Identifier	p		1285538	1					
ANR	1285931	Identifier	y		1285538	1					
ANR	1285932	PrimaryExpression	1		1285538	1					
ANR	1285933	IdentifierDeclStatement	int64_t s1 = ( int64_t ) d01x * d12y - ( int64_t ) d01y * d12x ;	4121:8:157789:157845	1285538	10	True				
ANR	1285934	IdentifierDecl	s1 = ( int64_t ) d01x * d12y - ( int64_t ) d01y * d12x		1285538	0					
ANR	1285935	IdentifierDeclType	int64_t		1285538	0					
ANR	1285936	Identifier	s1		1285538	1					
ANR	1285937	AssignmentExpression	s1 = ( int64_t ) d01x * d12y - ( int64_t ) d01y * d12x		1285538	2		=			
ANR	1285938	Identifier	s1		1285538	0					
ANR	1285939	AdditiveExpression	( int64_t ) d01x * d12y - ( int64_t ) d01y * d12x		1285538	1		-			
ANR	1285940	MultiplicativeExpression	( int64_t ) d01x * d12y		1285538	0		*			
ANR	1285941	CastExpression	( int64_t ) d01x		1285538	0					
ANR	1285942	CastTarget	int64_t		1285538	0					
ANR	1285943	Identifier	d01x		1285538	1					
ANR	1285944	Identifier	d12y		1285538	1					
ANR	1285945	MultiplicativeExpression	( int64_t ) d01y * d12x		1285538	1		*			
ANR	1285946	CastExpression	( int64_t ) d01y		1285538	0					
ANR	1285947	CastTarget	int64_t		1285538	0					
ANR	1285948	Identifier	d01y		1285538	1					
ANR	1285949	Identifier	d12x		1285538	1					
ANR	1285950	IdentifierDeclStatement	int64_t s2 = ( int64_t ) d23x * d30y - ( int64_t ) d23y * d30x ;	4122:8:157855:157911	1285538	11	True				
ANR	1285951	IdentifierDecl	s2 = ( int64_t ) d23x * d30y - ( int64_t ) d23y * d30x		1285538	0					
ANR	1285952	IdentifierDeclType	int64_t		1285538	0					
ANR	1285953	Identifier	s2		1285538	1					
ANR	1285954	AssignmentExpression	s2 = ( int64_t ) d23x * d30y - ( int64_t ) d23y * d30x		1285538	2		=			
ANR	1285955	Identifier	s2		1285538	0					
ANR	1285956	AdditiveExpression	( int64_t ) d23x * d30y - ( int64_t ) d23y * d30x		1285538	1		-			
ANR	1285957	MultiplicativeExpression	( int64_t ) d23x * d30y		1285538	0		*			
ANR	1285958	CastExpression	( int64_t ) d23x		1285538	0					
ANR	1285959	CastTarget	int64_t		1285538	0					
ANR	1285960	Identifier	d23x		1285538	1					
ANR	1285961	Identifier	d30y		1285538	1					
ANR	1285962	MultiplicativeExpression	( int64_t ) d23y * d30x		1285538	1		*			
ANR	1285963	CastExpression	( int64_t ) d23y		1285538	0					
ANR	1285964	CastTarget	int64_t		1285538	0					
ANR	1285965	Identifier	d23y		1285538	1					
ANR	1285966	Identifier	d30x		1285538	1					
ANR	1285967	IdentifierDeclStatement	"int s = ( s1 + s2 > 0 ? 1 : 3 ) , i , j , k , jj , l = ( s == 1 ? 0 : 1 ) ;"	4123:8:157921:157985	1285538	12	True				
ANR	1285968	IdentifierDecl	s = ( s1 + s2 > 0 ? 1 : 3 )		1285538	0					
ANR	1285969	IdentifierDeclType	int		1285538	0					
ANR	1285970	Identifier	s		1285538	1					
ANR	1285971	AssignmentExpression	s = ( s1 + s2 > 0 ? 1 : 3 )		1285538	2		=			
ANR	1285972	Identifier	s		1285538	0					
ANR	1285973	ConditionalExpression	s1 + s2 > 0 ? 1 : 3		1285538	1					
ANR	1285974	Condition	s1 + s2 > 0		1285538	0					
ANR	1285975	RelationalExpression	s1 + s2 > 0		1285538	0		>			
ANR	1285976	AdditiveExpression	s1 + s2		1285538	0		+			
ANR	1285977	Identifier	s1		1285538	0					
ANR	1285978	Identifier	s2		1285538	1					
ANR	1285979	PrimaryExpression	0		1285538	1					
ANR	1285980	PrimaryExpression	1		1285538	1					
ANR	1285981	PrimaryExpression	3		1285538	2					
ANR	1285982	IdentifierDecl	i		1285538	1					
ANR	1285983	IdentifierDeclType	int		1285538	0					
ANR	1285984	Identifier	i		1285538	1					
ANR	1285985	IdentifierDecl	j		1285538	2					
ANR	1285986	IdentifierDeclType	int		1285538	0					
ANR	1285987	Identifier	j		1285538	1					
ANR	1285988	IdentifierDecl	k		1285538	3					
ANR	1285989	IdentifierDeclType	int		1285538	0					
ANR	1285990	Identifier	k		1285538	1					
ANR	1285991	IdentifierDecl	jj		1285538	4					
ANR	1285992	IdentifierDeclType	int		1285538	0					
ANR	1285993	Identifier	jj		1285538	1					
ANR	1285994	IdentifierDecl	l = ( s == 1 ? 0 : 1 )		1285538	5					
ANR	1285995	IdentifierDeclType	int		1285538	0					
ANR	1285996	Identifier	l		1285538	1					
ANR	1285997	AssignmentExpression	l = ( s == 1 ? 0 : 1 )		1285538	2		=			
ANR	1285998	Identifier	l		1285538	0					
ANR	1285999	ConditionalExpression	s == 1 ? 0 : 1		1285538	1					
ANR	1286000	Condition	s == 1		1285538	0					
ANR	1286001	EqualityExpression	s == 1		1285538	0		==			
ANR	1286002	Identifier	s		1285538	0					
ANR	1286003	PrimaryExpression	1		1285538	1					
ANR	1286004	PrimaryExpression	0		1285538	1					
ANR	1286005	PrimaryExpression	1		1285538	2					
ANR	1286006	ExpressionStatement	"gx_path_init_local ( & path , pdev -> memory )"	4125:8:157996:158035	1285538	13	True				
ANR	1286007	CallExpression	"gx_path_init_local ( & path , pdev -> memory )"		1285538	0					
ANR	1286008	Callee	gx_path_init_local		1285538	0					
ANR	1286009	Identifier	gx_path_init_local		1285538	0					
ANR	1286010	ArgumentList	& path		1285538	1					
ANR	1286011	Argument	& path		1285538	0					
ANR	1286012	UnaryOperationExpression	& path		1285538	0					
ANR	1286013	UnaryOperator	&		1285538	0					
ANR	1286014	Identifier	path		1285538	1					
ANR	1286015	Argument	pdev -> memory		1285538	1					
ANR	1286016	PtrMemberAccess	pdev -> memory		1285538	0					
ANR	1286017	Identifier	pdev		1285538	0					
ANR	1286018	Identifier	memory		1285538	1					
ANR	1286019	IfStatement	if ( is_x_bended ( & p ) || is_y_bended ( & p ) )		1285538	14					
ANR	1286020	Condition	is_x_bended ( & p ) || is_y_bended ( & p )	4126:12:158049:158082	1285538	0	True				
ANR	1286021	OrExpression	is_x_bended ( & p ) || is_y_bended ( & p )		1285538	0		||			
ANR	1286022	CallExpression	is_x_bended ( & p )		1285538	0					
ANR	1286023	Callee	is_x_bended		1285538	0					
ANR	1286024	Identifier	is_x_bended		1285538	0					
ANR	1286025	ArgumentList	& p		1285538	1					
ANR	1286026	Argument	& p		1285538	0					
ANR	1286027	UnaryOperationExpression	& p		1285538	0					
ANR	1286028	UnaryOperator	&		1285538	0					
ANR	1286029	Identifier	p		1285538	1					
ANR	1286030	CallExpression	is_y_bended ( & p )		1285538	1					
ANR	1286031	Callee	is_y_bended		1285538	0					
ANR	1286032	Identifier	is_y_bended		1285538	0					
ANR	1286033	ArgumentList	& p		1285538	1					
ANR	1286034	Argument	& p		1285538	0					
ANR	1286035	UnaryOperationExpression	& p		1285538	0					
ANR	1286036	UnaryOperator	&		1285538	0					
ANR	1286037	Identifier	p		1285538	1					
ANR	1286038	CompoundStatement		42:48:1847:1847	1285538	1					
ANR	1286039	ElseStatement	else		1285538	0					
ANR	1286040	CompoundStatement		47:15:2117:2117	1285538	0					
ANR	1286041	ExpressionStatement	"code = gx_path_add_point ( & path , curve [ 0 ] . vertex . p . x , curve [ 0 ] . vertex . p . y )"	4132:12:158369:158442	1285538	0	True				
ANR	1286042	AssignmentExpression	"code = gx_path_add_point ( & path , curve [ 0 ] . vertex . p . x , curve [ 0 ] . vertex . p . y )"		1285538	0		=			
ANR	1286043	Identifier	code		1285538	0					
ANR	1286044	CallExpression	"gx_path_add_point ( & path , curve [ 0 ] . vertex . p . x , curve [ 0 ] . vertex . p . y )"		1285538	1					
ANR	1286045	Callee	gx_path_add_point		1285538	0					
ANR	1286046	Identifier	gx_path_add_point		1285538	0					
ANR	1286047	ArgumentList	& path		1285538	1					
ANR	1286048	Argument	& path		1285538	0					
ANR	1286049	UnaryOperationExpression	& path		1285538	0					
ANR	1286050	UnaryOperator	&		1285538	0					
ANR	1286051	Identifier	path		1285538	1					
ANR	1286052	Argument	curve [ 0 ] . vertex . p . x		1285538	1					
ANR	1286053	MemberAccess	curve [ 0 ] . vertex . p . x		1285538	0					
ANR	1286054	MemberAccess	curve [ 0 ] . vertex . p		1285538	0					
ANR	1286055	MemberAccess	curve [ 0 ] . vertex		1285538	0					
ANR	1286056	ArrayIndexing	curve [ 0 ]		1285538	0					
ANR	1286057	Identifier	curve		1285538	0					
ANR	1286058	PrimaryExpression	0		1285538	1					
ANR	1286059	Identifier	vertex		1285538	1					
ANR	1286060	Identifier	p		1285538	1					
ANR	1286061	Identifier	x		1285538	1					
ANR	1286062	Argument	curve [ 0 ] . vertex . p . y		1285538	2					
ANR	1286063	MemberAccess	curve [ 0 ] . vertex . p . y		1285538	0					
ANR	1286064	MemberAccess	curve [ 0 ] . vertex . p		1285538	0					
ANR	1286065	MemberAccess	curve [ 0 ] . vertex		1285538	0					
ANR	1286066	ArrayIndexing	curve [ 0 ]		1285538	0					
ANR	1286067	Identifier	curve		1285538	0					
ANR	1286068	PrimaryExpression	0		1285538	1					
ANR	1286069	Identifier	vertex		1285538	1					
ANR	1286070	Identifier	p		1285538	1					
ANR	1286071	Identifier	y		1285538	1					
ANR	1286072	ForStatement	"for ( i = k = 0 ; k < 4 && code >= 0 ; i = j , k ++ )"		1285538	1					
ANR	1286073	ForInit	i = k = 0 ;	4133:17:158461:158470	1285538	0	True				
ANR	1286074	AssignmentExpression	i = k = 0		1285538	0		=			
ANR	1286075	Identifier	i		1285538	0					
ANR	1286076	AssignmentExpression	k = 0		1285538	1		=			
ANR	1286077	Identifier	k		1285538	0					
ANR	1286078	PrimaryExpression	0		1285538	1					
ANR	1286079	Condition	k < 4 && code >= 0	4133:28:158472:158489	1285538	1	True				
ANR	1286080	AndExpression	k < 4 && code >= 0		1285538	0		&&			
ANR	1286081	RelationalExpression	k < 4		1285538	0		<			
ANR	1286082	Identifier	k		1285538	0					
ANR	1286083	PrimaryExpression	4		1285538	1					
ANR	1286084	RelationalExpression	code >= 0		1285538	1		>=			
ANR	1286085	Identifier	code		1285538	0					
ANR	1286086	PrimaryExpression	0		1285538	1					
ANR	1286087	Expression	"i = j , k ++"	4133:48:158492:158501	1285538	2	True				
ANR	1286088	AssignmentExpression	i = j		1285538	0		=			
ANR	1286089	Identifier	i		1285538	0					
ANR	1286090	Identifier	j		1285538	1					
ANR	1286091	PostIncDecOperationExpression	k ++		1285538	1					
ANR	1286092	Identifier	k		1285538	0					
ANR	1286093	IncDec	++		1285538	1					
ANR	1286094	CompoundStatement		49:60:2266:2266	1285538	3					
ANR	1286095	ExpressionStatement	"j = ( i + s ) % 4 , jj = ( s == 1 ? i : j )"	4134:16:158522:158560	1285538	0	True				
ANR	1286096	Expression	"j = ( i + s ) % 4 , jj = ( s == 1 ? i : j )"		1285538	0					
ANR	1286097	AssignmentExpression	j = ( i + s ) % 4		1285538	0		=			
ANR	1286098	Identifier	j		1285538	0					
ANR	1286099	MultiplicativeExpression	( i + s ) % 4		1285538	1		%			
ANR	1286100	AdditiveExpression	i + s		1285538	0		+			
ANR	1286101	Identifier	i		1285538	0					
ANR	1286102	Identifier	s		1285538	1					
ANR	1286103	PrimaryExpression	4		1285538	1					
ANR	1286104	AssignmentExpression	jj = ( s == 1 ? i : j )		1285538	1		=			
ANR	1286105	Identifier	jj		1285538	0					
ANR	1286106	ConditionalExpression	s == 1 ? i : j		1285538	1					
ANR	1286107	Condition	s == 1		1285538	0					
ANR	1286108	EqualityExpression	s == 1		1285538	0		==			
ANR	1286109	Identifier	s		1285538	0					
ANR	1286110	PrimaryExpression	1		1285538	1					
ANR	1286111	Identifier	i		1285538	1					
ANR	1286112	Identifier	j		1285538	2					
ANR	1286113	IfStatement	if ( curve [ jj ] . straight )		1285538	1					
ANR	1286114	Condition	curve [ jj ] . straight	4135:20:158582:158599	1285538	0	True				
ANR	1286115	MemberAccess	curve [ jj ] . straight		1285538	0					
ANR	1286116	ArrayIndexing	curve [ jj ]		1285538	0					
ANR	1286117	Identifier	curve		1285538	0					
ANR	1286118	Identifier	jj		1285538	1					
ANR	1286119	Identifier	straight		1285538	1					
ANR	1286120	ExpressionStatement	"code = gx_path_add_line ( & path , curve [ j ] . vertex . p . x , curve [ j ] . vertex . p . y )"	4136:20:158622:158742	1285538	1	True				
ANR	1286121	AssignmentExpression	"code = gx_path_add_line ( & path , curve [ j ] . vertex . p . x , curve [ j ] . vertex . p . y )"		1285538	0		=			
ANR	1286122	Identifier	code		1285538	0					
ANR	1286123	CallExpression	"gx_path_add_line ( & path , curve [ j ] . vertex . p . x , curve [ j ] . vertex . p . y )"		1285538	1					
ANR	1286124	Callee	gx_path_add_line		1285538	0					
ANR	1286125	Identifier	gx_path_add_line		1285538	0					
ANR	1286126	ArgumentList	& path		1285538	1					
ANR	1286127	Argument	& path		1285538	0					
ANR	1286128	UnaryOperationExpression	& path		1285538	0					
ANR	1286129	UnaryOperator	&		1285538	0					
ANR	1286130	Identifier	path		1285538	1					
ANR	1286131	Argument	curve [ j ] . vertex . p . x		1285538	1					
ANR	1286132	MemberAccess	curve [ j ] . vertex . p . x		1285538	0					
ANR	1286133	MemberAccess	curve [ j ] . vertex . p		1285538	0					
ANR	1286134	MemberAccess	curve [ j ] . vertex		1285538	0					
ANR	1286135	ArrayIndexing	curve [ j ]		1285538	0					
ANR	1286136	Identifier	curve		1285538	0					
ANR	1286137	Identifier	j		1285538	1					
ANR	1286138	Identifier	vertex		1285538	1					
ANR	1286139	Identifier	p		1285538	1					
ANR	1286140	Identifier	x		1285538	1					
ANR	1286141	Argument	curve [ j ] . vertex . p . y		1285538	2					
ANR	1286142	MemberAccess	curve [ j ] . vertex . p . y		1285538	0					
ANR	1286143	MemberAccess	curve [ j ] . vertex . p		1285538	0					
ANR	1286144	MemberAccess	curve [ j ] . vertex		1285538	0					
ANR	1286145	ArrayIndexing	curve [ j ]		1285538	0					
ANR	1286146	Identifier	curve		1285538	0					
ANR	1286147	Identifier	j		1285538	1					
ANR	1286148	Identifier	vertex		1285538	1					
ANR	1286149	Identifier	p		1285538	1					
ANR	1286150	Identifier	y		1285538	1					
ANR	1286151	ElseStatement	else		1285538	0					
ANR	1286152	ExpressionStatement	"code = gx_path_add_curve ( & path , curve [ jj ] . control [ l ] . x , curve [ jj ] . control [ l ] . y , curve [ jj ] . control [ ( l + 1 ) & 1 ] . x , curve [ jj ] . control [ ( l + 1 ) & 1 ] . y , curve [ j ] . vertex . p . x , curve [ j ] . vertex . p . y )"	4139:20:158785:159130	1285538	0	True				
ANR	1286153	AssignmentExpression	"code = gx_path_add_curve ( & path , curve [ jj ] . control [ l ] . x , curve [ jj ] . control [ l ] . y , curve [ jj ] . control [ ( l + 1 ) & 1 ] . x , curve [ jj ] . control [ ( l + 1 ) & 1 ] . y , curve [ j ] . vertex . p . x , curve [ j ] . vertex . p . y )"		1285538	0		=			
ANR	1286154	Identifier	code		1285538	0					
ANR	1286155	CallExpression	"gx_path_add_curve ( & path , curve [ jj ] . control [ l ] . x , curve [ jj ] . control [ l ] . y , curve [ jj ] . control [ ( l + 1 ) & 1 ] . x , curve [ jj ] . control [ ( l + 1 ) & 1 ] . y , curve [ j ] . vertex . p . x , curve [ j ] . vertex . p . y )"		1285538	1					
ANR	1286156	Callee	gx_path_add_curve		1285538	0					
ANR	1286157	Identifier	gx_path_add_curve		1285538	0					
ANR	1286158	ArgumentList	& path		1285538	1					
ANR	1286159	Argument	& path		1285538	0					
ANR	1286160	UnaryOperationExpression	& path		1285538	0					
ANR	1286161	UnaryOperator	&		1285538	0					
ANR	1286162	Identifier	path		1285538	1					
ANR	1286163	Argument	curve [ jj ] . control [ l ] . x		1285538	1					
ANR	1286164	MemberAccess	curve [ jj ] . control [ l ] . x		1285538	0					
ANR	1286165	ArrayIndexing	curve [ jj ] . control [ l ]		1285538	0					
ANR	1286166	MemberAccess	curve [ jj ] . control		1285538	0					
ANR	1286167	ArrayIndexing	curve [ jj ]		1285538	0					
ANR	1286168	Identifier	curve		1285538	0					
ANR	1286169	Identifier	jj		1285538	1					
ANR	1286170	Identifier	control		1285538	1					
ANR	1286171	Identifier	l		1285538	1					
ANR	1286172	Identifier	x		1285538	1					
ANR	1286173	Argument	curve [ jj ] . control [ l ] . y		1285538	2					
ANR	1286174	MemberAccess	curve [ jj ] . control [ l ] . y		1285538	0					
ANR	1286175	ArrayIndexing	curve [ jj ] . control [ l ]		1285538	0					
ANR	1286176	MemberAccess	curve [ jj ] . control		1285538	0					
ANR	1286177	ArrayIndexing	curve [ jj ]		1285538	0					
ANR	1286178	Identifier	curve		1285538	0					
ANR	1286179	Identifier	jj		1285538	1					
ANR	1286180	Identifier	control		1285538	1					
ANR	1286181	Identifier	l		1285538	1					
ANR	1286182	Identifier	y		1285538	1					
ANR	1286183	Argument	curve [ jj ] . control [ ( l + 1 ) & 1 ] . x		1285538	3					
ANR	1286184	MemberAccess	curve [ jj ] . control [ ( l + 1 ) & 1 ] . x		1285538	0					
ANR	1286185	ArrayIndexing	curve [ jj ] . control [ ( l + 1 ) & 1 ]		1285538	0					
ANR	1286186	MemberAccess	curve [ jj ] . control		1285538	0					
ANR	1286187	ArrayIndexing	curve [ jj ]		1285538	0					
ANR	1286188	Identifier	curve		1285538	0					
ANR	1286189	Identifier	jj		1285538	1					
ANR	1286190	Identifier	control		1285538	1					
ANR	1286191	BitAndExpression	( l + 1 ) & 1		1285538	1		&			
ANR	1286192	AdditiveExpression	l + 1		1285538	0		+			
ANR	1286193	Identifier	l		1285538	0					
ANR	1286194	PrimaryExpression	1		1285538	1					
ANR	1286195	PrimaryExpression	1		1285538	1					
ANR	1286196	Identifier	x		1285538	1					
ANR	1286197	Argument	curve [ jj ] . control [ ( l + 1 ) & 1 ] . y		1285538	4					
ANR	1286198	MemberAccess	curve [ jj ] . control [ ( l + 1 ) & 1 ] . y		1285538	0					
ANR	1286199	ArrayIndexing	curve [ jj ] . control [ ( l + 1 ) & 1 ]		1285538	0					
ANR	1286200	MemberAccess	curve [ jj ] . control		1285538	0					
ANR	1286201	ArrayIndexing	curve [ jj ]		1285538	0					
ANR	1286202	Identifier	curve		1285538	0					
ANR	1286203	Identifier	jj		1285538	1					
ANR	1286204	Identifier	control		1285538	1					
ANR	1286205	BitAndExpression	( l + 1 ) & 1		1285538	1		&			
ANR	1286206	AdditiveExpression	l + 1		1285538	0		+			
ANR	1286207	Identifier	l		1285538	0					
ANR	1286208	PrimaryExpression	1		1285538	1					
ANR	1286209	PrimaryExpression	1		1285538	1					
ANR	1286210	Identifier	y		1285538	1					
ANR	1286211	Argument	curve [ j ] . vertex . p . x		1285538	5					
ANR	1286212	MemberAccess	curve [ j ] . vertex . p . x		1285538	0					
ANR	1286213	MemberAccess	curve [ j ] . vertex . p		1285538	0					
ANR	1286214	MemberAccess	curve [ j ] . vertex		1285538	0					
ANR	1286215	ArrayIndexing	curve [ j ]		1285538	0					
ANR	1286216	Identifier	curve		1285538	0					
ANR	1286217	Identifier	j		1285538	1					
ANR	1286218	Identifier	vertex		1285538	1					
ANR	1286219	Identifier	p		1285538	1					
ANR	1286220	Identifier	x		1285538	1					
ANR	1286221	Argument	curve [ j ] . vertex . p . y		1285538	6					
ANR	1286222	MemberAccess	curve [ j ] . vertex . p . y		1285538	0					
ANR	1286223	MemberAccess	curve [ j ] . vertex . p		1285538	0					
ANR	1286224	MemberAccess	curve [ j ] . vertex		1285538	0					
ANR	1286225	ArrayIndexing	curve [ j ]		1285538	0					
ANR	1286226	Identifier	curve		1285538	0					
ANR	1286227	Identifier	j		1285538	1					
ANR	1286228	Identifier	vertex		1285538	1					
ANR	1286229	Identifier	p		1285538	1					
ANR	1286230	Identifier	y		1285538	1					
ANR	1286231	IfStatement	if ( code >= 0 )		1285538	2					
ANR	1286232	Condition	code >= 0	4144:16:159162:159170	1285538	0	True				
ANR	1286233	RelationalExpression	code >= 0		1285538	0		>=			
ANR	1286234	Identifier	code		1285538	0					
ANR	1286235	PrimaryExpression	0		1285538	1					
ANR	1286236	ExpressionStatement	code = gx_path_close_subpath ( & path )	4145:16:159189:159224	1285538	1	True				
ANR	1286237	AssignmentExpression	code = gx_path_close_subpath ( & path )		1285538	0		=			
ANR	1286238	Identifier	code		1285538	0					
ANR	1286239	CallExpression	gx_path_close_subpath ( & path )		1285538	1					
ANR	1286240	Callee	gx_path_close_subpath		1285538	0					
ANR	1286241	Identifier	gx_path_close_subpath		1285538	0					
ANR	1286242	ArgumentList	& path		1285538	1					
ANR	1286243	Argument	& path		1285538	0					
ANR	1286244	UnaryOperationExpression	& path		1285538	0					
ANR	1286245	UnaryOperator	&		1285538	0					
ANR	1286246	Identifier	path		1285538	1					
ANR	1286247	IfStatement	if ( code >= 0 )		1285538	15					
ANR	1286248	Condition	code >= 0	4147:12:159248:159256	1285538	0	True				
ANR	1286249	RelationalExpression	code >= 0		1285538	0		>=			
ANR	1286250	Identifier	code		1285538	0					
ANR	1286251	PrimaryExpression	0		1285538	1					
ANR	1286252	ExpressionStatement	"code = ( * dev_proc ( pfs -> dev , fill_path ) ) ( pdev , NULL , & path , NULL , NULL , NULL )"	4148:12:159271:159347	1285538	1	True				
ANR	1286253	AssignmentExpression	"code = ( * dev_proc ( pfs -> dev , fill_path ) ) ( pdev , NULL , & path , NULL , NULL , NULL )"		1285538	0		=			
ANR	1286254	Identifier	code		1285538	0					
ANR	1286255	CallExpression	"( * dev_proc ( pfs -> dev , fill_path ) ) ( pdev , NULL , & path , NULL , NULL , NULL )"		1285538	1					
ANR	1286256	Callee	"* dev_proc ( pfs -> dev , fill_path )"		1285538	0					
ANR	1286257	UnaryOperationExpression	"* dev_proc ( pfs -> dev , fill_path )"		1285538	0					
ANR	1286258	UnaryOperator	*		1285538	0					
ANR	1286259	CallExpression	"dev_proc ( pfs -> dev , fill_path )"		1285538	1					
ANR	1286260	Callee	dev_proc		1285538	0					
ANR	1286261	Identifier	dev_proc		1285538	0					
ANR	1286262	ArgumentList	pfs -> dev		1285538	1					
ANR	1286263	Argument	pfs -> dev		1285538	0					
ANR	1286264	PtrMemberAccess	pfs -> dev		1285538	0					
ANR	1286265	Identifier	pfs		1285538	0					
ANR	1286266	Identifier	dev		1285538	1					
ANR	1286267	Argument	fill_path		1285538	1					
ANR	1286268	Identifier	fill_path		1285538	0					
ANR	1286269	ArgumentList	pdev		1285538	1					
ANR	1286270	Argument	pdev		1285538	0					
ANR	1286271	Identifier	pdev		1285538	0					
ANR	1286272	Argument	NULL		1285538	1					
ANR	1286273	Identifier	NULL		1285538	0					
ANR	1286274	Argument	& path		1285538	2					
ANR	1286275	UnaryOperationExpression	& path		1285538	0					
ANR	1286276	UnaryOperator	&		1285538	0					
ANR	1286277	Identifier	path		1285538	1					
ANR	1286278	Argument	NULL		1285538	3					
ANR	1286279	Identifier	NULL		1285538	0					
ANR	1286280	Argument	NULL		1285538	4					
ANR	1286281	Identifier	NULL		1285538	0					
ANR	1286282	Argument	NULL		1285538	5					
ANR	1286283	Identifier	NULL		1285538	0					
ANR	1286284	ExpressionStatement	"gx_path_free ( & path , ""patch_fill"" )"	4149:8:159357:159390	1285538	16	True				
ANR	1286285	CallExpression	"gx_path_free ( & path , ""patch_fill"" )"		1285538	0					
ANR	1286286	Callee	gx_path_free		1285538	0					
ANR	1286287	Identifier	gx_path_free		1285538	0					
ANR	1286288	ArgumentList	& path		1285538	1					
ANR	1286289	Argument	& path		1285538	0					
ANR	1286290	UnaryOperationExpression	& path		1285538	0					
ANR	1286291	UnaryOperator	&		1285538	0					
ANR	1286292	Identifier	path		1285538	1					
ANR	1286293	Argument	"""patch_fill"""		1285538	1					
ANR	1286294	PrimaryExpression	"""patch_fill"""		1285538	0					
ANR	1286295	IfStatement	if ( code < 0 )		1285538	17					
ANR	1286296	Condition	code < 0	4150:12:159404:159411	1285538	0	True				
ANR	1286297	RelationalExpression	code < 0		1285538	0		<			
ANR	1286298	Identifier	code		1285538	0					
ANR	1286299	PrimaryExpression	0		1285538	1					
ANR	1286300	GotoStatement	goto out ;	4151:12:159426:159434	1285538	1	True				
ANR	1286301	Identifier	out		1285538	0					
ANR	1286302	ExpressionStatement	"kv [ 0 ] = curve_samples ( pfs , & p . pole [ 0 ] [ 0 ] , 4 , pfs -> fixed_flat )"	4154:4:159517:159578	1285538	14	True				
ANR	1286303	AssignmentExpression	"kv [ 0 ] = curve_samples ( pfs , & p . pole [ 0 ] [ 0 ] , 4 , pfs -> fixed_flat )"		1285538	0		=			
ANR	1286304	ArrayIndexing	kv [ 0 ]		1285538	0					
ANR	1286305	Identifier	kv		1285538	0					
ANR	1286306	PrimaryExpression	0		1285538	1					
ANR	1286307	CallExpression	"curve_samples ( pfs , & p . pole [ 0 ] [ 0 ] , 4 , pfs -> fixed_flat )"		1285538	1					
ANR	1286308	Callee	curve_samples		1285538	0					
ANR	1286309	Identifier	curve_samples		1285538	0					
ANR	1286310	ArgumentList	pfs		1285538	1					
ANR	1286311	Argument	pfs		1285538	0					
ANR	1286312	Identifier	pfs		1285538	0					
ANR	1286313	Argument	& p . pole [ 0 ] [ 0 ]		1285538	1					
ANR	1286314	UnaryOperationExpression	& p . pole [ 0 ] [ 0 ]		1285538	0					
ANR	1286315	UnaryOperator	&		1285538	0					
ANR	1286316	ArrayIndexing	p . pole [ 0 ] [ 0 ]		1285538	1					
ANR	1286317	ArrayIndexing	p . pole [ 0 ]		1285538	0					
ANR	1286318	MemberAccess	p . pole		1285538	0					
ANR	1286319	Identifier	p		1285538	0					
ANR	1286320	Identifier	pole		1285538	1					
ANR	1286321	PrimaryExpression	0		1285538	1					
ANR	1286322	PrimaryExpression	0		1285538	1					
ANR	1286323	Argument	4		1285538	2					
ANR	1286324	PrimaryExpression	4		1285538	0					
ANR	1286325	Argument	pfs -> fixed_flat		1285538	3					
ANR	1286326	PtrMemberAccess	pfs -> fixed_flat		1285538	0					
ANR	1286327	Identifier	pfs		1285538	0					
ANR	1286328	Identifier	fixed_flat		1285538	1					
ANR	1286329	ExpressionStatement	"kv [ 1 ] = curve_samples ( pfs , & p . pole [ 0 ] [ 1 ] , 4 , pfs -> fixed_flat )"	4155:4:159584:159645	1285538	15	True				
ANR	1286330	AssignmentExpression	"kv [ 1 ] = curve_samples ( pfs , & p . pole [ 0 ] [ 1 ] , 4 , pfs -> fixed_flat )"		1285538	0		=			
ANR	1286331	ArrayIndexing	kv [ 1 ]		1285538	0					
ANR	1286332	Identifier	kv		1285538	0					
ANR	1286333	PrimaryExpression	1		1285538	1					
ANR	1286334	CallExpression	"curve_samples ( pfs , & p . pole [ 0 ] [ 1 ] , 4 , pfs -> fixed_flat )"		1285538	1					
ANR	1286335	Callee	curve_samples		1285538	0					
ANR	1286336	Identifier	curve_samples		1285538	0					
ANR	1286337	ArgumentList	pfs		1285538	1					
ANR	1286338	Argument	pfs		1285538	0					
ANR	1286339	Identifier	pfs		1285538	0					
ANR	1286340	Argument	& p . pole [ 0 ] [ 1 ]		1285538	1					
ANR	1286341	UnaryOperationExpression	& p . pole [ 0 ] [ 1 ]		1285538	0					
ANR	1286342	UnaryOperator	&		1285538	0					
ANR	1286343	ArrayIndexing	p . pole [ 0 ] [ 1 ]		1285538	1					
ANR	1286344	ArrayIndexing	p . pole [ 0 ]		1285538	0					
ANR	1286345	MemberAccess	p . pole		1285538	0					
ANR	1286346	Identifier	p		1285538	0					
ANR	1286347	Identifier	pole		1285538	1					
ANR	1286348	PrimaryExpression	0		1285538	1					
ANR	1286349	PrimaryExpression	1		1285538	1					
ANR	1286350	Argument	4		1285538	2					
ANR	1286351	PrimaryExpression	4		1285538	0					
ANR	1286352	Argument	pfs -> fixed_flat		1285538	3					
ANR	1286353	PtrMemberAccess	pfs -> fixed_flat		1285538	0					
ANR	1286354	Identifier	pfs		1285538	0					
ANR	1286355	Identifier	fixed_flat		1285538	1					
ANR	1286356	ExpressionStatement	"kv [ 2 ] = curve_samples ( pfs , & p . pole [ 0 ] [ 2 ] , 4 , pfs -> fixed_flat )"	4156:4:159651:159712	1285538	16	True				
ANR	1286357	AssignmentExpression	"kv [ 2 ] = curve_samples ( pfs , & p . pole [ 0 ] [ 2 ] , 4 , pfs -> fixed_flat )"		1285538	0		=			
ANR	1286358	ArrayIndexing	kv [ 2 ]		1285538	0					
ANR	1286359	Identifier	kv		1285538	0					
ANR	1286360	PrimaryExpression	2		1285538	1					
ANR	1286361	CallExpression	"curve_samples ( pfs , & p . pole [ 0 ] [ 2 ] , 4 , pfs -> fixed_flat )"		1285538	1					
ANR	1286362	Callee	curve_samples		1285538	0					
ANR	1286363	Identifier	curve_samples		1285538	0					
ANR	1286364	ArgumentList	pfs		1285538	1					
ANR	1286365	Argument	pfs		1285538	0					
ANR	1286366	Identifier	pfs		1285538	0					
ANR	1286367	Argument	& p . pole [ 0 ] [ 2 ]		1285538	1					
ANR	1286368	UnaryOperationExpression	& p . pole [ 0 ] [ 2 ]		1285538	0					
ANR	1286369	UnaryOperator	&		1285538	0					
ANR	1286370	ArrayIndexing	p . pole [ 0 ] [ 2 ]		1285538	1					
ANR	1286371	ArrayIndexing	p . pole [ 0 ]		1285538	0					
ANR	1286372	MemberAccess	p . pole		1285538	0					
ANR	1286373	Identifier	p		1285538	0					
ANR	1286374	Identifier	pole		1285538	1					
ANR	1286375	PrimaryExpression	0		1285538	1					
ANR	1286376	PrimaryExpression	2		1285538	1					
ANR	1286377	Argument	4		1285538	2					
ANR	1286378	PrimaryExpression	4		1285538	0					
ANR	1286379	Argument	pfs -> fixed_flat		1285538	3					
ANR	1286380	PtrMemberAccess	pfs -> fixed_flat		1285538	0					
ANR	1286381	Identifier	pfs		1285538	0					
ANR	1286382	Identifier	fixed_flat		1285538	1					
ANR	1286383	ExpressionStatement	"kv [ 3 ] = curve_samples ( pfs , & p . pole [ 0 ] [ 3 ] , 4 , pfs -> fixed_flat )"	4157:4:159718:159779	1285538	17	True				
ANR	1286384	AssignmentExpression	"kv [ 3 ] = curve_samples ( pfs , & p . pole [ 0 ] [ 3 ] , 4 , pfs -> fixed_flat )"		1285538	0		=			
ANR	1286385	ArrayIndexing	kv [ 3 ]		1285538	0					
ANR	1286386	Identifier	kv		1285538	0					
ANR	1286387	PrimaryExpression	3		1285538	1					
ANR	1286388	CallExpression	"curve_samples ( pfs , & p . pole [ 0 ] [ 3 ] , 4 , pfs -> fixed_flat )"		1285538	1					
ANR	1286389	Callee	curve_samples		1285538	0					
ANR	1286390	Identifier	curve_samples		1285538	0					
ANR	1286391	ArgumentList	pfs		1285538	1					
ANR	1286392	Argument	pfs		1285538	0					
ANR	1286393	Identifier	pfs		1285538	0					
ANR	1286394	Argument	& p . pole [ 0 ] [ 3 ]		1285538	1					
ANR	1286395	UnaryOperationExpression	& p . pole [ 0 ] [ 3 ]		1285538	0					
ANR	1286396	UnaryOperator	&		1285538	0					
ANR	1286397	ArrayIndexing	p . pole [ 0 ] [ 3 ]		1285538	1					
ANR	1286398	ArrayIndexing	p . pole [ 0 ]		1285538	0					
ANR	1286399	MemberAccess	p . pole		1285538	0					
ANR	1286400	Identifier	p		1285538	0					
ANR	1286401	Identifier	pole		1285538	1					
ANR	1286402	PrimaryExpression	0		1285538	1					
ANR	1286403	PrimaryExpression	3		1285538	1					
ANR	1286404	Argument	4		1285538	2					
ANR	1286405	PrimaryExpression	4		1285538	0					
ANR	1286406	Argument	pfs -> fixed_flat		1285538	3					
ANR	1286407	PtrMemberAccess	pfs -> fixed_flat		1285538	0					
ANR	1286408	Identifier	pfs		1285538	0					
ANR	1286409	Identifier	fixed_flat		1285538	1					
ANR	1286410	ExpressionStatement	"kvm = max ( max ( kv [ 0 ] , kv [ 1 ] ) , max ( kv [ 2 ] , kv [ 3 ] ) )"	4158:4:159785:159832	1285538	18	True				
ANR	1286411	AssignmentExpression	"kvm = max ( max ( kv [ 0 ] , kv [ 1 ] ) , max ( kv [ 2 ] , kv [ 3 ] ) )"		1285538	0		=			
ANR	1286412	Identifier	kvm		1285538	0					
ANR	1286413	CallExpression	"max ( max ( kv [ 0 ] , kv [ 1 ] ) , max ( kv [ 2 ] , kv [ 3 ] ) )"		1285538	1					
ANR	1286414	Callee	max		1285538	0					
ANR	1286415	Identifier	max		1285538	0					
ANR	1286416	ArgumentList	"max ( kv [ 0 ] , kv [ 1 ] )"		1285538	1					
ANR	1286417	Argument	"max ( kv [ 0 ] , kv [ 1 ] )"		1285538	0					
ANR	1286418	CallExpression	"max ( kv [ 0 ] , kv [ 1 ] )"		1285538	0					
ANR	1286419	Callee	max		1285538	0					
ANR	1286420	Identifier	max		1285538	0					
ANR	1286421	ArgumentList	kv [ 0 ]		1285538	1					
ANR	1286422	Argument	kv [ 0 ]		1285538	0					
ANR	1286423	ArrayIndexing	kv [ 0 ]		1285538	0					
ANR	1286424	Identifier	kv		1285538	0					
ANR	1286425	PrimaryExpression	0		1285538	1					
ANR	1286426	Argument	kv [ 1 ]		1285538	1					
ANR	1286427	ArrayIndexing	kv [ 1 ]		1285538	0					
ANR	1286428	Identifier	kv		1285538	0					
ANR	1286429	PrimaryExpression	1		1285538	1					
ANR	1286430	Argument	"max ( kv [ 2 ] , kv [ 3 ] )"		1285538	1					
ANR	1286431	CallExpression	"max ( kv [ 2 ] , kv [ 3 ] )"		1285538	0					
ANR	1286432	Callee	max		1285538	0					
ANR	1286433	Identifier	max		1285538	0					
ANR	1286434	ArgumentList	kv [ 2 ]		1285538	1					
ANR	1286435	Argument	kv [ 2 ]		1285538	0					
ANR	1286436	ArrayIndexing	kv [ 2 ]		1285538	0					
ANR	1286437	Identifier	kv		1285538	0					
ANR	1286438	PrimaryExpression	2		1285538	1					
ANR	1286439	Argument	kv [ 3 ]		1285538	1					
ANR	1286440	ArrayIndexing	kv [ 3 ]		1285538	0					
ANR	1286441	Identifier	kv		1285538	0					
ANR	1286442	PrimaryExpression	3		1285538	1					
ANR	1286443	ExpressionStatement	"ku [ 0 ] = curve_samples ( pfs , p . pole [ 0 ] , 1 , pfs -> fixed_flat )"	4159:4:159838:159895	1285538	19	True				
ANR	1286444	AssignmentExpression	"ku [ 0 ] = curve_samples ( pfs , p . pole [ 0 ] , 1 , pfs -> fixed_flat )"		1285538	0		=			
ANR	1286445	ArrayIndexing	ku [ 0 ]		1285538	0					
ANR	1286446	Identifier	ku		1285538	0					
ANR	1286447	PrimaryExpression	0		1285538	1					
ANR	1286448	CallExpression	"curve_samples ( pfs , p . pole [ 0 ] , 1 , pfs -> fixed_flat )"		1285538	1					
ANR	1286449	Callee	curve_samples		1285538	0					
ANR	1286450	Identifier	curve_samples		1285538	0					
ANR	1286451	ArgumentList	pfs		1285538	1					
ANR	1286452	Argument	pfs		1285538	0					
ANR	1286453	Identifier	pfs		1285538	0					
ANR	1286454	Argument	p . pole [ 0 ]		1285538	1					
ANR	1286455	ArrayIndexing	p . pole [ 0 ]		1285538	0					
ANR	1286456	MemberAccess	p . pole		1285538	0					
ANR	1286457	Identifier	p		1285538	0					
ANR	1286458	Identifier	pole		1285538	1					
ANR	1286459	PrimaryExpression	0		1285538	1					
ANR	1286460	Argument	1		1285538	2					
ANR	1286461	PrimaryExpression	1		1285538	0					
ANR	1286462	Argument	pfs -> fixed_flat		1285538	3					
ANR	1286463	PtrMemberAccess	pfs -> fixed_flat		1285538	0					
ANR	1286464	Identifier	pfs		1285538	0					
ANR	1286465	Identifier	fixed_flat		1285538	1					
ANR	1286466	ExpressionStatement	"ku [ 1 ] = curve_samples ( pfs , p . pole [ 1 ] , 1 , pfs -> fixed_flat )"	4160:4:159901:159958	1285538	20	True				
ANR	1286467	AssignmentExpression	"ku [ 1 ] = curve_samples ( pfs , p . pole [ 1 ] , 1 , pfs -> fixed_flat )"		1285538	0		=			
ANR	1286468	ArrayIndexing	ku [ 1 ]		1285538	0					
ANR	1286469	Identifier	ku		1285538	0					
ANR	1286470	PrimaryExpression	1		1285538	1					
ANR	1286471	CallExpression	"curve_samples ( pfs , p . pole [ 1 ] , 1 , pfs -> fixed_flat )"		1285538	1					
ANR	1286472	Callee	curve_samples		1285538	0					
ANR	1286473	Identifier	curve_samples		1285538	0					
ANR	1286474	ArgumentList	pfs		1285538	1					
ANR	1286475	Argument	pfs		1285538	0					
ANR	1286476	Identifier	pfs		1285538	0					
ANR	1286477	Argument	p . pole [ 1 ]		1285538	1					
ANR	1286478	ArrayIndexing	p . pole [ 1 ]		1285538	0					
ANR	1286479	MemberAccess	p . pole		1285538	0					
ANR	1286480	Identifier	p		1285538	0					
ANR	1286481	Identifier	pole		1285538	1					
ANR	1286482	PrimaryExpression	1		1285538	1					
ANR	1286483	Argument	1		1285538	2					
ANR	1286484	PrimaryExpression	1		1285538	0					
ANR	1286485	Argument	pfs -> fixed_flat		1285538	3					
ANR	1286486	PtrMemberAccess	pfs -> fixed_flat		1285538	0					
ANR	1286487	Identifier	pfs		1285538	0					
ANR	1286488	Identifier	fixed_flat		1285538	1					
ANR	1286489	ExpressionStatement	"ku [ 2 ] = curve_samples ( pfs , p . pole [ 2 ] , 1 , pfs -> fixed_flat )"	4161:4:159964:160021	1285538	21	True				
ANR	1286490	AssignmentExpression	"ku [ 2 ] = curve_samples ( pfs , p . pole [ 2 ] , 1 , pfs -> fixed_flat )"		1285538	0		=			
ANR	1286491	ArrayIndexing	ku [ 2 ]		1285538	0					
ANR	1286492	Identifier	ku		1285538	0					
ANR	1286493	PrimaryExpression	2		1285538	1					
ANR	1286494	CallExpression	"curve_samples ( pfs , p . pole [ 2 ] , 1 , pfs -> fixed_flat )"		1285538	1					
ANR	1286495	Callee	curve_samples		1285538	0					
ANR	1286496	Identifier	curve_samples		1285538	0					
ANR	1286497	ArgumentList	pfs		1285538	1					
ANR	1286498	Argument	pfs		1285538	0					
ANR	1286499	Identifier	pfs		1285538	0					
ANR	1286500	Argument	p . pole [ 2 ]		1285538	1					
ANR	1286501	ArrayIndexing	p . pole [ 2 ]		1285538	0					
ANR	1286502	MemberAccess	p . pole		1285538	0					
ANR	1286503	Identifier	p		1285538	0					
ANR	1286504	Identifier	pole		1285538	1					
ANR	1286505	PrimaryExpression	2		1285538	1					
ANR	1286506	Argument	1		1285538	2					
ANR	1286507	PrimaryExpression	1		1285538	0					
ANR	1286508	Argument	pfs -> fixed_flat		1285538	3					
ANR	1286509	PtrMemberAccess	pfs -> fixed_flat		1285538	0					
ANR	1286510	Identifier	pfs		1285538	0					
ANR	1286511	Identifier	fixed_flat		1285538	1					
ANR	1286512	ExpressionStatement	"ku [ 3 ] = curve_samples ( pfs , p . pole [ 3 ] , 1 , pfs -> fixed_flat )"	4162:4:160027:160084	1285538	22	True				
ANR	1286513	AssignmentExpression	"ku [ 3 ] = curve_samples ( pfs , p . pole [ 3 ] , 1 , pfs -> fixed_flat )"		1285538	0		=			
ANR	1286514	ArrayIndexing	ku [ 3 ]		1285538	0					
ANR	1286515	Identifier	ku		1285538	0					
ANR	1286516	PrimaryExpression	3		1285538	1					
ANR	1286517	CallExpression	"curve_samples ( pfs , p . pole [ 3 ] , 1 , pfs -> fixed_flat )"		1285538	1					
ANR	1286518	Callee	curve_samples		1285538	0					
ANR	1286519	Identifier	curve_samples		1285538	0					
ANR	1286520	ArgumentList	pfs		1285538	1					
ANR	1286521	Argument	pfs		1285538	0					
ANR	1286522	Identifier	pfs		1285538	0					
ANR	1286523	Argument	p . pole [ 3 ]		1285538	1					
ANR	1286524	ArrayIndexing	p . pole [ 3 ]		1285538	0					
ANR	1286525	MemberAccess	p . pole		1285538	0					
ANR	1286526	Identifier	p		1285538	0					
ANR	1286527	Identifier	pole		1285538	1					
ANR	1286528	PrimaryExpression	3		1285538	1					
ANR	1286529	Argument	1		1285538	2					
ANR	1286530	PrimaryExpression	1		1285538	0					
ANR	1286531	Argument	pfs -> fixed_flat		1285538	3					
ANR	1286532	PtrMemberAccess	pfs -> fixed_flat		1285538	0					
ANR	1286533	Identifier	pfs		1285538	0					
ANR	1286534	Identifier	fixed_flat		1285538	1					
ANR	1286535	ExpressionStatement	"kum = max ( max ( ku [ 0 ] , ku [ 1 ] ) , max ( ku [ 2 ] , ku [ 3 ] ) )"	4163:4:160090:160137	1285538	23	True				
ANR	1286536	AssignmentExpression	"kum = max ( max ( ku [ 0 ] , ku [ 1 ] ) , max ( ku [ 2 ] , ku [ 3 ] ) )"		1285538	0		=			
ANR	1286537	Identifier	kum		1285538	0					
ANR	1286538	CallExpression	"max ( max ( ku [ 0 ] , ku [ 1 ] ) , max ( ku [ 2 ] , ku [ 3 ] ) )"		1285538	1					
ANR	1286539	Callee	max		1285538	0					
ANR	1286540	Identifier	max		1285538	0					
ANR	1286541	ArgumentList	"max ( ku [ 0 ] , ku [ 1 ] )"		1285538	1					
ANR	1286542	Argument	"max ( ku [ 0 ] , ku [ 1 ] )"		1285538	0					
ANR	1286543	CallExpression	"max ( ku [ 0 ] , ku [ 1 ] )"		1285538	0					
ANR	1286544	Callee	max		1285538	0					
ANR	1286545	Identifier	max		1285538	0					
ANR	1286546	ArgumentList	ku [ 0 ]		1285538	1					
ANR	1286547	Argument	ku [ 0 ]		1285538	0					
ANR	1286548	ArrayIndexing	ku [ 0 ]		1285538	0					
ANR	1286549	Identifier	ku		1285538	0					
ANR	1286550	PrimaryExpression	0		1285538	1					
ANR	1286551	Argument	ku [ 1 ]		1285538	1					
ANR	1286552	ArrayIndexing	ku [ 1 ]		1285538	0					
ANR	1286553	Identifier	ku		1285538	0					
ANR	1286554	PrimaryExpression	1		1285538	1					
ANR	1286555	Argument	"max ( ku [ 2 ] , ku [ 3 ] )"		1285538	1					
ANR	1286556	CallExpression	"max ( ku [ 2 ] , ku [ 3 ] )"		1285538	0					
ANR	1286557	Callee	max		1285538	0					
ANR	1286558	Identifier	max		1285538	0					
ANR	1286559	ArgumentList	ku [ 2 ]		1285538	1					
ANR	1286560	Argument	ku [ 2 ]		1285538	0					
ANR	1286561	ArrayIndexing	ku [ 2 ]		1285538	0					
ANR	1286562	Identifier	ku		1285538	0					
ANR	1286563	PrimaryExpression	2		1285538	1					
ANR	1286564	Argument	ku [ 3 ]		1285538	1					
ANR	1286565	ArrayIndexing	ku [ 3 ]		1285538	0					
ANR	1286566	Identifier	ku		1285538	0					
ANR	1286567	PrimaryExpression	3		1285538	1					
ANR	1286568	Statement	if	4164:4:160143:160144	1285538	24	True				
ANR	1286569	IdentifierDeclStatement	NOFILL_TEST dbg_nofill = false ;	4164:7:160146:160180	1285538	25	True				
ANR	1286570	IdentifierDecl	dbg_nofill = false		1285538	0					
ANR	1286571	IdentifierDeclType	NOFILL_TEST		1285538	0					
ANR	1286572	Identifier	dbg_nofill		1285538	1					
ANR	1286573	AssignmentExpression	dbg_nofill = false		1285538	2		=			
ANR	1286574	Identifier	false		1285538	0					
ANR	1286575	Identifier	false		1285538	1					
ANR	1286576	IdentifierDeclStatement	"endif code = fill_wedges ( pfs , ku [ 0 ] , kum , p . pole [ 0 ] , 1 , p . c [ 0 ] [ 0 ] , p . c [ 0 ] [ 1 ] , interpatch_padding | inpatch_wedge ) ;"	4166:4:160186:160311	1285538	26	True				
ANR	1286577	IdentifierDecl	"code = fill_wedges ( pfs , ku [ 0 ] , kum , p . pole [ 0 ] , 1 , p . c [ 0 ] [ 0 ] , p . c [ 0 ] [ 1 ] , interpatch_padding | inpatch_wedge )"		1285538	0					
ANR	1286578	IdentifierDeclType	endif		1285538	0					
ANR	1286579	Identifier	code		1285538	1					
ANR	1286580	AssignmentExpression	"code = fill_wedges ( pfs , ku [ 0 ] , kum , p . pole [ 0 ] , 1 , p . c [ 0 ] [ 0 ] , p . c [ 0 ] [ 1 ] , interpatch_padding | inpatch_wedge )"		1285538	2		=			
ANR	1286581	Identifier	code		1285538	0					
ANR	1286582	CallExpression	"fill_wedges ( pfs , ku [ 0 ] , kum , p . pole [ 0 ] , 1 , p . c [ 0 ] [ 0 ] , p . c [ 0 ] [ 1 ] , interpatch_padding | inpatch_wedge )"		1285538	1					
ANR	1286583	Callee	fill_wedges		1285538	0					
ANR	1286584	Identifier	fill_wedges		1285538	0					
ANR	1286585	ArgumentList	pfs		1285538	1					
ANR	1286586	Argument	pfs		1285538	0					
ANR	1286587	Identifier	pfs		1285538	0					
ANR	1286588	Argument	ku [ 0 ]		1285538	1					
ANR	1286589	ArrayIndexing	ku [ 0 ]		1285538	0					
ANR	1286590	Identifier	ku		1285538	0					
ANR	1286591	PrimaryExpression	0		1285538	1					
ANR	1286592	Argument	kum		1285538	2					
ANR	1286593	Identifier	kum		1285538	0					
ANR	1286594	Argument	p . pole [ 0 ]		1285538	3					
ANR	1286595	ArrayIndexing	p . pole [ 0 ]		1285538	0					
ANR	1286596	MemberAccess	p . pole		1285538	0					
ANR	1286597	Identifier	p		1285538	0					
ANR	1286598	Identifier	pole		1285538	1					
ANR	1286599	PrimaryExpression	0		1285538	1					
ANR	1286600	Argument	1		1285538	4					
ANR	1286601	PrimaryExpression	1		1285538	0					
ANR	1286602	Argument	p . c [ 0 ] [ 0 ]		1285538	5					
ANR	1286603	ArrayIndexing	p . c [ 0 ] [ 0 ]		1285538	0					
ANR	1286604	ArrayIndexing	p . c [ 0 ]		1285538	0					
ANR	1286605	MemberAccess	p . c		1285538	0					
ANR	1286606	Identifier	p		1285538	0					
ANR	1286607	Identifier	c		1285538	1					
ANR	1286608	PrimaryExpression	0		1285538	1					
ANR	1286609	PrimaryExpression	0		1285538	1					
ANR	1286610	Argument	p . c [ 0 ] [ 1 ]		1285538	6					
ANR	1286611	ArrayIndexing	p . c [ 0 ] [ 1 ]		1285538	0					
ANR	1286612	ArrayIndexing	p . c [ 0 ]		1285538	0					
ANR	1286613	MemberAccess	p . c		1285538	0					
ANR	1286614	Identifier	p		1285538	0					
ANR	1286615	Identifier	c		1285538	1					
ANR	1286616	PrimaryExpression	0		1285538	1					
ANR	1286617	PrimaryExpression	1		1285538	1					
ANR	1286618	Argument	interpatch_padding | inpatch_wedge		1285538	7					
ANR	1286619	InclusiveOrExpression	interpatch_padding | inpatch_wedge		1285538	0		|			
ANR	1286620	Identifier	interpatch_padding		1285538	0					
ANR	1286621	Identifier	inpatch_wedge		1285538	1					
ANR	1286622	IfStatement	if ( code >= 0 )		1285538	27					
ANR	1286623	Condition	code >= 0	4169:8:160321:160329	1285538	0	True				
ANR	1286624	RelationalExpression	code >= 0		1285538	0		>=			
ANR	1286625	Identifier	code		1285538	0					
ANR	1286626	PrimaryExpression	0		1285538	1					
ANR	1286627	CompoundStatement		96:8:4657:4720	1285538	1					
ANR	1286628	Statement	if	4176:8:160750:160751	1285538	0	True				
ANR	1286629	IdentifierDeclStatement	NOFILL_TEST dbg_nofill = false ;	4176:11:160753:160795	1285538	1	True				
ANR	1286630	IdentifierDecl	dbg_nofill = false		1285538	0					
ANR	1286631	IdentifierDeclType	NOFILL_TEST		1285538	0					
ANR	1286632	Identifier	dbg_nofill		1285538	1					
ANR	1286633	AssignmentExpression	dbg_nofill = false		1285538	2		=			
ANR	1286634	Identifier	false		1285538	0					
ANR	1286635	Identifier	false		1285538	1					
ANR	1286636	ExpressionStatement	"code = fill_patch ( pfs , & p , kvm , kv [ 0 ] , kv [ 3 ] )"	4178:12:160809:160854	1285538	2	True				
ANR	1286637	AssignmentExpression	"code = fill_patch ( pfs , & p , kvm , kv [ 0 ] , kv [ 3 ] )"		1285538	0		=			
ANR	1286638	Identifier	code		1285538	0					
ANR	1286639	CallExpression	"fill_patch ( pfs , & p , kvm , kv [ 0 ] , kv [ 3 ] )"		1285538	1					
ANR	1286640	Callee	fill_patch		1285538	0					
ANR	1286641	Identifier	fill_patch		1285538	0					
ANR	1286642	ArgumentList	pfs		1285538	1					
ANR	1286643	Argument	pfs		1285538	0					
ANR	1286644	Identifier	pfs		1285538	0					
ANR	1286645	Argument	& p		1285538	1					
ANR	1286646	UnaryOperationExpression	& p		1285538	0					
ANR	1286647	UnaryOperator	&		1285538	0					
ANR	1286648	Identifier	p		1285538	1					
ANR	1286649	Argument	kvm		1285538	2					
ANR	1286650	Identifier	kvm		1285538	0					
ANR	1286651	Argument	kv [ 0 ]		1285538	3					
ANR	1286652	ArrayIndexing	kv [ 0 ]		1285538	0					
ANR	1286653	Identifier	kv		1285538	0					
ANR	1286654	PrimaryExpression	0		1285538	1					
ANR	1286655	Argument	kv [ 3 ]		1285538	4					
ANR	1286656	ArrayIndexing	kv [ 3 ]		1285538	0					
ANR	1286657	Identifier	kv		1285538	0					
ANR	1286658	PrimaryExpression	3		1285538	1					
ANR	1286659	ExpressionStatement	dbg_nofill = true	4179:12:160868:160885	1285538	3	True				
ANR	1286660	AssignmentExpression	dbg_nofill = true		1285538	0		=			
ANR	1286661	Identifier	dbg_nofill		1285538	0					
ANR	1286662	Identifier	true		1285538	1					
ANR	1286663	IdentifierDeclStatement	"endif code = fill_patch ( pfs , & p , kvm , kv [ 0 ] , kv [ 3 ] ) ;"	4180:8:160895:160958	1285538	4	True				
ANR	1286664	IdentifierDecl	"code = fill_patch ( pfs , & p , kvm , kv [ 0 ] , kv [ 3 ] )"		1285538	0					
ANR	1286665	IdentifierDeclType	endif		1285538	0					
ANR	1286666	Identifier	code		1285538	1					
ANR	1286667	AssignmentExpression	"code = fill_patch ( pfs , & p , kvm , kv [ 0 ] , kv [ 3 ] )"		1285538	2		=			
ANR	1286668	Identifier	code		1285538	0					
ANR	1286669	CallExpression	"fill_patch ( pfs , & p , kvm , kv [ 0 ] , kv [ 3 ] )"		1285538	1					
ANR	1286670	Callee	fill_patch		1285538	0					
ANR	1286671	Identifier	fill_patch		1285538	0					
ANR	1286672	ArgumentList	pfs		1285538	1					
ANR	1286673	Argument	pfs		1285538	0					
ANR	1286674	Identifier	pfs		1285538	0					
ANR	1286675	Argument	& p		1285538	1					
ANR	1286676	UnaryOperationExpression	& p		1285538	0					
ANR	1286677	UnaryOperator	&		1285538	0					
ANR	1286678	Identifier	p		1285538	1					
ANR	1286679	Argument	kvm		1285538	2					
ANR	1286680	Identifier	kvm		1285538	0					
ANR	1286681	Argument	kv [ 0 ]		1285538	3					
ANR	1286682	ArrayIndexing	kv [ 0 ]		1285538	0					
ANR	1286683	Identifier	kv		1285538	0					
ANR	1286684	PrimaryExpression	0		1285538	1					
ANR	1286685	Argument	kv [ 3 ]		1285538	4					
ANR	1286686	ArrayIndexing	kv [ 3 ]		1285538	0					
ANR	1286687	Identifier	kv		1285538	0					
ANR	1286688	PrimaryExpression	3		1285538	1					
ANR	1286689	IfStatement	if ( code >= 0 )		1285538	28					
ANR	1286690	Condition	code >= 0	4183:8:160974:160982	1285538	0	True				
ANR	1286691	RelationalExpression	code >= 0		1285538	0		>=			
ANR	1286692	Identifier	code		1285538	0					
ANR	1286693	PrimaryExpression	0		1285538	1					
ANR	1286694	ExpressionStatement	"code = fill_wedges ( pfs , ku [ 3 ] , kum , p . pole [ 3 ] , 1 , p . c [ 1 ] [ 0 ] , p . c [ 1 ] [ 1 ] , interpatch_padding | inpatch_wedge )"	4184:8:160993:161116	1285538	1	True				
ANR	1286695	AssignmentExpression	"code = fill_wedges ( pfs , ku [ 3 ] , kum , p . pole [ 3 ] , 1 , p . c [ 1 ] [ 0 ] , p . c [ 1 ] [ 1 ] , interpatch_padding | inpatch_wedge )"		1285538	0		=			
ANR	1286696	Identifier	code		1285538	0					
ANR	1286697	CallExpression	"fill_wedges ( pfs , ku [ 3 ] , kum , p . pole [ 3 ] , 1 , p . c [ 1 ] [ 0 ] , p . c [ 1 ] [ 1 ] , interpatch_padding | inpatch_wedge )"		1285538	1					
ANR	1286698	Callee	fill_wedges		1285538	0					
ANR	1286699	Identifier	fill_wedges		1285538	0					
ANR	1286700	ArgumentList	pfs		1285538	1					
ANR	1286701	Argument	pfs		1285538	0					
ANR	1286702	Identifier	pfs		1285538	0					
ANR	1286703	Argument	ku [ 3 ]		1285538	1					
ANR	1286704	ArrayIndexing	ku [ 3 ]		1285538	0					
ANR	1286705	Identifier	ku		1285538	0					
ANR	1286706	PrimaryExpression	3		1285538	1					
ANR	1286707	Argument	kum		1285538	2					
ANR	1286708	Identifier	kum		1285538	0					
ANR	1286709	Argument	p . pole [ 3 ]		1285538	3					
ANR	1286710	ArrayIndexing	p . pole [ 3 ]		1285538	0					
ANR	1286711	MemberAccess	p . pole		1285538	0					
ANR	1286712	Identifier	p		1285538	0					
ANR	1286713	Identifier	pole		1285538	1					
ANR	1286714	PrimaryExpression	3		1285538	1					
ANR	1286715	Argument	1		1285538	4					
ANR	1286716	PrimaryExpression	1		1285538	0					
ANR	1286717	Argument	p . c [ 1 ] [ 0 ]		1285538	5					
ANR	1286718	ArrayIndexing	p . c [ 1 ] [ 0 ]		1285538	0					
ANR	1286719	ArrayIndexing	p . c [ 1 ]		1285538	0					
ANR	1286720	MemberAccess	p . c		1285538	0					
ANR	1286721	Identifier	p		1285538	0					
ANR	1286722	Identifier	c		1285538	1					
ANR	1286723	PrimaryExpression	1		1285538	1					
ANR	1286724	PrimaryExpression	0		1285538	1					
ANR	1286725	Argument	p . c [ 1 ] [ 1 ]		1285538	6					
ANR	1286726	ArrayIndexing	p . c [ 1 ] [ 1 ]		1285538	0					
ANR	1286727	ArrayIndexing	p . c [ 1 ]		1285538	0					
ANR	1286728	MemberAccess	p . c		1285538	0					
ANR	1286729	Identifier	p		1285538	0					
ANR	1286730	Identifier	c		1285538	1					
ANR	1286731	PrimaryExpression	1		1285538	1					
ANR	1286732	PrimaryExpression	1		1285538	1					
ANR	1286733	Argument	interpatch_padding | inpatch_wedge		1285538	7					
ANR	1286734	InclusiveOrExpression	interpatch_padding | inpatch_wedge		1285538	0		|			
ANR	1286735	Identifier	interpatch_padding		1285538	0					
ANR	1286736	Identifier	inpatch_wedge		1285538	1					
ANR	1286737	Label	out :	4186:0:161118:161121	1285538	29	True				
ANR	1286738	Identifier	out		1285538	0					
ANR	1286739	ExpressionStatement	"release_colors_inline ( pfs , color_stack_ptr , 4 )"	4187:4:161127:161173	1285538	30	True				
ANR	1286740	CallExpression	"release_colors_inline ( pfs , color_stack_ptr , 4 )"		1285538	0					
ANR	1286741	Callee	release_colors_inline		1285538	0					
ANR	1286742	Identifier	release_colors_inline		1285538	0					
ANR	1286743	ArgumentList	pfs		1285538	1					
ANR	1286744	Argument	pfs		1285538	0					
ANR	1286745	Identifier	pfs		1285538	0					
ANR	1286746	Argument	color_stack_ptr		1285538	1					
ANR	1286747	Identifier	color_stack_ptr		1285538	0					
ANR	1286748	Argument	4		1285538	2					
ANR	1286749	PrimaryExpression	4		1285538	0					
ANR	1286750	ReturnStatement	return code ;	4188:4:161179:161190	1285538	31	True				
ANR	1286751	Identifier	code		1285538	0					
ANR	1286752	ReturnType	int		1285538	1					
ANR	1286753	Identifier	patch_fill		1285538	2					
ANR	1286754	ParameterList	"patch_fill_state_t * pfs , const patch_curve_t curve [ 4 ] , const gs_fixed_point interior [ 4 ] , void ( * transform ) ( gs_fixed_point * , const patch_curve_t [ 4 ] , const gs_fixed_point [ 4 ] , double , double )"		1285538	3					
ANR	1286755	Parameter	patch_fill_state_t * pfs	4081:11:155993:156015	1285538	0	True				
ANR	1286756	ParameterType	patch_fill_state_t *		1285538	0					
ANR	1286757	Identifier	pfs		1285538	1					
ANR	1286758	Parameter	const patch_curve_t curve [ 4 ]	4081:36:156018:156045	1285538	1	True				
ANR	1286759	ParameterType	const patch_curve_t [ 4 ]		1285538	0					
ANR	1286760	Identifier	curve		1285538	1					
ANR	1286761	Parameter	const gs_fixed_point interior [ 4 ]	4082:11:156059:156090	1285538	2	True				
ANR	1286762	ParameterType	const gs_fixed_point [ 4 ]		1285538	0					
ANR	1286763	Identifier	interior		1285538	1					
ANR	1286764	Parameter	"void ( * transform ) ( gs_fixed_point * , const patch_curve_t [ 4 ] , const gs_fixed_point [ 4 ] , double , double )"	4083:11:156104:156234	1285538	3	True				
ANR	1286765	ParameterType	"(( gs_fixed_point * , const patch_curve_t [ 4 ] , const gs_fixed_point [ 4 ] , double , double ) void) *"		1285538	0					
ANR	1286766	Identifier	transform		1285538	1					
ANR	1286767	CFGEntryNode	ENTRY		1285538		True				
ANR	1286768	CFGExitNode	EXIT		1285538		True				
ANR	1286769	Symbol	curve [ j ] . vertex		1285538						
ANR	1286770	Symbol	dev_spec_op		1285538						
ANR	1286771	Symbol	* p . pole		1285538						
ANR	1286772	Symbol	& path		1285538						
ANR	1286773	Symbol	path		1285538						
ANR	1286774	Symbol	curve [ 0 ] . vertex . p . y		1285538						
ANR	1286775	Symbol	curve [ 0 ] . vertex . p . x		1285538						
ANR	1286776	Symbol	curve [ 2 ] . vertex		1285538						
ANR	1286777	Symbol	fill_path		1285538						
ANR	1286778	Symbol	s1		1285538						
ANR	1286779	Symbol	s2		1285538						
ANR	1286780	Symbol	fill_wedges		1285538						
ANR	1286781	Symbol	* pfs		1285538						
ANR	1286782	Symbol	gx_path_add_point		1285538						
ANR	1286783	Symbol	* * p . c		1285538						
ANR	1286784	Symbol	* kv		1285538						
ANR	1286785	Symbol	* ku		1285538						
ANR	1286786	Symbol	pfs		1285538						
ANR	1286787	Symbol	dbg_patch_cnt		1285538						
ANR	1286788	Symbol	"* dev_proc ( pfs -> dev , fill_path )"		1285538						
ANR	1286789	Symbol	pfs -> linear_color		1285538						
ANR	1286790	Symbol	pfs -> unlinear		1285538						
ANR	1286791	Symbol	"* dev_proc ( pfs -> dev , dev_spec_op )"		1285538						
ANR	1286792	Symbol	curve [ 0 ] . vertex . p		1285538						
ANR	1286793	Symbol	jj		1285538						
ANR	1286794	Symbol	curve [ 3 ] . vertex		1285538						
ANR	1286795	Symbol	kum		1285538						
ANR	1286796	Symbol	curve		1285538						
ANR	1286797	Symbol	* dev_proc		1285538						
ANR	1286798	Symbol	curve [ j ] . vertex . p		1285538						
ANR	1286799	Symbol	interior		1285538						
ANR	1286800	Symbol	* p . c		1285538						
ANR	1286801	Symbol	gx_path_add_curve		1285538						
ANR	1286802	Symbol	reserve_colors_inline		1285538						
ANR	1286803	Symbol	d23y		1285538						
ANR	1286804	Symbol	* * p		1285538						
ANR	1286805	Symbol	curve [ 2 ] . vertex . p		1285538						
ANR	1286806	Symbol	d23x		1285538						
ANR	1286807	Symbol	c		1285538						
ANR	1286808	Symbol	kvm		1285538						
ANR	1286809	Symbol	curve [ 1 ] . vertex		1285538						
ANR	1286810	Symbol	max		1285538						
ANR	1286811	Symbol	fill_patch		1285538						
ANR	1286812	Symbol	i		1285538						
ANR	1286813	Symbol	ku		1285538						
ANR	1286814	Symbol	j		1285538						
ANR	1286815	Symbol	kv		1285538						
ANR	1286816	Symbol	k		1285538						
ANR	1286817	Symbol	l		1285538						
ANR	1286818	Symbol	gxdso_pattern_shading_area		1285538						
ANR	1286819	Symbol	p		1285538						
ANR	1286820	Symbol	* curve		1285538						
ANR	1286821	Symbol	s		1285538						
ANR	1286822	Symbol	curve [ 0 ] . vertex		1285538						
ANR	1286823	Symbol	gx_path_add_line		1285538						
ANR	1286824	Symbol	p . c		1285538						
ANR	1286825	Symbol	* pdev		1285538						
ANR	1286826	Symbol	curve [ 1 ] . vertex . p		1285538						
ANR	1286827	Symbol	interpatch_padding		1285538						
ANR	1286828	Symbol	pdev		1285538						
ANR	1286829	Symbol	pdev -> memory		1285538						
ANR	1286830	Symbol	curve [ 2 ] . vertex . p . y		1285538						
ANR	1286831	Symbol	d01y		1285538						
ANR	1286832	Symbol	curve [ 2 ] . vertex . p . x		1285538						
ANR	1286833	Symbol	d01x		1285538						
ANR	1286834	Symbol	is_x_bended		1285538						
ANR	1286835	Symbol	is_y_bended		1285538						
ANR	1286836	Symbol	curve [ jj ] . control [ ( l + 1 ) & 1 ] . y		1285538						
ANR	1286837	Symbol	NULL		1285538						
ANR	1286838	Symbol	curve [ jj ] . control [ ( l + 1 ) & 1 ] . x		1285538						
ANR	1286839	Symbol	* * jj		1285538						
ANR	1286840	Symbol	is_linear_color_applicable		1285538						
ANR	1286841	Symbol	pfs -> fixed_flat		1285538						
ANR	1286842	Symbol	color_stack_ptr		1285538						
ANR	1286843	Symbol	true		1285538						
ANR	1286844	Symbol	d12y		1285538						
ANR	1286845	Symbol	d12x		1285538						
ANR	1286846	Symbol	* curve [ jj ] . control		1285538						
ANR	1286847	Symbol	code		1285538						
ANR	1286848	Symbol	curve [ j ] . vertex . p . y		1285538						
ANR	1286849	Symbol	curve [ j ] . vertex . p . x		1285538						
ANR	1286850	Symbol	gx_path_close_subpath		1285538						
ANR	1286851	Symbol	transform		1285538						
ANR	1286852	Symbol	inpatch_wedge		1285538						
ANR	1286853	Symbol	dev_proc		1285538						
ANR	1286854	Symbol	curve [ 1 ] . vertex . p . y		1285538						
ANR	1286855	Symbol	curve [ 1 ] . vertex . p . x		1285538						
ANR	1286856	Symbol	p . pole		1285538						
ANR	1286857	Symbol	curve [ 3 ] . vertex . p . y		1285538						
ANR	1286858	Symbol	curve [ 3 ] . vertex . p . x		1285538						
ANR	1286859	Symbol	curve [ 3 ] . vertex . p		1285538						
ANR	1286860	Symbol	* jj		1285538						
ANR	1286861	Symbol	false		1285538						
ANR	1286862	Symbol	* * curve		1285538						
ANR	1286863	Symbol	* c		1285538						
ANR	1286864	Symbol	pfs -> dev		1285538						
ANR	1286865	Symbol	* j		1285538						
ANR	1286866	Symbol	& p		1285538						
ANR	1286867	Symbol	d30y		1285538						
ANR	1286868	Symbol	curve [ jj ] . straight		1285538						
ANR	1286869	Symbol	* l		1285538						
ANR	1286870	Symbol	dbg_nofill		1285538						
ANR	1286871	Symbol	d30x		1285538						
ANR	1286872	Symbol	* p		1285538						
ANR	1286873	Symbol	curve_samples		1285538						
ANR	1286874	Symbol	curve [ jj ] . control [ l ] . y		1285538						
ANR	1286875	Symbol	curve [ jj ] . control		1285538						
ANR	1286876	Symbol	curve [ jj ] . control [ l ] . x		1285538						
