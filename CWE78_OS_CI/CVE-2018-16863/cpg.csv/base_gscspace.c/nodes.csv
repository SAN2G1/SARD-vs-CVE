command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	500391	File	data/converged/CVE-2018-16863_ghostpdl/base_gscspace.c								
ANR	500392	DeclStmt									
ANR	500393	Decl							const gs_color_space_type	const gs_color_space_type	gs_color_space_type_DeviceGray
ANR	500394	DeclStmt									
ANR	500395	Decl							const gs_color_space_type	const gs_color_space_type	gs_color_space_type_DeviceRGB
ANR	500396	DeclStmt									
ANR	500397	Decl							const gs_color_space_type	const gs_color_space_type	gs_color_space_type_DeviceCMYK
ANR	500398	Function	gs_cspace_final	92:0:3133:3641							
ANR	500399	FunctionDef	"gs_cspace_final (const gs_memory_t * cmem , void * vptr)"		500398	0					
ANR	500400	CompoundStatement		94:0:3198:3641	500398	0					
ANR	500401	IdentifierDeclStatement	gs_color_space * pcs = ( gs_color_space * ) vptr ;	95:4:3204:3248	500398	0	True				
ANR	500402	IdentifierDecl	* pcs = ( gs_color_space * ) vptr		500398	0					
ANR	500403	IdentifierDeclType	gs_color_space *		500398	0					
ANR	500404	Identifier	pcs		500398	1					
ANR	500405	AssignmentExpression	* pcs = ( gs_color_space * ) vptr		500398	2		=			
ANR	500406	Identifier	pcs		500398	0					
ANR	500407	CastExpression	( gs_color_space * ) vptr		500398	1					
ANR	500408	CastTarget	gs_color_space *		500398	0					
ANR	500409	Identifier	vptr		500398	1					
ANR	500410	ExpressionStatement	( void ) cmem	96:4:3254:3264	500398	1	True				
ANR	500411	CastExpression	( void ) cmem		500398	0					
ANR	500412	CastTarget	void		500398	0					
ANR	500413	Identifier	cmem		500398	1					
ANR	500414	IfStatement	if ( pcs -> type -> final )		500398	2					
ANR	500415	Condition	pcs -> type -> final	98:8:3288:3303	500398	0	True				
ANR	500416	PtrMemberAccess	pcs -> type -> final		500398	0					
ANR	500417	PtrMemberAccess	pcs -> type		500398	0					
ANR	500418	Identifier	pcs		500398	0					
ANR	500419	Identifier	type		500398	1					
ANR	500420	Identifier	final		500398	1					
ANR	500421	ExpressionStatement	pcs -> type -> final ( pcs )	99:8:3314:3335	500398	1	True				
ANR	500422	CallExpression	pcs -> type -> final ( pcs )		500398	0					
ANR	500423	Callee	pcs -> type -> final		500398	0					
ANR	500424	PtrMemberAccess	pcs -> type -> final		500398	0					
ANR	500425	PtrMemberAccess	pcs -> type		500398	0					
ANR	500426	Identifier	pcs		500398	0					
ANR	500427	Identifier	type		500398	1					
ANR	500428	Identifier	final		500398	1					
ANR	500429	ArgumentList	pcs		500398	1					
ANR	500430	Argument	pcs		500398	0					
ANR	500431	Identifier	pcs		500398	0					
ANR	500432	ExpressionStatement	"if_debug2m ( 'c' , cmem , ""[c]cspace final %p %d\\n"" , pcs , ( int ) pcs -> id )"	100:4:3341:3408	500398	3	True				
ANR	500433	CallExpression	"if_debug2m ( 'c' , cmem , ""[c]cspace final %p %d\\n"" , pcs , ( int ) pcs -> id )"		500398	0					
ANR	500434	Callee	if_debug2m		500398	0					
ANR	500435	Identifier	if_debug2m		500398	0					
ANR	500436	ArgumentList	'c'		500398	1					
ANR	500437	Argument	'c'		500398	0					
ANR	500438	PrimaryExpression	'c'		500398	0					
ANR	500439	Argument	cmem		500398	1					
ANR	500440	Identifier	cmem		500398	0					
ANR	500441	Argument	"""[c]cspace final %p %d\\n"""		500398	2					
ANR	500442	PrimaryExpression	"""[c]cspace final %p %d\\n"""		500398	0					
ANR	500443	Argument	pcs		500398	3					
ANR	500444	Identifier	pcs		500398	0					
ANR	500445	Argument	( int ) pcs -> id		500398	4					
ANR	500446	CastExpression	( int ) pcs -> id		500398	0					
ANR	500447	CastTarget	int		500398	0					
ANR	500448	PtrMemberAccess	pcs -> id		500398	1					
ANR	500449	Identifier	pcs		500398	0					
ANR	500450	Identifier	id		500398	1					
ANR	500451	ExpressionStatement	"rc_decrement_only_cs ( pcs -> base_space , ""gs_cspace_final"" )"	101:4:3414:3470	500398	4	True				
ANR	500452	CallExpression	"rc_decrement_only_cs ( pcs -> base_space , ""gs_cspace_final"" )"		500398	0					
ANR	500453	Callee	rc_decrement_only_cs		500398	0					
ANR	500454	Identifier	rc_decrement_only_cs		500398	0					
ANR	500455	ArgumentList	pcs -> base_space		500398	1					
ANR	500456	Argument	pcs -> base_space		500398	0					
ANR	500457	PtrMemberAccess	pcs -> base_space		500398	0					
ANR	500458	Identifier	pcs		500398	0					
ANR	500459	Identifier	base_space		500398	1					
ANR	500460	Argument	"""gs_cspace_final"""		500398	1					
ANR	500461	PrimaryExpression	"""gs_cspace_final"""		500398	0					
ANR	500462	ReturnType	static void		500398	1					
ANR	500463	Identifier	gs_cspace_final		500398	2					
ANR	500464	ParameterList	"const gs_memory_t * cmem , void * vptr"		500398	3					
ANR	500465	Parameter	const gs_memory_t * cmem	93:16:3161:3183	500398	0	True				
ANR	500466	ParameterType	const gs_memory_t *		500398	0					
ANR	500467	Identifier	cmem		500398	1					
ANR	500468	Parameter	void * vptr	93:41:3186:3195	500398	1	True				
ANR	500469	ParameterType	void *		500398	0					
ANR	500470	Identifier	vptr		500398	1					
ANR	500471	CFGEntryNode	ENTRY		500398		True				
ANR	500472	CFGExitNode	EXIT		500398		True				
ANR	500473	Symbol	pcs		500398						
ANR	500474	Symbol	pcs -> base_space		500398						
ANR	500475	Symbol	* * pcs		500398						
ANR	500476	Symbol	* pcs -> type		500398						
ANR	500477	Symbol	pcs -> id		500398						
ANR	500478	Symbol	* pcs		500398						
ANR	500479	Symbol	cmem		500398						
ANR	500480	Symbol	pcs -> type -> final		500398						
ANR	500481	Symbol	vptr		500398						
ANR	500482	Symbol	pcs -> type		500398						
ANR	500483	Function	gs_cspace_alloc_with_id	109:0:3644:4245							
ANR	500484	FunctionDef	"gs_cspace_alloc_with_id (gs_memory_t * mem , ulong id , const gs_color_space_type * pcstype)"		500483	0					
ANR	500485	CompoundStatement		112:0:3775:4245	500483	0					
ANR	500486	IdentifierDeclStatement	gs_color_space * pcs ;	113:4:3781:3800	500483	0	True				
ANR	500487	IdentifierDecl	* pcs		500483	0					
ANR	500488	IdentifierDeclType	gs_color_space *		500483	0					
ANR	500489	Identifier	pcs		500483	1					
ANR	500490	Statement	rc_alloc_struct_1	115:4:3807:3823	500483	1	True				
ANR	500491	Statement	(	115:21:3824:3824	500483	2	True				
ANR	500492	Statement	pcs	115:22:3825:3827	500483	3	True				
ANR	500493	Statement	","	115:25:3828:3828	500483	4	True				
ANR	500494	Statement	gs_color_space	115:27:3830:3843	500483	5	True				
ANR	500495	Statement	","	115:41:3844:3844	500483	6	True				
ANR	500496	Statement	&	115:43:3846:3846	500483	7	True				
ANR	500497	Statement	st_color_space	115:44:3847:3860	500483	8	True				
ANR	500498	Statement	","	115:58:3861:3861	500483	9	True				
ANR	500499	Statement	mem	115:60:3863:3865	500483	10	True				
ANR	500500	Statement	","	115:63:3866:3866	500483	11	True				
ANR	500501	Statement	return	115:65:3868:3873	500483	12	True				
ANR	500502	Statement	NULL	115:72:3875:3878	500483	13	True				
ANR	500503	Statement	","	115:76:3879:3879	500483	14	True				
ANR	500504	Statement	"""gs_cspace_alloc_with_id"""	116:22:3903:3927	500483	15	True				
ANR	500505	Statement	)	116:47:3928:3928	500483	16	True				
ANR	500506	ExpressionStatement		116:48:3929:3929	500483	17	True				
ANR	500507	ExpressionStatement	"if_debug3m ( 'c' , mem , ""[c]cspace alloc %p %s %d\\n"" , pcs , pcstype -> stype -> sname , pcstype -> index )"	117:4:3935:4044	500483	18	True				
ANR	500508	CallExpression	"if_debug3m ( 'c' , mem , ""[c]cspace alloc %p %s %d\\n"" , pcs , pcstype -> stype -> sname , pcstype -> index )"		500483	0					
ANR	500509	Callee	if_debug3m		500483	0					
ANR	500510	Identifier	if_debug3m		500483	0					
ANR	500511	ArgumentList	'c'		500483	1					
ANR	500512	Argument	'c'		500483	0					
ANR	500513	PrimaryExpression	'c'		500483	0					
ANR	500514	Argument	mem		500483	1					
ANR	500515	Identifier	mem		500483	0					
ANR	500516	Argument	"""[c]cspace alloc %p %s %d\\n"""		500483	2					
ANR	500517	PrimaryExpression	"""[c]cspace alloc %p %s %d\\n"""		500483	0					
ANR	500518	Argument	pcs		500483	3					
ANR	500519	Identifier	pcs		500483	0					
ANR	500520	Argument	pcstype -> stype -> sname		500483	4					
ANR	500521	PtrMemberAccess	pcstype -> stype -> sname		500483	0					
ANR	500522	PtrMemberAccess	pcstype -> stype		500483	0					
ANR	500523	Identifier	pcstype		500483	0					
ANR	500524	Identifier	stype		500483	1					
ANR	500525	Identifier	sname		500483	1					
ANR	500526	Argument	pcstype -> index		500483	5					
ANR	500527	PtrMemberAccess	pcstype -> index		500483	0					
ANR	500528	Identifier	pcstype		500483	0					
ANR	500529	Identifier	index		500483	1					
ANR	500530	ExpressionStatement	pcs -> type = pcstype	119:4:4050:4069	500483	19	True				
ANR	500531	AssignmentExpression	pcs -> type = pcstype		500483	0		=			
ANR	500532	PtrMemberAccess	pcs -> type		500483	0					
ANR	500533	Identifier	pcs		500483	0					
ANR	500534	Identifier	type		500483	1					
ANR	500535	Identifier	pcstype		500483	1					
ANR	500536	ExpressionStatement	pcs -> id = id	120:4:4075:4087	500483	20	True				
ANR	500537	AssignmentExpression	pcs -> id = id		500483	0		=			
ANR	500538	PtrMemberAccess	pcs -> id		500483	0					
ANR	500539	Identifier	pcs		500483	0					
ANR	500540	Identifier	id		500483	1					
ANR	500541	Identifier	id		500483	1					
ANR	500542	ExpressionStatement	pcs -> base_space = NULL	121:4:4093:4115	500483	21	True				
ANR	500543	AssignmentExpression	pcs -> base_space = NULL		500483	0		=			
ANR	500544	PtrMemberAccess	pcs -> base_space		500483	0					
ANR	500545	Identifier	pcs		500483	0					
ANR	500546	Identifier	base_space		500483	1					
ANR	500547	Identifier	NULL		500483	1					
ANR	500548	ExpressionStatement	pcs -> pclient_color_space_data = NULL	122:4:4121:4157	500483	22	True				
ANR	500549	AssignmentExpression	pcs -> pclient_color_space_data = NULL		500483	0		=			
ANR	500550	PtrMemberAccess	pcs -> pclient_color_space_data		500483	0					
ANR	500551	Identifier	pcs		500483	0					
ANR	500552	Identifier	pclient_color_space_data		500483	1					
ANR	500553	Identifier	NULL		500483	1					
ANR	500554	ExpressionStatement	pcs -> cmm_icc_profile_data = NULL	123:4:4163:4195	500483	23	True				
ANR	500555	AssignmentExpression	pcs -> cmm_icc_profile_data = NULL		500483	0		=			
ANR	500556	PtrMemberAccess	pcs -> cmm_icc_profile_data		500483	0					
ANR	500557	Identifier	pcs		500483	0					
ANR	500558	Identifier	cmm_icc_profile_data		500483	1					
ANR	500559	Identifier	NULL		500483	1					
ANR	500560	ExpressionStatement	pcs -> icc_equivalent = NULL	124:4:4201:4227	500483	24	True				
ANR	500561	AssignmentExpression	pcs -> icc_equivalent = NULL		500483	0		=			
ANR	500562	PtrMemberAccess	pcs -> icc_equivalent		500483	0					
ANR	500563	Identifier	pcs		500483	0					
ANR	500564	Identifier	icc_equivalent		500483	1					
ANR	500565	Identifier	NULL		500483	1					
ANR	500566	ReturnStatement	return pcs ;	125:4:4233:4243	500483	25	True				
ANR	500567	Identifier	pcs		500483	0					
ANR	500568	ReturnType	static gs_color_space *		500483	1					
ANR	500569	Identifier	gs_cspace_alloc_with_id		500483	2					
ANR	500570	ParameterList	"gs_memory_t * mem , ulong id , const gs_color_space_type * pcstype"		500483	3					
ANR	500571	Parameter	gs_memory_t * mem	110:24:3692:3707	500483	0	True				
ANR	500572	ParameterType	gs_memory_t *		500483	0					
ANR	500573	Identifier	mem		500483	1					
ANR	500574	Parameter	ulong id	110:42:3710:3717	500483	1	True				
ANR	500575	ParameterType	ulong		500483	0					
ANR	500576	Identifier	id		500483	1					
ANR	500577	Parameter	const gs_color_space_type * pcstype	111:19:3739:3772	500483	2	True				
ANR	500578	ParameterType	const gs_color_space_type *		500483	0					
ANR	500579	Identifier	pcstype		500483	1					
ANR	500580	CFGEntryNode	ENTRY		500483		True				
ANR	500581	CFGExitNode	EXIT		500483		True				
ANR	500582	Symbol	pcs		500483						
ANR	500583	Symbol	NULL		500483						
ANR	500584	Symbol	pcstype -> stype -> sname		500483						
ANR	500585	Symbol	* * pcstype		500483						
ANR	500586	Symbol	pcs -> cmm_icc_profile_data		500483						
ANR	500587	Symbol	pcs -> id		500483						
ANR	500588	Symbol	* pcs		500483						
ANR	500589	Symbol	pcs -> pclient_color_space_data		500483						
ANR	500590	Symbol	pcs -> icc_equivalent		500483						
ANR	500591	Symbol	pcstype		500483						
ANR	500592	Symbol	pcstype -> index		500483						
ANR	500593	Symbol	* pcstype		500483						
ANR	500594	Symbol	pcstype -> stype		500483						
ANR	500595	Symbol	pcs -> base_space		500483						
ANR	500596	Symbol	mem		500483						
ANR	500597	Symbol	* pcstype -> stype		500483						
ANR	500598	Symbol	id		500483						
ANR	500599	Symbol	pcs -> type		500483						
ANR	500600	Function	gs_cspace_alloc	136:0:4518:4678							
ANR	500601	FunctionDef	"gs_cspace_alloc (gs_memory_t * mem , const gs_color_space_type * pcstype)"		500600	0					
ANR	500602	CompoundStatement		138:0:4605:4678	500600	0					
ANR	500603	ReturnStatement	"return gs_cspace_alloc_with_id ( mem , gs_next_ids ( mem , 1 ) , pcstype ) ;"	139:4:4611:4676	500600	0	True				
ANR	500604	CallExpression	"gs_cspace_alloc_with_id ( mem , gs_next_ids ( mem , 1 ) , pcstype )"		500600	0					
ANR	500605	Callee	gs_cspace_alloc_with_id		500600	0					
ANR	500606	Identifier	gs_cspace_alloc_with_id		500600	0					
ANR	500607	ArgumentList	mem		500600	1					
ANR	500608	Argument	mem		500600	0					
ANR	500609	Identifier	mem		500600	0					
ANR	500610	Argument	"gs_next_ids ( mem , 1 )"		500600	1					
ANR	500611	CallExpression	"gs_next_ids ( mem , 1 )"		500600	0					
ANR	500612	Callee	gs_next_ids		500600	0					
ANR	500613	Identifier	gs_next_ids		500600	0					
ANR	500614	ArgumentList	mem		500600	1					
ANR	500615	Argument	mem		500600	0					
ANR	500616	Identifier	mem		500600	0					
ANR	500617	Argument	1		500600	1					
ANR	500618	PrimaryExpression	1		500600	0					
ANR	500619	Argument	pcstype		500600	2					
ANR	500620	Identifier	pcstype		500600	0					
ANR	500621	ReturnType	gs_color_space *		500600	1					
ANR	500622	Identifier	gs_cspace_alloc		500600	2					
ANR	500623	ParameterList	"gs_memory_t * mem , const gs_color_space_type * pcstype"		500600	3					
ANR	500624	Parameter	gs_memory_t * mem	137:16:4551:4566	500600	0	True				
ANR	500625	ParameterType	gs_memory_t *		500600	0					
ANR	500626	Identifier	mem		500600	1					
ANR	500627	Parameter	const gs_color_space_type * pcstype	137:34:4569:4602	500600	1	True				
ANR	500628	ParameterType	const gs_color_space_type *		500600	0					
ANR	500629	Identifier	pcstype		500600	1					
ANR	500630	CFGEntryNode	ENTRY		500600		True				
ANR	500631	CFGExitNode	EXIT		500600		True				
ANR	500632	Symbol	mem		500600						
ANR	500633	Symbol	gs_cspace_alloc_with_id		500600						
ANR	500634	Symbol	gs_next_ids		500600						
ANR	500635	Symbol	pcstype		500600						
ANR	500636	Function	gs_cspace_new_DeviceGray	144:0:4733:4922							
ANR	500637	FunctionDef	gs_cspace_new_DeviceGray (gs_memory_t * mem)		500636	0					
ANR	500638	CompoundStatement		146:0:4793:4922	500636	0					
ANR	500639	ReturnStatement	"return gs_cspace_alloc_with_id ( mem , cs_DeviceGray_id , & gs_color_space_type_DeviceGray ) ;"	147:4:4799:4920	500636	0	True				
ANR	500640	CallExpression	"gs_cspace_alloc_with_id ( mem , cs_DeviceGray_id , & gs_color_space_type_DeviceGray )"		500636	0					
ANR	500641	Callee	gs_cspace_alloc_with_id		500636	0					
ANR	500642	Identifier	gs_cspace_alloc_with_id		500636	0					
ANR	500643	ArgumentList	mem		500636	1					
ANR	500644	Argument	mem		500636	0					
ANR	500645	Identifier	mem		500636	0					
ANR	500646	Argument	cs_DeviceGray_id		500636	1					
ANR	500647	Identifier	cs_DeviceGray_id		500636	0					
ANR	500648	Argument	& gs_color_space_type_DeviceGray		500636	2					
ANR	500649	UnaryOperationExpression	& gs_color_space_type_DeviceGray		500636	0					
ANR	500650	UnaryOperator	&		500636	0					
ANR	500651	Identifier	gs_color_space_type_DeviceGray		500636	1					
ANR	500652	ReturnType	gs_color_space *		500636	1					
ANR	500653	Identifier	gs_cspace_new_DeviceGray		500636	2					
ANR	500654	ParameterList	gs_memory_t * mem		500636	3					
ANR	500655	Parameter	gs_memory_t * mem	145:25:4775:4790	500636	0	True				
ANR	500656	ParameterType	gs_memory_t *		500636	0					
ANR	500657	Identifier	mem		500636	1					
ANR	500658	CFGEntryNode	ENTRY		500636		True				
ANR	500659	CFGExitNode	EXIT		500636		True				
ANR	500660	Symbol	& gs_color_space_type_DeviceGray		500636						
ANR	500661	Symbol	mem		500636						
ANR	500662	Symbol	cs_DeviceGray_id		500636						
ANR	500663	Symbol	gs_cspace_alloc_with_id		500636						
ANR	500664	Function	gs_cspace_new_DeviceRGB	151:0:4925:5111							
ANR	500665	FunctionDef	gs_cspace_new_DeviceRGB (gs_memory_t * mem)		500664	0					
ANR	500666	CompoundStatement		153:0:4984:5111	500664	0					
ANR	500667	ReturnStatement	"return gs_cspace_alloc_with_id ( mem , cs_DeviceRGB_id , & gs_color_space_type_DeviceRGB ) ;"	154:4:4990:5109	500664	0	True				
ANR	500668	CallExpression	"gs_cspace_alloc_with_id ( mem , cs_DeviceRGB_id , & gs_color_space_type_DeviceRGB )"		500664	0					
ANR	500669	Callee	gs_cspace_alloc_with_id		500664	0					
ANR	500670	Identifier	gs_cspace_alloc_with_id		500664	0					
ANR	500671	ArgumentList	mem		500664	1					
ANR	500672	Argument	mem		500664	0					
ANR	500673	Identifier	mem		500664	0					
ANR	500674	Argument	cs_DeviceRGB_id		500664	1					
ANR	500675	Identifier	cs_DeviceRGB_id		500664	0					
ANR	500676	Argument	& gs_color_space_type_DeviceRGB		500664	2					
ANR	500677	UnaryOperationExpression	& gs_color_space_type_DeviceRGB		500664	0					
ANR	500678	UnaryOperator	&		500664	0					
ANR	500679	Identifier	gs_color_space_type_DeviceRGB		500664	1					
ANR	500680	ReturnType	gs_color_space *		500664	1					
ANR	500681	Identifier	gs_cspace_new_DeviceRGB		500664	2					
ANR	500682	ParameterList	gs_memory_t * mem		500664	3					
ANR	500683	Parameter	gs_memory_t * mem	152:24:4966:4981	500664	0	True				
ANR	500684	ParameterType	gs_memory_t *		500664	0					
ANR	500685	Identifier	mem		500664	1					
ANR	500686	CFGEntryNode	ENTRY		500664		True				
ANR	500687	CFGExitNode	EXIT		500664		True				
ANR	500688	Symbol	cs_DeviceRGB_id		500664						
ANR	500689	Symbol	mem		500664						
ANR	500690	Symbol	gs_cspace_alloc_with_id		500664						
ANR	500691	Symbol	& gs_color_space_type_DeviceRGB		500664						
ANR	500692	Function	gs_cspace_new_DeviceCMYK	157:0:5113:5302							
ANR	500693	FunctionDef	gs_cspace_new_DeviceCMYK (gs_memory_t * mem)		500692	0					
ANR	500694	CompoundStatement		159:0:5173:5302	500692	0					
ANR	500695	ReturnStatement	"return gs_cspace_alloc_with_id ( mem , cs_DeviceCMYK_id , & gs_color_space_type_DeviceCMYK ) ;"	160:4:5179:5300	500692	0	True				
ANR	500696	CallExpression	"gs_cspace_alloc_with_id ( mem , cs_DeviceCMYK_id , & gs_color_space_type_DeviceCMYK )"		500692	0					
ANR	500697	Callee	gs_cspace_alloc_with_id		500692	0					
ANR	500698	Identifier	gs_cspace_alloc_with_id		500692	0					
ANR	500699	ArgumentList	mem		500692	1					
ANR	500700	Argument	mem		500692	0					
ANR	500701	Identifier	mem		500692	0					
ANR	500702	Argument	cs_DeviceCMYK_id		500692	1					
ANR	500703	Identifier	cs_DeviceCMYK_id		500692	0					
ANR	500704	Argument	& gs_color_space_type_DeviceCMYK		500692	2					
ANR	500705	UnaryOperationExpression	& gs_color_space_type_DeviceCMYK		500692	0					
ANR	500706	UnaryOperator	&		500692	0					
ANR	500707	Identifier	gs_color_space_type_DeviceCMYK		500692	1					
ANR	500708	ReturnType	gs_color_space *		500692	1					
ANR	500709	Identifier	gs_cspace_new_DeviceCMYK		500692	2					
ANR	500710	ParameterList	gs_memory_t * mem		500692	3					
ANR	500711	Parameter	gs_memory_t * mem	158:25:5155:5170	500692	0	True				
ANR	500712	ParameterType	gs_memory_t *		500692	0					
ANR	500713	Identifier	mem		500692	1					
ANR	500714	CFGEntryNode	ENTRY		500692		True				
ANR	500715	CFGExitNode	EXIT		500692		True				
ANR	500716	Symbol	mem		500692						
ANR	500717	Symbol	& gs_color_space_type_DeviceCMYK		500692						
ANR	500718	Symbol	gs_cspace_alloc_with_id		500692						
ANR	500719	Symbol	cs_DeviceCMYK_id		500692						
ANR	500720	Function	gs_cspace_new_ICC	165:0:5360:6975							
ANR	500721	FunctionDef	"gs_cspace_new_ICC (gs_memory_t * pmem , gs_gstate * pgs , int components)"		500720	0					
ANR	500722	CompoundStatement		167:0:5447:6975	500720	0					
ANR	500723	IdentifierDeclStatement	gsicc_manager_t * icc_manage = pgs -> icc_manager ;	168:4:5453:5499	500720	0	True				
ANR	500724	IdentifierDecl	* icc_manage = pgs -> icc_manager		500720	0					
ANR	500725	IdentifierDeclType	gsicc_manager_t *		500720	0					
ANR	500726	Identifier	icc_manage		500720	1					
ANR	500727	AssignmentExpression	* icc_manage = pgs -> icc_manager		500720	2		=			
ANR	500728	Identifier	icc_manage		500720	0					
ANR	500729	PtrMemberAccess	pgs -> icc_manager		500720	1					
ANR	500730	Identifier	pgs		500720	0					
ANR	500731	Identifier	icc_manager		500720	1					
ANR	500732	IdentifierDeclStatement	int code = 0 ;	169:4:5505:5517	500720	1	True				
ANR	500733	IdentifierDecl	code = 0		500720	0					
ANR	500734	IdentifierDeclType	int		500720	0					
ANR	500735	Identifier	code		500720	1					
ANR	500736	AssignmentExpression	code = 0		500720	2		=			
ANR	500737	Identifier	code		500720	0					
ANR	500738	PrimaryExpression	0		500720	1					
ANR	500739	IdentifierDeclStatement	"gs_color_space * pcspace = gs_cspace_alloc ( pmem , & gs_color_space_type_ICC ) ;"	170:4:5523:5596	500720	2	True				
ANR	500740	IdentifierDecl	"* pcspace = gs_cspace_alloc ( pmem , & gs_color_space_type_ICC )"		500720	0					
ANR	500741	IdentifierDeclType	gs_color_space *		500720	0					
ANR	500742	Identifier	pcspace		500720	1					
ANR	500743	AssignmentExpression	"* pcspace = gs_cspace_alloc ( pmem , & gs_color_space_type_ICC )"		500720	2		=			
ANR	500744	Identifier	pcspace		500720	0					
ANR	500745	CallExpression	"gs_cspace_alloc ( pmem , & gs_color_space_type_ICC )"		500720	1					
ANR	500746	Callee	gs_cspace_alloc		500720	0					
ANR	500747	Identifier	gs_cspace_alloc		500720	0					
ANR	500748	ArgumentList	pmem		500720	1					
ANR	500749	Argument	pmem		500720	0					
ANR	500750	Identifier	pmem		500720	0					
ANR	500751	Argument	& gs_color_space_type_ICC		500720	1					
ANR	500752	UnaryOperationExpression	& gs_color_space_type_ICC		500720	0					
ANR	500753	UnaryOperator	&		500720	0					
ANR	500754	Identifier	gs_color_space_type_ICC		500720	1					
ANR	500755	IfStatement	if ( pcspace == NULL )		500720	3					
ANR	500756	Condition	pcspace == NULL	172:8:5607:5621	500720	0	True				
ANR	500757	EqualityExpression	pcspace == NULL		500720	0		==			
ANR	500758	Identifier	pcspace		500720	0					
ANR	500759	Identifier	NULL		500720	1					
ANR	500760	ReturnStatement	return pcspace ;	173:8:5632:5646	500720	1	True				
ANR	500761	Identifier	pcspace		500720	0					
ANR	500762	SwitchStatement	switch ( components )		500720	4					
ANR	500763	Condition	components	175:12:5661:5670	500720	0	True				
ANR	500764	Identifier	components		500720	0					
ANR	500765	CompoundStatement		9:24:225:225	500720	1					
ANR	500766	Statement	case	176:8:5683:5686	500720	0	True				
ANR	500767	Statement	-	176:13:5688:5688	500720	1	True				
ANR	500768	Label	1 :	176:14:5689:5690	500720	2	True				
ANR	500769	IfStatement	if ( icc_manage -> smask_profiles == NULL )		500720	3					
ANR	500770	Condition	icc_manage -> smask_profiles == NULL	177:16:5725:5758	500720	0	True				
ANR	500771	EqualityExpression	icc_manage -> smask_profiles == NULL		500720	0		==			
ANR	500772	PtrMemberAccess	icc_manage -> smask_profiles		500720	0					
ANR	500773	Identifier	icc_manage		500720	0					
ANR	500774	Identifier	smask_profiles		500720	1					
ANR	500775	Identifier	NULL		500720	1					
ANR	500776	CompoundStatement		11:52:313:313	500720	1					
ANR	500777	ExpressionStatement	code = gsicc_initialize_iccsmask ( icc_manage )	178:16:5779:5823	500720	0	True				
ANR	500778	AssignmentExpression	code = gsicc_initialize_iccsmask ( icc_manage )		500720	0		=			
ANR	500779	Identifier	code		500720	0					
ANR	500780	CallExpression	gsicc_initialize_iccsmask ( icc_manage )		500720	1					
ANR	500781	Callee	gsicc_initialize_iccsmask		500720	0					
ANR	500782	Identifier	gsicc_initialize_iccsmask		500720	0					
ANR	500783	ArgumentList	icc_manage		500720	1					
ANR	500784	Argument	icc_manage		500720	0					
ANR	500785	Identifier	icc_manage		500720	0					
ANR	500786	IfStatement	if ( code == 0 )		500720	4					
ANR	500787	Condition	code == 0	180:16:5855:5863	500720	0	True				
ANR	500788	EqualityExpression	code == 0		500720	0		==			
ANR	500789	Identifier	code		500720	0					
ANR	500790	PrimaryExpression	0		500720	1					
ANR	500791	CompoundStatement		14:27:418:418	500720	1					
ANR	500792	ExpressionStatement	pcspace -> cmm_icc_profile_data = icc_manage -> smask_profiles -> smask_gray	181:16:5884:5974	500720	0	True				
ANR	500793	AssignmentExpression	pcspace -> cmm_icc_profile_data = icc_manage -> smask_profiles -> smask_gray		500720	0		=			
ANR	500794	PtrMemberAccess	pcspace -> cmm_icc_profile_data		500720	0					
ANR	500795	Identifier	pcspace		500720	0					
ANR	500796	Identifier	cmm_icc_profile_data		500720	1					
ANR	500797	PtrMemberAccess	icc_manage -> smask_profiles -> smask_gray		500720	1					
ANR	500798	PtrMemberAccess	icc_manage -> smask_profiles		500720	0					
ANR	500799	Identifier	icc_manage		500720	0					
ANR	500800	Identifier	smask_profiles		500720	1					
ANR	500801	Identifier	smask_gray		500720	1					
ANR	500802	ElseStatement	else		500720	0					
ANR	500803	CompoundStatement		17:19:547:547	500720	0					
ANR	500804	ExpressionStatement	pcspace -> cmm_icc_profile_data = icc_manage -> default_gray	184:16:6013:6069	500720	0	True				
ANR	500805	AssignmentExpression	pcspace -> cmm_icc_profile_data = icc_manage -> default_gray		500720	0		=			
ANR	500806	PtrMemberAccess	pcspace -> cmm_icc_profile_data		500720	0					
ANR	500807	Identifier	pcspace		500720	0					
ANR	500808	Identifier	cmm_icc_profile_data		500720	1					
ANR	500809	PtrMemberAccess	icc_manage -> default_gray		500720	1					
ANR	500810	Identifier	icc_manage		500720	0					
ANR	500811	Identifier	default_gray		500720	1					
ANR	500812	BreakStatement	break ;	186:12:6097:6102	500720	5	True				
ANR	500813	Statement	case	187:8:6112:6115	500720	6	True				
ANR	500814	Statement	-	187:13:6117:6117	500720	7	True				
ANR	500815	Label	3 :	187:14:6118:6119	500720	8	True				
ANR	500816	IfStatement	if ( icc_manage -> smask_profiles == NULL )		500720	9					
ANR	500817	Condition	icc_manage -> smask_profiles == NULL	188:16:6173:6206	500720	0	True				
ANR	500818	EqualityExpression	icc_manage -> smask_profiles == NULL		500720	0		==			
ANR	500819	PtrMemberAccess	icc_manage -> smask_profiles		500720	0					
ANR	500820	Identifier	icc_manage		500720	0					
ANR	500821	Identifier	smask_profiles		500720	1					
ANR	500822	Identifier	NULL		500720	1					
ANR	500823	CompoundStatement		22:52:761:761	500720	1					
ANR	500824	ExpressionStatement	code = gsicc_initialize_iccsmask ( icc_manage )	189:16:6227:6271	500720	0	True				
ANR	500825	AssignmentExpression	code = gsicc_initialize_iccsmask ( icc_manage )		500720	0		=			
ANR	500826	Identifier	code		500720	0					
ANR	500827	CallExpression	gsicc_initialize_iccsmask ( icc_manage )		500720	1					
ANR	500828	Callee	gsicc_initialize_iccsmask		500720	0					
ANR	500829	Identifier	gsicc_initialize_iccsmask		500720	0					
ANR	500830	ArgumentList	icc_manage		500720	1					
ANR	500831	Argument	icc_manage		500720	0					
ANR	500832	Identifier	icc_manage		500720	0					
ANR	500833	IfStatement	if ( code == 0 )		500720	10					
ANR	500834	Condition	code == 0	191:16:6303:6311	500720	0	True				
ANR	500835	EqualityExpression	code == 0		500720	0		==			
ANR	500836	Identifier	code		500720	0					
ANR	500837	PrimaryExpression	0		500720	1					
ANR	500838	CompoundStatement		25:27:866:866	500720	1					
ANR	500839	ExpressionStatement	pcspace -> cmm_icc_profile_data = icc_manage -> smask_profiles -> smask_rgb	192:16:6332:6421	500720	0	True				
ANR	500840	AssignmentExpression	pcspace -> cmm_icc_profile_data = icc_manage -> smask_profiles -> smask_rgb		500720	0		=			
ANR	500841	PtrMemberAccess	pcspace -> cmm_icc_profile_data		500720	0					
ANR	500842	Identifier	pcspace		500720	0					
ANR	500843	Identifier	cmm_icc_profile_data		500720	1					
ANR	500844	PtrMemberAccess	icc_manage -> smask_profiles -> smask_rgb		500720	1					
ANR	500845	PtrMemberAccess	icc_manage -> smask_profiles		500720	0					
ANR	500846	Identifier	icc_manage		500720	0					
ANR	500847	Identifier	smask_profiles		500720	1					
ANR	500848	Identifier	smask_rgb		500720	1					
ANR	500849	ElseStatement	else		500720	0					
ANR	500850	CompoundStatement		28:19:994:994	500720	0					
ANR	500851	ExpressionStatement	pcspace -> cmm_icc_profile_data = icc_manage -> default_rgb	195:16:6460:6515	500720	0	True				
ANR	500852	AssignmentExpression	pcspace -> cmm_icc_profile_data = icc_manage -> default_rgb		500720	0		=			
ANR	500853	PtrMemberAccess	pcspace -> cmm_icc_profile_data		500720	0					
ANR	500854	Identifier	pcspace		500720	0					
ANR	500855	Identifier	cmm_icc_profile_data		500720	1					
ANR	500856	PtrMemberAccess	icc_manage -> default_rgb		500720	1					
ANR	500857	Identifier	icc_manage		500720	0					
ANR	500858	Identifier	default_rgb		500720	1					
ANR	500859	BreakStatement	break ;	197:12:6543:6548	500720	11	True				
ANR	500860	Label	case 1 :	198:8:6558:6564	500720	12	True				
ANR	500861	ExpressionStatement	pcspace -> cmm_icc_profile_data = icc_manage -> default_gray	198:16:6566:6622	500720	13	True				
ANR	500862	AssignmentExpression	pcspace -> cmm_icc_profile_data = icc_manage -> default_gray		500720	0		=			
ANR	500863	PtrMemberAccess	pcspace -> cmm_icc_profile_data		500720	0					
ANR	500864	Identifier	pcspace		500720	0					
ANR	500865	Identifier	cmm_icc_profile_data		500720	1					
ANR	500866	PtrMemberAccess	icc_manage -> default_gray		500720	1					
ANR	500867	Identifier	icc_manage		500720	0					
ANR	500868	Identifier	default_gray		500720	1					
ANR	500869	BreakStatement	break ;	198:74:6624:6629	500720	14	True				
ANR	500870	Label	case 3 :	199:8:6639:6645	500720	15	True				
ANR	500871	ExpressionStatement	pcspace -> cmm_icc_profile_data = icc_manage -> default_rgb	199:16:6647:6702	500720	16	True				
ANR	500872	AssignmentExpression	pcspace -> cmm_icc_profile_data = icc_manage -> default_rgb		500720	0		=			
ANR	500873	PtrMemberAccess	pcspace -> cmm_icc_profile_data		500720	0					
ANR	500874	Identifier	pcspace		500720	0					
ANR	500875	Identifier	cmm_icc_profile_data		500720	1					
ANR	500876	PtrMemberAccess	icc_manage -> default_rgb		500720	1					
ANR	500877	Identifier	icc_manage		500720	0					
ANR	500878	Identifier	default_rgb		500720	1					
ANR	500879	BreakStatement	break ;	199:73:6704:6709	500720	17	True				
ANR	500880	Label	case 4 :	200:8:6719:6725	500720	18	True				
ANR	500881	ExpressionStatement	pcspace -> cmm_icc_profile_data = icc_manage -> default_cmyk	200:16:6727:6783	500720	19	True				
ANR	500882	AssignmentExpression	pcspace -> cmm_icc_profile_data = icc_manage -> default_cmyk		500720	0		=			
ANR	500883	PtrMemberAccess	pcspace -> cmm_icc_profile_data		500720	0					
ANR	500884	Identifier	pcspace		500720	0					
ANR	500885	Identifier	cmm_icc_profile_data		500720	1					
ANR	500886	PtrMemberAccess	icc_manage -> default_cmyk		500720	1					
ANR	500887	Identifier	icc_manage		500720	0					
ANR	500888	Identifier	default_cmyk		500720	1					
ANR	500889	BreakStatement	break ;	200:74:6785:6790	500720	20	True				
ANR	500890	Label	default :	201:8:6800:6807	500720	21	True				
ANR	500891	Identifier	default		500720	0					
ANR	500892	ExpressionStatement	"rc_decrement ( pcspace , ""gs_cspace_new_ICC"" )"	201:17:6809:6850	500720	22	True				
ANR	500893	CallExpression	"rc_decrement ( pcspace , ""gs_cspace_new_ICC"" )"		500720	0					
ANR	500894	Callee	rc_decrement		500720	0					
ANR	500895	Identifier	rc_decrement		500720	0					
ANR	500896	ArgumentList	pcspace		500720	1					
ANR	500897	Argument	pcspace		500720	0					
ANR	500898	Identifier	pcspace		500720	0					
ANR	500899	Argument	"""gs_cspace_new_ICC"""		500720	1					
ANR	500900	PrimaryExpression	"""gs_cspace_new_ICC"""		500720	0					
ANR	500901	ReturnStatement	return NULL ;	201:60:6852:6863	500720	23	True				
ANR	500902	Identifier	NULL		500720	0					
ANR	500903	ExpressionStatement	"gsicc_adjust_profile_rc ( pcspace -> cmm_icc_profile_data , 1 , ""gs_cspace_new_ICC"" )"	203:4:6875:6953	500720	5	True				
ANR	500904	CallExpression	"gsicc_adjust_profile_rc ( pcspace -> cmm_icc_profile_data , 1 , ""gs_cspace_new_ICC"" )"		500720	0					
ANR	500905	Callee	gsicc_adjust_profile_rc		500720	0					
ANR	500906	Identifier	gsicc_adjust_profile_rc		500720	0					
ANR	500907	ArgumentList	pcspace -> cmm_icc_profile_data		500720	1					
ANR	500908	Argument	pcspace -> cmm_icc_profile_data		500720	0					
ANR	500909	PtrMemberAccess	pcspace -> cmm_icc_profile_data		500720	0					
ANR	500910	Identifier	pcspace		500720	0					
ANR	500911	Identifier	cmm_icc_profile_data		500720	1					
ANR	500912	Argument	1		500720	1					
ANR	500913	PrimaryExpression	1		500720	0					
ANR	500914	Argument	"""gs_cspace_new_ICC"""		500720	2					
ANR	500915	PrimaryExpression	"""gs_cspace_new_ICC"""		500720	0					
ANR	500916	ReturnStatement	return pcspace ;	204:4:6959:6973	500720	6	True				
ANR	500917	Identifier	pcspace		500720	0					
ANR	500918	ReturnType	gs_color_space *		500720	1					
ANR	500919	Identifier	gs_cspace_new_ICC		500720	2					
ANR	500920	ParameterList	"gs_memory_t * pmem , gs_gstate * pgs , int components"		500720	3					
ANR	500921	Parameter	gs_memory_t * pmem	166:18:5395:5411	500720	0	True				
ANR	500922	ParameterType	gs_memory_t *		500720	0					
ANR	500923	Identifier	pmem		500720	1					
ANR	500924	Parameter	gs_gstate * pgs	166:37:5414:5428	500720	1	True				
ANR	500925	ParameterType	gs_gstate *		500720	0					
ANR	500926	Identifier	pgs		500720	1					
ANR	500927	Parameter	int components	166:54:5431:5444	500720	2	True				
ANR	500928	ParameterType	int		500720	0					
ANR	500929	Identifier	components		500720	1					
ANR	500930	CFGEntryNode	ENTRY		500720		True				
ANR	500931	CFGExitNode	EXIT		500720		True				
ANR	500932	Symbol	icc_manage -> smask_profiles -> smask_gray		500720						
ANR	500933	Symbol	pcspace		500720						
ANR	500934	Symbol	components		500720						
ANR	500935	Symbol	pgs -> icc_manager		500720						
ANR	500936	Symbol	code		500720						
ANR	500937	Symbol	NULL		500720						
ANR	500938	Symbol	pcspace -> cmm_icc_profile_data		500720						
ANR	500939	Symbol	* * icc_manage		500720						
ANR	500940	Symbol	icc_manage -> smask_profiles -> smask_rgb		500720						
ANR	500941	Symbol	icc_manage -> default_rgb		500720						
ANR	500942	Symbol	* pgs		500720						
ANR	500943	Symbol	icc_manage -> default_cmyk		500720						
ANR	500944	Symbol	& gs_color_space_type_ICC		500720						
ANR	500945	Symbol	icc_manage -> default_gray		500720						
ANR	500946	Symbol	* pcspace		500720						
ANR	500947	Symbol	pmem		500720						
ANR	500948	Symbol	* icc_manage		500720						
ANR	500949	Symbol	* icc_manage -> smask_profiles		500720						
ANR	500950	Symbol	icc_manage -> smask_profiles		500720						
ANR	500951	Symbol	gs_cspace_alloc		500720						
ANR	500952	Symbol	gsicc_initialize_iccsmask		500720						
ANR	500953	Symbol	pgs		500720						
ANR	500954	Symbol	icc_manage		500720						
ANR	500955	Function	gs_color_space_get_index	210:0:7047:7152							
ANR	500956	FunctionDef	gs_color_space_get_index (const gs_color_space * pcs)		500955	0					
ANR	500957	CompoundStatement		212:0:7121:7152	500955	0					
ANR	500958	ReturnStatement	return pcs -> type -> index ;	213:4:7127:7150	500955	0	True				
ANR	500959	PtrMemberAccess	pcs -> type -> index		500955	0					
ANR	500960	PtrMemberAccess	pcs -> type		500955	0					
ANR	500961	Identifier	pcs		500955	0					
ANR	500962	Identifier	type		500955	1					
ANR	500963	Identifier	index		500955	1					
ANR	500964	ReturnType	gs_color_space_index		500955	1					
ANR	500965	Identifier	gs_color_space_get_index		500955	2					
ANR	500966	ParameterList	const gs_color_space * pcs		500955	3					
ANR	500967	Parameter	const gs_color_space * pcs	211:25:7093:7118	500955	0	True				
ANR	500968	ParameterType	const gs_color_space *		500955	0					
ANR	500969	Identifier	pcs		500955	1					
ANR	500970	CFGEntryNode	ENTRY		500955		True				
ANR	500971	CFGExitNode	EXIT		500955		True				
ANR	500972	Symbol	pcs		500955						
ANR	500973	Symbol	* * pcs		500955						
ANR	500974	Symbol	* pcs -> type		500955						
ANR	500975	Symbol	* pcs		500955						
ANR	500976	Symbol	pcs -> type -> index		500955						
ANR	500977	Symbol	pcs -> type		500955						
ANR	500978	Function	gs_color_space_is_CIE	217:0:7191:7586							
ANR	500979	FunctionDef	gs_color_space_is_CIE (const gs_color_space * pcs)		500978	0					
ANR	500980	CompoundStatement		218:0:7246:7586	500978	0					
ANR	500981	SwitchStatement	switch ( gs_color_space_get_index ( pcs ) )		500978	0					
ANR	500982	Condition	gs_color_space_get_index ( pcs )	219:11:7259:7287	500978	0	True				
ANR	500983	CallExpression	gs_color_space_get_index ( pcs )		500978	0					
ANR	500984	Callee	gs_color_space_get_index		500978	0					
ANR	500985	Identifier	gs_color_space_get_index		500978	0					
ANR	500986	ArgumentList	pcs		500978	1					
ANR	500987	Argument	pcs		500978	0					
ANR	500988	Identifier	pcs		500978	0					
ANR	500989	CompoundStatement		2:41:42:42	500978	1					
ANR	500990	Label	case gs_color_space_index_CIEDEFG :	220:8:7299:7332	500978	0	True				
ANR	500991	Identifier	gs_color_space_index_CIEDEFG		500978	0					
ANR	500992	Label	case gs_color_space_index_CIEDEF :	221:8:7342:7374	500978	1	True				
ANR	500993	Identifier	gs_color_space_index_CIEDEF		500978	0					
ANR	500994	Label	case gs_color_space_index_CIEABC :	222:8:7384:7416	500978	2	True				
ANR	500995	Identifier	gs_color_space_index_CIEABC		500978	0					
ANR	500996	Label	case gs_color_space_index_CIEA :	223:8:7426:7456	500978	3	True				
ANR	500997	Identifier	gs_color_space_index_CIEA		500978	0					
ANR	500998	Label	case gs_color_space_index_ICC :	224:8:7466:7495	500978	4	True				
ANR	500999	Identifier	gs_color_space_index_ICC		500978	0					
ANR	501000	ReturnStatement	return true ;	225:12:7509:7520	500978	5	True				
ANR	501001	Identifier	true		500978	0					
ANR	501002	BreakStatement	break ;	226:8:7530:7535	500978	6	True				
ANR	501003	Label	default :	227:8:7545:7552	500978	7	True				
ANR	501004	Identifier	default		500978	0					
ANR	501005	ReturnStatement	return false ;	228:12:7566:7578	500978	8	True				
ANR	501006	Identifier	false		500978	0					
ANR	501007	ReturnType	bool		500978	1					
ANR	501008	Identifier	gs_color_space_is_CIE		500978	2					
ANR	501009	ParameterList	const gs_color_space * pcs		500978	3					
ANR	501010	Parameter	const gs_color_space * pcs	217:27:7218:7243	500978	0	True				
ANR	501011	ParameterType	const gs_color_space *		500978	0					
ANR	501012	Identifier	pcs		500978	1					
ANR	501013	CFGEntryNode	ENTRY		500978		True				
ANR	501014	CFGExitNode	EXIT		500978		True				
ANR	501015	Symbol	pcs		500978						
ANR	501016	Symbol	true		500978						
ANR	501017	Symbol	false		500978						
ANR	501018	Symbol	gs_color_space_get_index		500978						
ANR	501019	Function	gs_color_space_is_PSCIE	233:0:7636:7990							
ANR	501020	FunctionDef	gs_color_space_is_PSCIE (const gs_color_space * pcs)		501019	0					
ANR	501021	CompoundStatement		234:0:7693:7990	501019	0					
ANR	501022	SwitchStatement	switch ( gs_color_space_get_index ( pcs ) )		501019	0					
ANR	501023	Condition	gs_color_space_get_index ( pcs )	235:11:7706:7734	501019	0	True				
ANR	501024	CallExpression	gs_color_space_get_index ( pcs )		501019	0					
ANR	501025	Callee	gs_color_space_get_index		501019	0					
ANR	501026	Identifier	gs_color_space_get_index		501019	0					
ANR	501027	ArgumentList	pcs		501019	1					
ANR	501028	Argument	pcs		501019	0					
ANR	501029	Identifier	pcs		501019	0					
ANR	501030	CompoundStatement		2:41:42:42	501019	1					
ANR	501031	Label	case gs_color_space_index_CIEDEFG :	236:8:7746:7779	501019	0	True				
ANR	501032	Identifier	gs_color_space_index_CIEDEFG		501019	0					
ANR	501033	Label	case gs_color_space_index_CIEDEF :	237:8:7789:7821	501019	1	True				
ANR	501034	Identifier	gs_color_space_index_CIEDEF		501019	0					
ANR	501035	Label	case gs_color_space_index_CIEABC :	238:8:7831:7863	501019	2	True				
ANR	501036	Identifier	gs_color_space_index_CIEABC		501019	0					
ANR	501037	Label	case gs_color_space_index_CIEA :	239:8:7873:7903	501019	3	True				
ANR	501038	Identifier	gs_color_space_index_CIEA		501019	0					
ANR	501039	ReturnStatement	return true ;	240:12:7917:7928	501019	4	True				
ANR	501040	Identifier	true		501019	0					
ANR	501041	BreakStatement	break ;	241:8:7938:7943	501019	5	True				
ANR	501042	Label	default :	242:8:7953:7960	501019	6	True				
ANR	501043	Identifier	default		501019	0					
ANR	501044	ReturnStatement	return false ;	243:12:7974:7986	501019	7	True				
ANR	501045	Identifier	false		501019	0					
ANR	501046	ReturnType	bool		501019	1					
ANR	501047	Identifier	gs_color_space_is_PSCIE		501019	2					
ANR	501048	ParameterList	const gs_color_space * pcs		501019	3					
ANR	501049	Parameter	const gs_color_space * pcs	233:29:7665:7690	501019	0	True				
ANR	501050	ParameterType	const gs_color_space *		501019	0					
ANR	501051	Identifier	pcs		501019	1					
ANR	501052	CFGEntryNode	ENTRY		501019		True				
ANR	501053	CFGExitNode	EXIT		501019		True				
ANR	501054	Symbol	pcs		501019						
ANR	501055	Symbol	true		501019						
ANR	501056	Symbol	false		501019						
ANR	501057	Symbol	gs_color_space_get_index		501019						
ANR	501058	Function	gs_color_space_is_ICC	248:0:8029:8157							
ANR	501059	FunctionDef	gs_color_space_is_ICC (const gs_color_space * pcs)		501058	0					
ANR	501060	CompoundStatement		249:0:8084:8157	501058	0					
ANR	501061	ReturnStatement	return ( gs_color_space_get_index ( pcs ) == gs_color_space_index_ICC ) ;	250:4:8090:8155	501058	0	True				
ANR	501062	EqualityExpression	gs_color_space_get_index ( pcs ) == gs_color_space_index_ICC		501058	0		==			
ANR	501063	CallExpression	gs_color_space_get_index ( pcs )		501058	0					
ANR	501064	Callee	gs_color_space_get_index		501058	0					
ANR	501065	Identifier	gs_color_space_get_index		501058	0					
ANR	501066	ArgumentList	pcs		501058	1					
ANR	501067	Argument	pcs		501058	0					
ANR	501068	Identifier	pcs		501058	0					
ANR	501069	Identifier	gs_color_space_index_ICC		501058	1					
ANR	501070	ReturnType	bool		501058	1					
ANR	501071	Identifier	gs_color_space_is_ICC		501058	2					
ANR	501072	ParameterList	const gs_color_space * pcs		501058	3					
ANR	501073	Parameter	const gs_color_space * pcs	248:27:8056:8081	501058	0	True				
ANR	501074	ParameterType	const gs_color_space *		501058	0					
ANR	501075	Identifier	pcs		501058	1					
ANR	501076	CFGEntryNode	ENTRY		501058		True				
ANR	501077	CFGExitNode	EXIT		501058		True				
ANR	501078	Symbol	pcs		501058						
ANR	501079	Symbol	gs_color_space_index_ICC		501058						
ANR	501080	Symbol	gs_color_space_get_index		501058						
ANR	501081	Function	gs_color_space_num_components	254:0:8213:8312							
ANR	501082	FunctionDef	gs_color_space_num_components (const gs_color_space * pcs)		501081	0					
ANR	501083	CompoundStatement		256:0:8275:8312	501081	0					
ANR	501084	ReturnStatement	return cs_num_components ( pcs ) ;	257:4:8281:8310	501081	0	True				
ANR	501085	CallExpression	cs_num_components ( pcs )		501081	0					
ANR	501086	Callee	cs_num_components		501081	0					
ANR	501087	Identifier	cs_num_components		501081	0					
ANR	501088	ArgumentList	pcs		501081	1					
ANR	501089	Argument	pcs		501081	0					
ANR	501090	Identifier	pcs		501081	0					
ANR	501091	ReturnType	int		501081	1					
ANR	501092	Identifier	gs_color_space_num_components		501081	2					
ANR	501093	ParameterList	const gs_color_space * pcs		501081	3					
ANR	501094	Parameter	const gs_color_space * pcs	255:30:8247:8272	501081	0	True				
ANR	501095	ParameterType	const gs_color_space *		501081	0					
ANR	501096	Identifier	pcs		501081	1					
ANR	501097	CFGEntryNode	ENTRY		501081		True				
ANR	501098	CFGExitNode	EXIT		501081		True				
ANR	501099	Symbol	pcs		501081						
ANR	501100	Symbol	cs_num_components		501081						
ANR	501101	Function	gs_color_space_restrict_color	261:0:8358:8477							
ANR	501102	FunctionDef	"gs_color_space_restrict_color (gs_client_color * pcc , const gs_color_space * pcs)"		501101	0					
ANR	501103	CompoundStatement		263:0:8442:8477	501101	0					
ANR	501104	ExpressionStatement	"cs_restrict_color ( pcc , pcs )"	264:4:8448:8475	501101	0	True				
ANR	501105	CallExpression	"cs_restrict_color ( pcc , pcs )"		501101	0					
ANR	501106	Callee	cs_restrict_color		501101	0					
ANR	501107	Identifier	cs_restrict_color		501101	0					
ANR	501108	ArgumentList	pcc		501101	1					
ANR	501109	Argument	pcc		501101	0					
ANR	501110	Identifier	pcc		501101	0					
ANR	501111	Argument	pcs		501101	1					
ANR	501112	Identifier	pcs		501101	0					
ANR	501113	ReturnType	void		501101	1					
ANR	501114	Identifier	gs_color_space_restrict_color		501101	2					
ANR	501115	ParameterList	"gs_client_color * pcc , const gs_color_space * pcs"		501101	3					
ANR	501116	Parameter	gs_client_color * pcc	262:30:8393:8412	501101	0	True				
ANR	501117	ParameterType	gs_client_color *		501101	0					
ANR	501118	Identifier	pcc		501101	1					
ANR	501119	Parameter	const gs_color_space * pcs	262:52:8415:8439	501101	1	True				
ANR	501120	ParameterType	const gs_color_space *		501101	0					
ANR	501121	Identifier	pcs		501101	1					
ANR	501122	CFGEntryNode	ENTRY		501101		True				
ANR	501123	CFGExitNode	EXIT		501101		True				
ANR	501124	Symbol	pcc		501101						
ANR	501125	Symbol	pcs		501101						
ANR	501126	Function	gx_install_DeviceGray	268:0:8520:9151							
ANR	501127	FunctionDef	"gx_install_DeviceGray (gs_color_space * pcs , gs_gstate * pgs)"		501126	0					
ANR	501128	CompoundStatement		270:0:8592:9151	501126	0					
ANR	501129	IfStatement	if ( pcs -> cmm_icc_profile_data != NULL )		501126	0					
ANR	501130	Condition	pcs -> cmm_icc_profile_data != NULL	272:8:8675:8707	501126	0	True				
ANR	501131	EqualityExpression	pcs -> cmm_icc_profile_data != NULL		501126	0		!=			
ANR	501132	PtrMemberAccess	pcs -> cmm_icc_profile_data		501126	0					
ANR	501133	Identifier	pcs		501126	0					
ANR	501134	Identifier	cmm_icc_profile_data		501126	1					
ANR	501135	Identifier	NULL		501126	1					
ANR	501136	ReturnStatement	return 0 ;	273:8:8718:8726	501126	1	True				
ANR	501137	PrimaryExpression	0		501126	0					
ANR	501138	IfStatement	if ( pgs -> icc_manager -> default_gray == NULL )		501126	1					
ANR	501139	Condition	pgs -> icc_manager -> default_gray == NULL	276:8:8800:8837	501126	0	True				
ANR	501140	EqualityExpression	pgs -> icc_manager -> default_gray == NULL		501126	0		==			
ANR	501141	PtrMemberAccess	pgs -> icc_manager -> default_gray		501126	0					
ANR	501142	PtrMemberAccess	pgs -> icc_manager		501126	0					
ANR	501143	Identifier	pgs		501126	0					
ANR	501144	Identifier	icc_manager		501126	1					
ANR	501145	Identifier	default_gray		501126	1					
ANR	501146	Identifier	NULL		501126	1					
ANR	501147	ExpressionStatement	gsicc_init_iccmanager ( pgs )	277:8:8848:8874	501126	1	True				
ANR	501148	CallExpression	gsicc_init_iccmanager ( pgs )		501126	0					
ANR	501149	Callee	gsicc_init_iccmanager		501126	0					
ANR	501150	Identifier	gsicc_init_iccmanager		501126	0					
ANR	501151	ArgumentList	pgs		501126	1					
ANR	501152	Argument	pgs		501126	0					
ANR	501153	Identifier	pgs		501126	0					
ANR	501154	ExpressionStatement	pcs -> cmm_icc_profile_data = pgs -> icc_manager -> default_gray	280:4:8946:9004	501126	2	True				
ANR	501155	AssignmentExpression	pcs -> cmm_icc_profile_data = pgs -> icc_manager -> default_gray		501126	0		=			
ANR	501156	PtrMemberAccess	pcs -> cmm_icc_profile_data		501126	0					
ANR	501157	Identifier	pcs		501126	0					
ANR	501158	Identifier	cmm_icc_profile_data		501126	1					
ANR	501159	PtrMemberAccess	pgs -> icc_manager -> default_gray		501126	1					
ANR	501160	PtrMemberAccess	pgs -> icc_manager		501126	0					
ANR	501161	Identifier	pgs		501126	0					
ANR	501162	Identifier	icc_manager		501126	1					
ANR	501163	Identifier	default_gray		501126	1					
ANR	501164	ExpressionStatement	"gsicc_adjust_profile_rc ( pgs -> icc_manager -> default_gray , 1 , ""gx_install_DeviceGray"" )"	281:4:9010:9093	501126	3	True				
ANR	501165	CallExpression	"gsicc_adjust_profile_rc ( pgs -> icc_manager -> default_gray , 1 , ""gx_install_DeviceGray"" )"		501126	0					
ANR	501166	Callee	gsicc_adjust_profile_rc		501126	0					
ANR	501167	Identifier	gsicc_adjust_profile_rc		501126	0					
ANR	501168	ArgumentList	pgs -> icc_manager -> default_gray		501126	1					
ANR	501169	Argument	pgs -> icc_manager -> default_gray		501126	0					
ANR	501170	PtrMemberAccess	pgs -> icc_manager -> default_gray		501126	0					
ANR	501171	PtrMemberAccess	pgs -> icc_manager		501126	0					
ANR	501172	Identifier	pgs		501126	0					
ANR	501173	Identifier	icc_manager		501126	1					
ANR	501174	Identifier	default_gray		501126	1					
ANR	501175	Argument	1		501126	1					
ANR	501176	PrimaryExpression	1		501126	0					
ANR	501177	Argument	"""gx_install_DeviceGray"""		501126	2					
ANR	501178	PrimaryExpression	"""gx_install_DeviceGray"""		501126	0					
ANR	501179	ExpressionStatement	pcs -> type = & gs_color_space_type_ICC	282:4:9099:9135	501126	4	True				
ANR	501180	AssignmentExpression	pcs -> type = & gs_color_space_type_ICC		501126	0		=			
ANR	501181	PtrMemberAccess	pcs -> type		501126	0					
ANR	501182	Identifier	pcs		501126	0					
ANR	501183	Identifier	type		501126	1					
ANR	501184	UnaryOperationExpression	& gs_color_space_type_ICC		501126	1					
ANR	501185	UnaryOperator	&		501126	0					
ANR	501186	Identifier	gs_color_space_type_ICC		501126	1					
ANR	501187	ReturnStatement	return 0 ;	283:4:9141:9149	501126	5	True				
ANR	501188	PrimaryExpression	0		501126	0					
ANR	501189	ReturnType	static int		501126	1					
ANR	501190	Identifier	gx_install_DeviceGray		501126	2					
ANR	501191	ParameterList	"gs_color_space * pcs , gs_gstate * pgs"		501126	3					
ANR	501192	Parameter	gs_color_space * pcs	269:22:8553:8572	501126	0	True				
ANR	501193	ParameterType	gs_color_space *		501126	0					
ANR	501194	Identifier	pcs		501126	1					
ANR	501195	Parameter	gs_gstate * pgs	269:44:8575:8589	501126	1	True				
ANR	501196	ParameterType	gs_gstate *		501126	0					
ANR	501197	Identifier	pgs		501126	1					
ANR	501198	CFGEntryNode	ENTRY		501126		True				
ANR	501199	CFGExitNode	EXIT		501126		True				
ANR	501200	Symbol	pgs -> icc_manager -> default_gray		501126						
ANR	501201	Symbol	* * pgs		501126						
ANR	501202	Symbol	pcs		501126						
ANR	501203	Symbol	NULL		501126						
ANR	501204	Symbol	pgs -> icc_manager		501126						
ANR	501205	Symbol	pcs -> cmm_icc_profile_data		501126						
ANR	501206	Symbol	* pgs		501126						
ANR	501207	Symbol	& gs_color_space_type_ICC		501126						
ANR	501208	Symbol	* pcs		501126						
ANR	501209	Symbol	* pgs -> icc_manager		501126						
ANR	501210	Symbol	pgs		501126						
ANR	501211	Symbol	pcs -> type		501126						
ANR	501212	Function	gx_num_components_1	286:0:9154:9222							
ANR	501213	FunctionDef	gx_num_components_1 (const gs_color_space * pcs)		501212	0					
ANR	501214	CompoundStatement		288:0:9206:9222	501212	0					
ANR	501215	ReturnStatement	return 1 ;	289:4:9212:9220	501212	0	True				
ANR	501216	PrimaryExpression	1		501212	0					
ANR	501217	ReturnType	int		501212	1					
ANR	501218	Identifier	gx_num_components_1		501212	2					
ANR	501219	ParameterList	const gs_color_space * pcs		501212	3					
ANR	501220	Parameter	const gs_color_space * pcs	287:20:9178:9203	501212	0	True				
ANR	501221	ParameterType	const gs_color_space *		501212	0					
ANR	501222	Identifier	pcs		501212	1					
ANR	501223	CFGEntryNode	ENTRY		501212		True				
ANR	501224	CFGExitNode	EXIT		501212		True				
ANR	501225	Symbol	pcs		501212						
ANR	501226	Function	gx_num_components_3	291:0:9224:9292							
ANR	501227	FunctionDef	gx_num_components_3 (const gs_color_space * pcs)		501226	0					
ANR	501228	CompoundStatement		293:0:9276:9292	501226	0					
ANR	501229	ReturnStatement	return 3 ;	294:4:9282:9290	501226	0	True				
ANR	501230	PrimaryExpression	3		501226	0					
ANR	501231	ReturnType	int		501226	1					
ANR	501232	Identifier	gx_num_components_3		501226	2					
ANR	501233	ParameterList	const gs_color_space * pcs		501226	3					
ANR	501234	Parameter	const gs_color_space * pcs	292:20:9248:9273	501226	0	True				
ANR	501235	ParameterType	const gs_color_space *		501226	0					
ANR	501236	Identifier	pcs		501226	1					
ANR	501237	CFGEntryNode	ENTRY		501226		True				
ANR	501238	CFGExitNode	EXIT		501226		True				
ANR	501239	Symbol	pcs		501226						
ANR	501240	Function	gx_num_components_4	296:0:9294:9362							
ANR	501241	FunctionDef	gx_num_components_4 (const gs_color_space * pcs)		501240	0					
ANR	501242	CompoundStatement		298:0:9346:9362	501240	0					
ANR	501243	ReturnStatement	return 4 ;	299:4:9352:9360	501240	0	True				
ANR	501244	PrimaryExpression	4		501240	0					
ANR	501245	ReturnType	int		501240	1					
ANR	501246	Identifier	gx_num_components_4		501240	2					
ANR	501247	ParameterList	const gs_color_space * pcs		501240	3					
ANR	501248	Parameter	const gs_color_space * pcs	297:20:9318:9343	501240	0	True				
ANR	501249	ParameterType	const gs_color_space *		501240	0					
ANR	501250	Identifier	pcs		501240	1					
ANR	501251	CFGEntryNode	ENTRY		501240		True				
ANR	501252	CFGExitNode	EXIT		501240		True				
ANR	501253	Symbol	pcs		501240						
ANR	501254	Function	gx_polarity_subtractive	302:0:9365:9481							
ANR	501255	FunctionDef	gx_polarity_subtractive (const gs_color_space * pcs)		501254	0					
ANR	501256	CompoundStatement		304:0:9437:9481	501254	0					
ANR	501257	ReturnStatement	return GX_CINFO_POLARITY_SUBTRACTIVE ;	305:4:9443:9479	501254	0	True				
ANR	501258	Identifier	GX_CINFO_POLARITY_SUBTRACTIVE		501254	0					
ANR	501259	ReturnType	gx_color_polarity_t		501254	1					
ANR	501260	Identifier	gx_polarity_subtractive		501254	2					
ANR	501261	ParameterList	const gs_color_space * pcs		501254	3					
ANR	501262	Parameter	const gs_color_space * pcs	303:24:9409:9434	501254	0	True				
ANR	501263	ParameterType	const gs_color_space *		501254	0					
ANR	501264	Identifier	pcs		501254	1					
ANR	501265	CFGEntryNode	ENTRY		501254		True				
ANR	501266	CFGExitNode	EXIT		501254		True				
ANR	501267	Symbol	pcs		501254						
ANR	501268	Symbol	GX_CINFO_POLARITY_SUBTRACTIVE		501254						
ANR	501269	Function	gx_polarity_additive	308:0:9484:9594							
ANR	501270	FunctionDef	gx_polarity_additive (const gs_color_space * pcs)		501269	0					
ANR	501271	CompoundStatement		310:0:9553:9594	501269	0					
ANR	501272	ReturnStatement	return GX_CINFO_POLARITY_ADDITIVE ;	311:4:9559:9592	501269	0	True				
ANR	501273	Identifier	GX_CINFO_POLARITY_ADDITIVE		501269	0					
ANR	501274	ReturnType	gx_color_polarity_t		501269	1					
ANR	501275	Identifier	gx_polarity_additive		501269	2					
ANR	501276	ParameterList	const gs_color_space * pcs		501269	3					
ANR	501277	Parameter	const gs_color_space * pcs	309:21:9525:9550	501269	0	True				
ANR	501278	ParameterType	const gs_color_space *		501269	0					
ANR	501279	Identifier	pcs		501269	1					
ANR	501280	CFGEntryNode	ENTRY		501269		True				
ANR	501281	CFGExitNode	EXIT		501269		True				
ANR	501282	Symbol	pcs		501269						
ANR	501283	Symbol	GX_CINFO_POLARITY_ADDITIVE		501269						
ANR	501284	Function	gx_polarity_unknown	314:0:9597:9705							
ANR	501285	FunctionDef	gx_polarity_unknown (const gs_color_space * pcs)		501284	0					
ANR	501286	CompoundStatement		316:0:9665:9705	501284	0					
ANR	501287	ReturnStatement	return GX_CINFO_POLARITY_UNKNOWN ;	317:4:9671:9703	501284	0	True				
ANR	501288	Identifier	GX_CINFO_POLARITY_UNKNOWN		501284	0					
ANR	501289	ReturnType	gx_color_polarity_t		501284	1					
ANR	501290	Identifier	gx_polarity_unknown		501284	2					
ANR	501291	ParameterList	const gs_color_space * pcs		501284	3					
ANR	501292	Parameter	const gs_color_space * pcs	315:20:9637:9662	501284	0	True				
ANR	501293	ParameterType	const gs_color_space *		501284	0					
ANR	501294	Identifier	pcs		501284	1					
ANR	501295	CFGEntryNode	ENTRY		501284		True				
ANR	501296	CFGExitNode	EXIT		501284		True				
ANR	501297	Symbol	pcs		501284						
ANR	501298	Symbol	GX_CINFO_POLARITY_UNKNOWN		501284						
ANR	501299	Function	gs_cspace_base_space	324:0:9831:9941							
ANR	501300	FunctionDef	gs_cspace_base_space (const gs_color_space * pcspace)		501299	0					
ANR	501301	CompoundStatement		326:0:9907:9941	501299	0					
ANR	501302	ReturnStatement	return pcspace -> base_space ;	327:4:9913:9939	501299	0	True				
ANR	501303	PtrMemberAccess	pcspace -> base_space		501299	0					
ANR	501304	Identifier	pcspace		501299	0					
ANR	501305	Identifier	base_space		501299	1					
ANR	501306	ReturnType	const gs_color_space *		501299	1					
ANR	501307	Identifier	gs_cspace_base_space		501299	2					
ANR	501308	ParameterList	const gs_color_space * pcspace		501299	3					
ANR	501309	Parameter	const gs_color_space * pcspace	325:21:9875:9904	501299	0	True				
ANR	501310	ParameterType	const gs_color_space *		501299	0					
ANR	501311	Identifier	pcspace		501299	1					
ANR	501312	CFGEntryNode	ENTRY		501299		True				
ANR	501313	CFGExitNode	EXIT		501299		True				
ANR	501314	Symbol	pcspace		501299						
ANR	501315	Symbol	pcspace -> base_space		501299						
ANR	501316	Symbol	* pcspace		501299						
ANR	501317	Function	rc_increment_cs	334:0:10100:10167							
ANR	501318	FunctionDef	rc_increment_cs (gs_color_space * pcs)		501317	0					
ANR	501319	CompoundStatement		335:0:10142:10167	501317	0					
ANR	501320	ExpressionStatement	rc_increment ( pcs )	336:4:10148:10165	501317	0	True				
ANR	501321	CallExpression	rc_increment ( pcs )		501317	0					
ANR	501322	Callee	rc_increment		501317	0					
ANR	501323	Identifier	rc_increment		501317	0					
ANR	501324	ArgumentList	pcs		501317	1					
ANR	501325	Argument	pcs		501317	0					
ANR	501326	Identifier	pcs		501317	0					
ANR	501327	ReturnType	void		501317	1					
ANR	501328	Identifier	rc_increment_cs		501317	2					
ANR	501329	ParameterList	gs_color_space * pcs		501317	3					
ANR	501330	Parameter	gs_color_space * pcs	334:21:10121:10139	501317	0	True				
ANR	501331	ParameterType	gs_color_space *		501317	0					
ANR	501332	Identifier	pcs		501317	1					
ANR	501333	CFGEntryNode	ENTRY		501317		True				
ANR	501334	CFGExitNode	EXIT		501317		True				
ANR	501335	Symbol	pcs		501317						
ANR	501336	Function	rc_decrement_cs	339:0:10170:10289							
ANR	501337	FunctionDef	"rc_decrement_cs (gs_color_space * pcs , const char * cname)"		501336	0					
ANR	501338	CompoundStatement		339:61:10231:10289	501336	0					
ANR	501339	IfStatement	if ( pcs )		501336	0					
ANR	501340	Condition	pcs	341:8:10242:10244	501336	0	True				
ANR	501341	Identifier	pcs		501336	0					
ANR	501342	CompoundStatement		3:13:15:15	501336	1					
ANR	501343	ExpressionStatement	"rc_decrement ( pcs , cname )"	342:8:10257:10281	501336	0	True				
ANR	501344	CallExpression	"rc_decrement ( pcs , cname )"		501336	0					
ANR	501345	Callee	rc_decrement		501336	0					
ANR	501346	Identifier	rc_decrement		501336	0					
ANR	501347	ArgumentList	pcs		501336	1					
ANR	501348	Argument	pcs		501336	0					
ANR	501349	Identifier	pcs		501336	0					
ANR	501350	Argument	cname		501336	1					
ANR	501351	Identifier	cname		501336	0					
ANR	501352	ReturnType	void		501336	1					
ANR	501353	Identifier	rc_decrement_cs		501336	2					
ANR	501354	ParameterList	"gs_color_space * pcs , const char * cname"		501336	3					
ANR	501355	Parameter	gs_color_space * pcs	339:21:10191:10209	501336	0	True				
ANR	501356	ParameterType	gs_color_space *		501336	0					
ANR	501357	Identifier	pcs		501336	1					
ANR	501358	Parameter	const char * cname	339:42:10212:10228	501336	1	True				
ANR	501359	ParameterType	const char *		501336	0					
ANR	501360	Identifier	cname		501336	1					
ANR	501361	CFGEntryNode	ENTRY		501336		True				
ANR	501362	CFGExitNode	EXIT		501336		True				
ANR	501363	Symbol	pcs		501336						
ANR	501364	Symbol	cname		501336						
ANR	501365	Function	rc_decrement_only_cs	346:0:10292:10420							
ANR	501366	FunctionDef	"rc_decrement_only_cs (gs_color_space * pcs , const char * cname)"		501365	0					
ANR	501367	CompoundStatement		347:0:10358:10420	501365	0					
ANR	501368	IfStatement	if ( pcs )		501365	0					
ANR	501369	Condition	pcs	348:8:10368:10370	501365	0	True				
ANR	501370	Identifier	pcs		501365	0					
ANR	501371	CompoundStatement		2:13:14:14	501365	1					
ANR	501372	ExpressionStatement	"rc_decrement_only ( pcs , cname )"	349:8:10383:10412	501365	0	True				
ANR	501373	CallExpression	"rc_decrement_only ( pcs , cname )"		501365	0					
ANR	501374	Callee	rc_decrement_only		501365	0					
ANR	501375	Identifier	rc_decrement_only		501365	0					
ANR	501376	ArgumentList	pcs		501365	1					
ANR	501377	Argument	pcs		501365	0					
ANR	501378	Identifier	pcs		501365	0					
ANR	501379	Argument	cname		501365	1					
ANR	501380	Identifier	cname		501365	0					
ANR	501381	ReturnType	void		501365	1					
ANR	501382	Identifier	rc_decrement_only_cs		501365	2					
ANR	501383	ParameterList	"gs_color_space * pcs , const char * cname"		501365	3					
ANR	501384	Parameter	gs_color_space * pcs	346:26:10318:10336	501365	0	True				
ANR	501385	ParameterType	gs_color_space *		501365	0					
ANR	501386	Identifier	pcs		501365	1					
ANR	501387	Parameter	const char * cname	346:47:10339:10355	501365	1	True				
ANR	501388	ParameterType	const char *		501365	0					
ANR	501389	Identifier	cname		501365	1					
ANR	501390	CFGEntryNode	ENTRY		501365		True				
ANR	501391	CFGExitNode	EXIT		501365		True				
ANR	501392	Symbol	pcs		501365						
ANR	501393	Symbol	cname		501365						
ANR	501394	Function	cs_adjust_counts_icc	353:0:10423:10598							
ANR	501395	FunctionDef	"cs_adjust_counts_icc (gs_gstate * pgs , int delta)"		501394	0					
ANR	501396	CompoundStatement		354:0:10476:10598	501394	0					
ANR	501397	IdentifierDeclStatement	gs_color_space * pcs = gs_currentcolorspace_inline ( pgs ) ;	355:4:10482:10536	501394	0	True				
ANR	501398	IdentifierDecl	* pcs = gs_currentcolorspace_inline ( pgs )		501394	0					
ANR	501399	IdentifierDeclType	gs_color_space *		501394	0					
ANR	501400	Identifier	pcs		501394	1					
ANR	501401	AssignmentExpression	* pcs = gs_currentcolorspace_inline ( pgs )		501394	2		=			
ANR	501402	Identifier	pcs		501394	0					
ANR	501403	CallExpression	gs_currentcolorspace_inline ( pgs )		501394	1					
ANR	501404	Callee	gs_currentcolorspace_inline		501394	0					
ANR	501405	Identifier	gs_currentcolorspace_inline		501394	0					
ANR	501406	ArgumentList	pgs		501394	1					
ANR	501407	Argument	pgs		501394	0					
ANR	501408	Identifier	pgs		501394	0					
ANR	501409	IfStatement	if ( pcs )		501394	1					
ANR	501410	Condition	pcs	357:8:10547:10549	501394	0	True				
ANR	501411	Identifier	pcs		501394	0					
ANR	501412	CompoundStatement		4:13:75:75	501394	1					
ANR	501413	ExpressionStatement	"cs_adjust_counts ( pgs , delta )"	358:8:10562:10590	501394	0	True				
ANR	501414	CallExpression	"cs_adjust_counts ( pgs , delta )"		501394	0					
ANR	501415	Callee	cs_adjust_counts		501394	0					
ANR	501416	Identifier	cs_adjust_counts		501394	0					
ANR	501417	ArgumentList	pgs		501394	1					
ANR	501418	Argument	pgs		501394	0					
ANR	501419	Identifier	pgs		501394	0					
ANR	501420	Argument	delta		501394	1					
ANR	501421	Identifier	delta		501394	0					
ANR	501422	ReturnType	void		501394	1					
ANR	501423	Identifier	cs_adjust_counts_icc		501394	2					
ANR	501424	ParameterList	"gs_gstate * pgs , int delta"		501394	3					
ANR	501425	Parameter	gs_gstate * pgs	353:26:10449:10462	501394	0	True				
ANR	501426	ParameterType	gs_gstate *		501394	0					
ANR	501427	Identifier	pgs		501394	1					
ANR	501428	Parameter	int delta	353:42:10465:10473	501394	1	True				
ANR	501429	ParameterType	int		501394	0					
ANR	501430	Identifier	delta		501394	1					
ANR	501431	CFGEntryNode	ENTRY		501394		True				
ANR	501432	CFGExitNode	EXIT		501394		True				
ANR	501433	Symbol	pcs		501394						
ANR	501434	Symbol	delta		501394						
ANR	501435	Symbol	gs_currentcolorspace_inline		501394						
ANR	501436	Symbol	pgs		501394						
ANR	501437	Function	gx_no_install_cspace	365:0:10701:10781							
ANR	501438	FunctionDef	"gx_no_install_cspace (gs_color_space * pcs , gs_gstate * pgs)"		501437	0					
ANR	501439	CompoundStatement		367:0:10765:10781	501437	0					
ANR	501440	ReturnStatement	return 0 ;	368:4:10771:10779	501437	0	True				
ANR	501441	PrimaryExpression	0		501437	0					
ANR	501442	ReturnType	int		501437	1					
ANR	501443	Identifier	gx_no_install_cspace		501437	2					
ANR	501444	ParameterList	"gs_color_space * pcs , gs_gstate * pgs"		501437	3					
ANR	501445	Parameter	gs_color_space * pcs	366:21:10726:10745	501437	0	True				
ANR	501446	ParameterType	gs_color_space *		501437	0					
ANR	501447	Identifier	pcs		501437	1					
ANR	501448	Parameter	gs_gstate * pgs	366:43:10748:10762	501437	1	True				
ANR	501449	ParameterType	gs_gstate *		501437	0					
ANR	501450	Identifier	pgs		501437	1					
ANR	501451	CFGEntryNode	ENTRY		501437		True				
ANR	501452	CFGExitNode	EXIT		501437		True				
ANR	501453	Symbol	pcs		501437						
ANR	501454	Symbol	pgs		501437						
ANR	501455	Function	gx_install_DeviceRGB	372:0:10823:11423							
ANR	501456	FunctionDef	"gx_install_DeviceRGB (gs_color_space * pcs , gs_gstate * pgs)"		501455	0					
ANR	501457	CompoundStatement		374:0:10894:11423	501455	0					
ANR	501458	IfStatement	if ( pcs -> cmm_icc_profile_data != NULL )		501455	0					
ANR	501459	Condition	pcs -> cmm_icc_profile_data != NULL	376:8:10967:10999	501455	0	True				
ANR	501460	EqualityExpression	pcs -> cmm_icc_profile_data != NULL		501455	0		!=			
ANR	501461	PtrMemberAccess	pcs -> cmm_icc_profile_data		501455	0					
ANR	501462	Identifier	pcs		501455	0					
ANR	501463	Identifier	cmm_icc_profile_data		501455	1					
ANR	501464	Identifier	NULL		501455	1					
ANR	501465	ReturnStatement	return 0 ;	377:8:11010:11018	501455	1	True				
ANR	501466	PrimaryExpression	0		501455	0					
ANR	501467	IfStatement	if ( pgs -> icc_manager -> default_rgb == NULL )		501455	1					
ANR	501468	Condition	pgs -> icc_manager -> default_rgb == NULL	380:8:11098:11134	501455	0	True				
ANR	501469	EqualityExpression	pgs -> icc_manager -> default_rgb == NULL		501455	0		==			
ANR	501470	PtrMemberAccess	pgs -> icc_manager -> default_rgb		501455	0					
ANR	501471	PtrMemberAccess	pgs -> icc_manager		501455	0					
ANR	501472	Identifier	pgs		501455	0					
ANR	501473	Identifier	icc_manager		501455	1					
ANR	501474	Identifier	default_rgb		501455	1					
ANR	501475	Identifier	NULL		501455	1					
ANR	501476	ExpressionStatement	gsicc_init_iccmanager ( pgs )	381:8:11145:11171	501455	1	True				
ANR	501477	CallExpression	gsicc_init_iccmanager ( pgs )		501455	0					
ANR	501478	Callee	gsicc_init_iccmanager		501455	0					
ANR	501479	Identifier	gsicc_init_iccmanager		501455	0					
ANR	501480	ArgumentList	pgs		501455	1					
ANR	501481	Argument	pgs		501455	0					
ANR	501482	Identifier	pgs		501455	0					
ANR	501483	ExpressionStatement	pcs -> cmm_icc_profile_data = pgs -> icc_manager -> default_rgb	384:4:11225:11282	501455	2	True				
ANR	501484	AssignmentExpression	pcs -> cmm_icc_profile_data = pgs -> icc_manager -> default_rgb		501455	0		=			
ANR	501485	PtrMemberAccess	pcs -> cmm_icc_profile_data		501455	0					
ANR	501486	Identifier	pcs		501455	0					
ANR	501487	Identifier	cmm_icc_profile_data		501455	1					
ANR	501488	PtrMemberAccess	pgs -> icc_manager -> default_rgb		501455	1					
ANR	501489	PtrMemberAccess	pgs -> icc_manager		501455	0					
ANR	501490	Identifier	pgs		501455	0					
ANR	501491	Identifier	icc_manager		501455	1					
ANR	501492	Identifier	default_rgb		501455	1					
ANR	501493	ExpressionStatement	"gsicc_adjust_profile_rc ( pcs -> cmm_icc_profile_data , 1 , ""gx_install_DeviceRGB"" )"	385:4:11288:11365	501455	3	True				
ANR	501494	CallExpression	"gsicc_adjust_profile_rc ( pcs -> cmm_icc_profile_data , 1 , ""gx_install_DeviceRGB"" )"		501455	0					
ANR	501495	Callee	gsicc_adjust_profile_rc		501455	0					
ANR	501496	Identifier	gsicc_adjust_profile_rc		501455	0					
ANR	501497	ArgumentList	pcs -> cmm_icc_profile_data		501455	1					
ANR	501498	Argument	pcs -> cmm_icc_profile_data		501455	0					
ANR	501499	PtrMemberAccess	pcs -> cmm_icc_profile_data		501455	0					
ANR	501500	Identifier	pcs		501455	0					
ANR	501501	Identifier	cmm_icc_profile_data		501455	1					
ANR	501502	Argument	1		501455	1					
ANR	501503	PrimaryExpression	1		501455	0					
ANR	501504	Argument	"""gx_install_DeviceRGB"""		501455	2					
ANR	501505	PrimaryExpression	"""gx_install_DeviceRGB"""		501455	0					
ANR	501506	ExpressionStatement	pcs -> type = & gs_color_space_type_ICC	386:4:11371:11407	501455	4	True				
ANR	501507	AssignmentExpression	pcs -> type = & gs_color_space_type_ICC		501455	0		=			
ANR	501508	PtrMemberAccess	pcs -> type		501455	0					
ANR	501509	Identifier	pcs		501455	0					
ANR	501510	Identifier	type		501455	1					
ANR	501511	UnaryOperationExpression	& gs_color_space_type_ICC		501455	1					
ANR	501512	UnaryOperator	&		501455	0					
ANR	501513	Identifier	gs_color_space_type_ICC		501455	1					
ANR	501514	ReturnStatement	return 0 ;	387:4:11413:11421	501455	5	True				
ANR	501515	PrimaryExpression	0		501455	0					
ANR	501516	ReturnType	static int		501455	1					
ANR	501517	Identifier	gx_install_DeviceRGB		501455	2					
ANR	501518	ParameterList	"gs_color_space * pcs , gs_gstate * pgs"		501455	3					
ANR	501519	Parameter	gs_color_space * pcs	373:21:10855:10874	501455	0	True				
ANR	501520	ParameterType	gs_color_space *		501455	0					
ANR	501521	Identifier	pcs		501455	1					
ANR	501522	Parameter	gs_gstate * pgs	373:43:10877:10891	501455	1	True				
ANR	501523	ParameterType	gs_gstate *		501455	0					
ANR	501524	Identifier	pgs		501455	1					
ANR	501525	CFGEntryNode	ENTRY		501455		True				
ANR	501526	CFGExitNode	EXIT		501455		True				
ANR	501527	Symbol	* * pgs		501455						
ANR	501528	Symbol	pcs		501455						
ANR	501529	Symbol	NULL		501455						
ANR	501530	Symbol	pgs -> icc_manager		501455						
ANR	501531	Symbol	pgs -> icc_manager -> default_rgb		501455						
ANR	501532	Symbol	pcs -> cmm_icc_profile_data		501455						
ANR	501533	Symbol	* pgs		501455						
ANR	501534	Symbol	& gs_color_space_type_ICC		501455						
ANR	501535	Symbol	* pcs		501455						
ANR	501536	Symbol	* pgs -> icc_manager		501455						
ANR	501537	Symbol	pgs		501455						
ANR	501538	Symbol	pcs -> type		501455						
ANR	501539	Function	gx_install_DeviceCMYK	391:0:11466:12071							
ANR	501540	FunctionDef	"gx_install_DeviceCMYK (gs_color_space * pcs , gs_gstate * pgs)"		501539	0					
ANR	501541	CompoundStatement		393:0:11538:12071	501539	0					
ANR	501542	IfStatement	if ( pcs -> cmm_icc_profile_data != NULL )		501539	0					
ANR	501543	Condition	pcs -> cmm_icc_profile_data != NULL	395:8:11611:11643	501539	0	True				
ANR	501544	EqualityExpression	pcs -> cmm_icc_profile_data != NULL		501539	0		!=			
ANR	501545	PtrMemberAccess	pcs -> cmm_icc_profile_data		501539	0					
ANR	501546	Identifier	pcs		501539	0					
ANR	501547	Identifier	cmm_icc_profile_data		501539	1					
ANR	501548	Identifier	NULL		501539	1					
ANR	501549	ReturnStatement	return 0 ;	396:8:11654:11662	501539	1	True				
ANR	501550	PrimaryExpression	0		501539	0					
ANR	501551	IfStatement	if ( pgs -> icc_manager -> default_cmyk == NULL )		501539	1					
ANR	501552	Condition	pgs -> icc_manager -> default_cmyk == NULL	399:8:11742:11779	501539	0	True				
ANR	501553	EqualityExpression	pgs -> icc_manager -> default_cmyk == NULL		501539	0		==			
ANR	501554	PtrMemberAccess	pgs -> icc_manager -> default_cmyk		501539	0					
ANR	501555	PtrMemberAccess	pgs -> icc_manager		501539	0					
ANR	501556	Identifier	pgs		501539	0					
ANR	501557	Identifier	icc_manager		501539	1					
ANR	501558	Identifier	default_cmyk		501539	1					
ANR	501559	Identifier	NULL		501539	1					
ANR	501560	ExpressionStatement	gsicc_init_iccmanager ( pgs )	400:8:11790:11816	501539	1	True				
ANR	501561	CallExpression	gsicc_init_iccmanager ( pgs )		501539	0					
ANR	501562	Callee	gsicc_init_iccmanager		501539	0					
ANR	501563	Identifier	gsicc_init_iccmanager		501539	0					
ANR	501564	ArgumentList	pgs		501539	1					
ANR	501565	Argument	pgs		501539	0					
ANR	501566	Identifier	pgs		501539	0					
ANR	501567	ExpressionStatement	pcs -> cmm_icc_profile_data = pgs -> icc_manager -> default_cmyk	403:4:11871:11929	501539	2	True				
ANR	501568	AssignmentExpression	pcs -> cmm_icc_profile_data = pgs -> icc_manager -> default_cmyk		501539	0		=			
ANR	501569	PtrMemberAccess	pcs -> cmm_icc_profile_data		501539	0					
ANR	501570	Identifier	pcs		501539	0					
ANR	501571	Identifier	cmm_icc_profile_data		501539	1					
ANR	501572	PtrMemberAccess	pgs -> icc_manager -> default_cmyk		501539	1					
ANR	501573	PtrMemberAccess	pgs -> icc_manager		501539	0					
ANR	501574	Identifier	pgs		501539	0					
ANR	501575	Identifier	icc_manager		501539	1					
ANR	501576	Identifier	default_cmyk		501539	1					
ANR	501577	ExpressionStatement	"gsicc_adjust_profile_rc ( pcs -> cmm_icc_profile_data , 1 , ""gx_install_DeviceCMYK"" )"	404:4:11935:12013	501539	3	True				
ANR	501578	CallExpression	"gsicc_adjust_profile_rc ( pcs -> cmm_icc_profile_data , 1 , ""gx_install_DeviceCMYK"" )"		501539	0					
ANR	501579	Callee	gsicc_adjust_profile_rc		501539	0					
ANR	501580	Identifier	gsicc_adjust_profile_rc		501539	0					
ANR	501581	ArgumentList	pcs -> cmm_icc_profile_data		501539	1					
ANR	501582	Argument	pcs -> cmm_icc_profile_data		501539	0					
ANR	501583	PtrMemberAccess	pcs -> cmm_icc_profile_data		501539	0					
ANR	501584	Identifier	pcs		501539	0					
ANR	501585	Identifier	cmm_icc_profile_data		501539	1					
ANR	501586	Argument	1		501539	1					
ANR	501587	PrimaryExpression	1		501539	0					
ANR	501588	Argument	"""gx_install_DeviceCMYK"""		501539	2					
ANR	501589	PrimaryExpression	"""gx_install_DeviceCMYK"""		501539	0					
ANR	501590	ExpressionStatement	pcs -> type = & gs_color_space_type_ICC	405:4:12019:12055	501539	4	True				
ANR	501591	AssignmentExpression	pcs -> type = & gs_color_space_type_ICC		501539	0		=			
ANR	501592	PtrMemberAccess	pcs -> type		501539	0					
ANR	501593	Identifier	pcs		501539	0					
ANR	501594	Identifier	type		501539	1					
ANR	501595	UnaryOperationExpression	& gs_color_space_type_ICC		501539	1					
ANR	501596	UnaryOperator	&		501539	0					
ANR	501597	Identifier	gs_color_space_type_ICC		501539	1					
ANR	501598	ReturnStatement	return 0 ;	406:4:12061:12069	501539	5	True				
ANR	501599	PrimaryExpression	0		501539	0					
ANR	501600	ReturnType	static int		501539	1					
ANR	501601	Identifier	gx_install_DeviceCMYK		501539	2					
ANR	501602	ParameterList	"gs_color_space * pcs , gs_gstate * pgs"		501539	3					
ANR	501603	Parameter	gs_color_space * pcs	392:22:11499:11518	501539	0	True				
ANR	501604	ParameterType	gs_color_space *		501539	0					
ANR	501605	Identifier	pcs		501539	1					
ANR	501606	Parameter	gs_gstate * pgs	392:44:11521:11535	501539	1	True				
ANR	501607	ParameterType	gs_gstate *		501539	0					
ANR	501608	Identifier	pgs		501539	1					
ANR	501609	CFGEntryNode	ENTRY		501539		True				
ANR	501610	CFGExitNode	EXIT		501539		True				
ANR	501611	Symbol	* * pgs		501539						
ANR	501612	Symbol	pcs		501539						
ANR	501613	Symbol	NULL		501539						
ANR	501614	Symbol	pgs -> icc_manager		501539						
ANR	501615	Symbol	pcs -> cmm_icc_profile_data		501539						
ANR	501616	Symbol	* pgs		501539						
ANR	501617	Symbol	& gs_color_space_type_ICC		501539						
ANR	501618	Symbol	* pcs		501539						
ANR	501619	Symbol	* pgs -> icc_manager		501539						
ANR	501620	Symbol	pgs		501539						
ANR	501621	Symbol	pgs -> icc_manager -> default_cmyk		501539						
ANR	501622	Symbol	pcs -> type		501539						
ANR	501623	Function	gx_spot_colors_set_overprint	419:0:12493:12911							
ANR	501624	FunctionDef	"gx_spot_colors_set_overprint (const gs_color_space * pcs , gs_gstate * pgs)"		501623	0					
ANR	501625	CompoundStatement		421:0:12571:12911	501623	0					
ANR	501626	IdentifierDeclStatement	gs_overprint_params_t params ;	422:4:12577:12607	501623	0	True				
ANR	501627	IdentifierDecl	params		501623	0					
ANR	501628	IdentifierDeclType	gs_overprint_params_t		501623	0					
ANR	501629	Identifier	params		501623	1					
ANR	501630	IfStatement	if ( ( params . retain_any_comps = pgs -> overprint ) )		501623	1					
ANR	501631	Condition	params . retain_any_comps = pgs -> overprint	424:8:12618:12659	501623	0	True				
ANR	501632	AssignmentExpression	params . retain_any_comps = pgs -> overprint		501623	0		=			
ANR	501633	MemberAccess	params . retain_any_comps		501623	0					
ANR	501634	Identifier	params		501623	0					
ANR	501635	Identifier	retain_any_comps		501623	1					
ANR	501636	PtrMemberAccess	pgs -> overprint		501623	1					
ANR	501637	Identifier	pgs		501623	0					
ANR	501638	Identifier	overprint		501623	1					
ANR	501639	CompoundStatement		4:52:90:90	501623	1					
ANR	501640	ExpressionStatement	params . retain_spot_comps = true	425:8:12672:12703	501623	0	True				
ANR	501641	AssignmentExpression	params . retain_spot_comps = true		501623	0		=			
ANR	501642	MemberAccess	params . retain_spot_comps		501623	0					
ANR	501643	Identifier	params		501623	0					
ANR	501644	Identifier	retain_spot_comps		501623	1					
ANR	501645	Identifier	true		501623	1					
ANR	501646	ExpressionStatement	params . retain_any_comps = false	426:8:12713:12744	501623	1	True				
ANR	501647	AssignmentExpression	params . retain_any_comps = false		501623	0		=			
ANR	501648	MemberAccess	params . retain_any_comps		501623	0					
ANR	501649	Identifier	params		501623	0					
ANR	501650	Identifier	retain_any_comps		501623	1					
ANR	501651	Identifier	false		501623	1					
ANR	501652	ExpressionStatement	pgs -> effective_overprint_mode = 0	429:4:12823:12856	501623	2	True				
ANR	501653	AssignmentExpression	pgs -> effective_overprint_mode = 0		501623	0		=			
ANR	501654	PtrMemberAccess	pgs -> effective_overprint_mode		501623	0					
ANR	501655	Identifier	pgs		501623	0					
ANR	501656	Identifier	effective_overprint_mode		501623	1					
ANR	501657	PrimaryExpression	0		501623	1					
ANR	501658	ReturnStatement	"return gs_gstate_update_overprint ( pgs , & params ) ;"	430:4:12862:12909	501623	3	True				
ANR	501659	CallExpression	"gs_gstate_update_overprint ( pgs , & params )"		501623	0					
ANR	501660	Callee	gs_gstate_update_overprint		501623	0					
ANR	501661	Identifier	gs_gstate_update_overprint		501623	0					
ANR	501662	ArgumentList	pgs		501623	1					
ANR	501663	Argument	pgs		501623	0					
ANR	501664	Identifier	pgs		501623	0					
ANR	501665	Argument	& params		501623	1					
ANR	501666	UnaryOperationExpression	& params		501623	0					
ANR	501667	UnaryOperator	&		501623	0					
ANR	501668	Identifier	params		501623	1					
ANR	501669	ReturnType	int		501623	1					
ANR	501670	Identifier	gx_spot_colors_set_overprint		501623	2					
ANR	501671	ParameterList	"const gs_color_space * pcs , gs_gstate * pgs"		501623	3					
ANR	501672	Parameter	const gs_color_space * pcs	420:29:12526:12551	501623	0	True				
ANR	501673	ParameterType	const gs_color_space *		501623	0					
ANR	501674	Identifier	pcs		501623	1					
ANR	501675	Parameter	gs_gstate * pgs	420:57:12554:12568	501623	1	True				
ANR	501676	ParameterType	gs_gstate *		501623	0					
ANR	501677	Identifier	pgs		501623	1					
ANR	501678	CFGEntryNode	ENTRY		501623		True				
ANR	501679	CFGExitNode	EXIT		501623		True				
ANR	501680	Symbol	pcs		501623						
ANR	501681	Symbol	pgs -> effective_overprint_mode		501623						
ANR	501682	Symbol	pgs -> overprint		501623						
ANR	501683	Symbol	* pgs		501623						
ANR	501684	Symbol	true		501623						
ANR	501685	Symbol	false		501623						
ANR	501686	Symbol	params		501623						
ANR	501687	Symbol	params . retain_any_comps		501623						
ANR	501688	Symbol	pgs		501623						
ANR	501689	Symbol	params . retain_spot_comps		501623						
ANR	501690	Symbol	gs_gstate_update_overprint		501623						
ANR	501691	Symbol	& params		501623						
ANR	501692	Function	check_single_comp	433:0:12914:13203							
ANR	501693	FunctionDef	"check_single_comp (int comp , frac targ_val , int ncomps , const frac * pval)"		501692	0					
ANR	501694	CompoundStatement		435:0:13000:13203	501692	0					
ANR	501695	IdentifierDeclStatement	int i ;	436:4:13006:13015	501692	0	True				
ANR	501696	IdentifierDecl	i		501692	0					
ANR	501697	IdentifierDeclType	int		501692	0					
ANR	501698	Identifier	i		501692	1					
ANR	501699	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		501692	1					
ANR	501700	ForInit	i = 0 ;	438:9:13027:13032	501692	0	True				
ANR	501701	AssignmentExpression	i = 0		501692	0		=			
ANR	501702	Identifier	i		501692	0					
ANR	501703	PrimaryExpression	0		501692	1					
ANR	501704	Condition	i < ncomps	438:16:13034:13043	501692	1	True				
ANR	501705	RelationalExpression	i < ncomps		501692	0		<			
ANR	501706	Identifier	i		501692	0					
ANR	501707	Identifier	ncomps		501692	1					
ANR	501708	PostIncDecOperationExpression	i ++	438:28:13046:13048	501692	2	True				
ANR	501709	Identifier	i		501692	0					
ANR	501710	IncDec	++		501692	1					
ANR	501711	CompoundStatement		4:33:50:50	501692	3					
ANR	501712	IfStatement	if ( ( i != comp && pval [ i ] != frac_0 ) || ( i == comp && pval [ i ] != targ_val ) )		501692	0					
ANR	501713	Condition	( i != comp && pval [ i ] != frac_0 ) || ( i == comp && pval [ i ] != targ_val )	439:13:13066:13149	501692	0	True				
ANR	501714	OrExpression	( i != comp && pval [ i ] != frac_0 ) || ( i == comp && pval [ i ] != targ_val )		501692	0		||			
ANR	501715	AndExpression	i != comp && pval [ i ] != frac_0		501692	0		&&			
ANR	501716	EqualityExpression	i != comp		501692	0		!=			
ANR	501717	Identifier	i		501692	0					
ANR	501718	Identifier	comp		501692	1					
ANR	501719	EqualityExpression	pval [ i ] != frac_0		501692	1		!=			
ANR	501720	ArrayIndexing	pval [ i ]		501692	0					
ANR	501721	Identifier	pval		501692	0					
ANR	501722	Identifier	i		501692	1					
ANR	501723	Identifier	frac_0		501692	1					
ANR	501724	AndExpression	i == comp && pval [ i ] != targ_val		501692	1		&&			
ANR	501725	EqualityExpression	i == comp		501692	0		==			
ANR	501726	Identifier	i		501692	0					
ANR	501727	Identifier	comp		501692	1					
ANR	501728	EqualityExpression	pval [ i ] != targ_val		501692	1		!=			
ANR	501729	ArrayIndexing	pval [ i ]		501692	0					
ANR	501730	Identifier	pval		501692	0					
ANR	501731	Identifier	i		501692	1					
ANR	501732	Identifier	targ_val		501692	1					
ANR	501733	ReturnStatement	return false ;	441:12:13166:13178	501692	1	True				
ANR	501734	Identifier	false		501692	0					
ANR	501735	ReturnStatement	return true ;	443:4:13190:13201	501692	2	True				
ANR	501736	Identifier	true		501692	0					
ANR	501737	ReturnType	static bool		501692	1					
ANR	501738	Identifier	check_single_comp		501692	2					
ANR	501739	ParameterList	"int comp , frac targ_val , int ncomps , const frac * pval"		501692	3					
ANR	501740	Parameter	int comp	434:18:12944:12951	501692	0	True				
ANR	501741	ParameterType	int		501692	0					
ANR	501742	Identifier	comp		501692	1					
ANR	501743	Parameter	frac targ_val	434:28:12954:12966	501692	1	True				
ANR	501744	ParameterType	frac		501692	0					
ANR	501745	Identifier	targ_val		501692	1					
ANR	501746	Parameter	int ncomps	434:43:12969:12978	501692	2	True				
ANR	501747	ParameterType	int		501692	0					
ANR	501748	Identifier	ncomps		501692	1					
ANR	501749	Parameter	const frac * pval	434:55:12981:12997	501692	3	True				
ANR	501750	ParameterType	const frac *		501692	0					
ANR	501751	Identifier	pval		501692	1					
ANR	501752	CFGEntryNode	ENTRY		501692		True				
ANR	501753	CFGExitNode	EXIT		501692		True				
ANR	501754	Symbol	comp		501692						
ANR	501755	Symbol	targ_val		501692						
ANR	501756	Symbol	* i		501692						
ANR	501757	Symbol	* pval		501692						
ANR	501758	Symbol	pval		501692						
ANR	501759	Symbol	false		501692						
ANR	501760	Symbol	true		501692						
ANR	501761	Symbol	i		501692						
ANR	501762	Symbol	ncomps		501692						
ANR	501763	Symbol	frac_0		501692						
ANR	501764	Function	check_cmyk_color_model_comps	463:0:14070:16878							
ANR	501765	FunctionDef	check_cmyk_color_model_comps (gx_device * dev)		501764	0					
ANR	501766	CompoundStatement		465:0:14131:16878	501764	0					
ANR	501767	IdentifierDeclStatement	gx_device_color_info * pcinfo = & dev -> color_info ;	466:4:14137:14194	501764	0	True				
ANR	501768	IdentifierDecl	* pcinfo = & dev -> color_info		501764	0					
ANR	501769	IdentifierDeclType	gx_device_color_info *		501764	0					
ANR	501770	Identifier	pcinfo		501764	1					
ANR	501771	AssignmentExpression	* pcinfo = & dev -> color_info		501764	2		=			
ANR	501772	Identifier	pcinfo		501764	0					
ANR	501773	UnaryOperationExpression	& dev -> color_info		501764	1					
ANR	501774	UnaryOperator	&		501764	0					
ANR	501775	PtrMemberAccess	dev -> color_info		501764	1					
ANR	501776	Identifier	dev		501764	0					
ANR	501777	Identifier	color_info		501764	1					
ANR	501778	IdentifierDeclStatement	uchar ncomps = pcinfo -> num_components ;	467:4:14200:14263	501764	1	True				
ANR	501779	IdentifierDecl	ncomps = pcinfo -> num_components		501764	0					
ANR	501780	IdentifierDeclType	uchar		501764	0					
ANR	501781	Identifier	ncomps		501764	1					
ANR	501782	AssignmentExpression	ncomps = pcinfo -> num_components		501764	2		=			
ANR	501783	Identifier	ncomps		501764	0					
ANR	501784	PtrMemberAccess	pcinfo -> num_components		501764	1					
ANR	501785	Identifier	pcinfo		501764	0					
ANR	501786	Identifier	num_components		501764	1					
ANR	501787	IdentifierDeclStatement	"int cyan_c , magenta_c , yellow_c , black_c ;"	468:4:14269:14337	501764	2	True				
ANR	501788	IdentifierDecl	cyan_c		501764	0					
ANR	501789	IdentifierDeclType	int		501764	0					
ANR	501790	Identifier	cyan_c		501764	1					
ANR	501791	IdentifierDecl	magenta_c		501764	1					
ANR	501792	IdentifierDeclType	int		501764	0					
ANR	501793	Identifier	magenta_c		501764	1					
ANR	501794	IdentifierDecl	yellow_c		501764	2					
ANR	501795	IdentifierDeclType	int		501764	0					
ANR	501796	Identifier	yellow_c		501764	1					
ANR	501797	IdentifierDecl	black_c		501764	3					
ANR	501798	IdentifierDeclType	int		501764	0					
ANR	501799	Identifier	black_c		501764	1					
ANR	501800	IdentifierDeclStatement	subclass_color_mappings scm ;	469:4:14343:14378	501764	3	True				
ANR	501801	IdentifierDecl	scm		501764	0					
ANR	501802	IdentifierDeclType	subclass_color_mappings		501764	0					
ANR	501803	Identifier	scm		501764	1					
ANR	501804	IdentifierDeclStatement	frac frac_14 = frac_1 / 4 ;	470:4:14384:14436	501764	4	True				
ANR	501805	IdentifierDecl	frac_14 = frac_1 / 4		501764	0					
ANR	501806	IdentifierDeclType	frac		501764	0					
ANR	501807	Identifier	frac_14		501764	1					
ANR	501808	AssignmentExpression	frac_14 = frac_1 / 4		501764	2		=			
ANR	501809	Identifier	frac_14		501764	0					
ANR	501810	MultiplicativeExpression	frac_1 / 4		501764	1		/			
ANR	501811	Identifier	frac_1		501764	0					
ANR	501812	PrimaryExpression	4		501764	1					
ANR	501813	IdentifierDeclStatement	frac out [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	471:4:14442:14509	501764	5	True				
ANR	501814	IdentifierDecl	out [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		501764	0					
ANR	501815	IdentifierDeclType	frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		501764	0					
ANR	501816	Identifier	out		501764	1					
ANR	501817	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		501764	2					
ANR	501818	IdentifierDeclStatement	gx_color_index process_comps ;	472:4:14515:14560	501764	6	True				
ANR	501819	IdentifierDecl	process_comps		501764	0					
ANR	501820	IdentifierDeclType	gx_color_index		501764	0					
ANR	501821	Identifier	process_comps		501764	1					
ANR	501822	IfStatement	"if ( ncomps < 4 || ( cyan_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Cyan"" , sizeof ( ""Cyan"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || cyan_c == GX_DEVICE_COLOR_MAX_COMPONENTS || ( magenta_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Magenta"" , sizeof ( ""Magenta"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || magenta_c == GX_DEVICE_COLOR_MAX_COMPONENTS || ( yellow_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Yellow"" , sizeof ( ""Yellow"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || yellow_c == GX_DEVICE_COLOR_MAX_COMPONENTS || ( black_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Black"" , sizeof ( ""Black"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || black_c == GX_DEVICE_COLOR_MAX_COMPONENTS )"		501764	7					
ANR	501823	Condition	"ncomps < 4 || ( cyan_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Cyan"" , sizeof ( ""Cyan"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || cyan_c == GX_DEVICE_COLOR_MAX_COMPONENTS || ( magenta_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Magenta"" , sizeof ( ""Magenta"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || magenta_c == GX_DEVICE_COLOR_MAX_COMPONENTS || ( yellow_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Yellow"" , sizeof ( ""Yellow"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || yellow_c == GX_DEVICE_COLOR_MAX_COMPONENTS || ( black_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Black"" , sizeof ( ""Black"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || black_c == GX_DEVICE_COLOR_MAX_COMPONENTS"	475:9:14619:15832	501764	0	True				
ANR	501824	OrExpression	"ncomps < 4 || ( cyan_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Cyan"" , sizeof ( ""Cyan"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || cyan_c == GX_DEVICE_COLOR_MAX_COMPONENTS || ( magenta_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Magenta"" , sizeof ( ""Magenta"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || magenta_c == GX_DEVICE_COLOR_MAX_COMPONENTS || ( yellow_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Yellow"" , sizeof ( ""Yellow"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || yellow_c == GX_DEVICE_COLOR_MAX_COMPONENTS || ( black_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Black"" , sizeof ( ""Black"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || black_c == GX_DEVICE_COLOR_MAX_COMPONENTS"		501764	0		||			
ANR	501825	RelationalExpression	ncomps < 4		501764	0		<			
ANR	501826	Identifier	ncomps		501764	0					
ANR	501827	PrimaryExpression	4		501764	1					
ANR	501828	OrExpression	"( cyan_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Cyan"" , sizeof ( ""Cyan"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || cyan_c == GX_DEVICE_COLOR_MAX_COMPONENTS || ( magenta_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Magenta"" , sizeof ( ""Magenta"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || magenta_c == GX_DEVICE_COLOR_MAX_COMPONENTS || ( yellow_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Yellow"" , sizeof ( ""Yellow"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || yellow_c == GX_DEVICE_COLOR_MAX_COMPONENTS || ( black_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Black"" , sizeof ( ""Black"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || black_c == GX_DEVICE_COLOR_MAX_COMPONENTS"		501764	1		||			
ANR	501829	RelationalExpression	"( cyan_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Cyan"" , sizeof ( ""Cyan"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0"		501764	0		<			
ANR	501830	AssignmentExpression	"cyan_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Cyan"" , sizeof ( ""Cyan"" ) - 1 , NO_COMP_NAME_TYPE )"		501764	0		=			
ANR	501831	Identifier	cyan_c		501764	0					
ANR	501832	CallExpression	"dev_proc ( dev , get_color_comp_index ) ( dev , ""Cyan"" , sizeof ( ""Cyan"" ) - 1 , NO_COMP_NAME_TYPE )"		501764	1					
ANR	501833	Callee	"dev_proc ( dev , get_color_comp_index )"		501764	0					
ANR	501834	CallExpression	"dev_proc ( dev , get_color_comp_index )"		501764	0					
ANR	501835	Callee	dev_proc		501764	0					
ANR	501836	Identifier	dev_proc		501764	0					
ANR	501837	ArgumentList	dev		501764	1					
ANR	501838	Argument	dev		501764	0					
ANR	501839	Identifier	dev		501764	0					
ANR	501840	Argument	get_color_comp_index		501764	1					
ANR	501841	Identifier	get_color_comp_index		501764	0					
ANR	501842	ArgumentList	dev		501764	1					
ANR	501843	Argument	dev		501764	0					
ANR	501844	Identifier	dev		501764	0					
ANR	501845	Argument	"""Cyan"""		501764	1					
ANR	501846	PrimaryExpression	"""Cyan"""		501764	0					
ANR	501847	Argument	"sizeof ( ""Cyan"" ) - 1"		501764	2					
ANR	501848	AdditiveExpression	"sizeof ( ""Cyan"" ) - 1"		501764	0		-			
ANR	501849	SizeofExpression	"sizeof ( ""Cyan"" )"		501764	0					
ANR	501850	Sizeof	sizeof		501764	0					
ANR	501851	PrimaryExpression	"""Cyan"""		501764	1					
ANR	501852	PrimaryExpression	1		501764	1					
ANR	501853	Argument	NO_COMP_NAME_TYPE		501764	3					
ANR	501854	Identifier	NO_COMP_NAME_TYPE		501764	0					
ANR	501855	PrimaryExpression	0		501764	1					
ANR	501856	OrExpression	"cyan_c == GX_DEVICE_COLOR_MAX_COMPONENTS || ( magenta_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Magenta"" , sizeof ( ""Magenta"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || magenta_c == GX_DEVICE_COLOR_MAX_COMPONENTS || ( yellow_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Yellow"" , sizeof ( ""Yellow"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || yellow_c == GX_DEVICE_COLOR_MAX_COMPONENTS || ( black_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Black"" , sizeof ( ""Black"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || black_c == GX_DEVICE_COLOR_MAX_COMPONENTS"		501764	1		||			
ANR	501857	EqualityExpression	cyan_c == GX_DEVICE_COLOR_MAX_COMPONENTS		501764	0		==			
ANR	501858	Identifier	cyan_c		501764	0					
ANR	501859	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		501764	1					
ANR	501860	OrExpression	"( magenta_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Magenta"" , sizeof ( ""Magenta"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || magenta_c == GX_DEVICE_COLOR_MAX_COMPONENTS || ( yellow_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Yellow"" , sizeof ( ""Yellow"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || yellow_c == GX_DEVICE_COLOR_MAX_COMPONENTS || ( black_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Black"" , sizeof ( ""Black"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || black_c == GX_DEVICE_COLOR_MAX_COMPONENTS"		501764	1		||			
ANR	501861	RelationalExpression	"( magenta_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Magenta"" , sizeof ( ""Magenta"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0"		501764	0		<			
ANR	501862	AssignmentExpression	"magenta_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Magenta"" , sizeof ( ""Magenta"" ) - 1 , NO_COMP_NAME_TYPE )"		501764	0		=			
ANR	501863	Identifier	magenta_c		501764	0					
ANR	501864	CallExpression	"dev_proc ( dev , get_color_comp_index ) ( dev , ""Magenta"" , sizeof ( ""Magenta"" ) - 1 , NO_COMP_NAME_TYPE )"		501764	1					
ANR	501865	Callee	"dev_proc ( dev , get_color_comp_index )"		501764	0					
ANR	501866	CallExpression	"dev_proc ( dev , get_color_comp_index )"		501764	0					
ANR	501867	Callee	dev_proc		501764	0					
ANR	501868	Identifier	dev_proc		501764	0					
ANR	501869	ArgumentList	dev		501764	1					
ANR	501870	Argument	dev		501764	0					
ANR	501871	Identifier	dev		501764	0					
ANR	501872	Argument	get_color_comp_index		501764	1					
ANR	501873	Identifier	get_color_comp_index		501764	0					
ANR	501874	ArgumentList	dev		501764	1					
ANR	501875	Argument	dev		501764	0					
ANR	501876	Identifier	dev		501764	0					
ANR	501877	Argument	"""Magenta"""		501764	1					
ANR	501878	PrimaryExpression	"""Magenta"""		501764	0					
ANR	501879	Argument	"sizeof ( ""Magenta"" ) - 1"		501764	2					
ANR	501880	AdditiveExpression	"sizeof ( ""Magenta"" ) - 1"		501764	0		-			
ANR	501881	SizeofExpression	"sizeof ( ""Magenta"" )"		501764	0					
ANR	501882	Sizeof	sizeof		501764	0					
ANR	501883	PrimaryExpression	"""Magenta"""		501764	1					
ANR	501884	PrimaryExpression	1		501764	1					
ANR	501885	Argument	NO_COMP_NAME_TYPE		501764	3					
ANR	501886	Identifier	NO_COMP_NAME_TYPE		501764	0					
ANR	501887	PrimaryExpression	0		501764	1					
ANR	501888	OrExpression	"magenta_c == GX_DEVICE_COLOR_MAX_COMPONENTS || ( yellow_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Yellow"" , sizeof ( ""Yellow"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || yellow_c == GX_DEVICE_COLOR_MAX_COMPONENTS || ( black_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Black"" , sizeof ( ""Black"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || black_c == GX_DEVICE_COLOR_MAX_COMPONENTS"		501764	1		||			
ANR	501889	EqualityExpression	magenta_c == GX_DEVICE_COLOR_MAX_COMPONENTS		501764	0		==			
ANR	501890	Identifier	magenta_c		501764	0					
ANR	501891	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		501764	1					
ANR	501892	OrExpression	"( yellow_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Yellow"" , sizeof ( ""Yellow"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || yellow_c == GX_DEVICE_COLOR_MAX_COMPONENTS || ( black_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Black"" , sizeof ( ""Black"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || black_c == GX_DEVICE_COLOR_MAX_COMPONENTS"		501764	1		||			
ANR	501893	RelationalExpression	"( yellow_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Yellow"" , sizeof ( ""Yellow"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0"		501764	0		<			
ANR	501894	AssignmentExpression	"yellow_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Yellow"" , sizeof ( ""Yellow"" ) - 1 , NO_COMP_NAME_TYPE )"		501764	0		=			
ANR	501895	Identifier	yellow_c		501764	0					
ANR	501896	CallExpression	"dev_proc ( dev , get_color_comp_index ) ( dev , ""Yellow"" , sizeof ( ""Yellow"" ) - 1 , NO_COMP_NAME_TYPE )"		501764	1					
ANR	501897	Callee	"dev_proc ( dev , get_color_comp_index )"		501764	0					
ANR	501898	CallExpression	"dev_proc ( dev , get_color_comp_index )"		501764	0					
ANR	501899	Callee	dev_proc		501764	0					
ANR	501900	Identifier	dev_proc		501764	0					
ANR	501901	ArgumentList	dev		501764	1					
ANR	501902	Argument	dev		501764	0					
ANR	501903	Identifier	dev		501764	0					
ANR	501904	Argument	get_color_comp_index		501764	1					
ANR	501905	Identifier	get_color_comp_index		501764	0					
ANR	501906	ArgumentList	dev		501764	1					
ANR	501907	Argument	dev		501764	0					
ANR	501908	Identifier	dev		501764	0					
ANR	501909	Argument	"""Yellow"""		501764	1					
ANR	501910	PrimaryExpression	"""Yellow"""		501764	0					
ANR	501911	Argument	"sizeof ( ""Yellow"" ) - 1"		501764	2					
ANR	501912	AdditiveExpression	"sizeof ( ""Yellow"" ) - 1"		501764	0		-			
ANR	501913	SizeofExpression	"sizeof ( ""Yellow"" )"		501764	0					
ANR	501914	Sizeof	sizeof		501764	0					
ANR	501915	PrimaryExpression	"""Yellow"""		501764	1					
ANR	501916	PrimaryExpression	1		501764	1					
ANR	501917	Argument	NO_COMP_NAME_TYPE		501764	3					
ANR	501918	Identifier	NO_COMP_NAME_TYPE		501764	0					
ANR	501919	PrimaryExpression	0		501764	1					
ANR	501920	OrExpression	"yellow_c == GX_DEVICE_COLOR_MAX_COMPONENTS || ( black_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Black"" , sizeof ( ""Black"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || black_c == GX_DEVICE_COLOR_MAX_COMPONENTS"		501764	1		||			
ANR	501921	EqualityExpression	yellow_c == GX_DEVICE_COLOR_MAX_COMPONENTS		501764	0		==			
ANR	501922	Identifier	yellow_c		501764	0					
ANR	501923	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		501764	1					
ANR	501924	OrExpression	"( black_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Black"" , sizeof ( ""Black"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0 || black_c == GX_DEVICE_COLOR_MAX_COMPONENTS"		501764	1		||			
ANR	501925	RelationalExpression	"( black_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Black"" , sizeof ( ""Black"" ) - 1 , NO_COMP_NAME_TYPE ) ) < 0"		501764	0		<			
ANR	501926	AssignmentExpression	"black_c = dev_proc ( dev , get_color_comp_index ) ( dev , ""Black"" , sizeof ( ""Black"" ) - 1 , NO_COMP_NAME_TYPE )"		501764	0		=			
ANR	501927	Identifier	black_c		501764	0					
ANR	501928	CallExpression	"dev_proc ( dev , get_color_comp_index ) ( dev , ""Black"" , sizeof ( ""Black"" ) - 1 , NO_COMP_NAME_TYPE )"		501764	1					
ANR	501929	Callee	"dev_proc ( dev , get_color_comp_index )"		501764	0					
ANR	501930	CallExpression	"dev_proc ( dev , get_color_comp_index )"		501764	0					
ANR	501931	Callee	dev_proc		501764	0					
ANR	501932	Identifier	dev_proc		501764	0					
ANR	501933	ArgumentList	dev		501764	1					
ANR	501934	Argument	dev		501764	0					
ANR	501935	Identifier	dev		501764	0					
ANR	501936	Argument	get_color_comp_index		501764	1					
ANR	501937	Identifier	get_color_comp_index		501764	0					
ANR	501938	ArgumentList	dev		501764	1					
ANR	501939	Argument	dev		501764	0					
ANR	501940	Identifier	dev		501764	0					
ANR	501941	Argument	"""Black"""		501764	1					
ANR	501942	PrimaryExpression	"""Black"""		501764	0					
ANR	501943	Argument	"sizeof ( ""Black"" ) - 1"		501764	2					
ANR	501944	AdditiveExpression	"sizeof ( ""Black"" ) - 1"		501764	0		-			
ANR	501945	SizeofExpression	"sizeof ( ""Black"" )"		501764	0					
ANR	501946	Sizeof	sizeof		501764	0					
ANR	501947	PrimaryExpression	"""Black"""		501764	1					
ANR	501948	PrimaryExpression	1		501764	1					
ANR	501949	Argument	NO_COMP_NAME_TYPE		501764	3					
ANR	501950	Identifier	NO_COMP_NAME_TYPE		501764	0					
ANR	501951	PrimaryExpression	0		501764	1					
ANR	501952	EqualityExpression	black_c == GX_DEVICE_COLOR_MAX_COMPONENTS		501764	1		==			
ANR	501953	Identifier	black_c		501764	0					
ANR	501954	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		501764	1					
ANR	501955	ReturnStatement	return 0 ;	500:8:15853:15861	501764	1	True				
ANR	501956	PrimaryExpression	0		501764	0					
ANR	501957	ExpressionStatement	scm = get_color_mapping_procs_subclass ( dev )	503:4:15896:15939	501764	8	True				
ANR	501958	AssignmentExpression	scm = get_color_mapping_procs_subclass ( dev )		501764	0		=			
ANR	501959	Identifier	scm		501764	0					
ANR	501960	CallExpression	get_color_mapping_procs_subclass ( dev )		501764	1					
ANR	501961	Callee	get_color_mapping_procs_subclass		501764	0					
ANR	501962	Identifier	get_color_mapping_procs_subclass		501764	0					
ANR	501963	ArgumentList	dev		501764	1					
ANR	501964	Argument	dev		501764	0					
ANR	501965	Identifier	dev		501764	0					
ANR	501966	ExpressionStatement	"map_cmyk_subclass ( scm , frac_14 , frac_0 , frac_0 , frac_0 , out )"	505:4:15946:16006	501764	9	True				
ANR	501967	CallExpression	"map_cmyk_subclass ( scm , frac_14 , frac_0 , frac_0 , frac_0 , out )"		501764	0					
ANR	501968	Callee	map_cmyk_subclass		501764	0					
ANR	501969	Identifier	map_cmyk_subclass		501764	0					
ANR	501970	ArgumentList	scm		501764	1					
ANR	501971	Argument	scm		501764	0					
ANR	501972	Identifier	scm		501764	0					
ANR	501973	Argument	frac_14		501764	1					
ANR	501974	Identifier	frac_14		501764	0					
ANR	501975	Argument	frac_0		501764	2					
ANR	501976	Identifier	frac_0		501764	0					
ANR	501977	Argument	frac_0		501764	3					
ANR	501978	Identifier	frac_0		501764	0					
ANR	501979	Argument	frac_0		501764	4					
ANR	501980	Identifier	frac_0		501764	0					
ANR	501981	Argument	out		501764	5					
ANR	501982	Identifier	out		501764	0					
ANR	501983	IfStatement	"if ( ! check_single_comp ( cyan_c , frac_14 , ncomps , out ) )"		501764	10					
ANR	501984	Condition	"! check_single_comp ( cyan_c , frac_14 , ncomps , out )"	506:8:16016:16063	501764	0	True				
ANR	501985	UnaryOperationExpression	"! check_single_comp ( cyan_c , frac_14 , ncomps , out )"		501764	0					
ANR	501986	UnaryOperator	!		501764	0					
ANR	501987	CallExpression	"check_single_comp ( cyan_c , frac_14 , ncomps , out )"		501764	1					
ANR	501988	Callee	check_single_comp		501764	0					
ANR	501989	Identifier	check_single_comp		501764	0					
ANR	501990	ArgumentList	cyan_c		501764	1					
ANR	501991	Argument	cyan_c		501764	0					
ANR	501992	Identifier	cyan_c		501764	0					
ANR	501993	Argument	frac_14		501764	1					
ANR	501994	Identifier	frac_14		501764	0					
ANR	501995	Argument	ncomps		501764	2					
ANR	501996	Identifier	ncomps		501764	0					
ANR	501997	Argument	out		501764	3					
ANR	501998	Identifier	out		501764	0					
ANR	501999	ReturnStatement	return 0 ;	507:8:16074:16082	501764	1	True				
ANR	502000	PrimaryExpression	0		501764	0					
ANR	502001	ExpressionStatement	"map_cmyk_subclass ( scm , frac_0 , frac_14 , frac_0 , frac_0 , out )"	508:4:16088:16148	501764	11	True				
ANR	502002	CallExpression	"map_cmyk_subclass ( scm , frac_0 , frac_14 , frac_0 , frac_0 , out )"		501764	0					
ANR	502003	Callee	map_cmyk_subclass		501764	0					
ANR	502004	Identifier	map_cmyk_subclass		501764	0					
ANR	502005	ArgumentList	scm		501764	1					
ANR	502006	Argument	scm		501764	0					
ANR	502007	Identifier	scm		501764	0					
ANR	502008	Argument	frac_0		501764	1					
ANR	502009	Identifier	frac_0		501764	0					
ANR	502010	Argument	frac_14		501764	2					
ANR	502011	Identifier	frac_14		501764	0					
ANR	502012	Argument	frac_0		501764	3					
ANR	502013	Identifier	frac_0		501764	0					
ANR	502014	Argument	frac_0		501764	4					
ANR	502015	Identifier	frac_0		501764	0					
ANR	502016	Argument	out		501764	5					
ANR	502017	Identifier	out		501764	0					
ANR	502018	IfStatement	"if ( ! check_single_comp ( magenta_c , frac_14 , ncomps , out ) )"		501764	12					
ANR	502019	Condition	"! check_single_comp ( magenta_c , frac_14 , ncomps , out )"	509:8:16158:16208	501764	0	True				
ANR	502020	UnaryOperationExpression	"! check_single_comp ( magenta_c , frac_14 , ncomps , out )"		501764	0					
ANR	502021	UnaryOperator	!		501764	0					
ANR	502022	CallExpression	"check_single_comp ( magenta_c , frac_14 , ncomps , out )"		501764	1					
ANR	502023	Callee	check_single_comp		501764	0					
ANR	502024	Identifier	check_single_comp		501764	0					
ANR	502025	ArgumentList	magenta_c		501764	1					
ANR	502026	Argument	magenta_c		501764	0					
ANR	502027	Identifier	magenta_c		501764	0					
ANR	502028	Argument	frac_14		501764	1					
ANR	502029	Identifier	frac_14		501764	0					
ANR	502030	Argument	ncomps		501764	2					
ANR	502031	Identifier	ncomps		501764	0					
ANR	502032	Argument	out		501764	3					
ANR	502033	Identifier	out		501764	0					
ANR	502034	ReturnStatement	return 0 ;	510:8:16219:16227	501764	1	True				
ANR	502035	PrimaryExpression	0		501764	0					
ANR	502036	ExpressionStatement	"map_cmyk_subclass ( scm , frac_0 , frac_0 , frac_14 , frac_0 , out )"	511:4:16233:16293	501764	13	True				
ANR	502037	CallExpression	"map_cmyk_subclass ( scm , frac_0 , frac_0 , frac_14 , frac_0 , out )"		501764	0					
ANR	502038	Callee	map_cmyk_subclass		501764	0					
ANR	502039	Identifier	map_cmyk_subclass		501764	0					
ANR	502040	ArgumentList	scm		501764	1					
ANR	502041	Argument	scm		501764	0					
ANR	502042	Identifier	scm		501764	0					
ANR	502043	Argument	frac_0		501764	1					
ANR	502044	Identifier	frac_0		501764	0					
ANR	502045	Argument	frac_0		501764	2					
ANR	502046	Identifier	frac_0		501764	0					
ANR	502047	Argument	frac_14		501764	3					
ANR	502048	Identifier	frac_14		501764	0					
ANR	502049	Argument	frac_0		501764	4					
ANR	502050	Identifier	frac_0		501764	0					
ANR	502051	Argument	out		501764	5					
ANR	502052	Identifier	out		501764	0					
ANR	502053	IfStatement	"if ( ! check_single_comp ( yellow_c , frac_14 , ncomps , out ) )"		501764	14					
ANR	502054	Condition	"! check_single_comp ( yellow_c , frac_14 , ncomps , out )"	512:8:16303:16352	501764	0	True				
ANR	502055	UnaryOperationExpression	"! check_single_comp ( yellow_c , frac_14 , ncomps , out )"		501764	0					
ANR	502056	UnaryOperator	!		501764	0					
ANR	502057	CallExpression	"check_single_comp ( yellow_c , frac_14 , ncomps , out )"		501764	1					
ANR	502058	Callee	check_single_comp		501764	0					
ANR	502059	Identifier	check_single_comp		501764	0					
ANR	502060	ArgumentList	yellow_c		501764	1					
ANR	502061	Argument	yellow_c		501764	0					
ANR	502062	Identifier	yellow_c		501764	0					
ANR	502063	Argument	frac_14		501764	1					
ANR	502064	Identifier	frac_14		501764	0					
ANR	502065	Argument	ncomps		501764	2					
ANR	502066	Identifier	ncomps		501764	0					
ANR	502067	Argument	out		501764	3					
ANR	502068	Identifier	out		501764	0					
ANR	502069	ReturnStatement	return false ;	513:8:16363:16375	501764	1	True				
ANR	502070	Identifier	false		501764	0					
ANR	502071	ExpressionStatement	"map_cmyk_subclass ( scm , frac_0 , frac_0 , frac_0 , frac_14 , out )"	514:4:16381:16441	501764	15	True				
ANR	502072	CallExpression	"map_cmyk_subclass ( scm , frac_0 , frac_0 , frac_0 , frac_14 , out )"		501764	0					
ANR	502073	Callee	map_cmyk_subclass		501764	0					
ANR	502074	Identifier	map_cmyk_subclass		501764	0					
ANR	502075	ArgumentList	scm		501764	1					
ANR	502076	Argument	scm		501764	0					
ANR	502077	Identifier	scm		501764	0					
ANR	502078	Argument	frac_0		501764	1					
ANR	502079	Identifier	frac_0		501764	0					
ANR	502080	Argument	frac_0		501764	2					
ANR	502081	Identifier	frac_0		501764	0					
ANR	502082	Argument	frac_0		501764	3					
ANR	502083	Identifier	frac_0		501764	0					
ANR	502084	Argument	frac_14		501764	4					
ANR	502085	Identifier	frac_14		501764	0					
ANR	502086	Argument	out		501764	5					
ANR	502087	Identifier	out		501764	0					
ANR	502088	IfStatement	"if ( ! check_single_comp ( black_c , frac_14 , ncomps , out ) )"		501764	16					
ANR	502089	Condition	"! check_single_comp ( black_c , frac_14 , ncomps , out )"	515:8:16451:16499	501764	0	True				
ANR	502090	UnaryOperationExpression	"! check_single_comp ( black_c , frac_14 , ncomps , out )"		501764	0					
ANR	502091	UnaryOperator	!		501764	0					
ANR	502092	CallExpression	"check_single_comp ( black_c , frac_14 , ncomps , out )"		501764	1					
ANR	502093	Callee	check_single_comp		501764	0					
ANR	502094	Identifier	check_single_comp		501764	0					
ANR	502095	ArgumentList	black_c		501764	1					
ANR	502096	Argument	black_c		501764	0					
ANR	502097	Identifier	black_c		501764	0					
ANR	502098	Argument	frac_14		501764	1					
ANR	502099	Identifier	frac_14		501764	0					
ANR	502100	Argument	ncomps		501764	2					
ANR	502101	Identifier	ncomps		501764	0					
ANR	502102	Argument	out		501764	3					
ANR	502103	Identifier	out		501764	0					
ANR	502104	ReturnStatement	return 0 ;	516:8:16510:16518	501764	1	True				
ANR	502105	PrimaryExpression	0		501764	0					
ANR	502106	ExpressionStatement	process_comps = ( ( gx_color_index ) 1 << cyan_c ) | ( ( gx_color_index ) 1 << magenta_c ) | ( ( gx_color_index ) 1 << yellow_c ) | ( ( gx_color_index ) 1 << black_c )	518:4:16525:16730	501764	17	True				
ANR	502107	AssignmentExpression	process_comps = ( ( gx_color_index ) 1 << cyan_c ) | ( ( gx_color_index ) 1 << magenta_c ) | ( ( gx_color_index ) 1 << yellow_c ) | ( ( gx_color_index ) 1 << black_c )		501764	0		=			
ANR	502108	Identifier	process_comps		501764	0					
ANR	502109	InclusiveOrExpression	( ( gx_color_index ) 1 << cyan_c ) | ( ( gx_color_index ) 1 << magenta_c ) | ( ( gx_color_index ) 1 << yellow_c ) | ( ( gx_color_index ) 1 << black_c )		501764	1		|			
ANR	502110	ShiftExpression	( gx_color_index ) 1 << cyan_c		501764	0		<<			
ANR	502111	CastExpression	( gx_color_index ) 1		501764	0					
ANR	502112	CastTarget	gx_color_index		501764	0					
ANR	502113	PrimaryExpression	1		501764	1					
ANR	502114	Identifier	cyan_c		501764	1					
ANR	502115	InclusiveOrExpression	( ( gx_color_index ) 1 << magenta_c ) | ( ( gx_color_index ) 1 << yellow_c ) | ( ( gx_color_index ) 1 << black_c )		501764	1		|			
ANR	502116	ShiftExpression	( gx_color_index ) 1 << magenta_c		501764	0		<<			
ANR	502117	CastExpression	( gx_color_index ) 1		501764	0					
ANR	502118	CastTarget	gx_color_index		501764	0					
ANR	502119	PrimaryExpression	1		501764	1					
ANR	502120	Identifier	magenta_c		501764	1					
ANR	502121	InclusiveOrExpression	( ( gx_color_index ) 1 << yellow_c ) | ( ( gx_color_index ) 1 << black_c )		501764	1		|			
ANR	502122	ShiftExpression	( gx_color_index ) 1 << yellow_c		501764	0		<<			
ANR	502123	CastExpression	( gx_color_index ) 1		501764	0					
ANR	502124	CastTarget	gx_color_index		501764	0					
ANR	502125	PrimaryExpression	1		501764	1					
ANR	502126	Identifier	yellow_c		501764	1					
ANR	502127	ShiftExpression	( gx_color_index ) 1 << black_c		501764	1		<<			
ANR	502128	CastExpression	( gx_color_index ) 1		501764	0					
ANR	502129	CastTarget	gx_color_index		501764	0					
ANR	502130	PrimaryExpression	1		501764	1					
ANR	502131	Identifier	black_c		501764	1					
ANR	502132	ExpressionStatement	pcinfo -> opmode = GX_CINFO_OPMODE	522:4:16736:16768	501764	18	True				
ANR	502133	AssignmentExpression	pcinfo -> opmode = GX_CINFO_OPMODE		501764	0		=			
ANR	502134	PtrMemberAccess	pcinfo -> opmode		501764	0					
ANR	502135	Identifier	pcinfo		501764	0					
ANR	502136	Identifier	opmode		501764	1					
ANR	502137	Identifier	GX_CINFO_OPMODE		501764	1					
ANR	502138	ExpressionStatement	pcinfo -> process_comps = process_comps	523:4:16774:16811	501764	19	True				
ANR	502139	AssignmentExpression	pcinfo -> process_comps = process_comps		501764	0		=			
ANR	502140	PtrMemberAccess	pcinfo -> process_comps		501764	0					
ANR	502141	Identifier	pcinfo		501764	0					
ANR	502142	Identifier	process_comps		501764	1					
ANR	502143	Identifier	process_comps		501764	1					
ANR	502144	ExpressionStatement	pcinfo -> black_component = black_c	524:4:16817:16850	501764	20	True				
ANR	502145	AssignmentExpression	pcinfo -> black_component = black_c		501764	0		=			
ANR	502146	PtrMemberAccess	pcinfo -> black_component		501764	0					
ANR	502147	Identifier	pcinfo		501764	0					
ANR	502148	Identifier	black_component		501764	1					
ANR	502149	Identifier	black_c		501764	1					
ANR	502150	ReturnStatement	return process_comps ;	525:4:16856:16876	501764	21	True				
ANR	502151	Identifier	process_comps		501764	0					
ANR	502152	ReturnType	gx_color_index		501764	1					
ANR	502153	Identifier	check_cmyk_color_model_comps		501764	2					
ANR	502154	ParameterList	gx_device * dev		501764	3					
ANR	502155	Parameter	gx_device * dev	464:29:14114:14128	501764	0	True				
ANR	502156	ParameterType	gx_device *		501764	0					
ANR	502157	Identifier	dev		501764	1					
ANR	502158	CFGEntryNode	ENTRY		501764		True				
ANR	502159	CFGExitNode	EXIT		501764		True				
ANR	502160	Symbol	cyan_c		501764						
ANR	502161	Symbol	pcinfo -> process_comps		501764						
ANR	502162	Symbol	NO_COMP_NAME_TYPE		501764						
ANR	502163	Symbol	ncomps		501764						
ANR	502164	Symbol	out		501764						
ANR	502165	Symbol	black_c		501764						
ANR	502166	Symbol	dev		501764						
ANR	502167	Symbol	get_color_mapping_procs_subclass		501764						
ANR	502168	Symbol	pcinfo -> num_components		501764						
ANR	502169	Symbol	dev_proc		501764						
ANR	502170	Symbol	check_single_comp		501764						
ANR	502171	Symbol	& dev -> color_info		501764						
ANR	502172	Symbol	scm		501764						
ANR	502173	Symbol	GX_DEVICE_COLOR_MAX_COMPONENTS		501764						
ANR	502174	Symbol	frac_14		501764						
ANR	502175	Symbol	frac_0		501764						
ANR	502176	Symbol	process_comps		501764						
ANR	502177	Symbol	pcinfo		501764						
ANR	502178	Symbol	frac_1		501764						
ANR	502179	Symbol	get_color_comp_index		501764						
ANR	502180	Symbol	false		501764						
ANR	502181	Symbol	GX_CINFO_OPMODE		501764						
ANR	502182	Symbol	pcinfo -> black_component		501764						
ANR	502183	Symbol	* pcinfo		501764						
ANR	502184	Symbol	yellow_c		501764						
ANR	502185	Symbol	magenta_c		501764						
ANR	502186	Symbol	pcinfo -> opmode		501764						
ANR	502187	Function	gx_set_overprint_DeviceCMYK	535:0:17207:17796							
ANR	502188	FunctionDef	"gx_set_overprint_DeviceCMYK (const gs_color_space * pcs , gs_gstate * pgs)"		502187	0					
ANR	502189	CompoundStatement		537:0:17291:17796	502187	0					
ANR	502190	IdentifierDeclStatement	gx_device * dev = pgs -> device ;	538:4:17297:17338	502187	0	True				
ANR	502191	IdentifierDecl	* dev = pgs -> device		502187	0					
ANR	502192	IdentifierDeclType	gx_device *		502187	0					
ANR	502193	Identifier	dev		502187	1					
ANR	502194	AssignmentExpression	* dev = pgs -> device		502187	2		=			
ANR	502195	Identifier	dev		502187	0					
ANR	502196	PtrMemberAccess	pgs -> device		502187	1					
ANR	502197	Identifier	pgs		502187	0					
ANR	502198	Identifier	device		502187	1					
ANR	502199	IdentifierDeclStatement	gx_device_color_info * pcinfo = ( dev == 0 ? 0 : & dev -> color_info ) ;	539:4:17344:17410	502187	1	True				
ANR	502200	IdentifierDecl	* pcinfo = ( dev == 0 ? 0 : & dev -> color_info )		502187	0					
ANR	502201	IdentifierDeclType	gx_device_color_info *		502187	0					
ANR	502202	Identifier	pcinfo		502187	1					
ANR	502203	AssignmentExpression	* pcinfo = ( dev == 0 ? 0 : & dev -> color_info )		502187	2		=			
ANR	502204	Identifier	pcinfo		502187	0					
ANR	502205	ConditionalExpression	dev == 0 ? 0 : & dev -> color_info		502187	1					
ANR	502206	Condition	dev == 0		502187	0					
ANR	502207	EqualityExpression	dev == 0		502187	0		==			
ANR	502208	Identifier	dev		502187	0					
ANR	502209	PrimaryExpression	0		502187	1					
ANR	502210	PrimaryExpression	0		502187	1					
ANR	502211	UnaryOperationExpression	& dev -> color_info		502187	2					
ANR	502212	UnaryOperator	&		502187	0					
ANR	502213	PtrMemberAccess	dev -> color_info		502187	1					
ANR	502214	Identifier	dev		502187	0					
ANR	502215	Identifier	color_info		502187	1					
ANR	502216	IfStatement	if ( ! pgs -> overprint || pgs -> overprint_mode != 1 || pcinfo == 0 || pcinfo -> opmode == GX_CINFO_OPMODE_NOT )		502187	2					
ANR	502217	Condition	! pgs -> overprint || pgs -> overprint_mode != 1 || pcinfo == 0 || pcinfo -> opmode == GX_CINFO_OPMODE_NOT	542:9:17469:17652	502187	0	True				
ANR	502218	OrExpression	! pgs -> overprint || pgs -> overprint_mode != 1 || pcinfo == 0 || pcinfo -> opmode == GX_CINFO_OPMODE_NOT		502187	0		||			
ANR	502219	UnaryOperationExpression	! pgs -> overprint		502187	0					
ANR	502220	UnaryOperator	!		502187	0					
ANR	502221	PtrMemberAccess	pgs -> overprint		502187	1					
ANR	502222	Identifier	pgs		502187	0					
ANR	502223	Identifier	overprint		502187	1					
ANR	502224	OrExpression	pgs -> overprint_mode != 1 || pcinfo == 0 || pcinfo -> opmode == GX_CINFO_OPMODE_NOT		502187	1		||			
ANR	502225	EqualityExpression	pgs -> overprint_mode != 1		502187	0		!=			
ANR	502226	PtrMemberAccess	pgs -> overprint_mode		502187	0					
ANR	502227	Identifier	pgs		502187	0					
ANR	502228	Identifier	overprint_mode		502187	1					
ANR	502229	PrimaryExpression	1		502187	1					
ANR	502230	OrExpression	pcinfo == 0 || pcinfo -> opmode == GX_CINFO_OPMODE_NOT		502187	1		||			
ANR	502231	EqualityExpression	pcinfo == 0		502187	0		==			
ANR	502232	Identifier	pcinfo		502187	0					
ANR	502233	PrimaryExpression	0		502187	1					
ANR	502234	EqualityExpression	pcinfo -> opmode == GX_CINFO_OPMODE_NOT		502187	1		==			
ANR	502235	PtrMemberAccess	pcinfo -> opmode		502187	0					
ANR	502236	Identifier	pcinfo		502187	0					
ANR	502237	Identifier	opmode		502187	1					
ANR	502238	Identifier	GX_CINFO_OPMODE_NOT		502187	1					
ANR	502239	ReturnStatement	"return gx_spot_colors_set_overprint ( pcs , pgs ) ;"	546:8:17665:17710	502187	1	True				
ANR	502240	CallExpression	"gx_spot_colors_set_overprint ( pcs , pgs )"		502187	0					
ANR	502241	Callee	gx_spot_colors_set_overprint		502187	0					
ANR	502242	Identifier	gx_spot_colors_set_overprint		502187	0					
ANR	502243	ArgumentList	pcs		502187	1					
ANR	502244	Argument	pcs		502187	0					
ANR	502245	Identifier	pcs		502187	0					
ANR	502246	Argument	pgs		502187	1					
ANR	502247	Identifier	pgs		502187	0					
ANR	502248	ReturnStatement	"return gx_set_overprint_cmyk ( pcs , pgs ) ;"	548:4:17756:17794	502187	3	True				
ANR	502249	CallExpression	"gx_set_overprint_cmyk ( pcs , pgs )"		502187	0					
ANR	502250	Callee	gx_set_overprint_cmyk		502187	0					
ANR	502251	Identifier	gx_set_overprint_cmyk		502187	0					
ANR	502252	ArgumentList	pcs		502187	1					
ANR	502253	Argument	pcs		502187	0					
ANR	502254	Identifier	pcs		502187	0					
ANR	502255	Argument	pgs		502187	1					
ANR	502256	Identifier	pgs		502187	0					
ANR	502257	ReturnType	static int		502187	1					
ANR	502258	Identifier	gx_set_overprint_DeviceCMYK		502187	2					
ANR	502259	ParameterList	"const gs_color_space * pcs , gs_gstate * pgs"		502187	3					
ANR	502260	Parameter	const gs_color_space * pcs	536:28:17246:17271	502187	0	True				
ANR	502261	ParameterType	const gs_color_space *		502187	0					
ANR	502262	Identifier	pcs		502187	1					
ANR	502263	Parameter	gs_gstate * pgs	536:56:17274:17288	502187	1	True				
ANR	502264	ParameterType	gs_gstate *		502187	0					
ANR	502265	Identifier	pgs		502187	1					
ANR	502266	CFGEntryNode	ENTRY		502187		True				
ANR	502267	CFGExitNode	EXIT		502187		True				
ANR	502268	Symbol	pcs		502187						
ANR	502269	Symbol	pcinfo		502187						
ANR	502270	Symbol	* pgs		502187						
ANR	502271	Symbol	* pcinfo		502187						
ANR	502272	Symbol	GX_CINFO_OPMODE_NOT		502187						
ANR	502273	Symbol	dev		502187						
ANR	502274	Symbol	pgs -> overprint		502187						
ANR	502275	Symbol	pgs -> device		502187						
ANR	502276	Symbol	pgs -> overprint_mode		502187						
ANR	502277	Symbol	pcinfo -> opmode		502187						
ANR	502278	Symbol	& dev -> color_info		502187						
ANR	502279	Symbol	pgs		502187						
ANR	502280	Symbol	gx_set_overprint_cmyk		502187						
ANR	502281	Symbol	gx_spot_colors_set_overprint		502187						
ANR	502282	Function	gx_set_overprint_cmyk	564:0:18726:22783							
ANR	502283	FunctionDef	"gx_set_overprint_cmyk (const gs_color_space * pcs , gs_gstate * pgs)"		502282	0					
ANR	502284	CompoundStatement		565:0:18797:22783	502282	0					
ANR	502285	IdentifierDeclStatement	gx_device * dev = pgs -> device ;	566:4:18803:18844	502282	0	True				
ANR	502286	IdentifierDecl	* dev = pgs -> device		502282	0					
ANR	502287	IdentifierDeclType	gx_device *		502282	0					
ANR	502288	Identifier	dev		502282	1					
ANR	502289	AssignmentExpression	* dev = pgs -> device		502282	2		=			
ANR	502290	Identifier	dev		502282	0					
ANR	502291	PtrMemberAccess	pgs -> device		502282	1					
ANR	502292	Identifier	pgs		502282	0					
ANR	502293	Identifier	device		502282	1					
ANR	502294	IdentifierDeclStatement	gx_device_color_info * pcinfo = ( dev == 0 ? 0 : & dev -> color_info ) ;	567:4:18850:18916	502282	1	True				
ANR	502295	IdentifierDecl	* pcinfo = ( dev == 0 ? 0 : & dev -> color_info )		502282	0					
ANR	502296	IdentifierDeclType	gx_device_color_info *		502282	0					
ANR	502297	Identifier	pcinfo		502282	1					
ANR	502298	AssignmentExpression	* pcinfo = ( dev == 0 ? 0 : & dev -> color_info )		502282	2		=			
ANR	502299	Identifier	pcinfo		502282	0					
ANR	502300	ConditionalExpression	dev == 0 ? 0 : & dev -> color_info		502282	1					
ANR	502301	Condition	dev == 0		502282	0					
ANR	502302	EqualityExpression	dev == 0		502282	0		==			
ANR	502303	Identifier	dev		502282	0					
ANR	502304	PrimaryExpression	0		502282	1					
ANR	502305	PrimaryExpression	0		502282	1					
ANR	502306	UnaryOperationExpression	& dev -> color_info		502282	2					
ANR	502307	UnaryOperator	&		502282	0					
ANR	502308	PtrMemberAccess	dev -> color_info		502282	1					
ANR	502309	Identifier	dev		502282	0					
ANR	502310	Identifier	color_info		502282	1					
ANR	502311	IdentifierDeclStatement	gx_color_index drawn_comps = 0 ;	568:4:18922:18961	502282	2	True				
ANR	502312	IdentifierDecl	drawn_comps = 0		502282	0					
ANR	502313	IdentifierDeclType	gx_color_index		502282	0					
ANR	502314	Identifier	drawn_comps		502282	1					
ANR	502315	AssignmentExpression	drawn_comps = 0		502282	2		=			
ANR	502316	Identifier	drawn_comps		502282	0					
ANR	502317	PrimaryExpression	0		502282	1					
ANR	502318	IdentifierDeclStatement	gs_overprint_params_t params ;	569:4:18967:18997	502282	3	True				
ANR	502319	IdentifierDecl	params		502282	0					
ANR	502320	IdentifierDeclType	gs_overprint_params_t		502282	0					
ANR	502321	Identifier	params		502282	1					
ANR	502322	IdentifierDeclStatement	gx_device_color * pdc ;	570:4:19003:19030	502282	4	True				
ANR	502323	IdentifierDecl	* pdc		502282	0					
ANR	502324	IdentifierDeclType	gx_device_color *		502282	0					
ANR	502325	Identifier	pdc		502282	1					
ANR	502326	IdentifierDeclStatement	cmm_dev_profile_t * dev_profile ;	571:4:19036:19071	502282	5	True				
ANR	502327	IdentifierDecl	* dev_profile		502282	0					
ANR	502328	IdentifierDeclType	cmm_dev_profile_t *		502282	0					
ANR	502329	Identifier	dev_profile		502282	1					
ANR	502330	IdentifierDeclStatement	cmm_profile_t * output_profile = 0 ;	572:4:19077:19119	502282	6	True				
ANR	502331	IdentifierDecl	* output_profile = 0		502282	0					
ANR	502332	IdentifierDeclType	cmm_profile_t *		502282	0					
ANR	502333	Identifier	output_profile		502282	1					
ANR	502334	AssignmentExpression	* output_profile = 0		502282	2		=			
ANR	502335	Identifier	output_profile		502282	0					
ANR	502336	PrimaryExpression	0		502282	1					
ANR	502337	IdentifierDeclStatement	int code ;	573:4:19125:19153	502282	7	True				
ANR	502338	IdentifierDecl	code		502282	0					
ANR	502339	IdentifierDeclType	int		502282	0					
ANR	502340	Identifier	code		502282	1					
ANR	502341	IdentifierDeclStatement	bool profile_ok = false ;	574:4:19159:19201	502282	8	True				
ANR	502342	IdentifierDecl	profile_ok = false		502282	0					
ANR	502343	IdentifierDeclType	bool		502282	0					
ANR	502344	Identifier	profile_ok		502282	1					
ANR	502345	AssignmentExpression	profile_ok = false		502282	2		=			
ANR	502346	Identifier	false		502282	0					
ANR	502347	Identifier	false		502282	1					
ANR	502348	IdentifierDeclStatement	gsicc_rendering_param_t render_cond ;	575:4:19207:19249	502282	9	True				
ANR	502349	IdentifierDecl	render_cond		502282	0					
ANR	502350	IdentifierDeclType	gsicc_rendering_param_t		502282	0					
ANR	502351	Identifier	render_cond		502282	1					
ANR	502352	IfStatement	if ( dev )		502282	10					
ANR	502353	Condition	dev	577:8:19260:19262	502282	0	True				
ANR	502354	Identifier	dev		502282	0					
ANR	502355	CompoundStatement		13:13:467:467	502282	1					
ANR	502356	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & dev_profile )"	578:8:19275:19327	502282	0	True				
ANR	502357	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		502282	0		=			
ANR	502358	Identifier	code		502282	0					
ANR	502359	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		502282	1					
ANR	502360	Callee	"dev_proc ( dev , get_profile )"		502282	0					
ANR	502361	CallExpression	"dev_proc ( dev , get_profile )"		502282	0					
ANR	502362	Callee	dev_proc		502282	0					
ANR	502363	Identifier	dev_proc		502282	0					
ANR	502364	ArgumentList	dev		502282	1					
ANR	502365	Argument	dev		502282	0					
ANR	502366	Identifier	dev		502282	0					
ANR	502367	Argument	get_profile		502282	1					
ANR	502368	Identifier	get_profile		502282	0					
ANR	502369	ArgumentList	dev		502282	1					
ANR	502370	Argument	dev		502282	0					
ANR	502371	Identifier	dev		502282	0					
ANR	502372	Argument	& dev_profile		502282	1					
ANR	502373	UnaryOperationExpression	& dev_profile		502282	0					
ANR	502374	UnaryOperator	&		502282	0					
ANR	502375	Identifier	dev_profile		502282	1					
ANR	502376	IfStatement	if ( code < 0 )		502282	1					
ANR	502377	Condition	code < 0	579:12:19341:19348	502282	0	True				
ANR	502378	RelationalExpression	code < 0		502282	0		<			
ANR	502379	Identifier	code		502282	0					
ANR	502380	PrimaryExpression	0		502282	1					
ANR	502381	ReturnStatement	return code ;	580:12:19363:19374	502282	1	True				
ANR	502382	Identifier	code		502282	0					
ANR	502383	ExpressionStatement	"gsicc_extract_profile ( dev -> graphics_type_tag , dev_profile , & ( output_profile ) , & render_cond )"	582:8:19385:19506	502282	2	True				
ANR	502384	CallExpression	"gsicc_extract_profile ( dev -> graphics_type_tag , dev_profile , & ( output_profile ) , & render_cond )"		502282	0					
ANR	502385	Callee	gsicc_extract_profile		502282	0					
ANR	502386	Identifier	gsicc_extract_profile		502282	0					
ANR	502387	ArgumentList	dev -> graphics_type_tag		502282	1					
ANR	502388	Argument	dev -> graphics_type_tag		502282	0					
ANR	502389	PtrMemberAccess	dev -> graphics_type_tag		502282	0					
ANR	502390	Identifier	dev		502282	0					
ANR	502391	Identifier	graphics_type_tag		502282	1					
ANR	502392	Argument	dev_profile		502282	1					
ANR	502393	Identifier	dev_profile		502282	0					
ANR	502394	Argument	& ( output_profile )		502282	2					
ANR	502395	UnaryOperationExpression	& ( output_profile )		502282	0					
ANR	502396	UnaryOperator	&		502282	0					
ANR	502397	Identifier	output_profile		502282	1					
ANR	502398	Argument	& render_cond		502282	3					
ANR	502399	UnaryOperationExpression	& render_cond		502282	0					
ANR	502400	UnaryOperator	&		502282	0					
ANR	502401	Identifier	render_cond		502282	1					
ANR	502402	IfStatement	if ( pcinfo -> opmode == GX_CINFO_OPMODE_UNKNOWN )		502282	3					
ANR	502403	Condition	pcinfo -> opmode == GX_CINFO_OPMODE_UNKNOWN	586:12:19584:19624	502282	0	True				
ANR	502404	EqualityExpression	pcinfo -> opmode == GX_CINFO_OPMODE_UNKNOWN		502282	0		==			
ANR	502405	PtrMemberAccess	pcinfo -> opmode		502282	0					
ANR	502406	Identifier	pcinfo		502282	0					
ANR	502407	Identifier	opmode		502282	1					
ANR	502408	Identifier	GX_CINFO_OPMODE_UNKNOWN		502282	1					
ANR	502409	ExpressionStatement	drawn_comps = check_cmyk_color_model_comps ( dev )	587:12:19639:19686	502282	1	True				
ANR	502410	AssignmentExpression	drawn_comps = check_cmyk_color_model_comps ( dev )		502282	0		=			
ANR	502411	Identifier	drawn_comps		502282	0					
ANR	502412	CallExpression	check_cmyk_color_model_comps ( dev )		502282	1					
ANR	502413	Callee	check_cmyk_color_model_comps		502282	0					
ANR	502414	Identifier	check_cmyk_color_model_comps		502282	0					
ANR	502415	ArgumentList	dev		502282	1					
ANR	502416	Argument	dev		502282	0					
ANR	502417	Identifier	dev		502282	0					
ANR	502418	ElseStatement	else		502282	0					
ANR	502419	ExpressionStatement	drawn_comps = pcinfo -> process_comps	589:12:19713:19748	502282	0	True				
ANR	502420	AssignmentExpression	drawn_comps = pcinfo -> process_comps		502282	0		=			
ANR	502421	Identifier	drawn_comps		502282	0					
ANR	502422	PtrMemberAccess	pcinfo -> process_comps		502282	1					
ANR	502423	Identifier	pcinfo		502282	0					
ANR	502424	Identifier	process_comps		502282	1					
ANR	502425	IfStatement	if ( drawn_comps == 0 )		502282	11					
ANR	502426	Condition	drawn_comps == 0	591:8:19764:19779	502282	0	True				
ANR	502427	EqualityExpression	drawn_comps == 0		502282	0		==			
ANR	502428	Identifier	drawn_comps		502282	0					
ANR	502429	PrimaryExpression	0		502282	1					
ANR	502430	ReturnStatement	"return gx_spot_colors_set_overprint ( pcs , pgs ) ;"	592:8:19790:19835	502282	1	True				
ANR	502431	CallExpression	"gx_spot_colors_set_overprint ( pcs , pgs )"		502282	0					
ANR	502432	Callee	gx_spot_colors_set_overprint		502282	0					
ANR	502433	Identifier	gx_spot_colors_set_overprint		502282	0					
ANR	502434	ArgumentList	pcs		502282	1					
ANR	502435	Argument	pcs		502282	0					
ANR	502436	Identifier	pcs		502282	0					
ANR	502437	Argument	pgs		502282	1					
ANR	502438	Identifier	pgs		502282	0					
ANR	502439	IfStatement	if ( pcs -> cmm_icc_profile_data != NULL && output_profile != NULL )		502282	12					
ANR	502440	Condition	pcs -> cmm_icc_profile_data != NULL && output_profile != NULL	596:8:19965:20023	502282	0	True				
ANR	502441	AndExpression	pcs -> cmm_icc_profile_data != NULL && output_profile != NULL		502282	0		&&			
ANR	502442	EqualityExpression	pcs -> cmm_icc_profile_data != NULL		502282	0		!=			
ANR	502443	PtrMemberAccess	pcs -> cmm_icc_profile_data		502282	0					
ANR	502444	Identifier	pcs		502282	0					
ANR	502445	Identifier	cmm_icc_profile_data		502282	1					
ANR	502446	Identifier	NULL		502282	1					
ANR	502447	EqualityExpression	output_profile != NULL		502282	1		!=			
ANR	502448	Identifier	output_profile		502282	0					
ANR	502449	Identifier	NULL		502282	1					
ANR	502450	CompoundStatement		32:69:1228:1228	502282	1					
ANR	502451	IfStatement	if ( output_profile -> hashcode == pcs -> cmm_icc_profile_data -> hashcode )		502282	0					
ANR	502452	Condition	output_profile -> hashcode == pcs -> cmm_icc_profile_data -> hashcode	597:12:20040:20114	502282	0	True				
ANR	502453	EqualityExpression	output_profile -> hashcode == pcs -> cmm_icc_profile_data -> hashcode		502282	0		==			
ANR	502454	PtrMemberAccess	output_profile -> hashcode		502282	0					
ANR	502455	Identifier	output_profile		502282	0					
ANR	502456	Identifier	hashcode		502282	1					
ANR	502457	PtrMemberAccess	pcs -> cmm_icc_profile_data -> hashcode		502282	1					
ANR	502458	PtrMemberAccess	pcs -> cmm_icc_profile_data		502282	0					
ANR	502459	Identifier	pcs		502282	0					
ANR	502460	Identifier	cmm_icc_profile_data		502282	1					
ANR	502461	Identifier	hashcode		502282	1					
ANR	502462	CompoundStatement		34:49:1319:1319	502282	1					
ANR	502463	ExpressionStatement	profile_ok = true	599:12:20131:20148	502282	0	True				
ANR	502464	AssignmentExpression	profile_ok = true		502282	0		=			
ANR	502465	Identifier	profile_ok		502282	0					
ANR	502466	Identifier	true		502282	1					
ANR	502467	ExpressionStatement	pdc = gs_currentdevicecolor_inline ( pgs )	603:4:20171:20210	502282	13	True				
ANR	502468	AssignmentExpression	pdc = gs_currentdevicecolor_inline ( pgs )		502282	0		=			
ANR	502469	Identifier	pdc		502282	0					
ANR	502470	CallExpression	gs_currentdevicecolor_inline ( pgs )		502282	1					
ANR	502471	Callee	gs_currentdevicecolor_inline		502282	0					
ANR	502472	Identifier	gs_currentdevicecolor_inline		502282	0					
ANR	502473	ArgumentList	pgs		502282	1					
ANR	502474	Argument	pgs		502282	0					
ANR	502475	Identifier	pgs		502282	0					
ANR	502476	IfStatement	if ( color_is_set ( pdc ) && profile_ok && pgs -> overprint_mode == 1 )		502282	14					
ANR	502477	Condition	color_is_set ( pdc ) && profile_ok && pgs -> overprint_mode == 1	604:8:20220:20278	502282	0	True				
ANR	502478	AndExpression	color_is_set ( pdc ) && profile_ok && pgs -> overprint_mode == 1		502282	0		&&			
ANR	502479	CallExpression	color_is_set ( pdc )		502282	0					
ANR	502480	Callee	color_is_set		502282	0					
ANR	502481	Identifier	color_is_set		502282	0					
ANR	502482	ArgumentList	pdc		502282	1					
ANR	502483	Argument	pdc		502282	0					
ANR	502484	Identifier	pdc		502282	0					
ANR	502485	AndExpression	profile_ok && pgs -> overprint_mode == 1		502282	1		&&			
ANR	502486	Identifier	profile_ok		502282	0					
ANR	502487	EqualityExpression	pgs -> overprint_mode == 1		502282	1		==			
ANR	502488	PtrMemberAccess	pgs -> overprint_mode		502282	0					
ANR	502489	Identifier	pgs		502282	0					
ANR	502490	Identifier	overprint_mode		502282	1					
ANR	502491	PrimaryExpression	1		502282	1					
ANR	502492	CompoundStatement		44:8:1612:1639	502282	1					
ANR	502493	IdentifierDeclStatement	"gx_color_index nz_comps , one , temp ;"	605:8:20291:20326	502282	0	True				
ANR	502494	IdentifierDecl	nz_comps		502282	0					
ANR	502495	IdentifierDeclType	gx_color_index		502282	0					
ANR	502496	Identifier	nz_comps		502282	1					
ANR	502497	IdentifierDecl	one		502282	1					
ANR	502498	IdentifierDeclType	gx_color_index		502282	0					
ANR	502499	Identifier	one		502282	1					
ANR	502500	IdentifierDecl	temp		502282	2					
ANR	502501	IdentifierDeclType	gx_color_index		502282	0					
ANR	502502	Identifier	temp		502282	1					
ANR	502503	IdentifierDeclStatement	int code ;	606:8:20336:20356	502282	1	True				
ANR	502504	IdentifierDecl	code		502282	0					
ANR	502505	IdentifierDeclType	int		502282	0					
ANR	502506	Identifier	code		502282	1					
ANR	502507	IdentifierDeclStatement	"int num_colorant [ 4 ] , k ;"	607:8:20366:20400	502282	2	True				
ANR	502508	IdentifierDecl	num_colorant [ 4 ]		502282	0					
ANR	502509	IdentifierDeclType	int [ 4 ]		502282	0					
ANR	502510	Identifier	num_colorant		502282	1					
ANR	502511	PrimaryExpression	4		502282	2					
ANR	502512	IdentifierDecl	k		502282	1					
ANR	502513	IdentifierDeclType	int		502282	0					
ANR	502514	Identifier	k		502282	1					
ANR	502515	IdentifierDeclStatement	bool colorant_ok ;	608:8:20410:20437	502282	3	True				
ANR	502516	IdentifierDecl	colorant_ok		502282	0					
ANR	502517	IdentifierDeclType	bool		502282	0					
ANR	502518	Identifier	colorant_ok		502282	1					
ANR	502519	ExpressionStatement	dev_color_proc_get_nonzero_comps ( ( * procp ) )	610:8:20448:20490	502282	4	True				
ANR	502520	CallExpression	dev_color_proc_get_nonzero_comps ( ( * procp ) )		502282	0					
ANR	502521	Callee	dev_color_proc_get_nonzero_comps		502282	0					
ANR	502522	Identifier	dev_color_proc_get_nonzero_comps		502282	0					
ANR	502523	ArgumentList	* procp		502282	1					
ANR	502524	Argument	* procp		502282	0					
ANR	502525	UnaryOperationExpression	* procp		502282	0					
ANR	502526	UnaryOperator	*		502282	0					
ANR	502527	Identifier	procp		502282	1					
ANR	502528	ExpressionStatement	procp = pdc -> type -> get_nonzero_comps	612:8:20501:20537	502282	5	True				
ANR	502529	AssignmentExpression	procp = pdc -> type -> get_nonzero_comps		502282	0		=			
ANR	502530	Identifier	procp		502282	0					
ANR	502531	PtrMemberAccess	pdc -> type -> get_nonzero_comps		502282	1					
ANR	502532	PtrMemberAccess	pdc -> type		502282	0					
ANR	502533	Identifier	pdc		502282	0					
ANR	502534	Identifier	type		502282	1					
ANR	502535	Identifier	get_nonzero_comps		502282	1					
ANR	502536	IfStatement	if ( pdc -> ccolor_valid )		502282	6					
ANR	502537	Condition	pdc -> ccolor_valid	613:12:20551:20567	502282	0	True				
ANR	502538	PtrMemberAccess	pdc -> ccolor_valid		502282	0					
ANR	502539	Identifier	pdc		502282	0					
ANR	502540	Identifier	ccolor_valid		502282	1					
ANR	502541	CompoundStatement		49:31:1772:1772	502282	1					
ANR	502542	ExpressionStatement	"num_colorant [ 0 ] = ( dev_proc ( dev , get_color_comp_index ) ) ( dev , ""Cyan"" , strlen ( ""Cyan"" ) , NO_COMP_NAME_TYPE )"	620:12:21018:21152	502282	0	True				
ANR	502543	AssignmentExpression	"num_colorant [ 0 ] = ( dev_proc ( dev , get_color_comp_index ) ) ( dev , ""Cyan"" , strlen ( ""Cyan"" ) , NO_COMP_NAME_TYPE )"		502282	0		=			
ANR	502544	ArrayIndexing	num_colorant [ 0 ]		502282	0					
ANR	502545	Identifier	num_colorant		502282	0					
ANR	502546	PrimaryExpression	0		502282	1					
ANR	502547	CallExpression	"( dev_proc ( dev , get_color_comp_index ) ) ( dev , ""Cyan"" , strlen ( ""Cyan"" ) , NO_COMP_NAME_TYPE )"		502282	1					
ANR	502548	Callee	"dev_proc ( dev , get_color_comp_index )"		502282	0					
ANR	502549	CallExpression	"dev_proc ( dev , get_color_comp_index )"		502282	0					
ANR	502550	Callee	dev_proc		502282	0					
ANR	502551	Identifier	dev_proc		502282	0					
ANR	502552	ArgumentList	dev		502282	1					
ANR	502553	Argument	dev		502282	0					
ANR	502554	Identifier	dev		502282	0					
ANR	502555	Argument	get_color_comp_index		502282	1					
ANR	502556	Identifier	get_color_comp_index		502282	0					
ANR	502557	ArgumentList	dev		502282	1					
ANR	502558	Argument	dev		502282	0					
ANR	502559	Identifier	dev		502282	0					
ANR	502560	Argument	"""Cyan"""		502282	1					
ANR	502561	PrimaryExpression	"""Cyan"""		502282	0					
ANR	502562	Argument	"strlen ( ""Cyan"" )"		502282	2					
ANR	502563	CallExpression	"strlen ( ""Cyan"" )"		502282	0					
ANR	502564	Callee	strlen		502282	0					
ANR	502565	Identifier	strlen		502282	0					
ANR	502566	ArgumentList	"""Cyan"""		502282	1					
ANR	502567	Argument	"""Cyan"""		502282	0					
ANR	502568	PrimaryExpression	"""Cyan"""		502282	0					
ANR	502569	Argument	NO_COMP_NAME_TYPE		502282	3					
ANR	502570	Identifier	NO_COMP_NAME_TYPE		502282	0					
ANR	502571	ExpressionStatement	"num_colorant [ 1 ] = ( dev_proc ( dev , get_color_comp_index ) ) ( dev , ""Magenta"" , strlen ( ""Magenta"" ) , NO_COMP_NAME_TYPE )"	622:12:21166:21306	502282	1	True				
ANR	502572	AssignmentExpression	"num_colorant [ 1 ] = ( dev_proc ( dev , get_color_comp_index ) ) ( dev , ""Magenta"" , strlen ( ""Magenta"" ) , NO_COMP_NAME_TYPE )"		502282	0		=			
ANR	502573	ArrayIndexing	num_colorant [ 1 ]		502282	0					
ANR	502574	Identifier	num_colorant		502282	0					
ANR	502575	PrimaryExpression	1		502282	1					
ANR	502576	CallExpression	"( dev_proc ( dev , get_color_comp_index ) ) ( dev , ""Magenta"" , strlen ( ""Magenta"" ) , NO_COMP_NAME_TYPE )"		502282	1					
ANR	502577	Callee	"dev_proc ( dev , get_color_comp_index )"		502282	0					
ANR	502578	CallExpression	"dev_proc ( dev , get_color_comp_index )"		502282	0					
ANR	502579	Callee	dev_proc		502282	0					
ANR	502580	Identifier	dev_proc		502282	0					
ANR	502581	ArgumentList	dev		502282	1					
ANR	502582	Argument	dev		502282	0					
ANR	502583	Identifier	dev		502282	0					
ANR	502584	Argument	get_color_comp_index		502282	1					
ANR	502585	Identifier	get_color_comp_index		502282	0					
ANR	502586	ArgumentList	dev		502282	1					
ANR	502587	Argument	dev		502282	0					
ANR	502588	Identifier	dev		502282	0					
ANR	502589	Argument	"""Magenta"""		502282	1					
ANR	502590	PrimaryExpression	"""Magenta"""		502282	0					
ANR	502591	Argument	"strlen ( ""Magenta"" )"		502282	2					
ANR	502592	CallExpression	"strlen ( ""Magenta"" )"		502282	0					
ANR	502593	Callee	strlen		502282	0					
ANR	502594	Identifier	strlen		502282	0					
ANR	502595	ArgumentList	"""Magenta"""		502282	1					
ANR	502596	Argument	"""Magenta"""		502282	0					
ANR	502597	PrimaryExpression	"""Magenta"""		502282	0					
ANR	502598	Argument	NO_COMP_NAME_TYPE		502282	3					
ANR	502599	Identifier	NO_COMP_NAME_TYPE		502282	0					
ANR	502600	ExpressionStatement	"num_colorant [ 2 ] = ( dev_proc ( dev , get_color_comp_index ) ) ( dev , ""Yellow"" , strlen ( ""Yellow"" ) , NO_COMP_NAME_TYPE )"	624:12:21320:21458	502282	2	True				
ANR	502601	AssignmentExpression	"num_colorant [ 2 ] = ( dev_proc ( dev , get_color_comp_index ) ) ( dev , ""Yellow"" , strlen ( ""Yellow"" ) , NO_COMP_NAME_TYPE )"		502282	0		=			
ANR	502602	ArrayIndexing	num_colorant [ 2 ]		502282	0					
ANR	502603	Identifier	num_colorant		502282	0					
ANR	502604	PrimaryExpression	2		502282	1					
ANR	502605	CallExpression	"( dev_proc ( dev , get_color_comp_index ) ) ( dev , ""Yellow"" , strlen ( ""Yellow"" ) , NO_COMP_NAME_TYPE )"		502282	1					
ANR	502606	Callee	"dev_proc ( dev , get_color_comp_index )"		502282	0					
ANR	502607	CallExpression	"dev_proc ( dev , get_color_comp_index )"		502282	0					
ANR	502608	Callee	dev_proc		502282	0					
ANR	502609	Identifier	dev_proc		502282	0					
ANR	502610	ArgumentList	dev		502282	1					
ANR	502611	Argument	dev		502282	0					
ANR	502612	Identifier	dev		502282	0					
ANR	502613	Argument	get_color_comp_index		502282	1					
ANR	502614	Identifier	get_color_comp_index		502282	0					
ANR	502615	ArgumentList	dev		502282	1					
ANR	502616	Argument	dev		502282	0					
ANR	502617	Identifier	dev		502282	0					
ANR	502618	Argument	"""Yellow"""		502282	1					
ANR	502619	PrimaryExpression	"""Yellow"""		502282	0					
ANR	502620	Argument	"strlen ( ""Yellow"" )"		502282	2					
ANR	502621	CallExpression	"strlen ( ""Yellow"" )"		502282	0					
ANR	502622	Callee	strlen		502282	0					
ANR	502623	Identifier	strlen		502282	0					
ANR	502624	ArgumentList	"""Yellow"""		502282	1					
ANR	502625	Argument	"""Yellow"""		502282	0					
ANR	502626	PrimaryExpression	"""Yellow"""		502282	0					
ANR	502627	Argument	NO_COMP_NAME_TYPE		502282	3					
ANR	502628	Identifier	NO_COMP_NAME_TYPE		502282	0					
ANR	502629	ExpressionStatement	"num_colorant [ 3 ] = ( dev_proc ( dev , get_color_comp_index ) ) ( dev , ""Black"" , strlen ( ""Black"" ) , NO_COMP_NAME_TYPE )"	626:12:21472:21608	502282	3	True				
ANR	502630	AssignmentExpression	"num_colorant [ 3 ] = ( dev_proc ( dev , get_color_comp_index ) ) ( dev , ""Black"" , strlen ( ""Black"" ) , NO_COMP_NAME_TYPE )"		502282	0		=			
ANR	502631	ArrayIndexing	num_colorant [ 3 ]		502282	0					
ANR	502632	Identifier	num_colorant		502282	0					
ANR	502633	PrimaryExpression	3		502282	1					
ANR	502634	CallExpression	"( dev_proc ( dev , get_color_comp_index ) ) ( dev , ""Black"" , strlen ( ""Black"" ) , NO_COMP_NAME_TYPE )"		502282	1					
ANR	502635	Callee	"dev_proc ( dev , get_color_comp_index )"		502282	0					
ANR	502636	CallExpression	"dev_proc ( dev , get_color_comp_index )"		502282	0					
ANR	502637	Callee	dev_proc		502282	0					
ANR	502638	Identifier	dev_proc		502282	0					
ANR	502639	ArgumentList	dev		502282	1					
ANR	502640	Argument	dev		502282	0					
ANR	502641	Identifier	dev		502282	0					
ANR	502642	Argument	get_color_comp_index		502282	1					
ANR	502643	Identifier	get_color_comp_index		502282	0					
ANR	502644	ArgumentList	dev		502282	1					
ANR	502645	Argument	dev		502282	0					
ANR	502646	Identifier	dev		502282	0					
ANR	502647	Argument	"""Black"""		502282	1					
ANR	502648	PrimaryExpression	"""Black"""		502282	0					
ANR	502649	Argument	"strlen ( ""Black"" )"		502282	2					
ANR	502650	CallExpression	"strlen ( ""Black"" )"		502282	0					
ANR	502651	Callee	strlen		502282	0					
ANR	502652	Identifier	strlen		502282	0					
ANR	502653	ArgumentList	"""Black"""		502282	1					
ANR	502654	Argument	"""Black"""		502282	0					
ANR	502655	PrimaryExpression	"""Black"""		502282	0					
ANR	502656	Argument	NO_COMP_NAME_TYPE		502282	3					
ANR	502657	Identifier	NO_COMP_NAME_TYPE		502282	0					
ANR	502658	ExpressionStatement	nz_comps = 0	628:12:21622:21634	502282	4	True				
ANR	502659	AssignmentExpression	nz_comps = 0		502282	0		=			
ANR	502660	Identifier	nz_comps		502282	0					
ANR	502661	PrimaryExpression	0		502282	1					
ANR	502662	ExpressionStatement	one = 1	629:12:21648:21655	502282	5	True				
ANR	502663	AssignmentExpression	one = 1		502282	0		=			
ANR	502664	Identifier	one		502282	0					
ANR	502665	PrimaryExpression	1		502282	1					
ANR	502666	ExpressionStatement	colorant_ok = true	630:12:21669:21687	502282	6	True				
ANR	502667	AssignmentExpression	colorant_ok = true		502282	0		=			
ANR	502668	Identifier	colorant_ok		502282	0					
ANR	502669	Identifier	true		502282	1					
ANR	502670	ForStatement	for ( k = 0 ; k < 4 ; k ++ )		502282	7					
ANR	502671	ForInit	k = 0 ;	631:17:21706:21711	502282	0	True				
ANR	502672	AssignmentExpression	k = 0		502282	0		=			
ANR	502673	Identifier	k		502282	0					
ANR	502674	PrimaryExpression	0		502282	1					
ANR	502675	Condition	k < 4	631:24:21713:21717	502282	1	True				
ANR	502676	RelationalExpression	k < 4		502282	0		<			
ANR	502677	Identifier	k		502282	0					
ANR	502678	PrimaryExpression	4		502282	1					
ANR	502679	PostIncDecOperationExpression	k ++	631:31:21720:21722	502282	2	True				
ANR	502680	Identifier	k		502282	0					
ANR	502681	IncDec	++		502282	1					
ANR	502682	CompoundStatement		67:36:2927:2927	502282	3					
ANR	502683	IfStatement	if ( pdc -> ccolor . paint . values [ k ] != 0 )		502282	0					
ANR	502684	Condition	pdc -> ccolor . paint . values [ k ] != 0	632:20:21747:21778	502282	0	True				
ANR	502685	EqualityExpression	pdc -> ccolor . paint . values [ k ] != 0		502282	0		!=			
ANR	502686	ArrayIndexing	pdc -> ccolor . paint . values [ k ]		502282	0					
ANR	502687	MemberAccess	pdc -> ccolor . paint . values		502282	0					
ANR	502688	MemberAccess	pdc -> ccolor . paint		502282	0					
ANR	502689	PtrMemberAccess	pdc -> ccolor		502282	0					
ANR	502690	Identifier	pdc		502282	0					
ANR	502691	Identifier	ccolor		502282	1					
ANR	502692	Identifier	paint		502282	1					
ANR	502693	Identifier	values		502282	1					
ANR	502694	Identifier	k		502282	1					
ANR	502695	PrimaryExpression	0		502282	1					
ANR	502696	CompoundStatement		68:54:2983:2983	502282	1					
ANR	502697	IfStatement	if ( num_colorant [ k ] == - 1 )		502282	0					
ANR	502698	Condition	num_colorant [ k ] == - 1	633:24:21807:21827	502282	0	True				
ANR	502699	EqualityExpression	num_colorant [ k ] == - 1		502282	0		==			
ANR	502700	ArrayIndexing	num_colorant [ k ]		502282	0					
ANR	502701	Identifier	num_colorant		502282	0					
ANR	502702	Identifier	k		502282	1					
ANR	502703	UnaryOperationExpression	- 1		502282	1					
ANR	502704	UnaryOperator	-		502282	0					
ANR	502705	PrimaryExpression	1		502282	1					
ANR	502706	CompoundStatement		69:47:3032:3032	502282	1					
ANR	502707	ExpressionStatement	colorant_ok = false	634:24:21856:21875	502282	0	True				
ANR	502708	AssignmentExpression	colorant_ok = false		502282	0		=			
ANR	502709	Identifier	colorant_ok		502282	0					
ANR	502710	Identifier	false		502282	1					
ANR	502711	ElseStatement	else		502282	0					
ANR	502712	CompoundStatement		71:27:3106:3106	502282	0					
ANR	502713	ExpressionStatement	temp = one << num_colorant [ k ]	636:24:21930:21959	502282	0	True				
ANR	502714	AssignmentExpression	temp = one << num_colorant [ k ]		502282	0		=			
ANR	502715	Identifier	temp		502282	0					
ANR	502716	ShiftExpression	one << num_colorant [ k ]		502282	1		<<			
ANR	502717	Identifier	one		502282	0					
ANR	502718	ArrayIndexing	num_colorant [ k ]		502282	1					
ANR	502719	Identifier	num_colorant		502282	0					
ANR	502720	Identifier	k		502282	1					
ANR	502721	ExpressionStatement	nz_comps = nz_comps | temp	637:24:21985:22011	502282	1	True				
ANR	502722	AssignmentExpression	nz_comps = nz_comps | temp		502282	0		=			
ANR	502723	Identifier	nz_comps		502282	0					
ANR	502724	InclusiveOrExpression	nz_comps | temp		502282	1		|			
ANR	502725	Identifier	nz_comps		502282	0					
ANR	502726	Identifier	temp		502282	1					
ANR	502727	IfStatement	if ( ! colorant_ok )		502282	8					
ANR	502728	Condition	! colorant_ok	642:16:22161:22172	502282	0	True				
ANR	502729	UnaryOperationExpression	! colorant_ok		502282	0					
ANR	502730	UnaryOperator	!		502282	0					
ANR	502731	Identifier	colorant_ok		502282	1					
ANR	502732	CompoundStatement		78:30:3377:3377	502282	1					
ANR	502733	IfStatement	"if ( ( code = procp ( pdc , dev , & nz_comps ) ) < 0 )"		502282	0					
ANR	502734	Condition	"( code = procp ( pdc , dev , & nz_comps ) ) < 0"	643:20:22197:22235	502282	0	True				
ANR	502735	RelationalExpression	"( code = procp ( pdc , dev , & nz_comps ) ) < 0"		502282	0		<			
ANR	502736	AssignmentExpression	"code = procp ( pdc , dev , & nz_comps )"		502282	0		=			
ANR	502737	Identifier	code		502282	0					
ANR	502738	CallExpression	"procp ( pdc , dev , & nz_comps )"		502282	1					
ANR	502739	Callee	procp		502282	0					
ANR	502740	Identifier	procp		502282	0					
ANR	502741	ArgumentList	pdc		502282	1					
ANR	502742	Argument	pdc		502282	0					
ANR	502743	Identifier	pdc		502282	0					
ANR	502744	Argument	dev		502282	1					
ANR	502745	Identifier	dev		502282	0					
ANR	502746	Argument	& nz_comps		502282	2					
ANR	502747	UnaryOperationExpression	& nz_comps		502282	0					
ANR	502748	UnaryOperator	&		502282	0					
ANR	502749	Identifier	nz_comps		502282	1					
ANR	502750	PrimaryExpression	0		502282	1					
ANR	502751	ReturnStatement	return code ;	644:20:22258:22269	502282	1	True				
ANR	502752	Identifier	code		502282	0					
ANR	502753	ElseStatement	else		502282	0					
ANR	502754	CompoundStatement		82:15:3502:3502	502282	0					
ANR	502755	IfStatement	"if ( ( code = procp ( pdc , dev , & nz_comps ) ) < 0 )"		502282	0					
ANR	502756	Condition	"( code = procp ( pdc , dev , & nz_comps ) ) < 0"	647:16:22318:22356	502282	0	True				
ANR	502757	RelationalExpression	"( code = procp ( pdc , dev , & nz_comps ) ) < 0"		502282	0		<			
ANR	502758	AssignmentExpression	"code = procp ( pdc , dev , & nz_comps )"		502282	0		=			
ANR	502759	Identifier	code		502282	0					
ANR	502760	CallExpression	"procp ( pdc , dev , & nz_comps )"		502282	1					
ANR	502761	Callee	procp		502282	0					
ANR	502762	Identifier	procp		502282	0					
ANR	502763	ArgumentList	pdc		502282	1					
ANR	502764	Argument	pdc		502282	0					
ANR	502765	Identifier	pdc		502282	0					
ANR	502766	Argument	dev		502282	1					
ANR	502767	Identifier	dev		502282	0					
ANR	502768	Argument	& nz_comps		502282	2					
ANR	502769	UnaryOperationExpression	& nz_comps		502282	0					
ANR	502770	UnaryOperator	&		502282	0					
ANR	502771	Identifier	nz_comps		502282	1					
ANR	502772	PrimaryExpression	0		502282	1					
ANR	502773	ReturnStatement	return code ;	648:16:22375:22386	502282	1	True				
ANR	502774	Identifier	code		502282	0					
ANR	502775	ExpressionStatement	drawn_comps &= nz_comps	650:8:22406:22429	502282	7	True				
ANR	502776	AssignmentExpression	drawn_comps &= nz_comps		502282	0		&=			
ANR	502777	Identifier	drawn_comps		502282	0					
ANR	502778	Identifier	nz_comps		502282	1					
ANR	502779	ExpressionStatement	params . retain_any_comps = true	652:4:22441:22471	502282	15	True				
ANR	502780	AssignmentExpression	params . retain_any_comps = true		502282	0		=			
ANR	502781	MemberAccess	params . retain_any_comps		502282	0					
ANR	502782	Identifier	params		502282	0					
ANR	502783	Identifier	retain_any_comps		502282	1					
ANR	502784	Identifier	true		502282	1					
ANR	502785	ExpressionStatement	params . retain_spot_comps = false	653:4:22477:22509	502282	16	True				
ANR	502786	AssignmentExpression	params . retain_spot_comps = false		502282	0		=			
ANR	502787	MemberAccess	params . retain_spot_comps		502282	0					
ANR	502788	Identifier	params		502282	0					
ANR	502789	Identifier	retain_spot_comps		502282	1					
ANR	502790	Identifier	false		502282	1					
ANR	502791	ExpressionStatement	params . drawn_comps = drawn_comps	654:4:22515:22547	502282	17	True				
ANR	502792	AssignmentExpression	params . drawn_comps = drawn_comps		502282	0		=			
ANR	502793	MemberAccess	params . drawn_comps		502282	0					
ANR	502794	Identifier	params		502282	0					
ANR	502795	Identifier	drawn_comps		502282	1					
ANR	502796	Identifier	drawn_comps		502282	1					
ANR	502797	ExpressionStatement	pgs -> effective_overprint_mode = pgs -> overprint_mode	657:4:22676:22727	502282	18	True				
ANR	502798	AssignmentExpression	pgs -> effective_overprint_mode = pgs -> overprint_mode		502282	0		=			
ANR	502799	PtrMemberAccess	pgs -> effective_overprint_mode		502282	0					
ANR	502800	Identifier	pgs		502282	0					
ANR	502801	Identifier	effective_overprint_mode		502282	1					
ANR	502802	PtrMemberAccess	pgs -> overprint_mode		502282	1					
ANR	502803	Identifier	pgs		502282	0					
ANR	502804	Identifier	overprint_mode		502282	1					
ANR	502805	ReturnStatement	"return gs_gstate_update_overprint ( pgs , & params ) ;"	659:4:22734:22781	502282	19	True				
ANR	502806	CallExpression	"gs_gstate_update_overprint ( pgs , & params )"		502282	0					
ANR	502807	Callee	gs_gstate_update_overprint		502282	0					
ANR	502808	Identifier	gs_gstate_update_overprint		502282	0					
ANR	502809	ArgumentList	pgs		502282	1					
ANR	502810	Argument	pgs		502282	0					
ANR	502811	Identifier	pgs		502282	0					
ANR	502812	Argument	& params		502282	1					
ANR	502813	UnaryOperationExpression	& params		502282	0					
ANR	502814	UnaryOperator	&		502282	0					
ANR	502815	Identifier	params		502282	1					
ANR	502816	ReturnType	int		502282	1					
ANR	502817	Identifier	gx_set_overprint_cmyk		502282	2					
ANR	502818	ParameterList	"const gs_color_space * pcs , gs_gstate * pgs"		502282	3					
ANR	502819	Parameter	const gs_color_space * pcs	564:26:18752:18777	502282	0	True				
ANR	502820	ParameterType	const gs_color_space *		502282	0					
ANR	502821	Identifier	pcs		502282	1					
ANR	502822	Parameter	gs_gstate * pgs	564:54:18780:18794	502282	1	True				
ANR	502823	ParameterType	gs_gstate *		502282	0					
ANR	502824	Identifier	pgs		502282	1					
ANR	502825	CFGEntryNode	ENTRY		502282		True				
ANR	502826	CFGExitNode	EXIT		502282		True				
ANR	502827	Symbol	pdc -> type		502282						
ANR	502828	Symbol	pcinfo -> process_comps		502282						
ANR	502829	Symbol	output_profile -> hashcode		502282						
ANR	502830	Symbol	procp		502282						
ANR	502831	Symbol	* pgs		502282						
ANR	502832	Symbol	dev_profile		502282						
ANR	502833	Symbol	* output_profile		502282						
ANR	502834	Symbol	* pcs		502282						
ANR	502835	Symbol	strlen		502282						
ANR	502836	Symbol	pdc -> ccolor . paint		502282						
ANR	502837	Symbol	dev		502282						
ANR	502838	Symbol	pgs -> device		502282						
ANR	502839	Symbol	* pdc		502282						
ANR	502840	Symbol	& params		502282						
ANR	502841	Symbol	output_profile		502282						
ANR	502842	Symbol	NULL		502282						
ANR	502843	Symbol	* procp		502282						
ANR	502844	Symbol	& dev_profile		502282						
ANR	502845	Symbol	pcs -> cmm_icc_profile_data		502282						
ANR	502846	Symbol	* pcinfo		502282						
ANR	502847	Symbol	params		502282						
ANR	502848	Symbol	& render_cond		502282						
ANR	502849	Symbol	nz_comps		502282						
ANR	502850	Symbol	* pdc -> ccolor . paint . values		502282						
ANR	502851	Symbol	* * pcs		502282						
ANR	502852	Symbol	* pdc -> ccolor		502282						
ANR	502853	Symbol	num_colorant		502282						
ANR	502854	Symbol	true		502282						
ANR	502855	Symbol	pdc -> type -> get_nonzero_comps		502282						
ANR	502856	Symbol	dev -> graphics_type_tag		502282						
ANR	502857	Symbol	drawn_comps		502282						
ANR	502858	Symbol	pcinfo -> opmode		502282						
ANR	502859	Symbol	* num_colorant		502282						
ANR	502860	Symbol	* dev		502282						
ANR	502861	Symbol	color_is_set		502282						
ANR	502862	Symbol	code		502282						
ANR	502863	Symbol	* * pdc		502282						
ANR	502864	Symbol	pgs -> effective_overprint_mode		502282						
ANR	502865	Symbol	NO_COMP_NAME_TYPE		502282						
ANR	502866	Symbol	params . drawn_comps		502282						
ANR	502867	Symbol	colorant_ok		502282						
ANR	502868	Symbol	gs_currentdevicecolor_inline		502282						
ANR	502869	Symbol	pdc -> ccolor_valid		502282						
ANR	502870	Symbol	dev_proc		502282						
ANR	502871	Symbol	& dev -> color_info		502282						
ANR	502872	Symbol	params . retain_any_comps		502282						
ANR	502873	Symbol	pgs		502282						
ANR	502874	Symbol	render_cond		502282						
ANR	502875	Symbol	get_profile		502282						
ANR	502876	Symbol	pcs		502282						
ANR	502877	Symbol	pcinfo		502282						
ANR	502878	Symbol	temp		502282						
ANR	502879	Symbol	* pdc -> ccolor . paint		502282						
ANR	502880	Symbol	get_color_comp_index		502282						
ANR	502881	Symbol	pdc -> ccolor . paint . values		502282						
ANR	502882	Symbol	one		502282						
ANR	502883	Symbol	false		502282						
ANR	502884	Symbol	* pcs -> cmm_icc_profile_data		502282						
ANR	502885	Symbol	check_cmyk_color_model_comps		502282						
ANR	502886	Symbol	k		502282						
ANR	502887	Symbol	params . retain_spot_comps		502282						
ANR	502888	Symbol	pdc		502282						
ANR	502889	Symbol	gs_gstate_update_overprint		502282						
ANR	502890	Symbol	* pdc -> type		502282						
ANR	502891	Symbol	profile_ok		502282						
ANR	502892	Symbol	* k		502282						
ANR	502893	Symbol	GX_CINFO_OPMODE_UNKNOWN		502282						
ANR	502894	Symbol	pgs -> overprint_mode		502282						
ANR	502895	Symbol	& nz_comps		502282						
ANR	502896	Symbol	& output_profile		502282						
ANR	502897	Symbol	pdc -> ccolor		502282						
ANR	502898	Symbol	gx_spot_colors_set_overprint		502282						
ANR	502899	Symbol	pcs -> cmm_icc_profile_data -> hashcode		502282						
ANR	502900	Function	gx_cspace_no_linear	663:0:22861:23205							
ANR	502901	FunctionDef	"gx_cspace_no_linear (const gs_color_space * cs , const gs_gstate * pgs , gx_device * dev , const gs_client_color * c0 , const gs_client_color * c1 , const gs_client_color * c2 , const gs_client_color * c3 , float smoothness , gsicc_link_t * icclink)"		502900	0					
ANR	502902	CompoundStatement		669:0:23164:23205	502900	0					
ANR	502903	ExpressionStatement	return_error ( gs_error_rangecheck )	670:4:23170:23203	502900	0	True				
ANR	502904	CallExpression	return_error ( gs_error_rangecheck )		502900	0					
ANR	502905	Callee	return_error		502900	0					
ANR	502906	Identifier	return_error		502900	0					
ANR	502907	ArgumentList	gs_error_rangecheck		502900	1					
ANR	502908	Argument	gs_error_rangecheck		502900	0					
ANR	502909	Identifier	gs_error_rangecheck		502900	0					
ANR	502910	ReturnType	int		502900	1					
ANR	502911	Identifier	gx_cspace_no_linear		502900	2					
ANR	502912	ParameterList	"const gs_color_space * cs , const gs_gstate * pgs , gx_device * dev , const gs_client_color * c0 , const gs_client_color * c1 , const gs_client_color * c2 , const gs_client_color * c3 , float smoothness , gsicc_link_t * icclink"		502900	3					
ANR	502913	Parameter	const gs_color_space * cs	664:20:22885:22908	502900	0	True				
ANR	502914	ParameterType	const gs_color_space *		502900	0					
ANR	502915	Identifier	cs		502900	1					
ANR	502916	Parameter	const gs_gstate * pgs	664:46:22911:22931	502900	1	True				
ANR	502917	ParameterType	const gs_gstate *		502900	0					
ANR	502918	Identifier	pgs		502900	1					
ANR	502919	Parameter	gx_device * dev	665:16:22950:22964	502900	2	True				
ANR	502920	ParameterType	gx_device *		502900	0					
ANR	502921	Identifier	dev		502900	1					
ANR	502922	Parameter	const gs_client_color * c0	666:16:22983:23007	502900	3	True				
ANR	502923	ParameterType	const gs_client_color *		502900	0					
ANR	502924	Identifier	c0		502900	1					
ANR	502925	Parameter	const gs_client_color * c1	666:43:23010:23034	502900	4	True				
ANR	502926	ParameterType	const gs_client_color *		502900	0					
ANR	502927	Identifier	c1		502900	1					
ANR	502928	Parameter	const gs_client_color * c2	667:16:23053:23077	502900	5	True				
ANR	502929	ParameterType	const gs_client_color *		502900	0					
ANR	502930	Identifier	c2		502900	1					
ANR	502931	Parameter	const gs_client_color * c3	667:43:23080:23104	502900	6	True				
ANR	502932	ParameterType	const gs_client_color *		502900	0					
ANR	502933	Identifier	c3		502900	1					
ANR	502934	Parameter	float smoothness	668:16:23123:23138	502900	7	True				
ANR	502935	ParameterType	float		502900	0					
ANR	502936	Identifier	smoothness		502900	1					
ANR	502937	Parameter	gsicc_link_t * icclink	668:34:23141:23161	502900	8	True				
ANR	502938	ParameterType	gsicc_link_t *		502900	0					
ANR	502939	Identifier	icclink		502900	1					
ANR	502940	CFGEntryNode	ENTRY		502900		True				
ANR	502941	CFGExitNode	EXIT		502900		True				
ANR	502942	Symbol	cs		502900						
ANR	502943	Symbol	c3		502900						
ANR	502944	Symbol	icclink		502900						
ANR	502945	Symbol	smoothness		502900						
ANR	502946	Symbol	dev		502900						
ANR	502947	Symbol	gs_error_rangecheck		502900						
ANR	502948	Symbol	pgs		502900						
ANR	502949	Symbol	c0		502900						
ANR	502950	Symbol	c1		502900						
ANR	502951	Symbol	c2		502900						
ANR	502952	Function	cc2dc	673:0:23208:23440							
ANR	502953	FunctionDef	"cc2dc (const gs_color_space * cs , const gs_gstate * pgs , gx_device * dev , gx_device_color * dc , const gs_client_color * cc)"		502952	0					
ANR	502954	CompoundStatement		676:0:23357:23440	502952	0					
ANR	502955	ReturnStatement	"return cs -> type -> remap_color ( cc , cs , dc , pgs , dev , gs_color_select_texture ) ;"	677:4:23363:23438	502952	0	True				
ANR	502956	CallExpression	"cs -> type -> remap_color ( cc , cs , dc , pgs , dev , gs_color_select_texture )"		502952	0					
ANR	502957	Callee	cs -> type -> remap_color		502952	0					
ANR	502958	PtrMemberAccess	cs -> type -> remap_color		502952	0					
ANR	502959	PtrMemberAccess	cs -> type		502952	0					
ANR	502960	Identifier	cs		502952	0					
ANR	502961	Identifier	type		502952	1					
ANR	502962	Identifier	remap_color		502952	1					
ANR	502963	ArgumentList	cc		502952	1					
ANR	502964	Argument	cc		502952	0					
ANR	502965	Identifier	cc		502952	0					
ANR	502966	Argument	cs		502952	1					
ANR	502967	Identifier	cs		502952	0					
ANR	502968	Argument	dc		502952	2					
ANR	502969	Identifier	dc		502952	0					
ANR	502970	Argument	pgs		502952	3					
ANR	502971	Identifier	pgs		502952	0					
ANR	502972	Argument	dev		502952	4					
ANR	502973	Identifier	dev		502952	0					
ANR	502974	Argument	gs_color_select_texture		502952	5					
ANR	502975	Identifier	gs_color_select_texture		502952	0					
ANR	502976	ReturnType	static inline int		502952	1					
ANR	502977	Identifier	cc2dc		502952	2					
ANR	502978	ParameterList	"const gs_color_space * cs , const gs_gstate * pgs , gx_device * dev , gx_device_color * dc , const gs_client_color * cc"		502952	3					
ANR	502979	Parameter	const gs_color_space * cs	674:6:23232:23255	502952	0	True				
ANR	502980	ParameterType	const gs_color_space *		502952	0					
ANR	502981	Identifier	cs		502952	1					
ANR	502982	Parameter	const gs_gstate * pgs	674:32:23258:23278	502952	1	True				
ANR	502983	ParameterType	const gs_gstate *		502952	0					
ANR	502984	Identifier	pgs		502952	1					
ANR	502985	Parameter	gx_device * dev	674:55:23281:23294	502952	2	True				
ANR	502986	ParameterType	gx_device *		502952	0					
ANR	502987	Identifier	dev		502952	1					
ANR	502988	Parameter	gx_device_color * dc	675:12:23309:23327	502952	3	True				
ANR	502989	ParameterType	gx_device_color *		502952	0					
ANR	502990	Identifier	dc		502952	1					
ANR	502991	Parameter	const gs_client_color * cc	675:33:23330:23354	502952	4	True				
ANR	502992	ParameterType	const gs_client_color *		502952	0					
ANR	502993	Identifier	cc		502952	1					
ANR	502994	CFGEntryNode	ENTRY		502952		True				
ANR	502995	CFGExitNode	EXIT		502952		True				
ANR	502996	Symbol	cs		502952						
ANR	502997	Symbol	cc		502952						
ANR	502998	Symbol	cs -> type		502952						
ANR	502999	Symbol	dev		502952						
ANR	503000	Symbol	* cs		502952						
ANR	503001	Symbol	cs -> type -> remap_color		502952						
ANR	503002	Symbol	* cs -> type		502952						
ANR	503003	Symbol	pgs		502952						
ANR	503004	Symbol	gs_color_select_texture		502952						
ANR	503005	Symbol	* * cs		502952						
ANR	503006	Symbol	dc		502952						
ANR	503007	Function	interpolate_cc	680:0:23443:23704							
ANR	503008	FunctionDef	"interpolate_cc (gs_client_color * c , const gs_client_color * c0 , const gs_client_color * c1 , double t , int n)"		503007	0					
ANR	503009	CompoundStatement		683:0:23576:23704	503007	0					
ANR	503010	IdentifierDeclStatement	int i ;	684:4:23582:23587	503007	0	True				
ANR	503011	IdentifierDecl	i		503007	0					
ANR	503012	IdentifierDeclType	int		503007	0					
ANR	503013	Identifier	i		503007	1					
ANR	503014	ForStatement	for ( i = 0 ; i < n ; i ++ )		503007	1					
ANR	503015	ForInit	i = 0 ;	686:9:23599:23604	503007	0	True				
ANR	503016	AssignmentExpression	i = 0		503007	0		=			
ANR	503017	Identifier	i		503007	0					
ANR	503018	PrimaryExpression	0		503007	1					
ANR	503019	Condition	i < n	686:16:23606:23610	503007	1	True				
ANR	503020	RelationalExpression	i < n		503007	0		<			
ANR	503021	Identifier	i		503007	0					
ANR	503022	Identifier	n		503007	1					
ANR	503023	PostIncDecOperationExpression	i ++	686:23:23613:23615	503007	2	True				
ANR	503024	Identifier	i		503007	0					
ANR	503025	IncDec	++		503007	1					
ANR	503026	ExpressionStatement	c -> paint . values [ i ] = c0 -> paint . values [ i ] * t + c1 -> paint . values [ i ] * ( 1 - t )	687:8:23626:23702	503007	3	True				
ANR	503027	AssignmentExpression	c -> paint . values [ i ] = c0 -> paint . values [ i ] * t + c1 -> paint . values [ i ] * ( 1 - t )		503007	0		=			
ANR	503028	ArrayIndexing	c -> paint . values [ i ]		503007	0					
ANR	503029	MemberAccess	c -> paint . values		503007	0					
ANR	503030	PtrMemberAccess	c -> paint		503007	0					
ANR	503031	Identifier	c		503007	0					
ANR	503032	Identifier	paint		503007	1					
ANR	503033	Identifier	values		503007	1					
ANR	503034	Identifier	i		503007	1					
ANR	503035	AdditiveExpression	c0 -> paint . values [ i ] * t + c1 -> paint . values [ i ] * ( 1 - t )		503007	1		+			
ANR	503036	MultiplicativeExpression	c0 -> paint . values [ i ] * t		503007	0		*			
ANR	503037	ArrayIndexing	c0 -> paint . values [ i ]		503007	0					
ANR	503038	MemberAccess	c0 -> paint . values		503007	0					
ANR	503039	PtrMemberAccess	c0 -> paint		503007	0					
ANR	503040	Identifier	c0		503007	0					
ANR	503041	Identifier	paint		503007	1					
ANR	503042	Identifier	values		503007	1					
ANR	503043	Identifier	i		503007	1					
ANR	503044	Identifier	t		503007	1					
ANR	503045	MultiplicativeExpression	c1 -> paint . values [ i ] * ( 1 - t )		503007	1		*			
ANR	503046	ArrayIndexing	c1 -> paint . values [ i ]		503007	0					
ANR	503047	MemberAccess	c1 -> paint . values		503007	0					
ANR	503048	PtrMemberAccess	c1 -> paint		503007	0					
ANR	503049	Identifier	c1		503007	0					
ANR	503050	Identifier	paint		503007	1					
ANR	503051	Identifier	values		503007	1					
ANR	503052	Identifier	i		503007	1					
ANR	503053	AdditiveExpression	1 - t		503007	1		-			
ANR	503054	PrimaryExpression	1		503007	0					
ANR	503055	Identifier	t		503007	1					
ANR	503056	ReturnType	static inline void		503007	1					
ANR	503057	Identifier	interpolate_cc		503007	2					
ANR	503058	ParameterList	"gs_client_color * c , const gs_client_color * c0 , const gs_client_color * c1 , double t , int n"		503007	3					
ANR	503059	Parameter	gs_client_color * c	681:15:23477:23494	503007	0	True				
ANR	503060	ParameterType	gs_client_color *		503007	0					
ANR	503061	Identifier	c		503007	1					
ANR	503062	Parameter	const gs_client_color * c0	682:8:23505:23529	503007	1	True				
ANR	503063	ParameterType	const gs_client_color *		503007	0					
ANR	503064	Identifier	c0		503007	1					
ANR	503065	Parameter	const gs_client_color * c1	682:35:23532:23556	503007	2	True				
ANR	503066	ParameterType	const gs_client_color *		503007	0					
ANR	503067	Identifier	c1		503007	1					
ANR	503068	Parameter	double t	682:62:23559:23566	503007	3	True				
ANR	503069	ParameterType	double		503007	0					
ANR	503070	Identifier	t		503007	1					
ANR	503071	Parameter	int n	682:72:23569:23573	503007	4	True				
ANR	503072	ParameterType	int		503007	0					
ANR	503073	Identifier	n		503007	1					
ANR	503074	CFGEntryNode	ENTRY		503007		True				
ANR	503075	CFGExitNode	EXIT		503007		True				
ANR	503076	Symbol	* c1 -> paint . values		503007						
ANR	503077	Symbol	c0 -> paint		503007						
ANR	503078	Symbol	* c0 -> paint		503007						
ANR	503079	Symbol	* c0 -> paint . values		503007						
ANR	503080	Symbol	* * c1		503007						
ANR	503081	Symbol	* * c0		503007						
ANR	503082	Symbol	c0 -> paint . values		503007						
ANR	503083	Symbol	c1 -> paint . values		503007						
ANR	503084	Symbol	* c1 -> paint		503007						
ANR	503085	Symbol	c		503007						
ANR	503086	Symbol	* c -> paint . values		503007						
ANR	503087	Symbol	* * c		503007						
ANR	503088	Symbol	i		503007						
ANR	503089	Symbol	c -> paint . values		503007						
ANR	503090	Symbol	c0		503007						
ANR	503091	Symbol	* c		503007						
ANR	503092	Symbol	c1		503007						
ANR	503093	Symbol	n		503007						
ANR	503094	Symbol	* c0		503007						
ANR	503095	Symbol	c -> paint		503007						
ANR	503096	Symbol	* i		503007						
ANR	503097	Symbol	t		503007						
ANR	503098	Symbol	c1 -> paint		503007						
ANR	503099	Symbol	* c1		503007						
ANR	503100	Symbol	* c -> paint		503007						
ANR	503101	Function	is_dc_nearly_linear	690:0:23707:25770							
ANR	503102	FunctionDef	"is_dc_nearly_linear (const gx_device * dev , const gx_device_color * c , const gx_device_color * c0 , const gx_device_color * c1 , double t , uchar n , float smoothness)"		503101	0					
ANR	503103	CompoundStatement		694:0:23901:25770	503101	0					
ANR	503104	IdentifierDeclStatement	uchar i ;	695:4:23907:23914	503101	0	True				
ANR	503105	IdentifierDecl	i		503101	0					
ANR	503106	IdentifierDeclType	uchar		503101	0					
ANR	503107	Identifier	i		503101	1					
ANR	503108	IfStatement	if ( c0 -> type == & gx_dc_type_data_pure )		503101	1					
ANR	503109	Condition	c0 -> type == & gx_dc_type_data_pure	697:8:23925:23957	503101	0	True				
ANR	503110	EqualityExpression	c0 -> type == & gx_dc_type_data_pure		503101	0		==			
ANR	503111	PtrMemberAccess	c0 -> type		503101	0					
ANR	503112	Identifier	c0		503101	0					
ANR	503113	Identifier	type		503101	1					
ANR	503114	UnaryOperationExpression	& gx_dc_type_data_pure		503101	1					
ANR	503115	UnaryOperator	&		503101	0					
ANR	503116	Identifier	gx_dc_type_data_pure		503101	1					
ANR	503117	CompoundStatement		7:8:164:200	503101	1					
ANR	503118	IdentifierDeclStatement	gx_color_index pure0 = c0 -> colors . pure ;	698:8:23970:24008	503101	0	True				
ANR	503119	IdentifierDecl	pure0 = c0 -> colors . pure		503101	0					
ANR	503120	IdentifierDeclType	gx_color_index		503101	0					
ANR	503121	Identifier	pure0		503101	1					
ANR	503122	AssignmentExpression	pure0 = c0 -> colors . pure		503101	2		=			
ANR	503123	Identifier	pure0		503101	0					
ANR	503124	MemberAccess	c0 -> colors . pure		503101	1					
ANR	503125	PtrMemberAccess	c0 -> colors		503101	0					
ANR	503126	Identifier	c0		503101	0					
ANR	503127	Identifier	colors		503101	1					
ANR	503128	Identifier	pure		503101	1					
ANR	503129	IdentifierDeclStatement	gx_color_index pure1 = c1 -> colors . pure ;	699:8:24018:24056	503101	1	True				
ANR	503130	IdentifierDecl	pure1 = c1 -> colors . pure		503101	0					
ANR	503131	IdentifierDeclType	gx_color_index		503101	0					
ANR	503132	Identifier	pure1		503101	1					
ANR	503133	AssignmentExpression	pure1 = c1 -> colors . pure		503101	2		=			
ANR	503134	Identifier	pure1		503101	0					
ANR	503135	MemberAccess	c1 -> colors . pure		503101	1					
ANR	503136	PtrMemberAccess	c1 -> colors		503101	0					
ANR	503137	Identifier	c1		503101	0					
ANR	503138	Identifier	colors		503101	1					
ANR	503139	Identifier	pure		503101	1					
ANR	503140	IdentifierDeclStatement	gx_color_index pure = c -> colors . pure ;	700:8:24066:24102	503101	2	True				
ANR	503141	IdentifierDecl	pure = c -> colors . pure		503101	0					
ANR	503142	IdentifierDeclType	gx_color_index		503101	0					
ANR	503143	Identifier	pure		503101	1					
ANR	503144	AssignmentExpression	pure = c -> colors . pure		503101	2		=			
ANR	503145	Identifier	pure		503101	0					
ANR	503146	MemberAccess	c -> colors . pure		503101	1					
ANR	503147	PtrMemberAccess	c -> colors		503101	0					
ANR	503148	Identifier	c		503101	0					
ANR	503149	Identifier	colors		503101	1					
ANR	503150	Identifier	pure		503101	1					
ANR	503151	ForStatement	for ( i = 0 ; i < n ; i ++ )		503101	3					
ANR	503152	ForInit	i = 0 ;	702:13:24118:24123	503101	0	True				
ANR	503153	AssignmentExpression	i = 0		503101	0		=			
ANR	503154	Identifier	i		503101	0					
ANR	503155	PrimaryExpression	0		503101	1					
ANR	503156	Condition	i < n	702:20:24125:24129	503101	1	True				
ANR	503157	RelationalExpression	i < n		503101	0		<			
ANR	503158	Identifier	i		503101	0					
ANR	503159	Identifier	n		503101	1					
ANR	503160	PostIncDecOperationExpression	i ++	702:27:24132:24134	503101	2	True				
ANR	503161	Identifier	i		503101	0					
ANR	503162	IncDec	++		503101	1					
ANR	503163	CompoundStatement		17:12:728:761	503101	3					
ANR	503164	IdentifierDeclStatement	int shift = dev -> color_info . comp_shift [ i ] ;	703:12:24151:24192	503101	0	True				
ANR	503165	IdentifierDecl	shift = dev -> color_info . comp_shift [ i ]		503101	0					
ANR	503166	IdentifierDeclType	int		503101	0					
ANR	503167	Identifier	shift		503101	1					
ANR	503168	AssignmentExpression	shift = dev -> color_info . comp_shift [ i ]		503101	2		=			
ANR	503169	Identifier	shift		503101	0					
ANR	503170	ArrayIndexing	dev -> color_info . comp_shift [ i ]		503101	1					
ANR	503171	MemberAccess	dev -> color_info . comp_shift		503101	0					
ANR	503172	PtrMemberAccess	dev -> color_info		503101	0					
ANR	503173	Identifier	dev		503101	0					
ANR	503174	Identifier	color_info		503101	1					
ANR	503175	Identifier	comp_shift		503101	1					
ANR	503176	Identifier	i		503101	1					
ANR	503177	IdentifierDeclStatement	int mask = ( 1 << dev -> color_info . comp_bits [ i ] ) - 1 ;	704:12:24206:24256	503101	1	True				
ANR	503178	IdentifierDecl	mask = ( 1 << dev -> color_info . comp_bits [ i ] ) - 1		503101	0					
ANR	503179	IdentifierDeclType	int		503101	0					
ANR	503180	Identifier	mask		503101	1					
ANR	503181	AssignmentExpression	mask = ( 1 << dev -> color_info . comp_bits [ i ] ) - 1		503101	2		=			
ANR	503182	Identifier	mask		503101	0					
ANR	503183	AdditiveExpression	( 1 << dev -> color_info . comp_bits [ i ] ) - 1		503101	1		-			
ANR	503184	ShiftExpression	1 << dev -> color_info . comp_bits [ i ]		503101	0		<<			
ANR	503185	PrimaryExpression	1		503101	0					
ANR	503186	ArrayIndexing	dev -> color_info . comp_bits [ i ]		503101	1					
ANR	503187	MemberAccess	dev -> color_info . comp_bits		503101	0					
ANR	503188	PtrMemberAccess	dev -> color_info		503101	0					
ANR	503189	Identifier	dev		503101	0					
ANR	503190	Identifier	color_info		503101	1					
ANR	503191	Identifier	comp_bits		503101	1					
ANR	503192	Identifier	i		503101	1					
ANR	503193	PrimaryExpression	1		503101	1					
ANR	503194	IdentifierDeclStatement	int max_color = ( i == dev -> color_info . gray_index ? dev -> color_info . max_gray : dev -> color_info . max_color ) ;	705:12:24270:24435	503101	2	True				
ANR	503195	IdentifierDecl	max_color = ( i == dev -> color_info . gray_index ? dev -> color_info . max_gray : dev -> color_info . max_color )		503101	0					
ANR	503196	IdentifierDeclType	int		503101	0					
ANR	503197	Identifier	max_color		503101	1					
ANR	503198	AssignmentExpression	max_color = ( i == dev -> color_info . gray_index ? dev -> color_info . max_gray : dev -> color_info . max_color )		503101	2		=			
ANR	503199	Identifier	max_color		503101	0					
ANR	503200	ConditionalExpression	i == dev -> color_info . gray_index ? dev -> color_info . max_gray : dev -> color_info . max_color		503101	1					
ANR	503201	Condition	i == dev -> color_info . gray_index		503101	0					
ANR	503202	EqualityExpression	i == dev -> color_info . gray_index		503101	0		==			
ANR	503203	Identifier	i		503101	0					
ANR	503204	MemberAccess	dev -> color_info . gray_index		503101	1					
ANR	503205	PtrMemberAccess	dev -> color_info		503101	0					
ANR	503206	Identifier	dev		503101	0					
ANR	503207	Identifier	color_info		503101	1					
ANR	503208	Identifier	gray_index		503101	1					
ANR	503209	MemberAccess	dev -> color_info . max_gray		503101	1					
ANR	503210	PtrMemberAccess	dev -> color_info		503101	0					
ANR	503211	Identifier	dev		503101	0					
ANR	503212	Identifier	color_info		503101	1					
ANR	503213	Identifier	max_gray		503101	1					
ANR	503214	MemberAccess	dev -> color_info . max_color		503101	2					
ANR	503215	PtrMemberAccess	dev -> color_info		503101	0					
ANR	503216	Identifier	dev		503101	0					
ANR	503217	Identifier	color_info		503101	1					
ANR	503218	Identifier	max_color		503101	1					
ANR	503219	IdentifierDeclStatement	"float max_diff = max ( 1 , max_color * smoothness ) ;"	707:12:24449:24496	503101	3	True				
ANR	503220	IdentifierDecl	"max_diff = max ( 1 , max_color * smoothness )"		503101	0					
ANR	503221	IdentifierDeclType	float		503101	0					
ANR	503222	Identifier	max_diff		503101	1					
ANR	503223	AssignmentExpression	"max_diff = max ( 1 , max_color * smoothness )"		503101	2		=			
ANR	503224	Identifier	max_diff		503101	0					
ANR	503225	CallExpression	"max ( 1 , max_color * smoothness )"		503101	1					
ANR	503226	Callee	max		503101	0					
ANR	503227	Identifier	max		503101	0					
ANR	503228	ArgumentList	1		503101	1					
ANR	503229	Argument	1		503101	0					
ANR	503230	PrimaryExpression	1		503101	0					
ANR	503231	Argument	max_color * smoothness		503101	1					
ANR	503232	MultiplicativeExpression	max_color * smoothness		503101	0		*			
ANR	503233	Identifier	max_color		503101	0					
ANR	503234	Identifier	smoothness		503101	1					
ANR	503235	IdentifierDeclStatement	"int b0 = ( pure0 >> shift ) & mask , b1 = ( pure1 >> shift ) & mask ;"	708:12:24510:24572	503101	4	True				
ANR	503236	IdentifierDecl	b0 = ( pure0 >> shift ) & mask		503101	0					
ANR	503237	IdentifierDeclType	int		503101	0					
ANR	503238	Identifier	b0		503101	1					
ANR	503239	AssignmentExpression	b0 = ( pure0 >> shift ) & mask		503101	2		=			
ANR	503240	Identifier	b0		503101	0					
ANR	503241	BitAndExpression	( pure0 >> shift ) & mask		503101	1		&			
ANR	503242	ShiftExpression	pure0 >> shift		503101	0		>>			
ANR	503243	Identifier	pure0		503101	0					
ANR	503244	Identifier	shift		503101	1					
ANR	503245	Identifier	mask		503101	1					
ANR	503246	IdentifierDecl	b1 = ( pure1 >> shift ) & mask		503101	1					
ANR	503247	IdentifierDeclType	int		503101	0					
ANR	503248	Identifier	b1		503101	1					
ANR	503249	AssignmentExpression	b1 = ( pure1 >> shift ) & mask		503101	2		=			
ANR	503250	Identifier	b1		503101	0					
ANR	503251	BitAndExpression	( pure1 >> shift ) & mask		503101	1		&			
ANR	503252	ShiftExpression	pure1 >> shift		503101	0		>>			
ANR	503253	Identifier	pure1		503101	0					
ANR	503254	Identifier	shift		503101	1					
ANR	503255	Identifier	mask		503101	1					
ANR	503256	IdentifierDeclStatement	int b = ( pure >> shift ) & mask ;	709:12:24586:24616	503101	5	True				
ANR	503257	IdentifierDecl	b = ( pure >> shift ) & mask		503101	0					
ANR	503258	IdentifierDeclType	int		503101	0					
ANR	503259	Identifier	b		503101	1					
ANR	503260	AssignmentExpression	b = ( pure >> shift ) & mask		503101	2		=			
ANR	503261	Identifier	b		503101	0					
ANR	503262	BitAndExpression	( pure >> shift ) & mask		503101	1		&			
ANR	503263	ShiftExpression	pure >> shift		503101	0		>>			
ANR	503264	Identifier	pure		503101	0					
ANR	503265	Identifier	shift		503101	1					
ANR	503266	Identifier	mask		503101	1					
ANR	503267	IdentifierDeclStatement	double bb = b0 * t + b1 * ( 1 - t ) ;	710:12:24630:24663	503101	6	True				
ANR	503268	IdentifierDecl	bb = b0 * t + b1 * ( 1 - t )		503101	0					
ANR	503269	IdentifierDeclType	double		503101	0					
ANR	503270	Identifier	bb		503101	1					
ANR	503271	AssignmentExpression	bb = b0 * t + b1 * ( 1 - t )		503101	2		=			
ANR	503272	Identifier	bb		503101	0					
ANR	503273	AdditiveExpression	b0 * t + b1 * ( 1 - t )		503101	1		+			
ANR	503274	MultiplicativeExpression	b0 * t		503101	0		*			
ANR	503275	Identifier	b0		503101	0					
ANR	503276	Identifier	t		503101	1					
ANR	503277	MultiplicativeExpression	b1 * ( 1 - t )		503101	1		*			
ANR	503278	Identifier	b1		503101	0					
ANR	503279	AdditiveExpression	1 - t		503101	1		-			
ANR	503280	PrimaryExpression	1		503101	0					
ANR	503281	Identifier	t		503101	1					
ANR	503282	IfStatement	if ( any_abs ( b - bb ) > max_diff )		503101	7					
ANR	503283	Condition	any_abs ( b - bb ) > max_diff	712:16:24682:24707	503101	0	True				
ANR	503284	RelationalExpression	any_abs ( b - bb ) > max_diff		503101	0		>			
ANR	503285	CallExpression	any_abs ( b - bb )		503101	0					
ANR	503286	Callee	any_abs		503101	0					
ANR	503287	Identifier	any_abs		503101	0					
ANR	503288	ArgumentList	b - bb		503101	1					
ANR	503289	Argument	b - bb		503101	0					
ANR	503290	AdditiveExpression	b - bb		503101	0		-			
ANR	503291	Identifier	b		503101	0					
ANR	503292	Identifier	bb		503101	1					
ANR	503293	Identifier	max_diff		503101	1					
ANR	503294	ReturnStatement	return false ;	713:16:24726:24738	503101	1	True				
ANR	503295	Identifier	false		503101	0					
ANR	503296	ReturnStatement	return true ;	715:8:24758:24769	503101	4	True				
ANR	503297	Identifier	true		503101	0					
ANR	503298	ElseStatement	else		503101	0					
ANR	503299	IfStatement	if ( c0 -> type == & gx_dc_type_data_devn )		503101	0					
ANR	503300	Condition	c0 -> type == & gx_dc_type_data_devn	716:15:24786:24818	503101	0	True				
ANR	503301	EqualityExpression	c0 -> type == & gx_dc_type_data_devn		503101	0		==			
ANR	503302	PtrMemberAccess	c0 -> type		503101	0					
ANR	503303	Identifier	c0		503101	0					
ANR	503304	Identifier	type		503101	1					
ANR	503305	UnaryOperationExpression	& gx_dc_type_data_devn		503101	1					
ANR	503306	UnaryOperator	&		503101	0					
ANR	503307	Identifier	gx_dc_type_data_devn		503101	1					
ANR	503308	CompoundStatement		23:50:919:919	503101	1					
ANR	503309	ForStatement	for ( i = 0 ; i < n ; i ++ )		503101	0					
ANR	503310	ForInit	i = 0 ;	717:13:24836:24841	503101	0	True				
ANR	503311	AssignmentExpression	i = 0		503101	0		=			
ANR	503312	Identifier	i		503101	0					
ANR	503313	PrimaryExpression	0		503101	1					
ANR	503314	Condition	i < n	717:20:24843:24847	503101	1	True				
ANR	503315	RelationalExpression	i < n		503101	0		<			
ANR	503316	Identifier	i		503101	0					
ANR	503317	Identifier	n		503101	1					
ANR	503318	PostIncDecOperationExpression	i ++	717:27:24850:24852	503101	2	True				
ANR	503319	Identifier	i		503101	0					
ANR	503320	IncDec	++		503101	1					
ANR	503321	CompoundStatement		35:12:1622:1655	503101	3					
ANR	503322	IdentifierDeclStatement	int max_color = ( i == dev -> color_info . gray_index ? dev -> color_info . max_gray : dev -> color_info . max_color ) ;	718:12:24869:24989	503101	0	True				
ANR	503323	IdentifierDecl	max_color = ( i == dev -> color_info . gray_index ? dev -> color_info . max_gray : dev -> color_info . max_color )		503101	0					
ANR	503324	IdentifierDeclType	int		503101	0					
ANR	503325	Identifier	max_color		503101	1					
ANR	503326	AssignmentExpression	max_color = ( i == dev -> color_info . gray_index ? dev -> color_info . max_gray : dev -> color_info . max_color )		503101	2		=			
ANR	503327	Identifier	max_color		503101	0					
ANR	503328	ConditionalExpression	i == dev -> color_info . gray_index ? dev -> color_info . max_gray : dev -> color_info . max_color		503101	1					
ANR	503329	Condition	i == dev -> color_info . gray_index		503101	0					
ANR	503330	EqualityExpression	i == dev -> color_info . gray_index		503101	0		==			
ANR	503331	Identifier	i		503101	0					
ANR	503332	MemberAccess	dev -> color_info . gray_index		503101	1					
ANR	503333	PtrMemberAccess	dev -> color_info		503101	0					
ANR	503334	Identifier	dev		503101	0					
ANR	503335	Identifier	color_info		503101	1					
ANR	503336	Identifier	gray_index		503101	1					
ANR	503337	MemberAccess	dev -> color_info . max_gray		503101	1					
ANR	503338	PtrMemberAccess	dev -> color_info		503101	0					
ANR	503339	Identifier	dev		503101	0					
ANR	503340	Identifier	color_info		503101	1					
ANR	503341	Identifier	max_gray		503101	1					
ANR	503342	MemberAccess	dev -> color_info . max_color		503101	2					
ANR	503343	PtrMemberAccess	dev -> color_info		503101	0					
ANR	503344	Identifier	dev		503101	0					
ANR	503345	Identifier	color_info		503101	1					
ANR	503346	Identifier	max_color		503101	1					
ANR	503347	IdentifierDeclStatement	"double max_diff = max ( 1 , max_color * smoothness ) ;"	720:12:25003:25051	503101	1	True				
ANR	503348	IdentifierDecl	"max_diff = max ( 1 , max_color * smoothness )"		503101	0					
ANR	503349	IdentifierDeclType	double		503101	0					
ANR	503350	Identifier	max_diff		503101	1					
ANR	503351	AssignmentExpression	"max_diff = max ( 1 , max_color * smoothness )"		503101	2		=			
ANR	503352	Identifier	max_diff		503101	0					
ANR	503353	CallExpression	"max ( 1 , max_color * smoothness )"		503101	1					
ANR	503354	Callee	max		503101	0					
ANR	503355	Identifier	max		503101	0					
ANR	503356	ArgumentList	1		503101	1					
ANR	503357	Argument	1		503101	0					
ANR	503358	PrimaryExpression	1		503101	0					
ANR	503359	Argument	max_color * smoothness		503101	1					
ANR	503360	MultiplicativeExpression	max_color * smoothness		503101	0		*			
ANR	503361	Identifier	max_color		503101	0					
ANR	503362	Identifier	smoothness		503101	1					
ANR	503363	IdentifierDeclStatement	double ratio = ( double ) max_color / ( double ) gx_max_color_value ;	724:12:25268:25329	503101	2	True				
ANR	503364	IdentifierDecl	ratio = ( double ) max_color / ( double ) gx_max_color_value		503101	0					
ANR	503365	IdentifierDeclType	double		503101	0					
ANR	503366	Identifier	ratio		503101	1					
ANR	503367	AssignmentExpression	ratio = ( double ) max_color / ( double ) gx_max_color_value		503101	2		=			
ANR	503368	Identifier	ratio		503101	0					
ANR	503369	MultiplicativeExpression	( double ) max_color / ( double ) gx_max_color_value		503101	1		/			
ANR	503370	CastExpression	( double ) max_color		503101	0					
ANR	503371	CastTarget	double		503101	0					
ANR	503372	Identifier	max_color		503101	1					
ANR	503373	CastExpression	( double ) gx_max_color_value		503101	1					
ANR	503374	CastTarget	double		503101	0					
ANR	503375	Identifier	gx_max_color_value		503101	1					
ANR	503376	IdentifierDeclStatement	double b0 = ( c0 -> colors . devn . values [ i ] ) * ratio ;	725:12:25343:25390	503101	3	True				
ANR	503377	IdentifierDecl	b0 = ( c0 -> colors . devn . values [ i ] ) * ratio		503101	0					
ANR	503378	IdentifierDeclType	double		503101	0					
ANR	503379	Identifier	b0		503101	1					
ANR	503380	AssignmentExpression	b0 = ( c0 -> colors . devn . values [ i ] ) * ratio		503101	2		=			
ANR	503381	Identifier	b0		503101	0					
ANR	503382	MultiplicativeExpression	( c0 -> colors . devn . values [ i ] ) * ratio		503101	1		*			
ANR	503383	ArrayIndexing	c0 -> colors . devn . values [ i ]		503101	0					
ANR	503384	MemberAccess	c0 -> colors . devn . values		503101	0					
ANR	503385	MemberAccess	c0 -> colors . devn		503101	0					
ANR	503386	PtrMemberAccess	c0 -> colors		503101	0					
ANR	503387	Identifier	c0		503101	0					
ANR	503388	Identifier	colors		503101	1					
ANR	503389	Identifier	devn		503101	1					
ANR	503390	Identifier	values		503101	1					
ANR	503391	Identifier	i		503101	1					
ANR	503392	Identifier	ratio		503101	1					
ANR	503393	IdentifierDeclStatement	double b1 = ( c1 -> colors . devn . values [ i ] ) * ratio ;	726:12:25404:25451	503101	4	True				
ANR	503394	IdentifierDecl	b1 = ( c1 -> colors . devn . values [ i ] ) * ratio		503101	0					
ANR	503395	IdentifierDeclType	double		503101	0					
ANR	503396	Identifier	b1		503101	1					
ANR	503397	AssignmentExpression	b1 = ( c1 -> colors . devn . values [ i ] ) * ratio		503101	2		=			
ANR	503398	Identifier	b1		503101	0					
ANR	503399	MultiplicativeExpression	( c1 -> colors . devn . values [ i ] ) * ratio		503101	1		*			
ANR	503400	ArrayIndexing	c1 -> colors . devn . values [ i ]		503101	0					
ANR	503401	MemberAccess	c1 -> colors . devn . values		503101	0					
ANR	503402	MemberAccess	c1 -> colors . devn		503101	0					
ANR	503403	PtrMemberAccess	c1 -> colors		503101	0					
ANR	503404	Identifier	c1		503101	0					
ANR	503405	Identifier	colors		503101	1					
ANR	503406	Identifier	devn		503101	1					
ANR	503407	Identifier	values		503101	1					
ANR	503408	Identifier	i		503101	1					
ANR	503409	Identifier	ratio		503101	1					
ANR	503410	IdentifierDeclStatement	double b = ( c -> colors . devn . values [ i ] ) * ratio ;	727:12:25465:25510	503101	5	True				
ANR	503411	IdentifierDecl	b = ( c -> colors . devn . values [ i ] ) * ratio		503101	0					
ANR	503412	IdentifierDeclType	double		503101	0					
ANR	503413	Identifier	b		503101	1					
ANR	503414	AssignmentExpression	b = ( c -> colors . devn . values [ i ] ) * ratio		503101	2		=			
ANR	503415	Identifier	b		503101	0					
ANR	503416	MultiplicativeExpression	( c -> colors . devn . values [ i ] ) * ratio		503101	1		*			
ANR	503417	ArrayIndexing	c -> colors . devn . values [ i ]		503101	0					
ANR	503418	MemberAccess	c -> colors . devn . values		503101	0					
ANR	503419	MemberAccess	c -> colors . devn		503101	0					
ANR	503420	PtrMemberAccess	c -> colors		503101	0					
ANR	503421	Identifier	c		503101	0					
ANR	503422	Identifier	colors		503101	1					
ANR	503423	Identifier	devn		503101	1					
ANR	503424	Identifier	values		503101	1					
ANR	503425	Identifier	i		503101	1					
ANR	503426	Identifier	ratio		503101	1					
ANR	503427	IdentifierDeclStatement	double bb = b0 * t + b1 * ( 1 - t ) ;	728:12:25524:25557	503101	6	True				
ANR	503428	IdentifierDecl	bb = b0 * t + b1 * ( 1 - t )		503101	0					
ANR	503429	IdentifierDeclType	double		503101	0					
ANR	503430	Identifier	bb		503101	1					
ANR	503431	AssignmentExpression	bb = b0 * t + b1 * ( 1 - t )		503101	2		=			
ANR	503432	Identifier	bb		503101	0					
ANR	503433	AdditiveExpression	b0 * t + b1 * ( 1 - t )		503101	1		+			
ANR	503434	MultiplicativeExpression	b0 * t		503101	0		*			
ANR	503435	Identifier	b0		503101	0					
ANR	503436	Identifier	t		503101	1					
ANR	503437	MultiplicativeExpression	b1 * ( 1 - t )		503101	1		*			
ANR	503438	Identifier	b1		503101	0					
ANR	503439	AdditiveExpression	1 - t		503101	1		-			
ANR	503440	PrimaryExpression	1		503101	0					
ANR	503441	Identifier	t		503101	1					
ANR	503442	IfStatement	if ( any_abs ( b - bb ) > max_diff )		503101	7					
ANR	503443	Condition	any_abs ( b - bb ) > max_diff	729:16:25575:25600	503101	0	True				
ANR	503444	RelationalExpression	any_abs ( b - bb ) > max_diff		503101	0		>			
ANR	503445	CallExpression	any_abs ( b - bb )		503101	0					
ANR	503446	Callee	any_abs		503101	0					
ANR	503447	Identifier	any_abs		503101	0					
ANR	503448	ArgumentList	b - bb		503101	1					
ANR	503449	Argument	b - bb		503101	0					
ANR	503450	AdditiveExpression	b - bb		503101	0		-			
ANR	503451	Identifier	b		503101	0					
ANR	503452	Identifier	bb		503101	1					
ANR	503453	Identifier	max_diff		503101	1					
ANR	503454	ReturnStatement	return false ;	730:16:25619:25631	503101	1	True				
ANR	503455	Identifier	false		503101	0					
ANR	503456	ReturnStatement	return true ;	732:8:25651:25662	503101	1	True				
ANR	503457	Identifier	true		503101	0					
ANR	503458	ElseStatement	else		503101	0					
ANR	503459	CompoundStatement		40:11:1773:1773	503101	0					
ANR	503460	ReturnStatement	return false ;	735:8:25750:25762	503101	0	True				
ANR	503461	Identifier	false		503101	0					
ANR	503462	ReturnType	static inline bool		503101	1					
ANR	503463	Identifier	is_dc_nearly_linear		503101	2					
ANR	503464	ParameterList	"const gx_device * dev , const gx_device_color * c , const gx_device_color * c0 , const gx_device_color * c1 , double t , uchar n , float smoothness"		503101	3					
ANR	503465	Parameter	const gx_device * dev	691:20:23746:23765	503101	0	True				
ANR	503466	ParameterType	const gx_device *		503101	0					
ANR	503467	Identifier	dev		503101	1					
ANR	503468	Parameter	const gx_device_color * c	691:42:23768:23791	503101	1	True				
ANR	503469	ParameterType	const gx_device_color *		503101	0					
ANR	503470	Identifier	c		503101	1					
ANR	503471	Parameter	const gx_device_color * c0	692:8:23802:23826	503101	2	True				
ANR	503472	ParameterType	const gx_device_color *		503101	0					
ANR	503473	Identifier	c0		503101	1					
ANR	503474	Parameter	const gx_device_color * c1	692:35:23829:23853	503101	3	True				
ANR	503475	ParameterType	const gx_device_color *		503101	0					
ANR	503476	Identifier	c1		503101	1					
ANR	503477	Parameter	double t	693:8:23864:23871	503101	4	True				
ANR	503478	ParameterType	double		503101	0					
ANR	503479	Identifier	t		503101	1					
ANR	503480	Parameter	uchar n	693:18:23874:23880	503101	5	True				
ANR	503481	ParameterType	uchar		503101	0					
ANR	503482	Identifier	n		503101	1					
ANR	503483	Parameter	float smoothness	693:27:23883:23898	503101	6	True				
ANR	503484	ParameterType	float		503101	0					
ANR	503485	Identifier	smoothness		503101	1					
ANR	503486	CFGEntryNode	ENTRY		503101		True				
ANR	503487	CFGExitNode	EXIT		503101		True				
ANR	503488	Symbol	* c1 -> colors		503101						
ANR	503489	Symbol	shift		503101						
ANR	503490	Symbol	c1 -> colors . devn . values		503101						
ANR	503491	Symbol	b0		503101						
ANR	503492	Symbol	b1		503101						
ANR	503493	Symbol	c -> colors . devn . values		503101						
ANR	503494	Symbol	dev		503101						
ANR	503495	Symbol	* dev -> color_info . comp_bits		503101						
ANR	503496	Symbol	* c0 -> colors . devn . values		503101						
ANR	503497	Symbol	* * c1		503101						
ANR	503498	Symbol	* * c0		503101						
ANR	503499	Symbol	* dev -> color_info . comp_shift		503101						
ANR	503500	Symbol	c0 -> colors . devn . values		503101						
ANR	503501	Symbol	* c -> colors . devn		503101						
ANR	503502	Symbol	* c1 -> colors . devn . values		503101						
ANR	503503	Symbol	dev -> color_info . max_color		503101						
ANR	503504	Symbol	* c -> colors		503101						
ANR	503505	Symbol	* * c		503101						
ANR	503506	Symbol	c0		503101						
ANR	503507	Symbol	c1 -> colors . pure		503101						
ANR	503508	Symbol	c1		503101						
ANR	503509	Symbol	c1 -> colors . devn		503101						
ANR	503510	Symbol	gx_max_color_value		503101						
ANR	503511	Symbol	true		503101						
ANR	503512	Symbol	* dev		503101						
ANR	503513	Symbol	bb		503101						
ANR	503514	Symbol	c -> colors . pure		503101						
ANR	503515	Symbol	c0 -> type		503101						
ANR	503516	Symbol	max_diff		503101						
ANR	503517	Symbol	pure		503101						
ANR	503518	Symbol	dev -> color_info		503101						
ANR	503519	Symbol	c -> colors . devn		503101						
ANR	503520	Symbol	* c -> colors . devn . values		503101						
ANR	503521	Symbol	c0 -> colors		503101						
ANR	503522	Symbol	dev -> color_info . comp_bits		503101						
ANR	503523	Symbol	* c1 -> colors . devn		503101						
ANR	503524	Symbol	pure1		503101						
ANR	503525	Symbol	any_abs		503101						
ANR	503526	Symbol	pure0		503101						
ANR	503527	Symbol	dev -> color_info . comp_shift		503101						
ANR	503528	Symbol	dev -> color_info . max_gray		503101						
ANR	503529	Symbol	mask		503101						
ANR	503530	Symbol	* c0 -> colors		503101						
ANR	503531	Symbol	c0 -> colors . pure		503101						
ANR	503532	Symbol	b		503101						
ANR	503533	Symbol	& gx_dc_type_data_devn		503101						
ANR	503534	Symbol	c		503101						
ANR	503535	Symbol	max		503101						
ANR	503536	Symbol	* c0 -> colors . devn		503101						
ANR	503537	Symbol	c0 -> colors . devn		503101						
ANR	503538	Symbol	false		503101						
ANR	503539	Symbol	i		503101						
ANR	503540	Symbol	& gx_dc_type_data_pure		503101						
ANR	503541	Symbol	* * dev		503101						
ANR	503542	Symbol	* dev -> color_info		503101						
ANR	503543	Symbol	max_color		503101						
ANR	503544	Symbol	* c		503101						
ANR	503545	Symbol	n		503101						
ANR	503546	Symbol	* c0		503101						
ANR	503547	Symbol	c1 -> colors		503101						
ANR	503548	Symbol	smoothness		503101						
ANR	503549	Symbol	* i		503101						
ANR	503550	Symbol	t		503101						
ANR	503551	Symbol	* c1		503101						
ANR	503552	Symbol	c -> colors		503101						
ANR	503553	Symbol	dev -> color_info . gray_index		503101						
ANR	503554	Symbol	ratio		503101						
ANR	503555	Function	gx_cspace_is_linear_in_line	740:0:25835:26865							
ANR	503556	FunctionDef	"gx_cspace_is_linear_in_line (const gs_color_space * cs , const gs_gstate * pgs , gx_device * dev , const gs_client_color * c0 , const gs_client_color * c1 , float smoothness)"		503555	0					
ANR	503557	CompoundStatement		745:0:26059:26865	503555	0					
ANR	503558	IdentifierDeclStatement	"gs_client_color c01a , c01b ;"	746:4:26065:26091	503555	0	True				
ANR	503559	IdentifierDecl	c01a		503555	0					
ANR	503560	IdentifierDeclType	gs_client_color		503555	0					
ANR	503561	Identifier	c01a		503555	1					
ANR	503562	IdentifierDecl	c01b		503555	1					
ANR	503563	IdentifierDeclType	gs_client_color		503555	0					
ANR	503564	Identifier	c01b		503555	1					
ANR	503565	IdentifierDeclStatement	"gx_device_color d [ 2 ] , d01a , d01b ;"	747:4:26097:26129	503555	1	True				
ANR	503566	IdentifierDecl	d [ 2 ]		503555	0					
ANR	503567	IdentifierDeclType	gx_device_color [ 2 ]		503555	0					
ANR	503568	Identifier	d		503555	1					
ANR	503569	PrimaryExpression	2		503555	2					
ANR	503570	IdentifierDecl	d01a		503555	1					
ANR	503571	IdentifierDeclType	gx_device_color		503555	0					
ANR	503572	Identifier	d01a		503555	1					
ANR	503573	IdentifierDecl	d01b		503555	2					
ANR	503574	IdentifierDeclType	gx_device_color		503555	0					
ANR	503575	Identifier	d01b		503555	1					
ANR	503576	IdentifierDeclStatement	int n = cs -> type -> num_components ( cs ) ;	748:4:26135:26171	503555	2	True				
ANR	503577	IdentifierDecl	n = cs -> type -> num_components ( cs )		503555	0					
ANR	503578	IdentifierDeclType	int		503555	0					
ANR	503579	Identifier	n		503555	1					
ANR	503580	AssignmentExpression	n = cs -> type -> num_components ( cs )		503555	2		=			
ANR	503581	Identifier	n		503555	0					
ANR	503582	CallExpression	cs -> type -> num_components ( cs )		503555	1					
ANR	503583	Callee	cs -> type -> num_components		503555	0					
ANR	503584	PtrMemberAccess	cs -> type -> num_components		503555	0					
ANR	503585	PtrMemberAccess	cs -> type		503555	0					
ANR	503586	Identifier	cs		503555	0					
ANR	503587	Identifier	type		503555	1					
ANR	503588	Identifier	num_components		503555	1					
ANR	503589	ArgumentList	cs		503555	1					
ANR	503590	Argument	cs		503555	0					
ANR	503591	Identifier	cs		503555	0					
ANR	503592	IdentifierDeclStatement	uchar ndev = dev -> color_info . num_components ;	749:4:26177:26220	503555	3	True				
ANR	503593	IdentifierDecl	ndev = dev -> color_info . num_components		503555	0					
ANR	503594	IdentifierDeclType	uchar		503555	0					
ANR	503595	Identifier	ndev		503555	1					
ANR	503596	AssignmentExpression	ndev = dev -> color_info . num_components		503555	2		=			
ANR	503597	Identifier	ndev		503555	0					
ANR	503598	MemberAccess	dev -> color_info . num_components		503555	1					
ANR	503599	PtrMemberAccess	dev -> color_info		503555	0					
ANR	503600	Identifier	dev		503555	0					
ANR	503601	Identifier	color_info		503555	1					
ANR	503602	Identifier	num_components		503555	1					
ANR	503603	IdentifierDeclStatement	int code ;	750:4:26226:26234	503555	4	True				
ANR	503604	IdentifierDecl	code		503555	0					
ANR	503605	IdentifierDeclType	int		503555	0					
ANR	503606	Identifier	code		503555	1					
ANR	503607	ExpressionStatement	"code = cc2dc ( cs , pgs , dev , & d [ 0 ] , c0 )"	752:4:26241:26278	503555	5	True				
ANR	503608	AssignmentExpression	"code = cc2dc ( cs , pgs , dev , & d [ 0 ] , c0 )"		503555	0		=			
ANR	503609	Identifier	code		503555	0					
ANR	503610	CallExpression	"cc2dc ( cs , pgs , dev , & d [ 0 ] , c0 )"		503555	1					
ANR	503611	Callee	cc2dc		503555	0					
ANR	503612	Identifier	cc2dc		503555	0					
ANR	503613	ArgumentList	cs		503555	1					
ANR	503614	Argument	cs		503555	0					
ANR	503615	Identifier	cs		503555	0					
ANR	503616	Argument	pgs		503555	1					
ANR	503617	Identifier	pgs		503555	0					
ANR	503618	Argument	dev		503555	2					
ANR	503619	Identifier	dev		503555	0					
ANR	503620	Argument	& d [ 0 ]		503555	3					
ANR	503621	UnaryOperationExpression	& d [ 0 ]		503555	0					
ANR	503622	UnaryOperator	&		503555	0					
ANR	503623	ArrayIndexing	d [ 0 ]		503555	1					
ANR	503624	Identifier	d		503555	0					
ANR	503625	PrimaryExpression	0		503555	1					
ANR	503626	Argument	c0		503555	4					
ANR	503627	Identifier	c0		503555	0					
ANR	503628	IfStatement	if ( code < 0 )		503555	6					
ANR	503629	Condition	code < 0	753:8:26288:26295	503555	0	True				
ANR	503630	RelationalExpression	code < 0		503555	0		<			
ANR	503631	Identifier	code		503555	0					
ANR	503632	PrimaryExpression	0		503555	1					
ANR	503633	ReturnStatement	return code ;	754:8:26306:26317	503555	1	True				
ANR	503634	Identifier	code		503555	0					
ANR	503635	ExpressionStatement	"code = cc2dc ( cs , pgs , dev , & d [ 1 ] , c1 )"	755:4:26323:26360	503555	7	True				
ANR	503636	AssignmentExpression	"code = cc2dc ( cs , pgs , dev , & d [ 1 ] , c1 )"		503555	0		=			
ANR	503637	Identifier	code		503555	0					
ANR	503638	CallExpression	"cc2dc ( cs , pgs , dev , & d [ 1 ] , c1 )"		503555	1					
ANR	503639	Callee	cc2dc		503555	0					
ANR	503640	Identifier	cc2dc		503555	0					
ANR	503641	ArgumentList	cs		503555	1					
ANR	503642	Argument	cs		503555	0					
ANR	503643	Identifier	cs		503555	0					
ANR	503644	Argument	pgs		503555	1					
ANR	503645	Identifier	pgs		503555	0					
ANR	503646	Argument	dev		503555	2					
ANR	503647	Identifier	dev		503555	0					
ANR	503648	Argument	& d [ 1 ]		503555	3					
ANR	503649	UnaryOperationExpression	& d [ 1 ]		503555	0					
ANR	503650	UnaryOperator	&		503555	0					
ANR	503651	ArrayIndexing	d [ 1 ]		503555	1					
ANR	503652	Identifier	d		503555	0					
ANR	503653	PrimaryExpression	1		503555	1					
ANR	503654	Argument	c1		503555	4					
ANR	503655	Identifier	c1		503555	0					
ANR	503656	IfStatement	if ( code < 0 )		503555	8					
ANR	503657	Condition	code < 0	756:8:26370:26377	503555	0	True				
ANR	503658	RelationalExpression	code < 0		503555	0		<			
ANR	503659	Identifier	code		503555	0					
ANR	503660	PrimaryExpression	0		503555	1					
ANR	503661	ReturnStatement	return code ;	757:8:26388:26399	503555	1	True				
ANR	503662	Identifier	code		503555	0					
ANR	503663	ExpressionStatement	"interpolate_cc ( & c01a , c0 , c1 , 0.3 , n )"	758:4:26405:26442	503555	9	True				
ANR	503664	CallExpression	"interpolate_cc ( & c01a , c0 , c1 , 0.3 , n )"		503555	0					
ANR	503665	Callee	interpolate_cc		503555	0					
ANR	503666	Identifier	interpolate_cc		503555	0					
ANR	503667	ArgumentList	& c01a		503555	1					
ANR	503668	Argument	& c01a		503555	0					
ANR	503669	UnaryOperationExpression	& c01a		503555	0					
ANR	503670	UnaryOperator	&		503555	0					
ANR	503671	Identifier	c01a		503555	1					
ANR	503672	Argument	c0		503555	1					
ANR	503673	Identifier	c0		503555	0					
ANR	503674	Argument	c1		503555	2					
ANR	503675	Identifier	c1		503555	0					
ANR	503676	Argument	0.3		503555	3					
ANR	503677	PrimaryExpression	0.3		503555	0					
ANR	503678	Argument	n		503555	4					
ANR	503679	Identifier	n		503555	0					
ANR	503680	ExpressionStatement	"code = cc2dc ( cs , pgs , dev , & d01a , & c01a )"	759:4:26448:26488	503555	10	True				
ANR	503681	AssignmentExpression	"code = cc2dc ( cs , pgs , dev , & d01a , & c01a )"		503555	0		=			
ANR	503682	Identifier	code		503555	0					
ANR	503683	CallExpression	"cc2dc ( cs , pgs , dev , & d01a , & c01a )"		503555	1					
ANR	503684	Callee	cc2dc		503555	0					
ANR	503685	Identifier	cc2dc		503555	0					
ANR	503686	ArgumentList	cs		503555	1					
ANR	503687	Argument	cs		503555	0					
ANR	503688	Identifier	cs		503555	0					
ANR	503689	Argument	pgs		503555	1					
ANR	503690	Identifier	pgs		503555	0					
ANR	503691	Argument	dev		503555	2					
ANR	503692	Identifier	dev		503555	0					
ANR	503693	Argument	& d01a		503555	3					
ANR	503694	UnaryOperationExpression	& d01a		503555	0					
ANR	503695	UnaryOperator	&		503555	0					
ANR	503696	Identifier	d01a		503555	1					
ANR	503697	Argument	& c01a		503555	4					
ANR	503698	UnaryOperationExpression	& c01a		503555	0					
ANR	503699	UnaryOperator	&		503555	0					
ANR	503700	Identifier	c01a		503555	1					
ANR	503701	IfStatement	if ( code < 0 )		503555	11					
ANR	503702	Condition	code < 0	760:8:26498:26505	503555	0	True				
ANR	503703	RelationalExpression	code < 0		503555	0		<			
ANR	503704	Identifier	code		503555	0					
ANR	503705	PrimaryExpression	0		503555	1					
ANR	503706	ReturnStatement	return code ;	761:8:26516:26527	503555	1	True				
ANR	503707	Identifier	code		503555	0					
ANR	503708	IfStatement	"if ( ! is_dc_nearly_linear ( dev , & d01a , & d [ 0 ] , & d [ 1 ] , 0.3 , ndev , smoothness ) )"		503555	12					
ANR	503709	Condition	"! is_dc_nearly_linear ( dev , & d01a , & d [ 0 ] , & d [ 1 ] , 0.3 , ndev , smoothness )"	762:8:26537:26605	503555	0	True				
ANR	503710	UnaryOperationExpression	"! is_dc_nearly_linear ( dev , & d01a , & d [ 0 ] , & d [ 1 ] , 0.3 , ndev , smoothness )"		503555	0					
ANR	503711	UnaryOperator	!		503555	0					
ANR	503712	CallExpression	"is_dc_nearly_linear ( dev , & d01a , & d [ 0 ] , & d [ 1 ] , 0.3 , ndev , smoothness )"		503555	1					
ANR	503713	Callee	is_dc_nearly_linear		503555	0					
ANR	503714	Identifier	is_dc_nearly_linear		503555	0					
ANR	503715	ArgumentList	dev		503555	1					
ANR	503716	Argument	dev		503555	0					
ANR	503717	Identifier	dev		503555	0					
ANR	503718	Argument	& d01a		503555	1					
ANR	503719	UnaryOperationExpression	& d01a		503555	0					
ANR	503720	UnaryOperator	&		503555	0					
ANR	503721	Identifier	d01a		503555	1					
ANR	503722	Argument	& d [ 0 ]		503555	2					
ANR	503723	UnaryOperationExpression	& d [ 0 ]		503555	0					
ANR	503724	UnaryOperator	&		503555	0					
ANR	503725	ArrayIndexing	d [ 0 ]		503555	1					
ANR	503726	Identifier	d		503555	0					
ANR	503727	PrimaryExpression	0		503555	1					
ANR	503728	Argument	& d [ 1 ]		503555	3					
ANR	503729	UnaryOperationExpression	& d [ 1 ]		503555	0					
ANR	503730	UnaryOperator	&		503555	0					
ANR	503731	ArrayIndexing	d [ 1 ]		503555	1					
ANR	503732	Identifier	d		503555	0					
ANR	503733	PrimaryExpression	1		503555	1					
ANR	503734	Argument	0.3		503555	4					
ANR	503735	PrimaryExpression	0.3		503555	0					
ANR	503736	Argument	ndev		503555	5					
ANR	503737	Identifier	ndev		503555	0					
ANR	503738	Argument	smoothness		503555	6					
ANR	503739	Identifier	smoothness		503555	0					
ANR	503740	ReturnStatement	return 0 ;	763:8:26616:26624	503555	1	True				
ANR	503741	PrimaryExpression	0		503555	0					
ANR	503742	ExpressionStatement	"interpolate_cc ( & c01b , c0 , c1 , 0.7 , n )"	764:4:26630:26667	503555	13	True				
ANR	503743	CallExpression	"interpolate_cc ( & c01b , c0 , c1 , 0.7 , n )"		503555	0					
ANR	503744	Callee	interpolate_cc		503555	0					
ANR	503745	Identifier	interpolate_cc		503555	0					
ANR	503746	ArgumentList	& c01b		503555	1					
ANR	503747	Argument	& c01b		503555	0					
ANR	503748	UnaryOperationExpression	& c01b		503555	0					
ANR	503749	UnaryOperator	&		503555	0					
ANR	503750	Identifier	c01b		503555	1					
ANR	503751	Argument	c0		503555	1					
ANR	503752	Identifier	c0		503555	0					
ANR	503753	Argument	c1		503555	2					
ANR	503754	Identifier	c1		503555	0					
ANR	503755	Argument	0.7		503555	3					
ANR	503756	PrimaryExpression	0.7		503555	0					
ANR	503757	Argument	n		503555	4					
ANR	503758	Identifier	n		503555	0					
ANR	503759	ExpressionStatement	"code = cc2dc ( cs , pgs , dev , & d01b , & c01b )"	765:4:26673:26713	503555	14	True				
ANR	503760	AssignmentExpression	"code = cc2dc ( cs , pgs , dev , & d01b , & c01b )"		503555	0		=			
ANR	503761	Identifier	code		503555	0					
ANR	503762	CallExpression	"cc2dc ( cs , pgs , dev , & d01b , & c01b )"		503555	1					
ANR	503763	Callee	cc2dc		503555	0					
ANR	503764	Identifier	cc2dc		503555	0					
ANR	503765	ArgumentList	cs		503555	1					
ANR	503766	Argument	cs		503555	0					
ANR	503767	Identifier	cs		503555	0					
ANR	503768	Argument	pgs		503555	1					
ANR	503769	Identifier	pgs		503555	0					
ANR	503770	Argument	dev		503555	2					
ANR	503771	Identifier	dev		503555	0					
ANR	503772	Argument	& d01b		503555	3					
ANR	503773	UnaryOperationExpression	& d01b		503555	0					
ANR	503774	UnaryOperator	&		503555	0					
ANR	503775	Identifier	d01b		503555	1					
ANR	503776	Argument	& c01b		503555	4					
ANR	503777	UnaryOperationExpression	& c01b		503555	0					
ANR	503778	UnaryOperator	&		503555	0					
ANR	503779	Identifier	c01b		503555	1					
ANR	503780	IfStatement	if ( code < 0 )		503555	15					
ANR	503781	Condition	code < 0	766:8:26723:26730	503555	0	True				
ANR	503782	RelationalExpression	code < 0		503555	0		<			
ANR	503783	Identifier	code		503555	0					
ANR	503784	PrimaryExpression	0		503555	1					
ANR	503785	ReturnStatement	return code ;	767:8:26741:26752	503555	1	True				
ANR	503786	Identifier	code		503555	0					
ANR	503787	IfStatement	"if ( ! is_dc_nearly_linear ( dev , & d01b , & d [ 0 ] , & d [ 1 ] , 0.7 , ndev , smoothness ) )"		503555	16					
ANR	503788	Condition	"! is_dc_nearly_linear ( dev , & d01b , & d [ 0 ] , & d [ 1 ] , 0.7 , ndev , smoothness )"	768:8:26762:26830	503555	0	True				
ANR	503789	UnaryOperationExpression	"! is_dc_nearly_linear ( dev , & d01b , & d [ 0 ] , & d [ 1 ] , 0.7 , ndev , smoothness )"		503555	0					
ANR	503790	UnaryOperator	!		503555	0					
ANR	503791	CallExpression	"is_dc_nearly_linear ( dev , & d01b , & d [ 0 ] , & d [ 1 ] , 0.7 , ndev , smoothness )"		503555	1					
ANR	503792	Callee	is_dc_nearly_linear		503555	0					
ANR	503793	Identifier	is_dc_nearly_linear		503555	0					
ANR	503794	ArgumentList	dev		503555	1					
ANR	503795	Argument	dev		503555	0					
ANR	503796	Identifier	dev		503555	0					
ANR	503797	Argument	& d01b		503555	1					
ANR	503798	UnaryOperationExpression	& d01b		503555	0					
ANR	503799	UnaryOperator	&		503555	0					
ANR	503800	Identifier	d01b		503555	1					
ANR	503801	Argument	& d [ 0 ]		503555	2					
ANR	503802	UnaryOperationExpression	& d [ 0 ]		503555	0					
ANR	503803	UnaryOperator	&		503555	0					
ANR	503804	ArrayIndexing	d [ 0 ]		503555	1					
ANR	503805	Identifier	d		503555	0					
ANR	503806	PrimaryExpression	0		503555	1					
ANR	503807	Argument	& d [ 1 ]		503555	3					
ANR	503808	UnaryOperationExpression	& d [ 1 ]		503555	0					
ANR	503809	UnaryOperator	&		503555	0					
ANR	503810	ArrayIndexing	d [ 1 ]		503555	1					
ANR	503811	Identifier	d		503555	0					
ANR	503812	PrimaryExpression	1		503555	1					
ANR	503813	Argument	0.7		503555	4					
ANR	503814	PrimaryExpression	0.7		503555	0					
ANR	503815	Argument	ndev		503555	5					
ANR	503816	Identifier	ndev		503555	0					
ANR	503817	Argument	smoothness		503555	6					
ANR	503818	Identifier	smoothness		503555	0					
ANR	503819	ReturnStatement	return 0 ;	769:8:26841:26849	503555	1	True				
ANR	503820	PrimaryExpression	0		503555	0					
ANR	503821	ReturnStatement	return 1 ;	770:4:26855:26863	503555	17	True				
ANR	503822	PrimaryExpression	1		503555	0					
ANR	503823	ReturnType	static int		503555	1					
ANR	503824	Identifier	gx_cspace_is_linear_in_line		503555	2					
ANR	503825	ParameterList	"const gs_color_space * cs , const gs_gstate * pgs , gx_device * dev , const gs_client_color * c0 , const gs_client_color * c1 , float smoothness"		503555	3					
ANR	503826	Parameter	const gs_color_space * cs	741:28:25874:25897	503555	0	True				
ANR	503827	ParameterType	const gs_color_space *		503555	0					
ANR	503828	Identifier	cs		503555	1					
ANR	503829	Parameter	const gs_gstate * pgs	741:54:25900:25920	503555	1	True				
ANR	503830	ParameterType	const gs_gstate *		503555	0					
ANR	503831	Identifier	pgs		503555	1					
ANR	503832	Parameter	gx_device * dev	742:16:25939:25952	503555	2	True				
ANR	503833	ParameterType	gx_device *		503555	0					
ANR	503834	Identifier	dev		503555	1					
ANR	503835	Parameter	const gs_client_color * c0	743:16:25971:25995	503555	3	True				
ANR	503836	ParameterType	const gs_client_color *		503555	0					
ANR	503837	Identifier	c0		503555	1					
ANR	503838	Parameter	const gs_client_color * c1	743:43:25998:26022	503555	4	True				
ANR	503839	ParameterType	const gs_client_color *		503555	0					
ANR	503840	Identifier	c1		503555	1					
ANR	503841	Parameter	float smoothness	744:16:26041:26056	503555	5	True				
ANR	503842	ParameterType	float		503555	0					
ANR	503843	Identifier	smoothness		503555	1					
ANR	503844	CFGEntryNode	ENTRY		503555		True				
ANR	503845	CFGExitNode	EXIT		503555		True				
ANR	503846	Symbol	* dev		503555						
ANR	503847	Symbol	code		503555						
ANR	503848	Symbol	* cs -> type		503555						
ANR	503849	Symbol	dev -> color_info		503555						
ANR	503850	Symbol	c01a		503555						
ANR	503851	Symbol	cs -> type		503555						
ANR	503852	Symbol	c01b		503555						
ANR	503853	Symbol	dev		503555						
ANR	503854	Symbol	ndev		503555						
ANR	503855	Symbol	pgs		503555						
ANR	503856	Symbol	* * cs		503555						
ANR	503857	Symbol	& d01b		503555						
ANR	503858	Symbol	& d01a		503555						
ANR	503859	Symbol	d		503555						
ANR	503860	Symbol	dev -> color_info . num_components		503555						
ANR	503861	Symbol	c0		503555						
ANR	503862	Symbol	c1		503555						
ANR	503863	Symbol	n		503555						
ANR	503864	Symbol	cs		503555						
ANR	503865	Symbol	& c01b		503555						
ANR	503866	Symbol	cc2dc		503555						
ANR	503867	Symbol	d01a		503555						
ANR	503868	Symbol	cs -> type -> num_components		503555						
ANR	503869	Symbol	smoothness		503555						
ANR	503870	Symbol	d01b		503555						
ANR	503871	Symbol	* cs		503555						
ANR	503872	Symbol	is_dc_nearly_linear		503555						
ANR	503873	Symbol	& c01a		503555						
ANR	503874	Function	gx_cspace_is_linear_in_triangle	774:0:26930:28858							
ANR	503875	FunctionDef	"gx_cspace_is_linear_in_triangle (const gs_color_space * cs , const gs_gstate * pgs , gx_device * dev , const gs_client_color * c0 , const gs_client_color * c1 , const gs_client_color * c2 , float smoothness)"		503874	0					
ANR	503876	CompoundStatement		779:0:27185:28858	503874	0					
ANR	503877	IdentifierDeclStatement	"gs_client_color c01 , c12 , c20 , c012 ;"	783:4:27397:27432	503874	0	True				
ANR	503878	IdentifierDecl	c01		503874	0					
ANR	503879	IdentifierDeclType	gs_client_color		503874	0					
ANR	503880	Identifier	c01		503874	1					
ANR	503881	IdentifierDecl	c12		503874	1					
ANR	503882	IdentifierDeclType	gs_client_color		503874	0					
ANR	503883	Identifier	c12		503874	1					
ANR	503884	IdentifierDecl	c20		503874	2					
ANR	503885	IdentifierDeclType	gs_client_color		503874	0					
ANR	503886	Identifier	c20		503874	1					
ANR	503887	IdentifierDecl	c012		503874	3					
ANR	503888	IdentifierDeclType	gs_client_color		503874	0					
ANR	503889	Identifier	c012		503874	1					
ANR	503890	IdentifierDeclStatement	"gx_device_color d [ 3 ] , d01 , d12 , d20 , d012 ;"	784:4:27438:27479	503874	1	True				
ANR	503891	IdentifierDecl	d [ 3 ]		503874	0					
ANR	503892	IdentifierDeclType	gx_device_color [ 3 ]		503874	0					
ANR	503893	Identifier	d		503874	1					
ANR	503894	PrimaryExpression	3		503874	2					
ANR	503895	IdentifierDecl	d01		503874	1					
ANR	503896	IdentifierDeclType	gx_device_color		503874	0					
ANR	503897	Identifier	d01		503874	1					
ANR	503898	IdentifierDecl	d12		503874	2					
ANR	503899	IdentifierDeclType	gx_device_color		503874	0					
ANR	503900	Identifier	d12		503874	1					
ANR	503901	IdentifierDecl	d20		503874	3					
ANR	503902	IdentifierDeclType	gx_device_color		503874	0					
ANR	503903	Identifier	d20		503874	1					
ANR	503904	IdentifierDecl	d012		503874	4					
ANR	503905	IdentifierDeclType	gx_device_color		503874	0					
ANR	503906	Identifier	d012		503874	1					
ANR	503907	IdentifierDeclStatement	int n = cs -> type -> num_components ( cs ) ;	789:4:27594:27630	503874	2	True				
ANR	503908	IdentifierDecl	n = cs -> type -> num_components ( cs )		503874	0					
ANR	503909	IdentifierDeclType	int		503874	0					
ANR	503910	Identifier	n		503874	1					
ANR	503911	AssignmentExpression	n = cs -> type -> num_components ( cs )		503874	2		=			
ANR	503912	Identifier	n		503874	0					
ANR	503913	CallExpression	cs -> type -> num_components ( cs )		503874	1					
ANR	503914	Callee	cs -> type -> num_components		503874	0					
ANR	503915	PtrMemberAccess	cs -> type -> num_components		503874	0					
ANR	503916	PtrMemberAccess	cs -> type		503874	0					
ANR	503917	Identifier	cs		503874	0					
ANR	503918	Identifier	type		503874	1					
ANR	503919	Identifier	num_components		503874	1					
ANR	503920	ArgumentList	cs		503874	1					
ANR	503921	Argument	cs		503874	0					
ANR	503922	Identifier	cs		503874	0					
ANR	503923	IdentifierDeclStatement	uchar ndev = dev -> color_info . num_components ;	790:4:27636:27679	503874	3	True				
ANR	503924	IdentifierDecl	ndev = dev -> color_info . num_components		503874	0					
ANR	503925	IdentifierDeclType	uchar		503874	0					
ANR	503926	Identifier	ndev		503874	1					
ANR	503927	AssignmentExpression	ndev = dev -> color_info . num_components		503874	2		=			
ANR	503928	Identifier	ndev		503874	0					
ANR	503929	MemberAccess	dev -> color_info . num_components		503874	1					
ANR	503930	PtrMemberAccess	dev -> color_info		503874	0					
ANR	503931	Identifier	dev		503874	0					
ANR	503932	Identifier	color_info		503874	1					
ANR	503933	Identifier	num_components		503874	1					
ANR	503934	IdentifierDeclStatement	int code ;	792:4:27686:27694	503874	4	True				
ANR	503935	IdentifierDecl	code		503874	0					
ANR	503936	IdentifierDeclType	int		503874	0					
ANR	503937	Identifier	code		503874	1					
ANR	503938	ExpressionStatement	"code = cc2dc ( cs , pgs , dev , & d [ 0 ] , c0 )"	794:4:27701:27738	503874	5	True				
ANR	503939	AssignmentExpression	"code = cc2dc ( cs , pgs , dev , & d [ 0 ] , c0 )"		503874	0		=			
ANR	503940	Identifier	code		503874	0					
ANR	503941	CallExpression	"cc2dc ( cs , pgs , dev , & d [ 0 ] , c0 )"		503874	1					
ANR	503942	Callee	cc2dc		503874	0					
ANR	503943	Identifier	cc2dc		503874	0					
ANR	503944	ArgumentList	cs		503874	1					
ANR	503945	Argument	cs		503874	0					
ANR	503946	Identifier	cs		503874	0					
ANR	503947	Argument	pgs		503874	1					
ANR	503948	Identifier	pgs		503874	0					
ANR	503949	Argument	dev		503874	2					
ANR	503950	Identifier	dev		503874	0					
ANR	503951	Argument	& d [ 0 ]		503874	3					
ANR	503952	UnaryOperationExpression	& d [ 0 ]		503874	0					
ANR	503953	UnaryOperator	&		503874	0					
ANR	503954	ArrayIndexing	d [ 0 ]		503874	1					
ANR	503955	Identifier	d		503874	0					
ANR	503956	PrimaryExpression	0		503874	1					
ANR	503957	Argument	c0		503874	4					
ANR	503958	Identifier	c0		503874	0					
ANR	503959	IfStatement	if ( code < 0 )		503874	6					
ANR	503960	Condition	code < 0	795:8:27748:27755	503874	0	True				
ANR	503961	RelationalExpression	code < 0		503874	0		<			
ANR	503962	Identifier	code		503874	0					
ANR	503963	PrimaryExpression	0		503874	1					
ANR	503964	ReturnStatement	return code ;	796:8:27766:27777	503874	1	True				
ANR	503965	Identifier	code		503874	0					
ANR	503966	ExpressionStatement	"code = cc2dc ( cs , pgs , dev , & d [ 1 ] , c1 )"	797:4:27783:27820	503874	7	True				
ANR	503967	AssignmentExpression	"code = cc2dc ( cs , pgs , dev , & d [ 1 ] , c1 )"		503874	0		=			
ANR	503968	Identifier	code		503874	0					
ANR	503969	CallExpression	"cc2dc ( cs , pgs , dev , & d [ 1 ] , c1 )"		503874	1					
ANR	503970	Callee	cc2dc		503874	0					
ANR	503971	Identifier	cc2dc		503874	0					
ANR	503972	ArgumentList	cs		503874	1					
ANR	503973	Argument	cs		503874	0					
ANR	503974	Identifier	cs		503874	0					
ANR	503975	Argument	pgs		503874	1					
ANR	503976	Identifier	pgs		503874	0					
ANR	503977	Argument	dev		503874	2					
ANR	503978	Identifier	dev		503874	0					
ANR	503979	Argument	& d [ 1 ]		503874	3					
ANR	503980	UnaryOperationExpression	& d [ 1 ]		503874	0					
ANR	503981	UnaryOperator	&		503874	0					
ANR	503982	ArrayIndexing	d [ 1 ]		503874	1					
ANR	503983	Identifier	d		503874	0					
ANR	503984	PrimaryExpression	1		503874	1					
ANR	503985	Argument	c1		503874	4					
ANR	503986	Identifier	c1		503874	0					
ANR	503987	IfStatement	if ( code < 0 )		503874	8					
ANR	503988	Condition	code < 0	798:8:27830:27837	503874	0	True				
ANR	503989	RelationalExpression	code < 0		503874	0		<			
ANR	503990	Identifier	code		503874	0					
ANR	503991	PrimaryExpression	0		503874	1					
ANR	503992	ReturnStatement	return code ;	799:8:27848:27859	503874	1	True				
ANR	503993	Identifier	code		503874	0					
ANR	503994	ExpressionStatement	"code = cc2dc ( cs , pgs , dev , & d [ 2 ] , c2 )"	800:4:27865:27902	503874	9	True				
ANR	503995	AssignmentExpression	"code = cc2dc ( cs , pgs , dev , & d [ 2 ] , c2 )"		503874	0		=			
ANR	503996	Identifier	code		503874	0					
ANR	503997	CallExpression	"cc2dc ( cs , pgs , dev , & d [ 2 ] , c2 )"		503874	1					
ANR	503998	Callee	cc2dc		503874	0					
ANR	503999	Identifier	cc2dc		503874	0					
ANR	504000	ArgumentList	cs		503874	1					
ANR	504001	Argument	cs		503874	0					
ANR	504002	Identifier	cs		503874	0					
ANR	504003	Argument	pgs		503874	1					
ANR	504004	Identifier	pgs		503874	0					
ANR	504005	Argument	dev		503874	2					
ANR	504006	Identifier	dev		503874	0					
ANR	504007	Argument	& d [ 2 ]		503874	3					
ANR	504008	UnaryOperationExpression	& d [ 2 ]		503874	0					
ANR	504009	UnaryOperator	&		503874	0					
ANR	504010	ArrayIndexing	d [ 2 ]		503874	1					
ANR	504011	Identifier	d		503874	0					
ANR	504012	PrimaryExpression	2		503874	1					
ANR	504013	Argument	c2		503874	4					
ANR	504014	Identifier	c2		503874	0					
ANR	504015	IfStatement	if ( code < 0 )		503874	10					
ANR	504016	Condition	code < 0	801:8:27912:27919	503874	0	True				
ANR	504017	RelationalExpression	code < 0		503874	0		<			
ANR	504018	Identifier	code		503874	0					
ANR	504019	PrimaryExpression	0		503874	1					
ANR	504020	ReturnStatement	return code ;	802:8:27930:27941	503874	1	True				
ANR	504021	Identifier	code		503874	0					
ANR	504022	ExpressionStatement	"interpolate_cc ( & c01 , c0 , c1 , 0.5 , n )"	804:4:27948:27984	503874	11	True				
ANR	504023	CallExpression	"interpolate_cc ( & c01 , c0 , c1 , 0.5 , n )"		503874	0					
ANR	504024	Callee	interpolate_cc		503874	0					
ANR	504025	Identifier	interpolate_cc		503874	0					
ANR	504026	ArgumentList	& c01		503874	1					
ANR	504027	Argument	& c01		503874	0					
ANR	504028	UnaryOperationExpression	& c01		503874	0					
ANR	504029	UnaryOperator	&		503874	0					
ANR	504030	Identifier	c01		503874	1					
ANR	504031	Argument	c0		503874	1					
ANR	504032	Identifier	c0		503874	0					
ANR	504033	Argument	c1		503874	2					
ANR	504034	Identifier	c1		503874	0					
ANR	504035	Argument	0.5		503874	3					
ANR	504036	PrimaryExpression	0.5		503874	0					
ANR	504037	Argument	n		503874	4					
ANR	504038	Identifier	n		503874	0					
ANR	504039	ExpressionStatement	"code = cc2dc ( cs , pgs , dev , & d01 , & c01 )"	805:4:27990:28028	503874	12	True				
ANR	504040	AssignmentExpression	"code = cc2dc ( cs , pgs , dev , & d01 , & c01 )"		503874	0		=			
ANR	504041	Identifier	code		503874	0					
ANR	504042	CallExpression	"cc2dc ( cs , pgs , dev , & d01 , & c01 )"		503874	1					
ANR	504043	Callee	cc2dc		503874	0					
ANR	504044	Identifier	cc2dc		503874	0					
ANR	504045	ArgumentList	cs		503874	1					
ANR	504046	Argument	cs		503874	0					
ANR	504047	Identifier	cs		503874	0					
ANR	504048	Argument	pgs		503874	1					
ANR	504049	Identifier	pgs		503874	0					
ANR	504050	Argument	dev		503874	2					
ANR	504051	Identifier	dev		503874	0					
ANR	504052	Argument	& d01		503874	3					
ANR	504053	UnaryOperationExpression	& d01		503874	0					
ANR	504054	UnaryOperator	&		503874	0					
ANR	504055	Identifier	d01		503874	1					
ANR	504056	Argument	& c01		503874	4					
ANR	504057	UnaryOperationExpression	& c01		503874	0					
ANR	504058	UnaryOperator	&		503874	0					
ANR	504059	Identifier	c01		503874	1					
ANR	504060	IfStatement	if ( code < 0 )		503874	13					
ANR	504061	Condition	code < 0	806:8:28038:28045	503874	0	True				
ANR	504062	RelationalExpression	code < 0		503874	0		<			
ANR	504063	Identifier	code		503874	0					
ANR	504064	PrimaryExpression	0		503874	1					
ANR	504065	ReturnStatement	return code ;	807:8:28056:28067	503874	1	True				
ANR	504066	Identifier	code		503874	0					
ANR	504067	IfStatement	"if ( ! is_dc_nearly_linear ( dev , & d01 , & d [ 0 ] , & d [ 1 ] , 0.5 , ndev , smoothness ) )"		503874	14					
ANR	504068	Condition	"! is_dc_nearly_linear ( dev , & d01 , & d [ 0 ] , & d [ 1 ] , 0.5 , ndev , smoothness )"	808:8:28077:28144	503874	0	True				
ANR	504069	UnaryOperationExpression	"! is_dc_nearly_linear ( dev , & d01 , & d [ 0 ] , & d [ 1 ] , 0.5 , ndev , smoothness )"		503874	0					
ANR	504070	UnaryOperator	!		503874	0					
ANR	504071	CallExpression	"is_dc_nearly_linear ( dev , & d01 , & d [ 0 ] , & d [ 1 ] , 0.5 , ndev , smoothness )"		503874	1					
ANR	504072	Callee	is_dc_nearly_linear		503874	0					
ANR	504073	Identifier	is_dc_nearly_linear		503874	0					
ANR	504074	ArgumentList	dev		503874	1					
ANR	504075	Argument	dev		503874	0					
ANR	504076	Identifier	dev		503874	0					
ANR	504077	Argument	& d01		503874	1					
ANR	504078	UnaryOperationExpression	& d01		503874	0					
ANR	504079	UnaryOperator	&		503874	0					
ANR	504080	Identifier	d01		503874	1					
ANR	504081	Argument	& d [ 0 ]		503874	2					
ANR	504082	UnaryOperationExpression	& d [ 0 ]		503874	0					
ANR	504083	UnaryOperator	&		503874	0					
ANR	504084	ArrayIndexing	d [ 0 ]		503874	1					
ANR	504085	Identifier	d		503874	0					
ANR	504086	PrimaryExpression	0		503874	1					
ANR	504087	Argument	& d [ 1 ]		503874	3					
ANR	504088	UnaryOperationExpression	& d [ 1 ]		503874	0					
ANR	504089	UnaryOperator	&		503874	0					
ANR	504090	ArrayIndexing	d [ 1 ]		503874	1					
ANR	504091	Identifier	d		503874	0					
ANR	504092	PrimaryExpression	1		503874	1					
ANR	504093	Argument	0.5		503874	4					
ANR	504094	PrimaryExpression	0.5		503874	0					
ANR	504095	Argument	ndev		503874	5					
ANR	504096	Identifier	ndev		503874	0					
ANR	504097	Argument	smoothness		503874	6					
ANR	504098	Identifier	smoothness		503874	0					
ANR	504099	ReturnStatement	return 0 ;	809:8:28155:28163	503874	1	True				
ANR	504100	PrimaryExpression	0		503874	0					
ANR	504101	ExpressionStatement	"interpolate_cc ( & c012 , c2 , & c01 , 2.0 / 3 , n )"	811:4:28170:28213	503874	15	True				
ANR	504102	CallExpression	"interpolate_cc ( & c012 , c2 , & c01 , 2.0 / 3 , n )"		503874	0					
ANR	504103	Callee	interpolate_cc		503874	0					
ANR	504104	Identifier	interpolate_cc		503874	0					
ANR	504105	ArgumentList	& c012		503874	1					
ANR	504106	Argument	& c012		503874	0					
ANR	504107	UnaryOperationExpression	& c012		503874	0					
ANR	504108	UnaryOperator	&		503874	0					
ANR	504109	Identifier	c012		503874	1					
ANR	504110	Argument	c2		503874	1					
ANR	504111	Identifier	c2		503874	0					
ANR	504112	Argument	& c01		503874	2					
ANR	504113	UnaryOperationExpression	& c01		503874	0					
ANR	504114	UnaryOperator	&		503874	0					
ANR	504115	Identifier	c01		503874	1					
ANR	504116	Argument	2.0 / 3		503874	3					
ANR	504117	MultiplicativeExpression	2.0 / 3		503874	0		/			
ANR	504118	PrimaryExpression	2.0		503874	0					
ANR	504119	PrimaryExpression	3		503874	1					
ANR	504120	Argument	n		503874	4					
ANR	504121	Identifier	n		503874	0					
ANR	504122	ExpressionStatement	"code = cc2dc ( cs , pgs , dev , & d012 , & c012 )"	812:4:28219:28259	503874	16	True				
ANR	504123	AssignmentExpression	"code = cc2dc ( cs , pgs , dev , & d012 , & c012 )"		503874	0		=			
ANR	504124	Identifier	code		503874	0					
ANR	504125	CallExpression	"cc2dc ( cs , pgs , dev , & d012 , & c012 )"		503874	1					
ANR	504126	Callee	cc2dc		503874	0					
ANR	504127	Identifier	cc2dc		503874	0					
ANR	504128	ArgumentList	cs		503874	1					
ANR	504129	Argument	cs		503874	0					
ANR	504130	Identifier	cs		503874	0					
ANR	504131	Argument	pgs		503874	1					
ANR	504132	Identifier	pgs		503874	0					
ANR	504133	Argument	dev		503874	2					
ANR	504134	Identifier	dev		503874	0					
ANR	504135	Argument	& d012		503874	3					
ANR	504136	UnaryOperationExpression	& d012		503874	0					
ANR	504137	UnaryOperator	&		503874	0					
ANR	504138	Identifier	d012		503874	1					
ANR	504139	Argument	& c012		503874	4					
ANR	504140	UnaryOperationExpression	& c012		503874	0					
ANR	504141	UnaryOperator	&		503874	0					
ANR	504142	Identifier	c012		503874	1					
ANR	504143	IfStatement	if ( code < 0 )		503874	17					
ANR	504144	Condition	code < 0	813:8:28269:28276	503874	0	True				
ANR	504145	RelationalExpression	code < 0		503874	0		<			
ANR	504146	Identifier	code		503874	0					
ANR	504147	PrimaryExpression	0		503874	1					
ANR	504148	ReturnStatement	return code ;	814:8:28287:28298	503874	1	True				
ANR	504149	Identifier	code		503874	0					
ANR	504150	IfStatement	"if ( ! is_dc_nearly_linear ( dev , & d012 , & d [ 2 ] , & d01 , 2.0 / 3 , ndev , smoothness ) )"		503874	18					
ANR	504151	Condition	"! is_dc_nearly_linear ( dev , & d012 , & d [ 2 ] , & d01 , 2.0 / 3 , ndev , smoothness )"	815:8:28308:28379	503874	0	True				
ANR	504152	UnaryOperationExpression	"! is_dc_nearly_linear ( dev , & d012 , & d [ 2 ] , & d01 , 2.0 / 3 , ndev , smoothness )"		503874	0					
ANR	504153	UnaryOperator	!		503874	0					
ANR	504154	CallExpression	"is_dc_nearly_linear ( dev , & d012 , & d [ 2 ] , & d01 , 2.0 / 3 , ndev , smoothness )"		503874	1					
ANR	504155	Callee	is_dc_nearly_linear		503874	0					
ANR	504156	Identifier	is_dc_nearly_linear		503874	0					
ANR	504157	ArgumentList	dev		503874	1					
ANR	504158	Argument	dev		503874	0					
ANR	504159	Identifier	dev		503874	0					
ANR	504160	Argument	& d012		503874	1					
ANR	504161	UnaryOperationExpression	& d012		503874	0					
ANR	504162	UnaryOperator	&		503874	0					
ANR	504163	Identifier	d012		503874	1					
ANR	504164	Argument	& d [ 2 ]		503874	2					
ANR	504165	UnaryOperationExpression	& d [ 2 ]		503874	0					
ANR	504166	UnaryOperator	&		503874	0					
ANR	504167	ArrayIndexing	d [ 2 ]		503874	1					
ANR	504168	Identifier	d		503874	0					
ANR	504169	PrimaryExpression	2		503874	1					
ANR	504170	Argument	& d01		503874	3					
ANR	504171	UnaryOperationExpression	& d01		503874	0					
ANR	504172	UnaryOperator	&		503874	0					
ANR	504173	Identifier	d01		503874	1					
ANR	504174	Argument	2.0 / 3		503874	4					
ANR	504175	MultiplicativeExpression	2.0 / 3		503874	0		/			
ANR	504176	PrimaryExpression	2.0		503874	0					
ANR	504177	PrimaryExpression	3		503874	1					
ANR	504178	Argument	ndev		503874	5					
ANR	504179	Identifier	ndev		503874	0					
ANR	504180	Argument	smoothness		503874	6					
ANR	504181	Identifier	smoothness		503874	0					
ANR	504182	ReturnStatement	return 0 ;	816:8:28390:28398	503874	1	True				
ANR	504183	PrimaryExpression	0		503874	0					
ANR	504184	ExpressionStatement	"interpolate_cc ( & c12 , c1 , c2 , 0.5 , n )"	818:4:28405:28441	503874	19	True				
ANR	504185	CallExpression	"interpolate_cc ( & c12 , c1 , c2 , 0.5 , n )"		503874	0					
ANR	504186	Callee	interpolate_cc		503874	0					
ANR	504187	Identifier	interpolate_cc		503874	0					
ANR	504188	ArgumentList	& c12		503874	1					
ANR	504189	Argument	& c12		503874	0					
ANR	504190	UnaryOperationExpression	& c12		503874	0					
ANR	504191	UnaryOperator	&		503874	0					
ANR	504192	Identifier	c12		503874	1					
ANR	504193	Argument	c1		503874	1					
ANR	504194	Identifier	c1		503874	0					
ANR	504195	Argument	c2		503874	2					
ANR	504196	Identifier	c2		503874	0					
ANR	504197	Argument	0.5		503874	3					
ANR	504198	PrimaryExpression	0.5		503874	0					
ANR	504199	Argument	n		503874	4					
ANR	504200	Identifier	n		503874	0					
ANR	504201	ExpressionStatement	"code = cc2dc ( cs , pgs , dev , & d12 , & c12 )"	819:4:28447:28485	503874	20	True				
ANR	504202	AssignmentExpression	"code = cc2dc ( cs , pgs , dev , & d12 , & c12 )"		503874	0		=			
ANR	504203	Identifier	code		503874	0					
ANR	504204	CallExpression	"cc2dc ( cs , pgs , dev , & d12 , & c12 )"		503874	1					
ANR	504205	Callee	cc2dc		503874	0					
ANR	504206	Identifier	cc2dc		503874	0					
ANR	504207	ArgumentList	cs		503874	1					
ANR	504208	Argument	cs		503874	0					
ANR	504209	Identifier	cs		503874	0					
ANR	504210	Argument	pgs		503874	1					
ANR	504211	Identifier	pgs		503874	0					
ANR	504212	Argument	dev		503874	2					
ANR	504213	Identifier	dev		503874	0					
ANR	504214	Argument	& d12		503874	3					
ANR	504215	UnaryOperationExpression	& d12		503874	0					
ANR	504216	UnaryOperator	&		503874	0					
ANR	504217	Identifier	d12		503874	1					
ANR	504218	Argument	& c12		503874	4					
ANR	504219	UnaryOperationExpression	& c12		503874	0					
ANR	504220	UnaryOperator	&		503874	0					
ANR	504221	Identifier	c12		503874	1					
ANR	504222	IfStatement	if ( code < 0 )		503874	21					
ANR	504223	Condition	code < 0	820:8:28495:28502	503874	0	True				
ANR	504224	RelationalExpression	code < 0		503874	0		<			
ANR	504225	Identifier	code		503874	0					
ANR	504226	PrimaryExpression	0		503874	1					
ANR	504227	ReturnStatement	return code ;	821:8:28513:28524	503874	1	True				
ANR	504228	Identifier	code		503874	0					
ANR	504229	IfStatement	"if ( ! is_dc_nearly_linear ( dev , & d12 , & d [ 1 ] , & d [ 2 ] , 0.5 , ndev , smoothness ) )"		503874	22					
ANR	504230	Condition	"! is_dc_nearly_linear ( dev , & d12 , & d [ 1 ] , & d [ 2 ] , 0.5 , ndev , smoothness )"	822:8:28534:28601	503874	0	True				
ANR	504231	UnaryOperationExpression	"! is_dc_nearly_linear ( dev , & d12 , & d [ 1 ] , & d [ 2 ] , 0.5 , ndev , smoothness )"		503874	0					
ANR	504232	UnaryOperator	!		503874	0					
ANR	504233	CallExpression	"is_dc_nearly_linear ( dev , & d12 , & d [ 1 ] , & d [ 2 ] , 0.5 , ndev , smoothness )"		503874	1					
ANR	504234	Callee	is_dc_nearly_linear		503874	0					
ANR	504235	Identifier	is_dc_nearly_linear		503874	0					
ANR	504236	ArgumentList	dev		503874	1					
ANR	504237	Argument	dev		503874	0					
ANR	504238	Identifier	dev		503874	0					
ANR	504239	Argument	& d12		503874	1					
ANR	504240	UnaryOperationExpression	& d12		503874	0					
ANR	504241	UnaryOperator	&		503874	0					
ANR	504242	Identifier	d12		503874	1					
ANR	504243	Argument	& d [ 1 ]		503874	2					
ANR	504244	UnaryOperationExpression	& d [ 1 ]		503874	0					
ANR	504245	UnaryOperator	&		503874	0					
ANR	504246	ArrayIndexing	d [ 1 ]		503874	1					
ANR	504247	Identifier	d		503874	0					
ANR	504248	PrimaryExpression	1		503874	1					
ANR	504249	Argument	& d [ 2 ]		503874	3					
ANR	504250	UnaryOperationExpression	& d [ 2 ]		503874	0					
ANR	504251	UnaryOperator	&		503874	0					
ANR	504252	ArrayIndexing	d [ 2 ]		503874	1					
ANR	504253	Identifier	d		503874	0					
ANR	504254	PrimaryExpression	2		503874	1					
ANR	504255	Argument	0.5		503874	4					
ANR	504256	PrimaryExpression	0.5		503874	0					
ANR	504257	Argument	ndev		503874	5					
ANR	504258	Identifier	ndev		503874	0					
ANR	504259	Argument	smoothness		503874	6					
ANR	504260	Identifier	smoothness		503874	0					
ANR	504261	ReturnStatement	return 0 ;	823:8:28612:28620	503874	1	True				
ANR	504262	PrimaryExpression	0		503874	0					
ANR	504263	ExpressionStatement	"interpolate_cc ( & c20 , c2 , c0 , 0.5 , n )"	825:4:28627:28663	503874	23	True				
ANR	504264	CallExpression	"interpolate_cc ( & c20 , c2 , c0 , 0.5 , n )"		503874	0					
ANR	504265	Callee	interpolate_cc		503874	0					
ANR	504266	Identifier	interpolate_cc		503874	0					
ANR	504267	ArgumentList	& c20		503874	1					
ANR	504268	Argument	& c20		503874	0					
ANR	504269	UnaryOperationExpression	& c20		503874	0					
ANR	504270	UnaryOperator	&		503874	0					
ANR	504271	Identifier	c20		503874	1					
ANR	504272	Argument	c2		503874	1					
ANR	504273	Identifier	c2		503874	0					
ANR	504274	Argument	c0		503874	2					
ANR	504275	Identifier	c0		503874	0					
ANR	504276	Argument	0.5		503874	3					
ANR	504277	PrimaryExpression	0.5		503874	0					
ANR	504278	Argument	n		503874	4					
ANR	504279	Identifier	n		503874	0					
ANR	504280	ExpressionStatement	"code = cc2dc ( cs , pgs , dev , & d20 , & c20 )"	826:4:28669:28707	503874	24	True				
ANR	504281	AssignmentExpression	"code = cc2dc ( cs , pgs , dev , & d20 , & c20 )"		503874	0		=			
ANR	504282	Identifier	code		503874	0					
ANR	504283	CallExpression	"cc2dc ( cs , pgs , dev , & d20 , & c20 )"		503874	1					
ANR	504284	Callee	cc2dc		503874	0					
ANR	504285	Identifier	cc2dc		503874	0					
ANR	504286	ArgumentList	cs		503874	1					
ANR	504287	Argument	cs		503874	0					
ANR	504288	Identifier	cs		503874	0					
ANR	504289	Argument	pgs		503874	1					
ANR	504290	Identifier	pgs		503874	0					
ANR	504291	Argument	dev		503874	2					
ANR	504292	Identifier	dev		503874	0					
ANR	504293	Argument	& d20		503874	3					
ANR	504294	UnaryOperationExpression	& d20		503874	0					
ANR	504295	UnaryOperator	&		503874	0					
ANR	504296	Identifier	d20		503874	1					
ANR	504297	Argument	& c20		503874	4					
ANR	504298	UnaryOperationExpression	& c20		503874	0					
ANR	504299	UnaryOperator	&		503874	0					
ANR	504300	Identifier	c20		503874	1					
ANR	504301	IfStatement	if ( code < 0 )		503874	25					
ANR	504302	Condition	code < 0	827:8:28717:28724	503874	0	True				
ANR	504303	RelationalExpression	code < 0		503874	0		<			
ANR	504304	Identifier	code		503874	0					
ANR	504305	PrimaryExpression	0		503874	1					
ANR	504306	ReturnStatement	return code ;	828:8:28735:28746	503874	1	True				
ANR	504307	Identifier	code		503874	0					
ANR	504308	IfStatement	"if ( ! is_dc_nearly_linear ( dev , & d20 , & d [ 2 ] , & d [ 0 ] , 0.5 , ndev , smoothness ) )"		503874	26					
ANR	504309	Condition	"! is_dc_nearly_linear ( dev , & d20 , & d [ 2 ] , & d [ 0 ] , 0.5 , ndev , smoothness )"	829:8:28756:28823	503874	0	True				
ANR	504310	UnaryOperationExpression	"! is_dc_nearly_linear ( dev , & d20 , & d [ 2 ] , & d [ 0 ] , 0.5 , ndev , smoothness )"		503874	0					
ANR	504311	UnaryOperator	!		503874	0					
ANR	504312	CallExpression	"is_dc_nearly_linear ( dev , & d20 , & d [ 2 ] , & d [ 0 ] , 0.5 , ndev , smoothness )"		503874	1					
ANR	504313	Callee	is_dc_nearly_linear		503874	0					
ANR	504314	Identifier	is_dc_nearly_linear		503874	0					
ANR	504315	ArgumentList	dev		503874	1					
ANR	504316	Argument	dev		503874	0					
ANR	504317	Identifier	dev		503874	0					
ANR	504318	Argument	& d20		503874	1					
ANR	504319	UnaryOperationExpression	& d20		503874	0					
ANR	504320	UnaryOperator	&		503874	0					
ANR	504321	Identifier	d20		503874	1					
ANR	504322	Argument	& d [ 2 ]		503874	2					
ANR	504323	UnaryOperationExpression	& d [ 2 ]		503874	0					
ANR	504324	UnaryOperator	&		503874	0					
ANR	504325	ArrayIndexing	d [ 2 ]		503874	1					
ANR	504326	Identifier	d		503874	0					
ANR	504327	PrimaryExpression	2		503874	1					
ANR	504328	Argument	& d [ 0 ]		503874	3					
ANR	504329	UnaryOperationExpression	& d [ 0 ]		503874	0					
ANR	504330	UnaryOperator	&		503874	0					
ANR	504331	ArrayIndexing	d [ 0 ]		503874	1					
ANR	504332	Identifier	d		503874	0					
ANR	504333	PrimaryExpression	0		503874	1					
ANR	504334	Argument	0.5		503874	4					
ANR	504335	PrimaryExpression	0.5		503874	0					
ANR	504336	Argument	ndev		503874	5					
ANR	504337	Identifier	ndev		503874	0					
ANR	504338	Argument	smoothness		503874	6					
ANR	504339	Identifier	smoothness		503874	0					
ANR	504340	ReturnStatement	return 0 ;	830:8:28834:28842	503874	1	True				
ANR	504341	PrimaryExpression	0		503874	0					
ANR	504342	ReturnStatement	return 1 ;	831:4:28848:28856	503874	27	True				
ANR	504343	PrimaryExpression	1		503874	0					
ANR	504344	ReturnType	static int		503874	1					
ANR	504345	Identifier	gx_cspace_is_linear_in_triangle		503874	2					
ANR	504346	ParameterList	"const gs_color_space * cs , const gs_gstate * pgs , gx_device * dev , const gs_client_color * c0 , const gs_client_color * c1 , const gs_client_color * c2 , float smoothness"		503874	3					
ANR	504347	Parameter	const gs_color_space * cs	775:32:26973:26996	503874	0	True				
ANR	504348	ParameterType	const gs_color_space *		503874	0					
ANR	504349	Identifier	cs		503874	1					
ANR	504350	Parameter	const gs_gstate * pgs	775:58:26999:27019	503874	1	True				
ANR	504351	ParameterType	const gs_gstate *		503874	0					
ANR	504352	Identifier	pgs		503874	1					
ANR	504353	Parameter	gx_device * dev	776:16:27038:27051	503874	2	True				
ANR	504354	ParameterType	gx_device *		503874	0					
ANR	504355	Identifier	dev		503874	1					
ANR	504356	Parameter	const gs_client_color * c0	777:16:27070:27094	503874	3	True				
ANR	504357	ParameterType	const gs_client_color *		503874	0					
ANR	504358	Identifier	c0		503874	1					
ANR	504359	Parameter	const gs_client_color * c1	777:43:27097:27121	503874	4	True				
ANR	504360	ParameterType	const gs_client_color *		503874	0					
ANR	504361	Identifier	c1		503874	1					
ANR	504362	Parameter	const gs_client_color * c2	778:16:27140:27164	503874	5	True				
ANR	504363	ParameterType	const gs_client_color *		503874	0					
ANR	504364	Identifier	c2		503874	1					
ANR	504365	Parameter	float smoothness	778:43:27167:27182	503874	6	True				
ANR	504366	ParameterType	float		503874	0					
ANR	504367	Identifier	smoothness		503874	1					
ANR	504368	CFGEntryNode	ENTRY		503874		True				
ANR	504369	CFGExitNode	EXIT		503874		True				
ANR	504370	Symbol	* dev		503874						
ANR	504371	Symbol	& c012		503874						
ANR	504372	Symbol	& c20		503874						
ANR	504373	Symbol	d012		503874						
ANR	504374	Symbol	code		503874						
ANR	504375	Symbol	d12		503874						
ANR	504376	Symbol	c12		503874						
ANR	504377	Symbol	* cs -> type		503874						
ANR	504378	Symbol	dev -> color_info		503874						
ANR	504379	Symbol	& d01		503874						
ANR	504380	Symbol	& c01		503874						
ANR	504381	Symbol	& d20		503874						
ANR	504382	Symbol	cs -> type		503874						
ANR	504383	Symbol	dev		503874						
ANR	504384	Symbol	ndev		503874						
ANR	504385	Symbol	pgs		503874						
ANR	504386	Symbol	* * cs		503874						
ANR	504387	Symbol	c20		503874						
ANR	504388	Symbol	c012		503874						
ANR	504389	Symbol	d20		503874						
ANR	504390	Symbol	d01		503874						
ANR	504391	Symbol	d		503874						
ANR	504392	Symbol	dev -> color_info . num_components		503874						
ANR	504393	Symbol	c01		503874						
ANR	504394	Symbol	& d12		503874						
ANR	504395	Symbol	c0		503874						
ANR	504396	Symbol	& c12		503874						
ANR	504397	Symbol	c1		503874						
ANR	504398	Symbol	n		503874						
ANR	504399	Symbol	& d012		503874						
ANR	504400	Symbol	c2		503874						
ANR	504401	Symbol	cs		503874						
ANR	504402	Symbol	cc2dc		503874						
ANR	504403	Symbol	cs -> type -> num_components		503874						
ANR	504404	Symbol	smoothness		503874						
ANR	504405	Symbol	* cs		503874						
ANR	504406	Symbol	is_dc_nearly_linear		503874						
ANR	504407	Function	gx_cspace_is_linear_default	835:0:28906:29821							
ANR	504408	FunctionDef	"gx_cspace_is_linear_default (const gs_color_space * cs , const gs_gstate * pgs , gx_device * dev , const gs_client_color * c0 , const gs_client_color * c1 , const gs_client_color * c2 , const gs_client_color * c3 , float smoothness , gsicc_link_t * icclink)"		504407	0					
ANR	504409	CompoundStatement		841:0:29216:29821	504407	0					
ANR	504410	IdentifierDeclStatement	int code ;	844:4:29367:29375	504407	0	True				
ANR	504411	IdentifierDecl	code		504407	0					
ANR	504412	IdentifierDeclType	int		504407	0					
ANR	504413	Identifier	code		504407	1					
ANR	504414	IfStatement	if ( ! colors_are_separable_and_linear ( & dev -> color_info ) )		504407	1					
ANR	504415	Condition	! colors_are_separable_and_linear ( & dev -> color_info )	846:8:29386:29435	504407	0	True				
ANR	504416	UnaryOperationExpression	! colors_are_separable_and_linear ( & dev -> color_info )		504407	0					
ANR	504417	UnaryOperator	!		504407	0					
ANR	504418	CallExpression	colors_are_separable_and_linear ( & dev -> color_info )		504407	1					
ANR	504419	Callee	colors_are_separable_and_linear		504407	0					
ANR	504420	Identifier	colors_are_separable_and_linear		504407	0					
ANR	504421	ArgumentList	& dev -> color_info		504407	1					
ANR	504422	Argument	& dev -> color_info		504407	0					
ANR	504423	UnaryOperationExpression	& dev -> color_info		504407	0					
ANR	504424	UnaryOperator	&		504407	0					
ANR	504425	PtrMemberAccess	dev -> color_info		504407	1					
ANR	504426	Identifier	dev		504407	0					
ANR	504427	Identifier	color_info		504407	1					
ANR	504428	ExpressionStatement	return_error ( gs_error_rangecheck )	847:8:29446:29479	504407	1	True				
ANR	504429	CallExpression	return_error ( gs_error_rangecheck )		504407	0					
ANR	504430	Callee	return_error		504407	0					
ANR	504431	Identifier	return_error		504407	0					
ANR	504432	ArgumentList	gs_error_rangecheck		504407	1					
ANR	504433	Argument	gs_error_rangecheck		504407	0					
ANR	504434	Identifier	gs_error_rangecheck		504407	0					
ANR	504435	IfStatement	if ( c2 == NULL )		504407	2					
ANR	504436	Condition	c2 == NULL	848:8:29489:29498	504407	0	True				
ANR	504437	EqualityExpression	c2 == NULL		504407	0		==			
ANR	504438	Identifier	c2		504407	0					
ANR	504439	Identifier	NULL		504407	1					
ANR	504440	ReturnStatement	"return gx_cspace_is_linear_in_line ( cs , pgs , dev , c0 , c1 , smoothness ) ;"	849:8:29509:29577	504407	1	True				
ANR	504441	CallExpression	"gx_cspace_is_linear_in_line ( cs , pgs , dev , c0 , c1 , smoothness )"		504407	0					
ANR	504442	Callee	gx_cspace_is_linear_in_line		504407	0					
ANR	504443	Identifier	gx_cspace_is_linear_in_line		504407	0					
ANR	504444	ArgumentList	cs		504407	1					
ANR	504445	Argument	cs		504407	0					
ANR	504446	Identifier	cs		504407	0					
ANR	504447	Argument	pgs		504407	1					
ANR	504448	Identifier	pgs		504407	0					
ANR	504449	Argument	dev		504407	2					
ANR	504450	Identifier	dev		504407	0					
ANR	504451	Argument	c0		504407	3					
ANR	504452	Identifier	c0		504407	0					
ANR	504453	Argument	c1		504407	4					
ANR	504454	Identifier	c1		504407	0					
ANR	504455	Argument	smoothness		504407	5					
ANR	504456	Identifier	smoothness		504407	0					
ANR	504457	ExpressionStatement	"code = gx_cspace_is_linear_in_triangle ( cs , pgs , dev , c0 , c1 , c2 , smoothness )"	850:4:29583:29659	504407	3	True				
ANR	504458	AssignmentExpression	"code = gx_cspace_is_linear_in_triangle ( cs , pgs , dev , c0 , c1 , c2 , smoothness )"		504407	0		=			
ANR	504459	Identifier	code		504407	0					
ANR	504460	CallExpression	"gx_cspace_is_linear_in_triangle ( cs , pgs , dev , c0 , c1 , c2 , smoothness )"		504407	1					
ANR	504461	Callee	gx_cspace_is_linear_in_triangle		504407	0					
ANR	504462	Identifier	gx_cspace_is_linear_in_triangle		504407	0					
ANR	504463	ArgumentList	cs		504407	1					
ANR	504464	Argument	cs		504407	0					
ANR	504465	Identifier	cs		504407	0					
ANR	504466	Argument	pgs		504407	1					
ANR	504467	Identifier	pgs		504407	0					
ANR	504468	Argument	dev		504407	2					
ANR	504469	Identifier	dev		504407	0					
ANR	504470	Argument	c0		504407	3					
ANR	504471	Identifier	c0		504407	0					
ANR	504472	Argument	c1		504407	4					
ANR	504473	Identifier	c1		504407	0					
ANR	504474	Argument	c2		504407	5					
ANR	504475	Identifier	c2		504407	0					
ANR	504476	Argument	smoothness		504407	6					
ANR	504477	Identifier	smoothness		504407	0					
ANR	504478	IfStatement	if ( code <= 0 )		504407	4					
ANR	504479	Condition	code <= 0	851:8:29669:29677	504407	0	True				
ANR	504480	RelationalExpression	code <= 0		504407	0		<=			
ANR	504481	Identifier	code		504407	0					
ANR	504482	PrimaryExpression	0		504407	1					
ANR	504483	ReturnStatement	return code ;	852:8:29688:29699	504407	1	True				
ANR	504484	Identifier	code		504407	0					
ANR	504485	IfStatement	if ( c3 == NULL )		504407	5					
ANR	504486	Condition	c3 == NULL	853:8:29709:29718	504407	0	True				
ANR	504487	EqualityExpression	c3 == NULL		504407	0		==			
ANR	504488	Identifier	c3		504407	0					
ANR	504489	Identifier	NULL		504407	1					
ANR	504490	ReturnStatement	return 1 ;	854:8:29729:29737	504407	1	True				
ANR	504491	PrimaryExpression	1		504407	0					
ANR	504492	ReturnStatement	"return gx_cspace_is_linear_in_triangle ( cs , pgs , dev , c1 , c2 , c3 , smoothness ) ;"	855:4:29743:29819	504407	6	True				
ANR	504493	CallExpression	"gx_cspace_is_linear_in_triangle ( cs , pgs , dev , c1 , c2 , c3 , smoothness )"		504407	0					
ANR	504494	Callee	gx_cspace_is_linear_in_triangle		504407	0					
ANR	504495	Identifier	gx_cspace_is_linear_in_triangle		504407	0					
ANR	504496	ArgumentList	cs		504407	1					
ANR	504497	Argument	cs		504407	0					
ANR	504498	Identifier	cs		504407	0					
ANR	504499	Argument	pgs		504407	1					
ANR	504500	Identifier	pgs		504407	0					
ANR	504501	Argument	dev		504407	2					
ANR	504502	Identifier	dev		504407	0					
ANR	504503	Argument	c1		504407	3					
ANR	504504	Identifier	c1		504407	0					
ANR	504505	Argument	c2		504407	4					
ANR	504506	Identifier	c2		504407	0					
ANR	504507	Argument	c3		504407	5					
ANR	504508	Identifier	c3		504407	0					
ANR	504509	Argument	smoothness		504407	6					
ANR	504510	Identifier	smoothness		504407	0					
ANR	504511	ReturnType	int		504407	1					
ANR	504512	Identifier	gx_cspace_is_linear_default		504407	2					
ANR	504513	ParameterList	"const gs_color_space * cs , const gs_gstate * pgs , gx_device * dev , const gs_client_color * c0 , const gs_client_color * c1 , const gs_client_color * c2 , const gs_client_color * c3 , float smoothness , gsicc_link_t * icclink"		504407	3					
ANR	504514	Parameter	const gs_color_space * cs	836:28:28938:28961	504407	0	True				
ANR	504515	ParameterType	const gs_color_space *		504407	0					
ANR	504516	Identifier	cs		504407	1					
ANR	504517	Parameter	const gs_gstate * pgs	836:54:28964:28984	504407	1	True				
ANR	504518	ParameterType	const gs_gstate *		504407	0					
ANR	504519	Identifier	pgs		504407	1					
ANR	504520	Parameter	gx_device * dev	837:16:29003:29016	504407	2	True				
ANR	504521	ParameterType	gx_device *		504407	0					
ANR	504522	Identifier	dev		504407	1					
ANR	504523	Parameter	const gs_client_color * c0	838:16:29035:29059	504407	3	True				
ANR	504524	ParameterType	const gs_client_color *		504407	0					
ANR	504525	Identifier	c0		504407	1					
ANR	504526	Parameter	const gs_client_color * c1	838:43:29062:29086	504407	4	True				
ANR	504527	ParameterType	const gs_client_color *		504407	0					
ANR	504528	Identifier	c1		504407	1					
ANR	504529	Parameter	const gs_client_color * c2	839:16:29105:29129	504407	5	True				
ANR	504530	ParameterType	const gs_client_color *		504407	0					
ANR	504531	Identifier	c2		504407	1					
ANR	504532	Parameter	const gs_client_color * c3	839:43:29132:29156	504407	6	True				
ANR	504533	ParameterType	const gs_client_color *		504407	0					
ANR	504534	Identifier	c3		504407	1					
ANR	504535	Parameter	float smoothness	840:16:29175:29190	504407	7	True				
ANR	504536	ParameterType	float		504407	0					
ANR	504537	Identifier	smoothness		504407	1					
ANR	504538	Parameter	gsicc_link_t * icclink	840:34:29193:29213	504407	8	True				
ANR	504539	ParameterType	gsicc_link_t *		504407	0					
ANR	504540	Identifier	icclink		504407	1					
ANR	504541	CFGEntryNode	ENTRY		504407		True				
ANR	504542	CFGExitNode	EXIT		504407		True				
ANR	504543	Symbol	icclink		504407						
ANR	504544	Symbol	code		504407						
ANR	504545	Symbol	NULL		504407						
ANR	504546	Symbol	gs_error_rangecheck		504407						
ANR	504547	Symbol	gx_cspace_is_linear_in_line		504407						
ANR	504548	Symbol	c0		504407						
ANR	504549	Symbol	gx_cspace_is_linear_in_triangle		504407						
ANR	504550	Symbol	c1		504407						
ANR	504551	Symbol	c2		504407						
ANR	504552	Symbol	colors_are_separable_and_linear		504407						
ANR	504553	Symbol	cs		504407						
ANR	504554	Symbol	c3		504407						
ANR	504555	Symbol	smoothness		504407						
ANR	504556	Symbol	dev		504407						
ANR	504557	Symbol	& dev -> color_info		504407						
ANR	504558	Symbol	pgs		504407						
ANR	504559	Function	gx_serialize_cspace_type	859:0:29845:30052							
ANR	504560	FunctionDef	"gx_serialize_cspace_type (const gs_color_space * pcs , stream * s)"		504559	0					
ANR	504561	CompoundStatement		861:0:29914:30052	504559	0					
ANR	504562	IdentifierDeclStatement	const gs_color_space_type * type = pcs -> type ;	862:4:29920:29964	504559	0	True				
ANR	504563	IdentifierDecl	* type = pcs -> type		504559	0					
ANR	504564	IdentifierDeclType	const gs_color_space_type *		504559	0					
ANR	504565	Identifier	type		504559	1					
ANR	504566	AssignmentExpression	* type = pcs -> type		504559	2		=			
ANR	504567	Identifier	type		504559	0					
ANR	504568	PtrMemberAccess	pcs -> type		504559	1					
ANR	504569	Identifier	pcs		504559	0					
ANR	504570	Identifier	type		504559	1					
ANR	504571	IdentifierDeclStatement	uint n ;	863:4:29970:29976	504559	1	True				
ANR	504572	IdentifierDecl	n		504559	0					
ANR	504573	IdentifierDeclType	uint		504559	0					
ANR	504574	Identifier	n		504559	1					
ANR	504575	ReturnStatement	"return sputs ( s , ( const byte * ) & type -> index , sizeof ( type -> index ) , & n ) ;"	864:4:29982:30050	504559	2	True				
ANR	504576	CallExpression	"sputs ( s , ( const byte * ) & type -> index , sizeof ( type -> index ) , & n )"		504559	0					
ANR	504577	Callee	sputs		504559	0					
ANR	504578	Identifier	sputs		504559	0					
ANR	504579	ArgumentList	s		504559	1					
ANR	504580	Argument	s		504559	0					
ANR	504581	Identifier	s		504559	0					
ANR	504582	Argument	( const byte * ) & type -> index		504559	1					
ANR	504583	CastExpression	( const byte * ) & type -> index		504559	0					
ANR	504584	CastTarget	const byte *		504559	0					
ANR	504585	UnaryOperationExpression	& type -> index		504559	1					
ANR	504586	UnaryOperator	&		504559	0					
ANR	504587	PtrMemberAccess	type -> index		504559	1					
ANR	504588	Identifier	type		504559	0					
ANR	504589	Identifier	index		504559	1					
ANR	504590	Argument	sizeof ( type -> index )		504559	2					
ANR	504591	SizeofExpression	sizeof ( type -> index )		504559	0					
ANR	504592	Sizeof	sizeof		504559	0					
ANR	504593	PtrMemberAccess	type -> index		504559	1					
ANR	504594	Identifier	type		504559	0					
ANR	504595	Identifier	index		504559	1					
ANR	504596	Argument	& n		504559	3					
ANR	504597	UnaryOperationExpression	& n		504559	0					
ANR	504598	UnaryOperator	&		504559	0					
ANR	504599	Identifier	n		504559	1					
ANR	504600	ReturnType	int		504559	1					
ANR	504601	Identifier	gx_serialize_cspace_type		504559	2					
ANR	504602	ParameterList	"const gs_color_space * pcs , stream * s"		504559	3					
ANR	504603	Parameter	const gs_color_space * pcs	860:25:29874:29899	504559	0	True				
ANR	504604	ParameterType	const gs_color_space *		504559	0					
ANR	504605	Identifier	pcs		504559	1					
ANR	504606	Parameter	stream * s	860:53:29902:29911	504559	1	True				
ANR	504607	ParameterType	stream *		504559	0					
ANR	504608	Identifier	s		504559	1					
ANR	504609	CFGEntryNode	ENTRY		504559		True				
ANR	504610	CFGExitNode	EXIT		504559		True				
ANR	504611	Symbol	type -> index		504559						
ANR	504612	Symbol	pcs		504559						
ANR	504613	Symbol	s		504559						
ANR	504614	Symbol	& n		504559						
ANR	504615	Symbol	* type		504559						
ANR	504616	Symbol	* pcs		504559						
ANR	504617	Symbol	& type -> index		504559						
ANR	504618	Symbol	type		504559						
ANR	504619	Symbol	n		504559						
ANR	504620	Symbol	sputs		504559						
ANR	504621	Symbol	pcs -> type		504559						
ANR	504622	DeclStmt									
ANR	504623	Decl							EV_CONST gs_color_space	EV_CONST gs_color_space *	pcs
