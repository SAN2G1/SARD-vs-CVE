command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1309446	File	data/converged/CVE-2018-16863_ghostpdl/base_gxtype1.c								
ANR	1309447	DeclStmt									
ANR	1309448	Decl							int	int	i
ANR	1309449	DeclStmt									
ANR	1309450	Decl							ip_state_t	ip_state_t *	ipsp
ANR	1309451	DeclStmt									
ANR	1309452	Decl							int	int	diff
ANR	1309453	DeclStmt									
ANR	1309454	Decl							const char	const char [ ]	gx_extendeg_glyph_name_separator
ANR	1309455	Function	gs_type1_interp_init	98:0:2984:4423							
ANR	1309456	FunctionDef	"gs_type1_interp_init (register gs_type1_state * pcis , gs_gstate * pgs , gx_path * ppath , const gs_log2_scale_point * pscale , const gs_log2_scale_point * psubpixels , bool no_grid_fitting , int paint_type , gs_font_type1 * pfont)"		1309455	0					
ANR	1309457	CompoundStatement		103:0:3241:4423	1309455	0					
ANR	1309458	Statement	static	104:4:3247:3252	1309455	0	True				
ANR	1309459	IdentifierDeclStatement	"const gs_log2_scale_point no_scale = { 0 , 0 } ;"	104:11:3254:3297	1309455	1	True				
ANR	1309460	IdentifierDecl	"no_scale = { 0 , 0 }"		1309455	0					
ANR	1309461	IdentifierDeclType	const gs_log2_scale_point		1309455	0					
ANR	1309462	Identifier	no_scale		1309455	1					
ANR	1309463	AssignmentExpression	"no_scale = { 0 , 0 }"		1309455	2		=			
ANR	1309464	Identifier	no_scale		1309455	0					
ANR	1309465	InitializerList	0		1309455	1					
ANR	1309466	PrimaryExpression	0		1309455	0					
ANR	1309467	PrimaryExpression	0		1309455	1					
ANR	1309468	IdentifierDeclStatement	const gs_log2_scale_point * plog2_scale = ( FORCE_HINTS_TO_BIG_PIXELS && pscale != NULL ? pscale : & no_scale ) ;	105:4:3303:3418	1309455	2	True				
ANR	1309469	IdentifierDecl	* plog2_scale = ( FORCE_HINTS_TO_BIG_PIXELS && pscale != NULL ? pscale : & no_scale )		1309455	0					
ANR	1309470	IdentifierDeclType	const gs_log2_scale_point *		1309455	0					
ANR	1309471	Identifier	plog2_scale		1309455	1					
ANR	1309472	AssignmentExpression	* plog2_scale = ( FORCE_HINTS_TO_BIG_PIXELS && pscale != NULL ? pscale : & no_scale )		1309455	2		=			
ANR	1309473	Identifier	plog2_scale		1309455	0					
ANR	1309474	ConditionalExpression	FORCE_HINTS_TO_BIG_PIXELS && pscale != NULL ? pscale : & no_scale		1309455	1					
ANR	1309475	Condition	FORCE_HINTS_TO_BIG_PIXELS && pscale != NULL		1309455	0					
ANR	1309476	AndExpression	FORCE_HINTS_TO_BIG_PIXELS && pscale != NULL		1309455	0		&&			
ANR	1309477	Identifier	FORCE_HINTS_TO_BIG_PIXELS		1309455	0					
ANR	1309478	EqualityExpression	pscale != NULL		1309455	1		!=			
ANR	1309479	Identifier	pscale		1309455	0					
ANR	1309480	Identifier	NULL		1309455	1					
ANR	1309481	Identifier	pscale		1309455	1					
ANR	1309482	UnaryOperationExpression	& no_scale		1309455	2					
ANR	1309483	UnaryOperator	&		1309455	0					
ANR	1309484	Identifier	no_scale		1309455	1					
ANR	1309485	IdentifierDeclStatement	const gs_log2_scale_point * plog2_subpixels = ( FORCE_HINTS_TO_BIG_PIXELS ? ( psubpixels != NULL ? psubpixels : plog2_scale ) : & no_scale ) ;	107:4:3424:3566	1309455	3	True				
ANR	1309486	IdentifierDecl	* plog2_subpixels = ( FORCE_HINTS_TO_BIG_PIXELS ? ( psubpixels != NULL ? psubpixels : plog2_scale ) : & no_scale )		1309455	0					
ANR	1309487	IdentifierDeclType	const gs_log2_scale_point *		1309455	0					
ANR	1309488	Identifier	plog2_subpixels		1309455	1					
ANR	1309489	AssignmentExpression	* plog2_subpixels = ( FORCE_HINTS_TO_BIG_PIXELS ? ( psubpixels != NULL ? psubpixels : plog2_scale ) : & no_scale )		1309455	2		=			
ANR	1309490	Identifier	plog2_subpixels		1309455	0					
ANR	1309491	ConditionalExpression	FORCE_HINTS_TO_BIG_PIXELS ? ( psubpixels != NULL ? psubpixels : plog2_scale ) : & no_scale		1309455	1					
ANR	1309492	Condition	FORCE_HINTS_TO_BIG_PIXELS		1309455	0					
ANR	1309493	Identifier	FORCE_HINTS_TO_BIG_PIXELS		1309455	0					
ANR	1309494	ConditionalExpression	psubpixels != NULL ? psubpixels : plog2_scale		1309455	1					
ANR	1309495	Condition	psubpixels != NULL		1309455	0					
ANR	1309496	EqualityExpression	psubpixels != NULL		1309455	0		!=			
ANR	1309497	Identifier	psubpixels		1309455	0					
ANR	1309498	Identifier	NULL		1309455	1					
ANR	1309499	Identifier	psubpixels		1309455	1					
ANR	1309500	Identifier	plog2_scale		1309455	2					
ANR	1309501	UnaryOperationExpression	& no_scale		1309455	2					
ANR	1309502	UnaryOperator	&		1309455	0					
ANR	1309503	Identifier	no_scale		1309455	1					
ANR	1309504	ExpressionStatement	"if_debug0m ( '1' , pgs -> memory , ""[1]gs_type1_interp_init\\n"" )"	110:4:3573:3630	1309455	4	True				
ANR	1309505	CallExpression	"if_debug0m ( '1' , pgs -> memory , ""[1]gs_type1_interp_init\\n"" )"		1309455	0					
ANR	1309506	Callee	if_debug0m		1309455	0					
ANR	1309507	Identifier	if_debug0m		1309455	0					
ANR	1309508	ArgumentList	'1'		1309455	1					
ANR	1309509	Argument	'1'		1309455	0					
ANR	1309510	PrimaryExpression	'1'		1309455	0					
ANR	1309511	Argument	pgs -> memory		1309455	1					
ANR	1309512	PtrMemberAccess	pgs -> memory		1309455	0					
ANR	1309513	Identifier	pgs		1309455	0					
ANR	1309514	Identifier	memory		1309455	1					
ANR	1309515	Argument	"""[1]gs_type1_interp_init\\n"""		1309455	2					
ANR	1309516	PrimaryExpression	"""[1]gs_type1_interp_init\\n"""		1309455	0					
ANR	1309517	ExpressionStatement	pcis -> pfont = pfont	111:4:3636:3655	1309455	5	True				
ANR	1309518	AssignmentExpression	pcis -> pfont = pfont		1309455	0		=			
ANR	1309519	PtrMemberAccess	pcis -> pfont		1309455	0					
ANR	1309520	Identifier	pcis		1309455	0					
ANR	1309521	Identifier	pfont		1309455	1					
ANR	1309522	Identifier	pfont		1309455	1					
ANR	1309523	ExpressionStatement	pcis -> pgs = pgs	112:4:3661:3676	1309455	6	True				
ANR	1309524	AssignmentExpression	pcis -> pgs = pgs		1309455	0		=			
ANR	1309525	PtrMemberAccess	pcis -> pgs		1309455	0					
ANR	1309526	Identifier	pcis		1309455	0					
ANR	1309527	Identifier	pgs		1309455	1					
ANR	1309528	Identifier	pgs		1309455	1					
ANR	1309529	ExpressionStatement	pcis -> path = ppath	113:4:3682:3700	1309455	7	True				
ANR	1309530	AssignmentExpression	pcis -> path = ppath		1309455	0		=			
ANR	1309531	PtrMemberAccess	pcis -> path		1309455	0					
ANR	1309532	Identifier	pcis		1309455	0					
ANR	1309533	Identifier	path		1309455	1					
ANR	1309534	Identifier	ppath		1309455	1					
ANR	1309535	ExpressionStatement	pcis -> callback_data = pfont	114:4:3706:3733	1309455	8	True				
ANR	1309536	AssignmentExpression	pcis -> callback_data = pfont		1309455	0		=			
ANR	1309537	PtrMemberAccess	pcis -> callback_data		1309455	0					
ANR	1309538	Identifier	pcis		1309455	0					
ANR	1309539	Identifier	callback_data		1309455	1					
ANR	1309540	Identifier	pfont		1309455	1					
ANR	1309541	ExpressionStatement	pcis -> no_grid_fitting = no_grid_fitting	115:4:3767:3806	1309455	9	True				
ANR	1309542	AssignmentExpression	pcis -> no_grid_fitting = no_grid_fitting		1309455	0		=			
ANR	1309543	PtrMemberAccess	pcis -> no_grid_fitting		1309455	0					
ANR	1309544	Identifier	pcis		1309455	0					
ANR	1309545	Identifier	no_grid_fitting		1309455	1					
ANR	1309546	Identifier	no_grid_fitting		1309455	1					
ANR	1309547	ExpressionStatement	pcis -> paint_type = paint_type	116:4:3812:3841	1309455	10	True				
ANR	1309548	AssignmentExpression	pcis -> paint_type = paint_type		1309455	0		=			
ANR	1309549	PtrMemberAccess	pcis -> paint_type		1309455	0					
ANR	1309550	Identifier	pcis		1309455	0					
ANR	1309551	Identifier	paint_type		1309455	1					
ANR	1309552	Identifier	paint_type		1309455	1					
ANR	1309553	ExpressionStatement	pcis -> os_count = 0	117:4:3847:3865	1309455	11	True				
ANR	1309554	AssignmentExpression	pcis -> os_count = 0		1309455	0		=			
ANR	1309555	PtrMemberAccess	pcis -> os_count		1309455	0					
ANR	1309556	Identifier	pcis		1309455	0					
ANR	1309557	Identifier	os_count		1309455	1					
ANR	1309558	PrimaryExpression	0		1309455	1					
ANR	1309559	ExpressionStatement	pcis -> ips_count = 1	118:4:3871:3890	1309455	12	True				
ANR	1309560	AssignmentExpression	pcis -> ips_count = 1		1309455	0		=			
ANR	1309561	PtrMemberAccess	pcis -> ips_count		1309455	0					
ANR	1309562	Identifier	pcis		1309455	0					
ANR	1309563	Identifier	ips_count		1309455	1					
ANR	1309564	PrimaryExpression	1		1309455	1					
ANR	1309565	ExpressionStatement	pcis -> ipstack [ 0 ] . ip = 0	119:4:3896:3919	1309455	13	True				
ANR	1309566	AssignmentExpression	pcis -> ipstack [ 0 ] . ip = 0		1309455	0		=			
ANR	1309567	MemberAccess	pcis -> ipstack [ 0 ] . ip		1309455	0					
ANR	1309568	ArrayIndexing	pcis -> ipstack [ 0 ]		1309455	0					
ANR	1309569	PtrMemberAccess	pcis -> ipstack		1309455	0					
ANR	1309570	Identifier	pcis		1309455	0					
ANR	1309571	Identifier	ipstack		1309455	1					
ANR	1309572	PrimaryExpression	0		1309455	1					
ANR	1309573	Identifier	ip		1309455	1					
ANR	1309574	PrimaryExpression	0		1309455	1					
ANR	1309575	ExpressionStatement	gs_glyph_data_from_null ( & pcis -> ipstack [ 0 ] . cs_data )	120:4:3925:3975	1309455	14	True				
ANR	1309576	CallExpression	gs_glyph_data_from_null ( & pcis -> ipstack [ 0 ] . cs_data )		1309455	0					
ANR	1309577	Callee	gs_glyph_data_from_null		1309455	0					
ANR	1309578	Identifier	gs_glyph_data_from_null		1309455	0					
ANR	1309579	ArgumentList	& pcis -> ipstack [ 0 ] . cs_data		1309455	1					
ANR	1309580	Argument	& pcis -> ipstack [ 0 ] . cs_data		1309455	0					
ANR	1309581	UnaryOperationExpression	& pcis -> ipstack [ 0 ] . cs_data		1309455	0					
ANR	1309582	UnaryOperator	&		1309455	0					
ANR	1309583	MemberAccess	pcis -> ipstack [ 0 ] . cs_data		1309455	1					
ANR	1309584	ArrayIndexing	pcis -> ipstack [ 0 ]		1309455	0					
ANR	1309585	PtrMemberAccess	pcis -> ipstack		1309455	0					
ANR	1309586	Identifier	pcis		1309455	0					
ANR	1309587	Identifier	ipstack		1309455	1					
ANR	1309588	PrimaryExpression	0		1309455	1					
ANR	1309589	Identifier	cs_data		1309455	1					
ANR	1309590	ExpressionStatement	pcis -> ignore_pops = 0	121:4:3981:4002	1309455	15	True				
ANR	1309591	AssignmentExpression	pcis -> ignore_pops = 0		1309455	0		=			
ANR	1309592	PtrMemberAccess	pcis -> ignore_pops		1309455	0					
ANR	1309593	Identifier	pcis		1309455	0					
ANR	1309594	Identifier	ignore_pops		1309455	1					
ANR	1309595	PrimaryExpression	0		1309455	1					
ANR	1309596	ExpressionStatement	pcis -> init_done = - 1	122:4:4008:4028	1309455	16	True				
ANR	1309597	AssignmentExpression	pcis -> init_done = - 1		1309455	0		=			
ANR	1309598	PtrMemberAccess	pcis -> init_done		1309455	0					
ANR	1309599	Identifier	pcis		1309455	0					
ANR	1309600	Identifier	init_done		1309455	1					
ANR	1309601	UnaryOperationExpression	- 1		1309455	1					
ANR	1309602	UnaryOperator	-		1309455	0					
ANR	1309603	PrimaryExpression	1		1309455	1					
ANR	1309604	ExpressionStatement	pcis -> sb_set = false	123:4:4034:4054	1309455	17	True				
ANR	1309605	AssignmentExpression	pcis -> sb_set = false		1309455	0		=			
ANR	1309606	PtrMemberAccess	pcis -> sb_set		1309455	0					
ANR	1309607	Identifier	pcis		1309455	0					
ANR	1309608	Identifier	sb_set		1309455	1					
ANR	1309609	Identifier	false		1309455	1					
ANR	1309610	ExpressionStatement	pcis -> width_set = false	124:4:4060:4083	1309455	18	True				
ANR	1309611	AssignmentExpression	pcis -> width_set = false		1309455	0		=			
ANR	1309612	PtrMemberAccess	pcis -> width_set		1309455	0					
ANR	1309613	Identifier	pcis		1309455	0					
ANR	1309614	Identifier	width_set		1309455	1					
ANR	1309615	Identifier	false		1309455	1					
ANR	1309616	ExpressionStatement	pcis -> seac_flag = false	125:4:4089:4112	1309455	19	True				
ANR	1309617	AssignmentExpression	pcis -> seac_flag = false		1309455	0		=			
ANR	1309618	PtrMemberAccess	pcis -> seac_flag		1309455	0					
ANR	1309619	Identifier	pcis		1309455	0					
ANR	1309620	Identifier	seac_flag		1309455	1					
ANR	1309621	Identifier	false		1309455	1					
ANR	1309622	ExpressionStatement	pcis -> num_hints = 0	126:4:4118:4137	1309455	20	True				
ANR	1309623	AssignmentExpression	pcis -> num_hints = 0		1309455	0		=			
ANR	1309624	PtrMemberAccess	pcis -> num_hints		1309455	0					
ANR	1309625	Identifier	pcis		1309455	0					
ANR	1309626	Identifier	num_hints		1309455	1					
ANR	1309627	PrimaryExpression	0		1309455	1					
ANR	1309628	ExpressionStatement	pcis -> seac_accent = - 1	127:4:4143:4165	1309455	21	True				
ANR	1309629	AssignmentExpression	pcis -> seac_accent = - 1		1309455	0		=			
ANR	1309630	PtrMemberAccess	pcis -> seac_accent		1309455	0					
ANR	1309631	Identifier	pcis		1309455	0					
ANR	1309632	Identifier	seac_accent		1309455	1					
ANR	1309633	UnaryOperationExpression	- 1		1309455	1					
ANR	1309634	UnaryOperator	-		1309455	0					
ANR	1309635	PrimaryExpression	1		1309455	1					
ANR	1309636	ExpressionStatement	pcis -> log2_subpixels = * plog2_subpixels	128:4:4171:4210	1309455	22	True				
ANR	1309637	AssignmentExpression	pcis -> log2_subpixels = * plog2_subpixels		1309455	0		=			
ANR	1309638	PtrMemberAccess	pcis -> log2_subpixels		1309455	0					
ANR	1309639	Identifier	pcis		1309455	0					
ANR	1309640	Identifier	log2_subpixels		1309455	1					
ANR	1309641	UnaryOperationExpression	* plog2_subpixels		1309455	1					
ANR	1309642	UnaryOperator	*		1309455	0					
ANR	1309643	Identifier	plog2_subpixels		1309455	1					
ANR	1309644	ExpressionStatement	pcis -> origin_offset . x = pcis -> origin_offset . y = 0	129:4:4216:4265	1309455	23	True				
ANR	1309645	AssignmentExpression	pcis -> origin_offset . x = pcis -> origin_offset . y = 0		1309455	0		=			
ANR	1309646	MemberAccess	pcis -> origin_offset . x		1309455	0					
ANR	1309647	PtrMemberAccess	pcis -> origin_offset		1309455	0					
ANR	1309648	Identifier	pcis		1309455	0					
ANR	1309649	Identifier	origin_offset		1309455	1					
ANR	1309650	Identifier	x		1309455	1					
ANR	1309651	AssignmentExpression	pcis -> origin_offset . y = 0		1309455	1		=			
ANR	1309652	MemberAccess	pcis -> origin_offset . y		1309455	0					
ANR	1309653	PtrMemberAccess	pcis -> origin_offset		1309455	0					
ANR	1309654	Identifier	pcis		1309455	0					
ANR	1309655	Identifier	origin_offset		1309455	1					
ANR	1309656	Identifier	y		1309455	1					
ANR	1309657	PrimaryExpression	0		1309455	1					
ANR	1309658	ExpressionStatement	"set_pixel_scale ( & pcis -> scale . x , plog2_scale -> x )"	132:4:4306:4353	1309455	24	True				
ANR	1309659	CallExpression	"set_pixel_scale ( & pcis -> scale . x , plog2_scale -> x )"		1309455	0					
ANR	1309660	Callee	set_pixel_scale		1309455	0					
ANR	1309661	Identifier	set_pixel_scale		1309455	0					
ANR	1309662	ArgumentList	& pcis -> scale . x		1309455	1					
ANR	1309663	Argument	& pcis -> scale . x		1309455	0					
ANR	1309664	UnaryOperationExpression	& pcis -> scale . x		1309455	0					
ANR	1309665	UnaryOperator	&		1309455	0					
ANR	1309666	MemberAccess	pcis -> scale . x		1309455	1					
ANR	1309667	PtrMemberAccess	pcis -> scale		1309455	0					
ANR	1309668	Identifier	pcis		1309455	0					
ANR	1309669	Identifier	scale		1309455	1					
ANR	1309670	Identifier	x		1309455	1					
ANR	1309671	Argument	plog2_scale -> x		1309455	1					
ANR	1309672	PtrMemberAccess	plog2_scale -> x		1309455	0					
ANR	1309673	Identifier	plog2_scale		1309455	0					
ANR	1309674	Identifier	x		1309455	1					
ANR	1309675	ExpressionStatement	"set_pixel_scale ( & pcis -> scale . y , plog2_scale -> y )"	133:4:4359:4406	1309455	25	True				
ANR	1309676	CallExpression	"set_pixel_scale ( & pcis -> scale . y , plog2_scale -> y )"		1309455	0					
ANR	1309677	Callee	set_pixel_scale		1309455	0					
ANR	1309678	Identifier	set_pixel_scale		1309455	0					
ANR	1309679	ArgumentList	& pcis -> scale . y		1309455	1					
ANR	1309680	Argument	& pcis -> scale . y		1309455	0					
ANR	1309681	UnaryOperationExpression	& pcis -> scale . y		1309455	0					
ANR	1309682	UnaryOperator	&		1309455	0					
ANR	1309683	MemberAccess	pcis -> scale . y		1309455	1					
ANR	1309684	PtrMemberAccess	pcis -> scale		1309455	0					
ANR	1309685	Identifier	pcis		1309455	0					
ANR	1309686	Identifier	scale		1309455	1					
ANR	1309687	Identifier	y		1309455	1					
ANR	1309688	Argument	plog2_scale -> y		1309455	1					
ANR	1309689	PtrMemberAccess	plog2_scale -> y		1309455	0					
ANR	1309690	Identifier	plog2_scale		1309455	0					
ANR	1309691	Identifier	y		1309455	1					
ANR	1309692	ReturnStatement	return 0 ;	135:4:4413:4421	1309455	26	True				
ANR	1309693	PrimaryExpression	0		1309455	0					
ANR	1309694	ReturnType	int		1309455	1					
ANR	1309695	Identifier	gs_type1_interp_init		1309455	2					
ANR	1309696	ParameterList	"register gs_type1_state * pcis , gs_gstate * pgs , gx_path * ppath , const gs_log2_scale_point * pscale , const gs_log2_scale_point * psubpixels , bool no_grid_fitting , int paint_type , gs_font_type1 * pfont"		1309455	3					
ANR	1309697	Parameter	register gs_type1_state * pcis	99:21:3009:3038	1309455	0	True				
ANR	1309698	ParameterType	register gs_type1_state *		1309455	0					
ANR	1309699	Identifier	pcis		1309455	1					
ANR	1309700	Parameter	gs_gstate * pgs	99:53:3041:3055	1309455	1	True				
ANR	1309701	ParameterType	gs_gstate *		1309455	0					
ANR	1309702	Identifier	pgs		1309455	1					
ANR	1309703	Parameter	gx_path * ppath	100:4:3062:3076	1309455	2	True				
ANR	1309704	ParameterType	gx_path *		1309455	0					
ANR	1309705	Identifier	ppath		1309455	1					
ANR	1309706	Parameter	const gs_log2_scale_point * pscale	100:21:3079:3112	1309455	3	True				
ANR	1309707	ParameterType	const gs_log2_scale_point *		1309455	0					
ANR	1309708	Identifier	pscale		1309455	1					
ANR	1309709	Parameter	const gs_log2_scale_point * psubpixels	101:4:3119:3156	1309455	4	True				
ANR	1309710	ParameterType	const gs_log2_scale_point *		1309455	0					
ANR	1309711	Identifier	psubpixels		1309455	1					
ANR	1309712	Parameter	bool no_grid_fitting	101:44:3159:3178	1309455	5	True				
ANR	1309713	ParameterType	bool		1309455	0					
ANR	1309714	Identifier	no_grid_fitting		1309455	1					
ANR	1309715	Parameter	int paint_type	102:21:3202:3215	1309455	6	True				
ANR	1309716	ParameterType	int		1309455	0					
ANR	1309717	Identifier	paint_type		1309455	1					
ANR	1309718	Parameter	gs_font_type1 * pfont	102:37:3218:3238	1309455	7	True				
ANR	1309719	ParameterType	gs_font_type1 *		1309455	0					
ANR	1309720	Identifier	pfont		1309455	1					
ANR	1309721	CFGEntryNode	ENTRY		1309455		True				
ANR	1309722	CFGExitNode	EXIT		1309455		True				
ANR	1309723	Symbol	pcis -> no_grid_fitting		1309455						
ANR	1309724	Symbol	* pgs		1309455						
ANR	1309725	Symbol	& pcis -> ipstack [ 0 ] . cs_data		1309455						
ANR	1309726	Symbol	no_grid_fitting		1309455						
ANR	1309727	Symbol	plog2_scale -> x		1309455						
ANR	1309728	Symbol	plog2_scale -> y		1309455						
ANR	1309729	Symbol	* plog2_subpixels		1309455						
ANR	1309730	Symbol	* * pcis		1309455						
ANR	1309731	Symbol	pcis -> path		1309455						
ANR	1309732	Symbol	& pcis -> scale		1309455						
ANR	1309733	Symbol	pcis -> sb_set		1309455						
ANR	1309734	Symbol	NULL		1309455						
ANR	1309735	Symbol	pcis -> init_done		1309455						
ANR	1309736	Symbol	pcis -> pgs		1309455						
ANR	1309737	Symbol	pcis -> scale		1309455						
ANR	1309738	Symbol	* plog2_scale		1309455						
ANR	1309739	Symbol	& no_scale		1309455						
ANR	1309740	Symbol	pcis -> callback_data		1309455						
ANR	1309741	Symbol	* pcis		1309455						
ANR	1309742	Symbol	pcis -> log2_subpixels		1309455						
ANR	1309743	Symbol	pcis -> seac_flag		1309455						
ANR	1309744	Symbol	pcis -> ips_count		1309455						
ANR	1309745	Symbol	paint_type		1309455						
ANR	1309746	Symbol	pcis -> ipstack [ 0 ] . ip		1309455						
ANR	1309747	Symbol	pcis -> paint_type		1309455						
ANR	1309748	Symbol	* pcis -> ipstack		1309455						
ANR	1309749	Symbol	ppath		1309455						
ANR	1309750	Symbol	plog2_scale		1309455						
ANR	1309751	Symbol	FORCE_HINTS_TO_BIG_PIXELS		1309455						
ANR	1309752	Symbol	pcis -> os_count		1309455						
ANR	1309753	Symbol	pcis -> pfont		1309455						
ANR	1309754	Symbol	pgs		1309455						
ANR	1309755	Symbol	pgs -> memory		1309455						
ANR	1309756	Symbol	plog2_subpixels		1309455						
ANR	1309757	Symbol	pcis -> num_hints		1309455						
ANR	1309758	Symbol	pcis -> width_set		1309455						
ANR	1309759	Symbol	pfont		1309455						
ANR	1309760	Symbol	pcis -> ipstack		1309455						
ANR	1309761	Symbol	false		1309455						
ANR	1309762	Symbol	pcis -> origin_offset		1309455						
ANR	1309763	Symbol	pcis		1309455						
ANR	1309764	Symbol	pcis -> origin_offset . y		1309455						
ANR	1309765	Symbol	pcis -> origin_offset . x		1309455						
ANR	1309766	Symbol	& pcis -> scale . y		1309455						
ANR	1309767	Symbol	& pcis -> scale . x		1309455						
ANR	1309768	Symbol	pcis -> ignore_pops		1309455						
ANR	1309769	Symbol	psubpixels		1309455						
ANR	1309770	Symbol	no_scale		1309455						
ANR	1309771	Symbol	pcis -> seac_accent		1309455						
ANR	1309772	Symbol	pscale		1309455						
ANR	1309773	Function	gs_type1_set_callback_data	139:0:4464:4582							
ANR	1309774	FunctionDef	"gs_type1_set_callback_data (gs_type1_state * pcis , void * callback_data)"		1309773	0					
ANR	1309775	CompoundStatement		141:0:4539:4582	1309773	0					
ANR	1309776	ExpressionStatement	pcis -> callback_data = callback_data	142:4:4545:4580	1309773	0	True				
ANR	1309777	AssignmentExpression	pcis -> callback_data = callback_data		1309773	0		=			
ANR	1309778	PtrMemberAccess	pcis -> callback_data		1309773	0					
ANR	1309779	Identifier	pcis		1309773	0					
ANR	1309780	Identifier	callback_data		1309773	1					
ANR	1309781	Identifier	callback_data		1309773	1					
ANR	1309782	ReturnType	void		1309773	1					
ANR	1309783	Identifier	gs_type1_set_callback_data		1309773	2					
ANR	1309784	ParameterList	"gs_type1_state * pcis , void * callback_data"		1309773	3					
ANR	1309785	Parameter	gs_type1_state * pcis	140:27:4496:4515	1309773	0	True				
ANR	1309786	ParameterType	gs_type1_state *		1309773	0					
ANR	1309787	Identifier	pcis		1309773	1					
ANR	1309788	Parameter	void * callback_data	140:49:4518:4536	1309773	1	True				
ANR	1309789	ParameterType	void *		1309773	0					
ANR	1309790	Identifier	callback_data		1309773	1					
ANR	1309791	CFGEntryNode	ENTRY		1309773		True				
ANR	1309792	CFGExitNode	EXIT		1309773		True				
ANR	1309793	Symbol	pcis -> callback_data		1309773						
ANR	1309794	Symbol	* pcis		1309773						
ANR	1309795	Symbol	pcis		1309773						
ANR	1309796	Symbol	callback_data		1309773						
ANR	1309797	Function	gs_type1_set_lsb	146:0:4634:4812							
ANR	1309798	FunctionDef	"gs_type1_set_lsb (gs_type1_state * pcis , const gs_point * psbpt)"		1309797	0					
ANR	1309799	CompoundStatement		148:0:4703:4812	1309797	0					
ANR	1309800	ExpressionStatement	pcis -> lsb . x = float2fixed ( psbpt -> x )	149:4:4709:4744	1309797	0	True				
ANR	1309801	AssignmentExpression	pcis -> lsb . x = float2fixed ( psbpt -> x )		1309797	0		=			
ANR	1309802	MemberAccess	pcis -> lsb . x		1309797	0					
ANR	1309803	PtrMemberAccess	pcis -> lsb		1309797	0					
ANR	1309804	Identifier	pcis		1309797	0					
ANR	1309805	Identifier	lsb		1309797	1					
ANR	1309806	Identifier	x		1309797	1					
ANR	1309807	CallExpression	float2fixed ( psbpt -> x )		1309797	1					
ANR	1309808	Callee	float2fixed		1309797	0					
ANR	1309809	Identifier	float2fixed		1309797	0					
ANR	1309810	ArgumentList	psbpt -> x		1309797	1					
ANR	1309811	Argument	psbpt -> x		1309797	0					
ANR	1309812	PtrMemberAccess	psbpt -> x		1309797	0					
ANR	1309813	Identifier	psbpt		1309797	0					
ANR	1309814	Identifier	x		1309797	1					
ANR	1309815	ExpressionStatement	pcis -> lsb . y = float2fixed ( psbpt -> y )	150:4:4750:4785	1309797	1	True				
ANR	1309816	AssignmentExpression	pcis -> lsb . y = float2fixed ( psbpt -> y )		1309797	0		=			
ANR	1309817	MemberAccess	pcis -> lsb . y		1309797	0					
ANR	1309818	PtrMemberAccess	pcis -> lsb		1309797	0					
ANR	1309819	Identifier	pcis		1309797	0					
ANR	1309820	Identifier	lsb		1309797	1					
ANR	1309821	Identifier	y		1309797	1					
ANR	1309822	CallExpression	float2fixed ( psbpt -> y )		1309797	1					
ANR	1309823	Callee	float2fixed		1309797	0					
ANR	1309824	Identifier	float2fixed		1309797	0					
ANR	1309825	ArgumentList	psbpt -> y		1309797	1					
ANR	1309826	Argument	psbpt -> y		1309797	0					
ANR	1309827	PtrMemberAccess	psbpt -> y		1309797	0					
ANR	1309828	Identifier	psbpt		1309797	0					
ANR	1309829	Identifier	y		1309797	1					
ANR	1309830	ExpressionStatement	pcis -> sb_set = true	151:4:4791:4810	1309797	2	True				
ANR	1309831	AssignmentExpression	pcis -> sb_set = true		1309797	0		=			
ANR	1309832	PtrMemberAccess	pcis -> sb_set		1309797	0					
ANR	1309833	Identifier	pcis		1309797	0					
ANR	1309834	Identifier	sb_set		1309797	1					
ANR	1309835	Identifier	true		1309797	1					
ANR	1309836	ReturnType	void		1309797	1					
ANR	1309837	Identifier	gs_type1_set_lsb		1309797	2					
ANR	1309838	ParameterList	"gs_type1_state * pcis , const gs_point * psbpt"		1309797	3					
ANR	1309839	Parameter	gs_type1_state * pcis	147:17:4656:4676	1309797	0	True				
ANR	1309840	ParameterType	gs_type1_state *		1309797	0					
ANR	1309841	Identifier	pcis		1309797	1					
ANR	1309842	Parameter	const gs_point * psbpt	147:40:4679:4700	1309797	1	True				
ANR	1309843	ParameterType	const gs_point *		1309797	0					
ANR	1309844	Identifier	psbpt		1309797	1					
ANR	1309845	CFGEntryNode	ENTRY		1309797		True				
ANR	1309846	CFGExitNode	EXIT		1309797		True				
ANR	1309847	Symbol	psbpt -> x		1309797						
ANR	1309848	Symbol	* pcis		1309797						
ANR	1309849	Symbol	psbpt -> y		1309797						
ANR	1309850	Symbol	psbpt		1309797						
ANR	1309851	Symbol	float2fixed		1309797						
ANR	1309852	Symbol	pcis -> lsb		1309797						
ANR	1309853	Symbol	true		1309797						
ANR	1309854	Symbol	pcis		1309797						
ANR	1309855	Symbol	pcis -> sb_set		1309797						
ANR	1309856	Symbol	* psbpt		1309797						
ANR	1309857	Symbol	pcis -> lsb . x		1309797						
ANR	1309858	Symbol	pcis -> lsb . y		1309797						
ANR	1309859	Function	gs_type1_set_width	153:0:4814:4998							
ANR	1309860	FunctionDef	"gs_type1_set_width (gs_type1_state * pcis , const gs_point * pwpt)"		1309859	0					
ANR	1309861	CompoundStatement		155:0:4884:4998	1309859	0					
ANR	1309862	ExpressionStatement	pcis -> width . x = float2fixed ( pwpt -> x )	156:4:4890:4926	1309859	0	True				
ANR	1309863	AssignmentExpression	pcis -> width . x = float2fixed ( pwpt -> x )		1309859	0		=			
ANR	1309864	MemberAccess	pcis -> width . x		1309859	0					
ANR	1309865	PtrMemberAccess	pcis -> width		1309859	0					
ANR	1309866	Identifier	pcis		1309859	0					
ANR	1309867	Identifier	width		1309859	1					
ANR	1309868	Identifier	x		1309859	1					
ANR	1309869	CallExpression	float2fixed ( pwpt -> x )		1309859	1					
ANR	1309870	Callee	float2fixed		1309859	0					
ANR	1309871	Identifier	float2fixed		1309859	0					
ANR	1309872	ArgumentList	pwpt -> x		1309859	1					
ANR	1309873	Argument	pwpt -> x		1309859	0					
ANR	1309874	PtrMemberAccess	pwpt -> x		1309859	0					
ANR	1309875	Identifier	pwpt		1309859	0					
ANR	1309876	Identifier	x		1309859	1					
ANR	1309877	ExpressionStatement	pcis -> width . y = float2fixed ( pwpt -> y )	157:4:4932:4968	1309859	1	True				
ANR	1309878	AssignmentExpression	pcis -> width . y = float2fixed ( pwpt -> y )		1309859	0		=			
ANR	1309879	MemberAccess	pcis -> width . y		1309859	0					
ANR	1309880	PtrMemberAccess	pcis -> width		1309859	0					
ANR	1309881	Identifier	pcis		1309859	0					
ANR	1309882	Identifier	width		1309859	1					
ANR	1309883	Identifier	y		1309859	1					
ANR	1309884	CallExpression	float2fixed ( pwpt -> y )		1309859	1					
ANR	1309885	Callee	float2fixed		1309859	0					
ANR	1309886	Identifier	float2fixed		1309859	0					
ANR	1309887	ArgumentList	pwpt -> y		1309859	1					
ANR	1309888	Argument	pwpt -> y		1309859	0					
ANR	1309889	PtrMemberAccess	pwpt -> y		1309859	0					
ANR	1309890	Identifier	pwpt		1309859	0					
ANR	1309891	Identifier	y		1309859	1					
ANR	1309892	ExpressionStatement	pcis -> width_set = true	158:4:4974:4996	1309859	2	True				
ANR	1309893	AssignmentExpression	pcis -> width_set = true		1309859	0		=			
ANR	1309894	PtrMemberAccess	pcis -> width_set		1309859	0					
ANR	1309895	Identifier	pcis		1309859	0					
ANR	1309896	Identifier	width_set		1309859	1					
ANR	1309897	Identifier	true		1309859	1					
ANR	1309898	ReturnType	void		1309859	1					
ANR	1309899	Identifier	gs_type1_set_width		1309859	2					
ANR	1309900	ParameterList	"gs_type1_state * pcis , const gs_point * pwpt"		1309859	3					
ANR	1309901	Parameter	gs_type1_state * pcis	154:19:4838:4858	1309859	0	True				
ANR	1309902	ParameterType	gs_type1_state *		1309859	0					
ANR	1309903	Identifier	pcis		1309859	1					
ANR	1309904	Parameter	const gs_point * pwpt	154:42:4861:4881	1309859	1	True				
ANR	1309905	ParameterType	const gs_point *		1309859	0					
ANR	1309906	Identifier	pwpt		1309859	1					
ANR	1309907	CFGEntryNode	ENTRY		1309859		True				
ANR	1309908	CFGExitNode	EXIT		1309859		True				
ANR	1309909	Symbol	* pcis		1309859						
ANR	1309910	Symbol	* pwpt		1309859						
ANR	1309911	Symbol	float2fixed		1309859						
ANR	1309912	Symbol	pcis -> width_set		1309859						
ANR	1309913	Symbol	pcis -> width		1309859						
ANR	1309914	Symbol	true		1309859						
ANR	1309915	Symbol	pcis		1309859						
ANR	1309916	Symbol	pcis -> width . y		1309859						
ANR	1309917	Symbol	pcis -> width . x		1309859						
ANR	1309918	Symbol	pwpt -> x		1309859						
ANR	1309919	Symbol	pwpt		1309859						
ANR	1309920	Symbol	pwpt -> y		1309859						
ANR	1309921	Function	gs_type1_finish_init	163:0:5152:5948							
ANR	1309922	FunctionDef	gs_type1_finish_init (gs_type1_state * pcis)		1309921	0					
ANR	1309923	CompoundStatement		165:0:5201:5948	1309921	0					
ANR	1309924	IdentifierDeclStatement	gs_gstate * pgs = pcis -> pgs ;	166:4:5207:5233	1309921	0	True				
ANR	1309925	IdentifierDecl	* pgs = pcis -> pgs		1309921	0					
ANR	1309926	IdentifierDeclType	gs_gstate *		1309921	0					
ANR	1309927	Identifier	pgs		1309921	1					
ANR	1309928	AssignmentExpression	* pgs = pcis -> pgs		1309921	2		=			
ANR	1309929	Identifier	pgs		1309921	0					
ANR	1309930	PtrMemberAccess	pcis -> pgs		1309921	1					
ANR	1309931	Identifier	pcis		1309921	0					
ANR	1309932	Identifier	pgs		1309921	1					
ANR	1309933	IdentifierDeclStatement	const int max_coeff_bits = 11 ;	167:4:5239:5268	1309921	1	True				
ANR	1309934	IdentifierDecl	max_coeff_bits = 11		1309921	0					
ANR	1309935	IdentifierDeclType	const int		1309921	0					
ANR	1309936	Identifier	max_coeff_bits		1309921	1					
ANR	1309937	AssignmentExpression	max_coeff_bits = 11		1309921	2		=			
ANR	1309938	Identifier	max_coeff_bits		1309921	0					
ANR	1309939	PrimaryExpression	11		1309921	1					
ANR	1309940	ExpressionStatement	"gx_matrix_to_fixed_coeff ( & ctm_only ( pgs ) , & pcis -> fc , max_coeff_bits )"	170:4:5369:5436	1309921	2	True				
ANR	1309941	CallExpression	"gx_matrix_to_fixed_coeff ( & ctm_only ( pgs ) , & pcis -> fc , max_coeff_bits )"		1309921	0					
ANR	1309942	Callee	gx_matrix_to_fixed_coeff		1309921	0					
ANR	1309943	Identifier	gx_matrix_to_fixed_coeff		1309921	0					
ANR	1309944	ArgumentList	& ctm_only ( pgs )		1309921	1					
ANR	1309945	Argument	& ctm_only ( pgs )		1309921	0					
ANR	1309946	UnaryOperationExpression	& ctm_only ( pgs )		1309921	0					
ANR	1309947	UnaryOperator	&		1309921	0					
ANR	1309948	CallExpression	ctm_only ( pgs )		1309921	1					
ANR	1309949	Callee	ctm_only		1309921	0					
ANR	1309950	Identifier	ctm_only		1309921	0					
ANR	1309951	ArgumentList	pgs		1309921	1					
ANR	1309952	Argument	pgs		1309921	0					
ANR	1309953	Identifier	pgs		1309921	0					
ANR	1309954	Argument	& pcis -> fc		1309921	1					
ANR	1309955	UnaryOperationExpression	& pcis -> fc		1309921	0					
ANR	1309956	UnaryOperator	&		1309921	0					
ANR	1309957	PtrMemberAccess	pcis -> fc		1309921	1					
ANR	1309958	Identifier	pcis		1309921	0					
ANR	1309959	Identifier	fc		1309921	1					
ANR	1309960	Argument	max_coeff_bits		1309921	2					
ANR	1309961	Identifier	max_coeff_bits		1309921	0					
ANR	1309962	ExpressionStatement	pcis -> origin . x = pcis -> path -> position . x	173:4:5502:5541	1309921	3	True				
ANR	1309963	AssignmentExpression	pcis -> origin . x = pcis -> path -> position . x		1309921	0		=			
ANR	1309964	MemberAccess	pcis -> origin . x		1309921	0					
ANR	1309965	PtrMemberAccess	pcis -> origin		1309921	0					
ANR	1309966	Identifier	pcis		1309921	0					
ANR	1309967	Identifier	origin		1309921	1					
ANR	1309968	Identifier	x		1309921	1					
ANR	1309969	MemberAccess	pcis -> path -> position . x		1309921	1					
ANR	1309970	PtrMemberAccess	pcis -> path -> position		1309921	0					
ANR	1309971	PtrMemberAccess	pcis -> path		1309921	0					
ANR	1309972	Identifier	pcis		1309921	0					
ANR	1309973	Identifier	path		1309921	1					
ANR	1309974	Identifier	position		1309921	1					
ANR	1309975	Identifier	x		1309921	1					
ANR	1309976	ExpressionStatement	pcis -> origin . y = pcis -> path -> position . y	174:4:5547:5586	1309921	4	True				
ANR	1309977	AssignmentExpression	pcis -> origin . y = pcis -> path -> position . y		1309921	0		=			
ANR	1309978	MemberAccess	pcis -> origin . y		1309921	0					
ANR	1309979	PtrMemberAccess	pcis -> origin		1309921	0					
ANR	1309980	Identifier	pcis		1309921	0					
ANR	1309981	Identifier	origin		1309921	1					
ANR	1309982	Identifier	y		1309921	1					
ANR	1309983	MemberAccess	pcis -> path -> position . y		1309921	1					
ANR	1309984	PtrMemberAccess	pcis -> path -> position		1309921	0					
ANR	1309985	PtrMemberAccess	pcis -> path		1309921	0					
ANR	1309986	Identifier	pcis		1309921	0					
ANR	1309987	Identifier	path		1309921	1					
ANR	1309988	Identifier	position		1309921	1					
ANR	1309989	Identifier	y		1309921	1					
ANR	1309990	ExpressionStatement	pcis -> asb_diff = pcis -> adxy . x = pcis -> adxy . y = 0	177:4:5636:5684	1309921	5	True				
ANR	1309991	AssignmentExpression	pcis -> asb_diff = pcis -> adxy . x = pcis -> adxy . y = 0		1309921	0		=			
ANR	1309992	PtrMemberAccess	pcis -> asb_diff		1309921	0					
ANR	1309993	Identifier	pcis		1309921	0					
ANR	1309994	Identifier	asb_diff		1309921	1					
ANR	1309995	AssignmentExpression	pcis -> adxy . x = pcis -> adxy . y = 0		1309921	1		=			
ANR	1309996	MemberAccess	pcis -> adxy . x		1309921	0					
ANR	1309997	PtrMemberAccess	pcis -> adxy		1309921	0					
ANR	1309998	Identifier	pcis		1309921	0					
ANR	1309999	Identifier	adxy		1309921	1					
ANR	1310000	Identifier	x		1309921	1					
ANR	1310001	AssignmentExpression	pcis -> adxy . y = 0		1309921	1		=			
ANR	1310002	MemberAccess	pcis -> adxy . y		1309921	0					
ANR	1310003	PtrMemberAccess	pcis -> adxy		1309921	0					
ANR	1310004	Identifier	pcis		1309921	0					
ANR	1310005	Identifier	adxy		1309921	1					
ANR	1310006	Identifier	y		1309921	1					
ANR	1310007	PrimaryExpression	0		1309921	1					
ANR	1310008	ExpressionStatement	pcis -> base_lsb = 0	178:4:5690:5708	1309921	6	True				
ANR	1310009	AssignmentExpression	pcis -> base_lsb = 0		1309921	0		=			
ANR	1310010	PtrMemberAccess	pcis -> base_lsb		1309921	0					
ANR	1310011	Identifier	pcis		1309921	0					
ANR	1310012	Identifier	base_lsb		1309921	1					
ANR	1310013	PrimaryExpression	0		1309921	1					
ANR	1310014	ExpressionStatement	pcis -> flex_count = flex_max	179:4:5714:5741	1309921	7	True				
ANR	1310015	AssignmentExpression	pcis -> flex_count = flex_max		1309921	0		=			
ANR	1310016	PtrMemberAccess	pcis -> flex_count		1309921	0					
ANR	1310017	Identifier	pcis		1309921	0					
ANR	1310018	Identifier	flex_count		1309921	1					
ANR	1310019	Identifier	flex_max		1309921	1					
ANR	1310020	ExpressionStatement	pcis -> vs_offset . x = pcis -> vs_offset . y = 0	180:4:5765:5806	1309921	8	True				
ANR	1310021	AssignmentExpression	pcis -> vs_offset . x = pcis -> vs_offset . y = 0		1309921	0		=			
ANR	1310022	MemberAccess	pcis -> vs_offset . x		1309921	0					
ANR	1310023	PtrMemberAccess	pcis -> vs_offset		1309921	0					
ANR	1310024	Identifier	pcis		1309921	0					
ANR	1310025	Identifier	vs_offset		1309921	1					
ANR	1310026	Identifier	x		1309921	1					
ANR	1310027	AssignmentExpression	pcis -> vs_offset . y = 0		1309921	1		=			
ANR	1310028	MemberAccess	pcis -> vs_offset . y		1309921	0					
ANR	1310029	PtrMemberAccess	pcis -> vs_offset		1309921	0					
ANR	1310030	Identifier	pcis		1309921	0					
ANR	1310031	Identifier	vs_offset		1309921	1					
ANR	1310032	Identifier	y		1309921	1					
ANR	1310033	PrimaryExpression	0		1309921	1					
ANR	1310034	ExpressionStatement	"pcis -> flatness = gs_char_flatness ( pgs , 0.001 )"	183:4:5875:5920	1309921	9	True				
ANR	1310035	AssignmentExpression	"pcis -> flatness = gs_char_flatness ( pgs , 0.001 )"		1309921	0		=			
ANR	1310036	PtrMemberAccess	pcis -> flatness		1309921	0					
ANR	1310037	Identifier	pcis		1309921	0					
ANR	1310038	Identifier	flatness		1309921	1					
ANR	1310039	CallExpression	"gs_char_flatness ( pgs , 0.001 )"		1309921	1					
ANR	1310040	Callee	gs_char_flatness		1309921	0					
ANR	1310041	Identifier	gs_char_flatness		1309921	0					
ANR	1310042	ArgumentList	pgs		1309921	1					
ANR	1310043	Argument	pgs		1309921	0					
ANR	1310044	Identifier	pgs		1309921	0					
ANR	1310045	Argument	0.001		1309921	1					
ANR	1310046	PrimaryExpression	0.001		1309921	0					
ANR	1310047	ExpressionStatement	pcis -> init_done = 1	185:4:5927:5946	1309921	10	True				
ANR	1310048	AssignmentExpression	pcis -> init_done = 1		1309921	0		=			
ANR	1310049	PtrMemberAccess	pcis -> init_done		1309921	0					
ANR	1310050	Identifier	pcis		1309921	0					
ANR	1310051	Identifier	init_done		1309921	1					
ANR	1310052	PrimaryExpression	1		1309921	1					
ANR	1310053	ReturnType	void		1309921	1					
ANR	1310054	Identifier	gs_type1_finish_init		1309921	2					
ANR	1310055	ParameterList	gs_type1_state * pcis		1309921	3					
ANR	1310056	Parameter	gs_type1_state * pcis	164:21:5178:5198	1309921	0	True				
ANR	1310057	ParameterType	gs_type1_state *		1309921	0					
ANR	1310058	Identifier	pcis		1309921	1					
ANR	1310059	CFGEntryNode	ENTRY		1309921		True				
ANR	1310060	CFGExitNode	EXIT		1309921		True				
ANR	1310061	Symbol	& pcis -> fc		1309921						
ANR	1310062	Symbol	pcis -> origin		1309921						
ANR	1310063	Symbol	pcis -> origin . y		1309921						
ANR	1310064	Symbol	pcis -> origin . x		1309921						
ANR	1310065	Symbol	* pcis -> path		1309921						
ANR	1310066	Symbol	pcis -> adxy		1309921						
ANR	1310067	Symbol	* * pcis		1309921						
ANR	1310068	Symbol	max_coeff_bits		1309921						
ANR	1310069	Symbol	pcis -> path		1309921						
ANR	1310070	Symbol	pgs		1309921						
ANR	1310071	Symbol	gs_char_flatness		1309921						
ANR	1310072	Symbol	pcis -> asb_diff		1309921						
ANR	1310073	Symbol	pcis -> path -> position		1309921						
ANR	1310074	Symbol	& ctm_only		1309921						
ANR	1310075	Symbol	flex_max		1309921						
ANR	1310076	Symbol	pcis -> init_done		1309921						
ANR	1310077	Symbol	pcis		1309921						
ANR	1310078	Symbol	pcis -> pgs		1309921						
ANR	1310079	Symbol	pcis -> vs_offset		1309921						
ANR	1310080	Symbol	pcis -> adxy . y		1309921						
ANR	1310081	Symbol	pcis -> vs_offset . x		1309921						
ANR	1310082	Symbol	pcis -> path -> position . y		1309921						
ANR	1310083	Symbol	pcis -> adxy . x		1309921						
ANR	1310084	Symbol	pcis -> flatness		1309921						
ANR	1310085	Symbol	* pcis		1309921						
ANR	1310086	Symbol	pcis -> path -> position . x		1309921						
ANR	1310087	Symbol	pcis -> vs_offset . y		1309921						
ANR	1310088	Symbol	pcis -> flex_count		1309921						
ANR	1310089	Symbol	pcis -> base_lsb		1309921						
ANR	1310090	Function	gs_type1_sbw	188:1:5952:6543							
ANR	1310091	FunctionDef	"gs_type1_sbw (gs_type1_state * pcis , fixed lsbx , fixed lsby , fixed wx , fixed wy)"		1310090	0					
ANR	1310092	CompoundStatement		193:0:6096:6543	1310090	0					
ANR	1310093	IfStatement	if ( ! pcis -> sb_set )		1310090	0					
ANR	1310094	Condition	! pcis -> sb_set	194:8:6106:6118	1310090	0	True				
ANR	1310095	UnaryOperationExpression	! pcis -> sb_set		1310090	0					
ANR	1310096	UnaryOperator	!		1310090	0					
ANR	1310097	PtrMemberAccess	pcis -> sb_set		1310090	1					
ANR	1310098	Identifier	pcis		1310090	0					
ANR	1310099	Identifier	sb_set		1310090	1					
ANR	1310100	ExpressionStatement	"pcis -> lsb . x = lsbx , pcis -> lsb . y = lsby , pcis -> sb_set = true"	195:8:6129:6200	1310090	1	True				
ANR	1310101	Expression	"pcis -> lsb . x = lsbx , pcis -> lsb . y = lsby , pcis -> sb_set = true"		1310090	0					
ANR	1310102	AssignmentExpression	pcis -> lsb . x = lsbx		1310090	0		=			
ANR	1310103	MemberAccess	pcis -> lsb . x		1310090	0					
ANR	1310104	PtrMemberAccess	pcis -> lsb		1310090	0					
ANR	1310105	Identifier	pcis		1310090	0					
ANR	1310106	Identifier	lsb		1310090	1					
ANR	1310107	Identifier	x		1310090	1					
ANR	1310108	Identifier	lsbx		1310090	1					
ANR	1310109	Expression	"pcis -> lsb . y = lsby , pcis -> sb_set = true"		1310090	1					
ANR	1310110	AssignmentExpression	pcis -> lsb . y = lsby		1310090	0		=			
ANR	1310111	MemberAccess	pcis -> lsb . y		1310090	0					
ANR	1310112	PtrMemberAccess	pcis -> lsb		1310090	0					
ANR	1310113	Identifier	pcis		1310090	0					
ANR	1310114	Identifier	lsb		1310090	1					
ANR	1310115	Identifier	y		1310090	1					
ANR	1310116	Identifier	lsby		1310090	1					
ANR	1310117	AssignmentExpression	pcis -> sb_set = true		1310090	1		=			
ANR	1310118	PtrMemberAccess	pcis -> sb_set		1310090	0					
ANR	1310119	Identifier	pcis		1310090	0					
ANR	1310120	Identifier	sb_set		1310090	1					
ANR	1310121	Identifier	true		1310090	1					
ANR	1310122	IfStatement	if ( ! pcis -> width_set )		1310090	1					
ANR	1310123	Condition	! pcis -> width_set	197:8:6242:6257	1310090	0	True				
ANR	1310124	UnaryOperationExpression	! pcis -> width_set		1310090	0					
ANR	1310125	UnaryOperator	!		1310090	0					
ANR	1310126	PtrMemberAccess	pcis -> width_set		1310090	1					
ANR	1310127	Identifier	pcis		1310090	0					
ANR	1310128	Identifier	width_set		1310090	1					
ANR	1310129	ExpressionStatement	"pcis -> width . x = wx , pcis -> width . y = wy , pcis -> width_set = true"	198:8:6268:6342	1310090	1	True				
ANR	1310130	Expression	"pcis -> width . x = wx , pcis -> width . y = wy , pcis -> width_set = true"		1310090	0					
ANR	1310131	AssignmentExpression	pcis -> width . x = wx		1310090	0		=			
ANR	1310132	MemberAccess	pcis -> width . x		1310090	0					
ANR	1310133	PtrMemberAccess	pcis -> width		1310090	0					
ANR	1310134	Identifier	pcis		1310090	0					
ANR	1310135	Identifier	width		1310090	1					
ANR	1310136	Identifier	x		1310090	1					
ANR	1310137	Identifier	wx		1310090	1					
ANR	1310138	Expression	"pcis -> width . y = wy , pcis -> width_set = true"		1310090	1					
ANR	1310139	AssignmentExpression	pcis -> width . y = wy		1310090	0		=			
ANR	1310140	MemberAccess	pcis -> width . y		1310090	0					
ANR	1310141	PtrMemberAccess	pcis -> width		1310090	0					
ANR	1310142	Identifier	pcis		1310090	0					
ANR	1310143	Identifier	width		1310090	1					
ANR	1310144	Identifier	y		1310090	1					
ANR	1310145	Identifier	wy		1310090	1					
ANR	1310146	AssignmentExpression	pcis -> width_set = true		1310090	1		=			
ANR	1310147	PtrMemberAccess	pcis -> width_set		1310090	0					
ANR	1310148	Identifier	pcis		1310090	0					
ANR	1310149	Identifier	width_set		1310090	1					
ANR	1310150	Identifier	true		1310090	1					
ANR	1310151	ExpressionStatement	"if_debug4 ( '1' , ""[1]sb=(%g,%g) w=(%g,%g)\\n"" , fixed2float ( pcis -> lsb . x ) , fixed2float ( pcis -> lsb . y ) , fixed2float ( pcis -> width . x ) , fixed2float ( pcis -> width . y ) )"	200:4:6348:6527	1310090	2	True				
ANR	1310152	CallExpression	"if_debug4 ( '1' , ""[1]sb=(%g,%g) w=(%g,%g)\\n"" , fixed2float ( pcis -> lsb . x ) , fixed2float ( pcis -> lsb . y ) , fixed2float ( pcis -> width . x ) , fixed2float ( pcis -> width . y ) )"		1310090	0					
ANR	1310153	Callee	if_debug4		1310090	0					
ANR	1310154	Identifier	if_debug4		1310090	0					
ANR	1310155	ArgumentList	'1'		1310090	1					
ANR	1310156	Argument	'1'		1310090	0					
ANR	1310157	PrimaryExpression	'1'		1310090	0					
ANR	1310158	Argument	"""[1]sb=(%g,%g) w=(%g,%g)\\n"""		1310090	1					
ANR	1310159	PrimaryExpression	"""[1]sb=(%g,%g) w=(%g,%g)\\n"""		1310090	0					
ANR	1310160	Argument	fixed2float ( pcis -> lsb . x )		1310090	2					
ANR	1310161	CallExpression	fixed2float ( pcis -> lsb . x )		1310090	0					
ANR	1310162	Callee	fixed2float		1310090	0					
ANR	1310163	Identifier	fixed2float		1310090	0					
ANR	1310164	ArgumentList	pcis -> lsb . x		1310090	1					
ANR	1310165	Argument	pcis -> lsb . x		1310090	0					
ANR	1310166	MemberAccess	pcis -> lsb . x		1310090	0					
ANR	1310167	PtrMemberAccess	pcis -> lsb		1310090	0					
ANR	1310168	Identifier	pcis		1310090	0					
ANR	1310169	Identifier	lsb		1310090	1					
ANR	1310170	Identifier	x		1310090	1					
ANR	1310171	Argument	fixed2float ( pcis -> lsb . y )		1310090	3					
ANR	1310172	CallExpression	fixed2float ( pcis -> lsb . y )		1310090	0					
ANR	1310173	Callee	fixed2float		1310090	0					
ANR	1310174	Identifier	fixed2float		1310090	0					
ANR	1310175	ArgumentList	pcis -> lsb . y		1310090	1					
ANR	1310176	Argument	pcis -> lsb . y		1310090	0					
ANR	1310177	MemberAccess	pcis -> lsb . y		1310090	0					
ANR	1310178	PtrMemberAccess	pcis -> lsb		1310090	0					
ANR	1310179	Identifier	pcis		1310090	0					
ANR	1310180	Identifier	lsb		1310090	1					
ANR	1310181	Identifier	y		1310090	1					
ANR	1310182	Argument	fixed2float ( pcis -> width . x )		1310090	4					
ANR	1310183	CallExpression	fixed2float ( pcis -> width . x )		1310090	0					
ANR	1310184	Callee	fixed2float		1310090	0					
ANR	1310185	Identifier	fixed2float		1310090	0					
ANR	1310186	ArgumentList	pcis -> width . x		1310090	1					
ANR	1310187	Argument	pcis -> width . x		1310090	0					
ANR	1310188	MemberAccess	pcis -> width . x		1310090	0					
ANR	1310189	PtrMemberAccess	pcis -> width		1310090	0					
ANR	1310190	Identifier	pcis		1310090	0					
ANR	1310191	Identifier	width		1310090	1					
ANR	1310192	Identifier	x		1310090	1					
ANR	1310193	Argument	fixed2float ( pcis -> width . y )		1310090	5					
ANR	1310194	CallExpression	fixed2float ( pcis -> width . y )		1310090	0					
ANR	1310195	Callee	fixed2float		1310090	0					
ANR	1310196	Identifier	fixed2float		1310090	0					
ANR	1310197	ArgumentList	pcis -> width . y		1310090	1					
ANR	1310198	Argument	pcis -> width . y		1310090	0					
ANR	1310199	MemberAccess	pcis -> width . y		1310090	0					
ANR	1310200	PtrMemberAccess	pcis -> width		1310090	0					
ANR	1310201	Identifier	pcis		1310090	0					
ANR	1310202	Identifier	width		1310090	1					
ANR	1310203	Identifier	y		1310090	1					
ANR	1310204	ReturnStatement	return 0 ;	203:4:6533:6541	1310090	3	True				
ANR	1310205	PrimaryExpression	0		1310090	0					
ANR	1310206	ReturnType	undef s int		1310090	1					
ANR	1310207	Identifier	gs_type1_sbw		1310090	2					
ANR	1310208	ParameterList	"gs_type1_state * pcis , fixed lsbx , fixed lsby , fixed wx , fixed wy"		1310090	3					
ANR	1310209	Parameter	gs_type1_state * pcis	192:13:6029:6049	1310090	0	True				
ANR	1310210	ParameterType	gs_type1_state *		1310090	0					
ANR	1310211	Identifier	pcis		1310090	1					
ANR	1310212	Parameter	fixed lsbx	192:36:6052:6061	1310090	1	True				
ANR	1310213	ParameterType	fixed		1310090	0					
ANR	1310214	Identifier	lsbx		1310090	1					
ANR	1310215	Parameter	fixed lsby	192:48:6064:6073	1310090	2	True				
ANR	1310216	ParameterType	fixed		1310090	0					
ANR	1310217	Identifier	lsby		1310090	1					
ANR	1310218	Parameter	fixed wx	192:60:6076:6083	1310090	3	True				
ANR	1310219	ParameterType	fixed		1310090	0					
ANR	1310220	Identifier	wx		1310090	1					
ANR	1310221	Parameter	fixed wy	192:70:6086:6093	1310090	4	True				
ANR	1310222	ParameterType	fixed		1310090	0					
ANR	1310223	Identifier	wy		1310090	1					
ANR	1310224	CFGEntryNode	ENTRY		1310090		True				
ANR	1310225	CFGExitNode	EXIT		1310090		True				
ANR	1310226	Symbol	wx		1310090						
ANR	1310227	Symbol	wy		1310090						
ANR	1310228	Symbol	pcis -> width_set		1310090						
ANR	1310229	Symbol	fixed2float		1310090						
ANR	1310230	Symbol	pcis		1310090						
ANR	1310231	Symbol	lsby		1310090						
ANR	1310232	Symbol	pcis -> lsb . x		1310090						
ANR	1310233	Symbol	pcis -> lsb . y		1310090						
ANR	1310234	Symbol	lsbx		1310090						
ANR	1310235	Symbol	* pcis		1310090						
ANR	1310236	Symbol	pcis -> width		1310090						
ANR	1310237	Symbol	pcis -> lsb		1310090						
ANR	1310238	Symbol	true		1310090						
ANR	1310239	Symbol	pcis -> width . y		1310090						
ANR	1310240	Symbol	pcis -> width . x		1310090						
ANR	1310241	Symbol	pcis -> sb_set		1310090						
ANR	1310242	Function	gs_type1_blend	208:0:6651:7387							
ANR	1310243	FunctionDef	"gs_type1_blend (gs_type1_state * pcis , fixed * csp , int num_results)"		1310242	0					
ANR	1310244	CompoundStatement		210:0:6721:7387	1310242	0					
ANR	1310245	IdentifierDeclStatement	gs_type1_data * pdata = & pcis -> pfont -> data ;	211:4:6727:6768	1310242	0	True				
ANR	1310246	IdentifierDecl	* pdata = & pcis -> pfont -> data		1310242	0					
ANR	1310247	IdentifierDeclType	gs_type1_data *		1310242	0					
ANR	1310248	Identifier	pdata		1310242	1					
ANR	1310249	AssignmentExpression	* pdata = & pcis -> pfont -> data		1310242	2		=			
ANR	1310250	Identifier	pdata		1310242	0					
ANR	1310251	UnaryOperationExpression	& pcis -> pfont -> data		1310242	1					
ANR	1310252	UnaryOperator	&		1310242	0					
ANR	1310253	PtrMemberAccess	pcis -> pfont -> data		1310242	1					
ANR	1310254	PtrMemberAccess	pcis -> pfont		1310242	0					
ANR	1310255	Identifier	pcis		1310242	0					
ANR	1310256	Identifier	pfont		1310242	1					
ANR	1310257	Identifier	data		1310242	1					
ANR	1310258	IdentifierDeclStatement	int num_values = fixed2int_var ( csp [ - 1 ] ) ;	212:4:6774:6813	1310242	1	True				
ANR	1310259	IdentifierDecl	num_values = fixed2int_var ( csp [ - 1 ] )		1310242	0					
ANR	1310260	IdentifierDeclType	int		1310242	0					
ANR	1310261	Identifier	num_values		1310242	1					
ANR	1310262	AssignmentExpression	num_values = fixed2int_var ( csp [ - 1 ] )		1310242	2		=			
ANR	1310263	Identifier	num_values		1310242	0					
ANR	1310264	CallExpression	fixed2int_var ( csp [ - 1 ] )		1310242	1					
ANR	1310265	Callee	fixed2int_var		1310242	0					
ANR	1310266	Identifier	fixed2int_var		1310242	0					
ANR	1310267	ArgumentList	csp [ - 1 ]		1310242	1					
ANR	1310268	Argument	csp [ - 1 ]		1310242	0					
ANR	1310269	ArrayIndexing	csp [ - 1 ]		1310242	0					
ANR	1310270	Identifier	csp		1310242	0					
ANR	1310271	UnaryOperationExpression	- 1		1310242	1					
ANR	1310272	UnaryOperator	-		1310242	0					
ANR	1310273	PrimaryExpression	1		1310242	1					
ANR	1310274	IdentifierDeclStatement	int k1 = num_values / num_results - 1 ;	213:4:6819:6856	1310242	2	True				
ANR	1310275	IdentifierDecl	k1 = num_values / num_results - 1		1310242	0					
ANR	1310276	IdentifierDeclType	int		1310242	0					
ANR	1310277	Identifier	k1		1310242	1					
ANR	1310278	AssignmentExpression	k1 = num_values / num_results - 1		1310242	2		=			
ANR	1310279	Identifier	k1		1310242	0					
ANR	1310280	AdditiveExpression	num_values / num_results - 1		1310242	1		-			
ANR	1310281	MultiplicativeExpression	num_values / num_results		1310242	0		/			
ANR	1310282	Identifier	num_values		1310242	0					
ANR	1310283	Identifier	num_results		1310242	1					
ANR	1310284	PrimaryExpression	1		1310242	1					
ANR	1310285	IdentifierDeclStatement	"int i , j ;"	214:4:6862:6870	1310242	3	True				
ANR	1310286	IdentifierDecl	i		1310242	0					
ANR	1310287	IdentifierDeclType	int		1310242	0					
ANR	1310288	Identifier	i		1310242	1					
ANR	1310289	IdentifierDecl	j		1310242	1					
ANR	1310290	IdentifierDeclType	int		1310242	0					
ANR	1310291	Identifier	j		1310242	1					
ANR	1310292	IdentifierDeclStatement	fixed * base ;	215:4:6876:6887	1310242	4	True				
ANR	1310293	IdentifierDecl	* base		1310242	0					
ANR	1310294	IdentifierDeclType	fixed *		1310242	0					
ANR	1310295	Identifier	base		1310242	1					
ANR	1310296	IdentifierDeclStatement	fixed * deltas ;	216:4:6893:6906	1310242	5	True				
ANR	1310297	IdentifierDecl	* deltas		1310242	0					
ANR	1310298	IdentifierDeclType	fixed *		1310242	0					
ANR	1310299	Identifier	deltas		1310242	1					
ANR	1310300	IfStatement	if ( num_values < num_results || num_values % num_results != 0 )		1310242	6					
ANR	1310301	Condition	num_values < num_results || num_values % num_results != 0	218:8:6917:6981	1310242	0	True				
ANR	1310302	OrExpression	num_values < num_results || num_values % num_results != 0		1310242	0		||			
ANR	1310303	RelationalExpression	num_values < num_results		1310242	0		<			
ANR	1310304	Identifier	num_values		1310242	0					
ANR	1310305	Identifier	num_results		1310242	1					
ANR	1310306	EqualityExpression	num_values % num_results != 0		1310242	1		!=			
ANR	1310307	MultiplicativeExpression	num_values % num_results		1310242	0		%			
ANR	1310308	Identifier	num_values		1310242	0					
ANR	1310309	Identifier	num_results		1310242	1					
ANR	1310310	PrimaryExpression	0		1310242	1					
ANR	1310311	ExpressionStatement	return_error ( gs_error_invalidfont )	221:8:7001:7035	1310242	1	True				
ANR	1310312	CallExpression	return_error ( gs_error_invalidfont )		1310242	0					
ANR	1310313	Callee	return_error		1310242	0					
ANR	1310314	Identifier	return_error		1310242	0					
ANR	1310315	ArgumentList	gs_error_invalidfont		1310242	1					
ANR	1310316	Argument	gs_error_invalidfont		1310242	0					
ANR	1310317	Identifier	gs_error_invalidfont		1310242	0					
ANR	1310318	ExpressionStatement	base = csp - 1 - num_values	222:4:7041:7068	1310242	7	True				
ANR	1310319	AssignmentExpression	base = csp - 1 - num_values		1310242	0		=			
ANR	1310320	Identifier	base		1310242	0					
ANR	1310321	AdditiveExpression	csp - 1 - num_values		1310242	1		-			
ANR	1310322	Identifier	csp		1310242	0					
ANR	1310323	AdditiveExpression	1 - num_values		1310242	1		-			
ANR	1310324	PrimaryExpression	1		1310242	0					
ANR	1310325	Identifier	num_values		1310242	1					
ANR	1310326	ExpressionStatement	deltas = base + num_results - 1	223:4:7074:7105	1310242	8	True				
ANR	1310327	AssignmentExpression	deltas = base + num_results - 1		1310242	0		=			
ANR	1310328	Identifier	deltas		1310242	0					
ANR	1310329	AdditiveExpression	base + num_results - 1		1310242	1		+			
ANR	1310330	Identifier	base		1310242	0					
ANR	1310331	AdditiveExpression	num_results - 1		1310242	1		-			
ANR	1310332	Identifier	num_results		1310242	0					
ANR	1310333	PrimaryExpression	1		1310242	1					
ANR	1310334	ForStatement	"for ( j = 0 ; j < num_results ; j ++ , base ++ , deltas += k1 )"		1310242	9					
ANR	1310335	ForInit	j = 0 ;	224:9:7116:7121	1310242	0	True				
ANR	1310336	AssignmentExpression	j = 0		1310242	0		=			
ANR	1310337	Identifier	j		1310242	0					
ANR	1310338	PrimaryExpression	0		1310242	1					
ANR	1310339	Condition	j < num_results	224:16:7123:7137	1310242	1	True				
ANR	1310340	RelationalExpression	j < num_results		1310242	0		<			
ANR	1310341	Identifier	j		1310242	0					
ANR	1310342	Identifier	num_results		1310242	1					
ANR	1310343	Expression	"j ++ , base ++ , deltas += k1"	225:9:7149:7173	1310242	2	True				
ANR	1310344	PostIncDecOperationExpression	j ++		1310242	0					
ANR	1310345	Identifier	j		1310242	0					
ANR	1310346	IncDec	++		1310242	1					
ANR	1310347	Expression	"base ++ , deltas += k1"		1310242	1					
ANR	1310348	PostIncDecOperationExpression	base ++		1310242	0					
ANR	1310349	Identifier	base		1310242	0					
ANR	1310350	IncDec	++		1310242	1					
ANR	1310351	AssignmentExpression	deltas += k1		1310242	1		+=			
ANR	1310352	Identifier	deltas		1310242	0					
ANR	1310353	Identifier	k1		1310242	1					
ANR	1310354	ForStatement	for ( i = 1 ; i <= k1 ; i ++ )		1310242	3					
ANR	1310355	ForInit	i = 1 ;	227:13:7199:7204	1310242	0	True				
ANR	1310356	AssignmentExpression	i = 1		1310242	0		=			
ANR	1310357	Identifier	i		1310242	0					
ANR	1310358	PrimaryExpression	1		1310242	1					
ANR	1310359	Condition	i <= k1	227:20:7206:7212	1310242	1	True				
ANR	1310360	RelationalExpression	i <= k1		1310242	0		<=			
ANR	1310361	Identifier	i		1310242	0					
ANR	1310362	Identifier	k1		1310242	1					
ANR	1310363	PostIncDecOperationExpression	i ++	227:29:7215:7217	1310242	2	True				
ANR	1310364	Identifier	i		1310242	0					
ANR	1310365	IncDec	++		1310242	1					
ANR	1310366	ExpressionStatement	* base += ( fixed ) ( deltas [ i ] * pdata -> WeightVector . values [ i ] )	228:12:7232:7307	1310242	3	True				
ANR	1310367	AssignmentExpression	* base += ( fixed ) ( deltas [ i ] * pdata -> WeightVector . values [ i ] )		1310242	0		+=			
ANR	1310368	UnaryOperationExpression	* base		1310242	0					
ANR	1310369	UnaryOperator	*		1310242	0					
ANR	1310370	Identifier	base		1310242	1					
ANR	1310371	CastExpression	( fixed ) ( deltas [ i ] * pdata -> WeightVector . values [ i ] )		1310242	1					
ANR	1310372	CastTarget	fixed		1310242	0					
ANR	1310373	MultiplicativeExpression	deltas [ i ] * pdata -> WeightVector . values [ i ]		1310242	1		*			
ANR	1310374	ArrayIndexing	deltas [ i ]		1310242	0					
ANR	1310375	Identifier	deltas		1310242	0					
ANR	1310376	Identifier	i		1310242	1					
ANR	1310377	ArrayIndexing	pdata -> WeightVector . values [ i ]		1310242	1					
ANR	1310378	MemberAccess	pdata -> WeightVector . values		1310242	0					
ANR	1310379	PtrMemberAccess	pdata -> WeightVector		1310242	0					
ANR	1310380	Identifier	pdata		1310242	0					
ANR	1310381	Identifier	WeightVector		1310242	1					
ANR	1310382	Identifier	values		1310242	1					
ANR	1310383	Identifier	i		1310242	1					
ANR	1310384	ExpressionStatement	pcis -> ignore_pops = num_results	230:4:7313:7344	1310242	10	True				
ANR	1310385	AssignmentExpression	pcis -> ignore_pops = num_results		1310242	0		=			
ANR	1310386	PtrMemberAccess	pcis -> ignore_pops		1310242	0					
ANR	1310387	Identifier	pcis		1310242	0					
ANR	1310388	Identifier	ignore_pops		1310242	1					
ANR	1310389	Identifier	num_results		1310242	1					
ANR	1310390	ReturnStatement	return num_values - num_results + 2 ;	231:4:7350:7385	1310242	11	True				
ANR	1310391	AdditiveExpression	num_values - num_results + 2		1310242	0		-			
ANR	1310392	Identifier	num_values		1310242	0					
ANR	1310393	AdditiveExpression	num_results + 2		1310242	1		+			
ANR	1310394	Identifier	num_results		1310242	0					
ANR	1310395	PrimaryExpression	2		1310242	1					
ANR	1310396	ReturnType	int		1310242	1					
ANR	1310397	Identifier	gs_type1_blend		1310242	2					
ANR	1310398	ParameterList	"gs_type1_state * pcis , fixed * csp , int num_results"		1310242	3					
ANR	1310399	Parameter	gs_type1_state * pcis	209:15:6670:6689	1310242	0	True				
ANR	1310400	ParameterType	gs_type1_state *		1310242	0					
ANR	1310401	Identifier	pcis		1310242	1					
ANR	1310402	Parameter	fixed * csp	209:37:6692:6701	1310242	1	True				
ANR	1310403	ParameterType	fixed *		1310242	0					
ANR	1310404	Identifier	csp		1310242	1					
ANR	1310405	Parameter	int num_results	209:49:6704:6718	1310242	2	True				
ANR	1310406	ParameterType	int		1310242	0					
ANR	1310407	Identifier	num_results		1310242	1					
ANR	1310408	CFGEntryNode	ENTRY		1310242		True				
ANR	1310409	CFGExitNode	EXIT		1310242		True				
ANR	1310410	Symbol	csp		1310242						
ANR	1310411	Symbol	pdata		1310242						
ANR	1310412	Symbol	num_results		1310242						
ANR	1310413	Symbol	* csp		1310242						
ANR	1310414	Symbol	pcis -> pfont		1310242						
ANR	1310415	Symbol	pdata -> WeightVector		1310242						
ANR	1310416	Symbol	* base		1310242						
ANR	1310417	Symbol	gs_error_invalidfont		1310242						
ANR	1310418	Symbol	deltas		1310242						
ANR	1310419	Symbol	* pdata		1310242						
ANR	1310420	Symbol	k1		1310242						
ANR	1310421	Symbol	pcis		1310242						
ANR	1310422	Symbol	i		1310242						
ANR	1310423	Symbol	j		1310242						
ANR	1310424	Symbol	* deltas		1310242						
ANR	1310425	Symbol	* pdata -> WeightVector . values		1310242						
ANR	1310426	Symbol	num_values		1310242						
ANR	1310427	Symbol	* pcis		1310242						
ANR	1310428	Symbol	* i		1310242						
ANR	1310429	Symbol	pdata -> WeightVector . values		1310242						
ANR	1310430	Symbol	pcis -> ignore_pops		1310242						
ANR	1310431	Symbol	* * pdata		1310242						
ANR	1310432	Symbol	* pdata -> WeightVector		1310242						
ANR	1310433	Symbol	& pcis -> pfont -> data		1310242						
ANR	1310434	Symbol	fixed2int_var		1310242						
ANR	1310435	Symbol	base		1310242						
ANR	1310436	Function	gs_type1_seac	239:0:7578:8347							
ANR	1310437	FunctionDef	"gs_type1_seac (gs_type1_state * pcis , const fixed * cstack , fixed asb , ip_state_t * ipsp)"		1310436	0					
ANR	1310438	CompoundStatement		242:0:7685:8347	1310436	0					
ANR	1310439	IdentifierDeclStatement	gs_font_type1 * pfont = pcis -> pfont ;	243:4:7691:7725	1310436	0	True				
ANR	1310440	IdentifierDecl	* pfont = pcis -> pfont		1310436	0					
ANR	1310441	IdentifierDeclType	gs_font_type1 *		1310436	0					
ANR	1310442	Identifier	pfont		1310436	1					
ANR	1310443	AssignmentExpression	* pfont = pcis -> pfont		1310436	2		=			
ANR	1310444	Identifier	pfont		1310436	0					
ANR	1310445	PtrMemberAccess	pcis -> pfont		1310436	1					
ANR	1310446	Identifier	pcis		1310436	0					
ANR	1310447	Identifier	pfont		1310436	1					
ANR	1310448	IdentifierDeclStatement	gs_glyph_data_t bgdata ;	244:4:7731:7753	1310436	1	True				
ANR	1310449	IdentifierDecl	bgdata		1310436	0					
ANR	1310450	IdentifierDeclType	gs_glyph_data_t		1310436	0					
ANR	1310451	Identifier	bgdata		1310436	1					
ANR	1310452	IdentifierDeclStatement	gs_const_string gstr ;	245:4:7759:7779	1310436	2	True				
ANR	1310453	IdentifierDecl	gstr		1310436	0					
ANR	1310454	IdentifierDeclType	gs_const_string		1310436	0					
ANR	1310455	Identifier	gstr		1310436	1					
ANR	1310456	IdentifierDeclStatement	int code ;	246:4:7785:7793	1310436	3	True				
ANR	1310457	IdentifierDecl	code		1310436	0					
ANR	1310458	IdentifierDeclType	int		1310436	0					
ANR	1310459	Identifier	code		1310436	1					
ANR	1310460	ExpressionStatement	pcis -> seac_accent = fixed2int_var ( cstack [ 3 ] )	249:4:7838:7882	1310436	4	True				
ANR	1310461	AssignmentExpression	pcis -> seac_accent = fixed2int_var ( cstack [ 3 ] )		1310436	0		=			
ANR	1310462	PtrMemberAccess	pcis -> seac_accent		1310436	0					
ANR	1310463	Identifier	pcis		1310436	0					
ANR	1310464	Identifier	seac_accent		1310436	1					
ANR	1310465	CallExpression	fixed2int_var ( cstack [ 3 ] )		1310436	1					
ANR	1310466	Callee	fixed2int_var		1310436	0					
ANR	1310467	Identifier	fixed2int_var		1310436	0					
ANR	1310468	ArgumentList	cstack [ 3 ]		1310436	1					
ANR	1310469	Argument	cstack [ 3 ]		1310436	0					
ANR	1310470	ArrayIndexing	cstack [ 3 ]		1310436	0					
ANR	1310471	Identifier	cstack		1310436	0					
ANR	1310472	PrimaryExpression	3		1310436	1					
ANR	1310473	ExpressionStatement	pcis -> asb = asb	250:4:7888:7903	1310436	5	True				
ANR	1310474	AssignmentExpression	pcis -> asb = asb		1310436	0		=			
ANR	1310475	PtrMemberAccess	pcis -> asb		1310436	0					
ANR	1310476	Identifier	pcis		1310436	0					
ANR	1310477	Identifier	asb		1310436	1					
ANR	1310478	Identifier	asb		1310436	1					
ANR	1310479	ExpressionStatement	pcis -> compound_lsb = pcis -> lsb	251:4:7909:7939	1310436	6	True				
ANR	1310480	AssignmentExpression	pcis -> compound_lsb = pcis -> lsb		1310436	0		=			
ANR	1310481	PtrMemberAccess	pcis -> compound_lsb		1310436	0					
ANR	1310482	Identifier	pcis		1310436	0					
ANR	1310483	Identifier	compound_lsb		1310436	1					
ANR	1310484	PtrMemberAccess	pcis -> lsb		1310436	1					
ANR	1310485	Identifier	pcis		1310436	0					
ANR	1310486	Identifier	lsb		1310436	1					
ANR	1310487	ExpressionStatement	pcis -> save_adxy . x = cstack [ 0 ]	252:4:7945:7974	1310436	7	True				
ANR	1310488	AssignmentExpression	pcis -> save_adxy . x = cstack [ 0 ]		1310436	0		=			
ANR	1310489	MemberAccess	pcis -> save_adxy . x		1310436	0					
ANR	1310490	PtrMemberAccess	pcis -> save_adxy		1310436	0					
ANR	1310491	Identifier	pcis		1310436	0					
ANR	1310492	Identifier	save_adxy		1310436	1					
ANR	1310493	Identifier	x		1310436	1					
ANR	1310494	ArrayIndexing	cstack [ 0 ]		1310436	1					
ANR	1310495	Identifier	cstack		1310436	0					
ANR	1310496	PrimaryExpression	0		1310436	1					
ANR	1310497	ExpressionStatement	pcis -> save_adxy . y = cstack [ 1 ]	253:4:7980:8009	1310436	8	True				
ANR	1310498	AssignmentExpression	pcis -> save_adxy . y = cstack [ 1 ]		1310436	0		=			
ANR	1310499	MemberAccess	pcis -> save_adxy . y		1310436	0					
ANR	1310500	PtrMemberAccess	pcis -> save_adxy		1310436	0					
ANR	1310501	Identifier	pcis		1310436	0					
ANR	1310502	Identifier	save_adxy		1310436	1					
ANR	1310503	Identifier	y		1310436	1					
ANR	1310504	ArrayIndexing	cstack [ 1 ]		1310436	1					
ANR	1310505	Identifier	cstack		1310436	0					
ANR	1310506	PrimaryExpression	1		1310436	1					
ANR	1310507	ExpressionStatement	pcis -> os_count = 0	254:4:8015:8033	1310436	9	True				
ANR	1310508	AssignmentExpression	pcis -> os_count = 0		1310436	0		=			
ANR	1310509	PtrMemberAccess	pcis -> os_count		1310436	0					
ANR	1310510	Identifier	pcis		1310436	0					
ANR	1310511	Identifier	os_count		1310436	1					
ANR	1310512	PrimaryExpression	0		1310436	1					
ANR	1310513	ExpressionStatement	"code = pfont -> data . procs . seac_data ( pfont , fixed2int_var ( cstack [ 2 ] ) , NULL , & gstr , & bgdata )"	256:4:8121:8219	1310436	10	True				
ANR	1310514	AssignmentExpression	"code = pfont -> data . procs . seac_data ( pfont , fixed2int_var ( cstack [ 2 ] ) , NULL , & gstr , & bgdata )"		1310436	0		=			
ANR	1310515	Identifier	code		1310436	0					
ANR	1310516	CallExpression	"pfont -> data . procs . seac_data ( pfont , fixed2int_var ( cstack [ 2 ] ) , NULL , & gstr , & bgdata )"		1310436	1					
ANR	1310517	Callee	pfont -> data . procs . seac_data		1310436	0					
ANR	1310518	MemberAccess	pfont -> data . procs . seac_data		1310436	0					
ANR	1310519	MemberAccess	pfont -> data . procs		1310436	0					
ANR	1310520	PtrMemberAccess	pfont -> data		1310436	0					
ANR	1310521	Identifier	pfont		1310436	0					
ANR	1310522	Identifier	data		1310436	1					
ANR	1310523	Identifier	procs		1310436	1					
ANR	1310524	Identifier	seac_data		1310436	1					
ANR	1310525	ArgumentList	pfont		1310436	1					
ANR	1310526	Argument	pfont		1310436	0					
ANR	1310527	Identifier	pfont		1310436	0					
ANR	1310528	Argument	fixed2int_var ( cstack [ 2 ] )		1310436	1					
ANR	1310529	CallExpression	fixed2int_var ( cstack [ 2 ] )		1310436	0					
ANR	1310530	Callee	fixed2int_var		1310436	0					
ANR	1310531	Identifier	fixed2int_var		1310436	0					
ANR	1310532	ArgumentList	cstack [ 2 ]		1310436	1					
ANR	1310533	Argument	cstack [ 2 ]		1310436	0					
ANR	1310534	ArrayIndexing	cstack [ 2 ]		1310436	0					
ANR	1310535	Identifier	cstack		1310436	0					
ANR	1310536	PrimaryExpression	2		1310436	1					
ANR	1310537	Argument	NULL		1310436	2					
ANR	1310538	Identifier	NULL		1310436	0					
ANR	1310539	Argument	& gstr		1310436	3					
ANR	1310540	UnaryOperationExpression	& gstr		1310436	0					
ANR	1310541	UnaryOperator	&		1310436	0					
ANR	1310542	Identifier	gstr		1310436	1					
ANR	1310543	Argument	& bgdata		1310436	4					
ANR	1310544	UnaryOperationExpression	& bgdata		1310436	0					
ANR	1310545	UnaryOperator	&		1310436	0					
ANR	1310546	Identifier	bgdata		1310436	1					
ANR	1310547	IfStatement	if ( code < 0 )		1310436	11					
ANR	1310548	Condition	code < 0	258:8:8229:8236	1310436	0	True				
ANR	1310549	RelationalExpression	code < 0		1310436	0		<			
ANR	1310550	Identifier	code		1310436	0					
ANR	1310551	PrimaryExpression	0		1310436	1					
ANR	1310552	ReturnStatement	return code ;	259:8:8247:8258	1310436	1	True				
ANR	1310553	Identifier	code		1310436	0					
ANR	1310554	ExpressionStatement	ipsp -> cs_data = bgdata	261:4:8309:8331	1310436	12	True				
ANR	1310555	AssignmentExpression	ipsp -> cs_data = bgdata		1310436	0		=			
ANR	1310556	PtrMemberAccess	ipsp -> cs_data		1310436	0					
ANR	1310557	Identifier	ipsp		1310436	0					
ANR	1310558	Identifier	cs_data		1310436	1					
ANR	1310559	Identifier	bgdata		1310436	1					
ANR	1310560	ReturnStatement	return 0 ;	262:4:8337:8345	1310436	13	True				
ANR	1310561	PrimaryExpression	0		1310436	0					
ANR	1310562	ReturnType	int		1310436	1					
ANR	1310563	Identifier	gs_type1_seac		1310436	2					
ANR	1310564	ParameterList	"gs_type1_state * pcis , const fixed * cstack , fixed asb , ip_state_t * ipsp"		1310436	3					
ANR	1310565	Parameter	gs_type1_state * pcis	240:14:7596:7616	1310436	0	True				
ANR	1310566	ParameterType	gs_type1_state *		1310436	0					
ANR	1310567	Identifier	pcis		1310436	1					
ANR	1310568	Parameter	const fixed * cstack	240:37:7619:7638	1310436	1	True				
ANR	1310569	ParameterType	const fixed *		1310436	0					
ANR	1310570	Identifier	cstack		1310436	1					
ANR	1310571	Parameter	fixed asb	240:59:7641:7649	1310436	2	True				
ANR	1310572	ParameterType	fixed		1310436	0					
ANR	1310573	Identifier	asb		1310436	1					
ANR	1310574	Parameter	ip_state_t * ipsp	241:14:7666:7682	1310436	3	True				
ANR	1310575	ParameterType	ip_state_t *		1310436	0					
ANR	1310576	Identifier	ipsp		1310436	1					
ANR	1310577	CFGEntryNode	ENTRY		1310436		True				
ANR	1310578	CFGExitNode	EXIT		1310436		True				
ANR	1310579	Symbol	code		1310436						
ANR	1310580	Symbol	ipsp -> cs_data		1310436						
ANR	1310581	Symbol	* cstack		1310436						
ANR	1310582	Symbol	pcis -> os_count		1310436						
ANR	1310583	Symbol	pfont -> data . procs . seac_data		1310436						
ANR	1310584	Symbol	pcis -> lsb		1310436						
ANR	1310585	Symbol	pcis -> pfont		1310436						
ANR	1310586	Symbol	gstr		1310436						
ANR	1310587	Symbol	pcis -> asb		1310436						
ANR	1310588	Symbol	pcis -> save_adxy . x		1310436						
ANR	1310589	Symbol	pcis -> save_adxy . y		1310436						
ANR	1310590	Symbol	& bgdata		1310436						
ANR	1310591	Symbol	NULL		1310436						
ANR	1310592	Symbol	pfont		1310436						
ANR	1310593	Symbol	* ipsp		1310436						
ANR	1310594	Symbol	pcis		1310436						
ANR	1310595	Symbol	pfont -> data		1310436						
ANR	1310596	Symbol	pcis -> save_adxy		1310436						
ANR	1310597	Symbol	& gstr		1310436						
ANR	1310598	Symbol	asb		1310436						
ANR	1310599	Symbol	* pcis		1310436						
ANR	1310600	Symbol	* pfont		1310436						
ANR	1310601	Symbol	ipsp		1310436						
ANR	1310602	Symbol	pfont -> data . procs		1310436						
ANR	1310603	Symbol	pcis -> seac_accent		1310436						
ANR	1310604	Symbol	pcis -> compound_lsb		1310436						
ANR	1310605	Symbol	bgdata		1310436						
ANR	1310606	Symbol	fixed2int_var		1310436						
ANR	1310607	Symbol	cstack		1310436						
ANR	1310608	Function	gs_type1_endchar	272:0:8680:10806							
ANR	1310609	FunctionDef	gs_type1_endchar (gs_type1_state * pcis)		1310608	0					
ANR	1310610	CompoundStatement		274:0:8724:10806	1310608	0					
ANR	1310611	IdentifierDeclStatement	gs_gstate * pgs = pcis -> pgs ;	275:4:8730:8756	1310608	0	True				
ANR	1310612	IdentifierDecl	* pgs = pcis -> pgs		1310608	0					
ANR	1310613	IdentifierDeclType	gs_gstate *		1310608	0					
ANR	1310614	Identifier	pgs		1310608	1					
ANR	1310615	AssignmentExpression	* pgs = pcis -> pgs		1310608	2		=			
ANR	1310616	Identifier	pgs		1310608	0					
ANR	1310617	PtrMemberAccess	pcis -> pgs		1310608	1					
ANR	1310618	Identifier	pcis		1310608	0					
ANR	1310619	Identifier	pgs		1310608	1					
ANR	1310620	IfStatement	if ( pcis -> seac_accent >= 0 )		1310608	1					
ANR	1310621	Condition	pcis -> seac_accent >= 0	277:8:8767:8788	1310608	0	True				
ANR	1310622	RelationalExpression	pcis -> seac_accent >= 0		1310608	0		>=			
ANR	1310623	PtrMemberAccess	pcis -> seac_accent		1310608	0					
ANR	1310624	Identifier	pcis		1310608	0					
ANR	1310625	Identifier	seac_accent		1310608	1					
ANR	1310626	PrimaryExpression	0		1310608	1					
ANR	1310627	CompoundStatement		10:8:303:311	1310608	1					
ANR	1310628	IdentifierDeclStatement	gs_font_type1 * pfont = pcis -> pfont ;	279:8:8883:8917	1310608	0	True				
ANR	1310629	IdentifierDecl	* pfont = pcis -> pfont		1310608	0					
ANR	1310630	IdentifierDeclType	gs_font_type1 *		1310608	0					
ANR	1310631	Identifier	pfont		1310608	1					
ANR	1310632	AssignmentExpression	* pfont = pcis -> pfont		1310608	2		=			
ANR	1310633	Identifier	pfont		1310608	0					
ANR	1310634	PtrMemberAccess	pcis -> pfont		1310608	1					
ANR	1310635	Identifier	pcis		1310608	0					
ANR	1310636	Identifier	pfont		1310608	1					
ANR	1310637	IdentifierDeclStatement	gs_glyph_data_t agdata ;	280:8:8927:8949	1310608	1	True				
ANR	1310638	IdentifierDecl	agdata		1310608	0					
ANR	1310639	IdentifierDeclType	gs_glyph_data_t		1310608	0					
ANR	1310640	Identifier	agdata		1310608	1					
ANR	1310641	IdentifierDeclStatement	int achar = pcis -> seac_accent ;	281:8:8959:8988	1310608	2	True				
ANR	1310642	IdentifierDecl	achar = pcis -> seac_accent		1310608	0					
ANR	1310643	IdentifierDeclType	int		1310608	0					
ANR	1310644	Identifier	achar		1310608	1					
ANR	1310645	AssignmentExpression	achar = pcis -> seac_accent		1310608	2		=			
ANR	1310646	Identifier	achar		1310608	0					
ANR	1310647	PtrMemberAccess	pcis -> seac_accent		1310608	1					
ANR	1310648	Identifier	pcis		1310608	0					
ANR	1310649	Identifier	seac_accent		1310608	1					
ANR	1310650	IdentifierDeclStatement	gs_const_string gstr ;	282:8:8998:9018	1310608	3	True				
ANR	1310651	IdentifierDecl	gstr		1310608	0					
ANR	1310652	IdentifierDeclType	gs_const_string		1310608	0					
ANR	1310653	Identifier	gstr		1310608	1					
ANR	1310654	IdentifierDeclStatement	int code ;	283:8:9028:9036	1310608	4	True				
ANR	1310655	IdentifierDecl	code		1310608	0					
ANR	1310656	IdentifierDeclType	int		1310608	0					
ANR	1310657	Identifier	code		1310608	1					
ANR	1310658	ExpressionStatement	agdata . memory = pfont -> memory	285:8:9047:9076	1310608	5	True				
ANR	1310659	AssignmentExpression	agdata . memory = pfont -> memory		1310608	0		=			
ANR	1310660	MemberAccess	agdata . memory		1310608	0					
ANR	1310661	Identifier	agdata		1310608	0					
ANR	1310662	Identifier	memory		1310608	1					
ANR	1310663	PtrMemberAccess	pfont -> memory		1310608	1					
ANR	1310664	Identifier	pfont		1310608	0					
ANR	1310665	Identifier	memory		1310608	1					
ANR	1310666	ExpressionStatement	pcis -> seac_accent = - 1	286:8:9086:9108	1310608	6	True				
ANR	1310667	AssignmentExpression	pcis -> seac_accent = - 1		1310608	0		=			
ANR	1310668	PtrMemberAccess	pcis -> seac_accent		1310608	0					
ANR	1310669	Identifier	pcis		1310608	0					
ANR	1310670	Identifier	seac_accent		1310608	1					
ANR	1310671	UnaryOperationExpression	- 1		1310608	1					
ANR	1310672	UnaryOperator	-		1310608	0					
ANR	1310673	PrimaryExpression	1		1310608	1					
ANR	1310674	ExpressionStatement	pcis -> asb_diff = pcis -> asb - pcis -> compound_lsb . x	288:8:9167:9216	1310608	7	True				
ANR	1310675	AssignmentExpression	pcis -> asb_diff = pcis -> asb - pcis -> compound_lsb . x		1310608	0		=			
ANR	1310676	PtrMemberAccess	pcis -> asb_diff		1310608	0					
ANR	1310677	Identifier	pcis		1310608	0					
ANR	1310678	Identifier	asb_diff		1310608	1					
ANR	1310679	AdditiveExpression	pcis -> asb - pcis -> compound_lsb . x		1310608	1		-			
ANR	1310680	PtrMemberAccess	pcis -> asb		1310608	0					
ANR	1310681	Identifier	pcis		1310608	0					
ANR	1310682	Identifier	asb		1310608	1					
ANR	1310683	MemberAccess	pcis -> compound_lsb . x		1310608	1					
ANR	1310684	PtrMemberAccess	pcis -> compound_lsb		1310608	0					
ANR	1310685	Identifier	pcis		1310608	0					
ANR	1310686	Identifier	compound_lsb		1310608	1					
ANR	1310687	Identifier	x		1310608	1					
ANR	1310688	ExpressionStatement	pcis -> adxy = pcis -> save_adxy	289:8:9226:9254	1310608	8	True				
ANR	1310689	AssignmentExpression	pcis -> adxy = pcis -> save_adxy		1310608	0		=			
ANR	1310690	PtrMemberAccess	pcis -> adxy		1310608	0					
ANR	1310691	Identifier	pcis		1310608	0					
ANR	1310692	Identifier	adxy		1310608	1					
ANR	1310693	PtrMemberAccess	pcis -> save_adxy		1310608	1					
ANR	1310694	Identifier	pcis		1310608	0					
ANR	1310695	Identifier	save_adxy		1310608	1					
ANR	1310696	ExpressionStatement	pcis -> os_count = 0	290:8:9264:9282	1310608	9	True				
ANR	1310697	AssignmentExpression	pcis -> os_count = 0		1310608	0		=			
ANR	1310698	PtrMemberAccess	pcis -> os_count		1310608	0					
ANR	1310699	Identifier	pcis		1310608	0					
ANR	1310700	Identifier	os_count		1310608	1					
ANR	1310701	PrimaryExpression	0		1310608	1					
ANR	1310702	ExpressionStatement	pcis -> ips_count = 1	293:8:9405:9424	1310608	10	True				
ANR	1310703	AssignmentExpression	pcis -> ips_count = 1		1310608	0		=			
ANR	1310704	PtrMemberAccess	pcis -> ips_count		1310608	0					
ANR	1310705	Identifier	pcis		1310608	0					
ANR	1310706	Identifier	ips_count		1310608	1					
ANR	1310707	PrimaryExpression	1		1310608	1					
ANR	1310708	ExpressionStatement	"code = pfont -> data . procs . seac_data ( pfont , achar , NULL , & gstr , & agdata )"	295:8:9499:9569	1310608	11	True				
ANR	1310709	AssignmentExpression	"code = pfont -> data . procs . seac_data ( pfont , achar , NULL , & gstr , & agdata )"		1310608	0		=			
ANR	1310710	Identifier	code		1310608	0					
ANR	1310711	CallExpression	"pfont -> data . procs . seac_data ( pfont , achar , NULL , & gstr , & agdata )"		1310608	1					
ANR	1310712	Callee	pfont -> data . procs . seac_data		1310608	0					
ANR	1310713	MemberAccess	pfont -> data . procs . seac_data		1310608	0					
ANR	1310714	MemberAccess	pfont -> data . procs		1310608	0					
ANR	1310715	PtrMemberAccess	pfont -> data		1310608	0					
ANR	1310716	Identifier	pfont		1310608	0					
ANR	1310717	Identifier	data		1310608	1					
ANR	1310718	Identifier	procs		1310608	1					
ANR	1310719	Identifier	seac_data		1310608	1					
ANR	1310720	ArgumentList	pfont		1310608	1					
ANR	1310721	Argument	pfont		1310608	0					
ANR	1310722	Identifier	pfont		1310608	0					
ANR	1310723	Argument	achar		1310608	1					
ANR	1310724	Identifier	achar		1310608	0					
ANR	1310725	Argument	NULL		1310608	2					
ANR	1310726	Identifier	NULL		1310608	0					
ANR	1310727	Argument	& gstr		1310608	3					
ANR	1310728	UnaryOperationExpression	& gstr		1310608	0					
ANR	1310729	UnaryOperator	&		1310608	0					
ANR	1310730	Identifier	gstr		1310608	1					
ANR	1310731	Argument	& agdata		1310608	4					
ANR	1310732	UnaryOperationExpression	& agdata		1310608	0					
ANR	1310733	UnaryOperator	&		1310608	0					
ANR	1310734	Identifier	agdata		1310608	1					
ANR	1310735	IfStatement	if ( code == gs_error_undefined )		1310608	12					
ANR	1310736	Condition	code == gs_error_undefined	296:12:9583:9608	1310608	0	True				
ANR	1310737	EqualityExpression	code == gs_error_undefined		1310608	0		==			
ANR	1310738	Identifier	code		1310608	0					
ANR	1310739	Identifier	gs_error_undefined		1310608	1					
ANR	1310740	CompoundStatement		31:12:1248:1289	1310608	1					
ANR	1310741	IdentifierDeclStatement	"char buf0 [ gs_font_name_max + 1 ] , buf1 [ 30 ] ;"	302:12:9845:9886	1310608	0	True				
ANR	1310742	IdentifierDecl	buf0 [ gs_font_name_max + 1 ]		1310608	0					
ANR	1310743	IdentifierDeclType	char [ gs_font_name_max + 1 ]		1310608	0					
ANR	1310744	Identifier	buf0		1310608	1					
ANR	1310745	AdditiveExpression	gs_font_name_max + 1		1310608	2		+			
ANR	1310746	Identifier	gs_font_name_max		1310608	0					
ANR	1310747	PrimaryExpression	1		1310608	1					
ANR	1310748	IdentifierDecl	buf1 [ 30 ]		1310608	1					
ANR	1310749	IdentifierDeclType	char [ 30 ]		1310608	0					
ANR	1310750	Identifier	buf1		1310608	1					
ANR	1310751	PrimaryExpression	30		1310608	2					
ANR	1310752	IdentifierDeclStatement	"int l0 = min ( pcis -> pfont -> font_name . size , sizeof ( buf0 ) - 1 ) ;"	303:12:9900:9959	1310608	1	True				
ANR	1310753	IdentifierDecl	"l0 = min ( pcis -> pfont -> font_name . size , sizeof ( buf0 ) - 1 )"		1310608	0					
ANR	1310754	IdentifierDeclType	int		1310608	0					
ANR	1310755	Identifier	l0		1310608	1					
ANR	1310756	AssignmentExpression	"l0 = min ( pcis -> pfont -> font_name . size , sizeof ( buf0 ) - 1 )"		1310608	2		=			
ANR	1310757	Identifier	l0		1310608	0					
ANR	1310758	CallExpression	"min ( pcis -> pfont -> font_name . size , sizeof ( buf0 ) - 1 )"		1310608	1					
ANR	1310759	Callee	min		1310608	0					
ANR	1310760	Identifier	min		1310608	0					
ANR	1310761	ArgumentList	pcis -> pfont -> font_name . size		1310608	1					
ANR	1310762	Argument	pcis -> pfont -> font_name . size		1310608	0					
ANR	1310763	MemberAccess	pcis -> pfont -> font_name . size		1310608	0					
ANR	1310764	PtrMemberAccess	pcis -> pfont -> font_name		1310608	0					
ANR	1310765	PtrMemberAccess	pcis -> pfont		1310608	0					
ANR	1310766	Identifier	pcis		1310608	0					
ANR	1310767	Identifier	pfont		1310608	1					
ANR	1310768	Identifier	font_name		1310608	1					
ANR	1310769	Identifier	size		1310608	1					
ANR	1310770	Argument	sizeof ( buf0 ) - 1		1310608	1					
ANR	1310771	AdditiveExpression	sizeof ( buf0 ) - 1		1310608	0		-			
ANR	1310772	SizeofExpression	sizeof ( buf0 )		1310608	0					
ANR	1310773	Sizeof	sizeof		1310608	0					
ANR	1310774	SizeofOperand	buf0		1310608	1					
ANR	1310775	PrimaryExpression	1		1310608	1					
ANR	1310776	IdentifierDeclStatement	"int l1 = min ( gstr . size , sizeof ( buf1 ) - 1 ) ;"	304:12:9973:10014	1310608	2	True				
ANR	1310777	IdentifierDecl	"l1 = min ( gstr . size , sizeof ( buf1 ) - 1 )"		1310608	0					
ANR	1310778	IdentifierDeclType	int		1310608	0					
ANR	1310779	Identifier	l1		1310608	1					
ANR	1310780	AssignmentExpression	"l1 = min ( gstr . size , sizeof ( buf1 ) - 1 )"		1310608	2		=			
ANR	1310781	Identifier	l1		1310608	0					
ANR	1310782	CallExpression	"min ( gstr . size , sizeof ( buf1 ) - 1 )"		1310608	1					
ANR	1310783	Callee	min		1310608	0					
ANR	1310784	Identifier	min		1310608	0					
ANR	1310785	ArgumentList	gstr . size		1310608	1					
ANR	1310786	Argument	gstr . size		1310608	0					
ANR	1310787	MemberAccess	gstr . size		1310608	0					
ANR	1310788	Identifier	gstr		1310608	0					
ANR	1310789	Identifier	size		1310608	1					
ANR	1310790	Argument	sizeof ( buf1 ) - 1		1310608	1					
ANR	1310791	AdditiveExpression	sizeof ( buf1 ) - 1		1310608	0		-			
ANR	1310792	SizeofExpression	sizeof ( buf1 )		1310608	0					
ANR	1310793	Sizeof	sizeof		1310608	0					
ANR	1310794	SizeofOperand	buf1		1310608	1					
ANR	1310795	PrimaryExpression	1		1310608	1					
ANR	1310796	ExpressionStatement	"memcpy ( buf0 , pcis -> pfont -> font_name . chars , l0 )"	306:12:10029:10075	1310608	3	True				
ANR	1310797	CallExpression	"memcpy ( buf0 , pcis -> pfont -> font_name . chars , l0 )"		1310608	0					
ANR	1310798	Callee	memcpy		1310608	0					
ANR	1310799	Identifier	memcpy		1310608	0					
ANR	1310800	ArgumentList	buf0		1310608	1					
ANR	1310801	Argument	buf0		1310608	0					
ANR	1310802	Identifier	buf0		1310608	0					
ANR	1310803	Argument	pcis -> pfont -> font_name . chars		1310608	1					
ANR	1310804	MemberAccess	pcis -> pfont -> font_name . chars		1310608	0					
ANR	1310805	PtrMemberAccess	pcis -> pfont -> font_name		1310608	0					
ANR	1310806	PtrMemberAccess	pcis -> pfont		1310608	0					
ANR	1310807	Identifier	pcis		1310608	0					
ANR	1310808	Identifier	pfont		1310608	1					
ANR	1310809	Identifier	font_name		1310608	1					
ANR	1310810	Identifier	chars		1310608	1					
ANR	1310811	Argument	l0		1310608	2					
ANR	1310812	Identifier	l0		1310608	0					
ANR	1310813	ExpressionStatement	buf0 [ l0 ] = 0	307:12:10089:10101	1310608	4	True				
ANR	1310814	AssignmentExpression	buf0 [ l0 ] = 0		1310608	0		=			
ANR	1310815	ArrayIndexing	buf0 [ l0 ]		1310608	0					
ANR	1310816	Identifier	buf0		1310608	0					
ANR	1310817	Identifier	l0		1310608	1					
ANR	1310818	PrimaryExpression	0		1310608	1					
ANR	1310819	ExpressionStatement	"memcpy ( buf1 , gstr . data , l1 )"	308:12:10115:10142	1310608	5	True				
ANR	1310820	CallExpression	"memcpy ( buf1 , gstr . data , l1 )"		1310608	0					
ANR	1310821	Callee	memcpy		1310608	0					
ANR	1310822	Identifier	memcpy		1310608	0					
ANR	1310823	ArgumentList	buf1		1310608	1					
ANR	1310824	Argument	buf1		1310608	0					
ANR	1310825	Identifier	buf1		1310608	0					
ANR	1310826	Argument	gstr . data		1310608	1					
ANR	1310827	MemberAccess	gstr . data		1310608	0					
ANR	1310828	Identifier	gstr		1310608	0					
ANR	1310829	Identifier	data		1310608	1					
ANR	1310830	Argument	l1		1310608	2					
ANR	1310831	Identifier	l1		1310608	0					
ANR	1310832	ExpressionStatement	buf1 [ l1 ] = 0	309:12:10156:10168	1310608	6	True				
ANR	1310833	AssignmentExpression	buf1 [ l1 ] = 0		1310608	0		=			
ANR	1310834	ArrayIndexing	buf1 [ l1 ]		1310608	0					
ANR	1310835	Identifier	buf1		1310608	0					
ANR	1310836	Identifier	l1		1310608	1					
ANR	1310837	PrimaryExpression	0		1310608	1					
ANR	1310838	ExpressionStatement	"emprintf2 ( pfont -> memory , ""The font '%s' misses the glyph '%s' . Continue skipping the glyph."" , buf0 , buf1 )"	310:12:10182:10354	1310608	7	True				
ANR	1310839	CallExpression	"emprintf2 ( pfont -> memory , ""The font '%s' misses the glyph '%s' . Continue skipping the glyph."" , buf0 , buf1 )"		1310608	0					
ANR	1310840	Callee	emprintf2		1310608	0					
ANR	1310841	Identifier	emprintf2		1310608	0					
ANR	1310842	ArgumentList	pfont -> memory		1310608	1					
ANR	1310843	Argument	pfont -> memory		1310608	0					
ANR	1310844	PtrMemberAccess	pfont -> memory		1310608	0					
ANR	1310845	Identifier	pfont		1310608	0					
ANR	1310846	Identifier	memory		1310608	1					
ANR	1310847	Argument	"""The font '%s' misses the glyph '%s' . Continue skipping the glyph."""		1310608	1					
ANR	1310848	PrimaryExpression	"""The font '%s' misses the glyph '%s' . Continue skipping the glyph."""		1310608	0					
ANR	1310849	Argument	buf0		1310608	2					
ANR	1310850	Identifier	buf0		1310608	0					
ANR	1310851	Argument	buf1		1310608	3					
ANR	1310852	Identifier	buf1		1310608	0					
ANR	1310853	ReturnStatement	return 0 ;	314:12:10368:10376	1310608	8	True				
ANR	1310854	PrimaryExpression	0		1310608	0					
ANR	1310855	IfStatement	if ( code < 0 )		1310608	13					
ANR	1310856	Condition	code < 0	316:12:10400:10407	1310608	0	True				
ANR	1310857	RelationalExpression	code < 0		1310608	0		<			
ANR	1310858	Identifier	code		1310608	0					
ANR	1310859	PrimaryExpression	0		1310608	1					
ANR	1310860	ReturnStatement	return code ;	317:12:10422:10433	1310608	1	True				
ANR	1310861	Identifier	code		1310608	0					
ANR	1310862	ExpressionStatement	pcis -> ips_count = 1	319:8:10492:10511	1310608	14	True				
ANR	1310863	AssignmentExpression	pcis -> ips_count = 1		1310608	0		=			
ANR	1310864	PtrMemberAccess	pcis -> ips_count		1310608	0					
ANR	1310865	Identifier	pcis		1310608	0					
ANR	1310866	Identifier	ips_count		1310608	1					
ANR	1310867	PrimaryExpression	1		1310608	1					
ANR	1310868	ExpressionStatement	pcis -> ipstack [ 0 ] . cs_data = agdata	320:8:10521:10554	1310608	15	True				
ANR	1310869	AssignmentExpression	pcis -> ipstack [ 0 ] . cs_data = agdata		1310608	0		=			
ANR	1310870	MemberAccess	pcis -> ipstack [ 0 ] . cs_data		1310608	0					
ANR	1310871	ArrayIndexing	pcis -> ipstack [ 0 ]		1310608	0					
ANR	1310872	PtrMemberAccess	pcis -> ipstack		1310608	0					
ANR	1310873	Identifier	pcis		1310608	0					
ANR	1310874	Identifier	ipstack		1310608	1					
ANR	1310875	PrimaryExpression	0		1310608	1					
ANR	1310876	Identifier	cs_data		1310608	1					
ANR	1310877	Identifier	agdata		1310608	1					
ANR	1310878	ReturnStatement	return 1 ;	321:8:10564:10572	1310608	16	True				
ANR	1310879	PrimaryExpression	1		1310608	0					
ANR	1310880	IfStatement	if ( pcis -> pfont -> PaintType == 0 )		1310608	2					
ANR	1310881	Condition	pcis -> pfont -> PaintType == 0	323:8:10588:10614	1310608	0	True				
ANR	1310882	EqualityExpression	pcis -> pfont -> PaintType == 0		1310608	0		==			
ANR	1310883	PtrMemberAccess	pcis -> pfont -> PaintType		1310608	0					
ANR	1310884	PtrMemberAccess	pcis -> pfont		1310608	0					
ANR	1310885	Identifier	pcis		1310608	0					
ANR	1310886	Identifier	pfont		1310608	1					
ANR	1310887	Identifier	PaintType		1310608	1					
ANR	1310888	PrimaryExpression	0		1310608	1					
ANR	1310889	ExpressionStatement	pgs -> fill_adjust . x = pgs -> fill_adjust . y = - 1	324:8:10625:10669	1310608	1	True				
ANR	1310890	AssignmentExpression	pgs -> fill_adjust . x = pgs -> fill_adjust . y = - 1		1310608	0		=			
ANR	1310891	MemberAccess	pgs -> fill_adjust . x		1310608	0					
ANR	1310892	PtrMemberAccess	pgs -> fill_adjust		1310608	0					
ANR	1310893	Identifier	pgs		1310608	0					
ANR	1310894	Identifier	fill_adjust		1310608	1					
ANR	1310895	Identifier	x		1310608	1					
ANR	1310896	AssignmentExpression	pgs -> fill_adjust . y = - 1		1310608	1		=			
ANR	1310897	MemberAccess	pgs -> fill_adjust . y		1310608	0					
ANR	1310898	PtrMemberAccess	pgs -> fill_adjust		1310608	0					
ANR	1310899	Identifier	pgs		1310608	0					
ANR	1310900	Identifier	fill_adjust		1310608	1					
ANR	1310901	Identifier	y		1310608	1					
ANR	1310902	UnaryOperationExpression	- 1		1310608	1					
ANR	1310903	UnaryOperator	-		1310608	0					
ANR	1310904	PrimaryExpression	1		1310608	1					
ANR	1310905	IfStatement	if ( ! pcis -> no_grid_fitting )		1310608	3					
ANR	1310906	Condition	! pcis -> no_grid_fitting	326:8:10727:10748	1310608	0	True				
ANR	1310907	UnaryOperationExpression	! pcis -> no_grid_fitting		1310608	0					
ANR	1310908	UnaryOperator	!		1310608	0					
ANR	1310909	PtrMemberAccess	pcis -> no_grid_fitting		1310608	1					
ANR	1310910	Identifier	pcis		1310608	0					
ANR	1310911	Identifier	no_grid_fitting		1310608	1					
ANR	1310912	ExpressionStatement	"gs_setflat ( pgs , pcis -> flatness )"	327:8:10759:10790	1310608	1	True				
ANR	1310913	CallExpression	"gs_setflat ( pgs , pcis -> flatness )"		1310608	0					
ANR	1310914	Callee	gs_setflat		1310608	0					
ANR	1310915	Identifier	gs_setflat		1310608	0					
ANR	1310916	ArgumentList	pgs		1310608	1					
ANR	1310917	Argument	pgs		1310608	0					
ANR	1310918	Identifier	pgs		1310608	0					
ANR	1310919	Argument	pcis -> flatness		1310608	1					
ANR	1310920	PtrMemberAccess	pcis -> flatness		1310608	0					
ANR	1310921	Identifier	pcis		1310608	0					
ANR	1310922	Identifier	flatness		1310608	1					
ANR	1310923	ReturnStatement	return 0 ;	328:4:10796:10804	1310608	4	True				
ANR	1310924	PrimaryExpression	0		1310608	0					
ANR	1310925	ReturnType	int		1310608	1					
ANR	1310926	Identifier	gs_type1_endchar		1310608	2					
ANR	1310927	ParameterList	gs_type1_state * pcis		1310608	3					
ANR	1310928	Parameter	gs_type1_state * pcis	273:17:8701:8721	1310608	0	True				
ANR	1310929	ParameterType	gs_type1_state *		1310608	0					
ANR	1310930	Identifier	pcis		1310608	1					
ANR	1310931	CFGEntryNode	ENTRY		1310608		True				
ANR	1310932	CFGExitNode	EXIT		1310608		True				
ANR	1310933	Symbol	pcis -> no_grid_fitting		1310608						
ANR	1310934	Symbol	* pgs		1310608						
ANR	1310935	Symbol	gs_error_undefined		1310608						
ANR	1310936	Symbol	pfont -> data . procs . seac_data		1310608						
ANR	1310937	Symbol	* * pcis		1310608						
ANR	1310938	Symbol	* pcis -> pfont		1310608						
ANR	1310939	Symbol	pcis -> asb		1310608						
ANR	1310940	Symbol	& agdata		1310608						
ANR	1310941	Symbol	gstr . size		1310608						
ANR	1310942	Symbol	NULL		1310608						
ANR	1310943	Symbol	pcis -> pgs		1310608						
ANR	1310944	Symbol	pcis -> pfont -> PaintType		1310608						
ANR	1310945	Symbol	pcis -> flatness		1310608						
ANR	1310946	Symbol	agdata		1310608						
ANR	1310947	Symbol	buf1		1310608						
ANR	1310948	Symbol	* pcis		1310608						
ANR	1310949	Symbol	achar		1310608						
ANR	1310950	Symbol	buf0		1310608						
ANR	1310951	Symbol	pfont -> data . procs		1310608						
ANR	1310952	Symbol	pgs -> fill_adjust . y		1310608						
ANR	1310953	Symbol	pgs -> fill_adjust . x		1310608						
ANR	1310954	Symbol	pcis -> ips_count		1310608						
ANR	1310955	Symbol	pcis -> pfont -> font_name . chars		1310608						
ANR	1310956	Symbol	code		1310608						
ANR	1310957	Symbol	pfont -> memory		1310608						
ANR	1310958	Symbol	l0		1310608						
ANR	1310959	Symbol	l1		1310608						
ANR	1310960	Symbol	* pcis -> ipstack		1310608						
ANR	1310961	Symbol	* buf1		1310608						
ANR	1310962	Symbol	* buf0		1310608						
ANR	1310963	Symbol	pcis -> os_count		1310608						
ANR	1310964	Symbol	gstr . data		1310608						
ANR	1310965	Symbol	pcis -> adxy		1310608						
ANR	1310966	Symbol	min		1310608						
ANR	1310967	Symbol	pcis -> pfont -> font_name . size		1310608						
ANR	1310968	Symbol	pcis -> pfont		1310608						
ANR	1310969	Symbol	gstr		1310608						
ANR	1310970	Symbol	pgs		1310608						
ANR	1310971	Symbol	pcis -> asb_diff		1310608						
ANR	1310972	Symbol	agdata . memory		1310608						
ANR	1310973	Symbol	pfont		1310608						
ANR	1310974	Symbol	pcis -> compound_lsb . x		1310608						
ANR	1310975	Symbol	* l1		1310608						
ANR	1310976	Symbol	pcis -> ipstack		1310608						
ANR	1310977	Symbol	pcis		1310608						
ANR	1310978	Symbol	pfont -> data		1310608						
ANR	1310979	Symbol	* l0		1310608						
ANR	1310980	Symbol	pcis -> save_adxy		1310608						
ANR	1310981	Symbol	& gstr		1310608						
ANR	1310982	Symbol	pgs -> fill_adjust		1310608						
ANR	1310983	Symbol	* pfont		1310608						
ANR	1310984	Symbol	pcis -> pfont -> font_name		1310608						
ANR	1310985	Symbol	pcis -> seac_accent		1310608						
ANR	1310986	Symbol	pcis -> compound_lsb		1310608						
ANR	1310987	Symbol	pcis -> ipstack [ 0 ] . cs_data		1310608						
ANR	1310988	Function	type1_cis_get_metrics	332:0:10879:11117							
ANR	1310989	FunctionDef	"type1_cis_get_metrics (const gs_type1_state * pcis , double psbw [ 4 ])"		1310988	0					
ANR	1310990	CompoundStatement		334:0:10951:11117	1310988	0					
ANR	1310991	ExpressionStatement	psbw [ 0 ] = fixed2float ( pcis -> lsb . x )	335:4:10957:10991	1310988	0	True				
ANR	1310992	AssignmentExpression	psbw [ 0 ] = fixed2float ( pcis -> lsb . x )		1310988	0		=			
ANR	1310993	ArrayIndexing	psbw [ 0 ]		1310988	0					
ANR	1310994	Identifier	psbw		1310988	0					
ANR	1310995	PrimaryExpression	0		1310988	1					
ANR	1310996	CallExpression	fixed2float ( pcis -> lsb . x )		1310988	1					
ANR	1310997	Callee	fixed2float		1310988	0					
ANR	1310998	Identifier	fixed2float		1310988	0					
ANR	1310999	ArgumentList	pcis -> lsb . x		1310988	1					
ANR	1311000	Argument	pcis -> lsb . x		1310988	0					
ANR	1311001	MemberAccess	pcis -> lsb . x		1310988	0					
ANR	1311002	PtrMemberAccess	pcis -> lsb		1310988	0					
ANR	1311003	Identifier	pcis		1310988	0					
ANR	1311004	Identifier	lsb		1310988	1					
ANR	1311005	Identifier	x		1310988	1					
ANR	1311006	ExpressionStatement	psbw [ 1 ] = fixed2float ( pcis -> lsb . y )	336:4:10997:11031	1310988	1	True				
ANR	1311007	AssignmentExpression	psbw [ 1 ] = fixed2float ( pcis -> lsb . y )		1310988	0		=			
ANR	1311008	ArrayIndexing	psbw [ 1 ]		1310988	0					
ANR	1311009	Identifier	psbw		1310988	0					
ANR	1311010	PrimaryExpression	1		1310988	1					
ANR	1311011	CallExpression	fixed2float ( pcis -> lsb . y )		1310988	1					
ANR	1311012	Callee	fixed2float		1310988	0					
ANR	1311013	Identifier	fixed2float		1310988	0					
ANR	1311014	ArgumentList	pcis -> lsb . y		1310988	1					
ANR	1311015	Argument	pcis -> lsb . y		1310988	0					
ANR	1311016	MemberAccess	pcis -> lsb . y		1310988	0					
ANR	1311017	PtrMemberAccess	pcis -> lsb		1310988	0					
ANR	1311018	Identifier	pcis		1310988	0					
ANR	1311019	Identifier	lsb		1310988	1					
ANR	1311020	Identifier	y		1310988	1					
ANR	1311021	ExpressionStatement	psbw [ 2 ] = fixed2float ( pcis -> width . x )	337:4:11037:11073	1310988	2	True				
ANR	1311022	AssignmentExpression	psbw [ 2 ] = fixed2float ( pcis -> width . x )		1310988	0		=			
ANR	1311023	ArrayIndexing	psbw [ 2 ]		1310988	0					
ANR	1311024	Identifier	psbw		1310988	0					
ANR	1311025	PrimaryExpression	2		1310988	1					
ANR	1311026	CallExpression	fixed2float ( pcis -> width . x )		1310988	1					
ANR	1311027	Callee	fixed2float		1310988	0					
ANR	1311028	Identifier	fixed2float		1310988	0					
ANR	1311029	ArgumentList	pcis -> width . x		1310988	1					
ANR	1311030	Argument	pcis -> width . x		1310988	0					
ANR	1311031	MemberAccess	pcis -> width . x		1310988	0					
ANR	1311032	PtrMemberAccess	pcis -> width		1310988	0					
ANR	1311033	Identifier	pcis		1310988	0					
ANR	1311034	Identifier	width		1310988	1					
ANR	1311035	Identifier	x		1310988	1					
ANR	1311036	ExpressionStatement	psbw [ 3 ] = fixed2float ( pcis -> width . y )	338:4:11079:11115	1310988	3	True				
ANR	1311037	AssignmentExpression	psbw [ 3 ] = fixed2float ( pcis -> width . y )		1310988	0		=			
ANR	1311038	ArrayIndexing	psbw [ 3 ]		1310988	0					
ANR	1311039	Identifier	psbw		1310988	0					
ANR	1311040	PrimaryExpression	3		1310988	1					
ANR	1311041	CallExpression	fixed2float ( pcis -> width . y )		1310988	1					
ANR	1311042	Callee	fixed2float		1310988	0					
ANR	1311043	Identifier	fixed2float		1310988	0					
ANR	1311044	ArgumentList	pcis -> width . y		1310988	1					
ANR	1311045	Argument	pcis -> width . y		1310988	0					
ANR	1311046	MemberAccess	pcis -> width . y		1310988	0					
ANR	1311047	PtrMemberAccess	pcis -> width		1310988	0					
ANR	1311048	Identifier	pcis		1310988	0					
ANR	1311049	Identifier	width		1310988	1					
ANR	1311050	Identifier	y		1310988	1					
ANR	1311051	ReturnType	void		1310988	1					
ANR	1311052	Identifier	type1_cis_get_metrics		1310988	2					
ANR	1311053	ParameterList	"const gs_type1_state * pcis , double psbw [ 4 ]"		1310988	3					
ANR	1311054	Parameter	const gs_type1_state * pcis	333:22:10906:10932	1310988	0	True				
ANR	1311055	ParameterType	const gs_type1_state *		1310988	0					
ANR	1311056	Identifier	pcis		1310988	1					
ANR	1311057	Parameter	double psbw [ 4 ]	333:51:10935:10948	1310988	1	True				
ANR	1311058	ParameterType	double [ 4 ]		1310988	0					
ANR	1311059	Identifier	psbw		1310988	1					
ANR	1311060	CFGEntryNode	ENTRY		1310988		True				
ANR	1311061	CFGExitNode	EXIT		1310988		True				
ANR	1311062	Symbol	* pcis		1310988						
ANR	1311063	Symbol	fixed2float		1310988						
ANR	1311064	Symbol	pcis -> width		1310988						
ANR	1311065	Symbol	pcis -> lsb		1310988						
ANR	1311066	Symbol	pcis		1310988						
ANR	1311067	Symbol	pcis -> width . y		1310988						
ANR	1311068	Symbol	pcis -> width . x		1310988						
ANR	1311069	Symbol	psbw		1310988						
ANR	1311070	Symbol	* psbw		1310988						
ANR	1311071	Symbol	pcis -> lsb . x		1310988						
ANR	1311072	Symbol	pcis -> lsb . y		1310988						
ANR	1311073	Function	gs_type1_piece_codes	348:0:11366:18578							
ANR	1311074	FunctionDef	"gs_type1_piece_codes (gs_font_type1 * pfont , const gs_glyph_data_t * pgd , gs_char * chars)"		1311073	0					
ANR	1311075	CompoundStatement		351:0:11488:18578	1311073	0					
ANR	1311076	Statement	gs_type1_data	352:4:11494:11506	1311073	0	True				
ANR	1311077	Statement	*	352:18:11508:11508	1311073	1	True				
ANR	1311078	Statement	const	352:19:11509:11513	1311073	2	True				
ANR	1311079	ExpressionStatement	pdata = & pfont -> data	352:25:11515:11535	1311073	3	True				
ANR	1311080	AssignmentExpression	pdata = & pfont -> data		1311073	0		=			
ANR	1311081	Identifier	pdata		1311073	0					
ANR	1311082	UnaryOperationExpression	& pfont -> data		1311073	1					
ANR	1311083	UnaryOperator	&		1311073	0					
ANR	1311084	PtrMemberAccess	pfont -> data		1311073	1					
ANR	1311085	Identifier	pfont		1311073	0					
ANR	1311086	Identifier	data		1311073	1					
ANR	1311087	IdentifierDeclStatement	bool encrypted = pdata -> lenIV >= 0 ;	366:4:12208:12242	1311073	4	True				
ANR	1311088	IdentifierDecl	encrypted = pdata -> lenIV >= 0		1311073	0					
ANR	1311089	IdentifierDeclType	bool		1311073	0					
ANR	1311090	Identifier	encrypted		1311073	1					
ANR	1311091	AssignmentExpression	encrypted = pdata -> lenIV >= 0		1311073	2		=			
ANR	1311092	Identifier	encrypted		1311073	0					
ANR	1311093	RelationalExpression	pdata -> lenIV >= 0		1311073	1		>=			
ANR	1311094	PtrMemberAccess	pdata -> lenIV		1311073	0					
ANR	1311095	Identifier	pdata		1311073	0					
ANR	1311096	Identifier	lenIV		1311073	1					
ANR	1311097	PrimaryExpression	0		1311073	1					
ANR	1311098	IdentifierDeclStatement	fixed cstack [ ostack_size ] ;	367:4:12248:12273	1311073	5	True				
ANR	1311099	IdentifierDecl	cstack [ ostack_size ]		1311073	0					
ANR	1311100	IdentifierDeclType	fixed [ ostack_size ]		1311073	0					
ANR	1311101	Identifier	cstack		1311073	1					
ANR	1311102	Identifier	ostack_size		1311073	2					
ANR	1311103	IdentifierDeclStatement	fixed * csp ;	368:4:12279:12289	1311073	6	True				
ANR	1311104	IdentifierDecl	* csp		1311073	0					
ANR	1311105	IdentifierDeclType	fixed *		1311073	0					
ANR	1311106	Identifier	csp		1311073	1					
ANR	1311107	IdentifierDeclStatement	ip_state_t ipstack [ ipstack_size + 1 ] ;	369:4:12295:12331	1311073	7	True				
ANR	1311108	IdentifierDecl	ipstack [ ipstack_size + 1 ]		1311073	0					
ANR	1311109	IdentifierDeclType	ip_state_t [ ipstack_size + 1 ]		1311073	0					
ANR	1311110	Identifier	ipstack		1311073	1					
ANR	1311111	AdditiveExpression	ipstack_size + 1		1311073	2		+			
ANR	1311112	Identifier	ipstack_size		1311073	0					
ANR	1311113	PrimaryExpression	1		1311073	1					
ANR	1311114	IdentifierDeclStatement	ip_state_t * ipsp = & ipstack [ 0 ] ;	370:4:12337:12367	1311073	8	True				
ANR	1311115	IdentifierDecl	* ipsp = & ipstack [ 0 ]		1311073	0					
ANR	1311116	IdentifierDeclType	ip_state_t *		1311073	0					
ANR	1311117	Identifier	ipsp		1311073	1					
ANR	1311118	AssignmentExpression	* ipsp = & ipstack [ 0 ]		1311073	2		=			
ANR	1311119	Identifier	ipsp		1311073	0					
ANR	1311120	UnaryOperationExpression	& ipstack [ 0 ]		1311073	1					
ANR	1311121	UnaryOperator	&		1311073	0					
ANR	1311122	ArrayIndexing	ipstack [ 0 ]		1311073	1					
ANR	1311123	Identifier	ipstack		1311073	0					
ANR	1311124	PrimaryExpression	0		1311073	1					
ANR	1311125	IdentifierDeclStatement	"const byte * cip , * end ;"	371:4:12373:12394	1311073	9	True				
ANR	1311126	IdentifierDecl	* cip		1311073	0					
ANR	1311127	IdentifierDeclType	const byte *		1311073	0					
ANR	1311128	Identifier	cip		1311073	1					
ANR	1311129	IdentifierDecl	* end		1311073	1					
ANR	1311130	IdentifierDeclType	const byte *		1311073	0					
ANR	1311131	Identifier	end		1311073	1					
ANR	1311132	IdentifierDeclStatement	crypt_state state ;	372:4:12400:12417	1311073	10	True				
ANR	1311133	IdentifierDecl	state		1311073	0					
ANR	1311134	IdentifierDeclType	crypt_state		1311073	0					
ANR	1311135	Identifier	state		1311073	1					
ANR	1311136	IdentifierDeclStatement	"int c , hhints = 0 , vhints = 0 ;"	373:4:12423:12452	1311073	11	True				
ANR	1311137	IdentifierDecl	c		1311073	0					
ANR	1311138	IdentifierDeclType	int		1311073	0					
ANR	1311139	Identifier	c		1311073	1					
ANR	1311140	IdentifierDecl	hhints = 0		1311073	1					
ANR	1311141	IdentifierDeclType	int		1311073	0					
ANR	1311142	Identifier	hhints		1311073	1					
ANR	1311143	AssignmentExpression	hhints = 0		1311073	2		=			
ANR	1311144	Identifier	hhints		1311073	0					
ANR	1311145	PrimaryExpression	0		1311073	1					
ANR	1311146	IdentifierDecl	vhints = 0		1311073	2					
ANR	1311147	IdentifierDeclType	int		1311073	0					
ANR	1311148	Identifier	vhints		1311073	1					
ANR	1311149	AssignmentExpression	vhints = 0		1311073	2		=			
ANR	1311150	Identifier	vhints		1311073	0					
ANR	1311151	PrimaryExpression	0		1311073	1					
ANR	1311152	IdentifierDeclStatement	"int code , call_depth = 0 ;"	374:4:12458:12482	1311073	12	True				
ANR	1311153	IdentifierDecl	code		1311073	0					
ANR	1311154	IdentifierDeclType	int		1311073	0					
ANR	1311155	Identifier	code		1311073	1					
ANR	1311156	IdentifierDecl	call_depth = 0		1311073	1					
ANR	1311157	IdentifierDeclType	int		1311073	0					
ANR	1311158	Identifier	call_depth		1311073	1					
ANR	1311159	AssignmentExpression	call_depth = 0		1311073	2		=			
ANR	1311160	Identifier	call_depth		1311073	0					
ANR	1311161	PrimaryExpression	0		1311073	1					
ANR	1311162	ExpressionStatement	"CLEAR_CSTACK ( cstack , csp )"	376:4:12489:12514	1311073	13	True				
ANR	1311163	CallExpression	"CLEAR_CSTACK ( cstack , csp )"		1311073	0					
ANR	1311164	Callee	CLEAR_CSTACK		1311073	0					
ANR	1311165	Identifier	CLEAR_CSTACK		1311073	0					
ANR	1311166	ArgumentList	cstack		1311073	1					
ANR	1311167	Argument	cstack		1311073	0					
ANR	1311168	Identifier	cstack		1311073	0					
ANR	1311169	Argument	csp		1311073	1					
ANR	1311170	Identifier	csp		1311073	0					
ANR	1311171	ExpressionStatement	cip = pgd -> bits . data	377:4:12520:12540	1311073	14	True				
ANR	1311172	AssignmentExpression	cip = pgd -> bits . data		1311073	0		=			
ANR	1311173	Identifier	cip		1311073	0					
ANR	1311174	MemberAccess	pgd -> bits . data		1311073	1					
ANR	1311175	PtrMemberAccess	pgd -> bits		1311073	0					
ANR	1311176	Identifier	pgd		1311073	0					
ANR	1311177	Identifier	bits		1311073	1					
ANR	1311178	Identifier	data		1311073	1					
ANR	1311179	ExpressionStatement	end = pgd -> bits . data + pgd -> bits . size	378:4:12546:12583	1311073	15	True				
ANR	1311180	AssignmentExpression	end = pgd -> bits . data + pgd -> bits . size		1311073	0		=			
ANR	1311181	Identifier	end		1311073	0					
ANR	1311182	AdditiveExpression	pgd -> bits . data + pgd -> bits . size		1311073	1		+			
ANR	1311183	MemberAccess	pgd -> bits . data		1311073	0					
ANR	1311184	PtrMemberAccess	pgd -> bits		1311073	0					
ANR	1311185	Identifier	pgd		1311073	0					
ANR	1311186	Identifier	bits		1311073	1					
ANR	1311187	Identifier	data		1311073	1					
ANR	1311188	MemberAccess	pgd -> bits . size		1311073	1					
ANR	1311189	PtrMemberAccess	pgd -> bits		1311073	0					
ANR	1311190	Identifier	pgd		1311073	0					
ANR	1311191	Identifier	bits		1311073	1					
ANR	1311192	Identifier	size		1311073	1					
ANR	1311193	Label	call :	379:1:12586:12590	1311073	16	True				
ANR	1311194	Identifier	call		1311073	0					
ANR	1311195	ExpressionStatement	state = crypt_charstring_seed	380:4:12596:12625	1311073	17	True				
ANR	1311196	AssignmentExpression	state = crypt_charstring_seed		1311073	0		=			
ANR	1311197	Identifier	state		1311073	0					
ANR	1311198	Identifier	crypt_charstring_seed		1311073	1					
ANR	1311199	IfStatement	if ( encrypted )		1311073	18					
ANR	1311200	Condition	encrypted	381:8:12635:12643	1311073	0	True				
ANR	1311201	Identifier	encrypted		1311073	0					
ANR	1311202	CompoundStatement		32:8:1167:1190	1311073	1					
ANR	1311203	IdentifierDeclStatement	int skip = pdata -> lenIV ;	382:8:12656:12679	1311073	0	True				
ANR	1311204	IdentifierDecl	skip = pdata -> lenIV		1311073	0					
ANR	1311205	IdentifierDeclType	int		1311073	0					
ANR	1311206	Identifier	skip		1311073	1					
ANR	1311207	AssignmentExpression	skip = pdata -> lenIV		1311073	2		=			
ANR	1311208	Identifier	skip		1311073	0					
ANR	1311209	PtrMemberAccess	pdata -> lenIV		1311073	1					
ANR	1311210	Identifier	pdata		1311073	0					
ANR	1311211	Identifier	lenIV		1311073	1					
ANR	1311212	ForStatement	"for ( ; skip > 0 ; ++ cip , -- skip )"		1311073	1					
ANR	1311213	Condition	skip > 0	385:15:12737:12744	1311073	0	True				
ANR	1311214	RelationalExpression	skip > 0		1311073	0		>			
ANR	1311215	Identifier	skip		1311073	0					
ANR	1311216	PrimaryExpression	0		1311073	1					
ANR	1311217	Expression	"++ cip , -- skip"	385:25:12747:12759	1311073	1	True				
ANR	1311218	UnaryExpression	++ cip		1311073	0					
ANR	1311219	IncDec	++		1311073	0					
ANR	1311220	Identifier	cip		1311073	1					
ANR	1311221	UnaryExpression	-- skip		1311073	1					
ANR	1311222	IncDec	--		1311073	0					
ANR	1311223	Identifier	skip		1311073	1					
ANR	1311224	ExpressionStatement	"decrypt_skip_next ( * cip , state )"	386:12:12774:12804	1311073	2	True				
ANR	1311225	CallExpression	"decrypt_skip_next ( * cip , state )"		1311073	0					
ANR	1311226	Callee	decrypt_skip_next		1311073	0					
ANR	1311227	Identifier	decrypt_skip_next		1311073	0					
ANR	1311228	ArgumentList	* cip		1311073	1					
ANR	1311229	Argument	* cip		1311073	0					
ANR	1311230	UnaryOperationExpression	* cip		1311073	0					
ANR	1311231	UnaryOperator	*		1311073	0					
ANR	1311232	Identifier	cip		1311073	1					
ANR	1311233	Argument	state		1311073	1					
ANR	1311234	Identifier	state		1311073	0					
ANR	1311235	Label	top :	388:1:12813:12816	1311073	19	True				
ANR	1311236	Identifier	top		1311073	0					
ANR	1311237	ForStatement	for ( ; ; )		1311073	20					
ANR	1311238	CompoundStatement		68:1:2408:2446	1311073	0					
ANR	1311239	IdentifierDeclStatement	uint c0 ;	390:8:12841:12848	1311073	0	True				
ANR	1311240	IdentifierDecl	c0		1311073	0					
ANR	1311241	IdentifierDeclType	uint		1311073	0					
ANR	1311242	Identifier	c0		1311073	1					
ANR	1311243	IfStatement	if ( cip > end )		1311073	1					
ANR	1311244	Condition	cip > end	392:12:12863:12871	1311073	0	True				
ANR	1311245	RelationalExpression	cip > end		1311073	0		>			
ANR	1311246	Identifier	cip		1311073	0					
ANR	1311247	Identifier	end		1311073	1					
ANR	1311248	GotoStatement	goto out ;	397:12:13133:13141	1311073	1	True				
ANR	1311249	Identifier	out		1311073	0					
ANR	1311250	ExpressionStatement	c0 = * cip ++	399:8:13152:13163	1311073	2	True				
ANR	1311251	AssignmentExpression	c0 = * cip ++		1311073	0		=			
ANR	1311252	Identifier	c0		1311073	0					
ANR	1311253	UnaryOperationExpression	* cip ++		1311073	1					
ANR	1311254	UnaryOperator	*		1311073	0					
ANR	1311255	PostIncDecOperationExpression	cip ++		1311073	1					
ANR	1311256	Identifier	cip		1311073	0					
ANR	1311257	IncDec	++		1311073	1					
ANR	1311258	ExpressionStatement	"charstring_next ( c0 , state , c , encrypted )"	401:8:13174:13214	1311073	3	True				
ANR	1311259	CallExpression	"charstring_next ( c0 , state , c , encrypted )"		1311073	0					
ANR	1311260	Callee	charstring_next		1311073	0					
ANR	1311261	Identifier	charstring_next		1311073	0					
ANR	1311262	ArgumentList	c0		1311073	1					
ANR	1311263	Argument	c0		1311073	0					
ANR	1311264	Identifier	c0		1311073	0					
ANR	1311265	Argument	state		1311073	1					
ANR	1311266	Identifier	state		1311073	0					
ANR	1311267	Argument	c		1311073	2					
ANR	1311268	Identifier	c		1311073	0					
ANR	1311269	Argument	encrypted		1311073	3					
ANR	1311270	Identifier	encrypted		1311073	0					
ANR	1311271	IfStatement	if ( c >= c_num1 )		1311073	4					
ANR	1311272	Condition	c >= c_num1	402:12:13228:13238	1311073	0	True				
ANR	1311273	RelationalExpression	c >= c_num1		1311073	0		>=			
ANR	1311274	Identifier	c		1311073	0					
ANR	1311275	Identifier	c_num1		1311073	1					
ANR	1311276	CompoundStatement		52:25:1752:1752	1311073	1					
ANR	1311277	IfStatement	if ( c < c_pos2_0 )		1311073	0					
ANR	1311278	Condition	c < c_pos2_0	404:16:13331:13342	1311073	0	True				
ANR	1311279	RelationalExpression	c < c_pos2_0		1311073	0		<			
ANR	1311280	Identifier	c		1311073	0					
ANR	1311281	Identifier	c_pos2_0		1311073	1					
ANR	1311282	CompoundStatement		54:30:1856:1856	1311073	1					
ANR	1311283	ExpressionStatement	"decode_push_num1 ( csp , cstack , c )"	405:16:13383:13415	1311073	0	True				
ANR	1311284	CallExpression	"decode_push_num1 ( csp , cstack , c )"		1311073	0					
ANR	1311285	Callee	decode_push_num1		1311073	0					
ANR	1311286	Identifier	decode_push_num1		1311073	0					
ANR	1311287	ArgumentList	csp		1311073	1					
ANR	1311288	Argument	csp		1311073	0					
ANR	1311289	Identifier	csp		1311073	0					
ANR	1311290	Argument	cstack		1311073	1					
ANR	1311291	Identifier	cstack		1311073	0					
ANR	1311292	Argument	c		1311073	2					
ANR	1311293	Identifier	c		1311073	0					
ANR	1311294	ElseStatement	else		1311073	0					
ANR	1311295	IfStatement	if ( c < cx_num4 )		1311073	0					
ANR	1311296	Condition	c < cx_num4	406:23:13440:13450	1311073	0	True				
ANR	1311297	RelationalExpression	c < cx_num4		1311073	0		<			
ANR	1311298	Identifier	c		1311073	0					
ANR	1311299	Identifier	cx_num4		1311073	1					
ANR	1311300	CompoundStatement		56:36:1964:1964	1311073	1					
ANR	1311301	ExpressionStatement	"decode_push_num2 ( csp , cstack , c , cip , state , encrypted )"	407:16:13491:13546	1311073	0	True				
ANR	1311302	CallExpression	"decode_push_num2 ( csp , cstack , c , cip , state , encrypted )"		1311073	0					
ANR	1311303	Callee	decode_push_num2		1311073	0					
ANR	1311304	Identifier	decode_push_num2		1311073	0					
ANR	1311305	ArgumentList	csp		1311073	1					
ANR	1311306	Argument	csp		1311073	0					
ANR	1311307	Identifier	csp		1311073	0					
ANR	1311308	Argument	cstack		1311073	1					
ANR	1311309	Identifier	cstack		1311073	0					
ANR	1311310	Argument	c		1311073	2					
ANR	1311311	Identifier	c		1311073	0					
ANR	1311312	Argument	cip		1311073	3					
ANR	1311313	Identifier	cip		1311073	0					
ANR	1311314	Argument	state		1311073	4					
ANR	1311315	Identifier	state		1311073	0					
ANR	1311316	Argument	encrypted		1311073	5					
ANR	1311317	Identifier	encrypted		1311073	0					
ANR	1311318	ElseStatement	else		1311073	0					
ANR	1311319	IfStatement	if ( c == cx_num4 )		1311073	0					
ANR	1311320	Condition	c == cx_num4	408:23:13571:13582	1311073	0	True				
ANR	1311321	EqualityExpression	c == cx_num4		1311073	0		==			
ANR	1311322	Identifier	c		1311073	0					
ANR	1311323	Identifier	cx_num4		1311073	1					
ANR	1311324	CompoundStatement		59:16:2134:2141	1311073	1					
ANR	1311325	IdentifierDeclStatement	long lw ;	409:16:13623:13630	1311073	0	True				
ANR	1311326	IdentifierDecl	lw		1311073	0					
ANR	1311327	IdentifierDeclType	long		1311073	0					
ANR	1311328	Identifier	lw		1311073	1					
ANR	1311329	ExpressionStatement	"decode_num4 ( lw , cip , state , encrypted )"	411:16:13649:13687	1311073	1	True				
ANR	1311330	CallExpression	"decode_num4 ( lw , cip , state , encrypted )"		1311073	0					
ANR	1311331	Callee	decode_num4		1311073	0					
ANR	1311332	Identifier	decode_num4		1311073	0					
ANR	1311333	ArgumentList	lw		1311073	1					
ANR	1311334	Argument	lw		1311073	0					
ANR	1311335	Identifier	lw		1311073	0					
ANR	1311336	Argument	cip		1311073	1					
ANR	1311337	Identifier	cip		1311073	0					
ANR	1311338	Argument	state		1311073	2					
ANR	1311339	Identifier	state		1311073	0					
ANR	1311340	Argument	encrypted		1311073	3					
ANR	1311341	Identifier	encrypted		1311073	0					
ANR	1311342	ExpressionStatement	"CS_CHECK_PUSH ( csp , cstack )"	412:16:13705:13731	1311073	2	True				
ANR	1311343	CallExpression	"CS_CHECK_PUSH ( csp , cstack )"		1311073	0					
ANR	1311344	Callee	CS_CHECK_PUSH		1311073	0					
ANR	1311345	Identifier	CS_CHECK_PUSH		1311073	0					
ANR	1311346	ArgumentList	csp		1311073	1					
ANR	1311347	Argument	csp		1311073	0					
ANR	1311348	Identifier	csp		1311073	0					
ANR	1311349	Argument	cstack		1311073	1					
ANR	1311350	Identifier	cstack		1311073	0					
ANR	1311351	ExpressionStatement	* ++ csp = int2fixed ( lw )	413:16:13749:13771	1311073	3	True				
ANR	1311352	AssignmentExpression	* ++ csp = int2fixed ( lw )		1311073	0		=			
ANR	1311353	UnaryOperationExpression	* ++ csp		1311073	0					
ANR	1311354	UnaryOperator	*		1311073	0					
ANR	1311355	UnaryExpression	++ csp		1311073	1					
ANR	1311356	IncDec	++		1311073	0					
ANR	1311357	Identifier	csp		1311073	1					
ANR	1311358	CallExpression	int2fixed ( lw )		1311073	1					
ANR	1311359	Callee	int2fixed		1311073	0					
ANR	1311360	Identifier	int2fixed		1311073	0					
ANR	1311361	ArgumentList	lw		1311073	1					
ANR	1311362	Argument	lw		1311073	0					
ANR	1311363	Identifier	lw		1311073	0					
ANR	1311364	ElseStatement	else		1311073	0					
ANR	1311365	ExpressionStatement	return_error ( gs_error_invalidfont )	415:16:13828:13862	1311073	0	True				
ANR	1311366	CallExpression	return_error ( gs_error_invalidfont )		1311073	0					
ANR	1311367	Callee	return_error		1311073	0					
ANR	1311368	Identifier	return_error		1311073	0					
ANR	1311369	ArgumentList	gs_error_invalidfont		1311073	1					
ANR	1311370	Argument	gs_error_invalidfont		1311073	0					
ANR	1311371	Identifier	gs_error_invalidfont		1311073	0					
ANR	1311372	ContinueStatement	continue ;	416:12:13876:13884	1311073	1	True				
ANR	1311373	IdentifierDeclStatement	"define cnext CLEAR_CSTACK ( cstack , csp ) ;"	418:1:13897:13935	1311073	5	True				
ANR	1311374	IdentifierDecl	"CLEAR_CSTACK ( cstack , csp )"		1311073	0					
ANR	1311375	IdentifierDeclType	define cnext		1311073	0					
ANR	1311376	Identifier	CLEAR_CSTACK		1311073	1					
ANR	1311377	Expression	"cstack , csp"		1311073	2					
ANR	1311378	Identifier	cstack		1311073	0					
ANR	1311379	Identifier	csp		1311073	1					
ANR	1311380	Statement	goto	418:41:13937:13940	1311073	6	True				
ANR	1311381	Statement	top	418:46:13942:13944	1311073	7	True				
ANR	1311382	SwitchStatement	switch ( ( char_command ) c )		1311073	8					
ANR	1311383	Condition	( char_command ) c	419:16:13962:13977	1311073	0	True				
ANR	1311384	CastExpression	( char_command ) c		1311073	0					
ANR	1311385	CastTarget	char_command		1311073	0					
ANR	1311386	Identifier	c		1311073	1					
ANR	1311387	CompoundStatement		69:34:2491:2491	1311073	1					
ANR	1311388	Label	default :	420:8:13990:13997	1311073	0	True				
ANR	1311389	Identifier	default		1311073	0					
ANR	1311390	ExpressionStatement	cnext	421:12:14011:14016	1311073	1	True				
ANR	1311391	Identifier	cnext		1311073	0					
ANR	1311392	BreakStatement	break ;	422:12:14030:14035	1311073	2	True				
ANR	1311393	Label	case c2_shortint :	423:8:14045:14061	1311073	3	True				
ANR	1311394	Identifier	c2_shortint		1311073	0					
ANR	1311395	CompoundStatement		75:16:2604:2623	1311073	4					
ANR	1311396	IdentifierDeclStatement	short sint = * cip ++ ;	425:16:14093:14112	1311073	0	True				
ANR	1311397	IdentifierDecl	sint = * cip ++		1311073	0					
ANR	1311398	IdentifierDeclType	short		1311073	0					
ANR	1311399	Identifier	sint		1311073	1					
ANR	1311400	AssignmentExpression	sint = * cip ++		1311073	2		=			
ANR	1311401	Identifier	sint		1311073	0					
ANR	1311402	UnaryOperationExpression	* cip ++		1311073	1					
ANR	1311403	UnaryOperator	*		1311073	0					
ANR	1311404	PostIncDecOperationExpression	cip ++		1311073	1					
ANR	1311405	Identifier	cip		1311073	0					
ANR	1311406	IncDec	++		1311073	1					
ANR	1311407	ExpressionStatement	sint = ( sint << 8 ) + * cip ++	426:16:14130:14157	1311073	1	True				
ANR	1311408	AssignmentExpression	sint = ( sint << 8 ) + * cip ++		1311073	0		=			
ANR	1311409	Identifier	sint		1311073	0					
ANR	1311410	AdditiveExpression	( sint << 8 ) + * cip ++		1311073	1		+			
ANR	1311411	ShiftExpression	sint << 8		1311073	0		<<			
ANR	1311412	Identifier	sint		1311073	0					
ANR	1311413	PrimaryExpression	8		1311073	1					
ANR	1311414	UnaryOperationExpression	* cip ++		1311073	1					
ANR	1311415	UnaryOperator	*		1311073	0					
ANR	1311416	PostIncDecOperationExpression	cip ++		1311073	1					
ANR	1311417	Identifier	cip		1311073	0					
ANR	1311418	IncDec	++		1311073	1					
ANR	1311419	ExpressionStatement	"CS_CHECK_PUSH ( csp , cstack )"	427:16:14175:14201	1311073	2	True				
ANR	1311420	CallExpression	"CS_CHECK_PUSH ( csp , cstack )"		1311073	0					
ANR	1311421	Callee	CS_CHECK_PUSH		1311073	0					
ANR	1311422	Identifier	CS_CHECK_PUSH		1311073	0					
ANR	1311423	ArgumentList	csp		1311073	1					
ANR	1311424	Argument	csp		1311073	0					
ANR	1311425	Identifier	csp		1311073	0					
ANR	1311426	Argument	cstack		1311073	1					
ANR	1311427	Identifier	cstack		1311073	0					
ANR	1311428	ExpressionStatement	* ++ csp = int2fixed ( sint )	428:16:14219:14243	1311073	3	True				
ANR	1311429	AssignmentExpression	* ++ csp = int2fixed ( sint )		1311073	0		=			
ANR	1311430	UnaryOperationExpression	* ++ csp		1311073	0					
ANR	1311431	UnaryOperator	*		1311073	0					
ANR	1311432	UnaryExpression	++ csp		1311073	1					
ANR	1311433	IncDec	++		1311073	0					
ANR	1311434	Identifier	csp		1311073	1					
ANR	1311435	CallExpression	int2fixed ( sint )		1311073	1					
ANR	1311436	Callee	int2fixed		1311073	0					
ANR	1311437	Identifier	int2fixed		1311073	0					
ANR	1311438	ArgumentList	sint		1311073	1					
ANR	1311439	Argument	sint		1311073	0					
ANR	1311440	Identifier	sint		1311073	0					
ANR	1311441	BreakStatement	break ;	430:12:14271:14276	1311073	5	True				
ANR	1311442	Label	case c2_hstemhm :	431:8:14286:14301	1311073	6	True				
ANR	1311443	Identifier	c2_hstemhm		1311073	0					
ANR	1311444	ExpressionStatement	hhints += ( ( csp - cstack ) + 1 ) / 2	432:12:14315:14349	1311073	7	True				
ANR	1311445	AssignmentExpression	hhints += ( ( csp - cstack ) + 1 ) / 2		1311073	0		+=			
ANR	1311446	Identifier	hhints		1311073	0					
ANR	1311447	MultiplicativeExpression	( ( csp - cstack ) + 1 ) / 2		1311073	1		/			
ANR	1311448	AdditiveExpression	( csp - cstack ) + 1		1311073	0		+			
ANR	1311449	AdditiveExpression	csp - cstack		1311073	0		-			
ANR	1311450	Identifier	csp		1311073	0					
ANR	1311451	Identifier	cstack		1311073	1					
ANR	1311452	PrimaryExpression	1		1311073	1					
ANR	1311453	PrimaryExpression	2		1311073	1					
ANR	1311454	ExpressionStatement	cnext	433:12:14363:14368	1311073	8	True				
ANR	1311455	Identifier	cnext		1311073	0					
ANR	1311456	BreakStatement	break ;	434:12:14382:14387	1311073	9	True				
ANR	1311457	Label	case c2_vstemhm :	435:8:14397:14412	1311073	10	True				
ANR	1311458	Identifier	c2_vstemhm		1311073	0					
ANR	1311459	ExpressionStatement	vhints += ( ( csp - cstack ) + 1 ) / 2	436:12:14426:14460	1311073	11	True				
ANR	1311460	AssignmentExpression	vhints += ( ( csp - cstack ) + 1 ) / 2		1311073	0		+=			
ANR	1311461	Identifier	vhints		1311073	0					
ANR	1311462	MultiplicativeExpression	( ( csp - cstack ) + 1 ) / 2		1311073	1		/			
ANR	1311463	AdditiveExpression	( csp - cstack ) + 1		1311073	0		+			
ANR	1311464	AdditiveExpression	csp - cstack		1311073	0		-			
ANR	1311465	Identifier	csp		1311073	0					
ANR	1311466	Identifier	cstack		1311073	1					
ANR	1311467	PrimaryExpression	1		1311073	1					
ANR	1311468	PrimaryExpression	2		1311073	1					
ANR	1311469	ExpressionStatement	cnext	437:12:14474:14479	1311073	12	True				
ANR	1311470	Identifier	cnext		1311073	0					
ANR	1311471	BreakStatement	break ;	438:12:14493:14498	1311073	13	True				
ANR	1311472	Label	case c2_cntrmask :	439:8:14508:14524	1311073	14	True				
ANR	1311473	Identifier	c2_cntrmask		1311073	0					
ANR	1311474	ExpressionStatement	vhints += ( ( csp - cstack ) + 1 ) / 2	440:12:14538:14572	1311073	15	True				
ANR	1311475	AssignmentExpression	vhints += ( ( csp - cstack ) + 1 ) / 2		1311073	0		+=			
ANR	1311476	Identifier	vhints		1311073	0					
ANR	1311477	MultiplicativeExpression	( ( csp - cstack ) + 1 ) / 2		1311073	1		/			
ANR	1311478	AdditiveExpression	( csp - cstack ) + 1		1311073	0		+			
ANR	1311479	AdditiveExpression	csp - cstack		1311073	0		-			
ANR	1311480	Identifier	csp		1311073	0					
ANR	1311481	Identifier	cstack		1311073	1					
ANR	1311482	PrimaryExpression	1		1311073	1					
ANR	1311483	PrimaryExpression	2		1311073	1					
ANR	1311484	ExpressionStatement	cip += ( vhints + hhints + 7 ) / 8	441:12:14586:14618	1311073	16	True				
ANR	1311485	AssignmentExpression	cip += ( vhints + hhints + 7 ) / 8		1311073	0		+=			
ANR	1311486	Identifier	cip		1311073	0					
ANR	1311487	MultiplicativeExpression	( vhints + hhints + 7 ) / 8		1311073	1		/			
ANR	1311488	AdditiveExpression	vhints + hhints + 7		1311073	0		+			
ANR	1311489	Identifier	vhints		1311073	0					
ANR	1311490	AdditiveExpression	hhints + 7		1311073	1		+			
ANR	1311491	Identifier	hhints		1311073	0					
ANR	1311492	PrimaryExpression	7		1311073	1					
ANR	1311493	PrimaryExpression	8		1311073	1					
ANR	1311494	ExpressionStatement	cnext	442:12:14632:14637	1311073	17	True				
ANR	1311495	Identifier	cnext		1311073	0					
ANR	1311496	BreakStatement	break ;	443:12:14651:14656	1311073	18	True				
ANR	1311497	Label	case c2_hintmask :	444:8:14666:14682	1311073	19	True				
ANR	1311498	Identifier	c2_hintmask		1311073	0					
ANR	1311499	CompoundStatement		95:12:3207:3207	1311073	20					
ANR	1311500	IfStatement	if ( csp > cstack )		1311073	0					
ANR	1311501	Condition	csp > cstack	446:20:14718:14729	1311073	0	True				
ANR	1311502	RelationalExpression	csp > cstack		1311073	0		>			
ANR	1311503	Identifier	csp		1311073	0					
ANR	1311504	Identifier	cstack		1311073	1					
ANR	1311505	ExpressionStatement	vhints += ( ( csp - cstack ) + 1 ) / 2	447:20:14752:14786	1311073	1	True				
ANR	1311506	AssignmentExpression	vhints += ( ( csp - cstack ) + 1 ) / 2		1311073	0		+=			
ANR	1311507	Identifier	vhints		1311073	0					
ANR	1311508	MultiplicativeExpression	( ( csp - cstack ) + 1 ) / 2		1311073	1		/			
ANR	1311509	AdditiveExpression	( csp - cstack ) + 1		1311073	0		+			
ANR	1311510	AdditiveExpression	csp - cstack		1311073	0		-			
ANR	1311511	Identifier	csp		1311073	0					
ANR	1311512	Identifier	cstack		1311073	1					
ANR	1311513	PrimaryExpression	1		1311073	1					
ANR	1311514	PrimaryExpression	2		1311073	1					
ANR	1311515	ExpressionStatement	cip += ( vhints + hhints + 7 ) / 8	448:16:14804:14836	1311073	1	True				
ANR	1311516	AssignmentExpression	cip += ( vhints + hhints + 7 ) / 8		1311073	0		+=			
ANR	1311517	Identifier	cip		1311073	0					
ANR	1311518	MultiplicativeExpression	( vhints + hhints + 7 ) / 8		1311073	1		/			
ANR	1311519	AdditiveExpression	vhints + hhints + 7		1311073	0		+			
ANR	1311520	Identifier	vhints		1311073	0					
ANR	1311521	AdditiveExpression	hhints + 7		1311073	1		+			
ANR	1311522	Identifier	hhints		1311073	0					
ANR	1311523	PrimaryExpression	7		1311073	1					
ANR	1311524	PrimaryExpression	8		1311073	1					
ANR	1311525	ExpressionStatement	cnext	449:16:14854:14859	1311073	2	True				
ANR	1311526	Identifier	cnext		1311073	0					
ANR	1311527	BreakStatement	break ;	451:12:14887:14892	1311073	21	True				
ANR	1311528	Label	case c2_callgsubr :	452:8:14902:14919	1311073	22	True				
ANR	1311529	Identifier	c2_callgsubr		1311073	0					
ANR	1311530	ExpressionStatement	call_depth ++	453:12:14933:14945	1311073	23	True				
ANR	1311531	PostIncDecOperationExpression	call_depth ++		1311073	0					
ANR	1311532	Identifier	call_depth		1311073	0					
ANR	1311533	IncDec	++		1311073	1					
ANR	1311534	IfStatement	if ( csp < & ( cstack [ 0 ] ) )		1311073	24					
ANR	1311535	Condition	csp < & ( cstack [ 0 ] )	454:16:14963:14980	1311073	0	True				
ANR	1311536	RelationalExpression	csp < & ( cstack [ 0 ] )		1311073	0		<			
ANR	1311537	Identifier	csp		1311073	0					
ANR	1311538	UnaryOperationExpression	& ( cstack [ 0 ] )		1311073	1					
ANR	1311539	UnaryOperator	&		1311073	0					
ANR	1311540	ArrayIndexing	cstack [ 0 ]		1311073	1					
ANR	1311541	Identifier	cstack		1311073	0					
ANR	1311542	PrimaryExpression	0		1311073	1					
ANR	1311543	CompoundStatement		104:36:3494:3494	1311073	1					
ANR	1311544	ExpressionStatement	c = pdata -> gsubrNumberBias	455:16:15001:15027	1311073	0	True				
ANR	1311545	AssignmentExpression	c = pdata -> gsubrNumberBias		1311073	0		=			
ANR	1311546	Identifier	c		1311073	0					
ANR	1311547	PtrMemberAccess	pdata -> gsubrNumberBias		1311073	1					
ANR	1311548	Identifier	pdata		1311073	0					
ANR	1311549	Identifier	gsubrNumberBias		1311073	1					
ANR	1311550	ElseStatement	else		1311073	0					
ANR	1311551	CompoundStatement		107:17:3571:3571	1311073	0					
ANR	1311552	ExpressionStatement	c = fixed2int_var ( * csp ) + pdata -> gsubrNumberBias	458:16:15078:15126	1311073	0	True				
ANR	1311553	AssignmentExpression	c = fixed2int_var ( * csp ) + pdata -> gsubrNumberBias		1311073	0		=			
ANR	1311554	Identifier	c		1311073	0					
ANR	1311555	AdditiveExpression	fixed2int_var ( * csp ) + pdata -> gsubrNumberBias		1311073	1		+			
ANR	1311556	CallExpression	fixed2int_var ( * csp )		1311073	0					
ANR	1311557	Callee	fixed2int_var		1311073	0					
ANR	1311558	Identifier	fixed2int_var		1311073	0					
ANR	1311559	ArgumentList	* csp		1311073	1					
ANR	1311560	Argument	* csp		1311073	0					
ANR	1311561	UnaryOperationExpression	* csp		1311073	0					
ANR	1311562	UnaryOperator	*		1311073	0					
ANR	1311563	Identifier	csp		1311073	1					
ANR	1311564	PtrMemberAccess	pdata -> gsubrNumberBias		1311073	1					
ANR	1311565	Identifier	pdata		1311073	0					
ANR	1311566	Identifier	gsubrNumberBias		1311073	1					
ANR	1311567	ExpressionStatement	"code = pdata -> procs . subr_data ( pfont , c , true , & ipsp [ 1 ] . cs_data )"	460:12:15154:15234	1311073	25	True				
ANR	1311568	AssignmentExpression	"code = pdata -> procs . subr_data ( pfont , c , true , & ipsp [ 1 ] . cs_data )"		1311073	0		=			
ANR	1311569	Identifier	code		1311073	0					
ANR	1311570	CallExpression	"pdata -> procs . subr_data ( pfont , c , true , & ipsp [ 1 ] . cs_data )"		1311073	1					
ANR	1311571	Callee	pdata -> procs . subr_data		1311073	0					
ANR	1311572	MemberAccess	pdata -> procs . subr_data		1311073	0					
ANR	1311573	PtrMemberAccess	pdata -> procs		1311073	0					
ANR	1311574	Identifier	pdata		1311073	0					
ANR	1311575	Identifier	procs		1311073	1					
ANR	1311576	Identifier	subr_data		1311073	1					
ANR	1311577	ArgumentList	pfont		1311073	1					
ANR	1311578	Argument	pfont		1311073	0					
ANR	1311579	Identifier	pfont		1311073	0					
ANR	1311580	Argument	c		1311073	1					
ANR	1311581	Identifier	c		1311073	0					
ANR	1311582	Argument	true		1311073	2					
ANR	1311583	Identifier	true		1311073	0					
ANR	1311584	Argument	& ipsp [ 1 ] . cs_data		1311073	3					
ANR	1311585	UnaryOperationExpression	& ipsp [ 1 ] . cs_data		1311073	0					
ANR	1311586	UnaryOperator	&		1311073	0					
ANR	1311587	MemberAccess	ipsp [ 1 ] . cs_data		1311073	1					
ANR	1311588	ArrayIndexing	ipsp [ 1 ]		1311073	0					
ANR	1311589	Identifier	ipsp		1311073	0					
ANR	1311590	PrimaryExpression	1		1311073	1					
ANR	1311591	Identifier	cs_data		1311073	1					
ANR	1311592	IfStatement	if ( code < 0 )		1311073	26					
ANR	1311593	Condition	code < 0	462:16:15252:15259	1311073	0	True				
ANR	1311594	RelationalExpression	code < 0		1311073	0		<			
ANR	1311595	Identifier	code		1311073	0					
ANR	1311596	PrimaryExpression	0		1311073	1					
ANR	1311597	ExpressionStatement	return_error ( code )	463:16:15278:15296	1311073	1	True				
ANR	1311598	CallExpression	return_error ( code )		1311073	0					
ANR	1311599	Callee	return_error		1311073	0					
ANR	1311600	Identifier	return_error		1311073	0					
ANR	1311601	ArgumentList	code		1311073	1					
ANR	1311602	Argument	code		1311073	0					
ANR	1311603	Identifier	code		1311073	0					
ANR	1311604	IfStatement	if ( csp >= & ( cstack [ 0 ] ) )		1311073	27					
ANR	1311605	Condition	csp >= & ( cstack [ 0 ] )	464:16:15314:15332	1311073	0	True				
ANR	1311606	RelationalExpression	csp >= & ( cstack [ 0 ] )		1311073	0		>=			
ANR	1311607	Identifier	csp		1311073	0					
ANR	1311608	UnaryOperationExpression	& ( cstack [ 0 ] )		1311073	1					
ANR	1311609	UnaryOperator	&		1311073	0					
ANR	1311610	ArrayIndexing	cstack [ 0 ]		1311073	1					
ANR	1311611	Identifier	cstack		1311073	0					
ANR	1311612	PrimaryExpression	0		1311073	1					
ANR	1311613	CompoundStatement		114:37:3846:3846	1311073	1					
ANR	1311614	ExpressionStatement	-- csp	465:16:15353:15358	1311073	0	True				
ANR	1311615	UnaryExpression	-- csp		1311073	0					
ANR	1311616	IncDec	--		1311073	0					
ANR	1311617	Identifier	csp		1311073	1					
ANR	1311618	ExpressionStatement	"ipsp -> ip = cip , ipsp -> dstate = state , ipsp -> ip_end = end"	467:12:15386:15442	1311073	28	True				
ANR	1311619	Expression	"ipsp -> ip = cip , ipsp -> dstate = state , ipsp -> ip_end = end"		1311073	0					
ANR	1311620	AssignmentExpression	ipsp -> ip = cip		1311073	0		=			
ANR	1311621	PtrMemberAccess	ipsp -> ip		1311073	0					
ANR	1311622	Identifier	ipsp		1311073	0					
ANR	1311623	Identifier	ip		1311073	1					
ANR	1311624	Identifier	cip		1311073	1					
ANR	1311625	Expression	"ipsp -> dstate = state , ipsp -> ip_end = end"		1311073	1					
ANR	1311626	AssignmentExpression	ipsp -> dstate = state		1311073	0		=			
ANR	1311627	PtrMemberAccess	ipsp -> dstate		1311073	0					
ANR	1311628	Identifier	ipsp		1311073	0					
ANR	1311629	Identifier	dstate		1311073	1					
ANR	1311630	Identifier	state		1311073	1					
ANR	1311631	AssignmentExpression	ipsp -> ip_end = end		1311073	1		=			
ANR	1311632	PtrMemberAccess	ipsp -> ip_end		1311073	0					
ANR	1311633	Identifier	ipsp		1311073	0					
ANR	1311634	Identifier	ip_end		1311073	1					
ANR	1311635	Identifier	end		1311073	1					
ANR	1311636	ExpressionStatement	++ ipsp	468:12:15456:15462	1311073	29	True				
ANR	1311637	UnaryExpression	++ ipsp		1311073	0					
ANR	1311638	IncDec	++		1311073	0					
ANR	1311639	Identifier	ipsp		1311073	1					
ANR	1311640	ExpressionStatement	cip = ipsp -> cs_data . bits . data	469:12:15476:15505	1311073	30	True				
ANR	1311641	AssignmentExpression	cip = ipsp -> cs_data . bits . data		1311073	0		=			
ANR	1311642	Identifier	cip		1311073	0					
ANR	1311643	MemberAccess	ipsp -> cs_data . bits . data		1311073	1					
ANR	1311644	MemberAccess	ipsp -> cs_data . bits		1311073	0					
ANR	1311645	PtrMemberAccess	ipsp -> cs_data		1311073	0					
ANR	1311646	Identifier	ipsp		1311073	0					
ANR	1311647	Identifier	cs_data		1311073	1					
ANR	1311648	Identifier	bits		1311073	1					
ANR	1311649	Identifier	data		1311073	1					
ANR	1311650	ExpressionStatement	end = ipsp -> cs_data . bits . data + ipsp -> cs_data . bits . size	470:12:15519:15574	1311073	31	True				
ANR	1311651	AssignmentExpression	end = ipsp -> cs_data . bits . data + ipsp -> cs_data . bits . size		1311073	0		=			
ANR	1311652	Identifier	end		1311073	0					
ANR	1311653	AdditiveExpression	ipsp -> cs_data . bits . data + ipsp -> cs_data . bits . size		1311073	1		+			
ANR	1311654	MemberAccess	ipsp -> cs_data . bits . data		1311073	0					
ANR	1311655	MemberAccess	ipsp -> cs_data . bits		1311073	0					
ANR	1311656	PtrMemberAccess	ipsp -> cs_data		1311073	0					
ANR	1311657	Identifier	ipsp		1311073	0					
ANR	1311658	Identifier	cs_data		1311073	1					
ANR	1311659	Identifier	bits		1311073	1					
ANR	1311660	Identifier	data		1311073	1					
ANR	1311661	MemberAccess	ipsp -> cs_data . bits . size		1311073	1					
ANR	1311662	MemberAccess	ipsp -> cs_data . bits		1311073	0					
ANR	1311663	PtrMemberAccess	ipsp -> cs_data		1311073	0					
ANR	1311664	Identifier	ipsp		1311073	0					
ANR	1311665	Identifier	cs_data		1311073	1					
ANR	1311666	Identifier	bits		1311073	1					
ANR	1311667	Identifier	size		1311073	1					
ANR	1311668	GotoStatement	goto call ;	471:12:15588:15597	1311073	32	True				
ANR	1311669	Identifier	call		1311073	0					
ANR	1311670	Label	case c_callsubr :	472:8:15607:15622	1311073	33	True				
ANR	1311671	Identifier	c_callsubr		1311073	0					
ANR	1311672	ExpressionStatement	call_depth ++	473:12:15636:15648	1311073	34	True				
ANR	1311673	PostIncDecOperationExpression	call_depth ++		1311073	0					
ANR	1311674	Identifier	call_depth		1311073	0					
ANR	1311675	IncDec	++		1311073	1					
ANR	1311676	IfStatement	if ( csp < & ( cstack [ 0 ] ) )		1311073	35					
ANR	1311677	Condition	csp < & ( cstack [ 0 ] )	474:16:15666:15683	1311073	0	True				
ANR	1311678	RelationalExpression	csp < & ( cstack [ 0 ] )		1311073	0		<			
ANR	1311679	Identifier	csp		1311073	0					
ANR	1311680	UnaryOperationExpression	& ( cstack [ 0 ] )		1311073	1					
ANR	1311681	UnaryOperator	&		1311073	0					
ANR	1311682	ArrayIndexing	cstack [ 0 ]		1311073	1					
ANR	1311683	Identifier	cstack		1311073	0					
ANR	1311684	PrimaryExpression	0		1311073	1					
ANR	1311685	CompoundStatement		124:36:4197:4197	1311073	1					
ANR	1311686	ExpressionStatement	c = pdata -> subroutineNumberBias	475:16:15704:15735	1311073	0	True				
ANR	1311687	AssignmentExpression	c = pdata -> subroutineNumberBias		1311073	0		=			
ANR	1311688	Identifier	c		1311073	0					
ANR	1311689	PtrMemberAccess	pdata -> subroutineNumberBias		1311073	1					
ANR	1311690	Identifier	pdata		1311073	0					
ANR	1311691	Identifier	subroutineNumberBias		1311073	1					
ANR	1311692	ElseStatement	else		1311073	0					
ANR	1311693	CompoundStatement		127:17:4279:4279	1311073	0					
ANR	1311694	ExpressionStatement	c = fixed2int_var ( * csp ) + pdata -> subroutineNumberBias	478:16:15786:15839	1311073	0	True				
ANR	1311695	AssignmentExpression	c = fixed2int_var ( * csp ) + pdata -> subroutineNumberBias		1311073	0		=			
ANR	1311696	Identifier	c		1311073	0					
ANR	1311697	AdditiveExpression	fixed2int_var ( * csp ) + pdata -> subroutineNumberBias		1311073	1		+			
ANR	1311698	CallExpression	fixed2int_var ( * csp )		1311073	0					
ANR	1311699	Callee	fixed2int_var		1311073	0					
ANR	1311700	Identifier	fixed2int_var		1311073	0					
ANR	1311701	ArgumentList	* csp		1311073	1					
ANR	1311702	Argument	* csp		1311073	0					
ANR	1311703	UnaryOperationExpression	* csp		1311073	0					
ANR	1311704	UnaryOperator	*		1311073	0					
ANR	1311705	Identifier	csp		1311073	1					
ANR	1311706	PtrMemberAccess	pdata -> subroutineNumberBias		1311073	1					
ANR	1311707	Identifier	pdata		1311073	0					
ANR	1311708	Identifier	subroutineNumberBias		1311073	1					
ANR	1311709	ExpressionStatement	"code = pdata -> procs . subr_data ( pfont , c , false , & ipsp [ 1 ] . cs_data )"	480:12:15867:15948	1311073	36	True				
ANR	1311710	AssignmentExpression	"code = pdata -> procs . subr_data ( pfont , c , false , & ipsp [ 1 ] . cs_data )"		1311073	0		=			
ANR	1311711	Identifier	code		1311073	0					
ANR	1311712	CallExpression	"pdata -> procs . subr_data ( pfont , c , false , & ipsp [ 1 ] . cs_data )"		1311073	1					
ANR	1311713	Callee	pdata -> procs . subr_data		1311073	0					
ANR	1311714	MemberAccess	pdata -> procs . subr_data		1311073	0					
ANR	1311715	PtrMemberAccess	pdata -> procs		1311073	0					
ANR	1311716	Identifier	pdata		1311073	0					
ANR	1311717	Identifier	procs		1311073	1					
ANR	1311718	Identifier	subr_data		1311073	1					
ANR	1311719	ArgumentList	pfont		1311073	1					
ANR	1311720	Argument	pfont		1311073	0					
ANR	1311721	Identifier	pfont		1311073	0					
ANR	1311722	Argument	c		1311073	1					
ANR	1311723	Identifier	c		1311073	0					
ANR	1311724	Argument	false		1311073	2					
ANR	1311725	Identifier	false		1311073	0					
ANR	1311726	Argument	& ipsp [ 1 ] . cs_data		1311073	3					
ANR	1311727	UnaryOperationExpression	& ipsp [ 1 ] . cs_data		1311073	0					
ANR	1311728	UnaryOperator	&		1311073	0					
ANR	1311729	MemberAccess	ipsp [ 1 ] . cs_data		1311073	1					
ANR	1311730	ArrayIndexing	ipsp [ 1 ]		1311073	0					
ANR	1311731	Identifier	ipsp		1311073	0					
ANR	1311732	PrimaryExpression	1		1311073	1					
ANR	1311733	Identifier	cs_data		1311073	1					
ANR	1311734	IfStatement	if ( code < 0 )		1311073	37					
ANR	1311735	Condition	code < 0	482:16:15966:15973	1311073	0	True				
ANR	1311736	RelationalExpression	code < 0		1311073	0		<			
ANR	1311737	Identifier	code		1311073	0					
ANR	1311738	PrimaryExpression	0		1311073	1					
ANR	1311739	ExpressionStatement	return_error ( code )	483:16:15992:16010	1311073	1	True				
ANR	1311740	CallExpression	return_error ( code )		1311073	0					
ANR	1311741	Callee	return_error		1311073	0					
ANR	1311742	Identifier	return_error		1311073	0					
ANR	1311743	ArgumentList	code		1311073	1					
ANR	1311744	Argument	code		1311073	0					
ANR	1311745	Identifier	code		1311073	0					
ANR	1311746	IfStatement	if ( csp >= & ( cstack [ 0 ] ) )		1311073	38					
ANR	1311747	Condition	csp >= & ( cstack [ 0 ] )	484:16:16028:16046	1311073	0	True				
ANR	1311748	RelationalExpression	csp >= & ( cstack [ 0 ] )		1311073	0		>=			
ANR	1311749	Identifier	csp		1311073	0					
ANR	1311750	UnaryOperationExpression	& ( cstack [ 0 ] )		1311073	1					
ANR	1311751	UnaryOperator	&		1311073	0					
ANR	1311752	ArrayIndexing	cstack [ 0 ]		1311073	1					
ANR	1311753	Identifier	cstack		1311073	0					
ANR	1311754	PrimaryExpression	0		1311073	1					
ANR	1311755	CompoundStatement		134:37:4560:4560	1311073	1					
ANR	1311756	ExpressionStatement	-- csp	485:16:16067:16072	1311073	0	True				
ANR	1311757	UnaryExpression	-- csp		1311073	0					
ANR	1311758	IncDec	--		1311073	0					
ANR	1311759	Identifier	csp		1311073	1					
ANR	1311760	ExpressionStatement	"ipsp -> ip = cip , ipsp -> dstate = state , ipsp -> ip_end = end"	487:12:16100:16156	1311073	39	True				
ANR	1311761	Expression	"ipsp -> ip = cip , ipsp -> dstate = state , ipsp -> ip_end = end"		1311073	0					
ANR	1311762	AssignmentExpression	ipsp -> ip = cip		1311073	0		=			
ANR	1311763	PtrMemberAccess	ipsp -> ip		1311073	0					
ANR	1311764	Identifier	ipsp		1311073	0					
ANR	1311765	Identifier	ip		1311073	1					
ANR	1311766	Identifier	cip		1311073	1					
ANR	1311767	Expression	"ipsp -> dstate = state , ipsp -> ip_end = end"		1311073	1					
ANR	1311768	AssignmentExpression	ipsp -> dstate = state		1311073	0		=			
ANR	1311769	PtrMemberAccess	ipsp -> dstate		1311073	0					
ANR	1311770	Identifier	ipsp		1311073	0					
ANR	1311771	Identifier	dstate		1311073	1					
ANR	1311772	Identifier	state		1311073	1					
ANR	1311773	AssignmentExpression	ipsp -> ip_end = end		1311073	1		=			
ANR	1311774	PtrMemberAccess	ipsp -> ip_end		1311073	0					
ANR	1311775	Identifier	ipsp		1311073	0					
ANR	1311776	Identifier	ip_end		1311073	1					
ANR	1311777	Identifier	end		1311073	1					
ANR	1311778	ExpressionStatement	++ ipsp	488:12:16170:16176	1311073	40	True				
ANR	1311779	UnaryExpression	++ ipsp		1311073	0					
ANR	1311780	IncDec	++		1311073	0					
ANR	1311781	Identifier	ipsp		1311073	1					
ANR	1311782	ExpressionStatement	cip = ipsp -> cs_data . bits . data	489:12:16190:16219	1311073	41	True				
ANR	1311783	AssignmentExpression	cip = ipsp -> cs_data . bits . data		1311073	0		=			
ANR	1311784	Identifier	cip		1311073	0					
ANR	1311785	MemberAccess	ipsp -> cs_data . bits . data		1311073	1					
ANR	1311786	MemberAccess	ipsp -> cs_data . bits		1311073	0					
ANR	1311787	PtrMemberAccess	ipsp -> cs_data		1311073	0					
ANR	1311788	Identifier	ipsp		1311073	0					
ANR	1311789	Identifier	cs_data		1311073	1					
ANR	1311790	Identifier	bits		1311073	1					
ANR	1311791	Identifier	data		1311073	1					
ANR	1311792	ExpressionStatement	end = ipsp -> cs_data . bits . data + ipsp -> cs_data . bits . size	490:12:16233:16288	1311073	42	True				
ANR	1311793	AssignmentExpression	end = ipsp -> cs_data . bits . data + ipsp -> cs_data . bits . size		1311073	0		=			
ANR	1311794	Identifier	end		1311073	0					
ANR	1311795	AdditiveExpression	ipsp -> cs_data . bits . data + ipsp -> cs_data . bits . size		1311073	1		+			
ANR	1311796	MemberAccess	ipsp -> cs_data . bits . data		1311073	0					
ANR	1311797	MemberAccess	ipsp -> cs_data . bits		1311073	0					
ANR	1311798	PtrMemberAccess	ipsp -> cs_data		1311073	0					
ANR	1311799	Identifier	ipsp		1311073	0					
ANR	1311800	Identifier	cs_data		1311073	1					
ANR	1311801	Identifier	bits		1311073	1					
ANR	1311802	Identifier	data		1311073	1					
ANR	1311803	MemberAccess	ipsp -> cs_data . bits . size		1311073	1					
ANR	1311804	MemberAccess	ipsp -> cs_data . bits		1311073	0					
ANR	1311805	PtrMemberAccess	ipsp -> cs_data		1311073	0					
ANR	1311806	Identifier	ipsp		1311073	0					
ANR	1311807	Identifier	cs_data		1311073	1					
ANR	1311808	Identifier	bits		1311073	1					
ANR	1311809	Identifier	size		1311073	1					
ANR	1311810	GotoStatement	goto call ;	491:12:16302:16311	1311073	43	True				
ANR	1311811	Identifier	call		1311073	0					
ANR	1311812	Label	case c_return :	492:8:16321:16334	1311073	44	True				
ANR	1311813	Identifier	c_return		1311073	0					
ANR	1311814	IfStatement	if ( call_depth == 0 )		1311073	45					
ANR	1311815	Condition	call_depth == 0	493:16:16352:16366	1311073	0	True				
ANR	1311816	EqualityExpression	call_depth == 0		1311073	0		==			
ANR	1311817	Identifier	call_depth		1311073	0					
ANR	1311818	PrimaryExpression	0		1311073	1					
ANR	1311819	ReturnStatement	return ( gs_note_error ( gs_error_invalidfont ) ) ;	494:16:16385:16429	1311073	1	True				
ANR	1311820	CallExpression	gs_note_error ( gs_error_invalidfont )		1311073	0					
ANR	1311821	Callee	gs_note_error		1311073	0					
ANR	1311822	Identifier	gs_note_error		1311073	0					
ANR	1311823	ArgumentList	gs_error_invalidfont		1311073	1					
ANR	1311824	Argument	gs_error_invalidfont		1311073	0					
ANR	1311825	Identifier	gs_error_invalidfont		1311073	0					
ANR	1311826	ElseStatement	else		1311073	0					
ANR	1311827	ExpressionStatement	call_depth --	496:16:16464:16476	1311073	0	True				
ANR	1311828	PostIncDecOperationExpression	call_depth --		1311073	0					
ANR	1311829	Identifier	call_depth		1311073	0					
ANR	1311830	IncDec	--		1311073	1					
ANR	1311831	ExpressionStatement	"gs_glyph_data_free ( & ipsp -> cs_data , ""gs_type1_piece_codes"" )"	497:12:16490:16548	1311073	46	True				
ANR	1311832	CallExpression	"gs_glyph_data_free ( & ipsp -> cs_data , ""gs_type1_piece_codes"" )"		1311073	0					
ANR	1311833	Callee	gs_glyph_data_free		1311073	0					
ANR	1311834	Identifier	gs_glyph_data_free		1311073	0					
ANR	1311835	ArgumentList	& ipsp -> cs_data		1311073	1					
ANR	1311836	Argument	& ipsp -> cs_data		1311073	0					
ANR	1311837	UnaryOperationExpression	& ipsp -> cs_data		1311073	0					
ANR	1311838	UnaryOperator	&		1311073	0					
ANR	1311839	PtrMemberAccess	ipsp -> cs_data		1311073	1					
ANR	1311840	Identifier	ipsp		1311073	0					
ANR	1311841	Identifier	cs_data		1311073	1					
ANR	1311842	Argument	"""gs_type1_piece_codes"""		1311073	1					
ANR	1311843	PrimaryExpression	"""gs_type1_piece_codes"""		1311073	0					
ANR	1311844	ExpressionStatement	-- ipsp	498:12:16562:16568	1311073	47	True				
ANR	1311845	UnaryExpression	-- ipsp		1311073	0					
ANR	1311846	IncDec	--		1311073	0					
ANR	1311847	Identifier	ipsp		1311073	1					
ANR	1311848	IfStatement	if ( ipsp < ipstack )		1311073	48					
ANR	1311849	Condition	ipsp < ipstack	499:16:16586:16599	1311073	0	True				
ANR	1311850	RelationalExpression	ipsp < ipstack		1311073	0		<			
ANR	1311851	Identifier	ipsp		1311073	0					
ANR	1311852	Identifier	ipstack		1311073	1					
ANR	1311853	ReturnStatement	return ( gs_note_error ( gs_error_invalidfont ) ) ;	500:16:16618:16662	1311073	1	True				
ANR	1311854	CallExpression	gs_note_error ( gs_error_invalidfont )		1311073	0					
ANR	1311855	Callee	gs_note_error		1311073	0					
ANR	1311856	Identifier	gs_note_error		1311073	0					
ANR	1311857	ArgumentList	gs_error_invalidfont		1311073	1					
ANR	1311858	Argument	gs_error_invalidfont		1311073	0					
ANR	1311859	Identifier	gs_error_invalidfont		1311073	0					
ANR	1311860	ExpressionStatement	"cip = ipsp -> ip , state = ipsp -> dstate , end = ipsp -> ip_end"	501:12:16676:16732	1311073	49	True				
ANR	1311861	Expression	"cip = ipsp -> ip , state = ipsp -> dstate , end = ipsp -> ip_end"		1311073	0					
ANR	1311862	AssignmentExpression	cip = ipsp -> ip		1311073	0		=			
ANR	1311863	Identifier	cip		1311073	0					
ANR	1311864	PtrMemberAccess	ipsp -> ip		1311073	1					
ANR	1311865	Identifier	ipsp		1311073	0					
ANR	1311866	Identifier	ip		1311073	1					
ANR	1311867	Expression	"state = ipsp -> dstate , end = ipsp -> ip_end"		1311073	1					
ANR	1311868	AssignmentExpression	state = ipsp -> dstate		1311073	0		=			
ANR	1311869	Identifier	state		1311073	0					
ANR	1311870	PtrMemberAccess	ipsp -> dstate		1311073	1					
ANR	1311871	Identifier	ipsp		1311073	0					
ANR	1311872	Identifier	dstate		1311073	1					
ANR	1311873	AssignmentExpression	end = ipsp -> ip_end		1311073	1		=			
ANR	1311874	Identifier	end		1311073	0					
ANR	1311875	PtrMemberAccess	ipsp -> ip_end		1311073	1					
ANR	1311876	Identifier	ipsp		1311073	0					
ANR	1311877	Identifier	ip_end		1311073	1					
ANR	1311878	GotoStatement	goto top ;	502:12:16746:16754	1311073	50	True				
ANR	1311879	Identifier	top		1311073	0					
ANR	1311880	Label	case cx_hstem :	503:8:16764:16777	1311073	51	True				
ANR	1311881	Identifier	cx_hstem		1311073	0					
ANR	1311882	ExpressionStatement	hhints += ( ( csp - cstack ) + 1 ) / 2	504:12:16791:16825	1311073	52	True				
ANR	1311883	AssignmentExpression	hhints += ( ( csp - cstack ) + 1 ) / 2		1311073	0		+=			
ANR	1311884	Identifier	hhints		1311073	0					
ANR	1311885	MultiplicativeExpression	( ( csp - cstack ) + 1 ) / 2		1311073	1		/			
ANR	1311886	AdditiveExpression	( csp - cstack ) + 1		1311073	0		+			
ANR	1311887	AdditiveExpression	csp - cstack		1311073	0		-			
ANR	1311888	Identifier	csp		1311073	0					
ANR	1311889	Identifier	cstack		1311073	1					
ANR	1311890	PrimaryExpression	1		1311073	1					
ANR	1311891	PrimaryExpression	2		1311073	1					
ANR	1311892	ExpressionStatement	cnext	505:12:16839:16844	1311073	53	True				
ANR	1311893	Identifier	cnext		1311073	0					
ANR	1311894	BreakStatement	break ;	506:12:16858:16863	1311073	54	True				
ANR	1311895	Label	case cx_vstem :	507:8:16873:16886	1311073	55	True				
ANR	1311896	Identifier	cx_vstem		1311073	0					
ANR	1311897	ExpressionStatement	vhints += ( ( csp - cstack ) + 1 ) / 2	508:12:16900:16934	1311073	56	True				
ANR	1311898	AssignmentExpression	vhints += ( ( csp - cstack ) + 1 ) / 2		1311073	0		+=			
ANR	1311899	Identifier	vhints		1311073	0					
ANR	1311900	MultiplicativeExpression	( ( csp - cstack ) + 1 ) / 2		1311073	1		/			
ANR	1311901	AdditiveExpression	( csp - cstack ) + 1		1311073	0		+			
ANR	1311902	AdditiveExpression	csp - cstack		1311073	0		-			
ANR	1311903	Identifier	csp		1311073	0					
ANR	1311904	Identifier	cstack		1311073	1					
ANR	1311905	PrimaryExpression	1		1311073	1					
ANR	1311906	PrimaryExpression	2		1311073	1					
ANR	1311907	ExpressionStatement	cnext	509:12:16948:16953	1311073	57	True				
ANR	1311908	Identifier	cnext		1311073	0					
ANR	1311909	BreakStatement	break ;	510:12:16967:16972	1311073	58	True				
ANR	1311910	Label	case c1_hsbw :	511:8:16982:16994	1311073	59	True				
ANR	1311911	Identifier	c1_hsbw		1311073	0					
ANR	1311912	ExpressionStatement	cnext	512:12:17008:17013	1311073	60	True				
ANR	1311913	Identifier	cnext		1311073	0					
ANR	1311914	Label	case cx_endchar :	513:8:17023:17038	1311073	61	True				
ANR	1311915	Identifier	cx_endchar		1311073	0					
ANR	1311916	IfStatement	if ( csp < cstack + 3 )		1311073	62					
ANR	1311917	Condition	csp < cstack + 3	514:16:17056:17071	1311073	0	True				
ANR	1311918	RelationalExpression	csp < cstack + 3		1311073	0		<			
ANR	1311919	Identifier	csp		1311073	0					
ANR	1311920	AdditiveExpression	cstack + 3		1311073	1		+			
ANR	1311921	Identifier	cstack		1311073	0					
ANR	1311922	PrimaryExpression	3		1311073	1					
ANR	1311923	GotoStatement	goto out ;	515:16:17090:17098	1311073	1	True				
ANR	1311924	Identifier	out		1311073	0					
ANR	1311925	Label	do_seac :	516:8:17123:17130	1311073	63	True				
ANR	1311926	Identifier	do_seac		1311073	0					
ANR	1311927	IfStatement	"if ( CS_CHECK_CSTACK_BOUNDS ( & csp [ - 1 ] , cstack ) )"		1311073	64					
ANR	1311928	Condition	"CS_CHECK_CSTACK_BOUNDS ( & csp [ - 1 ] , cstack )"	518:16:17204:17243	1311073	0	True				
ANR	1311929	CallExpression	"CS_CHECK_CSTACK_BOUNDS ( & csp [ - 1 ] , cstack )"		1311073	0					
ANR	1311930	Callee	CS_CHECK_CSTACK_BOUNDS		1311073	0					
ANR	1311931	Identifier	CS_CHECK_CSTACK_BOUNDS		1311073	0					
ANR	1311932	ArgumentList	& csp [ - 1 ]		1311073	1					
ANR	1311933	Argument	& csp [ - 1 ]		1311073	0					
ANR	1311934	UnaryOperationExpression	& csp [ - 1 ]		1311073	0					
ANR	1311935	UnaryOperator	&		1311073	0					
ANR	1311936	ArrayIndexing	csp [ - 1 ]		1311073	1					
ANR	1311937	Identifier	csp		1311073	0					
ANR	1311938	UnaryOperationExpression	- 1		1311073	1					
ANR	1311939	UnaryOperator	-		1311073	0					
ANR	1311940	PrimaryExpression	1		1311073	1					
ANR	1311941	Argument	cstack		1311073	1					
ANR	1311942	Identifier	cstack		1311073	0					
ANR	1311943	CompoundStatement		168:58:5757:5757	1311073	1					
ANR	1311944	ExpressionStatement	chars [ 0 ] = fixed2int ( csp [ - 1 ] )	519:16:17264:17293	1311073	0	True				
ANR	1311945	AssignmentExpression	chars [ 0 ] = fixed2int ( csp [ - 1 ] )		1311073	0		=			
ANR	1311946	ArrayIndexing	chars [ 0 ]		1311073	0					
ANR	1311947	Identifier	chars		1311073	0					
ANR	1311948	PrimaryExpression	0		1311073	1					
ANR	1311949	CallExpression	fixed2int ( csp [ - 1 ] )		1311073	1					
ANR	1311950	Callee	fixed2int		1311073	0					
ANR	1311951	Identifier	fixed2int		1311073	0					
ANR	1311952	ArgumentList	csp [ - 1 ]		1311073	1					
ANR	1311953	Argument	csp [ - 1 ]		1311073	0					
ANR	1311954	ArrayIndexing	csp [ - 1 ]		1311073	0					
ANR	1311955	Identifier	csp		1311073	0					
ANR	1311956	UnaryOperationExpression	- 1		1311073	1					
ANR	1311957	UnaryOperator	-		1311073	0					
ANR	1311958	PrimaryExpression	1		1311073	1					
ANR	1311959	ExpressionStatement	chars [ 1 ] = fixed2int ( csp [ 0 ] )	520:16:17311:17339	1311073	1	True				
ANR	1311960	AssignmentExpression	chars [ 1 ] = fixed2int ( csp [ 0 ] )		1311073	0		=			
ANR	1311961	ArrayIndexing	chars [ 1 ]		1311073	0					
ANR	1311962	Identifier	chars		1311073	0					
ANR	1311963	PrimaryExpression	1		1311073	1					
ANR	1311964	CallExpression	fixed2int ( csp [ 0 ] )		1311073	1					
ANR	1311965	Callee	fixed2int		1311073	0					
ANR	1311966	Identifier	fixed2int		1311073	0					
ANR	1311967	ArgumentList	csp [ 0 ]		1311073	1					
ANR	1311968	Argument	csp [ 0 ]		1311073	0					
ANR	1311969	ArrayIndexing	csp [ 0 ]		1311073	0					
ANR	1311970	Identifier	csp		1311073	0					
ANR	1311971	PrimaryExpression	0		1311073	1					
ANR	1311972	ReturnStatement	return 1 ;	521:16:17357:17365	1311073	2	True				
ANR	1311973	PrimaryExpression	1		1311073	0					
ANR	1311974	ElseStatement	else		1311073	0					
ANR	1311975	CompoundStatement		173:17:5909:5909	1311073	0					
ANR	1311976	ExpressionStatement	return_error ( gs_error_invalidfont )	524:16:17416:17450	1311073	0	True				
ANR	1311977	CallExpression	return_error ( gs_error_invalidfont )		1311073	0					
ANR	1311978	Callee	return_error		1311073	0					
ANR	1311979	Identifier	return_error		1311073	0					
ANR	1311980	ArgumentList	gs_error_invalidfont		1311073	1					
ANR	1311981	Argument	gs_error_invalidfont		1311073	0					
ANR	1311982	Identifier	gs_error_invalidfont		1311073	0					
ANR	1311983	Label	case cx_escape :	526:8:17474:17488	1311073	65	True				
ANR	1311984	Identifier	cx_escape		1311073	0					
ANR	1311985	ExpressionStatement	"charstring_next ( * cip , state , c , encrypted )"	527:12:17502:17544	1311073	66	True				
ANR	1311986	CallExpression	"charstring_next ( * cip , state , c , encrypted )"		1311073	0					
ANR	1311987	Callee	charstring_next		1311073	0					
ANR	1311988	Identifier	charstring_next		1311073	0					
ANR	1311989	ArgumentList	* cip		1311073	1					
ANR	1311990	Argument	* cip		1311073	0					
ANR	1311991	UnaryOperationExpression	* cip		1311073	0					
ANR	1311992	UnaryOperator	*		1311073	0					
ANR	1311993	Identifier	cip		1311073	1					
ANR	1311994	Argument	state		1311073	1					
ANR	1311995	Identifier	state		1311073	0					
ANR	1311996	Argument	c		1311073	2					
ANR	1311997	Identifier	c		1311073	0					
ANR	1311998	Argument	encrypted		1311073	3					
ANR	1311999	Identifier	encrypted		1311073	0					
ANR	1312000	ExpressionStatement	++ cip	528:12:17558:17563	1311073	67	True				
ANR	1312001	UnaryExpression	++ cip		1311073	0					
ANR	1312002	IncDec	++		1311073	0					
ANR	1312003	Identifier	cip		1311073	1					
ANR	1312004	SwitchStatement	switch ( ( char1_extended_command ) c )		1311073	68					
ANR	1312005	Condition	( char1_extended_command ) c	529:20:17585:17610	1311073	0	True				
ANR	1312006	CastExpression	( char1_extended_command ) c		1311073	0					
ANR	1312007	CastTarget	char1_extended_command		1311073	0					
ANR	1312008	Identifier	c		1311073	1					
ANR	1312009	CompoundStatement		179:48:6124:6124	1311073	1					
ANR	1312010	Label	default :	530:12:17627:17634	1311073	0	True				
ANR	1312011	Identifier	default		1311073	0					
ANR	1312012	GotoStatement	goto out ;	531:16:17652:17660	1311073	1	True				
ANR	1312013	Identifier	out		1311073	0					
ANR	1312014	Label	case ce1_vstem3 :	532:12:17674:17689	1311073	2	True				
ANR	1312015	Identifier	ce1_vstem3		1311073	0					
ANR	1312016	Label	case ce1_hstem3 :	533:12:17703:17718	1311073	3	True				
ANR	1312017	Identifier	ce1_hstem3		1311073	0					
ANR	1312018	Label	case ce1_sbw :	534:12:17732:17744	1311073	4	True				
ANR	1312019	Identifier	ce1_sbw		1311073	0					
ANR	1312020	ExpressionStatement	cnext	535:16:17762:17767	1311073	5	True				
ANR	1312021	Identifier	cnext		1311073	0					
ANR	1312022	Label	case ce1_pop :	536:12:17781:17793	1311073	6	True				
ANR	1312023	Identifier	ce1_pop		1311073	0					
ANR	1312024	GotoStatement	goto top ;	541:16:17957:17965	1311073	7	True				
ANR	1312025	Identifier	top		1311073	0					
ANR	1312026	Label	case ce1_seac :	542:12:17979:17992	1311073	8	True				
ANR	1312027	Identifier	ce1_seac		1311073	0					
ANR	1312028	GotoStatement	goto do_seac ;	543:16:18010:18022	1311073	9	True				
ANR	1312029	Identifier	do_seac		1311073	0					
ANR	1312030	Label	case ce1_callothersubr :	544:12:18036:18058	1311073	10	True				
ANR	1312031	Identifier	ce1_callothersubr		1311073	0					
ANR	1312032	SwitchStatement	switch ( fixed2int_var ( * csp ) )		1311073	11					
ANR	1312033	Condition	fixed2int_var ( * csp )	545:24:18084:18102	1311073	0	True				
ANR	1312034	CallExpression	fixed2int_var ( * csp )		1311073	0					
ANR	1312035	Callee	fixed2int_var		1311073	0					
ANR	1312036	Identifier	fixed2int_var		1311073	0					
ANR	1312037	ArgumentList	* csp		1311073	1					
ANR	1312038	Argument	* csp		1311073	0					
ANR	1312039	UnaryOperationExpression	* csp		1311073	0					
ANR	1312040	UnaryOperator	*		1311073	0					
ANR	1312041	Identifier	csp		1311073	1					
ANR	1312042	CompoundStatement		195:45:6616:6616	1311073	1					
ANR	1312043	Label	default :	546:16:18123:18130	1311073	0	True				
ANR	1312044	Identifier	default		1311073	0					
ANR	1312045	GotoStatement	goto out ;	547:20:18152:18160	1311073	1	True				
ANR	1312046	Identifier	out		1311073	0					
ANR	1312047	Label	case 3 :	548:16:18178:18184	1311073	2	True				
ANR	1312048	IfStatement	if ( csp >= & ( cstack [ 1 ] ) )		1311073	3					
ANR	1312049	Condition	csp >= & ( cstack [ 1 ] )	549:24:18210:18228	1311073	0	True				
ANR	1312050	RelationalExpression	csp >= & ( cstack [ 1 ] )		1311073	0		>=			
ANR	1312051	Identifier	csp		1311073	0					
ANR	1312052	UnaryOperationExpression	& ( cstack [ 1 ] )		1311073	1					
ANR	1312053	UnaryOperator	&		1311073	0					
ANR	1312054	ArrayIndexing	cstack [ 1 ]		1311073	1					
ANR	1312055	Identifier	cstack		1311073	0					
ANR	1312056	PrimaryExpression	1		1311073	1					
ANR	1312057	ExpressionStatement	csp -= 2	550:24:18255:18263	1311073	1	True				
ANR	1312058	AssignmentExpression	csp -= 2		1311073	0		-=			
ANR	1312059	Identifier	csp		1311073	0					
ANR	1312060	PrimaryExpression	2		1311073	1					
ANR	1312061	GotoStatement	goto top ;	551:20:18285:18293	1311073	4	True				
ANR	1312062	Identifier	top		1311073	0					
ANR	1312063	Label	case 12 :	552:16:18311:18318	1311073	5	True				
ANR	1312064	Label	case 13 :	553:16:18336:18343	1311073	6	True				
ANR	1312065	Label	case 14 :	554:16:18361:18368	1311073	7	True				
ANR	1312066	Label	case 15 :	555:16:18386:18393	1311073	8	True				
ANR	1312067	Label	case 16 :	556:16:18411:18418	1311073	9	True				
ANR	1312068	Label	case 17 :	557:16:18436:18443	1311073	10	True				
ANR	1312069	Label	case 18 :	558:16:18461:18468	1311073	11	True				
ANR	1312070	ExpressionStatement	cnext	559:20:18490:18495	1311073	12	True				
ANR	1312071	Identifier	cnext		1311073	0					
ANR	1312072	Statement	undef	563:1:18540:18544	1311073	9	True				
ANR	1312073	Statement	cnext	563:7:18546:18550	1311073	10	True				
ANR	1312074	Label	out :	565:1:18559:18562	1311073	21	True				
ANR	1312075	Identifier	out		1311073	0					
ANR	1312076	ReturnStatement	return 0 ;	566:4:18568:18576	1311073	22	True				
ANR	1312077	PrimaryExpression	0		1311073	0					
ANR	1312078	ReturnType	int		1311073	1					
ANR	1312079	Identifier	gs_type1_piece_codes		1311073	2					
ANR	1312080	ParameterList	"gs_font_type1 * pfont , const gs_glyph_data_t * pgd , gs_char * chars"		1311073	3					
ANR	1312081	Parameter	gs_font_type1 * pfont	349:31:11401:11420	1311073	0	True				
ANR	1312082	ParameterType	gs_font_type1 *		1311073	0					
ANR	1312083	Identifier	pfont		1311073	1					
ANR	1312084	Parameter	const gs_glyph_data_t * pgd	350:21:11444:11469	1311073	1	True				
ANR	1312085	ParameterType	const gs_glyph_data_t *		1311073	0					
ANR	1312086	Identifier	pgd		1311073	1					
ANR	1312087	Parameter	gs_char * chars	350:49:11472:11485	1311073	2	True				
ANR	1312088	ParameterType	gs_char *		1311073	0					
ANR	1312089	Identifier	chars		1311073	1					
ANR	1312090	CFGEntryNode	ENTRY		1311073		True				
ANR	1312091	CFGExitNode	EXIT		1311073		True				
ANR	1312092	InfiniteForNode	true		1311073		True				
ANR	1312093	Symbol	csp		1311073						
ANR	1312094	Symbol	ipsp -> cs_data		1311073						
ANR	1312095	Symbol	pdata -> lenIV		1311073						
ANR	1312096	Symbol	hhints		1311073						
ANR	1312097	Symbol	* cip		1311073						
ANR	1312098	Symbol	lw		1311073						
ANR	1312099	Symbol	ipsp -> cs_data . bits		1311073						
ANR	1312100	Symbol	* cip ++		1311073						
ANR	1312101	Symbol	fixed2int		1311073						
ANR	1312102	Symbol	c_num1		1311073						
ANR	1312103	Symbol	ipsp -> ip_end		1311073						
ANR	1312104	Symbol	state		1311073						
ANR	1312105	Symbol	* pdata		1311073						
ANR	1312106	Symbol	pdata -> subroutineNumberBias		1311073						
ANR	1312107	Symbol	c_pos2_0		1311073						
ANR	1312108	Symbol	CS_CHECK_CSTACK_BOUNDS		1311073						
ANR	1312109	Symbol	& pfont -> data		1311073						
ANR	1312110	Symbol	crypt_charstring_seed		1311073						
ANR	1312111	Symbol	sint		1311073						
ANR	1312112	Symbol	c0		1311073						
ANR	1312113	Symbol	pdata -> procs		1311073						
ANR	1312114	Symbol	* pgd		1311073						
ANR	1312115	Symbol	true		1311073						
ANR	1312116	Symbol	ipsp -> ip		1311073						
ANR	1312117	Symbol	pdata		1311073						
ANR	1312118	Symbol	code		1311073						
ANR	1312119	Symbol	cx_num4		1311073						
ANR	1312120	Symbol	pgd -> bits . size		1311073						
ANR	1312121	Symbol	skip		1311073						
ANR	1312122	Symbol	cip		1311073						
ANR	1312123	Symbol	pdata -> gsubrNumberBias		1311073						
ANR	1312124	Symbol	pgd		1311073						
ANR	1312125	Symbol	vhints		1311073						
ANR	1312126	Symbol	& ipsp [ 1 ] . cs_data		1311073						
ANR	1312127	Symbol	* csp		1311073						
ANR	1312128	Symbol	ipstack		1311073						
ANR	1312129	Symbol	end		1311073						
ANR	1312130	Symbol	ipsp -> cs_data . bits . data		1311073						
ANR	1312131	Symbol	gs_error_invalidfont		1311073						
ANR	1312132	Symbol	c		1311073						
ANR	1312133	Symbol	call_depth		1311073						
ANR	1312134	Symbol	* chars		1311073						
ANR	1312135	Symbol	pfont		1311073						
ANR	1312136	Symbol	* ipsp		1311073						
ANR	1312137	Symbol	false		1311073						
ANR	1312138	Symbol	* ++ csp		1311073						
ANR	1312139	Symbol	gs_note_error		1311073						
ANR	1312140	Symbol	pgd -> bits		1311073						
ANR	1312141	Symbol	encrypted		1311073						
ANR	1312142	Symbol	ipsp		1311073						
ANR	1312143	Symbol	pgd -> bits . data		1311073						
ANR	1312144	Symbol	int2fixed		1311073						
ANR	1312145	Symbol	pdata -> procs . subr_data		1311073						
ANR	1312146	Symbol	ipsp -> cs_data . bits . size		1311073						
ANR	1312147	Symbol	& ipsp -> cs_data		1311073						
ANR	1312148	Symbol	CLEAR_CSTACK		1311073						
ANR	1312149	Symbol	ipsp -> dstate		1311073						
ANR	1312150	Symbol	chars		1311073						
ANR	1312151	Symbol	fixed2int_var		1311073						
ANR	1312152	Symbol	cstack		1311073						
ANR	1312153	Function	gs_type1_glyph_pieces	574:0:18790:19567							
ANR	1312154	FunctionDef	"gs_type1_glyph_pieces (gs_font_type1 * pfont , const gs_glyph_data_t * pgd , int members , gs_glyph_info_t * info)"		1312153	0					
ANR	1312155	CompoundStatement		577:0:18931:19567	1312153	0					
ANR	1312156	IdentifierDeclStatement	gs_char chars [ 2 ] ;	578:4:18937:18953	1312153	0	True				
ANR	1312157	IdentifierDecl	chars [ 2 ]		1312153	0					
ANR	1312158	IdentifierDeclType	gs_char [ 2 ]		1312153	0					
ANR	1312159	Identifier	chars		1312153	1					
ANR	1312160	PrimaryExpression	2		1312153	2					
ANR	1312161	IdentifierDeclStatement	gs_glyph glyphs [ 2 ] ;	579:4:18959:18977	1312153	1	True				
ANR	1312162	IdentifierDecl	glyphs [ 2 ]		1312153	0					
ANR	1312163	IdentifierDeclType	gs_glyph [ 2 ]		1312153	0					
ANR	1312164	Identifier	glyphs		1312153	1					
ANR	1312165	PrimaryExpression	2		1312153	2					
ANR	1312166	IdentifierDeclStatement	"int code = gs_type1_piece_codes ( pfont , pgd , chars ) ;"	580:4:18983:19033	1312153	2	True				
ANR	1312167	IdentifierDecl	"code = gs_type1_piece_codes ( pfont , pgd , chars )"		1312153	0					
ANR	1312168	IdentifierDeclType	int		1312153	0					
ANR	1312169	Identifier	code		1312153	1					
ANR	1312170	AssignmentExpression	"code = gs_type1_piece_codes ( pfont , pgd , chars )"		1312153	2		=			
ANR	1312171	Identifier	code		1312153	0					
ANR	1312172	CallExpression	"gs_type1_piece_codes ( pfont , pgd , chars )"		1312153	1					
ANR	1312173	Callee	gs_type1_piece_codes		1312153	0					
ANR	1312174	Identifier	gs_type1_piece_codes		1312153	0					
ANR	1312175	ArgumentList	pfont		1312153	1					
ANR	1312176	Argument	pfont		1312153	0					
ANR	1312177	Identifier	pfont		1312153	0					
ANR	1312178	Argument	pgd		1312153	1					
ANR	1312179	Identifier	pgd		1312153	0					
ANR	1312180	Argument	chars		1312153	2					
ANR	1312181	Identifier	chars		1312153	0					
ANR	1312182	Statement	gs_type1_data	581:4:19039:19051	1312153	3	True				
ANR	1312183	Statement	*	581:18:19053:19053	1312153	4	True				
ANR	1312184	Statement	const	581:19:19054:19058	1312153	5	True				
ANR	1312185	ExpressionStatement	pdata = & pfont -> data	581:25:19060:19080	1312153	6	True				
ANR	1312186	AssignmentExpression	pdata = & pfont -> data		1312153	0		=			
ANR	1312187	Identifier	pdata		1312153	0					
ANR	1312188	UnaryOperationExpression	& pfont -> data		1312153	1					
ANR	1312189	UnaryOperator	&		1312153	0					
ANR	1312190	PtrMemberAccess	pfont -> data		1312153	1					
ANR	1312191	Identifier	pfont		1312153	0					
ANR	1312192	Identifier	data		1312153	1					
ANR	1312193	IdentifierDeclStatement	gs_glyph * pieces = ( members & GLYPH_INFO_PIECES ? info -> pieces : glyphs ) ;	582:4:19086:19166	1312153	7	True				
ANR	1312194	IdentifierDecl	* pieces = ( members & GLYPH_INFO_PIECES ? info -> pieces : glyphs )		1312153	0					
ANR	1312195	IdentifierDeclType	gs_glyph *		1312153	0					
ANR	1312196	Identifier	pieces		1312153	1					
ANR	1312197	AssignmentExpression	* pieces = ( members & GLYPH_INFO_PIECES ? info -> pieces : glyphs )		1312153	2		=			
ANR	1312198	Identifier	pieces		1312153	0					
ANR	1312199	ConditionalExpression	members & GLYPH_INFO_PIECES ? info -> pieces : glyphs		1312153	1					
ANR	1312200	Condition	members & GLYPH_INFO_PIECES		1312153	0					
ANR	1312201	BitAndExpression	members & GLYPH_INFO_PIECES		1312153	0		&			
ANR	1312202	Identifier	members		1312153	0					
ANR	1312203	Identifier	GLYPH_INFO_PIECES		1312153	1					
ANR	1312204	PtrMemberAccess	info -> pieces		1312153	1					
ANR	1312205	Identifier	info		1312153	0					
ANR	1312206	Identifier	pieces		1312153	1					
ANR	1312207	Identifier	glyphs		1312153	2					
ANR	1312208	IdentifierDeclStatement	gs_const_string gstr ;	584:4:19172:19192	1312153	8	True				
ANR	1312209	IdentifierDecl	gstr		1312153	0					
ANR	1312210	IdentifierDeclType	gs_const_string		1312153	0					
ANR	1312211	Identifier	gstr		1312153	1					
ANR	1312212	IdentifierDeclStatement	"int acode , bcode ;"	585:4:19198:19214	1312153	9	True				
ANR	1312213	IdentifierDecl	acode		1312153	0					
ANR	1312214	IdentifierDeclType	int		1312153	0					
ANR	1312215	Identifier	acode		1312153	1					
ANR	1312216	IdentifierDecl	bcode		1312153	1					
ANR	1312217	IdentifierDeclType	int		1312153	0					
ANR	1312218	Identifier	bcode		1312153	1					
ANR	1312219	ExpressionStatement	info -> num_pieces = 0	587:4:19221:19241	1312153	10	True				
ANR	1312220	AssignmentExpression	info -> num_pieces = 0		1312153	0		=			
ANR	1312221	PtrMemberAccess	info -> num_pieces		1312153	0					
ANR	1312222	Identifier	info		1312153	0					
ANR	1312223	Identifier	num_pieces		1312153	1					
ANR	1312224	PrimaryExpression	0		1312153	1					
ANR	1312225	IfStatement	if ( code <= 0 )		1312153	11					
ANR	1312226	Condition	code <= 0	588:8:19265:19273	1312153	0	True				
ANR	1312227	RelationalExpression	code <= 0		1312153	0		<=			
ANR	1312228	Identifier	code		1312153	0					
ANR	1312229	PrimaryExpression	0		1312153	1					
ANR	1312230	ReturnStatement	return code ;	589:8:19315:19326	1312153	1	True				
ANR	1312231	Identifier	code		1312153	0					
ANR	1312232	ExpressionStatement	"bcode = pdata -> procs . seac_data ( pfont , chars [ 0 ] , & pieces [ 0 ] , & gstr , NULL )"	590:4:19332:19404	1312153	12	True				
ANR	1312233	AssignmentExpression	"bcode = pdata -> procs . seac_data ( pfont , chars [ 0 ] , & pieces [ 0 ] , & gstr , NULL )"		1312153	0		=			
ANR	1312234	Identifier	bcode		1312153	0					
ANR	1312235	CallExpression	"pdata -> procs . seac_data ( pfont , chars [ 0 ] , & pieces [ 0 ] , & gstr , NULL )"		1312153	1					
ANR	1312236	Callee	pdata -> procs . seac_data		1312153	0					
ANR	1312237	MemberAccess	pdata -> procs . seac_data		1312153	0					
ANR	1312238	PtrMemberAccess	pdata -> procs		1312153	0					
ANR	1312239	Identifier	pdata		1312153	0					
ANR	1312240	Identifier	procs		1312153	1					
ANR	1312241	Identifier	seac_data		1312153	1					
ANR	1312242	ArgumentList	pfont		1312153	1					
ANR	1312243	Argument	pfont		1312153	0					
ANR	1312244	Identifier	pfont		1312153	0					
ANR	1312245	Argument	chars [ 0 ]		1312153	1					
ANR	1312246	ArrayIndexing	chars [ 0 ]		1312153	0					
ANR	1312247	Identifier	chars		1312153	0					
ANR	1312248	PrimaryExpression	0		1312153	1					
ANR	1312249	Argument	& pieces [ 0 ]		1312153	2					
ANR	1312250	UnaryOperationExpression	& pieces [ 0 ]		1312153	0					
ANR	1312251	UnaryOperator	&		1312153	0					
ANR	1312252	ArrayIndexing	pieces [ 0 ]		1312153	1					
ANR	1312253	Identifier	pieces		1312153	0					
ANR	1312254	PrimaryExpression	0		1312153	1					
ANR	1312255	Argument	& gstr		1312153	3					
ANR	1312256	UnaryOperationExpression	& gstr		1312153	0					
ANR	1312257	UnaryOperator	&		1312153	0					
ANR	1312258	Identifier	gstr		1312153	1					
ANR	1312259	Argument	NULL		1312153	4					
ANR	1312260	Identifier	NULL		1312153	0					
ANR	1312261	ExpressionStatement	"acode = pdata -> procs . seac_data ( pfont , chars [ 1 ] , & pieces [ 1 ] , & gstr , NULL )"	591:4:19410:19482	1312153	13	True				
ANR	1312262	AssignmentExpression	"acode = pdata -> procs . seac_data ( pfont , chars [ 1 ] , & pieces [ 1 ] , & gstr , NULL )"		1312153	0		=			
ANR	1312263	Identifier	acode		1312153	0					
ANR	1312264	CallExpression	"pdata -> procs . seac_data ( pfont , chars [ 1 ] , & pieces [ 1 ] , & gstr , NULL )"		1312153	1					
ANR	1312265	Callee	pdata -> procs . seac_data		1312153	0					
ANR	1312266	MemberAccess	pdata -> procs . seac_data		1312153	0					
ANR	1312267	PtrMemberAccess	pdata -> procs		1312153	0					
ANR	1312268	Identifier	pdata		1312153	0					
ANR	1312269	Identifier	procs		1312153	1					
ANR	1312270	Identifier	seac_data		1312153	1					
ANR	1312271	ArgumentList	pfont		1312153	1					
ANR	1312272	Argument	pfont		1312153	0					
ANR	1312273	Identifier	pfont		1312153	0					
ANR	1312274	Argument	chars [ 1 ]		1312153	1					
ANR	1312275	ArrayIndexing	chars [ 1 ]		1312153	0					
ANR	1312276	Identifier	chars		1312153	0					
ANR	1312277	PrimaryExpression	1		1312153	1					
ANR	1312278	Argument	& pieces [ 1 ]		1312153	2					
ANR	1312279	UnaryOperationExpression	& pieces [ 1 ]		1312153	0					
ANR	1312280	UnaryOperator	&		1312153	0					
ANR	1312281	ArrayIndexing	pieces [ 1 ]		1312153	1					
ANR	1312282	Identifier	pieces		1312153	0					
ANR	1312283	PrimaryExpression	1		1312153	1					
ANR	1312284	Argument	& gstr		1312153	3					
ANR	1312285	UnaryOperationExpression	& gstr		1312153	0					
ANR	1312286	UnaryOperator	&		1312153	0					
ANR	1312287	Identifier	gstr		1312153	1					
ANR	1312288	Argument	NULL		1312153	4					
ANR	1312289	Identifier	NULL		1312153	0					
ANR	1312290	ExpressionStatement	code = ( bcode < 0 ? bcode : acode )	592:4:19488:19522	1312153	14	True				
ANR	1312291	AssignmentExpression	code = ( bcode < 0 ? bcode : acode )		1312153	0		=			
ANR	1312292	Identifier	code		1312153	0					
ANR	1312293	ConditionalExpression	bcode < 0 ? bcode : acode		1312153	1					
ANR	1312294	Condition	bcode < 0		1312153	0					
ANR	1312295	RelationalExpression	bcode < 0		1312153	0		<			
ANR	1312296	Identifier	bcode		1312153	0					
ANR	1312297	PrimaryExpression	0		1312153	1					
ANR	1312298	Identifier	bcode		1312153	1					
ANR	1312299	Identifier	acode		1312153	2					
ANR	1312300	ExpressionStatement	info -> num_pieces = 2	593:4:19528:19548	1312153	15	True				
ANR	1312301	AssignmentExpression	info -> num_pieces = 2		1312153	0		=			
ANR	1312302	PtrMemberAccess	info -> num_pieces		1312153	0					
ANR	1312303	Identifier	info		1312153	0					
ANR	1312304	Identifier	num_pieces		1312153	1					
ANR	1312305	PrimaryExpression	2		1312153	1					
ANR	1312306	ReturnStatement	return code ;	594:4:19554:19565	1312153	16	True				
ANR	1312307	Identifier	code		1312153	0					
ANR	1312308	ReturnType	static int		1312153	1					
ANR	1312309	Identifier	gs_type1_glyph_pieces		1312153	2					
ANR	1312310	ParameterList	"gs_font_type1 * pfont , const gs_glyph_data_t * pgd , int members , gs_glyph_info_t * info"		1312153	3					
ANR	1312311	Parameter	gs_font_type1 * pfont	575:22:18823:18842	1312153	0	True				
ANR	1312312	ParameterType	gs_font_type1 *		1312153	0					
ANR	1312313	Identifier	pfont		1312153	1					
ANR	1312314	Parameter	const gs_glyph_data_t * pgd	575:44:18845:18870	1312153	1	True				
ANR	1312315	ParameterType	const gs_glyph_data_t *		1312153	0					
ANR	1312316	Identifier	pgd		1312153	1					
ANR	1312317	Parameter	int members	576:22:18895:18905	1312153	2	True				
ANR	1312318	ParameterType	int		1312153	0					
ANR	1312319	Identifier	members		1312153	1					
ANR	1312320	Parameter	gs_glyph_info_t * info	576:35:18908:18928	1312153	3	True				
ANR	1312321	ParameterType	gs_glyph_info_t *		1312153	0					
ANR	1312322	Identifier	info		1312153	1					
ANR	1312323	CFGEntryNode	ENTRY		1312153		True				
ANR	1312324	CFGExitNode	EXIT		1312153		True				
ANR	1312325	Symbol	& pfont -> data		1312153						
ANR	1312326	Symbol	code		1312153						
ANR	1312327	Symbol	pdata		1312153						
ANR	1312328	Symbol	* chars		1312153						
ANR	1312329	Symbol	NULL		1312153						
ANR	1312330	Symbol	pfont		1312153						
ANR	1312331	Symbol	GLYPH_INFO_PIECES		1312153						
ANR	1312332	Symbol	glyphs		1312153						
ANR	1312333	Symbol	acode		1312153						
ANR	1312334	Symbol	pgd		1312153						
ANR	1312335	Symbol	& gstr		1312153						
ANR	1312336	Symbol	pdata -> procs		1312153						
ANR	1312337	Symbol	pieces		1312153						
ANR	1312338	Symbol	info -> pieces		1312153						
ANR	1312339	Symbol	gs_type1_piece_codes		1312153						
ANR	1312340	Symbol	info -> num_pieces		1312153						
ANR	1312341	Symbol	members		1312153						
ANR	1312342	Symbol	pdata -> procs . seac_data		1312153						
ANR	1312343	Symbol	gstr		1312153						
ANR	1312344	Symbol	* info		1312153						
ANR	1312345	Symbol	bcode		1312153						
ANR	1312346	Symbol	chars		1312153						
ANR	1312347	Symbol	* pdata		1312153						
ANR	1312348	Symbol	info		1312153						
ANR	1312349	Function	gs_type1_glyph_info	597:0:19570:22703							
ANR	1312350	FunctionDef	"gs_type1_glyph_info (gs_font * font , gs_glyph glyph , const gs_matrix * pmat , int members , gs_glyph_info_t * info)"		1312349	0					
ANR	1312351	CompoundStatement		600:0:19704:22703	1312349	0					
ANR	1312352	Statement	gs_font_type1	601:4:19710:19722	1312349	0	True				
ANR	1312353	Statement	*	601:18:19724:19724	1312349	1	True				
ANR	1312354	Statement	const	601:19:19725:19729	1312349	2	True				
ANR	1312355	ExpressionStatement	pfont = ( gs_font_type1 * ) font	601:25:19731:19760	1312349	3	True				
ANR	1312356	AssignmentExpression	pfont = ( gs_font_type1 * ) font		1312349	0		=			
ANR	1312357	Identifier	pfont		1312349	0					
ANR	1312358	CastExpression	( gs_font_type1 * ) font		1312349	1					
ANR	1312359	CastTarget	gs_font_type1 *		1312349	0					
ANR	1312360	Identifier	font		1312349	1					
ANR	1312361	Statement	gs_type1_data	602:4:19766:19778	1312349	4	True				
ANR	1312362	Statement	*	602:18:19780:19780	1312349	5	True				
ANR	1312363	Statement	const	602:19:19781:19785	1312349	6	True				
ANR	1312364	ExpressionStatement	pdata = & pfont -> data	602:25:19787:19807	1312349	7	True				
ANR	1312365	AssignmentExpression	pdata = & pfont -> data		1312349	0		=			
ANR	1312366	Identifier	pdata		1312349	0					
ANR	1312367	UnaryOperationExpression	& pfont -> data		1312349	1					
ANR	1312368	UnaryOperator	&		1312349	0					
ANR	1312369	PtrMemberAccess	pfont -> data		1312349	1					
ANR	1312370	Identifier	pfont		1312349	0					
ANR	1312371	Identifier	data		1312349	1					
ANR	1312372	IdentifierDeclStatement	int wmode = ( ( members & GLYPH_INFO_WIDTH1 ) != 0 ) ;	603:4:19813:19861	1312349	8	True				
ANR	1312373	IdentifierDecl	wmode = ( ( members & GLYPH_INFO_WIDTH1 ) != 0 )		1312349	0					
ANR	1312374	IdentifierDeclType	int		1312349	0					
ANR	1312375	Identifier	wmode		1312349	1					
ANR	1312376	AssignmentExpression	wmode = ( ( members & GLYPH_INFO_WIDTH1 ) != 0 )		1312349	2		=			
ANR	1312377	Identifier	wmode		1312349	0					
ANR	1312378	EqualityExpression	( members & GLYPH_INFO_WIDTH1 ) != 0		1312349	1		!=			
ANR	1312379	BitAndExpression	members & GLYPH_INFO_WIDTH1		1312349	0		&			
ANR	1312380	Identifier	members		1312349	0					
ANR	1312381	Identifier	GLYPH_INFO_WIDTH1		1312349	1					
ANR	1312382	PrimaryExpression	0		1312349	1					
ANR	1312383	IdentifierDeclStatement	int piece_members = members & ( GLYPH_INFO_NUM_PIECES | GLYPH_INFO_PIECES ) ;	604:4:19867:19940	1312349	9	True				
ANR	1312384	IdentifierDecl	piece_members = members & ( GLYPH_INFO_NUM_PIECES | GLYPH_INFO_PIECES )		1312349	0					
ANR	1312385	IdentifierDeclType	int		1312349	0					
ANR	1312386	Identifier	piece_members		1312349	1					
ANR	1312387	AssignmentExpression	piece_members = members & ( GLYPH_INFO_NUM_PIECES | GLYPH_INFO_PIECES )		1312349	2		=			
ANR	1312388	Identifier	piece_members		1312349	0					
ANR	1312389	BitAndExpression	members & ( GLYPH_INFO_NUM_PIECES | GLYPH_INFO_PIECES )		1312349	1		&			
ANR	1312390	Identifier	members		1312349	0					
ANR	1312391	InclusiveOrExpression	GLYPH_INFO_NUM_PIECES | GLYPH_INFO_PIECES		1312349	1		|			
ANR	1312392	Identifier	GLYPH_INFO_NUM_PIECES		1312349	0					
ANR	1312393	Identifier	GLYPH_INFO_PIECES		1312349	1					
ANR	1312394	IdentifierDeclStatement	int width_members = ( members & ( ( GLYPH_INFO_WIDTH0 << wmode ) | ( GLYPH_INFO_VVECTOR0 << wmode ) ) ) ;	605:4:19946:20041	1312349	10	True				
ANR	1312395	IdentifierDecl	width_members = ( members & ( ( GLYPH_INFO_WIDTH0 << wmode ) | ( GLYPH_INFO_VVECTOR0 << wmode ) ) )		1312349	0					
ANR	1312396	IdentifierDeclType	int		1312349	0					
ANR	1312397	Identifier	width_members		1312349	1					
ANR	1312398	AssignmentExpression	width_members = ( members & ( ( GLYPH_INFO_WIDTH0 << wmode ) | ( GLYPH_INFO_VVECTOR0 << wmode ) ) )		1312349	2		=			
ANR	1312399	Identifier	width_members		1312349	0					
ANR	1312400	BitAndExpression	members & ( ( GLYPH_INFO_WIDTH0 << wmode ) | ( GLYPH_INFO_VVECTOR0 << wmode ) )		1312349	1		&			
ANR	1312401	Identifier	members		1312349	0					
ANR	1312402	InclusiveOrExpression	( GLYPH_INFO_WIDTH0 << wmode ) | ( GLYPH_INFO_VVECTOR0 << wmode )		1312349	1		|			
ANR	1312403	ShiftExpression	GLYPH_INFO_WIDTH0 << wmode		1312349	0		<<			
ANR	1312404	Identifier	GLYPH_INFO_WIDTH0		1312349	0					
ANR	1312405	Identifier	wmode		1312349	1					
ANR	1312406	ShiftExpression	GLYPH_INFO_VVECTOR0 << wmode		1312349	1		<<			
ANR	1312407	Identifier	GLYPH_INFO_VVECTOR0		1312349	0					
ANR	1312408	Identifier	wmode		1312349	1					
ANR	1312409	IdentifierDeclStatement	int default_members = members & ~ ( piece_members | GLYPH_INFO_WIDTHS | GLYPH_INFO_VVECTOR0 | GLYPH_INFO_VVECTOR1 | GLYPH_INFO_OUTLINE_WIDTHS ) ;	606:4:20047:20261	1312349	11	True				
ANR	1312410	IdentifierDecl	default_members = members & ~ ( piece_members | GLYPH_INFO_WIDTHS | GLYPH_INFO_VVECTOR0 | GLYPH_INFO_VVECTOR1 | GLYPH_INFO_OUTLINE_WIDTHS )		1312349	0					
ANR	1312411	IdentifierDeclType	int		1312349	0					
ANR	1312412	Identifier	default_members		1312349	1					
ANR	1312413	AssignmentExpression	default_members = members & ~ ( piece_members | GLYPH_INFO_WIDTHS | GLYPH_INFO_VVECTOR0 | GLYPH_INFO_VVECTOR1 | GLYPH_INFO_OUTLINE_WIDTHS )		1312349	2		=			
ANR	1312414	Identifier	default_members		1312349	0					
ANR	1312415	BitAndExpression	members & ~ ( piece_members | GLYPH_INFO_WIDTHS | GLYPH_INFO_VVECTOR0 | GLYPH_INFO_VVECTOR1 | GLYPH_INFO_OUTLINE_WIDTHS )		1312349	1		&			
ANR	1312416	Identifier	members		1312349	0					
ANR	1312417	UnaryOperationExpression	~ ( piece_members | GLYPH_INFO_WIDTHS | GLYPH_INFO_VVECTOR0 | GLYPH_INFO_VVECTOR1 | GLYPH_INFO_OUTLINE_WIDTHS )		1312349	1					
ANR	1312418	UnaryOperator	~		1312349	0					
ANR	1312419	InclusiveOrExpression	piece_members | GLYPH_INFO_WIDTHS | GLYPH_INFO_VVECTOR0 | GLYPH_INFO_VVECTOR1 | GLYPH_INFO_OUTLINE_WIDTHS		1312349	1		|			
ANR	1312420	Identifier	piece_members		1312349	0					
ANR	1312421	InclusiveOrExpression	GLYPH_INFO_WIDTHS | GLYPH_INFO_VVECTOR0 | GLYPH_INFO_VVECTOR1 | GLYPH_INFO_OUTLINE_WIDTHS		1312349	1		|			
ANR	1312422	Identifier	GLYPH_INFO_WIDTHS		1312349	0					
ANR	1312423	InclusiveOrExpression	GLYPH_INFO_VVECTOR0 | GLYPH_INFO_VVECTOR1 | GLYPH_INFO_OUTLINE_WIDTHS		1312349	1		|			
ANR	1312424	Identifier	GLYPH_INFO_VVECTOR0		1312349	0					
ANR	1312425	InclusiveOrExpression	GLYPH_INFO_VVECTOR1 | GLYPH_INFO_OUTLINE_WIDTHS		1312349	1		|			
ANR	1312426	Identifier	GLYPH_INFO_VVECTOR1		1312349	0					
ANR	1312427	Identifier	GLYPH_INFO_OUTLINE_WIDTHS		1312349	1					
ANR	1312428	IdentifierDeclStatement	int code = 0 ;	609:4:20267:20279	1312349	12	True				
ANR	1312429	IdentifierDecl	code = 0		1312349	0					
ANR	1312430	IdentifierDeclType	int		1312349	0					
ANR	1312431	Identifier	code		1312349	1					
ANR	1312432	AssignmentExpression	code = 0		1312349	2		=			
ANR	1312433	Identifier	code		1312349	0					
ANR	1312434	PrimaryExpression	0		1312349	1					
ANR	1312435	IdentifierDeclStatement	gs_glyph_data_t gdata ;	610:4:20285:20306	1312349	13	True				
ANR	1312436	IdentifierDecl	gdata		1312349	0					
ANR	1312437	IdentifierDeclType	gs_glyph_data_t		1312349	0					
ANR	1312438	Identifier	gdata		1312349	1					
ANR	1312439	IfStatement	if ( default_members )		1312349	14					
ANR	1312440	Condition	default_members	612:8:20317:20331	1312349	0	True				
ANR	1312441	Identifier	default_members		1312349	0					
ANR	1312442	CompoundStatement		13:25:629:629	1312349	1					
ANR	1312443	ExpressionStatement	"code = gs_default_glyph_info ( font , glyph , pmat , default_members , info )"	613:8:20344:20414	1312349	0	True				
ANR	1312444	AssignmentExpression	"code = gs_default_glyph_info ( font , glyph , pmat , default_members , info )"		1312349	0		=			
ANR	1312445	Identifier	code		1312349	0					
ANR	1312446	CallExpression	"gs_default_glyph_info ( font , glyph , pmat , default_members , info )"		1312349	1					
ANR	1312447	Callee	gs_default_glyph_info		1312349	0					
ANR	1312448	Identifier	gs_default_glyph_info		1312349	0					
ANR	1312449	ArgumentList	font		1312349	1					
ANR	1312450	Argument	font		1312349	0					
ANR	1312451	Identifier	font		1312349	0					
ANR	1312452	Argument	glyph		1312349	1					
ANR	1312453	Identifier	glyph		1312349	0					
ANR	1312454	Argument	pmat		1312349	2					
ANR	1312455	Identifier	pmat		1312349	0					
ANR	1312456	Argument	default_members		1312349	3					
ANR	1312457	Identifier	default_members		1312349	0					
ANR	1312458	Argument	info		1312349	4					
ANR	1312459	Identifier	info		1312349	0					
ANR	1312460	IfStatement	if ( code < 0 )		1312349	1					
ANR	1312461	Condition	code < 0	615:12:20429:20436	1312349	0	True				
ANR	1312462	RelationalExpression	code < 0		1312349	0		<			
ANR	1312463	Identifier	code		1312349	0					
ANR	1312464	PrimaryExpression	0		1312349	1					
ANR	1312465	ReturnStatement	return code ;	616:12:20451:20462	1312349	1	True				
ANR	1312466	Identifier	code		1312349	0					
ANR	1312467	ElseStatement	else		1312349	0					
ANR	1312468	ExpressionStatement	info -> members = 0	618:8:20483:20500	1312349	0	True				
ANR	1312469	AssignmentExpression	info -> members = 0		1312349	0		=			
ANR	1312470	PtrMemberAccess	info -> members		1312349	0					
ANR	1312471	Identifier	info		1312349	0					
ANR	1312472	Identifier	members		1312349	1					
ANR	1312473	PrimaryExpression	0		1312349	1					
ANR	1312474	IfStatement	if ( default_members == members )		1312349	15					
ANR	1312475	Condition	default_members == members	620:8:20511:20536	1312349	0	True				
ANR	1312476	EqualityExpression	default_members == members		1312349	0		==			
ANR	1312477	Identifier	default_members		1312349	0					
ANR	1312478	Identifier	members		1312349	1					
ANR	1312479	ReturnStatement	return code ;	621:8:20547:20558	1312349	1	True				
ANR	1312480	Identifier	code		1312349	0					
ANR	1312481	ExpressionStatement	gdata . memory = pfont -> memory	623:4:20581:20609	1312349	16	True				
ANR	1312482	AssignmentExpression	gdata . memory = pfont -> memory		1312349	0		=			
ANR	1312483	MemberAccess	gdata . memory		1312349	0					
ANR	1312484	Identifier	gdata		1312349	0					
ANR	1312485	Identifier	memory		1312349	1					
ANR	1312486	PtrMemberAccess	pfont -> memory		1312349	1					
ANR	1312487	Identifier	pfont		1312349	0					
ANR	1312488	Identifier	memory		1312349	1					
ANR	1312489	IfStatement	"if ( ( code = pdata -> procs . glyph_data ( pfont , glyph , & gdata ) ) < 0 )"		1312349	17					
ANR	1312490	Condition	"( code = pdata -> procs . glyph_data ( pfont , glyph , & gdata ) ) < 0"	624:8:20619:20676	1312349	0	True				
ANR	1312491	RelationalExpression	"( code = pdata -> procs . glyph_data ( pfont , glyph , & gdata ) ) < 0"		1312349	0		<			
ANR	1312492	AssignmentExpression	"code = pdata -> procs . glyph_data ( pfont , glyph , & gdata )"		1312349	0		=			
ANR	1312493	Identifier	code		1312349	0					
ANR	1312494	CallExpression	"pdata -> procs . glyph_data ( pfont , glyph , & gdata )"		1312349	1					
ANR	1312495	Callee	pdata -> procs . glyph_data		1312349	0					
ANR	1312496	MemberAccess	pdata -> procs . glyph_data		1312349	0					
ANR	1312497	PtrMemberAccess	pdata -> procs		1312349	0					
ANR	1312498	Identifier	pdata		1312349	0					
ANR	1312499	Identifier	procs		1312349	1					
ANR	1312500	Identifier	glyph_data		1312349	1					
ANR	1312501	ArgumentList	pfont		1312349	1					
ANR	1312502	Argument	pfont		1312349	0					
ANR	1312503	Identifier	pfont		1312349	0					
ANR	1312504	Argument	glyph		1312349	1					
ANR	1312505	Identifier	glyph		1312349	0					
ANR	1312506	Argument	& gdata		1312349	2					
ANR	1312507	UnaryOperationExpression	& gdata		1312349	0					
ANR	1312508	UnaryOperator	&		1312349	0					
ANR	1312509	Identifier	gdata		1312349	1					
ANR	1312510	PrimaryExpression	0		1312349	1					
ANR	1312511	ReturnStatement	return code ;	625:8:20687:20698	1312349	1	True				
ANR	1312512	Identifier	code		1312349	0					
ANR	1312513	IfStatement	if ( piece_members )		1312349	18					
ANR	1312514	Condition	piece_members	627:8:20735:20747	1312349	0	True				
ANR	1312515	Identifier	piece_members		1312349	0					
ANR	1312516	CompoundStatement		28:23:1045:1045	1312349	1					
ANR	1312517	ExpressionStatement	"code = gs_type1_glyph_pieces ( pfont , & gdata , members , info )"	628:8:20760:20818	1312349	0	True				
ANR	1312518	AssignmentExpression	"code = gs_type1_glyph_pieces ( pfont , & gdata , members , info )"		1312349	0		=			
ANR	1312519	Identifier	code		1312349	0					
ANR	1312520	CallExpression	"gs_type1_glyph_pieces ( pfont , & gdata , members , info )"		1312349	1					
ANR	1312521	Callee	gs_type1_glyph_pieces		1312349	0					
ANR	1312522	Identifier	gs_type1_glyph_pieces		1312349	0					
ANR	1312523	ArgumentList	pfont		1312349	1					
ANR	1312524	Argument	pfont		1312349	0					
ANR	1312525	Identifier	pfont		1312349	0					
ANR	1312526	Argument	& gdata		1312349	1					
ANR	1312527	UnaryOperationExpression	& gdata		1312349	0					
ANR	1312528	UnaryOperator	&		1312349	0					
ANR	1312529	Identifier	gdata		1312349	1					
ANR	1312530	Argument	members		1312349	2					
ANR	1312531	Identifier	members		1312349	0					
ANR	1312532	Argument	info		1312349	3					
ANR	1312533	Identifier	info		1312349	0					
ANR	1312534	IfStatement	if ( code < 0 )		1312349	1					
ANR	1312535	Condition	code < 0	629:12:20832:20839	1312349	0	True				
ANR	1312536	RelationalExpression	code < 0		1312349	0		<			
ANR	1312537	Identifier	code		1312349	0					
ANR	1312538	PrimaryExpression	0		1312349	1					
ANR	1312539	ReturnStatement	return code ;	630:12:20854:20865	1312349	1	True				
ANR	1312540	Identifier	code		1312349	0					
ANR	1312541	ExpressionStatement	info -> members |= piece_members	631:8:20875:20905	1312349	2	True				
ANR	1312542	AssignmentExpression	info -> members |= piece_members		1312349	0		|=			
ANR	1312543	PtrMemberAccess	info -> members		1312349	0					
ANR	1312544	Identifier	info		1312349	0					
ANR	1312545	Identifier	members		1312349	1					
ANR	1312546	Identifier	piece_members		1312349	1					
ANR	1312547	IfStatement	if ( width_members )		1312349	19					
ANR	1312548	Condition	width_members	634:8:20922:20934	1312349	0	True				
ANR	1312549	Identifier	width_members		1312349	0					
ANR	1312550	CompoundStatement		42:8:1402:1411	1312349	1					
ANR	1312551	IdentifierDeclStatement	gx_path path ;	635:8:20947:20959	1312349	0	True				
ANR	1312552	IdentifierDecl	path		1312349	0					
ANR	1312553	IdentifierDeclType	gx_path		1312349	0					
ANR	1312554	Identifier	path		1312349	1					
ANR	1312555	IdentifierDeclStatement	gs_gstate gis ;	639:8:21056:21069	1312349	1	True				
ANR	1312556	IdentifierDecl	gis		1312349	0					
ANR	1312557	IdentifierDeclType	gs_gstate		1312349	0					
ANR	1312558	Identifier	gis		1312349	1					
ANR	1312559	IdentifierDeclStatement	gs_type1_state cis ;	640:8:21079:21097	1312349	2	True				
ANR	1312560	IdentifierDecl	cis		1312349	0					
ANR	1312561	IdentifierDeclType	gs_type1_state		1312349	0					
ANR	1312562	Identifier	cis		1312349	1					
ANR	1312563	IdentifierDeclStatement	int value ;	641:8:21107:21116	1312349	3	True				
ANR	1312564	IdentifierDecl	value		1312349	0					
ANR	1312565	IdentifierDeclType	int		1312349	0					
ANR	1312566	Identifier	value		1312349	1					
ANR	1312567	IfStatement	if ( pmat )		1312349	4					
ANR	1312568	Condition	pmat	644:12:21186:21189	1312349	0	True				
ANR	1312569	Identifier	pmat		1312349	0					
ANR	1312570	ExpressionStatement	"gs_matrix_fixed_from_matrix ( & gis . ctm , pmat )"	645:12:21204:21247	1312349	1	True				
ANR	1312571	CallExpression	"gs_matrix_fixed_from_matrix ( & gis . ctm , pmat )"		1312349	0					
ANR	1312572	Callee	gs_matrix_fixed_from_matrix		1312349	0					
ANR	1312573	Identifier	gs_matrix_fixed_from_matrix		1312349	0					
ANR	1312574	ArgumentList	& gis . ctm		1312349	1					
ANR	1312575	Argument	& gis . ctm		1312349	0					
ANR	1312576	UnaryOperationExpression	& gis . ctm		1312349	0					
ANR	1312577	UnaryOperator	&		1312349	0					
ANR	1312578	MemberAccess	gis . ctm		1312349	1					
ANR	1312579	Identifier	gis		1312349	0					
ANR	1312580	Identifier	ctm		1312349	1					
ANR	1312581	Argument	pmat		1312349	1					
ANR	1312582	Identifier	pmat		1312349	0					
ANR	1312583	ElseStatement	else		1312349	0					
ANR	1312584	CompoundStatement		48:12:1571:1585	1312349	0					
ANR	1312585	IdentifierDeclStatement	gs_matrix imat ;	647:12:21276:21290	1312349	0	True				
ANR	1312586	IdentifierDecl	imat		1312349	0					
ANR	1312587	IdentifierDeclType	gs_matrix		1312349	0					
ANR	1312588	Identifier	imat		1312349	1					
ANR	1312589	ExpressionStatement	gs_make_identity ( & imat )	649:12:21305:21328	1312349	1	True				
ANR	1312590	CallExpression	gs_make_identity ( & imat )		1312349	0					
ANR	1312591	Callee	gs_make_identity		1312349	0					
ANR	1312592	Identifier	gs_make_identity		1312349	0					
ANR	1312593	ArgumentList	& imat		1312349	1					
ANR	1312594	Argument	& imat		1312349	0					
ANR	1312595	UnaryOperationExpression	& imat		1312349	0					
ANR	1312596	UnaryOperator	&		1312349	0					
ANR	1312597	Identifier	imat		1312349	1					
ANR	1312598	ExpressionStatement	"gs_matrix_fixed_from_matrix ( & gis . ctm , & imat )"	650:12:21342:21386	1312349	2	True				
ANR	1312599	CallExpression	"gs_matrix_fixed_from_matrix ( & gis . ctm , & imat )"		1312349	0					
ANR	1312600	Callee	gs_matrix_fixed_from_matrix		1312349	0					
ANR	1312601	Identifier	gs_matrix_fixed_from_matrix		1312349	0					
ANR	1312602	ArgumentList	& gis . ctm		1312349	1					
ANR	1312603	Argument	& gis . ctm		1312349	0					
ANR	1312604	UnaryOperationExpression	& gis . ctm		1312349	0					
ANR	1312605	UnaryOperator	&		1312349	0					
ANR	1312606	MemberAccess	gis . ctm		1312349	1					
ANR	1312607	Identifier	gis		1312349	0					
ANR	1312608	Identifier	ctm		1312349	1					
ANR	1312609	Argument	& imat		1312349	1					
ANR	1312610	UnaryOperationExpression	& imat		1312349	0					
ANR	1312611	UnaryOperator	&		1312349	0					
ANR	1312612	Identifier	imat		1312349	1					
ANR	1312613	ExpressionStatement	gis . flatness = 0	652:8:21406:21422	1312349	5	True				
ANR	1312614	AssignmentExpression	gis . flatness = 0		1312349	0		=			
ANR	1312615	MemberAccess	gis . flatness		1312349	0					
ANR	1312616	Identifier	gis		1312349	0					
ANR	1312617	Identifier	flatness		1312349	1					
ANR	1312618	PrimaryExpression	0		1312349	1					
ANR	1312619	ExpressionStatement	"code = gs_type1_interp_init ( & cis , & gis , NULL , NULL , NULL , true , 0 , pfont )"	653:8:21432:21562	1312349	6	True				
ANR	1312620	AssignmentExpression	"code = gs_type1_interp_init ( & cis , & gis , NULL , NULL , NULL , true , 0 , pfont )"		1312349	0		=			
ANR	1312621	Identifier	code		1312349	0					
ANR	1312622	CallExpression	"gs_type1_interp_init ( & cis , & gis , NULL , NULL , NULL , true , 0 , pfont )"		1312349	1					
ANR	1312623	Callee	gs_type1_interp_init		1312349	0					
ANR	1312624	Identifier	gs_type1_interp_init		1312349	0					
ANR	1312625	ArgumentList	& cis		1312349	1					
ANR	1312626	Argument	& cis		1312349	0					
ANR	1312627	UnaryOperationExpression	& cis		1312349	0					
ANR	1312628	UnaryOperator	&		1312349	0					
ANR	1312629	Identifier	cis		1312349	1					
ANR	1312630	Argument	& gis		1312349	1					
ANR	1312631	UnaryOperationExpression	& gis		1312349	0					
ANR	1312632	UnaryOperator	&		1312349	0					
ANR	1312633	Identifier	gis		1312349	1					
ANR	1312634	Argument	NULL		1312349	2					
ANR	1312635	Identifier	NULL		1312349	0					
ANR	1312636	Argument	NULL		1312349	3					
ANR	1312637	Identifier	NULL		1312349	0					
ANR	1312638	Argument	NULL		1312349	4					
ANR	1312639	Identifier	NULL		1312349	0					
ANR	1312640	Argument	true		1312349	5					
ANR	1312641	Identifier	true		1312349	0					
ANR	1312642	Argument	0		1312349	6					
ANR	1312643	PrimaryExpression	0		1312349	0					
ANR	1312644	Argument	pfont		1312349	7					
ANR	1312645	Identifier	pfont		1312349	0					
ANR	1312646	IfStatement	if ( code < 0 )		1312349	7					
ANR	1312647	Condition	code < 0	655:12:21576:21583	1312349	0	True				
ANR	1312648	RelationalExpression	code < 0		1312349	0		<			
ANR	1312649	Identifier	code		1312349	0					
ANR	1312650	PrimaryExpression	0		1312349	1					
ANR	1312651	ReturnStatement	return code ;	656:12:21598:21609	1312349	1	True				
ANR	1312652	Identifier	code		1312349	0					
ANR	1312653	ExpressionStatement	cis . no_grid_fitting = true	657:8:21619:21645	1312349	8	True				
ANR	1312654	AssignmentExpression	cis . no_grid_fitting = true		1312349	0		=			
ANR	1312655	MemberAccess	cis . no_grid_fitting		1312349	0					
ANR	1312656	Identifier	cis		1312349	0					
ANR	1312657	Identifier	no_grid_fitting		1312349	1					
ANR	1312658	Identifier	true		1312349	1					
ANR	1312659	ExpressionStatement	"memset ( & path , 0x00 , sizeof ( path ) )"	658:8:21655:21688	1312349	9	True				
ANR	1312660	CallExpression	"memset ( & path , 0x00 , sizeof ( path ) )"		1312349	0					
ANR	1312661	Callee	memset		1312349	0					
ANR	1312662	Identifier	memset		1312349	0					
ANR	1312663	ArgumentList	& path		1312349	1					
ANR	1312664	Argument	& path		1312349	0					
ANR	1312665	UnaryOperationExpression	& path		1312349	0					
ANR	1312666	UnaryOperator	&		1312349	0					
ANR	1312667	Identifier	path		1312349	1					
ANR	1312668	Argument	0x00		1312349	1					
ANR	1312669	PrimaryExpression	0x00		1312349	0					
ANR	1312670	Argument	sizeof ( path )		1312349	2					
ANR	1312671	SizeofExpression	sizeof ( path )		1312349	0					
ANR	1312672	Sizeof	sizeof		1312349	0					
ANR	1312673	SizeofOperand	path		1312349	1					
ANR	1312674	ExpressionStatement	gx_path_init_bbox_accumulator ( & path )	659:8:21698:21734	1312349	10	True				
ANR	1312675	CallExpression	gx_path_init_bbox_accumulator ( & path )		1312349	0					
ANR	1312676	Callee	gx_path_init_bbox_accumulator		1312349	0					
ANR	1312677	Identifier	gx_path_init_bbox_accumulator		1312349	0					
ANR	1312678	ArgumentList	& path		1312349	1					
ANR	1312679	Argument	& path		1312349	0					
ANR	1312680	UnaryOperationExpression	& path		1312349	0					
ANR	1312681	UnaryOperator	&		1312349	0					
ANR	1312682	Identifier	path		1312349	1					
ANR	1312683	ExpressionStatement	cis . path = & path	660:8:21744:21760	1312349	11	True				
ANR	1312684	AssignmentExpression	cis . path = & path		1312349	0		=			
ANR	1312685	MemberAccess	cis . path		1312349	0					
ANR	1312686	Identifier	cis		1312349	0					
ANR	1312687	Identifier	path		1312349	1					
ANR	1312688	UnaryOperationExpression	& path		1312349	1					
ANR	1312689	UnaryOperator	&		1312349	0					
ANR	1312690	Identifier	path		1312349	1					
ANR	1312691	ExpressionStatement	"code = pdata -> interpret ( & cis , & gdata , & value )"	661:8:21770:21815	1312349	12	True				
ANR	1312692	AssignmentExpression	"code = pdata -> interpret ( & cis , & gdata , & value )"		1312349	0		=			
ANR	1312693	Identifier	code		1312349	0					
ANR	1312694	CallExpression	"pdata -> interpret ( & cis , & gdata , & value )"		1312349	1					
ANR	1312695	Callee	pdata -> interpret		1312349	0					
ANR	1312696	PtrMemberAccess	pdata -> interpret		1312349	0					
ANR	1312697	Identifier	pdata		1312349	0					
ANR	1312698	Identifier	interpret		1312349	1					
ANR	1312699	ArgumentList	& cis		1312349	1					
ANR	1312700	Argument	& cis		1312349	0					
ANR	1312701	UnaryOperationExpression	& cis		1312349	0					
ANR	1312702	UnaryOperator	&		1312349	0					
ANR	1312703	Identifier	cis		1312349	1					
ANR	1312704	Argument	& gdata		1312349	1					
ANR	1312705	UnaryOperationExpression	& gdata		1312349	0					
ANR	1312706	UnaryOperator	&		1312349	0					
ANR	1312707	Identifier	gdata		1312349	1					
ANR	1312708	Argument	& value		1312349	2					
ANR	1312709	UnaryOperationExpression	& value		1312349	0					
ANR	1312710	UnaryOperator	&		1312349	0					
ANR	1312711	Identifier	value		1312349	1					
ANR	1312712	SwitchStatement	switch ( code )		1312349	13					
ANR	1312713	Condition	code	662:16:21833:21836	1312349	0	True				
ANR	1312714	Identifier	code		1312349	0					
ANR	1312715	CompoundStatement		63:22:2134:2134	1312349	1					
ANR	1312716	Label	case 0 :	663:8:21849:21855	1312349	0	True				
ANR	1312717	ExpressionStatement	info -> width [ wmode ] . x = 0	665:12:21970:21994	1312349	1	True				
ANR	1312718	AssignmentExpression	info -> width [ wmode ] . x = 0		1312349	0		=			
ANR	1312719	MemberAccess	info -> width [ wmode ] . x		1312349	0					
ANR	1312720	ArrayIndexing	info -> width [ wmode ]		1312349	0					
ANR	1312721	PtrMemberAccess	info -> width		1312349	0					
ANR	1312722	Identifier	info		1312349	0					
ANR	1312723	Identifier	width		1312349	1					
ANR	1312724	Identifier	wmode		1312349	1					
ANR	1312725	Identifier	x		1312349	1					
ANR	1312726	PrimaryExpression	0		1312349	1					
ANR	1312727	ExpressionStatement	info -> width [ wmode ] . y = 0	666:12:22008:22032	1312349	2	True				
ANR	1312728	AssignmentExpression	info -> width [ wmode ] . y = 0		1312349	0		=			
ANR	1312729	MemberAccess	info -> width [ wmode ] . y		1312349	0					
ANR	1312730	ArrayIndexing	info -> width [ wmode ]		1312349	0					
ANR	1312731	PtrMemberAccess	info -> width		1312349	0					
ANR	1312732	Identifier	info		1312349	0					
ANR	1312733	Identifier	width		1312349	1					
ANR	1312734	Identifier	wmode		1312349	1					
ANR	1312735	Identifier	y		1312349	1					
ANR	1312736	PrimaryExpression	0		1312349	1					
ANR	1312737	ExpressionStatement	info -> v . x = 0	667:12:22046:22059	1312349	3	True				
ANR	1312738	AssignmentExpression	info -> v . x = 0		1312349	0		=			
ANR	1312739	MemberAccess	info -> v . x		1312349	0					
ANR	1312740	PtrMemberAccess	info -> v		1312349	0					
ANR	1312741	Identifier	info		1312349	0					
ANR	1312742	Identifier	v		1312349	1					
ANR	1312743	Identifier	x		1312349	1					
ANR	1312744	PrimaryExpression	0		1312349	1					
ANR	1312745	ExpressionStatement	info -> v . y = 0	668:12:22073:22086	1312349	4	True				
ANR	1312746	AssignmentExpression	info -> v . y = 0		1312349	0		=			
ANR	1312747	MemberAccess	info -> v . y		1312349	0					
ANR	1312748	PtrMemberAccess	info -> v		1312349	0					
ANR	1312749	Identifier	info		1312349	0					
ANR	1312750	Identifier	v		1312349	1					
ANR	1312751	Identifier	y		1312349	1					
ANR	1312752	PrimaryExpression	0		1312349	1					
ANR	1312753	BreakStatement	break ;	669:12:22100:22105	1312349	5	True				
ANR	1312754	Label	default :	670:8:22115:22122	1312349	6	True				
ANR	1312755	Identifier	default		1312349	0					
ANR	1312756	ReturnStatement	return code ;	671:12:22159:22170	1312349	7	True				
ANR	1312757	Identifier	code		1312349	0					
ANR	1312758	Label	case type1_result_callothersubr :	672:8:22180:22211	1312349	8	True				
ANR	1312759	Identifier	type1_result_callothersubr		1312349	0					
ANR	1312760	ExpressionStatement	return_error ( gs_error_rangecheck )	673:12:22249:22282	1312349	9	True				
ANR	1312761	CallExpression	return_error ( gs_error_rangecheck )		1312349	0					
ANR	1312762	Callee	return_error		1312349	0					
ANR	1312763	Identifier	return_error		1312349	0					
ANR	1312764	ArgumentList	gs_error_rangecheck		1312349	1					
ANR	1312765	Argument	gs_error_rangecheck		1312349	0					
ANR	1312766	Identifier	gs_error_rangecheck		1312349	0					
ANR	1312767	Label	case type1_result_sbw :	674:8:22314:22335	1312349	10	True				
ANR	1312768	Identifier	type1_result_sbw		1312349	0					
ANR	1312769	ExpressionStatement	info -> width [ wmode ] . x = fixed2float ( cis . width . x )	675:12:22349:22396	1312349	11	True				
ANR	1312770	AssignmentExpression	info -> width [ wmode ] . x = fixed2float ( cis . width . x )		1312349	0		=			
ANR	1312771	MemberAccess	info -> width [ wmode ] . x		1312349	0					
ANR	1312772	ArrayIndexing	info -> width [ wmode ]		1312349	0					
ANR	1312773	PtrMemberAccess	info -> width		1312349	0					
ANR	1312774	Identifier	info		1312349	0					
ANR	1312775	Identifier	width		1312349	1					
ANR	1312776	Identifier	wmode		1312349	1					
ANR	1312777	Identifier	x		1312349	1					
ANR	1312778	CallExpression	fixed2float ( cis . width . x )		1312349	1					
ANR	1312779	Callee	fixed2float		1312349	0					
ANR	1312780	Identifier	fixed2float		1312349	0					
ANR	1312781	ArgumentList	cis . width . x		1312349	1					
ANR	1312782	Argument	cis . width . x		1312349	0					
ANR	1312783	MemberAccess	cis . width . x		1312349	0					
ANR	1312784	MemberAccess	cis . width		1312349	0					
ANR	1312785	Identifier	cis		1312349	0					
ANR	1312786	Identifier	width		1312349	1					
ANR	1312787	Identifier	x		1312349	1					
ANR	1312788	ExpressionStatement	info -> width [ wmode ] . y = fixed2float ( cis . width . y )	676:12:22410:22457	1312349	12	True				
ANR	1312789	AssignmentExpression	info -> width [ wmode ] . y = fixed2float ( cis . width . y )		1312349	0		=			
ANR	1312790	MemberAccess	info -> width [ wmode ] . y		1312349	0					
ANR	1312791	ArrayIndexing	info -> width [ wmode ]		1312349	0					
ANR	1312792	PtrMemberAccess	info -> width		1312349	0					
ANR	1312793	Identifier	info		1312349	0					
ANR	1312794	Identifier	width		1312349	1					
ANR	1312795	Identifier	wmode		1312349	1					
ANR	1312796	Identifier	y		1312349	1					
ANR	1312797	CallExpression	fixed2float ( cis . width . y )		1312349	1					
ANR	1312798	Callee	fixed2float		1312349	0					
ANR	1312799	Identifier	fixed2float		1312349	0					
ANR	1312800	ArgumentList	cis . width . y		1312349	1					
ANR	1312801	Argument	cis . width . y		1312349	0					
ANR	1312802	MemberAccess	cis . width . y		1312349	0					
ANR	1312803	MemberAccess	cis . width		1312349	0					
ANR	1312804	Identifier	cis		1312349	0					
ANR	1312805	Identifier	width		1312349	1					
ANR	1312806	Identifier	y		1312349	1					
ANR	1312807	ExpressionStatement	info -> v . x = fixed2float ( cis . lsb . x )	677:12:22471:22505	1312349	13	True				
ANR	1312808	AssignmentExpression	info -> v . x = fixed2float ( cis . lsb . x )		1312349	0		=			
ANR	1312809	MemberAccess	info -> v . x		1312349	0					
ANR	1312810	PtrMemberAccess	info -> v		1312349	0					
ANR	1312811	Identifier	info		1312349	0					
ANR	1312812	Identifier	v		1312349	1					
ANR	1312813	Identifier	x		1312349	1					
ANR	1312814	CallExpression	fixed2float ( cis . lsb . x )		1312349	1					
ANR	1312815	Callee	fixed2float		1312349	0					
ANR	1312816	Identifier	fixed2float		1312349	0					
ANR	1312817	ArgumentList	cis . lsb . x		1312349	1					
ANR	1312818	Argument	cis . lsb . x		1312349	0					
ANR	1312819	MemberAccess	cis . lsb . x		1312349	0					
ANR	1312820	MemberAccess	cis . lsb		1312349	0					
ANR	1312821	Identifier	cis		1312349	0					
ANR	1312822	Identifier	lsb		1312349	1					
ANR	1312823	Identifier	x		1312349	1					
ANR	1312824	ExpressionStatement	info -> v . y = fixed2float ( cis . lsb . y )	678:12:22519:22553	1312349	14	True				
ANR	1312825	AssignmentExpression	info -> v . y = fixed2float ( cis . lsb . y )		1312349	0		=			
ANR	1312826	MemberAccess	info -> v . y		1312349	0					
ANR	1312827	PtrMemberAccess	info -> v		1312349	0					
ANR	1312828	Identifier	info		1312349	0					
ANR	1312829	Identifier	v		1312349	1					
ANR	1312830	Identifier	y		1312349	1					
ANR	1312831	CallExpression	fixed2float ( cis . lsb . y )		1312349	1					
ANR	1312832	Callee	fixed2float		1312349	0					
ANR	1312833	Identifier	fixed2float		1312349	0					
ANR	1312834	ArgumentList	cis . lsb . y		1312349	1					
ANR	1312835	Argument	cis . lsb . y		1312349	0					
ANR	1312836	MemberAccess	cis . lsb . y		1312349	0					
ANR	1312837	MemberAccess	cis . lsb		1312349	0					
ANR	1312838	Identifier	cis		1312349	0					
ANR	1312839	Identifier	lsb		1312349	1					
ANR	1312840	Identifier	y		1312349	1					
ANR	1312841	BreakStatement	break ;	679:12:22567:22572	1312349	15	True				
ANR	1312842	ExpressionStatement	info -> members |= width_members	681:8:22592:22622	1312349	14	True				
ANR	1312843	AssignmentExpression	info -> members |= width_members		1312349	0		|=			
ANR	1312844	PtrMemberAccess	info -> members		1312349	0					
ANR	1312845	Identifier	info		1312349	0					
ANR	1312846	Identifier	members		1312349	1					
ANR	1312847	Identifier	width_members		1312349	1					
ANR	1312848	ExpressionStatement	"gs_glyph_data_free ( & gdata , ""gs_type1_glyph_info"" )"	684:4:22635:22684	1312349	20	True				
ANR	1312849	CallExpression	"gs_glyph_data_free ( & gdata , ""gs_type1_glyph_info"" )"		1312349	0					
ANR	1312850	Callee	gs_glyph_data_free		1312349	0					
ANR	1312851	Identifier	gs_glyph_data_free		1312349	0					
ANR	1312852	ArgumentList	& gdata		1312349	1					
ANR	1312853	Argument	& gdata		1312349	0					
ANR	1312854	UnaryOperationExpression	& gdata		1312349	0					
ANR	1312855	UnaryOperator	&		1312349	0					
ANR	1312856	Identifier	gdata		1312349	1					
ANR	1312857	Argument	"""gs_type1_glyph_info"""		1312349	1					
ANR	1312858	PrimaryExpression	"""gs_type1_glyph_info"""		1312349	0					
ANR	1312859	ReturnStatement	return code ;	685:4:22690:22701	1312349	21	True				
ANR	1312860	Identifier	code		1312349	0					
ANR	1312861	ReturnType	int		1312349	1					
ANR	1312862	Identifier	gs_type1_glyph_info		1312349	2					
ANR	1312863	ParameterList	"gs_font * font , gs_glyph glyph , const gs_matrix * pmat , int members , gs_glyph_info_t * info"		1312349	3					
ANR	1312864	Parameter	gs_font * font	598:20:19594:19606	1312349	0	True				
ANR	1312865	ParameterType	gs_font *		1312349	0					
ANR	1312866	Identifier	font		1312349	1					
ANR	1312867	Parameter	gs_glyph glyph	598:35:19609:19622	1312349	1	True				
ANR	1312868	ParameterType	gs_glyph		1312349	0					
ANR	1312869	Identifier	glyph		1312349	1					
ANR	1312870	Parameter	const gs_matrix * pmat	598:51:19625:19645	1312349	2	True				
ANR	1312871	ParameterType	const gs_matrix *		1312349	0					
ANR	1312872	Identifier	pmat		1312349	1					
ANR	1312873	Parameter	int members	599:20:19668:19678	1312349	3	True				
ANR	1312874	ParameterType	int		1312349	0					
ANR	1312875	Identifier	members		1312349	1					
ANR	1312876	Parameter	gs_glyph_info_t * info	599:33:19681:19701	1312349	4	True				
ANR	1312877	ParameterType	gs_glyph_info_t *		1312349	0					
ANR	1312878	Identifier	info		1312349	1					
ANR	1312879	CFGEntryNode	ENTRY		1312349		True				
ANR	1312880	CFGExitNode	EXIT		1312349		True				
ANR	1312881	Symbol	info -> width		1312349						
ANR	1312882	Symbol	& value		1312349						
ANR	1312883	Symbol	* wmode		1312349						
ANR	1312884	Symbol	gs_error_rangecheck		1312349						
ANR	1312885	Symbol	& gis . ctm		1312349						
ANR	1312886	Symbol	& path		1312349						
ANR	1312887	Symbol	info -> members		1312349						
ANR	1312888	Symbol	path		1312349						
ANR	1312889	Symbol	cis . width . y		1312349						
ANR	1312890	Symbol	members		1312349						
ANR	1312891	Symbol	cis . width . x		1312349						
ANR	1312892	Symbol	info -> width [ wmode ] . x		1312349						
ANR	1312893	Symbol	* pdata		1312349						
ANR	1312894	Symbol	gs_type1_glyph_pieces		1312349						
ANR	1312895	Symbol	info		1312349						
ANR	1312896	Symbol	info -> width [ wmode ] . y		1312349						
ANR	1312897	Symbol	& pfont -> data		1312349						
ANR	1312898	Symbol	GLYPH_INFO_OUTLINE_WIDTHS		1312349						
ANR	1312899	Symbol	gis . flatness		1312349						
ANR	1312900	Symbol	NULL		1312349						
ANR	1312901	Symbol	piece_members		1312349						
ANR	1312902	Symbol	info -> v		1312349						
ANR	1312903	Symbol	pdata -> interpret		1312349						
ANR	1312904	Symbol	cis . width		1312349						
ANR	1312905	Symbol	cis . lsb . x		1312349						
ANR	1312906	Symbol	cis . lsb . y		1312349						
ANR	1312907	Symbol	pdata -> procs		1312349						
ANR	1312908	Symbol	& gdata		1312349						
ANR	1312909	Symbol	true		1312349						
ANR	1312910	Symbol	gs_type1_interp_init		1312349						
ANR	1312911	Symbol	* * info		1312349						
ANR	1312912	Symbol	pdata		1312349						
ANR	1312913	Symbol	code		1312349						
ANR	1312914	Symbol	pmat		1312349						
ANR	1312915	Symbol	pfont -> memory		1312349						
ANR	1312916	Symbol	cis . lsb		1312349						
ANR	1312917	Symbol	default_members		1312349						
ANR	1312918	Symbol	info -> v . x		1312349						
ANR	1312919	Symbol	gdata		1312349						
ANR	1312920	Symbol	cis		1312349						
ANR	1312921	Symbol	gis		1312349						
ANR	1312922	Symbol	* info -> width		1312349						
ANR	1312923	Symbol	GLYPH_INFO_WIDTH0		1312349						
ANR	1312924	Symbol	GLYPH_INFO_WIDTH1		1312349						
ANR	1312925	Symbol	cis . path		1312349						
ANR	1312926	Symbol	wmode		1312349						
ANR	1312927	Symbol	value		1312349						
ANR	1312928	Symbol	& imat		1312349						
ANR	1312929	Symbol	gdata . memory		1312349						
ANR	1312930	Symbol	gs_default_glyph_info		1312349						
ANR	1312931	Symbol	cis . no_grid_fitting		1312349						
ANR	1312932	Symbol	fixed2float		1312349						
ANR	1312933	Symbol	pfont		1312349						
ANR	1312934	Symbol	imat		1312349						
ANR	1312935	Symbol	GLYPH_INFO_PIECES		1312349						
ANR	1312936	Symbol	GLYPH_INFO_VVECTOR1		1312349						
ANR	1312937	Symbol	GLYPH_INFO_VVECTOR0		1312349						
ANR	1312938	Symbol	width_members		1312349						
ANR	1312939	Symbol	& gis		1312349						
ANR	1312940	Symbol	glyph		1312349						
ANR	1312941	Symbol	* pfont		1312349						
ANR	1312942	Symbol	& cis		1312349						
ANR	1312943	Symbol	GLYPH_INFO_WIDTHS		1312349						
ANR	1312944	Symbol	pdata -> procs . glyph_data		1312349						
ANR	1312945	Symbol	info -> v . y		1312349						
ANR	1312946	Symbol	GLYPH_INFO_NUM_PIECES		1312349						
ANR	1312947	Symbol	* info		1312349						
ANR	1312948	Symbol	font		1312349						
ANR	1312949	Function	gs_font_parent	689:0:22745:23068							
ANR	1312950	FunctionDef	gs_font_parent (const gs_font_base * pbfont)		1312949	0					
ANR	1312951	CompoundStatement		691:0:22809:23068	1312949	0					
ANR	1312952	IfStatement	if ( pbfont -> FontType == ft_encrypted || pbfont -> FontType == ft_encrypted2 )		1312949	0					
ANR	1312953	Condition	pbfont -> FontType == ft_encrypted || pbfont -> FontType == ft_encrypted2	692:8:22819:22887	1312949	0	True				
ANR	1312954	OrExpression	pbfont -> FontType == ft_encrypted || pbfont -> FontType == ft_encrypted2		1312949	0		||			
ANR	1312955	EqualityExpression	pbfont -> FontType == ft_encrypted		1312949	0		==			
ANR	1312956	PtrMemberAccess	pbfont -> FontType		1312949	0					
ANR	1312957	Identifier	pbfont		1312949	0					
ANR	1312958	Identifier	FontType		1312949	1					
ANR	1312959	Identifier	ft_encrypted		1312949	1					
ANR	1312960	EqualityExpression	pbfont -> FontType == ft_encrypted2		1312949	1		==			
ANR	1312961	PtrMemberAccess	pbfont -> FontType		1312949	0					
ANR	1312962	Identifier	pbfont		1312949	0					
ANR	1312963	Identifier	FontType		1312949	1					
ANR	1312964	Identifier	ft_encrypted2		1312949	1					
ANR	1312965	CompoundStatement		3:8:90:149	1312949	1					
ANR	1312966	IdentifierDeclStatement	const gs_font_type1 * pfont1 = ( const gs_font_type1 * ) pbfont ;	693:8:22900:22959	1312949	0	True				
ANR	1312967	IdentifierDecl	* pfont1 = ( const gs_font_type1 * ) pbfont		1312949	0					
ANR	1312968	IdentifierDeclType	const gs_font_type1 *		1312949	0					
ANR	1312969	Identifier	pfont1		1312949	1					
ANR	1312970	AssignmentExpression	* pfont1 = ( const gs_font_type1 * ) pbfont		1312949	2		=			
ANR	1312971	Identifier	pfont1		1312949	0					
ANR	1312972	CastExpression	( const gs_font_type1 * ) pbfont		1312949	1					
ANR	1312973	CastTarget	const gs_font_type1 *		1312949	0					
ANR	1312974	Identifier	pbfont		1312949	1					
ANR	1312975	IfStatement	if ( pfont1 -> data . parent != NULL )		1312949	1					
ANR	1312976	Condition	pfont1 -> data . parent != NULL	695:12:22974:23000	1312949	0	True				
ANR	1312977	EqualityExpression	pfont1 -> data . parent != NULL		1312949	0		!=			
ANR	1312978	MemberAccess	pfont1 -> data . parent		1312949	0					
ANR	1312979	PtrMemberAccess	pfont1 -> data		1312949	0					
ANR	1312980	Identifier	pfont1		1312949	0					
ANR	1312981	Identifier	data		1312949	1					
ANR	1312982	Identifier	parent		1312949	1					
ANR	1312983	Identifier	NULL		1312949	1					
ANR	1312984	ReturnStatement	return pfont1 -> data . parent ;	696:12:23015:23041	1312949	1	True				
ANR	1312985	MemberAccess	pfont1 -> data . parent		1312949	0					
ANR	1312986	PtrMemberAccess	pfont1 -> data		1312949	0					
ANR	1312987	Identifier	pfont1		1312949	0					
ANR	1312988	Identifier	data		1312949	1					
ANR	1312989	Identifier	parent		1312949	1					
ANR	1312990	ReturnStatement	return pbfont ;	698:4:23053:23066	1312949	1	True				
ANR	1312991	Identifier	pbfont		1312949	0					
ANR	1312992	ReturnType	const gs_font_base *		1312949	1					
ANR	1312993	Identifier	gs_font_parent		1312949	2					
ANR	1312994	ParameterList	const gs_font_base * pbfont		1312949	3					
ANR	1312995	Parameter	const gs_font_base * pbfont	690:15:22781:22806	1312949	0	True				
ANR	1312996	ParameterType	const gs_font_base *		1312949	0					
ANR	1312997	Identifier	pbfont		1312949	1					
ANR	1312998	CFGEntryNode	ENTRY		1312949		True				
ANR	1312999	CFGExitNode	EXIT		1312949		True				
ANR	1313000	Symbol	* pfont1		1312949						
ANR	1313001	Symbol	pbfont		1312949						
ANR	1313002	Symbol	pfont1		1312949						
ANR	1313003	Symbol	NULL		1312949						
ANR	1313004	Symbol	pbfont -> FontType		1312949						
ANR	1313005	Symbol	ft_encrypted2		1312949						
ANR	1313006	Symbol	ft_encrypted		1312949						
ANR	1313007	Symbol	* pbfont		1312949						
ANR	1313008	Symbol	pfont1 -> data		1312949						
ANR	1313009	Symbol	pfont1 -> data . parent		1312949						
