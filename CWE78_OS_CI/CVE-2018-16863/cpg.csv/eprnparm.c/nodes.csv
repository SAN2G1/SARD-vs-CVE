command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3086596	File	data/converged/CVE-2018-16863_ghostpdl/eprnparm.c								
ANR	3086597	DeclStmt									
ANR	3086598	Decl							const eprn_StringAndInt	const eprn_StringAndInt [ ]	eprn_colour_model_list
ANR	3086599	DeclStmt									
ANR	3086600	Decl							const eprn_StringAndInt	const eprn_StringAndInt [ ]	intensity_rendering_list
ANR	3086601	Function	eprn_get_string	110:0:3993:4330							
ANR	3086602	FunctionDef	"eprn_get_string (int in_value , const eprn_StringAndInt * table , gs_param_string * out_value)"		3086601	0					
ANR	3086603	CompoundStatement		112:0:4089:4330	3086601	0					
ANR	3086604	WhileStatement	while ( table -> name != NULL && table -> value != in_value )		3086601	0					
ANR	3086605	Condition	table -> name != NULL && table -> value != in_value	113:9:4100:4146	3086601	0	True				
ANR	3086606	AndExpression	table -> name != NULL && table -> value != in_value		3086601	0		&&			
ANR	3086607	EqualityExpression	table -> name != NULL		3086601	0		!=			
ANR	3086608	PtrMemberAccess	table -> name		3086601	0					
ANR	3086609	Identifier	table		3086601	0					
ANR	3086610	Identifier	name		3086601	1					
ANR	3086611	Identifier	NULL		3086601	1					
ANR	3086612	EqualityExpression	table -> value != in_value		3086601	1		!=			
ANR	3086613	PtrMemberAccess	table -> value		3086601	0					
ANR	3086614	Identifier	table		3086601	0					
ANR	3086615	Identifier	value		3086601	1					
ANR	3086616	Identifier	in_value		3086601	1					
ANR	3086617	ExpressionStatement	table ++	113:58:4149:4156	3086601	1	True				
ANR	3086618	PostIncDecOperationExpression	table ++		3086601	0					
ANR	3086619	Identifier	table		3086601	0					
ANR	3086620	IncDec	++		3086601	1					
ANR	3086621	IfStatement	if ( table -> name == NULL )		3086601	1					
ANR	3086622	Condition	table -> name == NULL	114:6:4164:4182	3086601	0	True				
ANR	3086623	EqualityExpression	table -> name == NULL		3086601	0		==			
ANR	3086624	PtrMemberAccess	table -> name		3086601	0					
ANR	3086625	Identifier	table		3086601	0					
ANR	3086626	Identifier	name		3086601	1					
ANR	3086627	Identifier	NULL		3086601	1					
ANR	3086628	ReturnStatement	return - 1 ;	114:27:4185:4194	3086601	1	True				
ANR	3086629	UnaryOperationExpression	- 1		3086601	0					
ANR	3086630	UnaryOperator	-		3086601	0					
ANR	3086631	PrimaryExpression	1		3086601	1					
ANR	3086632	ExpressionStatement	out_value -> data = ( const byte * ) table -> name	116:2:4199:4242	3086601	2	True				
ANR	3086633	AssignmentExpression	out_value -> data = ( const byte * ) table -> name		3086601	0		=			
ANR	3086634	PtrMemberAccess	out_value -> data		3086601	0					
ANR	3086635	Identifier	out_value		3086601	0					
ANR	3086636	Identifier	data		3086601	1					
ANR	3086637	CastExpression	( const byte * ) table -> name		3086601	1					
ANR	3086638	CastTarget	const byte *		3086601	0					
ANR	3086639	PtrMemberAccess	table -> name		3086601	1					
ANR	3086640	Identifier	table		3086601	0					
ANR	3086641	Identifier	name		3086601	1					
ANR	3086642	ExpressionStatement	out_value -> size = strlen ( table -> name )	117:2:4246:4283	3086601	3	True				
ANR	3086643	AssignmentExpression	out_value -> size = strlen ( table -> name )		3086601	0		=			
ANR	3086644	PtrMemberAccess	out_value -> size		3086601	0					
ANR	3086645	Identifier	out_value		3086601	0					
ANR	3086646	Identifier	size		3086601	1					
ANR	3086647	CallExpression	strlen ( table -> name )		3086601	1					
ANR	3086648	Callee	strlen		3086601	0					
ANR	3086649	Identifier	strlen		3086601	0					
ANR	3086650	ArgumentList	table -> name		3086601	1					
ANR	3086651	Argument	table -> name		3086601	0					
ANR	3086652	PtrMemberAccess	table -> name		3086601	0					
ANR	3086653	Identifier	table		3086601	0					
ANR	3086654	Identifier	name		3086601	1					
ANR	3086655	ExpressionStatement	out_value -> persistent = true	118:2:4287:4315	3086601	4	True				
ANR	3086656	AssignmentExpression	out_value -> persistent = true		3086601	0		=			
ANR	3086657	PtrMemberAccess	out_value -> persistent		3086601	0					
ANR	3086658	Identifier	out_value		3086601	0					
ANR	3086659	Identifier	persistent		3086601	1					
ANR	3086660	Identifier	true		3086601	1					
ANR	3086661	ReturnStatement	return 0 ;	120:2:4320:4328	3086601	5	True				
ANR	3086662	PrimaryExpression	0		3086601	0					
ANR	3086663	ReturnType	int		3086601	1					
ANR	3086664	Identifier	eprn_get_string		3086601	2					
ANR	3086665	ParameterList	"int in_value , const eprn_StringAndInt * table , gs_param_string * out_value"		3086601	3					
ANR	3086666	Parameter	int in_value	110:20:4013:4024	3086601	0	True				
ANR	3086667	ParameterType	int		3086601	0					
ANR	3086668	Identifier	in_value		3086601	1					
ANR	3086669	Parameter	const eprn_StringAndInt * table	110:34:4027:4056	3086601	1	True				
ANR	3086670	ParameterType	const eprn_StringAndInt *		3086601	0					
ANR	3086671	Identifier	table		3086601	1					
ANR	3086672	Parameter	gs_param_string * out_value	111:2:4061:4086	3086601	2	True				
ANR	3086673	ParameterType	gs_param_string *		3086601	0					
ANR	3086674	Identifier	out_value		3086601	1					
ANR	3086675	CFGEntryNode	ENTRY		3086601		True				
ANR	3086676	CFGExitNode	EXIT		3086601		True				
ANR	3086677	Symbol	NULL		3086601						
ANR	3086678	Symbol	in_value		3086601						
ANR	3086679	Symbol	* table		3086601						
ANR	3086680	Symbol	* out_value		3086601						
ANR	3086681	Symbol	out_value		3086601						
ANR	3086682	Symbol	out_value -> data		3086601						
ANR	3086683	Symbol	strlen		3086601						
ANR	3086684	Symbol	table -> value		3086601						
ANR	3086685	Symbol	true		3086601						
ANR	3086686	Symbol	out_value -> persistent		3086601						
ANR	3086687	Symbol	table		3086601						
ANR	3086688	Symbol	table -> name		3086601						
ANR	3086689	Symbol	out_value -> size		3086601						
ANR	3086690	Function	eprn_get_int	139:0:4924:5652							
ANR	3086691	FunctionDef	"eprn_get_int (const gs_param_string * in_value , const eprn_StringAndInt * table , int * out_value)"		3086690	0					
ANR	3086692	CompoundStatement		141:0:5024:5652	3086690	0					
ANR	3086693	IdentifierDeclStatement	char * s ;	142:2:5028:5035	3086690	0	True				
ANR	3086694	IdentifierDecl	* s		3086690	0					
ANR	3086695	IdentifierDeclType	char *		3086690	0					
ANR	3086696	Identifier	s		3086690	1					
ANR	3086697	ExpressionStatement	s = ( char * ) malloc ( in_value -> size + 1 )	145:2:5100:5139	3086690	1	True				
ANR	3086698	AssignmentExpression	s = ( char * ) malloc ( in_value -> size + 1 )		3086690	0		=			
ANR	3086699	Identifier	s		3086690	0					
ANR	3086700	CastExpression	( char * ) malloc ( in_value -> size + 1 )		3086690	1					
ANR	3086701	CastTarget	char *		3086690	0					
ANR	3086702	CallExpression	malloc ( in_value -> size + 1 )		3086690	1					
ANR	3086703	Callee	malloc		3086690	0					
ANR	3086704	Identifier	malloc		3086690	0					
ANR	3086705	ArgumentList	in_value -> size + 1		3086690	1					
ANR	3086706	Argument	in_value -> size + 1		3086690	0					
ANR	3086707	AdditiveExpression	in_value -> size + 1		3086690	0		+			
ANR	3086708	PtrMemberAccess	in_value -> size		3086690	0					
ANR	3086709	Identifier	in_value		3086690	0					
ANR	3086710	Identifier	size		3086690	1					
ANR	3086711	PrimaryExpression	1		3086690	1					
ANR	3086712	IfStatement	if ( s == NULL )		3086690	2					
ANR	3086713	Condition	s == NULL	146:6:5147:5155	3086690	0	True				
ANR	3086714	EqualityExpression	s == NULL		3086690	0		==			
ANR	3086715	Identifier	s		3086690	0					
ANR	3086716	Identifier	NULL		3086690	1					
ANR	3086717	CompoundStatement		6:17:133:133	3086690	1					
ANR	3086718	Statement	eprintf1	147:4:5164:5171	3086690	0	True				
ANR	3086719	Statement	(	147:12:5172:5172	3086690	1	True				
ANR	3086720	Statement	ERRPREF	147:13:5173:5179	3086690	2	True				
ANR	3086721	Statement	"""Memory allocation failure in eprn_get_int(): %s.\\n"""	148:6:5187:5238	3086690	3	True				
ANR	3086722	Statement	","	148:58:5239:5239	3086690	4	True				
ANR	3086723	Statement	strerror	149:6:5247:5254	3086690	5	True				
ANR	3086724	Statement	(	149:14:5255:5255	3086690	6	True				
ANR	3086725	Statement	errno	149:15:5256:5260	3086690	7	True				
ANR	3086726	Statement	)	149:20:5261:5261	3086690	8	True				
ANR	3086727	Statement	)	149:21:5262:5262	3086690	9	True				
ANR	3086728	ExpressionStatement		149:22:5263:5263	3086690	10	True				
ANR	3086729	ExpressionStatement	return_error ( gs_error_VMerror )	150:4:5269:5299	3086690	11	True				
ANR	3086730	CallExpression	return_error ( gs_error_VMerror )		3086690	0					
ANR	3086731	Callee	return_error		3086690	0					
ANR	3086732	Identifier	return_error		3086690	0					
ANR	3086733	ArgumentList	gs_error_VMerror		3086690	1					
ANR	3086734	Argument	gs_error_VMerror		3086690	0					
ANR	3086735	Identifier	gs_error_VMerror		3086690	0					
ANR	3086736	ExpressionStatement	"strncpy ( s , ( const char * ) in_value -> data , in_value -> size )"	152:2:5307:5363	3086690	3	True				
ANR	3086737	CallExpression	"strncpy ( s , ( const char * ) in_value -> data , in_value -> size )"		3086690	0					
ANR	3086738	Callee	strncpy		3086690	0					
ANR	3086739	Identifier	strncpy		3086690	0					
ANR	3086740	ArgumentList	s		3086690	1					
ANR	3086741	Argument	s		3086690	0					
ANR	3086742	Identifier	s		3086690	0					
ANR	3086743	Argument	( const char * ) in_value -> data		3086690	1					
ANR	3086744	CastExpression	( const char * ) in_value -> data		3086690	0					
ANR	3086745	CastTarget	const char *		3086690	0					
ANR	3086746	PtrMemberAccess	in_value -> data		3086690	1					
ANR	3086747	Identifier	in_value		3086690	0					
ANR	3086748	Identifier	data		3086690	1					
ANR	3086749	Argument	in_value -> size		3086690	2					
ANR	3086750	PtrMemberAccess	in_value -> size		3086690	0					
ANR	3086751	Identifier	in_value		3086690	0					
ANR	3086752	Identifier	size		3086690	1					
ANR	3086753	ExpressionStatement	s [ in_value -> size ] = '\\0'	153:2:5367:5391	3086690	4	True				
ANR	3086754	AssignmentExpression	s [ in_value -> size ] = '\\0'		3086690	0		=			
ANR	3086755	ArrayIndexing	s [ in_value -> size ]		3086690	0					
ANR	3086756	Identifier	s		3086690	0					
ANR	3086757	PtrMemberAccess	in_value -> size		3086690	1					
ANR	3086758	Identifier	in_value		3086690	0					
ANR	3086759	Identifier	size		3086690	1					
ANR	3086760	PrimaryExpression	'\\0'		3086690	1					
ANR	3086761	WhileStatement	"while ( table -> name != NULL && strcmp ( table -> name , s ) != 0 )"		3086690	5					
ANR	3086762	Condition	"table -> name != NULL && strcmp ( table -> name , s ) != 0"	156:9:5427:5476	3086690	0	True				
ANR	3086763	AndExpression	"table -> name != NULL && strcmp ( table -> name , s ) != 0"		3086690	0		&&			
ANR	3086764	EqualityExpression	table -> name != NULL		3086690	0		!=			
ANR	3086765	PtrMemberAccess	table -> name		3086690	0					
ANR	3086766	Identifier	table		3086690	0					
ANR	3086767	Identifier	name		3086690	1					
ANR	3086768	Identifier	NULL		3086690	1					
ANR	3086769	EqualityExpression	"strcmp ( table -> name , s ) != 0"		3086690	1		!=			
ANR	3086770	CallExpression	"strcmp ( table -> name , s )"		3086690	0					
ANR	3086771	Callee	strcmp		3086690	0					
ANR	3086772	Identifier	strcmp		3086690	0					
ANR	3086773	ArgumentList	table -> name		3086690	1					
ANR	3086774	Argument	table -> name		3086690	0					
ANR	3086775	PtrMemberAccess	table -> name		3086690	0					
ANR	3086776	Identifier	table		3086690	0					
ANR	3086777	Identifier	name		3086690	1					
ANR	3086778	Argument	s		3086690	1					
ANR	3086779	Identifier	s		3086690	0					
ANR	3086780	PrimaryExpression	0		3086690	1					
ANR	3086781	ExpressionStatement	table ++	156:61:5479:5486	3086690	1	True				
ANR	3086782	PostIncDecOperationExpression	table ++		3086690	0					
ANR	3086783	Identifier	table		3086690	0					
ANR	3086784	IncDec	++		3086690	1					
ANR	3086785	IfStatement	if ( table -> name != NULL )		3086690	6					
ANR	3086786	Condition	table -> name != NULL	157:6:5494:5512	3086690	0	True				
ANR	3086787	EqualityExpression	table -> name != NULL		3086690	0		!=			
ANR	3086788	PtrMemberAccess	table -> name		3086690	0					
ANR	3086789	Identifier	table		3086690	0					
ANR	3086790	Identifier	name		3086690	1					
ANR	3086791	Identifier	NULL		3086690	1					
ANR	3086792	ExpressionStatement	* out_value = table -> value	157:27:5515:5540	3086690	1	True				
ANR	3086793	AssignmentExpression	* out_value = table -> value		3086690	0		=			
ANR	3086794	UnaryOperationExpression	* out_value		3086690	0					
ANR	3086795	UnaryOperator	*		3086690	0					
ANR	3086796	Identifier	out_value		3086690	1					
ANR	3086797	PtrMemberAccess	table -> value		3086690	1					
ANR	3086798	Identifier	table		3086690	0					
ANR	3086799	Identifier	value		3086690	1					
ANR	3086800	ElseStatement	else		3086690	0					
ANR	3086801	CompoundStatement		18:7:524:524	3086690	0					
ANR	3086802	ExpressionStatement	free ( s )	159:4:5555:5562	3086690	0	True				
ANR	3086803	CallExpression	free ( s )		3086690	0					
ANR	3086804	Callee	free		3086690	0					
ANR	3086805	Identifier	free		3086690	0					
ANR	3086806	ArgumentList	s		3086690	1					
ANR	3086807	Argument	s		3086690	0					
ANR	3086808	Identifier	s		3086690	0					
ANR	3086809	ExpressionStatement	s = NULL	159:13:5564:5572	3086690	1	True				
ANR	3086810	AssignmentExpression	s = NULL		3086690	0		=			
ANR	3086811	Identifier	s		3086690	0					
ANR	3086812	Identifier	NULL		3086690	1					
ANR	3086813	ExpressionStatement	return_error ( gs_error_rangecheck )	160:4:5578:5611	3086690	2	True				
ANR	3086814	CallExpression	return_error ( gs_error_rangecheck )		3086690	0					
ANR	3086815	Callee	return_error		3086690	0					
ANR	3086816	Identifier	return_error		3086690	0					
ANR	3086817	ArgumentList	gs_error_rangecheck		3086690	1					
ANR	3086818	Argument	gs_error_rangecheck		3086690	0					
ANR	3086819	Identifier	gs_error_rangecheck		3086690	0					
ANR	3086820	ExpressionStatement	free ( s )	163:2:5620:5627	3086690	7	True				
ANR	3086821	CallExpression	free ( s )		3086690	0					
ANR	3086822	Callee	free		3086690	0					
ANR	3086823	Identifier	free		3086690	0					
ANR	3086824	ArgumentList	s		3086690	1					
ANR	3086825	Argument	s		3086690	0					
ANR	3086826	Identifier	s		3086690	0					
ANR	3086827	ExpressionStatement	s = NULL	163:11:5629:5637	3086690	8	True				
ANR	3086828	AssignmentExpression	s = NULL		3086690	0		=			
ANR	3086829	Identifier	s		3086690	0					
ANR	3086830	Identifier	NULL		3086690	1					
ANR	3086831	ReturnStatement	return 0 ;	165:2:5642:5650	3086690	9	True				
ANR	3086832	PrimaryExpression	0		3086690	0					
ANR	3086833	ReturnType	int		3086690	1					
ANR	3086834	Identifier	eprn_get_int		3086690	2					
ANR	3086835	ParameterList	"const gs_param_string * in_value , const eprn_StringAndInt * table , int * out_value"		3086690	3					
ANR	3086836	Parameter	const gs_param_string * in_value	139:17:4941:4971	3086690	0	True				
ANR	3086837	ParameterType	const gs_param_string *		3086690	0					
ANR	3086838	Identifier	in_value		3086690	1					
ANR	3086839	Parameter	const eprn_StringAndInt * table	140:2:4976:5005	3086690	1	True				
ANR	3086840	ParameterType	const eprn_StringAndInt *		3086690	0					
ANR	3086841	Identifier	table		3086690	1					
ANR	3086842	Parameter	int * out_value	140:34:5008:5021	3086690	2	True				
ANR	3086843	ParameterType	int *		3086690	0					
ANR	3086844	Identifier	out_value		3086690	1					
ANR	3086845	CFGEntryNode	ENTRY		3086690		True				
ANR	3086846	CFGExitNode	EXIT		3086690		True				
ANR	3086847	Symbol	strcmp		3086690						
ANR	3086848	Symbol	* in_value		3086690						
ANR	3086849	Symbol	malloc		3086690						
ANR	3086850	Symbol	NULL		3086690						
ANR	3086851	Symbol	* * in_value		3086690						
ANR	3086852	Symbol	gs_error_rangecheck		3086690						
ANR	3086853	Symbol	* in_value -> size		3086690						
ANR	3086854	Symbol	in_value		3086690						
ANR	3086855	Symbol	* table		3086690						
ANR	3086856	Symbol	in_value -> size		3086690						
ANR	3086857	Symbol	* out_value		3086690						
ANR	3086858	Symbol	out_value		3086690						
ANR	3086859	Symbol	gs_error_VMerror		3086690						
ANR	3086860	Symbol	s		3086690						
ANR	3086861	Symbol	table -> value		3086690						
ANR	3086862	Symbol	in_value -> data		3086690						
ANR	3086863	Symbol	* s		3086690						
ANR	3086864	Symbol	table		3086690						
ANR	3086865	Symbol	table -> name		3086690						
ANR	3086866	Function	eprn_dump_parameter_list	179:0:6013:6490							
ANR	3086867	FunctionDef	eprn_dump_parameter_list (gs_param_list * plist)		3086866	0					
ANR	3086868	CompoundStatement		180:0:6065:6490	3086866	0					
ANR	3086869	IdentifierDeclStatement	gs_param_enumerator_t iterator ;	181:2:6069:6099	3086866	0	True				
ANR	3086870	IdentifierDecl	iterator		3086866	0					
ANR	3086871	IdentifierDeclType	gs_param_enumerator_t		3086866	0					
ANR	3086872	Identifier	iterator		3086866	1					
ANR	3086873	IdentifierDeclStatement	gs_param_key_t key ;	182:2:6103:6121	3086866	1	True				
ANR	3086874	IdentifierDecl	key		3086866	0					
ANR	3086875	IdentifierDeclType	gs_param_key_t		3086866	0					
ANR	3086876	Identifier	key		3086866	1					
ANR	3086877	IdentifierDeclStatement	int count = 0 ;	183:2:6125:6138	3086866	2	True				
ANR	3086878	IdentifierDecl	count = 0		3086866	0					
ANR	3086879	IdentifierDeclType	int		3086866	0					
ANR	3086880	Identifier	count		3086866	1					
ANR	3086881	AssignmentExpression	count = 0		3086866	2		=			
ANR	3086882	Identifier	count		3086866	0					
ANR	3086883	PrimaryExpression	0		3086866	1					
ANR	3086884	ExpressionStatement	param_init_enumerator ( & iterator )	185:2:6143:6175	3086866	3	True				
ANR	3086885	CallExpression	param_init_enumerator ( & iterator )		3086866	0					
ANR	3086886	Callee	param_init_enumerator		3086866	0					
ANR	3086887	Identifier	param_init_enumerator		3086866	0					
ANR	3086888	ArgumentList	& iterator		3086866	1					
ANR	3086889	Argument	& iterator		3086866	0					
ANR	3086890	UnaryOperationExpression	& iterator		3086866	0					
ANR	3086891	UnaryOperator	&		3086866	0					
ANR	3086892	Identifier	iterator		3086866	1					
ANR	3086893	WhileStatement	"while ( param_get_next_key ( plist , & iterator , & key ) == 0 )"		3086866	4					
ANR	3086894	Condition	"param_get_next_key ( plist , & iterator , & key ) == 0"	186:9:6186:6232	3086866	0	True				
ANR	3086895	EqualityExpression	"param_get_next_key ( plist , & iterator , & key ) == 0"		3086866	0		==			
ANR	3086896	CallExpression	"param_get_next_key ( plist , & iterator , & key )"		3086866	0					
ANR	3086897	Callee	param_get_next_key		3086866	0					
ANR	3086898	Identifier	param_get_next_key		3086866	0					
ANR	3086899	ArgumentList	plist		3086866	1					
ANR	3086900	Argument	plist		3086866	0					
ANR	3086901	Identifier	plist		3086866	0					
ANR	3086902	Argument	& iterator		3086866	1					
ANR	3086903	UnaryOperationExpression	& iterator		3086866	0					
ANR	3086904	UnaryOperator	&		3086866	0					
ANR	3086905	Identifier	iterator		3086866	1					
ANR	3086906	Argument	& key		3086866	2					
ANR	3086907	UnaryOperationExpression	& key		3086866	0					
ANR	3086908	UnaryOperator	&		3086866	0					
ANR	3086909	Identifier	key		3086866	1					
ANR	3086910	PrimaryExpression	0		3086866	1					
ANR	3086911	CompoundStatement		8:4:175:180	3086866	1					
ANR	3086912	IdentifierDeclStatement	int j ;	187:4:6241:6246	3086866	0	True				
ANR	3086913	IdentifierDecl	j		3086866	0					
ANR	3086914	IdentifierDeclType	int		3086866	0					
ANR	3086915	Identifier	j		3086866	1					
ANR	3086916	ExpressionStatement	count ++	189:4:6253:6260	3086866	1	True				
ANR	3086917	PostIncDecOperationExpression	count ++		3086866	0					
ANR	3086918	Identifier	count		3086866	0					
ANR	3086919	IncDec	++		3086866	1					
ANR	3086920	ExpressionStatement	"dmlprintf ( plist -> memory , ""  `"" )"	190:4:6266:6297	3086866	2	True				
ANR	3086921	CallExpression	"dmlprintf ( plist -> memory , ""  `"" )"		3086866	0					
ANR	3086922	Callee	dmlprintf		3086866	0					
ANR	3086923	Identifier	dmlprintf		3086866	0					
ANR	3086924	ArgumentList	plist -> memory		3086866	1					
ANR	3086925	Argument	plist -> memory		3086866	0					
ANR	3086926	PtrMemberAccess	plist -> memory		3086866	0					
ANR	3086927	Identifier	plist		3086866	0					
ANR	3086928	Identifier	memory		3086866	1					
ANR	3086929	Argument	"""  `"""		3086866	1					
ANR	3086930	PrimaryExpression	"""  `"""		3086866	0					
ANR	3086931	ForStatement	for ( j = 0 ; j < key . size ; j ++ )		3086866	3					
ANR	3086932	ForInit	j = 0 ;	191:9:6308:6313	3086866	0	True				
ANR	3086933	AssignmentExpression	j = 0		3086866	0		=			
ANR	3086934	Identifier	j		3086866	0					
ANR	3086935	PrimaryExpression	0		3086866	1					
ANR	3086936	Condition	j < key . size	191:16:6315:6326	3086866	1	True				
ANR	3086937	RelationalExpression	j < key . size		3086866	0		<			
ANR	3086938	Identifier	j		3086866	0					
ANR	3086939	MemberAccess	key . size		3086866	1					
ANR	3086940	Identifier	key		3086866	0					
ANR	3086941	Identifier	size		3086866	1					
ANR	3086942	PostIncDecOperationExpression	j ++	191:30:6329:6331	3086866	2	True				
ANR	3086943	Identifier	j		3086866	0					
ANR	3086944	IncDec	++		3086866	1					
ANR	3086945	ExpressionStatement	"dmputc ( plist -> memory , key . data [ j ] )"	191:35:6334:6368	3086866	3	True				
ANR	3086946	CallExpression	"dmputc ( plist -> memory , key . data [ j ] )"		3086866	0					
ANR	3086947	Callee	dmputc		3086866	0					
ANR	3086948	Identifier	dmputc		3086866	0					
ANR	3086949	ArgumentList	plist -> memory		3086866	1					
ANR	3086950	Argument	plist -> memory		3086866	0					
ANR	3086951	PtrMemberAccess	plist -> memory		3086866	0					
ANR	3086952	Identifier	plist		3086866	0					
ANR	3086953	Identifier	memory		3086866	1					
ANR	3086954	Argument	key . data [ j ]		3086866	1					
ANR	3086955	ArrayIndexing	key . data [ j ]		3086866	0					
ANR	3086956	MemberAccess	key . data		3086866	0					
ANR	3086957	Identifier	key		3086866	0					
ANR	3086958	Identifier	data		3086866	1					
ANR	3086959	Identifier	j		3086866	1					
ANR	3086960	ExpressionStatement	"dmprintf ( plist -> memory , ""'\\n"" )"	192:4:6374:6404	3086866	4	True				
ANR	3086961	CallExpression	"dmprintf ( plist -> memory , ""'\\n"" )"		3086866	0					
ANR	3086962	Callee	dmprintf		3086866	0					
ANR	3086963	Identifier	dmprintf		3086866	0					
ANR	3086964	ArgumentList	plist -> memory		3086866	1					
ANR	3086965	Argument	plist -> memory		3086866	0					
ANR	3086966	PtrMemberAccess	plist -> memory		3086866	0					
ANR	3086967	Identifier	plist		3086866	0					
ANR	3086968	Identifier	memory		3086866	1					
ANR	3086969	Argument	"""'\\n"""		3086866	1					
ANR	3086970	PrimaryExpression	"""'\\n"""		3086866	0					
ANR	3086971	ExpressionStatement	"dmlprintf1 ( plist -> memory , ""  Number of parameters: %d.\\n"" , count )"	194:2:6412:6477	3086866	5	True				
ANR	3086972	CallExpression	"dmlprintf1 ( plist -> memory , ""  Number of parameters: %d.\\n"" , count )"		3086866	0					
ANR	3086973	Callee	dmlprintf1		3086866	0					
ANR	3086974	Identifier	dmlprintf1		3086866	0					
ANR	3086975	ArgumentList	plist -> memory		3086866	1					
ANR	3086976	Argument	plist -> memory		3086866	0					
ANR	3086977	PtrMemberAccess	plist -> memory		3086866	0					
ANR	3086978	Identifier	plist		3086866	0					
ANR	3086979	Identifier	memory		3086866	1					
ANR	3086980	Argument	"""  Number of parameters: %d.\\n"""		3086866	1					
ANR	3086981	PrimaryExpression	"""  Number of parameters: %d.\\n"""		3086866	0					
ANR	3086982	Argument	count		3086866	2					
ANR	3086983	Identifier	count		3086866	0					
ANR	3086984	ReturnStatement	return ;	196:2:6482:6488	3086866	6	True				
ANR	3086985	ReturnType	void		3086866	1					
ANR	3086986	Identifier	eprn_dump_parameter_list		3086866	2					
ANR	3086987	ParameterList	gs_param_list * plist		3086866	3					
ANR	3086988	Parameter	gs_param_list * plist	179:30:6043:6062	3086866	0	True				
ANR	3086989	ParameterType	gs_param_list *		3086866	0					
ANR	3086990	Identifier	plist		3086866	1					
ANR	3086991	CFGEntryNode	ENTRY		3086866		True				
ANR	3086992	CFGExitNode	EXIT		3086866		True				
ANR	3086993	Symbol	* key . data		3086866						
ANR	3086994	Symbol	& key		3086866						
ANR	3086995	Symbol	* plist		3086866						
ANR	3086996	Symbol	key . data		3086866						
ANR	3086997	Symbol	count		3086866						
ANR	3086998	Symbol	* key		3086866						
ANR	3086999	Symbol	j		3086866						
ANR	3087000	Symbol	key . size		3086866						
ANR	3087001	Symbol	param_get_next_key		3086866						
ANR	3087002	Symbol	plist		3086866						
ANR	3087003	Symbol	iterator		3086866						
ANR	3087004	Symbol	* j		3086866						
ANR	3087005	Symbol	& iterator		3086866						
ANR	3087006	Symbol	plist -> memory		3086866						
ANR	3087007	Symbol	key		3086866						
ANR	3087008	Function	eprn_fillpage	207:0:6784:6981							
ANR	3087009	FunctionDef	"eprn_fillpage (gx_device * dev , gs_gstate * pgs , gx_device_color * pdevc)"		3087008	0					
ANR	3087010	CompoundStatement		209:0:6859:6981	3087008	0					
ANR	3087011	IdentifierDeclStatement	eprn_Eprn * eprn = & ( ( eprn_Device * ) dev ) -> eprn ;	210:2:6863:6908	3087008	0	True				
ANR	3087012	IdentifierDecl	* eprn = & ( ( eprn_Device * ) dev ) -> eprn		3087008	0					
ANR	3087013	IdentifierDeclType	eprn_Eprn *		3087008	0					
ANR	3087014	Identifier	eprn		3087008	1					
ANR	3087015	AssignmentExpression	* eprn = & ( ( eprn_Device * ) dev ) -> eprn		3087008	2		=			
ANR	3087016	Identifier	eprn		3087008	0					
ANR	3087017	UnaryOperationExpression	& ( ( eprn_Device * ) dev ) -> eprn		3087008	1					
ANR	3087018	UnaryOperator	&		3087008	0					
ANR	3087019	PtrMemberAccess	( ( eprn_Device * ) dev ) -> eprn		3087008	1					
ANR	3087020	CastExpression	( eprn_Device * ) dev		3087008	0					
ANR	3087021	CastTarget	eprn_Device *		3087008	0					
ANR	3087022	Identifier	dev		3087008	1					
ANR	3087023	Identifier	eprn		3087008	1					
ANR	3087024	ExpressionStatement	eprn -> pgs = pgs	212:2:6913:6928	3087008	1	True				
ANR	3087025	AssignmentExpression	eprn -> pgs = pgs		3087008	0		=			
ANR	3087026	PtrMemberAccess	eprn -> pgs		3087008	0					
ANR	3087027	Identifier	eprn		3087008	0					
ANR	3087028	Identifier	pgs		3087008	1					
ANR	3087029	Identifier	pgs		3087008	1					
ANR	3087030	ReturnStatement	"return ( * eprn -> orig_fillpage ) ( dev , pgs , pdevc ) ;"	214:2:6933:6979	3087008	2	True				
ANR	3087031	CallExpression	"( * eprn -> orig_fillpage ) ( dev , pgs , pdevc )"		3087008	0					
ANR	3087032	Callee	* eprn -> orig_fillpage		3087008	0					
ANR	3087033	UnaryOperationExpression	* eprn -> orig_fillpage		3087008	0					
ANR	3087034	UnaryOperator	*		3087008	0					
ANR	3087035	PtrMemberAccess	eprn -> orig_fillpage		3087008	1					
ANR	3087036	Identifier	eprn		3087008	0					
ANR	3087037	Identifier	orig_fillpage		3087008	1					
ANR	3087038	ArgumentList	dev		3087008	1					
ANR	3087039	Argument	dev		3087008	0					
ANR	3087040	Identifier	dev		3087008	0					
ANR	3087041	Argument	pgs		3087008	1					
ANR	3087042	Identifier	pgs		3087008	0					
ANR	3087043	Argument	pdevc		3087008	2					
ANR	3087044	Identifier	pdevc		3087008	0					
ANR	3087045	ReturnType	int		3087008	1					
ANR	3087046	Identifier	eprn_fillpage		3087008	2					
ANR	3087047	ParameterList	"gx_device * dev , gs_gstate * pgs , gx_device_color * pdevc"		3087008	3					
ANR	3087048	Parameter	gx_device * dev	208:14:6802:6815	3087008	0	True				
ANR	3087049	ParameterType	gx_device *		3087008	0					
ANR	3087050	Identifier	dev		3087008	1					
ANR	3087051	Parameter	gs_gstate * pgs	208:30:6818:6832	3087008	1	True				
ANR	3087052	ParameterType	gs_gstate *		3087008	0					
ANR	3087053	Identifier	pgs		3087008	1					
ANR	3087054	Parameter	gx_device_color * pdevc	208:47:6835:6856	3087008	2	True				
ANR	3087055	ParameterType	gx_device_color *		3087008	0					
ANR	3087056	Identifier	pdevc		3087008	1					
ANR	3087057	CFGEntryNode	ENTRY		3087008		True				
ANR	3087058	CFGExitNode	EXIT		3087008		True				
ANR	3087059	Symbol	* eprn		3087008						
ANR	3087060	Symbol	dev		3087008						
ANR	3087061	Symbol	eprn -> pgs		3087008						
ANR	3087062	Symbol	* * eprn		3087008						
ANR	3087063	Symbol	pdevc		3087008						
ANR	3087064	Symbol	eprn		3087008						
ANR	3087065	Symbol	* eprn -> orig_fillpage		3087008						
ANR	3087066	Symbol	pgs		3087008						
ANR	3087067	Symbol	& ( ( eprn_Device * ) dev ) -> eprn		3087008						
ANR	3087068	Symbol	eprn -> orig_fillpage		3087008						
ANR	3087069	Function	eprn_replace_fillpage	218:0:6985:7239							
ANR	3087070	FunctionDef	eprn_replace_fillpage (gx_device * dev)		3087069	0					
ANR	3087071	CompoundStatement		219:0:7035:7239	3087069	0					
ANR	3087072	IdentifierDeclStatement	eprn_Eprn * eprn = & ( ( eprn_Device * ) dev ) -> eprn ;	220:4:7041:7086	3087069	0	True				
ANR	3087073	IdentifierDecl	* eprn = & ( ( eprn_Device * ) dev ) -> eprn		3087069	0					
ANR	3087074	IdentifierDeclType	eprn_Eprn *		3087069	0					
ANR	3087075	Identifier	eprn		3087069	1					
ANR	3087076	AssignmentExpression	* eprn = & ( ( eprn_Device * ) dev ) -> eprn		3087069	2		=			
ANR	3087077	Identifier	eprn		3087069	0					
ANR	3087078	UnaryOperationExpression	& ( ( eprn_Device * ) dev ) -> eprn		3087069	1					
ANR	3087079	UnaryOperator	&		3087069	0					
ANR	3087080	PtrMemberAccess	( ( eprn_Device * ) dev ) -> eprn		3087069	1					
ANR	3087081	CastExpression	( eprn_Device * ) dev		3087069	0					
ANR	3087082	CastTarget	eprn_Device *		3087069	0					
ANR	3087083	Identifier	dev		3087069	1					
ANR	3087084	Identifier	eprn		3087069	1					
ANR	3087085	IfStatement	if ( dev -> procs . fillpage != eprn_fillpage )		3087069	1					
ANR	3087086	Condition	dev -> procs . fillpage != eprn_fillpage	222:8:7097:7132	3087069	0	True				
ANR	3087087	EqualityExpression	dev -> procs . fillpage != eprn_fillpage		3087069	0		!=			
ANR	3087088	MemberAccess	dev -> procs . fillpage		3087069	0					
ANR	3087089	PtrMemberAccess	dev -> procs		3087069	0					
ANR	3087090	Identifier	dev		3087069	0					
ANR	3087091	Identifier	procs		3087069	1					
ANR	3087092	Identifier	fillpage		3087069	1					
ANR	3087093	Identifier	eprn_fillpage		3087069	1					
ANR	3087094	CompoundStatement		4:46:99:99	3087069	1					
ANR	3087095	ExpressionStatement	eprn -> orig_fillpage = dev -> procs . fillpage	223:8:7145:7186	3087069	0	True				
ANR	3087096	AssignmentExpression	eprn -> orig_fillpage = dev -> procs . fillpage		3087069	0		=			
ANR	3087097	PtrMemberAccess	eprn -> orig_fillpage		3087069	0					
ANR	3087098	Identifier	eprn		3087069	0					
ANR	3087099	Identifier	orig_fillpage		3087069	1					
ANR	3087100	MemberAccess	dev -> procs . fillpage		3087069	1					
ANR	3087101	PtrMemberAccess	dev -> procs		3087069	0					
ANR	3087102	Identifier	dev		3087069	0					
ANR	3087103	Identifier	procs		3087069	1					
ANR	3087104	Identifier	fillpage		3087069	1					
ANR	3087105	ExpressionStatement	dev -> procs . fillpage = eprn_fillpage	224:8:7196:7231	3087069	1	True				
ANR	3087106	AssignmentExpression	dev -> procs . fillpage = eprn_fillpage		3087069	0		=			
ANR	3087107	MemberAccess	dev -> procs . fillpage		3087069	0					
ANR	3087108	PtrMemberAccess	dev -> procs		3087069	0					
ANR	3087109	Identifier	dev		3087069	0					
ANR	3087110	Identifier	procs		3087069	1					
ANR	3087111	Identifier	fillpage		3087069	1					
ANR	3087112	Identifier	eprn_fillpage		3087069	1					
ANR	3087113	ReturnType	static void		3087069	1					
ANR	3087114	Identifier	eprn_replace_fillpage		3087069	2					
ANR	3087115	ParameterList	gx_device * dev		3087069	3					
ANR	3087116	Parameter	gx_device * dev	218:34:7019:7032	3087069	0	True				
ANR	3087117	ParameterType	gx_device *		3087069	0					
ANR	3087118	Identifier	dev		3087069	1					
ANR	3087119	CFGEntryNode	ENTRY		3087069		True				
ANR	3087120	CFGExitNode	EXIT		3087069		True				
ANR	3087121	Symbol	* dev		3087069						
ANR	3087122	Symbol	dev -> procs		3087069						
ANR	3087123	Symbol	dev -> procs . fillpage		3087069						
ANR	3087124	Symbol	* eprn		3087069						
ANR	3087125	Symbol	dev		3087069						
ANR	3087126	Symbol	eprn_fillpage		3087069						
ANR	3087127	Symbol	eprn		3087069						
ANR	3087128	Symbol	& ( ( eprn_Device * ) dev ) -> eprn		3087069						
ANR	3087129	Symbol	eprn -> orig_fillpage		3087069						
ANR	3087130	Function	eprn_get_params	240:0:7653:10718							
ANR	3087131	FunctionDef	"eprn_get_params (gx_device * device , gs_param_list * plist)"		3087130	0					
ANR	3087132	CompoundStatement		241:0:7714:10718	3087130	0					
ANR	3087133	IdentifierDeclStatement	gs_param_string string_value ;	242:2:7718:7746	3087130	0	True				
ANR	3087134	IdentifierDecl	string_value		3087130	0					
ANR	3087135	IdentifierDeclType	gs_param_string		3087130	0					
ANR	3087136	Identifier	string_value		3087130	1					
ANR	3087137	IdentifierDeclStatement	const eprn_Eprn * eprn = & ( ( eprn_Device * ) device ) -> eprn ;	243:2:7750:7804	3087130	1	True				
ANR	3087138	IdentifierDecl	* eprn = & ( ( eprn_Device * ) device ) -> eprn		3087130	0					
ANR	3087139	IdentifierDeclType	const eprn_Eprn *		3087130	0					
ANR	3087140	Identifier	eprn		3087130	1					
ANR	3087141	AssignmentExpression	* eprn = & ( ( eprn_Device * ) device ) -> eprn		3087130	2		=			
ANR	3087142	Identifier	eprn		3087130	0					
ANR	3087143	UnaryOperationExpression	& ( ( eprn_Device * ) device ) -> eprn		3087130	1					
ANR	3087144	UnaryOperator	&		3087130	0					
ANR	3087145	PtrMemberAccess	( ( eprn_Device * ) device ) -> eprn		3087130	1					
ANR	3087146	CastExpression	( eprn_Device * ) device		3087130	0					
ANR	3087147	CastTarget	eprn_Device *		3087130	0					
ANR	3087148	Identifier	device		3087130	1					
ANR	3087149	Identifier	eprn		3087130	1					
ANR	3087150	IdentifierDeclStatement	int rc ;	244:2:7808:7814	3087130	2	True				
ANR	3087151	IdentifierDecl	rc		3087130	0					
ANR	3087152	IdentifierDeclType	int		3087130	0					
ANR	3087153	Identifier	rc		3087130	1					
ANR	3087154	ExpressionStatement	"if_debug0 ( EPRN_TRACE_CHAR , ""! eprn_get_params()...\\n"" )"	247:2:7837:7891	3087130	3	True				
ANR	3087155	CallExpression	"if_debug0 ( EPRN_TRACE_CHAR , ""! eprn_get_params()...\\n"" )"		3087130	0					
ANR	3087156	Callee	if_debug0		3087130	0					
ANR	3087157	Identifier	if_debug0		3087130	0					
ANR	3087158	ArgumentList	EPRN_TRACE_CHAR		3087130	1					
ANR	3087159	Argument	EPRN_TRACE_CHAR		3087130	0					
ANR	3087160	Identifier	EPRN_TRACE_CHAR		3087130	0					
ANR	3087161	Argument	"""! eprn_get_params()...\\n"""		3087130	1					
ANR	3087162	PrimaryExpression	"""! eprn_get_params()...\\n"""		3087130	0					
ANR	3087163	ExpressionStatement	eprn_replace_fillpage ( device )	250:2:7903:7932	3087130	4	True				
ANR	3087164	CallExpression	eprn_replace_fillpage ( device )		3087130	0					
ANR	3087165	Callee	eprn_replace_fillpage		3087130	0					
ANR	3087166	Identifier	eprn_replace_fillpage		3087130	0					
ANR	3087167	ArgumentList	device		3087130	1					
ANR	3087168	Argument	device		3087130	0					
ANR	3087169	Identifier	device		3087130	0					
ANR	3087170	ExpressionStatement	"rc = gdev_prn_get_params ( device , plist )"	253:2:7967:8006	3087130	5	True				
ANR	3087171	AssignmentExpression	"rc = gdev_prn_get_params ( device , plist )"		3087130	0		=			
ANR	3087172	Identifier	rc		3087130	0					
ANR	3087173	CallExpression	"gdev_prn_get_params ( device , plist )"		3087130	1					
ANR	3087174	Callee	gdev_prn_get_params		3087130	0					
ANR	3087175	Identifier	gdev_prn_get_params		3087130	0					
ANR	3087176	ArgumentList	device		3087130	1					
ANR	3087177	Argument	device		3087130	0					
ANR	3087178	Identifier	device		3087130	0					
ANR	3087179	Argument	plist		3087130	1					
ANR	3087180	Identifier	plist		3087130	0					
ANR	3087181	IfStatement	if ( rc < 0 )		3087130	6					
ANR	3087182	Condition	rc < 0	254:6:8014:8019	3087130	0	True				
ANR	3087183	RelationalExpression	rc < 0		3087130	0		<			
ANR	3087184	Identifier	rc		3087130	0					
ANR	3087185	PrimaryExpression	0		3087130	1					
ANR	3087186	ReturnStatement	return rc ;	254:14:8022:8031	3087130	1	True				
ANR	3087187	Identifier	rc		3087130	0					
ANR	3087188	IfStatement	"if ( ( rc = param_write_int ( plist , ""BlackLevels"" , ( const int * ) & eprn -> black_levels ) ) < 0 )"		3087130	7					
ANR	3087189	Condition	"( rc = param_write_int ( plist , ""BlackLevels"" , ( const int * ) & eprn -> black_levels ) ) < 0"	258:6:8167:8254	3087130	0	True				
ANR	3087190	RelationalExpression	"( rc = param_write_int ( plist , ""BlackLevels"" , ( const int * ) & eprn -> black_levels ) ) < 0"		3087130	0		<			
ANR	3087191	AssignmentExpression	"rc = param_write_int ( plist , ""BlackLevels"" , ( const int * ) & eprn -> black_levels )"		3087130	0		=			
ANR	3087192	Identifier	rc		3087130	0					
ANR	3087193	CallExpression	"param_write_int ( plist , ""BlackLevels"" , ( const int * ) & eprn -> black_levels )"		3087130	1					
ANR	3087194	Callee	param_write_int		3087130	0					
ANR	3087195	Identifier	param_write_int		3087130	0					
ANR	3087196	ArgumentList	plist		3087130	1					
ANR	3087197	Argument	plist		3087130	0					
ANR	3087198	Identifier	plist		3087130	0					
ANR	3087199	Argument	"""BlackLevels"""		3087130	1					
ANR	3087200	PrimaryExpression	"""BlackLevels"""		3087130	0					
ANR	3087201	Argument	( const int * ) & eprn -> black_levels		3087130	2					
ANR	3087202	CastExpression	( const int * ) & eprn -> black_levels		3087130	0					
ANR	3087203	CastTarget	const int *		3087130	0					
ANR	3087204	UnaryOperationExpression	& eprn -> black_levels		3087130	1					
ANR	3087205	UnaryOperator	&		3087130	0					
ANR	3087206	PtrMemberAccess	eprn -> black_levels		3087130	1					
ANR	3087207	Identifier	eprn		3087130	0					
ANR	3087208	Identifier	black_levels		3087130	1					
ANR	3087209	PrimaryExpression	0		3087130	1					
ANR	3087210	ReturnStatement	return rc ;	259:46:8257:8266	3087130	1	True				
ANR	3087211	Identifier	rc		3087130	0					
ANR	3087212	IfStatement	"if ( ( rc = param_write_int ( plist , ""CMYLevels"" , ( const int * ) & eprn -> non_black_levels ) ) < 0 )"		3087130	8					
ANR	3087213	Condition	"( rc = param_write_int ( plist , ""CMYLevels"" , ( const int * ) & eprn -> non_black_levels ) ) < 0"	260:6:8274:8363	3087130	0	True				
ANR	3087214	RelationalExpression	"( rc = param_write_int ( plist , ""CMYLevels"" , ( const int * ) & eprn -> non_black_levels ) ) < 0"		3087130	0		<			
ANR	3087215	AssignmentExpression	"rc = param_write_int ( plist , ""CMYLevels"" , ( const int * ) & eprn -> non_black_levels )"		3087130	0		=			
ANR	3087216	Identifier	rc		3087130	0					
ANR	3087217	CallExpression	"param_write_int ( plist , ""CMYLevels"" , ( const int * ) & eprn -> non_black_levels )"		3087130	1					
ANR	3087218	Callee	param_write_int		3087130	0					
ANR	3087219	Identifier	param_write_int		3087130	0					
ANR	3087220	ArgumentList	plist		3087130	1					
ANR	3087221	Argument	plist		3087130	0					
ANR	3087222	Identifier	plist		3087130	0					
ANR	3087223	Argument	"""CMYLevels"""		3087130	1					
ANR	3087224	PrimaryExpression	"""CMYLevels"""		3087130	0					
ANR	3087225	Argument	( const int * ) & eprn -> non_black_levels		3087130	2					
ANR	3087226	CastExpression	( const int * ) & eprn -> non_black_levels		3087130	0					
ANR	3087227	CastTarget	const int *		3087130	0					
ANR	3087228	UnaryOperationExpression	& eprn -> non_black_levels		3087130	1					
ANR	3087229	UnaryOperator	&		3087130	0					
ANR	3087230	PtrMemberAccess	eprn -> non_black_levels		3087130	1					
ANR	3087231	Identifier	eprn		3087130	0					
ANR	3087232	Identifier	non_black_levels		3087130	1					
ANR	3087233	PrimaryExpression	0		3087130	1					
ANR	3087234	ReturnStatement	return rc ;	261:50:8366:8375	3087130	1	True				
ANR	3087235	Identifier	rc		3087130	0					
ANR	3087236	IfStatement	"if ( ( rc = param_write_int ( plist , ""RGBLevels"" , ( const int * ) & eprn -> non_black_levels ) ) < 0 )"		3087130	9					
ANR	3087237	Condition	"( rc = param_write_int ( plist , ""RGBLevels"" , ( const int * ) & eprn -> non_black_levels ) ) < 0"	262:6:8383:8472	3087130	0	True				
ANR	3087238	RelationalExpression	"( rc = param_write_int ( plist , ""RGBLevels"" , ( const int * ) & eprn -> non_black_levels ) ) < 0"		3087130	0		<			
ANR	3087239	AssignmentExpression	"rc = param_write_int ( plist , ""RGBLevels"" , ( const int * ) & eprn -> non_black_levels )"		3087130	0		=			
ANR	3087240	Identifier	rc		3087130	0					
ANR	3087241	CallExpression	"param_write_int ( plist , ""RGBLevels"" , ( const int * ) & eprn -> non_black_levels )"		3087130	1					
ANR	3087242	Callee	param_write_int		3087130	0					
ANR	3087243	Identifier	param_write_int		3087130	0					
ANR	3087244	ArgumentList	plist		3087130	1					
ANR	3087245	Argument	plist		3087130	0					
ANR	3087246	Identifier	plist		3087130	0					
ANR	3087247	Argument	"""RGBLevels"""		3087130	1					
ANR	3087248	PrimaryExpression	"""RGBLevels"""		3087130	0					
ANR	3087249	Argument	( const int * ) & eprn -> non_black_levels		3087130	2					
ANR	3087250	CastExpression	( const int * ) & eprn -> non_black_levels		3087130	0					
ANR	3087251	CastTarget	const int *		3087130	0					
ANR	3087252	UnaryOperationExpression	& eprn -> non_black_levels		3087130	1					
ANR	3087253	UnaryOperator	&		3087130	0					
ANR	3087254	PtrMemberAccess	eprn -> non_black_levels		3087130	1					
ANR	3087255	Identifier	eprn		3087130	0					
ANR	3087256	Identifier	non_black_levels		3087130	1					
ANR	3087257	PrimaryExpression	0		3087130	1					
ANR	3087258	ReturnStatement	return rc ;	263:50:8475:8484	3087130	1	True				
ANR	3087259	Identifier	rc		3087130	0					
ANR	3087260	ExpressionStatement	"eprn_get_string ( eprn -> colour_model , eprn_colour_model_list , & string_value )"	266:2:8510:8584	3087130	10	True				
ANR	3087261	CallExpression	"eprn_get_string ( eprn -> colour_model , eprn_colour_model_list , & string_value )"		3087130	0					
ANR	3087262	Callee	eprn_get_string		3087130	0					
ANR	3087263	Identifier	eprn_get_string		3087130	0					
ANR	3087264	ArgumentList	eprn -> colour_model		3087130	1					
ANR	3087265	Argument	eprn -> colour_model		3087130	0					
ANR	3087266	PtrMemberAccess	eprn -> colour_model		3087130	0					
ANR	3087267	Identifier	eprn		3087130	0					
ANR	3087268	Identifier	colour_model		3087130	1					
ANR	3087269	Argument	eprn_colour_model_list		3087130	1					
ANR	3087270	Identifier	eprn_colour_model_list		3087130	0					
ANR	3087271	Argument	& string_value		3087130	2					
ANR	3087272	UnaryOperationExpression	& string_value		3087130	0					
ANR	3087273	UnaryOperator	&		3087130	0					
ANR	3087274	Identifier	string_value		3087130	1					
ANR	3087275	IfStatement	"if ( ( rc = param_write_string ( plist , ""ColourModel"" , & string_value ) ) < 0 || ( rc = param_write_string ( plist , ""ColorModel"" , & string_value ) ) < 0 )"		3087130	11					
ANR	3087276	Condition	"( rc = param_write_string ( plist , ""ColourModel"" , & string_value ) ) < 0 || ( rc = param_write_string ( plist , ""ColorModel"" , & string_value ) ) < 0"	267:6:8592:8732	3087130	0	True				
ANR	3087277	OrExpression	"( rc = param_write_string ( plist , ""ColourModel"" , & string_value ) ) < 0 || ( rc = param_write_string ( plist , ""ColorModel"" , & string_value ) ) < 0"		3087130	0		||			
ANR	3087278	RelationalExpression	"( rc = param_write_string ( plist , ""ColourModel"" , & string_value ) ) < 0"		3087130	0		<			
ANR	3087279	AssignmentExpression	"rc = param_write_string ( plist , ""ColourModel"" , & string_value )"		3087130	0		=			
ANR	3087280	Identifier	rc		3087130	0					
ANR	3087281	CallExpression	"param_write_string ( plist , ""ColourModel"" , & string_value )"		3087130	1					
ANR	3087282	Callee	param_write_string		3087130	0					
ANR	3087283	Identifier	param_write_string		3087130	0					
ANR	3087284	ArgumentList	plist		3087130	1					
ANR	3087285	Argument	plist		3087130	0					
ANR	3087286	Identifier	plist		3087130	0					
ANR	3087287	Argument	"""ColourModel"""		3087130	1					
ANR	3087288	PrimaryExpression	"""ColourModel"""		3087130	0					
ANR	3087289	Argument	& string_value		3087130	2					
ANR	3087290	UnaryOperationExpression	& string_value		3087130	0					
ANR	3087291	UnaryOperator	&		3087130	0					
ANR	3087292	Identifier	string_value		3087130	1					
ANR	3087293	PrimaryExpression	0		3087130	1					
ANR	3087294	RelationalExpression	"( rc = param_write_string ( plist , ""ColorModel"" , & string_value ) ) < 0"		3087130	1		<			
ANR	3087295	AssignmentExpression	"rc = param_write_string ( plist , ""ColorModel"" , & string_value )"		3087130	0		=			
ANR	3087296	Identifier	rc		3087130	0					
ANR	3087297	CallExpression	"param_write_string ( plist , ""ColorModel"" , & string_value )"		3087130	1					
ANR	3087298	Callee	param_write_string		3087130	0					
ANR	3087299	Identifier	param_write_string		3087130	0					
ANR	3087300	ArgumentList	plist		3087130	1					
ANR	3087301	Argument	plist		3087130	0					
ANR	3087302	Identifier	plist		3087130	0					
ANR	3087303	Argument	"""ColorModel"""		3087130	1					
ANR	3087304	PrimaryExpression	"""ColorModel"""		3087130	0					
ANR	3087305	Argument	& string_value		3087130	2					
ANR	3087306	UnaryOperationExpression	& string_value		3087130	0					
ANR	3087307	UnaryOperator	&		3087130	0					
ANR	3087308	Identifier	string_value		3087130	1					
ANR	3087309	PrimaryExpression	0		3087130	1					
ANR	3087310	ReturnStatement	return rc ;	269:4:8739:8748	3087130	1	True				
ANR	3087311	Identifier	rc		3087130	0					
ANR	3087312	IfStatement	"if ( ( rc = param_write_bool ( plist , ""CUPSAccounting"" , & eprn -> CUPS_accounting ) ) < 0 )"		3087130	12					
ANR	3087313	Condition	"( rc = param_write_bool ( plist , ""CUPSAccounting"" , & eprn -> CUPS_accounting ) ) < 0"	272:6:8786:8865	3087130	0	True				
ANR	3087314	RelationalExpression	"( rc = param_write_bool ( plist , ""CUPSAccounting"" , & eprn -> CUPS_accounting ) ) < 0"		3087130	0		<			
ANR	3087315	AssignmentExpression	"rc = param_write_bool ( plist , ""CUPSAccounting"" , & eprn -> CUPS_accounting )"		3087130	0		=			
ANR	3087316	Identifier	rc		3087130	0					
ANR	3087317	CallExpression	"param_write_bool ( plist , ""CUPSAccounting"" , & eprn -> CUPS_accounting )"		3087130	1					
ANR	3087318	Callee	param_write_bool		3087130	0					
ANR	3087319	Identifier	param_write_bool		3087130	0					
ANR	3087320	ArgumentList	plist		3087130	1					
ANR	3087321	Argument	plist		3087130	0					
ANR	3087322	Identifier	plist		3087130	0					
ANR	3087323	Argument	"""CUPSAccounting"""		3087130	1					
ANR	3087324	PrimaryExpression	"""CUPSAccounting"""		3087130	0					
ANR	3087325	Argument	& eprn -> CUPS_accounting		3087130	2					
ANR	3087326	UnaryOperationExpression	& eprn -> CUPS_accounting		3087130	0					
ANR	3087327	UnaryOperator	&		3087130	0					
ANR	3087328	PtrMemberAccess	eprn -> CUPS_accounting		3087130	1					
ANR	3087329	Identifier	eprn		3087130	0					
ANR	3087330	Identifier	CUPS_accounting		3087130	1					
ANR	3087331	PrimaryExpression	0		3087130	1					
ANR	3087332	ReturnStatement	return rc ;	273:9:8868:8877	3087130	1	True				
ANR	3087333	Identifier	rc		3087130	0					
ANR	3087334	IfStatement	"if ( ( rc = param_write_bool ( plist , ""CUPSMessages"" , & eprn -> CUPS_messages ) ) < 0 )"		3087130	13					
ANR	3087335	Condition	"( rc = param_write_bool ( plist , ""CUPSMessages"" , & eprn -> CUPS_messages ) ) < 0"	276:6:8914:8985	3087130	0	True				
ANR	3087336	RelationalExpression	"( rc = param_write_bool ( plist , ""CUPSMessages"" , & eprn -> CUPS_messages ) ) < 0"		3087130	0		<			
ANR	3087337	AssignmentExpression	"rc = param_write_bool ( plist , ""CUPSMessages"" , & eprn -> CUPS_messages )"		3087130	0		=			
ANR	3087338	Identifier	rc		3087130	0					
ANR	3087339	CallExpression	"param_write_bool ( plist , ""CUPSMessages"" , & eprn -> CUPS_messages )"		3087130	1					
ANR	3087340	Callee	param_write_bool		3087130	0					
ANR	3087341	Identifier	param_write_bool		3087130	0					
ANR	3087342	ArgumentList	plist		3087130	1					
ANR	3087343	Argument	plist		3087130	0					
ANR	3087344	Identifier	plist		3087130	0					
ANR	3087345	Argument	"""CUPSMessages"""		3087130	1					
ANR	3087346	PrimaryExpression	"""CUPSMessages"""		3087130	0					
ANR	3087347	Argument	& eprn -> CUPS_messages		3087130	2					
ANR	3087348	UnaryOperationExpression	& eprn -> CUPS_messages		3087130	0					
ANR	3087349	UnaryOperator	&		3087130	0					
ANR	3087350	PtrMemberAccess	eprn -> CUPS_messages		3087130	1					
ANR	3087351	Identifier	eprn		3087130	0					
ANR	3087352	Identifier	CUPS_messages		3087130	1					
ANR	3087353	PrimaryExpression	0		3087130	1					
ANR	3087354	ReturnStatement	return rc ;	277:4:8992:9001	3087130	1	True				
ANR	3087355	Identifier	rc		3087130	0					
ANR	3087356	ExpressionStatement	"eprn_get_string ( eprn -> intensity_rendering , intensity_rendering_list , & string_value )"	280:2:9034:9121	3087130	14	True				
ANR	3087357	CallExpression	"eprn_get_string ( eprn -> intensity_rendering , intensity_rendering_list , & string_value )"		3087130	0					
ANR	3087358	Callee	eprn_get_string		3087130	0					
ANR	3087359	Identifier	eprn_get_string		3087130	0					
ANR	3087360	ArgumentList	eprn -> intensity_rendering		3087130	1					
ANR	3087361	Argument	eprn -> intensity_rendering		3087130	0					
ANR	3087362	PtrMemberAccess	eprn -> intensity_rendering		3087130	0					
ANR	3087363	Identifier	eprn		3087130	0					
ANR	3087364	Identifier	intensity_rendering		3087130	1					
ANR	3087365	Argument	intensity_rendering_list		3087130	1					
ANR	3087366	Identifier	intensity_rendering_list		3087130	0					
ANR	3087367	Argument	& string_value		3087130	2					
ANR	3087368	UnaryOperationExpression	& string_value		3087130	0					
ANR	3087369	UnaryOperator	&		3087130	0					
ANR	3087370	Identifier	string_value		3087130	1					
ANR	3087371	IfStatement	"if ( ( rc = param_write_string ( plist , ""IntensityRendering"" , & string_value ) ) < 0 )"		3087130	15					
ANR	3087372	Condition	"( rc = param_write_string ( plist , ""IntensityRendering"" , & string_value ) ) < 0"	282:6:9129:9201	3087130	0	True				
ANR	3087373	RelationalExpression	"( rc = param_write_string ( plist , ""IntensityRendering"" , & string_value ) ) < 0"		3087130	0		<			
ANR	3087374	AssignmentExpression	"rc = param_write_string ( plist , ""IntensityRendering"" , & string_value )"		3087130	0		=			
ANR	3087375	Identifier	rc		3087130	0					
ANR	3087376	CallExpression	"param_write_string ( plist , ""IntensityRendering"" , & string_value )"		3087130	1					
ANR	3087377	Callee	param_write_string		3087130	0					
ANR	3087378	Identifier	param_write_string		3087130	0					
ANR	3087379	ArgumentList	plist		3087130	1					
ANR	3087380	Argument	plist		3087130	0					
ANR	3087381	Identifier	plist		3087130	0					
ANR	3087382	Argument	"""IntensityRendering"""		3087130	1					
ANR	3087383	PrimaryExpression	"""IntensityRendering"""		3087130	0					
ANR	3087384	Argument	& string_value		3087130	2					
ANR	3087385	UnaryOperationExpression	& string_value		3087130	0					
ANR	3087386	UnaryOperator	&		3087130	0					
ANR	3087387	Identifier	string_value		3087130	1					
ANR	3087388	PrimaryExpression	0		3087130	1					
ANR	3087389	ReturnStatement	return rc ;	283:4:9208:9217	3087130	1	True				
ANR	3087390	Identifier	rc		3087130	0					
ANR	3087391	IfStatement	if ( eprn -> leading_edge_set )		3087130	16					
ANR	3087392	Condition	eprn -> leading_edge_set	286:6:9247:9268	3087130	0	True				
ANR	3087393	PtrMemberAccess	eprn -> leading_edge_set		3087130	0					
ANR	3087394	Identifier	eprn		3087130	0					
ANR	3087395	Identifier	leading_edge_set		3087130	1					
ANR	3087396	CompoundStatement		46:30:1556:1556	3087130	1					
ANR	3087397	IfStatement	"if ( ( rc = param_write_int ( plist , ""LeadingEdge"" , & eprn -> default_orientation ) ) < 0 )"		3087130	0					
ANR	3087398	Condition	"( rc = param_write_int ( plist , ""LeadingEdge"" , & eprn -> default_orientation ) ) < 0"	287:8:9281:9362	3087130	0	True				
ANR	3087399	RelationalExpression	"( rc = param_write_int ( plist , ""LeadingEdge"" , & eprn -> default_orientation ) ) < 0"		3087130	0		<			
ANR	3087400	AssignmentExpression	"rc = param_write_int ( plist , ""LeadingEdge"" , & eprn -> default_orientation )"		3087130	0		=			
ANR	3087401	Identifier	rc		3087130	0					
ANR	3087402	CallExpression	"param_write_int ( plist , ""LeadingEdge"" , & eprn -> default_orientation )"		3087130	1					
ANR	3087403	Callee	param_write_int		3087130	0					
ANR	3087404	Identifier	param_write_int		3087130	0					
ANR	3087405	ArgumentList	plist		3087130	1					
ANR	3087406	Argument	plist		3087130	0					
ANR	3087407	Identifier	plist		3087130	0					
ANR	3087408	Argument	"""LeadingEdge"""		3087130	1					
ANR	3087409	PrimaryExpression	"""LeadingEdge"""		3087130	0					
ANR	3087410	Argument	& eprn -> default_orientation		3087130	2					
ANR	3087411	UnaryOperationExpression	& eprn -> default_orientation		3087130	0					
ANR	3087412	UnaryOperator	&		3087130	0					
ANR	3087413	PtrMemberAccess	eprn -> default_orientation		3087130	1					
ANR	3087414	Identifier	eprn		3087130	0					
ANR	3087415	Identifier	default_orientation		3087130	1					
ANR	3087416	PrimaryExpression	0		3087130	1					
ANR	3087417	ReturnStatement	return rc ;	288:11:9365:9374	3087130	1	True				
ANR	3087418	Identifier	rc		3087130	0					
ANR	3087419	ElseStatement	else		3087130	0					
ANR	3087420	IfStatement	"if ( ( rc = param_write_null ( plist , ""LeadingEdge"" ) ) < 0 )"		3087130	0					
ANR	3087421	Condition	"( rc = param_write_null ( plist , ""LeadingEdge"" ) ) < 0"	291:8:9395:9443	3087130	0	True				
ANR	3087422	RelationalExpression	"( rc = param_write_null ( plist , ""LeadingEdge"" ) ) < 0"		3087130	0		<			
ANR	3087423	AssignmentExpression	"rc = param_write_null ( plist , ""LeadingEdge"" )"		3087130	0		=			
ANR	3087424	Identifier	rc		3087130	0					
ANR	3087425	CallExpression	"param_write_null ( plist , ""LeadingEdge"" )"		3087130	1					
ANR	3087426	Callee	param_write_null		3087130	0					
ANR	3087427	Identifier	param_write_null		3087130	0					
ANR	3087428	ArgumentList	plist		3087130	1					
ANR	3087429	Argument	plist		3087130	0					
ANR	3087430	Identifier	plist		3087130	0					
ANR	3087431	Argument	"""LeadingEdge"""		3087130	1					
ANR	3087432	PrimaryExpression	"""LeadingEdge"""		3087130	0					
ANR	3087433	PrimaryExpression	0		3087130	1					
ANR	3087434	ReturnStatement	return rc ;	291:59:9446:9455	3087130	1	True				
ANR	3087435	Identifier	rc		3087130	0					
ANR	3087436	IfStatement	if ( eprn -> media_file == NULL )		3087130	17					
ANR	3087437	Condition	eprn -> media_file == NULL	294:6:9497:9520	3087130	0	True				
ANR	3087438	EqualityExpression	eprn -> media_file == NULL		3087130	0		==			
ANR	3087439	PtrMemberAccess	eprn -> media_file		3087130	0					
ANR	3087440	Identifier	eprn		3087130	0					
ANR	3087441	Identifier	media_file		3087130	1					
ANR	3087442	Identifier	NULL		3087130	1					
ANR	3087443	CompoundStatement		54:32:1808:1808	3087130	1					
ANR	3087444	IfStatement	"if ( ( rc = param_write_null ( plist , ""MediaConfigurationFile"" ) ) < 0 )"		3087130	0					
ANR	3087445	Condition	"( rc = param_write_null ( plist , ""MediaConfigurationFile"" ) ) < 0"	295:8:9533:9592	3087130	0	True				
ANR	3087446	RelationalExpression	"( rc = param_write_null ( plist , ""MediaConfigurationFile"" ) ) < 0"		3087130	0		<			
ANR	3087447	AssignmentExpression	"rc = param_write_null ( plist , ""MediaConfigurationFile"" )"		3087130	0		=			
ANR	3087448	Identifier	rc		3087130	0					
ANR	3087449	CallExpression	"param_write_null ( plist , ""MediaConfigurationFile"" )"		3087130	1					
ANR	3087450	Callee	param_write_null		3087130	0					
ANR	3087451	Identifier	param_write_null		3087130	0					
ANR	3087452	ArgumentList	plist		3087130	1					
ANR	3087453	Argument	plist		3087130	0					
ANR	3087454	Identifier	plist		3087130	0					
ANR	3087455	Argument	"""MediaConfigurationFile"""		3087130	1					
ANR	3087456	PrimaryExpression	"""MediaConfigurationFile"""		3087130	0					
ANR	3087457	PrimaryExpression	0		3087130	1					
ANR	3087458	ReturnStatement	return rc ;	296:6:9601:9610	3087130	1	True				
ANR	3087459	Identifier	rc		3087130	0					
ANR	3087460	ElseStatement	else		3087130	0					
ANR	3087461	CompoundStatement		58:7:1908:1908	3087130	0					
ANR	3087462	ExpressionStatement	string_value . data = ( const byte * ) eprn -> media_file	299:4:9629:9679	3087130	0	True				
ANR	3087463	AssignmentExpression	string_value . data = ( const byte * ) eprn -> media_file		3087130	0		=			
ANR	3087464	MemberAccess	string_value . data		3087130	0					
ANR	3087465	Identifier	string_value		3087130	0					
ANR	3087466	Identifier	data		3087130	1					
ANR	3087467	CastExpression	( const byte * ) eprn -> media_file		3087130	1					
ANR	3087468	CastTarget	const byte *		3087130	0					
ANR	3087469	PtrMemberAccess	eprn -> media_file		3087130	1					
ANR	3087470	Identifier	eprn		3087130	0					
ANR	3087471	Identifier	media_file		3087130	1					
ANR	3087472	ExpressionStatement	string_value . size = strlen ( ( const char * ) string_value . data )	300:4:9685:9744	3087130	1	True				
ANR	3087473	AssignmentExpression	string_value . size = strlen ( ( const char * ) string_value . data )		3087130	0		=			
ANR	3087474	MemberAccess	string_value . size		3087130	0					
ANR	3087475	Identifier	string_value		3087130	0					
ANR	3087476	Identifier	size		3087130	1					
ANR	3087477	CallExpression	strlen ( ( const char * ) string_value . data )		3087130	1					
ANR	3087478	Callee	strlen		3087130	0					
ANR	3087479	Identifier	strlen		3087130	0					
ANR	3087480	ArgumentList	( const char * ) string_value . data		3087130	1					
ANR	3087481	Argument	( const char * ) string_value . data		3087130	0					
ANR	3087482	CastExpression	( const char * ) string_value . data		3087130	0					
ANR	3087483	CastTarget	const char *		3087130	0					
ANR	3087484	MemberAccess	string_value . data		3087130	1					
ANR	3087485	Identifier	string_value		3087130	0					
ANR	3087486	Identifier	data		3087130	1					
ANR	3087487	ExpressionStatement	string_value . persistent = false	301:4:9750:9781	3087130	2	True				
ANR	3087488	AssignmentExpression	string_value . persistent = false		3087130	0		=			
ANR	3087489	MemberAccess	string_value . persistent		3087130	0					
ANR	3087490	Identifier	string_value		3087130	0					
ANR	3087491	Identifier	persistent		3087130	1					
ANR	3087492	Identifier	false		3087130	1					
ANR	3087493	IfStatement	"if ( ( rc = param_write_string ( plist , ""MediaConfigurationFile"" , & string_value ) ) < 0 )"		3087130	3					
ANR	3087494	Condition	"( rc = param_write_string ( plist , ""MediaConfigurationFile"" , & string_value ) ) < 0"	302:8:9791:9875	3087130	0	True				
ANR	3087495	RelationalExpression	"( rc = param_write_string ( plist , ""MediaConfigurationFile"" , & string_value ) ) < 0"		3087130	0		<			
ANR	3087496	AssignmentExpression	"rc = param_write_string ( plist , ""MediaConfigurationFile"" , & string_value )"		3087130	0		=			
ANR	3087497	Identifier	rc		3087130	0					
ANR	3087498	CallExpression	"param_write_string ( plist , ""MediaConfigurationFile"" , & string_value )"		3087130	1					
ANR	3087499	Callee	param_write_string		3087130	0					
ANR	3087500	Identifier	param_write_string		3087130	0					
ANR	3087501	ArgumentList	plist		3087130	1					
ANR	3087502	Argument	plist		3087130	0					
ANR	3087503	Identifier	plist		3087130	0					
ANR	3087504	Argument	"""MediaConfigurationFile"""		3087130	1					
ANR	3087505	PrimaryExpression	"""MediaConfigurationFile"""		3087130	0					
ANR	3087506	Argument	& string_value		3087130	2					
ANR	3087507	UnaryOperationExpression	& string_value		3087130	0					
ANR	3087508	UnaryOperator	&		3087130	0					
ANR	3087509	Identifier	string_value		3087130	1					
ANR	3087510	PrimaryExpression	0		3087130	1					
ANR	3087511	ReturnStatement	return rc ;	304:6:9884:9893	3087130	1	True				
ANR	3087512	Identifier	rc		3087130	0					
ANR	3087513	IfStatement	if ( eprn -> media_position_set )		3087130	18					
ANR	3087514	Condition	eprn -> media_position_set	309:6:9979:10002	3087130	0	True				
ANR	3087515	PtrMemberAccess	eprn -> media_position_set		3087130	0					
ANR	3087516	Identifier	eprn		3087130	0					
ANR	3087517	Identifier	media_position_set		3087130	1					
ANR	3087518	CompoundStatement		69:32:2290:2290	3087130	1					
ANR	3087519	IfStatement	"if ( ( rc = param_write_int ( plist , ""MediaPosition"" , & eprn -> media_position ) ) < 0 )"		3087130	0					
ANR	3087520	Condition	"( rc = param_write_int ( plist , ""MediaPosition"" , & eprn -> media_position ) ) < 0"	310:8:10015:10093	3087130	0	True				
ANR	3087521	RelationalExpression	"( rc = param_write_int ( plist , ""MediaPosition"" , & eprn -> media_position ) ) < 0"		3087130	0		<			
ANR	3087522	AssignmentExpression	"rc = param_write_int ( plist , ""MediaPosition"" , & eprn -> media_position )"		3087130	0		=			
ANR	3087523	Identifier	rc		3087130	0					
ANR	3087524	CallExpression	"param_write_int ( plist , ""MediaPosition"" , & eprn -> media_position )"		3087130	1					
ANR	3087525	Callee	param_write_int		3087130	0					
ANR	3087526	Identifier	param_write_int		3087130	0					
ANR	3087527	ArgumentList	plist		3087130	1					
ANR	3087528	Argument	plist		3087130	0					
ANR	3087529	Identifier	plist		3087130	0					
ANR	3087530	Argument	"""MediaPosition"""		3087130	1					
ANR	3087531	PrimaryExpression	"""MediaPosition"""		3087130	0					
ANR	3087532	Argument	& eprn -> media_position		3087130	2					
ANR	3087533	UnaryOperationExpression	& eprn -> media_position		3087130	0					
ANR	3087534	UnaryOperator	&		3087130	0					
ANR	3087535	PtrMemberAccess	eprn -> media_position		3087130	1					
ANR	3087536	Identifier	eprn		3087130	0					
ANR	3087537	Identifier	media_position		3087130	1					
ANR	3087538	PrimaryExpression	0		3087130	1					
ANR	3087539	ReturnStatement	return rc ;	311:11:10096:10105	3087130	1	True				
ANR	3087540	Identifier	rc		3087130	0					
ANR	3087541	ElseStatement	else		3087130	0					
ANR	3087542	IfStatement	"if ( ( rc = param_write_null ( plist , ""MediaPosition"" ) ) < 0 )"		3087130	0					
ANR	3087543	Condition	"( rc = param_write_null ( plist , ""MediaPosition"" ) ) < 0"	314:8:10126:10176	3087130	0	True				
ANR	3087544	RelationalExpression	"( rc = param_write_null ( plist , ""MediaPosition"" ) ) < 0"		3087130	0		<			
ANR	3087545	AssignmentExpression	"rc = param_write_null ( plist , ""MediaPosition"" )"		3087130	0		=			
ANR	3087546	Identifier	rc		3087130	0					
ANR	3087547	CallExpression	"param_write_null ( plist , ""MediaPosition"" )"		3087130	1					
ANR	3087548	Callee	param_write_null		3087130	0					
ANR	3087549	Identifier	param_write_null		3087130	0					
ANR	3087550	ArgumentList	plist		3087130	1					
ANR	3087551	Argument	plist		3087130	0					
ANR	3087552	Identifier	plist		3087130	0					
ANR	3087553	Argument	"""MediaPosition"""		3087130	1					
ANR	3087554	PrimaryExpression	"""MediaPosition"""		3087130	0					
ANR	3087555	PrimaryExpression	0		3087130	1					
ANR	3087556	ReturnStatement	return rc ;	314:61:10179:10188	3087130	1	True				
ANR	3087557	Identifier	rc		3087130	0					
ANR	3087558	IfStatement	if ( eprn -> pagecount_file == NULL )		3087130	19					
ANR	3087559	Condition	eprn -> pagecount_file == NULL	319:6:10291:10318	3087130	0	True				
ANR	3087560	EqualityExpression	eprn -> pagecount_file == NULL		3087130	0		==			
ANR	3087561	PtrMemberAccess	eprn -> pagecount_file		3087130	0					
ANR	3087562	Identifier	eprn		3087130	0					
ANR	3087563	Identifier	pagecount_file		3087130	1					
ANR	3087564	Identifier	NULL		3087130	1					
ANR	3087565	CompoundStatement		79:36:2606:2606	3087130	1					
ANR	3087566	IfStatement	"if ( ( rc = param_write_null ( plist , ""PageCountFile"" ) ) < 0 )"		3087130	0					
ANR	3087567	Condition	"( rc = param_write_null ( plist , ""PageCountFile"" ) ) < 0"	320:8:10331:10381	3087130	0	True				
ANR	3087568	RelationalExpression	"( rc = param_write_null ( plist , ""PageCountFile"" ) ) < 0"		3087130	0		<			
ANR	3087569	AssignmentExpression	"rc = param_write_null ( plist , ""PageCountFile"" )"		3087130	0		=			
ANR	3087570	Identifier	rc		3087130	0					
ANR	3087571	CallExpression	"param_write_null ( plist , ""PageCountFile"" )"		3087130	1					
ANR	3087572	Callee	param_write_null		3087130	0					
ANR	3087573	Identifier	param_write_null		3087130	0					
ANR	3087574	ArgumentList	plist		3087130	1					
ANR	3087575	Argument	plist		3087130	0					
ANR	3087576	Identifier	plist		3087130	0					
ANR	3087577	Argument	"""PageCountFile"""		3087130	1					
ANR	3087578	PrimaryExpression	"""PageCountFile"""		3087130	0					
ANR	3087579	PrimaryExpression	0		3087130	1					
ANR	3087580	ReturnStatement	return rc ;	320:61:10384:10393	3087130	1	True				
ANR	3087581	Identifier	rc		3087130	0					
ANR	3087582	ElseStatement	else		3087130	0					
ANR	3087583	CompoundStatement		82:7:2691:2691	3087130	0					
ANR	3087584	ExpressionStatement	string_value . data = ( const byte * ) eprn -> pagecount_file	323:4:10412:10466	3087130	0	True				
ANR	3087585	AssignmentExpression	string_value . data = ( const byte * ) eprn -> pagecount_file		3087130	0		=			
ANR	3087586	MemberAccess	string_value . data		3087130	0					
ANR	3087587	Identifier	string_value		3087130	0					
ANR	3087588	Identifier	data		3087130	1					
ANR	3087589	CastExpression	( const byte * ) eprn -> pagecount_file		3087130	1					
ANR	3087590	CastTarget	const byte *		3087130	0					
ANR	3087591	PtrMemberAccess	eprn -> pagecount_file		3087130	1					
ANR	3087592	Identifier	eprn		3087130	0					
ANR	3087593	Identifier	pagecount_file		3087130	1					
ANR	3087594	ExpressionStatement	string_value . size = strlen ( ( const char * ) string_value . data )	324:4:10472:10531	3087130	1	True				
ANR	3087595	AssignmentExpression	string_value . size = strlen ( ( const char * ) string_value . data )		3087130	0		=			
ANR	3087596	MemberAccess	string_value . size		3087130	0					
ANR	3087597	Identifier	string_value		3087130	0					
ANR	3087598	Identifier	size		3087130	1					
ANR	3087599	CallExpression	strlen ( ( const char * ) string_value . data )		3087130	1					
ANR	3087600	Callee	strlen		3087130	0					
ANR	3087601	Identifier	strlen		3087130	0					
ANR	3087602	ArgumentList	( const char * ) string_value . data		3087130	1					
ANR	3087603	Argument	( const char * ) string_value . data		3087130	0					
ANR	3087604	CastExpression	( const char * ) string_value . data		3087130	0					
ANR	3087605	CastTarget	const char *		3087130	0					
ANR	3087606	MemberAccess	string_value . data		3087130	1					
ANR	3087607	Identifier	string_value		3087130	0					
ANR	3087608	Identifier	data		3087130	1					
ANR	3087609	ExpressionStatement	string_value . persistent = false	325:4:10537:10568	3087130	2	True				
ANR	3087610	AssignmentExpression	string_value . persistent = false		3087130	0		=			
ANR	3087611	MemberAccess	string_value . persistent		3087130	0					
ANR	3087612	Identifier	string_value		3087130	0					
ANR	3087613	Identifier	persistent		3087130	1					
ANR	3087614	Identifier	false		3087130	1					
ANR	3087615	IfStatement	"if ( ( rc = param_write_string ( plist , ""PageCountFile"" , & string_value ) ) < 0 )"		3087130	3					
ANR	3087616	Condition	"( rc = param_write_string ( plist , ""PageCountFile"" , & string_value ) ) < 0"	326:8:10578:10645	3087130	0	True				
ANR	3087617	RelationalExpression	"( rc = param_write_string ( plist , ""PageCountFile"" , & string_value ) ) < 0"		3087130	0		<			
ANR	3087618	AssignmentExpression	"rc = param_write_string ( plist , ""PageCountFile"" , & string_value )"		3087130	0		=			
ANR	3087619	Identifier	rc		3087130	0					
ANR	3087620	CallExpression	"param_write_string ( plist , ""PageCountFile"" , & string_value )"		3087130	1					
ANR	3087621	Callee	param_write_string		3087130	0					
ANR	3087622	Identifier	param_write_string		3087130	0					
ANR	3087623	ArgumentList	plist		3087130	1					
ANR	3087624	Argument	plist		3087130	0					
ANR	3087625	Identifier	plist		3087130	0					
ANR	3087626	Argument	"""PageCountFile"""		3087130	1					
ANR	3087627	PrimaryExpression	"""PageCountFile"""		3087130	0					
ANR	3087628	Argument	& string_value		3087130	2					
ANR	3087629	UnaryOperationExpression	& string_value		3087130	0					
ANR	3087630	UnaryOperator	&		3087130	0					
ANR	3087631	Identifier	string_value		3087130	1					
ANR	3087632	PrimaryExpression	0		3087130	1					
ANR	3087633	ReturnStatement	return rc ;	327:6:10654:10663	3087130	1	True				
ANR	3087634	Identifier	rc		3087130	0					
ANR	3087635	ReturnStatement	return 0 ;	331:2:10708:10716	3087130	20	True				
ANR	3087636	PrimaryExpression	0		3087130	0					
ANR	3087637	ReturnType	int		3087130	1					
ANR	3087638	Identifier	eprn_get_params		3087130	2					
ANR	3087639	ParameterList	"gx_device * device , gs_param_list * plist"		3087130	3					
ANR	3087640	Parameter	gx_device * device	240:20:7673:7689	3087130	0	True				
ANR	3087641	ParameterType	gx_device *		3087130	0					
ANR	3087642	Identifier	device		3087130	1					
ANR	3087643	Parameter	gs_param_list * plist	240:39:7692:7711	3087130	1	True				
ANR	3087644	ParameterType	gs_param_list *		3087130	0					
ANR	3087645	Identifier	plist		3087130	1					
ANR	3087646	CFGEntryNode	ENTRY		3087130		True				
ANR	3087647	CFGExitNode	EXIT		3087130		True				
ANR	3087648	Symbol	string_value . data		3087130						
ANR	3087649	Symbol	* eprn		3087130						
ANR	3087650	Symbol	string_value . persistent		3087130						
ANR	3087651	Symbol	eprn		3087130						
ANR	3087652	Symbol	eprn -> colour_model		3087130						
ANR	3087653	Symbol	& ( ( eprn_Device * ) device ) -> eprn		3087130						
ANR	3087654	Symbol	& eprn -> CUPS_accounting		3087130						
ANR	3087655	Symbol	intensity_rendering_list		3087130						
ANR	3087656	Symbol	eprn -> leading_edge_set		3087130						
ANR	3087657	Symbol	& string_value		3087130						
ANR	3087658	Symbol	param_write_bool		3087130						
ANR	3087659	Symbol	strlen		3087130						
ANR	3087660	Symbol	plist		3087130						
ANR	3087661	Symbol	string_value . size		3087130						
ANR	3087662	Symbol	eprn -> media_position_set		3087130						
ANR	3087663	Symbol	param_write_string		3087130						
ANR	3087664	Symbol	param_write_int		3087130						
ANR	3087665	Symbol	& eprn -> default_orientation		3087130						
ANR	3087666	Symbol	eprn -> media_file		3087130						
ANR	3087667	Symbol	eprn -> intensity_rendering		3087130						
ANR	3087668	Symbol	string_value		3087130						
ANR	3087669	Symbol	& eprn -> black_levels		3087130						
ANR	3087670	Symbol	NULL		3087130						
ANR	3087671	Symbol	eprn -> pagecount_file		3087130						
ANR	3087672	Symbol	gdev_prn_get_params		3087130						
ANR	3087673	Symbol	& eprn -> CUPS_messages		3087130						
ANR	3087674	Symbol	false		3087130						
ANR	3087675	Symbol	param_write_null		3087130						
ANR	3087676	Symbol	& eprn -> media_position		3087130						
ANR	3087677	Symbol	rc		3087130						
ANR	3087678	Symbol	& eprn -> non_black_levels		3087130						
ANR	3087679	Symbol	eprn_colour_model_list		3087130						
ANR	3087680	Symbol	EPRN_TRACE_CHAR		3087130						
ANR	3087681	Symbol	device		3087130						
ANR	3087682	Function	is_word	344:0:11085:11248							
ANR	3087683	FunctionDef	"is_word (const char * s , const char * word)"		3087682	0					
ANR	3087684	CompoundStatement		345:0:11137:11248	3087682	0					
ANR	3087685	IdentifierDeclStatement	size_t l = strlen ( word ) ;	346:2:11141:11164	3087682	0	True				
ANR	3087686	IdentifierDecl	l = strlen ( word )		3087682	0					
ANR	3087687	IdentifierDeclType	size_t		3087682	0					
ANR	3087688	Identifier	l		3087682	1					
ANR	3087689	AssignmentExpression	l = strlen ( word )		3087682	2		=			
ANR	3087690	Identifier	l		3087682	0					
ANR	3087691	CallExpression	strlen ( word )		3087682	1					
ANR	3087692	Callee	strlen		3087682	0					
ANR	3087693	Identifier	strlen		3087682	0					
ANR	3087694	ArgumentList	word		3087682	1					
ANR	3087695	Argument	word		3087682	0					
ANR	3087696	Identifier	word		3087682	0					
ANR	3087697	IfStatement	"if ( strncmp ( s , word , l ) != 0 )"		3087682	1					
ANR	3087698	Condition	"strncmp ( s , word , l ) != 0"	347:6:11172:11195	3087682	0	True				
ANR	3087699	EqualityExpression	"strncmp ( s , word , l ) != 0"		3087682	0		!=			
ANR	3087700	CallExpression	"strncmp ( s , word , l )"		3087682	0					
ANR	3087701	Callee	strncmp		3087682	0					
ANR	3087702	Identifier	strncmp		3087682	0					
ANR	3087703	ArgumentList	s		3087682	1					
ANR	3087704	Argument	s		3087682	0					
ANR	3087705	Identifier	s		3087682	0					
ANR	3087706	Argument	word		3087682	1					
ANR	3087707	Identifier	word		3087682	0					
ANR	3087708	Argument	l		3087682	2					
ANR	3087709	Identifier	l		3087682	0					
ANR	3087710	PrimaryExpression	0		3087682	1					
ANR	3087711	ReturnStatement	return 0 ;	347:32:11198:11206	3087682	1	True				
ANR	3087712	PrimaryExpression	0		3087682	0					
ANR	3087713	ReturnStatement	return s [ l ] == '\\0' || isspace ( s [ l ] ) ;	348:2:11210:11246	3087682	2	True				
ANR	3087714	OrExpression	s [ l ] == '\\0' || isspace ( s [ l ] )		3087682	0		||			
ANR	3087715	EqualityExpression	s [ l ] == '\\0'		3087682	0		==			
ANR	3087716	ArrayIndexing	s [ l ]		3087682	0					
ANR	3087717	Identifier	s		3087682	0					
ANR	3087718	Identifier	l		3087682	1					
ANR	3087719	PrimaryExpression	'\\0'		3087682	1					
ANR	3087720	CallExpression	isspace ( s [ l ] )		3087682	1					
ANR	3087721	Callee	isspace		3087682	0					
ANR	3087722	Identifier	isspace		3087682	0					
ANR	3087723	ArgumentList	s [ l ]		3087682	1					
ANR	3087724	Argument	s [ l ]		3087682	0					
ANR	3087725	ArrayIndexing	s [ l ]		3087682	0					
ANR	3087726	Identifier	s		3087682	0					
ANR	3087727	Identifier	l		3087682	1					
ANR	3087728	ReturnType	static int		3087682	1					
ANR	3087729	Identifier	is_word		3087682	2					
ANR	3087730	ParameterList	"const char * s , const char * word"		3087682	3					
ANR	3087731	Parameter	const char * s	344:19:11104:11116	3087682	0	True				
ANR	3087732	ParameterType	const char *		3087682	0					
ANR	3087733	Identifier	s		3087682	1					
ANR	3087734	Parameter	const char * word	344:34:11119:11134	3087682	1	True				
ANR	3087735	ParameterType	const char *		3087682	0					
ANR	3087736	Identifier	word		3087682	1					
ANR	3087737	CFGEntryNode	ENTRY		3087682		True				
ANR	3087738	CFGExitNode	EXIT		3087682		True				
ANR	3087739	Symbol	strlen		3087682						
ANR	3087740	Symbol	strncmp		3087682						
ANR	3087741	Symbol	s		3087682						
ANR	3087742	Symbol	* l		3087682						
ANR	3087743	Symbol	isspace		3087682						
ANR	3087744	Symbol	l		3087682						
ANR	3087745	Symbol	word		3087682						
ANR	3087746	Symbol	* s		3087682						
ANR	3087747	Function	next_word	364:0:11763:11971							
ANR	3087748	FunctionDef	next_word (char * s)		3087747	0					
ANR	3087749	CompoundStatement		365:0:11795:11971	3087747	0					
ANR	3087750	WhileStatement	while ( * s != '\\0' && ! isspace ( * s ) )		3087747	0					
ANR	3087751	Condition	* s != '\\0' && ! isspace ( * s )	367:9:11832:11857	3087747	0	True				
ANR	3087752	AndExpression	* s != '\\0' && ! isspace ( * s )		3087747	0		&&			
ANR	3087753	EqualityExpression	* s != '\\0'		3087747	0		!=			
ANR	3087754	UnaryOperationExpression	* s		3087747	0					
ANR	3087755	UnaryOperator	*		3087747	0					
ANR	3087756	Identifier	s		3087747	1					
ANR	3087757	PrimaryExpression	'\\0'		3087747	1					
ANR	3087758	UnaryOperationExpression	! isspace ( * s )		3087747	1					
ANR	3087759	UnaryOperator	!		3087747	0					
ANR	3087760	CallExpression	isspace ( * s )		3087747	1					
ANR	3087761	Callee	isspace		3087747	0					
ANR	3087762	Identifier	isspace		3087747	0					
ANR	3087763	ArgumentList	* s		3087747	1					
ANR	3087764	Argument	* s		3087747	0					
ANR	3087765	UnaryOperationExpression	* s		3087747	0					
ANR	3087766	UnaryOperator	*		3087747	0					
ANR	3087767	Identifier	s		3087747	1					
ANR	3087768	ExpressionStatement	s ++	367:37:11860:11863	3087747	1	True				
ANR	3087769	PostIncDecOperationExpression	s ++		3087747	0					
ANR	3087770	Identifier	s		3087747	0					
ANR	3087771	IncDec	++		3087747	1					
ANR	3087772	WhileStatement	while ( * s != '\\0' && isspace ( * s ) )		3087747	1					
ANR	3087773	Condition	* s != '\\0' && isspace ( * s )	370:9:11908:11932	3087747	0	True				
ANR	3087774	AndExpression	* s != '\\0' && isspace ( * s )		3087747	0		&&			
ANR	3087775	EqualityExpression	* s != '\\0'		3087747	0		!=			
ANR	3087776	UnaryOperationExpression	* s		3087747	0					
ANR	3087777	UnaryOperator	*		3087747	0					
ANR	3087778	Identifier	s		3087747	1					
ANR	3087779	PrimaryExpression	'\\0'		3087747	1					
ANR	3087780	CallExpression	isspace ( * s )		3087747	1					
ANR	3087781	Callee	isspace		3087747	0					
ANR	3087782	Identifier	isspace		3087747	0					
ANR	3087783	ArgumentList	* s		3087747	1					
ANR	3087784	Argument	* s		3087747	0					
ANR	3087785	UnaryOperationExpression	* s		3087747	0					
ANR	3087786	UnaryOperator	*		3087747	0					
ANR	3087787	Identifier	s		3087747	1					
ANR	3087788	ExpressionStatement	s ++	370:36:11935:11938	3087747	1	True				
ANR	3087789	PostIncDecOperationExpression	s ++		3087747	0					
ANR	3087790	Identifier	s		3087747	0					
ANR	3087791	IncDec	++		3087747	1					
ANR	3087792	ReturnStatement	return * s == '\\0' ? NULL : s ;	372:2:11943:11969	3087747	2	True				
ANR	3087793	ConditionalExpression	* s == '\\0' ? NULL : s		3087747	0					
ANR	3087794	Condition	* s == '\\0'		3087747	0					
ANR	3087795	EqualityExpression	* s == '\\0'		3087747	0		==			
ANR	3087796	UnaryOperationExpression	* s		3087747	0					
ANR	3087797	UnaryOperator	*		3087747	0					
ANR	3087798	Identifier	s		3087747	1					
ANR	3087799	PrimaryExpression	'\\0'		3087747	1					
ANR	3087800	Identifier	NULL		3087747	1					
ANR	3087801	Identifier	s		3087747	2					
ANR	3087802	ReturnType	static char *		3087747	1					
ANR	3087803	Identifier	next_word		3087747	2					
ANR	3087804	ParameterList	char * s		3087747	3					
ANR	3087805	Parameter	char * s	364:23:11786:11792	3087747	0	True				
ANR	3087806	ParameterType	char *		3087747	0					
ANR	3087807	Identifier	s		3087747	1					
ANR	3087808	CFGEntryNode	ENTRY		3087747		True				
ANR	3087809	CFGExitNode	EXIT		3087747		True				
ANR	3087810	Symbol	s		3087747						
ANR	3087811	Symbol	NULL		3087747						
ANR	3087812	Symbol	isspace		3087747						
ANR	3087813	Symbol	* s		3087747						
ANR	3087814	Function	eprn_read_media_data	393:0:12645:19975							
ANR	3087815	FunctionDef	"eprn_read_media_data (eprn_Eprn * eprn , gs_memory_t * memory)"		3087814	0					
ANR	3087816	CompoundStatement		394:0:12715:19975	3087814	0					
ANR	3087817	IdentifierDeclStatement	char buffer [ BUFFER_SIZE ] ;	395:2:12719:12743	3087814	0	True				
ANR	3087818	IdentifierDecl	buffer [ BUFFER_SIZE ]		3087814	0					
ANR	3087819	IdentifierDeclType	char [ BUFFER_SIZE ]		3087814	0					
ANR	3087820	Identifier	buffer		3087814	1					
ANR	3087821	Identifier	BUFFER_SIZE		3087814	2					
ANR	3087822	IdentifierDeclStatement	"const char * epref = eprn -> CUPS_messages ? CUPS_ERRPREF : """" , * wpref = eprn -> CUPS_messages ? CUPS_WARNPREF : """" ;"	396:2:12747:12861	3087814	1	True				
ANR	3087823	IdentifierDecl	"* epref = eprn -> CUPS_messages ? CUPS_ERRPREF : """""		3087814	0					
ANR	3087824	IdentifierDeclType	const char *		3087814	0					
ANR	3087825	Identifier	epref		3087814	1					
ANR	3087826	AssignmentExpression	"* epref = eprn -> CUPS_messages ? CUPS_ERRPREF : """""		3087814	2		=			
ANR	3087827	Identifier	epref		3087814	0					
ANR	3087828	ConditionalExpression	"eprn -> CUPS_messages ? CUPS_ERRPREF : """""		3087814	1					
ANR	3087829	Condition	eprn -> CUPS_messages		3087814	0					
ANR	3087830	PtrMemberAccess	eprn -> CUPS_messages		3087814	0					
ANR	3087831	Identifier	eprn		3087814	0					
ANR	3087832	Identifier	CUPS_messages		3087814	1					
ANR	3087833	Identifier	CUPS_ERRPREF		3087814	1					
ANR	3087834	PrimaryExpression	""""""		3087814	2					
ANR	3087835	IdentifierDecl	"* wpref = eprn -> CUPS_messages ? CUPS_WARNPREF : """""		3087814	1					
ANR	3087836	IdentifierDeclType	const char *		3087814	0					
ANR	3087837	Identifier	wpref		3087814	1					
ANR	3087838	AssignmentExpression	"* wpref = eprn -> CUPS_messages ? CUPS_WARNPREF : """""		3087814	2		=			
ANR	3087839	Identifier	wpref		3087814	0					
ANR	3087840	ConditionalExpression	"eprn -> CUPS_messages ? CUPS_WARNPREF : """""		3087814	1					
ANR	3087841	Condition	eprn -> CUPS_messages		3087814	0					
ANR	3087842	PtrMemberAccess	eprn -> CUPS_messages		3087814	0					
ANR	3087843	Identifier	eprn		3087814	0					
ANR	3087844	Identifier	CUPS_messages		3087814	1					
ANR	3087845	Identifier	CUPS_WARNPREF		3087814	1					
ANR	3087846	PrimaryExpression	""""""		3087814	2					
ANR	3087847	IdentifierDeclStatement	FILE * f ;	399:2:12865:12872	3087814	2	True				
ANR	3087848	IdentifierDecl	* f		3087814	0					
ANR	3087849	IdentifierDeclType	FILE *		3087814	0					
ANR	3087850	Identifier	f		3087814	1					
ANR	3087851	IdentifierDeclStatement	float conversion_factor = BP_PER_IN ;	400:2:12876:12911	3087814	3	True				
ANR	3087852	IdentifierDecl	conversion_factor = BP_PER_IN		3087814	0					
ANR	3087853	IdentifierDeclType	float		3087814	0					
ANR	3087854	Identifier	conversion_factor		3087814	1					
ANR	3087855	AssignmentExpression	conversion_factor = BP_PER_IN		3087814	2		=			
ANR	3087856	Identifier	BP_PER_IN		3087814	0					
ANR	3087857	Identifier	BP_PER_IN		3087814	1					
ANR	3087858	IdentifierDeclStatement	"int line = 0 , read = 0 ;"	402:2:12986:13036	3087814	4	True				
ANR	3087859	IdentifierDecl	line = 0		3087814	0					
ANR	3087860	IdentifierDeclType	int		3087814	0					
ANR	3087861	Identifier	line		3087814	1					
ANR	3087862	AssignmentExpression	line = 0		3087814	2		=			
ANR	3087863	Identifier	line		3087814	0					
ANR	3087864	PrimaryExpression	0		3087814	1					
ANR	3087865	IdentifierDecl	read = 0		3087814	1					
ANR	3087866	IdentifierDeclType	int		3087814	0					
ANR	3087867	Identifier	read		3087814	1					
ANR	3087868	AssignmentExpression	read = 0		3087814	2		=			
ANR	3087869	Identifier	read		3087814	0					
ANR	3087870	PrimaryExpression	0		3087814	1					
ANR	3087871	IdentifierDeclStatement	eprn_PageDescription * list = NULL ;	405:2:13078:13111	3087814	5	True				
ANR	3087872	IdentifierDecl	* list = NULL		3087814	0					
ANR	3087873	IdentifierDeclType	eprn_PageDescription *		3087814	0					
ANR	3087874	Identifier	list		3087814	1					
ANR	3087875	AssignmentExpression	* list = NULL		3087814	2		=			
ANR	3087876	Identifier	NULL		3087814	0					
ANR	3087877	Identifier	NULL		3087814	1					
ANR	3087878	IfStatement	"if ( ( f = gp_fopen ( eprn -> media_file , ""r"" ) ) == NULL )"		3087814	6					
ANR	3087879	Condition	"( f = gp_fopen ( eprn -> media_file , ""r"" ) ) == NULL"	408:6:13142:13186	3087814	0	True				
ANR	3087880	EqualityExpression	"( f = gp_fopen ( eprn -> media_file , ""r"" ) ) == NULL"		3087814	0		==			
ANR	3087881	AssignmentExpression	"f = gp_fopen ( eprn -> media_file , ""r"" )"		3087814	0		=			
ANR	3087882	Identifier	f		3087814	0					
ANR	3087883	CallExpression	"gp_fopen ( eprn -> media_file , ""r"" )"		3087814	1					
ANR	3087884	Callee	gp_fopen		3087814	0					
ANR	3087885	Identifier	gp_fopen		3087814	0					
ANR	3087886	ArgumentList	eprn -> media_file		3087814	1					
ANR	3087887	Argument	eprn -> media_file		3087814	0					
ANR	3087888	PtrMemberAccess	eprn -> media_file		3087814	0					
ANR	3087889	Identifier	eprn		3087814	0					
ANR	3087890	Identifier	media_file		3087814	1					
ANR	3087891	Argument	"""r"""		3087814	1					
ANR	3087892	PrimaryExpression	"""r"""		3087814	0					
ANR	3087893	Identifier	NULL		3087814	1					
ANR	3087894	CompoundStatement		15:53:473:473	3087814	1					
ANR	3087895	Statement	eprintf5	409:4:13195:13202	3087814	0	True				
ANR	3087896	Statement	(	409:12:13203:13203	3087814	1	True				
ANR	3087897	Statement	"""%s"""	409:13:13204:13207	3087814	2	True				
ANR	3087898	Statement	ERRPREF	409:18:13209:13215	3087814	3	True				
ANR	3087899	Statement	"""Error opening the media configuration file\\n"""	409:26:13217:13262	3087814	4	True				
ANR	3087900	Statement	"""%s    `%s'\\n%s  for reading: %s.\\n"""	410:6:13270:13305	3087814	5	True				
ANR	3087901	Statement	","	410:42:13306:13306	3087814	6	True				
ANR	3087902	Statement	epref	411:6:13314:13318	3087814	7	True				
ANR	3087903	Statement	","	411:11:13319:13319	3087814	8	True				
ANR	3087904	Statement	epref	411:13:13321:13325	3087814	9	True				
ANR	3087905	Statement	","	411:18:13326:13326	3087814	10	True				
ANR	3087906	Statement	eprn	411:20:13328:13331	3087814	11	True				
ANR	3087907	Statement	->	411:24:13332:13333	3087814	12	True				
ANR	3087908	Statement	media_file	411:26:13334:13343	3087814	13	True				
ANR	3087909	Statement	","	411:36:13344:13344	3087814	14	True				
ANR	3087910	Statement	epref	411:38:13346:13350	3087814	15	True				
ANR	3087911	Statement	","	411:43:13351:13351	3087814	16	True				
ANR	3087912	Statement	strerror	411:45:13353:13360	3087814	17	True				
ANR	3087913	Statement	(	411:53:13361:13361	3087814	18	True				
ANR	3087914	Statement	errno	411:54:13362:13366	3087814	19	True				
ANR	3087915	Statement	)	411:59:13367:13367	3087814	20	True				
ANR	3087916	Statement	)	411:60:13368:13368	3087814	21	True				
ANR	3087917	ExpressionStatement		411:61:13369:13369	3087814	22	True				
ANR	3087918	ExpressionStatement	return_error ( gs_error_invalidfileaccess )	412:4:13375:13415	3087814	23	True				
ANR	3087919	CallExpression	return_error ( gs_error_invalidfileaccess )		3087814	0					
ANR	3087920	Callee	return_error		3087814	0					
ANR	3087921	Identifier	return_error		3087814	0					
ANR	3087922	ArgumentList	gs_error_invalidfileaccess		3087814	1					
ANR	3087923	Argument	gs_error_invalidfileaccess		3087814	0					
ANR	3087924	Identifier	gs_error_invalidfileaccess		3087814	0					
ANR	3087925	WhileStatement	"while ( fgets ( buffer , BUFFER_SIZE , f ) != NULL )"		3087814	7					
ANR	3087926	Condition	"fgets ( buffer , BUFFER_SIZE , f ) != NULL"	416:9:13461:13497	3087814	0	True				
ANR	3087927	EqualityExpression	"fgets ( buffer , BUFFER_SIZE , f ) != NULL"		3087814	0		!=			
ANR	3087928	CallExpression	"fgets ( buffer , BUFFER_SIZE , f )"		3087814	0					
ANR	3087929	Callee	fgets		3087814	0					
ANR	3087930	Identifier	fgets		3087814	0					
ANR	3087931	ArgumentList	buffer		3087814	1					
ANR	3087932	Argument	buffer		3087814	0					
ANR	3087933	Identifier	buffer		3087814	0					
ANR	3087934	Argument	BUFFER_SIZE		3087814	1					
ANR	3087935	Identifier	BUFFER_SIZE		3087814	0					
ANR	3087936	Argument	f		3087814	2					
ANR	3087937	Identifier	f		3087814	0					
ANR	3087938	Identifier	NULL		3087814	1					
ANR	3087939	CompoundStatement		26:4:842:856	3087814	1					
ANR	3087940	IdentifierDeclStatement	"char * s , * t ;"	417:4:13506:13517	3087814	0	True				
ANR	3087941	IdentifierDecl	* s		3087814	0					
ANR	3087942	IdentifierDeclType	char *		3087814	0					
ANR	3087943	Identifier	s		3087814	1					
ANR	3087944	IdentifierDecl	* t		3087814	1					
ANR	3087945	IdentifierDeclType	char *		3087814	0					
ANR	3087946	Identifier	t		3087814	1					
ANR	3087947	IdentifierDeclStatement	eprn_PageDescription * current ;	418:4:13523:13552	3087814	1	True				
ANR	3087948	IdentifierDecl	* current		3087814	0					
ANR	3087949	IdentifierDeclType	eprn_PageDescription *		3087814	0					
ANR	3087950	Identifier	current		3087814	1					
ANR	3087951	IdentifierDeclStatement	int chars_read ;	419:4:13558:13572	3087814	2	True				
ANR	3087952	IdentifierDecl	chars_read		3087814	0					
ANR	3087953	IdentifierDeclType	int		3087814	0					
ANR	3087954	Identifier	chars_read		3087814	1					
ANR	3087955	ExpressionStatement	line ++	421:4:13579:13585	3087814	3	True				
ANR	3087956	PostIncDecOperationExpression	line ++		3087814	0					
ANR	3087957	Identifier	line		3087814	0					
ANR	3087958	IncDec	++		3087814	1					
ANR	3087959	IfStatement	"if ( ( s = strchr ( buffer , '\\n' ) ) == NULL && fgetc ( f ) != EOF )"		3087814	4					
ANR	3087960	Condition	"( s = strchr ( buffer , '\\n' ) ) == NULL && fgetc ( f ) != EOF"	424:8:13632:13684	3087814	0	True				
ANR	3087961	AndExpression	"( s = strchr ( buffer , '\\n' ) ) == NULL && fgetc ( f ) != EOF"		3087814	0		&&			
ANR	3087962	EqualityExpression	"( s = strchr ( buffer , '\\n' ) ) == NULL"		3087814	0		==			
ANR	3087963	AssignmentExpression	"s = strchr ( buffer , '\\n' )"		3087814	0		=			
ANR	3087964	Identifier	s		3087814	0					
ANR	3087965	CallExpression	"strchr ( buffer , '\\n' )"		3087814	1					
ANR	3087966	Callee	strchr		3087814	0					
ANR	3087967	Identifier	strchr		3087814	0					
ANR	3087968	ArgumentList	buffer		3087814	1					
ANR	3087969	Argument	buffer		3087814	0					
ANR	3087970	Identifier	buffer		3087814	0					
ANR	3087971	Argument	'\\n'		3087814	1					
ANR	3087972	PrimaryExpression	'\\n'		3087814	0					
ANR	3087973	Identifier	NULL		3087814	1					
ANR	3087974	EqualityExpression	fgetc ( f ) != EOF		3087814	1		!=			
ANR	3087975	CallExpression	fgetc ( f )		3087814	0					
ANR	3087976	Callee	fgetc		3087814	0					
ANR	3087977	Identifier	fgetc		3087814	0					
ANR	3087978	ArgumentList	f		3087814	1					
ANR	3087979	Argument	f		3087814	0					
ANR	3087980	Identifier	f		3087814	0					
ANR	3087981	Identifier	EOF		3087814	1					
ANR	3087982	CompoundStatement		31:63:971:971	3087814	1					
ANR	3087983	Statement	eprintf5	425:6:13695:13702	3087814	0	True				
ANR	3087984	Statement	(	425:14:13703:13703	3087814	1	True				
ANR	3087985	Statement	"""%s"""	425:15:13704:13707	3087814	2	True				
ANR	3087986	Statement	ERRPREF	425:20:13709:13715	3087814	3	True				
ANR	3087987	Statement	"""Exceeding line length %d in """	425:28:13717:13746	3087814	4	True				
ANR	3087988	Statement	"""media configuration file\\n%s  %s, line %d.\\n"""	426:10:13758:13803	3087814	5	True				
ANR	3087989	Statement	","	426:56:13804:13804	3087814	6	True				
ANR	3087990	Statement	epref	427:8:13814:13818	3087814	7	True				
ANR	3087991	Statement	","	427:13:13819:13819	3087814	8	True				
ANR	3087992	Statement	BUFFER_SIZE	427:15:13821:13831	3087814	9	True				
ANR	3087993	Statement	-	427:27:13833:13833	3087814	10	True				
ANR	3087994	Statement	2	427:29:13835:13835	3087814	11	True				
ANR	3087995	Statement	","	427:46:13852:13852	3087814	12	True				
ANR	3087996	Statement	epref	427:48:13854:13858	3087814	13	True				
ANR	3087997	Statement	","	427:53:13859:13859	3087814	14	True				
ANR	3087998	Statement	eprn	427:55:13861:13864	3087814	15	True				
ANR	3087999	Statement	->	427:59:13865:13866	3087814	16	True				
ANR	3088000	Statement	media_file	427:61:13867:13876	3087814	17	True				
ANR	3088001	Statement	","	427:71:13877:13877	3087814	18	True				
ANR	3088002	Statement	line	427:73:13879:13882	3087814	19	True				
ANR	3088003	Statement	)	427:77:13883:13883	3087814	20	True				
ANR	3088004	ExpressionStatement		427:78:13884:13884	3087814	21	True				
ANR	3088005	ExpressionStatement	cleanup ( )	428:6:13892:13901	3087814	22	True				
ANR	3088006	CallExpression	cleanup ( )		3087814	0					
ANR	3088007	Callee	cleanup		3087814	0					
ANR	3088008	Identifier	cleanup		3087814	0					
ANR	3088009	ArgumentList			3087814	1					
ANR	3088010	ExpressionStatement	return_error ( gs_error_limitcheck )	429:6:13909:13942	3087814	23	True				
ANR	3088011	CallExpression	return_error ( gs_error_limitcheck )		3087814	0					
ANR	3088012	Callee	return_error		3087814	0					
ANR	3088013	Identifier	return_error		3087814	0					
ANR	3088014	ArgumentList	gs_error_limitcheck		3087814	1					
ANR	3088015	Argument	gs_error_limitcheck		3087814	0					
ANR	3088016	Identifier	gs_error_limitcheck		3087814	0					
ANR	3088017	IfStatement	if ( s != NULL )		3087814	5					
ANR	3088018	Condition	s != NULL	433:8:14001:14009	3087814	0	True				
ANR	3088019	EqualityExpression	s != NULL		3087814	0		!=			
ANR	3088020	Identifier	s		3087814	0					
ANR	3088021	Identifier	NULL		3087814	1					
ANR	3088022	ExpressionStatement	* s = '\\0'	433:19:14012:14021	3087814	1	True				
ANR	3088023	AssignmentExpression	* s = '\\0'		3087814	0		=			
ANR	3088024	UnaryOperationExpression	* s		3087814	0					
ANR	3088025	UnaryOperator	*		3087814	0					
ANR	3088026	Identifier	s		3087814	1					
ANR	3088027	PrimaryExpression	'\\0'		3087814	1					
ANR	3088028	IfStatement	if ( s == NULL )		3087814	6					
ANR	3088029	Condition	s == NULL	446:8:14774:14782	3087814	0	True				
ANR	3088030	EqualityExpression	s == NULL		3087814	0		==			
ANR	3088031	Identifier	s		3087814	0					
ANR	3088032	Identifier	NULL		3087814	1					
ANR	3088033	ExpressionStatement	"s = strchr ( buffer , '\\0' )"	446:19:14785:14809	3087814	1	True				
ANR	3088034	AssignmentExpression	"s = strchr ( buffer , '\\0' )"		3087814	0		=			
ANR	3088035	Identifier	s		3087814	0					
ANR	3088036	CallExpression	"strchr ( buffer , '\\0' )"		3087814	1					
ANR	3088037	Callee	strchr		3087814	0					
ANR	3088038	Identifier	strchr		3087814	0					
ANR	3088039	ArgumentList	buffer		3087814	1					
ANR	3088040	Argument	buffer		3087814	0					
ANR	3088041	Identifier	buffer		3087814	0					
ANR	3088042	Argument	'\\0'		3087814	1					
ANR	3088043	PrimaryExpression	'\\0'		3087814	0					
ANR	3088044	WhileStatement	while ( buffer < s && isspace ( * ( s - 1 ) ) )		3087814	7					
ANR	3088045	Condition	buffer < s && isspace ( * ( s - 1 ) )	447:11:14822:14850	3087814	0	True				
ANR	3088046	AndExpression	buffer < s && isspace ( * ( s - 1 ) )		3087814	0		&&			
ANR	3088047	RelationalExpression	buffer < s		3087814	0		<			
ANR	3088048	Identifier	buffer		3087814	0					
ANR	3088049	Identifier	s		3087814	1					
ANR	3088050	CallExpression	isspace ( * ( s - 1 ) )		3087814	1					
ANR	3088051	Callee	isspace		3087814	0					
ANR	3088052	Identifier	isspace		3087814	0					
ANR	3088053	ArgumentList	* ( s - 1 )		3087814	1					
ANR	3088054	Argument	* ( s - 1 )		3087814	0					
ANR	3088055	UnaryOperationExpression	* ( s - 1 )		3087814	0					
ANR	3088056	UnaryOperator	*		3087814	0					
ANR	3088057	AdditiveExpression	s - 1		3087814	1		-			
ANR	3088058	Identifier	s		3087814	0					
ANR	3088059	PrimaryExpression	1		3087814	1					
ANR	3088060	ExpressionStatement	s --	447:42:14853:14856	3087814	1	True				
ANR	3088061	PostIncDecOperationExpression	s --		3087814	0					
ANR	3088062	Identifier	s		3087814	0					
ANR	3088063	IncDec	--		3087814	1					
ANR	3088064	ExpressionStatement	* s = '\\0'	448:4:14862:14871	3087814	8	True				
ANR	3088065	AssignmentExpression	* s = '\\0'		3087814	0		=			
ANR	3088066	UnaryOperationExpression	* s		3087814	0					
ANR	3088067	UnaryOperator	*		3087814	0					
ANR	3088068	Identifier	s		3087814	1					
ANR	3088069	PrimaryExpression	'\\0'		3087814	1					
ANR	3088070	ExpressionStatement	s = buffer	451:4:14919:14929	3087814	9	True				
ANR	3088071	AssignmentExpression	s = buffer		3087814	0		=			
ANR	3088072	Identifier	s		3087814	0					
ANR	3088073	Identifier	buffer		3087814	1					
ANR	3088074	WhileStatement	while ( isspace ( * s ) )		3087814	10					
ANR	3088075	Condition	isspace ( * s )	452:11:14942:14952	3087814	0	True				
ANR	3088076	CallExpression	isspace ( * s )		3087814	0					
ANR	3088077	Callee	isspace		3087814	0					
ANR	3088078	Identifier	isspace		3087814	0					
ANR	3088079	ArgumentList	* s		3087814	1					
ANR	3088080	Argument	* s		3087814	0					
ANR	3088081	UnaryOperationExpression	* s		3087814	0					
ANR	3088082	UnaryOperator	*		3087814	0					
ANR	3088083	Identifier	s		3087814	1					
ANR	3088084	ExpressionStatement	s ++	452:24:14955:14958	3087814	1	True				
ANR	3088085	PostIncDecOperationExpression	s ++		3087814	0					
ANR	3088086	Identifier	s		3087814	0					
ANR	3088087	IncDec	++		3087814	1					
ANR	3088088	IfStatement	if ( * s == '\\0' || * s == '#' )		3087814	11					
ANR	3088089	Condition	* s == '\\0' || * s == '#'	453:8:14968:14990	3087814	0	True				
ANR	3088090	OrExpression	* s == '\\0' || * s == '#'		3087814	0		||			
ANR	3088091	EqualityExpression	* s == '\\0'		3087814	0		==			
ANR	3088092	UnaryOperationExpression	* s		3087814	0					
ANR	3088093	UnaryOperator	*		3087814	0					
ANR	3088094	Identifier	s		3087814	1					
ANR	3088095	PrimaryExpression	'\\0'		3087814	1					
ANR	3088096	EqualityExpression	* s == '#'		3087814	1		==			
ANR	3088097	UnaryOperationExpression	* s		3087814	0					
ANR	3088098	UnaryOperator	*		3087814	0					
ANR	3088099	Identifier	s		3087814	1					
ANR	3088100	PrimaryExpression	'#'		3087814	1					
ANR	3088101	ContinueStatement	continue ;	453:33:14993:15001	3087814	1	True				
ANR	3088102	IfStatement	"if ( is_word ( s , ""unit"" ) )"		3087814	12					
ANR	3088103	Condition	"is_word ( s , ""unit"" )"	456:8:15051:15068	3087814	0	True				
ANR	3088104	CallExpression	"is_word ( s , ""unit"" )"		3087814	0					
ANR	3088105	Callee	is_word		3087814	0					
ANR	3088106	Identifier	is_word		3087814	0					
ANR	3088107	ArgumentList	s		3087814	1					
ANR	3088108	Argument	s		3087814	0					
ANR	3088109	Identifier	s		3087814	0					
ANR	3088110	Argument	"""unit"""		3087814	1					
ANR	3088111	PrimaryExpression	"""unit"""		3087814	0					
ANR	3088112	CompoundStatement		64:6:2363:2393	3087814	1					
ANR	3088113	IdentifierDeclStatement	char * unit_name = next_word ( s ) ;	457:6:15079:15109	3087814	0	True				
ANR	3088114	IdentifierDecl	* unit_name = next_word ( s )		3087814	0					
ANR	3088115	IdentifierDeclType	char *		3087814	0					
ANR	3088116	Identifier	unit_name		3087814	1					
ANR	3088117	AssignmentExpression	* unit_name = next_word ( s )		3087814	2		=			
ANR	3088118	Identifier	unit_name		3087814	0					
ANR	3088119	CallExpression	next_word ( s )		3087814	1					
ANR	3088120	Callee	next_word		3087814	0					
ANR	3088121	Identifier	next_word		3087814	0					
ANR	3088122	ArgumentList	s		3087814	1					
ANR	3088123	Argument	s		3087814	0					
ANR	3088124	Identifier	s		3087814	0					
ANR	3088125	IfStatement	if ( unit_name != NULL )		3087814	1					
ANR	3088126	Condition	unit_name != NULL	458:10:15121:15137	3087814	0	True				
ANR	3088127	EqualityExpression	unit_name != NULL		3087814	0		!=			
ANR	3088128	Identifier	unit_name		3087814	0					
ANR	3088129	Identifier	NULL		3087814	1					
ANR	3088130	CompoundStatement		65:29:2424:2424	3087814	1					
ANR	3088131	ExpressionStatement	s = next_word ( unit_name )	459:8:15150:15174	3087814	0	True				
ANR	3088132	AssignmentExpression	s = next_word ( unit_name )		3087814	0		=			
ANR	3088133	Identifier	s		3087814	0					
ANR	3088134	CallExpression	next_word ( unit_name )		3087814	1					
ANR	3088135	Callee	next_word		3087814	0					
ANR	3088136	Identifier	next_word		3087814	0					
ANR	3088137	ArgumentList	unit_name		3087814	1					
ANR	3088138	Argument	unit_name		3087814	0					
ANR	3088139	Identifier	unit_name		3087814	0					
ANR	3088140	IfStatement	if ( s == NULL )		3087814	1					
ANR	3088141	Condition	s == NULL	460:12:15188:15196	3087814	0	True				
ANR	3088142	EqualityExpression	s == NULL		3087814	0		==			
ANR	3088143	Identifier	s		3087814	0					
ANR	3088144	Identifier	NULL		3087814	1					
ANR	3088145	CompoundStatement		67:23:2483:2483	3087814	1					
ANR	3088146	IfStatement	"if ( is_word ( unit_name , ""in"" ) )"		3087814	0					
ANR	3088147	Condition	"is_word ( unit_name , ""in"" )"	461:14:15215:15238	3087814	0	True				
ANR	3088148	CallExpression	"is_word ( unit_name , ""in"" )"		3087814	0					
ANR	3088149	Callee	is_word		3087814	0					
ANR	3088150	Identifier	is_word		3087814	0					
ANR	3088151	ArgumentList	unit_name		3087814	1					
ANR	3088152	Argument	unit_name		3087814	0					
ANR	3088153	Identifier	unit_name		3087814	0					
ANR	3088154	Argument	"""in"""		3087814	1					
ANR	3088155	PrimaryExpression	"""in"""		3087814	0					
ANR	3088156	CompoundStatement		68:40:2525:2525	3087814	1					
ANR	3088157	ExpressionStatement	conversion_factor = BP_PER_IN	462:12:15255:15284	3087814	0	True				
ANR	3088158	AssignmentExpression	conversion_factor = BP_PER_IN		3087814	0		=			
ANR	3088159	Identifier	conversion_factor		3087814	0					
ANR	3088160	Identifier	BP_PER_IN		3087814	1					
ANR	3088161	ContinueStatement	continue ;	463:12:15298:15306	3087814	1	True				
ANR	3088162	IfStatement	"if ( is_word ( unit_name , ""mm"" ) )"		3087814	1					
ANR	3088163	Condition	"is_word ( unit_name , ""mm"" )"	465:14:15334:15357	3087814	0	True				
ANR	3088164	CallExpression	"is_word ( unit_name , ""mm"" )"		3087814	0					
ANR	3088165	Callee	is_word		3087814	0					
ANR	3088166	Identifier	is_word		3087814	0					
ANR	3088167	ArgumentList	unit_name		3087814	1					
ANR	3088168	Argument	unit_name		3087814	0					
ANR	3088169	Identifier	unit_name		3087814	0					
ANR	3088170	Argument	"""mm"""		3087814	1					
ANR	3088171	PrimaryExpression	"""mm"""		3087814	0					
ANR	3088172	CompoundStatement		72:40:2644:2644	3087814	1					
ANR	3088173	ExpressionStatement	conversion_factor = BP_PER_MM	466:12:15374:15403	3087814	0	True				
ANR	3088174	AssignmentExpression	conversion_factor = BP_PER_MM		3087814	0		=			
ANR	3088175	Identifier	conversion_factor		3087814	0					
ANR	3088176	Identifier	BP_PER_MM		3087814	1					
ANR	3088177	ContinueStatement	continue ;	467:12:15417:15425	3087814	1	True				
ANR	3088178	CompoundStatement		86:6:3040:3070	3087814	13					
ANR	3088179	IdentifierDeclStatement	eprn_PageDescription * new_list ;	479:6:15756:15786	3087814	0	True				
ANR	3088180	IdentifierDecl	* new_list		3087814	0					
ANR	3088181	IdentifierDeclType	eprn_PageDescription *		3087814	0					
ANR	3088182	Identifier	new_list		3087814	1					
ANR	3088183	ExpressionStatement	"new_list = ( eprn_PageDescription * ) realloc ( list , ( read + 1 ) * sizeof ( eprn_PageDescription ) )"	480:6:15794:15890	3087814	1	True				
ANR	3088184	AssignmentExpression	"new_list = ( eprn_PageDescription * ) realloc ( list , ( read + 1 ) * sizeof ( eprn_PageDescription ) )"		3087814	0		=			
ANR	3088185	Identifier	new_list		3087814	0					
ANR	3088186	CastExpression	"( eprn_PageDescription * ) realloc ( list , ( read + 1 ) * sizeof ( eprn_PageDescription ) )"		3087814	1					
ANR	3088187	CastTarget	eprn_PageDescription *		3087814	0					
ANR	3088188	CallExpression	"realloc ( list , ( read + 1 ) * sizeof ( eprn_PageDescription ) )"		3087814	1					
ANR	3088189	Callee	realloc		3087814	0					
ANR	3088190	Identifier	realloc		3087814	0					
ANR	3088191	ArgumentList	list		3087814	1					
ANR	3088192	Argument	list		3087814	0					
ANR	3088193	Identifier	list		3087814	0					
ANR	3088194	Argument	( read + 1 ) * sizeof ( eprn_PageDescription )		3087814	1					
ANR	3088195	MultiplicativeExpression	( read + 1 ) * sizeof ( eprn_PageDescription )		3087814	0		*			
ANR	3088196	AdditiveExpression	read + 1		3087814	0		+			
ANR	3088197	Identifier	read		3087814	0					
ANR	3088198	PrimaryExpression	1		3087814	1					
ANR	3088199	SizeofExpression	sizeof ( eprn_PageDescription )		3087814	1					
ANR	3088200	Sizeof	sizeof		3087814	0					
ANR	3088201	SizeofOperand	eprn_PageDescription		3087814	1					
ANR	3088202	IfStatement	if ( new_list == NULL )		3087814	2					
ANR	3088203	Condition	new_list == NULL	482:10:15902:15917	3087814	0	True				
ANR	3088204	EqualityExpression	new_list == NULL		3087814	0		==			
ANR	3088205	Identifier	new_list		3087814	0					
ANR	3088206	Identifier	NULL		3087814	1					
ANR	3088207	CompoundStatement		89:28:3204:3204	3087814	1					
ANR	3088208	Statement	eprintf2	483:8:15930:15937	3087814	0	True				
ANR	3088209	Statement	(	483:16:15938:15938	3087814	1	True				
ANR	3088210	Statement	"""%s"""	483:17:15939:15942	3087814	2	True				
ANR	3088211	Statement	ERRPREF	483:22:15944:15950	3087814	3	True				
ANR	3088212	Statement	"""Memory allocation failure in eprn_read_media_data(): %s.\\n"""	484:10:15962:16021	3087814	4	True				
ANR	3088213	Statement	","	484:70:16022:16022	3087814	5	True				
ANR	3088214	Statement	epref	485:10:16034:16038	3087814	6	True				
ANR	3088215	Statement	","	485:15:16039:16039	3087814	7	True				
ANR	3088216	Statement	strerror	485:17:16041:16048	3087814	8	True				
ANR	3088217	Statement	(	485:25:16049:16049	3087814	9	True				
ANR	3088218	Statement	errno	485:26:16050:16054	3087814	10	True				
ANR	3088219	Statement	)	485:31:16055:16055	3087814	11	True				
ANR	3088220	Statement	)	485:32:16056:16056	3087814	12	True				
ANR	3088221	ExpressionStatement		485:33:16057:16057	3087814	13	True				
ANR	3088222	ExpressionStatement	cleanup ( )	486:8:16067:16076	3087814	14	True				
ANR	3088223	CallExpression	cleanup ( )		3087814	0					
ANR	3088224	Callee	cleanup		3087814	0					
ANR	3088225	Identifier	cleanup		3087814	0					
ANR	3088226	ArgumentList			3087814	1					
ANR	3088227	ExpressionStatement	return_error ( gs_error_VMerror )	487:8:16086:16116	3087814	15	True				
ANR	3088228	CallExpression	return_error ( gs_error_VMerror )		3087814	0					
ANR	3088229	Callee	return_error		3087814	0					
ANR	3088230	Identifier	return_error		3087814	0					
ANR	3088231	ArgumentList	gs_error_VMerror		3087814	1					
ANR	3088232	Argument	gs_error_VMerror		3087814	0					
ANR	3088233	Identifier	gs_error_VMerror		3087814	0					
ANR	3088234	ExpressionStatement	list = new_list	489:6:16132:16147	3087814	3	True				
ANR	3088235	AssignmentExpression	list = new_list		3087814	0		=			
ANR	3088236	Identifier	list		3087814	0					
ANR	3088237	Identifier	new_list		3087814	1					
ANR	3088238	ExpressionStatement	current = list + read	493:4:16201:16222	3087814	14	True				
ANR	3088239	AssignmentExpression	current = list + read		3087814	0		=			
ANR	3088240	Identifier	current		3087814	0					
ANR	3088241	AdditiveExpression	list + read		3087814	1		+			
ANR	3088242	Identifier	list		3087814	0					
ANR	3088243	Identifier	read		3087814	1					
ANR	3088244	ExpressionStatement	s = buffer	496:4:16280:16290	3087814	15	True				
ANR	3088245	AssignmentExpression	s = buffer		3087814	0		=			
ANR	3088246	Identifier	s		3087814	0					
ANR	3088247	Identifier	buffer		3087814	1					
ANR	3088248	WhileStatement	while ( isspace ( * s ) )		3087814	16					
ANR	3088249	Condition	isspace ( * s )	497:11:16303:16313	3087814	0	True				
ANR	3088250	CallExpression	isspace ( * s )		3087814	0					
ANR	3088251	Callee	isspace		3087814	0					
ANR	3088252	Identifier	isspace		3087814	0					
ANR	3088253	ArgumentList	* s		3087814	1					
ANR	3088254	Argument	* s		3087814	0					
ANR	3088255	UnaryOperationExpression	* s		3087814	0					
ANR	3088256	UnaryOperator	*		3087814	0					
ANR	3088257	Identifier	s		3087814	1					
ANR	3088258	ExpressionStatement	s ++	497:24:16316:16319	3087814	1	True				
ANR	3088259	PostIncDecOperationExpression	s ++		3087814	0					
ANR	3088260	Identifier	s		3087814	0					
ANR	3088261	IncDec	++		3087814	1					
ANR	3088262	ExpressionStatement	t = s + 1	498:4:16325:16334	3087814	17	True				
ANR	3088263	AssignmentExpression	t = s + 1		3087814	0		=			
ANR	3088264	Identifier	t		3087814	0					
ANR	3088265	AdditiveExpression	s + 1		3087814	1		+			
ANR	3088266	Identifier	s		3087814	0					
ANR	3088267	PrimaryExpression	1		3087814	1					
ANR	3088268	WhileStatement	while ( * t != '\\0' && ! isspace ( * t ) )		3087814	18					
ANR	3088269	Condition	* t != '\\0' && ! isspace ( * t )	499:11:16398:16423	3087814	0	True				
ANR	3088270	AndExpression	* t != '\\0' && ! isspace ( * t )		3087814	0		&&			
ANR	3088271	EqualityExpression	* t != '\\0'		3087814	0		!=			
ANR	3088272	UnaryOperationExpression	* t		3087814	0					
ANR	3088273	UnaryOperator	*		3087814	0					
ANR	3088274	Identifier	t		3087814	1					
ANR	3088275	PrimaryExpression	'\\0'		3087814	1					
ANR	3088276	UnaryOperationExpression	! isspace ( * t )		3087814	1					
ANR	3088277	UnaryOperator	!		3087814	0					
ANR	3088278	CallExpression	isspace ( * t )		3087814	1					
ANR	3088279	Callee	isspace		3087814	0					
ANR	3088280	Identifier	isspace		3087814	0					
ANR	3088281	ArgumentList	* t		3087814	1					
ANR	3088282	Argument	* t		3087814	0					
ANR	3088283	UnaryOperationExpression	* t		3087814	0					
ANR	3088284	UnaryOperator	*		3087814	0					
ANR	3088285	Identifier	t		3087814	1					
ANR	3088286	ExpressionStatement	t ++	499:39:16426:16429	3087814	1	True				
ANR	3088287	PostIncDecOperationExpression	t ++		3087814	0					
ANR	3088288	Identifier	t		3087814	0					
ANR	3088289	IncDec	++		3087814	1					
ANR	3088290	IfStatement	if ( * t != '\\0' )		3087814	19					
ANR	3088291	Condition	* t != '\\0'	500:8:16439:16448	3087814	0	True				
ANR	3088292	EqualityExpression	* t != '\\0'		3087814	0		!=			
ANR	3088293	UnaryOperationExpression	* t		3087814	0					
ANR	3088294	UnaryOperator	*		3087814	0					
ANR	3088295	Identifier	t		3087814	1					
ANR	3088296	PrimaryExpression	'\\0'		3087814	1					
ANR	3088297	CompoundStatement		107:20:3735:3735	3087814	1					
ANR	3088298	ExpressionStatement	* t = '\\0'	501:6:16459:16468	3087814	0	True				
ANR	3088299	AssignmentExpression	* t = '\\0'		3087814	0		=			
ANR	3088300	UnaryOperationExpression	* t		3087814	0					
ANR	3088301	UnaryOperator	*		3087814	0					
ANR	3088302	Identifier	t		3087814	1					
ANR	3088303	PrimaryExpression	'\\0'		3087814	1					
ANR	3088304	ExpressionStatement	t ++	502:6:16476:16479	3087814	1	True				
ANR	3088305	PostIncDecOperationExpression	t ++		3087814	0					
ANR	3088306	Identifier	t		3087814	0					
ANR	3088307	IncDec	++		3087814	1					
ANR	3088308	CompoundStatement		112:6:3783:3845	3087814	20					
ANR	3088309	IdentifierDeclStatement	"ms_MediaCode code = ms_find_code_from_name ( s , eprn -> flag_desc ) ;"	505:6:16499:16561	3087814	0	True				
ANR	3088310	IdentifierDecl	"code = ms_find_code_from_name ( s , eprn -> flag_desc )"		3087814	0					
ANR	3088311	IdentifierDeclType	ms_MediaCode		3087814	0					
ANR	3088312	Identifier	code		3087814	1					
ANR	3088313	AssignmentExpression	"code = ms_find_code_from_name ( s , eprn -> flag_desc )"		3087814	2		=			
ANR	3088314	Identifier	code		3087814	0					
ANR	3088315	CallExpression	"ms_find_code_from_name ( s , eprn -> flag_desc )"		3087814	1					
ANR	3088316	Callee	ms_find_code_from_name		3087814	0					
ANR	3088317	Identifier	ms_find_code_from_name		3087814	0					
ANR	3088318	ArgumentList	s		3087814	1					
ANR	3088319	Argument	s		3087814	0					
ANR	3088320	Identifier	s		3087814	0					
ANR	3088321	Argument	eprn -> flag_desc		3087814	1					
ANR	3088322	PtrMemberAccess	eprn -> flag_desc		3087814	0					
ANR	3088323	Identifier	eprn		3087814	0					
ANR	3088324	Identifier	flag_desc		3087814	1					
ANR	3088325	IfStatement	if ( code == ms_none )		3087814	1					
ANR	3088326	Condition	code == ms_none	506:10:16573:16587	3087814	0	True				
ANR	3088327	EqualityExpression	code == ms_none		3087814	0		==			
ANR	3088328	Identifier	code		3087814	0					
ANR	3088329	Identifier	ms_none		3087814	1					
ANR	3088330	CompoundStatement		113:27:3874:3874	3087814	1					
ANR	3088331	Statement	eprintf5	507:8:16600:16607	3087814	0	True				
ANR	3088332	Statement	(	507:16:16608:16608	3087814	1	True				
ANR	3088333	Statement	"""%s"""	507:17:16609:16612	3087814	2	True				
ANR	3088334	Statement	ERRPREF	507:22:16614:16620	3087814	3	True				
ANR	3088335	Statement	"""Unknown media name (%s) in """	507:30:16622:16650	3087814	4	True				
ANR	3088336	Statement	"""media configuration file\\n%s  %s, line %d.\\n"""	508:12:16664:16709	3087814	5	True				
ANR	3088337	Statement	","	508:58:16710:16710	3087814	6	True				
ANR	3088338	Statement	epref	509:10:16722:16726	3087814	7	True				
ANR	3088339	Statement	","	509:15:16727:16727	3087814	8	True				
ANR	3088340	Statement	s	509:17:16729:16729	3087814	9	True				
ANR	3088341	Statement	","	509:18:16730:16730	3087814	10	True				
ANR	3088342	Statement	epref	509:20:16732:16736	3087814	11	True				
ANR	3088343	Statement	","	509:25:16737:16737	3087814	12	True				
ANR	3088344	Statement	eprn	509:27:16739:16742	3087814	13	True				
ANR	3088345	Statement	->	509:31:16743:16744	3087814	14	True				
ANR	3088346	Statement	media_file	509:33:16745:16754	3087814	15	True				
ANR	3088347	Statement	","	509:43:16755:16755	3087814	16	True				
ANR	3088348	Statement	line	509:45:16757:16760	3087814	17	True				
ANR	3088349	Statement	)	509:49:16761:16761	3087814	18	True				
ANR	3088350	ExpressionStatement		509:50:16762:16762	3087814	19	True				
ANR	3088351	ExpressionStatement	cleanup ( )	510:8:16772:16781	3087814	20	True				
ANR	3088352	CallExpression	cleanup ( )		3087814	0					
ANR	3088353	Callee	cleanup		3087814	0					
ANR	3088354	Identifier	cleanup		3087814	0					
ANR	3088355	ArgumentList			3087814	1					
ANR	3088356	ExpressionStatement	return_error ( gs_error_rangecheck )	511:8:16791:16824	3087814	21	True				
ANR	3088357	CallExpression	return_error ( gs_error_rangecheck )		3087814	0					
ANR	3088358	Callee	return_error		3087814	0					
ANR	3088359	Identifier	return_error		3087814	0					
ANR	3088360	ArgumentList	gs_error_rangecheck		3087814	1					
ANR	3088361	Argument	gs_error_rangecheck		3087814	0					
ANR	3088362	Identifier	gs_error_rangecheck		3087814	0					
ANR	3088363	IfStatement	if ( code & MS_ROTATED_FLAG )		3087814	2					
ANR	3088364	Condition	code & MS_ROTATED_FLAG	513:10:16844:16865	3087814	0	True				
ANR	3088365	BitAndExpression	code & MS_ROTATED_FLAG		3087814	0		&			
ANR	3088366	Identifier	code		3087814	0					
ANR	3088367	Identifier	MS_ROTATED_FLAG		3087814	1					
ANR	3088368	CompoundStatement		120:34:4152:4152	3087814	1					
ANR	3088369	Statement	eprintf5	514:8:16878:16885	3087814	0	True				
ANR	3088370	Statement	(	514:16:16886:16886	3087814	1	True				
ANR	3088371	Statement	"""%s"""	514:17:16887:16890	3087814	2	True				
ANR	3088372	Statement	ERRPREF	514:22:16892:16898	3087814	3	True				
ANR	3088373	Statement	"""Invalid substring \\"""""	514:30:16900:16921	3087814	4	True				
ANR	3088374	Statement	MS_ROTATED_STRING	514:53:16923:16939	3087814	5	True				
ANR	3088375	Statement	"""\\"" in media name (%s)\\n"""	515:12:16953:16977	3087814	6	True				
ANR	3088376	Statement	"""%s  in media configuration file %s, line %d.\\n"""	516:10:16989:17036	3087814	7	True				
ANR	3088377	Statement	","	516:58:17037:17037	3087814	8	True				
ANR	3088378	Statement	epref	517:10:17049:17053	3087814	9	True				
ANR	3088379	Statement	","	517:15:17054:17054	3087814	10	True				
ANR	3088380	Statement	s	517:17:17056:17056	3087814	11	True				
ANR	3088381	Statement	","	517:18:17057:17057	3087814	12	True				
ANR	3088382	Statement	epref	517:20:17059:17063	3087814	13	True				
ANR	3088383	Statement	","	517:25:17064:17064	3087814	14	True				
ANR	3088384	Statement	eprn	517:27:17066:17069	3087814	15	True				
ANR	3088385	Statement	->	517:31:17070:17071	3087814	16	True				
ANR	3088386	Statement	media_file	517:33:17072:17081	3087814	17	True				
ANR	3088387	Statement	","	517:43:17082:17082	3087814	18	True				
ANR	3088388	Statement	line	517:45:17084:17087	3087814	19	True				
ANR	3088389	Statement	)	517:49:17088:17088	3087814	20	True				
ANR	3088390	ExpressionStatement		517:50:17089:17089	3087814	21	True				
ANR	3088391	ExpressionStatement	cleanup ( )	518:8:17099:17108	3087814	22	True				
ANR	3088392	CallExpression	cleanup ( )		3087814	0					
ANR	3088393	Callee	cleanup		3087814	0					
ANR	3088394	Identifier	cleanup		3087814	0					
ANR	3088395	ArgumentList			3087814	1					
ANR	3088396	ExpressionStatement	return_error ( gs_error_rangecheck )	519:8:17118:17151	3087814	23	True				
ANR	3088397	CallExpression	return_error ( gs_error_rangecheck )		3087814	0					
ANR	3088398	Callee	return_error		3087814	0					
ANR	3088399	Identifier	return_error		3087814	0					
ANR	3088400	ArgumentList	gs_error_rangecheck		3087814	1					
ANR	3088401	Argument	gs_error_rangecheck		3087814	0					
ANR	3088402	Identifier	gs_error_rangecheck		3087814	0					
ANR	3088403	ExpressionStatement	current -> code = code	521:6:17167:17187	3087814	3	True				
ANR	3088404	AssignmentExpression	current -> code = code		3087814	0		=			
ANR	3088405	PtrMemberAccess	current -> code		3087814	0					
ANR	3088406	Identifier	current		3087814	0					
ANR	3088407	Identifier	code		3087814	1					
ANR	3088408	Identifier	code		3087814	1					
ANR	3088409	IfStatement	"if ( sscanf ( t , ""%g %g %g %g%n"" , & current -> left , & current -> bottom , & current -> right , & current -> top , & chars_read ) != 4 || t [ chars_read ] != '\\0' )"		3087814	21					
ANR	3088410	Condition	"sscanf ( t , ""%g %g %g %g%n"" , & current -> left , & current -> bottom , & current -> right , & current -> top , & chars_read ) != 4 || t [ chars_read ] != '\\0'"	525:8:17231:17383	3087814	0	True				
ANR	3088411	OrExpression	"sscanf ( t , ""%g %g %g %g%n"" , & current -> left , & current -> bottom , & current -> right , & current -> top , & chars_read ) != 4 || t [ chars_read ] != '\\0'"		3087814	0		||			
ANR	3088412	EqualityExpression	"sscanf ( t , ""%g %g %g %g%n"" , & current -> left , & current -> bottom , & current -> right , & current -> top , & chars_read ) != 4"		3087814	0		!=			
ANR	3088413	CallExpression	"sscanf ( t , ""%g %g %g %g%n"" , & current -> left , & current -> bottom , & current -> right , & current -> top , & chars_read )"		3087814	0					
ANR	3088414	Callee	sscanf		3087814	0					
ANR	3088415	Identifier	sscanf		3087814	0					
ANR	3088416	ArgumentList	t		3087814	1					
ANR	3088417	Argument	t		3087814	0					
ANR	3088418	Identifier	t		3087814	0					
ANR	3088419	Argument	"""%g %g %g %g%n"""		3087814	1					
ANR	3088420	PrimaryExpression	"""%g %g %g %g%n"""		3087814	0					
ANR	3088421	Argument	& current -> left		3087814	2					
ANR	3088422	UnaryOperationExpression	& current -> left		3087814	0					
ANR	3088423	UnaryOperator	&		3087814	0					
ANR	3088424	PtrMemberAccess	current -> left		3087814	1					
ANR	3088425	Identifier	current		3087814	0					
ANR	3088426	Identifier	left		3087814	1					
ANR	3088427	Argument	& current -> bottom		3087814	3					
ANR	3088428	UnaryOperationExpression	& current -> bottom		3087814	0					
ANR	3088429	UnaryOperator	&		3087814	0					
ANR	3088430	PtrMemberAccess	current -> bottom		3087814	1					
ANR	3088431	Identifier	current		3087814	0					
ANR	3088432	Identifier	bottom		3087814	1					
ANR	3088433	Argument	& current -> right		3087814	4					
ANR	3088434	UnaryOperationExpression	& current -> right		3087814	0					
ANR	3088435	UnaryOperator	&		3087814	0					
ANR	3088436	PtrMemberAccess	current -> right		3087814	1					
ANR	3088437	Identifier	current		3087814	0					
ANR	3088438	Identifier	right		3087814	1					
ANR	3088439	Argument	& current -> top		3087814	5					
ANR	3088440	UnaryOperationExpression	& current -> top		3087814	0					
ANR	3088441	UnaryOperator	&		3087814	0					
ANR	3088442	PtrMemberAccess	current -> top		3087814	1					
ANR	3088443	Identifier	current		3087814	0					
ANR	3088444	Identifier	top		3087814	1					
ANR	3088445	Argument	& chars_read		3087814	6					
ANR	3088446	UnaryOperationExpression	& chars_read		3087814	0					
ANR	3088447	UnaryOperator	&		3087814	0					
ANR	3088448	Identifier	chars_read		3087814	1					
ANR	3088449	PrimaryExpression	4		3087814	1					
ANR	3088450	EqualityExpression	t [ chars_read ] != '\\0'		3087814	1		!=			
ANR	3088451	ArrayIndexing	t [ chars_read ]		3087814	0					
ANR	3088452	Identifier	t		3087814	0					
ANR	3088453	Identifier	chars_read		3087814	1					
ANR	3088454	PrimaryExpression	'\\0'		3087814	1					
ANR	3088455	CompoundStatement		134:31:4670:4670	3087814	1					
ANR	3088456	IfStatement	if ( * t != '\\0' )		3087814	0					
ANR	3088457	Condition	* t != '\\0'	528:10:17398:17407	3087814	0	True				
ANR	3088458	EqualityExpression	* t != '\\0'		3087814	0		!=			
ANR	3088459	UnaryOperationExpression	* t		3087814	0					
ANR	3088460	UnaryOperator	*		3087814	0					
ANR	3088461	Identifier	t		3087814	1					
ANR	3088462	PrimaryExpression	'\\0'		3087814	1					
ANR	3088463	ExpressionStatement	* ( t - 1 ) = ' '	528:22:17410:17422	3087814	1	True				
ANR	3088464	AssignmentExpression	* ( t - 1 ) = ' '		3087814	0		=			
ANR	3088465	UnaryOperationExpression	* ( t - 1 )		3087814	0					
ANR	3088466	UnaryOperator	*		3087814	0					
ANR	3088467	AdditiveExpression	t - 1		3087814	1		-			
ANR	3088468	Identifier	t		3087814	0					
ANR	3088469	PrimaryExpression	1		3087814	1					
ANR	3088470	PrimaryExpression	' '		3087814	1					
ANR	3088471	Statement	eprintf5	529:6:17468:17475	3087814	1	True				
ANR	3088472	Statement	(	529:14:17476:17476	3087814	2	True				
ANR	3088473	Statement	"""%s"""	529:15:17477:17480	3087814	3	True				
ANR	3088474	Statement	ERRPREF	529:20:17482:17488	3087814	4	True				
ANR	3088475	Statement	"""Syntax error in media configuration file %s, line %d:\\n%s    %s\\n"""	530:8:17498:17564	3087814	5	True				
ANR	3088476	Statement	","	530:75:17565:17565	3087814	6	True				
ANR	3088477	Statement	epref	531:8:17575:17579	3087814	7	True				
ANR	3088478	Statement	","	531:13:17580:17580	3087814	8	True				
ANR	3088479	Statement	eprn	531:15:17582:17585	3087814	9	True				
ANR	3088480	Statement	->	531:19:17586:17587	3087814	10	True				
ANR	3088481	Statement	media_file	531:21:17588:17597	3087814	11	True				
ANR	3088482	Statement	","	531:31:17598:17598	3087814	12	True				
ANR	3088483	Statement	line	531:33:17600:17603	3087814	13	True				
ANR	3088484	Statement	","	531:37:17604:17604	3087814	14	True				
ANR	3088485	Statement	epref	531:39:17606:17610	3087814	15	True				
ANR	3088486	Statement	","	531:44:17611:17611	3087814	16	True				
ANR	3088487	Statement	buffer	531:46:17613:17618	3087814	17	True				
ANR	3088488	Statement	)	531:52:17619:17619	3087814	18	True				
ANR	3088489	ExpressionStatement		531:53:17620:17620	3087814	19	True				
ANR	3088490	ExpressionStatement	cleanup ( )	532:6:17628:17637	3087814	20	True				
ANR	3088491	CallExpression	cleanup ( )		3087814	0					
ANR	3088492	Callee	cleanup		3087814	0					
ANR	3088493	Identifier	cleanup		3087814	0					
ANR	3088494	ArgumentList			3087814	1					
ANR	3088495	ExpressionStatement	return_error ( gs_error_rangecheck )	533:6:17645:17678	3087814	21	True				
ANR	3088496	CallExpression	return_error ( gs_error_rangecheck )		3087814	0					
ANR	3088497	Callee	return_error		3087814	0					
ANR	3088498	Identifier	return_error		3087814	0					
ANR	3088499	ArgumentList	gs_error_rangecheck		3087814	1					
ANR	3088500	Argument	gs_error_rangecheck		3087814	0					
ANR	3088501	Identifier	gs_error_rangecheck		3087814	0					
ANR	3088502	IfStatement	if ( current -> left < 0 || current -> bottom < 0 || current -> right < 0 || current -> top < 0 )		3087814	22					
ANR	3088503	Condition	current -> left < 0 || current -> bottom < 0 || current -> right < 0 || current -> top < 0	537:8:17720:17809	3087814	0	True				
ANR	3088504	OrExpression	current -> left < 0 || current -> bottom < 0 || current -> right < 0 || current -> top < 0		3087814	0		||			
ANR	3088505	RelationalExpression	current -> left < 0		3087814	0		<			
ANR	3088506	PtrMemberAccess	current -> left		3087814	0					
ANR	3088507	Identifier	current		3087814	0					
ANR	3088508	Identifier	left		3087814	1					
ANR	3088509	PrimaryExpression	0		3087814	1					
ANR	3088510	OrExpression	current -> bottom < 0 || current -> right < 0 || current -> top < 0		3087814	1		||			
ANR	3088511	RelationalExpression	current -> bottom < 0		3087814	0		<			
ANR	3088512	PtrMemberAccess	current -> bottom		3087814	0					
ANR	3088513	Identifier	current		3087814	0					
ANR	3088514	Identifier	bottom		3087814	1					
ANR	3088515	PrimaryExpression	0		3087814	1					
ANR	3088516	OrExpression	current -> right < 0 || current -> top < 0		3087814	1		||			
ANR	3088517	RelationalExpression	current -> right < 0		3087814	0		<			
ANR	3088518	PtrMemberAccess	current -> right		3087814	0					
ANR	3088519	Identifier	current		3087814	0					
ANR	3088520	Identifier	right		3087814	1					
ANR	3088521	PrimaryExpression	0		3087814	1					
ANR	3088522	RelationalExpression	current -> top < 0		3087814	1		<			
ANR	3088523	PtrMemberAccess	current -> top		3087814	0					
ANR	3088524	Identifier	current		3087814	0					
ANR	3088525	Identifier	top		3087814	1					
ANR	3088526	PrimaryExpression	0		3087814	1					
ANR	3088527	CompoundStatement		145:26:5096:5096	3087814	1					
ANR	3088528	Statement	eprintf4	539:6:17820:17827	3087814	0	True				
ANR	3088529	Statement	(	539:14:17828:17828	3087814	1	True				
ANR	3088530	Statement	"""%s"""	539:15:17829:17832	3087814	2	True				
ANR	3088531	Statement	ERRPREF	539:20:17834:17840	3087814	3	True				
ANR	3088532	Statement	"""Ghostscript does not support negative margins (line %d in the\\n"""	540:8:17850:17914	3087814	4	True				
ANR	3088533	Statement	"""%s  media configuration file %s).\\n"""	541:8:17924:17960	3087814	5	True				
ANR	3088534	Statement	","	541:45:17961:17961	3087814	6	True				
ANR	3088535	Statement	epref	542:8:17971:17975	3087814	7	True				
ANR	3088536	Statement	","	542:13:17976:17976	3087814	8	True				
ANR	3088537	Statement	line	542:15:17978:17981	3087814	9	True				
ANR	3088538	Statement	","	542:19:17982:17982	3087814	10	True				
ANR	3088539	Statement	epref	542:21:17984:17988	3087814	11	True				
ANR	3088540	Statement	","	542:26:17989:17989	3087814	12	True				
ANR	3088541	Statement	eprn	542:28:17991:17994	3087814	13	True				
ANR	3088542	Statement	->	542:32:17995:17996	3087814	14	True				
ANR	3088543	Statement	media_file	542:34:17997:18006	3087814	15	True				
ANR	3088544	Statement	)	542:44:18007:18007	3087814	16	True				
ANR	3088545	ExpressionStatement		542:45:18008:18008	3087814	17	True				
ANR	3088546	ExpressionStatement	cleanup ( )	543:6:18016:18025	3087814	18	True				
ANR	3088547	CallExpression	cleanup ( )		3087814	0					
ANR	3088548	Callee	cleanup		3087814	0					
ANR	3088549	Identifier	cleanup		3087814	0					
ANR	3088550	ArgumentList			3087814	1					
ANR	3088551	ExpressionStatement	return_error ( gs_error_rangecheck )	544:6:18033:18066	3087814	19	True				
ANR	3088552	CallExpression	return_error ( gs_error_rangecheck )		3087814	0					
ANR	3088553	Callee	return_error		3087814	0					
ANR	3088554	Identifier	return_error		3087814	0					
ANR	3088555	ArgumentList	gs_error_rangecheck		3087814	1					
ANR	3088556	Argument	gs_error_rangecheck		3087814	0					
ANR	3088557	Identifier	gs_error_rangecheck		3087814	0					
ANR	3088558	ExpressionStatement	read ++	547:4:18079:18085	3087814	23	True				
ANR	3088559	PostIncDecOperationExpression	read ++		3087814	0					
ANR	3088560	Identifier	read		3087814	0					
ANR	3088561	IncDec	++		3087814	1					
ANR	3088562	ExpressionStatement	current -> left *= conversion_factor	550:4:18116:18152	3087814	24	True				
ANR	3088563	AssignmentExpression	current -> left *= conversion_factor		3087814	0		*=			
ANR	3088564	PtrMemberAccess	current -> left		3087814	0					
ANR	3088565	Identifier	current		3087814	0					
ANR	3088566	Identifier	left		3087814	1					
ANR	3088567	Identifier	conversion_factor		3087814	1					
ANR	3088568	ExpressionStatement	current -> bottom *= conversion_factor	551:4:18158:18194	3087814	25	True				
ANR	3088569	AssignmentExpression	current -> bottom *= conversion_factor		3087814	0		*=			
ANR	3088570	PtrMemberAccess	current -> bottom		3087814	0					
ANR	3088571	Identifier	current		3087814	0					
ANR	3088572	Identifier	bottom		3087814	1					
ANR	3088573	Identifier	conversion_factor		3087814	1					
ANR	3088574	ExpressionStatement	current -> right *= conversion_factor	552:4:18200:18236	3087814	26	True				
ANR	3088575	AssignmentExpression	current -> right *= conversion_factor		3087814	0		*=			
ANR	3088576	PtrMemberAccess	current -> right		3087814	0					
ANR	3088577	Identifier	current		3087814	0					
ANR	3088578	Identifier	right		3087814	1					
ANR	3088579	Identifier	conversion_factor		3087814	1					
ANR	3088580	ExpressionStatement	current -> top *= conversion_factor	553:4:18242:18278	3087814	27	True				
ANR	3088581	AssignmentExpression	current -> top *= conversion_factor		3087814	0		*=			
ANR	3088582	PtrMemberAccess	current -> top		3087814	0					
ANR	3088583	Identifier	current		3087814	0					
ANR	3088584	Identifier	top		3087814	1					
ANR	3088585	Identifier	conversion_factor		3087814	1					
ANR	3088586	IfStatement	if ( ms_without_flags ( current -> code ) == ms_CustomPageSize && eprn -> cap -> custom == NULL )		3087814	28					
ANR	3088587	Condition	ms_without_flags ( current -> code ) == ms_CustomPageSize && eprn -> cap -> custom == NULL	558:8:18523:18611	3087814	0	True				
ANR	3088588	AndExpression	ms_without_flags ( current -> code ) == ms_CustomPageSize && eprn -> cap -> custom == NULL		3087814	0		&&			
ANR	3088589	EqualityExpression	ms_without_flags ( current -> code ) == ms_CustomPageSize		3087814	0		==			
ANR	3088590	CallExpression	ms_without_flags ( current -> code )		3087814	0					
ANR	3088591	Callee	ms_without_flags		3087814	0					
ANR	3088592	Identifier	ms_without_flags		3087814	0					
ANR	3088593	ArgumentList	current -> code		3087814	1					
ANR	3088594	Argument	current -> code		3087814	0					
ANR	3088595	PtrMemberAccess	current -> code		3087814	0					
ANR	3088596	Identifier	current		3087814	0					
ANR	3088597	Identifier	code		3087814	1					
ANR	3088598	Identifier	ms_CustomPageSize		3087814	1					
ANR	3088599	EqualityExpression	eprn -> cap -> custom == NULL		3087814	1		==			
ANR	3088600	PtrMemberAccess	eprn -> cap -> custom		3087814	0					
ANR	3088601	PtrMemberAccess	eprn -> cap		3087814	0					
ANR	3088602	Identifier	eprn		3087814	0					
ANR	3088603	Identifier	cap		3087814	1					
ANR	3088604	Identifier	custom		3087814	1					
ANR	3088605	Identifier	NULL		3087814	1					
ANR	3088606	Statement	eprintf6	560:6:18620:18627	3087814	1	True				
ANR	3088607	Statement	(	560:14:18628:18628	3087814	29	True				
ANR	3088608	Statement	"""%s"""	560:15:18629:18632	3087814	30	True				
ANR	3088609	Statement	WARNPREF	560:20:18634:18641	3087814	31	True				
ANR	3088610	Statement	"""The media configuration file %s\\n"""	560:29:18643:18677	3087814	32	True				
ANR	3088611	Statement	"""%s    contains a custom page size entry in line %d, """	561:8:18687:18740	3087814	33	True				
ANR	3088612	Statement	"""but custom page sizes\\n"""	562:10:18752:18776	3087814	34	True				
ANR	3088613	Statement	"""%s    are not supported by the %s.\\n"""	563:8:18786:18823	3087814	35	True				
ANR	3088614	Statement	","	563:46:18824:18824	3087814	36	True				
ANR	3088615	Statement	wpref	564:8:18834:18838	3087814	37	True				
ANR	3088616	Statement	","	564:13:18839:18839	3087814	38	True				
ANR	3088617	Statement	eprn	564:15:18841:18844	3087814	39	True				
ANR	3088618	Statement	->	564:19:18845:18846	3087814	40	True				
ANR	3088619	Statement	media_file	564:21:18847:18856	3087814	41	True				
ANR	3088620	Statement	","	564:31:18857:18857	3087814	42	True				
ANR	3088621	Statement	wpref	564:33:18859:18863	3087814	43	True				
ANR	3088622	Statement	","	564:38:18864:18864	3087814	44	True				
ANR	3088623	Statement	line	564:40:18866:18869	3087814	45	True				
ANR	3088624	Statement	","	564:44:18870:18870	3087814	46	True				
ANR	3088625	Statement	wpref	564:46:18872:18876	3087814	47	True				
ANR	3088626	Statement	","	564:51:18877:18877	3087814	48	True				
ANR	3088627	Statement	eprn	564:53:18879:18882	3087814	49	True				
ANR	3088628	Statement	->	564:57:18883:18884	3087814	50	True				
ANR	3088629	Statement	cap	564:59:18885:18887	3087814	51	True				
ANR	3088630	Statement	->	564:62:18888:18889	3087814	52	True				
ANR	3088631	Statement	name	564:64:18890:18893	3087814	53	True				
ANR	3088632	Statement	)	564:68:18894:18894	3087814	54	True				
ANR	3088633	ExpressionStatement		564:69:18895:18895	3087814	55	True				
ANR	3088634	IfStatement	if ( ferror ( f ) )		3087814	8					
ANR	3088635	Condition	ferror ( f )	566:6:18907:18915	3087814	0	True				
ANR	3088636	CallExpression	ferror ( f )		3087814	0					
ANR	3088637	Callee	ferror		3087814	0					
ANR	3088638	Identifier	ferror		3087814	0					
ANR	3088639	ArgumentList	f		3087814	1					
ANR	3088640	Argument	f		3087814	0					
ANR	3088641	Identifier	f		3087814	0					
ANR	3088642	CompoundStatement		173:17:6202:6202	3087814	1					
ANR	3088643	Statement	eprintf2	567:4:18924:18931	3087814	0	True				
ANR	3088644	Statement	(	567:12:18932:18932	3087814	1	True				
ANR	3088645	Statement	"""%s"""	567:13:18933:18936	3087814	2	True				
ANR	3088646	Statement	ERRPREF	567:18:18938:18944	3087814	3	True				
ANR	3088647	Statement	"""Unidentified system error while reading `%s'.\\n"""	568:6:18952:19000	3087814	4	True				
ANR	3088648	Statement	","	568:55:19001:19001	3087814	5	True				
ANR	3088649	Statement	epref	569:6:19009:19013	3087814	6	True				
ANR	3088650	Statement	","	569:11:19014:19014	3087814	7	True				
ANR	3088651	Statement	eprn	569:13:19016:19019	3087814	8	True				
ANR	3088652	Statement	->	569:17:19020:19021	3087814	9	True				
ANR	3088653	Statement	media_file	569:19:19022:19031	3087814	10	True				
ANR	3088654	Statement	)	569:29:19032:19032	3087814	11	True				
ANR	3088655	ExpressionStatement		569:30:19033:19033	3087814	12	True				
ANR	3088656	ExpressionStatement	cleanup ( )	570:4:19039:19048	3087814	13	True				
ANR	3088657	CallExpression	cleanup ( )		3087814	0					
ANR	3088658	Callee	cleanup		3087814	0					
ANR	3088659	Identifier	cleanup		3087814	0					
ANR	3088660	ArgumentList			3087814	1					
ANR	3088661	ExpressionStatement	return_error ( gs_error_invalidfileaccess )	571:4:19054:19094	3087814	14	True				
ANR	3088662	CallExpression	return_error ( gs_error_invalidfileaccess )		3087814	0					
ANR	3088663	Callee	return_error		3087814	0					
ANR	3088664	Identifier	return_error		3087814	0					
ANR	3088665	ArgumentList	gs_error_invalidfileaccess		3087814	1					
ANR	3088666	Argument	gs_error_invalidfileaccess		3087814	0					
ANR	3088667	Identifier	gs_error_invalidfileaccess		3087814	0					
ANR	3088668	ExpressionStatement	fclose ( f )	573:2:19102:19111	3087814	9	True				
ANR	3088669	CallExpression	fclose ( f )		3087814	0					
ANR	3088670	Callee	fclose		3087814	0					
ANR	3088671	Identifier	fclose		3087814	0					
ANR	3088672	ArgumentList	f		3087814	1					
ANR	3088673	Argument	f		3087814	0					
ANR	3088674	Identifier	f		3087814	0					
ANR	3088675	IfStatement	if ( read == 0 )		3087814	10					
ANR	3088676	Condition	read == 0	576:6:19148:19156	3087814	0	True				
ANR	3088677	EqualityExpression	read == 0		3087814	0		==			
ANR	3088678	Identifier	read		3087814	0					
ANR	3088679	PrimaryExpression	0		3087814	1					
ANR	3088680	CompoundStatement		183:17:6443:6443	3087814	1					
ANR	3088681	Statement	eprintf3	577:4:19165:19172	3087814	0	True				
ANR	3088682	Statement	(	577:12:19173:19173	3087814	1	True				
ANR	3088683	Statement	"""%s"""	577:13:19174:19177	3087814	2	True				
ANR	3088684	Statement	ERRPREF	577:18:19179:19185	3087814	3	True				
ANR	3088685	Statement	"""The media configuration file %s\\n"""	577:26:19187:19221	3087814	4	True				
ANR	3088686	Statement	"""%s  does not contain any media information.\\n"""	578:6:19229:19275	3087814	5	True				
ANR	3088687	Statement	","	578:53:19276:19276	3087814	6	True				
ANR	3088688	Statement	epref	579:6:19284:19288	3087814	7	True				
ANR	3088689	Statement	","	579:11:19289:19289	3087814	8	True				
ANR	3088690	Statement	eprn	579:13:19291:19294	3087814	9	True				
ANR	3088691	Statement	->	579:17:19295:19296	3087814	10	True				
ANR	3088692	Statement	media_file	579:19:19297:19306	3087814	11	True				
ANR	3088693	Statement	","	579:29:19307:19307	3087814	12	True				
ANR	3088694	Statement	epref	579:31:19309:19313	3087814	13	True				
ANR	3088695	Statement	)	579:36:19314:19314	3087814	14	True				
ANR	3088696	ExpressionStatement		579:37:19315:19315	3087814	15	True				
ANR	3088697	ExpressionStatement	return_error ( gs_error_rangecheck )	580:4:19321:19354	3087814	16	True				
ANR	3088698	CallExpression	return_error ( gs_error_rangecheck )		3087814	0					
ANR	3088699	Callee	return_error		3087814	0					
ANR	3088700	Identifier	return_error		3087814	0					
ANR	3088701	ArgumentList	gs_error_rangecheck		3087814	1					
ANR	3088702	Argument	gs_error_rangecheck		3087814	0					
ANR	3088703	Identifier	gs_error_rangecheck		3087814	0					
ANR	3088704	ExpressionStatement	"eprn -> media_overrides = ( eprn_PageDescription * ) gs_malloc ( memory , read + 1 , sizeof ( eprn_PageDescription ) , ""eprn_read_media_data"" )"	584:2:19409:19543	3087814	11	True				
ANR	3088705	AssignmentExpression	"eprn -> media_overrides = ( eprn_PageDescription * ) gs_malloc ( memory , read + 1 , sizeof ( eprn_PageDescription ) , ""eprn_read_media_data"" )"		3087814	0		=			
ANR	3088706	PtrMemberAccess	eprn -> media_overrides		3087814	0					
ANR	3088707	Identifier	eprn		3087814	0					
ANR	3088708	Identifier	media_overrides		3087814	1					
ANR	3088709	CastExpression	"( eprn_PageDescription * ) gs_malloc ( memory , read + 1 , sizeof ( eprn_PageDescription ) , ""eprn_read_media_data"" )"		3087814	1					
ANR	3088710	CastTarget	eprn_PageDescription *		3087814	0					
ANR	3088711	CallExpression	"gs_malloc ( memory , read + 1 , sizeof ( eprn_PageDescription ) , ""eprn_read_media_data"" )"		3087814	1					
ANR	3088712	Callee	gs_malloc		3087814	0					
ANR	3088713	Identifier	gs_malloc		3087814	0					
ANR	3088714	ArgumentList	memory		3087814	1					
ANR	3088715	Argument	memory		3087814	0					
ANR	3088716	Identifier	memory		3087814	0					
ANR	3088717	Argument	read + 1		3087814	1					
ANR	3088718	AdditiveExpression	read + 1		3087814	0		+			
ANR	3088719	Identifier	read		3087814	0					
ANR	3088720	PrimaryExpression	1		3087814	1					
ANR	3088721	Argument	sizeof ( eprn_PageDescription )		3087814	2					
ANR	3088722	SizeofExpression	sizeof ( eprn_PageDescription )		3087814	0					
ANR	3088723	Sizeof	sizeof		3087814	0					
ANR	3088724	SizeofOperand	eprn_PageDescription		3087814	1					
ANR	3088725	Argument	"""eprn_read_media_data"""		3087814	3					
ANR	3088726	PrimaryExpression	"""eprn_read_media_data"""		3087814	0					
ANR	3088727	IfStatement	if ( eprn -> media_overrides == NULL )		3087814	12					
ANR	3088728	Condition	eprn -> media_overrides == NULL	586:6:19551:19579	3087814	0	True				
ANR	3088729	EqualityExpression	eprn -> media_overrides == NULL		3087814	0		==			
ANR	3088730	PtrMemberAccess	eprn -> media_overrides		3087814	0					
ANR	3088731	Identifier	eprn		3087814	0					
ANR	3088732	Identifier	media_overrides		3087814	1					
ANR	3088733	Identifier	NULL		3087814	1					
ANR	3088734	CompoundStatement		193:37:6866:6866	3087814	1					
ANR	3088735	Statement	eprintf1	587:4:19588:19595	3087814	0	True				
ANR	3088736	Statement	(	587:12:19596:19596	3087814	1	True				
ANR	3088737	Statement	"""%s"""	587:13:19597:19600	3087814	2	True				
ANR	3088738	Statement	ERRPREF	587:18:19602:19608	3087814	3	True				
ANR	3088739	Statement	"""Memory allocation failure from gs_malloc() in eprn_read_media_data().\\n"""	588:6:19616:19688	3087814	4	True				
ANR	3088740	Statement	","	588:79:19689:19689	3087814	5	True				
ANR	3088741	Statement	epref	589:6:19697:19701	3087814	6	True				
ANR	3088742	Statement	)	589:11:19702:19702	3087814	7	True				
ANR	3088743	ExpressionStatement		589:12:19703:19703	3087814	8	True				
ANR	3088744	ExpressionStatement	free ( list )	590:4:19709:19719	3087814	9	True				
ANR	3088745	CallExpression	free ( list )		3087814	0					
ANR	3088746	Callee	free		3087814	0					
ANR	3088747	Identifier	free		3087814	0					
ANR	3088748	ArgumentList	list		3087814	1					
ANR	3088749	Argument	list		3087814	0					
ANR	3088750	Identifier	list		3087814	0					
ANR	3088751	ExpressionStatement	return_error ( gs_error_VMerror )	591:4:19725:19755	3087814	10	True				
ANR	3088752	CallExpression	return_error ( gs_error_VMerror )		3087814	0					
ANR	3088753	Callee	return_error		3087814	0					
ANR	3088754	Identifier	return_error		3087814	0					
ANR	3088755	ArgumentList	gs_error_VMerror		3087814	1					
ANR	3088756	Argument	gs_error_VMerror		3087814	0					
ANR	3088757	Identifier	gs_error_VMerror		3087814	0					
ANR	3088758	ExpressionStatement	"memcpy ( eprn -> media_overrides , list , read * sizeof ( eprn_PageDescription ) )"	595:2:19813:19883	3087814	13	True				
ANR	3088759	CallExpression	"memcpy ( eprn -> media_overrides , list , read * sizeof ( eprn_PageDescription ) )"		3087814	0					
ANR	3088760	Callee	memcpy		3087814	0					
ANR	3088761	Identifier	memcpy		3087814	0					
ANR	3088762	ArgumentList	eprn -> media_overrides		3087814	1					
ANR	3088763	Argument	eprn -> media_overrides		3087814	0					
ANR	3088764	PtrMemberAccess	eprn -> media_overrides		3087814	0					
ANR	3088765	Identifier	eprn		3087814	0					
ANR	3088766	Identifier	media_overrides		3087814	1					
ANR	3088767	Argument	list		3087814	1					
ANR	3088768	Identifier	list		3087814	0					
ANR	3088769	Argument	read * sizeof ( eprn_PageDescription )		3087814	2					
ANR	3088770	MultiplicativeExpression	read * sizeof ( eprn_PageDescription )		3087814	0		*			
ANR	3088771	Identifier	read		3087814	0					
ANR	3088772	SizeofExpression	sizeof ( eprn_PageDescription )		3087814	1					
ANR	3088773	Sizeof	sizeof		3087814	0					
ANR	3088774	SizeofOperand	eprn_PageDescription		3087814	1					
ANR	3088775	ExpressionStatement	eprn -> media_overrides [ read ] . code = ms_none	596:2:19887:19929	3087814	14	True				
ANR	3088776	AssignmentExpression	eprn -> media_overrides [ read ] . code = ms_none		3087814	0		=			
ANR	3088777	MemberAccess	eprn -> media_overrides [ read ] . code		3087814	0					
ANR	3088778	ArrayIndexing	eprn -> media_overrides [ read ]		3087814	0					
ANR	3088779	PtrMemberAccess	eprn -> media_overrides		3087814	0					
ANR	3088780	Identifier	eprn		3087814	0					
ANR	3088781	Identifier	media_overrides		3087814	1					
ANR	3088782	Identifier	read		3087814	1					
ANR	3088783	Identifier	code		3087814	1					
ANR	3088784	Identifier	ms_none		3087814	1					
ANR	3088785	ExpressionStatement	free ( list )	599:2:19950:19960	3087814	15	True				
ANR	3088786	CallExpression	free ( list )		3087814	0					
ANR	3088787	Callee	free		3087814	0					
ANR	3088788	Identifier	free		3087814	0					
ANR	3088789	ArgumentList	list		3087814	1					
ANR	3088790	Argument	list		3087814	0					
ANR	3088791	Identifier	list		3087814	0					
ANR	3088792	ReturnStatement	return 0 ;	601:2:19965:19973	3087814	16	True				
ANR	3088793	PrimaryExpression	0		3087814	0					
ANR	3088794	ReturnType	static int		3087814	1					
ANR	3088795	Identifier	eprn_read_media_data		3087814	2					
ANR	3088796	ParameterList	"eprn_Eprn * eprn , gs_memory_t * memory"		3087814	3					
ANR	3088797	Parameter	eprn_Eprn * eprn	393:32:12677:12691	3087814	0	True				
ANR	3088798	ParameterType	eprn_Eprn *		3087814	0					
ANR	3088799	Identifier	eprn		3087814	1					
ANR	3088800	Parameter	gs_memory_t * memory	393:49:12694:12712	3087814	1	True				
ANR	3088801	ParameterType	gs_memory_t *		3087814	0					
ANR	3088802	Identifier	memory		3087814	1					
ANR	3088803	CFGEntryNode	ENTRY		3087814		True				
ANR	3088804	CFGExitNode	EXIT		3087814		True				
ANR	3088805	Symbol	chars_read		3087814						
ANR	3088806	Symbol	ms_none		3087814						
ANR	3088807	Symbol	gs_error_rangecheck		3087814						
ANR	3088808	Symbol	& current -> top		3087814						
ANR	3088809	Symbol	current -> code		3087814						
ANR	3088810	Symbol	eprn		3087814						
ANR	3088811	Symbol	* current		3087814						
ANR	3088812	Symbol	strchr		3087814						
ANR	3088813	Symbol	realloc		3087814						
ANR	3088814	Symbol	eprn -> cap -> custom		3087814						
ANR	3088815	Symbol	fgets		3087814						
ANR	3088816	Symbol	eprn -> media_overrides		3087814						
ANR	3088817	Symbol	& current -> bottom		3087814						
ANR	3088818	Symbol	conversion_factor		3087814						
ANR	3088819	Symbol	* eprn -> media_overrides		3087814						
ANR	3088820	Symbol	gp_fopen		3087814						
ANR	3088821	Symbol	buffer		3087814						
ANR	3088822	Symbol	* chars_read		3087814						
ANR	3088823	Symbol	current -> bottom		3087814						
ANR	3088824	Symbol	eprn -> media_file		3087814						
ANR	3088825	Symbol	eprn -> flag_desc		3087814						
ANR	3088826	Symbol	read		3087814						
ANR	3088827	Symbol	NULL		3087814						
ANR	3088828	Symbol	& current -> right		3087814						
ANR	3088829	Symbol	isspace		3087814						
ANR	3088830	Symbol	ms_CustomPageSize		3087814						
ANR	3088831	Symbol	list		3087814						
ANR	3088832	Symbol	unit_name		3087814						
ANR	3088833	Symbol	ferror		3087814						
ANR	3088834	Symbol	gs_malloc		3087814						
ANR	3088835	Symbol	sscanf		3087814						
ANR	3088836	Symbol	* ( s - 1 )		3087814						
ANR	3088837	Symbol	current -> left		3087814						
ANR	3088838	Symbol	gs_error_invalidfileaccess		3087814						
ANR	3088839	Symbol	& current -> left		3087814						
ANR	3088840	Symbol	memory		3087814						
ANR	3088841	Symbol	* eprn		3087814						
ANR	3088842	Symbol	code		3087814						
ANR	3088843	Symbol	* * eprn		3087814						
ANR	3088844	Symbol	line		3087814						
ANR	3088845	Symbol	ms_find_code_from_name		3087814						
ANR	3088846	Symbol	new_list		3087814						
ANR	3088847	Symbol	epref		3087814						
ANR	3088848	Symbol	MS_ROTATED_FLAG		3087814						
ANR	3088849	Symbol	BP_PER_IN		3087814						
ANR	3088850	Symbol	current		3087814						
ANR	3088851	Symbol	current -> right		3087814						
ANR	3088852	Symbol	* eprn -> cap		3087814						
ANR	3088853	Symbol	gs_error_limitcheck		3087814						
ANR	3088854	Symbol	next_word		3087814						
ANR	3088855	Symbol	eprn -> CUPS_messages		3087814						
ANR	3088856	Symbol	BP_PER_MM		3087814						
ANR	3088857	Symbol	wpref		3087814						
ANR	3088858	Symbol	CUPS_ERRPREF		3087814						
ANR	3088859	Symbol	& chars_read		3087814						
ANR	3088860	Symbol	EOF		3087814						
ANR	3088861	Symbol	eprn -> cap		3087814						
ANR	3088862	Symbol	BUFFER_SIZE		3087814						
ANR	3088863	Symbol	is_word		3087814						
ANR	3088864	Symbol	current -> top		3087814						
ANR	3088865	Symbol	f		3087814						
ANR	3088866	Symbol	* ( t - 1 )		3087814						
ANR	3088867	Symbol	* read		3087814						
ANR	3088868	Symbol	gs_error_VMerror		3087814						
ANR	3088869	Symbol	s		3087814						
ANR	3088870	Symbol	t		3087814						
ANR	3088871	Symbol	eprn -> media_overrides [ read ] . code		3087814						
ANR	3088872	Symbol	* s		3087814						
ANR	3088873	Symbol	ms_without_flags		3087814						
ANR	3088874	Symbol	fgetc		3087814						
ANR	3088875	Symbol	* t		3087814						
ANR	3088876	Symbol	CUPS_WARNPREF		3087814						
ANR	3088877	Function	eprn_set_media_data	604:1:19979:22519							
ANR	3088878	FunctionDef	"eprn_set_media_data (eprn_Device * dev , const char * media_file , size_t length)"		3088877	0					
ANR	3088879	CompoundStatement		627:0:20875:22519	3088877	0					
ANR	3088880	IdentifierDeclStatement	eprn_Eprn * eprn = & dev -> eprn ;	628:2:20879:20907	3088877	0	True				
ANR	3088881	IdentifierDecl	* eprn = & dev -> eprn		3088877	0					
ANR	3088882	IdentifierDeclType	eprn_Eprn *		3088877	0					
ANR	3088883	Identifier	eprn		3088877	1					
ANR	3088884	AssignmentExpression	* eprn = & dev -> eprn		3088877	2		=			
ANR	3088885	Identifier	eprn		3088877	0					
ANR	3088886	UnaryOperationExpression	& dev -> eprn		3088877	1					
ANR	3088887	UnaryOperator	&		3088877	0					
ANR	3088888	PtrMemberAccess	dev -> eprn		3088877	1					
ANR	3088889	Identifier	dev		3088877	0					
ANR	3088890	Identifier	eprn		3088877	1					
ANR	3088891	IdentifierDeclStatement	"const char * epref = eprn -> CUPS_messages ? CUPS_ERRPREF : """" ;"	629:2:20911:20968	3088877	1	True				
ANR	3088892	IdentifierDecl	"* epref = eprn -> CUPS_messages ? CUPS_ERRPREF : """""		3088877	0					
ANR	3088893	IdentifierDeclType	const char *		3088877	0					
ANR	3088894	Identifier	epref		3088877	1					
ANR	3088895	AssignmentExpression	"* epref = eprn -> CUPS_messages ? CUPS_ERRPREF : """""		3088877	2		=			
ANR	3088896	Identifier	epref		3088877	0					
ANR	3088897	ConditionalExpression	"eprn -> CUPS_messages ? CUPS_ERRPREF : """""		3088877	1					
ANR	3088898	Condition	eprn -> CUPS_messages		3088877	0					
ANR	3088899	PtrMemberAccess	eprn -> CUPS_messages		3088877	0					
ANR	3088900	Identifier	eprn		3088877	0					
ANR	3088901	Identifier	CUPS_messages		3088877	1					
ANR	3088902	Identifier	CUPS_ERRPREF		3088877	1					
ANR	3088903	PrimaryExpression	""""""		3088877	2					
ANR	3088904	IdentifierDeclStatement	int rc = 0 ;	630:2:20972:20982	3088877	2	True				
ANR	3088905	IdentifierDecl	rc = 0		3088877	0					
ANR	3088906	IdentifierDeclType	int		3088877	0					
ANR	3088907	Identifier	rc		3088877	1					
ANR	3088908	AssignmentExpression	rc = 0		3088877	2		=			
ANR	3088909	Identifier	rc		3088877	0					
ANR	3088910	PrimaryExpression	0		3088877	1					
ANR	3088911	ExpressionStatement	eprn -> code = ms_none	633:2:21043:21063	3088877	3	True				
ANR	3088912	AssignmentExpression	eprn -> code = ms_none		3088877	0		=			
ANR	3088913	PtrMemberAccess	eprn -> code		3088877	0					
ANR	3088914	Identifier	eprn		3088877	0					
ANR	3088915	Identifier	code		3088877	1					
ANR	3088916	Identifier	ms_none		3088877	1					
ANR	3088917	IfStatement	if ( eprn -> media_file != NULL )		3088877	4					
ANR	3088918	Condition	eprn -> media_file != NULL	636:6:21097:21120	3088877	0	True				
ANR	3088919	EqualityExpression	eprn -> media_file != NULL		3088877	0		!=			
ANR	3088920	PtrMemberAccess	eprn -> media_file		3088877	0					
ANR	3088921	Identifier	eprn		3088877	0					
ANR	3088922	Identifier	media_file		3088877	1					
ANR	3088923	Identifier	NULL		3088877	1					
ANR	3088924	CompoundStatement		10:32:247:247	3088877	1					
ANR	3088925	ExpressionStatement	"gs_free ( dev -> memory -> non_gc_memory , eprn -> media_file , strlen ( eprn -> media_file ) + 1 , sizeof ( char ) , ""eprn_set_media_data"" )"	637:4:21129:21255	3088877	0	True				
ANR	3088926	CallExpression	"gs_free ( dev -> memory -> non_gc_memory , eprn -> media_file , strlen ( eprn -> media_file ) + 1 , sizeof ( char ) , ""eprn_set_media_data"" )"		3088877	0					
ANR	3088927	Callee	gs_free		3088877	0					
ANR	3088928	Identifier	gs_free		3088877	0					
ANR	3088929	ArgumentList	dev -> memory -> non_gc_memory		3088877	1					
ANR	3088930	Argument	dev -> memory -> non_gc_memory		3088877	0					
ANR	3088931	PtrMemberAccess	dev -> memory -> non_gc_memory		3088877	0					
ANR	3088932	PtrMemberAccess	dev -> memory		3088877	0					
ANR	3088933	Identifier	dev		3088877	0					
ANR	3088934	Identifier	memory		3088877	1					
ANR	3088935	Identifier	non_gc_memory		3088877	1					
ANR	3088936	Argument	eprn -> media_file		3088877	1					
ANR	3088937	PtrMemberAccess	eprn -> media_file		3088877	0					
ANR	3088938	Identifier	eprn		3088877	0					
ANR	3088939	Identifier	media_file		3088877	1					
ANR	3088940	Argument	strlen ( eprn -> media_file ) + 1		3088877	2					
ANR	3088941	AdditiveExpression	strlen ( eprn -> media_file ) + 1		3088877	0		+			
ANR	3088942	CallExpression	strlen ( eprn -> media_file )		3088877	0					
ANR	3088943	Callee	strlen		3088877	0					
ANR	3088944	Identifier	strlen		3088877	0					
ANR	3088945	ArgumentList	eprn -> media_file		3088877	1					
ANR	3088946	Argument	eprn -> media_file		3088877	0					
ANR	3088947	PtrMemberAccess	eprn -> media_file		3088877	0					
ANR	3088948	Identifier	eprn		3088877	0					
ANR	3088949	Identifier	media_file		3088877	1					
ANR	3088950	PrimaryExpression	1		3088877	1					
ANR	3088951	Argument	sizeof ( char )		3088877	3					
ANR	3088952	SizeofExpression	sizeof ( char )		3088877	0					
ANR	3088953	Sizeof	sizeof		3088877	0					
ANR	3088954	SizeofOperand	char		3088877	1					
ANR	3088955	Argument	"""eprn_set_media_data"""		3088877	4					
ANR	3088956	PrimaryExpression	"""eprn_set_media_data"""		3088877	0					
ANR	3088957	ExpressionStatement	eprn -> media_file = NULL	639:4:21261:21284	3088877	1	True				
ANR	3088958	AssignmentExpression	eprn -> media_file = NULL		3088877	0		=			
ANR	3088959	PtrMemberAccess	eprn -> media_file		3088877	0					
ANR	3088960	Identifier	eprn		3088877	0					
ANR	3088961	Identifier	media_file		3088877	1					
ANR	3088962	Identifier	NULL		3088877	1					
ANR	3088963	IfStatement	if ( eprn -> media_overrides != NULL )		3088877	5					
ANR	3088964	Condition	eprn -> media_overrides != NULL	641:6:21296:21324	3088877	0	True				
ANR	3088965	EqualityExpression	eprn -> media_overrides != NULL		3088877	0		!=			
ANR	3088966	PtrMemberAccess	eprn -> media_overrides		3088877	0					
ANR	3088967	Identifier	eprn		3088877	0					
ANR	3088968	Identifier	media_overrides		3088877	1					
ANR	3088969	Identifier	NULL		3088877	1					
ANR	3088970	CompoundStatement		16:4:457:466	3088877	1					
ANR	3088971	IdentifierDeclStatement	int n = 0 ;	642:4:21333:21342	3088877	0	True				
ANR	3088972	IdentifierDecl	n = 0		3088877	0					
ANR	3088973	IdentifierDeclType	int		3088877	0					
ANR	3088974	Identifier	n		3088877	1					
ANR	3088975	AssignmentExpression	n = 0		3088877	2		=			
ANR	3088976	Identifier	n		3088877	0					
ANR	3088977	PrimaryExpression	0		3088877	1					
ANR	3088978	WhileStatement	while ( eprn -> media_overrides [ n ] . code != ms_none )		3088877	1					
ANR	3088979	Condition	eprn -> media_overrides [ n ] . code != ms_none	643:11:21355:21394	3088877	0	True				
ANR	3088980	EqualityExpression	eprn -> media_overrides [ n ] . code != ms_none		3088877	0		!=			
ANR	3088981	MemberAccess	eprn -> media_overrides [ n ] . code		3088877	0					
ANR	3088982	ArrayIndexing	eprn -> media_overrides [ n ]		3088877	0					
ANR	3088983	PtrMemberAccess	eprn -> media_overrides		3088877	0					
ANR	3088984	Identifier	eprn		3088877	0					
ANR	3088985	Identifier	media_overrides		3088877	1					
ANR	3088986	Identifier	n		3088877	1					
ANR	3088987	Identifier	code		3088877	1					
ANR	3088988	Identifier	ms_none		3088877	1					
ANR	3088989	ExpressionStatement	n ++	643:53:21397:21400	3088877	1	True				
ANR	3088990	PostIncDecOperationExpression	n ++		3088877	0					
ANR	3088991	Identifier	n		3088877	0					
ANR	3088992	IncDec	++		3088877	1					
ANR	3088993	ExpressionStatement	"gs_free ( dev -> memory -> non_gc_memory , eprn -> media_overrides , n + 1 , sizeof ( eprn_PageDescription ) , ""eprn_set_media_data"" )"	644:4:21406:21528	3088877	2	True				
ANR	3088994	CallExpression	"gs_free ( dev -> memory -> non_gc_memory , eprn -> media_overrides , n + 1 , sizeof ( eprn_PageDescription ) , ""eprn_set_media_data"" )"		3088877	0					
ANR	3088995	Callee	gs_free		3088877	0					
ANR	3088996	Identifier	gs_free		3088877	0					
ANR	3088997	ArgumentList	dev -> memory -> non_gc_memory		3088877	1					
ANR	3088998	Argument	dev -> memory -> non_gc_memory		3088877	0					
ANR	3088999	PtrMemberAccess	dev -> memory -> non_gc_memory		3088877	0					
ANR	3089000	PtrMemberAccess	dev -> memory		3088877	0					
ANR	3089001	Identifier	dev		3088877	0					
ANR	3089002	Identifier	memory		3088877	1					
ANR	3089003	Identifier	non_gc_memory		3088877	1					
ANR	3089004	Argument	eprn -> media_overrides		3088877	1					
ANR	3089005	PtrMemberAccess	eprn -> media_overrides		3088877	0					
ANR	3089006	Identifier	eprn		3088877	0					
ANR	3089007	Identifier	media_overrides		3088877	1					
ANR	3089008	Argument	n + 1		3088877	2					
ANR	3089009	AdditiveExpression	n + 1		3088877	0		+			
ANR	3089010	Identifier	n		3088877	0					
ANR	3089011	PrimaryExpression	1		3088877	1					
ANR	3089012	Argument	sizeof ( eprn_PageDescription )		3088877	3					
ANR	3089013	SizeofExpression	sizeof ( eprn_PageDescription )		3088877	0					
ANR	3089014	Sizeof	sizeof		3088877	0					
ANR	3089015	SizeofOperand	eprn_PageDescription		3088877	1					
ANR	3089016	Argument	"""eprn_set_media_data"""		3088877	4					
ANR	3089017	PrimaryExpression	"""eprn_set_media_data"""		3088877	0					
ANR	3089018	ExpressionStatement	eprn -> media_overrides = NULL	646:4:21534:21562	3088877	3	True				
ANR	3089019	AssignmentExpression	eprn -> media_overrides = NULL		3088877	0		=			
ANR	3089020	PtrMemberAccess	eprn -> media_overrides		3088877	0					
ANR	3089021	Identifier	eprn		3088877	0					
ANR	3089022	Identifier	media_overrides		3088877	1					
ANR	3089023	Identifier	NULL		3088877	1					
ANR	3089024	IfStatement	if ( media_file != NULL && length == 0 )		3088877	6					
ANR	3089025	Condition	media_file != NULL && length == 0	650:6:21621:21653	3088877	0	True				
ANR	3089026	AndExpression	media_file != NULL && length == 0		3088877	0		&&			
ANR	3089027	EqualityExpression	media_file != NULL		3088877	0		!=			
ANR	3089028	Identifier	media_file		3088877	0					
ANR	3089029	Identifier	NULL		3088877	1					
ANR	3089030	EqualityExpression	length == 0		3088877	1		==			
ANR	3089031	Identifier	length		3088877	0					
ANR	3089032	PrimaryExpression	0		3088877	1					
ANR	3089033	ExpressionStatement	length = strlen ( media_file )	650:41:21656:21683	3088877	1	True				
ANR	3089034	AssignmentExpression	length = strlen ( media_file )		3088877	0		=			
ANR	3089035	Identifier	length		3088877	0					
ANR	3089036	CallExpression	strlen ( media_file )		3088877	1					
ANR	3089037	Callee	strlen		3088877	0					
ANR	3089038	Identifier	strlen		3088877	0					
ANR	3089039	ArgumentList	media_file		3088877	1					
ANR	3089040	Argument	media_file		3088877	0					
ANR	3089041	Identifier	media_file		3088877	0					
ANR	3089042	IfStatement	if ( media_file != NULL && length > 0 )		3088877	7					
ANR	3089043	Condition	media_file != NULL && length > 0	654:6:21780:21811	3088877	0	True				
ANR	3089044	AndExpression	media_file != NULL && length > 0		3088877	0		&&			
ANR	3089045	EqualityExpression	media_file != NULL		3088877	0		!=			
ANR	3089046	Identifier	media_file		3088877	0					
ANR	3089047	Identifier	NULL		3088877	1					
ANR	3089048	RelationalExpression	length > 0		3088877	1		>			
ANR	3089049	Identifier	length		3088877	0					
ANR	3089050	PrimaryExpression	0		3088877	1					
ANR	3089051	CompoundStatement		28:40:938:938	3088877	1					
ANR	3089052	ExpressionStatement	"eprn -> media_file = ( char * ) gs_malloc ( dev -> memory -> non_gc_memory , length + 1 , sizeof ( char ) , ""eprn_set_media_data"" )"	655:4:21820:21939	3088877	0	True				
ANR	3089053	AssignmentExpression	"eprn -> media_file = ( char * ) gs_malloc ( dev -> memory -> non_gc_memory , length + 1 , sizeof ( char ) , ""eprn_set_media_data"" )"		3088877	0		=			
ANR	3089054	PtrMemberAccess	eprn -> media_file		3088877	0					
ANR	3089055	Identifier	eprn		3088877	0					
ANR	3089056	Identifier	media_file		3088877	1					
ANR	3089057	CastExpression	"( char * ) gs_malloc ( dev -> memory -> non_gc_memory , length + 1 , sizeof ( char ) , ""eprn_set_media_data"" )"		3088877	1					
ANR	3089058	CastTarget	char *		3088877	0					
ANR	3089059	CallExpression	"gs_malloc ( dev -> memory -> non_gc_memory , length + 1 , sizeof ( char ) , ""eprn_set_media_data"" )"		3088877	1					
ANR	3089060	Callee	gs_malloc		3088877	0					
ANR	3089061	Identifier	gs_malloc		3088877	0					
ANR	3089062	ArgumentList	dev -> memory -> non_gc_memory		3088877	1					
ANR	3089063	Argument	dev -> memory -> non_gc_memory		3088877	0					
ANR	3089064	PtrMemberAccess	dev -> memory -> non_gc_memory		3088877	0					
ANR	3089065	PtrMemberAccess	dev -> memory		3088877	0					
ANR	3089066	Identifier	dev		3088877	0					
ANR	3089067	Identifier	memory		3088877	1					
ANR	3089068	Identifier	non_gc_memory		3088877	1					
ANR	3089069	Argument	length + 1		3088877	1					
ANR	3089070	AdditiveExpression	length + 1		3088877	0		+			
ANR	3089071	Identifier	length		3088877	0					
ANR	3089072	PrimaryExpression	1		3088877	1					
ANR	3089073	Argument	sizeof ( char )		3088877	2					
ANR	3089074	SizeofExpression	sizeof ( char )		3088877	0					
ANR	3089075	Sizeof	sizeof		3088877	0					
ANR	3089076	SizeofOperand	char		3088877	1					
ANR	3089077	Argument	"""eprn_set_media_data"""		3088877	3					
ANR	3089078	PrimaryExpression	"""eprn_set_media_data"""		3088877	0					
ANR	3089079	IfStatement	if ( eprn -> media_file == NULL )		3088877	1					
ANR	3089080	Condition	eprn -> media_file == NULL	657:8:21949:21972	3088877	0	True				
ANR	3089081	EqualityExpression	eprn -> media_file == NULL		3088877	0		==			
ANR	3089082	PtrMemberAccess	eprn -> media_file		3088877	0					
ANR	3089083	Identifier	eprn		3088877	0					
ANR	3089084	Identifier	media_file		3088877	1					
ANR	3089085	Identifier	NULL		3088877	1					
ANR	3089086	CompoundStatement		31:34:1099:1099	3088877	1					
ANR	3089087	Statement	eprintf1	658:6:21983:21990	3088877	0	True				
ANR	3089088	Statement	(	658:14:21991:21991	3088877	1	True				
ANR	3089089	Statement	"""%s"""	658:15:21992:21995	3088877	2	True				
ANR	3089090	Statement	ERRPREF	658:20:21997:22003	3088877	3	True				
ANR	3089091	Statement	"""Memory allocation failure from gs_malloc() in """	659:8:22013:22060	3088877	4	True				
ANR	3089092	Statement	"""eprn_set_media_data().\\n"""	660:8:22070:22095	3088877	5	True				
ANR	3089093	Statement	","	660:34:22096:22096	3088877	6	True				
ANR	3089094	Statement	epref	661:8:22106:22110	3088877	7	True				
ANR	3089095	Statement	)	661:13:22111:22111	3088877	8	True				
ANR	3089096	ExpressionStatement		661:14:22112:22112	3088877	9	True				
ANR	3089097	ExpressionStatement	rc = gs_error_VMerror	662:6:22120:22141	3088877	10	True				
ANR	3089098	AssignmentExpression	rc = gs_error_VMerror		3088877	0		=			
ANR	3089099	Identifier	rc		3088877	0					
ANR	3089100	Identifier	gs_error_VMerror		3088877	1					
ANR	3089101	ElseStatement	else		3088877	0					
ANR	3089102	CompoundStatement		38:9:1282:1282	3088877	0					
ANR	3089103	ExpressionStatement	"strncpy ( eprn -> media_file , media_file , length )"	665:6:22166:22211	3088877	0	True				
ANR	3089104	CallExpression	"strncpy ( eprn -> media_file , media_file , length )"		3088877	0					
ANR	3089105	Callee	strncpy		3088877	0					
ANR	3089106	Identifier	strncpy		3088877	0					
ANR	3089107	ArgumentList	eprn -> media_file		3088877	1					
ANR	3089108	Argument	eprn -> media_file		3088877	0					
ANR	3089109	PtrMemberAccess	eprn -> media_file		3088877	0					
ANR	3089110	Identifier	eprn		3088877	0					
ANR	3089111	Identifier	media_file		3088877	1					
ANR	3089112	Argument	media_file		3088877	1					
ANR	3089113	Identifier	media_file		3088877	0					
ANR	3089114	Argument	length		3088877	2					
ANR	3089115	Identifier	length		3088877	0					
ANR	3089116	ExpressionStatement	eprn -> media_file [ length ] = '\\0'	666:6:22219:22250	3088877	1	True				
ANR	3089117	AssignmentExpression	eprn -> media_file [ length ] = '\\0'		3088877	0		=			
ANR	3089118	ArrayIndexing	eprn -> media_file [ length ]		3088877	0					
ANR	3089119	PtrMemberAccess	eprn -> media_file		3088877	0					
ANR	3089120	Identifier	eprn		3088877	0					
ANR	3089121	Identifier	media_file		3088877	1					
ANR	3089122	Identifier	length		3088877	1					
ANR	3089123	PrimaryExpression	'\\0'		3088877	1					
ANR	3089124	IfStatement	"if ( ( rc = eprn_read_media_data ( eprn , dev -> memory -> non_gc_memory ) ) != 0 )"		3088877	2					
ANR	3089125	Condition	"( rc = eprn_read_media_data ( eprn , dev -> memory -> non_gc_memory ) ) != 0"	667:10:22262:22327	3088877	0	True				
ANR	3089126	EqualityExpression	"( rc = eprn_read_media_data ( eprn , dev -> memory -> non_gc_memory ) ) != 0"		3088877	0		!=			
ANR	3089127	AssignmentExpression	"rc = eprn_read_media_data ( eprn , dev -> memory -> non_gc_memory )"		3088877	0		=			
ANR	3089128	Identifier	rc		3088877	0					
ANR	3089129	CallExpression	"eprn_read_media_data ( eprn , dev -> memory -> non_gc_memory )"		3088877	1					
ANR	3089130	Callee	eprn_read_media_data		3088877	0					
ANR	3089131	Identifier	eprn_read_media_data		3088877	0					
ANR	3089132	ArgumentList	eprn		3088877	1					
ANR	3089133	Argument	eprn		3088877	0					
ANR	3089134	Identifier	eprn		3088877	0					
ANR	3089135	Argument	dev -> memory -> non_gc_memory		3088877	1					
ANR	3089136	PtrMemberAccess	dev -> memory -> non_gc_memory		3088877	0					
ANR	3089137	PtrMemberAccess	dev -> memory		3088877	0					
ANR	3089138	Identifier	dev		3088877	0					
ANR	3089139	Identifier	memory		3088877	1					
ANR	3089140	Identifier	non_gc_memory		3088877	1					
ANR	3089141	PrimaryExpression	0		3088877	1					
ANR	3089142	CompoundStatement		41:78:1454:1454	3088877	1					
ANR	3089143	ExpressionStatement	"gs_free ( dev -> memory -> non_gc_memory , eprn -> media_file , length + 1 , sizeof ( char ) , ""eprn_set_media_data"" )"	668:8:22340:22452	3088877	0	True				
ANR	3089144	CallExpression	"gs_free ( dev -> memory -> non_gc_memory , eprn -> media_file , length + 1 , sizeof ( char ) , ""eprn_set_media_data"" )"		3088877	0					
ANR	3089145	Callee	gs_free		3088877	0					
ANR	3089146	Identifier	gs_free		3088877	0					
ANR	3089147	ArgumentList	dev -> memory -> non_gc_memory		3088877	1					
ANR	3089148	Argument	dev -> memory -> non_gc_memory		3088877	0					
ANR	3089149	PtrMemberAccess	dev -> memory -> non_gc_memory		3088877	0					
ANR	3089150	PtrMemberAccess	dev -> memory		3088877	0					
ANR	3089151	Identifier	dev		3088877	0					
ANR	3089152	Identifier	memory		3088877	1					
ANR	3089153	Identifier	non_gc_memory		3088877	1					
ANR	3089154	Argument	eprn -> media_file		3088877	1					
ANR	3089155	PtrMemberAccess	eprn -> media_file		3088877	0					
ANR	3089156	Identifier	eprn		3088877	0					
ANR	3089157	Identifier	media_file		3088877	1					
ANR	3089158	Argument	length + 1		3088877	2					
ANR	3089159	AdditiveExpression	length + 1		3088877	0		+			
ANR	3089160	Identifier	length		3088877	0					
ANR	3089161	PrimaryExpression	1		3088877	1					
ANR	3089162	Argument	sizeof ( char )		3088877	3					
ANR	3089163	SizeofExpression	sizeof ( char )		3088877	0					
ANR	3089164	Sizeof	sizeof		3088877	0					
ANR	3089165	SizeofOperand	char		3088877	1					
ANR	3089166	Argument	"""eprn_set_media_data"""		3088877	4					
ANR	3089167	PrimaryExpression	"""eprn_set_media_data"""		3088877	0					
ANR	3089168	ExpressionStatement	eprn -> media_file = NULL	670:8:22462:22485	3088877	1	True				
ANR	3089169	AssignmentExpression	eprn -> media_file = NULL		3088877	0		=			
ANR	3089170	PtrMemberAccess	eprn -> media_file		3088877	0					
ANR	3089171	Identifier	eprn		3088877	0					
ANR	3089172	Identifier	media_file		3088877	1					
ANR	3089173	Identifier	NULL		3088877	1					
ANR	3089174	ReturnStatement	return rc ;	675:2:22508:22517	3088877	8	True				
ANR	3089175	Identifier	rc		3088877	0					
ANR	3089176	ReturnType	undef BUFFER_SIZE undef cleanup int		3088877	1					
ANR	3089177	Identifier	eprn_set_media_data		3088877	2					
ANR	3089178	ParameterList	"eprn_Device * dev , const char * media_file , size_t length"		3088877	3					
ANR	3089179	Parameter	eprn_Device * dev	626:24:20818:20833	3088877	0	True				
ANR	3089180	ParameterType	eprn_Device *		3088877	0					
ANR	3089181	Identifier	dev		3088877	1					
ANR	3089182	Parameter	const char * media_file	626:42:20836:20857	3088877	1	True				
ANR	3089183	ParameterType	const char *		3088877	0					
ANR	3089184	Identifier	media_file		3088877	1					
ANR	3089185	Parameter	size_t length	626:66:20860:20872	3088877	2	True				
ANR	3089186	ParameterType	size_t		3088877	0					
ANR	3089187	Identifier	length		3088877	1					
ANR	3089188	CFGEntryNode	ENTRY		3088877		True				
ANR	3089189	CFGExitNode	EXIT		3088877		True				
ANR	3089190	Symbol	* dev		3088877						
ANR	3089191	Symbol	* eprn		3088877						
ANR	3089192	Symbol	ms_none		3088877						
ANR	3089193	Symbol	* * eprn		3088877						
ANR	3089194	Symbol	eprn		3088877						
ANR	3089195	Symbol	epref		3088877						
ANR	3089196	Symbol	eprn -> media_overrides		3088877						
ANR	3089197	Symbol	strlen		3088877						
ANR	3089198	Symbol	eprn -> media_overrides [ n ] . code		3088877						
ANR	3089199	Symbol	dev		3088877						
ANR	3089200	Symbol	* eprn -> media_overrides		3088877						
ANR	3089201	Symbol	eprn -> CUPS_messages		3088877						
ANR	3089202	Symbol	* length		3088877						
ANR	3089203	Symbol	CUPS_ERRPREF		3088877						
ANR	3089204	Symbol	eprn -> media_file		3088877						
ANR	3089205	Symbol	eprn -> code		3088877						
ANR	3089206	Symbol	NULL		3088877						
ANR	3089207	Symbol	eprn_read_media_data		3088877						
ANR	3089208	Symbol	length		3088877						
ANR	3089209	Symbol	* * dev		3088877						
ANR	3089210	Symbol	dev -> memory -> non_gc_memory		3088877						
ANR	3089211	Symbol	media_file		3088877						
ANR	3089212	Symbol	& dev -> eprn		3088877						
ANR	3089213	Symbol	n		3088877						
ANR	3089214	Symbol	* eprn -> media_file		3088877						
ANR	3089215	Symbol	rc		3088877						
ANR	3089216	Symbol	gs_error_VMerror		3088877						
ANR	3089217	Symbol	dev -> memory		3088877						
ANR	3089218	Symbol	gs_malloc		3088877						
ANR	3089219	Symbol	* n		3088877						
ANR	3089220	Symbol	* dev -> memory		3088877						
ANR	3089221	Function	eprn_bits_for_levels	687:0:22846:23006							
ANR	3089222	FunctionDef	eprn_bits_for_levels (unsigned int levels)		3089221	0					
ANR	3089223	CompoundStatement		688:0:22901:23006	3089221	0					
ANR	3089224	IdentifierDeclStatement	unsigned int bits = 0 ;	689:2:22905:22926	3089221	0	True				
ANR	3089225	IdentifierDecl	bits = 0		3089221	0					
ANR	3089226	IdentifierDeclType	unsigned int		3089221	0					
ANR	3089227	Identifier	bits		3089221	1					
ANR	3089228	AssignmentExpression	bits = 0		3089221	2		=			
ANR	3089229	Identifier	bits		3089221	0					
ANR	3089230	PrimaryExpression	0		3089221	1					
ANR	3089231	IdentifierDeclStatement	unsigned long n ;	690:2:22930:22945	3089221	1	True				
ANR	3089232	IdentifierDecl	n		3089221	0					
ANR	3089233	IdentifierDeclType	unsigned long		3089221	0					
ANR	3089234	Identifier	n		3089221	1					
ANR	3089235	ForStatement	for ( n = 1 ; n < levels ; n *= 2 )		3089221	2					
ANR	3089236	ForInit	n = 1 ;	692:7:22955:22960	3089221	0	True				
ANR	3089237	AssignmentExpression	n = 1		3089221	0		=			
ANR	3089238	Identifier	n		3089221	0					
ANR	3089239	PrimaryExpression	1		3089221	1					
ANR	3089240	Condition	n < levels	692:14:22962:22971	3089221	1	True				
ANR	3089241	RelationalExpression	n < levels		3089221	0		<			
ANR	3089242	Identifier	n		3089221	0					
ANR	3089243	Identifier	levels		3089221	1					
ANR	3089244	AssignmentExpression	n *= 2	692:26:22974:22979	3089221	2	True	*=			
ANR	3089245	Identifier	n		3089221	0					
ANR	3089246	PrimaryExpression	2		3089221	1					
ANR	3089247	ExpressionStatement	bits ++	692:34:22982:22988	3089221	3	True				
ANR	3089248	PostIncDecOperationExpression	bits ++		3089221	0					
ANR	3089249	Identifier	bits		3089221	0					
ANR	3089250	IncDec	++		3089221	1					
ANR	3089251	ReturnStatement	return bits ;	694:2:22993:23004	3089221	3	True				
ANR	3089252	Identifier	bits		3089221	0					
ANR	3089253	ReturnType	unsigned int		3089221	1					
ANR	3089254	Identifier	eprn_bits_for_levels		3089221	2					
ANR	3089255	ParameterList	unsigned int levels		3089221	3					
ANR	3089256	Parameter	unsigned int levels	687:34:22880:22898	3089221	0	True				
ANR	3089257	ParameterType	unsigned int		3089221	0					
ANR	3089258	Identifier	levels		3089221	1					
ANR	3089259	CFGEntryNode	ENTRY		3089221		True				
ANR	3089260	CFGExitNode	EXIT		3089221		True				
ANR	3089261	Symbol	bits		3089221						
ANR	3089262	Symbol	levels		3089221						
ANR	3089263	Symbol	n		3089221						
ANR	3089264	Function	res_supported	706:0:23332:23544							
ANR	3089265	FunctionDef	"res_supported (const eprn_Resolution * list , float hres , float vres)"		3089264	0					
ANR	3089266	CompoundStatement		707:0:23411:23544	3089264	0					
ANR	3089267	IfStatement	if ( list == NULL )		3089264	0					
ANR	3089268	Condition	list == NULL	708:6:23419:23430	3089264	0	True				
ANR	3089269	EqualityExpression	list == NULL		3089264	0		==			
ANR	3089270	Identifier	list		3089264	0					
ANR	3089271	Identifier	NULL		3089264	1					
ANR	3089272	ReturnStatement	return true ;	708:20:23433:23444	3089264	1	True				
ANR	3089273	Identifier	true		3089264	0					
ANR	3089274	WhileStatement	while ( list -> h > 0.0 && ( list -> h != hres || list -> v != vres ) )		3089264	1					
ANR	3089275	Condition	list -> h > 0.0 && ( list -> h != hres || list -> v != vres )	710:9:23456:23508	3089264	0	True				
ANR	3089276	AndExpression	list -> h > 0.0 && ( list -> h != hres || list -> v != vres )		3089264	0		&&			
ANR	3089277	RelationalExpression	list -> h > 0.0		3089264	0		>			
ANR	3089278	PtrMemberAccess	list -> h		3089264	0					
ANR	3089279	Identifier	list		3089264	0					
ANR	3089280	Identifier	h		3089264	1					
ANR	3089281	PrimaryExpression	0.0		3089264	1					
ANR	3089282	OrExpression	list -> h != hres || list -> v != vres		3089264	1		||			
ANR	3089283	EqualityExpression	list -> h != hres		3089264	0		!=			
ANR	3089284	PtrMemberAccess	list -> h		3089264	0					
ANR	3089285	Identifier	list		3089264	0					
ANR	3089286	Identifier	h		3089264	1					
ANR	3089287	Identifier	hres		3089264	1					
ANR	3089288	EqualityExpression	list -> v != vres		3089264	1		!=			
ANR	3089289	PtrMemberAccess	list -> v		3089264	0					
ANR	3089290	Identifier	list		3089264	0					
ANR	3089291	Identifier	v		3089264	1					
ANR	3089292	Identifier	vres		3089264	1					
ANR	3089293	ExpressionStatement	list ++	710:64:23511:23517	3089264	1	True				
ANR	3089294	PostIncDecOperationExpression	list ++		3089264	0					
ANR	3089295	Identifier	list		3089264	0					
ANR	3089296	IncDec	++		3089264	1					
ANR	3089297	ReturnStatement	return list -> h > 0.0 ;	712:2:23522:23542	3089264	2	True				
ANR	3089298	RelationalExpression	list -> h > 0.0		3089264	0		>			
ANR	3089299	PtrMemberAccess	list -> h		3089264	0					
ANR	3089300	Identifier	list		3089264	0					
ANR	3089301	Identifier	h		3089264	1					
ANR	3089302	PrimaryExpression	0.0		3089264	1					
ANR	3089303	ReturnType	static bool		3089264	1					
ANR	3089304	Identifier	res_supported		3089264	2					
ANR	3089305	ParameterList	"const eprn_Resolution * list , float hres , float vres"		3089264	3					
ANR	3089306	Parameter	const eprn_Resolution * list	706:26:23358:23384	3089264	0	True				
ANR	3089307	ParameterType	const eprn_Resolution *		3089264	0					
ANR	3089308	Identifier	list		3089264	1					
ANR	3089309	Parameter	float hres	706:55:23387:23396	3089264	1	True				
ANR	3089310	ParameterType	float		3089264	0					
ANR	3089311	Identifier	hres		3089264	1					
ANR	3089312	Parameter	float vres	706:67:23399:23408	3089264	2	True				
ANR	3089313	ParameterType	float		3089264	0					
ANR	3089314	Identifier	vres		3089264	1					
ANR	3089315	CFGEntryNode	ENTRY		3089264		True				
ANR	3089316	CFGExitNode	EXIT		3089264		True				
ANR	3089317	Symbol	NULL		3089264						
ANR	3089318	Symbol	* list		3089264						
ANR	3089319	Symbol	hres		3089264						
ANR	3089320	Symbol	true		3089264						
ANR	3089321	Symbol	list -> v		3089264						
ANR	3089322	Symbol	list -> h		3089264						
ANR	3089323	Symbol	list		3089264						
ANR	3089324	Symbol	vres		3089264						
ANR	3089325	Function	levels_supported	724:0:23830:24023							
ANR	3089326	FunctionDef	"levels_supported (const eprn_IntensityLevels * list , unsigned int levels)"		3089325	0					
ANR	3089327	CompoundStatement		726:0:23916:24023	3089325	0					
ANR	3089328	WhileStatement	while ( list -> from > 0 && ( levels < list -> from || list -> to < levels ) )		3089325	0					
ANR	3089329	Condition	list -> from > 0 && ( levels < list -> from || list -> to < levels )	727:9:23927:23986	3089325	0	True				
ANR	3089330	AndExpression	list -> from > 0 && ( levels < list -> from || list -> to < levels )		3089325	0		&&			
ANR	3089331	RelationalExpression	list -> from > 0		3089325	0		>			
ANR	3089332	PtrMemberAccess	list -> from		3089325	0					
ANR	3089333	Identifier	list		3089325	0					
ANR	3089334	Identifier	from		3089325	1					
ANR	3089335	PrimaryExpression	0		3089325	1					
ANR	3089336	OrExpression	levels < list -> from || list -> to < levels		3089325	1		||			
ANR	3089337	RelationalExpression	levels < list -> from		3089325	0		<			
ANR	3089338	Identifier	levels		3089325	0					
ANR	3089339	PtrMemberAccess	list -> from		3089325	1					
ANR	3089340	Identifier	list		3089325	0					
ANR	3089341	Identifier	from		3089325	1					
ANR	3089342	RelationalExpression	list -> to < levels		3089325	1		<			
ANR	3089343	PtrMemberAccess	list -> to		3089325	0					
ANR	3089344	Identifier	list		3089325	0					
ANR	3089345	Identifier	to		3089325	1					
ANR	3089346	Identifier	levels		3089325	1					
ANR	3089347	ExpressionStatement	list ++	727:71:23989:23995	3089325	1	True				
ANR	3089348	PostIncDecOperationExpression	list ++		3089325	0					
ANR	3089349	Identifier	list		3089325	0					
ANR	3089350	IncDec	++		3089325	1					
ANR	3089351	ReturnStatement	return list -> from > 0 ;	729:2:24000:24021	3089325	1	True				
ANR	3089352	RelationalExpression	list -> from > 0		3089325	0		>			
ANR	3089353	PtrMemberAccess	list -> from		3089325	0					
ANR	3089354	Identifier	list		3089325	0					
ANR	3089355	Identifier	from		3089325	1					
ANR	3089356	PrimaryExpression	0		3089325	1					
ANR	3089357	ReturnType	static bool		3089325	1					
ANR	3089358	Identifier	levels_supported		3089325	2					
ANR	3089359	ParameterList	"const eprn_IntensityLevels * list , unsigned int levels"		3089325	3					
ANR	3089360	Parameter	const eprn_IntensityLevels * list	724:29:23859:23890	3089325	0	True				
ANR	3089361	ParameterType	const eprn_IntensityLevels *		3089325	0					
ANR	3089362	Identifier	list		3089325	1					
ANR	3089363	Parameter	unsigned int levels	725:2:23895:23913	3089325	1	True				
ANR	3089364	ParameterType	unsigned int		3089325	0					
ANR	3089365	Identifier	levels		3089325	1					
ANR	3089366	CFGEntryNode	ENTRY		3089325		True				
ANR	3089367	CFGExitNode	EXIT		3089325		True				
ANR	3089368	Symbol	list -> to		3089325						
ANR	3089369	Symbol	* list		3089325						
ANR	3089370	Symbol	list -> from		3089325						
ANR	3089371	Symbol	list		3089325						
ANR	3089372	Symbol	levels		3089325						
ANR	3089373	Function	reslev_supported	738:0:24218:24424							
ANR	3089374	FunctionDef	"reslev_supported (const eprn_ResLev * entry , float hres , float vres , unsigned int levels)"		3089373	0					
ANR	3089375	CompoundStatement		740:0:24319:24424	3089373	0					
ANR	3089376	ReturnStatement	"return res_supported ( entry -> resolutions , hres , vres ) && levels_supported ( entry -> levels , levels ) ;"	741:2:24323:24422	3089373	0	True				
ANR	3089377	AndExpression	"res_supported ( entry -> resolutions , hres , vres ) && levels_supported ( entry -> levels , levels )"		3089373	0		&&			
ANR	3089378	CallExpression	"res_supported ( entry -> resolutions , hres , vres )"		3089373	0					
ANR	3089379	Callee	res_supported		3089373	0					
ANR	3089380	Identifier	res_supported		3089373	0					
ANR	3089381	ArgumentList	entry -> resolutions		3089373	1					
ANR	3089382	Argument	entry -> resolutions		3089373	0					
ANR	3089383	PtrMemberAccess	entry -> resolutions		3089373	0					
ANR	3089384	Identifier	entry		3089373	0					
ANR	3089385	Identifier	resolutions		3089373	1					
ANR	3089386	Argument	hres		3089373	1					
ANR	3089387	Identifier	hres		3089373	0					
ANR	3089388	Argument	vres		3089373	2					
ANR	3089389	Identifier	vres		3089373	0					
ANR	3089390	CallExpression	"levels_supported ( entry -> levels , levels )"		3089373	1					
ANR	3089391	Callee	levels_supported		3089373	0					
ANR	3089392	Identifier	levels_supported		3089373	0					
ANR	3089393	ArgumentList	entry -> levels		3089373	1					
ANR	3089394	Argument	entry -> levels		3089373	0					
ANR	3089395	PtrMemberAccess	entry -> levels		3089373	0					
ANR	3089396	Identifier	entry		3089373	0					
ANR	3089397	Identifier	levels		3089373	1					
ANR	3089398	Argument	levels		3089373	1					
ANR	3089399	Identifier	levels		3089373	0					
ANR	3089400	ReturnType	static int		3089373	1					
ANR	3089401	Identifier	reslev_supported		3089373	2					
ANR	3089402	ParameterList	"const eprn_ResLev * entry , float hres , float vres , unsigned int levels"		3089373	3					
ANR	3089403	Parameter	const eprn_ResLev * entry	738:28:24246:24269	3089373	0	True				
ANR	3089404	ParameterType	const eprn_ResLev *		3089373	0					
ANR	3089405	Identifier	entry		3089373	1					
ANR	3089406	Parameter	float hres	738:54:24272:24281	3089373	1	True				
ANR	3089407	ParameterType	float		3089373	0					
ANR	3089408	Identifier	hres		3089373	1					
ANR	3089409	Parameter	float vres	738:66:24284:24293	3089373	2	True				
ANR	3089410	ParameterType	float		3089373	0					
ANR	3089411	Identifier	vres		3089373	1					
ANR	3089412	Parameter	unsigned int levels	739:2:24298:24316	3089373	3	True				
ANR	3089413	ParameterType	unsigned int		3089373	0					
ANR	3089414	Identifier	levels		3089373	1					
ANR	3089415	CFGEntryNode	ENTRY		3089373		True				
ANR	3089416	CFGExitNode	EXIT		3089373		True				
ANR	3089417	Symbol	entry		3089373						
ANR	3089418	Symbol	res_supported		3089373						
ANR	3089419	Symbol	hres		3089373						
ANR	3089420	Symbol	entry -> levels		3089373						
ANR	3089421	Symbol	levels_supported		3089373						
ANR	3089422	Symbol	vres		3089373						
ANR	3089423	Symbol	levels		3089373						
ANR	3089424	Symbol	entry -> resolutions		3089373						
ANR	3089425	Symbol	* entry		3089373						
ANR	3089426	Function	eprn_check_colour_info	758:0:24919:26417							
ANR	3089427	FunctionDef	"eprn_check_colour_info (const eprn_ColourInfo * list , eprn_ColourModel * model , float * hres , float * vres , unsigned int * black_levels , unsigned int * non_black_levels)"		3089426	0					
ANR	3089428	CompoundStatement		761:0:25090:26417	3089426	0					
ANR	3089429	IdentifierDeclStatement	const eprn_ColourInfo * entry ;	762:2:25094:25122	3089426	0	True				
ANR	3089430	IdentifierDecl	* entry		3089426	0					
ANR	3089431	IdentifierDeclType	const eprn_ColourInfo *		3089426	0					
ANR	3089432	Identifier	entry		3089426	1					
ANR	3089433	ForStatement	for ( entry = list ; entry -> info [ 0 ] != NULL ; entry ++ )		3089426	1					
ANR	3089434	ForInit	entry = list ;	765:7:25208:25220	3089426	0	True				
ANR	3089435	AssignmentExpression	entry = list		3089426	0		=			
ANR	3089436	Identifier	entry		3089426	0					
ANR	3089437	Identifier	list		3089426	1					
ANR	3089438	Condition	entry -> info [ 0 ] != NULL	765:21:25222:25243	3089426	1	True				
ANR	3089439	EqualityExpression	entry -> info [ 0 ] != NULL		3089426	0		!=			
ANR	3089440	ArrayIndexing	entry -> info [ 0 ]		3089426	0					
ANR	3089441	PtrMemberAccess	entry -> info		3089426	0					
ANR	3089442	Identifier	entry		3089426	0					
ANR	3089443	Identifier	info		3089426	1					
ANR	3089444	PrimaryExpression	0		3089426	1					
ANR	3089445	Identifier	NULL		3089426	1					
ANR	3089446	PostIncDecOperationExpression	entry ++	765:45:25246:25252	3089426	2	True				
ANR	3089447	Identifier	entry		3089426	0					
ANR	3089448	IncDec	++		3089426	1					
ANR	3089449	IfStatement	if ( entry -> colour_model == * model || ( entry -> colour_model == eprn_DeviceCMYK && * model == eprn_DeviceCMY_plus_K ) )		3089426	3					
ANR	3089450	Condition	entry -> colour_model == * model || ( entry -> colour_model == eprn_DeviceCMYK && * model == eprn_DeviceCMY_plus_K )	766:8:25263:25387	3089426	0	True				
ANR	3089451	OrExpression	entry -> colour_model == * model || ( entry -> colour_model == eprn_DeviceCMYK && * model == eprn_DeviceCMY_plus_K )		3089426	0		||			
ANR	3089452	EqualityExpression	entry -> colour_model == * model		3089426	0		==			
ANR	3089453	PtrMemberAccess	entry -> colour_model		3089426	0					
ANR	3089454	Identifier	entry		3089426	0					
ANR	3089455	Identifier	colour_model		3089426	1					
ANR	3089456	UnaryOperationExpression	* model		3089426	1					
ANR	3089457	UnaryOperator	*		3089426	0					
ANR	3089458	Identifier	model		3089426	1					
ANR	3089459	AndExpression	entry -> colour_model == eprn_DeviceCMYK && * model == eprn_DeviceCMY_plus_K		3089426	1		&&			
ANR	3089460	EqualityExpression	entry -> colour_model == eprn_DeviceCMYK		3089426	0		==			
ANR	3089461	PtrMemberAccess	entry -> colour_model		3089426	0					
ANR	3089462	Identifier	entry		3089426	0					
ANR	3089463	Identifier	colour_model		3089426	1					
ANR	3089464	Identifier	eprn_DeviceCMYK		3089426	1					
ANR	3089465	EqualityExpression	* model == eprn_DeviceCMY_plus_K		3089426	1		==			
ANR	3089466	UnaryOperationExpression	* model		3089426	0					
ANR	3089467	UnaryOperator	*		3089426	0					
ANR	3089468	Identifier	model		3089426	1					
ANR	3089469	Identifier	eprn_DeviceCMY_plus_K		3089426	1					
ANR	3089470	CompoundStatement		10:6:336:490	3089426	1					
ANR	3089471	IdentifierDeclStatement	const eprn_ResLev * rl ;	769:6:25398:25419	3089426	0	True				
ANR	3089472	IdentifierDecl	* rl		3089426	0					
ANR	3089473	IdentifierDeclType	const eprn_ResLev *		3089426	0					
ANR	3089474	Identifier	rl		3089426	1					
ANR	3089475	IdentifierDeclStatement	unsigned int levels = ( entry -> colour_model == eprn_DeviceRGB || entry -> colour_model == eprn_DeviceCMY ? * non_black_levels : * black_levels ) ;	770:6:25427:25581	3089426	1	True				
ANR	3089476	IdentifierDecl	levels = ( entry -> colour_model == eprn_DeviceRGB || entry -> colour_model == eprn_DeviceCMY ? * non_black_levels : * black_levels )		3089426	0					
ANR	3089477	IdentifierDeclType	unsigned int		3089426	0					
ANR	3089478	Identifier	levels		3089426	1					
ANR	3089479	AssignmentExpression	levels = ( entry -> colour_model == eprn_DeviceRGB || entry -> colour_model == eprn_DeviceCMY ? * non_black_levels : * black_levels )		3089426	2		=			
ANR	3089480	Identifier	levels		3089426	0					
ANR	3089481	ConditionalExpression	entry -> colour_model == eprn_DeviceRGB || entry -> colour_model == eprn_DeviceCMY ? * non_black_levels : * black_levels		3089426	1					
ANR	3089482	Condition	entry -> colour_model == eprn_DeviceRGB || entry -> colour_model == eprn_DeviceCMY		3089426	0					
ANR	3089483	OrExpression	entry -> colour_model == eprn_DeviceRGB || entry -> colour_model == eprn_DeviceCMY		3089426	0		||			
ANR	3089484	EqualityExpression	entry -> colour_model == eprn_DeviceRGB		3089426	0		==			
ANR	3089485	PtrMemberAccess	entry -> colour_model		3089426	0					
ANR	3089486	Identifier	entry		3089426	0					
ANR	3089487	Identifier	colour_model		3089426	1					
ANR	3089488	Identifier	eprn_DeviceRGB		3089426	1					
ANR	3089489	EqualityExpression	entry -> colour_model == eprn_DeviceCMY		3089426	1		==			
ANR	3089490	PtrMemberAccess	entry -> colour_model		3089426	0					
ANR	3089491	Identifier	entry		3089426	0					
ANR	3089492	Identifier	colour_model		3089426	1					
ANR	3089493	Identifier	eprn_DeviceCMY		3089426	1					
ANR	3089494	UnaryOperationExpression	* non_black_levels		3089426	1					
ANR	3089495	UnaryOperator	*		3089426	0					
ANR	3089496	Identifier	non_black_levels		3089426	1					
ANR	3089497	UnaryOperationExpression	* black_levels		3089426	2					
ANR	3089498	UnaryOperator	*		3089426	0					
ANR	3089499	Identifier	black_levels		3089426	1					
ANR	3089500	ForStatement	for ( rl = entry -> info [ 0 ] ; rl -> levels != NULL ; rl ++ )		3089426	2					
ANR	3089501	ForInit	rl = entry -> info [ 0 ] ;	774:11:25595:25614	3089426	0	True				
ANR	3089502	AssignmentExpression	rl = entry -> info [ 0 ]		3089426	0		=			
ANR	3089503	Identifier	rl		3089426	0					
ANR	3089504	ArrayIndexing	entry -> info [ 0 ]		3089426	1					
ANR	3089505	PtrMemberAccess	entry -> info		3089426	0					
ANR	3089506	Identifier	entry		3089426	0					
ANR	3089507	Identifier	info		3089426	1					
ANR	3089508	PrimaryExpression	0		3089426	1					
ANR	3089509	Condition	rl -> levels != NULL	774:32:25616:25633	3089426	1	True				
ANR	3089510	EqualityExpression	rl -> levels != NULL		3089426	0		!=			
ANR	3089511	PtrMemberAccess	rl -> levels		3089426	0					
ANR	3089512	Identifier	rl		3089426	0					
ANR	3089513	Identifier	levels		3089426	1					
ANR	3089514	Identifier	NULL		3089426	1					
ANR	3089515	PostIncDecOperationExpression	rl ++	774:52:25636:25639	3089426	2	True				
ANR	3089516	Identifier	rl		3089426	0					
ANR	3089517	IncDec	++		3089426	1					
ANR	3089518	IfStatement	"if ( reslev_supported ( rl , * hres , * vres , levels ) )"		3089426	3					
ANR	3089519	Condition	"reslev_supported ( rl , * hres , * vres , levels )"	775:12:25654:25695	3089426	0	True				
ANR	3089520	CallExpression	"reslev_supported ( rl , * hres , * vres , levels )"		3089426	0					
ANR	3089521	Callee	reslev_supported		3089426	0					
ANR	3089522	Identifier	reslev_supported		3089426	0					
ANR	3089523	ArgumentList	rl		3089426	1					
ANR	3089524	Argument	rl		3089426	0					
ANR	3089525	Identifier	rl		3089426	0					
ANR	3089526	Argument	* hres		3089426	1					
ANR	3089527	UnaryOperationExpression	* hres		3089426	0					
ANR	3089528	UnaryOperator	*		3089426	0					
ANR	3089529	Identifier	hres		3089426	1					
ANR	3089530	Argument	* vres		3089426	2					
ANR	3089531	UnaryOperationExpression	* vres		3089426	0					
ANR	3089532	UnaryOperator	*		3089426	0					
ANR	3089533	Identifier	vres		3089426	1					
ANR	3089534	Argument	levels		3089426	3					
ANR	3089535	Identifier	levels		3089426	0					
ANR	3089536	CompoundStatement		16:10:619:648	3089426	1					
ANR	3089537	IdentifierDeclStatement	const eprn_ResLev * rl2 = NULL ;	776:10:25710:25739	3089426	0	True				
ANR	3089538	IdentifierDecl	* rl2 = NULL		3089426	0					
ANR	3089539	IdentifierDeclType	const eprn_ResLev *		3089426	0					
ANR	3089540	Identifier	rl2		3089426	1					
ANR	3089541	AssignmentExpression	* rl2 = NULL		3089426	2		=			
ANR	3089542	Identifier	NULL		3089426	0					
ANR	3089543	Identifier	NULL		3089426	1					
ANR	3089544	IfStatement	if ( entry -> colour_model == eprn_DeviceGray || entry -> colour_model == eprn_DeviceRGB || entry -> colour_model == eprn_DeviceCMY )		3089426	1					
ANR	3089545	Condition	entry -> colour_model == eprn_DeviceGray || entry -> colour_model == eprn_DeviceRGB || entry -> colour_model == eprn_DeviceCMY	779:14:25797:25944	3089426	0	True				
ANR	3089546	OrExpression	entry -> colour_model == eprn_DeviceGray || entry -> colour_model == eprn_DeviceRGB || entry -> colour_model == eprn_DeviceCMY		3089426	0		||			
ANR	3089547	EqualityExpression	entry -> colour_model == eprn_DeviceGray		3089426	0		==			
ANR	3089548	PtrMemberAccess	entry -> colour_model		3089426	0					
ANR	3089549	Identifier	entry		3089426	0					
ANR	3089550	Identifier	colour_model		3089426	1					
ANR	3089551	Identifier	eprn_DeviceGray		3089426	1					
ANR	3089552	OrExpression	entry -> colour_model == eprn_DeviceRGB || entry -> colour_model == eprn_DeviceCMY		3089426	1		||			
ANR	3089553	EqualityExpression	entry -> colour_model == eprn_DeviceRGB		3089426	0		==			
ANR	3089554	PtrMemberAccess	entry -> colour_model		3089426	0					
ANR	3089555	Identifier	entry		3089426	0					
ANR	3089556	Identifier	colour_model		3089426	1					
ANR	3089557	Identifier	eprn_DeviceRGB		3089426	1					
ANR	3089558	EqualityExpression	entry -> colour_model == eprn_DeviceCMY		3089426	1		==			
ANR	3089559	PtrMemberAccess	entry -> colour_model		3089426	0					
ANR	3089560	Identifier	entry		3089426	0					
ANR	3089561	Identifier	colour_model		3089426	1					
ANR	3089562	Identifier	eprn_DeviceCMY		3089426	1					
ANR	3089563	ReturnStatement	return 0 ;	782:12:25959:25967	3089426	1	True				
ANR	3089564	PrimaryExpression	0		3089426	0					
ANR	3089565	IfStatement	if ( entry -> info [ 1 ] != NULL )		3089426	2					
ANR	3089566	Condition	entry -> info [ 1 ] != NULL	785:14:26036:26057	3089426	0	True				
ANR	3089567	EqualityExpression	entry -> info [ 1 ] != NULL		3089426	0		!=			
ANR	3089568	ArrayIndexing	entry -> info [ 1 ]		3089426	0					
ANR	3089569	PtrMemberAccess	entry -> info		3089426	0					
ANR	3089570	Identifier	entry		3089426	0					
ANR	3089571	Identifier	info		3089426	1					
ANR	3089572	PrimaryExpression	1		3089426	1					
ANR	3089573	Identifier	NULL		3089426	1					
ANR	3089574	CompoundStatement		25:38:969:969	3089426	1					
ANR	3089575	ForStatement	for ( rl2 = entry -> info [ 1 ] ; rl2 -> levels != NULL ; rl2 ++ )		3089426	0					
ANR	3089576	ForInit	rl2 = entry -> info [ 1 ] ;	786:17:26079:26099	3089426	0	True				
ANR	3089577	AssignmentExpression	rl2 = entry -> info [ 1 ]		3089426	0		=			
ANR	3089578	Identifier	rl2		3089426	0					
ANR	3089579	ArrayIndexing	entry -> info [ 1 ]		3089426	1					
ANR	3089580	PtrMemberAccess	entry -> info		3089426	0					
ANR	3089581	Identifier	entry		3089426	0					
ANR	3089582	Identifier	info		3089426	1					
ANR	3089583	PrimaryExpression	1		3089426	1					
ANR	3089584	Condition	rl2 -> levels != NULL	786:39:26101:26119	3089426	1	True				
ANR	3089585	EqualityExpression	rl2 -> levels != NULL		3089426	0		!=			
ANR	3089586	PtrMemberAccess	rl2 -> levels		3089426	0					
ANR	3089587	Identifier	rl2		3089426	0					
ANR	3089588	Identifier	levels		3089426	1					
ANR	3089589	Identifier	NULL		3089426	1					
ANR	3089590	PostIncDecOperationExpression	rl2 ++	786:60:26122:26126	3089426	2	True				
ANR	3089591	Identifier	rl2		3089426	0					
ANR	3089592	IncDec	++		3089426	1					
ANR	3089593	IfStatement	"if ( reslev_supported ( rl2 , * hres , * vres , * non_black_levels ) )"		3089426	3					
ANR	3089594	Condition	"reslev_supported ( rl2 , * hres , * vres , * non_black_levels )"	787:18:26147:26200	3089426	0	True				
ANR	3089595	CallExpression	"reslev_supported ( rl2 , * hres , * vres , * non_black_levels )"		3089426	0					
ANR	3089596	Callee	reslev_supported		3089426	0					
ANR	3089597	Identifier	reslev_supported		3089426	0					
ANR	3089598	ArgumentList	rl2		3089426	1					
ANR	3089599	Argument	rl2		3089426	0					
ANR	3089600	Identifier	rl2		3089426	0					
ANR	3089601	Argument	* hres		3089426	1					
ANR	3089602	UnaryOperationExpression	* hres		3089426	0					
ANR	3089603	UnaryOperator	*		3089426	0					
ANR	3089604	Identifier	hres		3089426	1					
ANR	3089605	Argument	* vres		3089426	2					
ANR	3089606	UnaryOperationExpression	* vres		3089426	0					
ANR	3089607	UnaryOperator	*		3089426	0					
ANR	3089608	Identifier	vres		3089426	1					
ANR	3089609	Argument	* non_black_levels		3089426	3					
ANR	3089610	UnaryOperationExpression	* non_black_levels		3089426	0					
ANR	3089611	UnaryOperator	*		3089426	0					
ANR	3089612	Identifier	non_black_levels		3089426	1					
ANR	3089613	BreakStatement	break ;	787:74:26203:26208	3089426	1	True				
ANR	3089614	IfStatement	if ( ( entry -> info [ 1 ] == NULL && * black_levels == * non_black_levels ) || ( entry -> info [ 1 ] != NULL && rl2 -> levels != NULL ) )		3089426	3					
ANR	3089615	Condition	( entry -> info [ 1 ] == NULL && * black_levels == * non_black_levels ) || ( entry -> info [ 1 ] != NULL && rl2 -> levels != NULL )	789:14:26236:26362	3089426	0	True				
ANR	3089616	OrExpression	( entry -> info [ 1 ] == NULL && * black_levels == * non_black_levels ) || ( entry -> info [ 1 ] != NULL && rl2 -> levels != NULL )		3089426	0		||			
ANR	3089617	AndExpression	entry -> info [ 1 ] == NULL && * black_levels == * non_black_levels		3089426	0		&&			
ANR	3089618	EqualityExpression	entry -> info [ 1 ] == NULL		3089426	0		==			
ANR	3089619	ArrayIndexing	entry -> info [ 1 ]		3089426	0					
ANR	3089620	PtrMemberAccess	entry -> info		3089426	0					
ANR	3089621	Identifier	entry		3089426	0					
ANR	3089622	Identifier	info		3089426	1					
ANR	3089623	PrimaryExpression	1		3089426	1					
ANR	3089624	Identifier	NULL		3089426	1					
ANR	3089625	EqualityExpression	* black_levels == * non_black_levels		3089426	1		==			
ANR	3089626	UnaryOperationExpression	* black_levels		3089426	0					
ANR	3089627	UnaryOperator	*		3089426	0					
ANR	3089628	Identifier	black_levels		3089426	1					
ANR	3089629	UnaryOperationExpression	* non_black_levels		3089426	1					
ANR	3089630	UnaryOperator	*		3089426	0					
ANR	3089631	Identifier	non_black_levels		3089426	1					
ANR	3089632	AndExpression	entry -> info [ 1 ] != NULL && rl2 -> levels != NULL		3089426	1		&&			
ANR	3089633	EqualityExpression	entry -> info [ 1 ] != NULL		3089426	0		!=			
ANR	3089634	ArrayIndexing	entry -> info [ 1 ]		3089426	0					
ANR	3089635	PtrMemberAccess	entry -> info		3089426	0					
ANR	3089636	Identifier	entry		3089426	0					
ANR	3089637	Identifier	info		3089426	1					
ANR	3089638	PrimaryExpression	1		3089426	1					
ANR	3089639	Identifier	NULL		3089426	1					
ANR	3089640	EqualityExpression	rl2 -> levels != NULL		3089426	1		!=			
ANR	3089641	PtrMemberAccess	rl2 -> levels		3089426	0					
ANR	3089642	Identifier	rl2		3089426	0					
ANR	3089643	Identifier	levels		3089426	1					
ANR	3089644	Identifier	NULL		3089426	1					
ANR	3089645	ReturnStatement	return 0 ;	791:12:26377:26385	3089426	1	True				
ANR	3089646	PrimaryExpression	0		3089426	0					
ANR	3089647	ReturnStatement	return - 1 ;	795:2:26406:26415	3089426	2	True				
ANR	3089648	UnaryOperationExpression	- 1		3089426	0					
ANR	3089649	UnaryOperator	-		3089426	0					
ANR	3089650	PrimaryExpression	1		3089426	1					
ANR	3089651	ReturnType	int		3089426	1					
ANR	3089652	Identifier	eprn_check_colour_info		3089426	2					
ANR	3089653	ParameterList	"const eprn_ColourInfo * list , eprn_ColourModel * model , float * hres , float * vres , unsigned int * black_levels , unsigned int * non_black_levels"		3089426	3					
ANR	3089654	Parameter	const eprn_ColourInfo * list	758:27:24946:24972	3089426	0	True				
ANR	3089655	ParameterType	const eprn_ColourInfo *		3089426	0					
ANR	3089656	Identifier	list		3089426	1					
ANR	3089657	Parameter	eprn_ColourModel * model	759:2:24977:24999	3089426	1	True				
ANR	3089658	ParameterType	eprn_ColourModel *		3089426	0					
ANR	3089659	Identifier	model		3089426	1					
ANR	3089660	Parameter	float * hres	759:27:25002:25012	3089426	2	True				
ANR	3089661	ParameterType	float *		3089426	0					
ANR	3089662	Identifier	hres		3089426	1					
ANR	3089663	Parameter	float * vres	759:40:25015:25025	3089426	3	True				
ANR	3089664	ParameterType	float *		3089426	0					
ANR	3089665	Identifier	vres		3089426	1					
ANR	3089666	Parameter	unsigned int * black_levels	760:2:25030:25055	3089426	4	True				
ANR	3089667	ParameterType	unsigned int *		3089426	0					
ANR	3089668	Identifier	black_levels		3089426	1					
ANR	3089669	Parameter	unsigned int * non_black_levels	760:30:25058:25087	3089426	5	True				
ANR	3089670	ParameterType	unsigned int *		3089426	0					
ANR	3089671	Identifier	non_black_levels		3089426	1					
ANR	3089672	CFGEntryNode	ENTRY		3089426		True				
ANR	3089673	CFGExitNode	EXIT		3089426		True				
ANR	3089674	Symbol	non_black_levels		3089426						
ANR	3089675	Symbol	* * entry		3089426						
ANR	3089676	Symbol	* vres		3089426						
ANR	3089677	Symbol	eprn_DeviceCMY_plus_K		3089426						
ANR	3089678	Symbol	eprn_DeviceCMY		3089426						
ANR	3089679	Symbol	hres		3089426						
ANR	3089680	Symbol	black_levels		3089426						
ANR	3089681	Symbol	* black_levels		3089426						
ANR	3089682	Symbol	eprn_DeviceGray		3089426						
ANR	3089683	Symbol	* entry -> info		3089426						
ANR	3089684	Symbol	entry -> colour_model		3089426						
ANR	3089685	Symbol	* non_black_levels		3089426						
ANR	3089686	Symbol	model		3089426						
ANR	3089687	Symbol	rl2 -> levels		3089426						
ANR	3089688	Symbol	entry -> info		3089426						
ANR	3089689	Symbol	vres		3089426						
ANR	3089690	Symbol	* entry		3089426						
ANR	3089691	Symbol	* rl2		3089426						
ANR	3089692	Symbol	NULL		3089426						
ANR	3089693	Symbol	* rl		3089426						
ANR	3089694	Symbol	* model		3089426						
ANR	3089695	Symbol	list		3089426						
ANR	3089696	Symbol	reslev_supported		3089426						
ANR	3089697	Symbol	entry		3089426						
ANR	3089698	Symbol	* hres		3089426						
ANR	3089699	Symbol	eprn_DeviceCMYK		3089426						
ANR	3089700	Symbol	rl -> levels		3089426						
ANR	3089701	Symbol	eprn_DeviceRGB		3089426						
ANR	3089702	Symbol	rl2		3089426						
ANR	3089703	Symbol	rl		3089426						
ANR	3089704	Symbol	levels		3089426						
ANR	3089705	Function	set_derived_colour_data	814:0:27078:30304							
ANR	3089706	FunctionDef	set_derived_colour_data (eprn_Device * dev)		3089705	0					
ANR	3089707	CompoundStatement		815:0:27132:30304	3089705	0					
ANR	3089708	IdentifierDeclStatement	eprn_Eprn * eprn = & dev -> eprn ;	816:2:27136:27164	3089705	0	True				
ANR	3089709	IdentifierDecl	* eprn = & dev -> eprn		3089705	0					
ANR	3089710	IdentifierDeclType	eprn_Eprn *		3089705	0					
ANR	3089711	Identifier	eprn		3089705	1					
ANR	3089712	AssignmentExpression	* eprn = & dev -> eprn		3089705	2		=			
ANR	3089713	Identifier	eprn		3089705	0					
ANR	3089714	UnaryOperationExpression	& dev -> eprn		3089705	1					
ANR	3089715	UnaryOperator	&		3089705	0					
ANR	3089716	PtrMemberAccess	dev -> eprn		3089705	1					
ANR	3089717	Identifier	dev		3089705	0					
ANR	3089718	Identifier	eprn		3089705	1					
ANR	3089719	IdentifierDeclStatement	unsigned int levels ;	817:2:27168:27187	3089705	1	True				
ANR	3089720	IdentifierDecl	levels		3089705	0					
ANR	3089721	IdentifierDeclType	unsigned int		3089705	0					
ANR	3089722	Identifier	levels		3089705	1					
ANR	3089723	IfStatement	if ( eprn -> intensity_rendering == eprn_IR_FloydSteinberg )		3089705	2					
ANR	3089724	Condition	eprn -> intensity_rendering == eprn_IR_FloydSteinberg	821:6:27282:27332	3089705	0	True				
ANR	3089725	EqualityExpression	eprn -> intensity_rendering == eprn_IR_FloydSteinberg		3089705	0		==			
ANR	3089726	PtrMemberAccess	eprn -> intensity_rendering		3089705	0					
ANR	3089727	Identifier	eprn		3089705	0					
ANR	3089728	Identifier	intensity_rendering		3089705	1					
ANR	3089729	Identifier	eprn_IR_FloydSteinberg		3089705	1					
ANR	3089730	ExpressionStatement	levels = 256	821:59:27335:27347	3089705	1	True				
ANR	3089731	AssignmentExpression	levels = 256		3089705	0		=			
ANR	3089732	Identifier	levels		3089705	0					
ANR	3089733	PrimaryExpression	256		3089705	1					
ANR	3089734	ElseStatement	else		3089705	0					
ANR	3089735	IfStatement	if ( eprn -> black_levels >= eprn -> non_black_levels )		3089705	0					
ANR	3089736	Condition	eprn -> black_levels >= eprn -> non_black_levels	822:11:27360:27403	3089705	0	True				
ANR	3089737	RelationalExpression	eprn -> black_levels >= eprn -> non_black_levels		3089705	0		>=			
ANR	3089738	PtrMemberAccess	eprn -> black_levels		3089705	0					
ANR	3089739	Identifier	eprn		3089705	0					
ANR	3089740	Identifier	black_levels		3089705	1					
ANR	3089741	PtrMemberAccess	eprn -> non_black_levels		3089705	1					
ANR	3089742	Identifier	eprn		3089705	0					
ANR	3089743	Identifier	non_black_levels		3089705	1					
ANR	3089744	ExpressionStatement	levels = eprn -> black_levels	823:4:27410:27437	3089705	1	True				
ANR	3089745	AssignmentExpression	levels = eprn -> black_levels		3089705	0		=			
ANR	3089746	Identifier	levels		3089705	0					
ANR	3089747	PtrMemberAccess	eprn -> black_levels		3089705	1					
ANR	3089748	Identifier	eprn		3089705	0					
ANR	3089749	Identifier	black_levels		3089705	1					
ANR	3089750	ElseStatement	else		3089705	0					
ANR	3089751	ExpressionStatement	levels = eprn -> non_black_levels	824:7:27446:27477	3089705	0	True				
ANR	3089752	AssignmentExpression	levels = eprn -> non_black_levels		3089705	0		=			
ANR	3089753	Identifier	levels		3089705	0					
ANR	3089754	PtrMemberAccess	eprn -> non_black_levels		3089705	1					
ANR	3089755	Identifier	eprn		3089705	0					
ANR	3089756	Identifier	non_black_levels		3089705	1					
ANR	3089757	ExpressionStatement	eprn -> bits_per_colorant = eprn_bits_for_levels ( levels )	825:2:27481:27535	3089705	3	True				
ANR	3089758	AssignmentExpression	eprn -> bits_per_colorant = eprn_bits_for_levels ( levels )		3089705	0		=			
ANR	3089759	PtrMemberAccess	eprn -> bits_per_colorant		3089705	0					
ANR	3089760	Identifier	eprn		3089705	0					
ANR	3089761	Identifier	bits_per_colorant		3089705	1					
ANR	3089762	CallExpression	eprn_bits_for_levels ( levels )		3089705	1					
ANR	3089763	Callee	eprn_bits_for_levels		3089705	0					
ANR	3089764	Identifier	eprn_bits_for_levels		3089705	0					
ANR	3089765	ArgumentList	levels		3089705	1					
ANR	3089766	Argument	levels		3089705	0					
ANR	3089767	Identifier	levels		3089705	0					
ANR	3089768	ExpressionStatement	dev -> color_info . depth = ( eprn -> non_black_levels == 0 ? 1 : 4 ) * eprn -> bits_per_colorant	829:2:27683:27772	3089705	4	True				
ANR	3089769	AssignmentExpression	dev -> color_info . depth = ( eprn -> non_black_levels == 0 ? 1 : 4 ) * eprn -> bits_per_colorant		3089705	0		=			
ANR	3089770	MemberAccess	dev -> color_info . depth		3089705	0					
ANR	3089771	PtrMemberAccess	dev -> color_info		3089705	0					
ANR	3089772	Identifier	dev		3089705	0					
ANR	3089773	Identifier	color_info		3089705	1					
ANR	3089774	Identifier	depth		3089705	1					
ANR	3089775	MultiplicativeExpression	( eprn -> non_black_levels == 0 ? 1 : 4 ) * eprn -> bits_per_colorant		3089705	1		*			
ANR	3089776	ConditionalExpression	eprn -> non_black_levels == 0 ? 1 : 4		3089705	0					
ANR	3089777	Condition	eprn -> non_black_levels == 0		3089705	0					
ANR	3089778	EqualityExpression	eprn -> non_black_levels == 0		3089705	0		==			
ANR	3089779	PtrMemberAccess	eprn -> non_black_levels		3089705	0					
ANR	3089780	Identifier	eprn		3089705	0					
ANR	3089781	Identifier	non_black_levels		3089705	1					
ANR	3089782	PrimaryExpression	0		3089705	1					
ANR	3089783	PrimaryExpression	1		3089705	1					
ANR	3089784	PrimaryExpression	4		3089705	2					
ANR	3089785	PtrMemberAccess	eprn -> bits_per_colorant		3089705	1					
ANR	3089786	Identifier	eprn		3089705	0					
ANR	3089787	Identifier	bits_per_colorant		3089705	1					
ANR	3089788	IfStatement	if ( dev -> color_info . depth > 2 )		3089705	5					
ANR	3089789	Condition	dev -> color_info . depth > 2	832:6:27838:27862	3089705	0	True				
ANR	3089790	RelationalExpression	dev -> color_info . depth > 2		3089705	0		>			
ANR	3089791	MemberAccess	dev -> color_info . depth		3089705	0					
ANR	3089792	PtrMemberAccess	dev -> color_info		3089705	0					
ANR	3089793	Identifier	dev		3089705	0					
ANR	3089794	Identifier	color_info		3089705	1					
ANR	3089795	Identifier	depth		3089705	1					
ANR	3089796	PrimaryExpression	2		3089705	1					
ANR	3089797	CompoundStatement		18:33:732:732	3089705	1					
ANR	3089798	IfStatement	if ( dev -> color_info . depth <= 4 )		3089705	0					
ANR	3089799	Condition	dev -> color_info . depth <= 4	833:8:27875:27900	3089705	0	True				
ANR	3089800	RelationalExpression	dev -> color_info . depth <= 4		3089705	0		<=			
ANR	3089801	MemberAccess	dev -> color_info . depth		3089705	0					
ANR	3089802	PtrMemberAccess	dev -> color_info		3089705	0					
ANR	3089803	Identifier	dev		3089705	0					
ANR	3089804	Identifier	color_info		3089705	1					
ANR	3089805	Identifier	depth		3089705	1					
ANR	3089806	PrimaryExpression	4		3089705	1					
ANR	3089807	ExpressionStatement	dev -> color_info . depth = 4	833:36:27903:27928	3089705	1	True				
ANR	3089808	AssignmentExpression	dev -> color_info . depth = 4		3089705	0		=			
ANR	3089809	MemberAccess	dev -> color_info . depth		3089705	0					
ANR	3089810	PtrMemberAccess	dev -> color_info		3089705	0					
ANR	3089811	Identifier	dev		3089705	0					
ANR	3089812	Identifier	color_info		3089705	1					
ANR	3089813	Identifier	depth		3089705	1					
ANR	3089814	PrimaryExpression	4		3089705	1					
ANR	3089815	ElseStatement	else		3089705	0					
ANR	3089816	IfStatement	if ( dev -> color_info . depth <= 8 )		3089705	0					
ANR	3089817	Condition	dev -> color_info . depth <= 8	834:13:27943:27968	3089705	0	True				
ANR	3089818	RelationalExpression	dev -> color_info . depth <= 8		3089705	0		<=			
ANR	3089819	MemberAccess	dev -> color_info . depth		3089705	0					
ANR	3089820	PtrMemberAccess	dev -> color_info		3089705	0					
ANR	3089821	Identifier	dev		3089705	0					
ANR	3089822	Identifier	color_info		3089705	1					
ANR	3089823	Identifier	depth		3089705	1					
ANR	3089824	PrimaryExpression	8		3089705	1					
ANR	3089825	ExpressionStatement	dev -> color_info . depth = 8	834:41:27971:27996	3089705	1	True				
ANR	3089826	AssignmentExpression	dev -> color_info . depth = 8		3089705	0		=			
ANR	3089827	MemberAccess	dev -> color_info . depth		3089705	0					
ANR	3089828	PtrMemberAccess	dev -> color_info		3089705	0					
ANR	3089829	Identifier	dev		3089705	0					
ANR	3089830	Identifier	color_info		3089705	1					
ANR	3089831	Identifier	depth		3089705	1					
ANR	3089832	PrimaryExpression	8		3089705	1					
ANR	3089833	ElseStatement	else		3089705	0					
ANR	3089834	ExpressionStatement	dev -> color_info . depth = ( ( dev -> color_info . depth + 7 ) / 8 ) * 8	835:9:28007:28064	3089705	0	True				
ANR	3089835	AssignmentExpression	dev -> color_info . depth = ( ( dev -> color_info . depth + 7 ) / 8 ) * 8		3089705	0		=			
ANR	3089836	MemberAccess	dev -> color_info . depth		3089705	0					
ANR	3089837	PtrMemberAccess	dev -> color_info		3089705	0					
ANR	3089838	Identifier	dev		3089705	0					
ANR	3089839	Identifier	color_info		3089705	1					
ANR	3089840	Identifier	depth		3089705	1					
ANR	3089841	MultiplicativeExpression	( ( dev -> color_info . depth + 7 ) / 8 ) * 8		3089705	1		*			
ANR	3089842	MultiplicativeExpression	( dev -> color_info . depth + 7 ) / 8		3089705	0		/			
ANR	3089843	AdditiveExpression	dev -> color_info . depth + 7		3089705	0		+			
ANR	3089844	MemberAccess	dev -> color_info . depth		3089705	0					
ANR	3089845	PtrMemberAccess	dev -> color_info		3089705	0					
ANR	3089846	Identifier	dev		3089705	0					
ANR	3089847	Identifier	color_info		3089705	1					
ANR	3089848	Identifier	depth		3089705	1					
ANR	3089849	PrimaryExpression	7		3089705	1					
ANR	3089850	PrimaryExpression	8		3089705	1					
ANR	3089851	PrimaryExpression	8		3089705	1					
ANR	3089852	IfStatement	if ( eprn -> intensity_rendering != eprn_IR_halftones )		3089705	6					
ANR	3089853	Condition	eprn -> intensity_rendering != eprn_IR_halftones	844:6:28402:28447	3089705	0	True				
ANR	3089854	EqualityExpression	eprn -> intensity_rendering != eprn_IR_halftones		3089705	0		!=			
ANR	3089855	PtrMemberAccess	eprn -> intensity_rendering		3089705	0					
ANR	3089856	Identifier	eprn		3089705	0					
ANR	3089857	Identifier	intensity_rendering		3089705	1					
ANR	3089858	Identifier	eprn_IR_halftones		3089705	1					
ANR	3089859	CompoundStatement		30:54:1317:1317	3089705	1					
ANR	3089860	IfStatement	if ( eprn -> non_black_levels > 0 )		3089705	0					
ANR	3089861	Condition	eprn -> non_black_levels > 0	856:8:29156:29181	3089705	0	True				
ANR	3089862	RelationalExpression	eprn -> non_black_levels > 0		3089705	0		>			
ANR	3089863	PtrMemberAccess	eprn -> non_black_levels		3089705	0					
ANR	3089864	Identifier	eprn		3089705	0					
ANR	3089865	Identifier	non_black_levels		3089705	1					
ANR	3089866	PrimaryExpression	0		3089705	1					
ANR	3089867	ExpressionStatement	dev -> color_info . max_color = 255	856:36:29184:29215	3089705	1	True				
ANR	3089868	AssignmentExpression	dev -> color_info . max_color = 255		3089705	0		=			
ANR	3089869	MemberAccess	dev -> color_info . max_color		3089705	0					
ANR	3089870	PtrMemberAccess	dev -> color_info		3089705	0					
ANR	3089871	Identifier	dev		3089705	0					
ANR	3089872	Identifier	color_info		3089705	1					
ANR	3089873	Identifier	max_color		3089705	1					
ANR	3089874	PrimaryExpression	255		3089705	1					
ANR	3089875	ElseStatement	else		3089705	0					
ANR	3089876	ExpressionStatement	dev -> color_info . max_color = 0	857:9:29226:29255	3089705	0	True				
ANR	3089877	AssignmentExpression	dev -> color_info . max_color = 0		3089705	0		=			
ANR	3089878	MemberAccess	dev -> color_info . max_color		3089705	0					
ANR	3089879	PtrMemberAccess	dev -> color_info		3089705	0					
ANR	3089880	Identifier	dev		3089705	0					
ANR	3089881	Identifier	color_info		3089705	1					
ANR	3089882	Identifier	max_color		3089705	1					
ANR	3089883	PrimaryExpression	0		3089705	1					
ANR	3089884	ExpressionStatement	dev -> color_info . max_gray = 255	858:4:29261:29291	3089705	1	True				
ANR	3089885	AssignmentExpression	dev -> color_info . max_gray = 255		3089705	0		=			
ANR	3089886	MemberAccess	dev -> color_info . max_gray		3089705	0					
ANR	3089887	PtrMemberAccess	dev -> color_info		3089705	0					
ANR	3089888	Identifier	dev		3089705	0					
ANR	3089889	Identifier	color_info		3089705	1					
ANR	3089890	Identifier	max_gray		3089705	1					
ANR	3089891	PrimaryExpression	255		3089705	1					
ANR	3089892	ExpressionStatement	dev -> color_info . dither_grays = 256	862:4:29430:29464	3089705	2	True				
ANR	3089893	AssignmentExpression	dev -> color_info . dither_grays = 256		3089705	0		=			
ANR	3089894	MemberAccess	dev -> color_info . dither_grays		3089705	0					
ANR	3089895	PtrMemberAccess	dev -> color_info		3089705	0					
ANR	3089896	Identifier	dev		3089705	0					
ANR	3089897	Identifier	color_info		3089705	1					
ANR	3089898	Identifier	dither_grays		3089705	1					
ANR	3089899	PrimaryExpression	256		3089705	1					
ANR	3089900	IfStatement	if ( dev -> color_info . num_components == 1 )		3089705	3					
ANR	3089901	Condition	dev -> color_info . num_components == 1	863:8:29474:29508	3089705	0	True				
ANR	3089902	EqualityExpression	dev -> color_info . num_components == 1		3089705	0		==			
ANR	3089903	MemberAccess	dev -> color_info . num_components		3089705	0					
ANR	3089904	PtrMemberAccess	dev -> color_info		3089705	0					
ANR	3089905	Identifier	dev		3089705	0					
ANR	3089906	Identifier	color_info		3089705	1					
ANR	3089907	Identifier	num_components		3089705	1					
ANR	3089908	PrimaryExpression	1		3089705	1					
ANR	3089909	ExpressionStatement	dev -> color_info . dither_colors = 0	863:45:29511:29544	3089705	1	True				
ANR	3089910	AssignmentExpression	dev -> color_info . dither_colors = 0		3089705	0		=			
ANR	3089911	MemberAccess	dev -> color_info . dither_colors		3089705	0					
ANR	3089912	PtrMemberAccess	dev -> color_info		3089705	0					
ANR	3089913	Identifier	dev		3089705	0					
ANR	3089914	Identifier	color_info		3089705	1					
ANR	3089915	Identifier	dither_colors		3089705	1					
ANR	3089916	PrimaryExpression	0		3089705	1					
ANR	3089917	ElseStatement	else		3089705	0					
ANR	3089918	ExpressionStatement	dev -> color_info . dither_colors = dev -> color_info . max_color + 1	864:9:29555:29616	3089705	0	True				
ANR	3089919	AssignmentExpression	dev -> color_info . dither_colors = dev -> color_info . max_color + 1		3089705	0		=			
ANR	3089920	MemberAccess	dev -> color_info . dither_colors		3089705	0					
ANR	3089921	PtrMemberAccess	dev -> color_info		3089705	0					
ANR	3089922	Identifier	dev		3089705	0					
ANR	3089923	Identifier	color_info		3089705	1					
ANR	3089924	Identifier	dither_colors		3089705	1					
ANR	3089925	AdditiveExpression	dev -> color_info . max_color + 1		3089705	1		+			
ANR	3089926	MemberAccess	dev -> color_info . max_color		3089705	0					
ANR	3089927	PtrMemberAccess	dev -> color_info		3089705	0					
ANR	3089928	Identifier	dev		3089705	0					
ANR	3089929	Identifier	color_info		3089705	1					
ANR	3089930	Identifier	max_color		3089705	1					
ANR	3089931	PrimaryExpression	1		3089705	1					
ANR	3089932	ElseStatement	else		3089705	0					
ANR	3089933	CompoundStatement		52:7:2496:2496	3089705	0					
ANR	3089934	IfStatement	if ( eprn -> non_black_levels > 0 )		3089705	0					
ANR	3089935	Condition	eprn -> non_black_levels > 0	868:8:29679:29704	3089705	0	True				
ANR	3089936	RelationalExpression	eprn -> non_black_levels > 0		3089705	0		>			
ANR	3089937	PtrMemberAccess	eprn -> non_black_levels		3089705	0					
ANR	3089938	Identifier	eprn		3089705	0					
ANR	3089939	Identifier	non_black_levels		3089705	1					
ANR	3089940	PrimaryExpression	0		3089705	1					
ANR	3089941	ExpressionStatement	dev -> color_info . max_color = eprn -> non_black_levels - 1	869:6:29713:29767	3089705	1	True				
ANR	3089942	AssignmentExpression	dev -> color_info . max_color = eprn -> non_black_levels - 1		3089705	0		=			
ANR	3089943	MemberAccess	dev -> color_info . max_color		3089705	0					
ANR	3089944	PtrMemberAccess	dev -> color_info		3089705	0					
ANR	3089945	Identifier	dev		3089705	0					
ANR	3089946	Identifier	color_info		3089705	1					
ANR	3089947	Identifier	max_color		3089705	1					
ANR	3089948	AdditiveExpression	eprn -> non_black_levels - 1		3089705	1		-			
ANR	3089949	PtrMemberAccess	eprn -> non_black_levels		3089705	0					
ANR	3089950	Identifier	eprn		3089705	0					
ANR	3089951	Identifier	non_black_levels		3089705	1					
ANR	3089952	PrimaryExpression	1		3089705	1					
ANR	3089953	ElseStatement	else		3089705	0					
ANR	3089954	ExpressionStatement	dev -> color_info . max_color = 0	870:9:29778:29807	3089705	0	True				
ANR	3089955	AssignmentExpression	dev -> color_info . max_color = 0		3089705	0		=			
ANR	3089956	MemberAccess	dev -> color_info . max_color		3089705	0					
ANR	3089957	PtrMemberAccess	dev -> color_info		3089705	0					
ANR	3089958	Identifier	dev		3089705	0					
ANR	3089959	Identifier	color_info		3089705	1					
ANR	3089960	Identifier	max_color		3089705	1					
ANR	3089961	PrimaryExpression	0		3089705	1					
ANR	3089962	IfStatement	if ( eprn -> black_levels > 0 )		3089705	1					
ANR	3089963	Condition	eprn -> black_levels > 0	871:8:29817:29838	3089705	0	True				
ANR	3089964	RelationalExpression	eprn -> black_levels > 0		3089705	0		>			
ANR	3089965	PtrMemberAccess	eprn -> black_levels		3089705	0					
ANR	3089966	Identifier	eprn		3089705	0					
ANR	3089967	Identifier	black_levels		3089705	1					
ANR	3089968	PrimaryExpression	0		3089705	1					
ANR	3089969	ExpressionStatement	dev -> color_info . max_gray = eprn -> black_levels - 1	872:6:29847:29896	3089705	1	True				
ANR	3089970	AssignmentExpression	dev -> color_info . max_gray = eprn -> black_levels - 1		3089705	0		=			
ANR	3089971	MemberAccess	dev -> color_info . max_gray		3089705	0					
ANR	3089972	PtrMemberAccess	dev -> color_info		3089705	0					
ANR	3089973	Identifier	dev		3089705	0					
ANR	3089974	Identifier	color_info		3089705	1					
ANR	3089975	Identifier	max_gray		3089705	1					
ANR	3089976	AdditiveExpression	eprn -> black_levels - 1		3089705	1		-			
ANR	3089977	PtrMemberAccess	eprn -> black_levels		3089705	0					
ANR	3089978	Identifier	eprn		3089705	0					
ANR	3089979	Identifier	black_levels		3089705	1					
ANR	3089980	PrimaryExpression	1		3089705	1					
ANR	3089981	ElseStatement	else		3089705	0					
ANR	3089982	ExpressionStatement	dev -> color_info . max_gray = dev -> color_info . max_color	873:9:29907:29959	3089705	0	True				
ANR	3089983	AssignmentExpression	dev -> color_info . max_gray = dev -> color_info . max_color		3089705	0		=			
ANR	3089984	MemberAccess	dev -> color_info . max_gray		3089705	0					
ANR	3089985	PtrMemberAccess	dev -> color_info		3089705	0					
ANR	3089986	Identifier	dev		3089705	0					
ANR	3089987	Identifier	color_info		3089705	1					
ANR	3089988	Identifier	max_gray		3089705	1					
ANR	3089989	MemberAccess	dev -> color_info . max_color		3089705	1					
ANR	3089990	PtrMemberAccess	dev -> color_info		3089705	0					
ANR	3089991	Identifier	dev		3089705	0					
ANR	3089992	Identifier	color_info		3089705	1					
ANR	3089993	Identifier	max_color		3089705	1					
ANR	3089994	IfStatement	if ( eprn -> black_levels > 0 )		3089705	2					
ANR	3089995	Condition	eprn -> black_levels > 0	876:8:30002:30023	3089705	0	True				
ANR	3089996	RelationalExpression	eprn -> black_levels > 0		3089705	0		>			
ANR	3089997	PtrMemberAccess	eprn -> black_levels		3089705	0					
ANR	3089998	Identifier	eprn		3089705	0					
ANR	3089999	Identifier	black_levels		3089705	1					
ANR	3090000	PrimaryExpression	0		3089705	1					
ANR	3090001	ExpressionStatement	dev -> color_info . dither_grays = eprn -> black_levels	877:6:30032:30081	3089705	1	True				
ANR	3090002	AssignmentExpression	dev -> color_info . dither_grays = eprn -> black_levels		3089705	0		=			
ANR	3090003	MemberAccess	dev -> color_info . dither_grays		3089705	0					
ANR	3090004	PtrMemberAccess	dev -> color_info		3089705	0					
ANR	3090005	Identifier	dev		3089705	0					
ANR	3090006	Identifier	color_info		3089705	1					
ANR	3090007	Identifier	dither_grays		3089705	1					
ANR	3090008	PtrMemberAccess	eprn -> black_levels		3089705	1					
ANR	3090009	Identifier	eprn		3089705	0					
ANR	3090010	Identifier	black_levels		3089705	1					
ANR	3090011	ElseStatement	else		3089705	0					
ANR	3090012	ExpressionStatement	dev -> color_info . dither_grays = eprn -> non_black_levels	878:9:30092:30145	3089705	0	True				
ANR	3090013	AssignmentExpression	dev -> color_info . dither_grays = eprn -> non_black_levels		3089705	0		=			
ANR	3090014	MemberAccess	dev -> color_info . dither_grays		3089705	0					
ANR	3090015	PtrMemberAccess	dev -> color_info		3089705	0					
ANR	3090016	Identifier	dev		3089705	0					
ANR	3090017	Identifier	color_info		3089705	1					
ANR	3090018	Identifier	dither_grays		3089705	1					
ANR	3090019	PtrMemberAccess	eprn -> non_black_levels		3089705	1					
ANR	3090020	Identifier	eprn		3089705	0					
ANR	3090021	Identifier	non_black_levels		3089705	1					
ANR	3090022	IfStatement	if ( eprn -> non_black_levels > 0 )		3089705	3					
ANR	3090023	Condition	eprn -> non_black_levels > 0	879:8:30155:30180	3089705	0	True				
ANR	3090024	RelationalExpression	eprn -> non_black_levels > 0		3089705	0		>			
ANR	3090025	PtrMemberAccess	eprn -> non_black_levels		3089705	0					
ANR	3090026	Identifier	eprn		3089705	0					
ANR	3090027	Identifier	non_black_levels		3089705	1					
ANR	3090028	PrimaryExpression	0		3089705	1					
ANR	3090029	ExpressionStatement	dev -> color_info . dither_colors = eprn -> non_black_levels	880:6:30189:30243	3089705	1	True				
ANR	3090030	AssignmentExpression	dev -> color_info . dither_colors = eprn -> non_black_levels		3089705	0		=			
ANR	3090031	MemberAccess	dev -> color_info . dither_colors		3089705	0					
ANR	3090032	PtrMemberAccess	dev -> color_info		3089705	0					
ANR	3090033	Identifier	dev		3089705	0					
ANR	3090034	Identifier	color_info		3089705	1					
ANR	3090035	Identifier	dither_colors		3089705	1					
ANR	3090036	PtrMemberAccess	eprn -> non_black_levels		3089705	1					
ANR	3090037	Identifier	eprn		3089705	0					
ANR	3090038	Identifier	non_black_levels		3089705	1					
ANR	3090039	ElseStatement	else		3089705	0					
ANR	3090040	ExpressionStatement	dev -> color_info . dither_colors = 0	881:9:30254:30287	3089705	0	True				
ANR	3090041	AssignmentExpression	dev -> color_info . dither_colors = 0		3089705	0		=			
ANR	3090042	MemberAccess	dev -> color_info . dither_colors		3089705	0					
ANR	3090043	PtrMemberAccess	dev -> color_info		3089705	0					
ANR	3090044	Identifier	dev		3089705	0					
ANR	3090045	Identifier	color_info		3089705	1					
ANR	3090046	Identifier	dither_colors		3089705	1					
ANR	3090047	PrimaryExpression	0		3089705	1					
ANR	3090048	ReturnStatement	return ;	884:2:30296:30302	3089705	7	True				
ANR	3090049	ReturnType	static void		3089705	1					
ANR	3090050	Identifier	set_derived_colour_data		3089705	2					
ANR	3090051	ParameterList	eprn_Device * dev		3089705	3					
ANR	3090052	Parameter	eprn_Device * dev	814:36:27114:27129	3089705	0	True				
ANR	3090053	ParameterType	eprn_Device *		3089705	0					
ANR	3090054	Identifier	dev		3089705	1					
ANR	3090055	CFGEntryNode	ENTRY		3089705		True				
ANR	3090056	CFGExitNode	EXIT		3089705		True				
ANR	3090057	Symbol	* dev		3089705						
ANR	3090058	Symbol	eprn -> black_levels		3089705						
ANR	3090059	Symbol	* eprn		3089705						
ANR	3090060	Symbol	dev -> color_info . max_color		3089705						
ANR	3090061	Symbol	dev -> color_info . num_components		3089705						
ANR	3090062	Symbol	eprn		3089705						
ANR	3090063	Symbol	eprn_IR_FloydSteinberg		3089705						
ANR	3090064	Symbol	dev -> color_info . depth		3089705						
ANR	3090065	Symbol	dev -> color_info		3089705						
ANR	3090066	Symbol	& dev -> eprn		3089705						
ANR	3090067	Symbol	eprn -> non_black_levels		3089705						
ANR	3090068	Symbol	dev -> color_info . dither_colors		3089705						
ANR	3090069	Symbol	dev		3089705						
ANR	3090070	Symbol	eprn_IR_halftones		3089705						
ANR	3090071	Symbol	eprn_bits_for_levels		3089705						
ANR	3090072	Symbol	dev -> color_info . max_gray		3089705						
ANR	3090073	Symbol	eprn -> bits_per_colorant		3089705						
ANR	3090074	Symbol	levels		3089705						
ANR	3090075	Symbol	dev -> color_info . dither_grays		3089705						
ANR	3090076	Symbol	eprn -> intensity_rendering		3089705						
ANR	3090077	Function	eprn_put_params	907:0:31108:44478							
ANR	3090078	FunctionDef	"eprn_put_params (gx_device * dev , gs_param_list * plist)"		3090077	0					
ANR	3090079	CompoundStatement		908:0:31166:44478	3090077	0					
ANR	3090080	IdentifierDeclStatement	bool colour_mode_given_and_valid = false ;	909:2:31170:31210	3090077	0	True				
ANR	3090081	IdentifierDecl	colour_mode_given_and_valid = false		3090077	0					
ANR	3090082	IdentifierDeclType	bool		3090077	0					
ANR	3090083	Identifier	colour_mode_given_and_valid		3090077	1					
ANR	3090084	AssignmentExpression	colour_mode_given_and_valid = false		3090077	2		=			
ANR	3090085	Identifier	false		3090077	0					
ANR	3090086	Identifier	false		3090077	1					
ANR	3090087	IdentifierDeclStatement	gs_param_name pname ;	910:2:31214:31233	3090077	1	True				
ANR	3090088	IdentifierDecl	pname		3090077	0					
ANR	3090089	IdentifierDeclType	gs_param_name		3090077	0					
ANR	3090090	Identifier	pname		3090077	1					
ANR	3090091	IdentifierDeclStatement	gs_param_string string_value ;	911:2:31237:31265	3090077	2	True				
ANR	3090092	IdentifierDecl	string_value		3090077	0					
ANR	3090093	IdentifierDeclType	gs_param_string		3090077	0					
ANR	3090094	Identifier	string_value		3090077	1					
ANR	3090095	IdentifierDeclStatement	eprn_Eprn * eprn = & ( ( eprn_Device * ) dev ) -> eprn ;	912:2:31269:31314	3090077	3	True				
ANR	3090096	IdentifierDecl	* eprn = & ( ( eprn_Device * ) dev ) -> eprn		3090077	0					
ANR	3090097	IdentifierDeclType	eprn_Eprn *		3090077	0					
ANR	3090098	Identifier	eprn		3090077	1					
ANR	3090099	AssignmentExpression	* eprn = & ( ( eprn_Device * ) dev ) -> eprn		3090077	2		=			
ANR	3090100	Identifier	eprn		3090077	0					
ANR	3090101	UnaryOperationExpression	& ( ( eprn_Device * ) dev ) -> eprn		3090077	1					
ANR	3090102	UnaryOperator	&		3090077	0					
ANR	3090103	PtrMemberAccess	( ( eprn_Device * ) dev ) -> eprn		3090077	1					
ANR	3090104	CastExpression	( eprn_Device * ) dev		3090077	0					
ANR	3090105	CastTarget	eprn_Device *		3090077	0					
ANR	3090106	Identifier	dev		3090077	1					
ANR	3090107	Identifier	eprn		3090077	1					
ANR	3090108	IdentifierDeclStatement	"const char * epref = eprn -> CUPS_messages ? CUPS_ERRPREF : """" , * wpref = eprn -> CUPS_messages ? CUPS_WARNPREF : """" ;"	913:2:31318:31432	3090077	4	True				
ANR	3090109	IdentifierDecl	"* epref = eprn -> CUPS_messages ? CUPS_ERRPREF : """""		3090077	0					
ANR	3090110	IdentifierDeclType	const char *		3090077	0					
ANR	3090111	Identifier	epref		3090077	1					
ANR	3090112	AssignmentExpression	"* epref = eprn -> CUPS_messages ? CUPS_ERRPREF : """""		3090077	2		=			
ANR	3090113	Identifier	epref		3090077	0					
ANR	3090114	ConditionalExpression	"eprn -> CUPS_messages ? CUPS_ERRPREF : """""		3090077	1					
ANR	3090115	Condition	eprn -> CUPS_messages		3090077	0					
ANR	3090116	PtrMemberAccess	eprn -> CUPS_messages		3090077	0					
ANR	3090117	Identifier	eprn		3090077	0					
ANR	3090118	Identifier	CUPS_messages		3090077	1					
ANR	3090119	Identifier	CUPS_ERRPREF		3090077	1					
ANR	3090120	PrimaryExpression	""""""		3090077	2					
ANR	3090121	IdentifierDecl	"* wpref = eprn -> CUPS_messages ? CUPS_WARNPREF : """""		3090077	1					
ANR	3090122	IdentifierDeclType	const char *		3090077	0					
ANR	3090123	Identifier	wpref		3090077	1					
ANR	3090124	AssignmentExpression	"* wpref = eprn -> CUPS_messages ? CUPS_WARNPREF : """""		3090077	2		=			
ANR	3090125	Identifier	wpref		3090077	0					
ANR	3090126	ConditionalExpression	"eprn -> CUPS_messages ? CUPS_WARNPREF : """""		3090077	1					
ANR	3090127	Condition	eprn -> CUPS_messages		3090077	0					
ANR	3090128	PtrMemberAccess	eprn -> CUPS_messages		3090077	0					
ANR	3090129	Identifier	eprn		3090077	0					
ANR	3090130	Identifier	CUPS_messages		3090077	1					
ANR	3090131	Identifier	CUPS_WARNPREF		3090077	1					
ANR	3090132	PrimaryExpression	""""""		3090077	2					
ANR	3090133	IdentifierDeclStatement	float mediasize [ 2 ] ;	916:2:31436:31454	3090077	5	True				
ANR	3090134	IdentifierDecl	mediasize [ 2 ]		3090077	0					
ANR	3090135	IdentifierDeclType	float [ 2 ]		3090077	0					
ANR	3090136	Identifier	mediasize		3090077	1					
ANR	3090137	PrimaryExpression	2		3090077	2					
ANR	3090138	IdentifierDeclStatement	"int height = dev -> height , last_error = 0 , temp , rc , width = dev -> width ;"	917:2:31458:31548	3090077	6	True				
ANR	3090139	IdentifierDecl	height = dev -> height		3090077	0					
ANR	3090140	IdentifierDeclType	int		3090077	0					
ANR	3090141	Identifier	height		3090077	1					
ANR	3090142	AssignmentExpression	height = dev -> height		3090077	2		=			
ANR	3090143	Identifier	height		3090077	0					
ANR	3090144	PtrMemberAccess	dev -> height		3090077	1					
ANR	3090145	Identifier	dev		3090077	0					
ANR	3090146	Identifier	height		3090077	1					
ANR	3090147	IdentifierDecl	last_error = 0		3090077	1					
ANR	3090148	IdentifierDeclType	int		3090077	0					
ANR	3090149	Identifier	last_error		3090077	1					
ANR	3090150	AssignmentExpression	last_error = 0		3090077	2		=			
ANR	3090151	Identifier	last_error		3090077	0					
ANR	3090152	PrimaryExpression	0		3090077	1					
ANR	3090153	IdentifierDecl	temp		3090077	2					
ANR	3090154	IdentifierDeclType	int		3090077	0					
ANR	3090155	Identifier	temp		3090077	1					
ANR	3090156	IdentifierDecl	rc		3090077	3					
ANR	3090157	IdentifierDeclType	int		3090077	0					
ANR	3090158	Identifier	rc		3090077	1					
ANR	3090159	IdentifierDecl	width = dev -> width		3090077	4					
ANR	3090160	IdentifierDeclType	int		3090077	0					
ANR	3090161	Identifier	width		3090077	1					
ANR	3090162	AssignmentExpression	width = dev -> width		3090077	2		=			
ANR	3090163	Identifier	width		3090077	0					
ANR	3090164	PtrMemberAccess	dev -> width		3090077	1					
ANR	3090165	Identifier	dev		3090077	0					
ANR	3090166	Identifier	width		3090077	1					
ANR	3090167	IfStatement	if ( gs_debug_c ( EPRN_TRACE_CHAR ) )		3090077	7					
ANR	3090168	Condition	gs_debug_c ( EPRN_TRACE_CHAR )	925:6:31575:31601	3090077	0	True				
ANR	3090169	CallExpression	gs_debug_c ( EPRN_TRACE_CHAR )		3090077	0					
ANR	3090170	Callee	gs_debug_c		3090077	0					
ANR	3090171	Identifier	gs_debug_c		3090077	0					
ANR	3090172	ArgumentList	EPRN_TRACE_CHAR		3090077	1					
ANR	3090173	Argument	EPRN_TRACE_CHAR		3090077	0					
ANR	3090174	Identifier	EPRN_TRACE_CHAR		3090077	0					
ANR	3090175	CompoundStatement		18:35:437:437	3090077	1					
ANR	3090176	ExpressionStatement	"dmlprintf ( dev -> memory , ""! eprn_put_params() called with the following device parameters:\\n"" )"	926:4:31610:31708	3090077	0	True				
ANR	3090177	CallExpression	"dmlprintf ( dev -> memory , ""! eprn_put_params() called with the following device parameters:\\n"" )"		3090077	0					
ANR	3090178	Callee	dmlprintf		3090077	0					
ANR	3090179	Identifier	dmlprintf		3090077	0					
ANR	3090180	ArgumentList	dev -> memory		3090077	1					
ANR	3090181	Argument	dev -> memory		3090077	0					
ANR	3090182	PtrMemberAccess	dev -> memory		3090077	0					
ANR	3090183	Identifier	dev		3090077	0					
ANR	3090184	Identifier	memory		3090077	1					
ANR	3090185	Argument	"""! eprn_put_params() called with the following device parameters:\\n"""		3090077	1					
ANR	3090186	PrimaryExpression	"""! eprn_put_params() called with the following device parameters:\\n"""		3090077	0					
ANR	3090187	ExpressionStatement	eprn_dump_parameter_list ( plist )	928:4:31714:31745	3090077	1	True				
ANR	3090188	CallExpression	eprn_dump_parameter_list ( plist )		3090077	0					
ANR	3090189	Callee	eprn_dump_parameter_list		3090077	0					
ANR	3090190	Identifier	eprn_dump_parameter_list		3090077	0					
ANR	3090191	ArgumentList	plist		3090077	1					
ANR	3090192	Argument	plist		3090077	0					
ANR	3090193	Identifier	plist		3090077	0					
ANR	3090194	ExpressionStatement	eprn_replace_fillpage ( dev )	932:2:31779:31805	3090077	8	True				
ANR	3090195	CallExpression	eprn_replace_fillpage ( dev )		3090077	0					
ANR	3090196	Callee	eprn_replace_fillpage		3090077	0					
ANR	3090197	Identifier	eprn_replace_fillpage		3090077	0					
ANR	3090198	ArgumentList	dev		3090077	1					
ANR	3090199	Argument	dev		3090077	0					
ANR	3090200	Identifier	dev		3090077	0					
ANR	3090201	ForStatement	for ( temp = 0 ; temp < 2 ; temp ++ )		3090077	9					
ANR	3090202	ForInit	temp = 0 ;	935:7:31850:31858	3090077	0	True				
ANR	3090203	AssignmentExpression	temp = 0		3090077	0		=			
ANR	3090204	Identifier	temp		3090077	0					
ANR	3090205	PrimaryExpression	0		3090077	1					
ANR	3090206	Condition	temp < 2	935:17:31860:31867	3090077	1	True				
ANR	3090207	RelationalExpression	temp < 2		3090077	0		<			
ANR	3090208	Identifier	temp		3090077	0					
ANR	3090209	PrimaryExpression	2		3090077	1					
ANR	3090210	PostIncDecOperationExpression	temp ++	935:27:31870:31875	3090077	2	True				
ANR	3090211	Identifier	temp		3090077	0					
ANR	3090212	IncDec	++		3090077	1					
ANR	3090213	ExpressionStatement	mediasize [ temp ] = dev -> MediaSize [ temp ]	935:35:31878:31916	3090077	3	True				
ANR	3090214	AssignmentExpression	mediasize [ temp ] = dev -> MediaSize [ temp ]		3090077	0		=			
ANR	3090215	ArrayIndexing	mediasize [ temp ]		3090077	0					
ANR	3090216	Identifier	mediasize		3090077	0					
ANR	3090217	Identifier	temp		3090077	1					
ANR	3090218	ArrayIndexing	dev -> MediaSize [ temp ]		3090077	1					
ANR	3090219	PtrMemberAccess	dev -> MediaSize		3090077	0					
ANR	3090220	Identifier	dev		3090077	0					
ANR	3090221	Identifier	MediaSize		3090077	1					
ANR	3090222	Identifier	temp		3090077	1					
ANR	3090223	IfStatement	"if ( ( rc = param_read_bool ( plist , ""CUPSMessages"" , & eprn -> CUPS_messages ) ) == 0 )"		3090077	10					
ANR	3090224	Condition	"( rc = param_read_bool ( plist , ""CUPSMessages"" , & eprn -> CUPS_messages ) ) == 0"	944:6:32422:32493	3090077	0	True				
ANR	3090225	EqualityExpression	"( rc = param_read_bool ( plist , ""CUPSMessages"" , & eprn -> CUPS_messages ) ) == 0"		3090077	0		==			
ANR	3090226	AssignmentExpression	"rc = param_read_bool ( plist , ""CUPSMessages"" , & eprn -> CUPS_messages )"		3090077	0		=			
ANR	3090227	Identifier	rc		3090077	0					
ANR	3090228	CallExpression	"param_read_bool ( plist , ""CUPSMessages"" , & eprn -> CUPS_messages )"		3090077	1					
ANR	3090229	Callee	param_read_bool		3090077	0					
ANR	3090230	Identifier	param_read_bool		3090077	0					
ANR	3090231	ArgumentList	plist		3090077	1					
ANR	3090232	Argument	plist		3090077	0					
ANR	3090233	Identifier	plist		3090077	0					
ANR	3090234	Argument	"""CUPSMessages"""		3090077	1					
ANR	3090235	PrimaryExpression	"""CUPSMessages"""		3090077	0					
ANR	3090236	Argument	& eprn -> CUPS_messages		3090077	2					
ANR	3090237	UnaryOperationExpression	& eprn -> CUPS_messages		3090077	0					
ANR	3090238	UnaryOperator	&		3090077	0					
ANR	3090239	PtrMemberAccess	eprn -> CUPS_messages		3090077	1					
ANR	3090240	Identifier	eprn		3090077	0					
ANR	3090241	Identifier	CUPS_messages		3090077	1					
ANR	3090242	PrimaryExpression	0		3090077	1					
ANR	3090243	CompoundStatement		38:2:1331:1331	3090077	1					
ANR	3090244	ExpressionStatement	"epref = eprn -> CUPS_messages ? CUPS_ERRPREF : """""	946:4:32504:32549	3090077	0	True				
ANR	3090245	AssignmentExpression	"epref = eprn -> CUPS_messages ? CUPS_ERRPREF : """""		3090077	0		=			
ANR	3090246	Identifier	epref		3090077	0					
ANR	3090247	ConditionalExpression	"eprn -> CUPS_messages ? CUPS_ERRPREF : """""		3090077	1					
ANR	3090248	Condition	eprn -> CUPS_messages		3090077	0					
ANR	3090249	PtrMemberAccess	eprn -> CUPS_messages		3090077	0					
ANR	3090250	Identifier	eprn		3090077	0					
ANR	3090251	Identifier	CUPS_messages		3090077	1					
ANR	3090252	Identifier	CUPS_ERRPREF		3090077	1					
ANR	3090253	PrimaryExpression	""""""		3090077	2					
ANR	3090254	ExpressionStatement	"wpref = eprn -> CUPS_messages ? CUPS_WARNPREF : """""	947:4:32555:32601	3090077	1	True				
ANR	3090255	AssignmentExpression	"wpref = eprn -> CUPS_messages ? CUPS_WARNPREF : """""		3090077	0		=			
ANR	3090256	Identifier	wpref		3090077	0					
ANR	3090257	ConditionalExpression	"eprn -> CUPS_messages ? CUPS_WARNPREF : """""		3090077	1					
ANR	3090258	Condition	eprn -> CUPS_messages		3090077	0					
ANR	3090259	PtrMemberAccess	eprn -> CUPS_messages		3090077	0					
ANR	3090260	Identifier	eprn		3090077	0					
ANR	3090261	Identifier	CUPS_messages		3090077	1					
ANR	3090262	Identifier	CUPS_WARNPREF		3090077	1					
ANR	3090263	PrimaryExpression	""""""		3090077	2					
ANR	3090264	ElseStatement	else		3090077	0					
ANR	3090265	IfStatement	if ( rc < 0 )		3090077	0					
ANR	3090266	Condition	rc < 0	949:11:32618:32623	3090077	0	True				
ANR	3090267	RelationalExpression	rc < 0		3090077	0		<			
ANR	3090268	Identifier	rc		3090077	0					
ANR	3090269	PrimaryExpression	0		3090077	1					
ANR	3090270	ExpressionStatement	last_error = rc	949:19:32626:32641	3090077	1	True				
ANR	3090271	AssignmentExpression	last_error = rc		3090077	0		=			
ANR	3090272	Identifier	last_error		3090077	0					
ANR	3090273	Identifier	rc		3090077	1					
ANR	3090274	Statement	define	954:1:32775:32780	3090077	11	True				
ANR	3090275	Statement	colour_model	954:8:32782:32793	3090077	12	True				
ANR	3090276	Statement	(	954:20:32794:32794	3090077	13	True				
ANR	3090277	Statement	option	954:21:32795:32800	3090077	14	True				
ANR	3090278	Statement	)	954:27:32801:32801	3090077	15	True				
ANR	3090279	IfStatement	"if ( ( rc = param_read_string ( plist , ( pname = option ) , & string_value ) ) == 0 )"		3090077	16					
ANR	3090280	Condition	"( rc = param_read_string ( plist , ( pname = option ) , & string_value ) ) == 0"	955:6:32854:32922	3090077	0	True				
ANR	3090281	EqualityExpression	"( rc = param_read_string ( plist , ( pname = option ) , & string_value ) ) == 0"		3090077	0		==			
ANR	3090282	AssignmentExpression	"rc = param_read_string ( plist , ( pname = option ) , & string_value )"		3090077	0		=			
ANR	3090283	Identifier	rc		3090077	0					
ANR	3090284	CallExpression	"param_read_string ( plist , ( pname = option ) , & string_value )"		3090077	1					
ANR	3090285	Callee	param_read_string		3090077	0					
ANR	3090286	Identifier	param_read_string		3090077	0					
ANR	3090287	ArgumentList	plist		3090077	1					
ANR	3090288	Argument	plist		3090077	0					
ANR	3090289	Identifier	plist		3090077	0					
ANR	3090290	Argument	pname = option		3090077	1					
ANR	3090291	AssignmentExpression	pname = option		3090077	0		=			
ANR	3090292	Identifier	pname		3090077	0					
ANR	3090293	Identifier	option		3090077	1					
ANR	3090294	Argument	& string_value		3090077	2					
ANR	3090295	UnaryOperationExpression	& string_value		3090077	0					
ANR	3090296	UnaryOperator	&		3090077	0					
ANR	3090297	Identifier	string_value		3090077	1					
ANR	3090298	PrimaryExpression	0		3090077	1					
ANR	3090299	CompoundStatement		48:77:1758:1758	3090077	1					
ANR	3090300	ExpressionStatement	"rc = eprn_get_int ( & string_value , eprn_colour_model_list , & temp )"	956:4:32933:32996	3090077	0	True				
ANR	3090301	AssignmentExpression	"rc = eprn_get_int ( & string_value , eprn_colour_model_list , & temp )"		3090077	0		=			
ANR	3090302	Identifier	rc		3090077	0					
ANR	3090303	CallExpression	"eprn_get_int ( & string_value , eprn_colour_model_list , & temp )"		3090077	1					
ANR	3090304	Callee	eprn_get_int		3090077	0					
ANR	3090305	Identifier	eprn_get_int		3090077	0					
ANR	3090306	ArgumentList	& string_value		3090077	1					
ANR	3090307	Argument	& string_value		3090077	0					
ANR	3090308	UnaryOperationExpression	& string_value		3090077	0					
ANR	3090309	UnaryOperator	&		3090077	0					
ANR	3090310	Identifier	string_value		3090077	1					
ANR	3090311	Argument	eprn_colour_model_list		3090077	1					
ANR	3090312	Identifier	eprn_colour_model_list		3090077	0					
ANR	3090313	Argument	& temp		3090077	2					
ANR	3090314	UnaryOperationExpression	& temp		3090077	0					
ANR	3090315	UnaryOperator	&		3090077	0					
ANR	3090316	Identifier	temp		3090077	1					
ANR	3090317	IfStatement	if ( rc != 0 )		3090077	1					
ANR	3090318	Condition	rc != 0	957:8:33011:33017	3090077	0	True				
ANR	3090319	EqualityExpression	rc != 0		3090077	0		!=			
ANR	3090320	Identifier	rc		3090077	0					
ANR	3090321	PrimaryExpression	0		3090077	1					
ANR	3090322	CompoundStatement		50:17:1853:1853	3090077	1					
ANR	3090323	IfStatement	if ( rc != gs_error_VMerror )		3090077	0					
ANR	3090324	Condition	rc != gs_error_VMerror	958:10:33087:33108	3090077	0	True				
ANR	3090325	EqualityExpression	rc != gs_error_VMerror		3090077	0		!=			
ANR	3090326	Identifier	rc		3090077	0					
ANR	3090327	Identifier	gs_error_VMerror		3090077	1					
ANR	3090328	CompoundStatement		51:34:1944:1944	3090077	1					
ANR	3090329	Statement	eprintf1	959:8:33159:33166	3090077	0	True				
ANR	3090330	Statement	(	959:16:33167:33167	3090077	1	True				
ANR	3090331	Statement	"""%s"""	959:17:33168:33171	3090077	2	True				
ANR	3090332	Statement	ERRPREF	959:22:33173:33179	3090077	3	True				
ANR	3090333	Statement	"""Unknown colour model: `"""	959:30:33181:33205	3090077	4	True				
ANR	3090334	Statement	","	959:55:33206:33206	3090077	5	True				
ANR	3090335	Statement	epref	959:57:33208:33212	3090077	6	True				
ANR	3090336	Statement	)	959:62:33213:33213	3090077	7	True				
ANR	3090337	ExpressionStatement		959:63:33214:33214	3090077	8	True				
ANR	3090338	ExpressionStatement	"errwrite ( dev -> memory , ( const char * ) string_value . data , sizeof ( char ) * string_value . size )"	960:8:33233:33319	3090077	9	True				
ANR	3090339	CallExpression	"errwrite ( dev -> memory , ( const char * ) string_value . data , sizeof ( char ) * string_value . size )"		3090077	0					
ANR	3090340	Callee	errwrite		3090077	0					
ANR	3090341	Identifier	errwrite		3090077	0					
ANR	3090342	ArgumentList	dev -> memory		3090077	1					
ANR	3090343	Argument	dev -> memory		3090077	0					
ANR	3090344	PtrMemberAccess	dev -> memory		3090077	0					
ANR	3090345	Identifier	dev		3090077	0					
ANR	3090346	Identifier	memory		3090077	1					
ANR	3090347	Argument	( const char * ) string_value . data		3090077	1					
ANR	3090348	CastExpression	( const char * ) string_value . data		3090077	0					
ANR	3090349	CastTarget	const char *		3090077	0					
ANR	3090350	MemberAccess	string_value . data		3090077	1					
ANR	3090351	Identifier	string_value		3090077	0					
ANR	3090352	Identifier	data		3090077	1					
ANR	3090353	Argument	sizeof ( char ) * string_value . size		3090077	2					
ANR	3090354	MultiplicativeExpression	sizeof ( char ) * string_value . size		3090077	0		*			
ANR	3090355	SizeofExpression	sizeof ( char )		3090077	0					
ANR	3090356	Sizeof	sizeof		3090077	0					
ANR	3090357	SizeofOperand	char		3090077	1					
ANR	3090358	MemberAccess	string_value . size		3090077	1					
ANR	3090359	Identifier	string_value		3090077	0					
ANR	3090360	Identifier	size		3090077	1					
ANR	3090361	ExpressionStatement	"eprintf ( ""'.\\n"" )"	961:8:33331:33346	3090077	10	True				
ANR	3090362	CallExpression	"eprintf ( ""'.\\n"" )"		3090077	0					
ANR	3090363	Callee	eprintf		3090077	0					
ANR	3090364	Identifier	eprintf		3090077	0					
ANR	3090365	ArgumentList	"""'.\\n"""		3090077	1					
ANR	3090366	Argument	"""'.\\n"""		3090077	0					
ANR	3090367	PrimaryExpression	"""'.\\n"""		3090077	0					
ANR	3090368	ExpressionStatement	last_error = rc	963:6:33477:33492	3090077	1	True				
ANR	3090369	AssignmentExpression	last_error = rc		3090077	0		=			
ANR	3090370	Identifier	last_error		3090077	0					
ANR	3090371	Identifier	rc		3090077	1					
ANR	3090372	ExpressionStatement	"param_signal_error ( plist , pname , last_error )"	964:6:33551:33595	3090077	2	True				
ANR	3090373	CallExpression	"param_signal_error ( plist , pname , last_error )"		3090077	0					
ANR	3090374	Callee	param_signal_error		3090077	0					
ANR	3090375	Identifier	param_signal_error		3090077	0					
ANR	3090376	ArgumentList	plist		3090077	1					
ANR	3090377	Argument	plist		3090077	0					
ANR	3090378	Identifier	plist		3090077	0					
ANR	3090379	Argument	pname		3090077	1					
ANR	3090380	Identifier	pname		3090077	0					
ANR	3090381	Argument	last_error		3090077	2					
ANR	3090382	Identifier	last_error		3090077	0					
ANR	3090383	ElseStatement	else		3090077	0					
ANR	3090384	ExpressionStatement	colour_mode_given_and_valid = true	966:9:33702:33736	3090077	0	True				
ANR	3090385	AssignmentExpression	colour_mode_given_and_valid = true		3090077	0		=			
ANR	3090386	Identifier	colour_mode_given_and_valid		3090077	0					
ANR	3090387	Identifier	true		3090077	1					
ANR	3090388	ElseStatement	else		3090077	0					
ANR	3090389	IfStatement	if ( rc < 0 )		3090077	0					
ANR	3090390	Condition	rc < 0	968:11:33852:33857	3090077	0	True				
ANR	3090391	RelationalExpression	rc < 0		3090077	0		<			
ANR	3090392	Identifier	rc		3090077	0					
ANR	3090393	PrimaryExpression	0		3090077	1					
ANR	3090394	ExpressionStatement	last_error = rc	968:19:33860:33875	3090077	1	True				
ANR	3090395	AssignmentExpression	last_error = rc		3090077	0		=			
ANR	3090396	Identifier	last_error		3090077	0					
ANR	3090397	Identifier	rc		3090077	1					
ANR	3090398	Statement	colour_model	970:2:33880:33891	3090077	17	True				
ANR	3090399	Statement	(	970:14:33892:33892	3090077	18	True				
ANR	3090400	Statement	"""ColorModel"""	970:15:33893:33904	3090077	19	True				
ANR	3090401	Statement	)	970:27:33905:33905	3090077	20	True				
ANR	3090402	Statement	colour_model	971:2:33909:33920	3090077	21	True				
ANR	3090403	Statement	(	971:14:33921:33921	3090077	22	True				
ANR	3090404	Statement	"""ColourModel"""	971:15:33922:33934	3090077	23	True				
ANR	3090405	Statement	)	971:28:33935:33935	3090077	24	True				
ANR	3090406	Statement	undef	973:1:33975:33979	3090077	25	True				
ANR	3090407	Statement	colour_model	973:7:33981:33992	3090077	26	True				
ANR	3090408	IfStatement	if ( colour_mode_given_and_valid )		3090077	27					
ANR	3090409	Condition	colour_mode_given_and_valid	975:6:34001:34027	3090077	0	True				
ANR	3090410	Identifier	colour_mode_given_and_valid		3090077	0					
ANR	3090411	CompoundStatement		68:35:2863:2863	3090077	1					
ANR	3090412	IfStatement	if ( eprn -> colour_model != temp && dev -> is_open )		3090077	0					
ANR	3090413	Condition	eprn -> colour_model != temp && dev -> is_open	976:8:34040:34081	3090077	0	True				
ANR	3090414	AndExpression	eprn -> colour_model != temp && dev -> is_open		3090077	0		&&			
ANR	3090415	EqualityExpression	eprn -> colour_model != temp		3090077	0		!=			
ANR	3090416	PtrMemberAccess	eprn -> colour_model		3090077	0					
ANR	3090417	Identifier	eprn		3090077	0					
ANR	3090418	Identifier	colour_model		3090077	1					
ANR	3090419	Identifier	temp		3090077	1					
ANR	3090420	PtrMemberAccess	dev -> is_open		3090077	1					
ANR	3090421	Identifier	dev		3090077	0					
ANR	3090422	Identifier	is_open		3090077	1					
ANR	3090423	ExpressionStatement	gs_closedevice ( dev )	976:52:34084:34103	3090077	1	True				
ANR	3090424	CallExpression	gs_closedevice ( dev )		3090077	0					
ANR	3090425	Callee	gs_closedevice		3090077	0					
ANR	3090426	Identifier	gs_closedevice		3090077	0					
ANR	3090427	ArgumentList	dev		3090077	1					
ANR	3090428	Argument	dev		3090077	0					
ANR	3090429	Identifier	dev		3090077	0					
ANR	3090430	ExpressionStatement	eprn -> colour_model = temp	978:4:34182:34207	3090077	1	True				
ANR	3090431	AssignmentExpression	eprn -> colour_model = temp		3090077	0		=			
ANR	3090432	PtrMemberAccess	eprn -> colour_model		3090077	0					
ANR	3090433	Identifier	eprn		3090077	0					
ANR	3090434	Identifier	colour_model		3090077	1					
ANR	3090435	Identifier	temp		3090077	1					
ANR	3090436	SwitchStatement	switch ( eprn -> colour_model )		3090077	2					
ANR	3090437	Condition	eprn -> colour_model	981:11:34259:34276	3090077	0	True				
ANR	3090438	PtrMemberAccess	eprn -> colour_model		3090077	0					
ANR	3090439	Identifier	eprn		3090077	0					
ANR	3090440	Identifier	colour_model		3090077	1					
ANR	3090441	CompoundStatement		74:31:3112:3112	3090077	1					
ANR	3090442	Label	case eprn_DeviceGray :	982:4:34285:34305	3090077	0	True				
ANR	3090443	Identifier	eprn_DeviceGray		3090077	0					
ANR	3090444	ExpressionStatement	dev -> color_info . num_components = 1	983:6:34313:34347	3090077	1	True				
ANR	3090445	AssignmentExpression	dev -> color_info . num_components = 1		3090077	0		=			
ANR	3090446	MemberAccess	dev -> color_info . num_components		3090077	0					
ANR	3090447	PtrMemberAccess	dev -> color_info		3090077	0					
ANR	3090448	Identifier	dev		3090077	0					
ANR	3090449	Identifier	color_info		3090077	1					
ANR	3090450	Identifier	num_components		3090077	1					
ANR	3090451	PrimaryExpression	1		3090077	1					
ANR	3090452	BreakStatement	break ;	983:42:34349:34354	3090077	2	True				
ANR	3090453	Label	case eprn_DeviceRGB :	984:4:34360:34379	3090077	3	True				
ANR	3090454	Identifier	eprn_DeviceRGB		3090077	0					
ANR	3090455	Label	case eprn_DeviceCMY :	986:4:34407:34426	3090077	4	True				
ANR	3090456	Identifier	eprn_DeviceCMY		3090077	0					
ANR	3090457	Label	case eprn_DeviceCMY_plus_K :	988:4:34454:34480	3090077	5	True				
ANR	3090458	Identifier	eprn_DeviceCMY_plus_K		3090077	0					
ANR	3090459	ExpressionStatement	dev -> color_info . num_components = 3	989:6:34488:34522	3090077	6	True				
ANR	3090460	AssignmentExpression	dev -> color_info . num_components = 3		3090077	0		=			
ANR	3090461	MemberAccess	dev -> color_info . num_components		3090077	0					
ANR	3090462	PtrMemberAccess	dev -> color_info		3090077	0					
ANR	3090463	Identifier	dev		3090077	0					
ANR	3090464	Identifier	color_info		3090077	1					
ANR	3090465	Identifier	num_components		3090077	1					
ANR	3090466	PrimaryExpression	3		3090077	1					
ANR	3090467	BreakStatement	break ;	989:42:34524:34529	3090077	7	True				
ANR	3090468	Label	case eprn_DeviceCMYK :	990:4:34535:34555	3090077	8	True				
ANR	3090469	Identifier	eprn_DeviceCMYK		3090077	0					
ANR	3090470	ExpressionStatement	dev -> color_info . num_components = 4	991:6:34563:34597	3090077	9	True				
ANR	3090471	AssignmentExpression	dev -> color_info . num_components = 4		3090077	0		=			
ANR	3090472	MemberAccess	dev -> color_info . num_components		3090077	0					
ANR	3090473	PtrMemberAccess	dev -> color_info		3090077	0					
ANR	3090474	Identifier	dev		3090077	0					
ANR	3090475	Identifier	color_info		3090077	1					
ANR	3090476	Identifier	num_components		3090077	1					
ANR	3090477	PrimaryExpression	4		3090077	1					
ANR	3090478	BreakStatement	break ;	991:42:34599:34604	3090077	10	True				
ANR	3090479	Label	default :	992:4:34610:34617	3090077	11	True				
ANR	3090480	Identifier	default		3090077	0					
ANR	3090481	ExpressionStatement	assert ( 0 )	993:6:34625:34634	3090077	12	True				
ANR	3090482	CallExpression	assert ( 0 )		3090077	0					
ANR	3090483	Callee	assert		3090077	0					
ANR	3090484	Identifier	assert		3090077	0					
ANR	3090485	ArgumentList	0		3090077	1					
ANR	3090486	Argument	0		3090077	0					
ANR	3090487	PrimaryExpression	0		3090077	0					
ANR	3090488	ExpressionStatement	dev -> color_info . polarity = dci_std_polarity ( dev -> color_info . num_components )	996:4:34647:34730	3090077	3	True				
ANR	3090489	AssignmentExpression	dev -> color_info . polarity = dci_std_polarity ( dev -> color_info . num_components )		3090077	0		=			
ANR	3090490	MemberAccess	dev -> color_info . polarity		3090077	0					
ANR	3090491	PtrMemberAccess	dev -> color_info		3090077	0					
ANR	3090492	Identifier	dev		3090077	0					
ANR	3090493	Identifier	color_info		3090077	1					
ANR	3090494	Identifier	polarity		3090077	1					
ANR	3090495	CallExpression	dci_std_polarity ( dev -> color_info . num_components )		3090077	1					
ANR	3090496	Callee	dci_std_polarity		3090077	0					
ANR	3090497	Identifier	dci_std_polarity		3090077	0					
ANR	3090498	ArgumentList	dev -> color_info . num_components		3090077	1					
ANR	3090499	Argument	dev -> color_info . num_components		3090077	0					
ANR	3090500	MemberAccess	dev -> color_info . num_components		3090077	0					
ANR	3090501	PtrMemberAccess	dev -> color_info		3090077	0					
ANR	3090502	Identifier	dev		3090077	0					
ANR	3090503	Identifier	color_info		3090077	1					
ANR	3090504	Identifier	num_components		3090077	1					
ANR	3090505	IfStatement	if ( eprn -> colour_model == eprn_DeviceCMY || eprn -> colour_model == eprn_DeviceRGB )		3090077	4					
ANR	3090506	Condition	eprn -> colour_model == eprn_DeviceCMY || eprn -> colour_model == eprn_DeviceRGB	1000:8:34771:34854	3090077	0	True				
ANR	3090507	OrExpression	eprn -> colour_model == eprn_DeviceCMY || eprn -> colour_model == eprn_DeviceRGB		3090077	0		||			
ANR	3090508	EqualityExpression	eprn -> colour_model == eprn_DeviceCMY		3090077	0		==			
ANR	3090509	PtrMemberAccess	eprn -> colour_model		3090077	0					
ANR	3090510	Identifier	eprn		3090077	0					
ANR	3090511	Identifier	colour_model		3090077	1					
ANR	3090512	Identifier	eprn_DeviceCMY		3090077	1					
ANR	3090513	EqualityExpression	eprn -> colour_model == eprn_DeviceRGB		3090077	1		==			
ANR	3090514	PtrMemberAccess	eprn -> colour_model		3090077	0					
ANR	3090515	Identifier	eprn		3090077	0					
ANR	3090516	Identifier	colour_model		3090077	1					
ANR	3090517	Identifier	eprn_DeviceRGB		3090077	1					
ANR	3090518	CompoundStatement		94:46:3690:3690	3090077	1					
ANR	3090519	IfStatement	if ( eprn -> black_levels != 0 )		3090077	0					
ANR	3090520	Condition	eprn -> black_levels != 0	1002:10:34869:34891	3090077	0	True				
ANR	3090521	EqualityExpression	eprn -> black_levels != 0		3090077	0		!=			
ANR	3090522	PtrMemberAccess	eprn -> black_levels		3090077	0					
ANR	3090523	Identifier	eprn		3090077	0					
ANR	3090524	Identifier	black_levels		3090077	1					
ANR	3090525	PrimaryExpression	0		3090077	1					
ANR	3090526	ExpressionStatement	eprn -> black_levels = 0	1002:35:34894:34916	3090077	1	True				
ANR	3090527	AssignmentExpression	eprn -> black_levels = 0		3090077	0		=			
ANR	3090528	PtrMemberAccess	eprn -> black_levels		3090077	0					
ANR	3090529	Identifier	eprn		3090077	0					
ANR	3090530	Identifier	black_levels		3090077	1					
ANR	3090531	PrimaryExpression	0		3090077	1					
ANR	3090532	ElseStatement	else		3090077	0					
ANR	3090533	IfStatement	if ( eprn -> black_levels == 0 )		3090077	0					
ANR	3090534	Condition	eprn -> black_levels == 0	1005:10:34943:34965	3090077	0	True				
ANR	3090535	EqualityExpression	eprn -> black_levels == 0		3090077	0		==			
ANR	3090536	PtrMemberAccess	eprn -> black_levels		3090077	0					
ANR	3090537	Identifier	eprn		3090077	0					
ANR	3090538	Identifier	black_levels		3090077	1					
ANR	3090539	PrimaryExpression	0		3090077	1					
ANR	3090540	ExpressionStatement	eprn -> black_levels = 2	1005:35:34968:34990	3090077	1	True				
ANR	3090541	AssignmentExpression	eprn -> black_levels = 2		3090077	0		=			
ANR	3090542	PtrMemberAccess	eprn -> black_levels		3090077	0					
ANR	3090543	Identifier	eprn		3090077	0					
ANR	3090544	Identifier	black_levels		3090077	1					
ANR	3090545	PrimaryExpression	2		3090077	1					
ANR	3090546	IfStatement	if ( dev -> color_info . num_components > 1 && eprn -> non_black_levels <= 0 )		3090077	5					
ANR	3090547	Condition	dev -> color_info . num_components > 1 && eprn -> non_black_levels <= 0	1007:8:35067:35131	3090077	0	True				
ANR	3090548	AndExpression	dev -> color_info . num_components > 1 && eprn -> non_black_levels <= 0		3090077	0		&&			
ANR	3090549	RelationalExpression	dev -> color_info . num_components > 1		3090077	0		>			
ANR	3090550	MemberAccess	dev -> color_info . num_components		3090077	0					
ANR	3090551	PtrMemberAccess	dev -> color_info		3090077	0					
ANR	3090552	Identifier	dev		3090077	0					
ANR	3090553	Identifier	color_info		3090077	1					
ANR	3090554	Identifier	num_components		3090077	1					
ANR	3090555	PrimaryExpression	1		3090077	1					
ANR	3090556	RelationalExpression	eprn -> non_black_levels <= 0		3090077	1		<=			
ANR	3090557	PtrMemberAccess	eprn -> non_black_levels		3090077	0					
ANR	3090558	Identifier	eprn		3090077	0					
ANR	3090559	Identifier	non_black_levels		3090077	1					
ANR	3090560	PrimaryExpression	0		3090077	1					
ANR	3090561	ExpressionStatement	eprn -> non_black_levels = 2	1008:6:35140:35166	3090077	1	True				
ANR	3090562	AssignmentExpression	eprn -> non_black_levels = 2		3090077	0		=			
ANR	3090563	PtrMemberAccess	eprn -> non_black_levels		3090077	0					
ANR	3090564	Identifier	eprn		3090077	0					
ANR	3090565	Identifier	non_black_levels		3090077	1					
ANR	3090566	PrimaryExpression	2		3090077	1					
ANR	3090567	IfStatement	"if ( ( rc = param_read_int ( plist , ( pname = ""BlackLevels"" ) , & temp ) ) == 0 )"		3090077	28					
ANR	3090568	Condition	"( rc = param_read_int ( plist , ( pname = ""BlackLevels"" ) , & temp ) ) == 0"	1015:6:35377:35441	3090077	0	True				
ANR	3090569	EqualityExpression	"( rc = param_read_int ( plist , ( pname = ""BlackLevels"" ) , & temp ) ) == 0"		3090077	0		==			
ANR	3090570	AssignmentExpression	"rc = param_read_int ( plist , ( pname = ""BlackLevels"" ) , & temp )"		3090077	0		=			
ANR	3090571	Identifier	rc		3090077	0					
ANR	3090572	CallExpression	"param_read_int ( plist , ( pname = ""BlackLevels"" ) , & temp )"		3090077	1					
ANR	3090573	Callee	param_read_int		3090077	0					
ANR	3090574	Identifier	param_read_int		3090077	0					
ANR	3090575	ArgumentList	plist		3090077	1					
ANR	3090576	Argument	plist		3090077	0					
ANR	3090577	Identifier	plist		3090077	0					
ANR	3090578	Argument	"pname = ""BlackLevels"""		3090077	1					
ANR	3090579	AssignmentExpression	"pname = ""BlackLevels"""		3090077	0		=			
ANR	3090580	Identifier	pname		3090077	0					
ANR	3090581	PrimaryExpression	"""BlackLevels"""		3090077	1					
ANR	3090582	Argument	& temp		3090077	2					
ANR	3090583	UnaryOperationExpression	& temp		3090077	0					
ANR	3090584	UnaryOperator	&		3090077	0					
ANR	3090585	Identifier	temp		3090077	1					
ANR	3090586	PrimaryExpression	0		3090077	1					
ANR	3090587	CompoundStatement		108:73:4277:4277	3090077	1					
ANR	3090588	IfStatement	if ( ( temp == 0 && ( eprn -> colour_model == eprn_DeviceRGB || eprn -> colour_model == eprn_DeviceCMY ) ) || ( 2 <= temp && temp <= 256 && eprn -> colour_model != eprn_DeviceRGB && eprn -> colour_model != eprn_DeviceCMY ) )		3090077	0					
ANR	3090589	Condition	( temp == 0 && ( eprn -> colour_model == eprn_DeviceRGB || eprn -> colour_model == eprn_DeviceCMY ) ) || ( 2 <= temp && temp <= 256 && eprn -> colour_model != eprn_DeviceRGB && eprn -> colour_model != eprn_DeviceCMY )	1016:8:35454:35705	3090077	0	True				
ANR	3090590	OrExpression	( temp == 0 && ( eprn -> colour_model == eprn_DeviceRGB || eprn -> colour_model == eprn_DeviceCMY ) ) || ( 2 <= temp && temp <= 256 && eprn -> colour_model != eprn_DeviceRGB && eprn -> colour_model != eprn_DeviceCMY )		3090077	0		||			
ANR	3090591	AndExpression	temp == 0 && ( eprn -> colour_model == eprn_DeviceRGB || eprn -> colour_model == eprn_DeviceCMY )		3090077	0		&&			
ANR	3090592	EqualityExpression	temp == 0		3090077	0		==			
ANR	3090593	Identifier	temp		3090077	0					
ANR	3090594	PrimaryExpression	0		3090077	1					
ANR	3090595	OrExpression	eprn -> colour_model == eprn_DeviceRGB || eprn -> colour_model == eprn_DeviceCMY		3090077	1		||			
ANR	3090596	EqualityExpression	eprn -> colour_model == eprn_DeviceRGB		3090077	0		==			
ANR	3090597	PtrMemberAccess	eprn -> colour_model		3090077	0					
ANR	3090598	Identifier	eprn		3090077	0					
ANR	3090599	Identifier	colour_model		3090077	1					
ANR	3090600	Identifier	eprn_DeviceRGB		3090077	1					
ANR	3090601	EqualityExpression	eprn -> colour_model == eprn_DeviceCMY		3090077	1		==			
ANR	3090602	PtrMemberAccess	eprn -> colour_model		3090077	0					
ANR	3090603	Identifier	eprn		3090077	0					
ANR	3090604	Identifier	colour_model		3090077	1					
ANR	3090605	Identifier	eprn_DeviceCMY		3090077	1					
ANR	3090606	AndExpression	2 <= temp && temp <= 256 && eprn -> colour_model != eprn_DeviceRGB && eprn -> colour_model != eprn_DeviceCMY		3090077	1		&&			
ANR	3090607	RelationalExpression	2 <= temp		3090077	0		<=			
ANR	3090608	PrimaryExpression	2		3090077	0					
ANR	3090609	Identifier	temp		3090077	1					
ANR	3090610	AndExpression	temp <= 256 && eprn -> colour_model != eprn_DeviceRGB && eprn -> colour_model != eprn_DeviceCMY		3090077	1		&&			
ANR	3090611	RelationalExpression	temp <= 256		3090077	0		<=			
ANR	3090612	Identifier	temp		3090077	0					
ANR	3090613	PrimaryExpression	256		3090077	1					
ANR	3090614	AndExpression	eprn -> colour_model != eprn_DeviceRGB && eprn -> colour_model != eprn_DeviceCMY		3090077	1		&&			
ANR	3090615	EqualityExpression	eprn -> colour_model != eprn_DeviceRGB		3090077	0		!=			
ANR	3090616	PtrMemberAccess	eprn -> colour_model		3090077	0					
ANR	3090617	Identifier	eprn		3090077	0					
ANR	3090618	Identifier	colour_model		3090077	1					
ANR	3090619	Identifier	eprn_DeviceRGB		3090077	1					
ANR	3090620	EqualityExpression	eprn -> colour_model != eprn_DeviceCMY		3090077	1		!=			
ANR	3090621	PtrMemberAccess	eprn -> colour_model		3090077	0					
ANR	3090622	Identifier	eprn		3090077	0					
ANR	3090623	Identifier	colour_model		3090077	1					
ANR	3090624	Identifier	eprn_DeviceCMY		3090077	1					
ANR	3090625	CompoundStatement		113:48:4541:4541	3090077	1					
ANR	3090626	IfStatement	if ( eprn -> black_levels != temp && dev -> is_open )		3090077	0					
ANR	3090627	Condition	eprn -> black_levels != temp && dev -> is_open	1021:10:35720:35761	3090077	0	True				
ANR	3090628	AndExpression	eprn -> black_levels != temp && dev -> is_open		3090077	0		&&			
ANR	3090629	EqualityExpression	eprn -> black_levels != temp		3090077	0		!=			
ANR	3090630	PtrMemberAccess	eprn -> black_levels		3090077	0					
ANR	3090631	Identifier	eprn		3090077	0					
ANR	3090632	Identifier	black_levels		3090077	1					
ANR	3090633	Identifier	temp		3090077	1					
ANR	3090634	PtrMemberAccess	dev -> is_open		3090077	1					
ANR	3090635	Identifier	dev		3090077	0					
ANR	3090636	Identifier	is_open		3090077	1					
ANR	3090637	ExpressionStatement	gs_closedevice ( dev )	1021:54:35764:35783	3090077	1	True				
ANR	3090638	CallExpression	gs_closedevice ( dev )		3090077	0					
ANR	3090639	Callee	gs_closedevice		3090077	0					
ANR	3090640	Identifier	gs_closedevice		3090077	0					
ANR	3090641	ArgumentList	dev		3090077	1					
ANR	3090642	Argument	dev		3090077	0					
ANR	3090643	Identifier	dev		3090077	0					
ANR	3090644	ExpressionStatement	eprn -> black_levels = temp	1022:6:35791:35816	3090077	1	True				
ANR	3090645	AssignmentExpression	eprn -> black_levels = temp		3090077	0		=			
ANR	3090646	PtrMemberAccess	eprn -> black_levels		3090077	0					
ANR	3090647	Identifier	eprn		3090077	0					
ANR	3090648	Identifier	black_levels		3090077	1					
ANR	3090649	Identifier	temp		3090077	1					
ANR	3090650	ElseStatement	else		3090077	0					
ANR	3090651	CompoundStatement		117:9:4666:4666	3090077	0					
ANR	3090652	Statement	eprintf2	1025:6:35841:35848	3090077	0	True				
ANR	3090653	Statement	(	1025:14:35849:35849	3090077	1	True				
ANR	3090654	Statement	"""%s"""	1025:15:35850:35853	3090077	2	True				
ANR	3090655	Statement	ERRPREF	1025:20:35855:35861	3090077	3	True				
ANR	3090656	Statement	"""The value for BlackLevels is outside the range permitted: %d.\\n"""	1026:8:35871:35935	3090077	4	True				
ANR	3090657	Statement	","	1026:73:35936:35936	3090077	5	True				
ANR	3090658	Statement	epref	1027:8:35946:35950	3090077	6	True				
ANR	3090659	Statement	","	1027:13:35951:35951	3090077	7	True				
ANR	3090660	Statement	temp	1027:15:35953:35956	3090077	8	True				
ANR	3090661	Statement	)	1027:19:35957:35957	3090077	9	True				
ANR	3090662	ExpressionStatement		1027:20:35958:35958	3090077	10	True				
ANR	3090663	ExpressionStatement	last_error = gs_error_rangecheck	1028:6:35966:35998	3090077	11	True				
ANR	3090664	AssignmentExpression	last_error = gs_error_rangecheck		3090077	0		=			
ANR	3090665	Identifier	last_error		3090077	0					
ANR	3090666	Identifier	gs_error_rangecheck		3090077	1					
ANR	3090667	ExpressionStatement	"param_signal_error ( plist , pname , last_error )"	1029:6:36006:36050	3090077	12	True				
ANR	3090668	CallExpression	"param_signal_error ( plist , pname , last_error )"		3090077	0					
ANR	3090669	Callee	param_signal_error		3090077	0					
ANR	3090670	Identifier	param_signal_error		3090077	0					
ANR	3090671	ArgumentList	plist		3090077	1					
ANR	3090672	Argument	plist		3090077	0					
ANR	3090673	Identifier	plist		3090077	0					
ANR	3090674	Argument	pname		3090077	1					
ANR	3090675	Identifier	pname		3090077	0					
ANR	3090676	Argument	last_error		3090077	2					
ANR	3090677	Identifier	last_error		3090077	0					
ANR	3090678	ElseStatement	else		3090077	0					
ANR	3090679	IfStatement	if ( rc < 0 )		3090077	0					
ANR	3090680	Condition	rc < 0	1032:11:36073:36078	3090077	0	True				
ANR	3090681	RelationalExpression	rc < 0		3090077	0		<			
ANR	3090682	Identifier	rc		3090077	0					
ANR	3090683	PrimaryExpression	0		3090077	1					
ANR	3090684	ExpressionStatement	last_error = rc	1032:19:36081:36096	3090077	1	True				
ANR	3090685	AssignmentExpression	last_error = rc		3090077	0		=			
ANR	3090686	Identifier	last_error		3090077	0					
ANR	3090687	Identifier	rc		3090077	1					
ANR	3090688	IfStatement	"if ( ( rc = param_read_int ( plist , ( pname = ""CMYLevels"" ) , & temp ) ) == 0 )"		3090077	29					
ANR	3090689	Condition	"( rc = param_read_int ( plist , ( pname = ""CMYLevels"" ) , & temp ) ) == 0"	1035:6:36123:36185	3090077	0	True				
ANR	3090690	EqualityExpression	"( rc = param_read_int ( plist , ( pname = ""CMYLevels"" ) , & temp ) ) == 0"		3090077	0		==			
ANR	3090691	AssignmentExpression	"rc = param_read_int ( plist , ( pname = ""CMYLevels"" ) , & temp )"		3090077	0		=			
ANR	3090692	Identifier	rc		3090077	0					
ANR	3090693	CallExpression	"param_read_int ( plist , ( pname = ""CMYLevels"" ) , & temp )"		3090077	1					
ANR	3090694	Callee	param_read_int		3090077	0					
ANR	3090695	Identifier	param_read_int		3090077	0					
ANR	3090696	ArgumentList	plist		3090077	1					
ANR	3090697	Argument	plist		3090077	0					
ANR	3090698	Identifier	plist		3090077	0					
ANR	3090699	Argument	"pname = ""CMYLevels"""		3090077	1					
ANR	3090700	AssignmentExpression	"pname = ""CMYLevels"""		3090077	0		=			
ANR	3090701	Identifier	pname		3090077	0					
ANR	3090702	PrimaryExpression	"""CMYLevels"""		3090077	1					
ANR	3090703	Argument	& temp		3090077	2					
ANR	3090704	UnaryOperationExpression	& temp		3090077	0					
ANR	3090705	UnaryOperator	&		3090077	0					
ANR	3090706	Identifier	temp		3090077	1					
ANR	3090707	PrimaryExpression	0		3090077	1					
ANR	3090708	CompoundStatement		128:71:5021:5021	3090077	1					
ANR	3090709	IfStatement	if ( ( temp == 0 && eprn -> colour_model == eprn_DeviceGray ) || ( 2 <= temp && temp <= 256 && eprn -> colour_model != eprn_DeviceGray ) )		3090077	0					
ANR	3090710	Condition	( temp == 0 && eprn -> colour_model == eprn_DeviceGray ) || ( 2 <= temp && temp <= 256 && eprn -> colour_model != eprn_DeviceGray )	1036:8:36198:36328	3090077	0	True				
ANR	3090711	OrExpression	( temp == 0 && eprn -> colour_model == eprn_DeviceGray ) || ( 2 <= temp && temp <= 256 && eprn -> colour_model != eprn_DeviceGray )		3090077	0		||			
ANR	3090712	AndExpression	temp == 0 && eprn -> colour_model == eprn_DeviceGray		3090077	0		&&			
ANR	3090713	EqualityExpression	temp == 0		3090077	0		==			
ANR	3090714	Identifier	temp		3090077	0					
ANR	3090715	PrimaryExpression	0		3090077	1					
ANR	3090716	EqualityExpression	eprn -> colour_model == eprn_DeviceGray		3090077	1		==			
ANR	3090717	PtrMemberAccess	eprn -> colour_model		3090077	0					
ANR	3090718	Identifier	eprn		3090077	0					
ANR	3090719	Identifier	colour_model		3090077	1					
ANR	3090720	Identifier	eprn_DeviceGray		3090077	1					
ANR	3090721	AndExpression	2 <= temp && temp <= 256 && eprn -> colour_model != eprn_DeviceGray		3090077	1		&&			
ANR	3090722	RelationalExpression	2 <= temp		3090077	0		<=			
ANR	3090723	PrimaryExpression	2		3090077	0					
ANR	3090724	Identifier	temp		3090077	1					
ANR	3090725	AndExpression	temp <= 256 && eprn -> colour_model != eprn_DeviceGray		3090077	1		&&			
ANR	3090726	RelationalExpression	temp <= 256		3090077	0		<=			
ANR	3090727	Identifier	temp		3090077	0					
ANR	3090728	PrimaryExpression	256		3090077	1					
ANR	3090729	EqualityExpression	eprn -> colour_model != eprn_DeviceGray		3090077	1		!=			
ANR	3090730	PtrMemberAccess	eprn -> colour_model		3090077	0					
ANR	3090731	Identifier	eprn		3090077	0					
ANR	3090732	Identifier	colour_model		3090077	1					
ANR	3090733	Identifier	eprn_DeviceGray		3090077	1					
ANR	3090734	CompoundStatement		130:77:5164:5164	3090077	1					
ANR	3090735	IfStatement	if ( eprn -> non_black_levels != temp && dev -> is_open )		3090077	0					
ANR	3090736	Condition	eprn -> non_black_levels != temp && dev -> is_open	1038:10:36343:36388	3090077	0	True				
ANR	3090737	AndExpression	eprn -> non_black_levels != temp && dev -> is_open		3090077	0		&&			
ANR	3090738	EqualityExpression	eprn -> non_black_levels != temp		3090077	0		!=			
ANR	3090739	PtrMemberAccess	eprn -> non_black_levels		3090077	0					
ANR	3090740	Identifier	eprn		3090077	0					
ANR	3090741	Identifier	non_black_levels		3090077	1					
ANR	3090742	Identifier	temp		3090077	1					
ANR	3090743	PtrMemberAccess	dev -> is_open		3090077	1					
ANR	3090744	Identifier	dev		3090077	0					
ANR	3090745	Identifier	is_open		3090077	1					
ANR	3090746	ExpressionStatement	gs_closedevice ( dev )	1038:58:36391:36410	3090077	1	True				
ANR	3090747	CallExpression	gs_closedevice ( dev )		3090077	0					
ANR	3090748	Callee	gs_closedevice		3090077	0					
ANR	3090749	Identifier	gs_closedevice		3090077	0					
ANR	3090750	ArgumentList	dev		3090077	1					
ANR	3090751	Argument	dev		3090077	0					
ANR	3090752	Identifier	dev		3090077	0					
ANR	3090753	ExpressionStatement	eprn -> non_black_levels = temp	1039:6:36418:36447	3090077	1	True				
ANR	3090754	AssignmentExpression	eprn -> non_black_levels = temp		3090077	0		=			
ANR	3090755	PtrMemberAccess	eprn -> non_black_levels		3090077	0					
ANR	3090756	Identifier	eprn		3090077	0					
ANR	3090757	Identifier	non_black_levels		3090077	1					
ANR	3090758	Identifier	temp		3090077	1					
ANR	3090759	ElseStatement	else		3090077	0					
ANR	3090760	CompoundStatement		134:9:5297:5297	3090077	0					
ANR	3090761	Statement	eprintf2	1042:6:36472:36479	3090077	0	True				
ANR	3090762	Statement	(	1042:14:36480:36480	3090077	1	True				
ANR	3090763	Statement	"""%s"""	1042:15:36481:36484	3090077	2	True				
ANR	3090764	Statement	ERRPREF	1042:20:36486:36492	3090077	3	True				
ANR	3090765	Statement	"""The value for CMYLevels is outside the range permitted: %d.\\n"""	1043:8:36502:36564	3090077	4	True				
ANR	3090766	Statement	","	1043:71:36565:36565	3090077	5	True				
ANR	3090767	Statement	epref	1044:8:36575:36579	3090077	6	True				
ANR	3090768	Statement	","	1044:13:36580:36580	3090077	7	True				
ANR	3090769	Statement	temp	1044:15:36582:36585	3090077	8	True				
ANR	3090770	Statement	)	1044:19:36586:36586	3090077	9	True				
ANR	3090771	ExpressionStatement		1044:20:36587:36587	3090077	10	True				
ANR	3090772	ExpressionStatement	last_error = gs_error_rangecheck	1045:6:36595:36627	3090077	11	True				
ANR	3090773	AssignmentExpression	last_error = gs_error_rangecheck		3090077	0		=			
ANR	3090774	Identifier	last_error		3090077	0					
ANR	3090775	Identifier	gs_error_rangecheck		3090077	1					
ANR	3090776	ExpressionStatement	"param_signal_error ( plist , pname , last_error )"	1046:6:36635:36679	3090077	12	True				
ANR	3090777	CallExpression	"param_signal_error ( plist , pname , last_error )"		3090077	0					
ANR	3090778	Callee	param_signal_error		3090077	0					
ANR	3090779	Identifier	param_signal_error		3090077	0					
ANR	3090780	ArgumentList	plist		3090077	1					
ANR	3090781	Argument	plist		3090077	0					
ANR	3090782	Identifier	plist		3090077	0					
ANR	3090783	Argument	pname		3090077	1					
ANR	3090784	Identifier	pname		3090077	0					
ANR	3090785	Argument	last_error		3090077	2					
ANR	3090786	Identifier	last_error		3090077	0					
ANR	3090787	ElseStatement	else		3090077	0					
ANR	3090788	IfStatement	if ( rc < 0 )		3090077	0					
ANR	3090789	Condition	rc < 0	1049:11:36702:36707	3090077	0	True				
ANR	3090790	RelationalExpression	rc < 0		3090077	0		<			
ANR	3090791	Identifier	rc		3090077	0					
ANR	3090792	PrimaryExpression	0		3090077	1					
ANR	3090793	ExpressionStatement	last_error = rc	1049:19:36710:36725	3090077	1	True				
ANR	3090794	AssignmentExpression	last_error = rc		3090077	0		=			
ANR	3090795	Identifier	last_error		3090077	0					
ANR	3090796	Identifier	rc		3090077	1					
ANR	3090797	CompoundStatement		146:4:5607:5616	3090077	30					
ANR	3090798	IdentifierDeclStatement	bool temp ;	1053:4:36774:36783	3090077	0	True				
ANR	3090799	IdentifierDecl	temp		3090077	0					
ANR	3090800	IdentifierDeclType	bool		3090077	0					
ANR	3090801	Identifier	temp		3090077	1					
ANR	3090802	IfStatement	"if ( ( rc = param_read_bool ( plist , ""CUPSAccounting"" , & temp ) ) == 0 )"		3090077	1					
ANR	3090803	Condition	"( rc = param_read_bool ( plist , ""CUPSAccounting"" , & temp ) ) == 0"	1054:8:36793:36851	3090077	0	True				
ANR	3090804	EqualityExpression	"( rc = param_read_bool ( plist , ""CUPSAccounting"" , & temp ) ) == 0"		3090077	0		==			
ANR	3090805	AssignmentExpression	"rc = param_read_bool ( plist , ""CUPSAccounting"" , & temp )"		3090077	0		=			
ANR	3090806	Identifier	rc		3090077	0					
ANR	3090807	CallExpression	"param_read_bool ( plist , ""CUPSAccounting"" , & temp )"		3090077	1					
ANR	3090808	Callee	param_read_bool		3090077	0					
ANR	3090809	Identifier	param_read_bool		3090077	0					
ANR	3090810	ArgumentList	plist		3090077	1					
ANR	3090811	Argument	plist		3090077	0					
ANR	3090812	Identifier	plist		3090077	0					
ANR	3090813	Argument	"""CUPSAccounting"""		3090077	1					
ANR	3090814	PrimaryExpression	"""CUPSAccounting"""		3090077	0					
ANR	3090815	Argument	& temp		3090077	2					
ANR	3090816	UnaryOperationExpression	& temp		3090077	0					
ANR	3090817	UnaryOperator	&		3090077	0					
ANR	3090818	Identifier	temp		3090077	1					
ANR	3090819	PrimaryExpression	0		3090077	1					
ANR	3090820	CompoundStatement		147:69:5687:5687	3090077	1					
ANR	3090821	IfStatement	if ( eprn -> CUPS_accounting && ! temp )		3090077	0					
ANR	3090822	Condition	eprn -> CUPS_accounting && ! temp	1055:10:36866:36895	3090077	0	True				
ANR	3090823	AndExpression	eprn -> CUPS_accounting && ! temp		3090077	0		&&			
ANR	3090824	PtrMemberAccess	eprn -> CUPS_accounting		3090077	0					
ANR	3090825	Identifier	eprn		3090077	0					
ANR	3090826	Identifier	CUPS_accounting		3090077	1					
ANR	3090827	UnaryOperationExpression	! temp		3090077	1					
ANR	3090828	UnaryOperator	!		3090077	0					
ANR	3090829	Identifier	temp		3090077	1					
ANR	3090830	Statement	eprintf	1056:8:36906:36912	3090077	1	True				
ANR	3090831	ElseStatement	else		3090077	0					
ANR	3090832	ExpressionStatement	eprn -> CUPS_accounting = temp	1058:11:37014:37042	3090077	0	True				
ANR	3090833	AssignmentExpression	eprn -> CUPS_accounting = temp		3090077	0		=			
ANR	3090834	PtrMemberAccess	eprn -> CUPS_accounting		3090077	0					
ANR	3090835	Identifier	eprn		3090077	0					
ANR	3090836	Identifier	CUPS_accounting		3090077	1					
ANR	3090837	Identifier	temp		3090077	1					
ANR	3090838	Statement	(	1056:15:36913:36913	3090077	1	True				
ANR	3090839	Statement	CUPS_WARNPREF	1056:16:36914:36926	3090077	2	True				
ANR	3090840	Statement	WARNPREF	1056:30:36928:36935	3090077	3	True				
ANR	3090841	Statement	"""Attempt to set CUPSAccounting from true to false.\\n"""	1057:10:36947:36999	3090077	4	True				
ANR	3090842	Statement	)	1057:63:37000:37000	3090077	5	True				
ANR	3090843	ExpressionStatement		1057:64:37001:37001	3090077	6	True				
ANR	3090844	ElseStatement	else		3090077	0					
ANR	3090845	IfStatement	if ( rc < 0 )		3090077	0					
ANR	3090846	Condition	rc < 0	1060:13:37063:37068	3090077	0	True				
ANR	3090847	RelationalExpression	rc < 0		3090077	0		<			
ANR	3090848	Identifier	rc		3090077	0					
ANR	3090849	PrimaryExpression	0		3090077	1					
ANR	3090850	ExpressionStatement	last_error = rc	1060:21:37071:37086	3090077	1	True				
ANR	3090851	AssignmentExpression	last_error = rc		3090077	0		=			
ANR	3090852	Identifier	last_error		3090077	0					
ANR	3090853	Identifier	rc		3090077	1					
ANR	3090854	IfStatement	"if ( ( rc = param_read_string ( plist , ( pname = ""IntensityRendering"" ) , & string_value ) ) == 0 )"		3090077	31					
ANR	3090855	Condition	"( rc = param_read_string ( plist , ( pname = ""IntensityRendering"" ) , & string_value ) ) == 0"	1064:6:37127:37215	3090077	0	True				
ANR	3090856	EqualityExpression	"( rc = param_read_string ( plist , ( pname = ""IntensityRendering"" ) , & string_value ) ) == 0"		3090077	0		==			
ANR	3090857	AssignmentExpression	"rc = param_read_string ( plist , ( pname = ""IntensityRendering"" ) , & string_value )"		3090077	0		=			
ANR	3090858	Identifier	rc		3090077	0					
ANR	3090859	CallExpression	"param_read_string ( plist , ( pname = ""IntensityRendering"" ) , & string_value )"		3090077	1					
ANR	3090860	Callee	param_read_string		3090077	0					
ANR	3090861	Identifier	param_read_string		3090077	0					
ANR	3090862	ArgumentList	plist		3090077	1					
ANR	3090863	Argument	plist		3090077	0					
ANR	3090864	Identifier	plist		3090077	0					
ANR	3090865	Argument	"pname = ""IntensityRendering"""		3090077	1					
ANR	3090866	AssignmentExpression	"pname = ""IntensityRendering"""		3090077	0		=			
ANR	3090867	Identifier	pname		3090077	0					
ANR	3090868	PrimaryExpression	"""IntensityRendering"""		3090077	1					
ANR	3090869	Argument	& string_value		3090077	2					
ANR	3090870	UnaryOperationExpression	& string_value		3090077	0					
ANR	3090871	UnaryOperator	&		3090077	0					
ANR	3090872	Identifier	string_value		3090077	1					
ANR	3090873	PrimaryExpression	0		3090077	1					
ANR	3090874	CompoundStatement		158:28:6051:6051	3090077	1					
ANR	3090875	ExpressionStatement	"rc = eprn_get_int ( & string_value , intensity_rendering_list , & temp )"	1066:4:37224:37289	3090077	0	True				
ANR	3090876	AssignmentExpression	"rc = eprn_get_int ( & string_value , intensity_rendering_list , & temp )"		3090077	0		=			
ANR	3090877	Identifier	rc		3090077	0					
ANR	3090878	CallExpression	"eprn_get_int ( & string_value , intensity_rendering_list , & temp )"		3090077	1					
ANR	3090879	Callee	eprn_get_int		3090077	0					
ANR	3090880	Identifier	eprn_get_int		3090077	0					
ANR	3090881	ArgumentList	& string_value		3090077	1					
ANR	3090882	Argument	& string_value		3090077	0					
ANR	3090883	UnaryOperationExpression	& string_value		3090077	0					
ANR	3090884	UnaryOperator	&		3090077	0					
ANR	3090885	Identifier	string_value		3090077	1					
ANR	3090886	Argument	intensity_rendering_list		3090077	1					
ANR	3090887	Identifier	intensity_rendering_list		3090077	0					
ANR	3090888	Argument	& temp		3090077	2					
ANR	3090889	UnaryOperationExpression	& temp		3090077	0					
ANR	3090890	UnaryOperator	&		3090077	0					
ANR	3090891	Identifier	temp		3090077	1					
ANR	3090892	IfStatement	if ( rc == 0 )		3090077	1					
ANR	3090893	Condition	rc == 0	1067:8:37299:37305	3090077	0	True				
ANR	3090894	EqualityExpression	rc == 0		3090077	0		==			
ANR	3090895	Identifier	rc		3090077	0					
ANR	3090896	PrimaryExpression	0		3090077	1					
ANR	3090897	CompoundStatement		160:17:6141:6141	3090077	1					
ANR	3090898	IfStatement	if ( temp != eprn -> intensity_rendering && dev -> is_open )		3090077	0					
ANR	3090899	Condition	temp != eprn -> intensity_rendering && dev -> is_open	1068:10:37320:37368	3090077	0	True				
ANR	3090900	AndExpression	temp != eprn -> intensity_rendering && dev -> is_open		3090077	0		&&			
ANR	3090901	EqualityExpression	temp != eprn -> intensity_rendering		3090077	0		!=			
ANR	3090902	Identifier	temp		3090077	0					
ANR	3090903	PtrMemberAccess	eprn -> intensity_rendering		3090077	1					
ANR	3090904	Identifier	eprn		3090077	0					
ANR	3090905	Identifier	intensity_rendering		3090077	1					
ANR	3090906	PtrMemberAccess	dev -> is_open		3090077	1					
ANR	3090907	Identifier	dev		3090077	0					
ANR	3090908	Identifier	is_open		3090077	1					
ANR	3090909	ExpressionStatement	gs_closedevice ( dev )	1069:8:37379:37398	3090077	1	True				
ANR	3090910	CallExpression	gs_closedevice ( dev )		3090077	0					
ANR	3090911	Callee	gs_closedevice		3090077	0					
ANR	3090912	Identifier	gs_closedevice		3090077	0					
ANR	3090913	ArgumentList	dev		3090077	1					
ANR	3090914	Argument	dev		3090077	0					
ANR	3090915	Identifier	dev		3090077	0					
ANR	3090916	ExpressionStatement	eprn -> intensity_rendering = temp	1070:6:37406:37438	3090077	1	True				
ANR	3090917	AssignmentExpression	eprn -> intensity_rendering = temp		3090077	0		=			
ANR	3090918	PtrMemberAccess	eprn -> intensity_rendering		3090077	0					
ANR	3090919	Identifier	eprn		3090077	0					
ANR	3090920	Identifier	intensity_rendering		3090077	1					
ANR	3090921	Identifier	temp		3090077	1					
ANR	3090922	ElseStatement	else		3090077	0					
ANR	3090923	CompoundStatement		165:9:6288:6288	3090077	0					
ANR	3090924	Statement	eprintf1	1073:6:37463:37470	3090077	0	True				
ANR	3090925	Statement	(	1073:14:37471:37471	3090077	1	True				
ANR	3090926	Statement	"""%s"""	1073:15:37472:37475	3090077	2	True				
ANR	3090927	Statement	ERRPREF	1073:20:37477:37483	3090077	3	True				
ANR	3090928	Statement	"""Invalid method for IntensityRendering: `"""	1073:28:37485:37526	3090077	4	True				
ANR	3090929	Statement	","	1073:70:37527:37527	3090077	5	True				
ANR	3090930	Statement	epref	1074:8:37537:37541	3090077	6	True				
ANR	3090931	Statement	)	1074:13:37542:37542	3090077	7	True				
ANR	3090932	ExpressionStatement		1074:14:37543:37543	3090077	8	True				
ANR	3090933	ExpressionStatement	"errwrite ( dev -> memory , ( const char * ) string_value . data , sizeof ( char ) * string_value . size )"	1075:6:37551:37637	3090077	9	True				
ANR	3090934	CallExpression	"errwrite ( dev -> memory , ( const char * ) string_value . data , sizeof ( char ) * string_value . size )"		3090077	0					
ANR	3090935	Callee	errwrite		3090077	0					
ANR	3090936	Identifier	errwrite		3090077	0					
ANR	3090937	ArgumentList	dev -> memory		3090077	1					
ANR	3090938	Argument	dev -> memory		3090077	0					
ANR	3090939	PtrMemberAccess	dev -> memory		3090077	0					
ANR	3090940	Identifier	dev		3090077	0					
ANR	3090941	Identifier	memory		3090077	1					
ANR	3090942	Argument	( const char * ) string_value . data		3090077	1					
ANR	3090943	CastExpression	( const char * ) string_value . data		3090077	0					
ANR	3090944	CastTarget	const char *		3090077	0					
ANR	3090945	MemberAccess	string_value . data		3090077	1					
ANR	3090946	Identifier	string_value		3090077	0					
ANR	3090947	Identifier	data		3090077	1					
ANR	3090948	Argument	sizeof ( char ) * string_value . size		3090077	2					
ANR	3090949	MultiplicativeExpression	sizeof ( char ) * string_value . size		3090077	0		*			
ANR	3090950	SizeofExpression	sizeof ( char )		3090077	0					
ANR	3090951	Sizeof	sizeof		3090077	0					
ANR	3090952	SizeofOperand	char		3090077	1					
ANR	3090953	MemberAccess	string_value . size		3090077	1					
ANR	3090954	Identifier	string_value		3090077	0					
ANR	3090955	Identifier	size		3090077	1					
ANR	3090956	ExpressionStatement	"eprintf ( ""'.\\n"" )"	1076:6:37645:37660	3090077	10	True				
ANR	3090957	CallExpression	"eprintf ( ""'.\\n"" )"		3090077	0					
ANR	3090958	Callee	eprintf		3090077	0					
ANR	3090959	Identifier	eprintf		3090077	0					
ANR	3090960	ArgumentList	"""'.\\n"""		3090077	1					
ANR	3090961	Argument	"""'.\\n"""		3090077	0					
ANR	3090962	PrimaryExpression	"""'.\\n"""		3090077	0					
ANR	3090963	ExpressionStatement	last_error = gs_error_rangecheck	1077:6:37668:37700	3090077	11	True				
ANR	3090964	AssignmentExpression	last_error = gs_error_rangecheck		3090077	0		=			
ANR	3090965	Identifier	last_error		3090077	0					
ANR	3090966	Identifier	gs_error_rangecheck		3090077	1					
ANR	3090967	ExpressionStatement	"param_signal_error ( plist , pname , last_error )"	1078:6:37708:37752	3090077	12	True				
ANR	3090968	CallExpression	"param_signal_error ( plist , pname , last_error )"		3090077	0					
ANR	3090969	Callee	param_signal_error		3090077	0					
ANR	3090970	Identifier	param_signal_error		3090077	0					
ANR	3090971	ArgumentList	plist		3090077	1					
ANR	3090972	Argument	plist		3090077	0					
ANR	3090973	Identifier	plist		3090077	0					
ANR	3090974	Argument	pname		3090077	1					
ANR	3090975	Identifier	pname		3090077	0					
ANR	3090976	Argument	last_error		3090077	2					
ANR	3090977	Identifier	last_error		3090077	0					
ANR	3090978	ElseStatement	else		3090077	0					
ANR	3090979	IfStatement	if ( rc < 0 )		3090077	0					
ANR	3090980	Condition	rc < 0	1081:11:37775:37780	3090077	0	True				
ANR	3090981	RelationalExpression	rc < 0		3090077	0		<			
ANR	3090982	Identifier	rc		3090077	0					
ANR	3090983	PrimaryExpression	0		3090077	1					
ANR	3090984	ExpressionStatement	last_error = rc	1081:19:37783:37798	3090077	1	True				
ANR	3090985	AssignmentExpression	last_error = rc		3090077	0		=			
ANR	3090986	Identifier	last_error		3090077	0					
ANR	3090987	Identifier	rc		3090077	1					
ANR	3090988	IfStatement	"if ( ( rc = param_read_null ( plist , ( pname = ""LeadingEdge"" ) ) ) == 0 )"		3090077	32					
ANR	3090989	Condition	"( rc = param_read_null ( plist , ( pname = ""LeadingEdge"" ) ) ) == 0"	1084:6:37828:37886	3090077	0	True				
ANR	3090990	EqualityExpression	"( rc = param_read_null ( plist , ( pname = ""LeadingEdge"" ) ) ) == 0"		3090077	0		==			
ANR	3090991	AssignmentExpression	"rc = param_read_null ( plist , ( pname = ""LeadingEdge"" ) )"		3090077	0		=			
ANR	3090992	Identifier	rc		3090077	0					
ANR	3090993	CallExpression	"param_read_null ( plist , ( pname = ""LeadingEdge"" ) )"		3090077	1					
ANR	3090994	Callee	param_read_null		3090077	0					
ANR	3090995	Identifier	param_read_null		3090077	0					
ANR	3090996	ArgumentList	plist		3090077	1					
ANR	3090997	Argument	plist		3090077	0					
ANR	3090998	Identifier	plist		3090077	0					
ANR	3090999	Argument	"pname = ""LeadingEdge"""		3090077	1					
ANR	3091000	AssignmentExpression	"pname = ""LeadingEdge"""		3090077	0		=			
ANR	3091001	Identifier	pname		3090077	0					
ANR	3091002	PrimaryExpression	"""LeadingEdge"""		3090077	1					
ANR	3091003	PrimaryExpression	0		3090077	1					
ANR	3091004	CompoundStatement		177:67:6722:6722	3090077	1					
ANR	3091005	IfStatement	if ( eprn -> leading_edge_set && dev -> is_open )		3090077	0					
ANR	3091006	Condition	eprn -> leading_edge_set && dev -> is_open	1085:8:37899:37936	3090077	0	True				
ANR	3091007	AndExpression	eprn -> leading_edge_set && dev -> is_open		3090077	0		&&			
ANR	3091008	PtrMemberAccess	eprn -> leading_edge_set		3090077	0					
ANR	3091009	Identifier	eprn		3090077	0					
ANR	3091010	Identifier	leading_edge_set		3090077	1					
ANR	3091011	PtrMemberAccess	dev -> is_open		3090077	1					
ANR	3091012	Identifier	dev		3090077	0					
ANR	3091013	Identifier	is_open		3090077	1					
ANR	3091014	ExpressionStatement	gs_closedevice ( dev )	1085:48:37939:37958	3090077	1	True				
ANR	3091015	CallExpression	gs_closedevice ( dev )		3090077	0					
ANR	3091016	Callee	gs_closedevice		3090077	0					
ANR	3091017	Identifier	gs_closedevice		3090077	0					
ANR	3091018	ArgumentList	dev		3090077	1					
ANR	3091019	Argument	dev		3090077	0					
ANR	3091020	Identifier	dev		3090077	0					
ANR	3091021	ExpressionStatement	eprn -> leading_edge_set = false	1086:4:37964:37994	3090077	1	True				
ANR	3091022	AssignmentExpression	eprn -> leading_edge_set = false		3090077	0		=			
ANR	3091023	PtrMemberAccess	eprn -> leading_edge_set		3090077	0					
ANR	3091024	Identifier	eprn		3090077	0					
ANR	3091025	Identifier	leading_edge_set		3090077	1					
ANR	3091026	Identifier	false		3090077	1					
ANR	3091027	ElseStatement	else		3090077	0					
ANR	3091028	IfStatement	if ( rc < 0 && rc != gs_error_typecheck )		3090077	0					
ANR	3091029	Condition	rc < 0 && rc != gs_error_typecheck	1088:11:38011:38044	3090077	0	True				
ANR	3091030	AndExpression	rc < 0 && rc != gs_error_typecheck		3090077	0		&&			
ANR	3091031	RelationalExpression	rc < 0		3090077	0		<			
ANR	3091032	Identifier	rc		3090077	0					
ANR	3091033	PrimaryExpression	0		3090077	1					
ANR	3091034	EqualityExpression	rc != gs_error_typecheck		3090077	1		!=			
ANR	3091035	Identifier	rc		3090077	0					
ANR	3091036	Identifier	gs_error_typecheck		3090077	1					
ANR	3091037	ExpressionStatement	last_error = rc	1088:47:38047:38062	3090077	1	True				
ANR	3091038	AssignmentExpression	last_error = rc		3090077	0		=			
ANR	3091039	Identifier	last_error		3090077	0					
ANR	3091040	Identifier	rc		3090077	1					
ANR	3091041	ElseStatement	else		3090077	0					
ANR	3091042	IfStatement	"if ( ( rc = param_read_int ( plist , ( pname = ""LeadingEdge"" ) , & temp ) ) == 0 )"		3090077	0					
ANR	3091043	Condition	"( rc = param_read_int ( plist , ( pname = ""LeadingEdge"" ) , & temp ) ) == 0"	1089:11:38075:38139	3090077	0	True				
ANR	3091044	EqualityExpression	"( rc = param_read_int ( plist , ( pname = ""LeadingEdge"" ) , & temp ) ) == 0"		3090077	0		==			
ANR	3091045	AssignmentExpression	"rc = param_read_int ( plist , ( pname = ""LeadingEdge"" ) , & temp )"		3090077	0		=			
ANR	3091046	Identifier	rc		3090077	0					
ANR	3091047	CallExpression	"param_read_int ( plist , ( pname = ""LeadingEdge"" ) , & temp )"		3090077	1					
ANR	3091048	Callee	param_read_int		3090077	0					
ANR	3091049	Identifier	param_read_int		3090077	0					
ANR	3091050	ArgumentList	plist		3090077	1					
ANR	3091051	Argument	plist		3090077	0					
ANR	3091052	Identifier	plist		3090077	0					
ANR	3091053	Argument	"pname = ""LeadingEdge"""		3090077	1					
ANR	3091054	AssignmentExpression	"pname = ""LeadingEdge"""		3090077	0		=			
ANR	3091055	Identifier	pname		3090077	0					
ANR	3091056	PrimaryExpression	"""LeadingEdge"""		3090077	1					
ANR	3091057	Argument	& temp		3090077	2					
ANR	3091058	UnaryOperationExpression	& temp		3090077	0					
ANR	3091059	UnaryOperator	&		3090077	0					
ANR	3091060	Identifier	temp		3090077	1					
ANR	3091061	PrimaryExpression	0		3090077	1					
ANR	3091062	CompoundStatement		182:78:6975:6975	3090077	1					
ANR	3091063	IfStatement	if ( 0 <= temp && temp <= 3 )		3090077	0					
ANR	3091064	Condition	0 <= temp && temp <= 3	1090:8:38152:38173	3090077	0	True				
ANR	3091065	AndExpression	0 <= temp && temp <= 3		3090077	0		&&			
ANR	3091066	RelationalExpression	0 <= temp		3090077	0		<=			
ANR	3091067	PrimaryExpression	0		3090077	0					
ANR	3091068	Identifier	temp		3090077	1					
ANR	3091069	RelationalExpression	temp <= 3		3090077	1		<=			
ANR	3091070	Identifier	temp		3090077	0					
ANR	3091071	PrimaryExpression	3		3090077	1					
ANR	3091072	CompoundStatement		183:32:7009:7009	3090077	1					
ANR	3091073	IfStatement	if ( ( ! eprn -> leading_edge_set || eprn -> default_orientation != temp ) && dev -> is_open )		3090077	0					
ANR	3091074	Condition	( ! eprn -> leading_edge_set || eprn -> default_orientation != temp ) && dev -> is_open	1091:10:38188:38273	3090077	0	True				
ANR	3091075	AndExpression	( ! eprn -> leading_edge_set || eprn -> default_orientation != temp ) && dev -> is_open		3090077	0		&&			
ANR	3091076	OrExpression	! eprn -> leading_edge_set || eprn -> default_orientation != temp		3090077	0		||			
ANR	3091077	UnaryOperationExpression	! eprn -> leading_edge_set		3090077	0					
ANR	3091078	UnaryOperator	!		3090077	0					
ANR	3091079	PtrMemberAccess	eprn -> leading_edge_set		3090077	1					
ANR	3091080	Identifier	eprn		3090077	0					
ANR	3091081	Identifier	leading_edge_set		3090077	1					
ANR	3091082	EqualityExpression	eprn -> default_orientation != temp		3090077	1		!=			
ANR	3091083	PtrMemberAccess	eprn -> default_orientation		3090077	0					
ANR	3091084	Identifier	eprn		3090077	0					
ANR	3091085	Identifier	default_orientation		3090077	1					
ANR	3091086	Identifier	temp		3090077	1					
ANR	3091087	PtrMemberAccess	dev -> is_open		3090077	1					
ANR	3091088	Identifier	dev		3090077	0					
ANR	3091089	Identifier	is_open		3090077	1					
ANR	3091090	ExpressionStatement	gs_closedevice ( dev )	1092:22:38276:38295	3090077	1	True				
ANR	3091091	CallExpression	gs_closedevice ( dev )		3090077	0					
ANR	3091092	Callee	gs_closedevice		3090077	0					
ANR	3091093	Identifier	gs_closedevice		3090077	0					
ANR	3091094	ArgumentList	dev		3090077	1					
ANR	3091095	Argument	dev		3090077	0					
ANR	3091096	Identifier	dev		3090077	0					
ANR	3091097	ExpressionStatement	eprn -> leading_edge_set = true	1093:6:38303:38332	3090077	1	True				
ANR	3091098	AssignmentExpression	eprn -> leading_edge_set = true		3090077	0		=			
ANR	3091099	PtrMemberAccess	eprn -> leading_edge_set		3090077	0					
ANR	3091100	Identifier	eprn		3090077	0					
ANR	3091101	Identifier	leading_edge_set		3090077	1					
ANR	3091102	Identifier	true		3090077	1					
ANR	3091103	ExpressionStatement	eprn -> default_orientation = temp	1094:6:38340:38372	3090077	2	True				
ANR	3091104	AssignmentExpression	eprn -> default_orientation = temp		3090077	0		=			
ANR	3091105	PtrMemberAccess	eprn -> default_orientation		3090077	0					
ANR	3091106	Identifier	eprn		3090077	0					
ANR	3091107	Identifier	default_orientation		3090077	1					
ANR	3091108	Identifier	temp		3090077	1					
ANR	3091109	ElseStatement	else		3090077	0					
ANR	3091110	CompoundStatement		189:9:7222:7222	3090077	0					
ANR	3091111	Statement	eprintf2	1097:6:38397:38404	3090077	0	True				
ANR	3091112	Statement	(	1097:14:38405:38405	3090077	1	True				
ANR	3091113	Statement	"""%s"""	1098:8:38415:38418	3090077	2	True				
ANR	3091114	Statement	ERRPREF	1098:13:38420:38426	3090077	3	True				
ANR	3091115	Statement	"""LeadingEdge may only have values 0 to 3, not %d.\\n"""	1098:21:38428:38479	3090077	4	True				
ANR	3091116	Statement	","	1098:73:38480:38480	3090077	5	True				
ANR	3091117	Statement	epref	1099:8:38490:38494	3090077	6	True				
ANR	3091118	Statement	","	1099:13:38495:38495	3090077	7	True				
ANR	3091119	Statement	temp	1099:15:38497:38500	3090077	8	True				
ANR	3091120	Statement	)	1099:19:38501:38501	3090077	9	True				
ANR	3091121	ExpressionStatement		1099:20:38502:38502	3090077	10	True				
ANR	3091122	ExpressionStatement	last_error = gs_error_rangecheck	1100:6:38510:38542	3090077	11	True				
ANR	3091123	AssignmentExpression	last_error = gs_error_rangecheck		3090077	0		=			
ANR	3091124	Identifier	last_error		3090077	0					
ANR	3091125	Identifier	gs_error_rangecheck		3090077	1					
ANR	3091126	ExpressionStatement	"param_signal_error ( plist , pname , last_error )"	1101:6:38550:38594	3090077	12	True				
ANR	3091127	CallExpression	"param_signal_error ( plist , pname , last_error )"		3090077	0					
ANR	3091128	Callee	param_signal_error		3090077	0					
ANR	3091129	Identifier	param_signal_error		3090077	0					
ANR	3091130	ArgumentList	plist		3090077	1					
ANR	3091131	Argument	plist		3090077	0					
ANR	3091132	Identifier	plist		3090077	0					
ANR	3091133	Argument	pname		3090077	1					
ANR	3091134	Identifier	pname		3090077	0					
ANR	3091135	Argument	last_error		3090077	2					
ANR	3091136	Identifier	last_error		3090077	0					
ANR	3091137	ElseStatement	else		3090077	0					
ANR	3091138	IfStatement	if ( rc < 0 )		3090077	0					
ANR	3091139	Condition	rc < 0	1104:11:38617:38622	3090077	0	True				
ANR	3091140	RelationalExpression	rc < 0		3090077	0		<			
ANR	3091141	Identifier	rc		3090077	0					
ANR	3091142	PrimaryExpression	0		3090077	1					
ANR	3091143	ExpressionStatement	last_error = rc	1104:19:38625:38640	3090077	1	True				
ANR	3091144	AssignmentExpression	last_error = rc		3090077	0		=			
ANR	3091145	Identifier	last_error		3090077	0					
ANR	3091146	Identifier	rc		3090077	1					
ANR	3091147	IfStatement	"if ( ( rc = param_read_null ( plist , ( pname = ""MediaConfigurationFile"" ) ) ) == 0 )"		3090077	33					
ANR	3091148	Condition	"( rc = param_read_null ( plist , ( pname = ""MediaConfigurationFile"" ) ) ) == 0"	1107:6:38682:38751	3090077	0	True				
ANR	3091149	EqualityExpression	"( rc = param_read_null ( plist , ( pname = ""MediaConfigurationFile"" ) ) ) == 0"		3090077	0		==			
ANR	3091150	AssignmentExpression	"rc = param_read_null ( plist , ( pname = ""MediaConfigurationFile"" ) )"		3090077	0		=			
ANR	3091151	Identifier	rc		3090077	0					
ANR	3091152	CallExpression	"param_read_null ( plist , ( pname = ""MediaConfigurationFile"" ) )"		3090077	1					
ANR	3091153	Callee	param_read_null		3090077	0					
ANR	3091154	Identifier	param_read_null		3090077	0					
ANR	3091155	ArgumentList	plist		3090077	1					
ANR	3091156	Argument	plist		3090077	0					
ANR	3091157	Identifier	plist		3090077	0					
ANR	3091158	Argument	"pname = ""MediaConfigurationFile"""		3090077	1					
ANR	3091159	AssignmentExpression	"pname = ""MediaConfigurationFile"""		3090077	0		=			
ANR	3091160	Identifier	pname		3090077	0					
ANR	3091161	PrimaryExpression	"""MediaConfigurationFile"""		3090077	1					
ANR	3091162	PrimaryExpression	0		3090077	1					
ANR	3091163	CompoundStatement		200:78:7587:7587	3090077	1					
ANR	3091164	IfStatement	if ( eprn -> media_file != NULL && dev -> is_open )		3090077	0					
ANR	3091165	Condition	eprn -> media_file != NULL && dev -> is_open	1108:8:38764:38803	3090077	0	True				
ANR	3091166	AndExpression	eprn -> media_file != NULL && dev -> is_open		3090077	0		&&			
ANR	3091167	EqualityExpression	eprn -> media_file != NULL		3090077	0		!=			
ANR	3091168	PtrMemberAccess	eprn -> media_file		3090077	0					
ANR	3091169	Identifier	eprn		3090077	0					
ANR	3091170	Identifier	media_file		3090077	1					
ANR	3091171	Identifier	NULL		3090077	1					
ANR	3091172	PtrMemberAccess	dev -> is_open		3090077	1					
ANR	3091173	Identifier	dev		3090077	0					
ANR	3091174	Identifier	is_open		3090077	1					
ANR	3091175	ExpressionStatement	gs_closedevice ( dev )	1108:50:38806:38825	3090077	1	True				
ANR	3091176	CallExpression	gs_closedevice ( dev )		3090077	0					
ANR	3091177	Callee	gs_closedevice		3090077	0					
ANR	3091178	Identifier	gs_closedevice		3090077	0					
ANR	3091179	ArgumentList	dev		3090077	1					
ANR	3091180	Argument	dev		3090077	0					
ANR	3091181	Identifier	dev		3090077	0					
ANR	3091182	ExpressionStatement	"rc = eprn_set_media_data ( ( eprn_Device * ) dev , NULL , 0 )"	1109:4:38831:38884	3090077	1	True				
ANR	3091183	AssignmentExpression	"rc = eprn_set_media_data ( ( eprn_Device * ) dev , NULL , 0 )"		3090077	0		=			
ANR	3091184	Identifier	rc		3090077	0					
ANR	3091185	CallExpression	"eprn_set_media_data ( ( eprn_Device * ) dev , NULL , 0 )"		3090077	1					
ANR	3091186	Callee	eprn_set_media_data		3090077	0					
ANR	3091187	Identifier	eprn_set_media_data		3090077	0					
ANR	3091188	ArgumentList	( eprn_Device * ) dev		3090077	1					
ANR	3091189	Argument	( eprn_Device * ) dev		3090077	0					
ANR	3091190	CastExpression	( eprn_Device * ) dev		3090077	0					
ANR	3091191	CastTarget	eprn_Device *		3090077	0					
ANR	3091192	Identifier	dev		3090077	1					
ANR	3091193	Argument	NULL		3090077	1					
ANR	3091194	Identifier	NULL		3090077	0					
ANR	3091195	Argument	0		3090077	2					
ANR	3091196	PrimaryExpression	0		3090077	0					
ANR	3091197	ElseStatement	else		3090077	0					
ANR	3091198	IfStatement	if ( rc < 0 && rc != gs_error_typecheck )		3090077	0					
ANR	3091199	Condition	rc < 0 && rc != gs_error_typecheck	1111:11:38901:38934	3090077	0	True				
ANR	3091200	AndExpression	rc < 0 && rc != gs_error_typecheck		3090077	0		&&			
ANR	3091201	RelationalExpression	rc < 0		3090077	0		<			
ANR	3091202	Identifier	rc		3090077	0					
ANR	3091203	PrimaryExpression	0		3090077	1					
ANR	3091204	EqualityExpression	rc != gs_error_typecheck		3090077	1		!=			
ANR	3091205	Identifier	rc		3090077	0					
ANR	3091206	Identifier	gs_error_typecheck		3090077	1					
ANR	3091207	ExpressionStatement	last_error = rc	1111:47:38937:38952	3090077	1	True				
ANR	3091208	AssignmentExpression	last_error = rc		3090077	0		=			
ANR	3091209	Identifier	last_error		3090077	0					
ANR	3091210	Identifier	rc		3090077	1					
ANR	3091211	ElseStatement	else		3090077	0					
ANR	3091212	IfStatement	"if ( ( rc = param_read_string ( plist , pname , & string_value ) ) == 0 )"		3090077	0					
ANR	3091213	Condition	"( rc = param_read_string ( plist , pname , & string_value ) ) == 0"	1112:11:38965:39022	3090077	0	True				
ANR	3091214	EqualityExpression	"( rc = param_read_string ( plist , pname , & string_value ) ) == 0"		3090077	0		==			
ANR	3091215	AssignmentExpression	"rc = param_read_string ( plist , pname , & string_value )"		3090077	0		=			
ANR	3091216	Identifier	rc		3090077	0					
ANR	3091217	CallExpression	"param_read_string ( plist , pname , & string_value )"		3090077	1					
ANR	3091218	Callee	param_read_string		3090077	0					
ANR	3091219	Identifier	param_read_string		3090077	0					
ANR	3091220	ArgumentList	plist		3090077	1					
ANR	3091221	Argument	plist		3090077	0					
ANR	3091222	Identifier	plist		3090077	0					
ANR	3091223	Argument	pname		3090077	1					
ANR	3091224	Identifier	pname		3090077	0					
ANR	3091225	Argument	& string_value		3090077	2					
ANR	3091226	UnaryOperationExpression	& string_value		3090077	0					
ANR	3091227	UnaryOperator	&		3090077	0					
ANR	3091228	Identifier	string_value		3090077	1					
ANR	3091229	PrimaryExpression	0		3090077	1					
ANR	3091230	CompoundStatement		205:71:7858:7858	3090077	1					
ANR	3091231	IfStatement	if ( string_value . size > 0 )		3090077	0					
ANR	3091232	Condition	string_value . size > 0	1113:8:39035:39055	3090077	0	True				
ANR	3091233	RelationalExpression	string_value . size > 0		3090077	0		>			
ANR	3091234	MemberAccess	string_value . size		3090077	0					
ANR	3091235	Identifier	string_value		3090077	0					
ANR	3091236	Identifier	size		3090077	1					
ANR	3091237	PrimaryExpression	0		3090077	1					
ANR	3091238	CompoundStatement		206:31:7891:7891	3090077	1					
ANR	3091239	IfStatement	"if ( ( eprn -> media_file == NULL || strncmp ( eprn -> media_file , ( const char * ) string_value . data , string_value . size ) != 0 || eprn -> media_file [ string_value . size ] != '\\0' ) && dev -> is_open )"		3090077	0					
ANR	3091240	Condition	"( eprn -> media_file == NULL || strncmp ( eprn -> media_file , ( const char * ) string_value . data , string_value . size ) != 0 || eprn -> media_file [ string_value . size ] != '\\0' ) && dev -> is_open"	1114:10:39070:39276	3090077	0	True				
ANR	3091241	AndExpression	"( eprn -> media_file == NULL || strncmp ( eprn -> media_file , ( const char * ) string_value . data , string_value . size ) != 0 || eprn -> media_file [ string_value . size ] != '\\0' ) && dev -> is_open"		3090077	0		&&			
ANR	3091242	OrExpression	"eprn -> media_file == NULL || strncmp ( eprn -> media_file , ( const char * ) string_value . data , string_value . size ) != 0 || eprn -> media_file [ string_value . size ] != '\\0'"		3090077	0		||			
ANR	3091243	EqualityExpression	eprn -> media_file == NULL		3090077	0		==			
ANR	3091244	PtrMemberAccess	eprn -> media_file		3090077	0					
ANR	3091245	Identifier	eprn		3090077	0					
ANR	3091246	Identifier	media_file		3090077	1					
ANR	3091247	Identifier	NULL		3090077	1					
ANR	3091248	OrExpression	"strncmp ( eprn -> media_file , ( const char * ) string_value . data , string_value . size ) != 0 || eprn -> media_file [ string_value . size ] != '\\0'"		3090077	1		||			
ANR	3091249	EqualityExpression	"strncmp ( eprn -> media_file , ( const char * ) string_value . data , string_value . size ) != 0"		3090077	0		!=			
ANR	3091250	CallExpression	"strncmp ( eprn -> media_file , ( const char * ) string_value . data , string_value . size )"		3090077	0					
ANR	3091251	Callee	strncmp		3090077	0					
ANR	3091252	Identifier	strncmp		3090077	0					
ANR	3091253	ArgumentList	eprn -> media_file		3090077	1					
ANR	3091254	Argument	eprn -> media_file		3090077	0					
ANR	3091255	PtrMemberAccess	eprn -> media_file		3090077	0					
ANR	3091256	Identifier	eprn		3090077	0					
ANR	3091257	Identifier	media_file		3090077	1					
ANR	3091258	Argument	( const char * ) string_value . data		3090077	1					
ANR	3091259	CastExpression	( const char * ) string_value . data		3090077	0					
ANR	3091260	CastTarget	const char *		3090077	0					
ANR	3091261	MemberAccess	string_value . data		3090077	1					
ANR	3091262	Identifier	string_value		3090077	0					
ANR	3091263	Identifier	data		3090077	1					
ANR	3091264	Argument	string_value . size		3090077	2					
ANR	3091265	MemberAccess	string_value . size		3090077	0					
ANR	3091266	Identifier	string_value		3090077	0					
ANR	3091267	Identifier	size		3090077	1					
ANR	3091268	PrimaryExpression	0		3090077	1					
ANR	3091269	EqualityExpression	eprn -> media_file [ string_value . size ] != '\\0'		3090077	1		!=			
ANR	3091270	ArrayIndexing	eprn -> media_file [ string_value . size ]		3090077	0					
ANR	3091271	PtrMemberAccess	eprn -> media_file		3090077	0					
ANR	3091272	Identifier	eprn		3090077	0					
ANR	3091273	Identifier	media_file		3090077	1					
ANR	3091274	MemberAccess	string_value . size		3090077	1					
ANR	3091275	Identifier	string_value		3090077	0					
ANR	3091276	Identifier	size		3090077	1					
ANR	3091277	PrimaryExpression	'\\0'		3090077	1					
ANR	3091278	PtrMemberAccess	dev -> is_open		3090077	1					
ANR	3091279	Identifier	dev		3090077	0					
ANR	3091280	Identifier	is_open		3090077	1					
ANR	3091281	ExpressionStatement	gs_closedevice ( dev )	1118:8:39287:39306	3090077	1	True				
ANR	3091282	CallExpression	gs_closedevice ( dev )		3090077	0					
ANR	3091283	Callee	gs_closedevice		3090077	0					
ANR	3091284	Identifier	gs_closedevice		3090077	0					
ANR	3091285	ArgumentList	dev		3090077	1					
ANR	3091286	Argument	dev		3090077	0					
ANR	3091287	Identifier	dev		3090077	0					
ANR	3091288	ExpressionStatement	"rc = eprn_set_media_data ( ( eprn_Device * ) dev , ( const char * ) string_value . data , string_value . size )"	1119:6:39314:39418	3090077	1	True				
ANR	3091289	AssignmentExpression	"rc = eprn_set_media_data ( ( eprn_Device * ) dev , ( const char * ) string_value . data , string_value . size )"		3090077	0		=			
ANR	3091290	Identifier	rc		3090077	0					
ANR	3091291	CallExpression	"eprn_set_media_data ( ( eprn_Device * ) dev , ( const char * ) string_value . data , string_value . size )"		3090077	1					
ANR	3091292	Callee	eprn_set_media_data		3090077	0					
ANR	3091293	Identifier	eprn_set_media_data		3090077	0					
ANR	3091294	ArgumentList	( eprn_Device * ) dev		3090077	1					
ANR	3091295	Argument	( eprn_Device * ) dev		3090077	0					
ANR	3091296	CastExpression	( eprn_Device * ) dev		3090077	0					
ANR	3091297	CastTarget	eprn_Device *		3090077	0					
ANR	3091298	Identifier	dev		3090077	1					
ANR	3091299	Argument	( const char * ) string_value . data		3090077	1					
ANR	3091300	CastExpression	( const char * ) string_value . data		3090077	0					
ANR	3091301	CastTarget	const char *		3090077	0					
ANR	3091302	MemberAccess	string_value . data		3090077	1					
ANR	3091303	Identifier	string_value		3090077	0					
ANR	3091304	Identifier	data		3090077	1					
ANR	3091305	Argument	string_value . size		3090077	2					
ANR	3091306	MemberAccess	string_value . size		3090077	0					
ANR	3091307	Identifier	string_value		3090077	0					
ANR	3091308	Identifier	size		3090077	1					
ANR	3091309	ElseStatement	else		3090077	0					
ANR	3091310	CompoundStatement		215:9:8268:8268	3090077	0					
ANR	3091311	IfStatement	if ( eprn -> media_file != NULL && dev -> is_open )		3090077	0					
ANR	3091312	Condition	eprn -> media_file != NULL && dev -> is_open	1123:10:39447:39486	3090077	0	True				
ANR	3091313	AndExpression	eprn -> media_file != NULL && dev -> is_open		3090077	0		&&			
ANR	3091314	EqualityExpression	eprn -> media_file != NULL		3090077	0		!=			
ANR	3091315	PtrMemberAccess	eprn -> media_file		3090077	0					
ANR	3091316	Identifier	eprn		3090077	0					
ANR	3091317	Identifier	media_file		3090077	1					
ANR	3091318	Identifier	NULL		3090077	1					
ANR	3091319	PtrMemberAccess	dev -> is_open		3090077	1					
ANR	3091320	Identifier	dev		3090077	0					
ANR	3091321	Identifier	is_open		3090077	1					
ANR	3091322	ExpressionStatement	gs_closedevice ( dev )	1123:52:39489:39508	3090077	1	True				
ANR	3091323	CallExpression	gs_closedevice ( dev )		3090077	0					
ANR	3091324	Callee	gs_closedevice		3090077	0					
ANR	3091325	Identifier	gs_closedevice		3090077	0					
ANR	3091326	ArgumentList	dev		3090077	1					
ANR	3091327	Argument	dev		3090077	0					
ANR	3091328	Identifier	dev		3090077	0					
ANR	3091329	ExpressionStatement	"rc = eprn_set_media_data ( ( eprn_Device * ) dev , NULL , 0 )"	1124:6:39516:39569	3090077	1	True				
ANR	3091330	AssignmentExpression	"rc = eprn_set_media_data ( ( eprn_Device * ) dev , NULL , 0 )"		3090077	0		=			
ANR	3091331	Identifier	rc		3090077	0					
ANR	3091332	CallExpression	"eprn_set_media_data ( ( eprn_Device * ) dev , NULL , 0 )"		3090077	1					
ANR	3091333	Callee	eprn_set_media_data		3090077	0					
ANR	3091334	Identifier	eprn_set_media_data		3090077	0					
ANR	3091335	ArgumentList	( eprn_Device * ) dev		3090077	1					
ANR	3091336	Argument	( eprn_Device * ) dev		3090077	0					
ANR	3091337	CastExpression	( eprn_Device * ) dev		3090077	0					
ANR	3091338	CastTarget	eprn_Device *		3090077	0					
ANR	3091339	Identifier	dev		3090077	1					
ANR	3091340	Argument	NULL		3090077	1					
ANR	3091341	Identifier	NULL		3090077	0					
ANR	3091342	Argument	0		3090077	2					
ANR	3091343	PrimaryExpression	0		3090077	0					
ANR	3091344	IfStatement	if ( rc != 0 )		3090077	1					
ANR	3091345	Condition	rc != 0	1127:8:39586:39592	3090077	0	True				
ANR	3091346	EqualityExpression	rc != 0		3090077	0		!=			
ANR	3091347	Identifier	rc		3090077	0					
ANR	3091348	PrimaryExpression	0		3090077	1					
ANR	3091349	CompoundStatement		220:17:8428:8428	3090077	1					
ANR	3091350	ExpressionStatement	last_error = rc	1128:6:39603:39618	3090077	0	True				
ANR	3091351	AssignmentExpression	last_error = rc		3090077	0		=			
ANR	3091352	Identifier	last_error		3090077	0					
ANR	3091353	Identifier	rc		3090077	1					
ANR	3091354	ExpressionStatement	"param_signal_error ( plist , pname , last_error )"	1129:6:39626:39670	3090077	1	True				
ANR	3091355	CallExpression	"param_signal_error ( plist , pname , last_error )"		3090077	0					
ANR	3091356	Callee	param_signal_error		3090077	0					
ANR	3091357	Identifier	param_signal_error		3090077	0					
ANR	3091358	ArgumentList	plist		3090077	1					
ANR	3091359	Argument	plist		3090077	0					
ANR	3091360	Identifier	plist		3090077	0					
ANR	3091361	Argument	pname		3090077	1					
ANR	3091362	Identifier	pname		3090077	0					
ANR	3091363	Argument	last_error		3090077	2					
ANR	3091364	Identifier	last_error		3090077	0					
ANR	3091365	ElseStatement	else		3090077	0					
ANR	3091366	IfStatement	if ( rc < 0 )		3090077	0					
ANR	3091367	Condition	rc < 0	1132:11:39693:39698	3090077	0	True				
ANR	3091368	RelationalExpression	rc < 0		3090077	0		<			
ANR	3091369	Identifier	rc		3090077	0					
ANR	3091370	PrimaryExpression	0		3090077	1					
ANR	3091371	ExpressionStatement	last_error = rc	1132:19:39701:39716	3090077	1	True				
ANR	3091372	AssignmentExpression	last_error = rc		3090077	0		=			
ANR	3091373	Identifier	last_error		3090077	0					
ANR	3091374	Identifier	rc		3090077	1					
ANR	3091375	IfStatement	"if ( ( rc = param_read_null ( plist , ( pname = ""MediaPosition"" ) ) ) == 0 )"		3090077	34					
ANR	3091376	Condition	"( rc = param_read_null ( plist , ( pname = ""MediaPosition"" ) ) ) == 0"	1135:6:39759:39819	3090077	0	True				
ANR	3091377	EqualityExpression	"( rc = param_read_null ( plist , ( pname = ""MediaPosition"" ) ) ) == 0"		3090077	0		==			
ANR	3091378	AssignmentExpression	"rc = param_read_null ( plist , ( pname = ""MediaPosition"" ) )"		3090077	0		=			
ANR	3091379	Identifier	rc		3090077	0					
ANR	3091380	CallExpression	"param_read_null ( plist , ( pname = ""MediaPosition"" ) )"		3090077	1					
ANR	3091381	Callee	param_read_null		3090077	0					
ANR	3091382	Identifier	param_read_null		3090077	0					
ANR	3091383	ArgumentList	plist		3090077	1					
ANR	3091384	Argument	plist		3090077	0					
ANR	3091385	Identifier	plist		3090077	0					
ANR	3091386	Argument	"pname = ""MediaPosition"""		3090077	1					
ANR	3091387	AssignmentExpression	"pname = ""MediaPosition"""		3090077	0		=			
ANR	3091388	Identifier	pname		3090077	0					
ANR	3091389	PrimaryExpression	"""MediaPosition"""		3090077	1					
ANR	3091390	PrimaryExpression	0		3090077	1					
ANR	3091391	ExpressionStatement	eprn -> media_position_set = false	1136:4:39826:39858	3090077	1	True				
ANR	3091392	AssignmentExpression	eprn -> media_position_set = false		3090077	0		=			
ANR	3091393	PtrMemberAccess	eprn -> media_position_set		3090077	0					
ANR	3091394	Identifier	eprn		3090077	0					
ANR	3091395	Identifier	media_position_set		3090077	1					
ANR	3091396	Identifier	false		3090077	1					
ANR	3091397	ElseStatement	else		3090077	0					
ANR	3091398	IfStatement	"if ( rc < 0 && ( rc = param_read_int ( plist , pname , & eprn -> media_position ) ) == 0 )"		3090077	0					
ANR	3091399	Condition	"rc < 0 && ( rc = param_read_int ( plist , pname , & eprn -> media_position ) ) == 0"	1137:11:39871:39949	3090077	0	True				
ANR	3091400	AndExpression	"rc < 0 && ( rc = param_read_int ( plist , pname , & eprn -> media_position ) ) == 0"		3090077	0		&&			
ANR	3091401	RelationalExpression	rc < 0		3090077	0		<			
ANR	3091402	Identifier	rc		3090077	0					
ANR	3091403	PrimaryExpression	0		3090077	1					
ANR	3091404	EqualityExpression	"( rc = param_read_int ( plist , pname , & eprn -> media_position ) ) == 0"		3090077	1		==			
ANR	3091405	AssignmentExpression	"rc = param_read_int ( plist , pname , & eprn -> media_position )"		3090077	0		=			
ANR	3091406	Identifier	rc		3090077	0					
ANR	3091407	CallExpression	"param_read_int ( plist , pname , & eprn -> media_position )"		3090077	1					
ANR	3091408	Callee	param_read_int		3090077	0					
ANR	3091409	Identifier	param_read_int		3090077	0					
ANR	3091410	ArgumentList	plist		3090077	1					
ANR	3091411	Argument	plist		3090077	0					
ANR	3091412	Identifier	plist		3090077	0					
ANR	3091413	Argument	pname		3090077	1					
ANR	3091414	Identifier	pname		3090077	0					
ANR	3091415	Argument	& eprn -> media_position		3090077	2					
ANR	3091416	UnaryOperationExpression	& eprn -> media_position		3090077	0					
ANR	3091417	UnaryOperator	&		3090077	0					
ANR	3091418	PtrMemberAccess	eprn -> media_position		3090077	1					
ANR	3091419	Identifier	eprn		3090077	0					
ANR	3091420	Identifier	media_position		3090077	1					
ANR	3091421	PrimaryExpression	0		3090077	1					
ANR	3091422	CompoundStatement		231:12:8785:8785	3090077	1					
ANR	3091423	IfStatement	if ( eprn -> media_position < 0 )		3090077	0					
ANR	3091424	Condition	eprn -> media_position < 0	1141:8:40078:40101	3090077	0	True				
ANR	3091425	RelationalExpression	eprn -> media_position < 0		3090077	0		<			
ANR	3091426	PtrMemberAccess	eprn -> media_position		3090077	0					
ANR	3091427	Identifier	eprn		3090077	0					
ANR	3091428	Identifier	media_position		3090077	1					
ANR	3091429	PrimaryExpression	0		3090077	1					
ANR	3091430	Statement	eprintf3	1142:6:40110:40117	3090077	1	True				
ANR	3091431	Statement	(	1142:14:40118:40118	3090077	1	True				
ANR	3091432	Statement	"""%s"""	1142:15:40119:40122	3090077	2	True				
ANR	3091433	Statement	WARNPREF	1142:20:40124:40131	3090077	3	True				
ANR	3091434	Statement	"""Ghostscript does not accept negative values (%d) for the\\n"""	1143:8:40141:40200	3090077	4	True				
ANR	3091435	Statement	"""%s    `MediaPosition' parameter.\\n"""	1144:10:40212:40247	3090077	5	True				
ANR	3091436	Statement	","	1144:46:40248:40248	3090077	6	True				
ANR	3091437	Statement	wpref	1145:8:40258:40262	3090077	7	True				
ANR	3091438	Statement	","	1145:13:40263:40263	3090077	8	True				
ANR	3091439	Statement	eprn	1145:15:40265:40268	3090077	9	True				
ANR	3091440	Statement	->	1145:19:40269:40270	3090077	10	True				
ANR	3091441	Statement	media_position	1145:21:40271:40284	3090077	11	True				
ANR	3091442	Statement	","	1145:35:40285:40285	3090077	12	True				
ANR	3091443	Statement	wpref	1145:37:40287:40291	3090077	13	True				
ANR	3091444	Statement	)	1145:42:40292:40292	3090077	14	True				
ANR	3091445	ExpressionStatement		1145:43:40293:40293	3090077	15	True				
ANR	3091446	ExpressionStatement	eprn -> media_position_set = true	1148:4:40437:40468	3090077	16	True				
ANR	3091447	AssignmentExpression	eprn -> media_position_set = true		3090077	0		=			
ANR	3091448	PtrMemberAccess	eprn -> media_position_set		3090077	0					
ANR	3091449	Identifier	eprn		3090077	0					
ANR	3091450	Identifier	media_position_set		3090077	1					
ANR	3091451	Identifier	true		3090077	1					
ANR	3091452	ElseStatement	else		3090077	0					
ANR	3091453	IfStatement	if ( rc < 0 )		3090077	0					
ANR	3091454	Condition	rc < 0	1150:11:40485:40490	3090077	0	True				
ANR	3091455	RelationalExpression	rc < 0		3090077	0		<			
ANR	3091456	Identifier	rc		3090077	0					
ANR	3091457	PrimaryExpression	0		3090077	1					
ANR	3091458	ExpressionStatement	last_error = rc	1150:19:40493:40508	3090077	1	True				
ANR	3091459	AssignmentExpression	last_error = rc		3090077	0		=			
ANR	3091460	Identifier	last_error		3090077	0					
ANR	3091461	Identifier	rc		3090077	1					
ANR	3091462	IfStatement	"if ( ( rc = param_read_null ( plist , ( pname = ""PageCountFile"" ) ) ) == 0 )"		3090077	35					
ANR	3091463	Condition	"( rc = param_read_null ( plist , ( pname = ""PageCountFile"" ) ) ) == 0"	1155:6:40611:40671	3090077	0	True				
ANR	3091464	EqualityExpression	"( rc = param_read_null ( plist , ( pname = ""PageCountFile"" ) ) ) == 0"		3090077	0		==			
ANR	3091465	AssignmentExpression	"rc = param_read_null ( plist , ( pname = ""PageCountFile"" ) )"		3090077	0		=			
ANR	3091466	Identifier	rc		3090077	0					
ANR	3091467	CallExpression	"param_read_null ( plist , ( pname = ""PageCountFile"" ) )"		3090077	1					
ANR	3091468	Callee	param_read_null		3090077	0					
ANR	3091469	Identifier	param_read_null		3090077	0					
ANR	3091470	ArgumentList	plist		3090077	1					
ANR	3091471	Argument	plist		3090077	0					
ANR	3091472	Identifier	plist		3090077	0					
ANR	3091473	Argument	"pname = ""PageCountFile"""		3090077	1					
ANR	3091474	AssignmentExpression	"pname = ""PageCountFile"""		3090077	0		=			
ANR	3091475	Identifier	pname		3090077	0					
ANR	3091476	PrimaryExpression	"""PageCountFile"""		3090077	1					
ANR	3091477	PrimaryExpression	0		3090077	1					
ANR	3091478	CompoundStatement		248:69:9507:9507	3090077	1					
ANR	3091479	IfStatement	if ( eprn -> pagecount_file != NULL )		3090077	0					
ANR	3091480	Condition	eprn -> pagecount_file != NULL	1156:8:40684:40711	3090077	0	True				
ANR	3091481	EqualityExpression	eprn -> pagecount_file != NULL		3090077	0		!=			
ANR	3091482	PtrMemberAccess	eprn -> pagecount_file		3090077	0					
ANR	3091483	Identifier	eprn		3090077	0					
ANR	3091484	Identifier	pagecount_file		3090077	1					
ANR	3091485	Identifier	NULL		3090077	1					
ANR	3091486	CompoundStatement		249:38:9547:9547	3090077	1					
ANR	3091487	ExpressionStatement	"gs_free ( dev -> memory -> non_gc_memory , eprn -> pagecount_file , strlen ( eprn -> pagecount_file ) + 1 , sizeof ( char ) , ""eprn_put_params"" )"	1157:6:40722:40854	3090077	0	True				
ANR	3091488	CallExpression	"gs_free ( dev -> memory -> non_gc_memory , eprn -> pagecount_file , strlen ( eprn -> pagecount_file ) + 1 , sizeof ( char ) , ""eprn_put_params"" )"		3090077	0					
ANR	3091489	Callee	gs_free		3090077	0					
ANR	3091490	Identifier	gs_free		3090077	0					
ANR	3091491	ArgumentList	dev -> memory -> non_gc_memory		3090077	1					
ANR	3091492	Argument	dev -> memory -> non_gc_memory		3090077	0					
ANR	3091493	PtrMemberAccess	dev -> memory -> non_gc_memory		3090077	0					
ANR	3091494	PtrMemberAccess	dev -> memory		3090077	0					
ANR	3091495	Identifier	dev		3090077	0					
ANR	3091496	Identifier	memory		3090077	1					
ANR	3091497	Identifier	non_gc_memory		3090077	1					
ANR	3091498	Argument	eprn -> pagecount_file		3090077	1					
ANR	3091499	PtrMemberAccess	eprn -> pagecount_file		3090077	0					
ANR	3091500	Identifier	eprn		3090077	0					
ANR	3091501	Identifier	pagecount_file		3090077	1					
ANR	3091502	Argument	strlen ( eprn -> pagecount_file ) + 1		3090077	2					
ANR	3091503	AdditiveExpression	strlen ( eprn -> pagecount_file ) + 1		3090077	0		+			
ANR	3091504	CallExpression	strlen ( eprn -> pagecount_file )		3090077	0					
ANR	3091505	Callee	strlen		3090077	0					
ANR	3091506	Identifier	strlen		3090077	0					
ANR	3091507	ArgumentList	eprn -> pagecount_file		3090077	1					
ANR	3091508	Argument	eprn -> pagecount_file		3090077	0					
ANR	3091509	PtrMemberAccess	eprn -> pagecount_file		3090077	0					
ANR	3091510	Identifier	eprn		3090077	0					
ANR	3091511	Identifier	pagecount_file		3090077	1					
ANR	3091512	PrimaryExpression	1		3090077	1					
ANR	3091513	Argument	sizeof ( char )		3090077	3					
ANR	3091514	SizeofExpression	sizeof ( char )		3090077	0					
ANR	3091515	Sizeof	sizeof		3090077	0					
ANR	3091516	SizeofOperand	char		3090077	1					
ANR	3091517	Argument	"""eprn_put_params"""		3090077	4					
ANR	3091518	PrimaryExpression	"""eprn_put_params"""		3090077	0					
ANR	3091519	ExpressionStatement	eprn -> pagecount_file = NULL	1159:6:40862:40889	3090077	1	True				
ANR	3091520	AssignmentExpression	eprn -> pagecount_file = NULL		3090077	0		=			
ANR	3091521	PtrMemberAccess	eprn -> pagecount_file		3090077	0					
ANR	3091522	Identifier	eprn		3090077	0					
ANR	3091523	Identifier	pagecount_file		3090077	1					
ANR	3091524	Identifier	NULL		3090077	1					
ANR	3091525	ElseStatement	else		3090077	0					
ANR	3091526	IfStatement	if ( rc < 0 && rc != gs_error_typecheck )		3090077	0					
ANR	3091527	Condition	rc < 0 && rc != gs_error_typecheck	1162:11:40912:40945	3090077	0	True				
ANR	3091528	AndExpression	rc < 0 && rc != gs_error_typecheck		3090077	0		&&			
ANR	3091529	RelationalExpression	rc < 0		3090077	0		<			
ANR	3091530	Identifier	rc		3090077	0					
ANR	3091531	PrimaryExpression	0		3090077	1					
ANR	3091532	EqualityExpression	rc != gs_error_typecheck		3090077	1		!=			
ANR	3091533	Identifier	rc		3090077	0					
ANR	3091534	Identifier	gs_error_typecheck		3090077	1					
ANR	3091535	ExpressionStatement	last_error = rc	1162:47:40948:40963	3090077	1	True				
ANR	3091536	AssignmentExpression	last_error = rc		3090077	0		=			
ANR	3091537	Identifier	last_error		3090077	0					
ANR	3091538	Identifier	rc		3090077	1					
ANR	3091539	ElseStatement	else		3090077	0					
ANR	3091540	IfStatement	"if ( ( rc = param_read_string ( plist , pname , & string_value ) ) == 0 )"		3090077	0					
ANR	3091541	Condition	"( rc = param_read_string ( plist , pname , & string_value ) ) == 0"	1163:11:40976:41033	3090077	0	True				
ANR	3091542	EqualityExpression	"( rc = param_read_string ( plist , pname , & string_value ) ) == 0"		3090077	0		==			
ANR	3091543	AssignmentExpression	"rc = param_read_string ( plist , pname , & string_value )"		3090077	0		=			
ANR	3091544	Identifier	rc		3090077	0					
ANR	3091545	CallExpression	"param_read_string ( plist , pname , & string_value )"		3090077	1					
ANR	3091546	Callee	param_read_string		3090077	0					
ANR	3091547	Identifier	param_read_string		3090077	0					
ANR	3091548	ArgumentList	plist		3090077	1					
ANR	3091549	Argument	plist		3090077	0					
ANR	3091550	Identifier	plist		3090077	0					
ANR	3091551	Argument	pname		3090077	1					
ANR	3091552	Identifier	pname		3090077	0					
ANR	3091553	Argument	& string_value		3090077	2					
ANR	3091554	UnaryOperationExpression	& string_value		3090077	0					
ANR	3091555	UnaryOperator	&		3090077	0					
ANR	3091556	Identifier	string_value		3090077	1					
ANR	3091557	PrimaryExpression	0		3090077	1					
ANR	3091558	CompoundStatement		256:71:9869:9869	3090077	1					
ANR	3091559	IfStatement	if ( eprn -> pagecount_file != NULL )		3090077	0					
ANR	3091560	Condition	eprn -> pagecount_file != NULL	1165:8:41073:41100	3090077	0	True				
ANR	3091561	EqualityExpression	eprn -> pagecount_file != NULL		3090077	0		!=			
ANR	3091562	PtrMemberAccess	eprn -> pagecount_file		3090077	0					
ANR	3091563	Identifier	eprn		3090077	0					
ANR	3091564	Identifier	pagecount_file		3090077	1					
ANR	3091565	Identifier	NULL		3090077	1					
ANR	3091566	CompoundStatement		258:38:9936:9936	3090077	1					
ANR	3091567	ExpressionStatement	"gs_free ( dev -> memory -> non_gc_memory , eprn -> pagecount_file , strlen ( eprn -> pagecount_file ) + 1 , sizeof ( char ) , ""eprn_put_params"" )"	1166:6:41111:41243	3090077	0	True				
ANR	3091568	CallExpression	"gs_free ( dev -> memory -> non_gc_memory , eprn -> pagecount_file , strlen ( eprn -> pagecount_file ) + 1 , sizeof ( char ) , ""eprn_put_params"" )"		3090077	0					
ANR	3091569	Callee	gs_free		3090077	0					
ANR	3091570	Identifier	gs_free		3090077	0					
ANR	3091571	ArgumentList	dev -> memory -> non_gc_memory		3090077	1					
ANR	3091572	Argument	dev -> memory -> non_gc_memory		3090077	0					
ANR	3091573	PtrMemberAccess	dev -> memory -> non_gc_memory		3090077	0					
ANR	3091574	PtrMemberAccess	dev -> memory		3090077	0					
ANR	3091575	Identifier	dev		3090077	0					
ANR	3091576	Identifier	memory		3090077	1					
ANR	3091577	Identifier	non_gc_memory		3090077	1					
ANR	3091578	Argument	eprn -> pagecount_file		3090077	1					
ANR	3091579	PtrMemberAccess	eprn -> pagecount_file		3090077	0					
ANR	3091580	Identifier	eprn		3090077	0					
ANR	3091581	Identifier	pagecount_file		3090077	1					
ANR	3091582	Argument	strlen ( eprn -> pagecount_file ) + 1		3090077	2					
ANR	3091583	AdditiveExpression	strlen ( eprn -> pagecount_file ) + 1		3090077	0		+			
ANR	3091584	CallExpression	strlen ( eprn -> pagecount_file )		3090077	0					
ANR	3091585	Callee	strlen		3090077	0					
ANR	3091586	Identifier	strlen		3090077	0					
ANR	3091587	ArgumentList	eprn -> pagecount_file		3090077	1					
ANR	3091588	Argument	eprn -> pagecount_file		3090077	0					
ANR	3091589	PtrMemberAccess	eprn -> pagecount_file		3090077	0					
ANR	3091590	Identifier	eprn		3090077	0					
ANR	3091591	Identifier	pagecount_file		3090077	1					
ANR	3091592	PrimaryExpression	1		3090077	1					
ANR	3091593	Argument	sizeof ( char )		3090077	3					
ANR	3091594	SizeofExpression	sizeof ( char )		3090077	0					
ANR	3091595	Sizeof	sizeof		3090077	0					
ANR	3091596	SizeofOperand	char		3090077	1					
ANR	3091597	Argument	"""eprn_put_params"""		3090077	4					
ANR	3091598	PrimaryExpression	"""eprn_put_params"""		3090077	0					
ANR	3091599	ExpressionStatement	eprn -> pagecount_file = NULL	1168:6:41251:41278	3090077	1	True				
ANR	3091600	AssignmentExpression	eprn -> pagecount_file = NULL		3090077	0		=			
ANR	3091601	PtrMemberAccess	eprn -> pagecount_file		3090077	0					
ANR	3091602	Identifier	eprn		3090077	0					
ANR	3091603	Identifier	pagecount_file		3090077	1					
ANR	3091604	Identifier	NULL		3090077	1					
ANR	3091605	IfStatement	if ( string_value . size > 0 )		3090077	1					
ANR	3091606	Condition	string_value . size > 0	1172:8:41351:41371	3090077	0	True				
ANR	3091607	RelationalExpression	string_value . size > 0		3090077	0		>			
ANR	3091608	MemberAccess	string_value . size		3090077	0					
ANR	3091609	Identifier	string_value		3090077	0					
ANR	3091610	Identifier	size		3090077	1					
ANR	3091611	PrimaryExpression	0		3090077	1					
ANR	3091612	CompoundStatement		265:31:10207:10207	3090077	1					
ANR	3091613	ExpressionStatement	"eprn -> pagecount_file = ( char * ) gs_malloc ( dev -> memory -> non_gc_memory , string_value . size + 1 , sizeof ( char ) , ""eprn_put_params"" )"	1173:6:41382:41514	3090077	0	True				
ANR	3091614	AssignmentExpression	"eprn -> pagecount_file = ( char * ) gs_malloc ( dev -> memory -> non_gc_memory , string_value . size + 1 , sizeof ( char ) , ""eprn_put_params"" )"		3090077	0		=			
ANR	3091615	PtrMemberAccess	eprn -> pagecount_file		3090077	0					
ANR	3091616	Identifier	eprn		3090077	0					
ANR	3091617	Identifier	pagecount_file		3090077	1					
ANR	3091618	CastExpression	"( char * ) gs_malloc ( dev -> memory -> non_gc_memory , string_value . size + 1 , sizeof ( char ) , ""eprn_put_params"" )"		3090077	1					
ANR	3091619	CastTarget	char *		3090077	0					
ANR	3091620	CallExpression	"gs_malloc ( dev -> memory -> non_gc_memory , string_value . size + 1 , sizeof ( char ) , ""eprn_put_params"" )"		3090077	1					
ANR	3091621	Callee	gs_malloc		3090077	0					
ANR	3091622	Identifier	gs_malloc		3090077	0					
ANR	3091623	ArgumentList	dev -> memory -> non_gc_memory		3090077	1					
ANR	3091624	Argument	dev -> memory -> non_gc_memory		3090077	0					
ANR	3091625	PtrMemberAccess	dev -> memory -> non_gc_memory		3090077	0					
ANR	3091626	PtrMemberAccess	dev -> memory		3090077	0					
ANR	3091627	Identifier	dev		3090077	0					
ANR	3091628	Identifier	memory		3090077	1					
ANR	3091629	Identifier	non_gc_memory		3090077	1					
ANR	3091630	Argument	string_value . size + 1		3090077	1					
ANR	3091631	AdditiveExpression	string_value . size + 1		3090077	0		+			
ANR	3091632	MemberAccess	string_value . size		3090077	0					
ANR	3091633	Identifier	string_value		3090077	0					
ANR	3091634	Identifier	size		3090077	1					
ANR	3091635	PrimaryExpression	1		3090077	1					
ANR	3091636	Argument	sizeof ( char )		3090077	2					
ANR	3091637	SizeofExpression	sizeof ( char )		3090077	0					
ANR	3091638	Sizeof	sizeof		3090077	0					
ANR	3091639	SizeofOperand	char		3090077	1					
ANR	3091640	Argument	"""eprn_put_params"""		3090077	3					
ANR	3091641	PrimaryExpression	"""eprn_put_params"""		3090077	0					
ANR	3091642	IfStatement	if ( eprn -> pagecount_file == NULL )		3090077	1					
ANR	3091643	Condition	eprn -> pagecount_file == NULL	1175:10:41526:41553	3090077	0	True				
ANR	3091644	EqualityExpression	eprn -> pagecount_file == NULL		3090077	0		==			
ANR	3091645	PtrMemberAccess	eprn -> pagecount_file		3090077	0					
ANR	3091646	Identifier	eprn		3090077	0					
ANR	3091647	Identifier	pagecount_file		3090077	1					
ANR	3091648	Identifier	NULL		3090077	1					
ANR	3091649	CompoundStatement		268:40:10389:10389	3090077	1					
ANR	3091650	Statement	eprintf1	1176:8:41566:41573	3090077	0	True				
ANR	3091651	Statement	(	1176:16:41574:41574	3090077	1	True				
ANR	3091652	Statement	"""%s"""	1176:18:41576:41579	3090077	2	True				
ANR	3091653	Statement	ERRPREF	1176:23:41581:41587	3090077	3	True				
ANR	3091654	Statement	"""Memory allocation failure from gs_malloc() in eprn_put_params().\\n"""	1177:10:41599:41666	3090077	4	True				
ANR	3091655	Statement	","	1177:78:41667:41667	3090077	5	True				
ANR	3091656	Statement	epref	1178:10:41679:41683	3090077	6	True				
ANR	3091657	Statement	)	1178:15:41684:41684	3090077	7	True				
ANR	3091658	ExpressionStatement		1178:16:41685:41685	3090077	8	True				
ANR	3091659	ExpressionStatement	last_error = gs_error_VMerror	1179:8:41695:41724	3090077	9	True				
ANR	3091660	AssignmentExpression	last_error = gs_error_VMerror		3090077	0		=			
ANR	3091661	Identifier	last_error		3090077	0					
ANR	3091662	Identifier	gs_error_VMerror		3090077	1					
ANR	3091663	ExpressionStatement	"param_signal_error ( plist , pname , last_error )"	1180:8:41734:41778	3090077	10	True				
ANR	3091664	CallExpression	"param_signal_error ( plist , pname , last_error )"		3090077	0					
ANR	3091665	Callee	param_signal_error		3090077	0					
ANR	3091666	Identifier	param_signal_error		3090077	0					
ANR	3091667	ArgumentList	plist		3090077	1					
ANR	3091668	Argument	plist		3090077	0					
ANR	3091669	Identifier	plist		3090077	0					
ANR	3091670	Argument	pname		3090077	1					
ANR	3091671	Identifier	pname		3090077	0					
ANR	3091672	Argument	last_error		3090077	2					
ANR	3091673	Identifier	last_error		3090077	0					
ANR	3091674	ElseStatement	else		3090077	0					
ANR	3091675	CompoundStatement		275:11:10632:10632	3090077	0					
ANR	3091676	ExpressionStatement	"strncpy ( eprn -> pagecount_file , ( const char * ) string_value . data , string_value . size )"	1183:8:41809:41900	3090077	0	True				
ANR	3091677	CallExpression	"strncpy ( eprn -> pagecount_file , ( const char * ) string_value . data , string_value . size )"		3090077	0					
ANR	3091678	Callee	strncpy		3090077	0					
ANR	3091679	Identifier	strncpy		3090077	0					
ANR	3091680	ArgumentList	eprn -> pagecount_file		3090077	1					
ANR	3091681	Argument	eprn -> pagecount_file		3090077	0					
ANR	3091682	PtrMemberAccess	eprn -> pagecount_file		3090077	0					
ANR	3091683	Identifier	eprn		3090077	0					
ANR	3091684	Identifier	pagecount_file		3090077	1					
ANR	3091685	Argument	( const char * ) string_value . data		3090077	1					
ANR	3091686	CastExpression	( const char * ) string_value . data		3090077	0					
ANR	3091687	CastTarget	const char *		3090077	0					
ANR	3091688	MemberAccess	string_value . data		3090077	1					
ANR	3091689	Identifier	string_value		3090077	0					
ANR	3091690	Identifier	data		3090077	1					
ANR	3091691	Argument	string_value . size		3090077	2					
ANR	3091692	MemberAccess	string_value . size		3090077	0					
ANR	3091693	Identifier	string_value		3090077	0					
ANR	3091694	Identifier	size		3090077	1					
ANR	3091695	ExpressionStatement	eprn -> pagecount_file [ string_value . size ] = '\\0'	1185:8:41910:41956	3090077	1	True				
ANR	3091696	AssignmentExpression	eprn -> pagecount_file [ string_value . size ] = '\\0'		3090077	0		=			
ANR	3091697	ArrayIndexing	eprn -> pagecount_file [ string_value . size ]		3090077	0					
ANR	3091698	PtrMemberAccess	eprn -> pagecount_file		3090077	0					
ANR	3091699	Identifier	eprn		3090077	0					
ANR	3091700	Identifier	pagecount_file		3090077	1					
ANR	3091701	MemberAccess	string_value . size		3090077	1					
ANR	3091702	Identifier	string_value		3090077	0					
ANR	3091703	Identifier	size		3090077	1					
ANR	3091704	PrimaryExpression	'\\0'		3090077	1					
ANR	3091705	IfStatement	"if ( ( rc = param_read_int ( plist , ( pname = ""RGBLevels"" ) , & temp ) ) == 0 )"		3090077	36					
ANR	3091706	Condition	"( rc = param_read_int ( plist , ( pname = ""RGBLevels"" ) , & temp ) ) == 0"	1192:6:42037:42099	3090077	0	True				
ANR	3091707	EqualityExpression	"( rc = param_read_int ( plist , ( pname = ""RGBLevels"" ) , & temp ) ) == 0"		3090077	0		==			
ANR	3091708	AssignmentExpression	"rc = param_read_int ( plist , ( pname = ""RGBLevels"" ) , & temp )"		3090077	0		=			
ANR	3091709	Identifier	rc		3090077	0					
ANR	3091710	CallExpression	"param_read_int ( plist , ( pname = ""RGBLevels"" ) , & temp )"		3090077	1					
ANR	3091711	Callee	param_read_int		3090077	0					
ANR	3091712	Identifier	param_read_int		3090077	0					
ANR	3091713	ArgumentList	plist		3090077	1					
ANR	3091714	Argument	plist		3090077	0					
ANR	3091715	Identifier	plist		3090077	0					
ANR	3091716	Argument	"pname = ""RGBLevels"""		3090077	1					
ANR	3091717	AssignmentExpression	"pname = ""RGBLevels"""		3090077	0		=			
ANR	3091718	Identifier	pname		3090077	0					
ANR	3091719	PrimaryExpression	"""RGBLevels"""		3090077	1					
ANR	3091720	Argument	& temp		3090077	2					
ANR	3091721	UnaryOperationExpression	& temp		3090077	0					
ANR	3091722	UnaryOperator	&		3090077	0					
ANR	3091723	Identifier	temp		3090077	1					
ANR	3091724	PrimaryExpression	0		3090077	1					
ANR	3091725	CompoundStatement		285:71:10935:10935	3090077	1					
ANR	3091726	IfStatement	if ( temp == 0 || ( 2 <= temp && temp <= 256 ) )		3090077	0					
ANR	3091727	Condition	temp == 0 || ( 2 <= temp && temp <= 256 )	1193:8:42112:42150	3090077	0	True				
ANR	3091728	OrExpression	temp == 0 || ( 2 <= temp && temp <= 256 )		3090077	0		||			
ANR	3091729	EqualityExpression	temp == 0		3090077	0		==			
ANR	3091730	Identifier	temp		3090077	0					
ANR	3091731	PrimaryExpression	0		3090077	1					
ANR	3091732	AndExpression	2 <= temp && temp <= 256		3090077	1		&&			
ANR	3091733	RelationalExpression	2 <= temp		3090077	0		<=			
ANR	3091734	PrimaryExpression	2		3090077	0					
ANR	3091735	Identifier	temp		3090077	1					
ANR	3091736	RelationalExpression	temp <= 256		3090077	1		<=			
ANR	3091737	Identifier	temp		3090077	0					
ANR	3091738	PrimaryExpression	256		3090077	1					
ANR	3091739	CompoundStatement		286:49:10986:10986	3090077	1					
ANR	3091740	IfStatement	if ( eprn -> non_black_levels != temp && dev -> is_open )		3090077	0					
ANR	3091741	Condition	eprn -> non_black_levels != temp && dev -> is_open	1194:10:42165:42210	3090077	0	True				
ANR	3091742	AndExpression	eprn -> non_black_levels != temp && dev -> is_open		3090077	0		&&			
ANR	3091743	EqualityExpression	eprn -> non_black_levels != temp		3090077	0		!=			
ANR	3091744	PtrMemberAccess	eprn -> non_black_levels		3090077	0					
ANR	3091745	Identifier	eprn		3090077	0					
ANR	3091746	Identifier	non_black_levels		3090077	1					
ANR	3091747	Identifier	temp		3090077	1					
ANR	3091748	PtrMemberAccess	dev -> is_open		3090077	1					
ANR	3091749	Identifier	dev		3090077	0					
ANR	3091750	Identifier	is_open		3090077	1					
ANR	3091751	ExpressionStatement	gs_closedevice ( dev )	1194:58:42213:42232	3090077	1	True				
ANR	3091752	CallExpression	gs_closedevice ( dev )		3090077	0					
ANR	3091753	Callee	gs_closedevice		3090077	0					
ANR	3091754	Identifier	gs_closedevice		3090077	0					
ANR	3091755	ArgumentList	dev		3090077	1					
ANR	3091756	Argument	dev		3090077	0					
ANR	3091757	Identifier	dev		3090077	0					
ANR	3091758	ExpressionStatement	eprn -> non_black_levels = temp	1195:6:42240:42269	3090077	1	True				
ANR	3091759	AssignmentExpression	eprn -> non_black_levels = temp		3090077	0		=			
ANR	3091760	PtrMemberAccess	eprn -> non_black_levels		3090077	0					
ANR	3091761	Identifier	eprn		3090077	0					
ANR	3091762	Identifier	non_black_levels		3090077	1					
ANR	3091763	Identifier	temp		3090077	1					
ANR	3091764	ElseStatement	else		3090077	0					
ANR	3091765	CompoundStatement		290:9:11119:11119	3090077	0					
ANR	3091766	Statement	eprintf2	1198:6:42294:42301	3090077	0	True				
ANR	3091767	Statement	(	1198:14:42302:42302	3090077	1	True				
ANR	3091768	Statement	"""%s"""	1198:15:42303:42306	3090077	2	True				
ANR	3091769	Statement	ERRPREF	1198:20:42308:42314	3090077	3	True				
ANR	3091770	Statement	"""The value for RGBLevels is outside the range permitted: %d.\\n"""	1199:8:42324:42386	3090077	4	True				
ANR	3091771	Statement	","	1199:71:42387:42387	3090077	5	True				
ANR	3091772	Statement	epref	1200:8:42397:42401	3090077	6	True				
ANR	3091773	Statement	","	1200:13:42402:42402	3090077	7	True				
ANR	3091774	Statement	temp	1200:15:42404:42407	3090077	8	True				
ANR	3091775	Statement	)	1200:19:42408:42408	3090077	9	True				
ANR	3091776	ExpressionStatement		1200:20:42409:42409	3090077	10	True				
ANR	3091777	ExpressionStatement	last_error = gs_error_rangecheck	1201:6:42417:42449	3090077	11	True				
ANR	3091778	AssignmentExpression	last_error = gs_error_rangecheck		3090077	0		=			
ANR	3091779	Identifier	last_error		3090077	0					
ANR	3091780	Identifier	gs_error_rangecheck		3090077	1					
ANR	3091781	ExpressionStatement	"param_signal_error ( plist , pname , last_error )"	1202:6:42457:42501	3090077	12	True				
ANR	3091782	CallExpression	"param_signal_error ( plist , pname , last_error )"		3090077	0					
ANR	3091783	Callee	param_signal_error		3090077	0					
ANR	3091784	Identifier	param_signal_error		3090077	0					
ANR	3091785	ArgumentList	plist		3090077	1					
ANR	3091786	Argument	plist		3090077	0					
ANR	3091787	Identifier	plist		3090077	0					
ANR	3091788	Argument	pname		3090077	1					
ANR	3091789	Identifier	pname		3090077	0					
ANR	3091790	Argument	last_error		3090077	2					
ANR	3091791	Identifier	last_error		3090077	0					
ANR	3091792	ElseStatement	else		3090077	0					
ANR	3091793	IfStatement	if ( rc < 0 )		3090077	0					
ANR	3091794	Condition	rc < 0	1205:11:42524:42529	3090077	0	True				
ANR	3091795	RelationalExpression	rc < 0		3090077	0		<			
ANR	3091796	Identifier	rc		3090077	0					
ANR	3091797	PrimaryExpression	0		3090077	1					
ANR	3091798	ExpressionStatement	last_error = rc	1205:19:42532:42547	3090077	1	True				
ANR	3091799	AssignmentExpression	last_error = rc		3090077	0		=			
ANR	3091800	Identifier	last_error		3090077	0					
ANR	3091801	Identifier	rc		3090077	1					
ANR	3091802	ExpressionStatement	set_derived_colour_data ( ( eprn_Device * ) dev )	1208:2:42604:42647	3090077	37	True				
ANR	3091803	CallExpression	set_derived_colour_data ( ( eprn_Device * ) dev )		3090077	0					
ANR	3091804	Callee	set_derived_colour_data		3090077	0					
ANR	3091805	Identifier	set_derived_colour_data		3090077	0					
ANR	3091806	ArgumentList	( eprn_Device * ) dev		3090077	1					
ANR	3091807	Argument	( eprn_Device * ) dev		3090077	0					
ANR	3091808	CastExpression	( eprn_Device * ) dev		3090077	0					
ANR	3091809	CastTarget	eprn_Device *		3090077	0					
ANR	3091810	Identifier	dev		3090077	1					
ANR	3091811	IfStatement	"if ( ( rc = param_read_int ( plist , ( pname = ""BitsPerPixel"" ) , & temp ) ) == 0 )"		3090077	38					
ANR	3091812	Condition	"( rc = param_read_int ( plist , ( pname = ""BitsPerPixel"" ) , & temp ) ) == 0"	1216:6:42976:43041	3090077	0	True				
ANR	3091813	EqualityExpression	"( rc = param_read_int ( plist , ( pname = ""BitsPerPixel"" ) , & temp ) ) == 0"		3090077	0		==			
ANR	3091814	AssignmentExpression	"rc = param_read_int ( plist , ( pname = ""BitsPerPixel"" ) , & temp )"		3090077	0		=			
ANR	3091815	Identifier	rc		3090077	0					
ANR	3091816	CallExpression	"param_read_int ( plist , ( pname = ""BitsPerPixel"" ) , & temp )"		3090077	1					
ANR	3091817	Callee	param_read_int		3090077	0					
ANR	3091818	Identifier	param_read_int		3090077	0					
ANR	3091819	ArgumentList	plist		3090077	1					
ANR	3091820	Argument	plist		3090077	0					
ANR	3091821	Identifier	plist		3090077	0					
ANR	3091822	Argument	"pname = ""BitsPerPixel"""		3090077	1					
ANR	3091823	AssignmentExpression	"pname = ""BitsPerPixel"""		3090077	0		=			
ANR	3091824	Identifier	pname		3090077	0					
ANR	3091825	PrimaryExpression	"""BitsPerPixel"""		3090077	1					
ANR	3091826	Argument	& temp		3090077	2					
ANR	3091827	UnaryOperationExpression	& temp		3090077	0					
ANR	3091828	UnaryOperator	&		3090077	0					
ANR	3091829	Identifier	temp		3090077	1					
ANR	3091830	PrimaryExpression	0		3090077	1					
ANR	3091831	CompoundStatement		309:74:11877:11877	3090077	1					
ANR	3091832	IfStatement	if ( temp != dev -> color_info . depth )		3090077	0					
ANR	3091833	Condition	temp != dev -> color_info . depth	1217:8:43054:43082	3090077	0	True				
ANR	3091834	EqualityExpression	temp != dev -> color_info . depth		3090077	0		!=			
ANR	3091835	Identifier	temp		3090077	0					
ANR	3091836	MemberAccess	dev -> color_info . depth		3090077	1					
ANR	3091837	PtrMemberAccess	dev -> color_info		3090077	0					
ANR	3091838	Identifier	dev		3090077	0					
ANR	3091839	Identifier	color_info		3090077	1					
ANR	3091840	Identifier	depth		3090077	1					
ANR	3091841	CompoundStatement		310:39:11918:11918	3090077	1					
ANR	3091842	Statement	eprintf3	1218:6:43093:43100	3090077	0	True				
ANR	3091843	Statement	(	1218:14:43101:43101	3090077	1	True				
ANR	3091844	Statement	"""%s"""	1218:15:43102:43105	3090077	2	True				
ANR	3091845	Statement	ERRPREF	1218:20:43107:43113	3090077	3	True				
ANR	3091846	Statement	"""Attempt to set `BitsPerPixel' to a value (%d)\\n"""	1219:8:43123:43171	3090077	4	True				
ANR	3091847	Statement	"""%s  other than the one selected by the driver.\\n"""	1220:8:43181:43230	3090077	5	True				
ANR	3091848	Statement	","	1220:58:43231:43231	3090077	6	True				
ANR	3091849	Statement	epref	1221:8:43241:43245	3090077	7	True				
ANR	3091850	Statement	","	1221:13:43246:43246	3090077	8	True				
ANR	3091851	Statement	temp	1221:15:43248:43251	3090077	9	True				
ANR	3091852	Statement	","	1221:19:43252:43252	3090077	10	True				
ANR	3091853	Statement	epref	1221:21:43254:43258	3090077	11	True				
ANR	3091854	Statement	)	1221:26:43259:43259	3090077	12	True				
ANR	3091855	ExpressionStatement		1221:27:43260:43260	3090077	13	True				
ANR	3091856	ExpressionStatement	last_error = gs_error_rangecheck	1222:6:43268:43300	3090077	14	True				
ANR	3091857	AssignmentExpression	last_error = gs_error_rangecheck		3090077	0		=			
ANR	3091858	Identifier	last_error		3090077	0					
ANR	3091859	Identifier	gs_error_rangecheck		3090077	1					
ANR	3091860	ExpressionStatement	"param_signal_error ( plist , pname , last_error )"	1223:6:43308:43352	3090077	15	True				
ANR	3091861	CallExpression	"param_signal_error ( plist , pname , last_error )"		3090077	0					
ANR	3091862	Callee	param_signal_error		3090077	0					
ANR	3091863	Identifier	param_signal_error		3090077	0					
ANR	3091864	ArgumentList	plist		3090077	1					
ANR	3091865	Argument	plist		3090077	0					
ANR	3091866	Identifier	plist		3090077	0					
ANR	3091867	Argument	pname		3090077	1					
ANR	3091868	Identifier	pname		3090077	0					
ANR	3091869	Argument	last_error		3090077	2					
ANR	3091870	Identifier	last_error		3090077	0					
ANR	3091871	ElseStatement	else		3090077	0					
ANR	3091872	IfStatement	if ( rc < 0 )		3090077	0					
ANR	3091873	Condition	rc < 0	1225:13:43373:43378	3090077	0	True				
ANR	3091874	RelationalExpression	rc < 0		3090077	0		<			
ANR	3091875	Identifier	rc		3090077	0					
ANR	3091876	PrimaryExpression	0		3090077	1					
ANR	3091877	ExpressionStatement	last_error = rc	1225:21:43381:43396	3090077	1	True				
ANR	3091878	AssignmentExpression	last_error = rc		3090077	0		=			
ANR	3091879	Identifier	last_error		3090077	0					
ANR	3091880	Identifier	rc		3090077	1					
ANR	3091881	CompoundStatement		323:4:12337:12362	3090077	39					
ANR	3091882	IdentifierDeclStatement	gs_param_typed_value temp ;	1230:4:43504:43529	3090077	0	True				
ANR	3091883	IdentifierDecl	temp		3090077	0					
ANR	3091884	IdentifierDeclType	gs_param_typed_value		3090077	0					
ANR	3091885	Identifier	temp		3090077	1					
ANR	3091886	IfStatement	"if ( param_read_typed ( plist , "".HWMargins"" , & temp ) == 0 )"		3090077	1					
ANR	3091887	Condition	"param_read_typed ( plist , "".HWMargins"" , & temp ) == 0"	1231:8:43539:43587	3090077	0	True				
ANR	3091888	EqualityExpression	"param_read_typed ( plist , "".HWMargins"" , & temp ) == 0"		3090077	0		==			
ANR	3091889	CallExpression	"param_read_typed ( plist , "".HWMargins"" , & temp )"		3090077	0					
ANR	3091890	Callee	param_read_typed		3090077	0					
ANR	3091891	Identifier	param_read_typed		3090077	0					
ANR	3091892	ArgumentList	plist		3090077	1					
ANR	3091893	Argument	plist		3090077	0					
ANR	3091894	Identifier	plist		3090077	0					
ANR	3091895	Argument	""".HWMargins"""		3090077	1					
ANR	3091896	PrimaryExpression	""".HWMargins"""		3090077	0					
ANR	3091897	Argument	& temp		3090077	2					
ANR	3091898	UnaryOperationExpression	& temp		3090077	0					
ANR	3091899	UnaryOperator	&		3090077	0					
ANR	3091900	Identifier	temp		3090077	1					
ANR	3091901	PrimaryExpression	0		3090077	1					
ANR	3091902	CompoundStatement		324:59:12423:12423	3090077	1					
ANR	3091903	ExpressionStatement	"if_debug1 ( EPRN_TRACE_CHAR , ""! .HWMargins is specified: type is %d.\\n"" , ( int ) temp . type )"	1234:6:43654:43748	3090077	0	True				
ANR	3091904	CallExpression	"if_debug1 ( EPRN_TRACE_CHAR , ""! .HWMargins is specified: type is %d.\\n"" , ( int ) temp . type )"		3090077	0					
ANR	3091905	Callee	if_debug1		3090077	0					
ANR	3091906	Identifier	if_debug1		3090077	0					
ANR	3091907	ArgumentList	EPRN_TRACE_CHAR		3090077	1					
ANR	3091908	Argument	EPRN_TRACE_CHAR		3090077	0					
ANR	3091909	Identifier	EPRN_TRACE_CHAR		3090077	0					
ANR	3091910	Argument	"""! .HWMargins is specified: type is %d.\\n"""		3090077	1					
ANR	3091911	PrimaryExpression	"""! .HWMargins is specified: type is %d.\\n"""		3090077	0					
ANR	3091912	Argument	( int ) temp . type		3090077	2					
ANR	3091913	CastExpression	( int ) temp . type		3090077	0					
ANR	3091914	CastTarget	int		3090077	0					
ANR	3091915	MemberAccess	temp . type		3090077	1					
ANR	3091916	Identifier	temp		3090077	0					
ANR	3091917	Identifier	type		3090077	1					
ANR	3091918	ExpressionStatement	eprn -> keep_margins = true	1237:6:43763:43788	3090077	1	True				
ANR	3091919	AssignmentExpression	eprn -> keep_margins = true		3090077	0		=			
ANR	3091920	PtrMemberAccess	eprn -> keep_margins		3090077	0					
ANR	3091921	Identifier	eprn		3090077	0					
ANR	3091922	Identifier	keep_margins		3090077	1					
ANR	3091923	Identifier	true		3090077	1					
ANR	3091924	ExpressionStatement	"rc = gdev_prn_put_params ( dev , plist )"	1243:2:43945:43981	3090077	40	True				
ANR	3091925	AssignmentExpression	"rc = gdev_prn_put_params ( dev , plist )"		3090077	0		=			
ANR	3091926	Identifier	rc		3090077	0					
ANR	3091927	CallExpression	"gdev_prn_put_params ( dev , plist )"		3090077	1					
ANR	3091928	Callee	gdev_prn_put_params		3090077	0					
ANR	3091929	Identifier	gdev_prn_put_params		3090077	0					
ANR	3091930	ArgumentList	dev		3090077	1					
ANR	3091931	Argument	dev		3090077	0					
ANR	3091932	Identifier	dev		3090077	0					
ANR	3091933	Argument	plist		3090077	1					
ANR	3091934	Identifier	plist		3090077	0					
ANR	3091935	IfStatement	if ( rc < 0 || ( rc > 0 && last_error >= 0 ) )		3090077	41					
ANR	3091936	Condition	rc < 0 || ( rc > 0 && last_error >= 0 )	1244:6:43989:44025	3090077	0	True				
ANR	3091937	OrExpression	rc < 0 || ( rc > 0 && last_error >= 0 )		3090077	0		||			
ANR	3091938	RelationalExpression	rc < 0		3090077	0		<			
ANR	3091939	Identifier	rc		3090077	0					
ANR	3091940	PrimaryExpression	0		3090077	1					
ANR	3091941	AndExpression	rc > 0 && last_error >= 0		3090077	1		&&			
ANR	3091942	RelationalExpression	rc > 0		3090077	0		>			
ANR	3091943	Identifier	rc		3090077	0					
ANR	3091944	PrimaryExpression	0		3090077	1					
ANR	3091945	RelationalExpression	last_error >= 0		3090077	1		>=			
ANR	3091946	Identifier	last_error		3090077	0					
ANR	3091947	PrimaryExpression	0		3090077	1					
ANR	3091948	ExpressionStatement	last_error = rc	1245:4:44032:44047	3090077	1	True				
ANR	3091949	AssignmentExpression	last_error = rc		3090077	0		=			
ANR	3091950	Identifier	last_error		3090077	0					
ANR	3091951	Identifier	rc		3090077	1					
ANR	3091952	IfStatement	if ( last_error < 0 )		3090077	42					
ANR	3091953	Condition	last_error < 0	1247:6:44056:44069	3090077	0	True				
ANR	3091954	RelationalExpression	last_error < 0		3090077	0		<			
ANR	3091955	Identifier	last_error		3090077	0					
ANR	3091956	PrimaryExpression	0		3090077	1					
ANR	3091957	ExpressionStatement	return_error ( last_error )	1247:22:44072:44096	3090077	1	True				
ANR	3091958	CallExpression	return_error ( last_error )		3090077	0					
ANR	3091959	Callee	return_error		3090077	0					
ANR	3091960	Identifier	return_error		3090077	0					
ANR	3091961	ArgumentList	last_error		3090077	1					
ANR	3091962	Argument	last_error		3090077	0					
ANR	3091963	Identifier	last_error		3090077	0					
ANR	3091964	IfStatement	if ( dev -> is_open && ( dev -> width != width || dev -> height != height || mediasize [ 0 ] != dev -> MediaSize [ 0 ] || mediasize [ 1 ] != dev -> MediaSize [ 1 ] ) )		3090077	43					
ANR	3091965	Condition	dev -> is_open && ( dev -> width != width || dev -> height != height || mediasize [ 0 ] != dev -> MediaSize [ 0 ] || mediasize [ 1 ] != dev -> MediaSize [ 1 ] )	1250:6:44161:44302	3090077	0	True				
ANR	3091966	AndExpression	dev -> is_open && ( dev -> width != width || dev -> height != height || mediasize [ 0 ] != dev -> MediaSize [ 0 ] || mediasize [ 1 ] != dev -> MediaSize [ 1 ] )		3090077	0		&&			
ANR	3091967	PtrMemberAccess	dev -> is_open		3090077	0					
ANR	3091968	Identifier	dev		3090077	0					
ANR	3091969	Identifier	is_open		3090077	1					
ANR	3091970	OrExpression	dev -> width != width || dev -> height != height || mediasize [ 0 ] != dev -> MediaSize [ 0 ] || mediasize [ 1 ] != dev -> MediaSize [ 1 ]		3090077	1		||			
ANR	3091971	EqualityExpression	dev -> width != width		3090077	0		!=			
ANR	3091972	PtrMemberAccess	dev -> width		3090077	0					
ANR	3091973	Identifier	dev		3090077	0					
ANR	3091974	Identifier	width		3090077	1					
ANR	3091975	Identifier	width		3090077	1					
ANR	3091976	OrExpression	dev -> height != height || mediasize [ 0 ] != dev -> MediaSize [ 0 ] || mediasize [ 1 ] != dev -> MediaSize [ 1 ]		3090077	1		||			
ANR	3091977	EqualityExpression	dev -> height != height		3090077	0		!=			
ANR	3091978	PtrMemberAccess	dev -> height		3090077	0					
ANR	3091979	Identifier	dev		3090077	0					
ANR	3091980	Identifier	height		3090077	1					
ANR	3091981	Identifier	height		3090077	1					
ANR	3091982	OrExpression	mediasize [ 0 ] != dev -> MediaSize [ 0 ] || mediasize [ 1 ] != dev -> MediaSize [ 1 ]		3090077	1		||			
ANR	3091983	EqualityExpression	mediasize [ 0 ] != dev -> MediaSize [ 0 ]		3090077	0		!=			
ANR	3091984	ArrayIndexing	mediasize [ 0 ]		3090077	0					
ANR	3091985	Identifier	mediasize		3090077	0					
ANR	3091986	PrimaryExpression	0		3090077	1					
ANR	3091987	ArrayIndexing	dev -> MediaSize [ 0 ]		3090077	1					
ANR	3091988	PtrMemberAccess	dev -> MediaSize		3090077	0					
ANR	3091989	Identifier	dev		3090077	0					
ANR	3091990	Identifier	MediaSize		3090077	1					
ANR	3091991	PrimaryExpression	0		3090077	1					
ANR	3091992	EqualityExpression	mediasize [ 1 ] != dev -> MediaSize [ 1 ]		3090077	1		!=			
ANR	3091993	ArrayIndexing	mediasize [ 1 ]		3090077	0					
ANR	3091994	Identifier	mediasize		3090077	0					
ANR	3091995	PrimaryExpression	1		3090077	1					
ANR	3091996	ArrayIndexing	dev -> MediaSize [ 1 ]		3090077	1					
ANR	3091997	PtrMemberAccess	dev -> MediaSize		3090077	0					
ANR	3091998	Identifier	dev		3090077	0					
ANR	3091999	Identifier	MediaSize		3090077	1					
ANR	3092000	PrimaryExpression	1		3090077	1					
ANR	3092001	CompoundStatement		344:79:13138:13138	3090077	1					
ANR	3092002	ExpressionStatement	gs_closedevice ( dev )	1252:4:44311:44330	3090077	0	True				
ANR	3092003	CallExpression	gs_closedevice ( dev )		3090077	0					
ANR	3092004	Callee	gs_closedevice		3090077	0					
ANR	3092005	Identifier	gs_closedevice		3090077	0					
ANR	3092006	ArgumentList	dev		3090077	1					
ANR	3092007	Argument	dev		3090077	0					
ANR	3092008	Identifier	dev		3090077	0					
ANR	3092009	ExpressionStatement	"if_debug0 ( EPRN_TRACE_CHAR , ""! Closing device because of page size modification.\\n"" )"	1254:4:44354:44443	3090077	1	True				
ANR	3092010	CallExpression	"if_debug0 ( EPRN_TRACE_CHAR , ""! Closing device because of page size modification.\\n"" )"		3090077	0					
ANR	3092011	Callee	if_debug0		3090077	0					
ANR	3092012	Identifier	if_debug0		3090077	0					
ANR	3092013	ArgumentList	EPRN_TRACE_CHAR		3090077	1					
ANR	3092014	Argument	EPRN_TRACE_CHAR		3090077	0					
ANR	3092015	Identifier	EPRN_TRACE_CHAR		3090077	0					
ANR	3092016	Argument	"""! Closing device because of page size modification.\\n"""		3090077	1					
ANR	3092017	PrimaryExpression	"""! Closing device because of page size modification.\\n"""		3090077	0					
ANR	3092018	ReturnStatement	return last_error ;	1259:2:44459:44476	3090077	44	True				
ANR	3092019	Identifier	last_error		3090077	0					
ANR	3092020	ReturnType	int		3090077	1					
ANR	3092021	Identifier	eprn_put_params		3090077	2					
ANR	3092022	ParameterList	"gx_device * dev , gs_param_list * plist"		3090077	3					
ANR	3092023	Parameter	gx_device * dev	907:20:31128:31141	3090077	0	True				
ANR	3092024	ParameterType	gx_device *		3090077	0					
ANR	3092025	Identifier	dev		3090077	1					
ANR	3092026	Parameter	gs_param_list * plist	907:36:31144:31163	3090077	1	True				
ANR	3092027	ParameterType	gs_param_list *		3090077	0					
ANR	3092028	Identifier	plist		3090077	1					
ANR	3092029	CFGEntryNode	ENTRY		3090077		True				
ANR	3092030	CFGExitNode	EXIT		3090077		True				
ANR	3092031	Symbol	gs_error_rangecheck		3090077						
ANR	3092032	Symbol	eprn_DeviceCMY		3090077						
ANR	3092033	Symbol	eprn		3090077						
ANR	3092034	Symbol	& ( ( eprn_Device * ) dev ) -> eprn		3090077						
ANR	3092035	Symbol	eprn -> colour_model		3090077						
ANR	3092036	Symbol	eprn -> non_black_levels		3090077						
ANR	3092037	Symbol	eprn -> leading_edge_set		3090077						
ANR	3092038	Symbol	eprn_DeviceGray		3090077						
ANR	3092039	Symbol	strncmp		3090077						
ANR	3092040	Symbol	strlen		3090077						
ANR	3092041	Symbol	string_value . size		3090077						
ANR	3092042	Symbol	dev		3090077						
ANR	3092043	Symbol	dev -> color_info . polarity		3090077						
ANR	3092044	Symbol	eprn -> media_position_set		3090077						
ANR	3092045	Symbol	dev -> MediaSize		3090077						
ANR	3092046	Symbol	gs_debug_c		3090077						
ANR	3092047	Symbol	eprn -> media_file		3090077						
ANR	3092048	Symbol	height		3090077						
ANR	3092049	Symbol	string_value		3090077						
ANR	3092050	Symbol	NULL		3090077						
ANR	3092051	Symbol	dev -> color_info . num_components		3090077						
ANR	3092052	Symbol	pname		3090077						
ANR	3092053	Symbol	eprn_set_media_data		3090077						
ANR	3092054	Symbol	param_read_bool		3090077						
ANR	3092055	Symbol	dev -> memory -> non_gc_memory		3090077						
ANR	3092056	Symbol	* eprn -> pagecount_file		3090077						
ANR	3092057	Symbol	param_read_string		3090077						
ANR	3092058	Symbol	* temp		3090077						
ANR	3092059	Symbol	param_read_null		3090077						
ANR	3092060	Symbol	* eprn -> media_file		3090077						
ANR	3092061	Symbol	& eprn -> media_position		3090077						
ANR	3092062	Symbol	rc		3090077						
ANR	3092063	Symbol	gs_malloc		3090077						
ANR	3092064	Symbol	* dev -> MediaSize		3090077						
ANR	3092065	Symbol	dev -> is_open		3090077						
ANR	3092066	Symbol	eprn_get_int		3090077						
ANR	3092067	Symbol	true		3090077						
ANR	3092068	Symbol	eprn_DeviceRGB		3090077						
ANR	3092069	Symbol	* mediasize		3090077						
ANR	3092070	Symbol	temp . type		3090077						
ANR	3092071	Symbol	eprn_colour_model_list		3090077						
ANR	3092072	Symbol	EPRN_TRACE_CHAR		3090077						
ANR	3092073	Symbol	option		3090077						
ANR	3092074	Symbol	dci_std_polarity		3090077						
ANR	3092075	Symbol	* dev -> memory		3090077						
ANR	3092076	Symbol	* dev		3090077						
ANR	3092077	Symbol	string_value . data		3090077						
ANR	3092078	Symbol	* eprn		3090077						
ANR	3092079	Symbol	* * eprn		3090077						
ANR	3092080	Symbol	dev -> height		3090077						
ANR	3092081	Symbol	mediasize		3090077						
ANR	3092082	Symbol	epref		3090077						
ANR	3092083	Symbol	dev -> color_info		3090077						
ANR	3092084	Symbol	dev -> color_info . depth		3090077						
ANR	3092085	Symbol	intensity_rendering_list		3090077						
ANR	3092086	Symbol	* string_value . size		3090077						
ANR	3092087	Symbol	& string_value		3090077						
ANR	3092088	Symbol	plist		3090077						
ANR	3092089	Symbol	param_read_int		3090077						
ANR	3092090	Symbol	gs_error_typecheck		3090077						
ANR	3092091	Symbol	eprn -> media_position		3090077						
ANR	3092092	Symbol	eprn -> keep_margins		3090077						
ANR	3092093	Symbol	eprn -> CUPS_messages		3090077						
ANR	3092094	Symbol	wpref		3090077						
ANR	3092095	Symbol	CUPS_ERRPREF		3090077						
ANR	3092096	Symbol	last_error		3090077						
ANR	3092097	Symbol	* string_value		3090077						
ANR	3092098	Symbol	& temp		3090077						
ANR	3092099	Symbol	eprn -> intensity_rendering		3090077						
ANR	3092100	Symbol	eprn -> black_levels		3090077						
ANR	3092101	Symbol	temp		3090077						
ANR	3092102	Symbol	eprn -> default_orientation		3090077						
ANR	3092103	Symbol	eprn -> pagecount_file		3090077						
ANR	3092104	Symbol	false		3090077						
ANR	3092105	Symbol	& eprn -> CUPS_messages		3090077						
ANR	3092106	Symbol	* * dev		3090077						
ANR	3092107	Symbol	eprn -> CUPS_accounting		3090077						
ANR	3092108	Symbol	gdev_prn_put_params		3090077						
ANR	3092109	Symbol	gs_error_VMerror		3090077						
ANR	3092110	Symbol	dev -> memory		3090077						
ANR	3092111	Symbol	dev -> width		3090077						
ANR	3092112	Symbol	width		3090077						
ANR	3092113	Symbol	colour_mode_given_and_valid		3090077						
ANR	3092114	Symbol	CUPS_WARNPREF		3090077						
ANR	3092115	Symbol	param_read_typed		3090077						
