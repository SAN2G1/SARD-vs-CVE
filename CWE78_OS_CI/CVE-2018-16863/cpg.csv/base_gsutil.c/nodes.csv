command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	815179	File	data/converged/CVE-2018-16863_ghostpdl/base_gsutil.c								
ANR	815180	Function	gs_next_ids	32:0:932:1090							
ANR	815181	FunctionDef	"gs_next_ids (const gs_memory_t * mem , uint count)"		815180	0					
ANR	815182	CompoundStatement		34:0:986:1090	815180	0					
ANR	815183	IdentifierDeclStatement	ulong id = mem -> gs_lib_ctx -> gs_next_id ;	35:4:992:1030	815180	0	True				
ANR	815184	IdentifierDecl	id = mem -> gs_lib_ctx -> gs_next_id		815180	0					
ANR	815185	IdentifierDeclType	ulong		815180	0					
ANR	815186	Identifier	id		815180	1					
ANR	815187	AssignmentExpression	id = mem -> gs_lib_ctx -> gs_next_id		815180	2		=			
ANR	815188	Identifier	id		815180	0					
ANR	815189	PtrMemberAccess	mem -> gs_lib_ctx -> gs_next_id		815180	1					
ANR	815190	PtrMemberAccess	mem -> gs_lib_ctx		815180	0					
ANR	815191	Identifier	mem		815180	0					
ANR	815192	Identifier	gs_lib_ctx		815180	1					
ANR	815193	Identifier	gs_next_id		815180	1					
ANR	815194	ExpressionStatement	mem -> gs_lib_ctx -> gs_next_id += count	37:4:1037:1073	815180	1	True				
ANR	815195	AssignmentExpression	mem -> gs_lib_ctx -> gs_next_id += count		815180	0		+=			
ANR	815196	PtrMemberAccess	mem -> gs_lib_ctx -> gs_next_id		815180	0					
ANR	815197	PtrMemberAccess	mem -> gs_lib_ctx		815180	0					
ANR	815198	Identifier	mem		815180	0					
ANR	815199	Identifier	gs_lib_ctx		815180	1					
ANR	815200	Identifier	gs_next_id		815180	1					
ANR	815201	Identifier	count		815180	1					
ANR	815202	ReturnStatement	return id ;	38:4:1079:1088	815180	2	True				
ANR	815203	Identifier	id		815180	0					
ANR	815204	ReturnType	ulong		815180	1					
ANR	815205	Identifier	gs_next_ids		815180	2					
ANR	815206	ParameterList	"const gs_memory_t * mem , uint count"		815180	3					
ANR	815207	Parameter	const gs_memory_t * mem	33:12:950:971	815180	0	True				
ANR	815208	ParameterType	const gs_memory_t *		815180	0					
ANR	815209	Identifier	mem		815180	1					
ANR	815210	Parameter	uint count	33:36:974:983	815180	1	True				
ANR	815211	ParameterType	uint		815180	0					
ANR	815212	Identifier	count		815180	1					
ANR	815213	CFGEntryNode	ENTRY		815180		True				
ANR	815214	CFGExitNode	EXIT		815180		True				
ANR	815215	Symbol	mem		815180						
ANR	815216	Symbol	count		815180						
ANR	815217	Symbol	* * mem		815180						
ANR	815218	Symbol	id		815180						
ANR	815219	Symbol	* mem -> gs_lib_ctx		815180						
ANR	815220	Symbol	mem -> gs_lib_ctx		815180						
ANR	815221	Symbol	mem -> gs_lib_ctx -> gs_next_id		815180						
ANR	815222	Symbol	* mem		815180						
ANR	815223	Function	memflip8x8	46:0:1266:3360							
ANR	815224	FunctionDef	"memflip8x8 (const byte * inp , int line_size , byte * outp , int dist)"		815223	0					
ANR	815225	CompoundStatement		48:0:1338:3360	815223	0					
ANR	815226	IdentifierDeclStatement	"uint aceg , bdfh ;"	49:4:1344:1359	815223	0	True				
ANR	815227	IdentifierDecl	aceg		815223	0					
ANR	815228	IdentifierDeclType	uint		815223	0					
ANR	815229	Identifier	aceg		815223	1					
ANR	815230	IdentifierDecl	bdfh		815223	1					
ANR	815231	IdentifierDeclType	uint		815223	0					
ANR	815232	Identifier	bdfh		815223	1					
ANR	815233	CompoundStatement		6:8:88:118	815223	1					
ANR	815234	IdentifierDeclStatement	const byte * ptr4 = inp + ( line_size << 2 ) ;	52:8:1376:1417	815223	0	True				
ANR	815235	IdentifierDecl	* ptr4 = inp + ( line_size << 2 )		815223	0					
ANR	815236	IdentifierDeclType	const byte *		815223	0					
ANR	815237	Identifier	ptr4		815223	1					
ANR	815238	AssignmentExpression	* ptr4 = inp + ( line_size << 2 )		815223	2		=			
ANR	815239	Identifier	ptr4		815223	0					
ANR	815240	AdditiveExpression	inp + ( line_size << 2 )		815223	1		+			
ANR	815241	Identifier	inp		815223	0					
ANR	815242	ShiftExpression	line_size << 2		815223	1		<<			
ANR	815243	Identifier	line_size		815223	0					
ANR	815244	PrimaryExpression	2		815223	1					
ANR	815245	IdentifierDeclStatement	const int ls2 = line_size << 1 ;	53:8:1427:1457	815223	1	True				
ANR	815246	IdentifierDecl	ls2 = line_size << 1		815223	0					
ANR	815247	IdentifierDeclType	const int		815223	0					
ANR	815248	Identifier	ls2		815223	1					
ANR	815249	AssignmentExpression	ls2 = line_size << 1		815223	2		=			
ANR	815250	Identifier	ls2		815223	0					
ANR	815251	ShiftExpression	line_size << 1		815223	1		<<			
ANR	815252	Identifier	line_size		815223	0					
ANR	815253	PrimaryExpression	1		815223	1					
ANR	815254	ExpressionStatement	aceg = ( ( uint ) * inp ) | ( ( uint ) inp [ ls2 ] << 8 ) | ( ( uint ) * ptr4 << 16 ) | ( ( uint ) ptr4 [ ls2 ] << 24 )	55:8:1468:1571	815223	2	True				
ANR	815255	AssignmentExpression	aceg = ( ( uint ) * inp ) | ( ( uint ) inp [ ls2 ] << 8 ) | ( ( uint ) * ptr4 << 16 ) | ( ( uint ) ptr4 [ ls2 ] << 24 )		815223	0		=			
ANR	815256	Identifier	aceg		815223	0					
ANR	815257	InclusiveOrExpression	( ( uint ) * inp ) | ( ( uint ) inp [ ls2 ] << 8 ) | ( ( uint ) * ptr4 << 16 ) | ( ( uint ) ptr4 [ ls2 ] << 24 )		815223	1		|			
ANR	815258	CastExpression	( uint ) * inp		815223	0					
ANR	815259	CastTarget	uint		815223	0					
ANR	815260	UnaryOperationExpression	* inp		815223	1					
ANR	815261	UnaryOperator	*		815223	0					
ANR	815262	Identifier	inp		815223	1					
ANR	815263	InclusiveOrExpression	( ( uint ) inp [ ls2 ] << 8 ) | ( ( uint ) * ptr4 << 16 ) | ( ( uint ) ptr4 [ ls2 ] << 24 )		815223	1		|			
ANR	815264	ShiftExpression	( uint ) inp [ ls2 ] << 8		815223	0		<<			
ANR	815265	CastExpression	( uint ) inp [ ls2 ]		815223	0					
ANR	815266	CastTarget	uint		815223	0					
ANR	815267	ArrayIndexing	inp [ ls2 ]		815223	1					
ANR	815268	Identifier	inp		815223	0					
ANR	815269	Identifier	ls2		815223	1					
ANR	815270	PrimaryExpression	8		815223	1					
ANR	815271	InclusiveOrExpression	( ( uint ) * ptr4 << 16 ) | ( ( uint ) ptr4 [ ls2 ] << 24 )		815223	1		|			
ANR	815272	ShiftExpression	( uint ) * ptr4 << 16		815223	0		<<			
ANR	815273	CastExpression	( uint ) * ptr4		815223	0					
ANR	815274	CastTarget	uint		815223	0					
ANR	815275	UnaryOperationExpression	* ptr4		815223	1					
ANR	815276	UnaryOperator	*		815223	0					
ANR	815277	Identifier	ptr4		815223	1					
ANR	815278	PrimaryExpression	16		815223	1					
ANR	815279	ShiftExpression	( uint ) ptr4 [ ls2 ] << 24		815223	1		<<			
ANR	815280	CastExpression	( uint ) ptr4 [ ls2 ]		815223	0					
ANR	815281	CastTarget	uint		815223	0					
ANR	815282	ArrayIndexing	ptr4 [ ls2 ]		815223	1					
ANR	815283	Identifier	ptr4		815223	0					
ANR	815284	Identifier	ls2		815223	1					
ANR	815285	PrimaryExpression	24		815223	1					
ANR	815286	ExpressionStatement	"inp += line_size , ptr4 += line_size"	57:8:1581:1616	815223	3	True				
ANR	815287	Expression	"inp += line_size , ptr4 += line_size"		815223	0					
ANR	815288	AssignmentExpression	inp += line_size		815223	0		+=			
ANR	815289	Identifier	inp		815223	0					
ANR	815290	Identifier	line_size		815223	1					
ANR	815291	AssignmentExpression	ptr4 += line_size		815223	1		+=			
ANR	815292	Identifier	ptr4		815223	0					
ANR	815293	Identifier	line_size		815223	1					
ANR	815294	ExpressionStatement	bdfh = ( ( uint ) * inp ) | ( ( uint ) inp [ ls2 ] << 8 ) | ( ( uint ) * ptr4 << 16 ) | ( ( uint ) ptr4 [ ls2 ] << 24 )	58:8:1626:1729	815223	4	True				
ANR	815295	AssignmentExpression	bdfh = ( ( uint ) * inp ) | ( ( uint ) inp [ ls2 ] << 8 ) | ( ( uint ) * ptr4 << 16 ) | ( ( uint ) ptr4 [ ls2 ] << 24 )		815223	0		=			
ANR	815296	Identifier	bdfh		815223	0					
ANR	815297	InclusiveOrExpression	( ( uint ) * inp ) | ( ( uint ) inp [ ls2 ] << 8 ) | ( ( uint ) * ptr4 << 16 ) | ( ( uint ) ptr4 [ ls2 ] << 24 )		815223	1		|			
ANR	815298	CastExpression	( uint ) * inp		815223	0					
ANR	815299	CastTarget	uint		815223	0					
ANR	815300	UnaryOperationExpression	* inp		815223	1					
ANR	815301	UnaryOperator	*		815223	0					
ANR	815302	Identifier	inp		815223	1					
ANR	815303	InclusiveOrExpression	( ( uint ) inp [ ls2 ] << 8 ) | ( ( uint ) * ptr4 << 16 ) | ( ( uint ) ptr4 [ ls2 ] << 24 )		815223	1		|			
ANR	815304	ShiftExpression	( uint ) inp [ ls2 ] << 8		815223	0		<<			
ANR	815305	CastExpression	( uint ) inp [ ls2 ]		815223	0					
ANR	815306	CastTarget	uint		815223	0					
ANR	815307	ArrayIndexing	inp [ ls2 ]		815223	1					
ANR	815308	Identifier	inp		815223	0					
ANR	815309	Identifier	ls2		815223	1					
ANR	815310	PrimaryExpression	8		815223	1					
ANR	815311	InclusiveOrExpression	( ( uint ) * ptr4 << 16 ) | ( ( uint ) ptr4 [ ls2 ] << 24 )		815223	1		|			
ANR	815312	ShiftExpression	( uint ) * ptr4 << 16		815223	0		<<			
ANR	815313	CastExpression	( uint ) * ptr4		815223	0					
ANR	815314	CastTarget	uint		815223	0					
ANR	815315	UnaryOperationExpression	* ptr4		815223	1					
ANR	815316	UnaryOperator	*		815223	0					
ANR	815317	Identifier	ptr4		815223	1					
ANR	815318	PrimaryExpression	16		815223	1					
ANR	815319	ShiftExpression	( uint ) ptr4 [ ls2 ] << 24		815223	1		<<			
ANR	815320	CastExpression	( uint ) ptr4 [ ls2 ]		815223	0					
ANR	815321	CastTarget	uint		815223	0					
ANR	815322	ArrayIndexing	ptr4 [ ls2 ]		815223	1					
ANR	815323	Identifier	ptr4		815223	0					
ANR	815324	Identifier	ls2		815223	1					
ANR	815325	PrimaryExpression	24		815223	1					
ANR	815326	IfStatement	if ( aceg == bdfh && ( aceg >> 8 ) == ( aceg & 0xffffff ) )		815223	2					
ANR	815327	Condition	aceg == bdfh && ( aceg >> 8 ) == ( aceg & 0xffffff )	64:8:1868:1915	815223	0	True				
ANR	815328	AndExpression	aceg == bdfh && ( aceg >> 8 ) == ( aceg & 0xffffff )		815223	0		&&			
ANR	815329	EqualityExpression	aceg == bdfh		815223	0		==			
ANR	815330	Identifier	aceg		815223	0					
ANR	815331	Identifier	bdfh		815223	1					
ANR	815332	EqualityExpression	( aceg >> 8 ) == ( aceg & 0xffffff )		815223	1		==			
ANR	815333	ShiftExpression	aceg >> 8		815223	0		>>			
ANR	815334	Identifier	aceg		815223	0					
ANR	815335	PrimaryExpression	8		815223	1					
ANR	815336	BitAndExpression	aceg & 0xffffff		815223	1		&			
ANR	815337	Identifier	aceg		815223	0					
ANR	815338	PrimaryExpression	0xffffff		815223	1					
ANR	815339	CompoundStatement		17:58:579:579	815223	1					
ANR	815340	IfStatement	if ( aceg == 0 || aceg == 0xffffffff )		815223	0					
ANR	815341	Condition	aceg == 0 || aceg == 0xffffffff	65:12:1932:1962	815223	0	True				
ANR	815342	OrExpression	aceg == 0 || aceg == 0xffffffff		815223	0		||			
ANR	815343	EqualityExpression	aceg == 0		815223	0		==			
ANR	815344	Identifier	aceg		815223	0					
ANR	815345	PrimaryExpression	0		815223	1					
ANR	815346	EqualityExpression	aceg == 0xffffffff		815223	1		==			
ANR	815347	Identifier	aceg		815223	0					
ANR	815348	PrimaryExpression	0xffffffff		815223	1					
ANR	815349	GotoStatement	goto store ;	66:12:1977:1987	815223	1	True				
ANR	815350	Identifier	store		815223	0					
ANR	815351	ExpressionStatement	* outp = ( byte ) - ( int ) ( ( aceg >> 7 ) & 1 )	67:8:1997:2034	815223	1	True				
ANR	815352	AssignmentExpression	* outp = ( byte ) - ( int ) ( ( aceg >> 7 ) & 1 )		815223	0		=			
ANR	815353	UnaryOperationExpression	* outp		815223	0					
ANR	815354	UnaryOperator	*		815223	0					
ANR	815355	Identifier	outp		815223	1					
ANR	815356	CastExpression	( byte ) - ( int ) ( ( aceg >> 7 ) & 1 )		815223	1					
ANR	815357	CastTarget	byte		815223	0					
ANR	815358	UnaryOperationExpression	- ( int ) ( ( aceg >> 7 ) & 1 )		815223	1					
ANR	815359	UnaryOperator	-		815223	0					
ANR	815360	CastExpression	( int ) ( ( aceg >> 7 ) & 1 )		815223	1					
ANR	815361	CastTarget	int		815223	0					
ANR	815362	BitAndExpression	( aceg >> 7 ) & 1		815223	1		&			
ANR	815363	ShiftExpression	aceg >> 7		815223	0		>>			
ANR	815364	Identifier	aceg		815223	0					
ANR	815365	PrimaryExpression	7		815223	1					
ANR	815366	PrimaryExpression	1		815223	1					
ANR	815367	ExpressionStatement	outp [ dist ] = ( byte ) - ( int ) ( ( aceg >> 6 ) & 1 )	68:8:2044:2086	815223	2	True				
ANR	815368	AssignmentExpression	outp [ dist ] = ( byte ) - ( int ) ( ( aceg >> 6 ) & 1 )		815223	0		=			
ANR	815369	ArrayIndexing	outp [ dist ]		815223	0					
ANR	815370	Identifier	outp		815223	0					
ANR	815371	Identifier	dist		815223	1					
ANR	815372	CastExpression	( byte ) - ( int ) ( ( aceg >> 6 ) & 1 )		815223	1					
ANR	815373	CastTarget	byte		815223	0					
ANR	815374	UnaryOperationExpression	- ( int ) ( ( aceg >> 6 ) & 1 )		815223	1					
ANR	815375	UnaryOperator	-		815223	0					
ANR	815376	CastExpression	( int ) ( ( aceg >> 6 ) & 1 )		815223	1					
ANR	815377	CastTarget	int		815223	0					
ANR	815378	BitAndExpression	( aceg >> 6 ) & 1		815223	1		&			
ANR	815379	ShiftExpression	aceg >> 6		815223	0		>>			
ANR	815380	Identifier	aceg		815223	0					
ANR	815381	PrimaryExpression	6		815223	1					
ANR	815382	PrimaryExpression	1		815223	1					
ANR	815383	ExpressionStatement	outp += dist << 1	69:8:2096:2113	815223	3	True				
ANR	815384	AssignmentExpression	outp += dist << 1		815223	0		+=			
ANR	815385	Identifier	outp		815223	0					
ANR	815386	ShiftExpression	dist << 1		815223	1		<<			
ANR	815387	Identifier	dist		815223	0					
ANR	815388	PrimaryExpression	1		815223	1					
ANR	815389	ExpressionStatement	* outp = ( byte ) - ( int ) ( ( aceg >> 5 ) & 1 )	70:8:2123:2160	815223	4	True				
ANR	815390	AssignmentExpression	* outp = ( byte ) - ( int ) ( ( aceg >> 5 ) & 1 )		815223	0		=			
ANR	815391	UnaryOperationExpression	* outp		815223	0					
ANR	815392	UnaryOperator	*		815223	0					
ANR	815393	Identifier	outp		815223	1					
ANR	815394	CastExpression	( byte ) - ( int ) ( ( aceg >> 5 ) & 1 )		815223	1					
ANR	815395	CastTarget	byte		815223	0					
ANR	815396	UnaryOperationExpression	- ( int ) ( ( aceg >> 5 ) & 1 )		815223	1					
ANR	815397	UnaryOperator	-		815223	0					
ANR	815398	CastExpression	( int ) ( ( aceg >> 5 ) & 1 )		815223	1					
ANR	815399	CastTarget	int		815223	0					
ANR	815400	BitAndExpression	( aceg >> 5 ) & 1		815223	1		&			
ANR	815401	ShiftExpression	aceg >> 5		815223	0		>>			
ANR	815402	Identifier	aceg		815223	0					
ANR	815403	PrimaryExpression	5		815223	1					
ANR	815404	PrimaryExpression	1		815223	1					
ANR	815405	ExpressionStatement	outp [ dist ] = ( byte ) - ( int ) ( ( aceg >> 4 ) & 1 )	71:8:2170:2212	815223	5	True				
ANR	815406	AssignmentExpression	outp [ dist ] = ( byte ) - ( int ) ( ( aceg >> 4 ) & 1 )		815223	0		=			
ANR	815407	ArrayIndexing	outp [ dist ]		815223	0					
ANR	815408	Identifier	outp		815223	0					
ANR	815409	Identifier	dist		815223	1					
ANR	815410	CastExpression	( byte ) - ( int ) ( ( aceg >> 4 ) & 1 )		815223	1					
ANR	815411	CastTarget	byte		815223	0					
ANR	815412	UnaryOperationExpression	- ( int ) ( ( aceg >> 4 ) & 1 )		815223	1					
ANR	815413	UnaryOperator	-		815223	0					
ANR	815414	CastExpression	( int ) ( ( aceg >> 4 ) & 1 )		815223	1					
ANR	815415	CastTarget	int		815223	0					
ANR	815416	BitAndExpression	( aceg >> 4 ) & 1		815223	1		&			
ANR	815417	ShiftExpression	aceg >> 4		815223	0		>>			
ANR	815418	Identifier	aceg		815223	0					
ANR	815419	PrimaryExpression	4		815223	1					
ANR	815420	PrimaryExpression	1		815223	1					
ANR	815421	ExpressionStatement	outp += dist << 1	72:8:2222:2239	815223	6	True				
ANR	815422	AssignmentExpression	outp += dist << 1		815223	0		+=			
ANR	815423	Identifier	outp		815223	0					
ANR	815424	ShiftExpression	dist << 1		815223	1		<<			
ANR	815425	Identifier	dist		815223	0					
ANR	815426	PrimaryExpression	1		815223	1					
ANR	815427	ExpressionStatement	* outp = ( byte ) - ( int ) ( ( aceg >> 3 ) & 1 )	73:8:2249:2286	815223	7	True				
ANR	815428	AssignmentExpression	* outp = ( byte ) - ( int ) ( ( aceg >> 3 ) & 1 )		815223	0		=			
ANR	815429	UnaryOperationExpression	* outp		815223	0					
ANR	815430	UnaryOperator	*		815223	0					
ANR	815431	Identifier	outp		815223	1					
ANR	815432	CastExpression	( byte ) - ( int ) ( ( aceg >> 3 ) & 1 )		815223	1					
ANR	815433	CastTarget	byte		815223	0					
ANR	815434	UnaryOperationExpression	- ( int ) ( ( aceg >> 3 ) & 1 )		815223	1					
ANR	815435	UnaryOperator	-		815223	0					
ANR	815436	CastExpression	( int ) ( ( aceg >> 3 ) & 1 )		815223	1					
ANR	815437	CastTarget	int		815223	0					
ANR	815438	BitAndExpression	( aceg >> 3 ) & 1		815223	1		&			
ANR	815439	ShiftExpression	aceg >> 3		815223	0		>>			
ANR	815440	Identifier	aceg		815223	0					
ANR	815441	PrimaryExpression	3		815223	1					
ANR	815442	PrimaryExpression	1		815223	1					
ANR	815443	ExpressionStatement	outp [ dist ] = ( byte ) - ( int ) ( ( aceg >> 2 ) & 1 )	74:8:2296:2338	815223	8	True				
ANR	815444	AssignmentExpression	outp [ dist ] = ( byte ) - ( int ) ( ( aceg >> 2 ) & 1 )		815223	0		=			
ANR	815445	ArrayIndexing	outp [ dist ]		815223	0					
ANR	815446	Identifier	outp		815223	0					
ANR	815447	Identifier	dist		815223	1					
ANR	815448	CastExpression	( byte ) - ( int ) ( ( aceg >> 2 ) & 1 )		815223	1					
ANR	815449	CastTarget	byte		815223	0					
ANR	815450	UnaryOperationExpression	- ( int ) ( ( aceg >> 2 ) & 1 )		815223	1					
ANR	815451	UnaryOperator	-		815223	0					
ANR	815452	CastExpression	( int ) ( ( aceg >> 2 ) & 1 )		815223	1					
ANR	815453	CastTarget	int		815223	0					
ANR	815454	BitAndExpression	( aceg >> 2 ) & 1		815223	1		&			
ANR	815455	ShiftExpression	aceg >> 2		815223	0		>>			
ANR	815456	Identifier	aceg		815223	0					
ANR	815457	PrimaryExpression	2		815223	1					
ANR	815458	PrimaryExpression	1		815223	1					
ANR	815459	ExpressionStatement	outp += dist << 1	75:8:2348:2365	815223	9	True				
ANR	815460	AssignmentExpression	outp += dist << 1		815223	0		+=			
ANR	815461	Identifier	outp		815223	0					
ANR	815462	ShiftExpression	dist << 1		815223	1		<<			
ANR	815463	Identifier	dist		815223	0					
ANR	815464	PrimaryExpression	1		815223	1					
ANR	815465	ExpressionStatement	* outp = ( byte ) - ( int ) ( ( aceg >> 1 ) & 1 )	76:8:2375:2412	815223	10	True				
ANR	815466	AssignmentExpression	* outp = ( byte ) - ( int ) ( ( aceg >> 1 ) & 1 )		815223	0		=			
ANR	815467	UnaryOperationExpression	* outp		815223	0					
ANR	815468	UnaryOperator	*		815223	0					
ANR	815469	Identifier	outp		815223	1					
ANR	815470	CastExpression	( byte ) - ( int ) ( ( aceg >> 1 ) & 1 )		815223	1					
ANR	815471	CastTarget	byte		815223	0					
ANR	815472	UnaryOperationExpression	- ( int ) ( ( aceg >> 1 ) & 1 )		815223	1					
ANR	815473	UnaryOperator	-		815223	0					
ANR	815474	CastExpression	( int ) ( ( aceg >> 1 ) & 1 )		815223	1					
ANR	815475	CastTarget	int		815223	0					
ANR	815476	BitAndExpression	( aceg >> 1 ) & 1		815223	1		&			
ANR	815477	ShiftExpression	aceg >> 1		815223	0		>>			
ANR	815478	Identifier	aceg		815223	0					
ANR	815479	PrimaryExpression	1		815223	1					
ANR	815480	PrimaryExpression	1		815223	1					
ANR	815481	ExpressionStatement	outp [ dist ] = ( byte ) - ( int ) ( aceg & 1 )	77:8:2422:2457	815223	11	True				
ANR	815482	AssignmentExpression	outp [ dist ] = ( byte ) - ( int ) ( aceg & 1 )		815223	0		=			
ANR	815483	ArrayIndexing	outp [ dist ]		815223	0					
ANR	815484	Identifier	outp		815223	0					
ANR	815485	Identifier	dist		815223	1					
ANR	815486	CastExpression	( byte ) - ( int ) ( aceg & 1 )		815223	1					
ANR	815487	CastTarget	byte		815223	0					
ANR	815488	UnaryOperationExpression	- ( int ) ( aceg & 1 )		815223	1					
ANR	815489	UnaryOperator	-		815223	0					
ANR	815490	CastExpression	( int ) ( aceg & 1 )		815223	1					
ANR	815491	CastTarget	int		815223	0					
ANR	815492	BitAndExpression	aceg & 1		815223	1		&			
ANR	815493	Identifier	aceg		815223	0					
ANR	815494	PrimaryExpression	1		815223	1					
ANR	815495	ReturnStatement	return ;	78:8:2467:2473	815223	12	True				
ANR	815496	CompoundStatement		33:17:1161:1170	815223	3					
ANR	815497	Statement	register	80:8:2491:2498	815223	0	True				
ANR	815498	IdentifierDeclStatement	uint temp ;	80:17:2500:2509	815223	1	True				
ANR	815499	IdentifierDecl	temp		815223	0					
ANR	815500	IdentifierDeclType	uint		815223	0					
ANR	815501	Identifier	temp		815223	1					
ANR	815502	Statement	define	83:1:2564:2569	815223	2	True				
ANR	815503	Statement	TRANSPOSE	83:8:2571:2579	815223	3	True				
ANR	815504	Statement	(	83:17:2580:2580	815223	4	True				
ANR	815505	Statement	r	83:18:2581:2581	815223	5	True				
ANR	815506	Statement	","	83:19:2582:2582	815223	6	True				
ANR	815507	Statement	s	83:20:2583:2583	815223	7	True				
ANR	815508	Statement	","	83:21:2584:2584	815223	8	True				
ANR	815509	Statement	mask	83:22:2585:2588	815223	9	True				
ANR	815510	Statement	","	83:26:2589:2589	815223	10	True				
ANR	815511	Statement	shift	83:27:2590:2594	815223	11	True				
ANR	815512	Statement	)	83:32:2595:2595	815223	12	True				
ANR	815513	Statement	(	84:2:2600:2600	815223	13	True				
ANR	815514	Statement	r	84:3:2601:2601	815223	14	True				
ANR	815515	Statement	^=	84:5:2603:2604	815223	15	True				
ANR	815516	Statement	(	84:8:2606:2606	815223	16	True				
ANR	815517	Statement	temp	84:9:2607:2610	815223	17	True				
ANR	815518	Statement	=	84:14:2612:2612	815223	18	True				
ANR	815519	Statement	(	84:16:2614:2614	815223	19	True				
ANR	815520	Statement	(	84:17:2615:2615	815223	20	True				
ANR	815521	Statement	s	84:18:2616:2616	815223	21	True				
ANR	815522	Statement	>>	84:20:2618:2619	815223	22	True				
ANR	815523	Statement	shift	84:23:2621:2625	815223	23	True				
ANR	815524	Statement	)	84:28:2626:2626	815223	24	True				
ANR	815525	Statement	^	84:30:2628:2628	815223	25	True				
ANR	815526	Statement	r	84:32:2630:2630	815223	26	True				
ANR	815527	Statement	)	84:33:2631:2631	815223	27	True				
ANR	815528	Statement	&	84:35:2633:2633	815223	28	True				
ANR	815529	Statement	mask	84:37:2635:2638	815223	29	True				
ANR	815530	Statement	)	84:41:2639:2639	815223	30	True				
ANR	815531	Statement	","	84:42:2640:2640	815223	31	True				
ANR	815532	Statement	s	85:3:2646:2646	815223	32	True				
ANR	815533	Statement	^=	85:5:2648:2649	815223	33	True				
ANR	815534	Statement	temp	85:8:2651:2654	815223	34	True				
ANR	815535	Statement	<<	85:13:2656:2657	815223	35	True				
ANR	815536	Statement	shift	85:16:2659:2663	815223	36	True				
ANR	815537	Statement	)	85:21:2664:2664	815223	37	True				
ANR	815538	ExpressionStatement	"TRANSPOSE ( aceg , aceg , 0x00000f0f , 20 )"	88:8:2707:2744	815223	38	True				
ANR	815539	CallExpression	"TRANSPOSE ( aceg , aceg , 0x00000f0f , 20 )"		815223	0					
ANR	815540	Callee	TRANSPOSE		815223	0					
ANR	815541	Identifier	TRANSPOSE		815223	0					
ANR	815542	ArgumentList	aceg		815223	1					
ANR	815543	Argument	aceg		815223	0					
ANR	815544	Identifier	aceg		815223	0					
ANR	815545	Argument	aceg		815223	1					
ANR	815546	Identifier	aceg		815223	0					
ANR	815547	Argument	0x00000f0f		815223	2					
ANR	815548	PrimaryExpression	0x00000f0f		815223	0					
ANR	815549	Argument	20		815223	3					
ANR	815550	PrimaryExpression	20		815223	0					
ANR	815551	ExpressionStatement	"TRANSPOSE ( bdfh , bdfh , 0x00000f0f , 20 )"	89:8:2754:2791	815223	39	True				
ANR	815552	CallExpression	"TRANSPOSE ( bdfh , bdfh , 0x00000f0f , 20 )"		815223	0					
ANR	815553	Callee	TRANSPOSE		815223	0					
ANR	815554	Identifier	TRANSPOSE		815223	0					
ANR	815555	ArgumentList	bdfh		815223	1					
ANR	815556	Argument	bdfh		815223	0					
ANR	815557	Identifier	bdfh		815223	0					
ANR	815558	Argument	bdfh		815223	1					
ANR	815559	Identifier	bdfh		815223	0					
ANR	815560	Argument	0x00000f0f		815223	2					
ANR	815561	PrimaryExpression	0x00000f0f		815223	0					
ANR	815562	Argument	20		815223	3					
ANR	815563	PrimaryExpression	20		815223	0					
ANR	815564	ExpressionStatement	"TRANSPOSE ( aceg , aceg , 0x00330033 , 10 )"	92:8:2834:2871	815223	40	True				
ANR	815565	CallExpression	"TRANSPOSE ( aceg , aceg , 0x00330033 , 10 )"		815223	0					
ANR	815566	Callee	TRANSPOSE		815223	0					
ANR	815567	Identifier	TRANSPOSE		815223	0					
ANR	815568	ArgumentList	aceg		815223	1					
ANR	815569	Argument	aceg		815223	0					
ANR	815570	Identifier	aceg		815223	0					
ANR	815571	Argument	aceg		815223	1					
ANR	815572	Identifier	aceg		815223	0					
ANR	815573	Argument	0x00330033		815223	2					
ANR	815574	PrimaryExpression	0x00330033		815223	0					
ANR	815575	Argument	10		815223	3					
ANR	815576	PrimaryExpression	10		815223	0					
ANR	815577	ExpressionStatement	"TRANSPOSE ( bdfh , bdfh , 0x00330033 , 10 )"	93:8:2881:2918	815223	41	True				
ANR	815578	CallExpression	"TRANSPOSE ( bdfh , bdfh , 0x00330033 , 10 )"		815223	0					
ANR	815579	Callee	TRANSPOSE		815223	0					
ANR	815580	Identifier	TRANSPOSE		815223	0					
ANR	815581	ArgumentList	bdfh		815223	1					
ANR	815582	Argument	bdfh		815223	0					
ANR	815583	Identifier	bdfh		815223	0					
ANR	815584	Argument	bdfh		815223	1					
ANR	815585	Identifier	bdfh		815223	0					
ANR	815586	Argument	0x00330033		815223	2					
ANR	815587	PrimaryExpression	0x00330033		815223	0					
ANR	815588	Argument	10		815223	3					
ANR	815589	PrimaryExpression	10		815223	0					
ANR	815590	ExpressionStatement	"TRANSPOSE ( aceg , bdfh , 0x55555555 , 1 )"	96:8:2961:2997	815223	42	True				
ANR	815591	CallExpression	"TRANSPOSE ( aceg , bdfh , 0x55555555 , 1 )"		815223	0					
ANR	815592	Callee	TRANSPOSE		815223	0					
ANR	815593	Identifier	TRANSPOSE		815223	0					
ANR	815594	ArgumentList	aceg		815223	1					
ANR	815595	Argument	aceg		815223	0					
ANR	815596	Identifier	aceg		815223	0					
ANR	815597	Argument	bdfh		815223	1					
ANR	815598	Identifier	bdfh		815223	0					
ANR	815599	Argument	0x55555555		815223	2					
ANR	815600	PrimaryExpression	0x55555555		815223	0					
ANR	815601	Argument	1		815223	3					
ANR	815602	PrimaryExpression	1		815223	0					
ANR	815603	Statement	undef	98:1:3001:3005	815223	43	True				
ANR	815604	Statement	TRANSPOSE	98:7:3007:3015	815223	44	True				
ANR	815605	Label	store :	101:2:3026:3031	815223	4	True				
ANR	815606	Identifier	store		815223	0					
ANR	815607	ExpressionStatement	* outp = ( byte ) aceg	102:4:3037:3055	815223	5	True				
ANR	815608	AssignmentExpression	* outp = ( byte ) aceg		815223	0		=			
ANR	815609	UnaryOperationExpression	* outp		815223	0					
ANR	815610	UnaryOperator	*		815223	0					
ANR	815611	Identifier	outp		815223	1					
ANR	815612	CastExpression	( byte ) aceg		815223	1					
ANR	815613	CastTarget	byte		815223	0					
ANR	815614	Identifier	aceg		815223	1					
ANR	815615	ExpressionStatement	outp [ dist ] = ( byte ) bdfh	103:4:3061:3084	815223	6	True				
ANR	815616	AssignmentExpression	outp [ dist ] = ( byte ) bdfh		815223	0		=			
ANR	815617	ArrayIndexing	outp [ dist ]		815223	0					
ANR	815618	Identifier	outp		815223	0					
ANR	815619	Identifier	dist		815223	1					
ANR	815620	CastExpression	( byte ) bdfh		815223	1					
ANR	815621	CastTarget	byte		815223	0					
ANR	815622	Identifier	bdfh		815223	1					
ANR	815623	ExpressionStatement	outp += dist << 1	104:4:3090:3107	815223	7	True				
ANR	815624	AssignmentExpression	outp += dist << 1		815223	0		+=			
ANR	815625	Identifier	outp		815223	0					
ANR	815626	ShiftExpression	dist << 1		815223	1		<<			
ANR	815627	Identifier	dist		815223	0					
ANR	815628	PrimaryExpression	1		815223	1					
ANR	815629	ExpressionStatement	* outp = ( byte ) ( aceg >>= 8 )	105:4:3113:3139	815223	8	True				
ANR	815630	AssignmentExpression	* outp = ( byte ) ( aceg >>= 8 )		815223	0		=			
ANR	815631	UnaryOperationExpression	* outp		815223	0					
ANR	815632	UnaryOperator	*		815223	0					
ANR	815633	Identifier	outp		815223	1					
ANR	815634	CastExpression	( byte ) ( aceg >>= 8 )		815223	1					
ANR	815635	CastTarget	byte		815223	0					
ANR	815636	AssignmentExpression	aceg >>= 8		815223	1		>>=			
ANR	815637	Identifier	aceg		815223	0					
ANR	815638	PrimaryExpression	8		815223	1					
ANR	815639	ExpressionStatement	outp [ dist ] = ( byte ) ( bdfh >>= 8 )	106:4:3145:3176	815223	9	True				
ANR	815640	AssignmentExpression	outp [ dist ] = ( byte ) ( bdfh >>= 8 )		815223	0		=			
ANR	815641	ArrayIndexing	outp [ dist ]		815223	0					
ANR	815642	Identifier	outp		815223	0					
ANR	815643	Identifier	dist		815223	1					
ANR	815644	CastExpression	( byte ) ( bdfh >>= 8 )		815223	1					
ANR	815645	CastTarget	byte		815223	0					
ANR	815646	AssignmentExpression	bdfh >>= 8		815223	1		>>=			
ANR	815647	Identifier	bdfh		815223	0					
ANR	815648	PrimaryExpression	8		815223	1					
ANR	815649	ExpressionStatement	outp += dist << 1	107:4:3182:3199	815223	10	True				
ANR	815650	AssignmentExpression	outp += dist << 1		815223	0		+=			
ANR	815651	Identifier	outp		815223	0					
ANR	815652	ShiftExpression	dist << 1		815223	1		<<			
ANR	815653	Identifier	dist		815223	0					
ANR	815654	PrimaryExpression	1		815223	1					
ANR	815655	ExpressionStatement	* outp = ( byte ) ( aceg >>= 8 )	108:4:3205:3231	815223	11	True				
ANR	815656	AssignmentExpression	* outp = ( byte ) ( aceg >>= 8 )		815223	0		=			
ANR	815657	UnaryOperationExpression	* outp		815223	0					
ANR	815658	UnaryOperator	*		815223	0					
ANR	815659	Identifier	outp		815223	1					
ANR	815660	CastExpression	( byte ) ( aceg >>= 8 )		815223	1					
ANR	815661	CastTarget	byte		815223	0					
ANR	815662	AssignmentExpression	aceg >>= 8		815223	1		>>=			
ANR	815663	Identifier	aceg		815223	0					
ANR	815664	PrimaryExpression	8		815223	1					
ANR	815665	ExpressionStatement	outp [ dist ] = ( byte ) ( bdfh >>= 8 )	109:4:3237:3268	815223	12	True				
ANR	815666	AssignmentExpression	outp [ dist ] = ( byte ) ( bdfh >>= 8 )		815223	0		=			
ANR	815667	ArrayIndexing	outp [ dist ]		815223	0					
ANR	815668	Identifier	outp		815223	0					
ANR	815669	Identifier	dist		815223	1					
ANR	815670	CastExpression	( byte ) ( bdfh >>= 8 )		815223	1					
ANR	815671	CastTarget	byte		815223	0					
ANR	815672	AssignmentExpression	bdfh >>= 8		815223	1		>>=			
ANR	815673	Identifier	bdfh		815223	0					
ANR	815674	PrimaryExpression	8		815223	1					
ANR	815675	ExpressionStatement	outp += dist << 1	110:4:3274:3291	815223	13	True				
ANR	815676	AssignmentExpression	outp += dist << 1		815223	0		+=			
ANR	815677	Identifier	outp		815223	0					
ANR	815678	ShiftExpression	dist << 1		815223	1		<<			
ANR	815679	Identifier	dist		815223	0					
ANR	815680	PrimaryExpression	1		815223	1					
ANR	815681	ExpressionStatement	* outp = ( byte ) ( aceg >> 8 )	111:4:3297:3322	815223	14	True				
ANR	815682	AssignmentExpression	* outp = ( byte ) ( aceg >> 8 )		815223	0		=			
ANR	815683	UnaryOperationExpression	* outp		815223	0					
ANR	815684	UnaryOperator	*		815223	0					
ANR	815685	Identifier	outp		815223	1					
ANR	815686	CastExpression	( byte ) ( aceg >> 8 )		815223	1					
ANR	815687	CastTarget	byte		815223	0					
ANR	815688	ShiftExpression	aceg >> 8		815223	1		>>			
ANR	815689	Identifier	aceg		815223	0					
ANR	815690	PrimaryExpression	8		815223	1					
ANR	815691	ExpressionStatement	outp [ dist ] = ( byte ) ( bdfh >> 8 )	112:4:3328:3358	815223	15	True				
ANR	815692	AssignmentExpression	outp [ dist ] = ( byte ) ( bdfh >> 8 )		815223	0		=			
ANR	815693	ArrayIndexing	outp [ dist ]		815223	0					
ANR	815694	Identifier	outp		815223	0					
ANR	815695	Identifier	dist		815223	1					
ANR	815696	CastExpression	( byte ) ( bdfh >> 8 )		815223	1					
ANR	815697	CastTarget	byte		815223	0					
ANR	815698	ShiftExpression	bdfh >> 8		815223	1		>>			
ANR	815699	Identifier	bdfh		815223	0					
ANR	815700	PrimaryExpression	8		815223	1					
ANR	815701	ReturnType	void		815223	1					
ANR	815702	Identifier	memflip8x8		815223	2					
ANR	815703	ParameterList	"const byte * inp , int line_size , byte * outp , int dist"		815223	3					
ANR	815704	Parameter	const byte * inp	47:11:1282:1297	815223	0	True				
ANR	815705	ParameterType	const byte *		815223	0					
ANR	815706	Identifier	inp		815223	1					
ANR	815707	Parameter	int line_size	47:29:1300:1312	815223	1	True				
ANR	815708	ParameterType	int		815223	0					
ANR	815709	Identifier	line_size		815223	1					
ANR	815710	Parameter	byte * outp	47:44:1315:1325	815223	2	True				
ANR	815711	ParameterType	byte *		815223	0					
ANR	815712	Identifier	outp		815223	1					
ANR	815713	Parameter	int dist	47:57:1328:1335	815223	3	True				
ANR	815714	ParameterType	int		815223	0					
ANR	815715	Identifier	dist		815223	1					
ANR	815716	CFGEntryNode	ENTRY		815223		True				
ANR	815717	CFGExitNode	EXIT		815223		True				
ANR	815718	Symbol	* dist		815223						
ANR	815719	Symbol	temp		815223						
ANR	815720	Symbol	dist		815223						
ANR	815721	Symbol	aceg		815223						
ANR	815722	Symbol	inp		815223						
ANR	815723	Symbol	bdfh		815223						
ANR	815724	Symbol	ls2		815223						
ANR	815725	Symbol	* inp		815223						
ANR	815726	Symbol	ptr4		815223						
ANR	815727	Symbol	* ls2		815223						
ANR	815728	Symbol	outp		815223						
ANR	815729	Symbol	* outp		815223						
ANR	815730	Symbol	line_size		815223						
ANR	815731	Symbol	* ptr4		815223						
ANR	815732	Function	get_u32_msb	116:0:3411:3525							
ANR	815733	FunctionDef	get_u32_msb (const byte * p)		815732	0					
ANR	815734	CompoundStatement		118:0:3444:3525	815732	0					
ANR	815735	ReturnStatement	return ( ( uint ) p [ 0 ] << 24 ) + ( ( uint ) p [ 1 ] << 16 ) + ( ( uint ) p [ 2 ] << 8 ) + p [ 3 ] ;	119:4:3450:3523	815732	0	True				
ANR	815736	AdditiveExpression	( ( uint ) p [ 0 ] << 24 ) + ( ( uint ) p [ 1 ] << 16 ) + ( ( uint ) p [ 2 ] << 8 ) + p [ 3 ]		815732	0		+			
ANR	815737	ShiftExpression	( uint ) p [ 0 ] << 24		815732	0		<<			
ANR	815738	CastExpression	( uint ) p [ 0 ]		815732	0					
ANR	815739	CastTarget	uint		815732	0					
ANR	815740	ArrayIndexing	p [ 0 ]		815732	1					
ANR	815741	Identifier	p		815732	0					
ANR	815742	PrimaryExpression	0		815732	1					
ANR	815743	PrimaryExpression	24		815732	1					
ANR	815744	AdditiveExpression	( ( uint ) p [ 1 ] << 16 ) + ( ( uint ) p [ 2 ] << 8 ) + p [ 3 ]		815732	1		+			
ANR	815745	ShiftExpression	( uint ) p [ 1 ] << 16		815732	0		<<			
ANR	815746	CastExpression	( uint ) p [ 1 ]		815732	0					
ANR	815747	CastTarget	uint		815732	0					
ANR	815748	ArrayIndexing	p [ 1 ]		815732	1					
ANR	815749	Identifier	p		815732	0					
ANR	815750	PrimaryExpression	1		815732	1					
ANR	815751	PrimaryExpression	16		815732	1					
ANR	815752	AdditiveExpression	( ( uint ) p [ 2 ] << 8 ) + p [ 3 ]		815732	1		+			
ANR	815753	ShiftExpression	( uint ) p [ 2 ] << 8		815732	0		<<			
ANR	815754	CastExpression	( uint ) p [ 2 ]		815732	0					
ANR	815755	CastTarget	uint		815732	0					
ANR	815756	ArrayIndexing	p [ 2 ]		815732	1					
ANR	815757	Identifier	p		815732	0					
ANR	815758	PrimaryExpression	2		815732	1					
ANR	815759	PrimaryExpression	8		815732	1					
ANR	815760	ArrayIndexing	p [ 3 ]		815732	1					
ANR	815761	Identifier	p		815732	0					
ANR	815762	PrimaryExpression	3		815732	1					
ANR	815763	ReturnType	ulong		815732	1					
ANR	815764	Identifier	get_u32_msb		815732	2					
ANR	815765	ParameterList	const byte * p		815732	3					
ANR	815766	Parameter	const byte * p	117:12:3429:3441	815732	0	True				
ANR	815767	ParameterType	const byte *		815732	0					
ANR	815768	Identifier	p		815732	1					
ANR	815769	CFGEntryNode	ENTRY		815732		True				
ANR	815770	CFGExitNode	EXIT		815732		True				
ANR	815771	Symbol	p		815732						
ANR	815772	Symbol	* p		815732						
ANR	815773	Function	put_u32_msb	123:0:3576:3769							
ANR	815774	FunctionDef	"put_u32_msb (byte * p , const ulong n , const int offs)"		815773	0					
ANR	815775	CompoundStatement		125:0:3633:3769	815773	0					
ANR	815776	ExpressionStatement	( p + offs ) [ 0 ] = n >> 24 & 255	126:4:3639:3668	815773	0	True				
ANR	815777	AssignmentExpression	( p + offs ) [ 0 ] = n >> 24 & 255		815773	0		=			
ANR	815778	ArrayIndexing	( p + offs ) [ 0 ]		815773	0					
ANR	815779	AdditiveExpression	p + offs		815773	0		+			
ANR	815780	Identifier	p		815773	0					
ANR	815781	Identifier	offs		815773	1					
ANR	815782	PrimaryExpression	0		815773	1					
ANR	815783	BitAndExpression	n >> 24 & 255		815773	1		&			
ANR	815784	ShiftExpression	n >> 24		815773	0		>>			
ANR	815785	Identifier	n		815773	0					
ANR	815786	PrimaryExpression	24		815773	1					
ANR	815787	PrimaryExpression	255		815773	1					
ANR	815788	ExpressionStatement	( p + offs ) [ 1 ] = n >> 16 & 255	127:4:3674:3703	815773	1	True				
ANR	815789	AssignmentExpression	( p + offs ) [ 1 ] = n >> 16 & 255		815773	0		=			
ANR	815790	ArrayIndexing	( p + offs ) [ 1 ]		815773	0					
ANR	815791	AdditiveExpression	p + offs		815773	0		+			
ANR	815792	Identifier	p		815773	0					
ANR	815793	Identifier	offs		815773	1					
ANR	815794	PrimaryExpression	1		815773	1					
ANR	815795	BitAndExpression	n >> 16 & 255		815773	1		&			
ANR	815796	ShiftExpression	n >> 16		815773	0		>>			
ANR	815797	Identifier	n		815773	0					
ANR	815798	PrimaryExpression	16		815773	1					
ANR	815799	PrimaryExpression	255		815773	1					
ANR	815800	ExpressionStatement	( p + offs ) [ 2 ] = n >> 8 & 255	128:4:3709:3738	815773	2	True				
ANR	815801	AssignmentExpression	( p + offs ) [ 2 ] = n >> 8 & 255		815773	0		=			
ANR	815802	ArrayIndexing	( p + offs ) [ 2 ]		815773	0					
ANR	815803	AdditiveExpression	p + offs		815773	0		+			
ANR	815804	Identifier	p		815773	0					
ANR	815805	Identifier	offs		815773	1					
ANR	815806	PrimaryExpression	2		815773	1					
ANR	815807	BitAndExpression	n >> 8 & 255		815773	1		&			
ANR	815808	ShiftExpression	n >> 8		815773	0		>>			
ANR	815809	Identifier	n		815773	0					
ANR	815810	PrimaryExpression	8		815773	1					
ANR	815811	PrimaryExpression	255		815773	1					
ANR	815812	ExpressionStatement	( p + offs ) [ 3 ] = n & 255	129:4:3744:3767	815773	3	True				
ANR	815813	AssignmentExpression	( p + offs ) [ 3 ] = n & 255		815773	0		=			
ANR	815814	ArrayIndexing	( p + offs ) [ 3 ]		815773	0					
ANR	815815	AdditiveExpression	p + offs		815773	0		+			
ANR	815816	Identifier	p		815773	0					
ANR	815817	Identifier	offs		815773	1					
ANR	815818	PrimaryExpression	3		815773	1					
ANR	815819	BitAndExpression	n & 255		815773	1		&			
ANR	815820	Identifier	n		815773	0					
ANR	815821	PrimaryExpression	255		815773	1					
ANR	815822	ReturnType	void		815773	1					
ANR	815823	Identifier	put_u32_msb		815773	2					
ANR	815824	ParameterList	"byte * p , const ulong n , const int offs"		815773	3					
ANR	815825	Parameter	byte * p	124:12:3593:3599	815773	0	True				
ANR	815826	ParameterType	byte *		815773	0					
ANR	815827	Identifier	p		815773	1					
ANR	815828	Parameter	const ulong n	124:21:3602:3614	815773	1	True				
ANR	815829	ParameterType	const ulong		815773	0					
ANR	815830	Identifier	n		815773	1					
ANR	815831	Parameter	const int offs	124:36:3617:3630	815773	2	True				
ANR	815832	ParameterType	const int		815773	0					
ANR	815833	Identifier	offs		815773	1					
ANR	815834	CFGEntryNode	ENTRY		815773		True				
ANR	815835	CFGExitNode	EXIT		815773		True				
ANR	815836	Symbol	p		815773						
ANR	815837	Symbol	offs		815773						
ANR	815838	Symbol	* offs		815773						
ANR	815839	Symbol	* p		815773						
ANR	815840	Symbol	n		815773						
ANR	815841	Function	bytes_compare	137:0:3996:4433							
ANR	815842	FunctionDef	"bytes_compare (const byte * s1 , uint len1 , const byte * s2 , uint len2)"		815841	0					
ANR	815843	CompoundStatement		139:0:4070:4433	815841	0					
ANR	815844	Statement	register	140:4:4076:4083	815841	0	True				
ANR	815845	IdentifierDeclStatement	uint len = len1 ;	140:13:4085:4100	815841	1	True				
ANR	815846	IdentifierDecl	len = len1		815841	0					
ANR	815847	IdentifierDeclType	uint		815841	0					
ANR	815848	Identifier	len		815841	1					
ANR	815849	AssignmentExpression	len = len1		815841	2		=			
ANR	815850	Identifier	len1		815841	0					
ANR	815851	Identifier	len1		815841	1					
ANR	815852	IfStatement	if ( len2 < len )		815841	2					
ANR	815853	Condition	len2 < len	142:8:4111:4120	815841	0	True				
ANR	815854	RelationalExpression	len2 < len		815841	0		<			
ANR	815855	Identifier	len2		815841	0					
ANR	815856	Identifier	len		815841	1					
ANR	815857	ExpressionStatement	len = len2	143:8:4131:4141	815841	1	True				
ANR	815858	AssignmentExpression	len = len2		815841	0		=			
ANR	815859	Identifier	len		815841	0					
ANR	815860	Identifier	len2		815841	1					
ANR	815861	CompoundStatement		8:17:133:152	815841	3					
ANR	815862	Statement	register	145:8:4157:4164	815841	0	True				
ANR	815863	IdentifierDeclStatement	const byte * p1 = s1 ;	145:17:4166:4185	815841	1	True				
ANR	815864	IdentifierDecl	* p1 = s1		815841	0					
ANR	815865	IdentifierDeclType	const byte *		815841	0					
ANR	815866	Identifier	p1		815841	1					
ANR	815867	AssignmentExpression	* p1 = s1		815841	2		=			
ANR	815868	Identifier	s1		815841	0					
ANR	815869	Identifier	s1		815841	1					
ANR	815870	Statement	register	146:8:4195:4202	815841	2	True				
ANR	815871	IdentifierDeclStatement	const byte * p2 = s2 ;	146:17:4204:4223	815841	3	True				
ANR	815872	IdentifierDecl	* p2 = s2		815841	0					
ANR	815873	IdentifierDeclType	const byte *		815841	0					
ANR	815874	Identifier	p2		815841	1					
ANR	815875	AssignmentExpression	* p2 = s2		815841	2		=			
ANR	815876	Identifier	s2		815841	0					
ANR	815877	Identifier	s2		815841	1					
ANR	815878	WhileStatement	while ( len -- )		815841	4					
ANR	815879	Condition	len --	148:15:4241:4245	815841	0	True				
ANR	815880	PostIncDecOperationExpression	len --		815841	0					
ANR	815881	Identifier	len		815841	0					
ANR	815882	IncDec	--		815841	1					
ANR	815883	IfStatement	if ( * p1 ++ != * p2 ++ )		815841	1					
ANR	815884	Condition	* p1 ++ != * p2 ++	149:16:4264:4277	815841	0	True				
ANR	815885	EqualityExpression	* p1 ++ != * p2 ++		815841	0		!=			
ANR	815886	UnaryOperationExpression	* p1 ++		815841	0					
ANR	815887	UnaryOperator	*		815841	0					
ANR	815888	PostIncDecOperationExpression	p1 ++		815841	1					
ANR	815889	Identifier	p1		815841	0					
ANR	815890	IncDec	++		815841	1					
ANR	815891	UnaryOperationExpression	* p2 ++		815841	1					
ANR	815892	UnaryOperator	*		815841	0					
ANR	815893	PostIncDecOperationExpression	p2 ++		815841	1					
ANR	815894	Identifier	p2		815841	0					
ANR	815895	IncDec	++		815841	1					
ANR	815896	ReturnStatement	return ( p1 [ - 1 ] < p2 [ - 1 ] ? - 1 : 1 ) ;	150:16:4296:4329	815841	1	True				
ANR	815897	ConditionalExpression	p1 [ - 1 ] < p2 [ - 1 ] ? - 1 : 1		815841	0					
ANR	815898	Condition	p1 [ - 1 ] < p2 [ - 1 ]		815841	0					
ANR	815899	RelationalExpression	p1 [ - 1 ] < p2 [ - 1 ]		815841	0		<			
ANR	815900	ArrayIndexing	p1 [ - 1 ]		815841	0					
ANR	815901	Identifier	p1		815841	0					
ANR	815902	UnaryOperationExpression	- 1		815841	1					
ANR	815903	UnaryOperator	-		815841	0					
ANR	815904	PrimaryExpression	1		815841	1					
ANR	815905	ArrayIndexing	p2 [ - 1 ]		815841	1					
ANR	815906	Identifier	p2		815841	0					
ANR	815907	UnaryOperationExpression	- 1		815841	1					
ANR	815908	UnaryOperator	-		815841	0					
ANR	815909	PrimaryExpression	1		815841	1					
ANR	815910	UnaryOperationExpression	- 1		815841	1					
ANR	815911	UnaryOperator	-		815841	0					
ANR	815912	PrimaryExpression	1		815841	1					
ANR	815913	PrimaryExpression	1		815841	2					
ANR	815914	ReturnStatement	return ( len1 == len2 ? 0 : len1 < len2 ? - 1 : 1 ) ;	153:4:4383:4431	815841	4	True				
ANR	815915	ConditionalExpression	len1 == len2 ? 0 : len1 < len2 ? - 1 : 1		815841	0					
ANR	815916	Condition	len1 == len2		815841	0					
ANR	815917	EqualityExpression	len1 == len2		815841	0		==			
ANR	815918	Identifier	len1		815841	0					
ANR	815919	Identifier	len2		815841	1					
ANR	815920	PrimaryExpression	0		815841	1					
ANR	815921	ConditionalExpression	len1 < len2 ? - 1 : 1		815841	2					
ANR	815922	Condition	len1 < len2		815841	0					
ANR	815923	RelationalExpression	len1 < len2		815841	0		<			
ANR	815924	Identifier	len1		815841	0					
ANR	815925	Identifier	len2		815841	1					
ANR	815926	UnaryOperationExpression	- 1		815841	1					
ANR	815927	UnaryOperator	-		815841	0					
ANR	815928	PrimaryExpression	1		815841	1					
ANR	815929	PrimaryExpression	1		815841	2					
ANR	815930	ReturnType	int		815841	1					
ANR	815931	Identifier	bytes_compare		815841	2					
ANR	815932	ParameterList	"const byte * s1 , uint len1 , const byte * s2 , uint len2"		815841	3					
ANR	815933	Parameter	const byte * s1	138:14:4014:4028	815841	0	True				
ANR	815934	ParameterType	const byte *		815841	0					
ANR	815935	Identifier	s1		815841	1					
ANR	815936	Parameter	uint len1	138:31:4031:4039	815841	1	True				
ANR	815937	ParameterType	uint		815841	0					
ANR	815938	Identifier	len1		815841	1					
ANR	815939	Parameter	const byte * s2	138:42:4042:4056	815841	2	True				
ANR	815940	ParameterType	const byte *		815841	0					
ANR	815941	Identifier	s2		815841	1					
ANR	815942	Parameter	uint len2	138:59:4059:4067	815841	3	True				
ANR	815943	ParameterType	uint		815841	0					
ANR	815944	Identifier	len2		815841	1					
ANR	815945	CFGEntryNode	ENTRY		815841		True				
ANR	815946	CFGExitNode	EXIT		815841		True				
ANR	815947	Symbol	p1		815841						
ANR	815948	Symbol	p2		815841						
ANR	815949	Symbol	len		815841						
ANR	815950	Symbol	* p1		815841						
ANR	815951	Symbol	* p1 ++		815841						
ANR	815952	Symbol	* p2 ++		815841						
ANR	815953	Symbol	* p2		815841						
ANR	815954	Symbol	s1		815841						
ANR	815955	Symbol	len1		815841						
ANR	815956	Symbol	s2		815841						
ANR	815957	Symbol	len2		815841						
ANR	815958	DeclStmt									
ANR	815959	Decl							const string_match_params	const string_match_params	string_match_params_default
ANR	815960	Function	string_match	162:0:4668:6408							
ANR	815961	FunctionDef	"string_match (const byte * str , uint len , const byte * pstr , uint plen , register const string_match_params * psmp)"		815960	0					
ANR	815962	CompoundStatement		165:0:4800:6408	815960	0					
ANR	815963	IdentifierDeclStatement	const byte * pback = 0 ;	166:4:4806:4827	815960	0	True				
ANR	815964	IdentifierDecl	* pback = 0		815960	0					
ANR	815965	IdentifierDeclType	const byte *		815960	0					
ANR	815966	Identifier	pback		815960	1					
ANR	815967	AssignmentExpression	* pback = 0		815960	2		=			
ANR	815968	Identifier	pback		815960	0					
ANR	815969	PrimaryExpression	0		815960	1					
ANR	815970	IdentifierDeclStatement	const byte * spback = 0 ;	167:4:4833:4855	815960	1	True				
ANR	815971	IdentifierDecl	* spback = 0		815960	0					
ANR	815972	IdentifierDeclType	const byte *		815960	0					
ANR	815973	Identifier	spback		815960	1					
ANR	815974	AssignmentExpression	* spback = 0		815960	2		=			
ANR	815975	Identifier	spback		815960	0					
ANR	815976	PrimaryExpression	0		815960	1					
ANR	815977	IdentifierDeclStatement	"const byte * p = pstr , * pend = pstr + plen ;"	168:4:4898:4939	815960	2	True				
ANR	815978	IdentifierDecl	* p = pstr		815960	0					
ANR	815979	IdentifierDeclType	const byte *		815960	0					
ANR	815980	Identifier	p		815960	1					
ANR	815981	AssignmentExpression	* p = pstr		815960	2		=			
ANR	815982	Identifier	pstr		815960	0					
ANR	815983	Identifier	pstr		815960	1					
ANR	815984	IdentifierDecl	* pend = pstr + plen		815960	1					
ANR	815985	IdentifierDeclType	const byte *		815960	0					
ANR	815986	Identifier	pend		815960	1					
ANR	815987	AssignmentExpression	* pend = pstr + plen		815960	2		=			
ANR	815988	Identifier	pend		815960	0					
ANR	815989	AdditiveExpression	pstr + plen		815960	1		+			
ANR	815990	Identifier	pstr		815960	0					
ANR	815991	Identifier	plen		815960	1					
ANR	815992	IdentifierDeclStatement	"const byte * sp = str , * spend = str + len ;"	169:4:4945:4985	815960	3	True				
ANR	815993	IdentifierDecl	* sp = str		815960	0					
ANR	815994	IdentifierDeclType	const byte *		815960	0					
ANR	815995	Identifier	sp		815960	1					
ANR	815996	AssignmentExpression	* sp = str		815960	2		=			
ANR	815997	Identifier	str		815960	0					
ANR	815998	Identifier	str		815960	1					
ANR	815999	IdentifierDecl	* spend = str + len		815960	1					
ANR	816000	IdentifierDeclType	const byte *		815960	0					
ANR	816001	Identifier	spend		815960	1					
ANR	816002	AssignmentExpression	* spend = str + len		815960	2		=			
ANR	816003	Identifier	spend		815960	0					
ANR	816004	AdditiveExpression	str + len		815960	1		+			
ANR	816005	Identifier	str		815960	0					
ANR	816006	Identifier	len		815960	1					
ANR	816007	IfStatement	if ( psmp == 0 )		815960	4					
ANR	816008	Condition	psmp == 0	171:8:4996:5004	815960	0	True				
ANR	816009	EqualityExpression	psmp == 0		815960	0		==			
ANR	816010	Identifier	psmp		815960	0					
ANR	816011	PrimaryExpression	0		815960	1					
ANR	816012	ExpressionStatement	psmp = & string_match_params_default	172:8:5015:5050	815960	1	True				
ANR	816013	AssignmentExpression	psmp = & string_match_params_default		815960	0		=			
ANR	816014	Identifier	psmp		815960	0					
ANR	816015	UnaryOperationExpression	& string_match_params_default		815960	1					
ANR	816016	UnaryOperator	&		815960	0					
ANR	816017	Identifier	string_match_params_default		815960	1					
ANR	816018	Label	again :	173:2:5054:5059	815960	5	True				
ANR	816019	Identifier	again		815960	0					
ANR	816020	WhileStatement	while ( p < pend )		815960	6					
ANR	816021	Condition	p < pend	173:15:5067:5074	815960	0	True				
ANR	816022	RelationalExpression	p < pend		815960	0		<			
ANR	816023	Identifier	p		815960	0					
ANR	816024	Identifier	pend		815960	1					
ANR	816025	CompoundStatement		10:17:295:307	815960	1					
ANR	816026	Statement	register	174:8:5087:5094	815960	0	True				
ANR	816027	IdentifierDeclStatement	byte ch = * p ;	174:17:5096:5108	815960	1	True				
ANR	816028	IdentifierDecl	ch = * p		815960	0					
ANR	816029	IdentifierDeclType	byte		815960	0					
ANR	816030	Identifier	ch		815960	1					
ANR	816031	AssignmentExpression	ch = * p		815960	2		=			
ANR	816032	Identifier	ch		815960	0					
ANR	816033	UnaryOperationExpression	* p		815960	1					
ANR	816034	UnaryOperator	*		815960	0					
ANR	816035	Identifier	p		815960	1					
ANR	816036	IfStatement	if ( ch == psmp -> any_substring )		815960	2					
ANR	816037	Condition	ch == psmp -> any_substring	176:12:5123:5147	815960	0	True				
ANR	816038	EqualityExpression	ch == psmp -> any_substring		815960	0		==			
ANR	816039	Identifier	ch		815960	0					
ANR	816040	PtrMemberAccess	psmp -> any_substring		815960	1					
ANR	816041	Identifier	psmp		815960	0					
ANR	816042	Identifier	any_substring		815960	1					
ANR	816043	CompoundStatement		12:39:349:349	815960	1					
ANR	816044	ExpressionStatement	"pback = ++ p , spback = sp"	177:12:5164:5188	815960	0	True				
ANR	816045	Expression	"pback = ++ p , spback = sp"		815960	0					
ANR	816046	AssignmentExpression	pback = ++ p		815960	0		=			
ANR	816047	Identifier	pback		815960	0					
ANR	816048	UnaryExpression	++ p		815960	1					
ANR	816049	IncDec	++		815960	0					
ANR	816050	Identifier	p		815960	1					
ANR	816051	AssignmentExpression	spback = sp		815960	1		=			
ANR	816052	Identifier	spback		815960	0					
ANR	816053	Identifier	sp		815960	1					
ANR	816054	ContinueStatement	continue ;	178:12:5202:5210	815960	1	True				
ANR	816055	ElseStatement	else		815960	0					
ANR	816056	IfStatement	if ( ch == psmp -> any_char )		815960	0					
ANR	816057	Condition	ch == psmp -> any_char	179:19:5231:5250	815960	0	True				
ANR	816058	EqualityExpression	ch == psmp -> any_char		815960	0		==			
ANR	816059	Identifier	ch		815960	0					
ANR	816060	PtrMemberAccess	psmp -> any_char		815960	1					
ANR	816061	Identifier	psmp		815960	0					
ANR	816062	Identifier	any_char		815960	1					
ANR	816063	CompoundStatement		15:41:452:452	815960	1					
ANR	816064	IfStatement	if ( sp == spend )		815960	0					
ANR	816065	Condition	sp == spend	180:16:5271:5281	815960	0	True				
ANR	816066	EqualityExpression	sp == spend		815960	0		==			
ANR	816067	Identifier	sp		815960	0					
ANR	816068	Identifier	spend		815960	1					
ANR	816069	ReturnStatement	return false ;	181:16:5300:5312	815960	1	True				
ANR	816070	Identifier	false		815960	0					
ANR	816071	ExpressionStatement	"p ++ , sp ++"	182:12:5346:5355	815960	1	True				
ANR	816072	Expression	"p ++ , sp ++"		815960	0					
ANR	816073	PostIncDecOperationExpression	p ++		815960	0					
ANR	816074	Identifier	p		815960	0					
ANR	816075	IncDec	++		815960	1					
ANR	816076	PostIncDecOperationExpression	sp ++		815960	1					
ANR	816077	Identifier	sp		815960	0					
ANR	816078	IncDec	++		815960	1					
ANR	816079	ContinueStatement	continue ;	183:12:5369:5377	815960	2	True				
ANR	816080	ElseStatement	else		815960	0					
ANR	816081	IfStatement	if ( ch == psmp -> quote_next )		815960	0					
ANR	816082	Condition	ch == psmp -> quote_next	184:19:5398:5419	815960	0	True				
ANR	816083	EqualityExpression	ch == psmp -> quote_next		815960	0		==			
ANR	816084	Identifier	ch		815960	0					
ANR	816085	PtrMemberAccess	psmp -> quote_next		815960	1					
ANR	816086	Identifier	psmp		815960	0					
ANR	816087	Identifier	quote_next		815960	1					
ANR	816088	CompoundStatement		20:43:621:621	815960	1					
ANR	816089	IfStatement	if ( ++ p == pend )		815960	0					
ANR	816090	Condition	++ p == pend	185:16:5440:5450	815960	0	True				
ANR	816091	EqualityExpression	++ p == pend		815960	0		==			
ANR	816092	UnaryExpression	++ p		815960	0					
ANR	816093	IncDec	++		815960	0					
ANR	816094	Identifier	p		815960	1					
ANR	816095	Identifier	pend		815960	1					
ANR	816096	ReturnStatement	return true ;	186:16:5469:5480	815960	1	True				
ANR	816097	Identifier	true		815960	0					
ANR	816098	ExpressionStatement	ch = * p	187:12:5512:5519	815960	1	True				
ANR	816099	AssignmentExpression	ch = * p		815960	0		=			
ANR	816100	Identifier	ch		815960	0					
ANR	816101	UnaryOperationExpression	* p		815960	1					
ANR	816102	UnaryOperator	*		815960	0					
ANR	816103	Identifier	p		815960	1					
ANR	816104	IfStatement	if ( sp == spend )		815960	3					
ANR	816105	Condition	sp == spend	189:12:5543:5553	815960	0	True				
ANR	816106	EqualityExpression	sp == spend		815960	0		==			
ANR	816107	Identifier	sp		815960	0					
ANR	816108	Identifier	spend		815960	1					
ANR	816109	ReturnStatement	return false ;	190:12:5568:5580	815960	1	True				
ANR	816110	Identifier	false		815960	0					
ANR	816111	IfStatement	if ( * sp == ch || ( psmp -> ignore_case && ( * sp ^ ch ) == 0x20 && ( ch &= ~0x20 ) >= 0x41 && ch <= 0x5a ) || ( psmp -> slash_equiv && ( ( ch == '\\\\' && * sp == '/' ) || ( ch == '/' && * sp == '\\\\' ) ) ) )		815960	4					
ANR	816112	Condition	* sp == ch || ( psmp -> ignore_case && ( * sp ^ ch ) == 0x20 && ( ch &= ~0x20 ) >= 0x41 && ch <= 0x5a ) || ( psmp -> slash_equiv && ( ( ch == '\\\\' && * sp == '/' ) || ( ch == '/' && * sp == '\\\\' ) ) )	191:12:5614:5842	815960	0	True				
ANR	816113	OrExpression	* sp == ch || ( psmp -> ignore_case && ( * sp ^ ch ) == 0x20 && ( ch &= ~0x20 ) >= 0x41 && ch <= 0x5a ) || ( psmp -> slash_equiv && ( ( ch == '\\\\' && * sp == '/' ) || ( ch == '/' && * sp == '\\\\' ) ) )		815960	0		||			
ANR	816114	EqualityExpression	* sp == ch		815960	0		==			
ANR	816115	UnaryOperationExpression	* sp		815960	0					
ANR	816116	UnaryOperator	*		815960	0					
ANR	816117	Identifier	sp		815960	1					
ANR	816118	Identifier	ch		815960	1					
ANR	816119	OrExpression	( psmp -> ignore_case && ( * sp ^ ch ) == 0x20 && ( ch &= ~0x20 ) >= 0x41 && ch <= 0x5a ) || ( psmp -> slash_equiv && ( ( ch == '\\\\' && * sp == '/' ) || ( ch == '/' && * sp == '\\\\' ) ) )		815960	1		||			
ANR	816120	AndExpression	psmp -> ignore_case && ( * sp ^ ch ) == 0x20 && ( ch &= ~0x20 ) >= 0x41 && ch <= 0x5a		815960	0		&&			
ANR	816121	PtrMemberAccess	psmp -> ignore_case		815960	0					
ANR	816122	Identifier	psmp		815960	0					
ANR	816123	Identifier	ignore_case		815960	1					
ANR	816124	AndExpression	( * sp ^ ch ) == 0x20 && ( ch &= ~0x20 ) >= 0x41 && ch <= 0x5a		815960	1		&&			
ANR	816125	EqualityExpression	( * sp ^ ch ) == 0x20		815960	0		==			
ANR	816126	ExclusiveOrExpression	* sp ^ ch		815960	0		^			
ANR	816127	UnaryOperationExpression	* sp		815960	0					
ANR	816128	UnaryOperator	*		815960	0					
ANR	816129	Identifier	sp		815960	1					
ANR	816130	Identifier	ch		815960	1					
ANR	816131	PrimaryExpression	0x20		815960	1					
ANR	816132	AndExpression	( ch &= ~0x20 ) >= 0x41 && ch <= 0x5a		815960	1		&&			
ANR	816133	RelationalExpression	( ch &= ~0x20 ) >= 0x41		815960	0		>=			
ANR	816134	AssignmentExpression	ch &= ~0x20		815960	0		&=			
ANR	816135	Identifier	ch		815960	0					
ANR	816136	Identifier	~0x20		815960	1					
ANR	816137	PrimaryExpression	0x41		815960	1					
ANR	816138	RelationalExpression	ch <= 0x5a		815960	1		<=			
ANR	816139	Identifier	ch		815960	0					
ANR	816140	PrimaryExpression	0x5a		815960	1					
ANR	816141	AndExpression	psmp -> slash_equiv && ( ( ch == '\\\\' && * sp == '/' ) || ( ch == '/' && * sp == '\\\\' ) )		815960	1		&&			
ANR	816142	PtrMemberAccess	psmp -> slash_equiv		815960	0					
ANR	816143	Identifier	psmp		815960	0					
ANR	816144	Identifier	slash_equiv		815960	1					
ANR	816145	OrExpression	( ch == '\\\\' && * sp == '/' ) || ( ch == '/' && * sp == '\\\\' )		815960	1		||			
ANR	816146	AndExpression	ch == '\\\\' && * sp == '/'		815960	0		&&			
ANR	816147	EqualityExpression	ch == '\\\\'		815960	0		==			
ANR	816148	Identifier	ch		815960	0					
ANR	816149	PrimaryExpression	'\\\\'		815960	1					
ANR	816150	EqualityExpression	* sp == '/'		815960	1		==			
ANR	816151	UnaryOperationExpression	* sp		815960	0					
ANR	816152	UnaryOperator	*		815960	0					
ANR	816153	Identifier	sp		815960	1					
ANR	816154	PrimaryExpression	'/'		815960	1					
ANR	816155	AndExpression	ch == '/' && * sp == '\\\\'		815960	1		&&			
ANR	816156	EqualityExpression	ch == '/'		815960	0		==			
ANR	816157	Identifier	ch		815960	0					
ANR	816158	PrimaryExpression	'/'		815960	1					
ANR	816159	EqualityExpression	* sp == '\\\\'		815960	1		==			
ANR	816160	UnaryOperationExpression	* sp		815960	0					
ANR	816161	UnaryOperator	*		815960	0					
ANR	816162	Identifier	sp		815960	1					
ANR	816163	PrimaryExpression	'\\\\'		815960	1					
ANR	816164	ExpressionStatement	"p ++ , sp ++"	197:12:5870:5879	815960	1	True				
ANR	816165	Expression	"p ++ , sp ++"		815960	0					
ANR	816166	PostIncDecOperationExpression	p ++		815960	0					
ANR	816167	Identifier	p		815960	0					
ANR	816168	IncDec	++		815960	1					
ANR	816169	PostIncDecOperationExpression	sp ++		815960	1					
ANR	816170	Identifier	sp		815960	0					
ANR	816171	IncDec	++		815960	1					
ANR	816172	ElseStatement	else		815960	0					
ANR	816173	IfStatement	if ( pback == 0 )		815960	0					
ANR	816174	Condition	pback == 0	198:17:5898:5907	815960	0	True				
ANR	816175	EqualityExpression	pback == 0		815960	0		==			
ANR	816176	Identifier	pback		815960	0					
ANR	816177	PrimaryExpression	0		815960	1					
ANR	816178	ReturnStatement	return false ;	199:12:5922:5934	815960	1	True				
ANR	816179	Identifier	false		815960	0					
ANR	816180	ElseStatement	else		815960	0					
ANR	816181	CompoundStatement		36:13:1173:1173	815960	0					
ANR	816182	ExpressionStatement	sp = ++ spback	201:12:5988:6001	815960	0	True				
ANR	816183	AssignmentExpression	sp = ++ spback		815960	0		=			
ANR	816184	Identifier	sp		815960	0					
ANR	816185	UnaryExpression	++ spback		815960	1					
ANR	816186	IncDec	++		815960	0					
ANR	816187	Identifier	spback		815960	1					
ANR	816188	ExpressionStatement	p = pback	202:12:6015:6024	815960	1	True				
ANR	816189	AssignmentExpression	p = pback		815960	0		=			
ANR	816190	Identifier	p		815960	0					
ANR	816191	Identifier	pback		815960	1					
ANR	816192	IfStatement	if ( sp < spend )		815960	7					
ANR	816193	Condition	sp < spend	205:8:6050:6059	815960	0	True				
ANR	816194	RelationalExpression	sp < spend		815960	0		<			
ANR	816195	Identifier	sp		815960	0					
ANR	816196	Identifier	spend		815960	1					
ANR	816197	CompoundStatement		41:20:1261:1261	815960	1					
ANR	816198	IfStatement	if ( pback == 0 )		815960	0					
ANR	816199	Condition	pback == 0	208:12:6256:6265	815960	0	True				
ANR	816200	EqualityExpression	pback == 0		815960	0		==			
ANR	816201	Identifier	pback		815960	0					
ANR	816202	PrimaryExpression	0		815960	1					
ANR	816203	ReturnStatement	return false ;	209:12:6280:6292	815960	1	True				
ANR	816204	Identifier	false		815960	0					
ANR	816205	ExpressionStatement	p = pback	210:8:6302:6311	815960	1	True				
ANR	816206	AssignmentExpression	p = pback		815960	0		=			
ANR	816207	Identifier	p		815960	0					
ANR	816208	Identifier	pback		815960	1					
ANR	816209	ExpressionStatement	pback = 0	211:8:6321:6330	815960	2	True				
ANR	816210	AssignmentExpression	pback = 0		815960	0		=			
ANR	816211	Identifier	pback		815960	0					
ANR	816212	PrimaryExpression	0		815960	1					
ANR	816213	ExpressionStatement	sp = spend - ( pend - p )	212:8:6340:6363	815960	3	True				
ANR	816214	AssignmentExpression	sp = spend - ( pend - p )		815960	0		=			
ANR	816215	Identifier	sp		815960	0					
ANR	816216	AdditiveExpression	spend - ( pend - p )		815960	1		-			
ANR	816217	Identifier	spend		815960	0					
ANR	816218	AdditiveExpression	pend - p		815960	1		-			
ANR	816219	Identifier	pend		815960	0					
ANR	816220	Identifier	p		815960	1					
ANR	816221	GotoStatement	goto again ;	213:8:6373:6383	815960	4	True				
ANR	816222	Identifier	again		815960	0					
ANR	816223	ReturnStatement	return true ;	215:4:6395:6406	815960	8	True				
ANR	816224	Identifier	true		815960	0					
ANR	816225	ReturnType	bool		815960	1					
ANR	816226	Identifier	string_match		815960	2					
ANR	816227	ParameterList	"const byte * str , uint len , const byte * pstr , uint plen , register const string_match_params * psmp"		815960	3					
ANR	816228	Parameter	const byte * str	163:13:4686:4701	815960	0	True				
ANR	816229	ParameterType	const byte *		815960	0					
ANR	816230	Identifier	str		815960	1					
ANR	816231	Parameter	uint len	163:31:4704:4711	815960	1	True				
ANR	816232	ParameterType	uint		815960	0					
ANR	816233	Identifier	len		815960	1					
ANR	816234	Parameter	const byte * pstr	163:41:4714:4730	815960	2	True				
ANR	816235	ParameterType	const byte *		815960	0					
ANR	816236	Identifier	pstr		815960	1					
ANR	816237	Parameter	uint plen	163:60:4733:4741	815960	3	True				
ANR	816238	ParameterType	uint		815960	0					
ANR	816239	Identifier	plen		815960	1					
ANR	816240	Parameter	register const string_match_params * psmp	164:13:4757:4797	815960	4	True				
ANR	816241	ParameterType	register const string_match_params *		815960	0					
ANR	816242	Identifier	psmp		815960	1					
ANR	816243	CFGEntryNode	ENTRY		815960		True				
ANR	816244	CFGExitNode	EXIT		815960		True				
ANR	816245	Symbol	* sp		815960						
ANR	816246	Symbol	psmp -> quote_next		815960						
ANR	816247	Symbol	~0x20		815960						
ANR	816248	Symbol	psmp -> any_substring		815960						
ANR	816249	Symbol	ch		815960						
ANR	816250	Symbol	& string_match_params_default		815960						
ANR	816251	Symbol	false		815960						
ANR	816252	Symbol	pback		815960						
ANR	816253	Symbol	str		815960						
ANR	816254	Symbol	p		815960						
ANR	816255	Symbol	plen		815960						
ANR	816256	Symbol	spback		815960						
ANR	816257	Symbol	psmp		815960						
ANR	816258	Symbol	len		815960						
ANR	816259	Symbol	pstr		815960						
ANR	816260	Symbol	psmp -> ignore_case		815960						
ANR	816261	Symbol	spend		815960						
ANR	816262	Symbol	psmp -> slash_equiv		815960						
ANR	816263	Symbol	psmp -> any_char		815960						
ANR	816264	Symbol	true		815960						
ANR	816265	Symbol	* p		815960						
ANR	816266	Symbol	sp		815960						
ANR	816267	Symbol	pend		815960						
ANR	816268	Symbol	* psmp		815960						
ANR	816269	Function	uid_equal	222:0:6533:6884							
ANR	816270	FunctionDef	"uid_equal (register const gs_uid * puid1 , register const gs_uid * puid2)"		816269	0					
ANR	816271	CompoundStatement		224:0:6610:6884	816269	0					
ANR	816272	IfStatement	if ( puid1 -> id != puid2 -> id )		816269	0					
ANR	816273	Condition	puid1 -> id != puid2 -> id	225:8:6620:6641	816269	0	True				
ANR	816274	EqualityExpression	puid1 -> id != puid2 -> id		816269	0		!=			
ANR	816275	PtrMemberAccess	puid1 -> id		816269	0					
ANR	816276	Identifier	puid1		816269	0					
ANR	816277	Identifier	id		816269	1					
ANR	816278	PtrMemberAccess	puid2 -> id		816269	1					
ANR	816279	Identifier	puid2		816269	0					
ANR	816280	Identifier	id		816269	1					
ANR	816281	ReturnStatement	return false ;	226:8:6652:6664	816269	1	True				
ANR	816282	Identifier	false		816269	0					
ANR	816283	IfStatement	if ( puid1 -> id >= 0 )		816269	1					
ANR	816284	Condition	puid1 -> id >= 0	227:8:6674:6687	816269	0	True				
ANR	816285	RelationalExpression	puid1 -> id >= 0		816269	0		>=			
ANR	816286	PtrMemberAccess	puid1 -> id		816269	0					
ANR	816287	Identifier	puid1		816269	0					
ANR	816288	Identifier	id		816269	1					
ANR	816289	PrimaryExpression	0		816269	1					
ANR	816290	ReturnStatement	return true ;	228:8:6698:6709	816269	1	True				
ANR	816291	Identifier	true		816269	0					
ANR	816292	ReturnStatement	"return ! memcmp ( ( const char * ) puid1 -> xvalues , ( const char * ) puid2 -> xvalues , ( uint ) - ( puid1 -> id ) * sizeof ( long ) ) ;"	229:4:6731:6882	816269	2	True				
ANR	816293	UnaryOperationExpression	"! memcmp ( ( const char * ) puid1 -> xvalues , ( const char * ) puid2 -> xvalues , ( uint ) - ( puid1 -> id ) * sizeof ( long ) )"		816269	0					
ANR	816294	UnaryOperator	!		816269	0					
ANR	816295	CallExpression	"memcmp ( ( const char * ) puid1 -> xvalues , ( const char * ) puid2 -> xvalues , ( uint ) - ( puid1 -> id ) * sizeof ( long ) )"		816269	1					
ANR	816296	Callee	memcmp		816269	0					
ANR	816297	Identifier	memcmp		816269	0					
ANR	816298	ArgumentList	( const char * ) puid1 -> xvalues		816269	1					
ANR	816299	Argument	( const char * ) puid1 -> xvalues		816269	0					
ANR	816300	CastExpression	( const char * ) puid1 -> xvalues		816269	0					
ANR	816301	CastTarget	const char *		816269	0					
ANR	816302	PtrMemberAccess	puid1 -> xvalues		816269	1					
ANR	816303	Identifier	puid1		816269	0					
ANR	816304	Identifier	xvalues		816269	1					
ANR	816305	Argument	( const char * ) puid2 -> xvalues		816269	1					
ANR	816306	CastExpression	( const char * ) puid2 -> xvalues		816269	0					
ANR	816307	CastTarget	const char *		816269	0					
ANR	816308	PtrMemberAccess	puid2 -> xvalues		816269	1					
ANR	816309	Identifier	puid2		816269	0					
ANR	816310	Identifier	xvalues		816269	1					
ANR	816311	Argument	( uint ) - ( puid1 -> id ) * sizeof ( long )		816269	2					
ANR	816312	MultiplicativeExpression	( uint ) - ( puid1 -> id ) * sizeof ( long )		816269	0		*			
ANR	816313	CastExpression	( uint ) - ( puid1 -> id )		816269	0					
ANR	816314	CastTarget	uint		816269	0					
ANR	816315	UnaryOperationExpression	- ( puid1 -> id )		816269	1					
ANR	816316	UnaryOperator	-		816269	0					
ANR	816317	PtrMemberAccess	puid1 -> id		816269	1					
ANR	816318	Identifier	puid1		816269	0					
ANR	816319	Identifier	id		816269	1					
ANR	816320	SizeofExpression	sizeof ( long )		816269	1					
ANR	816321	Sizeof	sizeof		816269	0					
ANR	816322	SizeofOperand	long		816269	1					
ANR	816323	ReturnType	bool		816269	1					
ANR	816324	Identifier	uid_equal		816269	2					
ANR	816325	ParameterList	"register const gs_uid * puid1 , register const gs_uid * puid2"		816269	3					
ANR	816326	Parameter	register const gs_uid * puid1	223:10:6548:6576	816269	0	True				
ANR	816327	ParameterType	register const gs_uid *		816269	0					
ANR	816328	Identifier	puid1		816269	1					
ANR	816329	Parameter	register const gs_uid * puid2	223:41:6579:6607	816269	1	True				
ANR	816330	ParameterType	register const gs_uid *		816269	0					
ANR	816331	Identifier	puid2		816269	1					
ANR	816332	CFGEntryNode	ENTRY		816269		True				
ANR	816333	CFGExitNode	EXIT		816269		True				
ANR	816334	Symbol	puid1		816269						
ANR	816335	Symbol	puid1 -> id		816269						
ANR	816336	Symbol	puid1 -> xvalues		816269						
ANR	816337	Symbol	puid2		816269						
ANR	816338	Symbol	puid2 -> id		816269						
ANR	816339	Symbol	memcmp		816269						
ANR	816340	Symbol	puid2 -> xvalues		816269						
ANR	816341	Symbol	false		816269						
ANR	816342	Symbol	true		816269						
ANR	816343	Symbol	* puid1		816269						
ANR	816344	Symbol	* puid2		816269						
ANR	816345	Function	uid_copy	236:0:6961:7393							
ANR	816346	FunctionDef	"uid_copy (gs_uid * puid , gs_memory_t * mem , client_name_t cname)"		816345	0					
ANR	816347	CompoundStatement		238:0:7027:7393	816345	0					
ANR	816348	IfStatement	if ( uid_is_XUID ( puid ) )		816345	0					
ANR	816349	Condition	uid_is_XUID ( puid )	239:8:7037:7053	816345	0	True				
ANR	816350	CallExpression	uid_is_XUID ( puid )		816345	0					
ANR	816351	Callee	uid_is_XUID		816345	0					
ANR	816352	Identifier	uid_is_XUID		816345	0					
ANR	816353	ArgumentList	puid		816345	1					
ANR	816354	Argument	puid		816345	0					
ANR	816355	Identifier	puid		816345	0					
ANR	816356	CompoundStatement		4:8:80:169	816345	1					
ANR	816357	IdentifierDeclStatement	uint xsize = uid_XUID_size ( puid ) ;	240:8:7066:7098	816345	0	True				
ANR	816358	IdentifierDecl	xsize = uid_XUID_size ( puid )		816345	0					
ANR	816359	IdentifierDeclType	uint		816345	0					
ANR	816360	Identifier	xsize		816345	1					
ANR	816361	AssignmentExpression	xsize = uid_XUID_size ( puid )		816345	2		=			
ANR	816362	Identifier	xsize		816345	0					
ANR	816363	CallExpression	uid_XUID_size ( puid )		816345	1					
ANR	816364	Callee	uid_XUID_size		816345	0					
ANR	816365	Identifier	uid_XUID_size		816345	0					
ANR	816366	ArgumentList	puid		816345	1					
ANR	816367	Argument	puid		816345	0					
ANR	816368	Identifier	puid		816345	0					
ANR	816369	IdentifierDeclStatement	"long * xvalues = ( long * ) gs_alloc_byte_array ( mem , xsize , sizeof ( long ) , cname ) ;"	241:8:7108:7197	816345	1	True				
ANR	816370	IdentifierDecl	"* xvalues = ( long * ) gs_alloc_byte_array ( mem , xsize , sizeof ( long ) , cname )"		816345	0					
ANR	816371	IdentifierDeclType	long *		816345	0					
ANR	816372	Identifier	xvalues		816345	1					
ANR	816373	AssignmentExpression	"* xvalues = ( long * ) gs_alloc_byte_array ( mem , xsize , sizeof ( long ) , cname )"		816345	2		=			
ANR	816374	Identifier	xvalues		816345	0					
ANR	816375	CastExpression	"( long * ) gs_alloc_byte_array ( mem , xsize , sizeof ( long ) , cname )"		816345	1					
ANR	816376	CastTarget	long *		816345	0					
ANR	816377	CallExpression	"gs_alloc_byte_array ( mem , xsize , sizeof ( long ) , cname )"		816345	1					
ANR	816378	Callee	gs_alloc_byte_array		816345	0					
ANR	816379	Identifier	gs_alloc_byte_array		816345	0					
ANR	816380	ArgumentList	mem		816345	1					
ANR	816381	Argument	mem		816345	0					
ANR	816382	Identifier	mem		816345	0					
ANR	816383	Argument	xsize		816345	1					
ANR	816384	Identifier	xsize		816345	0					
ANR	816385	Argument	sizeof ( long )		816345	2					
ANR	816386	SizeofExpression	sizeof ( long )		816345	0					
ANR	816387	Sizeof	sizeof		816345	0					
ANR	816388	SizeofOperand	long		816345	1					
ANR	816389	Argument	cname		816345	3					
ANR	816390	Identifier	cname		816345	0					
ANR	816391	IfStatement	if ( xvalues == 0 )		816345	2					
ANR	816392	Condition	xvalues == 0	244:12:7212:7223	816345	0	True				
ANR	816393	EqualityExpression	xvalues == 0		816345	0		==			
ANR	816394	Identifier	xvalues		816345	0					
ANR	816395	PrimaryExpression	0		816345	1					
ANR	816396	ExpressionStatement	return_error ( gs_error_VMerror )	245:12:7238:7268	816345	1	True				
ANR	816397	CallExpression	return_error ( gs_error_VMerror )		816345	0					
ANR	816398	Callee	return_error		816345	0					
ANR	816399	Identifier	return_error		816345	0					
ANR	816400	ArgumentList	gs_error_VMerror		816345	1					
ANR	816401	Argument	gs_error_VMerror		816345	0					
ANR	816402	Identifier	gs_error_VMerror		816345	0					
ANR	816403	ExpressionStatement	"memcpy ( xvalues , uid_XUID_values ( puid ) , xsize * sizeof ( long ) )"	246:8:7278:7338	816345	3	True				
ANR	816404	CallExpression	"memcpy ( xvalues , uid_XUID_values ( puid ) , xsize * sizeof ( long ) )"		816345	0					
ANR	816405	Callee	memcpy		816345	0					
ANR	816406	Identifier	memcpy		816345	0					
ANR	816407	ArgumentList	xvalues		816345	1					
ANR	816408	Argument	xvalues		816345	0					
ANR	816409	Identifier	xvalues		816345	0					
ANR	816410	Argument	uid_XUID_values ( puid )		816345	1					
ANR	816411	CallExpression	uid_XUID_values ( puid )		816345	0					
ANR	816412	Callee	uid_XUID_values		816345	0					
ANR	816413	Identifier	uid_XUID_values		816345	0					
ANR	816414	ArgumentList	puid		816345	1					
ANR	816415	Argument	puid		816345	0					
ANR	816416	Identifier	puid		816345	0					
ANR	816417	Argument	xsize * sizeof ( long )		816345	2					
ANR	816418	MultiplicativeExpression	xsize * sizeof ( long )		816345	0		*			
ANR	816419	Identifier	xsize		816345	0					
ANR	816420	SizeofExpression	sizeof ( long )		816345	1					
ANR	816421	Sizeof	sizeof		816345	0					
ANR	816422	SizeofOperand	long		816345	1					
ANR	816423	ExpressionStatement	puid -> xvalues = xvalues	247:8:7348:7371	816345	4	True				
ANR	816424	AssignmentExpression	puid -> xvalues = xvalues		816345	0		=			
ANR	816425	PtrMemberAccess	puid -> xvalues		816345	0					
ANR	816426	Identifier	puid		816345	0					
ANR	816427	Identifier	xvalues		816345	1					
ANR	816428	Identifier	xvalues		816345	1					
ANR	816429	ReturnStatement	return 0 ;	249:4:7383:7391	816345	1	True				
ANR	816430	PrimaryExpression	0		816345	0					
ANR	816431	ReturnType	int		816345	1					
ANR	816432	Identifier	uid_copy		816345	2					
ANR	816433	ParameterList	"gs_uid * puid , gs_memory_t * mem , client_name_t cname"		816345	3					
ANR	816434	Parameter	gs_uid * puid	237:9:6974:6985	816345	0	True				
ANR	816435	ParameterType	gs_uid *		816345	0					
ANR	816436	Identifier	puid		816345	1					
ANR	816437	Parameter	gs_memory_t * mem	237:23:6988:7003	816345	1	True				
ANR	816438	ParameterType	gs_memory_t *		816345	0					
ANR	816439	Identifier	mem		816345	1					
ANR	816440	Parameter	client_name_t cname	237:41:7006:7024	816345	2	True				
ANR	816441	ParameterType	client_name_t		816345	0					
ANR	816442	Identifier	cname		816345	1					
ANR	816443	CFGEntryNode	ENTRY		816345		True				
ANR	816444	CFGExitNode	EXIT		816345		True				
ANR	816445	Symbol	uid_is_XUID		816345						
ANR	816446	Symbol	gs_error_VMerror		816345						
ANR	816447	Symbol	puid		816345						
ANR	816448	Symbol	mem		816345						
ANR	816449	Symbol	* puid		816345						
ANR	816450	Symbol	cname		816345						
ANR	816451	Symbol	xsize		816345						
ANR	816452	Symbol	uid_XUID_size		816345						
ANR	816453	Symbol	uid_XUID_values		816345						
ANR	816454	Symbol	xvalues		816345						
ANR	816455	Symbol	gs_alloc_byte_array		816345						
ANR	816456	Symbol	puid -> xvalues		816345						
ANR	816457	Function	int_rect_difference	259:0:7621:8708							
ANR	816458	FunctionDef	"int_rect_difference (gs_int_rect * outer , const gs_int_rect * inner , gs_int_rect * diffs)"		816457	0					
ANR	816459	CompoundStatement		262:0:7744:8708	816457	0					
ANR	816460	IdentifierDeclStatement	"int x0 = outer -> p . x , y0 = outer -> p . y ;"	263:4:7750:7786	816457	0	True				
ANR	816461	IdentifierDecl	x0 = outer -> p . x		816457	0					
ANR	816462	IdentifierDeclType	int		816457	0					
ANR	816463	Identifier	x0		816457	1					
ANR	816464	AssignmentExpression	x0 = outer -> p . x		816457	2		=			
ANR	816465	Identifier	x0		816457	0					
ANR	816466	MemberAccess	outer -> p . x		816457	1					
ANR	816467	PtrMemberAccess	outer -> p		816457	0					
ANR	816468	Identifier	outer		816457	0					
ANR	816469	Identifier	p		816457	1					
ANR	816470	Identifier	x		816457	1					
ANR	816471	IdentifierDecl	y0 = outer -> p . y		816457	1					
ANR	816472	IdentifierDeclType	int		816457	0					
ANR	816473	Identifier	y0		816457	1					
ANR	816474	AssignmentExpression	y0 = outer -> p . y		816457	2		=			
ANR	816475	Identifier	y0		816457	0					
ANR	816476	MemberAccess	outer -> p . y		816457	1					
ANR	816477	PtrMemberAccess	outer -> p		816457	0					
ANR	816478	Identifier	outer		816457	0					
ANR	816479	Identifier	p		816457	1					
ANR	816480	Identifier	y		816457	1					
ANR	816481	IdentifierDeclStatement	"int x1 = outer -> q . x , y1 = outer -> q . y ;"	264:4:7792:7828	816457	1	True				
ANR	816482	IdentifierDecl	x1 = outer -> q . x		816457	0					
ANR	816483	IdentifierDeclType	int		816457	0					
ANR	816484	Identifier	x1		816457	1					
ANR	816485	AssignmentExpression	x1 = outer -> q . x		816457	2		=			
ANR	816486	Identifier	x1		816457	0					
ANR	816487	MemberAccess	outer -> q . x		816457	1					
ANR	816488	PtrMemberAccess	outer -> q		816457	0					
ANR	816489	Identifier	outer		816457	0					
ANR	816490	Identifier	q		816457	1					
ANR	816491	Identifier	x		816457	1					
ANR	816492	IdentifierDecl	y1 = outer -> q . y		816457	1					
ANR	816493	IdentifierDeclType	int		816457	0					
ANR	816494	Identifier	y1		816457	1					
ANR	816495	AssignmentExpression	y1 = outer -> q . y		816457	2		=			
ANR	816496	Identifier	y1		816457	0					
ANR	816497	MemberAccess	outer -> q . y		816457	1					
ANR	816498	PtrMemberAccess	outer -> q		816457	0					
ANR	816499	Identifier	outer		816457	0					
ANR	816500	Identifier	q		816457	1					
ANR	816501	Identifier	y		816457	1					
ANR	816502	IdentifierDeclStatement	int count = 0 ;	265:4:7834:7847	816457	2	True				
ANR	816503	IdentifierDecl	count = 0		816457	0					
ANR	816504	IdentifierDeclType	int		816457	0					
ANR	816505	Identifier	count		816457	1					
ANR	816506	AssignmentExpression	count = 0		816457	2		=			
ANR	816507	Identifier	count		816457	0					
ANR	816508	PrimaryExpression	0		816457	1					
ANR	816509	IfStatement	if ( y0 < inner -> p . y )		816457	3					
ANR	816510	Condition	y0 < inner -> p . y	267:8:7858:7872	816457	0	True				
ANR	816511	RelationalExpression	y0 < inner -> p . y		816457	0		<			
ANR	816512	Identifier	y0		816457	0					
ANR	816513	MemberAccess	inner -> p . y		816457	1					
ANR	816514	PtrMemberAccess	inner -> p		816457	0					
ANR	816515	Identifier	inner		816457	0					
ANR	816516	Identifier	p		816457	1					
ANR	816517	Identifier	y		816457	1					
ANR	816518	CompoundStatement		6:25:130:130	816457	1					
ANR	816519	ExpressionStatement	"diffs [ 0 ] . p . x = x0 , diffs [ 0 ] . p . y = y0"	268:8:7885:7921	816457	0	True				
ANR	816520	Expression	"diffs [ 0 ] . p . x = x0 , diffs [ 0 ] . p . y = y0"		816457	0					
ANR	816521	AssignmentExpression	diffs [ 0 ] . p . x = x0		816457	0		=			
ANR	816522	MemberAccess	diffs [ 0 ] . p . x		816457	0					
ANR	816523	MemberAccess	diffs [ 0 ] . p		816457	0					
ANR	816524	ArrayIndexing	diffs [ 0 ]		816457	0					
ANR	816525	Identifier	diffs		816457	0					
ANR	816526	PrimaryExpression	0		816457	1					
ANR	816527	Identifier	p		816457	1					
ANR	816528	Identifier	x		816457	1					
ANR	816529	Identifier	x0		816457	1					
ANR	816530	AssignmentExpression	diffs [ 0 ] . p . y = y0		816457	1		=			
ANR	816531	MemberAccess	diffs [ 0 ] . p . y		816457	0					
ANR	816532	MemberAccess	diffs [ 0 ] . p		816457	0					
ANR	816533	ArrayIndexing	diffs [ 0 ]		816457	0					
ANR	816534	Identifier	diffs		816457	0					
ANR	816535	PrimaryExpression	0		816457	1					
ANR	816536	Identifier	p		816457	1					
ANR	816537	Identifier	y		816457	1					
ANR	816538	Identifier	y0		816457	1					
ANR	816539	ExpressionStatement	"diffs [ 0 ] . q . x = x1 , diffs [ 0 ] . q . y = min ( y1 , inner -> p . y )"	269:8:7931:7984	816457	1	True				
ANR	816540	Expression	"diffs [ 0 ] . q . x = x1 , diffs [ 0 ] . q . y = min ( y1 , inner -> p . y )"		816457	0					
ANR	816541	AssignmentExpression	diffs [ 0 ] . q . x = x1		816457	0		=			
ANR	816542	MemberAccess	diffs [ 0 ] . q . x		816457	0					
ANR	816543	MemberAccess	diffs [ 0 ] . q		816457	0					
ANR	816544	ArrayIndexing	diffs [ 0 ]		816457	0					
ANR	816545	Identifier	diffs		816457	0					
ANR	816546	PrimaryExpression	0		816457	1					
ANR	816547	Identifier	q		816457	1					
ANR	816548	Identifier	x		816457	1					
ANR	816549	Identifier	x1		816457	1					
ANR	816550	AssignmentExpression	"diffs [ 0 ] . q . y = min ( y1 , inner -> p . y )"		816457	1		=			
ANR	816551	MemberAccess	diffs [ 0 ] . q . y		816457	0					
ANR	816552	MemberAccess	diffs [ 0 ] . q		816457	0					
ANR	816553	ArrayIndexing	diffs [ 0 ]		816457	0					
ANR	816554	Identifier	diffs		816457	0					
ANR	816555	PrimaryExpression	0		816457	1					
ANR	816556	Identifier	q		816457	1					
ANR	816557	Identifier	y		816457	1					
ANR	816558	CallExpression	"min ( y1 , inner -> p . y )"		816457	1					
ANR	816559	Callee	min		816457	0					
ANR	816560	Identifier	min		816457	0					
ANR	816561	ArgumentList	y1		816457	1					
ANR	816562	Argument	y1		816457	0					
ANR	816563	Identifier	y1		816457	0					
ANR	816564	Argument	inner -> p . y		816457	1					
ANR	816565	MemberAccess	inner -> p . y		816457	0					
ANR	816566	PtrMemberAccess	inner -> p		816457	0					
ANR	816567	Identifier	inner		816457	0					
ANR	816568	Identifier	p		816457	1					
ANR	816569	Identifier	y		816457	1					
ANR	816570	ExpressionStatement	outer -> p . y = y0 = diffs [ 0 ] . q . y	270:8:7994:8024	816457	2	True				
ANR	816571	AssignmentExpression	outer -> p . y = y0 = diffs [ 0 ] . q . y		816457	0		=			
ANR	816572	MemberAccess	outer -> p . y		816457	0					
ANR	816573	PtrMemberAccess	outer -> p		816457	0					
ANR	816574	Identifier	outer		816457	0					
ANR	816575	Identifier	p		816457	1					
ANR	816576	Identifier	y		816457	1					
ANR	816577	AssignmentExpression	y0 = diffs [ 0 ] . q . y		816457	1		=			
ANR	816578	Identifier	y0		816457	0					
ANR	816579	MemberAccess	diffs [ 0 ] . q . y		816457	1					
ANR	816580	MemberAccess	diffs [ 0 ] . q		816457	0					
ANR	816581	ArrayIndexing	diffs [ 0 ]		816457	0					
ANR	816582	Identifier	diffs		816457	0					
ANR	816583	PrimaryExpression	0		816457	1					
ANR	816584	Identifier	q		816457	1					
ANR	816585	Identifier	y		816457	1					
ANR	816586	ExpressionStatement	++ count	271:8:8034:8041	816457	3	True				
ANR	816587	UnaryExpression	++ count		816457	0					
ANR	816588	IncDec	++		816457	0					
ANR	816589	Identifier	count		816457	1					
ANR	816590	IfStatement	if ( y1 > inner -> q . y )		816457	4					
ANR	816591	Condition	y1 > inner -> q . y	273:8:8057:8071	816457	0	True				
ANR	816592	RelationalExpression	y1 > inner -> q . y		816457	0		>			
ANR	816593	Identifier	y1		816457	0					
ANR	816594	MemberAccess	inner -> q . y		816457	1					
ANR	816595	PtrMemberAccess	inner -> q		816457	0					
ANR	816596	Identifier	inner		816457	0					
ANR	816597	Identifier	q		816457	1					
ANR	816598	Identifier	y		816457	1					
ANR	816599	CompoundStatement		12:25:329:329	816457	1					
ANR	816600	ExpressionStatement	"diffs [ count ] . p . x = x0 , diffs [ count ] . p . y = max ( y0 , inner -> q . y )"	274:8:8084:8145	816457	0	True				
ANR	816601	Expression	"diffs [ count ] . p . x = x0 , diffs [ count ] . p . y = max ( y0 , inner -> q . y )"		816457	0					
ANR	816602	AssignmentExpression	diffs [ count ] . p . x = x0		816457	0		=			
ANR	816603	MemberAccess	diffs [ count ] . p . x		816457	0					
ANR	816604	MemberAccess	diffs [ count ] . p		816457	0					
ANR	816605	ArrayIndexing	diffs [ count ]		816457	0					
ANR	816606	Identifier	diffs		816457	0					
ANR	816607	Identifier	count		816457	1					
ANR	816608	Identifier	p		816457	1					
ANR	816609	Identifier	x		816457	1					
ANR	816610	Identifier	x0		816457	1					
ANR	816611	AssignmentExpression	"diffs [ count ] . p . y = max ( y0 , inner -> q . y )"		816457	1		=			
ANR	816612	MemberAccess	diffs [ count ] . p . y		816457	0					
ANR	816613	MemberAccess	diffs [ count ] . p		816457	0					
ANR	816614	ArrayIndexing	diffs [ count ]		816457	0					
ANR	816615	Identifier	diffs		816457	0					
ANR	816616	Identifier	count		816457	1					
ANR	816617	Identifier	p		816457	1					
ANR	816618	Identifier	y		816457	1					
ANR	816619	CallExpression	"max ( y0 , inner -> q . y )"		816457	1					
ANR	816620	Callee	max		816457	0					
ANR	816621	Identifier	max		816457	0					
ANR	816622	ArgumentList	y0		816457	1					
ANR	816623	Argument	y0		816457	0					
ANR	816624	Identifier	y0		816457	0					
ANR	816625	Argument	inner -> q . y		816457	1					
ANR	816626	MemberAccess	inner -> q . y		816457	0					
ANR	816627	PtrMemberAccess	inner -> q		816457	0					
ANR	816628	Identifier	inner		816457	0					
ANR	816629	Identifier	q		816457	1					
ANR	816630	Identifier	y		816457	1					
ANR	816631	ExpressionStatement	"diffs [ count ] . q . x = x1 , diffs [ count ] . q . y = y1"	275:8:8155:8199	816457	1	True				
ANR	816632	Expression	"diffs [ count ] . q . x = x1 , diffs [ count ] . q . y = y1"		816457	0					
ANR	816633	AssignmentExpression	diffs [ count ] . q . x = x1		816457	0		=			
ANR	816634	MemberAccess	diffs [ count ] . q . x		816457	0					
ANR	816635	MemberAccess	diffs [ count ] . q		816457	0					
ANR	816636	ArrayIndexing	diffs [ count ]		816457	0					
ANR	816637	Identifier	diffs		816457	0					
ANR	816638	Identifier	count		816457	1					
ANR	816639	Identifier	q		816457	1					
ANR	816640	Identifier	x		816457	1					
ANR	816641	Identifier	x1		816457	1					
ANR	816642	AssignmentExpression	diffs [ count ] . q . y = y1		816457	1		=			
ANR	816643	MemberAccess	diffs [ count ] . q . y		816457	0					
ANR	816644	MemberAccess	diffs [ count ] . q		816457	0					
ANR	816645	ArrayIndexing	diffs [ count ]		816457	0					
ANR	816646	Identifier	diffs		816457	0					
ANR	816647	Identifier	count		816457	1					
ANR	816648	Identifier	q		816457	1					
ANR	816649	Identifier	y		816457	1					
ANR	816650	Identifier	y1		816457	1					
ANR	816651	ExpressionStatement	outer -> q . y = y1 = diffs [ count ] . p . y	276:8:8209:8243	816457	2	True				
ANR	816652	AssignmentExpression	outer -> q . y = y1 = diffs [ count ] . p . y		816457	0		=			
ANR	816653	MemberAccess	outer -> q . y		816457	0					
ANR	816654	PtrMemberAccess	outer -> q		816457	0					
ANR	816655	Identifier	outer		816457	0					
ANR	816656	Identifier	q		816457	1					
ANR	816657	Identifier	y		816457	1					
ANR	816658	AssignmentExpression	y1 = diffs [ count ] . p . y		816457	1		=			
ANR	816659	Identifier	y1		816457	0					
ANR	816660	MemberAccess	diffs [ count ] . p . y		816457	1					
ANR	816661	MemberAccess	diffs [ count ] . p		816457	0					
ANR	816662	ArrayIndexing	diffs [ count ]		816457	0					
ANR	816663	Identifier	diffs		816457	0					
ANR	816664	Identifier	count		816457	1					
ANR	816665	Identifier	p		816457	1					
ANR	816666	Identifier	y		816457	1					
ANR	816667	ExpressionStatement	++ count	277:8:8253:8260	816457	3	True				
ANR	816668	UnaryExpression	++ count		816457	0					
ANR	816669	IncDec	++		816457	0					
ANR	816670	Identifier	count		816457	1					
ANR	816671	IfStatement	if ( x0 < inner -> p . x )		816457	5					
ANR	816672	Condition	x0 < inner -> p . x	279:8:8276:8290	816457	0	True				
ANR	816673	RelationalExpression	x0 < inner -> p . x		816457	0		<			
ANR	816674	Identifier	x0		816457	0					
ANR	816675	MemberAccess	inner -> p . x		816457	1					
ANR	816676	PtrMemberAccess	inner -> p		816457	0					
ANR	816677	Identifier	inner		816457	0					
ANR	816678	Identifier	p		816457	1					
ANR	816679	Identifier	x		816457	1					
ANR	816680	CompoundStatement		18:25:548:548	816457	1					
ANR	816681	ExpressionStatement	"diffs [ 0 ] . p . x = x0 , diffs [ 0 ] . p . y = y0"	280:8:8303:8339	816457	0	True				
ANR	816682	Expression	"diffs [ 0 ] . p . x = x0 , diffs [ 0 ] . p . y = y0"		816457	0					
ANR	816683	AssignmentExpression	diffs [ 0 ] . p . x = x0		816457	0		=			
ANR	816684	MemberAccess	diffs [ 0 ] . p . x		816457	0					
ANR	816685	MemberAccess	diffs [ 0 ] . p		816457	0					
ANR	816686	ArrayIndexing	diffs [ 0 ]		816457	0					
ANR	816687	Identifier	diffs		816457	0					
ANR	816688	PrimaryExpression	0		816457	1					
ANR	816689	Identifier	p		816457	1					
ANR	816690	Identifier	x		816457	1					
ANR	816691	Identifier	x0		816457	1					
ANR	816692	AssignmentExpression	diffs [ 0 ] . p . y = y0		816457	1		=			
ANR	816693	MemberAccess	diffs [ 0 ] . p . y		816457	0					
ANR	816694	MemberAccess	diffs [ 0 ] . p		816457	0					
ANR	816695	ArrayIndexing	diffs [ 0 ]		816457	0					
ANR	816696	Identifier	diffs		816457	0					
ANR	816697	PrimaryExpression	0		816457	1					
ANR	816698	Identifier	p		816457	1					
ANR	816699	Identifier	y		816457	1					
ANR	816700	Identifier	y0		816457	1					
ANR	816701	ExpressionStatement	"diffs [ 0 ] . q . x = min ( x1 , inner -> p . x ) , diffs [ 0 ] . q . y = y1"	281:8:8349:8402	816457	1	True				
ANR	816702	Expression	"diffs [ 0 ] . q . x = min ( x1 , inner -> p . x ) , diffs [ 0 ] . q . y = y1"		816457	0					
ANR	816703	AssignmentExpression	"diffs [ 0 ] . q . x = min ( x1 , inner -> p . x )"		816457	0		=			
ANR	816704	MemberAccess	diffs [ 0 ] . q . x		816457	0					
ANR	816705	MemberAccess	diffs [ 0 ] . q		816457	0					
ANR	816706	ArrayIndexing	diffs [ 0 ]		816457	0					
ANR	816707	Identifier	diffs		816457	0					
ANR	816708	PrimaryExpression	0		816457	1					
ANR	816709	Identifier	q		816457	1					
ANR	816710	Identifier	x		816457	1					
ANR	816711	CallExpression	"min ( x1 , inner -> p . x )"		816457	1					
ANR	816712	Callee	min		816457	0					
ANR	816713	Identifier	min		816457	0					
ANR	816714	ArgumentList	x1		816457	1					
ANR	816715	Argument	x1		816457	0					
ANR	816716	Identifier	x1		816457	0					
ANR	816717	Argument	inner -> p . x		816457	1					
ANR	816718	MemberAccess	inner -> p . x		816457	0					
ANR	816719	PtrMemberAccess	inner -> p		816457	0					
ANR	816720	Identifier	inner		816457	0					
ANR	816721	Identifier	p		816457	1					
ANR	816722	Identifier	x		816457	1					
ANR	816723	AssignmentExpression	diffs [ 0 ] . q . y = y1		816457	1		=			
ANR	816724	MemberAccess	diffs [ 0 ] . q . y		816457	0					
ANR	816725	MemberAccess	diffs [ 0 ] . q		816457	0					
ANR	816726	ArrayIndexing	diffs [ 0 ]		816457	0					
ANR	816727	Identifier	diffs		816457	0					
ANR	816728	PrimaryExpression	0		816457	1					
ANR	816729	Identifier	q		816457	1					
ANR	816730	Identifier	y		816457	1					
ANR	816731	Identifier	y1		816457	1					
ANR	816732	ExpressionStatement	outer -> p . x = x0 = diffs [ count ] . q . x	282:8:8412:8446	816457	2	True				
ANR	816733	AssignmentExpression	outer -> p . x = x0 = diffs [ count ] . q . x		816457	0		=			
ANR	816734	MemberAccess	outer -> p . x		816457	0					
ANR	816735	PtrMemberAccess	outer -> p		816457	0					
ANR	816736	Identifier	outer		816457	0					
ANR	816737	Identifier	p		816457	1					
ANR	816738	Identifier	x		816457	1					
ANR	816739	AssignmentExpression	x0 = diffs [ count ] . q . x		816457	1		=			
ANR	816740	Identifier	x0		816457	0					
ANR	816741	MemberAccess	diffs [ count ] . q . x		816457	1					
ANR	816742	MemberAccess	diffs [ count ] . q		816457	0					
ANR	816743	ArrayIndexing	diffs [ count ]		816457	0					
ANR	816744	Identifier	diffs		816457	0					
ANR	816745	Identifier	count		816457	1					
ANR	816746	Identifier	q		816457	1					
ANR	816747	Identifier	x		816457	1					
ANR	816748	ExpressionStatement	++ count	283:8:8456:8463	816457	3	True				
ANR	816749	UnaryExpression	++ count		816457	0					
ANR	816750	IncDec	++		816457	0					
ANR	816751	Identifier	count		816457	1					
ANR	816752	IfStatement	if ( x1 > inner -> q . x )		816457	6					
ANR	816753	Condition	x1 > inner -> q . x	285:8:8479:8493	816457	0	True				
ANR	816754	RelationalExpression	x1 > inner -> q . x		816457	0		>			
ANR	816755	Identifier	x1		816457	0					
ANR	816756	MemberAccess	inner -> q . x		816457	1					
ANR	816757	PtrMemberAccess	inner -> q		816457	0					
ANR	816758	Identifier	inner		816457	0					
ANR	816759	Identifier	q		816457	1					
ANR	816760	Identifier	x		816457	1					
ANR	816761	CompoundStatement		24:25:751:751	816457	1					
ANR	816762	ExpressionStatement	"diffs [ count ] . p . x = max ( x0 , inner -> q . x ) , diffs [ count ] . p . y = y0"	286:8:8506:8567	816457	0	True				
ANR	816763	Expression	"diffs [ count ] . p . x = max ( x0 , inner -> q . x ) , diffs [ count ] . p . y = y0"		816457	0					
ANR	816764	AssignmentExpression	"diffs [ count ] . p . x = max ( x0 , inner -> q . x )"		816457	0		=			
ANR	816765	MemberAccess	diffs [ count ] . p . x		816457	0					
ANR	816766	MemberAccess	diffs [ count ] . p		816457	0					
ANR	816767	ArrayIndexing	diffs [ count ]		816457	0					
ANR	816768	Identifier	diffs		816457	0					
ANR	816769	Identifier	count		816457	1					
ANR	816770	Identifier	p		816457	1					
ANR	816771	Identifier	x		816457	1					
ANR	816772	CallExpression	"max ( x0 , inner -> q . x )"		816457	1					
ANR	816773	Callee	max		816457	0					
ANR	816774	Identifier	max		816457	0					
ANR	816775	ArgumentList	x0		816457	1					
ANR	816776	Argument	x0		816457	0					
ANR	816777	Identifier	x0		816457	0					
ANR	816778	Argument	inner -> q . x		816457	1					
ANR	816779	MemberAccess	inner -> q . x		816457	0					
ANR	816780	PtrMemberAccess	inner -> q		816457	0					
ANR	816781	Identifier	inner		816457	0					
ANR	816782	Identifier	q		816457	1					
ANR	816783	Identifier	x		816457	1					
ANR	816784	AssignmentExpression	diffs [ count ] . p . y = y0		816457	1		=			
ANR	816785	MemberAccess	diffs [ count ] . p . y		816457	0					
ANR	816786	MemberAccess	diffs [ count ] . p		816457	0					
ANR	816787	ArrayIndexing	diffs [ count ]		816457	0					
ANR	816788	Identifier	diffs		816457	0					
ANR	816789	Identifier	count		816457	1					
ANR	816790	Identifier	p		816457	1					
ANR	816791	Identifier	y		816457	1					
ANR	816792	Identifier	y0		816457	1					
ANR	816793	ExpressionStatement	"diffs [ count ] . q . x = x1 , diffs [ count ] . q . y = y1"	287:8:8577:8621	816457	1	True				
ANR	816794	Expression	"diffs [ count ] . q . x = x1 , diffs [ count ] . q . y = y1"		816457	0					
ANR	816795	AssignmentExpression	diffs [ count ] . q . x = x1		816457	0		=			
ANR	816796	MemberAccess	diffs [ count ] . q . x		816457	0					
ANR	816797	MemberAccess	diffs [ count ] . q		816457	0					
ANR	816798	ArrayIndexing	diffs [ count ]		816457	0					
ANR	816799	Identifier	diffs		816457	0					
ANR	816800	Identifier	count		816457	1					
ANR	816801	Identifier	q		816457	1					
ANR	816802	Identifier	x		816457	1					
ANR	816803	Identifier	x1		816457	1					
ANR	816804	AssignmentExpression	diffs [ count ] . q . y = y1		816457	1		=			
ANR	816805	MemberAccess	diffs [ count ] . q . y		816457	0					
ANR	816806	MemberAccess	diffs [ count ] . q		816457	0					
ANR	816807	ArrayIndexing	diffs [ count ]		816457	0					
ANR	816808	Identifier	diffs		816457	0					
ANR	816809	Identifier	count		816457	1					
ANR	816810	Identifier	q		816457	1					
ANR	816811	Identifier	y		816457	1					
ANR	816812	Identifier	y1		816457	1					
ANR	816813	ExpressionStatement	outer -> q . x = x1 = diffs [ count ] . p . x	288:8:8631:8665	816457	2	True				
ANR	816814	AssignmentExpression	outer -> q . x = x1 = diffs [ count ] . p . x		816457	0		=			
ANR	816815	MemberAccess	outer -> q . x		816457	0					
ANR	816816	PtrMemberAccess	outer -> q		816457	0					
ANR	816817	Identifier	outer		816457	0					
ANR	816818	Identifier	q		816457	1					
ANR	816819	Identifier	x		816457	1					
ANR	816820	AssignmentExpression	x1 = diffs [ count ] . p . x		816457	1		=			
ANR	816821	Identifier	x1		816457	0					
ANR	816822	MemberAccess	diffs [ count ] . p . x		816457	1					
ANR	816823	MemberAccess	diffs [ count ] . p		816457	0					
ANR	816824	ArrayIndexing	diffs [ count ]		816457	0					
ANR	816825	Identifier	diffs		816457	0					
ANR	816826	Identifier	count		816457	1					
ANR	816827	Identifier	p		816457	1					
ANR	816828	Identifier	x		816457	1					
ANR	816829	ExpressionStatement	++ count	289:8:8675:8682	816457	3	True				
ANR	816830	UnaryExpression	++ count		816457	0					
ANR	816831	IncDec	++		816457	0					
ANR	816832	Identifier	count		816457	1					
ANR	816833	ReturnStatement	return count ;	291:4:8694:8706	816457	7	True				
ANR	816834	Identifier	count		816457	0					
ANR	816835	ReturnType	int		816457	1					
ANR	816836	Identifier	int_rect_difference		816457	2					
ANR	816837	ParameterList	"gs_int_rect * outer , const gs_int_rect * inner , gs_int_rect * diffs"		816457	3					
ANR	816838	Parameter	gs_int_rect * outer	260:20:7645:7663	816457	0	True				
ANR	816839	ParameterType	gs_int_rect *		816457	0					
ANR	816840	Identifier	outer		816457	1					
ANR	816841	Parameter	const gs_int_rect * inner	260:41:7666:7690	816457	1	True				
ANR	816842	ParameterType	const gs_int_rect *		816457	0					
ANR	816843	Identifier	inner		816457	1					
ANR	816844	Parameter	gs_int_rect * diffs	261:20:7713:7731	816457	2	True				
ANR	816845	ParameterType	gs_int_rect *		816457	0					
ANR	816846	Identifier	diffs		816457	1					
ANR	816847	CFGEntryNode	ENTRY		816457		True				
ANR	816848	CFGExitNode	EXIT		816457		True				
ANR	816849	Symbol	diffs [ 0 ] . q . y		816457						
ANR	816850	Symbol	* diffs		816457						
ANR	816851	Symbol	diffs [ 0 ] . q . x		816457						
ANR	816852	Symbol	* count		816457						
ANR	816853	Symbol	min		816457						
ANR	816854	Symbol	y0		816457						
ANR	816855	Symbol	y1		816457						
ANR	816856	Symbol	outer -> q		816457						
ANR	816857	Symbol	outer -> p		816457						
ANR	816858	Symbol	diffs [ 0 ] . p . y		816457						
ANR	816859	Symbol	diffs [ 0 ] . p . x		816457						
ANR	816860	Symbol	outer -> p . y		816457						
ANR	816861	Symbol	outer -> p . x		816457						
ANR	816862	Symbol	diffs [ count ] . q . x		816457						
ANR	816863	Symbol	inner -> q . x		816457						
ANR	816864	Symbol	inner -> q . y		816457						
ANR	816865	Symbol	diffs [ count ] . q . y		816457						
ANR	816866	Symbol	max		816457						
ANR	816867	Symbol	outer		816457						
ANR	816868	Symbol	count		816457						
ANR	816869	Symbol	outer -> q . y		816457						
ANR	816870	Symbol	inner		816457						
ANR	816871	Symbol	outer -> q . x		816457						
ANR	816872	Symbol	inner -> p . y		816457						
ANR	816873	Symbol	diffs [ count ] . p . y		816457						
ANR	816874	Symbol	inner -> q		816457						
ANR	816875	Symbol	diffs [ count ] . p . x		816457						
ANR	816876	Symbol	inner -> p . x		816457						
ANR	816877	Symbol	diffs [ 0 ] . q		816457						
ANR	816878	Symbol	inner -> p		816457						
ANR	816879	Symbol	diffs [ 0 ] . p		816457						
ANR	816880	Symbol	* outer		816457						
ANR	816881	Symbol	x0		816457						
ANR	816882	Symbol	x1		816457						
ANR	816883	Symbol	diffs [ count ] . q		816457						
ANR	816884	Symbol	diffs		816457						
ANR	816885	Symbol	* inner		816457						
ANR	816886	Symbol	diffs [ count ] . p		816457						
