command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10211231	File	data/converged/CVE-2018-16863_ghostpdl/tiff_port_strtoul.c								
ANR	10211232	DeclStmt									
ANR	10211233	Decl							char	char [ ]	sccsid
ANR	10211234	Function	strtoul	48:0:2047:3216							
ANR	10211235	FunctionDef	"strtoul (const char * nptr , char * * endptr , int base)"		10211234	0					
ANR	10211236	CompoundStatement		50:0:2112:3216	10211234	0					
ANR	10211237	IdentifierDeclStatement	const char * s ;	51:1:2115:2128	10211234	0	True				
ANR	10211238	IdentifierDecl	* s		10211234	0					
ANR	10211239	IdentifierDeclType	const char *		10211234	0					
ANR	10211240	Identifier	s		10211234	1					
ANR	10211241	IdentifierDeclStatement	"unsigned long acc , cutoff ;"	52:1:2131:2156	10211234	1	True				
ANR	10211242	IdentifierDecl	acc		10211234	0					
ANR	10211243	IdentifierDeclType	unsigned long		10211234	0					
ANR	10211244	Identifier	acc		10211234	1					
ANR	10211245	IdentifierDecl	cutoff		10211234	1					
ANR	10211246	IdentifierDeclType	unsigned long		10211234	0					
ANR	10211247	Identifier	cutoff		10211234	1					
ANR	10211248	IdentifierDeclStatement	int c ;	53:1:2159:2164	10211234	2	True				
ANR	10211249	IdentifierDecl	c		10211234	0					
ANR	10211250	IdentifierDeclType	int		10211234	0					
ANR	10211251	Identifier	c		10211234	1					
ANR	10211252	IdentifierDeclStatement	"int neg , any , cutlim ;"	54:1:2167:2187	10211234	3	True				
ANR	10211253	IdentifierDecl	neg		10211234	0					
ANR	10211254	IdentifierDeclType	int		10211234	0					
ANR	10211255	Identifier	neg		10211234	1					
ANR	10211256	IdentifierDecl	any		10211234	1					
ANR	10211257	IdentifierDeclType	int		10211234	0					
ANR	10211258	Identifier	any		10211234	1					
ANR	10211259	IdentifierDecl	cutlim		10211234	2					
ANR	10211260	IdentifierDeclType	int		10211234	0					
ANR	10211261	Identifier	cutlim		10211234	1					
ANR	10211262	ExpressionStatement	s = nptr	59:1:2250:2258	10211234	4	True				
ANR	10211263	AssignmentExpression	s = nptr		10211234	0		=			
ANR	10211264	Identifier	s		10211234	0					
ANR	10211265	Identifier	nptr		10211234	1					
ANR	10211266	DoStatement	do		10211234	5					
ANR	10211267	CompoundStatement		11:4:151:151	10211234	0					
ANR	10211268	ExpressionStatement	c = ( unsigned char ) * s ++	61:2:2268:2292	10211234	0	True				
ANR	10211269	AssignmentExpression	c = ( unsigned char ) * s ++		10211234	0		=			
ANR	10211270	Identifier	c		10211234	0					
ANR	10211271	CastExpression	( unsigned char ) * s ++		10211234	1					
ANR	10211272	CastTarget	unsigned char		10211234	0					
ANR	10211273	UnaryOperationExpression	* s ++		10211234	1					
ANR	10211274	UnaryOperator	*		10211234	0					
ANR	10211275	PostIncDecOperationExpression	s ++		10211234	1					
ANR	10211276	Identifier	s		10211234	0					
ANR	10211277	IncDec	++		10211234	1					
ANR	10211278	Condition	isspace ( c )	62:10:2304:2313	10211234	1	True				
ANR	10211279	CallExpression	isspace ( c )		10211234	0					
ANR	10211280	Callee	isspace		10211234	0					
ANR	10211281	Identifier	isspace		10211234	0					
ANR	10211282	ArgumentList	c		10211234	1					
ANR	10211283	Argument	c		10211234	0					
ANR	10211284	Identifier	c		10211234	0					
ANR	10211285	IfStatement	if ( c == '-' )		10211234	6					
ANR	10211286	Condition	c == '-'	63:5:2322:2329	10211234	0	True				
ANR	10211287	EqualityExpression	c == '-'		10211234	0		==			
ANR	10211288	Identifier	c		10211234	0					
ANR	10211289	PrimaryExpression	'-'		10211234	1					
ANR	10211290	CompoundStatement		14:15:219:219	10211234	1					
ANR	10211291	ExpressionStatement	neg = 1	64:2:2336:2343	10211234	0	True				
ANR	10211292	AssignmentExpression	neg = 1		10211234	0		=			
ANR	10211293	Identifier	neg		10211234	0					
ANR	10211294	PrimaryExpression	1		10211234	1					
ANR	10211295	ExpressionStatement	c = * s ++	65:2:2347:2355	10211234	1	True				
ANR	10211296	AssignmentExpression	c = * s ++		10211234	0		=			
ANR	10211297	Identifier	c		10211234	0					
ANR	10211298	UnaryOperationExpression	* s ++		10211234	1					
ANR	10211299	UnaryOperator	*		10211234	0					
ANR	10211300	PostIncDecOperationExpression	s ++		10211234	1					
ANR	10211301	Identifier	s		10211234	0					
ANR	10211302	IncDec	++		10211234	1					
ANR	10211303	ElseStatement	else		10211234	0					
ANR	10211304	CompoundStatement		17:8:252:252	10211234	0					
ANR	10211305	ExpressionStatement	neg = 0	67:2:2369:2376	10211234	0	True				
ANR	10211306	AssignmentExpression	neg = 0		10211234	0		=			
ANR	10211307	Identifier	neg		10211234	0					
ANR	10211308	PrimaryExpression	0		10211234	1					
ANR	10211309	IfStatement	if ( c == '+' )		10211234	1					
ANR	10211310	Condition	c == '+'	68:6:2384:2391	10211234	0	True				
ANR	10211311	EqualityExpression	c == '+'		10211234	0		==			
ANR	10211312	Identifier	c		10211234	0					
ANR	10211313	PrimaryExpression	'+'		10211234	1					
ANR	10211314	ExpressionStatement	c = * s ++	69:3:2397:2405	10211234	1	True				
ANR	10211315	AssignmentExpression	c = * s ++		10211234	0		=			
ANR	10211316	Identifier	c		10211234	0					
ANR	10211317	UnaryOperationExpression	* s ++		10211234	1					
ANR	10211318	UnaryOperator	*		10211234	0					
ANR	10211319	PostIncDecOperationExpression	s ++		10211234	1					
ANR	10211320	Identifier	s		10211234	0					
ANR	10211321	IncDec	++		10211234	1					
ANR	10211322	IfStatement	if ( ( base == 0 || base == 16 ) && c == '0' && ( * s == 'x' || * s == 'X' ) )		10211234	7					
ANR	10211323	Condition	( base == 0 || base == 16 ) && c == '0' && ( * s == 'x' || * s == 'X' )	71:5:2415:2484	10211234	0	True				
ANR	10211324	AndExpression	( base == 0 || base == 16 ) && c == '0' && ( * s == 'x' || * s == 'X' )		10211234	0		&&			
ANR	10211325	OrExpression	base == 0 || base == 16		10211234	0		||			
ANR	10211326	EqualityExpression	base == 0		10211234	0		==			
ANR	10211327	Identifier	base		10211234	0					
ANR	10211328	PrimaryExpression	0		10211234	1					
ANR	10211329	EqualityExpression	base == 16		10211234	1		==			
ANR	10211330	Identifier	base		10211234	0					
ANR	10211331	PrimaryExpression	16		10211234	1					
ANR	10211332	AndExpression	c == '0' && ( * s == 'x' || * s == 'X' )		10211234	1		&&			
ANR	10211333	EqualityExpression	c == '0'		10211234	0		==			
ANR	10211334	Identifier	c		10211234	0					
ANR	10211335	PrimaryExpression	'0'		10211234	1					
ANR	10211336	OrExpression	* s == 'x' || * s == 'X'		10211234	1		||			
ANR	10211337	EqualityExpression	* s == 'x'		10211234	0		==			
ANR	10211338	UnaryOperationExpression	* s		10211234	0					
ANR	10211339	UnaryOperator	*		10211234	0					
ANR	10211340	Identifier	s		10211234	1					
ANR	10211341	PrimaryExpression	'x'		10211234	1					
ANR	10211342	EqualityExpression	* s == 'X'		10211234	1		==			
ANR	10211343	UnaryOperationExpression	* s		10211234	0					
ANR	10211344	UnaryOperator	*		10211234	0					
ANR	10211345	Identifier	s		10211234	1					
ANR	10211346	PrimaryExpression	'X'		10211234	1					
ANR	10211347	CompoundStatement		23:43:374:374	10211234	1					
ANR	10211348	ExpressionStatement	c = s [ 1 ]	73:2:2491:2499	10211234	0	True				
ANR	10211349	AssignmentExpression	c = s [ 1 ]		10211234	0		=			
ANR	10211350	Identifier	c		10211234	0					
ANR	10211351	ArrayIndexing	s [ 1 ]		10211234	1					
ANR	10211352	Identifier	s		10211234	0					
ANR	10211353	PrimaryExpression	1		10211234	1					
ANR	10211354	ExpressionStatement	s += 2	74:2:2503:2509	10211234	1	True				
ANR	10211355	AssignmentExpression	s += 2		10211234	0		+=			
ANR	10211356	Identifier	s		10211234	0					
ANR	10211357	PrimaryExpression	2		10211234	1					
ANR	10211358	ExpressionStatement	base = 16	75:2:2513:2522	10211234	2	True				
ANR	10211359	AssignmentExpression	base = 16		10211234	0		=			
ANR	10211360	Identifier	base		10211234	0					
ANR	10211361	PrimaryExpression	16		10211234	1					
ANR	10211362	IfStatement	if ( base == 0 )		10211234	8					
ANR	10211363	Condition	base == 0	77:5:2532:2540	10211234	0	True				
ANR	10211364	EqualityExpression	base == 0		10211234	0		==			
ANR	10211365	Identifier	base		10211234	0					
ANR	10211366	PrimaryExpression	0		10211234	1					
ANR	10211367	ExpressionStatement	base = c == '0' ? 8 : 10	78:2:2545:2569	10211234	1	True				
ANR	10211368	AssignmentExpression	base = c == '0' ? 8 : 10		10211234	0		=			
ANR	10211369	Identifier	base		10211234	0					
ANR	10211370	ConditionalExpression	c == '0' ? 8 : 10		10211234	1					
ANR	10211371	Condition	c == '0'		10211234	0					
ANR	10211372	EqualityExpression	c == '0'		10211234	0		==			
ANR	10211373	Identifier	c		10211234	0					
ANR	10211374	PrimaryExpression	'0'		10211234	1					
ANR	10211375	PrimaryExpression	8		10211234	1					
ANR	10211376	PrimaryExpression	10		10211234	2					
ANR	10211377	ExpressionStatement	cutoff = ULONG_MAX / ( unsigned long ) base	80:1:2573:2613	10211234	9	True				
ANR	10211378	AssignmentExpression	cutoff = ULONG_MAX / ( unsigned long ) base		10211234	0		=			
ANR	10211379	Identifier	cutoff		10211234	0					
ANR	10211380	MultiplicativeExpression	ULONG_MAX / ( unsigned long ) base		10211234	1		/			
ANR	10211381	Identifier	ULONG_MAX		10211234	0					
ANR	10211382	CastExpression	( unsigned long ) base		10211234	1					
ANR	10211383	CastTarget	unsigned long		10211234	0					
ANR	10211384	Identifier	base		10211234	1					
ANR	10211385	ExpressionStatement	cutlim = ( int ) ( ULONG_MAX % ( unsigned long ) base )	81:1:2616:2663	10211234	10	True				
ANR	10211386	AssignmentExpression	cutlim = ( int ) ( ULONG_MAX % ( unsigned long ) base )		10211234	0		=			
ANR	10211387	Identifier	cutlim		10211234	0					
ANR	10211388	CastExpression	( int ) ( ULONG_MAX % ( unsigned long ) base )		10211234	1					
ANR	10211389	CastTarget	int		10211234	0					
ANR	10211390	MultiplicativeExpression	ULONG_MAX % ( unsigned long ) base		10211234	1		%			
ANR	10211391	Identifier	ULONG_MAX		10211234	0					
ANR	10211392	CastExpression	( unsigned long ) base		10211234	1					
ANR	10211393	CastTarget	unsigned long		10211234	0					
ANR	10211394	Identifier	base		10211234	1					
ANR	10211395	ForStatement	"for ( acc = 0 , any = 0 ; ; c = ( unsigned char ) * s ++ )"		10211234	11					
ANR	10211396	ForInit	"acc = 0 , any = 0 ;"	82:6:2671:2687	10211234	0	True				
ANR	10211397	Expression	"acc = 0 , any = 0"		10211234	0					
ANR	10211398	AssignmentExpression	acc = 0		10211234	0		=			
ANR	10211399	Identifier	acc		10211234	0					
ANR	10211400	PrimaryExpression	0		10211234	1					
ANR	10211401	AssignmentExpression	any = 0		10211234	1		=			
ANR	10211402	Identifier	any		10211234	0					
ANR	10211403	PrimaryExpression	0		10211234	1					
ANR	10211404	AssignmentExpression	c = ( unsigned char ) * s ++	82:25:2690:2713	10211234	1	True	=			
ANR	10211405	Identifier	c		10211234	0					
ANR	10211406	CastExpression	( unsigned char ) * s ++		10211234	1					
ANR	10211407	CastTarget	unsigned char		10211234	0					
ANR	10211408	UnaryOperationExpression	* s ++		10211234	1					
ANR	10211409	UnaryOperator	*		10211234	0					
ANR	10211410	PostIncDecOperationExpression	s ++		10211234	1					
ANR	10211411	Identifier	s		10211234	0					
ANR	10211412	IncDec	++		10211234	1					
ANR	10211413	CompoundStatement		33:51:603:603	10211234	2					
ANR	10211414	IfStatement	if ( isdigit ( c ) )		10211234	0					
ANR	10211415	Condition	isdigit ( c )	83:6:2724:2733	10211234	0	True				
ANR	10211416	CallExpression	isdigit ( c )		10211234	0					
ANR	10211417	Callee	isdigit		10211234	0					
ANR	10211418	Identifier	isdigit		10211234	0					
ANR	10211419	ArgumentList	c		10211234	1					
ANR	10211420	Argument	c		10211234	0					
ANR	10211421	Identifier	c		10211234	0					
ANR	10211422	ExpressionStatement	c -= '0'	84:3:2739:2747	10211234	1	True				
ANR	10211423	AssignmentExpression	c -= '0'		10211234	0		-=			
ANR	10211424	Identifier	c		10211234	0					
ANR	10211425	PrimaryExpression	'0'		10211234	1					
ANR	10211426	ElseStatement	else		10211234	0					
ANR	10211427	IfStatement	if ( isalpha ( c ) )		10211234	0					
ANR	10211428	Condition	isalpha ( c )	85:11:2760:2769	10211234	0	True				
ANR	10211429	CallExpression	isalpha ( c )		10211234	0					
ANR	10211430	Callee	isalpha		10211234	0					
ANR	10211431	Identifier	isalpha		10211234	0					
ANR	10211432	ArgumentList	c		10211234	1					
ANR	10211433	Argument	c		10211234	0					
ANR	10211434	Identifier	c		10211234	0					
ANR	10211435	ExpressionStatement	c -= isupper ( c ) ? 'A' - 10 : 'a' - 10	86:3:2775:2812	10211234	1	True				
ANR	10211436	AssignmentExpression	c -= isupper ( c ) ? 'A' - 10 : 'a' - 10		10211234	0		-=			
ANR	10211437	Identifier	c		10211234	0					
ANR	10211438	ConditionalExpression	isupper ( c ) ? 'A' - 10 : 'a' - 10		10211234	1					
ANR	10211439	Condition	isupper ( c )		10211234	0					
ANR	10211440	CallExpression	isupper ( c )		10211234	0					
ANR	10211441	Callee	isupper		10211234	0					
ANR	10211442	Identifier	isupper		10211234	0					
ANR	10211443	ArgumentList	c		10211234	1					
ANR	10211444	Argument	c		10211234	0					
ANR	10211445	Identifier	c		10211234	0					
ANR	10211446	AdditiveExpression	'A' - 10		10211234	1		-			
ANR	10211447	PrimaryExpression	'A'		10211234	0					
ANR	10211448	PrimaryExpression	10		10211234	1					
ANR	10211449	AdditiveExpression	'a' - 10		10211234	2		-			
ANR	10211450	PrimaryExpression	'a'		10211234	0					
ANR	10211451	PrimaryExpression	10		10211234	1					
ANR	10211452	ElseStatement	else		10211234	0					
ANR	10211453	BreakStatement	break ;	88:3:2824:2829	10211234	0	True				
ANR	10211454	IfStatement	if ( c >= base )		10211234	1					
ANR	10211455	Condition	c >= base	89:6:2837:2845	10211234	0	True				
ANR	10211456	RelationalExpression	c >= base		10211234	0		>=			
ANR	10211457	Identifier	c		10211234	0					
ANR	10211458	Identifier	base		10211234	1					
ANR	10211459	BreakStatement	break ;	90:3:2851:2856	10211234	1	True				
ANR	10211460	IfStatement	if ( any < 0 )		10211234	2					
ANR	10211461	Condition	any < 0	91:6:2864:2870	10211234	0	True				
ANR	10211462	RelationalExpression	any < 0		10211234	0		<			
ANR	10211463	Identifier	any		10211234	0					
ANR	10211464	PrimaryExpression	0		10211234	1					
ANR	10211465	ContinueStatement	continue ;	92:3:2876:2884	10211234	1	True				
ANR	10211466	IfStatement	if ( acc > cutoff || ( acc == cutoff && c > cutlim ) )		10211234	3					
ANR	10211467	Condition	acc > cutoff || ( acc == cutoff && c > cutlim )	93:6:2892:2936	10211234	0	True				
ANR	10211468	OrExpression	acc > cutoff || ( acc == cutoff && c > cutlim )		10211234	0		||			
ANR	10211469	RelationalExpression	acc > cutoff		10211234	0		>			
ANR	10211470	Identifier	acc		10211234	0					
ANR	10211471	Identifier	cutoff		10211234	1					
ANR	10211472	AndExpression	acc == cutoff && c > cutlim		10211234	1		&&			
ANR	10211473	EqualityExpression	acc == cutoff		10211234	0		==			
ANR	10211474	Identifier	acc		10211234	0					
ANR	10211475	Identifier	cutoff		10211234	1					
ANR	10211476	RelationalExpression	c > cutlim		10211234	1		>			
ANR	10211477	Identifier	c		10211234	0					
ANR	10211478	Identifier	cutlim		10211234	1					
ANR	10211479	CompoundStatement		44:53:826:826	10211234	1					
ANR	10211480	ExpressionStatement	any = - 1	94:3:2944:2952	10211234	0	True				
ANR	10211481	AssignmentExpression	any = - 1		10211234	0		=			
ANR	10211482	Identifier	any		10211234	0					
ANR	10211483	UnaryOperationExpression	- 1		10211234	1					
ANR	10211484	UnaryOperator	-		10211234	0					
ANR	10211485	PrimaryExpression	1		10211234	1					
ANR	10211486	ExpressionStatement	acc = ULONG_MAX	95:3:2957:2972	10211234	1	True				
ANR	10211487	AssignmentExpression	acc = ULONG_MAX		10211234	0		=			
ANR	10211488	Identifier	acc		10211234	0					
ANR	10211489	Identifier	ULONG_MAX		10211234	1					
ANR	10211490	ExpressionStatement	errno = ERANGE	96:3:2977:2991	10211234	2	True				
ANR	10211491	AssignmentExpression	errno = ERANGE		10211234	0		=			
ANR	10211492	Identifier	errno		10211234	0					
ANR	10211493	Identifier	ERANGE		10211234	1					
ANR	10211494	ElseStatement	else		10211234	0					
ANR	10211495	CompoundStatement		48:9:889:889	10211234	0					
ANR	10211496	ExpressionStatement	any = 1	98:3:3007:3014	10211234	0	True				
ANR	10211497	AssignmentExpression	any = 1		10211234	0		=			
ANR	10211498	Identifier	any		10211234	0					
ANR	10211499	PrimaryExpression	1		10211234	1					
ANR	10211500	ExpressionStatement	acc *= ( unsigned long ) base	99:3:3019:3045	10211234	1	True				
ANR	10211501	AssignmentExpression	acc *= ( unsigned long ) base		10211234	0		*=			
ANR	10211502	Identifier	acc		10211234	0					
ANR	10211503	CastExpression	( unsigned long ) base		10211234	1					
ANR	10211504	CastTarget	unsigned long		10211234	0					
ANR	10211505	Identifier	base		10211234	1					
ANR	10211506	ExpressionStatement	acc += c	100:3:3050:3058	10211234	2	True				
ANR	10211507	AssignmentExpression	acc += c		10211234	0		+=			
ANR	10211508	Identifier	acc		10211234	0					
ANR	10211509	Identifier	c		10211234	1					
ANR	10211510	IfStatement	if ( neg && any > 0 )		10211234	12					
ANR	10211511	Condition	neg && any > 0	103:5:3072:3085	10211234	0	True				
ANR	10211512	AndExpression	neg && any > 0		10211234	0		&&			
ANR	10211513	Identifier	neg		10211234	0					
ANR	10211514	RelationalExpression	any > 0		10211234	1		>			
ANR	10211515	Identifier	any		10211234	0					
ANR	10211516	PrimaryExpression	0		10211234	1					
ANR	10211517	ExpressionStatement	acc = - acc	104:2:3090:3100	10211234	1	True				
ANR	10211518	AssignmentExpression	acc = - acc		10211234	0		=			
ANR	10211519	Identifier	acc		10211234	0					
ANR	10211520	UnaryOperationExpression	- acc		10211234	1					
ANR	10211521	UnaryOperator	-		10211234	0					
ANR	10211522	Identifier	acc		10211234	1					
ANR	10211523	IfStatement	if ( endptr != 0 )		10211234	13					
ANR	10211524	Condition	endptr != 0	105:5:3107:3117	10211234	0	True				
ANR	10211525	EqualityExpression	endptr != 0		10211234	0		!=			
ANR	10211526	Identifier	endptr		10211234	0					
ANR	10211527	PrimaryExpression	0		10211234	1					
ANR	10211528	ExpressionStatement	* endptr = ( char * ) ( any ? s - 1 : nptr )	107:2:3161:3199	10211234	1	True				
ANR	10211529	AssignmentExpression	* endptr = ( char * ) ( any ? s - 1 : nptr )		10211234	0		=			
ANR	10211530	UnaryOperationExpression	* endptr		10211234	0					
ANR	10211531	UnaryOperator	*		10211234	0					
ANR	10211532	Identifier	endptr		10211234	1					
ANR	10211533	CastExpression	( char * ) ( any ? s - 1 : nptr )		10211234	1					
ANR	10211534	CastTarget	char *		10211234	0					
ANR	10211535	ConditionalExpression	any ? s - 1 : nptr		10211234	1					
ANR	10211536	Condition	any		10211234	0					
ANR	10211537	Identifier	any		10211234	0					
ANR	10211538	AdditiveExpression	s - 1		10211234	1		-			
ANR	10211539	Identifier	s		10211234	0					
ANR	10211540	PrimaryExpression	1		10211234	1					
ANR	10211541	Identifier	nptr		10211234	2					
ANR	10211542	ReturnStatement	return ( acc ) ;	108:1:3202:3214	10211234	14	True				
ANR	10211543	Identifier	acc		10211234	0					
ANR	10211544	ReturnType	unsigned long		10211234	1					
ANR	10211545	Identifier	strtoul		10211234	2					
ANR	10211546	ParameterList	"const char * nptr , char * * endptr , int base"		10211234	3					
ANR	10211547	Parameter	const char * nptr	49:8:2069:2084	10211234	0	True				
ANR	10211548	ParameterType	const char *		10211234	0					
ANR	10211549	Identifier	nptr		10211234	1					
ANR	10211550	Parameter	char * * endptr	49:26:2087:2099	10211234	1	True				
ANR	10211551	ParameterType	char * *		10211234	0					
ANR	10211552	Identifier	endptr		10211234	1					
ANR	10211553	Parameter	int base	49:41:2102:2109	10211234	2	True				
ANR	10211554	ParameterType	int		10211234	0					
ANR	10211555	Identifier	base		10211234	1					
ANR	10211556	CFGEntryNode	ENTRY		10211234		True				
ANR	10211557	CFGExitNode	EXIT		10211234		True				
ANR	10211558	InfiniteForNode	true		10211234		True				
ANR	10211559	Symbol	acc		10211234						
ANR	10211560	Symbol	* s ++		10211234						
ANR	10211561	Symbol	isalpha		10211234						
ANR	10211562	Symbol	errno		10211234						
ANR	10211563	Symbol	c		10211234						
ANR	10211564	Symbol	endptr		10211234						
ANR	10211565	Symbol	* endptr		10211234						
ANR	10211566	Symbol	isspace		10211234						
ANR	10211567	Symbol	isupper		10211234						
ANR	10211568	Symbol	any		10211234						
ANR	10211569	Symbol	neg		10211234						
ANR	10211570	Symbol	nptr		10211234						
ANR	10211571	Symbol	s		10211234						
ANR	10211572	Symbol	cutlim		10211234						
ANR	10211573	Symbol	ERANGE		10211234						
ANR	10211574	Symbol	cutoff		10211234						
ANR	10211575	Symbol	ULONG_MAX		10211234						
ANR	10211576	Symbol	* s		10211234						
ANR	10211577	Symbol	isdigit		10211234						
ANR	10211578	Symbol	base		10211234						
