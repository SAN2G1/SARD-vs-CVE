command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8065576	File	data/converged/CVE-2018-16863_ghostpdl/pcl_pcl_pcommand.c								
ANR	8065577	Function	int_value	36:0:1012:1110							
ANR	8065578	FunctionDef	int_value (const pcl_value_t * pv)		8065577	0					
ANR	8065579	CompoundStatement		38:0:1050:1110	8065577	0					
ANR	8065580	ReturnStatement	return ( int ) ( value_is_neg ( pv ) ? - ( int ) pv -> i : pv -> i ) ;	39:4:1056:1108	8065577	0	True				
ANR	8065581	CastExpression	( int ) ( value_is_neg ( pv ) ? - ( int ) pv -> i : pv -> i )		8065577	0					
ANR	8065582	CastTarget	int		8065577	0					
ANR	8065583	ConditionalExpression	value_is_neg ( pv ) ? - ( int ) pv -> i : pv -> i		8065577	1					
ANR	8065584	Condition	value_is_neg ( pv )		8065577	0					
ANR	8065585	CallExpression	value_is_neg ( pv )		8065577	0					
ANR	8065586	Callee	value_is_neg		8065577	0					
ANR	8065587	Identifier	value_is_neg		8065577	0					
ANR	8065588	ArgumentList	pv		8065577	1					
ANR	8065589	Argument	pv		8065577	0					
ANR	8065590	Identifier	pv		8065577	0					
ANR	8065591	UnaryOperationExpression	- ( int ) pv -> i		8065577	1					
ANR	8065592	UnaryOperator	-		8065577	0					
ANR	8065593	CastExpression	( int ) pv -> i		8065577	1					
ANR	8065594	CastTarget	int		8065577	0					
ANR	8065595	PtrMemberAccess	pv -> i		8065577	1					
ANR	8065596	Identifier	pv		8065577	0					
ANR	8065597	Identifier	i		8065577	1					
ANR	8065598	PtrMemberAccess	pv -> i		8065577	2					
ANR	8065599	Identifier	pv		8065577	0					
ANR	8065600	Identifier	i		8065577	1					
ANR	8065601	ReturnType	int		8065577	1					
ANR	8065602	Identifier	int_value		8065577	2					
ANR	8065603	ParameterList	const pcl_value_t * pv		8065577	3					
ANR	8065604	Parameter	const pcl_value_t * pv	37:10:1026:1047	8065577	0	True				
ANR	8065605	ParameterType	const pcl_value_t *		8065577	0					
ANR	8065606	Identifier	pv		8065577	1					
ANR	8065607	CFGEntryNode	ENTRY		8065577		True				
ANR	8065608	CFGExitNode	EXIT		8065577		True				
ANR	8065609	Symbol	pv		8065577						
ANR	8065610	Symbol	value_is_neg		8065577						
ANR	8065611	Symbol	pv -> i		8065577						
ANR	8065612	Symbol	* pv		8065577						
ANR	8065613	Function	uint_value	42:0:1113:1173							
ANR	8065614	FunctionDef	uint_value (const pcl_value_t * pv)		8065613	0					
ANR	8065615	CompoundStatement		44:0:1153:1173	8065613	0					
ANR	8065616	ReturnStatement	return pv -> i ;	45:4:1159:1171	8065613	0	True				
ANR	8065617	PtrMemberAccess	pv -> i		8065613	0					
ANR	8065618	Identifier	pv		8065613	0					
ANR	8065619	Identifier	i		8065613	1					
ANR	8065620	ReturnType	uint		8065613	1					
ANR	8065621	Identifier	uint_value		8065613	2					
ANR	8065622	ParameterList	const pcl_value_t * pv		8065613	3					
ANR	8065623	Parameter	const pcl_value_t * pv	43:11:1129:1150	8065613	0	True				
ANR	8065624	ParameterType	const pcl_value_t *		8065613	0					
ANR	8065625	Identifier	pv		8065613	1					
ANR	8065626	CFGEntryNode	ENTRY		8065613		True				
ANR	8065627	CFGExitNode	EXIT		8065613		True				
ANR	8065628	Symbol	pv		8065613						
ANR	8065629	Symbol	pv -> i		8065613						
ANR	8065630	Symbol	* pv		8065613						
ANR	8065631	Function	float_value	48:0:1176:1400							
ANR	8065632	FunctionDef	float_value (const pcl_value_t * pv)		8065631	0					
ANR	8065633	CompoundStatement		50:0:1218:1400	8065631	0					
ANR	8065634	ReturnStatement	return ( value_is_float ( pv ) ? ( float ) ( value_is_neg ( pv ) ? - ( int ) pv -> i - pv -> fraction : pv -> i + pv -> fraction ) : ( float ) int_value ( pv ) ) ;	51:4:1224:1398	8065631	0	True				
ANR	8065635	ConditionalExpression	value_is_float ( pv ) ? ( float ) ( value_is_neg ( pv ) ? - ( int ) pv -> i - pv -> fraction : pv -> i + pv -> fraction ) : ( float ) int_value ( pv )		8065631	0					
ANR	8065636	Condition	value_is_float ( pv )		8065631	0					
ANR	8065637	CallExpression	value_is_float ( pv )		8065631	0					
ANR	8065638	Callee	value_is_float		8065631	0					
ANR	8065639	Identifier	value_is_float		8065631	0					
ANR	8065640	ArgumentList	pv		8065631	1					
ANR	8065641	Argument	pv		8065631	0					
ANR	8065642	Identifier	pv		8065631	0					
ANR	8065643	CastExpression	( float ) ( value_is_neg ( pv ) ? - ( int ) pv -> i - pv -> fraction : pv -> i + pv -> fraction )		8065631	1					
ANR	8065644	CastTarget	float		8065631	0					
ANR	8065645	ConditionalExpression	value_is_neg ( pv ) ? - ( int ) pv -> i - pv -> fraction : pv -> i + pv -> fraction		8065631	1					
ANR	8065646	Condition	value_is_neg ( pv )		8065631	0					
ANR	8065647	CallExpression	value_is_neg ( pv )		8065631	0					
ANR	8065648	Callee	value_is_neg		8065631	0					
ANR	8065649	Identifier	value_is_neg		8065631	0					
ANR	8065650	ArgumentList	pv		8065631	1					
ANR	8065651	Argument	pv		8065631	0					
ANR	8065652	Identifier	pv		8065631	0					
ANR	8065653	AdditiveExpression	- ( int ) pv -> i - pv -> fraction		8065631	1		-			
ANR	8065654	UnaryOperationExpression	- ( int ) pv -> i		8065631	0					
ANR	8065655	UnaryOperator	-		8065631	0					
ANR	8065656	CastExpression	( int ) pv -> i		8065631	1					
ANR	8065657	CastTarget	int		8065631	0					
ANR	8065658	PtrMemberAccess	pv -> i		8065631	1					
ANR	8065659	Identifier	pv		8065631	0					
ANR	8065660	Identifier	i		8065631	1					
ANR	8065661	PtrMemberAccess	pv -> fraction		8065631	1					
ANR	8065662	Identifier	pv		8065631	0					
ANR	8065663	Identifier	fraction		8065631	1					
ANR	8065664	AdditiveExpression	pv -> i + pv -> fraction		8065631	2		+			
ANR	8065665	PtrMemberAccess	pv -> i		8065631	0					
ANR	8065666	Identifier	pv		8065631	0					
ANR	8065667	Identifier	i		8065631	1					
ANR	8065668	PtrMemberAccess	pv -> fraction		8065631	1					
ANR	8065669	Identifier	pv		8065631	0					
ANR	8065670	Identifier	fraction		8065631	1					
ANR	8065671	CastExpression	( float ) int_value ( pv )		8065631	2					
ANR	8065672	CastTarget	float		8065631	0					
ANR	8065673	CallExpression	int_value ( pv )		8065631	1					
ANR	8065674	Callee	int_value		8065631	0					
ANR	8065675	Identifier	int_value		8065631	0					
ANR	8065676	ArgumentList	pv		8065631	1					
ANR	8065677	Argument	pv		8065631	0					
ANR	8065678	Identifier	pv		8065631	0					
ANR	8065679	ReturnType	float		8065631	1					
ANR	8065680	Identifier	float_value		8065631	2					
ANR	8065681	ParameterList	const pcl_value_t * pv		8065631	3					
ANR	8065682	Parameter	const pcl_value_t * pv	49:12:1194:1215	8065631	0	True				
ANR	8065683	ParameterType	const pcl_value_t *		8065631	0					
ANR	8065684	Identifier	pv		8065631	1					
ANR	8065685	CFGEntryNode	ENTRY		8065631		True				
ANR	8065686	CFGExitNode	EXIT		8065631		True				
ANR	8065687	Symbol	pv		8065631						
ANR	8065688	Symbol	value_is_neg		8065631						
ANR	8065689	Symbol	pv -> i		8065631						
ANR	8065690	Symbol	pv -> fraction		8065631						
ANR	8065691	Symbol	value_is_float		8065631						
ANR	8065692	Symbol	int_value		8065631						
ANR	8065693	Symbol	* pv		8065631						
ANR	8065694	Function	transfer_param1	60:0:1445:1691							
ANR	8065695	FunctionDef	"transfer_param1 (gs_c_param_list * alist , pcl_state_t * pcs)"		8065694	0					
ANR	8065696	CompoundStatement		62:0:1516:1691	8065694	0					
ANR	8065697	ExpressionStatement	gs_c_param_list_read ( alist )	63:4:1522:1549	8065694	0	True				
ANR	8065698	CallExpression	gs_c_param_list_read ( alist )		8065694	0					
ANR	8065699	Callee	gs_c_param_list_read		8065694	0					
ANR	8065700	Identifier	gs_c_param_list_read		8065694	0					
ANR	8065701	ArgumentList	alist		8065694	1					
ANR	8065702	Argument	alist		8065694	0					
ANR	8065703	Identifier	alist		8065694	0					
ANR	8065704	ReturnStatement	"return gs_gstate_putdeviceparams ( pcs -> pgs , gs_currentdevice ( pcs -> pgs ) , ( gs_param_list * ) alist ) ;"	65:4:1556:1689	8065694	1	True				
ANR	8065705	CallExpression	"gs_gstate_putdeviceparams ( pcs -> pgs , gs_currentdevice ( pcs -> pgs ) , ( gs_param_list * ) alist )"		8065694	0					
ANR	8065706	Callee	gs_gstate_putdeviceparams		8065694	0					
ANR	8065707	Identifier	gs_gstate_putdeviceparams		8065694	0					
ANR	8065708	ArgumentList	pcs -> pgs		8065694	1					
ANR	8065709	Argument	pcs -> pgs		8065694	0					
ANR	8065710	PtrMemberAccess	pcs -> pgs		8065694	0					
ANR	8065711	Identifier	pcs		8065694	0					
ANR	8065712	Identifier	pgs		8065694	1					
ANR	8065713	Argument	gs_currentdevice ( pcs -> pgs )		8065694	1					
ANR	8065714	CallExpression	gs_currentdevice ( pcs -> pgs )		8065694	0					
ANR	8065715	Callee	gs_currentdevice		8065694	0					
ANR	8065716	Identifier	gs_currentdevice		8065694	0					
ANR	8065717	ArgumentList	pcs -> pgs		8065694	1					
ANR	8065718	Argument	pcs -> pgs		8065694	0					
ANR	8065719	PtrMemberAccess	pcs -> pgs		8065694	0					
ANR	8065720	Identifier	pcs		8065694	0					
ANR	8065721	Identifier	pgs		8065694	1					
ANR	8065722	Argument	( gs_param_list * ) alist		8065694	2					
ANR	8065723	CastExpression	( gs_param_list * ) alist		8065694	0					
ANR	8065724	CastTarget	gs_param_list *		8065694	0					
ANR	8065725	Identifier	alist		8065694	1					
ANR	8065726	ReturnType	static int		8065694	1					
ANR	8065727	Identifier	transfer_param1		8065694	2					
ANR	8065728	ParameterList	"gs_c_param_list * alist , pcl_state_t * pcs"		8065694	3					
ANR	8065729	Parameter	gs_c_param_list * alist	61:16:1472:1494	8065694	0	True				
ANR	8065730	ParameterType	gs_c_param_list *		8065694	0					
ANR	8065731	Identifier	alist		8065694	1					
ANR	8065732	Parameter	pcl_state_t * pcs	61:41:1497:1513	8065694	1	True				
ANR	8065733	ParameterType	pcl_state_t *		8065694	0					
ANR	8065734	Identifier	pcs		8065694	1					
ANR	8065735	CFGEntryNode	ENTRY		8065694		True				
ANR	8065736	CFGExitNode	EXIT		8065694		True				
ANR	8065737	Symbol	pcs		8065694						
ANR	8065738	Symbol	gs_gstate_putdeviceparams		8065694						
ANR	8065739	Symbol	alist		8065694						
ANR	8065740	Symbol	pcs -> pgs		8065694						
ANR	8065741	Symbol	gs_currentdevice		8065694						
ANR	8065742	Symbol	* pcs		8065694						
ANR	8065743	Function	put_param1_bool	72:0:1729:2076							
ANR	8065744	FunctionDef	"put_param1_bool (pcl_state_t * pcs , gs_param_name pkey , bool value)"		8065743	0					
ANR	8065745	CompoundStatement		74:0:1800:2076	8065743	0					
ANR	8065746	IdentifierDeclStatement	gs_c_param_list list ;	75:4:1806:1826	8065743	0	True				
ANR	8065747	IdentifierDecl	list		8065743	0					
ANR	8065748	IdentifierDeclType	gs_c_param_list		8065743	0					
ANR	8065749	Identifier	list		8065743	1					
ANR	8065750	IdentifierDeclStatement	int code ;	76:4:1832:1840	8065743	1	True				
ANR	8065751	IdentifierDecl	code		8065743	0					
ANR	8065752	IdentifierDeclType	int		8065743	0					
ANR	8065753	Identifier	code		8065743	1					
ANR	8065754	ExpressionStatement	"gs_c_param_list_write ( & list , pcs -> memory )"	78:4:1847:1888	8065743	2	True				
ANR	8065755	CallExpression	"gs_c_param_list_write ( & list , pcs -> memory )"		8065743	0					
ANR	8065756	Callee	gs_c_param_list_write		8065743	0					
ANR	8065757	Identifier	gs_c_param_list_write		8065743	0					
ANR	8065758	ArgumentList	& list		8065743	1					
ANR	8065759	Argument	& list		8065743	0					
ANR	8065760	UnaryOperationExpression	& list		8065743	0					
ANR	8065761	UnaryOperator	&		8065743	0					
ANR	8065762	Identifier	list		8065743	1					
ANR	8065763	Argument	pcs -> memory		8065743	1					
ANR	8065764	PtrMemberAccess	pcs -> memory		8065743	0					
ANR	8065765	Identifier	pcs		8065743	0					
ANR	8065766	Identifier	memory		8065743	1					
ANR	8065767	ExpressionStatement	"code = param_write_bool ( ( gs_param_list * ) & list , pkey , & value )"	79:4:1894:1957	8065743	3	True				
ANR	8065768	AssignmentExpression	"code = param_write_bool ( ( gs_param_list * ) & list , pkey , & value )"		8065743	0		=			
ANR	8065769	Identifier	code		8065743	0					
ANR	8065770	CallExpression	"param_write_bool ( ( gs_param_list * ) & list , pkey , & value )"		8065743	1					
ANR	8065771	Callee	param_write_bool		8065743	0					
ANR	8065772	Identifier	param_write_bool		8065743	0					
ANR	8065773	ArgumentList	( gs_param_list * ) & list		8065743	1					
ANR	8065774	Argument	( gs_param_list * ) & list		8065743	0					
ANR	8065775	CastExpression	( gs_param_list * ) & list		8065743	0					
ANR	8065776	CastTarget	gs_param_list *		8065743	0					
ANR	8065777	UnaryOperationExpression	& list		8065743	1					
ANR	8065778	UnaryOperator	&		8065743	0					
ANR	8065779	Identifier	list		8065743	1					
ANR	8065780	Argument	pkey		8065743	1					
ANR	8065781	Identifier	pkey		8065743	0					
ANR	8065782	Argument	& value		8065743	2					
ANR	8065783	UnaryOperationExpression	& value		8065743	0					
ANR	8065784	UnaryOperator	&		8065743	0					
ANR	8065785	Identifier	value		8065743	1					
ANR	8065786	IfStatement	if ( code >= 0 )		8065743	4					
ANR	8065787	Condition	code >= 0	80:8:1967:1975	8065743	0	True				
ANR	8065788	RelationalExpression	code >= 0		8065743	0		>=			
ANR	8065789	Identifier	code		8065743	0					
ANR	8065790	PrimaryExpression	0		8065743	1					
ANR	8065791	ExpressionStatement	"code = transfer_param1 ( & list , pcs )"	81:8:1986:2020	8065743	1	True				
ANR	8065792	AssignmentExpression	"code = transfer_param1 ( & list , pcs )"		8065743	0		=			
ANR	8065793	Identifier	code		8065743	0					
ANR	8065794	CallExpression	"transfer_param1 ( & list , pcs )"		8065743	1					
ANR	8065795	Callee	transfer_param1		8065743	0					
ANR	8065796	Identifier	transfer_param1		8065743	0					
ANR	8065797	ArgumentList	& list		8065743	1					
ANR	8065798	Argument	& list		8065743	0					
ANR	8065799	UnaryOperationExpression	& list		8065743	0					
ANR	8065800	UnaryOperator	&		8065743	0					
ANR	8065801	Identifier	list		8065743	1					
ANR	8065802	Argument	pcs		8065743	1					
ANR	8065803	Identifier	pcs		8065743	0					
ANR	8065804	ExpressionStatement	gs_c_param_list_release ( & list )	83:4:2027:2057	8065743	5	True				
ANR	8065805	CallExpression	gs_c_param_list_release ( & list )		8065743	0					
ANR	8065806	Callee	gs_c_param_list_release		8065743	0					
ANR	8065807	Identifier	gs_c_param_list_release		8065743	0					
ANR	8065808	ArgumentList	& list		8065743	1					
ANR	8065809	Argument	& list		8065743	0					
ANR	8065810	UnaryOperationExpression	& list		8065743	0					
ANR	8065811	UnaryOperator	&		8065743	0					
ANR	8065812	Identifier	list		8065743	1					
ANR	8065813	ReturnStatement	return code ;	84:4:2063:2074	8065743	6	True				
ANR	8065814	Identifier	code		8065743	0					
ANR	8065815	ReturnType	int		8065743	1					
ANR	8065816	Identifier	put_param1_bool		8065743	2					
ANR	8065817	ParameterList	"pcl_state_t * pcs , gs_param_name pkey , bool value"		8065743	3					
ANR	8065818	Parameter	pcl_state_t * pcs	73:16:1749:1765	8065743	0	True				
ANR	8065819	ParameterType	pcl_state_t *		8065743	0					
ANR	8065820	Identifier	pcs		8065743	1					
ANR	8065821	Parameter	gs_param_name pkey	73:35:1768:1785	8065743	1	True				
ANR	8065822	ParameterType	gs_param_name		8065743	0					
ANR	8065823	Identifier	pkey		8065743	1					
ANR	8065824	Parameter	bool value	73:55:1788:1797	8065743	2	True				
ANR	8065825	ParameterType	bool		8065743	0					
ANR	8065826	Identifier	value		8065743	1					
ANR	8065827	CFGEntryNode	ENTRY		8065743		True				
ANR	8065828	CFGExitNode	EXIT		8065743		True				
ANR	8065829	Symbol	pcs		8065743						
ANR	8065830	Symbol	param_write_bool		8065743						
ANR	8065831	Symbol	transfer_param1		8065743						
ANR	8065832	Symbol	code		8065743						
ANR	8065833	Symbol	& value		8065743						
ANR	8065834	Symbol	& list		8065743						
ANR	8065835	Symbol	* pcs		8065743						
ANR	8065836	Symbol	pcs -> memory		8065743						
ANR	8065837	Symbol	pkey		8065743						
ANR	8065838	Symbol	list		8065743						
ANR	8065839	Symbol	value		8065743						
ANR	8065840	Function	put_param1_float	90:0:2112:2486							
ANR	8065841	FunctionDef	"put_param1_float (pcl_state_t * pcs , gs_param_name pkey , double value)"		8065840	0					
ANR	8065842	CompoundStatement		92:0:2186:2486	8065840	0					
ANR	8065843	IdentifierDeclStatement	gs_c_param_list list ;	93:4:2192:2212	8065840	0	True				
ANR	8065844	IdentifierDecl	list		8065840	0					
ANR	8065845	IdentifierDeclType	gs_c_param_list		8065840	0					
ANR	8065846	Identifier	list		8065840	1					
ANR	8065847	IdentifierDeclStatement	float fval = value ;	94:4:2218:2236	8065840	1	True				
ANR	8065848	IdentifierDecl	fval = value		8065840	0					
ANR	8065849	IdentifierDeclType	float		8065840	0					
ANR	8065850	Identifier	fval		8065840	1					
ANR	8065851	AssignmentExpression	fval = value		8065840	2		=			
ANR	8065852	Identifier	value		8065840	0					
ANR	8065853	Identifier	value		8065840	1					
ANR	8065854	IdentifierDeclStatement	int code ;	95:4:2242:2250	8065840	2	True				
ANR	8065855	IdentifierDecl	code		8065840	0					
ANR	8065856	IdentifierDeclType	int		8065840	0					
ANR	8065857	Identifier	code		8065840	1					
ANR	8065858	ExpressionStatement	"gs_c_param_list_write ( & list , pcs -> memory )"	97:4:2257:2298	8065840	3	True				
ANR	8065859	CallExpression	"gs_c_param_list_write ( & list , pcs -> memory )"		8065840	0					
ANR	8065860	Callee	gs_c_param_list_write		8065840	0					
ANR	8065861	Identifier	gs_c_param_list_write		8065840	0					
ANR	8065862	ArgumentList	& list		8065840	1					
ANR	8065863	Argument	& list		8065840	0					
ANR	8065864	UnaryOperationExpression	& list		8065840	0					
ANR	8065865	UnaryOperator	&		8065840	0					
ANR	8065866	Identifier	list		8065840	1					
ANR	8065867	Argument	pcs -> memory		8065840	1					
ANR	8065868	PtrMemberAccess	pcs -> memory		8065840	0					
ANR	8065869	Identifier	pcs		8065840	0					
ANR	8065870	Identifier	memory		8065840	1					
ANR	8065871	ExpressionStatement	"code = param_write_float ( ( gs_param_list * ) & list , pkey , & fval )"	98:4:2304:2367	8065840	4	True				
ANR	8065872	AssignmentExpression	"code = param_write_float ( ( gs_param_list * ) & list , pkey , & fval )"		8065840	0		=			
ANR	8065873	Identifier	code		8065840	0					
ANR	8065874	CallExpression	"param_write_float ( ( gs_param_list * ) & list , pkey , & fval )"		8065840	1					
ANR	8065875	Callee	param_write_float		8065840	0					
ANR	8065876	Identifier	param_write_float		8065840	0					
ANR	8065877	ArgumentList	( gs_param_list * ) & list		8065840	1					
ANR	8065878	Argument	( gs_param_list * ) & list		8065840	0					
ANR	8065879	CastExpression	( gs_param_list * ) & list		8065840	0					
ANR	8065880	CastTarget	gs_param_list *		8065840	0					
ANR	8065881	UnaryOperationExpression	& list		8065840	1					
ANR	8065882	UnaryOperator	&		8065840	0					
ANR	8065883	Identifier	list		8065840	1					
ANR	8065884	Argument	pkey		8065840	1					
ANR	8065885	Identifier	pkey		8065840	0					
ANR	8065886	Argument	& fval		8065840	2					
ANR	8065887	UnaryOperationExpression	& fval		8065840	0					
ANR	8065888	UnaryOperator	&		8065840	0					
ANR	8065889	Identifier	fval		8065840	1					
ANR	8065890	IfStatement	if ( code >= 0 )		8065840	5					
ANR	8065891	Condition	code >= 0	99:8:2377:2385	8065840	0	True				
ANR	8065892	RelationalExpression	code >= 0		8065840	0		>=			
ANR	8065893	Identifier	code		8065840	0					
ANR	8065894	PrimaryExpression	0		8065840	1					
ANR	8065895	ExpressionStatement	"code = transfer_param1 ( & list , pcs )"	100:8:2396:2430	8065840	1	True				
ANR	8065896	AssignmentExpression	"code = transfer_param1 ( & list , pcs )"		8065840	0		=			
ANR	8065897	Identifier	code		8065840	0					
ANR	8065898	CallExpression	"transfer_param1 ( & list , pcs )"		8065840	1					
ANR	8065899	Callee	transfer_param1		8065840	0					
ANR	8065900	Identifier	transfer_param1		8065840	0					
ANR	8065901	ArgumentList	& list		8065840	1					
ANR	8065902	Argument	& list		8065840	0					
ANR	8065903	UnaryOperationExpression	& list		8065840	0					
ANR	8065904	UnaryOperator	&		8065840	0					
ANR	8065905	Identifier	list		8065840	1					
ANR	8065906	Argument	pcs		8065840	1					
ANR	8065907	Identifier	pcs		8065840	0					
ANR	8065908	ExpressionStatement	gs_c_param_list_release ( & list )	102:4:2437:2467	8065840	6	True				
ANR	8065909	CallExpression	gs_c_param_list_release ( & list )		8065840	0					
ANR	8065910	Callee	gs_c_param_list_release		8065840	0					
ANR	8065911	Identifier	gs_c_param_list_release		8065840	0					
ANR	8065912	ArgumentList	& list		8065840	1					
ANR	8065913	Argument	& list		8065840	0					
ANR	8065914	UnaryOperationExpression	& list		8065840	0					
ANR	8065915	UnaryOperator	&		8065840	0					
ANR	8065916	Identifier	list		8065840	1					
ANR	8065917	ReturnStatement	return code ;	103:4:2473:2484	8065840	7	True				
ANR	8065918	Identifier	code		8065840	0					
ANR	8065919	ReturnType	int		8065840	1					
ANR	8065920	Identifier	put_param1_float		8065840	2					
ANR	8065921	ParameterList	"pcl_state_t * pcs , gs_param_name pkey , double value"		8065840	3					
ANR	8065922	Parameter	pcl_state_t * pcs	91:17:2133:2149	8065840	0	True				
ANR	8065923	ParameterType	pcl_state_t *		8065840	0					
ANR	8065924	Identifier	pcs		8065840	1					
ANR	8065925	Parameter	gs_param_name pkey	91:36:2152:2169	8065840	1	True				
ANR	8065926	ParameterType	gs_param_name		8065840	0					
ANR	8065927	Identifier	pkey		8065840	1					
ANR	8065928	Parameter	double value	91:56:2172:2183	8065840	2	True				
ANR	8065929	ParameterType	double		8065840	0					
ANR	8065930	Identifier	value		8065840	1					
ANR	8065931	CFGEntryNode	ENTRY		8065840		True				
ANR	8065932	CFGExitNode	EXIT		8065840		True				
ANR	8065933	Symbol	param_write_float		8065840						
ANR	8065934	Symbol	pcs		8065840						
ANR	8065935	Symbol	transfer_param1		8065840						
ANR	8065936	Symbol	code		8065840						
ANR	8065937	Symbol	& list		8065840						
ANR	8065938	Symbol	* pcs		8065840						
ANR	8065939	Symbol	pcs -> memory		8065840						
ANR	8065940	Symbol	pkey		8065840						
ANR	8065941	Symbol	fval		8065840						
ANR	8065942	Symbol	list		8065840						
ANR	8065943	Symbol	value		8065840						
ANR	8065944	Symbol	& fval		8065840						
ANR	8065945	Function	put_param1_int	109:0:2525:2869							
ANR	8065946	FunctionDef	"put_param1_int (pcl_state_t * pcs , gs_param_name pkey , int value)"		8065945	0					
ANR	8065947	CompoundStatement		111:0:2594:2869	8065945	0					
ANR	8065948	IdentifierDeclStatement	gs_c_param_list list ;	112:4:2600:2620	8065945	0	True				
ANR	8065949	IdentifierDecl	list		8065945	0					
ANR	8065950	IdentifierDeclType	gs_c_param_list		8065945	0					
ANR	8065951	Identifier	list		8065945	1					
ANR	8065952	IdentifierDeclStatement	int code ;	113:4:2626:2634	8065945	1	True				
ANR	8065953	IdentifierDecl	code		8065945	0					
ANR	8065954	IdentifierDeclType	int		8065945	0					
ANR	8065955	Identifier	code		8065945	1					
ANR	8065956	ExpressionStatement	"gs_c_param_list_write ( & list , pcs -> memory )"	115:4:2641:2682	8065945	2	True				
ANR	8065957	CallExpression	"gs_c_param_list_write ( & list , pcs -> memory )"		8065945	0					
ANR	8065958	Callee	gs_c_param_list_write		8065945	0					
ANR	8065959	Identifier	gs_c_param_list_write		8065945	0					
ANR	8065960	ArgumentList	& list		8065945	1					
ANR	8065961	Argument	& list		8065945	0					
ANR	8065962	UnaryOperationExpression	& list		8065945	0					
ANR	8065963	UnaryOperator	&		8065945	0					
ANR	8065964	Identifier	list		8065945	1					
ANR	8065965	Argument	pcs -> memory		8065945	1					
ANR	8065966	PtrMemberAccess	pcs -> memory		8065945	0					
ANR	8065967	Identifier	pcs		8065945	0					
ANR	8065968	Identifier	memory		8065945	1					
ANR	8065969	ExpressionStatement	"code = param_write_int ( ( gs_param_list * ) & list , pkey , & value )"	116:4:2688:2750	8065945	3	True				
ANR	8065970	AssignmentExpression	"code = param_write_int ( ( gs_param_list * ) & list , pkey , & value )"		8065945	0		=			
ANR	8065971	Identifier	code		8065945	0					
ANR	8065972	CallExpression	"param_write_int ( ( gs_param_list * ) & list , pkey , & value )"		8065945	1					
ANR	8065973	Callee	param_write_int		8065945	0					
ANR	8065974	Identifier	param_write_int		8065945	0					
ANR	8065975	ArgumentList	( gs_param_list * ) & list		8065945	1					
ANR	8065976	Argument	( gs_param_list * ) & list		8065945	0					
ANR	8065977	CastExpression	( gs_param_list * ) & list		8065945	0					
ANR	8065978	CastTarget	gs_param_list *		8065945	0					
ANR	8065979	UnaryOperationExpression	& list		8065945	1					
ANR	8065980	UnaryOperator	&		8065945	0					
ANR	8065981	Identifier	list		8065945	1					
ANR	8065982	Argument	pkey		8065945	1					
ANR	8065983	Identifier	pkey		8065945	0					
ANR	8065984	Argument	& value		8065945	2					
ANR	8065985	UnaryOperationExpression	& value		8065945	0					
ANR	8065986	UnaryOperator	&		8065945	0					
ANR	8065987	Identifier	value		8065945	1					
ANR	8065988	IfStatement	if ( code >= 0 )		8065945	4					
ANR	8065989	Condition	code >= 0	117:8:2760:2768	8065945	0	True				
ANR	8065990	RelationalExpression	code >= 0		8065945	0		>=			
ANR	8065991	Identifier	code		8065945	0					
ANR	8065992	PrimaryExpression	0		8065945	1					
ANR	8065993	ExpressionStatement	"code = transfer_param1 ( & list , pcs )"	118:8:2779:2813	8065945	1	True				
ANR	8065994	AssignmentExpression	"code = transfer_param1 ( & list , pcs )"		8065945	0		=			
ANR	8065995	Identifier	code		8065945	0					
ANR	8065996	CallExpression	"transfer_param1 ( & list , pcs )"		8065945	1					
ANR	8065997	Callee	transfer_param1		8065945	0					
ANR	8065998	Identifier	transfer_param1		8065945	0					
ANR	8065999	ArgumentList	& list		8065945	1					
ANR	8066000	Argument	& list		8065945	0					
ANR	8066001	UnaryOperationExpression	& list		8065945	0					
ANR	8066002	UnaryOperator	&		8065945	0					
ANR	8066003	Identifier	list		8065945	1					
ANR	8066004	Argument	pcs		8065945	1					
ANR	8066005	Identifier	pcs		8065945	0					
ANR	8066006	ExpressionStatement	gs_c_param_list_release ( & list )	120:4:2820:2850	8065945	5	True				
ANR	8066007	CallExpression	gs_c_param_list_release ( & list )		8065945	0					
ANR	8066008	Callee	gs_c_param_list_release		8065945	0					
ANR	8066009	Identifier	gs_c_param_list_release		8065945	0					
ANR	8066010	ArgumentList	& list		8065945	1					
ANR	8066011	Argument	& list		8065945	0					
ANR	8066012	UnaryOperationExpression	& list		8065945	0					
ANR	8066013	UnaryOperator	&		8065945	0					
ANR	8066014	Identifier	list		8065945	1					
ANR	8066015	ReturnStatement	return code ;	121:4:2856:2867	8065945	6	True				
ANR	8066016	Identifier	code		8065945	0					
ANR	8066017	ReturnType	int		8065945	1					
ANR	8066018	Identifier	put_param1_int		8065945	2					
ANR	8066019	ParameterList	"pcl_state_t * pcs , gs_param_name pkey , int value"		8065945	3					
ANR	8066020	Parameter	pcl_state_t * pcs	110:15:2544:2560	8065945	0	True				
ANR	8066021	ParameterType	pcl_state_t *		8065945	0					
ANR	8066022	Identifier	pcs		8065945	1					
ANR	8066023	Parameter	gs_param_name pkey	110:34:2563:2580	8065945	1	True				
ANR	8066024	ParameterType	gs_param_name		8065945	0					
ANR	8066025	Identifier	pkey		8065945	1					
ANR	8066026	Parameter	int value	110:54:2583:2591	8065945	2	True				
ANR	8066027	ParameterType	int		8065945	0					
ANR	8066028	Identifier	value		8065945	1					
ANR	8066029	CFGEntryNode	ENTRY		8065945		True				
ANR	8066030	CFGExitNode	EXIT		8065945		True				
ANR	8066031	Symbol	pcs		8065945						
ANR	8066032	Symbol	transfer_param1		8065945						
ANR	8066033	Symbol	code		8065945						
ANR	8066034	Symbol	& value		8065945						
ANR	8066035	Symbol	& list		8065945						
ANR	8066036	Symbol	* pcs		8065945						
ANR	8066037	Symbol	pcs -> memory		8065945						
ANR	8066038	Symbol	pkey		8065945						
ANR	8066039	Symbol	list		8065945						
ANR	8066040	Symbol	value		8065945						
ANR	8066041	Symbol	param_write_int		8065945						
ANR	8066042	Function	put_param1_float_array	128:0:3000:3490							
ANR	8066043	FunctionDef	"put_param1_float_array (pcl_state_t * pcs , gs_param_name pkey , float pf [ 2 ])"		8066042	0					
ANR	8066044	CompoundStatement		131:0:3084:3490	8066042	0					
ANR	8066045	IdentifierDeclStatement	gs_c_param_list list ;	132:4:3090:3110	8066042	0	True				
ANR	8066046	IdentifierDecl	list		8066042	0					
ANR	8066047	IdentifierDeclType	gs_c_param_list		8066042	0					
ANR	8066048	Identifier	list		8066042	1					
ANR	8066049	IdentifierDeclStatement	gs_param_float_array pf_array ;	133:4:3116:3145	8066042	1	True				
ANR	8066050	IdentifierDecl	pf_array		8066042	0					
ANR	8066051	IdentifierDeclType	gs_param_float_array		8066042	0					
ANR	8066052	Identifier	pf_array		8066042	1					
ANR	8066053	IdentifierDeclStatement	int code = 0 ;	134:4:3151:3163	8066042	2	True				
ANR	8066054	IdentifierDecl	code = 0		8066042	0					
ANR	8066055	IdentifierDeclType	int		8066042	0					
ANR	8066056	Identifier	code		8066042	1					
ANR	8066057	AssignmentExpression	code = 0		8066042	2		=			
ANR	8066058	Identifier	code		8066042	0					
ANR	8066059	PrimaryExpression	0		8066042	1					
ANR	8066060	ExpressionStatement	pf_array . data = pf	136:4:3170:3188	8066042	3	True				
ANR	8066061	AssignmentExpression	pf_array . data = pf		8066042	0		=			
ANR	8066062	MemberAccess	pf_array . data		8066042	0					
ANR	8066063	Identifier	pf_array		8066042	0					
ANR	8066064	Identifier	data		8066042	1					
ANR	8066065	Identifier	pf		8066042	1					
ANR	8066066	ExpressionStatement	pf_array . size = 2	137:4:3194:3211	8066042	4	True				
ANR	8066067	AssignmentExpression	pf_array . size = 2		8066042	0		=			
ANR	8066068	MemberAccess	pf_array . size		8066042	0					
ANR	8066069	Identifier	pf_array		8066042	0					
ANR	8066070	Identifier	size		8066042	1					
ANR	8066071	PrimaryExpression	2		8066042	1					
ANR	8066072	ExpressionStatement	pf_array . persistent = false	138:4:3217:3244	8066042	5	True				
ANR	8066073	AssignmentExpression	pf_array . persistent = false		8066042	0		=			
ANR	8066074	MemberAccess	pf_array . persistent		8066042	0					
ANR	8066075	Identifier	pf_array		8066042	0					
ANR	8066076	Identifier	persistent		8066042	1					
ANR	8066077	Identifier	false		8066042	1					
ANR	8066078	ExpressionStatement	"gs_c_param_list_write ( & list , pcs -> memory )"	140:4:3251:3292	8066042	6	True				
ANR	8066079	CallExpression	"gs_c_param_list_write ( & list , pcs -> memory )"		8066042	0					
ANR	8066080	Callee	gs_c_param_list_write		8066042	0					
ANR	8066081	Identifier	gs_c_param_list_write		8066042	0					
ANR	8066082	ArgumentList	& list		8066042	1					
ANR	8066083	Argument	& list		8066042	0					
ANR	8066084	UnaryOperationExpression	& list		8066042	0					
ANR	8066085	UnaryOperator	&		8066042	0					
ANR	8066086	Identifier	list		8066042	1					
ANR	8066087	Argument	pcs -> memory		8066042	1					
ANR	8066088	PtrMemberAccess	pcs -> memory		8066042	0					
ANR	8066089	Identifier	pcs		8066042	0					
ANR	8066090	Identifier	memory		8066042	1					
ANR	8066091	ExpressionStatement	"code = param_write_float_array ( ( gs_param_list * ) & list , pkey , & pf_array )"	141:4:3298:3371	8066042	7	True				
ANR	8066092	AssignmentExpression	"code = param_write_float_array ( ( gs_param_list * ) & list , pkey , & pf_array )"		8066042	0		=			
ANR	8066093	Identifier	code		8066042	0					
ANR	8066094	CallExpression	"param_write_float_array ( ( gs_param_list * ) & list , pkey , & pf_array )"		8066042	1					
ANR	8066095	Callee	param_write_float_array		8066042	0					
ANR	8066096	Identifier	param_write_float_array		8066042	0					
ANR	8066097	ArgumentList	( gs_param_list * ) & list		8066042	1					
ANR	8066098	Argument	( gs_param_list * ) & list		8066042	0					
ANR	8066099	CastExpression	( gs_param_list * ) & list		8066042	0					
ANR	8066100	CastTarget	gs_param_list *		8066042	0					
ANR	8066101	UnaryOperationExpression	& list		8066042	1					
ANR	8066102	UnaryOperator	&		8066042	0					
ANR	8066103	Identifier	list		8066042	1					
ANR	8066104	Argument	pkey		8066042	1					
ANR	8066105	Identifier	pkey		8066042	0					
ANR	8066106	Argument	& pf_array		8066042	2					
ANR	8066107	UnaryOperationExpression	& pf_array		8066042	0					
ANR	8066108	UnaryOperator	&		8066042	0					
ANR	8066109	Identifier	pf_array		8066042	1					
ANR	8066110	IfStatement	if ( code >= 0 )		8066042	8					
ANR	8066111	Condition	code >= 0	142:8:3381:3389	8066042	0	True				
ANR	8066112	RelationalExpression	code >= 0		8066042	0		>=			
ANR	8066113	Identifier	code		8066042	0					
ANR	8066114	PrimaryExpression	0		8066042	1					
ANR	8066115	ExpressionStatement	"code = transfer_param1 ( & list , pcs )"	143:8:3400:3434	8066042	1	True				
ANR	8066116	AssignmentExpression	"code = transfer_param1 ( & list , pcs )"		8066042	0		=			
ANR	8066117	Identifier	code		8066042	0					
ANR	8066118	CallExpression	"transfer_param1 ( & list , pcs )"		8066042	1					
ANR	8066119	Callee	transfer_param1		8066042	0					
ANR	8066120	Identifier	transfer_param1		8066042	0					
ANR	8066121	ArgumentList	& list		8066042	1					
ANR	8066122	Argument	& list		8066042	0					
ANR	8066123	UnaryOperationExpression	& list		8066042	0					
ANR	8066124	UnaryOperator	&		8066042	0					
ANR	8066125	Identifier	list		8066042	1					
ANR	8066126	Argument	pcs		8066042	1					
ANR	8066127	Identifier	pcs		8066042	0					
ANR	8066128	ExpressionStatement	gs_c_param_list_release ( & list )	145:4:3441:3471	8066042	9	True				
ANR	8066129	CallExpression	gs_c_param_list_release ( & list )		8066042	0					
ANR	8066130	Callee	gs_c_param_list_release		8066042	0					
ANR	8066131	Identifier	gs_c_param_list_release		8066042	0					
ANR	8066132	ArgumentList	& list		8066042	1					
ANR	8066133	Argument	& list		8066042	0					
ANR	8066134	UnaryOperationExpression	& list		8066042	0					
ANR	8066135	UnaryOperator	&		8066042	0					
ANR	8066136	Identifier	list		8066042	1					
ANR	8066137	ReturnStatement	return code ;	146:4:3477:3488	8066042	10	True				
ANR	8066138	Identifier	code		8066042	0					
ANR	8066139	ReturnType	int		8066042	1					
ANR	8066140	Identifier	put_param1_float_array		8066042	2					
ANR	8066141	ParameterList	"pcl_state_t * pcs , gs_param_name pkey , float pf [ 2 ]"		8066042	3					
ANR	8066142	Parameter	pcl_state_t * pcs	129:23:3027:3043	8066042	0	True				
ANR	8066143	ParameterType	pcl_state_t *		8066042	0					
ANR	8066144	Identifier	pcs		8066042	1					
ANR	8066145	Parameter	gs_param_name pkey	129:42:3046:3063	8066042	1	True				
ANR	8066146	ParameterType	gs_param_name		8066042	0					
ANR	8066147	Identifier	pkey		8066042	1					
ANR	8066148	Parameter	float pf [ 2 ]	129:62:3066:3076	8066042	2	True				
ANR	8066149	ParameterType	float [ 2 ]		8066042	0					
ANR	8066150	Identifier	pf		8066042	1					
ANR	8066151	CFGEntryNode	ENTRY		8066042		True				
ANR	8066152	CFGExitNode	EXIT		8066042		True				
ANR	8066153	Symbol	pf_array . data		8066042						
ANR	8066154	Symbol	pcs		8066042						
ANR	8066155	Symbol	code		8066042						
ANR	8066156	Symbol	false		8066042						
ANR	8066157	Symbol	* pcs		8066042						
ANR	8066158	Symbol	list		8066042						
ANR	8066159	Symbol	pf_array . size		8066042						
ANR	8066160	Symbol	transfer_param1		8066042						
ANR	8066161	Symbol	& list		8066042						
ANR	8066162	Symbol	pf		8066042						
ANR	8066163	Symbol	& pf_array		8066042						
ANR	8066164	Symbol	pf_array		8066042						
ANR	8066165	Symbol	pcs -> memory		8066042						
ANR	8066166	Symbol	pkey		8066042						
ANR	8066167	Symbol	param_write_float_array		8066042						
ANR	8066168	Symbol	pf_array . persistent		8066042						
ANR	8066169	Function	put_param1_string	149:0:3493:3927							
ANR	8066170	FunctionDef	"put_param1_string (pcl_state_t * pcs , gs_param_name pkey , const char * str)"		8066169	0					
ANR	8066171	CompoundStatement		151:0:3571:3927	8066169	0					
ANR	8066172	IdentifierDeclStatement	gs_c_param_list list ;	152:4:3577:3597	8066169	0	True				
ANR	8066173	IdentifierDecl	list		8066169	0					
ANR	8066174	IdentifierDeclType	gs_c_param_list		8066169	0					
ANR	8066175	Identifier	list		8066169	1					
ANR	8066176	IdentifierDeclStatement	gs_param_string paramstr ;	153:4:3603:3627	8066169	1	True				
ANR	8066177	IdentifierDecl	paramstr		8066169	0					
ANR	8066178	IdentifierDeclType	gs_param_string		8066169	0					
ANR	8066179	Identifier	paramstr		8066169	1					
ANR	8066180	IdentifierDeclStatement	int code ;	154:4:3633:3641	8066169	2	True				
ANR	8066181	IdentifierDecl	code		8066169	0					
ANR	8066182	IdentifierDeclType	int		8066169	0					
ANR	8066183	Identifier	code		8066169	1					
ANR	8066184	ExpressionStatement	"gs_c_param_list_write ( & list , pcs -> memory )"	156:4:3648:3689	8066169	3	True				
ANR	8066185	CallExpression	"gs_c_param_list_write ( & list , pcs -> memory )"		8066169	0					
ANR	8066186	Callee	gs_c_param_list_write		8066169	0					
ANR	8066187	Identifier	gs_c_param_list_write		8066169	0					
ANR	8066188	ArgumentList	& list		8066169	1					
ANR	8066189	Argument	& list		8066169	0					
ANR	8066190	UnaryOperationExpression	& list		8066169	0					
ANR	8066191	UnaryOperator	&		8066169	0					
ANR	8066192	Identifier	list		8066169	1					
ANR	8066193	Argument	pcs -> memory		8066169	1					
ANR	8066194	PtrMemberAccess	pcs -> memory		8066169	0					
ANR	8066195	Identifier	pcs		8066169	0					
ANR	8066196	Identifier	memory		8066169	1					
ANR	8066197	ExpressionStatement	"param_string_from_string ( paramstr , str )"	157:4:3695:3734	8066169	4	True				
ANR	8066198	CallExpression	"param_string_from_string ( paramstr , str )"		8066169	0					
ANR	8066199	Callee	param_string_from_string		8066169	0					
ANR	8066200	Identifier	param_string_from_string		8066169	0					
ANR	8066201	ArgumentList	paramstr		8066169	1					
ANR	8066202	Argument	paramstr		8066169	0					
ANR	8066203	Identifier	paramstr		8066169	0					
ANR	8066204	Argument	str		8066169	1					
ANR	8066205	Identifier	str		8066169	0					
ANR	8066206	ExpressionStatement	"code = param_write_string ( ( gs_param_list * ) & list , pkey , & paramstr )"	158:4:3740:3808	8066169	5	True				
ANR	8066207	AssignmentExpression	"code = param_write_string ( ( gs_param_list * ) & list , pkey , & paramstr )"		8066169	0		=			
ANR	8066208	Identifier	code		8066169	0					
ANR	8066209	CallExpression	"param_write_string ( ( gs_param_list * ) & list , pkey , & paramstr )"		8066169	1					
ANR	8066210	Callee	param_write_string		8066169	0					
ANR	8066211	Identifier	param_write_string		8066169	0					
ANR	8066212	ArgumentList	( gs_param_list * ) & list		8066169	1					
ANR	8066213	Argument	( gs_param_list * ) & list		8066169	0					
ANR	8066214	CastExpression	( gs_param_list * ) & list		8066169	0					
ANR	8066215	CastTarget	gs_param_list *		8066169	0					
ANR	8066216	UnaryOperationExpression	& list		8066169	1					
ANR	8066217	UnaryOperator	&		8066169	0					
ANR	8066218	Identifier	list		8066169	1					
ANR	8066219	Argument	pkey		8066169	1					
ANR	8066220	Identifier	pkey		8066169	0					
ANR	8066221	Argument	& paramstr		8066169	2					
ANR	8066222	UnaryOperationExpression	& paramstr		8066169	0					
ANR	8066223	UnaryOperator	&		8066169	0					
ANR	8066224	Identifier	paramstr		8066169	1					
ANR	8066225	IfStatement	if ( code >= 0 )		8066169	6					
ANR	8066226	Condition	code >= 0	159:8:3818:3826	8066169	0	True				
ANR	8066227	RelationalExpression	code >= 0		8066169	0		>=			
ANR	8066228	Identifier	code		8066169	0					
ANR	8066229	PrimaryExpression	0		8066169	1					
ANR	8066230	ExpressionStatement	"code = transfer_param1 ( & list , pcs )"	160:8:3837:3871	8066169	1	True				
ANR	8066231	AssignmentExpression	"code = transfer_param1 ( & list , pcs )"		8066169	0		=			
ANR	8066232	Identifier	code		8066169	0					
ANR	8066233	CallExpression	"transfer_param1 ( & list , pcs )"		8066169	1					
ANR	8066234	Callee	transfer_param1		8066169	0					
ANR	8066235	Identifier	transfer_param1		8066169	0					
ANR	8066236	ArgumentList	& list		8066169	1					
ANR	8066237	Argument	& list		8066169	0					
ANR	8066238	UnaryOperationExpression	& list		8066169	0					
ANR	8066239	UnaryOperator	&		8066169	0					
ANR	8066240	Identifier	list		8066169	1					
ANR	8066241	Argument	pcs		8066169	1					
ANR	8066242	Identifier	pcs		8066169	0					
ANR	8066243	ExpressionStatement	gs_c_param_list_release ( & list )	162:4:3878:3908	8066169	7	True				
ANR	8066244	CallExpression	gs_c_param_list_release ( & list )		8066169	0					
ANR	8066245	Callee	gs_c_param_list_release		8066169	0					
ANR	8066246	Identifier	gs_c_param_list_release		8066169	0					
ANR	8066247	ArgumentList	& list		8066169	1					
ANR	8066248	Argument	& list		8066169	0					
ANR	8066249	UnaryOperationExpression	& list		8066169	0					
ANR	8066250	UnaryOperator	&		8066169	0					
ANR	8066251	Identifier	list		8066169	1					
ANR	8066252	ReturnStatement	return code ;	163:4:3914:3925	8066169	8	True				
ANR	8066253	Identifier	code		8066169	0					
ANR	8066254	ReturnType	int		8066169	1					
ANR	8066255	Identifier	put_param1_string		8066169	2					
ANR	8066256	ParameterList	"pcl_state_t * pcs , gs_param_name pkey , const char * str"		8066169	3					
ANR	8066257	Parameter	pcl_state_t * pcs	150:18:3515:3531	8066169	0	True				
ANR	8066258	ParameterType	pcl_state_t *		8066169	0					
ANR	8066259	Identifier	pcs		8066169	1					
ANR	8066260	Parameter	gs_param_name pkey	150:37:3534:3551	8066169	1	True				
ANR	8066261	ParameterType	gs_param_name		8066169	0					
ANR	8066262	Identifier	pkey		8066169	1					
ANR	8066263	Parameter	const char * str	150:57:3554:3568	8066169	2	True				
ANR	8066264	ParameterType	const char *		8066169	0					
ANR	8066265	Identifier	str		8066169	1					
ANR	8066266	CFGEntryNode	ENTRY		8066169		True				
ANR	8066267	CFGExitNode	EXIT		8066169		True				
ANR	8066268	Symbol	str		8066169						
ANR	8066269	Symbol	pcs		8066169						
ANR	8066270	Symbol	transfer_param1		8066169						
ANR	8066271	Symbol	code		8066169						
ANR	8066272	Symbol	& list		8066169						
ANR	8066273	Symbol	paramstr		8066169						
ANR	8066274	Symbol	& paramstr		8066169						
ANR	8066275	Symbol	pcs -> memory		8066169						
ANR	8066276	Symbol	* pcs		8066169						
ANR	8066277	Symbol	pkey		8066169						
ANR	8066278	Symbol	list		8066169						
ANR	8066279	Symbol	param_write_string		8066169						
ANR	8066280	Function	pcl_do_registrations	167:0:3967:4835							
ANR	8066281	FunctionDef	"pcl_do_registrations (pcl_state_t * pcs , pcl_parser_state_t * pst)"		8066280	0					
ANR	8066282	CompoundStatement		169:0:4037:4835	8066280	0					
ANR	8066283	IdentifierDeclStatement	const pcl_init_t * * init ;	170:4:4043:4066	8066280	0	True				
ANR	8066284	IdentifierDecl	* * init		8066280	0					
ANR	8066285	IdentifierDeclType	const pcl_init_t * *		8066280	0					
ANR	8066286	Identifier	init		8066280	1					
ANR	8066287	IdentifierDeclStatement	int code ;	171:4:4072:4080	8066280	1	True				
ANR	8066288	IdentifierDecl	code		8066280	0					
ANR	8066289	IdentifierDeclType	int		8066280	0					
ANR	8066290	Identifier	code		8066280	1					
ANR	8066291	ExpressionStatement	"hpgl_init_command_index ( & pst -> hpgl_parser_state , pcs -> memory )"	174:4:4129:4190	8066280	2	True				
ANR	8066292	CallExpression	"hpgl_init_command_index ( & pst -> hpgl_parser_state , pcs -> memory )"		8066280	0					
ANR	8066293	Callee	hpgl_init_command_index		8066280	0					
ANR	8066294	Identifier	hpgl_init_command_index		8066280	0					
ANR	8066295	ArgumentList	& pst -> hpgl_parser_state		8066280	1					
ANR	8066296	Argument	& pst -> hpgl_parser_state		8066280	0					
ANR	8066297	UnaryOperationExpression	& pst -> hpgl_parser_state		8066280	0					
ANR	8066298	UnaryOperator	&		8066280	0					
ANR	8066299	PtrMemberAccess	pst -> hpgl_parser_state		8066280	1					
ANR	8066300	Identifier	pst		8066280	0					
ANR	8066301	Identifier	hpgl_parser_state		8066280	1					
ANR	8066302	Argument	pcs -> memory		8066280	1					
ANR	8066303	PtrMemberAccess	pcs -> memory		8066280	0					
ANR	8066304	Identifier	pcs		8066280	0					
ANR	8066305	Identifier	memory		8066280	1					
ANR	8066306	ExpressionStatement	pcs -> parse_data = pst -> hpgl_parser_state	175:4:4196:4236	8066280	3	True				
ANR	8066307	AssignmentExpression	pcs -> parse_data = pst -> hpgl_parser_state		8066280	0		=			
ANR	8066308	PtrMemberAccess	pcs -> parse_data		8066280	0					
ANR	8066309	Identifier	pcs		8066280	0					
ANR	8066310	Identifier	parse_data		8066280	1					
ANR	8066311	PtrMemberAccess	pst -> hpgl_parser_state		8066280	1					
ANR	8066312	Identifier	pst		8066280	0					
ANR	8066313	Identifier	hpgl_parser_state		8066280	1					
ANR	8066314	ExpressionStatement	"code = pcl_init_command_index ( pst , pcs )"	177:4:4285:4324	8066280	4	True				
ANR	8066315	AssignmentExpression	"code = pcl_init_command_index ( pst , pcs )"		8066280	0		=			
ANR	8066316	Identifier	code		8066280	0					
ANR	8066317	CallExpression	"pcl_init_command_index ( pst , pcs )"		8066280	1					
ANR	8066318	Callee	pcl_init_command_index		8066280	0					
ANR	8066319	Identifier	pcl_init_command_index		8066280	0					
ANR	8066320	ArgumentList	pst		8066280	1					
ANR	8066321	Argument	pst		8066280	0					
ANR	8066322	Identifier	pst		8066280	0					
ANR	8066323	Argument	pcs		8066280	1					
ANR	8066324	Identifier	pcs		8066280	0					
ANR	8066325	IfStatement	if ( code < 0 )		8066280	5					
ANR	8066326	Condition	code < 0	178:8:4334:4341	8066280	0	True				
ANR	8066327	RelationalExpression	code < 0		8066280	0		<			
ANR	8066328	Identifier	code		8066280	0					
ANR	8066329	PrimaryExpression	0		8066280	1					
ANR	8066330	CompoundStatement		10:18:306:306	8066280	1					
ANR	8066331	IfStatement	if ( pst -> hpgl_parser_state != NULL )		8066280	0					
ANR	8066332	Condition	pst -> hpgl_parser_state != NULL	179:12:4358:4387	8066280	0	True				
ANR	8066333	EqualityExpression	pst -> hpgl_parser_state != NULL		8066280	0		!=			
ANR	8066334	PtrMemberAccess	pst -> hpgl_parser_state		8066280	0					
ANR	8066335	Identifier	pst		8066280	0					
ANR	8066336	Identifier	hpgl_parser_state		8066280	1					
ANR	8066337	Identifier	NULL		8066280	1					
ANR	8066338	ExpressionStatement	"gs_free_object ( pcs -> memory , pst -> hpgl_parser_state , ""hpgl_init_command_index"" )"	180:12:4402:4480	8066280	1	True				
ANR	8066339	CallExpression	"gs_free_object ( pcs -> memory , pst -> hpgl_parser_state , ""hpgl_init_command_index"" )"		8066280	0					
ANR	8066340	Callee	gs_free_object		8066280	0					
ANR	8066341	Identifier	gs_free_object		8066280	0					
ANR	8066342	ArgumentList	pcs -> memory		8066280	1					
ANR	8066343	Argument	pcs -> memory		8066280	0					
ANR	8066344	PtrMemberAccess	pcs -> memory		8066280	0					
ANR	8066345	Identifier	pcs		8066280	0					
ANR	8066346	Identifier	memory		8066280	1					
ANR	8066347	Argument	pst -> hpgl_parser_state		8066280	1					
ANR	8066348	PtrMemberAccess	pst -> hpgl_parser_state		8066280	0					
ANR	8066349	Identifier	pst		8066280	0					
ANR	8066350	Identifier	hpgl_parser_state		8066280	1					
ANR	8066351	Argument	"""hpgl_init_command_index"""		8066280	2					
ANR	8066352	PrimaryExpression	"""hpgl_init_command_index"""		8066280	0					
ANR	8066353	ReturnStatement	return code ;	181:8:4490:4501	8066280	1	True				
ANR	8066354	Identifier	code		8066280	0					
ANR	8066355	ForStatement	for ( init = pcl_init_table ; * init ; ++ init )		8066280	6					
ANR	8066356	ForInit	init = pcl_init_table ;	183:9:4518:4539	8066280	0	True				
ANR	8066357	AssignmentExpression	init = pcl_init_table		8066280	0		=			
ANR	8066358	Identifier	init		8066280	0					
ANR	8066359	Identifier	pcl_init_table		8066280	1					
ANR	8066360	Condition	* init	183:32:4541:4545	8066280	1	True				
ANR	8066361	UnaryOperationExpression	* init		8066280	0					
ANR	8066362	UnaryOperator	*		8066280	0					
ANR	8066363	Identifier	init		8066280	1					
ANR	8066364	UnaryExpression	++ init	183:39:4548:4553	8066280	2	True				
ANR	8066365	IncDec	++		8066280	0					
ANR	8066366	Identifier	init		8066280	1					
ANR	8066367	CompoundStatement		15:47:518:518	8066280	3					
ANR	8066368	IfStatement	if ( ( * init ) -> do_registration )		8066280	0					
ANR	8066369	Condition	( * init ) -> do_registration	184:12:4570:4593	8066280	0	True				
ANR	8066370	PtrMemberAccess	( * init ) -> do_registration		8066280	0					
ANR	8066371	UnaryOperationExpression	* init		8066280	0					
ANR	8066372	UnaryOperator	*		8066280	0					
ANR	8066373	Identifier	init		8066280	1					
ANR	8066374	Identifier	do_registration		8066280	1					
ANR	8066375	CompoundStatement		16:38:558:558	8066280	1					
ANR	8066376	ExpressionStatement	"code = ( * ( * init ) -> do_registration ) ( pst , pcs -> memory )"	185:12:4610:4663	8066280	0	True				
ANR	8066377	AssignmentExpression	"code = ( * ( * init ) -> do_registration ) ( pst , pcs -> memory )"		8066280	0		=			
ANR	8066378	Identifier	code		8066280	0					
ANR	8066379	CallExpression	"( * ( * init ) -> do_registration ) ( pst , pcs -> memory )"		8066280	1					
ANR	8066380	Callee	* ( * init ) -> do_registration		8066280	0					
ANR	8066381	UnaryOperationExpression	* ( * init ) -> do_registration		8066280	0					
ANR	8066382	UnaryOperator	*		8066280	0					
ANR	8066383	PtrMemberAccess	( * init ) -> do_registration		8066280	1					
ANR	8066384	UnaryOperationExpression	* init		8066280	0					
ANR	8066385	UnaryOperator	*		8066280	0					
ANR	8066386	Identifier	init		8066280	1					
ANR	8066387	Identifier	do_registration		8066280	1					
ANR	8066388	ArgumentList	pst		8066280	1					
ANR	8066389	Argument	pst		8066280	0					
ANR	8066390	Identifier	pst		8066280	0					
ANR	8066391	Argument	pcs -> memory		8066280	1					
ANR	8066392	PtrMemberAccess	pcs -> memory		8066280	0					
ANR	8066393	Identifier	pcs		8066280	0					
ANR	8066394	Identifier	memory		8066280	1					
ANR	8066395	IfStatement	if ( code < 0 )		8066280	1					
ANR	8066396	Condition	code < 0	186:16:4681:4688	8066280	0	True				
ANR	8066397	RelationalExpression	code < 0		8066280	0		<			
ANR	8066398	Identifier	code		8066280	0					
ANR	8066399	PrimaryExpression	0		8066280	1					
ANR	8066400	CompoundStatement		18:26:653:653	8066280	1					
ANR	8066401	ExpressionStatement	"lprintf1 ( ""Error %d during initialization!\\n"" , code )"	187:16:4709:4760	8066280	0	True				
ANR	8066402	CallExpression	"lprintf1 ( ""Error %d during initialization!\\n"" , code )"		8066280	0					
ANR	8066403	Callee	lprintf1		8066280	0					
ANR	8066404	Identifier	lprintf1		8066280	0					
ANR	8066405	ArgumentList	"""Error %d during initialization!\\n"""		8066280	1					
ANR	8066406	Argument	"""Error %d during initialization!\\n"""		8066280	0					
ANR	8066407	PrimaryExpression	"""Error %d during initialization!\\n"""		8066280	0					
ANR	8066408	Argument	code		8066280	1					
ANR	8066409	Identifier	code		8066280	0					
ANR	8066410	ReturnStatement	return code ;	188:16:4778:4789	8066280	1	True				
ANR	8066411	Identifier	code		8066280	0					
ANR	8066412	ReturnStatement	return 0 ;	192:4:4825:4833	8066280	7	True				
ANR	8066413	PrimaryExpression	0		8066280	0					
ANR	8066414	ReturnType	int		8066280	1					
ANR	8066415	Identifier	pcl_do_registrations		8066280	2					
ANR	8066416	ParameterList	"pcl_state_t * pcs , pcl_parser_state_t * pst"		8066280	3					
ANR	8066417	Parameter	pcl_state_t * pcs	168:21:3992:4008	8066280	0	True				
ANR	8066418	ParameterType	pcl_state_t *		8066280	0					
ANR	8066419	Identifier	pcs		8066280	1					
ANR	8066420	Parameter	pcl_parser_state_t * pst	168:40:4011:4034	8066280	1	True				
ANR	8066421	ParameterType	pcl_parser_state_t *		8066280	0					
ANR	8066422	Identifier	pst		8066280	1					
ANR	8066423	CFGEntryNode	ENTRY		8066280		True				
ANR	8066424	CFGExitNode	EXIT		8066280		True				
ANR	8066425	Symbol	pcl_init_table		8066280						
ANR	8066426	Symbol	pcs		8066280						
ANR	8066427	Symbol	init		8066280						
ANR	8066428	Symbol	pst -> hpgl_parser_state		8066280						
ANR	8066429	Symbol	* * * init		8066280						
ANR	8066430	Symbol	pcl_init_command_index		8066280						
ANR	8066431	Symbol	* ( * init ) -> do_registration		8066280						
ANR	8066432	Symbol	code		8066280						
ANR	8066433	Symbol	NULL		8066280						
ANR	8066434	Symbol	* * init		8066280						
ANR	8066435	Symbol	pcs -> parse_data		8066280						
ANR	8066436	Symbol	* pcs		8066280						
ANR	8066437	Symbol	( * init ) -> do_registration		8066280						
ANR	8066438	Symbol	pst		8066280						
ANR	8066439	Symbol	& pst -> hpgl_parser_state		8066280						
ANR	8066440	Symbol	* init		8066280						
ANR	8066441	Symbol	pcs -> memory		8066280						
ANR	8066442	Symbol	* pst		8066280						
ANR	8066443	Function	pcl_do_resets	197:0:4886:5161							
ANR	8066444	FunctionDef	"pcl_do_resets (pcl_state_t * pcs , pcl_reset_type_t type)"		8066443	0					
ANR	8066445	CompoundStatement		199:0:4946:5161	8066443	0					
ANR	8066446	IdentifierDeclStatement	const pcl_init_t * * init = pcl_init_table ;	200:4:4952:4992	8066443	0	True				
ANR	8066447	IdentifierDecl	* * init = pcl_init_table		8066443	0					
ANR	8066448	IdentifierDeclType	const pcl_init_t * *		8066443	0					
ANR	8066449	Identifier	init		8066443	1					
ANR	8066450	AssignmentExpression	* * init = pcl_init_table		8066443	2		=			
ANR	8066451	Identifier	pcl_init_table		8066443	0					
ANR	8066452	Identifier	pcl_init_table		8066443	1					
ANR	8066453	IdentifierDeclStatement	int code = 0 ;	201:4:4998:5010	8066443	1	True				
ANR	8066454	IdentifierDecl	code = 0		8066443	0					
ANR	8066455	IdentifierDeclType	int		8066443	0					
ANR	8066456	Identifier	code		8066443	1					
ANR	8066457	AssignmentExpression	code = 0		8066443	2		=			
ANR	8066458	Identifier	code		8066443	0					
ANR	8066459	PrimaryExpression	0		8066443	1					
ANR	8066460	ForStatement	for ( ; * init && code >= 0 ; ++ init )		8066443	2					
ANR	8066461	Condition	* init && code >= 0	203:11:5024:5041	8066443	0	True				
ANR	8066462	AndExpression	* init && code >= 0		8066443	0		&&			
ANR	8066463	UnaryOperationExpression	* init		8066443	0					
ANR	8066464	UnaryOperator	*		8066443	0					
ANR	8066465	Identifier	init		8066443	1					
ANR	8066466	RelationalExpression	code >= 0		8066443	1		>=			
ANR	8066467	Identifier	code		8066443	0					
ANR	8066468	PrimaryExpression	0		8066443	1					
ANR	8066469	UnaryExpression	++ init	203:31:5044:5049	8066443	1	True				
ANR	8066470	IncDec	++		8066443	0					
ANR	8066471	Identifier	init		8066443	1					
ANR	8066472	CompoundStatement		5:39:105:105	8066443	2					
ANR	8066473	IfStatement	if ( ( * init ) -> do_reset )		8066443	0					
ANR	8066474	Condition	( * init ) -> do_reset	204:12:5066:5082	8066443	0	True				
ANR	8066475	PtrMemberAccess	( * init ) -> do_reset		8066443	0					
ANR	8066476	UnaryOperationExpression	* init		8066443	0					
ANR	8066477	UnaryOperator	*		8066443	0					
ANR	8066478	Identifier	init		8066443	1					
ANR	8066479	Identifier	do_reset		8066443	1					
ANR	8066480	ExpressionStatement	"code = ( * ( * init ) -> do_reset ) ( pcs , type )"	205:12:5097:5136	8066443	1	True				
ANR	8066481	AssignmentExpression	"code = ( * ( * init ) -> do_reset ) ( pcs , type )"		8066443	0		=			
ANR	8066482	Identifier	code		8066443	0					
ANR	8066483	CallExpression	"( * ( * init ) -> do_reset ) ( pcs , type )"		8066443	1					
ANR	8066484	Callee	* ( * init ) -> do_reset		8066443	0					
ANR	8066485	UnaryOperationExpression	* ( * init ) -> do_reset		8066443	0					
ANR	8066486	UnaryOperator	*		8066443	0					
ANR	8066487	PtrMemberAccess	( * init ) -> do_reset		8066443	1					
ANR	8066488	UnaryOperationExpression	* init		8066443	0					
ANR	8066489	UnaryOperator	*		8066443	0					
ANR	8066490	Identifier	init		8066443	1					
ANR	8066491	Identifier	do_reset		8066443	1					
ANR	8066492	ArgumentList	pcs		8066443	1					
ANR	8066493	Argument	pcs		8066443	0					
ANR	8066494	Identifier	pcs		8066443	0					
ANR	8066495	Argument	type		8066443	1					
ANR	8066496	Identifier	type		8066443	0					
ANR	8066497	ReturnStatement	return code ;	207:4:5148:5159	8066443	3	True				
ANR	8066498	Identifier	code		8066443	0					
ANR	8066499	ReturnType	int		8066443	1					
ANR	8066500	Identifier	pcl_do_resets		8066443	2					
ANR	8066501	ParameterList	"pcl_state_t * pcs , pcl_reset_type_t type"		8066443	3					
ANR	8066502	Parameter	pcl_state_t * pcs	198:14:4904:4920	8066443	0	True				
ANR	8066503	ParameterType	pcl_state_t *		8066443	0					
ANR	8066504	Identifier	pcs		8066443	1					
ANR	8066505	Parameter	pcl_reset_type_t type	198:33:4923:4943	8066443	1	True				
ANR	8066506	ParameterType	pcl_reset_type_t		8066443	0					
ANR	8066507	Identifier	type		8066443	1					
ANR	8066508	CFGEntryNode	ENTRY		8066443		True				
ANR	8066509	CFGExitNode	EXIT		8066443		True				
ANR	8066510	Symbol	pcl_init_table		8066443						
ANR	8066511	Symbol	pcs		8066443						
ANR	8066512	Symbol	init		8066443						
ANR	8066513	Symbol	( * init ) -> do_reset		8066443						
ANR	8066514	Symbol	* * * init		8066443						
ANR	8066515	Symbol	* ( * init ) -> do_reset		8066443						
ANR	8066516	Symbol	code		8066443						
ANR	8066517	Symbol	* * init		8066443						
ANR	8066518	Symbol	* init		8066443						
ANR	8066519	Symbol	type		8066443						
ANR	8066520	Function	pcl_init_state	217:0:5521:6475							
ANR	8066521	FunctionDef	"pcl_init_state (pcl_state_t * pcs , gs_memory_t * pmem)"		8066520	0					
ANR	8066522	CompoundStatement		219:0:5580:6475	8066520	0					
ANR	8066523	ExpressionStatement	pcs -> memory = pmem	221:4:5619:5637	8066520	0	True				
ANR	8066524	AssignmentExpression	pcs -> memory = pmem		8066520	0		=			
ANR	8066525	PtrMemberAccess	pcs -> memory		8066520	0					
ANR	8066526	Identifier	pcs		8066520	0					
ANR	8066527	Identifier	memory		8066520	1					
ANR	8066528	Identifier	pmem		8066520	1					
ANR	8066529	ExpressionStatement	pcs -> num_copies = 1	222:4:5643:5662	8066520	1	True				
ANR	8066530	AssignmentExpression	pcs -> num_copies = 1		8066520	0		=			
ANR	8066531	PtrMemberAccess	pcs -> num_copies		8066520	0					
ANR	8066532	Identifier	pcs		8066520	0					
ANR	8066533	Identifier	num_copies		8066520	1					
ANR	8066534	PrimaryExpression	1		8066520	1					
ANR	8066535	ExpressionStatement	pcs -> output_bin = 1	223:4:5668:5687	8066520	2	True				
ANR	8066536	AssignmentExpression	pcs -> output_bin = 1		8066520	0		=			
ANR	8066537	PtrMemberAccess	pcs -> output_bin		8066520	0					
ANR	8066538	Identifier	pcs		8066520	0					
ANR	8066539	Identifier	output_bin		8066520	1					
ANR	8066540	PrimaryExpression	1		8066520	1					
ANR	8066541	ExpressionStatement	pcs -> perforation_skip = 1	224:4:5693:5718	8066520	3	True				
ANR	8066542	AssignmentExpression	pcs -> perforation_skip = 1		8066520	0		=			
ANR	8066543	PtrMemberAccess	pcs -> perforation_skip		8066520	0					
ANR	8066544	Identifier	pcs		8066520	0					
ANR	8066545	Identifier	perforation_skip		8066520	1					
ANR	8066546	PrimaryExpression	1		8066520	1					
ANR	8066547	ExpressionStatement	pcs -> font_id_type = numeric_id	226:4:5725:5755	8066520	4	True				
ANR	8066548	AssignmentExpression	pcs -> font_id_type = numeric_id		8066520	0		=			
ANR	8066549	PtrMemberAccess	pcs -> font_id_type		8066520	0					
ANR	8066550	Identifier	pcs		8066520	0					
ANR	8066551	Identifier	font_id_type		8066520	1					
ANR	8066552	Identifier	numeric_id		8066520	1					
ANR	8066553	ExpressionStatement	pcs -> macro_id_type = numeric_id	227:4:5761:5792	8066520	5	True				
ANR	8066554	AssignmentExpression	pcs -> macro_id_type = numeric_id		8066520	0		=			
ANR	8066555	PtrMemberAccess	pcs -> macro_id_type		8066520	0					
ANR	8066556	Identifier	pcs		8066520	0					
ANR	8066557	Identifier	macro_id_type		8066520	1					
ANR	8066558	Identifier	numeric_id		8066520	1					
ANR	8066559	ExpressionStatement	pcs -> rotate_patterns = true	229:4:5799:5826	8066520	6	True				
ANR	8066560	AssignmentExpression	pcs -> rotate_patterns = true		8066520	0		=			
ANR	8066561	PtrMemberAccess	pcs -> rotate_patterns		8066520	0					
ANR	8066562	Identifier	pcs		8066520	0					
ANR	8066563	Identifier	rotate_patterns		8066520	1					
ANR	8066564	Identifier	true		8066520	1					
ANR	8066565	ExpressionStatement	pcs -> source_transparent = true	230:4:5832:5862	8066520	7	True				
ANR	8066566	AssignmentExpression	pcs -> source_transparent = true		8066520	0		=			
ANR	8066567	PtrMemberAccess	pcs -> source_transparent		8066520	0					
ANR	8066568	Identifier	pcs		8066520	0					
ANR	8066569	Identifier	source_transparent		8066520	1					
ANR	8066570	Identifier	true		8066520	1					
ANR	8066571	ExpressionStatement	pcs -> pattern_transparent = true	231:4:5868:5899	8066520	8	True				
ANR	8066572	AssignmentExpression	pcs -> pattern_transparent = true		8066520	0		=			
ANR	8066573	PtrMemberAccess	pcs -> pattern_transparent		8066520	0					
ANR	8066574	Identifier	pcs		8066520	0					
ANR	8066575	Identifier	pattern_transparent		8066520	1					
ANR	8066576	Identifier	true		8066520	1					
ANR	8066577	ExpressionStatement	pcs -> logical_op = 252	233:4:5906:5927	8066520	9	True				
ANR	8066578	AssignmentExpression	pcs -> logical_op = 252		8066520	0		=			
ANR	8066579	PtrMemberAccess	pcs -> logical_op		8066520	0					
ANR	8066580	Identifier	pcs		8066520	0					
ANR	8066581	Identifier	logical_op		8066520	1					
ANR	8066582	PrimaryExpression	252		8066520	1					
ANR	8066583	ExpressionStatement	pcs -> monochrome_mode = 0	235:4:5934:5958	8066520	10	True				
ANR	8066584	AssignmentExpression	pcs -> monochrome_mode = 0		8066520	0		=			
ANR	8066585	PtrMemberAccess	pcs -> monochrome_mode		8066520	0					
ANR	8066586	Identifier	pcs		8066520	0					
ANR	8066587	Identifier	monochrome_mode		8066520	1					
ANR	8066588	PrimaryExpression	0		8066520	1					
ANR	8066589	ExpressionStatement	pcs -> render_mode = 3	236:4:5964:5984	8066520	11	True				
ANR	8066590	AssignmentExpression	pcs -> render_mode = 3		8066520	0		=			
ANR	8066591	PtrMemberAccess	pcs -> render_mode		8066520	0					
ANR	8066592	Identifier	pcs		8066520	0					
ANR	8066593	Identifier	render_mode		8066520	1					
ANR	8066594	PrimaryExpression	3		8066520	1					
ANR	8066595	ExpressionStatement	pcs -> next_id = 8UL	238:4:5991:6009	8066520	12	True				
ANR	8066596	AssignmentExpression	pcs -> next_id = 8UL		8066520	0		=			
ANR	8066597	PtrMemberAccess	pcs -> next_id		8066520	0					
ANR	8066598	Identifier	pcs		8066520	0					
ANR	8066599	Identifier	next_id		8066520	1					
ANR	8066600	PrimaryExpression	8UL		8066520	1					
ANR	8066601	ExpressionStatement	pcl_init_gstate_stk ( pcs )	239:4:6015:6039	8066520	13	True				
ANR	8066602	CallExpression	pcl_init_gstate_stk ( pcs )		8066520	0					
ANR	8066603	Callee	pcl_init_gstate_stk		8066520	0					
ANR	8066604	Identifier	pcl_init_gstate_stk		8066520	0					
ANR	8066605	ArgumentList	pcs		8066520	1					
ANR	8066606	Argument	pcs		8066520	0					
ANR	8066607	Identifier	pcs		8066520	0					
ANR	8066608	ExpressionStatement	pcs -> configure_appletalk = 0	240:4:6045:6073	8066520	14	True				
ANR	8066609	AssignmentExpression	pcs -> configure_appletalk = 0		8066520	0		=			
ANR	8066610	PtrMemberAccess	pcs -> configure_appletalk		8066520	0					
ANR	8066611	Identifier	pcs		8066520	0					
ANR	8066612	Identifier	configure_appletalk		8066520	1					
ANR	8066613	PrimaryExpression	0		8066520	1					
ANR	8066614	ExpressionStatement	pcs -> uom_cp = 7200L / 300L	241:4:6079:6105	8066520	15	True				
ANR	8066615	AssignmentExpression	pcs -> uom_cp = 7200L / 300L		8066520	0		=			
ANR	8066616	PtrMemberAccess	pcs -> uom_cp		8066520	0					
ANR	8066617	Identifier	pcs		8066520	0					
ANR	8066618	Identifier	uom_cp		8066520	1					
ANR	8066619	MultiplicativeExpression	7200L / 300L		8066520	1		/			
ANR	8066620	PrimaryExpression	7200L		8066520	0					
ANR	8066621	PrimaryExpression	300L		8066520	1					
ANR	8066622	ExpressionStatement	pcs -> palette_stack = 0	242:4:6111:6133	8066520	16	True				
ANR	8066623	AssignmentExpression	pcs -> palette_stack = 0		8066520	0		=			
ANR	8066624	PtrMemberAccess	pcs -> palette_stack		8066520	0					
ANR	8066625	Identifier	pcs		8066520	0					
ANR	8066626	Identifier	palette_stack		8066520	1					
ANR	8066627	PrimaryExpression	0		8066520	1					
ANR	8066628	ExpressionStatement	pcs -> pdflt_palette = 0	243:4:6139:6161	8066520	17	True				
ANR	8066629	AssignmentExpression	pcs -> pdflt_palette = 0		8066520	0		=			
ANR	8066630	PtrMemberAccess	pcs -> pdflt_palette		8066520	0					
ANR	8066631	Identifier	pcs		8066520	0					
ANR	8066632	Identifier	pdflt_palette		8066520	1					
ANR	8066633	PrimaryExpression	0		8066520	1					
ANR	8066634	ExpressionStatement	pcs -> pdflt_frgrnd = 0	244:4:6167:6188	8066520	18	True				
ANR	8066635	AssignmentExpression	pcs -> pdflt_frgrnd = 0		8066520	0		=			
ANR	8066636	PtrMemberAccess	pcs -> pdflt_frgrnd		8066520	0					
ANR	8066637	Identifier	pcs		8066520	0					
ANR	8066638	Identifier	pdflt_frgrnd		8066520	1					
ANR	8066639	PrimaryExpression	0		8066520	1					
ANR	8066640	ExpressionStatement	pcs -> pdflt_ht = 0	245:4:6194:6211	8066520	19	True				
ANR	8066641	AssignmentExpression	pcs -> pdflt_ht = 0		8066520	0		=			
ANR	8066642	PtrMemberAccess	pcs -> pdflt_ht		8066520	0					
ANR	8066643	Identifier	pcs		8066520	0					
ANR	8066644	Identifier	pdflt_ht		8066520	1					
ANR	8066645	PrimaryExpression	0		8066520	1					
ANR	8066646	ExpressionStatement	pcs -> page_marked = false	246:4:6217:6241	8066520	20	True				
ANR	8066647	AssignmentExpression	pcs -> page_marked = false		8066520	0		=			
ANR	8066648	PtrMemberAccess	pcs -> page_marked		8066520	0					
ANR	8066649	Identifier	pcs		8066520	0					
ANR	8066650	Identifier	page_marked		8066520	1					
ANR	8066651	Identifier	false		8066520	1					
ANR	8066652	ExpressionStatement	pcs -> cursor_moved = false	247:4:6247:6272	8066520	21	True				
ANR	8066653	AssignmentExpression	pcs -> cursor_moved = false		8066520	0		=			
ANR	8066654	PtrMemberAccess	pcs -> cursor_moved		8066520	0					
ANR	8066655	Identifier	pcs		8066520	0					
ANR	8066656	Identifier	cursor_moved		8066520	1					
ANR	8066657	Identifier	false		8066520	1					
ANR	8066658	ExpressionStatement	pcl_cs_base_init ( pcs )	248:4:6278:6299	8066520	22	True				
ANR	8066659	CallExpression	pcl_cs_base_init ( pcs )		8066520	0					
ANR	8066660	Callee	pcl_cs_base_init		8066520	0					
ANR	8066661	Identifier	pcl_cs_base_init		8066520	0					
ANR	8066662	ArgumentList	pcs		8066520	1					
ANR	8066663	Argument	pcs		8066520	0					
ANR	8066664	Identifier	pcs		8066520	0					
ANR	8066665	ExpressionStatement	pcl_cs_indexed_init ( pcs )	249:4:6305:6329	8066520	23	True				
ANR	8066666	CallExpression	pcl_cs_indexed_init ( pcs )		8066520	0					
ANR	8066667	Callee	pcl_cs_indexed_init		8066520	0					
ANR	8066668	Identifier	pcl_cs_indexed_init		8066520	0					
ANR	8066669	ArgumentList	pcs		8066520	1					
ANR	8066670	Argument	pcs		8066520	0					
ANR	8066671	Identifier	pcs		8066520	0					
ANR	8066672	ExpressionStatement	pcs -> cap . x = pcs -> cap . y = 0	251:4:6336:6363	8066520	24	True				
ANR	8066673	AssignmentExpression	pcs -> cap . x = pcs -> cap . y = 0		8066520	0		=			
ANR	8066674	MemberAccess	pcs -> cap . x		8066520	0					
ANR	8066675	PtrMemberAccess	pcs -> cap		8066520	0					
ANR	8066676	Identifier	pcs		8066520	0					
ANR	8066677	Identifier	cap		8066520	1					
ANR	8066678	Identifier	x		8066520	1					
ANR	8066679	AssignmentExpression	pcs -> cap . y = 0		8066520	1		=			
ANR	8066680	MemberAccess	pcs -> cap . y		8066520	0					
ANR	8066681	PtrMemberAccess	pcs -> cap		8066520	0					
ANR	8066682	Identifier	pcs		8066520	0					
ANR	8066683	Identifier	cap		8066520	1					
ANR	8066684	Identifier	y		8066520	1					
ANR	8066685	PrimaryExpression	0		8066520	1					
ANR	8066686	ExpressionStatement	pcs -> vmi_cp = 0	252:4:6369:6384	8066520	25	True				
ANR	8066687	AssignmentExpression	pcs -> vmi_cp = 0		8066520	0		=			
ANR	8066688	PtrMemberAccess	pcs -> vmi_cp		8066520	0					
ANR	8066689	Identifier	pcs		8066520	0					
ANR	8066690	Identifier	vmi_cp		8066520	1					
ANR	8066691	PrimaryExpression	0		8066520	1					
ANR	8066692	ExpressionStatement	pcs -> halftone_set = false	253:4:6390:6415	8066520	26	True				
ANR	8066693	AssignmentExpression	pcs -> halftone_set = false		8066520	0		=			
ANR	8066694	PtrMemberAccess	pcs -> halftone_set		8066520	0					
ANR	8066695	Identifier	pcs		8066520	0					
ANR	8066696	Identifier	halftone_set		8066520	1					
ANR	8066697	Identifier	false		8066520	1					
ANR	8066698	ExpressionStatement	pcs -> ppaper_type_table = 0	254:4:6421:6447	8066520	27	True				
ANR	8066699	AssignmentExpression	pcs -> ppaper_type_table = 0		8066520	0		=			
ANR	8066700	PtrMemberAccess	pcs -> ppaper_type_table		8066520	0					
ANR	8066701	Identifier	pcs		8066520	0					
ANR	8066702	Identifier	ppaper_type_table		8066520	1					
ANR	8066703	PrimaryExpression	0		8066520	1					
ANR	8066704	ExpressionStatement	pcs -> hpgl_mode = - 1	256:4:6454:6473	8066520	28	True				
ANR	8066705	AssignmentExpression	pcs -> hpgl_mode = - 1		8066520	0		=			
ANR	8066706	PtrMemberAccess	pcs -> hpgl_mode		8066520	0					
ANR	8066707	Identifier	pcs		8066520	0					
ANR	8066708	Identifier	hpgl_mode		8066520	1					
ANR	8066709	UnaryOperationExpression	- 1		8066520	1					
ANR	8066710	UnaryOperator	-		8066520	0					
ANR	8066711	PrimaryExpression	1		8066520	1					
ANR	8066712	ReturnType	void		8066520	1					
ANR	8066713	Identifier	pcl_init_state		8066520	2					
ANR	8066714	ParameterList	"pcl_state_t * pcs , gs_memory_t * pmem"		8066520	3					
ANR	8066715	Parameter	pcl_state_t * pcs	218:15:5541:5557	8066520	0	True				
ANR	8066716	ParameterType	pcl_state_t *		8066520	0					
ANR	8066717	Identifier	pcs		8066520	1					
ANR	8066718	Parameter	gs_memory_t * pmem	218:34:5560:5577	8066520	1	True				
ANR	8066719	ParameterType	gs_memory_t *		8066520	0					
ANR	8066720	Identifier	pmem		8066520	1					
ANR	8066721	CFGEntryNode	ENTRY		8066520		True				
ANR	8066722	CFGExitNode	EXIT		8066520		True				
ANR	8066723	Symbol	pcs -> palette_stack		8066520						
ANR	8066724	Symbol	pcs -> font_id_type		8066520						
ANR	8066725	Symbol	pcs -> ppaper_type_table		8066520						
ANR	8066726	Symbol	numeric_id		8066520						
ANR	8066727	Symbol	pcs -> pdflt_ht		8066520						
ANR	8066728	Symbol	pcs -> cap . x		8066520						
ANR	8066729	Symbol	pcs -> macro_id_type		8066520						
ANR	8066730	Symbol	pcs -> pattern_transparent		8066520						
ANR	8066731	Symbol	* pcs		8066520						
ANR	8066732	Symbol	pcs -> cap . y		8066520						
ANR	8066733	Symbol	pcs -> page_marked		8066520						
ANR	8066734	Symbol	pmem		8066520						
ANR	8066735	Symbol	pcs -> cursor_moved		8066520						
ANR	8066736	Symbol	pcs -> source_transparent		8066520						
ANR	8066737	Symbol	pcs -> uom_cp		8066520						
ANR	8066738	Symbol	pcs -> memory		8066520						
ANR	8066739	Symbol	pcs -> vmi_cp		8066520						
ANR	8066740	Symbol	pcs -> monochrome_mode		8066520						
ANR	8066741	Symbol	pcs -> halftone_set		8066520						
ANR	8066742	Symbol	pcs -> configure_appletalk		8066520						
ANR	8066743	Symbol	pcs		8066520						
ANR	8066744	Symbol	pcs -> hpgl_mode		8066520						
ANR	8066745	Symbol	pcs -> render_mode		8066520						
ANR	8066746	Symbol	pcs -> perforation_skip		8066520						
ANR	8066747	Symbol	pcs -> output_bin		8066520						
ANR	8066748	Symbol	pcs -> rotate_patterns		8066520						
ANR	8066749	Symbol	pcs -> next_id		8066520						
ANR	8066750	Symbol	false		8066520						
ANR	8066751	Symbol	pcs -> cap		8066520						
ANR	8066752	Symbol	pcs -> num_copies		8066520						
ANR	8066753	Symbol	pcs -> logical_op		8066520						
ANR	8066754	Symbol	pcs -> pdflt_frgrnd		8066520						
ANR	8066755	Symbol	true		8066520						
ANR	8066756	Symbol	pcs -> pdflt_palette		8066520						
ANR	8066757	Function	pcl_debug_dump_data	260:0:6491:6819							
ANR	8066758	FunctionDef	"pcl_debug_dump_data (gs_memory_t * mem , const byte * d , int len)"		8066757	0					
ANR	8066759	CompoundStatement		262:0:6558:6819	8066757	0					
ANR	8066760	IdentifierDeclStatement	int i ;	263:4:6564:6569	8066757	0	True				
ANR	8066761	IdentifierDecl	i		8066757	0					
ANR	8066762	IdentifierDeclType	int		8066757	0					
ANR	8066763	Identifier	i		8066757	1					
ANR	8066764	ExpressionStatement	"dmprintf ( mem , ""BEGIN RAW DATA\\n"" )"	265:4:6576:6609	8066757	1	True				
ANR	8066765	CallExpression	"dmprintf ( mem , ""BEGIN RAW DATA\\n"" )"		8066757	0					
ANR	8066766	Callee	dmprintf		8066757	0					
ANR	8066767	Identifier	dmprintf		8066757	0					
ANR	8066768	ArgumentList	mem		8066757	1					
ANR	8066769	Argument	mem		8066757	0					
ANR	8066770	Identifier	mem		8066757	0					
ANR	8066771	Argument	"""BEGIN RAW DATA\\n"""		8066757	1					
ANR	8066772	PrimaryExpression	"""BEGIN RAW DATA\\n"""		8066757	0					
ANR	8066773	ForStatement	for ( i = 0 ; i < len ; i ++ )		8066757	2					
ANR	8066774	ForInit	i = 0 ;	266:9:6620:6625	8066757	0	True				
ANR	8066775	AssignmentExpression	i = 0		8066757	0		=			
ANR	8066776	Identifier	i		8066757	0					
ANR	8066777	PrimaryExpression	0		8066757	1					
ANR	8066778	Condition	i < len	266:16:6627:6633	8066757	1	True				
ANR	8066779	RelationalExpression	i < len		8066757	0		<			
ANR	8066780	Identifier	i		8066757	0					
ANR	8066781	Identifier	len		8066757	1					
ANR	8066782	PostIncDecOperationExpression	i ++	266:25:6636:6638	8066757	2	True				
ANR	8066783	Identifier	i		8066757	0					
ANR	8066784	IncDec	++		8066757	1					
ANR	8066785	CompoundStatement		5:30:82:82	8066757	3					
ANR	8066786	ExpressionStatement	"dmprintf2 ( mem , ""%02x%c"" , d [ i ] , ( i % 16 == 15 || i == len - 1 ) ? '\\n' : ' ' )"	267:8:6651:6762	8066757	0	True				
ANR	8066787	CallExpression	"dmprintf2 ( mem , ""%02x%c"" , d [ i ] , ( i % 16 == 15 || i == len - 1 ) ? '\\n' : ' ' )"		8066757	0					
ANR	8066788	Callee	dmprintf2		8066757	0					
ANR	8066789	Identifier	dmprintf2		8066757	0					
ANR	8066790	ArgumentList	mem		8066757	1					
ANR	8066791	Argument	mem		8066757	0					
ANR	8066792	Identifier	mem		8066757	0					
ANR	8066793	Argument	"""%02x%c"""		8066757	1					
ANR	8066794	PrimaryExpression	"""%02x%c"""		8066757	0					
ANR	8066795	Argument	d [ i ]		8066757	2					
ANR	8066796	ArrayIndexing	d [ i ]		8066757	0					
ANR	8066797	Identifier	d		8066757	0					
ANR	8066798	Identifier	i		8066757	1					
ANR	8066799	Argument	( i % 16 == 15 || i == len - 1 ) ? '\\n' : ' '		8066757	3					
ANR	8066800	ConditionalExpression	( i % 16 == 15 || i == len - 1 ) ? '\\n' : ' '		8066757	0					
ANR	8066801	Condition	i % 16 == 15 || i == len - 1		8066757	0					
ANR	8066802	OrExpression	i % 16 == 15 || i == len - 1		8066757	0		||			
ANR	8066803	EqualityExpression	i % 16 == 15		8066757	0		==			
ANR	8066804	MultiplicativeExpression	i % 16		8066757	0		%			
ANR	8066805	Identifier	i		8066757	0					
ANR	8066806	PrimaryExpression	16		8066757	1					
ANR	8066807	PrimaryExpression	15		8066757	1					
ANR	8066808	EqualityExpression	i == len - 1		8066757	1		==			
ANR	8066809	Identifier	i		8066757	0					
ANR	8066810	AdditiveExpression	len - 1		8066757	1		-			
ANR	8066811	Identifier	len		8066757	0					
ANR	8066812	PrimaryExpression	1		8066757	1					
ANR	8066813	PrimaryExpression	'\\n'		8066757	1					
ANR	8066814	PrimaryExpression	' '		8066757	2					
ANR	8066815	ExpressionStatement	"dmprintf ( mem , ""END RAW DATA\\n"" )"	271:4:6774:6805	8066757	3	True				
ANR	8066816	CallExpression	"dmprintf ( mem , ""END RAW DATA\\n"" )"		8066757	0					
ANR	8066817	Callee	dmprintf		8066757	0					
ANR	8066818	Identifier	dmprintf		8066757	0					
ANR	8066819	ArgumentList	mem		8066757	1					
ANR	8066820	Argument	mem		8066757	0					
ANR	8066821	Identifier	mem		8066757	0					
ANR	8066822	Argument	"""END RAW DATA\\n"""		8066757	1					
ANR	8066823	PrimaryExpression	"""END RAW DATA\\n"""		8066757	0					
ANR	8066824	ReturnStatement	return ;	272:4:6811:6817	8066757	4	True				
ANR	8066825	ReturnType	void		8066757	1					
ANR	8066826	Identifier	pcl_debug_dump_data		8066757	2					
ANR	8066827	ParameterList	"gs_memory_t * mem , const byte * d , int len"		8066757	3					
ANR	8066828	Parameter	gs_memory_t * mem	261:20:6516:6531	8066757	0	True				
ANR	8066829	ParameterType	gs_memory_t *		8066757	0					
ANR	8066830	Identifier	mem		8066757	1					
ANR	8066831	Parameter	const byte * d	261:38:6534:6546	8066757	1	True				
ANR	8066832	ParameterType	const byte *		8066757	0					
ANR	8066833	Identifier	d		8066757	1					
ANR	8066834	Parameter	int len	261:53:6549:6555	8066757	2	True				
ANR	8066835	ParameterType	int		8066757	0					
ANR	8066836	Identifier	len		8066757	1					
ANR	8066837	CFGEntryNode	ENTRY		8066757		True				
ANR	8066838	CFGExitNode	EXIT		8066757		True				
ANR	8066839	Symbol	* i		8066757						
ANR	8066840	Symbol	mem		8066757						
ANR	8066841	Symbol	d		8066757						
ANR	8066842	Symbol	len		8066757						
ANR	8066843	Symbol	i		8066757						
ANR	8066844	Symbol	* d		8066757						
