command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	11217270	File	data/converged/CVE-2018-16863_ghostpdl/zlib_examples_enough.c								
ANR	11217271	DeclStmt									
ANR	11217272	Decl							unsigned long long	unsigned long long	big_t
ANR	11217273	DeclStmt									
ANR	11217274	Decl							unsigned long long	unsigned long long	code_t
ANR	11217275	ClassDef	tab	112:0:6385:6564							
ANR	11217276	DeclStmt									
ANR	11217277	Decl							size_t	size_t	len
ANR	11217278	DeclStmt									
ANR	11217279	Decl							char	char *	vec
ANR	11217280	DeclStmt									
ANR	11217281	Decl							local int	local int	max
ANR	11217282	DeclStmt									
ANR	11217283	Decl							local int	local int	root
ANR	11217284	DeclStmt									
ANR	11217285	Decl							local int	local int	large
ANR	11217286	DeclStmt									
ANR	11217287	Decl							local size_t	local size_t	size
ANR	11217288	DeclStmt									
ANR	11217289	Decl							local int	local int *	code
ANR	11217290	DeclStmt									
ANR	11217291	Decl							local big_t	local big_t *	num
ANR	11217292	DeclStmt									
ANR	11217293	Decl							struct tab	struct tab *	done
ANR	11217294	Function	cleanup	182:0:10195:10468							
ANR	11217295	FunctionDef	cleanup ()		11217294	0					
ANR	11217296	CompoundStatement		183:0:10220:10468	11217294	0					
ANR	11217297	IdentifierDeclStatement	size_t n ;	184:4:10226:10234	11217294	0	True				
ANR	11217298	IdentifierDecl	n		11217294	0					
ANR	11217299	IdentifierDeclType	size_t		11217294	0					
ANR	11217300	Identifier	n		11217294	1					
ANR	11217301	IfStatement	if ( done != NULL )		11217294	1					
ANR	11217302	Condition	done != NULL	186:8:10245:10256	11217294	0	True				
ANR	11217303	EqualityExpression	done != NULL		11217294	0		!=			
ANR	11217304	Identifier	done		11217294	0					
ANR	11217305	Identifier	NULL		11217294	1					
ANR	11217306	CompoundStatement		4:22:38:38	11217294	1					
ANR	11217307	ForStatement	for ( n = 0 ; n < size ; n ++ )		11217294	0					
ANR	11217308	ForInit	n = 0 ;	187:13:10274:10279	11217294	0	True				
ANR	11217309	AssignmentExpression	n = 0		11217294	0		=			
ANR	11217310	Identifier	n		11217294	0					
ANR	11217311	PrimaryExpression	0		11217294	1					
ANR	11217312	Condition	n < size	187:20:10281:10288	11217294	1	True				
ANR	11217313	RelationalExpression	n < size		11217294	0		<			
ANR	11217314	Identifier	n		11217294	0					
ANR	11217315	Identifier	size		11217294	1					
ANR	11217316	PostIncDecOperationExpression	n ++	187:30:10291:10293	11217294	2	True				
ANR	11217317	Identifier	n		11217294	0					
ANR	11217318	IncDec	++		11217294	1					
ANR	11217319	IfStatement	if ( done [ n ] . len )		11217294	3					
ANR	11217320	Condition	done [ n ] . len	188:16:10312:10322	11217294	0	True				
ANR	11217321	MemberAccess	done [ n ] . len		11217294	0					
ANR	11217322	ArrayIndexing	done [ n ]		11217294	0					
ANR	11217323	Identifier	done		11217294	0					
ANR	11217324	Identifier	n		11217294	1					
ANR	11217325	Identifier	len		11217294	1					
ANR	11217326	ExpressionStatement	free ( done [ n ] . vec )	189:16:10341:10358	11217294	1	True				
ANR	11217327	CallExpression	free ( done [ n ] . vec )		11217294	0					
ANR	11217328	Callee	free		11217294	0					
ANR	11217329	Identifier	free		11217294	0					
ANR	11217330	ArgumentList	done [ n ] . vec		11217294	1					
ANR	11217331	Argument	done [ n ] . vec		11217294	0					
ANR	11217332	MemberAccess	done [ n ] . vec		11217294	0					
ANR	11217333	ArrayIndexing	done [ n ]		11217294	0					
ANR	11217334	Identifier	done		11217294	0					
ANR	11217335	Identifier	n		11217294	1					
ANR	11217336	Identifier	vec		11217294	1					
ANR	11217337	ExpressionStatement	free ( done )	190:8:10368:10378	11217294	1	True				
ANR	11217338	CallExpression	free ( done )		11217294	0					
ANR	11217339	Callee	free		11217294	0					
ANR	11217340	Identifier	free		11217294	0					
ANR	11217341	ArgumentList	done		11217294	1					
ANR	11217342	Argument	done		11217294	0					
ANR	11217343	Identifier	done		11217294	0					
ANR	11217344	IfStatement	if ( num != NULL )		11217294	2					
ANR	11217345	Condition	num != NULL	192:8:10394:10404	11217294	0	True				
ANR	11217346	EqualityExpression	num != NULL		11217294	0		!=			
ANR	11217347	Identifier	num		11217294	0					
ANR	11217348	Identifier	NULL		11217294	1					
ANR	11217349	ExpressionStatement	free ( num )	193:8:10415:10424	11217294	1	True				
ANR	11217350	CallExpression	free ( num )		11217294	0					
ANR	11217351	Callee	free		11217294	0					
ANR	11217352	Identifier	free		11217294	0					
ANR	11217353	ArgumentList	num		11217294	1					
ANR	11217354	Argument	num		11217294	0					
ANR	11217355	Identifier	num		11217294	0					
ANR	11217356	IfStatement	if ( code != NULL )		11217294	3					
ANR	11217357	Condition	code != NULL	194:8:10434:10445	11217294	0	True				
ANR	11217358	EqualityExpression	code != NULL		11217294	0		!=			
ANR	11217359	Identifier	code		11217294	0					
ANR	11217360	Identifier	NULL		11217294	1					
ANR	11217361	ExpressionStatement	free ( code )	195:8:10456:10466	11217294	1	True				
ANR	11217362	CallExpression	free ( code )		11217294	0					
ANR	11217363	Callee	free		11217294	0					
ANR	11217364	Identifier	free		11217294	0					
ANR	11217365	ArgumentList	code		11217294	1					
ANR	11217366	Argument	code		11217294	0					
ANR	11217367	Identifier	code		11217294	0					
ANR	11217368	ReturnType	local void		11217294	1					
ANR	11217369	Identifier	cleanup		11217294	2					
ANR	11217370	ParameterList			11217294	3					
ANR	11217371	CFGEntryNode	ENTRY		11217294		True				
ANR	11217372	CFGExitNode	EXIT		11217294		True				
ANR	11217373	Symbol	NULL		11217294						
ANR	11217374	Symbol	code		11217294						
ANR	11217375	Symbol	size		11217294						
ANR	11217376	Symbol	done [ n ] . vec		11217294						
ANR	11217377	Symbol	done [ n ] . len		11217294						
ANR	11217378	Symbol	* done		11217294						
ANR	11217379	Symbol	num		11217294						
ANR	11217380	Symbol	* n		11217294						
ANR	11217381	Symbol	done		11217294						
ANR	11217382	Symbol	n		11217294						
ANR	11217383	Function	count	203:0:10824:12670							
ANR	11217384	FunctionDef	"count (int syms , int len , int left)"		11217383	0					
ANR	11217385	CompoundStatement		204:0:10871:12670	11217383	0					
ANR	11217386	IdentifierDeclStatement	big_t sum ;	205:4:10877:10886	11217383	0	True				
ANR	11217387	IdentifierDecl	sum		11217383	0					
ANR	11217388	IdentifierDeclType	big_t		11217383	0					
ANR	11217389	Identifier	sum		11217383	1					
ANR	11217390	IdentifierDeclStatement	big_t got ;	206:4:10951:10960	11217383	1	True				
ANR	11217391	IdentifierDecl	got		11217383	0					
ANR	11217392	IdentifierDeclType	big_t		11217383	0					
ANR	11217393	Identifier	got		11217383	1					
ANR	11217394	IdentifierDeclStatement	int least ;	207:4:11009:11018	11217383	2	True				
ANR	11217395	IdentifierDecl	least		11217383	0					
ANR	11217396	IdentifierDeclType	int		11217383	0					
ANR	11217397	Identifier	least		11217383	1					
ANR	11217398	IdentifierDeclStatement	int most ;	208:4:11084:11092	11217383	3	True				
ANR	11217399	IdentifierDecl	most		11217383	0					
ANR	11217400	IdentifierDeclType	int		11217383	0					
ANR	11217401	Identifier	most		11217383	1					
ANR	11217402	IdentifierDeclStatement	int use ;	209:4:11158:11165	11217383	4	True				
ANR	11217403	IdentifierDecl	use		11217383	0					
ANR	11217404	IdentifierDeclType	int		11217383	0					
ANR	11217405	Identifier	use		11217383	1					
ANR	11217406	IdentifierDeclStatement	size_t index ;	210:4:11231:11243	11217383	5	True				
ANR	11217407	IdentifierDecl	index		11217383	0					
ANR	11217408	IdentifierDeclType	size_t		11217383	0					
ANR	11217409	Identifier	index		11217383	1					
ANR	11217410	IfStatement	if ( syms == left )		11217383	6					
ANR	11217411	Condition	syms == left	213:8:11333:11344	11217383	0	True				
ANR	11217412	EqualityExpression	syms == left		11217383	0		==			
ANR	11217413	Identifier	syms		11217383	0					
ANR	11217414	Identifier	left		11217383	1					
ANR	11217415	ReturnStatement	return 1 ;	214:8:11355:11363	11217383	1	True				
ANR	11217416	PrimaryExpression	1		11217383	0					
ANR	11217417	ExpressionStatement	assert ( syms > left && left > 0 && len < max )	217:4:11415:11459	11217383	7	True				
ANR	11217418	CallExpression	assert ( syms > left && left > 0 && len < max )		11217383	0					
ANR	11217419	Callee	assert		11217383	0					
ANR	11217420	Identifier	assert		11217383	0					
ANR	11217421	ArgumentList	syms > left && left > 0 && len < max		11217383	1					
ANR	11217422	Argument	syms > left && left > 0 && len < max		11217383	0					
ANR	11217423	AndExpression	syms > left && left > 0 && len < max		11217383	0		&&			
ANR	11217424	RelationalExpression	syms > left		11217383	0		>			
ANR	11217425	Identifier	syms		11217383	0					
ANR	11217426	Identifier	left		11217383	1					
ANR	11217427	AndExpression	left > 0 && len < max		11217383	1		&&			
ANR	11217428	RelationalExpression	left > 0		11217383	0		>			
ANR	11217429	Identifier	left		11217383	0					
ANR	11217430	PrimaryExpression	0		11217383	1					
ANR	11217431	RelationalExpression	len < max		11217383	1		<			
ANR	11217432	Identifier	len		11217383	0					
ANR	11217433	Identifier	max		11217383	1					
ANR	11217434	ExpressionStatement	"index = INDEX ( syms , left , len )"	220:4:11511:11541	11217383	8	True				
ANR	11217435	AssignmentExpression	"index = INDEX ( syms , left , len )"		11217383	0		=			
ANR	11217436	Identifier	index		11217383	0					
ANR	11217437	CallExpression	"INDEX ( syms , left , len )"		11217383	1					
ANR	11217438	Callee	INDEX		11217383	0					
ANR	11217439	Identifier	INDEX		11217383	0					
ANR	11217440	ArgumentList	syms		11217383	1					
ANR	11217441	Argument	syms		11217383	0					
ANR	11217442	Identifier	syms		11217383	0					
ANR	11217443	Argument	left		11217383	1					
ANR	11217444	Identifier	left		11217383	0					
ANR	11217445	Argument	len		11217383	2					
ANR	11217446	Identifier	len		11217383	0					
ANR	11217447	ExpressionStatement	got = num [ index ]	221:4:11547:11563	11217383	9	True				
ANR	11217448	AssignmentExpression	got = num [ index ]		11217383	0		=			
ANR	11217449	Identifier	got		11217383	0					
ANR	11217450	ArrayIndexing	num [ index ]		11217383	1					
ANR	11217451	Identifier	num		11217383	0					
ANR	11217452	Identifier	index		11217383	1					
ANR	11217453	IfStatement	if ( got )		11217383	10					
ANR	11217454	Condition	got	222:8:11573:11575	11217383	0	True				
ANR	11217455	Identifier	got		11217383	0					
ANR	11217456	ReturnStatement	return got ;	223:8:11586:11596	11217383	1	True				
ANR	11217457	Identifier	got		11217383	0					
ANR	11217458	ExpressionStatement	least = ( left << 1 ) - syms	227:4:11805:11831	11217383	11	True				
ANR	11217459	AssignmentExpression	least = ( left << 1 ) - syms		11217383	0		=			
ANR	11217460	Identifier	least		11217383	0					
ANR	11217461	AdditiveExpression	( left << 1 ) - syms		11217383	1		-			
ANR	11217462	ShiftExpression	left << 1		11217383	0		<<			
ANR	11217463	Identifier	left		11217383	0					
ANR	11217464	PrimaryExpression	1		11217383	1					
ANR	11217465	Identifier	syms		11217383	1					
ANR	11217466	IfStatement	if ( least < 0 )		11217383	12					
ANR	11217467	Condition	least < 0	228:8:11841:11849	11217383	0	True				
ANR	11217468	RelationalExpression	least < 0		11217383	0		<			
ANR	11217469	Identifier	least		11217383	0					
ANR	11217470	PrimaryExpression	0		11217383	1					
ANR	11217471	ExpressionStatement	least = 0	229:8:11860:11869	11217383	1	True				
ANR	11217472	AssignmentExpression	least = 0		11217383	0		=			
ANR	11217473	Identifier	least		11217383	0					
ANR	11217474	PrimaryExpression	0		11217383	1					
ANR	11217475	ExpressionStatement	most = ( ( ( code_t ) left << ( max - len ) ) - syms ) / ( ( ( code_t ) 1 << ( max - len ) ) - 1 )	234:4:12106:12198	11217383	13	True				
ANR	11217476	AssignmentExpression	most = ( ( ( code_t ) left << ( max - len ) ) - syms ) / ( ( ( code_t ) 1 << ( max - len ) ) - 1 )		11217383	0		=			
ANR	11217477	Identifier	most		11217383	0					
ANR	11217478	MultiplicativeExpression	( ( ( code_t ) left << ( max - len ) ) - syms ) / ( ( ( code_t ) 1 << ( max - len ) ) - 1 )		11217383	1		/			
ANR	11217479	AdditiveExpression	( ( code_t ) left << ( max - len ) ) - syms		11217383	0		-			
ANR	11217480	ShiftExpression	( code_t ) left << ( max - len )		11217383	0		<<			
ANR	11217481	CastExpression	( code_t ) left		11217383	0					
ANR	11217482	CastTarget	code_t		11217383	0					
ANR	11217483	Identifier	left		11217383	1					
ANR	11217484	AdditiveExpression	max - len		11217383	1		-			
ANR	11217485	Identifier	max		11217383	0					
ANR	11217486	Identifier	len		11217383	1					
ANR	11217487	Identifier	syms		11217383	1					
ANR	11217488	AdditiveExpression	( ( code_t ) 1 << ( max - len ) ) - 1		11217383	1		-			
ANR	11217489	ShiftExpression	( code_t ) 1 << ( max - len )		11217383	0		<<			
ANR	11217490	CastExpression	( code_t ) 1		11217383	0					
ANR	11217491	CastTarget	code_t		11217383	0					
ANR	11217492	PrimaryExpression	1		11217383	1					
ANR	11217493	AdditiveExpression	max - len		11217383	1		-			
ANR	11217494	Identifier	max		11217383	0					
ANR	11217495	Identifier	len		11217383	1					
ANR	11217496	PrimaryExpression	1		11217383	1					
ANR	11217497	ExpressionStatement	sum = 0	238:4:12275:12282	11217383	14	True				
ANR	11217498	AssignmentExpression	sum = 0		11217383	0		=			
ANR	11217499	Identifier	sum		11217383	0					
ANR	11217500	PrimaryExpression	0		11217383	1					
ANR	11217501	ForStatement	for ( use = least ; use <= most ; use ++ )		11217383	15					
ANR	11217502	ForInit	use = least ;	239:9:12293:12304	11217383	0	True				
ANR	11217503	AssignmentExpression	use = least		11217383	0		=			
ANR	11217504	Identifier	use		11217383	0					
ANR	11217505	Identifier	least		11217383	1					
ANR	11217506	Condition	use <= most	239:22:12306:12316	11217383	1	True				
ANR	11217507	RelationalExpression	use <= most		11217383	0		<=			
ANR	11217508	Identifier	use		11217383	0					
ANR	11217509	Identifier	most		11217383	1					
ANR	11217510	PostIncDecOperationExpression	use ++	239:35:12319:12323	11217383	2	True				
ANR	11217511	Identifier	use		11217383	0					
ANR	11217512	IncDec	++		11217383	1					
ANR	11217513	CompoundStatement		36:42:1454:1454	11217383	3					
ANR	11217514	ExpressionStatement	"got = count ( syms - use , len + 1 , ( left - use ) << 1 )"	240:8:12336:12387	11217383	0	True				
ANR	11217515	AssignmentExpression	"got = count ( syms - use , len + 1 , ( left - use ) << 1 )"		11217383	0		=			
ANR	11217516	Identifier	got		11217383	0					
ANR	11217517	CallExpression	"count ( syms - use , len + 1 , ( left - use ) << 1 )"		11217383	1					
ANR	11217518	Callee	count		11217383	0					
ANR	11217519	Identifier	count		11217383	0					
ANR	11217520	ArgumentList	syms - use		11217383	1					
ANR	11217521	Argument	syms - use		11217383	0					
ANR	11217522	AdditiveExpression	syms - use		11217383	0		-			
ANR	11217523	Identifier	syms		11217383	0					
ANR	11217524	Identifier	use		11217383	1					
ANR	11217525	Argument	len + 1		11217383	1					
ANR	11217526	AdditiveExpression	len + 1		11217383	0		+			
ANR	11217527	Identifier	len		11217383	0					
ANR	11217528	PrimaryExpression	1		11217383	1					
ANR	11217529	Argument	( left - use ) << 1		11217383	2					
ANR	11217530	ShiftExpression	( left - use ) << 1		11217383	0		<<			
ANR	11217531	AdditiveExpression	left - use		11217383	0		-			
ANR	11217532	Identifier	left		11217383	0					
ANR	11217533	Identifier	use		11217383	1					
ANR	11217534	PrimaryExpression	1		11217383	1					
ANR	11217535	ExpressionStatement	sum += got	241:8:12397:12407	11217383	1	True				
ANR	11217536	AssignmentExpression	sum += got		11217383	0		+=			
ANR	11217537	Identifier	sum		11217383	0					
ANR	11217538	Identifier	got		11217383	1					
ANR	11217539	IfStatement	if ( got == ( big_t ) 0 - 1 || sum < got )		11217383	2					
ANR	11217540	Condition	got == ( big_t ) 0 - 1 || sum < got	242:12:12421:12452	11217383	0	True				
ANR	11217541	OrExpression	got == ( big_t ) 0 - 1 || sum < got		11217383	0		||			
ANR	11217542	EqualityExpression	got == ( big_t ) 0 - 1		11217383	0		==			
ANR	11217543	Identifier	got		11217383	0					
ANR	11217544	AdditiveExpression	( big_t ) 0 - 1		11217383	1		-			
ANR	11217545	CastExpression	( big_t ) 0		11217383	0					
ANR	11217546	CastTarget	big_t		11217383	0					
ANR	11217547	PrimaryExpression	0		11217383	1					
ANR	11217548	PrimaryExpression	1		11217383	1					
ANR	11217549	RelationalExpression	sum < got		11217383	1		<			
ANR	11217550	Identifier	sum		11217383	0					
ANR	11217551	Identifier	got		11217383	1					
ANR	11217552	ReturnStatement	return ( big_t ) 0 - 1 ;	243:12:12484:12503	11217383	1	True				
ANR	11217553	AdditiveExpression	( big_t ) 0 - 1		11217383	0		-			
ANR	11217554	CastExpression	( big_t ) 0		11217383	0					
ANR	11217555	CastTarget	big_t		11217383	0					
ANR	11217556	PrimaryExpression	0		11217383	1					
ANR	11217557	PrimaryExpression	1		11217383	1					
ANR	11217558	ExpressionStatement	assert ( sum != 0 )	247:4:12573:12589	11217383	16	True				
ANR	11217559	CallExpression	assert ( sum != 0 )		11217383	0					
ANR	11217560	Callee	assert		11217383	0					
ANR	11217561	Identifier	assert		11217383	0					
ANR	11217562	ArgumentList	sum != 0		11217383	1					
ANR	11217563	Argument	sum != 0		11217383	0					
ANR	11217564	EqualityExpression	sum != 0		11217383	0		!=			
ANR	11217565	Identifier	sum		11217383	0					
ANR	11217566	PrimaryExpression	0		11217383	1					
ANR	11217567	ExpressionStatement	num [ index ] = sum	250:4:12636:12652	11217383	17	True				
ANR	11217568	AssignmentExpression	num [ index ] = sum		11217383	0		=			
ANR	11217569	ArrayIndexing	num [ index ]		11217383	0					
ANR	11217570	Identifier	num		11217383	0					
ANR	11217571	Identifier	index		11217383	1					
ANR	11217572	Identifier	sum		11217383	1					
ANR	11217573	ReturnStatement	return sum ;	251:4:12658:12668	11217383	18	True				
ANR	11217574	Identifier	sum		11217383	0					
ANR	11217575	ReturnType	local big_t		11217383	1					
ANR	11217576	Identifier	count		11217383	2					
ANR	11217577	ParameterList	"int syms , int len , int left"		11217383	3					
ANR	11217578	Parameter	int syms	203:18:10842:10849	11217383	0	True				
ANR	11217579	ParameterType	int		11217383	0					
ANR	11217580	Identifier	syms		11217383	1					
ANR	11217581	Parameter	int len	203:28:10852:10858	11217383	1	True				
ANR	11217582	ParameterType	int		11217383	0					
ANR	11217583	Identifier	len		11217383	1					
ANR	11217584	Parameter	int left	203:37:10861:10868	11217383	2	True				
ANR	11217585	ParameterType	int		11217383	0					
ANR	11217586	Identifier	left		11217383	1					
ANR	11217587	CFGEntryNode	ENTRY		11217383		True				
ANR	11217588	CFGExitNode	EXIT		11217383		True				
ANR	11217589	Symbol	max		11217383						
ANR	11217590	Symbol	use		11217383						
ANR	11217591	Symbol	* index		11217383						
ANR	11217592	Symbol	num		11217383						
ANR	11217593	Symbol	least		11217383						
ANR	11217594	Symbol	count		11217383						
ANR	11217595	Symbol	index		11217383						
ANR	11217596	Symbol	sum		11217383						
ANR	11217597	Symbol	got		11217383						
ANR	11217598	Symbol	most		11217383						
ANR	11217599	Symbol	* num		11217383						
ANR	11217600	Symbol	len		11217383						
ANR	11217601	Symbol	left		11217383						
ANR	11217602	Symbol	syms		11217383						
ANR	11217603	Symbol	INDEX		11217383						
ANR	11217604	Function	beenhere	258:0:12964:14944							
ANR	11217605	FunctionDef	"beenhere (int syms , int len , int left , int mem , int rem)"		11217604	0					
ANR	11217606	CompoundStatement		259:0:13030:14944	11217604	0					
ANR	11217607	IdentifierDeclStatement	size_t index ;	260:4:13036:13048	11217604	0	True				
ANR	11217608	IdentifierDecl	index		11217604	0					
ANR	11217609	IdentifierDeclType	size_t		11217604	0					
ANR	11217610	Identifier	index		11217604	1					
ANR	11217611	IdentifierDeclStatement	size_t offset ;	261:4:13100:13113	11217604	1	True				
ANR	11217612	IdentifierDecl	offset		11217604	0					
ANR	11217613	IdentifierDeclType	size_t		11217604	0					
ANR	11217614	Identifier	offset		11217604	1					
ANR	11217615	IdentifierDeclStatement	int bit ;	262:4:13164:13171	11217604	2	True				
ANR	11217616	IdentifierDecl	bit		11217604	0					
ANR	11217617	IdentifierDeclType	int		11217604	0					
ANR	11217618	Identifier	bit		11217604	1					
ANR	11217619	IdentifierDeclStatement	size_t length ;	263:4:13220:13233	11217604	3	True				
ANR	11217620	IdentifierDecl	length		11217604	0					
ANR	11217621	IdentifierDeclType	size_t		11217604	0					
ANR	11217622	Identifier	length		11217604	1					
ANR	11217623	IdentifierDeclStatement	char * vector ;	264:4:13284:13296	11217604	4	True				
ANR	11217624	IdentifierDecl	* vector		11217604	0					
ANR	11217625	IdentifierDeclType	char *		11217604	0					
ANR	11217626	Identifier	vector		11217604	1					
ANR	11217627	ExpressionStatement	"index = INDEX ( syms , left , len )"	267:4:13417:13447	11217604	5	True				
ANR	11217628	AssignmentExpression	"index = INDEX ( syms , left , len )"		11217604	0		=			
ANR	11217629	Identifier	index		11217604	0					
ANR	11217630	CallExpression	"INDEX ( syms , left , len )"		11217604	1					
ANR	11217631	Callee	INDEX		11217604	0					
ANR	11217632	Identifier	INDEX		11217604	0					
ANR	11217633	ArgumentList	syms		11217604	1					
ANR	11217634	Argument	syms		11217604	0					
ANR	11217635	Identifier	syms		11217604	0					
ANR	11217636	Argument	left		11217604	1					
ANR	11217637	Identifier	left		11217604	0					
ANR	11217638	Argument	len		11217604	2					
ANR	11217639	Identifier	len		11217604	0					
ANR	11217640	ExpressionStatement	mem -= 1 << root	268:4:13453:13469	11217604	6	True				
ANR	11217641	AssignmentExpression	mem -= 1 << root		11217604	0		-=			
ANR	11217642	Identifier	mem		11217604	0					
ANR	11217643	ShiftExpression	1 << root		11217604	1		<<			
ANR	11217644	PrimaryExpression	1		11217604	0					
ANR	11217645	Identifier	root		11217604	1					
ANR	11217646	ExpressionStatement	offset = ( mem >> 3 ) + rem	269:4:13475:13500	11217604	7	True				
ANR	11217647	AssignmentExpression	offset = ( mem >> 3 ) + rem		11217604	0		=			
ANR	11217648	Identifier	offset		11217604	0					
ANR	11217649	AdditiveExpression	( mem >> 3 ) + rem		11217604	1		+			
ANR	11217650	ShiftExpression	mem >> 3		11217604	0		>>			
ANR	11217651	Identifier	mem		11217604	0					
ANR	11217652	PrimaryExpression	3		11217604	1					
ANR	11217653	Identifier	rem		11217604	1					
ANR	11217654	ExpressionStatement	offset = ( ( offset * ( offset + 1 ) ) >> 1 ) + rem	270:4:13506:13551	11217604	8	True				
ANR	11217655	AssignmentExpression	offset = ( ( offset * ( offset + 1 ) ) >> 1 ) + rem		11217604	0		=			
ANR	11217656	Identifier	offset		11217604	0					
ANR	11217657	AdditiveExpression	( ( offset * ( offset + 1 ) ) >> 1 ) + rem		11217604	1		+			
ANR	11217658	ShiftExpression	( offset * ( offset + 1 ) ) >> 1		11217604	0		>>			
ANR	11217659	MultiplicativeExpression	offset * ( offset + 1 )		11217604	0		*			
ANR	11217660	Identifier	offset		11217604	0					
ANR	11217661	AdditiveExpression	offset + 1		11217604	1		+			
ANR	11217662	Identifier	offset		11217604	0					
ANR	11217663	PrimaryExpression	1		11217604	1					
ANR	11217664	PrimaryExpression	1		11217604	1					
ANR	11217665	Identifier	rem		11217604	1					
ANR	11217666	ExpressionStatement	bit = 1 << ( mem & 7 )	271:4:13557:13577	11217604	9	True				
ANR	11217667	AssignmentExpression	bit = 1 << ( mem & 7 )		11217604	0		=			
ANR	11217668	Identifier	bit		11217604	0					
ANR	11217669	ShiftExpression	1 << ( mem & 7 )		11217604	1		<<			
ANR	11217670	PrimaryExpression	1		11217604	0					
ANR	11217671	BitAndExpression	mem & 7		11217604	1		&			
ANR	11217672	Identifier	mem		11217604	0					
ANR	11217673	PrimaryExpression	7		11217604	1					
ANR	11217674	ExpressionStatement	length = done [ index ] . len	274:4:13617:13641	11217604	10	True				
ANR	11217675	AssignmentExpression	length = done [ index ] . len		11217604	0		=			
ANR	11217676	Identifier	length		11217604	0					
ANR	11217677	MemberAccess	done [ index ] . len		11217604	1					
ANR	11217678	ArrayIndexing	done [ index ]		11217604	0					
ANR	11217679	Identifier	done		11217604	0					
ANR	11217680	Identifier	index		11217604	1					
ANR	11217681	Identifier	len		11217604	1					
ANR	11217682	IfStatement	if ( offset < length && ( done [ index ] . vec [ offset ] & bit ) != 0 )		11217604	11					
ANR	11217683	Condition	offset < length && ( done [ index ] . vec [ offset ] & bit ) != 0	275:8:13651:13705	11217604	0	True				
ANR	11217684	AndExpression	offset < length && ( done [ index ] . vec [ offset ] & bit ) != 0		11217604	0		&&			
ANR	11217685	RelationalExpression	offset < length		11217604	0		<			
ANR	11217686	Identifier	offset		11217604	0					
ANR	11217687	Identifier	length		11217604	1					
ANR	11217688	EqualityExpression	( done [ index ] . vec [ offset ] & bit ) != 0		11217604	1		!=			
ANR	11217689	BitAndExpression	done [ index ] . vec [ offset ] & bit		11217604	0		&			
ANR	11217690	ArrayIndexing	done [ index ] . vec [ offset ]		11217604	0					
ANR	11217691	MemberAccess	done [ index ] . vec		11217604	0					
ANR	11217692	ArrayIndexing	done [ index ]		11217604	0					
ANR	11217693	Identifier	done		11217604	0					
ANR	11217694	Identifier	index		11217604	1					
ANR	11217695	Identifier	vec		11217604	1					
ANR	11217696	Identifier	offset		11217604	1					
ANR	11217697	Identifier	bit		11217604	1					
ANR	11217698	PrimaryExpression	0		11217604	1					
ANR	11217699	ReturnStatement	return 1 ;	276:8:13716:13724	11217604	1	True				
ANR	11217700	PrimaryExpression	1		11217604	0					
ANR	11217701	IfStatement	if ( length <= offset )		11217604	12					
ANR	11217702	Condition	length <= offset	281:8:13904:13919	11217604	0	True				
ANR	11217703	RelationalExpression	length <= offset		11217604	0		<=			
ANR	11217704	Identifier	length		11217604	0					
ANR	11217705	Identifier	offset		11217604	1					
ANR	11217706	CompoundStatement		23:26:891:891	11217604	1					
ANR	11217707	IfStatement	if ( length )		11217604	0					
ANR	11217708	Condition	length	283:12:14014:14019	11217604	0	True				
ANR	11217709	Identifier	length		11217604	0					
ANR	11217710	CompoundStatement		25:20:991:991	11217604	1					
ANR	11217711	DoStatement	do		11217604	0					
ANR	11217712	CompoundStatement		26:15:1008:1008	11217604	0					
ANR	11217713	ExpressionStatement	length <<= 1	285:16:14057:14069	11217604	0	True				
ANR	11217714	AssignmentExpression	length <<= 1		11217604	0		<<=			
ANR	11217715	Identifier	length		11217604	0					
ANR	11217716	PrimaryExpression	1		11217604	1					
ANR	11217717	Condition	length <= offset	286:21:14092:14107	11217604	1	True				
ANR	11217718	RelationalExpression	length <= offset		11217604	0		<=			
ANR	11217719	Identifier	length		11217604	0					
ANR	11217720	Identifier	offset		11217604	1					
ANR	11217721	ExpressionStatement	"vector = realloc ( done [ index ] . vec , length )"	287:12:14123:14164	11217604	1	True				
ANR	11217722	AssignmentExpression	"vector = realloc ( done [ index ] . vec , length )"		11217604	0		=			
ANR	11217723	Identifier	vector		11217604	0					
ANR	11217724	CallExpression	"realloc ( done [ index ] . vec , length )"		11217604	1					
ANR	11217725	Callee	realloc		11217604	0					
ANR	11217726	Identifier	realloc		11217604	0					
ANR	11217727	ArgumentList	done [ index ] . vec		11217604	1					
ANR	11217728	Argument	done [ index ] . vec		11217604	0					
ANR	11217729	MemberAccess	done [ index ] . vec		11217604	0					
ANR	11217730	ArrayIndexing	done [ index ]		11217604	0					
ANR	11217731	Identifier	done		11217604	0					
ANR	11217732	Identifier	index		11217604	1					
ANR	11217733	Identifier	vec		11217604	1					
ANR	11217734	Argument	length		11217604	1					
ANR	11217735	Identifier	length		11217604	0					
ANR	11217736	IfStatement	if ( vector != NULL )		11217604	2					
ANR	11217737	Condition	vector != NULL	288:16:14182:14195	11217604	0	True				
ANR	11217738	EqualityExpression	vector != NULL		11217604	0		!=			
ANR	11217739	Identifier	vector		11217604	0					
ANR	11217740	Identifier	NULL		11217604	1					
ANR	11217741	ExpressionStatement	"memset ( vector + done [ index ] . len , 0 , length - done [ index ] . len )"	289:16:14214:14275	11217604	1	True				
ANR	11217742	CallExpression	"memset ( vector + done [ index ] . len , 0 , length - done [ index ] . len )"		11217604	0					
ANR	11217743	Callee	memset		11217604	0					
ANR	11217744	Identifier	memset		11217604	0					
ANR	11217745	ArgumentList	vector + done [ index ] . len		11217604	1					
ANR	11217746	Argument	vector + done [ index ] . len		11217604	0					
ANR	11217747	AdditiveExpression	vector + done [ index ] . len		11217604	0		+			
ANR	11217748	Identifier	vector		11217604	0					
ANR	11217749	MemberAccess	done [ index ] . len		11217604	1					
ANR	11217750	ArrayIndexing	done [ index ]		11217604	0					
ANR	11217751	Identifier	done		11217604	0					
ANR	11217752	Identifier	index		11217604	1					
ANR	11217753	Identifier	len		11217604	1					
ANR	11217754	Argument	0		11217604	1					
ANR	11217755	PrimaryExpression	0		11217604	0					
ANR	11217756	Argument	length - done [ index ] . len		11217604	2					
ANR	11217757	AdditiveExpression	length - done [ index ] . len		11217604	0		-			
ANR	11217758	Identifier	length		11217604	0					
ANR	11217759	MemberAccess	done [ index ] . len		11217604	1					
ANR	11217760	ArrayIndexing	done [ index ]		11217604	0					
ANR	11217761	Identifier	done		11217604	0					
ANR	11217762	Identifier	index		11217604	1					
ANR	11217763	Identifier	len		11217604	1					
ANR	11217764	ElseStatement	else		11217604	0					
ANR	11217765	CompoundStatement		35:13:1339:1339	11217604	0					
ANR	11217766	ExpressionStatement	length = 1 << ( len - root )	294:12:14384:14410	11217604	0	True				
ANR	11217767	AssignmentExpression	length = 1 << ( len - root )		11217604	0		=			
ANR	11217768	Identifier	length		11217604	0					
ANR	11217769	ShiftExpression	1 << ( len - root )		11217604	1		<<			
ANR	11217770	PrimaryExpression	1		11217604	0					
ANR	11217771	AdditiveExpression	len - root		11217604	1		-			
ANR	11217772	Identifier	len		11217604	0					
ANR	11217773	Identifier	root		11217604	1					
ANR	11217774	WhileStatement	while ( length <= offset )		11217604	1					
ANR	11217775	Condition	length <= offset	295:19:14431:14446	11217604	0	True				
ANR	11217776	RelationalExpression	length <= offset		11217604	0		<=			
ANR	11217777	Identifier	length		11217604	0					
ANR	11217778	Identifier	offset		11217604	1					
ANR	11217779	ExpressionStatement	length <<= 1	296:16:14465:14477	11217604	1	True				
ANR	11217780	AssignmentExpression	length <<= 1		11217604	0		<<=			
ANR	11217781	Identifier	length		11217604	0					
ANR	11217782	PrimaryExpression	1		11217604	1					
ANR	11217783	ExpressionStatement	"vector = calloc ( length , sizeof ( char ) )"	297:12:14491:14528	11217604	2	True				
ANR	11217784	AssignmentExpression	"vector = calloc ( length , sizeof ( char ) )"		11217604	0		=			
ANR	11217785	Identifier	vector		11217604	0					
ANR	11217786	CallExpression	"calloc ( length , sizeof ( char ) )"		11217604	1					
ANR	11217787	Callee	calloc		11217604	0					
ANR	11217788	Identifier	calloc		11217604	0					
ANR	11217789	ArgumentList	length		11217604	1					
ANR	11217790	Argument	length		11217604	0					
ANR	11217791	Identifier	length		11217604	0					
ANR	11217792	Argument	sizeof ( char )		11217604	1					
ANR	11217793	SizeofExpression	sizeof ( char )		11217604	0					
ANR	11217794	Sizeof	sizeof		11217604	0					
ANR	11217795	SizeofOperand	char		11217604	1					
ANR	11217796	IfStatement	if ( vector == NULL )		11217604	1					
ANR	11217797	Condition	vector == NULL	301:12:14615:14628	11217604	0	True				
ANR	11217798	EqualityExpression	vector == NULL		11217604	0		==			
ANR	11217799	Identifier	vector		11217604	0					
ANR	11217800	Identifier	NULL		11217604	1					
ANR	11217801	CompoundStatement		43:28:1600:1600	11217604	1					
ANR	11217802	ExpressionStatement	"fputs ( ""abort: unable to allocate enough memory\\n"" , stderr )"	302:12:14645:14703	11217604	0	True				
ANR	11217803	CallExpression	"fputs ( ""abort: unable to allocate enough memory\\n"" , stderr )"		11217604	0					
ANR	11217804	Callee	fputs		11217604	0					
ANR	11217805	Identifier	fputs		11217604	0					
ANR	11217806	ArgumentList	"""abort: unable to allocate enough memory\\n"""		11217604	1					
ANR	11217807	Argument	"""abort: unable to allocate enough memory\\n"""		11217604	0					
ANR	11217808	PrimaryExpression	"""abort: unable to allocate enough memory\\n"""		11217604	0					
ANR	11217809	Argument	stderr		11217604	1					
ANR	11217810	Identifier	stderr		11217604	0					
ANR	11217811	ExpressionStatement	cleanup ( )	303:12:14717:14726	11217604	1	True				
ANR	11217812	CallExpression	cleanup ( )		11217604	0					
ANR	11217813	Callee	cleanup		11217604	0					
ANR	11217814	Identifier	cleanup		11217604	0					
ANR	11217815	ArgumentList			11217604	1					
ANR	11217816	ExpressionStatement	exit ( 1 )	304:12:14740:14747	11217604	2	True				
ANR	11217817	CallExpression	exit ( 1 )		11217604	0					
ANR	11217818	Callee	exit		11217604	0					
ANR	11217819	Identifier	exit		11217604	0					
ANR	11217820	ArgumentList	1		11217604	1					
ANR	11217821	Argument	1		11217604	0					
ANR	11217822	PrimaryExpression	1		11217604	0					
ANR	11217823	ExpressionStatement	done [ index ] . len = length	308:8:14805:14829	11217604	2	True				
ANR	11217824	AssignmentExpression	done [ index ] . len = length		11217604	0		=			
ANR	11217825	MemberAccess	done [ index ] . len		11217604	0					
ANR	11217826	ArrayIndexing	done [ index ]		11217604	0					
ANR	11217827	Identifier	done		11217604	0					
ANR	11217828	Identifier	index		11217604	1					
ANR	11217829	Identifier	len		11217604	1					
ANR	11217830	Identifier	length		11217604	1					
ANR	11217831	ExpressionStatement	done [ index ] . vec = vector	309:8:14839:14863	11217604	3	True				
ANR	11217832	AssignmentExpression	done [ index ] . vec = vector		11217604	0		=			
ANR	11217833	MemberAccess	done [ index ] . vec		11217604	0					
ANR	11217834	ArrayIndexing	done [ index ]		11217604	0					
ANR	11217835	Identifier	done		11217604	0					
ANR	11217836	Identifier	index		11217604	1					
ANR	11217837	Identifier	vec		11217604	1					
ANR	11217838	Identifier	vector		11217604	1					
ANR	11217839	ExpressionStatement	done [ index ] . vec [ offset ] |= bit	313:4:14898:14928	11217604	13	True				
ANR	11217840	AssignmentExpression	done [ index ] . vec [ offset ] |= bit		11217604	0		|=			
ANR	11217841	ArrayIndexing	done [ index ] . vec [ offset ]		11217604	0					
ANR	11217842	MemberAccess	done [ index ] . vec		11217604	0					
ANR	11217843	ArrayIndexing	done [ index ]		11217604	0					
ANR	11217844	Identifier	done		11217604	0					
ANR	11217845	Identifier	index		11217604	1					
ANR	11217846	Identifier	vec		11217604	1					
ANR	11217847	Identifier	offset		11217604	1					
ANR	11217848	Identifier	bit		11217604	1					
ANR	11217849	ReturnStatement	return 0 ;	314:4:14934:14942	11217604	14	True				
ANR	11217850	PrimaryExpression	0		11217604	0					
ANR	11217851	ReturnType	local int		11217604	1					
ANR	11217852	Identifier	beenhere		11217604	2					
ANR	11217853	ParameterList	"int syms , int len , int left , int mem , int rem"		11217604	3					
ANR	11217854	Parameter	int syms	258:19:12983:12990	11217604	0	True				
ANR	11217855	ParameterType	int		11217604	0					
ANR	11217856	Identifier	syms		11217604	1					
ANR	11217857	Parameter	int len	258:29:12993:12999	11217604	1	True				
ANR	11217858	ParameterType	int		11217604	0					
ANR	11217859	Identifier	len		11217604	1					
ANR	11217860	Parameter	int left	258:38:13002:13009	11217604	2	True				
ANR	11217861	ParameterType	int		11217604	0					
ANR	11217862	Identifier	left		11217604	1					
ANR	11217863	Parameter	int mem	258:48:13012:13018	11217604	3	True				
ANR	11217864	ParameterType	int		11217604	0					
ANR	11217865	Identifier	mem		11217604	1					
ANR	11217866	Parameter	int rem	258:57:13021:13027	11217604	4	True				
ANR	11217867	ParameterType	int		11217604	0					
ANR	11217868	Identifier	rem		11217604	1					
ANR	11217869	CFGEntryNode	ENTRY		11217604		True				
ANR	11217870	CFGExitNode	EXIT		11217604		True				
ANR	11217871	Symbol	* index		11217604						
ANR	11217872	Symbol	realloc		11217604						
ANR	11217873	Symbol	calloc		11217604						
ANR	11217874	Symbol	bit		11217604						
ANR	11217875	Symbol	len		11217604						
ANR	11217876	Symbol	mem		11217604						
ANR	11217877	Symbol	root		11217604						
ANR	11217878	Symbol	vector		11217604						
ANR	11217879	Symbol	rem		11217604						
ANR	11217880	Symbol	INDEX		11217604						
ANR	11217881	Symbol	done [ index ] . vec		11217604						
ANR	11217882	Symbol	done [ index ] . len		11217604						
ANR	11217883	Symbol	* * index		11217604						
ANR	11217884	Symbol	NULL		11217604						
ANR	11217885	Symbol	offset		11217604						
ANR	11217886	Symbol	* done		11217604						
ANR	11217887	Symbol	* done [ index ] . vec		11217604						
ANR	11217888	Symbol	length		11217604						
ANR	11217889	Symbol	index		11217604						
ANR	11217890	Symbol	stderr		11217604						
ANR	11217891	Symbol	done		11217604						
ANR	11217892	Symbol	left		11217604						
ANR	11217893	Symbol	* * done		11217604						
ANR	11217894	Symbol	* offset		11217604						
ANR	11217895	Symbol	syms		11217604						
ANR	11217896	Function	examine	322:0:15272:17707							
ANR	11217897	FunctionDef	"examine (int syms , int len , int left , int mem , int rem)"		11217896	0					
ANR	11217898	CompoundStatement		323:0:15338:17707	11217896	0					
ANR	11217899	IdentifierDeclStatement	int least ;	324:4:15344:15353	11217896	0	True				
ANR	11217900	IdentifierDecl	least		11217896	0					
ANR	11217901	IdentifierDeclType	int		11217896	0					
ANR	11217902	Identifier	least		11217896	1					
ANR	11217903	IdentifierDeclStatement	int most ;	325:4:15419:15427	11217896	1	True				
ANR	11217904	IdentifierDecl	most		11217896	0					
ANR	11217905	IdentifierDeclType	int		11217896	0					
ANR	11217906	Identifier	most		11217896	1					
ANR	11217907	IdentifierDeclStatement	int use ;	326:4:15493:15500	11217896	2	True				
ANR	11217908	IdentifierDecl	use		11217896	0					
ANR	11217909	IdentifierDeclType	int		11217896	0					
ANR	11217910	Identifier	use		11217896	1					
ANR	11217911	IfStatement	if ( syms == left )		11217896	3					
ANR	11217912	Condition	syms == left	329:8:15612:15623	11217896	0	True				
ANR	11217913	EqualityExpression	syms == left		11217896	0		==			
ANR	11217914	Identifier	syms		11217896	0					
ANR	11217915	Identifier	left		11217896	1					
ANR	11217916	CompoundStatement		7:22:287:287	11217896	1					
ANR	11217917	ExpressionStatement	code [ len ] = left	331:8:15674:15690	11217896	0	True				
ANR	11217918	AssignmentExpression	code [ len ] = left		11217896	0		=			
ANR	11217919	ArrayIndexing	code [ len ]		11217896	0					
ANR	11217920	Identifier	code		11217896	0					
ANR	11217921	Identifier	len		11217896	1					
ANR	11217922	Identifier	left		11217896	1					
ANR	11217923	WhileStatement	while ( rem < left )		11217896	1					
ANR	11217924	Condition	rem < left	334:15:15771:15780	11217896	0	True				
ANR	11217925	RelationalExpression	rem < left		11217896	0		<			
ANR	11217926	Identifier	rem		11217896	0					
ANR	11217927	Identifier	left		11217896	1					
ANR	11217928	CompoundStatement		12:27:444:444	11217896	1					
ANR	11217929	ExpressionStatement	left -= rem	335:12:15797:15808	11217896	0	True				
ANR	11217930	AssignmentExpression	left -= rem		11217896	0		-=			
ANR	11217931	Identifier	left		11217896	0					
ANR	11217932	Identifier	rem		11217896	1					
ANR	11217933	ExpressionStatement	rem = 1 << ( len - root )	336:12:15822:15845	11217896	1	True				
ANR	11217934	AssignmentExpression	rem = 1 << ( len - root )		11217896	0		=			
ANR	11217935	Identifier	rem		11217896	0					
ANR	11217936	ShiftExpression	1 << ( len - root )		11217896	1		<<			
ANR	11217937	PrimaryExpression	1		11217896	0					
ANR	11217938	AdditiveExpression	len - root		11217896	1		-			
ANR	11217939	Identifier	len		11217896	0					
ANR	11217940	Identifier	root		11217896	1					
ANR	11217941	ExpressionStatement	mem += rem	337:12:15859:15869	11217896	2	True				
ANR	11217942	AssignmentExpression	mem += rem		11217896	0		+=			
ANR	11217943	Identifier	mem		11217896	0					
ANR	11217944	Identifier	rem		11217896	1					
ANR	11217945	ExpressionStatement	assert ( rem == left )	339:8:15889:15908	11217896	2	True				
ANR	11217946	CallExpression	assert ( rem == left )		11217896	0					
ANR	11217947	Callee	assert		11217896	0					
ANR	11217948	Identifier	assert		11217896	0					
ANR	11217949	ArgumentList	rem == left		11217896	1					
ANR	11217950	Argument	rem == left		11217896	0					
ANR	11217951	EqualityExpression	rem == left		11217896	0		==			
ANR	11217952	Identifier	rem		11217896	0					
ANR	11217953	Identifier	left		11217896	1					
ANR	11217954	IfStatement	if ( mem > large )		11217896	3					
ANR	11217955	Condition	mem > large	342:12:16002:16012	11217896	0	True				
ANR	11217956	RelationalExpression	mem > large		11217896	0		>			
ANR	11217957	Identifier	mem		11217896	0					
ANR	11217958	Identifier	large		11217896	1					
ANR	11217959	CompoundStatement		20:25:676:676	11217896	1					
ANR	11217960	ExpressionStatement	large = mem	343:12:16029:16040	11217896	0	True				
ANR	11217961	AssignmentExpression	large = mem		11217896	0		=			
ANR	11217962	Identifier	large		11217896	0					
ANR	11217963	Identifier	mem		11217896	1					
ANR	11217964	ExpressionStatement	"printf ( ""max %d: "" , mem )"	344:12:16054:16077	11217896	1	True				
ANR	11217965	CallExpression	"printf ( ""max %d: "" , mem )"		11217896	0					
ANR	11217966	Callee	printf		11217896	0					
ANR	11217967	Identifier	printf		11217896	0					
ANR	11217968	ArgumentList	"""max %d: """		11217896	1					
ANR	11217969	Argument	"""max %d: """		11217896	0					
ANR	11217970	PrimaryExpression	"""max %d: """		11217896	0					
ANR	11217971	Argument	mem		11217896	1					
ANR	11217972	Identifier	mem		11217896	0					
ANR	11217973	ForStatement	for ( use = root + 1 ; use <= max ; use ++ )		11217896	2					
ANR	11217974	ForInit	use = root + 1 ;	345:17:16096:16110	11217896	0	True				
ANR	11217975	AssignmentExpression	use = root + 1		11217896	0		=			
ANR	11217976	Identifier	use		11217896	0					
ANR	11217977	AdditiveExpression	root + 1		11217896	1		+			
ANR	11217978	Identifier	root		11217896	0					
ANR	11217979	PrimaryExpression	1		11217896	1					
ANR	11217980	Condition	use <= max	345:33:16112:16121	11217896	1	True				
ANR	11217981	RelationalExpression	use <= max		11217896	0		<=			
ANR	11217982	Identifier	use		11217896	0					
ANR	11217983	Identifier	max		11217896	1					
ANR	11217984	PostIncDecOperationExpression	use ++	345:45:16124:16128	11217896	2	True				
ANR	11217985	Identifier	use		11217896	0					
ANR	11217986	IncDec	++		11217896	1					
ANR	11217987	IfStatement	if ( code [ use ] )		11217896	3					
ANR	11217988	Condition	code [ use ]	346:20:16151:16159	11217896	0	True				
ANR	11217989	ArrayIndexing	code [ use ]		11217896	0					
ANR	11217990	Identifier	code		11217896	0					
ANR	11217991	Identifier	use		11217896	1					
ANR	11217992	ExpressionStatement	"printf ( ""%d[%d] "" , code [ use ] , use )"	347:20:16182:16215	11217896	1	True				
ANR	11217993	CallExpression	"printf ( ""%d[%d] "" , code [ use ] , use )"		11217896	0					
ANR	11217994	Callee	printf		11217896	0					
ANR	11217995	Identifier	printf		11217896	0					
ANR	11217996	ArgumentList	"""%d[%d] """		11217896	1					
ANR	11217997	Argument	"""%d[%d] """		11217896	0					
ANR	11217998	PrimaryExpression	"""%d[%d] """		11217896	0					
ANR	11217999	Argument	code [ use ]		11217896	1					
ANR	11218000	ArrayIndexing	code [ use ]		11217896	0					
ANR	11218001	Identifier	code		11217896	0					
ANR	11218002	Identifier	use		11217896	1					
ANR	11218003	Argument	use		11217896	2					
ANR	11218004	Identifier	use		11217896	0					
ANR	11218005	ExpressionStatement	putchar ( '\\n' )	348:12:16229:16242	11217896	3	True				
ANR	11218006	CallExpression	putchar ( '\\n' )		11217896	0					
ANR	11218007	Callee	putchar		11217896	0					
ANR	11218008	Identifier	putchar		11217896	0					
ANR	11218009	ArgumentList	'\\n'		11217896	1					
ANR	11218010	Argument	'\\n'		11217896	0					
ANR	11218011	PrimaryExpression	'\\n'		11217896	0					
ANR	11218012	ExpressionStatement	fflush ( stdout )	349:12:16256:16270	11217896	4	True				
ANR	11218013	CallExpression	fflush ( stdout )		11217896	0					
ANR	11218014	Callee	fflush		11217896	0					
ANR	11218015	Identifier	fflush		11217896	0					
ANR	11218016	ArgumentList	stdout		11217896	1					
ANR	11218017	Argument	stdout		11217896	0					
ANR	11218018	Identifier	stdout		11217896	0					
ANR	11218019	ExpressionStatement	code [ len ] = 0	353:8:16358:16371	11217896	4	True				
ANR	11218020	AssignmentExpression	code [ len ] = 0		11217896	0		=			
ANR	11218021	ArrayIndexing	code [ len ]		11217896	0					
ANR	11218022	Identifier	code		11217896	0					
ANR	11218023	Identifier	len		11217896	1					
ANR	11218024	PrimaryExpression	0		11217896	1					
ANR	11218025	ReturnStatement	return ;	354:8:16381:16387	11217896	5	True				
ANR	11218026	IfStatement	"if ( beenhere ( syms , len , left , mem , rem ) )"		11217896	4					
ANR	11218027	Condition	"beenhere ( syms , len , left , mem , rem )"	358:8:16439:16473	11217896	0	True				
ANR	11218028	CallExpression	"beenhere ( syms , len , left , mem , rem )"		11217896	0					
ANR	11218029	Callee	beenhere		11217896	0					
ANR	11218030	Identifier	beenhere		11217896	0					
ANR	11218031	ArgumentList	syms		11217896	1					
ANR	11218032	Argument	syms		11217896	0					
ANR	11218033	Identifier	syms		11217896	0					
ANR	11218034	Argument	len		11217896	1					
ANR	11218035	Identifier	len		11217896	0					
ANR	11218036	Argument	left		11217896	2					
ANR	11218037	Identifier	left		11217896	0					
ANR	11218038	Argument	mem		11217896	3					
ANR	11218039	Identifier	mem		11217896	0					
ANR	11218040	Argument	rem		11217896	4					
ANR	11218041	Identifier	rem		11217896	0					
ANR	11218042	ReturnStatement	return ;	359:8:16484:16490	11217896	1	True				
ANR	11218043	ExpressionStatement	least = ( left << 1 ) - syms	363:4:16650:16676	11217896	5	True				
ANR	11218044	AssignmentExpression	least = ( left << 1 ) - syms		11217896	0		=			
ANR	11218045	Identifier	least		11217896	0					
ANR	11218046	AdditiveExpression	( left << 1 ) - syms		11217896	1		-			
ANR	11218047	ShiftExpression	left << 1		11217896	0		<<			
ANR	11218048	Identifier	left		11217896	0					
ANR	11218049	PrimaryExpression	1		11217896	1					
ANR	11218050	Identifier	syms		11217896	1					
ANR	11218051	IfStatement	if ( least < 0 )		11217896	6					
ANR	11218052	Condition	least < 0	364:8:16686:16694	11217896	0	True				
ANR	11218053	RelationalExpression	least < 0		11217896	0		<			
ANR	11218054	Identifier	least		11217896	0					
ANR	11218055	PrimaryExpression	0		11217896	1					
ANR	11218056	ExpressionStatement	least = 0	365:8:16705:16714	11217896	1	True				
ANR	11218057	AssignmentExpression	least = 0		11217896	0		=			
ANR	11218058	Identifier	least		11217896	0					
ANR	11218059	PrimaryExpression	0		11217896	1					
ANR	11218060	ExpressionStatement	most = ( ( ( code_t ) left << ( max - len ) ) - syms ) / ( ( ( code_t ) 1 << ( max - len ) ) - 1 )	370:4:16951:17043	11217896	7	True				
ANR	11218061	AssignmentExpression	most = ( ( ( code_t ) left << ( max - len ) ) - syms ) / ( ( ( code_t ) 1 << ( max - len ) ) - 1 )		11217896	0		=			
ANR	11218062	Identifier	most		11217896	0					
ANR	11218063	MultiplicativeExpression	( ( ( code_t ) left << ( max - len ) ) - syms ) / ( ( ( code_t ) 1 << ( max - len ) ) - 1 )		11217896	1		/			
ANR	11218064	AdditiveExpression	( ( code_t ) left << ( max - len ) ) - syms		11217896	0		-			
ANR	11218065	ShiftExpression	( code_t ) left << ( max - len )		11217896	0		<<			
ANR	11218066	CastExpression	( code_t ) left		11217896	0					
ANR	11218067	CastTarget	code_t		11217896	0					
ANR	11218068	Identifier	left		11217896	1					
ANR	11218069	AdditiveExpression	max - len		11217896	1		-			
ANR	11218070	Identifier	max		11217896	0					
ANR	11218071	Identifier	len		11217896	1					
ANR	11218072	Identifier	syms		11217896	1					
ANR	11218073	AdditiveExpression	( ( code_t ) 1 << ( max - len ) ) - 1		11217896	1		-			
ANR	11218074	ShiftExpression	( code_t ) 1 << ( max - len )		11217896	0		<<			
ANR	11218075	CastExpression	( code_t ) 1		11217896	0					
ANR	11218076	CastTarget	code_t		11217896	0					
ANR	11218077	PrimaryExpression	1		11217896	1					
ANR	11218078	AdditiveExpression	max - len		11217896	1		-			
ANR	11218079	Identifier	max		11217896	0					
ANR	11218080	Identifier	len		11217896	1					
ANR	11218081	PrimaryExpression	1		11217896	1					
ANR	11218082	ExpressionStatement	use = least	374:4:17121:17132	11217896	8	True				
ANR	11218083	AssignmentExpression	use = least		11217896	0		=			
ANR	11218084	Identifier	use		11217896	0					
ANR	11218085	Identifier	least		11217896	1					
ANR	11218086	WhileStatement	while ( rem < use )		11217896	9					
ANR	11218087	Condition	rem < use	375:11:17145:17153	11217896	0	True				
ANR	11218088	RelationalExpression	rem < use		11217896	0		<			
ANR	11218089	Identifier	rem		11217896	0					
ANR	11218090	Identifier	use		11217896	1					
ANR	11218091	CompoundStatement		53:22:1817:1817	11217896	1					
ANR	11218092	ExpressionStatement	use -= rem	376:8:17166:17176	11217896	0	True				
ANR	11218093	AssignmentExpression	use -= rem		11217896	0		-=			
ANR	11218094	Identifier	use		11217896	0					
ANR	11218095	Identifier	rem		11217896	1					
ANR	11218096	ExpressionStatement	rem = 1 << ( len - root )	377:8:17186:17209	11217896	1	True				
ANR	11218097	AssignmentExpression	rem = 1 << ( len - root )		11217896	0		=			
ANR	11218098	Identifier	rem		11217896	0					
ANR	11218099	ShiftExpression	1 << ( len - root )		11217896	1		<<			
ANR	11218100	PrimaryExpression	1		11217896	0					
ANR	11218101	AdditiveExpression	len - root		11217896	1		-			
ANR	11218102	Identifier	len		11217896	0					
ANR	11218103	Identifier	root		11217896	1					
ANR	11218104	ExpressionStatement	mem += rem	378:8:17219:17229	11217896	2	True				
ANR	11218105	AssignmentExpression	mem += rem		11217896	0		+=			
ANR	11218106	Identifier	mem		11217896	0					
ANR	11218107	Identifier	rem		11217896	1					
ANR	11218108	ExpressionStatement	rem -= use	380:4:17241:17251	11217896	10	True				
ANR	11218109	AssignmentExpression	rem -= use		11217896	0		-=			
ANR	11218110	Identifier	rem		11217896	0					
ANR	11218111	Identifier	use		11217896	1					
ANR	11218112	ForStatement	for ( use = least ; use <= most ; use ++ )		11217896	11					
ANR	11218113	ForInit	use = least ;	383:9:17328:17339	11217896	0	True				
ANR	11218114	AssignmentExpression	use = least		11217896	0		=			
ANR	11218115	Identifier	use		11217896	0					
ANR	11218116	Identifier	least		11217896	1					
ANR	11218117	Condition	use <= most	383:22:17341:17351	11217896	1	True				
ANR	11218118	RelationalExpression	use <= most		11217896	0		<=			
ANR	11218119	Identifier	use		11217896	0					
ANR	11218120	Identifier	most		11217896	1					
ANR	11218121	PostIncDecOperationExpression	use ++	383:35:17354:17358	11217896	2	True				
ANR	11218122	Identifier	use		11217896	0					
ANR	11218123	IncDec	++		11217896	1					
ANR	11218124	CompoundStatement		61:42:2022:2022	11217896	3					
ANR	11218125	ExpressionStatement	code [ len ] = use	384:8:17371:17386	11217896	0	True				
ANR	11218126	AssignmentExpression	code [ len ] = use		11217896	0		=			
ANR	11218127	ArrayIndexing	code [ len ]		11217896	0					
ANR	11218128	Identifier	code		11217896	0					
ANR	11218129	Identifier	len		11217896	1					
ANR	11218130	Identifier	use		11217896	1					
ANR	11218131	ExpressionStatement	"examine ( syms - use , len + 1 , ( left - use ) << 1 , mem + ( rem ? 1 << ( len - root ) : 0 ) , rem << 1 )"	385:8:17396:17506	11217896	1	True				
ANR	11218132	CallExpression	"examine ( syms - use , len + 1 , ( left - use ) << 1 , mem + ( rem ? 1 << ( len - root ) : 0 ) , rem << 1 )"		11217896	0					
ANR	11218133	Callee	examine		11217896	0					
ANR	11218134	Identifier	examine		11217896	0					
ANR	11218135	ArgumentList	syms - use		11217896	1					
ANR	11218136	Argument	syms - use		11217896	0					
ANR	11218137	AdditiveExpression	syms - use		11217896	0		-			
ANR	11218138	Identifier	syms		11217896	0					
ANR	11218139	Identifier	use		11217896	1					
ANR	11218140	Argument	len + 1		11217896	1					
ANR	11218141	AdditiveExpression	len + 1		11217896	0		+			
ANR	11218142	Identifier	len		11217896	0					
ANR	11218143	PrimaryExpression	1		11217896	1					
ANR	11218144	Argument	( left - use ) << 1		11217896	2					
ANR	11218145	ShiftExpression	( left - use ) << 1		11217896	0		<<			
ANR	11218146	AdditiveExpression	left - use		11217896	0		-			
ANR	11218147	Identifier	left		11217896	0					
ANR	11218148	Identifier	use		11217896	1					
ANR	11218149	PrimaryExpression	1		11217896	1					
ANR	11218150	Argument	mem + ( rem ? 1 << ( len - root ) : 0 )		11217896	3					
ANR	11218151	AdditiveExpression	mem + ( rem ? 1 << ( len - root ) : 0 )		11217896	0		+			
ANR	11218152	Identifier	mem		11217896	0					
ANR	11218153	ConditionalExpression	rem ? 1 << ( len - root ) : 0		11217896	1					
ANR	11218154	Condition	rem		11217896	0					
ANR	11218155	Identifier	rem		11217896	0					
ANR	11218156	ShiftExpression	1 << ( len - root )		11217896	1		<<			
ANR	11218157	PrimaryExpression	1		11217896	0					
ANR	11218158	AdditiveExpression	len - root		11217896	1		-			
ANR	11218159	Identifier	len		11217896	0					
ANR	11218160	Identifier	root		11217896	1					
ANR	11218161	PrimaryExpression	0		11217896	2					
ANR	11218162	Argument	rem << 1		11217896	4					
ANR	11218163	ShiftExpression	rem << 1		11217896	0		<<			
ANR	11218164	Identifier	rem		11217896	0					
ANR	11218165	PrimaryExpression	1		11217896	1					
ANR	11218166	IfStatement	if ( rem == 0 )		11217896	2					
ANR	11218167	Condition	rem == 0	387:12:17520:17527	11217896	0	True				
ANR	11218168	EqualityExpression	rem == 0		11217896	0		==			
ANR	11218169	Identifier	rem		11217896	0					
ANR	11218170	PrimaryExpression	0		11217896	1					
ANR	11218171	CompoundStatement		65:22:2191:2191	11217896	1					
ANR	11218172	ExpressionStatement	rem = 1 << ( len - root )	388:12:17544:17567	11217896	0	True				
ANR	11218173	AssignmentExpression	rem = 1 << ( len - root )		11217896	0		=			
ANR	11218174	Identifier	rem		11217896	0					
ANR	11218175	ShiftExpression	1 << ( len - root )		11217896	1		<<			
ANR	11218176	PrimaryExpression	1		11217896	0					
ANR	11218177	AdditiveExpression	len - root		11217896	1		-			
ANR	11218178	Identifier	len		11217896	0					
ANR	11218179	Identifier	root		11217896	1					
ANR	11218180	ExpressionStatement	mem += rem	389:12:17581:17591	11217896	1	True				
ANR	11218181	AssignmentExpression	mem += rem		11217896	0		+=			
ANR	11218182	Identifier	mem		11217896	0					
ANR	11218183	Identifier	rem		11217896	1					
ANR	11218184	ExpressionStatement	rem --	391:8:17611:17616	11217896	3	True				
ANR	11218185	PostIncDecOperationExpression	rem --		11217896	0					
ANR	11218186	Identifier	rem		11217896	0					
ANR	11218187	IncDec	--		11217896	1					
ANR	11218188	ExpressionStatement	code [ len ] = 0	395:4:17692:17705	11217896	12	True				
ANR	11218189	AssignmentExpression	code [ len ] = 0		11217896	0		=			
ANR	11218190	ArrayIndexing	code [ len ]		11217896	0					
ANR	11218191	Identifier	code		11217896	0					
ANR	11218192	Identifier	len		11217896	1					
ANR	11218193	PrimaryExpression	0		11217896	1					
ANR	11218194	ReturnType	local void		11217896	1					
ANR	11218195	Identifier	examine		11217896	2					
ANR	11218196	ParameterList	"int syms , int len , int left , int mem , int rem"		11217896	3					
ANR	11218197	Parameter	int syms	322:19:15291:15298	11217896	0	True				
ANR	11218198	ParameterType	int		11217896	0					
ANR	11218199	Identifier	syms		11217896	1					
ANR	11218200	Parameter	int len	322:29:15301:15307	11217896	1	True				
ANR	11218201	ParameterType	int		11217896	0					
ANR	11218202	Identifier	len		11217896	1					
ANR	11218203	Parameter	int left	322:38:15310:15317	11217896	2	True				
ANR	11218204	ParameterType	int		11217896	0					
ANR	11218205	Identifier	left		11217896	1					
ANR	11218206	Parameter	int mem	322:48:15320:15326	11217896	3	True				
ANR	11218207	ParameterType	int		11217896	0					
ANR	11218208	Identifier	mem		11217896	1					
ANR	11218209	Parameter	int rem	322:57:15329:15335	11217896	4	True				
ANR	11218210	ParameterType	int		11217896	0					
ANR	11218211	Identifier	rem		11217896	1					
ANR	11218212	CFGEntryNode	ENTRY		11217896		True				
ANR	11218213	CFGExitNode	EXIT		11217896		True				
ANR	11218214	Symbol	code		11217896						
ANR	11218215	Symbol	large		11217896						
ANR	11218216	Symbol	stdout		11217896						
ANR	11218217	Symbol	max		11217896						
ANR	11218218	Symbol	use		11217896						
ANR	11218219	Symbol	least		11217896						
ANR	11218220	Symbol	most		11217896						
ANR	11218221	Symbol	* use		11217896						
ANR	11218222	Symbol	len		11217896						
ANR	11218223	Symbol	mem		11217896						
ANR	11218224	Symbol	left		11217896						
ANR	11218225	Symbol	root		11217896						
ANR	11218226	Symbol	syms		11217896						
ANR	11218227	Symbol	rem		11217896						
ANR	11218228	Symbol	beenhere		11217896						
ANR	11218229	Symbol	* code		11217896						
ANR	11218230	Symbol	* len		11217896						
ANR	11218231	Function	enough	403:0:18081:19411							
ANR	11218232	FunctionDef	enough (int syms)		11218231	0					
ANR	11218233	CompoundStatement		404:0:18109:19411	11218231	0					
ANR	11218234	IdentifierDeclStatement	int n ;	405:4:18115:18120	11218231	0	True				
ANR	11218235	IdentifierDecl	n		11218231	0					
ANR	11218236	IdentifierDeclType	int		11218231	0					
ANR	11218237	Identifier	n		11218231	1					
ANR	11218238	IdentifierDeclStatement	int left ;	406:4:18185:18193	11218231	1	True				
ANR	11218239	IdentifierDecl	left		11218231	0					
ANR	11218240	IdentifierDeclType	int		11218231	0					
ANR	11218241	Identifier	left		11218231	1					
ANR	11218242	IdentifierDeclStatement	size_t index ;	407:4:18260:18272	11218231	2	True				
ANR	11218243	IdentifierDecl	index		11218231	0					
ANR	11218244	IdentifierDeclType	size_t		11218231	0					
ANR	11218245	Identifier	index		11218231	1					
ANR	11218246	ForStatement	for ( n = 0 ; n <= max ; n ++ )		11218231	3					
ANR	11218247	ForInit	n = 0 ;	410:9:18344:18349	11218231	0	True				
ANR	11218248	AssignmentExpression	n = 0		11218231	0		=			
ANR	11218249	Identifier	n		11218231	0					
ANR	11218250	PrimaryExpression	0		11218231	1					
ANR	11218251	Condition	n <= max	410:16:18351:18358	11218231	1	True				
ANR	11218252	RelationalExpression	n <= max		11218231	0		<=			
ANR	11218253	Identifier	n		11218231	0					
ANR	11218254	Identifier	max		11218231	1					
ANR	11218255	PostIncDecOperationExpression	n ++	410:26:18361:18363	11218231	2	True				
ANR	11218256	Identifier	n		11218231	0					
ANR	11218257	IncDec	++		11218231	1					
ANR	11218258	ExpressionStatement	code [ n ] = 0	411:8:18374:18385	11218231	3	True				
ANR	11218259	AssignmentExpression	code [ n ] = 0		11218231	0		=			
ANR	11218260	ArrayIndexing	code [ n ]		11218231	0					
ANR	11218261	Identifier	code		11218231	0					
ANR	11218262	Identifier	n		11218231	1					
ANR	11218263	PrimaryExpression	0		11218231	1					
ANR	11218264	ExpressionStatement	large = 1 << root	414:4:18446:18463	11218231	4	True				
ANR	11218265	AssignmentExpression	large = 1 << root		11218231	0		=			
ANR	11218266	Identifier	large		11218231	0					
ANR	11218267	ShiftExpression	1 << root		11218231	1		<<			
ANR	11218268	PrimaryExpression	1		11218231	0					
ANR	11218269	Identifier	root		11218231	1					
ANR	11218270	IfStatement	if ( root < max )		11218231	5					
ANR	11218271	Condition	root < max	415:8:18503:18512	11218231	0	True				
ANR	11218272	RelationalExpression	root < max		11218231	0		<			
ANR	11218273	Identifier	root		11218231	0					
ANR	11218274	Identifier	max		11218231	1					
ANR	11218275	ForStatement	for ( n = 3 ; n <= syms ; n ++ )		11218231	1					
ANR	11218276	ForInit	n = 3 ;	416:13:18587:18592	11218231	0	True				
ANR	11218277	AssignmentExpression	n = 3		11218231	0		=			
ANR	11218278	Identifier	n		11218231	0					
ANR	11218279	PrimaryExpression	3		11218231	1					
ANR	11218280	Condition	n <= syms	416:20:18594:18602	11218231	1	True				
ANR	11218281	RelationalExpression	n <= syms		11218231	0		<=			
ANR	11218282	Identifier	n		11218231	0					
ANR	11218283	Identifier	syms		11218231	1					
ANR	11218284	PostIncDecOperationExpression	n ++	416:31:18605:18607	11218231	2	True				
ANR	11218285	Identifier	n		11218231	0					
ANR	11218286	IncDec	++		11218231	1					
ANR	11218287	ForStatement	for ( left = 2 ; left < n ; left += 2 )		11218231	3					
ANR	11218288	ForInit	left = 2 ;	417:17:18627:18635	11218231	0	True				
ANR	11218289	AssignmentExpression	left = 2		11218231	0		=			
ANR	11218290	Identifier	left		11218231	0					
ANR	11218291	PrimaryExpression	2		11218231	1					
ANR	11218292	Condition	left < n	417:27:18637:18644	11218231	1	True				
ANR	11218293	RelationalExpression	left < n		11218231	0		<			
ANR	11218294	Identifier	left		11218231	0					
ANR	11218295	Identifier	n		11218231	1					
ANR	11218296	AssignmentExpression	left += 2	417:37:18647:18655	11218231	2	True	+=			
ANR	11218297	Identifier	left		11218231	0					
ANR	11218298	PrimaryExpression	2		11218231	1					
ANR	11218299	CompoundStatement		15:12:560:560	11218231	3					
ANR	11218300	ExpressionStatement	"index = INDEX ( n , left , root + 1 )"	421:16:18828:18860	11218231	0	True				
ANR	11218301	AssignmentExpression	"index = INDEX ( n , left , root + 1 )"		11218231	0		=			
ANR	11218302	Identifier	index		11218231	0					
ANR	11218303	CallExpression	"INDEX ( n , left , root + 1 )"		11218231	1					
ANR	11218304	Callee	INDEX		11218231	0					
ANR	11218305	Identifier	INDEX		11218231	0					
ANR	11218306	ArgumentList	n		11218231	1					
ANR	11218307	Argument	n		11218231	0					
ANR	11218308	Identifier	n		11218231	0					
ANR	11218309	Argument	left		11218231	1					
ANR	11218310	Identifier	left		11218231	0					
ANR	11218311	Argument	root + 1		11218231	2					
ANR	11218312	AdditiveExpression	root + 1		11218231	0		+			
ANR	11218313	Identifier	root		11218231	0					
ANR	11218314	PrimaryExpression	1		11218231	1					
ANR	11218315	IfStatement	if ( root + 1 < max && num [ index ] )		11218231	1					
ANR	11218316	Condition	root + 1 < max && num [ index ]	422:20:18882:18909	11218231	0	True				
ANR	11218317	AndExpression	root + 1 < max && num [ index ]		11218231	0		&&			
ANR	11218318	RelationalExpression	root + 1 < max		11218231	0		<			
ANR	11218319	AdditiveExpression	root + 1		11218231	0		+			
ANR	11218320	Identifier	root		11218231	0					
ANR	11218321	PrimaryExpression	1		11218231	1					
ANR	11218322	Identifier	max		11218231	1					
ANR	11218323	ArrayIndexing	num [ index ]		11218231	1					
ANR	11218324	Identifier	num		11218231	0					
ANR	11218325	Identifier	index		11218231	1					
ANR	11218326	ExpressionStatement	"examine ( n , root + 1 , left , 1 << root , 0 )"	423:20:18959:18999	11218231	1	True				
ANR	11218327	CallExpression	"examine ( n , root + 1 , left , 1 << root , 0 )"		11218231	0					
ANR	11218328	Callee	examine		11218231	0					
ANR	11218329	Identifier	examine		11218231	0					
ANR	11218330	ArgumentList	n		11218231	1					
ANR	11218331	Argument	n		11218231	0					
ANR	11218332	Identifier	n		11218231	0					
ANR	11218333	Argument	root + 1		11218231	1					
ANR	11218334	AdditiveExpression	root + 1		11218231	0		+			
ANR	11218335	Identifier	root		11218231	0					
ANR	11218336	PrimaryExpression	1		11218231	1					
ANR	11218337	Argument	left		11218231	2					
ANR	11218338	Identifier	left		11218231	0					
ANR	11218339	Argument	1 << root		11218231	3					
ANR	11218340	ShiftExpression	1 << root		11218231	0		<<			
ANR	11218341	PrimaryExpression	1		11218231	0					
ANR	11218342	Identifier	root		11218231	1					
ANR	11218343	Argument	0		11218231	4					
ANR	11218344	PrimaryExpression	0		11218231	0					
ANR	11218345	IfStatement	if ( num [ index - 1 ] && n <= left << 1 )		11218231	2					
ANR	11218346	Condition	num [ index - 1 ] && n <= left << 1	427:20:19174:19205	11218231	0	True				
ANR	11218347	AndExpression	num [ index - 1 ] && n <= left << 1		11218231	0		&&			
ANR	11218348	ArrayIndexing	num [ index - 1 ]		11218231	0					
ANR	11218349	Identifier	num		11218231	0					
ANR	11218350	AdditiveExpression	index - 1		11218231	1		-			
ANR	11218351	Identifier	index		11218231	0					
ANR	11218352	PrimaryExpression	1		11218231	1					
ANR	11218353	RelationalExpression	n <= left << 1		11218231	1		<=			
ANR	11218354	Identifier	n		11218231	0					
ANR	11218355	ShiftExpression	left << 1		11218231	1		<<			
ANR	11218356	Identifier	left		11218231	0					
ANR	11218357	PrimaryExpression	1		11218231	1					
ANR	11218358	ExpressionStatement	"examine ( ( n - left ) << 1 , root + 1 , ( n - left ) << 1 , 1 << root , 0 )"	428:20:19228:19321	11218231	1	True				
ANR	11218359	CallExpression	"examine ( ( n - left ) << 1 , root + 1 , ( n - left ) << 1 , 1 << root , 0 )"		11218231	0					
ANR	11218360	Callee	examine		11218231	0					
ANR	11218361	Identifier	examine		11218231	0					
ANR	11218362	ArgumentList	( n - left ) << 1		11218231	1					
ANR	11218363	Argument	( n - left ) << 1		11218231	0					
ANR	11218364	ShiftExpression	( n - left ) << 1		11218231	0		<<			
ANR	11218365	AdditiveExpression	n - left		11218231	0		-			
ANR	11218366	Identifier	n		11218231	0					
ANR	11218367	Identifier	left		11218231	1					
ANR	11218368	PrimaryExpression	1		11218231	1					
ANR	11218369	Argument	root + 1		11218231	1					
ANR	11218370	AdditiveExpression	root + 1		11218231	0		+			
ANR	11218371	Identifier	root		11218231	0					
ANR	11218372	PrimaryExpression	1		11218231	1					
ANR	11218373	Argument	( n - left ) << 1		11218231	2					
ANR	11218374	ShiftExpression	( n - left ) << 1		11218231	0		<<			
ANR	11218375	AdditiveExpression	n - left		11218231	0		-			
ANR	11218376	Identifier	n		11218231	0					
ANR	11218377	Identifier	left		11218231	1					
ANR	11218378	PrimaryExpression	1		11218231	1					
ANR	11218379	Argument	1 << root		11218231	3					
ANR	11218380	ShiftExpression	1 << root		11218231	0		<<			
ANR	11218381	PrimaryExpression	1		11218231	0					
ANR	11218382	Identifier	root		11218231	1					
ANR	11218383	Argument	0		11218231	4					
ANR	11218384	PrimaryExpression	0		11218231	0					
ANR	11218385	ExpressionStatement	"printf ( ""done: maximum of %d table entries\\n"" , large )"	433:4:19357:19409	11218231	6	True				
ANR	11218386	CallExpression	"printf ( ""done: maximum of %d table entries\\n"" , large )"		11218231	0					
ANR	11218387	Callee	printf		11218231	0					
ANR	11218388	Identifier	printf		11218231	0					
ANR	11218389	ArgumentList	"""done: maximum of %d table entries\\n"""		11218231	1					
ANR	11218390	Argument	"""done: maximum of %d table entries\\n"""		11218231	0					
ANR	11218391	PrimaryExpression	"""done: maximum of %d table entries\\n"""		11218231	0					
ANR	11218392	Argument	large		11218231	1					
ANR	11218393	Identifier	large		11218231	0					
ANR	11218394	ReturnType	local void		11218231	1					
ANR	11218395	Identifier	enough		11218231	2					
ANR	11218396	ParameterList	int syms		11218231	3					
ANR	11218397	Parameter	int syms	403:18:18099:18106	11218231	0	True				
ANR	11218398	ParameterType	int		11218231	0					
ANR	11218399	Identifier	syms		11218231	1					
ANR	11218400	CFGEntryNode	ENTRY		11218231		True				
ANR	11218401	CFGExitNode	EXIT		11218231		True				
ANR	11218402	Symbol	code		11218231						
ANR	11218403	Symbol	large		11218231						
ANR	11218404	Symbol	max		11218231						
ANR	11218405	Symbol	num		11218231						
ANR	11218406	Symbol	* index		11218231						
ANR	11218407	Symbol	index		11218231						
ANR	11218408	Symbol	n		11218231						
ANR	11218409	Symbol	* num		11218231						
ANR	11218410	Symbol	left		11218231						
ANR	11218411	Symbol	root		11218231						
ANR	11218412	Symbol	* n		11218231						
ANR	11218413	Symbol	syms		11218231						
ANR	11218414	Symbol	INDEX		11218231						
ANR	11218415	Symbol	* code		11218231						
ANR	11218416	Function	main	458:0:20604:24336							
ANR	11218417	FunctionDef	"main (int argc , char * * argv)"		11218416	0					
ANR	11218418	CompoundStatement		459:0:20636:24336	11218416	0					
ANR	11218419	IdentifierDeclStatement	int syms ;	460:4:20642:20650	11218416	0	True				
ANR	11218420	IdentifierDecl	syms		11218416	0					
ANR	11218421	IdentifierDeclType	int		11218416	0					
ANR	11218422	Identifier	syms		11218416	1					
ANR	11218423	IdentifierDeclStatement	int n ;	461:4:20704:20709	11218416	1	True				
ANR	11218424	IdentifierDecl	n		11218416	0					
ANR	11218425	IdentifierDeclType	int		11218416	0					
ANR	11218426	Identifier	n		11218416	1					
ANR	11218427	IdentifierDeclStatement	big_t got ;	462:4:20773:20782	11218416	2	True				
ANR	11218428	IdentifierDecl	got		11218416	0					
ANR	11218429	IdentifierDeclType	big_t		11218416	0					
ANR	11218430	Identifier	got		11218416	1					
ANR	11218431	IdentifierDeclStatement	big_t sum ;	463:4:20827:20836	11218416	3	True				
ANR	11218432	IdentifierDecl	sum		11218416	0					
ANR	11218433	IdentifierDeclType	big_t		11218416	0					
ANR	11218434	Identifier	sum		11218416	1					
ANR	11218435	IdentifierDeclStatement	code_t word ;	464:4:20892:20903	11218416	4	True				
ANR	11218436	IdentifierDecl	word		11218416	0					
ANR	11218437	IdentifierDeclType	code_t		11218416	0					
ANR	11218438	Identifier	word		11218416	1					
ANR	11218439	ExpressionStatement	code = NULL	467:4:20990:21001	11218416	5	True				
ANR	11218440	AssignmentExpression	code = NULL		11218416	0		=			
ANR	11218441	Identifier	code		11218416	0					
ANR	11218442	Identifier	NULL		11218416	1					
ANR	11218443	ExpressionStatement	num = NULL	468:4:21007:21017	11218416	6	True				
ANR	11218444	AssignmentExpression	num = NULL		11218416	0		=			
ANR	11218445	Identifier	num		11218416	0					
ANR	11218446	Identifier	NULL		11218416	1					
ANR	11218447	ExpressionStatement	done = NULL	469:4:21023:21034	11218416	7	True				
ANR	11218448	AssignmentExpression	done = NULL		11218416	0		=			
ANR	11218449	Identifier	done		11218416	0					
ANR	11218450	Identifier	NULL		11218416	1					
ANR	11218451	ExpressionStatement	syms = 286	472:4:21111:21121	11218416	8	True				
ANR	11218452	AssignmentExpression	syms = 286		11218416	0		=			
ANR	11218453	Identifier	syms		11218416	0					
ANR	11218454	PrimaryExpression	286		11218416	1					
ANR	11218455	ExpressionStatement	root = 9	473:4:21127:21135	11218416	9	True				
ANR	11218456	AssignmentExpression	root = 9		11218416	0		=			
ANR	11218457	Identifier	root		11218416	0					
ANR	11218458	PrimaryExpression	9		11218416	1					
ANR	11218459	ExpressionStatement	max = 15	474:4:21141:21149	11218416	10	True				
ANR	11218460	AssignmentExpression	max = 15		11218416	0		=			
ANR	11218461	Identifier	max		11218416	0					
ANR	11218462	PrimaryExpression	15		11218416	1					
ANR	11218463	IfStatement	if ( argc > 1 )		11218416	11					
ANR	11218464	Condition	argc > 1	475:8:21159:21166	11218416	0	True				
ANR	11218465	RelationalExpression	argc > 1		11218416	0		>			
ANR	11218466	Identifier	argc		11218416	0					
ANR	11218467	PrimaryExpression	1		11218416	1					
ANR	11218468	CompoundStatement		17:18:532:532	11218416	1					
ANR	11218469	ExpressionStatement	syms = atoi ( argv [ 1 ] )	476:8:21179:21199	11218416	0	True				
ANR	11218470	AssignmentExpression	syms = atoi ( argv [ 1 ] )		11218416	0		=			
ANR	11218471	Identifier	syms		11218416	0					
ANR	11218472	CallExpression	atoi ( argv [ 1 ] )		11218416	1					
ANR	11218473	Callee	atoi		11218416	0					
ANR	11218474	Identifier	atoi		11218416	0					
ANR	11218475	ArgumentList	argv [ 1 ]		11218416	1					
ANR	11218476	Argument	argv [ 1 ]		11218416	0					
ANR	11218477	ArrayIndexing	argv [ 1 ]		11218416	0					
ANR	11218478	Identifier	argv		11218416	0					
ANR	11218479	PrimaryExpression	1		11218416	1					
ANR	11218480	IfStatement	if ( argc > 2 )		11218416	1					
ANR	11218481	Condition	argc > 2	477:12:21213:21220	11218416	0	True				
ANR	11218482	RelationalExpression	argc > 2		11218416	0		>			
ANR	11218483	Identifier	argc		11218416	0					
ANR	11218484	PrimaryExpression	2		11218416	1					
ANR	11218485	CompoundStatement		19:22:586:586	11218416	1					
ANR	11218486	ExpressionStatement	root = atoi ( argv [ 2 ] )	478:12:21237:21257	11218416	0	True				
ANR	11218487	AssignmentExpression	root = atoi ( argv [ 2 ] )		11218416	0		=			
ANR	11218488	Identifier	root		11218416	0					
ANR	11218489	CallExpression	atoi ( argv [ 2 ] )		11218416	1					
ANR	11218490	Callee	atoi		11218416	0					
ANR	11218491	Identifier	atoi		11218416	0					
ANR	11218492	ArgumentList	argv [ 2 ]		11218416	1					
ANR	11218493	Argument	argv [ 2 ]		11218416	0					
ANR	11218494	ArrayIndexing	argv [ 2 ]		11218416	0					
ANR	11218495	Identifier	argv		11218416	0					
ANR	11218496	PrimaryExpression	2		11218416	1					
ANR	11218497	IfStatement	if ( argc > 3 )		11218416	1					
ANR	11218498	Condition	argc > 3	479:16:21275:21282	11218416	0	True				
ANR	11218499	RelationalExpression	argc > 3		11218416	0		>			
ANR	11218500	Identifier	argc		11218416	0					
ANR	11218501	PrimaryExpression	3		11218416	1					
ANR	11218502	ExpressionStatement	max = atoi ( argv [ 3 ] )	480:16:21301:21320	11218416	1	True				
ANR	11218503	AssignmentExpression	max = atoi ( argv [ 3 ] )		11218416	0		=			
ANR	11218504	Identifier	max		11218416	0					
ANR	11218505	CallExpression	atoi ( argv [ 3 ] )		11218416	1					
ANR	11218506	Callee	atoi		11218416	0					
ANR	11218507	Identifier	atoi		11218416	0					
ANR	11218508	ArgumentList	argv [ 3 ]		11218416	1					
ANR	11218509	Argument	argv [ 3 ]		11218416	0					
ANR	11218510	ArrayIndexing	argv [ 3 ]		11218416	0					
ANR	11218511	Identifier	argv		11218416	0					
ANR	11218512	PrimaryExpression	3		11218416	1					
ANR	11218513	IfStatement	if ( argc > 4 || syms < 2 || root < 1 || max < 1 )		11218416	12					
ANR	11218514	Condition	argc > 4 || syms < 2 || root < 1 || max < 1	483:8:21346:21388	11218416	0	True				
ANR	11218515	OrExpression	argc > 4 || syms < 2 || root < 1 || max < 1		11218416	0		||			
ANR	11218516	RelationalExpression	argc > 4		11218416	0		>			
ANR	11218517	Identifier	argc		11218416	0					
ANR	11218518	PrimaryExpression	4		11218416	1					
ANR	11218519	OrExpression	syms < 2 || root < 1 || max < 1		11218416	1		||			
ANR	11218520	RelationalExpression	syms < 2		11218416	0		<			
ANR	11218521	Identifier	syms		11218416	0					
ANR	11218522	PrimaryExpression	2		11218416	1					
ANR	11218523	OrExpression	root < 1 || max < 1		11218416	1		||			
ANR	11218524	RelationalExpression	root < 1		11218416	0		<			
ANR	11218525	Identifier	root		11218416	0					
ANR	11218526	PrimaryExpression	1		11218416	1					
ANR	11218527	RelationalExpression	max < 1		11218416	1		<			
ANR	11218528	Identifier	max		11218416	0					
ANR	11218529	PrimaryExpression	1		11218416	1					
ANR	11218530	CompoundStatement		25:53:754:754	11218416	1					
ANR	11218531	ExpressionStatement	"fputs ( ""invalid arguments, need: [sym >= 2 [root >= 1 [max >= 1]]]\\n"" , stderr )"	484:8:21401:21492	11218416	0	True				
ANR	11218532	CallExpression	"fputs ( ""invalid arguments, need: [sym >= 2 [root >= 1 [max >= 1]]]\\n"" , stderr )"		11218416	0					
ANR	11218533	Callee	fputs		11218416	0					
ANR	11218534	Identifier	fputs		11218416	0					
ANR	11218535	ArgumentList	"""invalid arguments, need: [sym >= 2 [root >= 1 [max >= 1]]]\\n"""		11218416	1					
ANR	11218536	Argument	"""invalid arguments, need: [sym >= 2 [root >= 1 [max >= 1]]]\\n"""		11218416	0					
ANR	11218537	PrimaryExpression	"""invalid arguments, need: [sym >= 2 [root >= 1 [max >= 1]]]\\n"""		11218416	0					
ANR	11218538	Argument	stderr		11218416	1					
ANR	11218539	Identifier	stderr		11218416	0					
ANR	11218540	ReturnStatement	return 1 ;	486:8:21502:21510	11218416	1	True				
ANR	11218541	PrimaryExpression	1		11218416	0					
ANR	11218542	IfStatement	if ( max > syms - 1 )		11218416	13					
ANR	11218543	Condition	max > syms - 1	490:8:21597:21610	11218416	0	True				
ANR	11218544	RelationalExpression	max > syms - 1		11218416	0		>			
ANR	11218545	Identifier	max		11218416	0					
ANR	11218546	AdditiveExpression	syms - 1		11218416	1		-			
ANR	11218547	Identifier	syms		11218416	0					
ANR	11218548	PrimaryExpression	1		11218416	1					
ANR	11218549	ExpressionStatement	max = syms - 1	491:8:21621:21635	11218416	1	True				
ANR	11218550	AssignmentExpression	max = syms - 1		11218416	0		=			
ANR	11218551	Identifier	max		11218416	0					
ANR	11218552	AdditiveExpression	syms - 1		11218416	1		-			
ANR	11218553	Identifier	syms		11218416	0					
ANR	11218554	PrimaryExpression	1		11218416	1					
ANR	11218555	ForStatement	"for ( n = 0 , word = 1 ; word ; n ++ , word <<= 1 )"		11218416	14					
ANR	11218556	ForInit	"n = 0 , word = 1 ;"	494:9:21698:21713	11218416	0	True				
ANR	11218557	Expression	"n = 0 , word = 1"		11218416	0					
ANR	11218558	AssignmentExpression	n = 0		11218416	0		=			
ANR	11218559	Identifier	n		11218416	0					
ANR	11218560	PrimaryExpression	0		11218416	1					
ANR	11218561	AssignmentExpression	word = 1		11218416	1		=			
ANR	11218562	Identifier	word		11218416	0					
ANR	11218563	PrimaryExpression	1		11218416	1					
ANR	11218564	Condition	word	494:26:21715:21718	11218416	1	True				
ANR	11218565	Identifier	word		11218416	0					
ANR	11218566	Expression	"n ++ , word <<= 1"	494:32:21721:21735	11218416	2	True				
ANR	11218567	PostIncDecOperationExpression	n ++		11218416	0					
ANR	11218568	Identifier	n		11218416	0					
ANR	11218569	IncDec	++		11218416	1					
ANR	11218570	AssignmentExpression	word <<= 1		11218416	1		<<=			
ANR	11218571	Identifier	word		11218416	0					
ANR	11218572	PrimaryExpression	1		11218416	1					
ANR	11218573	ExpressionStatement		495:8:21746:21746	11218416	3	True				
ANR	11218574	IfStatement	if ( max > n || ( code_t ) ( syms - 2 ) >= ( ( ( code_t ) 0 - 1 ) >> ( max - 1 ) ) )		11218416	15					
ANR	11218575	Condition	max > n || ( code_t ) ( syms - 2 ) >= ( ( ( code_t ) 0 - 1 ) >> ( max - 1 ) )	498:8:21824:21886	11218416	0	True				
ANR	11218576	OrExpression	max > n || ( code_t ) ( syms - 2 ) >= ( ( ( code_t ) 0 - 1 ) >> ( max - 1 ) )		11218416	0		||			
ANR	11218577	RelationalExpression	max > n		11218416	0		>			
ANR	11218578	Identifier	max		11218416	0					
ANR	11218579	Identifier	n		11218416	1					
ANR	11218580	RelationalExpression	( code_t ) ( syms - 2 ) >= ( ( ( code_t ) 0 - 1 ) >> ( max - 1 ) )		11218416	1		>=			
ANR	11218581	CastExpression	( code_t ) ( syms - 2 )		11218416	0					
ANR	11218582	CastTarget	code_t		11218416	0					
ANR	11218583	AdditiveExpression	syms - 2		11218416	1		-			
ANR	11218584	Identifier	syms		11218416	0					
ANR	11218585	PrimaryExpression	2		11218416	1					
ANR	11218586	ShiftExpression	( ( code_t ) 0 - 1 ) >> ( max - 1 )		11218416	1		>>			
ANR	11218587	AdditiveExpression	( code_t ) 0 - 1		11218416	0		-			
ANR	11218588	CastExpression	( code_t ) 0		11218416	0					
ANR	11218589	CastTarget	code_t		11218416	0					
ANR	11218590	PrimaryExpression	0		11218416	1					
ANR	11218591	PrimaryExpression	1		11218416	1					
ANR	11218592	AdditiveExpression	max - 1		11218416	1		-			
ANR	11218593	Identifier	max		11218416	0					
ANR	11218594	PrimaryExpression	1		11218416	1					
ANR	11218595	CompoundStatement		40:73:1252:1252	11218416	1					
ANR	11218596	ExpressionStatement	"fputs ( ""abort: code length too long for internal types\\n"" , stderr )"	499:8:21899:21964	11218416	0	True				
ANR	11218597	CallExpression	"fputs ( ""abort: code length too long for internal types\\n"" , stderr )"		11218416	0					
ANR	11218598	Callee	fputs		11218416	0					
ANR	11218599	Identifier	fputs		11218416	0					
ANR	11218600	ArgumentList	"""abort: code length too long for internal types\\n"""		11218416	1					
ANR	11218601	Argument	"""abort: code length too long for internal types\\n"""		11218416	0					
ANR	11218602	PrimaryExpression	"""abort: code length too long for internal types\\n"""		11218416	0					
ANR	11218603	Argument	stderr		11218416	1					
ANR	11218604	Identifier	stderr		11218416	0					
ANR	11218605	ReturnStatement	return 1 ;	500:8:21974:21982	11218416	1	True				
ANR	11218606	PrimaryExpression	1		11218416	0					
ANR	11218607	IfStatement	if ( ( code_t ) ( syms - 1 ) > ( ( code_t ) 1 << max ) - 1 )		11218416	16					
ANR	11218608	Condition	( code_t ) ( syms - 1 ) > ( ( code_t ) 1 << max ) - 1	504:8:22041:22083	11218416	0	True				
ANR	11218609	RelationalExpression	( code_t ) ( syms - 1 ) > ( ( code_t ) 1 << max ) - 1		11218416	0		>			
ANR	11218610	CastExpression	( code_t ) ( syms - 1 )		11218416	0					
ANR	11218611	CastTarget	code_t		11218416	0					
ANR	11218612	AdditiveExpression	syms - 1		11218416	1		-			
ANR	11218613	Identifier	syms		11218416	0					
ANR	11218614	PrimaryExpression	1		11218416	1					
ANR	11218615	AdditiveExpression	( ( code_t ) 1 << max ) - 1		11218416	1		-			
ANR	11218616	ShiftExpression	( code_t ) 1 << max		11218416	0		<<			
ANR	11218617	CastExpression	( code_t ) 1		11218416	0					
ANR	11218618	CastTarget	code_t		11218416	0					
ANR	11218619	PrimaryExpression	1		11218416	1					
ANR	11218620	Identifier	max		11218416	1					
ANR	11218621	PrimaryExpression	1		11218416	1					
ANR	11218622	CompoundStatement		46:53:1449:1449	11218416	1					
ANR	11218623	ExpressionStatement	"fprintf ( stderr , ""%d symbols cannot be coded in %d bits\\n"" , syms , max )"	505:8:22096:22181	11218416	0	True				
ANR	11218624	CallExpression	"fprintf ( stderr , ""%d symbols cannot be coded in %d bits\\n"" , syms , max )"		11218416	0					
ANR	11218625	Callee	fprintf		11218416	0					
ANR	11218626	Identifier	fprintf		11218416	0					
ANR	11218627	ArgumentList	stderr		11218416	1					
ANR	11218628	Argument	stderr		11218416	0					
ANR	11218629	Identifier	stderr		11218416	0					
ANR	11218630	Argument	"""%d symbols cannot be coded in %d bits\\n"""		11218416	1					
ANR	11218631	PrimaryExpression	"""%d symbols cannot be coded in %d bits\\n"""		11218416	0					
ANR	11218632	Argument	syms		11218416	2					
ANR	11218633	Identifier	syms		11218416	0					
ANR	11218634	Argument	max		11218416	3					
ANR	11218635	Identifier	max		11218416	0					
ANR	11218636	ReturnStatement	return 1 ;	507:8:22191:22199	11218416	1	True				
ANR	11218637	PrimaryExpression	1		11218416	0					
ANR	11218638	ExpressionStatement	"code = calloc ( max + 1 , sizeof ( int ) )"	511:4:22243:22278	11218416	17	True				
ANR	11218639	AssignmentExpression	"code = calloc ( max + 1 , sizeof ( int ) )"		11218416	0		=			
ANR	11218640	Identifier	code		11218416	0					
ANR	11218641	CallExpression	"calloc ( max + 1 , sizeof ( int ) )"		11218416	1					
ANR	11218642	Callee	calloc		11218416	0					
ANR	11218643	Identifier	calloc		11218416	0					
ANR	11218644	ArgumentList	max + 1		11218416	1					
ANR	11218645	Argument	max + 1		11218416	0					
ANR	11218646	AdditiveExpression	max + 1		11218416	0		+			
ANR	11218647	Identifier	max		11218416	0					
ANR	11218648	PrimaryExpression	1		11218416	1					
ANR	11218649	Argument	sizeof ( int )		11218416	1					
ANR	11218650	SizeofExpression	sizeof ( int )		11218416	0					
ANR	11218651	Sizeof	sizeof		11218416	0					
ANR	11218652	SizeofOperand	int		11218416	1					
ANR	11218653	IfStatement	if ( code == NULL )		11218416	18					
ANR	11218654	Condition	code == NULL	512:8:22288:22299	11218416	0	True				
ANR	11218655	EqualityExpression	code == NULL		11218416	0		==			
ANR	11218656	Identifier	code		11218416	0					
ANR	11218657	Identifier	NULL		11218416	1					
ANR	11218658	CompoundStatement		54:22:1665:1665	11218416	1					
ANR	11218659	ExpressionStatement	"fputs ( ""abort: unable to allocate enough memory\\n"" , stderr )"	513:8:22312:22370	11218416	0	True				
ANR	11218660	CallExpression	"fputs ( ""abort: unable to allocate enough memory\\n"" , stderr )"		11218416	0					
ANR	11218661	Callee	fputs		11218416	0					
ANR	11218662	Identifier	fputs		11218416	0					
ANR	11218663	ArgumentList	"""abort: unable to allocate enough memory\\n"""		11218416	1					
ANR	11218664	Argument	"""abort: unable to allocate enough memory\\n"""		11218416	0					
ANR	11218665	PrimaryExpression	"""abort: unable to allocate enough memory\\n"""		11218416	0					
ANR	11218666	Argument	stderr		11218416	1					
ANR	11218667	Identifier	stderr		11218416	0					
ANR	11218668	ReturnStatement	return 1 ;	514:8:22380:22388	11218416	1	True				
ANR	11218669	PrimaryExpression	1		11218416	0					
ANR	11218670	IfStatement	if ( syms == 2 )		11218416	19					
ANR	11218671	Condition	syms == 2	519:8:22546:22554	11218416	0	True				
ANR	11218672	EqualityExpression	syms == 2		11218416	0		==			
ANR	11218673	Identifier	syms		11218416	0					
ANR	11218674	PrimaryExpression	2		11218416	1					
ANR	11218675	ExpressionStatement	num = NULL	520:8:22597:22607	11218416	1	True				
ANR	11218676	AssignmentExpression	num = NULL		11218416	0		=			
ANR	11218677	Identifier	num		11218416	0					
ANR	11218678	Identifier	NULL		11218416	1					
ANR	11218679	ElseStatement	else		11218416	0					
ANR	11218680	CompoundStatement		63:9:2027:2027	11218416	0					
ANR	11218681	ExpressionStatement	size = syms >> 1	522:8:22674:22690	11218416	0	True				
ANR	11218682	AssignmentExpression	size = syms >> 1		11218416	0		=			
ANR	11218683	Identifier	size		11218416	0					
ANR	11218684	ShiftExpression	syms >> 1		11218416	1		>>			
ANR	11218685	Identifier	syms		11218416	0					
ANR	11218686	PrimaryExpression	1		11218416	1					
ANR	11218687	IfStatement	"if ( size > ( ( size_t ) 0 - 1 ) / ( n = ( syms - 1 ) >> 1 ) || ( size *= n , size > ( ( size_t ) 0 - 1 ) / ( n = max - 1 ) ) || ( size *= n , size > ( ( size_t ) 0 - 1 ) / sizeof ( big_t ) ) || ( num = calloc ( size , sizeof ( big_t ) ) ) == NULL )"		11218416	1					
ANR	11218688	Condition	"size > ( ( size_t ) 0 - 1 ) / ( n = ( syms - 1 ) >> 1 ) || ( size *= n , size > ( ( size_t ) 0 - 1 ) / ( n = max - 1 ) ) || ( size *= n , size > ( ( size_t ) 0 - 1 ) / sizeof ( big_t ) ) || ( num = calloc ( size , sizeof ( big_t ) ) ) == NULL"	523:12:22704:22954	11218416	0	True				
ANR	11218689	OrExpression	"size > ( ( size_t ) 0 - 1 ) / ( n = ( syms - 1 ) >> 1 ) || ( size *= n , size > ( ( size_t ) 0 - 1 ) / ( n = max - 1 ) ) || ( size *= n , size > ( ( size_t ) 0 - 1 ) / sizeof ( big_t ) ) || ( num = calloc ( size , sizeof ( big_t ) ) ) == NULL"		11218416	0		||			
ANR	11218690	RelationalExpression	size > ( ( size_t ) 0 - 1 ) / ( n = ( syms - 1 ) >> 1 )		11218416	0		>			
ANR	11218691	Identifier	size		11218416	0					
ANR	11218692	MultiplicativeExpression	( ( size_t ) 0 - 1 ) / ( n = ( syms - 1 ) >> 1 )		11218416	1		/			
ANR	11218693	AdditiveExpression	( size_t ) 0 - 1		11218416	0		-			
ANR	11218694	CastExpression	( size_t ) 0		11218416	0					
ANR	11218695	CastTarget	size_t		11218416	0					
ANR	11218696	PrimaryExpression	0		11218416	1					
ANR	11218697	PrimaryExpression	1		11218416	1					
ANR	11218698	AssignmentExpression	n = ( syms - 1 ) >> 1		11218416	1		=			
ANR	11218699	Identifier	n		11218416	0					
ANR	11218700	ShiftExpression	( syms - 1 ) >> 1		11218416	1		>>			
ANR	11218701	AdditiveExpression	syms - 1		11218416	0		-			
ANR	11218702	Identifier	syms		11218416	0					
ANR	11218703	PrimaryExpression	1		11218416	1					
ANR	11218704	PrimaryExpression	1		11218416	1					
ANR	11218705	OrExpression	"( size *= n , size > ( ( size_t ) 0 - 1 ) / ( n = max - 1 ) ) || ( size *= n , size > ( ( size_t ) 0 - 1 ) / sizeof ( big_t ) ) || ( num = calloc ( size , sizeof ( big_t ) ) ) == NULL"		11218416	1		||			
ANR	11218706	Expression	"size *= n , size > ( ( size_t ) 0 - 1 ) / ( n = max - 1 )"		11218416	0					
ANR	11218707	AssignmentExpression	size *= n		11218416	0		*=			
ANR	11218708	Identifier	size		11218416	0					
ANR	11218709	Identifier	n		11218416	1					
ANR	11218710	RelationalExpression	size > ( ( size_t ) 0 - 1 ) / ( n = max - 1 )		11218416	1		>			
ANR	11218711	Identifier	size		11218416	0					
ANR	11218712	MultiplicativeExpression	( ( size_t ) 0 - 1 ) / ( n = max - 1 )		11218416	1		/			
ANR	11218713	AdditiveExpression	( size_t ) 0 - 1		11218416	0		-			
ANR	11218714	CastExpression	( size_t ) 0		11218416	0					
ANR	11218715	CastTarget	size_t		11218416	0					
ANR	11218716	PrimaryExpression	0		11218416	1					
ANR	11218717	PrimaryExpression	1		11218416	1					
ANR	11218718	AssignmentExpression	n = max - 1		11218416	1		=			
ANR	11218719	Identifier	n		11218416	0					
ANR	11218720	AdditiveExpression	max - 1		11218416	1		-			
ANR	11218721	Identifier	max		11218416	0					
ANR	11218722	PrimaryExpression	1		11218416	1					
ANR	11218723	OrExpression	"( size *= n , size > ( ( size_t ) 0 - 1 ) / sizeof ( big_t ) ) || ( num = calloc ( size , sizeof ( big_t ) ) ) == NULL"		11218416	1		||			
ANR	11218724	Expression	"size *= n , size > ( ( size_t ) 0 - 1 ) / sizeof ( big_t )"		11218416	0					
ANR	11218725	AssignmentExpression	size *= n		11218416	0		*=			
ANR	11218726	Identifier	size		11218416	0					
ANR	11218727	Identifier	n		11218416	1					
ANR	11218728	RelationalExpression	size > ( ( size_t ) 0 - 1 ) / sizeof ( big_t )		11218416	1		>			
ANR	11218729	Identifier	size		11218416	0					
ANR	11218730	MultiplicativeExpression	( ( size_t ) 0 - 1 ) / sizeof ( big_t )		11218416	1		/			
ANR	11218731	AdditiveExpression	( size_t ) 0 - 1		11218416	0		-			
ANR	11218732	CastExpression	( size_t ) 0		11218416	0					
ANR	11218733	CastTarget	size_t		11218416	0					
ANR	11218734	PrimaryExpression	0		11218416	1					
ANR	11218735	PrimaryExpression	1		11218416	1					
ANR	11218736	SizeofExpression	sizeof ( big_t )		11218416	1					
ANR	11218737	Sizeof	sizeof		11218416	0					
ANR	11218738	SizeofOperand	big_t		11218416	1					
ANR	11218739	EqualityExpression	"( num = calloc ( size , sizeof ( big_t ) ) ) == NULL"		11218416	1		==			
ANR	11218740	AssignmentExpression	"num = calloc ( size , sizeof ( big_t ) )"		11218416	0		=			
ANR	11218741	Identifier	num		11218416	0					
ANR	11218742	CallExpression	"calloc ( size , sizeof ( big_t ) )"		11218416	1					
ANR	11218743	Callee	calloc		11218416	0					
ANR	11218744	Identifier	calloc		11218416	0					
ANR	11218745	ArgumentList	size		11218416	1					
ANR	11218746	Argument	size		11218416	0					
ANR	11218747	Identifier	size		11218416	0					
ANR	11218748	Argument	sizeof ( big_t )		11218416	1					
ANR	11218749	SizeofExpression	sizeof ( big_t )		11218416	0					
ANR	11218750	Sizeof	sizeof		11218416	0					
ANR	11218751	SizeofOperand	big_t		11218416	1					
ANR	11218752	Identifier	NULL		11218416	1					
ANR	11218753	CompoundStatement		68:61:2320:2320	11218416	1					
ANR	11218754	ExpressionStatement	"fputs ( ""abort: unable to allocate enough memory\\n"" , stderr )"	527:12:22971:23029	11218416	0	True				
ANR	11218755	CallExpression	"fputs ( ""abort: unable to allocate enough memory\\n"" , stderr )"		11218416	0					
ANR	11218756	Callee	fputs		11218416	0					
ANR	11218757	Identifier	fputs		11218416	0					
ANR	11218758	ArgumentList	"""abort: unable to allocate enough memory\\n"""		11218416	1					
ANR	11218759	Argument	"""abort: unable to allocate enough memory\\n"""		11218416	0					
ANR	11218760	PrimaryExpression	"""abort: unable to allocate enough memory\\n"""		11218416	0					
ANR	11218761	Argument	stderr		11218416	1					
ANR	11218762	Identifier	stderr		11218416	0					
ANR	11218763	ExpressionStatement	cleanup ( )	528:12:23043:23052	11218416	1	True				
ANR	11218764	CallExpression	cleanup ( )		11218416	0					
ANR	11218765	Callee	cleanup		11218416	0					
ANR	11218766	Identifier	cleanup		11218416	0					
ANR	11218767	ArgumentList			11218416	1					
ANR	11218768	ReturnStatement	return 1 ;	529:12:23066:23074	11218416	2	True				
ANR	11218769	PrimaryExpression	1		11218416	0					
ANR	11218770	ExpressionStatement	sum = 0	534:4:23170:23177	11218416	20	True				
ANR	11218771	AssignmentExpression	sum = 0		11218416	0		=			
ANR	11218772	Identifier	sum		11218416	0					
ANR	11218773	PrimaryExpression	0		11218416	1					
ANR	11218774	ForStatement	for ( n = 2 ; n <= syms ; n ++ )		11218416	21					
ANR	11218775	ForInit	n = 2 ;	535:9:23188:23193	11218416	0	True				
ANR	11218776	AssignmentExpression	n = 2		11218416	0		=			
ANR	11218777	Identifier	n		11218416	0					
ANR	11218778	PrimaryExpression	2		11218416	1					
ANR	11218779	Condition	n <= syms	535:16:23195:23203	11218416	1	True				
ANR	11218780	RelationalExpression	n <= syms		11218416	0		<=			
ANR	11218781	Identifier	n		11218416	0					
ANR	11218782	Identifier	syms		11218416	1					
ANR	11218783	PostIncDecOperationExpression	n ++	535:27:23206:23208	11218416	2	True				
ANR	11218784	Identifier	n		11218416	0					
ANR	11218785	IncDec	++		11218416	1					
ANR	11218786	CompoundStatement		77:32:2574:2574	11218416	3					
ANR	11218787	ExpressionStatement	"got = count ( n , 1 , 2 )"	536:8:23221:23241	11218416	0	True				
ANR	11218788	AssignmentExpression	"got = count ( n , 1 , 2 )"		11218416	0		=			
ANR	11218789	Identifier	got		11218416	0					
ANR	11218790	CallExpression	"count ( n , 1 , 2 )"		11218416	1					
ANR	11218791	Callee	count		11218416	0					
ANR	11218792	Identifier	count		11218416	0					
ANR	11218793	ArgumentList	n		11218416	1					
ANR	11218794	Argument	n		11218416	0					
ANR	11218795	Identifier	n		11218416	0					
ANR	11218796	Argument	1		11218416	1					
ANR	11218797	PrimaryExpression	1		11218416	0					
ANR	11218798	Argument	2		11218416	2					
ANR	11218799	PrimaryExpression	2		11218416	0					
ANR	11218800	ExpressionStatement	sum += got	537:8:23251:23261	11218416	1	True				
ANR	11218801	AssignmentExpression	sum += got		11218416	0		+=			
ANR	11218802	Identifier	sum		11218416	0					
ANR	11218803	Identifier	got		11218416	1					
ANR	11218804	IfStatement	if ( got == ( big_t ) 0 - 1 || sum < got )		11218416	2					
ANR	11218805	Condition	got == ( big_t ) 0 - 1 || sum < got	538:12:23275:23306	11218416	0	True				
ANR	11218806	OrExpression	got == ( big_t ) 0 - 1 || sum < got		11218416	0		||			
ANR	11218807	EqualityExpression	got == ( big_t ) 0 - 1		11218416	0		==			
ANR	11218808	Identifier	got		11218416	0					
ANR	11218809	AdditiveExpression	( big_t ) 0 - 1		11218416	1		-			
ANR	11218810	CastExpression	( big_t ) 0		11218416	0					
ANR	11218811	CastTarget	big_t		11218416	0					
ANR	11218812	PrimaryExpression	0		11218416	1					
ANR	11218813	PrimaryExpression	1		11218416	1					
ANR	11218814	RelationalExpression	sum < got		11218416	1		<			
ANR	11218815	Identifier	sum		11218416	0					
ANR	11218816	Identifier	got		11218416	1					
ANR	11218817	CompoundStatement		80:46:2672:2672	11218416	1					
ANR	11218818	ExpressionStatement	"fputs ( ""abort: can't count that high!\\n"" , stderr )"	539:12:23342:23390	11218416	0	True				
ANR	11218819	CallExpression	"fputs ( ""abort: can't count that high!\\n"" , stderr )"		11218416	0					
ANR	11218820	Callee	fputs		11218416	0					
ANR	11218821	Identifier	fputs		11218416	0					
ANR	11218822	ArgumentList	"""abort: can't count that high!\\n"""		11218416	1					
ANR	11218823	Argument	"""abort: can't count that high!\\n"""		11218416	0					
ANR	11218824	PrimaryExpression	"""abort: can't count that high!\\n"""		11218416	0					
ANR	11218825	Argument	stderr		11218416	1					
ANR	11218826	Identifier	stderr		11218416	0					
ANR	11218827	ExpressionStatement	cleanup ( )	540:12:23404:23413	11218416	1	True				
ANR	11218828	CallExpression	cleanup ( )		11218416	0					
ANR	11218829	Callee	cleanup		11218416	0					
ANR	11218830	Identifier	cleanup		11218416	0					
ANR	11218831	ArgumentList			11218416	1					
ANR	11218832	ReturnStatement	return 1 ;	541:12:23427:23435	11218416	2	True				
ANR	11218833	PrimaryExpression	1		11218416	0					
ANR	11218834	ExpressionStatement	"printf ( ""%llu %d-codes\\n"" , got , n )"	543:8:23455:23488	11218416	3	True				
ANR	11218835	CallExpression	"printf ( ""%llu %d-codes\\n"" , got , n )"		11218416	0					
ANR	11218836	Callee	printf		11218416	0					
ANR	11218837	Identifier	printf		11218416	0					
ANR	11218838	ArgumentList	"""%llu %d-codes\\n"""		11218416	1					
ANR	11218839	Argument	"""%llu %d-codes\\n"""		11218416	0					
ANR	11218840	PrimaryExpression	"""%llu %d-codes\\n"""		11218416	0					
ANR	11218841	Argument	got		11218416	1					
ANR	11218842	Identifier	got		11218416	0					
ANR	11218843	Argument	n		11218416	2					
ANR	11218844	Identifier	n		11218416	0					
ANR	11218845	ExpressionStatement	"printf ( ""%llu total codes for 2 to %d symbols"" , sum , syms )"	545:4:23500:23557	11218416	22	True				
ANR	11218846	CallExpression	"printf ( ""%llu total codes for 2 to %d symbols"" , sum , syms )"		11218416	0					
ANR	11218847	Callee	printf		11218416	0					
ANR	11218848	Identifier	printf		11218416	0					
ANR	11218849	ArgumentList	"""%llu total codes for 2 to %d symbols"""		11218416	1					
ANR	11218850	Argument	"""%llu total codes for 2 to %d symbols"""		11218416	0					
ANR	11218851	PrimaryExpression	"""%llu total codes for 2 to %d symbols"""		11218416	0					
ANR	11218852	Argument	sum		11218416	1					
ANR	11218853	Identifier	sum		11218416	0					
ANR	11218854	Argument	syms		11218416	2					
ANR	11218855	Identifier	syms		11218416	0					
ANR	11218856	IfStatement	if ( max < syms - 1 )		11218416	23					
ANR	11218857	Condition	max < syms - 1	546:8:23567:23580	11218416	0	True				
ANR	11218858	RelationalExpression	max < syms - 1		11218416	0		<			
ANR	11218859	Identifier	max		11218416	0					
ANR	11218860	AdditiveExpression	syms - 1		11218416	1		-			
ANR	11218861	Identifier	syms		11218416	0					
ANR	11218862	PrimaryExpression	1		11218416	1					
ANR	11218863	ExpressionStatement	"printf ( "" (%d-bit length limit)\\n"" , max )"	547:8:23591:23630	11218416	1	True				
ANR	11218864	CallExpression	"printf ( "" (%d-bit length limit)\\n"" , max )"		11218416	0					
ANR	11218865	Callee	printf		11218416	0					
ANR	11218866	Identifier	printf		11218416	0					
ANR	11218867	ArgumentList	""" (%d-bit length limit)\\n"""		11218416	1					
ANR	11218868	Argument	""" (%d-bit length limit)\\n"""		11218416	0					
ANR	11218869	PrimaryExpression	""" (%d-bit length limit)\\n"""		11218416	0					
ANR	11218870	Argument	max		11218416	1					
ANR	11218871	Identifier	max		11218416	0					
ANR	11218872	ElseStatement	else		11218416	0					
ANR	11218873	ExpressionStatement	"puts ( "" (no length limit)"" )"	549:8:23649:23675	11218416	0	True				
ANR	11218874	CallExpression	"puts ( "" (no length limit)"" )"		11218416	0					
ANR	11218875	Callee	puts		11218416	0					
ANR	11218876	Identifier	puts		11218416	0					
ANR	11218877	ArgumentList	""" (no length limit)"""		11218416	1					
ANR	11218878	Argument	""" (no length limit)"""		11218416	0					
ANR	11218879	PrimaryExpression	""" (no length limit)"""		11218416	0					
ANR	11218880	IfStatement	if ( syms == 2 )		11218416	24					
ANR	11218881	Condition	syms == 2	552:8:23741:23749	11218416	0	True				
ANR	11218882	EqualityExpression	syms == 2		11218416	0		==			
ANR	11218883	Identifier	syms		11218416	0					
ANR	11218884	PrimaryExpression	2		11218416	1					
ANR	11218885	ExpressionStatement	done = NULL	553:8:23760:23771	11218416	1	True				
ANR	11218886	AssignmentExpression	done = NULL		11218416	0		=			
ANR	11218887	Identifier	done		11218416	0					
ANR	11218888	Identifier	NULL		11218416	1					
ANR	11218889	ElseStatement	else		11218416	0					
ANR	11218890	IfStatement	"if ( size > ( ( size_t ) 0 - 1 ) / sizeof ( struct tab ) || ( done = calloc ( size , sizeof ( struct tab ) ) ) == NULL )"		11218416	0					
ANR	11218891	Condition	"size > ( ( size_t ) 0 - 1 ) / sizeof ( struct tab ) || ( done = calloc ( size , sizeof ( struct tab ) ) ) == NULL"	554:13:23786:23894	11218416	0	True				
ANR	11218892	OrExpression	"size > ( ( size_t ) 0 - 1 ) / sizeof ( struct tab ) || ( done = calloc ( size , sizeof ( struct tab ) ) ) == NULL"		11218416	0		||			
ANR	11218893	RelationalExpression	size > ( ( size_t ) 0 - 1 ) / sizeof ( struct tab )		11218416	0		>			
ANR	11218894	Identifier	size		11218416	0					
ANR	11218895	MultiplicativeExpression	( ( size_t ) 0 - 1 ) / sizeof ( struct tab )		11218416	1		/			
ANR	11218896	AdditiveExpression	( size_t ) 0 - 1		11218416	0		-			
ANR	11218897	CastExpression	( size_t ) 0		11218416	0					
ANR	11218898	CastTarget	size_t		11218416	0					
ANR	11218899	PrimaryExpression	0		11218416	1					
ANR	11218900	PrimaryExpression	1		11218416	1					
ANR	11218901	SizeofExpression	sizeof ( struct tab )		11218416	1					
ANR	11218902	Sizeof	sizeof		11218416	0					
ANR	11218903	SizeofOperand	struct tab		11218416	1					
ANR	11218904	EqualityExpression	"( done = calloc ( size , sizeof ( struct tab ) ) ) == NULL"		11218416	1		==			
ANR	11218905	AssignmentExpression	"done = calloc ( size , sizeof ( struct tab ) )"		11218416	0		=			
ANR	11218906	Identifier	done		11218416	0					
ANR	11218907	CallExpression	"calloc ( size , sizeof ( struct tab ) )"		11218416	1					
ANR	11218908	Callee	calloc		11218416	0					
ANR	11218909	Identifier	calloc		11218416	0					
ANR	11218910	ArgumentList	size		11218416	1					
ANR	11218911	Argument	size		11218416	0					
ANR	11218912	Identifier	size		11218416	0					
ANR	11218913	Argument	sizeof ( struct tab )		11218416	1					
ANR	11218914	SizeofExpression	sizeof ( struct tab )		11218416	0					
ANR	11218915	Sizeof	sizeof		11218416	0					
ANR	11218916	SizeofOperand	struct tab		11218416	1					
ANR	11218917	Identifier	NULL		11218416	1					
ANR	11218918	CompoundStatement		97:64:3260:3260	11218416	1					
ANR	11218919	ExpressionStatement	"fputs ( ""abort: unable to allocate enough memory\\n"" , stderr )"	556:8:23907:23965	11218416	0	True				
ANR	11218920	CallExpression	"fputs ( ""abort: unable to allocate enough memory\\n"" , stderr )"		11218416	0					
ANR	11218921	Callee	fputs		11218416	0					
ANR	11218922	Identifier	fputs		11218416	0					
ANR	11218923	ArgumentList	"""abort: unable to allocate enough memory\\n"""		11218416	1					
ANR	11218924	Argument	"""abort: unable to allocate enough memory\\n"""		11218416	0					
ANR	11218925	PrimaryExpression	"""abort: unable to allocate enough memory\\n"""		11218416	0					
ANR	11218926	Argument	stderr		11218416	1					
ANR	11218927	Identifier	stderr		11218416	0					
ANR	11218928	ExpressionStatement	cleanup ( )	557:8:23975:23984	11218416	1	True				
ANR	11218929	CallExpression	cleanup ( )		11218416	0					
ANR	11218930	Callee	cleanup		11218416	0					
ANR	11218931	Identifier	cleanup		11218416	0					
ANR	11218932	ArgumentList			11218416	1					
ANR	11218933	ReturnStatement	return 1 ;	558:8:23994:24002	11218416	2	True				
ANR	11218934	PrimaryExpression	1		11218416	0					
ANR	11218935	IfStatement	if ( root > max )		11218416	25					
ANR	11218936	Condition	root > max	562:8:24071:24080	11218416	0	True				
ANR	11218937	RelationalExpression	root > max		11218416	0		>			
ANR	11218938	Identifier	root		11218416	0					
ANR	11218939	Identifier	max		11218416	1					
ANR	11218940	ExpressionStatement	root = max	563:8:24139:24149	11218416	1	True				
ANR	11218941	AssignmentExpression	root = max		11218416	0		=			
ANR	11218942	Identifier	root		11218416	0					
ANR	11218943	Identifier	max		11218416	1					
ANR	11218944	IfStatement	if ( ( code_t ) syms < ( ( code_t ) 1 << ( root + 1 ) ) )		11218416	26					
ANR	11218945	Condition	( code_t ) syms < ( ( code_t ) 1 << ( root + 1 ) )	564:8:24159:24198	11218416	0	True				
ANR	11218946	RelationalExpression	( code_t ) syms < ( ( code_t ) 1 << ( root + 1 ) )		11218416	0		<			
ANR	11218947	CastExpression	( code_t ) syms		11218416	0					
ANR	11218948	CastTarget	code_t		11218416	0					
ANR	11218949	Identifier	syms		11218416	1					
ANR	11218950	ShiftExpression	( code_t ) 1 << ( root + 1 )		11218416	1		<<			
ANR	11218951	CastExpression	( code_t ) 1		11218416	0					
ANR	11218952	CastTarget	code_t		11218416	0					
ANR	11218953	PrimaryExpression	1		11218416	1					
ANR	11218954	AdditiveExpression	root + 1		11218416	1		+			
ANR	11218955	Identifier	root		11218416	0					
ANR	11218956	PrimaryExpression	1		11218416	1					
ANR	11218957	ExpressionStatement	enough ( syms )	565:8:24209:24221	11218416	1	True				
ANR	11218958	CallExpression	enough ( syms )		11218416	0					
ANR	11218959	Callee	enough		11218416	0					
ANR	11218960	Identifier	enough		11218416	0					
ANR	11218961	ArgumentList	syms		11218416	1					
ANR	11218962	Argument	syms		11218416	0					
ANR	11218963	Identifier	syms		11218416	0					
ANR	11218964	ElseStatement	else		11218416	0					
ANR	11218965	ExpressionStatement	"puts ( ""cannot handle minimum code lengths > root"" )"	567:8:24240:24289	11218416	0	True				
ANR	11218966	CallExpression	"puts ( ""cannot handle minimum code lengths > root"" )"		11218416	0					
ANR	11218967	Callee	puts		11218416	0					
ANR	11218968	Identifier	puts		11218416	0					
ANR	11218969	ArgumentList	"""cannot handle minimum code lengths > root"""		11218416	1					
ANR	11218970	Argument	"""cannot handle minimum code lengths > root"""		11218416	0					
ANR	11218971	PrimaryExpression	"""cannot handle minimum code lengths > root"""		11218416	0					
ANR	11218972	ExpressionStatement	cleanup ( )	570:4:24311:24320	11218416	27	True				
ANR	11218973	CallExpression	cleanup ( )		11218416	0					
ANR	11218974	Callee	cleanup		11218416	0					
ANR	11218975	Identifier	cleanup		11218416	0					
ANR	11218976	ArgumentList			11218416	1					
ANR	11218977	ReturnStatement	return 0 ;	571:4:24326:24334	11218416	28	True				
ANR	11218978	PrimaryExpression	0		11218416	0					
ANR	11218979	ReturnType	int		11218416	1					
ANR	11218980	Identifier	main		11218416	2					
ANR	11218981	ParameterList	"int argc , char * * argv"		11218416	3					
ANR	11218982	Parameter	int argc	458:9:20613:20620	11218416	0	True				
ANR	11218983	ParameterType	int		11218416	0					
ANR	11218984	Identifier	argc		11218416	1					
ANR	11218985	Parameter	char * * argv	458:19:20623:20633	11218416	1	True				
ANR	11218986	ParameterType	char * *		11218416	0					
ANR	11218987	Identifier	argv		11218416	1					
ANR	11218988	CFGEntryNode	ENTRY		11218416		True				
ANR	11218989	CFGExitNode	EXIT		11218416		True				
ANR	11218990	Symbol	argc		11218416						
ANR	11218991	Symbol	atoi		11218416						
ANR	11218992	Symbol	NULL		11218416						
ANR	11218993	Symbol	code		11218416						
ANR	11218994	Symbol	max		11218416						
ANR	11218995	Symbol	num		11218416						
ANR	11218996	Symbol	count		11218416						
ANR	11218997	Symbol	sum		11218416						
ANR	11218998	Symbol	* argv		11218416						
ANR	11218999	Symbol	calloc		11218416						
ANR	11219000	Symbol	stderr		11218416						
ANR	11219001	Symbol	argv		11218416						
ANR	11219002	Symbol	got		11218416						
ANR	11219003	Symbol	done		11218416						
ANR	11219004	Symbol	n		11218416						
ANR	11219005	Symbol	size		11218416						
ANR	11219006	Symbol	root		11218416						
ANR	11219007	Symbol	syms		11218416						
ANR	11219008	Symbol	word		11218416						
