command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8768097	File	data/converged/CVE-2018-16863_ghostpdl/psi_apitest.c								
ANR	8768098	DeclStmt									
ANR	8768099	Decl							int	int	my_argc
ANR	8768100	DeclStmt									
ANR	8768101	Decl							char	char * *	my_argv
ANR	8768102	DeclStmt									
ANR	8768103	Decl							int	int	my_argv_file
ANR	8768104	ClassDef	my_stdio_s	15:8:237:303							
ANR	8768105	DeclStmt									
ANR	8768106	Decl							FILE	FILE *	stdout
ANR	8768107	DeclStmt									
ANR	8768108	Decl							FILE	FILE *	stderr
ANR	8768109	DeclStmt									
ANR	8768110	Decl							my_stdio_s	my_stdio_s	my_stdio
ANR	8768111	Function	my_stdin	22:0:328:439							
ANR	8768112	FunctionDef	"my_stdin (void * instance , char * buf , int len)"		8768111	0					
ANR	8768113	CompoundStatement		24:0:394:439	8768111	0					
ANR	8768114	ReturnStatement	return 0 ;	25:4:400:408	8768111	0	True				
ANR	8768115	PrimaryExpression	0		8768111	0					
ANR	8768116	ReturnType	static int GSDLLCALL		8768111	1					
ANR	8768117	Identifier	my_stdin		8768111	2					
ANR	8768118	ParameterList	"void * instance , char * buf , int len"		8768111	3					
ANR	8768119	Parameter	void * instance	23:9:358:371	8768111	0	True				
ANR	8768120	ParameterType	void *		8768111	0					
ANR	8768121	Identifier	instance		8768111	1					
ANR	8768122	Parameter	char * buf	23:25:374:382	8768111	1	True				
ANR	8768123	ParameterType	char *		8768111	0					
ANR	8768124	Identifier	buf		8768111	1					
ANR	8768125	Parameter	int len	23:36:385:391	8768111	2	True				
ANR	8768126	ParameterType	int		8768111	0					
ANR	8768127	Identifier	len		8768111	1					
ANR	8768128	CFGEntryNode	ENTRY		8768111		True				
ANR	8768129	CFGExitNode	EXIT		8768111		True				
ANR	8768130	Symbol	buf		8768111						
ANR	8768131	Symbol	instance		8768111						
ANR	8768132	Symbol	len		8768111						
ANR	8768133	Function	my_stdout	28:0:442:645							
ANR	8768134	FunctionDef	"my_stdout (void * instance , const char * str , int len)"		8768133	0					
ANR	8768135	CompoundStatement		30:0:515:645	8768133	0					
ANR	8768136	IdentifierDeclStatement	my_stdio * stdio = ( my_stdio * ) instance ;	31:4:521:559	8768133	0	True				
ANR	8768137	IdentifierDecl	* stdio = ( my_stdio * ) instance		8768133	0					
ANR	8768138	IdentifierDeclType	my_stdio *		8768133	0					
ANR	8768139	Identifier	stdio		8768133	1					
ANR	8768140	AssignmentExpression	* stdio = ( my_stdio * ) instance		8768133	2		=			
ANR	8768141	Identifier	stdio		8768133	0					
ANR	8768142	CastExpression	( my_stdio * ) instance		8768133	1					
ANR	8768143	CastTarget	my_stdio *		8768133	0					
ANR	8768144	Identifier	instance		8768133	1					
ANR	8768145	ExpressionStatement	"fwrite ( str , 1 , len , stdio -> stdout )"	33:4:566:600	8768133	1	True				
ANR	8768146	CallExpression	"fwrite ( str , 1 , len , stdio -> stdout )"		8768133	0					
ANR	8768147	Callee	fwrite		8768133	0					
ANR	8768148	Identifier	fwrite		8768133	0					
ANR	8768149	ArgumentList	str		8768133	1					
ANR	8768150	Argument	str		8768133	0					
ANR	8768151	Identifier	str		8768133	0					
ANR	8768152	Argument	1		8768133	1					
ANR	8768153	PrimaryExpression	1		8768133	0					
ANR	8768154	Argument	len		8768133	2					
ANR	8768155	Identifier	len		8768133	0					
ANR	8768156	Argument	stdio -> stdout		8768133	3					
ANR	8768157	PtrMemberAccess	stdio -> stdout		8768133	0					
ANR	8768158	Identifier	stdio		8768133	0					
ANR	8768159	Identifier	stdout		8768133	1					
ANR	8768160	ExpressionStatement	fflush ( stdio -> stdout )	34:4:606:627	8768133	2	True				
ANR	8768161	CallExpression	fflush ( stdio -> stdout )		8768133	0					
ANR	8768162	Callee	fflush		8768133	0					
ANR	8768163	Identifier	fflush		8768133	0					
ANR	8768164	ArgumentList	stdio -> stdout		8768133	1					
ANR	8768165	Argument	stdio -> stdout		8768133	0					
ANR	8768166	PtrMemberAccess	stdio -> stdout		8768133	0					
ANR	8768167	Identifier	stdio		8768133	0					
ANR	8768168	Identifier	stdout		8768133	1					
ANR	8768169	ReturnStatement	return len ;	35:4:633:643	8768133	3	True				
ANR	8768170	Identifier	len		8768133	0					
ANR	8768171	ReturnType	static int GSDLLCALL		8768133	1					
ANR	8768172	Identifier	my_stdout		8768133	2					
ANR	8768173	ParameterList	"void * instance , const char * str , int len"		8768133	3					
ANR	8768174	Parameter	void * instance	29:10:473:486	8768133	0	True				
ANR	8768175	ParameterType	void *		8768133	0					
ANR	8768176	Identifier	instance		8768133	1					
ANR	8768177	Parameter	const char * str	29:26:489:503	8768133	1	True				
ANR	8768178	ParameterType	const char *		8768133	0					
ANR	8768179	Identifier	str		8768133	1					
ANR	8768180	Parameter	int len	29:43:506:512	8768133	2	True				
ANR	8768181	ParameterType	int		8768133	0					
ANR	8768182	Identifier	len		8768133	1					
ANR	8768183	CFGEntryNode	ENTRY		8768133		True				
ANR	8768184	CFGExitNode	EXIT		8768133		True				
ANR	8768185	Symbol	str		8768133						
ANR	8768186	Symbol	instance		8768133						
ANR	8768187	Symbol	stdio		8768133						
ANR	8768188	Symbol	len		8768133						
ANR	8768189	Symbol	* stdio		8768133						
ANR	8768190	Symbol	stdio -> stdout		8768133						
ANR	8768191	Function	my_stderr	38:0:648:851							
ANR	8768192	FunctionDef	"my_stderr (void * instance , const char * str , int len)"		8768191	0					
ANR	8768193	CompoundStatement		40:0:721:851	8768191	0					
ANR	8768194	IdentifierDeclStatement	my_stdio * stdio = ( my_stdio * ) instance ;	41:4:727:765	8768191	0	True				
ANR	8768195	IdentifierDecl	* stdio = ( my_stdio * ) instance		8768191	0					
ANR	8768196	IdentifierDeclType	my_stdio *		8768191	0					
ANR	8768197	Identifier	stdio		8768191	1					
ANR	8768198	AssignmentExpression	* stdio = ( my_stdio * ) instance		8768191	2		=			
ANR	8768199	Identifier	stdio		8768191	0					
ANR	8768200	CastExpression	( my_stdio * ) instance		8768191	1					
ANR	8768201	CastTarget	my_stdio *		8768191	0					
ANR	8768202	Identifier	instance		8768191	1					
ANR	8768203	ExpressionStatement	"fwrite ( str , 1 , len , stdio -> stderr )"	43:4:772:806	8768191	1	True				
ANR	8768204	CallExpression	"fwrite ( str , 1 , len , stdio -> stderr )"		8768191	0					
ANR	8768205	Callee	fwrite		8768191	0					
ANR	8768206	Identifier	fwrite		8768191	0					
ANR	8768207	ArgumentList	str		8768191	1					
ANR	8768208	Argument	str		8768191	0					
ANR	8768209	Identifier	str		8768191	0					
ANR	8768210	Argument	1		8768191	1					
ANR	8768211	PrimaryExpression	1		8768191	0					
ANR	8768212	Argument	len		8768191	2					
ANR	8768213	Identifier	len		8768191	0					
ANR	8768214	Argument	stdio -> stderr		8768191	3					
ANR	8768215	PtrMemberAccess	stdio -> stderr		8768191	0					
ANR	8768216	Identifier	stdio		8768191	0					
ANR	8768217	Identifier	stderr		8768191	1					
ANR	8768218	ExpressionStatement	fflush ( stdio -> stderr )	44:4:812:833	8768191	2	True				
ANR	8768219	CallExpression	fflush ( stdio -> stderr )		8768191	0					
ANR	8768220	Callee	fflush		8768191	0					
ANR	8768221	Identifier	fflush		8768191	0					
ANR	8768222	ArgumentList	stdio -> stderr		8768191	1					
ANR	8768223	Argument	stdio -> stderr		8768191	0					
ANR	8768224	PtrMemberAccess	stdio -> stderr		8768191	0					
ANR	8768225	Identifier	stdio		8768191	0					
ANR	8768226	Identifier	stderr		8768191	1					
ANR	8768227	ReturnStatement	return len ;	45:4:839:849	8768191	3	True				
ANR	8768228	Identifier	len		8768191	0					
ANR	8768229	ReturnType	static int GSDLLCALL		8768191	1					
ANR	8768230	Identifier	my_stderr		8768191	2					
ANR	8768231	ParameterList	"void * instance , const char * str , int len"		8768191	3					
ANR	8768232	Parameter	void * instance	39:10:679:692	8768191	0	True				
ANR	8768233	ParameterType	void *		8768191	0					
ANR	8768234	Identifier	instance		8768191	1					
ANR	8768235	Parameter	const char * str	39:26:695:709	8768191	1	True				
ANR	8768236	ParameterType	const char *		8768191	0					
ANR	8768237	Identifier	str		8768191	1					
ANR	8768238	Parameter	int len	39:43:712:718	8768191	2	True				
ANR	8768239	ParameterType	int		8768191	0					
ANR	8768240	Identifier	len		8768191	1					
ANR	8768241	CFGEntryNode	ENTRY		8768191		True				
ANR	8768242	CFGExitNode	EXIT		8768191		True				
ANR	8768243	Symbol	str		8768191						
ANR	8768244	Symbol	instance		8768191						
ANR	8768245	Symbol	stdio		8768191						
ANR	8768246	Symbol	stdio -> stderr		8768191						
ANR	8768247	Symbol	len		8768191						
ANR	8768248	Symbol	* stdio		8768191						
ANR	8768249	Function	gs_main	48:0:854:2343							
ANR	8768250	FunctionDef	gs_main (void * arg)		8768249	0					
ANR	8768251	CompoundStatement		49:0:886:2343	8768249	0					
ANR	8768252	IdentifierDeclStatement	int threadnum = ( int ) ( void * ) arg ;	50:4:892:924	8768249	0	True				
ANR	8768253	IdentifierDecl	threadnum = ( int ) ( void * ) arg		8768249	0					
ANR	8768254	IdentifierDeclType	int		8768249	0					
ANR	8768255	Identifier	threadnum		8768249	1					
ANR	8768256	AssignmentExpression	threadnum = ( int ) ( void * ) arg		8768249	2		=			
ANR	8768257	Identifier	threadnum		8768249	0					
ANR	8768258	CastExpression	( int ) ( void * ) arg		8768249	1					
ANR	8768259	CastTarget	int		8768249	0					
ANR	8768260	CastExpression	( void * ) arg		8768249	1					
ANR	8768261	CastTarget	void *		8768249	0					
ANR	8768262	Identifier	arg		8768249	1					
ANR	8768263	IdentifierDeclStatement	"int code , code1 ;"	51:4:930:945	8768249	1	True				
ANR	8768264	IdentifierDecl	code		8768249	0					
ANR	8768265	IdentifierDeclType	int		8768249	0					
ANR	8768266	Identifier	code		8768249	1					
ANR	8768267	IdentifierDecl	code1		8768249	1					
ANR	8768268	IdentifierDeclType	int		8768249	0					
ANR	8768269	Identifier	code1		8768249	1					
ANR	8768270	IdentifierDeclStatement	char text [ 256 ] ;	52:4:951:965	8768249	2	True				
ANR	8768271	IdentifierDecl	text [ 256 ]		8768249	0					
ANR	8768272	IdentifierDeclType	char [ 256 ]		8768249	0					
ANR	8768273	Identifier	text		8768249	1					
ANR	8768274	PrimaryExpression	256		8768249	2					
ANR	8768275	IdentifierDeclStatement	void * minst ;	53:4:971:982	8768249	3	True				
ANR	8768276	IdentifierDecl	* minst		8768249	0					
ANR	8768277	IdentifierDeclType	void *		8768249	0					
ANR	8768278	Identifier	minst		8768249	1					
ANR	8768279	IdentifierDeclStatement	char * * gsargv ;	54:4:988:1001	8768249	4	True				
ANR	8768280	IdentifierDecl	* * gsargv		8768249	0					
ANR	8768281	IdentifierDeclType	char * *		8768249	0					
ANR	8768282	Identifier	gsargv		8768249	1					
ANR	8768283	IdentifierDeclStatement	int gsargc ;	55:4:1007:1017	8768249	5	True				
ANR	8768284	IdentifierDecl	gsargc		8768249	0					
ANR	8768285	IdentifierDeclType	int		8768249	0					
ANR	8768286	Identifier	gsargc		8768249	1					
ANR	8768287	IdentifierDeclStatement	"int i , pos , len ;"	56:4:1023:1038	8768249	6	True				
ANR	8768288	IdentifierDecl	i		8768249	0					
ANR	8768289	IdentifierDeclType	int		8768249	0					
ANR	8768290	Identifier	i		8768249	1					
ANR	8768291	IdentifierDecl	pos		8768249	1					
ANR	8768292	IdentifierDeclType	int		8768249	0					
ANR	8768293	Identifier	pos		8768249	1					
ANR	8768294	IdentifierDecl	len		8768249	2					
ANR	8768295	IdentifierDeclType	int		8768249	0					
ANR	8768296	Identifier	len		8768249	1					
ANR	8768297	IdentifierDeclStatement	my_stdio stdio ;	57:4:1044:1058	8768249	7	True				
ANR	8768298	IdentifierDecl	stdio		8768249	0					
ANR	8768299	IdentifierDeclType	my_stdio		8768249	0					
ANR	8768300	Identifier	stdio		8768249	1					
ANR	8768301	ExpressionStatement	"snprintf ( text , sizeof ( text ) , ""stdout.%d"" , threadnum )"	59:4:1065:1117	8768249	8	True				
ANR	8768302	CallExpression	"snprintf ( text , sizeof ( text ) , ""stdout.%d"" , threadnum )"		8768249	0					
ANR	8768303	Callee	snprintf		8768249	0					
ANR	8768304	Identifier	snprintf		8768249	0					
ANR	8768305	ArgumentList	text		8768249	1					
ANR	8768306	Argument	text		8768249	0					
ANR	8768307	Identifier	text		8768249	0					
ANR	8768308	Argument	sizeof ( text )		8768249	1					
ANR	8768309	SizeofExpression	sizeof ( text )		8768249	0					
ANR	8768310	Sizeof	sizeof		8768249	0					
ANR	8768311	SizeofOperand	text		8768249	1					
ANR	8768312	Argument	"""stdout.%d"""		8768249	2					
ANR	8768313	PrimaryExpression	"""stdout.%d"""		8768249	0					
ANR	8768314	Argument	threadnum		8768249	3					
ANR	8768315	Identifier	threadnum		8768249	0					
ANR	8768316	ExpressionStatement	"stdio . stdout = gp_fopen ( text , ""w"" )"	60:4:1123:1157	8768249	9	True				
ANR	8768317	AssignmentExpression	"stdio . stdout = gp_fopen ( text , ""w"" )"		8768249	0		=			
ANR	8768318	MemberAccess	stdio . stdout		8768249	0					
ANR	8768319	Identifier	stdio		8768249	0					
ANR	8768320	Identifier	stdout		8768249	1					
ANR	8768321	CallExpression	"gp_fopen ( text , ""w"" )"		8768249	1					
ANR	8768322	Callee	gp_fopen		8768249	0					
ANR	8768323	Identifier	gp_fopen		8768249	0					
ANR	8768324	ArgumentList	text		8768249	1					
ANR	8768325	Argument	text		8768249	0					
ANR	8768326	Identifier	text		8768249	0					
ANR	8768327	Argument	"""w"""		8768249	1					
ANR	8768328	PrimaryExpression	"""w"""		8768249	0					
ANR	8768329	ExpressionStatement	"snprintf ( text , sizeof ( text ) , ""stderr.%d"" , threadnum )"	61:4:1163:1215	8768249	10	True				
ANR	8768330	CallExpression	"snprintf ( text , sizeof ( text ) , ""stderr.%d"" , threadnum )"		8768249	0					
ANR	8768331	Callee	snprintf		8768249	0					
ANR	8768332	Identifier	snprintf		8768249	0					
ANR	8768333	ArgumentList	text		8768249	1					
ANR	8768334	Argument	text		8768249	0					
ANR	8768335	Identifier	text		8768249	0					
ANR	8768336	Argument	sizeof ( text )		8768249	1					
ANR	8768337	SizeofExpression	sizeof ( text )		8768249	0					
ANR	8768338	Sizeof	sizeof		8768249	0					
ANR	8768339	SizeofOperand	text		8768249	1					
ANR	8768340	Argument	"""stderr.%d"""		8768249	2					
ANR	8768341	PrimaryExpression	"""stderr.%d"""		8768249	0					
ANR	8768342	Argument	threadnum		8768249	3					
ANR	8768343	Identifier	threadnum		8768249	0					
ANR	8768344	ExpressionStatement	"stdio . stderr = gp_fopen ( text , ""w"" )"	62:4:1221:1255	8768249	11	True				
ANR	8768345	AssignmentExpression	"stdio . stderr = gp_fopen ( text , ""w"" )"		8768249	0		=			
ANR	8768346	MemberAccess	stdio . stderr		8768249	0					
ANR	8768347	Identifier	stdio		8768249	0					
ANR	8768348	Identifier	stderr		8768249	1					
ANR	8768349	CallExpression	"gp_fopen ( text , ""w"" )"		8768249	1					
ANR	8768350	Callee	gp_fopen		8768249	0					
ANR	8768351	Identifier	gp_fopen		8768249	0					
ANR	8768352	ArgumentList	text		8768249	1					
ANR	8768353	Argument	text		8768249	0					
ANR	8768354	Identifier	text		8768249	0					
ANR	8768355	Argument	"""w"""		8768249	1					
ANR	8768356	PrimaryExpression	"""w"""		8768249	0					
ANR	8768357	ExpressionStatement	gsargv = malloc ( sizeof ( * gsargv ) * my_argc )	64:4:1262:1302	8768249	12	True				
ANR	8768358	AssignmentExpression	gsargv = malloc ( sizeof ( * gsargv ) * my_argc )		8768249	0		=			
ANR	8768359	Identifier	gsargv		8768249	0					
ANR	8768360	CallExpression	malloc ( sizeof ( * gsargv ) * my_argc )		8768249	1					
ANR	8768361	Callee	malloc		8768249	0					
ANR	8768362	Identifier	malloc		8768249	0					
ANR	8768363	ArgumentList	sizeof ( * gsargv ) * my_argc		8768249	1					
ANR	8768364	Argument	sizeof ( * gsargv ) * my_argc		8768249	0					
ANR	8768365	MultiplicativeExpression	sizeof ( * gsargv ) * my_argc		8768249	0		*			
ANR	8768366	SizeofExpression	sizeof ( * gsargv )		8768249	0					
ANR	8768367	Sizeof	sizeof		8768249	0					
ANR	8768368	UnaryOperationExpression	* gsargv		8768249	1					
ANR	8768369	UnaryOperator	*		8768249	0					
ANR	8768370	Identifier	gsargv		8768249	1					
ANR	8768371	Identifier	my_argc		8768249	1					
ANR	8768372	IfStatement	if ( ! gsargv )		8768249	13					
ANR	8768373	Condition	! gsargv	65:8:1312:1318	8768249	0	True				
ANR	8768374	UnaryOperationExpression	! gsargv		8768249	0					
ANR	8768375	UnaryOperator	!		8768249	0					
ANR	8768376	Identifier	gsargv		8768249	1					
ANR	8768377	CompoundStatement		18:4:438:438	8768249	1					
ANR	8768378	ExpressionStatement	"fprintf ( stdio . stderr , ""Failed to allocate arg space in thread %d\\n"" , threadnum )"	67:8:1335:1414	8768249	0	True				
ANR	8768379	CallExpression	"fprintf ( stdio . stderr , ""Failed to allocate arg space in thread %d\\n"" , threadnum )"		8768249	0					
ANR	8768380	Callee	fprintf		8768249	0					
ANR	8768381	Identifier	fprintf		8768249	0					
ANR	8768382	ArgumentList	stdio . stderr		8768249	1					
ANR	8768383	Argument	stdio . stderr		8768249	0					
ANR	8768384	MemberAccess	stdio . stderr		8768249	0					
ANR	8768385	Identifier	stdio		8768249	0					
ANR	8768386	Identifier	stderr		8768249	1					
ANR	8768387	Argument	"""Failed to allocate arg space in thread %d\\n"""		8768249	1					
ANR	8768388	PrimaryExpression	"""Failed to allocate arg space in thread %d\\n"""		8768249	0					
ANR	8768389	Argument	threadnum		8768249	2					
ANR	8768390	Identifier	threadnum		8768249	0					
ANR	8768391	ReturnStatement	return ( void * ) - 1 ;	68:8:1424:1441	8768249	1	True				
ANR	8768392	CastExpression	( void * ) - 1		8768249	0					
ANR	8768393	CastTarget	void *		8768249	0					
ANR	8768394	UnaryOperationExpression	- 1		8768249	1					
ANR	8768395	UnaryOperator	-		8768249	0					
ANR	8768396	PrimaryExpression	1		8768249	1					
ANR	8768397	ForStatement	for ( i = 0 ; i < my_argc ; i ++ )		8768249	14					
ANR	8768398	ForInit	i = 0 ;	71:9:1459:1462	8768249	0	True				
ANR	8768399	AssignmentExpression	i = 0		8768249	0		=			
ANR	8768400	Identifier	i		8768249	0					
ANR	8768401	PrimaryExpression	0		8768249	1					
ANR	8768402	Condition	i < my_argc	71:14:1464:1474	8768249	1	True				
ANR	8768403	RelationalExpression	i < my_argc		8768249	0		<			
ANR	8768404	Identifier	i		8768249	0					
ANR	8768405	Identifier	my_argc		8768249	1					
ANR	8768406	PostIncDecOperationExpression	i ++	71:27:1477:1479	8768249	2	True				
ANR	8768407	Identifier	i		8768249	0					
ANR	8768408	IncDec	++		8768249	1					
ANR	8768409	ExpressionStatement	gsargv [ i ] = my_argv [ i ]	72:8:1490:1512	8768249	3	True				
ANR	8768410	AssignmentExpression	gsargv [ i ] = my_argv [ i ]		8768249	0		=			
ANR	8768411	ArrayIndexing	gsargv [ i ]		8768249	0					
ANR	8768412	Identifier	gsargv		8768249	0					
ANR	8768413	Identifier	i		8768249	1					
ANR	8768414	ArrayIndexing	my_argv [ i ]		8768249	1					
ANR	8768415	Identifier	my_argv		8768249	0					
ANR	8768416	Identifier	i		8768249	1					
ANR	8768417	ExpressionStatement	gsargv [ my_argv_file ] = text	73:4:1518:1545	8768249	15	True				
ANR	8768418	AssignmentExpression	gsargv [ my_argv_file ] = text		8768249	0		=			
ANR	8768419	ArrayIndexing	gsargv [ my_argv_file ]		8768249	0					
ANR	8768420	Identifier	gsargv		8768249	0					
ANR	8768421	Identifier	my_argv_file		8768249	1					
ANR	8768422	Identifier	text		8768249	1					
ANR	8768423	ExpressionStatement	gsargc = my_argc	74:4:1551:1567	8768249	16	True				
ANR	8768424	AssignmentExpression	gsargc = my_argc		8768249	0		=			
ANR	8768425	Identifier	gsargc		8768249	0					
ANR	8768426	Identifier	my_argc		8768249	1					
ANR	8768427	ExpressionStatement	"strncpy ( text , my_argv [ my_argv_file ] , sizeof ( text ) )"	76:4:1578:1628	8768249	17	True				
ANR	8768428	CallExpression	"strncpy ( text , my_argv [ my_argv_file ] , sizeof ( text ) )"		8768249	0					
ANR	8768429	Callee	strncpy		8768249	0					
ANR	8768430	Identifier	strncpy		8768249	0					
ANR	8768431	ArgumentList	text		8768249	1					
ANR	8768432	Argument	text		8768249	0					
ANR	8768433	Identifier	text		8768249	0					
ANR	8768434	Argument	my_argv [ my_argv_file ]		8768249	1					
ANR	8768435	ArrayIndexing	my_argv [ my_argv_file ]		8768249	0					
ANR	8768436	Identifier	my_argv		8768249	0					
ANR	8768437	Identifier	my_argv_file		8768249	1					
ANR	8768438	Argument	sizeof ( text )		8768249	2					
ANR	8768439	SizeofExpression	sizeof ( text )		8768249	0					
ANR	8768440	Sizeof	sizeof		8768249	0					
ANR	8768441	SizeofOperand	text		8768249	1					
ANR	8768442	ExpressionStatement	text [ sizeof ( text ) - 1 ] = 0	77:4:1634:1656	8768249	18	True				
ANR	8768443	AssignmentExpression	text [ sizeof ( text ) - 1 ] = 0		8768249	0		=			
ANR	8768444	ArrayIndexing	text [ sizeof ( text ) - 1 ]		8768249	0					
ANR	8768445	Identifier	text		8768249	0					
ANR	8768446	AdditiveExpression	sizeof ( text ) - 1		8768249	1		-			
ANR	8768447	SizeofExpression	sizeof ( text )		8768249	0					
ANR	8768448	Sizeof	sizeof		8768249	0					
ANR	8768449	SizeofOperand	text		8768249	1					
ANR	8768450	PrimaryExpression	1		8768249	1					
ANR	8768451	PrimaryExpression	0		8768249	1					
ANR	8768452	ExpressionStatement	pos = strlen ( text )	78:4:1662:1680	8768249	19	True				
ANR	8768453	AssignmentExpression	pos = strlen ( text )		8768249	0		=			
ANR	8768454	Identifier	pos		8768249	0					
ANR	8768455	CallExpression	strlen ( text )		8768249	1					
ANR	8768456	Callee	strlen		8768249	0					
ANR	8768457	Identifier	strlen		8768249	0					
ANR	8768458	ArgumentList	text		8768249	1					
ANR	8768459	Argument	text		8768249	0					
ANR	8768460	Identifier	text		8768249	0					
ANR	8768461	ExpressionStatement	len = sizeof ( text ) + 1 - pos	79:4:1686:1710	8768249	20	True				
ANR	8768462	AssignmentExpression	len = sizeof ( text ) + 1 - pos		8768249	0		=			
ANR	8768463	Identifier	len		8768249	0					
ANR	8768464	AdditiveExpression	sizeof ( text ) + 1 - pos		8768249	1		+			
ANR	8768465	SizeofExpression	sizeof ( text )		8768249	0					
ANR	8768466	Sizeof	sizeof		8768249	0					
ANR	8768467	SizeofOperand	text		8768249	1					
ANR	8768468	AdditiveExpression	1 - pos		8768249	1		-			
ANR	8768469	PrimaryExpression	1		8768249	0					
ANR	8768470	Identifier	pos		8768249	1					
ANR	8768471	ExpressionStatement	"snprintf ( text + pos , len , ""%d"" , threadnum )"	80:4:1716:1756	8768249	21	True				
ANR	8768472	CallExpression	"snprintf ( text + pos , len , ""%d"" , threadnum )"		8768249	0					
ANR	8768473	Callee	snprintf		8768249	0					
ANR	8768474	Identifier	snprintf		8768249	0					
ANR	8768475	ArgumentList	text + pos		8768249	1					
ANR	8768476	Argument	text + pos		8768249	0					
ANR	8768477	AdditiveExpression	text + pos		8768249	0		+			
ANR	8768478	Identifier	text		8768249	0					
ANR	8768479	Identifier	pos		8768249	1					
ANR	8768480	Argument	len		8768249	1					
ANR	8768481	Identifier	len		8768249	0					
ANR	8768482	Argument	"""%d"""		8768249	2					
ANR	8768483	PrimaryExpression	"""%d"""		8768249	0					
ANR	8768484	Argument	threadnum		8768249	3					
ANR	8768485	Identifier	threadnum		8768249	0					
ANR	8768486	ExpressionStatement	"code = gsapi_new_instance ( & minst , & stdio )"	82:4:1763:1804	8768249	22	True				
ANR	8768487	AssignmentExpression	"code = gsapi_new_instance ( & minst , & stdio )"		8768249	0		=			
ANR	8768488	Identifier	code		8768249	0					
ANR	8768489	CallExpression	"gsapi_new_instance ( & minst , & stdio )"		8768249	1					
ANR	8768490	Callee	gsapi_new_instance		8768249	0					
ANR	8768491	Identifier	gsapi_new_instance		8768249	0					
ANR	8768492	ArgumentList	& minst		8768249	1					
ANR	8768493	Argument	& minst		8768249	0					
ANR	8768494	UnaryOperationExpression	& minst		8768249	0					
ANR	8768495	UnaryOperator	&		8768249	0					
ANR	8768496	Identifier	minst		8768249	1					
ANR	8768497	Argument	& stdio		8768249	1					
ANR	8768498	UnaryOperationExpression	& stdio		8768249	0					
ANR	8768499	UnaryOperator	&		8768249	0					
ANR	8768500	Identifier	stdio		8768249	1					
ANR	8768501	IfStatement	if ( code < 0 )		8768249	23					
ANR	8768502	Condition	code < 0	83:8:1814:1821	8768249	0	True				
ANR	8768503	RelationalExpression	code < 0		8768249	0		<			
ANR	8768504	Identifier	code		8768249	0					
ANR	8768505	PrimaryExpression	0		8768249	1					
ANR	8768506	CompoundStatement		36:4:941:941	8768249	1					
ANR	8768507	ExpressionStatement	"fprintf ( stdio . stderr , ""gsapi_new_instance failure in thread %d\\n"" , threadnum )"	85:8:1838:1915	8768249	0	True				
ANR	8768508	CallExpression	"fprintf ( stdio . stderr , ""gsapi_new_instance failure in thread %d\\n"" , threadnum )"		8768249	0					
ANR	8768509	Callee	fprintf		8768249	0					
ANR	8768510	Identifier	fprintf		8768249	0					
ANR	8768511	ArgumentList	stdio . stderr		8768249	1					
ANR	8768512	Argument	stdio . stderr		8768249	0					
ANR	8768513	MemberAccess	stdio . stderr		8768249	0					
ANR	8768514	Identifier	stdio		8768249	0					
ANR	8768515	Identifier	stderr		8768249	1					
ANR	8768516	Argument	"""gsapi_new_instance failure in thread %d\\n"""		8768249	1					
ANR	8768517	PrimaryExpression	"""gsapi_new_instance failure in thread %d\\n"""		8768249	0					
ANR	8768518	Argument	threadnum		8768249	2					
ANR	8768519	Identifier	threadnum		8768249	0					
ANR	8768520	ExpressionStatement	free ( gsargv )	86:8:1925:1937	8768249	1	True				
ANR	8768521	CallExpression	free ( gsargv )		8768249	0					
ANR	8768522	Callee	free		8768249	0					
ANR	8768523	Identifier	free		8768249	0					
ANR	8768524	ArgumentList	gsargv		8768249	1					
ANR	8768525	Argument	gsargv		8768249	0					
ANR	8768526	Identifier	gsargv		8768249	0					
ANR	8768527	ReturnStatement	return ( void * ) - 1 ;	87:8:1947:1964	8768249	2	True				
ANR	8768528	CastExpression	( void * ) - 1		8768249	0					
ANR	8768529	CastTarget	void *		8768249	0					
ANR	8768530	UnaryOperationExpression	- 1		8768249	1					
ANR	8768531	UnaryOperator	-		8768249	0					
ANR	8768532	PrimaryExpression	1		8768249	1					
ANR	8768533	ExpressionStatement	"gsapi_set_stdio ( minst , my_stdin , my_stdout , my_stderr )"	90:4:1977:2031	8768249	24	True				
ANR	8768534	CallExpression	"gsapi_set_stdio ( minst , my_stdin , my_stdout , my_stderr )"		8768249	0					
ANR	8768535	Callee	gsapi_set_stdio		8768249	0					
ANR	8768536	Identifier	gsapi_set_stdio		8768249	0					
ANR	8768537	ArgumentList	minst		8768249	1					
ANR	8768538	Argument	minst		8768249	0					
ANR	8768539	Identifier	minst		8768249	0					
ANR	8768540	Argument	my_stdin		8768249	1					
ANR	8768541	Identifier	my_stdin		8768249	0					
ANR	8768542	Argument	my_stdout		8768249	2					
ANR	8768543	Identifier	my_stdout		8768249	0					
ANR	8768544	Argument	my_stderr		8768249	3					
ANR	8768545	Identifier	my_stderr		8768249	0					
ANR	8768546	ExpressionStatement	"code = gsapi_init_with_args ( minst , gsargc , gsargv )"	92:4:2038:2088	8768249	25	True				
ANR	8768547	AssignmentExpression	"code = gsapi_init_with_args ( minst , gsargc , gsargv )"		8768249	0		=			
ANR	8768548	Identifier	code		8768249	0					
ANR	8768549	CallExpression	"gsapi_init_with_args ( minst , gsargc , gsargv )"		8768249	1					
ANR	8768550	Callee	gsapi_init_with_args		8768249	0					
ANR	8768551	Identifier	gsapi_init_with_args		8768249	0					
ANR	8768552	ArgumentList	minst		8768249	1					
ANR	8768553	Argument	minst		8768249	0					
ANR	8768554	Identifier	minst		8768249	0					
ANR	8768555	Argument	gsargc		8768249	1					
ANR	8768556	Identifier	gsargc		8768249	0					
ANR	8768557	Argument	gsargv		8768249	2					
ANR	8768558	Identifier	gsargv		8768249	0					
ANR	8768559	ExpressionStatement	code1 = gsapi_exit ( minst )	93:4:2094:2119	8768249	26	True				
ANR	8768560	AssignmentExpression	code1 = gsapi_exit ( minst )		8768249	0		=			
ANR	8768561	Identifier	code1		8768249	0					
ANR	8768562	CallExpression	gsapi_exit ( minst )		8768249	1					
ANR	8768563	Callee	gsapi_exit		8768249	0					
ANR	8768564	Identifier	gsapi_exit		8768249	0					
ANR	8768565	ArgumentList	minst		8768249	1					
ANR	8768566	Argument	minst		8768249	0					
ANR	8768567	Identifier	minst		8768249	0					
ANR	8768568	IfStatement	if ( ( code == 0 ) || ( code == gs_error_Quit ) )		8768249	27					
ANR	8768569	Condition	( code == 0 ) || ( code == gs_error_Quit )	94:8:2129:2166	8768249	0	True				
ANR	8768570	OrExpression	( code == 0 ) || ( code == gs_error_Quit )		8768249	0		||			
ANR	8768571	EqualityExpression	code == 0		8768249	0		==			
ANR	8768572	Identifier	code		8768249	0					
ANR	8768573	PrimaryExpression	0		8768249	1					
ANR	8768574	EqualityExpression	code == gs_error_Quit		8768249	1		==			
ANR	8768575	Identifier	code		8768249	0					
ANR	8768576	Identifier	gs_error_Quit		8768249	1					
ANR	8768577	ExpressionStatement	code = code1	95:8:2177:2189	8768249	1	True				
ANR	8768578	AssignmentExpression	code = code1		8768249	0		=			
ANR	8768579	Identifier	code		8768249	0					
ANR	8768580	Identifier	code1		8768249	1					
ANR	8768581	ExpressionStatement	gsapi_delete_instance ( minst )	97:4:2196:2224	8768249	28	True				
ANR	8768582	CallExpression	gsapi_delete_instance ( minst )		8768249	0					
ANR	8768583	Callee	gsapi_delete_instance		8768249	0					
ANR	8768584	Identifier	gsapi_delete_instance		8768249	0					
ANR	8768585	ArgumentList	minst		8768249	1					
ANR	8768586	Argument	minst		8768249	0					
ANR	8768587	Identifier	minst		8768249	0					
ANR	8768588	ExpressionStatement	free ( gsargv )	99:4:2231:2243	8768249	29	True				
ANR	8768589	CallExpression	free ( gsargv )		8768249	0					
ANR	8768590	Callee	free		8768249	0					
ANR	8768591	Identifier	free		8768249	0					
ANR	8768592	ArgumentList	gsargv		8768249	1					
ANR	8768593	Argument	gsargv		8768249	0					
ANR	8768594	Identifier	gsargv		8768249	0					
ANR	8768595	IfStatement	if ( ( code == 0 ) || ( code == gs_error_Quit ) )		8768249	30					
ANR	8768596	Condition	( code == 0 ) || ( code == gs_error_Quit )	101:8:2254:2291	8768249	0	True				
ANR	8768597	OrExpression	( code == 0 ) || ( code == gs_error_Quit )		8768249	0		||			
ANR	8768598	EqualityExpression	code == 0		8768249	0		==			
ANR	8768599	Identifier	code		8768249	0					
ANR	8768600	PrimaryExpression	0		8768249	1					
ANR	8768601	EqualityExpression	code == gs_error_Quit		8768249	1		==			
ANR	8768602	Identifier	code		8768249	0					
ANR	8768603	Identifier	gs_error_Quit		8768249	1					
ANR	8768604	ReturnStatement	return ( void * ) 0 ;	102:8:2302:2318	8768249	1	True				
ANR	8768605	CastExpression	( void * ) 0		8768249	0					
ANR	8768606	CastTarget	void *		8768249	0					
ANR	8768607	PrimaryExpression	0		8768249	1					
ANR	8768608	ReturnStatement	return ( void * ) 1 ;	104:4:2325:2341	8768249	31	True				
ANR	8768609	CastExpression	( void * ) 1		8768249	0					
ANR	8768610	CastTarget	void *		8768249	0					
ANR	8768611	PrimaryExpression	1		8768249	1					
ANR	8768612	ReturnType	static void *		8768249	1					
ANR	8768613	Identifier	gs_main		8768249	2					
ANR	8768614	ParameterList	void * arg		8768249	3					
ANR	8768615	Parameter	void * arg	48:21:875:883	8768249	0	True				
ANR	8768616	ParameterType	void *		8768249	0					
ANR	8768617	Identifier	arg		8768249	1					
ANR	8768618	CFGEntryNode	ENTRY		8768249		True				
ANR	8768619	CFGExitNode	EXIT		8768249		True				
ANR	8768620	Symbol	& minst		8768249						
ANR	8768621	Symbol	minst		8768249						
ANR	8768622	Symbol	code		8768249						
ANR	8768623	Symbol	code1		8768249						
ANR	8768624	Symbol	stdio		8768249						
ANR	8768625	Symbol	* my_argv_file		8768249						
ANR	8768626	Symbol	my_stderr		8768249						
ANR	8768627	Symbol	* text		8768249						
ANR	8768628	Symbol	gsargv		8768249						
ANR	8768629	Symbol	gsapi_new_instance		8768249						
ANR	8768630	Symbol	stdio . stdout		8768249						
ANR	8768631	Symbol	strlen		8768249						
ANR	8768632	Symbol	len		8768249						
ANR	8768633	Symbol	* my_argv		8768249						
ANR	8768634	Symbol	pos		8768249						
ANR	8768635	Symbol	arg		8768249						
ANR	8768636	Symbol	gsapi_init_with_args		8768249						
ANR	8768637	Symbol	gp_fopen		8768249						
ANR	8768638	Symbol	text		8768249						
ANR	8768639	Symbol	& stdio		8768249						
ANR	8768640	Symbol	threadnum		8768249						
ANR	8768641	Symbol	gs_error_Quit		8768249						
ANR	8768642	Symbol	malloc		8768249						
ANR	8768643	Symbol	gsapi_exit		8768249						
ANR	8768644	Symbol	i		8768249						
ANR	8768645	Symbol	my_argc		8768249						
ANR	8768646	Symbol	my_stdin		8768249						
ANR	8768647	Symbol	my_stdout		8768249						
ANR	8768648	Symbol	stdio . stderr		8768249						
ANR	8768649	Symbol	my_argv_file		8768249						
ANR	8768650	Symbol	* i		8768249						
ANR	8768651	Symbol	my_argv		8768249						
ANR	8768652	Symbol	gsargc		8768249						
ANR	8768653	Symbol	* gsargv		8768249						
ANR	8768654	Function	main	107:0:2346:3180							
ANR	8768655	FunctionDef	"main (int argc , char * argv [ ])"		8768654	0					
ANR	8768656	CompoundStatement		108:0:2379:3180	8768654	0					
ANR	8768657	IdentifierDeclStatement	int i ;	109:4:2385:2390	8768654	0	True				
ANR	8768658	IdentifierDecl	i		8768654	0					
ANR	8768659	IdentifierDeclType	int		8768654	0					
ANR	8768660	Identifier	i		8768654	1					
ANR	8768661	IdentifierDeclStatement	pthread_t thread [ NUM_THREADS ] ;	110:4:2396:2425	8768654	1	True				
ANR	8768662	IdentifierDecl	thread [ NUM_THREADS ]		8768654	0					
ANR	8768663	IdentifierDeclType	pthread_t [ NUM_THREADS ]		8768654	0					
ANR	8768664	Identifier	thread		8768654	1					
ANR	8768665	Identifier	NUM_THREADS		8768654	2					
ANR	8768666	ExpressionStatement	my_argc = argc	112:4:2432:2446	8768654	2	True				
ANR	8768667	AssignmentExpression	my_argc = argc		8768654	0		=			
ANR	8768668	Identifier	my_argc		8768654	0					
ANR	8768669	Identifier	argc		8768654	1					
ANR	8768670	ExpressionStatement	my_argv = argv	113:4:2452:2466	8768654	3	True				
ANR	8768671	AssignmentExpression	my_argv = argv		8768654	0		=			
ANR	8768672	Identifier	my_argv		8768654	0					
ANR	8768673	Identifier	argv		8768654	1					
ANR	8768674	ForStatement	for ( i = 0 ; i < argc ; i ++ )		8768654	4					
ANR	8768675	ForInit	i = 0 ;	115:9:2482:2485	8768654	0	True				
ANR	8768676	AssignmentExpression	i = 0		8768654	0		=			
ANR	8768677	Identifier	i		8768654	0					
ANR	8768678	PrimaryExpression	0		8768654	1					
ANR	8768679	Condition	i < argc	115:14:2487:2494	8768654	1	True				
ANR	8768680	RelationalExpression	i < argc		8768654	0		<			
ANR	8768681	Identifier	i		8768654	0					
ANR	8768682	Identifier	argc		8768654	1					
ANR	8768683	PostIncDecOperationExpression	i ++	115:24:2497:2499	8768654	2	True				
ANR	8768684	Identifier	i		8768654	0					
ANR	8768685	IncDec	++		8768654	1					
ANR	8768686	IfStatement	"if ( ! strcmp ( argv [ i ] , ""-o"" ) )"		8768654	3					
ANR	8768687	Condition	"! strcmp ( argv [ i ] , ""-o"" )"	116:12:2514:2535	8768654	0	True				
ANR	8768688	UnaryOperationExpression	"! strcmp ( argv [ i ] , ""-o"" )"		8768654	0					
ANR	8768689	UnaryOperator	!		8768654	0					
ANR	8768690	CallExpression	"strcmp ( argv [ i ] , ""-o"" )"		8768654	1					
ANR	8768691	Callee	strcmp		8768654	0					
ANR	8768692	Identifier	strcmp		8768654	0					
ANR	8768693	ArgumentList	argv [ i ]		8768654	1					
ANR	8768694	Argument	argv [ i ]		8768654	0					
ANR	8768695	ArrayIndexing	argv [ i ]		8768654	0					
ANR	8768696	Identifier	argv		8768654	0					
ANR	8768697	Identifier	i		8768654	1					
ANR	8768698	Argument	"""-o"""		8768654	1					
ANR	8768699	PrimaryExpression	"""-o"""		8768654	0					
ANR	8768700	BreakStatement	break ;	117:12:2550:2555	8768654	1	True				
ANR	8768701	IfStatement	if ( i >= argc - 1 )		8768654	5					
ANR	8768702	Condition	i >= argc - 1	119:8:2570:2580	8768654	0	True				
ANR	8768703	RelationalExpression	i >= argc - 1		8768654	0		>=			
ANR	8768704	Identifier	i		8768654	0					
ANR	8768705	AdditiveExpression	argc - 1		8768654	1		-			
ANR	8768706	Identifier	argc		8768654	0					
ANR	8768707	PrimaryExpression	1		8768654	1					
ANR	8768708	CompoundStatement		13:4:207:207	8768654	1					
ANR	8768709	ExpressionStatement	"fprintf ( stderr , ""Expected a -o argument to rewrite!\\n"" )"	121:8:2597:2652	8768654	0	True				
ANR	8768710	CallExpression	"fprintf ( stderr , ""Expected a -o argument to rewrite!\\n"" )"		8768654	0					
ANR	8768711	Callee	fprintf		8768654	0					
ANR	8768712	Identifier	fprintf		8768654	0					
ANR	8768713	ArgumentList	stderr		8768654	1					
ANR	8768714	Argument	stderr		8768654	0					
ANR	8768715	Identifier	stderr		8768654	0					
ANR	8768716	Argument	"""Expected a -o argument to rewrite!\\n"""		8768654	1					
ANR	8768717	PrimaryExpression	"""Expected a -o argument to rewrite!\\n"""		8768654	0					
ANR	8768718	ExpressionStatement	exit ( EXIT_FAILURE )	122:8:2662:2680	8768654	1	True				
ANR	8768719	CallExpression	exit ( EXIT_FAILURE )		8768654	0					
ANR	8768720	Callee	exit		8768654	0					
ANR	8768721	Identifier	exit		8768654	0					
ANR	8768722	ArgumentList	EXIT_FAILURE		8768654	1					
ANR	8768723	Argument	EXIT_FAILURE		8768654	0					
ANR	8768724	Identifier	EXIT_FAILURE		8768654	0					
ANR	8768725	ExpressionStatement	my_argv_file = i + 1	124:4:2692:2710	8768654	6	True				
ANR	8768726	AssignmentExpression	my_argv_file = i + 1		8768654	0		=			
ANR	8768727	Identifier	my_argv_file		8768654	0					
ANR	8768728	AdditiveExpression	i + 1		8768654	1		+			
ANR	8768729	Identifier	i		8768654	0					
ANR	8768730	PrimaryExpression	1		8768654	1					
ANR	8768731	ForStatement	for ( i = 0 ; i < NUM_THREADS ; i ++ )		8768654	7					
ANR	8768732	ForInit	i = 0 ;	126:9:2722:2725	8768654	0	True				
ANR	8768733	AssignmentExpression	i = 0		8768654	0		=			
ANR	8768734	Identifier	i		8768654	0					
ANR	8768735	PrimaryExpression	0		8768654	1					
ANR	8768736	Condition	i < NUM_THREADS	126:14:2727:2741	8768654	1	True				
ANR	8768737	RelationalExpression	i < NUM_THREADS		8768654	0		<			
ANR	8768738	Identifier	i		8768654	0					
ANR	8768739	Identifier	NUM_THREADS		8768654	1					
ANR	8768740	PostIncDecOperationExpression	i ++	126:31:2744:2746	8768654	2	True				
ANR	8768741	Identifier	i		8768654	0					
ANR	8768742	IncDec	++		8768654	1					
ANR	8768743	CompoundStatement		20:4:373:373	8768654	3					
ANR	8768744	IfStatement	"if ( pthread_create ( & thread [ i ] , NULL , gs_main , ( void * ) i ) != 0 )"		8768654	0					
ANR	8768745	Condition	"pthread_create ( & thread [ i ] , NULL , gs_main , ( void * ) i ) != 0"	128:12:2767:2823	8768654	0	True				
ANR	8768746	EqualityExpression	"pthread_create ( & thread [ i ] , NULL , gs_main , ( void * ) i ) != 0"		8768654	0		!=			
ANR	8768747	CallExpression	"pthread_create ( & thread [ i ] , NULL , gs_main , ( void * ) i )"		8768654	0					
ANR	8768748	Callee	pthread_create		8768654	0					
ANR	8768749	Identifier	pthread_create		8768654	0					
ANR	8768750	ArgumentList	& thread [ i ]		8768654	1					
ANR	8768751	Argument	& thread [ i ]		8768654	0					
ANR	8768752	UnaryOperationExpression	& thread [ i ]		8768654	0					
ANR	8768753	UnaryOperator	&		8768654	0					
ANR	8768754	ArrayIndexing	thread [ i ]		8768654	1					
ANR	8768755	Identifier	thread		8768654	0					
ANR	8768756	Identifier	i		8768654	1					
ANR	8768757	Argument	NULL		8768654	1					
ANR	8768758	Identifier	NULL		8768654	0					
ANR	8768759	Argument	gs_main		8768654	2					
ANR	8768760	Identifier	gs_main		8768654	0					
ANR	8768761	Argument	( void * ) i		8768654	3					
ANR	8768762	CastExpression	( void * ) i		8768654	0					
ANR	8768763	CastTarget	void *		8768654	0					
ANR	8768764	Identifier	i		8768654	1					
ANR	8768765	PrimaryExpression	0		8768654	1					
ANR	8768766	CompoundStatement		22:8:454:454	8768654	1					
ANR	8768767	ExpressionStatement	"fprintf ( stderr , ""Thread %d creation failed\\n"" , i )"	130:12:2848:2897	8768654	0	True				
ANR	8768768	CallExpression	"fprintf ( stderr , ""Thread %d creation failed\\n"" , i )"		8768654	0					
ANR	8768769	Callee	fprintf		8768654	0					
ANR	8768770	Identifier	fprintf		8768654	0					
ANR	8768771	ArgumentList	stderr		8768654	1					
ANR	8768772	Argument	stderr		8768654	0					
ANR	8768773	Identifier	stderr		8768654	0					
ANR	8768774	Argument	"""Thread %d creation failed\\n"""		8768654	1					
ANR	8768775	PrimaryExpression	"""Thread %d creation failed\\n"""		8768654	0					
ANR	8768776	Argument	i		8768654	2					
ANR	8768777	Identifier	i		8768654	0					
ANR	8768778	ExpressionStatement	exit ( EXIT_FAILURE )	131:12:2911:2929	8768654	1	True				
ANR	8768779	CallExpression	exit ( EXIT_FAILURE )		8768654	0					
ANR	8768780	Callee	exit		8768654	0					
ANR	8768781	Identifier	exit		8768654	0					
ANR	8768782	ArgumentList	EXIT_FAILURE		8768654	1					
ANR	8768783	Argument	EXIT_FAILURE		8768654	0					
ANR	8768784	Identifier	EXIT_FAILURE		8768654	0					
ANR	8768785	ForStatement	for ( i = 0 ; i < NUM_THREADS ; i ++ )		8768654	8					
ANR	8768786	ForInit	i = 0 ;	135:9:2957:2960	8768654	0	True				
ANR	8768787	AssignmentExpression	i = 0		8768654	0		=			
ANR	8768788	Identifier	i		8768654	0					
ANR	8768789	PrimaryExpression	0		8768654	1					
ANR	8768790	Condition	i < NUM_THREADS	135:14:2962:2976	8768654	1	True				
ANR	8768791	RelationalExpression	i < NUM_THREADS		8768654	0		<			
ANR	8768792	Identifier	i		8768654	0					
ANR	8768793	Identifier	NUM_THREADS		8768654	1					
ANR	8768794	PostIncDecOperationExpression	i ++	135:31:2979:2981	8768654	2	True				
ANR	8768795	Identifier	i		8768654	0					
ANR	8768796	IncDec	++		8768654	1					
ANR	8768797	CompoundStatement		29:4:608:608	8768654	3					
ANR	8768798	IfStatement	"if ( pthread_join ( thread [ i ] , NULL ) != 0 )"		8768654	0					
ANR	8768799	Condition	"pthread_join ( thread [ i ] , NULL ) != 0"	137:12:3002:3035	8768654	0	True				
ANR	8768800	EqualityExpression	"pthread_join ( thread [ i ] , NULL ) != 0"		8768654	0		!=			
ANR	8768801	CallExpression	"pthread_join ( thread [ i ] , NULL )"		8768654	0					
ANR	8768802	Callee	pthread_join		8768654	0					
ANR	8768803	Identifier	pthread_join		8768654	0					
ANR	8768804	ArgumentList	thread [ i ]		8768654	1					
ANR	8768805	Argument	thread [ i ]		8768654	0					
ANR	8768806	ArrayIndexing	thread [ i ]		8768654	0					
ANR	8768807	Identifier	thread		8768654	0					
ANR	8768808	Identifier	i		8768654	1					
ANR	8768809	Argument	NULL		8768654	1					
ANR	8768810	Identifier	NULL		8768654	0					
ANR	8768811	PrimaryExpression	0		8768654	1					
ANR	8768812	CompoundStatement		31:8:666:666	8768654	1					
ANR	8768813	ExpressionStatement	"fprintf ( stderr , ""Thread %d join failed\\n"" , i )"	139:12:3060:3105	8768654	0	True				
ANR	8768814	CallExpression	"fprintf ( stderr , ""Thread %d join failed\\n"" , i )"		8768654	0					
ANR	8768815	Callee	fprintf		8768654	0					
ANR	8768816	Identifier	fprintf		8768654	0					
ANR	8768817	ArgumentList	stderr		8768654	1					
ANR	8768818	Argument	stderr		8768654	0					
ANR	8768819	Identifier	stderr		8768654	0					
ANR	8768820	Argument	"""Thread %d join failed\\n"""		8768654	1					
ANR	8768821	PrimaryExpression	"""Thread %d join failed\\n"""		8768654	0					
ANR	8768822	Argument	i		8768654	2					
ANR	8768823	Identifier	i		8768654	0					
ANR	8768824	ExpressionStatement	exit ( EXIT_FAILURE )	140:12:3119:3137	8768654	1	True				
ANR	8768825	CallExpression	exit ( EXIT_FAILURE )		8768654	0					
ANR	8768826	Callee	exit		8768654	0					
ANR	8768827	Identifier	exit		8768654	0					
ANR	8768828	ArgumentList	EXIT_FAILURE		8768654	1					
ANR	8768829	Argument	EXIT_FAILURE		8768654	0					
ANR	8768830	Identifier	EXIT_FAILURE		8768654	0					
ANR	8768831	ReturnStatement	return EXIT_SUCCESS ;	143:4:3159:3178	8768654	9	True				
ANR	8768832	Identifier	EXIT_SUCCESS		8768654	0					
ANR	8768833	ReturnType	int		8768654	1					
ANR	8768834	Identifier	main		8768654	2					
ANR	8768835	ParameterList	"int argc , char * argv [ ]"		8768654	3					
ANR	8768836	Parameter	int argc	107:9:2355:2362	8768654	0	True				
ANR	8768837	ParameterType	int		8768654	0					
ANR	8768838	Identifier	argc		8768654	1					
ANR	8768839	Parameter	char * argv [ ]	107:19:2365:2376	8768654	1	True				
ANR	8768840	ParameterType	char * [ ]		8768654	0					
ANR	8768841	Identifier	argv		8768654	1					
ANR	8768842	CFGEntryNode	ENTRY		8768654		True				
ANR	8768843	CFGExitNode	EXIT		8768654		True				
ANR	8768844	Symbol	argc		8768654						
ANR	8768845	Symbol	strcmp		8768654						
ANR	8768846	Symbol	gs_main		8768654						
ANR	8768847	Symbol	pthread_join		8768654						
ANR	8768848	Symbol	NULL		8768654						
ANR	8768849	Symbol	i		8768654						
ANR	8768850	Symbol	my_argc		8768654						
ANR	8768851	Symbol	* argv		8768654						
ANR	8768852	Symbol	thread		8768654						
ANR	8768853	Symbol	stderr		8768654						
ANR	8768854	Symbol	argv		8768654						
ANR	8768855	Symbol	my_argv_file		8768654						
ANR	8768856	Symbol	NUM_THREADS		8768654						
ANR	8768857	Symbol	* i		8768654						
ANR	8768858	Symbol	EXIT_FAILURE		8768654						
ANR	8768859	Symbol	EXIT_SUCCESS		8768654						
ANR	8768860	Symbol	my_argv		8768654						
ANR	8768861	Symbol	* thread		8768654						
ANR	8768862	Symbol	pthread_create		8768654						
