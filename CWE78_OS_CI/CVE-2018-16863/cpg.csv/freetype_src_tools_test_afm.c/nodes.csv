command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3672044	File	data/converged/CVE-2018-16863_ghostpdl/freetype_src_tools_test_afm.c								
ANR	3672045	Function	dump_fontinfo	6:1:147:1969							
ANR	3672046	FunctionDef	dump_fontinfo (AFM_FontInfo fi)		3672045	0					
ANR	3672047	CompoundStatement		11:2:281:1969	3672045	0					
ANR	3672048	IdentifierDeclStatement	FT_UInt i ;	12:4:287:297	3672045	0	True				
ANR	3672049	IdentifierDecl	i		3672045	0					
ANR	3672050	IdentifierDeclType	FT_UInt		3672045	0					
ANR	3672051	Identifier	i		3672045	1					
ANR	3672052	ExpressionStatement	"printf ( ""This AFM is for %sCID font.\\n\\n"" , ( fi -> IsCIDFont ) ? """" : ""non-"" )"	15:4:305:393	3672045	1	True				
ANR	3672053	CallExpression	"printf ( ""This AFM is for %sCID font.\\n\\n"" , ( fi -> IsCIDFont ) ? """" : ""non-"" )"		3672045	0					
ANR	3672054	Callee	printf		3672045	0					
ANR	3672055	Identifier	printf		3672045	0					
ANR	3672056	ArgumentList	"""This AFM is for %sCID font.\\n\\n"""		3672045	1					
ANR	3672057	Argument	"""This AFM is for %sCID font.\\n\\n"""		3672045	0					
ANR	3672058	PrimaryExpression	"""This AFM is for %sCID font.\\n\\n"""		3672045	0					
ANR	3672059	Argument	"( fi -> IsCIDFont ) ? """" : ""non-"""		3672045	1					
ANR	3672060	ConditionalExpression	"( fi -> IsCIDFont ) ? """" : ""non-"""		3672045	0					
ANR	3672061	Condition	fi -> IsCIDFont		3672045	0					
ANR	3672062	PtrMemberAccess	fi -> IsCIDFont		3672045	0					
ANR	3672063	Identifier	fi		3672045	0					
ANR	3672064	Identifier	IsCIDFont		3672045	1					
ANR	3672065	PrimaryExpression	""""""		3672045	1					
ANR	3672066	PrimaryExpression	"""non-"""		3672045	2					
ANR	3672067	ExpressionStatement	"printf ( ""FontBBox: %.2f %.2f %.2f %.2f\\n"" , fi -> FontBBox . xMin / 65536. , fi -> FontBBox . yMin / 65536. , fi -> FontBBox . xMax / 65536. , fi -> FontBBox . yMax / 65536. )"	18:4:400:696	3672045	2	True				
ANR	3672068	CallExpression	"printf ( ""FontBBox: %.2f %.2f %.2f %.2f\\n"" , fi -> FontBBox . xMin / 65536. , fi -> FontBBox . yMin / 65536. , fi -> FontBBox . xMax / 65536. , fi -> FontBBox . yMax / 65536. )"		3672045	0					
ANR	3672069	Callee	printf		3672045	0					
ANR	3672070	Identifier	printf		3672045	0					
ANR	3672071	ArgumentList	"""FontBBox: %.2f %.2f %.2f %.2f\\n"""		3672045	1					
ANR	3672072	Argument	"""FontBBox: %.2f %.2f %.2f %.2f\\n"""		3672045	0					
ANR	3672073	PrimaryExpression	"""FontBBox: %.2f %.2f %.2f %.2f\\n"""		3672045	0					
ANR	3672074	Argument	fi -> FontBBox . xMin / 65536.		3672045	1					
ANR	3672075	MultiplicativeExpression	fi -> FontBBox . xMin / 65536.		3672045	0		/			
ANR	3672076	MemberAccess	fi -> FontBBox . xMin		3672045	0					
ANR	3672077	PtrMemberAccess	fi -> FontBBox		3672045	0					
ANR	3672078	Identifier	fi		3672045	0					
ANR	3672079	Identifier	FontBBox		3672045	1					
ANR	3672080	Identifier	xMin		3672045	1					
ANR	3672081	PrimaryExpression	65536.		3672045	1					
ANR	3672082	Argument	fi -> FontBBox . yMin / 65536.		3672045	2					
ANR	3672083	MultiplicativeExpression	fi -> FontBBox . yMin / 65536.		3672045	0		/			
ANR	3672084	MemberAccess	fi -> FontBBox . yMin		3672045	0					
ANR	3672085	PtrMemberAccess	fi -> FontBBox		3672045	0					
ANR	3672086	Identifier	fi		3672045	0					
ANR	3672087	Identifier	FontBBox		3672045	1					
ANR	3672088	Identifier	yMin		3672045	1					
ANR	3672089	PrimaryExpression	65536.		3672045	1					
ANR	3672090	Argument	fi -> FontBBox . xMax / 65536.		3672045	3					
ANR	3672091	MultiplicativeExpression	fi -> FontBBox . xMax / 65536.		3672045	0		/			
ANR	3672092	MemberAccess	fi -> FontBBox . xMax		3672045	0					
ANR	3672093	PtrMemberAccess	fi -> FontBBox		3672045	0					
ANR	3672094	Identifier	fi		3672045	0					
ANR	3672095	Identifier	FontBBox		3672045	1					
ANR	3672096	Identifier	xMax		3672045	1					
ANR	3672097	PrimaryExpression	65536.		3672045	1					
ANR	3672098	Argument	fi -> FontBBox . yMax / 65536.		3672045	4					
ANR	3672099	MultiplicativeExpression	fi -> FontBBox . yMax / 65536.		3672045	0		/			
ANR	3672100	MemberAccess	fi -> FontBBox . yMax		3672045	0					
ANR	3672101	PtrMemberAccess	fi -> FontBBox		3672045	0					
ANR	3672102	Identifier	fi		3672045	0					
ANR	3672103	Identifier	FontBBox		3672045	1					
ANR	3672104	Identifier	yMax		3672045	1					
ANR	3672105	PrimaryExpression	65536.		3672045	1					
ANR	3672106	ExpressionStatement	"printf ( ""Ascender: %.2f\\n"" , fi -> Ascender / 65536. )"	22:4:702:753	3672045	3	True				
ANR	3672107	CallExpression	"printf ( ""Ascender: %.2f\\n"" , fi -> Ascender / 65536. )"		3672045	0					
ANR	3672108	Callee	printf		3672045	0					
ANR	3672109	Identifier	printf		3672045	0					
ANR	3672110	ArgumentList	"""Ascender: %.2f\\n"""		3672045	1					
ANR	3672111	Argument	"""Ascender: %.2f\\n"""		3672045	0					
ANR	3672112	PrimaryExpression	"""Ascender: %.2f\\n"""		3672045	0					
ANR	3672113	Argument	fi -> Ascender / 65536.		3672045	1					
ANR	3672114	MultiplicativeExpression	fi -> Ascender / 65536.		3672045	0		/			
ANR	3672115	PtrMemberAccess	fi -> Ascender		3672045	0					
ANR	3672116	Identifier	fi		3672045	0					
ANR	3672117	Identifier	Ascender		3672045	1					
ANR	3672118	PrimaryExpression	65536.		3672045	1					
ANR	3672119	ExpressionStatement	"printf ( ""Descender: %.2f\\n\\n"" , fi -> Descender / 65536. )"	23:4:759:814	3672045	4	True				
ANR	3672120	CallExpression	"printf ( ""Descender: %.2f\\n\\n"" , fi -> Descender / 65536. )"		3672045	0					
ANR	3672121	Callee	printf		3672045	0					
ANR	3672122	Identifier	printf		3672045	0					
ANR	3672123	ArgumentList	"""Descender: %.2f\\n\\n"""		3672045	1					
ANR	3672124	Argument	"""Descender: %.2f\\n\\n"""		3672045	0					
ANR	3672125	PrimaryExpression	"""Descender: %.2f\\n\\n"""		3672045	0					
ANR	3672126	Argument	fi -> Descender / 65536.		3672045	1					
ANR	3672127	MultiplicativeExpression	fi -> Descender / 65536.		3672045	0		/			
ANR	3672128	PtrMemberAccess	fi -> Descender		3672045	0					
ANR	3672129	Identifier	fi		3672045	0					
ANR	3672130	Identifier	Descender		3672045	1					
ANR	3672131	PrimaryExpression	65536.		3672045	1					
ANR	3672132	IfStatement	if ( fi -> NumTrackKern )		3672045	5					
ANR	3672133	Condition	fi -> NumTrackKern	25:9:826:841	3672045	0	True				
ANR	3672134	PtrMemberAccess	fi -> NumTrackKern		3672045	0					
ANR	3672135	Identifier	fi		3672045	0					
ANR	3672136	Identifier	NumTrackKern		3672045	1					
ANR	3672137	ExpressionStatement	"printf ( ""There are %d sets of track kernings:\\n"" , fi -> NumTrackKern )"	26:6:851:933	3672045	1	True				
ANR	3672138	CallExpression	"printf ( ""There are %d sets of track kernings:\\n"" , fi -> NumTrackKern )"		3672045	0					
ANR	3672139	Callee	printf		3672045	0					
ANR	3672140	Identifier	printf		3672045	0					
ANR	3672141	ArgumentList	"""There are %d sets of track kernings:\\n"""		3672045	1					
ANR	3672142	Argument	"""There are %d sets of track kernings:\\n"""		3672045	0					
ANR	3672143	PrimaryExpression	"""There are %d sets of track kernings:\\n"""		3672045	0					
ANR	3672144	Argument	fi -> NumTrackKern		3672045	1					
ANR	3672145	PtrMemberAccess	fi -> NumTrackKern		3672045	0					
ANR	3672146	Identifier	fi		3672045	0					
ANR	3672147	Identifier	NumTrackKern		3672045	1					
ANR	3672148	ElseStatement	else		3672045	0					
ANR	3672149	ExpressionStatement	"printf ( ""There is no track kerning.\\n"" )"	29:6:950:990	3672045	0	True				
ANR	3672150	CallExpression	"printf ( ""There is no track kerning.\\n"" )"		3672045	0					
ANR	3672151	Callee	printf		3672045	0					
ANR	3672152	Identifier	printf		3672045	0					
ANR	3672153	ArgumentList	"""There is no track kerning.\\n"""		3672045	1					
ANR	3672154	Argument	"""There is no track kerning.\\n"""		3672045	0					
ANR	3672155	PrimaryExpression	"""There is no track kerning.\\n"""		3672045	0					
ANR	3672156	ForStatement	for ( i = 0 ; i < fi -> NumTrackKern ; i ++ )		3672045	6					
ANR	3672157	ForInit	i = 0 ;	31:10:1003:1008	3672045	0	True				
ANR	3672158	AssignmentExpression	i = 0		3672045	0		=			
ANR	3672159	Identifier	i		3672045	0					
ANR	3672160	PrimaryExpression	0		3672045	1					
ANR	3672161	Condition	i < fi -> NumTrackKern	31:17:1010:1029	3672045	1	True				
ANR	3672162	RelationalExpression	i < fi -> NumTrackKern		3672045	0		<			
ANR	3672163	Identifier	i		3672045	0					
ANR	3672164	PtrMemberAccess	fi -> NumTrackKern		3672045	1					
ANR	3672165	Identifier	fi		3672045	0					
ANR	3672166	Identifier	NumTrackKern		3672045	1					
ANR	3672167	PostIncDecOperationExpression	i ++	31:39:1032:1034	3672045	2	True				
ANR	3672168	Identifier	i		3672045	0					
ANR	3672169	IncDec	++		3672045	1					
ANR	3672170	CompoundStatement		23:6:768:806	3672045	3					
ANR	3672171	IdentifierDeclStatement	AFM_TrackKern tk = fi -> TrackKerns + i ;	33:6:1050:1088	3672045	0	True				
ANR	3672172	IdentifierDecl	tk = fi -> TrackKerns + i		3672045	0					
ANR	3672173	IdentifierDeclType	AFM_TrackKern		3672045	0					
ANR	3672174	Identifier	tk		3672045	1					
ANR	3672175	AssignmentExpression	tk = fi -> TrackKerns + i		3672045	2		=			
ANR	3672176	Identifier	tk		3672045	0					
ANR	3672177	AdditiveExpression	fi -> TrackKerns + i		3672045	1		+			
ANR	3672178	PtrMemberAccess	fi -> TrackKerns		3672045	0					
ANR	3672179	Identifier	fi		3672045	0					
ANR	3672180	Identifier	TrackKerns		3672045	1					
ANR	3672181	Identifier	i		3672045	1					
ANR	3672182	ExpressionStatement	"printf ( ""\\t%2d: %5.2f %5.2f %5.2f %5.2f\\n"" , tk -> degree , tk -> min_ptsize / 65536. , tk -> min_kern / 65536. , tk -> max_ptsize / 65536. , tk -> max_kern / 65536. )"	36:6:1098:1450	3672045	1	True				
ANR	3672183	CallExpression	"printf ( ""\\t%2d: %5.2f %5.2f %5.2f %5.2f\\n"" , tk -> degree , tk -> min_ptsize / 65536. , tk -> min_kern / 65536. , tk -> max_ptsize / 65536. , tk -> max_kern / 65536. )"		3672045	0					
ANR	3672184	Callee	printf		3672045	0					
ANR	3672185	Identifier	printf		3672045	0					
ANR	3672186	ArgumentList	"""\\t%2d: %5.2f %5.2f %5.2f %5.2f\\n"""		3672045	1					
ANR	3672187	Argument	"""\\t%2d: %5.2f %5.2f %5.2f %5.2f\\n"""		3672045	0					
ANR	3672188	PrimaryExpression	"""\\t%2d: %5.2f %5.2f %5.2f %5.2f\\n"""		3672045	0					
ANR	3672189	Argument	tk -> degree		3672045	1					
ANR	3672190	PtrMemberAccess	tk -> degree		3672045	0					
ANR	3672191	Identifier	tk		3672045	0					
ANR	3672192	Identifier	degree		3672045	1					
ANR	3672193	Argument	tk -> min_ptsize / 65536.		3672045	2					
ANR	3672194	MultiplicativeExpression	tk -> min_ptsize / 65536.		3672045	0		/			
ANR	3672195	PtrMemberAccess	tk -> min_ptsize		3672045	0					
ANR	3672196	Identifier	tk		3672045	0					
ANR	3672197	Identifier	min_ptsize		3672045	1					
ANR	3672198	PrimaryExpression	65536.		3672045	1					
ANR	3672199	Argument	tk -> min_kern / 65536.		3672045	3					
ANR	3672200	MultiplicativeExpression	tk -> min_kern / 65536.		3672045	0		/			
ANR	3672201	PtrMemberAccess	tk -> min_kern		3672045	0					
ANR	3672202	Identifier	tk		3672045	0					
ANR	3672203	Identifier	min_kern		3672045	1					
ANR	3672204	PrimaryExpression	65536.		3672045	1					
ANR	3672205	Argument	tk -> max_ptsize / 65536.		3672045	4					
ANR	3672206	MultiplicativeExpression	tk -> max_ptsize / 65536.		3672045	0		/			
ANR	3672207	PtrMemberAccess	tk -> max_ptsize		3672045	0					
ANR	3672208	Identifier	tk		3672045	0					
ANR	3672209	Identifier	max_ptsize		3672045	1					
ANR	3672210	PrimaryExpression	65536.		3672045	1					
ANR	3672211	Argument	tk -> max_kern / 65536.		3672045	5					
ANR	3672212	MultiplicativeExpression	tk -> max_kern / 65536.		3672045	0		/			
ANR	3672213	PtrMemberAccess	tk -> max_kern		3672045	0					
ANR	3672214	Identifier	tk		3672045	0					
ANR	3672215	Identifier	max_kern		3672045	1					
ANR	3672216	PrimaryExpression	65536.		3672045	1					
ANR	3672217	ExpressionStatement	"printf ( ""\\n"" )"	43:4:1463:1477	3672045	7	True				
ANR	3672218	CallExpression	"printf ( ""\\n"" )"		3672045	0					
ANR	3672219	Callee	printf		3672045	0					
ANR	3672220	Identifier	printf		3672045	0					
ANR	3672221	ArgumentList	"""\\n"""		3672045	1					
ANR	3672222	Argument	"""\\n"""		3672045	0					
ANR	3672223	PrimaryExpression	"""\\n"""		3672045	0					
ANR	3672224	IfStatement	if ( fi -> NumKernPair )		3672045	8					
ANR	3672225	Condition	fi -> NumKernPair	45:9:1489:1503	3672045	0	True				
ANR	3672226	PtrMemberAccess	fi -> NumKernPair		3672045	0					
ANR	3672227	Identifier	fi		3672045	0					
ANR	3672228	Identifier	NumKernPair		3672045	1					
ANR	3672229	ExpressionStatement	"printf ( ""There are %d kerning pairs:\\n"" , fi -> NumKernPair )"	46:6:1513:1585	3672045	1	True				
ANR	3672230	CallExpression	"printf ( ""There are %d kerning pairs:\\n"" , fi -> NumKernPair )"		3672045	0					
ANR	3672231	Callee	printf		3672045	0					
ANR	3672232	Identifier	printf		3672045	0					
ANR	3672233	ArgumentList	"""There are %d kerning pairs:\\n"""		3672045	1					
ANR	3672234	Argument	"""There are %d kerning pairs:\\n"""		3672045	0					
ANR	3672235	PrimaryExpression	"""There are %d kerning pairs:\\n"""		3672045	0					
ANR	3672236	Argument	fi -> NumKernPair		3672045	1					
ANR	3672237	PtrMemberAccess	fi -> NumKernPair		3672045	0					
ANR	3672238	Identifier	fi		3672045	0					
ANR	3672239	Identifier	NumKernPair		3672045	1					
ANR	3672240	ElseStatement	else		3672045	0					
ANR	3672241	ExpressionStatement	"printf ( ""There is no kerning pair.\\n"" )"	49:6:1602:1641	3672045	0	True				
ANR	3672242	CallExpression	"printf ( ""There is no kerning pair.\\n"" )"		3672045	0					
ANR	3672243	Callee	printf		3672045	0					
ANR	3672244	Identifier	printf		3672045	0					
ANR	3672245	ArgumentList	"""There is no kerning pair.\\n"""		3672045	1					
ANR	3672246	Argument	"""There is no kerning pair.\\n"""		3672045	0					
ANR	3672247	PrimaryExpression	"""There is no kerning pair.\\n"""		3672045	0					
ANR	3672248	ForStatement	for ( i = 0 ; i < fi -> NumKernPair ; i ++ )		3672045	9					
ANR	3672249	ForInit	i = 0 ;	51:10:1654:1659	3672045	0	True				
ANR	3672250	AssignmentExpression	i = 0		3672045	0		=			
ANR	3672251	Identifier	i		3672045	0					
ANR	3672252	PrimaryExpression	0		3672045	1					
ANR	3672253	Condition	i < fi -> NumKernPair	51:17:1661:1679	3672045	1	True				
ANR	3672254	RelationalExpression	i < fi -> NumKernPair		3672045	0		<			
ANR	3672255	Identifier	i		3672045	0					
ANR	3672256	PtrMemberAccess	fi -> NumKernPair		3672045	1					
ANR	3672257	Identifier	fi		3672045	0					
ANR	3672258	Identifier	NumKernPair		3672045	1					
ANR	3672259	PostIncDecOperationExpression	i ++	51:38:1682:1684	3672045	2	True				
ANR	3672260	Identifier	i		3672045	0					
ANR	3672261	IncDec	++		3672045	1					
ANR	3672262	CompoundStatement		43:6:1418:1454	3672045	3					
ANR	3672263	IdentifierDeclStatement	AFM_KernPair kp = fi -> KernPairs + i ;	53:6:1700:1736	3672045	0	True				
ANR	3672264	IdentifierDecl	kp = fi -> KernPairs + i		3672045	0					
ANR	3672265	IdentifierDeclType	AFM_KernPair		3672045	0					
ANR	3672266	Identifier	kp		3672045	1					
ANR	3672267	AssignmentExpression	kp = fi -> KernPairs + i		3672045	2		=			
ANR	3672268	Identifier	kp		3672045	0					
ANR	3672269	AdditiveExpression	fi -> KernPairs + i		3672045	1		+			
ANR	3672270	PtrMemberAccess	fi -> KernPairs		3672045	0					
ANR	3672271	Identifier	fi		3672045	0					
ANR	3672272	Identifier	KernPairs		3672045	1					
ANR	3672273	Identifier	i		3672045	1					
ANR	3672274	ExpressionStatement	"printf ( ""\\t%3d + %3d => (%4d, %4d)\\n"" , kp -> index1 , kp -> index2 , kp -> x , kp -> y )"	56:6:1746:1958	3672045	1	True				
ANR	3672275	CallExpression	"printf ( ""\\t%3d + %3d => (%4d, %4d)\\n"" , kp -> index1 , kp -> index2 , kp -> x , kp -> y )"		3672045	0					
ANR	3672276	Callee	printf		3672045	0					
ANR	3672277	Identifier	printf		3672045	0					
ANR	3672278	ArgumentList	"""\\t%3d + %3d => (%4d, %4d)\\n"""		3672045	1					
ANR	3672279	Argument	"""\\t%3d + %3d => (%4d, %4d)\\n"""		3672045	0					
ANR	3672280	PrimaryExpression	"""\\t%3d + %3d => (%4d, %4d)\\n"""		3672045	0					
ANR	3672281	Argument	kp -> index1		3672045	1					
ANR	3672282	PtrMemberAccess	kp -> index1		3672045	0					
ANR	3672283	Identifier	kp		3672045	0					
ANR	3672284	Identifier	index1		3672045	1					
ANR	3672285	Argument	kp -> index2		3672045	2					
ANR	3672286	PtrMemberAccess	kp -> index2		3672045	0					
ANR	3672287	Identifier	kp		3672045	0					
ANR	3672288	Identifier	index2		3672045	1					
ANR	3672289	Argument	kp -> x		3672045	3					
ANR	3672290	PtrMemberAccess	kp -> x		3672045	0					
ANR	3672291	Identifier	kp		3672045	0					
ANR	3672292	Identifier	x		3672045	1					
ANR	3672293	Argument	kp -> y		3672045	4					
ANR	3672294	PtrMemberAccess	kp -> y		3672045	0					
ANR	3672295	Identifier	kp		3672045	0					
ANR	3672296	Identifier	y		3672045	1					
ANR	3672297	ReturnType	include FT_FREETYPE_H include FT_INTERNAL_STREAM_H include FT_INTERNAL_POSTSCRIPT_AUX_H void		3672045	1					
ANR	3672298	Identifier	dump_fontinfo		3672045	2					
ANR	3672299	ParameterList	AFM_FontInfo fi		3672045	3					
ANR	3672300	Parameter	AFM_FontInfo fi	10:22:260:275	3672045	0	True				
ANR	3672301	ParameterType	AFM_FontInfo		3672045	0					
ANR	3672302	Identifier	fi		3672045	1					
ANR	3672303	CFGEntryNode	ENTRY		3672045		True				
ANR	3672304	CFGExitNode	EXIT		3672045		True				
ANR	3672305	Symbol	fi		3672045						
ANR	3672306	Symbol	* kp		3672045						
ANR	3672307	Symbol	kp -> index2		3672045						
ANR	3672308	Symbol	fi -> FontBBox . yMax		3672045						
ANR	3672309	Symbol	kp -> index1		3672045						
ANR	3672310	Symbol	tk -> min_ptsize		3672045						
ANR	3672311	Symbol	kp -> y		3672045						
ANR	3672312	Symbol	fi -> KernPairs		3672045						
ANR	3672313	Symbol	kp -> x		3672045						
ANR	3672314	Symbol	fi -> FontBBox . yMin		3672045						
ANR	3672315	Symbol	fi -> FontBBox . xMax		3672045						
ANR	3672316	Symbol	kp		3672045						
ANR	3672317	Symbol	tk -> max_kern		3672045						
ANR	3672318	Symbol	fi -> NumTrackKern		3672045						
ANR	3672319	Symbol	i		3672045						
ANR	3672320	Symbol	* fi		3672045						
ANR	3672321	Symbol	fi -> TrackKerns		3672045						
ANR	3672322	Symbol	fi -> NumKernPair		3672045						
ANR	3672323	Symbol	fi -> Ascender		3672045						
ANR	3672324	Symbol	fi -> FontBBox		3672045						
ANR	3672325	Symbol	tk -> degree		3672045						
ANR	3672326	Symbol	fi -> FontBBox . xMin		3672045						
ANR	3672327	Symbol	tk -> max_ptsize		3672045						
ANR	3672328	Symbol	fi -> Descender		3672045						
ANR	3672329	Symbol	tk		3672045						
ANR	3672330	Symbol	tk -> min_kern		3672045						
ANR	3672331	Symbol	* tk		3672045						
ANR	3672332	Symbol	fi -> IsCIDFont		3672045						
ANR	3672333	Function	dummy_get_index	64:2:1974:2165							
ANR	3672334	FunctionDef	"dummy_get_index (const char * name , FT_Offset len , void * user_data)"		3672333	0					
ANR	3672335	CompoundStatement		68:2:2099:2165	3672333	0					
ANR	3672336	IfStatement	if ( len )		3672333	0					
ANR	3672337	Condition	len	69:9:2110:2112	3672333	0	True				
ANR	3672338	Identifier	len		3672333	0					
ANR	3672339	ReturnStatement	return name [ 0 ] ;	70:6:2122:2136	3672333	1	True				
ANR	3672340	ArrayIndexing	name [ 0 ]		3672333	0					
ANR	3672341	Identifier	name		3672333	0					
ANR	3672342	PrimaryExpression	0		3672333	1					
ANR	3672343	ElseStatement	else		3672333	0					
ANR	3672344	ReturnStatement	return 0 ;	72:6:2153:2161	3672333	0	True				
ANR	3672345	PrimaryExpression	0		3672333	0					
ANR	3672346	ReturnType	int		3672333	1					
ANR	3672347	Identifier	dummy_get_index		3672333	2					
ANR	3672348	ParameterList	"const char * name , FT_Offset len , void * user_data"		3672333	3					
ANR	3672349	Parameter	const char * name	65:19:1997:2013	3672333	0	True				
ANR	3672350	ParameterType	const char *		3672333	0					
ANR	3672351	Identifier	name		3672333	1					
ANR	3672352	Parameter	FT_Offset len	66:19:2035:2050	3672333	1	True				
ANR	3672353	ParameterType	FT_Offset		3672333	0					
ANR	3672354	Identifier	len		3672333	1					
ANR	3672355	Parameter	void * user_data	67:19:2072:2093	3672333	2	True				
ANR	3672356	ParameterType	void *		3672333	0					
ANR	3672357	Identifier	user_data		3672333	1					
ANR	3672358	CFGEntryNode	ENTRY		3672333		True				
ANR	3672359	CFGExitNode	EXIT		3672333		True				
ANR	3672360	Symbol	* name		3672333						
ANR	3672361	Symbol	len		3672333						
ANR	3672362	Symbol	name		3672333						
ANR	3672363	Symbol	user_data		3672333						
ANR	3672364	Function	parse_afm	75:2:2170:3070							
ANR	3672365	FunctionDef	"parse_afm (FT_Library library , FT_Stream stream , AFM_FontInfo fi)"		3672364	0					
ANR	3672366	CompoundStatement		79:2:2284:3070	3672364	0					
ANR	3672367	IdentifierDeclStatement	PSAux_Service psaux ;	80:4:2290:2310	3672364	0	True				
ANR	3672368	IdentifierDecl	psaux		3672364	0					
ANR	3672369	IdentifierDeclType	PSAux_Service		3672364	0					
ANR	3672370	Identifier	psaux		3672364	1					
ANR	3672371	IdentifierDeclStatement	AFM_ParserRec parser ;	81:4:2316:2337	3672364	1	True				
ANR	3672372	IdentifierDecl	parser		3672364	0					
ANR	3672373	IdentifierDeclType	AFM_ParserRec		3672364	0					
ANR	3672374	Identifier	parser		3672364	1					
ANR	3672375	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	82:4:2343:2375	3672364	2	True				
ANR	3672376	IdentifierDecl	error = FT_Err_Ok		3672364	0					
ANR	3672377	IdentifierDeclType	FT_Error		3672364	0					
ANR	3672378	Identifier	error		3672364	1					
ANR	3672379	AssignmentExpression	error = FT_Err_Ok		3672364	2		=			
ANR	3672380	Identifier	FT_Err_Ok		3672364	0					
ANR	3672381	Identifier	FT_Err_Ok		3672364	1					
ANR	3672382	ExpressionStatement	"psaux = ( PSAux_Service ) FT_Get_Module_Interface ( library , ""psaux"" )"	85:4:2383:2449	3672364	3	True				
ANR	3672383	AssignmentExpression	"psaux = ( PSAux_Service ) FT_Get_Module_Interface ( library , ""psaux"" )"		3672364	0		=			
ANR	3672384	Identifier	psaux		3672364	0					
ANR	3672385	CastExpression	"( PSAux_Service ) FT_Get_Module_Interface ( library , ""psaux"" )"		3672364	1					
ANR	3672386	CastTarget	PSAux_Service		3672364	0					
ANR	3672387	CallExpression	"FT_Get_Module_Interface ( library , ""psaux"" )"		3672364	1					
ANR	3672388	Callee	FT_Get_Module_Interface		3672364	0					
ANR	3672389	Identifier	FT_Get_Module_Interface		3672364	0					
ANR	3672390	ArgumentList	library		3672364	1					
ANR	3672391	Argument	library		3672364	0					
ANR	3672392	Identifier	library		3672364	0					
ANR	3672393	Argument	"""psaux"""		3672364	1					
ANR	3672394	PrimaryExpression	"""psaux"""		3672364	0					
ANR	3672395	IfStatement	if ( ! psaux || ! psaux -> afm_parser_funcs )		3672364	4					
ANR	3672396	Condition	! psaux || ! psaux -> afm_parser_funcs	86:9:2460:2493	3672364	0	True				
ANR	3672397	OrExpression	! psaux || ! psaux -> afm_parser_funcs		3672364	0		||			
ANR	3672398	UnaryOperationExpression	! psaux		3672364	0					
ANR	3672399	UnaryOperator	!		3672364	0					
ANR	3672400	Identifier	psaux		3672364	1					
ANR	3672401	UnaryOperationExpression	! psaux -> afm_parser_funcs		3672364	1					
ANR	3672402	UnaryOperator	!		3672364	0					
ANR	3672403	PtrMemberAccess	psaux -> afm_parser_funcs		3672364	1					
ANR	3672404	Identifier	psaux		3672364	0					
ANR	3672405	Identifier	afm_parser_funcs		3672364	1					
ANR	3672406	ReturnStatement	return - 1 ;	87:6:2503:2512	3672364	1	True				
ANR	3672407	UnaryOperationExpression	- 1		3672364	0					
ANR	3672408	UnaryOperator	-		3672364	0					
ANR	3672409	PrimaryExpression	1		3672364	1					
ANR	3672410	ExpressionStatement	"error = FT_Stream_EnterFrame ( stream , stream -> size )"	89:4:2519:2571	3672364	5	True				
ANR	3672411	AssignmentExpression	"error = FT_Stream_EnterFrame ( stream , stream -> size )"		3672364	0		=			
ANR	3672412	Identifier	error		3672364	0					
ANR	3672413	CallExpression	"FT_Stream_EnterFrame ( stream , stream -> size )"		3672364	1					
ANR	3672414	Callee	FT_Stream_EnterFrame		3672364	0					
ANR	3672415	Identifier	FT_Stream_EnterFrame		3672364	0					
ANR	3672416	ArgumentList	stream		3672364	1					
ANR	3672417	Argument	stream		3672364	0					
ANR	3672418	Identifier	stream		3672364	0					
ANR	3672419	Argument	stream -> size		3672364	1					
ANR	3672420	PtrMemberAccess	stream -> size		3672364	0					
ANR	3672421	Identifier	stream		3672364	0					
ANR	3672422	Identifier	size		3672364	1					
ANR	3672423	IfStatement	if ( error )		3672364	6					
ANR	3672424	Condition	error	90:9:2582:2586	3672364	0	True				
ANR	3672425	Identifier	error		3672364	0					
ANR	3672426	ReturnStatement	return error ;	91:6:2596:2608	3672364	1	True				
ANR	3672427	Identifier	error		3672364	0					
ANR	3672428	ExpressionStatement	"error = psaux -> afm_parser_funcs -> init ( & parser , library -> memory , stream -> cursor , stream -> limit )"	93:4:2615:2840	3672364	7	True				
ANR	3672429	AssignmentExpression	"error = psaux -> afm_parser_funcs -> init ( & parser , library -> memory , stream -> cursor , stream -> limit )"		3672364	0		=			
ANR	3672430	Identifier	error		3672364	0					
ANR	3672431	CallExpression	"psaux -> afm_parser_funcs -> init ( & parser , library -> memory , stream -> cursor , stream -> limit )"		3672364	1					
ANR	3672432	Callee	psaux -> afm_parser_funcs -> init		3672364	0					
ANR	3672433	PtrMemberAccess	psaux -> afm_parser_funcs -> init		3672364	0					
ANR	3672434	PtrMemberAccess	psaux -> afm_parser_funcs		3672364	0					
ANR	3672435	Identifier	psaux		3672364	0					
ANR	3672436	Identifier	afm_parser_funcs		3672364	1					
ANR	3672437	Identifier	init		3672364	1					
ANR	3672438	ArgumentList	& parser		3672364	1					
ANR	3672439	Argument	& parser		3672364	0					
ANR	3672440	UnaryOperationExpression	& parser		3672364	0					
ANR	3672441	UnaryOperator	&		3672364	0					
ANR	3672442	Identifier	parser		3672364	1					
ANR	3672443	Argument	library -> memory		3672364	1					
ANR	3672444	PtrMemberAccess	library -> memory		3672364	0					
ANR	3672445	Identifier	library		3672364	0					
ANR	3672446	Identifier	memory		3672364	1					
ANR	3672447	Argument	stream -> cursor		3672364	2					
ANR	3672448	PtrMemberAccess	stream -> cursor		3672364	0					
ANR	3672449	Identifier	stream		3672364	0					
ANR	3672450	Identifier	cursor		3672364	1					
ANR	3672451	Argument	stream -> limit		3672364	3					
ANR	3672452	PtrMemberAccess	stream -> limit		3672364	0					
ANR	3672453	Identifier	stream		3672364	0					
ANR	3672454	Identifier	limit		3672364	1					
ANR	3672455	IfStatement	if ( error )		3672364	8					
ANR	3672456	Condition	error	97:9:2851:2855	3672364	0	True				
ANR	3672457	Identifier	error		3672364	0					
ANR	3672458	ReturnStatement	return error ;	98:6:2865:2877	3672364	1	True				
ANR	3672459	Identifier	error		3672364	0					
ANR	3672460	ExpressionStatement	parser . FontInfo = fi	100:4:2884:2904	3672364	9	True				
ANR	3672461	AssignmentExpression	parser . FontInfo = fi		3672364	0		=			
ANR	3672462	MemberAccess	parser . FontInfo		3672364	0					
ANR	3672463	Identifier	parser		3672364	0					
ANR	3672464	Identifier	FontInfo		3672364	1					
ANR	3672465	Identifier	fi		3672364	1					
ANR	3672466	ExpressionStatement	parser . get_index = dummy_get_index	101:4:2910:2944	3672364	10	True				
ANR	3672467	AssignmentExpression	parser . get_index = dummy_get_index		3672364	0		=			
ANR	3672468	MemberAccess	parser . get_index		3672364	0					
ANR	3672469	Identifier	parser		3672364	0					
ANR	3672470	Identifier	get_index		3672364	1					
ANR	3672471	Identifier	dummy_get_index		3672364	1					
ANR	3672472	ExpressionStatement	error = psaux -> afm_parser_funcs -> parse ( & parser )	103:4:2951:3000	3672364	11	True				
ANR	3672473	AssignmentExpression	error = psaux -> afm_parser_funcs -> parse ( & parser )		3672364	0		=			
ANR	3672474	Identifier	error		3672364	0					
ANR	3672475	CallExpression	psaux -> afm_parser_funcs -> parse ( & parser )		3672364	1					
ANR	3672476	Callee	psaux -> afm_parser_funcs -> parse		3672364	0					
ANR	3672477	PtrMemberAccess	psaux -> afm_parser_funcs -> parse		3672364	0					
ANR	3672478	PtrMemberAccess	psaux -> afm_parser_funcs		3672364	0					
ANR	3672479	Identifier	psaux		3672364	0					
ANR	3672480	Identifier	afm_parser_funcs		3672364	1					
ANR	3672481	Identifier	parse		3672364	1					
ANR	3672482	ArgumentList	& parser		3672364	1					
ANR	3672483	Argument	& parser		3672364	0					
ANR	3672484	UnaryOperationExpression	& parser		3672364	0					
ANR	3672485	UnaryOperator	&		3672364	0					
ANR	3672486	Identifier	parser		3672364	1					
ANR	3672487	ExpressionStatement	psaux -> afm_parser_funcs -> done ( & parser )	105:4:3007:3047	3672364	12	True				
ANR	3672488	CallExpression	psaux -> afm_parser_funcs -> done ( & parser )		3672364	0					
ANR	3672489	Callee	psaux -> afm_parser_funcs -> done		3672364	0					
ANR	3672490	PtrMemberAccess	psaux -> afm_parser_funcs -> done		3672364	0					
ANR	3672491	PtrMemberAccess	psaux -> afm_parser_funcs		3672364	0					
ANR	3672492	Identifier	psaux		3672364	0					
ANR	3672493	Identifier	afm_parser_funcs		3672364	1					
ANR	3672494	Identifier	done		3672364	1					
ANR	3672495	ArgumentList	& parser		3672364	1					
ANR	3672496	Argument	& parser		3672364	0					
ANR	3672497	UnaryOperationExpression	& parser		3672364	0					
ANR	3672498	UnaryOperator	&		3672364	0					
ANR	3672499	Identifier	parser		3672364	1					
ANR	3672500	ReturnStatement	return error ;	107:4:3054:3066	3672364	13	True				
ANR	3672501	Identifier	error		3672364	0					
ANR	3672502	ReturnType	FT_Error		3672364	1					
ANR	3672503	Identifier	parse_afm		3672364	2					
ANR	3672504	ParameterList	"FT_Library library , FT_Stream stream , AFM_FontInfo fi"		3672364	3					
ANR	3672505	Parameter	FT_Library library	76:13:2192:2212	3672364	0	True				
ANR	3672506	ParameterType	FT_Library		3672364	0					
ANR	3672507	Identifier	library		3672364	1					
ANR	3672508	Parameter	FT_Stream stream	77:13:2228:2247	3672364	1	True				
ANR	3672509	ParameterType	FT_Stream		3672364	0					
ANR	3672510	Identifier	stream		3672364	1					
ANR	3672511	Parameter	AFM_FontInfo fi	78:13:2263:2278	3672364	2	True				
ANR	3672512	ParameterType	AFM_FontInfo		3672364	0					
ANR	3672513	Identifier	fi		3672364	1					
ANR	3672514	CFGEntryNode	ENTRY		3672364		True				
ANR	3672515	CFGExitNode	EXIT		3672364		True				
ANR	3672516	Symbol	psaux		3672364						
ANR	3672517	Symbol	stream -> size		3672364						
ANR	3672518	Symbol	* library		3672364						
ANR	3672519	Symbol	fi		3672364						
ANR	3672520	Symbol	FT_Err_Ok		3672364						
ANR	3672521	Symbol	& parser		3672364						
ANR	3672522	Symbol	library -> memory		3672364						
ANR	3672523	Symbol	psaux -> afm_parser_funcs -> parse		3672364						
ANR	3672524	Symbol	error		3672364						
ANR	3672525	Symbol	psaux -> afm_parser_funcs -> init		3672364						
ANR	3672526	Symbol	library		3672364						
ANR	3672527	Symbol	stream		3672364						
ANR	3672528	Symbol	* * psaux		3672364						
ANR	3672529	Symbol	psaux -> afm_parser_funcs		3672364						
ANR	3672530	Symbol	FT_Stream_EnterFrame		3672364						
ANR	3672531	Symbol	parser . FontInfo		3672364						
ANR	3672532	Symbol	stream -> limit		3672364						
ANR	3672533	Symbol	parser . get_index		3672364						
ANR	3672534	Symbol	* psaux -> afm_parser_funcs		3672364						
ANR	3672535	Symbol	* psaux		3672364						
ANR	3672536	Symbol	FT_Get_Module_Interface		3672364						
ANR	3672537	Symbol	dummy_get_index		3672364						
ANR	3672538	Symbol	parser		3672364						
ANR	3672539	Symbol	stream -> cursor		3672364						
ANR	3672540	Symbol	* stream		3672364						
ANR	3672541	Function	main	111:2:3076:3972							
ANR	3672542	FunctionDef	"main (int argc , char * * argv)"		3672541	0					
ANR	3672543	CompoundStatement		113:2:3127:3972	3672541	0					
ANR	3672544	IdentifierDeclStatement	FT_Library library ;	114:4:3133:3157	3672541	0	True				
ANR	3672545	IdentifierDecl	library		3672541	0					
ANR	3672546	IdentifierDeclType	FT_Library		3672541	0					
ANR	3672547	Identifier	library		3672541	1					
ANR	3672548	IdentifierDeclStatement	FT_StreamRec stream ;	115:4:3163:3186	3672541	1	True				
ANR	3672549	IdentifierDecl	stream		3672541	0					
ANR	3672550	IdentifierDeclType	FT_StreamRec		3672541	0					
ANR	3672551	Identifier	stream		3672541	1					
ANR	3672552	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	116:4:3192:3226	3672541	2	True				
ANR	3672553	IdentifierDecl	error = FT_Err_Ok		3672541	0					
ANR	3672554	IdentifierDeclType	FT_Error		3672541	0					
ANR	3672555	Identifier	error		3672541	1					
ANR	3672556	AssignmentExpression	error = FT_Err_Ok		3672541	2		=			
ANR	3672557	Identifier	FT_Err_Ok		3672541	0					
ANR	3672558	Identifier	FT_Err_Ok		3672541	1					
ANR	3672559	IdentifierDeclStatement	AFM_FontInfoRec fi ;	117:4:3232:3251	3672541	3	True				
ANR	3672560	IdentifierDecl	fi		3672541	0					
ANR	3672561	IdentifierDeclType	AFM_FontInfoRec		3672541	0					
ANR	3672562	Identifier	fi		3672541	1					
ANR	3672563	IfStatement	if ( argc < 2 )		3672541	4					
ANR	3672564	Condition	argc < 2	120:9:3264:3271	3672541	0	True				
ANR	3672565	RelationalExpression	argc < 2		3672541	0		<			
ANR	3672566	Identifier	argc		3672541	0					
ANR	3672567	PrimaryExpression	2		3672541	1					
ANR	3672568	ReturnStatement	return FT_ERR ( Invalid_Argument ) ;	121:6:3281:3314	3672541	1	True				
ANR	3672569	CallExpression	FT_ERR ( Invalid_Argument )		3672541	0					
ANR	3672570	Callee	FT_ERR		3672541	0					
ANR	3672571	Identifier	FT_ERR		3672541	0					
ANR	3672572	ArgumentList	Invalid_Argument		3672541	1					
ANR	3672573	Argument	Invalid_Argument		3672541	0					
ANR	3672574	Identifier	Invalid_Argument		3672541	0					
ANR	3672575	ExpressionStatement	error = FT_Init_FreeType ( & library )	123:4:3321:3357	3672541	5	True				
ANR	3672576	AssignmentExpression	error = FT_Init_FreeType ( & library )		3672541	0		=			
ANR	3672577	Identifier	error		3672541	0					
ANR	3672578	CallExpression	FT_Init_FreeType ( & library )		3672541	1					
ANR	3672579	Callee	FT_Init_FreeType		3672541	0					
ANR	3672580	Identifier	FT_Init_FreeType		3672541	0					
ANR	3672581	ArgumentList	& library		3672541	1					
ANR	3672582	Argument	& library		3672541	0					
ANR	3672583	UnaryOperationExpression	& library		3672541	0					
ANR	3672584	UnaryOperator	&		3672541	0					
ANR	3672585	Identifier	library		3672541	1					
ANR	3672586	IfStatement	if ( error )		3672541	6					
ANR	3672587	Condition	error	124:9:3368:3372	3672541	0	True				
ANR	3672588	Identifier	error		3672541	0					
ANR	3672589	ReturnStatement	return error ;	125:6:3382:3394	3672541	1	True				
ANR	3672590	Identifier	error		3672541	0					
ANR	3672591	ExpressionStatement	FT_ZERO ( & stream )	127:4:3401:3419	3672541	7	True				
ANR	3672592	CallExpression	FT_ZERO ( & stream )		3672541	0					
ANR	3672593	Callee	FT_ZERO		3672541	0					
ANR	3672594	Identifier	FT_ZERO		3672541	0					
ANR	3672595	ArgumentList	& stream		3672541	1					
ANR	3672596	Argument	& stream		3672541	0					
ANR	3672597	UnaryOperationExpression	& stream		3672541	0					
ANR	3672598	UnaryOperator	&		3672541	0					
ANR	3672599	Identifier	stream		3672541	1					
ANR	3672600	ExpressionStatement	"error = FT_Stream_Open ( & stream , argv [ 1 ] )"	128:4:3425:3467	3672541	8	True				
ANR	3672601	AssignmentExpression	"error = FT_Stream_Open ( & stream , argv [ 1 ] )"		3672541	0		=			
ANR	3672602	Identifier	error		3672541	0					
ANR	3672603	CallExpression	"FT_Stream_Open ( & stream , argv [ 1 ] )"		3672541	1					
ANR	3672604	Callee	FT_Stream_Open		3672541	0					
ANR	3672605	Identifier	FT_Stream_Open		3672541	0					
ANR	3672606	ArgumentList	& stream		3672541	1					
ANR	3672607	Argument	& stream		3672541	0					
ANR	3672608	UnaryOperationExpression	& stream		3672541	0					
ANR	3672609	UnaryOperator	&		3672541	0					
ANR	3672610	Identifier	stream		3672541	1					
ANR	3672611	Argument	argv [ 1 ]		3672541	1					
ANR	3672612	ArrayIndexing	argv [ 1 ]		3672541	0					
ANR	3672613	Identifier	argv		3672541	0					
ANR	3672614	PrimaryExpression	1		3672541	1					
ANR	3672615	IfStatement	if ( error )		3672541	9					
ANR	3672616	Condition	error	129:9:3478:3482	3672541	0	True				
ANR	3672617	Identifier	error		3672541	0					
ANR	3672618	GotoStatement	goto Exit ;	130:6:3492:3501	3672541	1	True				
ANR	3672619	Identifier	Exit		3672541	0					
ANR	3672620	ExpressionStatement	stream . memory = library -> memory	131:4:3507:3538	3672541	10	True				
ANR	3672621	AssignmentExpression	stream . memory = library -> memory		3672541	0		=			
ANR	3672622	MemberAccess	stream . memory		3672541	0					
ANR	3672623	Identifier	stream		3672541	0					
ANR	3672624	Identifier	memory		3672541	1					
ANR	3672625	PtrMemberAccess	library -> memory		3672541	1					
ANR	3672626	Identifier	library		3672541	0					
ANR	3672627	Identifier	memory		3672541	1					
ANR	3672628	ExpressionStatement	FT_ZERO ( & fi )	133:4:3545:3559	3672541	11	True				
ANR	3672629	CallExpression	FT_ZERO ( & fi )		3672541	0					
ANR	3672630	Callee	FT_ZERO		3672541	0					
ANR	3672631	Identifier	FT_ZERO		3672541	0					
ANR	3672632	ArgumentList	& fi		3672541	1					
ANR	3672633	Argument	& fi		3672541	0					
ANR	3672634	UnaryOperationExpression	& fi		3672541	0					
ANR	3672635	UnaryOperator	&		3672541	0					
ANR	3672636	Identifier	fi		3672541	1					
ANR	3672637	ExpressionStatement	"error = parse_afm ( library , & stream , & fi )"	134:4:3565:3607	3672541	12	True				
ANR	3672638	AssignmentExpression	"error = parse_afm ( library , & stream , & fi )"		3672541	0		=			
ANR	3672639	Identifier	error		3672541	0					
ANR	3672640	CallExpression	"parse_afm ( library , & stream , & fi )"		3672541	1					
ANR	3672641	Callee	parse_afm		3672541	0					
ANR	3672642	Identifier	parse_afm		3672541	0					
ANR	3672643	ArgumentList	library		3672541	1					
ANR	3672644	Argument	library		3672541	0					
ANR	3672645	Identifier	library		3672541	0					
ANR	3672646	Argument	& stream		3672541	1					
ANR	3672647	UnaryOperationExpression	& stream		3672541	0					
ANR	3672648	UnaryOperator	&		3672541	0					
ANR	3672649	Identifier	stream		3672541	1					
ANR	3672650	Argument	& fi		3672541	2					
ANR	3672651	UnaryOperationExpression	& fi		3672541	0					
ANR	3672652	UnaryOperator	&		3672541	0					
ANR	3672653	Identifier	fi		3672541	1					
ANR	3672654	IfStatement	if ( ! error )		3672541	13					
ANR	3672655	Condition	! error	136:9:3619:3624	3672541	0	True				
ANR	3672656	UnaryOperationExpression	! error		3672541	0					
ANR	3672657	UnaryOperator	!		3672541	0					
ANR	3672658	Identifier	error		3672541	1					
ANR	3672659	CompoundStatement		26:6:512:547	3672541	1					
ANR	3672660	IdentifierDeclStatement	FT_Memory memory = library -> memory ;	138:6:3640:3675	3672541	0	True				
ANR	3672661	IdentifierDecl	memory = library -> memory		3672541	0					
ANR	3672662	IdentifierDeclType	FT_Memory		3672541	0					
ANR	3672663	Identifier	memory		3672541	1					
ANR	3672664	AssignmentExpression	memory = library -> memory		3672541	2		=			
ANR	3672665	Identifier	memory		3672541	0					
ANR	3672666	PtrMemberAccess	library -> memory		3672541	1					
ANR	3672667	Identifier	library		3672541	0					
ANR	3672668	Identifier	memory		3672541	1					
ANR	3672669	ExpressionStatement	dump_fontinfo ( & fi )	141:6:3685:3705	3672541	1	True				
ANR	3672670	CallExpression	dump_fontinfo ( & fi )		3672541	0					
ANR	3672671	Callee	dump_fontinfo		3672541	0					
ANR	3672672	Identifier	dump_fontinfo		3672541	0					
ANR	3672673	ArgumentList	& fi		3672541	1					
ANR	3672674	Argument	& fi		3672541	0					
ANR	3672675	UnaryOperationExpression	& fi		3672541	0					
ANR	3672676	UnaryOperator	&		3672541	0					
ANR	3672677	Identifier	fi		3672541	1					
ANR	3672678	IfStatement	if ( fi . KernPairs )		3672541	2					
ANR	3672679	Condition	fi . KernPairs	143:11:3719:3730	3672541	0	True				
ANR	3672680	MemberAccess	fi . KernPairs		3672541	0					
ANR	3672681	Identifier	fi		3672541	0					
ANR	3672682	Identifier	KernPairs		3672541	1					
ANR	3672683	ExpressionStatement	FT_FREE ( fi . KernPairs )	144:8:3742:3765	3672541	1	True				
ANR	3672684	CallExpression	FT_FREE ( fi . KernPairs )		3672541	0					
ANR	3672685	Callee	FT_FREE		3672541	0					
ANR	3672686	Identifier	FT_FREE		3672541	0					
ANR	3672687	ArgumentList	fi . KernPairs		3672541	1					
ANR	3672688	Argument	fi . KernPairs		3672541	0					
ANR	3672689	MemberAccess	fi . KernPairs		3672541	0					
ANR	3672690	Identifier	fi		3672541	0					
ANR	3672691	Identifier	KernPairs		3672541	1					
ANR	3672692	IfStatement	if ( fi . TrackKerns )		3672541	3					
ANR	3672693	Condition	fi . TrackKerns	145:11:3778:3790	3672541	0	True				
ANR	3672694	MemberAccess	fi . TrackKerns		3672541	0					
ANR	3672695	Identifier	fi		3672541	0					
ANR	3672696	Identifier	TrackKerns		3672541	1					
ANR	3672697	ExpressionStatement	FT_FREE ( fi . TrackKerns )	146:8:3802:3826	3672541	1	True				
ANR	3672698	CallExpression	FT_FREE ( fi . TrackKerns )		3672541	0					
ANR	3672699	Callee	FT_FREE		3672541	0					
ANR	3672700	Identifier	FT_FREE		3672541	0					
ANR	3672701	ArgumentList	fi . TrackKerns		3672541	1					
ANR	3672702	Argument	fi . TrackKerns		3672541	0					
ANR	3672703	MemberAccess	fi . TrackKerns		3672541	0					
ANR	3672704	Identifier	fi		3672541	0					
ANR	3672705	Identifier	TrackKerns		3672541	1					
ANR	3672706	ElseStatement	else		3672541	0					
ANR	3672707	ExpressionStatement	"printf ( ""parse error\\n"" )"	149:6:3849:3874	3672541	0	True				
ANR	3672708	CallExpression	"printf ( ""parse error\\n"" )"		3672541	0					
ANR	3672709	Callee	printf		3672541	0					
ANR	3672710	Identifier	printf		3672541	0					
ANR	3672711	ArgumentList	"""parse error\\n"""		3672541	1					
ANR	3672712	Argument	"""parse error\\n"""		3672541	0					
ANR	3672713	PrimaryExpression	"""parse error\\n"""		3672541	0					
ANR	3672714	ExpressionStatement	FT_Stream_Close ( & stream )	151:4:3881:3907	3672541	14	True				
ANR	3672715	CallExpression	FT_Stream_Close ( & stream )		3672541	0					
ANR	3672716	Callee	FT_Stream_Close		3672541	0					
ANR	3672717	Identifier	FT_Stream_Close		3672541	0					
ANR	3672718	ArgumentList	& stream		3672541	1					
ANR	3672719	Argument	& stream		3672541	0					
ANR	3672720	UnaryOperationExpression	& stream		3672541	0					
ANR	3672721	UnaryOperator	&		3672541	0					
ANR	3672722	Identifier	stream		3672541	1					
ANR	3672723	Label	Exit :	153:2:3912:3916	3672541	15	True				
ANR	3672724	Identifier	Exit		3672541	0					
ANR	3672725	ExpressionStatement	FT_Done_FreeType ( library )	154:4:3922:3949	3672541	16	True				
ANR	3672726	CallExpression	FT_Done_FreeType ( library )		3672541	0					
ANR	3672727	Callee	FT_Done_FreeType		3672541	0					
ANR	3672728	Identifier	FT_Done_FreeType		3672541	0					
ANR	3672729	ArgumentList	library		3672541	1					
ANR	3672730	Argument	library		3672541	0					
ANR	3672731	Identifier	library		3672541	0					
ANR	3672732	ReturnStatement	return error ;	156:4:3956:3968	3672541	17	True				
ANR	3672733	Identifier	error		3672541	0					
ANR	3672734	ReturnType	int		3672541	1					
ANR	3672735	Identifier	main		3672541	2					
ANR	3672736	ParameterList	"int argc , char * * argv"		3672541	3					
ANR	3672737	Parameter	int argc	111:12:3086:3096	3672541	0	True				
ANR	3672738	ParameterType	int		3672541	0					
ANR	3672739	Identifier	argc		3672541	1					
ANR	3672740	Parameter	char * * argv	112:12:3111:3121	3672541	1	True				
ANR	3672741	ParameterType	char * *		3672541	0					
ANR	3672742	Identifier	argv		3672541	1					
ANR	3672743	CFGEntryNode	ENTRY		3672541		True				
ANR	3672744	CFGExitNode	EXIT		3672541		True				
ANR	3672745	Symbol	argc		3672541						
ANR	3672746	Symbol	FT_Init_FreeType		3672541						
ANR	3672747	Symbol	* library		3672541						
ANR	3672748	Symbol	fi		3672541						
ANR	3672749	Symbol	memory		3672541						
ANR	3672750	Symbol	FT_Err_Ok		3672541						
ANR	3672751	Symbol	library -> memory		3672541						
ANR	3672752	Symbol	stream . memory		3672541						
ANR	3672753	Symbol	* argv		3672541						
ANR	3672754	Symbol	Invalid_Argument		3672541						
ANR	3672755	Symbol	FT_ERR		3672541						
ANR	3672756	Symbol	error		3672541						
ANR	3672757	Symbol	& fi		3672541						
ANR	3672758	Symbol	argv		3672541						
ANR	3672759	Symbol	FT_Stream_Open		3672541						
ANR	3672760	Symbol	library		3672541						
ANR	3672761	Symbol	& stream		3672541						
ANR	3672762	Symbol	stream		3672541						
ANR	3672763	Symbol	& library		3672541						
ANR	3672764	Symbol	fi . TrackKerns		3672541						
ANR	3672765	Symbol	parse_afm		3672541						
ANR	3672766	Symbol	fi . KernPairs		3672541						
