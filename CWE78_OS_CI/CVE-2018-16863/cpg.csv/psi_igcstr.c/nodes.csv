command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8864546	File	data/converged/CVE-2018-16863_ghostpdl/psi_igcstr.c								
ANR	8864547	DeclStmt									
ANR	8864548	Decl							bool	"bool ( const byte * , uint , bool , const clump_t * )"	gc_mark_string
ANR	8864549	Function	gc_strings_set_marks	30:0:899:1289							
ANR	8864550	FunctionDef	"gc_strings_set_marks (clump_t * cp , bool mark)"		8864549	0					
ANR	8864551	CompoundStatement		32:0:950:1289	8864549	0					
ANR	8864552	IfStatement	if ( cp -> smark != 0 )		8864549	0					
ANR	8864553	Condition	cp -> smark != 0	33:8:960:973	8864549	0	True				
ANR	8864554	EqualityExpression	cp -> smark != 0		8864549	0		!=			
ANR	8864555	PtrMemberAccess	cp -> smark		8864549	0					
ANR	8864556	Identifier	cp		8864549	0					
ANR	8864557	Identifier	smark		8864549	1					
ANR	8864558	PrimaryExpression	0		8864549	1					
ANR	8864559	CompoundStatement		2:24:25:25	8864549	1					
ANR	8864560	ExpressionStatement	"if_debug3 ( '6' , ""[6]clearing string marks 0x%lx[%u] to %d\\n"" , ( ulong ) cp -> smark , cp -> smark_size , ( int ) mark )"	34:8:986:1110	8864549	0	True				
ANR	8864561	CallExpression	"if_debug3 ( '6' , ""[6]clearing string marks 0x%lx[%u] to %d\\n"" , ( ulong ) cp -> smark , cp -> smark_size , ( int ) mark )"		8864549	0					
ANR	8864562	Callee	if_debug3		8864549	0					
ANR	8864563	Identifier	if_debug3		8864549	0					
ANR	8864564	ArgumentList	'6'		8864549	1					
ANR	8864565	Argument	'6'		8864549	0					
ANR	8864566	PrimaryExpression	'6'		8864549	0					
ANR	8864567	Argument	"""[6]clearing string marks 0x%lx[%u] to %d\\n"""		8864549	1					
ANR	8864568	PrimaryExpression	"""[6]clearing string marks 0x%lx[%u] to %d\\n"""		8864549	0					
ANR	8864569	Argument	( ulong ) cp -> smark		8864549	2					
ANR	8864570	CastExpression	( ulong ) cp -> smark		8864549	0					
ANR	8864571	CastTarget	ulong		8864549	0					
ANR	8864572	PtrMemberAccess	cp -> smark		8864549	1					
ANR	8864573	Identifier	cp		8864549	0					
ANR	8864574	Identifier	smark		8864549	1					
ANR	8864575	Argument	cp -> smark_size		8864549	3					
ANR	8864576	PtrMemberAccess	cp -> smark_size		8864549	0					
ANR	8864577	Identifier	cp		8864549	0					
ANR	8864578	Identifier	smark_size		8864549	1					
ANR	8864579	Argument	( int ) mark		8864549	4					
ANR	8864580	CastExpression	( int ) mark		8864549	0					
ANR	8864581	CastTarget	int		8864549	0					
ANR	8864582	Identifier	mark		8864549	1					
ANR	8864583	ExpressionStatement	"memset ( cp -> smark , 0 , cp -> smark_size )"	36:8:1120:1156	8864549	1	True				
ANR	8864584	CallExpression	"memset ( cp -> smark , 0 , cp -> smark_size )"		8864549	0					
ANR	8864585	Callee	memset		8864549	0					
ANR	8864586	Identifier	memset		8864549	0					
ANR	8864587	ArgumentList	cp -> smark		8864549	1					
ANR	8864588	Argument	cp -> smark		8864549	0					
ANR	8864589	PtrMemberAccess	cp -> smark		8864549	0					
ANR	8864590	Identifier	cp		8864549	0					
ANR	8864591	Identifier	smark		8864549	1					
ANR	8864592	Argument	0		8864549	1					
ANR	8864593	PrimaryExpression	0		8864549	0					
ANR	8864594	Argument	cp -> smark_size		8864549	2					
ANR	8864595	PtrMemberAccess	cp -> smark_size		8864549	0					
ANR	8864596	Identifier	cp		8864549	0					
ANR	8864597	Identifier	smark_size		8864549	1					
ANR	8864598	IfStatement	if ( mark )		8864549	2					
ANR	8864599	Condition	mark	37:12:1170:1173	8864549	0	True				
ANR	8864600	Identifier	mark		8864549	0					
ANR	8864601	ExpressionStatement	"gc_mark_string ( cp -> sbase + HDR_ID_OFFSET , ( cp -> climit - cp -> sbase ) - HDR_ID_OFFSET , true , cp )"	38:12:1188:1281	8864549	1	True				
ANR	8864602	CallExpression	"gc_mark_string ( cp -> sbase + HDR_ID_OFFSET , ( cp -> climit - cp -> sbase ) - HDR_ID_OFFSET , true , cp )"		8864549	0					
ANR	8864603	Callee	gc_mark_string		8864549	0					
ANR	8864604	Identifier	gc_mark_string		8864549	0					
ANR	8864605	ArgumentList	cp -> sbase + HDR_ID_OFFSET		8864549	1					
ANR	8864606	Argument	cp -> sbase + HDR_ID_OFFSET		8864549	0					
ANR	8864607	AdditiveExpression	cp -> sbase + HDR_ID_OFFSET		8864549	0		+			
ANR	8864608	PtrMemberAccess	cp -> sbase		8864549	0					
ANR	8864609	Identifier	cp		8864549	0					
ANR	8864610	Identifier	sbase		8864549	1					
ANR	8864611	Identifier	HDR_ID_OFFSET		8864549	1					
ANR	8864612	Argument	( cp -> climit - cp -> sbase ) - HDR_ID_OFFSET		8864549	1					
ANR	8864613	AdditiveExpression	( cp -> climit - cp -> sbase ) - HDR_ID_OFFSET		8864549	0		-			
ANR	8864614	AdditiveExpression	cp -> climit - cp -> sbase		8864549	0		-			
ANR	8864615	PtrMemberAccess	cp -> climit		8864549	0					
ANR	8864616	Identifier	cp		8864549	0					
ANR	8864617	Identifier	climit		8864549	1					
ANR	8864618	PtrMemberAccess	cp -> sbase		8864549	1					
ANR	8864619	Identifier	cp		8864549	0					
ANR	8864620	Identifier	sbase		8864549	1					
ANR	8864621	Identifier	HDR_ID_OFFSET		8864549	1					
ANR	8864622	Argument	true		8864549	2					
ANR	8864623	Identifier	true		8864549	0					
ANR	8864624	Argument	cp		8864549	3					
ANR	8864625	Identifier	cp		8864549	0					
ANR	8864626	ReturnType	void		8864549	1					
ANR	8864627	Identifier	gc_strings_set_marks		8864549	2					
ANR	8864628	ParameterList	"clump_t * cp , bool mark"		8864549	3					
ANR	8864629	Parameter	clump_t * cp	31:21:925:936	8864549	0	True				
ANR	8864630	ParameterType	clump_t *		8864549	0					
ANR	8864631	Identifier	cp		8864549	1					
ANR	8864632	Parameter	bool mark	31:35:939:947	8864549	1	True				
ANR	8864633	ParameterType	bool		8864549	0					
ANR	8864634	Identifier	mark		8864549	1					
ANR	8864635	CFGEntryNode	ENTRY		8864549		True				
ANR	8864636	CFGExitNode	EXIT		8864549		True				
ANR	8864637	Symbol	* cp		8864549						
ANR	8864638	Symbol	HDR_ID_OFFSET		8864549						
ANR	8864639	Symbol	true		8864549						
ANR	8864640	Symbol	cp -> smark_size		8864549						
ANR	8864641	Symbol	cp		8864549						
ANR	8864642	Symbol	cp -> sbase		8864549						
ANR	8864643	Symbol	mark		8864549						
ANR	8864644	Symbol	cp -> smark		8864549						
ANR	8864645	Symbol	cp -> climit		8864549						
ANR	8864646	DeclStmt									
ANR	8864647	Decl							string_mark_unit	string_mark_unit	bword
ANR	8864648	Function	gc_mark_string	63:0:2021:3562							
ANR	8864649	FunctionDef	"gc_mark_string (const byte * ptr , uint size , bool set , const clump_t * cp)"		8864648	0					
ANR	8864650	CompoundStatement		65:0:2107:3562	8864648	0					
ANR	8864651	IdentifierDeclStatement	uint offset = ( ptr - HDR_ID_OFFSET ) - cp -> sbase ;	66:4:2113:2160	8864648	0	True				
ANR	8864652	IdentifierDecl	offset = ( ptr - HDR_ID_OFFSET ) - cp -> sbase		8864648	0					
ANR	8864653	IdentifierDeclType	uint		8864648	0					
ANR	8864654	Identifier	offset		8864648	1					
ANR	8864655	AssignmentExpression	offset = ( ptr - HDR_ID_OFFSET ) - cp -> sbase		8864648	2		=			
ANR	8864656	Identifier	offset		8864648	0					
ANR	8864657	AdditiveExpression	( ptr - HDR_ID_OFFSET ) - cp -> sbase		8864648	1		-			
ANR	8864658	AdditiveExpression	ptr - HDR_ID_OFFSET		8864648	0		-			
ANR	8864659	Identifier	ptr		8864648	0					
ANR	8864660	Identifier	HDR_ID_OFFSET		8864648	1					
ANR	8864661	PtrMemberAccess	cp -> sbase		8864648	1					
ANR	8864662	Identifier	cp		8864648	0					
ANR	8864663	Identifier	sbase		8864648	1					
ANR	8864664	IdentifierDeclStatement	bword * bp = ( bword * ) ( cp -> smark + ( ( offset & - bword_bits ) >> 3 ) ) ;	67:4:2166:2231	8864648	1	True				
ANR	8864665	IdentifierDecl	* bp = ( bword * ) ( cp -> smark + ( ( offset & - bword_bits ) >> 3 ) )		8864648	0					
ANR	8864666	IdentifierDeclType	bword *		8864648	0					
ANR	8864667	Identifier	bp		8864648	1					
ANR	8864668	AssignmentExpression	* bp = ( bword * ) ( cp -> smark + ( ( offset & - bword_bits ) >> 3 ) )		8864648	2		=			
ANR	8864669	Identifier	bp		8864648	0					
ANR	8864670	CastExpression	( bword * ) ( cp -> smark + ( ( offset & - bword_bits ) >> 3 ) )		8864648	1					
ANR	8864671	CastTarget	bword *		8864648	0					
ANR	8864672	AdditiveExpression	cp -> smark + ( ( offset & - bword_bits ) >> 3 )		8864648	1		+			
ANR	8864673	PtrMemberAccess	cp -> smark		8864648	0					
ANR	8864674	Identifier	cp		8864648	0					
ANR	8864675	Identifier	smark		8864648	1					
ANR	8864676	ShiftExpression	( offset & - bword_bits ) >> 3		8864648	1		>>			
ANR	8864677	BitAndExpression	offset & - bword_bits		8864648	0		&			
ANR	8864678	Identifier	offset		8864648	0					
ANR	8864679	UnaryOperationExpression	- bword_bits		8864648	1					
ANR	8864680	UnaryOperator	-		8864648	0					
ANR	8864681	Identifier	bword_bits		8864648	1					
ANR	8864682	PrimaryExpression	3		8864648	1					
ANR	8864683	IdentifierDeclStatement	uint bn = offset & ( bword_bits - 1 ) ;	68:4:2237:2272	8864648	2	True				
ANR	8864684	IdentifierDecl	bn = offset & ( bword_bits - 1 )		8864648	0					
ANR	8864685	IdentifierDeclType	uint		8864648	0					
ANR	8864686	Identifier	bn		8864648	1					
ANR	8864687	AssignmentExpression	bn = offset & ( bword_bits - 1 )		8864648	2		=			
ANR	8864688	Identifier	bn		8864648	0					
ANR	8864689	BitAndExpression	offset & ( bword_bits - 1 )		8864648	1		&			
ANR	8864690	Identifier	offset		8864648	0					
ANR	8864691	AdditiveExpression	bword_bits - 1		8864648	1		-			
ANR	8864692	Identifier	bword_bits		8864648	0					
ANR	8864693	PrimaryExpression	1		8864648	1					
ANR	8864694	IdentifierDeclStatement	bword m = bword_1s << bn ;	69:4:2278:2302	8864648	3	True				
ANR	8864695	IdentifierDecl	m = bword_1s << bn		8864648	0					
ANR	8864696	IdentifierDeclType	bword		8864648	0					
ANR	8864697	Identifier	m		8864648	1					
ANR	8864698	AssignmentExpression	m = bword_1s << bn		8864648	2		=			
ANR	8864699	Identifier	m		8864648	0					
ANR	8864700	ShiftExpression	bword_1s << bn		8864648	1		<<			
ANR	8864701	Identifier	bword_1s		8864648	0					
ANR	8864702	Identifier	bn		8864648	1					
ANR	8864703	IdentifierDeclStatement	uint left = size + HDR_ID_OFFSET ;	70:4:2308:2340	8864648	4	True				
ANR	8864704	IdentifierDecl	left = size + HDR_ID_OFFSET		8864648	0					
ANR	8864705	IdentifierDeclType	uint		8864648	0					
ANR	8864706	Identifier	left		8864648	1					
ANR	8864707	AssignmentExpression	left = size + HDR_ID_OFFSET		8864648	2		=			
ANR	8864708	Identifier	left		8864648	0					
ANR	8864709	AdditiveExpression	size + HDR_ID_OFFSET		8864648	1		+			
ANR	8864710	Identifier	size		8864648	0					
ANR	8864711	Identifier	HDR_ID_OFFSET		8864648	1					
ANR	8864712	IdentifierDeclStatement	bword marks = 0 ;	71:4:2346:2361	8864648	5	True				
ANR	8864713	IdentifierDecl	marks = 0		8864648	0					
ANR	8864714	IdentifierDeclType	bword		8864648	0					
ANR	8864715	Identifier	marks		8864648	1					
ANR	8864716	AssignmentExpression	marks = 0		8864648	2		=			
ANR	8864717	Identifier	marks		8864648	0					
ANR	8864718	PrimaryExpression	0		8864648	1					
ANR	8864719	ExpressionStatement	bword_swap_bytes ( m )	73:4:2368:2387	8864648	6	True				
ANR	8864720	CallExpression	bword_swap_bytes ( m )		8864648	0					
ANR	8864721	Callee	bword_swap_bytes		8864648	0					
ANR	8864722	Identifier	bword_swap_bytes		8864648	0					
ANR	8864723	ArgumentList	m		8864648	1					
ANR	8864724	Argument	m		8864648	0					
ANR	8864725	Identifier	m		8864648	0					
ANR	8864726	IfStatement	if ( set )		8864648	7					
ANR	8864727	Condition	set	74:8:2397:2399	8864648	0	True				
ANR	8864728	Identifier	set		8864648	0					
ANR	8864729	CompoundStatement		10:13:294:294	8864648	1					
ANR	8864730	IfStatement	if ( left + bn >= bword_bits )		8864648	0					
ANR	8864731	Condition	left + bn >= bword_bits	75:12:2416:2438	8864648	0	True				
ANR	8864732	RelationalExpression	left + bn >= bword_bits		8864648	0		>=			
ANR	8864733	AdditiveExpression	left + bn		8864648	0		+			
ANR	8864734	Identifier	left		8864648	0					
ANR	8864735	Identifier	bn		8864648	1					
ANR	8864736	Identifier	bword_bits		8864648	1					
ANR	8864737	CompoundStatement		11:37:333:333	8864648	1					
ANR	8864738	ExpressionStatement	marks |= ~ * bp & m	76:12:2455:2472	8864648	0	True				
ANR	8864739	AssignmentExpression	marks |= ~ * bp & m		8864648	0		|=			
ANR	8864740	Identifier	marks		8864648	0					
ANR	8864741	BitAndExpression	~ * bp & m		8864648	1		&			
ANR	8864742	UnaryOperationExpression	~ * bp		8864648	0					
ANR	8864743	UnaryOperator	~		8864648	0					
ANR	8864744	UnaryOperationExpression	* bp		8864648	1					
ANR	8864745	UnaryOperator	*		8864648	0					
ANR	8864746	Identifier	bp		8864648	1					
ANR	8864747	Identifier	m		8864648	1					
ANR	8864748	ExpressionStatement	* bp |= m	77:12:2486:2494	8864648	1	True				
ANR	8864749	AssignmentExpression	* bp |= m		8864648	0		|=			
ANR	8864750	UnaryOperationExpression	* bp		8864648	0					
ANR	8864751	UnaryOperator	*		8864648	0					
ANR	8864752	Identifier	bp		8864648	1					
ANR	8864753	Identifier	m		8864648	1					
ANR	8864754	ExpressionStatement	"m = bword_1s , left -= bword_bits - bn , bp ++"	78:12:2508:2551	8864648	2	True				
ANR	8864755	Expression	"m = bword_1s , left -= bword_bits - bn , bp ++"		8864648	0					
ANR	8864756	AssignmentExpression	m = bword_1s		8864648	0		=			
ANR	8864757	Identifier	m		8864648	0					
ANR	8864758	Identifier	bword_1s		8864648	1					
ANR	8864759	Expression	"left -= bword_bits - bn , bp ++"		8864648	1					
ANR	8864760	AssignmentExpression	left -= bword_bits - bn		8864648	0		-=			
ANR	8864761	Identifier	left		8864648	0					
ANR	8864762	AdditiveExpression	bword_bits - bn		8864648	1		-			
ANR	8864763	Identifier	bword_bits		8864648	0					
ANR	8864764	Identifier	bn		8864648	1					
ANR	8864765	PostIncDecOperationExpression	bp ++		8864648	1					
ANR	8864766	Identifier	bp		8864648	0					
ANR	8864767	IncDec	++		8864648	1					
ANR	8864768	WhileStatement	while ( left >= bword_bits )		8864648	3					
ANR	8864769	Condition	left >= bword_bits	79:19:2572:2589	8864648	0	True				
ANR	8864770	RelationalExpression	left >= bword_bits		8864648	0		>=			
ANR	8864771	Identifier	left		8864648	0					
ANR	8864772	Identifier	bword_bits		8864648	1					
ANR	8864773	CompoundStatement		15:39:484:484	8864648	1					
ANR	8864774	ExpressionStatement	marks |= ~ * bp	80:16:2610:2623	8864648	0	True				
ANR	8864775	AssignmentExpression	marks |= ~ * bp		8864648	0		|=			
ANR	8864776	Identifier	marks		8864648	0					
ANR	8864777	UnaryOperationExpression	~ * bp		8864648	1					
ANR	8864778	UnaryOperator	~		8864648	0					
ANR	8864779	UnaryOperationExpression	* bp		8864648	1					
ANR	8864780	UnaryOperator	*		8864648	0					
ANR	8864781	Identifier	bp		8864648	1					
ANR	8864782	ExpressionStatement	* bp = bword_1s	81:16:2641:2655	8864648	1	True				
ANR	8864783	AssignmentExpression	* bp = bword_1s		8864648	0		=			
ANR	8864784	UnaryOperationExpression	* bp		8864648	0					
ANR	8864785	UnaryOperator	*		8864648	0					
ANR	8864786	Identifier	bp		8864648	1					
ANR	8864787	Identifier	bword_1s		8864648	1					
ANR	8864788	ExpressionStatement	"left -= bword_bits , bp ++"	82:16:2673:2697	8864648	2	True				
ANR	8864789	Expression	"left -= bword_bits , bp ++"		8864648	0					
ANR	8864790	AssignmentExpression	left -= bword_bits		8864648	0		-=			
ANR	8864791	Identifier	left		8864648	0					
ANR	8864792	Identifier	bword_bits		8864648	1					
ANR	8864793	PostIncDecOperationExpression	bp ++		8864648	1					
ANR	8864794	Identifier	bp		8864648	0					
ANR	8864795	IncDec	++		8864648	1					
ANR	8864796	IfStatement	if ( left )		8864648	1					
ANR	8864797	Condition	left	85:12:2735:2738	8864648	0	True				
ANR	8864798	Identifier	left		8864648	0					
ANR	8864799	CompoundStatement		21:18:633:633	8864648	1					
ANR	8864800	ExpressionStatement	bword_swap_bytes ( m )	86:12:2755:2774	8864648	0	True				
ANR	8864801	CallExpression	bword_swap_bytes ( m )		8864648	0					
ANR	8864802	Callee	bword_swap_bytes		8864648	0					
ANR	8864803	Identifier	bword_swap_bytes		8864648	0					
ANR	8864804	ArgumentList	m		8864648	1					
ANR	8864805	Argument	m		8864648	0					
ANR	8864806	Identifier	m		8864648	0					
ANR	8864807	ExpressionStatement	m -= m << left	87:12:2788:2802	8864648	1	True				
ANR	8864808	AssignmentExpression	m -= m << left		8864648	0		-=			
ANR	8864809	Identifier	m		8864648	0					
ANR	8864810	ShiftExpression	m << left		8864648	1		<<			
ANR	8864811	Identifier	m		8864648	0					
ANR	8864812	Identifier	left		8864648	1					
ANR	8864813	ExpressionStatement	bword_swap_bytes ( m )	88:12:2816:2835	8864648	2	True				
ANR	8864814	CallExpression	bword_swap_bytes ( m )		8864648	0					
ANR	8864815	Callee	bword_swap_bytes		8864648	0					
ANR	8864816	Identifier	bword_swap_bytes		8864648	0					
ANR	8864817	ArgumentList	m		8864648	1					
ANR	8864818	Argument	m		8864648	0					
ANR	8864819	Identifier	m		8864648	0					
ANR	8864820	ExpressionStatement	marks |= ~ * bp & m	89:12:2849:2866	8864648	3	True				
ANR	8864821	AssignmentExpression	marks |= ~ * bp & m		8864648	0		|=			
ANR	8864822	Identifier	marks		8864648	0					
ANR	8864823	BitAndExpression	~ * bp & m		8864648	1		&			
ANR	8864824	UnaryOperationExpression	~ * bp		8864648	0					
ANR	8864825	UnaryOperator	~		8864648	0					
ANR	8864826	UnaryOperationExpression	* bp		8864648	1					
ANR	8864827	UnaryOperator	*		8864648	0					
ANR	8864828	Identifier	bp		8864648	1					
ANR	8864829	Identifier	m		8864648	1					
ANR	8864830	ExpressionStatement	* bp |= m	90:12:2880:2888	8864648	4	True				
ANR	8864831	AssignmentExpression	* bp |= m		8864648	0		|=			
ANR	8864832	UnaryOperationExpression	* bp		8864648	0					
ANR	8864833	UnaryOperator	*		8864648	0					
ANR	8864834	Identifier	bp		8864648	1					
ANR	8864835	Identifier	m		8864648	1					
ANR	8864836	ElseStatement	else		8864648	0					
ANR	8864837	CompoundStatement		28:11:803:803	8864648	0					
ANR	8864838	IfStatement	if ( left + bn >= bword_bits )		8864648	0					
ANR	8864839	Condition	left + bn >= bword_bits	93:12:2925:2947	8864648	0	True				
ANR	8864840	RelationalExpression	left + bn >= bword_bits		8864648	0		>=			
ANR	8864841	AdditiveExpression	left + bn		8864648	0		+			
ANR	8864842	Identifier	left		8864648	0					
ANR	8864843	Identifier	bn		8864648	1					
ANR	8864844	Identifier	bword_bits		8864648	1					
ANR	8864845	CompoundStatement		29:37:842:842	8864648	1					
ANR	8864846	ExpressionStatement	* bp &= ~m	94:12:2964:2973	8864648	0	True				
ANR	8864847	AssignmentExpression	* bp &= ~m		8864648	0		&=			
ANR	8864848	UnaryOperationExpression	* bp		8864648	0					
ANR	8864849	UnaryOperator	*		8864648	0					
ANR	8864850	Identifier	bp		8864648	1					
ANR	8864851	Identifier	~m		8864648	1					
ANR	8864852	ExpressionStatement	"m = bword_1s , left -= bword_bits - bn , bp ++"	95:12:2987:3030	8864648	1	True				
ANR	8864853	Expression	"m = bword_1s , left -= bword_bits - bn , bp ++"		8864648	0					
ANR	8864854	AssignmentExpression	m = bword_1s		8864648	0		=			
ANR	8864855	Identifier	m		8864648	0					
ANR	8864856	Identifier	bword_1s		8864648	1					
ANR	8864857	Expression	"left -= bword_bits - bn , bp ++"		8864648	1					
ANR	8864858	AssignmentExpression	left -= bword_bits - bn		8864648	0		-=			
ANR	8864859	Identifier	left		8864648	0					
ANR	8864860	AdditiveExpression	bword_bits - bn		8864648	1		-			
ANR	8864861	Identifier	bword_bits		8864648	0					
ANR	8864862	Identifier	bn		8864648	1					
ANR	8864863	PostIncDecOperationExpression	bp ++		8864648	1					
ANR	8864864	Identifier	bp		8864648	0					
ANR	8864865	IncDec	++		8864648	1					
ANR	8864866	IfStatement	if ( left >= bword_bits * 5 )		8864648	2					
ANR	8864867	Condition	left >= bword_bits * 5	96:16:3048:3069	8864648	0	True				
ANR	8864868	RelationalExpression	left >= bword_bits * 5		8864648	0		>=			
ANR	8864869	Identifier	left		8864648	0					
ANR	8864870	MultiplicativeExpression	bword_bits * 5		8864648	1		*			
ANR	8864871	Identifier	bword_bits		8864648	0					
ANR	8864872	PrimaryExpression	5		8864648	1					
ANR	8864873	CompoundStatement		32:40:964:964	8864648	1					
ANR	8864874	ExpressionStatement	"memset ( bp , 0 , ( left & - bword_bits ) >> 3 )"	97:16:3090:3130	8864648	0	True				
ANR	8864875	CallExpression	"memset ( bp , 0 , ( left & - bword_bits ) >> 3 )"		8864648	0					
ANR	8864876	Callee	memset		8864648	0					
ANR	8864877	Identifier	memset		8864648	0					
ANR	8864878	ArgumentList	bp		8864648	1					
ANR	8864879	Argument	bp		8864648	0					
ANR	8864880	Identifier	bp		8864648	0					
ANR	8864881	Argument	0		8864648	1					
ANR	8864882	PrimaryExpression	0		8864648	0					
ANR	8864883	Argument	( left & - bword_bits ) >> 3		8864648	2					
ANR	8864884	ShiftExpression	( left & - bword_bits ) >> 3		8864648	0		>>			
ANR	8864885	BitAndExpression	left & - bword_bits		8864648	0		&			
ANR	8864886	Identifier	left		8864648	0					
ANR	8864887	UnaryOperationExpression	- bword_bits		8864648	1					
ANR	8864888	UnaryOperator	-		8864648	0					
ANR	8864889	Identifier	bword_bits		8864648	1					
ANR	8864890	PrimaryExpression	3		8864648	1					
ANR	8864891	ExpressionStatement	bp += left >> bword_log2_bits	98:16:3148:3177	8864648	1	True				
ANR	8864892	AssignmentExpression	bp += left >> bword_log2_bits		8864648	0		+=			
ANR	8864893	Identifier	bp		8864648	0					
ANR	8864894	ShiftExpression	left >> bword_log2_bits		8864648	1		>>			
ANR	8864895	Identifier	left		8864648	0					
ANR	8864896	Identifier	bword_log2_bits		8864648	1					
ANR	8864897	ExpressionStatement	left &= bword_bits - 1	99:16:3195:3217	8864648	2	True				
ANR	8864898	AssignmentExpression	left &= bword_bits - 1		8864648	0		&=			
ANR	8864899	Identifier	left		8864648	0					
ANR	8864900	AdditiveExpression	bword_bits - 1		8864648	1		-			
ANR	8864901	Identifier	bword_bits		8864648	0					
ANR	8864902	PrimaryExpression	1		8864648	1					
ANR	8864903	ElseStatement	else		8864648	0					
ANR	8864904	WhileStatement	while ( left >= bword_bits )		8864648	0					
ANR	8864905	Condition	left >= bword_bits	101:23:3261:3278	8864648	0	True				
ANR	8864906	RelationalExpression	left >= bword_bits		8864648	0		>=			
ANR	8864907	Identifier	left		8864648	0					
ANR	8864908	Identifier	bword_bits		8864648	1					
ANR	8864909	CompoundStatement		37:43:1173:1173	8864648	1					
ANR	8864910	ExpressionStatement	* bp = 0	102:20:3303:3310	8864648	0	True				
ANR	8864911	AssignmentExpression	* bp = 0		8864648	0		=			
ANR	8864912	UnaryOperationExpression	* bp		8864648	0					
ANR	8864913	UnaryOperator	*		8864648	0					
ANR	8864914	Identifier	bp		8864648	1					
ANR	8864915	PrimaryExpression	0		8864648	1					
ANR	8864916	ExpressionStatement	"left -= bword_bits , bp ++"	103:20:3332:3356	8864648	1	True				
ANR	8864917	Expression	"left -= bword_bits , bp ++"		8864648	0					
ANR	8864918	AssignmentExpression	left -= bword_bits		8864648	0		-=			
ANR	8864919	Identifier	left		8864648	0					
ANR	8864920	Identifier	bword_bits		8864648	1					
ANR	8864921	PostIncDecOperationExpression	bp ++		8864648	1					
ANR	8864922	Identifier	bp		8864648	0					
ANR	8864923	IncDec	++		8864648	1					
ANR	8864924	IfStatement	if ( left )		8864648	1					
ANR	8864925	Condition	left	106:12:3398:3401	8864648	0	True				
ANR	8864926	Identifier	left		8864648	0					
ANR	8864927	CompoundStatement		42:18:1296:1296	8864648	1					
ANR	8864928	ExpressionStatement	bword_swap_bytes ( m )	107:12:3418:3437	8864648	0	True				
ANR	8864929	CallExpression	bword_swap_bytes ( m )		8864648	0					
ANR	8864930	Callee	bword_swap_bytes		8864648	0					
ANR	8864931	Identifier	bword_swap_bytes		8864648	0					
ANR	8864932	ArgumentList	m		8864648	1					
ANR	8864933	Argument	m		8864648	0					
ANR	8864934	Identifier	m		8864648	0					
ANR	8864935	ExpressionStatement	m -= m << left	108:12:3451:3465	8864648	1	True				
ANR	8864936	AssignmentExpression	m -= m << left		8864648	0		-=			
ANR	8864937	Identifier	m		8864648	0					
ANR	8864938	ShiftExpression	m << left		8864648	1		<<			
ANR	8864939	Identifier	m		8864648	0					
ANR	8864940	Identifier	left		8864648	1					
ANR	8864941	ExpressionStatement	bword_swap_bytes ( m )	109:12:3479:3498	8864648	2	True				
ANR	8864942	CallExpression	bword_swap_bytes ( m )		8864648	0					
ANR	8864943	Callee	bword_swap_bytes		8864648	0					
ANR	8864944	Identifier	bword_swap_bytes		8864648	0					
ANR	8864945	ArgumentList	m		8864648	1					
ANR	8864946	Argument	m		8864648	0					
ANR	8864947	Identifier	m		8864648	0					
ANR	8864948	ExpressionStatement	* bp &= ~m	110:12:3512:3521	8864648	3	True				
ANR	8864949	AssignmentExpression	* bp &= ~m		8864648	0		&=			
ANR	8864950	UnaryOperationExpression	* bp		8864648	0					
ANR	8864951	UnaryOperator	*		8864648	0					
ANR	8864952	Identifier	bp		8864648	1					
ANR	8864953	Identifier	~m		8864648	1					
ANR	8864954	ReturnStatement	return marks != 0 ;	113:4:3543:3560	8864648	8	True				
ANR	8864955	EqualityExpression	marks != 0		8864648	0		!=			
ANR	8864956	Identifier	marks		8864648	0					
ANR	8864957	PrimaryExpression	0		8864648	1					
ANR	8864958	ReturnType	static bool		8864648	1					
ANR	8864959	Identifier	gc_mark_string		8864648	2					
ANR	8864960	ParameterList	"const byte * ptr , uint size , bool set , const clump_t * cp"		8864648	3					
ANR	8864961	Parameter	const byte * ptr	64:15:2048:2063	8864648	0	True				
ANR	8864962	ParameterType	const byte *		8864648	0					
ANR	8864963	Identifier	ptr		8864648	1					
ANR	8864964	Parameter	uint size	64:33:2066:2074	8864648	1	True				
ANR	8864965	ParameterType	uint		8864648	0					
ANR	8864966	Identifier	size		8864648	1					
ANR	8864967	Parameter	bool set	64:44:2077:2084	8864648	2	True				
ANR	8864968	ParameterType	bool		8864648	0					
ANR	8864969	Identifier	set		8864648	1					
ANR	8864970	Parameter	const clump_t * cp	64:54:2087:2104	8864648	3	True				
ANR	8864971	ParameterType	const clump_t *		8864648	0					
ANR	8864972	Identifier	cp		8864648	1					
ANR	8864973	CFGEntryNode	ENTRY		8864648		True				
ANR	8864974	CFGExitNode	EXIT		8864648		True				
ANR	8864975	Symbol	bword_1s		8864648						
ANR	8864976	Symbol	set		8864648						
ANR	8864977	Symbol	offset		8864648						
ANR	8864978	Symbol	marks		8864648						
ANR	8864979	Symbol	bn		8864648						
ANR	8864980	Symbol	cp		8864648						
ANR	8864981	Symbol	m		8864648						
ANR	8864982	Symbol	bp		8864648						
ANR	8864983	Symbol	ptr		8864648						
ANR	8864984	Symbol	~m		8864648						
ANR	8864985	Symbol	* cp		8864648						
ANR	8864986	Symbol	bword_log2_bits		8864648						
ANR	8864987	Symbol	size		8864648						
ANR	8864988	Symbol	left		8864648						
ANR	8864989	Symbol	HDR_ID_OFFSET		8864648						
ANR	8864990	Symbol	* bp		8864648						
ANR	8864991	Symbol	bword_bits		8864648						
ANR	8864992	Symbol	cp -> sbase		8864648						
ANR	8864993	Symbol	cp -> smark		8864648						
ANR	8864994	Function	dmfwrite	120:0:3679:3828							
ANR	8864995	FunctionDef	"dmfwrite (const gs_memory_t * mem , const byte * ptr , uint count)"		8864994	0					
ANR	8864996	CompoundStatement		122:0:3753:3828	8864994	0					
ANR	8864997	IdentifierDeclStatement	uint i ;	123:4:3759:3765	8864994	0	True				
ANR	8864998	IdentifierDecl	i		8864994	0					
ANR	8864999	IdentifierDeclType	uint		8864994	0					
ANR	8865000	Identifier	i		8864994	1					
ANR	8865001	ForStatement	for ( i = 0 ; i < count ; ++ i )		8864994	1					
ANR	8865002	ForInit	i = 0 ;	124:9:3776:3781	8864994	0	True				
ANR	8865003	AssignmentExpression	i = 0		8864994	0		=			
ANR	8865004	Identifier	i		8864994	0					
ANR	8865005	PrimaryExpression	0		8864994	1					
ANR	8865006	Condition	i < count	124:16:3783:3791	8864994	1	True				
ANR	8865007	RelationalExpression	i < count		8864994	0		<			
ANR	8865008	Identifier	i		8864994	0					
ANR	8865009	Identifier	count		8864994	1					
ANR	8865010	UnaryExpression	++ i	124:27:3794:3796	8864994	2	True				
ANR	8865011	IncDec	++		8864994	0					
ANR	8865012	Identifier	i		8864994	1					
ANR	8865013	ExpressionStatement	"dmputc ( mem , ptr [ i ] )"	125:8:3807:3826	8864994	3	True				
ANR	8865014	CallExpression	"dmputc ( mem , ptr [ i ] )"		8864994	0					
ANR	8865015	Callee	dmputc		8864994	0					
ANR	8865016	Identifier	dmputc		8864994	0					
ANR	8865017	ArgumentList	mem		8864994	1					
ANR	8865018	Argument	mem		8864994	0					
ANR	8865019	Identifier	mem		8864994	0					
ANR	8865020	Argument	ptr [ i ]		8864994	1					
ANR	8865021	ArrayIndexing	ptr [ i ]		8864994	0					
ANR	8865022	Identifier	ptr		8864994	0					
ANR	8865023	Identifier	i		8864994	1					
ANR	8865024	ReturnType	static void		8864994	1					
ANR	8865025	Identifier	dmfwrite		8864994	2					
ANR	8865026	ParameterList	"const gs_memory_t * mem , const byte * ptr , uint count"		8864994	3					
ANR	8865027	Parameter	const gs_memory_t * mem	121:9:3700:3721	8864994	0	True				
ANR	8865028	ParameterType	const gs_memory_t *		8864994	0					
ANR	8865029	Identifier	mem		8864994	1					
ANR	8865030	Parameter	const byte * ptr	121:33:3724:3738	8864994	1	True				
ANR	8865031	ParameterType	const byte *		8864994	0					
ANR	8865032	Identifier	ptr		8864994	1					
ANR	8865033	Parameter	uint count	121:50:3741:3750	8864994	2	True				
ANR	8865034	ParameterType	uint		8864994	0					
ANR	8865035	Identifier	count		8864994	1					
ANR	8865036	CFGEntryNode	ENTRY		8864994		True				
ANR	8865037	CFGExitNode	EXIT		8864994		True				
ANR	8865038	Symbol	* i		8864994						
ANR	8865039	Symbol	mem		8864994						
ANR	8865040	Symbol	count		8864994						
ANR	8865041	Symbol	* ptr		8864994						
ANR	8865042	Symbol	i		8864994						
ANR	8865043	Symbol	ptr		8864994						
ANR	8865044	Function	gc_string_mark	130:0:3890:6628							
ANR	8865045	FunctionDef	"gc_string_mark (const byte * ptr , uint size , bool set , gc_state_t * gcst)"		8865044	0					
ANR	8865046	CompoundStatement		132:0:3968:6628	8865044	0					
ANR	8865047	IdentifierDeclStatement	const clump_t * cp ;	133:4:3974:3991	8865044	0	True				
ANR	8865048	IdentifierDecl	* cp		8865044	0					
ANR	8865049	IdentifierDeclType	const clump_t *		8865044	0					
ANR	8865050	Identifier	cp		8865044	1					
ANR	8865051	IdentifierDeclStatement	bool marks ;	134:4:3997:4007	8865044	1	True				
ANR	8865052	IdentifierDecl	marks		8865044	0					
ANR	8865053	IdentifierDeclType	bool		8865044	0					
ANR	8865054	Identifier	marks		8865044	1					
ANR	8865055	IfStatement	if ( size == 0 )		8865044	2					
ANR	8865056	Condition	size == 0	136:8:4018:4026	8865044	0	True				
ANR	8865057	EqualityExpression	size == 0		8865044	0		==			
ANR	8865058	Identifier	size		8865044	0					
ANR	8865059	PrimaryExpression	0		8865044	1					
ANR	8865060	ReturnStatement	return false ;	137:8:4037:4049	8865044	1	True				
ANR	8865061	Identifier	false		8865044	0					
ANR	8865062	Statement	define	138:1:4052:4057	8865044	3	True				
ANR	8865063	Statement	dmprintstr	138:8:4059:4068	8865044	4	True				
ANR	8865064	ExpressionStatement	"( mem ) dmputc ( mem , '(' )"	138:18:4069:4094	8865044	5	True				
ANR	8865065	CastExpression	"( mem ) dmputc ( mem , '(' )"		8865044	0					
ANR	8865066	CastTarget	mem		8865044	0					
ANR	8865067	CallExpression	"dmputc ( mem , '(' )"		8865044	1					
ANR	8865068	Callee	dmputc		8865044	0					
ANR	8865069	Identifier	dmputc		8865044	0					
ANR	8865070	ArgumentList	mem		8865044	1					
ANR	8865071	Argument	mem		8865044	0					
ANR	8865072	Identifier	mem		8865044	0					
ANR	8865073	Argument	'('		8865044	1					
ANR	8865074	PrimaryExpression	'('		8865044	0					
ANR	8865075	ExpressionStatement	"dmfwrite ( mem , ptr - HDR_ID_OFFSET , min ( size , 20 ) )"	139:20:4096:4145	8865044	6	True				
ANR	8865076	CallExpression	"dmfwrite ( mem , ptr - HDR_ID_OFFSET , min ( size , 20 ) )"		8865044	0					
ANR	8865077	Callee	dmfwrite		8865044	0					
ANR	8865078	Identifier	dmfwrite		8865044	0					
ANR	8865079	ArgumentList	mem		8865044	1					
ANR	8865080	Argument	mem		8865044	0					
ANR	8865081	Identifier	mem		8865044	0					
ANR	8865082	Argument	ptr - HDR_ID_OFFSET		8865044	1					
ANR	8865083	AdditiveExpression	ptr - HDR_ID_OFFSET		8865044	0		-			
ANR	8865084	Identifier	ptr		8865044	0					
ANR	8865085	Identifier	HDR_ID_OFFSET		8865044	1					
ANR	8865086	Argument	"min ( size , 20 )"		8865044	2					
ANR	8865087	CallExpression	"min ( size , 20 )"		8865044	0					
ANR	8865088	Callee	min		8865044	0					
ANR	8865089	Identifier	min		8865044	0					
ANR	8865090	ArgumentList	size		8865044	1					
ANR	8865091	Argument	size		8865044	0					
ANR	8865092	Identifier	size		8865044	0					
ANR	8865093	Argument	20		8865044	1					
ANR	8865094	PrimaryExpression	20		8865044	0					
ANR	8865095	Statement	dmputs	140:2:4150:4155	8865044	7	True				
ANR	8865096	Statement	(	140:8:4156:4156	8865044	8	True				
ANR	8865097	Statement	mem	140:9:4157:4159	8865044	9	True				
ANR	8865098	Statement	","	140:12:4160:4160	8865044	10	True				
ANR	8865099	Statement	(	140:14:4162:4162	8865044	11	True				
ANR	8865100	Statement	size	140:15:4163:4166	8865044	12	True				
ANR	8865101	Statement	<=	140:20:4168:4169	8865044	13	True				
ANR	8865102	Statement	20	140:23:4171:4172	8865044	14	True				
ANR	8865103	Statement	?	140:26:4174:4174	8865044	15	True				
ANR	8865104	Statement	""")"""	140:28:4176:4178	8865044	16	True				
ANR	8865105	Statement	:	140:32:4180:4180	8865044	17	True				
ANR	8865106	Statement	"""...)"""	140:34:4182:4187	8865044	18	True				
ANR	8865107	Statement	)	140:40:4188:4188	8865044	19	True				
ANR	8865108	Statement	)	140:41:4189:4189	8865044	20	True				
ANR	8865109	IfStatement	"if ( ! ( cp = gc_locate ( ptr - HDR_ID_OFFSET , gcst ) ) )"		8865044	21					
ANR	8865110	Condition	"! ( cp = gc_locate ( ptr - HDR_ID_OFFSET , gcst ) )"	141:8:4199:4242	8865044	0	True				
ANR	8865111	UnaryOperationExpression	"! ( cp = gc_locate ( ptr - HDR_ID_OFFSET , gcst ) )"		8865044	0					
ANR	8865112	UnaryOperator	!		8865044	0					
ANR	8865113	AssignmentExpression	"cp = gc_locate ( ptr - HDR_ID_OFFSET , gcst )"		8865044	1		=			
ANR	8865114	Identifier	cp		8865044	0					
ANR	8865115	CallExpression	"gc_locate ( ptr - HDR_ID_OFFSET , gcst )"		8865044	1					
ANR	8865116	Callee	gc_locate		8865044	0					
ANR	8865117	Identifier	gc_locate		8865044	0					
ANR	8865118	ArgumentList	ptr - HDR_ID_OFFSET		8865044	1					
ANR	8865119	Argument	ptr - HDR_ID_OFFSET		8865044	0					
ANR	8865120	AdditiveExpression	ptr - HDR_ID_OFFSET		8865044	0		-			
ANR	8865121	Identifier	ptr		8865044	0					
ANR	8865122	Identifier	HDR_ID_OFFSET		8865044	1					
ANR	8865123	Argument	gcst		8865044	1					
ANR	8865124	Identifier	gcst		8865044	0					
ANR	8865125	CompoundStatement		10:54:276:276	8865044	1					
ANR	8865126	IfStatement	if ( gs_debug_c ( '5' ) )		8865044	0					
ANR	8865127	Condition	gs_debug_c ( '5' )	143:12:4294:4308	8865044	0	True				
ANR	8865128	CallExpression	gs_debug_c ( '5' )		8865044	0					
ANR	8865129	Callee	gs_debug_c		8865044	0					
ANR	8865130	Identifier	gs_debug_c		8865044	0					
ANR	8865131	ArgumentList	'5'		8865044	1					
ANR	8865132	Argument	'5'		8865044	0					
ANR	8865133	PrimaryExpression	'5'		8865044	0					
ANR	8865134	CompoundStatement		12:29:342:342	8865044	1					
ANR	8865135	ExpressionStatement	"dmlprintf2 ( gcst -> heap , ""[5]0x%lx[%u]"" , ( ulong ) ptr - HDR_ID_OFFSET , size )"	144:12:4325:4398	8865044	0	True				
ANR	8865136	CallExpression	"dmlprintf2 ( gcst -> heap , ""[5]0x%lx[%u]"" , ( ulong ) ptr - HDR_ID_OFFSET , size )"		8865044	0					
ANR	8865137	Callee	dmlprintf2		8865044	0					
ANR	8865138	Identifier	dmlprintf2		8865044	0					
ANR	8865139	ArgumentList	gcst -> heap		8865044	1					
ANR	8865140	Argument	gcst -> heap		8865044	0					
ANR	8865141	PtrMemberAccess	gcst -> heap		8865044	0					
ANR	8865142	Identifier	gcst		8865044	0					
ANR	8865143	Identifier	heap		8865044	1					
ANR	8865144	Argument	"""[5]0x%lx[%u]"""		8865044	1					
ANR	8865145	PrimaryExpression	"""[5]0x%lx[%u]"""		8865044	0					
ANR	8865146	Argument	( ulong ) ptr - HDR_ID_OFFSET		8865044	2					
ANR	8865147	AdditiveExpression	( ulong ) ptr - HDR_ID_OFFSET		8865044	0		-			
ANR	8865148	CastExpression	( ulong ) ptr		8865044	0					
ANR	8865149	CastTarget	ulong		8865044	0					
ANR	8865150	Identifier	ptr		8865044	1					
ANR	8865151	Identifier	HDR_ID_OFFSET		8865044	1					
ANR	8865152	Argument	size		8865044	3					
ANR	8865153	Identifier	size		8865044	0					
ANR	8865154	ExpressionStatement	dmprintstr ( gcst -> heap )	145:12:4412:4434	8865044	1	True				
ANR	8865155	CallExpression	dmprintstr ( gcst -> heap )		8865044	0					
ANR	8865156	Callee	dmprintstr		8865044	0					
ANR	8865157	Identifier	dmprintstr		8865044	0					
ANR	8865158	ArgumentList	gcst -> heap		8865044	1					
ANR	8865159	Argument	gcst -> heap		8865044	0					
ANR	8865160	PtrMemberAccess	gcst -> heap		8865044	0					
ANR	8865161	Identifier	gcst		8865044	0					
ANR	8865162	Identifier	heap		8865044	1					
ANR	8865163	ExpressionStatement	"dmputs ( gcst -> heap , "" not in a clump\\n"" )"	146:12:4448:4487	8865044	2	True				
ANR	8865164	CallExpression	"dmputs ( gcst -> heap , "" not in a clump\\n"" )"		8865044	0					
ANR	8865165	Callee	dmputs		8865044	0					
ANR	8865166	Identifier	dmputs		8865044	0					
ANR	8865167	ArgumentList	gcst -> heap		8865044	1					
ANR	8865168	Argument	gcst -> heap		8865044	0					
ANR	8865169	PtrMemberAccess	gcst -> heap		8865044	0					
ANR	8865170	Identifier	gcst		8865044	0					
ANR	8865171	Identifier	heap		8865044	1					
ANR	8865172	Argument	""" not in a clump\\n"""		8865044	1					
ANR	8865173	PrimaryExpression	""" not in a clump\\n"""		8865044	0					
ANR	8865174	ReturnStatement	return false ;	149:8:4514:4526	8865044	1	True				
ANR	8865175	Identifier	false		8865044	0					
ANR	8865176	IfStatement	if ( cp -> smark == 0 )		8865044	22					
ANR	8865177	Condition	cp -> smark == 0	151:8:4542:4555	8865044	0	True				
ANR	8865178	EqualityExpression	cp -> smark == 0		8865044	0		==			
ANR	8865179	PtrMemberAccess	cp -> smark		8865044	0					
ANR	8865180	Identifier	cp		8865044	0					
ANR	8865181	Identifier	smark		8865044	1					
ANR	8865182	PrimaryExpression	0		8865044	1					
ANR	8865183	ReturnStatement	return false ;	152:8:4593:4605	8865044	1	True				
ANR	8865184	Identifier	false		8865044	0					
ANR	8865185	IfStatement	if ( ptr - HDR_ID_OFFSET < cp -> ctop )		8865044	23					
ANR	8865186	Condition	ptr - HDR_ID_OFFSET < cp -> ctop	154:8:4628:4657	8865044	0	True				
ANR	8865187	RelationalExpression	ptr - HDR_ID_OFFSET < cp -> ctop		8865044	0		<			
ANR	8865188	AdditiveExpression	ptr - HDR_ID_OFFSET		8865044	0		-			
ANR	8865189	Identifier	ptr		8865044	0					
ANR	8865190	Identifier	HDR_ID_OFFSET		8865044	1					
ANR	8865191	PtrMemberAccess	cp -> ctop		8865044	1					
ANR	8865192	Identifier	cp		8865044	0					
ANR	8865193	Identifier	ctop		8865044	1					
ANR	8865194	CompoundStatement		23:40:691:691	8865044	1					
ANR	8865195	ExpressionStatement	"lprintf4 ( ""String pointer 0x%lx[%u] outside [0x%lx..0x%lx)\\n"" , ( ulong ) ptr - HDR_ID_OFFSET , size , ( ulong ) cp -> ctop , ( ulong ) cp -> climit )"	155:8:4670:4821	8865044	0	True				
ANR	8865196	CallExpression	"lprintf4 ( ""String pointer 0x%lx[%u] outside [0x%lx..0x%lx)\\n"" , ( ulong ) ptr - HDR_ID_OFFSET , size , ( ulong ) cp -> ctop , ( ulong ) cp -> climit )"		8865044	0					
ANR	8865197	Callee	lprintf4		8865044	0					
ANR	8865198	Identifier	lprintf4		8865044	0					
ANR	8865199	ArgumentList	"""String pointer 0x%lx[%u] outside [0x%lx..0x%lx)\\n"""		8865044	1					
ANR	8865200	Argument	"""String pointer 0x%lx[%u] outside [0x%lx..0x%lx)\\n"""		8865044	0					
ANR	8865201	PrimaryExpression	"""String pointer 0x%lx[%u] outside [0x%lx..0x%lx)\\n"""		8865044	0					
ANR	8865202	Argument	( ulong ) ptr - HDR_ID_OFFSET		8865044	1					
ANR	8865203	AdditiveExpression	( ulong ) ptr - HDR_ID_OFFSET		8865044	0		-			
ANR	8865204	CastExpression	( ulong ) ptr		8865044	0					
ANR	8865205	CastTarget	ulong		8865044	0					
ANR	8865206	Identifier	ptr		8865044	1					
ANR	8865207	Identifier	HDR_ID_OFFSET		8865044	1					
ANR	8865208	Argument	size		8865044	2					
ANR	8865209	Identifier	size		8865044	0					
ANR	8865210	Argument	( ulong ) cp -> ctop		8865044	3					
ANR	8865211	CastExpression	( ulong ) cp -> ctop		8865044	0					
ANR	8865212	CastTarget	ulong		8865044	0					
ANR	8865213	PtrMemberAccess	cp -> ctop		8865044	1					
ANR	8865214	Identifier	cp		8865044	0					
ANR	8865215	Identifier	ctop		8865044	1					
ANR	8865216	Argument	( ulong ) cp -> climit		8865044	4					
ANR	8865217	CastExpression	( ulong ) cp -> climit		8865044	0					
ANR	8865218	CastTarget	ulong		8865044	0					
ANR	8865219	PtrMemberAccess	cp -> climit		8865044	1					
ANR	8865220	Identifier	cp		8865044	0					
ANR	8865221	Identifier	climit		8865044	1					
ANR	8865222	ReturnStatement	return false ;	157:8:4831:4843	8865044	1	True				
ANR	8865223	Identifier	false		8865044	0					
ANR	8865224	ElseStatement	else		8865044	0					
ANR	8865225	IfStatement	if ( ptr + size > cp -> climit )		8865044	0					
ANR	8865226	Condition	ptr + size > cp -> climit	158:15:4860:4882	8865044	0	True				
ANR	8865227	RelationalExpression	ptr + size > cp -> climit		8865044	0		>			
ANR	8865228	AdditiveExpression	ptr + size		8865044	0		+			
ANR	8865229	Identifier	ptr		8865044	0					
ANR	8865230	Identifier	size		8865044	1					
ANR	8865231	PtrMemberAccess	cp -> climit		8865044	1					
ANR	8865232	Identifier	cp		8865044	0					
ANR	8865233	Identifier	climit		8865044	1					
ANR	8865234	CompoundStatement		38:8:1875:1898	8865044	1					
ANR	8865235	IdentifierDeclStatement	const clump_t * scp = cp ;	169:8:5844:5867	8865044	0	True				
ANR	8865236	IdentifierDecl	* scp = cp		8865044	0					
ANR	8865237	IdentifierDeclType	const clump_t *		8865044	0					
ANR	8865238	Identifier	scp		8865044	1					
ANR	8865239	AssignmentExpression	* scp = cp		8865044	2		=			
ANR	8865240	Identifier	cp		8865044	0					
ANR	8865241	Identifier	cp		8865044	1					
ANR	8865242	WhileStatement	while ( ptr - HDR_ID_OFFSET == scp -> climit && scp -> outer != 0 )		8865044	1					
ANR	8865243	Condition	ptr - HDR_ID_OFFSET == scp -> climit && scp -> outer != 0	171:15:5885:5937	8865044	0	True				
ANR	8865244	AndExpression	ptr - HDR_ID_OFFSET == scp -> climit && scp -> outer != 0		8865044	0		&&			
ANR	8865245	EqualityExpression	ptr - HDR_ID_OFFSET == scp -> climit		8865044	0		==			
ANR	8865246	AdditiveExpression	ptr - HDR_ID_OFFSET		8865044	0		-			
ANR	8865247	Identifier	ptr		8865044	0					
ANR	8865248	Identifier	HDR_ID_OFFSET		8865044	1					
ANR	8865249	PtrMemberAccess	scp -> climit		8865044	1					
ANR	8865250	Identifier	scp		8865044	0					
ANR	8865251	Identifier	climit		8865044	1					
ANR	8865252	EqualityExpression	scp -> outer != 0		8865044	1		!=			
ANR	8865253	PtrMemberAccess	scp -> outer		8865044	0					
ANR	8865254	Identifier	scp		8865044	0					
ANR	8865255	Identifier	outer		8865044	1					
ANR	8865256	PrimaryExpression	0		8865044	1					
ANR	8865257	ExpressionStatement	scp = scp -> outer	172:12:5952:5968	8865044	1	True				
ANR	8865258	AssignmentExpression	scp = scp -> outer		8865044	0		=			
ANR	8865259	Identifier	scp		8865044	0					
ANR	8865260	PtrMemberAccess	scp -> outer		8865044	1					
ANR	8865261	Identifier	scp		8865044	0					
ANR	8865262	Identifier	outer		8865044	1					
ANR	8865263	IfStatement	if ( ptr - HDR_ID_OFFSET + size > scp -> climit )		8865044	2					
ANR	8865264	Condition	ptr - HDR_ID_OFFSET + size > scp -> climit	173:12:5982:6021	8865044	0	True				
ANR	8865265	RelationalExpression	ptr - HDR_ID_OFFSET + size > scp -> climit		8865044	0		>			
ANR	8865266	AdditiveExpression	ptr - HDR_ID_OFFSET + size		8865044	0		-			
ANR	8865267	Identifier	ptr		8865044	0					
ANR	8865268	AdditiveExpression	HDR_ID_OFFSET + size		8865044	1		+			
ANR	8865269	Identifier	HDR_ID_OFFSET		8865044	0					
ANR	8865270	Identifier	size		8865044	1					
ANR	8865271	PtrMemberAccess	scp -> climit		8865044	1					
ANR	8865272	Identifier	scp		8865044	0					
ANR	8865273	Identifier	climit		8865044	1					
ANR	8865274	CompoundStatement		42:54:2055:2055	8865044	1					
ANR	8865275	ExpressionStatement	"lprintf4 ( ""String pointer 0x%lx[%u] outside [0x%lx..0x%lx)\\n"" , ( ulong ) ptr - HDR_ID_OFFSET , size , ( ulong ) scp -> ctop , ( ulong ) scp -> climit )"	174:12:6038:6216	8865044	0	True				
ANR	8865276	CallExpression	"lprintf4 ( ""String pointer 0x%lx[%u] outside [0x%lx..0x%lx)\\n"" , ( ulong ) ptr - HDR_ID_OFFSET , size , ( ulong ) scp -> ctop , ( ulong ) scp -> climit )"		8865044	0					
ANR	8865277	Callee	lprintf4		8865044	0					
ANR	8865278	Identifier	lprintf4		8865044	0					
ANR	8865279	ArgumentList	"""String pointer 0x%lx[%u] outside [0x%lx..0x%lx)\\n"""		8865044	1					
ANR	8865280	Argument	"""String pointer 0x%lx[%u] outside [0x%lx..0x%lx)\\n"""		8865044	0					
ANR	8865281	PrimaryExpression	"""String pointer 0x%lx[%u] outside [0x%lx..0x%lx)\\n"""		8865044	0					
ANR	8865282	Argument	( ulong ) ptr - HDR_ID_OFFSET		8865044	1					
ANR	8865283	AdditiveExpression	( ulong ) ptr - HDR_ID_OFFSET		8865044	0		-			
ANR	8865284	CastExpression	( ulong ) ptr		8865044	0					
ANR	8865285	CastTarget	ulong		8865044	0					
ANR	8865286	Identifier	ptr		8865044	1					
ANR	8865287	Identifier	HDR_ID_OFFSET		8865044	1					
ANR	8865288	Argument	size		8865044	2					
ANR	8865289	Identifier	size		8865044	0					
ANR	8865290	Argument	( ulong ) scp -> ctop		8865044	3					
ANR	8865291	CastExpression	( ulong ) scp -> ctop		8865044	0					
ANR	8865292	CastTarget	ulong		8865044	0					
ANR	8865293	PtrMemberAccess	scp -> ctop		8865044	1					
ANR	8865294	Identifier	scp		8865044	0					
ANR	8865295	Identifier	ctop		8865044	1					
ANR	8865296	Argument	( ulong ) scp -> climit		8865044	4					
ANR	8865297	CastExpression	( ulong ) scp -> climit		8865044	0					
ANR	8865298	CastTarget	ulong		8865044	0					
ANR	8865299	PtrMemberAccess	scp -> climit		8865044	1					
ANR	8865300	Identifier	scp		8865044	0					
ANR	8865301	Identifier	climit		8865044	1					
ANR	8865302	ReturnStatement	return false ;	177:12:6230:6242	8865044	1	True				
ANR	8865303	Identifier	false		8865044	0					
ANR	8865304	ExpressionStatement	"marks = gc_mark_string ( ptr , size , set , cp )"	181:4:6271:6313	8865044	24	True				
ANR	8865305	AssignmentExpression	"marks = gc_mark_string ( ptr , size , set , cp )"		8865044	0		=			
ANR	8865306	Identifier	marks		8865044	0					
ANR	8865307	CallExpression	"gc_mark_string ( ptr , size , set , cp )"		8865044	1					
ANR	8865308	Callee	gc_mark_string		8865044	0					
ANR	8865309	Identifier	gc_mark_string		8865044	0					
ANR	8865310	ArgumentList	ptr		8865044	1					
ANR	8865311	Argument	ptr		8865044	0					
ANR	8865312	Identifier	ptr		8865044	0					
ANR	8865313	Argument	size		8865044	1					
ANR	8865314	Identifier	size		8865044	0					
ANR	8865315	Argument	set		8865044	2					
ANR	8865316	Identifier	set		8865044	0					
ANR	8865317	Argument	cp		8865044	3					
ANR	8865318	Identifier	cp		8865044	0					
ANR	8865319	IfStatement	if ( gs_debug_c ( '5' ) )		8865044	25					
ANR	8865320	Condition	gs_debug_c ( '5' )	183:8:6336:6350	8865044	0	True				
ANR	8865321	CallExpression	gs_debug_c ( '5' )		8865044	0					
ANR	8865322	Callee	gs_debug_c		8865044	0					
ANR	8865323	Identifier	gs_debug_c		8865044	0					
ANR	8865324	ArgumentList	'5'		8865044	1					
ANR	8865325	Argument	'5'		8865044	0					
ANR	8865326	PrimaryExpression	'5'		8865044	0					
ANR	8865327	CompoundStatement		52:25:2384:2384	8865044	1					
ANR	8865328	ExpressionStatement	"dmlprintf4 ( gcst -> heap , ""[5]%s%smarked 0x%lx[%u]"" , ( marks ? """" : ""already "" ) , ( set ? """" : ""un"" ) , ( ulong ) ptr - HDR_ID_OFFSET , size )"	184:8:6363:6529	8865044	0	True				
ANR	8865329	CallExpression	"dmlprintf4 ( gcst -> heap , ""[5]%s%smarked 0x%lx[%u]"" , ( marks ? """" : ""already "" ) , ( set ? """" : ""un"" ) , ( ulong ) ptr - HDR_ID_OFFSET , size )"		8865044	0					
ANR	8865330	Callee	dmlprintf4		8865044	0					
ANR	8865331	Identifier	dmlprintf4		8865044	0					
ANR	8865332	ArgumentList	gcst -> heap		8865044	1					
ANR	8865333	Argument	gcst -> heap		8865044	0					
ANR	8865334	PtrMemberAccess	gcst -> heap		8865044	0					
ANR	8865335	Identifier	gcst		8865044	0					
ANR	8865336	Identifier	heap		8865044	1					
ANR	8865337	Argument	"""[5]%s%smarked 0x%lx[%u]"""		8865044	1					
ANR	8865338	PrimaryExpression	"""[5]%s%smarked 0x%lx[%u]"""		8865044	0					
ANR	8865339	Argument	"marks ? """" : ""already """		8865044	2					
ANR	8865340	ConditionalExpression	"marks ? """" : ""already """		8865044	0					
ANR	8865341	Condition	marks		8865044	0					
ANR	8865342	Identifier	marks		8865044	0					
ANR	8865343	PrimaryExpression	""""""		8865044	1					
ANR	8865344	PrimaryExpression	"""already """		8865044	2					
ANR	8865345	Argument	"set ? """" : ""un"""		8865044	3					
ANR	8865346	ConditionalExpression	"set ? """" : ""un"""		8865044	0					
ANR	8865347	Condition	set		8865044	0					
ANR	8865348	Identifier	set		8865044	0					
ANR	8865349	PrimaryExpression	""""""		8865044	1					
ANR	8865350	PrimaryExpression	"""un"""		8865044	2					
ANR	8865351	Argument	( ulong ) ptr - HDR_ID_OFFSET		8865044	4					
ANR	8865352	AdditiveExpression	( ulong ) ptr - HDR_ID_OFFSET		8865044	0		-			
ANR	8865353	CastExpression	( ulong ) ptr		8865044	0					
ANR	8865354	CastTarget	ulong		8865044	0					
ANR	8865355	Identifier	ptr		8865044	1					
ANR	8865356	Identifier	HDR_ID_OFFSET		8865044	1					
ANR	8865357	Argument	size		8865044	5					
ANR	8865358	Identifier	size		8865044	0					
ANR	8865359	ExpressionStatement	dmprintstr ( gcst -> heap )	187:8:6539:6561	8865044	1	True				
ANR	8865360	CallExpression	dmprintstr ( gcst -> heap )		8865044	0					
ANR	8865361	Callee	dmprintstr		8865044	0					
ANR	8865362	Identifier	dmprintstr		8865044	0					
ANR	8865363	ArgumentList	gcst -> heap		8865044	1					
ANR	8865364	Argument	gcst -> heap		8865044	0					
ANR	8865365	PtrMemberAccess	gcst -> heap		8865044	0					
ANR	8865366	Identifier	gcst		8865044	0					
ANR	8865367	Identifier	heap		8865044	1					
ANR	8865368	ExpressionStatement	"dmputc ( gcst -> heap , '\\n' )"	188:8:6571:6595	8865044	2	True				
ANR	8865369	CallExpression	"dmputc ( gcst -> heap , '\\n' )"		8865044	0					
ANR	8865370	Callee	dmputc		8865044	0					
ANR	8865371	Identifier	dmputc		8865044	0					
ANR	8865372	ArgumentList	gcst -> heap		8865044	1					
ANR	8865373	Argument	gcst -> heap		8865044	0					
ANR	8865374	PtrMemberAccess	gcst -> heap		8865044	0					
ANR	8865375	Identifier	gcst		8865044	0					
ANR	8865376	Identifier	heap		8865044	1					
ANR	8865377	Argument	'\\n'		8865044	1					
ANR	8865378	PrimaryExpression	'\\n'		8865044	0					
ANR	8865379	ReturnStatement	return marks ;	191:4:6614:6626	8865044	26	True				
ANR	8865380	Identifier	marks		8865044	0					
ANR	8865381	ReturnType	bool		8865044	1					
ANR	8865382	Identifier	gc_string_mark		8865044	2					
ANR	8865383	ParameterList	"const byte * ptr , uint size , bool set , gc_state_t * gcst"		8865044	3					
ANR	8865384	Parameter	const byte * ptr	131:15:3910:3925	8865044	0	True				
ANR	8865385	ParameterType	const byte *		8865044	0					
ANR	8865386	Identifier	ptr		8865044	1					
ANR	8865387	Parameter	uint size	131:33:3928:3936	8865044	1	True				
ANR	8865388	ParameterType	uint		8865044	0					
ANR	8865389	Identifier	size		8865044	1					
ANR	8865390	Parameter	bool set	131:44:3939:3946	8865044	2	True				
ANR	8865391	ParameterType	bool		8865044	0					
ANR	8865392	Identifier	set		8865044	1					
ANR	8865393	Parameter	gc_state_t * gcst	131:54:3949:3965	8865044	3	True				
ANR	8865394	ParameterType	gc_state_t *		8865044	0					
ANR	8865395	Identifier	gcst		8865044	1					
ANR	8865396	CFGEntryNode	ENTRY		8865044		True				
ANR	8865397	CFGExitNode	EXIT		8865044		True				
ANR	8865398	Symbol	scp		8865044						
ANR	8865399	Symbol	set		8865044						
ANR	8865400	Symbol	gc_mark_string		8865044						
ANR	8865401	Symbol	false		8865044						
ANR	8865402	Symbol	* scp		8865044						
ANR	8865403	Symbol	marks		8865044						
ANR	8865404	Symbol	gcst		8865044						
ANR	8865405	Symbol	cp		8865044						
ANR	8865406	Symbol	* gcst		8865044						
ANR	8865407	Symbol	cp -> climit		8865044						
ANR	8865408	Symbol	scp -> ctop		8865044						
ANR	8865409	Symbol	ptr		8865044						
ANR	8865410	Symbol	* cp		8865044						
ANR	8865411	Symbol	gcst -> heap		8865044						
ANR	8865412	Symbol	scp -> climit		8865044						
ANR	8865413	Symbol	min		8865044						
ANR	8865414	Symbol	size		8865044						
ANR	8865415	Symbol	mem		8865044						
ANR	8865416	Symbol	gc_locate		8865044						
ANR	8865417	Symbol	HDR_ID_OFFSET		8865044						
ANR	8865418	Symbol	gs_debug_c		8865044						
ANR	8865419	Symbol	cp -> ctop		8865044						
ANR	8865420	Symbol	cp -> smark		8865044						
ANR	8865421	Symbol	scp -> outer		8865044						
ANR	8865422	Function	gc_strings_clear_reloc	196:0:6710:6959							
ANR	8865423	FunctionDef	gc_strings_clear_reloc (clump_t * cp)		8865422	0					
ANR	8865424	CompoundStatement		198:0:6752:6959	8865422	0					
ANR	8865425	IfStatement	if ( cp -> sreloc != 0 )		8865422	0					
ANR	8865426	Condition	cp -> sreloc != 0	199:8:6762:6776	8865422	0	True				
ANR	8865427	EqualityExpression	cp -> sreloc != 0		8865422	0		!=			
ANR	8865428	PtrMemberAccess	cp -> sreloc		8865422	0					
ANR	8865429	Identifier	cp		8865422	0					
ANR	8865430	Identifier	sreloc		8865422	1					
ANR	8865431	PrimaryExpression	0		8865422	1					
ANR	8865432	CompoundStatement		2:25:26:26	8865422	1					
ANR	8865433	ExpressionStatement	"gc_strings_set_marks ( cp , true )"	200:8:6789:6819	8865422	0	True				
ANR	8865434	CallExpression	"gc_strings_set_marks ( cp , true )"		8865422	0					
ANR	8865435	Callee	gc_strings_set_marks		8865422	0					
ANR	8865436	Identifier	gc_strings_set_marks		8865422	0					
ANR	8865437	ArgumentList	cp		8865422	1					
ANR	8865438	Argument	cp		8865422	0					
ANR	8865439	Identifier	cp		8865422	0					
ANR	8865440	Argument	true		8865422	1					
ANR	8865441	Identifier	true		8865422	0					
ANR	8865442	ExpressionStatement	"if_debug1 ( '6' , ""[6]clearing string reloc 0x%lx\\n"" , ( ulong ) cp -> sreloc )"	201:8:6829:6917	8865422	1	True				
ANR	8865443	CallExpression	"if_debug1 ( '6' , ""[6]clearing string reloc 0x%lx\\n"" , ( ulong ) cp -> sreloc )"		8865422	0					
ANR	8865444	Callee	if_debug1		8865422	0					
ANR	8865445	Identifier	if_debug1		8865422	0					
ANR	8865446	ArgumentList	'6'		8865422	1					
ANR	8865447	Argument	'6'		8865422	0					
ANR	8865448	PrimaryExpression	'6'		8865422	0					
ANR	8865449	Argument	"""[6]clearing string reloc 0x%lx\\n"""		8865422	1					
ANR	8865450	PrimaryExpression	"""[6]clearing string reloc 0x%lx\\n"""		8865422	0					
ANR	8865451	Argument	( ulong ) cp -> sreloc		8865422	2					
ANR	8865452	CastExpression	( ulong ) cp -> sreloc		8865422	0					
ANR	8865453	CastTarget	ulong		8865422	0					
ANR	8865454	PtrMemberAccess	cp -> sreloc		8865422	1					
ANR	8865455	Identifier	cp		8865422	0					
ANR	8865456	Identifier	sreloc		8865422	1					
ANR	8865457	ExpressionStatement	gc_strings_set_reloc ( cp )	203:8:6927:6951	8865422	2	True				
ANR	8865458	CallExpression	gc_strings_set_reloc ( cp )		8865422	0					
ANR	8865459	Callee	gc_strings_set_reloc		8865422	0					
ANR	8865460	Identifier	gc_strings_set_reloc		8865422	0					
ANR	8865461	ArgumentList	cp		8865422	1					
ANR	8865462	Argument	cp		8865422	0					
ANR	8865463	Identifier	cp		8865422	0					
ANR	8865464	ReturnType	void		8865422	1					
ANR	8865465	Identifier	gc_strings_clear_reloc		8865422	2					
ANR	8865466	ParameterList	clump_t * cp		8865422	3					
ANR	8865467	Parameter	clump_t * cp	197:23:6738:6749	8865422	0	True				
ANR	8865468	ParameterType	clump_t *		8865422	0					
ANR	8865469	Identifier	cp		8865422	1					
ANR	8865470	CFGEntryNode	ENTRY		8865422		True				
ANR	8865471	CFGExitNode	EXIT		8865422		True				
ANR	8865472	Symbol	* cp		8865422						
ANR	8865473	Symbol	true		8865422						
ANR	8865474	Symbol	cp -> sreloc		8865422						
ANR	8865475	Symbol	cp		8865422						
ANR	8865476	DeclStmt									
ANR	8865477	Decl							const byte	const byte [ 256 ]	count_zero_bits_table
ANR	8865478	Function	gc_strings_set_reloc	224:0:7543:9402							
ANR	8865479	FunctionDef	gc_strings_set_reloc (clump_t * cp)		8865478	0					
ANR	8865480	CompoundStatement		226:0:7583:9402	8865478	0					
ANR	8865481	IfStatement	if ( cp -> sreloc != 0 && cp -> smark != 0 )		8865478	0					
ANR	8865482	Condition	cp -> sreloc != 0 && cp -> smark != 0	227:8:7593:7625	8865478	0	True				
ANR	8865483	AndExpression	cp -> sreloc != 0 && cp -> smark != 0		8865478	0		&&			
ANR	8865484	EqualityExpression	cp -> sreloc != 0		8865478	0		!=			
ANR	8865485	PtrMemberAccess	cp -> sreloc		8865478	0					
ANR	8865486	Identifier	cp		8865478	0					
ANR	8865487	Identifier	sreloc		8865478	1					
ANR	8865488	PrimaryExpression	0		8865478	1					
ANR	8865489	EqualityExpression	cp -> smark != 0		8865478	1		!=			
ANR	8865490	PtrMemberAccess	cp -> smark		8865478	0					
ANR	8865491	Identifier	cp		8865478	0					
ANR	8865492	Identifier	smark		8865478	1					
ANR	8865493	PrimaryExpression	0		8865478	1					
ANR	8865494	CompoundStatement		12:17:428:457	8865478	1					
ANR	8865495	IdentifierDeclStatement	byte * bot = cp -> ctop ;	228:8:7638:7658	8865478	0	True				
ANR	8865496	IdentifierDecl	* bot = cp -> ctop		8865478	0					
ANR	8865497	IdentifierDeclType	byte *		8865478	0					
ANR	8865498	Identifier	bot		8865478	1					
ANR	8865499	AssignmentExpression	* bot = cp -> ctop		8865478	2		=			
ANR	8865500	Identifier	bot		8865478	0					
ANR	8865501	PtrMemberAccess	cp -> ctop		8865478	1					
ANR	8865502	Identifier	cp		8865478	0					
ANR	8865503	Identifier	ctop		8865478	1					
ANR	8865504	IdentifierDeclStatement	byte * top = cp -> climit ;	229:8:7668:7690	8865478	1	True				
ANR	8865505	IdentifierDecl	* top = cp -> climit		8865478	0					
ANR	8865506	IdentifierDeclType	byte *		8865478	0					
ANR	8865507	Identifier	top		8865478	1					
ANR	8865508	AssignmentExpression	* top = cp -> climit		8865478	2		=			
ANR	8865509	Identifier	top		8865478	0					
ANR	8865510	PtrMemberAccess	cp -> climit		8865478	1					
ANR	8865511	Identifier	cp		8865478	0					
ANR	8865512	Identifier	climit		8865478	1					
ANR	8865513	IdentifierDeclStatement	uint count = ( top - bot + ( string_data_quantum - 1 ) ) >> log2_string_data_quantum ;	230:8:7700:7804	8865478	2	True				
ANR	8865514	IdentifierDecl	count = ( top - bot + ( string_data_quantum - 1 ) ) >> log2_string_data_quantum		8865478	0					
ANR	8865515	IdentifierDeclType	uint		8865478	0					
ANR	8865516	Identifier	count		8865478	1					
ANR	8865517	AssignmentExpression	count = ( top - bot + ( string_data_quantum - 1 ) ) >> log2_string_data_quantum		8865478	2		=			
ANR	8865518	Identifier	count		8865478	0					
ANR	8865519	ShiftExpression	( top - bot + ( string_data_quantum - 1 ) ) >> log2_string_data_quantum		8865478	1		>>			
ANR	8865520	AdditiveExpression	top - bot + ( string_data_quantum - 1 )		8865478	0		-			
ANR	8865521	Identifier	top		8865478	0					
ANR	8865522	AdditiveExpression	bot + ( string_data_quantum - 1 )		8865478	1		+			
ANR	8865523	Identifier	bot		8865478	0					
ANR	8865524	AdditiveExpression	string_data_quantum - 1		8865478	1		-			
ANR	8865525	Identifier	string_data_quantum		8865478	0					
ANR	8865526	PrimaryExpression	1		8865478	1					
ANR	8865527	Identifier	log2_string_data_quantum		8865478	1					
ANR	8865528	IdentifierDeclStatement	string_reloc_offset * relp = cp -> sreloc + ( cp -> smark_size >> ( log2_string_data_quantum - 3 ) ) ;	233:8:7814:7929	8865478	3	True				
ANR	8865529	IdentifierDecl	* relp = cp -> sreloc + ( cp -> smark_size >> ( log2_string_data_quantum - 3 ) )		8865478	0					
ANR	8865530	IdentifierDeclType	string_reloc_offset *		8865478	0					
ANR	8865531	Identifier	relp		8865478	1					
ANR	8865532	AssignmentExpression	* relp = cp -> sreloc + ( cp -> smark_size >> ( log2_string_data_quantum - 3 ) )		8865478	2		=			
ANR	8865533	Identifier	relp		8865478	0					
ANR	8865534	AdditiveExpression	cp -> sreloc + ( cp -> smark_size >> ( log2_string_data_quantum - 3 ) )		8865478	1		+			
ANR	8865535	PtrMemberAccess	cp -> sreloc		8865478	0					
ANR	8865536	Identifier	cp		8865478	0					
ANR	8865537	Identifier	sreloc		8865478	1					
ANR	8865538	ShiftExpression	cp -> smark_size >> ( log2_string_data_quantum - 3 )		8865478	1		>>			
ANR	8865539	PtrMemberAccess	cp -> smark_size		8865478	0					
ANR	8865540	Identifier	cp		8865478	0					
ANR	8865541	Identifier	smark_size		8865478	1					
ANR	8865542	AdditiveExpression	log2_string_data_quantum - 3		8865478	1		-			
ANR	8865543	Identifier	log2_string_data_quantum		8865478	0					
ANR	8865544	PrimaryExpression	3		8865478	1					
ANR	8865545	Statement	register	236:8:7939:7946	8865478	4	True				
ANR	8865546	IdentifierDeclStatement	const byte * bitp = cp -> smark + cp -> smark_size ;	236:17:7948:7993	8865478	5	True				
ANR	8865547	IdentifierDecl	* bitp = cp -> smark + cp -> smark_size		8865478	0					
ANR	8865548	IdentifierDeclType	const byte *		8865478	0					
ANR	8865549	Identifier	bitp		8865478	1					
ANR	8865550	AssignmentExpression	* bitp = cp -> smark + cp -> smark_size		8865478	2		=			
ANR	8865551	Identifier	bitp		8865478	0					
ANR	8865552	AdditiveExpression	cp -> smark + cp -> smark_size		8865478	1		+			
ANR	8865553	PtrMemberAccess	cp -> smark		8865478	0					
ANR	8865554	Identifier	cp		8865478	0					
ANR	8865555	Identifier	smark		8865478	1					
ANR	8865556	PtrMemberAccess	cp -> smark_size		8865478	1					
ANR	8865557	Identifier	cp		8865478	0					
ANR	8865558	Identifier	smark_size		8865478	1					
ANR	8865559	Statement	register	237:8:8003:8010	8865478	6	True				
ANR	8865560	IdentifierDeclStatement	string_reloc_offset reloc = 0 ;	237:17:8012:8041	8865478	7	True				
ANR	8865561	IdentifierDecl	reloc = 0		8865478	0					
ANR	8865562	IdentifierDeclType	string_reloc_offset		8865478	0					
ANR	8865563	Identifier	reloc		8865478	1					
ANR	8865564	AssignmentExpression	reloc = 0		8865478	2		=			
ANR	8865565	Identifier	reloc		8865478	0					
ANR	8865566	PrimaryExpression	0		8865478	1					
ANR	8865567	CompoundStatement		30:1:1106:1161	8865478	8					
ANR	8865568	IdentifierDeclStatement	const bword * wp = ( const bword * ) bitp ;	243:12:8259:8296	8865478	0	True				
ANR	8865569	IdentifierDecl	* wp = ( const bword * ) bitp		8865478	0					
ANR	8865570	IdentifierDeclType	const bword *		8865478	0					
ANR	8865571	Identifier	wp		8865478	1					
ANR	8865572	AssignmentExpression	* wp = ( const bword * ) bitp		8865478	2		=			
ANR	8865573	Identifier	wp		8865478	0					
ANR	8865574	CastExpression	( const bword * ) bitp		8865478	1					
ANR	8865575	CastTarget	const bword *		8865478	0					
ANR	8865576	Identifier	bitp		8865478	1					
ANR	8865577	Statement	define	246:3:8340:8345	8865478	1	True				
ANR	8865578	Statement	RELOC_TEST_1S	246:10:8347:8359	8865478	2	True				
ANR	8865579	Statement	(	246:23:8360:8360	8865478	3	True				
ANR	8865580	Statement	wp	246:24:8361:8362	8865478	4	True				
ANR	8865581	Statement	)	246:26:8363:8363	8865478	5	True				
ANR	8865582	Statement	(	246:28:8365:8365	8865478	6	True				
ANR	8865583	Statement	wp	246:29:8366:8367	8865478	7	True				
ANR	8865584	Statement	[	246:31:8368:8368	8865478	8	True				
ANR	8865585	Statement	-	246:32:8369:8369	8865478	9	True				
ANR	8865586	Statement	1	246:33:8370:8370	8865478	10	True				
ANR	8865587	Statement	]	246:34:8371:8371	8865478	11	True				
ANR	8865588	Statement	)	246:35:8372:8372	8865478	12	True				
ANR	8865589	WhileStatement	while ( count && RELOC_TEST_1S ( wp ) == bword_1s )		8865478	13					
ANR	8865590	Condition	count && RELOC_TEST_1S ( wp ) == bword_1s	250:19:8496:8533	8865478	0	True				
ANR	8865591	AndExpression	count && RELOC_TEST_1S ( wp ) == bword_1s		8865478	0		&&			
ANR	8865592	Identifier	count		8865478	0					
ANR	8865593	EqualityExpression	RELOC_TEST_1S ( wp ) == bword_1s		8865478	1		==			
ANR	8865594	CallExpression	RELOC_TEST_1S ( wp )		8865478	0					
ANR	8865595	Callee	RELOC_TEST_1S		8865478	0					
ANR	8865596	Identifier	RELOC_TEST_1S		8865478	0					
ANR	8865597	ArgumentList	wp		8865478	1					
ANR	8865598	Argument	wp		8865478	0					
ANR	8865599	Identifier	wp		8865478	0					
ANR	8865600	Identifier	bword_1s		8865478	1					
ANR	8865601	CompoundStatement		25:59:952:952	8865478	1					
ANR	8865602	ExpressionStatement	wp -= string_data_quantum / bword_bits	251:16:8554:8592	8865478	0	True				
ANR	8865603	AssignmentExpression	wp -= string_data_quantum / bword_bits		8865478	0		-=			
ANR	8865604	Identifier	wp		8865478	0					
ANR	8865605	MultiplicativeExpression	string_data_quantum / bword_bits		8865478	1		/			
ANR	8865606	Identifier	string_data_quantum		8865478	0					
ANR	8865607	Identifier	bword_bits		8865478	1					
ANR	8865608	ExpressionStatement	* -- relp = reloc += string_data_quantum	252:16:8610:8648	8865478	1	True				
ANR	8865609	AssignmentExpression	* -- relp = reloc += string_data_quantum		8865478	0		=			
ANR	8865610	UnaryOperationExpression	* -- relp		8865478	0					
ANR	8865611	UnaryOperator	*		8865478	0					
ANR	8865612	UnaryExpression	-- relp		8865478	1					
ANR	8865613	IncDec	--		8865478	0					
ANR	8865614	Identifier	relp		8865478	1					
ANR	8865615	AssignmentExpression	reloc += string_data_quantum		8865478	1		+=			
ANR	8865616	Identifier	reloc		8865478	0					
ANR	8865617	Identifier	string_data_quantum		8865478	1					
ANR	8865618	ExpressionStatement	-- count	253:16:8666:8673	8865478	2	True				
ANR	8865619	UnaryExpression	-- count		8865478	0					
ANR	8865620	IncDec	--		8865478	0					
ANR	8865621	Identifier	count		8865478	1					
ANR	8865622	IdentifierDeclStatement	undef RELOC_TEST_1S bitp = ( const byte * ) wp ;	255:1:8690:8745	8865478	14	True				
ANR	8865623	IdentifierDecl	bitp = ( const byte * ) wp		8865478	0					
ANR	8865624	IdentifierDeclType	undef RELOC_TEST_1S		8865478	0					
ANR	8865625	Identifier	bitp		8865478	1					
ANR	8865626	AssignmentExpression	bitp = ( const byte * ) wp		8865478	2		=			
ANR	8865627	Identifier	bitp		8865478	0					
ANR	8865628	CastExpression	( const byte * ) wp		8865478	1					
ANR	8865629	CastTarget	const byte *		8865478	0					
ANR	8865630	Identifier	wp		8865478	1					
ANR	8865631	WhileStatement	while ( count -- )		8865478	9					
ANR	8865632	Condition	count --	259:15:8779:8785	8865478	0	True				
ANR	8865633	PostIncDecOperationExpression	count --		8865478	0					
ANR	8865634	Identifier	count		8865478	0					
ANR	8865635	IncDec	--		8865478	1					
ANR	8865636	CompoundStatement		34:24:1204:1204	8865478	1					
ANR	8865637	ExpressionStatement	bitp -= string_data_quantum / 8	260:12:8802:8833	8865478	0	True				
ANR	8865638	AssignmentExpression	bitp -= string_data_quantum / 8		8865478	0		-=			
ANR	8865639	Identifier	bitp		8865478	0					
ANR	8865640	MultiplicativeExpression	string_data_quantum / 8		8865478	1		/			
ANR	8865641	Identifier	string_data_quantum		8865478	0					
ANR	8865642	PrimaryExpression	8		8865478	1					
ANR	8865643	ExpressionStatement	reloc += string_data_quantum - byte_count_zero_bits ( bitp [ 0 ] )	261:12:8847:8923	8865478	1	True				
ANR	8865644	AssignmentExpression	reloc += string_data_quantum - byte_count_zero_bits ( bitp [ 0 ] )		8865478	0		+=			
ANR	8865645	Identifier	reloc		8865478	0					
ANR	8865646	AdditiveExpression	string_data_quantum - byte_count_zero_bits ( bitp [ 0 ] )		8865478	1		-			
ANR	8865647	Identifier	string_data_quantum		8865478	0					
ANR	8865648	CallExpression	byte_count_zero_bits ( bitp [ 0 ] )		8865478	1					
ANR	8865649	Callee	byte_count_zero_bits		8865478	0					
ANR	8865650	Identifier	byte_count_zero_bits		8865478	0					
ANR	8865651	ArgumentList	bitp [ 0 ]		8865478	1					
ANR	8865652	Argument	bitp [ 0 ]		8865478	0					
ANR	8865653	ArrayIndexing	bitp [ 0 ]		8865478	0					
ANR	8865654	Identifier	bitp		8865478	0					
ANR	8865655	PrimaryExpression	0		8865478	1					
ANR	8865656	ExpressionStatement	reloc -= byte_count_zero_bits ( bitp [ 1 ] )	263:12:8937:8975	8865478	2	True				
ANR	8865657	AssignmentExpression	reloc -= byte_count_zero_bits ( bitp [ 1 ] )		8865478	0		-=			
ANR	8865658	Identifier	reloc		8865478	0					
ANR	8865659	CallExpression	byte_count_zero_bits ( bitp [ 1 ] )		8865478	1					
ANR	8865660	Callee	byte_count_zero_bits		8865478	0					
ANR	8865661	Identifier	byte_count_zero_bits		8865478	0					
ANR	8865662	ArgumentList	bitp [ 1 ]		8865478	1					
ANR	8865663	Argument	bitp [ 1 ]		8865478	0					
ANR	8865664	ArrayIndexing	bitp [ 1 ]		8865478	0					
ANR	8865665	Identifier	bitp		8865478	0					
ANR	8865666	PrimaryExpression	1		8865478	1					
ANR	8865667	ExpressionStatement	reloc -= byte_count_zero_bits ( bitp [ 2 ] )	264:12:8989:9027	8865478	3	True				
ANR	8865668	AssignmentExpression	reloc -= byte_count_zero_bits ( bitp [ 2 ] )		8865478	0		-=			
ANR	8865669	Identifier	reloc		8865478	0					
ANR	8865670	CallExpression	byte_count_zero_bits ( bitp [ 2 ] )		8865478	1					
ANR	8865671	Callee	byte_count_zero_bits		8865478	0					
ANR	8865672	Identifier	byte_count_zero_bits		8865478	0					
ANR	8865673	ArgumentList	bitp [ 2 ]		8865478	1					
ANR	8865674	Argument	bitp [ 2 ]		8865478	0					
ANR	8865675	ArrayIndexing	bitp [ 2 ]		8865478	0					
ANR	8865676	Identifier	bitp		8865478	0					
ANR	8865677	PrimaryExpression	2		8865478	1					
ANR	8865678	ExpressionStatement	reloc -= byte_count_zero_bits ( bitp [ 3 ] )	265:12:9041:9079	8865478	4	True				
ANR	8865679	AssignmentExpression	reloc -= byte_count_zero_bits ( bitp [ 3 ] )		8865478	0		-=			
ANR	8865680	Identifier	reloc		8865478	0					
ANR	8865681	CallExpression	byte_count_zero_bits ( bitp [ 3 ] )		8865478	1					
ANR	8865682	Callee	byte_count_zero_bits		8865478	0					
ANR	8865683	Identifier	byte_count_zero_bits		8865478	0					
ANR	8865684	ArgumentList	bitp [ 3 ]		8865478	1					
ANR	8865685	Argument	bitp [ 3 ]		8865478	0					
ANR	8865686	ArrayIndexing	bitp [ 3 ]		8865478	0					
ANR	8865687	Identifier	bitp		8865478	0					
ANR	8865688	PrimaryExpression	3		8865478	1					
ANR	8865689	ExpressionStatement	reloc -= byte_count_zero_bits ( bitp [ 4 ] )	267:12:9126:9164	8865478	5	True				
ANR	8865690	AssignmentExpression	reloc -= byte_count_zero_bits ( bitp [ 4 ] )		8865478	0		-=			
ANR	8865691	Identifier	reloc		8865478	0					
ANR	8865692	CallExpression	byte_count_zero_bits ( bitp [ 4 ] )		8865478	1					
ANR	8865693	Callee	byte_count_zero_bits		8865478	0					
ANR	8865694	Identifier	byte_count_zero_bits		8865478	0					
ANR	8865695	ArgumentList	bitp [ 4 ]		8865478	1					
ANR	8865696	Argument	bitp [ 4 ]		8865478	0					
ANR	8865697	ArrayIndexing	bitp [ 4 ]		8865478	0					
ANR	8865698	Identifier	bitp		8865478	0					
ANR	8865699	PrimaryExpression	4		8865478	1					
ANR	8865700	ExpressionStatement	reloc -= byte_count_zero_bits ( bitp [ 5 ] )	268:12:9178:9216	8865478	6	True				
ANR	8865701	AssignmentExpression	reloc -= byte_count_zero_bits ( bitp [ 5 ] )		8865478	0		-=			
ANR	8865702	Identifier	reloc		8865478	0					
ANR	8865703	CallExpression	byte_count_zero_bits ( bitp [ 5 ] )		8865478	1					
ANR	8865704	Callee	byte_count_zero_bits		8865478	0					
ANR	8865705	Identifier	byte_count_zero_bits		8865478	0					
ANR	8865706	ArgumentList	bitp [ 5 ]		8865478	1					
ANR	8865707	Argument	bitp [ 5 ]		8865478	0					
ANR	8865708	ArrayIndexing	bitp [ 5 ]		8865478	0					
ANR	8865709	Identifier	bitp		8865478	0					
ANR	8865710	PrimaryExpression	5		8865478	1					
ANR	8865711	ExpressionStatement	reloc -= byte_count_zero_bits ( bitp [ 6 ] )	269:12:9230:9268	8865478	7	True				
ANR	8865712	AssignmentExpression	reloc -= byte_count_zero_bits ( bitp [ 6 ] )		8865478	0		-=			
ANR	8865713	Identifier	reloc		8865478	0					
ANR	8865714	CallExpression	byte_count_zero_bits ( bitp [ 6 ] )		8865478	1					
ANR	8865715	Callee	byte_count_zero_bits		8865478	0					
ANR	8865716	Identifier	byte_count_zero_bits		8865478	0					
ANR	8865717	ArgumentList	bitp [ 6 ]		8865478	1					
ANR	8865718	Argument	bitp [ 6 ]		8865478	0					
ANR	8865719	ArrayIndexing	bitp [ 6 ]		8865478	0					
ANR	8865720	Identifier	bitp		8865478	0					
ANR	8865721	PrimaryExpression	6		8865478	1					
ANR	8865722	ExpressionStatement	reloc -= byte_count_zero_bits ( bitp [ 7 ] )	270:12:9282:9320	8865478	8	True				
ANR	8865723	AssignmentExpression	reloc -= byte_count_zero_bits ( bitp [ 7 ] )		8865478	0		-=			
ANR	8865724	Identifier	reloc		8865478	0					
ANR	8865725	CallExpression	byte_count_zero_bits ( bitp [ 7 ] )		8865478	1					
ANR	8865726	Callee	byte_count_zero_bits		8865478	0					
ANR	8865727	Identifier	byte_count_zero_bits		8865478	0					
ANR	8865728	ArgumentList	bitp [ 7 ]		8865478	1					
ANR	8865729	Argument	bitp [ 7 ]		8865478	0					
ANR	8865730	ArrayIndexing	bitp [ 7 ]		8865478	0					
ANR	8865731	Identifier	bitp		8865478	0					
ANR	8865732	PrimaryExpression	7		8865478	1					
ANR	8865733	ExpressionStatement	* -- relp = reloc	272:12:9341:9356	8865478	9	True				
ANR	8865734	AssignmentExpression	* -- relp = reloc		8865478	0		=			
ANR	8865735	UnaryOperationExpression	* -- relp		8865478	0					
ANR	8865736	UnaryOperator	*		8865478	0					
ANR	8865737	UnaryExpression	-- relp		8865478	1					
ANR	8865738	IncDec	--		8865478	0					
ANR	8865739	Identifier	relp		8865478	1					
ANR	8865740	Identifier	reloc		8865478	1					
ANR	8865741	ExpressionStatement	cp -> sdest = cp -> climit	275:4:9378:9400	8865478	1	True				
ANR	8865742	AssignmentExpression	cp -> sdest = cp -> climit		8865478	0		=			
ANR	8865743	PtrMemberAccess	cp -> sdest		8865478	0					
ANR	8865744	Identifier	cp		8865478	0					
ANR	8865745	Identifier	sdest		8865478	1					
ANR	8865746	PtrMemberAccess	cp -> climit		8865478	1					
ANR	8865747	Identifier	cp		8865478	0					
ANR	8865748	Identifier	climit		8865478	1					
ANR	8865749	ReturnType	void		8865478	1					
ANR	8865750	Identifier	gc_strings_set_reloc		8865478	2					
ANR	8865751	ParameterList	clump_t * cp		8865478	3					
ANR	8865752	Parameter	clump_t * cp	225:21:7569:7580	8865478	0	True				
ANR	8865753	ParameterType	clump_t *		8865478	0					
ANR	8865754	Identifier	cp		8865478	1					
ANR	8865755	CFGEntryNode	ENTRY		8865478		True				
ANR	8865756	CFGExitNode	EXIT		8865478		True				
ANR	8865757	Symbol	relp		8865478						
ANR	8865758	Symbol	bword_1s		8865478						
ANR	8865759	Symbol	* bitp		8865478						
ANR	8865760	Symbol	bot		8865478						
ANR	8865761	Symbol	count		8865478						
ANR	8865762	Symbol	log2_string_data_quantum		8865478						
ANR	8865763	Symbol	cp -> sreloc		8865478						
ANR	8865764	Symbol	cp		8865478						
ANR	8865765	Symbol	bitp		8865478						
ANR	8865766	Symbol	cp -> climit		8865478						
ANR	8865767	Symbol	* relp		8865478						
ANR	8865768	Symbol	cp -> sdest		8865478						
ANR	8865769	Symbol	* cp		8865478						
ANR	8865770	Symbol	byte_count_zero_bits		8865478						
ANR	8865771	Symbol	top		8865478						
ANR	8865772	Symbol	string_data_quantum		8865478						
ANR	8865773	Symbol	cp -> smark_size		8865478						
ANR	8865774	Symbol	wp		8865478						
ANR	8865775	Symbol	RELOC_TEST_1S		8865478						
ANR	8865776	Symbol	bword_bits		8865478						
ANR	8865777	Symbol	reloc		8865478						
ANR	8865778	Symbol	* -- relp		8865478						
ANR	8865779	Symbol	cp -> ctop		8865478						
ANR	8865780	Symbol	cp -> smark		8865478						
ANR	8865781	Function	igc_reloc_string	279:0:9438:10849							
ANR	8865782	FunctionDef	"igc_reloc_string (gs_string * sptr , gc_state_t * gcst)"		8865781	0					
ANR	8865783	CompoundStatement		281:0:9497:10849	8865781	0					
ANR	8865784	IdentifierDeclStatement	byte * ptr ;	282:4:9503:9512	8865781	0	True				
ANR	8865785	IdentifierDecl	* ptr		8865781	0					
ANR	8865786	IdentifierDeclType	byte *		8865781	0					
ANR	8865787	Identifier	ptr		8865781	1					
ANR	8865788	IdentifierDeclStatement	const clump_t * cp ;	283:4:9518:9535	8865781	1	True				
ANR	8865789	IdentifierDecl	* cp		8865781	0					
ANR	8865790	IdentifierDeclType	const clump_t *		8865781	0					
ANR	8865791	Identifier	cp		8865781	1					
ANR	8865792	IdentifierDeclStatement	uint offset ;	284:4:9541:9552	8865781	2	True				
ANR	8865793	IdentifierDecl	offset		8865781	0					
ANR	8865794	IdentifierDeclType	uint		8865781	0					
ANR	8865795	Identifier	offset		8865781	1					
ANR	8865796	IdentifierDeclStatement	uint reloc ;	285:4:9558:9568	8865781	3	True				
ANR	8865797	IdentifierDecl	reloc		8865781	0					
ANR	8865798	IdentifierDeclType	uint		8865781	0					
ANR	8865799	Identifier	reloc		8865781	1					
ANR	8865800	IdentifierDeclStatement	const byte * bitp ;	286:4:9574:9590	8865781	4	True				
ANR	8865801	IdentifierDecl	* bitp		8865781	0					
ANR	8865802	IdentifierDeclType	const byte *		8865781	0					
ANR	8865803	Identifier	bitp		8865781	1					
ANR	8865804	IdentifierDeclStatement	byte byt ;	287:4:9596:9604	8865781	5	True				
ANR	8865805	IdentifierDecl	byt		8865781	0					
ANR	8865806	IdentifierDeclType	byte		8865781	0					
ANR	8865807	Identifier	byt		8865781	1					
ANR	8865808	IfStatement	if ( sptr -> size == 0 )		8865781	6					
ANR	8865809	Condition	sptr -> size == 0	289:8:9615:9629	8865781	0	True				
ANR	8865810	EqualityExpression	sptr -> size == 0		8865781	0		==			
ANR	8865811	PtrMemberAccess	sptr -> size		8865781	0					
ANR	8865812	Identifier	sptr		8865781	0					
ANR	8865813	Identifier	size		8865781	1					
ANR	8865814	PrimaryExpression	0		8865781	1					
ANR	8865815	CompoundStatement		9:25:134:134	8865781	1					
ANR	8865816	ExpressionStatement	sptr -> data = 0	290:8:9642:9656	8865781	0	True				
ANR	8865817	AssignmentExpression	sptr -> data = 0		8865781	0		=			
ANR	8865818	PtrMemberAccess	sptr -> data		8865781	0					
ANR	8865819	Identifier	sptr		8865781	0					
ANR	8865820	Identifier	data		8865781	1					
ANR	8865821	PrimaryExpression	0		8865781	1					
ANR	8865822	ReturnStatement	return ;	291:8:9666:9672	8865781	1	True				
ANR	8865823	ExpressionStatement	ptr = sptr -> data	293:4:9684:9700	8865781	7	True				
ANR	8865824	AssignmentExpression	ptr = sptr -> data		8865781	0		=			
ANR	8865825	Identifier	ptr		8865781	0					
ANR	8865826	PtrMemberAccess	sptr -> data		8865781	1					
ANR	8865827	Identifier	sptr		8865781	0					
ANR	8865828	Identifier	data		8865781	1					
ANR	8865829	ExpressionStatement	ptr -= HDR_ID_OFFSET	294:4:9706:9726	8865781	8	True				
ANR	8865830	AssignmentExpression	ptr -= HDR_ID_OFFSET		8865781	0		-=			
ANR	8865831	Identifier	ptr		8865781	0					
ANR	8865832	Identifier	HDR_ID_OFFSET		8865781	1					
ANR	8865833	IfStatement	"if ( ! ( cp = gc_locate ( ptr , gcst ) ) )"		8865781	9					
ANR	8865834	Condition	"! ( cp = gc_locate ( ptr , gcst ) )"	296:8:9737:9764	8865781	0	True				
ANR	8865835	UnaryOperationExpression	"! ( cp = gc_locate ( ptr , gcst ) )"		8865781	0					
ANR	8865836	UnaryOperator	!		8865781	0					
ANR	8865837	AssignmentExpression	"cp = gc_locate ( ptr , gcst )"		8865781	1		=			
ANR	8865838	Identifier	cp		8865781	0					
ANR	8865839	CallExpression	"gc_locate ( ptr , gcst )"		8865781	1					
ANR	8865840	Callee	gc_locate		8865781	0					
ANR	8865841	Identifier	gc_locate		8865781	0					
ANR	8865842	ArgumentList	ptr		8865781	1					
ANR	8865843	Argument	ptr		8865781	0					
ANR	8865844	Identifier	ptr		8865781	0					
ANR	8865845	Argument	gcst		8865781	1					
ANR	8865846	Identifier	gcst		8865781	0					
ANR	8865847	ReturnStatement	return ;	297:8:9796:9802	8865781	1	True				
ANR	8865848	IfStatement	if ( cp -> sreloc == 0 || cp -> smark == 0 )		8865781	10					
ANR	8865849	Condition	cp -> sreloc == 0 || cp -> smark == 0	298:8:9812:9844	8865781	0	True				
ANR	8865850	OrExpression	cp -> sreloc == 0 || cp -> smark == 0		8865781	0		||			
ANR	8865851	EqualityExpression	cp -> sreloc == 0		8865781	0		==			
ANR	8865852	PtrMemberAccess	cp -> sreloc		8865781	0					
ANR	8865853	Identifier	cp		8865781	0					
ANR	8865854	Identifier	sreloc		8865781	1					
ANR	8865855	PrimaryExpression	0		8865781	1					
ANR	8865856	EqualityExpression	cp -> smark == 0		8865781	1		==			
ANR	8865857	PtrMemberAccess	cp -> smark		8865781	0					
ANR	8865858	Identifier	cp		8865781	0					
ANR	8865859	Identifier	smark		8865781	1					
ANR	8865860	PrimaryExpression	0		8865781	1					
ANR	8865861	ReturnStatement	return ;	299:8:9881:9887	8865781	1	True				
ANR	8865862	ExpressionStatement	offset = ptr - cp -> sbase	300:4:9893:9917	8865781	11	True				
ANR	8865863	AssignmentExpression	offset = ptr - cp -> sbase		8865781	0		=			
ANR	8865864	Identifier	offset		8865781	0					
ANR	8865865	AdditiveExpression	ptr - cp -> sbase		8865781	1		-			
ANR	8865866	Identifier	ptr		8865781	0					
ANR	8865867	PtrMemberAccess	cp -> sbase		8865781	1					
ANR	8865868	Identifier	cp		8865781	0					
ANR	8865869	Identifier	sbase		8865781	1					
ANR	8865870	ExpressionStatement	reloc = cp -> sreloc [ offset >> log2_string_data_quantum ]	301:4:9923:9977	8865781	12	True				
ANR	8865871	AssignmentExpression	reloc = cp -> sreloc [ offset >> log2_string_data_quantum ]		8865781	0		=			
ANR	8865872	Identifier	reloc		8865781	0					
ANR	8865873	ArrayIndexing	cp -> sreloc [ offset >> log2_string_data_quantum ]		8865781	1					
ANR	8865874	PtrMemberAccess	cp -> sreloc		8865781	0					
ANR	8865875	Identifier	cp		8865781	0					
ANR	8865876	Identifier	sreloc		8865781	1					
ANR	8865877	ShiftExpression	offset >> log2_string_data_quantum		8865781	1		>>			
ANR	8865878	Identifier	offset		8865781	0					
ANR	8865879	Identifier	log2_string_data_quantum		8865781	1					
ANR	8865880	ExpressionStatement	bitp = & cp -> smark [ offset >> 3 ]	302:4:9983:10013	8865781	13	True				
ANR	8865881	AssignmentExpression	bitp = & cp -> smark [ offset >> 3 ]		8865781	0		=			
ANR	8865882	Identifier	bitp		8865781	0					
ANR	8865883	UnaryOperationExpression	& cp -> smark [ offset >> 3 ]		8865781	1					
ANR	8865884	UnaryOperator	&		8865781	0					
ANR	8865885	ArrayIndexing	cp -> smark [ offset >> 3 ]		8865781	1					
ANR	8865886	PtrMemberAccess	cp -> smark		8865781	0					
ANR	8865887	Identifier	cp		8865781	0					
ANR	8865888	Identifier	smark		8865781	1					
ANR	8865889	ShiftExpression	offset >> 3		8865781	1		>>			
ANR	8865890	Identifier	offset		8865781	0					
ANR	8865891	PrimaryExpression	3		8865781	1					
ANR	8865892	SwitchStatement	switch ( offset & ( string_data_quantum - 8 ) )		8865781	14					
ANR	8865893	Condition	offset & ( string_data_quantum - 8 )	303:12:10027:10060	8865781	0	True				
ANR	8865894	BitAndExpression	offset & ( string_data_quantum - 8 )		8865781	0		&			
ANR	8865895	Identifier	offset		8865781	0					
ANR	8865896	AdditiveExpression	string_data_quantum - 8		8865781	1		-			
ANR	8865897	Identifier	string_data_quantum		8865781	0					
ANR	8865898	PrimaryExpression	8		8865781	1					
ANR	8865899	CompoundStatement		23:48:565:565	8865781	1					
ANR	8865900	Label	case 56 :	305:8:10106:10113	8865781	0	True				
ANR	8865901	ExpressionStatement	reloc -= byte_count_one_bits ( bitp [ - 7 ] )	306:12:10127:10165	8865781	1	True				
ANR	8865902	AssignmentExpression	reloc -= byte_count_one_bits ( bitp [ - 7 ] )		8865781	0		-=			
ANR	8865903	Identifier	reloc		8865781	0					
ANR	8865904	CallExpression	byte_count_one_bits ( bitp [ - 7 ] )		8865781	1					
ANR	8865905	Callee	byte_count_one_bits		8865781	0					
ANR	8865906	Identifier	byte_count_one_bits		8865781	0					
ANR	8865907	ArgumentList	bitp [ - 7 ]		8865781	1					
ANR	8865908	Argument	bitp [ - 7 ]		8865781	0					
ANR	8865909	ArrayIndexing	bitp [ - 7 ]		8865781	0					
ANR	8865910	Identifier	bitp		8865781	0					
ANR	8865911	UnaryOperationExpression	- 7		8865781	1					
ANR	8865912	UnaryOperator	-		8865781	0					
ANR	8865913	PrimaryExpression	7		8865781	1					
ANR	8865914	Label	case 48 :	307:8:10175:10182	8865781	2	True				
ANR	8865915	ExpressionStatement	reloc -= byte_count_one_bits ( bitp [ - 6 ] )	308:12:10196:10234	8865781	3	True				
ANR	8865916	AssignmentExpression	reloc -= byte_count_one_bits ( bitp [ - 6 ] )		8865781	0		-=			
ANR	8865917	Identifier	reloc		8865781	0					
ANR	8865918	CallExpression	byte_count_one_bits ( bitp [ - 6 ] )		8865781	1					
ANR	8865919	Callee	byte_count_one_bits		8865781	0					
ANR	8865920	Identifier	byte_count_one_bits		8865781	0					
ANR	8865921	ArgumentList	bitp [ - 6 ]		8865781	1					
ANR	8865922	Argument	bitp [ - 6 ]		8865781	0					
ANR	8865923	ArrayIndexing	bitp [ - 6 ]		8865781	0					
ANR	8865924	Identifier	bitp		8865781	0					
ANR	8865925	UnaryOperationExpression	- 6		8865781	1					
ANR	8865926	UnaryOperator	-		8865781	0					
ANR	8865927	PrimaryExpression	6		8865781	1					
ANR	8865928	Label	case 40 :	309:8:10244:10251	8865781	4	True				
ANR	8865929	ExpressionStatement	reloc -= byte_count_one_bits ( bitp [ - 5 ] )	310:12:10265:10303	8865781	5	True				
ANR	8865930	AssignmentExpression	reloc -= byte_count_one_bits ( bitp [ - 5 ] )		8865781	0		-=			
ANR	8865931	Identifier	reloc		8865781	0					
ANR	8865932	CallExpression	byte_count_one_bits ( bitp [ - 5 ] )		8865781	1					
ANR	8865933	Callee	byte_count_one_bits		8865781	0					
ANR	8865934	Identifier	byte_count_one_bits		8865781	0					
ANR	8865935	ArgumentList	bitp [ - 5 ]		8865781	1					
ANR	8865936	Argument	bitp [ - 5 ]		8865781	0					
ANR	8865937	ArrayIndexing	bitp [ - 5 ]		8865781	0					
ANR	8865938	Identifier	bitp		8865781	0					
ANR	8865939	UnaryOperationExpression	- 5		8865781	1					
ANR	8865940	UnaryOperator	-		8865781	0					
ANR	8865941	PrimaryExpression	5		8865781	1					
ANR	8865942	Label	case 32 :	311:8:10313:10320	8865781	6	True				
ANR	8865943	ExpressionStatement	reloc -= byte_count_one_bits ( bitp [ - 4 ] )	312:12:10334:10372	8865781	7	True				
ANR	8865944	AssignmentExpression	reloc -= byte_count_one_bits ( bitp [ - 4 ] )		8865781	0		-=			
ANR	8865945	Identifier	reloc		8865781	0					
ANR	8865946	CallExpression	byte_count_one_bits ( bitp [ - 4 ] )		8865781	1					
ANR	8865947	Callee	byte_count_one_bits		8865781	0					
ANR	8865948	Identifier	byte_count_one_bits		8865781	0					
ANR	8865949	ArgumentList	bitp [ - 4 ]		8865781	1					
ANR	8865950	Argument	bitp [ - 4 ]		8865781	0					
ANR	8865951	ArrayIndexing	bitp [ - 4 ]		8865781	0					
ANR	8865952	Identifier	bitp		8865781	0					
ANR	8865953	UnaryOperationExpression	- 4		8865781	1					
ANR	8865954	UnaryOperator	-		8865781	0					
ANR	8865955	PrimaryExpression	4		8865781	1					
ANR	8865956	Label	case 24 :	314:8:10389:10396	8865781	8	True				
ANR	8865957	ExpressionStatement	reloc -= byte_count_one_bits ( bitp [ - 3 ] )	315:12:10410:10448	8865781	9	True				
ANR	8865958	AssignmentExpression	reloc -= byte_count_one_bits ( bitp [ - 3 ] )		8865781	0		-=			
ANR	8865959	Identifier	reloc		8865781	0					
ANR	8865960	CallExpression	byte_count_one_bits ( bitp [ - 3 ] )		8865781	1					
ANR	8865961	Callee	byte_count_one_bits		8865781	0					
ANR	8865962	Identifier	byte_count_one_bits		8865781	0					
ANR	8865963	ArgumentList	bitp [ - 3 ]		8865781	1					
ANR	8865964	Argument	bitp [ - 3 ]		8865781	0					
ANR	8865965	ArrayIndexing	bitp [ - 3 ]		8865781	0					
ANR	8865966	Identifier	bitp		8865781	0					
ANR	8865967	UnaryOperationExpression	- 3		8865781	1					
ANR	8865968	UnaryOperator	-		8865781	0					
ANR	8865969	PrimaryExpression	3		8865781	1					
ANR	8865970	Label	case 16 :	316:8:10458:10465	8865781	10	True				
ANR	8865971	ExpressionStatement	reloc -= byte_count_one_bits ( bitp [ - 2 ] )	317:12:10479:10517	8865781	11	True				
ANR	8865972	AssignmentExpression	reloc -= byte_count_one_bits ( bitp [ - 2 ] )		8865781	0		-=			
ANR	8865973	Identifier	reloc		8865781	0					
ANR	8865974	CallExpression	byte_count_one_bits ( bitp [ - 2 ] )		8865781	1					
ANR	8865975	Callee	byte_count_one_bits		8865781	0					
ANR	8865976	Identifier	byte_count_one_bits		8865781	0					
ANR	8865977	ArgumentList	bitp [ - 2 ]		8865781	1					
ANR	8865978	Argument	bitp [ - 2 ]		8865781	0					
ANR	8865979	ArrayIndexing	bitp [ - 2 ]		8865781	0					
ANR	8865980	Identifier	bitp		8865781	0					
ANR	8865981	UnaryOperationExpression	- 2		8865781	1					
ANR	8865982	UnaryOperator	-		8865781	0					
ANR	8865983	PrimaryExpression	2		8865781	1					
ANR	8865984	Label	case 8 :	318:8:10527:10533	8865781	12	True				
ANR	8865985	ExpressionStatement	reloc -= byte_count_one_bits ( bitp [ - 1 ] )	319:12:10547:10585	8865781	13	True				
ANR	8865986	AssignmentExpression	reloc -= byte_count_one_bits ( bitp [ - 1 ] )		8865781	0		-=			
ANR	8865987	Identifier	reloc		8865781	0					
ANR	8865988	CallExpression	byte_count_one_bits ( bitp [ - 1 ] )		8865781	1					
ANR	8865989	Callee	byte_count_one_bits		8865781	0					
ANR	8865990	Identifier	byte_count_one_bits		8865781	0					
ANR	8865991	ArgumentList	bitp [ - 1 ]		8865781	1					
ANR	8865992	Argument	bitp [ - 1 ]		8865781	0					
ANR	8865993	ArrayIndexing	bitp [ - 1 ]		8865781	0					
ANR	8865994	Identifier	bitp		8865781	0					
ANR	8865995	UnaryOperationExpression	- 1		8865781	1					
ANR	8865996	UnaryOperator	-		8865781	0					
ANR	8865997	PrimaryExpression	1		8865781	1					
ANR	8865998	ExpressionStatement	byt = * bitp & ( 0xff >> ( 8 - ( offset & 7 ) ) )	321:4:10597:10639	8865781	15	True				
ANR	8865999	AssignmentExpression	byt = * bitp & ( 0xff >> ( 8 - ( offset & 7 ) ) )		8865781	0		=			
ANR	8866000	Identifier	byt		8865781	0					
ANR	8866001	BitAndExpression	* bitp & ( 0xff >> ( 8 - ( offset & 7 ) ) )		8865781	1		&			
ANR	8866002	UnaryOperationExpression	* bitp		8865781	0					
ANR	8866003	UnaryOperator	*		8865781	0					
ANR	8866004	Identifier	bitp		8865781	1					
ANR	8866005	ShiftExpression	0xff >> ( 8 - ( offset & 7 ) )		8865781	1		>>			
ANR	8866006	PrimaryExpression	0xff		8865781	0					
ANR	8866007	AdditiveExpression	8 - ( offset & 7 )		8865781	1		-			
ANR	8866008	PrimaryExpression	8		8865781	0					
ANR	8866009	BitAndExpression	offset & 7		8865781	1		&			
ANR	8866010	Identifier	offset		8865781	0					
ANR	8866011	PrimaryExpression	7		8865781	1					
ANR	8866012	ExpressionStatement	reloc -= byte_count_one_bits ( byt )	322:4:10645:10678	8865781	16	True				
ANR	8866013	AssignmentExpression	reloc -= byte_count_one_bits ( byt )		8865781	0		-=			
ANR	8866014	Identifier	reloc		8865781	0					
ANR	8866015	CallExpression	byte_count_one_bits ( byt )		8865781	1					
ANR	8866016	Callee	byte_count_one_bits		8865781	0					
ANR	8866017	Identifier	byte_count_one_bits		8865781	0					
ANR	8866018	ArgumentList	byt		8865781	1					
ANR	8866019	Argument	byt		8865781	0					
ANR	8866020	Identifier	byt		8865781	0					
ANR	8866021	ExpressionStatement	"if_debug2 ( '5' , ""[5]relocate string 0x%lx to 0x%lx\\n"" , ( ulong ) ptr , ( ulong ) ( cp -> sdest - reloc ) )"	323:4:10684:10793	8865781	17	True				
ANR	8866022	CallExpression	"if_debug2 ( '5' , ""[5]relocate string 0x%lx to 0x%lx\\n"" , ( ulong ) ptr , ( ulong ) ( cp -> sdest - reloc ) )"		8865781	0					
ANR	8866023	Callee	if_debug2		8865781	0					
ANR	8866024	Identifier	if_debug2		8865781	0					
ANR	8866025	ArgumentList	'5'		8865781	1					
ANR	8866026	Argument	'5'		8865781	0					
ANR	8866027	PrimaryExpression	'5'		8865781	0					
ANR	8866028	Argument	"""[5]relocate string 0x%lx to 0x%lx\\n"""		8865781	1					
ANR	8866029	PrimaryExpression	"""[5]relocate string 0x%lx to 0x%lx\\n"""		8865781	0					
ANR	8866030	Argument	( ulong ) ptr		8865781	2					
ANR	8866031	CastExpression	( ulong ) ptr		8865781	0					
ANR	8866032	CastTarget	ulong		8865781	0					
ANR	8866033	Identifier	ptr		8865781	1					
ANR	8866034	Argument	( ulong ) ( cp -> sdest - reloc )		8865781	3					
ANR	8866035	CastExpression	( ulong ) ( cp -> sdest - reloc )		8865781	0					
ANR	8866036	CastTarget	ulong		8865781	0					
ANR	8866037	AdditiveExpression	cp -> sdest - reloc		8865781	1		-			
ANR	8866038	PtrMemberAccess	cp -> sdest		8865781	0					
ANR	8866039	Identifier	cp		8865781	0					
ANR	8866040	Identifier	sdest		8865781	1					
ANR	8866041	Identifier	reloc		8865781	1					
ANR	8866042	ExpressionStatement	sptr -> data = ( cp -> sdest - reloc ) + HDR_ID_OFFSET	325:4:10799:10847	8865781	18	True				
ANR	8866043	AssignmentExpression	sptr -> data = ( cp -> sdest - reloc ) + HDR_ID_OFFSET		8865781	0		=			
ANR	8866044	PtrMemberAccess	sptr -> data		8865781	0					
ANR	8866045	Identifier	sptr		8865781	0					
ANR	8866046	Identifier	data		8865781	1					
ANR	8866047	AdditiveExpression	( cp -> sdest - reloc ) + HDR_ID_OFFSET		8865781	1		+			
ANR	8866048	AdditiveExpression	cp -> sdest - reloc		8865781	0		-			
ANR	8866049	PtrMemberAccess	cp -> sdest		8865781	0					
ANR	8866050	Identifier	cp		8865781	0					
ANR	8866051	Identifier	sdest		8865781	1					
ANR	8866052	Identifier	reloc		8865781	1					
ANR	8866053	Identifier	HDR_ID_OFFSET		8865781	1					
ANR	8866054	ReturnType	void		8865781	1					
ANR	8866055	Identifier	igc_reloc_string		8865781	2					
ANR	8866056	ParameterList	"gs_string * sptr , gc_state_t * gcst"		8865781	3					
ANR	8866057	Parameter	gs_string * sptr	280:17:9460:9475	8865781	0	True				
ANR	8866058	ParameterType	gs_string *		8865781	0					
ANR	8866059	Identifier	sptr		8865781	1					
ANR	8866060	Parameter	gc_state_t * gcst	280:35:9478:9494	8865781	1	True				
ANR	8866061	ParameterType	gc_state_t *		8865781	0					
ANR	8866062	Identifier	gcst		8865781	1					
ANR	8866063	CFGEntryNode	ENTRY		8865781		True				
ANR	8866064	CFGExitNode	EXIT		8865781		True				
ANR	8866065	Symbol	sptr -> data		8865781						
ANR	8866066	Symbol	cp -> sreloc		8865781						
ANR	8866067	Symbol	gcst		8865781						
ANR	8866068	Symbol	* cp -> sreloc		8865781						
ANR	8866069	Symbol	HDR_ID_OFFSET		8865781						
ANR	8866070	Symbol	string_data_quantum		8865781						
ANR	8866071	Symbol	reloc		8865781						
ANR	8866072	Symbol	* * cp		8865781						
ANR	8866073	Symbol	byte_count_one_bits		8865781						
ANR	8866074	Symbol	* log2_string_data_quantum		8865781						
ANR	8866075	Symbol	offset		8865781						
ANR	8866076	Symbol	* bitp		8865781						
ANR	8866077	Symbol	log2_string_data_quantum		8865781						
ANR	8866078	Symbol	cp		8865781						
ANR	8866079	Symbol	bitp		8865781						
ANR	8866080	Symbol	sptr		8865781						
ANR	8866081	Symbol	ptr		8865781						
ANR	8866082	Symbol	cp -> sdest		8865781						
ANR	8866083	Symbol	* cp		8865781						
ANR	8866084	Symbol	sptr -> size		8865781						
ANR	8866085	Symbol	* sptr		8865781						
ANR	8866086	Symbol	gc_locate		8865781						
ANR	8866087	Symbol	* offset		8865781						
ANR	8866088	Symbol	byt		8865781						
ANR	8866089	Symbol	cp -> sbase		8865781						
ANR	8866090	Symbol	cp -> smark		8865781						
ANR	8866091	Function	igc_reloc_const_string	327:0:10851:11062							
ANR	8866092	FunctionDef	"igc_reloc_const_string (gs_const_string * sptr , gc_state_t * gcst)"		8866091	0					
ANR	8866093	CompoundStatement		329:0:10922:11062	8866091	0					
ANR	8866094	ExpressionStatement	"igc_reloc_string ( ( gs_string * ) sptr , gcst )"	331:4:11018:11060	8866091	0	True				
ANR	8866095	CallExpression	"igc_reloc_string ( ( gs_string * ) sptr , gcst )"		8866091	0					
ANR	8866096	Callee	igc_reloc_string		8866091	0					
ANR	8866097	Identifier	igc_reloc_string		8866091	0					
ANR	8866098	ArgumentList	( gs_string * ) sptr		8866091	1					
ANR	8866099	Argument	( gs_string * ) sptr		8866091	0					
ANR	8866100	CastExpression	( gs_string * ) sptr		8866091	0					
ANR	8866101	CastTarget	gs_string *		8866091	0					
ANR	8866102	Identifier	sptr		8866091	1					
ANR	8866103	Argument	gcst		8866091	1					
ANR	8866104	Identifier	gcst		8866091	0					
ANR	8866105	ReturnType	void		8866091	1					
ANR	8866106	Identifier	igc_reloc_const_string		8866091	2					
ANR	8866107	ParameterList	"gs_const_string * sptr , gc_state_t * gcst"		8866091	3					
ANR	8866108	Parameter	gs_const_string * sptr	328:23:10879:10900	8866091	0	True				
ANR	8866109	ParameterType	gs_const_string *		8866091	0					
ANR	8866110	Identifier	sptr		8866091	1					
ANR	8866111	Parameter	gc_state_t * gcst	328:47:10903:10919	8866091	1	True				
ANR	8866112	ParameterType	gc_state_t *		8866091	0					
ANR	8866113	Identifier	gcst		8866091	1					
ANR	8866114	CFGEntryNode	ENTRY		8866091		True				
ANR	8866115	CFGExitNode	EXIT		8866091		True				
ANR	8866116	Symbol	gcst		8866091						
ANR	8866117	Symbol	sptr		8866091						
ANR	8866118	Function	igc_reloc_param_string	333:0:11064:11296							
ANR	8866119	FunctionDef	"igc_reloc_param_string (gs_param_string * sptr , gc_state_t * gcst)"		8866118	0					
ANR	8866120	CompoundStatement		335:0:11135:11296	8866118	0					
ANR	8866121	IfStatement	if ( ! sptr -> persistent )		8866118	0					
ANR	8866122	Condition	! sptr -> persistent	336:8:11145:11161	8866118	0	True				
ANR	8866123	UnaryOperationExpression	! sptr -> persistent		8866118	0					
ANR	8866124	UnaryOperator	!		8866118	0					
ANR	8866125	PtrMemberAccess	sptr -> persistent		8866118	1					
ANR	8866126	Identifier	sptr		8866118	0					
ANR	8866127	Identifier	persistent		8866118	1					
ANR	8866128	CompoundStatement		2:27:28:28	8866118	1					
ANR	8866129	ExpressionStatement	"igc_reloc_string ( ( gs_string * ) sptr , gcst )"	338:8:11247:11288	8866118	0	True				
ANR	8866130	CallExpression	"igc_reloc_string ( ( gs_string * ) sptr , gcst )"		8866118	0					
ANR	8866131	Callee	igc_reloc_string		8866118	0					
ANR	8866132	Identifier	igc_reloc_string		8866118	0					
ANR	8866133	ArgumentList	( gs_string * ) sptr		8866118	1					
ANR	8866134	Argument	( gs_string * ) sptr		8866118	0					
ANR	8866135	CastExpression	( gs_string * ) sptr		8866118	0					
ANR	8866136	CastTarget	gs_string *		8866118	0					
ANR	8866137	Identifier	sptr		8866118	1					
ANR	8866138	Argument	gcst		8866118	1					
ANR	8866139	Identifier	gcst		8866118	0					
ANR	8866140	ReturnType	void		8866118	1					
ANR	8866141	Identifier	igc_reloc_param_string		8866118	2					
ANR	8866142	ParameterList	"gs_param_string * sptr , gc_state_t * gcst"		8866118	3					
ANR	8866143	Parameter	gs_param_string * sptr	334:23:11092:11113	8866118	0	True				
ANR	8866144	ParameterType	gs_param_string *		8866118	0					
ANR	8866145	Identifier	sptr		8866118	1					
ANR	8866146	Parameter	gc_state_t * gcst	334:47:11116:11132	8866118	1	True				
ANR	8866147	ParameterType	gc_state_t *		8866118	0					
ANR	8866148	Identifier	gcst		8866118	1					
ANR	8866149	CFGEntryNode	ENTRY		8866118		True				
ANR	8866150	CFGExitNode	EXIT		8866118		True				
ANR	8866151	Symbol	sptr -> persistent		8866118						
ANR	8866152	Symbol	* sptr		8866118						
ANR	8866153	Symbol	gcst		8866118						
ANR	8866154	Symbol	sptr		8866118						
ANR	8866155	Function	gc_strings_compact	343:0:11337:14642							
ANR	8866156	FunctionDef	"gc_strings_compact (clump_t * cp , const gs_memory_t * mem)"		8866155	0					
ANR	8866157	CompoundStatement		345:0:11399:14642	8866155	0					
ANR	8866158	IfStatement	if ( cp -> smark != 0 )		8866155	0					
ANR	8866159	Condition	cp -> smark != 0	346:8:11409:11422	8866155	0	True				
ANR	8866160	EqualityExpression	cp -> smark != 0		8866155	0		!=			
ANR	8866161	PtrMemberAccess	cp -> smark		8866155	0					
ANR	8866162	Identifier	cp		8866155	0					
ANR	8866163	Identifier	smark		8866155	1					
ANR	8866164	PrimaryExpression	0		8866155	1					
ANR	8866165	CompoundStatement		7:8:149:192	8866155	1					
ANR	8866166	IdentifierDeclStatement	byte * hi = cp -> climit ;	347:8:11435:11456	8866155	0	True				
ANR	8866167	IdentifierDecl	* hi = cp -> climit		8866155	0					
ANR	8866168	IdentifierDeclType	byte *		8866155	0					
ANR	8866169	Identifier	hi		8866155	1					
ANR	8866170	AssignmentExpression	* hi = cp -> climit		8866155	2		=			
ANR	8866171	Identifier	hi		8866155	0					
ANR	8866172	PtrMemberAccess	cp -> climit		8866155	1					
ANR	8866173	Identifier	cp		8866155	0					
ANR	8866174	Identifier	climit		8866155	1					
ANR	8866175	IdentifierDeclStatement	byte * lo = cp -> ctop ;	348:8:11466:11485	8866155	1	True				
ANR	8866176	IdentifierDecl	* lo = cp -> ctop		8866155	0					
ANR	8866177	IdentifierDeclType	byte *		8866155	0					
ANR	8866178	Identifier	lo		8866155	1					
ANR	8866179	AssignmentExpression	* lo = cp -> ctop		8866155	2		=			
ANR	8866180	Identifier	lo		8866155	0					
ANR	8866181	PtrMemberAccess	cp -> ctop		8866155	1					
ANR	8866182	Identifier	cp		8866155	0					
ANR	8866183	Identifier	ctop		8866155	1					
ANR	8866184	IdentifierDeclStatement	const byte * from = hi ;	349:8:11495:11516	8866155	2	True				
ANR	8866185	IdentifierDecl	* from = hi		8866155	0					
ANR	8866186	IdentifierDeclType	const byte *		8866155	0					
ANR	8866187	Identifier	from		8866155	1					
ANR	8866188	AssignmentExpression	* from = hi		8866155	2		=			
ANR	8866189	Identifier	hi		8866155	0					
ANR	8866190	Identifier	hi		8866155	1					
ANR	8866191	IdentifierDeclStatement	byte * to = hi ;	350:8:11526:11539	8866155	3	True				
ANR	8866192	IdentifierDecl	* to = hi		8866155	0					
ANR	8866193	IdentifierDeclType	byte *		8866155	0					
ANR	8866194	Identifier	to		8866155	1					
ANR	8866195	AssignmentExpression	* to = hi		8866155	2		=			
ANR	8866196	Identifier	hi		8866155	0					
ANR	8866197	Identifier	hi		8866155	1					
ANR	8866198	IdentifierDeclStatement	const byte * bp = cp -> smark + cp -> smark_size ;	351:8:11549:11592	8866155	4	True				
ANR	8866199	IdentifierDecl	* bp = cp -> smark + cp -> smark_size		8866155	0					
ANR	8866200	IdentifierDeclType	const byte *		8866155	0					
ANR	8866201	Identifier	bp		8866155	1					
ANR	8866202	AssignmentExpression	* bp = cp -> smark + cp -> smark_size		8866155	2		=			
ANR	8866203	Identifier	bp		8866155	0					
ANR	8866204	AdditiveExpression	cp -> smark + cp -> smark_size		8866155	1		+			
ANR	8866205	PtrMemberAccess	cp -> smark		8866155	0					
ANR	8866206	Identifier	cp		8866155	0					
ANR	8866207	Identifier	smark		8866155	1					
ANR	8866208	PtrMemberAccess	cp -> smark_size		8866155	1					
ANR	8866209	Identifier	cp		8866155	0					
ANR	8866210	Identifier	smark_size		8866155	1					
ANR	8866211	IfStatement	if ( gs_debug_c ( '4' ) || gs_debug_c ( '5' ) )		8866155	5					
ANR	8866212	Condition	gs_debug_c ( '4' ) || gs_debug_c ( '5' )	354:12:11620:11653	8866155	0	True				
ANR	8866213	OrExpression	gs_debug_c ( '4' ) || gs_debug_c ( '5' )		8866155	0		||			
ANR	8866214	CallExpression	gs_debug_c ( '4' )		8866155	0					
ANR	8866215	Callee	gs_debug_c		8866155	0					
ANR	8866216	Identifier	gs_debug_c		8866155	0					
ANR	8866217	ArgumentList	'4'		8866155	1					
ANR	8866218	Argument	'4'		8866155	0					
ANR	8866219	PrimaryExpression	'4'		8866155	0					
ANR	8866220	CallExpression	gs_debug_c ( '5' )		8866155	1					
ANR	8866221	Callee	gs_debug_c		8866155	0					
ANR	8866222	Identifier	gs_debug_c		8866155	0					
ANR	8866223	ArgumentList	'5'		8866155	1					
ANR	8866224	Argument	'5'		8866155	0					
ANR	8866225	PrimaryExpression	'5'		8866155	0					
ANR	8866226	CompoundStatement		13:12:363:412	8866155	1					
ANR	8866227	IdentifierDeclStatement	byte * base = cp -> sbase ;	355:12:11670:11692	8866155	0	True				
ANR	8866228	IdentifierDecl	* base = cp -> sbase		8866155	0					
ANR	8866229	IdentifierDeclType	byte *		8866155	0					
ANR	8866230	Identifier	base		8866155	1					
ANR	8866231	AssignmentExpression	* base = cp -> sbase		8866155	2		=			
ANR	8866232	Identifier	base		8866155	0					
ANR	8866233	PtrMemberAccess	cp -> sbase		8866155	1					
ANR	8866234	Identifier	cp		8866155	0					
ANR	8866235	Identifier	sbase		8866155	1					
ANR	8866236	IdentifierDeclStatement	uint i = ( lo - base ) & - string_data_quantum ;	356:12:11706:11749	8866155	1	True				
ANR	8866237	IdentifierDecl	i = ( lo - base ) & - string_data_quantum		8866155	0					
ANR	8866238	IdentifierDeclType	uint		8866155	0					
ANR	8866239	Identifier	i		8866155	1					
ANR	8866240	AssignmentExpression	i = ( lo - base ) & - string_data_quantum		8866155	2		=			
ANR	8866241	Identifier	i		8866155	0					
ANR	8866242	BitAndExpression	( lo - base ) & - string_data_quantum		8866155	1		&			
ANR	8866243	AdditiveExpression	lo - base		8866155	0		-			
ANR	8866244	Identifier	lo		8866155	0					
ANR	8866245	Identifier	base		8866155	1					
ANR	8866246	UnaryOperationExpression	- string_data_quantum		8866155	1					
ANR	8866247	UnaryOperator	-		8866155	0					
ANR	8866248	Identifier	string_data_quantum		8866155	1					
ANR	8866249	IdentifierDeclStatement	"uint n = ROUND_UP ( hi - base , string_data_quantum ) ;"	357:12:11763:11812	8866155	2	True				
ANR	8866250	IdentifierDecl	"n = ROUND_UP ( hi - base , string_data_quantum )"		8866155	0					
ANR	8866251	IdentifierDeclType	uint		8866155	0					
ANR	8866252	Identifier	n		8866155	1					
ANR	8866253	AssignmentExpression	"n = ROUND_UP ( hi - base , string_data_quantum )"		8866155	2		=			
ANR	8866254	Identifier	n		8866155	0					
ANR	8866255	CallExpression	"ROUND_UP ( hi - base , string_data_quantum )"		8866155	1					
ANR	8866256	Callee	ROUND_UP		8866155	0					
ANR	8866257	Identifier	ROUND_UP		8866155	0					
ANR	8866258	ArgumentList	hi - base		8866155	1					
ANR	8866259	Argument	hi - base		8866155	0					
ANR	8866260	AdditiveExpression	hi - base		8866155	0		-			
ANR	8866261	Identifier	hi		8866155	0					
ANR	8866262	Identifier	base		8866155	1					
ANR	8866263	Argument	string_data_quantum		8866155	1					
ANR	8866264	Identifier	string_data_quantum		8866155	0					
ANR	8866265	Statement	define	359:1:11816:11821	8866155	3	True				
ANR	8866266	Statement	R	359:8:11823:11823	8866155	4	True				
ANR	8866267	Statement	16	359:10:11825:11826	8866155	5	True				
ANR	8866268	ForStatement	for ( ; i < n ; i += R )		8866155	6					
ANR	8866269	Condition	i < n	360:19:11847:11851	8866155	0	True				
ANR	8866270	RelationalExpression	i < n		8866155	0		<			
ANR	8866271	Identifier	i		8866155	0					
ANR	8866272	Identifier	n		8866155	1					
ANR	8866273	AssignmentExpression	i += R	360:26:11854:11859	8866155	1	True	+=			
ANR	8866274	Identifier	i		8866155	0					
ANR	8866275	Identifier	R		8866155	1					
ANR	8866276	CompoundStatement		17:16:480:486	8866155	2					
ANR	8866277	IdentifierDeclStatement	uint j ;	361:16:11880:11886	8866155	0	True				
ANR	8866278	IdentifierDecl	j		8866155	0					
ANR	8866279	IdentifierDeclType	uint		8866155	0					
ANR	8866280	Identifier	j		8866155	1					
ANR	8866281	ExpressionStatement	"dmlprintf1 ( mem , ""[4]0x%lx: "" , ( ulong ) ( base + i ) )"	363:16:11905:11954	8866155	1	True				
ANR	8866282	CallExpression	"dmlprintf1 ( mem , ""[4]0x%lx: "" , ( ulong ) ( base + i ) )"		8866155	0					
ANR	8866283	Callee	dmlprintf1		8866155	0					
ANR	8866284	Identifier	dmlprintf1		8866155	0					
ANR	8866285	ArgumentList	mem		8866155	1					
ANR	8866286	Argument	mem		8866155	0					
ANR	8866287	Identifier	mem		8866155	0					
ANR	8866288	Argument	"""[4]0x%lx: """		8866155	1					
ANR	8866289	PrimaryExpression	"""[4]0x%lx: """		8866155	0					
ANR	8866290	Argument	( ulong ) ( base + i )		8866155	2					
ANR	8866291	CastExpression	( ulong ) ( base + i )		8866155	0					
ANR	8866292	CastTarget	ulong		8866155	0					
ANR	8866293	AdditiveExpression	base + i		8866155	1		+			
ANR	8866294	Identifier	base		8866155	0					
ANR	8866295	Identifier	i		8866155	1					
ANR	8866296	ForStatement	for ( j = i ; j < i + R ; j ++ )		8866155	2					
ANR	8866297	ForInit	j = i ;	364:21:11977:11982	8866155	0	True				
ANR	8866298	AssignmentExpression	j = i		8866155	0		=			
ANR	8866299	Identifier	j		8866155	0					
ANR	8866300	Identifier	i		8866155	1					
ANR	8866301	Condition	j < i + R	364:28:11984:11992	8866155	1	True				
ANR	8866302	RelationalExpression	j < i + R		8866155	0		<			
ANR	8866303	Identifier	j		8866155	0					
ANR	8866304	AdditiveExpression	i + R		8866155	1		+			
ANR	8866305	Identifier	i		8866155	0					
ANR	8866306	Identifier	R		8866155	1					
ANR	8866307	PostIncDecOperationExpression	j ++	364:39:11995:11997	8866155	2	True				
ANR	8866308	Identifier	j		8866155	0					
ANR	8866309	IncDec	++		8866155	1					
ANR	8866310	CompoundStatement		21:20:622:639	8866155	3					
ANR	8866311	IdentifierDeclStatement	byte ch = base [ j ] ;	365:20:12022:12039	8866155	0	True				
ANR	8866312	IdentifierDecl	ch = base [ j ]		8866155	0					
ANR	8866313	IdentifierDeclType	byte		8866155	0					
ANR	8866314	Identifier	ch		8866155	1					
ANR	8866315	AssignmentExpression	ch = base [ j ]		8866155	2		=			
ANR	8866316	Identifier	ch		8866155	0					
ANR	8866317	ArrayIndexing	base [ j ]		8866155	1					
ANR	8866318	Identifier	base		8866155	0					
ANR	8866319	Identifier	j		8866155	1					
ANR	8866320	IfStatement	if ( ch <= 31 )		8866155	1					
ANR	8866321	Condition	ch <= 31	367:24:12066:12073	8866155	0	True				
ANR	8866322	RelationalExpression	ch <= 31		8866155	0		<=			
ANR	8866323	Identifier	ch		8866155	0					
ANR	8866324	PrimaryExpression	31		8866155	1					
ANR	8866325	CompoundStatement		23:34:676:676	8866155	1					
ANR	8866326	ExpressionStatement	"dmputc ( mem , '^' )"	368:24:12102:12118	8866155	0	True				
ANR	8866327	CallExpression	"dmputc ( mem , '^' )"		8866155	0					
ANR	8866328	Callee	dmputc		8866155	0					
ANR	8866329	Identifier	dmputc		8866155	0					
ANR	8866330	ArgumentList	mem		8866155	1					
ANR	8866331	Argument	mem		8866155	0					
ANR	8866332	Identifier	mem		8866155	0					
ANR	8866333	Argument	'^'		8866155	1					
ANR	8866334	PrimaryExpression	'^'		8866155	0					
ANR	8866335	ExpressionStatement	"dmputc ( mem , ch + 0100 )"	369:24:12144:12166	8866155	1	True				
ANR	8866336	CallExpression	"dmputc ( mem , ch + 0100 )"		8866155	0					
ANR	8866337	Callee	dmputc		8866155	0					
ANR	8866338	Identifier	dmputc		8866155	0					
ANR	8866339	ArgumentList	mem		8866155	1					
ANR	8866340	Argument	mem		8866155	0					
ANR	8866341	Identifier	mem		8866155	0					
ANR	8866342	Argument	ch + 0100		8866155	1					
ANR	8866343	AdditiveExpression	ch + 0100		8866155	0		+			
ANR	8866344	Identifier	ch		8866155	0					
ANR	8866345	PrimaryExpression	0100		8866155	1					
ANR	8866346	ElseStatement	else		8866155	0					
ANR	8866347	ExpressionStatement	"dmputc ( mem , ch )"	371:24:12219:12234	8866155	0	True				
ANR	8866348	CallExpression	"dmputc ( mem , ch )"		8866155	0					
ANR	8866349	Callee	dmputc		8866155	0					
ANR	8866350	Identifier	dmputc		8866155	0					
ANR	8866351	ArgumentList	mem		8866155	1					
ANR	8866352	Argument	mem		8866155	0					
ANR	8866353	Identifier	mem		8866155	0					
ANR	8866354	Argument	ch		8866155	1					
ANR	8866355	Identifier	ch		8866155	0					
ANR	8866356	ExpressionStatement	"dmputc ( mem , ' ' )"	373:16:12270:12286	8866155	3	True				
ANR	8866357	CallExpression	"dmputc ( mem , ' ' )"		8866155	0					
ANR	8866358	Callee	dmputc		8866155	0					
ANR	8866359	Identifier	dmputc		8866155	0					
ANR	8866360	ArgumentList	mem		8866155	1					
ANR	8866361	Argument	mem		8866155	0					
ANR	8866362	Identifier	mem		8866155	0					
ANR	8866363	Argument	' '		8866155	1					
ANR	8866364	PrimaryExpression	' '		8866155	0					
ANR	8866365	ForStatement	for ( j = i ; j < i + R ; j ++ )		8866155	4					
ANR	8866366	ForInit	j = i ;	374:21:12309:12314	8866155	0	True				
ANR	8866367	AssignmentExpression	j = i		8866155	0		=			
ANR	8866368	Identifier	j		8866155	0					
ANR	8866369	Identifier	i		8866155	1					
ANR	8866370	Condition	j < i + R	374:28:12316:12324	8866155	1	True				
ANR	8866371	RelationalExpression	j < i + R		8866155	0		<			
ANR	8866372	Identifier	j		8866155	0					
ANR	8866373	AdditiveExpression	i + R		8866155	1		+			
ANR	8866374	Identifier	i		8866155	0					
ANR	8866375	Identifier	R		8866155	1					
ANR	8866376	PostIncDecOperationExpression	j ++	374:39:12327:12329	8866155	2	True				
ANR	8866377	Identifier	j		8866155	0					
ANR	8866378	IncDec	++		8866155	1					
ANR	8866379	ExpressionStatement	"dmputc ( mem , ( cp -> smark [ j >> 3 ] & ( 1 << ( j & 7 ) ) ? '+' : '.' ) )"	375:20:12352:12440	8866155	3	True				
ANR	8866380	CallExpression	"dmputc ( mem , ( cp -> smark [ j >> 3 ] & ( 1 << ( j & 7 ) ) ? '+' : '.' ) )"		8866155	0					
ANR	8866381	Callee	dmputc		8866155	0					
ANR	8866382	Identifier	dmputc		8866155	0					
ANR	8866383	ArgumentList	mem		8866155	1					
ANR	8866384	Argument	mem		8866155	0					
ANR	8866385	Identifier	mem		8866155	0					
ANR	8866386	Argument	cp -> smark [ j >> 3 ] & ( 1 << ( j & 7 ) ) ? '+' : '.'		8866155	1					
ANR	8866387	ConditionalExpression	cp -> smark [ j >> 3 ] & ( 1 << ( j & 7 ) ) ? '+' : '.'		8866155	0					
ANR	8866388	Condition	cp -> smark [ j >> 3 ] & ( 1 << ( j & 7 ) )		8866155	0					
ANR	8866389	BitAndExpression	cp -> smark [ j >> 3 ] & ( 1 << ( j & 7 ) )		8866155	0		&			
ANR	8866390	ArrayIndexing	cp -> smark [ j >> 3 ]		8866155	0					
ANR	8866391	PtrMemberAccess	cp -> smark		8866155	0					
ANR	8866392	Identifier	cp		8866155	0					
ANR	8866393	Identifier	smark		8866155	1					
ANR	8866394	ShiftExpression	j >> 3		8866155	1		>>			
ANR	8866395	Identifier	j		8866155	0					
ANR	8866396	PrimaryExpression	3		8866155	1					
ANR	8866397	ShiftExpression	1 << ( j & 7 )		8866155	1		<<			
ANR	8866398	PrimaryExpression	1		8866155	0					
ANR	8866399	BitAndExpression	j & 7		8866155	1		&			
ANR	8866400	Identifier	j		8866155	0					
ANR	8866401	PrimaryExpression	7		8866155	1					
ANR	8866402	PrimaryExpression	'+'		8866155	1					
ANR	8866403	PrimaryExpression	'.'		8866155	2					
ANR	8866404	Statement	undef	377:1:12443:12447	8866155	5	True				
ANR	8866405	Statement	R	377:7:12449:12449	8866155	6	True				
ANR	8866406	IfStatement	if ( ! ( i & ( string_data_quantum - 1 ) ) )		8866155	7					
ANR	8866407	Condition	! ( i & ( string_data_quantum - 1 ) )	378:20:12471:12502	8866155	0	True				
ANR	8866408	UnaryOperationExpression	! ( i & ( string_data_quantum - 1 ) )		8866155	0					
ANR	8866409	UnaryOperator	!		8866155	0					
ANR	8866410	BitAndExpression	i & ( string_data_quantum - 1 )		8866155	1		&			
ANR	8866411	Identifier	i		8866155	0					
ANR	8866412	AdditiveExpression	string_data_quantum - 1		8866155	1		-			
ANR	8866413	Identifier	string_data_quantum		8866155	0					
ANR	8866414	PrimaryExpression	1		8866155	1					
ANR	8866415	ExpressionStatement	"dmprintf1 ( mem , "" %u"" , cp -> sreloc [ i >> log2_string_data_quantum ] )"	379:20:12525:12589	8866155	1	True				
ANR	8866416	CallExpression	"dmprintf1 ( mem , "" %u"" , cp -> sreloc [ i >> log2_string_data_quantum ] )"		8866155	0					
ANR	8866417	Callee	dmprintf1		8866155	0					
ANR	8866418	Identifier	dmprintf1		8866155	0					
ANR	8866419	ArgumentList	mem		8866155	1					
ANR	8866420	Argument	mem		8866155	0					
ANR	8866421	Identifier	mem		8866155	0					
ANR	8866422	Argument	""" %u"""		8866155	1					
ANR	8866423	PrimaryExpression	""" %u"""		8866155	0					
ANR	8866424	Argument	cp -> sreloc [ i >> log2_string_data_quantum ]		8866155	2					
ANR	8866425	ArrayIndexing	cp -> sreloc [ i >> log2_string_data_quantum ]		8866155	0					
ANR	8866426	PtrMemberAccess	cp -> sreloc		8866155	0					
ANR	8866427	Identifier	cp		8866155	0					
ANR	8866428	Identifier	sreloc		8866155	1					
ANR	8866429	ShiftExpression	i >> log2_string_data_quantum		8866155	1		>>			
ANR	8866430	Identifier	i		8866155	0					
ANR	8866431	Identifier	log2_string_data_quantum		8866155	1					
ANR	8866432	ExpressionStatement	"dmputc ( mem , '\\n' )"	380:16:12607:12624	8866155	8	True				
ANR	8866433	CallExpression	"dmputc ( mem , '\\n' )"		8866155	0					
ANR	8866434	Callee	dmputc		8866155	0					
ANR	8866435	Identifier	dmputc		8866155	0					
ANR	8866436	ArgumentList	mem		8866155	1					
ANR	8866437	Argument	mem		8866155	0					
ANR	8866438	Identifier	mem		8866155	0					
ANR	8866439	Argument	'\\n'		8866155	1					
ANR	8866440	PrimaryExpression	'\\n'		8866155	0					
ANR	8866441	CompoundStatement		46:12:1473:1508	8866155	6					
ANR	8866442	IdentifierDeclStatement	const bword * wp = ( const bword * ) bp ;	390:12:12873:12908	8866155	0	True				
ANR	8866443	IdentifierDecl	* wp = ( const bword * ) bp		8866155	0					
ANR	8866444	IdentifierDeclType	const bword *		8866155	0					
ANR	8866445	Identifier	wp		8866155	1					
ANR	8866446	AssignmentExpression	* wp = ( const bword * ) bp		8866155	2		=			
ANR	8866447	Identifier	wp		8866155	0					
ANR	8866448	CastExpression	( const bword * ) bp		8866155	1					
ANR	8866449	CastTarget	const bword *		8866155	0					
ANR	8866450	Identifier	bp		8866155	1					
ANR	8866451	WhileStatement	while ( to > lo && wp [ - 1 ] == bword_1s )		8866155	1					
ANR	8866452	Condition	to > lo && wp [ - 1 ] == bword_1s	392:19:12930:12958	8866155	0	True				
ANR	8866453	AndExpression	to > lo && wp [ - 1 ] == bword_1s		8866155	0		&&			
ANR	8866454	RelationalExpression	to > lo		8866155	0		>			
ANR	8866455	Identifier	to		8866155	0					
ANR	8866456	Identifier	lo		8866155	1					
ANR	8866457	EqualityExpression	wp [ - 1 ] == bword_1s		8866155	1		==			
ANR	8866458	ArrayIndexing	wp [ - 1 ]		8866155	0					
ANR	8866459	Identifier	wp		8866155	0					
ANR	8866460	UnaryOperationExpression	- 1		8866155	1					
ANR	8866461	UnaryOperator	-		8866155	0					
ANR	8866462	PrimaryExpression	1		8866155	1					
ANR	8866463	Identifier	bword_1s		8866155	1					
ANR	8866464	ExpressionStatement	"to -= bword_bits , -- wp"	393:16:12977:12999	8866155	1	True				
ANR	8866465	Expression	"to -= bword_bits , -- wp"		8866155	0					
ANR	8866466	AssignmentExpression	to -= bword_bits		8866155	0		-=			
ANR	8866467	Identifier	to		8866155	0					
ANR	8866468	Identifier	bword_bits		8866155	1					
ANR	8866469	UnaryExpression	-- wp		8866155	1					
ANR	8866470	IncDec	--		8866155	0					
ANR	8866471	Identifier	wp		8866155	1					
ANR	8866472	ExpressionStatement	bp = ( const byte * ) wp	394:12:13013:13034	8866155	2	True				
ANR	8866473	AssignmentExpression	bp = ( const byte * ) wp		8866155	0		=			
ANR	8866474	Identifier	bp		8866155	0					
ANR	8866475	CastExpression	( const byte * ) wp		8866155	1					
ANR	8866476	CastTarget	const byte *		8866155	0					
ANR	8866477	Identifier	wp		8866155	1					
ANR	8866478	WhileStatement	while ( to > lo && bp [ - 1 ] == 0xff )		8866155	3					
ANR	8866479	Condition	to > lo && bp [ - 1 ] == 0xff	395:19:13055:13079	8866155	0	True				
ANR	8866480	AndExpression	to > lo && bp [ - 1 ] == 0xff		8866155	0		&&			
ANR	8866481	RelationalExpression	to > lo		8866155	0		>			
ANR	8866482	Identifier	to		8866155	0					
ANR	8866483	Identifier	lo		8866155	1					
ANR	8866484	EqualityExpression	bp [ - 1 ] == 0xff		8866155	1		==			
ANR	8866485	ArrayIndexing	bp [ - 1 ]		8866155	0					
ANR	8866486	Identifier	bp		8866155	0					
ANR	8866487	UnaryOperationExpression	- 1		8866155	1					
ANR	8866488	UnaryOperator	-		8866155	0					
ANR	8866489	PrimaryExpression	1		8866155	1					
ANR	8866490	PrimaryExpression	0xff		8866155	1					
ANR	8866491	ExpressionStatement	"to -= 8 , -- bp"	396:16:13098:13111	8866155	1	True				
ANR	8866492	Expression	"to -= 8 , -- bp"		8866155	0					
ANR	8866493	AssignmentExpression	to -= 8		8866155	0		-=			
ANR	8866494	Identifier	to		8866155	0					
ANR	8866495	PrimaryExpression	8		8866155	1					
ANR	8866496	UnaryExpression	-- bp		8866155	1					
ANR	8866497	IncDec	--		8866155	0					
ANR	8866498	Identifier	bp		8866155	1					
ANR	8866499	ExpressionStatement	from = to	398:8:13131:13140	8866155	7	True				
ANR	8866500	AssignmentExpression	from = to		8866155	0		=			
ANR	8866501	Identifier	from		8866155	0					
ANR	8866502	Identifier	to		8866155	1					
ANR	8866503	WhileStatement	while ( from > lo )		8866155	8					
ANR	8866504	Condition	from > lo	400:15:13158:13166	8866155	0	True				
ANR	8866505	RelationalExpression	from > lo		8866155	0		>			
ANR	8866506	Identifier	from		8866155	0					
ANR	8866507	Identifier	lo		8866155	1					
ANR	8866508	CompoundStatement		57:12:1783:1797	8866155	1					
ANR	8866509	IdentifierDeclStatement	byte b = * -- bp ;	401:12:13183:13197	8866155	0	True				
ANR	8866510	IdentifierDecl	b = * -- bp		8866155	0					
ANR	8866511	IdentifierDeclType	byte		8866155	0					
ANR	8866512	Identifier	b		8866155	1					
ANR	8866513	AssignmentExpression	b = * -- bp		8866155	2		=			
ANR	8866514	Identifier	b		8866155	0					
ANR	8866515	UnaryOperationExpression	* -- bp		8866155	1					
ANR	8866516	UnaryOperator	*		8866155	0					
ANR	8866517	UnaryExpression	-- bp		8866155	1					
ANR	8866518	IncDec	--		8866155	0					
ANR	8866519	Identifier	bp		8866155	1					
ANR	8866520	ExpressionStatement	from -= 8	403:12:13212:13221	8866155	1	True				
ANR	8866521	AssignmentExpression	from -= 8		8866155	0		-=			
ANR	8866522	Identifier	from		8866155	0					
ANR	8866523	PrimaryExpression	8		8866155	1					
ANR	8866524	SwitchStatement	switch ( b )		8866155	2					
ANR	8866525	Condition	b	404:20:13243:13243	8866155	0	True				
ANR	8866526	Identifier	b		8866155	0					
ANR	8866527	CompoundStatement		60:23:1846:1846	8866155	1					
ANR	8866528	Label	case 0xff :	405:16:13264:13273	8866155	0	True				
ANR	8866529	ExpressionStatement	to -= 8	406:20:13295:13302	8866155	1	True				
ANR	8866530	AssignmentExpression	to -= 8		8866155	0		-=			
ANR	8866531	Identifier	to		8866155	0					
ANR	8866532	PrimaryExpression	8		8866155	1					
ANR	8866533	ExpressionStatement	to [ 7 ] = from [ 7 ]	411:20:13492:13507	8866155	2	True				
ANR	8866534	AssignmentExpression	to [ 7 ] = from [ 7 ]		8866155	0		=			
ANR	8866535	ArrayIndexing	to [ 7 ]		8866155	0					
ANR	8866536	Identifier	to		8866155	0					
ANR	8866537	PrimaryExpression	7		8866155	1					
ANR	8866538	ArrayIndexing	from [ 7 ]		8866155	1					
ANR	8866539	Identifier	from		8866155	0					
ANR	8866540	PrimaryExpression	7		8866155	1					
ANR	8866541	ExpressionStatement	to [ 6 ] = from [ 6 ]	412:20:13529:13544	8866155	3	True				
ANR	8866542	AssignmentExpression	to [ 6 ] = from [ 6 ]		8866155	0		=			
ANR	8866543	ArrayIndexing	to [ 6 ]		8866155	0					
ANR	8866544	Identifier	to		8866155	0					
ANR	8866545	PrimaryExpression	6		8866155	1					
ANR	8866546	ArrayIndexing	from [ 6 ]		8866155	1					
ANR	8866547	Identifier	from		8866155	0					
ANR	8866548	PrimaryExpression	6		8866155	1					
ANR	8866549	ExpressionStatement	to [ 5 ] = from [ 5 ]	413:20:13566:13581	8866155	4	True				
ANR	8866550	AssignmentExpression	to [ 5 ] = from [ 5 ]		8866155	0		=			
ANR	8866551	ArrayIndexing	to [ 5 ]		8866155	0					
ANR	8866552	Identifier	to		8866155	0					
ANR	8866553	PrimaryExpression	5		8866155	1					
ANR	8866554	ArrayIndexing	from [ 5 ]		8866155	1					
ANR	8866555	Identifier	from		8866155	0					
ANR	8866556	PrimaryExpression	5		8866155	1					
ANR	8866557	ExpressionStatement	to [ 4 ] = from [ 4 ]	414:20:13603:13618	8866155	5	True				
ANR	8866558	AssignmentExpression	to [ 4 ] = from [ 4 ]		8866155	0		=			
ANR	8866559	ArrayIndexing	to [ 4 ]		8866155	0					
ANR	8866560	Identifier	to		8866155	0					
ANR	8866561	PrimaryExpression	4		8866155	1					
ANR	8866562	ArrayIndexing	from [ 4 ]		8866155	1					
ANR	8866563	Identifier	from		8866155	0					
ANR	8866564	PrimaryExpression	4		8866155	1					
ANR	8866565	ExpressionStatement	to [ 3 ] = from [ 3 ]	415:20:13640:13655	8866155	6	True				
ANR	8866566	AssignmentExpression	to [ 3 ] = from [ 3 ]		8866155	0		=			
ANR	8866567	ArrayIndexing	to [ 3 ]		8866155	0					
ANR	8866568	Identifier	to		8866155	0					
ANR	8866569	PrimaryExpression	3		8866155	1					
ANR	8866570	ArrayIndexing	from [ 3 ]		8866155	1					
ANR	8866571	Identifier	from		8866155	0					
ANR	8866572	PrimaryExpression	3		8866155	1					
ANR	8866573	ExpressionStatement	to [ 2 ] = from [ 2 ]	416:20:13677:13692	8866155	7	True				
ANR	8866574	AssignmentExpression	to [ 2 ] = from [ 2 ]		8866155	0		=			
ANR	8866575	ArrayIndexing	to [ 2 ]		8866155	0					
ANR	8866576	Identifier	to		8866155	0					
ANR	8866577	PrimaryExpression	2		8866155	1					
ANR	8866578	ArrayIndexing	from [ 2 ]		8866155	1					
ANR	8866579	Identifier	from		8866155	0					
ANR	8866580	PrimaryExpression	2		8866155	1					
ANR	8866581	ExpressionStatement	to [ 1 ] = from [ 1 ]	417:20:13714:13729	8866155	8	True				
ANR	8866582	AssignmentExpression	to [ 1 ] = from [ 1 ]		8866155	0		=			
ANR	8866583	ArrayIndexing	to [ 1 ]		8866155	0					
ANR	8866584	Identifier	to		8866155	0					
ANR	8866585	PrimaryExpression	1		8866155	1					
ANR	8866586	ArrayIndexing	from [ 1 ]		8866155	1					
ANR	8866587	Identifier	from		8866155	0					
ANR	8866588	PrimaryExpression	1		8866155	1					
ANR	8866589	ExpressionStatement	to [ 0 ] = from [ 0 ]	418:20:13751:13766	8866155	9	True				
ANR	8866590	AssignmentExpression	to [ 0 ] = from [ 0 ]		8866155	0		=			
ANR	8866591	ArrayIndexing	to [ 0 ]		8866155	0					
ANR	8866592	Identifier	to		8866155	0					
ANR	8866593	PrimaryExpression	0		8866155	1					
ANR	8866594	ArrayIndexing	from [ 0 ]		8866155	1					
ANR	8866595	Identifier	from		8866155	0					
ANR	8866596	PrimaryExpression	0		8866155	1					
ANR	8866597	BreakStatement	break ;	419:20:13788:13793	8866155	10	True				
ANR	8866598	Label	default :	420:16:13811:13818	8866155	11	True				
ANR	8866599	Identifier	default		8866155	0					
ANR	8866600	IfStatement	if ( b & 0x80 )		8866155	12					
ANR	8866601	Condition	b & 0x80	421:24:13844:13851	8866155	0	True				
ANR	8866602	BitAndExpression	b & 0x80		8866155	0		&			
ANR	8866603	Identifier	b		8866155	0					
ANR	8866604	PrimaryExpression	0x80		8866155	1					
ANR	8866605	ExpressionStatement	* -- to = from [ 7 ]	422:24:13878:13893	8866155	1	True				
ANR	8866606	AssignmentExpression	* -- to = from [ 7 ]		8866155	0		=			
ANR	8866607	UnaryOperationExpression	* -- to		8866155	0					
ANR	8866608	UnaryOperator	*		8866155	0					
ANR	8866609	UnaryExpression	-- to		8866155	1					
ANR	8866610	IncDec	--		8866155	0					
ANR	8866611	Identifier	to		8866155	1					
ANR	8866612	ArrayIndexing	from [ 7 ]		8866155	1					
ANR	8866613	Identifier	from		8866155	0					
ANR	8866614	PrimaryExpression	7		8866155	1					
ANR	8866615	IfStatement	if ( b & 0x40 )		8866155	13					
ANR	8866616	Condition	b & 0x40	423:24:13919:13926	8866155	0	True				
ANR	8866617	BitAndExpression	b & 0x40		8866155	0		&			
ANR	8866618	Identifier	b		8866155	0					
ANR	8866619	PrimaryExpression	0x40		8866155	1					
ANR	8866620	ExpressionStatement	* -- to = from [ 6 ]	424:24:13953:13968	8866155	1	True				
ANR	8866621	AssignmentExpression	* -- to = from [ 6 ]		8866155	0		=			
ANR	8866622	UnaryOperationExpression	* -- to		8866155	0					
ANR	8866623	UnaryOperator	*		8866155	0					
ANR	8866624	UnaryExpression	-- to		8866155	1					
ANR	8866625	IncDec	--		8866155	0					
ANR	8866626	Identifier	to		8866155	1					
ANR	8866627	ArrayIndexing	from [ 6 ]		8866155	1					
ANR	8866628	Identifier	from		8866155	0					
ANR	8866629	PrimaryExpression	6		8866155	1					
ANR	8866630	IfStatement	if ( b & 0x20 )		8866155	14					
ANR	8866631	Condition	b & 0x20	425:24:13994:14001	8866155	0	True				
ANR	8866632	BitAndExpression	b & 0x20		8866155	0		&			
ANR	8866633	Identifier	b		8866155	0					
ANR	8866634	PrimaryExpression	0x20		8866155	1					
ANR	8866635	ExpressionStatement	* -- to = from [ 5 ]	426:24:14028:14043	8866155	1	True				
ANR	8866636	AssignmentExpression	* -- to = from [ 5 ]		8866155	0		=			
ANR	8866637	UnaryOperationExpression	* -- to		8866155	0					
ANR	8866638	UnaryOperator	*		8866155	0					
ANR	8866639	UnaryExpression	-- to		8866155	1					
ANR	8866640	IncDec	--		8866155	0					
ANR	8866641	Identifier	to		8866155	1					
ANR	8866642	ArrayIndexing	from [ 5 ]		8866155	1					
ANR	8866643	Identifier	from		8866155	0					
ANR	8866644	PrimaryExpression	5		8866155	1					
ANR	8866645	IfStatement	if ( b & 0x10 )		8866155	15					
ANR	8866646	Condition	b & 0x10	427:24:14069:14076	8866155	0	True				
ANR	8866647	BitAndExpression	b & 0x10		8866155	0		&			
ANR	8866648	Identifier	b		8866155	0					
ANR	8866649	PrimaryExpression	0x10		8866155	1					
ANR	8866650	ExpressionStatement	* -- to = from [ 4 ]	428:24:14103:14118	8866155	1	True				
ANR	8866651	AssignmentExpression	* -- to = from [ 4 ]		8866155	0		=			
ANR	8866652	UnaryOperationExpression	* -- to		8866155	0					
ANR	8866653	UnaryOperator	*		8866155	0					
ANR	8866654	UnaryExpression	-- to		8866155	1					
ANR	8866655	IncDec	--		8866155	0					
ANR	8866656	Identifier	to		8866155	1					
ANR	8866657	ArrayIndexing	from [ 4 ]		8866155	1					
ANR	8866658	Identifier	from		8866155	0					
ANR	8866659	PrimaryExpression	4		8866155	1					
ANR	8866660	IfStatement	if ( b & 8 )		8866155	16					
ANR	8866661	Condition	b & 8	429:24:14144:14148	8866155	0	True				
ANR	8866662	BitAndExpression	b & 8		8866155	0		&			
ANR	8866663	Identifier	b		8866155	0					
ANR	8866664	PrimaryExpression	8		8866155	1					
ANR	8866665	ExpressionStatement	* -- to = from [ 3 ]	430:24:14175:14190	8866155	1	True				
ANR	8866666	AssignmentExpression	* -- to = from [ 3 ]		8866155	0		=			
ANR	8866667	UnaryOperationExpression	* -- to		8866155	0					
ANR	8866668	UnaryOperator	*		8866155	0					
ANR	8866669	UnaryExpression	-- to		8866155	1					
ANR	8866670	IncDec	--		8866155	0					
ANR	8866671	Identifier	to		8866155	1					
ANR	8866672	ArrayIndexing	from [ 3 ]		8866155	1					
ANR	8866673	Identifier	from		8866155	0					
ANR	8866674	PrimaryExpression	3		8866155	1					
ANR	8866675	IfStatement	if ( b & 4 )		8866155	17					
ANR	8866676	Condition	b & 4	431:24:14216:14220	8866155	0	True				
ANR	8866677	BitAndExpression	b & 4		8866155	0		&			
ANR	8866678	Identifier	b		8866155	0					
ANR	8866679	PrimaryExpression	4		8866155	1					
ANR	8866680	ExpressionStatement	* -- to = from [ 2 ]	432:24:14247:14262	8866155	1	True				
ANR	8866681	AssignmentExpression	* -- to = from [ 2 ]		8866155	0		=			
ANR	8866682	UnaryOperationExpression	* -- to		8866155	0					
ANR	8866683	UnaryOperator	*		8866155	0					
ANR	8866684	UnaryExpression	-- to		8866155	1					
ANR	8866685	IncDec	--		8866155	0					
ANR	8866686	Identifier	to		8866155	1					
ANR	8866687	ArrayIndexing	from [ 2 ]		8866155	1					
ANR	8866688	Identifier	from		8866155	0					
ANR	8866689	PrimaryExpression	2		8866155	1					
ANR	8866690	IfStatement	if ( b & 2 )		8866155	18					
ANR	8866691	Condition	b & 2	433:24:14288:14292	8866155	0	True				
ANR	8866692	BitAndExpression	b & 2		8866155	0		&			
ANR	8866693	Identifier	b		8866155	0					
ANR	8866694	PrimaryExpression	2		8866155	1					
ANR	8866695	ExpressionStatement	* -- to = from [ 1 ]	434:24:14319:14334	8866155	1	True				
ANR	8866696	AssignmentExpression	* -- to = from [ 1 ]		8866155	0		=			
ANR	8866697	UnaryOperationExpression	* -- to		8866155	0					
ANR	8866698	UnaryOperator	*		8866155	0					
ANR	8866699	UnaryExpression	-- to		8866155	1					
ANR	8866700	IncDec	--		8866155	0					
ANR	8866701	Identifier	to		8866155	1					
ANR	8866702	ArrayIndexing	from [ 1 ]		8866155	1					
ANR	8866703	Identifier	from		8866155	0					
ANR	8866704	PrimaryExpression	1		8866155	1					
ANR	8866705	IfStatement	if ( b & 1 )		8866155	19					
ANR	8866706	Condition	b & 1	435:24:14360:14364	8866155	0	True				
ANR	8866707	BitAndExpression	b & 1		8866155	0		&			
ANR	8866708	Identifier	b		8866155	0					
ANR	8866709	PrimaryExpression	1		8866155	1					
ANR	8866710	ExpressionStatement	* -- to = from [ 0 ]	436:24:14391:14406	8866155	1	True				
ANR	8866711	AssignmentExpression	* -- to = from [ 0 ]		8866155	0		=			
ANR	8866712	UnaryOperationExpression	* -- to		8866155	0					
ANR	8866713	UnaryOperator	*		8866155	0					
ANR	8866714	UnaryExpression	-- to		8866155	1					
ANR	8866715	IncDec	--		8866155	0					
ANR	8866716	Identifier	to		8866155	1					
ANR	8866717	ArrayIndexing	from [ 0 ]		8866155	1					
ANR	8866718	Identifier	from		8866155	0					
ANR	8866719	PrimaryExpression	0		8866155	1					
ANR	8866720	Label	case 0 :	438:16:14464:14470	8866155	20	True				
ANR	8866721	ExpressionStatement		439:20:14492:14492	8866155	21	True				
ANR	8866722	ExpressionStatement	"gs_alloc_fill ( cp -> ctop , gs_alloc_fill_collected , to - cp -> ctop )"	442:8:14526:14611	8866155	9	True				
ANR	8866723	CallExpression	"gs_alloc_fill ( cp -> ctop , gs_alloc_fill_collected , to - cp -> ctop )"		8866155	0					
ANR	8866724	Callee	gs_alloc_fill		8866155	0					
ANR	8866725	Identifier	gs_alloc_fill		8866155	0					
ANR	8866726	ArgumentList	cp -> ctop		8866155	1					
ANR	8866727	Argument	cp -> ctop		8866155	0					
ANR	8866728	PtrMemberAccess	cp -> ctop		8866155	0					
ANR	8866729	Identifier	cp		8866155	0					
ANR	8866730	Identifier	ctop		8866155	1					
ANR	8866731	Argument	gs_alloc_fill_collected		8866155	1					
ANR	8866732	Identifier	gs_alloc_fill_collected		8866155	0					
ANR	8866733	Argument	to - cp -> ctop		8866155	2					
ANR	8866734	AdditiveExpression	to - cp -> ctop		8866155	0		-			
ANR	8866735	Identifier	to		8866155	0					
ANR	8866736	PtrMemberAccess	cp -> ctop		8866155	1					
ANR	8866737	Identifier	cp		8866155	0					
ANR	8866738	Identifier	ctop		8866155	1					
ANR	8866739	ExpressionStatement	cp -> ctop = to	444:8:14621:14634	8866155	10	True				
ANR	8866740	AssignmentExpression	cp -> ctop = to		8866155	0		=			
ANR	8866741	PtrMemberAccess	cp -> ctop		8866155	0					
ANR	8866742	Identifier	cp		8866155	0					
ANR	8866743	Identifier	ctop		8866155	1					
ANR	8866744	Identifier	to		8866155	1					
ANR	8866745	ReturnType	void		8866155	1					
ANR	8866746	Identifier	gc_strings_compact		8866155	2					
ANR	8866747	ParameterList	"clump_t * cp , const gs_memory_t * mem"		8866155	3					
ANR	8866748	Parameter	clump_t * cp	344:19:11361:11372	8866155	0	True				
ANR	8866749	ParameterType	clump_t *		8866155	0					
ANR	8866750	Identifier	cp		8866155	1					
ANR	8866751	Parameter	const gs_memory_t * mem	344:33:11375:11396	8866155	1	True				
ANR	8866752	ParameterType	const gs_memory_t *		8866155	0					
ANR	8866753	Identifier	mem		8866155	1					
ANR	8866754	CFGEntryNode	ENTRY		8866155		True				
ANR	8866755	CFGExitNode	EXIT		8866155		True				
ANR	8866756	Symbol	hi		8866155						
ANR	8866757	Symbol	bword_1s		8866155						
ANR	8866758	Symbol	lo		8866155						
ANR	8866759	Symbol	cp -> sreloc		8866155						
ANR	8866760	Symbol	cp -> climit		8866155						
ANR	8866761	Symbol	bp		8866155						
ANR	8866762	Symbol	R		8866155						
ANR	8866763	Symbol	* cp -> sreloc		8866155						
ANR	8866764	Symbol	mem		8866155						
ANR	8866765	Symbol	string_data_quantum		8866155						
ANR	8866766	Symbol	* bp		8866155						
ANR	8866767	Symbol	wp		8866155						
ANR	8866768	Symbol	gs_alloc_fill_collected		8866155						
ANR	8866769	Symbol	from		8866155						
ANR	8866770	Symbol	gs_debug_c		8866155						
ANR	8866771	Symbol	bword_bits		8866155						
ANR	8866772	Symbol	* base		8866155						
ANR	8866773	Symbol	* * cp		8866155						
ANR	8866774	Symbol	* wp		8866155						
ANR	8866775	Symbol	cp -> ctop		8866155						
ANR	8866776	Symbol	* cp -> smark		8866155						
ANR	8866777	Symbol	* log2_string_data_quantum		8866155						
ANR	8866778	Symbol	b		8866155						
ANR	8866779	Symbol	* to		8866155						
ANR	8866780	Symbol	ch		8866155						
ANR	8866781	Symbol	ROUND_UP		8866155						
ANR	8866782	Symbol	i		8866155						
ANR	8866783	Symbol	j		8866155						
ANR	8866784	Symbol	log2_string_data_quantum		8866155						
ANR	8866785	Symbol	* -- to		8866155						
ANR	8866786	Symbol	cp		8866155						
ANR	8866787	Symbol	n		8866155						
ANR	8866788	Symbol	* cp		8866155						
ANR	8866789	Symbol	* i		8866155						
ANR	8866790	Symbol	* j		8866155						
ANR	8866791	Symbol	* -- bp		8866155						
ANR	8866792	Symbol	cp -> smark_size		8866155						
ANR	8866793	Symbol	to		8866155						
ANR	8866794	Symbol	cp -> sbase		8866155						
ANR	8866795	Symbol	cp -> smark		8866155						
ANR	8866796	Symbol	* from		8866155						
ANR	8866797	Symbol	base		8866155						
