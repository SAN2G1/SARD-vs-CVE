command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10865592	File	data/converged/CVE-2018-16863_ghostpdl/xps_xpstop.c								
ANR	10865593	DeclStmt									
ANR	10865594	Decl							int	int	xps_zip_trace
ANR	10865595	DeclStmt									
ANR	10865596	Decl							int	int	xps_doc_trace
ANR	10865597	DeclStmt									
ANR	10865598	Decl							int	"int ( xps_context_t * ctx , gx_device * pdevice )"	xps_install_halftone
ANR	10865599	DeclStmt									
ANR	10865600	Decl							struct xps_interp_instance_s	struct xps_interp_instance_s	xps_interp_instance_t
ANR	10865601	ClassDef	xps_interp_instance_s	45:0:1348:1542							
ANR	10865602	DeclStmt									
ANR	10865603	Decl							gs_memory_t	gs_memory_t *	memory
ANR	10865604	DeclStmt									
ANR	10865605	Decl							xps_context_t	xps_context_t *	ctx
ANR	10865606	DeclStmt									
ANR	10865607	Decl							FILE	FILE *	scratch_file
ANR	10865608	DeclStmt									
ANR	10865609	Decl							char	char [ gp_file_name_sizeof ]	scratch_name
ANR	10865610	Function	xps_imp_characteristics	58:0:1652:2058							
ANR	10865611	FunctionDef	xps_imp_characteristics (const pl_interp_implementation_t * pimpl)		10865610	0					
ANR	10865612	CompoundStatement		60:0:1760:2058	10865610	0					
ANR	10865613	Statement	static	61:4:1766:1771	10865610	0	True				
ANR	10865614	Statement	pl_interp_characteristics_t	61:11:1773:1799	10865610	1	True				
ANR	10865615	Statement	xps_characteristics	61:39:1801:1819	10865610	2	True				
ANR	10865616	Statement	=	61:59:1821:1821	10865610	3	True				
ANR	10865617	CompoundStatement		3:4:66:66	10865610	4					
ANR	10865618	Statement	"""XPS"""	63:8:1837:1841	10865610	0	True				
ANR	10865619	Statement	","	63:13:1842:1842	10865610	1	True				
ANR	10865620	Statement	"""PK"""	64:8:1852:1855	10865610	2	True				
ANR	10865621	Statement	","	64:12:1856:1856	10865610	3	True				
ANR	10865622	Statement	"""Artifex"""	65:8:1902:1910	10865610	4	True				
ANR	10865623	Statement	","	65:17:1911:1911	10865610	5	True				
ANR	10865624	Statement	XPS_VERSION	66:8:1921:1931	10865610	6	True				
ANR	10865625	Statement	","	66:19:1932:1932	10865610	7	True				
ANR	10865626	Statement	XPS_BUILD_DATE	67:8:1942:1955	10865610	8	True				
ANR	10865627	Statement	","	67:22:1956:1956	10865610	9	True				
ANR	10865628	Statement	XPS_PARSER_MIN_INPUT_SIZE	68:8:1966:1990	10865610	10	True				
ANR	10865629	Statement	","	68:33:1991:1991	10865610	11	True				
ANR	10865630	ExpressionStatement		69:5:2023:2023	10865610	5	True				
ANR	10865631	ReturnStatement	return & xps_characteristics ;	70:4:2029:2056	10865610	6	True				
ANR	10865632	UnaryOperationExpression	& xps_characteristics		10865610	0					
ANR	10865633	UnaryOperator	&		10865610	0					
ANR	10865634	Identifier	xps_characteristics		10865610	1					
ANR	10865635	ReturnType	static const pl_interp_characteristics_t *		10865610	1					
ANR	10865636	Identifier	xps_imp_characteristics		10865610	2					
ANR	10865637	ParameterList	const pl_interp_implementation_t * pimpl		10865610	3					
ANR	10865638	Parameter	const pl_interp_implementation_t * pimpl	59:24:1719:1757	10865610	0	True				
ANR	10865639	ParameterType	const pl_interp_implementation_t *		10865610	0					
ANR	10865640	Identifier	pimpl		10865610	1					
ANR	10865641	CFGEntryNode	ENTRY		10865610		True				
ANR	10865642	CFGExitNode	EXIT		10865610		True				
ANR	10865643	Symbol	& xps_characteristics		10865610						
ANR	10865644	Symbol	pimpl		10865610						
ANR	10865645	Function	xps_set_nocache	73:0:2061:2344							
ANR	10865646	FunctionDef	"xps_set_nocache (pl_interp_implementation_t * impl , gs_font_dir * font_dir)"		10865645	0					
ANR	10865647	CompoundStatement		75:0:2146:2344	10865645	0					
ANR	10865648	IdentifierDeclStatement	bool nocache ;	76:4:2152:2164	10865645	0	True				
ANR	10865649	IdentifierDecl	nocache		10865645	0					
ANR	10865650	IdentifierDeclType	bool		10865645	0					
ANR	10865651	Identifier	nocache		10865645	1					
ANR	10865652	IdentifierDeclStatement	xps_interp_instance_t * xpsi = impl -> interp_client_data ;	77:4:2170:2225	10865645	1	True				
ANR	10865653	IdentifierDecl	* xpsi = impl -> interp_client_data		10865645	0					
ANR	10865654	IdentifierDeclType	xps_interp_instance_t *		10865645	0					
ANR	10865655	Identifier	xpsi		10865645	1					
ANR	10865656	AssignmentExpression	* xpsi = impl -> interp_client_data		10865645	2		=			
ANR	10865657	Identifier	xpsi		10865645	0					
ANR	10865658	PtrMemberAccess	impl -> interp_client_data		10865645	1					
ANR	10865659	Identifier	impl		10865645	0					
ANR	10865660	Identifier	interp_client_data		10865645	1					
ANR	10865661	ExpressionStatement	nocache = pl_main_get_nocache ( xpsi -> memory )	78:4:2231:2274	10865645	2	True				
ANR	10865662	AssignmentExpression	nocache = pl_main_get_nocache ( xpsi -> memory )		10865645	0		=			
ANR	10865663	Identifier	nocache		10865645	0					
ANR	10865664	CallExpression	pl_main_get_nocache ( xpsi -> memory )		10865645	1					
ANR	10865665	Callee	pl_main_get_nocache		10865645	0					
ANR	10865666	Identifier	pl_main_get_nocache		10865645	0					
ANR	10865667	ArgumentList	xpsi -> memory		10865645	1					
ANR	10865668	Argument	xpsi -> memory		10865645	0					
ANR	10865669	PtrMemberAccess	xpsi -> memory		10865645	0					
ANR	10865670	Identifier	xpsi		10865645	0					
ANR	10865671	Identifier	memory		10865645	1					
ANR	10865672	IfStatement	if ( nocache )		10865645	3					
ANR	10865673	Condition	nocache	79:8:2284:2290	10865645	0	True				
ANR	10865674	Identifier	nocache		10865645	0					
ANR	10865675	ExpressionStatement	"gs_setcachelimit ( font_dir , 0 )"	80:8:2301:2330	10865645	1	True				
ANR	10865676	CallExpression	"gs_setcachelimit ( font_dir , 0 )"		10865645	0					
ANR	10865677	Callee	gs_setcachelimit		10865645	0					
ANR	10865678	Identifier	gs_setcachelimit		10865645	0					
ANR	10865679	ArgumentList	font_dir		10865645	1					
ANR	10865680	Argument	font_dir		10865645	0					
ANR	10865681	Identifier	font_dir		10865645	0					
ANR	10865682	Argument	0		10865645	1					
ANR	10865683	PrimaryExpression	0		10865645	0					
ANR	10865684	ReturnStatement	return ;	81:4:2336:2342	10865645	4	True				
ANR	10865685	ReturnType	static void		10865645	1					
ANR	10865686	Identifier	xps_set_nocache		10865645	2					
ANR	10865687	ParameterList	"pl_interp_implementation_t * impl , gs_font_dir * font_dir"		10865645	3					
ANR	10865688	Parameter	pl_interp_implementation_t * impl	74:16:2089:2120	10865645	0	True				
ANR	10865689	ParameterType	pl_interp_implementation_t *		10865645	0					
ANR	10865690	Identifier	impl		10865645	1					
ANR	10865691	Parameter	gs_font_dir * font_dir	74:50:2123:2143	10865645	1	True				
ANR	10865692	ParameterType	gs_font_dir *		10865645	0					
ANR	10865693	Identifier	font_dir		10865645	1					
ANR	10865694	CFGEntryNode	ENTRY		10865645		True				
ANR	10865695	CFGExitNode	EXIT		10865645		True				
ANR	10865696	Symbol	impl		10865645						
ANR	10865697	Symbol	* xpsi		10865645						
ANR	10865698	Symbol	xpsi -> memory		10865645						
ANR	10865699	Symbol	pl_main_get_nocache		10865645						
ANR	10865700	Symbol	xpsi		10865645						
ANR	10865701	Symbol	impl -> interp_client_data		10865645						
ANR	10865702	Symbol	nocache		10865645						
ANR	10865703	Symbol	* impl		10865645						
ANR	10865704	Symbol	font_dir		10865645						
ANR	10865705	Function	xps_set_icc_user_params	85:0:2348:2545							
ANR	10865706	FunctionDef	"xps_set_icc_user_params (pl_interp_implementation_t * impl , gs_gstate * pgs)"		10865705	0					
ANR	10865707	CompoundStatement		87:0:2433:2545	10865705	0					
ANR	10865708	IdentifierDeclStatement	xps_interp_instance_t * xpsi = impl -> interp_client_data ;	88:4:2439:2494	10865705	0	True				
ANR	10865709	IdentifierDecl	* xpsi = impl -> interp_client_data		10865705	0					
ANR	10865710	IdentifierDeclType	xps_interp_instance_t *		10865705	0					
ANR	10865711	Identifier	xpsi		10865705	1					
ANR	10865712	AssignmentExpression	* xpsi = impl -> interp_client_data		10865705	2		=			
ANR	10865713	Identifier	xpsi		10865705	0					
ANR	10865714	PtrMemberAccess	impl -> interp_client_data		10865705	1					
ANR	10865715	Identifier	impl		10865705	0					
ANR	10865716	Identifier	interp_client_data		10865705	1					
ANR	10865717	ReturnStatement	"return pl_set_icc_params ( xpsi -> memory , pgs ) ;"	89:4:2500:2543	10865705	1	True				
ANR	10865718	CallExpression	"pl_set_icc_params ( xpsi -> memory , pgs )"		10865705	0					
ANR	10865719	Callee	pl_set_icc_params		10865705	0					
ANR	10865720	Identifier	pl_set_icc_params		10865705	0					
ANR	10865721	ArgumentList	xpsi -> memory		10865705	1					
ANR	10865722	Argument	xpsi -> memory		10865705	0					
ANR	10865723	PtrMemberAccess	xpsi -> memory		10865705	0					
ANR	10865724	Identifier	xpsi		10865705	0					
ANR	10865725	Identifier	memory		10865705	1					
ANR	10865726	Argument	pgs		10865705	1					
ANR	10865727	Identifier	pgs		10865705	0					
ANR	10865728	ReturnType	static int		10865705	1					
ANR	10865729	Identifier	xps_set_icc_user_params		10865705	2					
ANR	10865730	ParameterList	"pl_interp_implementation_t * impl , gs_gstate * pgs"		10865705	3					
ANR	10865731	Parameter	pl_interp_implementation_t * impl	86:24:2383:2414	10865705	0	True				
ANR	10865732	ParameterType	pl_interp_implementation_t *		10865705	0					
ANR	10865733	Identifier	impl		10865705	1					
ANR	10865734	Parameter	gs_gstate * pgs	86:58:2417:2430	10865705	1	True				
ANR	10865735	ParameterType	gs_gstate *		10865705	0					
ANR	10865736	Identifier	pgs		10865705	1					
ANR	10865737	CFGEntryNode	ENTRY		10865705		True				
ANR	10865738	CFGExitNode	EXIT		10865705		True				
ANR	10865739	Symbol	impl		10865705						
ANR	10865740	Symbol	pl_set_icc_params		10865705						
ANR	10865741	Symbol	* xpsi		10865705						
ANR	10865742	Symbol	xpsi -> memory		10865705						
ANR	10865743	Symbol	xpsi		10865705						
ANR	10865744	Symbol	impl -> interp_client_data		10865705						
ANR	10865745	Symbol	* impl		10865705						
ANR	10865746	Symbol	pgs		10865705						
ANR	10865747	Function	xps_imp_allocate_interp_instance	93:0:2620:4730							
ANR	10865748	FunctionDef	"xps_imp_allocate_interp_instance (pl_interp_implementation_t * impl , gs_memory_t * pmem)"		10865747	0					
ANR	10865749	CompoundStatement		96:0:2750:4730	10865747	0					
ANR	10865750	IdentifierDeclStatement	xps_interp_instance_t * instance ;	97:4:2756:2787	10865747	0	True				
ANR	10865751	IdentifierDecl	* instance		10865747	0					
ANR	10865752	IdentifierDeclType	xps_interp_instance_t *		10865747	0					
ANR	10865753	Identifier	instance		10865747	1					
ANR	10865754	IdentifierDeclStatement	xps_context_t * ctx ;	98:4:2793:2811	10865747	1	True				
ANR	10865755	IdentifierDecl	* ctx		10865747	0					
ANR	10865756	IdentifierDeclType	xps_context_t *		10865747	0					
ANR	10865757	Identifier	ctx		10865747	1					
ANR	10865758	IdentifierDeclStatement	gs_gstate * pgs ;	99:4:2817:2831	10865747	2	True				
ANR	10865759	IdentifierDecl	* pgs		10865747	0					
ANR	10865760	IdentifierDeclType	gs_gstate *		10865747	0					
ANR	10865761	Identifier	pgs		10865747	1					
ANR	10865762	ExpressionStatement	"instance = ( xps_interp_instance_t * ) gs_alloc_bytes ( pmem , sizeof ( xps_interp_instance_t ) , ""xps_imp_allocate_interp_instance"" )"	101:4:2838:2974	10865747	3	True				
ANR	10865763	AssignmentExpression	"instance = ( xps_interp_instance_t * ) gs_alloc_bytes ( pmem , sizeof ( xps_interp_instance_t ) , ""xps_imp_allocate_interp_instance"" )"		10865747	0		=			
ANR	10865764	Identifier	instance		10865747	0					
ANR	10865765	CastExpression	"( xps_interp_instance_t * ) gs_alloc_bytes ( pmem , sizeof ( xps_interp_instance_t ) , ""xps_imp_allocate_interp_instance"" )"		10865747	1					
ANR	10865766	CastTarget	xps_interp_instance_t *		10865747	0					
ANR	10865767	CallExpression	"gs_alloc_bytes ( pmem , sizeof ( xps_interp_instance_t ) , ""xps_imp_allocate_interp_instance"" )"		10865747	1					
ANR	10865768	Callee	gs_alloc_bytes		10865747	0					
ANR	10865769	Identifier	gs_alloc_bytes		10865747	0					
ANR	10865770	ArgumentList	pmem		10865747	1					
ANR	10865771	Argument	pmem		10865747	0					
ANR	10865772	Identifier	pmem		10865747	0					
ANR	10865773	Argument	sizeof ( xps_interp_instance_t )		10865747	1					
ANR	10865774	SizeofExpression	sizeof ( xps_interp_instance_t )		10865747	0					
ANR	10865775	Sizeof	sizeof		10865747	0					
ANR	10865776	SizeofOperand	xps_interp_instance_t		10865747	1					
ANR	10865777	Argument	"""xps_imp_allocate_interp_instance"""		10865747	2					
ANR	10865778	PrimaryExpression	"""xps_imp_allocate_interp_instance"""		10865747	0					
ANR	10865779	ExpressionStatement	"ctx = ( xps_context_t * ) gs_alloc_bytes ( pmem , sizeof ( xps_context_t ) , ""xps_imp_allocate_interp_instance"" )"	104:4:2981:3096	10865747	4	True				
ANR	10865780	AssignmentExpression	"ctx = ( xps_context_t * ) gs_alloc_bytes ( pmem , sizeof ( xps_context_t ) , ""xps_imp_allocate_interp_instance"" )"		10865747	0		=			
ANR	10865781	Identifier	ctx		10865747	0					
ANR	10865782	CastExpression	"( xps_context_t * ) gs_alloc_bytes ( pmem , sizeof ( xps_context_t ) , ""xps_imp_allocate_interp_instance"" )"		10865747	1					
ANR	10865783	CastTarget	xps_context_t *		10865747	0					
ANR	10865784	CallExpression	"gs_alloc_bytes ( pmem , sizeof ( xps_context_t ) , ""xps_imp_allocate_interp_instance"" )"		10865747	1					
ANR	10865785	Callee	gs_alloc_bytes		10865747	0					
ANR	10865786	Identifier	gs_alloc_bytes		10865747	0					
ANR	10865787	ArgumentList	pmem		10865747	1					
ANR	10865788	Argument	pmem		10865747	0					
ANR	10865789	Identifier	pmem		10865747	0					
ANR	10865790	Argument	sizeof ( xps_context_t )		10865747	1					
ANR	10865791	SizeofExpression	sizeof ( xps_context_t )		10865747	0					
ANR	10865792	Sizeof	sizeof		10865747	0					
ANR	10865793	SizeofOperand	xps_context_t		10865747	1					
ANR	10865794	Argument	"""xps_imp_allocate_interp_instance"""		10865747	2					
ANR	10865795	PrimaryExpression	"""xps_imp_allocate_interp_instance"""		10865747	0					
ANR	10865796	ExpressionStatement	pgs = gs_gstate_alloc ( pmem )	107:4:3103:3130	10865747	5	True				
ANR	10865797	AssignmentExpression	pgs = gs_gstate_alloc ( pmem )		10865747	0		=			
ANR	10865798	Identifier	pgs		10865747	0					
ANR	10865799	CallExpression	gs_gstate_alloc ( pmem )		10865747	1					
ANR	10865800	Callee	gs_gstate_alloc		10865747	0					
ANR	10865801	Identifier	gs_gstate_alloc		10865747	0					
ANR	10865802	ArgumentList	pmem		10865747	1					
ANR	10865803	Argument	pmem		10865747	0					
ANR	10865804	Identifier	pmem		10865747	0					
ANR	10865805	IfStatement	if ( ! instance || ! ctx || ! pgs )		10865747	6					
ANR	10865806	Condition	! instance || ! ctx || ! pgs	109:8:3141:3165	10865747	0	True				
ANR	10865807	OrExpression	! instance || ! ctx || ! pgs		10865747	0		||			
ANR	10865808	UnaryOperationExpression	! instance		10865747	0					
ANR	10865809	UnaryOperator	!		10865747	0					
ANR	10865810	Identifier	instance		10865747	1					
ANR	10865811	OrExpression	! ctx || ! pgs		10865747	1		||			
ANR	10865812	UnaryOperationExpression	! ctx		10865747	0					
ANR	10865813	UnaryOperator	!		10865747	0					
ANR	10865814	Identifier	ctx		10865747	1					
ANR	10865815	UnaryOperationExpression	! pgs		10865747	1					
ANR	10865816	UnaryOperator	!		10865747	0					
ANR	10865817	Identifier	pgs		10865747	1					
ANR	10865818	CompoundStatement		15:4:421:421	10865747	1					
ANR	10865819	IfStatement	if ( instance )		10865747	0					
ANR	10865820	Condition	instance	111:12:3186:3193	10865747	0	True				
ANR	10865821	Identifier	instance		10865747	0					
ANR	10865822	ExpressionStatement	"gs_free_object ( pmem , instance , ""xps_imp_allocate_interp_instance"" )"	112:12:3208:3274	10865747	1	True				
ANR	10865823	CallExpression	"gs_free_object ( pmem , instance , ""xps_imp_allocate_interp_instance"" )"		10865747	0					
ANR	10865824	Callee	gs_free_object		10865747	0					
ANR	10865825	Identifier	gs_free_object		10865747	0					
ANR	10865826	ArgumentList	pmem		10865747	1					
ANR	10865827	Argument	pmem		10865747	0					
ANR	10865828	Identifier	pmem		10865747	0					
ANR	10865829	Argument	instance		10865747	1					
ANR	10865830	Identifier	instance		10865747	0					
ANR	10865831	Argument	"""xps_imp_allocate_interp_instance"""		10865747	2					
ANR	10865832	PrimaryExpression	"""xps_imp_allocate_interp_instance"""		10865747	0					
ANR	10865833	IfStatement	if ( ctx )		10865747	1					
ANR	10865834	Condition	ctx	113:12:3288:3290	10865747	0	True				
ANR	10865835	Identifier	ctx		10865747	0					
ANR	10865836	ExpressionStatement	"gs_free_object ( pmem , ctx , ""xps_imp_allocate_interp_instance"" )"	114:12:3305:3366	10865747	1	True				
ANR	10865837	CallExpression	"gs_free_object ( pmem , ctx , ""xps_imp_allocate_interp_instance"" )"		10865747	0					
ANR	10865838	Callee	gs_free_object		10865747	0					
ANR	10865839	Identifier	gs_free_object		10865747	0					
ANR	10865840	ArgumentList	pmem		10865747	1					
ANR	10865841	Argument	pmem		10865747	0					
ANR	10865842	Identifier	pmem		10865747	0					
ANR	10865843	Argument	ctx		10865747	1					
ANR	10865844	Identifier	ctx		10865747	0					
ANR	10865845	Argument	"""xps_imp_allocate_interp_instance"""		10865747	2					
ANR	10865846	PrimaryExpression	"""xps_imp_allocate_interp_instance"""		10865747	0					
ANR	10865847	IfStatement	if ( pgs )		10865747	2					
ANR	10865848	Condition	pgs	115:12:3380:3382	10865747	0	True				
ANR	10865849	Identifier	pgs		10865747	0					
ANR	10865850	ExpressionStatement	gs_gstate_free ( pgs )	116:12:3397:3416	10865747	1	True				
ANR	10865851	CallExpression	gs_gstate_free ( pgs )		10865747	0					
ANR	10865852	Callee	gs_gstate_free		10865747	0					
ANR	10865853	Identifier	gs_gstate_free		10865747	0					
ANR	10865854	ArgumentList	pgs		10865747	1					
ANR	10865855	Argument	pgs		10865747	0					
ANR	10865856	Identifier	pgs		10865747	0					
ANR	10865857	ReturnStatement	return gs_error_VMerror ;	117:8:3426:3449	10865747	3	True				
ANR	10865858	Identifier	gs_error_VMerror		10865747	0					
ANR	10865859	ExpressionStatement	gsicc_init_iccmanager ( pgs )	120:4:3462:3488	10865747	7	True				
ANR	10865860	CallExpression	gsicc_init_iccmanager ( pgs )		10865747	0					
ANR	10865861	Callee	gsicc_init_iccmanager		10865747	0					
ANR	10865862	Identifier	gsicc_init_iccmanager		10865747	0					
ANR	10865863	ArgumentList	pgs		10865747	1					
ANR	10865864	Argument	pgs		10865747	0					
ANR	10865865	Identifier	pgs		10865747	0					
ANR	10865866	ExpressionStatement	"memset ( ctx , 0 , sizeof ( xps_context_t ) )"	121:4:3494:3531	10865747	8	True				
ANR	10865867	CallExpression	"memset ( ctx , 0 , sizeof ( xps_context_t ) )"		10865747	0					
ANR	10865868	Callee	memset		10865747	0					
ANR	10865869	Identifier	memset		10865747	0					
ANR	10865870	ArgumentList	ctx		10865747	1					
ANR	10865871	Argument	ctx		10865747	0					
ANR	10865872	Identifier	ctx		10865747	0					
ANR	10865873	Argument	0		10865747	1					
ANR	10865874	PrimaryExpression	0		10865747	0					
ANR	10865875	Argument	sizeof ( xps_context_t )		10865747	2					
ANR	10865876	SizeofExpression	sizeof ( xps_context_t )		10865747	0					
ANR	10865877	Sizeof	sizeof		10865747	0					
ANR	10865878	SizeofOperand	xps_context_t		10865747	1					
ANR	10865879	ExpressionStatement	ctx -> instance = instance	123:4:3538:3562	10865747	9	True				
ANR	10865880	AssignmentExpression	ctx -> instance = instance		10865747	0		=			
ANR	10865881	PtrMemberAccess	ctx -> instance		10865747	0					
ANR	10865882	Identifier	ctx		10865747	0					
ANR	10865883	Identifier	instance		10865747	1					
ANR	10865884	Identifier	instance		10865747	1					
ANR	10865885	ExpressionStatement	ctx -> memory = pmem	124:4:3568:3586	10865747	10	True				
ANR	10865886	AssignmentExpression	ctx -> memory = pmem		10865747	0		=			
ANR	10865887	PtrMemberAccess	ctx -> memory		10865747	0					
ANR	10865888	Identifier	ctx		10865747	0					
ANR	10865889	Identifier	memory		10865747	1					
ANR	10865890	Identifier	pmem		10865747	1					
ANR	10865891	ExpressionStatement	ctx -> pgs = pgs	125:4:3592:3606	10865747	11	True				
ANR	10865892	AssignmentExpression	ctx -> pgs = pgs		10865747	0		=			
ANR	10865893	PtrMemberAccess	ctx -> pgs		10865747	0					
ANR	10865894	Identifier	ctx		10865747	0					
ANR	10865895	Identifier	pgs		10865747	1					
ANR	10865896	Identifier	pgs		10865747	1					
ANR	10865897	ExpressionStatement	ctx -> pgs -> have_pattern_streams = true	129:4:3743:3780	10865747	12	True				
ANR	10865898	AssignmentExpression	ctx -> pgs -> have_pattern_streams = true		10865747	0		=			
ANR	10865899	PtrMemberAccess	ctx -> pgs -> have_pattern_streams		10865747	0					
ANR	10865900	PtrMemberAccess	ctx -> pgs		10865747	0					
ANR	10865901	Identifier	ctx		10865747	0					
ANR	10865902	Identifier	pgs		10865747	1					
ANR	10865903	Identifier	have_pattern_streams		10865747	1					
ANR	10865904	Identifier	true		10865747	1					
ANR	10865905	ExpressionStatement	ctx -> fontdir = NULL	130:4:3786:3805	10865747	13	True				
ANR	10865906	AssignmentExpression	ctx -> fontdir = NULL		10865747	0		=			
ANR	10865907	PtrMemberAccess	ctx -> fontdir		10865747	0					
ANR	10865908	Identifier	ctx		10865747	0					
ANR	10865909	Identifier	fontdir		10865747	1					
ANR	10865910	Identifier	NULL		10865747	1					
ANR	10865911	ExpressionStatement	ctx -> preserve_tr_mode = 0	131:4:3811:3836	10865747	14	True				
ANR	10865912	AssignmentExpression	ctx -> preserve_tr_mode = 0		10865747	0		=			
ANR	10865913	PtrMemberAccess	ctx -> preserve_tr_mode		10865747	0					
ANR	10865914	Identifier	ctx		10865747	0					
ANR	10865915	Identifier	preserve_tr_mode		10865747	1					
ANR	10865916	PrimaryExpression	0		10865747	1					
ANR	10865917	ExpressionStatement	ctx -> file = NULL	133:4:3843:3859	10865747	15	True				
ANR	10865918	AssignmentExpression	ctx -> file = NULL		10865747	0		=			
ANR	10865919	PtrMemberAccess	ctx -> file		10865747	0					
ANR	10865920	Identifier	ctx		10865747	0					
ANR	10865921	Identifier	file		10865747	1					
ANR	10865922	Identifier	NULL		10865747	1					
ANR	10865923	ExpressionStatement	ctx -> zip_count = 0	134:4:3865:3883	10865747	16	True				
ANR	10865924	AssignmentExpression	ctx -> zip_count = 0		10865747	0		=			
ANR	10865925	PtrMemberAccess	ctx -> zip_count		10865747	0					
ANR	10865926	Identifier	ctx		10865747	0					
ANR	10865927	Identifier	zip_count		10865747	1					
ANR	10865928	PrimaryExpression	0		10865747	1					
ANR	10865929	ExpressionStatement	ctx -> zip_table = NULL	135:4:3889:3910	10865747	17	True				
ANR	10865930	AssignmentExpression	ctx -> zip_table = NULL		10865747	0		=			
ANR	10865931	PtrMemberAccess	ctx -> zip_table		10865747	0					
ANR	10865932	Identifier	ctx		10865747	0					
ANR	10865933	Identifier	zip_table		10865747	1					
ANR	10865934	Identifier	NULL		10865747	1					
ANR	10865935	ExpressionStatement	"ctx -> gray_lin = gs_cspace_new_ICC ( ctx -> memory , ctx -> pgs , - 1 )"	138:4:4003:4063	10865747	18	True				
ANR	10865936	AssignmentExpression	"ctx -> gray_lin = gs_cspace_new_ICC ( ctx -> memory , ctx -> pgs , - 1 )"		10865747	0		=			
ANR	10865937	PtrMemberAccess	ctx -> gray_lin		10865747	0					
ANR	10865938	Identifier	ctx		10865747	0					
ANR	10865939	Identifier	gray_lin		10865747	1					
ANR	10865940	CallExpression	"gs_cspace_new_ICC ( ctx -> memory , ctx -> pgs , - 1 )"		10865747	1					
ANR	10865941	Callee	gs_cspace_new_ICC		10865747	0					
ANR	10865942	Identifier	gs_cspace_new_ICC		10865747	0					
ANR	10865943	ArgumentList	ctx -> memory		10865747	1					
ANR	10865944	Argument	ctx -> memory		10865747	0					
ANR	10865945	PtrMemberAccess	ctx -> memory		10865747	0					
ANR	10865946	Identifier	ctx		10865747	0					
ANR	10865947	Identifier	memory		10865747	1					
ANR	10865948	Argument	ctx -> pgs		10865747	1					
ANR	10865949	PtrMemberAccess	ctx -> pgs		10865747	0					
ANR	10865950	Identifier	ctx		10865747	0					
ANR	10865951	Identifier	pgs		10865747	1					
ANR	10865952	Argument	- 1		10865747	2					
ANR	10865953	UnaryOperationExpression	- 1		10865747	0					
ANR	10865954	UnaryOperator	-		10865747	0					
ANR	10865955	PrimaryExpression	1		10865747	1					
ANR	10865956	ExpressionStatement	"ctx -> gray = gs_cspace_new_ICC ( ctx -> memory , ctx -> pgs , 1 )"	139:4:4069:4124	10865747	19	True				
ANR	10865957	AssignmentExpression	"ctx -> gray = gs_cspace_new_ICC ( ctx -> memory , ctx -> pgs , 1 )"		10865747	0		=			
ANR	10865958	PtrMemberAccess	ctx -> gray		10865747	0					
ANR	10865959	Identifier	ctx		10865747	0					
ANR	10865960	Identifier	gray		10865747	1					
ANR	10865961	CallExpression	"gs_cspace_new_ICC ( ctx -> memory , ctx -> pgs , 1 )"		10865747	1					
ANR	10865962	Callee	gs_cspace_new_ICC		10865747	0					
ANR	10865963	Identifier	gs_cspace_new_ICC		10865747	0					
ANR	10865964	ArgumentList	ctx -> memory		10865747	1					
ANR	10865965	Argument	ctx -> memory		10865747	0					
ANR	10865966	PtrMemberAccess	ctx -> memory		10865747	0					
ANR	10865967	Identifier	ctx		10865747	0					
ANR	10865968	Identifier	memory		10865747	1					
ANR	10865969	Argument	ctx -> pgs		10865747	1					
ANR	10865970	PtrMemberAccess	ctx -> pgs		10865747	0					
ANR	10865971	Identifier	ctx		10865747	0					
ANR	10865972	Identifier	pgs		10865747	1					
ANR	10865973	Argument	1		10865747	2					
ANR	10865974	PrimaryExpression	1		10865747	0					
ANR	10865975	ExpressionStatement	"ctx -> cmyk = gs_cspace_new_ICC ( ctx -> memory , ctx -> pgs , 4 )"	140:4:4130:4185	10865747	20	True				
ANR	10865976	AssignmentExpression	"ctx -> cmyk = gs_cspace_new_ICC ( ctx -> memory , ctx -> pgs , 4 )"		10865747	0		=			
ANR	10865977	PtrMemberAccess	ctx -> cmyk		10865747	0					
ANR	10865978	Identifier	ctx		10865747	0					
ANR	10865979	Identifier	cmyk		10865747	1					
ANR	10865980	CallExpression	"gs_cspace_new_ICC ( ctx -> memory , ctx -> pgs , 4 )"		10865747	1					
ANR	10865981	Callee	gs_cspace_new_ICC		10865747	0					
ANR	10865982	Identifier	gs_cspace_new_ICC		10865747	0					
ANR	10865983	ArgumentList	ctx -> memory		10865747	1					
ANR	10865984	Argument	ctx -> memory		10865747	0					
ANR	10865985	PtrMemberAccess	ctx -> memory		10865747	0					
ANR	10865986	Identifier	ctx		10865747	0					
ANR	10865987	Identifier	memory		10865747	1					
ANR	10865988	Argument	ctx -> pgs		10865747	1					
ANR	10865989	PtrMemberAccess	ctx -> pgs		10865747	0					
ANR	10865990	Identifier	ctx		10865747	0					
ANR	10865991	Identifier	pgs		10865747	1					
ANR	10865992	Argument	4		10865747	2					
ANR	10865993	PrimaryExpression	4		10865747	0					
ANR	10865994	ExpressionStatement	"ctx -> srgb = gs_cspace_new_ICC ( ctx -> memory , ctx -> pgs , 3 )"	141:4:4191:4246	10865747	21	True				
ANR	10865995	AssignmentExpression	"ctx -> srgb = gs_cspace_new_ICC ( ctx -> memory , ctx -> pgs , 3 )"		10865747	0		=			
ANR	10865996	PtrMemberAccess	ctx -> srgb		10865747	0					
ANR	10865997	Identifier	ctx		10865747	0					
ANR	10865998	Identifier	srgb		10865747	1					
ANR	10865999	CallExpression	"gs_cspace_new_ICC ( ctx -> memory , ctx -> pgs , 3 )"		10865747	1					
ANR	10866000	Callee	gs_cspace_new_ICC		10865747	0					
ANR	10866001	Identifier	gs_cspace_new_ICC		10865747	0					
ANR	10866002	ArgumentList	ctx -> memory		10865747	1					
ANR	10866003	Argument	ctx -> memory		10865747	0					
ANR	10866004	PtrMemberAccess	ctx -> memory		10865747	0					
ANR	10866005	Identifier	ctx		10865747	0					
ANR	10866006	Identifier	memory		10865747	1					
ANR	10866007	Argument	ctx -> pgs		10865747	1					
ANR	10866008	PtrMemberAccess	ctx -> pgs		10865747	0					
ANR	10866009	Identifier	ctx		10865747	0					
ANR	10866010	Identifier	pgs		10865747	1					
ANR	10866011	Argument	3		10865747	2					
ANR	10866012	PrimaryExpression	3		10865747	0					
ANR	10866013	ExpressionStatement	"ctx -> scrgb = gs_cspace_new_ICC ( ctx -> memory , ctx -> pgs , 3 )"	142:4:4252:4308	10865747	22	True				
ANR	10866014	AssignmentExpression	"ctx -> scrgb = gs_cspace_new_ICC ( ctx -> memory , ctx -> pgs , 3 )"		10865747	0		=			
ANR	10866015	PtrMemberAccess	ctx -> scrgb		10865747	0					
ANR	10866016	Identifier	ctx		10865747	0					
ANR	10866017	Identifier	scrgb		10865747	1					
ANR	10866018	CallExpression	"gs_cspace_new_ICC ( ctx -> memory , ctx -> pgs , 3 )"		10865747	1					
ANR	10866019	Callee	gs_cspace_new_ICC		10865747	0					
ANR	10866020	Identifier	gs_cspace_new_ICC		10865747	0					
ANR	10866021	ArgumentList	ctx -> memory		10865747	1					
ANR	10866022	Argument	ctx -> memory		10865747	0					
ANR	10866023	PtrMemberAccess	ctx -> memory		10865747	0					
ANR	10866024	Identifier	ctx		10865747	0					
ANR	10866025	Identifier	memory		10865747	1					
ANR	10866026	Argument	ctx -> pgs		10865747	1					
ANR	10866027	PtrMemberAccess	ctx -> pgs		10865747	0					
ANR	10866028	Identifier	ctx		10865747	0					
ANR	10866029	Identifier	pgs		10865747	1					
ANR	10866030	Argument	3		10865747	2					
ANR	10866031	PrimaryExpression	3		10865747	0					
ANR	10866032	ExpressionStatement	instance -> ctx = ctx	144:4:4315:4334	10865747	23	True				
ANR	10866033	AssignmentExpression	instance -> ctx = ctx		10865747	0		=			
ANR	10866034	PtrMemberAccess	instance -> ctx		10865747	0					
ANR	10866035	Identifier	instance		10865747	0					
ANR	10866036	Identifier	ctx		10865747	1					
ANR	10866037	Identifier	ctx		10865747	1					
ANR	10866038	ExpressionStatement	instance -> scratch_file = NULL	145:4:4340:4369	10865747	24	True				
ANR	10866039	AssignmentExpression	instance -> scratch_file = NULL		10865747	0		=			
ANR	10866040	PtrMemberAccess	instance -> scratch_file		10865747	0					
ANR	10866041	Identifier	instance		10865747	0					
ANR	10866042	Identifier	scratch_file		10865747	1					
ANR	10866043	Identifier	NULL		10865747	1					
ANR	10866044	ExpressionStatement	instance -> scratch_name [ 0 ] = 0	146:4:4375:4404	10865747	25	True				
ANR	10866045	AssignmentExpression	instance -> scratch_name [ 0 ] = 0		10865747	0		=			
ANR	10866046	ArrayIndexing	instance -> scratch_name [ 0 ]		10865747	0					
ANR	10866047	PtrMemberAccess	instance -> scratch_name		10865747	0					
ANR	10866048	Identifier	instance		10865747	0					
ANR	10866049	Identifier	scratch_name		10865747	1					
ANR	10866050	PrimaryExpression	0		10865747	1					
ANR	10866051	PrimaryExpression	0		10865747	1					
ANR	10866052	ExpressionStatement	instance -> memory = pmem	147:4:4410:4433	10865747	26	True				
ANR	10866053	AssignmentExpression	instance -> memory = pmem		10865747	0		=			
ANR	10866054	PtrMemberAccess	instance -> memory		10865747	0					
ANR	10866055	Identifier	instance		10865747	0					
ANR	10866056	Identifier	memory		10865747	1					
ANR	10866057	Identifier	pmem		10865747	1					
ANR	10866058	ExpressionStatement	ctx -> fontdir = gs_font_dir_alloc ( ctx -> memory )	150:4:4478:4523	10865747	27	True				
ANR	10866059	AssignmentExpression	ctx -> fontdir = gs_font_dir_alloc ( ctx -> memory )		10865747	0		=			
ANR	10866060	PtrMemberAccess	ctx -> fontdir		10865747	0					
ANR	10866061	Identifier	ctx		10865747	0					
ANR	10866062	Identifier	fontdir		10865747	1					
ANR	10866063	CallExpression	gs_font_dir_alloc ( ctx -> memory )		10865747	1					
ANR	10866064	Callee	gs_font_dir_alloc		10865747	0					
ANR	10866065	Identifier	gs_font_dir_alloc		10865747	0					
ANR	10866066	ArgumentList	ctx -> memory		10865747	1					
ANR	10866067	Argument	ctx -> memory		10865747	0					
ANR	10866068	PtrMemberAccess	ctx -> memory		10865747	0					
ANR	10866069	Identifier	ctx		10865747	0					
ANR	10866070	Identifier	memory		10865747	1					
ANR	10866071	ExpressionStatement	"gs_setaligntopixels ( ctx -> fontdir , 1 )"	152:4:4530:4566	10865747	28	True				
ANR	10866072	CallExpression	"gs_setaligntopixels ( ctx -> fontdir , 1 )"		10865747	0					
ANR	10866073	Callee	gs_setaligntopixels		10865747	0					
ANR	10866074	Identifier	gs_setaligntopixels		10865747	0					
ANR	10866075	ArgumentList	ctx -> fontdir		10865747	1					
ANR	10866076	Argument	ctx -> fontdir		10865747	0					
ANR	10866077	PtrMemberAccess	ctx -> fontdir		10865747	0					
ANR	10866078	Identifier	ctx		10865747	0					
ANR	10866079	Identifier	fontdir		10865747	1					
ANR	10866080	Argument	1		10865747	1					
ANR	10866081	PrimaryExpression	1		10865747	0					
ANR	10866082	ExpressionStatement	"gs_setgridfittt ( ctx -> fontdir , 1 )"	153:4:4591:4623	10865747	29	True				
ANR	10866083	CallExpression	"gs_setgridfittt ( ctx -> fontdir , 1 )"		10865747	0					
ANR	10866084	Callee	gs_setgridfittt		10865747	0					
ANR	10866085	Identifier	gs_setgridfittt		10865747	0					
ANR	10866086	ArgumentList	ctx -> fontdir		10865747	1					
ANR	10866087	Argument	ctx -> fontdir		10865747	0					
ANR	10866088	PtrMemberAccess	ctx -> fontdir		10865747	0					
ANR	10866089	Identifier	ctx		10865747	0					
ANR	10866090	Identifier	fontdir		10865747	1					
ANR	10866091	Argument	1		10865747	1					
ANR	10866092	PrimaryExpression	1		10865747	0					
ANR	10866093	ExpressionStatement	impl -> interp_client_data = instance	155:4:4678:4713	10865747	30	True				
ANR	10866094	AssignmentExpression	impl -> interp_client_data = instance		10865747	0		=			
ANR	10866095	PtrMemberAccess	impl -> interp_client_data		10865747	0					
ANR	10866096	Identifier	impl		10865747	0					
ANR	10866097	Identifier	interp_client_data		10865747	1					
ANR	10866098	Identifier	instance		10865747	1					
ANR	10866099	ReturnStatement	return 0 ;	157:4:4720:4728	10865747	31	True				
ANR	10866100	PrimaryExpression	0		10865747	0					
ANR	10866101	ReturnType	static int		10865747	1					
ANR	10866102	Identifier	xps_imp_allocate_interp_instance		10865747	2					
ANR	10866103	ParameterList	"pl_interp_implementation_t * impl , gs_memory_t * pmem"		10865747	3					
ANR	10866104	Parameter	pl_interp_implementation_t * impl	94:33:2664:2695	10865747	0	True				
ANR	10866105	ParameterType	pl_interp_implementation_t *		10865747	0					
ANR	10866106	Identifier	impl		10865747	1					
ANR	10866107	Parameter	gs_memory_t * pmem	95:33:2731:2747	10865747	1	True				
ANR	10866108	ParameterType	gs_memory_t *		10865747	0					
ANR	10866109	Identifier	pmem		10865747	1					
ANR	10866110	CFGEntryNode	ENTRY		10865747		True				
ANR	10866111	CFGExitNode	EXIT		10865747		True				
ANR	10866112	Symbol	* ctx -> pgs		10865747						
ANR	10866113	Symbol	instance		10865747						
ANR	10866114	Symbol	ctx -> fontdir		10865747						
ANR	10866115	Symbol	gs_cspace_new_ICC		10865747						
ANR	10866116	Symbol	gs_gstate_alloc		10865747						
ANR	10866117	Symbol	ctx -> pgs		10865747						
ANR	10866118	Symbol	impl -> interp_client_data		10865747						
ANR	10866119	Symbol	* impl		10865747						
ANR	10866120	Symbol	ctx -> pgs -> have_pattern_streams		10865747						
ANR	10866121	Symbol	ctx -> zip_table		10865747						
ANR	10866122	Symbol	impl		10865747						
ANR	10866123	Symbol	pmem		10865747						
ANR	10866124	Symbol	* instance -> scratch_name		10865747						
ANR	10866125	Symbol	ctx -> gray		10865747						
ANR	10866126	Symbol	instance -> ctx		10865747						
ANR	10866127	Symbol	instance -> memory		10865747						
ANR	10866128	Symbol	ctx -> preserve_tr_mode		10865747						
ANR	10866129	Symbol	pgs		10865747						
ANR	10866130	Symbol	gs_alloc_bytes		10865747						
ANR	10866131	Symbol	NULL		10865747						
ANR	10866132	Symbol	ctx -> scrgb		10865747						
ANR	10866133	Symbol	instance -> scratch_file		10865747						
ANR	10866134	Symbol	ctx		10865747						
ANR	10866135	Symbol	* * instance		10865747						
ANR	10866136	Symbol	* ctx		10865747						
ANR	10866137	Symbol	gs_error_VMerror		10865747						
ANR	10866138	Symbol	ctx -> instance		10865747						
ANR	10866139	Symbol	ctx -> memory		10865747						
ANR	10866140	Symbol	ctx -> gray_lin		10865747						
ANR	10866141	Symbol	gs_font_dir_alloc		10865747						
ANR	10866142	Symbol	ctx -> zip_count		10865747						
ANR	10866143	Symbol	true		10865747						
ANR	10866144	Symbol	ctx -> cmyk		10865747						
ANR	10866145	Symbol	* instance		10865747						
ANR	10866146	Symbol	* * ctx		10865747						
ANR	10866147	Symbol	ctx -> file		10865747						
ANR	10866148	Symbol	instance -> scratch_name		10865747						
ANR	10866149	Symbol	ctx -> srgb		10865747						
ANR	10866150	Function	xps_imp_set_device	160:0:4733:6515							
ANR	10866151	FunctionDef	"xps_imp_set_device (pl_interp_implementation_t * impl , gx_device * pdevice)"		10866150	0					
ANR	10866152	CompoundStatement		162:0:4817:6515	10866150	0					
ANR	10866153	IdentifierDeclStatement	xps_interp_instance_t * instance = impl -> interp_client_data ;	163:4:4823:4881	10866150	0	True				
ANR	10866154	IdentifierDecl	* instance = impl -> interp_client_data		10866150	0					
ANR	10866155	IdentifierDeclType	xps_interp_instance_t *		10866150	0					
ANR	10866156	Identifier	instance		10866150	1					
ANR	10866157	AssignmentExpression	* instance = impl -> interp_client_data		10866150	2		=			
ANR	10866158	Identifier	instance		10866150	0					
ANR	10866159	PtrMemberAccess	impl -> interp_client_data		10866150	1					
ANR	10866160	Identifier	impl		10866150	0					
ANR	10866161	Identifier	interp_client_data		10866150	1					
ANR	10866162	IdentifierDeclStatement	xps_context_t * ctx = instance -> ctx ;	164:4:4887:4921	10866150	1	True				
ANR	10866163	IdentifierDecl	* ctx = instance -> ctx		10866150	0					
ANR	10866164	IdentifierDeclType	xps_context_t *		10866150	0					
ANR	10866165	Identifier	ctx		10866150	1					
ANR	10866166	AssignmentExpression	* ctx = instance -> ctx		10866150	2		=			
ANR	10866167	Identifier	ctx		10866150	0					
ANR	10866168	PtrMemberAccess	instance -> ctx		10866150	1					
ANR	10866169	Identifier	instance		10866150	0					
ANR	10866170	Identifier	ctx		10866150	1					
ANR	10866171	IdentifierDeclStatement	gs_c_param_list list ;	165:4:4927:4947	10866150	2	True				
ANR	10866172	IdentifierDecl	list		10866150	0					
ANR	10866173	IdentifierDeclType	gs_c_param_list		10866150	0					
ANR	10866174	Identifier	list		10866150	1					
ANR	10866175	IdentifierDeclStatement	int code ;	166:4:4953:4961	10866150	3	True				
ANR	10866176	IdentifierDecl	code		10866150	0					
ANR	10866177	IdentifierDeclType	int		10866150	0					
ANR	10866178	Identifier	code		10866150	1					
ANR	10866179	ExpressionStatement	code = gs_opendevice ( pdevice )	168:4:4968:4997	10866150	4	True				
ANR	10866180	AssignmentExpression	code = gs_opendevice ( pdevice )		10866150	0		=			
ANR	10866181	Identifier	code		10866150	0					
ANR	10866182	CallExpression	gs_opendevice ( pdevice )		10866150	1					
ANR	10866183	Callee	gs_opendevice		10866150	0					
ANR	10866184	Identifier	gs_opendevice		10866150	0					
ANR	10866185	ArgumentList	pdevice		10866150	1					
ANR	10866186	Argument	pdevice		10866150	0					
ANR	10866187	Identifier	pdevice		10866150	0					
ANR	10866188	IfStatement	if ( code < 0 )		10866150	5					
ANR	10866189	Condition	code < 0	169:8:5007:5014	10866150	0	True				
ANR	10866190	RelationalExpression	code < 0		10866150	0		<			
ANR	10866191	Identifier	code		10866150	0					
ANR	10866192	PrimaryExpression	0		10866150	1					
ANR	10866193	GotoStatement	goto cleanup_setdevice ;	170:8:5025:5047	10866150	1	True				
ANR	10866194	Identifier	cleanup_setdevice		10866150	0					
ANR	10866195	ExpressionStatement	"code = gs_setdevice_no_erase ( ctx -> pgs , pdevice )"	172:4:5054:5101	10866150	6	True				
ANR	10866196	AssignmentExpression	"code = gs_setdevice_no_erase ( ctx -> pgs , pdevice )"		10866150	0		=			
ANR	10866197	Identifier	code		10866150	0					
ANR	10866198	CallExpression	"gs_setdevice_no_erase ( ctx -> pgs , pdevice )"		10866150	1					
ANR	10866199	Callee	gs_setdevice_no_erase		10866150	0					
ANR	10866200	Identifier	gs_setdevice_no_erase		10866150	0					
ANR	10866201	ArgumentList	ctx -> pgs		10866150	1					
ANR	10866202	Argument	ctx -> pgs		10866150	0					
ANR	10866203	PtrMemberAccess	ctx -> pgs		10866150	0					
ANR	10866204	Identifier	ctx		10866150	0					
ANR	10866205	Identifier	pgs		10866150	1					
ANR	10866206	Argument	pdevice		10866150	1					
ANR	10866207	Identifier	pdevice		10866150	0					
ANR	10866208	IfStatement	if ( code < 0 )		10866150	7					
ANR	10866209	Condition	code < 0	173:8:5111:5118	10866150	0	True				
ANR	10866210	RelationalExpression	code < 0		10866150	0		<			
ANR	10866211	Identifier	code		10866150	0					
ANR	10866212	PrimaryExpression	0		10866150	1					
ANR	10866213	GotoStatement	goto cleanup_setdevice ;	174:8:5129:5151	10866150	1	True				
ANR	10866214	Identifier	cleanup_setdevice		10866150	0					
ANR	10866215	ExpressionStatement	"gs_c_param_list_write ( & list , pdevice -> memory )"	177:4:5220:5265	10866150	8	True				
ANR	10866216	CallExpression	"gs_c_param_list_write ( & list , pdevice -> memory )"		10866150	0					
ANR	10866217	Callee	gs_c_param_list_write		10866150	0					
ANR	10866218	Identifier	gs_c_param_list_write		10866150	0					
ANR	10866219	ArgumentList	& list		10866150	1					
ANR	10866220	Argument	& list		10866150	0					
ANR	10866221	UnaryOperationExpression	& list		10866150	0					
ANR	10866222	UnaryOperator	&		10866150	0					
ANR	10866223	Identifier	list		10866150	1					
ANR	10866224	Argument	pdevice -> memory		10866150	1					
ANR	10866225	PtrMemberAccess	pdevice -> memory		10866150	0					
ANR	10866226	Identifier	pdevice		10866150	0					
ANR	10866227	Identifier	memory		10866150	1					
ANR	10866228	ExpressionStatement	"code = gs_getdeviceparams ( pdevice , ( gs_param_list * ) & list )"	178:4:5271:5329	10866150	9	True				
ANR	10866229	AssignmentExpression	"code = gs_getdeviceparams ( pdevice , ( gs_param_list * ) & list )"		10866150	0		=			
ANR	10866230	Identifier	code		10866150	0					
ANR	10866231	CallExpression	"gs_getdeviceparams ( pdevice , ( gs_param_list * ) & list )"		10866150	1					
ANR	10866232	Callee	gs_getdeviceparams		10866150	0					
ANR	10866233	Identifier	gs_getdeviceparams		10866150	0					
ANR	10866234	ArgumentList	pdevice		10866150	1					
ANR	10866235	Argument	pdevice		10866150	0					
ANR	10866236	Identifier	pdevice		10866150	0					
ANR	10866237	Argument	( gs_param_list * ) & list		10866150	1					
ANR	10866238	CastExpression	( gs_param_list * ) & list		10866150	0					
ANR	10866239	CastTarget	gs_param_list *		10866150	0					
ANR	10866240	UnaryOperationExpression	& list		10866150	1					
ANR	10866241	UnaryOperator	&		10866150	0					
ANR	10866242	Identifier	list		10866150	1					
ANR	10866243	IfStatement	if ( code >= 0 )		10866150	10					
ANR	10866244	Condition	code >= 0	179:8:5339:5347	10866150	0	True				
ANR	10866245	RelationalExpression	code >= 0		10866150	0		>=			
ANR	10866246	Identifier	code		10866150	0					
ANR	10866247	PrimaryExpression	0		10866150	1					
ANR	10866248	CompoundStatement		18:19:532:532	10866150	1					
ANR	10866249	ExpressionStatement	gs_c_param_list_read ( & list )	180:8:5360:5387	10866150	0	True				
ANR	10866250	CallExpression	gs_c_param_list_read ( & list )		10866150	0					
ANR	10866251	Callee	gs_c_param_list_read		10866150	0					
ANR	10866252	Identifier	gs_c_param_list_read		10866150	0					
ANR	10866253	ArgumentList	& list		10866150	1					
ANR	10866254	Argument	& list		10866150	0					
ANR	10866255	UnaryOperationExpression	& list		10866150	0					
ANR	10866256	UnaryOperator	&		10866150	0					
ANR	10866257	Identifier	list		10866150	1					
ANR	10866258	ExpressionStatement	"code = param_read_bool ( ( gs_param_list * ) & list , ""PreserveTrMode"" , & ctx -> preserve_tr_mode )"	181:8:5397:5485	10866150	1	True				
ANR	10866259	AssignmentExpression	"code = param_read_bool ( ( gs_param_list * ) & list , ""PreserveTrMode"" , & ctx -> preserve_tr_mode )"		10866150	0		=			
ANR	10866260	Identifier	code		10866150	0					
ANR	10866261	CallExpression	"param_read_bool ( ( gs_param_list * ) & list , ""PreserveTrMode"" , & ctx -> preserve_tr_mode )"		10866150	1					
ANR	10866262	Callee	param_read_bool		10866150	0					
ANR	10866263	Identifier	param_read_bool		10866150	0					
ANR	10866264	ArgumentList	( gs_param_list * ) & list		10866150	1					
ANR	10866265	Argument	( gs_param_list * ) & list		10866150	0					
ANR	10866266	CastExpression	( gs_param_list * ) & list		10866150	0					
ANR	10866267	CastTarget	gs_param_list *		10866150	0					
ANR	10866268	UnaryOperationExpression	& list		10866150	1					
ANR	10866269	UnaryOperator	&		10866150	0					
ANR	10866270	Identifier	list		10866150	1					
ANR	10866271	Argument	"""PreserveTrMode"""		10866150	1					
ANR	10866272	PrimaryExpression	"""PreserveTrMode"""		10866150	0					
ANR	10866273	Argument	& ctx -> preserve_tr_mode		10866150	2					
ANR	10866274	UnaryOperationExpression	& ctx -> preserve_tr_mode		10866150	0					
ANR	10866275	UnaryOperator	&		10866150	0					
ANR	10866276	PtrMemberAccess	ctx -> preserve_tr_mode		10866150	1					
ANR	10866277	Identifier	ctx		10866150	0					
ANR	10866278	Identifier	preserve_tr_mode		10866150	1					
ANR	10866279	ExpressionStatement	gs_c_param_list_release ( & list )	183:4:5497:5527	10866150	11	True				
ANR	10866280	CallExpression	gs_c_param_list_release ( & list )		10866150	0					
ANR	10866281	Callee	gs_c_param_list_release		10866150	0					
ANR	10866282	Identifier	gs_c_param_list_release		10866150	0					
ANR	10866283	ArgumentList	& list		10866150	1					
ANR	10866284	Argument	& list		10866150	0					
ANR	10866285	UnaryOperationExpression	& list		10866150	0					
ANR	10866286	UnaryOperator	&		10866150	0					
ANR	10866287	Identifier	list		10866150	1					
ANR	10866288	IfStatement	if ( code < 0 )		10866150	12					
ANR	10866289	Condition	code < 0	184:8:5537:5544	10866150	0	True				
ANR	10866290	RelationalExpression	code < 0		10866150	0		<			
ANR	10866291	Identifier	code		10866150	0					
ANR	10866292	PrimaryExpression	0		10866150	1					
ANR	10866293	ReturnStatement	return code ;	185:8:5555:5566	10866150	1	True				
ANR	10866294	Identifier	code		10866150	0					
ANR	10866295	ExpressionStatement	"gs_setaccuratecurves ( ctx -> pgs , true )"	187:4:5573:5609	10866150	13	True				
ANR	10866296	CallExpression	"gs_setaccuratecurves ( ctx -> pgs , true )"		10866150	0					
ANR	10866297	Callee	gs_setaccuratecurves		10866150	0					
ANR	10866298	Identifier	gs_setaccuratecurves		10866150	0					
ANR	10866299	ArgumentList	ctx -> pgs		10866150	1					
ANR	10866300	Argument	ctx -> pgs		10866150	0					
ANR	10866301	PtrMemberAccess	ctx -> pgs		10866150	0					
ANR	10866302	Identifier	ctx		10866150	0					
ANR	10866303	Identifier	pgs		10866150	1					
ANR	10866304	Argument	true		10866150	1					
ANR	10866305	Identifier	true		10866150	0					
ANR	10866306	ExpressionStatement	"gs_setfilladjust ( ctx -> pgs , 0 , 0 )"	188:4:5633:5665	10866150	14	True				
ANR	10866307	CallExpression	"gs_setfilladjust ( ctx -> pgs , 0 , 0 )"		10866150	0					
ANR	10866308	Callee	gs_setfilladjust		10866150	0					
ANR	10866309	Identifier	gs_setfilladjust		10866150	0					
ANR	10866310	ArgumentList	ctx -> pgs		10866150	1					
ANR	10866311	Argument	ctx -> pgs		10866150	0					
ANR	10866312	PtrMemberAccess	ctx -> pgs		10866150	0					
ANR	10866313	Identifier	ctx		10866150	0					
ANR	10866314	Identifier	pgs		10866150	1					
ANR	10866315	Argument	0		10866150	1					
ANR	10866316	PrimaryExpression	0		10866150	0					
ANR	10866317	Argument	0		10866150	2					
ANR	10866318	PrimaryExpression	0		10866150	0					
ANR	10866319	ExpressionStatement	"( void ) xps_set_icc_user_params ( impl , ctx -> pgs )"	189:4:5671:5716	10866150	15	True				
ANR	10866320	CastExpression	"( void ) xps_set_icc_user_params ( impl , ctx -> pgs )"		10866150	0					
ANR	10866321	CastTarget	void		10866150	0					
ANR	10866322	CallExpression	"xps_set_icc_user_params ( impl , ctx -> pgs )"		10866150	1					
ANR	10866323	Callee	xps_set_icc_user_params		10866150	0					
ANR	10866324	Identifier	xps_set_icc_user_params		10866150	0					
ANR	10866325	ArgumentList	impl		10866150	1					
ANR	10866326	Argument	impl		10866150	0					
ANR	10866327	Identifier	impl		10866150	0					
ANR	10866328	Argument	ctx -> pgs		10866150	1					
ANR	10866329	PtrMemberAccess	ctx -> pgs		10866150	0					
ANR	10866330	Identifier	ctx		10866150	0					
ANR	10866331	Identifier	pgs		10866150	1					
ANR	10866332	ExpressionStatement	"xps_set_nocache ( impl , ctx -> fontdir )"	190:4:5722:5757	10866150	16	True				
ANR	10866333	CallExpression	"xps_set_nocache ( impl , ctx -> fontdir )"		10866150	0					
ANR	10866334	Callee	xps_set_nocache		10866150	0					
ANR	10866335	Identifier	xps_set_nocache		10866150	0					
ANR	10866336	ArgumentList	impl		10866150	1					
ANR	10866337	Argument	impl		10866150	0					
ANR	10866338	Identifier	impl		10866150	0					
ANR	10866339	Argument	ctx -> fontdir		10866150	1					
ANR	10866340	PtrMemberAccess	ctx -> fontdir		10866150	0					
ANR	10866341	Identifier	ctx		10866150	0					
ANR	10866342	Identifier	fontdir		10866150	1					
ANR	10866343	ExpressionStatement	"gs_setscanconverter ( ctx -> pgs , pl_main_get_scanconverter ( ctx -> memory ) )"	192:4:5764:5833	10866150	17	True				
ANR	10866344	CallExpression	"gs_setscanconverter ( ctx -> pgs , pl_main_get_scanconverter ( ctx -> memory ) )"		10866150	0					
ANR	10866345	Callee	gs_setscanconverter		10866150	0					
ANR	10866346	Identifier	gs_setscanconverter		10866150	0					
ANR	10866347	ArgumentList	ctx -> pgs		10866150	1					
ANR	10866348	Argument	ctx -> pgs		10866150	0					
ANR	10866349	PtrMemberAccess	ctx -> pgs		10866150	0					
ANR	10866350	Identifier	ctx		10866150	0					
ANR	10866351	Identifier	pgs		10866150	1					
ANR	10866352	Argument	pl_main_get_scanconverter ( ctx -> memory )		10866150	1					
ANR	10866353	CallExpression	pl_main_get_scanconverter ( ctx -> memory )		10866150	0					
ANR	10866354	Callee	pl_main_get_scanconverter		10866150	0					
ANR	10866355	Identifier	pl_main_get_scanconverter		10866150	0					
ANR	10866356	ArgumentList	ctx -> memory		10866150	1					
ANR	10866357	Argument	ctx -> memory		10866150	0					
ANR	10866358	PtrMemberAccess	ctx -> memory		10866150	0					
ANR	10866359	Identifier	ctx		10866150	0					
ANR	10866360	Identifier	memory		10866150	1					
ANR	10866361	ExpressionStatement	code = gs_gsave ( ctx -> pgs )	197:4:5995:6020	10866150	18	True				
ANR	10866362	AssignmentExpression	code = gs_gsave ( ctx -> pgs )		10866150	0		=			
ANR	10866363	Identifier	code		10866150	0					
ANR	10866364	CallExpression	gs_gsave ( ctx -> pgs )		10866150	1					
ANR	10866365	Callee	gs_gsave		10866150	0					
ANR	10866366	Identifier	gs_gsave		10866150	0					
ANR	10866367	ArgumentList	ctx -> pgs		10866150	1					
ANR	10866368	Argument	ctx -> pgs		10866150	0					
ANR	10866369	PtrMemberAccess	ctx -> pgs		10866150	0					
ANR	10866370	Identifier	ctx		10866150	0					
ANR	10866371	Identifier	pgs		10866150	1					
ANR	10866372	IfStatement	if ( code < 0 )		10866150	19					
ANR	10866373	Condition	code < 0	198:8:6030:6037	10866150	0	True				
ANR	10866374	RelationalExpression	code < 0		10866150	0		<			
ANR	10866375	Identifier	code		10866150	0					
ANR	10866376	PrimaryExpression	0		10866150	1					
ANR	10866377	GotoStatement	goto cleanup_gsave ;	199:8:6048:6066	10866150	1	True				
ANR	10866378	Identifier	cleanup_gsave		10866150	0					
ANR	10866379	ExpressionStatement	code = gs_erasepage ( ctx -> pgs )	201:4:6073:6102	10866150	20	True				
ANR	10866380	AssignmentExpression	code = gs_erasepage ( ctx -> pgs )		10866150	0		=			
ANR	10866381	Identifier	code		10866150	0					
ANR	10866382	CallExpression	gs_erasepage ( ctx -> pgs )		10866150	1					
ANR	10866383	Callee	gs_erasepage		10866150	0					
ANR	10866384	Identifier	gs_erasepage		10866150	0					
ANR	10866385	ArgumentList	ctx -> pgs		10866150	1					
ANR	10866386	Argument	ctx -> pgs		10866150	0					
ANR	10866387	PtrMemberAccess	ctx -> pgs		10866150	0					
ANR	10866388	Identifier	ctx		10866150	0					
ANR	10866389	Identifier	pgs		10866150	1					
ANR	10866390	IfStatement	if ( code < 0 )		10866150	21					
ANR	10866391	Condition	code < 0	202:8:6112:6119	10866150	0	True				
ANR	10866392	RelationalExpression	code < 0		10866150	0		<			
ANR	10866393	Identifier	code		10866150	0					
ANR	10866394	PrimaryExpression	0		10866150	1					
ANR	10866395	GotoStatement	goto cleanup_erase ;	203:8:6130:6148	10866150	1	True				
ANR	10866396	Identifier	cleanup_erase		10866150	0					
ANR	10866397	ExpressionStatement	"code = xps_install_halftone ( ctx , pdevice )"	205:4:6155:6196	10866150	22	True				
ANR	10866398	AssignmentExpression	"code = xps_install_halftone ( ctx , pdevice )"		10866150	0		=			
ANR	10866399	Identifier	code		10866150	0					
ANR	10866400	CallExpression	"xps_install_halftone ( ctx , pdevice )"		10866150	1					
ANR	10866401	Callee	xps_install_halftone		10866150	0					
ANR	10866402	Identifier	xps_install_halftone		10866150	0					
ANR	10866403	ArgumentList	ctx		10866150	1					
ANR	10866404	Argument	ctx		10866150	0					
ANR	10866405	Identifier	ctx		10866150	0					
ANR	10866406	Argument	pdevice		10866150	1					
ANR	10866407	Identifier	pdevice		10866150	0					
ANR	10866408	IfStatement	if ( code < 0 )		10866150	23					
ANR	10866409	Condition	code < 0	206:8:6206:6213	10866150	0	True				
ANR	10866410	RelationalExpression	code < 0		10866150	0		<			
ANR	10866411	Identifier	code		10866150	0					
ANR	10866412	PrimaryExpression	0		10866150	1					
ANR	10866413	GotoStatement	goto cleanup_halftone ;	207:8:6224:6245	10866150	1	True				
ANR	10866414	Identifier	cleanup_halftone		10866150	0					
ANR	10866415	ReturnStatement	return 0 ;	209:4:6252:6260	10866150	24	True				
ANR	10866416	PrimaryExpression	0		10866150	0					
ANR	10866417	Label	cleanup_halftone :	211:0:6263:6279	10866150	25	True				
ANR	10866418	Identifier	cleanup_halftone		10866150	0					
ANR	10866419	Label	cleanup_erase :	212:0:6281:6294	10866150	26	True				
ANR	10866420	Identifier	cleanup_erase		10866150	0					
ANR	10866421	ExpressionStatement	gs_grestore_only ( ctx -> pgs )	214:4:6321:6347	10866150	27	True				
ANR	10866422	CallExpression	gs_grestore_only ( ctx -> pgs )		10866150	0					
ANR	10866423	Callee	gs_grestore_only		10866150	0					
ANR	10866424	Identifier	gs_grestore_only		10866150	0					
ANR	10866425	ArgumentList	ctx -> pgs		10866150	1					
ANR	10866426	Argument	ctx -> pgs		10866150	0					
ANR	10866427	PtrMemberAccess	ctx -> pgs		10866150	0					
ANR	10866428	Identifier	ctx		10866150	0					
ANR	10866429	Identifier	pgs		10866150	1					
ANR	10866430	Label	cleanup_gsave :	216:0:6383:6396	10866150	28	True				
ANR	10866431	Identifier	cleanup_gsave		10866150	0					
ANR	10866432	ExpressionStatement	gs_nulldevice ( ctx -> pgs )	218:4:6427:6450	10866150	29	True				
ANR	10866433	CallExpression	gs_nulldevice ( ctx -> pgs )		10866150	0					
ANR	10866434	Callee	gs_nulldevice		10866150	0					
ANR	10866435	Identifier	gs_nulldevice		10866150	0					
ANR	10866436	ArgumentList	ctx -> pgs		10866150	1					
ANR	10866437	Argument	ctx -> pgs		10866150	0					
ANR	10866438	PtrMemberAccess	ctx -> pgs		10866150	0					
ANR	10866439	Identifier	ctx		10866150	0					
ANR	10866440	Identifier	pgs		10866150	1					
ANR	10866441	Label	cleanup_setdevice :	220:0:6453:6470	10866150	30	True				
ANR	10866442	Identifier	cleanup_setdevice		10866150	0					
ANR	10866443	ReturnStatement	return code ;	222:4:6502:6513	10866150	31	True				
ANR	10866444	Identifier	code		10866150	0					
ANR	10866445	ReturnType	static int		10866150	1					
ANR	10866446	Identifier	xps_imp_set_device		10866150	2					
ANR	10866447	ParameterList	"pl_interp_implementation_t * impl , gx_device * pdevice"		10866150	3					
ANR	10866448	Parameter	pl_interp_implementation_t * impl	161:19:4763:4794	10866150	0	True				
ANR	10866449	ParameterType	pl_interp_implementation_t *		10866150	0					
ANR	10866450	Identifier	impl		10866150	1					
ANR	10866451	Parameter	gx_device * pdevice	161:53:4797:4814	10866150	1	True				
ANR	10866452	ParameterType	gx_device *		10866150	0					
ANR	10866453	Identifier	pdevice		10866150	1					
ANR	10866454	CFGEntryNode	ENTRY		10866150		True				
ANR	10866455	CFGExitNode	EXIT		10866150		True				
ANR	10866456	Symbol	instance		10866150						
ANR	10866457	Symbol	code		10866150						
ANR	10866458	Symbol	ctx -> fontdir		10866150						
ANR	10866459	Symbol	impl -> interp_client_data		10866150						
ANR	10866460	Symbol	ctx -> pgs		10866150						
ANR	10866461	Symbol	gs_opendevice		10866150						
ANR	10866462	Symbol	* impl		10866150						
ANR	10866463	Symbol	impl		10866150						
ANR	10866464	Symbol	gs_gsave		10866150						
ANR	10866465	Symbol	* pdevice		10866150						
ANR	10866466	Symbol	& list		10866150						
ANR	10866467	Symbol	instance -> ctx		10866150						
ANR	10866468	Symbol	gs_erasepage		10866150						
ANR	10866469	Symbol	gs_setdevice_no_erase		10866150						
ANR	10866470	Symbol	xps_install_halftone		10866150						
ANR	10866471	Symbol	pdevice		10866150						
ANR	10866472	Symbol	ctx		10866150						
ANR	10866473	Symbol	param_read_bool		10866150						
ANR	10866474	Symbol	pl_main_get_scanconverter		10866150						
ANR	10866475	Symbol	list		10866150						
ANR	10866476	Symbol	* ctx		10866150						
ANR	10866477	Symbol	ctx -> memory		10866150						
ANR	10866478	Symbol	& ctx -> preserve_tr_mode		10866150						
ANR	10866479	Symbol	gs_getdeviceparams		10866150						
ANR	10866480	Symbol	true		10866150						
ANR	10866481	Symbol	* instance		10866150						
ANR	10866482	Symbol	pdevice -> memory		10866150						
ANR	10866483	Function	xps_imp_process_file	226:0:6559:6905							
ANR	10866484	FunctionDef	"xps_imp_process_file (pl_interp_implementation_t * impl , char * filename)"		10866483	0					
ANR	10866485	CompoundStatement		228:0:6641:6905	10866483	0					
ANR	10866486	IdentifierDeclStatement	xps_interp_instance_t * instance = impl -> interp_client_data ;	229:4:6647:6705	10866483	0	True				
ANR	10866487	IdentifierDecl	* instance = impl -> interp_client_data		10866483	0					
ANR	10866488	IdentifierDeclType	xps_interp_instance_t *		10866483	0					
ANR	10866489	Identifier	instance		10866483	1					
ANR	10866490	AssignmentExpression	* instance = impl -> interp_client_data		10866483	2		=			
ANR	10866491	Identifier	instance		10866483	0					
ANR	10866492	PtrMemberAccess	impl -> interp_client_data		10866483	1					
ANR	10866493	Identifier	impl		10866483	0					
ANR	10866494	Identifier	interp_client_data		10866483	1					
ANR	10866495	IdentifierDeclStatement	xps_context_t * ctx = instance -> ctx ;	230:4:6711:6745	10866483	1	True				
ANR	10866496	IdentifierDecl	* ctx = instance -> ctx		10866483	0					
ANR	10866497	IdentifierDeclType	xps_context_t *		10866483	0					
ANR	10866498	Identifier	ctx		10866483	1					
ANR	10866499	AssignmentExpression	* ctx = instance -> ctx		10866483	2		=			
ANR	10866500	Identifier	ctx		10866483	0					
ANR	10866501	PtrMemberAccess	instance -> ctx		10866483	1					
ANR	10866502	Identifier	instance		10866483	0					
ANR	10866503	Identifier	ctx		10866483	1					
ANR	10866504	IdentifierDeclStatement	int code ;	231:4:6751:6759	10866483	2	True				
ANR	10866505	IdentifierDecl	code		10866483	0					
ANR	10866506	IdentifierDeclType	int		10866483	0					
ANR	10866507	Identifier	code		10866483	1					
ANR	10866508	ExpressionStatement	"code = xps_process_file ( ctx , filename )"	233:4:6766:6804	10866483	3	True				
ANR	10866509	AssignmentExpression	"code = xps_process_file ( ctx , filename )"		10866483	0		=			
ANR	10866510	Identifier	code		10866483	0					
ANR	10866511	CallExpression	"xps_process_file ( ctx , filename )"		10866483	1					
ANR	10866512	Callee	xps_process_file		10866483	0					
ANR	10866513	Identifier	xps_process_file		10866483	0					
ANR	10866514	ArgumentList	ctx		10866483	1					
ANR	10866515	Argument	ctx		10866483	0					
ANR	10866516	Identifier	ctx		10866483	0					
ANR	10866517	Argument	filename		10866483	1					
ANR	10866518	Identifier	filename		10866483	0					
ANR	10866519	IfStatement	if ( code )		10866483	4					
ANR	10866520	Condition	code	234:8:6814:6817	10866483	0	True				
ANR	10866521	Identifier	code		10866483	0					
ANR	10866522	ExpressionStatement	"gs_catch1 ( code , ""cannot process xps file '%s'"" , filename )"	235:8:6828:6885	10866483	1	True				
ANR	10866523	CallExpression	"gs_catch1 ( code , ""cannot process xps file '%s'"" , filename )"		10866483	0					
ANR	10866524	Callee	gs_catch1		10866483	0					
ANR	10866525	Identifier	gs_catch1		10866483	0					
ANR	10866526	ArgumentList	code		10866483	1					
ANR	10866527	Argument	code		10866483	0					
ANR	10866528	Identifier	code		10866483	0					
ANR	10866529	Argument	"""cannot process xps file '%s'"""		10866483	1					
ANR	10866530	PrimaryExpression	"""cannot process xps file '%s'"""		10866483	0					
ANR	10866531	Argument	filename		10866483	2					
ANR	10866532	Identifier	filename		10866483	0					
ANR	10866533	ReturnStatement	return code ;	237:4:6892:6903	10866483	5	True				
ANR	10866534	Identifier	code		10866483	0					
ANR	10866535	ReturnType	static int		10866483	1					
ANR	10866536	Identifier	xps_imp_process_file		10866483	2					
ANR	10866537	ParameterList	"pl_interp_implementation_t * impl , char * filename"		10866483	3					
ANR	10866538	Parameter	pl_interp_implementation_t * impl	227:21:6591:6622	10866483	0	True				
ANR	10866539	ParameterType	pl_interp_implementation_t *		10866483	0					
ANR	10866540	Identifier	impl		10866483	1					
ANR	10866541	Parameter	char * filename	227:55:6625:6638	10866483	1	True				
ANR	10866542	ParameterType	char *		10866483	0					
ANR	10866543	Identifier	filename		10866483	1					
ANR	10866544	CFGEntryNode	ENTRY		10866483		True				
ANR	10866545	CFGExitNode	EXIT		10866483		True				
ANR	10866546	Symbol	impl		10866483						
ANR	10866547	Symbol	filename		10866483						
ANR	10866548	Symbol	instance		10866483						
ANR	10866549	Symbol	code		10866483						
ANR	10866550	Symbol	ctx		10866483						
ANR	10866551	Symbol	instance -> ctx		10866483						
ANR	10866552	Symbol	impl -> interp_client_data		10866483						
ANR	10866553	Symbol	* impl		10866483						
ANR	10866554	Symbol	xps_process_file		10866483						
ANR	10866555	Symbol	* instance		10866483						
ANR	10866556	Function	xps_imp_process	241:0:6942:7895							
ANR	10866557	FunctionDef	"xps_imp_process (pl_interp_implementation_t * impl , stream_cursor_read * cursor)"		10866556	0					
ANR	10866558	CompoundStatement		243:0:7031:7895	10866556	0					
ANR	10866559	IdentifierDeclStatement	xps_interp_instance_t * instance = impl -> interp_client_data ;	244:4:7037:7095	10866556	0	True				
ANR	10866560	IdentifierDecl	* instance = impl -> interp_client_data		10866556	0					
ANR	10866561	IdentifierDeclType	xps_interp_instance_t *		10866556	0					
ANR	10866562	Identifier	instance		10866556	1					
ANR	10866563	AssignmentExpression	* instance = impl -> interp_client_data		10866556	2		=			
ANR	10866564	Identifier	instance		10866556	0					
ANR	10866565	PtrMemberAccess	impl -> interp_client_data		10866556	1					
ANR	10866566	Identifier	impl		10866556	0					
ANR	10866567	Identifier	interp_client_data		10866556	1					
ANR	10866568	IdentifierDeclStatement	xps_context_t * ctx = instance -> ctx ;	245:4:7101:7135	10866556	1	True				
ANR	10866569	IdentifierDecl	* ctx = instance -> ctx		10866556	0					
ANR	10866570	IdentifierDeclType	xps_context_t *		10866556	0					
ANR	10866571	Identifier	ctx		10866556	1					
ANR	10866572	AssignmentExpression	* ctx = instance -> ctx		10866556	2		=			
ANR	10866573	Identifier	ctx		10866556	0					
ANR	10866574	PtrMemberAccess	instance -> ctx		10866556	1					
ANR	10866575	Identifier	instance		10866556	0					
ANR	10866576	Identifier	ctx		10866556	1					
ANR	10866577	IdentifierDeclStatement	"int avail , n ;"	246:4:7141:7153	10866556	2	True				
ANR	10866578	IdentifierDecl	avail		10866556	0					
ANR	10866579	IdentifierDeclType	int		10866556	0					
ANR	10866580	Identifier	avail		10866556	1					
ANR	10866581	IdentifierDecl	n		10866556	1					
ANR	10866582	IdentifierDeclType	int		10866556	0					
ANR	10866583	Identifier	n		10866556	1					
ANR	10866584	IfStatement	if ( ! instance -> scratch_file )		10866556	3					
ANR	10866585	Condition	! instance -> scratch_file	248:8:7164:7186	10866556	0	True				
ANR	10866586	UnaryOperationExpression	! instance -> scratch_file		10866556	0					
ANR	10866587	UnaryOperator	!		10866556	0					
ANR	10866588	PtrMemberAccess	instance -> scratch_file		10866556	1					
ANR	10866589	Identifier	instance		10866556	0					
ANR	10866590	Identifier	scratch_file		10866556	1					
ANR	10866591	CompoundStatement		7:4:161:161	10866556	1					
ANR	10866592	ExpressionStatement	"instance -> scratch_file = gp_open_scratch_file ( ctx -> memory , ""ghostxps-scratch-"" , instance -> scratch_name , ""wb"" )"	250:8:7203:7324	10866556	0	True				
ANR	10866593	AssignmentExpression	"instance -> scratch_file = gp_open_scratch_file ( ctx -> memory , ""ghostxps-scratch-"" , instance -> scratch_name , ""wb"" )"		10866556	0		=			
ANR	10866594	PtrMemberAccess	instance -> scratch_file		10866556	0					
ANR	10866595	Identifier	instance		10866556	0					
ANR	10866596	Identifier	scratch_file		10866556	1					
ANR	10866597	CallExpression	"gp_open_scratch_file ( ctx -> memory , ""ghostxps-scratch-"" , instance -> scratch_name , ""wb"" )"		10866556	1					
ANR	10866598	Callee	gp_open_scratch_file		10866556	0					
ANR	10866599	Identifier	gp_open_scratch_file		10866556	0					
ANR	10866600	ArgumentList	ctx -> memory		10866556	1					
ANR	10866601	Argument	ctx -> memory		10866556	0					
ANR	10866602	PtrMemberAccess	ctx -> memory		10866556	0					
ANR	10866603	Identifier	ctx		10866556	0					
ANR	10866604	Identifier	memory		10866556	1					
ANR	10866605	Argument	"""ghostxps-scratch-"""		10866556	1					
ANR	10866606	PrimaryExpression	"""ghostxps-scratch-"""		10866556	0					
ANR	10866607	Argument	instance -> scratch_name		10866556	2					
ANR	10866608	PtrMemberAccess	instance -> scratch_name		10866556	0					
ANR	10866609	Identifier	instance		10866556	0					
ANR	10866610	Identifier	scratch_name		10866556	1					
ANR	10866611	Argument	"""wb"""		10866556	3					
ANR	10866612	PrimaryExpression	"""wb"""		10866556	0					
ANR	10866613	IfStatement	if ( ! instance -> scratch_file )		10866556	1					
ANR	10866614	Condition	! instance -> scratch_file	252:12:7338:7360	10866556	0	True				
ANR	10866615	UnaryOperationExpression	! instance -> scratch_file		10866556	0					
ANR	10866616	UnaryOperator	!		10866556	0					
ANR	10866617	PtrMemberAccess	instance -> scratch_file		10866556	1					
ANR	10866618	Identifier	instance		10866556	0					
ANR	10866619	Identifier	scratch_file		10866556	1					
ANR	10866620	CompoundStatement		11:8:339:339	10866556	1					
ANR	10866621	ExpressionStatement	"gs_catch ( gs_error_invalidfileaccess , ""cannot open scratch file"" )"	254:12:7385:7449	10866556	0	True				
ANR	10866622	CallExpression	"gs_catch ( gs_error_invalidfileaccess , ""cannot open scratch file"" )"		10866556	0					
ANR	10866623	Callee	gs_catch		10866556	0					
ANR	10866624	Identifier	gs_catch		10866556	0					
ANR	10866625	ArgumentList	gs_error_invalidfileaccess		10866556	1					
ANR	10866626	Argument	gs_error_invalidfileaccess		10866556	0					
ANR	10866627	Identifier	gs_error_invalidfileaccess		10866556	0					
ANR	10866628	Argument	"""cannot open scratch file"""		10866556	1					
ANR	10866629	PrimaryExpression	"""cannot open scratch file"""		10866556	0					
ANR	10866630	ReturnStatement	return e_ExitLanguage ;	255:12:7463:7484	10866556	1	True				
ANR	10866631	Identifier	e_ExitLanguage		10866556	0					
ANR	10866632	ExpressionStatement	"if_debug1m ( '|' , ctx -> memory , ""xps: open scratch file '%s'\\n"" , instance -> scratch_name )"	257:8:7504:7589	10866556	2	True				
ANR	10866633	CallExpression	"if_debug1m ( '|' , ctx -> memory , ""xps: open scratch file '%s'\\n"" , instance -> scratch_name )"		10866556	0					
ANR	10866634	Callee	if_debug1m		10866556	0					
ANR	10866635	Identifier	if_debug1m		10866556	0					
ANR	10866636	ArgumentList	'|'		10866556	1					
ANR	10866637	Argument	'|'		10866556	0					
ANR	10866638	PrimaryExpression	'|'		10866556	0					
ANR	10866639	Argument	ctx -> memory		10866556	1					
ANR	10866640	PtrMemberAccess	ctx -> memory		10866556	0					
ANR	10866641	Identifier	ctx		10866556	0					
ANR	10866642	Identifier	memory		10866556	1					
ANR	10866643	Argument	"""xps: open scratch file '%s'\\n"""		10866556	2					
ANR	10866644	PrimaryExpression	"""xps: open scratch file '%s'\\n"""		10866556	0					
ANR	10866645	Argument	instance -> scratch_name		10866556	3					
ANR	10866646	PtrMemberAccess	instance -> scratch_name		10866556	0					
ANR	10866647	Identifier	instance		10866556	0					
ANR	10866648	Identifier	scratch_name		10866556	1					
ANR	10866649	ExpressionStatement	avail = cursor -> limit - cursor -> ptr	260:4:7602:7637	10866556	4	True				
ANR	10866650	AssignmentExpression	avail = cursor -> limit - cursor -> ptr		10866556	0		=			
ANR	10866651	Identifier	avail		10866556	0					
ANR	10866652	AdditiveExpression	cursor -> limit - cursor -> ptr		10866556	1		-			
ANR	10866653	PtrMemberAccess	cursor -> limit		10866556	0					
ANR	10866654	Identifier	cursor		10866556	0					
ANR	10866655	Identifier	limit		10866556	1					
ANR	10866656	PtrMemberAccess	cursor -> ptr		10866556	1					
ANR	10866657	Identifier	cursor		10866556	0					
ANR	10866658	Identifier	ptr		10866556	1					
ANR	10866659	ExpressionStatement	"n = fwrite ( cursor -> ptr + 1 , 1 , avail , instance -> scratch_file )"	261:4:7643:7704	10866556	5	True				
ANR	10866660	AssignmentExpression	"n = fwrite ( cursor -> ptr + 1 , 1 , avail , instance -> scratch_file )"		10866556	0		=			
ANR	10866661	Identifier	n		10866556	0					
ANR	10866662	CallExpression	"fwrite ( cursor -> ptr + 1 , 1 , avail , instance -> scratch_file )"		10866556	1					
ANR	10866663	Callee	fwrite		10866556	0					
ANR	10866664	Identifier	fwrite		10866556	0					
ANR	10866665	ArgumentList	cursor -> ptr + 1		10866556	1					
ANR	10866666	Argument	cursor -> ptr + 1		10866556	0					
ANR	10866667	AdditiveExpression	cursor -> ptr + 1		10866556	0		+			
ANR	10866668	PtrMemberAccess	cursor -> ptr		10866556	0					
ANR	10866669	Identifier	cursor		10866556	0					
ANR	10866670	Identifier	ptr		10866556	1					
ANR	10866671	PrimaryExpression	1		10866556	1					
ANR	10866672	Argument	1		10866556	1					
ANR	10866673	PrimaryExpression	1		10866556	0					
ANR	10866674	Argument	avail		10866556	2					
ANR	10866675	Identifier	avail		10866556	0					
ANR	10866676	Argument	instance -> scratch_file		10866556	3					
ANR	10866677	PtrMemberAccess	instance -> scratch_file		10866556	0					
ANR	10866678	Identifier	instance		10866556	0					
ANR	10866679	Identifier	scratch_file		10866556	1					
ANR	10866680	IfStatement	if ( n != avail )		10866556	6					
ANR	10866681	Condition	n != avail	262:8:7714:7723	10866556	0	True				
ANR	10866682	EqualityExpression	n != avail		10866556	0		!=			
ANR	10866683	Identifier	n		10866556	0					
ANR	10866684	Identifier	avail		10866556	1					
ANR	10866685	CompoundStatement		21:4:698:698	10866556	1					
ANR	10866686	ExpressionStatement	"gs_catch ( gs_error_invalidfileaccess , ""cannot write to scratch file"" )"	264:8:7740:7808	10866556	0	True				
ANR	10866687	CallExpression	"gs_catch ( gs_error_invalidfileaccess , ""cannot write to scratch file"" )"		10866556	0					
ANR	10866688	Callee	gs_catch		10866556	0					
ANR	10866689	Identifier	gs_catch		10866556	0					
ANR	10866690	ArgumentList	gs_error_invalidfileaccess		10866556	1					
ANR	10866691	Argument	gs_error_invalidfileaccess		10866556	0					
ANR	10866692	Identifier	gs_error_invalidfileaccess		10866556	0					
ANR	10866693	Argument	"""cannot write to scratch file"""		10866556	1					
ANR	10866694	PrimaryExpression	"""cannot write to scratch file"""		10866556	0					
ANR	10866695	ReturnStatement	return e_ExitLanguage ;	265:8:7818:7839	10866556	1	True				
ANR	10866696	Identifier	e_ExitLanguage		10866556	0					
ANR	10866697	ExpressionStatement	cursor -> ptr = cursor -> limit	267:4:7851:7878	10866556	7	True				
ANR	10866698	AssignmentExpression	cursor -> ptr = cursor -> limit		10866556	0		=			
ANR	10866699	PtrMemberAccess	cursor -> ptr		10866556	0					
ANR	10866700	Identifier	cursor		10866556	0					
ANR	10866701	Identifier	ptr		10866556	1					
ANR	10866702	PtrMemberAccess	cursor -> limit		10866556	1					
ANR	10866703	Identifier	cursor		10866556	0					
ANR	10866704	Identifier	limit		10866556	1					
ANR	10866705	ReturnStatement	return 0 ;	269:4:7885:7893	10866556	8	True				
ANR	10866706	PrimaryExpression	0		10866556	0					
ANR	10866707	ReturnType	static int		10866556	1					
ANR	10866708	Identifier	xps_imp_process		10866556	2					
ANR	10866709	ParameterList	"pl_interp_implementation_t * impl , stream_cursor_read * cursor"		10866556	3					
ANR	10866710	Parameter	pl_interp_implementation_t * impl	242:16:6969:7000	10866556	0	True				
ANR	10866711	ParameterType	pl_interp_implementation_t *		10866556	0					
ANR	10866712	Identifier	impl		10866556	1					
ANR	10866713	Parameter	stream_cursor_read * cursor	242:50:7003:7028	10866556	1	True				
ANR	10866714	ParameterType	stream_cursor_read *		10866556	0					
ANR	10866715	Identifier	cursor		10866556	1					
ANR	10866716	CFGEntryNode	ENTRY		10866556		True				
ANR	10866717	CFGExitNode	EXIT		10866556		True				
ANR	10866718	Symbol	cursor		10866556						
ANR	10866719	Symbol	avail		10866556						
ANR	10866720	Symbol	* cursor		10866556						
ANR	10866721	Symbol	instance		10866556						
ANR	10866722	Symbol	instance -> scratch_file		10866556						
ANR	10866723	Symbol	ctx		10866556						
ANR	10866724	Symbol	cursor -> ptr		10866556						
ANR	10866725	Symbol	impl -> interp_client_data		10866556						
ANR	10866726	Symbol	cursor -> limit		10866556						
ANR	10866727	Symbol	* impl		10866556						
ANR	10866728	Symbol	fwrite		10866556						
ANR	10866729	Symbol	n		10866556						
ANR	10866730	Symbol	* ctx		10866556						
ANR	10866731	Symbol	impl		10866556						
ANR	10866732	Symbol	ctx -> memory		10866556						
ANR	10866733	Symbol	e_ExitLanguage		10866556						
ANR	10866734	Symbol	gp_open_scratch_file		10866556						
ANR	10866735	Symbol	instance -> ctx		10866556						
ANR	10866736	Symbol	* instance		10866556						
ANR	10866737	Symbol	gs_error_invalidfileaccess		10866556						
ANR	10866738	Symbol	instance -> scratch_name		10866556						
ANR	10866739	Function	xps_imp_flush_to_eoj	275:0:7996:8186							
ANR	10866740	FunctionDef	"xps_imp_flush_to_eoj (pl_interp_implementation_t * impl , stream_cursor_read * pcursor)"		10866739	0					
ANR	10866741	CompoundStatement		277:0:8091:8186	10866739	0					
ANR	10866742	ExpressionStatement	pcursor -> ptr = pcursor -> limit	279:4:8141:8170	10866739	0	True				
ANR	10866743	AssignmentExpression	pcursor -> ptr = pcursor -> limit		10866739	0		=			
ANR	10866744	PtrMemberAccess	pcursor -> ptr		10866739	0					
ANR	10866745	Identifier	pcursor		10866739	0					
ANR	10866746	Identifier	ptr		10866739	1					
ANR	10866747	PtrMemberAccess	pcursor -> limit		10866739	1					
ANR	10866748	Identifier	pcursor		10866739	0					
ANR	10866749	Identifier	limit		10866739	1					
ANR	10866750	ReturnStatement	return 0 ;	280:4:8176:8184	10866739	1	True				
ANR	10866751	PrimaryExpression	0		10866739	0					
ANR	10866752	ReturnType	static int		10866739	1					
ANR	10866753	Identifier	xps_imp_flush_to_eoj		10866739	2					
ANR	10866754	ParameterList	"pl_interp_implementation_t * impl , stream_cursor_read * pcursor"		10866739	3					
ANR	10866755	Parameter	pl_interp_implementation_t * impl	276:21:8028:8059	10866739	0	True				
ANR	10866756	ParameterType	pl_interp_implementation_t *		10866739	0					
ANR	10866757	Identifier	impl		10866739	1					
ANR	10866758	Parameter	stream_cursor_read * pcursor	276:55:8062:8088	10866739	1	True				
ANR	10866759	ParameterType	stream_cursor_read *		10866739	0					
ANR	10866760	Identifier	pcursor		10866739	1					
ANR	10866761	CFGEntryNode	ENTRY		10866739		True				
ANR	10866762	CFGExitNode	EXIT		10866739		True				
ANR	10866763	Symbol	impl		10866739						
ANR	10866764	Symbol	pcursor		10866739						
ANR	10866765	Symbol	pcursor -> limit		10866739						
ANR	10866766	Symbol	pcursor -> ptr		10866739						
ANR	10866767	Symbol	* pcursor		10866739						
ANR	10866768	Function	xps_imp_process_eof	284:0:8225:8854							
ANR	10866769	FunctionDef	xps_imp_process_eof (pl_interp_implementation_t * impl)		10866768	0					
ANR	10866770	CompoundStatement		286:0:8290:8854	10866768	0					
ANR	10866771	IdentifierDeclStatement	xps_interp_instance_t * instance = impl -> interp_client_data ;	287:4:8296:8354	10866768	0	True				
ANR	10866772	IdentifierDecl	* instance = impl -> interp_client_data		10866768	0					
ANR	10866773	IdentifierDeclType	xps_interp_instance_t *		10866768	0					
ANR	10866774	Identifier	instance		10866768	1					
ANR	10866775	AssignmentExpression	* instance = impl -> interp_client_data		10866768	2		=			
ANR	10866776	Identifier	instance		10866768	0					
ANR	10866777	PtrMemberAccess	impl -> interp_client_data		10866768	1					
ANR	10866778	Identifier	impl		10866768	0					
ANR	10866779	Identifier	interp_client_data		10866768	1					
ANR	10866780	IdentifierDeclStatement	xps_context_t * ctx = instance -> ctx ;	288:4:8360:8394	10866768	1	True				
ANR	10866781	IdentifierDecl	* ctx = instance -> ctx		10866768	0					
ANR	10866782	IdentifierDeclType	xps_context_t *		10866768	0					
ANR	10866783	Identifier	ctx		10866768	1					
ANR	10866784	AssignmentExpression	* ctx = instance -> ctx		10866768	2		=			
ANR	10866785	Identifier	ctx		10866768	0					
ANR	10866786	PtrMemberAccess	instance -> ctx		10866768	1					
ANR	10866787	Identifier	instance		10866768	0					
ANR	10866788	Identifier	ctx		10866768	1					
ANR	10866789	IdentifierDeclStatement	int code ;	289:4:8400:8408	10866768	2	True				
ANR	10866790	IdentifierDecl	code		10866768	0					
ANR	10866791	IdentifierDeclType	int		10866768	0					
ANR	10866792	Identifier	code		10866768	1					
ANR	10866793	IfStatement	if ( instance -> scratch_file )		10866768	3					
ANR	10866794	Condition	instance -> scratch_file	291:8:8419:8440	10866768	0	True				
ANR	10866795	PtrMemberAccess	instance -> scratch_file		10866768	0					
ANR	10866796	Identifier	instance		10866768	0					
ANR	10866797	Identifier	scratch_file		10866768	1					
ANR	10866798	CompoundStatement		7:4:156:156	10866768	1					
ANR	10866799	ExpressionStatement	"if_debug0m ( '|' , ctx -> memory , ""xps: executing scratch file\\n"" )"	293:8:8457:8518	10866768	0	True				
ANR	10866800	CallExpression	"if_debug0m ( '|' , ctx -> memory , ""xps: executing scratch file\\n"" )"		10866768	0					
ANR	10866801	Callee	if_debug0m		10866768	0					
ANR	10866802	Identifier	if_debug0m		10866768	0					
ANR	10866803	ArgumentList	'|'		10866768	1					
ANR	10866804	Argument	'|'		10866768	0					
ANR	10866805	PrimaryExpression	'|'		10866768	0					
ANR	10866806	Argument	ctx -> memory		10866768	1					
ANR	10866807	PtrMemberAccess	ctx -> memory		10866768	0					
ANR	10866808	Identifier	ctx		10866768	0					
ANR	10866809	Identifier	memory		10866768	1					
ANR	10866810	Argument	"""xps: executing scratch file\\n"""		10866768	2					
ANR	10866811	PrimaryExpression	"""xps: executing scratch file\\n"""		10866768	0					
ANR	10866812	ExpressionStatement	fclose ( instance -> scratch_file )	294:8:8528:8558	10866768	1	True				
ANR	10866813	CallExpression	fclose ( instance -> scratch_file )		10866768	0					
ANR	10866814	Callee	fclose		10866768	0					
ANR	10866815	Identifier	fclose		10866768	0					
ANR	10866816	ArgumentList	instance -> scratch_file		10866768	1					
ANR	10866817	Argument	instance -> scratch_file		10866768	0					
ANR	10866818	PtrMemberAccess	instance -> scratch_file		10866768	0					
ANR	10866819	Identifier	instance		10866768	0					
ANR	10866820	Identifier	scratch_file		10866768	1					
ANR	10866821	ExpressionStatement	instance -> scratch_file = NULL	295:8:8568:8597	10866768	2	True				
ANR	10866822	AssignmentExpression	instance -> scratch_file = NULL		10866768	0		=			
ANR	10866823	PtrMemberAccess	instance -> scratch_file		10866768	0					
ANR	10866824	Identifier	instance		10866768	0					
ANR	10866825	Identifier	scratch_file		10866768	1					
ANR	10866826	Identifier	NULL		10866768	1					
ANR	10866827	ExpressionStatement	"code = xps_process_file ( ctx , instance -> scratch_name )"	296:8:8607:8659	10866768	3	True				
ANR	10866828	AssignmentExpression	"code = xps_process_file ( ctx , instance -> scratch_name )"		10866768	0		=			
ANR	10866829	Identifier	code		10866768	0					
ANR	10866830	CallExpression	"xps_process_file ( ctx , instance -> scratch_name )"		10866768	1					
ANR	10866831	Callee	xps_process_file		10866768	0					
ANR	10866832	Identifier	xps_process_file		10866768	0					
ANR	10866833	ArgumentList	ctx		10866768	1					
ANR	10866834	Argument	ctx		10866768	0					
ANR	10866835	Identifier	ctx		10866768	0					
ANR	10866836	Argument	instance -> scratch_name		10866768	1					
ANR	10866837	PtrMemberAccess	instance -> scratch_name		10866768	0					
ANR	10866838	Identifier	instance		10866768	0					
ANR	10866839	Identifier	scratch_name		10866768	1					
ANR	10866840	ExpressionStatement	unlink ( instance -> scratch_name )	297:8:8669:8699	10866768	4	True				
ANR	10866841	CallExpression	unlink ( instance -> scratch_name )		10866768	0					
ANR	10866842	Callee	unlink		10866768	0					
ANR	10866843	Identifier	unlink		10866768	0					
ANR	10866844	ArgumentList	instance -> scratch_name		10866768	1					
ANR	10866845	Argument	instance -> scratch_name		10866768	0					
ANR	10866846	PtrMemberAccess	instance -> scratch_name		10866768	0					
ANR	10866847	Identifier	instance		10866768	0					
ANR	10866848	Identifier	scratch_name		10866768	1					
ANR	10866849	IfStatement	if ( code < 0 )		10866768	5					
ANR	10866850	Condition	code < 0	298:12:8713:8720	10866768	0	True				
ANR	10866851	RelationalExpression	code < 0		10866768	0		<			
ANR	10866852	Identifier	code		10866768	0					
ANR	10866853	PrimaryExpression	0		10866768	1					
ANR	10866854	CompoundStatement		14:8:440:440	10866768	1					
ANR	10866855	ExpressionStatement	"gs_catch ( code , ""cannot process XPS file"" )"	300:12:8745:8786	10866768	0	True				
ANR	10866856	CallExpression	"gs_catch ( code , ""cannot process XPS file"" )"		10866768	0					
ANR	10866857	Callee	gs_catch		10866768	0					
ANR	10866858	Identifier	gs_catch		10866768	0					
ANR	10866859	ArgumentList	code		10866768	1					
ANR	10866860	Argument	code		10866768	0					
ANR	10866861	Identifier	code		10866768	0					
ANR	10866862	Argument	"""cannot process XPS file"""		10866768	1					
ANR	10866863	PrimaryExpression	"""cannot process XPS file"""		10866768	0					
ANR	10866864	ReturnStatement	return e_ExitLanguage ;	301:12:8800:8821	10866768	1	True				
ANR	10866865	Identifier	e_ExitLanguage		10866768	0					
ANR	10866866	ReturnStatement	return 0 ;	305:4:8844:8852	10866768	4	True				
ANR	10866867	PrimaryExpression	0		10866768	0					
ANR	10866868	ReturnType	static int		10866768	1					
ANR	10866869	Identifier	xps_imp_process_eof		10866768	2					
ANR	10866870	ParameterList	pl_interp_implementation_t * impl		10866768	3					
ANR	10866871	Parameter	pl_interp_implementation_t * impl	285:20:8256:8287	10866768	0	True				
ANR	10866872	ParameterType	pl_interp_implementation_t *		10866768	0					
ANR	10866873	Identifier	impl		10866768	1					
ANR	10866874	CFGEntryNode	ENTRY		10866768		True				
ANR	10866875	CFGExitNode	EXIT		10866768		True				
ANR	10866876	Symbol	instance		10866768						
ANR	10866877	Symbol	code		10866768						
ANR	10866878	Symbol	instance -> scratch_file		10866768						
ANR	10866879	Symbol	NULL		10866768						
ANR	10866880	Symbol	ctx		10866768						
ANR	10866881	Symbol	impl -> interp_client_data		10866768						
ANR	10866882	Symbol	* impl		10866768						
ANR	10866883	Symbol	* ctx		10866768						
ANR	10866884	Symbol	impl		10866768						
ANR	10866885	Symbol	ctx -> memory		10866768						
ANR	10866886	Symbol	e_ExitLanguage		10866768						
ANR	10866887	Symbol	instance -> ctx		10866768						
ANR	10866888	Symbol	xps_process_file		10866768						
ANR	10866889	Symbol	* instance		10866768						
ANR	10866890	Symbol	instance -> scratch_name		10866768						
ANR	10866891	Function	xps_imp_report_errors	309:0:8901:9179							
ANR	10866892	FunctionDef	"xps_imp_report_errors (pl_interp_implementation_t * impl , int code , long file_position , bool force_to_cout)"		10866891	0					
ANR	10866893	CompoundStatement		315:0:9163:9179	10866891	0					
ANR	10866894	ReturnStatement	return 0 ;	316:4:9169:9177	10866891	0	True				
ANR	10866895	PrimaryExpression	0		10866891	0					
ANR	10866896	ReturnType	static int		10866891	1					
ANR	10866897	Identifier	xps_imp_report_errors		10866891	2					
ANR	10866898	ParameterList	"pl_interp_implementation_t * impl , int code , long file_position , bool force_to_cout"		10866891	3					
ANR	10866899	Parameter	pl_interp_implementation_t * impl	310:22:8934:8965	10866891	0	True				
ANR	10866900	ParameterType	pl_interp_implementation_t *		10866891	0					
ANR	10866901	Identifier	impl		10866891	1					
ANR	10866902	Parameter	int code	311:8:8976:8983	10866891	1	True				
ANR	10866903	ParameterType	int		10866891	0					
ANR	10866904	Identifier	code		10866891	1					
ANR	10866905	Parameter	long file_position	312:8:9034:9051	10866891	2	True				
ANR	10866906	ParameterType	long		10866891	0					
ANR	10866907	Identifier	file_position		10866891	1					
ANR	10866908	Parameter	bool force_to_cout	313:8:9106:9123	10866891	3	True				
ANR	10866909	ParameterType	bool		10866891	0					
ANR	10866910	Identifier	force_to_cout		10866891	1					
ANR	10866911	CFGEntryNode	ENTRY		10866891		True				
ANR	10866912	CFGExitNode	EXIT		10866891		True				
ANR	10866913	Symbol	impl		10866891						
ANR	10866914	Symbol	file_position		10866891						
ANR	10866915	Symbol	code		10866891						
ANR	10866916	Symbol	force_to_cout		10866891						
ANR	10866917	Function	xps_imp_init_job	320:0:9231:9800							
ANR	10866918	FunctionDef	xps_imp_init_job (pl_interp_implementation_t * impl)		10866917	0					
ANR	10866919	CompoundStatement		322:0:9293:9800	10866917	0					
ANR	10866920	IdentifierDeclStatement	xps_interp_instance_t * instance = impl -> interp_client_data ;	323:4:9299:9357	10866917	0	True				
ANR	10866921	IdentifierDecl	* instance = impl -> interp_client_data		10866917	0					
ANR	10866922	IdentifierDeclType	xps_interp_instance_t *		10866917	0					
ANR	10866923	Identifier	instance		10866917	1					
ANR	10866924	AssignmentExpression	* instance = impl -> interp_client_data		10866917	2		=			
ANR	10866925	Identifier	instance		10866917	0					
ANR	10866926	PtrMemberAccess	impl -> interp_client_data		10866917	1					
ANR	10866927	Identifier	impl		10866917	0					
ANR	10866928	Identifier	interp_client_data		10866917	1					
ANR	10866929	IdentifierDeclStatement	xps_context_t * ctx = instance -> ctx ;	324:4:9363:9397	10866917	1	True				
ANR	10866930	IdentifierDecl	* ctx = instance -> ctx		10866917	0					
ANR	10866931	IdentifierDeclType	xps_context_t *		10866917	0					
ANR	10866932	Identifier	ctx		10866917	1					
ANR	10866933	AssignmentExpression	* ctx = instance -> ctx		10866917	2		=			
ANR	10866934	Identifier	ctx		10866917	0					
ANR	10866935	PtrMemberAccess	instance -> ctx		10866917	1					
ANR	10866936	Identifier	instance		10866917	0					
ANR	10866937	Identifier	ctx		10866917	1					
ANR	10866938	IfStatement	if ( gs_debug_c ( '|' ) )		10866917	2					
ANR	10866939	Condition	gs_debug_c ( '|' )	326:8:9408:9422	10866917	0	True				
ANR	10866940	CallExpression	gs_debug_c ( '|' )		10866917	0					
ANR	10866941	Callee	gs_debug_c		10866917	0					
ANR	10866942	Identifier	gs_debug_c		10866917	0					
ANR	10866943	ArgumentList	'|'		10866917	1					
ANR	10866944	Argument	'|'		10866917	0					
ANR	10866945	PrimaryExpression	'|'		10866917	0					
ANR	10866946	ExpressionStatement	xps_zip_trace = 1	327:8:9433:9450	10866917	1	True				
ANR	10866947	AssignmentExpression	xps_zip_trace = 1		10866917	0		=			
ANR	10866948	Identifier	xps_zip_trace		10866917	0					
ANR	10866949	PrimaryExpression	1		10866917	1					
ANR	10866950	IfStatement	if ( gs_debug_c ( '|' ) )		10866917	3					
ANR	10866951	Condition	gs_debug_c ( '|' )	328:8:9460:9474	10866917	0	True				
ANR	10866952	CallExpression	gs_debug_c ( '|' )		10866917	0					
ANR	10866953	Callee	gs_debug_c		10866917	0					
ANR	10866954	Identifier	gs_debug_c		10866917	0					
ANR	10866955	ArgumentList	'|'		10866917	1					
ANR	10866956	Argument	'|'		10866917	0					
ANR	10866957	PrimaryExpression	'|'		10866917	0					
ANR	10866958	ExpressionStatement	xps_doc_trace = 1	329:8:9485:9502	10866917	1	True				
ANR	10866959	AssignmentExpression	xps_doc_trace = 1		10866917	0		=			
ANR	10866960	Identifier	xps_doc_trace		10866917	0					
ANR	10866961	PrimaryExpression	1		10866917	1					
ANR	10866962	ExpressionStatement	ctx -> font_table = xps_hash_new ( ctx )	331:4:9509:9544	10866917	4	True				
ANR	10866963	AssignmentExpression	ctx -> font_table = xps_hash_new ( ctx )		10866917	0		=			
ANR	10866964	PtrMemberAccess	ctx -> font_table		10866917	0					
ANR	10866965	Identifier	ctx		10866917	0					
ANR	10866966	Identifier	font_table		10866917	1					
ANR	10866967	CallExpression	xps_hash_new ( ctx )		10866917	1					
ANR	10866968	Callee	xps_hash_new		10866917	0					
ANR	10866969	Identifier	xps_hash_new		10866917	0					
ANR	10866970	ArgumentList	ctx		10866917	1					
ANR	10866971	Argument	ctx		10866917	0					
ANR	10866972	Identifier	ctx		10866917	0					
ANR	10866973	ExpressionStatement	ctx -> colorspace_table = xps_hash_new ( ctx )	332:4:9550:9591	10866917	5	True				
ANR	10866974	AssignmentExpression	ctx -> colorspace_table = xps_hash_new ( ctx )		10866917	0		=			
ANR	10866975	PtrMemberAccess	ctx -> colorspace_table		10866917	0					
ANR	10866976	Identifier	ctx		10866917	0					
ANR	10866977	Identifier	colorspace_table		10866917	1					
ANR	10866978	CallExpression	xps_hash_new ( ctx )		10866917	1					
ANR	10866979	Callee	xps_hash_new		10866917	0					
ANR	10866980	Identifier	xps_hash_new		10866917	0					
ANR	10866981	ArgumentList	ctx		10866917	1					
ANR	10866982	Argument	ctx		10866917	0					
ANR	10866983	Identifier	ctx		10866917	0					
ANR	10866984	ExpressionStatement	ctx -> start_part = NULL	334:4:9598:9620	10866917	6	True				
ANR	10866985	AssignmentExpression	ctx -> start_part = NULL		10866917	0		=			
ANR	10866986	PtrMemberAccess	ctx -> start_part		10866917	0					
ANR	10866987	Identifier	ctx		10866917	0					
ANR	10866988	Identifier	start_part		10866917	1					
ANR	10866989	Identifier	NULL		10866917	1					
ANR	10866990	ExpressionStatement	ctx -> use_transparency = 1	336:4:9627:9652	10866917	7	True				
ANR	10866991	AssignmentExpression	ctx -> use_transparency = 1		10866917	0		=			
ANR	10866992	PtrMemberAccess	ctx -> use_transparency		10866917	0					
ANR	10866993	Identifier	ctx		10866917	0					
ANR	10866994	Identifier	use_transparency		10866917	1					
ANR	10866995	PrimaryExpression	1		10866917	1					
ANR	10866996	IfStatement	"if ( getenv ( ""XPS_DISABLE_TRANSPARENCY"" ) )"		10866917	8					
ANR	10866997	Condition	"getenv ( ""XPS_DISABLE_TRANSPARENCY"" )"	337:8:9662:9695	10866917	0	True				
ANR	10866998	CallExpression	"getenv ( ""XPS_DISABLE_TRANSPARENCY"" )"		10866917	0					
ANR	10866999	Callee	getenv		10866917	0					
ANR	10867000	Identifier	getenv		10866917	0					
ANR	10867001	ArgumentList	"""XPS_DISABLE_TRANSPARENCY"""		10866917	1					
ANR	10867002	Argument	"""XPS_DISABLE_TRANSPARENCY"""		10866917	0					
ANR	10867003	PrimaryExpression	"""XPS_DISABLE_TRANSPARENCY"""		10866917	0					
ANR	10867004	ExpressionStatement	ctx -> use_transparency = 0	338:8:9706:9731	10866917	1	True				
ANR	10867005	AssignmentExpression	ctx -> use_transparency = 0		10866917	0		=			
ANR	10867006	PtrMemberAccess	ctx -> use_transparency		10866917	0					
ANR	10867007	Identifier	ctx		10866917	0					
ANR	10867008	Identifier	use_transparency		10866917	1					
ANR	10867009	PrimaryExpression	0		10866917	1					
ANR	10867010	ExpressionStatement	ctx -> opacity_only = 0	340:4:9738:9759	10866917	9	True				
ANR	10867011	AssignmentExpression	ctx -> opacity_only = 0		10866917	0		=			
ANR	10867012	PtrMemberAccess	ctx -> opacity_only		10866917	0					
ANR	10867013	Identifier	ctx		10866917	0					
ANR	10867014	Identifier	opacity_only		10866917	1					
ANR	10867015	PrimaryExpression	0		10866917	1					
ANR	10867016	ExpressionStatement	ctx -> fill_rule = 0	341:4:9765:9783	10866917	10	True				
ANR	10867017	AssignmentExpression	ctx -> fill_rule = 0		10866917	0		=			
ANR	10867018	PtrMemberAccess	ctx -> fill_rule		10866917	0					
ANR	10867019	Identifier	ctx		10866917	0					
ANR	10867020	Identifier	fill_rule		10866917	1					
ANR	10867021	PrimaryExpression	0		10866917	1					
ANR	10867022	ReturnStatement	return 0 ;	343:4:9790:9798	10866917	11	True				
ANR	10867023	PrimaryExpression	0		10866917	0					
ANR	10867024	ReturnType	static int		10866917	1					
ANR	10867025	Identifier	xps_imp_init_job		10866917	2					
ANR	10867026	ParameterList	pl_interp_implementation_t * impl		10866917	3					
ANR	10867027	Parameter	pl_interp_implementation_t * impl	321:17:9259:9290	10866917	0	True				
ANR	10867028	ParameterType	pl_interp_implementation_t *		10866917	0					
ANR	10867029	Identifier	impl		10866917	1					
ANR	10867030	CFGEntryNode	ENTRY		10866917		True				
ANR	10867031	CFGExitNode	EXIT		10866917		True				
ANR	10867032	Symbol	xps_doc_trace		10866917						
ANR	10867033	Symbol	xps_hash_new		10866917						
ANR	10867034	Symbol	instance		10866917						
ANR	10867035	Symbol	NULL		10866917						
ANR	10867036	Symbol	xps_zip_trace		10866917						
ANR	10867037	Symbol	ctx -> font_table		10866917						
ANR	10867038	Symbol	ctx -> use_transparency		10866917						
ANR	10867039	Symbol	ctx		10866917						
ANR	10867040	Symbol	impl -> interp_client_data		10866917						
ANR	10867041	Symbol	* impl		10866917						
ANR	10867042	Symbol	ctx -> colorspace_table		10866917						
ANR	10867043	Symbol	ctx -> opacity_only		10866917						
ANR	10867044	Symbol	* ctx		10866917						
ANR	10867045	Symbol	impl		10866917						
ANR	10867046	Symbol	instance -> ctx		10866917						
ANR	10867047	Symbol	ctx -> fill_rule		10866917						
ANR	10867048	Symbol	* instance		10866917						
ANR	10867049	Symbol	gs_debug_c		10866917						
ANR	10867050	Symbol	ctx -> start_part		10866917						
ANR	10867051	Symbol	getenv		10866917						
ANR	10867052	Function	xps_free_key_func	346:0:9803:9890							
ANR	10867053	FunctionDef	"xps_free_key_func (xps_context_t * ctx , void * ptr)"		10867052	0					
ANR	10867054	CompoundStatement		347:0:9864:9890	10867052	0					
ANR	10867055	ExpressionStatement	"xps_free ( ctx , ptr )"	348:4:9870:9888	10867052	0	True				
ANR	10867056	CallExpression	"xps_free ( ctx , ptr )"		10867052	0					
ANR	10867057	Callee	xps_free		10867052	0					
ANR	10867058	Identifier	xps_free		10867052	0					
ANR	10867059	ArgumentList	ctx		10867052	1					
ANR	10867060	Argument	ctx		10867052	0					
ANR	10867061	Identifier	ctx		10867052	0					
ANR	10867062	Argument	ptr		10867052	1					
ANR	10867063	Identifier	ptr		10867052	0					
ANR	10867064	ReturnType	static void		10867052	1					
ANR	10867065	Identifier	xps_free_key_func		10867052	2					
ANR	10867066	ParameterList	"xps_context_t * ctx , void * ptr"		10867052	3					
ANR	10867067	Parameter	xps_context_t * ctx	346:30:9833:9850	10867052	0	True				
ANR	10867068	ParameterType	xps_context_t *		10867052	0					
ANR	10867069	Identifier	ctx		10867052	1					
ANR	10867070	Parameter	void * ptr	346:50:9853:9861	10867052	1	True				
ANR	10867071	ParameterType	void *		10867052	0					
ANR	10867072	Identifier	ptr		10867052	1					
ANR	10867073	CFGEntryNode	ENTRY		10867052		True				
ANR	10867074	CFGExitNode	EXIT		10867052		True				
ANR	10867075	Symbol	ctx		10867052						
ANR	10867076	Symbol	ptr		10867052						
ANR	10867077	Function	xps_free_font_func	351:0:9893:9986							
ANR	10867078	FunctionDef	"xps_free_font_func (xps_context_t * ctx , void * ptr)"		10867077	0					
ANR	10867079	CompoundStatement		352:0:9955:9986	10867077	0					
ANR	10867080	ExpressionStatement	"xps_free_font ( ctx , ptr )"	353:4:9961:9984	10867077	0	True				
ANR	10867081	CallExpression	"xps_free_font ( ctx , ptr )"		10867077	0					
ANR	10867082	Callee	xps_free_font		10867077	0					
ANR	10867083	Identifier	xps_free_font		10867077	0					
ANR	10867084	ArgumentList	ctx		10867077	1					
ANR	10867085	Argument	ctx		10867077	0					
ANR	10867086	Identifier	ctx		10867077	0					
ANR	10867087	Argument	ptr		10867077	1					
ANR	10867088	Identifier	ptr		10867077	0					
ANR	10867089	ReturnType	static void		10867077	1					
ANR	10867090	Identifier	xps_free_font_func		10867077	2					
ANR	10867091	ParameterList	"xps_context_t * ctx , void * ptr"		10867077	3					
ANR	10867092	Parameter	xps_context_t * ctx	351:31:9924:9941	10867077	0	True				
ANR	10867093	ParameterType	xps_context_t *		10867077	0					
ANR	10867094	Identifier	ctx		10867077	1					
ANR	10867095	Parameter	void * ptr	351:51:9944:9952	10867077	1	True				
ANR	10867096	ParameterType	void *		10867077	0					
ANR	10867097	Identifier	ptr		10867077	1					
ANR	10867098	CFGEntryNode	ENTRY		10867077		True				
ANR	10867099	CFGExitNode	EXIT		10867077		True				
ANR	10867100	Symbol	ctx		10867077						
ANR	10867101	Symbol	ptr		10867077						
ANR	10867102	Function	xps_imp_dnit_job	357:0:10033:10666							
ANR	10867103	FunctionDef	xps_imp_dnit_job (pl_interp_implementation_t * impl)		10867102	0					
ANR	10867104	CompoundStatement		359:0:10095:10666	10867102	0					
ANR	10867105	IdentifierDeclStatement	xps_interp_instance_t * instance = impl -> interp_client_data ;	360:4:10101:10159	10867102	0	True				
ANR	10867106	IdentifierDecl	* instance = impl -> interp_client_data		10867102	0					
ANR	10867107	IdentifierDeclType	xps_interp_instance_t *		10867102	0					
ANR	10867108	Identifier	instance		10867102	1					
ANR	10867109	AssignmentExpression	* instance = impl -> interp_client_data		10867102	2		=			
ANR	10867110	Identifier	instance		10867102	0					
ANR	10867111	PtrMemberAccess	impl -> interp_client_data		10867102	1					
ANR	10867112	Identifier	impl		10867102	0					
ANR	10867113	Identifier	interp_client_data		10867102	1					
ANR	10867114	IdentifierDeclStatement	xps_context_t * ctx = instance -> ctx ;	361:4:10165:10199	10867102	1	True				
ANR	10867115	IdentifierDecl	* ctx = instance -> ctx		10867102	0					
ANR	10867116	IdentifierDeclType	xps_context_t *		10867102	0					
ANR	10867117	Identifier	ctx		10867102	1					
ANR	10867118	AssignmentExpression	* ctx = instance -> ctx		10867102	2		=			
ANR	10867119	Identifier	ctx		10867102	0					
ANR	10867120	PtrMemberAccess	instance -> ctx		10867102	1					
ANR	10867121	Identifier	instance		10867102	0					
ANR	10867122	Identifier	ctx		10867102	1					
ANR	10867123	IdentifierDeclStatement	int i ;	362:4:10205:10210	10867102	2	True				
ANR	10867124	IdentifierDecl	i		10867102	0					
ANR	10867125	IdentifierDeclType	int		10867102	0					
ANR	10867126	Identifier	i		10867102	1					
ANR	10867127	IfStatement	if ( gs_debug_c ( '|' ) )		10867102	3					
ANR	10867128	Condition	gs_debug_c ( '|' )	364:8:10221:10235	10867102	0	True				
ANR	10867129	CallExpression	gs_debug_c ( '|' )		10867102	0					
ANR	10867130	Callee	gs_debug_c		10867102	0					
ANR	10867131	Identifier	gs_debug_c		10867102	0					
ANR	10867132	ArgumentList	'|'		10867102	1					
ANR	10867133	Argument	'|'		10867102	0					
ANR	10867134	PrimaryExpression	'|'		10867102	0					
ANR	10867135	ExpressionStatement	xps_debug_fixdocseq ( ctx )	365:8:10246:10270	10867102	1	True				
ANR	10867136	CallExpression	xps_debug_fixdocseq ( ctx )		10867102	0					
ANR	10867137	Callee	xps_debug_fixdocseq		10867102	0					
ANR	10867138	Identifier	xps_debug_fixdocseq		10867102	0					
ANR	10867139	ArgumentList	ctx		10867102	1					
ANR	10867140	Argument	ctx		10867102	0					
ANR	10867141	Identifier	ctx		10867102	0					
ANR	10867142	ForStatement	for ( i = 0 ; i < ctx -> zip_count ; i ++ )		10867102	4					
ANR	10867143	ForInit	i = 0 ;	367:9:10282:10287	10867102	0	True				
ANR	10867144	AssignmentExpression	i = 0		10867102	0		=			
ANR	10867145	Identifier	i		10867102	0					
ANR	10867146	PrimaryExpression	0		10867102	1					
ANR	10867147	Condition	i < ctx -> zip_count	367:16:10289:10306	10867102	1	True				
ANR	10867148	RelationalExpression	i < ctx -> zip_count		10867102	0		<			
ANR	10867149	Identifier	i		10867102	0					
ANR	10867150	PtrMemberAccess	ctx -> zip_count		10867102	1					
ANR	10867151	Identifier	ctx		10867102	0					
ANR	10867152	Identifier	zip_count		10867102	1					
ANR	10867153	PostIncDecOperationExpression	i ++	367:36:10309:10311	10867102	2	True				
ANR	10867154	Identifier	i		10867102	0					
ANR	10867155	IncDec	++		10867102	1					
ANR	10867156	ExpressionStatement	"xps_free ( ctx , ctx -> zip_table [ i ] . name )"	368:8:10322:10359	10867102	3	True				
ANR	10867157	CallExpression	"xps_free ( ctx , ctx -> zip_table [ i ] . name )"		10867102	0					
ANR	10867158	Callee	xps_free		10867102	0					
ANR	10867159	Identifier	xps_free		10867102	0					
ANR	10867160	ArgumentList	ctx		10867102	1					
ANR	10867161	Argument	ctx		10867102	0					
ANR	10867162	Identifier	ctx		10867102	0					
ANR	10867163	Argument	ctx -> zip_table [ i ] . name		10867102	1					
ANR	10867164	MemberAccess	ctx -> zip_table [ i ] . name		10867102	0					
ANR	10867165	ArrayIndexing	ctx -> zip_table [ i ]		10867102	0					
ANR	10867166	PtrMemberAccess	ctx -> zip_table		10867102	0					
ANR	10867167	Identifier	ctx		10867102	0					
ANR	10867168	Identifier	zip_table		10867102	1					
ANR	10867169	Identifier	i		10867102	1					
ANR	10867170	Identifier	name		10867102	1					
ANR	10867171	ExpressionStatement	"xps_free ( ctx , ctx -> zip_table )"	369:4:10365:10394	10867102	5	True				
ANR	10867172	CallExpression	"xps_free ( ctx , ctx -> zip_table )"		10867102	0					
ANR	10867173	Callee	xps_free		10867102	0					
ANR	10867174	Identifier	xps_free		10867102	0					
ANR	10867175	ArgumentList	ctx		10867102	1					
ANR	10867176	Argument	ctx		10867102	0					
ANR	10867177	Identifier	ctx		10867102	0					
ANR	10867178	Argument	ctx -> zip_table		10867102	1					
ANR	10867179	PtrMemberAccess	ctx -> zip_table		10867102	0					
ANR	10867180	Identifier	ctx		10867102	0					
ANR	10867181	Identifier	zip_table		10867102	1					
ANR	10867182	ExpressionStatement	"xps_hash_free ( ctx , ctx -> font_table , xps_free_key_func , xps_free_font_func )"	372:4:10436:10510	10867102	6	True				
ANR	10867183	CallExpression	"xps_hash_free ( ctx , ctx -> font_table , xps_free_key_func , xps_free_font_func )"		10867102	0					
ANR	10867184	Callee	xps_hash_free		10867102	0					
ANR	10867185	Identifier	xps_hash_free		10867102	0					
ANR	10867186	ArgumentList	ctx		10867102	1					
ANR	10867187	Argument	ctx		10867102	0					
ANR	10867188	Identifier	ctx		10867102	0					
ANR	10867189	Argument	ctx -> font_table		10867102	1					
ANR	10867190	PtrMemberAccess	ctx -> font_table		10867102	0					
ANR	10867191	Identifier	ctx		10867102	0					
ANR	10867192	Identifier	font_table		10867102	1					
ANR	10867193	Argument	xps_free_key_func		10867102	2					
ANR	10867194	Identifier	xps_free_key_func		10867102	0					
ANR	10867195	Argument	xps_free_font_func		10867102	3					
ANR	10867196	Identifier	xps_free_font_func		10867102	0					
ANR	10867197	ExpressionStatement	"xps_hash_free ( ctx , ctx -> colorspace_table , xps_free_key_func , NULL )"	373:4:10516:10582	10867102	7	True				
ANR	10867198	CallExpression	"xps_hash_free ( ctx , ctx -> colorspace_table , xps_free_key_func , NULL )"		10867102	0					
ANR	10867199	Callee	xps_hash_free		10867102	0					
ANR	10867200	Identifier	xps_hash_free		10867102	0					
ANR	10867201	ArgumentList	ctx		10867102	1					
ANR	10867202	Argument	ctx		10867102	0					
ANR	10867203	Identifier	ctx		10867102	0					
ANR	10867204	Argument	ctx -> colorspace_table		10867102	1					
ANR	10867205	PtrMemberAccess	ctx -> colorspace_table		10867102	0					
ANR	10867206	Identifier	ctx		10867102	0					
ANR	10867207	Identifier	colorspace_table		10867102	1					
ANR	10867208	Argument	xps_free_key_func		10867102	2					
ANR	10867209	Identifier	xps_free_key_func		10867102	0					
ANR	10867210	Argument	NULL		10867102	3					
ANR	10867211	Identifier	NULL		10867102	0					
ANR	10867212	ExpressionStatement	xps_free_fixed_pages ( ctx )	375:4:10589:10614	10867102	8	True				
ANR	10867213	CallExpression	xps_free_fixed_pages ( ctx )		10867102	0					
ANR	10867214	Callee	xps_free_fixed_pages		10867102	0					
ANR	10867215	Identifier	xps_free_fixed_pages		10867102	0					
ANR	10867216	ArgumentList	ctx		10867102	1					
ANR	10867217	Argument	ctx		10867102	0					
ANR	10867218	Identifier	ctx		10867102	0					
ANR	10867219	ExpressionStatement	xps_free_fixed_documents ( ctx )	376:4:10620:10649	10867102	9	True				
ANR	10867220	CallExpression	xps_free_fixed_documents ( ctx )		10867102	0					
ANR	10867221	Callee	xps_free_fixed_documents		10867102	0					
ANR	10867222	Identifier	xps_free_fixed_documents		10867102	0					
ANR	10867223	ArgumentList	ctx		10867102	1					
ANR	10867224	Argument	ctx		10867102	0					
ANR	10867225	Identifier	ctx		10867102	0					
ANR	10867226	ReturnStatement	return 0 ;	378:4:10656:10664	10867102	10	True				
ANR	10867227	PrimaryExpression	0		10867102	0					
ANR	10867228	ReturnType	static int		10867102	1					
ANR	10867229	Identifier	xps_imp_dnit_job		10867102	2					
ANR	10867230	ParameterList	pl_interp_implementation_t * impl		10867102	3					
ANR	10867231	Parameter	pl_interp_implementation_t * impl	358:17:10061:10092	10867102	0	True				
ANR	10867232	ParameterType	pl_interp_implementation_t *		10867102	0					
ANR	10867233	Identifier	impl		10867102	1					
ANR	10867234	CFGEntryNode	ENTRY		10867102		True				
ANR	10867235	CFGExitNode	EXIT		10867102		True				
ANR	10867236	Symbol	xps_free_key_func		10867102						
ANR	10867237	Symbol	instance		10867102						
ANR	10867238	Symbol	NULL		10867102						
ANR	10867239	Symbol	ctx -> font_table		10867102						
ANR	10867240	Symbol	xps_free_font_func		10867102						
ANR	10867241	Symbol	ctx		10867102						
ANR	10867242	Symbol	impl -> interp_client_data		10867102						
ANR	10867243	Symbol	* impl		10867102						
ANR	10867244	Symbol	i		10867102						
ANR	10867245	Symbol	ctx -> colorspace_table		10867102						
ANR	10867246	Symbol	ctx -> zip_table		10867102						
ANR	10867247	Symbol	* ctx		10867102						
ANR	10867248	Symbol	ctx -> zip_table [ i ] . name		10867102						
ANR	10867249	Symbol	impl		10867102						
ANR	10867250	Symbol	* ctx -> zip_table		10867102						
ANR	10867251	Symbol	* i		10867102						
ANR	10867252	Symbol	instance -> ctx		10867102						
ANR	10867253	Symbol	ctx -> zip_count		10867102						
ANR	10867254	Symbol	* instance		10867102						
ANR	10867255	Symbol	gs_debug_c		10867102						
ANR	10867256	Symbol	* * ctx		10867102						
ANR	10867257	Function	xps_imp_remove_device	382:0:10720:10998							
ANR	10867258	FunctionDef	xps_imp_remove_device (pl_interp_implementation_t * impl)		10867257	0					
ANR	10867259	CompoundStatement		384:0:10787:10998	10867257	0					
ANR	10867260	IdentifierDeclStatement	xps_interp_instance_t * instance = impl -> interp_client_data ;	385:4:10793:10851	10867257	0	True				
ANR	10867261	IdentifierDecl	* instance = impl -> interp_client_data		10867257	0					
ANR	10867262	IdentifierDeclType	xps_interp_instance_t *		10867257	0					
ANR	10867263	Identifier	instance		10867257	1					
ANR	10867264	AssignmentExpression	* instance = impl -> interp_client_data		10867257	2		=			
ANR	10867265	Identifier	instance		10867257	0					
ANR	10867266	PtrMemberAccess	impl -> interp_client_data		10867257	1					
ANR	10867267	Identifier	impl		10867257	0					
ANR	10867268	Identifier	interp_client_data		10867257	1					
ANR	10867269	IdentifierDeclStatement	xps_context_t * ctx = instance -> ctx ;	386:4:10857:10891	10867257	1	True				
ANR	10867270	IdentifierDecl	* ctx = instance -> ctx		10867257	0					
ANR	10867271	IdentifierDeclType	xps_context_t *		10867257	0					
ANR	10867272	Identifier	ctx		10867257	1					
ANR	10867273	AssignmentExpression	* ctx = instance -> ctx		10867257	2		=			
ANR	10867274	Identifier	ctx		10867257	0					
ANR	10867275	PtrMemberAccess	instance -> ctx		10867257	1					
ANR	10867276	Identifier	instance		10867257	0					
ANR	10867277	Identifier	ctx		10867257	1					
ANR	10867278	ReturnStatement	return gs_grestore_only ( ctx -> pgs ) ;	389:4:10934:10967	10867257	2	True				
ANR	10867279	CallExpression	gs_grestore_only ( ctx -> pgs )		10867257	0					
ANR	10867280	Callee	gs_grestore_only		10867257	0					
ANR	10867281	Identifier	gs_grestore_only		10867257	0					
ANR	10867282	ArgumentList	ctx -> pgs		10867257	1					
ANR	10867283	Argument	ctx -> pgs		10867257	0					
ANR	10867284	PtrMemberAccess	ctx -> pgs		10867257	0					
ANR	10867285	Identifier	ctx		10867257	0					
ANR	10867286	Identifier	pgs		10867257	1					
ANR	10867287	ReturnType	static int		10867257	1					
ANR	10867288	Identifier	xps_imp_remove_device		10867257	2					
ANR	10867289	ParameterList	pl_interp_implementation_t * impl		10867257	3					
ANR	10867290	Parameter	pl_interp_implementation_t * impl	383:22:10753:10784	10867257	0	True				
ANR	10867291	ParameterType	pl_interp_implementation_t *		10867257	0					
ANR	10867292	Identifier	impl		10867257	1					
ANR	10867293	CFGEntryNode	ENTRY		10867257		True				
ANR	10867294	CFGExitNode	EXIT		10867257		True				
ANR	10867295	Symbol	impl		10867257						
ANR	10867296	Symbol	instance		10867257						
ANR	10867297	Symbol	ctx		10867257						
ANR	10867298	Symbol	instance -> ctx		10867257						
ANR	10867299	Symbol	impl -> interp_client_data		10867257						
ANR	10867300	Symbol	ctx -> pgs		10867257						
ANR	10867301	Symbol	* impl		10867257						
ANR	10867302	Symbol	* instance		10867257						
ANR	10867303	Symbol	gs_grestore_only		10867257						
ANR	10867304	Symbol	* ctx		10867257						
ANR	10867305	Function	xps_imp_deallocate_interp_instance	393:0:11041:11504							
ANR	10867306	FunctionDef	xps_imp_deallocate_interp_instance (pl_interp_implementation_t * impl)		10867305	0					
ANR	10867307	CompoundStatement		395:0:11121:11504	10867305	0					
ANR	10867308	IdentifierDeclStatement	xps_interp_instance_t * instance = impl -> interp_client_data ;	396:4:11127:11185	10867305	0	True				
ANR	10867309	IdentifierDecl	* instance = impl -> interp_client_data		10867305	0					
ANR	10867310	IdentifierDeclType	xps_interp_instance_t *		10867305	0					
ANR	10867311	Identifier	instance		10867305	1					
ANR	10867312	AssignmentExpression	* instance = impl -> interp_client_data		10867305	2		=			
ANR	10867313	Identifier	instance		10867305	0					
ANR	10867314	PtrMemberAccess	impl -> interp_client_data		10867305	1					
ANR	10867315	Identifier	impl		10867305	0					
ANR	10867316	Identifier	interp_client_data		10867305	1					
ANR	10867317	IdentifierDeclStatement	xps_context_t * ctx = instance -> ctx ;	397:4:11191:11225	10867305	1	True				
ANR	10867318	IdentifierDecl	* ctx = instance -> ctx		10867305	0					
ANR	10867319	IdentifierDeclType	xps_context_t *		10867305	0					
ANR	10867320	Identifier	ctx		10867305	1					
ANR	10867321	AssignmentExpression	* ctx = instance -> ctx		10867305	2		=			
ANR	10867322	Identifier	ctx		10867305	0					
ANR	10867323	PtrMemberAccess	instance -> ctx		10867305	1					
ANR	10867324	Identifier	instance		10867305	0					
ANR	10867325	Identifier	ctx		10867305	1					
ANR	10867326	IdentifierDeclStatement	gs_memory_t * mem = ctx -> memory ;	398:4:11231:11261	10867305	2	True				
ANR	10867327	IdentifierDecl	* mem = ctx -> memory		10867305	0					
ANR	10867328	IdentifierDeclType	gs_memory_t *		10867305	0					
ANR	10867329	Identifier	mem		10867305	1					
ANR	10867330	AssignmentExpression	* mem = ctx -> memory		10867305	2		=			
ANR	10867331	Identifier	mem		10867305	0					
ANR	10867332	PtrMemberAccess	ctx -> memory		10867305	1					
ANR	10867333	Identifier	ctx		10867305	0					
ANR	10867334	Identifier	memory		10867305	1					
ANR	10867335	ExpressionStatement	"gs_free_object ( mem , ctx , ""xps_imp_deallocate_interp_instance"" )"	403:4:11352:11414	10867305	3	True				
ANR	10867336	CallExpression	"gs_free_object ( mem , ctx , ""xps_imp_deallocate_interp_instance"" )"		10867305	0					
ANR	10867337	Callee	gs_free_object		10867305	0					
ANR	10867338	Identifier	gs_free_object		10867305	0					
ANR	10867339	ArgumentList	mem		10867305	1					
ANR	10867340	Argument	mem		10867305	0					
ANR	10867341	Identifier	mem		10867305	0					
ANR	10867342	Argument	ctx		10867305	1					
ANR	10867343	Identifier	ctx		10867305	0					
ANR	10867344	Argument	"""xps_imp_deallocate_interp_instance"""		10867305	2					
ANR	10867345	PrimaryExpression	"""xps_imp_deallocate_interp_instance"""		10867305	0					
ANR	10867346	ExpressionStatement	"gs_free_object ( mem , instance , ""xps_imp_deallocate_interp_instance"" )"	404:4:11420:11487	10867305	4	True				
ANR	10867347	CallExpression	"gs_free_object ( mem , instance , ""xps_imp_deallocate_interp_instance"" )"		10867305	0					
ANR	10867348	Callee	gs_free_object		10867305	0					
ANR	10867349	Identifier	gs_free_object		10867305	0					
ANR	10867350	ArgumentList	mem		10867305	1					
ANR	10867351	Argument	mem		10867305	0					
ANR	10867352	Identifier	mem		10867305	0					
ANR	10867353	Argument	instance		10867305	1					
ANR	10867354	Identifier	instance		10867305	0					
ANR	10867355	Argument	"""xps_imp_deallocate_interp_instance"""		10867305	2					
ANR	10867356	PrimaryExpression	"""xps_imp_deallocate_interp_instance"""		10867305	0					
ANR	10867357	ReturnStatement	return 0 ;	406:4:11494:11502	10867305	5	True				
ANR	10867358	PrimaryExpression	0		10867305	0					
ANR	10867359	ReturnType	static int		10867305	1					
ANR	10867360	Identifier	xps_imp_deallocate_interp_instance		10867305	2					
ANR	10867361	ParameterList	pl_interp_implementation_t * impl		10867305	3					
ANR	10867362	Parameter	pl_interp_implementation_t * impl	394:35:11087:11118	10867305	0	True				
ANR	10867363	ParameterType	pl_interp_implementation_t *		10867305	0					
ANR	10867364	Identifier	impl		10867305	1					
ANR	10867365	CFGEntryNode	ENTRY		10867305		True				
ANR	10867366	CFGExitNode	EXIT		10867305		True				
ANR	10867367	Symbol	impl		10867305						
ANR	10867368	Symbol	ctx -> memory		10867305						
ANR	10867369	Symbol	instance		10867305						
ANR	10867370	Symbol	mem		10867305						
ANR	10867371	Symbol	ctx		10867305						
ANR	10867372	Symbol	instance -> ctx		10867305						
ANR	10867373	Symbol	impl -> interp_client_data		10867305						
ANR	10867374	Symbol	* impl		10867305						
ANR	10867375	Symbol	* instance		10867305						
ANR	10867376	Symbol	* ctx		10867305						
ANR	10867377	DeclStmt									
ANR	10867378	Decl							pl_interp_implementation_t	pl_interp_implementation_t	xps_implementation
ANR	10867379	Function	xps_show_page	430:0:11990:12179							
ANR	10867380	FunctionDef	"xps_show_page (xps_context_t * ctx , int num_copies , int flush)"		10867379	0					
ANR	10867381	CompoundStatement		432:0:12055:12179	10867379	0					
ANR	10867382	ReturnStatement	"return pl_finish_page ( ctx -> memory -> gs_lib_ctx -> top_of_system , ctx -> pgs , num_copies , flush ) ;"	433:4:12061:12177	10867379	0	True				
ANR	10867383	CallExpression	"pl_finish_page ( ctx -> memory -> gs_lib_ctx -> top_of_system , ctx -> pgs , num_copies , flush )"		10867379	0					
ANR	10867384	Callee	pl_finish_page		10867379	0					
ANR	10867385	Identifier	pl_finish_page		10867379	0					
ANR	10867386	ArgumentList	ctx -> memory -> gs_lib_ctx -> top_of_system		10867379	1					
ANR	10867387	Argument	ctx -> memory -> gs_lib_ctx -> top_of_system		10867379	0					
ANR	10867388	PtrMemberAccess	ctx -> memory -> gs_lib_ctx -> top_of_system		10867379	0					
ANR	10867389	PtrMemberAccess	ctx -> memory -> gs_lib_ctx		10867379	0					
ANR	10867390	PtrMemberAccess	ctx -> memory		10867379	0					
ANR	10867391	Identifier	ctx		10867379	0					
ANR	10867392	Identifier	memory		10867379	1					
ANR	10867393	Identifier	gs_lib_ctx		10867379	1					
ANR	10867394	Identifier	top_of_system		10867379	1					
ANR	10867395	Argument	ctx -> pgs		10867379	1					
ANR	10867396	PtrMemberAccess	ctx -> pgs		10867379	0					
ANR	10867397	Identifier	ctx		10867379	0					
ANR	10867398	Identifier	pgs		10867379	1					
ANR	10867399	Argument	num_copies		10867379	2					
ANR	10867400	Identifier	num_copies		10867379	0					
ANR	10867401	Argument	flush		10867379	3					
ANR	10867402	Identifier	flush		10867379	0					
ANR	10867403	ReturnType	int		10867379	1					
ANR	10867404	Identifier	xps_show_page		10867379	2					
ANR	10867405	ParameterList	"xps_context_t * ctx , int num_copies , int flush"		10867379	3					
ANR	10867406	Parameter	xps_context_t * ctx	431:14:12008:12025	10867379	0	True				
ANR	10867407	ParameterType	xps_context_t *		10867379	0					
ANR	10867408	Identifier	ctx		10867379	1					
ANR	10867409	Parameter	int num_copies	431:34:12028:12041	10867379	1	True				
ANR	10867410	ParameterType	int		10867379	0					
ANR	10867411	Identifier	num_copies		10867379	1					
ANR	10867412	Parameter	int flush	431:50:12044:12052	10867379	2	True				
ANR	10867413	ParameterType	int		10867379	0					
ANR	10867414	Identifier	flush		10867379	1					
ANR	10867415	CFGEntryNode	ENTRY		10867379		True				
ANR	10867416	CFGExitNode	EXIT		10867379		True				
ANR	10867417	Symbol	* * * ctx		10867379						
ANR	10867418	Symbol	ctx		10867379						
ANR	10867419	Symbol	ctx -> pgs		10867379						
ANR	10867420	Symbol	pl_finish_page		10867379						
ANR	10867421	Symbol	num_copies		10867379						
ANR	10867422	Symbol	ctx -> memory -> gs_lib_ctx		10867379						
ANR	10867423	Symbol	* ctx -> memory -> gs_lib_ctx		10867379						
ANR	10867424	Symbol	* ctx		10867379						
ANR	10867425	Symbol	ctx -> memory		10867379						
ANR	10867426	Symbol	* * ctx -> memory		10867379						
ANR	10867427	Symbol	ctx -> memory -> gs_lib_ctx -> top_of_system		10867379						
ANR	10867428	Symbol	flush		10867379						
ANR	10867429	Symbol	* * ctx		10867379						
ANR	10867430	Symbol	* ctx -> memory		10867379						
ANR	10867431	Function	identity_transfer	442:0:12269:12367							
ANR	10867432	FunctionDef	"identity_transfer (double tint , const gx_transfer_map * ignore_map)"		10867431	0					
ANR	10867433	CompoundStatement		444:0:12348:12367	10867431	0					
ANR	10867434	ReturnStatement	return tint ;	445:4:12354:12365	10867431	0	True				
ANR	10867435	Identifier	tint		10867431	0					
ANR	10867436	ReturnType	static float		10867431	1					
ANR	10867437	Identifier	identity_transfer		10867431	2					
ANR	10867438	ParameterList	"double tint , const gx_transfer_map * ignore_map"		10867431	3					
ANR	10867439	Parameter	double tint	443:18:12300:12310	10867431	0	True				
ANR	10867440	ParameterType	double		10867431	0					
ANR	10867441	Identifier	tint		10867431	1					
ANR	10867442	Parameter	const gx_transfer_map * ignore_map	443:31:12313:12345	10867431	1	True				
ANR	10867443	ParameterType	const gx_transfer_map *		10867431	0					
ANR	10867444	Identifier	ignore_map		10867431	1					
ANR	10867445	CFGEntryNode	ENTRY		10867431		True				
ANR	10867446	CFGExitNode	EXIT		10867431		True				
ANR	10867447	Symbol	tint		10867431						
ANR	10867448	Symbol	ignore_map		10867431						
ANR	10867449	DeclStmt									
ANR	10867450	Decl							byte	byte [ 256 ]	order16x16
ANR	10867451	Function	xps_install_halftone	472:0:13695:14671							
ANR	10867452	FunctionDef	"xps_install_halftone (xps_context_t * ctx , gx_device * pdevice)"		10867451	0					
ANR	10867453	CompoundStatement		474:0:13767:14671	10867451	0					
ANR	10867454	IdentifierDeclStatement	gs_halftone ht ;	475:4:13773:13787	10867451	0	True				
ANR	10867455	IdentifierDecl	ht		10867451	0					
ANR	10867456	IdentifierDeclType	gs_halftone		10867451	0					
ANR	10867457	Identifier	ht		10867451	1					
ANR	10867458	IdentifierDeclStatement	gs_string thresh ;	476:4:13793:13809	10867451	1	True				
ANR	10867459	IdentifierDecl	thresh		10867451	0					
ANR	10867460	IdentifierDeclType	gs_string		10867451	0					
ANR	10867461	Identifier	thresh		10867451	1					
ANR	10867462	IdentifierDeclStatement	int code ;	477:4:13815:13823	10867451	2	True				
ANR	10867463	IdentifierDecl	code		10867451	0					
ANR	10867464	IdentifierDeclType	int		10867451	0					
ANR	10867465	Identifier	code		10867451	1					
ANR	10867466	IdentifierDeclStatement	int width = 16 ;	479:4:13830:13844	10867451	3	True				
ANR	10867467	IdentifierDecl	width = 16		10867451	0					
ANR	10867468	IdentifierDeclType	int		10867451	0					
ANR	10867469	Identifier	width		10867451	1					
ANR	10867470	AssignmentExpression	width = 16		10867451	2		=			
ANR	10867471	Identifier	width		10867451	0					
ANR	10867472	PrimaryExpression	16		10867451	1					
ANR	10867473	IdentifierDeclStatement	int height = 16 ;	480:4:13850:13865	10867451	4	True				
ANR	10867474	IdentifierDecl	height = 16		10867451	0					
ANR	10867475	IdentifierDeclType	int		10867451	0					
ANR	10867476	Identifier	height		10867451	1					
ANR	10867477	AssignmentExpression	height = 16		10867451	2		=			
ANR	10867478	Identifier	height		10867451	0					
ANR	10867479	PrimaryExpression	16		10867451	1					
ANR	10867480	ExpressionStatement	thresh . data = order16x16	481:4:13871:13895	10867451	5	True				
ANR	10867481	AssignmentExpression	thresh . data = order16x16		10867451	0		=			
ANR	10867482	MemberAccess	thresh . data		10867451	0					
ANR	10867483	Identifier	thresh		10867451	0					
ANR	10867484	Identifier	data		10867451	1					
ANR	10867485	Identifier	order16x16		10867451	1					
ANR	10867486	ExpressionStatement	thresh . size = width * height	482:4:13901:13929	10867451	6	True				
ANR	10867487	AssignmentExpression	thresh . size = width * height		10867451	0		=			
ANR	10867488	MemberAccess	thresh . size		10867451	0					
ANR	10867489	Identifier	thresh		10867451	0					
ANR	10867490	Identifier	size		10867451	1					
ANR	10867491	MultiplicativeExpression	width * height		10867451	1		*			
ANR	10867492	Identifier	width		10867451	0					
ANR	10867493	Identifier	height		10867451	1					
ANR	10867494	IfStatement	if ( gx_device_must_halftone ( pdevice ) )		10867451	7					
ANR	10867495	Condition	gx_device_must_halftone ( pdevice )	484:8:13940:13971	10867451	0	True				
ANR	10867496	CallExpression	gx_device_must_halftone ( pdevice )		10867451	0					
ANR	10867497	Callee	gx_device_must_halftone		10867451	0					
ANR	10867498	Identifier	gx_device_must_halftone		10867451	0					
ANR	10867499	ArgumentList	pdevice		10867451	1					
ANR	10867500	Argument	pdevice		10867451	0					
ANR	10867501	Identifier	pdevice		10867451	0					
ANR	10867502	CompoundStatement		12:4:210:210	10867451	1					
ANR	10867503	ExpressionStatement	ht . type = ht_type_threshold	486:8:13988:14015	10867451	0	True				
ANR	10867504	AssignmentExpression	ht . type = ht_type_threshold		10867451	0		=			
ANR	10867505	MemberAccess	ht . type		10867451	0					
ANR	10867506	Identifier	ht		10867451	0					
ANR	10867507	Identifier	type		10867451	1					
ANR	10867508	Identifier	ht_type_threshold		10867451	1					
ANR	10867509	ExpressionStatement	ht . params . threshold . width = width	487:8:14025:14058	10867451	1	True				
ANR	10867510	AssignmentExpression	ht . params . threshold . width = width		10867451	0		=			
ANR	10867511	MemberAccess	ht . params . threshold . width		10867451	0					
ANR	10867512	MemberAccess	ht . params . threshold		10867451	0					
ANR	10867513	MemberAccess	ht . params		10867451	0					
ANR	10867514	Identifier	ht		10867451	0					
ANR	10867515	Identifier	params		10867451	1					
ANR	10867516	Identifier	threshold		10867451	1					
ANR	10867517	Identifier	width		10867451	1					
ANR	10867518	Identifier	width		10867451	1					
ANR	10867519	ExpressionStatement	ht . params . threshold . height = height	488:8:14068:14103	10867451	2	True				
ANR	10867520	AssignmentExpression	ht . params . threshold . height = height		10867451	0		=			
ANR	10867521	MemberAccess	ht . params . threshold . height		10867451	0					
ANR	10867522	MemberAccess	ht . params . threshold		10867451	0					
ANR	10867523	MemberAccess	ht . params		10867451	0					
ANR	10867524	Identifier	ht		10867451	0					
ANR	10867525	Identifier	params		10867451	1					
ANR	10867526	Identifier	threshold		10867451	1					
ANR	10867527	Identifier	height		10867451	1					
ANR	10867528	Identifier	height		10867451	1					
ANR	10867529	ExpressionStatement	ht . params . threshold . thresholds . data = thresh . data	489:8:14113:14162	10867451	3	True				
ANR	10867530	AssignmentExpression	ht . params . threshold . thresholds . data = thresh . data		10867451	0		=			
ANR	10867531	MemberAccess	ht . params . threshold . thresholds . data		10867451	0					
ANR	10867532	MemberAccess	ht . params . threshold . thresholds		10867451	0					
ANR	10867533	MemberAccess	ht . params . threshold		10867451	0					
ANR	10867534	MemberAccess	ht . params		10867451	0					
ANR	10867535	Identifier	ht		10867451	0					
ANR	10867536	Identifier	params		10867451	1					
ANR	10867537	Identifier	threshold		10867451	1					
ANR	10867538	Identifier	thresholds		10867451	1					
ANR	10867539	Identifier	data		10867451	1					
ANR	10867540	MemberAccess	thresh . data		10867451	1					
ANR	10867541	Identifier	thresh		10867451	0					
ANR	10867542	Identifier	data		10867451	1					
ANR	10867543	ExpressionStatement	ht . params . threshold . thresholds . size = thresh . size	490:8:14172:14221	10867451	4	True				
ANR	10867544	AssignmentExpression	ht . params . threshold . thresholds . size = thresh . size		10867451	0		=			
ANR	10867545	MemberAccess	ht . params . threshold . thresholds . size		10867451	0					
ANR	10867546	MemberAccess	ht . params . threshold . thresholds		10867451	0					
ANR	10867547	MemberAccess	ht . params . threshold		10867451	0					
ANR	10867548	MemberAccess	ht . params		10867451	0					
ANR	10867549	Identifier	ht		10867451	0					
ANR	10867550	Identifier	params		10867451	1					
ANR	10867551	Identifier	threshold		10867451	1					
ANR	10867552	Identifier	thresholds		10867451	1					
ANR	10867553	Identifier	size		10867451	1					
ANR	10867554	MemberAccess	thresh . size		10867451	1					
ANR	10867555	Identifier	thresh		10867451	0					
ANR	10867556	Identifier	size		10867451	1					
ANR	10867557	ExpressionStatement	ht . params . threshold . transfer = 0	491:8:14231:14263	10867451	5	True				
ANR	10867558	AssignmentExpression	ht . params . threshold . transfer = 0		10867451	0		=			
ANR	10867559	MemberAccess	ht . params . threshold . transfer		10867451	0					
ANR	10867560	MemberAccess	ht . params . threshold		10867451	0					
ANR	10867561	MemberAccess	ht . params		10867451	0					
ANR	10867562	Identifier	ht		10867451	0					
ANR	10867563	Identifier	params		10867451	1					
ANR	10867564	Identifier	threshold		10867451	1					
ANR	10867565	Identifier	transfer		10867451	1					
ANR	10867566	PrimaryExpression	0		10867451	1					
ANR	10867567	ExpressionStatement	ht . params . threshold . transfer_closure . proc = 0	492:8:14273:14318	10867451	6	True				
ANR	10867568	AssignmentExpression	ht . params . threshold . transfer_closure . proc = 0		10867451	0		=			
ANR	10867569	MemberAccess	ht . params . threshold . transfer_closure . proc		10867451	0					
ANR	10867570	MemberAccess	ht . params . threshold . transfer_closure		10867451	0					
ANR	10867571	MemberAccess	ht . params . threshold		10867451	0					
ANR	10867572	MemberAccess	ht . params		10867451	0					
ANR	10867573	Identifier	ht		10867451	0					
ANR	10867574	Identifier	params		10867451	1					
ANR	10867575	Identifier	threshold		10867451	1					
ANR	10867576	Identifier	transfer_closure		10867451	1					
ANR	10867577	Identifier	proc		10867451	1					
ANR	10867578	PrimaryExpression	0		10867451	1					
ANR	10867579	ExpressionStatement	"gs_settransfer ( ctx -> pgs , identity_transfer )"	494:8:14329:14372	10867451	7	True				
ANR	10867580	CallExpression	"gs_settransfer ( ctx -> pgs , identity_transfer )"		10867451	0					
ANR	10867581	Callee	gs_settransfer		10867451	0					
ANR	10867582	Identifier	gs_settransfer		10867451	0					
ANR	10867583	ArgumentList	ctx -> pgs		10867451	1					
ANR	10867584	Argument	ctx -> pgs		10867451	0					
ANR	10867585	PtrMemberAccess	ctx -> pgs		10867451	0					
ANR	10867586	Identifier	ctx		10867451	0					
ANR	10867587	Identifier	pgs		10867451	1					
ANR	10867588	Argument	identity_transfer		10867451	1					
ANR	10867589	Identifier	identity_transfer		10867451	0					
ANR	10867590	ExpressionStatement	"code = gs_sethalftone ( ctx -> pgs , & ht )"	496:8:14383:14419	10867451	8	True				
ANR	10867591	AssignmentExpression	"code = gs_sethalftone ( ctx -> pgs , & ht )"		10867451	0		=			
ANR	10867592	Identifier	code		10867451	0					
ANR	10867593	CallExpression	"gs_sethalftone ( ctx -> pgs , & ht )"		10867451	1					
ANR	10867594	Callee	gs_sethalftone		10867451	0					
ANR	10867595	Identifier	gs_sethalftone		10867451	0					
ANR	10867596	ArgumentList	ctx -> pgs		10867451	1					
ANR	10867597	Argument	ctx -> pgs		10867451	0					
ANR	10867598	PtrMemberAccess	ctx -> pgs		10867451	0					
ANR	10867599	Identifier	ctx		10867451	0					
ANR	10867600	Identifier	pgs		10867451	1					
ANR	10867601	Argument	& ht		10867451	1					
ANR	10867602	UnaryOperationExpression	& ht		10867451	0					
ANR	10867603	UnaryOperator	&		10867451	0					
ANR	10867604	Identifier	ht		10867451	1					
ANR	10867605	IfStatement	if ( code < 0 )		10867451	9					
ANR	10867606	Condition	code < 0	497:12:14433:14440	10867451	0	True				
ANR	10867607	RelationalExpression	code < 0		10867451	0		<			
ANR	10867608	Identifier	code		10867451	0					
ANR	10867609	PrimaryExpression	0		10867451	1					
ANR	10867610	ReturnStatement	"return gs_throw ( code , ""could not install halftone"" ) ;"	498:12:14455:14506	10867451	1	True				
ANR	10867611	CallExpression	"gs_throw ( code , ""could not install halftone"" )"		10867451	0					
ANR	10867612	Callee	gs_throw		10867451	0					
ANR	10867613	Identifier	gs_throw		10867451	0					
ANR	10867614	ArgumentList	code		10867451	1					
ANR	10867615	Argument	code		10867451	0					
ANR	10867616	Identifier	code		10867451	0					
ANR	10867617	Argument	"""could not install halftone"""		10867451	1					
ANR	10867618	PrimaryExpression	"""could not install halftone"""		10867451	0					
ANR	10867619	ExpressionStatement	"code = gs_sethalftonephase ( ctx -> pgs , 0 , 0 )"	500:8:14517:14559	10867451	10	True				
ANR	10867620	AssignmentExpression	"code = gs_sethalftonephase ( ctx -> pgs , 0 , 0 )"		10867451	0		=			
ANR	10867621	Identifier	code		10867451	0					
ANR	10867622	CallExpression	"gs_sethalftonephase ( ctx -> pgs , 0 , 0 )"		10867451	1					
ANR	10867623	Callee	gs_sethalftonephase		10867451	0					
ANR	10867624	Identifier	gs_sethalftonephase		10867451	0					
ANR	10867625	ArgumentList	ctx -> pgs		10867451	1					
ANR	10867626	Argument	ctx -> pgs		10867451	0					
ANR	10867627	PtrMemberAccess	ctx -> pgs		10867451	0					
ANR	10867628	Identifier	ctx		10867451	0					
ANR	10867629	Identifier	pgs		10867451	1					
ANR	10867630	Argument	0		10867451	1					
ANR	10867631	PrimaryExpression	0		10867451	0					
ANR	10867632	Argument	0		10867451	2					
ANR	10867633	PrimaryExpression	0		10867451	0					
ANR	10867634	IfStatement	if ( code < 0 )		10867451	11					
ANR	10867635	Condition	code < 0	501:12:14573:14580	10867451	0	True				
ANR	10867636	RelationalExpression	code < 0		10867451	0		<			
ANR	10867637	Identifier	code		10867451	0					
ANR	10867638	PrimaryExpression	0		10867451	1					
ANR	10867639	ReturnStatement	"return gs_throw ( code , ""could not set halftone phase"" ) ;"	502:12:14595:14648	10867451	1	True				
ANR	10867640	CallExpression	"gs_throw ( code , ""could not set halftone phase"" )"		10867451	0					
ANR	10867641	Callee	gs_throw		10867451	0					
ANR	10867642	Identifier	gs_throw		10867451	0					
ANR	10867643	ArgumentList	code		10867451	1					
ANR	10867644	Argument	code		10867451	0					
ANR	10867645	Identifier	code		10867451	0					
ANR	10867646	Argument	"""could not set halftone phase"""		10867451	1					
ANR	10867647	PrimaryExpression	"""could not set halftone phase"""		10867451	0					
ANR	10867648	ReturnStatement	return 0 ;	505:4:14661:14669	10867451	8	True				
ANR	10867649	PrimaryExpression	0		10867451	0					
ANR	10867650	ReturnType	static int		10867451	1					
ANR	10867651	Identifier	xps_install_halftone		10867451	2					
ANR	10867652	ParameterList	"xps_context_t * ctx , gx_device * pdevice"		10867451	3					
ANR	10867653	Parameter	xps_context_t * ctx	473:21:13727:13744	10867451	0	True				
ANR	10867654	ParameterType	xps_context_t *		10867451	0					
ANR	10867655	Identifier	ctx		10867451	1					
ANR	10867656	Parameter	gx_device * pdevice	473:41:13747:13764	10867451	1	True				
ANR	10867657	ParameterType	gx_device *		10867451	0					
ANR	10867658	Identifier	pdevice		10867451	1					
ANR	10867659	CFGEntryNode	ENTRY		10867451		True				
ANR	10867660	CFGExitNode	EXIT		10867451		True				
ANR	10867661	Symbol	ht . params . threshold . height		10867451						
ANR	10867662	Symbol	gx_device_must_halftone		10867451						
ANR	10867663	Symbol	gs_sethalftonephase		10867451						
ANR	10867664	Symbol	code		10867451						
ANR	10867665	Symbol	thresh . size		10867451						
ANR	10867666	Symbol	ctx -> pgs		10867451						
ANR	10867667	Symbol	ht . params . threshold		10867451						
ANR	10867668	Symbol	thresh . data		10867451						
ANR	10867669	Symbol	ht		10867451						
ANR	10867670	Symbol	ht . type		10867451						
ANR	10867671	Symbol	ht . params . threshold . width		10867451						
ANR	10867672	Symbol	ht . params . threshold . thresholds		10867451						
ANR	10867673	Symbol	& ht		10867451						
ANR	10867674	Symbol	identity_transfer		10867451						
ANR	10867675	Symbol	ht . params . threshold . thresholds . size		10867451						
ANR	10867676	Symbol	thresh		10867451						
ANR	10867677	Symbol	height		10867451						
ANR	10867678	Symbol	pdevice		10867451						
ANR	10867679	Symbol	ctx		10867451						
ANR	10867680	Symbol	gs_sethalftone		10867451						
ANR	10867681	Symbol	gs_throw		10867451						
ANR	10867682	Symbol	ht . params		10867451						
ANR	10867683	Symbol	ht . params . threshold . transfer_closure . proc		10867451						
ANR	10867684	Symbol	* ctx		10867451						
ANR	10867685	Symbol	ht . params . threshold . transfer		10867451						
ANR	10867686	Symbol	ht_type_threshold		10867451						
ANR	10867687	Symbol	width		10867451						
ANR	10867688	Symbol	ht . params . threshold . thresholds . data		10867451						
ANR	10867689	Symbol	order16x16		10867451						
ANR	10867690	Symbol	ht . params . threshold . transfer_closure		10867451						
