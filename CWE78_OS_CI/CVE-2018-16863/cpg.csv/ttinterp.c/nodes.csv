command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10583590	File	data/converged/CVE-2018-16863_ghostpdl/ttinterp.c								
ANR	10583591	Function	TT_Goto_CodeRange	125:2:5941:6694							
ANR	10583592	FunctionDef	"TT_Goto_CodeRange (TT_ExecContext exec , FT_Int range , FT_Long IP)"		10583591	0					
ANR	10583593	CompoundStatement		128:2:6070:6694	10583591	0					
ANR	10583594	IdentifierDeclStatement	TT_CodeRange * coderange ;	129:4:6076:6100	10583591	0	True				
ANR	10583595	IdentifierDecl	* coderange		10583591	0					
ANR	10583596	IdentifierDeclType	TT_CodeRange *		10583591	0					
ANR	10583597	Identifier	coderange		10583591	1					
ANR	10583598	ExpressionStatement	FT_ASSERT ( range >= 1 && range <= 3 )	132:4:6108:6145	10583591	1	True				
ANR	10583599	CallExpression	FT_ASSERT ( range >= 1 && range <= 3 )		10583591	0					
ANR	10583600	Callee	FT_ASSERT		10583591	0					
ANR	10583601	Identifier	FT_ASSERT		10583591	0					
ANR	10583602	ArgumentList	range >= 1 && range <= 3		10583591	1					
ANR	10583603	Argument	range >= 1 && range <= 3		10583591	0					
ANR	10583604	AndExpression	range >= 1 && range <= 3		10583591	0		&&			
ANR	10583605	RelationalExpression	range >= 1		10583591	0		>=			
ANR	10583606	Identifier	range		10583591	0					
ANR	10583607	PrimaryExpression	1		10583591	1					
ANR	10583608	RelationalExpression	range <= 3		10583591	1		<=			
ANR	10583609	Identifier	range		10583591	0					
ANR	10583610	PrimaryExpression	3		10583591	1					
ANR	10583611	ExpressionStatement	coderange = & exec -> codeRangeTable [ range - 1 ]	134:4:6152:6196	10583591	2	True				
ANR	10583612	AssignmentExpression	coderange = & exec -> codeRangeTable [ range - 1 ]		10583591	0		=			
ANR	10583613	Identifier	coderange		10583591	0					
ANR	10583614	UnaryOperationExpression	& exec -> codeRangeTable [ range - 1 ]		10583591	1					
ANR	10583615	UnaryOperator	&		10583591	0					
ANR	10583616	ArrayIndexing	exec -> codeRangeTable [ range - 1 ]		10583591	1					
ANR	10583617	PtrMemberAccess	exec -> codeRangeTable		10583591	0					
ANR	10583618	Identifier	exec		10583591	0					
ANR	10583619	Identifier	codeRangeTable		10583591	1					
ANR	10583620	AdditiveExpression	range - 1		10583591	1		-			
ANR	10583621	Identifier	range		10583591	0					
ANR	10583622	PrimaryExpression	1		10583591	1					
ANR	10583623	ExpressionStatement	FT_ASSERT ( coderange -> base )	136:4:6203:6231	10583591	3	True				
ANR	10583624	CallExpression	FT_ASSERT ( coderange -> base )		10583591	0					
ANR	10583625	Callee	FT_ASSERT		10583591	0					
ANR	10583626	Identifier	FT_ASSERT		10583591	0					
ANR	10583627	ArgumentList	coderange -> base		10583591	1					
ANR	10583628	Argument	coderange -> base		10583591	0					
ANR	10583629	PtrMemberAccess	coderange -> base		10583591	0					
ANR	10583630	Identifier	coderange		10583591	0					
ANR	10583631	Identifier	base		10583591	1					
ANR	10583632	ExpressionStatement	FT_ASSERT ( IP <= coderange -> size )	142:4:6526:6560	10583591	4	True				
ANR	10583633	CallExpression	FT_ASSERT ( IP <= coderange -> size )		10583591	0					
ANR	10583634	Callee	FT_ASSERT		10583591	0					
ANR	10583635	Identifier	FT_ASSERT		10583591	0					
ANR	10583636	ArgumentList	IP <= coderange -> size		10583591	1					
ANR	10583637	Argument	IP <= coderange -> size		10583591	0					
ANR	10583638	RelationalExpression	IP <= coderange -> size		10583591	0		<=			
ANR	10583639	Identifier	IP		10583591	0					
ANR	10583640	PtrMemberAccess	coderange -> size		10583591	1					
ANR	10583641	Identifier	coderange		10583591	0					
ANR	10583642	Identifier	size		10583591	1					
ANR	10583643	ExpressionStatement	exec -> code = coderange -> base	144:4:6567:6599	10583591	5	True				
ANR	10583644	AssignmentExpression	exec -> code = coderange -> base		10583591	0		=			
ANR	10583645	PtrMemberAccess	exec -> code		10583591	0					
ANR	10583646	Identifier	exec		10583591	0					
ANR	10583647	Identifier	code		10583591	1					
ANR	10583648	PtrMemberAccess	coderange -> base		10583591	1					
ANR	10583649	Identifier	coderange		10583591	0					
ANR	10583650	Identifier	base		10583591	1					
ANR	10583651	ExpressionStatement	exec -> codeSize = coderange -> size	145:4:6605:6637	10583591	6	True				
ANR	10583652	AssignmentExpression	exec -> codeSize = coderange -> size		10583591	0		=			
ANR	10583653	PtrMemberAccess	exec -> codeSize		10583591	0					
ANR	10583654	Identifier	exec		10583591	0					
ANR	10583655	Identifier	codeSize		10583591	1					
ANR	10583656	PtrMemberAccess	coderange -> size		10583591	1					
ANR	10583657	Identifier	coderange		10583591	0					
ANR	10583658	Identifier	size		10583591	1					
ANR	10583659	ExpressionStatement	exec -> IP = IP	146:4:6643:6662	10583591	7	True				
ANR	10583660	AssignmentExpression	exec -> IP = IP		10583591	0		=			
ANR	10583661	PtrMemberAccess	exec -> IP		10583591	0					
ANR	10583662	Identifier	exec		10583591	0					
ANR	10583663	Identifier	IP		10583591	1					
ANR	10583664	Identifier	IP		10583591	1					
ANR	10583665	ExpressionStatement	exec -> curRange = range	147:4:6668:6690	10583591	8	True				
ANR	10583666	AssignmentExpression	exec -> curRange = range		10583591	0		=			
ANR	10583667	PtrMemberAccess	exec -> curRange		10583591	0					
ANR	10583668	Identifier	exec		10583591	0					
ANR	10583669	Identifier	curRange		10583591	1					
ANR	10583670	Identifier	range		10583591	1					
ANR	10583671	Identifier	TT_Goto_CodeRange		10583591	1					
ANR	10583672	ParameterList	"TT_ExecContext exec , FT_Int range , FT_Long IP"		10583591	2					
ANR	10583673	Parameter	TT_ExecContext exec	125:21:5960:5979	10583591	0	True				
ANR	10583674	ParameterType	TT_ExecContext		10583591	0					
ANR	10583675	Identifier	exec		10583591	1					
ANR	10583676	Parameter	FT_Int range	126:21:6003:6023	10583591	1	True				
ANR	10583677	ParameterType	FT_Int		10583591	0					
ANR	10583678	Identifier	range		10583591	1					
ANR	10583679	Parameter	FT_Long IP	127:21:6047:6064	10583591	2	True				
ANR	10583680	ParameterType	FT_Long		10583591	0					
ANR	10583681	Identifier	IP		10583591	1					
ANR	10583682	CFGEntryNode	ENTRY		10583591		True				
ANR	10583683	CFGExitNode	EXIT		10583591		True				
ANR	10583684	Symbol	exec -> codeRangeTable		10583591						
ANR	10583685	Symbol	coderange -> size		10583591						
ANR	10583686	Symbol	exec -> curRange		10583591						
ANR	10583687	Symbol	coderange		10583591						
ANR	10583688	Symbol	IP		10583591						
ANR	10583689	Symbol	range		10583591						
ANR	10583690	Symbol	coderange -> base		10583591						
ANR	10583691	Symbol	* coderange		10583591						
ANR	10583692	Symbol	exec -> IP		10583591						
ANR	10583693	Symbol	* exec		10583591						
ANR	10583694	Symbol	exec -> code		10583591						
ANR	10583695	Symbol	exec -> codeSize		10583591						
ANR	10583696	Symbol	exec		10583591						
ANR	10583697	Function	TT_Set_CodeRange	170:2:8127:8457							
ANR	10583698	FunctionDef	"TT_Set_CodeRange (TT_ExecContext exec , FT_Int range , void * base , FT_Long length)"		10583697	0					
ANR	10583699	CompoundStatement		174:2:8299:8457	10583697	0					
ANR	10583700	ExpressionStatement	FT_ASSERT ( range >= 1 && range <= 3 )	175:4:8305:8342	10583697	0	True				
ANR	10583701	CallExpression	FT_ASSERT ( range >= 1 && range <= 3 )		10583697	0					
ANR	10583702	Callee	FT_ASSERT		10583697	0					
ANR	10583703	Identifier	FT_ASSERT		10583697	0					
ANR	10583704	ArgumentList	range >= 1 && range <= 3		10583697	1					
ANR	10583705	Argument	range >= 1 && range <= 3		10583697	0					
ANR	10583706	AndExpression	range >= 1 && range <= 3		10583697	0		&&			
ANR	10583707	RelationalExpression	range >= 1		10583697	0		>=			
ANR	10583708	Identifier	range		10583697	0					
ANR	10583709	PrimaryExpression	1		10583697	1					
ANR	10583710	RelationalExpression	range <= 3		10583697	1		<=			
ANR	10583711	Identifier	range		10583697	0					
ANR	10583712	PrimaryExpression	3		10583697	1					
ANR	10583713	ExpressionStatement	exec -> codeRangeTable [ range - 1 ] . base = ( FT_Byte * ) base	177:4:8349:8402	10583697	1	True				
ANR	10583714	AssignmentExpression	exec -> codeRangeTable [ range - 1 ] . base = ( FT_Byte * ) base		10583697	0		=			
ANR	10583715	MemberAccess	exec -> codeRangeTable [ range - 1 ] . base		10583697	0					
ANR	10583716	ArrayIndexing	exec -> codeRangeTable [ range - 1 ]		10583697	0					
ANR	10583717	PtrMemberAccess	exec -> codeRangeTable		10583697	0					
ANR	10583718	Identifier	exec		10583697	0					
ANR	10583719	Identifier	codeRangeTable		10583697	1					
ANR	10583720	AdditiveExpression	range - 1		10583697	1		-			
ANR	10583721	Identifier	range		10583697	0					
ANR	10583722	PrimaryExpression	1		10583697	1					
ANR	10583723	Identifier	base		10583697	1					
ANR	10583724	CastExpression	( FT_Byte * ) base		10583697	1					
ANR	10583725	CastTarget	FT_Byte *		10583697	0					
ANR	10583726	Identifier	base		10583697	1					
ANR	10583727	ExpressionStatement	exec -> codeRangeTable [ range - 1 ] . size = length	178:4:8408:8453	10583697	2	True				
ANR	10583728	AssignmentExpression	exec -> codeRangeTable [ range - 1 ] . size = length		10583697	0		=			
ANR	10583729	MemberAccess	exec -> codeRangeTable [ range - 1 ] . size		10583697	0					
ANR	10583730	ArrayIndexing	exec -> codeRangeTable [ range - 1 ]		10583697	0					
ANR	10583731	PtrMemberAccess	exec -> codeRangeTable		10583697	0					
ANR	10583732	Identifier	exec		10583697	0					
ANR	10583733	Identifier	codeRangeTable		10583697	1					
ANR	10583734	AdditiveExpression	range - 1		10583697	1		-			
ANR	10583735	Identifier	range		10583697	0					
ANR	10583736	PrimaryExpression	1		10583697	1					
ANR	10583737	Identifier	size		10583697	1					
ANR	10583738	Identifier	length		10583697	1					
ANR	10583739	Identifier	TT_Set_CodeRange		10583697	1					
ANR	10583740	ParameterList	"TT_ExecContext exec , FT_Int range , void * base , FT_Long length"		10583697	2					
ANR	10583741	Parameter	TT_ExecContext exec	170:20:8145:8164	10583697	0	True				
ANR	10583742	ParameterType	TT_ExecContext		10583697	0					
ANR	10583743	Identifier	exec		10583697	1					
ANR	10583744	Parameter	FT_Int range	171:20:8187:8207	10583697	1	True				
ANR	10583745	ParameterType	FT_Int		10583697	0					
ANR	10583746	Identifier	range		10583697	1					
ANR	10583747	Parameter	void * base	172:20:8230:8249	10583697	2	True				
ANR	10583748	ParameterType	void *		10583697	0					
ANR	10583749	Identifier	base		10583697	1					
ANR	10583750	Parameter	FT_Long length	173:20:8272:8293	10583697	3	True				
ANR	10583751	ParameterType	FT_Long		10583697	0					
ANR	10583752	Identifier	length		10583697	1					
ANR	10583753	CFGEntryNode	ENTRY		10583697		True				
ANR	10583754	CFGExitNode	EXIT		10583697		True				
ANR	10583755	Symbol	exec -> codeRangeTable		10583697						
ANR	10583756	Symbol	* range		10583697						
ANR	10583757	Symbol	exec -> codeRangeTable [ range - 1 ] . base		10583697						
ANR	10583758	Symbol	* exec -> codeRangeTable		10583697						
ANR	10583759	Symbol	length		10583697						
ANR	10583760	Symbol	range		10583697						
ANR	10583761	Symbol	* exec		10583697						
ANR	10583762	Symbol	* * exec		10583697						
ANR	10583763	Symbol	exec -> codeRangeTable [ range - 1 ] . size		10583697						
ANR	10583764	Symbol	exec		10583697						
ANR	10583765	Symbol	base		10583697						
ANR	10583766	Function	TT_Clear_CodeRange	197:2:9578:9811							
ANR	10583767	FunctionDef	"TT_Clear_CodeRange (TT_ExecContext exec , FT_Int range)"		10583766	0					
ANR	10583768	CompoundStatement		199:2:9668:9811	10583766	0					
ANR	10583769	ExpressionStatement	FT_ASSERT ( range >= 1 && range <= 3 )	200:4:9674:9711	10583766	0	True				
ANR	10583770	CallExpression	FT_ASSERT ( range >= 1 && range <= 3 )		10583766	0					
ANR	10583771	Callee	FT_ASSERT		10583766	0					
ANR	10583772	Identifier	FT_ASSERT		10583766	0					
ANR	10583773	ArgumentList	range >= 1 && range <= 3		10583766	1					
ANR	10583774	Argument	range >= 1 && range <= 3		10583766	0					
ANR	10583775	AndExpression	range >= 1 && range <= 3		10583766	0		&&			
ANR	10583776	RelationalExpression	range >= 1		10583766	0		>=			
ANR	10583777	Identifier	range		10583766	0					
ANR	10583778	PrimaryExpression	1		10583766	1					
ANR	10583779	RelationalExpression	range <= 3		10583766	1		<=			
ANR	10583780	Identifier	range		10583766	0					
ANR	10583781	PrimaryExpression	3		10583766	1					
ANR	10583782	ExpressionStatement	exec -> codeRangeTable [ range - 1 ] . base = NULL	202:4:9718:9761	10583766	1	True				
ANR	10583783	AssignmentExpression	exec -> codeRangeTable [ range - 1 ] . base = NULL		10583766	0		=			
ANR	10583784	MemberAccess	exec -> codeRangeTable [ range - 1 ] . base		10583766	0					
ANR	10583785	ArrayIndexing	exec -> codeRangeTable [ range - 1 ]		10583766	0					
ANR	10583786	PtrMemberAccess	exec -> codeRangeTable		10583766	0					
ANR	10583787	Identifier	exec		10583766	0					
ANR	10583788	Identifier	codeRangeTable		10583766	1					
ANR	10583789	AdditiveExpression	range - 1		10583766	1		-			
ANR	10583790	Identifier	range		10583766	0					
ANR	10583791	PrimaryExpression	1		10583766	1					
ANR	10583792	Identifier	base		10583766	1					
ANR	10583793	Identifier	NULL		10583766	1					
ANR	10583794	ExpressionStatement	exec -> codeRangeTable [ range - 1 ] . size = 0	203:4:9767:9807	10583766	2	True				
ANR	10583795	AssignmentExpression	exec -> codeRangeTable [ range - 1 ] . size = 0		10583766	0		=			
ANR	10583796	MemberAccess	exec -> codeRangeTable [ range - 1 ] . size		10583766	0					
ANR	10583797	ArrayIndexing	exec -> codeRangeTable [ range - 1 ]		10583766	0					
ANR	10583798	PtrMemberAccess	exec -> codeRangeTable		10583766	0					
ANR	10583799	Identifier	exec		10583766	0					
ANR	10583800	Identifier	codeRangeTable		10583766	1					
ANR	10583801	AdditiveExpression	range - 1		10583766	1		-			
ANR	10583802	Identifier	range		10583766	0					
ANR	10583803	PrimaryExpression	1		10583766	1					
ANR	10583804	Identifier	size		10583766	1					
ANR	10583805	PrimaryExpression	0		10583766	1					
ANR	10583806	Identifier	TT_Clear_CodeRange		10583766	1					
ANR	10583807	ParameterList	"TT_ExecContext exec , FT_Int range"		10583766	2					
ANR	10583808	Parameter	TT_ExecContext exec	197:22:9598:9617	10583766	0	True				
ANR	10583809	ParameterType	TT_ExecContext		10583766	0					
ANR	10583810	Identifier	exec		10583766	1					
ANR	10583811	Parameter	FT_Int range	198:22:9642:9662	10583766	1	True				
ANR	10583812	ParameterType	FT_Int		10583766	0					
ANR	10583813	Identifier	range		10583766	1					
ANR	10583814	CFGEntryNode	ENTRY		10583766		True				
ANR	10583815	CFGExitNode	EXIT		10583766		True				
ANR	10583816	Symbol	exec -> codeRangeTable		10583766						
ANR	10583817	Symbol	* range		10583766						
ANR	10583818	Symbol	NULL		10583766						
ANR	10583819	Symbol	exec -> codeRangeTable [ range - 1 ] . base		10583766						
ANR	10583820	Symbol	* exec -> codeRangeTable		10583766						
ANR	10583821	Symbol	range		10583766						
ANR	10583822	Symbol	* exec		10583766						
ANR	10583823	Symbol	* * exec		10583766						
ANR	10583824	Symbol	exec -> codeRangeTable [ range - 1 ] . size		10583766						
ANR	10583825	Symbol	exec		10583766						
ANR	10583826	Function	TT_Done_Context	231:2:11480:11982							
ANR	10583827	FunctionDef	TT_Done_Context (TT_ExecContext exec)		10583826	0					
ANR	10583828	CompoundStatement		232:2:11522:11982	10583826	0					
ANR	10583829	IdentifierDeclStatement	FT_Memory memory = exec -> memory ;	233:4:11528:11560	10583826	0	True				
ANR	10583830	IdentifierDecl	memory = exec -> memory		10583826	0					
ANR	10583831	IdentifierDeclType	FT_Memory		10583826	0					
ANR	10583832	Identifier	memory		10583826	1					
ANR	10583833	AssignmentExpression	memory = exec -> memory		10583826	2		=			
ANR	10583834	Identifier	memory		10583826	0					
ANR	10583835	PtrMemberAccess	exec -> memory		10583826	1					
ANR	10583836	Identifier	exec		10583826	0					
ANR	10583837	Identifier	memory		10583826	1					
ANR	10583838	ExpressionStatement	exec -> maxPoints = 0	237:4:11590:11611	10583826	1	True				
ANR	10583839	AssignmentExpression	exec -> maxPoints = 0		10583826	0		=			
ANR	10583840	PtrMemberAccess	exec -> maxPoints		10583826	0					
ANR	10583841	Identifier	exec		10583826	0					
ANR	10583842	Identifier	maxPoints		10583826	1					
ANR	10583843	PrimaryExpression	0		10583826	1					
ANR	10583844	ExpressionStatement	exec -> maxContours = 0	238:4:11617:11638	10583826	2	True				
ANR	10583845	AssignmentExpression	exec -> maxContours = 0		10583826	0		=			
ANR	10583846	PtrMemberAccess	exec -> maxContours		10583826	0					
ANR	10583847	Identifier	exec		10583826	0					
ANR	10583848	Identifier	maxContours		10583826	1					
ANR	10583849	PrimaryExpression	0		10583826	1					
ANR	10583850	ExpressionStatement	FT_FREE ( exec -> stack )	241:4:11666:11688	10583826	3	True				
ANR	10583851	CallExpression	FT_FREE ( exec -> stack )		10583826	0					
ANR	10583852	Callee	FT_FREE		10583826	0					
ANR	10583853	Identifier	FT_FREE		10583826	0					
ANR	10583854	ArgumentList	exec -> stack		10583826	1					
ANR	10583855	Argument	exec -> stack		10583826	0					
ANR	10583856	PtrMemberAccess	exec -> stack		10583826	0					
ANR	10583857	Identifier	exec		10583826	0					
ANR	10583858	Identifier	stack		10583826	1					
ANR	10583859	ExpressionStatement	exec -> stackSize = 0	242:4:11694:11713	10583826	4	True				
ANR	10583860	AssignmentExpression	exec -> stackSize = 0		10583826	0		=			
ANR	10583861	PtrMemberAccess	exec -> stackSize		10583826	0					
ANR	10583862	Identifier	exec		10583826	0					
ANR	10583863	Identifier	stackSize		10583826	1					
ANR	10583864	PrimaryExpression	0		10583826	1					
ANR	10583865	ExpressionStatement	FT_FREE ( exec -> callStack )	245:4:11746:11772	10583826	5	True				
ANR	10583866	CallExpression	FT_FREE ( exec -> callStack )		10583826	0					
ANR	10583867	Callee	FT_FREE		10583826	0					
ANR	10583868	Identifier	FT_FREE		10583826	0					
ANR	10583869	ArgumentList	exec -> callStack		10583826	1					
ANR	10583870	Argument	exec -> callStack		10583826	0					
ANR	10583871	PtrMemberAccess	exec -> callStack		10583826	0					
ANR	10583872	Identifier	exec		10583826	0					
ANR	10583873	Identifier	callStack		10583826	1					
ANR	10583874	ExpressionStatement	exec -> callSize = 0	246:4:11778:11796	10583826	6	True				
ANR	10583875	AssignmentExpression	exec -> callSize = 0		10583826	0		=			
ANR	10583876	PtrMemberAccess	exec -> callSize		10583826	0					
ANR	10583877	Identifier	exec		10583826	0					
ANR	10583878	Identifier	callSize		10583826	1					
ANR	10583879	PrimaryExpression	0		10583826	1					
ANR	10583880	ExpressionStatement	exec -> callTop = 0	247:4:11802:11820	10583826	7	True				
ANR	10583881	AssignmentExpression	exec -> callTop = 0		10583826	0		=			
ANR	10583882	PtrMemberAccess	exec -> callTop		10583826	0					
ANR	10583883	Identifier	exec		10583826	0					
ANR	10583884	Identifier	callTop		10583826	1					
ANR	10583885	PrimaryExpression	0		10583826	1					
ANR	10583886	ExpressionStatement	FT_FREE ( exec -> glyphIns )	250:4:11859:11884	10583826	8	True				
ANR	10583887	CallExpression	FT_FREE ( exec -> glyphIns )		10583826	0					
ANR	10583888	Callee	FT_FREE		10583826	0					
ANR	10583889	Identifier	FT_FREE		10583826	0					
ANR	10583890	ArgumentList	exec -> glyphIns		10583826	1					
ANR	10583891	Argument	exec -> glyphIns		10583826	0					
ANR	10583892	PtrMemberAccess	exec -> glyphIns		10583826	0					
ANR	10583893	Identifier	exec		10583826	0					
ANR	10583894	Identifier	glyphIns		10583826	1					
ANR	10583895	ExpressionStatement	exec -> glyphSize = 0	251:4:11890:11909	10583826	9	True				
ANR	10583896	AssignmentExpression	exec -> glyphSize = 0		10583826	0		=			
ANR	10583897	PtrMemberAccess	exec -> glyphSize		10583826	0					
ANR	10583898	Identifier	exec		10583826	0					
ANR	10583899	Identifier	glyphSize		10583826	1					
ANR	10583900	PrimaryExpression	0		10583826	1					
ANR	10583901	ExpressionStatement	exec -> size = NULL	253:4:11916:11933	10583826	10	True				
ANR	10583902	AssignmentExpression	exec -> size = NULL		10583826	0		=			
ANR	10583903	PtrMemberAccess	exec -> size		10583826	0					
ANR	10583904	Identifier	exec		10583826	0					
ANR	10583905	Identifier	size		10583826	1					
ANR	10583906	Identifier	NULL		10583826	1					
ANR	10583907	ExpressionStatement	exec -> face = NULL	254:4:11939:11956	10583826	11	True				
ANR	10583908	AssignmentExpression	exec -> face = NULL		10583826	0		=			
ANR	10583909	PtrMemberAccess	exec -> face		10583826	0					
ANR	10583910	Identifier	exec		10583826	0					
ANR	10583911	Identifier	face		10583826	1					
ANR	10583912	Identifier	NULL		10583826	1					
ANR	10583913	ExpressionStatement	FT_FREE ( exec )	256:4:11963:11978	10583826	12	True				
ANR	10583914	CallExpression	FT_FREE ( exec )		10583826	0					
ANR	10583915	Callee	FT_FREE		10583826	0					
ANR	10583916	Identifier	FT_FREE		10583826	0					
ANR	10583917	ArgumentList	exec		10583826	1					
ANR	10583918	Argument	exec		10583826	0					
ANR	10583919	Identifier	exec		10583826	0					
ANR	10583920	Identifier	TT_Done_Context		10583826	1					
ANR	10583921	ParameterList	TT_ExecContext exec		10583826	2					
ANR	10583922	Parameter	TT_ExecContext exec	231:19:11497:11516	10583826	0	True				
ANR	10583923	ParameterType	TT_ExecContext		10583826	0					
ANR	10583924	Identifier	exec		10583826	1					
ANR	10583925	CFGEntryNode	ENTRY		10583826		True				
ANR	10583926	CFGExitNode	EXIT		10583826		True				
ANR	10583927	Symbol	exec -> callTop		10583826						
ANR	10583928	Symbol	exec -> glyphIns		10583826						
ANR	10583929	Symbol	memory		10583826						
ANR	10583930	Symbol	NULL		10583826						
ANR	10583931	Symbol	exec -> maxContours		10583826						
ANR	10583932	Symbol	exec -> callStack		10583826						
ANR	10583933	Symbol	exec -> face		10583826						
ANR	10583934	Symbol	exec -> stack		10583826						
ANR	10583935	Symbol	exec -> stackSize		10583826						
ANR	10583936	Symbol	exec -> glyphSize		10583826						
ANR	10583937	Symbol	exec -> callSize		10583826						
ANR	10583938	Symbol	* exec		10583826						
ANR	10583939	Symbol	exec -> memory		10583826						
ANR	10583940	Symbol	exec -> size		10583826						
ANR	10583941	Symbol	exec		10583826						
ANR	10583942	Symbol	exec -> maxPoints		10583826						
ANR	10583943	Function	Init_Context	277:2:13314:14144							
ANR	10583944	FunctionDef	"Init_Context (TT_ExecContext exec , FT_Memory memory)"		10583943	0					
ANR	10583945	CompoundStatement		280:2:13411:14144	10583943	0					
ANR	10583946	IdentifierDeclStatement	FT_Error error ;	281:4:13417:13432	10583943	0	True				
ANR	10583947	IdentifierDecl	error		10583943	0					
ANR	10583948	IdentifierDeclType	FT_Error		10583943	0					
ANR	10583949	Identifier	error		10583943	1					
ANR	10583950	ExpressionStatement	"FT_TRACE1 ( ( ""Init_Context: new object at 0x%08p\\n"" , exec ) )"	284:4:13440:13499	10583943	1	True				
ANR	10583951	CallExpression	"FT_TRACE1 ( ( ""Init_Context: new object at 0x%08p\\n"" , exec ) )"		10583943	0					
ANR	10583952	Callee	FT_TRACE1		10583943	0					
ANR	10583953	Identifier	FT_TRACE1		10583943	0					
ANR	10583954	ArgumentList	"""Init_Context: new object at 0x%08p\\n"" , exec"		10583943	1					
ANR	10583955	Argument	"""Init_Context: new object at 0x%08p\\n"" , exec"		10583943	0					
ANR	10583956	Expression	"""Init_Context: new object at 0x%08p\\n"" , exec"		10583943	0					
ANR	10583957	PrimaryExpression	"""Init_Context: new object at 0x%08p\\n"""		10583943	0					
ANR	10583958	Identifier	exec		10583943	1					
ANR	10583959	ExpressionStatement	exec -> memory = memory	286:4:13506:13529	10583943	2	True				
ANR	10583960	AssignmentExpression	exec -> memory = memory		10583943	0		=			
ANR	10583961	PtrMemberAccess	exec -> memory		10583943	0					
ANR	10583962	Identifier	exec		10583943	0					
ANR	10583963	Identifier	memory		10583943	1					
ANR	10583964	Identifier	memory		10583943	1					
ANR	10583965	ExpressionStatement	exec -> callSize = 32	287:4:13535:13554	10583943	3	True				
ANR	10583966	AssignmentExpression	exec -> callSize = 32		10583943	0		=			
ANR	10583967	PtrMemberAccess	exec -> callSize		10583943	0					
ANR	10583968	Identifier	exec		10583943	0					
ANR	10583969	Identifier	callSize		10583943	1					
ANR	10583970	PrimaryExpression	32		10583943	1					
ANR	10583971	IfStatement	"if ( FT_NEW_ARRAY ( exec -> callStack , exec -> callSize ) )"		10583943	4					
ANR	10583972	Condition	"FT_NEW_ARRAY ( exec -> callStack , exec -> callSize )"	289:9:13566:13612	10583943	0	True				
ANR	10583973	CallExpression	"FT_NEW_ARRAY ( exec -> callStack , exec -> callSize )"		10583943	0					
ANR	10583974	Callee	FT_NEW_ARRAY		10583943	0					
ANR	10583975	Identifier	FT_NEW_ARRAY		10583943	0					
ANR	10583976	ArgumentList	exec -> callStack		10583943	1					
ANR	10583977	Argument	exec -> callStack		10583943	0					
ANR	10583978	PtrMemberAccess	exec -> callStack		10583943	0					
ANR	10583979	Identifier	exec		10583943	0					
ANR	10583980	Identifier	callStack		10583943	1					
ANR	10583981	Argument	exec -> callSize		10583943	1					
ANR	10583982	PtrMemberAccess	exec -> callSize		10583943	0					
ANR	10583983	Identifier	exec		10583943	0					
ANR	10583984	Identifier	callSize		10583943	1					
ANR	10583985	GotoStatement	goto Fail_Memory ;	290:6:13622:13638	10583943	1	True				
ANR	10583986	Identifier	Fail_Memory		10583943	0					
ANR	10583987	ExpressionStatement	exec -> maxPoints = 0	294:4:13785:13806	10583943	5	True				
ANR	10583988	AssignmentExpression	exec -> maxPoints = 0		10583943	0		=			
ANR	10583989	PtrMemberAccess	exec -> maxPoints		10583943	0					
ANR	10583990	Identifier	exec		10583943	0					
ANR	10583991	Identifier	maxPoints		10583943	1					
ANR	10583992	PrimaryExpression	0		10583943	1					
ANR	10583993	ExpressionStatement	exec -> maxContours = 0	295:4:13812:13833	10583943	6	True				
ANR	10583994	AssignmentExpression	exec -> maxContours = 0		10583943	0		=			
ANR	10583995	PtrMemberAccess	exec -> maxContours		10583943	0					
ANR	10583996	Identifier	exec		10583943	0					
ANR	10583997	Identifier	maxContours		10583943	1					
ANR	10583998	PrimaryExpression	0		10583943	1					
ANR	10583999	ExpressionStatement	exec -> stackSize = 0	297:4:13840:13859	10583943	7	True				
ANR	10584000	AssignmentExpression	exec -> stackSize = 0		10583943	0		=			
ANR	10584001	PtrMemberAccess	exec -> stackSize		10583943	0					
ANR	10584002	Identifier	exec		10583943	0					
ANR	10584003	Identifier	stackSize		10583943	1					
ANR	10584004	PrimaryExpression	0		10583943	1					
ANR	10584005	ExpressionStatement	exec -> glyphSize = 0	298:4:13865:13884	10583943	8	True				
ANR	10584006	AssignmentExpression	exec -> glyphSize = 0		10583943	0		=			
ANR	10584007	PtrMemberAccess	exec -> glyphSize		10583943	0					
ANR	10584008	Identifier	exec		10583943	0					
ANR	10584009	Identifier	glyphSize		10583943	1					
ANR	10584010	PrimaryExpression	0		10583943	1					
ANR	10584011	ExpressionStatement	exec -> stack = NULL	300:4:13891:13912	10583943	9	True				
ANR	10584012	AssignmentExpression	exec -> stack = NULL		10583943	0		=			
ANR	10584013	PtrMemberAccess	exec -> stack		10583943	0					
ANR	10584014	Identifier	exec		10583943	0					
ANR	10584015	Identifier	stack		10583943	1					
ANR	10584016	Identifier	NULL		10583943	1					
ANR	10584017	ExpressionStatement	exec -> glyphIns = NULL	301:4:13918:13939	10583943	10	True				
ANR	10584018	AssignmentExpression	exec -> glyphIns = NULL		10583943	0		=			
ANR	10584019	PtrMemberAccess	exec -> glyphIns		10583943	0					
ANR	10584020	Identifier	exec		10583943	0					
ANR	10584021	Identifier	glyphIns		10583943	1					
ANR	10584022	Identifier	NULL		10583943	1					
ANR	10584023	ExpressionStatement	exec -> face = NULL	303:4:13946:13963	10583943	11	True				
ANR	10584024	AssignmentExpression	exec -> face = NULL		10583943	0		=			
ANR	10584025	PtrMemberAccess	exec -> face		10583943	0					
ANR	10584026	Identifier	exec		10583943	0					
ANR	10584027	Identifier	face		10583943	1					
ANR	10584028	Identifier	NULL		10583943	1					
ANR	10584029	ExpressionStatement	exec -> size = NULL	304:4:13969:13986	10583943	12	True				
ANR	10584030	AssignmentExpression	exec -> size = NULL		10583943	0		=			
ANR	10584031	PtrMemberAccess	exec -> size		10583943	0					
ANR	10584032	Identifier	exec		10583943	0					
ANR	10584033	Identifier	size		10583943	1					
ANR	10584034	Identifier	NULL		10583943	1					
ANR	10584035	ReturnStatement	return FT_Err_Ok ;	306:4:13993:14009	10583943	13	True				
ANR	10584036	Identifier	FT_Err_Ok		10583943	0					
ANR	10584037	Label	Fail_Memory :	308:2:14014:14025	10583943	14	True				
ANR	10584038	Identifier	Fail_Memory		10583943	0					
ANR	10584039	ExpressionStatement	"FT_ERROR ( ( ""Init_Context: not enough memory for %p\\n"" , exec ) )"	309:4:14031:14093	10583943	15	True				
ANR	10584040	CallExpression	"FT_ERROR ( ( ""Init_Context: not enough memory for %p\\n"" , exec ) )"		10583943	0					
ANR	10584041	Callee	FT_ERROR		10583943	0					
ANR	10584042	Identifier	FT_ERROR		10583943	0					
ANR	10584043	ArgumentList	"""Init_Context: not enough memory for %p\\n"" , exec"		10583943	1					
ANR	10584044	Argument	"""Init_Context: not enough memory for %p\\n"" , exec"		10583943	0					
ANR	10584045	Expression	"""Init_Context: not enough memory for %p\\n"" , exec"		10583943	0					
ANR	10584046	PrimaryExpression	"""Init_Context: not enough memory for %p\\n"""		10583943	0					
ANR	10584047	Identifier	exec		10583943	1					
ANR	10584048	ExpressionStatement	TT_Done_Context ( exec )	310:4:14099:14122	10583943	16	True				
ANR	10584049	CallExpression	TT_Done_Context ( exec )		10583943	0					
ANR	10584050	Callee	TT_Done_Context		10583943	0					
ANR	10584051	Identifier	TT_Done_Context		10583943	0					
ANR	10584052	ArgumentList	exec		10583943	1					
ANR	10584053	Argument	exec		10583943	0					
ANR	10584054	Identifier	exec		10583943	0					
ANR	10584055	ReturnStatement	return error ;	312:4:14129:14141	10583943	17	True				
ANR	10584056	Identifier	error		10583943	0					
ANR	10584057	ReturnType	static FT_Error		10583943	1					
ANR	10584058	Identifier	Init_Context		10583943	2					
ANR	10584059	ParameterList	"TT_ExecContext exec , FT_Memory memory"		10583943	3					
ANR	10584060	Parameter	TT_ExecContext exec	278:16:13346:13365	10583943	0	True				
ANR	10584061	ParameterType	TT_ExecContext		10583943	0					
ANR	10584062	Identifier	exec		10583943	1					
ANR	10584063	Parameter	FT_Memory memory	279:16:13384:13405	10583943	1	True				
ANR	10584064	ParameterType	FT_Memory		10583943	0					
ANR	10584065	Identifier	memory		10583943	1					
ANR	10584066	CFGEntryNode	ENTRY		10583943		True				
ANR	10584067	CFGExitNode	EXIT		10583943		True				
ANR	10584068	Symbol	exec -> glyphIns		10583943						
ANR	10584069	Symbol	memory		10583943						
ANR	10584070	Symbol	NULL		10583943						
ANR	10584071	Symbol	FT_Err_Ok		10583943						
ANR	10584072	Symbol	exec -> maxContours		10583943						
ANR	10584073	Symbol	exec -> callStack		10583943						
ANR	10584074	Symbol	exec -> face		10583943						
ANR	10584075	Symbol	exec -> stack		10583943						
ANR	10584076	Symbol	error		10583943						
ANR	10584077	Symbol	exec -> stackSize		10583943						
ANR	10584078	Symbol	exec -> glyphSize		10583943						
ANR	10584079	Symbol	FT_NEW_ARRAY		10583943						
ANR	10584080	Symbol	exec -> callSize		10583943						
ANR	10584081	Symbol	* exec		10583943						
ANR	10584082	Symbol	exec -> memory		10583943						
ANR	10584083	Symbol	exec -> size		10583943						
ANR	10584084	Symbol	exec		10583943						
ANR	10584085	Symbol	exec -> maxPoints		10583943						
ANR	10584086	Function	Update_Max	341:2:16049:16466							
ANR	10584087	FunctionDef	"Update_Max (FT_Memory memory , FT_ULong * size , FT_ULong multiplier , void * _pbuff , FT_ULong new_max)"		10584086	0					
ANR	10584088	CompoundStatement		346:2:16218:16466	10584086	0					
ANR	10584089	IdentifierDeclStatement	FT_Error error ;	347:4:16224:16239	10584086	0	True				
ANR	10584090	IdentifierDecl	error		10584086	0					
ANR	10584091	IdentifierDeclType	FT_Error		10584086	0					
ANR	10584092	Identifier	error		10584086	1					
ANR	10584093	IdentifierDeclStatement	void * * pbuff = ( void * * ) _pbuff ;	348:4:16245:16277	10584086	1	True				
ANR	10584094	IdentifierDecl	* * pbuff = ( void * * ) _pbuff		10584086	0					
ANR	10584095	IdentifierDeclType	void * *		10584086	0					
ANR	10584096	Identifier	pbuff		10584086	1					
ANR	10584097	AssignmentExpression	* * pbuff = ( void * * ) _pbuff		10584086	2		=			
ANR	10584098	Identifier	pbuff		10584086	0					
ANR	10584099	CastExpression	( void * * ) _pbuff		10584086	1					
ANR	10584100	CastTarget	void * *		10584086	0					
ANR	10584101	Identifier	_pbuff		10584086	1					
ANR	10584102	IfStatement	if ( * size < new_max )		10584086	2					
ANR	10584103	Condition	* size < new_max	351:9:16290:16304	10584086	0	True				
ANR	10584104	RelationalExpression	* size < new_max		10584086	0		<			
ANR	10584105	UnaryOperationExpression	* size		10584086	0					
ANR	10584106	UnaryOperator	*		10584086	0					
ANR	10584107	Identifier	size		10584086	1					
ANR	10584108	Identifier	new_max		10584086	1					
ANR	10584109	CompoundStatement		7:4:93:93	10584086	1					
ANR	10584110	IfStatement	"if ( FT_REALLOC ( * pbuff , * size * multiplier , new_max * multiplier ) )"		10584086	0					
ANR	10584111	Condition	"FT_REALLOC ( * pbuff , * size * multiplier , new_max * multiplier )"	353:11:16325:16386	10584086	0	True				
ANR	10584112	CallExpression	"FT_REALLOC ( * pbuff , * size * multiplier , new_max * multiplier )"		10584086	0					
ANR	10584113	Callee	FT_REALLOC		10584086	0					
ANR	10584114	Identifier	FT_REALLOC		10584086	0					
ANR	10584115	ArgumentList	* pbuff		10584086	1					
ANR	10584116	Argument	* pbuff		10584086	0					
ANR	10584117	UnaryOperationExpression	* pbuff		10584086	0					
ANR	10584118	UnaryOperator	*		10584086	0					
ANR	10584119	Identifier	pbuff		10584086	1					
ANR	10584120	Argument	* size * multiplier		10584086	1					
ANR	10584121	MultiplicativeExpression	* size * multiplier		10584086	0		*			
ANR	10584122	UnaryOperationExpression	* size		10584086	0					
ANR	10584123	UnaryOperator	*		10584086	0					
ANR	10584124	Identifier	size		10584086	1					
ANR	10584125	Identifier	multiplier		10584086	1					
ANR	10584126	Argument	new_max * multiplier		10584086	2					
ANR	10584127	MultiplicativeExpression	new_max * multiplier		10584086	0		*			
ANR	10584128	Identifier	new_max		10584086	0					
ANR	10584129	Identifier	multiplier		10584086	1					
ANR	10584130	ReturnStatement	return error ;	354:8:16398:16410	10584086	1	True				
ANR	10584131	Identifier	error		10584086	0					
ANR	10584132	ExpressionStatement	* size = new_max	355:6:16418:16433	10584086	1	True				
ANR	10584133	AssignmentExpression	* size = new_max		10584086	0		=			
ANR	10584134	UnaryOperationExpression	* size		10584086	0					
ANR	10584135	UnaryOperator	*		10584086	0					
ANR	10584136	Identifier	size		10584086	1					
ANR	10584137	Identifier	new_max		10584086	1					
ANR	10584138	ReturnStatement	return FT_Err_Ok ;	358:4:16446:16462	10584086	3	True				
ANR	10584139	Identifier	FT_Err_Ok		10584086	0					
ANR	10584140	Identifier	Update_Max		10584086	1					
ANR	10584141	ParameterList	"FT_Memory memory , FT_ULong * size , FT_ULong multiplier , void * _pbuff , FT_ULong new_max"		10584086	2					
ANR	10584142	Parameter	FT_Memory memory	341:14:16061:16077	10584086	0	True				
ANR	10584143	ParameterType	FT_Memory		10584086	0					
ANR	10584144	Identifier	memory		10584086	1					
ANR	10584145	Parameter	FT_ULong * size	342:14:16094:16108	10584086	1	True				
ANR	10584146	ParameterType	FT_ULong *		10584086	0					
ANR	10584147	Identifier	size		10584086	1					
ANR	10584148	Parameter	FT_ULong multiplier	343:14:16125:16145	10584086	2	True				
ANR	10584149	ParameterType	FT_ULong		10584086	0					
ANR	10584150	Identifier	multiplier		10584086	1					
ANR	10584151	Parameter	void * _pbuff	344:14:16162:16178	10584086	3	True				
ANR	10584152	ParameterType	void *		10584086	0					
ANR	10584153	Identifier	_pbuff		10584086	1					
ANR	10584154	Parameter	FT_ULong new_max	345:14:16195:16212	10584086	4	True				
ANR	10584155	ParameterType	FT_ULong		10584086	0					
ANR	10584156	Identifier	new_max		10584086	1					
ANR	10584157	CFGEntryNode	ENTRY		10584086		True				
ANR	10584158	CFGExitNode	EXIT		10584086		True				
ANR	10584159	Symbol	_pbuff		10584086						
ANR	10584160	Symbol	memory		10584086						
ANR	10584161	Symbol	* size		10584086						
ANR	10584162	Symbol	size		10584086						
ANR	10584163	Symbol	* pbuff		10584086						
ANR	10584164	Symbol	FT_Err_Ok		10584086						
ANR	10584165	Symbol	new_max		10584086						
ANR	10584166	Symbol	multiplier		10584086						
ANR	10584167	Symbol	pbuff		10584086						
ANR	10584168	Symbol	error		10584086						
ANR	10584169	Symbol	FT_REALLOC		10584086						
ANR	10584170	Function	TT_Load_Context	385:2:18215:20677							
ANR	10584171	FunctionDef	"TT_Load_Context (TT_ExecContext exec , TT_Face face , TT_Size size)"		10584170	0					
ANR	10584172	CompoundStatement		388:2:18339:20677	10584170	0					
ANR	10584173	IdentifierDeclStatement	FT_Int i ;	389:4:18345:18362	10584170	0	True				
ANR	10584174	IdentifierDecl	i		10584170	0					
ANR	10584175	IdentifierDeclType	FT_Int		10584170	0					
ANR	10584176	Identifier	i		10584170	1					
ANR	10584177	IdentifierDeclStatement	FT_ULong tmp ;	390:4:18368:18387	10584170	1	True				
ANR	10584178	IdentifierDecl	tmp		10584170	0					
ANR	10584179	IdentifierDeclType	FT_ULong		10584170	0					
ANR	10584180	Identifier	tmp		10584170	1					
ANR	10584181	IdentifierDeclStatement	TT_MaxProfile * maxp ;	391:4:18393:18413	10584170	2	True				
ANR	10584182	IdentifierDecl	* maxp		10584170	0					
ANR	10584183	IdentifierDeclType	TT_MaxProfile *		10584170	0					
ANR	10584184	Identifier	maxp		10584170	1					
ANR	10584185	IdentifierDeclStatement	FT_Error error ;	392:4:18419:18440	10584170	3	True				
ANR	10584186	IdentifierDecl	error		10584170	0					
ANR	10584187	IdentifierDeclType	FT_Error		10584170	0					
ANR	10584188	Identifier	error		10584170	1					
ANR	10584189	ExpressionStatement	exec -> face = face	395:4:18448:18465	10584170	4	True				
ANR	10584190	AssignmentExpression	exec -> face = face		10584170	0		=			
ANR	10584191	PtrMemberAccess	exec -> face		10584170	0					
ANR	10584192	Identifier	exec		10584170	0					
ANR	10584193	Identifier	face		10584170	1					
ANR	10584194	Identifier	face		10584170	1					
ANR	10584195	ExpressionStatement	maxp = & face -> max_profile	396:4:18471:18502	10584170	5	True				
ANR	10584196	AssignmentExpression	maxp = & face -> max_profile		10584170	0		=			
ANR	10584197	Identifier	maxp		10584170	0					
ANR	10584198	UnaryOperationExpression	& face -> max_profile		10584170	1					
ANR	10584199	UnaryOperator	&		10584170	0					
ANR	10584200	PtrMemberAccess	face -> max_profile		10584170	1					
ANR	10584201	Identifier	face		10584170	0					
ANR	10584202	Identifier	max_profile		10584170	1					
ANR	10584203	ExpressionStatement	exec -> size = size	397:4:18508:18525	10584170	6	True				
ANR	10584204	AssignmentExpression	exec -> size = size		10584170	0		=			
ANR	10584205	PtrMemberAccess	exec -> size		10584170	0					
ANR	10584206	Identifier	exec		10584170	0					
ANR	10584207	Identifier	size		10584170	1					
ANR	10584208	Identifier	size		10584170	1					
ANR	10584209	IfStatement	if ( size )		10584170	7					
ANR	10584210	Condition	size	399:9:18537:18540	10584170	0	True				
ANR	10584211	Identifier	size		10584170	0					
ANR	10584212	CompoundStatement		13:4:208:208	10584170	1					
ANR	10584213	ExpressionStatement	exec -> numFDefs = size -> num_function_defs	401:6:18556:18598	10584170	0	True				
ANR	10584214	AssignmentExpression	exec -> numFDefs = size -> num_function_defs		10584170	0		=			
ANR	10584215	PtrMemberAccess	exec -> numFDefs		10584170	0					
ANR	10584216	Identifier	exec		10584170	0					
ANR	10584217	Identifier	numFDefs		10584170	1					
ANR	10584218	PtrMemberAccess	size -> num_function_defs		10584170	1					
ANR	10584219	Identifier	size		10584170	0					
ANR	10584220	Identifier	num_function_defs		10584170	1					
ANR	10584221	ExpressionStatement	exec -> maxFDefs = size -> max_function_defs	402:6:18606:18648	10584170	1	True				
ANR	10584222	AssignmentExpression	exec -> maxFDefs = size -> max_function_defs		10584170	0		=			
ANR	10584223	PtrMemberAccess	exec -> maxFDefs		10584170	0					
ANR	10584224	Identifier	exec		10584170	0					
ANR	10584225	Identifier	maxFDefs		10584170	1					
ANR	10584226	PtrMemberAccess	size -> max_function_defs		10584170	1					
ANR	10584227	Identifier	size		10584170	0					
ANR	10584228	Identifier	max_function_defs		10584170	1					
ANR	10584229	ExpressionStatement	exec -> numIDefs = size -> num_instruction_defs	403:6:18656:18701	10584170	2	True				
ANR	10584230	AssignmentExpression	exec -> numIDefs = size -> num_instruction_defs		10584170	0		=			
ANR	10584231	PtrMemberAccess	exec -> numIDefs		10584170	0					
ANR	10584232	Identifier	exec		10584170	0					
ANR	10584233	Identifier	numIDefs		10584170	1					
ANR	10584234	PtrMemberAccess	size -> num_instruction_defs		10584170	1					
ANR	10584235	Identifier	size		10584170	0					
ANR	10584236	Identifier	num_instruction_defs		10584170	1					
ANR	10584237	ExpressionStatement	exec -> maxIDefs = size -> max_instruction_defs	404:6:18709:18754	10584170	3	True				
ANR	10584238	AssignmentExpression	exec -> maxIDefs = size -> max_instruction_defs		10584170	0		=			
ANR	10584239	PtrMemberAccess	exec -> maxIDefs		10584170	0					
ANR	10584240	Identifier	exec		10584170	0					
ANR	10584241	Identifier	maxIDefs		10584170	1					
ANR	10584242	PtrMemberAccess	size -> max_instruction_defs		10584170	1					
ANR	10584243	Identifier	size		10584170	0					
ANR	10584244	Identifier	max_instruction_defs		10584170	1					
ANR	10584245	ExpressionStatement	exec -> FDefs = size -> function_defs	405:6:18762:18800	10584170	4	True				
ANR	10584246	AssignmentExpression	exec -> FDefs = size -> function_defs		10584170	0		=			
ANR	10584247	PtrMemberAccess	exec -> FDefs		10584170	0					
ANR	10584248	Identifier	exec		10584170	0					
ANR	10584249	Identifier	FDefs		10584170	1					
ANR	10584250	PtrMemberAccess	size -> function_defs		10584170	1					
ANR	10584251	Identifier	size		10584170	0					
ANR	10584252	Identifier	function_defs		10584170	1					
ANR	10584253	ExpressionStatement	exec -> IDefs = size -> instruction_defs	406:6:18808:18849	10584170	5	True				
ANR	10584254	AssignmentExpression	exec -> IDefs = size -> instruction_defs		10584170	0		=			
ANR	10584255	PtrMemberAccess	exec -> IDefs		10584170	0					
ANR	10584256	Identifier	exec		10584170	0					
ANR	10584257	Identifier	IDefs		10584170	1					
ANR	10584258	PtrMemberAccess	size -> instruction_defs		10584170	1					
ANR	10584259	Identifier	size		10584170	0					
ANR	10584260	Identifier	instruction_defs		10584170	1					
ANR	10584261	ExpressionStatement	exec -> pointSize = size -> point_size	407:6:18857:18892	10584170	6	True				
ANR	10584262	AssignmentExpression	exec -> pointSize = size -> point_size		10584170	0		=			
ANR	10584263	PtrMemberAccess	exec -> pointSize		10584170	0					
ANR	10584264	Identifier	exec		10584170	0					
ANR	10584265	Identifier	pointSize		10584170	1					
ANR	10584266	PtrMemberAccess	size -> point_size		10584170	1					
ANR	10584267	Identifier	size		10584170	0					
ANR	10584268	Identifier	point_size		10584170	1					
ANR	10584269	ExpressionStatement	exec -> tt_metrics = size -> ttmetrics	408:6:18900:18934	10584170	7	True				
ANR	10584270	AssignmentExpression	exec -> tt_metrics = size -> ttmetrics		10584170	0		=			
ANR	10584271	PtrMemberAccess	exec -> tt_metrics		10584170	0					
ANR	10584272	Identifier	exec		10584170	0					
ANR	10584273	Identifier	tt_metrics		10584170	1					
ANR	10584274	PtrMemberAccess	size -> ttmetrics		10584170	1					
ANR	10584275	Identifier	size		10584170	0					
ANR	10584276	Identifier	ttmetrics		10584170	1					
ANR	10584277	ExpressionStatement	exec -> metrics = * size -> metrics	409:6:18942:18975	10584170	8	True				
ANR	10584278	AssignmentExpression	exec -> metrics = * size -> metrics		10584170	0		=			
ANR	10584279	PtrMemberAccess	exec -> metrics		10584170	0					
ANR	10584280	Identifier	exec		10584170	0					
ANR	10584281	Identifier	metrics		10584170	1					
ANR	10584282	UnaryOperationExpression	* size -> metrics		10584170	1					
ANR	10584283	UnaryOperator	*		10584170	0					
ANR	10584284	PtrMemberAccess	size -> metrics		10584170	1					
ANR	10584285	Identifier	size		10584170	0					
ANR	10584286	Identifier	metrics		10584170	1					
ANR	10584287	ExpressionStatement	exec -> maxFunc = size -> max_func	411:6:18984:19017	10584170	9	True				
ANR	10584288	AssignmentExpression	exec -> maxFunc = size -> max_func		10584170	0		=			
ANR	10584289	PtrMemberAccess	exec -> maxFunc		10584170	0					
ANR	10584290	Identifier	exec		10584170	0					
ANR	10584291	Identifier	maxFunc		10584170	1					
ANR	10584292	PtrMemberAccess	size -> max_func		10584170	1					
ANR	10584293	Identifier	size		10584170	0					
ANR	10584294	Identifier	max_func		10584170	1					
ANR	10584295	ExpressionStatement	exec -> maxIns = size -> max_ins	412:6:19025:19057	10584170	10	True				
ANR	10584296	AssignmentExpression	exec -> maxIns = size -> max_ins		10584170	0		=			
ANR	10584297	PtrMemberAccess	exec -> maxIns		10584170	0					
ANR	10584298	Identifier	exec		10584170	0					
ANR	10584299	Identifier	maxIns		10584170	1					
ANR	10584300	PtrMemberAccess	size -> max_ins		10584170	1					
ANR	10584301	Identifier	size		10584170	0					
ANR	10584302	Identifier	max_ins		10584170	1					
ANR	10584303	ForStatement	for ( i = 0 ; i < TT_MAX_CODE_RANGES ; i ++ )		10584170	11					
ANR	10584304	ForInit	i = 0 ;	414:12:19072:19077	10584170	0	True				
ANR	10584305	AssignmentExpression	i = 0		10584170	0		=			
ANR	10584306	Identifier	i		10584170	0					
ANR	10584307	PrimaryExpression	0		10584170	1					
ANR	10584308	Condition	i < TT_MAX_CODE_RANGES	414:19:19079:19100	10584170	1	True				
ANR	10584309	RelationalExpression	i < TT_MAX_CODE_RANGES		10584170	0		<			
ANR	10584310	Identifier	i		10584170	0					
ANR	10584311	Identifier	TT_MAX_CODE_RANGES		10584170	1					
ANR	10584312	PostIncDecOperationExpression	i ++	414:43:19103:19105	10584170	2	True				
ANR	10584313	Identifier	i		10584170	0					
ANR	10584314	IncDec	++		10584170	1					
ANR	10584315	ExpressionStatement	exec -> codeRangeTable [ i ] = size -> codeRangeTable [ i ]	415:8:19117:19166	10584170	3	True				
ANR	10584316	AssignmentExpression	exec -> codeRangeTable [ i ] = size -> codeRangeTable [ i ]		10584170	0		=			
ANR	10584317	ArrayIndexing	exec -> codeRangeTable [ i ]		10584170	0					
ANR	10584318	PtrMemberAccess	exec -> codeRangeTable		10584170	0					
ANR	10584319	Identifier	exec		10584170	0					
ANR	10584320	Identifier	codeRangeTable		10584170	1					
ANR	10584321	Identifier	i		10584170	1					
ANR	10584322	ArrayIndexing	size -> codeRangeTable [ i ]		10584170	1					
ANR	10584323	PtrMemberAccess	size -> codeRangeTable		10584170	0					
ANR	10584324	Identifier	size		10584170	0					
ANR	10584325	Identifier	codeRangeTable		10584170	1					
ANR	10584326	Identifier	i		10584170	1					
ANR	10584327	ExpressionStatement	exec -> GS = size -> GS	418:6:19206:19225	10584170	12	True				
ANR	10584328	AssignmentExpression	exec -> GS = size -> GS		10584170	0		=			
ANR	10584329	PtrMemberAccess	exec -> GS		10584170	0					
ANR	10584330	Identifier	exec		10584170	0					
ANR	10584331	Identifier	GS		10584170	1					
ANR	10584332	PtrMemberAccess	size -> GS		10584170	1					
ANR	10584333	Identifier	size		10584170	0					
ANR	10584334	Identifier	GS		10584170	1					
ANR	10584335	ExpressionStatement	exec -> cvtSize = size -> cvt_size	420:6:19234:19264	10584170	13	True				
ANR	10584336	AssignmentExpression	exec -> cvtSize = size -> cvt_size		10584170	0		=			
ANR	10584337	PtrMemberAccess	exec -> cvtSize		10584170	0					
ANR	10584338	Identifier	exec		10584170	0					
ANR	10584339	Identifier	cvtSize		10584170	1					
ANR	10584340	PtrMemberAccess	size -> cvt_size		10584170	1					
ANR	10584341	Identifier	size		10584170	0					
ANR	10584342	Identifier	cvt_size		10584170	1					
ANR	10584343	ExpressionStatement	exec -> cvt = size -> cvt	421:6:19272:19297	10584170	14	True				
ANR	10584344	AssignmentExpression	exec -> cvt = size -> cvt		10584170	0		=			
ANR	10584345	PtrMemberAccess	exec -> cvt		10584170	0					
ANR	10584346	Identifier	exec		10584170	0					
ANR	10584347	Identifier	cvt		10584170	1					
ANR	10584348	PtrMemberAccess	size -> cvt		10584170	1					
ANR	10584349	Identifier	size		10584170	0					
ANR	10584350	Identifier	cvt		10584170	1					
ANR	10584351	ExpressionStatement	exec -> storeSize = size -> storage_size	423:6:19306:19342	10584170	15	True				
ANR	10584352	AssignmentExpression	exec -> storeSize = size -> storage_size		10584170	0		=			
ANR	10584353	PtrMemberAccess	exec -> storeSize		10584170	0					
ANR	10584354	Identifier	exec		10584170	0					
ANR	10584355	Identifier	storeSize		10584170	1					
ANR	10584356	PtrMemberAccess	size -> storage_size		10584170	1					
ANR	10584357	Identifier	size		10584170	0					
ANR	10584358	Identifier	storage_size		10584170	1					
ANR	10584359	ExpressionStatement	exec -> storage = size -> storage	424:6:19350:19381	10584170	16	True				
ANR	10584360	AssignmentExpression	exec -> storage = size -> storage		10584170	0		=			
ANR	10584361	PtrMemberAccess	exec -> storage		10584170	0					
ANR	10584362	Identifier	exec		10584170	0					
ANR	10584363	Identifier	storage		10584170	1					
ANR	10584364	PtrMemberAccess	size -> storage		10584170	1					
ANR	10584365	Identifier	size		10584170	0					
ANR	10584366	Identifier	storage		10584170	1					
ANR	10584367	ExpressionStatement	exec -> twilight = size -> twilight	426:6:19390:19422	10584170	17	True				
ANR	10584368	AssignmentExpression	exec -> twilight = size -> twilight		10584170	0		=			
ANR	10584369	PtrMemberAccess	exec -> twilight		10584170	0					
ANR	10584370	Identifier	exec		10584170	0					
ANR	10584371	Identifier	twilight		10584170	1					
ANR	10584372	PtrMemberAccess	size -> twilight		10584170	1					
ANR	10584373	Identifier	size		10584170	0					
ANR	10584374	Identifier	twilight		10584170	1					
ANR	10584375	ExpressionStatement	FT_ZERO ( & exec -> zp0 )	430:6:19587:19608	10584170	18	True				
ANR	10584376	CallExpression	FT_ZERO ( & exec -> zp0 )		10584170	0					
ANR	10584377	Callee	FT_ZERO		10584170	0					
ANR	10584378	Identifier	FT_ZERO		10584170	0					
ANR	10584379	ArgumentList	& exec -> zp0		10584170	1					
ANR	10584380	Argument	& exec -> zp0		10584170	0					
ANR	10584381	UnaryOperationExpression	& exec -> zp0		10584170	0					
ANR	10584382	UnaryOperator	&		10584170	0					
ANR	10584383	PtrMemberAccess	exec -> zp0		10584170	1					
ANR	10584384	Identifier	exec		10584170	0					
ANR	10584385	Identifier	zp0		10584170	1					
ANR	10584386	ExpressionStatement	exec -> zp1 = exec -> zp0	431:6:19616:19637	10584170	19	True				
ANR	10584387	AssignmentExpression	exec -> zp1 = exec -> zp0		10584170	0		=			
ANR	10584388	PtrMemberAccess	exec -> zp1		10584170	0					
ANR	10584389	Identifier	exec		10584170	0					
ANR	10584390	Identifier	zp1		10584170	1					
ANR	10584391	PtrMemberAccess	exec -> zp0		10584170	1					
ANR	10584392	Identifier	exec		10584170	0					
ANR	10584393	Identifier	zp0		10584170	1					
ANR	10584394	ExpressionStatement	exec -> zp2 = exec -> zp0	432:6:19645:19666	10584170	20	True				
ANR	10584395	AssignmentExpression	exec -> zp2 = exec -> zp0		10584170	0		=			
ANR	10584396	PtrMemberAccess	exec -> zp2		10584170	0					
ANR	10584397	Identifier	exec		10584170	0					
ANR	10584398	Identifier	zp2		10584170	1					
ANR	10584399	PtrMemberAccess	exec -> zp0		10584170	1					
ANR	10584400	Identifier	exec		10584170	0					
ANR	10584401	Identifier	zp0		10584170	1					
ANR	10584402	ExpressionStatement	tmp = ( FT_ULong ) exec -> stackSize	437:4:19833:19864	10584170	8	True				
ANR	10584403	AssignmentExpression	tmp = ( FT_ULong ) exec -> stackSize		10584170	0		=			
ANR	10584404	Identifier	tmp		10584170	0					
ANR	10584405	CastExpression	( FT_ULong ) exec -> stackSize		10584170	1					
ANR	10584406	CastTarget	FT_ULong		10584170	0					
ANR	10584407	PtrMemberAccess	exec -> stackSize		10584170	1					
ANR	10584408	Identifier	exec		10584170	0					
ANR	10584409	Identifier	stackSize		10584170	1					
ANR	10584410	ExpressionStatement	"error = Update_Max ( exec -> memory , & tmp , sizeof ( FT_F26Dot6 ) , ( void * ) & exec -> stack , maxp -> maxStackElements + 32 )"	438:4:19870:20079	10584170	9	True				
ANR	10584411	AssignmentExpression	"error = Update_Max ( exec -> memory , & tmp , sizeof ( FT_F26Dot6 ) , ( void * ) & exec -> stack , maxp -> maxStackElements + 32 )"		10584170	0		=			
ANR	10584412	Identifier	error		10584170	0					
ANR	10584413	CallExpression	"Update_Max ( exec -> memory , & tmp , sizeof ( FT_F26Dot6 ) , ( void * ) & exec -> stack , maxp -> maxStackElements + 32 )"		10584170	1					
ANR	10584414	Callee	Update_Max		10584170	0					
ANR	10584415	Identifier	Update_Max		10584170	0					
ANR	10584416	ArgumentList	exec -> memory		10584170	1					
ANR	10584417	Argument	exec -> memory		10584170	0					
ANR	10584418	PtrMemberAccess	exec -> memory		10584170	0					
ANR	10584419	Identifier	exec		10584170	0					
ANR	10584420	Identifier	memory		10584170	1					
ANR	10584421	Argument	& tmp		10584170	1					
ANR	10584422	UnaryOperationExpression	& tmp		10584170	0					
ANR	10584423	UnaryOperator	&		10584170	0					
ANR	10584424	Identifier	tmp		10584170	1					
ANR	10584425	Argument	sizeof ( FT_F26Dot6 )		10584170	2					
ANR	10584426	SizeofExpression	sizeof ( FT_F26Dot6 )		10584170	0					
ANR	10584427	Sizeof	sizeof		10584170	0					
ANR	10584428	SizeofOperand	FT_F26Dot6		10584170	1					
ANR	10584429	Argument	( void * ) & exec -> stack		10584170	3					
ANR	10584430	CastExpression	( void * ) & exec -> stack		10584170	0					
ANR	10584431	CastTarget	void *		10584170	0					
ANR	10584432	UnaryOperationExpression	& exec -> stack		10584170	1					
ANR	10584433	UnaryOperator	&		10584170	0					
ANR	10584434	PtrMemberAccess	exec -> stack		10584170	1					
ANR	10584435	Identifier	exec		10584170	0					
ANR	10584436	Identifier	stack		10584170	1					
ANR	10584437	Argument	maxp -> maxStackElements + 32		10584170	4					
ANR	10584438	AdditiveExpression	maxp -> maxStackElements + 32		10584170	0		+			
ANR	10584439	PtrMemberAccess	maxp -> maxStackElements		10584170	0					
ANR	10584440	Identifier	maxp		10584170	0					
ANR	10584441	Identifier	maxStackElements		10584170	1					
ANR	10584442	PrimaryExpression	32		10584170	1					
ANR	10584443	ExpressionStatement	exec -> stackSize = ( FT_Long ) tmp	443:4:20085:20115	10584170	10	True				
ANR	10584444	AssignmentExpression	exec -> stackSize = ( FT_Long ) tmp		10584170	0		=			
ANR	10584445	PtrMemberAccess	exec -> stackSize		10584170	0					
ANR	10584446	Identifier	exec		10584170	0					
ANR	10584447	Identifier	stackSize		10584170	1					
ANR	10584448	CastExpression	( FT_Long ) tmp		10584170	1					
ANR	10584449	CastTarget	FT_Long		10584170	0					
ANR	10584450	Identifier	tmp		10584170	1					
ANR	10584451	IfStatement	if ( error )		10584170	11					
ANR	10584452	Condition	error	444:9:20126:20130	10584170	0	True				
ANR	10584453	Identifier	error		10584170	0					
ANR	10584454	ReturnStatement	return error ;	445:6:20140:20152	10584170	1	True				
ANR	10584455	Identifier	error		10584170	0					
ANR	10584456	ExpressionStatement	tmp = exec -> glyphSize	447:4:20159:20180	10584170	12	True				
ANR	10584457	AssignmentExpression	tmp = exec -> glyphSize		10584170	0		=			
ANR	10584458	Identifier	tmp		10584170	0					
ANR	10584459	PtrMemberAccess	exec -> glyphSize		10584170	1					
ANR	10584460	Identifier	exec		10584170	0					
ANR	10584461	Identifier	glyphSize		10584170	1					
ANR	10584462	ExpressionStatement	"error = Update_Max ( exec -> memory , & tmp , sizeof ( FT_Byte ) , ( void * ) & exec -> glyphIns , maxp -> maxSizeOfInstructions )"	448:4:20186:20395	10584170	13	True				
ANR	10584463	AssignmentExpression	"error = Update_Max ( exec -> memory , & tmp , sizeof ( FT_Byte ) , ( void * ) & exec -> glyphIns , maxp -> maxSizeOfInstructions )"		10584170	0		=			
ANR	10584464	Identifier	error		10584170	0					
ANR	10584465	CallExpression	"Update_Max ( exec -> memory , & tmp , sizeof ( FT_Byte ) , ( void * ) & exec -> glyphIns , maxp -> maxSizeOfInstructions )"		10584170	1					
ANR	10584466	Callee	Update_Max		10584170	0					
ANR	10584467	Identifier	Update_Max		10584170	0					
ANR	10584468	ArgumentList	exec -> memory		10584170	1					
ANR	10584469	Argument	exec -> memory		10584170	0					
ANR	10584470	PtrMemberAccess	exec -> memory		10584170	0					
ANR	10584471	Identifier	exec		10584170	0					
ANR	10584472	Identifier	memory		10584170	1					
ANR	10584473	Argument	& tmp		10584170	1					
ANR	10584474	UnaryOperationExpression	& tmp		10584170	0					
ANR	10584475	UnaryOperator	&		10584170	0					
ANR	10584476	Identifier	tmp		10584170	1					
ANR	10584477	Argument	sizeof ( FT_Byte )		10584170	2					
ANR	10584478	SizeofExpression	sizeof ( FT_Byte )		10584170	0					
ANR	10584479	Sizeof	sizeof		10584170	0					
ANR	10584480	SizeofOperand	FT_Byte		10584170	1					
ANR	10584481	Argument	( void * ) & exec -> glyphIns		10584170	3					
ANR	10584482	CastExpression	( void * ) & exec -> glyphIns		10584170	0					
ANR	10584483	CastTarget	void *		10584170	0					
ANR	10584484	UnaryOperationExpression	& exec -> glyphIns		10584170	1					
ANR	10584485	UnaryOperator	&		10584170	0					
ANR	10584486	PtrMemberAccess	exec -> glyphIns		10584170	1					
ANR	10584487	Identifier	exec		10584170	0					
ANR	10584488	Identifier	glyphIns		10584170	1					
ANR	10584489	Argument	maxp -> maxSizeOfInstructions		10584170	4					
ANR	10584490	PtrMemberAccess	maxp -> maxSizeOfInstructions		10584170	0					
ANR	10584491	Identifier	maxp		10584170	0					
ANR	10584492	Identifier	maxSizeOfInstructions		10584170	1					
ANR	10584493	ExpressionStatement	exec -> glyphSize = ( FT_UShort ) tmp	453:4:20401:20433	10584170	14	True				
ANR	10584494	AssignmentExpression	exec -> glyphSize = ( FT_UShort ) tmp		10584170	0		=			
ANR	10584495	PtrMemberAccess	exec -> glyphSize		10584170	0					
ANR	10584496	Identifier	exec		10584170	0					
ANR	10584497	Identifier	glyphSize		10584170	1					
ANR	10584498	CastExpression	( FT_UShort ) tmp		10584170	1					
ANR	10584499	CastTarget	FT_UShort		10584170	0					
ANR	10584500	Identifier	tmp		10584170	1					
ANR	10584501	IfStatement	if ( error )		10584170	15					
ANR	10584502	Condition	error	454:9:20444:20448	10584170	0	True				
ANR	10584503	Identifier	error		10584170	0					
ANR	10584504	ReturnStatement	return error ;	455:6:20458:20470	10584170	1	True				
ANR	10584505	Identifier	error		10584170	0					
ANR	10584506	ExpressionStatement	exec -> pts . n_points = 0	457:4:20477:20501	10584170	16	True				
ANR	10584507	AssignmentExpression	exec -> pts . n_points = 0		10584170	0		=			
ANR	10584508	MemberAccess	exec -> pts . n_points		10584170	0					
ANR	10584509	PtrMemberAccess	exec -> pts		10584170	0					
ANR	10584510	Identifier	exec		10584170	0					
ANR	10584511	Identifier	pts		10584170	1					
ANR	10584512	Identifier	n_points		10584170	1					
ANR	10584513	PrimaryExpression	0		10584170	1					
ANR	10584514	ExpressionStatement	exec -> pts . n_contours = 0	458:4:20507:20531	10584170	17	True				
ANR	10584515	AssignmentExpression	exec -> pts . n_contours = 0		10584170	0		=			
ANR	10584516	MemberAccess	exec -> pts . n_contours		10584170	0					
ANR	10584517	PtrMemberAccess	exec -> pts		10584170	0					
ANR	10584518	Identifier	exec		10584170	0					
ANR	10584519	Identifier	pts		10584170	1					
ANR	10584520	Identifier	n_contours		10584170	1					
ANR	10584521	PrimaryExpression	0		10584170	1					
ANR	10584522	ExpressionStatement	exec -> zp1 = exec -> pts	460:4:20538:20559	10584170	18	True				
ANR	10584523	AssignmentExpression	exec -> zp1 = exec -> pts		10584170	0		=			
ANR	10584524	PtrMemberAccess	exec -> zp1		10584170	0					
ANR	10584525	Identifier	exec		10584170	0					
ANR	10584526	Identifier	zp1		10584170	1					
ANR	10584527	PtrMemberAccess	exec -> pts		10584170	1					
ANR	10584528	Identifier	exec		10584170	0					
ANR	10584529	Identifier	pts		10584170	1					
ANR	10584530	ExpressionStatement	exec -> zp2 = exec -> pts	461:4:20565:20586	10584170	19	True				
ANR	10584531	AssignmentExpression	exec -> zp2 = exec -> pts		10584170	0		=			
ANR	10584532	PtrMemberAccess	exec -> zp2		10584170	0					
ANR	10584533	Identifier	exec		10584170	0					
ANR	10584534	Identifier	zp2		10584170	1					
ANR	10584535	PtrMemberAccess	exec -> pts		10584170	1					
ANR	10584536	Identifier	exec		10584170	0					
ANR	10584537	Identifier	pts		10584170	1					
ANR	10584538	ExpressionStatement	exec -> zp0 = exec -> pts	462:4:20592:20613	10584170	20	True				
ANR	10584539	AssignmentExpression	exec -> zp0 = exec -> pts		10584170	0		=			
ANR	10584540	PtrMemberAccess	exec -> zp0		10584170	0					
ANR	10584541	Identifier	exec		10584170	0					
ANR	10584542	Identifier	zp0		10584170	1					
ANR	10584543	PtrMemberAccess	exec -> pts		10584170	1					
ANR	10584544	Identifier	exec		10584170	0					
ANR	10584545	Identifier	pts		10584170	1					
ANR	10584546	ExpressionStatement	exec -> instruction_trap = FALSE	464:4:20620:20650	10584170	21	True				
ANR	10584547	AssignmentExpression	exec -> instruction_trap = FALSE		10584170	0		=			
ANR	10584548	PtrMemberAccess	exec -> instruction_trap		10584170	0					
ANR	10584549	Identifier	exec		10584170	0					
ANR	10584550	Identifier	instruction_trap		10584170	1					
ANR	10584551	Identifier	FALSE		10584170	1					
ANR	10584552	ReturnStatement	return FT_Err_Ok ;	466:4:20657:20673	10584170	22	True				
ANR	10584553	Identifier	FT_Err_Ok		10584170	0					
ANR	10584554	Identifier	TT_Load_Context		10584170	1					
ANR	10584555	ParameterList	"TT_ExecContext exec , TT_Face face , TT_Size size"		10584170	2					
ANR	10584556	Parameter	TT_ExecContext exec	385:19:18232:18251	10584170	0	True				
ANR	10584557	ParameterType	TT_ExecContext		10584170	0					
ANR	10584558	Identifier	exec		10584170	1					
ANR	10584559	Parameter	TT_Face face	386:19:18273:18292	10584170	1	True				
ANR	10584560	ParameterType	TT_Face		10584170	0					
ANR	10584561	Identifier	face		10584170	1					
ANR	10584562	Parameter	TT_Size size	387:19:18314:18333	10584170	2	True				
ANR	10584563	ParameterType	TT_Size		10584170	0					
ANR	10584564	Identifier	size		10584170	1					
ANR	10584565	CFGEntryNode	ENTRY		10584170		True				
ANR	10584566	CFGExitNode	EXIT		10584170		True				
ANR	10584567	Symbol	size -> max_instruction_defs		10584170						
ANR	10584568	Symbol	FT_Err_Ok		10584170						
ANR	10584569	Symbol	size -> twilight		10584170						
ANR	10584570	Symbol	* size -> metrics		10584170						
ANR	10584571	Symbol	exec -> glyphSize		10584170						
ANR	10584572	Symbol	exec -> cvtSize		10584170						
ANR	10584573	Symbol	* size		10584170						
ANR	10584574	Symbol	size -> metrics		10584170						
ANR	10584575	Symbol	tmp		10584170						
ANR	10584576	Symbol	exec -> pointSize		10584170						
ANR	10584577	Symbol	maxp -> maxStackElements		10584170						
ANR	10584578	Symbol	& exec -> glyphIns		10584170						
ANR	10584579	Symbol	exec -> size		10584170						
ANR	10584580	Symbol	size -> num_instruction_defs		10584170						
ANR	10584581	Symbol	& face -> max_profile		10584170						
ANR	10584582	Symbol	size -> num_function_defs		10584170						
ANR	10584583	Symbol	exec -> pts . n_contours		10584170						
ANR	10584584	Symbol	exec -> maxFunc		10584170						
ANR	10584585	Symbol	* exec -> codeRangeTable		10584170						
ANR	10584586	Symbol	exec -> cvt		10584170						
ANR	10584587	Symbol	exec -> storage		10584170						
ANR	10584588	Symbol	exec -> pts		10584170						
ANR	10584589	Symbol	* * exec		10584170						
ANR	10584590	Symbol	size -> cvt		10584170						
ANR	10584591	Symbol	* size -> codeRangeTable		10584170						
ANR	10584592	Symbol	& exec -> zp0		10584170						
ANR	10584593	Symbol	maxp -> maxSizeOfInstructions		10584170						
ANR	10584594	Symbol	size -> ttmetrics		10584170						
ANR	10584595	Symbol	* * size		10584170						
ANR	10584596	Symbol	size -> cvt_size		10584170						
ANR	10584597	Symbol	size		10584170						
ANR	10584598	Symbol	size -> storage_size		10584170						
ANR	10584599	Symbol	size -> GS		10584170						
ANR	10584600	Symbol	& tmp		10584170						
ANR	10584601	Symbol	exec -> memory		10584170						
ANR	10584602	Symbol	exec -> storeSize		10584170						
ANR	10584603	Symbol	exec		10584170						
ANR	10584604	Symbol	exec -> maxFDefs		10584170						
ANR	10584605	Symbol	maxp		10584170						
ANR	10584606	Symbol	size -> max_ins		10584170						
ANR	10584607	Symbol	exec -> twilight		10584170						
ANR	10584608	Symbol	exec -> instruction_trap		10584170						
ANR	10584609	Symbol	exec -> numIDefs		10584170						
ANR	10584610	Symbol	exec -> tt_metrics		10584170						
ANR	10584611	Symbol	exec -> face		10584170						
ANR	10584612	Symbol	exec -> maxIDefs		10584170						
ANR	10584613	Symbol	exec -> IDefs		10584170						
ANR	10584614	Symbol	error		10584170						
ANR	10584615	Symbol	exec -> stackSize		10584170						
ANR	10584616	Symbol	size -> function_defs		10584170						
ANR	10584617	Symbol	TT_MAX_CODE_RANGES		10584170						
ANR	10584618	Symbol	* exec		10584170						
ANR	10584619	Symbol	size -> max_func		10584170						
ANR	10584620	Symbol	Update_Max		10584170						
ANR	10584621	Symbol	size -> instruction_defs		10584170						
ANR	10584622	Symbol	exec -> metrics		10584170						
ANR	10584623	Symbol	size -> point_size		10584170						
ANR	10584624	Symbol	exec -> codeRangeTable		10584170						
ANR	10584625	Symbol	& exec -> stack		10584170						
ANR	10584626	Symbol	exec -> pts . n_points		10584170						
ANR	10584627	Symbol	* maxp		10584170						
ANR	10584628	Symbol	size -> max_function_defs		10584170						
ANR	10584629	Symbol	exec -> FDefs		10584170						
ANR	10584630	Symbol	i		10584170						
ANR	10584631	Symbol	exec -> numFDefs		10584170						
ANR	10584632	Symbol	exec -> maxIns		10584170						
ANR	10584633	Symbol	face		10584170						
ANR	10584634	Symbol	* i		10584170						
ANR	10584635	Symbol	exec -> GS		10584170						
ANR	10584636	Symbol	FALSE		10584170						
ANR	10584637	Symbol	exec -> zp2		10584170						
ANR	10584638	Symbol	size -> storage		10584170						
ANR	10584639	Symbol	exec -> zp1		10584170						
ANR	10584640	Symbol	size -> codeRangeTable		10584170						
ANR	10584641	Symbol	exec -> zp0		10584170						
ANR	10584642	Function	TT_Save_Context	488:2:22032:22615							
ANR	10584643	FunctionDef	"TT_Save_Context (TT_ExecContext exec , TT_Size size)"		10584642	0					
ANR	10584644	CompoundStatement		490:2:22115:22615	10584642	0					
ANR	10584645	IdentifierDeclStatement	FT_Int i ;	491:4:22121:22130	10584642	0	True				
ANR	10584646	IdentifierDecl	i		10584642	0					
ANR	10584647	IdentifierDeclType	FT_Int		10584642	0					
ANR	10584648	Identifier	i		10584642	1					
ANR	10584649	ExpressionStatement	size -> num_function_defs = exec -> numFDefs	497:4:22342:22385	10584642	1	True				
ANR	10584650	AssignmentExpression	size -> num_function_defs = exec -> numFDefs		10584642	0		=			
ANR	10584651	PtrMemberAccess	size -> num_function_defs		10584642	0					
ANR	10584652	Identifier	size		10584642	0					
ANR	10584653	Identifier	num_function_defs		10584642	1					
ANR	10584654	PtrMemberAccess	exec -> numFDefs		10584642	1					
ANR	10584655	Identifier	exec		10584642	0					
ANR	10584656	Identifier	numFDefs		10584642	1					
ANR	10584657	ExpressionStatement	size -> num_instruction_defs = exec -> numIDefs	498:4:22391:22434	10584642	2	True				
ANR	10584658	AssignmentExpression	size -> num_instruction_defs = exec -> numIDefs		10584642	0		=			
ANR	10584659	PtrMemberAccess	size -> num_instruction_defs		10584642	0					
ANR	10584660	Identifier	size		10584642	0					
ANR	10584661	Identifier	num_instruction_defs		10584642	1					
ANR	10584662	PtrMemberAccess	exec -> numIDefs		10584642	1					
ANR	10584663	Identifier	exec		10584642	0					
ANR	10584664	Identifier	numIDefs		10584642	1					
ANR	10584665	ExpressionStatement	size -> max_func = exec -> maxFunc	500:4:22441:22471	10584642	3	True				
ANR	10584666	AssignmentExpression	size -> max_func = exec -> maxFunc		10584642	0		=			
ANR	10584667	PtrMemberAccess	size -> max_func		10584642	0					
ANR	10584668	Identifier	size		10584642	0					
ANR	10584669	Identifier	max_func		10584642	1					
ANR	10584670	PtrMemberAccess	exec -> maxFunc		10584642	1					
ANR	10584671	Identifier	exec		10584642	0					
ANR	10584672	Identifier	maxFunc		10584642	1					
ANR	10584673	ExpressionStatement	size -> max_ins = exec -> maxIns	501:4:22477:22506	10584642	4	True				
ANR	10584674	AssignmentExpression	size -> max_ins = exec -> maxIns		10584642	0		=			
ANR	10584675	PtrMemberAccess	size -> max_ins		10584642	0					
ANR	10584676	Identifier	size		10584642	0					
ANR	10584677	Identifier	max_ins		10584642	1					
ANR	10584678	PtrMemberAccess	exec -> maxIns		10584642	1					
ANR	10584679	Identifier	exec		10584642	0					
ANR	10584680	Identifier	maxIns		10584642	1					
ANR	10584681	ForStatement	for ( i = 0 ; i < TT_MAX_CODE_RANGES ; i ++ )		10584642	5					
ANR	10584682	ForInit	i = 0 ;	503:10:22519:22524	10584642	0	True				
ANR	10584683	AssignmentExpression	i = 0		10584642	0		=			
ANR	10584684	Identifier	i		10584642	0					
ANR	10584685	PrimaryExpression	0		10584642	1					
ANR	10584686	Condition	i < TT_MAX_CODE_RANGES	503:17:22526:22547	10584642	1	True				
ANR	10584687	RelationalExpression	i < TT_MAX_CODE_RANGES		10584642	0		<			
ANR	10584688	Identifier	i		10584642	0					
ANR	10584689	Identifier	TT_MAX_CODE_RANGES		10584642	1					
ANR	10584690	PostIncDecOperationExpression	i ++	503:41:22550:22552	10584642	2	True				
ANR	10584691	Identifier	i		10584642	0					
ANR	10584692	IncDec	++		10584642	1					
ANR	10584693	ExpressionStatement	size -> codeRangeTable [ i ] = exec -> codeRangeTable [ i ]	504:6:22562:22611	10584642	3	True				
ANR	10584694	AssignmentExpression	size -> codeRangeTable [ i ] = exec -> codeRangeTable [ i ]		10584642	0		=			
ANR	10584695	ArrayIndexing	size -> codeRangeTable [ i ]		10584642	0					
ANR	10584696	PtrMemberAccess	size -> codeRangeTable		10584642	0					
ANR	10584697	Identifier	size		10584642	0					
ANR	10584698	Identifier	codeRangeTable		10584642	1					
ANR	10584699	Identifier	i		10584642	1					
ANR	10584700	ArrayIndexing	exec -> codeRangeTable [ i ]		10584642	1					
ANR	10584701	PtrMemberAccess	exec -> codeRangeTable		10584642	0					
ANR	10584702	Identifier	exec		10584642	0					
ANR	10584703	Identifier	codeRangeTable		10584642	1					
ANR	10584704	Identifier	i		10584642	1					
ANR	10584705	Identifier	TT_Save_Context		10584642	1					
ANR	10584706	ParameterList	"TT_ExecContext exec , TT_Size size"		10584642	2					
ANR	10584707	Parameter	TT_ExecContext exec	488:19:22049:22068	10584642	0	True				
ANR	10584708	ParameterType	TT_ExecContext		10584642	0					
ANR	10584709	Identifier	exec		10584642	1					
ANR	10584710	Parameter	TT_Size size	489:19:22090:22109	10584642	1	True				
ANR	10584711	ParameterType	TT_Size		10584642	0					
ANR	10584712	Identifier	size		10584642	1					
ANR	10584713	CFGEntryNode	ENTRY		10584642		True				
ANR	10584714	CFGExitNode	EXIT		10584642		True				
ANR	10584715	Symbol	exec -> numIDefs		10584642						
ANR	10584716	Symbol	exec -> codeRangeTable		10584642						
ANR	10584717	Symbol	size -> num_function_defs		10584642						
ANR	10584718	Symbol	exec -> maxFunc		10584642						
ANR	10584719	Symbol	* exec -> codeRangeTable		10584642						
ANR	10584720	Symbol	i		10584642						
ANR	10584721	Symbol	exec -> numFDefs		10584642						
ANR	10584722	Symbol	* * exec		10584642						
ANR	10584723	Symbol	* size -> codeRangeTable		10584642						
ANR	10584724	Symbol	exec -> maxIns		10584642						
ANR	10584725	Symbol	* * size		10584642						
ANR	10584726	Symbol	* size		10584642						
ANR	10584727	Symbol	* i		10584642						
ANR	10584728	Symbol	size		10584642						
ANR	10584729	Symbol	TT_MAX_CODE_RANGES		10584642						
ANR	10584730	Symbol	* exec		10584642						
ANR	10584731	Symbol	size -> max_func		10584642						
ANR	10584732	Symbol	size -> num_instruction_defs		10584642						
ANR	10584733	Symbol	size -> codeRangeTable		10584642						
ANR	10584734	Symbol	exec		10584642						
ANR	10584735	Symbol	size -> max_ins		10584642						
ANR	10584736	Function	TT_Run_Context	530:2:24286:24992							
ANR	10584737	FunctionDef	TT_Run_Context (TT_ExecContext exec)		10584736	0					
ANR	10584738	CompoundStatement		531:2:24327:24992	10584736	0					
ANR	10584739	ExpressionStatement	"TT_Goto_CodeRange ( exec , tt_coderange_glyph , 0 )"	532:4:24333:24381	10584736	0	True				
ANR	10584740	CallExpression	"TT_Goto_CodeRange ( exec , tt_coderange_glyph , 0 )"		10584736	0					
ANR	10584741	Callee	TT_Goto_CodeRange		10584736	0					
ANR	10584742	Identifier	TT_Goto_CodeRange		10584736	0					
ANR	10584743	ArgumentList	exec		10584736	1					
ANR	10584744	Argument	exec		10584736	0					
ANR	10584745	Identifier	exec		10584736	0					
ANR	10584746	Argument	tt_coderange_glyph		10584736	1					
ANR	10584747	Identifier	tt_coderange_glyph		10584736	0					
ANR	10584748	Argument	0		10584736	2					
ANR	10584749	PrimaryExpression	0		10584736	0					
ANR	10584750	ExpressionStatement	exec -> zp0 = exec -> pts	534:4:24388:24409	10584736	1	True				
ANR	10584751	AssignmentExpression	exec -> zp0 = exec -> pts		10584736	0		=			
ANR	10584752	PtrMemberAccess	exec -> zp0		10584736	0					
ANR	10584753	Identifier	exec		10584736	0					
ANR	10584754	Identifier	zp0		10584736	1					
ANR	10584755	PtrMemberAccess	exec -> pts		10584736	1					
ANR	10584756	Identifier	exec		10584736	0					
ANR	10584757	Identifier	pts		10584736	1					
ANR	10584758	ExpressionStatement	exec -> zp1 = exec -> pts	535:4:24415:24436	10584736	2	True				
ANR	10584759	AssignmentExpression	exec -> zp1 = exec -> pts		10584736	0		=			
ANR	10584760	PtrMemberAccess	exec -> zp1		10584736	0					
ANR	10584761	Identifier	exec		10584736	0					
ANR	10584762	Identifier	zp1		10584736	1					
ANR	10584763	PtrMemberAccess	exec -> pts		10584736	1					
ANR	10584764	Identifier	exec		10584736	0					
ANR	10584765	Identifier	pts		10584736	1					
ANR	10584766	ExpressionStatement	exec -> zp2 = exec -> pts	536:4:24442:24463	10584736	3	True				
ANR	10584767	AssignmentExpression	exec -> zp2 = exec -> pts		10584736	0		=			
ANR	10584768	PtrMemberAccess	exec -> zp2		10584736	0					
ANR	10584769	Identifier	exec		10584736	0					
ANR	10584770	Identifier	zp2		10584736	1					
ANR	10584771	PtrMemberAccess	exec -> pts		10584736	1					
ANR	10584772	Identifier	exec		10584736	0					
ANR	10584773	Identifier	pts		10584736	1					
ANR	10584774	ExpressionStatement	exec -> GS . gep0 = 1	538:4:24470:24487	10584736	4	True				
ANR	10584775	AssignmentExpression	exec -> GS . gep0 = 1		10584736	0		=			
ANR	10584776	MemberAccess	exec -> GS . gep0		10584736	0					
ANR	10584777	PtrMemberAccess	exec -> GS		10584736	0					
ANR	10584778	Identifier	exec		10584736	0					
ANR	10584779	Identifier	GS		10584736	1					
ANR	10584780	Identifier	gep0		10584736	1					
ANR	10584781	PrimaryExpression	1		10584736	1					
ANR	10584782	ExpressionStatement	exec -> GS . gep1 = 1	539:4:24493:24510	10584736	5	True				
ANR	10584783	AssignmentExpression	exec -> GS . gep1 = 1		10584736	0		=			
ANR	10584784	MemberAccess	exec -> GS . gep1		10584736	0					
ANR	10584785	PtrMemberAccess	exec -> GS		10584736	0					
ANR	10584786	Identifier	exec		10584736	0					
ANR	10584787	Identifier	GS		10584736	1					
ANR	10584788	Identifier	gep1		10584736	1					
ANR	10584789	PrimaryExpression	1		10584736	1					
ANR	10584790	ExpressionStatement	exec -> GS . gep2 = 1	540:4:24516:24533	10584736	6	True				
ANR	10584791	AssignmentExpression	exec -> GS . gep2 = 1		10584736	0		=			
ANR	10584792	MemberAccess	exec -> GS . gep2		10584736	0					
ANR	10584793	PtrMemberAccess	exec -> GS		10584736	0					
ANR	10584794	Identifier	exec		10584736	0					
ANR	10584795	Identifier	GS		10584736	1					
ANR	10584796	Identifier	gep2		10584736	1					
ANR	10584797	PrimaryExpression	1		10584736	1					
ANR	10584798	ExpressionStatement	exec -> GS . projVector . x = 0x4000	542:4:24540:24570	10584736	7	True				
ANR	10584799	AssignmentExpression	exec -> GS . projVector . x = 0x4000		10584736	0		=			
ANR	10584800	MemberAccess	exec -> GS . projVector . x		10584736	0					
ANR	10584801	MemberAccess	exec -> GS . projVector		10584736	0					
ANR	10584802	PtrMemberAccess	exec -> GS		10584736	0					
ANR	10584803	Identifier	exec		10584736	0					
ANR	10584804	Identifier	GS		10584736	1					
ANR	10584805	Identifier	projVector		10584736	1					
ANR	10584806	Identifier	x		10584736	1					
ANR	10584807	PrimaryExpression	0x4000		10584736	1					
ANR	10584808	ExpressionStatement	exec -> GS . projVector . y = 0x0000	543:4:24576:24606	10584736	8	True				
ANR	10584809	AssignmentExpression	exec -> GS . projVector . y = 0x0000		10584736	0		=			
ANR	10584810	MemberAccess	exec -> GS . projVector . y		10584736	0					
ANR	10584811	MemberAccess	exec -> GS . projVector		10584736	0					
ANR	10584812	PtrMemberAccess	exec -> GS		10584736	0					
ANR	10584813	Identifier	exec		10584736	0					
ANR	10584814	Identifier	GS		10584736	1					
ANR	10584815	Identifier	projVector		10584736	1					
ANR	10584816	Identifier	y		10584736	1					
ANR	10584817	PrimaryExpression	0x0000		10584736	1					
ANR	10584818	ExpressionStatement	exec -> GS . freeVector = exec -> GS . projVector	545:4:24613:24654	10584736	9	True				
ANR	10584819	AssignmentExpression	exec -> GS . freeVector = exec -> GS . projVector		10584736	0		=			
ANR	10584820	MemberAccess	exec -> GS . freeVector		10584736	0					
ANR	10584821	PtrMemberAccess	exec -> GS		10584736	0					
ANR	10584822	Identifier	exec		10584736	0					
ANR	10584823	Identifier	GS		10584736	1					
ANR	10584824	Identifier	freeVector		10584736	1					
ANR	10584825	MemberAccess	exec -> GS . projVector		10584736	1					
ANR	10584826	PtrMemberAccess	exec -> GS		10584736	0					
ANR	10584827	Identifier	exec		10584736	0					
ANR	10584828	Identifier	GS		10584736	1					
ANR	10584829	Identifier	projVector		10584736	1					
ANR	10584830	ExpressionStatement	exec -> GS . dualVector = exec -> GS . projVector	546:4:24660:24701	10584736	10	True				
ANR	10584831	AssignmentExpression	exec -> GS . dualVector = exec -> GS . projVector		10584736	0		=			
ANR	10584832	MemberAccess	exec -> GS . dualVector		10584736	0					
ANR	10584833	PtrMemberAccess	exec -> GS		10584736	0					
ANR	10584834	Identifier	exec		10584736	0					
ANR	10584835	Identifier	GS		10584736	1					
ANR	10584836	Identifier	dualVector		10584736	1					
ANR	10584837	MemberAccess	exec -> GS . projVector		10584736	1					
ANR	10584838	PtrMemberAccess	exec -> GS		10584736	0					
ANR	10584839	Identifier	exec		10584736	0					
ANR	10584840	Identifier	GS		10584736	1					
ANR	10584841	Identifier	projVector		10584736	1					
ANR	10584842	ExpressionStatement	exec -> GS . round_state = 1	548:4:24708:24732	10584736	11	True				
ANR	10584843	AssignmentExpression	exec -> GS . round_state = 1		10584736	0		=			
ANR	10584844	MemberAccess	exec -> GS . round_state		10584736	0					
ANR	10584845	PtrMemberAccess	exec -> GS		10584736	0					
ANR	10584846	Identifier	exec		10584736	0					
ANR	10584847	Identifier	GS		10584736	1					
ANR	10584848	Identifier	round_state		10584736	1					
ANR	10584849	PrimaryExpression	1		10584736	1					
ANR	10584850	ExpressionStatement	exec -> GS . loop = 1	549:4:24738:24762	10584736	12	True				
ANR	10584851	AssignmentExpression	exec -> GS . loop = 1		10584736	0		=			
ANR	10584852	MemberAccess	exec -> GS . loop		10584736	0					
ANR	10584853	PtrMemberAccess	exec -> GS		10584736	0					
ANR	10584854	Identifier	exec		10584736	0					
ANR	10584855	Identifier	GS		10584736	1					
ANR	10584856	Identifier	loop		10584736	1					
ANR	10584857	PrimaryExpression	1		10584736	1					
ANR	10584858	ExpressionStatement	exec -> top = 0	553:4:24903:24920	10584736	13	True				
ANR	10584859	AssignmentExpression	exec -> top = 0		10584736	0		=			
ANR	10584860	PtrMemberAccess	exec -> top		10584736	0					
ANR	10584861	Identifier	exec		10584736	0					
ANR	10584862	Identifier	top		10584736	1					
ANR	10584863	PrimaryExpression	0		10584736	1					
ANR	10584864	ExpressionStatement	exec -> callTop = 0	554:4:24926:24943	10584736	14	True				
ANR	10584865	AssignmentExpression	exec -> callTop = 0		10584736	0		=			
ANR	10584866	PtrMemberAccess	exec -> callTop		10584736	0					
ANR	10584867	Identifier	exec		10584736	0					
ANR	10584868	Identifier	callTop		10584736	1					
ANR	10584869	PrimaryExpression	0		10584736	1					
ANR	10584870	ReturnStatement	return exec -> face -> interpreter ( exec ) ;	556:4:24950:24988	10584736	15	True				
ANR	10584871	CallExpression	exec -> face -> interpreter ( exec )		10584736	0					
ANR	10584872	Callee	exec -> face -> interpreter		10584736	0					
ANR	10584873	PtrMemberAccess	exec -> face -> interpreter		10584736	0					
ANR	10584874	PtrMemberAccess	exec -> face		10584736	0					
ANR	10584875	Identifier	exec		10584736	0					
ANR	10584876	Identifier	face		10584736	1					
ANR	10584877	Identifier	interpreter		10584736	1					
ANR	10584878	ArgumentList	exec		10584736	1					
ANR	10584879	Argument	exec		10584736	0					
ANR	10584880	Identifier	exec		10584736	0					
ANR	10584881	Identifier	TT_Run_Context		10584736	1					
ANR	10584882	ParameterList	TT_ExecContext exec		10584736	2					
ANR	10584883	Parameter	TT_ExecContext exec	530:18:24302:24321	10584736	0	True				
ANR	10584884	ParameterType	TT_ExecContext		10584736	0					
ANR	10584885	Identifier	exec		10584736	1					
ANR	10584886	CFGEntryNode	ENTRY		10584736		True				
ANR	10584887	CFGExitNode	EXIT		10584736		True				
ANR	10584888	Symbol	exec -> callTop		10584736						
ANR	10584889	Symbol	exec -> face -> interpreter		10584736						
ANR	10584890	Symbol	tt_coderange_glyph		10584736						
ANR	10584891	Symbol	exec -> pts		10584736						
ANR	10584892	Symbol	* exec -> face		10584736						
ANR	10584893	Symbol	exec -> face		10584736						
ANR	10584894	Symbol	exec -> GS . dualVector		10584736						
ANR	10584895	Symbol	* * exec		10584736						
ANR	10584896	Symbol	exec -> GS . projVector		10584736						
ANR	10584897	Symbol	exec -> top		10584736						
ANR	10584898	Symbol	exec -> GS		10584736						
ANR	10584899	Symbol	exec -> GS . loop		10584736						
ANR	10584900	Symbol	exec -> GS . gep0		10584736						
ANR	10584901	Symbol	exec -> GS . freeVector		10584736						
ANR	10584902	Symbol	* exec		10584736						
ANR	10584903	Symbol	exec -> GS . gep1		10584736						
ANR	10584904	Symbol	exec -> GS . gep2		10584736						
ANR	10584905	Symbol	exec -> GS . projVector . y		10584736						
ANR	10584906	Symbol	exec -> zp2		10584736						
ANR	10584907	Symbol	exec -> GS . projVector . x		10584736						
ANR	10584908	Symbol	exec -> zp1		10584736						
ANR	10584909	Symbol	exec -> zp0		10584736						
ANR	10584910	Symbol	exec		10584736						
ANR	10584911	Symbol	exec -> GS . round_state		10584736						
ANR	10584912	DeclStmt									
ANR	10584913	Decl							const TT_GraphicsState	const TT_GraphicsState	tt_default_graphics_state
ANR	10584914	Function	TT_New_Context	583:2:25724:26184							
ANR	10584915	FunctionDef	TT_New_Context (TT_Driver driver)		10584914	0					
ANR	10584916	CompoundStatement		584:2:25762:26184	10584914	0					
ANR	10584917	IdentifierDeclStatement	FT_Memory memory ;	585:4:25768:25785	10584914	0	True				
ANR	10584918	IdentifierDecl	memory		10584914	0					
ANR	10584919	IdentifierDeclType	FT_Memory		10584914	0					
ANR	10584920	Identifier	memory		10584914	1					
ANR	10584921	IdentifierDeclStatement	FT_Error error ;	586:4:25791:25807	10584914	1	True				
ANR	10584922	IdentifierDecl	error		10584914	0					
ANR	10584923	IdentifierDeclType	FT_Error		10584914	0					
ANR	10584924	Identifier	error		10584914	1					
ANR	10584925	IdentifierDeclStatement	TT_ExecContext exec = NULL ;	588:4:25814:25841	10584914	2	True				
ANR	10584926	IdentifierDecl	exec = NULL		10584914	0					
ANR	10584927	IdentifierDeclType	TT_ExecContext		10584914	0					
ANR	10584928	Identifier	exec		10584914	1					
ANR	10584929	AssignmentExpression	exec = NULL		10584914	2		=			
ANR	10584930	Identifier	NULL		10584914	0					
ANR	10584931	Identifier	NULL		10584914	1					
ANR	10584932	IfStatement	if ( ! driver )		10584914	3					
ANR	10584933	Condition	! driver	591:9:25854:25860	10584914	0	True				
ANR	10584934	UnaryOperationExpression	! driver		10584914	0					
ANR	10584935	UnaryOperator	!		10584914	0					
ANR	10584936	Identifier	driver		10584914	1					
ANR	10584937	GotoStatement	goto Fail ;	592:6:25870:25879	10584914	1	True				
ANR	10584938	Identifier	Fail		10584914	0					
ANR	10584939	ExpressionStatement	memory = driver -> root . root . memory	594:4:25886:25919	10584914	4	True				
ANR	10584940	AssignmentExpression	memory = driver -> root . root . memory		10584914	0		=			
ANR	10584941	Identifier	memory		10584914	0					
ANR	10584942	MemberAccess	driver -> root . root . memory		10584914	1					
ANR	10584943	MemberAccess	driver -> root . root		10584914	0					
ANR	10584944	PtrMemberAccess	driver -> root		10584914	0					
ANR	10584945	Identifier	driver		10584914	0					
ANR	10584946	Identifier	root		10584914	1					
ANR	10584947	Identifier	root		10584914	1					
ANR	10584948	Identifier	memory		10584914	1					
ANR	10584949	IfStatement	if ( FT_NEW ( exec ) )		10584914	5					
ANR	10584950	Condition	FT_NEW ( exec )	597:9:25957:25970	10584914	0	True				
ANR	10584951	CallExpression	FT_NEW ( exec )		10584914	0					
ANR	10584952	Callee	FT_NEW		10584914	0					
ANR	10584953	Identifier	FT_NEW		10584914	0					
ANR	10584954	ArgumentList	exec		10584914	1					
ANR	10584955	Argument	exec		10584914	0					
ANR	10584956	Identifier	exec		10584914	0					
ANR	10584957	GotoStatement	goto Fail ;	598:6:25980:25989	10584914	1	True				
ANR	10584958	Identifier	Fail		10584914	0					
ANR	10584959	ExpressionStatement	"error = Init_Context ( exec , memory )"	601:4:26066:26102	10584914	6	True				
ANR	10584960	AssignmentExpression	"error = Init_Context ( exec , memory )"		10584914	0		=			
ANR	10584961	Identifier	error		10584914	0					
ANR	10584962	CallExpression	"Init_Context ( exec , memory )"		10584914	1					
ANR	10584963	Callee	Init_Context		10584914	0					
ANR	10584964	Identifier	Init_Context		10584914	0					
ANR	10584965	ArgumentList	exec		10584914	1					
ANR	10584966	Argument	exec		10584914	0					
ANR	10584967	Identifier	exec		10584914	0					
ANR	10584968	Argument	memory		10584914	1					
ANR	10584969	Identifier	memory		10584914	0					
ANR	10584970	IfStatement	if ( error )		10584914	7					
ANR	10584971	Condition	error	602:9:26113:26117	10584914	0	True				
ANR	10584972	Identifier	error		10584914	0					
ANR	10584973	GotoStatement	goto Fail ;	603:6:26127:26136	10584914	1	True				
ANR	10584974	Identifier	Fail		10584914	0					
ANR	10584975	ReturnStatement	return exec ;	605:4:26143:26154	10584914	8	True				
ANR	10584976	Identifier	exec		10584914	0					
ANR	10584977	Label	Fail :	607:2:26159:26163	10584914	9	True				
ANR	10584978	Identifier	Fail		10584914	0					
ANR	10584979	ReturnStatement	return NULL ;	608:4:26169:26180	10584914	10	True				
ANR	10584980	Identifier	NULL		10584914	0					
ANR	10584981	Identifier	TT_New_Context		10584914	1					
ANR	10584982	ParameterList	TT_Driver driver		10584914	2					
ANR	10584983	Parameter	TT_Driver driver	583:18:25740:25756	10584914	0	True				
ANR	10584984	ParameterType	TT_Driver		10584914	0					
ANR	10584985	Identifier	driver		10584914	1					
ANR	10584986	CFGEntryNode	ENTRY		10584914		True				
ANR	10584987	CFGExitNode	EXIT		10584914		True				
ANR	10584988	Symbol	driver -> root . root . memory		10584914						
ANR	10584989	Symbol	FT_NEW		10584914						
ANR	10584990	Symbol	driver -> root		10584914						
ANR	10584991	Symbol	memory		10584914						
ANR	10584992	Symbol	NULL		10584914						
ANR	10584993	Symbol	driver		10584914						
ANR	10584994	Symbol	* driver		10584914						
ANR	10584995	Symbol	error		10584914						
ANR	10584996	Symbol	driver -> root . root		10584914						
ANR	10584997	Symbol	exec		10584914						
ANR	10584998	Symbol	Init_Context		10584914						
ANR	10584999	DeclStmt									
ANR	10585000	Decl							const FT_Byte	const FT_Byte [ 256 ]	Pop_Push_Count
ANR	10585001	DeclStmt									
ANR	10585002	Decl							const FT_Char	const FT_Char [ 256 ]	opcode_length
ANR	10585003	Function	TT_MulFix14_arm	1238:2:42778:44050							
ANR	10585004	FunctionDef	"TT_MulFix14_arm (FT_Int32 a , FT_Int b)"		10585003	0					
ANR	10585005	CompoundStatement		1241:2:42861:44050	10585003	0					
ANR	10585006	IdentifierDeclStatement	"FT_Int32 t , t2 ;"	1242:4:42867:42882	10585003	0	True				
ANR	10585007	IdentifierDecl	t		10585003	0					
ANR	10585008	IdentifierDeclType	FT_Int32		10585003	0					
ANR	10585009	Identifier	t		10585003	1					
ANR	10585010	IdentifierDecl	t2		10585003	1					
ANR	10585011	IdentifierDeclType	FT_Int32		10585003	0					
ANR	10585012	Identifier	t2		10585003	1					
ANR	10585013	Statement	__asm	1247:4:42939:42943	10585003	1	True				
ANR	10585014	CompoundStatement		8:4:87:87	10585003	2					
ANR	10585015	Statement	smull	1249:6:42957:42961	10585003	0	True				
ANR	10585016	Statement	t2	1249:12:42963:42964	10585003	1	True				
ANR	10585017	Statement	","	1249:14:42965:42965	10585003	2	True				
ANR	10585018	Statement	t	1249:16:42967:42967	10585003	3	True				
ANR	10585019	Statement	","	1249:17:42968:42968	10585003	4	True				
ANR	10585020	Statement	b	1249:20:42971:42971	10585003	5	True				
ANR	10585021	Statement	","	1249:21:42972:42972	10585003	6	True				
ANR	10585022	Statement	a	1249:24:42975:42975	10585003	7	True				
ANR	10585023	Statement	mov	1250:6:43018:43020	10585003	8	True				
ANR	10585024	Statement	a	1250:12:43024:43024	10585003	9	True				
ANR	10585025	Statement	","	1250:13:43025:43025	10585003	10	True				
ANR	10585026	Statement	t	1250:16:43028:43028	10585003	11	True				
ANR	10585027	Statement	","	1250:17:43029:43029	10585003	12	True				
ANR	10585028	Statement	asr	1250:20:43032:43034	10585003	13	True				
ANR	10585029	Statement	31	1250:25:43037:43038	10585003	14	True				
ANR	10585030	Statement	add	1251:6:43077:43079	10585003	15	True				
ANR	10585031	Statement	a	1251:12:43083:43083	10585003	16	True				
ANR	10585032	Statement	","	1251:13:43084:43084	10585003	17	True				
ANR	10585033	Statement	a	1251:16:43087:43087	10585003	18	True				
ANR	10585034	Statement	","	1251:17:43088:43088	10585003	19	True				
ANR	10585035	Statement	0x2000	1251:21:43092:43097	10585003	20	True				
ANR	10585036	Statement	adds	1252:6:43132:43135	10585003	21	True				
ANR	10585037	Statement	t2	1252:12:43138:43139	10585003	22	True				
ANR	10585038	Statement	","	1252:14:43140:43140	10585003	23	True				
ANR	10585039	Statement	t2	1252:16:43142:43143	10585003	24	True				
ANR	10585040	Statement	","	1252:18:43144:43144	10585003	25	True				
ANR	10585041	Statement	a	1252:20:43146:43146	10585003	26	True				
ANR	10585042	Statement	adc	1253:6:43182:43184	10585003	27	True				
ANR	10585043	Statement	t	1253:12:43188:43188	10585003	28	True				
ANR	10585044	Statement	","	1253:13:43189:43189	10585003	29	True				
ANR	10585045	Statement	t	1253:16:43192:43192	10585003	30	True				
ANR	10585046	Statement	","	1253:17:43193:43193	10585003	31	True				
ANR	10585047	Statement	0	1253:21:43197:43197	10585003	32	True				
ANR	10585048	Statement	mov	1254:6:43236:43238	10585003	33	True				
ANR	10585049	Statement	a	1254:12:43242:43242	10585003	34	True				
ANR	10585050	Statement	","	1254:13:43243:43243	10585003	35	True				
ANR	10585051	Statement	t2	1254:16:43246:43247	10585003	36	True				
ANR	10585052	Statement	","	1254:18:43248:43248	10585003	37	True				
ANR	10585053	Statement	lsr	1254:20:43250:43252	10585003	38	True				
ANR	10585054	Statement	14	1254:25:43255:43256	10585003	39	True				
ANR	10585055	Statement	orr	1255:6:43293:43295	10585003	40	True				
ANR	10585056	Statement	a	1255:12:43299:43299	10585003	41	True				
ANR	10585057	Statement	","	1255:13:43300:43300	10585003	42	True				
ANR	10585058	Statement	a	1255:16:43303:43303	10585003	43	True				
ANR	10585059	Statement	","	1255:17:43304:43304	10585003	44	True				
ANR	10585060	Statement	t	1255:20:43307:43307	10585003	45	True				
ANR	10585061	Statement	","	1255:21:43308:43308	10585003	46	True				
ANR	10585062	Statement	lsl	1255:24:43311:43313	10585003	47	True				
ANR	10585063	Statement	18	1255:29:43316:43317	10585003	48	True				
ANR	10585064	ReturnStatement	return a ;	1278:4:44038:44046	10585003	3	True				
ANR	10585065	Identifier	a		10585003	0					
ANR	10585066	ReturnType	static FT_Int32		10585003	1					
ANR	10585067	Identifier	TT_MulFix14_arm		10585003	2					
ANR	10585068	ParameterList	"FT_Int32 a , FT_Int b"		10585003	3					
ANR	10585069	Parameter	FT_Int32 a	1239:19:42813:42823	10585003	0	True				
ANR	10585070	ParameterType	FT_Int32		10585003	0					
ANR	10585071	Identifier	a		10585003	1					
ANR	10585072	Parameter	FT_Int b	1240:19:42845:42855	10585003	1	True				
ANR	10585073	ParameterType	FT_Int		10585003	0					
ANR	10585074	Identifier	b		10585003	1					
ANR	10585075	CFGEntryNode	ENTRY		10585003		True				
ANR	10585076	CFGExitNode	EXIT		10585003		True				
ANR	10585077	Symbol	a		10585003						
ANR	10585078	Symbol	b		10585003						
ANR	10585079	Symbol	t		10585003						
ANR	10585080	Symbol	t2		10585003						
ANR	10585081	Function	TT_MulFix14_long_long	1301:33:44807:45258							
ANR	10585082	FunctionDef	"TT_MulFix14_long_long (FT_Int32 a , FT_Int b)"		10585081	0					
ANR	10585083	CompoundStatement		1304:2:44895:45258	10585081	0					
ANR	10585084	IdentifierDeclStatement	long long ret = ( long long ) a * b ;	1306:4:44902:44935	10585081	0	True				
ANR	10585085	IdentifierDecl	ret = ( long long ) a * b		10585081	0					
ANR	10585086	IdentifierDeclType	long long		10585081	0					
ANR	10585087	Identifier	ret		10585081	1					
ANR	10585088	AssignmentExpression	ret = ( long long ) a * b		10585081	2		=			
ANR	10585089	Identifier	ret		10585081	0					
ANR	10585090	MultiplicativeExpression	( long long ) a * b		10585081	1		*			
ANR	10585091	CastExpression	( long long ) a		10585081	0					
ANR	10585092	CastTarget	long long		10585081	0					
ANR	10585093	Identifier	a		10585081	1					
ANR	10585094	Identifier	b		10585081	1					
ANR	10585095	IdentifierDeclStatement	long long tmp = ret >> 63 ;	1311:4:45164:45190	10585081	1	True				
ANR	10585096	IdentifierDecl	tmp = ret >> 63		10585081	0					
ANR	10585097	IdentifierDeclType	long long		10585081	0					
ANR	10585098	Identifier	tmp		10585081	1					
ANR	10585099	AssignmentExpression	tmp = ret >> 63		10585081	2		=			
ANR	10585100	Identifier	tmp		10585081	0					
ANR	10585101	ShiftExpression	ret >> 63		10585081	1		>>			
ANR	10585102	Identifier	ret		10585081	0					
ANR	10585103	PrimaryExpression	63		10585081	1					
ANR	10585104	ExpressionStatement	ret += 0x2000 + tmp	1314:4:45198:45217	10585081	2	True				
ANR	10585105	AssignmentExpression	ret += 0x2000 + tmp		10585081	0		+=			
ANR	10585106	Identifier	ret		10585081	0					
ANR	10585107	AdditiveExpression	0x2000 + tmp		10585081	1		+			
ANR	10585108	PrimaryExpression	0x2000		10585081	0					
ANR	10585109	Identifier	tmp		10585081	1					
ANR	10585110	ReturnStatement	return ( FT_Int32 ) ( ret >> 14 ) ;	1316:4:45224:45254	10585081	3	True				
ANR	10585111	CastExpression	( FT_Int32 ) ( ret >> 14 )		10585081	0					
ANR	10585112	CastTarget	FT_Int32		10585081	0					
ANR	10585113	ShiftExpression	ret >> 14		10585081	1		>>			
ANR	10585114	Identifier	ret		10585081	0					
ANR	10585115	PrimaryExpression	14		10585081	1					
ANR	10585116	ReturnType	FT_Int32		10585081	1					
ANR	10585117	Identifier	TT_MulFix14_long_long		10585081	2					
ANR	10585118	ParameterList	"FT_Int32 a , FT_Int b"		10585081	3					
ANR	10585119	Parameter	FT_Int32 a	1302:25:44841:44851	10585081	0	True				
ANR	10585120	ParameterType	FT_Int32		10585081	0					
ANR	10585121	Identifier	a		10585081	1					
ANR	10585122	Parameter	FT_Int b	1303:25:44879:44889	10585081	1	True				
ANR	10585123	ParameterType	FT_Int		10585081	0					
ANR	10585124	Identifier	b		10585081	1					
ANR	10585125	CFGEntryNode	ENTRY		10585081		True				
ANR	10585126	CFGExitNode	EXIT		10585081		True				
ANR	10585127	Symbol	ret		10585081						
ANR	10585128	Symbol	a		10585081						
ANR	10585129	Symbol	b		10585081						
ANR	10585130	Symbol	tmp		10585081						
ANR	10585131	Function	TT_MulFix14	1331:2:45612:46184							
ANR	10585132	FunctionDef	"TT_MulFix14 (FT_Int32 a , FT_Int b)"		10585131	0					
ANR	10585133	CompoundStatement		1334:2:45687:46184	10585131	0					
ANR	10585134	IdentifierDeclStatement	FT_Int32 sign ;	1335:4:45693:45708	10585131	0	True				
ANR	10585135	IdentifierDecl	sign		10585131	0					
ANR	10585136	IdentifierDeclType	FT_Int32		10585131	0					
ANR	10585137	Identifier	sign		10585131	1					
ANR	10585138	IdentifierDeclStatement	"FT_UInt32 ah , al , mid , lo , hi ;"	1336:4:45714:45744	10585131	1	True				
ANR	10585139	IdentifierDecl	ah		10585131	0					
ANR	10585140	IdentifierDeclType	FT_UInt32		10585131	0					
ANR	10585141	Identifier	ah		10585131	1					
ANR	10585142	IdentifierDecl	al		10585131	1					
ANR	10585143	IdentifierDeclType	FT_UInt32		10585131	0					
ANR	10585144	Identifier	al		10585131	1					
ANR	10585145	IdentifierDecl	mid		10585131	2					
ANR	10585146	IdentifierDeclType	FT_UInt32		10585131	0					
ANR	10585147	Identifier	mid		10585131	1					
ANR	10585148	IdentifierDecl	lo		10585131	3					
ANR	10585149	IdentifierDeclType	FT_UInt32		10585131	0					
ANR	10585150	Identifier	lo		10585131	1					
ANR	10585151	IdentifierDecl	hi		10585131	4					
ANR	10585152	IdentifierDeclType	FT_UInt32		10585131	0					
ANR	10585153	Identifier	hi		10585131	1					
ANR	10585154	ExpressionStatement	sign = a ^ b	1339:4:45752:45764	10585131	2	True				
ANR	10585155	AssignmentExpression	sign = a ^ b		10585131	0		=			
ANR	10585156	Identifier	sign		10585131	0					
ANR	10585157	ExclusiveOrExpression	a ^ b		10585131	1		^			
ANR	10585158	Identifier	a		10585131	0					
ANR	10585159	Identifier	b		10585131	1					
ANR	10585160	IfStatement	if ( a < 0 )		10585131	3					
ANR	10585161	Condition	a < 0	1341:9:45776:45780	10585131	0	True				
ANR	10585162	RelationalExpression	a < 0		10585131	0		<			
ANR	10585163	Identifier	a		10585131	0					
ANR	10585164	PrimaryExpression	0		10585131	1					
ANR	10585165	ExpressionStatement	a = - a	1342:6:45790:45796	10585131	1	True				
ANR	10585166	AssignmentExpression	a = - a		10585131	0		=			
ANR	10585167	Identifier	a		10585131	0					
ANR	10585168	UnaryOperationExpression	- a		10585131	1					
ANR	10585169	UnaryOperator	-		10585131	0					
ANR	10585170	Identifier	a		10585131	1					
ANR	10585171	IfStatement	if ( b < 0 )		10585131	4					
ANR	10585172	Condition	b < 0	1343:9:45807:45811	10585131	0	True				
ANR	10585173	RelationalExpression	b < 0		10585131	0		<			
ANR	10585174	Identifier	b		10585131	0					
ANR	10585175	PrimaryExpression	0		10585131	1					
ANR	10585176	ExpressionStatement	b = - b	1344:6:45821:45827	10585131	1	True				
ANR	10585177	AssignmentExpression	b = - b		10585131	0		=			
ANR	10585178	Identifier	b		10585131	0					
ANR	10585179	UnaryOperationExpression	- b		10585131	1					
ANR	10585180	UnaryOperator	-		10585131	0					
ANR	10585181	Identifier	b		10585131	1					
ANR	10585182	ExpressionStatement	ah = ( FT_UInt32 ) ( ( a >> 16 ) & 0xFFFFU )	1346:4:45834:45875	10585131	5	True				
ANR	10585183	AssignmentExpression	ah = ( FT_UInt32 ) ( ( a >> 16 ) & 0xFFFFU )		10585131	0		=			
ANR	10585184	Identifier	ah		10585131	0					
ANR	10585185	CastExpression	( FT_UInt32 ) ( ( a >> 16 ) & 0xFFFFU )		10585131	1					
ANR	10585186	CastTarget	FT_UInt32		10585131	0					
ANR	10585187	BitAndExpression	( a >> 16 ) & 0xFFFFU		10585131	1		&			
ANR	10585188	ShiftExpression	a >> 16		10585131	0		>>			
ANR	10585189	Identifier	a		10585131	0					
ANR	10585190	PrimaryExpression	16		10585131	1					
ANR	10585191	PrimaryExpression	0xFFFFU		10585131	1					
ANR	10585192	ExpressionStatement	al = ( FT_UInt32 ) ( a & 0xFFFFU )	1347:4:45881:45912	10585131	6	True				
ANR	10585193	AssignmentExpression	al = ( FT_UInt32 ) ( a & 0xFFFFU )		10585131	0		=			
ANR	10585194	Identifier	al		10585131	0					
ANR	10585195	CastExpression	( FT_UInt32 ) ( a & 0xFFFFU )		10585131	1					
ANR	10585196	CastTarget	FT_UInt32		10585131	0					
ANR	10585197	BitAndExpression	a & 0xFFFFU		10585131	1		&			
ANR	10585198	Identifier	a		10585131	0					
ANR	10585199	PrimaryExpression	0xFFFFU		10585131	1					
ANR	10585200	ExpressionStatement	lo = al * b	1349:4:45919:45933	10585131	7	True				
ANR	10585201	AssignmentExpression	lo = al * b		10585131	0		=			
ANR	10585202	Identifier	lo		10585131	0					
ANR	10585203	MultiplicativeExpression	al * b		10585131	1		*			
ANR	10585204	Identifier	al		10585131	0					
ANR	10585205	Identifier	b		10585131	1					
ANR	10585206	ExpressionStatement	mid = ah * b	1350:4:45939:45953	10585131	8	True				
ANR	10585207	AssignmentExpression	mid = ah * b		10585131	0		=			
ANR	10585208	Identifier	mid		10585131	0					
ANR	10585209	MultiplicativeExpression	ah * b		10585131	1		*			
ANR	10585210	Identifier	ah		10585131	0					
ANR	10585211	Identifier	b		10585131	1					
ANR	10585212	ExpressionStatement	hi = mid >> 16	1351:4:45959:45976	10585131	9	True				
ANR	10585213	AssignmentExpression	hi = mid >> 16		10585131	0		=			
ANR	10585214	Identifier	hi		10585131	0					
ANR	10585215	ShiftExpression	mid >> 16		10585131	1		>>			
ANR	10585216	Identifier	mid		10585131	0					
ANR	10585217	PrimaryExpression	16		10585131	1					
ANR	10585218	ExpressionStatement	mid = ( mid << 16 ) + ( 1 << 13 )	1352:4:45982:46017	10585131	10	True				
ANR	10585219	AssignmentExpression	mid = ( mid << 16 ) + ( 1 << 13 )		10585131	0		=			
ANR	10585220	Identifier	mid		10585131	0					
ANR	10585221	AdditiveExpression	( mid << 16 ) + ( 1 << 13 )		10585131	1		+			
ANR	10585222	ShiftExpression	mid << 16		10585131	0		<<			
ANR	10585223	Identifier	mid		10585131	0					
ANR	10585224	PrimaryExpression	16		10585131	1					
ANR	10585225	ShiftExpression	1 << 13		10585131	1		<<			
ANR	10585226	PrimaryExpression	1		10585131	0					
ANR	10585227	PrimaryExpression	13		10585131	1					
ANR	10585228	ExpressionStatement	lo += mid	1353:4:46038:46049	10585131	11	True				
ANR	10585229	AssignmentExpression	lo += mid		10585131	0		+=			
ANR	10585230	Identifier	lo		10585131	0					
ANR	10585231	Identifier	mid		10585131	1					
ANR	10585232	IfStatement	if ( lo < mid )		10585131	12					
ANR	10585233	Condition	lo < mid	1354:9:46060:46067	10585131	0	True				
ANR	10585234	RelationalExpression	lo < mid		10585131	0		<			
ANR	10585235	Identifier	lo		10585131	0					
ANR	10585236	Identifier	mid		10585131	1					
ANR	10585237	ExpressionStatement	hi += 1	1355:6:46077:46084	10585131	1	True				
ANR	10585238	AssignmentExpression	hi += 1		10585131	0		+=			
ANR	10585239	Identifier	hi		10585131	0					
ANR	10585240	PrimaryExpression	1		10585131	1					
ANR	10585241	ExpressionStatement	mid = ( lo >> 14 ) | ( hi << 18 )	1357:4:46091:46124	10585131	13	True				
ANR	10585242	AssignmentExpression	mid = ( lo >> 14 ) | ( hi << 18 )		10585131	0		=			
ANR	10585243	Identifier	mid		10585131	0					
ANR	10585244	InclusiveOrExpression	( lo >> 14 ) | ( hi << 18 )		10585131	1		|			
ANR	10585245	ShiftExpression	lo >> 14		10585131	0		>>			
ANR	10585246	Identifier	lo		10585131	0					
ANR	10585247	PrimaryExpression	14		10585131	1					
ANR	10585248	ShiftExpression	hi << 18		10585131	1		<<			
ANR	10585249	Identifier	hi		10585131	0					
ANR	10585250	PrimaryExpression	18		10585131	1					
ANR	10585251	ReturnStatement	return sign >= 0 ? ( FT_Int32 ) mid : - ( FT_Int32 ) mid ;	1359:4:46131:46180	10585131	14	True				
ANR	10585252	ConditionalExpression	sign >= 0 ? ( FT_Int32 ) mid : - ( FT_Int32 ) mid		10585131	0					
ANR	10585253	Condition	sign >= 0		10585131	0					
ANR	10585254	RelationalExpression	sign >= 0		10585131	0		>=			
ANR	10585255	Identifier	sign		10585131	0					
ANR	10585256	PrimaryExpression	0		10585131	1					
ANR	10585257	CastExpression	( FT_Int32 ) mid		10585131	1					
ANR	10585258	CastTarget	FT_Int32		10585131	0					
ANR	10585259	Identifier	mid		10585131	1					
ANR	10585260	UnaryOperationExpression	- ( FT_Int32 ) mid		10585131	2					
ANR	10585261	UnaryOperator	-		10585131	0					
ANR	10585262	CastExpression	( FT_Int32 ) mid		10585131	1					
ANR	10585263	CastTarget	FT_Int32		10585131	0					
ANR	10585264	Identifier	mid		10585131	1					
ANR	10585265	ReturnType	static FT_Int32		10585131	1					
ANR	10585266	Identifier	TT_MulFix14		10585131	2					
ANR	10585267	ParameterList	"FT_Int32 a , FT_Int b"		10585131	3					
ANR	10585268	Parameter	FT_Int32 a	1332:15:45643:45653	10585131	0	True				
ANR	10585269	ParameterType	FT_Int32		10585131	0					
ANR	10585270	Identifier	a		10585131	1					
ANR	10585271	Parameter	FT_Int b	1333:15:45671:45681	10585131	1	True				
ANR	10585272	ParameterType	FT_Int		10585131	0					
ANR	10585273	Identifier	b		10585131	1					
ANR	10585274	CFGEntryNode	ENTRY		10585131		True				
ANR	10585275	CFGExitNode	EXIT		10585131		True				
ANR	10585276	Symbol	a		10585131						
ANR	10585277	Symbol	hi		10585131						
ANR	10585278	Symbol	b		10585131						
ANR	10585279	Symbol	lo		10585131						
ANR	10585280	Symbol	ah		10585131						
ANR	10585281	Symbol	sign		10585131						
ANR	10585282	Symbol	mid		10585131						
ANR	10585283	Symbol	al		10585131						
ANR	10585284	Function	TT_DotFix14_long_long	1377:33:46560:47070							
ANR	10585285	FunctionDef	"TT_DotFix14_long_long (FT_Int32 ax , FT_Int32 ay , FT_Int bx , FT_Int by)"		10585284	0					
ANR	10585286	CompoundStatement		1382:2:46728:47070	10585284	0					
ANR	10585287	IdentifierDeclStatement	long long temp1 = ( long long ) ax * bx ;	1386:4:46869:46906	10585284	0	True				
ANR	10585288	IdentifierDecl	temp1 = ( long long ) ax * bx		10585284	0					
ANR	10585289	IdentifierDeclType	long long		10585284	0					
ANR	10585290	Identifier	temp1		10585284	1					
ANR	10585291	AssignmentExpression	temp1 = ( long long ) ax * bx		10585284	2		=			
ANR	10585292	Identifier	temp1		10585284	0					
ANR	10585293	MultiplicativeExpression	( long long ) ax * bx		10585284	1		*			
ANR	10585294	CastExpression	( long long ) ax		10585284	0					
ANR	10585295	CastTarget	long long		10585284	0					
ANR	10585296	Identifier	ax		10585284	1					
ANR	10585297	Identifier	bx		10585284	1					
ANR	10585298	IdentifierDeclStatement	long long temp2 = ( long long ) ay * by ;	1387:4:46912:46949	10585284	1	True				
ANR	10585299	IdentifierDecl	temp2 = ( long long ) ay * by		10585284	0					
ANR	10585300	IdentifierDeclType	long long		10585284	0					
ANR	10585301	Identifier	temp2		10585284	1					
ANR	10585302	AssignmentExpression	temp2 = ( long long ) ay * by		10585284	2		=			
ANR	10585303	Identifier	temp2		10585284	0					
ANR	10585304	MultiplicativeExpression	( long long ) ay * by		10585284	1		*			
ANR	10585305	CastExpression	( long long ) ay		10585284	0					
ANR	10585306	CastTarget	long long		10585284	0					
ANR	10585307	Identifier	ay		10585284	1					
ANR	10585308	Identifier	by		10585284	1					
ANR	10585309	ExpressionStatement	temp1 += temp2	1390:4:46957:46971	10585284	2	True				
ANR	10585310	AssignmentExpression	temp1 += temp2		10585284	0		+=			
ANR	10585311	Identifier	temp1		10585284	0					
ANR	10585312	Identifier	temp2		10585284	1					
ANR	10585313	ExpressionStatement	temp2 = temp1 >> 63	1391:4:46977:46997	10585284	3	True				
ANR	10585314	AssignmentExpression	temp2 = temp1 >> 63		10585284	0		=			
ANR	10585315	Identifier	temp2		10585284	0					
ANR	10585316	ShiftExpression	temp1 >> 63		10585284	1		>>			
ANR	10585317	Identifier	temp1		10585284	0					
ANR	10585318	PrimaryExpression	63		10585284	1					
ANR	10585319	ExpressionStatement	temp1 += 0x2000 + temp2	1392:4:47003:47026	10585284	4	True				
ANR	10585320	AssignmentExpression	temp1 += 0x2000 + temp2		10585284	0		+=			
ANR	10585321	Identifier	temp1		10585284	0					
ANR	10585322	AdditiveExpression	0x2000 + temp2		10585284	1		+			
ANR	10585323	PrimaryExpression	0x2000		10585284	0					
ANR	10585324	Identifier	temp2		10585284	1					
ANR	10585325	ReturnStatement	return ( FT_Int32 ) ( temp1 >> 14 ) ;	1394:4:47033:47065	10585284	5	True				
ANR	10585326	CastExpression	( FT_Int32 ) ( temp1 >> 14 )		10585284	0					
ANR	10585327	CastTarget	FT_Int32		10585284	0					
ANR	10585328	ShiftExpression	temp1 >> 14		10585284	1		>>			
ANR	10585329	Identifier	temp1		10585284	0					
ANR	10585330	PrimaryExpression	14		10585284	1					
ANR	10585331	ReturnType	FT_Int32		10585284	1					
ANR	10585332	Identifier	TT_DotFix14_long_long		10585284	2					
ANR	10585333	ParameterList	"FT_Int32 ax , FT_Int32 ay , FT_Int bx , FT_Int by"		10585284	3					
ANR	10585334	Parameter	FT_Int32 ax	1378:25:46594:46605	10585284	0	True				
ANR	10585335	ParameterType	FT_Int32		10585284	0					
ANR	10585336	Identifier	ax		10585284	1					
ANR	10585337	Parameter	FT_Int32 ay	1379:25:46633:46644	10585284	1	True				
ANR	10585338	ParameterType	FT_Int32		10585284	0					
ANR	10585339	Identifier	ay		10585284	1					
ANR	10585340	Parameter	FT_Int bx	1380:25:46672:46683	10585284	2	True				
ANR	10585341	ParameterType	FT_Int		10585284	0					
ANR	10585342	Identifier	bx		10585284	1					
ANR	10585343	Parameter	FT_Int by	1381:25:46711:46722	10585284	3	True				
ANR	10585344	ParameterType	FT_Int		10585284	0					
ANR	10585345	Identifier	by		10585284	1					
ANR	10585346	CFGEntryNode	ENTRY		10585284		True				
ANR	10585347	CFGExitNode	EXIT		10585284		True				
ANR	10585348	Symbol	bx		10585284						
ANR	10585349	Symbol	ax		10585284						
ANR	10585350	Symbol	by		10585284						
ANR	10585351	Symbol	ay		10585284						
ANR	10585352	Symbol	temp2		10585284						
ANR	10585353	Symbol	temp1		10585284						
ANR	10585354	Function	TT_DotFix14	1408:2:47311:48272							
ANR	10585355	FunctionDef	"TT_DotFix14 (FT_Int32 ax , FT_Int32 ay , FT_Int bx , FT_Int by)"		10585354	0					
ANR	10585356	CompoundStatement		1413:2:47446:48272	10585354	0					
ANR	10585357	IdentifierDeclStatement	"FT_Int32 m , s , hi1 , hi2 , hi ;"	1414:4:47452:47481	10585354	0	True				
ANR	10585358	IdentifierDecl	m		10585354	0					
ANR	10585359	IdentifierDeclType	FT_Int32		10585354	0					
ANR	10585360	Identifier	m		10585354	1					
ANR	10585361	IdentifierDecl	s		10585354	1					
ANR	10585362	IdentifierDeclType	FT_Int32		10585354	0					
ANR	10585363	Identifier	s		10585354	1					
ANR	10585364	IdentifierDecl	hi1		10585354	2					
ANR	10585365	IdentifierDeclType	FT_Int32		10585354	0					
ANR	10585366	Identifier	hi1		10585354	1					
ANR	10585367	IdentifierDecl	hi2		10585354	3					
ANR	10585368	IdentifierDeclType	FT_Int32		10585354	0					
ANR	10585369	Identifier	hi2		10585354	1					
ANR	10585370	IdentifierDecl	hi		10585354	4					
ANR	10585371	IdentifierDeclType	FT_Int32		10585354	0					
ANR	10585372	Identifier	hi		10585354	1					
ANR	10585373	IdentifierDeclStatement	"FT_UInt32 l , lo1 , lo2 , lo ;"	1415:4:47487:47513	10585354	1	True				
ANR	10585374	IdentifierDecl	l		10585354	0					
ANR	10585375	IdentifierDeclType	FT_UInt32		10585354	0					
ANR	10585376	Identifier	l		10585354	1					
ANR	10585377	IdentifierDecl	lo1		10585354	1					
ANR	10585378	IdentifierDeclType	FT_UInt32		10585354	0					
ANR	10585379	Identifier	lo1		10585354	1					
ANR	10585380	IdentifierDecl	lo2		10585354	2					
ANR	10585381	IdentifierDeclType	FT_UInt32		10585354	0					
ANR	10585382	Identifier	lo2		10585354	1					
ANR	10585383	IdentifierDecl	lo		10585354	3					
ANR	10585384	IdentifierDeclType	FT_UInt32		10585354	0					
ANR	10585385	Identifier	lo		10585354	1					
ANR	10585386	ExpressionStatement	l = ( FT_UInt32 ) ( ( ax & 0xFFFFU ) * bx )	1419:4:47561:47601	10585354	2	True				
ANR	10585387	AssignmentExpression	l = ( FT_UInt32 ) ( ( ax & 0xFFFFU ) * bx )		10585354	0		=			
ANR	10585388	Identifier	l		10585354	0					
ANR	10585389	CastExpression	( FT_UInt32 ) ( ( ax & 0xFFFFU ) * bx )		10585354	1					
ANR	10585390	CastTarget	FT_UInt32		10585354	0					
ANR	10585391	MultiplicativeExpression	( ax & 0xFFFFU ) * bx		10585354	1		*			
ANR	10585392	BitAndExpression	ax & 0xFFFFU		10585354	0		&			
ANR	10585393	Identifier	ax		10585354	0					
ANR	10585394	PrimaryExpression	0xFFFFU		10585354	1					
ANR	10585395	Identifier	bx		10585354	1					
ANR	10585396	ExpressionStatement	m = ( ax >> 16 ) * bx	1420:4:47607:47628	10585354	3	True				
ANR	10585397	AssignmentExpression	m = ( ax >> 16 ) * bx		10585354	0		=			
ANR	10585398	Identifier	m		10585354	0					
ANR	10585399	MultiplicativeExpression	( ax >> 16 ) * bx		10585354	1		*			
ANR	10585400	ShiftExpression	ax >> 16		10585354	0		>>			
ANR	10585401	Identifier	ax		10585354	0					
ANR	10585402	PrimaryExpression	16		10585354	1					
ANR	10585403	Identifier	bx		10585354	1					
ANR	10585404	ExpressionStatement	lo1 = l + ( ( FT_UInt32 ) m << 16 )	1422:4:47635:47667	10585354	4	True				
ANR	10585405	AssignmentExpression	lo1 = l + ( ( FT_UInt32 ) m << 16 )		10585354	0		=			
ANR	10585406	Identifier	lo1		10585354	0					
ANR	10585407	AdditiveExpression	l + ( ( FT_UInt32 ) m << 16 )		10585354	1		+			
ANR	10585408	Identifier	l		10585354	0					
ANR	10585409	ShiftExpression	( FT_UInt32 ) m << 16		10585354	1		<<			
ANR	10585410	CastExpression	( FT_UInt32 ) m		10585354	0					
ANR	10585411	CastTarget	FT_UInt32		10585354	0					
ANR	10585412	Identifier	m		10585354	1					
ANR	10585413	PrimaryExpression	16		10585354	1					
ANR	10585414	ExpressionStatement	hi1 = ( m >> 16 ) + ( ( FT_Int32 ) l >> 31 ) + ( lo1 < l )	1423:4:47673:47728	10585354	5	True				
ANR	10585415	AssignmentExpression	hi1 = ( m >> 16 ) + ( ( FT_Int32 ) l >> 31 ) + ( lo1 < l )		10585354	0		=			
ANR	10585416	Identifier	hi1		10585354	0					
ANR	10585417	AdditiveExpression	( m >> 16 ) + ( ( FT_Int32 ) l >> 31 ) + ( lo1 < l )		10585354	1		+			
ANR	10585418	ShiftExpression	m >> 16		10585354	0		>>			
ANR	10585419	Identifier	m		10585354	0					
ANR	10585420	PrimaryExpression	16		10585354	1					
ANR	10585421	AdditiveExpression	( ( FT_Int32 ) l >> 31 ) + ( lo1 < l )		10585354	1		+			
ANR	10585422	ShiftExpression	( FT_Int32 ) l >> 31		10585354	0		>>			
ANR	10585423	CastExpression	( FT_Int32 ) l		10585354	0					
ANR	10585424	CastTarget	FT_Int32		10585354	0					
ANR	10585425	Identifier	l		10585354	1					
ANR	10585426	PrimaryExpression	31		10585354	1					
ANR	10585427	RelationalExpression	lo1 < l		10585354	1		<			
ANR	10585428	Identifier	lo1		10585354	0					
ANR	10585429	Identifier	l		10585354	1					
ANR	10585430	ExpressionStatement	l = ( FT_UInt32 ) ( ( ay & 0xFFFFU ) * by )	1426:4:47775:47815	10585354	6	True				
ANR	10585431	AssignmentExpression	l = ( FT_UInt32 ) ( ( ay & 0xFFFFU ) * by )		10585354	0		=			
ANR	10585432	Identifier	l		10585354	0					
ANR	10585433	CastExpression	( FT_UInt32 ) ( ( ay & 0xFFFFU ) * by )		10585354	1					
ANR	10585434	CastTarget	FT_UInt32		10585354	0					
ANR	10585435	MultiplicativeExpression	( ay & 0xFFFFU ) * by		10585354	1		*			
ANR	10585436	BitAndExpression	ay & 0xFFFFU		10585354	0		&			
ANR	10585437	Identifier	ay		10585354	0					
ANR	10585438	PrimaryExpression	0xFFFFU		10585354	1					
ANR	10585439	Identifier	by		10585354	1					
ANR	10585440	ExpressionStatement	m = ( ay >> 16 ) * by	1427:4:47821:47842	10585354	7	True				
ANR	10585441	AssignmentExpression	m = ( ay >> 16 ) * by		10585354	0		=			
ANR	10585442	Identifier	m		10585354	0					
ANR	10585443	MultiplicativeExpression	( ay >> 16 ) * by		10585354	1		*			
ANR	10585444	ShiftExpression	ay >> 16		10585354	0		>>			
ANR	10585445	Identifier	ay		10585354	0					
ANR	10585446	PrimaryExpression	16		10585354	1					
ANR	10585447	Identifier	by		10585354	1					
ANR	10585448	ExpressionStatement	lo2 = l + ( ( FT_UInt32 ) m << 16 )	1429:4:47849:47881	10585354	8	True				
ANR	10585449	AssignmentExpression	lo2 = l + ( ( FT_UInt32 ) m << 16 )		10585354	0		=			
ANR	10585450	Identifier	lo2		10585354	0					
ANR	10585451	AdditiveExpression	l + ( ( FT_UInt32 ) m << 16 )		10585354	1		+			
ANR	10585452	Identifier	l		10585354	0					
ANR	10585453	ShiftExpression	( FT_UInt32 ) m << 16		10585354	1		<<			
ANR	10585454	CastExpression	( FT_UInt32 ) m		10585354	0					
ANR	10585455	CastTarget	FT_UInt32		10585354	0					
ANR	10585456	Identifier	m		10585354	1					
ANR	10585457	PrimaryExpression	16		10585354	1					
ANR	10585458	ExpressionStatement	hi2 = ( m >> 16 ) + ( ( FT_Int32 ) l >> 31 ) + ( lo2 < l )	1430:4:47887:47942	10585354	9	True				
ANR	10585459	AssignmentExpression	hi2 = ( m >> 16 ) + ( ( FT_Int32 ) l >> 31 ) + ( lo2 < l )		10585354	0		=			
ANR	10585460	Identifier	hi2		10585354	0					
ANR	10585461	AdditiveExpression	( m >> 16 ) + ( ( FT_Int32 ) l >> 31 ) + ( lo2 < l )		10585354	1		+			
ANR	10585462	ShiftExpression	m >> 16		10585354	0		>>			
ANR	10585463	Identifier	m		10585354	0					
ANR	10585464	PrimaryExpression	16		10585354	1					
ANR	10585465	AdditiveExpression	( ( FT_Int32 ) l >> 31 ) + ( lo2 < l )		10585354	1		+			
ANR	10585466	ShiftExpression	( FT_Int32 ) l >> 31		10585354	0		>>			
ANR	10585467	CastExpression	( FT_Int32 ) l		10585354	0					
ANR	10585468	CastTarget	FT_Int32		10585354	0					
ANR	10585469	Identifier	l		10585354	1					
ANR	10585470	PrimaryExpression	31		10585354	1					
ANR	10585471	RelationalExpression	lo2 < l		10585354	1		<			
ANR	10585472	Identifier	lo2		10585354	0					
ANR	10585473	Identifier	l		10585354	1					
ANR	10585474	ExpressionStatement	lo = lo1 + lo2	1433:4:47968:47982	10585354	10	True				
ANR	10585475	AssignmentExpression	lo = lo1 + lo2		10585354	0		=			
ANR	10585476	Identifier	lo		10585354	0					
ANR	10585477	AdditiveExpression	lo1 + lo2		10585354	1		+			
ANR	10585478	Identifier	lo1		10585354	0					
ANR	10585479	Identifier	lo2		10585354	1					
ANR	10585480	ExpressionStatement	hi = hi1 + hi2 + ( lo < lo1 )	1434:4:47988:48017	10585354	11	True				
ANR	10585481	AssignmentExpression	hi = hi1 + hi2 + ( lo < lo1 )		10585354	0		=			
ANR	10585482	Identifier	hi		10585354	0					
ANR	10585483	AdditiveExpression	hi1 + hi2 + ( lo < lo1 )		10585354	1		+			
ANR	10585484	Identifier	hi1		10585354	0					
ANR	10585485	AdditiveExpression	hi2 + ( lo < lo1 )		10585354	1		+			
ANR	10585486	Identifier	hi2		10585354	0					
ANR	10585487	RelationalExpression	lo < lo1		10585354	1		<			
ANR	10585488	Identifier	lo		10585354	0					
ANR	10585489	Identifier	lo1		10585354	1					
ANR	10585490	ExpressionStatement	s = hi >> 31	1437:4:48074:48088	10585354	12	True				
ANR	10585491	AssignmentExpression	s = hi >> 31		10585354	0		=			
ANR	10585492	Identifier	s		10585354	0					
ANR	10585493	ShiftExpression	hi >> 31		10585354	1		>>			
ANR	10585494	Identifier	hi		10585354	0					
ANR	10585495	PrimaryExpression	31		10585354	1					
ANR	10585496	ExpressionStatement	l = lo + ( FT_UInt32 ) s	1438:4:48094:48117	10585354	13	True				
ANR	10585497	AssignmentExpression	l = lo + ( FT_UInt32 ) s		10585354	0		=			
ANR	10585498	Identifier	l		10585354	0					
ANR	10585499	AdditiveExpression	lo + ( FT_UInt32 ) s		10585354	1		+			
ANR	10585500	Identifier	lo		10585354	0					
ANR	10585501	CastExpression	( FT_UInt32 ) s		10585354	1					
ANR	10585502	CastTarget	FT_UInt32		10585354	0					
ANR	10585503	Identifier	s		10585354	1					
ANR	10585504	ExpressionStatement	hi += s + ( l < lo )	1439:4:48123:48143	10585354	14	True				
ANR	10585505	AssignmentExpression	hi += s + ( l < lo )		10585354	0		+=			
ANR	10585506	Identifier	hi		10585354	0					
ANR	10585507	AdditiveExpression	s + ( l < lo )		10585354	1		+			
ANR	10585508	Identifier	s		10585354	0					
ANR	10585509	RelationalExpression	l < lo		10585354	1		<			
ANR	10585510	Identifier	l		10585354	0					
ANR	10585511	Identifier	lo		10585354	1					
ANR	10585512	ExpressionStatement	lo = l	1440:4:48149:48156	10585354	15	True				
ANR	10585513	AssignmentExpression	lo = l		10585354	0		=			
ANR	10585514	Identifier	lo		10585354	0					
ANR	10585515	Identifier	l		10585354	1					
ANR	10585516	ExpressionStatement	l = lo + 0x2000U	1442:4:48163:48181	10585354	16	True				
ANR	10585517	AssignmentExpression	l = lo + 0x2000U		10585354	0		=			
ANR	10585518	Identifier	l		10585354	0					
ANR	10585519	AdditiveExpression	lo + 0x2000U		10585354	1		+			
ANR	10585520	Identifier	lo		10585354	0					
ANR	10585521	PrimaryExpression	0x2000U		10585354	1					
ANR	10585522	ExpressionStatement	hi += ( l < lo )	1443:4:48187:48203	10585354	17	True				
ANR	10585523	AssignmentExpression	hi += ( l < lo )		10585354	0		+=			
ANR	10585524	Identifier	hi		10585354	0					
ANR	10585525	RelationalExpression	l < lo		10585354	1		<			
ANR	10585526	Identifier	l		10585354	0					
ANR	10585527	Identifier	lo		10585354	1					
ANR	10585528	ReturnStatement	return ( FT_Int32 ) ( ( ( FT_UInt32 ) hi << 18 ) | ( l >> 14 ) ) ;	1445:4:48210:48268	10585354	18	True				
ANR	10585529	CastExpression	( FT_Int32 ) ( ( ( FT_UInt32 ) hi << 18 ) | ( l >> 14 ) )		10585354	0					
ANR	10585530	CastTarget	FT_Int32		10585354	0					
ANR	10585531	InclusiveOrExpression	( ( FT_UInt32 ) hi << 18 ) | ( l >> 14 )		10585354	1		|			
ANR	10585532	ShiftExpression	( FT_UInt32 ) hi << 18		10585354	0		<<			
ANR	10585533	CastExpression	( FT_UInt32 ) hi		10585354	0					
ANR	10585534	CastTarget	FT_UInt32		10585354	0					
ANR	10585535	Identifier	hi		10585354	1					
ANR	10585536	PrimaryExpression	18		10585354	1					
ANR	10585537	ShiftExpression	l >> 14		10585354	1		>>			
ANR	10585538	Identifier	l		10585354	0					
ANR	10585539	PrimaryExpression	14		10585354	1					
ANR	10585540	ReturnType	static FT_Int32		10585354	1					
ANR	10585541	Identifier	TT_DotFix14		10585354	2					
ANR	10585542	ParameterList	"FT_Int32 ax , FT_Int32 ay , FT_Int bx , FT_Int by"		10585354	3					
ANR	10585543	Parameter	FT_Int32 ax	1409:15:47342:47353	10585354	0	True				
ANR	10585544	ParameterType	FT_Int32		10585354	0					
ANR	10585545	Identifier	ax		10585354	1					
ANR	10585546	Parameter	FT_Int32 ay	1410:15:47371:47382	10585354	1	True				
ANR	10585547	ParameterType	FT_Int32		10585354	0					
ANR	10585548	Identifier	ay		10585354	1					
ANR	10585549	Parameter	FT_Int bx	1411:15:47400:47411	10585354	2	True				
ANR	10585550	ParameterType	FT_Int		10585354	0					
ANR	10585551	Identifier	bx		10585354	1					
ANR	10585552	Parameter	FT_Int by	1412:15:47429:47440	10585354	3	True				
ANR	10585553	ParameterType	FT_Int		10585354	0					
ANR	10585554	Identifier	by		10585354	1					
ANR	10585555	CFGEntryNode	ENTRY		10585354		True				
ANR	10585556	CFGExitNode	EXIT		10585354		True				
ANR	10585557	Symbol	hi		10585354						
ANR	10585558	Symbol	lo		10585354						
ANR	10585559	Symbol	l		10585354						
ANR	10585560	Symbol	m		10585354						
ANR	10585561	Symbol	lo2		10585354						
ANR	10585562	Symbol	lo1		10585354						
ANR	10585563	Symbol	hi2		10585354						
ANR	10585564	Symbol	hi1		10585354						
ANR	10585565	Symbol	s		10585354						
ANR	10585566	Symbol	bx		10585354						
ANR	10585567	Symbol	ax		10585354						
ANR	10585568	Symbol	by		10585354						
ANR	10585569	Symbol	ay		10585354						
ANR	10585570	Function	Current_Ratio	1463:2:49240:49882							
ANR	10585571	FunctionDef	Current_Ratio (TT_ExecContext exc)		10585570	0					
ANR	10585572	CompoundStatement		1465:2:49296:49882	10585570	0					
ANR	10585573	IfStatement	if ( ! exc -> tt_metrics . ratio )		10585570	0					
ANR	10585574	Condition	! exc -> tt_metrics . ratio	1466:9:49307:49328	10585570	0	True				
ANR	10585575	UnaryOperationExpression	! exc -> tt_metrics . ratio		10585570	0					
ANR	10585576	UnaryOperator	!		10585570	0					
ANR	10585577	MemberAccess	exc -> tt_metrics . ratio		10585570	1					
ANR	10585578	PtrMemberAccess	exc -> tt_metrics		10585570	0					
ANR	10585579	Identifier	exc		10585570	0					
ANR	10585580	Identifier	tt_metrics		10585570	1					
ANR	10585581	Identifier	ratio		10585570	1					
ANR	10585582	CompoundStatement		3:4:39:39	10585570	1					
ANR	10585583	IfStatement	if ( exc -> GS . projVector . y == 0 )		10585570	0					
ANR	10585584	Condition	exc -> GS . projVector . y == 0	1468:11:49349:49373	10585570	0	True				
ANR	10585585	EqualityExpression	exc -> GS . projVector . y == 0		10585570	0		==			
ANR	10585586	MemberAccess	exc -> GS . projVector . y		10585570	0					
ANR	10585587	MemberAccess	exc -> GS . projVector		10585570	0					
ANR	10585588	PtrMemberAccess	exc -> GS		10585570	0					
ANR	10585589	Identifier	exc		10585570	0					
ANR	10585590	Identifier	GS		10585570	1					
ANR	10585591	Identifier	projVector		10585570	1					
ANR	10585592	Identifier	y		10585570	1					
ANR	10585593	PrimaryExpression	0		10585570	1					
ANR	10585594	ExpressionStatement	exc -> tt_metrics . ratio = exc -> tt_metrics . x_ratio	1469:8:49385:49432	10585570	1	True				
ANR	10585595	AssignmentExpression	exc -> tt_metrics . ratio = exc -> tt_metrics . x_ratio		10585570	0		=			
ANR	10585596	MemberAccess	exc -> tt_metrics . ratio		10585570	0					
ANR	10585597	PtrMemberAccess	exc -> tt_metrics		10585570	0					
ANR	10585598	Identifier	exc		10585570	0					
ANR	10585599	Identifier	tt_metrics		10585570	1					
ANR	10585600	Identifier	ratio		10585570	1					
ANR	10585601	MemberAccess	exc -> tt_metrics . x_ratio		10585570	1					
ANR	10585602	PtrMemberAccess	exc -> tt_metrics		10585570	0					
ANR	10585603	Identifier	exc		10585570	0					
ANR	10585604	Identifier	tt_metrics		10585570	1					
ANR	10585605	Identifier	x_ratio		10585570	1					
ANR	10585606	ElseStatement	else		10585570	0					
ANR	10585607	IfStatement	if ( exc -> GS . projVector . x == 0 )		10585570	0					
ANR	10585608	Condition	exc -> GS . projVector . x == 0	1471:16:49451:49475	10585570	0	True				
ANR	10585609	EqualityExpression	exc -> GS . projVector . x == 0		10585570	0		==			
ANR	10585610	MemberAccess	exc -> GS . projVector . x		10585570	0					
ANR	10585611	MemberAccess	exc -> GS . projVector		10585570	0					
ANR	10585612	PtrMemberAccess	exc -> GS		10585570	0					
ANR	10585613	Identifier	exc		10585570	0					
ANR	10585614	Identifier	GS		10585570	1					
ANR	10585615	Identifier	projVector		10585570	1					
ANR	10585616	Identifier	x		10585570	1					
ANR	10585617	PrimaryExpression	0		10585570	1					
ANR	10585618	ExpressionStatement	exc -> tt_metrics . ratio = exc -> tt_metrics . y_ratio	1472:8:49487:49534	10585570	1	True				
ANR	10585619	AssignmentExpression	exc -> tt_metrics . ratio = exc -> tt_metrics . y_ratio		10585570	0		=			
ANR	10585620	MemberAccess	exc -> tt_metrics . ratio		10585570	0					
ANR	10585621	PtrMemberAccess	exc -> tt_metrics		10585570	0					
ANR	10585622	Identifier	exc		10585570	0					
ANR	10585623	Identifier	tt_metrics		10585570	1					
ANR	10585624	Identifier	ratio		10585570	1					
ANR	10585625	MemberAccess	exc -> tt_metrics . y_ratio		10585570	1					
ANR	10585626	PtrMemberAccess	exc -> tt_metrics		10585570	0					
ANR	10585627	Identifier	exc		10585570	0					
ANR	10585628	Identifier	tt_metrics		10585570	1					
ANR	10585629	Identifier	y_ratio		10585570	1					
ANR	10585630	ElseStatement	else		10585570	0					
ANR	10585631	CompoundStatement		12:8:267:283	10585570	0					
ANR	10585632	IdentifierDeclStatement	"FT_F26Dot6 x , y ;"	1476:8:49564:49580	10585570	0	True				
ANR	10585633	IdentifierDecl	x		10585570	0					
ANR	10585634	IdentifierDeclType	FT_F26Dot6		10585570	0					
ANR	10585635	Identifier	x		10585570	1					
ANR	10585636	IdentifierDecl	y		10585570	1					
ANR	10585637	IdentifierDeclType	FT_F26Dot6		10585570	0					
ANR	10585638	Identifier	y		10585570	1					
ANR	10585639	ExpressionStatement	"x = TT_MulFix14 ( exc -> tt_metrics . x_ratio , exc -> GS . projVector . x )"	1479:8:49592:49681	10585570	1	True				
ANR	10585640	AssignmentExpression	"x = TT_MulFix14 ( exc -> tt_metrics . x_ratio , exc -> GS . projVector . x )"		10585570	0		=			
ANR	10585641	Identifier	x		10585570	0					
ANR	10585642	CallExpression	"TT_MulFix14 ( exc -> tt_metrics . x_ratio , exc -> GS . projVector . x )"		10585570	1					
ANR	10585643	Callee	TT_MulFix14		10585570	0					
ANR	10585644	Identifier	TT_MulFix14		10585570	0					
ANR	10585645	ArgumentList	exc -> tt_metrics . x_ratio		10585570	1					
ANR	10585646	Argument	exc -> tt_metrics . x_ratio		10585570	0					
ANR	10585647	MemberAccess	exc -> tt_metrics . x_ratio		10585570	0					
ANR	10585648	PtrMemberAccess	exc -> tt_metrics		10585570	0					
ANR	10585649	Identifier	exc		10585570	0					
ANR	10585650	Identifier	tt_metrics		10585570	1					
ANR	10585651	Identifier	x_ratio		10585570	1					
ANR	10585652	Argument	exc -> GS . projVector . x		10585570	1					
ANR	10585653	MemberAccess	exc -> GS . projVector . x		10585570	0					
ANR	10585654	MemberAccess	exc -> GS . projVector		10585570	0					
ANR	10585655	PtrMemberAccess	exc -> GS		10585570	0					
ANR	10585656	Identifier	exc		10585570	0					
ANR	10585657	Identifier	GS		10585570	1					
ANR	10585658	Identifier	projVector		10585570	1					
ANR	10585659	Identifier	x		10585570	1					
ANR	10585660	ExpressionStatement	"y = TT_MulFix14 ( exc -> tt_metrics . y_ratio , exc -> GS . projVector . y )"	1481:8:49691:49780	10585570	2	True				
ANR	10585661	AssignmentExpression	"y = TT_MulFix14 ( exc -> tt_metrics . y_ratio , exc -> GS . projVector . y )"		10585570	0		=			
ANR	10585662	Identifier	y		10585570	0					
ANR	10585663	CallExpression	"TT_MulFix14 ( exc -> tt_metrics . y_ratio , exc -> GS . projVector . y )"		10585570	1					
ANR	10585664	Callee	TT_MulFix14		10585570	0					
ANR	10585665	Identifier	TT_MulFix14		10585570	0					
ANR	10585666	ArgumentList	exc -> tt_metrics . y_ratio		10585570	1					
ANR	10585667	Argument	exc -> tt_metrics . y_ratio		10585570	0					
ANR	10585668	MemberAccess	exc -> tt_metrics . y_ratio		10585570	0					
ANR	10585669	PtrMemberAccess	exc -> tt_metrics		10585570	0					
ANR	10585670	Identifier	exc		10585570	0					
ANR	10585671	Identifier	tt_metrics		10585570	1					
ANR	10585672	Identifier	y_ratio		10585570	1					
ANR	10585673	Argument	exc -> GS . projVector . y		10585570	1					
ANR	10585674	MemberAccess	exc -> GS . projVector . y		10585570	0					
ANR	10585675	MemberAccess	exc -> GS . projVector		10585570	0					
ANR	10585676	PtrMemberAccess	exc -> GS		10585570	0					
ANR	10585677	Identifier	exc		10585570	0					
ANR	10585678	Identifier	GS		10585570	1					
ANR	10585679	Identifier	projVector		10585570	1					
ANR	10585680	Identifier	y		10585570	1					
ANR	10585681	ExpressionStatement	"exc -> tt_metrics . ratio = FT_Hypot ( x , y )"	1483:8:49790:49830	10585570	3	True				
ANR	10585682	AssignmentExpression	"exc -> tt_metrics . ratio = FT_Hypot ( x , y )"		10585570	0		=			
ANR	10585683	MemberAccess	exc -> tt_metrics . ratio		10585570	0					
ANR	10585684	PtrMemberAccess	exc -> tt_metrics		10585570	0					
ANR	10585685	Identifier	exc		10585570	0					
ANR	10585686	Identifier	tt_metrics		10585570	1					
ANR	10585687	Identifier	ratio		10585570	1					
ANR	10585688	CallExpression	"FT_Hypot ( x , y )"		10585570	1					
ANR	10585689	Callee	FT_Hypot		10585570	0					
ANR	10585690	Identifier	FT_Hypot		10585570	0					
ANR	10585691	ArgumentList	x		10585570	1					
ANR	10585692	Argument	x		10585570	0					
ANR	10585693	Identifier	x		10585570	0					
ANR	10585694	Argument	y		10585570	1					
ANR	10585695	Identifier	y		10585570	0					
ANR	10585696	ReturnStatement	return exc -> tt_metrics . ratio ;	1486:4:49850:49878	10585570	1	True				
ANR	10585697	MemberAccess	exc -> tt_metrics . ratio		10585570	0					
ANR	10585698	PtrMemberAccess	exc -> tt_metrics		10585570	0					
ANR	10585699	Identifier	exc		10585570	0					
ANR	10585700	Identifier	tt_metrics		10585570	1					
ANR	10585701	Identifier	ratio		10585570	1					
ANR	10585702	ReturnType	static FT_Long		10585570	1					
ANR	10585703	Identifier	Current_Ratio		10585570	2					
ANR	10585704	ParameterList	TT_ExecContext exc		10585570	3					
ANR	10585705	Parameter	TT_ExecContext exc	1464:17:49272:49290	10585570	0	True				
ANR	10585706	ParameterType	TT_ExecContext		10585570	0					
ANR	10585707	Identifier	exc		10585570	1					
ANR	10585708	CFGEntryNode	ENTRY		10585570		True				
ANR	10585709	CFGExitNode	EXIT		10585570		True				
ANR	10585710	Symbol	TT_MulFix14		10585570						
ANR	10585711	Symbol	* exc		10585570						
ANR	10585712	Symbol	exc -> tt_metrics . y_ratio		10585570						
ANR	10585713	Symbol	exc -> GS		10585570						
ANR	10585714	Symbol	exc -> tt_metrics . x_ratio		10585570						
ANR	10585715	Symbol	exc -> tt_metrics		10585570						
ANR	10585716	Symbol	exc -> tt_metrics . ratio		10585570						
ANR	10585717	Symbol	exc		10585570						
ANR	10585718	Symbol	exc -> GS . projVector		10585570						
ANR	10585719	Symbol	x		10585570						
ANR	10585720	Symbol	y		10585570						
ANR	10585721	Symbol	FT_Hypot		10585570						
ANR	10585722	Symbol	exc -> GS . projVector . x		10585570						
ANR	10585723	Symbol	exc -> GS . projVector . y		10585570						
ANR	10585724	Function	Current_Ppem	1491:2:49917:49992							
ANR	10585725	FunctionDef	Current_Ppem (TT_ExecContext exc)		10585724	0					
ANR	10585726	CompoundStatement		1492:2:49955:49992	10585724	0					
ANR	10585727	ReturnStatement	return exc -> tt_metrics . ppem ;	1493:4:49961:49988	10585724	0	True				
ANR	10585728	MemberAccess	exc -> tt_metrics . ppem		10585724	0					
ANR	10585729	PtrMemberAccess	exc -> tt_metrics		10585724	0					
ANR	10585730	Identifier	exc		10585724	0					
ANR	10585731	Identifier	tt_metrics		10585724	1					
ANR	10585732	Identifier	ppem		10585724	1					
ANR	10585733	Identifier	Current_Ppem		10585724	1					
ANR	10585734	ParameterList	TT_ExecContext exc		10585724	2					
ANR	10585735	Parameter	TT_ExecContext exc	1491:16:49931:49949	10585724	0	True				
ANR	10585736	ParameterType	TT_ExecContext		10585724	0					
ANR	10585737	Identifier	exc		10585724	1					
ANR	10585738	CFGEntryNode	ENTRY		10585724		True				
ANR	10585739	CFGExitNode	EXIT		10585724		True				
ANR	10585740	Symbol	exc		10585724						
ANR	10585741	Symbol	exc -> tt_metrics . ppem		10585724						
ANR	10585742	Symbol	* exc		10585724						
ANR	10585743	Symbol	exc -> tt_metrics		10585724						
ANR	10585744	Function	Current_Ppem_Stretched	1498:2:50027:50147							
ANR	10585745	FunctionDef	Current_Ppem_Stretched (TT_ExecContext exc)		10585744	0					
ANR	10585746	CompoundStatement		1499:2:50075:50147	10585744	0					
ANR	10585747	ReturnStatement	"return FT_MulFix ( exc -> tt_metrics . ppem , Current_Ratio ( exc ) ) ;"	1500:4:50081:50143	10585744	0	True				
ANR	10585748	CallExpression	"FT_MulFix ( exc -> tt_metrics . ppem , Current_Ratio ( exc ) )"		10585744	0					
ANR	10585749	Callee	FT_MulFix		10585744	0					
ANR	10585750	Identifier	FT_MulFix		10585744	0					
ANR	10585751	ArgumentList	exc -> tt_metrics . ppem		10585744	1					
ANR	10585752	Argument	exc -> tt_metrics . ppem		10585744	0					
ANR	10585753	MemberAccess	exc -> tt_metrics . ppem		10585744	0					
ANR	10585754	PtrMemberAccess	exc -> tt_metrics		10585744	0					
ANR	10585755	Identifier	exc		10585744	0					
ANR	10585756	Identifier	tt_metrics		10585744	1					
ANR	10585757	Identifier	ppem		10585744	1					
ANR	10585758	Argument	Current_Ratio ( exc )		10585744	1					
ANR	10585759	CallExpression	Current_Ratio ( exc )		10585744	0					
ANR	10585760	Callee	Current_Ratio		10585744	0					
ANR	10585761	Identifier	Current_Ratio		10585744	0					
ANR	10585762	ArgumentList	exc		10585744	1					
ANR	10585763	Argument	exc		10585744	0					
ANR	10585764	Identifier	exc		10585744	0					
ANR	10585765	Identifier	Current_Ppem_Stretched		10585744	1					
ANR	10585766	ParameterList	TT_ExecContext exc		10585744	2					
ANR	10585767	Parameter	TT_ExecContext exc	1498:26:50051:50069	10585744	0	True				
ANR	10585768	ParameterType	TT_ExecContext		10585744	0					
ANR	10585769	Identifier	exc		10585744	1					
ANR	10585770	CFGEntryNode	ENTRY		10585744		True				
ANR	10585771	CFGExitNode	EXIT		10585744		True				
ANR	10585772	Symbol	exc		10585744						
ANR	10585773	Symbol	exc -> tt_metrics . ppem		10585744						
ANR	10585774	Symbol	FT_MulFix		10585744						
ANR	10585775	Symbol	* exc		10585744						
ANR	10585776	Symbol	exc -> tt_metrics		10585744						
ANR	10585777	Symbol	Current_Ratio		10585744						
ANR	10585778	Function	Read_CVT	1512:2:50577:50674							
ANR	10585779	FunctionDef	"Read_CVT (TT_ExecContext exc , FT_ULong idx)"		10585778	0					
ANR	10585780	CompoundStatement		1514:2:50644:50674	10585778	0					
ANR	10585781	ReturnStatement	return exc -> cvt [ idx ] ;	1515:4:50650:50670	10585778	0	True				
ANR	10585782	ArrayIndexing	exc -> cvt [ idx ]		10585778	0					
ANR	10585783	PtrMemberAccess	exc -> cvt		10585778	0					
ANR	10585784	Identifier	exc		10585778	0					
ANR	10585785	Identifier	cvt		10585778	1					
ANR	10585786	Identifier	idx		10585778	1					
ANR	10585787	Identifier	Read_CVT		10585778	1					
ANR	10585788	ParameterList	"TT_ExecContext exc , FT_ULong idx"		10585778	2					
ANR	10585789	Parameter	TT_ExecContext exc	1512:12:50587:50605	10585778	0	True				
ANR	10585790	ParameterType	TT_ExecContext		10585778	0					
ANR	10585791	Identifier	exc		10585778	1					
ANR	10585792	Parameter	FT_ULong idx	1513:12:50620:50638	10585778	1	True				
ANR	10585793	ParameterType	FT_ULong		10585778	0					
ANR	10585794	Identifier	idx		10585778	1					
ANR	10585795	CFGEntryNode	ENTRY		10585778		True				
ANR	10585796	CFGExitNode	EXIT		10585778		True				
ANR	10585797	Symbol	* exc -> cvt		10585778						
ANR	10585798	Symbol	exc		10585778						
ANR	10585799	Symbol	* * exc		10585778						
ANR	10585800	Symbol	* exc		10585778						
ANR	10585801	Symbol	* idx		10585778						
ANR	10585802	Symbol	idx		10585778						
ANR	10585803	Symbol	exc -> cvt		10585778						
ANR	10585804	Function	Read_CVT_Stretched	1520:2:50712:50864							
ANR	10585805	FunctionDef	"Read_CVT_Stretched (TT_ExecContext exc , FT_ULong idx)"		10585804	0					
ANR	10585806	CompoundStatement		1522:2:50799:50864	10585804	0					
ANR	10585807	ReturnStatement	"return FT_MulFix ( exc -> cvt [ idx ] , Current_Ratio ( exc ) ) ;"	1523:4:50805:50860	10585804	0	True				
ANR	10585808	CallExpression	"FT_MulFix ( exc -> cvt [ idx ] , Current_Ratio ( exc ) )"		10585804	0					
ANR	10585809	Callee	FT_MulFix		10585804	0					
ANR	10585810	Identifier	FT_MulFix		10585804	0					
ANR	10585811	ArgumentList	exc -> cvt [ idx ]		10585804	1					
ANR	10585812	Argument	exc -> cvt [ idx ]		10585804	0					
ANR	10585813	ArrayIndexing	exc -> cvt [ idx ]		10585804	0					
ANR	10585814	PtrMemberAccess	exc -> cvt		10585804	0					
ANR	10585815	Identifier	exc		10585804	0					
ANR	10585816	Identifier	cvt		10585804	1					
ANR	10585817	Identifier	idx		10585804	1					
ANR	10585818	Argument	Current_Ratio ( exc )		10585804	1					
ANR	10585819	CallExpression	Current_Ratio ( exc )		10585804	0					
ANR	10585820	Callee	Current_Ratio		10585804	0					
ANR	10585821	Identifier	Current_Ratio		10585804	0					
ANR	10585822	ArgumentList	exc		10585804	1					
ANR	10585823	Argument	exc		10585804	0					
ANR	10585824	Identifier	exc		10585804	0					
ANR	10585825	Identifier	Read_CVT_Stretched		10585804	1					
ANR	10585826	ParameterList	"TT_ExecContext exc , FT_ULong idx"		10585804	2					
ANR	10585827	Parameter	TT_ExecContext exc	1520:22:50732:50750	10585804	0	True				
ANR	10585828	ParameterType	TT_ExecContext		10585804	0					
ANR	10585829	Identifier	exc		10585804	1					
ANR	10585830	Parameter	FT_ULong idx	1521:22:50775:50793	10585804	1	True				
ANR	10585831	ParameterType	FT_ULong		10585804	0					
ANR	10585832	Identifier	idx		10585804	1					
ANR	10585833	CFGEntryNode	ENTRY		10585804		True				
ANR	10585834	CFGExitNode	EXIT		10585804		True				
ANR	10585835	Symbol	* exc -> cvt		10585804						
ANR	10585836	Symbol	exc		10585804						
ANR	10585837	Symbol	FT_MulFix		10585804						
ANR	10585838	Symbol	* * exc		10585804						
ANR	10585839	Symbol	* exc		10585804						
ANR	10585840	Symbol	* idx		10585804						
ANR	10585841	Symbol	idx		10585804						
ANR	10585842	Symbol	Current_Ratio		10585804						
ANR	10585843	Symbol	exc -> cvt		10585804						
ANR	10585844	Function	Write_CVT	1528:2:50896:51032							
ANR	10585845	FunctionDef	"Write_CVT (TT_ExecContext exc , FT_ULong idx , FT_F26Dot6 value)"		10585844	0					
ANR	10585846	CompoundStatement		1531:2:51001:51032	10585844	0					
ANR	10585847	ExpressionStatement	exc -> cvt [ idx ] = value	1532:4:51007:51028	10585844	0	True				
ANR	10585848	AssignmentExpression	exc -> cvt [ idx ] = value		10585844	0		=			
ANR	10585849	ArrayIndexing	exc -> cvt [ idx ]		10585844	0					
ANR	10585850	PtrMemberAccess	exc -> cvt		10585844	0					
ANR	10585851	Identifier	exc		10585844	0					
ANR	10585852	Identifier	cvt		10585844	1					
ANR	10585853	Identifier	idx		10585844	1					
ANR	10585854	Identifier	value		10585844	1					
ANR	10585855	Identifier	Write_CVT		10585844	1					
ANR	10585856	ParameterList	"TT_ExecContext exc , FT_ULong idx , FT_F26Dot6 value"		10585844	2					
ANR	10585857	Parameter	TT_ExecContext exc	1528:13:50907:50925	10585844	0	True				
ANR	10585858	ParameterType	TT_ExecContext		10585844	0					
ANR	10585859	Identifier	exc		10585844	1					
ANR	10585860	Parameter	FT_ULong idx	1529:13:50941:50959	10585844	1	True				
ANR	10585861	ParameterType	FT_ULong		10585844	0					
ANR	10585862	Identifier	idx		10585844	1					
ANR	10585863	Parameter	FT_F26Dot6 value	1530:13:50975:50995	10585844	2	True				
ANR	10585864	ParameterType	FT_F26Dot6		10585844	0					
ANR	10585865	Identifier	value		10585844	1					
ANR	10585866	CFGEntryNode	ENTRY		10585844		True				
ANR	10585867	CFGExitNode	EXIT		10585844		True				
ANR	10585868	Symbol	* exc -> cvt		10585844						
ANR	10585869	Symbol	exc		10585844						
ANR	10585870	Symbol	* * exc		10585844						
ANR	10585871	Symbol	* exc		10585844						
ANR	10585872	Symbol	* idx		10585844						
ANR	10585873	Symbol	idx		10585844						
ANR	10585874	Symbol	value		10585844						
ANR	10585875	Symbol	exc -> cvt		10585844						
ANR	10585876	Function	Write_CVT_Stretched	1537:2:51064:51265							
ANR	10585877	FunctionDef	"Write_CVT_Stretched (TT_ExecContext exc , FT_ULong idx , FT_F26Dot6 value)"		10585876	0					
ANR	10585878	CompoundStatement		1540:2:51199:51265	10585876	0					
ANR	10585879	ExpressionStatement	"exc -> cvt [ idx ] = FT_DivFix ( value , Current_Ratio ( exc ) )"	1541:4:51205:51261	10585876	0	True				
ANR	10585880	AssignmentExpression	"exc -> cvt [ idx ] = FT_DivFix ( value , Current_Ratio ( exc ) )"		10585876	0		=			
ANR	10585881	ArrayIndexing	exc -> cvt [ idx ]		10585876	0					
ANR	10585882	PtrMemberAccess	exc -> cvt		10585876	0					
ANR	10585883	Identifier	exc		10585876	0					
ANR	10585884	Identifier	cvt		10585876	1					
ANR	10585885	Identifier	idx		10585876	1					
ANR	10585886	CallExpression	"FT_DivFix ( value , Current_Ratio ( exc ) )"		10585876	1					
ANR	10585887	Callee	FT_DivFix		10585876	0					
ANR	10585888	Identifier	FT_DivFix		10585876	0					
ANR	10585889	ArgumentList	value		10585876	1					
ANR	10585890	Argument	value		10585876	0					
ANR	10585891	Identifier	value		10585876	0					
ANR	10585892	Argument	Current_Ratio ( exc )		10585876	1					
ANR	10585893	CallExpression	Current_Ratio ( exc )		10585876	0					
ANR	10585894	Callee	Current_Ratio		10585876	0					
ANR	10585895	Identifier	Current_Ratio		10585876	0					
ANR	10585896	ArgumentList	exc		10585876	1					
ANR	10585897	Argument	exc		10585876	0					
ANR	10585898	Identifier	exc		10585876	0					
ANR	10585899	Identifier	Write_CVT_Stretched		10585876	1					
ANR	10585900	ParameterList	"TT_ExecContext exc , FT_ULong idx , FT_F26Dot6 value"		10585876	2					
ANR	10585901	Parameter	TT_ExecContext exc	1537:23:51085:51103	10585876	0	True				
ANR	10585902	ParameterType	TT_ExecContext		10585876	0					
ANR	10585903	Identifier	exc		10585876	1					
ANR	10585904	Parameter	FT_ULong idx	1538:23:51129:51147	10585876	1	True				
ANR	10585905	ParameterType	FT_ULong		10585876	0					
ANR	10585906	Identifier	idx		10585876	1					
ANR	10585907	Parameter	FT_F26Dot6 value	1539:23:51173:51193	10585876	2	True				
ANR	10585908	ParameterType	FT_F26Dot6		10585876	0					
ANR	10585909	Identifier	value		10585876	1					
ANR	10585910	CFGEntryNode	ENTRY		10585876		True				
ANR	10585911	CFGExitNode	EXIT		10585876		True				
ANR	10585912	Symbol	* exc -> cvt		10585876						
ANR	10585913	Symbol	exc		10585876						
ANR	10585914	Symbol	* * exc		10585876						
ANR	10585915	Symbol	* exc		10585876						
ANR	10585916	Symbol	FT_DivFix		10585876						
ANR	10585917	Symbol	* idx		10585876						
ANR	10585918	Symbol	idx		10585876						
ANR	10585919	Symbol	value		10585876						
ANR	10585920	Symbol	Current_Ratio		10585876						
ANR	10585921	Symbol	exc -> cvt		10585876						
ANR	10585922	Function	Move_CVT	1546:2:51297:51431							
ANR	10585923	FunctionDef	"Move_CVT (TT_ExecContext exc , FT_ULong idx , FT_F26Dot6 value)"		10585922	0					
ANR	10585924	CompoundStatement		1549:2:51399:51431	10585922	0					
ANR	10585925	ExpressionStatement	exc -> cvt [ idx ] += value	1550:4:51405:51427	10585922	0	True				
ANR	10585926	AssignmentExpression	exc -> cvt [ idx ] += value		10585922	0		+=			
ANR	10585927	ArrayIndexing	exc -> cvt [ idx ]		10585922	0					
ANR	10585928	PtrMemberAccess	exc -> cvt		10585922	0					
ANR	10585929	Identifier	exc		10585922	0					
ANR	10585930	Identifier	cvt		10585922	1					
ANR	10585931	Identifier	idx		10585922	1					
ANR	10585932	Identifier	value		10585922	1					
ANR	10585933	Identifier	Move_CVT		10585922	1					
ANR	10585934	ParameterList	"TT_ExecContext exc , FT_ULong idx , FT_F26Dot6 value"		10585922	2					
ANR	10585935	Parameter	TT_ExecContext exc	1546:12:51307:51325	10585922	0	True				
ANR	10585936	ParameterType	TT_ExecContext		10585922	0					
ANR	10585937	Identifier	exc		10585922	1					
ANR	10585938	Parameter	FT_ULong idx	1547:12:51340:51358	10585922	1	True				
ANR	10585939	ParameterType	FT_ULong		10585922	0					
ANR	10585940	Identifier	idx		10585922	1					
ANR	10585941	Parameter	FT_F26Dot6 value	1548:12:51373:51393	10585922	2	True				
ANR	10585942	ParameterType	FT_F26Dot6		10585922	0					
ANR	10585943	Identifier	value		10585922	1					
ANR	10585944	CFGEntryNode	ENTRY		10585922		True				
ANR	10585945	CFGExitNode	EXIT		10585922		True				
ANR	10585946	Symbol	* exc -> cvt		10585922						
ANR	10585947	Symbol	exc		10585922						
ANR	10585948	Symbol	* * exc		10585922						
ANR	10585949	Symbol	* exc		10585922						
ANR	10585950	Symbol	* idx		10585922						
ANR	10585951	Symbol	idx		10585922						
ANR	10585952	Symbol	value		10585922						
ANR	10585953	Symbol	exc -> cvt		10585922						
ANR	10585954	Function	Move_CVT_Stretched	1555:2:51463:51662							
ANR	10585955	FunctionDef	"Move_CVT_Stretched (TT_ExecContext exc , FT_ULong idx , FT_F26Dot6 value)"		10585954	0					
ANR	10585956	CompoundStatement		1558:2:51595:51662	10585954	0					
ANR	10585957	ExpressionStatement	"exc -> cvt [ idx ] += FT_DivFix ( value , Current_Ratio ( exc ) )"	1559:4:51601:51658	10585954	0	True				
ANR	10585958	AssignmentExpression	"exc -> cvt [ idx ] += FT_DivFix ( value , Current_Ratio ( exc ) )"		10585954	0		+=			
ANR	10585959	ArrayIndexing	exc -> cvt [ idx ]		10585954	0					
ANR	10585960	PtrMemberAccess	exc -> cvt		10585954	0					
ANR	10585961	Identifier	exc		10585954	0					
ANR	10585962	Identifier	cvt		10585954	1					
ANR	10585963	Identifier	idx		10585954	1					
ANR	10585964	CallExpression	"FT_DivFix ( value , Current_Ratio ( exc ) )"		10585954	1					
ANR	10585965	Callee	FT_DivFix		10585954	0					
ANR	10585966	Identifier	FT_DivFix		10585954	0					
ANR	10585967	ArgumentList	value		10585954	1					
ANR	10585968	Argument	value		10585954	0					
ANR	10585969	Identifier	value		10585954	0					
ANR	10585970	Argument	Current_Ratio ( exc )		10585954	1					
ANR	10585971	CallExpression	Current_Ratio ( exc )		10585954	0					
ANR	10585972	Callee	Current_Ratio		10585954	0					
ANR	10585973	Identifier	Current_Ratio		10585954	0					
ANR	10585974	ArgumentList	exc		10585954	1					
ANR	10585975	Argument	exc		10585954	0					
ANR	10585976	Identifier	exc		10585954	0					
ANR	10585977	Identifier	Move_CVT_Stretched		10585954	1					
ANR	10585978	ParameterList	"TT_ExecContext exc , FT_ULong idx , FT_F26Dot6 value"		10585954	2					
ANR	10585979	Parameter	TT_ExecContext exc	1555:22:51483:51501	10585954	0	True				
ANR	10585980	ParameterType	TT_ExecContext		10585954	0					
ANR	10585981	Identifier	exc		10585954	1					
ANR	10585982	Parameter	FT_ULong idx	1556:22:51526:51544	10585954	1	True				
ANR	10585983	ParameterType	FT_ULong		10585954	0					
ANR	10585984	Identifier	idx		10585954	1					
ANR	10585985	Parameter	FT_F26Dot6 value	1557:22:51569:51589	10585954	2	True				
ANR	10585986	ParameterType	FT_F26Dot6		10585954	0					
ANR	10585987	Identifier	value		10585954	1					
ANR	10585988	CFGEntryNode	ENTRY		10585954		True				
ANR	10585989	CFGExitNode	EXIT		10585954		True				
ANR	10585990	Symbol	* exc -> cvt		10585954						
ANR	10585991	Symbol	exc		10585954						
ANR	10585992	Symbol	* * exc		10585954						
ANR	10585993	Symbol	* exc		10585954						
ANR	10585994	Symbol	FT_DivFix		10585954						
ANR	10585995	Symbol	* idx		10585954						
ANR	10585996	Symbol	idx		10585954						
ANR	10585997	Symbol	value		10585954						
ANR	10585998	Symbol	Current_Ratio		10585954						
ANR	10585999	Symbol	exc -> cvt		10585954						
ANR	10586000	Function	GetShortIns	1578:2:52838:53094							
ANR	10586001	FunctionDef	GetShortIns (TT_ExecContext exc)		10586000	0					
ANR	10586002	CompoundStatement		1580:2:52893:53094	10586000	0					
ANR	10586003	ExpressionStatement	exc -> IP += 2	1582:4:52965:52977	10586000	0	True				
ANR	10586004	AssignmentExpression	exc -> IP += 2		10586000	0		+=			
ANR	10586005	PtrMemberAccess	exc -> IP		10586000	0					
ANR	10586006	Identifier	exc		10586000	0					
ANR	10586007	Identifier	IP		10586000	1					
ANR	10586008	PrimaryExpression	2		10586000	1					
ANR	10586009	ReturnStatement	return ( FT_Short ) ( ( exc -> code [ exc -> IP - 2 ] << 8 ) + exc -> code [ exc -> IP - 1 ] ) ;	1583:4:52983:53090	10586000	1	True				
ANR	10586010	CastExpression	( FT_Short ) ( ( exc -> code [ exc -> IP - 2 ] << 8 ) + exc -> code [ exc -> IP - 1 ] )		10586000	0					
ANR	10586011	CastTarget	FT_Short		10586000	0					
ANR	10586012	AdditiveExpression	( exc -> code [ exc -> IP - 2 ] << 8 ) + exc -> code [ exc -> IP - 1 ]		10586000	1		+			
ANR	10586013	ShiftExpression	exc -> code [ exc -> IP - 2 ] << 8		10586000	0		<<			
ANR	10586014	ArrayIndexing	exc -> code [ exc -> IP - 2 ]		10586000	0					
ANR	10586015	PtrMemberAccess	exc -> code		10586000	0					
ANR	10586016	Identifier	exc		10586000	0					
ANR	10586017	Identifier	code		10586000	1					
ANR	10586018	AdditiveExpression	exc -> IP - 2		10586000	1		-			
ANR	10586019	PtrMemberAccess	exc -> IP		10586000	0					
ANR	10586020	Identifier	exc		10586000	0					
ANR	10586021	Identifier	IP		10586000	1					
ANR	10586022	PrimaryExpression	2		10586000	1					
ANR	10586023	PrimaryExpression	8		10586000	1					
ANR	10586024	ArrayIndexing	exc -> code [ exc -> IP - 1 ]		10586000	1					
ANR	10586025	PtrMemberAccess	exc -> code		10586000	0					
ANR	10586026	Identifier	exc		10586000	0					
ANR	10586027	Identifier	code		10586000	1					
ANR	10586028	AdditiveExpression	exc -> IP - 1		10586000	1		-			
ANR	10586029	PtrMemberAccess	exc -> IP		10586000	0					
ANR	10586030	Identifier	exc		10586000	0					
ANR	10586031	Identifier	IP		10586000	1					
ANR	10586032	PrimaryExpression	1		10586000	1					
ANR	10586033	ReturnType	static FT_Short		10586000	1					
ANR	10586034	Identifier	GetShortIns		10586000	2					
ANR	10586035	ParameterList	TT_ExecContext exc		10586000	3					
ANR	10586036	Parameter	TT_ExecContext exc	1579:15:52869:52887	10586000	0	True				
ANR	10586037	ParameterType	TT_ExecContext		10586000	0					
ANR	10586038	Identifier	exc		10586000	1					
ANR	10586039	CFGEntryNode	ENTRY		10586000		True				
ANR	10586040	CFGExitNode	EXIT		10586000		True				
ANR	10586041	Symbol	exc		10586000						
ANR	10586042	Symbol	exc -> IP		10586000						
ANR	10586043	Symbol	* * exc		10586000						
ANR	10586044	Symbol	* exc		10586000						
ANR	10586045	Symbol	exc -> code		10586000						
ANR	10586046	Symbol	* exc -> code		10586000						
ANR	10586047	Symbol	* exc -> IP		10586000						
ANR	10586048	Function	Ins_Goto_CodeRange	1604:2:54348:55297							
ANR	10586049	FunctionDef	"Ins_Goto_CodeRange (TT_ExecContext exc , FT_Int aRange , FT_Long aIP)"		10586048	0					
ANR	10586050	CompoundStatement		1608:2:54498:55297	10586048	0					
ANR	10586051	IdentifierDeclStatement	TT_CodeRange * range ;	1609:4:54504:54524	10586048	0	True				
ANR	10586052	IdentifierDecl	* range		10586048	0					
ANR	10586053	IdentifierDeclType	TT_CodeRange *		10586048	0					
ANR	10586054	Identifier	range		10586048	1					
ANR	10586055	IfStatement	if ( aRange < 1 || aRange > 3 )		10586048	1					
ANR	10586056	Condition	aRange < 1 || aRange > 3	1612:9:54537:54560	10586048	0	True				
ANR	10586057	OrExpression	aRange < 1 || aRange > 3		10586048	0		||			
ANR	10586058	RelationalExpression	aRange < 1		10586048	0		<			
ANR	10586059	Identifier	aRange		10586048	0					
ANR	10586060	PrimaryExpression	1		10586048	1					
ANR	10586061	RelationalExpression	aRange > 3		10586048	1		>			
ANR	10586062	Identifier	aRange		10586048	0					
ANR	10586063	PrimaryExpression	3		10586048	1					
ANR	10586064	CompoundStatement		6:4:69:69	10586048	1					
ANR	10586065	ExpressionStatement	exc -> error = FT_THROW ( Bad_Argument )	1614:6:54576:54613	10586048	0	True				
ANR	10586066	AssignmentExpression	exc -> error = FT_THROW ( Bad_Argument )		10586048	0		=			
ANR	10586067	PtrMemberAccess	exc -> error		10586048	0					
ANR	10586068	Identifier	exc		10586048	0					
ANR	10586069	Identifier	error		10586048	1					
ANR	10586070	CallExpression	FT_THROW ( Bad_Argument )		10586048	1					
ANR	10586071	Callee	FT_THROW		10586048	0					
ANR	10586072	Identifier	FT_THROW		10586048	0					
ANR	10586073	ArgumentList	Bad_Argument		10586048	1					
ANR	10586074	Argument	Bad_Argument		10586048	0					
ANR	10586075	Identifier	Bad_Argument		10586048	0					
ANR	10586076	ReturnStatement	return FAILURE ;	1615:6:54621:54635	10586048	1	True				
ANR	10586077	Identifier	FAILURE		10586048	0					
ANR	10586078	ExpressionStatement	range = & exc -> codeRangeTable [ aRange - 1 ]	1618:4:54648:54688	10586048	2	True				
ANR	10586079	AssignmentExpression	range = & exc -> codeRangeTable [ aRange - 1 ]		10586048	0		=			
ANR	10586080	Identifier	range		10586048	0					
ANR	10586081	UnaryOperationExpression	& exc -> codeRangeTable [ aRange - 1 ]		10586048	1					
ANR	10586082	UnaryOperator	&		10586048	0					
ANR	10586083	ArrayIndexing	exc -> codeRangeTable [ aRange - 1 ]		10586048	1					
ANR	10586084	PtrMemberAccess	exc -> codeRangeTable		10586048	0					
ANR	10586085	Identifier	exc		10586048	0					
ANR	10586086	Identifier	codeRangeTable		10586048	1					
ANR	10586087	AdditiveExpression	aRange - 1		10586048	1		-			
ANR	10586088	Identifier	aRange		10586048	0					
ANR	10586089	PrimaryExpression	1		10586048	1					
ANR	10586090	IfStatement	if ( ! range -> base )		10586048	3					
ANR	10586091	Condition	! range -> base	1620:9:54700:54711	10586048	0	True				
ANR	10586092	UnaryOperationExpression	! range -> base		10586048	0					
ANR	10586093	UnaryOperator	!		10586048	0					
ANR	10586094	PtrMemberAccess	range -> base		10586048	1					
ANR	10586095	Identifier	range		10586048	0					
ANR	10586096	Identifier	base		10586048	1					
ANR	10586097	CompoundStatement		14:4:248:248	10586048	1					
ANR	10586098	ExpressionStatement	exc -> error = FT_THROW ( Invalid_CodeRange )	1622:6:54755:54797	10586048	0	True				
ANR	10586099	AssignmentExpression	exc -> error = FT_THROW ( Invalid_CodeRange )		10586048	0		=			
ANR	10586100	PtrMemberAccess	exc -> error		10586048	0					
ANR	10586101	Identifier	exc		10586048	0					
ANR	10586102	Identifier	error		10586048	1					
ANR	10586103	CallExpression	FT_THROW ( Invalid_CodeRange )		10586048	1					
ANR	10586104	Callee	FT_THROW		10586048	0					
ANR	10586105	Identifier	FT_THROW		10586048	0					
ANR	10586106	ArgumentList	Invalid_CodeRange		10586048	1					
ANR	10586107	Argument	Invalid_CodeRange		10586048	0					
ANR	10586108	Identifier	Invalid_CodeRange		10586048	0					
ANR	10586109	ReturnStatement	return FAILURE ;	1623:6:54805:54819	10586048	1	True				
ANR	10586110	Identifier	FAILURE		10586048	0					
ANR	10586111	IfStatement	if ( aIP > range -> size )		10586048	4					
ANR	10586112	Condition	aIP > range -> size	1630:9:55054:55070	10586048	0	True				
ANR	10586113	RelationalExpression	aIP > range -> size		10586048	0		>			
ANR	10586114	Identifier	aIP		10586048	0					
ANR	10586115	PtrMemberAccess	range -> size		10586048	1					
ANR	10586116	Identifier	range		10586048	0					
ANR	10586117	Identifier	size		10586048	1					
ANR	10586118	CompoundStatement		24:4:579:579	10586048	1					
ANR	10586119	ExpressionStatement	exc -> error = FT_THROW ( Code_Overflow )	1632:6:55086:55124	10586048	0	True				
ANR	10586120	AssignmentExpression	exc -> error = FT_THROW ( Code_Overflow )		10586048	0		=			
ANR	10586121	PtrMemberAccess	exc -> error		10586048	0					
ANR	10586122	Identifier	exc		10586048	0					
ANR	10586123	Identifier	error		10586048	1					
ANR	10586124	CallExpression	FT_THROW ( Code_Overflow )		10586048	1					
ANR	10586125	Callee	FT_THROW		10586048	0					
ANR	10586126	Identifier	FT_THROW		10586048	0					
ANR	10586127	ArgumentList	Code_Overflow		10586048	1					
ANR	10586128	Argument	Code_Overflow		10586048	0					
ANR	10586129	Identifier	Code_Overflow		10586048	0					
ANR	10586130	ReturnStatement	return FAILURE ;	1633:6:55132:55146	10586048	1	True				
ANR	10586131	Identifier	FAILURE		10586048	0					
ANR	10586132	ExpressionStatement	exc -> code = range -> base	1636:4:55159:55186	10586048	5	True				
ANR	10586133	AssignmentExpression	exc -> code = range -> base		10586048	0		=			
ANR	10586134	PtrMemberAccess	exc -> code		10586048	0					
ANR	10586135	Identifier	exc		10586048	0					
ANR	10586136	Identifier	code		10586048	1					
ANR	10586137	PtrMemberAccess	range -> base		10586048	1					
ANR	10586138	Identifier	range		10586048	0					
ANR	10586139	Identifier	base		10586048	1					
ANR	10586140	ExpressionStatement	exc -> codeSize = range -> size	1637:4:55192:55219	10586048	6	True				
ANR	10586141	AssignmentExpression	exc -> codeSize = range -> size		10586048	0		=			
ANR	10586142	PtrMemberAccess	exc -> codeSize		10586048	0					
ANR	10586143	Identifier	exc		10586048	0					
ANR	10586144	Identifier	codeSize		10586048	1					
ANR	10586145	PtrMemberAccess	range -> size		10586048	1					
ANR	10586146	Identifier	range		10586048	0					
ANR	10586147	Identifier	size		10586048	1					
ANR	10586148	ExpressionStatement	exc -> IP = aIP	1638:4:55225:55244	10586048	7	True				
ANR	10586149	AssignmentExpression	exc -> IP = aIP		10586048	0		=			
ANR	10586150	PtrMemberAccess	exc -> IP		10586048	0					
ANR	10586151	Identifier	exc		10586048	0					
ANR	10586152	Identifier	IP		10586048	1					
ANR	10586153	Identifier	aIP		10586048	1					
ANR	10586154	ExpressionStatement	exc -> curRange = aRange	1639:4:55250:55272	10586048	8	True				
ANR	10586155	AssignmentExpression	exc -> curRange = aRange		10586048	0		=			
ANR	10586156	PtrMemberAccess	exc -> curRange		10586048	0					
ANR	10586157	Identifier	exc		10586048	0					
ANR	10586158	Identifier	curRange		10586048	1					
ANR	10586159	Identifier	aRange		10586048	1					
ANR	10586160	ReturnStatement	return SUCCESS ;	1641:4:55279:55293	10586048	9	True				
ANR	10586161	Identifier	SUCCESS		10586048	0					
ANR	10586162	ReturnType	static FT_Bool		10586048	1					
ANR	10586163	Identifier	Ins_Goto_CodeRange		10586048	2					
ANR	10586164	ParameterList	"TT_ExecContext exc , FT_Int aRange , FT_Long aIP"		10586048	3					
ANR	10586165	Parameter	TT_ExecContext exc	1605:22:54385:54403	10586048	0	True				
ANR	10586166	ParameterType	TT_ExecContext		10586048	0					
ANR	10586167	Identifier	exc		10586048	1					
ANR	10586168	Parameter	FT_Int aRange	1606:22:54428:54449	10586048	1	True				
ANR	10586169	ParameterType	FT_Int		10586048	0					
ANR	10586170	Identifier	aRange		10586048	1					
ANR	10586171	Parameter	FT_Long aIP	1607:22:54474:54492	10586048	2	True				
ANR	10586172	ParameterType	FT_Long		10586048	0					
ANR	10586173	Identifier	aIP		10586048	1					
ANR	10586174	CFGEntryNode	ENTRY		10586048		True				
ANR	10586175	CFGExitNode	EXIT		10586048		True				
ANR	10586176	Symbol	Invalid_CodeRange		10586048						
ANR	10586177	Symbol	exc -> IP		10586048						
ANR	10586178	Symbol	SUCCESS		10586048						
ANR	10586179	Symbol	* exc		10586048						
ANR	10586180	Symbol	exc -> curRange		10586048						
ANR	10586181	Symbol	Code_Overflow		10586048						
ANR	10586182	Symbol	range -> base		10586048						
ANR	10586183	Symbol	aIP		10586048						
ANR	10586184	Symbol	range		10586048						
ANR	10586185	Symbol	aRange		10586048						
ANR	10586186	Symbol	FAILURE		10586048						
ANR	10586187	Symbol	FT_THROW		10586048						
ANR	10586188	Symbol	exc		10586048						
ANR	10586189	Symbol	range -> size		10586048						
ANR	10586190	Symbol	* range		10586048						
ANR	10586191	Symbol	Bad_Argument		10586048						
ANR	10586192	Symbol	exc -> code		10586048						
ANR	10586193	Symbol	exc -> codeSize		10586048						
ANR	10586194	Symbol	exc -> codeRangeTable		10586048						
ANR	10586195	Symbol	exc -> error		10586048						
ANR	10586196	Function	Direct_Move	1666:2:56941:59239							
ANR	10586197	FunctionDef	"Direct_Move (TT_ExecContext exc , TT_GlyphZone zone , FT_UShort point , FT_F26Dot6 distance)"		10586196	0					
ANR	10586198	CompoundStatement		1671:2:57108:59239	10586196	0					
ANR	10586199	IdentifierDeclStatement	FT_F26Dot6 v ;	1672:4:57114:57127	10586196	0	True				
ANR	10586200	IdentifierDecl	v		10586196	0					
ANR	10586201	IdentifierDeclType	FT_F26Dot6		10586196	0					
ANR	10586202	Identifier	v		10586196	1					
ANR	10586203	ExpressionStatement	v = exc -> GS . freeVector . x	1675:4:57135:57159	10586196	1	True				
ANR	10586204	AssignmentExpression	v = exc -> GS . freeVector . x		10586196	0		=			
ANR	10586205	Identifier	v		10586196	0					
ANR	10586206	MemberAccess	exc -> GS . freeVector . x		10586196	1					
ANR	10586207	MemberAccess	exc -> GS . freeVector		10586196	0					
ANR	10586208	PtrMemberAccess	exc -> GS		10586196	0					
ANR	10586209	Identifier	exc		10586196	0					
ANR	10586210	Identifier	GS		10586196	1					
ANR	10586211	Identifier	freeVector		10586196	1					
ANR	10586212	Identifier	x		10586196	1					
ANR	10586213	IfStatement	if ( v != 0 )		10586196	2					
ANR	10586214	Condition	v != 0	1677:9:57171:57176	10586196	0	True				
ANR	10586215	EqualityExpression	v != 0		10586196	0		!=			
ANR	10586216	Identifier	v		10586196	0					
ANR	10586217	PrimaryExpression	0		10586196	1					
ANR	10586218	CompoundStatement		8:4:75:75	10586196	1					
ANR	10586219	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY && ( ! exc -> ignore_x_mode || ( exc -> sph_tweak_flags & SPH_TWEAK_ALLOW_X_DMOVE ) ) )		10586196	0					
ANR	10586220	Condition	SUBPIXEL_HINTING_INFINALITY && ( ! exc -> ignore_x_mode || ( exc -> sph_tweak_flags & SPH_TWEAK_ALLOW_X_DMOVE ) )	1680:11:57243:57432	10586196	0	True				
ANR	10586221	AndExpression	SUBPIXEL_HINTING_INFINALITY && ( ! exc -> ignore_x_mode || ( exc -> sph_tweak_flags & SPH_TWEAK_ALLOW_X_DMOVE ) )		10586196	0		&&			
ANR	10586222	Identifier	SUBPIXEL_HINTING_INFINALITY		10586196	0					
ANR	10586223	OrExpression	! exc -> ignore_x_mode || ( exc -> sph_tweak_flags & SPH_TWEAK_ALLOW_X_DMOVE )		10586196	1		||			
ANR	10586224	UnaryOperationExpression	! exc -> ignore_x_mode		10586196	0					
ANR	10586225	UnaryOperator	!		10586196	0					
ANR	10586226	PtrMemberAccess	exc -> ignore_x_mode		10586196	1					
ANR	10586227	Identifier	exc		10586196	0					
ANR	10586228	Identifier	ignore_x_mode		10586196	1					
ANR	10586229	BitAndExpression	exc -> sph_tweak_flags & SPH_TWEAK_ALLOW_X_DMOVE		10586196	1		&			
ANR	10586230	PtrMemberAccess	exc -> sph_tweak_flags		10586196	0					
ANR	10586231	Identifier	exc		10586196	0					
ANR	10586232	Identifier	sph_tweak_flags		10586196	1					
ANR	10586233	Identifier	SPH_TWEAK_ALLOW_X_DMOVE		10586196	1					
ANR	10586234	ExpressionStatement	"zone -> cur [ point ] . x = ADD_LONG ( zone -> cur [ point ] . x , FT_MulDiv ( distance , v , exc -> F_dot_P ) )"	1683:8:57444:57674	10586196	1	True				
ANR	10586235	AssignmentExpression	"zone -> cur [ point ] . x = ADD_LONG ( zone -> cur [ point ] . x , FT_MulDiv ( distance , v , exc -> F_dot_P ) )"		10586196	0		=			
ANR	10586236	MemberAccess	zone -> cur [ point ] . x		10586196	0					
ANR	10586237	ArrayIndexing	zone -> cur [ point ]		10586196	0					
ANR	10586238	PtrMemberAccess	zone -> cur		10586196	0					
ANR	10586239	Identifier	zone		10586196	0					
ANR	10586240	Identifier	cur		10586196	1					
ANR	10586241	Identifier	point		10586196	1					
ANR	10586242	Identifier	x		10586196	1					
ANR	10586243	CallExpression	"ADD_LONG ( zone -> cur [ point ] . x , FT_MulDiv ( distance , v , exc -> F_dot_P ) )"		10586196	1					
ANR	10586244	Callee	ADD_LONG		10586196	0					
ANR	10586245	Identifier	ADD_LONG		10586196	0					
ANR	10586246	ArgumentList	zone -> cur [ point ] . x		10586196	1					
ANR	10586247	Argument	zone -> cur [ point ] . x		10586196	0					
ANR	10586248	MemberAccess	zone -> cur [ point ] . x		10586196	0					
ANR	10586249	ArrayIndexing	zone -> cur [ point ]		10586196	0					
ANR	10586250	PtrMemberAccess	zone -> cur		10586196	0					
ANR	10586251	Identifier	zone		10586196	0					
ANR	10586252	Identifier	cur		10586196	1					
ANR	10586253	Identifier	point		10586196	1					
ANR	10586254	Identifier	x		10586196	1					
ANR	10586255	Argument	"FT_MulDiv ( distance , v , exc -> F_dot_P )"		10586196	1					
ANR	10586256	CallExpression	"FT_MulDiv ( distance , v , exc -> F_dot_P )"		10586196	0					
ANR	10586257	Callee	FT_MulDiv		10586196	0					
ANR	10586258	Identifier	FT_MulDiv		10586196	0					
ANR	10586259	ArgumentList	distance		10586196	1					
ANR	10586260	Argument	distance		10586196	0					
ANR	10586261	Identifier	distance		10586196	0					
ANR	10586262	Argument	v		10586196	1					
ANR	10586263	Identifier	v		10586196	0					
ANR	10586264	Argument	exc -> F_dot_P		10586196	2					
ANR	10586265	PtrMemberAccess	exc -> F_dot_P		10586196	0					
ANR	10586266	Identifier	exc		10586196	0					
ANR	10586267	Identifier	F_dot_P		10586196	1					
ANR	10586268	ElseStatement	else		10586196	0					
ANR	10586269	IfStatement	if ( SUBPIXEL_HINTING_MINIMAL && ! exc -> backward_compatibility )		10586196	0					
ANR	10586270	Condition	SUBPIXEL_HINTING_MINIMAL && ! exc -> backward_compatibility	1694:11:58007:58062	10586196	0	True				
ANR	10586271	AndExpression	SUBPIXEL_HINTING_MINIMAL && ! exc -> backward_compatibility		10586196	0		&&			
ANR	10586272	Identifier	SUBPIXEL_HINTING_MINIMAL		10586196	0					
ANR	10586273	UnaryOperationExpression	! exc -> backward_compatibility		10586196	1					
ANR	10586274	UnaryOperator	!		10586196	0					
ANR	10586275	PtrMemberAccess	exc -> backward_compatibility		10586196	1					
ANR	10586276	Identifier	exc		10586196	0					
ANR	10586277	Identifier	backward_compatibility		10586196	1					
ANR	10586278	ExpressionStatement	"zone -> cur [ point ] . x = ADD_LONG ( zone -> cur [ point ] . x , FT_MulDiv ( distance , v , exc -> F_dot_P ) )"	1695:8:58074:58304	10586196	1	True				
ANR	10586279	AssignmentExpression	"zone -> cur [ point ] . x = ADD_LONG ( zone -> cur [ point ] . x , FT_MulDiv ( distance , v , exc -> F_dot_P ) )"		10586196	0		=			
ANR	10586280	MemberAccess	zone -> cur [ point ] . x		10586196	0					
ANR	10586281	ArrayIndexing	zone -> cur [ point ]		10586196	0					
ANR	10586282	PtrMemberAccess	zone -> cur		10586196	0					
ANR	10586283	Identifier	zone		10586196	0					
ANR	10586284	Identifier	cur		10586196	1					
ANR	10586285	Identifier	point		10586196	1					
ANR	10586286	Identifier	x		10586196	1					
ANR	10586287	CallExpression	"ADD_LONG ( zone -> cur [ point ] . x , FT_MulDiv ( distance , v , exc -> F_dot_P ) )"		10586196	1					
ANR	10586288	Callee	ADD_LONG		10586196	0					
ANR	10586289	Identifier	ADD_LONG		10586196	0					
ANR	10586290	ArgumentList	zone -> cur [ point ] . x		10586196	1					
ANR	10586291	Argument	zone -> cur [ point ] . x		10586196	0					
ANR	10586292	MemberAccess	zone -> cur [ point ] . x		10586196	0					
ANR	10586293	ArrayIndexing	zone -> cur [ point ]		10586196	0					
ANR	10586294	PtrMemberAccess	zone -> cur		10586196	0					
ANR	10586295	Identifier	zone		10586196	0					
ANR	10586296	Identifier	cur		10586196	1					
ANR	10586297	Identifier	point		10586196	1					
ANR	10586298	Identifier	x		10586196	1					
ANR	10586299	Argument	"FT_MulDiv ( distance , v , exc -> F_dot_P )"		10586196	1					
ANR	10586300	CallExpression	"FT_MulDiv ( distance , v , exc -> F_dot_P )"		10586196	0					
ANR	10586301	Callee	FT_MulDiv		10586196	0					
ANR	10586302	Identifier	FT_MulDiv		10586196	0					
ANR	10586303	ArgumentList	distance		10586196	1					
ANR	10586304	Argument	distance		10586196	0					
ANR	10586305	Identifier	distance		10586196	0					
ANR	10586306	Argument	v		10586196	1					
ANR	10586307	Identifier	v		10586196	0					
ANR	10586308	Argument	exc -> F_dot_P		10586196	2					
ANR	10586309	PtrMemberAccess	exc -> F_dot_P		10586196	0					
ANR	10586310	Identifier	exc		10586196	0					
ANR	10586311	Identifier	F_dot_P		10586196	1					
ANR	10586312	ElseStatement	else		10586196	0					
ANR	10586313	IfStatement	if ( NO_SUBPIXEL_HINTING )		10586196	0					
ANR	10586314	Condition	NO_SUBPIXEL_HINTING	1702:11:58336:58354	10586196	0	True				
ANR	10586315	Identifier	NO_SUBPIXEL_HINTING		10586196	0					
ANR	10586316	ExpressionStatement	"zone -> cur [ point ] . x = ADD_LONG ( zone -> cur [ point ] . x , FT_MulDiv ( distance , v , exc -> F_dot_P ) )"	1703:8:58366:58596	10586196	1	True				
ANR	10586317	AssignmentExpression	"zone -> cur [ point ] . x = ADD_LONG ( zone -> cur [ point ] . x , FT_MulDiv ( distance , v , exc -> F_dot_P ) )"		10586196	0		=			
ANR	10586318	MemberAccess	zone -> cur [ point ] . x		10586196	0					
ANR	10586319	ArrayIndexing	zone -> cur [ point ]		10586196	0					
ANR	10586320	PtrMemberAccess	zone -> cur		10586196	0					
ANR	10586321	Identifier	zone		10586196	0					
ANR	10586322	Identifier	cur		10586196	1					
ANR	10586323	Identifier	point		10586196	1					
ANR	10586324	Identifier	x		10586196	1					
ANR	10586325	CallExpression	"ADD_LONG ( zone -> cur [ point ] . x , FT_MulDiv ( distance , v , exc -> F_dot_P ) )"		10586196	1					
ANR	10586326	Callee	ADD_LONG		10586196	0					
ANR	10586327	Identifier	ADD_LONG		10586196	0					
ANR	10586328	ArgumentList	zone -> cur [ point ] . x		10586196	1					
ANR	10586329	Argument	zone -> cur [ point ] . x		10586196	0					
ANR	10586330	MemberAccess	zone -> cur [ point ] . x		10586196	0					
ANR	10586331	ArrayIndexing	zone -> cur [ point ]		10586196	0					
ANR	10586332	PtrMemberAccess	zone -> cur		10586196	0					
ANR	10586333	Identifier	zone		10586196	0					
ANR	10586334	Identifier	cur		10586196	1					
ANR	10586335	Identifier	point		10586196	1					
ANR	10586336	Identifier	x		10586196	1					
ANR	10586337	Argument	"FT_MulDiv ( distance , v , exc -> F_dot_P )"		10586196	1					
ANR	10586338	CallExpression	"FT_MulDiv ( distance , v , exc -> F_dot_P )"		10586196	0					
ANR	10586339	Callee	FT_MulDiv		10586196	0					
ANR	10586340	Identifier	FT_MulDiv		10586196	0					
ANR	10586341	ArgumentList	distance		10586196	1					
ANR	10586342	Argument	distance		10586196	0					
ANR	10586343	Identifier	distance		10586196	0					
ANR	10586344	Argument	v		10586196	1					
ANR	10586345	Identifier	v		10586196	0					
ANR	10586346	Argument	exc -> F_dot_P		10586196	2					
ANR	10586347	PtrMemberAccess	exc -> F_dot_P		10586196	0					
ANR	10586348	Identifier	exc		10586196	0					
ANR	10586349	Identifier	F_dot_P		10586196	1					
ANR	10586350	ExpressionStatement	zone -> tags [ point ] |= FT_CURVE_TAG_TOUCH_X	1708:6:58605:58646	10586196	1	True				
ANR	10586351	AssignmentExpression	zone -> tags [ point ] |= FT_CURVE_TAG_TOUCH_X		10586196	0		|=			
ANR	10586352	ArrayIndexing	zone -> tags [ point ]		10586196	0					
ANR	10586353	PtrMemberAccess	zone -> tags		10586196	0					
ANR	10586354	Identifier	zone		10586196	0					
ANR	10586355	Identifier	tags		10586196	1					
ANR	10586356	Identifier	point		10586196	1					
ANR	10586357	Identifier	FT_CURVE_TAG_TOUCH_X		10586196	1					
ANR	10586358	ExpressionStatement	v = exc -> GS . freeVector . y	1711:4:58659:58683	10586196	3	True				
ANR	10586359	AssignmentExpression	v = exc -> GS . freeVector . y		10586196	0		=			
ANR	10586360	Identifier	v		10586196	0					
ANR	10586361	MemberAccess	exc -> GS . freeVector . y		10586196	1					
ANR	10586362	MemberAccess	exc -> GS . freeVector		10586196	0					
ANR	10586363	PtrMemberAccess	exc -> GS		10586196	0					
ANR	10586364	Identifier	exc		10586196	0					
ANR	10586365	Identifier	GS		10586196	1					
ANR	10586366	Identifier	freeVector		10586196	1					
ANR	10586367	Identifier	y		10586196	1					
ANR	10586368	IfStatement	if ( v != 0 )		10586196	4					
ANR	10586369	Condition	v != 0	1713:9:58695:58700	10586196	0	True				
ANR	10586370	EqualityExpression	v != 0		10586196	0		!=			
ANR	10586371	Identifier	v		10586196	0					
ANR	10586372	PrimaryExpression	0		10586196	1					
ANR	10586373	CompoundStatement		44:4:1599:1599	10586196	1					
ANR	10586374	IfStatement	if ( ! ( SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility && exc -> iupx_called && exc -> iupy_called ) )		10586196	0					
ANR	10586375	Condition	! ( SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility && exc -> iupx_called && exc -> iupy_called )	1716:11:58764:58930	10586196	0	True				
ANR	10586376	UnaryOperationExpression	! ( SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility && exc -> iupx_called && exc -> iupy_called )		10586196	0					
ANR	10586377	UnaryOperator	!		10586196	0					
ANR	10586378	AndExpression	SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility && exc -> iupx_called && exc -> iupy_called		10586196	1		&&			
ANR	10586379	Identifier	SUBPIXEL_HINTING_MINIMAL		10586196	0					
ANR	10586380	AndExpression	exc -> backward_compatibility && exc -> iupx_called && exc -> iupy_called		10586196	1		&&			
ANR	10586381	PtrMemberAccess	exc -> backward_compatibility		10586196	0					
ANR	10586382	Identifier	exc		10586196	0					
ANR	10586383	Identifier	backward_compatibility		10586196	1					
ANR	10586384	AndExpression	exc -> iupx_called && exc -> iupy_called		10586196	1		&&			
ANR	10586385	PtrMemberAccess	exc -> iupx_called		10586196	0					
ANR	10586386	Identifier	exc		10586196	0					
ANR	10586387	Identifier	iupx_called		10586196	1					
ANR	10586388	PtrMemberAccess	exc -> iupy_called		10586196	1					
ANR	10586389	Identifier	exc		10586196	0					
ANR	10586390	Identifier	iupy_called		10586196	1					
ANR	10586391	ExpressionStatement	"zone -> cur [ point ] . y = ADD_LONG ( zone -> cur [ point ] . y , FT_MulDiv ( distance , v , exc -> F_dot_P ) )"	1721:8:58949:59179	10586196	1	True				
ANR	10586392	AssignmentExpression	"zone -> cur [ point ] . y = ADD_LONG ( zone -> cur [ point ] . y , FT_MulDiv ( distance , v , exc -> F_dot_P ) )"		10586196	0		=			
ANR	10586393	MemberAccess	zone -> cur [ point ] . y		10586196	0					
ANR	10586394	ArrayIndexing	zone -> cur [ point ]		10586196	0					
ANR	10586395	PtrMemberAccess	zone -> cur		10586196	0					
ANR	10586396	Identifier	zone		10586196	0					
ANR	10586397	Identifier	cur		10586196	1					
ANR	10586398	Identifier	point		10586196	1					
ANR	10586399	Identifier	y		10586196	1					
ANR	10586400	CallExpression	"ADD_LONG ( zone -> cur [ point ] . y , FT_MulDiv ( distance , v , exc -> F_dot_P ) )"		10586196	1					
ANR	10586401	Callee	ADD_LONG		10586196	0					
ANR	10586402	Identifier	ADD_LONG		10586196	0					
ANR	10586403	ArgumentList	zone -> cur [ point ] . y		10586196	1					
ANR	10586404	Argument	zone -> cur [ point ] . y		10586196	0					
ANR	10586405	MemberAccess	zone -> cur [ point ] . y		10586196	0					
ANR	10586406	ArrayIndexing	zone -> cur [ point ]		10586196	0					
ANR	10586407	PtrMemberAccess	zone -> cur		10586196	0					
ANR	10586408	Identifier	zone		10586196	0					
ANR	10586409	Identifier	cur		10586196	1					
ANR	10586410	Identifier	point		10586196	1					
ANR	10586411	Identifier	y		10586196	1					
ANR	10586412	Argument	"FT_MulDiv ( distance , v , exc -> F_dot_P )"		10586196	1					
ANR	10586413	CallExpression	"FT_MulDiv ( distance , v , exc -> F_dot_P )"		10586196	0					
ANR	10586414	Callee	FT_MulDiv		10586196	0					
ANR	10586415	Identifier	FT_MulDiv		10586196	0					
ANR	10586416	ArgumentList	distance		10586196	1					
ANR	10586417	Argument	distance		10586196	0					
ANR	10586418	Identifier	distance		10586196	0					
ANR	10586419	Argument	v		10586196	1					
ANR	10586420	Identifier	v		10586196	0					
ANR	10586421	Argument	exc -> F_dot_P		10586196	2					
ANR	10586422	PtrMemberAccess	exc -> F_dot_P		10586196	0					
ANR	10586423	Identifier	exc		10586196	0					
ANR	10586424	Identifier	F_dot_P		10586196	1					
ANR	10586425	ExpressionStatement	zone -> tags [ point ] |= FT_CURVE_TAG_TOUCH_Y	1726:6:59188:59229	10586196	1	True				
ANR	10586426	AssignmentExpression	zone -> tags [ point ] |= FT_CURVE_TAG_TOUCH_Y		10586196	0		|=			
ANR	10586427	ArrayIndexing	zone -> tags [ point ]		10586196	0					
ANR	10586428	PtrMemberAccess	zone -> tags		10586196	0					
ANR	10586429	Identifier	zone		10586196	0					
ANR	10586430	Identifier	tags		10586196	1					
ANR	10586431	Identifier	point		10586196	1					
ANR	10586432	Identifier	FT_CURVE_TAG_TOUCH_Y		10586196	1					
ANR	10586433	ReturnType	static void		10586196	1					
ANR	10586434	Identifier	Direct_Move		10586196	2					
ANR	10586435	ParameterList	"TT_ExecContext exc , TT_GlyphZone zone , FT_UShort point , FT_F26Dot6 distance"		10586196	3					
ANR	10586436	Parameter	TT_ExecContext exc	1667:15:56968:56986	10586196	0	True				
ANR	10586437	ParameterType	TT_ExecContext		10586196	0					
ANR	10586438	Identifier	exc		10586196	1					
ANR	10586439	Parameter	TT_GlyphZone zone	1668:15:57004:57023	10586196	1	True				
ANR	10586440	ParameterType	TT_GlyphZone		10586196	0					
ANR	10586441	Identifier	zone		10586196	1					
ANR	10586442	Parameter	FT_UShort point	1669:15:57041:57061	10586196	2	True				
ANR	10586443	ParameterType	FT_UShort		10586196	0					
ANR	10586444	Identifier	point		10586196	1					
ANR	10586445	Parameter	FT_F26Dot6 distance	1670:15:57079:57102	10586196	3	True				
ANR	10586446	ParameterType	FT_F26Dot6		10586196	0					
ANR	10586447	Identifier	distance		10586196	1					
ANR	10586448	CFGEntryNode	ENTRY		10586196		True				
ANR	10586449	CFGExitNode	EXIT		10586196		True				
ANR	10586450	Symbol	SUBPIXEL_HINTING_MINIMAL		10586196						
ANR	10586451	Symbol	exc -> GS . freeVector . x		10586196						
ANR	10586452	Symbol	exc -> GS . freeVector . y		10586196						
ANR	10586453	Symbol	distance		10586196						
ANR	10586454	Symbol	* exc		10586196						
ANR	10586455	Symbol	* zone		10586196						
ANR	10586456	Symbol	ADD_LONG		10586196						
ANR	10586457	Symbol	FT_CURVE_TAG_TOUCH_X		10586196						
ANR	10586458	Symbol	FT_CURVE_TAG_TOUCH_Y		10586196						
ANR	10586459	Symbol	point		10586196						
ANR	10586460	Symbol	FT_MulDiv		10586196						
ANR	10586461	Symbol	SUBPIXEL_HINTING_INFINALITY		10586196						
ANR	10586462	Symbol	exc		10586196						
ANR	10586463	Symbol	NO_SUBPIXEL_HINTING		10586196						
ANR	10586464	Symbol	zone		10586196						
ANR	10586465	Symbol	exc -> sph_tweak_flags		10586196						
ANR	10586466	Symbol	zone -> cur		10586196						
ANR	10586467	Symbol	* zone -> cur		10586196						
ANR	10586468	Symbol	exc -> ignore_x_mode		10586196						
ANR	10586469	Symbol	exc -> F_dot_P		10586196						
ANR	10586470	Symbol	* zone -> tags		10586196						
ANR	10586471	Symbol	* point		10586196						
ANR	10586472	Symbol	zone -> cur [ point ] . x		10586196						
ANR	10586473	Symbol	SPH_TWEAK_ALLOW_X_DMOVE		10586196						
ANR	10586474	Symbol	exc -> GS		10586196						
ANR	10586475	Symbol	exc -> backward_compatibility		10586196						
ANR	10586476	Symbol	zone -> cur [ point ] . y		10586196						
ANR	10586477	Symbol	zone -> tags		10586196						
ANR	10586478	Symbol	v		10586196						
ANR	10586479	Symbol	* * zone		10586196						
ANR	10586480	Symbol	exc -> GS . freeVector		10586196						
ANR	10586481	Symbol	exc -> iupy_called		10586196						
ANR	10586482	Symbol	exc -> iupx_called		10586196						
ANR	10586483	Function	Direct_Move_Orig	1748:2:60571:61346							
ANR	10586484	FunctionDef	"Direct_Move_Orig (TT_ExecContext exc , TT_GlyphZone zone , FT_UShort point , FT_F26Dot6 distance)"		10586483	0					
ANR	10586485	CompoundStatement		1753:2:60758:61346	10586483	0					
ANR	10586486	IdentifierDeclStatement	FT_F26Dot6 v ;	1754:4:60764:60777	10586483	0	True				
ANR	10586487	IdentifierDecl	v		10586483	0					
ANR	10586488	IdentifierDeclType	FT_F26Dot6		10586483	0					
ANR	10586489	Identifier	v		10586483	1					
ANR	10586490	ExpressionStatement	v = exc -> GS . freeVector . x	1757:4:60785:60809	10586483	1	True				
ANR	10586491	AssignmentExpression	v = exc -> GS . freeVector . x		10586483	0		=			
ANR	10586492	Identifier	v		10586483	0					
ANR	10586493	MemberAccess	exc -> GS . freeVector . x		10586483	1					
ANR	10586494	MemberAccess	exc -> GS . freeVector		10586483	0					
ANR	10586495	PtrMemberAccess	exc -> GS		10586483	0					
ANR	10586496	Identifier	exc		10586483	0					
ANR	10586497	Identifier	GS		10586483	1					
ANR	10586498	Identifier	freeVector		10586483	1					
ANR	10586499	Identifier	x		10586483	1					
ANR	10586500	IfStatement	if ( v != 0 )		10586483	2					
ANR	10586501	Condition	v != 0	1759:9:60821:60826	10586483	0	True				
ANR	10586502	EqualityExpression	v != 0		10586483	0		!=			
ANR	10586503	Identifier	v		10586483	0					
ANR	10586504	PrimaryExpression	0		10586483	1					
ANR	10586505	ExpressionStatement	"zone -> org [ point ] . x = ADD_LONG ( zone -> org [ point ] . x , FT_MulDiv ( distance , v , exc -> F_dot_P ) )"	1760:6:60836:61060	10586483	1	True				
ANR	10586506	AssignmentExpression	"zone -> org [ point ] . x = ADD_LONG ( zone -> org [ point ] . x , FT_MulDiv ( distance , v , exc -> F_dot_P ) )"		10586483	0		=			
ANR	10586507	MemberAccess	zone -> org [ point ] . x		10586483	0					
ANR	10586508	ArrayIndexing	zone -> org [ point ]		10586483	0					
ANR	10586509	PtrMemberAccess	zone -> org		10586483	0					
ANR	10586510	Identifier	zone		10586483	0					
ANR	10586511	Identifier	org		10586483	1					
ANR	10586512	Identifier	point		10586483	1					
ANR	10586513	Identifier	x		10586483	1					
ANR	10586514	CallExpression	"ADD_LONG ( zone -> org [ point ] . x , FT_MulDiv ( distance , v , exc -> F_dot_P ) )"		10586483	1					
ANR	10586515	Callee	ADD_LONG		10586483	0					
ANR	10586516	Identifier	ADD_LONG		10586483	0					
ANR	10586517	ArgumentList	zone -> org [ point ] . x		10586483	1					
ANR	10586518	Argument	zone -> org [ point ] . x		10586483	0					
ANR	10586519	MemberAccess	zone -> org [ point ] . x		10586483	0					
ANR	10586520	ArrayIndexing	zone -> org [ point ]		10586483	0					
ANR	10586521	PtrMemberAccess	zone -> org		10586483	0					
ANR	10586522	Identifier	zone		10586483	0					
ANR	10586523	Identifier	org		10586483	1					
ANR	10586524	Identifier	point		10586483	1					
ANR	10586525	Identifier	x		10586483	1					
ANR	10586526	Argument	"FT_MulDiv ( distance , v , exc -> F_dot_P )"		10586483	1					
ANR	10586527	CallExpression	"FT_MulDiv ( distance , v , exc -> F_dot_P )"		10586483	0					
ANR	10586528	Callee	FT_MulDiv		10586483	0					
ANR	10586529	Identifier	FT_MulDiv		10586483	0					
ANR	10586530	ArgumentList	distance		10586483	1					
ANR	10586531	Argument	distance		10586483	0					
ANR	10586532	Identifier	distance		10586483	0					
ANR	10586533	Argument	v		10586483	1					
ANR	10586534	Identifier	v		10586483	0					
ANR	10586535	Argument	exc -> F_dot_P		10586483	2					
ANR	10586536	PtrMemberAccess	exc -> F_dot_P		10586483	0					
ANR	10586537	Identifier	exc		10586483	0					
ANR	10586538	Identifier	F_dot_P		10586483	1					
ANR	10586539	ExpressionStatement	v = exc -> GS . freeVector . y	1765:4:61067:61091	10586483	3	True				
ANR	10586540	AssignmentExpression	v = exc -> GS . freeVector . y		10586483	0		=			
ANR	10586541	Identifier	v		10586483	0					
ANR	10586542	MemberAccess	exc -> GS . freeVector . y		10586483	1					
ANR	10586543	MemberAccess	exc -> GS . freeVector		10586483	0					
ANR	10586544	PtrMemberAccess	exc -> GS		10586483	0					
ANR	10586545	Identifier	exc		10586483	0					
ANR	10586546	Identifier	GS		10586483	1					
ANR	10586547	Identifier	freeVector		10586483	1					
ANR	10586548	Identifier	y		10586483	1					
ANR	10586549	IfStatement	if ( v != 0 )		10586483	4					
ANR	10586550	Condition	v != 0	1767:9:61103:61108	10586483	0	True				
ANR	10586551	EqualityExpression	v != 0		10586483	0		!=			
ANR	10586552	Identifier	v		10586483	0					
ANR	10586553	PrimaryExpression	0		10586483	1					
ANR	10586554	ExpressionStatement	"zone -> org [ point ] . y = ADD_LONG ( zone -> org [ point ] . y , FT_MulDiv ( distance , v , exc -> F_dot_P ) )"	1768:6:61118:61342	10586483	1	True				
ANR	10586555	AssignmentExpression	"zone -> org [ point ] . y = ADD_LONG ( zone -> org [ point ] . y , FT_MulDiv ( distance , v , exc -> F_dot_P ) )"		10586483	0		=			
ANR	10586556	MemberAccess	zone -> org [ point ] . y		10586483	0					
ANR	10586557	ArrayIndexing	zone -> org [ point ]		10586483	0					
ANR	10586558	PtrMemberAccess	zone -> org		10586483	0					
ANR	10586559	Identifier	zone		10586483	0					
ANR	10586560	Identifier	org		10586483	1					
ANR	10586561	Identifier	point		10586483	1					
ANR	10586562	Identifier	y		10586483	1					
ANR	10586563	CallExpression	"ADD_LONG ( zone -> org [ point ] . y , FT_MulDiv ( distance , v , exc -> F_dot_P ) )"		10586483	1					
ANR	10586564	Callee	ADD_LONG		10586483	0					
ANR	10586565	Identifier	ADD_LONG		10586483	0					
ANR	10586566	ArgumentList	zone -> org [ point ] . y		10586483	1					
ANR	10586567	Argument	zone -> org [ point ] . y		10586483	0					
ANR	10586568	MemberAccess	zone -> org [ point ] . y		10586483	0					
ANR	10586569	ArrayIndexing	zone -> org [ point ]		10586483	0					
ANR	10586570	PtrMemberAccess	zone -> org		10586483	0					
ANR	10586571	Identifier	zone		10586483	0					
ANR	10586572	Identifier	org		10586483	1					
ANR	10586573	Identifier	point		10586483	1					
ANR	10586574	Identifier	y		10586483	1					
ANR	10586575	Argument	"FT_MulDiv ( distance , v , exc -> F_dot_P )"		10586483	1					
ANR	10586576	CallExpression	"FT_MulDiv ( distance , v , exc -> F_dot_P )"		10586483	0					
ANR	10586577	Callee	FT_MulDiv		10586483	0					
ANR	10586578	Identifier	FT_MulDiv		10586483	0					
ANR	10586579	ArgumentList	distance		10586483	1					
ANR	10586580	Argument	distance		10586483	0					
ANR	10586581	Identifier	distance		10586483	0					
ANR	10586582	Argument	v		10586483	1					
ANR	10586583	Identifier	v		10586483	0					
ANR	10586584	Argument	exc -> F_dot_P		10586483	2					
ANR	10586585	PtrMemberAccess	exc -> F_dot_P		10586483	0					
ANR	10586586	Identifier	exc		10586483	0					
ANR	10586587	Identifier	F_dot_P		10586483	1					
ANR	10586588	ReturnType	static void		10586483	1					
ANR	10586589	Identifier	Direct_Move_Orig		10586483	2					
ANR	10586590	ParameterList	"TT_ExecContext exc , TT_GlyphZone zone , FT_UShort point , FT_F26Dot6 distance"		10586483	3					
ANR	10586591	Parameter	TT_ExecContext exc	1749:20:60603:60621	10586483	0	True				
ANR	10586592	ParameterType	TT_ExecContext		10586483	0					
ANR	10586593	Identifier	exc		10586483	1					
ANR	10586594	Parameter	TT_GlyphZone zone	1750:20:60644:60663	10586483	1	True				
ANR	10586595	ParameterType	TT_GlyphZone		10586483	0					
ANR	10586596	Identifier	zone		10586483	1					
ANR	10586597	Parameter	FT_UShort point	1751:20:60686:60706	10586483	2	True				
ANR	10586598	ParameterType	FT_UShort		10586483	0					
ANR	10586599	Identifier	point		10586483	1					
ANR	10586600	Parameter	FT_F26Dot6 distance	1752:20:60729:60752	10586483	3	True				
ANR	10586601	ParameterType	FT_F26Dot6		10586483	0					
ANR	10586602	Identifier	distance		10586483	1					
ANR	10586603	CFGEntryNode	ENTRY		10586483		True				
ANR	10586604	CFGExitNode	EXIT		10586483		True				
ANR	10586605	Symbol	* zone -> org		10586483						
ANR	10586606	Symbol	exc -> GS . freeVector . x		10586483						
ANR	10586607	Symbol	exc -> GS . freeVector . y		10586483						
ANR	10586608	Symbol	distance		10586483						
ANR	10586609	Symbol	* exc		10586483						
ANR	10586610	Symbol	* zone		10586483						
ANR	10586611	Symbol	* point		10586483						
ANR	10586612	Symbol	ADD_LONG		10586483						
ANR	10586613	Symbol	exc -> GS		10586483						
ANR	10586614	Symbol	point		10586483						
ANR	10586615	Symbol	FT_MulDiv		10586483						
ANR	10586616	Symbol	exc		10586483						
ANR	10586617	Symbol	zone		10586483						
ANR	10586618	Symbol	v		10586483						
ANR	10586619	Symbol	zone -> org		10586483						
ANR	10586620	Symbol	zone -> org [ point ] . y		10586483						
ANR	10586621	Symbol	* * zone		10586483						
ANR	10586622	Symbol	zone -> org [ point ] . x		10586483						
ANR	10586623	Symbol	exc -> F_dot_P		10586483						
ANR	10586624	Symbol	exc -> GS . freeVector		10586483						
ANR	10586625	Function	Direct_Move_X	1786:2:62056:62820							
ANR	10586626	FunctionDef	"Direct_Move_X (TT_ExecContext exc , TT_GlyphZone zone , FT_UShort point , FT_F26Dot6 distance)"		10586625	0					
ANR	10586627	CompoundStatement		1791:2:62231:62820	10586625	0					
ANR	10586628	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY && ! exc -> ignore_x_mode )		10586625	0					
ANR	10586629	Condition	SUBPIXEL_HINTING_INFINALITY && ! exc -> ignore_x_mode	1793:9:62288:62337	10586625	0	True				
ANR	10586630	AndExpression	SUBPIXEL_HINTING_INFINALITY && ! exc -> ignore_x_mode		10586625	0		&&			
ANR	10586631	Identifier	SUBPIXEL_HINTING_INFINALITY		10586625	0					
ANR	10586632	UnaryOperationExpression	! exc -> ignore_x_mode		10586625	1					
ANR	10586633	UnaryOperator	!		10586625	0					
ANR	10586634	PtrMemberAccess	exc -> ignore_x_mode		10586625	1					
ANR	10586635	Identifier	exc		10586625	0					
ANR	10586636	Identifier	ignore_x_mode		10586625	1					
ANR	10586637	ExpressionStatement	"zone -> cur [ point ] . x = ADD_LONG ( zone -> cur [ point ] . x , distance )"	1794:6:62347:62408	10586625	1	True				
ANR	10586638	AssignmentExpression	"zone -> cur [ point ] . x = ADD_LONG ( zone -> cur [ point ] . x , distance )"		10586625	0		=			
ANR	10586639	MemberAccess	zone -> cur [ point ] . x		10586625	0					
ANR	10586640	ArrayIndexing	zone -> cur [ point ]		10586625	0					
ANR	10586641	PtrMemberAccess	zone -> cur		10586625	0					
ANR	10586642	Identifier	zone		10586625	0					
ANR	10586643	Identifier	cur		10586625	1					
ANR	10586644	Identifier	point		10586625	1					
ANR	10586645	Identifier	x		10586625	1					
ANR	10586646	CallExpression	"ADD_LONG ( zone -> cur [ point ] . x , distance )"		10586625	1					
ANR	10586647	Callee	ADD_LONG		10586625	0					
ANR	10586648	Identifier	ADD_LONG		10586625	0					
ANR	10586649	ArgumentList	zone -> cur [ point ] . x		10586625	1					
ANR	10586650	Argument	zone -> cur [ point ] . x		10586625	0					
ANR	10586651	MemberAccess	zone -> cur [ point ] . x		10586625	0					
ANR	10586652	ArrayIndexing	zone -> cur [ point ]		10586625	0					
ANR	10586653	PtrMemberAccess	zone -> cur		10586625	0					
ANR	10586654	Identifier	zone		10586625	0					
ANR	10586655	Identifier	cur		10586625	1					
ANR	10586656	Identifier	point		10586625	1					
ANR	10586657	Identifier	x		10586625	1					
ANR	10586658	Argument	distance		10586625	1					
ANR	10586659	Identifier	distance		10586625	0					
ANR	10586660	ElseStatement	else		10586625	0					
ANR	10586661	IfStatement	if ( SUBPIXEL_HINTING_MINIMAL && ! exc -> backward_compatibility )		10586625	0					
ANR	10586662	Condition	SUBPIXEL_HINTING_MINIMAL && ! exc -> backward_compatibility	1799:9:62524:62579	10586625	0	True				
ANR	10586663	AndExpression	SUBPIXEL_HINTING_MINIMAL && ! exc -> backward_compatibility		10586625	0		&&			
ANR	10586664	Identifier	SUBPIXEL_HINTING_MINIMAL		10586625	0					
ANR	10586665	UnaryOperationExpression	! exc -> backward_compatibility		10586625	1					
ANR	10586666	UnaryOperator	!		10586625	0					
ANR	10586667	PtrMemberAccess	exc -> backward_compatibility		10586625	1					
ANR	10586668	Identifier	exc		10586625	0					
ANR	10586669	Identifier	backward_compatibility		10586625	1					
ANR	10586670	ExpressionStatement	"zone -> cur [ point ] . x = ADD_LONG ( zone -> cur [ point ] . x , distance )"	1800:6:62589:62650	10586625	1	True				
ANR	10586671	AssignmentExpression	"zone -> cur [ point ] . x = ADD_LONG ( zone -> cur [ point ] . x , distance )"		10586625	0		=			
ANR	10586672	MemberAccess	zone -> cur [ point ] . x		10586625	0					
ANR	10586673	ArrayIndexing	zone -> cur [ point ]		10586625	0					
ANR	10586674	PtrMemberAccess	zone -> cur		10586625	0					
ANR	10586675	Identifier	zone		10586625	0					
ANR	10586676	Identifier	cur		10586625	1					
ANR	10586677	Identifier	point		10586625	1					
ANR	10586678	Identifier	x		10586625	1					
ANR	10586679	CallExpression	"ADD_LONG ( zone -> cur [ point ] . x , distance )"		10586625	1					
ANR	10586680	Callee	ADD_LONG		10586625	0					
ANR	10586681	Identifier	ADD_LONG		10586625	0					
ANR	10586682	ArgumentList	zone -> cur [ point ] . x		10586625	1					
ANR	10586683	Argument	zone -> cur [ point ] . x		10586625	0					
ANR	10586684	MemberAccess	zone -> cur [ point ] . x		10586625	0					
ANR	10586685	ArrayIndexing	zone -> cur [ point ]		10586625	0					
ANR	10586686	PtrMemberAccess	zone -> cur		10586625	0					
ANR	10586687	Identifier	zone		10586625	0					
ANR	10586688	Identifier	cur		10586625	1					
ANR	10586689	Identifier	point		10586625	1					
ANR	10586690	Identifier	x		10586625	1					
ANR	10586691	Argument	distance		10586625	1					
ANR	10586692	Identifier	distance		10586625	0					
ANR	10586693	ElseStatement	else		10586625	0					
ANR	10586694	IfStatement	if ( NO_SUBPIXEL_HINTING )		10586625	0					
ANR	10586695	Condition	NO_SUBPIXEL_HINTING	1804:9:62678:62696	10586625	0	True				
ANR	10586696	Identifier	NO_SUBPIXEL_HINTING		10586625	0					
ANR	10586697	ExpressionStatement	"zone -> cur [ point ] . x = ADD_LONG ( zone -> cur [ point ] . x , distance )"	1805:6:62706:62767	10586625	1	True				
ANR	10586698	AssignmentExpression	"zone -> cur [ point ] . x = ADD_LONG ( zone -> cur [ point ] . x , distance )"		10586625	0		=			
ANR	10586699	MemberAccess	zone -> cur [ point ] . x		10586625	0					
ANR	10586700	ArrayIndexing	zone -> cur [ point ]		10586625	0					
ANR	10586701	PtrMemberAccess	zone -> cur		10586625	0					
ANR	10586702	Identifier	zone		10586625	0					
ANR	10586703	Identifier	cur		10586625	1					
ANR	10586704	Identifier	point		10586625	1					
ANR	10586705	Identifier	x		10586625	1					
ANR	10586706	CallExpression	"ADD_LONG ( zone -> cur [ point ] . x , distance )"		10586625	1					
ANR	10586707	Callee	ADD_LONG		10586625	0					
ANR	10586708	Identifier	ADD_LONG		10586625	0					
ANR	10586709	ArgumentList	zone -> cur [ point ] . x		10586625	1					
ANR	10586710	Argument	zone -> cur [ point ] . x		10586625	0					
ANR	10586711	MemberAccess	zone -> cur [ point ] . x		10586625	0					
ANR	10586712	ArrayIndexing	zone -> cur [ point ]		10586625	0					
ANR	10586713	PtrMemberAccess	zone -> cur		10586625	0					
ANR	10586714	Identifier	zone		10586625	0					
ANR	10586715	Identifier	cur		10586625	1					
ANR	10586716	Identifier	point		10586625	1					
ANR	10586717	Identifier	x		10586625	1					
ANR	10586718	Argument	distance		10586625	1					
ANR	10586719	Identifier	distance		10586625	0					
ANR	10586720	ExpressionStatement	zone -> tags [ point ] |= FT_CURVE_TAG_TOUCH_X	1807:4:62774:62816	10586625	1	True				
ANR	10586721	AssignmentExpression	zone -> tags [ point ] |= FT_CURVE_TAG_TOUCH_X		10586625	0		|=			
ANR	10586722	ArrayIndexing	zone -> tags [ point ]		10586625	0					
ANR	10586723	PtrMemberAccess	zone -> tags		10586625	0					
ANR	10586724	Identifier	zone		10586625	0					
ANR	10586725	Identifier	tags		10586625	1					
ANR	10586726	Identifier	point		10586625	1					
ANR	10586727	Identifier	FT_CURVE_TAG_TOUCH_X		10586625	1					
ANR	10586728	ReturnType	static void		10586625	1					
ANR	10586729	Identifier	Direct_Move_X		10586625	2					
ANR	10586730	ParameterList	"TT_ExecContext exc , TT_GlyphZone zone , FT_UShort point , FT_F26Dot6 distance"		10586625	3					
ANR	10586731	Parameter	TT_ExecContext exc	1787:17:62085:62103	10586625	0	True				
ANR	10586732	ParameterType	TT_ExecContext		10586625	0					
ANR	10586733	Identifier	exc		10586625	1					
ANR	10586734	Parameter	TT_GlyphZone zone	1788:17:62123:62142	10586625	1	True				
ANR	10586735	ParameterType	TT_GlyphZone		10586625	0					
ANR	10586736	Identifier	zone		10586625	1					
ANR	10586737	Parameter	FT_UShort point	1789:17:62162:62182	10586625	2	True				
ANR	10586738	ParameterType	FT_UShort		10586625	0					
ANR	10586739	Identifier	point		10586625	1					
ANR	10586740	Parameter	FT_F26Dot6 distance	1790:17:62202:62225	10586625	3	True				
ANR	10586741	ParameterType	FT_F26Dot6		10586625	0					
ANR	10586742	Identifier	distance		10586625	1					
ANR	10586743	CFGEntryNode	ENTRY		10586625		True				
ANR	10586744	CFGExitNode	EXIT		10586625		True				
ANR	10586745	Symbol	SUBPIXEL_HINTING_MINIMAL		10586625						
ANR	10586746	Symbol	* zone -> tags		10586625						
ANR	10586747	Symbol	distance		10586625						
ANR	10586748	Symbol	* exc		10586625						
ANR	10586749	Symbol	* point		10586625						
ANR	10586750	Symbol	* zone		10586625						
ANR	10586751	Symbol	ADD_LONG		10586625						
ANR	10586752	Symbol	zone -> cur [ point ] . x		10586625						
ANR	10586753	Symbol	FT_CURVE_TAG_TOUCH_X		10586625						
ANR	10586754	Symbol	point		10586625						
ANR	10586755	Symbol	exc -> backward_compatibility		10586625						
ANR	10586756	Symbol	SUBPIXEL_HINTING_INFINALITY		10586625						
ANR	10586757	Symbol	zone -> tags		10586625						
ANR	10586758	Symbol	exc		10586625						
ANR	10586759	Symbol	NO_SUBPIXEL_HINTING		10586625						
ANR	10586760	Symbol	zone		10586625						
ANR	10586761	Symbol	* * zone		10586625						
ANR	10586762	Symbol	zone -> cur		10586625						
ANR	10586763	Symbol	* zone -> cur		10586625						
ANR	10586764	Symbol	exc -> ignore_x_mode		10586625						
ANR	10586765	Function	Direct_Move_Y	1811:2:62826:63352							
ANR	10586766	FunctionDef	"Direct_Move_Y (TT_ExecContext exc , TT_GlyphZone zone , FT_UShort point , FT_F26Dot6 distance)"		10586765	0					
ANR	10586767	CompoundStatement		1816:2:63001:63352	10586765	0					
ANR	10586768	ExpressionStatement	FT_UNUSED ( exc )	1817:4:63007:63023	10586765	0	True				
ANR	10586769	CallExpression	FT_UNUSED ( exc )		10586765	0					
ANR	10586770	Callee	FT_UNUSED		10586765	0					
ANR	10586771	Identifier	FT_UNUSED		10586765	0					
ANR	10586772	ArgumentList	exc		10586765	1					
ANR	10586773	Argument	exc		10586765	0					
ANR	10586774	Identifier	exc		10586765	0					
ANR	10586775	IfStatement	if ( ! ( SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility && exc -> iupx_called && exc -> iupy_called ) )		10586765	1					
ANR	10586776	Condition	! ( SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility && exc -> iupx_called && exc -> iupy_called )	1820:9:63078:63222	10586765	0	True				
ANR	10586777	UnaryOperationExpression	! ( SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility && exc -> iupx_called && exc -> iupy_called )		10586765	0					
ANR	10586778	UnaryOperator	!		10586765	0					
ANR	10586779	AndExpression	SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility && exc -> iupx_called && exc -> iupy_called		10586765	1		&&			
ANR	10586780	Identifier	SUBPIXEL_HINTING_MINIMAL		10586765	0					
ANR	10586781	AndExpression	exc -> backward_compatibility && exc -> iupx_called && exc -> iupy_called		10586765	1		&&			
ANR	10586782	PtrMemberAccess	exc -> backward_compatibility		10586765	0					
ANR	10586783	Identifier	exc		10586765	0					
ANR	10586784	Identifier	backward_compatibility		10586765	1					
ANR	10586785	AndExpression	exc -> iupx_called && exc -> iupy_called		10586765	1		&&			
ANR	10586786	PtrMemberAccess	exc -> iupx_called		10586765	0					
ANR	10586787	Identifier	exc		10586765	0					
ANR	10586788	Identifier	iupx_called		10586765	1					
ANR	10586789	PtrMemberAccess	exc -> iupy_called		10586765	1					
ANR	10586790	Identifier	exc		10586765	0					
ANR	10586791	Identifier	iupy_called		10586765	1					
ANR	10586792	ExpressionStatement	"zone -> cur [ point ] . y = ADD_LONG ( zone -> cur [ point ] . y , distance )"	1824:6:63239:63300	10586765	1	True				
ANR	10586793	AssignmentExpression	"zone -> cur [ point ] . y = ADD_LONG ( zone -> cur [ point ] . y , distance )"		10586765	0		=			
ANR	10586794	MemberAccess	zone -> cur [ point ] . y		10586765	0					
ANR	10586795	ArrayIndexing	zone -> cur [ point ]		10586765	0					
ANR	10586796	PtrMemberAccess	zone -> cur		10586765	0					
ANR	10586797	Identifier	zone		10586765	0					
ANR	10586798	Identifier	cur		10586765	1					
ANR	10586799	Identifier	point		10586765	1					
ANR	10586800	Identifier	y		10586765	1					
ANR	10586801	CallExpression	"ADD_LONG ( zone -> cur [ point ] . y , distance )"		10586765	1					
ANR	10586802	Callee	ADD_LONG		10586765	0					
ANR	10586803	Identifier	ADD_LONG		10586765	0					
ANR	10586804	ArgumentList	zone -> cur [ point ] . y		10586765	1					
ANR	10586805	Argument	zone -> cur [ point ] . y		10586765	0					
ANR	10586806	MemberAccess	zone -> cur [ point ] . y		10586765	0					
ANR	10586807	ArrayIndexing	zone -> cur [ point ]		10586765	0					
ANR	10586808	PtrMemberAccess	zone -> cur		10586765	0					
ANR	10586809	Identifier	zone		10586765	0					
ANR	10586810	Identifier	cur		10586765	1					
ANR	10586811	Identifier	point		10586765	1					
ANR	10586812	Identifier	y		10586765	1					
ANR	10586813	Argument	distance		10586765	1					
ANR	10586814	Identifier	distance		10586765	0					
ANR	10586815	ExpressionStatement	zone -> tags [ point ] |= FT_CURVE_TAG_TOUCH_Y	1826:4:63307:63348	10586765	2	True				
ANR	10586816	AssignmentExpression	zone -> tags [ point ] |= FT_CURVE_TAG_TOUCH_Y		10586765	0		|=			
ANR	10586817	ArrayIndexing	zone -> tags [ point ]		10586765	0					
ANR	10586818	PtrMemberAccess	zone -> tags		10586765	0					
ANR	10586819	Identifier	zone		10586765	0					
ANR	10586820	Identifier	tags		10586765	1					
ANR	10586821	Identifier	point		10586765	1					
ANR	10586822	Identifier	FT_CURVE_TAG_TOUCH_Y		10586765	1					
ANR	10586823	ReturnType	static void		10586765	1					
ANR	10586824	Identifier	Direct_Move_Y		10586765	2					
ANR	10586825	ParameterList	"TT_ExecContext exc , TT_GlyphZone zone , FT_UShort point , FT_F26Dot6 distance"		10586765	3					
ANR	10586826	Parameter	TT_ExecContext exc	1812:17:62855:62873	10586765	0	True				
ANR	10586827	ParameterType	TT_ExecContext		10586765	0					
ANR	10586828	Identifier	exc		10586765	1					
ANR	10586829	Parameter	TT_GlyphZone zone	1813:17:62893:62912	10586765	1	True				
ANR	10586830	ParameterType	TT_GlyphZone		10586765	0					
ANR	10586831	Identifier	zone		10586765	1					
ANR	10586832	Parameter	FT_UShort point	1814:17:62932:62952	10586765	2	True				
ANR	10586833	ParameterType	FT_UShort		10586765	0					
ANR	10586834	Identifier	point		10586765	1					
ANR	10586835	Parameter	FT_F26Dot6 distance	1815:17:62972:62995	10586765	3	True				
ANR	10586836	ParameterType	FT_F26Dot6		10586765	0					
ANR	10586837	Identifier	distance		10586765	1					
ANR	10586838	CFGEntryNode	ENTRY		10586765		True				
ANR	10586839	CFGExitNode	EXIT		10586765		True				
ANR	10586840	Symbol	SUBPIXEL_HINTING_MINIMAL		10586765						
ANR	10586841	Symbol	* zone -> tags		10586765						
ANR	10586842	Symbol	distance		10586765						
ANR	10586843	Symbol	* exc		10586765						
ANR	10586844	Symbol	* zone		10586765						
ANR	10586845	Symbol	* point		10586765						
ANR	10586846	Symbol	ADD_LONG		10586765						
ANR	10586847	Symbol	FT_CURVE_TAG_TOUCH_Y		10586765						
ANR	10586848	Symbol	point		10586765						
ANR	10586849	Symbol	exc -> backward_compatibility		10586765						
ANR	10586850	Symbol	zone -> cur [ point ] . y		10586765						
ANR	10586851	Symbol	zone -> tags		10586765						
ANR	10586852	Symbol	exc		10586765						
ANR	10586853	Symbol	zone		10586765						
ANR	10586854	Symbol	* * zone		10586765						
ANR	10586855	Symbol	zone -> cur		10586765						
ANR	10586856	Symbol	* zone -> cur		10586765						
ANR	10586857	Symbol	exc -> iupy_called		10586765						
ANR	10586858	Symbol	exc -> iupx_called		10586765						
ANR	10586859	Function	Direct_Move_Orig_X	1840:2:63984:64273							
ANR	10586860	FunctionDef	"Direct_Move_Orig_X (TT_ExecContext exc , TT_GlyphZone zone , FT_UShort point , FT_F26Dot6 distance)"		10586859	0					
ANR	10586861	CompoundStatement		1845:2:64179:64273	10586859	0					
ANR	10586862	ExpressionStatement	FT_UNUSED ( exc )	1846:4:64185:64201	10586859	0	True				
ANR	10586863	CallExpression	FT_UNUSED ( exc )		10586859	0					
ANR	10586864	Callee	FT_UNUSED		10586859	0					
ANR	10586865	Identifier	FT_UNUSED		10586859	0					
ANR	10586866	ArgumentList	exc		10586859	1					
ANR	10586867	Argument	exc		10586859	0					
ANR	10586868	Identifier	exc		10586859	0					
ANR	10586869	ExpressionStatement	"zone -> org [ point ] . x = ADD_LONG ( zone -> org [ point ] . x , distance )"	1848:4:64208:64269	10586859	1	True				
ANR	10586870	AssignmentExpression	"zone -> org [ point ] . x = ADD_LONG ( zone -> org [ point ] . x , distance )"		10586859	0		=			
ANR	10586871	MemberAccess	zone -> org [ point ] . x		10586859	0					
ANR	10586872	ArrayIndexing	zone -> org [ point ]		10586859	0					
ANR	10586873	PtrMemberAccess	zone -> org		10586859	0					
ANR	10586874	Identifier	zone		10586859	0					
ANR	10586875	Identifier	org		10586859	1					
ANR	10586876	Identifier	point		10586859	1					
ANR	10586877	Identifier	x		10586859	1					
ANR	10586878	CallExpression	"ADD_LONG ( zone -> org [ point ] . x , distance )"		10586859	1					
ANR	10586879	Callee	ADD_LONG		10586859	0					
ANR	10586880	Identifier	ADD_LONG		10586859	0					
ANR	10586881	ArgumentList	zone -> org [ point ] . x		10586859	1					
ANR	10586882	Argument	zone -> org [ point ] . x		10586859	0					
ANR	10586883	MemberAccess	zone -> org [ point ] . x		10586859	0					
ANR	10586884	ArrayIndexing	zone -> org [ point ]		10586859	0					
ANR	10586885	PtrMemberAccess	zone -> org		10586859	0					
ANR	10586886	Identifier	zone		10586859	0					
ANR	10586887	Identifier	org		10586859	1					
ANR	10586888	Identifier	point		10586859	1					
ANR	10586889	Identifier	x		10586859	1					
ANR	10586890	Argument	distance		10586859	1					
ANR	10586891	Identifier	distance		10586859	0					
ANR	10586892	ReturnType	static void		10586859	1					
ANR	10586893	Identifier	Direct_Move_Orig_X		10586859	2					
ANR	10586894	ParameterList	"TT_ExecContext exc , TT_GlyphZone zone , FT_UShort point , FT_F26Dot6 distance"		10586859	3					
ANR	10586895	Parameter	TT_ExecContext exc	1841:22:64018:64036	10586859	0	True				
ANR	10586896	ParameterType	TT_ExecContext		10586859	0					
ANR	10586897	Identifier	exc		10586859	1					
ANR	10586898	Parameter	TT_GlyphZone zone	1842:22:64061:64080	10586859	1	True				
ANR	10586899	ParameterType	TT_GlyphZone		10586859	0					
ANR	10586900	Identifier	zone		10586859	1					
ANR	10586901	Parameter	FT_UShort point	1843:22:64105:64125	10586859	2	True				
ANR	10586902	ParameterType	FT_UShort		10586859	0					
ANR	10586903	Identifier	point		10586859	1					
ANR	10586904	Parameter	FT_F26Dot6 distance	1844:22:64150:64173	10586859	3	True				
ANR	10586905	ParameterType	FT_F26Dot6		10586859	0					
ANR	10586906	Identifier	distance		10586859	1					
ANR	10586907	CFGEntryNode	ENTRY		10586859		True				
ANR	10586908	CFGExitNode	EXIT		10586859		True				
ANR	10586909	Symbol	exc		10586859						
ANR	10586910	Symbol	* zone -> org		10586859						
ANR	10586911	Symbol	distance		10586859						
ANR	10586912	Symbol	zone		10586859						
ANR	10586913	Symbol	* point		10586859						
ANR	10586914	Symbol	* zone		10586859						
ANR	10586915	Symbol	ADD_LONG		10586859						
ANR	10586916	Symbol	zone -> org		10586859						
ANR	10586917	Symbol	* * zone		10586859						
ANR	10586918	Symbol	zone -> org [ point ] . x		10586859						
ANR	10586919	Symbol	point		10586859						
ANR	10586920	Function	Direct_Move_Orig_Y	1852:2:64279:64568							
ANR	10586921	FunctionDef	"Direct_Move_Orig_Y (TT_ExecContext exc , TT_GlyphZone zone , FT_UShort point , FT_F26Dot6 distance)"		10586920	0					
ANR	10586922	CompoundStatement		1857:2:64474:64568	10586920	0					
ANR	10586923	ExpressionStatement	FT_UNUSED ( exc )	1858:4:64480:64496	10586920	0	True				
ANR	10586924	CallExpression	FT_UNUSED ( exc )		10586920	0					
ANR	10586925	Callee	FT_UNUSED		10586920	0					
ANR	10586926	Identifier	FT_UNUSED		10586920	0					
ANR	10586927	ArgumentList	exc		10586920	1					
ANR	10586928	Argument	exc		10586920	0					
ANR	10586929	Identifier	exc		10586920	0					
ANR	10586930	ExpressionStatement	"zone -> org [ point ] . y = ADD_LONG ( zone -> org [ point ] . y , distance )"	1860:4:64503:64564	10586920	1	True				
ANR	10586931	AssignmentExpression	"zone -> org [ point ] . y = ADD_LONG ( zone -> org [ point ] . y , distance )"		10586920	0		=			
ANR	10586932	MemberAccess	zone -> org [ point ] . y		10586920	0					
ANR	10586933	ArrayIndexing	zone -> org [ point ]		10586920	0					
ANR	10586934	PtrMemberAccess	zone -> org		10586920	0					
ANR	10586935	Identifier	zone		10586920	0					
ANR	10586936	Identifier	org		10586920	1					
ANR	10586937	Identifier	point		10586920	1					
ANR	10586938	Identifier	y		10586920	1					
ANR	10586939	CallExpression	"ADD_LONG ( zone -> org [ point ] . y , distance )"		10586920	1					
ANR	10586940	Callee	ADD_LONG		10586920	0					
ANR	10586941	Identifier	ADD_LONG		10586920	0					
ANR	10586942	ArgumentList	zone -> org [ point ] . y		10586920	1					
ANR	10586943	Argument	zone -> org [ point ] . y		10586920	0					
ANR	10586944	MemberAccess	zone -> org [ point ] . y		10586920	0					
ANR	10586945	ArrayIndexing	zone -> org [ point ]		10586920	0					
ANR	10586946	PtrMemberAccess	zone -> org		10586920	0					
ANR	10586947	Identifier	zone		10586920	0					
ANR	10586948	Identifier	org		10586920	1					
ANR	10586949	Identifier	point		10586920	1					
ANR	10586950	Identifier	y		10586920	1					
ANR	10586951	Argument	distance		10586920	1					
ANR	10586952	Identifier	distance		10586920	0					
ANR	10586953	ReturnType	static void		10586920	1					
ANR	10586954	Identifier	Direct_Move_Orig_Y		10586920	2					
ANR	10586955	ParameterList	"TT_ExecContext exc , TT_GlyphZone zone , FT_UShort point , FT_F26Dot6 distance"		10586920	3					
ANR	10586956	Parameter	TT_ExecContext exc	1853:22:64313:64331	10586920	0	True				
ANR	10586957	ParameterType	TT_ExecContext		10586920	0					
ANR	10586958	Identifier	exc		10586920	1					
ANR	10586959	Parameter	TT_GlyphZone zone	1854:22:64356:64375	10586920	1	True				
ANR	10586960	ParameterType	TT_GlyphZone		10586920	0					
ANR	10586961	Identifier	zone		10586920	1					
ANR	10586962	Parameter	FT_UShort point	1855:22:64400:64420	10586920	2	True				
ANR	10586963	ParameterType	FT_UShort		10586920	0					
ANR	10586964	Identifier	point		10586920	1					
ANR	10586965	Parameter	FT_F26Dot6 distance	1856:22:64445:64468	10586920	3	True				
ANR	10586966	ParameterType	FT_F26Dot6		10586920	0					
ANR	10586967	Identifier	distance		10586920	1					
ANR	10586968	CFGEntryNode	ENTRY		10586920		True				
ANR	10586969	CFGExitNode	EXIT		10586920		True				
ANR	10586970	Symbol	exc		10586920						
ANR	10586971	Symbol	* zone -> org		10586920						
ANR	10586972	Symbol	distance		10586920						
ANR	10586973	Symbol	zone		10586920						
ANR	10586974	Symbol	* point		10586920						
ANR	10586975	Symbol	* zone		10586920						
ANR	10586976	Symbol	zone -> org		10586920						
ANR	10586977	Symbol	ADD_LONG		10586920						
ANR	10586978	Symbol	zone -> org [ point ] . y		10586920						
ANR	10586979	Symbol	* * zone		10586920						
ANR	10586980	Symbol	point		10586920						
ANR	10586981	Function	Round_None	1886:2:66290:66726							
ANR	10586982	FunctionDef	"Round_None (TT_ExecContext exc , FT_F26Dot6 distance , FT_F26Dot6 compensation)"		10586981	0					
ANR	10586983	CompoundStatement		1890:2:66430:66726	10586981	0					
ANR	10586984	IdentifierDeclStatement	FT_F26Dot6 val ;	1891:4:66436:66451	10586981	0	True				
ANR	10586985	IdentifierDecl	val		10586981	0					
ANR	10586986	IdentifierDeclType	FT_F26Dot6		10586981	0					
ANR	10586987	Identifier	val		10586981	1					
ANR	10586988	ExpressionStatement	FT_UNUSED ( exc )	1893:4:66458:66474	10586981	1	True				
ANR	10586989	CallExpression	FT_UNUSED ( exc )		10586981	0					
ANR	10586990	Callee	FT_UNUSED		10586981	0					
ANR	10586991	Identifier	FT_UNUSED		10586981	0					
ANR	10586992	ArgumentList	exc		10586981	1					
ANR	10586993	Argument	exc		10586981	0					
ANR	10586994	Identifier	exc		10586981	0					
ANR	10586995	IfStatement	if ( distance >= 0 )		10586981	2					
ANR	10586996	Condition	distance >= 0	1896:9:66487:66499	10586981	0	True				
ANR	10586997	RelationalExpression	distance >= 0		10586981	0		>=			
ANR	10586998	Identifier	distance		10586981	0					
ANR	10586999	PrimaryExpression	0		10586981	1					
ANR	10587000	CompoundStatement		8:4:76:76	10586981	1					
ANR	10587001	ExpressionStatement	"val = ADD_LONG ( distance , compensation )"	1898:6:66515:66555	10586981	0	True				
ANR	10587002	AssignmentExpression	"val = ADD_LONG ( distance , compensation )"		10586981	0		=			
ANR	10587003	Identifier	val		10586981	0					
ANR	10587004	CallExpression	"ADD_LONG ( distance , compensation )"		10586981	1					
ANR	10587005	Callee	ADD_LONG		10586981	0					
ANR	10587006	Identifier	ADD_LONG		10586981	0					
ANR	10587007	ArgumentList	distance		10586981	1					
ANR	10587008	Argument	distance		10586981	0					
ANR	10587009	Identifier	distance		10586981	0					
ANR	10587010	Argument	compensation		10586981	1					
ANR	10587011	Identifier	compensation		10586981	0					
ANR	10587012	IfStatement	if ( val < 0 )		10586981	1					
ANR	10587013	Condition	val < 0	1899:11:66568:66574	10586981	0	True				
ANR	10587014	RelationalExpression	val < 0		10586981	0		<			
ANR	10587015	Identifier	val		10586981	0					
ANR	10587016	PrimaryExpression	0		10586981	1					
ANR	10587017	ExpressionStatement	val = 0	1900:8:66586:66593	10586981	1	True				
ANR	10587018	AssignmentExpression	val = 0		10586981	0		=			
ANR	10587019	Identifier	val		10586981	0					
ANR	10587020	PrimaryExpression	0		10586981	1					
ANR	10587021	ElseStatement	else		10586981	0					
ANR	10587022	CompoundStatement		14:4:183:183	10586981	0					
ANR	10587023	ExpressionStatement	"val = SUB_LONG ( distance , compensation )"	1904:6:66622:66662	10586981	0	True				
ANR	10587024	AssignmentExpression	"val = SUB_LONG ( distance , compensation )"		10586981	0		=			
ANR	10587025	Identifier	val		10586981	0					
ANR	10587026	CallExpression	"SUB_LONG ( distance , compensation )"		10586981	1					
ANR	10587027	Callee	SUB_LONG		10586981	0					
ANR	10587028	Identifier	SUB_LONG		10586981	0					
ANR	10587029	ArgumentList	distance		10586981	1					
ANR	10587030	Argument	distance		10586981	0					
ANR	10587031	Identifier	distance		10586981	0					
ANR	10587032	Argument	compensation		10586981	1					
ANR	10587033	Identifier	compensation		10586981	0					
ANR	10587034	IfStatement	if ( val > 0 )		10586981	1					
ANR	10587035	Condition	val > 0	1905:11:66675:66681	10586981	0	True				
ANR	10587036	RelationalExpression	val > 0		10586981	0		>			
ANR	10587037	Identifier	val		10586981	0					
ANR	10587038	PrimaryExpression	0		10586981	1					
ANR	10587039	ExpressionStatement	val = 0	1906:8:66693:66700	10586981	1	True				
ANR	10587040	AssignmentExpression	val = 0		10586981	0		=			
ANR	10587041	Identifier	val		10586981	0					
ANR	10587042	PrimaryExpression	0		10586981	1					
ANR	10587043	ReturnStatement	return val ;	1908:4:66712:66722	10586981	3	True				
ANR	10587044	Identifier	val		10586981	0					
ANR	10587045	ReturnType	static FT_F26Dot6		10586981	1					
ANR	10587046	Identifier	Round_None		10586981	2					
ANR	10587047	ParameterList	"TT_ExecContext exc , FT_F26Dot6 distance , FT_F26Dot6 compensation"		10586981	3					
ANR	10587048	Parameter	TT_ExecContext exc	1887:14:66322:66340	10586981	0	True				
ANR	10587049	ParameterType	TT_ExecContext		10586981	0					
ANR	10587050	Identifier	exc		10586981	1					
ANR	10587051	Parameter	FT_F26Dot6 distance	1888:14:66357:66380	10586981	1	True				
ANR	10587052	ParameterType	FT_F26Dot6		10586981	0					
ANR	10587053	Identifier	distance		10586981	1					
ANR	10587054	Parameter	FT_F26Dot6 compensation	1889:14:66397:66424	10586981	2	True				
ANR	10587055	ParameterType	FT_F26Dot6		10586981	0					
ANR	10587056	Identifier	compensation		10586981	1					
ANR	10587057	CFGEntryNode	ENTRY		10586981		True				
ANR	10587058	CFGExitNode	EXIT		10586981		True				
ANR	10587059	Symbol	val		10586981						
ANR	10587060	Symbol	exc		10586981						
ANR	10587061	Symbol	distance		10586981						
ANR	10587062	Symbol	ADD_LONG		10586981						
ANR	10587063	Symbol	compensation		10586981						
ANR	10587064	Symbol	SUB_LONG		10586981						
ANR	10587065	Function	Round_To_Grid	1928:2:67980:68531							
ANR	10587066	FunctionDef	"Round_To_Grid (TT_ExecContext exc , FT_F26Dot6 distance , FT_F26Dot6 compensation)"		10587065	0					
ANR	10587067	CompoundStatement		1932:2:68129:68531	10587065	0					
ANR	10587068	IdentifierDeclStatement	FT_F26Dot6 val ;	1933:4:68135:68150	10587065	0	True				
ANR	10587069	IdentifierDecl	val		10587065	0					
ANR	10587070	IdentifierDeclType	FT_F26Dot6		10587065	0					
ANR	10587071	Identifier	val		10587065	1					
ANR	10587072	ExpressionStatement	FT_UNUSED ( exc )	1935:4:68157:68173	10587065	1	True				
ANR	10587073	CallExpression	FT_UNUSED ( exc )		10587065	0					
ANR	10587074	Callee	FT_UNUSED		10587065	0					
ANR	10587075	Identifier	FT_UNUSED		10587065	0					
ANR	10587076	ArgumentList	exc		10587065	1					
ANR	10587077	Argument	exc		10587065	0					
ANR	10587078	Identifier	exc		10587065	0					
ANR	10587079	IfStatement	if ( distance >= 0 )		10587065	2					
ANR	10587080	Condition	distance >= 0	1938:9:68186:68198	10587065	0	True				
ANR	10587081	RelationalExpression	distance >= 0		10587065	0		>=			
ANR	10587082	Identifier	distance		10587065	0					
ANR	10587083	PrimaryExpression	0		10587065	1					
ANR	10587084	CompoundStatement		8:4:76:76	10587065	1					
ANR	10587085	ExpressionStatement	"val = FT_PIX_ROUND_LONG ( ADD_LONG ( distance , compensation ) )"	1940:6:68214:68275	10587065	0	True				
ANR	10587086	AssignmentExpression	"val = FT_PIX_ROUND_LONG ( ADD_LONG ( distance , compensation ) )"		10587065	0		=			
ANR	10587087	Identifier	val		10587065	0					
ANR	10587088	CallExpression	"FT_PIX_ROUND_LONG ( ADD_LONG ( distance , compensation ) )"		10587065	1					
ANR	10587089	Callee	FT_PIX_ROUND_LONG		10587065	0					
ANR	10587090	Identifier	FT_PIX_ROUND_LONG		10587065	0					
ANR	10587091	ArgumentList	"ADD_LONG ( distance , compensation )"		10587065	1					
ANR	10587092	Argument	"ADD_LONG ( distance , compensation )"		10587065	0					
ANR	10587093	CallExpression	"ADD_LONG ( distance , compensation )"		10587065	0					
ANR	10587094	Callee	ADD_LONG		10587065	0					
ANR	10587095	Identifier	ADD_LONG		10587065	0					
ANR	10587096	ArgumentList	distance		10587065	1					
ANR	10587097	Argument	distance		10587065	0					
ANR	10587098	Identifier	distance		10587065	0					
ANR	10587099	Argument	compensation		10587065	1					
ANR	10587100	Identifier	compensation		10587065	0					
ANR	10587101	IfStatement	if ( val < 0 )		10587065	1					
ANR	10587102	Condition	val < 0	1941:11:68288:68294	10587065	0	True				
ANR	10587103	RelationalExpression	val < 0		10587065	0		<			
ANR	10587104	Identifier	val		10587065	0					
ANR	10587105	PrimaryExpression	0		10587065	1					
ANR	10587106	ExpressionStatement	val = 0	1942:8:68306:68313	10587065	1	True				
ANR	10587107	AssignmentExpression	val = 0		10587065	0		=			
ANR	10587108	Identifier	val		10587065	0					
ANR	10587109	PrimaryExpression	0		10587065	1					
ANR	10587110	ElseStatement	else		10587065	0					
ANR	10587111	CompoundStatement		14:4:204:204	10587065	0					
ANR	10587112	ExpressionStatement	"val = NEG_LONG ( FT_PIX_ROUND_LONG ( SUB_LONG ( compensation , distance ) ) )"	1946:6:68342:68466	10587065	0	True				
ANR	10587113	AssignmentExpression	"val = NEG_LONG ( FT_PIX_ROUND_LONG ( SUB_LONG ( compensation , distance ) ) )"		10587065	0		=			
ANR	10587114	Identifier	val		10587065	0					
ANR	10587115	CallExpression	"NEG_LONG ( FT_PIX_ROUND_LONG ( SUB_LONG ( compensation , distance ) ) )"		10587065	1					
ANR	10587116	Callee	NEG_LONG		10587065	0					
ANR	10587117	Identifier	NEG_LONG		10587065	0					
ANR	10587118	ArgumentList	"FT_PIX_ROUND_LONG ( SUB_LONG ( compensation , distance ) )"		10587065	1					
ANR	10587119	Argument	"FT_PIX_ROUND_LONG ( SUB_LONG ( compensation , distance ) )"		10587065	0					
ANR	10587120	CallExpression	"FT_PIX_ROUND_LONG ( SUB_LONG ( compensation , distance ) )"		10587065	0					
ANR	10587121	Callee	FT_PIX_ROUND_LONG		10587065	0					
ANR	10587122	Identifier	FT_PIX_ROUND_LONG		10587065	0					
ANR	10587123	ArgumentList	"SUB_LONG ( compensation , distance )"		10587065	1					
ANR	10587124	Argument	"SUB_LONG ( compensation , distance )"		10587065	0					
ANR	10587125	CallExpression	"SUB_LONG ( compensation , distance )"		10587065	0					
ANR	10587126	Callee	SUB_LONG		10587065	0					
ANR	10587127	Identifier	SUB_LONG		10587065	0					
ANR	10587128	ArgumentList	compensation		10587065	1					
ANR	10587129	Argument	compensation		10587065	0					
ANR	10587130	Identifier	compensation		10587065	0					
ANR	10587131	Argument	distance		10587065	1					
ANR	10587132	Identifier	distance		10587065	0					
ANR	10587133	IfStatement	if ( val > 0 )		10587065	1					
ANR	10587134	Condition	val > 0	1948:11:68479:68485	10587065	0	True				
ANR	10587135	RelationalExpression	val > 0		10587065	0		>			
ANR	10587136	Identifier	val		10587065	0					
ANR	10587137	PrimaryExpression	0		10587065	1					
ANR	10587138	ExpressionStatement	val = 0	1949:8:68497:68504	10587065	1	True				
ANR	10587139	AssignmentExpression	val = 0		10587065	0		=			
ANR	10587140	Identifier	val		10587065	0					
ANR	10587141	PrimaryExpression	0		10587065	1					
ANR	10587142	ReturnStatement	return val ;	1952:4:68517:68527	10587065	3	True				
ANR	10587143	Identifier	val		10587065	0					
ANR	10587144	ReturnType	static FT_F26Dot6		10587065	1					
ANR	10587145	Identifier	Round_To_Grid		10587065	2					
ANR	10587146	ParameterList	"TT_ExecContext exc , FT_F26Dot6 distance , FT_F26Dot6 compensation"		10587065	3					
ANR	10587147	Parameter	TT_ExecContext exc	1929:17:68015:68033	10587065	0	True				
ANR	10587148	ParameterType	TT_ExecContext		10587065	0					
ANR	10587149	Identifier	exc		10587065	1					
ANR	10587150	Parameter	FT_F26Dot6 distance	1930:17:68053:68076	10587065	1	True				
ANR	10587151	ParameterType	FT_F26Dot6		10587065	0					
ANR	10587152	Identifier	distance		10587065	1					
ANR	10587153	Parameter	FT_F26Dot6 compensation	1931:17:68096:68123	10587065	2	True				
ANR	10587154	ParameterType	FT_F26Dot6		10587065	0					
ANR	10587155	Identifier	compensation		10587065	1					
ANR	10587156	CFGEntryNode	ENTRY		10587065		True				
ANR	10587157	CFGExitNode	EXIT		10587065		True				
ANR	10587158	Symbol	val		10587065						
ANR	10587159	Symbol	exc		10587065						
ANR	10587160	Symbol	FT_PIX_ROUND_LONG		10587065						
ANR	10587161	Symbol	distance		10587065						
ANR	10587162	Symbol	ADD_LONG		10587065						
ANR	10587163	Symbol	compensation		10587065						
ANR	10587164	Symbol	SUB_LONG		10587065						
ANR	10587165	Symbol	NEG_LONG		10587065						
ANR	10587166	Function	Round_To_Half_Grid	1972:2:69785:70435							
ANR	10587167	FunctionDef	"Round_To_Half_Grid (TT_ExecContext exc , FT_F26Dot6 distance , FT_F26Dot6 compensation)"		10587166	0					
ANR	10587168	CompoundStatement		1976:2:69949:70435	10587166	0					
ANR	10587169	IdentifierDeclStatement	FT_F26Dot6 val ;	1977:4:69955:69970	10587166	0	True				
ANR	10587170	IdentifierDecl	val		10587166	0					
ANR	10587171	IdentifierDeclType	FT_F26Dot6		10587166	0					
ANR	10587172	Identifier	val		10587166	1					
ANR	10587173	ExpressionStatement	FT_UNUSED ( exc )	1979:4:69977:69993	10587166	1	True				
ANR	10587174	CallExpression	FT_UNUSED ( exc )		10587166	0					
ANR	10587175	Callee	FT_UNUSED		10587166	0					
ANR	10587176	Identifier	FT_UNUSED		10587166	0					
ANR	10587177	ArgumentList	exc		10587166	1					
ANR	10587178	Argument	exc		10587166	0					
ANR	10587179	Identifier	exc		10587166	0					
ANR	10587180	IfStatement	if ( distance >= 0 )		10587166	2					
ANR	10587181	Condition	distance >= 0	1982:9:70006:70018	10587166	0	True				
ANR	10587182	RelationalExpression	distance >= 0		10587166	0		>=			
ANR	10587183	Identifier	distance		10587166	0					
ANR	10587184	PrimaryExpression	0		10587166	1					
ANR	10587185	CompoundStatement		8:4:76:76	10587166	1					
ANR	10587186	ExpressionStatement	"val = ADD_LONG ( FT_PIX_FLOOR ( ADD_LONG ( distance , compensation ) ) , 32 )"	1984:6:70034:70128	10587166	0	True				
ANR	10587187	AssignmentExpression	"val = ADD_LONG ( FT_PIX_FLOOR ( ADD_LONG ( distance , compensation ) ) , 32 )"		10587166	0		=			
ANR	10587188	Identifier	val		10587166	0					
ANR	10587189	CallExpression	"ADD_LONG ( FT_PIX_FLOOR ( ADD_LONG ( distance , compensation ) ) , 32 )"		10587166	1					
ANR	10587190	Callee	ADD_LONG		10587166	0					
ANR	10587191	Identifier	ADD_LONG		10587166	0					
ANR	10587192	ArgumentList	"FT_PIX_FLOOR ( ADD_LONG ( distance , compensation ) )"		10587166	1					
ANR	10587193	Argument	"FT_PIX_FLOOR ( ADD_LONG ( distance , compensation ) )"		10587166	0					
ANR	10587194	CallExpression	"FT_PIX_FLOOR ( ADD_LONG ( distance , compensation ) )"		10587166	0					
ANR	10587195	Callee	FT_PIX_FLOOR		10587166	0					
ANR	10587196	Identifier	FT_PIX_FLOOR		10587166	0					
ANR	10587197	ArgumentList	"ADD_LONG ( distance , compensation )"		10587166	1					
ANR	10587198	Argument	"ADD_LONG ( distance , compensation )"		10587166	0					
ANR	10587199	CallExpression	"ADD_LONG ( distance , compensation )"		10587166	0					
ANR	10587200	Callee	ADD_LONG		10587166	0					
ANR	10587201	Identifier	ADD_LONG		10587166	0					
ANR	10587202	ArgumentList	distance		10587166	1					
ANR	10587203	Argument	distance		10587166	0					
ANR	10587204	Identifier	distance		10587166	0					
ANR	10587205	Argument	compensation		10587166	1					
ANR	10587206	Identifier	compensation		10587166	0					
ANR	10587207	Argument	32		10587166	1					
ANR	10587208	PrimaryExpression	32		10587166	0					
ANR	10587209	IfStatement	if ( val < 0 )		10587166	1					
ANR	10587210	Condition	val < 0	1986:11:70141:70147	10587166	0	True				
ANR	10587211	RelationalExpression	val < 0		10587166	0		<			
ANR	10587212	Identifier	val		10587166	0					
ANR	10587213	PrimaryExpression	0		10587166	1					
ANR	10587214	ExpressionStatement	val = 32	1987:8:70159:70167	10587166	1	True				
ANR	10587215	AssignmentExpression	val = 32		10587166	0		=			
ANR	10587216	Identifier	val		10587166	0					
ANR	10587217	PrimaryExpression	32		10587166	1					
ANR	10587218	ElseStatement	else		10587166	0					
ANR	10587219	CompoundStatement		15:4:238:238	10587166	0					
ANR	10587220	ExpressionStatement	"val = NEG_LONG ( ADD_LONG ( FT_PIX_FLOOR ( SUB_LONG ( compensation , distance ) ) , 32 ) )"	1991:6:70196:70368	10587166	0	True				
ANR	10587221	AssignmentExpression	"val = NEG_LONG ( ADD_LONG ( FT_PIX_FLOOR ( SUB_LONG ( compensation , distance ) ) , 32 ) )"		10587166	0		=			
ANR	10587222	Identifier	val		10587166	0					
ANR	10587223	CallExpression	"NEG_LONG ( ADD_LONG ( FT_PIX_FLOOR ( SUB_LONG ( compensation , distance ) ) , 32 ) )"		10587166	1					
ANR	10587224	Callee	NEG_LONG		10587166	0					
ANR	10587225	Identifier	NEG_LONG		10587166	0					
ANR	10587226	ArgumentList	"ADD_LONG ( FT_PIX_FLOOR ( SUB_LONG ( compensation , distance ) ) , 32 )"		10587166	1					
ANR	10587227	Argument	"ADD_LONG ( FT_PIX_FLOOR ( SUB_LONG ( compensation , distance ) ) , 32 )"		10587166	0					
ANR	10587228	CallExpression	"ADD_LONG ( FT_PIX_FLOOR ( SUB_LONG ( compensation , distance ) ) , 32 )"		10587166	0					
ANR	10587229	Callee	ADD_LONG		10587166	0					
ANR	10587230	Identifier	ADD_LONG		10587166	0					
ANR	10587231	ArgumentList	"FT_PIX_FLOOR ( SUB_LONG ( compensation , distance ) )"		10587166	1					
ANR	10587232	Argument	"FT_PIX_FLOOR ( SUB_LONG ( compensation , distance ) )"		10587166	0					
ANR	10587233	CallExpression	"FT_PIX_FLOOR ( SUB_LONG ( compensation , distance ) )"		10587166	0					
ANR	10587234	Callee	FT_PIX_FLOOR		10587166	0					
ANR	10587235	Identifier	FT_PIX_FLOOR		10587166	0					
ANR	10587236	ArgumentList	"SUB_LONG ( compensation , distance )"		10587166	1					
ANR	10587237	Argument	"SUB_LONG ( compensation , distance )"		10587166	0					
ANR	10587238	CallExpression	"SUB_LONG ( compensation , distance )"		10587166	0					
ANR	10587239	Callee	SUB_LONG		10587166	0					
ANR	10587240	Identifier	SUB_LONG		10587166	0					
ANR	10587241	ArgumentList	compensation		10587166	1					
ANR	10587242	Argument	compensation		10587166	0					
ANR	10587243	Identifier	compensation		10587166	0					
ANR	10587244	Argument	distance		10587166	1					
ANR	10587245	Identifier	distance		10587166	0					
ANR	10587246	Argument	32		10587166	1					
ANR	10587247	PrimaryExpression	32		10587166	0					
ANR	10587248	IfStatement	if ( val > 0 )		10587166	1					
ANR	10587249	Condition	val > 0	1994:11:70381:70387	10587166	0	True				
ANR	10587250	RelationalExpression	val > 0		10587166	0		>			
ANR	10587251	Identifier	val		10587166	0					
ANR	10587252	PrimaryExpression	0		10587166	1					
ANR	10587253	ExpressionStatement	val = - 32	1995:8:70399:70408	10587166	1	True				
ANR	10587254	AssignmentExpression	val = - 32		10587166	0		=			
ANR	10587255	Identifier	val		10587166	0					
ANR	10587256	UnaryOperationExpression	- 32		10587166	1					
ANR	10587257	UnaryOperator	-		10587166	0					
ANR	10587258	PrimaryExpression	32		10587166	1					
ANR	10587259	ReturnStatement	return val ;	1998:4:70421:70431	10587166	3	True				
ANR	10587260	Identifier	val		10587166	0					
ANR	10587261	ReturnType	static FT_F26Dot6		10587166	1					
ANR	10587262	Identifier	Round_To_Half_Grid		10587166	2					
ANR	10587263	ParameterList	"TT_ExecContext exc , FT_F26Dot6 distance , FT_F26Dot6 compensation"		10587166	3					
ANR	10587264	Parameter	TT_ExecContext exc	1973:22:69825:69843	10587166	0	True				
ANR	10587265	ParameterType	TT_ExecContext		10587166	0					
ANR	10587266	Identifier	exc		10587166	1					
ANR	10587267	Parameter	FT_F26Dot6 distance	1974:22:69868:69891	10587166	1	True				
ANR	10587268	ParameterType	FT_F26Dot6		10587166	0					
ANR	10587269	Identifier	distance		10587166	1					
ANR	10587270	Parameter	FT_F26Dot6 compensation	1975:22:69916:69943	10587166	2	True				
ANR	10587271	ParameterType	FT_F26Dot6		10587166	0					
ANR	10587272	Identifier	compensation		10587166	1					
ANR	10587273	CFGEntryNode	ENTRY		10587166		True				
ANR	10587274	CFGExitNode	EXIT		10587166		True				
ANR	10587275	Symbol	val		10587166						
ANR	10587276	Symbol	exc		10587166						
ANR	10587277	Symbol	distance		10587166						
ANR	10587278	Symbol	ADD_LONG		10587166						
ANR	10587279	Symbol	compensation		10587166						
ANR	10587280	Symbol	SUB_LONG		10587166						
ANR	10587281	Symbol	NEG_LONG		10587166						
ANR	10587282	Symbol	FT_PIX_FLOOR		10587166						
ANR	10587283	Function	Round_Down_To_Grid	2018:2:71689:72194							
ANR	10587284	FunctionDef	"Round_Down_To_Grid (TT_ExecContext exc , FT_F26Dot6 distance , FT_F26Dot6 compensation)"		10587283	0					
ANR	10587285	CompoundStatement		2022:2:71853:72194	10587283	0					
ANR	10587286	IdentifierDeclStatement	FT_F26Dot6 val ;	2023:4:71859:71874	10587283	0	True				
ANR	10587287	IdentifierDecl	val		10587283	0					
ANR	10587288	IdentifierDeclType	FT_F26Dot6		10587283	0					
ANR	10587289	Identifier	val		10587283	1					
ANR	10587290	ExpressionStatement	FT_UNUSED ( exc )	2025:4:71881:71897	10587283	1	True				
ANR	10587291	CallExpression	FT_UNUSED ( exc )		10587283	0					
ANR	10587292	Callee	FT_UNUSED		10587283	0					
ANR	10587293	Identifier	FT_UNUSED		10587283	0					
ANR	10587294	ArgumentList	exc		10587283	1					
ANR	10587295	Argument	exc		10587283	0					
ANR	10587296	Identifier	exc		10587283	0					
ANR	10587297	IfStatement	if ( distance >= 0 )		10587283	2					
ANR	10587298	Condition	distance >= 0	2028:9:71910:71922	10587283	0	True				
ANR	10587299	RelationalExpression	distance >= 0		10587283	0		>=			
ANR	10587300	Identifier	distance		10587283	0					
ANR	10587301	PrimaryExpression	0		10587283	1					
ANR	10587302	CompoundStatement		8:4:76:76	10587283	1					
ANR	10587303	ExpressionStatement	"val = FT_PIX_FLOOR ( ADD_LONG ( distance , compensation ) )"	2030:6:71938:71994	10587283	0	True				
ANR	10587304	AssignmentExpression	"val = FT_PIX_FLOOR ( ADD_LONG ( distance , compensation ) )"		10587283	0		=			
ANR	10587305	Identifier	val		10587283	0					
ANR	10587306	CallExpression	"FT_PIX_FLOOR ( ADD_LONG ( distance , compensation ) )"		10587283	1					
ANR	10587307	Callee	FT_PIX_FLOOR		10587283	0					
ANR	10587308	Identifier	FT_PIX_FLOOR		10587283	0					
ANR	10587309	ArgumentList	"ADD_LONG ( distance , compensation )"		10587283	1					
ANR	10587310	Argument	"ADD_LONG ( distance , compensation )"		10587283	0					
ANR	10587311	CallExpression	"ADD_LONG ( distance , compensation )"		10587283	0					
ANR	10587312	Callee	ADD_LONG		10587283	0					
ANR	10587313	Identifier	ADD_LONG		10587283	0					
ANR	10587314	ArgumentList	distance		10587283	1					
ANR	10587315	Argument	distance		10587283	0					
ANR	10587316	Identifier	distance		10587283	0					
ANR	10587317	Argument	compensation		10587283	1					
ANR	10587318	Identifier	compensation		10587283	0					
ANR	10587319	IfStatement	if ( val < 0 )		10587283	1					
ANR	10587320	Condition	val < 0	2031:11:72007:72013	10587283	0	True				
ANR	10587321	RelationalExpression	val < 0		10587283	0		<			
ANR	10587322	Identifier	val		10587283	0					
ANR	10587323	PrimaryExpression	0		10587283	1					
ANR	10587324	ExpressionStatement	val = 0	2032:8:72025:72032	10587283	1	True				
ANR	10587325	AssignmentExpression	val = 0		10587283	0		=			
ANR	10587326	Identifier	val		10587283	0					
ANR	10587327	PrimaryExpression	0		10587283	1					
ANR	10587328	ElseStatement	else		10587283	0					
ANR	10587329	CompoundStatement		14:4:199:199	10587283	0					
ANR	10587330	ExpressionStatement	"val = NEG_LONG ( FT_PIX_FLOOR ( SUB_LONG ( compensation , distance ) ) )"	2036:6:72061:72129	10587283	0	True				
ANR	10587331	AssignmentExpression	"val = NEG_LONG ( FT_PIX_FLOOR ( SUB_LONG ( compensation , distance ) ) )"		10587283	0		=			
ANR	10587332	Identifier	val		10587283	0					
ANR	10587333	CallExpression	"NEG_LONG ( FT_PIX_FLOOR ( SUB_LONG ( compensation , distance ) ) )"		10587283	1					
ANR	10587334	Callee	NEG_LONG		10587283	0					
ANR	10587335	Identifier	NEG_LONG		10587283	0					
ANR	10587336	ArgumentList	"FT_PIX_FLOOR ( SUB_LONG ( compensation , distance ) )"		10587283	1					
ANR	10587337	Argument	"FT_PIX_FLOOR ( SUB_LONG ( compensation , distance ) )"		10587283	0					
ANR	10587338	CallExpression	"FT_PIX_FLOOR ( SUB_LONG ( compensation , distance ) )"		10587283	0					
ANR	10587339	Callee	FT_PIX_FLOOR		10587283	0					
ANR	10587340	Identifier	FT_PIX_FLOOR		10587283	0					
ANR	10587341	ArgumentList	"SUB_LONG ( compensation , distance )"		10587283	1					
ANR	10587342	Argument	"SUB_LONG ( compensation , distance )"		10587283	0					
ANR	10587343	CallExpression	"SUB_LONG ( compensation , distance )"		10587283	0					
ANR	10587344	Callee	SUB_LONG		10587283	0					
ANR	10587345	Identifier	SUB_LONG		10587283	0					
ANR	10587346	ArgumentList	compensation		10587283	1					
ANR	10587347	Argument	compensation		10587283	0					
ANR	10587348	Identifier	compensation		10587283	0					
ANR	10587349	Argument	distance		10587283	1					
ANR	10587350	Identifier	distance		10587283	0					
ANR	10587351	IfStatement	if ( val > 0 )		10587283	1					
ANR	10587352	Condition	val > 0	2037:11:72142:72148	10587283	0	True				
ANR	10587353	RelationalExpression	val > 0		10587283	0		>			
ANR	10587354	Identifier	val		10587283	0					
ANR	10587355	PrimaryExpression	0		10587283	1					
ANR	10587356	ExpressionStatement	val = 0	2038:8:72160:72167	10587283	1	True				
ANR	10587357	AssignmentExpression	val = 0		10587283	0		=			
ANR	10587358	Identifier	val		10587283	0					
ANR	10587359	PrimaryExpression	0		10587283	1					
ANR	10587360	ReturnStatement	return val ;	2041:4:72180:72190	10587283	3	True				
ANR	10587361	Identifier	val		10587283	0					
ANR	10587362	ReturnType	static FT_F26Dot6		10587283	1					
ANR	10587363	Identifier	Round_Down_To_Grid		10587283	2					
ANR	10587364	ParameterList	"TT_ExecContext exc , FT_F26Dot6 distance , FT_F26Dot6 compensation"		10587283	3					
ANR	10587365	Parameter	TT_ExecContext exc	2019:22:71729:71747	10587283	0	True				
ANR	10587366	ParameterType	TT_ExecContext		10587283	0					
ANR	10587367	Identifier	exc		10587283	1					
ANR	10587368	Parameter	FT_F26Dot6 distance	2020:22:71772:71795	10587283	1	True				
ANR	10587369	ParameterType	FT_F26Dot6		10587283	0					
ANR	10587370	Identifier	distance		10587283	1					
ANR	10587371	Parameter	FT_F26Dot6 compensation	2021:22:71820:71847	10587283	2	True				
ANR	10587372	ParameterType	FT_F26Dot6		10587283	0					
ANR	10587373	Identifier	compensation		10587283	1					
ANR	10587374	CFGEntryNode	ENTRY		10587283		True				
ANR	10587375	CFGExitNode	EXIT		10587283		True				
ANR	10587376	Symbol	val		10587283						
ANR	10587377	Symbol	exc		10587283						
ANR	10587378	Symbol	distance		10587283						
ANR	10587379	Symbol	ADD_LONG		10587283						
ANR	10587380	Symbol	compensation		10587283						
ANR	10587381	Symbol	SUB_LONG		10587283						
ANR	10587382	Symbol	NEG_LONG		10587283						
ANR	10587383	Symbol	FT_PIX_FLOOR		10587283						
ANR	10587384	Function	Round_Up_To_Grid	2061:2:73448:74005							
ANR	10587385	FunctionDef	"Round_Up_To_Grid (TT_ExecContext exc , FT_F26Dot6 distance , FT_F26Dot6 compensation)"		10587384	0					
ANR	10587386	CompoundStatement		2065:2:73606:74005	10587384	0					
ANR	10587387	IdentifierDeclStatement	FT_F26Dot6 val ;	2066:4:73612:73627	10587384	0	True				
ANR	10587388	IdentifierDecl	val		10587384	0					
ANR	10587389	IdentifierDeclType	FT_F26Dot6		10587384	0					
ANR	10587390	Identifier	val		10587384	1					
ANR	10587391	ExpressionStatement	FT_UNUSED ( exc )	2068:4:73634:73650	10587384	1	True				
ANR	10587392	CallExpression	FT_UNUSED ( exc )		10587384	0					
ANR	10587393	Callee	FT_UNUSED		10587384	0					
ANR	10587394	Identifier	FT_UNUSED		10587384	0					
ANR	10587395	ArgumentList	exc		10587384	1					
ANR	10587396	Argument	exc		10587384	0					
ANR	10587397	Identifier	exc		10587384	0					
ANR	10587398	IfStatement	if ( distance >= 0 )		10587384	2					
ANR	10587399	Condition	distance >= 0	2071:9:73663:73675	10587384	0	True				
ANR	10587400	RelationalExpression	distance >= 0		10587384	0		>=			
ANR	10587401	Identifier	distance		10587384	0					
ANR	10587402	PrimaryExpression	0		10587384	1					
ANR	10587403	CompoundStatement		8:4:76:76	10587384	1					
ANR	10587404	ExpressionStatement	"val = FT_PIX_CEIL_LONG ( ADD_LONG ( distance , compensation ) )"	2073:6:73691:73751	10587384	0	True				
ANR	10587405	AssignmentExpression	"val = FT_PIX_CEIL_LONG ( ADD_LONG ( distance , compensation ) )"		10587384	0		=			
ANR	10587406	Identifier	val		10587384	0					
ANR	10587407	CallExpression	"FT_PIX_CEIL_LONG ( ADD_LONG ( distance , compensation ) )"		10587384	1					
ANR	10587408	Callee	FT_PIX_CEIL_LONG		10587384	0					
ANR	10587409	Identifier	FT_PIX_CEIL_LONG		10587384	0					
ANR	10587410	ArgumentList	"ADD_LONG ( distance , compensation )"		10587384	1					
ANR	10587411	Argument	"ADD_LONG ( distance , compensation )"		10587384	0					
ANR	10587412	CallExpression	"ADD_LONG ( distance , compensation )"		10587384	0					
ANR	10587413	Callee	ADD_LONG		10587384	0					
ANR	10587414	Identifier	ADD_LONG		10587384	0					
ANR	10587415	ArgumentList	distance		10587384	1					
ANR	10587416	Argument	distance		10587384	0					
ANR	10587417	Identifier	distance		10587384	0					
ANR	10587418	Argument	compensation		10587384	1					
ANR	10587419	Identifier	compensation		10587384	0					
ANR	10587420	IfStatement	if ( val < 0 )		10587384	1					
ANR	10587421	Condition	val < 0	2074:11:73764:73770	10587384	0	True				
ANR	10587422	RelationalExpression	val < 0		10587384	0		<			
ANR	10587423	Identifier	val		10587384	0					
ANR	10587424	PrimaryExpression	0		10587384	1					
ANR	10587425	ExpressionStatement	val = 0	2075:8:73782:73789	10587384	1	True				
ANR	10587426	AssignmentExpression	val = 0		10587384	0		=			
ANR	10587427	Identifier	val		10587384	0					
ANR	10587428	PrimaryExpression	0		10587384	1					
ANR	10587429	ElseStatement	else		10587384	0					
ANR	10587430	CompoundStatement		14:4:203:203	10587384	0					
ANR	10587431	ExpressionStatement	"val = NEG_LONG ( FT_PIX_CEIL_LONG ( SUB_LONG ( compensation , distance ) ) )"	2079:6:73818:73940	10587384	0	True				
ANR	10587432	AssignmentExpression	"val = NEG_LONG ( FT_PIX_CEIL_LONG ( SUB_LONG ( compensation , distance ) ) )"		10587384	0		=			
ANR	10587433	Identifier	val		10587384	0					
ANR	10587434	CallExpression	"NEG_LONG ( FT_PIX_CEIL_LONG ( SUB_LONG ( compensation , distance ) ) )"		10587384	1					
ANR	10587435	Callee	NEG_LONG		10587384	0					
ANR	10587436	Identifier	NEG_LONG		10587384	0					
ANR	10587437	ArgumentList	"FT_PIX_CEIL_LONG ( SUB_LONG ( compensation , distance ) )"		10587384	1					
ANR	10587438	Argument	"FT_PIX_CEIL_LONG ( SUB_LONG ( compensation , distance ) )"		10587384	0					
ANR	10587439	CallExpression	"FT_PIX_CEIL_LONG ( SUB_LONG ( compensation , distance ) )"		10587384	0					
ANR	10587440	Callee	FT_PIX_CEIL_LONG		10587384	0					
ANR	10587441	Identifier	FT_PIX_CEIL_LONG		10587384	0					
ANR	10587442	ArgumentList	"SUB_LONG ( compensation , distance )"		10587384	1					
ANR	10587443	Argument	"SUB_LONG ( compensation , distance )"		10587384	0					
ANR	10587444	CallExpression	"SUB_LONG ( compensation , distance )"		10587384	0					
ANR	10587445	Callee	SUB_LONG		10587384	0					
ANR	10587446	Identifier	SUB_LONG		10587384	0					
ANR	10587447	ArgumentList	compensation		10587384	1					
ANR	10587448	Argument	compensation		10587384	0					
ANR	10587449	Identifier	compensation		10587384	0					
ANR	10587450	Argument	distance		10587384	1					
ANR	10587451	Identifier	distance		10587384	0					
ANR	10587452	IfStatement	if ( val > 0 )		10587384	1					
ANR	10587453	Condition	val > 0	2081:11:73953:73959	10587384	0	True				
ANR	10587454	RelationalExpression	val > 0		10587384	0		>			
ANR	10587455	Identifier	val		10587384	0					
ANR	10587456	PrimaryExpression	0		10587384	1					
ANR	10587457	ExpressionStatement	val = 0	2082:8:73971:73978	10587384	1	True				
ANR	10587458	AssignmentExpression	val = 0		10587384	0		=			
ANR	10587459	Identifier	val		10587384	0					
ANR	10587460	PrimaryExpression	0		10587384	1					
ANR	10587461	ReturnStatement	return val ;	2085:4:73991:74001	10587384	3	True				
ANR	10587462	Identifier	val		10587384	0					
ANR	10587463	ReturnType	static FT_F26Dot6		10587384	1					
ANR	10587464	Identifier	Round_Up_To_Grid		10587384	2					
ANR	10587465	ParameterList	"TT_ExecContext exc , FT_F26Dot6 distance , FT_F26Dot6 compensation"		10587384	3					
ANR	10587466	Parameter	TT_ExecContext exc	2062:20:73486:73504	10587384	0	True				
ANR	10587467	ParameterType	TT_ExecContext		10587384	0					
ANR	10587468	Identifier	exc		10587384	1					
ANR	10587469	Parameter	FT_F26Dot6 distance	2063:20:73527:73550	10587384	1	True				
ANR	10587470	ParameterType	FT_F26Dot6		10587384	0					
ANR	10587471	Identifier	distance		10587384	1					
ANR	10587472	Parameter	FT_F26Dot6 compensation	2064:20:73573:73600	10587384	2	True				
ANR	10587473	ParameterType	FT_F26Dot6		10587384	0					
ANR	10587474	Identifier	compensation		10587384	1					
ANR	10587475	CFGEntryNode	ENTRY		10587384		True				
ANR	10587476	CFGExitNode	EXIT		10587384		True				
ANR	10587477	Symbol	val		10587384						
ANR	10587478	Symbol	exc		10587384						
ANR	10587479	Symbol	FT_PIX_CEIL_LONG		10587384						
ANR	10587480	Symbol	distance		10587384						
ANR	10587481	Symbol	ADD_LONG		10587384						
ANR	10587482	Symbol	compensation		10587384						
ANR	10587483	Symbol	SUB_LONG		10587384						
ANR	10587484	Symbol	NEG_LONG		10587384						
ANR	10587485	Function	Round_To_Double_Grid	2105:2:75259:75829							
ANR	10587486	FunctionDef	"Round_To_Double_Grid (TT_ExecContext exc , FT_F26Dot6 distance , FT_F26Dot6 compensation)"		10587485	0					
ANR	10587487	CompoundStatement		2109:2:75429:75829	10587485	0					
ANR	10587488	IdentifierDeclStatement	FT_F26Dot6 val ;	2110:4:75435:75450	10587485	0	True				
ANR	10587489	IdentifierDecl	val		10587485	0					
ANR	10587490	IdentifierDeclType	FT_F26Dot6		10587485	0					
ANR	10587491	Identifier	val		10587485	1					
ANR	10587492	ExpressionStatement	FT_UNUSED ( exc )	2112:4:75457:75473	10587485	1	True				
ANR	10587493	CallExpression	FT_UNUSED ( exc )		10587485	0					
ANR	10587494	Callee	FT_UNUSED		10587485	0					
ANR	10587495	Identifier	FT_UNUSED		10587485	0					
ANR	10587496	ArgumentList	exc		10587485	1					
ANR	10587497	Argument	exc		10587485	0					
ANR	10587498	Identifier	exc		10587485	0					
ANR	10587499	IfStatement	if ( distance >= 0 )		10587485	2					
ANR	10587500	Condition	distance >= 0	2115:9:75486:75498	10587485	0	True				
ANR	10587501	RelationalExpression	distance >= 0		10587485	0		>=			
ANR	10587502	Identifier	distance		10587485	0					
ANR	10587503	PrimaryExpression	0		10587485	1					
ANR	10587504	CompoundStatement		8:4:76:76	10587485	1					
ANR	10587505	ExpressionStatement	"val = FT_PAD_ROUND_LONG ( ADD_LONG ( distance , compensation ) , 32 )"	2117:6:75514:75579	10587485	0	True				
ANR	10587506	AssignmentExpression	"val = FT_PAD_ROUND_LONG ( ADD_LONG ( distance , compensation ) , 32 )"		10587485	0		=			
ANR	10587507	Identifier	val		10587485	0					
ANR	10587508	CallExpression	"FT_PAD_ROUND_LONG ( ADD_LONG ( distance , compensation ) , 32 )"		10587485	1					
ANR	10587509	Callee	FT_PAD_ROUND_LONG		10587485	0					
ANR	10587510	Identifier	FT_PAD_ROUND_LONG		10587485	0					
ANR	10587511	ArgumentList	"ADD_LONG ( distance , compensation )"		10587485	1					
ANR	10587512	Argument	"ADD_LONG ( distance , compensation )"		10587485	0					
ANR	10587513	CallExpression	"ADD_LONG ( distance , compensation )"		10587485	0					
ANR	10587514	Callee	ADD_LONG		10587485	0					
ANR	10587515	Identifier	ADD_LONG		10587485	0					
ANR	10587516	ArgumentList	distance		10587485	1					
ANR	10587517	Argument	distance		10587485	0					
ANR	10587518	Identifier	distance		10587485	0					
ANR	10587519	Argument	compensation		10587485	1					
ANR	10587520	Identifier	compensation		10587485	0					
ANR	10587521	Argument	32		10587485	1					
ANR	10587522	PrimaryExpression	32		10587485	0					
ANR	10587523	IfStatement	if ( val < 0 )		10587485	1					
ANR	10587524	Condition	val < 0	2118:11:75592:75598	10587485	0	True				
ANR	10587525	RelationalExpression	val < 0		10587485	0		<			
ANR	10587526	Identifier	val		10587485	0					
ANR	10587527	PrimaryExpression	0		10587485	1					
ANR	10587528	ExpressionStatement	val = 0	2119:8:75610:75617	10587485	1	True				
ANR	10587529	AssignmentExpression	val = 0		10587485	0		=			
ANR	10587530	Identifier	val		10587485	0					
ANR	10587531	PrimaryExpression	0		10587485	1					
ANR	10587532	ElseStatement	else		10587485	0					
ANR	10587533	CompoundStatement		14:4:208:208	10587485	0					
ANR	10587534	ExpressionStatement	"val = NEG_LONG ( FT_PAD_ROUND_LONG ( SUB_LONG ( compensation , distance ) , 32 ) )"	2123:6:75646:75764	10587485	0	True				
ANR	10587535	AssignmentExpression	"val = NEG_LONG ( FT_PAD_ROUND_LONG ( SUB_LONG ( compensation , distance ) , 32 ) )"		10587485	0		=			
ANR	10587536	Identifier	val		10587485	0					
ANR	10587537	CallExpression	"NEG_LONG ( FT_PAD_ROUND_LONG ( SUB_LONG ( compensation , distance ) , 32 ) )"		10587485	1					
ANR	10587538	Callee	NEG_LONG		10587485	0					
ANR	10587539	Identifier	NEG_LONG		10587485	0					
ANR	10587540	ArgumentList	"FT_PAD_ROUND_LONG ( SUB_LONG ( compensation , distance ) , 32 )"		10587485	1					
ANR	10587541	Argument	"FT_PAD_ROUND_LONG ( SUB_LONG ( compensation , distance ) , 32 )"		10587485	0					
ANR	10587542	CallExpression	"FT_PAD_ROUND_LONG ( SUB_LONG ( compensation , distance ) , 32 )"		10587485	0					
ANR	10587543	Callee	FT_PAD_ROUND_LONG		10587485	0					
ANR	10587544	Identifier	FT_PAD_ROUND_LONG		10587485	0					
ANR	10587545	ArgumentList	"SUB_LONG ( compensation , distance )"		10587485	1					
ANR	10587546	Argument	"SUB_LONG ( compensation , distance )"		10587485	0					
ANR	10587547	CallExpression	"SUB_LONG ( compensation , distance )"		10587485	0					
ANR	10587548	Callee	SUB_LONG		10587485	0					
ANR	10587549	Identifier	SUB_LONG		10587485	0					
ANR	10587550	ArgumentList	compensation		10587485	1					
ANR	10587551	Argument	compensation		10587485	0					
ANR	10587552	Identifier	compensation		10587485	0					
ANR	10587553	Argument	distance		10587485	1					
ANR	10587554	Identifier	distance		10587485	0					
ANR	10587555	Argument	32		10587485	1					
ANR	10587556	PrimaryExpression	32		10587485	0					
ANR	10587557	IfStatement	if ( val > 0 )		10587485	1					
ANR	10587558	Condition	val > 0	2125:11:75777:75783	10587485	0	True				
ANR	10587559	RelationalExpression	val > 0		10587485	0		>			
ANR	10587560	Identifier	val		10587485	0					
ANR	10587561	PrimaryExpression	0		10587485	1					
ANR	10587562	ExpressionStatement	val = 0	2126:8:75795:75802	10587485	1	True				
ANR	10587563	AssignmentExpression	val = 0		10587485	0		=			
ANR	10587564	Identifier	val		10587485	0					
ANR	10587565	PrimaryExpression	0		10587485	1					
ANR	10587566	ReturnStatement	return val ;	2129:4:75815:75825	10587485	3	True				
ANR	10587567	Identifier	val		10587485	0					
ANR	10587568	ReturnType	static FT_F26Dot6		10587485	1					
ANR	10587569	Identifier	Round_To_Double_Grid		10587485	2					
ANR	10587570	ParameterList	"TT_ExecContext exc , FT_F26Dot6 distance , FT_F26Dot6 compensation"		10587485	3					
ANR	10587571	Parameter	TT_ExecContext exc	2106:24:75301:75319	10587485	0	True				
ANR	10587572	ParameterType	TT_ExecContext		10587485	0					
ANR	10587573	Identifier	exc		10587485	1					
ANR	10587574	Parameter	FT_F26Dot6 distance	2107:24:75346:75369	10587485	1	True				
ANR	10587575	ParameterType	FT_F26Dot6		10587485	0					
ANR	10587576	Identifier	distance		10587485	1					
ANR	10587577	Parameter	FT_F26Dot6 compensation	2108:24:75396:75423	10587485	2	True				
ANR	10587578	ParameterType	FT_F26Dot6		10587485	0					
ANR	10587579	Identifier	compensation		10587485	1					
ANR	10587580	CFGEntryNode	ENTRY		10587485		True				
ANR	10587581	CFGExitNode	EXIT		10587485		True				
ANR	10587582	Symbol	val		10587485						
ANR	10587583	Symbol	exc		10587485						
ANR	10587584	Symbol	distance		10587485						
ANR	10587585	Symbol	ADD_LONG		10587485						
ANR	10587586	Symbol	compensation		10587485						
ANR	10587587	Symbol	SUB_LONG		10587485						
ANR	10587588	Symbol	NEG_LONG		10587485						
ANR	10587589	Symbol	FT_PAD_ROUND_LONG		10587485						
ANR	10587590	Function	Round_Super	2155:2:77551:78263							
ANR	10587591	FunctionDef	"Round_Super (TT_ExecContext exc , FT_F26Dot6 distance , FT_F26Dot6 compensation)"		10587590	0					
ANR	10587592	CompoundStatement		2159:2:77694:78263	10587590	0					
ANR	10587593	IdentifierDeclStatement	FT_F26Dot6 val ;	2160:4:77700:77715	10587590	0	True				
ANR	10587594	IdentifierDecl	val		10587590	0					
ANR	10587595	IdentifierDeclType	FT_F26Dot6		10587590	0					
ANR	10587596	Identifier	val		10587590	1					
ANR	10587597	IfStatement	if ( distance >= 0 )		10587590	1					
ANR	10587598	Condition	distance >= 0	2163:9:77728:77740	10587590	0	True				
ANR	10587599	RelationalExpression	distance >= 0		10587590	0		>=			
ANR	10587600	Identifier	distance		10587590	0					
ANR	10587601	PrimaryExpression	0		10587590	1					
ANR	10587602	CompoundStatement		6:4:53:53	10587590	1					
ANR	10587603	ExpressionStatement	"val = ADD_LONG ( distance , exc -> threshold - exc -> phase + compensation ) & - exc -> period"	2165:6:77756:77877	10587590	0	True				
ANR	10587604	AssignmentExpression	"val = ADD_LONG ( distance , exc -> threshold - exc -> phase + compensation ) & - exc -> period"		10587590	0		=			
ANR	10587605	Identifier	val		10587590	0					
ANR	10587606	BitAndExpression	"ADD_LONG ( distance , exc -> threshold - exc -> phase + compensation ) & - exc -> period"		10587590	1		&			
ANR	10587607	CallExpression	"ADD_LONG ( distance , exc -> threshold - exc -> phase + compensation )"		10587590	0					
ANR	10587608	Callee	ADD_LONG		10587590	0					
ANR	10587609	Identifier	ADD_LONG		10587590	0					
ANR	10587610	ArgumentList	distance		10587590	1					
ANR	10587611	Argument	distance		10587590	0					
ANR	10587612	Identifier	distance		10587590	0					
ANR	10587613	Argument	exc -> threshold - exc -> phase + compensation		10587590	1					
ANR	10587614	AdditiveExpression	exc -> threshold - exc -> phase + compensation		10587590	0		-			
ANR	10587615	PtrMemberAccess	exc -> threshold		10587590	0					
ANR	10587616	Identifier	exc		10587590	0					
ANR	10587617	Identifier	threshold		10587590	1					
ANR	10587618	AdditiveExpression	exc -> phase + compensation		10587590	1		+			
ANR	10587619	PtrMemberAccess	exc -> phase		10587590	0					
ANR	10587620	Identifier	exc		10587590	0					
ANR	10587621	Identifier	phase		10587590	1					
ANR	10587622	Identifier	compensation		10587590	1					
ANR	10587623	UnaryOperationExpression	- exc -> period		10587590	1					
ANR	10587624	UnaryOperator	-		10587590	0					
ANR	10587625	PtrMemberAccess	exc -> period		10587590	1					
ANR	10587626	Identifier	exc		10587590	0					
ANR	10587627	Identifier	period		10587590	1					
ANR	10587628	ExpressionStatement	"val = ADD_LONG ( val , exc -> phase )"	2168:6:77885:77918	10587590	1	True				
ANR	10587629	AssignmentExpression	"val = ADD_LONG ( val , exc -> phase )"		10587590	0		=			
ANR	10587630	Identifier	val		10587590	0					
ANR	10587631	CallExpression	"ADD_LONG ( val , exc -> phase )"		10587590	1					
ANR	10587632	Callee	ADD_LONG		10587590	0					
ANR	10587633	Identifier	ADD_LONG		10587590	0					
ANR	10587634	ArgumentList	val		10587590	1					
ANR	10587635	Argument	val		10587590	0					
ANR	10587636	Identifier	val		10587590	0					
ANR	10587637	Argument	exc -> phase		10587590	1					
ANR	10587638	PtrMemberAccess	exc -> phase		10587590	0					
ANR	10587639	Identifier	exc		10587590	0					
ANR	10587640	Identifier	phase		10587590	1					
ANR	10587641	IfStatement	if ( val < 0 )		10587590	2					
ANR	10587642	Condition	val < 0	2169:11:77931:77937	10587590	0	True				
ANR	10587643	RelationalExpression	val < 0		10587590	0		<			
ANR	10587644	Identifier	val		10587590	0					
ANR	10587645	PrimaryExpression	0		10587590	1					
ANR	10587646	ExpressionStatement	val = exc -> phase	2170:8:77949:77965	10587590	1	True				
ANR	10587647	AssignmentExpression	val = exc -> phase		10587590	0		=			
ANR	10587648	Identifier	val		10587590	0					
ANR	10587649	PtrMemberAccess	exc -> phase		10587590	1					
ANR	10587650	Identifier	exc		10587590	0					
ANR	10587651	Identifier	phase		10587590	1					
ANR	10587652	ElseStatement	else		10587590	0					
ANR	10587653	CompoundStatement		15:4:291:291	10587590	0					
ANR	10587654	ExpressionStatement	"val = NEG_LONG ( SUB_LONG ( exc -> threshold - exc -> phase + compensation , distance ) & - exc -> period )"	2174:6:77994:78147	10587590	0	True				
ANR	10587655	AssignmentExpression	"val = NEG_LONG ( SUB_LONG ( exc -> threshold - exc -> phase + compensation , distance ) & - exc -> period )"		10587590	0		=			
ANR	10587656	Identifier	val		10587590	0					
ANR	10587657	CallExpression	"NEG_LONG ( SUB_LONG ( exc -> threshold - exc -> phase + compensation , distance ) & - exc -> period )"		10587590	1					
ANR	10587658	Callee	NEG_LONG		10587590	0					
ANR	10587659	Identifier	NEG_LONG		10587590	0					
ANR	10587660	ArgumentList	"SUB_LONG ( exc -> threshold - exc -> phase + compensation , distance ) & - exc -> period"		10587590	1					
ANR	10587661	Argument	"SUB_LONG ( exc -> threshold - exc -> phase + compensation , distance ) & - exc -> period"		10587590	0					
ANR	10587662	BitAndExpression	"SUB_LONG ( exc -> threshold - exc -> phase + compensation , distance ) & - exc -> period"		10587590	0		&			
ANR	10587663	CallExpression	"SUB_LONG ( exc -> threshold - exc -> phase + compensation , distance )"		10587590	0					
ANR	10587664	Callee	SUB_LONG		10587590	0					
ANR	10587665	Identifier	SUB_LONG		10587590	0					
ANR	10587666	ArgumentList	exc -> threshold - exc -> phase + compensation		10587590	1					
ANR	10587667	Argument	exc -> threshold - exc -> phase + compensation		10587590	0					
ANR	10587668	AdditiveExpression	exc -> threshold - exc -> phase + compensation		10587590	0		-			
ANR	10587669	PtrMemberAccess	exc -> threshold		10587590	0					
ANR	10587670	Identifier	exc		10587590	0					
ANR	10587671	Identifier	threshold		10587590	1					
ANR	10587672	AdditiveExpression	exc -> phase + compensation		10587590	1		+			
ANR	10587673	PtrMemberAccess	exc -> phase		10587590	0					
ANR	10587674	Identifier	exc		10587590	0					
ANR	10587675	Identifier	phase		10587590	1					
ANR	10587676	Identifier	compensation		10587590	1					
ANR	10587677	Argument	distance		10587590	1					
ANR	10587678	Identifier	distance		10587590	0					
ANR	10587679	UnaryOperationExpression	- exc -> period		10587590	1					
ANR	10587680	UnaryOperator	-		10587590	0					
ANR	10587681	PtrMemberAccess	exc -> period		10587590	1					
ANR	10587682	Identifier	exc		10587590	0					
ANR	10587683	Identifier	period		10587590	1					
ANR	10587684	ExpressionStatement	"val = SUB_LONG ( val , exc -> phase )"	2177:6:78155:78188	10587590	1	True				
ANR	10587685	AssignmentExpression	"val = SUB_LONG ( val , exc -> phase )"		10587590	0		=			
ANR	10587686	Identifier	val		10587590	0					
ANR	10587687	CallExpression	"SUB_LONG ( val , exc -> phase )"		10587590	1					
ANR	10587688	Callee	SUB_LONG		10587590	0					
ANR	10587689	Identifier	SUB_LONG		10587590	0					
ANR	10587690	ArgumentList	val		10587590	1					
ANR	10587691	Argument	val		10587590	0					
ANR	10587692	Identifier	val		10587590	0					
ANR	10587693	Argument	exc -> phase		10587590	1					
ANR	10587694	PtrMemberAccess	exc -> phase		10587590	0					
ANR	10587695	Identifier	exc		10587590	0					
ANR	10587696	Identifier	phase		10587590	1					
ANR	10587697	IfStatement	if ( val > 0 )		10587590	2					
ANR	10587698	Condition	val > 0	2178:11:78201:78207	10587590	0	True				
ANR	10587699	RelationalExpression	val > 0		10587590	0		>			
ANR	10587700	Identifier	val		10587590	0					
ANR	10587701	PrimaryExpression	0		10587590	1					
ANR	10587702	ExpressionStatement	val = - exc -> phase	2179:8:78219:78236	10587590	1	True				
ANR	10587703	AssignmentExpression	val = - exc -> phase		10587590	0		=			
ANR	10587704	Identifier	val		10587590	0					
ANR	10587705	UnaryOperationExpression	- exc -> phase		10587590	1					
ANR	10587706	UnaryOperator	-		10587590	0					
ANR	10587707	PtrMemberAccess	exc -> phase		10587590	1					
ANR	10587708	Identifier	exc		10587590	0					
ANR	10587709	Identifier	phase		10587590	1					
ANR	10587710	ReturnStatement	return val ;	2182:4:78249:78259	10587590	2	True				
ANR	10587711	Identifier	val		10587590	0					
ANR	10587712	ReturnType	static FT_F26Dot6		10587590	1					
ANR	10587713	Identifier	Round_Super		10587590	2					
ANR	10587714	ParameterList	"TT_ExecContext exc , FT_F26Dot6 distance , FT_F26Dot6 compensation"		10587590	3					
ANR	10587715	Parameter	TT_ExecContext exc	2156:15:77584:77602	10587590	0	True				
ANR	10587716	ParameterType	TT_ExecContext		10587590	0					
ANR	10587717	Identifier	exc		10587590	1					
ANR	10587718	Parameter	FT_F26Dot6 distance	2157:15:77620:77643	10587590	1	True				
ANR	10587719	ParameterType	FT_F26Dot6		10587590	0					
ANR	10587720	Identifier	distance		10587590	1					
ANR	10587721	Parameter	FT_F26Dot6 compensation	2158:15:77661:77688	10587590	2	True				
ANR	10587722	ParameterType	FT_F26Dot6		10587590	0					
ANR	10587723	Identifier	compensation		10587590	1					
ANR	10587724	CFGEntryNode	ENTRY		10587590		True				
ANR	10587725	CFGExitNode	EXIT		10587590		True				
ANR	10587726	Symbol	val		10587590						
ANR	10587727	Symbol	exc -> phase		10587590						
ANR	10587728	Symbol	exc		10587590						
ANR	10587729	Symbol	exc -> period		10587590						
ANR	10587730	Symbol	distance		10587590						
ANR	10587731	Symbol	* exc		10587590						
ANR	10587732	Symbol	exc -> threshold		10587590						
ANR	10587733	Symbol	ADD_LONG		10587590						
ANR	10587734	Symbol	compensation		10587590						
ANR	10587735	Symbol	SUB_LONG		10587590						
ANR	10587736	Symbol	NEG_LONG		10587590						
ANR	10587737	Function	Round_Super_45	2206:2:79829:80592							
ANR	10587738	FunctionDef	"Round_Super_45 (TT_ExecContext exc , FT_F26Dot6 distance , FT_F26Dot6 compensation)"		10587737	0					
ANR	10587739	CompoundStatement		2210:2:79981:80592	10587737	0					
ANR	10587740	IdentifierDeclStatement	FT_F26Dot6 val ;	2211:4:79987:80002	10587737	0	True				
ANR	10587741	IdentifierDecl	val		10587737	0					
ANR	10587742	IdentifierDeclType	FT_F26Dot6		10587737	0					
ANR	10587743	Identifier	val		10587737	1					
ANR	10587744	IfStatement	if ( distance >= 0 )		10587737	1					
ANR	10587745	Condition	distance >= 0	2214:9:80015:80027	10587737	0	True				
ANR	10587746	RelationalExpression	distance >= 0		10587737	0		>=			
ANR	10587747	Identifier	distance		10587737	0					
ANR	10587748	PrimaryExpression	0		10587737	1					
ANR	10587749	CompoundStatement		6:4:53:53	10587737	1					
ANR	10587750	ExpressionStatement	"val = ( ADD_LONG ( distance , exc -> threshold - exc -> phase + compensation ) / exc -> period ) * exc -> period"	2216:6:80043:80185	10587737	0	True				
ANR	10587751	AssignmentExpression	"val = ( ADD_LONG ( distance , exc -> threshold - exc -> phase + compensation ) / exc -> period ) * exc -> period"		10587737	0		=			
ANR	10587752	Identifier	val		10587737	0					
ANR	10587753	MultiplicativeExpression	"( ADD_LONG ( distance , exc -> threshold - exc -> phase + compensation ) / exc -> period ) * exc -> period"		10587737	1		*			
ANR	10587754	MultiplicativeExpression	"ADD_LONG ( distance , exc -> threshold - exc -> phase + compensation ) / exc -> period"		10587737	0		/			
ANR	10587755	CallExpression	"ADD_LONG ( distance , exc -> threshold - exc -> phase + compensation )"		10587737	0					
ANR	10587756	Callee	ADD_LONG		10587737	0					
ANR	10587757	Identifier	ADD_LONG		10587737	0					
ANR	10587758	ArgumentList	distance		10587737	1					
ANR	10587759	Argument	distance		10587737	0					
ANR	10587760	Identifier	distance		10587737	0					
ANR	10587761	Argument	exc -> threshold - exc -> phase + compensation		10587737	1					
ANR	10587762	AdditiveExpression	exc -> threshold - exc -> phase + compensation		10587737	0		-			
ANR	10587763	PtrMemberAccess	exc -> threshold		10587737	0					
ANR	10587764	Identifier	exc		10587737	0					
ANR	10587765	Identifier	threshold		10587737	1					
ANR	10587766	AdditiveExpression	exc -> phase + compensation		10587737	1		+			
ANR	10587767	PtrMemberAccess	exc -> phase		10587737	0					
ANR	10587768	Identifier	exc		10587737	0					
ANR	10587769	Identifier	phase		10587737	1					
ANR	10587770	Identifier	compensation		10587737	1					
ANR	10587771	PtrMemberAccess	exc -> period		10587737	1					
ANR	10587772	Identifier	exc		10587737	0					
ANR	10587773	Identifier	period		10587737	1					
ANR	10587774	PtrMemberAccess	exc -> period		10587737	1					
ANR	10587775	Identifier	exc		10587737	0					
ANR	10587776	Identifier	period		10587737	1					
ANR	10587777	ExpressionStatement	"val = ADD_LONG ( val , exc -> phase )"	2219:6:80193:80226	10587737	1	True				
ANR	10587778	AssignmentExpression	"val = ADD_LONG ( val , exc -> phase )"		10587737	0		=			
ANR	10587779	Identifier	val		10587737	0					
ANR	10587780	CallExpression	"ADD_LONG ( val , exc -> phase )"		10587737	1					
ANR	10587781	Callee	ADD_LONG		10587737	0					
ANR	10587782	Identifier	ADD_LONG		10587737	0					
ANR	10587783	ArgumentList	val		10587737	1					
ANR	10587784	Argument	val		10587737	0					
ANR	10587785	Identifier	val		10587737	0					
ANR	10587786	Argument	exc -> phase		10587737	1					
ANR	10587787	PtrMemberAccess	exc -> phase		10587737	0					
ANR	10587788	Identifier	exc		10587737	0					
ANR	10587789	Identifier	phase		10587737	1					
ANR	10587790	IfStatement	if ( val < 0 )		10587737	2					
ANR	10587791	Condition	val < 0	2220:11:80239:80245	10587737	0	True				
ANR	10587792	RelationalExpression	val < 0		10587737	0		<			
ANR	10587793	Identifier	val		10587737	0					
ANR	10587794	PrimaryExpression	0		10587737	1					
ANR	10587795	ExpressionStatement	val = exc -> phase	2221:8:80257:80273	10587737	1	True				
ANR	10587796	AssignmentExpression	val = exc -> phase		10587737	0		=			
ANR	10587797	Identifier	val		10587737	0					
ANR	10587798	PtrMemberAccess	exc -> phase		10587737	1					
ANR	10587799	Identifier	exc		10587737	0					
ANR	10587800	Identifier	phase		10587737	1					
ANR	10587801	ElseStatement	else		10587737	0					
ANR	10587802	CompoundStatement		15:4:312:312	10587737	0					
ANR	10587803	ExpressionStatement	"val = NEG_LONG ( ( SUB_LONG ( exc -> threshold - exc -> phase + compensation , distance ) / exc -> period ) * exc -> period )"	2225:6:80302:80476	10587737	0	True				
ANR	10587804	AssignmentExpression	"val = NEG_LONG ( ( SUB_LONG ( exc -> threshold - exc -> phase + compensation , distance ) / exc -> period ) * exc -> period )"		10587737	0		=			
ANR	10587805	Identifier	val		10587737	0					
ANR	10587806	CallExpression	"NEG_LONG ( ( SUB_LONG ( exc -> threshold - exc -> phase + compensation , distance ) / exc -> period ) * exc -> period )"		10587737	1					
ANR	10587807	Callee	NEG_LONG		10587737	0					
ANR	10587808	Identifier	NEG_LONG		10587737	0					
ANR	10587809	ArgumentList	"( SUB_LONG ( exc -> threshold - exc -> phase + compensation , distance ) / exc -> period ) * exc -> period"		10587737	1					
ANR	10587810	Argument	"( SUB_LONG ( exc -> threshold - exc -> phase + compensation , distance ) / exc -> period ) * exc -> period"		10587737	0					
ANR	10587811	MultiplicativeExpression	"( SUB_LONG ( exc -> threshold - exc -> phase + compensation , distance ) / exc -> period ) * exc -> period"		10587737	0		*			
ANR	10587812	MultiplicativeExpression	"SUB_LONG ( exc -> threshold - exc -> phase + compensation , distance ) / exc -> period"		10587737	0		/			
ANR	10587813	CallExpression	"SUB_LONG ( exc -> threshold - exc -> phase + compensation , distance )"		10587737	0					
ANR	10587814	Callee	SUB_LONG		10587737	0					
ANR	10587815	Identifier	SUB_LONG		10587737	0					
ANR	10587816	ArgumentList	exc -> threshold - exc -> phase + compensation		10587737	1					
ANR	10587817	Argument	exc -> threshold - exc -> phase + compensation		10587737	0					
ANR	10587818	AdditiveExpression	exc -> threshold - exc -> phase + compensation		10587737	0		-			
ANR	10587819	PtrMemberAccess	exc -> threshold		10587737	0					
ANR	10587820	Identifier	exc		10587737	0					
ANR	10587821	Identifier	threshold		10587737	1					
ANR	10587822	AdditiveExpression	exc -> phase + compensation		10587737	1		+			
ANR	10587823	PtrMemberAccess	exc -> phase		10587737	0					
ANR	10587824	Identifier	exc		10587737	0					
ANR	10587825	Identifier	phase		10587737	1					
ANR	10587826	Identifier	compensation		10587737	1					
ANR	10587827	Argument	distance		10587737	1					
ANR	10587828	Identifier	distance		10587737	0					
ANR	10587829	PtrMemberAccess	exc -> period		10587737	1					
ANR	10587830	Identifier	exc		10587737	0					
ANR	10587831	Identifier	period		10587737	1					
ANR	10587832	PtrMemberAccess	exc -> period		10587737	1					
ANR	10587833	Identifier	exc		10587737	0					
ANR	10587834	Identifier	period		10587737	1					
ANR	10587835	ExpressionStatement	"val = SUB_LONG ( val , exc -> phase )"	2228:6:80484:80517	10587737	1	True				
ANR	10587836	AssignmentExpression	"val = SUB_LONG ( val , exc -> phase )"		10587737	0		=			
ANR	10587837	Identifier	val		10587737	0					
ANR	10587838	CallExpression	"SUB_LONG ( val , exc -> phase )"		10587737	1					
ANR	10587839	Callee	SUB_LONG		10587737	0					
ANR	10587840	Identifier	SUB_LONG		10587737	0					
ANR	10587841	ArgumentList	val		10587737	1					
ANR	10587842	Argument	val		10587737	0					
ANR	10587843	Identifier	val		10587737	0					
ANR	10587844	Argument	exc -> phase		10587737	1					
ANR	10587845	PtrMemberAccess	exc -> phase		10587737	0					
ANR	10587846	Identifier	exc		10587737	0					
ANR	10587847	Identifier	phase		10587737	1					
ANR	10587848	IfStatement	if ( val > 0 )		10587737	2					
ANR	10587849	Condition	val > 0	2229:11:80530:80536	10587737	0	True				
ANR	10587850	RelationalExpression	val > 0		10587737	0		>			
ANR	10587851	Identifier	val		10587737	0					
ANR	10587852	PrimaryExpression	0		10587737	1					
ANR	10587853	ExpressionStatement	val = - exc -> phase	2230:8:80548:80565	10587737	1	True				
ANR	10587854	AssignmentExpression	val = - exc -> phase		10587737	0		=			
ANR	10587855	Identifier	val		10587737	0					
ANR	10587856	UnaryOperationExpression	- exc -> phase		10587737	1					
ANR	10587857	UnaryOperator	-		10587737	0					
ANR	10587858	PtrMemberAccess	exc -> phase		10587737	1					
ANR	10587859	Identifier	exc		10587737	0					
ANR	10587860	Identifier	phase		10587737	1					
ANR	10587861	ReturnStatement	return val ;	2233:4:80578:80588	10587737	2	True				
ANR	10587862	Identifier	val		10587737	0					
ANR	10587863	ReturnType	static FT_F26Dot6		10587737	1					
ANR	10587864	Identifier	Round_Super_45		10587737	2					
ANR	10587865	ParameterList	"TT_ExecContext exc , FT_F26Dot6 distance , FT_F26Dot6 compensation"		10587737	3					
ANR	10587866	Parameter	TT_ExecContext exc	2207:18:79865:79883	10587737	0	True				
ANR	10587867	ParameterType	TT_ExecContext		10587737	0					
ANR	10587868	Identifier	exc		10587737	1					
ANR	10587869	Parameter	FT_F26Dot6 distance	2208:18:79904:79927	10587737	1	True				
ANR	10587870	ParameterType	FT_F26Dot6		10587737	0					
ANR	10587871	Identifier	distance		10587737	1					
ANR	10587872	Parameter	FT_F26Dot6 compensation	2209:18:79948:79975	10587737	2	True				
ANR	10587873	ParameterType	FT_F26Dot6		10587737	0					
ANR	10587874	Identifier	compensation		10587737	1					
ANR	10587875	CFGEntryNode	ENTRY		10587737		True				
ANR	10587876	CFGExitNode	EXIT		10587737		True				
ANR	10587877	Symbol	val		10587737						
ANR	10587878	Symbol	exc -> phase		10587737						
ANR	10587879	Symbol	exc		10587737						
ANR	10587880	Symbol	exc -> period		10587737						
ANR	10587881	Symbol	distance		10587737						
ANR	10587882	Symbol	exc -> threshold		10587737						
ANR	10587883	Symbol	* exc		10587737						
ANR	10587884	Symbol	ADD_LONG		10587737						
ANR	10587885	Symbol	compensation		10587737						
ANR	10587886	Symbol	SUB_LONG		10587737						
ANR	10587887	Symbol	NEG_LONG		10587737						
ANR	10587888	Function	Compute_Round	2248:2:81456:82386							
ANR	10587889	FunctionDef	"Compute_Round (TT_ExecContext exc , FT_Byte round_mode)"		10587888	0					
ANR	10587890	CompoundStatement		2251:2:81554:82386	10587888	0					
ANR	10587891	SwitchStatement	switch ( round_mode )		10587888	0					
ANR	10587892	Condition	round_mode	2252:13:81569:81578	10587888	0	True				
ANR	10587893	Identifier	round_mode		10587888	0					
ANR	10587894	CompoundStatement		3:4:31:31	10587888	1					
ANR	10587895	Label	case TT_Round_Off :	2254:4:81592:81609	10587888	0	True				
ANR	10587896	Identifier	TT_Round_Off		10587888	0					
ANR	10587897	ExpressionStatement	exc -> func_round = ( TT_Round_Func ) Round_None	2255:6:81617:81660	10587888	1	True				
ANR	10587898	AssignmentExpression	exc -> func_round = ( TT_Round_Func ) Round_None		10587888	0		=			
ANR	10587899	PtrMemberAccess	exc -> func_round		10587888	0					
ANR	10587900	Identifier	exc		10587888	0					
ANR	10587901	Identifier	func_round		10587888	1					
ANR	10587902	CastExpression	( TT_Round_Func ) Round_None		10587888	1					
ANR	10587903	CastTarget	TT_Round_Func		10587888	0					
ANR	10587904	Identifier	Round_None		10587888	1					
ANR	10587905	BreakStatement	break ;	2256:6:81668:81673	10587888	2	True				
ANR	10587906	Label	case TT_Round_To_Grid :	2258:4:81680:81701	10587888	3	True				
ANR	10587907	Identifier	TT_Round_To_Grid		10587888	0					
ANR	10587908	ExpressionStatement	exc -> func_round = ( TT_Round_Func ) Round_To_Grid	2259:6:81709:81755	10587888	4	True				
ANR	10587909	AssignmentExpression	exc -> func_round = ( TT_Round_Func ) Round_To_Grid		10587888	0		=			
ANR	10587910	PtrMemberAccess	exc -> func_round		10587888	0					
ANR	10587911	Identifier	exc		10587888	0					
ANR	10587912	Identifier	func_round		10587888	1					
ANR	10587913	CastExpression	( TT_Round_Func ) Round_To_Grid		10587888	1					
ANR	10587914	CastTarget	TT_Round_Func		10587888	0					
ANR	10587915	Identifier	Round_To_Grid		10587888	1					
ANR	10587916	BreakStatement	break ;	2260:6:81763:81768	10587888	5	True				
ANR	10587917	Label	case TT_Round_Up_To_Grid :	2262:4:81775:81799	10587888	6	True				
ANR	10587918	Identifier	TT_Round_Up_To_Grid		10587888	0					
ANR	10587919	ExpressionStatement	exc -> func_round = ( TT_Round_Func ) Round_Up_To_Grid	2263:6:81807:81856	10587888	7	True				
ANR	10587920	AssignmentExpression	exc -> func_round = ( TT_Round_Func ) Round_Up_To_Grid		10587888	0		=			
ANR	10587921	PtrMemberAccess	exc -> func_round		10587888	0					
ANR	10587922	Identifier	exc		10587888	0					
ANR	10587923	Identifier	func_round		10587888	1					
ANR	10587924	CastExpression	( TT_Round_Func ) Round_Up_To_Grid		10587888	1					
ANR	10587925	CastTarget	TT_Round_Func		10587888	0					
ANR	10587926	Identifier	Round_Up_To_Grid		10587888	1					
ANR	10587927	BreakStatement	break ;	2264:6:81864:81869	10587888	8	True				
ANR	10587928	Label	case TT_Round_Down_To_Grid :	2266:4:81876:81902	10587888	9	True				
ANR	10587929	Identifier	TT_Round_Down_To_Grid		10587888	0					
ANR	10587930	ExpressionStatement	exc -> func_round = ( TT_Round_Func ) Round_Down_To_Grid	2267:6:81910:81961	10587888	10	True				
ANR	10587931	AssignmentExpression	exc -> func_round = ( TT_Round_Func ) Round_Down_To_Grid		10587888	0		=			
ANR	10587932	PtrMemberAccess	exc -> func_round		10587888	0					
ANR	10587933	Identifier	exc		10587888	0					
ANR	10587934	Identifier	func_round		10587888	1					
ANR	10587935	CastExpression	( TT_Round_Func ) Round_Down_To_Grid		10587888	1					
ANR	10587936	CastTarget	TT_Round_Func		10587888	0					
ANR	10587937	Identifier	Round_Down_To_Grid		10587888	1					
ANR	10587938	BreakStatement	break ;	2268:6:81969:81974	10587888	11	True				
ANR	10587939	Label	case TT_Round_To_Half_Grid :	2270:4:81981:82007	10587888	12	True				
ANR	10587940	Identifier	TT_Round_To_Half_Grid		10587888	0					
ANR	10587941	ExpressionStatement	exc -> func_round = ( TT_Round_Func ) Round_To_Half_Grid	2271:6:82015:82066	10587888	13	True				
ANR	10587942	AssignmentExpression	exc -> func_round = ( TT_Round_Func ) Round_To_Half_Grid		10587888	0		=			
ANR	10587943	PtrMemberAccess	exc -> func_round		10587888	0					
ANR	10587944	Identifier	exc		10587888	0					
ANR	10587945	Identifier	func_round		10587888	1					
ANR	10587946	CastExpression	( TT_Round_Func ) Round_To_Half_Grid		10587888	1					
ANR	10587947	CastTarget	TT_Round_Func		10587888	0					
ANR	10587948	Identifier	Round_To_Half_Grid		10587888	1					
ANR	10587949	BreakStatement	break ;	2272:6:82074:82079	10587888	14	True				
ANR	10587950	Label	case TT_Round_To_Double_Grid :	2274:4:82086:82114	10587888	15	True				
ANR	10587951	Identifier	TT_Round_To_Double_Grid		10587888	0					
ANR	10587952	ExpressionStatement	exc -> func_round = ( TT_Round_Func ) Round_To_Double_Grid	2275:6:82122:82175	10587888	16	True				
ANR	10587953	AssignmentExpression	exc -> func_round = ( TT_Round_Func ) Round_To_Double_Grid		10587888	0		=			
ANR	10587954	PtrMemberAccess	exc -> func_round		10587888	0					
ANR	10587955	Identifier	exc		10587888	0					
ANR	10587956	Identifier	func_round		10587888	1					
ANR	10587957	CastExpression	( TT_Round_Func ) Round_To_Double_Grid		10587888	1					
ANR	10587958	CastTarget	TT_Round_Func		10587888	0					
ANR	10587959	Identifier	Round_To_Double_Grid		10587888	1					
ANR	10587960	BreakStatement	break ;	2276:6:82183:82188	10587888	17	True				
ANR	10587961	Label	case TT_Round_Super :	2278:4:82195:82214	10587888	18	True				
ANR	10587962	Identifier	TT_Round_Super		10587888	0					
ANR	10587963	ExpressionStatement	exc -> func_round = ( TT_Round_Func ) Round_Super	2279:6:82222:82266	10587888	19	True				
ANR	10587964	AssignmentExpression	exc -> func_round = ( TT_Round_Func ) Round_Super		10587888	0		=			
ANR	10587965	PtrMemberAccess	exc -> func_round		10587888	0					
ANR	10587966	Identifier	exc		10587888	0					
ANR	10587967	Identifier	func_round		10587888	1					
ANR	10587968	CastExpression	( TT_Round_Func ) Round_Super		10587888	1					
ANR	10587969	CastTarget	TT_Round_Func		10587888	0					
ANR	10587970	Identifier	Round_Super		10587888	1					
ANR	10587971	BreakStatement	break ;	2280:6:82274:82279	10587888	20	True				
ANR	10587972	Label	case TT_Round_Super_45 :	2282:4:82286:82308	10587888	21	True				
ANR	10587973	Identifier	TT_Round_Super_45		10587888	0					
ANR	10587974	ExpressionStatement	exc -> func_round = ( TT_Round_Func ) Round_Super_45	2283:6:82316:82363	10587888	22	True				
ANR	10587975	AssignmentExpression	exc -> func_round = ( TT_Round_Func ) Round_Super_45		10587888	0		=			
ANR	10587976	PtrMemberAccess	exc -> func_round		10587888	0					
ANR	10587977	Identifier	exc		10587888	0					
ANR	10587978	Identifier	func_round		10587888	1					
ANR	10587979	CastExpression	( TT_Round_Func ) Round_Super_45		10587888	1					
ANR	10587980	CastTarget	TT_Round_Func		10587888	0					
ANR	10587981	Identifier	Round_Super_45		10587888	1					
ANR	10587982	BreakStatement	break ;	2284:6:82371:82376	10587888	23	True				
ANR	10587983	ReturnType	static void		10587888	1					
ANR	10587984	Identifier	Compute_Round		10587888	2					
ANR	10587985	ParameterList	"TT_ExecContext exc , FT_Byte round_mode"		10587888	3					
ANR	10587986	Parameter	TT_ExecContext exc	2249:17:81485:81503	10587888	0	True				
ANR	10587987	ParameterType	TT_ExecContext		10587888	0					
ANR	10587988	Identifier	exc		10587888	1					
ANR	10587989	Parameter	FT_Byte round_mode	2250:17:81523:81548	10587888	1	True				
ANR	10587990	ParameterType	FT_Byte		10587888	0					
ANR	10587991	Identifier	round_mode		10587888	1					
ANR	10587992	CFGEntryNode	ENTRY		10587888		True				
ANR	10587993	CFGExitNode	EXIT		10587888		True				
ANR	10587994	Symbol	exc		10587888						
ANR	10587995	Symbol	Round_Down_To_Grid		10587888						
ANR	10587996	Symbol	Round_To_Double_Grid		10587888						
ANR	10587997	Symbol	Round_None		10587888						
ANR	10587998	Symbol	exc -> func_round		10587888						
ANR	10587999	Symbol	* exc		10587888						
ANR	10588000	Symbol	Round_Super_45		10587888						
ANR	10588001	Symbol	Round_To_Half_Grid		10587888						
ANR	10588002	Symbol	Round_To_Grid		10587888						
ANR	10588003	Symbol	Round_Up_To_Grid		10587888						
ANR	10588004	Symbol	round_mode		10587888						
ANR	10588005	Symbol	Round_Super		10587888						
ANR	10588006	Function	SetSuperRound	2302:2:83406:84503							
ANR	10588007	FunctionDef	"SetSuperRound (TT_ExecContext exc , FT_F2Dot14 GridPeriod , FT_Long selector)"		10588006	0					
ANR	10588008	CompoundStatement		2306:2:83547:84503	10588006	0					
ANR	10588009	SwitchStatement	switch ( ( FT_Int ) ( selector & 0xC0 ) )		10588006	0					
ANR	10588010	Condition	( FT_Int ) ( selector & 0xC0 )	2307:13:83562:83588	10588006	0	True				
ANR	10588011	CastExpression	( FT_Int ) ( selector & 0xC0 )		10588006	0					
ANR	10588012	CastTarget	FT_Int		10588006	0					
ANR	10588013	BitAndExpression	selector & 0xC0		10588006	1		&			
ANR	10588014	Identifier	selector		10588006	0					
ANR	10588015	PrimaryExpression	0xC0		10588006	1					
ANR	10588016	CompoundStatement		3:4:48:48	10588006	1					
ANR	10588017	Label	case 0 :	2309:6:83604:83610	10588006	0	True				
ANR	10588018	ExpressionStatement	exc -> period = GridPeriod / 2	2310:8:83620:83648	10588006	1	True				
ANR	10588019	AssignmentExpression	exc -> period = GridPeriod / 2		10588006	0		=			
ANR	10588020	PtrMemberAccess	exc -> period		10588006	0					
ANR	10588021	Identifier	exc		10588006	0					
ANR	10588022	Identifier	period		10588006	1					
ANR	10588023	MultiplicativeExpression	GridPeriod / 2		10588006	1		/			
ANR	10588024	Identifier	GridPeriod		10588006	0					
ANR	10588025	PrimaryExpression	2		10588006	1					
ANR	10588026	BreakStatement	break ;	2311:8:83658:83663	10588006	2	True				
ANR	10588027	Label	case 0x40 :	2313:6:83672:83681	10588006	3	True				
ANR	10588028	ExpressionStatement	exc -> period = GridPeriod	2314:8:83691:83715	10588006	4	True				
ANR	10588029	AssignmentExpression	exc -> period = GridPeriod		10588006	0		=			
ANR	10588030	PtrMemberAccess	exc -> period		10588006	0					
ANR	10588031	Identifier	exc		10588006	0					
ANR	10588032	Identifier	period		10588006	1					
ANR	10588033	Identifier	GridPeriod		10588006	1					
ANR	10588034	BreakStatement	break ;	2315:8:83725:83730	10588006	5	True				
ANR	10588035	Label	case 0x80 :	2317:6:83739:83748	10588006	6	True				
ANR	10588036	ExpressionStatement	exc -> period = GridPeriod * 2	2318:8:83758:83786	10588006	7	True				
ANR	10588037	AssignmentExpression	exc -> period = GridPeriod * 2		10588006	0		=			
ANR	10588038	PtrMemberAccess	exc -> period		10588006	0					
ANR	10588039	Identifier	exc		10588006	0					
ANR	10588040	Identifier	period		10588006	1					
ANR	10588041	MultiplicativeExpression	GridPeriod * 2		10588006	1		*			
ANR	10588042	Identifier	GridPeriod		10588006	0					
ANR	10588043	PrimaryExpression	2		10588006	1					
ANR	10588044	BreakStatement	break ;	2319:8:83796:83801	10588006	8	True				
ANR	10588045	Label	case 0xC0 :	2322:6:83854:83863	10588006	9	True				
ANR	10588046	ExpressionStatement	exc -> period = GridPeriod	2323:8:83873:83897	10588006	10	True				
ANR	10588047	AssignmentExpression	exc -> period = GridPeriod		10588006	0		=			
ANR	10588048	PtrMemberAccess	exc -> period		10588006	0					
ANR	10588049	Identifier	exc		10588006	0					
ANR	10588050	Identifier	period		10588006	1					
ANR	10588051	Identifier	GridPeriod		10588006	1					
ANR	10588052	BreakStatement	break ;	2324:8:83907:83912	10588006	11	True				
ANR	10588053	SwitchStatement	switch ( ( FT_Int ) ( selector & 0x30 ) )		10588006	1					
ANR	10588054	Condition	( FT_Int ) ( selector & 0x30 )	2327:13:83934:83960	10588006	0	True				
ANR	10588055	CastExpression	( FT_Int ) ( selector & 0x30 )		10588006	0					
ANR	10588056	CastTarget	FT_Int		10588006	0					
ANR	10588057	BitAndExpression	selector & 0x30		10588006	1		&			
ANR	10588058	Identifier	selector		10588006	0					
ANR	10588059	PrimaryExpression	0x30		10588006	1					
ANR	10588060	CompoundStatement		23:4:420:420	10588006	1					
ANR	10588061	Label	case 0 :	2329:4:83974:83980	10588006	0	True				
ANR	10588062	ExpressionStatement	exc -> phase = 0	2330:6:83988:84002	10588006	1	True				
ANR	10588063	AssignmentExpression	exc -> phase = 0		10588006	0		=			
ANR	10588064	PtrMemberAccess	exc -> phase		10588006	0					
ANR	10588065	Identifier	exc		10588006	0					
ANR	10588066	Identifier	phase		10588006	1					
ANR	10588067	PrimaryExpression	0		10588006	1					
ANR	10588068	BreakStatement	break ;	2331:6:84010:84015	10588006	2	True				
ANR	10588069	Label	case 0x10 :	2333:4:84022:84031	10588006	3	True				
ANR	10588070	ExpressionStatement	exc -> phase = exc -> period / 4	2334:6:84039:84067	10588006	4	True				
ANR	10588071	AssignmentExpression	exc -> phase = exc -> period / 4		10588006	0		=			
ANR	10588072	PtrMemberAccess	exc -> phase		10588006	0					
ANR	10588073	Identifier	exc		10588006	0					
ANR	10588074	Identifier	phase		10588006	1					
ANR	10588075	MultiplicativeExpression	exc -> period / 4		10588006	1		/			
ANR	10588076	PtrMemberAccess	exc -> period		10588006	0					
ANR	10588077	Identifier	exc		10588006	0					
ANR	10588078	Identifier	period		10588006	1					
ANR	10588079	PrimaryExpression	4		10588006	1					
ANR	10588080	BreakStatement	break ;	2335:6:84075:84080	10588006	5	True				
ANR	10588081	Label	case 0x20 :	2337:4:84087:84096	10588006	6	True				
ANR	10588082	ExpressionStatement	exc -> phase = exc -> period / 2	2338:6:84104:84132	10588006	7	True				
ANR	10588083	AssignmentExpression	exc -> phase = exc -> period / 2		10588006	0		=			
ANR	10588084	PtrMemberAccess	exc -> phase		10588006	0					
ANR	10588085	Identifier	exc		10588006	0					
ANR	10588086	Identifier	phase		10588006	1					
ANR	10588087	MultiplicativeExpression	exc -> period / 2		10588006	1		/			
ANR	10588088	PtrMemberAccess	exc -> period		10588006	0					
ANR	10588089	Identifier	exc		10588006	0					
ANR	10588090	Identifier	period		10588006	1					
ANR	10588091	PrimaryExpression	2		10588006	1					
ANR	10588092	BreakStatement	break ;	2339:6:84140:84145	10588006	8	True				
ANR	10588093	Label	case 0x30 :	2341:4:84152:84161	10588006	9	True				
ANR	10588094	ExpressionStatement	exc -> phase = exc -> period * 3 / 4	2342:6:84169:84201	10588006	10	True				
ANR	10588095	AssignmentExpression	exc -> phase = exc -> period * 3 / 4		10588006	0		=			
ANR	10588096	PtrMemberAccess	exc -> phase		10588006	0					
ANR	10588097	Identifier	exc		10588006	0					
ANR	10588098	Identifier	phase		10588006	1					
ANR	10588099	MultiplicativeExpression	exc -> period * 3 / 4		10588006	1		*			
ANR	10588100	PtrMemberAccess	exc -> period		10588006	0					
ANR	10588101	Identifier	exc		10588006	0					
ANR	10588102	Identifier	period		10588006	1					
ANR	10588103	MultiplicativeExpression	3 / 4		10588006	1		/			
ANR	10588104	PrimaryExpression	3		10588006	0					
ANR	10588105	PrimaryExpression	4		10588006	1					
ANR	10588106	BreakStatement	break ;	2343:6:84209:84214	10588006	11	True				
ANR	10588107	IfStatement	if ( ( selector & 0x0F ) == 0 )		10588006	2					
ANR	10588108	Condition	( selector & 0x0F ) == 0	2346:9:84232:84255	10588006	0	True				
ANR	10588109	EqualityExpression	( selector & 0x0F ) == 0		10588006	0		==			
ANR	10588110	BitAndExpression	selector & 0x0F		10588006	0		&			
ANR	10588111	Identifier	selector		10588006	0					
ANR	10588112	PrimaryExpression	0x0F		10588006	1					
ANR	10588113	PrimaryExpression	0		10588006	1					
ANR	10588114	ExpressionStatement	exc -> threshold = exc -> period - 1	2347:6:84265:84297	10588006	1	True				
ANR	10588115	AssignmentExpression	exc -> threshold = exc -> period - 1		10588006	0		=			
ANR	10588116	PtrMemberAccess	exc -> threshold		10588006	0					
ANR	10588117	Identifier	exc		10588006	0					
ANR	10588118	Identifier	threshold		10588006	1					
ANR	10588119	AdditiveExpression	exc -> period - 1		10588006	1		-			
ANR	10588120	PtrMemberAccess	exc -> period		10588006	0					
ANR	10588121	Identifier	exc		10588006	0					
ANR	10588122	Identifier	period		10588006	1					
ANR	10588123	PrimaryExpression	1		10588006	1					
ANR	10588124	ElseStatement	else		10588006	0					
ANR	10588125	ExpressionStatement	exc -> threshold = ( ( FT_Int ) ( selector & 0x0F ) - 4 ) * exc -> period / 8	2349:6:84314:84384	10588006	0	True				
ANR	10588126	AssignmentExpression	exc -> threshold = ( ( FT_Int ) ( selector & 0x0F ) - 4 ) * exc -> period / 8		10588006	0		=			
ANR	10588127	PtrMemberAccess	exc -> threshold		10588006	0					
ANR	10588128	Identifier	exc		10588006	0					
ANR	10588129	Identifier	threshold		10588006	1					
ANR	10588130	MultiplicativeExpression	( ( FT_Int ) ( selector & 0x0F ) - 4 ) * exc -> period / 8		10588006	1		*			
ANR	10588131	AdditiveExpression	( FT_Int ) ( selector & 0x0F ) - 4		10588006	0		-			
ANR	10588132	CastExpression	( FT_Int ) ( selector & 0x0F )		10588006	0					
ANR	10588133	CastTarget	FT_Int		10588006	0					
ANR	10588134	BitAndExpression	selector & 0x0F		10588006	1		&			
ANR	10588135	Identifier	selector		10588006	0					
ANR	10588136	PrimaryExpression	0x0F		10588006	1					
ANR	10588137	PrimaryExpression	4		10588006	1					
ANR	10588138	MultiplicativeExpression	exc -> period / 8		10588006	1		/			
ANR	10588139	PtrMemberAccess	exc -> period		10588006	0					
ANR	10588140	Identifier	exc		10588006	0					
ANR	10588141	Identifier	period		10588006	1					
ANR	10588142	PrimaryExpression	8		10588006	1					
ANR	10588143	ExpressionStatement	exc -> period >>= 8	2352:4:84427:84447	10588006	3	True				
ANR	10588144	AssignmentExpression	exc -> period >>= 8		10588006	0		>>=			
ANR	10588145	PtrMemberAccess	exc -> period		10588006	0					
ANR	10588146	Identifier	exc		10588006	0					
ANR	10588147	Identifier	period		10588006	1					
ANR	10588148	PrimaryExpression	8		10588006	1					
ANR	10588149	ExpressionStatement	exc -> phase >>= 8	2353:4:84453:84473	10588006	4	True				
ANR	10588150	AssignmentExpression	exc -> phase >>= 8		10588006	0		>>=			
ANR	10588151	PtrMemberAccess	exc -> phase		10588006	0					
ANR	10588152	Identifier	exc		10588006	0					
ANR	10588153	Identifier	phase		10588006	1					
ANR	10588154	PrimaryExpression	8		10588006	1					
ANR	10588155	ExpressionStatement	exc -> threshold >>= 8	2354:4:84479:84499	10588006	5	True				
ANR	10588156	AssignmentExpression	exc -> threshold >>= 8		10588006	0		>>=			
ANR	10588157	PtrMemberAccess	exc -> threshold		10588006	0					
ANR	10588158	Identifier	exc		10588006	0					
ANR	10588159	Identifier	threshold		10588006	1					
ANR	10588160	PrimaryExpression	8		10588006	1					
ANR	10588161	ReturnType	static void		10588006	1					
ANR	10588162	Identifier	SetSuperRound		10588006	2					
ANR	10588163	ParameterList	"TT_ExecContext exc , FT_F2Dot14 GridPeriod , FT_Long selector"		10588006	3					
ANR	10588164	Parameter	TT_ExecContext exc	2303:17:83435:83453	10588006	0	True				
ANR	10588165	ParameterType	TT_ExecContext		10588006	0					
ANR	10588166	Identifier	exc		10588006	1					
ANR	10588167	Parameter	FT_F2Dot14 GridPeriod	2304:17:83473:83498	10588006	1	True				
ANR	10588168	ParameterType	FT_F2Dot14		10588006	0					
ANR	10588169	Identifier	GridPeriod		10588006	1					
ANR	10588170	Parameter	FT_Long selector	2305:17:83518:83541	10588006	2	True				
ANR	10588171	ParameterType	FT_Long		10588006	0					
ANR	10588172	Identifier	selector		10588006	1					
ANR	10588173	CFGEntryNode	ENTRY		10588006		True				
ANR	10588174	CFGExitNode	EXIT		10588006		True				
ANR	10588175	Symbol	exc -> phase		10588006						
ANR	10588176	Symbol	exc		10588006						
ANR	10588177	Symbol	exc -> period		10588006						
ANR	10588178	Symbol	* exc		10588006						
ANR	10588179	Symbol	exc -> threshold		10588006						
ANR	10588180	Symbol	selector		10588006						
ANR	10588181	Symbol	GridPeriod		10588006						
ANR	10588182	Function	Project	2374:2:85757:86002							
ANR	10588183	FunctionDef	"Project (TT_ExecContext exc , FT_Pos dx , FT_Pos dy)"		10588182	0					
ANR	10588184	CompoundStatement		2378:2:85872:86002	10588182	0					
ANR	10588185	ReturnStatement	"return TT_DotFix14 ( dx , dy , exc -> GS . projVector . x , exc -> GS . projVector . y ) ;"	2379:4:85878:85998	10588182	0	True				
ANR	10588186	CallExpression	"TT_DotFix14 ( dx , dy , exc -> GS . projVector . x , exc -> GS . projVector . y )"		10588182	0					
ANR	10588187	Callee	TT_DotFix14		10588182	0					
ANR	10588188	Identifier	TT_DotFix14		10588182	0					
ANR	10588189	ArgumentList	dx		10588182	1					
ANR	10588190	Argument	dx		10588182	0					
ANR	10588191	Identifier	dx		10588182	0					
ANR	10588192	Argument	dy		10588182	1					
ANR	10588193	Identifier	dy		10588182	0					
ANR	10588194	Argument	exc -> GS . projVector . x		10588182	2					
ANR	10588195	MemberAccess	exc -> GS . projVector . x		10588182	0					
ANR	10588196	MemberAccess	exc -> GS . projVector		10588182	0					
ANR	10588197	PtrMemberAccess	exc -> GS		10588182	0					
ANR	10588198	Identifier	exc		10588182	0					
ANR	10588199	Identifier	GS		10588182	1					
ANR	10588200	Identifier	projVector		10588182	1					
ANR	10588201	Identifier	x		10588182	1					
ANR	10588202	Argument	exc -> GS . projVector . y		10588182	3					
ANR	10588203	MemberAccess	exc -> GS . projVector . y		10588182	0					
ANR	10588204	MemberAccess	exc -> GS . projVector		10588182	0					
ANR	10588205	PtrMemberAccess	exc -> GS		10588182	0					
ANR	10588206	Identifier	exc		10588182	0					
ANR	10588207	Identifier	GS		10588182	1					
ANR	10588208	Identifier	projVector		10588182	1					
ANR	10588209	Identifier	y		10588182	1					
ANR	10588210	ReturnType	static FT_F26Dot6		10588182	1					
ANR	10588211	Identifier	Project		10588182	2					
ANR	10588212	ParameterList	"TT_ExecContext exc , FT_Pos dx , FT_Pos dy"		10588182	3					
ANR	10588213	Parameter	TT_ExecContext exc	2375:11:85786:85804	10588182	0	True				
ANR	10588214	ParameterType	TT_ExecContext		10588182	0					
ANR	10588215	Identifier	exc		10588182	1					
ANR	10588216	Parameter	FT_Pos dx	2376:11:85818:85835	10588182	1	True				
ANR	10588217	ParameterType	FT_Pos		10588182	0					
ANR	10588218	Identifier	dx		10588182	1					
ANR	10588219	Parameter	FT_Pos dy	2377:11:85849:85866	10588182	2	True				
ANR	10588220	ParameterType	FT_Pos		10588182	0					
ANR	10588221	Identifier	dy		10588182	1					
ANR	10588222	CFGEntryNode	ENTRY		10588182		True				
ANR	10588223	CFGExitNode	EXIT		10588182		True				
ANR	10588224	Symbol	exc		10588182						
ANR	10588225	Symbol	dx		10588182						
ANR	10588226	Symbol	TT_DotFix14		10588182						
ANR	10588227	Symbol	dy		10588182						
ANR	10588228	Symbol	* exc		10588182						
ANR	10588229	Symbol	exc -> GS . projVector		10588182						
ANR	10588230	Symbol	exc -> GS		10588182						
ANR	10588231	Symbol	exc -> GS . projVector . x		10588182						
ANR	10588232	Symbol	exc -> GS . projVector . y		10588182						
ANR	10588233	Function	Dual_Project	2401:2:87256:87516							
ANR	10588234	FunctionDef	"Dual_Project (TT_ExecContext exc , FT_Pos dx , FT_Pos dy)"		10588233	0					
ANR	10588235	CompoundStatement		2405:2:87386:87516	10588233	0					
ANR	10588236	ReturnStatement	"return TT_DotFix14 ( dx , dy , exc -> GS . dualVector . x , exc -> GS . dualVector . y ) ;"	2406:4:87392:87512	10588233	0	True				
ANR	10588237	CallExpression	"TT_DotFix14 ( dx , dy , exc -> GS . dualVector . x , exc -> GS . dualVector . y )"		10588233	0					
ANR	10588238	Callee	TT_DotFix14		10588233	0					
ANR	10588239	Identifier	TT_DotFix14		10588233	0					
ANR	10588240	ArgumentList	dx		10588233	1					
ANR	10588241	Argument	dx		10588233	0					
ANR	10588242	Identifier	dx		10588233	0					
ANR	10588243	Argument	dy		10588233	1					
ANR	10588244	Identifier	dy		10588233	0					
ANR	10588245	Argument	exc -> GS . dualVector . x		10588233	2					
ANR	10588246	MemberAccess	exc -> GS . dualVector . x		10588233	0					
ANR	10588247	MemberAccess	exc -> GS . dualVector		10588233	0					
ANR	10588248	PtrMemberAccess	exc -> GS		10588233	0					
ANR	10588249	Identifier	exc		10588233	0					
ANR	10588250	Identifier	GS		10588233	1					
ANR	10588251	Identifier	dualVector		10588233	1					
ANR	10588252	Identifier	x		10588233	1					
ANR	10588253	Argument	exc -> GS . dualVector . y		10588233	3					
ANR	10588254	MemberAccess	exc -> GS . dualVector . y		10588233	0					
ANR	10588255	MemberAccess	exc -> GS . dualVector		10588233	0					
ANR	10588256	PtrMemberAccess	exc -> GS		10588233	0					
ANR	10588257	Identifier	exc		10588233	0					
ANR	10588258	Identifier	GS		10588233	1					
ANR	10588259	Identifier	dualVector		10588233	1					
ANR	10588260	Identifier	y		10588233	1					
ANR	10588261	ReturnType	static FT_F26Dot6		10588233	1					
ANR	10588262	Identifier	Dual_Project		10588233	2					
ANR	10588263	ParameterList	"TT_ExecContext exc , FT_Pos dx , FT_Pos dy"		10588233	3					
ANR	10588264	Parameter	TT_ExecContext exc	2402:16:87290:87308	10588233	0	True				
ANR	10588265	ParameterType	TT_ExecContext		10588233	0					
ANR	10588266	Identifier	exc		10588233	1					
ANR	10588267	Parameter	FT_Pos dx	2403:16:87327:87344	10588233	1	True				
ANR	10588268	ParameterType	FT_Pos		10588233	0					
ANR	10588269	Identifier	dx		10588233	1					
ANR	10588270	Parameter	FT_Pos dy	2404:16:87363:87380	10588233	2	True				
ANR	10588271	ParameterType	FT_Pos		10588233	0					
ANR	10588272	Identifier	dy		10588233	1					
ANR	10588273	CFGEntryNode	ENTRY		10588233		True				
ANR	10588274	CFGExitNode	EXIT		10588233		True				
ANR	10588275	Symbol	exc		10588233						
ANR	10588276	Symbol	dx		10588233						
ANR	10588277	Symbol	TT_DotFix14		10588233						
ANR	10588278	Symbol	dy		10588233						
ANR	10588279	Symbol	* exc		10588233						
ANR	10588280	Symbol	exc -> GS . dualVector . x		10588233						
ANR	10588281	Symbol	exc -> GS . dualVector . y		10588233						
ANR	10588282	Symbol	exc -> GS		10588233						
ANR	10588283	Symbol	exc -> GS . dualVector		10588233						
ANR	10588284	Function	Project_x	2428:2:88770:88954							
ANR	10588285	FunctionDef	"Project_x (TT_ExecContext exc , FT_Pos dx , FT_Pos dy)"		10588284	0					
ANR	10588286	CompoundStatement		2432:2:88891:88954	10588284	0					
ANR	10588287	ExpressionStatement	FT_UNUSED ( exc )	2433:4:88897:88913	10588284	0	True				
ANR	10588288	CallExpression	FT_UNUSED ( exc )		10588284	0					
ANR	10588289	Callee	FT_UNUSED		10588284	0					
ANR	10588290	Identifier	FT_UNUSED		10588284	0					
ANR	10588291	ArgumentList	exc		10588284	1					
ANR	10588292	Argument	exc		10588284	0					
ANR	10588293	Identifier	exc		10588284	0					
ANR	10588294	ExpressionStatement	FT_UNUSED ( dy )	2434:4:88919:88934	10588284	1	True				
ANR	10588295	CallExpression	FT_UNUSED ( dy )		10588284	0					
ANR	10588296	Callee	FT_UNUSED		10588284	0					
ANR	10588297	Identifier	FT_UNUSED		10588284	0					
ANR	10588298	ArgumentList	dy		10588284	1					
ANR	10588299	Argument	dy		10588284	0					
ANR	10588300	Identifier	dy		10588284	0					
ANR	10588301	ReturnStatement	return dx ;	2436:4:88941:88950	10588284	2	True				
ANR	10588302	Identifier	dx		10588284	0					
ANR	10588303	ReturnType	static FT_F26Dot6		10588284	1					
ANR	10588304	Identifier	Project_x		10588284	2					
ANR	10588305	ParameterList	"TT_ExecContext exc , FT_Pos dx , FT_Pos dy"		10588284	3					
ANR	10588306	Parameter	TT_ExecContext exc	2429:13:88801:88819	10588284	0	True				
ANR	10588307	ParameterType	TT_ExecContext		10588284	0					
ANR	10588308	Identifier	exc		10588284	1					
ANR	10588309	Parameter	FT_Pos dx	2430:13:88835:88852	10588284	1	True				
ANR	10588310	ParameterType	FT_Pos		10588284	0					
ANR	10588311	Identifier	dx		10588284	1					
ANR	10588312	Parameter	FT_Pos dy	2431:13:88868:88885	10588284	2	True				
ANR	10588313	ParameterType	FT_Pos		10588284	0					
ANR	10588314	Identifier	dy		10588284	1					
ANR	10588315	CFGEntryNode	ENTRY		10588284		True				
ANR	10588316	CFGExitNode	EXIT		10588284		True				
ANR	10588317	Symbol	exc		10588284						
ANR	10588318	Symbol	dx		10588284						
ANR	10588319	Symbol	dy		10588284						
ANR	10588320	Function	Project_y	2456:2:90208:90392							
ANR	10588321	FunctionDef	"Project_y (TT_ExecContext exc , FT_Pos dx , FT_Pos dy)"		10588320	0					
ANR	10588322	CompoundStatement		2460:2:90329:90392	10588320	0					
ANR	10588323	ExpressionStatement	FT_UNUSED ( exc )	2461:4:90335:90351	10588320	0	True				
ANR	10588324	CallExpression	FT_UNUSED ( exc )		10588320	0					
ANR	10588325	Callee	FT_UNUSED		10588320	0					
ANR	10588326	Identifier	FT_UNUSED		10588320	0					
ANR	10588327	ArgumentList	exc		10588320	1					
ANR	10588328	Argument	exc		10588320	0					
ANR	10588329	Identifier	exc		10588320	0					
ANR	10588330	ExpressionStatement	FT_UNUSED ( dx )	2462:4:90357:90372	10588320	1	True				
ANR	10588331	CallExpression	FT_UNUSED ( dx )		10588320	0					
ANR	10588332	Callee	FT_UNUSED		10588320	0					
ANR	10588333	Identifier	FT_UNUSED		10588320	0					
ANR	10588334	ArgumentList	dx		10588320	1					
ANR	10588335	Argument	dx		10588320	0					
ANR	10588336	Identifier	dx		10588320	0					
ANR	10588337	ReturnStatement	return dy ;	2464:4:90379:90388	10588320	2	True				
ANR	10588338	Identifier	dy		10588320	0					
ANR	10588339	ReturnType	static FT_F26Dot6		10588320	1					
ANR	10588340	Identifier	Project_y		10588320	2					
ANR	10588341	ParameterList	"TT_ExecContext exc , FT_Pos dx , FT_Pos dy"		10588320	3					
ANR	10588342	Parameter	TT_ExecContext exc	2457:13:90239:90257	10588320	0	True				
ANR	10588343	ParameterType	TT_ExecContext		10588320	0					
ANR	10588344	Identifier	exc		10588320	1					
ANR	10588345	Parameter	FT_Pos dx	2458:13:90273:90290	10588320	1	True				
ANR	10588346	ParameterType	FT_Pos		10588320	0					
ANR	10588347	Identifier	dx		10588320	1					
ANR	10588348	Parameter	FT_Pos dy	2459:13:90306:90323	10588320	2	True				
ANR	10588349	ParameterType	FT_Pos		10588320	0					
ANR	10588350	Identifier	dy		10588320	1					
ANR	10588351	CFGEntryNode	ENTRY		10588320		True				
ANR	10588352	CFGExitNode	EXIT		10588320		True				
ANR	10588353	Symbol	exc		10588320						
ANR	10588354	Symbol	dx		10588320						
ANR	10588355	Symbol	dy		10588320						
ANR	10588356	Function	Compute_Funcs	2477:2:91100:92837							
ANR	10588357	FunctionDef	Compute_Funcs (TT_ExecContext exc)		10588356	0					
ANR	10588358	CompoundStatement		2479:2:91153:92837	10588356	0					
ANR	10588359	IfStatement	if ( exc -> GS . freeVector . x == 0x4000 )		10588356	0					
ANR	10588360	Condition	exc -> GS . freeVector . x == 0x4000	2480:9:91164:91193	10588356	0	True				
ANR	10588361	EqualityExpression	exc -> GS . freeVector . x == 0x4000		10588356	0		==			
ANR	10588362	MemberAccess	exc -> GS . freeVector . x		10588356	0					
ANR	10588363	MemberAccess	exc -> GS . freeVector		10588356	0					
ANR	10588364	PtrMemberAccess	exc -> GS		10588356	0					
ANR	10588365	Identifier	exc		10588356	0					
ANR	10588366	Identifier	GS		10588356	1					
ANR	10588367	Identifier	freeVector		10588356	1					
ANR	10588368	Identifier	x		10588356	1					
ANR	10588369	PrimaryExpression	0x4000		10588356	1					
ANR	10588370	ExpressionStatement	exc -> F_dot_P = exc -> GS . projVector . x	2481:6:91203:91238	10588356	1	True				
ANR	10588371	AssignmentExpression	exc -> F_dot_P = exc -> GS . projVector . x		10588356	0		=			
ANR	10588372	PtrMemberAccess	exc -> F_dot_P		10588356	0					
ANR	10588373	Identifier	exc		10588356	0					
ANR	10588374	Identifier	F_dot_P		10588356	1					
ANR	10588375	MemberAccess	exc -> GS . projVector . x		10588356	1					
ANR	10588376	MemberAccess	exc -> GS . projVector		10588356	0					
ANR	10588377	PtrMemberAccess	exc -> GS		10588356	0					
ANR	10588378	Identifier	exc		10588356	0					
ANR	10588379	Identifier	GS		10588356	1					
ANR	10588380	Identifier	projVector		10588356	1					
ANR	10588381	Identifier	x		10588356	1					
ANR	10588382	ElseStatement	else		10588356	0					
ANR	10588383	IfStatement	if ( exc -> GS . freeVector . y == 0x4000 )		10588356	0					
ANR	10588384	Condition	exc -> GS . freeVector . y == 0x4000	2482:14:91254:91283	10588356	0	True				
ANR	10588385	EqualityExpression	exc -> GS . freeVector . y == 0x4000		10588356	0		==			
ANR	10588386	MemberAccess	exc -> GS . freeVector . y		10588356	0					
ANR	10588387	MemberAccess	exc -> GS . freeVector		10588356	0					
ANR	10588388	PtrMemberAccess	exc -> GS		10588356	0					
ANR	10588389	Identifier	exc		10588356	0					
ANR	10588390	Identifier	GS		10588356	1					
ANR	10588391	Identifier	freeVector		10588356	1					
ANR	10588392	Identifier	y		10588356	1					
ANR	10588393	PrimaryExpression	0x4000		10588356	1					
ANR	10588394	ExpressionStatement	exc -> F_dot_P = exc -> GS . projVector . y	2483:6:91293:91328	10588356	1	True				
ANR	10588395	AssignmentExpression	exc -> F_dot_P = exc -> GS . projVector . y		10588356	0		=			
ANR	10588396	PtrMemberAccess	exc -> F_dot_P		10588356	0					
ANR	10588397	Identifier	exc		10588356	0					
ANR	10588398	Identifier	F_dot_P		10588356	1					
ANR	10588399	MemberAccess	exc -> GS . projVector . y		10588356	1					
ANR	10588400	MemberAccess	exc -> GS . projVector		10588356	0					
ANR	10588401	PtrMemberAccess	exc -> GS		10588356	0					
ANR	10588402	Identifier	exc		10588356	0					
ANR	10588403	Identifier	GS		10588356	1					
ANR	10588404	Identifier	projVector		10588356	1					
ANR	10588405	Identifier	y		10588356	1					
ANR	10588406	ElseStatement	else		10588356	0					
ANR	10588407	ExpressionStatement	exc -> F_dot_P = ( ( FT_Long ) exc -> GS . projVector . x * exc -> GS . freeVector . x + ( FT_Long ) exc -> GS . projVector . y * exc -> GS . freeVector . y ) >> 14	2485:6:91345:91495	10588356	0	True				
ANR	10588408	AssignmentExpression	exc -> F_dot_P = ( ( FT_Long ) exc -> GS . projVector . x * exc -> GS . freeVector . x + ( FT_Long ) exc -> GS . projVector . y * exc -> GS . freeVector . y ) >> 14		10588356	0		=			
ANR	10588409	PtrMemberAccess	exc -> F_dot_P		10588356	0					
ANR	10588410	Identifier	exc		10588356	0					
ANR	10588411	Identifier	F_dot_P		10588356	1					
ANR	10588412	ShiftExpression	( ( FT_Long ) exc -> GS . projVector . x * exc -> GS . freeVector . x + ( FT_Long ) exc -> GS . projVector . y * exc -> GS . freeVector . y ) >> 14		10588356	1		>>			
ANR	10588413	AdditiveExpression	( FT_Long ) exc -> GS . projVector . x * exc -> GS . freeVector . x + ( FT_Long ) exc -> GS . projVector . y * exc -> GS . freeVector . y		10588356	0		+			
ANR	10588414	MultiplicativeExpression	( FT_Long ) exc -> GS . projVector . x * exc -> GS . freeVector . x		10588356	0		*			
ANR	10588415	CastExpression	( FT_Long ) exc -> GS . projVector . x		10588356	0					
ANR	10588416	CastTarget	FT_Long		10588356	0					
ANR	10588417	MemberAccess	exc -> GS . projVector . x		10588356	1					
ANR	10588418	MemberAccess	exc -> GS . projVector		10588356	0					
ANR	10588419	PtrMemberAccess	exc -> GS		10588356	0					
ANR	10588420	Identifier	exc		10588356	0					
ANR	10588421	Identifier	GS		10588356	1					
ANR	10588422	Identifier	projVector		10588356	1					
ANR	10588423	Identifier	x		10588356	1					
ANR	10588424	MemberAccess	exc -> GS . freeVector . x		10588356	1					
ANR	10588425	MemberAccess	exc -> GS . freeVector		10588356	0					
ANR	10588426	PtrMemberAccess	exc -> GS		10588356	0					
ANR	10588427	Identifier	exc		10588356	0					
ANR	10588428	Identifier	GS		10588356	1					
ANR	10588429	Identifier	freeVector		10588356	1					
ANR	10588430	Identifier	x		10588356	1					
ANR	10588431	MultiplicativeExpression	( FT_Long ) exc -> GS . projVector . y * exc -> GS . freeVector . y		10588356	1		*			
ANR	10588432	CastExpression	( FT_Long ) exc -> GS . projVector . y		10588356	0					
ANR	10588433	CastTarget	FT_Long		10588356	0					
ANR	10588434	MemberAccess	exc -> GS . projVector . y		10588356	1					
ANR	10588435	MemberAccess	exc -> GS . projVector		10588356	0					
ANR	10588436	PtrMemberAccess	exc -> GS		10588356	0					
ANR	10588437	Identifier	exc		10588356	0					
ANR	10588438	Identifier	GS		10588356	1					
ANR	10588439	Identifier	projVector		10588356	1					
ANR	10588440	Identifier	y		10588356	1					
ANR	10588441	MemberAccess	exc -> GS . freeVector . y		10588356	1					
ANR	10588442	MemberAccess	exc -> GS . freeVector		10588356	0					
ANR	10588443	PtrMemberAccess	exc -> GS		10588356	0					
ANR	10588444	Identifier	exc		10588356	0					
ANR	10588445	Identifier	GS		10588356	1					
ANR	10588446	Identifier	freeVector		10588356	1					
ANR	10588447	Identifier	y		10588356	1					
ANR	10588448	PrimaryExpression	14		10588356	1					
ANR	10588449	IfStatement	if ( exc -> GS . projVector . x == 0x4000 )		10588356	1					
ANR	10588450	Condition	exc -> GS . projVector . x == 0x4000	2489:9:91507:91536	10588356	0	True				
ANR	10588451	EqualityExpression	exc -> GS . projVector . x == 0x4000		10588356	0		==			
ANR	10588452	MemberAccess	exc -> GS . projVector . x		10588356	0					
ANR	10588453	MemberAccess	exc -> GS . projVector		10588356	0					
ANR	10588454	PtrMemberAccess	exc -> GS		10588356	0					
ANR	10588455	Identifier	exc		10588356	0					
ANR	10588456	Identifier	GS		10588356	1					
ANR	10588457	Identifier	projVector		10588356	1					
ANR	10588458	Identifier	x		10588356	1					
ANR	10588459	PrimaryExpression	0x4000		10588356	1					
ANR	10588460	ExpressionStatement	exc -> func_project = ( TT_Project_Func ) Project_x	2490:6:91546:91592	10588356	1	True				
ANR	10588461	AssignmentExpression	exc -> func_project = ( TT_Project_Func ) Project_x		10588356	0		=			
ANR	10588462	PtrMemberAccess	exc -> func_project		10588356	0					
ANR	10588463	Identifier	exc		10588356	0					
ANR	10588464	Identifier	func_project		10588356	1					
ANR	10588465	CastExpression	( TT_Project_Func ) Project_x		10588356	1					
ANR	10588466	CastTarget	TT_Project_Func		10588356	0					
ANR	10588467	Identifier	Project_x		10588356	1					
ANR	10588468	ElseStatement	else		10588356	0					
ANR	10588469	IfStatement	if ( exc -> GS . projVector . y == 0x4000 )		10588356	0					
ANR	10588470	Condition	exc -> GS . projVector . y == 0x4000	2491:14:91608:91637	10588356	0	True				
ANR	10588471	EqualityExpression	exc -> GS . projVector . y == 0x4000		10588356	0		==			
ANR	10588472	MemberAccess	exc -> GS . projVector . y		10588356	0					
ANR	10588473	MemberAccess	exc -> GS . projVector		10588356	0					
ANR	10588474	PtrMemberAccess	exc -> GS		10588356	0					
ANR	10588475	Identifier	exc		10588356	0					
ANR	10588476	Identifier	GS		10588356	1					
ANR	10588477	Identifier	projVector		10588356	1					
ANR	10588478	Identifier	y		10588356	1					
ANR	10588479	PrimaryExpression	0x4000		10588356	1					
ANR	10588480	ExpressionStatement	exc -> func_project = ( TT_Project_Func ) Project_y	2492:6:91647:91693	10588356	1	True				
ANR	10588481	AssignmentExpression	exc -> func_project = ( TT_Project_Func ) Project_y		10588356	0		=			
ANR	10588482	PtrMemberAccess	exc -> func_project		10588356	0					
ANR	10588483	Identifier	exc		10588356	0					
ANR	10588484	Identifier	func_project		10588356	1					
ANR	10588485	CastExpression	( TT_Project_Func ) Project_y		10588356	1					
ANR	10588486	CastTarget	TT_Project_Func		10588356	0					
ANR	10588487	Identifier	Project_y		10588356	1					
ANR	10588488	ElseStatement	else		10588356	0					
ANR	10588489	ExpressionStatement	exc -> func_project = ( TT_Project_Func ) Project	2494:6:91710:91754	10588356	0	True				
ANR	10588490	AssignmentExpression	exc -> func_project = ( TT_Project_Func ) Project		10588356	0		=			
ANR	10588491	PtrMemberAccess	exc -> func_project		10588356	0					
ANR	10588492	Identifier	exc		10588356	0					
ANR	10588493	Identifier	func_project		10588356	1					
ANR	10588494	CastExpression	( TT_Project_Func ) Project		10588356	1					
ANR	10588495	CastTarget	TT_Project_Func		10588356	0					
ANR	10588496	Identifier	Project		10588356	1					
ANR	10588497	IfStatement	if ( exc -> GS . dualVector . x == 0x4000 )		10588356	2					
ANR	10588498	Condition	exc -> GS . dualVector . x == 0x4000	2496:9:91766:91795	10588356	0	True				
ANR	10588499	EqualityExpression	exc -> GS . dualVector . x == 0x4000		10588356	0		==			
ANR	10588500	MemberAccess	exc -> GS . dualVector . x		10588356	0					
ANR	10588501	MemberAccess	exc -> GS . dualVector		10588356	0					
ANR	10588502	PtrMemberAccess	exc -> GS		10588356	0					
ANR	10588503	Identifier	exc		10588356	0					
ANR	10588504	Identifier	GS		10588356	1					
ANR	10588505	Identifier	dualVector		10588356	1					
ANR	10588506	Identifier	x		10588356	1					
ANR	10588507	PrimaryExpression	0x4000		10588356	1					
ANR	10588508	ExpressionStatement	exc -> func_dualproj = ( TT_Project_Func ) Project_x	2497:6:91805:91852	10588356	1	True				
ANR	10588509	AssignmentExpression	exc -> func_dualproj = ( TT_Project_Func ) Project_x		10588356	0		=			
ANR	10588510	PtrMemberAccess	exc -> func_dualproj		10588356	0					
ANR	10588511	Identifier	exc		10588356	0					
ANR	10588512	Identifier	func_dualproj		10588356	1					
ANR	10588513	CastExpression	( TT_Project_Func ) Project_x		10588356	1					
ANR	10588514	CastTarget	TT_Project_Func		10588356	0					
ANR	10588515	Identifier	Project_x		10588356	1					
ANR	10588516	ElseStatement	else		10588356	0					
ANR	10588517	IfStatement	if ( exc -> GS . dualVector . y == 0x4000 )		10588356	0					
ANR	10588518	Condition	exc -> GS . dualVector . y == 0x4000	2498:14:91868:91897	10588356	0	True				
ANR	10588519	EqualityExpression	exc -> GS . dualVector . y == 0x4000		10588356	0		==			
ANR	10588520	MemberAccess	exc -> GS . dualVector . y		10588356	0					
ANR	10588521	MemberAccess	exc -> GS . dualVector		10588356	0					
ANR	10588522	PtrMemberAccess	exc -> GS		10588356	0					
ANR	10588523	Identifier	exc		10588356	0					
ANR	10588524	Identifier	GS		10588356	1					
ANR	10588525	Identifier	dualVector		10588356	1					
ANR	10588526	Identifier	y		10588356	1					
ANR	10588527	PrimaryExpression	0x4000		10588356	1					
ANR	10588528	ExpressionStatement	exc -> func_dualproj = ( TT_Project_Func ) Project_y	2499:6:91907:91954	10588356	1	True				
ANR	10588529	AssignmentExpression	exc -> func_dualproj = ( TT_Project_Func ) Project_y		10588356	0		=			
ANR	10588530	PtrMemberAccess	exc -> func_dualproj		10588356	0					
ANR	10588531	Identifier	exc		10588356	0					
ANR	10588532	Identifier	func_dualproj		10588356	1					
ANR	10588533	CastExpression	( TT_Project_Func ) Project_y		10588356	1					
ANR	10588534	CastTarget	TT_Project_Func		10588356	0					
ANR	10588535	Identifier	Project_y		10588356	1					
ANR	10588536	ElseStatement	else		10588356	0					
ANR	10588537	ExpressionStatement	exc -> func_dualproj = ( TT_Project_Func ) Dual_Project	2501:6:91971:92021	10588356	0	True				
ANR	10588538	AssignmentExpression	exc -> func_dualproj = ( TT_Project_Func ) Dual_Project		10588356	0		=			
ANR	10588539	PtrMemberAccess	exc -> func_dualproj		10588356	0					
ANR	10588540	Identifier	exc		10588356	0					
ANR	10588541	Identifier	func_dualproj		10588356	1					
ANR	10588542	CastExpression	( TT_Project_Func ) Dual_Project		10588356	1					
ANR	10588543	CastTarget	TT_Project_Func		10588356	0					
ANR	10588544	Identifier	Dual_Project		10588356	1					
ANR	10588545	ExpressionStatement	exc -> func_move = ( TT_Move_Func ) Direct_Move	2503:4:92028:92075	10588356	3	True				
ANR	10588546	AssignmentExpression	exc -> func_move = ( TT_Move_Func ) Direct_Move		10588356	0		=			
ANR	10588547	PtrMemberAccess	exc -> func_move		10588356	0					
ANR	10588548	Identifier	exc		10588356	0					
ANR	10588549	Identifier	func_move		10588356	1					
ANR	10588550	CastExpression	( TT_Move_Func ) Direct_Move		10588356	1					
ANR	10588551	CastTarget	TT_Move_Func		10588356	0					
ANR	10588552	Identifier	Direct_Move		10588356	1					
ANR	10588553	ExpressionStatement	exc -> func_move_orig = ( TT_Move_Func ) Direct_Move_Orig	2504:4:92081:92133	10588356	4	True				
ANR	10588554	AssignmentExpression	exc -> func_move_orig = ( TT_Move_Func ) Direct_Move_Orig		10588356	0		=			
ANR	10588555	PtrMemberAccess	exc -> func_move_orig		10588356	0					
ANR	10588556	Identifier	exc		10588356	0					
ANR	10588557	Identifier	func_move_orig		10588356	1					
ANR	10588558	CastExpression	( TT_Move_Func ) Direct_Move_Orig		10588356	1					
ANR	10588559	CastTarget	TT_Move_Func		10588356	0					
ANR	10588560	Identifier	Direct_Move_Orig		10588356	1					
ANR	10588561	IfStatement	if ( exc -> F_dot_P == 0x4000L )		10588356	5					
ANR	10588562	Condition	exc -> F_dot_P == 0x4000L	2506:9:92145:92167	10588356	0	True				
ANR	10588563	EqualityExpression	exc -> F_dot_P == 0x4000L		10588356	0		==			
ANR	10588564	PtrMemberAccess	exc -> F_dot_P		10588356	0					
ANR	10588565	Identifier	exc		10588356	0					
ANR	10588566	Identifier	F_dot_P		10588356	1					
ANR	10588567	PrimaryExpression	0x4000L		10588356	1					
ANR	10588568	CompoundStatement		29:4:1021:1021	10588356	1					
ANR	10588569	IfStatement	if ( exc -> GS . freeVector . x == 0x4000 )		10588356	0					
ANR	10588570	Condition	exc -> GS . freeVector . x == 0x4000	2508:11:92188:92217	10588356	0	True				
ANR	10588571	EqualityExpression	exc -> GS . freeVector . x == 0x4000		10588356	0		==			
ANR	10588572	MemberAccess	exc -> GS . freeVector . x		10588356	0					
ANR	10588573	MemberAccess	exc -> GS . freeVector		10588356	0					
ANR	10588574	PtrMemberAccess	exc -> GS		10588356	0					
ANR	10588575	Identifier	exc		10588356	0					
ANR	10588576	Identifier	GS		10588356	1					
ANR	10588577	Identifier	freeVector		10588356	1					
ANR	10588578	Identifier	x		10588356	1					
ANR	10588579	PrimaryExpression	0x4000		10588356	1					
ANR	10588580	CompoundStatement		31:6:1073:1073	10588356	1					
ANR	10588581	ExpressionStatement	exc -> func_move = ( TT_Move_Func ) Direct_Move_X	2510:8:92237:92286	10588356	0	True				
ANR	10588582	AssignmentExpression	exc -> func_move = ( TT_Move_Func ) Direct_Move_X		10588356	0		=			
ANR	10588583	PtrMemberAccess	exc -> func_move		10588356	0					
ANR	10588584	Identifier	exc		10588356	0					
ANR	10588585	Identifier	func_move		10588356	1					
ANR	10588586	CastExpression	( TT_Move_Func ) Direct_Move_X		10588356	1					
ANR	10588587	CastTarget	TT_Move_Func		10588356	0					
ANR	10588588	Identifier	Direct_Move_X		10588356	1					
ANR	10588589	ExpressionStatement	exc -> func_move_orig = ( TT_Move_Func ) Direct_Move_Orig_X	2511:8:92296:92350	10588356	1	True				
ANR	10588590	AssignmentExpression	exc -> func_move_orig = ( TT_Move_Func ) Direct_Move_Orig_X		10588356	0		=			
ANR	10588591	PtrMemberAccess	exc -> func_move_orig		10588356	0					
ANR	10588592	Identifier	exc		10588356	0					
ANR	10588593	Identifier	func_move_orig		10588356	1					
ANR	10588594	CastExpression	( TT_Move_Func ) Direct_Move_Orig_X		10588356	1					
ANR	10588595	CastTarget	TT_Move_Func		10588356	0					
ANR	10588596	Identifier	Direct_Move_Orig_X		10588356	1					
ANR	10588597	ElseStatement	else		10588356	0					
ANR	10588598	IfStatement	if ( exc -> GS . freeVector . y == 0x4000 )		10588356	0					
ANR	10588599	Condition	exc -> GS . freeVector . y == 0x4000	2513:16:92376:92405	10588356	0	True				
ANR	10588600	EqualityExpression	exc -> GS . freeVector . y == 0x4000		10588356	0		==			
ANR	10588601	MemberAccess	exc -> GS . freeVector . y		10588356	0					
ANR	10588602	MemberAccess	exc -> GS . freeVector		10588356	0					
ANR	10588603	PtrMemberAccess	exc -> GS		10588356	0					
ANR	10588604	Identifier	exc		10588356	0					
ANR	10588605	Identifier	GS		10588356	1					
ANR	10588606	Identifier	freeVector		10588356	1					
ANR	10588607	Identifier	y		10588356	1					
ANR	10588608	PrimaryExpression	0x4000		10588356	1					
ANR	10588609	CompoundStatement		36:6:1261:1261	10588356	1					
ANR	10588610	ExpressionStatement	exc -> func_move = ( TT_Move_Func ) Direct_Move_Y	2515:8:92425:92474	10588356	0	True				
ANR	10588611	AssignmentExpression	exc -> func_move = ( TT_Move_Func ) Direct_Move_Y		10588356	0		=			
ANR	10588612	PtrMemberAccess	exc -> func_move		10588356	0					
ANR	10588613	Identifier	exc		10588356	0					
ANR	10588614	Identifier	func_move		10588356	1					
ANR	10588615	CastExpression	( TT_Move_Func ) Direct_Move_Y		10588356	1					
ANR	10588616	CastTarget	TT_Move_Func		10588356	0					
ANR	10588617	Identifier	Direct_Move_Y		10588356	1					
ANR	10588618	ExpressionStatement	exc -> func_move_orig = ( TT_Move_Func ) Direct_Move_Orig_Y	2516:8:92484:92538	10588356	1	True				
ANR	10588619	AssignmentExpression	exc -> func_move_orig = ( TT_Move_Func ) Direct_Move_Orig_Y		10588356	0		=			
ANR	10588620	PtrMemberAccess	exc -> func_move_orig		10588356	0					
ANR	10588621	Identifier	exc		10588356	0					
ANR	10588622	Identifier	func_move_orig		10588356	1					
ANR	10588623	CastExpression	( TT_Move_Func ) Direct_Move_Orig_Y		10588356	1					
ANR	10588624	CastTarget	TT_Move_Func		10588356	0					
ANR	10588625	Identifier	Direct_Move_Orig_Y		10588356	1					
ANR	10588626	IfStatement	if ( FT_ABS ( exc -> F_dot_P ) < 0x400L )		10588356	6					
ANR	10588627	Condition	FT_ABS ( exc -> F_dot_P ) < 0x400L	2523:9:92701:92731	10588356	0	True				
ANR	10588628	RelationalExpression	FT_ABS ( exc -> F_dot_P ) < 0x400L		10588356	0		<			
ANR	10588629	CallExpression	FT_ABS ( exc -> F_dot_P )		10588356	0					
ANR	10588630	Callee	FT_ABS		10588356	0					
ANR	10588631	Identifier	FT_ABS		10588356	0					
ANR	10588632	ArgumentList	exc -> F_dot_P		10588356	1					
ANR	10588633	Argument	exc -> F_dot_P		10588356	0					
ANR	10588634	PtrMemberAccess	exc -> F_dot_P		10588356	0					
ANR	10588635	Identifier	exc		10588356	0					
ANR	10588636	Identifier	F_dot_P		10588356	1					
ANR	10588637	PrimaryExpression	0x400L		10588356	1					
ANR	10588638	ExpressionStatement	exc -> F_dot_P = 0x4000L	2524:6:92741:92763	10588356	1	True				
ANR	10588639	AssignmentExpression	exc -> F_dot_P = 0x4000L		10588356	0		=			
ANR	10588640	PtrMemberAccess	exc -> F_dot_P		10588356	0					
ANR	10588641	Identifier	exc		10588356	0					
ANR	10588642	Identifier	F_dot_P		10588356	1					
ANR	10588643	PrimaryExpression	0x4000L		10588356	1					
ANR	10588644	ExpressionStatement	exc -> tt_metrics . ratio = 0	2527:4:92808:92833	10588356	7	True				
ANR	10588645	AssignmentExpression	exc -> tt_metrics . ratio = 0		10588356	0		=			
ANR	10588646	MemberAccess	exc -> tt_metrics . ratio		10588356	0					
ANR	10588647	PtrMemberAccess	exc -> tt_metrics		10588356	0					
ANR	10588648	Identifier	exc		10588356	0					
ANR	10588649	Identifier	tt_metrics		10588356	1					
ANR	10588650	Identifier	ratio		10588356	1					
ANR	10588651	PrimaryExpression	0		10588356	1					
ANR	10588652	ReturnType	static void		10588356	1					
ANR	10588653	Identifier	Compute_Funcs		10588356	2					
ANR	10588654	ParameterList	TT_ExecContext exc		10588356	3					
ANR	10588655	Parameter	TT_ExecContext exc	2478:17:91129:91147	10588356	0	True				
ANR	10588656	ParameterType	TT_ExecContext		10588356	0					
ANR	10588657	Identifier	exc		10588356	1					
ANR	10588658	CFGEntryNode	ENTRY		10588356		True				
ANR	10588659	CFGExitNode	EXIT		10588356		True				
ANR	10588660	Symbol	exc -> GS . freeVector . x		10588356						
ANR	10588661	Symbol	exc -> GS . freeVector . y		10588356						
ANR	10588662	Symbol	* exc		10588356						
ANR	10588663	Symbol	exc -> GS . dualVector . x		10588356						
ANR	10588664	Symbol	exc -> GS . dualVector . y		10588356						
ANR	10588665	Symbol	exc -> GS . dualVector		10588356						
ANR	10588666	Symbol	exc -> tt_metrics . ratio		10588356						
ANR	10588667	Symbol	exc		10588356						
ANR	10588668	Symbol	exc -> func_move_orig		10588356						
ANR	10588669	Symbol	exc -> GS . projVector		10588356						
ANR	10588670	Symbol	Dual_Project		10588356						
ANR	10588671	Symbol	exc -> func_move		10588356						
ANR	10588672	Symbol	exc -> F_dot_P		10588356						
ANR	10588673	Symbol	FT_ABS		10588356						
ANR	10588674	Symbol	Direct_Move_Orig		10588356						
ANR	10588675	Symbol	Direct_Move_Y		10588356						
ANR	10588676	Symbol	Direct_Move_X		10588356						
ANR	10588677	Symbol	exc -> GS		10588356						
ANR	10588678	Symbol	exc -> tt_metrics		10588356						
ANR	10588679	Symbol	Project_x		10588356						
ANR	10588680	Symbol	Direct_Move		10588356						
ANR	10588681	Symbol	Direct_Move_Orig_X		10588356						
ANR	10588682	Symbol	Project_y		10588356						
ANR	10588683	Symbol	Direct_Move_Orig_Y		10588356						
ANR	10588684	Symbol	Project		10588356						
ANR	10588685	Symbol	exc -> func_dualproj		10588356						
ANR	10588686	Symbol	exc -> GS . projVector . x		10588356						
ANR	10588687	Symbol	exc -> GS . projVector . y		10588356						
ANR	10588688	Symbol	exc -> func_project		10588356						
ANR	10588689	Symbol	exc -> GS . freeVector		10588356						
ANR	10588690	Function	Normalize	2553:2:94559:95053							
ANR	10588691	FunctionDef	"Normalize (FT_F26Dot6 Vx , FT_F26Dot6 Vy , FT_UnitVector * R)"		10588690	0					
ANR	10588692	CompoundStatement		2557:2:94675:95053	10588690	0					
ANR	10588693	IdentifierDeclStatement	FT_Vector V ;	2558:4:94681:94692	10588690	0	True				
ANR	10588694	IdentifierDecl	V		10588690	0					
ANR	10588695	IdentifierDeclType	FT_Vector		10588690	0					
ANR	10588696	Identifier	V		10588690	1					
ANR	10588697	IfStatement	if ( Vx == 0 && Vy == 0 )		10588690	1					
ANR	10588698	Condition	Vx == 0 && Vy == 0	2561:9:94705:94722	10588690	0	True				
ANR	10588699	AndExpression	Vx == 0 && Vy == 0		10588690	0		&&			
ANR	10588700	EqualityExpression	Vx == 0		10588690	0		==			
ANR	10588701	Identifier	Vx		10588690	0					
ANR	10588702	PrimaryExpression	0		10588690	1					
ANR	10588703	EqualityExpression	Vy == 0		10588690	1		==			
ANR	10588704	Identifier	Vy		10588690	0					
ANR	10588705	PrimaryExpression	0		10588690	1					
ANR	10588706	CompoundStatement		6:4:54:54	10588690	1					
ANR	10588707	ReturnStatement	return SUCCESS ;	2565:6:94876:94890	10588690	0	True				
ANR	10588708	Identifier	SUCCESS		10588690	0					
ANR	10588709	ExpressionStatement	V . x = Vx	2568:4:94903:94911	10588690	2	True				
ANR	10588710	AssignmentExpression	V . x = Vx		10588690	0		=			
ANR	10588711	MemberAccess	V . x		10588690	0					
ANR	10588712	Identifier	V		10588690	0					
ANR	10588713	Identifier	x		10588690	1					
ANR	10588714	Identifier	Vx		10588690	1					
ANR	10588715	ExpressionStatement	V . y = Vy	2569:4:94917:94925	10588690	3	True				
ANR	10588716	AssignmentExpression	V . y = Vy		10588690	0		=			
ANR	10588717	MemberAccess	V . y		10588690	0					
ANR	10588718	Identifier	V		10588690	0					
ANR	10588719	Identifier	y		10588690	1					
ANR	10588720	Identifier	Vy		10588690	1					
ANR	10588721	ExpressionStatement	FT_Vector_NormLen ( & V )	2571:4:94932:94955	10588690	4	True				
ANR	10588722	CallExpression	FT_Vector_NormLen ( & V )		10588690	0					
ANR	10588723	Callee	FT_Vector_NormLen		10588690	0					
ANR	10588724	Identifier	FT_Vector_NormLen		10588690	0					
ANR	10588725	ArgumentList	& V		10588690	1					
ANR	10588726	Argument	& V		10588690	0					
ANR	10588727	UnaryOperationExpression	& V		10588690	0					
ANR	10588728	UnaryOperator	&		10588690	0					
ANR	10588729	Identifier	V		10588690	1					
ANR	10588730	ExpressionStatement	R -> x = ( FT_F2Dot14 ) ( V . x / 4 )	2573:4:94962:94992	10588690	5	True				
ANR	10588731	AssignmentExpression	R -> x = ( FT_F2Dot14 ) ( V . x / 4 )		10588690	0		=			
ANR	10588732	PtrMemberAccess	R -> x		10588690	0					
ANR	10588733	Identifier	R		10588690	0					
ANR	10588734	Identifier	x		10588690	1					
ANR	10588735	CastExpression	( FT_F2Dot14 ) ( V . x / 4 )		10588690	1					
ANR	10588736	CastTarget	FT_F2Dot14		10588690	0					
ANR	10588737	MultiplicativeExpression	V . x / 4		10588690	1		/			
ANR	10588738	MemberAccess	V . x		10588690	0					
ANR	10588739	Identifier	V		10588690	0					
ANR	10588740	Identifier	x		10588690	1					
ANR	10588741	PrimaryExpression	4		10588690	1					
ANR	10588742	ExpressionStatement	R -> y = ( FT_F2Dot14 ) ( V . y / 4 )	2574:4:94998:95028	10588690	6	True				
ANR	10588743	AssignmentExpression	R -> y = ( FT_F2Dot14 ) ( V . y / 4 )		10588690	0		=			
ANR	10588744	PtrMemberAccess	R -> y		10588690	0					
ANR	10588745	Identifier	R		10588690	0					
ANR	10588746	Identifier	y		10588690	1					
ANR	10588747	CastExpression	( FT_F2Dot14 ) ( V . y / 4 )		10588690	1					
ANR	10588748	CastTarget	FT_F2Dot14		10588690	0					
ANR	10588749	MultiplicativeExpression	V . y / 4		10588690	1		/			
ANR	10588750	MemberAccess	V . y		10588690	0					
ANR	10588751	Identifier	V		10588690	0					
ANR	10588752	Identifier	y		10588690	1					
ANR	10588753	PrimaryExpression	4		10588690	1					
ANR	10588754	ReturnStatement	return SUCCESS ;	2576:4:95035:95049	10588690	7	True				
ANR	10588755	Identifier	SUCCESS		10588690	0					
ANR	10588756	ReturnType	static FT_Bool		10588690	1					
ANR	10588757	Identifier	Normalize		10588690	2					
ANR	10588758	ParameterList	"FT_F26Dot6 Vx , FT_F26Dot6 Vy , FT_UnitVector * R"		10588690	3					
ANR	10588759	Parameter	FT_F26Dot6 Vx	2554:13:94587:94604	10588690	0	True				
ANR	10588760	ParameterType	FT_F26Dot6		10588690	0					
ANR	10588761	Identifier	Vx		10588690	1					
ANR	10588762	Parameter	FT_F26Dot6 Vy	2555:13:94620:94637	10588690	1	True				
ANR	10588763	ParameterType	FT_F26Dot6		10588690	0					
ANR	10588764	Identifier	Vy		10588690	1					
ANR	10588765	Parameter	FT_UnitVector * R	2556:13:94653:94669	10588690	2	True				
ANR	10588766	ParameterType	FT_UnitVector *		10588690	0					
ANR	10588767	Identifier	R		10588690	1					
ANR	10588768	CFGEntryNode	ENTRY		10588690		True				
ANR	10588769	CFGExitNode	EXIT		10588690		True				
ANR	10588770	Symbol	Vx		10588690						
ANR	10588771	Symbol	R		10588690						
ANR	10588772	Symbol	R -> x		10588690						
ANR	10588773	Symbol	Vy		10588690						
ANR	10588774	Symbol	SUCCESS		10588690						
ANR	10588775	Symbol	V		10588690						
ANR	10588776	Symbol	V . y		10588690						
ANR	10588777	Symbol	V . x		10588690						
ANR	10588778	Symbol	& V		10588690						
ANR	10588779	Symbol	* R		10588690						
ANR	10588780	Symbol	R -> y		10588690						
ANR	10588781	Function	Ins_MPPEM	2601:2:96197:96326							
ANR	10588782	FunctionDef	"Ins_MPPEM (TT_ExecContext exc , FT_Long * args)"		10588781	0					
ANR	10588783	CompoundStatement		2604:2:96281:96326	10588781	0					
ANR	10588784	ExpressionStatement	args [ 0 ] = exc -> func_cur_ppem ( exc )	2605:4:96287:96322	10588781	0	True				
ANR	10588785	AssignmentExpression	args [ 0 ] = exc -> func_cur_ppem ( exc )		10588781	0		=			
ANR	10588786	ArrayIndexing	args [ 0 ]		10588781	0					
ANR	10588787	Identifier	args		10588781	0					
ANR	10588788	PrimaryExpression	0		10588781	1					
ANR	10588789	CallExpression	exc -> func_cur_ppem ( exc )		10588781	1					
ANR	10588790	Callee	exc -> func_cur_ppem		10588781	0					
ANR	10588791	PtrMemberAccess	exc -> func_cur_ppem		10588781	0					
ANR	10588792	Identifier	exc		10588781	0					
ANR	10588793	Identifier	func_cur_ppem		10588781	1					
ANR	10588794	ArgumentList	exc		10588781	1					
ANR	10588795	Argument	exc		10588781	0					
ANR	10588796	Identifier	exc		10588781	0					
ANR	10588797	ReturnType	static void		10588781	1					
ANR	10588798	Identifier	Ins_MPPEM		10588781	2					
ANR	10588799	ParameterList	"TT_ExecContext exc , FT_Long * args"		10588781	3					
ANR	10588800	Parameter	TT_ExecContext exc	2602:13:96222:96240	10588781	0	True				
ANR	10588801	ParameterType	TT_ExecContext		10588781	0					
ANR	10588802	Identifier	exc		10588781	1					
ANR	10588803	Parameter	FT_Long * args	2603:13:96256:96275	10588781	1	True				
ANR	10588804	ParameterType	FT_Long *		10588781	0					
ANR	10588805	Identifier	args		10588781	1					
ANR	10588806	CFGEntryNode	ENTRY		10588781		True				
ANR	10588807	CFGExitNode	EXIT		10588781		True				
ANR	10588808	Symbol	args		10588781						
ANR	10588809	Symbol	exc		10588781						
ANR	10588810	Symbol	* exc		10588781						
ANR	10588811	Symbol	exc -> func_cur_ppem		10588781						
ANR	10588812	Symbol	* args		10588781						
ANR	10588813	Function	Ins_MPS	2615:2:96800:97475							
ANR	10588814	FunctionDef	"Ins_MPS (TT_ExecContext exc , FT_Long * args)"		10588813	0					
ANR	10588815	CompoundStatement		2618:2:96880:97475	10588813	0					
ANR	10588816	IfStatement	if ( NO_SUBPIXEL_HINTING )		10588813	0					
ANR	10588817	Condition	NO_SUBPIXEL_HINTING	2619:9:96891:96909	10588813	0	True				
ANR	10588818	Identifier	NO_SUBPIXEL_HINTING		10588813	0					
ANR	10588819	CompoundStatement		3:4:36:36	10588813	1					
ANR	10588820	ExpressionStatement	args [ 0 ] = exc -> func_cur_ppem ( exc )	2623:6:97073:97108	10588813	0	True				
ANR	10588821	AssignmentExpression	args [ 0 ] = exc -> func_cur_ppem ( exc )		10588813	0		=			
ANR	10588822	ArrayIndexing	args [ 0 ]		10588813	0					
ANR	10588823	Identifier	args		10588813	0					
ANR	10588824	PrimaryExpression	0		10588813	1					
ANR	10588825	CallExpression	exc -> func_cur_ppem ( exc )		10588813	1					
ANR	10588826	Callee	exc -> func_cur_ppem		10588813	0					
ANR	10588827	PtrMemberAccess	exc -> func_cur_ppem		10588813	0					
ANR	10588828	Identifier	exc		10588813	0					
ANR	10588829	Identifier	func_cur_ppem		10588813	1					
ANR	10588830	ArgumentList	exc		10588813	1					
ANR	10588831	Argument	exc		10588813	0					
ANR	10588832	Identifier	exc		10588813	0					
ANR	10588833	ElseStatement	else		10588813	0					
ANR	10588834	CompoundStatement		9:4:248:248	10588813	0					
ANR	10588835	ExpressionStatement	args [ 0 ] = exc -> pointSize	2631:6:97441:97465	10588813	0	True				
ANR	10588836	AssignmentExpression	args [ 0 ] = exc -> pointSize		10588813	0		=			
ANR	10588837	ArrayIndexing	args [ 0 ]		10588813	0					
ANR	10588838	Identifier	args		10588813	0					
ANR	10588839	PrimaryExpression	0		10588813	1					
ANR	10588840	PtrMemberAccess	exc -> pointSize		10588813	1					
ANR	10588841	Identifier	exc		10588813	0					
ANR	10588842	Identifier	pointSize		10588813	1					
ANR	10588843	ReturnType	static void		10588813	1					
ANR	10588844	Identifier	Ins_MPS		10588813	2					
ANR	10588845	ParameterList	"TT_ExecContext exc , FT_Long * args"		10588813	3					
ANR	10588846	Parameter	TT_ExecContext exc	2616:11:96823:96841	10588813	0	True				
ANR	10588847	ParameterType	TT_ExecContext		10588813	0					
ANR	10588848	Identifier	exc		10588813	1					
ANR	10588849	Parameter	FT_Long * args	2617:11:96855:96874	10588813	1	True				
ANR	10588850	ParameterType	FT_Long *		10588813	0					
ANR	10588851	Identifier	args		10588813	1					
ANR	10588852	CFGEntryNode	ENTRY		10588813		True				
ANR	10588853	CFGExitNode	EXIT		10588813		True				
ANR	10588854	Symbol	args		10588813						
ANR	10588855	Symbol	exc		10588813						
ANR	10588856	Symbol	NO_SUBPIXEL_HINTING		10588813						
ANR	10588857	Symbol	* exc		10588813						
ANR	10588858	Symbol	exc -> func_cur_ppem		10588813						
ANR	10588859	Symbol	exc -> pointSize		10588813						
ANR	10588860	Symbol	* args		10588813						
ANR	10588861	Function	Ins_DUP	2642:2:97949:98018							
ANR	10588862	FunctionDef	Ins_DUP (FT_Long * args)		10588861	0					
ANR	10588863	CompoundStatement		2644:2:97991:98018	10588861	0					
ANR	10588864	ExpressionStatement	args [ 1 ] = args [ 0 ]	2645:4:97997:98014	10588861	0	True				
ANR	10588865	AssignmentExpression	args [ 1 ] = args [ 0 ]		10588861	0		=			
ANR	10588866	ArrayIndexing	args [ 1 ]		10588861	0					
ANR	10588867	Identifier	args		10588861	0					
ANR	10588868	PrimaryExpression	1		10588861	1					
ANR	10588869	ArrayIndexing	args [ 0 ]		10588861	1					
ANR	10588870	Identifier	args		10588861	0					
ANR	10588871	PrimaryExpression	0		10588861	1					
ANR	10588872	ReturnType	static void		10588861	1					
ANR	10588873	Identifier	Ins_DUP		10588861	2					
ANR	10588874	ParameterList	FT_Long * args		10588861	3					
ANR	10588875	Parameter	FT_Long * args	2643:11:97972:97985	10588861	0	True				
ANR	10588876	ParameterType	FT_Long *		10588861	0					
ANR	10588877	Identifier	args		10588861	1					
ANR	10588878	CFGEntryNode	ENTRY		10588861		True				
ANR	10588879	CFGExitNode	EXIT		10588861		True				
ANR	10588880	Symbol	args		10588861						
ANR	10588881	Symbol	* args		10588861						
ANR	10588882	Function	Ins_POP	2655:2:98492:98552							
ANR	10588883	FunctionDef	Ins_POP ()		10588882	0					
ANR	10588884	CompoundStatement		2657:2:98524:98552	10588882	0					
ANR	10588885	ReturnType	static void		10588882	1					
ANR	10588886	Identifier	Ins_POP		10588882	2					
ANR	10588887	ParameterList			10588882	3					
ANR	10588888	CFGEntryNode	ENTRY		10588882		True				
ANR	10588889	CFGExitNode	EXIT		10588882		True				
ANR	10588890	Function	Ins_CLEAR	2668:2:99026:99101							
ANR	10588891	FunctionDef	Ins_CLEAR (TT_ExecContext exc)		10588890	0					
ANR	10588892	CompoundStatement		2670:2:99075:99101	10588890	0					
ANR	10588893	ExpressionStatement	exc -> new_top = 0	2671:4:99081:99097	10588890	0	True				
ANR	10588894	AssignmentExpression	exc -> new_top = 0		10588890	0		=			
ANR	10588895	PtrMemberAccess	exc -> new_top		10588890	0					
ANR	10588896	Identifier	exc		10588890	0					
ANR	10588897	Identifier	new_top		10588890	1					
ANR	10588898	PrimaryExpression	0		10588890	1					
ANR	10588899	ReturnType	static void		10588890	1					
ANR	10588900	Identifier	Ins_CLEAR		10588890	2					
ANR	10588901	ParameterList	TT_ExecContext exc		10588890	3					
ANR	10588902	Parameter	TT_ExecContext exc	2669:13:99051:99069	10588890	0	True				
ANR	10588903	ParameterType	TT_ExecContext		10588890	0					
ANR	10588904	Identifier	exc		10588890	1					
ANR	10588905	CFGEntryNode	ENTRY		10588890		True				
ANR	10588906	CFGExitNode	EXIT		10588890		True				
ANR	10588907	Symbol	exc -> new_top		10588890						
ANR	10588908	Symbol	exc		10588890						
ANR	10588909	Symbol	* exc		10588890						
ANR	10588910	Function	Ins_SWAP	2681:2:99575:99703							
ANR	10588911	FunctionDef	Ins_SWAP (FT_Long * args)		10588910	0					
ANR	10588912	CompoundStatement		2683:2:99618:99703	10588910	0					
ANR	10588913	IdentifierDeclStatement	FT_Long L ;	2684:4:99624:99634	10588910	0	True				
ANR	10588914	IdentifierDecl	L		10588910	0					
ANR	10588915	IdentifierDeclType	FT_Long		10588910	0					
ANR	10588916	Identifier	L		10588910	1					
ANR	10588917	ExpressionStatement	L = args [ 0 ]	2687:4:99642:99659	10588910	1	True				
ANR	10588918	AssignmentExpression	L = args [ 0 ]		10588910	0		=			
ANR	10588919	Identifier	L		10588910	0					
ANR	10588920	ArrayIndexing	args [ 0 ]		10588910	1					
ANR	10588921	Identifier	args		10588910	0					
ANR	10588922	PrimaryExpression	0		10588910	1					
ANR	10588923	ExpressionStatement	args [ 0 ] = args [ 1 ]	2688:4:99665:99682	10588910	2	True				
ANR	10588924	AssignmentExpression	args [ 0 ] = args [ 1 ]		10588910	0		=			
ANR	10588925	ArrayIndexing	args [ 0 ]		10588910	0					
ANR	10588926	Identifier	args		10588910	0					
ANR	10588927	PrimaryExpression	0		10588910	1					
ANR	10588928	ArrayIndexing	args [ 1 ]		10588910	1					
ANR	10588929	Identifier	args		10588910	0					
ANR	10588930	PrimaryExpression	1		10588910	1					
ANR	10588931	ExpressionStatement	args [ 1 ] = L	2689:4:99688:99699	10588910	3	True				
ANR	10588932	AssignmentExpression	args [ 1 ] = L		10588910	0		=			
ANR	10588933	ArrayIndexing	args [ 1 ]		10588910	0					
ANR	10588934	Identifier	args		10588910	0					
ANR	10588935	PrimaryExpression	1		10588910	1					
ANR	10588936	Identifier	L		10588910	1					
ANR	10588937	ReturnType	static void		10588910	1					
ANR	10588938	Identifier	Ins_SWAP		10588910	2					
ANR	10588939	ParameterList	FT_Long * args		10588910	3					
ANR	10588940	Parameter	FT_Long * args	2682:12:99599:99612	10588910	0	True				
ANR	10588941	ParameterType	FT_Long *		10588910	0					
ANR	10588942	Identifier	args		10588910	1					
ANR	10588943	CFGEntryNode	ENTRY		10588910		True				
ANR	10588944	CFGExitNode	EXIT		10588910		True				
ANR	10588945	Symbol	args		10588910						
ANR	10588946	Symbol	L		10588910						
ANR	10588947	Symbol	* args		10588910						
ANR	10588948	Function	Ins_DEPTH	2699:2:100177:100289							
ANR	10588949	FunctionDef	"Ins_DEPTH (TT_ExecContext exc , FT_Long * args)"		10588948	0					
ANR	10588950	CompoundStatement		2702:2:100261:100289	10588948	0					
ANR	10588951	ExpressionStatement	args [ 0 ] = exc -> top	2703:4:100267:100285	10588948	0	True				
ANR	10588952	AssignmentExpression	args [ 0 ] = exc -> top		10588948	0		=			
ANR	10588953	ArrayIndexing	args [ 0 ]		10588948	0					
ANR	10588954	Identifier	args		10588948	0					
ANR	10588955	PrimaryExpression	0		10588948	1					
ANR	10588956	PtrMemberAccess	exc -> top		10588948	1					
ANR	10588957	Identifier	exc		10588948	0					
ANR	10588958	Identifier	top		10588948	1					
ANR	10588959	ReturnType	static void		10588948	1					
ANR	10588960	Identifier	Ins_DEPTH		10588948	2					
ANR	10588961	ParameterList	"TT_ExecContext exc , FT_Long * args"		10588948	3					
ANR	10588962	Parameter	TT_ExecContext exc	2700:13:100202:100220	10588948	0	True				
ANR	10588963	ParameterType	TT_ExecContext		10588948	0					
ANR	10588964	Identifier	exc		10588948	1					
ANR	10588965	Parameter	FT_Long * args	2701:13:100236:100255	10588948	1	True				
ANR	10588966	ParameterType	FT_Long *		10588948	0					
ANR	10588967	Identifier	args		10588948	1					
ANR	10588968	CFGEntryNode	ENTRY		10588948		True				
ANR	10588969	CFGExitNode	EXIT		10588948		True				
ANR	10588970	Symbol	args		10588948						
ANR	10588971	Symbol	exc		10588948						
ANR	10588972	Symbol	* exc		10588948						
ANR	10588973	Symbol	exc -> top		10588948						
ANR	10588974	Symbol	* args		10588948						
ANR	10588975	Function	Ins_LT	2713:2:100763:100845							
ANR	10588976	FunctionDef	Ins_LT (FT_Long * args)		10588975	0					
ANR	10588977	CompoundStatement		2715:2:100804:100845	10588975	0					
ANR	10588978	ExpressionStatement	args [ 0 ] = ( args [ 0 ] < args [ 1 ] )	2716:4:100810:100841	10588975	0	True				
ANR	10588979	AssignmentExpression	args [ 0 ] = ( args [ 0 ] < args [ 1 ] )		10588975	0		=			
ANR	10588980	ArrayIndexing	args [ 0 ]		10588975	0					
ANR	10588981	Identifier	args		10588975	0					
ANR	10588982	PrimaryExpression	0		10588975	1					
ANR	10588983	RelationalExpression	args [ 0 ] < args [ 1 ]		10588975	1		<			
ANR	10588984	ArrayIndexing	args [ 0 ]		10588975	0					
ANR	10588985	Identifier	args		10588975	0					
ANR	10588986	PrimaryExpression	0		10588975	1					
ANR	10588987	ArrayIndexing	args [ 1 ]		10588975	1					
ANR	10588988	Identifier	args		10588975	0					
ANR	10588989	PrimaryExpression	1		10588975	1					
ANR	10588990	ReturnType	static void		10588975	1					
ANR	10588991	Identifier	Ins_LT		10588975	2					
ANR	10588992	ParameterList	FT_Long * args		10588975	3					
ANR	10588993	Parameter	FT_Long * args	2714:10:100785:100798	10588975	0	True				
ANR	10588994	ParameterType	FT_Long *		10588975	0					
ANR	10588995	Identifier	args		10588975	1					
ANR	10588996	CFGEntryNode	ENTRY		10588975		True				
ANR	10588997	CFGExitNode	EXIT		10588975		True				
ANR	10588998	Symbol	args		10588975						
ANR	10588999	Symbol	* args		10588975						
ANR	10589000	Function	Ins_LTEQ	2726:2:101319:101404							
ANR	10589001	FunctionDef	Ins_LTEQ (FT_Long * args)		10589000	0					
ANR	10589002	CompoundStatement		2728:2:101362:101404	10589000	0					
ANR	10589003	ExpressionStatement	args [ 0 ] = ( args [ 0 ] <= args [ 1 ] )	2729:4:101368:101400	10589000	0	True				
ANR	10589004	AssignmentExpression	args [ 0 ] = ( args [ 0 ] <= args [ 1 ] )		10589000	0		=			
ANR	10589005	ArrayIndexing	args [ 0 ]		10589000	0					
ANR	10589006	Identifier	args		10589000	0					
ANR	10589007	PrimaryExpression	0		10589000	1					
ANR	10589008	RelationalExpression	args [ 0 ] <= args [ 1 ]		10589000	1		<=			
ANR	10589009	ArrayIndexing	args [ 0 ]		10589000	0					
ANR	10589010	Identifier	args		10589000	0					
ANR	10589011	PrimaryExpression	0		10589000	1					
ANR	10589012	ArrayIndexing	args [ 1 ]		10589000	1					
ANR	10589013	Identifier	args		10589000	0					
ANR	10589014	PrimaryExpression	1		10589000	1					
ANR	10589015	ReturnType	static void		10589000	1					
ANR	10589016	Identifier	Ins_LTEQ		10589000	2					
ANR	10589017	ParameterList	FT_Long * args		10589000	3					
ANR	10589018	Parameter	FT_Long * args	2727:12:101343:101356	10589000	0	True				
ANR	10589019	ParameterType	FT_Long *		10589000	0					
ANR	10589020	Identifier	args		10589000	1					
ANR	10589021	CFGEntryNode	ENTRY		10589000		True				
ANR	10589022	CFGExitNode	EXIT		10589000		True				
ANR	10589023	Symbol	args		10589000						
ANR	10589024	Symbol	* args		10589000						
ANR	10589025	Function	Ins_GT	2739:2:101878:101960							
ANR	10589026	FunctionDef	Ins_GT (FT_Long * args)		10589025	0					
ANR	10589027	CompoundStatement		2741:2:101919:101960	10589025	0					
ANR	10589028	ExpressionStatement	args [ 0 ] = ( args [ 0 ] > args [ 1 ] )	2742:4:101925:101956	10589025	0	True				
ANR	10589029	AssignmentExpression	args [ 0 ] = ( args [ 0 ] > args [ 1 ] )		10589025	0		=			
ANR	10589030	ArrayIndexing	args [ 0 ]		10589025	0					
ANR	10589031	Identifier	args		10589025	0					
ANR	10589032	PrimaryExpression	0		10589025	1					
ANR	10589033	RelationalExpression	args [ 0 ] > args [ 1 ]		10589025	1		>			
ANR	10589034	ArrayIndexing	args [ 0 ]		10589025	0					
ANR	10589035	Identifier	args		10589025	0					
ANR	10589036	PrimaryExpression	0		10589025	1					
ANR	10589037	ArrayIndexing	args [ 1 ]		10589025	1					
ANR	10589038	Identifier	args		10589025	0					
ANR	10589039	PrimaryExpression	1		10589025	1					
ANR	10589040	ReturnType	static void		10589025	1					
ANR	10589041	Identifier	Ins_GT		10589025	2					
ANR	10589042	ParameterList	FT_Long * args		10589025	3					
ANR	10589043	Parameter	FT_Long * args	2740:10:101900:101913	10589025	0	True				
ANR	10589044	ParameterType	FT_Long *		10589025	0					
ANR	10589045	Identifier	args		10589025	1					
ANR	10589046	CFGEntryNode	ENTRY		10589025		True				
ANR	10589047	CFGExitNode	EXIT		10589025		True				
ANR	10589048	Symbol	args		10589025						
ANR	10589049	Symbol	* args		10589025						
ANR	10589050	Function	Ins_GTEQ	2752:2:102434:102519							
ANR	10589051	FunctionDef	Ins_GTEQ (FT_Long * args)		10589050	0					
ANR	10589052	CompoundStatement		2754:2:102477:102519	10589050	0					
ANR	10589053	ExpressionStatement	args [ 0 ] = ( args [ 0 ] >= args [ 1 ] )	2755:4:102483:102515	10589050	0	True				
ANR	10589054	AssignmentExpression	args [ 0 ] = ( args [ 0 ] >= args [ 1 ] )		10589050	0		=			
ANR	10589055	ArrayIndexing	args [ 0 ]		10589050	0					
ANR	10589056	Identifier	args		10589050	0					
ANR	10589057	PrimaryExpression	0		10589050	1					
ANR	10589058	RelationalExpression	args [ 0 ] >= args [ 1 ]		10589050	1		>=			
ANR	10589059	ArrayIndexing	args [ 0 ]		10589050	0					
ANR	10589060	Identifier	args		10589050	0					
ANR	10589061	PrimaryExpression	0		10589050	1					
ANR	10589062	ArrayIndexing	args [ 1 ]		10589050	1					
ANR	10589063	Identifier	args		10589050	0					
ANR	10589064	PrimaryExpression	1		10589050	1					
ANR	10589065	ReturnType	static void		10589050	1					
ANR	10589066	Identifier	Ins_GTEQ		10589050	2					
ANR	10589067	ParameterList	FT_Long * args		10589050	3					
ANR	10589068	Parameter	FT_Long * args	2753:12:102458:102471	10589050	0	True				
ANR	10589069	ParameterType	FT_Long *		10589050	0					
ANR	10589070	Identifier	args		10589050	1					
ANR	10589071	CFGEntryNode	ENTRY		10589050		True				
ANR	10589072	CFGExitNode	EXIT		10589050		True				
ANR	10589073	Symbol	args		10589050						
ANR	10589074	Symbol	* args		10589050						
ANR	10589075	Function	Ins_EQ	2765:2:102993:103076							
ANR	10589076	FunctionDef	Ins_EQ (FT_Long * args)		10589075	0					
ANR	10589077	CompoundStatement		2767:2:103034:103076	10589075	0					
ANR	10589078	ExpressionStatement	args [ 0 ] = ( args [ 0 ] == args [ 1 ] )	2768:4:103040:103072	10589075	0	True				
ANR	10589079	AssignmentExpression	args [ 0 ] = ( args [ 0 ] == args [ 1 ] )		10589075	0		=			
ANR	10589080	ArrayIndexing	args [ 0 ]		10589075	0					
ANR	10589081	Identifier	args		10589075	0					
ANR	10589082	PrimaryExpression	0		10589075	1					
ANR	10589083	EqualityExpression	args [ 0 ] == args [ 1 ]		10589075	1		==			
ANR	10589084	ArrayIndexing	args [ 0 ]		10589075	0					
ANR	10589085	Identifier	args		10589075	0					
ANR	10589086	PrimaryExpression	0		10589075	1					
ANR	10589087	ArrayIndexing	args [ 1 ]		10589075	1					
ANR	10589088	Identifier	args		10589075	0					
ANR	10589089	PrimaryExpression	1		10589075	1					
ANR	10589090	ReturnType	static void		10589075	1					
ANR	10589091	Identifier	Ins_EQ		10589075	2					
ANR	10589092	ParameterList	FT_Long * args		10589075	3					
ANR	10589093	Parameter	FT_Long * args	2766:10:103015:103028	10589075	0	True				
ANR	10589094	ParameterType	FT_Long *		10589075	0					
ANR	10589095	Identifier	args		10589075	1					
ANR	10589096	CFGEntryNode	ENTRY		10589075		True				
ANR	10589097	CFGExitNode	EXIT		10589075		True				
ANR	10589098	Symbol	args		10589075						
ANR	10589099	Symbol	* args		10589075						
ANR	10589100	Function	Ins_NEQ	2778:2:103550:103634							
ANR	10589101	FunctionDef	Ins_NEQ (FT_Long * args)		10589100	0					
ANR	10589102	CompoundStatement		2780:2:103592:103634	10589100	0					
ANR	10589103	ExpressionStatement	args [ 0 ] = ( args [ 0 ] != args [ 1 ] )	2781:4:103598:103630	10589100	0	True				
ANR	10589104	AssignmentExpression	args [ 0 ] = ( args [ 0 ] != args [ 1 ] )		10589100	0		=			
ANR	10589105	ArrayIndexing	args [ 0 ]		10589100	0					
ANR	10589106	Identifier	args		10589100	0					
ANR	10589107	PrimaryExpression	0		10589100	1					
ANR	10589108	EqualityExpression	args [ 0 ] != args [ 1 ]		10589100	1		!=			
ANR	10589109	ArrayIndexing	args [ 0 ]		10589100	0					
ANR	10589110	Identifier	args		10589100	0					
ANR	10589111	PrimaryExpression	0		10589100	1					
ANR	10589112	ArrayIndexing	args [ 1 ]		10589100	1					
ANR	10589113	Identifier	args		10589100	0					
ANR	10589114	PrimaryExpression	1		10589100	1					
ANR	10589115	ReturnType	static void		10589100	1					
ANR	10589116	Identifier	Ins_NEQ		10589100	2					
ANR	10589117	ParameterList	FT_Long * args		10589100	3					
ANR	10589118	Parameter	FT_Long * args	2779:11:103573:103586	10589100	0	True				
ANR	10589119	ParameterType	FT_Long *		10589100	0					
ANR	10589120	Identifier	args		10589100	1					
ANR	10589121	CFGEntryNode	ENTRY		10589100		True				
ANR	10589122	CFGExitNode	EXIT		10589100		True				
ANR	10589123	Symbol	args		10589100						
ANR	10589124	Symbol	* args		10589100						
ANR	10589125	Function	Ins_ODD	2791:2:104108:104262							
ANR	10589126	FunctionDef	"Ins_ODD (TT_ExecContext exc , FT_Long * args)"		10589125	0					
ANR	10589127	CompoundStatement		2794:2:104188:104262	10589125	0					
ANR	10589128	ExpressionStatement	"args [ 0 ] = ( ( exc -> func_round ( exc , args [ 0 ] , 0 ) & 127 ) == 64 )"	2795:4:104194:104258	10589125	0	True				
ANR	10589129	AssignmentExpression	"args [ 0 ] = ( ( exc -> func_round ( exc , args [ 0 ] , 0 ) & 127 ) == 64 )"		10589125	0		=			
ANR	10589130	ArrayIndexing	args [ 0 ]		10589125	0					
ANR	10589131	Identifier	args		10589125	0					
ANR	10589132	PrimaryExpression	0		10589125	1					
ANR	10589133	EqualityExpression	"( exc -> func_round ( exc , args [ 0 ] , 0 ) & 127 ) == 64"		10589125	1		==			
ANR	10589134	BitAndExpression	"exc -> func_round ( exc , args [ 0 ] , 0 ) & 127"		10589125	0		&			
ANR	10589135	CallExpression	"exc -> func_round ( exc , args [ 0 ] , 0 )"		10589125	0					
ANR	10589136	Callee	exc -> func_round		10589125	0					
ANR	10589137	PtrMemberAccess	exc -> func_round		10589125	0					
ANR	10589138	Identifier	exc		10589125	0					
ANR	10589139	Identifier	func_round		10589125	1					
ANR	10589140	ArgumentList	exc		10589125	1					
ANR	10589141	Argument	exc		10589125	0					
ANR	10589142	Identifier	exc		10589125	0					
ANR	10589143	Argument	args [ 0 ]		10589125	1					
ANR	10589144	ArrayIndexing	args [ 0 ]		10589125	0					
ANR	10589145	Identifier	args		10589125	0					
ANR	10589146	PrimaryExpression	0		10589125	1					
ANR	10589147	Argument	0		10589125	2					
ANR	10589148	PrimaryExpression	0		10589125	0					
ANR	10589149	PrimaryExpression	127		10589125	1					
ANR	10589150	PrimaryExpression	64		10589125	1					
ANR	10589151	ReturnType	static void		10589125	1					
ANR	10589152	Identifier	Ins_ODD		10589125	2					
ANR	10589153	ParameterList	"TT_ExecContext exc , FT_Long * args"		10589125	3					
ANR	10589154	Parameter	TT_ExecContext exc	2792:11:104131:104149	10589125	0	True				
ANR	10589155	ParameterType	TT_ExecContext		10589125	0					
ANR	10589156	Identifier	exc		10589125	1					
ANR	10589157	Parameter	FT_Long * args	2793:11:104163:104182	10589125	1	True				
ANR	10589158	ParameterType	FT_Long *		10589125	0					
ANR	10589159	Identifier	args		10589125	1					
ANR	10589160	CFGEntryNode	ENTRY		10589125		True				
ANR	10589161	CFGExitNode	EXIT		10589125		True				
ANR	10589162	Symbol	args		10589125						
ANR	10589163	Symbol	exc		10589125						
ANR	10589164	Symbol	exc -> func_round		10589125						
ANR	10589165	Symbol	* exc		10589125						
ANR	10589166	Symbol	* args		10589125						
ANR	10589167	Function	Ins_EVEN	2805:2:104736:104891							
ANR	10589168	FunctionDef	"Ins_EVEN (TT_ExecContext exc , FT_Long * args)"		10589167	0					
ANR	10589169	CompoundStatement		2808:2:104818:104891	10589167	0					
ANR	10589170	ExpressionStatement	"args [ 0 ] = ( ( exc -> func_round ( exc , args [ 0 ] , 0 ) & 127 ) == 0 )"	2809:4:104824:104887	10589167	0	True				
ANR	10589171	AssignmentExpression	"args [ 0 ] = ( ( exc -> func_round ( exc , args [ 0 ] , 0 ) & 127 ) == 0 )"		10589167	0		=			
ANR	10589172	ArrayIndexing	args [ 0 ]		10589167	0					
ANR	10589173	Identifier	args		10589167	0					
ANR	10589174	PrimaryExpression	0		10589167	1					
ANR	10589175	EqualityExpression	"( exc -> func_round ( exc , args [ 0 ] , 0 ) & 127 ) == 0"		10589167	1		==			
ANR	10589176	BitAndExpression	"exc -> func_round ( exc , args [ 0 ] , 0 ) & 127"		10589167	0		&			
ANR	10589177	CallExpression	"exc -> func_round ( exc , args [ 0 ] , 0 )"		10589167	0					
ANR	10589178	Callee	exc -> func_round		10589167	0					
ANR	10589179	PtrMemberAccess	exc -> func_round		10589167	0					
ANR	10589180	Identifier	exc		10589167	0					
ANR	10589181	Identifier	func_round		10589167	1					
ANR	10589182	ArgumentList	exc		10589167	1					
ANR	10589183	Argument	exc		10589167	0					
ANR	10589184	Identifier	exc		10589167	0					
ANR	10589185	Argument	args [ 0 ]		10589167	1					
ANR	10589186	ArrayIndexing	args [ 0 ]		10589167	0					
ANR	10589187	Identifier	args		10589167	0					
ANR	10589188	PrimaryExpression	0		10589167	1					
ANR	10589189	Argument	0		10589167	2					
ANR	10589190	PrimaryExpression	0		10589167	0					
ANR	10589191	PrimaryExpression	127		10589167	1					
ANR	10589192	PrimaryExpression	0		10589167	1					
ANR	10589193	ReturnType	static void		10589167	1					
ANR	10589194	Identifier	Ins_EVEN		10589167	2					
ANR	10589195	ParameterList	"TT_ExecContext exc , FT_Long * args"		10589167	3					
ANR	10589196	Parameter	TT_ExecContext exc	2806:12:104760:104778	10589167	0	True				
ANR	10589197	ParameterType	TT_ExecContext		10589167	0					
ANR	10589198	Identifier	exc		10589167	1					
ANR	10589199	Parameter	FT_Long * args	2807:12:104793:104812	10589167	1	True				
ANR	10589200	ParameterType	FT_Long *		10589167	0					
ANR	10589201	Identifier	args		10589167	1					
ANR	10589202	CFGEntryNode	ENTRY		10589167		True				
ANR	10589203	CFGExitNode	EXIT		10589167		True				
ANR	10589204	Symbol	args		10589167						
ANR	10589205	Symbol	exc		10589167						
ANR	10589206	Symbol	* exc		10589167						
ANR	10589207	Symbol	exc -> func_round		10589167						
ANR	10589208	Symbol	* args		10589167						
ANR	10589209	Function	Ins_AND	2819:2:105365:105449							
ANR	10589210	FunctionDef	Ins_AND (FT_Long * args)		10589209	0					
ANR	10589211	CompoundStatement		2821:2:105407:105449	10589209	0					
ANR	10589212	ExpressionStatement	args [ 0 ] = ( args [ 0 ] && args [ 1 ] )	2822:4:105413:105445	10589209	0	True				
ANR	10589213	AssignmentExpression	args [ 0 ] = ( args [ 0 ] && args [ 1 ] )		10589209	0		=			
ANR	10589214	ArrayIndexing	args [ 0 ]		10589209	0					
ANR	10589215	Identifier	args		10589209	0					
ANR	10589216	PrimaryExpression	0		10589209	1					
ANR	10589217	AndExpression	args [ 0 ] && args [ 1 ]		10589209	1		&&			
ANR	10589218	ArrayIndexing	args [ 0 ]		10589209	0					
ANR	10589219	Identifier	args		10589209	0					
ANR	10589220	PrimaryExpression	0		10589209	1					
ANR	10589221	ArrayIndexing	args [ 1 ]		10589209	1					
ANR	10589222	Identifier	args		10589209	0					
ANR	10589223	PrimaryExpression	1		10589209	1					
ANR	10589224	ReturnType	static void		10589209	1					
ANR	10589225	Identifier	Ins_AND		10589209	2					
ANR	10589226	ParameterList	FT_Long * args		10589209	3					
ANR	10589227	Parameter	FT_Long * args	2820:11:105388:105401	10589209	0	True				
ANR	10589228	ParameterType	FT_Long *		10589209	0					
ANR	10589229	Identifier	args		10589209	1					
ANR	10589230	CFGEntryNode	ENTRY		10589209		True				
ANR	10589231	CFGExitNode	EXIT		10589209		True				
ANR	10589232	Symbol	args		10589209						
ANR	10589233	Symbol	* args		10589209						
ANR	10589234	Function	Ins_OR	2832:2:105923:106006							
ANR	10589235	FunctionDef	Ins_OR (FT_Long * args)		10589234	0					
ANR	10589236	CompoundStatement		2834:2:105964:106006	10589234	0					
ANR	10589237	ExpressionStatement	args [ 0 ] = ( args [ 0 ] || args [ 1 ] )	2835:4:105970:106002	10589234	0	True				
ANR	10589238	AssignmentExpression	args [ 0 ] = ( args [ 0 ] || args [ 1 ] )		10589234	0		=			
ANR	10589239	ArrayIndexing	args [ 0 ]		10589234	0					
ANR	10589240	Identifier	args		10589234	0					
ANR	10589241	PrimaryExpression	0		10589234	1					
ANR	10589242	OrExpression	args [ 0 ] || args [ 1 ]		10589234	1		||			
ANR	10589243	ArrayIndexing	args [ 0 ]		10589234	0					
ANR	10589244	Identifier	args		10589234	0					
ANR	10589245	PrimaryExpression	0		10589234	1					
ANR	10589246	ArrayIndexing	args [ 1 ]		10589234	1					
ANR	10589247	Identifier	args		10589234	0					
ANR	10589248	PrimaryExpression	1		10589234	1					
ANR	10589249	ReturnType	static void		10589234	1					
ANR	10589250	Identifier	Ins_OR		10589234	2					
ANR	10589251	ParameterList	FT_Long * args		10589234	3					
ANR	10589252	Parameter	FT_Long * args	2833:10:105945:105958	10589234	0	True				
ANR	10589253	ParameterType	FT_Long *		10589234	0					
ANR	10589254	Identifier	args		10589234	1					
ANR	10589255	CFGEntryNode	ENTRY		10589234		True				
ANR	10589256	CFGExitNode	EXIT		10589234		True				
ANR	10589257	Symbol	args		10589234						
ANR	10589258	Symbol	* args		10589234						
ANR	10589259	Function	Ins_NOT	2845:2:106480:106550							
ANR	10589260	FunctionDef	Ins_NOT (FT_Long * args)		10589259	0					
ANR	10589261	CompoundStatement		2847:2:106522:106550	10589259	0					
ANR	10589262	ExpressionStatement	args [ 0 ] = ! args [ 0 ]	2848:4:106528:106546	10589259	0	True				
ANR	10589263	AssignmentExpression	args [ 0 ] = ! args [ 0 ]		10589259	0		=			
ANR	10589264	ArrayIndexing	args [ 0 ]		10589259	0					
ANR	10589265	Identifier	args		10589259	0					
ANR	10589266	PrimaryExpression	0		10589259	1					
ANR	10589267	UnaryOperationExpression	! args [ 0 ]		10589259	1					
ANR	10589268	UnaryOperator	!		10589259	0					
ANR	10589269	ArrayIndexing	args [ 0 ]		10589259	1					
ANR	10589270	Identifier	args		10589259	0					
ANR	10589271	PrimaryExpression	0		10589259	1					
ANR	10589272	ReturnType	static void		10589259	1					
ANR	10589273	Identifier	Ins_NOT		10589259	2					
ANR	10589274	ParameterList	FT_Long * args		10589259	3					
ANR	10589275	Parameter	FT_Long * args	2846:11:106503:106516	10589259	0	True				
ANR	10589276	ParameterType	FT_Long *		10589259	0					
ANR	10589277	Identifier	args		10589259	1					
ANR	10589278	CFGEntryNode	ENTRY		10589259		True				
ANR	10589279	CFGExitNode	EXIT		10589259		True				
ANR	10589280	Symbol	args		10589259						
ANR	10589281	Symbol	* args		10589259						
ANR	10589282	Function	Ins_ADD	2858:2:107024:107114							
ANR	10589283	FunctionDef	Ins_ADD (FT_Long * args)		10589282	0					
ANR	10589284	CompoundStatement		2860:2:107066:107114	10589282	0					
ANR	10589285	ExpressionStatement	"args [ 0 ] = ADD_LONG ( args [ 0 ] , args [ 1 ] )"	2861:4:107072:107110	10589282	0	True				
ANR	10589286	AssignmentExpression	"args [ 0 ] = ADD_LONG ( args [ 0 ] , args [ 1 ] )"		10589282	0		=			
ANR	10589287	ArrayIndexing	args [ 0 ]		10589282	0					
ANR	10589288	Identifier	args		10589282	0					
ANR	10589289	PrimaryExpression	0		10589282	1					
ANR	10589290	CallExpression	"ADD_LONG ( args [ 0 ] , args [ 1 ] )"		10589282	1					
ANR	10589291	Callee	ADD_LONG		10589282	0					
ANR	10589292	Identifier	ADD_LONG		10589282	0					
ANR	10589293	ArgumentList	args [ 0 ]		10589282	1					
ANR	10589294	Argument	args [ 0 ]		10589282	0					
ANR	10589295	ArrayIndexing	args [ 0 ]		10589282	0					
ANR	10589296	Identifier	args		10589282	0					
ANR	10589297	PrimaryExpression	0		10589282	1					
ANR	10589298	Argument	args [ 1 ]		10589282	1					
ANR	10589299	ArrayIndexing	args [ 1 ]		10589282	0					
ANR	10589300	Identifier	args		10589282	0					
ANR	10589301	PrimaryExpression	1		10589282	1					
ANR	10589302	ReturnType	static void		10589282	1					
ANR	10589303	Identifier	Ins_ADD		10589282	2					
ANR	10589304	ParameterList	FT_Long * args		10589282	3					
ANR	10589305	Parameter	FT_Long * args	2859:11:107047:107060	10589282	0	True				
ANR	10589306	ParameterType	FT_Long *		10589282	0					
ANR	10589307	Identifier	args		10589282	1					
ANR	10589308	CFGEntryNode	ENTRY		10589282		True				
ANR	10589309	CFGExitNode	EXIT		10589282		True				
ANR	10589310	Symbol	args		10589282						
ANR	10589311	Symbol	ADD_LONG		10589282						
ANR	10589312	Symbol	* args		10589282						
ANR	10589313	Function	Ins_SUB	2871:2:107588:107678							
ANR	10589314	FunctionDef	Ins_SUB (FT_Long * args)		10589313	0					
ANR	10589315	CompoundStatement		2873:2:107630:107678	10589313	0					
ANR	10589316	ExpressionStatement	"args [ 0 ] = SUB_LONG ( args [ 0 ] , args [ 1 ] )"	2874:4:107636:107674	10589313	0	True				
ANR	10589317	AssignmentExpression	"args [ 0 ] = SUB_LONG ( args [ 0 ] , args [ 1 ] )"		10589313	0		=			
ANR	10589318	ArrayIndexing	args [ 0 ]		10589313	0					
ANR	10589319	Identifier	args		10589313	0					
ANR	10589320	PrimaryExpression	0		10589313	1					
ANR	10589321	CallExpression	"SUB_LONG ( args [ 0 ] , args [ 1 ] )"		10589313	1					
ANR	10589322	Callee	SUB_LONG		10589313	0					
ANR	10589323	Identifier	SUB_LONG		10589313	0					
ANR	10589324	ArgumentList	args [ 0 ]		10589313	1					
ANR	10589325	Argument	args [ 0 ]		10589313	0					
ANR	10589326	ArrayIndexing	args [ 0 ]		10589313	0					
ANR	10589327	Identifier	args		10589313	0					
ANR	10589328	PrimaryExpression	0		10589313	1					
ANR	10589329	Argument	args [ 1 ]		10589313	1					
ANR	10589330	ArrayIndexing	args [ 1 ]		10589313	0					
ANR	10589331	Identifier	args		10589313	0					
ANR	10589332	PrimaryExpression	1		10589313	1					
ANR	10589333	ReturnType	static void		10589313	1					
ANR	10589334	Identifier	Ins_SUB		10589313	2					
ANR	10589335	ParameterList	FT_Long * args		10589313	3					
ANR	10589336	Parameter	FT_Long * args	2872:11:107611:107624	10589313	0	True				
ANR	10589337	ParameterType	FT_Long *		10589313	0					
ANR	10589338	Identifier	args		10589313	1					
ANR	10589339	CFGEntryNode	ENTRY		10589313		True				
ANR	10589340	CFGExitNode	EXIT		10589313		True				
ANR	10589341	Symbol	args		10589313						
ANR	10589342	Symbol	SUB_LONG		10589313						
ANR	10589343	Symbol	* args		10589313						
ANR	10589344	Function	Ins_DIV	2884:2:108152:108377							
ANR	10589345	FunctionDef	"Ins_DIV (TT_ExecContext exc , FT_Long * args)"		10589344	0					
ANR	10589346	CompoundStatement		2887:2:108232:108377	10589344	0					
ANR	10589347	IfStatement	if ( args [ 1 ] == 0 )		10589344	0					
ANR	10589348	Condition	args [ 1 ] == 0	2888:9:108243:108254	10589344	0	True				
ANR	10589349	EqualityExpression	args [ 1 ] == 0		10589344	0		==			
ANR	10589350	ArrayIndexing	args [ 1 ]		10589344	0					
ANR	10589351	Identifier	args		10589344	0					
ANR	10589352	PrimaryExpression	1		10589344	1					
ANR	10589353	PrimaryExpression	0		10589344	1					
ANR	10589354	ExpressionStatement	exc -> error = FT_THROW ( Divide_By_Zero )	2889:6:108264:108303	10589344	1	True				
ANR	10589355	AssignmentExpression	exc -> error = FT_THROW ( Divide_By_Zero )		10589344	0		=			
ANR	10589356	PtrMemberAccess	exc -> error		10589344	0					
ANR	10589357	Identifier	exc		10589344	0					
ANR	10589358	Identifier	error		10589344	1					
ANR	10589359	CallExpression	FT_THROW ( Divide_By_Zero )		10589344	1					
ANR	10589360	Callee	FT_THROW		10589344	0					
ANR	10589361	Identifier	FT_THROW		10589344	0					
ANR	10589362	ArgumentList	Divide_By_Zero		10589344	1					
ANR	10589363	Argument	Divide_By_Zero		10589344	0					
ANR	10589364	Identifier	Divide_By_Zero		10589344	0					
ANR	10589365	ElseStatement	else		10589344	0					
ANR	10589366	ExpressionStatement	"args [ 0 ] = FT_MulDiv_No_Round ( args [ 0 ] , 64L , args [ 1 ] )"	2891:6:108320:108373	10589344	0	True				
ANR	10589367	AssignmentExpression	"args [ 0 ] = FT_MulDiv_No_Round ( args [ 0 ] , 64L , args [ 1 ] )"		10589344	0		=			
ANR	10589368	ArrayIndexing	args [ 0 ]		10589344	0					
ANR	10589369	Identifier	args		10589344	0					
ANR	10589370	PrimaryExpression	0		10589344	1					
ANR	10589371	CallExpression	"FT_MulDiv_No_Round ( args [ 0 ] , 64L , args [ 1 ] )"		10589344	1					
ANR	10589372	Callee	FT_MulDiv_No_Round		10589344	0					
ANR	10589373	Identifier	FT_MulDiv_No_Round		10589344	0					
ANR	10589374	ArgumentList	args [ 0 ]		10589344	1					
ANR	10589375	Argument	args [ 0 ]		10589344	0					
ANR	10589376	ArrayIndexing	args [ 0 ]		10589344	0					
ANR	10589377	Identifier	args		10589344	0					
ANR	10589378	PrimaryExpression	0		10589344	1					
ANR	10589379	Argument	64L		10589344	1					
ANR	10589380	PrimaryExpression	64L		10589344	0					
ANR	10589381	Argument	args [ 1 ]		10589344	2					
ANR	10589382	ArrayIndexing	args [ 1 ]		10589344	0					
ANR	10589383	Identifier	args		10589344	0					
ANR	10589384	PrimaryExpression	1		10589344	1					
ANR	10589385	ReturnType	static void		10589344	1					
ANR	10589386	Identifier	Ins_DIV		10589344	2					
ANR	10589387	ParameterList	"TT_ExecContext exc , FT_Long * args"		10589344	3					
ANR	10589388	Parameter	TT_ExecContext exc	2885:11:108175:108193	10589344	0	True				
ANR	10589389	ParameterType	TT_ExecContext		10589344	0					
ANR	10589390	Identifier	exc		10589344	1					
ANR	10589391	Parameter	FT_Long * args	2886:11:108207:108226	10589344	1	True				
ANR	10589392	ParameterType	FT_Long *		10589344	0					
ANR	10589393	Identifier	args		10589344	1					
ANR	10589394	CFGEntryNode	ENTRY		10589344		True				
ANR	10589395	CFGExitNode	EXIT		10589344		True				
ANR	10589396	Symbol	args		10589344						
ANR	10589397	Symbol	exc		10589344						
ANR	10589398	Symbol	* exc		10589344						
ANR	10589399	Symbol	FT_MulDiv_No_Round		10589344						
ANR	10589400	Symbol	Divide_By_Zero		10589344						
ANR	10589401	Symbol	exc -> error		10589344						
ANR	10589402	Symbol	FT_THROW		10589344						
ANR	10589403	Symbol	* args		10589344						
ANR	10589404	Function	Ins_MUL	2901:2:108851:108947							
ANR	10589405	FunctionDef	Ins_MUL (FT_Long * args)		10589404	0					
ANR	10589406	CompoundStatement		2903:2:108893:108947	10589404	0					
ANR	10589407	ExpressionStatement	"args [ 0 ] = FT_MulDiv ( args [ 0 ] , args [ 1 ] , 64L )"	2904:4:108899:108943	10589404	0	True				
ANR	10589408	AssignmentExpression	"args [ 0 ] = FT_MulDiv ( args [ 0 ] , args [ 1 ] , 64L )"		10589404	0		=			
ANR	10589409	ArrayIndexing	args [ 0 ]		10589404	0					
ANR	10589410	Identifier	args		10589404	0					
ANR	10589411	PrimaryExpression	0		10589404	1					
ANR	10589412	CallExpression	"FT_MulDiv ( args [ 0 ] , args [ 1 ] , 64L )"		10589404	1					
ANR	10589413	Callee	FT_MulDiv		10589404	0					
ANR	10589414	Identifier	FT_MulDiv		10589404	0					
ANR	10589415	ArgumentList	args [ 0 ]		10589404	1					
ANR	10589416	Argument	args [ 0 ]		10589404	0					
ANR	10589417	ArrayIndexing	args [ 0 ]		10589404	0					
ANR	10589418	Identifier	args		10589404	0					
ANR	10589419	PrimaryExpression	0		10589404	1					
ANR	10589420	Argument	args [ 1 ]		10589404	1					
ANR	10589421	ArrayIndexing	args [ 1 ]		10589404	0					
ANR	10589422	Identifier	args		10589404	0					
ANR	10589423	PrimaryExpression	1		10589404	1					
ANR	10589424	Argument	64L		10589404	2					
ANR	10589425	PrimaryExpression	64L		10589404	0					
ANR	10589426	ReturnType	static void		10589404	1					
ANR	10589427	Identifier	Ins_MUL		10589404	2					
ANR	10589428	ParameterList	FT_Long * args		10589404	3					
ANR	10589429	Parameter	FT_Long * args	2902:11:108874:108887	10589404	0	True				
ANR	10589430	ParameterType	FT_Long *		10589404	0					
ANR	10589431	Identifier	args		10589404	1					
ANR	10589432	CFGEntryNode	ENTRY		10589404		True				
ANR	10589433	CFGExitNode	EXIT		10589404		True				
ANR	10589434	Symbol	args		10589404						
ANR	10589435	Symbol	FT_MulDiv		10589404						
ANR	10589436	Symbol	* args		10589404						
ANR	10589437	Function	Ins_ABS	2914:2:109421:109527							
ANR	10589438	FunctionDef	Ins_ABS (FT_Long * args)		10589437	0					
ANR	10589439	CompoundStatement		2916:2:109463:109527	10589437	0					
ANR	10589440	IfStatement	if ( args [ 0 ] < 0 )		10589437	0					
ANR	10589441	Condition	args [ 0 ] < 0	2917:9:109474:109484	10589437	0	True				
ANR	10589442	RelationalExpression	args [ 0 ] < 0		10589437	0		<			
ANR	10589443	ArrayIndexing	args [ 0 ]		10589437	0					
ANR	10589444	Identifier	args		10589437	0					
ANR	10589445	PrimaryExpression	0		10589437	1					
ANR	10589446	PrimaryExpression	0		10589437	1					
ANR	10589447	ExpressionStatement	args [ 0 ] = NEG_LONG ( args [ 0 ] )	2918:6:109494:109523	10589437	1	True				
ANR	10589448	AssignmentExpression	args [ 0 ] = NEG_LONG ( args [ 0 ] )		10589437	0		=			
ANR	10589449	ArrayIndexing	args [ 0 ]		10589437	0					
ANR	10589450	Identifier	args		10589437	0					
ANR	10589451	PrimaryExpression	0		10589437	1					
ANR	10589452	CallExpression	NEG_LONG ( args [ 0 ] )		10589437	1					
ANR	10589453	Callee	NEG_LONG		10589437	0					
ANR	10589454	Identifier	NEG_LONG		10589437	0					
ANR	10589455	ArgumentList	args [ 0 ]		10589437	1					
ANR	10589456	Argument	args [ 0 ]		10589437	0					
ANR	10589457	ArrayIndexing	args [ 0 ]		10589437	0					
ANR	10589458	Identifier	args		10589437	0					
ANR	10589459	PrimaryExpression	0		10589437	1					
ANR	10589460	ReturnType	static void		10589437	1					
ANR	10589461	Identifier	Ins_ABS		10589437	2					
ANR	10589462	ParameterList	FT_Long * args		10589437	3					
ANR	10589463	Parameter	FT_Long * args	2915:11:109444:109457	10589437	0	True				
ANR	10589464	ParameterType	FT_Long *		10589437	0					
ANR	10589465	Identifier	args		10589437	1					
ANR	10589466	CFGEntryNode	ENTRY		10589437		True				
ANR	10589467	CFGExitNode	EXIT		10589437		True				
ANR	10589468	Symbol	args		10589437						
ANR	10589469	Symbol	NEG_LONG		10589437						
ANR	10589470	Symbol	* args		10589437						
ANR	10589471	Function	Ins_NEG	2928:2:110001:110082							
ANR	10589472	FunctionDef	Ins_NEG (FT_Long * args)		10589471	0					
ANR	10589473	CompoundStatement		2930:2:110043:110082	10589471	0					
ANR	10589474	ExpressionStatement	args [ 0 ] = NEG_LONG ( args [ 0 ] )	2931:4:110049:110078	10589471	0	True				
ANR	10589475	AssignmentExpression	args [ 0 ] = NEG_LONG ( args [ 0 ] )		10589471	0		=			
ANR	10589476	ArrayIndexing	args [ 0 ]		10589471	0					
ANR	10589477	Identifier	args		10589471	0					
ANR	10589478	PrimaryExpression	0		10589471	1					
ANR	10589479	CallExpression	NEG_LONG ( args [ 0 ] )		10589471	1					
ANR	10589480	Callee	NEG_LONG		10589471	0					
ANR	10589481	Identifier	NEG_LONG		10589471	0					
ANR	10589482	ArgumentList	args [ 0 ]		10589471	1					
ANR	10589483	Argument	args [ 0 ]		10589471	0					
ANR	10589484	ArrayIndexing	args [ 0 ]		10589471	0					
ANR	10589485	Identifier	args		10589471	0					
ANR	10589486	PrimaryExpression	0		10589471	1					
ANR	10589487	ReturnType	static void		10589471	1					
ANR	10589488	Identifier	Ins_NEG		10589471	2					
ANR	10589489	ParameterList	FT_Long * args		10589471	3					
ANR	10589490	Parameter	FT_Long * args	2929:11:110024:110037	10589471	0	True				
ANR	10589491	ParameterType	FT_Long *		10589471	0					
ANR	10589492	Identifier	args		10589471	1					
ANR	10589493	CFGEntryNode	ENTRY		10589471		True				
ANR	10589494	CFGExitNode	EXIT		10589471		True				
ANR	10589495	Symbol	args		10589471						
ANR	10589496	Symbol	NEG_LONG		10589471						
ANR	10589497	Symbol	* args		10589471						
ANR	10589498	Function	Ins_FLOOR	2941:2:110556:110643							
ANR	10589499	FunctionDef	Ins_FLOOR (FT_Long * args)		10589498	0					
ANR	10589500	CompoundStatement		2943:2:110600:110643	10589498	0					
ANR	10589501	ExpressionStatement	args [ 0 ] = FT_PIX_FLOOR ( args [ 0 ] )	2944:4:110606:110639	10589498	0	True				
ANR	10589502	AssignmentExpression	args [ 0 ] = FT_PIX_FLOOR ( args [ 0 ] )		10589498	0		=			
ANR	10589503	ArrayIndexing	args [ 0 ]		10589498	0					
ANR	10589504	Identifier	args		10589498	0					
ANR	10589505	PrimaryExpression	0		10589498	1					
ANR	10589506	CallExpression	FT_PIX_FLOOR ( args [ 0 ] )		10589498	1					
ANR	10589507	Callee	FT_PIX_FLOOR		10589498	0					
ANR	10589508	Identifier	FT_PIX_FLOOR		10589498	0					
ANR	10589509	ArgumentList	args [ 0 ]		10589498	1					
ANR	10589510	Argument	args [ 0 ]		10589498	0					
ANR	10589511	ArrayIndexing	args [ 0 ]		10589498	0					
ANR	10589512	Identifier	args		10589498	0					
ANR	10589513	PrimaryExpression	0		10589498	1					
ANR	10589514	ReturnType	static void		10589498	1					
ANR	10589515	Identifier	Ins_FLOOR		10589498	2					
ANR	10589516	ParameterList	FT_Long * args		10589498	3					
ANR	10589517	Parameter	FT_Long * args	2942:13:110581:110594	10589498	0	True				
ANR	10589518	ParameterType	FT_Long *		10589498	0					
ANR	10589519	Identifier	args		10589498	1					
ANR	10589520	CFGEntryNode	ENTRY		10589498		True				
ANR	10589521	CFGExitNode	EXIT		10589498		True				
ANR	10589522	Symbol	args		10589498						
ANR	10589523	Symbol	FT_PIX_FLOOR		10589498						
ANR	10589524	Symbol	* args		10589498						
ANR	10589525	Function	Ins_CEILING	2954:2:111117:111210							
ANR	10589526	FunctionDef	Ins_CEILING (FT_Long * args)		10589525	0					
ANR	10589527	CompoundStatement		2956:2:111163:111210	10589525	0					
ANR	10589528	ExpressionStatement	args [ 0 ] = FT_PIX_CEIL_LONG ( args [ 0 ] )	2957:4:111169:111206	10589525	0	True				
ANR	10589529	AssignmentExpression	args [ 0 ] = FT_PIX_CEIL_LONG ( args [ 0 ] )		10589525	0		=			
ANR	10589530	ArrayIndexing	args [ 0 ]		10589525	0					
ANR	10589531	Identifier	args		10589525	0					
ANR	10589532	PrimaryExpression	0		10589525	1					
ANR	10589533	CallExpression	FT_PIX_CEIL_LONG ( args [ 0 ] )		10589525	1					
ANR	10589534	Callee	FT_PIX_CEIL_LONG		10589525	0					
ANR	10589535	Identifier	FT_PIX_CEIL_LONG		10589525	0					
ANR	10589536	ArgumentList	args [ 0 ]		10589525	1					
ANR	10589537	Argument	args [ 0 ]		10589525	0					
ANR	10589538	ArrayIndexing	args [ 0 ]		10589525	0					
ANR	10589539	Identifier	args		10589525	0					
ANR	10589540	PrimaryExpression	0		10589525	1					
ANR	10589541	ReturnType	static void		10589525	1					
ANR	10589542	Identifier	Ins_CEILING		10589525	2					
ANR	10589543	ParameterList	FT_Long * args		10589525	3					
ANR	10589544	Parameter	FT_Long * args	2955:15:111144:111157	10589525	0	True				
ANR	10589545	ParameterType	FT_Long *		10589525	0					
ANR	10589546	Identifier	args		10589525	1					
ANR	10589547	CFGEntryNode	ENTRY		10589525		True				
ANR	10589548	CFGExitNode	EXIT		10589525		True				
ANR	10589549	Symbol	args		10589525						
ANR	10589550	Symbol	FT_PIX_CEIL_LONG		10589525						
ANR	10589551	Symbol	* args		10589525						
ANR	10589552	Function	Ins_RS	2967:2:111684:112931							
ANR	10589553	FunctionDef	"Ins_RS (TT_ExecContext exc , FT_Long * args)"		10589552	0					
ANR	10589554	CompoundStatement		2970:2:111762:112931	10589552	0					
ANR	10589555	IdentifierDeclStatement	FT_ULong I = ( FT_ULong ) args [ 0 ] ;	2971:4:111768:111799	10589552	0	True				
ANR	10589556	IdentifierDecl	I = ( FT_ULong ) args [ 0 ]		10589552	0					
ANR	10589557	IdentifierDeclType	FT_ULong		10589552	0					
ANR	10589558	Identifier	I		10589552	1					
ANR	10589559	AssignmentExpression	I = ( FT_ULong ) args [ 0 ]		10589552	2		=			
ANR	10589560	Identifier	I		10589552	0					
ANR	10589561	CastExpression	( FT_ULong ) args [ 0 ]		10589552	1					
ANR	10589562	CastTarget	FT_ULong		10589552	0					
ANR	10589563	ArrayIndexing	args [ 0 ]		10589552	1					
ANR	10589564	Identifier	args		10589552	0					
ANR	10589565	PrimaryExpression	0		10589552	1					
ANR	10589566	IfStatement	"if ( BOUNDSL ( I , exc -> storeSize ) )"		10589552	1					
ANR	10589567	Condition	"BOUNDSL ( I , exc -> storeSize )"	2974:9:111812:111839	10589552	0	True				
ANR	10589568	CallExpression	"BOUNDSL ( I , exc -> storeSize )"		10589552	0					
ANR	10589569	Callee	BOUNDSL		10589552	0					
ANR	10589570	Identifier	BOUNDSL		10589552	0					
ANR	10589571	ArgumentList	I		10589552	1					
ANR	10589572	Argument	I		10589552	0					
ANR	10589573	Identifier	I		10589552	0					
ANR	10589574	Argument	exc -> storeSize		10589552	1					
ANR	10589575	PtrMemberAccess	exc -> storeSize		10589552	0					
ANR	10589576	Identifier	exc		10589552	0					
ANR	10589577	Identifier	storeSize		10589552	1					
ANR	10589578	CompoundStatement		6:4:84:84	10589552	1					
ANR	10589579	IfStatement	if ( exc -> pedantic_hinting )		10589552	0					
ANR	10589580	Condition	exc -> pedantic_hinting	2976:11:111860:111880	10589552	0	True				
ANR	10589581	PtrMemberAccess	exc -> pedantic_hinting		10589552	0					
ANR	10589582	Identifier	exc		10589552	0					
ANR	10589583	Identifier	pedantic_hinting		10589552	1					
ANR	10589584	ExpressionStatement	ARRAY_BOUND_ERROR	2977:8:111892:111909	10589552	1	True				
ANR	10589585	Identifier	ARRAY_BOUND_ERROR		10589552	0					
ANR	10589586	ElseStatement	else		10589552	0					
ANR	10589587	ExpressionStatement	args [ 0 ] = 0	2979:8:111930:111941	10589552	0	True				
ANR	10589588	AssignmentExpression	args [ 0 ] = 0		10589552	0		=			
ANR	10589589	ArrayIndexing	args [ 0 ]		10589552	0					
ANR	10589590	Identifier	args		10589552	0					
ANR	10589591	PrimaryExpression	0		10589552	1					
ANR	10589592	PrimaryExpression	0		10589552	1					
ANR	10589593	ElseStatement	else		10589552	0					
ANR	10589594	CompoundStatement		13:4:199:199	10589552	0					
ANR	10589595	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && ( ( I == 24 && ( exc -> face -> sph_found_func_flags & ( SPH_FDEF_SPACING_1 | SPH_FDEF_SPACING_2 ) ) ) || ( I == 22 && ( exc -> sph_in_func_flags & SPH_FDEF_TYPEMAN_STROKES ) ) || ( I == 8 && ( exc -> face -> sph_found_func_flags & SPH_FDEF_VACUFORM_ROUND_1 ) && exc -> iup_called ) ) )		10589552	0					
ANR	10589596	Condition	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && ( ( I == 24 && ( exc -> face -> sph_found_func_flags & ( SPH_FDEF_SPACING_1 | SPH_FDEF_SPACING_2 ) ) ) || ( I == 22 && ( exc -> sph_in_func_flags & SPH_FDEF_TYPEMAN_STROKES ) ) || ( I == 8 && ( exc -> face -> sph_found_func_flags & SPH_FDEF_VACUFORM_ROUND_1 ) && exc -> iup_called ) )	2986:11:112135:112800	10589552	0	True				
ANR	10589597	AndExpression	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && ( ( I == 24 && ( exc -> face -> sph_found_func_flags & ( SPH_FDEF_SPACING_1 | SPH_FDEF_SPACING_2 ) ) ) || ( I == 22 && ( exc -> sph_in_func_flags & SPH_FDEF_TYPEMAN_STROKES ) ) || ( I == 8 && ( exc -> face -> sph_found_func_flags & SPH_FDEF_VACUFORM_ROUND_1 ) && exc -> iup_called ) )		10589552	0		&&			
ANR	10589598	Identifier	SUBPIXEL_HINTING_INFINALITY		10589552	0					
ANR	10589599	AndExpression	exc -> ignore_x_mode && ( ( I == 24 && ( exc -> face -> sph_found_func_flags & ( SPH_FDEF_SPACING_1 | SPH_FDEF_SPACING_2 ) ) ) || ( I == 22 && ( exc -> sph_in_func_flags & SPH_FDEF_TYPEMAN_STROKES ) ) || ( I == 8 && ( exc -> face -> sph_found_func_flags & SPH_FDEF_VACUFORM_ROUND_1 ) && exc -> iup_called ) )		10589552	1		&&			
ANR	10589600	PtrMemberAccess	exc -> ignore_x_mode		10589552	0					
ANR	10589601	Identifier	exc		10589552	0					
ANR	10589602	Identifier	ignore_x_mode		10589552	1					
ANR	10589603	OrExpression	( I == 24 && ( exc -> face -> sph_found_func_flags & ( SPH_FDEF_SPACING_1 | SPH_FDEF_SPACING_2 ) ) ) || ( I == 22 && ( exc -> sph_in_func_flags & SPH_FDEF_TYPEMAN_STROKES ) ) || ( I == 8 && ( exc -> face -> sph_found_func_flags & SPH_FDEF_VACUFORM_ROUND_1 ) && exc -> iup_called )		10589552	1		||			
ANR	10589604	AndExpression	I == 24 && ( exc -> face -> sph_found_func_flags & ( SPH_FDEF_SPACING_1 | SPH_FDEF_SPACING_2 ) )		10589552	0		&&			
ANR	10589605	EqualityExpression	I == 24		10589552	0		==			
ANR	10589606	Identifier	I		10589552	0					
ANR	10589607	PrimaryExpression	24		10589552	1					
ANR	10589608	BitAndExpression	exc -> face -> sph_found_func_flags & ( SPH_FDEF_SPACING_1 | SPH_FDEF_SPACING_2 )		10589552	1		&			
ANR	10589609	PtrMemberAccess	exc -> face -> sph_found_func_flags		10589552	0					
ANR	10589610	PtrMemberAccess	exc -> face		10589552	0					
ANR	10589611	Identifier	exc		10589552	0					
ANR	10589612	Identifier	face		10589552	1					
ANR	10589613	Identifier	sph_found_func_flags		10589552	1					
ANR	10589614	InclusiveOrExpression	SPH_FDEF_SPACING_1 | SPH_FDEF_SPACING_2		10589552	1		|			
ANR	10589615	Identifier	SPH_FDEF_SPACING_1		10589552	0					
ANR	10589616	Identifier	SPH_FDEF_SPACING_2		10589552	1					
ANR	10589617	OrExpression	( I == 22 && ( exc -> sph_in_func_flags & SPH_FDEF_TYPEMAN_STROKES ) ) || ( I == 8 && ( exc -> face -> sph_found_func_flags & SPH_FDEF_VACUFORM_ROUND_1 ) && exc -> iup_called )		10589552	1		||			
ANR	10589618	AndExpression	I == 22 && ( exc -> sph_in_func_flags & SPH_FDEF_TYPEMAN_STROKES )		10589552	0		&&			
ANR	10589619	EqualityExpression	I == 22		10589552	0		==			
ANR	10589620	Identifier	I		10589552	0					
ANR	10589621	PrimaryExpression	22		10589552	1					
ANR	10589622	BitAndExpression	exc -> sph_in_func_flags & SPH_FDEF_TYPEMAN_STROKES		10589552	1		&			
ANR	10589623	PtrMemberAccess	exc -> sph_in_func_flags		10589552	0					
ANR	10589624	Identifier	exc		10589552	0					
ANR	10589625	Identifier	sph_in_func_flags		10589552	1					
ANR	10589626	Identifier	SPH_FDEF_TYPEMAN_STROKES		10589552	1					
ANR	10589627	AndExpression	I == 8 && ( exc -> face -> sph_found_func_flags & SPH_FDEF_VACUFORM_ROUND_1 ) && exc -> iup_called		10589552	1		&&			
ANR	10589628	EqualityExpression	I == 8		10589552	0		==			
ANR	10589629	Identifier	I		10589552	0					
ANR	10589630	PrimaryExpression	8		10589552	1					
ANR	10589631	AndExpression	( exc -> face -> sph_found_func_flags & SPH_FDEF_VACUFORM_ROUND_1 ) && exc -> iup_called		10589552	1		&&			
ANR	10589632	BitAndExpression	exc -> face -> sph_found_func_flags & SPH_FDEF_VACUFORM_ROUND_1		10589552	0		&			
ANR	10589633	PtrMemberAccess	exc -> face -> sph_found_func_flags		10589552	0					
ANR	10589634	PtrMemberAccess	exc -> face		10589552	0					
ANR	10589635	Identifier	exc		10589552	0					
ANR	10589636	Identifier	face		10589552	1					
ANR	10589637	Identifier	sph_found_func_flags		10589552	1					
ANR	10589638	Identifier	SPH_FDEF_VACUFORM_ROUND_1		10589552	1					
ANR	10589639	PtrMemberAccess	exc -> iup_called		10589552	1					
ANR	10589640	Identifier	exc		10589552	0					
ANR	10589641	Identifier	iup_called		10589552	1					
ANR	10589642	ExpressionStatement	args [ 0 ] = 0	2999:8:112812:112823	10589552	1	True				
ANR	10589643	AssignmentExpression	args [ 0 ] = 0		10589552	0		=			
ANR	10589644	ArrayIndexing	args [ 0 ]		10589552	0					
ANR	10589645	Identifier	args		10589552	0					
ANR	10589646	PrimaryExpression	0		10589552	1					
ANR	10589647	PrimaryExpression	0		10589552	1					
ANR	10589648	ElseStatement	else		10589552	0					
ANR	10589649	ExpressionStatement	args [ 0 ] = exc -> storage [ I ]	3002:8:112896:112921	10589552	0	True				
ANR	10589650	AssignmentExpression	args [ 0 ] = exc -> storage [ I ]		10589552	0		=			
ANR	10589651	ArrayIndexing	args [ 0 ]		10589552	0					
ANR	10589652	Identifier	args		10589552	0					
ANR	10589653	PrimaryExpression	0		10589552	1					
ANR	10589654	ArrayIndexing	exc -> storage [ I ]		10589552	1					
ANR	10589655	PtrMemberAccess	exc -> storage		10589552	0					
ANR	10589656	Identifier	exc		10589552	0					
ANR	10589657	Identifier	storage		10589552	1					
ANR	10589658	Identifier	I		10589552	1					
ANR	10589659	ReturnType	static void		10589552	1					
ANR	10589660	Identifier	Ins_RS		10589552	2					
ANR	10589661	ParameterList	"TT_ExecContext exc , FT_Long * args"		10589552	3					
ANR	10589662	Parameter	TT_ExecContext exc	2968:10:111706:111724	10589552	0	True				
ANR	10589663	ParameterType	TT_ExecContext		10589552	0					
ANR	10589664	Identifier	exc		10589552	1					
ANR	10589665	Parameter	FT_Long * args	2969:10:111737:111756	10589552	1	True				
ANR	10589666	ParameterType	FT_Long *		10589552	0					
ANR	10589667	Identifier	args		10589552	1					
ANR	10589668	CFGEntryNode	ENTRY		10589552		True				
ANR	10589669	CFGExitNode	EXIT		10589552		True				
ANR	10589670	Symbol	SPH_FDEF_TYPEMAN_STROKES		10589552						
ANR	10589671	Symbol	* * exc		10589552						
ANR	10589672	Symbol	* exc		10589552						
ANR	10589673	Symbol	exc -> face		10589552						
ANR	10589674	Symbol	exc -> pedantic_hinting		10589552						
ANR	10589675	Symbol	I		10589552						
ANR	10589676	Symbol	* exc -> face		10589552						
ANR	10589677	Symbol	BOUNDSL		10589552						
ANR	10589678	Symbol	* args		10589552						
ANR	10589679	Symbol	args		10589552						
ANR	10589680	Symbol	SUBPIXEL_HINTING_INFINALITY		10589552						
ANR	10589681	Symbol	* exc -> storage		10589552						
ANR	10589682	Symbol	exc		10589552						
ANR	10589683	Symbol	exc -> storeSize		10589552						
ANR	10589684	Symbol	* I		10589552						
ANR	10589685	Symbol	exc -> sph_in_func_flags		10589552						
ANR	10589686	Symbol	exc -> iup_called		10589552						
ANR	10589687	Symbol	SPH_FDEF_VACUFORM_ROUND_1		10589552						
ANR	10589688	Symbol	SPH_FDEF_SPACING_2		10589552						
ANR	10589689	Symbol	SPH_FDEF_SPACING_1		10589552						
ANR	10589690	Symbol	exc -> storage		10589552						
ANR	10589691	Symbol	exc -> face -> sph_found_func_flags		10589552						
ANR	10589692	Symbol	exc -> ignore_x_mode		10589552						
ANR	10589693	Function	Ins_WS	3013:2:113405:113682							
ANR	10589694	FunctionDef	"Ins_WS (TT_ExecContext exc , FT_Long * args)"		10589693	0					
ANR	10589695	CompoundStatement		3016:2:113483:113682	10589693	0					
ANR	10589696	IdentifierDeclStatement	FT_ULong I = ( FT_ULong ) args [ 0 ] ;	3017:4:113489:113520	10589693	0	True				
ANR	10589697	IdentifierDecl	I = ( FT_ULong ) args [ 0 ]		10589693	0					
ANR	10589698	IdentifierDeclType	FT_ULong		10589693	0					
ANR	10589699	Identifier	I		10589693	1					
ANR	10589700	AssignmentExpression	I = ( FT_ULong ) args [ 0 ]		10589693	2		=			
ANR	10589701	Identifier	I		10589693	0					
ANR	10589702	CastExpression	( FT_ULong ) args [ 0 ]		10589693	1					
ANR	10589703	CastTarget	FT_ULong		10589693	0					
ANR	10589704	ArrayIndexing	args [ 0 ]		10589693	1					
ANR	10589705	Identifier	args		10589693	0					
ANR	10589706	PrimaryExpression	0		10589693	1					
ANR	10589707	IfStatement	"if ( BOUNDSL ( I , exc -> storeSize ) )"		10589693	1					
ANR	10589708	Condition	"BOUNDSL ( I , exc -> storeSize )"	3020:9:113533:113560	10589693	0	True				
ANR	10589709	CallExpression	"BOUNDSL ( I , exc -> storeSize )"		10589693	0					
ANR	10589710	Callee	BOUNDSL		10589693	0					
ANR	10589711	Identifier	BOUNDSL		10589693	0					
ANR	10589712	ArgumentList	I		10589693	1					
ANR	10589713	Argument	I		10589693	0					
ANR	10589714	Identifier	I		10589693	0					
ANR	10589715	Argument	exc -> storeSize		10589693	1					
ANR	10589716	PtrMemberAccess	exc -> storeSize		10589693	0					
ANR	10589717	Identifier	exc		10589693	0					
ANR	10589718	Identifier	storeSize		10589693	1					
ANR	10589719	CompoundStatement		6:4:84:84	10589693	1					
ANR	10589720	IfStatement	if ( exc -> pedantic_hinting )		10589693	0					
ANR	10589721	Condition	exc -> pedantic_hinting	3022:11:113581:113601	10589693	0	True				
ANR	10589722	PtrMemberAccess	exc -> pedantic_hinting		10589693	0					
ANR	10589723	Identifier	exc		10589693	0					
ANR	10589724	Identifier	pedantic_hinting		10589693	1					
ANR	10589725	ExpressionStatement	ARRAY_BOUND_ERROR	3023:8:113613:113630	10589693	1	True				
ANR	10589726	Identifier	ARRAY_BOUND_ERROR		10589693	0					
ANR	10589727	ElseStatement	else		10589693	0					
ANR	10589728	ExpressionStatement	exc -> storage [ I ] = args [ 1 ]	3026:6:113653:113678	10589693	0	True				
ANR	10589729	AssignmentExpression	exc -> storage [ I ] = args [ 1 ]		10589693	0		=			
ANR	10589730	ArrayIndexing	exc -> storage [ I ]		10589693	0					
ANR	10589731	PtrMemberAccess	exc -> storage		10589693	0					
ANR	10589732	Identifier	exc		10589693	0					
ANR	10589733	Identifier	storage		10589693	1					
ANR	10589734	Identifier	I		10589693	1					
ANR	10589735	ArrayIndexing	args [ 1 ]		10589693	1					
ANR	10589736	Identifier	args		10589693	0					
ANR	10589737	PrimaryExpression	1		10589693	1					
ANR	10589738	ReturnType	static void		10589693	1					
ANR	10589739	Identifier	Ins_WS		10589693	2					
ANR	10589740	ParameterList	"TT_ExecContext exc , FT_Long * args"		10589693	3					
ANR	10589741	Parameter	TT_ExecContext exc	3014:10:113427:113445	10589693	0	True				
ANR	10589742	ParameterType	TT_ExecContext		10589693	0					
ANR	10589743	Identifier	exc		10589693	1					
ANR	10589744	Parameter	FT_Long * args	3015:10:113458:113477	10589693	1	True				
ANR	10589745	ParameterType	FT_Long *		10589693	0					
ANR	10589746	Identifier	args		10589693	1					
ANR	10589747	CFGEntryNode	ENTRY		10589693		True				
ANR	10589748	CFGExitNode	EXIT		10589693		True				
ANR	10589749	Symbol	args		10589693						
ANR	10589750	Symbol	* exc -> storage		10589693						
ANR	10589751	Symbol	exc		10589693						
ANR	10589752	Symbol	exc -> storeSize		10589693						
ANR	10589753	Symbol	* I		10589693						
ANR	10589754	Symbol	* * exc		10589693						
ANR	10589755	Symbol	* exc		10589693						
ANR	10589756	Symbol	exc -> pedantic_hinting		10589693						
ANR	10589757	Symbol	I		10589693						
ANR	10589758	Symbol	exc -> storage		10589693						
ANR	10589759	Symbol	BOUNDSL		10589693						
ANR	10589760	Symbol	* args		10589693						
ANR	10589761	Function	Ins_WCVTP	3036:2:114156:114450							
ANR	10589762	FunctionDef	"Ins_WCVTP (TT_ExecContext exc , FT_Long * args)"		10589761	0					
ANR	10589763	CompoundStatement		3039:2:114240:114450	10589761	0					
ANR	10589764	IdentifierDeclStatement	FT_ULong I = ( FT_ULong ) args [ 0 ] ;	3040:4:114246:114277	10589761	0	True				
ANR	10589765	IdentifierDecl	I = ( FT_ULong ) args [ 0 ]		10589761	0					
ANR	10589766	IdentifierDeclType	FT_ULong		10589761	0					
ANR	10589767	Identifier	I		10589761	1					
ANR	10589768	AssignmentExpression	I = ( FT_ULong ) args [ 0 ]		10589761	2		=			
ANR	10589769	Identifier	I		10589761	0					
ANR	10589770	CastExpression	( FT_ULong ) args [ 0 ]		10589761	1					
ANR	10589771	CastTarget	FT_ULong		10589761	0					
ANR	10589772	ArrayIndexing	args [ 0 ]		10589761	1					
ANR	10589773	Identifier	args		10589761	0					
ANR	10589774	PrimaryExpression	0		10589761	1					
ANR	10589775	IfStatement	"if ( BOUNDSL ( I , exc -> cvtSize ) )"		10589761	1					
ANR	10589776	Condition	"BOUNDSL ( I , exc -> cvtSize )"	3043:9:114290:114315	10589761	0	True				
ANR	10589777	CallExpression	"BOUNDSL ( I , exc -> cvtSize )"		10589761	0					
ANR	10589778	Callee	BOUNDSL		10589761	0					
ANR	10589779	Identifier	BOUNDSL		10589761	0					
ANR	10589780	ArgumentList	I		10589761	1					
ANR	10589781	Argument	I		10589761	0					
ANR	10589782	Identifier	I		10589761	0					
ANR	10589783	Argument	exc -> cvtSize		10589761	1					
ANR	10589784	PtrMemberAccess	exc -> cvtSize		10589761	0					
ANR	10589785	Identifier	exc		10589761	0					
ANR	10589786	Identifier	cvtSize		10589761	1					
ANR	10589787	CompoundStatement		6:4:82:82	10589761	1					
ANR	10589788	IfStatement	if ( exc -> pedantic_hinting )		10589761	0					
ANR	10589789	Condition	exc -> pedantic_hinting	3045:11:114336:114356	10589761	0	True				
ANR	10589790	PtrMemberAccess	exc -> pedantic_hinting		10589761	0					
ANR	10589791	Identifier	exc		10589761	0					
ANR	10589792	Identifier	pedantic_hinting		10589761	1					
ANR	10589793	ExpressionStatement	ARRAY_BOUND_ERROR	3046:8:114368:114385	10589761	1	True				
ANR	10589794	Identifier	ARRAY_BOUND_ERROR		10589761	0					
ANR	10589795	ElseStatement	else		10589761	0					
ANR	10589796	ExpressionStatement	"exc -> func_write_cvt ( exc , I , args [ 1 ] )"	3049:6:114408:114446	10589761	0	True				
ANR	10589797	CallExpression	"exc -> func_write_cvt ( exc , I , args [ 1 ] )"		10589761	0					
ANR	10589798	Callee	exc -> func_write_cvt		10589761	0					
ANR	10589799	PtrMemberAccess	exc -> func_write_cvt		10589761	0					
ANR	10589800	Identifier	exc		10589761	0					
ANR	10589801	Identifier	func_write_cvt		10589761	1					
ANR	10589802	ArgumentList	exc		10589761	1					
ANR	10589803	Argument	exc		10589761	0					
ANR	10589804	Identifier	exc		10589761	0					
ANR	10589805	Argument	I		10589761	1					
ANR	10589806	Identifier	I		10589761	0					
ANR	10589807	Argument	args [ 1 ]		10589761	2					
ANR	10589808	ArrayIndexing	args [ 1 ]		10589761	0					
ANR	10589809	Identifier	args		10589761	0					
ANR	10589810	PrimaryExpression	1		10589761	1					
ANR	10589811	ReturnType	static void		10589761	1					
ANR	10589812	Identifier	Ins_WCVTP		10589761	2					
ANR	10589813	ParameterList	"TT_ExecContext exc , FT_Long * args"		10589761	3					
ANR	10589814	Parameter	TT_ExecContext exc	3037:13:114181:114199	10589761	0	True				
ANR	10589815	ParameterType	TT_ExecContext		10589761	0					
ANR	10589816	Identifier	exc		10589761	1					
ANR	10589817	Parameter	FT_Long * args	3038:13:114215:114234	10589761	1	True				
ANR	10589818	ParameterType	FT_Long *		10589761	0					
ANR	10589819	Identifier	args		10589761	1					
ANR	10589820	CFGEntryNode	ENTRY		10589761		True				
ANR	10589821	CFGExitNode	EXIT		10589761		True				
ANR	10589822	Symbol	args		10589761						
ANR	10589823	Symbol	exc		10589761						
ANR	10589824	Symbol	* exc		10589761						
ANR	10589825	Symbol	exc -> cvtSize		10589761						
ANR	10589826	Symbol	exc -> pedantic_hinting		10589761						
ANR	10589827	Symbol	I		10589761						
ANR	10589828	Symbol	BOUNDSL		10589761						
ANR	10589829	Symbol	* args		10589761						
ANR	10589830	Function	Ins_WCVTF	3059:2:114924:115237							
ANR	10589831	FunctionDef	"Ins_WCVTF (TT_ExecContext exc , FT_Long * args)"		10589830	0					
ANR	10589832	CompoundStatement		3062:2:115008:115237	10589830	0					
ANR	10589833	IdentifierDeclStatement	FT_ULong I = ( FT_ULong ) args [ 0 ] ;	3063:4:115014:115045	10589830	0	True				
ANR	10589834	IdentifierDecl	I = ( FT_ULong ) args [ 0 ]		10589830	0					
ANR	10589835	IdentifierDeclType	FT_ULong		10589830	0					
ANR	10589836	Identifier	I		10589830	1					
ANR	10589837	AssignmentExpression	I = ( FT_ULong ) args [ 0 ]		10589830	2		=			
ANR	10589838	Identifier	I		10589830	0					
ANR	10589839	CastExpression	( FT_ULong ) args [ 0 ]		10589830	1					
ANR	10589840	CastTarget	FT_ULong		10589830	0					
ANR	10589841	ArrayIndexing	args [ 0 ]		10589830	1					
ANR	10589842	Identifier	args		10589830	0					
ANR	10589843	PrimaryExpression	0		10589830	1					
ANR	10589844	IfStatement	"if ( BOUNDSL ( I , exc -> cvtSize ) )"		10589830	1					
ANR	10589845	Condition	"BOUNDSL ( I , exc -> cvtSize )"	3066:9:115058:115083	10589830	0	True				
ANR	10589846	CallExpression	"BOUNDSL ( I , exc -> cvtSize )"		10589830	0					
ANR	10589847	Callee	BOUNDSL		10589830	0					
ANR	10589848	Identifier	BOUNDSL		10589830	0					
ANR	10589849	ArgumentList	I		10589830	1					
ANR	10589850	Argument	I		10589830	0					
ANR	10589851	Identifier	I		10589830	0					
ANR	10589852	Argument	exc -> cvtSize		10589830	1					
ANR	10589853	PtrMemberAccess	exc -> cvtSize		10589830	0					
ANR	10589854	Identifier	exc		10589830	0					
ANR	10589855	Identifier	cvtSize		10589830	1					
ANR	10589856	CompoundStatement		6:4:82:82	10589830	1					
ANR	10589857	IfStatement	if ( exc -> pedantic_hinting )		10589830	0					
ANR	10589858	Condition	exc -> pedantic_hinting	3068:11:115104:115124	10589830	0	True				
ANR	10589859	PtrMemberAccess	exc -> pedantic_hinting		10589830	0					
ANR	10589860	Identifier	exc		10589830	0					
ANR	10589861	Identifier	pedantic_hinting		10589830	1					
ANR	10589862	ExpressionStatement	ARRAY_BOUND_ERROR	3069:8:115136:115153	10589830	1	True				
ANR	10589863	Identifier	ARRAY_BOUND_ERROR		10589830	0					
ANR	10589864	ElseStatement	else		10589830	0					
ANR	10589865	ExpressionStatement	"exc -> cvt [ I ] = FT_MulFix ( args [ 1 ] , exc -> tt_metrics . scale )"	3072:6:115176:115233	10589830	0	True				
ANR	10589866	AssignmentExpression	"exc -> cvt [ I ] = FT_MulFix ( args [ 1 ] , exc -> tt_metrics . scale )"		10589830	0		=			
ANR	10589867	ArrayIndexing	exc -> cvt [ I ]		10589830	0					
ANR	10589868	PtrMemberAccess	exc -> cvt		10589830	0					
ANR	10589869	Identifier	exc		10589830	0					
ANR	10589870	Identifier	cvt		10589830	1					
ANR	10589871	Identifier	I		10589830	1					
ANR	10589872	CallExpression	"FT_MulFix ( args [ 1 ] , exc -> tt_metrics . scale )"		10589830	1					
ANR	10589873	Callee	FT_MulFix		10589830	0					
ANR	10589874	Identifier	FT_MulFix		10589830	0					
ANR	10589875	ArgumentList	args [ 1 ]		10589830	1					
ANR	10589876	Argument	args [ 1 ]		10589830	0					
ANR	10589877	ArrayIndexing	args [ 1 ]		10589830	0					
ANR	10589878	Identifier	args		10589830	0					
ANR	10589879	PrimaryExpression	1		10589830	1					
ANR	10589880	Argument	exc -> tt_metrics . scale		10589830	1					
ANR	10589881	MemberAccess	exc -> tt_metrics . scale		10589830	0					
ANR	10589882	PtrMemberAccess	exc -> tt_metrics		10589830	0					
ANR	10589883	Identifier	exc		10589830	0					
ANR	10589884	Identifier	tt_metrics		10589830	1					
ANR	10589885	Identifier	scale		10589830	1					
ANR	10589886	ReturnType	static void		10589830	1					
ANR	10589887	Identifier	Ins_WCVTF		10589830	2					
ANR	10589888	ParameterList	"TT_ExecContext exc , FT_Long * args"		10589830	3					
ANR	10589889	Parameter	TT_ExecContext exc	3060:13:114949:114967	10589830	0	True				
ANR	10589890	ParameterType	TT_ExecContext		10589830	0					
ANR	10589891	Identifier	exc		10589830	1					
ANR	10589892	Parameter	FT_Long * args	3061:13:114983:115002	10589830	1	True				
ANR	10589893	ParameterType	FT_Long *		10589830	0					
ANR	10589894	Identifier	args		10589830	1					
ANR	10589895	CFGEntryNode	ENTRY		10589830		True				
ANR	10589896	CFGExitNode	EXIT		10589830		True				
ANR	10589897	Symbol	* * exc		10589830						
ANR	10589898	Symbol	* exc		10589830						
ANR	10589899	Symbol	exc -> cvtSize		10589830						
ANR	10589900	Symbol	exc -> pedantic_hinting		10589830						
ANR	10589901	Symbol	I		10589830						
ANR	10589902	Symbol	BOUNDSL		10589830						
ANR	10589903	Symbol	exc -> tt_metrics		10589830						
ANR	10589904	Symbol	* args		10589830						
ANR	10589905	Symbol	exc -> cvt		10589830						
ANR	10589906	Symbol	args		10589830						
ANR	10589907	Symbol	* exc -> cvt		10589830						
ANR	10589908	Symbol	exc		10589830						
ANR	10589909	Symbol	FT_MulFix		10589830						
ANR	10589910	Symbol	* I		10589830						
ANR	10589911	Symbol	exc -> tt_metrics . scale		10589830						
ANR	10589912	Function	Ins_RCVT	3082:2:115711:116035							
ANR	10589913	FunctionDef	"Ins_RCVT (TT_ExecContext exc , FT_Long * args)"		10589912	0					
ANR	10589914	CompoundStatement		3085:2:115793:116035	10589912	0					
ANR	10589915	IdentifierDeclStatement	FT_ULong I = ( FT_ULong ) args [ 0 ] ;	3086:4:115799:115830	10589912	0	True				
ANR	10589916	IdentifierDecl	I = ( FT_ULong ) args [ 0 ]		10589912	0					
ANR	10589917	IdentifierDeclType	FT_ULong		10589912	0					
ANR	10589918	Identifier	I		10589912	1					
ANR	10589919	AssignmentExpression	I = ( FT_ULong ) args [ 0 ]		10589912	2		=			
ANR	10589920	Identifier	I		10589912	0					
ANR	10589921	CastExpression	( FT_ULong ) args [ 0 ]		10589912	1					
ANR	10589922	CastTarget	FT_ULong		10589912	0					
ANR	10589923	ArrayIndexing	args [ 0 ]		10589912	1					
ANR	10589924	Identifier	args		10589912	0					
ANR	10589925	PrimaryExpression	0		10589912	1					
ANR	10589926	IfStatement	"if ( BOUNDSL ( I , exc -> cvtSize ) )"		10589912	1					
ANR	10589927	Condition	"BOUNDSL ( I , exc -> cvtSize )"	3089:9:115843:115868	10589912	0	True				
ANR	10589928	CallExpression	"BOUNDSL ( I , exc -> cvtSize )"		10589912	0					
ANR	10589929	Callee	BOUNDSL		10589912	0					
ANR	10589930	Identifier	BOUNDSL		10589912	0					
ANR	10589931	ArgumentList	I		10589912	1					
ANR	10589932	Argument	I		10589912	0					
ANR	10589933	Identifier	I		10589912	0					
ANR	10589934	Argument	exc -> cvtSize		10589912	1					
ANR	10589935	PtrMemberAccess	exc -> cvtSize		10589912	0					
ANR	10589936	Identifier	exc		10589912	0					
ANR	10589937	Identifier	cvtSize		10589912	1					
ANR	10589938	CompoundStatement		6:4:82:82	10589912	1					
ANR	10589939	IfStatement	if ( exc -> pedantic_hinting )		10589912	0					
ANR	10589940	Condition	exc -> pedantic_hinting	3091:11:115889:115909	10589912	0	True				
ANR	10589941	PtrMemberAccess	exc -> pedantic_hinting		10589912	0					
ANR	10589942	Identifier	exc		10589912	0					
ANR	10589943	Identifier	pedantic_hinting		10589912	1					
ANR	10589944	ExpressionStatement	ARRAY_BOUND_ERROR	3092:8:115921:115938	10589912	1	True				
ANR	10589945	Identifier	ARRAY_BOUND_ERROR		10589912	0					
ANR	10589946	ElseStatement	else		10589912	0					
ANR	10589947	ExpressionStatement	args [ 0 ] = 0	3094:8:115959:115970	10589912	0	True				
ANR	10589948	AssignmentExpression	args [ 0 ] = 0		10589912	0		=			
ANR	10589949	ArrayIndexing	args [ 0 ]		10589912	0					
ANR	10589950	Identifier	args		10589912	0					
ANR	10589951	PrimaryExpression	0		10589912	1					
ANR	10589952	PrimaryExpression	0		10589912	1					
ANR	10589953	ElseStatement	else		10589912	0					
ANR	10589954	ExpressionStatement	"args [ 0 ] = exc -> func_read_cvt ( exc , I )"	3097:6:115993:116031	10589912	0	True				
ANR	10589955	AssignmentExpression	"args [ 0 ] = exc -> func_read_cvt ( exc , I )"		10589912	0		=			
ANR	10589956	ArrayIndexing	args [ 0 ]		10589912	0					
ANR	10589957	Identifier	args		10589912	0					
ANR	10589958	PrimaryExpression	0		10589912	1					
ANR	10589959	CallExpression	"exc -> func_read_cvt ( exc , I )"		10589912	1					
ANR	10589960	Callee	exc -> func_read_cvt		10589912	0					
ANR	10589961	PtrMemberAccess	exc -> func_read_cvt		10589912	0					
ANR	10589962	Identifier	exc		10589912	0					
ANR	10589963	Identifier	func_read_cvt		10589912	1					
ANR	10589964	ArgumentList	exc		10589912	1					
ANR	10589965	Argument	exc		10589912	0					
ANR	10589966	Identifier	exc		10589912	0					
ANR	10589967	Argument	I		10589912	1					
ANR	10589968	Identifier	I		10589912	0					
ANR	10589969	ReturnType	static void		10589912	1					
ANR	10589970	Identifier	Ins_RCVT		10589912	2					
ANR	10589971	ParameterList	"TT_ExecContext exc , FT_Long * args"		10589912	3					
ANR	10589972	Parameter	TT_ExecContext exc	3083:12:115735:115753	10589912	0	True				
ANR	10589973	ParameterType	TT_ExecContext		10589912	0					
ANR	10589974	Identifier	exc		10589912	1					
ANR	10589975	Parameter	FT_Long * args	3084:12:115768:115787	10589912	1	True				
ANR	10589976	ParameterType	FT_Long *		10589912	0					
ANR	10589977	Identifier	args		10589912	1					
ANR	10589978	CFGEntryNode	ENTRY		10589912		True				
ANR	10589979	CFGExitNode	EXIT		10589912		True				
ANR	10589980	Symbol	args		10589912						
ANR	10589981	Symbol	exc		10589912						
ANR	10589982	Symbol	* exc		10589912						
ANR	10589983	Symbol	exc -> cvtSize		10589912						
ANR	10589984	Symbol	exc -> func_read_cvt		10589912						
ANR	10589985	Symbol	exc -> pedantic_hinting		10589912						
ANR	10589986	Symbol	I		10589912						
ANR	10589987	Symbol	BOUNDSL		10589912						
ANR	10589988	Symbol	* args		10589912						
ANR	10589989	Function	Ins_AA	3107:2:116509:116588							
ANR	10589990	FunctionDef	Ins_AA ()		10589989	0					
ANR	10589991	CompoundStatement		3109:2:116540:116588	10589989	0					
ANR	10589992	ReturnType	static void		10589989	1					
ANR	10589993	Identifier	Ins_AA		10589989	2					
ANR	10589994	ParameterList			10589989	3					
ANR	10589995	CFGEntryNode	ENTRY		10589989		True				
ANR	10589996	CFGExitNode	EXIT		10589989		True				
ANR	10589997	Function	Ins_DEBUG	3122:2:117218:117314							
ANR	10589998	FunctionDef	Ins_DEBUG (TT_ExecContext exc)		10589997	0					
ANR	10589999	CompoundStatement		3124:2:117267:117314	10589997	0					
ANR	10590000	ExpressionStatement	exc -> error = FT_THROW ( Debug_OpCode )	3125:4:117273:117310	10589997	0	True				
ANR	10590001	AssignmentExpression	exc -> error = FT_THROW ( Debug_OpCode )		10589997	0		=			
ANR	10590002	PtrMemberAccess	exc -> error		10589997	0					
ANR	10590003	Identifier	exc		10589997	0					
ANR	10590004	Identifier	error		10589997	1					
ANR	10590005	CallExpression	FT_THROW ( Debug_OpCode )		10589997	1					
ANR	10590006	Callee	FT_THROW		10589997	0					
ANR	10590007	Identifier	FT_THROW		10589997	0					
ANR	10590008	ArgumentList	Debug_OpCode		10589997	1					
ANR	10590009	Argument	Debug_OpCode		10589997	0					
ANR	10590010	Identifier	Debug_OpCode		10589997	0					
ANR	10590011	ReturnType	static void		10589997	1					
ANR	10590012	Identifier	Ins_DEBUG		10589997	2					
ANR	10590013	ParameterList	TT_ExecContext exc		10589997	3					
ANR	10590014	Parameter	TT_ExecContext exc	3123:13:117243:117261	10589997	0	True				
ANR	10590015	ParameterType	TT_ExecContext		10589997	0					
ANR	10590016	Identifier	exc		10589997	1					
ANR	10590017	CFGEntryNode	ENTRY		10589997		True				
ANR	10590018	CFGExitNode	EXIT		10589997		True				
ANR	10590019	Symbol	exc		10589997						
ANR	10590020	Symbol	* exc		10589997						
ANR	10590021	Symbol	Debug_OpCode		10589997						
ANR	10590022	Symbol	exc -> error		10589997						
ANR	10590023	Symbol	FT_THROW		10589997						
ANR	10590024	Function	Ins_ROUND	3135:2:117788:118022							
ANR	10590025	FunctionDef	"Ins_ROUND (TT_ExecContext exc , FT_Long * args)"		10590024	0					
ANR	10590026	CompoundStatement		3138:2:117872:118022	10590024	0					
ANR	10590027	ExpressionStatement	"args [ 0 ] = exc -> func_round ( exc , args [ 0 ] , exc -> tt_metrics . compensations [ exc -> opcode - 0x68 ] )"	3139:4:117878:118018	10590024	0	True				
ANR	10590028	AssignmentExpression	"args [ 0 ] = exc -> func_round ( exc , args [ 0 ] , exc -> tt_metrics . compensations [ exc -> opcode - 0x68 ] )"		10590024	0		=			
ANR	10590029	ArrayIndexing	args [ 0 ]		10590024	0					
ANR	10590030	Identifier	args		10590024	0					
ANR	10590031	PrimaryExpression	0		10590024	1					
ANR	10590032	CallExpression	"exc -> func_round ( exc , args [ 0 ] , exc -> tt_metrics . compensations [ exc -> opcode - 0x68 ] )"		10590024	1					
ANR	10590033	Callee	exc -> func_round		10590024	0					
ANR	10590034	PtrMemberAccess	exc -> func_round		10590024	0					
ANR	10590035	Identifier	exc		10590024	0					
ANR	10590036	Identifier	func_round		10590024	1					
ANR	10590037	ArgumentList	exc		10590024	1					
ANR	10590038	Argument	exc		10590024	0					
ANR	10590039	Identifier	exc		10590024	0					
ANR	10590040	Argument	args [ 0 ]		10590024	1					
ANR	10590041	ArrayIndexing	args [ 0 ]		10590024	0					
ANR	10590042	Identifier	args		10590024	0					
ANR	10590043	PrimaryExpression	0		10590024	1					
ANR	10590044	Argument	exc -> tt_metrics . compensations [ exc -> opcode - 0x68 ]		10590024	2					
ANR	10590045	ArrayIndexing	exc -> tt_metrics . compensations [ exc -> opcode - 0x68 ]		10590024	0					
ANR	10590046	MemberAccess	exc -> tt_metrics . compensations		10590024	0					
ANR	10590047	PtrMemberAccess	exc -> tt_metrics		10590024	0					
ANR	10590048	Identifier	exc		10590024	0					
ANR	10590049	Identifier	tt_metrics		10590024	1					
ANR	10590050	Identifier	compensations		10590024	1					
ANR	10590051	AdditiveExpression	exc -> opcode - 0x68		10590024	1		-			
ANR	10590052	PtrMemberAccess	exc -> opcode		10590024	0					
ANR	10590053	Identifier	exc		10590024	0					
ANR	10590054	Identifier	opcode		10590024	1					
ANR	10590055	PrimaryExpression	0x68		10590024	1					
ANR	10590056	ReturnType	static void		10590024	1					
ANR	10590057	Identifier	Ins_ROUND		10590024	2					
ANR	10590058	ParameterList	"TT_ExecContext exc , FT_Long * args"		10590024	3					
ANR	10590059	Parameter	TT_ExecContext exc	3136:13:117813:117831	10590024	0	True				
ANR	10590060	ParameterType	TT_ExecContext		10590024	0					
ANR	10590061	Identifier	exc		10590024	1					
ANR	10590062	Parameter	FT_Long * args	3137:13:117847:117866	10590024	1	True				
ANR	10590063	ParameterType	FT_Long *		10590024	0					
ANR	10590064	Identifier	args		10590024	1					
ANR	10590065	CFGEntryNode	ENTRY		10590024		True				
ANR	10590066	CFGExitNode	EXIT		10590024		True				
ANR	10590067	Symbol	args		10590024						
ANR	10590068	Symbol	exc		10590024						
ANR	10590069	Symbol	* exc -> tt_metrics . compensations		10590024						
ANR	10590070	Symbol	* exc -> tt_metrics		10590024						
ANR	10590071	Symbol	exc -> tt_metrics . compensations		10590024						
ANR	10590072	Symbol	* * exc		10590024						
ANR	10590073	Symbol	exc -> func_round		10590024						
ANR	10590074	Symbol	* exc		10590024						
ANR	10590075	Symbol	exc -> opcode		10590024						
ANR	10590076	Symbol	exc -> tt_metrics		10590024						
ANR	10590077	Symbol	* exc -> opcode		10590024						
ANR	10590078	Symbol	* args		10590024						
ANR	10590079	Function	Ins_NROUND	3152:2:118496:118727							
ANR	10590080	FunctionDef	"Ins_NROUND (TT_ExecContext exc , FT_Long * args)"		10590079	0					
ANR	10590081	CompoundStatement		3155:2:118582:118727	10590079	0					
ANR	10590082	ExpressionStatement	"args [ 0 ] = Round_None ( exc , args [ 0 ] , exc -> tt_metrics . compensations [ exc -> opcode - 0x6C ] )"	3156:4:118588:118723	10590079	0	True				
ANR	10590083	AssignmentExpression	"args [ 0 ] = Round_None ( exc , args [ 0 ] , exc -> tt_metrics . compensations [ exc -> opcode - 0x6C ] )"		10590079	0		=			
ANR	10590084	ArrayIndexing	args [ 0 ]		10590079	0					
ANR	10590085	Identifier	args		10590079	0					
ANR	10590086	PrimaryExpression	0		10590079	1					
ANR	10590087	CallExpression	"Round_None ( exc , args [ 0 ] , exc -> tt_metrics . compensations [ exc -> opcode - 0x6C ] )"		10590079	1					
ANR	10590088	Callee	Round_None		10590079	0					
ANR	10590089	Identifier	Round_None		10590079	0					
ANR	10590090	ArgumentList	exc		10590079	1					
ANR	10590091	Argument	exc		10590079	0					
ANR	10590092	Identifier	exc		10590079	0					
ANR	10590093	Argument	args [ 0 ]		10590079	1					
ANR	10590094	ArrayIndexing	args [ 0 ]		10590079	0					
ANR	10590095	Identifier	args		10590079	0					
ANR	10590096	PrimaryExpression	0		10590079	1					
ANR	10590097	Argument	exc -> tt_metrics . compensations [ exc -> opcode - 0x6C ]		10590079	2					
ANR	10590098	ArrayIndexing	exc -> tt_metrics . compensations [ exc -> opcode - 0x6C ]		10590079	0					
ANR	10590099	MemberAccess	exc -> tt_metrics . compensations		10590079	0					
ANR	10590100	PtrMemberAccess	exc -> tt_metrics		10590079	0					
ANR	10590101	Identifier	exc		10590079	0					
ANR	10590102	Identifier	tt_metrics		10590079	1					
ANR	10590103	Identifier	compensations		10590079	1					
ANR	10590104	AdditiveExpression	exc -> opcode - 0x6C		10590079	1		-			
ANR	10590105	PtrMemberAccess	exc -> opcode		10590079	0					
ANR	10590106	Identifier	exc		10590079	0					
ANR	10590107	Identifier	opcode		10590079	1					
ANR	10590108	PrimaryExpression	0x6C		10590079	1					
ANR	10590109	ReturnType	static void		10590079	1					
ANR	10590110	Identifier	Ins_NROUND		10590079	2					
ANR	10590111	ParameterList	"TT_ExecContext exc , FT_Long * args"		10590079	3					
ANR	10590112	Parameter	TT_ExecContext exc	3153:14:118522:118540	10590079	0	True				
ANR	10590113	ParameterType	TT_ExecContext		10590079	0					
ANR	10590114	Identifier	exc		10590079	1					
ANR	10590115	Parameter	FT_Long * args	3154:14:118557:118576	10590079	1	True				
ANR	10590116	ParameterType	FT_Long *		10590079	0					
ANR	10590117	Identifier	args		10590079	1					
ANR	10590118	CFGEntryNode	ENTRY		10590079		True				
ANR	10590119	CFGExitNode	EXIT		10590079		True				
ANR	10590120	Symbol	args		10590079						
ANR	10590121	Symbol	exc		10590079						
ANR	10590122	Symbol	* exc -> tt_metrics . compensations		10590079						
ANR	10590123	Symbol	* exc -> tt_metrics		10590079						
ANR	10590124	Symbol	exc -> tt_metrics . compensations		10590079						
ANR	10590125	Symbol	Round_None		10590079						
ANR	10590126	Symbol	* * exc		10590079						
ANR	10590127	Symbol	* exc		10590079						
ANR	10590128	Symbol	exc -> opcode		10590079						
ANR	10590129	Symbol	exc -> tt_metrics		10590079						
ANR	10590130	Symbol	* exc -> opcode		10590079						
ANR	10590131	Symbol	* args		10590079						
ANR	10590132	Function	Ins_MAX	3169:2:119201:119301							
ANR	10590133	FunctionDef	Ins_MAX (FT_Long * args)		10590132	0					
ANR	10590134	CompoundStatement		3171:2:119243:119301	10590132	0					
ANR	10590135	IfStatement	if ( args [ 1 ] > args [ 0 ] )		10590132	0					
ANR	10590136	Condition	args [ 1 ] > args [ 0 ]	3172:9:119254:119270	10590132	0	True				
ANR	10590137	RelationalExpression	args [ 1 ] > args [ 0 ]		10590132	0		>			
ANR	10590138	ArrayIndexing	args [ 1 ]		10590132	0					
ANR	10590139	Identifier	args		10590132	0					
ANR	10590140	PrimaryExpression	1		10590132	1					
ANR	10590141	ArrayIndexing	args [ 0 ]		10590132	1					
ANR	10590142	Identifier	args		10590132	0					
ANR	10590143	PrimaryExpression	0		10590132	1					
ANR	10590144	ExpressionStatement	args [ 0 ] = args [ 1 ]	3173:6:119280:119297	10590132	1	True				
ANR	10590145	AssignmentExpression	args [ 0 ] = args [ 1 ]		10590132	0		=			
ANR	10590146	ArrayIndexing	args [ 0 ]		10590132	0					
ANR	10590147	Identifier	args		10590132	0					
ANR	10590148	PrimaryExpression	0		10590132	1					
ANR	10590149	ArrayIndexing	args [ 1 ]		10590132	1					
ANR	10590150	Identifier	args		10590132	0					
ANR	10590151	PrimaryExpression	1		10590132	1					
ANR	10590152	ReturnType	static void		10590132	1					
ANR	10590153	Identifier	Ins_MAX		10590132	2					
ANR	10590154	ParameterList	FT_Long * args		10590132	3					
ANR	10590155	Parameter	FT_Long * args	3170:11:119224:119237	10590132	0	True				
ANR	10590156	ParameterType	FT_Long *		10590132	0					
ANR	10590157	Identifier	args		10590132	1					
ANR	10590158	CFGEntryNode	ENTRY		10590132		True				
ANR	10590159	CFGExitNode	EXIT		10590132		True				
ANR	10590160	Symbol	args		10590132						
ANR	10590161	Symbol	* args		10590132						
ANR	10590162	Function	Ins_MIN	3183:2:119775:119875							
ANR	10590163	FunctionDef	Ins_MIN (FT_Long * args)		10590162	0					
ANR	10590164	CompoundStatement		3185:2:119817:119875	10590162	0					
ANR	10590165	IfStatement	if ( args [ 1 ] < args [ 0 ] )		10590162	0					
ANR	10590166	Condition	args [ 1 ] < args [ 0 ]	3186:9:119828:119844	10590162	0	True				
ANR	10590167	RelationalExpression	args [ 1 ] < args [ 0 ]		10590162	0		<			
ANR	10590168	ArrayIndexing	args [ 1 ]		10590162	0					
ANR	10590169	Identifier	args		10590162	0					
ANR	10590170	PrimaryExpression	1		10590162	1					
ANR	10590171	ArrayIndexing	args [ 0 ]		10590162	1					
ANR	10590172	Identifier	args		10590162	0					
ANR	10590173	PrimaryExpression	0		10590162	1					
ANR	10590174	ExpressionStatement	args [ 0 ] = args [ 1 ]	3187:6:119854:119871	10590162	1	True				
ANR	10590175	AssignmentExpression	args [ 0 ] = args [ 1 ]		10590162	0		=			
ANR	10590176	ArrayIndexing	args [ 0 ]		10590162	0					
ANR	10590177	Identifier	args		10590162	0					
ANR	10590178	PrimaryExpression	0		10590162	1					
ANR	10590179	ArrayIndexing	args [ 1 ]		10590162	1					
ANR	10590180	Identifier	args		10590162	0					
ANR	10590181	PrimaryExpression	1		10590162	1					
ANR	10590182	ReturnType	static void		10590162	1					
ANR	10590183	Identifier	Ins_MIN		10590162	2					
ANR	10590184	ParameterList	FT_Long * args		10590162	3					
ANR	10590185	Parameter	FT_Long * args	3184:11:119798:119811	10590162	0	True				
ANR	10590186	ParameterType	FT_Long *		10590162	0					
ANR	10590187	Identifier	args		10590162	1					
ANR	10590188	CFGEntryNode	ENTRY		10590162		True				
ANR	10590189	CFGExitNode	EXIT		10590162		True				
ANR	10590190	Symbol	args		10590162						
ANR	10590191	Symbol	* args		10590162						
ANR	10590192	Function	Ins_MINDEX	3197:2:120349:120849							
ANR	10590193	FunctionDef	"Ins_MINDEX (TT_ExecContext exc , FT_Long * args)"		10590192	0					
ANR	10590194	CompoundStatement		3200:2:120435:120849	10590192	0					
ANR	10590195	IdentifierDeclStatement	"FT_Long L , K ;"	3201:4:120441:120454	10590192	0	True				
ANR	10590196	IdentifierDecl	L		10590192	0					
ANR	10590197	IdentifierDeclType	FT_Long		10590192	0					
ANR	10590198	Identifier	L		10590192	1					
ANR	10590199	IdentifierDecl	K		10590192	1					
ANR	10590200	IdentifierDeclType	FT_Long		10590192	0					
ANR	10590201	Identifier	K		10590192	1					
ANR	10590202	ExpressionStatement	L = args [ 0 ]	3204:4:120462:120473	10590192	1	True				
ANR	10590203	AssignmentExpression	L = args [ 0 ]		10590192	0		=			
ANR	10590204	Identifier	L		10590192	0					
ANR	10590205	ArrayIndexing	args [ 0 ]		10590192	1					
ANR	10590206	Identifier	args		10590192	0					
ANR	10590207	PrimaryExpression	0		10590192	1					
ANR	10590208	IfStatement	if ( L <= 0 || L > exc -> args )		10590192	2					
ANR	10590209	Condition	L <= 0 || L > exc -> args	3206:9:120485:120507	10590192	0	True				
ANR	10590210	OrExpression	L <= 0 || L > exc -> args		10590192	0		||			
ANR	10590211	RelationalExpression	L <= 0		10590192	0		<=			
ANR	10590212	Identifier	L		10590192	0					
ANR	10590213	PrimaryExpression	0		10590192	1					
ANR	10590214	RelationalExpression	L > exc -> args		10590192	1		>			
ANR	10590215	Identifier	L		10590192	0					
ANR	10590216	PtrMemberAccess	exc -> args		10590192	1					
ANR	10590217	Identifier	exc		10590192	0					
ANR	10590218	Identifier	args		10590192	1					
ANR	10590219	CompoundStatement		8:4:79:79	10590192	1					
ANR	10590220	IfStatement	if ( exc -> pedantic_hinting )		10590192	0					
ANR	10590221	Condition	exc -> pedantic_hinting	3208:11:120528:120548	10590192	0	True				
ANR	10590222	PtrMemberAccess	exc -> pedantic_hinting		10590192	0					
ANR	10590223	Identifier	exc		10590192	0					
ANR	10590224	Identifier	pedantic_hinting		10590192	1					
ANR	10590225	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	3209:8:120560:120602	10590192	1	True				
ANR	10590226	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10590192	0		=			
ANR	10590227	PtrMemberAccess	exc -> error		10590192	0					
ANR	10590228	Identifier	exc		10590192	0					
ANR	10590229	Identifier	error		10590192	1					
ANR	10590230	CallExpression	FT_THROW ( Invalid_Reference )		10590192	1					
ANR	10590231	Callee	FT_THROW		10590192	0					
ANR	10590232	Identifier	FT_THROW		10590192	0					
ANR	10590233	ArgumentList	Invalid_Reference		10590192	1					
ANR	10590234	Argument	Invalid_Reference		10590192	0					
ANR	10590235	Identifier	Invalid_Reference		10590192	0					
ANR	10590236	ElseStatement	else		10590192	0					
ANR	10590237	CompoundStatement		13:4:187:187	10590192	0					
ANR	10590238	ExpressionStatement	K = exc -> stack [ exc -> args - L ]	3213:6:120631:120660	10590192	0	True				
ANR	10590239	AssignmentExpression	K = exc -> stack [ exc -> args - L ]		10590192	0		=			
ANR	10590240	Identifier	K		10590192	0					
ANR	10590241	ArrayIndexing	exc -> stack [ exc -> args - L ]		10590192	1					
ANR	10590242	PtrMemberAccess	exc -> stack		10590192	0					
ANR	10590243	Identifier	exc		10590192	0					
ANR	10590244	Identifier	stack		10590192	1					
ANR	10590245	AdditiveExpression	exc -> args - L		10590192	1		-			
ANR	10590246	PtrMemberAccess	exc -> args		10590192	0					
ANR	10590247	Identifier	exc		10590192	0					
ANR	10590248	Identifier	args		10590192	1					
ANR	10590249	Identifier	L		10590192	1					
ANR	10590250	ExpressionStatement	"FT_ARRAY_MOVE ( & exc -> stack [ exc -> args - L ] , & exc -> stack [ exc -> args - L + 1 ] , ( L - 1 ) )"	3215:6:120669:120801	10590192	1	True				
ANR	10590251	CallExpression	"FT_ARRAY_MOVE ( & exc -> stack [ exc -> args - L ] , & exc -> stack [ exc -> args - L + 1 ] , ( L - 1 ) )"		10590192	0					
ANR	10590252	Callee	FT_ARRAY_MOVE		10590192	0					
ANR	10590253	Identifier	FT_ARRAY_MOVE		10590192	0					
ANR	10590254	ArgumentList	& exc -> stack [ exc -> args - L ]		10590192	1					
ANR	10590255	Argument	& exc -> stack [ exc -> args - L ]		10590192	0					
ANR	10590256	UnaryOperationExpression	& exc -> stack [ exc -> args - L ]		10590192	0					
ANR	10590257	UnaryOperator	&		10590192	0					
ANR	10590258	ArrayIndexing	exc -> stack [ exc -> args - L ]		10590192	1					
ANR	10590259	PtrMemberAccess	exc -> stack		10590192	0					
ANR	10590260	Identifier	exc		10590192	0					
ANR	10590261	Identifier	stack		10590192	1					
ANR	10590262	AdditiveExpression	exc -> args - L		10590192	1		-			
ANR	10590263	PtrMemberAccess	exc -> args		10590192	0					
ANR	10590264	Identifier	exc		10590192	0					
ANR	10590265	Identifier	args		10590192	1					
ANR	10590266	Identifier	L		10590192	1					
ANR	10590267	Argument	& exc -> stack [ exc -> args - L + 1 ]		10590192	1					
ANR	10590268	UnaryOperationExpression	& exc -> stack [ exc -> args - L + 1 ]		10590192	0					
ANR	10590269	UnaryOperator	&		10590192	0					
ANR	10590270	ArrayIndexing	exc -> stack [ exc -> args - L + 1 ]		10590192	1					
ANR	10590271	PtrMemberAccess	exc -> stack		10590192	0					
ANR	10590272	Identifier	exc		10590192	0					
ANR	10590273	Identifier	stack		10590192	1					
ANR	10590274	AdditiveExpression	exc -> args - L + 1		10590192	1		-			
ANR	10590275	PtrMemberAccess	exc -> args		10590192	0					
ANR	10590276	Identifier	exc		10590192	0					
ANR	10590277	Identifier	args		10590192	1					
ANR	10590278	AdditiveExpression	L + 1		10590192	1		+			
ANR	10590279	Identifier	L		10590192	0					
ANR	10590280	PrimaryExpression	1		10590192	1					
ANR	10590281	Argument	L - 1		10590192	2					
ANR	10590282	AdditiveExpression	L - 1		10590192	0		-			
ANR	10590283	Identifier	L		10590192	0					
ANR	10590284	PrimaryExpression	1		10590192	1					
ANR	10590285	ExpressionStatement	exc -> stack [ exc -> args - 1 ] = K	3219:6:120810:120839	10590192	2	True				
ANR	10590286	AssignmentExpression	exc -> stack [ exc -> args - 1 ] = K		10590192	0		=			
ANR	10590287	ArrayIndexing	exc -> stack [ exc -> args - 1 ]		10590192	0					
ANR	10590288	PtrMemberAccess	exc -> stack		10590192	0					
ANR	10590289	Identifier	exc		10590192	0					
ANR	10590290	Identifier	stack		10590192	1					
ANR	10590291	AdditiveExpression	exc -> args - 1		10590192	1		-			
ANR	10590292	PtrMemberAccess	exc -> args		10590192	0					
ANR	10590293	Identifier	exc		10590192	0					
ANR	10590294	Identifier	args		10590192	1					
ANR	10590295	PrimaryExpression	1		10590192	1					
ANR	10590296	Identifier	K		10590192	1					
ANR	10590297	ReturnType	static void		10590192	1					
ANR	10590298	Identifier	Ins_MINDEX		10590192	2					
ANR	10590299	ParameterList	"TT_ExecContext exc , FT_Long * args"		10590192	3					
ANR	10590300	Parameter	TT_ExecContext exc	3198:14:120375:120393	10590192	0	True				
ANR	10590301	ParameterType	TT_ExecContext		10590192	0					
ANR	10590302	Identifier	exc		10590192	1					
ANR	10590303	Parameter	FT_Long * args	3199:14:120410:120429	10590192	1	True				
ANR	10590304	ParameterType	FT_Long *		10590192	0					
ANR	10590305	Identifier	args		10590192	1					
ANR	10590306	CFGEntryNode	ENTRY		10590192		True				
ANR	10590307	CFGExitNode	EXIT		10590192		True				
ANR	10590308	Symbol	* exc -> stack		10590192						
ANR	10590309	Symbol	* * exc		10590192						
ANR	10590310	Symbol	* exc		10590192						
ANR	10590311	Symbol	exc -> args		10590192						
ANR	10590312	Symbol	exc -> pedantic_hinting		10590192						
ANR	10590313	Symbol	K		10590192						
ANR	10590314	Symbol	* exc -> args		10590192						
ANR	10590315	Symbol	L		10590192						
ANR	10590316	Symbol	FT_THROW		10590192						
ANR	10590317	Symbol	* args		10590192						
ANR	10590318	Symbol	args		10590192						
ANR	10590319	Symbol	exc		10590192						
ANR	10590320	Symbol	Invalid_Reference		10590192						
ANR	10590321	Symbol	exc -> stack		10590192						
ANR	10590322	Symbol	* L		10590192						
ANR	10590323	Symbol	exc -> error		10590192						
ANR	10590324	Function	Ins_CINDEX	3230:2:121323:121654							
ANR	10590325	FunctionDef	"Ins_CINDEX (TT_ExecContext exc , FT_Long * args)"		10590324	0					
ANR	10590326	CompoundStatement		3233:2:121409:121654	10590324	0					
ANR	10590327	IdentifierDeclStatement	FT_Long L ;	3234:4:121415:121425	10590324	0	True				
ANR	10590328	IdentifierDecl	L		10590324	0					
ANR	10590329	IdentifierDeclType	FT_Long		10590324	0					
ANR	10590330	Identifier	L		10590324	1					
ANR	10590331	ExpressionStatement	L = args [ 0 ]	3237:4:121433:121444	10590324	1	True				
ANR	10590332	AssignmentExpression	L = args [ 0 ]		10590324	0		=			
ANR	10590333	Identifier	L		10590324	0					
ANR	10590334	ArrayIndexing	args [ 0 ]		10590324	1					
ANR	10590335	Identifier	args		10590324	0					
ANR	10590336	PrimaryExpression	0		10590324	1					
ANR	10590337	IfStatement	if ( L <= 0 || L > exc -> args )		10590324	2					
ANR	10590338	Condition	L <= 0 || L > exc -> args	3239:9:121456:121478	10590324	0	True				
ANR	10590339	OrExpression	L <= 0 || L > exc -> args		10590324	0		||			
ANR	10590340	RelationalExpression	L <= 0		10590324	0		<=			
ANR	10590341	Identifier	L		10590324	0					
ANR	10590342	PrimaryExpression	0		10590324	1					
ANR	10590343	RelationalExpression	L > exc -> args		10590324	1		>			
ANR	10590344	Identifier	L		10590324	0					
ANR	10590345	PtrMemberAccess	exc -> args		10590324	1					
ANR	10590346	Identifier	exc		10590324	0					
ANR	10590347	Identifier	args		10590324	1					
ANR	10590348	CompoundStatement		8:4:76:76	10590324	1					
ANR	10590349	IfStatement	if ( exc -> pedantic_hinting )		10590324	0					
ANR	10590350	Condition	exc -> pedantic_hinting	3241:11:121499:121519	10590324	0	True				
ANR	10590351	PtrMemberAccess	exc -> pedantic_hinting		10590324	0					
ANR	10590352	Identifier	exc		10590324	0					
ANR	10590353	Identifier	pedantic_hinting		10590324	1					
ANR	10590354	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	3242:8:121531:121573	10590324	1	True				
ANR	10590355	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10590324	0		=			
ANR	10590356	PtrMemberAccess	exc -> error		10590324	0					
ANR	10590357	Identifier	exc		10590324	0					
ANR	10590358	Identifier	error		10590324	1					
ANR	10590359	CallExpression	FT_THROW ( Invalid_Reference )		10590324	1					
ANR	10590360	Callee	FT_THROW		10590324	0					
ANR	10590361	Identifier	FT_THROW		10590324	0					
ANR	10590362	ArgumentList	Invalid_Reference		10590324	1					
ANR	10590363	Argument	Invalid_Reference		10590324	0					
ANR	10590364	Identifier	Invalid_Reference		10590324	0					
ANR	10590365	ExpressionStatement	args [ 0 ] = 0	3243:6:121581:121592	10590324	1	True				
ANR	10590366	AssignmentExpression	args [ 0 ] = 0		10590324	0		=			
ANR	10590367	ArrayIndexing	args [ 0 ]		10590324	0					
ANR	10590368	Identifier	args		10590324	0					
ANR	10590369	PrimaryExpression	0		10590324	1					
ANR	10590370	PrimaryExpression	0		10590324	1					
ANR	10590371	ElseStatement	else		10590324	0					
ANR	10590372	ExpressionStatement	args [ 0 ] = exc -> stack [ exc -> args - L ]	3246:6:121615:121650	10590324	0	True				
ANR	10590373	AssignmentExpression	args [ 0 ] = exc -> stack [ exc -> args - L ]		10590324	0		=			
ANR	10590374	ArrayIndexing	args [ 0 ]		10590324	0					
ANR	10590375	Identifier	args		10590324	0					
ANR	10590376	PrimaryExpression	0		10590324	1					
ANR	10590377	ArrayIndexing	exc -> stack [ exc -> args - L ]		10590324	1					
ANR	10590378	PtrMemberAccess	exc -> stack		10590324	0					
ANR	10590379	Identifier	exc		10590324	0					
ANR	10590380	Identifier	stack		10590324	1					
ANR	10590381	AdditiveExpression	exc -> args - L		10590324	1		-			
ANR	10590382	PtrMemberAccess	exc -> args		10590324	0					
ANR	10590383	Identifier	exc		10590324	0					
ANR	10590384	Identifier	args		10590324	1					
ANR	10590385	Identifier	L		10590324	1					
ANR	10590386	ReturnType	static void		10590324	1					
ANR	10590387	Identifier	Ins_CINDEX		10590324	2					
ANR	10590388	ParameterList	"TT_ExecContext exc , FT_Long * args"		10590324	3					
ANR	10590389	Parameter	TT_ExecContext exc	3231:14:121349:121367	10590324	0	True				
ANR	10590390	ParameterType	TT_ExecContext		10590324	0					
ANR	10590391	Identifier	exc		10590324	1					
ANR	10590392	Parameter	FT_Long * args	3232:14:121384:121403	10590324	1	True				
ANR	10590393	ParameterType	FT_Long *		10590324	0					
ANR	10590394	Identifier	args		10590324	1					
ANR	10590395	CFGEntryNode	ENTRY		10590324		True				
ANR	10590396	CFGExitNode	EXIT		10590324		True				
ANR	10590397	Symbol	* exc -> stack		10590324						
ANR	10590398	Symbol	* * exc		10590324						
ANR	10590399	Symbol	* exc		10590324						
ANR	10590400	Symbol	exc -> args		10590324						
ANR	10590401	Symbol	exc -> pedantic_hinting		10590324						
ANR	10590402	Symbol	* exc -> args		10590324						
ANR	10590403	Symbol	L		10590324						
ANR	10590404	Symbol	FT_THROW		10590324						
ANR	10590405	Symbol	* args		10590324						
ANR	10590406	Symbol	args		10590324						
ANR	10590407	Symbol	exc		10590324						
ANR	10590408	Symbol	Invalid_Reference		10590324						
ANR	10590409	Symbol	exc -> stack		10590324						
ANR	10590410	Symbol	* L		10590324						
ANR	10590411	Symbol	exc -> error		10590324						
ANR	10590412	Function	Ins_ROLL	3256:2:122128:122302							
ANR	10590413	FunctionDef	Ins_ROLL (FT_Long * args)		10590412	0					
ANR	10590414	CompoundStatement		3258:2:122171:122302	10590412	0					
ANR	10590415	IdentifierDeclStatement	"FT_Long A , B , C ;"	3259:4:122177:122193	10590412	0	True				
ANR	10590416	IdentifierDecl	A		10590412	0					
ANR	10590417	IdentifierDeclType	FT_Long		10590412	0					
ANR	10590418	Identifier	A		10590412	1					
ANR	10590419	IdentifierDecl	B		10590412	1					
ANR	10590420	IdentifierDeclType	FT_Long		10590412	0					
ANR	10590421	Identifier	B		10590412	1					
ANR	10590422	IdentifierDecl	C		10590412	2					
ANR	10590423	IdentifierDeclType	FT_Long		10590412	0					
ANR	10590424	Identifier	C		10590412	1					
ANR	10590425	ExpressionStatement	A = args [ 2 ]	3262:4:122201:122212	10590412	1	True				
ANR	10590426	AssignmentExpression	A = args [ 2 ]		10590412	0		=			
ANR	10590427	Identifier	A		10590412	0					
ANR	10590428	ArrayIndexing	args [ 2 ]		10590412	1					
ANR	10590429	Identifier	args		10590412	0					
ANR	10590430	PrimaryExpression	2		10590412	1					
ANR	10590431	ExpressionStatement	B = args [ 1 ]	3263:4:122218:122229	10590412	2	True				
ANR	10590432	AssignmentExpression	B = args [ 1 ]		10590412	0		=			
ANR	10590433	Identifier	B		10590412	0					
ANR	10590434	ArrayIndexing	args [ 1 ]		10590412	1					
ANR	10590435	Identifier	args		10590412	0					
ANR	10590436	PrimaryExpression	1		10590412	1					
ANR	10590437	ExpressionStatement	C = args [ 0 ]	3264:4:122235:122246	10590412	3	True				
ANR	10590438	AssignmentExpression	C = args [ 0 ]		10590412	0		=			
ANR	10590439	Identifier	C		10590412	0					
ANR	10590440	ArrayIndexing	args [ 0 ]		10590412	1					
ANR	10590441	Identifier	args		10590412	0					
ANR	10590442	PrimaryExpression	0		10590412	1					
ANR	10590443	ExpressionStatement	args [ 2 ] = C	3266:4:122253:122264	10590412	4	True				
ANR	10590444	AssignmentExpression	args [ 2 ] = C		10590412	0		=			
ANR	10590445	ArrayIndexing	args [ 2 ]		10590412	0					
ANR	10590446	Identifier	args		10590412	0					
ANR	10590447	PrimaryExpression	2		10590412	1					
ANR	10590448	Identifier	C		10590412	1					
ANR	10590449	ExpressionStatement	args [ 1 ] = A	3267:4:122270:122281	10590412	5	True				
ANR	10590450	AssignmentExpression	args [ 1 ] = A		10590412	0		=			
ANR	10590451	ArrayIndexing	args [ 1 ]		10590412	0					
ANR	10590452	Identifier	args		10590412	0					
ANR	10590453	PrimaryExpression	1		10590412	1					
ANR	10590454	Identifier	A		10590412	1					
ANR	10590455	ExpressionStatement	args [ 0 ] = B	3268:4:122287:122298	10590412	6	True				
ANR	10590456	AssignmentExpression	args [ 0 ] = B		10590412	0		=			
ANR	10590457	ArrayIndexing	args [ 0 ]		10590412	0					
ANR	10590458	Identifier	args		10590412	0					
ANR	10590459	PrimaryExpression	0		10590412	1					
ANR	10590460	Identifier	B		10590412	1					
ANR	10590461	ReturnType	static void		10590412	1					
ANR	10590462	Identifier	Ins_ROLL		10590412	2					
ANR	10590463	ParameterList	FT_Long * args		10590412	3					
ANR	10590464	Parameter	FT_Long * args	3257:12:122152:122165	10590412	0	True				
ANR	10590465	ParameterType	FT_Long *		10590412	0					
ANR	10590466	Identifier	args		10590412	1					
ANR	10590467	CFGEntryNode	ENTRY		10590412		True				
ANR	10590468	CFGExitNode	EXIT		10590412		True				
ANR	10590469	Symbol	args		10590412						
ANR	10590470	Symbol	A		10590412						
ANR	10590471	Symbol	B		10590412						
ANR	10590472	Symbol	C		10590412						
ANR	10590473	Symbol	* args		10590412						
ANR	10590474	Function	Ins_SLOOP	3285:2:123168:123471							
ANR	10590475	FunctionDef	"Ins_SLOOP (TT_ExecContext exc , FT_Long * args)"		10590474	0					
ANR	10590476	CompoundStatement		3288:2:123252:123471	10590474	0					
ANR	10590477	IfStatement	if ( args [ 0 ] < 0 )		10590474	0					
ANR	10590478	Condition	args [ 0 ] < 0	3289:9:123263:123273	10590474	0	True				
ANR	10590479	RelationalExpression	args [ 0 ] < 0		10590474	0		<			
ANR	10590480	ArrayIndexing	args [ 0 ]		10590474	0					
ANR	10590481	Identifier	args		10590474	0					
ANR	10590482	PrimaryExpression	0		10590474	1					
ANR	10590483	PrimaryExpression	0		10590474	1					
ANR	10590484	ExpressionStatement	exc -> error = FT_THROW ( Bad_Argument )	3290:6:123283:123320	10590474	1	True				
ANR	10590485	AssignmentExpression	exc -> error = FT_THROW ( Bad_Argument )		10590474	0		=			
ANR	10590486	PtrMemberAccess	exc -> error		10590474	0					
ANR	10590487	Identifier	exc		10590474	0					
ANR	10590488	Identifier	error		10590474	1					
ANR	10590489	CallExpression	FT_THROW ( Bad_Argument )		10590474	1					
ANR	10590490	Callee	FT_THROW		10590474	0					
ANR	10590491	Identifier	FT_THROW		10590474	0					
ANR	10590492	ArgumentList	Bad_Argument		10590474	1					
ANR	10590493	Argument	Bad_Argument		10590474	0					
ANR	10590494	Identifier	Bad_Argument		10590474	0					
ANR	10590495	ElseStatement	else		10590474	0					
ANR	10590496	CompoundStatement		5:4:82:82	10590474	0					
ANR	10590497	ExpressionStatement	exc -> GS . loop = args [ 0 ] > 0xFFFFL ? 0xFFFFL : args [ 0 ]	3294:6:123409:123461	10590474	0	True				
ANR	10590498	AssignmentExpression	exc -> GS . loop = args [ 0 ] > 0xFFFFL ? 0xFFFFL : args [ 0 ]		10590474	0		=			
ANR	10590499	MemberAccess	exc -> GS . loop		10590474	0					
ANR	10590500	PtrMemberAccess	exc -> GS		10590474	0					
ANR	10590501	Identifier	exc		10590474	0					
ANR	10590502	Identifier	GS		10590474	1					
ANR	10590503	Identifier	loop		10590474	1					
ANR	10590504	ConditionalExpression	args [ 0 ] > 0xFFFFL ? 0xFFFFL : args [ 0 ]		10590474	1					
ANR	10590505	Condition	args [ 0 ] > 0xFFFFL		10590474	0					
ANR	10590506	RelationalExpression	args [ 0 ] > 0xFFFFL		10590474	0		>			
ANR	10590507	ArrayIndexing	args [ 0 ]		10590474	0					
ANR	10590508	Identifier	args		10590474	0					
ANR	10590509	PrimaryExpression	0		10590474	1					
ANR	10590510	PrimaryExpression	0xFFFFL		10590474	1					
ANR	10590511	PrimaryExpression	0xFFFFL		10590474	1					
ANR	10590512	ArrayIndexing	args [ 0 ]		10590474	2					
ANR	10590513	Identifier	args		10590474	0					
ANR	10590514	PrimaryExpression	0		10590474	1					
ANR	10590515	ReturnType	static void		10590474	1					
ANR	10590516	Identifier	Ins_SLOOP		10590474	2					
ANR	10590517	ParameterList	"TT_ExecContext exc , FT_Long * args"		10590474	3					
ANR	10590518	Parameter	TT_ExecContext exc	3286:13:123193:123211	10590474	0	True				
ANR	10590519	ParameterType	TT_ExecContext		10590474	0					
ANR	10590520	Identifier	exc		10590474	1					
ANR	10590521	Parameter	FT_Long * args	3287:13:123227:123246	10590474	1	True				
ANR	10590522	ParameterType	FT_Long *		10590474	0					
ANR	10590523	Identifier	args		10590474	1					
ANR	10590524	CFGEntryNode	ENTRY		10590474		True				
ANR	10590525	CFGExitNode	EXIT		10590474		True				
ANR	10590526	Symbol	args		10590474						
ANR	10590527	Symbol	exc		10590474						
ANR	10590528	Symbol	Bad_Argument		10590474						
ANR	10590529	Symbol	* exc		10590474						
ANR	10590530	Symbol	exc -> GS . loop		10590474						
ANR	10590531	Symbol	exc -> error		10590474						
ANR	10590532	Symbol	exc -> GS		10590474						
ANR	10590533	Symbol	FT_THROW		10590474						
ANR	10590534	Symbol	* args		10590474						
ANR	10590535	Function	SkipCode	3299:2:123477:124039							
ANR	10590536	FunctionDef	SkipCode (TT_ExecContext exc)		10590535	0					
ANR	10590537	CompoundStatement		3301:2:123528:124039	10590535	0					
ANR	10590538	ExpressionStatement	exc -> IP += exc -> length	3302:4:123534:123556	10590535	0	True				
ANR	10590539	AssignmentExpression	exc -> IP += exc -> length		10590535	0		+=			
ANR	10590540	PtrMemberAccess	exc -> IP		10590535	0					
ANR	10590541	Identifier	exc		10590535	0					
ANR	10590542	Identifier	IP		10590535	1					
ANR	10590543	PtrMemberAccess	exc -> length		10590535	1					
ANR	10590544	Identifier	exc		10590535	0					
ANR	10590545	Identifier	length		10590535	1					
ANR	10590546	IfStatement	if ( exc -> IP < exc -> codeSize )		10590535	1					
ANR	10590547	Condition	exc -> IP < exc -> codeSize	3304:9:123568:123590	10590535	0	True				
ANR	10590548	RelationalExpression	exc -> IP < exc -> codeSize		10590535	0		<			
ANR	10590549	PtrMemberAccess	exc -> IP		10590535	0					
ANR	10590550	Identifier	exc		10590535	0					
ANR	10590551	Identifier	IP		10590535	1					
ANR	10590552	PtrMemberAccess	exc -> codeSize		10590535	1					
ANR	10590553	Identifier	exc		10590535	0					
ANR	10590554	Identifier	codeSize		10590535	1					
ANR	10590555	CompoundStatement		5:4:69:69	10590535	1					
ANR	10590556	ExpressionStatement	exc -> opcode = exc -> code [ exc -> IP ]	3306:6:123606:123638	10590535	0	True				
ANR	10590557	AssignmentExpression	exc -> opcode = exc -> code [ exc -> IP ]		10590535	0		=			
ANR	10590558	PtrMemberAccess	exc -> opcode		10590535	0					
ANR	10590559	Identifier	exc		10590535	0					
ANR	10590560	Identifier	opcode		10590535	1					
ANR	10590561	ArrayIndexing	exc -> code [ exc -> IP ]		10590535	1					
ANR	10590562	PtrMemberAccess	exc -> code		10590535	0					
ANR	10590563	Identifier	exc		10590535	0					
ANR	10590564	Identifier	code		10590535	1					
ANR	10590565	PtrMemberAccess	exc -> IP		10590535	1					
ANR	10590566	Identifier	exc		10590535	0					
ANR	10590567	Identifier	IP		10590535	1					
ANR	10590568	ExpressionStatement	exc -> length = opcode_length [ exc -> opcode ]	3308:6:123647:123687	10590535	1	True				
ANR	10590569	AssignmentExpression	exc -> length = opcode_length [ exc -> opcode ]		10590535	0		=			
ANR	10590570	PtrMemberAccess	exc -> length		10590535	0					
ANR	10590571	Identifier	exc		10590535	0					
ANR	10590572	Identifier	length		10590535	1					
ANR	10590573	ArrayIndexing	opcode_length [ exc -> opcode ]		10590535	1					
ANR	10590574	Identifier	opcode_length		10590535	0					
ANR	10590575	PtrMemberAccess	exc -> opcode		10590535	1					
ANR	10590576	Identifier	exc		10590535	0					
ANR	10590577	Identifier	opcode		10590535	1					
ANR	10590578	IfStatement	if ( exc -> length < 0 )		10590535	2					
ANR	10590579	Condition	exc -> length < 0	3309:11:123700:123714	10590535	0	True				
ANR	10590580	RelationalExpression	exc -> length < 0		10590535	0		<			
ANR	10590581	PtrMemberAccess	exc -> length		10590535	0					
ANR	10590582	Identifier	exc		10590535	0					
ANR	10590583	Identifier	length		10590535	1					
ANR	10590584	PrimaryExpression	0		10590535	1					
ANR	10590585	CompoundStatement		10:6:195:195	10590535	1					
ANR	10590586	IfStatement	if ( exc -> IP + 1 >= exc -> codeSize )		10590535	0					
ANR	10590587	Condition	exc -> IP + 1 >= exc -> codeSize	3311:13:123739:123766	10590535	0	True				
ANR	10590588	RelationalExpression	exc -> IP + 1 >= exc -> codeSize		10590535	0		>=			
ANR	10590589	AdditiveExpression	exc -> IP + 1		10590535	0		+			
ANR	10590590	PtrMemberAccess	exc -> IP		10590535	0					
ANR	10590591	Identifier	exc		10590535	0					
ANR	10590592	Identifier	IP		10590535	1					
ANR	10590593	PrimaryExpression	1		10590535	1					
ANR	10590594	PtrMemberAccess	exc -> codeSize		10590535	1					
ANR	10590595	Identifier	exc		10590535	0					
ANR	10590596	Identifier	codeSize		10590535	1					
ANR	10590597	GotoStatement	goto Fail_Overflow ;	3312:10:123780:123798	10590535	1	True				
ANR	10590598	Identifier	Fail_Overflow		10590535	0					
ANR	10590599	ExpressionStatement	exc -> length = 2 - exc -> length * exc -> code [ exc -> IP + 1 ]	3313:8:123808:123862	10590535	1	True				
ANR	10590600	AssignmentExpression	exc -> length = 2 - exc -> length * exc -> code [ exc -> IP + 1 ]		10590535	0		=			
ANR	10590601	PtrMemberAccess	exc -> length		10590535	0					
ANR	10590602	Identifier	exc		10590535	0					
ANR	10590603	Identifier	length		10590535	1					
ANR	10590604	AdditiveExpression	2 - exc -> length * exc -> code [ exc -> IP + 1 ]		10590535	1		-			
ANR	10590605	PrimaryExpression	2		10590535	0					
ANR	10590606	MultiplicativeExpression	exc -> length * exc -> code [ exc -> IP + 1 ]		10590535	1		*			
ANR	10590607	PtrMemberAccess	exc -> length		10590535	0					
ANR	10590608	Identifier	exc		10590535	0					
ANR	10590609	Identifier	length		10590535	1					
ANR	10590610	ArrayIndexing	exc -> code [ exc -> IP + 1 ]		10590535	1					
ANR	10590611	PtrMemberAccess	exc -> code		10590535	0					
ANR	10590612	Identifier	exc		10590535	0					
ANR	10590613	Identifier	code		10590535	1					
ANR	10590614	AdditiveExpression	exc -> IP + 1		10590535	1		+			
ANR	10590615	PtrMemberAccess	exc -> IP		10590535	0					
ANR	10590616	Identifier	exc		10590535	0					
ANR	10590617	Identifier	IP		10590535	1					
ANR	10590618	PrimaryExpression	1		10590535	1					
ANR	10590619	IfStatement	if ( exc -> IP + exc -> length <= exc -> codeSize )		10590535	3					
ANR	10590620	Condition	exc -> IP + exc -> length <= exc -> codeSize	3316:11:123884:123921	10590535	0	True				
ANR	10590621	RelationalExpression	exc -> IP + exc -> length <= exc -> codeSize		10590535	0		<=			
ANR	10590622	AdditiveExpression	exc -> IP + exc -> length		10590535	0		+			
ANR	10590623	PtrMemberAccess	exc -> IP		10590535	0					
ANR	10590624	Identifier	exc		10590535	0					
ANR	10590625	Identifier	IP		10590535	1					
ANR	10590626	PtrMemberAccess	exc -> length		10590535	1					
ANR	10590627	Identifier	exc		10590535	0					
ANR	10590628	Identifier	length		10590535	1					
ANR	10590629	PtrMemberAccess	exc -> codeSize		10590535	1					
ANR	10590630	Identifier	exc		10590535	0					
ANR	10590631	Identifier	codeSize		10590535	1					
ANR	10590632	ReturnStatement	return SUCCESS ;	3317:8:123933:123947	10590535	1	True				
ANR	10590633	Identifier	SUCCESS		10590535	0					
ANR	10590634	Label	Fail_Overflow :	3320:2:123958:123971	10590535	2	True				
ANR	10590635	Identifier	Fail_Overflow		10590535	0					
ANR	10590636	ExpressionStatement	exc -> error = FT_THROW ( Code_Overflow )	3321:4:123977:124015	10590535	3	True				
ANR	10590637	AssignmentExpression	exc -> error = FT_THROW ( Code_Overflow )		10590535	0		=			
ANR	10590638	PtrMemberAccess	exc -> error		10590535	0					
ANR	10590639	Identifier	exc		10590535	0					
ANR	10590640	Identifier	error		10590535	1					
ANR	10590641	CallExpression	FT_THROW ( Code_Overflow )		10590535	1					
ANR	10590642	Callee	FT_THROW		10590535	0					
ANR	10590643	Identifier	FT_THROW		10590535	0					
ANR	10590644	ArgumentList	Code_Overflow		10590535	1					
ANR	10590645	Argument	Code_Overflow		10590535	0					
ANR	10590646	Identifier	Code_Overflow		10590535	0					
ANR	10590647	ReturnStatement	return FAILURE ;	3322:4:124021:124035	10590535	4	True				
ANR	10590648	Identifier	FAILURE		10590535	0					
ANR	10590649	ReturnType	static FT_Bool		10590535	1					
ANR	10590650	Identifier	SkipCode		10590535	2					
ANR	10590651	ParameterList	TT_ExecContext exc		10590535	3					
ANR	10590652	Parameter	TT_ExecContext exc	3300:12:123504:123522	10590535	0	True				
ANR	10590653	ParameterType	TT_ExecContext		10590535	0					
ANR	10590654	Identifier	exc		10590535	1					
ANR	10590655	CFGEntryNode	ENTRY		10590535		True				
ANR	10590656	CFGExitNode	EXIT		10590535		True				
ANR	10590657	Symbol	exc -> IP		10590535						
ANR	10590658	Symbol	SUCCESS		10590535						
ANR	10590659	Symbol	* * exc		10590535						
ANR	10590660	Symbol	* exc		10590535						
ANR	10590661	Symbol	Code_Overflow		10590535						
ANR	10590662	Symbol	* exc -> IP		10590535						
ANR	10590663	Symbol	FAILURE		10590535						
ANR	10590664	Symbol	FT_THROW		10590535						
ANR	10590665	Symbol	exc		10590535						
ANR	10590666	Symbol	exc -> code		10590535						
ANR	10590667	Symbol	opcode_length		10590535						
ANR	10590668	Symbol	exc -> codeSize		10590535						
ANR	10590669	Symbol	* exc -> code		10590535						
ANR	10590670	Symbol	exc -> length		10590535						
ANR	10590671	Symbol	* opcode_length		10590535						
ANR	10590672	Symbol	exc -> opcode		10590535						
ANR	10590673	Symbol	exc -> error		10590535						
ANR	10590674	Symbol	* exc -> opcode		10590535						
ANR	10590675	Function	Ins_IF	3332:2:124513:125089							
ANR	10590676	FunctionDef	"Ins_IF (TT_ExecContext exc , FT_Long * args)"		10590675	0					
ANR	10590677	CompoundStatement		3335:2:124591:125089	10590675	0					
ANR	10590678	IdentifierDeclStatement	FT_Int nIfs ;	3336:4:124597:124610	10590675	0	True				
ANR	10590679	IdentifierDecl	nIfs		10590675	0					
ANR	10590680	IdentifierDeclType	FT_Int		10590675	0					
ANR	10590681	Identifier	nIfs		10590675	1					
ANR	10590682	IdentifierDeclStatement	FT_Bool Out ;	3337:4:124616:124628	10590675	1	True				
ANR	10590683	IdentifierDecl	Out		10590675	0					
ANR	10590684	IdentifierDeclType	FT_Bool		10590675	0					
ANR	10590685	Identifier	Out		10590675	1					
ANR	10590686	IfStatement	if ( args [ 0 ] != 0 )		10590675	2					
ANR	10590687	Condition	args [ 0 ] != 0	3340:9:124641:124652	10590675	0	True				
ANR	10590688	EqualityExpression	args [ 0 ] != 0		10590675	0		!=			
ANR	10590689	ArrayIndexing	args [ 0 ]		10590675	0					
ANR	10590690	Identifier	args		10590675	0					
ANR	10590691	PrimaryExpression	0		10590675	1					
ANR	10590692	PrimaryExpression	0		10590675	1					
ANR	10590693	ReturnStatement	return ;	3341:6:124662:124668	10590675	1	True				
ANR	10590694	ExpressionStatement	nIfs = 1	3343:4:124675:124683	10590675	3	True				
ANR	10590695	AssignmentExpression	nIfs = 1		10590675	0		=			
ANR	10590696	Identifier	nIfs		10590675	0					
ANR	10590697	PrimaryExpression	1		10590675	1					
ANR	10590698	ExpressionStatement	Out = 0	3344:4:124689:124696	10590675	4	True				
ANR	10590699	AssignmentExpression	Out = 0		10590675	0		=			
ANR	10590700	Identifier	Out		10590675	0					
ANR	10590701	PrimaryExpression	0		10590675	1					
ANR	10590702	DoStatement	do		10590675	5					
ANR	10590703	CompoundStatement		13:4:118:118	10590675	0					
ANR	10590704	IfStatement	if ( SkipCode ( exc ) == FAILURE )		10590675	0					
ANR	10590705	Condition	SkipCode ( exc ) == FAILURE	3348:11:124723:124748	10590675	0	True				
ANR	10590706	EqualityExpression	SkipCode ( exc ) == FAILURE		10590675	0		==			
ANR	10590707	CallExpression	SkipCode ( exc )		10590675	0					
ANR	10590708	Callee	SkipCode		10590675	0					
ANR	10590709	Identifier	SkipCode		10590675	0					
ANR	10590710	ArgumentList	exc		10590675	1					
ANR	10590711	Argument	exc		10590675	0					
ANR	10590712	Identifier	exc		10590675	0					
ANR	10590713	Identifier	FAILURE		10590675	1					
ANR	10590714	ReturnStatement	return ;	3349:8:124760:124766	10590675	1	True				
ANR	10590715	SwitchStatement	switch ( exc -> opcode )		10590675	1					
ANR	10590716	Condition	exc -> opcode	3351:15:124784:124794	10590675	0	True				
ANR	10590717	PtrMemberAccess	exc -> opcode		10590675	0					
ANR	10590718	Identifier	exc		10590675	0					
ANR	10590719	Identifier	opcode		10590675	1					
ANR	10590720	CompoundStatement		18:6:212:212	10590675	1					
ANR	10590721	Label	case 0x58 :	3353:6:124812:124821	10590675	0	True				
ANR	10590722	ExpressionStatement	nIfs ++	3354:8:124845:124851	10590675	1	True				
ANR	10590723	PostIncDecOperationExpression	nIfs ++		10590675	0					
ANR	10590724	Identifier	nIfs		10590675	0					
ANR	10590725	IncDec	++		10590675	1					
ANR	10590726	BreakStatement	break ;	3355:8:124861:124866	10590675	2	True				
ANR	10590727	Label	case 0x1B :	3357:6:124875:124884	10590675	3	True				
ANR	10590728	ExpressionStatement	Out = FT_BOOL ( nIfs == 1 )	3358:8:124910:124936	10590675	4	True				
ANR	10590729	AssignmentExpression	Out = FT_BOOL ( nIfs == 1 )		10590675	0		=			
ANR	10590730	Identifier	Out		10590675	0					
ANR	10590731	CallExpression	FT_BOOL ( nIfs == 1 )		10590675	1					
ANR	10590732	Callee	FT_BOOL		10590675	0					
ANR	10590733	Identifier	FT_BOOL		10590675	0					
ANR	10590734	ArgumentList	nIfs == 1		10590675	1					
ANR	10590735	Argument	nIfs == 1		10590675	0					
ANR	10590736	EqualityExpression	nIfs == 1		10590675	0		==			
ANR	10590737	Identifier	nIfs		10590675	0					
ANR	10590738	PrimaryExpression	1		10590675	1					
ANR	10590739	BreakStatement	break ;	3359:8:124946:124951	10590675	5	True				
ANR	10590740	Label	case 0x59 :	3361:6:124960:124969	10590675	6	True				
ANR	10590741	ExpressionStatement	nIfs --	3362:8:124994:125000	10590675	7	True				
ANR	10590742	PostIncDecOperationExpression	nIfs --		10590675	0					
ANR	10590743	Identifier	nIfs		10590675	0					
ANR	10590744	IncDec	--		10590675	1					
ANR	10590745	ExpressionStatement	Out = FT_BOOL ( nIfs == 0 )	3363:8:125010:125036	10590675	8	True				
ANR	10590746	AssignmentExpression	Out = FT_BOOL ( nIfs == 0 )		10590675	0		=			
ANR	10590747	Identifier	Out		10590675	0					
ANR	10590748	CallExpression	FT_BOOL ( nIfs == 0 )		10590675	1					
ANR	10590749	Callee	FT_BOOL		10590675	0					
ANR	10590750	Identifier	FT_BOOL		10590675	0					
ANR	10590751	ArgumentList	nIfs == 0		10590675	1					
ANR	10590752	Argument	nIfs == 0		10590675	0					
ANR	10590753	EqualityExpression	nIfs == 0		10590675	0		==			
ANR	10590754	Identifier	nIfs		10590675	0					
ANR	10590755	PrimaryExpression	0		10590675	1					
ANR	10590756	BreakStatement	break ;	3364:8:125046:125051	10590675	9	True				
ANR	10590757	Condition	Out == 0	3366:14:125075:125082	10590675	1	True				
ANR	10590758	EqualityExpression	Out == 0		10590675	0		==			
ANR	10590759	Identifier	Out		10590675	0					
ANR	10590760	PrimaryExpression	0		10590675	1					
ANR	10590761	ReturnType	static void		10590675	1					
ANR	10590762	Identifier	Ins_IF		10590675	2					
ANR	10590763	ParameterList	"TT_ExecContext exc , FT_Long * args"		10590675	3					
ANR	10590764	Parameter	TT_ExecContext exc	3333:10:124535:124553	10590675	0	True				
ANR	10590765	ParameterType	TT_ExecContext		10590675	0					
ANR	10590766	Identifier	exc		10590675	1					
ANR	10590767	Parameter	FT_Long * args	3334:10:124566:124585	10590675	1	True				
ANR	10590768	ParameterType	FT_Long *		10590675	0					
ANR	10590769	Identifier	args		10590675	1					
ANR	10590770	CFGEntryNode	ENTRY		10590675		True				
ANR	10590771	CFGExitNode	EXIT		10590675		True				
ANR	10590772	Symbol	args		10590675						
ANR	10590773	Symbol	exc		10590675						
ANR	10590774	Symbol	* exc		10590675						
ANR	10590775	Symbol	nIfs		10590675						
ANR	10590776	Symbol	exc -> opcode		10590675						
ANR	10590777	Symbol	FAILURE		10590675						
ANR	10590778	Symbol	FT_BOOL		10590675						
ANR	10590779	Symbol	Out		10590675						
ANR	10590780	Symbol	* args		10590675						
ANR	10590781	Symbol	SkipCode		10590675						
ANR	10590782	Function	Ins_ELSE	3376:2:125563:125914							
ANR	10590783	FunctionDef	Ins_ELSE (TT_ExecContext exc)		10590782	0					
ANR	10590784	CompoundStatement		3378:2:125611:125914	10590782	0					
ANR	10590785	IdentifierDeclStatement	FT_Int nIfs ;	3379:4:125617:125629	10590782	0	True				
ANR	10590786	IdentifierDecl	nIfs		10590782	0					
ANR	10590787	IdentifierDeclType	FT_Int		10590782	0					
ANR	10590788	Identifier	nIfs		10590782	1					
ANR	10590789	ExpressionStatement	nIfs = 1	3382:4:125637:125645	10590782	1	True				
ANR	10590790	AssignmentExpression	nIfs = 1		10590782	0		=			
ANR	10590791	Identifier	nIfs		10590782	0					
ANR	10590792	PrimaryExpression	1		10590782	1					
ANR	10590793	DoStatement	do		10590782	2					
ANR	10590794	CompoundStatement		8:4:47:47	10590782	0					
ANR	10590795	IfStatement	if ( SkipCode ( exc ) == FAILURE )		10590782	0					
ANR	10590796	Condition	SkipCode ( exc ) == FAILURE	3386:11:125672:125697	10590782	0	True				
ANR	10590797	EqualityExpression	SkipCode ( exc ) == FAILURE		10590782	0		==			
ANR	10590798	CallExpression	SkipCode ( exc )		10590782	0					
ANR	10590799	Callee	SkipCode		10590782	0					
ANR	10590800	Identifier	SkipCode		10590782	0					
ANR	10590801	ArgumentList	exc		10590782	1					
ANR	10590802	Argument	exc		10590782	0					
ANR	10590803	Identifier	exc		10590782	0					
ANR	10590804	Identifier	FAILURE		10590782	1					
ANR	10590805	ReturnStatement	return ;	3387:8:125709:125715	10590782	1	True				
ANR	10590806	SwitchStatement	switch ( exc -> opcode )		10590782	1					
ANR	10590807	Condition	exc -> opcode	3389:15:125733:125743	10590782	0	True				
ANR	10590808	PtrMemberAccess	exc -> opcode		10590782	0					
ANR	10590809	Identifier	exc		10590782	0					
ANR	10590810	Identifier	opcode		10590782	1					
ANR	10590811	CompoundStatement		13:6:141:141	10590782	1					
ANR	10590812	Label	case 0x58 :	3391:6:125761:125770	10590782	0	True				
ANR	10590813	ExpressionStatement	nIfs ++	3392:8:125792:125798	10590782	1	True				
ANR	10590814	PostIncDecOperationExpression	nIfs ++		10590782	0					
ANR	10590815	Identifier	nIfs		10590782	0					
ANR	10590816	IncDec	++		10590782	1					
ANR	10590817	BreakStatement	break ;	3393:8:125808:125813	10590782	2	True				
ANR	10590818	Label	case 0x59 :	3395:6:125822:125831	10590782	3	True				
ANR	10590819	ExpressionStatement	nIfs --	3396:8:125854:125860	10590782	4	True				
ANR	10590820	PostIncDecOperationExpression	nIfs --		10590782	0					
ANR	10590821	Identifier	nIfs		10590782	0					
ANR	10590822	IncDec	--		10590782	1					
ANR	10590823	BreakStatement	break ;	3397:8:125870:125875	10590782	5	True				
ANR	10590824	Condition	nIfs != 0	3399:14:125899:125907	10590782	1	True				
ANR	10590825	EqualityExpression	nIfs != 0		10590782	0		!=			
ANR	10590826	Identifier	nIfs		10590782	0					
ANR	10590827	PrimaryExpression	0		10590782	1					
ANR	10590828	ReturnType	static void		10590782	1					
ANR	10590829	Identifier	Ins_ELSE		10590782	2					
ANR	10590830	ParameterList	TT_ExecContext exc		10590782	3					
ANR	10590831	Parameter	TT_ExecContext exc	3377:12:125587:125605	10590782	0	True				
ANR	10590832	ParameterType	TT_ExecContext		10590782	0					
ANR	10590833	Identifier	exc		10590782	1					
ANR	10590834	CFGEntryNode	ENTRY		10590782		True				
ANR	10590835	CFGExitNode	EXIT		10590782		True				
ANR	10590836	Symbol	exc		10590782						
ANR	10590837	Symbol	* exc		10590782						
ANR	10590838	Symbol	nIfs		10590782						
ANR	10590839	Symbol	exc -> opcode		10590782						
ANR	10590840	Symbol	FAILURE		10590782						
ANR	10590841	Symbol	SkipCode		10590782						
ANR	10590842	Function	Ins_EIF	3409:2:126388:126448							
ANR	10590843	FunctionDef	Ins_EIF ()		10590842	0					
ANR	10590844	CompoundStatement		3411:2:126420:126448	10590842	0					
ANR	10590845	ReturnType	static void		10590842	1					
ANR	10590846	Identifier	Ins_EIF		10590842	2					
ANR	10590847	ParameterList			10590842	3					
ANR	10590848	CFGEntryNode	ENTRY		10590842		True				
ANR	10590849	CFGExitNode	EXIT		10590842		True				
ANR	10590850	Function	Ins_JMPR	3422:2:126922:127600							
ANR	10590851	FunctionDef	"Ins_JMPR (TT_ExecContext exc , FT_Long * args)"		10590850	0					
ANR	10590852	CompoundStatement		3425:2:127004:127600	10590850	0					
ANR	10590853	IfStatement	if ( args [ 0 ] == 0 && exc -> args == 0 )		10590850	0					
ANR	10590854	Condition	args [ 0 ] == 0 && exc -> args == 0	3426:9:127015:127044	10590850	0	True				
ANR	10590855	AndExpression	args [ 0 ] == 0 && exc -> args == 0		10590850	0		&&			
ANR	10590856	EqualityExpression	args [ 0 ] == 0		10590850	0		==			
ANR	10590857	ArrayIndexing	args [ 0 ]		10590850	0					
ANR	10590858	Identifier	args		10590850	0					
ANR	10590859	PrimaryExpression	0		10590850	1					
ANR	10590860	PrimaryExpression	0		10590850	1					
ANR	10590861	EqualityExpression	exc -> args == 0		10590850	1		==			
ANR	10590862	PtrMemberAccess	exc -> args		10590850	0					
ANR	10590863	Identifier	exc		10590850	0					
ANR	10590864	Identifier	args		10590850	1					
ANR	10590865	PrimaryExpression	0		10590850	1					
ANR	10590866	CompoundStatement		3:4:47:47	10590850	1					
ANR	10590867	ExpressionStatement	exc -> error = FT_THROW ( Bad_Argument )	3428:6:127060:127097	10590850	0	True				
ANR	10590868	AssignmentExpression	exc -> error = FT_THROW ( Bad_Argument )		10590850	0		=			
ANR	10590869	PtrMemberAccess	exc -> error		10590850	0					
ANR	10590870	Identifier	exc		10590850	0					
ANR	10590871	Identifier	error		10590850	1					
ANR	10590872	CallExpression	FT_THROW ( Bad_Argument )		10590850	1					
ANR	10590873	Callee	FT_THROW		10590850	0					
ANR	10590874	Identifier	FT_THROW		10590850	0					
ANR	10590875	ArgumentList	Bad_Argument		10590850	1					
ANR	10590876	Argument	Bad_Argument		10590850	0					
ANR	10590877	Identifier	Bad_Argument		10590850	0					
ANR	10590878	ReturnStatement	return ;	3429:6:127105:127111	10590850	1	True				
ANR	10590879	ExpressionStatement	exc -> IP += args [ 0 ]	3432:4:127124:127142	10590850	1	True				
ANR	10590880	AssignmentExpression	exc -> IP += args [ 0 ]		10590850	0		+=			
ANR	10590881	PtrMemberAccess	exc -> IP		10590850	0					
ANR	10590882	Identifier	exc		10590850	0					
ANR	10590883	Identifier	IP		10590850	1					
ANR	10590884	ArrayIndexing	args [ 0 ]		10590850	1					
ANR	10590885	Identifier	args		10590850	0					
ANR	10590886	PrimaryExpression	0		10590850	1					
ANR	10590887	IfStatement	if ( exc -> IP < 0 || ( exc -> callTop > 0 && exc -> IP > exc -> callStack [ exc -> callTop - 1 ] . Def -> end ) )		10590850	2					
ANR	10590888	Condition	exc -> IP < 0 || ( exc -> callTop > 0 && exc -> IP > exc -> callStack [ exc -> callTop - 1 ] . Def -> end )	3433:9:127153:127341	10590850	0	True				
ANR	10590889	OrExpression	exc -> IP < 0 || ( exc -> callTop > 0 && exc -> IP > exc -> callStack [ exc -> callTop - 1 ] . Def -> end )		10590850	0		||			
ANR	10590890	RelationalExpression	exc -> IP < 0		10590850	0		<			
ANR	10590891	PtrMemberAccess	exc -> IP		10590850	0					
ANR	10590892	Identifier	exc		10590850	0					
ANR	10590893	Identifier	IP		10590850	1					
ANR	10590894	PrimaryExpression	0		10590850	1					
ANR	10590895	AndExpression	exc -> callTop > 0 && exc -> IP > exc -> callStack [ exc -> callTop - 1 ] . Def -> end		10590850	1		&&			
ANR	10590896	RelationalExpression	exc -> callTop > 0		10590850	0		>			
ANR	10590897	PtrMemberAccess	exc -> callTop		10590850	0					
ANR	10590898	Identifier	exc		10590850	0					
ANR	10590899	Identifier	callTop		10590850	1					
ANR	10590900	PrimaryExpression	0		10590850	1					
ANR	10590901	RelationalExpression	exc -> IP > exc -> callStack [ exc -> callTop - 1 ] . Def -> end		10590850	1		>			
ANR	10590902	PtrMemberAccess	exc -> IP		10590850	0					
ANR	10590903	Identifier	exc		10590850	0					
ANR	10590904	Identifier	IP		10590850	1					
ANR	10590905	PtrMemberAccess	exc -> callStack [ exc -> callTop - 1 ] . Def -> end		10590850	1					
ANR	10590906	MemberAccess	exc -> callStack [ exc -> callTop - 1 ] . Def		10590850	0					
ANR	10590907	ArrayIndexing	exc -> callStack [ exc -> callTop - 1 ]		10590850	0					
ANR	10590908	PtrMemberAccess	exc -> callStack		10590850	0					
ANR	10590909	Identifier	exc		10590850	0					
ANR	10590910	Identifier	callStack		10590850	1					
ANR	10590911	AdditiveExpression	exc -> callTop - 1		10590850	1		-			
ANR	10590912	PtrMemberAccess	exc -> callTop		10590850	0					
ANR	10590913	Identifier	exc		10590850	0					
ANR	10590914	Identifier	callTop		10590850	1					
ANR	10590915	PrimaryExpression	1		10590850	1					
ANR	10590916	Identifier	Def		10590850	1					
ANR	10590917	Identifier	end		10590850	1					
ANR	10590918	CompoundStatement		12:4:344:344	10590850	1					
ANR	10590919	ExpressionStatement	exc -> error = FT_THROW ( Bad_Argument )	3437:6:127357:127394	10590850	0	True				
ANR	10590920	AssignmentExpression	exc -> error = FT_THROW ( Bad_Argument )		10590850	0		=			
ANR	10590921	PtrMemberAccess	exc -> error		10590850	0					
ANR	10590922	Identifier	exc		10590850	0					
ANR	10590923	Identifier	error		10590850	1					
ANR	10590924	CallExpression	FT_THROW ( Bad_Argument )		10590850	1					
ANR	10590925	Callee	FT_THROW		10590850	0					
ANR	10590926	Identifier	FT_THROW		10590850	0					
ANR	10590927	ArgumentList	Bad_Argument		10590850	1					
ANR	10590928	Argument	Bad_Argument		10590850	0					
ANR	10590929	Identifier	Bad_Argument		10590850	0					
ANR	10590930	ReturnStatement	return ;	3438:6:127402:127408	10590850	1	True				
ANR	10590931	ExpressionStatement	exc -> step_ins = FALSE	3441:4:127421:127442	10590850	3	True				
ANR	10590932	AssignmentExpression	exc -> step_ins = FALSE		10590850	0		=			
ANR	10590933	PtrMemberAccess	exc -> step_ins		10590850	0					
ANR	10590934	Identifier	exc		10590850	0					
ANR	10590935	Identifier	step_ins		10590850	1					
ANR	10590936	Identifier	FALSE		10590850	1					
ANR	10590937	IfStatement	if ( args [ 0 ] < 0 )		10590850	4					
ANR	10590938	Condition	args [ 0 ] < 0	3443:9:127454:127464	10590850	0	True				
ANR	10590939	RelationalExpression	args [ 0 ] < 0		10590850	0		<			
ANR	10590940	ArrayIndexing	args [ 0 ]		10590850	0					
ANR	10590941	Identifier	args		10590850	0					
ANR	10590942	PrimaryExpression	0		10590850	1					
ANR	10590943	PrimaryExpression	0		10590850	1					
ANR	10590944	CompoundStatement		20:4:467:467	10590850	1					
ANR	10590945	IfStatement	if ( ++ exc -> neg_jump_counter > exc -> neg_jump_counter_max )		10590850	0					
ANR	10590946	Condition	++ exc -> neg_jump_counter > exc -> neg_jump_counter_max	3445:11:127485:127535	10590850	0	True				
ANR	10590947	RelationalExpression	++ exc -> neg_jump_counter > exc -> neg_jump_counter_max		10590850	0		>			
ANR	10590948	UnaryExpression	++ exc -> neg_jump_counter		10590850	0					
ANR	10590949	IncDec	++		10590850	0					
ANR	10590950	PtrMemberAccess	exc -> neg_jump_counter		10590850	1					
ANR	10590951	Identifier	exc		10590850	0					
ANR	10590952	Identifier	neg_jump_counter		10590850	1					
ANR	10590953	PtrMemberAccess	exc -> neg_jump_counter_max		10590850	1					
ANR	10590954	Identifier	exc		10590850	0					
ANR	10590955	Identifier	neg_jump_counter_max		10590850	1					
ANR	10590956	ExpressionStatement	exc -> error = FT_THROW ( Execution_Too_Long )	3446:8:127547:127590	10590850	1	True				
ANR	10590957	AssignmentExpression	exc -> error = FT_THROW ( Execution_Too_Long )		10590850	0		=			
ANR	10590958	PtrMemberAccess	exc -> error		10590850	0					
ANR	10590959	Identifier	exc		10590850	0					
ANR	10590960	Identifier	error		10590850	1					
ANR	10590961	CallExpression	FT_THROW ( Execution_Too_Long )		10590850	1					
ANR	10590962	Callee	FT_THROW		10590850	0					
ANR	10590963	Identifier	FT_THROW		10590850	0					
ANR	10590964	ArgumentList	Execution_Too_Long		10590850	1					
ANR	10590965	Argument	Execution_Too_Long		10590850	0					
ANR	10590966	Identifier	Execution_Too_Long		10590850	0					
ANR	10590967	ReturnType	static void		10590850	1					
ANR	10590968	Identifier	Ins_JMPR		10590850	2					
ANR	10590969	ParameterList	"TT_ExecContext exc , FT_Long * args"		10590850	3					
ANR	10590970	Parameter	TT_ExecContext exc	3423:12:126946:126964	10590850	0	True				
ANR	10590971	ParameterType	TT_ExecContext		10590850	0					
ANR	10590972	Identifier	exc		10590850	1					
ANR	10590973	Parameter	FT_Long * args	3424:12:126979:126998	10590850	1	True				
ANR	10590974	ParameterType	FT_Long *		10590850	0					
ANR	10590975	Identifier	args		10590850	1					
ANR	10590976	CFGEntryNode	ENTRY		10590850		True				
ANR	10590977	CFGExitNode	EXIT		10590850		True				
ANR	10590978	Symbol	* exc		10590850						
ANR	10590979	Symbol	exc -> neg_jump_counter		10590850						
ANR	10590980	Symbol	* exc -> callTop		10590850						
ANR	10590981	Symbol	* * exc -> callStack		10590850						
ANR	10590982	Symbol	* * * exc		10590850						
ANR	10590983	Symbol	* args		10590850						
ANR	10590984	Symbol	exc		10590850						
ANR	10590985	Symbol	Bad_Argument		10590850						
ANR	10590986	Symbol	exc -> error		10590850						
ANR	10590987	Symbol	* exc -> callStack		10590850						
ANR	10590988	Symbol	exc -> neg_jump_counter_max		10590850						
ANR	10590989	Symbol	Execution_Too_Long		10590850						
ANR	10590990	Symbol	exc -> IP		10590850						
ANR	10590991	Symbol	* exc -> callStack [ exc -> callTop - 1 ] . Def		10590850						
ANR	10590992	Symbol	* * exc		10590850						
ANR	10590993	Symbol	exc -> args		10590850						
ANR	10590994	Symbol	exc -> step_ins		10590850						
ANR	10590995	Symbol	FT_THROW		10590850						
ANR	10590996	Symbol	exc -> callStack [ exc -> callTop - 1 ] . Def		10590850						
ANR	10590997	Symbol	args		10590850						
ANR	10590998	Symbol	exc -> callStack [ exc -> callTop - 1 ] . Def -> end		10590850						
ANR	10590999	Symbol	exc -> callTop		10590850						
ANR	10591000	Symbol	* * exc -> callTop		10590850						
ANR	10591001	Symbol	FALSE		10590850						
ANR	10591002	Symbol	exc -> callStack		10590850						
ANR	10591003	Function	Ins_JROT	3457:2:128074:128213							
ANR	10591004	FunctionDef	"Ins_JROT (TT_ExecContext exc , FT_Long * args)"		10591003	0					
ANR	10591005	CompoundStatement		3460:2:128156:128213	10591003	0					
ANR	10591006	IfStatement	if ( args [ 1 ] != 0 )		10591003	0					
ANR	10591007	Condition	args [ 1 ] != 0	3461:9:128167:128178	10591003	0	True				
ANR	10591008	EqualityExpression	args [ 1 ] != 0		10591003	0		!=			
ANR	10591009	ArrayIndexing	args [ 1 ]		10591003	0					
ANR	10591010	Identifier	args		10591003	0					
ANR	10591011	PrimaryExpression	1		10591003	1					
ANR	10591012	PrimaryExpression	0		10591003	1					
ANR	10591013	ExpressionStatement	"Ins_JMPR ( exc , args )"	3462:6:128188:128209	10591003	1	True				
ANR	10591014	CallExpression	"Ins_JMPR ( exc , args )"		10591003	0					
ANR	10591015	Callee	Ins_JMPR		10591003	0					
ANR	10591016	Identifier	Ins_JMPR		10591003	0					
ANR	10591017	ArgumentList	exc		10591003	1					
ANR	10591018	Argument	exc		10591003	0					
ANR	10591019	Identifier	exc		10591003	0					
ANR	10591020	Argument	args		10591003	1					
ANR	10591021	Identifier	args		10591003	0					
ANR	10591022	ReturnType	static void		10591003	1					
ANR	10591023	Identifier	Ins_JROT		10591003	2					
ANR	10591024	ParameterList	"TT_ExecContext exc , FT_Long * args"		10591003	3					
ANR	10591025	Parameter	TT_ExecContext exc	3458:12:128098:128116	10591003	0	True				
ANR	10591026	ParameterType	TT_ExecContext		10591003	0					
ANR	10591027	Identifier	exc		10591003	1					
ANR	10591028	Parameter	FT_Long * args	3459:12:128131:128150	10591003	1	True				
ANR	10591029	ParameterType	FT_Long *		10591003	0					
ANR	10591030	Identifier	args		10591003	1					
ANR	10591031	CFGEntryNode	ENTRY		10591003		True				
ANR	10591032	CFGExitNode	EXIT		10591003		True				
ANR	10591033	Symbol	args		10591003						
ANR	10591034	Symbol	exc		10591003						
ANR	10591035	Symbol	* args		10591003						
ANR	10591036	Function	Ins_JROF	3472:2:128687:128826							
ANR	10591037	FunctionDef	"Ins_JROF (TT_ExecContext exc , FT_Long * args)"		10591036	0					
ANR	10591038	CompoundStatement		3475:2:128769:128826	10591036	0					
ANR	10591039	IfStatement	if ( args [ 1 ] == 0 )		10591036	0					
ANR	10591040	Condition	args [ 1 ] == 0	3476:9:128780:128791	10591036	0	True				
ANR	10591041	EqualityExpression	args [ 1 ] == 0		10591036	0		==			
ANR	10591042	ArrayIndexing	args [ 1 ]		10591036	0					
ANR	10591043	Identifier	args		10591036	0					
ANR	10591044	PrimaryExpression	1		10591036	1					
ANR	10591045	PrimaryExpression	0		10591036	1					
ANR	10591046	ExpressionStatement	"Ins_JMPR ( exc , args )"	3477:6:128801:128822	10591036	1	True				
ANR	10591047	CallExpression	"Ins_JMPR ( exc , args )"		10591036	0					
ANR	10591048	Callee	Ins_JMPR		10591036	0					
ANR	10591049	Identifier	Ins_JMPR		10591036	0					
ANR	10591050	ArgumentList	exc		10591036	1					
ANR	10591051	Argument	exc		10591036	0					
ANR	10591052	Identifier	exc		10591036	0					
ANR	10591053	Argument	args		10591036	1					
ANR	10591054	Identifier	args		10591036	0					
ANR	10591055	ReturnType	static void		10591036	1					
ANR	10591056	Identifier	Ins_JROF		10591036	2					
ANR	10591057	ParameterList	"TT_ExecContext exc , FT_Long * args"		10591036	3					
ANR	10591058	Parameter	TT_ExecContext exc	3473:12:128711:128729	10591036	0	True				
ANR	10591059	ParameterType	TT_ExecContext		10591036	0					
ANR	10591060	Identifier	exc		10591036	1					
ANR	10591061	Parameter	FT_Long * args	3474:12:128744:128763	10591036	1	True				
ANR	10591062	ParameterType	FT_Long *		10591036	0					
ANR	10591063	Identifier	args		10591036	1					
ANR	10591064	CFGEntryNode	ENTRY		10591036		True				
ANR	10591065	CFGExitNode	EXIT		10591036		True				
ANR	10591066	Symbol	args		10591036						
ANR	10591067	Symbol	exc		10591036						
ANR	10591068	Symbol	* args		10591036						
ANR	10591069	Function	Ins_FDEF	3494:2:129692:139106							
ANR	10591070	FunctionDef	"Ins_FDEF (TT_ExecContext exc , FT_Long * args)"		10591069	0					
ANR	10591071	CompoundStatement		3497:2:129774:139106	10591069	0					
ANR	10591072	IdentifierDeclStatement	FT_ULong n ;	3498:4:129780:129796	10591069	0	True				
ANR	10591073	IdentifierDecl	n		10591069	0					
ANR	10591074	IdentifierDeclType	FT_ULong		10591069	0					
ANR	10591075	Identifier	n		10591069	1					
ANR	10591076	IdentifierDeclStatement	TT_DefRecord * rec ;	3499:4:129802:129820	10591069	1	True				
ANR	10591077	IdentifierDecl	* rec		10591069	0					
ANR	10591078	IdentifierDeclType	TT_DefRecord *		10591069	0					
ANR	10591079	Identifier	rec		10591069	1					
ANR	10591080	IdentifierDeclStatement	TT_DefRecord * limit ;	3500:4:129826:129846	10591069	2	True				
ANR	10591081	IdentifierDecl	* limit		10591069	0					
ANR	10591082	IdentifierDeclType	TT_DefRecord *		10591069	0					
ANR	10591083	Identifier	limit		10591069	1					
ANR	10591084	Statement	FT_Byte	3504:4:129957:129963	10591069	3	True				
ANR	10591085	Statement	opcode_pattern	3504:15:129968:129981	10591069	4	True				
ANR	10591086	Statement	[	3504:29:129982:129982	10591069	5	True				
ANR	10591087	Statement	9	3504:30:129983:129983	10591069	6	True				
ANR	10591088	Statement	]	3504:31:129984:129984	10591069	7	True				
ANR	10591089	Statement	[	3504:32:129985:129985	10591069	8	True				
ANR	10591090	Statement	12	3504:33:129986:129987	10591069	9	True				
ANR	10591091	Statement	]	3504:35:129988:129988	10591069	10	True				
ANR	10591092	Statement	=	3504:37:129990:129990	10591069	11	True				
ANR	10591093	CompoundStatement		8:39:217:217	10591069	12					
ANR	10591094	CompoundStatement		10:17:286:286	10591069	0					
ANR	10591095	Statement	0x4B	3507:19:130082:130085	10591069	0	True				
ANR	10591096	Statement	","	3507:23:130086:130086	10591069	1	True				
ANR	10591097	Statement	0x53	3508:19:130121:130124	10591069	2	True				
ANR	10591098	Statement	","	3508:23:130125:130125	10591069	3	True				
ANR	10591099	Statement	0x23	3509:19:130160:130163	10591069	4	True				
ANR	10591100	Statement	","	3509:23:130164:130164	10591069	5	True				
ANR	10591101	Statement	0x4B	3510:19:130199:130202	10591069	6	True				
ANR	10591102	Statement	","	3510:23:130203:130203	10591069	7	True				
ANR	10591103	Statement	0x51	3511:19:130238:130241	10591069	8	True				
ANR	10591104	Statement	","	3511:23:130242:130242	10591069	9	True				
ANR	10591105	Statement	0x5A	3512:19:130277:130280	10591069	10	True				
ANR	10591106	Statement	","	3512:23:130281:130281	10591069	11	True				
ANR	10591107	Statement	0x58	3513:19:130316:130319	10591069	12	True				
ANR	10591108	Statement	","	3513:23:130320:130320	10591069	13	True				
ANR	10591109	Statement	0x38	3514:19:130355:130358	10591069	14	True				
ANR	10591110	Statement	","	3514:23:130359:130359	10591069	15	True				
ANR	10591111	Statement	0x1B	3515:19:130394:130397	10591069	16	True				
ANR	10591112	Statement	","	3515:23:130398:130398	10591069	17	True				
ANR	10591113	Statement	0x21	3516:19:130433:130436	10591069	18	True				
ANR	10591114	Statement	","	3516:23:130437:130437	10591069	19	True				
ANR	10591115	Statement	0x21	3517:19:130472:130475	10591069	20	True				
ANR	10591116	Statement	","	3517:23:130476:130476	10591069	21	True				
ANR	10591117	Statement	0x59	3518:19:130511:130514	10591069	22	True				
ANR	10591118	Statement	","	3519:18:130549:130549	10591069	1	True				
ANR	10591119	CompoundStatement		25:17:843:843	10591069	2					
ANR	10591120	Statement	0x4B	3522:19:130639:130642	10591069	0	True				
ANR	10591121	Statement	","	3522:23:130643:130643	10591069	1	True				
ANR	10591122	Statement	0x54	3523:19:130678:130681	10591069	2	True				
ANR	10591123	Statement	","	3523:23:130682:130682	10591069	3	True				
ANR	10591124	Statement	0x58	3524:19:130717:130720	10591069	4	True				
ANR	10591125	Statement	","	3524:23:130721:130721	10591069	5	True				
ANR	10591126	Statement	0x38	3525:19:130756:130759	10591069	6	True				
ANR	10591127	Statement	","	3525:23:130760:130760	10591069	7	True				
ANR	10591128	Statement	0x1B	3526:19:130795:130798	10591069	8	True				
ANR	10591129	Statement	","	3526:23:130799:130799	10591069	9	True				
ANR	10591130	Statement	0x21	3527:19:130834:130837	10591069	10	True				
ANR	10591131	Statement	","	3527:23:130838:130838	10591069	11	True				
ANR	10591132	Statement	0x21	3528:19:130873:130876	10591069	12	True				
ANR	10591133	Statement	","	3528:23:130877:130877	10591069	13	True				
ANR	10591134	Statement	0x59	3529:19:130912:130915	10591069	14	True				
ANR	10591135	Statement	","	3530:18:130950:130950	10591069	3	True				
ANR	10591136	CompoundStatement		36:17:1245:1245	10591069	4					
ANR	10591137	Statement	0x20	3533:19:131041:131044	10591069	0	True				
ANR	10591138	Statement	","	3533:23:131045:131045	10591069	1	True				
ANR	10591139	Statement	0x20	3534:19:131080:131083	10591069	2	True				
ANR	10591140	Statement	","	3534:23:131084:131084	10591069	3	True				
ANR	10591141	Statement	0xB0	3535:19:131119:131122	10591069	4	True				
ANR	10591142	Statement	","	3535:23:131123:131123	10591069	5	True				
ANR	10591143	Statement	0x60	3537:19:131197:131200	10591069	6	True				
ANR	10591144	Statement	","	3537:23:131201:131201	10591069	7	True				
ANR	10591145	Statement	0x46	3538:19:131236:131239	10591069	8	True				
ANR	10591146	Statement	","	3538:23:131240:131240	10591069	9	True				
ANR	10591147	Statement	0xB0	3539:19:131275:131278	10591069	10	True				
ANR	10591148	Statement	","	3539:23:131279:131279	10591069	11	True				
ANR	10591149	Statement	0x23	3541:19:131353:131356	10591069	12	True				
ANR	10591150	Statement	","	3541:23:131357:131357	10591069	13	True				
ANR	10591151	Statement	0x42	3542:19:131392:131395	10591069	14	True				
ANR	10591152	Statement	","	3543:18:131430:131430	10591069	5	True				
ANR	10591153	CompoundStatement		49:17:1723:1723	10591069	6					
ANR	10591154	Statement	0x45	3546:19:131519:131522	10591069	0	True				
ANR	10591155	Statement	","	3546:23:131523:131523	10591069	1	True				
ANR	10591156	Statement	0x23	3547:19:131558:131561	10591069	2	True				
ANR	10591157	Statement	","	3547:23:131562:131562	10591069	3	True				
ANR	10591158	Statement	0x46	3548:19:131597:131600	10591069	4	True				
ANR	10591159	Statement	","	3548:23:131601:131601	10591069	5	True				
ANR	10591160	Statement	0x60	3549:19:131636:131639	10591069	6	True				
ANR	10591161	Statement	","	3549:23:131640:131640	10591069	7	True				
ANR	10591162	Statement	0x20	3550:19:131675:131678	10591069	8	True				
ANR	10591163	Statement	","	3550:23:131679:131679	10591069	9	True				
ANR	10591164	Statement	0xB0	3551:19:131714:131717	10591069	10	True				
ANR	10591165	Statement	","	3553:18:131791:131791	10591069	7	True				
ANR	10591166	CompoundStatement		59:17:2088:2088	10591069	8					
ANR	10591167	Statement	0x20	3556:19:131884:131887	10591069	0	True				
ANR	10591168	Statement	","	3556:23:131888:131888	10591069	1	True				
ANR	10591169	Statement	0x64	3557:19:131923:131926	10591069	2	True				
ANR	10591170	Statement	","	3557:23:131927:131927	10591069	3	True				
ANR	10591171	Statement	0xB0	3558:19:131962:131965	10591069	4	True				
ANR	10591172	Statement	","	3558:23:131966:131966	10591069	5	True				
ANR	10591173	Statement	0x60	3560:19:132040:132043	10591069	6	True				
ANR	10591174	Statement	","	3560:23:132044:132044	10591069	7	True				
ANR	10591175	Statement	0x66	3561:19:132079:132082	10591069	8	True				
ANR	10591176	Statement	","	3561:23:132083:132083	10591069	9	True				
ANR	10591177	Statement	0x23	3562:19:132118:132121	10591069	10	True				
ANR	10591178	Statement	","	3562:23:132122:132122	10591069	11	True				
ANR	10591179	Statement	0xB0	3563:19:132157:132160	10591069	12	True				
ANR	10591180	Statement	","	3564:18:132195:132195	10591069	9	True				
ANR	10591181	CompoundStatement		70:17:2484:2484	10591069	10					
ANR	10591182	Statement	0x01	3567:19:132280:132283	10591069	0	True				
ANR	10591183	Statement	","	3567:23:132284:132284	10591069	1	True				
ANR	10591184	Statement	0xB0	3568:19:132319:132322	10591069	2	True				
ANR	10591185	Statement	","	3568:23:132323:132323	10591069	3	True				
ANR	10591186	Statement	0x43	3570:19:132397:132400	10591069	4	True				
ANR	10591187	Statement	","	3570:23:132401:132401	10591069	5	True				
ANR	10591188	Statement	0x58	3571:19:132436:132439	10591069	6	True				
ANR	10591189	Statement	","	3572:18:132474:132474	10591069	11	True				
ANR	10591190	CompoundStatement		78:17:2763:2763	10591069	12					
ANR	10591191	Statement	0x01	3575:19:132559:132562	10591069	0	True				
ANR	10591192	Statement	","	3575:23:132563:132563	10591069	1	True				
ANR	10591193	Statement	0x18	3576:19:132598:132601	10591069	2	True				
ANR	10591194	Statement	","	3576:23:132602:132602	10591069	3	True				
ANR	10591195	Statement	0xB0	3577:19:132637:132640	10591069	4	True				
ANR	10591196	Statement	","	3577:23:132641:132641	10591069	5	True				
ANR	10591197	Statement	0x43	3579:19:132715:132718	10591069	6	True				
ANR	10591198	Statement	","	3579:23:132719:132719	10591069	7	True				
ANR	10591199	Statement	0x58	3580:19:132754:132757	10591069	8	True				
ANR	10591200	Statement	","	3581:18:132792:132792	10591069	13	True				
ANR	10591201	CompoundStatement		87:17:3096:3096	10591069	14					
ANR	10591202	Statement	0x01	3584:19:132892:132895	10591069	0	True				
ANR	10591203	Statement	","	3584:23:132896:132896	10591069	1	True				
ANR	10591204	Statement	0x20	3585:19:132931:132934	10591069	2	True				
ANR	10591205	Statement	","	3585:23:132935:132935	10591069	3	True				
ANR	10591206	Statement	0xB0	3586:19:132970:132973	10591069	4	True				
ANR	10591207	Statement	","	3586:23:132974:132974	10591069	5	True				
ANR	10591208	Statement	0x25	3588:19:133048:133051	10591069	6	True				
ANR	10591209	Statement	","	3588:23:133052:133052	10591069	7	True				
ANR	10591210	Statement	","	3589:18:133086:133086	10591069	15	True				
ANR	10591211	CompoundStatement		95:17:3375:3375	10591069	16					
ANR	10591212	Statement	0x06	3592:19:133171:133174	10591069	0	True				
ANR	10591213	Statement	","	3592:23:133175:133175	10591069	1	True				
ANR	10591214	Statement	0x7D	3593:19:133210:133213	10591069	2	True				
ANR	10591215	Statement	","	3593:23:133214:133214	10591069	3	True				
ANR	10591216	Statement	","	3594:18:133248:133248	10591069	17	True				
ANR	10591217	ExpressionStatement		3595:16:133266:133266	10591069	13	True				
ANR	10591218	IdentifierDeclStatement	FT_UShort opcode_patterns = 9 ;	3596:4:133272:133304	10591069	14	True				
ANR	10591219	IdentifierDecl	opcode_patterns = 9		10591069	0					
ANR	10591220	IdentifierDeclType	FT_UShort		10591069	0					
ANR	10591221	Identifier	opcode_patterns		10591069	1					
ANR	10591222	AssignmentExpression	opcode_patterns = 9		10591069	2		=			
ANR	10591223	Identifier	opcode_patterns		10591069	0					
ANR	10591224	PrimaryExpression	9		10591069	1					
ANR	10591225	IdentifierDeclStatement	"FT_UShort opcode_pointer [ 9 ] = { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 } ;"	3597:4:133310:133371	10591069	15	True				
ANR	10591226	IdentifierDecl	"opcode_pointer [ 9 ] = { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 }"		10591069	0					
ANR	10591227	IdentifierDeclType	FT_UShort [ 9 ]		10591069	0					
ANR	10591228	Identifier	opcode_pointer		10591069	1					
ANR	10591229	PrimaryExpression	9		10591069	2					
ANR	10591230	AssignmentExpression	"opcode_pointer [ 9 ] = { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 }"		10591069	3		=			
ANR	10591231	Identifier	opcode_pointer		10591069	0					
ANR	10591232	InitializerList	0		10591069	1					
ANR	10591233	PrimaryExpression	0		10591069	0					
ANR	10591234	PrimaryExpression	0		10591069	1					
ANR	10591235	PrimaryExpression	0		10591069	2					
ANR	10591236	PrimaryExpression	0		10591069	3					
ANR	10591237	PrimaryExpression	0		10591069	4					
ANR	10591238	PrimaryExpression	0		10591069	5					
ANR	10591239	PrimaryExpression	0		10591069	6					
ANR	10591240	PrimaryExpression	0		10591069	7					
ANR	10591241	PrimaryExpression	0		10591069	8					
ANR	10591242	IdentifierDeclStatement	"FT_UShort opcode_size [ 9 ] = { 12 , 8 , 8 , 6 , 7 , 4 , 5 , 4 , 2 } ;"	3598:4:133377:133438	10591069	16	True				
ANR	10591243	IdentifierDecl	"opcode_size [ 9 ] = { 12 , 8 , 8 , 6 , 7 , 4 , 5 , 4 , 2 }"		10591069	0					
ANR	10591244	IdentifierDeclType	FT_UShort [ 9 ]		10591069	0					
ANR	10591245	Identifier	opcode_size		10591069	1					
ANR	10591246	PrimaryExpression	9		10591069	2					
ANR	10591247	AssignmentExpression	"opcode_size [ 9 ] = { 12 , 8 , 8 , 6 , 7 , 4 , 5 , 4 , 2 }"		10591069	3		=			
ANR	10591248	Identifier	opcode_size		10591069	0					
ANR	10591249	InitializerList	12		10591069	1					
ANR	10591250	PrimaryExpression	12		10591069	0					
ANR	10591251	PrimaryExpression	8		10591069	1					
ANR	10591252	PrimaryExpression	8		10591069	2					
ANR	10591253	PrimaryExpression	6		10591069	3					
ANR	10591254	PrimaryExpression	7		10591069	4					
ANR	10591255	PrimaryExpression	4		10591069	5					
ANR	10591256	PrimaryExpression	5		10591069	6					
ANR	10591257	PrimaryExpression	4		10591069	7					
ANR	10591258	PrimaryExpression	2		10591069	8					
ANR	10591259	IdentifierDeclStatement	FT_UShort i ;	3599:4:133444:133456	10591069	17	True				
ANR	10591260	IdentifierDecl	i		10591069	0					
ANR	10591261	IdentifierDeclType	FT_UShort		10591069	0					
ANR	10591262	Identifier	i		10591069	1					
ANR	10591263	IfStatement	if ( exc -> curRange == tt_coderange_glyph )		10591069	18					
ANR	10591264	Condition	exc -> curRange == tt_coderange_glyph	3604:9:133572:133606	10591069	0	True				
ANR	10591265	EqualityExpression	exc -> curRange == tt_coderange_glyph		10591069	0		==			
ANR	10591266	PtrMemberAccess	exc -> curRange		10591069	0					
ANR	10591267	Identifier	exc		10591069	0					
ANR	10591268	Identifier	curRange		10591069	1					
ANR	10591269	Identifier	tt_coderange_glyph		10591069	1					
ANR	10591270	CompoundStatement		109:4:3839:3839	10591069	1					
ANR	10591271	ExpressionStatement	exc -> error = FT_THROW ( DEF_In_Glyf_Bytecode )	3606:6:133622:133667	10591069	0	True				
ANR	10591272	AssignmentExpression	exc -> error = FT_THROW ( DEF_In_Glyf_Bytecode )		10591069	0		=			
ANR	10591273	PtrMemberAccess	exc -> error		10591069	0					
ANR	10591274	Identifier	exc		10591069	0					
ANR	10591275	Identifier	error		10591069	1					
ANR	10591276	CallExpression	FT_THROW ( DEF_In_Glyf_Bytecode )		10591069	1					
ANR	10591277	Callee	FT_THROW		10591069	0					
ANR	10591278	Identifier	FT_THROW		10591069	0					
ANR	10591279	ArgumentList	DEF_In_Glyf_Bytecode		10591069	1					
ANR	10591280	Argument	DEF_In_Glyf_Bytecode		10591069	0					
ANR	10591281	Identifier	DEF_In_Glyf_Bytecode		10591069	0					
ANR	10591282	ReturnStatement	return ;	3607:6:133675:133681	10591069	1	True				
ANR	10591283	ExpressionStatement	rec = exc -> FDefs	3613:4:133835:133853	10591069	19	True				
ANR	10591284	AssignmentExpression	rec = exc -> FDefs		10591069	0		=			
ANR	10591285	Identifier	rec		10591069	0					
ANR	10591286	PtrMemberAccess	exc -> FDefs		10591069	1					
ANR	10591287	Identifier	exc		10591069	0					
ANR	10591288	Identifier	FDefs		10591069	1					
ANR	10591289	ExpressionStatement	limit = rec + exc -> numFDefs	3614:4:133859:133886	10591069	20	True				
ANR	10591290	AssignmentExpression	limit = rec + exc -> numFDefs		10591069	0		=			
ANR	10591291	Identifier	limit		10591069	0					
ANR	10591292	AdditiveExpression	rec + exc -> numFDefs		10591069	1		+			
ANR	10591293	Identifier	rec		10591069	0					
ANR	10591294	PtrMemberAccess	exc -> numFDefs		10591069	1					
ANR	10591295	Identifier	exc		10591069	0					
ANR	10591296	Identifier	numFDefs		10591069	1					
ANR	10591297	ExpressionStatement	n = ( FT_ULong ) args [ 0 ]	3615:4:133892:133917	10591069	21	True				
ANR	10591298	AssignmentExpression	n = ( FT_ULong ) args [ 0 ]		10591069	0		=			
ANR	10591299	Identifier	n		10591069	0					
ANR	10591300	CastExpression	( FT_ULong ) args [ 0 ]		10591069	1					
ANR	10591301	CastTarget	FT_ULong		10591069	0					
ANR	10591302	ArrayIndexing	args [ 0 ]		10591069	1					
ANR	10591303	Identifier	args		10591069	0					
ANR	10591304	PrimaryExpression	0		10591069	1					
ANR	10591305	ForStatement	for ( ; rec < limit ; rec ++ )		10591069	22					
ANR	10591306	Condition	rec < limit	3617:12:133932:133942	10591069	0	True				
ANR	10591307	RelationalExpression	rec < limit		10591069	0		<			
ANR	10591308	Identifier	rec		10591069	0					
ANR	10591309	Identifier	limit		10591069	1					
ANR	10591310	PostIncDecOperationExpression	rec ++	3617:25:133945:133949	10591069	1	True				
ANR	10591311	Identifier	rec		10591069	0					
ANR	10591312	IncDec	++		10591069	1					
ANR	10591313	CompoundStatement		122:4:4182:4182	10591069	2					
ANR	10591314	IfStatement	if ( rec -> opc == n )		10591069	0					
ANR	10591315	Condition	rec -> opc == n	3619:11:133970:133982	10591069	0	True				
ANR	10591316	EqualityExpression	rec -> opc == n		10591069	0		==			
ANR	10591317	PtrMemberAccess	rec -> opc		10591069	0					
ANR	10591318	Identifier	rec		10591069	0					
ANR	10591319	Identifier	opc		10591069	1					
ANR	10591320	Identifier	n		10591069	1					
ANR	10591321	BreakStatement	break ;	3620:8:133994:133999	10591069	1	True				
ANR	10591322	IfStatement	if ( rec == limit )		10591069	23					
ANR	10591323	Condition	rec == limit	3623:9:134017:134028	10591069	0	True				
ANR	10591324	EqualityExpression	rec == limit		10591069	0		==			
ANR	10591325	Identifier	rec		10591069	0					
ANR	10591326	Identifier	limit		10591069	1					
ANR	10591327	CompoundStatement		128:4:4261:4261	10591069	1					
ANR	10591328	IfStatement	if ( exc -> numFDefs >= exc -> maxFDefs )		10591069	0					
ANR	10591329	Condition	exc -> numFDefs >= exc -> maxFDefs	3626:11:134111:134140	10591069	0	True				
ANR	10591330	RelationalExpression	exc -> numFDefs >= exc -> maxFDefs		10591069	0		>=			
ANR	10591331	PtrMemberAccess	exc -> numFDefs		10591069	0					
ANR	10591332	Identifier	exc		10591069	0					
ANR	10591333	Identifier	numFDefs		10591069	1					
ANR	10591334	PtrMemberAccess	exc -> maxFDefs		10591069	1					
ANR	10591335	Identifier	exc		10591069	0					
ANR	10591336	Identifier	maxFDefs		10591069	1					
ANR	10591337	CompoundStatement		131:6:4375:4375	10591069	1					
ANR	10591338	ExpressionStatement	exc -> error = FT_THROW ( Too_Many_Function_Defs )	3628:8:134160:134207	10591069	0	True				
ANR	10591339	AssignmentExpression	exc -> error = FT_THROW ( Too_Many_Function_Defs )		10591069	0		=			
ANR	10591340	PtrMemberAccess	exc -> error		10591069	0					
ANR	10591341	Identifier	exc		10591069	0					
ANR	10591342	Identifier	error		10591069	1					
ANR	10591343	CallExpression	FT_THROW ( Too_Many_Function_Defs )		10591069	1					
ANR	10591344	Callee	FT_THROW		10591069	0					
ANR	10591345	Identifier	FT_THROW		10591069	0					
ANR	10591346	ArgumentList	Too_Many_Function_Defs		10591069	1					
ANR	10591347	Argument	Too_Many_Function_Defs		10591069	0					
ANR	10591348	Identifier	Too_Many_Function_Defs		10591069	0					
ANR	10591349	ReturnStatement	return ;	3629:8:134217:134223	10591069	1	True				
ANR	10591350	ExpressionStatement	exc -> numFDefs ++	3631:6:134239:134254	10591069	1	True				
ANR	10591351	PostIncDecOperationExpression	exc -> numFDefs ++		10591069	0					
ANR	10591352	PtrMemberAccess	exc -> numFDefs		10591069	0					
ANR	10591353	Identifier	exc		10591069	0					
ANR	10591354	Identifier	numFDefs		10591069	1					
ANR	10591355	IncDec	++		10591069	1					
ANR	10591356	IfStatement	if ( n > 0xFFFFU )		10591069	24					
ANR	10591357	Condition	n > 0xFFFFU	3636:9:134384:134394	10591069	0	True				
ANR	10591358	RelationalExpression	n > 0xFFFFU		10591069	0		>			
ANR	10591359	Identifier	n		10591069	0					
ANR	10591360	PrimaryExpression	0xFFFFU		10591069	1					
ANR	10591361	CompoundStatement		141:4:4627:4627	10591069	1					
ANR	10591362	ExpressionStatement	exc -> error = FT_THROW ( Too_Many_Function_Defs )	3638:6:134410:134457	10591069	0	True				
ANR	10591363	AssignmentExpression	exc -> error = FT_THROW ( Too_Many_Function_Defs )		10591069	0		=			
ANR	10591364	PtrMemberAccess	exc -> error		10591069	0					
ANR	10591365	Identifier	exc		10591069	0					
ANR	10591366	Identifier	error		10591069	1					
ANR	10591367	CallExpression	FT_THROW ( Too_Many_Function_Defs )		10591069	1					
ANR	10591368	Callee	FT_THROW		10591069	0					
ANR	10591369	Identifier	FT_THROW		10591069	0					
ANR	10591370	ArgumentList	Too_Many_Function_Defs		10591069	1					
ANR	10591371	Argument	Too_Many_Function_Defs		10591069	0					
ANR	10591372	Identifier	Too_Many_Function_Defs		10591069	0					
ANR	10591373	ReturnStatement	return ;	3639:6:134465:134471	10591069	1	True				
ANR	10591374	ExpressionStatement	rec -> range = exc -> curRange	3642:4:134484:134519	10591069	25	True				
ANR	10591375	AssignmentExpression	rec -> range = exc -> curRange		10591069	0		=			
ANR	10591376	PtrMemberAccess	rec -> range		10591069	0					
ANR	10591377	Identifier	rec		10591069	0					
ANR	10591378	Identifier	range		10591069	1					
ANR	10591379	PtrMemberAccess	exc -> curRange		10591069	1					
ANR	10591380	Identifier	exc		10591069	0					
ANR	10591381	Identifier	curRange		10591069	1					
ANR	10591382	ExpressionStatement	rec -> opc = ( FT_UInt16 ) n	3643:4:134525:134559	10591069	26	True				
ANR	10591383	AssignmentExpression	rec -> opc = ( FT_UInt16 ) n		10591069	0		=			
ANR	10591384	PtrMemberAccess	rec -> opc		10591069	0					
ANR	10591385	Identifier	rec		10591069	0					
ANR	10591386	Identifier	opc		10591069	1					
ANR	10591387	CastExpression	( FT_UInt16 ) n		10591069	1					
ANR	10591388	CastTarget	FT_UInt16		10591069	0					
ANR	10591389	Identifier	n		10591069	1					
ANR	10591390	ExpressionStatement	rec -> start = exc -> IP + 1	3644:4:134565:134598	10591069	27	True				
ANR	10591391	AssignmentExpression	rec -> start = exc -> IP + 1		10591069	0		=			
ANR	10591392	PtrMemberAccess	rec -> start		10591069	0					
ANR	10591393	Identifier	rec		10591069	0					
ANR	10591394	Identifier	start		10591069	1					
ANR	10591395	AdditiveExpression	exc -> IP + 1		10591069	1		+			
ANR	10591396	PtrMemberAccess	exc -> IP		10591069	0					
ANR	10591397	Identifier	exc		10591069	0					
ANR	10591398	Identifier	IP		10591069	1					
ANR	10591399	PrimaryExpression	1		10591069	1					
ANR	10591400	ExpressionStatement	rec -> active = TRUE	3645:4:134604:134630	10591069	28	True				
ANR	10591401	AssignmentExpression	rec -> active = TRUE		10591069	0		=			
ANR	10591402	PtrMemberAccess	rec -> active		10591069	0					
ANR	10591403	Identifier	rec		10591069	0					
ANR	10591404	Identifier	active		10591069	1					
ANR	10591405	Identifier	TRUE		10591069	1					
ANR	10591406	ExpressionStatement	rec -> inline_delta = FALSE	3646:4:134636:134663	10591069	29	True				
ANR	10591407	AssignmentExpression	rec -> inline_delta = FALSE		10591069	0		=			
ANR	10591408	PtrMemberAccess	rec -> inline_delta		10591069	0					
ANR	10591409	Identifier	rec		10591069	0					
ANR	10591410	Identifier	inline_delta		10591069	1					
ANR	10591411	Identifier	FALSE		10591069	1					
ANR	10591412	ExpressionStatement	rec -> sph_fdef_flags = 0x0000	3647:4:134669:134697	10591069	30	True				
ANR	10591413	AssignmentExpression	rec -> sph_fdef_flags = 0x0000		10591069	0		=			
ANR	10591414	PtrMemberAccess	rec -> sph_fdef_flags		10591069	0					
ANR	10591415	Identifier	rec		10591069	0					
ANR	10591416	Identifier	sph_fdef_flags		10591069	1					
ANR	10591417	PrimaryExpression	0x0000		10591069	1					
ANR	10591418	IfStatement	if ( n > exc -> maxFunc )		10591069	31					
ANR	10591419	Condition	n > exc -> maxFunc	3649:9:134709:134724	10591069	0	True				
ANR	10591420	RelationalExpression	n > exc -> maxFunc		10591069	0		>			
ANR	10591421	Identifier	n		10591069	0					
ANR	10591422	PtrMemberAccess	exc -> maxFunc		10591069	1					
ANR	10591423	Identifier	exc		10591069	0					
ANR	10591424	Identifier	maxFunc		10591069	1					
ANR	10591425	ExpressionStatement	exc -> maxFunc = ( FT_UInt16 ) n	3650:6:134734:134761	10591069	1	True				
ANR	10591426	AssignmentExpression	exc -> maxFunc = ( FT_UInt16 ) n		10591069	0		=			
ANR	10591427	PtrMemberAccess	exc -> maxFunc		10591069	0					
ANR	10591428	Identifier	exc		10591069	0					
ANR	10591429	Identifier	maxFunc		10591069	1					
ANR	10591430	CastExpression	( FT_UInt16 ) n		10591069	1					
ANR	10591431	CastTarget	FT_UInt16		10591069	0					
ANR	10591432	Identifier	n		10591069	1					
ANR	10591433	IfStatement	if ( n >= 64 && n <= 66 )		10591069	32					
ANR	10591434	Condition	n >= 64 && n <= 66	3655:9:134943:134960	10591069	0	True				
ANR	10591435	AndExpression	n >= 64 && n <= 66		10591069	0		&&			
ANR	10591436	RelationalExpression	n >= 64		10591069	0		>=			
ANR	10591437	Identifier	n		10591069	0					
ANR	10591438	PrimaryExpression	64		10591069	1					
ANR	10591439	RelationalExpression	n <= 66		10591069	1		<=			
ANR	10591440	Identifier	n		10591069	0					
ANR	10591441	PrimaryExpression	66		10591069	1					
ANR	10591442	ExpressionStatement	rec -> sph_fdef_flags |= SPH_FDEF_TYPEMAN_STROKES	3656:6:134970:135017	10591069	1	True				
ANR	10591443	AssignmentExpression	rec -> sph_fdef_flags |= SPH_FDEF_TYPEMAN_STROKES		10591069	0		|=			
ANR	10591444	PtrMemberAccess	rec -> sph_fdef_flags		10591069	0					
ANR	10591445	Identifier	rec		10591069	0					
ANR	10591446	Identifier	sph_fdef_flags		10591069	1					
ANR	10591447	Identifier	SPH_FDEF_TYPEMAN_STROKES		10591069	1					
ANR	10591448	WhileStatement	while ( SkipCode ( exc ) == SUCCESS )		10591069	33					
ANR	10591449	Condition	SkipCode ( exc ) == SUCCESS	3662:12:135140:135165	10591069	0	True				
ANR	10591450	EqualityExpression	SkipCode ( exc ) == SUCCESS		10591069	0		==			
ANR	10591451	CallExpression	SkipCode ( exc )		10591069	0					
ANR	10591452	Callee	SkipCode		10591069	0					
ANR	10591453	Identifier	SkipCode		10591069	0					
ANR	10591454	ArgumentList	exc		10591069	1					
ANR	10591455	Argument	exc		10591069	0					
ANR	10591456	Identifier	exc		10591069	0					
ANR	10591457	Identifier	SUCCESS		10591069	1					
ANR	10591458	CompoundStatement		167:4:5398:5398	10591069	1					
ANR	10591459	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY )		10591069	0					
ANR	10591460	Condition	SUBPIXEL_HINTING_INFINALITY	3667:11:135234:135260	10591069	0	True				
ANR	10591461	Identifier	SUBPIXEL_HINTING_INFINALITY		10591069	0					
ANR	10591462	CompoundStatement		172:6:5495:5495	10591069	1					
ANR	10591463	ForStatement	for ( i = 0 ; i < opcode_patterns ; i ++ )		10591069	0					
ANR	10591464	ForInit	i = 0 ;	3669:14:135286:135291	10591069	0	True				
ANR	10591465	AssignmentExpression	i = 0		10591069	0		=			
ANR	10591466	Identifier	i		10591069	0					
ANR	10591467	PrimaryExpression	0		10591069	1					
ANR	10591468	Condition	i < opcode_patterns	3669:21:135293:135311	10591069	1	True				
ANR	10591469	RelationalExpression	i < opcode_patterns		10591069	0		<			
ANR	10591470	Identifier	i		10591069	0					
ANR	10591471	Identifier	opcode_patterns		10591069	1					
ANR	10591472	PostIncDecOperationExpression	i ++	3669:42:135314:135316	10591069	2	True				
ANR	10591473	Identifier	i		10591069	0					
ANR	10591474	IncDec	++		10591069	1					
ANR	10591475	CompoundStatement		174:8:5553:5553	10591069	3					
ANR	10591476	IfStatement	if ( opcode_pointer [ i ] < opcode_size [ i ] && exc -> opcode == opcode_pattern [ i ] [ opcode_pointer [ i ] ] )		10591069	0					
ANR	10591477	Condition	opcode_pointer [ i ] < opcode_size [ i ] && exc -> opcode == opcode_pattern [ i ] [ opcode_pointer [ i ] ]	3671:15:135345:135465	10591069	0	True				
ANR	10591478	AndExpression	opcode_pointer [ i ] < opcode_size [ i ] && exc -> opcode == opcode_pattern [ i ] [ opcode_pointer [ i ] ]		10591069	0		&&			
ANR	10591479	RelationalExpression	opcode_pointer [ i ] < opcode_size [ i ]		10591069	0		<			
ANR	10591480	ArrayIndexing	opcode_pointer [ i ]		10591069	0					
ANR	10591481	Identifier	opcode_pointer		10591069	0					
ANR	10591482	Identifier	i		10591069	1					
ANR	10591483	ArrayIndexing	opcode_size [ i ]		10591069	1					
ANR	10591484	Identifier	opcode_size		10591069	0					
ANR	10591485	Identifier	i		10591069	1					
ANR	10591486	EqualityExpression	exc -> opcode == opcode_pattern [ i ] [ opcode_pointer [ i ] ]		10591069	1		==			
ANR	10591487	PtrMemberAccess	exc -> opcode		10591069	0					
ANR	10591488	Identifier	exc		10591069	0					
ANR	10591489	Identifier	opcode		10591069	1					
ANR	10591490	ArrayIndexing	opcode_pattern [ i ] [ opcode_pointer [ i ] ]		10591069	1					
ANR	10591491	ArrayIndexing	opcode_pattern [ i ]		10591069	0					
ANR	10591492	Identifier	opcode_pattern		10591069	0					
ANR	10591493	Identifier	i		10591069	1					
ANR	10591494	ArrayIndexing	opcode_pointer [ i ]		10591069	1					
ANR	10591495	Identifier	opcode_pointer		10591069	0					
ANR	10591496	Identifier	i		10591069	1					
ANR	10591497	CompoundStatement		177:10:5704:5704	10591069	1					
ANR	10591498	ExpressionStatement	opcode_pointer [ i ] += 1	3674:12:135493:135515	10591069	0	True				
ANR	10591499	AssignmentExpression	opcode_pointer [ i ] += 1		10591069	0		+=			
ANR	10591500	ArrayIndexing	opcode_pointer [ i ]		10591069	0					
ANR	10591501	Identifier	opcode_pointer		10591069	0					
ANR	10591502	Identifier	i		10591069	1					
ANR	10591503	PrimaryExpression	1		10591069	1					
ANR	10591504	IfStatement	if ( opcode_pointer [ i ] == opcode_size [ i ] )		10591069	1					
ANR	10591505	Condition	opcode_pointer [ i ] == opcode_size [ i ]	3676:17:135535:135569	10591069	0	True				
ANR	10591506	EqualityExpression	opcode_pointer [ i ] == opcode_size [ i ]		10591069	0		==			
ANR	10591507	ArrayIndexing	opcode_pointer [ i ]		10591069	0					
ANR	10591508	Identifier	opcode_pointer		10591069	0					
ANR	10591509	Identifier	i		10591069	1					
ANR	10591510	ArrayIndexing	opcode_size [ i ]		10591069	1					
ANR	10591511	Identifier	opcode_size		10591069	0					
ANR	10591512	Identifier	i		10591069	1					
ANR	10591513	CompoundStatement		181:12:5810:5810	10591069	1					
ANR	10591514	ExpressionStatement	"FT_TRACE6 ( ( ""sph: Function %d, opcode ptrn: %d, %s %s\\n"" , i , n , exc -> face -> root . family_name , exc -> face -> root . style_name ) )"	3678:14:135601:135801	10591069	0	True				
ANR	10591515	CallExpression	"FT_TRACE6 ( ( ""sph: Function %d, opcode ptrn: %d, %s %s\\n"" , i , n , exc -> face -> root . family_name , exc -> face -> root . style_name ) )"		10591069	0					
ANR	10591516	Callee	FT_TRACE6		10591069	0					
ANR	10591517	Identifier	FT_TRACE6		10591069	0					
ANR	10591518	ArgumentList	"""sph: Function %d, opcode ptrn: %d, %s %s\\n"" , i , n , exc -> face -> root . family_name , exc -> face -> root . style_name"		10591069	1					
ANR	10591519	Argument	"""sph: Function %d, opcode ptrn: %d, %s %s\\n"" , i , n , exc -> face -> root . family_name , exc -> face -> root . style_name"		10591069	0					
ANR	10591520	Expression	"""sph: Function %d, opcode ptrn: %d, %s %s\\n"" , i , n , exc -> face -> root . family_name , exc -> face -> root . style_name"		10591069	0					
ANR	10591521	PrimaryExpression	"""sph: Function %d, opcode ptrn: %d, %s %s\\n"""		10591069	0					
ANR	10591522	Expression	"i , n , exc -> face -> root . family_name , exc -> face -> root . style_name"		10591069	1					
ANR	10591523	Identifier	i		10591069	0					
ANR	10591524	Expression	"n , exc -> face -> root . family_name , exc -> face -> root . style_name"		10591069	1					
ANR	10591525	Identifier	n		10591069	0					
ANR	10591526	Expression	"exc -> face -> root . family_name , exc -> face -> root . style_name"		10591069	1					
ANR	10591527	MemberAccess	exc -> face -> root . family_name		10591069	0					
ANR	10591528	PtrMemberAccess	exc -> face -> root		10591069	0					
ANR	10591529	PtrMemberAccess	exc -> face		10591069	0					
ANR	10591530	Identifier	exc		10591069	0					
ANR	10591531	Identifier	face		10591069	1					
ANR	10591532	Identifier	root		10591069	1					
ANR	10591533	Identifier	family_name		10591069	1					
ANR	10591534	MemberAccess	exc -> face -> root . style_name		10591069	1					
ANR	10591535	PtrMemberAccess	exc -> face -> root		10591069	0					
ANR	10591536	PtrMemberAccess	exc -> face		10591069	0					
ANR	10591537	Identifier	exc		10591069	0					
ANR	10591538	Identifier	face		10591069	1					
ANR	10591539	Identifier	root		10591069	1					
ANR	10591540	Identifier	style_name		10591069	1					
ANR	10591541	SwitchStatement	switch ( i )		10591069	1					
ANR	10591542	Condition	i	3683:23:135827:135827	10591069	0	True				
ANR	10591543	Identifier	i		10591069	0					
ANR	10591544	CompoundStatement		188:14:6070:6070	10591069	1					
ANR	10591545	Label	case 0 :	3685:14:135861:135867	10591069	0	True				
ANR	10591546	ExpressionStatement	rec -> sph_fdef_flags |= SPH_FDEF_INLINE_DELTA_1	3686:16:135885:135943	10591069	1	True				
ANR	10591547	AssignmentExpression	rec -> sph_fdef_flags |= SPH_FDEF_INLINE_DELTA_1		10591069	0		|=			
ANR	10591548	PtrMemberAccess	rec -> sph_fdef_flags		10591069	0					
ANR	10591549	Identifier	rec		10591069	0					
ANR	10591550	Identifier	sph_fdef_flags		10591069	1					
ANR	10591551	Identifier	SPH_FDEF_INLINE_DELTA_1		10591069	1					
ANR	10591552	ExpressionStatement	exc -> face -> sph_found_func_flags |= SPH_FDEF_INLINE_DELTA_1	3687:16:135961:136019	10591069	2	True				
ANR	10591553	AssignmentExpression	exc -> face -> sph_found_func_flags |= SPH_FDEF_INLINE_DELTA_1		10591069	0		|=			
ANR	10591554	PtrMemberAccess	exc -> face -> sph_found_func_flags		10591069	0					
ANR	10591555	PtrMemberAccess	exc -> face		10591069	0					
ANR	10591556	Identifier	exc		10591069	0					
ANR	10591557	Identifier	face		10591069	1					
ANR	10591558	Identifier	sph_found_func_flags		10591069	1					
ANR	10591559	Identifier	SPH_FDEF_INLINE_DELTA_1		10591069	1					
ANR	10591560	BreakStatement	break ;	3688:16:136037:136042	10591069	3	True				
ANR	10591561	Label	case 1 :	3690:14:136059:136065	10591069	4	True				
ANR	10591562	ExpressionStatement	rec -> sph_fdef_flags |= SPH_FDEF_INLINE_DELTA_2	3691:16:136083:136141	10591069	5	True				
ANR	10591563	AssignmentExpression	rec -> sph_fdef_flags |= SPH_FDEF_INLINE_DELTA_2		10591069	0		|=			
ANR	10591564	PtrMemberAccess	rec -> sph_fdef_flags		10591069	0					
ANR	10591565	Identifier	rec		10591069	0					
ANR	10591566	Identifier	sph_fdef_flags		10591069	1					
ANR	10591567	Identifier	SPH_FDEF_INLINE_DELTA_2		10591069	1					
ANR	10591568	ExpressionStatement	exc -> face -> sph_found_func_flags |= SPH_FDEF_INLINE_DELTA_2	3692:16:136159:136217	10591069	6	True				
ANR	10591569	AssignmentExpression	exc -> face -> sph_found_func_flags |= SPH_FDEF_INLINE_DELTA_2		10591069	0		|=			
ANR	10591570	PtrMemberAccess	exc -> face -> sph_found_func_flags		10591069	0					
ANR	10591571	PtrMemberAccess	exc -> face		10591069	0					
ANR	10591572	Identifier	exc		10591069	0					
ANR	10591573	Identifier	face		10591069	1					
ANR	10591574	Identifier	sph_found_func_flags		10591069	1					
ANR	10591575	Identifier	SPH_FDEF_INLINE_DELTA_2		10591069	1					
ANR	10591576	BreakStatement	break ;	3693:16:136235:136240	10591069	7	True				
ANR	10591577	Label	case 2 :	3695:14:136257:136263	10591069	8	True				
ANR	10591578	SwitchStatement	switch ( n )		10591069	9					
ANR	10591579	Condition	n	3696:25:136290:136290	10591069	0	True				
ANR	10591580	Identifier	n		10591069	0					
ANR	10591581	CompoundStatement		201:16:6535:6535	10591069	1					
ANR	10591582	Label	case 58 :	3699:16:136382:136389	10591069	0	True				
ANR	10591583	ExpressionStatement	rec -> sph_fdef_flags |= SPH_FDEF_DIAGONAL_STROKE	3700:18:136409:136468	10591069	1	True				
ANR	10591584	AssignmentExpression	rec -> sph_fdef_flags |= SPH_FDEF_DIAGONAL_STROKE		10591069	0		|=			
ANR	10591585	PtrMemberAccess	rec -> sph_fdef_flags		10591069	0					
ANR	10591586	Identifier	rec		10591069	0					
ANR	10591587	Identifier	sph_fdef_flags		10591069	1					
ANR	10591588	Identifier	SPH_FDEF_DIAGONAL_STROKE		10591069	1					
ANR	10591589	ExpressionStatement	exc -> face -> sph_found_func_flags |= SPH_FDEF_DIAGONAL_STROKE	3701:18:136488:136547	10591069	2	True				
ANR	10591590	AssignmentExpression	exc -> face -> sph_found_func_flags |= SPH_FDEF_DIAGONAL_STROKE		10591069	0		|=			
ANR	10591591	PtrMemberAccess	exc -> face -> sph_found_func_flags		10591069	0					
ANR	10591592	PtrMemberAccess	exc -> face		10591069	0					
ANR	10591593	Identifier	exc		10591069	0					
ANR	10591594	Identifier	face		10591069	1					
ANR	10591595	Identifier	sph_found_func_flags		10591069	1					
ANR	10591596	Identifier	SPH_FDEF_DIAGONAL_STROKE		10591069	1					
ANR	10591597	BreakStatement	break ;	3703:16:136583:136588	10591069	10	True				
ANR	10591598	Label	case 3 :	3705:14:136605:136611	10591069	11	True				
ANR	10591599	SwitchStatement	switch ( n )		10591069	12					
ANR	10591600	Condition	n	3706:25:136638:136638	10591069	0	True				
ANR	10591601	Identifier	n		10591069	0					
ANR	10591602	CompoundStatement		211:16:6883:6883	10591069	1					
ANR	10591603	Label	case 0 :	3708:16:136676:136682	10591069	0	True				
ANR	10591604	ExpressionStatement	rec -> sph_fdef_flags |= SPH_FDEF_VACUFORM_ROUND_1	3709:18:136702:136762	10591069	1	True				
ANR	10591605	AssignmentExpression	rec -> sph_fdef_flags |= SPH_FDEF_VACUFORM_ROUND_1		10591069	0		|=			
ANR	10591606	PtrMemberAccess	rec -> sph_fdef_flags		10591069	0					
ANR	10591607	Identifier	rec		10591069	0					
ANR	10591608	Identifier	sph_fdef_flags		10591069	1					
ANR	10591609	Identifier	SPH_FDEF_VACUFORM_ROUND_1		10591069	1					
ANR	10591610	ExpressionStatement	exc -> face -> sph_found_func_flags |= SPH_FDEF_VACUFORM_ROUND_1	3710:18:136782:136842	10591069	2	True				
ANR	10591611	AssignmentExpression	exc -> face -> sph_found_func_flags |= SPH_FDEF_VACUFORM_ROUND_1		10591069	0		|=			
ANR	10591612	PtrMemberAccess	exc -> face -> sph_found_func_flags		10591069	0					
ANR	10591613	PtrMemberAccess	exc -> face		10591069	0					
ANR	10591614	Identifier	exc		10591069	0					
ANR	10591615	Identifier	face		10591069	1					
ANR	10591616	Identifier	sph_found_func_flags		10591069	1					
ANR	10591617	Identifier	SPH_FDEF_VACUFORM_ROUND_1		10591069	1					
ANR	10591618	BreakStatement	break ;	3712:16:136878:136883	10591069	13	True				
ANR	10591619	Label	case 4 :	3714:14:136900:136906	10591069	14	True				
ANR	10591620	ExpressionStatement	rec -> sph_fdef_flags |= SPH_FDEF_TTFAUTOHINT_1	3716:16:136987:137044	10591069	15	True				
ANR	10591621	AssignmentExpression	rec -> sph_fdef_flags |= SPH_FDEF_TTFAUTOHINT_1		10591069	0		|=			
ANR	10591622	PtrMemberAccess	rec -> sph_fdef_flags		10591069	0					
ANR	10591623	Identifier	rec		10591069	0					
ANR	10591624	Identifier	sph_fdef_flags		10591069	1					
ANR	10591625	Identifier	SPH_FDEF_TTFAUTOHINT_1		10591069	1					
ANR	10591626	ExpressionStatement	exc -> face -> sph_found_func_flags |= SPH_FDEF_TTFAUTOHINT_1	3717:16:137062:137119	10591069	16	True				
ANR	10591627	AssignmentExpression	exc -> face -> sph_found_func_flags |= SPH_FDEF_TTFAUTOHINT_1		10591069	0		|=			
ANR	10591628	PtrMemberAccess	exc -> face -> sph_found_func_flags		10591069	0					
ANR	10591629	PtrMemberAccess	exc -> face		10591069	0					
ANR	10591630	Identifier	exc		10591069	0					
ANR	10591631	Identifier	face		10591069	1					
ANR	10591632	Identifier	sph_found_func_flags		10591069	1					
ANR	10591633	Identifier	SPH_FDEF_TTFAUTOHINT_1		10591069	1					
ANR	10591634	BreakStatement	break ;	3718:16:137137:137142	10591069	17	True				
ANR	10591635	Label	case 5 :	3720:14:137159:137165	10591069	18	True				
ANR	10591636	SwitchStatement	switch ( n )		10591069	19					
ANR	10591637	Condition	n	3721:25:137192:137192	10591069	0	True				
ANR	10591638	Identifier	n		10591069	0					
ANR	10591639	CompoundStatement		226:16:7437:7437	10591069	1					
ANR	10591640	Label	case 0 :	3723:16:137230:137236	10591069	0	True				
ANR	10591641	Label	case 1 :	3724:16:137254:137260	10591069	1	True				
ANR	10591642	Label	case 2 :	3725:16:137278:137284	10591069	2	True				
ANR	10591643	Label	case 4 :	3726:16:137302:137308	10591069	3	True				
ANR	10591644	Label	case 7 :	3727:16:137326:137332	10591069	4	True				
ANR	10591645	Label	case 8 :	3728:16:137350:137356	10591069	5	True				
ANR	10591646	ExpressionStatement	rec -> sph_fdef_flags |= SPH_FDEF_SPACING_1	3729:18:137376:137429	10591069	6	True				
ANR	10591647	AssignmentExpression	rec -> sph_fdef_flags |= SPH_FDEF_SPACING_1		10591069	0		|=			
ANR	10591648	PtrMemberAccess	rec -> sph_fdef_flags		10591069	0					
ANR	10591649	Identifier	rec		10591069	0					
ANR	10591650	Identifier	sph_fdef_flags		10591069	1					
ANR	10591651	Identifier	SPH_FDEF_SPACING_1		10591069	1					
ANR	10591652	ExpressionStatement	exc -> face -> sph_found_func_flags |= SPH_FDEF_SPACING_1	3730:18:137449:137502	10591069	7	True				
ANR	10591653	AssignmentExpression	exc -> face -> sph_found_func_flags |= SPH_FDEF_SPACING_1		10591069	0		|=			
ANR	10591654	PtrMemberAccess	exc -> face -> sph_found_func_flags		10591069	0					
ANR	10591655	PtrMemberAccess	exc -> face		10591069	0					
ANR	10591656	Identifier	exc		10591069	0					
ANR	10591657	Identifier	face		10591069	1					
ANR	10591658	Identifier	sph_found_func_flags		10591069	1					
ANR	10591659	Identifier	SPH_FDEF_SPACING_1		10591069	1					
ANR	10591660	BreakStatement	break ;	3732:16:137538:137543	10591069	20	True				
ANR	10591661	Label	case 6 :	3734:14:137560:137566	10591069	21	True				
ANR	10591662	SwitchStatement	switch ( n )		10591069	22					
ANR	10591663	Condition	n	3735:25:137593:137593	10591069	0	True				
ANR	10591664	Identifier	n		10591069	0					
ANR	10591665	CompoundStatement		240:16:7838:7838	10591069	1					
ANR	10591666	Label	case 0 :	3737:16:137631:137637	10591069	0	True				
ANR	10591667	Label	case 1 :	3738:16:137655:137661	10591069	1	True				
ANR	10591668	Label	case 2 :	3739:16:137679:137685	10591069	2	True				
ANR	10591669	Label	case 4 :	3740:16:137703:137709	10591069	3	True				
ANR	10591670	Label	case 7 :	3741:16:137727:137733	10591069	4	True				
ANR	10591671	Label	case 8 :	3742:16:137751:137757	10591069	5	True				
ANR	10591672	ExpressionStatement	rec -> sph_fdef_flags |= SPH_FDEF_SPACING_2	3743:18:137777:137830	10591069	6	True				
ANR	10591673	AssignmentExpression	rec -> sph_fdef_flags |= SPH_FDEF_SPACING_2		10591069	0		|=			
ANR	10591674	PtrMemberAccess	rec -> sph_fdef_flags		10591069	0					
ANR	10591675	Identifier	rec		10591069	0					
ANR	10591676	Identifier	sph_fdef_flags		10591069	1					
ANR	10591677	Identifier	SPH_FDEF_SPACING_2		10591069	1					
ANR	10591678	ExpressionStatement	exc -> face -> sph_found_func_flags |= SPH_FDEF_SPACING_2	3744:18:137850:137903	10591069	7	True				
ANR	10591679	AssignmentExpression	exc -> face -> sph_found_func_flags |= SPH_FDEF_SPACING_2		10591069	0		|=			
ANR	10591680	PtrMemberAccess	exc -> face -> sph_found_func_flags		10591069	0					
ANR	10591681	PtrMemberAccess	exc -> face		10591069	0					
ANR	10591682	Identifier	exc		10591069	0					
ANR	10591683	Identifier	face		10591069	1					
ANR	10591684	Identifier	sph_found_func_flags		10591069	1					
ANR	10591685	Identifier	SPH_FDEF_SPACING_2		10591069	1					
ANR	10591686	BreakStatement	break ;	3746:16:137939:137944	10591069	23	True				
ANR	10591687	Label	case 7 :	3748:15:137962:137968	10591069	24	True				
ANR	10591688	ExpressionStatement	rec -> sph_fdef_flags |= SPH_FDEF_TYPEMAN_DIAGENDCTRL	3749:17:137987:138050	10591069	25	True				
ANR	10591689	AssignmentExpression	rec -> sph_fdef_flags |= SPH_FDEF_TYPEMAN_DIAGENDCTRL		10591069	0		|=			
ANR	10591690	PtrMemberAccess	rec -> sph_fdef_flags		10591069	0					
ANR	10591691	Identifier	rec		10591069	0					
ANR	10591692	Identifier	sph_fdef_flags		10591069	1					
ANR	10591693	Identifier	SPH_FDEF_TYPEMAN_DIAGENDCTRL		10591069	1					
ANR	10591694	ExpressionStatement	exc -> face -> sph_found_func_flags |= SPH_FDEF_TYPEMAN_DIAGENDCTRL	3750:17:138069:138132	10591069	26	True				
ANR	10591695	AssignmentExpression	exc -> face -> sph_found_func_flags |= SPH_FDEF_TYPEMAN_DIAGENDCTRL		10591069	0		|=			
ANR	10591696	PtrMemberAccess	exc -> face -> sph_found_func_flags		10591069	0					
ANR	10591697	PtrMemberAccess	exc -> face		10591069	0					
ANR	10591698	Identifier	exc		10591069	0					
ANR	10591699	Identifier	face		10591069	1					
ANR	10591700	Identifier	sph_found_func_flags		10591069	1					
ANR	10591701	Identifier	SPH_FDEF_TYPEMAN_DIAGENDCTRL		10591069	1					
ANR	10591702	BreakStatement	break ;	3751:17:138151:138156	10591069	27	True				
ANR	10591703	Label	case 8 :	3753:15:138174:138180	10591069	28	True				
ANR	10591704	ExpressionStatement	rec -> sph_fdef_flags |= SPH_FDEF_TYPEMAN_DIAGENDCTRL	3755:17:138205:138268	10591069	29	True				
ANR	10591705	AssignmentExpression	rec -> sph_fdef_flags |= SPH_FDEF_TYPEMAN_DIAGENDCTRL		10591069	0		|=			
ANR	10591706	PtrMemberAccess	rec -> sph_fdef_flags		10591069	0					
ANR	10591707	Identifier	rec		10591069	0					
ANR	10591708	Identifier	sph_fdef_flags		10591069	1					
ANR	10591709	Identifier	SPH_FDEF_TYPEMAN_DIAGENDCTRL		10591069	1					
ANR	10591710	ExpressionStatement	exc -> face -> sph_found_func_flags |= SPH_FDEF_TYPEMAN_DIAGENDCTRL	3756:17:138287:138350	10591069	30	True				
ANR	10591711	AssignmentExpression	exc -> face -> sph_found_func_flags |= SPH_FDEF_TYPEMAN_DIAGENDCTRL		10591069	0		|=			
ANR	10591712	PtrMemberAccess	exc -> face -> sph_found_func_flags		10591069	0					
ANR	10591713	PtrMemberAccess	exc -> face		10591069	0					
ANR	10591714	Identifier	exc		10591069	0					
ANR	10591715	Identifier	face		10591069	1					
ANR	10591716	Identifier	sph_found_func_flags		10591069	1					
ANR	10591717	Identifier	SPH_FDEF_TYPEMAN_DIAGENDCTRL		10591069	1					
ANR	10591718	BreakStatement	break ;	3758:17:138376:138381	10591069	31	True				
ANR	10591719	ExpressionStatement	opcode_pointer [ i ] = 0	3760:14:138413:138434	10591069	2	True				
ANR	10591720	AssignmentExpression	opcode_pointer [ i ] = 0		10591069	0		=			
ANR	10591721	ArrayIndexing	opcode_pointer [ i ]		10591069	0					
ANR	10591722	Identifier	opcode_pointer		10591069	0					
ANR	10591723	Identifier	i		10591069	1					
ANR	10591724	PrimaryExpression	0		10591069	1					
ANR	10591725	ElseStatement	else		10591069	0					
ANR	10591726	ExpressionStatement	opcode_pointer [ i ] = 0	3765:12:138490:138511	10591069	0	True				
ANR	10591727	AssignmentExpression	opcode_pointer [ i ] = 0		10591069	0		=			
ANR	10591728	ArrayIndexing	opcode_pointer [ i ]		10591069	0					
ANR	10591729	Identifier	opcode_pointer		10591069	0					
ANR	10591730	Identifier	i		10591069	1					
ANR	10591731	PrimaryExpression	0		10591069	1					
ANR	10591732	ExpressionStatement	exc -> face -> sph_compatibility_mode = ( ( exc -> face -> sph_found_func_flags & SPH_FDEF_INLINE_DELTA_1 ) | ( exc -> face -> sph_found_func_flags & SPH_FDEF_INLINE_DELTA_2 ) )	3769:8:138603:138790	10591069	1	True				
ANR	10591733	AssignmentExpression	exc -> face -> sph_compatibility_mode = ( ( exc -> face -> sph_found_func_flags & SPH_FDEF_INLINE_DELTA_1 ) | ( exc -> face -> sph_found_func_flags & SPH_FDEF_INLINE_DELTA_2 ) )		10591069	0		=			
ANR	10591734	PtrMemberAccess	exc -> face -> sph_compatibility_mode		10591069	0					
ANR	10591735	PtrMemberAccess	exc -> face		10591069	0					
ANR	10591736	Identifier	exc		10591069	0					
ANR	10591737	Identifier	face		10591069	1					
ANR	10591738	Identifier	sph_compatibility_mode		10591069	1					
ANR	10591739	InclusiveOrExpression	( exc -> face -> sph_found_func_flags & SPH_FDEF_INLINE_DELTA_1 ) | ( exc -> face -> sph_found_func_flags & SPH_FDEF_INLINE_DELTA_2 )		10591069	1		|			
ANR	10591740	BitAndExpression	exc -> face -> sph_found_func_flags & SPH_FDEF_INLINE_DELTA_1		10591069	0		&			
ANR	10591741	PtrMemberAccess	exc -> face -> sph_found_func_flags		10591069	0					
ANR	10591742	PtrMemberAccess	exc -> face		10591069	0					
ANR	10591743	Identifier	exc		10591069	0					
ANR	10591744	Identifier	face		10591069	1					
ANR	10591745	Identifier	sph_found_func_flags		10591069	1					
ANR	10591746	Identifier	SPH_FDEF_INLINE_DELTA_1		10591069	1					
ANR	10591747	BitAndExpression	exc -> face -> sph_found_func_flags & SPH_FDEF_INLINE_DELTA_2		10591069	1		&			
ANR	10591748	PtrMemberAccess	exc -> face -> sph_found_func_flags		10591069	0					
ANR	10591749	PtrMemberAccess	exc -> face		10591069	0					
ANR	10591750	Identifier	exc		10591069	0					
ANR	10591751	Identifier	face		10591069	1					
ANR	10591752	Identifier	sph_found_func_flags		10591069	1					
ANR	10591753	Identifier	SPH_FDEF_INLINE_DELTA_2		10591069	1					
ANR	10591754	SwitchStatement	switch ( exc -> opcode )		10591069	1					
ANR	10591755	Condition	exc -> opcode	3776:15:138869:138879	10591069	0	True				
ANR	10591756	PtrMemberAccess	exc -> opcode		10591069	0					
ANR	10591757	Identifier	exc		10591069	0					
ANR	10591758	Identifier	opcode		10591069	1					
ANR	10591759	CompoundStatement		281:6:9114:9114	10591069	1					
ANR	10591760	Label	case 0x89 :	3778:6:138897:138906	10591069	0	True				
ANR	10591761	Label	case 0x2C :	3779:6:138928:138937	10591069	1	True				
ANR	10591762	ExpressionStatement	exc -> error = FT_THROW ( Nested_DEFS )	3780:8:138961:138997	10591069	2	True				
ANR	10591763	AssignmentExpression	exc -> error = FT_THROW ( Nested_DEFS )		10591069	0		=			
ANR	10591764	PtrMemberAccess	exc -> error		10591069	0					
ANR	10591765	Identifier	exc		10591069	0					
ANR	10591766	Identifier	error		10591069	1					
ANR	10591767	CallExpression	FT_THROW ( Nested_DEFS )		10591069	1					
ANR	10591768	Callee	FT_THROW		10591069	0					
ANR	10591769	Identifier	FT_THROW		10591069	0					
ANR	10591770	ArgumentList	Nested_DEFS		10591069	1					
ANR	10591771	Argument	Nested_DEFS		10591069	0					
ANR	10591772	Identifier	Nested_DEFS		10591069	0					
ANR	10591773	ReturnStatement	return ;	3781:8:139007:139013	10591069	3	True				
ANR	10591774	Label	case 0x2D :	3783:6:139022:139031	10591069	4	True				
ANR	10591775	ExpressionStatement	rec -> end = exc -> IP	3784:8:139054:139072	10591069	5	True				
ANR	10591776	AssignmentExpression	rec -> end = exc -> IP		10591069	0		=			
ANR	10591777	PtrMemberAccess	rec -> end		10591069	0					
ANR	10591778	Identifier	rec		10591069	0					
ANR	10591779	Identifier	end		10591069	1					
ANR	10591780	PtrMemberAccess	exc -> IP		10591069	1					
ANR	10591781	Identifier	exc		10591069	0					
ANR	10591782	Identifier	IP		10591069	1					
ANR	10591783	ReturnStatement	return ;	3785:8:139082:139088	10591069	6	True				
ANR	10591784	ReturnType	static void		10591069	1					
ANR	10591785	Identifier	Ins_FDEF		10591069	2					
ANR	10591786	ParameterList	"TT_ExecContext exc , FT_Long * args"		10591069	3					
ANR	10591787	Parameter	TT_ExecContext exc	3495:12:129716:129734	10591069	0	True				
ANR	10591788	ParameterType	TT_ExecContext		10591069	0					
ANR	10591789	Identifier	exc		10591069	1					
ANR	10591790	Parameter	FT_Long * args	3496:12:129749:129768	10591069	1	True				
ANR	10591791	ParameterType	FT_Long *		10591069	0					
ANR	10591792	Identifier	args		10591069	1					
ANR	10591793	CFGEntryNode	ENTRY		10591069		True				
ANR	10591794	CFGExitNode	EXIT		10591069		True				
ANR	10591795	Symbol	rec -> start		10591069						
ANR	10591796	Symbol	rec -> inline_delta		10591069						
ANR	10591797	Symbol	* * opcode_pointer		10591069						
ANR	10591798	Symbol	SPH_FDEF_DIAGONAL_STROKE		10591069						
ANR	10591799	Symbol	* opcode_size		10591069						
ANR	10591800	Symbol	* args		10591069						
ANR	10591801	Symbol	rec -> opc		10591069						
ANR	10591802	Symbol	SUBPIXEL_HINTING_INFINALITY		10591069						
ANR	10591803	Symbol	exc		10591069						
ANR	10591804	Symbol	rec		10591069						
ANR	10591805	Symbol	exc -> face -> root . style_name		10591069						
ANR	10591806	Symbol	* opcode_pointer		10591069						
ANR	10591807	Symbol	limit		10591069						
ANR	10591808	Symbol	* opcode_pattern		10591069						
ANR	10591809	Symbol	SPH_FDEF_SPACING_2		10591069						
ANR	10591810	Symbol	SPH_FDEF_SPACING_1		10591069						
ANR	10591811	Symbol	exc -> error		10591069						
ANR	10591812	Symbol	exc -> face -> sph_found_func_flags		10591069						
ANR	10591813	Symbol	DEF_In_Glyf_Bytecode		10591069						
ANR	10591814	Symbol	SkipCode		10591069						
ANR	10591815	Symbol	exc -> IP		10591069						
ANR	10591816	Symbol	* * i		10591069						
ANR	10591817	Symbol	tt_coderange_glyph		10591069						
ANR	10591818	Symbol	exc -> curRange		10591069						
ANR	10591819	Symbol	exc -> face		10591069						
ANR	10591820	Symbol	TRUE		10591069						
ANR	10591821	Symbol	SPH_FDEF_TTFAUTOHINT_1		10591069						
ANR	10591822	Symbol	rec -> range		10591069						
ANR	10591823	Symbol	rec -> end		10591069						
ANR	10591824	Symbol	exc -> face -> sph_compatibility_mode		10591069						
ANR	10591825	Symbol	Too_Many_Function_Defs		10591069						
ANR	10591826	Symbol	exc -> opcode		10591069						
ANR	10591827	Symbol	exc -> maxFDefs		10591069						
ANR	10591828	Symbol	SPH_FDEF_TYPEMAN_STROKES		10591069						
ANR	10591829	Symbol	exc -> face -> root		10591069						
ANR	10591830	Symbol	* exc		10591069						
ANR	10591831	Symbol	exc -> maxFunc		10591069						
ANR	10591832	Symbol	* exc -> face		10591069						
ANR	10591833	Symbol	exc -> numFDefs		10591069						
ANR	10591834	Symbol	SPH_FDEF_INLINE_DELTA_1		10591069						
ANR	10591835	Symbol	opcode_size		10591069						
ANR	10591836	Symbol	SPH_FDEF_INLINE_DELTA_2		10591069						
ANR	10591837	Symbol	rec -> active		10591069						
ANR	10591838	Symbol	rec -> sph_fdef_flags		10591069						
ANR	10591839	Symbol	SPH_FDEF_TYPEMAN_DIAGENDCTRL		10591069						
ANR	10591840	Symbol	opcode_patterns		10591069						
ANR	10591841	Symbol	SUCCESS		10591069						
ANR	10591842	Symbol	* * exc		10591069						
ANR	10591843	Symbol	exc -> face -> root . family_name		10591069						
ANR	10591844	Symbol	i		10591069						
ANR	10591845	Symbol	opcode_pattern		10591069						
ANR	10591846	Symbol	n		10591069						
ANR	10591847	Symbol	FT_THROW		10591069						
ANR	10591848	Symbol	args		10591069						
ANR	10591849	Symbol	* i		10591069						
ANR	10591850	Symbol	* * opcode_pattern		10591069						
ANR	10591851	Symbol	opcode_pointer		10591069						
ANR	10591852	Symbol	Nested_DEFS		10591069						
ANR	10591853	Symbol	SPH_FDEF_VACUFORM_ROUND_1		10591069						
ANR	10591854	Symbol	* rec		10591069						
ANR	10591855	Symbol	FALSE		10591069						
ANR	10591856	Symbol	exc -> FDefs		10591069						
ANR	10591857	Function	Ins_ENDF	3797:2:139580:140651							
ANR	10591858	FunctionDef	Ins_ENDF (TT_ExecContext exc)		10591857	0					
ANR	10591859	CompoundStatement		3799:2:139628:140651	10591857	0					
ANR	10591860	IdentifierDeclStatement	TT_CallRec * pRec ;	3800:4:139634:139651	10591857	0	True				
ANR	10591861	IdentifierDecl	* pRec		10591857	0					
ANR	10591862	IdentifierDeclType	TT_CallRec *		10591857	0					
ANR	10591863	Identifier	pRec		10591857	1					
ANR	10591864	ExpressionStatement	exc -> sph_in_func_flags = 0x0000	3804:4:139705:139736	10591857	1	True				
ANR	10591865	AssignmentExpression	exc -> sph_in_func_flags = 0x0000		10591857	0		=			
ANR	10591866	PtrMemberAccess	exc -> sph_in_func_flags		10591857	0					
ANR	10591867	Identifier	exc		10591857	0					
ANR	10591868	Identifier	sph_in_func_flags		10591857	1					
ANR	10591869	PrimaryExpression	0x0000		10591857	1					
ANR	10591870	IfStatement	if ( exc -> callTop <= 0 )		10591857	2					
ANR	10591871	Condition	exc -> callTop <= 0	3807:9:139800:139816	10591857	0	True				
ANR	10591872	RelationalExpression	exc -> callTop <= 0		10591857	0		<=			
ANR	10591873	PtrMemberAccess	exc -> callTop		10591857	0					
ANR	10591874	Identifier	exc		10591857	0					
ANR	10591875	Identifier	callTop		10591857	1					
ANR	10591876	PrimaryExpression	0		10591857	1					
ANR	10591877	CompoundStatement		10:4:243:243	10591857	1					
ANR	10591878	ExpressionStatement	exc -> error = FT_THROW ( ENDF_In_Exec_Stream )	3809:6:139880:139924	10591857	0	True				
ANR	10591879	AssignmentExpression	exc -> error = FT_THROW ( ENDF_In_Exec_Stream )		10591857	0		=			
ANR	10591880	PtrMemberAccess	exc -> error		10591857	0					
ANR	10591881	Identifier	exc		10591857	0					
ANR	10591882	Identifier	error		10591857	1					
ANR	10591883	CallExpression	FT_THROW ( ENDF_In_Exec_Stream )		10591857	1					
ANR	10591884	Callee	FT_THROW		10591857	0					
ANR	10591885	Identifier	FT_THROW		10591857	0					
ANR	10591886	ArgumentList	ENDF_In_Exec_Stream		10591857	1					
ANR	10591887	Argument	ENDF_In_Exec_Stream		10591857	0					
ANR	10591888	Identifier	ENDF_In_Exec_Stream		10591857	0					
ANR	10591889	ReturnStatement	return ;	3810:6:139932:139938	10591857	1	True				
ANR	10591890	ExpressionStatement	exc -> callTop --	3813:4:139951:139965	10591857	3	True				
ANR	10591891	PostIncDecOperationExpression	exc -> callTop --		10591857	0					
ANR	10591892	PtrMemberAccess	exc -> callTop		10591857	0					
ANR	10591893	Identifier	exc		10591857	0					
ANR	10591894	Identifier	callTop		10591857	1					
ANR	10591895	IncDec	--		10591857	1					
ANR	10591896	ExpressionStatement	pRec = & exc -> callStack [ exc -> callTop ]	3815:4:139972:140008	10591857	4	True				
ANR	10591897	AssignmentExpression	pRec = & exc -> callStack [ exc -> callTop ]		10591857	0		=			
ANR	10591898	Identifier	pRec		10591857	0					
ANR	10591899	UnaryOperationExpression	& exc -> callStack [ exc -> callTop ]		10591857	1					
ANR	10591900	UnaryOperator	&		10591857	0					
ANR	10591901	ArrayIndexing	exc -> callStack [ exc -> callTop ]		10591857	1					
ANR	10591902	PtrMemberAccess	exc -> callStack		10591857	0					
ANR	10591903	Identifier	exc		10591857	0					
ANR	10591904	Identifier	callStack		10591857	1					
ANR	10591905	PtrMemberAccess	exc -> callTop		10591857	1					
ANR	10591906	Identifier	exc		10591857	0					
ANR	10591907	Identifier	callTop		10591857	1					
ANR	10591908	ExpressionStatement	pRec -> Cur_Count --	3817:4:140015:140032	10591857	5	True				
ANR	10591909	PostIncDecOperationExpression	pRec -> Cur_Count --		10591857	0					
ANR	10591910	PtrMemberAccess	pRec -> Cur_Count		10591857	0					
ANR	10591911	Identifier	pRec		10591857	0					
ANR	10591912	Identifier	Cur_Count		10591857	1					
ANR	10591913	IncDec	--		10591857	1					
ANR	10591914	ExpressionStatement	exc -> step_ins = FALSE	3819:4:140039:140060	10591857	6	True				
ANR	10591915	AssignmentExpression	exc -> step_ins = FALSE		10591857	0		=			
ANR	10591916	PtrMemberAccess	exc -> step_ins		10591857	0					
ANR	10591917	Identifier	exc		10591857	0					
ANR	10591918	Identifier	step_ins		10591857	1					
ANR	10591919	Identifier	FALSE		10591857	1					
ANR	10591920	IfStatement	if ( pRec -> Cur_Count > 0 )		10591857	7					
ANR	10591921	Condition	pRec -> Cur_Count > 0	3821:9:140072:140090	10591857	0	True				
ANR	10591922	RelationalExpression	pRec -> Cur_Count > 0		10591857	0		>			
ANR	10591923	PtrMemberAccess	pRec -> Cur_Count		10591857	0					
ANR	10591924	Identifier	pRec		10591857	0					
ANR	10591925	Identifier	Cur_Count		10591857	1					
ANR	10591926	PrimaryExpression	0		10591857	1					
ANR	10591927	CompoundStatement		24:4:469:469	10591857	1					
ANR	10591928	ExpressionStatement	exc -> callTop ++	3823:6:140106:140120	10591857	0	True				
ANR	10591929	PostIncDecOperationExpression	exc -> callTop ++		10591857	0					
ANR	10591930	PtrMemberAccess	exc -> callTop		10591857	0					
ANR	10591931	Identifier	exc		10591857	0					
ANR	10591932	Identifier	callTop		10591857	1					
ANR	10591933	IncDec	++		10591857	1					
ANR	10591934	ExpressionStatement	exc -> IP = pRec -> Def -> start	3824:6:140128:140154	10591857	1	True				
ANR	10591935	AssignmentExpression	exc -> IP = pRec -> Def -> start		10591857	0		=			
ANR	10591936	PtrMemberAccess	exc -> IP		10591857	0					
ANR	10591937	Identifier	exc		10591857	0					
ANR	10591938	Identifier	IP		10591857	1					
ANR	10591939	PtrMemberAccess	pRec -> Def -> start		10591857	1					
ANR	10591940	PtrMemberAccess	pRec -> Def		10591857	0					
ANR	10591941	Identifier	pRec		10591857	0					
ANR	10591942	Identifier	Def		10591857	1					
ANR	10591943	Identifier	start		10591857	1					
ANR	10591944	ElseStatement	else		10591857	0					
ANR	10591945	ExpressionStatement	"Ins_Goto_CodeRange ( exc , pRec -> Caller_Range , pRec -> Caller_IP )"	3828:6:140223:140285	10591857	0	True				
ANR	10591946	CallExpression	"Ins_Goto_CodeRange ( exc , pRec -> Caller_Range , pRec -> Caller_IP )"		10591857	0					
ANR	10591947	Callee	Ins_Goto_CodeRange		10591857	0					
ANR	10591948	Identifier	Ins_Goto_CodeRange		10591857	0					
ANR	10591949	ArgumentList	exc		10591857	1					
ANR	10591950	Argument	exc		10591857	0					
ANR	10591951	Identifier	exc		10591857	0					
ANR	10591952	Argument	pRec -> Caller_Range		10591857	1					
ANR	10591953	PtrMemberAccess	pRec -> Caller_Range		10591857	0					
ANR	10591954	Identifier	pRec		10591857	0					
ANR	10591955	Identifier	Caller_Range		10591857	1					
ANR	10591956	Argument	pRec -> Caller_IP		10591857	2					
ANR	10591957	PtrMemberAccess	pRec -> Caller_IP		10591857	0					
ANR	10591958	Identifier	pRec		10591857	0					
ANR	10591959	Identifier	Caller_IP		10591857	1					
ANR	10591960	ReturnType	static void		10591857	1					
ANR	10591961	Identifier	Ins_ENDF		10591857	2					
ANR	10591962	ParameterList	TT_ExecContext exc		10591857	3					
ANR	10591963	Parameter	TT_ExecContext exc	3798:12:139604:139622	10591857	0	True				
ANR	10591964	ParameterType	TT_ExecContext		10591857	0					
ANR	10591965	Identifier	exc		10591857	1					
ANR	10591966	CFGEntryNode	ENTRY		10591857		True				
ANR	10591967	CFGExitNode	EXIT		10591857		True				
ANR	10591968	Symbol	pRec -> Def -> start		10591857						
ANR	10591969	Symbol	exc -> IP		10591857						
ANR	10591970	Symbol	* exc		10591857						
ANR	10591971	Symbol	pRec -> Def		10591857						
ANR	10591972	Symbol	exc -> step_ins		10591857						
ANR	10591973	Symbol	pRec -> Cur_Count		10591857						
ANR	10591974	Symbol	* pRec -> Def		10591857						
ANR	10591975	Symbol	pRec -> Caller_Range		10591857						
ANR	10591976	Symbol	FT_THROW		10591857						
ANR	10591977	Symbol	exc		10591857						
ANR	10591978	Symbol	exc -> callTop		10591857						
ANR	10591979	Symbol	pRec		10591857						
ANR	10591980	Symbol	exc -> sph_in_func_flags		10591857						
ANR	10591981	Symbol	* pRec		10591857						
ANR	10591982	Symbol	pRec -> Caller_IP		10591857						
ANR	10591983	Symbol	* * pRec		10591857						
ANR	10591984	Symbol	FALSE		10591857						
ANR	10591985	Symbol	ENDF_In_Exec_Stream		10591857						
ANR	10591986	Symbol	exc -> error		10591857						
ANR	10591987	Symbol	exc -> callStack		10591857						
ANR	10591988	Function	Ins_CALL	3846:2:141125:143453							
ANR	10591989	FunctionDef	"Ins_CALL (TT_ExecContext exc , FT_Long * args)"		10591988	0					
ANR	10591990	CompoundStatement		3849:2:141207:143453	10591988	0					
ANR	10591991	IdentifierDeclStatement	FT_ULong F ;	3850:4:141213:141229	10591988	0	True				
ANR	10591992	IdentifierDecl	F		10591988	0					
ANR	10591993	IdentifierDeclType	FT_ULong		10591988	0					
ANR	10591994	Identifier	F		10591988	1					
ANR	10591995	IdentifierDeclStatement	TT_CallRec * pCrec ;	3851:4:141235:141255	10591988	1	True				
ANR	10591996	IdentifierDecl	* pCrec		10591988	0					
ANR	10591997	IdentifierDeclType	TT_CallRec *		10591988	0					
ANR	10591998	Identifier	pCrec		10591988	1					
ANR	10591999	IdentifierDeclStatement	TT_DefRecord * def ;	3852:4:141261:141279	10591988	2	True				
ANR	10592000	IdentifierDecl	* def		10591988	0					
ANR	10592001	IdentifierDeclType	TT_DefRecord *		10591988	0					
ANR	10592002	Identifier	def		10591988	1					
ANR	10592003	ExpressionStatement	F = ( FT_ULong ) args [ 0 ]	3857:4:141328:141349	10591988	3	True				
ANR	10592004	AssignmentExpression	F = ( FT_ULong ) args [ 0 ]		10591988	0		=			
ANR	10592005	Identifier	F		10591988	0					
ANR	10592006	CastExpression	( FT_ULong ) args [ 0 ]		10591988	1					
ANR	10592007	CastTarget	FT_ULong		10591988	0					
ANR	10592008	ArrayIndexing	args [ 0 ]		10591988	1					
ANR	10592009	Identifier	args		10591988	0					
ANR	10592010	PrimaryExpression	0		10591988	1					
ANR	10592011	IfStatement	"if ( BOUNDSL ( F , exc -> maxFunc + 1 ) )"		10591988	4					
ANR	10592012	Condition	"BOUNDSL ( F , exc -> maxFunc + 1 )"	3858:9:141360:141389	10591988	0	True				
ANR	10592013	CallExpression	"BOUNDSL ( F , exc -> maxFunc + 1 )"		10591988	0					
ANR	10592014	Callee	BOUNDSL		10591988	0					
ANR	10592015	Identifier	BOUNDSL		10591988	0					
ANR	10592016	ArgumentList	F		10591988	1					
ANR	10592017	Argument	F		10591988	0					
ANR	10592018	Identifier	F		10591988	0					
ANR	10592019	Argument	exc -> maxFunc + 1		10591988	1					
ANR	10592020	AdditiveExpression	exc -> maxFunc + 1		10591988	0		+			
ANR	10592021	PtrMemberAccess	exc -> maxFunc		10591988	0					
ANR	10592022	Identifier	exc		10591988	0					
ANR	10592023	Identifier	maxFunc		10591988	1					
ANR	10592024	PrimaryExpression	1		10591988	1					
ANR	10592025	GotoStatement	goto Fail ;	3859:6:141399:141408	10591988	1	True				
ANR	10592026	Identifier	Fail		10591988	0					
ANR	10592027	ExpressionStatement	def = exc -> FDefs + F	3870:4:141984:142004	10591988	5	True				
ANR	10592028	AssignmentExpression	def = exc -> FDefs + F		10591988	0		=			
ANR	10592029	Identifier	def		10591988	0					
ANR	10592030	AdditiveExpression	exc -> FDefs + F		10591988	1		+			
ANR	10592031	PtrMemberAccess	exc -> FDefs		10591988	0					
ANR	10592032	Identifier	exc		10591988	0					
ANR	10592033	Identifier	FDefs		10591988	1					
ANR	10592034	Identifier	F		10591988	1					
ANR	10592035	IfStatement	if ( exc -> maxFunc + 1 != exc -> numFDefs || def -> opc != F )		10591988	6					
ANR	10592036	Condition	exc -> maxFunc + 1 != exc -> numFDefs || def -> opc != F	3871:9:142015:142064	10591988	0	True				
ANR	10592037	OrExpression	exc -> maxFunc + 1 != exc -> numFDefs || def -> opc != F		10591988	0		||			
ANR	10592038	EqualityExpression	exc -> maxFunc + 1 != exc -> numFDefs		10591988	0		!=			
ANR	10592039	AdditiveExpression	exc -> maxFunc + 1		10591988	0		+			
ANR	10592040	PtrMemberAccess	exc -> maxFunc		10591988	0					
ANR	10592041	Identifier	exc		10591988	0					
ANR	10592042	Identifier	maxFunc		10591988	1					
ANR	10592043	PrimaryExpression	1		10591988	1					
ANR	10592044	PtrMemberAccess	exc -> numFDefs		10591988	1					
ANR	10592045	Identifier	exc		10591988	0					
ANR	10592046	Identifier	numFDefs		10591988	1					
ANR	10592047	EqualityExpression	def -> opc != F		10591988	1		!=			
ANR	10592048	PtrMemberAccess	def -> opc		10591988	0					
ANR	10592049	Identifier	def		10591988	0					
ANR	10592050	Identifier	opc		10591988	1					
ANR	10592051	Identifier	F		10591988	1					
ANR	10592052	CompoundStatement		26:6:908:928	10591988	1					
ANR	10592053	IdentifierDeclStatement	TT_DefRecord * limit ;	3874:6:142116:142136	10591988	0	True				
ANR	10592054	IdentifierDecl	* limit		10591988	0					
ANR	10592055	IdentifierDeclType	TT_DefRecord *		10591988	0					
ANR	10592056	Identifier	limit		10591988	1					
ANR	10592057	ExpressionStatement	def = exc -> FDefs	3877:6:142146:142164	10591988	1	True				
ANR	10592058	AssignmentExpression	def = exc -> FDefs		10591988	0		=			
ANR	10592059	Identifier	def		10591988	0					
ANR	10592060	PtrMemberAccess	exc -> FDefs		10591988	1					
ANR	10592061	Identifier	exc		10591988	0					
ANR	10592062	Identifier	FDefs		10591988	1					
ANR	10592063	ExpressionStatement	limit = def + exc -> numFDefs	3878:6:142172:142199	10591988	2	True				
ANR	10592064	AssignmentExpression	limit = def + exc -> numFDefs		10591988	0		=			
ANR	10592065	Identifier	limit		10591988	0					
ANR	10592066	AdditiveExpression	def + exc -> numFDefs		10591988	1		+			
ANR	10592067	Identifier	def		10591988	0					
ANR	10592068	PtrMemberAccess	exc -> numFDefs		10591988	1					
ANR	10592069	Identifier	exc		10591988	0					
ANR	10592070	Identifier	numFDefs		10591988	1					
ANR	10592071	WhileStatement	while ( def < limit && def -> opc != F )		10591988	3					
ANR	10592072	Condition	def < limit && def -> opc != F	3880:14:142216:142243	10591988	0	True				
ANR	10592073	AndExpression	def < limit && def -> opc != F		10591988	0		&&			
ANR	10592074	RelationalExpression	def < limit		10591988	0		<			
ANR	10592075	Identifier	def		10591988	0					
ANR	10592076	Identifier	limit		10591988	1					
ANR	10592077	EqualityExpression	def -> opc != F		10591988	1		!=			
ANR	10592078	PtrMemberAccess	def -> opc		10591988	0					
ANR	10592079	Identifier	def		10591988	0					
ANR	10592080	Identifier	opc		10591988	1					
ANR	10592081	Identifier	F		10591988	1					
ANR	10592082	ExpressionStatement	def ++	3881:8:142255:142260	10591988	1	True				
ANR	10592083	PostIncDecOperationExpression	def ++		10591988	0					
ANR	10592084	Identifier	def		10591988	0					
ANR	10592085	IncDec	++		10591988	1					
ANR	10592086	IfStatement	if ( def == limit )		10591988	4					
ANR	10592087	Condition	def == limit	3883:11:142274:142285	10591988	0	True				
ANR	10592088	EqualityExpression	def == limit		10591988	0		==			
ANR	10592089	Identifier	def		10591988	0					
ANR	10592090	Identifier	limit		10591988	1					
ANR	10592091	GotoStatement	goto Fail ;	3884:8:142297:142306	10591988	1	True				
ANR	10592092	Identifier	Fail		10591988	0					
ANR	10592093	IfStatement	if ( ! def -> active )		10591988	7					
ANR	10592094	Condition	! def -> active	3888:9:142368:142379	10591988	0	True				
ANR	10592095	UnaryOperationExpression	! def -> active		10591988	0					
ANR	10592096	UnaryOperator	!		10591988	0					
ANR	10592097	PtrMemberAccess	def -> active		10591988	1					
ANR	10592098	Identifier	def		10591988	0					
ANR	10592099	Identifier	active		10591988	1					
ANR	10592100	GotoStatement	goto Fail ;	3889:6:142389:142398	10591988	1	True				
ANR	10592101	Identifier	Fail		10591988	0					
ANR	10592102	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && ( ( exc -> iup_called && ( exc -> sph_tweak_flags & SPH_TWEAK_NO_CALL_AFTER_IUP ) ) || ( def -> sph_fdef_flags & SPH_FDEF_VACUFORM_ROUND_1 ) ) )		10591988	8					
ANR	10592103	Condition	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && ( ( exc -> iup_called && ( exc -> sph_tweak_flags & SPH_TWEAK_NO_CALL_AFTER_IUP ) ) || ( def -> sph_fdef_flags & SPH_FDEF_VACUFORM_ROUND_1 ) )	3892:9:142456:142811	10591988	0	True				
ANR	10592104	AndExpression	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && ( ( exc -> iup_called && ( exc -> sph_tweak_flags & SPH_TWEAK_NO_CALL_AFTER_IUP ) ) || ( def -> sph_fdef_flags & SPH_FDEF_VACUFORM_ROUND_1 ) )		10591988	0		&&			
ANR	10592105	Identifier	SUBPIXEL_HINTING_INFINALITY		10591988	0					
ANR	10592106	AndExpression	exc -> ignore_x_mode && ( ( exc -> iup_called && ( exc -> sph_tweak_flags & SPH_TWEAK_NO_CALL_AFTER_IUP ) ) || ( def -> sph_fdef_flags & SPH_FDEF_VACUFORM_ROUND_1 ) )		10591988	1		&&			
ANR	10592107	PtrMemberAccess	exc -> ignore_x_mode		10591988	0					
ANR	10592108	Identifier	exc		10591988	0					
ANR	10592109	Identifier	ignore_x_mode		10591988	1					
ANR	10592110	OrExpression	( exc -> iup_called && ( exc -> sph_tweak_flags & SPH_TWEAK_NO_CALL_AFTER_IUP ) ) || ( def -> sph_fdef_flags & SPH_FDEF_VACUFORM_ROUND_1 )		10591988	1		||			
ANR	10592111	AndExpression	exc -> iup_called && ( exc -> sph_tweak_flags & SPH_TWEAK_NO_CALL_AFTER_IUP )		10591988	0		&&			
ANR	10592112	PtrMemberAccess	exc -> iup_called		10591988	0					
ANR	10592113	Identifier	exc		10591988	0					
ANR	10592114	Identifier	iup_called		10591988	1					
ANR	10592115	BitAndExpression	exc -> sph_tweak_flags & SPH_TWEAK_NO_CALL_AFTER_IUP		10591988	1		&			
ANR	10592116	PtrMemberAccess	exc -> sph_tweak_flags		10591988	0					
ANR	10592117	Identifier	exc		10591988	0					
ANR	10592118	Identifier	sph_tweak_flags		10591988	1					
ANR	10592119	Identifier	SPH_TWEAK_NO_CALL_AFTER_IUP		10591988	1					
ANR	10592120	BitAndExpression	def -> sph_fdef_flags & SPH_FDEF_VACUFORM_ROUND_1		10591988	1		&			
ANR	10592121	PtrMemberAccess	def -> sph_fdef_flags		10591988	0					
ANR	10592122	Identifier	def		10591988	0					
ANR	10592123	Identifier	sph_fdef_flags		10591988	1					
ANR	10592124	Identifier	SPH_FDEF_VACUFORM_ROUND_1		10591988	1					
ANR	10592125	GotoStatement	goto Fail ;	3897:6:142821:142830	10591988	1	True				
ANR	10592126	Identifier	Fail		10591988	0					
ANR	10592127	ElseStatement	else		10591988	0					
ANR	10592128	ExpressionStatement	exc -> sph_in_func_flags = def -> sph_fdef_flags	3899:6:142847:142891	10591988	0	True				
ANR	10592129	AssignmentExpression	exc -> sph_in_func_flags = def -> sph_fdef_flags		10591988	0		=			
ANR	10592130	PtrMemberAccess	exc -> sph_in_func_flags		10591988	0					
ANR	10592131	Identifier	exc		10591988	0					
ANR	10592132	Identifier	sph_in_func_flags		10591988	1					
ANR	10592133	PtrMemberAccess	def -> sph_fdef_flags		10591988	1					
ANR	10592134	Identifier	def		10591988	0					
ANR	10592135	Identifier	sph_fdef_flags		10591988	1					
ANR	10592136	IfStatement	if ( exc -> callTop >= exc -> callSize )		10591988	9					
ANR	10592137	Condition	exc -> callTop >= exc -> callSize	3903:9:142986:143014	10591988	0	True				
ANR	10592138	RelationalExpression	exc -> callTop >= exc -> callSize		10591988	0		>=			
ANR	10592139	PtrMemberAccess	exc -> callTop		10591988	0					
ANR	10592140	Identifier	exc		10591988	0					
ANR	10592141	Identifier	callTop		10591988	1					
ANR	10592142	PtrMemberAccess	exc -> callSize		10591988	1					
ANR	10592143	Identifier	exc		10591988	0					
ANR	10592144	Identifier	callSize		10591988	1					
ANR	10592145	CompoundStatement		56:4:1814:1814	10591988	1					
ANR	10592146	ExpressionStatement	exc -> error = FT_THROW ( Stack_Overflow )	3905:6:143030:143069	10591988	0	True				
ANR	10592147	AssignmentExpression	exc -> error = FT_THROW ( Stack_Overflow )		10591988	0		=			
ANR	10592148	PtrMemberAccess	exc -> error		10591988	0					
ANR	10592149	Identifier	exc		10591988	0					
ANR	10592150	Identifier	error		10591988	1					
ANR	10592151	CallExpression	FT_THROW ( Stack_Overflow )		10591988	1					
ANR	10592152	Callee	FT_THROW		10591988	0					
ANR	10592153	Identifier	FT_THROW		10591988	0					
ANR	10592154	ArgumentList	Stack_Overflow		10591988	1					
ANR	10592155	Argument	Stack_Overflow		10591988	0					
ANR	10592156	Identifier	Stack_Overflow		10591988	0					
ANR	10592157	ReturnStatement	return ;	3906:6:143077:143083	10591988	1	True				
ANR	10592158	ExpressionStatement	pCrec = exc -> callStack + exc -> callTop	3909:4:143096:143133	10591988	10	True				
ANR	10592159	AssignmentExpression	pCrec = exc -> callStack + exc -> callTop		10591988	0		=			
ANR	10592160	Identifier	pCrec		10591988	0					
ANR	10592161	AdditiveExpression	exc -> callStack + exc -> callTop		10591988	1		+			
ANR	10592162	PtrMemberAccess	exc -> callStack		10591988	0					
ANR	10592163	Identifier	exc		10591988	0					
ANR	10592164	Identifier	callStack		10591988	1					
ANR	10592165	PtrMemberAccess	exc -> callTop		10591988	1					
ANR	10592166	Identifier	exc		10591988	0					
ANR	10592167	Identifier	callTop		10591988	1					
ANR	10592168	ExpressionStatement	pCrec -> Caller_Range = exc -> curRange	3911:4:143140:143175	10591988	11	True				
ANR	10592169	AssignmentExpression	pCrec -> Caller_Range = exc -> curRange		10591988	0		=			
ANR	10592170	PtrMemberAccess	pCrec -> Caller_Range		10591988	0					
ANR	10592171	Identifier	pCrec		10591988	0					
ANR	10592172	Identifier	Caller_Range		10591988	1					
ANR	10592173	PtrMemberAccess	exc -> curRange		10591988	1					
ANR	10592174	Identifier	exc		10591988	0					
ANR	10592175	Identifier	curRange		10591988	1					
ANR	10592176	ExpressionStatement	pCrec -> Caller_IP = exc -> IP + 1	3912:4:143181:143214	10591988	12	True				
ANR	10592177	AssignmentExpression	pCrec -> Caller_IP = exc -> IP + 1		10591988	0		=			
ANR	10592178	PtrMemberAccess	pCrec -> Caller_IP		10591988	0					
ANR	10592179	Identifier	pCrec		10591988	0					
ANR	10592180	Identifier	Caller_IP		10591988	1					
ANR	10592181	AdditiveExpression	exc -> IP + 1		10591988	1		+			
ANR	10592182	PtrMemberAccess	exc -> IP		10591988	0					
ANR	10592183	Identifier	exc		10591988	0					
ANR	10592184	Identifier	IP		10591988	1					
ANR	10592185	PrimaryExpression	1		10591988	1					
ANR	10592186	ExpressionStatement	pCrec -> Cur_Count = 1	3913:4:143220:143243	10591988	13	True				
ANR	10592187	AssignmentExpression	pCrec -> Cur_Count = 1		10591988	0		=			
ANR	10592188	PtrMemberAccess	pCrec -> Cur_Count		10591988	0					
ANR	10592189	Identifier	pCrec		10591988	0					
ANR	10592190	Identifier	Cur_Count		10591988	1					
ANR	10592191	PrimaryExpression	1		10591988	1					
ANR	10592192	ExpressionStatement	pCrec -> Def = def	3914:4:143249:143274	10591988	14	True				
ANR	10592193	AssignmentExpression	pCrec -> Def = def		10591988	0		=			
ANR	10592194	PtrMemberAccess	pCrec -> Def		10591988	0					
ANR	10592195	Identifier	pCrec		10591988	0					
ANR	10592196	Identifier	Def		10591988	1					
ANR	10592197	Identifier	def		10591988	1					
ANR	10592198	ExpressionStatement	exc -> callTop ++	3916:4:143281:143295	10591988	15	True				
ANR	10592199	PostIncDecOperationExpression	exc -> callTop ++		10591988	0					
ANR	10592200	PtrMemberAccess	exc -> callTop		10591988	0					
ANR	10592201	Identifier	exc		10591988	0					
ANR	10592202	Identifier	callTop		10591988	1					
ANR	10592203	IncDec	++		10591988	1					
ANR	10592204	ExpressionStatement	"Ins_Goto_CodeRange ( exc , def -> range , def -> start )"	3918:4:143302:143351	10591988	16	True				
ANR	10592205	CallExpression	"Ins_Goto_CodeRange ( exc , def -> range , def -> start )"		10591988	0					
ANR	10592206	Callee	Ins_Goto_CodeRange		10591988	0					
ANR	10592207	Identifier	Ins_Goto_CodeRange		10591988	0					
ANR	10592208	ArgumentList	exc		10591988	1					
ANR	10592209	Argument	exc		10591988	0					
ANR	10592210	Identifier	exc		10591988	0					
ANR	10592211	Argument	def -> range		10591988	1					
ANR	10592212	PtrMemberAccess	def -> range		10591988	0					
ANR	10592213	Identifier	def		10591988	0					
ANR	10592214	Identifier	range		10591988	1					
ANR	10592215	Argument	def -> start		10591988	2					
ANR	10592216	PtrMemberAccess	def -> start		10591988	0					
ANR	10592217	Identifier	def		10591988	0					
ANR	10592218	Identifier	start		10591988	1					
ANR	10592219	ExpressionStatement	exc -> step_ins = FALSE	3920:4:143358:143379	10591988	17	True				
ANR	10592220	AssignmentExpression	exc -> step_ins = FALSE		10591988	0		=			
ANR	10592221	PtrMemberAccess	exc -> step_ins		10591988	0					
ANR	10592222	Identifier	exc		10591988	0					
ANR	10592223	Identifier	step_ins		10591988	1					
ANR	10592224	Identifier	FALSE		10591988	1					
ANR	10592225	ReturnStatement	return ;	3922:4:143386:143392	10591988	18	True				
ANR	10592226	Label	Fail :	3924:2:143397:143401	10591988	19	True				
ANR	10592227	Identifier	Fail		10591988	0					
ANR	10592228	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	3925:4:143407:143449	10591988	20	True				
ANR	10592229	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10591988	0		=			
ANR	10592230	PtrMemberAccess	exc -> error		10591988	0					
ANR	10592231	Identifier	exc		10591988	0					
ANR	10592232	Identifier	error		10591988	1					
ANR	10592233	CallExpression	FT_THROW ( Invalid_Reference )		10591988	1					
ANR	10592234	Callee	FT_THROW		10591988	0					
ANR	10592235	Identifier	FT_THROW		10591988	0					
ANR	10592236	ArgumentList	Invalid_Reference		10591988	1					
ANR	10592237	Argument	Invalid_Reference		10591988	0					
ANR	10592238	Identifier	Invalid_Reference		10591988	0					
ANR	10592239	ReturnType	static void		10591988	1					
ANR	10592240	Identifier	Ins_CALL		10591988	2					
ANR	10592241	ParameterList	"TT_ExecContext exc , FT_Long * args"		10591988	3					
ANR	10592242	Parameter	TT_ExecContext exc	3847:12:141149:141167	10591988	0	True				
ANR	10592243	ParameterType	TT_ExecContext		10591988	0					
ANR	10592244	Identifier	exc		10591988	1					
ANR	10592245	Parameter	FT_Long * args	3848:12:141182:141201	10591988	1	True				
ANR	10592246	ParameterType	FT_Long *		10591988	0					
ANR	10592247	Identifier	args		10591988	1					
ANR	10592248	CFGEntryNode	ENTRY		10591988		True				
ANR	10592249	CFGExitNode	EXIT		10591988		True				
ANR	10592250	Symbol	def -> start		10591988						
ANR	10592251	Symbol	def		10591988						
ANR	10592252	Symbol	* exc		10591988						
ANR	10592253	Symbol	pCrec -> Caller_IP		10591988						
ANR	10592254	Symbol	F		10591988						
ANR	10592255	Symbol	exc -> maxFunc		10591988						
ANR	10592256	Symbol	exc -> numFDefs		10591988						
ANR	10592257	Symbol	BOUNDSL		10591988						
ANR	10592258	Symbol	* pCrec		10591988						
ANR	10592259	Symbol	* args		10591988						
ANR	10592260	Symbol	* def		10591988						
ANR	10592261	Symbol	SUBPIXEL_HINTING_INFINALITY		10591988						
ANR	10592262	Symbol	exc		10591988						
ANR	10592263	Symbol	SPH_TWEAK_NO_CALL_AFTER_IUP		10591988						
ANR	10592264	Symbol	Stack_Overflow		10591988						
ANR	10592265	Symbol	Invalid_Reference		10591988						
ANR	10592266	Symbol	exc -> sph_in_func_flags		10591988						
ANR	10592267	Symbol	pCrec		10591988						
ANR	10592268	Symbol	limit		10591988						
ANR	10592269	Symbol	exc -> sph_tweak_flags		10591988						
ANR	10592270	Symbol	exc -> callSize		10591988						
ANR	10592271	Symbol	exc -> error		10591988						
ANR	10592272	Symbol	pCrec -> Cur_Count		10591988						
ANR	10592273	Symbol	def -> opc		10591988						
ANR	10592274	Symbol	exc -> ignore_x_mode		10591988						
ANR	10592275	Symbol	def -> range		10591988						
ANR	10592276	Symbol	pCrec -> Caller_Range		10591988						
ANR	10592277	Symbol	exc -> IP		10591988						
ANR	10592278	Symbol	def -> active		10591988						
ANR	10592279	Symbol	exc -> curRange		10591988						
ANR	10592280	Symbol	exc -> step_ins		10591988						
ANR	10592281	Symbol	FT_THROW		10591988						
ANR	10592282	Symbol	args		10591988						
ANR	10592283	Symbol	exc -> callTop		10591988						
ANR	10592284	Symbol	exc -> iup_called		10591988						
ANR	10592285	Symbol	SPH_FDEF_VACUFORM_ROUND_1		10591988						
ANR	10592286	Symbol	FALSE		10591988						
ANR	10592287	Symbol	exc -> FDefs		10591988						
ANR	10592288	Symbol	def -> sph_fdef_flags		10591988						
ANR	10592289	Symbol	exc -> callStack		10591988						
ANR	10592290	Symbol	pCrec -> Def		10591988						
ANR	10592291	Function	Ins_LOOPCALL	3935:2:143927:146308							
ANR	10592292	FunctionDef	"Ins_LOOPCALL (TT_ExecContext exc , FT_Long * args)"		10592291	0					
ANR	10592293	CompoundStatement		3938:2:144017:146308	10592291	0					
ANR	10592294	IdentifierDeclStatement	FT_ULong F ;	3939:4:144023:144039	10592291	0	True				
ANR	10592295	IdentifierDecl	F		10592291	0					
ANR	10592296	IdentifierDeclType	FT_ULong		10592291	0					
ANR	10592297	Identifier	F		10592291	1					
ANR	10592298	IdentifierDeclStatement	TT_CallRec * pCrec ;	3940:4:144045:144065	10592291	1	True				
ANR	10592299	IdentifierDecl	* pCrec		10592291	0					
ANR	10592300	IdentifierDeclType	TT_CallRec *		10592291	0					
ANR	10592301	Identifier	pCrec		10592291	1					
ANR	10592302	IdentifierDeclStatement	TT_DefRecord * def ;	3941:4:144071:144089	10592291	2	True				
ANR	10592303	IdentifierDecl	* def		10592291	0					
ANR	10592304	IdentifierDeclType	TT_DefRecord *		10592291	0					
ANR	10592305	Identifier	def		10592291	1					
ANR	10592306	ExpressionStatement	F = ( FT_ULong ) args [ 1 ]	3945:4:144137:144158	10592291	3	True				
ANR	10592307	AssignmentExpression	F = ( FT_ULong ) args [ 1 ]		10592291	0		=			
ANR	10592308	Identifier	F		10592291	0					
ANR	10592309	CastExpression	( FT_ULong ) args [ 1 ]		10592291	1					
ANR	10592310	CastTarget	FT_ULong		10592291	0					
ANR	10592311	ArrayIndexing	args [ 1 ]		10592291	1					
ANR	10592312	Identifier	args		10592291	0					
ANR	10592313	PrimaryExpression	1		10592291	1					
ANR	10592314	IfStatement	"if ( BOUNDSL ( F , exc -> maxFunc + 1 ) )"		10592291	4					
ANR	10592315	Condition	"BOUNDSL ( F , exc -> maxFunc + 1 )"	3946:9:144169:144198	10592291	0	True				
ANR	10592316	CallExpression	"BOUNDSL ( F , exc -> maxFunc + 1 )"		10592291	0					
ANR	10592317	Callee	BOUNDSL		10592291	0					
ANR	10592318	Identifier	BOUNDSL		10592291	0					
ANR	10592319	ArgumentList	F		10592291	1					
ANR	10592320	Argument	F		10592291	0					
ANR	10592321	Identifier	F		10592291	0					
ANR	10592322	Argument	exc -> maxFunc + 1		10592291	1					
ANR	10592323	AdditiveExpression	exc -> maxFunc + 1		10592291	0		+			
ANR	10592324	PtrMemberAccess	exc -> maxFunc		10592291	0					
ANR	10592325	Identifier	exc		10592291	0					
ANR	10592326	Identifier	maxFunc		10592291	1					
ANR	10592327	PrimaryExpression	1		10592291	1					
ANR	10592328	GotoStatement	goto Fail ;	3947:6:144208:144217	10592291	1	True				
ANR	10592329	Identifier	Fail		10592291	0					
ANR	10592330	ExpressionStatement	def = exc -> FDefs + F	3958:4:144793:144813	10592291	5	True				
ANR	10592331	AssignmentExpression	def = exc -> FDefs + F		10592291	0		=			
ANR	10592332	Identifier	def		10592291	0					
ANR	10592333	AdditiveExpression	exc -> FDefs + F		10592291	1		+			
ANR	10592334	PtrMemberAccess	exc -> FDefs		10592291	0					
ANR	10592335	Identifier	exc		10592291	0					
ANR	10592336	Identifier	FDefs		10592291	1					
ANR	10592337	Identifier	F		10592291	1					
ANR	10592338	IfStatement	if ( exc -> maxFunc + 1 != exc -> numFDefs || def -> opc != F )		10592291	6					
ANR	10592339	Condition	exc -> maxFunc + 1 != exc -> numFDefs || def -> opc != F	3959:9:144824:144873	10592291	0	True				
ANR	10592340	OrExpression	exc -> maxFunc + 1 != exc -> numFDefs || def -> opc != F		10592291	0		||			
ANR	10592341	EqualityExpression	exc -> maxFunc + 1 != exc -> numFDefs		10592291	0		!=			
ANR	10592342	AdditiveExpression	exc -> maxFunc + 1		10592291	0		+			
ANR	10592343	PtrMemberAccess	exc -> maxFunc		10592291	0					
ANR	10592344	Identifier	exc		10592291	0					
ANR	10592345	Identifier	maxFunc		10592291	1					
ANR	10592346	PrimaryExpression	1		10592291	1					
ANR	10592347	PtrMemberAccess	exc -> numFDefs		10592291	1					
ANR	10592348	Identifier	exc		10592291	0					
ANR	10592349	Identifier	numFDefs		10592291	1					
ANR	10592350	EqualityExpression	def -> opc != F		10592291	1		!=			
ANR	10592351	PtrMemberAccess	def -> opc		10592291	0					
ANR	10592352	Identifier	def		10592291	0					
ANR	10592353	Identifier	opc		10592291	1					
ANR	10592354	Identifier	F		10592291	1					
ANR	10592355	CompoundStatement		25:6:907:927	10592291	1					
ANR	10592356	IdentifierDeclStatement	TT_DefRecord * limit ;	3962:6:144925:144945	10592291	0	True				
ANR	10592357	IdentifierDecl	* limit		10592291	0					
ANR	10592358	IdentifierDeclType	TT_DefRecord *		10592291	0					
ANR	10592359	Identifier	limit		10592291	1					
ANR	10592360	ExpressionStatement	def = exc -> FDefs	3965:6:144955:144973	10592291	1	True				
ANR	10592361	AssignmentExpression	def = exc -> FDefs		10592291	0		=			
ANR	10592362	Identifier	def		10592291	0					
ANR	10592363	PtrMemberAccess	exc -> FDefs		10592291	1					
ANR	10592364	Identifier	exc		10592291	0					
ANR	10592365	Identifier	FDefs		10592291	1					
ANR	10592366	ExpressionStatement	limit = def + exc -> numFDefs	3966:6:144981:145008	10592291	2	True				
ANR	10592367	AssignmentExpression	limit = def + exc -> numFDefs		10592291	0		=			
ANR	10592368	Identifier	limit		10592291	0					
ANR	10592369	AdditiveExpression	def + exc -> numFDefs		10592291	1		+			
ANR	10592370	Identifier	def		10592291	0					
ANR	10592371	PtrMemberAccess	exc -> numFDefs		10592291	1					
ANR	10592372	Identifier	exc		10592291	0					
ANR	10592373	Identifier	numFDefs		10592291	1					
ANR	10592374	WhileStatement	while ( def < limit && def -> opc != F )		10592291	3					
ANR	10592375	Condition	def < limit && def -> opc != F	3968:14:145025:145052	10592291	0	True				
ANR	10592376	AndExpression	def < limit && def -> opc != F		10592291	0		&&			
ANR	10592377	RelationalExpression	def < limit		10592291	0		<			
ANR	10592378	Identifier	def		10592291	0					
ANR	10592379	Identifier	limit		10592291	1					
ANR	10592380	EqualityExpression	def -> opc != F		10592291	1		!=			
ANR	10592381	PtrMemberAccess	def -> opc		10592291	0					
ANR	10592382	Identifier	def		10592291	0					
ANR	10592383	Identifier	opc		10592291	1					
ANR	10592384	Identifier	F		10592291	1					
ANR	10592385	ExpressionStatement	def ++	3969:8:145064:145069	10592291	1	True				
ANR	10592386	PostIncDecOperationExpression	def ++		10592291	0					
ANR	10592387	Identifier	def		10592291	0					
ANR	10592388	IncDec	++		10592291	1					
ANR	10592389	IfStatement	if ( def == limit )		10592291	4					
ANR	10592390	Condition	def == limit	3971:11:145083:145094	10592291	0	True				
ANR	10592391	EqualityExpression	def == limit		10592291	0		==			
ANR	10592392	Identifier	def		10592291	0					
ANR	10592393	Identifier	limit		10592291	1					
ANR	10592394	GotoStatement	goto Fail ;	3972:8:145106:145115	10592291	1	True				
ANR	10592395	Identifier	Fail		10592291	0					
ANR	10592396	IfStatement	if ( ! def -> active )		10592291	7					
ANR	10592397	Condition	! def -> active	3976:9:145177:145188	10592291	0	True				
ANR	10592398	UnaryOperationExpression	! def -> active		10592291	0					
ANR	10592399	UnaryOperator	!		10592291	0					
ANR	10592400	PtrMemberAccess	def -> active		10592291	1					
ANR	10592401	Identifier	def		10592291	0					
ANR	10592402	Identifier	active		10592291	1					
ANR	10592403	GotoStatement	goto Fail ;	3977:6:145198:145207	10592291	1	True				
ANR	10592404	Identifier	Fail		10592291	0					
ANR	10592405	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && ( def -> sph_fdef_flags & SPH_FDEF_VACUFORM_ROUND_1 ) )		10592291	8					
ANR	10592406	Condition	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && ( def -> sph_fdef_flags & SPH_FDEF_VACUFORM_ROUND_1 )	3980:9:145265:145443	10592291	0	True				
ANR	10592407	AndExpression	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && ( def -> sph_fdef_flags & SPH_FDEF_VACUFORM_ROUND_1 )		10592291	0		&&			
ANR	10592408	Identifier	SUBPIXEL_HINTING_INFINALITY		10592291	0					
ANR	10592409	AndExpression	exc -> ignore_x_mode && ( def -> sph_fdef_flags & SPH_FDEF_VACUFORM_ROUND_1 )		10592291	1		&&			
ANR	10592410	PtrMemberAccess	exc -> ignore_x_mode		10592291	0					
ANR	10592411	Identifier	exc		10592291	0					
ANR	10592412	Identifier	ignore_x_mode		10592291	1					
ANR	10592413	BitAndExpression	def -> sph_fdef_flags & SPH_FDEF_VACUFORM_ROUND_1		10592291	1		&			
ANR	10592414	PtrMemberAccess	def -> sph_fdef_flags		10592291	0					
ANR	10592415	Identifier	def		10592291	0					
ANR	10592416	Identifier	sph_fdef_flags		10592291	1					
ANR	10592417	Identifier	SPH_FDEF_VACUFORM_ROUND_1		10592291	1					
ANR	10592418	GotoStatement	goto Fail ;	3983:6:145453:145462	10592291	1	True				
ANR	10592419	Identifier	Fail		10592291	0					
ANR	10592420	ElseStatement	else		10592291	0					
ANR	10592421	ExpressionStatement	exc -> sph_in_func_flags = def -> sph_fdef_flags	3985:6:145479:145523	10592291	0	True				
ANR	10592422	AssignmentExpression	exc -> sph_in_func_flags = def -> sph_fdef_flags		10592291	0		=			
ANR	10592423	PtrMemberAccess	exc -> sph_in_func_flags		10592291	0					
ANR	10592424	Identifier	exc		10592291	0					
ANR	10592425	Identifier	sph_in_func_flags		10592291	1					
ANR	10592426	PtrMemberAccess	def -> sph_fdef_flags		10592291	1					
ANR	10592427	Identifier	def		10592291	0					
ANR	10592428	Identifier	sph_fdef_flags		10592291	1					
ANR	10592429	IfStatement	if ( exc -> callTop >= exc -> callSize )		10592291	9					
ANR	10592430	Condition	exc -> callTop >= exc -> callSize	3989:9:145609:145637	10592291	0	True				
ANR	10592431	RelationalExpression	exc -> callTop >= exc -> callSize		10592291	0		>=			
ANR	10592432	PtrMemberAccess	exc -> callTop		10592291	0					
ANR	10592433	Identifier	exc		10592291	0					
ANR	10592434	Identifier	callTop		10592291	1					
ANR	10592435	PtrMemberAccess	exc -> callSize		10592291	1					
ANR	10592436	Identifier	exc		10592291	0					
ANR	10592437	Identifier	callSize		10592291	1					
ANR	10592438	CompoundStatement		53:4:1627:1627	10592291	1					
ANR	10592439	ExpressionStatement	exc -> error = FT_THROW ( Stack_Overflow )	3991:6:145653:145692	10592291	0	True				
ANR	10592440	AssignmentExpression	exc -> error = FT_THROW ( Stack_Overflow )		10592291	0		=			
ANR	10592441	PtrMemberAccess	exc -> error		10592291	0					
ANR	10592442	Identifier	exc		10592291	0					
ANR	10592443	Identifier	error		10592291	1					
ANR	10592444	CallExpression	FT_THROW ( Stack_Overflow )		10592291	1					
ANR	10592445	Callee	FT_THROW		10592291	0					
ANR	10592446	Identifier	FT_THROW		10592291	0					
ANR	10592447	ArgumentList	Stack_Overflow		10592291	1					
ANR	10592448	Argument	Stack_Overflow		10592291	0					
ANR	10592449	Identifier	Stack_Overflow		10592291	0					
ANR	10592450	ReturnStatement	return ;	3992:6:145700:145706	10592291	1	True				
ANR	10592451	IfStatement	if ( args [ 0 ] > 0 )		10592291	10					
ANR	10592452	Condition	args [ 0 ] > 0	3995:9:145724:145734	10592291	0	True				
ANR	10592453	RelationalExpression	args [ 0 ] > 0		10592291	0		>			
ANR	10592454	ArrayIndexing	args [ 0 ]		10592291	0					
ANR	10592455	Identifier	args		10592291	0					
ANR	10592456	PrimaryExpression	0		10592291	1					
ANR	10592457	PrimaryExpression	0		10592291	1					
ANR	10592458	CompoundStatement		59:4:1724:1724	10592291	1					
ANR	10592459	ExpressionStatement	pCrec = exc -> callStack + exc -> callTop	3997:6:145750:145787	10592291	0	True				
ANR	10592460	AssignmentExpression	pCrec = exc -> callStack + exc -> callTop		10592291	0		=			
ANR	10592461	Identifier	pCrec		10592291	0					
ANR	10592462	AdditiveExpression	exc -> callStack + exc -> callTop		10592291	1		+			
ANR	10592463	PtrMemberAccess	exc -> callStack		10592291	0					
ANR	10592464	Identifier	exc		10592291	0					
ANR	10592465	Identifier	callStack		10592291	1					
ANR	10592466	PtrMemberAccess	exc -> callTop		10592291	1					
ANR	10592467	Identifier	exc		10592291	0					
ANR	10592468	Identifier	callTop		10592291	1					
ANR	10592469	ExpressionStatement	pCrec -> Caller_Range = exc -> curRange	3999:6:145796:145831	10592291	1	True				
ANR	10592470	AssignmentExpression	pCrec -> Caller_Range = exc -> curRange		10592291	0		=			
ANR	10592471	PtrMemberAccess	pCrec -> Caller_Range		10592291	0					
ANR	10592472	Identifier	pCrec		10592291	0					
ANR	10592473	Identifier	Caller_Range		10592291	1					
ANR	10592474	PtrMemberAccess	exc -> curRange		10592291	1					
ANR	10592475	Identifier	exc		10592291	0					
ANR	10592476	Identifier	curRange		10592291	1					
ANR	10592477	ExpressionStatement	pCrec -> Caller_IP = exc -> IP + 1	4000:6:145839:145872	10592291	2	True				
ANR	10592478	AssignmentExpression	pCrec -> Caller_IP = exc -> IP + 1		10592291	0		=			
ANR	10592479	PtrMemberAccess	pCrec -> Caller_IP		10592291	0					
ANR	10592480	Identifier	pCrec		10592291	0					
ANR	10592481	Identifier	Caller_IP		10592291	1					
ANR	10592482	AdditiveExpression	exc -> IP + 1		10592291	1		+			
ANR	10592483	PtrMemberAccess	exc -> IP		10592291	0					
ANR	10592484	Identifier	exc		10592291	0					
ANR	10592485	Identifier	IP		10592291	1					
ANR	10592486	PrimaryExpression	1		10592291	1					
ANR	10592487	ExpressionStatement	pCrec -> Cur_Count = ( FT_Int ) args [ 0 ]	4001:6:145880:145917	10592291	3	True				
ANR	10592488	AssignmentExpression	pCrec -> Cur_Count = ( FT_Int ) args [ 0 ]		10592291	0		=			
ANR	10592489	PtrMemberAccess	pCrec -> Cur_Count		10592291	0					
ANR	10592490	Identifier	pCrec		10592291	0					
ANR	10592491	Identifier	Cur_Count		10592291	1					
ANR	10592492	CastExpression	( FT_Int ) args [ 0 ]		10592291	1					
ANR	10592493	CastTarget	FT_Int		10592291	0					
ANR	10592494	ArrayIndexing	args [ 0 ]		10592291	1					
ANR	10592495	Identifier	args		10592291	0					
ANR	10592496	PrimaryExpression	0		10592291	1					
ANR	10592497	ExpressionStatement	pCrec -> Def = def	4002:6:145925:145950	10592291	4	True				
ANR	10592498	AssignmentExpression	pCrec -> Def = def		10592291	0		=			
ANR	10592499	PtrMemberAccess	pCrec -> Def		10592291	0					
ANR	10592500	Identifier	pCrec		10592291	0					
ANR	10592501	Identifier	Def		10592291	1					
ANR	10592502	Identifier	def		10592291	1					
ANR	10592503	ExpressionStatement	exc -> callTop ++	4004:6:145959:145973	10592291	5	True				
ANR	10592504	PostIncDecOperationExpression	exc -> callTop ++		10592291	0					
ANR	10592505	PtrMemberAccess	exc -> callTop		10592291	0					
ANR	10592506	Identifier	exc		10592291	0					
ANR	10592507	Identifier	callTop		10592291	1					
ANR	10592508	IncDec	++		10592291	1					
ANR	10592509	ExpressionStatement	"Ins_Goto_CodeRange ( exc , def -> range , def -> start )"	4006:6:145982:146031	10592291	6	True				
ANR	10592510	CallExpression	"Ins_Goto_CodeRange ( exc , def -> range , def -> start )"		10592291	0					
ANR	10592511	Callee	Ins_Goto_CodeRange		10592291	0					
ANR	10592512	Identifier	Ins_Goto_CodeRange		10592291	0					
ANR	10592513	ArgumentList	exc		10592291	1					
ANR	10592514	Argument	exc		10592291	0					
ANR	10592515	Identifier	exc		10592291	0					
ANR	10592516	Argument	def -> range		10592291	1					
ANR	10592517	PtrMemberAccess	def -> range		10592291	0					
ANR	10592518	Identifier	def		10592291	0					
ANR	10592519	Identifier	range		10592291	1					
ANR	10592520	Argument	def -> start		10592291	2					
ANR	10592521	PtrMemberAccess	def -> start		10592291	0					
ANR	10592522	Identifier	def		10592291	0					
ANR	10592523	Identifier	start		10592291	1					
ANR	10592524	ExpressionStatement	exc -> step_ins = FALSE	4008:6:146040:146061	10592291	7	True				
ANR	10592525	AssignmentExpression	exc -> step_ins = FALSE		10592291	0		=			
ANR	10592526	PtrMemberAccess	exc -> step_ins		10592291	0					
ANR	10592527	Identifier	exc		10592291	0					
ANR	10592528	Identifier	step_ins		10592291	1					
ANR	10592529	Identifier	FALSE		10592291	1					
ANR	10592530	ExpressionStatement	exc -> loopcall_counter += ( FT_ULong ) args [ 0 ]	4010:6:146070:146112	10592291	8	True				
ANR	10592531	AssignmentExpression	exc -> loopcall_counter += ( FT_ULong ) args [ 0 ]		10592291	0		+=			
ANR	10592532	PtrMemberAccess	exc -> loopcall_counter		10592291	0					
ANR	10592533	Identifier	exc		10592291	0					
ANR	10592534	Identifier	loopcall_counter		10592291	1					
ANR	10592535	CastExpression	( FT_ULong ) args [ 0 ]		10592291	1					
ANR	10592536	CastTarget	FT_ULong		10592291	0					
ANR	10592537	ArrayIndexing	args [ 0 ]		10592291	1					
ANR	10592538	Identifier	args		10592291	0					
ANR	10592539	PrimaryExpression	0		10592291	1					
ANR	10592540	IfStatement	if ( exc -> loopcall_counter > exc -> loopcall_counter_max )		10592291	9					
ANR	10592541	Condition	exc -> loopcall_counter > exc -> loopcall_counter_max	4011:11:146125:146173	10592291	0	True				
ANR	10592542	RelationalExpression	exc -> loopcall_counter > exc -> loopcall_counter_max		10592291	0		>			
ANR	10592543	PtrMemberAccess	exc -> loopcall_counter		10592291	0					
ANR	10592544	Identifier	exc		10592291	0					
ANR	10592545	Identifier	loopcall_counter		10592291	1					
ANR	10592546	PtrMemberAccess	exc -> loopcall_counter_max		10592291	1					
ANR	10592547	Identifier	exc		10592291	0					
ANR	10592548	Identifier	loopcall_counter_max		10592291	1					
ANR	10592549	ExpressionStatement	exc -> error = FT_THROW ( Execution_Too_Long )	4012:8:146185:146228	10592291	1	True				
ANR	10592550	AssignmentExpression	exc -> error = FT_THROW ( Execution_Too_Long )		10592291	0		=			
ANR	10592551	PtrMemberAccess	exc -> error		10592291	0					
ANR	10592552	Identifier	exc		10592291	0					
ANR	10592553	Identifier	error		10592291	1					
ANR	10592554	CallExpression	FT_THROW ( Execution_Too_Long )		10592291	1					
ANR	10592555	Callee	FT_THROW		10592291	0					
ANR	10592556	Identifier	FT_THROW		10592291	0					
ANR	10592557	ArgumentList	Execution_Too_Long		10592291	1					
ANR	10592558	Argument	Execution_Too_Long		10592291	0					
ANR	10592559	Identifier	Execution_Too_Long		10592291	0					
ANR	10592560	ReturnStatement	return ;	4015:4:146241:146247	10592291	11	True				
ANR	10592561	Label	Fail :	4017:2:146252:146256	10592291	12	True				
ANR	10592562	Identifier	Fail		10592291	0					
ANR	10592563	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	4018:4:146262:146304	10592291	13	True				
ANR	10592564	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10592291	0		=			
ANR	10592565	PtrMemberAccess	exc -> error		10592291	0					
ANR	10592566	Identifier	exc		10592291	0					
ANR	10592567	Identifier	error		10592291	1					
ANR	10592568	CallExpression	FT_THROW ( Invalid_Reference )		10592291	1					
ANR	10592569	Callee	FT_THROW		10592291	0					
ANR	10592570	Identifier	FT_THROW		10592291	0					
ANR	10592571	ArgumentList	Invalid_Reference		10592291	1					
ANR	10592572	Argument	Invalid_Reference		10592291	0					
ANR	10592573	Identifier	Invalid_Reference		10592291	0					
ANR	10592574	ReturnType	static void		10592291	1					
ANR	10592575	Identifier	Ins_LOOPCALL		10592291	2					
ANR	10592576	ParameterList	"TT_ExecContext exc , FT_Long * args"		10592291	3					
ANR	10592577	Parameter	TT_ExecContext exc	3936:16:143955:143973	10592291	0	True				
ANR	10592578	ParameterType	TT_ExecContext		10592291	0					
ANR	10592579	Identifier	exc		10592291	1					
ANR	10592580	Parameter	FT_Long * args	3937:16:143992:144011	10592291	1	True				
ANR	10592581	ParameterType	FT_Long *		10592291	0					
ANR	10592582	Identifier	args		10592291	1					
ANR	10592583	CFGEntryNode	ENTRY		10592291		True				
ANR	10592584	CFGExitNode	EXIT		10592291		True				
ANR	10592585	Symbol	def -> start		10592291						
ANR	10592586	Symbol	def		10592291						
ANR	10592587	Symbol	* exc		10592291						
ANR	10592588	Symbol	pCrec -> Caller_IP		10592291						
ANR	10592589	Symbol	F		10592291						
ANR	10592590	Symbol	exc -> maxFunc		10592291						
ANR	10592591	Symbol	exc -> numFDefs		10592291						
ANR	10592592	Symbol	BOUNDSL		10592291						
ANR	10592593	Symbol	* pCrec		10592291						
ANR	10592594	Symbol	exc -> loopcall_counter_max		10592291						
ANR	10592595	Symbol	* args		10592291						
ANR	10592596	Symbol	* def		10592291						
ANR	10592597	Symbol	SUBPIXEL_HINTING_INFINALITY		10592291						
ANR	10592598	Symbol	exc		10592291						
ANR	10592599	Symbol	Stack_Overflow		10592291						
ANR	10592600	Symbol	exc -> loopcall_counter		10592291						
ANR	10592601	Symbol	Invalid_Reference		10592291						
ANR	10592602	Symbol	exc -> sph_in_func_flags		10592291						
ANR	10592603	Symbol	pCrec		10592291						
ANR	10592604	Symbol	limit		10592291						
ANR	10592605	Symbol	exc -> callSize		10592291						
ANR	10592606	Symbol	exc -> error		10592291						
ANR	10592607	Symbol	pCrec -> Cur_Count		10592291						
ANR	10592608	Symbol	def -> opc		10592291						
ANR	10592609	Symbol	exc -> ignore_x_mode		10592291						
ANR	10592610	Symbol	def -> range		10592291						
ANR	10592611	Symbol	pCrec -> Caller_Range		10592291						
ANR	10592612	Symbol	Execution_Too_Long		10592291						
ANR	10592613	Symbol	exc -> IP		10592291						
ANR	10592614	Symbol	def -> active		10592291						
ANR	10592615	Symbol	exc -> curRange		10592291						
ANR	10592616	Symbol	exc -> step_ins		10592291						
ANR	10592617	Symbol	FT_THROW		10592291						
ANR	10592618	Symbol	args		10592291						
ANR	10592619	Symbol	exc -> callTop		10592291						
ANR	10592620	Symbol	SPH_FDEF_VACUFORM_ROUND_1		10592291						
ANR	10592621	Symbol	FALSE		10592291						
ANR	10592622	Symbol	exc -> FDefs		10592291						
ANR	10592623	Symbol	def -> sph_fdef_flags		10592291						
ANR	10592624	Symbol	exc -> callStack		10592291						
ANR	10592625	Symbol	pCrec -> Def		10592291						
ANR	10592626	Function	Ins_IDEF	4028:2:146782:148353							
ANR	10592627	FunctionDef	"Ins_IDEF (TT_ExecContext exc , FT_Long * args)"		10592626	0					
ANR	10592628	CompoundStatement		4031:2:146864:148353	10592626	0					
ANR	10592629	IdentifierDeclStatement	TT_DefRecord * def ;	4032:4:146870:146888	10592626	0	True				
ANR	10592630	IdentifierDecl	* def		10592626	0					
ANR	10592631	IdentifierDeclType	TT_DefRecord *		10592626	0					
ANR	10592632	Identifier	def		10592626	1					
ANR	10592633	IdentifierDeclStatement	TT_DefRecord * limit ;	4033:4:146894:146914	10592626	1	True				
ANR	10592634	IdentifierDecl	* limit		10592626	0					
ANR	10592635	IdentifierDeclType	TT_DefRecord *		10592626	0					
ANR	10592636	Identifier	limit		10592626	1					
ANR	10592637	IfStatement	if ( exc -> curRange == tt_coderange_glyph )		10592626	2					
ANR	10592638	Condition	exc -> curRange == tt_coderange_glyph	4037:9:146977:147011	10592626	0	True				
ANR	10592639	EqualityExpression	exc -> curRange == tt_coderange_glyph		10592626	0		==			
ANR	10592640	PtrMemberAccess	exc -> curRange		10592626	0					
ANR	10592641	Identifier	exc		10592626	0					
ANR	10592642	Identifier	curRange		10592626	1					
ANR	10592643	Identifier	tt_coderange_glyph		10592626	1					
ANR	10592644	CompoundStatement		8:4:154:154	10592626	1					
ANR	10592645	ExpressionStatement	exc -> error = FT_THROW ( DEF_In_Glyf_Bytecode )	4039:6:147027:147072	10592626	0	True				
ANR	10592646	AssignmentExpression	exc -> error = FT_THROW ( DEF_In_Glyf_Bytecode )		10592626	0		=			
ANR	10592647	PtrMemberAccess	exc -> error		10592626	0					
ANR	10592648	Identifier	exc		10592626	0					
ANR	10592649	Identifier	error		10592626	1					
ANR	10592650	CallExpression	FT_THROW ( DEF_In_Glyf_Bytecode )		10592626	1					
ANR	10592651	Callee	FT_THROW		10592626	0					
ANR	10592652	Identifier	FT_THROW		10592626	0					
ANR	10592653	ArgumentList	DEF_In_Glyf_Bytecode		10592626	1					
ANR	10592654	Argument	DEF_In_Glyf_Bytecode		10592626	0					
ANR	10592655	Identifier	DEF_In_Glyf_Bytecode		10592626	0					
ANR	10592656	ReturnStatement	return ;	4040:6:147080:147086	10592626	1	True				
ANR	10592657	ExpressionStatement	def = exc -> IDefs	4045:4:147165:147183	10592626	3	True				
ANR	10592658	AssignmentExpression	def = exc -> IDefs		10592626	0		=			
ANR	10592659	Identifier	def		10592626	0					
ANR	10592660	PtrMemberAccess	exc -> IDefs		10592626	1					
ANR	10592661	Identifier	exc		10592626	0					
ANR	10592662	Identifier	IDefs		10592626	1					
ANR	10592663	ExpressionStatement	limit = def + exc -> numIDefs	4046:4:147189:147216	10592626	4	True				
ANR	10592664	AssignmentExpression	limit = def + exc -> numIDefs		10592626	0		=			
ANR	10592665	Identifier	limit		10592626	0					
ANR	10592666	AdditiveExpression	def + exc -> numIDefs		10592626	1		+			
ANR	10592667	Identifier	def		10592626	0					
ANR	10592668	PtrMemberAccess	exc -> numIDefs		10592626	1					
ANR	10592669	Identifier	exc		10592626	0					
ANR	10592670	Identifier	numIDefs		10592626	1					
ANR	10592671	ForStatement	for ( ; def < limit ; def ++ )		10592626	5					
ANR	10592672	Condition	def < limit	4048:12:147231:147241	10592626	0	True				
ANR	10592673	RelationalExpression	def < limit		10592626	0		<			
ANR	10592674	Identifier	def		10592626	0					
ANR	10592675	Identifier	limit		10592626	1					
ANR	10592676	PostIncDecOperationExpression	def ++	4048:25:147244:147248	10592626	1	True				
ANR	10592677	Identifier	def		10592626	0					
ANR	10592678	IncDec	++		10592626	1					
ANR	10592679	IfStatement	if ( def -> opc == ( FT_ULong ) args [ 0 ] )		10592626	2					
ANR	10592680	Condition	def -> opc == ( FT_ULong ) args [ 0 ]	4049:11:147263:147291	10592626	0	True				
ANR	10592681	EqualityExpression	def -> opc == ( FT_ULong ) args [ 0 ]		10592626	0		==			
ANR	10592682	PtrMemberAccess	def -> opc		10592626	0					
ANR	10592683	Identifier	def		10592626	0					
ANR	10592684	Identifier	opc		10592626	1					
ANR	10592685	CastExpression	( FT_ULong ) args [ 0 ]		10592626	1					
ANR	10592686	CastTarget	FT_ULong		10592626	0					
ANR	10592687	ArrayIndexing	args [ 0 ]		10592626	1					
ANR	10592688	Identifier	args		10592626	0					
ANR	10592689	PrimaryExpression	0		10592626	1					
ANR	10592690	BreakStatement	break ;	4050:8:147303:147308	10592626	1	True				
ANR	10592691	IfStatement	if ( def == limit )		10592626	6					
ANR	10592692	Condition	def == limit	4052:9:147320:147331	10592626	0	True				
ANR	10592693	EqualityExpression	def == limit		10592626	0		==			
ANR	10592694	Identifier	def		10592626	0					
ANR	10592695	Identifier	limit		10592626	1					
ANR	10592696	CompoundStatement		23:4:474:474	10592626	1					
ANR	10592697	IfStatement	if ( exc -> numIDefs >= exc -> maxIDefs )		10592626	0					
ANR	10592698	Condition	exc -> numIDefs >= exc -> maxIDefs	4055:11:147418:147447	10592626	0	True				
ANR	10592699	RelationalExpression	exc -> numIDefs >= exc -> maxIDefs		10592626	0		>=			
ANR	10592700	PtrMemberAccess	exc -> numIDefs		10592626	0					
ANR	10592701	Identifier	exc		10592626	0					
ANR	10592702	Identifier	numIDefs		10592626	1					
ANR	10592703	PtrMemberAccess	exc -> maxIDefs		10592626	1					
ANR	10592704	Identifier	exc		10592626	0					
ANR	10592705	Identifier	maxIDefs		10592626	1					
ANR	10592706	CompoundStatement		26:6:592:592	10592626	1					
ANR	10592707	ExpressionStatement	exc -> error = FT_THROW ( Too_Many_Instruction_Defs )	4057:8:147467:147517	10592626	0	True				
ANR	10592708	AssignmentExpression	exc -> error = FT_THROW ( Too_Many_Instruction_Defs )		10592626	0		=			
ANR	10592709	PtrMemberAccess	exc -> error		10592626	0					
ANR	10592710	Identifier	exc		10592626	0					
ANR	10592711	Identifier	error		10592626	1					
ANR	10592712	CallExpression	FT_THROW ( Too_Many_Instruction_Defs )		10592626	1					
ANR	10592713	Callee	FT_THROW		10592626	0					
ANR	10592714	Identifier	FT_THROW		10592626	0					
ANR	10592715	ArgumentList	Too_Many_Instruction_Defs		10592626	1					
ANR	10592716	Argument	Too_Many_Instruction_Defs		10592626	0					
ANR	10592717	Identifier	Too_Many_Instruction_Defs		10592626	0					
ANR	10592718	ReturnStatement	return ;	4058:8:147527:147533	10592626	1	True				
ANR	10592719	ExpressionStatement	exc -> numIDefs ++	4060:6:147549:147564	10592626	1	True				
ANR	10592720	PostIncDecOperationExpression	exc -> numIDefs ++		10592626	0					
ANR	10592721	PtrMemberAccess	exc -> numIDefs		10592626	0					
ANR	10592722	Identifier	exc		10592626	0					
ANR	10592723	Identifier	numIDefs		10592626	1					
ANR	10592724	IncDec	++		10592626	1					
ANR	10592725	IfStatement	if ( 0 > args [ 0 ] || args [ 0 ] > 0x00FF )		10592626	7					
ANR	10592726	Condition	0 > args [ 0 ] || args [ 0 ] > 0x00FF	4064:9:147630:147660	10592626	0	True				
ANR	10592727	OrExpression	0 > args [ 0 ] || args [ 0 ] > 0x00FF		10592626	0		||			
ANR	10592728	RelationalExpression	0 > args [ 0 ]		10592626	0		>			
ANR	10592729	PrimaryExpression	0		10592626	0					
ANR	10592730	ArrayIndexing	args [ 0 ]		10592626	1					
ANR	10592731	Identifier	args		10592626	0					
ANR	10592732	PrimaryExpression	0		10592626	1					
ANR	10592733	RelationalExpression	args [ 0 ] > 0x00FF		10592626	1		>			
ANR	10592734	ArrayIndexing	args [ 0 ]		10592626	0					
ANR	10592735	Identifier	args		10592626	0					
ANR	10592736	PrimaryExpression	0		10592626	1					
ANR	10592737	PrimaryExpression	0x00FF		10592626	1					
ANR	10592738	CompoundStatement		35:4:803:803	10592626	1					
ANR	10592739	ExpressionStatement	exc -> error = FT_THROW ( Too_Many_Instruction_Defs )	4066:6:147676:147726	10592626	0	True				
ANR	10592740	AssignmentExpression	exc -> error = FT_THROW ( Too_Many_Instruction_Defs )		10592626	0		=			
ANR	10592741	PtrMemberAccess	exc -> error		10592626	0					
ANR	10592742	Identifier	exc		10592626	0					
ANR	10592743	Identifier	error		10592626	1					
ANR	10592744	CallExpression	FT_THROW ( Too_Many_Instruction_Defs )		10592626	1					
ANR	10592745	Callee	FT_THROW		10592626	0					
ANR	10592746	Identifier	FT_THROW		10592626	0					
ANR	10592747	ArgumentList	Too_Many_Instruction_Defs		10592626	1					
ANR	10592748	Argument	Too_Many_Instruction_Defs		10592626	0					
ANR	10592749	Identifier	Too_Many_Instruction_Defs		10592626	0					
ANR	10592750	ReturnStatement	return ;	4067:6:147734:147740	10592626	1	True				
ANR	10592751	ExpressionStatement	def -> opc = ( FT_Byte ) args [ 0 ]	4070:4:147753:147783	10592626	8	True				
ANR	10592752	AssignmentExpression	def -> opc = ( FT_Byte ) args [ 0 ]		10592626	0		=			
ANR	10592753	PtrMemberAccess	def -> opc		10592626	0					
ANR	10592754	Identifier	def		10592626	0					
ANR	10592755	Identifier	opc		10592626	1					
ANR	10592756	CastExpression	( FT_Byte ) args [ 0 ]		10592626	1					
ANR	10592757	CastTarget	FT_Byte		10592626	0					
ANR	10592758	ArrayIndexing	args [ 0 ]		10592626	1					
ANR	10592759	Identifier	args		10592626	0					
ANR	10592760	PrimaryExpression	0		10592626	1					
ANR	10592761	ExpressionStatement	def -> start = exc -> IP + 1	4071:4:147789:147814	10592626	9	True				
ANR	10592762	AssignmentExpression	def -> start = exc -> IP + 1		10592626	0		=			
ANR	10592763	PtrMemberAccess	def -> start		10592626	0					
ANR	10592764	Identifier	def		10592626	0					
ANR	10592765	Identifier	start		10592626	1					
ANR	10592766	AdditiveExpression	exc -> IP + 1		10592626	1		+			
ANR	10592767	PtrMemberAccess	exc -> IP		10592626	0					
ANR	10592768	Identifier	exc		10592626	0					
ANR	10592769	Identifier	IP		10592626	1					
ANR	10592770	PrimaryExpression	1		10592626	1					
ANR	10592771	ExpressionStatement	def -> range = exc -> curRange	4072:4:147820:147847	10592626	10	True				
ANR	10592772	AssignmentExpression	def -> range = exc -> curRange		10592626	0		=			
ANR	10592773	PtrMemberAccess	def -> range		10592626	0					
ANR	10592774	Identifier	def		10592626	0					
ANR	10592775	Identifier	range		10592626	1					
ANR	10592776	PtrMemberAccess	exc -> curRange		10592626	1					
ANR	10592777	Identifier	exc		10592626	0					
ANR	10592778	Identifier	curRange		10592626	1					
ANR	10592779	ExpressionStatement	def -> active = TRUE	4073:4:147853:147871	10592626	11	True				
ANR	10592780	AssignmentExpression	def -> active = TRUE		10592626	0		=			
ANR	10592781	PtrMemberAccess	def -> active		10592626	0					
ANR	10592782	Identifier	def		10592626	0					
ANR	10592783	Identifier	active		10592626	1					
ANR	10592784	Identifier	TRUE		10592626	1					
ANR	10592785	IfStatement	if ( ( FT_ULong ) args [ 0 ] > exc -> maxIns )		10592626	12					
ANR	10592786	Condition	( FT_ULong ) args [ 0 ] > exc -> maxIns	4075:9:147883:147913	10592626	0	True				
ANR	10592787	RelationalExpression	( FT_ULong ) args [ 0 ] > exc -> maxIns		10592626	0		>			
ANR	10592788	CastExpression	( FT_ULong ) args [ 0 ]		10592626	0					
ANR	10592789	CastTarget	FT_ULong		10592626	0					
ANR	10592790	ArrayIndexing	args [ 0 ]		10592626	1					
ANR	10592791	Identifier	args		10592626	0					
ANR	10592792	PrimaryExpression	0		10592626	1					
ANR	10592793	PtrMemberAccess	exc -> maxIns		10592626	1					
ANR	10592794	Identifier	exc		10592626	0					
ANR	10592795	Identifier	maxIns		10592626	1					
ANR	10592796	ExpressionStatement	exc -> maxIns = ( FT_Byte ) args [ 0 ]	4076:6:147923:147953	10592626	1	True				
ANR	10592797	AssignmentExpression	exc -> maxIns = ( FT_Byte ) args [ 0 ]		10592626	0		=			
ANR	10592798	PtrMemberAccess	exc -> maxIns		10592626	0					
ANR	10592799	Identifier	exc		10592626	0					
ANR	10592800	Identifier	maxIns		10592626	1					
ANR	10592801	CastExpression	( FT_Byte ) args [ 0 ]		10592626	1					
ANR	10592802	CastTarget	FT_Byte		10592626	0					
ANR	10592803	ArrayIndexing	args [ 0 ]		10592626	1					
ANR	10592804	Identifier	args		10592626	0					
ANR	10592805	PrimaryExpression	0		10592626	1					
ANR	10592806	WhileStatement	while ( SkipCode ( exc ) == SUCCESS )		10592626	13					
ANR	10592807	Condition	SkipCode ( exc ) == SUCCESS	4081:12:148069:148094	10592626	0	True				
ANR	10592808	EqualityExpression	SkipCode ( exc ) == SUCCESS		10592626	0		==			
ANR	10592809	CallExpression	SkipCode ( exc )		10592626	0					
ANR	10592810	Callee	SkipCode		10592626	0					
ANR	10592811	Identifier	SkipCode		10592626	0					
ANR	10592812	ArgumentList	exc		10592626	1					
ANR	10592813	Argument	exc		10592626	0					
ANR	10592814	Identifier	exc		10592626	0					
ANR	10592815	Identifier	SUCCESS		10592626	1					
ANR	10592816	CompoundStatement		52:4:1237:1237	10592626	1					
ANR	10592817	SwitchStatement	switch ( exc -> opcode )		10592626	0					
ANR	10592818	Condition	exc -> opcode	4083:15:148119:148129	10592626	0	True				
ANR	10592819	PtrMemberAccess	exc -> opcode		10592626	0					
ANR	10592820	Identifier	exc		10592626	0					
ANR	10592821	Identifier	opcode		10592626	1					
ANR	10592822	CompoundStatement		54:6:1274:1274	10592626	1					
ANR	10592823	Label	case 0x89 :	4085:6:148147:148156	10592626	0	True				
ANR	10592824	Label	case 0x2C :	4086:6:148177:148186	10592626	1	True				
ANR	10592825	ExpressionStatement	exc -> error = FT_THROW ( Nested_DEFS )	4087:8:148209:148245	10592626	2	True				
ANR	10592826	AssignmentExpression	exc -> error = FT_THROW ( Nested_DEFS )		10592626	0		=			
ANR	10592827	PtrMemberAccess	exc -> error		10592626	0					
ANR	10592828	Identifier	exc		10592626	0					
ANR	10592829	Identifier	error		10592626	1					
ANR	10592830	CallExpression	FT_THROW ( Nested_DEFS )		10592626	1					
ANR	10592831	Callee	FT_THROW		10592626	0					
ANR	10592832	Identifier	FT_THROW		10592626	0					
ANR	10592833	ArgumentList	Nested_DEFS		10592626	1					
ANR	10592834	Argument	Nested_DEFS		10592626	0					
ANR	10592835	Identifier	Nested_DEFS		10592626	0					
ANR	10592836	ReturnStatement	return ;	4088:8:148255:148261	10592626	3	True				
ANR	10592837	Label	case 0x2D :	4089:6:148269:148278	10592626	4	True				
ANR	10592838	ExpressionStatement	def -> end = exc -> IP	4090:8:148301:148319	10592626	5	True				
ANR	10592839	AssignmentExpression	def -> end = exc -> IP		10592626	0		=			
ANR	10592840	PtrMemberAccess	def -> end		10592626	0					
ANR	10592841	Identifier	def		10592626	0					
ANR	10592842	Identifier	end		10592626	1					
ANR	10592843	PtrMemberAccess	exc -> IP		10592626	1					
ANR	10592844	Identifier	exc		10592626	0					
ANR	10592845	Identifier	IP		10592626	1					
ANR	10592846	ReturnStatement	return ;	4091:8:148329:148335	10592626	6	True				
ANR	10592847	ReturnType	static void		10592626	1					
ANR	10592848	Identifier	Ins_IDEF		10592626	2					
ANR	10592849	ParameterList	"TT_ExecContext exc , FT_Long * args"		10592626	3					
ANR	10592850	Parameter	TT_ExecContext exc	4029:12:146806:146824	10592626	0	True				
ANR	10592851	ParameterType	TT_ExecContext		10592626	0					
ANR	10592852	Identifier	exc		10592626	1					
ANR	10592853	Parameter	FT_Long * args	4030:12:146839:146858	10592626	1	True				
ANR	10592854	ParameterType	FT_Long *		10592626	0					
ANR	10592855	Identifier	args		10592626	1					
ANR	10592856	CFGEntryNode	ENTRY		10592626		True				
ANR	10592857	CFGExitNode	EXIT		10592626		True				
ANR	10592858	Symbol	def -> start		10592626						
ANR	10592859	Symbol	def		10592626						
ANR	10592860	Symbol	* exc		10592626						
ANR	10592861	Symbol	Too_Many_Instruction_Defs		10592626						
ANR	10592862	Symbol	exc -> IDefs		10592626						
ANR	10592863	Symbol	* args		10592626						
ANR	10592864	Symbol	* def		10592626						
ANR	10592865	Symbol	exc		10592626						
ANR	10592866	Symbol	def -> end		10592626						
ANR	10592867	Symbol	exc -> maxIns		10592626						
ANR	10592868	Symbol	limit		10592626						
ANR	10592869	Symbol	exc -> error		10592626						
ANR	10592870	Symbol	def -> opc		10592626						
ANR	10592871	Symbol	DEF_In_Glyf_Bytecode		10592626						
ANR	10592872	Symbol	def -> range		10592626						
ANR	10592873	Symbol	SkipCode		10592626						
ANR	10592874	Symbol	exc -> IP		10592626						
ANR	10592875	Symbol	exc -> numIDefs		10592626						
ANR	10592876	Symbol	def -> active		10592626						
ANR	10592877	Symbol	SUCCESS		10592626						
ANR	10592878	Symbol	tt_coderange_glyph		10592626						
ANR	10592879	Symbol	exc -> curRange		10592626						
ANR	10592880	Symbol	TRUE		10592626						
ANR	10592881	Symbol	exc -> maxIDefs		10592626						
ANR	10592882	Symbol	FT_THROW		10592626						
ANR	10592883	Symbol	args		10592626						
ANR	10592884	Symbol	Nested_DEFS		10592626						
ANR	10592885	Symbol	exc -> opcode		10592626						
ANR	10592886	Function	Ins_NPUSHB	4110:2:149219:149607							
ANR	10592887	FunctionDef	"Ins_NPUSHB (TT_ExecContext exc , FT_Long * args)"		10592886	0					
ANR	10592888	CompoundStatement		4113:2:149305:149607	10592886	0					
ANR	10592889	IdentifierDeclStatement	"FT_UShort L , K ;"	4114:4:149311:149326	10592886	0	True				
ANR	10592890	IdentifierDecl	L		10592886	0					
ANR	10592891	IdentifierDeclType	FT_UShort		10592886	0					
ANR	10592892	Identifier	L		10592886	1					
ANR	10592893	IdentifierDecl	K		10592886	1					
ANR	10592894	IdentifierDeclType	FT_UShort		10592886	0					
ANR	10592895	Identifier	K		10592886	1					
ANR	10592896	ExpressionStatement	L = ( FT_UShort ) exc -> code [ exc -> IP + 1 ]	4117:4:149334:149371	10592886	1	True				
ANR	10592897	AssignmentExpression	L = ( FT_UShort ) exc -> code [ exc -> IP + 1 ]		10592886	0		=			
ANR	10592898	Identifier	L		10592886	0					
ANR	10592899	CastExpression	( FT_UShort ) exc -> code [ exc -> IP + 1 ]		10592886	1					
ANR	10592900	CastTarget	FT_UShort		10592886	0					
ANR	10592901	ArrayIndexing	exc -> code [ exc -> IP + 1 ]		10592886	1					
ANR	10592902	PtrMemberAccess	exc -> code		10592886	0					
ANR	10592903	Identifier	exc		10592886	0					
ANR	10592904	Identifier	code		10592886	1					
ANR	10592905	AdditiveExpression	exc -> IP + 1		10592886	1		+			
ANR	10592906	PtrMemberAccess	exc -> IP		10592886	0					
ANR	10592907	Identifier	exc		10592886	0					
ANR	10592908	Identifier	IP		10592886	1					
ANR	10592909	PrimaryExpression	1		10592886	1					
ANR	10592910	IfStatement	"if ( BOUNDS ( L , exc -> stackSize + 1 - exc -> top ) )"		10592886	2					
ANR	10592911	Condition	"BOUNDS ( L , exc -> stackSize + 1 - exc -> top )"	4119:9:149383:149424	10592886	0	True				
ANR	10592912	CallExpression	"BOUNDS ( L , exc -> stackSize + 1 - exc -> top )"		10592886	0					
ANR	10592913	Callee	BOUNDS		10592886	0					
ANR	10592914	Identifier	BOUNDS		10592886	0					
ANR	10592915	ArgumentList	L		10592886	1					
ANR	10592916	Argument	L		10592886	0					
ANR	10592917	Identifier	L		10592886	0					
ANR	10592918	Argument	exc -> stackSize + 1 - exc -> top		10592886	1					
ANR	10592919	AdditiveExpression	exc -> stackSize + 1 - exc -> top		10592886	0		+			
ANR	10592920	PtrMemberAccess	exc -> stackSize		10592886	0					
ANR	10592921	Identifier	exc		10592886	0					
ANR	10592922	Identifier	stackSize		10592886	1					
ANR	10592923	AdditiveExpression	1 - exc -> top		10592886	1		-			
ANR	10592924	PrimaryExpression	1		10592886	0					
ANR	10592925	PtrMemberAccess	exc -> top		10592886	1					
ANR	10592926	Identifier	exc		10592886	0					
ANR	10592927	Identifier	top		10592886	1					
ANR	10592928	CompoundStatement		8:4:126:126	10592886	1					
ANR	10592929	ExpressionStatement	exc -> error = FT_THROW ( Stack_Overflow )	4121:6:149440:149479	10592886	0	True				
ANR	10592930	AssignmentExpression	exc -> error = FT_THROW ( Stack_Overflow )		10592886	0		=			
ANR	10592931	PtrMemberAccess	exc -> error		10592886	0					
ANR	10592932	Identifier	exc		10592886	0					
ANR	10592933	Identifier	error		10592886	1					
ANR	10592934	CallExpression	FT_THROW ( Stack_Overflow )		10592886	1					
ANR	10592935	Callee	FT_THROW		10592886	0					
ANR	10592936	Identifier	FT_THROW		10592886	0					
ANR	10592937	ArgumentList	Stack_Overflow		10592886	1					
ANR	10592938	Argument	Stack_Overflow		10592886	0					
ANR	10592939	Identifier	Stack_Overflow		10592886	0					
ANR	10592940	ReturnStatement	return ;	4122:6:149487:149493	10592886	1	True				
ANR	10592941	ForStatement	for ( K = 1 ; K <= L ; K ++ )		10592886	3					
ANR	10592942	ForInit	K = 1 ;	4125:10:149512:149517	10592886	0	True				
ANR	10592943	AssignmentExpression	K = 1		10592886	0		=			
ANR	10592944	Identifier	K		10592886	0					
ANR	10592945	PrimaryExpression	1		10592886	1					
ANR	10592946	Condition	K <= L	4125:17:149519:149524	10592886	1	True				
ANR	10592947	RelationalExpression	K <= L		10592886	0		<=			
ANR	10592948	Identifier	K		10592886	0					
ANR	10592949	Identifier	L		10592886	1					
ANR	10592950	PostIncDecOperationExpression	K ++	4125:25:149527:149529	10592886	2	True				
ANR	10592951	Identifier	K		10592886	0					
ANR	10592952	IncDec	++		10592886	1					
ANR	10592953	ExpressionStatement	args [ K - 1 ] = exc -> code [ exc -> IP + K + 1 ]	4126:6:149539:149579	10592886	3	True				
ANR	10592954	AssignmentExpression	args [ K - 1 ] = exc -> code [ exc -> IP + K + 1 ]		10592886	0		=			
ANR	10592955	ArrayIndexing	args [ K - 1 ]		10592886	0					
ANR	10592956	Identifier	args		10592886	0					
ANR	10592957	AdditiveExpression	K - 1		10592886	1		-			
ANR	10592958	Identifier	K		10592886	0					
ANR	10592959	PrimaryExpression	1		10592886	1					
ANR	10592960	ArrayIndexing	exc -> code [ exc -> IP + K + 1 ]		10592886	1					
ANR	10592961	PtrMemberAccess	exc -> code		10592886	0					
ANR	10592962	Identifier	exc		10592886	0					
ANR	10592963	Identifier	code		10592886	1					
ANR	10592964	AdditiveExpression	exc -> IP + K + 1		10592886	1		+			
ANR	10592965	PtrMemberAccess	exc -> IP		10592886	0					
ANR	10592966	Identifier	exc		10592886	0					
ANR	10592967	Identifier	IP		10592886	1					
ANR	10592968	AdditiveExpression	K + 1		10592886	1		+			
ANR	10592969	Identifier	K		10592886	0					
ANR	10592970	PrimaryExpression	1		10592886	1					
ANR	10592971	ExpressionStatement	exc -> new_top += L	4128:4:149586:149603	10592886	4	True				
ANR	10592972	AssignmentExpression	exc -> new_top += L		10592886	0		+=			
ANR	10592973	PtrMemberAccess	exc -> new_top		10592886	0					
ANR	10592974	Identifier	exc		10592886	0					
ANR	10592975	Identifier	new_top		10592886	1					
ANR	10592976	Identifier	L		10592886	1					
ANR	10592977	ReturnType	static void		10592886	1					
ANR	10592978	Identifier	Ins_NPUSHB		10592886	2					
ANR	10592979	ParameterList	"TT_ExecContext exc , FT_Long * args"		10592886	3					
ANR	10592980	Parameter	TT_ExecContext exc	4111:14:149245:149263	10592886	0	True				
ANR	10592981	ParameterType	TT_ExecContext		10592886	0					
ANR	10592982	Identifier	exc		10592886	1					
ANR	10592983	Parameter	FT_Long * args	4112:14:149280:149299	10592886	1	True				
ANR	10592984	ParameterType	FT_Long *		10592886	0					
ANR	10592985	Identifier	args		10592886	1					
ANR	10592986	CFGEntryNode	ENTRY		10592886		True				
ANR	10592987	CFGExitNode	EXIT		10592886		True				
ANR	10592988	Symbol	exc -> new_top		10592886						
ANR	10592989	Symbol	exc -> IP		10592886						
ANR	10592990	Symbol	* * exc		10592886						
ANR	10592991	Symbol	* exc		10592886						
ANR	10592992	Symbol	K		10592886						
ANR	10592993	Symbol	* exc -> IP		10592886						
ANR	10592994	Symbol	L		10592886						
ANR	10592995	Symbol	FT_THROW		10592886						
ANR	10592996	Symbol	* args		10592886						
ANR	10592997	Symbol	args		10592886						
ANR	10592998	Symbol	exc		10592886						
ANR	10592999	Symbol	Stack_Overflow		10592886						
ANR	10593000	Symbol	BOUNDS		10592886						
ANR	10593001	Symbol	* K		10592886						
ANR	10593002	Symbol	exc -> code		10592886						
ANR	10593003	Symbol	* exc -> code		10592886						
ANR	10593004	Symbol	exc -> top		10592886						
ANR	10593005	Symbol	exc -> error		10592886						
ANR	10593006	Symbol	exc -> stackSize		10592886						
ANR	10593007	Function	Ins_NPUSHW	4138:2:150081:150502							
ANR	10593008	FunctionDef	"Ins_NPUSHW (TT_ExecContext exc , FT_Long * args)"		10593007	0					
ANR	10593009	CompoundStatement		4141:2:150167:150502	10593007	0					
ANR	10593010	IdentifierDeclStatement	"FT_UShort L , K ;"	4142:4:150173:150188	10593007	0	True				
ANR	10593011	IdentifierDecl	L		10593007	0					
ANR	10593012	IdentifierDeclType	FT_UShort		10593007	0					
ANR	10593013	Identifier	L		10593007	1					
ANR	10593014	IdentifierDecl	K		10593007	1					
ANR	10593015	IdentifierDeclType	FT_UShort		10593007	0					
ANR	10593016	Identifier	K		10593007	1					
ANR	10593017	ExpressionStatement	L = ( FT_UShort ) exc -> code [ exc -> IP + 1 ]	4145:4:150196:150233	10593007	1	True				
ANR	10593018	AssignmentExpression	L = ( FT_UShort ) exc -> code [ exc -> IP + 1 ]		10593007	0		=			
ANR	10593019	Identifier	L		10593007	0					
ANR	10593020	CastExpression	( FT_UShort ) exc -> code [ exc -> IP + 1 ]		10593007	1					
ANR	10593021	CastTarget	FT_UShort		10593007	0					
ANR	10593022	ArrayIndexing	exc -> code [ exc -> IP + 1 ]		10593007	1					
ANR	10593023	PtrMemberAccess	exc -> code		10593007	0					
ANR	10593024	Identifier	exc		10593007	0					
ANR	10593025	Identifier	code		10593007	1					
ANR	10593026	AdditiveExpression	exc -> IP + 1		10593007	1		+			
ANR	10593027	PtrMemberAccess	exc -> IP		10593007	0					
ANR	10593028	Identifier	exc		10593007	0					
ANR	10593029	Identifier	IP		10593007	1					
ANR	10593030	PrimaryExpression	1		10593007	1					
ANR	10593031	IfStatement	"if ( BOUNDS ( L , exc -> stackSize + 1 - exc -> top ) )"		10593007	2					
ANR	10593032	Condition	"BOUNDS ( L , exc -> stackSize + 1 - exc -> top )"	4147:9:150245:150286	10593007	0	True				
ANR	10593033	CallExpression	"BOUNDS ( L , exc -> stackSize + 1 - exc -> top )"		10593007	0					
ANR	10593034	Callee	BOUNDS		10593007	0					
ANR	10593035	Identifier	BOUNDS		10593007	0					
ANR	10593036	ArgumentList	L		10593007	1					
ANR	10593037	Argument	L		10593007	0					
ANR	10593038	Identifier	L		10593007	0					
ANR	10593039	Argument	exc -> stackSize + 1 - exc -> top		10593007	1					
ANR	10593040	AdditiveExpression	exc -> stackSize + 1 - exc -> top		10593007	0		+			
ANR	10593041	PtrMemberAccess	exc -> stackSize		10593007	0					
ANR	10593042	Identifier	exc		10593007	0					
ANR	10593043	Identifier	stackSize		10593007	1					
ANR	10593044	AdditiveExpression	1 - exc -> top		10593007	1		-			
ANR	10593045	PrimaryExpression	1		10593007	0					
ANR	10593046	PtrMemberAccess	exc -> top		10593007	1					
ANR	10593047	Identifier	exc		10593007	0					
ANR	10593048	Identifier	top		10593007	1					
ANR	10593049	CompoundStatement		8:4:126:126	10593007	1					
ANR	10593050	ExpressionStatement	exc -> error = FT_THROW ( Stack_Overflow )	4149:6:150302:150341	10593007	0	True				
ANR	10593051	AssignmentExpression	exc -> error = FT_THROW ( Stack_Overflow )		10593007	0		=			
ANR	10593052	PtrMemberAccess	exc -> error		10593007	0					
ANR	10593053	Identifier	exc		10593007	0					
ANR	10593054	Identifier	error		10593007	1					
ANR	10593055	CallExpression	FT_THROW ( Stack_Overflow )		10593007	1					
ANR	10593056	Callee	FT_THROW		10593007	0					
ANR	10593057	Identifier	FT_THROW		10593007	0					
ANR	10593058	ArgumentList	Stack_Overflow		10593007	1					
ANR	10593059	Argument	Stack_Overflow		10593007	0					
ANR	10593060	Identifier	Stack_Overflow		10593007	0					
ANR	10593061	ReturnStatement	return ;	4150:6:150349:150355	10593007	1	True				
ANR	10593062	ExpressionStatement	exc -> IP += 2	4153:4:150368:150380	10593007	3	True				
ANR	10593063	AssignmentExpression	exc -> IP += 2		10593007	0		+=			
ANR	10593064	PtrMemberAccess	exc -> IP		10593007	0					
ANR	10593065	Identifier	exc		10593007	0					
ANR	10593066	Identifier	IP		10593007	1					
ANR	10593067	PrimaryExpression	2		10593007	1					
ANR	10593068	ForStatement	for ( K = 0 ; K < L ; K ++ )		10593007	4					
ANR	10593069	ForInit	K = 0 ;	4155:10:150393:150398	10593007	0	True				
ANR	10593070	AssignmentExpression	K = 0		10593007	0		=			
ANR	10593071	Identifier	K		10593007	0					
ANR	10593072	PrimaryExpression	0		10593007	1					
ANR	10593073	Condition	K < L	4155:17:150400:150404	10593007	1	True				
ANR	10593074	RelationalExpression	K < L		10593007	0		<			
ANR	10593075	Identifier	K		10593007	0					
ANR	10593076	Identifier	L		10593007	1					
ANR	10593077	PostIncDecOperationExpression	K ++	4155:24:150407:150409	10593007	2	True				
ANR	10593078	Identifier	K		10593007	0					
ANR	10593079	IncDec	++		10593007	1					
ANR	10593080	ExpressionStatement	args [ K ] = GetShortIns ( exc )	4156:6:150419:150447	10593007	3	True				
ANR	10593081	AssignmentExpression	args [ K ] = GetShortIns ( exc )		10593007	0		=			
ANR	10593082	ArrayIndexing	args [ K ]		10593007	0					
ANR	10593083	Identifier	args		10593007	0					
ANR	10593084	Identifier	K		10593007	1					
ANR	10593085	CallExpression	GetShortIns ( exc )		10593007	1					
ANR	10593086	Callee	GetShortIns		10593007	0					
ANR	10593087	Identifier	GetShortIns		10593007	0					
ANR	10593088	ArgumentList	exc		10593007	1					
ANR	10593089	Argument	exc		10593007	0					
ANR	10593090	Identifier	exc		10593007	0					
ANR	10593091	ExpressionStatement	exc -> step_ins = FALSE	4158:4:150454:150475	10593007	5	True				
ANR	10593092	AssignmentExpression	exc -> step_ins = FALSE		10593007	0		=			
ANR	10593093	PtrMemberAccess	exc -> step_ins		10593007	0					
ANR	10593094	Identifier	exc		10593007	0					
ANR	10593095	Identifier	step_ins		10593007	1					
ANR	10593096	Identifier	FALSE		10593007	1					
ANR	10593097	ExpressionStatement	exc -> new_top += L	4159:4:150481:150498	10593007	6	True				
ANR	10593098	AssignmentExpression	exc -> new_top += L		10593007	0		+=			
ANR	10593099	PtrMemberAccess	exc -> new_top		10593007	0					
ANR	10593100	Identifier	exc		10593007	0					
ANR	10593101	Identifier	new_top		10593007	1					
ANR	10593102	Identifier	L		10593007	1					
ANR	10593103	ReturnType	static void		10593007	1					
ANR	10593104	Identifier	Ins_NPUSHW		10593007	2					
ANR	10593105	ParameterList	"TT_ExecContext exc , FT_Long * args"		10593007	3					
ANR	10593106	Parameter	TT_ExecContext exc	4139:14:150107:150125	10593007	0	True				
ANR	10593107	ParameterType	TT_ExecContext		10593007	0					
ANR	10593108	Identifier	exc		10593007	1					
ANR	10593109	Parameter	FT_Long * args	4140:14:150142:150161	10593007	1	True				
ANR	10593110	ParameterType	FT_Long *		10593007	0					
ANR	10593111	Identifier	args		10593007	1					
ANR	10593112	CFGEntryNode	ENTRY		10593007		True				
ANR	10593113	CFGExitNode	EXIT		10593007		True				
ANR	10593114	Symbol	exc -> new_top		10593007						
ANR	10593115	Symbol	exc -> IP		10593007						
ANR	10593116	Symbol	* * exc		10593007						
ANR	10593117	Symbol	* exc		10593007						
ANR	10593118	Symbol	exc -> step_ins		10593007						
ANR	10593119	Symbol	K		10593007						
ANR	10593120	Symbol	* exc -> IP		10593007						
ANR	10593121	Symbol	L		10593007						
ANR	10593122	Symbol	FT_THROW		10593007						
ANR	10593123	Symbol	* args		10593007						
ANR	10593124	Symbol	args		10593007						
ANR	10593125	Symbol	exc		10593007						
ANR	10593126	Symbol	GetShortIns		10593007						
ANR	10593127	Symbol	Stack_Overflow		10593007						
ANR	10593128	Symbol	BOUNDS		10593007						
ANR	10593129	Symbol	* K		10593007						
ANR	10593130	Symbol	exc -> code		10593007						
ANR	10593131	Symbol	* exc -> code		10593007						
ANR	10593132	Symbol	FALSE		10593007						
ANR	10593133	Symbol	exc -> top		10593007						
ANR	10593134	Symbol	exc -> error		10593007						
ANR	10593135	Symbol	exc -> stackSize		10593007						
ANR	10593136	Function	Ins_PUSHB	4169:2:150976:151338							
ANR	10593137	FunctionDef	"Ins_PUSHB (TT_ExecContext exc , FT_Long * args)"		10593136	0					
ANR	10593138	CompoundStatement		4172:2:151060:151338	10593136	0					
ANR	10593139	IdentifierDeclStatement	"FT_UShort L , K ;"	4173:4:151066:151081	10593136	0	True				
ANR	10593140	IdentifierDecl	L		10593136	0					
ANR	10593141	IdentifierDeclType	FT_UShort		10593136	0					
ANR	10593142	Identifier	L		10593136	1					
ANR	10593143	IdentifierDecl	K		10593136	1					
ANR	10593144	IdentifierDeclType	FT_UShort		10593136	0					
ANR	10593145	Identifier	K		10593136	1					
ANR	10593146	ExpressionStatement	L = ( FT_UShort ) ( exc -> opcode - 0xB0 + 1 )	4176:4:151089:151130	10593136	1	True				
ANR	10593147	AssignmentExpression	L = ( FT_UShort ) ( exc -> opcode - 0xB0 + 1 )		10593136	0		=			
ANR	10593148	Identifier	L		10593136	0					
ANR	10593149	CastExpression	( FT_UShort ) ( exc -> opcode - 0xB0 + 1 )		10593136	1					
ANR	10593150	CastTarget	FT_UShort		10593136	0					
ANR	10593151	AdditiveExpression	exc -> opcode - 0xB0 + 1		10593136	1		-			
ANR	10593152	PtrMemberAccess	exc -> opcode		10593136	0					
ANR	10593153	Identifier	exc		10593136	0					
ANR	10593154	Identifier	opcode		10593136	1					
ANR	10593155	AdditiveExpression	0xB0 + 1		10593136	1		+			
ANR	10593156	PrimaryExpression	0xB0		10593136	0					
ANR	10593157	PrimaryExpression	1		10593136	1					
ANR	10593158	IfStatement	"if ( BOUNDS ( L , exc -> stackSize + 1 - exc -> top ) )"		10593136	2					
ANR	10593159	Condition	"BOUNDS ( L , exc -> stackSize + 1 - exc -> top )"	4178:9:151142:151183	10593136	0	True				
ANR	10593160	CallExpression	"BOUNDS ( L , exc -> stackSize + 1 - exc -> top )"		10593136	0					
ANR	10593161	Callee	BOUNDS		10593136	0					
ANR	10593162	Identifier	BOUNDS		10593136	0					
ANR	10593163	ArgumentList	L		10593136	1					
ANR	10593164	Argument	L		10593136	0					
ANR	10593165	Identifier	L		10593136	0					
ANR	10593166	Argument	exc -> stackSize + 1 - exc -> top		10593136	1					
ANR	10593167	AdditiveExpression	exc -> stackSize + 1 - exc -> top		10593136	0		+			
ANR	10593168	PtrMemberAccess	exc -> stackSize		10593136	0					
ANR	10593169	Identifier	exc		10593136	0					
ANR	10593170	Identifier	stackSize		10593136	1					
ANR	10593171	AdditiveExpression	1 - exc -> top		10593136	1		-			
ANR	10593172	PrimaryExpression	1		10593136	0					
ANR	10593173	PtrMemberAccess	exc -> top		10593136	1					
ANR	10593174	Identifier	exc		10593136	0					
ANR	10593175	Identifier	top		10593136	1					
ANR	10593176	CompoundStatement		8:4:130:130	10593136	1					
ANR	10593177	ExpressionStatement	exc -> error = FT_THROW ( Stack_Overflow )	4180:6:151199:151238	10593136	0	True				
ANR	10593178	AssignmentExpression	exc -> error = FT_THROW ( Stack_Overflow )		10593136	0		=			
ANR	10593179	PtrMemberAccess	exc -> error		10593136	0					
ANR	10593180	Identifier	exc		10593136	0					
ANR	10593181	Identifier	error		10593136	1					
ANR	10593182	CallExpression	FT_THROW ( Stack_Overflow )		10593136	1					
ANR	10593183	Callee	FT_THROW		10593136	0					
ANR	10593184	Identifier	FT_THROW		10593136	0					
ANR	10593185	ArgumentList	Stack_Overflow		10593136	1					
ANR	10593186	Argument	Stack_Overflow		10593136	0					
ANR	10593187	Identifier	Stack_Overflow		10593136	0					
ANR	10593188	ReturnStatement	return ;	4181:6:151246:151252	10593136	1	True				
ANR	10593189	ForStatement	for ( K = 1 ; K <= L ; K ++ )		10593136	3					
ANR	10593190	ForInit	K = 1 ;	4184:10:151271:151276	10593136	0	True				
ANR	10593191	AssignmentExpression	K = 1		10593136	0		=			
ANR	10593192	Identifier	K		10593136	0					
ANR	10593193	PrimaryExpression	1		10593136	1					
ANR	10593194	Condition	K <= L	4184:17:151278:151283	10593136	1	True				
ANR	10593195	RelationalExpression	K <= L		10593136	0		<=			
ANR	10593196	Identifier	K		10593136	0					
ANR	10593197	Identifier	L		10593136	1					
ANR	10593198	PostIncDecOperationExpression	K ++	4184:25:151286:151288	10593136	2	True				
ANR	10593199	Identifier	K		10593136	0					
ANR	10593200	IncDec	++		10593136	1					
ANR	10593201	ExpressionStatement	args [ K - 1 ] = exc -> code [ exc -> IP + K ]	4185:6:151298:151334	10593136	3	True				
ANR	10593202	AssignmentExpression	args [ K - 1 ] = exc -> code [ exc -> IP + K ]		10593136	0		=			
ANR	10593203	ArrayIndexing	args [ K - 1 ]		10593136	0					
ANR	10593204	Identifier	args		10593136	0					
ANR	10593205	AdditiveExpression	K - 1		10593136	1		-			
ANR	10593206	Identifier	K		10593136	0					
ANR	10593207	PrimaryExpression	1		10593136	1					
ANR	10593208	ArrayIndexing	exc -> code [ exc -> IP + K ]		10593136	1					
ANR	10593209	PtrMemberAccess	exc -> code		10593136	0					
ANR	10593210	Identifier	exc		10593136	0					
ANR	10593211	Identifier	code		10593136	1					
ANR	10593212	AdditiveExpression	exc -> IP + K		10593136	1		+			
ANR	10593213	PtrMemberAccess	exc -> IP		10593136	0					
ANR	10593214	Identifier	exc		10593136	0					
ANR	10593215	Identifier	IP		10593136	1					
ANR	10593216	Identifier	K		10593136	1					
ANR	10593217	ReturnType	static void		10593136	1					
ANR	10593218	Identifier	Ins_PUSHB		10593136	2					
ANR	10593219	ParameterList	"TT_ExecContext exc , FT_Long * args"		10593136	3					
ANR	10593220	Parameter	TT_ExecContext exc	4170:13:151001:151019	10593136	0	True				
ANR	10593221	ParameterType	TT_ExecContext		10593136	0					
ANR	10593222	Identifier	exc		10593136	1					
ANR	10593223	Parameter	FT_Long * args	4171:13:151035:151054	10593136	1	True				
ANR	10593224	ParameterType	FT_Long *		10593136	0					
ANR	10593225	Identifier	args		10593136	1					
ANR	10593226	CFGEntryNode	ENTRY		10593136		True				
ANR	10593227	CFGExitNode	EXIT		10593136		True				
ANR	10593228	Symbol	exc -> IP		10593136						
ANR	10593229	Symbol	* * exc		10593136						
ANR	10593230	Symbol	* exc		10593136						
ANR	10593231	Symbol	K		10593136						
ANR	10593232	Symbol	* exc -> IP		10593136						
ANR	10593233	Symbol	L		10593136						
ANR	10593234	Symbol	FT_THROW		10593136						
ANR	10593235	Symbol	* args		10593136						
ANR	10593236	Symbol	args		10593136						
ANR	10593237	Symbol	exc		10593136						
ANR	10593238	Symbol	Stack_Overflow		10593136						
ANR	10593239	Symbol	BOUNDS		10593136						
ANR	10593240	Symbol	* K		10593136						
ANR	10593241	Symbol	exc -> code		10593136						
ANR	10593242	Symbol	* exc -> code		10593136						
ANR	10593243	Symbol	exc -> top		10593136						
ANR	10593244	Symbol	exc -> opcode		10593136						
ANR	10593245	Symbol	exc -> error		10593136						
ANR	10593246	Symbol	exc -> stackSize		10593136						
ANR	10593247	Function	Ins_PUSHW	4195:2:151812:152209							
ANR	10593248	FunctionDef	"Ins_PUSHW (TT_ExecContext exc , FT_Long * args)"		10593247	0					
ANR	10593249	CompoundStatement		4198:2:151896:152209	10593247	0					
ANR	10593250	IdentifierDeclStatement	"FT_UShort L , K ;"	4199:4:151902:151917	10593247	0	True				
ANR	10593251	IdentifierDecl	L		10593247	0					
ANR	10593252	IdentifierDeclType	FT_UShort		10593247	0					
ANR	10593253	Identifier	L		10593247	1					
ANR	10593254	IdentifierDecl	K		10593247	1					
ANR	10593255	IdentifierDeclType	FT_UShort		10593247	0					
ANR	10593256	Identifier	K		10593247	1					
ANR	10593257	ExpressionStatement	L = ( FT_UShort ) ( exc -> opcode - 0xB8 + 1 )	4202:4:151925:151966	10593247	1	True				
ANR	10593258	AssignmentExpression	L = ( FT_UShort ) ( exc -> opcode - 0xB8 + 1 )		10593247	0		=			
ANR	10593259	Identifier	L		10593247	0					
ANR	10593260	CastExpression	( FT_UShort ) ( exc -> opcode - 0xB8 + 1 )		10593247	1					
ANR	10593261	CastTarget	FT_UShort		10593247	0					
ANR	10593262	AdditiveExpression	exc -> opcode - 0xB8 + 1		10593247	1		-			
ANR	10593263	PtrMemberAccess	exc -> opcode		10593247	0					
ANR	10593264	Identifier	exc		10593247	0					
ANR	10593265	Identifier	opcode		10593247	1					
ANR	10593266	AdditiveExpression	0xB8 + 1		10593247	1		+			
ANR	10593267	PrimaryExpression	0xB8		10593247	0					
ANR	10593268	PrimaryExpression	1		10593247	1					
ANR	10593269	IfStatement	"if ( BOUNDS ( L , exc -> stackSize + 1 - exc -> top ) )"		10593247	2					
ANR	10593270	Condition	"BOUNDS ( L , exc -> stackSize + 1 - exc -> top )"	4204:9:151978:152019	10593247	0	True				
ANR	10593271	CallExpression	"BOUNDS ( L , exc -> stackSize + 1 - exc -> top )"		10593247	0					
ANR	10593272	Callee	BOUNDS		10593247	0					
ANR	10593273	Identifier	BOUNDS		10593247	0					
ANR	10593274	ArgumentList	L		10593247	1					
ANR	10593275	Argument	L		10593247	0					
ANR	10593276	Identifier	L		10593247	0					
ANR	10593277	Argument	exc -> stackSize + 1 - exc -> top		10593247	1					
ANR	10593278	AdditiveExpression	exc -> stackSize + 1 - exc -> top		10593247	0		+			
ANR	10593279	PtrMemberAccess	exc -> stackSize		10593247	0					
ANR	10593280	Identifier	exc		10593247	0					
ANR	10593281	Identifier	stackSize		10593247	1					
ANR	10593282	AdditiveExpression	1 - exc -> top		10593247	1		-			
ANR	10593283	PrimaryExpression	1		10593247	0					
ANR	10593284	PtrMemberAccess	exc -> top		10593247	1					
ANR	10593285	Identifier	exc		10593247	0					
ANR	10593286	Identifier	top		10593247	1					
ANR	10593287	CompoundStatement		8:4:130:130	10593247	1					
ANR	10593288	ExpressionStatement	exc -> error = FT_THROW ( Stack_Overflow )	4206:6:152035:152074	10593247	0	True				
ANR	10593289	AssignmentExpression	exc -> error = FT_THROW ( Stack_Overflow )		10593247	0		=			
ANR	10593290	PtrMemberAccess	exc -> error		10593247	0					
ANR	10593291	Identifier	exc		10593247	0					
ANR	10593292	Identifier	error		10593247	1					
ANR	10593293	CallExpression	FT_THROW ( Stack_Overflow )		10593247	1					
ANR	10593294	Callee	FT_THROW		10593247	0					
ANR	10593295	Identifier	FT_THROW		10593247	0					
ANR	10593296	ArgumentList	Stack_Overflow		10593247	1					
ANR	10593297	Argument	Stack_Overflow		10593247	0					
ANR	10593298	Identifier	Stack_Overflow		10593247	0					
ANR	10593299	ReturnStatement	return ;	4207:6:152082:152088	10593247	1	True				
ANR	10593300	ExpressionStatement	exc -> IP ++	4210:4:152101:152110	10593247	3	True				
ANR	10593301	PostIncDecOperationExpression	exc -> IP ++		10593247	0					
ANR	10593302	PtrMemberAccess	exc -> IP		10593247	0					
ANR	10593303	Identifier	exc		10593247	0					
ANR	10593304	Identifier	IP		10593247	1					
ANR	10593305	IncDec	++		10593247	1					
ANR	10593306	ForStatement	for ( K = 0 ; K < L ; K ++ )		10593247	4					
ANR	10593307	ForInit	K = 0 ;	4212:10:152123:152128	10593247	0	True				
ANR	10593308	AssignmentExpression	K = 0		10593247	0		=			
ANR	10593309	Identifier	K		10593247	0					
ANR	10593310	PrimaryExpression	0		10593247	1					
ANR	10593311	Condition	K < L	4212:17:152130:152134	10593247	1	True				
ANR	10593312	RelationalExpression	K < L		10593247	0		<			
ANR	10593313	Identifier	K		10593247	0					
ANR	10593314	Identifier	L		10593247	1					
ANR	10593315	PostIncDecOperationExpression	K ++	4212:24:152137:152139	10593247	2	True				
ANR	10593316	Identifier	K		10593247	0					
ANR	10593317	IncDec	++		10593247	1					
ANR	10593318	ExpressionStatement	args [ K ] = GetShortIns ( exc )	4213:6:152149:152177	10593247	3	True				
ANR	10593319	AssignmentExpression	args [ K ] = GetShortIns ( exc )		10593247	0		=			
ANR	10593320	ArrayIndexing	args [ K ]		10593247	0					
ANR	10593321	Identifier	args		10593247	0					
ANR	10593322	Identifier	K		10593247	1					
ANR	10593323	CallExpression	GetShortIns ( exc )		10593247	1					
ANR	10593324	Callee	GetShortIns		10593247	0					
ANR	10593325	Identifier	GetShortIns		10593247	0					
ANR	10593326	ArgumentList	exc		10593247	1					
ANR	10593327	Argument	exc		10593247	0					
ANR	10593328	Identifier	exc		10593247	0					
ANR	10593329	ExpressionStatement	exc -> step_ins = FALSE	4215:4:152184:152205	10593247	5	True				
ANR	10593330	AssignmentExpression	exc -> step_ins = FALSE		10593247	0		=			
ANR	10593331	PtrMemberAccess	exc -> step_ins		10593247	0					
ANR	10593332	Identifier	exc		10593247	0					
ANR	10593333	Identifier	step_ins		10593247	1					
ANR	10593334	Identifier	FALSE		10593247	1					
ANR	10593335	ReturnType	static void		10593247	1					
ANR	10593336	Identifier	Ins_PUSHW		10593247	2					
ANR	10593337	ParameterList	"TT_ExecContext exc , FT_Long * args"		10593247	3					
ANR	10593338	Parameter	TT_ExecContext exc	4196:13:151837:151855	10593247	0	True				
ANR	10593339	ParameterType	TT_ExecContext		10593247	0					
ANR	10593340	Identifier	exc		10593247	1					
ANR	10593341	Parameter	FT_Long * args	4197:13:151871:151890	10593247	1	True				
ANR	10593342	ParameterType	FT_Long *		10593247	0					
ANR	10593343	Identifier	args		10593247	1					
ANR	10593344	CFGEntryNode	ENTRY		10593247		True				
ANR	10593345	CFGExitNode	EXIT		10593247		True				
ANR	10593346	Symbol	exc -> IP		10593247						
ANR	10593347	Symbol	* exc		10593247						
ANR	10593348	Symbol	exc -> step_ins		10593247						
ANR	10593349	Symbol	K		10593247						
ANR	10593350	Symbol	L		10593247						
ANR	10593351	Symbol	FT_THROW		10593247						
ANR	10593352	Symbol	* args		10593247						
ANR	10593353	Symbol	args		10593247						
ANR	10593354	Symbol	exc		10593247						
ANR	10593355	Symbol	GetShortIns		10593247						
ANR	10593356	Symbol	Stack_Overflow		10593247						
ANR	10593357	Symbol	BOUNDS		10593247						
ANR	10593358	Symbol	* K		10593247						
ANR	10593359	Symbol	FALSE		10593247						
ANR	10593360	Symbol	exc -> top		10593247						
ANR	10593361	Symbol	exc -> opcode		10593247						
ANR	10593362	Symbol	exc -> error		10593247						
ANR	10593363	Symbol	exc -> stackSize		10593247						
ANR	10593364	Function	Ins_SxVTL	4226:2:152607:153713							
ANR	10593365	FunctionDef	"Ins_SxVTL (TT_ExecContext exc , FT_UShort aIdx1 , FT_UShort aIdx2 , FT_UnitVector * Vec)"		10593364	0					
ANR	10593366	CompoundStatement		4231:2:152765:153713	10593364	0					
ANR	10593367	IdentifierDeclStatement	"FT_Long A , B , C ;"	4232:4:152771:152790	10593364	0	True				
ANR	10593368	IdentifierDecl	A		10593364	0					
ANR	10593369	IdentifierDeclType	FT_Long		10593364	0					
ANR	10593370	Identifier	A		10593364	1					
ANR	10593371	IdentifierDecl	B		10593364	1					
ANR	10593372	IdentifierDeclType	FT_Long		10593364	0					
ANR	10593373	Identifier	B		10593364	1					
ANR	10593374	IdentifierDecl	C		10593364	2					
ANR	10593375	IdentifierDeclType	FT_Long		10593364	0					
ANR	10593376	Identifier	C		10593364	1					
ANR	10593377	IdentifierDeclStatement	FT_Vector * p1 ;	4233:4:152796:152810	10593364	1	True				
ANR	10593378	IdentifierDecl	* p1		10593364	0					
ANR	10593379	IdentifierDeclType	FT_Vector *		10593364	0					
ANR	10593380	Identifier	p1		10593364	1					
ANR	10593381	IdentifierDeclStatement	FT_Vector * p2 ;	4234:4:152816:152830	10593364	2	True				
ANR	10593382	IdentifierDecl	* p2		10593364	0					
ANR	10593383	IdentifierDeclType	FT_Vector *		10593364	0					
ANR	10593384	Identifier	p2		10593364	1					
ANR	10593385	IdentifierDeclStatement	FT_Byte opcode = exc -> opcode ;	4236:4:152837:152866	10593364	3	True				
ANR	10593386	IdentifierDecl	opcode = exc -> opcode		10593364	0					
ANR	10593387	IdentifierDeclType	FT_Byte		10593364	0					
ANR	10593388	Identifier	opcode		10593364	1					
ANR	10593389	AssignmentExpression	opcode = exc -> opcode		10593364	2		=			
ANR	10593390	Identifier	opcode		10593364	0					
ANR	10593391	PtrMemberAccess	exc -> opcode		10593364	1					
ANR	10593392	Identifier	exc		10593364	0					
ANR	10593393	Identifier	opcode		10593364	1					
ANR	10593394	IfStatement	"if ( BOUNDS ( aIdx1 , exc -> zp2 . n_points ) || BOUNDS ( aIdx2 , exc -> zp1 . n_points ) )"		10593364	4					
ANR	10593395	Condition	"BOUNDS ( aIdx1 , exc -> zp2 . n_points ) || BOUNDS ( aIdx2 , exc -> zp1 . n_points )"	4239:9:152879:152959	10593364	0	True				
ANR	10593396	OrExpression	"BOUNDS ( aIdx1 , exc -> zp2 . n_points ) || BOUNDS ( aIdx2 , exc -> zp1 . n_points )"		10593364	0		||			
ANR	10593397	CallExpression	"BOUNDS ( aIdx1 , exc -> zp2 . n_points )"		10593364	0					
ANR	10593398	Callee	BOUNDS		10593364	0					
ANR	10593399	Identifier	BOUNDS		10593364	0					
ANR	10593400	ArgumentList	aIdx1		10593364	1					
ANR	10593401	Argument	aIdx1		10593364	0					
ANR	10593402	Identifier	aIdx1		10593364	0					
ANR	10593403	Argument	exc -> zp2 . n_points		10593364	1					
ANR	10593404	MemberAccess	exc -> zp2 . n_points		10593364	0					
ANR	10593405	PtrMemberAccess	exc -> zp2		10593364	0					
ANR	10593406	Identifier	exc		10593364	0					
ANR	10593407	Identifier	zp2		10593364	1					
ANR	10593408	Identifier	n_points		10593364	1					
ANR	10593409	CallExpression	"BOUNDS ( aIdx2 , exc -> zp1 . n_points )"		10593364	1					
ANR	10593410	Callee	BOUNDS		10593364	0					
ANR	10593411	Identifier	BOUNDS		10593364	0					
ANR	10593412	ArgumentList	aIdx2		10593364	1					
ANR	10593413	Argument	aIdx2		10593364	0					
ANR	10593414	Identifier	aIdx2		10593364	0					
ANR	10593415	Argument	exc -> zp1 . n_points		10593364	1					
ANR	10593416	MemberAccess	exc -> zp1 . n_points		10593364	0					
ANR	10593417	PtrMemberAccess	exc -> zp1		10593364	0					
ANR	10593418	Identifier	exc		10593364	0					
ANR	10593419	Identifier	zp1		10593364	1					
ANR	10593420	Identifier	n_points		10593364	1					
ANR	10593421	CompoundStatement		11:4:201:201	10593364	1					
ANR	10593422	IfStatement	if ( exc -> pedantic_hinting )		10593364	0					
ANR	10593423	Condition	exc -> pedantic_hinting	4242:11:152980:153000	10593364	0	True				
ANR	10593424	PtrMemberAccess	exc -> pedantic_hinting		10593364	0					
ANR	10593425	Identifier	exc		10593364	0					
ANR	10593426	Identifier	pedantic_hinting		10593364	1					
ANR	10593427	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	4243:8:153012:153054	10593364	1	True				
ANR	10593428	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10593364	0		=			
ANR	10593429	PtrMemberAccess	exc -> error		10593364	0					
ANR	10593430	Identifier	exc		10593364	0					
ANR	10593431	Identifier	error		10593364	1					
ANR	10593432	CallExpression	FT_THROW ( Invalid_Reference )		10593364	1					
ANR	10593433	Callee	FT_THROW		10593364	0					
ANR	10593434	Identifier	FT_THROW		10593364	0					
ANR	10593435	ArgumentList	Invalid_Reference		10593364	1					
ANR	10593436	Argument	Invalid_Reference		10593364	0					
ANR	10593437	Identifier	Invalid_Reference		10593364	0					
ANR	10593438	ReturnStatement	return FAILURE ;	4244:6:153062:153076	10593364	1	True				
ANR	10593439	Identifier	FAILURE		10593364	0					
ANR	10593440	ExpressionStatement	p1 = exc -> zp1 . cur + aIdx2	4247:4:153089:153114	10593364	5	True				
ANR	10593441	AssignmentExpression	p1 = exc -> zp1 . cur + aIdx2		10593364	0		=			
ANR	10593442	Identifier	p1		10593364	0					
ANR	10593443	AdditiveExpression	exc -> zp1 . cur + aIdx2		10593364	1		+			
ANR	10593444	MemberAccess	exc -> zp1 . cur		10593364	0					
ANR	10593445	PtrMemberAccess	exc -> zp1		10593364	0					
ANR	10593446	Identifier	exc		10593364	0					
ANR	10593447	Identifier	zp1		10593364	1					
ANR	10593448	Identifier	cur		10593364	1					
ANR	10593449	Identifier	aIdx2		10593364	1					
ANR	10593450	ExpressionStatement	p2 = exc -> zp2 . cur + aIdx1	4248:4:153120:153145	10593364	6	True				
ANR	10593451	AssignmentExpression	p2 = exc -> zp2 . cur + aIdx1		10593364	0		=			
ANR	10593452	Identifier	p2		10593364	0					
ANR	10593453	AdditiveExpression	exc -> zp2 . cur + aIdx1		10593364	1		+			
ANR	10593454	MemberAccess	exc -> zp2 . cur		10593364	0					
ANR	10593455	PtrMemberAccess	exc -> zp2		10593364	0					
ANR	10593456	Identifier	exc		10593364	0					
ANR	10593457	Identifier	zp2		10593364	1					
ANR	10593458	Identifier	cur		10593364	1					
ANR	10593459	Identifier	aIdx1		10593364	1					
ANR	10593460	ExpressionStatement	"A = SUB_LONG ( p1 -> x , p2 -> x )"	4250:4:153152:153180	10593364	7	True				
ANR	10593461	AssignmentExpression	"A = SUB_LONG ( p1 -> x , p2 -> x )"		10593364	0		=			
ANR	10593462	Identifier	A		10593364	0					
ANR	10593463	CallExpression	"SUB_LONG ( p1 -> x , p2 -> x )"		10593364	1					
ANR	10593464	Callee	SUB_LONG		10593364	0					
ANR	10593465	Identifier	SUB_LONG		10593364	0					
ANR	10593466	ArgumentList	p1 -> x		10593364	1					
ANR	10593467	Argument	p1 -> x		10593364	0					
ANR	10593468	PtrMemberAccess	p1 -> x		10593364	0					
ANR	10593469	Identifier	p1		10593364	0					
ANR	10593470	Identifier	x		10593364	1					
ANR	10593471	Argument	p2 -> x		10593364	1					
ANR	10593472	PtrMemberAccess	p2 -> x		10593364	0					
ANR	10593473	Identifier	p2		10593364	0					
ANR	10593474	Identifier	x		10593364	1					
ANR	10593475	ExpressionStatement	"B = SUB_LONG ( p1 -> y , p2 -> y )"	4251:4:153186:153214	10593364	8	True				
ANR	10593476	AssignmentExpression	"B = SUB_LONG ( p1 -> y , p2 -> y )"		10593364	0		=			
ANR	10593477	Identifier	B		10593364	0					
ANR	10593478	CallExpression	"SUB_LONG ( p1 -> y , p2 -> y )"		10593364	1					
ANR	10593479	Callee	SUB_LONG		10593364	0					
ANR	10593480	Identifier	SUB_LONG		10593364	0					
ANR	10593481	ArgumentList	p1 -> y		10593364	1					
ANR	10593482	Argument	p1 -> y		10593364	0					
ANR	10593483	PtrMemberAccess	p1 -> y		10593364	0					
ANR	10593484	Identifier	p1		10593364	0					
ANR	10593485	Identifier	y		10593364	1					
ANR	10593486	Argument	p2 -> y		10593364	1					
ANR	10593487	PtrMemberAccess	p2 -> y		10593364	0					
ANR	10593488	Identifier	p2		10593364	0					
ANR	10593489	Identifier	y		10593364	1					
ANR	10593490	IfStatement	if ( A == 0 && B == 0 )		10593364	9					
ANR	10593491	Condition	A == 0 && B == 0	4258:9:153459:153474	10593364	0	True				
ANR	10593492	AndExpression	A == 0 && B == 0		10593364	0		&&			
ANR	10593493	EqualityExpression	A == 0		10593364	0		==			
ANR	10593494	Identifier	A		10593364	0					
ANR	10593495	PrimaryExpression	0		10593364	1					
ANR	10593496	EqualityExpression	B == 0		10593364	1		==			
ANR	10593497	Identifier	B		10593364	0					
ANR	10593498	PrimaryExpression	0		10593364	1					
ANR	10593499	CompoundStatement		29:4:716:716	10593364	1					
ANR	10593500	ExpressionStatement	A = 0x4000	4260:6:153490:153505	10593364	0	True				
ANR	10593501	AssignmentExpression	A = 0x4000		10593364	0		=			
ANR	10593502	Identifier	A		10593364	0					
ANR	10593503	PrimaryExpression	0x4000		10593364	1					
ANR	10593504	ExpressionStatement	opcode = 0	4261:6:153513:153523	10593364	1	True				
ANR	10593505	AssignmentExpression	opcode = 0		10593364	0		=			
ANR	10593506	Identifier	opcode		10593364	0					
ANR	10593507	PrimaryExpression	0		10593364	1					
ANR	10593508	IfStatement	if ( ( opcode & 1 ) != 0 )		10593364	10					
ANR	10593509	Condition	( opcode & 1 ) != 0	4264:9:153541:153559	10593364	0	True				
ANR	10593510	EqualityExpression	( opcode & 1 ) != 0		10593364	0		!=			
ANR	10593511	BitAndExpression	opcode & 1		10593364	0		&			
ANR	10593512	Identifier	opcode		10593364	0					
ANR	10593513	PrimaryExpression	1		10593364	1					
ANR	10593514	PrimaryExpression	0		10593364	1					
ANR	10593515	CompoundStatement		35:4:801:801	10593364	1					
ANR	10593516	ExpressionStatement	C = B	4266:6:153575:153580	10593364	0	True				
ANR	10593517	AssignmentExpression	C = B		10593364	0		=			
ANR	10593518	Identifier	C		10593364	0					
ANR	10593519	Identifier	B		10593364	1					
ANR	10593520	ExpressionStatement	B = A	4267:6:153623:153628	10593364	1	True				
ANR	10593521	AssignmentExpression	B = A		10593364	0		=			
ANR	10593522	Identifier	B		10593364	0					
ANR	10593523	Identifier	A		10593364	1					
ANR	10593524	ExpressionStatement	A = NEG_LONG ( C )	4268:6:153636:153653	10593364	2	True				
ANR	10593525	AssignmentExpression	A = NEG_LONG ( C )		10593364	0		=			
ANR	10593526	Identifier	A		10593364	0					
ANR	10593527	CallExpression	NEG_LONG ( C )		10593364	1					
ANR	10593528	Callee	NEG_LONG		10593364	0					
ANR	10593529	Identifier	NEG_LONG		10593364	0					
ANR	10593530	ArgumentList	C		10593364	1					
ANR	10593531	Argument	C		10593364	0					
ANR	10593532	Identifier	C		10593364	0					
ANR	10593533	ExpressionStatement	"Normalize ( A , B , Vec )"	4271:4:153666:153688	10593364	11	True				
ANR	10593534	CallExpression	"Normalize ( A , B , Vec )"		10593364	0					
ANR	10593535	Callee	Normalize		10593364	0					
ANR	10593536	Identifier	Normalize		10593364	0					
ANR	10593537	ArgumentList	A		10593364	1					
ANR	10593538	Argument	A		10593364	0					
ANR	10593539	Identifier	A		10593364	0					
ANR	10593540	Argument	B		10593364	1					
ANR	10593541	Identifier	B		10593364	0					
ANR	10593542	Argument	Vec		10593364	2					
ANR	10593543	Identifier	Vec		10593364	0					
ANR	10593544	ReturnStatement	return SUCCESS ;	4273:4:153695:153709	10593364	12	True				
ANR	10593545	Identifier	SUCCESS		10593364	0					
ANR	10593546	ReturnType	static FT_Bool		10593364	1					
ANR	10593547	Identifier	Ins_SxVTL		10593364	2					
ANR	10593548	ParameterList	"TT_ExecContext exc , FT_UShort aIdx1 , FT_UShort aIdx2 , FT_UnitVector * Vec"		10593364	3					
ANR	10593549	Parameter	TT_ExecContext exc	4227:13:152635:152653	10593364	0	True				
ANR	10593550	ParameterType	TT_ExecContext		10593364	0					
ANR	10593551	Identifier	exc		10593364	1					
ANR	10593552	Parameter	FT_UShort aIdx1	4228:13:152669:152689	10593364	1	True				
ANR	10593553	ParameterType	FT_UShort		10593364	0					
ANR	10593554	Identifier	aIdx1		10593364	1					
ANR	10593555	Parameter	FT_UShort aIdx2	4229:13:152705:152725	10593364	2	True				
ANR	10593556	ParameterType	FT_UShort		10593364	0					
ANR	10593557	Identifier	aIdx2		10593364	1					
ANR	10593558	Parameter	FT_UnitVector * Vec	4230:13:152741:152759	10593364	3	True				
ANR	10593559	ParameterType	FT_UnitVector *		10593364	0					
ANR	10593560	Identifier	Vec		10593364	1					
ANR	10593561	CFGEntryNode	ENTRY		10593364		True				
ANR	10593562	CFGExitNode	EXIT		10593364		True				
ANR	10593563	Symbol	A		10593364						
ANR	10593564	Symbol	p1		10593364						
ANR	10593565	Symbol	B		10593364						
ANR	10593566	Symbol	p2		10593364						
ANR	10593567	Symbol	C		10593364						
ANR	10593568	Symbol	p2 -> x		10593364						
ANR	10593569	Symbol	* exc		10593364						
ANR	10593570	Symbol	SUB_LONG		10593364						
ANR	10593571	Symbol	opcode		10593364						
ANR	10593572	Symbol	p2 -> y		10593364						
ANR	10593573	Symbol	exc		10593364						
ANR	10593574	Symbol	Invalid_Reference		10593364						
ANR	10593575	Symbol	BOUNDS		10593364						
ANR	10593576	Symbol	NEG_LONG		10593364						
ANR	10593577	Symbol	exc -> error		10593364						
ANR	10593578	Symbol	SUCCESS		10593364						
ANR	10593579	Symbol	* p1		10593364						
ANR	10593580	Symbol	exc -> zp1 . n_points		10593364						
ANR	10593581	Symbol	p1 -> y		10593364						
ANR	10593582	Symbol	p1 -> x		10593364						
ANR	10593583	Symbol	exc -> pedantic_hinting		10593364						
ANR	10593584	Symbol	exc -> zp2 . cur		10593364						
ANR	10593585	Symbol	* p2		10593364						
ANR	10593586	Symbol	aIdx1		10593364						
ANR	10593587	Symbol	FAILURE		10593364						
ANR	10593588	Symbol	FT_THROW		10593364						
ANR	10593589	Symbol	aIdx2		10593364						
ANR	10593590	Symbol	exc -> zp2		10593364						
ANR	10593591	Symbol	exc -> zp1		10593364						
ANR	10593592	Symbol	exc -> zp2 . n_points		10593364						
ANR	10593593	Symbol	Vec		10593364						
ANR	10593594	Symbol	exc -> zp1 . cur		10593364						
ANR	10593595	Symbol	exc -> opcode		10593364						
ANR	10593596	Function	Ins_SxyTCA	4291:2:154811:155311							
ANR	10593597	FunctionDef	Ins_SxyTCA (TT_ExecContext exc)		10593596	0					
ANR	10593598	CompoundStatement		4293:2:154861:155311	10593596	0					
ANR	10593599	IdentifierDeclStatement	"FT_Short AA , BB ;"	4294:4:154867:154883	10593596	0	True				
ANR	10593600	IdentifierDecl	AA		10593596	0					
ANR	10593601	IdentifierDeclType	FT_Short		10593596	0					
ANR	10593602	Identifier	AA		10593596	1					
ANR	10593603	IdentifierDecl	BB		10593596	1					
ANR	10593604	IdentifierDeclType	FT_Short		10593596	0					
ANR	10593605	Identifier	BB		10593596	1					
ANR	10593606	IdentifierDeclStatement	FT_Byte opcode = exc -> opcode ;	4296:4:154890:154919	10593596	1	True				
ANR	10593607	IdentifierDecl	opcode = exc -> opcode		10593596	0					
ANR	10593608	IdentifierDeclType	FT_Byte		10593596	0					
ANR	10593609	Identifier	opcode		10593596	1					
ANR	10593610	AssignmentExpression	opcode = exc -> opcode		10593596	2		=			
ANR	10593611	Identifier	opcode		10593596	0					
ANR	10593612	PtrMemberAccess	exc -> opcode		10593596	1					
ANR	10593613	Identifier	exc		10593596	0					
ANR	10593614	Identifier	opcode		10593596	1					
ANR	10593615	ExpressionStatement	AA = ( FT_Short ) ( ( opcode & 1 ) << 14 )	4299:4:154927:154966	10593596	2	True				
ANR	10593616	AssignmentExpression	AA = ( FT_Short ) ( ( opcode & 1 ) << 14 )		10593596	0		=			
ANR	10593617	Identifier	AA		10593596	0					
ANR	10593618	CastExpression	( FT_Short ) ( ( opcode & 1 ) << 14 )		10593596	1					
ANR	10593619	CastTarget	FT_Short		10593596	0					
ANR	10593620	ShiftExpression	( opcode & 1 ) << 14		10593596	1		<<			
ANR	10593621	BitAndExpression	opcode & 1		10593596	0		&			
ANR	10593622	Identifier	opcode		10593596	0					
ANR	10593623	PrimaryExpression	1		10593596	1					
ANR	10593624	PrimaryExpression	14		10593596	1					
ANR	10593625	ExpressionStatement	BB = ( FT_Short ) ( AA ^ 0x4000 )	4300:4:154972:155002	10593596	3	True				
ANR	10593626	AssignmentExpression	BB = ( FT_Short ) ( AA ^ 0x4000 )		10593596	0		=			
ANR	10593627	Identifier	BB		10593596	0					
ANR	10593628	CastExpression	( FT_Short ) ( AA ^ 0x4000 )		10593596	1					
ANR	10593629	CastTarget	FT_Short		10593596	0					
ANR	10593630	ExclusiveOrExpression	AA ^ 0x4000		10593596	1		^			
ANR	10593631	Identifier	AA		10593596	0					
ANR	10593632	PrimaryExpression	0x4000		10593596	1					
ANR	10593633	IfStatement	if ( opcode < 4 )		10593596	4					
ANR	10593634	Condition	opcode < 4	4302:9:155014:155023	10593596	0	True				
ANR	10593635	RelationalExpression	opcode < 4		10593596	0		<			
ANR	10593636	Identifier	opcode		10593596	0					
ANR	10593637	PrimaryExpression	4		10593596	1					
ANR	10593638	CompoundStatement		11:4:169:169	10593596	1					
ANR	10593639	ExpressionStatement	exc -> GS . projVector . x = AA	4304:6:155039:155064	10593596	0	True				
ANR	10593640	AssignmentExpression	exc -> GS . projVector . x = AA		10593596	0		=			
ANR	10593641	MemberAccess	exc -> GS . projVector . x		10593596	0					
ANR	10593642	MemberAccess	exc -> GS . projVector		10593596	0					
ANR	10593643	PtrMemberAccess	exc -> GS		10593596	0					
ANR	10593644	Identifier	exc		10593596	0					
ANR	10593645	Identifier	GS		10593596	1					
ANR	10593646	Identifier	projVector		10593596	1					
ANR	10593647	Identifier	x		10593596	1					
ANR	10593648	Identifier	AA		10593596	1					
ANR	10593649	ExpressionStatement	exc -> GS . projVector . y = BB	4305:6:155072:155097	10593596	1	True				
ANR	10593650	AssignmentExpression	exc -> GS . projVector . y = BB		10593596	0		=			
ANR	10593651	MemberAccess	exc -> GS . projVector . y		10593596	0					
ANR	10593652	MemberAccess	exc -> GS . projVector		10593596	0					
ANR	10593653	PtrMemberAccess	exc -> GS		10593596	0					
ANR	10593654	Identifier	exc		10593596	0					
ANR	10593655	Identifier	GS		10593596	1					
ANR	10593656	Identifier	projVector		10593596	1					
ANR	10593657	Identifier	y		10593596	1					
ANR	10593658	Identifier	BB		10593596	1					
ANR	10593659	ExpressionStatement	exc -> GS . dualVector . x = AA	4307:6:155106:155131	10593596	2	True				
ANR	10593660	AssignmentExpression	exc -> GS . dualVector . x = AA		10593596	0		=			
ANR	10593661	MemberAccess	exc -> GS . dualVector . x		10593596	0					
ANR	10593662	MemberAccess	exc -> GS . dualVector		10593596	0					
ANR	10593663	PtrMemberAccess	exc -> GS		10593596	0					
ANR	10593664	Identifier	exc		10593596	0					
ANR	10593665	Identifier	GS		10593596	1					
ANR	10593666	Identifier	dualVector		10593596	1					
ANR	10593667	Identifier	x		10593596	1					
ANR	10593668	Identifier	AA		10593596	1					
ANR	10593669	ExpressionStatement	exc -> GS . dualVector . y = BB	4308:6:155139:155164	10593596	3	True				
ANR	10593670	AssignmentExpression	exc -> GS . dualVector . y = BB		10593596	0		=			
ANR	10593671	MemberAccess	exc -> GS . dualVector . y		10593596	0					
ANR	10593672	MemberAccess	exc -> GS . dualVector		10593596	0					
ANR	10593673	PtrMemberAccess	exc -> GS		10593596	0					
ANR	10593674	Identifier	exc		10593596	0					
ANR	10593675	Identifier	GS		10593596	1					
ANR	10593676	Identifier	dualVector		10593596	1					
ANR	10593677	Identifier	y		10593596	1					
ANR	10593678	Identifier	BB		10593596	1					
ANR	10593679	IfStatement	if ( ( opcode & 2 ) == 0 )		10593596	5					
ANR	10593680	Condition	( opcode & 2 ) == 0	4311:9:155182:155200	10593596	0	True				
ANR	10593681	EqualityExpression	( opcode & 2 ) == 0		10593596	0		==			
ANR	10593682	BitAndExpression	opcode & 2		10593596	0		&			
ANR	10593683	Identifier	opcode		10593596	0					
ANR	10593684	PrimaryExpression	2		10593596	1					
ANR	10593685	PrimaryExpression	0		10593596	1					
ANR	10593686	CompoundStatement		20:4:346:346	10593596	1					
ANR	10593687	ExpressionStatement	exc -> GS . freeVector . x = AA	4313:6:155216:155241	10593596	0	True				
ANR	10593688	AssignmentExpression	exc -> GS . freeVector . x = AA		10593596	0		=			
ANR	10593689	MemberAccess	exc -> GS . freeVector . x		10593596	0					
ANR	10593690	MemberAccess	exc -> GS . freeVector		10593596	0					
ANR	10593691	PtrMemberAccess	exc -> GS		10593596	0					
ANR	10593692	Identifier	exc		10593596	0					
ANR	10593693	Identifier	GS		10593596	1					
ANR	10593694	Identifier	freeVector		10593596	1					
ANR	10593695	Identifier	x		10593596	1					
ANR	10593696	Identifier	AA		10593596	1					
ANR	10593697	ExpressionStatement	exc -> GS . freeVector . y = BB	4314:6:155249:155274	10593596	1	True				
ANR	10593698	AssignmentExpression	exc -> GS . freeVector . y = BB		10593596	0		=			
ANR	10593699	MemberAccess	exc -> GS . freeVector . y		10593596	0					
ANR	10593700	MemberAccess	exc -> GS . freeVector		10593596	0					
ANR	10593701	PtrMemberAccess	exc -> GS		10593596	0					
ANR	10593702	Identifier	exc		10593596	0					
ANR	10593703	Identifier	GS		10593596	1					
ANR	10593704	Identifier	freeVector		10593596	1					
ANR	10593705	Identifier	y		10593596	1					
ANR	10593706	Identifier	BB		10593596	1					
ANR	10593707	ExpressionStatement	Compute_Funcs ( exc )	4317:4:155287:155307	10593596	6	True				
ANR	10593708	CallExpression	Compute_Funcs ( exc )		10593596	0					
ANR	10593709	Callee	Compute_Funcs		10593596	0					
ANR	10593710	Identifier	Compute_Funcs		10593596	0					
ANR	10593711	ArgumentList	exc		10593596	1					
ANR	10593712	Argument	exc		10593596	0					
ANR	10593713	Identifier	exc		10593596	0					
ANR	10593714	ReturnType	static void		10593596	1					
ANR	10593715	Identifier	Ins_SxyTCA		10593596	2					
ANR	10593716	ParameterList	TT_ExecContext exc		10593596	3					
ANR	10593717	Parameter	TT_ExecContext exc	4292:14:154837:154855	10593596	0	True				
ANR	10593718	ParameterType	TT_ExecContext		10593596	0					
ANR	10593719	Identifier	exc		10593596	1					
ANR	10593720	CFGEntryNode	ENTRY		10593596		True				
ANR	10593721	CFGExitNode	EXIT		10593596		True				
ANR	10593722	Symbol	AA		10593596						
ANR	10593723	Symbol	BB		10593596						
ANR	10593724	Symbol	exc -> GS . freeVector . x		10593596						
ANR	10593725	Symbol	exc -> GS . freeVector . y		10593596						
ANR	10593726	Symbol	* exc		10593596						
ANR	10593727	Symbol	exc -> GS . dualVector . x		10593596						
ANR	10593728	Symbol	exc -> GS . dualVector . y		10593596						
ANR	10593729	Symbol	opcode		10593596						
ANR	10593730	Symbol	exc -> GS		10593596						
ANR	10593731	Symbol	exc -> GS . dualVector		10593596						
ANR	10593732	Symbol	exc		10593596						
ANR	10593733	Symbol	exc -> GS . projVector		10593596						
ANR	10593734	Symbol	exc -> opcode		10593596						
ANR	10593735	Symbol	exc -> GS . projVector . x		10593596						
ANR	10593736	Symbol	exc -> GS . projVector . y		10593596						
ANR	10593737	Symbol	exc -> GS . freeVector		10593596						
ANR	10593738	Function	Ins_SPVTL	4327:2:155785:156120							
ANR	10593739	FunctionDef	"Ins_SPVTL (TT_ExecContext exc , FT_Long * args)"		10593738	0					
ANR	10593740	CompoundStatement		4330:2:155869:156120	10593738	0					
ANR	10593741	IfStatement	"if ( Ins_SxVTL ( exc , ( FT_UShort ) args [ 1 ] , ( FT_UShort ) args [ 0 ] , & exc -> GS . projVector ) == SUCCESS )"		10593738	0					
ANR	10593742	Condition	"Ins_SxVTL ( exc , ( FT_UShort ) args [ 1 ] , ( FT_UShort ) args [ 0 ] , & exc -> GS . projVector ) == SUCCESS"	4331:9:155880:156027	10593738	0	True				
ANR	10593743	EqualityExpression	"Ins_SxVTL ( exc , ( FT_UShort ) args [ 1 ] , ( FT_UShort ) args [ 0 ] , & exc -> GS . projVector ) == SUCCESS"		10593738	0		==			
ANR	10593744	CallExpression	"Ins_SxVTL ( exc , ( FT_UShort ) args [ 1 ] , ( FT_UShort ) args [ 0 ] , & exc -> GS . projVector )"		10593738	0					
ANR	10593745	Callee	Ins_SxVTL		10593738	0					
ANR	10593746	Identifier	Ins_SxVTL		10593738	0					
ANR	10593747	ArgumentList	exc		10593738	1					
ANR	10593748	Argument	exc		10593738	0					
ANR	10593749	Identifier	exc		10593738	0					
ANR	10593750	Argument	( FT_UShort ) args [ 1 ]		10593738	1					
ANR	10593751	CastExpression	( FT_UShort ) args [ 1 ]		10593738	0					
ANR	10593752	CastTarget	FT_UShort		10593738	0					
ANR	10593753	ArrayIndexing	args [ 1 ]		10593738	1					
ANR	10593754	Identifier	args		10593738	0					
ANR	10593755	PrimaryExpression	1		10593738	1					
ANR	10593756	Argument	( FT_UShort ) args [ 0 ]		10593738	2					
ANR	10593757	CastExpression	( FT_UShort ) args [ 0 ]		10593738	0					
ANR	10593758	CastTarget	FT_UShort		10593738	0					
ANR	10593759	ArrayIndexing	args [ 0 ]		10593738	1					
ANR	10593760	Identifier	args		10593738	0					
ANR	10593761	PrimaryExpression	0		10593738	1					
ANR	10593762	Argument	& exc -> GS . projVector		10593738	3					
ANR	10593763	UnaryOperationExpression	& exc -> GS . projVector		10593738	0					
ANR	10593764	UnaryOperator	&		10593738	0					
ANR	10593765	MemberAccess	exc -> GS . projVector		10593738	1					
ANR	10593766	PtrMemberAccess	exc -> GS		10593738	0					
ANR	10593767	Identifier	exc		10593738	0					
ANR	10593768	Identifier	GS		10593738	1					
ANR	10593769	Identifier	projVector		10593738	1					
ANR	10593770	Identifier	SUCCESS		10593738	1					
ANR	10593771	CompoundStatement		6:4:165:165	10593738	1					
ANR	10593772	ExpressionStatement	exc -> GS . dualVector = exc -> GS . projVector	4336:6:156043:156082	10593738	0	True				
ANR	10593773	AssignmentExpression	exc -> GS . dualVector = exc -> GS . projVector		10593738	0		=			
ANR	10593774	MemberAccess	exc -> GS . dualVector		10593738	0					
ANR	10593775	PtrMemberAccess	exc -> GS		10593738	0					
ANR	10593776	Identifier	exc		10593738	0					
ANR	10593777	Identifier	GS		10593738	1					
ANR	10593778	Identifier	dualVector		10593738	1					
ANR	10593779	MemberAccess	exc -> GS . projVector		10593738	1					
ANR	10593780	PtrMemberAccess	exc -> GS		10593738	0					
ANR	10593781	Identifier	exc		10593738	0					
ANR	10593782	Identifier	GS		10593738	1					
ANR	10593783	Identifier	projVector		10593738	1					
ANR	10593784	ExpressionStatement	Compute_Funcs ( exc )	4337:6:156090:156110	10593738	1	True				
ANR	10593785	CallExpression	Compute_Funcs ( exc )		10593738	0					
ANR	10593786	Callee	Compute_Funcs		10593738	0					
ANR	10593787	Identifier	Compute_Funcs		10593738	0					
ANR	10593788	ArgumentList	exc		10593738	1					
ANR	10593789	Argument	exc		10593738	0					
ANR	10593790	Identifier	exc		10593738	0					
ANR	10593791	ReturnType	static void		10593738	1					
ANR	10593792	Identifier	Ins_SPVTL		10593738	2					
ANR	10593793	ParameterList	"TT_ExecContext exc , FT_Long * args"		10593738	3					
ANR	10593794	Parameter	TT_ExecContext exc	4328:13:155810:155828	10593738	0	True				
ANR	10593795	ParameterType	TT_ExecContext		10593738	0					
ANR	10593796	Identifier	exc		10593738	1					
ANR	10593797	Parameter	FT_Long * args	4329:13:155844:155863	10593738	1	True				
ANR	10593798	ParameterType	FT_Long *		10593738	0					
ANR	10593799	Identifier	args		10593738	1					
ANR	10593800	CFGEntryNode	ENTRY		10593738		True				
ANR	10593801	CFGExitNode	EXIT		10593738		True				
ANR	10593802	Symbol	args		10593738						
ANR	10593803	Symbol	exc		10593738						
ANR	10593804	Symbol	& exc -> GS . projVector		10593738						
ANR	10593805	Symbol	SUCCESS		10593738						
ANR	10593806	Symbol	* exc		10593738						
ANR	10593807	Symbol	exc -> GS . projVector		10593738						
ANR	10593808	Symbol	& exc -> GS		10593738						
ANR	10593809	Symbol	exc -> GS		10593738						
ANR	10593810	Symbol	exc -> GS . dualVector		10593738						
ANR	10593811	Symbol	* args		10593738						
ANR	10593812	Symbol	Ins_SxVTL		10593738						
ANR	10593813	Function	Ins_SFVTL	4348:2:156594:156882							
ANR	10593814	FunctionDef	"Ins_SFVTL (TT_ExecContext exc , FT_Long * args)"		10593813	0					
ANR	10593815	CompoundStatement		4351:2:156678:156882	10593813	0					
ANR	10593816	IfStatement	"if ( Ins_SxVTL ( exc , ( FT_UShort ) args [ 1 ] , ( FT_UShort ) args [ 0 ] , & exc -> GS . freeVector ) == SUCCESS )"		10593813	0					
ANR	10593817	Condition	"Ins_SxVTL ( exc , ( FT_UShort ) args [ 1 ] , ( FT_UShort ) args [ 0 ] , & exc -> GS . freeVector ) == SUCCESS"	4352:9:156689:156836	10593813	0	True				
ANR	10593818	EqualityExpression	"Ins_SxVTL ( exc , ( FT_UShort ) args [ 1 ] , ( FT_UShort ) args [ 0 ] , & exc -> GS . freeVector ) == SUCCESS"		10593813	0		==			
ANR	10593819	CallExpression	"Ins_SxVTL ( exc , ( FT_UShort ) args [ 1 ] , ( FT_UShort ) args [ 0 ] , & exc -> GS . freeVector )"		10593813	0					
ANR	10593820	Callee	Ins_SxVTL		10593813	0					
ANR	10593821	Identifier	Ins_SxVTL		10593813	0					
ANR	10593822	ArgumentList	exc		10593813	1					
ANR	10593823	Argument	exc		10593813	0					
ANR	10593824	Identifier	exc		10593813	0					
ANR	10593825	Argument	( FT_UShort ) args [ 1 ]		10593813	1					
ANR	10593826	CastExpression	( FT_UShort ) args [ 1 ]		10593813	0					
ANR	10593827	CastTarget	FT_UShort		10593813	0					
ANR	10593828	ArrayIndexing	args [ 1 ]		10593813	1					
ANR	10593829	Identifier	args		10593813	0					
ANR	10593830	PrimaryExpression	1		10593813	1					
ANR	10593831	Argument	( FT_UShort ) args [ 0 ]		10593813	2					
ANR	10593832	CastExpression	( FT_UShort ) args [ 0 ]		10593813	0					
ANR	10593833	CastTarget	FT_UShort		10593813	0					
ANR	10593834	ArrayIndexing	args [ 0 ]		10593813	1					
ANR	10593835	Identifier	args		10593813	0					
ANR	10593836	PrimaryExpression	0		10593813	1					
ANR	10593837	Argument	& exc -> GS . freeVector		10593813	3					
ANR	10593838	UnaryOperationExpression	& exc -> GS . freeVector		10593813	0					
ANR	10593839	UnaryOperator	&		10593813	0					
ANR	10593840	MemberAccess	exc -> GS . freeVector		10593813	1					
ANR	10593841	PtrMemberAccess	exc -> GS		10593813	0					
ANR	10593842	Identifier	exc		10593813	0					
ANR	10593843	Identifier	GS		10593813	1					
ANR	10593844	Identifier	freeVector		10593813	1					
ANR	10593845	Identifier	SUCCESS		10593813	1					
ANR	10593846	CompoundStatement		6:4:165:165	10593813	1					
ANR	10593847	ExpressionStatement	Compute_Funcs ( exc )	4357:6:156852:156872	10593813	0	True				
ANR	10593848	CallExpression	Compute_Funcs ( exc )		10593813	0					
ANR	10593849	Callee	Compute_Funcs		10593813	0					
ANR	10593850	Identifier	Compute_Funcs		10593813	0					
ANR	10593851	ArgumentList	exc		10593813	1					
ANR	10593852	Argument	exc		10593813	0					
ANR	10593853	Identifier	exc		10593813	0					
ANR	10593854	ReturnType	static void		10593813	1					
ANR	10593855	Identifier	Ins_SFVTL		10593813	2					
ANR	10593856	ParameterList	"TT_ExecContext exc , FT_Long * args"		10593813	3					
ANR	10593857	Parameter	TT_ExecContext exc	4349:13:156619:156637	10593813	0	True				
ANR	10593858	ParameterType	TT_ExecContext		10593813	0					
ANR	10593859	Identifier	exc		10593813	1					
ANR	10593860	Parameter	FT_Long * args	4350:13:156653:156672	10593813	1	True				
ANR	10593861	ParameterType	FT_Long *		10593813	0					
ANR	10593862	Identifier	args		10593813	1					
ANR	10593863	CFGEntryNode	ENTRY		10593813		True				
ANR	10593864	CFGExitNode	EXIT		10593813		True				
ANR	10593865	Symbol	args		10593813						
ANR	10593866	Symbol	exc		10593813						
ANR	10593867	Symbol	SUCCESS		10593813						
ANR	10593868	Symbol	* exc		10593813						
ANR	10593869	Symbol	& exc -> GS . freeVector		10593813						
ANR	10593870	Symbol	& exc -> GS		10593813						
ANR	10593871	Symbol	exc -> GS		10593813						
ANR	10593872	Symbol	* args		10593813						
ANR	10593873	Symbol	Ins_SxVTL		10593813						
ANR	10593874	Function	Ins_SFVTPV	4368:2:157356:157481							
ANR	10593875	FunctionDef	Ins_SFVTPV (TT_ExecContext exc)		10593874	0					
ANR	10593876	CompoundStatement		4370:2:157406:157481	10593874	0					
ANR	10593877	ExpressionStatement	exc -> GS . freeVector = exc -> GS . projVector	4371:4:157412:157451	10593874	0	True				
ANR	10593878	AssignmentExpression	exc -> GS . freeVector = exc -> GS . projVector		10593874	0		=			
ANR	10593879	MemberAccess	exc -> GS . freeVector		10593874	0					
ANR	10593880	PtrMemberAccess	exc -> GS		10593874	0					
ANR	10593881	Identifier	exc		10593874	0					
ANR	10593882	Identifier	GS		10593874	1					
ANR	10593883	Identifier	freeVector		10593874	1					
ANR	10593884	MemberAccess	exc -> GS . projVector		10593874	1					
ANR	10593885	PtrMemberAccess	exc -> GS		10593874	0					
ANR	10593886	Identifier	exc		10593874	0					
ANR	10593887	Identifier	GS		10593874	1					
ANR	10593888	Identifier	projVector		10593874	1					
ANR	10593889	ExpressionStatement	Compute_Funcs ( exc )	4372:4:157457:157477	10593874	1	True				
ANR	10593890	CallExpression	Compute_Funcs ( exc )		10593874	0					
ANR	10593891	Callee	Compute_Funcs		10593874	0					
ANR	10593892	Identifier	Compute_Funcs		10593874	0					
ANR	10593893	ArgumentList	exc		10593874	1					
ANR	10593894	Argument	exc		10593874	0					
ANR	10593895	Identifier	exc		10593874	0					
ANR	10593896	ReturnType	static void		10593874	1					
ANR	10593897	Identifier	Ins_SFVTPV		10593874	2					
ANR	10593898	ParameterList	TT_ExecContext exc		10593874	3					
ANR	10593899	Parameter	TT_ExecContext exc	4369:14:157382:157400	10593874	0	True				
ANR	10593900	ParameterType	TT_ExecContext		10593874	0					
ANR	10593901	Identifier	exc		10593874	1					
ANR	10593902	CFGEntryNode	ENTRY		10593874		True				
ANR	10593903	CFGExitNode	EXIT		10593874		True				
ANR	10593904	Symbol	exc		10593874						
ANR	10593905	Symbol	* exc		10593874						
ANR	10593906	Symbol	exc -> GS . projVector		10593874						
ANR	10593907	Symbol	exc -> GS		10593874						
ANR	10593908	Symbol	exc -> GS . freeVector		10593874						
ANR	10593909	Function	Ins_SPVFS	4382:2:157955:158341							
ANR	10593910	FunctionDef	"Ins_SPVFS (TT_ExecContext exc , FT_Long * args)"		10593909	0					
ANR	10593911	CompoundStatement		4385:2:158039:158341	10593909	0					
ANR	10593912	IdentifierDeclStatement	FT_Short S ;	4386:4:158045:158056	10593909	0	True				
ANR	10593913	IdentifierDecl	S		10593909	0					
ANR	10593914	IdentifierDeclType	FT_Short		10593909	0					
ANR	10593915	Identifier	S		10593909	1					
ANR	10593916	IdentifierDeclStatement	"FT_Long X , Y ;"	4387:4:158062:158076	10593909	1	True				
ANR	10593917	IdentifierDecl	X		10593909	0					
ANR	10593918	IdentifierDeclType	FT_Long		10593909	0					
ANR	10593919	Identifier	X		10593909	1					
ANR	10593920	IdentifierDecl	Y		10593909	1					
ANR	10593921	IdentifierDeclType	FT_Long		10593909	0					
ANR	10593922	Identifier	Y		10593909	1					
ANR	10593923	ExpressionStatement	S = ( FT_Short ) args [ 1 ]	4391:4:158132:158153	10593909	2	True				
ANR	10593924	AssignmentExpression	S = ( FT_Short ) args [ 1 ]		10593909	0		=			
ANR	10593925	Identifier	S		10593909	0					
ANR	10593926	CastExpression	( FT_Short ) args [ 1 ]		10593909	1					
ANR	10593927	CastTarget	FT_Short		10593909	0					
ANR	10593928	ArrayIndexing	args [ 1 ]		10593909	1					
ANR	10593929	Identifier	args		10593909	0					
ANR	10593930	PrimaryExpression	1		10593909	1					
ANR	10593931	ExpressionStatement	Y = ( FT_Long ) S	4392:4:158159:158173	10593909	3	True				
ANR	10593932	AssignmentExpression	Y = ( FT_Long ) S		10593909	0		=			
ANR	10593933	Identifier	Y		10593909	0					
ANR	10593934	CastExpression	( FT_Long ) S		10593909	1					
ANR	10593935	CastTarget	FT_Long		10593909	0					
ANR	10593936	Identifier	S		10593909	1					
ANR	10593937	ExpressionStatement	S = ( FT_Short ) args [ 0 ]	4393:4:158179:158200	10593909	4	True				
ANR	10593938	AssignmentExpression	S = ( FT_Short ) args [ 0 ]		10593909	0		=			
ANR	10593939	Identifier	S		10593909	0					
ANR	10593940	CastExpression	( FT_Short ) args [ 0 ]		10593909	1					
ANR	10593941	CastTarget	FT_Short		10593909	0					
ANR	10593942	ArrayIndexing	args [ 0 ]		10593909	1					
ANR	10593943	Identifier	args		10593909	0					
ANR	10593944	PrimaryExpression	0		10593909	1					
ANR	10593945	ExpressionStatement	X = ( FT_Long ) S	4394:4:158206:158220	10593909	5	True				
ANR	10593946	AssignmentExpression	X = ( FT_Long ) S		10593909	0		=			
ANR	10593947	Identifier	X		10593909	0					
ANR	10593948	CastExpression	( FT_Long ) S		10593909	1					
ANR	10593949	CastTarget	FT_Long		10593909	0					
ANR	10593950	Identifier	S		10593909	1					
ANR	10593951	ExpressionStatement	"Normalize ( X , Y , & exc -> GS . projVector )"	4396:4:158227:158265	10593909	6	True				
ANR	10593952	CallExpression	"Normalize ( X , Y , & exc -> GS . projVector )"		10593909	0					
ANR	10593953	Callee	Normalize		10593909	0					
ANR	10593954	Identifier	Normalize		10593909	0					
ANR	10593955	ArgumentList	X		10593909	1					
ANR	10593956	Argument	X		10593909	0					
ANR	10593957	Identifier	X		10593909	0					
ANR	10593958	Argument	Y		10593909	1					
ANR	10593959	Identifier	Y		10593909	0					
ANR	10593960	Argument	& exc -> GS . projVector		10593909	2					
ANR	10593961	UnaryOperationExpression	& exc -> GS . projVector		10593909	0					
ANR	10593962	UnaryOperator	&		10593909	0					
ANR	10593963	MemberAccess	exc -> GS . projVector		10593909	1					
ANR	10593964	PtrMemberAccess	exc -> GS		10593909	0					
ANR	10593965	Identifier	exc		10593909	0					
ANR	10593966	Identifier	GS		10593909	1					
ANR	10593967	Identifier	projVector		10593909	1					
ANR	10593968	ExpressionStatement	exc -> GS . dualVector = exc -> GS . projVector	4398:4:158272:158311	10593909	7	True				
ANR	10593969	AssignmentExpression	exc -> GS . dualVector = exc -> GS . projVector		10593909	0		=			
ANR	10593970	MemberAccess	exc -> GS . dualVector		10593909	0					
ANR	10593971	PtrMemberAccess	exc -> GS		10593909	0					
ANR	10593972	Identifier	exc		10593909	0					
ANR	10593973	Identifier	GS		10593909	1					
ANR	10593974	Identifier	dualVector		10593909	1					
ANR	10593975	MemberAccess	exc -> GS . projVector		10593909	1					
ANR	10593976	PtrMemberAccess	exc -> GS		10593909	0					
ANR	10593977	Identifier	exc		10593909	0					
ANR	10593978	Identifier	GS		10593909	1					
ANR	10593979	Identifier	projVector		10593909	1					
ANR	10593980	ExpressionStatement	Compute_Funcs ( exc )	4399:4:158317:158337	10593909	8	True				
ANR	10593981	CallExpression	Compute_Funcs ( exc )		10593909	0					
ANR	10593982	Callee	Compute_Funcs		10593909	0					
ANR	10593983	Identifier	Compute_Funcs		10593909	0					
ANR	10593984	ArgumentList	exc		10593909	1					
ANR	10593985	Argument	exc		10593909	0					
ANR	10593986	Identifier	exc		10593909	0					
ANR	10593987	ReturnType	static void		10593909	1					
ANR	10593988	Identifier	Ins_SPVFS		10593909	2					
ANR	10593989	ParameterList	"TT_ExecContext exc , FT_Long * args"		10593909	3					
ANR	10593990	Parameter	TT_ExecContext exc	4383:13:157980:157998	10593909	0	True				
ANR	10593991	ParameterType	TT_ExecContext		10593909	0					
ANR	10593992	Identifier	exc		10593909	1					
ANR	10593993	Parameter	FT_Long * args	4384:13:158014:158033	10593909	1	True				
ANR	10593994	ParameterType	FT_Long *		10593909	0					
ANR	10593995	Identifier	args		10593909	1					
ANR	10593996	CFGEntryNode	ENTRY		10593909		True				
ANR	10593997	CFGExitNode	EXIT		10593909		True				
ANR	10593998	Symbol	args		10593909						
ANR	10593999	Symbol	exc		10593909						
ANR	10594000	Symbol	& exc -> GS . projVector		10593909						
ANR	10594001	Symbol	S		10593909						
ANR	10594002	Symbol	* exc		10593909						
ANR	10594003	Symbol	exc -> GS . projVector		10593909						
ANR	10594004	Symbol	X		10593909						
ANR	10594005	Symbol	Y		10593909						
ANR	10594006	Symbol	& exc -> GS		10593909						
ANR	10594007	Symbol	exc -> GS		10593909						
ANR	10594008	Symbol	exc -> GS . dualVector		10593909						
ANR	10594009	Symbol	* args		10593909						
ANR	10594010	Function	Ins_SFVFS	4409:2:158815:159146							
ANR	10594011	FunctionDef	"Ins_SFVFS (TT_ExecContext exc , FT_Long * args)"		10594010	0					
ANR	10594012	CompoundStatement		4412:2:158899:159146	10594010	0					
ANR	10594013	IdentifierDeclStatement	FT_Short S ;	4413:4:158905:158916	10594010	0	True				
ANR	10594014	IdentifierDecl	S		10594010	0					
ANR	10594015	IdentifierDeclType	FT_Short		10594010	0					
ANR	10594016	Identifier	S		10594010	1					
ANR	10594017	IdentifierDeclStatement	"FT_Long X , Y ;"	4414:4:158922:158936	10594010	1	True				
ANR	10594018	IdentifierDecl	X		10594010	0					
ANR	10594019	IdentifierDeclType	FT_Long		10594010	0					
ANR	10594020	Identifier	X		10594010	1					
ANR	10594021	IdentifierDecl	Y		10594010	1					
ANR	10594022	IdentifierDeclType	FT_Long		10594010	0					
ANR	10594023	Identifier	Y		10594010	1					
ANR	10594024	ExpressionStatement	S = ( FT_Short ) args [ 1 ]	4418:4:158992:159013	10594010	2	True				
ANR	10594025	AssignmentExpression	S = ( FT_Short ) args [ 1 ]		10594010	0		=			
ANR	10594026	Identifier	S		10594010	0					
ANR	10594027	CastExpression	( FT_Short ) args [ 1 ]		10594010	1					
ANR	10594028	CastTarget	FT_Short		10594010	0					
ANR	10594029	ArrayIndexing	args [ 1 ]		10594010	1					
ANR	10594030	Identifier	args		10594010	0					
ANR	10594031	PrimaryExpression	1		10594010	1					
ANR	10594032	ExpressionStatement	Y = ( FT_Long ) S	4419:4:159019:159033	10594010	3	True				
ANR	10594033	AssignmentExpression	Y = ( FT_Long ) S		10594010	0		=			
ANR	10594034	Identifier	Y		10594010	0					
ANR	10594035	CastExpression	( FT_Long ) S		10594010	1					
ANR	10594036	CastTarget	FT_Long		10594010	0					
ANR	10594037	Identifier	S		10594010	1					
ANR	10594038	ExpressionStatement	S = ( FT_Short ) args [ 0 ]	4420:4:159039:159060	10594010	4	True				
ANR	10594039	AssignmentExpression	S = ( FT_Short ) args [ 0 ]		10594010	0		=			
ANR	10594040	Identifier	S		10594010	0					
ANR	10594041	CastExpression	( FT_Short ) args [ 0 ]		10594010	1					
ANR	10594042	CastTarget	FT_Short		10594010	0					
ANR	10594043	ArrayIndexing	args [ 0 ]		10594010	1					
ANR	10594044	Identifier	args		10594010	0					
ANR	10594045	PrimaryExpression	0		10594010	1					
ANR	10594046	ExpressionStatement	X = S	4421:4:159066:159071	10594010	5	True				
ANR	10594047	AssignmentExpression	X = S		10594010	0		=			
ANR	10594048	Identifier	X		10594010	0					
ANR	10594049	Identifier	S		10594010	1					
ANR	10594050	ExpressionStatement	"Normalize ( X , Y , & exc -> GS . freeVector )"	4423:4:159078:159116	10594010	6	True				
ANR	10594051	CallExpression	"Normalize ( X , Y , & exc -> GS . freeVector )"		10594010	0					
ANR	10594052	Callee	Normalize		10594010	0					
ANR	10594053	Identifier	Normalize		10594010	0					
ANR	10594054	ArgumentList	X		10594010	1					
ANR	10594055	Argument	X		10594010	0					
ANR	10594056	Identifier	X		10594010	0					
ANR	10594057	Argument	Y		10594010	1					
ANR	10594058	Identifier	Y		10594010	0					
ANR	10594059	Argument	& exc -> GS . freeVector		10594010	2					
ANR	10594060	UnaryOperationExpression	& exc -> GS . freeVector		10594010	0					
ANR	10594061	UnaryOperator	&		10594010	0					
ANR	10594062	MemberAccess	exc -> GS . freeVector		10594010	1					
ANR	10594063	PtrMemberAccess	exc -> GS		10594010	0					
ANR	10594064	Identifier	exc		10594010	0					
ANR	10594065	Identifier	GS		10594010	1					
ANR	10594066	Identifier	freeVector		10594010	1					
ANR	10594067	ExpressionStatement	Compute_Funcs ( exc )	4424:4:159122:159142	10594010	7	True				
ANR	10594068	CallExpression	Compute_Funcs ( exc )		10594010	0					
ANR	10594069	Callee	Compute_Funcs		10594010	0					
ANR	10594070	Identifier	Compute_Funcs		10594010	0					
ANR	10594071	ArgumentList	exc		10594010	1					
ANR	10594072	Argument	exc		10594010	0					
ANR	10594073	Identifier	exc		10594010	0					
ANR	10594074	ReturnType	static void		10594010	1					
ANR	10594075	Identifier	Ins_SFVFS		10594010	2					
ANR	10594076	ParameterList	"TT_ExecContext exc , FT_Long * args"		10594010	3					
ANR	10594077	Parameter	TT_ExecContext exc	4410:13:158840:158858	10594010	0	True				
ANR	10594078	ParameterType	TT_ExecContext		10594010	0					
ANR	10594079	Identifier	exc		10594010	1					
ANR	10594080	Parameter	FT_Long * args	4411:13:158874:158893	10594010	1	True				
ANR	10594081	ParameterType	FT_Long *		10594010	0					
ANR	10594082	Identifier	args		10594010	1					
ANR	10594083	CFGEntryNode	ENTRY		10594010		True				
ANR	10594084	CFGExitNode	EXIT		10594010		True				
ANR	10594085	Symbol	args		10594010						
ANR	10594086	Symbol	exc		10594010						
ANR	10594087	Symbol	S		10594010						
ANR	10594088	Symbol	* exc		10594010						
ANR	10594089	Symbol	& exc -> GS . freeVector		10594010						
ANR	10594090	Symbol	X		10594010						
ANR	10594091	Symbol	Y		10594010						
ANR	10594092	Symbol	& exc -> GS		10594010						
ANR	10594093	Symbol	exc -> GS		10594010						
ANR	10594094	Symbol	* args		10594010						
ANR	10594095	Function	Ins_GPV	4434:2:159620:159776							
ANR	10594096	FunctionDef	"Ins_GPV (TT_ExecContext exc , FT_Long * args)"		10594095	0					
ANR	10594097	CompoundStatement		4437:2:159700:159776	10594095	0					
ANR	10594098	ExpressionStatement	args [ 0 ] = exc -> GS . projVector . x	4438:4:159706:159736	10594095	0	True				
ANR	10594099	AssignmentExpression	args [ 0 ] = exc -> GS . projVector . x		10594095	0		=			
ANR	10594100	ArrayIndexing	args [ 0 ]		10594095	0					
ANR	10594101	Identifier	args		10594095	0					
ANR	10594102	PrimaryExpression	0		10594095	1					
ANR	10594103	MemberAccess	exc -> GS . projVector . x		10594095	1					
ANR	10594104	MemberAccess	exc -> GS . projVector		10594095	0					
ANR	10594105	PtrMemberAccess	exc -> GS		10594095	0					
ANR	10594106	Identifier	exc		10594095	0					
ANR	10594107	Identifier	GS		10594095	1					
ANR	10594108	Identifier	projVector		10594095	1					
ANR	10594109	Identifier	x		10594095	1					
ANR	10594110	ExpressionStatement	args [ 1 ] = exc -> GS . projVector . y	4439:4:159742:159772	10594095	1	True				
ANR	10594111	AssignmentExpression	args [ 1 ] = exc -> GS . projVector . y		10594095	0		=			
ANR	10594112	ArrayIndexing	args [ 1 ]		10594095	0					
ANR	10594113	Identifier	args		10594095	0					
ANR	10594114	PrimaryExpression	1		10594095	1					
ANR	10594115	MemberAccess	exc -> GS . projVector . y		10594095	1					
ANR	10594116	MemberAccess	exc -> GS . projVector		10594095	0					
ANR	10594117	PtrMemberAccess	exc -> GS		10594095	0					
ANR	10594118	Identifier	exc		10594095	0					
ANR	10594119	Identifier	GS		10594095	1					
ANR	10594120	Identifier	projVector		10594095	1					
ANR	10594121	Identifier	y		10594095	1					
ANR	10594122	ReturnType	static void		10594095	1					
ANR	10594123	Identifier	Ins_GPV		10594095	2					
ANR	10594124	ParameterList	"TT_ExecContext exc , FT_Long * args"		10594095	3					
ANR	10594125	Parameter	TT_ExecContext exc	4435:11:159643:159661	10594095	0	True				
ANR	10594126	ParameterType	TT_ExecContext		10594095	0					
ANR	10594127	Identifier	exc		10594095	1					
ANR	10594128	Parameter	FT_Long * args	4436:11:159675:159694	10594095	1	True				
ANR	10594129	ParameterType	FT_Long *		10594095	0					
ANR	10594130	Identifier	args		10594095	1					
ANR	10594131	CFGEntryNode	ENTRY		10594095		True				
ANR	10594132	CFGExitNode	EXIT		10594095		True				
ANR	10594133	Symbol	args		10594095						
ANR	10594134	Symbol	exc		10594095						
ANR	10594135	Symbol	* exc		10594095						
ANR	10594136	Symbol	exc -> GS . projVector		10594095						
ANR	10594137	Symbol	exc -> GS		10594095						
ANR	10594138	Symbol	exc -> GS . projVector . x		10594095						
ANR	10594139	Symbol	exc -> GS . projVector . y		10594095						
ANR	10594140	Symbol	* args		10594095						
ANR	10594141	Function	Ins_GFV	4449:2:160250:160406							
ANR	10594142	FunctionDef	"Ins_GFV (TT_ExecContext exc , FT_Long * args)"		10594141	0					
ANR	10594143	CompoundStatement		4452:2:160330:160406	10594141	0					
ANR	10594144	ExpressionStatement	args [ 0 ] = exc -> GS . freeVector . x	4453:4:160336:160366	10594141	0	True				
ANR	10594145	AssignmentExpression	args [ 0 ] = exc -> GS . freeVector . x		10594141	0		=			
ANR	10594146	ArrayIndexing	args [ 0 ]		10594141	0					
ANR	10594147	Identifier	args		10594141	0					
ANR	10594148	PrimaryExpression	0		10594141	1					
ANR	10594149	MemberAccess	exc -> GS . freeVector . x		10594141	1					
ANR	10594150	MemberAccess	exc -> GS . freeVector		10594141	0					
ANR	10594151	PtrMemberAccess	exc -> GS		10594141	0					
ANR	10594152	Identifier	exc		10594141	0					
ANR	10594153	Identifier	GS		10594141	1					
ANR	10594154	Identifier	freeVector		10594141	1					
ANR	10594155	Identifier	x		10594141	1					
ANR	10594156	ExpressionStatement	args [ 1 ] = exc -> GS . freeVector . y	4454:4:160372:160402	10594141	1	True				
ANR	10594157	AssignmentExpression	args [ 1 ] = exc -> GS . freeVector . y		10594141	0		=			
ANR	10594158	ArrayIndexing	args [ 1 ]		10594141	0					
ANR	10594159	Identifier	args		10594141	0					
ANR	10594160	PrimaryExpression	1		10594141	1					
ANR	10594161	MemberAccess	exc -> GS . freeVector . y		10594141	1					
ANR	10594162	MemberAccess	exc -> GS . freeVector		10594141	0					
ANR	10594163	PtrMemberAccess	exc -> GS		10594141	0					
ANR	10594164	Identifier	exc		10594141	0					
ANR	10594165	Identifier	GS		10594141	1					
ANR	10594166	Identifier	freeVector		10594141	1					
ANR	10594167	Identifier	y		10594141	1					
ANR	10594168	ReturnType	static void		10594141	1					
ANR	10594169	Identifier	Ins_GFV		10594141	2					
ANR	10594170	ParameterList	"TT_ExecContext exc , FT_Long * args"		10594141	3					
ANR	10594171	Parameter	TT_ExecContext exc	4450:11:160273:160291	10594141	0	True				
ANR	10594172	ParameterType	TT_ExecContext		10594141	0					
ANR	10594173	Identifier	exc		10594141	1					
ANR	10594174	Parameter	FT_Long * args	4451:11:160305:160324	10594141	1	True				
ANR	10594175	ParameterType	FT_Long *		10594141	0					
ANR	10594176	Identifier	args		10594141	1					
ANR	10594177	CFGEntryNode	ENTRY		10594141		True				
ANR	10594178	CFGExitNode	EXIT		10594141		True				
ANR	10594179	Symbol	args		10594141						
ANR	10594180	Symbol	exc		10594141						
ANR	10594181	Symbol	exc -> GS . freeVector . x		10594141						
ANR	10594182	Symbol	exc -> GS . freeVector . y		10594141						
ANR	10594183	Symbol	* exc		10594141						
ANR	10594184	Symbol	exc -> GS		10594141						
ANR	10594185	Symbol	exc -> GS . freeVector		10594141						
ANR	10594186	Symbol	* args		10594141						
ANR	10594187	Function	Ins_SRP0	4464:2:160880:161004							
ANR	10594188	FunctionDef	"Ins_SRP0 (TT_ExecContext exc , FT_Long * args)"		10594187	0					
ANR	10594189	CompoundStatement		4467:2:160962:161004	10594187	0					
ANR	10594190	ExpressionStatement	exc -> GS . rp0 = ( FT_UShort ) args [ 0 ]	4468:4:160968:161000	10594187	0	True				
ANR	10594191	AssignmentExpression	exc -> GS . rp0 = ( FT_UShort ) args [ 0 ]		10594187	0		=			
ANR	10594192	MemberAccess	exc -> GS . rp0		10594187	0					
ANR	10594193	PtrMemberAccess	exc -> GS		10594187	0					
ANR	10594194	Identifier	exc		10594187	0					
ANR	10594195	Identifier	GS		10594187	1					
ANR	10594196	Identifier	rp0		10594187	1					
ANR	10594197	CastExpression	( FT_UShort ) args [ 0 ]		10594187	1					
ANR	10594198	CastTarget	FT_UShort		10594187	0					
ANR	10594199	ArrayIndexing	args [ 0 ]		10594187	1					
ANR	10594200	Identifier	args		10594187	0					
ANR	10594201	PrimaryExpression	0		10594187	1					
ANR	10594202	ReturnType	static void		10594187	1					
ANR	10594203	Identifier	Ins_SRP0		10594187	2					
ANR	10594204	ParameterList	"TT_ExecContext exc , FT_Long * args"		10594187	3					
ANR	10594205	Parameter	TT_ExecContext exc	4465:12:160904:160922	10594187	0	True				
ANR	10594206	ParameterType	TT_ExecContext		10594187	0					
ANR	10594207	Identifier	exc		10594187	1					
ANR	10594208	Parameter	FT_Long * args	4466:12:160937:160956	10594187	1	True				
ANR	10594209	ParameterType	FT_Long *		10594187	0					
ANR	10594210	Identifier	args		10594187	1					
ANR	10594211	CFGEntryNode	ENTRY		10594187		True				
ANR	10594212	CFGExitNode	EXIT		10594187		True				
ANR	10594213	Symbol	args		10594187						
ANR	10594214	Symbol	exc		10594187						
ANR	10594215	Symbol	* exc		10594187						
ANR	10594216	Symbol	exc -> GS . rp0		10594187						
ANR	10594217	Symbol	exc -> GS		10594187						
ANR	10594218	Symbol	* args		10594187						
ANR	10594219	Function	Ins_SRP1	4478:2:161478:161602							
ANR	10594220	FunctionDef	"Ins_SRP1 (TT_ExecContext exc , FT_Long * args)"		10594219	0					
ANR	10594221	CompoundStatement		4481:2:161560:161602	10594219	0					
ANR	10594222	ExpressionStatement	exc -> GS . rp1 = ( FT_UShort ) args [ 0 ]	4482:4:161566:161598	10594219	0	True				
ANR	10594223	AssignmentExpression	exc -> GS . rp1 = ( FT_UShort ) args [ 0 ]		10594219	0		=			
ANR	10594224	MemberAccess	exc -> GS . rp1		10594219	0					
ANR	10594225	PtrMemberAccess	exc -> GS		10594219	0					
ANR	10594226	Identifier	exc		10594219	0					
ANR	10594227	Identifier	GS		10594219	1					
ANR	10594228	Identifier	rp1		10594219	1					
ANR	10594229	CastExpression	( FT_UShort ) args [ 0 ]		10594219	1					
ANR	10594230	CastTarget	FT_UShort		10594219	0					
ANR	10594231	ArrayIndexing	args [ 0 ]		10594219	1					
ANR	10594232	Identifier	args		10594219	0					
ANR	10594233	PrimaryExpression	0		10594219	1					
ANR	10594234	ReturnType	static void		10594219	1					
ANR	10594235	Identifier	Ins_SRP1		10594219	2					
ANR	10594236	ParameterList	"TT_ExecContext exc , FT_Long * args"		10594219	3					
ANR	10594237	Parameter	TT_ExecContext exc	4479:12:161502:161520	10594219	0	True				
ANR	10594238	ParameterType	TT_ExecContext		10594219	0					
ANR	10594239	Identifier	exc		10594219	1					
ANR	10594240	Parameter	FT_Long * args	4480:12:161535:161554	10594219	1	True				
ANR	10594241	ParameterType	FT_Long *		10594219	0					
ANR	10594242	Identifier	args		10594219	1					
ANR	10594243	CFGEntryNode	ENTRY		10594219		True				
ANR	10594244	CFGExitNode	EXIT		10594219		True				
ANR	10594245	Symbol	args		10594219						
ANR	10594246	Symbol	exc		10594219						
ANR	10594247	Symbol	exc -> GS . rp1		10594219						
ANR	10594248	Symbol	* exc		10594219						
ANR	10594249	Symbol	exc -> GS		10594219						
ANR	10594250	Symbol	* args		10594219						
ANR	10594251	Function	Ins_SRP2	4492:2:162076:162200							
ANR	10594252	FunctionDef	"Ins_SRP2 (TT_ExecContext exc , FT_Long * args)"		10594251	0					
ANR	10594253	CompoundStatement		4495:2:162158:162200	10594251	0					
ANR	10594254	ExpressionStatement	exc -> GS . rp2 = ( FT_UShort ) args [ 0 ]	4496:4:162164:162196	10594251	0	True				
ANR	10594255	AssignmentExpression	exc -> GS . rp2 = ( FT_UShort ) args [ 0 ]		10594251	0		=			
ANR	10594256	MemberAccess	exc -> GS . rp2		10594251	0					
ANR	10594257	PtrMemberAccess	exc -> GS		10594251	0					
ANR	10594258	Identifier	exc		10594251	0					
ANR	10594259	Identifier	GS		10594251	1					
ANR	10594260	Identifier	rp2		10594251	1					
ANR	10594261	CastExpression	( FT_UShort ) args [ 0 ]		10594251	1					
ANR	10594262	CastTarget	FT_UShort		10594251	0					
ANR	10594263	ArrayIndexing	args [ 0 ]		10594251	1					
ANR	10594264	Identifier	args		10594251	0					
ANR	10594265	PrimaryExpression	0		10594251	1					
ANR	10594266	ReturnType	static void		10594251	1					
ANR	10594267	Identifier	Ins_SRP2		10594251	2					
ANR	10594268	ParameterList	"TT_ExecContext exc , FT_Long * args"		10594251	3					
ANR	10594269	Parameter	TT_ExecContext exc	4493:12:162100:162118	10594251	0	True				
ANR	10594270	ParameterType	TT_ExecContext		10594251	0					
ANR	10594271	Identifier	exc		10594251	1					
ANR	10594272	Parameter	FT_Long * args	4494:12:162133:162152	10594251	1	True				
ANR	10594273	ParameterType	FT_Long *		10594251	0					
ANR	10594274	Identifier	args		10594251	1					
ANR	10594275	CFGEntryNode	ENTRY		10594251		True				
ANR	10594276	CFGExitNode	EXIT		10594251		True				
ANR	10594277	Symbol	args		10594251						
ANR	10594278	Symbol	exc		10594251						
ANR	10594279	Symbol	exc -> GS . rp2		10594251						
ANR	10594280	Symbol	* exc		10594251						
ANR	10594281	Symbol	exc -> GS		10594251						
ANR	10594282	Symbol	* args		10594251						
ANR	10594283	Function	Ins_SMD	4506:2:162674:162798							
ANR	10594284	FunctionDef	"Ins_SMD (TT_ExecContext exc , FT_Long * args)"		10594283	0					
ANR	10594285	CompoundStatement		4509:2:162754:162798	10594283	0					
ANR	10594286	ExpressionStatement	exc -> GS . minimum_distance = args [ 0 ]	4510:4:162760:162794	10594283	0	True				
ANR	10594287	AssignmentExpression	exc -> GS . minimum_distance = args [ 0 ]		10594283	0		=			
ANR	10594288	MemberAccess	exc -> GS . minimum_distance		10594283	0					
ANR	10594289	PtrMemberAccess	exc -> GS		10594283	0					
ANR	10594290	Identifier	exc		10594283	0					
ANR	10594291	Identifier	GS		10594283	1					
ANR	10594292	Identifier	minimum_distance		10594283	1					
ANR	10594293	ArrayIndexing	args [ 0 ]		10594283	1					
ANR	10594294	Identifier	args		10594283	0					
ANR	10594295	PrimaryExpression	0		10594283	1					
ANR	10594296	ReturnType	static void		10594283	1					
ANR	10594297	Identifier	Ins_SMD		10594283	2					
ANR	10594298	ParameterList	"TT_ExecContext exc , FT_Long * args"		10594283	3					
ANR	10594299	Parameter	TT_ExecContext exc	4507:11:162697:162715	10594283	0	True				
ANR	10594300	ParameterType	TT_ExecContext		10594283	0					
ANR	10594301	Identifier	exc		10594283	1					
ANR	10594302	Parameter	FT_Long * args	4508:11:162729:162748	10594283	1	True				
ANR	10594303	ParameterType	FT_Long *		10594283	0					
ANR	10594304	Identifier	args		10594283	1					
ANR	10594305	CFGEntryNode	ENTRY		10594283		True				
ANR	10594306	CFGExitNode	EXIT		10594283		True				
ANR	10594307	Symbol	args		10594283						
ANR	10594308	Symbol	exc		10594283						
ANR	10594309	Symbol	exc -> GS . minimum_distance		10594283						
ANR	10594310	Symbol	* exc		10594283						
ANR	10594311	Symbol	exc -> GS		10594283						
ANR	10594312	Symbol	* args		10594283						
ANR	10594313	Function	Ins_SCVTCI	4520:2:163272:163417							
ANR	10594314	FunctionDef	"Ins_SCVTCI (TT_ExecContext exc , FT_Long * args)"		10594313	0					
ANR	10594315	CompoundStatement		4523:2:163358:163417	10594313	0					
ANR	10594316	ExpressionStatement	exc -> GS . control_value_cutin = ( FT_F26Dot6 ) args [ 0 ]	4524:4:163364:163413	10594313	0	True				
ANR	10594317	AssignmentExpression	exc -> GS . control_value_cutin = ( FT_F26Dot6 ) args [ 0 ]		10594313	0		=			
ANR	10594318	MemberAccess	exc -> GS . control_value_cutin		10594313	0					
ANR	10594319	PtrMemberAccess	exc -> GS		10594313	0					
ANR	10594320	Identifier	exc		10594313	0					
ANR	10594321	Identifier	GS		10594313	1					
ANR	10594322	Identifier	control_value_cutin		10594313	1					
ANR	10594323	CastExpression	( FT_F26Dot6 ) args [ 0 ]		10594313	1					
ANR	10594324	CastTarget	FT_F26Dot6		10594313	0					
ANR	10594325	ArrayIndexing	args [ 0 ]		10594313	1					
ANR	10594326	Identifier	args		10594313	0					
ANR	10594327	PrimaryExpression	0		10594313	1					
ANR	10594328	ReturnType	static void		10594313	1					
ANR	10594329	Identifier	Ins_SCVTCI		10594313	2					
ANR	10594330	ParameterList	"TT_ExecContext exc , FT_Long * args"		10594313	3					
ANR	10594331	Parameter	TT_ExecContext exc	4521:14:163298:163316	10594313	0	True				
ANR	10594332	ParameterType	TT_ExecContext		10594313	0					
ANR	10594333	Identifier	exc		10594313	1					
ANR	10594334	Parameter	FT_Long * args	4522:14:163333:163352	10594313	1	True				
ANR	10594335	ParameterType	FT_Long *		10594313	0					
ANR	10594336	Identifier	args		10594313	1					
ANR	10594337	CFGEntryNode	ENTRY		10594313		True				
ANR	10594338	CFGExitNode	EXIT		10594313		True				
ANR	10594339	Symbol	args		10594313						
ANR	10594340	Symbol	exc		10594313						
ANR	10594341	Symbol	* exc		10594313						
ANR	10594342	Symbol	exc -> GS . control_value_cutin		10594313						
ANR	10594343	Symbol	exc -> GS		10594313						
ANR	10594344	Symbol	* args		10594313						
ANR	10594345	Function	Ins_SSWCI	4534:2:163891:164033							
ANR	10594346	FunctionDef	"Ins_SSWCI (TT_ExecContext exc , FT_Long * args)"		10594345	0					
ANR	10594347	CompoundStatement		4537:2:163975:164033	10594345	0					
ANR	10594348	ExpressionStatement	exc -> GS . single_width_cutin = ( FT_F26Dot6 ) args [ 0 ]	4538:4:163981:164029	10594345	0	True				
ANR	10594349	AssignmentExpression	exc -> GS . single_width_cutin = ( FT_F26Dot6 ) args [ 0 ]		10594345	0		=			
ANR	10594350	MemberAccess	exc -> GS . single_width_cutin		10594345	0					
ANR	10594351	PtrMemberAccess	exc -> GS		10594345	0					
ANR	10594352	Identifier	exc		10594345	0					
ANR	10594353	Identifier	GS		10594345	1					
ANR	10594354	Identifier	single_width_cutin		10594345	1					
ANR	10594355	CastExpression	( FT_F26Dot6 ) args [ 0 ]		10594345	1					
ANR	10594356	CastTarget	FT_F26Dot6		10594345	0					
ANR	10594357	ArrayIndexing	args [ 0 ]		10594345	1					
ANR	10594358	Identifier	args		10594345	0					
ANR	10594359	PrimaryExpression	0		10594345	1					
ANR	10594360	ReturnType	static void		10594345	1					
ANR	10594361	Identifier	Ins_SSWCI		10594345	2					
ANR	10594362	ParameterList	"TT_ExecContext exc , FT_Long * args"		10594345	3					
ANR	10594363	Parameter	TT_ExecContext exc	4535:13:163916:163934	10594345	0	True				
ANR	10594364	ParameterType	TT_ExecContext		10594345	0					
ANR	10594365	Identifier	exc		10594345	1					
ANR	10594366	Parameter	FT_Long * args	4536:13:163950:163969	10594345	1	True				
ANR	10594367	ParameterType	FT_Long *		10594345	0					
ANR	10594368	Identifier	args		10594345	1					
ANR	10594369	CFGEntryNode	ENTRY		10594345		True				
ANR	10594370	CFGExitNode	EXIT		10594345		True				
ANR	10594371	Symbol	args		10594345						
ANR	10594372	Symbol	exc		10594345						
ANR	10594373	Symbol	* exc		10594345						
ANR	10594374	Symbol	exc -> GS . single_width_cutin		10594345						
ANR	10594375	Symbol	exc -> GS		10594345						
ANR	10594376	Symbol	* args		10594345						
ANR	10594377	Function	Ins_SSW	4548:2:164507:164713							
ANR	10594378	FunctionDef	"Ins_SSW (TT_ExecContext exc , FT_Long * args)"		10594377	0					
ANR	10594379	CompoundStatement		4551:2:164587:164713	10594377	0					
ANR	10594380	ExpressionStatement	"exc -> GS . single_width_value = FT_MulFix ( args [ 0 ] , exc -> tt_metrics . scale )"	4552:4:164593:164709	10594377	0	True				
ANR	10594381	AssignmentExpression	"exc -> GS . single_width_value = FT_MulFix ( args [ 0 ] , exc -> tt_metrics . scale )"		10594377	0		=			
ANR	10594382	MemberAccess	exc -> GS . single_width_value		10594377	0					
ANR	10594383	PtrMemberAccess	exc -> GS		10594377	0					
ANR	10594384	Identifier	exc		10594377	0					
ANR	10594385	Identifier	GS		10594377	1					
ANR	10594386	Identifier	single_width_value		10594377	1					
ANR	10594387	CallExpression	"FT_MulFix ( args [ 0 ] , exc -> tt_metrics . scale )"		10594377	1					
ANR	10594388	Callee	FT_MulFix		10594377	0					
ANR	10594389	Identifier	FT_MulFix		10594377	0					
ANR	10594390	ArgumentList	args [ 0 ]		10594377	1					
ANR	10594391	Argument	args [ 0 ]		10594377	0					
ANR	10594392	ArrayIndexing	args [ 0 ]		10594377	0					
ANR	10594393	Identifier	args		10594377	0					
ANR	10594394	PrimaryExpression	0		10594377	1					
ANR	10594395	Argument	exc -> tt_metrics . scale		10594377	1					
ANR	10594396	MemberAccess	exc -> tt_metrics . scale		10594377	0					
ANR	10594397	PtrMemberAccess	exc -> tt_metrics		10594377	0					
ANR	10594398	Identifier	exc		10594377	0					
ANR	10594399	Identifier	tt_metrics		10594377	1					
ANR	10594400	Identifier	scale		10594377	1					
ANR	10594401	ReturnType	static void		10594377	1					
ANR	10594402	Identifier	Ins_SSW		10594377	2					
ANR	10594403	ParameterList	"TT_ExecContext exc , FT_Long * args"		10594377	3					
ANR	10594404	Parameter	TT_ExecContext exc	4549:11:164530:164548	10594377	0	True				
ANR	10594405	ParameterType	TT_ExecContext		10594377	0					
ANR	10594406	Identifier	exc		10594377	1					
ANR	10594407	Parameter	FT_Long * args	4550:11:164562:164581	10594377	1	True				
ANR	10594408	ParameterType	FT_Long *		10594377	0					
ANR	10594409	Identifier	args		10594377	1					
ANR	10594410	CFGEntryNode	ENTRY		10594377		True				
ANR	10594411	CFGExitNode	EXIT		10594377		True				
ANR	10594412	Symbol	args		10594377						
ANR	10594413	Symbol	exc		10594377						
ANR	10594414	Symbol	exc -> GS . single_width_value		10594377						
ANR	10594415	Symbol	FT_MulFix		10594377						
ANR	10594416	Symbol	* exc		10594377						
ANR	10594417	Symbol	exc -> tt_metrics . scale		10594377						
ANR	10594418	Symbol	exc -> GS		10594377						
ANR	10594419	Symbol	exc -> tt_metrics		10594377						
ANR	10594420	Symbol	* args		10594377						
ANR	10594421	Function	Ins_FLIPON	4563:2:165187:165271							
ANR	10594422	FunctionDef	Ins_FLIPON (TT_ExecContext exc)		10594421	0					
ANR	10594423	CompoundStatement		4565:2:165237:165271	10594421	0					
ANR	10594424	ExpressionStatement	exc -> GS . auto_flip = TRUE	4566:4:165243:165267	10594421	0	True				
ANR	10594425	AssignmentExpression	exc -> GS . auto_flip = TRUE		10594421	0		=			
ANR	10594426	MemberAccess	exc -> GS . auto_flip		10594421	0					
ANR	10594427	PtrMemberAccess	exc -> GS		10594421	0					
ANR	10594428	Identifier	exc		10594421	0					
ANR	10594429	Identifier	GS		10594421	1					
ANR	10594430	Identifier	auto_flip		10594421	1					
ANR	10594431	Identifier	TRUE		10594421	1					
ANR	10594432	ReturnType	static void		10594421	1					
ANR	10594433	Identifier	Ins_FLIPON		10594421	2					
ANR	10594434	ParameterList	TT_ExecContext exc		10594421	3					
ANR	10594435	Parameter	TT_ExecContext exc	4564:14:165213:165231	10594421	0	True				
ANR	10594436	ParameterType	TT_ExecContext		10594421	0					
ANR	10594437	Identifier	exc		10594421	1					
ANR	10594438	CFGEntryNode	ENTRY		10594421		True				
ANR	10594439	CFGExitNode	EXIT		10594421		True				
ANR	10594440	Symbol	exc		10594421						
ANR	10594441	Symbol	* exc		10594421						
ANR	10594442	Symbol	TRUE		10594421						
ANR	10594443	Symbol	exc -> GS . auto_flip		10594421						
ANR	10594444	Symbol	exc -> GS		10594421						
ANR	10594445	Function	Ins_FLIPOFF	4576:2:165745:165831							
ANR	10594446	FunctionDef	Ins_FLIPOFF (TT_ExecContext exc)		10594445	0					
ANR	10594447	CompoundStatement		4578:2:165796:165831	10594445	0					
ANR	10594448	ExpressionStatement	exc -> GS . auto_flip = FALSE	4579:4:165802:165827	10594445	0	True				
ANR	10594449	AssignmentExpression	exc -> GS . auto_flip = FALSE		10594445	0		=			
ANR	10594450	MemberAccess	exc -> GS . auto_flip		10594445	0					
ANR	10594451	PtrMemberAccess	exc -> GS		10594445	0					
ANR	10594452	Identifier	exc		10594445	0					
ANR	10594453	Identifier	GS		10594445	1					
ANR	10594454	Identifier	auto_flip		10594445	1					
ANR	10594455	Identifier	FALSE		10594445	1					
ANR	10594456	ReturnType	static void		10594445	1					
ANR	10594457	Identifier	Ins_FLIPOFF		10594445	2					
ANR	10594458	ParameterList	TT_ExecContext exc		10594445	3					
ANR	10594459	Parameter	TT_ExecContext exc	4577:15:165772:165790	10594445	0	True				
ANR	10594460	ParameterType	TT_ExecContext		10594445	0					
ANR	10594461	Identifier	exc		10594445	1					
ANR	10594462	CFGEntryNode	ENTRY		10594445		True				
ANR	10594463	CFGExitNode	EXIT		10594445		True				
ANR	10594464	Symbol	exc		10594445						
ANR	10594465	Symbol	* exc		10594445						
ANR	10594466	Symbol	FALSE		10594445						
ANR	10594467	Symbol	exc -> GS . auto_flip		10594445						
ANR	10594468	Symbol	exc -> GS		10594445						
ANR	10594469	Function	Ins_SANGW	4589:2:166305:166387							
ANR	10594470	FunctionDef	Ins_SANGW ()		10594469	0					
ANR	10594471	CompoundStatement		4591:2:166339:166387	10594469	0					
ANR	10594472	ReturnType	static void		10594469	1					
ANR	10594473	Identifier	Ins_SANGW		10594469	2					
ANR	10594474	ParameterList			10594469	3					
ANR	10594475	CFGEntryNode	ENTRY		10594469		True				
ANR	10594476	CFGExitNode	EXIT		10594469		True				
ANR	10594477	Function	Ins_SDB	4602:2:166861:166990							
ANR	10594478	FunctionDef	"Ins_SDB (TT_ExecContext exc , FT_Long * args)"		10594477	0					
ANR	10594479	CompoundStatement		4605:2:166941:166990	10594477	0					
ANR	10594480	ExpressionStatement	exc -> GS . delta_base = ( FT_UShort ) args [ 0 ]	4606:4:166947:166986	10594477	0	True				
ANR	10594481	AssignmentExpression	exc -> GS . delta_base = ( FT_UShort ) args [ 0 ]		10594477	0		=			
ANR	10594482	MemberAccess	exc -> GS . delta_base		10594477	0					
ANR	10594483	PtrMemberAccess	exc -> GS		10594477	0					
ANR	10594484	Identifier	exc		10594477	0					
ANR	10594485	Identifier	GS		10594477	1					
ANR	10594486	Identifier	delta_base		10594477	1					
ANR	10594487	CastExpression	( FT_UShort ) args [ 0 ]		10594477	1					
ANR	10594488	CastTarget	FT_UShort		10594477	0					
ANR	10594489	ArrayIndexing	args [ 0 ]		10594477	1					
ANR	10594490	Identifier	args		10594477	0					
ANR	10594491	PrimaryExpression	0		10594477	1					
ANR	10594492	ReturnType	static void		10594477	1					
ANR	10594493	Identifier	Ins_SDB		10594477	2					
ANR	10594494	ParameterList	"TT_ExecContext exc , FT_Long * args"		10594477	3					
ANR	10594495	Parameter	TT_ExecContext exc	4603:11:166884:166902	10594477	0	True				
ANR	10594496	ParameterType	TT_ExecContext		10594477	0					
ANR	10594497	Identifier	exc		10594477	1					
ANR	10594498	Parameter	FT_Long * args	4604:11:166916:166935	10594477	1	True				
ANR	10594499	ParameterType	FT_Long *		10594477	0					
ANR	10594500	Identifier	args		10594477	1					
ANR	10594501	CFGEntryNode	ENTRY		10594477		True				
ANR	10594502	CFGExitNode	EXIT		10594477		True				
ANR	10594503	Symbol	args		10594477						
ANR	10594504	Symbol	exc		10594477						
ANR	10594505	Symbol	* exc		10594477						
ANR	10594506	Symbol	exc -> GS		10594477						
ANR	10594507	Symbol	exc -> GS . delta_base		10594477						
ANR	10594508	Symbol	* args		10594477						
ANR	10594509	Function	Ins_SDS	4616:2:167464:167685							
ANR	10594510	FunctionDef	"Ins_SDS (TT_ExecContext exc , FT_Long * args)"		10594509	0					
ANR	10594511	CompoundStatement		4619:2:167544:167685	10594509	0					
ANR	10594512	IfStatement	if ( ( FT_ULong ) args [ 0 ] > 6UL )		10594509	0					
ANR	10594513	Condition	( FT_ULong ) args [ 0 ] > 6UL	4620:9:167555:167577	10594509	0	True				
ANR	10594514	RelationalExpression	( FT_ULong ) args [ 0 ] > 6UL		10594509	0		>			
ANR	10594515	CastExpression	( FT_ULong ) args [ 0 ]		10594509	0					
ANR	10594516	CastTarget	FT_ULong		10594509	0					
ANR	10594517	ArrayIndexing	args [ 0 ]		10594509	1					
ANR	10594518	Identifier	args		10594509	0					
ANR	10594519	PrimaryExpression	0		10594509	1					
ANR	10594520	PrimaryExpression	6UL		10594509	1					
ANR	10594521	ExpressionStatement	exc -> error = FT_THROW ( Bad_Argument )	4621:6:167587:167624	10594509	1	True				
ANR	10594522	AssignmentExpression	exc -> error = FT_THROW ( Bad_Argument )		10594509	0		=			
ANR	10594523	PtrMemberAccess	exc -> error		10594509	0					
ANR	10594524	Identifier	exc		10594509	0					
ANR	10594525	Identifier	error		10594509	1					
ANR	10594526	CallExpression	FT_THROW ( Bad_Argument )		10594509	1					
ANR	10594527	Callee	FT_THROW		10594509	0					
ANR	10594528	Identifier	FT_THROW		10594509	0					
ANR	10594529	ArgumentList	Bad_Argument		10594509	1					
ANR	10594530	Argument	Bad_Argument		10594509	0					
ANR	10594531	Identifier	Bad_Argument		10594509	0					
ANR	10594532	ElseStatement	else		10594509	0					
ANR	10594533	ExpressionStatement	exc -> GS . delta_shift = ( FT_UShort ) args [ 0 ]	4623:6:167641:167681	10594509	0	True				
ANR	10594534	AssignmentExpression	exc -> GS . delta_shift = ( FT_UShort ) args [ 0 ]		10594509	0		=			
ANR	10594535	MemberAccess	exc -> GS . delta_shift		10594509	0					
ANR	10594536	PtrMemberAccess	exc -> GS		10594509	0					
ANR	10594537	Identifier	exc		10594509	0					
ANR	10594538	Identifier	GS		10594509	1					
ANR	10594539	Identifier	delta_shift		10594509	1					
ANR	10594540	CastExpression	( FT_UShort ) args [ 0 ]		10594509	1					
ANR	10594541	CastTarget	FT_UShort		10594509	0					
ANR	10594542	ArrayIndexing	args [ 0 ]		10594509	1					
ANR	10594543	Identifier	args		10594509	0					
ANR	10594544	PrimaryExpression	0		10594509	1					
ANR	10594545	ReturnType	static void		10594509	1					
ANR	10594546	Identifier	Ins_SDS		10594509	2					
ANR	10594547	ParameterList	"TT_ExecContext exc , FT_Long * args"		10594509	3					
ANR	10594548	Parameter	TT_ExecContext exc	4617:11:167487:167505	10594509	0	True				
ANR	10594549	ParameterType	TT_ExecContext		10594509	0					
ANR	10594550	Identifier	exc		10594509	1					
ANR	10594551	Parameter	FT_Long * args	4618:11:167519:167538	10594509	1	True				
ANR	10594552	ParameterType	FT_Long *		10594509	0					
ANR	10594553	Identifier	args		10594509	1					
ANR	10594554	CFGEntryNode	ENTRY		10594509		True				
ANR	10594555	CFGExitNode	EXIT		10594509		True				
ANR	10594556	Symbol	args		10594509						
ANR	10594557	Symbol	exc		10594509						
ANR	10594558	Symbol	Bad_Argument		10594509						
ANR	10594559	Symbol	* exc		10594509						
ANR	10594560	Symbol	exc -> GS . delta_shift		10594509						
ANR	10594561	Symbol	exc -> error		10594509						
ANR	10594562	Symbol	exc -> GS		10594509						
ANR	10594563	Symbol	FT_THROW		10594509						
ANR	10594564	Symbol	* args		10594509						
ANR	10594565	Function	Ins_RTHG	4633:2:168159:168321							
ANR	10594566	FunctionDef	Ins_RTHG (TT_ExecContext exc)		10594565	0					
ANR	10594567	CompoundStatement		4635:2:168207:168321	10594565	0					
ANR	10594568	ExpressionStatement	exc -> GS . round_state = TT_Round_To_Half_Grid	4636:4:168213:168256	10594565	0	True				
ANR	10594569	AssignmentExpression	exc -> GS . round_state = TT_Round_To_Half_Grid		10594565	0		=			
ANR	10594570	MemberAccess	exc -> GS . round_state		10594565	0					
ANR	10594571	PtrMemberAccess	exc -> GS		10594565	0					
ANR	10594572	Identifier	exc		10594565	0					
ANR	10594573	Identifier	GS		10594565	1					
ANR	10594574	Identifier	round_state		10594565	1					
ANR	10594575	Identifier	TT_Round_To_Half_Grid		10594565	1					
ANR	10594576	ExpressionStatement	exc -> func_round = ( TT_Round_Func ) Round_To_Half_Grid	4637:4:168262:168317	10594565	1	True				
ANR	10594577	AssignmentExpression	exc -> func_round = ( TT_Round_Func ) Round_To_Half_Grid		10594565	0		=			
ANR	10594578	PtrMemberAccess	exc -> func_round		10594565	0					
ANR	10594579	Identifier	exc		10594565	0					
ANR	10594580	Identifier	func_round		10594565	1					
ANR	10594581	CastExpression	( TT_Round_Func ) Round_To_Half_Grid		10594565	1					
ANR	10594582	CastTarget	TT_Round_Func		10594565	0					
ANR	10594583	Identifier	Round_To_Half_Grid		10594565	1					
ANR	10594584	ReturnType	static void		10594565	1					
ANR	10594585	Identifier	Ins_RTHG		10594565	2					
ANR	10594586	ParameterList	TT_ExecContext exc		10594565	3					
ANR	10594587	Parameter	TT_ExecContext exc	4634:12:168183:168201	10594565	0	True				
ANR	10594588	ParameterType	TT_ExecContext		10594565	0					
ANR	10594589	Identifier	exc		10594565	1					
ANR	10594590	CFGEntryNode	ENTRY		10594565		True				
ANR	10594591	CFGExitNode	EXIT		10594565		True				
ANR	10594592	Symbol	exc		10594565						
ANR	10594593	Symbol	TT_Round_To_Half_Grid		10594565						
ANR	10594594	Symbol	* exc		10594565						
ANR	10594595	Symbol	exc -> func_round		10594565						
ANR	10594596	Symbol	Round_To_Half_Grid		10594565						
ANR	10594597	Symbol	exc -> GS . round_state		10594565						
ANR	10594598	Symbol	exc -> GS		10594565						
ANR	10594599	Function	Ins_RTG	4647:2:168795:168946							
ANR	10594600	FunctionDef	Ins_RTG (TT_ExecContext exc)		10594599	0					
ANR	10594601	CompoundStatement		4649:2:168842:168946	10594599	0					
ANR	10594602	ExpressionStatement	exc -> GS . round_state = TT_Round_To_Grid	4650:4:168848:168886	10594599	0	True				
ANR	10594603	AssignmentExpression	exc -> GS . round_state = TT_Round_To_Grid		10594599	0		=			
ANR	10594604	MemberAccess	exc -> GS . round_state		10594599	0					
ANR	10594605	PtrMemberAccess	exc -> GS		10594599	0					
ANR	10594606	Identifier	exc		10594599	0					
ANR	10594607	Identifier	GS		10594599	1					
ANR	10594608	Identifier	round_state		10594599	1					
ANR	10594609	Identifier	TT_Round_To_Grid		10594599	1					
ANR	10594610	ExpressionStatement	exc -> func_round = ( TT_Round_Func ) Round_To_Grid	4651:4:168892:168942	10594599	1	True				
ANR	10594611	AssignmentExpression	exc -> func_round = ( TT_Round_Func ) Round_To_Grid		10594599	0		=			
ANR	10594612	PtrMemberAccess	exc -> func_round		10594599	0					
ANR	10594613	Identifier	exc		10594599	0					
ANR	10594614	Identifier	func_round		10594599	1					
ANR	10594615	CastExpression	( TT_Round_Func ) Round_To_Grid		10594599	1					
ANR	10594616	CastTarget	TT_Round_Func		10594599	0					
ANR	10594617	Identifier	Round_To_Grid		10594599	1					
ANR	10594618	ReturnType	static void		10594599	1					
ANR	10594619	Identifier	Ins_RTG		10594599	2					
ANR	10594620	ParameterList	TT_ExecContext exc		10594599	3					
ANR	10594621	Parameter	TT_ExecContext exc	4648:11:168818:168836	10594599	0	True				
ANR	10594622	ParameterType	TT_ExecContext		10594599	0					
ANR	10594623	Identifier	exc		10594599	1					
ANR	10594624	CFGEntryNode	ENTRY		10594599		True				
ANR	10594625	CFGExitNode	EXIT		10594599		True				
ANR	10594626	Symbol	exc		10594599						
ANR	10594627	Symbol	TT_Round_To_Grid		10594599						
ANR	10594628	Symbol	* exc		10594599						
ANR	10594629	Symbol	exc -> func_round		10594599						
ANR	10594630	Symbol	Round_To_Grid		10594599						
ANR	10594631	Symbol	exc -> GS		10594599						
ANR	10594632	Symbol	exc -> GS . round_state		10594599						
ANR	10594633	Function	Ins_RTDG	4660:2:169342:169508							
ANR	10594634	FunctionDef	Ins_RTDG (TT_ExecContext exc)		10594633	0					
ANR	10594635	CompoundStatement		4662:2:169390:169508	10594633	0					
ANR	10594636	ExpressionStatement	exc -> GS . round_state = TT_Round_To_Double_Grid	4663:4:169396:169441	10594633	0	True				
ANR	10594637	AssignmentExpression	exc -> GS . round_state = TT_Round_To_Double_Grid		10594633	0		=			
ANR	10594638	MemberAccess	exc -> GS . round_state		10594633	0					
ANR	10594639	PtrMemberAccess	exc -> GS		10594633	0					
ANR	10594640	Identifier	exc		10594633	0					
ANR	10594641	Identifier	GS		10594633	1					
ANR	10594642	Identifier	round_state		10594633	1					
ANR	10594643	Identifier	TT_Round_To_Double_Grid		10594633	1					
ANR	10594644	ExpressionStatement	exc -> func_round = ( TT_Round_Func ) Round_To_Double_Grid	4664:4:169447:169504	10594633	1	True				
ANR	10594645	AssignmentExpression	exc -> func_round = ( TT_Round_Func ) Round_To_Double_Grid		10594633	0		=			
ANR	10594646	PtrMemberAccess	exc -> func_round		10594633	0					
ANR	10594647	Identifier	exc		10594633	0					
ANR	10594648	Identifier	func_round		10594633	1					
ANR	10594649	CastExpression	( TT_Round_Func ) Round_To_Double_Grid		10594633	1					
ANR	10594650	CastTarget	TT_Round_Func		10594633	0					
ANR	10594651	Identifier	Round_To_Double_Grid		10594633	1					
ANR	10594652	ReturnType	static void		10594633	1					
ANR	10594653	Identifier	Ins_RTDG		10594633	2					
ANR	10594654	ParameterList	TT_ExecContext exc		10594633	3					
ANR	10594655	Parameter	TT_ExecContext exc	4661:12:169366:169384	10594633	0	True				
ANR	10594656	ParameterType	TT_ExecContext		10594633	0					
ANR	10594657	Identifier	exc		10594633	1					
ANR	10594658	CFGEntryNode	ENTRY		10594633		True				
ANR	10594659	CFGExitNode	EXIT		10594633		True				
ANR	10594660	Symbol	exc		10594633						
ANR	10594661	Symbol	Round_To_Double_Grid		10594633						
ANR	10594662	Symbol	* exc		10594633						
ANR	10594663	Symbol	exc -> func_round		10594633						
ANR	10594664	Symbol	exc -> GS . round_state		10594633						
ANR	10594665	Symbol	exc -> GS		10594633						
ANR	10594666	Symbol	TT_Round_To_Double_Grid		10594633						
ANR	10594667	Function	Ins_RUTG	4673:2:169904:170062							
ANR	10594668	FunctionDef	Ins_RUTG (TT_ExecContext exc)		10594667	0					
ANR	10594669	CompoundStatement		4675:2:169952:170062	10594667	0					
ANR	10594670	ExpressionStatement	exc -> GS . round_state = TT_Round_Up_To_Grid	4676:4:169958:169999	10594667	0	True				
ANR	10594671	AssignmentExpression	exc -> GS . round_state = TT_Round_Up_To_Grid		10594667	0		=			
ANR	10594672	MemberAccess	exc -> GS . round_state		10594667	0					
ANR	10594673	PtrMemberAccess	exc -> GS		10594667	0					
ANR	10594674	Identifier	exc		10594667	0					
ANR	10594675	Identifier	GS		10594667	1					
ANR	10594676	Identifier	round_state		10594667	1					
ANR	10594677	Identifier	TT_Round_Up_To_Grid		10594667	1					
ANR	10594678	ExpressionStatement	exc -> func_round = ( TT_Round_Func ) Round_Up_To_Grid	4677:4:170005:170058	10594667	1	True				
ANR	10594679	AssignmentExpression	exc -> func_round = ( TT_Round_Func ) Round_Up_To_Grid		10594667	0		=			
ANR	10594680	PtrMemberAccess	exc -> func_round		10594667	0					
ANR	10594681	Identifier	exc		10594667	0					
ANR	10594682	Identifier	func_round		10594667	1					
ANR	10594683	CastExpression	( TT_Round_Func ) Round_Up_To_Grid		10594667	1					
ANR	10594684	CastTarget	TT_Round_Func		10594667	0					
ANR	10594685	Identifier	Round_Up_To_Grid		10594667	1					
ANR	10594686	ReturnType	static void		10594667	1					
ANR	10594687	Identifier	Ins_RUTG		10594667	2					
ANR	10594688	ParameterList	TT_ExecContext exc		10594667	3					
ANR	10594689	Parameter	TT_ExecContext exc	4674:12:169928:169946	10594667	0	True				
ANR	10594690	ParameterType	TT_ExecContext		10594667	0					
ANR	10594691	Identifier	exc		10594667	1					
ANR	10594692	CFGEntryNode	ENTRY		10594667		True				
ANR	10594693	CFGExitNode	EXIT		10594667		True				
ANR	10594694	Symbol	exc		10594667						
ANR	10594695	Symbol	* exc		10594667						
ANR	10594696	Symbol	exc -> func_round		10594667						
ANR	10594697	Symbol	Round_Up_To_Grid		10594667						
ANR	10594698	Symbol	TT_Round_Up_To_Grid		10594667						
ANR	10594699	Symbol	exc -> GS		10594667						
ANR	10594700	Symbol	exc -> GS . round_state		10594667						
ANR	10594701	Function	Ins_RDTG	4687:2:170536:170698							
ANR	10594702	FunctionDef	Ins_RDTG (TT_ExecContext exc)		10594701	0					
ANR	10594703	CompoundStatement		4689:2:170584:170698	10594701	0					
ANR	10594704	ExpressionStatement	exc -> GS . round_state = TT_Round_Down_To_Grid	4690:4:170590:170633	10594701	0	True				
ANR	10594705	AssignmentExpression	exc -> GS . round_state = TT_Round_Down_To_Grid		10594701	0		=			
ANR	10594706	MemberAccess	exc -> GS . round_state		10594701	0					
ANR	10594707	PtrMemberAccess	exc -> GS		10594701	0					
ANR	10594708	Identifier	exc		10594701	0					
ANR	10594709	Identifier	GS		10594701	1					
ANR	10594710	Identifier	round_state		10594701	1					
ANR	10594711	Identifier	TT_Round_Down_To_Grid		10594701	1					
ANR	10594712	ExpressionStatement	exc -> func_round = ( TT_Round_Func ) Round_Down_To_Grid	4691:4:170639:170694	10594701	1	True				
ANR	10594713	AssignmentExpression	exc -> func_round = ( TT_Round_Func ) Round_Down_To_Grid		10594701	0		=			
ANR	10594714	PtrMemberAccess	exc -> func_round		10594701	0					
ANR	10594715	Identifier	exc		10594701	0					
ANR	10594716	Identifier	func_round		10594701	1					
ANR	10594717	CastExpression	( TT_Round_Func ) Round_Down_To_Grid		10594701	1					
ANR	10594718	CastTarget	TT_Round_Func		10594701	0					
ANR	10594719	Identifier	Round_Down_To_Grid		10594701	1					
ANR	10594720	ReturnType	static void		10594701	1					
ANR	10594721	Identifier	Ins_RDTG		10594701	2					
ANR	10594722	ParameterList	TT_ExecContext exc		10594701	3					
ANR	10594723	Parameter	TT_ExecContext exc	4688:12:170560:170578	10594701	0	True				
ANR	10594724	ParameterType	TT_ExecContext		10594701	0					
ANR	10594725	Identifier	exc		10594701	1					
ANR	10594726	CFGEntryNode	ENTRY		10594701		True				
ANR	10594727	CFGExitNode	EXIT		10594701		True				
ANR	10594728	Symbol	exc		10594701						
ANR	10594729	Symbol	Round_Down_To_Grid		10594701						
ANR	10594730	Symbol	* exc		10594701						
ANR	10594731	Symbol	exc -> func_round		10594701						
ANR	10594732	Symbol	TT_Round_Down_To_Grid		10594701						
ANR	10594733	Symbol	exc -> GS		10594701						
ANR	10594734	Symbol	exc -> GS . round_state		10594701						
ANR	10594735	Function	Ins_ROFF	4701:2:171172:171317							
ANR	10594736	FunctionDef	Ins_ROFF (TT_ExecContext exc)		10594735	0					
ANR	10594737	CompoundStatement		4703:2:171220:171317	10594735	0					
ANR	10594738	ExpressionStatement	exc -> GS . round_state = TT_Round_Off	4704:4:171226:171260	10594735	0	True				
ANR	10594739	AssignmentExpression	exc -> GS . round_state = TT_Round_Off		10594735	0		=			
ANR	10594740	MemberAccess	exc -> GS . round_state		10594735	0					
ANR	10594741	PtrMemberAccess	exc -> GS		10594735	0					
ANR	10594742	Identifier	exc		10594735	0					
ANR	10594743	Identifier	GS		10594735	1					
ANR	10594744	Identifier	round_state		10594735	1					
ANR	10594745	Identifier	TT_Round_Off		10594735	1					
ANR	10594746	ExpressionStatement	exc -> func_round = ( TT_Round_Func ) Round_None	4705:4:171266:171313	10594735	1	True				
ANR	10594747	AssignmentExpression	exc -> func_round = ( TT_Round_Func ) Round_None		10594735	0		=			
ANR	10594748	PtrMemberAccess	exc -> func_round		10594735	0					
ANR	10594749	Identifier	exc		10594735	0					
ANR	10594750	Identifier	func_round		10594735	1					
ANR	10594751	CastExpression	( TT_Round_Func ) Round_None		10594735	1					
ANR	10594752	CastTarget	TT_Round_Func		10594735	0					
ANR	10594753	Identifier	Round_None		10594735	1					
ANR	10594754	ReturnType	static void		10594735	1					
ANR	10594755	Identifier	Ins_ROFF		10594735	2					
ANR	10594756	ParameterList	TT_ExecContext exc		10594735	3					
ANR	10594757	Parameter	TT_ExecContext exc	4702:12:171196:171214	10594735	0	True				
ANR	10594758	ParameterType	TT_ExecContext		10594735	0					
ANR	10594759	Identifier	exc		10594735	1					
ANR	10594760	CFGEntryNode	ENTRY		10594735		True				
ANR	10594761	CFGExitNode	EXIT		10594735		True				
ANR	10594762	Symbol	TT_Round_Off		10594735						
ANR	10594763	Symbol	exc		10594735						
ANR	10594764	Symbol	Round_None		10594735						
ANR	10594765	Symbol	* exc		10594735						
ANR	10594766	Symbol	exc -> func_round		10594735						
ANR	10594767	Symbol	exc -> GS		10594735						
ANR	10594768	Symbol	exc -> GS . round_state		10594735						
ANR	10594769	Function	Ins_SROUND	4715:2:171791:172021							
ANR	10594770	FunctionDef	"Ins_SROUND (TT_ExecContext exc , FT_Long * args)"		10594769	0					
ANR	10594771	CompoundStatement		4718:2:171877:172021	10594769	0					
ANR	10594772	ExpressionStatement	"SetSuperRound ( exc , 0x4000 , args [ 0 ] )"	4719:4:171883:171920	10594769	0	True				
ANR	10594773	CallExpression	"SetSuperRound ( exc , 0x4000 , args [ 0 ] )"		10594769	0					
ANR	10594774	Callee	SetSuperRound		10594769	0					
ANR	10594775	Identifier	SetSuperRound		10594769	0					
ANR	10594776	ArgumentList	exc		10594769	1					
ANR	10594777	Argument	exc		10594769	0					
ANR	10594778	Identifier	exc		10594769	0					
ANR	10594779	Argument	0x4000		10594769	1					
ANR	10594780	PrimaryExpression	0x4000		10594769	0					
ANR	10594781	Argument	args [ 0 ]		10594769	2					
ANR	10594782	ArrayIndexing	args [ 0 ]		10594769	0					
ANR	10594783	Identifier	args		10594769	0					
ANR	10594784	PrimaryExpression	0		10594769	1					
ANR	10594785	ExpressionStatement	exc -> GS . round_state = TT_Round_Super	4721:4:171927:171963	10594769	1	True				
ANR	10594786	AssignmentExpression	exc -> GS . round_state = TT_Round_Super		10594769	0		=			
ANR	10594787	MemberAccess	exc -> GS . round_state		10594769	0					
ANR	10594788	PtrMemberAccess	exc -> GS		10594769	0					
ANR	10594789	Identifier	exc		10594769	0					
ANR	10594790	Identifier	GS		10594769	1					
ANR	10594791	Identifier	round_state		10594769	1					
ANR	10594792	Identifier	TT_Round_Super		10594769	1					
ANR	10594793	ExpressionStatement	exc -> func_round = ( TT_Round_Func ) Round_Super	4722:4:171969:172017	10594769	2	True				
ANR	10594794	AssignmentExpression	exc -> func_round = ( TT_Round_Func ) Round_Super		10594769	0		=			
ANR	10594795	PtrMemberAccess	exc -> func_round		10594769	0					
ANR	10594796	Identifier	exc		10594769	0					
ANR	10594797	Identifier	func_round		10594769	1					
ANR	10594798	CastExpression	( TT_Round_Func ) Round_Super		10594769	1					
ANR	10594799	CastTarget	TT_Round_Func		10594769	0					
ANR	10594800	Identifier	Round_Super		10594769	1					
ANR	10594801	ReturnType	static void		10594769	1					
ANR	10594802	Identifier	Ins_SROUND		10594769	2					
ANR	10594803	ParameterList	"TT_ExecContext exc , FT_Long * args"		10594769	3					
ANR	10594804	Parameter	TT_ExecContext exc	4716:14:171817:171835	10594769	0	True				
ANR	10594805	ParameterType	TT_ExecContext		10594769	0					
ANR	10594806	Identifier	exc		10594769	1					
ANR	10594807	Parameter	FT_Long * args	4717:14:171852:171871	10594769	1	True				
ANR	10594808	ParameterType	FT_Long *		10594769	0					
ANR	10594809	Identifier	args		10594769	1					
ANR	10594810	CFGEntryNode	ENTRY		10594769		True				
ANR	10594811	CFGExitNode	EXIT		10594769		True				
ANR	10594812	Symbol	args		10594769						
ANR	10594813	Symbol	exc		10594769						
ANR	10594814	Symbol	* exc		10594769						
ANR	10594815	Symbol	exc -> func_round		10594769						
ANR	10594816	Symbol	exc -> GS . round_state		10594769						
ANR	10594817	Symbol	exc -> GS		10594769						
ANR	10594818	Symbol	TT_Round_Super		10594769						
ANR	10594819	Symbol	* args		10594769						
ANR	10594820	Symbol	Round_Super		10594769						
ANR	10594821	Function	Ins_S45ROUND	4732:2:172495:172735							
ANR	10594822	FunctionDef	"Ins_S45ROUND (TT_ExecContext exc , FT_Long * args)"		10594821	0					
ANR	10594823	CompoundStatement		4735:2:172585:172735	10594821	0					
ANR	10594824	ExpressionStatement	"SetSuperRound ( exc , 0x2D41 , args [ 0 ] )"	4736:4:172591:172628	10594821	0	True				
ANR	10594825	CallExpression	"SetSuperRound ( exc , 0x2D41 , args [ 0 ] )"		10594821	0					
ANR	10594826	Callee	SetSuperRound		10594821	0					
ANR	10594827	Identifier	SetSuperRound		10594821	0					
ANR	10594828	ArgumentList	exc		10594821	1					
ANR	10594829	Argument	exc		10594821	0					
ANR	10594830	Identifier	exc		10594821	0					
ANR	10594831	Argument	0x2D41		10594821	1					
ANR	10594832	PrimaryExpression	0x2D41		10594821	0					
ANR	10594833	Argument	args [ 0 ]		10594821	2					
ANR	10594834	ArrayIndexing	args [ 0 ]		10594821	0					
ANR	10594835	Identifier	args		10594821	0					
ANR	10594836	PrimaryExpression	0		10594821	1					
ANR	10594837	ExpressionStatement	exc -> GS . round_state = TT_Round_Super_45	4738:4:172635:172674	10594821	1	True				
ANR	10594838	AssignmentExpression	exc -> GS . round_state = TT_Round_Super_45		10594821	0		=			
ANR	10594839	MemberAccess	exc -> GS . round_state		10594821	0					
ANR	10594840	PtrMemberAccess	exc -> GS		10594821	0					
ANR	10594841	Identifier	exc		10594821	0					
ANR	10594842	Identifier	GS		10594821	1					
ANR	10594843	Identifier	round_state		10594821	1					
ANR	10594844	Identifier	TT_Round_Super_45		10594821	1					
ANR	10594845	ExpressionStatement	exc -> func_round = ( TT_Round_Func ) Round_Super_45	4739:4:172680:172731	10594821	2	True				
ANR	10594846	AssignmentExpression	exc -> func_round = ( TT_Round_Func ) Round_Super_45		10594821	0		=			
ANR	10594847	PtrMemberAccess	exc -> func_round		10594821	0					
ANR	10594848	Identifier	exc		10594821	0					
ANR	10594849	Identifier	func_round		10594821	1					
ANR	10594850	CastExpression	( TT_Round_Func ) Round_Super_45		10594821	1					
ANR	10594851	CastTarget	TT_Round_Func		10594821	0					
ANR	10594852	Identifier	Round_Super_45		10594821	1					
ANR	10594853	ReturnType	static void		10594821	1					
ANR	10594854	Identifier	Ins_S45ROUND		10594821	2					
ANR	10594855	ParameterList	"TT_ExecContext exc , FT_Long * args"		10594821	3					
ANR	10594856	Parameter	TT_ExecContext exc	4733:16:172523:172541	10594821	0	True				
ANR	10594857	ParameterType	TT_ExecContext		10594821	0					
ANR	10594858	Identifier	exc		10594821	1					
ANR	10594859	Parameter	FT_Long * args	4734:16:172560:172579	10594821	1	True				
ANR	10594860	ParameterType	FT_Long *		10594821	0					
ANR	10594861	Identifier	args		10594821	1					
ANR	10594862	CFGEntryNode	ENTRY		10594821		True				
ANR	10594863	CFGExitNode	EXIT		10594821		True				
ANR	10594864	Symbol	args		10594821						
ANR	10594865	Symbol	exc		10594821						
ANR	10594866	Symbol	* exc		10594821						
ANR	10594867	Symbol	exc -> func_round		10594821						
ANR	10594868	Symbol	Round_Super_45		10594821						
ANR	10594869	Symbol	exc -> GS		10594821						
ANR	10594870	Symbol	TT_Round_Super_45		10594821						
ANR	10594871	Symbol	exc -> GS . round_state		10594821						
ANR	10594872	Symbol	* args		10594821						
ANR	10594873	Function	Ins_GC	4752:2:173443:173920							
ANR	10594874	FunctionDef	"Ins_GC (TT_ExecContext exc , FT_Long * args)"		10594873	0					
ANR	10594875	CompoundStatement		4755:2:173521:173920	10594873	0					
ANR	10594876	IdentifierDeclStatement	FT_ULong L ;	4756:4:173527:173540	10594873	0	True				
ANR	10594877	IdentifierDecl	L		10594873	0					
ANR	10594878	IdentifierDeclType	FT_ULong		10594873	0					
ANR	10594879	Identifier	L		10594873	1					
ANR	10594880	IdentifierDeclStatement	FT_F26Dot6 R ;	4757:4:173546:173559	10594873	1	True				
ANR	10594881	IdentifierDecl	R		10594873	0					
ANR	10594882	IdentifierDeclType	FT_F26Dot6		10594873	0					
ANR	10594883	Identifier	R		10594873	1					
ANR	10594884	ExpressionStatement	L = ( FT_ULong ) args [ 0 ]	4760:4:173567:173588	10594873	2	True				
ANR	10594885	AssignmentExpression	L = ( FT_ULong ) args [ 0 ]		10594873	0		=			
ANR	10594886	Identifier	L		10594873	0					
ANR	10594887	CastExpression	( FT_ULong ) args [ 0 ]		10594873	1					
ANR	10594888	CastTarget	FT_ULong		10594873	0					
ANR	10594889	ArrayIndexing	args [ 0 ]		10594873	1					
ANR	10594890	Identifier	args		10594873	0					
ANR	10594891	PrimaryExpression	0		10594873	1					
ANR	10594892	IfStatement	"if ( BOUNDSL ( L , exc -> zp2 . n_points ) )"		10594873	3					
ANR	10594893	Condition	"BOUNDSL ( L , exc -> zp2 . n_points )"	4762:9:173600:173630	10594873	0	True				
ANR	10594894	CallExpression	"BOUNDSL ( L , exc -> zp2 . n_points )"		10594873	0					
ANR	10594895	Callee	BOUNDSL		10594873	0					
ANR	10594896	Identifier	BOUNDSL		10594873	0					
ANR	10594897	ArgumentList	L		10594873	1					
ANR	10594898	Argument	L		10594873	0					
ANR	10594899	Identifier	L		10594873	0					
ANR	10594900	Argument	exc -> zp2 . n_points		10594873	1					
ANR	10594901	MemberAccess	exc -> zp2 . n_points		10594873	0					
ANR	10594902	PtrMemberAccess	exc -> zp2		10594873	0					
ANR	10594903	Identifier	exc		10594873	0					
ANR	10594904	Identifier	zp2		10594873	1					
ANR	10594905	Identifier	n_points		10594873	1					
ANR	10594906	CompoundStatement		9:4:116:116	10594873	1					
ANR	10594907	IfStatement	if ( exc -> pedantic_hinting )		10594873	0					
ANR	10594908	Condition	exc -> pedantic_hinting	4764:11:173651:173671	10594873	0	True				
ANR	10594909	PtrMemberAccess	exc -> pedantic_hinting		10594873	0					
ANR	10594910	Identifier	exc		10594873	0					
ANR	10594911	Identifier	pedantic_hinting		10594873	1					
ANR	10594912	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	4765:8:173683:173725	10594873	1	True				
ANR	10594913	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10594873	0		=			
ANR	10594914	PtrMemberAccess	exc -> error		10594873	0					
ANR	10594915	Identifier	exc		10594873	0					
ANR	10594916	Identifier	error		10594873	1					
ANR	10594917	CallExpression	FT_THROW ( Invalid_Reference )		10594873	1					
ANR	10594918	Callee	FT_THROW		10594873	0					
ANR	10594919	Identifier	FT_THROW		10594873	0					
ANR	10594920	ArgumentList	Invalid_Reference		10594873	1					
ANR	10594921	Argument	Invalid_Reference		10594873	0					
ANR	10594922	Identifier	Invalid_Reference		10594873	0					
ANR	10594923	ExpressionStatement	R = 0	4766:6:173733:173738	10594873	1	True				
ANR	10594924	AssignmentExpression	R = 0		10594873	0		=			
ANR	10594925	Identifier	R		10594873	0					
ANR	10594926	PrimaryExpression	0		10594873	1					
ANR	10594927	ElseStatement	else		10594873	0					
ANR	10594928	CompoundStatement		15:4:237:237	10594873	0					
ANR	10594929	IfStatement	if ( exc -> opcode & 1 )		10594873	0					
ANR	10594930	Condition	exc -> opcode & 1	4770:11:173772:173786	10594873	0	True				
ANR	10594931	BitAndExpression	exc -> opcode & 1		10594873	0		&			
ANR	10594932	PtrMemberAccess	exc -> opcode		10594873	0					
ANR	10594933	Identifier	exc		10594873	0					
ANR	10594934	Identifier	opcode		10594873	1					
ANR	10594935	PrimaryExpression	1		10594873	1					
ANR	10594936	ExpressionStatement	R = FAST_DUALPROJ ( & exc -> zp2 . org [ L ] )	4771:8:173798:173835	10594873	1	True				
ANR	10594937	AssignmentExpression	R = FAST_DUALPROJ ( & exc -> zp2 . org [ L ] )		10594873	0		=			
ANR	10594938	Identifier	R		10594873	0					
ANR	10594939	CallExpression	FAST_DUALPROJ ( & exc -> zp2 . org [ L ] )		10594873	1					
ANR	10594940	Callee	FAST_DUALPROJ		10594873	0					
ANR	10594941	Identifier	FAST_DUALPROJ		10594873	0					
ANR	10594942	ArgumentList	& exc -> zp2 . org [ L ]		10594873	1					
ANR	10594943	Argument	& exc -> zp2 . org [ L ]		10594873	0					
ANR	10594944	UnaryOperationExpression	& exc -> zp2 . org [ L ]		10594873	0					
ANR	10594945	UnaryOperator	&		10594873	0					
ANR	10594946	ArrayIndexing	exc -> zp2 . org [ L ]		10594873	1					
ANR	10594947	MemberAccess	exc -> zp2 . org		10594873	0					
ANR	10594948	PtrMemberAccess	exc -> zp2		10594873	0					
ANR	10594949	Identifier	exc		10594873	0					
ANR	10594950	Identifier	zp2		10594873	1					
ANR	10594951	Identifier	org		10594873	1					
ANR	10594952	Identifier	L		10594873	1					
ANR	10594953	ElseStatement	else		10594873	0					
ANR	10594954	ExpressionStatement	R = FAST_PROJECT ( & exc -> zp2 . cur [ L ] )	4773:8:173856:173892	10594873	0	True				
ANR	10594955	AssignmentExpression	R = FAST_PROJECT ( & exc -> zp2 . cur [ L ] )		10594873	0		=			
ANR	10594956	Identifier	R		10594873	0					
ANR	10594957	CallExpression	FAST_PROJECT ( & exc -> zp2 . cur [ L ] )		10594873	1					
ANR	10594958	Callee	FAST_PROJECT		10594873	0					
ANR	10594959	Identifier	FAST_PROJECT		10594873	0					
ANR	10594960	ArgumentList	& exc -> zp2 . cur [ L ]		10594873	1					
ANR	10594961	Argument	& exc -> zp2 . cur [ L ]		10594873	0					
ANR	10594962	UnaryOperationExpression	& exc -> zp2 . cur [ L ]		10594873	0					
ANR	10594963	UnaryOperator	&		10594873	0					
ANR	10594964	ArrayIndexing	exc -> zp2 . cur [ L ]		10594873	1					
ANR	10594965	MemberAccess	exc -> zp2 . cur		10594873	0					
ANR	10594966	PtrMemberAccess	exc -> zp2		10594873	0					
ANR	10594967	Identifier	exc		10594873	0					
ANR	10594968	Identifier	zp2		10594873	1					
ANR	10594969	Identifier	cur		10594873	1					
ANR	10594970	Identifier	L		10594873	1					
ANR	10594971	ExpressionStatement	args [ 0 ] = R	4776:4:173905:173916	10594873	4	True				
ANR	10594972	AssignmentExpression	args [ 0 ] = R		10594873	0		=			
ANR	10594973	ArrayIndexing	args [ 0 ]		10594873	0					
ANR	10594974	Identifier	args		10594873	0					
ANR	10594975	PrimaryExpression	0		10594873	1					
ANR	10594976	Identifier	R		10594873	1					
ANR	10594977	ReturnType	static void		10594873	1					
ANR	10594978	Identifier	Ins_GC		10594873	2					
ANR	10594979	ParameterList	"TT_ExecContext exc , FT_Long * args"		10594873	3					
ANR	10594980	Parameter	TT_ExecContext exc	4753:10:173465:173483	10594873	0	True				
ANR	10594981	ParameterType	TT_ExecContext		10594873	0					
ANR	10594982	Identifier	exc		10594873	1					
ANR	10594983	Parameter	FT_Long * args	4754:10:173496:173515	10594873	1	True				
ANR	10594984	ParameterType	FT_Long *		10594873	0					
ANR	10594985	Identifier	args		10594873	1					
ANR	10594986	CFGEntryNode	ENTRY		10594873		True				
ANR	10594987	CFGExitNode	EXIT		10594873		True				
ANR	10594988	Symbol	FAST_PROJECT		10594873						
ANR	10594989	Symbol	* exc		10594873						
ANR	10594990	Symbol	exc -> pedantic_hinting		10594873						
ANR	10594991	Symbol	FAST_DUALPROJ		10594873						
ANR	10594992	Symbol	exc -> zp2 . cur		10594873						
ANR	10594993	Symbol	BOUNDSL		10594873						
ANR	10594994	Symbol	L		10594873						
ANR	10594995	Symbol	exc -> zp2 . org		10594873						
ANR	10594996	Symbol	FT_THROW		10594873						
ANR	10594997	Symbol	* args		10594873						
ANR	10594998	Symbol	args		10594873						
ANR	10594999	Symbol	exc -> zp2		10594873						
ANR	10595000	Symbol	exc		10594873						
ANR	10595001	Symbol	R		10594873						
ANR	10595002	Symbol	Invalid_Reference		10594873						
ANR	10595003	Symbol	exc -> zp2 . n_points		10594873						
ANR	10595004	Symbol	exc -> error		10594873						
ANR	10595005	Symbol	exc -> opcode		10594873						
ANR	10595006	Function	Ins_SCFS	4790:2:174706:175310							
ANR	10595007	FunctionDef	"Ins_SCFS (TT_ExecContext exc , FT_Long * args)"		10595006	0					
ANR	10595008	CompoundStatement		4793:2:174788:175310	10595006	0					
ANR	10595009	IdentifierDeclStatement	FT_Long K ;	4794:4:174794:174806	10595006	0	True				
ANR	10595010	IdentifierDecl	K		10595006	0					
ANR	10595011	IdentifierDeclType	FT_Long		10595006	0					
ANR	10595012	Identifier	K		10595006	1					
ANR	10595013	IdentifierDeclStatement	FT_UShort L ;	4795:4:174812:174824	10595006	1	True				
ANR	10595014	IdentifierDecl	L		10595006	0					
ANR	10595015	IdentifierDeclType	FT_UShort		10595006	0					
ANR	10595016	Identifier	L		10595006	1					
ANR	10595017	ExpressionStatement	L = ( FT_UShort ) args [ 0 ]	4798:4:174832:174854	10595006	2	True				
ANR	10595018	AssignmentExpression	L = ( FT_UShort ) args [ 0 ]		10595006	0		=			
ANR	10595019	Identifier	L		10595006	0					
ANR	10595020	CastExpression	( FT_UShort ) args [ 0 ]		10595006	1					
ANR	10595021	CastTarget	FT_UShort		10595006	0					
ANR	10595022	ArrayIndexing	args [ 0 ]		10595006	1					
ANR	10595023	Identifier	args		10595006	0					
ANR	10595024	PrimaryExpression	0		10595006	1					
ANR	10595025	IfStatement	"if ( BOUNDS ( L , exc -> zp2 . n_points ) )"		10595006	3					
ANR	10595026	Condition	"BOUNDS ( L , exc -> zp2 . n_points )"	4800:9:174866:174895	10595006	0	True				
ANR	10595027	CallExpression	"BOUNDS ( L , exc -> zp2 . n_points )"		10595006	0					
ANR	10595028	Callee	BOUNDS		10595006	0					
ANR	10595029	Identifier	BOUNDS		10595006	0					
ANR	10595030	ArgumentList	L		10595006	1					
ANR	10595031	Argument	L		10595006	0					
ANR	10595032	Identifier	L		10595006	0					
ANR	10595033	Argument	exc -> zp2 . n_points		10595006	1					
ANR	10595034	MemberAccess	exc -> zp2 . n_points		10595006	0					
ANR	10595035	PtrMemberAccess	exc -> zp2		10595006	0					
ANR	10595036	Identifier	exc		10595006	0					
ANR	10595037	Identifier	zp2		10595006	1					
ANR	10595038	Identifier	n_points		10595006	1					
ANR	10595039	CompoundStatement		9:4:114:114	10595006	1					
ANR	10595040	IfStatement	if ( exc -> pedantic_hinting )		10595006	0					
ANR	10595041	Condition	exc -> pedantic_hinting	4802:11:174916:174936	10595006	0	True				
ANR	10595042	PtrMemberAccess	exc -> pedantic_hinting		10595006	0					
ANR	10595043	Identifier	exc		10595006	0					
ANR	10595044	Identifier	pedantic_hinting		10595006	1					
ANR	10595045	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	4803:8:174948:174990	10595006	1	True				
ANR	10595046	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10595006	0		=			
ANR	10595047	PtrMemberAccess	exc -> error		10595006	0					
ANR	10595048	Identifier	exc		10595006	0					
ANR	10595049	Identifier	error		10595006	1					
ANR	10595050	CallExpression	FT_THROW ( Invalid_Reference )		10595006	1					
ANR	10595051	Callee	FT_THROW		10595006	0					
ANR	10595052	Identifier	FT_THROW		10595006	0					
ANR	10595053	ArgumentList	Invalid_Reference		10595006	1					
ANR	10595054	Argument	Invalid_Reference		10595006	0					
ANR	10595055	Identifier	Invalid_Reference		10595006	0					
ANR	10595056	ReturnStatement	return ;	4804:6:174998:175004	10595006	1	True				
ANR	10595057	ExpressionStatement	K = FAST_PROJECT ( & exc -> zp2 . cur [ L ] )	4807:4:175017:175053	10595006	4	True				
ANR	10595058	AssignmentExpression	K = FAST_PROJECT ( & exc -> zp2 . cur [ L ] )		10595006	0		=			
ANR	10595059	Identifier	K		10595006	0					
ANR	10595060	CallExpression	FAST_PROJECT ( & exc -> zp2 . cur [ L ] )		10595006	1					
ANR	10595061	Callee	FAST_PROJECT		10595006	0					
ANR	10595062	Identifier	FAST_PROJECT		10595006	0					
ANR	10595063	ArgumentList	& exc -> zp2 . cur [ L ]		10595006	1					
ANR	10595064	Argument	& exc -> zp2 . cur [ L ]		10595006	0					
ANR	10595065	UnaryOperationExpression	& exc -> zp2 . cur [ L ]		10595006	0					
ANR	10595066	UnaryOperator	&		10595006	0					
ANR	10595067	ArrayIndexing	exc -> zp2 . cur [ L ]		10595006	1					
ANR	10595068	MemberAccess	exc -> zp2 . cur		10595006	0					
ANR	10595069	PtrMemberAccess	exc -> zp2		10595006	0					
ANR	10595070	Identifier	exc		10595006	0					
ANR	10595071	Identifier	zp2		10595006	1					
ANR	10595072	Identifier	cur		10595006	1					
ANR	10595073	Identifier	L		10595006	1					
ANR	10595074	ExpressionStatement	"exc -> func_move ( exc , & exc -> zp2 , L , SUB_LONG ( args [ 1 ] , K ) )"	4809:4:175060:175119	10595006	5	True				
ANR	10595075	CallExpression	"exc -> func_move ( exc , & exc -> zp2 , L , SUB_LONG ( args [ 1 ] , K ) )"		10595006	0					
ANR	10595076	Callee	exc -> func_move		10595006	0					
ANR	10595077	PtrMemberAccess	exc -> func_move		10595006	0					
ANR	10595078	Identifier	exc		10595006	0					
ANR	10595079	Identifier	func_move		10595006	1					
ANR	10595080	ArgumentList	exc		10595006	1					
ANR	10595081	Argument	exc		10595006	0					
ANR	10595082	Identifier	exc		10595006	0					
ANR	10595083	Argument	& exc -> zp2		10595006	1					
ANR	10595084	UnaryOperationExpression	& exc -> zp2		10595006	0					
ANR	10595085	UnaryOperator	&		10595006	0					
ANR	10595086	PtrMemberAccess	exc -> zp2		10595006	1					
ANR	10595087	Identifier	exc		10595006	0					
ANR	10595088	Identifier	zp2		10595006	1					
ANR	10595089	Argument	L		10595006	2					
ANR	10595090	Identifier	L		10595006	0					
ANR	10595091	Argument	"SUB_LONG ( args [ 1 ] , K )"		10595006	3					
ANR	10595092	CallExpression	"SUB_LONG ( args [ 1 ] , K )"		10595006	0					
ANR	10595093	Callee	SUB_LONG		10595006	0					
ANR	10595094	Identifier	SUB_LONG		10595006	0					
ANR	10595095	ArgumentList	args [ 1 ]		10595006	1					
ANR	10595096	Argument	args [ 1 ]		10595006	0					
ANR	10595097	ArrayIndexing	args [ 1 ]		10595006	0					
ANR	10595098	Identifier	args		10595006	0					
ANR	10595099	PrimaryExpression	1		10595006	1					
ANR	10595100	Argument	K		10595006	1					
ANR	10595101	Identifier	K		10595006	0					
ANR	10595102	IfStatement	if ( exc -> GS . gep2 == 0 )		10595006	6					
ANR	10595103	Condition	exc -> GS . gep2 == 0	4813:9:175247:175263	10595006	0	True				
ANR	10595104	EqualityExpression	exc -> GS . gep2 == 0		10595006	0		==			
ANR	10595105	MemberAccess	exc -> GS . gep2		10595006	0					
ANR	10595106	PtrMemberAccess	exc -> GS		10595006	0					
ANR	10595107	Identifier	exc		10595006	0					
ANR	10595108	Identifier	GS		10595006	1					
ANR	10595109	Identifier	gep2		10595006	1					
ANR	10595110	PrimaryExpression	0		10595006	1					
ANR	10595111	ExpressionStatement	exc -> zp2 . org [ L ] = exc -> zp2 . cur [ L ]	4814:6:175273:175306	10595006	1	True				
ANR	10595112	AssignmentExpression	exc -> zp2 . org [ L ] = exc -> zp2 . cur [ L ]		10595006	0		=			
ANR	10595113	ArrayIndexing	exc -> zp2 . org [ L ]		10595006	0					
ANR	10595114	MemberAccess	exc -> zp2 . org		10595006	0					
ANR	10595115	PtrMemberAccess	exc -> zp2		10595006	0					
ANR	10595116	Identifier	exc		10595006	0					
ANR	10595117	Identifier	zp2		10595006	1					
ANR	10595118	Identifier	org		10595006	1					
ANR	10595119	Identifier	L		10595006	1					
ANR	10595120	ArrayIndexing	exc -> zp2 . cur [ L ]		10595006	1					
ANR	10595121	MemberAccess	exc -> zp2 . cur		10595006	0					
ANR	10595122	PtrMemberAccess	exc -> zp2		10595006	0					
ANR	10595123	Identifier	exc		10595006	0					
ANR	10595124	Identifier	zp2		10595006	1					
ANR	10595125	Identifier	cur		10595006	1					
ANR	10595126	Identifier	L		10595006	1					
ANR	10595127	ReturnType	static void		10595006	1					
ANR	10595128	Identifier	Ins_SCFS		10595006	2					
ANR	10595129	ParameterList	"TT_ExecContext exc , FT_Long * args"		10595006	3					
ANR	10595130	Parameter	TT_ExecContext exc	4791:12:174730:174748	10595006	0	True				
ANR	10595131	ParameterType	TT_ExecContext		10595006	0					
ANR	10595132	Identifier	exc		10595006	1					
ANR	10595133	Parameter	FT_Long * args	4792:12:174763:174782	10595006	1	True				
ANR	10595134	ParameterType	FT_Long *		10595006	0					
ANR	10595135	Identifier	args		10595006	1					
ANR	10595136	CFGEntryNode	ENTRY		10595006		True				
ANR	10595137	CFGExitNode	EXIT		10595006		True				
ANR	10595138	Symbol	FAST_PROJECT		10595006						
ANR	10595139	Symbol	* exc		10595006						
ANR	10595140	Symbol	SUB_LONG		10595006						
ANR	10595141	Symbol	K		10595006						
ANR	10595142	Symbol	L		10595006						
ANR	10595143	Symbol	* exc -> zp2 . cur		10595006						
ANR	10595144	Symbol	exc -> zp2 . org		10595006						
ANR	10595145	Symbol	* args		10595006						
ANR	10595146	Symbol	exc		10595006						
ANR	10595147	Symbol	Invalid_Reference		10595006						
ANR	10595148	Symbol	BOUNDS		10595006						
ANR	10595149	Symbol	* L		10595006						
ANR	10595150	Symbol	exc -> error		10595006						
ANR	10595151	Symbol	* * exc		10595006						
ANR	10595152	Symbol	exc -> pedantic_hinting		10595006						
ANR	10595153	Symbol	exc -> zp2 . cur		10595006						
ANR	10595154	Symbol	exc -> GS . gep2		10595006						
ANR	10595155	Symbol	* exc -> zp2 . org		10595006						
ANR	10595156	Symbol	exc -> GS		10595006						
ANR	10595157	Symbol	FT_THROW		10595006						
ANR	10595158	Symbol	args		10595006						
ANR	10595159	Symbol	exc -> zp2		10595006						
ANR	10595160	Symbol	exc -> zp2 . n_points		10595006						
ANR	10595161	Symbol	& exc -> zp2		10595006						
ANR	10595162	Symbol	* exc -> zp2		10595006						
ANR	10595163	Function	Ins_MD	4833:2:176486:178189							
ANR	10595164	FunctionDef	"Ins_MD (TT_ExecContext exc , FT_Long * args)"		10595163	0					
ANR	10595165	CompoundStatement		4836:2:176564:178189	10595163	0					
ANR	10595166	IdentifierDeclStatement	"FT_UShort K , L ;"	4837:4:176570:176586	10595163	0	True				
ANR	10595167	IdentifierDecl	K		10595163	0					
ANR	10595168	IdentifierDeclType	FT_UShort		10595163	0					
ANR	10595169	Identifier	K		10595163	1					
ANR	10595170	IdentifierDecl	L		10595163	1					
ANR	10595171	IdentifierDeclType	FT_UShort		10595163	0					
ANR	10595172	Identifier	L		10595163	1					
ANR	10595173	IdentifierDeclStatement	FT_F26Dot6 D ;	4838:4:176592:176605	10595163	1	True				
ANR	10595174	IdentifierDecl	D		10595163	0					
ANR	10595175	IdentifierDeclType	FT_F26Dot6		10595163	0					
ANR	10595176	Identifier	D		10595163	1					
ANR	10595177	ExpressionStatement	K = ( FT_UShort ) args [ 1 ]	4841:4:176613:176635	10595163	2	True				
ANR	10595178	AssignmentExpression	K = ( FT_UShort ) args [ 1 ]		10595163	0		=			
ANR	10595179	Identifier	K		10595163	0					
ANR	10595180	CastExpression	( FT_UShort ) args [ 1 ]		10595163	1					
ANR	10595181	CastTarget	FT_UShort		10595163	0					
ANR	10595182	ArrayIndexing	args [ 1 ]		10595163	1					
ANR	10595183	Identifier	args		10595163	0					
ANR	10595184	PrimaryExpression	1		10595163	1					
ANR	10595185	ExpressionStatement	L = ( FT_UShort ) args [ 0 ]	4842:4:176641:176663	10595163	3	True				
ANR	10595186	AssignmentExpression	L = ( FT_UShort ) args [ 0 ]		10595163	0		=			
ANR	10595187	Identifier	L		10595163	0					
ANR	10595188	CastExpression	( FT_UShort ) args [ 0 ]		10595163	1					
ANR	10595189	CastTarget	FT_UShort		10595163	0					
ANR	10595190	ArrayIndexing	args [ 0 ]		10595163	1					
ANR	10595191	Identifier	args		10595163	0					
ANR	10595192	PrimaryExpression	0		10595163	1					
ANR	10595193	IfStatement	"if ( BOUNDS ( L , exc -> zp0 . n_points ) || BOUNDS ( K , exc -> zp1 . n_points ) )"		10595163	4					
ANR	10595194	Condition	"BOUNDS ( L , exc -> zp0 . n_points ) || BOUNDS ( K , exc -> zp1 . n_points )"	4844:9:176675:176747	10595163	0	True				
ANR	10595195	OrExpression	"BOUNDS ( L , exc -> zp0 . n_points ) || BOUNDS ( K , exc -> zp1 . n_points )"		10595163	0		||			
ANR	10595196	CallExpression	"BOUNDS ( L , exc -> zp0 . n_points )"		10595163	0					
ANR	10595197	Callee	BOUNDS		10595163	0					
ANR	10595198	Identifier	BOUNDS		10595163	0					
ANR	10595199	ArgumentList	L		10595163	1					
ANR	10595200	Argument	L		10595163	0					
ANR	10595201	Identifier	L		10595163	0					
ANR	10595202	Argument	exc -> zp0 . n_points		10595163	1					
ANR	10595203	MemberAccess	exc -> zp0 . n_points		10595163	0					
ANR	10595204	PtrMemberAccess	exc -> zp0		10595163	0					
ANR	10595205	Identifier	exc		10595163	0					
ANR	10595206	Identifier	zp0		10595163	1					
ANR	10595207	Identifier	n_points		10595163	1					
ANR	10595208	CallExpression	"BOUNDS ( K , exc -> zp1 . n_points )"		10595163	1					
ANR	10595209	Callee	BOUNDS		10595163	0					
ANR	10595210	Identifier	BOUNDS		10595163	0					
ANR	10595211	ArgumentList	K		10595163	1					
ANR	10595212	Argument	K		10595163	0					
ANR	10595213	Identifier	K		10595163	0					
ANR	10595214	Argument	exc -> zp1 . n_points		10595163	1					
ANR	10595215	MemberAccess	exc -> zp1 . n_points		10595163	0					
ANR	10595216	PtrMemberAccess	exc -> zp1		10595163	0					
ANR	10595217	Identifier	exc		10595163	0					
ANR	10595218	Identifier	zp1		10595163	1					
ANR	10595219	Identifier	n_points		10595163	1					
ANR	10595220	CompoundStatement		11:4:190:190	10595163	1					
ANR	10595221	IfStatement	if ( exc -> pedantic_hinting )		10595163	0					
ANR	10595222	Condition	exc -> pedantic_hinting	4847:11:176768:176788	10595163	0	True				
ANR	10595223	PtrMemberAccess	exc -> pedantic_hinting		10595163	0					
ANR	10595224	Identifier	exc		10595163	0					
ANR	10595225	Identifier	pedantic_hinting		10595163	1					
ANR	10595226	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	4848:8:176800:176842	10595163	1	True				
ANR	10595227	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10595163	0		=			
ANR	10595228	PtrMemberAccess	exc -> error		10595163	0					
ANR	10595229	Identifier	exc		10595163	0					
ANR	10595230	Identifier	error		10595163	1					
ANR	10595231	CallExpression	FT_THROW ( Invalid_Reference )		10595163	1					
ANR	10595232	Callee	FT_THROW		10595163	0					
ANR	10595233	Identifier	FT_THROW		10595163	0					
ANR	10595234	ArgumentList	Invalid_Reference		10595163	1					
ANR	10595235	Argument	Invalid_Reference		10595163	0					
ANR	10595236	Identifier	Invalid_Reference		10595163	0					
ANR	10595237	ExpressionStatement	D = 0	4849:6:176850:176855	10595163	1	True				
ANR	10595238	AssignmentExpression	D = 0		10595163	0		=			
ANR	10595239	Identifier	D		10595163	0					
ANR	10595240	PrimaryExpression	0		10595163	1					
ANR	10595241	ElseStatement	else		10595163	0					
ANR	10595242	CompoundStatement		17:4:311:311	10595163	0					
ANR	10595243	IfStatement	if ( exc -> opcode & 1 )		10595163	0					
ANR	10595244	Condition	exc -> opcode & 1	4853:11:176889:176903	10595163	0	True				
ANR	10595245	BitAndExpression	exc -> opcode & 1		10595163	0		&			
ANR	10595246	PtrMemberAccess	exc -> opcode		10595163	0					
ANR	10595247	Identifier	exc		10595163	0					
ANR	10595248	Identifier	opcode		10595163	1					
ANR	10595249	PrimaryExpression	1		10595163	1					
ANR	10595250	ExpressionStatement	"D = PROJECT ( exc -> zp0 . cur + L , exc -> zp1 . cur + K )"	4854:8:176915:176964	10595163	1	True				
ANR	10595251	AssignmentExpression	"D = PROJECT ( exc -> zp0 . cur + L , exc -> zp1 . cur + K )"		10595163	0		=			
ANR	10595252	Identifier	D		10595163	0					
ANR	10595253	CallExpression	"PROJECT ( exc -> zp0 . cur + L , exc -> zp1 . cur + K )"		10595163	1					
ANR	10595254	Callee	PROJECT		10595163	0					
ANR	10595255	Identifier	PROJECT		10595163	0					
ANR	10595256	ArgumentList	exc -> zp0 . cur + L		10595163	1					
ANR	10595257	Argument	exc -> zp0 . cur + L		10595163	0					
ANR	10595258	AdditiveExpression	exc -> zp0 . cur + L		10595163	0		+			
ANR	10595259	MemberAccess	exc -> zp0 . cur		10595163	0					
ANR	10595260	PtrMemberAccess	exc -> zp0		10595163	0					
ANR	10595261	Identifier	exc		10595163	0					
ANR	10595262	Identifier	zp0		10595163	1					
ANR	10595263	Identifier	cur		10595163	1					
ANR	10595264	Identifier	L		10595163	1					
ANR	10595265	Argument	exc -> zp1 . cur + K		10595163	1					
ANR	10595266	AdditiveExpression	exc -> zp1 . cur + K		10595163	0		+			
ANR	10595267	MemberAccess	exc -> zp1 . cur		10595163	0					
ANR	10595268	PtrMemberAccess	exc -> zp1		10595163	0					
ANR	10595269	Identifier	exc		10595163	0					
ANR	10595270	Identifier	zp1		10595163	1					
ANR	10595271	Identifier	cur		10595163	1					
ANR	10595272	Identifier	K		10595163	1					
ANR	10595273	ElseStatement	else		10595163	0					
ANR	10595274	CompoundStatement		21:6:418:418	10595163	0					
ANR	10595275	IfStatement	if ( exc -> GS . gep0 == 0 || exc -> GS . gep1 == 0 )		10595163	0					
ANR	10595276	Condition	exc -> GS . gep0 == 0 || exc -> GS . gep1 == 0	4859:13:177059:177096	10595163	0	True				
ANR	10595277	OrExpression	exc -> GS . gep0 == 0 || exc -> GS . gep1 == 0		10595163	0		||			
ANR	10595278	EqualityExpression	exc -> GS . gep0 == 0		10595163	0		==			
ANR	10595279	MemberAccess	exc -> GS . gep0		10595163	0					
ANR	10595280	PtrMemberAccess	exc -> GS		10595163	0					
ANR	10595281	Identifier	exc		10595163	0					
ANR	10595282	Identifier	GS		10595163	1					
ANR	10595283	Identifier	gep0		10595163	1					
ANR	10595284	PrimaryExpression	0		10595163	1					
ANR	10595285	EqualityExpression	exc -> GS . gep1 == 0		10595163	1		==			
ANR	10595286	MemberAccess	exc -> GS . gep1		10595163	0					
ANR	10595287	PtrMemberAccess	exc -> GS		10595163	0					
ANR	10595288	Identifier	exc		10595163	0					
ANR	10595289	Identifier	GS		10595163	1					
ANR	10595290	Identifier	gep1		10595163	1					
ANR	10595291	PrimaryExpression	0		10595163	1					
ANR	10595292	CompoundStatement		27:10:602:637	10595163	1					
ANR	10595293	IdentifierDeclStatement	FT_Vector * vec1 = exc -> zp0 . org + L ;	4861:10:177120:177155	10595163	0	True				
ANR	10595294	IdentifierDecl	* vec1 = exc -> zp0 . org + L		10595163	0					
ANR	10595295	IdentifierDeclType	FT_Vector *		10595163	0					
ANR	10595296	Identifier	vec1		10595163	1					
ANR	10595297	AssignmentExpression	* vec1 = exc -> zp0 . org + L		10595163	2		=			
ANR	10595298	Identifier	vec1		10595163	0					
ANR	10595299	AdditiveExpression	exc -> zp0 . org + L		10595163	1		+			
ANR	10595300	MemberAccess	exc -> zp0 . org		10595163	0					
ANR	10595301	PtrMemberAccess	exc -> zp0		10595163	0					
ANR	10595302	Identifier	exc		10595163	0					
ANR	10595303	Identifier	zp0		10595163	1					
ANR	10595304	Identifier	org		10595163	1					
ANR	10595305	Identifier	L		10595163	1					
ANR	10595306	IdentifierDeclStatement	FT_Vector * vec2 = exc -> zp1 . org + K ;	4862:10:177167:177202	10595163	1	True				
ANR	10595307	IdentifierDecl	* vec2 = exc -> zp1 . org + K		10595163	0					
ANR	10595308	IdentifierDeclType	FT_Vector *		10595163	0					
ANR	10595309	Identifier	vec2		10595163	1					
ANR	10595310	AssignmentExpression	* vec2 = exc -> zp1 . org + K		10595163	2		=			
ANR	10595311	Identifier	vec2		10595163	0					
ANR	10595312	AdditiveExpression	exc -> zp1 . org + K		10595163	1		+			
ANR	10595313	MemberAccess	exc -> zp1 . org		10595163	0					
ANR	10595314	PtrMemberAccess	exc -> zp1		10595163	0					
ANR	10595315	Identifier	exc		10595163	0					
ANR	10595316	Identifier	zp1		10595163	1					
ANR	10595317	Identifier	org		10595163	1					
ANR	10595318	Identifier	K		10595163	1					
ANR	10595319	ExpressionStatement	"D = DUALPROJ ( vec1 , vec2 )"	4865:10:177216:177242	10595163	2	True				
ANR	10595320	AssignmentExpression	"D = DUALPROJ ( vec1 , vec2 )"		10595163	0		=			
ANR	10595321	Identifier	D		10595163	0					
ANR	10595322	CallExpression	"DUALPROJ ( vec1 , vec2 )"		10595163	1					
ANR	10595323	Callee	DUALPROJ		10595163	0					
ANR	10595324	Identifier	DUALPROJ		10595163	0					
ANR	10595325	ArgumentList	vec1		10595163	1					
ANR	10595326	Argument	vec1		10595163	0					
ANR	10595327	Identifier	vec1		10595163	0					
ANR	10595328	Argument	vec2		10595163	1					
ANR	10595329	Identifier	vec2		10595163	0					
ANR	10595330	ElseStatement	else		10595163	0					
ANR	10595331	CompoundStatement		35:10:770:806	10595163	0					
ANR	10595332	IdentifierDeclStatement	FT_Vector * vec1 = exc -> zp0 . orus + L ;	4869:10:177287:177323	10595163	0	True				
ANR	10595333	IdentifierDecl	* vec1 = exc -> zp0 . orus + L		10595163	0					
ANR	10595334	IdentifierDeclType	FT_Vector *		10595163	0					
ANR	10595335	Identifier	vec1		10595163	1					
ANR	10595336	AssignmentExpression	* vec1 = exc -> zp0 . orus + L		10595163	2		=			
ANR	10595337	Identifier	vec1		10595163	0					
ANR	10595338	AdditiveExpression	exc -> zp0 . orus + L		10595163	1		+			
ANR	10595339	MemberAccess	exc -> zp0 . orus		10595163	0					
ANR	10595340	PtrMemberAccess	exc -> zp0		10595163	0					
ANR	10595341	Identifier	exc		10595163	0					
ANR	10595342	Identifier	zp0		10595163	1					
ANR	10595343	Identifier	orus		10595163	1					
ANR	10595344	Identifier	L		10595163	1					
ANR	10595345	IdentifierDeclStatement	FT_Vector * vec2 = exc -> zp1 . orus + K ;	4870:10:177335:177371	10595163	1	True				
ANR	10595346	IdentifierDecl	* vec2 = exc -> zp1 . orus + K		10595163	0					
ANR	10595347	IdentifierDeclType	FT_Vector *		10595163	0					
ANR	10595348	Identifier	vec2		10595163	1					
ANR	10595349	AssignmentExpression	* vec2 = exc -> zp1 . orus + K		10595163	2		=			
ANR	10595350	Identifier	vec2		10595163	0					
ANR	10595351	AdditiveExpression	exc -> zp1 . orus + K		10595163	1		+			
ANR	10595352	MemberAccess	exc -> zp1 . orus		10595163	0					
ANR	10595353	PtrMemberAccess	exc -> zp1		10595163	0					
ANR	10595354	Identifier	exc		10595163	0					
ANR	10595355	Identifier	zp1		10595163	1					
ANR	10595356	Identifier	orus		10595163	1					
ANR	10595357	Identifier	K		10595163	1					
ANR	10595358	IfStatement	if ( exc -> metrics . x_scale == exc -> metrics . y_scale )		10595163	2					
ANR	10595359	Condition	exc -> metrics . x_scale == exc -> metrics . y_scale	4873:15:177390:177433	10595163	0	True				
ANR	10595360	EqualityExpression	exc -> metrics . x_scale == exc -> metrics . y_scale		10595163	0		==			
ANR	10595361	MemberAccess	exc -> metrics . x_scale		10595163	0					
ANR	10595362	PtrMemberAccess	exc -> metrics		10595163	0					
ANR	10595363	Identifier	exc		10595163	0					
ANR	10595364	Identifier	metrics		10595163	1					
ANR	10595365	Identifier	x_scale		10595163	1					
ANR	10595366	MemberAccess	exc -> metrics . y_scale		10595163	1					
ANR	10595367	PtrMemberAccess	exc -> metrics		10595163	0					
ANR	10595368	Identifier	exc		10595163	0					
ANR	10595369	Identifier	metrics		10595163	1					
ANR	10595370	Identifier	y_scale		10595163	1					
ANR	10595371	CompoundStatement		39:10:882:882	10595163	1					
ANR	10595372	ExpressionStatement	"D = DUALPROJ ( vec1 , vec2 )"	4876:12:177501:177527	10595163	0	True				
ANR	10595373	AssignmentExpression	"D = DUALPROJ ( vec1 , vec2 )"		10595163	0		=			
ANR	10595374	Identifier	D		10595163	0					
ANR	10595375	CallExpression	"DUALPROJ ( vec1 , vec2 )"		10595163	1					
ANR	10595376	Callee	DUALPROJ		10595163	0					
ANR	10595377	Identifier	DUALPROJ		10595163	0					
ANR	10595378	ArgumentList	vec1		10595163	1					
ANR	10595379	Argument	vec1		10595163	0					
ANR	10595380	Identifier	vec1		10595163	0					
ANR	10595381	Argument	vec2		10595163	1					
ANR	10595382	Identifier	vec2		10595163	0					
ANR	10595383	ExpressionStatement	"D = FT_MulFix ( D , exc -> metrics . x_scale )"	4877:12:177541:177581	10595163	1	True				
ANR	10595384	AssignmentExpression	"D = FT_MulFix ( D , exc -> metrics . x_scale )"		10595163	0		=			
ANR	10595385	Identifier	D		10595163	0					
ANR	10595386	CallExpression	"FT_MulFix ( D , exc -> metrics . x_scale )"		10595163	1					
ANR	10595387	Callee	FT_MulFix		10595163	0					
ANR	10595388	Identifier	FT_MulFix		10595163	0					
ANR	10595389	ArgumentList	D		10595163	1					
ANR	10595390	Argument	D		10595163	0					
ANR	10595391	Identifier	D		10595163	0					
ANR	10595392	Argument	exc -> metrics . x_scale		10595163	1					
ANR	10595393	MemberAccess	exc -> metrics . x_scale		10595163	0					
ANR	10595394	PtrMemberAccess	exc -> metrics		10595163	0					
ANR	10595395	Identifier	exc		10595163	0					
ANR	10595396	Identifier	metrics		10595163	1					
ANR	10595397	Identifier	x_scale		10595163	1					
ANR	10595398	ElseStatement	else		10595163	0					
ANR	10595399	CompoundStatement		46:12:1069:1083	10595163	0					
ANR	10595400	IdentifierDeclStatement	FT_Vector vec ;	4881:12:177634:177648	10595163	0	True				
ANR	10595401	IdentifierDecl	vec		10595163	0					
ANR	10595402	IdentifierDeclType	FT_Vector		10595163	0					
ANR	10595403	Identifier	vec		10595163	1					
ANR	10595404	ExpressionStatement	"vec . x = FT_MulFix ( vec1 -> x - vec2 -> x , exc -> metrics . x_scale )"	4884:12:177664:177724	10595163	1	True				
ANR	10595405	AssignmentExpression	"vec . x = FT_MulFix ( vec1 -> x - vec2 -> x , exc -> metrics . x_scale )"		10595163	0		=			
ANR	10595406	MemberAccess	vec . x		10595163	0					
ANR	10595407	Identifier	vec		10595163	0					
ANR	10595408	Identifier	x		10595163	1					
ANR	10595409	CallExpression	"FT_MulFix ( vec1 -> x - vec2 -> x , exc -> metrics . x_scale )"		10595163	1					
ANR	10595410	Callee	FT_MulFix		10595163	0					
ANR	10595411	Identifier	FT_MulFix		10595163	0					
ANR	10595412	ArgumentList	vec1 -> x - vec2 -> x		10595163	1					
ANR	10595413	Argument	vec1 -> x - vec2 -> x		10595163	0					
ANR	10595414	AdditiveExpression	vec1 -> x - vec2 -> x		10595163	0		-			
ANR	10595415	PtrMemberAccess	vec1 -> x		10595163	0					
ANR	10595416	Identifier	vec1		10595163	0					
ANR	10595417	Identifier	x		10595163	1					
ANR	10595418	PtrMemberAccess	vec2 -> x		10595163	1					
ANR	10595419	Identifier	vec2		10595163	0					
ANR	10595420	Identifier	x		10595163	1					
ANR	10595421	Argument	exc -> metrics . x_scale		10595163	1					
ANR	10595422	MemberAccess	exc -> metrics . x_scale		10595163	0					
ANR	10595423	PtrMemberAccess	exc -> metrics		10595163	0					
ANR	10595424	Identifier	exc		10595163	0					
ANR	10595425	Identifier	metrics		10595163	1					
ANR	10595426	Identifier	x_scale		10595163	1					
ANR	10595427	ExpressionStatement	"vec . y = FT_MulFix ( vec1 -> y - vec2 -> y , exc -> metrics . y_scale )"	4885:12:177738:177798	10595163	2	True				
ANR	10595428	AssignmentExpression	"vec . y = FT_MulFix ( vec1 -> y - vec2 -> y , exc -> metrics . y_scale )"		10595163	0		=			
ANR	10595429	MemberAccess	vec . y		10595163	0					
ANR	10595430	Identifier	vec		10595163	0					
ANR	10595431	Identifier	y		10595163	1					
ANR	10595432	CallExpression	"FT_MulFix ( vec1 -> y - vec2 -> y , exc -> metrics . y_scale )"		10595163	1					
ANR	10595433	Callee	FT_MulFix		10595163	0					
ANR	10595434	Identifier	FT_MulFix		10595163	0					
ANR	10595435	ArgumentList	vec1 -> y - vec2 -> y		10595163	1					
ANR	10595436	Argument	vec1 -> y - vec2 -> y		10595163	0					
ANR	10595437	AdditiveExpression	vec1 -> y - vec2 -> y		10595163	0		-			
ANR	10595438	PtrMemberAccess	vec1 -> y		10595163	0					
ANR	10595439	Identifier	vec1		10595163	0					
ANR	10595440	Identifier	y		10595163	1					
ANR	10595441	PtrMemberAccess	vec2 -> y		10595163	1					
ANR	10595442	Identifier	vec2		10595163	0					
ANR	10595443	Identifier	y		10595163	1					
ANR	10595444	Argument	exc -> metrics . y_scale		10595163	1					
ANR	10595445	MemberAccess	exc -> metrics . y_scale		10595163	0					
ANR	10595446	PtrMemberAccess	exc -> metrics		10595163	0					
ANR	10595447	Identifier	exc		10595163	0					
ANR	10595448	Identifier	metrics		10595163	1					
ANR	10595449	Identifier	y_scale		10595163	1					
ANR	10595450	ExpressionStatement	D = FAST_DUALPROJ ( & vec )	4887:12:177813:177838	10595163	3	True				
ANR	10595451	AssignmentExpression	D = FAST_DUALPROJ ( & vec )		10595163	0		=			
ANR	10595452	Identifier	D		10595163	0					
ANR	10595453	CallExpression	FAST_DUALPROJ ( & vec )		10595163	1					
ANR	10595454	Callee	FAST_DUALPROJ		10595163	0					
ANR	10595455	Identifier	FAST_DUALPROJ		10595163	0					
ANR	10595456	ArgumentList	& vec		10595163	1					
ANR	10595457	Argument	& vec		10595163	0					
ANR	10595458	UnaryOperationExpression	& vec		10595163	0					
ANR	10595459	UnaryOperator	&		10595163	0					
ANR	10595460	Identifier	vec		10595163	1					
ANR	10595461	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && FT_ABS ( D ) == 64 )		10595163	5					
ANR	10595462	Condition	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && FT_ABS ( D ) == 64	4895:9:177993:178089	10595163	0	True				
ANR	10595463	AndExpression	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && FT_ABS ( D ) == 64		10595163	0		&&			
ANR	10595464	Identifier	SUBPIXEL_HINTING_INFINALITY		10595163	0					
ANR	10595465	AndExpression	exc -> ignore_x_mode && FT_ABS ( D ) == 64		10595163	1		&&			
ANR	10595466	PtrMemberAccess	exc -> ignore_x_mode		10595163	0					
ANR	10595467	Identifier	exc		10595163	0					
ANR	10595468	Identifier	ignore_x_mode		10595163	1					
ANR	10595469	EqualityExpression	FT_ABS ( D ) == 64		10595163	1		==			
ANR	10595470	CallExpression	FT_ABS ( D )		10595163	0					
ANR	10595471	Callee	FT_ABS		10595163	0					
ANR	10595472	Identifier	FT_ABS		10595163	0					
ANR	10595473	ArgumentList	D		10595163	1					
ANR	10595474	Argument	D		10595163	0					
ANR	10595475	Identifier	D		10595163	0					
ANR	10595476	PrimaryExpression	64		10595163	1					
ANR	10595477	ExpressionStatement	D += 1	4898:6:178109:178115	10595163	1	True				
ANR	10595478	AssignmentExpression	D += 1		10595163	0		+=			
ANR	10595479	Identifier	D		10595163	0					
ANR	10595480	PrimaryExpression	1		10595163	1					
ANR	10595481	ExpressionStatement	args [ 0 ] = D	4901:4:178174:178185	10595163	6	True				
ANR	10595482	AssignmentExpression	args [ 0 ] = D		10595163	0		=			
ANR	10595483	ArrayIndexing	args [ 0 ]		10595163	0					
ANR	10595484	Identifier	args		10595163	0					
ANR	10595485	PrimaryExpression	0		10595163	1					
ANR	10595486	Identifier	D		10595163	1					
ANR	10595487	ReturnType	static void		10595163	1					
ANR	10595488	Identifier	Ins_MD		10595163	2					
ANR	10595489	ParameterList	"TT_ExecContext exc , FT_Long * args"		10595163	3					
ANR	10595490	Parameter	TT_ExecContext exc	4834:10:176508:176526	10595163	0	True				
ANR	10595491	ParameterType	TT_ExecContext		10595163	0					
ANR	10595492	Identifier	exc		10595163	1					
ANR	10595493	Parameter	FT_Long * args	4835:10:176539:176558	10595163	1	True				
ANR	10595494	ParameterType	FT_Long *		10595163	0					
ANR	10595495	Identifier	args		10595163	1					
ANR	10595496	CFGEntryNode	ENTRY		10595163		True				
ANR	10595497	CFGExitNode	EXIT		10595163		True				
ANR	10595498	Symbol	vec . y		10595163						
ANR	10595499	Symbol	vec . x		10595163						
ANR	10595500	Symbol	D		10595163						
ANR	10595501	Symbol	* exc		10595163						
ANR	10595502	Symbol	FAST_DUALPROJ		10595163						
ANR	10595503	Symbol	K		10595163						
ANR	10595504	Symbol	L		10595163						
ANR	10595505	Symbol	vec1 -> x		10595163						
ANR	10595506	Symbol	vec1 -> y		10595163						
ANR	10595507	Symbol	* args		10595163						
ANR	10595508	Symbol	SUBPIXEL_HINTING_INFINALITY		10595163						
ANR	10595509	Symbol	exc		10595163						
ANR	10595510	Symbol	exc -> zp0 . n_points		10595163						
ANR	10595511	Symbol	Invalid_Reference		10595163						
ANR	10595512	Symbol	exc -> zp1 . org		10595163						
ANR	10595513	Symbol	exc -> zp1 . orus		10595163						
ANR	10595514	Symbol	BOUNDS		10595163						
ANR	10595515	Symbol	vec		10595163						
ANR	10595516	Symbol	DUALPROJ		10595163						
ANR	10595517	Symbol	exc -> metrics . x_scale		10595163						
ANR	10595518	Symbol	vec2 -> y		10595163						
ANR	10595519	Symbol	exc -> zp0 . orus		10595163						
ANR	10595520	Symbol	exc -> error		10595163						
ANR	10595521	Symbol	vec2 -> x		10595163						
ANR	10595522	Symbol	FT_ABS		10595163						
ANR	10595523	Symbol	exc -> ignore_x_mode		10595163						
ANR	10595524	Symbol	exc -> zp0 . cur		10595163						
ANR	10595525	Symbol	PROJECT		10595163						
ANR	10595526	Symbol	exc -> metrics . y_scale		10595163						
ANR	10595527	Symbol	exc -> zp1 . n_points		10595163						
ANR	10595528	Symbol	exc -> pedantic_hinting		10595163						
ANR	10595529	Symbol	exc -> GS . gep0		10595163						
ANR	10595530	Symbol	vec2		10595163						
ANR	10595531	Symbol	vec1		10595163						
ANR	10595532	Symbol	exc -> GS . gep1		10595163						
ANR	10595533	Symbol	exc -> metrics		10595163						
ANR	10595534	Symbol	exc -> GS		10595163						
ANR	10595535	Symbol	FT_THROW		10595163						
ANR	10595536	Symbol	args		10595163						
ANR	10595537	Symbol	exc -> zp1		10595163						
ANR	10595538	Symbol	* vec2		10595163						
ANR	10595539	Symbol	FT_MulFix		10595163						
ANR	10595540	Symbol	exc -> zp0		10595163						
ANR	10595541	Symbol	exc -> zp1 . cur		10595163						
ANR	10595542	Symbol	* vec1		10595163						
ANR	10595543	Symbol	exc -> zp0 . org		10595163						
ANR	10595544	Symbol	exc -> opcode		10595163						
ANR	10595545	Symbol	& vec		10595163						
ANR	10595546	Function	Ins_SDPVTL	4911:2:178663:180254							
ANR	10595547	FunctionDef	"Ins_SDPVTL (TT_ExecContext exc , FT_Long * args)"		10595546	0					
ANR	10595548	CompoundStatement		4914:2:178749:180254	10595546	0					
ANR	10595549	IdentifierDeclStatement	"FT_Long A , B , C ;"	4915:4:178755:178773	10595546	0	True				
ANR	10595550	IdentifierDecl	A		10595546	0					
ANR	10595551	IdentifierDeclType	FT_Long		10595546	0					
ANR	10595552	Identifier	A		10595546	1					
ANR	10595553	IdentifierDecl	B		10595546	1					
ANR	10595554	IdentifierDeclType	FT_Long		10595546	0					
ANR	10595555	Identifier	B		10595546	1					
ANR	10595556	IdentifierDecl	C		10595546	2					
ANR	10595557	IdentifierDeclType	FT_Long		10595546	0					
ANR	10595558	Identifier	C		10595546	1					
ANR	10595559	IdentifierDeclStatement	"FT_UShort p1 , p2 ;"	4916:4:178779:178796	10595546	1	True				
ANR	10595560	IdentifierDecl	p1		10595546	0					
ANR	10595561	IdentifierDeclType	FT_UShort		10595546	0					
ANR	10595562	Identifier	p1		10595546	1					
ANR	10595563	IdentifierDecl	p2		10595546	1					
ANR	10595564	IdentifierDeclType	FT_UShort		10595546	0					
ANR	10595565	Identifier	p2		10595546	1					
ANR	10595566	IdentifierDeclStatement	FT_Byte opcode = exc -> opcode ;	4918:4:178849:178878	10595546	2	True				
ANR	10595567	IdentifierDecl	opcode = exc -> opcode		10595546	0					
ANR	10595568	IdentifierDeclType	FT_Byte		10595546	0					
ANR	10595569	Identifier	opcode		10595546	1					
ANR	10595570	AssignmentExpression	opcode = exc -> opcode		10595546	2		=			
ANR	10595571	Identifier	opcode		10595546	0					
ANR	10595572	PtrMemberAccess	exc -> opcode		10595546	1					
ANR	10595573	Identifier	exc		10595546	0					
ANR	10595574	Identifier	opcode		10595546	1					
ANR	10595575	ExpressionStatement	p1 = ( FT_UShort ) args [ 1 ]	4921:4:178886:178909	10595546	3	True				
ANR	10595576	AssignmentExpression	p1 = ( FT_UShort ) args [ 1 ]		10595546	0		=			
ANR	10595577	Identifier	p1		10595546	0					
ANR	10595578	CastExpression	( FT_UShort ) args [ 1 ]		10595546	1					
ANR	10595579	CastTarget	FT_UShort		10595546	0					
ANR	10595580	ArrayIndexing	args [ 1 ]		10595546	1					
ANR	10595581	Identifier	args		10595546	0					
ANR	10595582	PrimaryExpression	1		10595546	1					
ANR	10595583	ExpressionStatement	p2 = ( FT_UShort ) args [ 0 ]	4922:4:178915:178938	10595546	4	True				
ANR	10595584	AssignmentExpression	p2 = ( FT_UShort ) args [ 0 ]		10595546	0		=			
ANR	10595585	Identifier	p2		10595546	0					
ANR	10595586	CastExpression	( FT_UShort ) args [ 0 ]		10595546	1					
ANR	10595587	CastTarget	FT_UShort		10595546	0					
ANR	10595588	ArrayIndexing	args [ 0 ]		10595546	1					
ANR	10595589	Identifier	args		10595546	0					
ANR	10595590	PrimaryExpression	0		10595546	1					
ANR	10595591	IfStatement	"if ( BOUNDS ( p2 , exc -> zp1 . n_points ) || BOUNDS ( p1 , exc -> zp2 . n_points ) )"		10595546	5					
ANR	10595592	Condition	"BOUNDS ( p2 , exc -> zp1 . n_points ) || BOUNDS ( p1 , exc -> zp2 . n_points )"	4924:9:178950:179024	10595546	0	True				
ANR	10595593	OrExpression	"BOUNDS ( p2 , exc -> zp1 . n_points ) || BOUNDS ( p1 , exc -> zp2 . n_points )"		10595546	0		||			
ANR	10595594	CallExpression	"BOUNDS ( p2 , exc -> zp1 . n_points )"		10595546	0					
ANR	10595595	Callee	BOUNDS		10595546	0					
ANR	10595596	Identifier	BOUNDS		10595546	0					
ANR	10595597	ArgumentList	p2		10595546	1					
ANR	10595598	Argument	p2		10595546	0					
ANR	10595599	Identifier	p2		10595546	0					
ANR	10595600	Argument	exc -> zp1 . n_points		10595546	1					
ANR	10595601	MemberAccess	exc -> zp1 . n_points		10595546	0					
ANR	10595602	PtrMemberAccess	exc -> zp1		10595546	0					
ANR	10595603	Identifier	exc		10595546	0					
ANR	10595604	Identifier	zp1		10595546	1					
ANR	10595605	Identifier	n_points		10595546	1					
ANR	10595606	CallExpression	"BOUNDS ( p1 , exc -> zp2 . n_points )"		10595546	1					
ANR	10595607	Callee	BOUNDS		10595546	0					
ANR	10595608	Identifier	BOUNDS		10595546	0					
ANR	10595609	ArgumentList	p1		10595546	1					
ANR	10595610	Argument	p1		10595546	0					
ANR	10595611	Identifier	p1		10595546	0					
ANR	10595612	Argument	exc -> zp2 . n_points		10595546	1					
ANR	10595613	MemberAccess	exc -> zp2 . n_points		10595546	0					
ANR	10595614	PtrMemberAccess	exc -> zp2		10595546	0					
ANR	10595615	Identifier	exc		10595546	0					
ANR	10595616	Identifier	zp2		10595546	1					
ANR	10595617	Identifier	n_points		10595546	1					
ANR	10595618	CompoundStatement		13:4:282:282	10595546	1					
ANR	10595619	IfStatement	if ( exc -> pedantic_hinting )		10595546	0					
ANR	10595620	Condition	exc -> pedantic_hinting	4927:11:179045:179065	10595546	0	True				
ANR	10595621	PtrMemberAccess	exc -> pedantic_hinting		10595546	0					
ANR	10595622	Identifier	exc		10595546	0					
ANR	10595623	Identifier	pedantic_hinting		10595546	1					
ANR	10595624	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	4928:8:179077:179119	10595546	1	True				
ANR	10595625	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10595546	0		=			
ANR	10595626	PtrMemberAccess	exc -> error		10595546	0					
ANR	10595627	Identifier	exc		10595546	0					
ANR	10595628	Identifier	error		10595546	1					
ANR	10595629	CallExpression	FT_THROW ( Invalid_Reference )		10595546	1					
ANR	10595630	Callee	FT_THROW		10595546	0					
ANR	10595631	Identifier	FT_THROW		10595546	0					
ANR	10595632	ArgumentList	Invalid_Reference		10595546	1					
ANR	10595633	Argument	Invalid_Reference		10595546	0					
ANR	10595634	Identifier	Invalid_Reference		10595546	0					
ANR	10595635	ReturnStatement	return ;	4929:6:179127:179133	10595546	1	True				
ANR	10595636	CompoundStatement		21:6:446:480	10595546	6					
ANR	10595637	IdentifierDeclStatement	FT_Vector * v1 = exc -> zp1 . org + p2 ;	4933:6:179154:179188	10595546	0	True				
ANR	10595638	IdentifierDecl	* v1 = exc -> zp1 . org + p2		10595546	0					
ANR	10595639	IdentifierDeclType	FT_Vector *		10595546	0					
ANR	10595640	Identifier	v1		10595546	1					
ANR	10595641	AssignmentExpression	* v1 = exc -> zp1 . org + p2		10595546	2		=			
ANR	10595642	Identifier	v1		10595546	0					
ANR	10595643	AdditiveExpression	exc -> zp1 . org + p2		10595546	1		+			
ANR	10595644	MemberAccess	exc -> zp1 . org		10595546	0					
ANR	10595645	PtrMemberAccess	exc -> zp1		10595546	0					
ANR	10595646	Identifier	exc		10595546	0					
ANR	10595647	Identifier	zp1		10595546	1					
ANR	10595648	Identifier	org		10595546	1					
ANR	10595649	Identifier	p2		10595546	1					
ANR	10595650	IdentifierDeclStatement	FT_Vector * v2 = exc -> zp2 . org + p1 ;	4934:6:179196:179230	10595546	1	True				
ANR	10595651	IdentifierDecl	* v2 = exc -> zp2 . org + p1		10595546	0					
ANR	10595652	IdentifierDeclType	FT_Vector *		10595546	0					
ANR	10595653	Identifier	v2		10595546	1					
ANR	10595654	AssignmentExpression	* v2 = exc -> zp2 . org + p1		10595546	2		=			
ANR	10595655	Identifier	v2		10595546	0					
ANR	10595656	AdditiveExpression	exc -> zp2 . org + p1		10595546	1		+			
ANR	10595657	MemberAccess	exc -> zp2 . org		10595546	0					
ANR	10595658	PtrMemberAccess	exc -> zp2		10595546	0					
ANR	10595659	Identifier	exc		10595546	0					
ANR	10595660	Identifier	zp2		10595546	1					
ANR	10595661	Identifier	org		10595546	1					
ANR	10595662	Identifier	p1		10595546	1					
ANR	10595663	ExpressionStatement	"A = SUB_LONG ( v1 -> x , v2 -> x )"	4937:6:179240:179268	10595546	2	True				
ANR	10595664	AssignmentExpression	"A = SUB_LONG ( v1 -> x , v2 -> x )"		10595546	0		=			
ANR	10595665	Identifier	A		10595546	0					
ANR	10595666	CallExpression	"SUB_LONG ( v1 -> x , v2 -> x )"		10595546	1					
ANR	10595667	Callee	SUB_LONG		10595546	0					
ANR	10595668	Identifier	SUB_LONG		10595546	0					
ANR	10595669	ArgumentList	v1 -> x		10595546	1					
ANR	10595670	Argument	v1 -> x		10595546	0					
ANR	10595671	PtrMemberAccess	v1 -> x		10595546	0					
ANR	10595672	Identifier	v1		10595546	0					
ANR	10595673	Identifier	x		10595546	1					
ANR	10595674	Argument	v2 -> x		10595546	1					
ANR	10595675	PtrMemberAccess	v2 -> x		10595546	0					
ANR	10595676	Identifier	v2		10595546	0					
ANR	10595677	Identifier	x		10595546	1					
ANR	10595678	ExpressionStatement	"B = SUB_LONG ( v1 -> y , v2 -> y )"	4938:6:179276:179304	10595546	3	True				
ANR	10595679	AssignmentExpression	"B = SUB_LONG ( v1 -> y , v2 -> y )"		10595546	0		=			
ANR	10595680	Identifier	B		10595546	0					
ANR	10595681	CallExpression	"SUB_LONG ( v1 -> y , v2 -> y )"		10595546	1					
ANR	10595682	Callee	SUB_LONG		10595546	0					
ANR	10595683	Identifier	SUB_LONG		10595546	0					
ANR	10595684	ArgumentList	v1 -> y		10595546	1					
ANR	10595685	Argument	v1 -> y		10595546	0					
ANR	10595686	PtrMemberAccess	v1 -> y		10595546	0					
ANR	10595687	Identifier	v1		10595546	0					
ANR	10595688	Identifier	y		10595546	1					
ANR	10595689	Argument	v2 -> y		10595546	1					
ANR	10595690	PtrMemberAccess	v2 -> y		10595546	0					
ANR	10595691	Identifier	v2		10595546	0					
ANR	10595692	Identifier	y		10595546	1					
ANR	10595693	IfStatement	if ( A == 0 && B == 0 )		10595546	4					
ANR	10595694	Condition	A == 0 && B == 0	4945:11:179527:179542	10595546	0	True				
ANR	10595695	AndExpression	A == 0 && B == 0		10595546	0		&&			
ANR	10595696	EqualityExpression	A == 0		10595546	0		==			
ANR	10595697	Identifier	A		10595546	0					
ANR	10595698	PrimaryExpression	0		10595546	1					
ANR	10595699	EqualityExpression	B == 0		10595546	1		==			
ANR	10595700	Identifier	B		10595546	0					
ANR	10595701	PrimaryExpression	0		10595546	1					
ANR	10595702	CompoundStatement		33:6:802:802	10595546	1					
ANR	10595703	ExpressionStatement	A = 0x4000	4947:8:179562:179577	10595546	0	True				
ANR	10595704	AssignmentExpression	A = 0x4000		10595546	0		=			
ANR	10595705	Identifier	A		10595546	0					
ANR	10595706	PrimaryExpression	0x4000		10595546	1					
ANR	10595707	ExpressionStatement	opcode = 0	4948:8:179587:179597	10595546	1	True				
ANR	10595708	AssignmentExpression	opcode = 0		10595546	0		=			
ANR	10595709	Identifier	opcode		10595546	0					
ANR	10595710	PrimaryExpression	0		10595546	1					
ANR	10595711	IfStatement	if ( ( opcode & 1 ) != 0 )		10595546	7					
ANR	10595712	Condition	( opcode & 1 ) != 0	4952:9:179623:179641	10595546	0	True				
ANR	10595713	EqualityExpression	( opcode & 1 ) != 0		10595546	0		!=			
ANR	10595714	BitAndExpression	opcode & 1		10595546	0		&			
ANR	10595715	Identifier	opcode		10595546	0					
ANR	10595716	PrimaryExpression	1		10595546	1					
ANR	10595717	PrimaryExpression	0		10595546	1					
ANR	10595718	CompoundStatement		40:4:899:899	10595546	1					
ANR	10595719	ExpressionStatement	C = B	4954:6:179657:179662	10595546	0	True				
ANR	10595720	AssignmentExpression	C = B		10595546	0		=			
ANR	10595721	Identifier	C		10595546	0					
ANR	10595722	Identifier	B		10595546	1					
ANR	10595723	ExpressionStatement	B = A	4955:6:179705:179710	10595546	1	True				
ANR	10595724	AssignmentExpression	B = A		10595546	0		=			
ANR	10595725	Identifier	B		10595546	0					
ANR	10595726	Identifier	A		10595546	1					
ANR	10595727	ExpressionStatement	A = NEG_LONG ( C )	4956:6:179718:179735	10595546	2	True				
ANR	10595728	AssignmentExpression	A = NEG_LONG ( C )		10595546	0		=			
ANR	10595729	Identifier	A		10595546	0					
ANR	10595730	CallExpression	NEG_LONG ( C )		10595546	1					
ANR	10595731	Callee	NEG_LONG		10595546	0					
ANR	10595732	Identifier	NEG_LONG		10595546	0					
ANR	10595733	ArgumentList	C		10595546	1					
ANR	10595734	Argument	C		10595546	0					
ANR	10595735	Identifier	C		10595546	0					
ANR	10595736	ExpressionStatement	"Normalize ( A , B , & exc -> GS . dualVector )"	4959:4:179748:179786	10595546	8	True				
ANR	10595737	CallExpression	"Normalize ( A , B , & exc -> GS . dualVector )"		10595546	0					
ANR	10595738	Callee	Normalize		10595546	0					
ANR	10595739	Identifier	Normalize		10595546	0					
ANR	10595740	ArgumentList	A		10595546	1					
ANR	10595741	Argument	A		10595546	0					
ANR	10595742	Identifier	A		10595546	0					
ANR	10595743	Argument	B		10595546	1					
ANR	10595744	Identifier	B		10595546	0					
ANR	10595745	Argument	& exc -> GS . dualVector		10595546	2					
ANR	10595746	UnaryOperationExpression	& exc -> GS . dualVector		10595546	0					
ANR	10595747	UnaryOperator	&		10595546	0					
ANR	10595748	MemberAccess	exc -> GS . dualVector		10595546	1					
ANR	10595749	PtrMemberAccess	exc -> GS		10595546	0					
ANR	10595750	Identifier	exc		10595546	0					
ANR	10595751	Identifier	GS		10595546	1					
ANR	10595752	Identifier	dualVector		10595546	1					
ANR	10595753	CompoundStatement		50:6:1093:1127	10595546	9					
ANR	10595754	IdentifierDeclStatement	FT_Vector * v1 = exc -> zp1 . cur + p2 ;	4962:6:179801:179835	10595546	0	True				
ANR	10595755	IdentifierDecl	* v1 = exc -> zp1 . cur + p2		10595546	0					
ANR	10595756	IdentifierDeclType	FT_Vector *		10595546	0					
ANR	10595757	Identifier	v1		10595546	1					
ANR	10595758	AssignmentExpression	* v1 = exc -> zp1 . cur + p2		10595546	2		=			
ANR	10595759	Identifier	v1		10595546	0					
ANR	10595760	AdditiveExpression	exc -> zp1 . cur + p2		10595546	1		+			
ANR	10595761	MemberAccess	exc -> zp1 . cur		10595546	0					
ANR	10595762	PtrMemberAccess	exc -> zp1		10595546	0					
ANR	10595763	Identifier	exc		10595546	0					
ANR	10595764	Identifier	zp1		10595546	1					
ANR	10595765	Identifier	cur		10595546	1					
ANR	10595766	Identifier	p2		10595546	1					
ANR	10595767	IdentifierDeclStatement	FT_Vector * v2 = exc -> zp2 . cur + p1 ;	4963:6:179843:179877	10595546	1	True				
ANR	10595768	IdentifierDecl	* v2 = exc -> zp2 . cur + p1		10595546	0					
ANR	10595769	IdentifierDeclType	FT_Vector *		10595546	0					
ANR	10595770	Identifier	v2		10595546	1					
ANR	10595771	AssignmentExpression	* v2 = exc -> zp2 . cur + p1		10595546	2		=			
ANR	10595772	Identifier	v2		10595546	0					
ANR	10595773	AdditiveExpression	exc -> zp2 . cur + p1		10595546	1		+			
ANR	10595774	MemberAccess	exc -> zp2 . cur		10595546	0					
ANR	10595775	PtrMemberAccess	exc -> zp2		10595546	0					
ANR	10595776	Identifier	exc		10595546	0					
ANR	10595777	Identifier	zp2		10595546	1					
ANR	10595778	Identifier	cur		10595546	1					
ANR	10595779	Identifier	p1		10595546	1					
ANR	10595780	ExpressionStatement	"A = SUB_LONG ( v1 -> x , v2 -> x )"	4966:6:179887:179915	10595546	2	True				
ANR	10595781	AssignmentExpression	"A = SUB_LONG ( v1 -> x , v2 -> x )"		10595546	0		=			
ANR	10595782	Identifier	A		10595546	0					
ANR	10595783	CallExpression	"SUB_LONG ( v1 -> x , v2 -> x )"		10595546	1					
ANR	10595784	Callee	SUB_LONG		10595546	0					
ANR	10595785	Identifier	SUB_LONG		10595546	0					
ANR	10595786	ArgumentList	v1 -> x		10595546	1					
ANR	10595787	Argument	v1 -> x		10595546	0					
ANR	10595788	PtrMemberAccess	v1 -> x		10595546	0					
ANR	10595789	Identifier	v1		10595546	0					
ANR	10595790	Identifier	x		10595546	1					
ANR	10595791	Argument	v2 -> x		10595546	1					
ANR	10595792	PtrMemberAccess	v2 -> x		10595546	0					
ANR	10595793	Identifier	v2		10595546	0					
ANR	10595794	Identifier	x		10595546	1					
ANR	10595795	ExpressionStatement	"B = SUB_LONG ( v1 -> y , v2 -> y )"	4967:6:179923:179951	10595546	3	True				
ANR	10595796	AssignmentExpression	"B = SUB_LONG ( v1 -> y , v2 -> y )"		10595546	0		=			
ANR	10595797	Identifier	B		10595546	0					
ANR	10595798	CallExpression	"SUB_LONG ( v1 -> y , v2 -> y )"		10595546	1					
ANR	10595799	Callee	SUB_LONG		10595546	0					
ANR	10595800	Identifier	SUB_LONG		10595546	0					
ANR	10595801	ArgumentList	v1 -> y		10595546	1					
ANR	10595802	Argument	v1 -> y		10595546	0					
ANR	10595803	PtrMemberAccess	v1 -> y		10595546	0					
ANR	10595804	Identifier	v1		10595546	0					
ANR	10595805	Identifier	y		10595546	1					
ANR	10595806	Argument	v2 -> y		10595546	1					
ANR	10595807	PtrMemberAccess	v2 -> y		10595546	0					
ANR	10595808	Identifier	v2		10595546	0					
ANR	10595809	Identifier	y		10595546	1					
ANR	10595810	IfStatement	if ( A == 0 && B == 0 )		10595546	4					
ANR	10595811	Condition	A == 0 && B == 0	4969:11:179965:179980	10595546	0	True				
ANR	10595812	AndExpression	A == 0 && B == 0		10595546	0		&&			
ANR	10595813	EqualityExpression	A == 0		10595546	0		==			
ANR	10595814	Identifier	A		10595546	0					
ANR	10595815	PrimaryExpression	0		10595546	1					
ANR	10595816	EqualityExpression	B == 0		10595546	1		==			
ANR	10595817	Identifier	B		10595546	0					
ANR	10595818	PrimaryExpression	0		10595546	1					
ANR	10595819	CompoundStatement		57:6:1240:1240	10595546	1					
ANR	10595820	ExpressionStatement	A = 0x4000	4971:8:180000:180015	10595546	0	True				
ANR	10595821	AssignmentExpression	A = 0x4000		10595546	0		=			
ANR	10595822	Identifier	A		10595546	0					
ANR	10595823	PrimaryExpression	0x4000		10595546	1					
ANR	10595824	ExpressionStatement	opcode = 0	4972:8:180025:180035	10595546	1	True				
ANR	10595825	AssignmentExpression	opcode = 0		10595546	0		=			
ANR	10595826	Identifier	opcode		10595546	0					
ANR	10595827	PrimaryExpression	0		10595546	1					
ANR	10595828	IfStatement	if ( ( opcode & 1 ) != 0 )		10595546	10					
ANR	10595829	Condition	( opcode & 1 ) != 0	4976:9:180061:180079	10595546	0	True				
ANR	10595830	EqualityExpression	( opcode & 1 ) != 0		10595546	0		!=			
ANR	10595831	BitAndExpression	opcode & 1		10595546	0		&			
ANR	10595832	Identifier	opcode		10595546	0					
ANR	10595833	PrimaryExpression	1		10595546	1					
ANR	10595834	PrimaryExpression	0		10595546	1					
ANR	10595835	CompoundStatement		64:4:1337:1337	10595546	1					
ANR	10595836	ExpressionStatement	C = B	4978:6:180095:180100	10595546	0	True				
ANR	10595837	AssignmentExpression	C = B		10595546	0		=			
ANR	10595838	Identifier	C		10595546	0					
ANR	10595839	Identifier	B		10595546	1					
ANR	10595840	ExpressionStatement	B = A	4979:6:180143:180148	10595546	1	True				
ANR	10595841	AssignmentExpression	B = A		10595546	0		=			
ANR	10595842	Identifier	B		10595546	0					
ANR	10595843	Identifier	A		10595546	1					
ANR	10595844	ExpressionStatement	A = NEG_LONG ( C )	4980:6:180156:180173	10595546	2	True				
ANR	10595845	AssignmentExpression	A = NEG_LONG ( C )		10595546	0		=			
ANR	10595846	Identifier	A		10595546	0					
ANR	10595847	CallExpression	NEG_LONG ( C )		10595546	1					
ANR	10595848	Callee	NEG_LONG		10595546	0					
ANR	10595849	Identifier	NEG_LONG		10595546	0					
ANR	10595850	ArgumentList	C		10595546	1					
ANR	10595851	Argument	C		10595546	0					
ANR	10595852	Identifier	C		10595546	0					
ANR	10595853	ExpressionStatement	"Normalize ( A , B , & exc -> GS . projVector )"	4983:4:180186:180224	10595546	11	True				
ANR	10595854	CallExpression	"Normalize ( A , B , & exc -> GS . projVector )"		10595546	0					
ANR	10595855	Callee	Normalize		10595546	0					
ANR	10595856	Identifier	Normalize		10595546	0					
ANR	10595857	ArgumentList	A		10595546	1					
ANR	10595858	Argument	A		10595546	0					
ANR	10595859	Identifier	A		10595546	0					
ANR	10595860	Argument	B		10595546	1					
ANR	10595861	Identifier	B		10595546	0					
ANR	10595862	Argument	& exc -> GS . projVector		10595546	2					
ANR	10595863	UnaryOperationExpression	& exc -> GS . projVector		10595546	0					
ANR	10595864	UnaryOperator	&		10595546	0					
ANR	10595865	MemberAccess	exc -> GS . projVector		10595546	1					
ANR	10595866	PtrMemberAccess	exc -> GS		10595546	0					
ANR	10595867	Identifier	exc		10595546	0					
ANR	10595868	Identifier	GS		10595546	1					
ANR	10595869	Identifier	projVector		10595546	1					
ANR	10595870	ExpressionStatement	Compute_Funcs ( exc )	4984:4:180230:180250	10595546	12	True				
ANR	10595871	CallExpression	Compute_Funcs ( exc )		10595546	0					
ANR	10595872	Callee	Compute_Funcs		10595546	0					
ANR	10595873	Identifier	Compute_Funcs		10595546	0					
ANR	10595874	ArgumentList	exc		10595546	1					
ANR	10595875	Argument	exc		10595546	0					
ANR	10595876	Identifier	exc		10595546	0					
ANR	10595877	ReturnType	static void		10595546	1					
ANR	10595878	Identifier	Ins_SDPVTL		10595546	2					
ANR	10595879	ParameterList	"TT_ExecContext exc , FT_Long * args"		10595546	3					
ANR	10595880	Parameter	TT_ExecContext exc	4912:14:178689:178707	10595546	0	True				
ANR	10595881	ParameterType	TT_ExecContext		10595546	0					
ANR	10595882	Identifier	exc		10595546	1					
ANR	10595883	Parameter	FT_Long * args	4913:14:178724:178743	10595546	1	True				
ANR	10595884	ParameterType	FT_Long *		10595546	0					
ANR	10595885	Identifier	args		10595546	1					
ANR	10595886	CFGEntryNode	ENTRY		10595546		True				
ANR	10595887	CFGExitNode	EXIT		10595546		True				
ANR	10595888	Symbol	A		10595546						
ANR	10595889	Symbol	p1		10595546						
ANR	10595890	Symbol	& exc -> GS . projVector		10595546						
ANR	10595891	Symbol	B		10595546						
ANR	10595892	Symbol	p2		10595546						
ANR	10595893	Symbol	C		10595546						
ANR	10595894	Symbol	* exc		10595546						
ANR	10595895	Symbol	SUB_LONG		10595546						
ANR	10595896	Symbol	opcode		10595546						
ANR	10595897	Symbol	exc -> zp2 . org		10595546						
ANR	10595898	Symbol	* args		10595546						
ANR	10595899	Symbol	exc		10595546						
ANR	10595900	Symbol	Invalid_Reference		10595546						
ANR	10595901	Symbol	exc -> zp1 . org		10595546						
ANR	10595902	Symbol	BOUNDS		10595546						
ANR	10595903	Symbol	& exc -> GS		10595546						
ANR	10595904	Symbol	v1 -> y		10595546						
ANR	10595905	Symbol	v1 -> x		10595546						
ANR	10595906	Symbol	NEG_LONG		10595546						
ANR	10595907	Symbol	exc -> error		10595546						
ANR	10595908	Symbol	* v2		10595546						
ANR	10595909	Symbol	* v1		10595546						
ANR	10595910	Symbol	v2 -> x		10595546						
ANR	10595911	Symbol	exc -> zp1 . n_points		10595546						
ANR	10595912	Symbol	v2 -> y		10595546						
ANR	10595913	Symbol	exc -> pedantic_hinting		10595546						
ANR	10595914	Symbol	exc -> zp2 . cur		10595546						
ANR	10595915	Symbol	exc -> GS		10595546						
ANR	10595916	Symbol	FT_THROW		10595546						
ANR	10595917	Symbol	args		10595546						
ANR	10595918	Symbol	exc -> zp2		10595546						
ANR	10595919	Symbol	exc -> zp1		10595546						
ANR	10595920	Symbol	exc -> zp2 . n_points		10595546						
ANR	10595921	Symbol	exc -> zp1 . cur		10595546						
ANR	10595922	Symbol	& exc -> GS . dualVector		10595546						
ANR	10595923	Symbol	v1		10595546						
ANR	10595924	Symbol	exc -> opcode		10595546						
ANR	10595925	Symbol	v2		10595546						
ANR	10595926	Function	Ins_SZP0	4994:2:180728:181122							
ANR	10595927	FunctionDef	"Ins_SZP0 (TT_ExecContext exc , FT_Long * args)"		10595926	0					
ANR	10595928	CompoundStatement		4997:2:180810:181122	10595926	0					
ANR	10595929	SwitchStatement	switch ( ( FT_Int ) args [ 0 ] )		10595926	0					
ANR	10595930	Condition	( FT_Int ) args [ 0 ]	4998:13:180825:180839	10595926	0	True				
ANR	10595931	CastExpression	( FT_Int ) args [ 0 ]		10595926	0					
ANR	10595932	CastTarget	FT_Int		10595926	0					
ANR	10595933	ArrayIndexing	args [ 0 ]		10595926	1					
ANR	10595934	Identifier	args		10595926	0					
ANR	10595935	PrimaryExpression	0		10595926	1					
ANR	10595936	CompoundStatement		3:4:36:36	10595926	1					
ANR	10595937	Label	case 0 :	5000:4:180853:180859	10595926	0	True				
ANR	10595938	ExpressionStatement	exc -> zp0 = exc -> twilight	5001:6:180867:180891	10595926	1	True				
ANR	10595939	AssignmentExpression	exc -> zp0 = exc -> twilight		10595926	0		=			
ANR	10595940	PtrMemberAccess	exc -> zp0		10595926	0					
ANR	10595941	Identifier	exc		10595926	0					
ANR	10595942	Identifier	zp0		10595926	1					
ANR	10595943	PtrMemberAccess	exc -> twilight		10595926	1					
ANR	10595944	Identifier	exc		10595926	0					
ANR	10595945	Identifier	twilight		10595926	1					
ANR	10595946	BreakStatement	break ;	5002:6:180899:180904	10595926	2	True				
ANR	10595947	Label	case 1 :	5004:4:180911:180917	10595926	3	True				
ANR	10595948	ExpressionStatement	exc -> zp0 = exc -> pts	5005:6:180925:180944	10595926	4	True				
ANR	10595949	AssignmentExpression	exc -> zp0 = exc -> pts		10595926	0		=			
ANR	10595950	PtrMemberAccess	exc -> zp0		10595926	0					
ANR	10595951	Identifier	exc		10595926	0					
ANR	10595952	Identifier	zp0		10595926	1					
ANR	10595953	PtrMemberAccess	exc -> pts		10595926	1					
ANR	10595954	Identifier	exc		10595926	0					
ANR	10595955	Identifier	pts		10595926	1					
ANR	10595956	BreakStatement	break ;	5006:6:180952:180957	10595926	5	True				
ANR	10595957	Label	default :	5008:4:180964:180971	10595926	6	True				
ANR	10595958	Identifier	default		10595926	0					
ANR	10595959	IfStatement	if ( exc -> pedantic_hinting )		10595926	7					
ANR	10595960	Condition	exc -> pedantic_hinting	5009:11:180984:181004	10595926	0	True				
ANR	10595961	PtrMemberAccess	exc -> pedantic_hinting		10595926	0					
ANR	10595962	Identifier	exc		10595926	0					
ANR	10595963	Identifier	pedantic_hinting		10595926	1					
ANR	10595964	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	5010:8:181016:181058	10595926	1	True				
ANR	10595965	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10595926	0		=			
ANR	10595966	PtrMemberAccess	exc -> error		10595926	0					
ANR	10595967	Identifier	exc		10595926	0					
ANR	10595968	Identifier	error		10595926	1					
ANR	10595969	CallExpression	FT_THROW ( Invalid_Reference )		10595926	1					
ANR	10595970	Callee	FT_THROW		10595926	0					
ANR	10595971	Identifier	FT_THROW		10595926	0					
ANR	10595972	ArgumentList	Invalid_Reference		10595926	1					
ANR	10595973	Argument	Invalid_Reference		10595926	0					
ANR	10595974	Identifier	Invalid_Reference		10595926	0					
ANR	10595975	ReturnStatement	return ;	5011:6:181066:181072	10595926	8	True				
ANR	10595976	ExpressionStatement	exc -> GS . gep0 = ( FT_UShort ) args [ 0 ]	5014:4:181085:181118	10595926	1	True				
ANR	10595977	AssignmentExpression	exc -> GS . gep0 = ( FT_UShort ) args [ 0 ]		10595926	0		=			
ANR	10595978	MemberAccess	exc -> GS . gep0		10595926	0					
ANR	10595979	PtrMemberAccess	exc -> GS		10595926	0					
ANR	10595980	Identifier	exc		10595926	0					
ANR	10595981	Identifier	GS		10595926	1					
ANR	10595982	Identifier	gep0		10595926	1					
ANR	10595983	CastExpression	( FT_UShort ) args [ 0 ]		10595926	1					
ANR	10595984	CastTarget	FT_UShort		10595926	0					
ANR	10595985	ArrayIndexing	args [ 0 ]		10595926	1					
ANR	10595986	Identifier	args		10595926	0					
ANR	10595987	PrimaryExpression	0		10595926	1					
ANR	10595988	ReturnType	static void		10595926	1					
ANR	10595989	Identifier	Ins_SZP0		10595926	2					
ANR	10595990	ParameterList	"TT_ExecContext exc , FT_Long * args"		10595926	3					
ANR	10595991	Parameter	TT_ExecContext exc	4995:12:180752:180770	10595926	0	True				
ANR	10595992	ParameterType	TT_ExecContext		10595926	0					
ANR	10595993	Identifier	exc		10595926	1					
ANR	10595994	Parameter	FT_Long * args	4996:12:180785:180804	10595926	1	True				
ANR	10595995	ParameterType	FT_Long *		10595926	0					
ANR	10595996	Identifier	args		10595926	1					
ANR	10595997	CFGEntryNode	ENTRY		10595926		True				
ANR	10595998	CFGExitNode	EXIT		10595926		True				
ANR	10595999	Symbol	* exc		10595926						
ANR	10596000	Symbol	exc -> pedantic_hinting		10595926						
ANR	10596001	Symbol	exc -> GS . gep0		10595926						
ANR	10596002	Symbol	exc -> GS		10595926						
ANR	10596003	Symbol	FT_THROW		10595926						
ANR	10596004	Symbol	* args		10595926						
ANR	10596005	Symbol	args		10595926						
ANR	10596006	Symbol	exc		10595926						
ANR	10596007	Symbol	Invalid_Reference		10595926						
ANR	10596008	Symbol	exc -> zp0		10595926						
ANR	10596009	Symbol	exc -> error		10595926						
ANR	10596010	Symbol	exc -> pts		10595926						
ANR	10596011	Symbol	exc -> twilight		10595926						
ANR	10596012	Function	Ins_SZP1	5024:2:181596:181990							
ANR	10596013	FunctionDef	"Ins_SZP1 (TT_ExecContext exc , FT_Long * args)"		10596012	0					
ANR	10596014	CompoundStatement		5027:2:181678:181990	10596012	0					
ANR	10596015	SwitchStatement	switch ( ( FT_Int ) args [ 0 ] )		10596012	0					
ANR	10596016	Condition	( FT_Int ) args [ 0 ]	5028:13:181693:181707	10596012	0	True				
ANR	10596017	CastExpression	( FT_Int ) args [ 0 ]		10596012	0					
ANR	10596018	CastTarget	FT_Int		10596012	0					
ANR	10596019	ArrayIndexing	args [ 0 ]		10596012	1					
ANR	10596020	Identifier	args		10596012	0					
ANR	10596021	PrimaryExpression	0		10596012	1					
ANR	10596022	CompoundStatement		3:4:36:36	10596012	1					
ANR	10596023	Label	case 0 :	5030:4:181721:181727	10596012	0	True				
ANR	10596024	ExpressionStatement	exc -> zp1 = exc -> twilight	5031:6:181735:181759	10596012	1	True				
ANR	10596025	AssignmentExpression	exc -> zp1 = exc -> twilight		10596012	0		=			
ANR	10596026	PtrMemberAccess	exc -> zp1		10596012	0					
ANR	10596027	Identifier	exc		10596012	0					
ANR	10596028	Identifier	zp1		10596012	1					
ANR	10596029	PtrMemberAccess	exc -> twilight		10596012	1					
ANR	10596030	Identifier	exc		10596012	0					
ANR	10596031	Identifier	twilight		10596012	1					
ANR	10596032	BreakStatement	break ;	5032:6:181767:181772	10596012	2	True				
ANR	10596033	Label	case 1 :	5034:4:181779:181785	10596012	3	True				
ANR	10596034	ExpressionStatement	exc -> zp1 = exc -> pts	5035:6:181793:181812	10596012	4	True				
ANR	10596035	AssignmentExpression	exc -> zp1 = exc -> pts		10596012	0		=			
ANR	10596036	PtrMemberAccess	exc -> zp1		10596012	0					
ANR	10596037	Identifier	exc		10596012	0					
ANR	10596038	Identifier	zp1		10596012	1					
ANR	10596039	PtrMemberAccess	exc -> pts		10596012	1					
ANR	10596040	Identifier	exc		10596012	0					
ANR	10596041	Identifier	pts		10596012	1					
ANR	10596042	BreakStatement	break ;	5036:6:181820:181825	10596012	5	True				
ANR	10596043	Label	default :	5038:4:181832:181839	10596012	6	True				
ANR	10596044	Identifier	default		10596012	0					
ANR	10596045	IfStatement	if ( exc -> pedantic_hinting )		10596012	7					
ANR	10596046	Condition	exc -> pedantic_hinting	5039:11:181852:181872	10596012	0	True				
ANR	10596047	PtrMemberAccess	exc -> pedantic_hinting		10596012	0					
ANR	10596048	Identifier	exc		10596012	0					
ANR	10596049	Identifier	pedantic_hinting		10596012	1					
ANR	10596050	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	5040:8:181884:181926	10596012	1	True				
ANR	10596051	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10596012	0		=			
ANR	10596052	PtrMemberAccess	exc -> error		10596012	0					
ANR	10596053	Identifier	exc		10596012	0					
ANR	10596054	Identifier	error		10596012	1					
ANR	10596055	CallExpression	FT_THROW ( Invalid_Reference )		10596012	1					
ANR	10596056	Callee	FT_THROW		10596012	0					
ANR	10596057	Identifier	FT_THROW		10596012	0					
ANR	10596058	ArgumentList	Invalid_Reference		10596012	1					
ANR	10596059	Argument	Invalid_Reference		10596012	0					
ANR	10596060	Identifier	Invalid_Reference		10596012	0					
ANR	10596061	ReturnStatement	return ;	5041:6:181934:181940	10596012	8	True				
ANR	10596062	ExpressionStatement	exc -> GS . gep1 = ( FT_UShort ) args [ 0 ]	5044:4:181953:181986	10596012	1	True				
ANR	10596063	AssignmentExpression	exc -> GS . gep1 = ( FT_UShort ) args [ 0 ]		10596012	0		=			
ANR	10596064	MemberAccess	exc -> GS . gep1		10596012	0					
ANR	10596065	PtrMemberAccess	exc -> GS		10596012	0					
ANR	10596066	Identifier	exc		10596012	0					
ANR	10596067	Identifier	GS		10596012	1					
ANR	10596068	Identifier	gep1		10596012	1					
ANR	10596069	CastExpression	( FT_UShort ) args [ 0 ]		10596012	1					
ANR	10596070	CastTarget	FT_UShort		10596012	0					
ANR	10596071	ArrayIndexing	args [ 0 ]		10596012	1					
ANR	10596072	Identifier	args		10596012	0					
ANR	10596073	PrimaryExpression	0		10596012	1					
ANR	10596074	ReturnType	static void		10596012	1					
ANR	10596075	Identifier	Ins_SZP1		10596012	2					
ANR	10596076	ParameterList	"TT_ExecContext exc , FT_Long * args"		10596012	3					
ANR	10596077	Parameter	TT_ExecContext exc	5025:12:181620:181638	10596012	0	True				
ANR	10596078	ParameterType	TT_ExecContext		10596012	0					
ANR	10596079	Identifier	exc		10596012	1					
ANR	10596080	Parameter	FT_Long * args	5026:12:181653:181672	10596012	1	True				
ANR	10596081	ParameterType	FT_Long *		10596012	0					
ANR	10596082	Identifier	args		10596012	1					
ANR	10596083	CFGEntryNode	ENTRY		10596012		True				
ANR	10596084	CFGExitNode	EXIT		10596012		True				
ANR	10596085	Symbol	* exc		10596012						
ANR	10596086	Symbol	exc -> pedantic_hinting		10596012						
ANR	10596087	Symbol	exc -> GS . gep1		10596012						
ANR	10596088	Symbol	exc -> GS		10596012						
ANR	10596089	Symbol	FT_THROW		10596012						
ANR	10596090	Symbol	* args		10596012						
ANR	10596091	Symbol	args		10596012						
ANR	10596092	Symbol	exc		10596012						
ANR	10596093	Symbol	exc -> zp1		10596012						
ANR	10596094	Symbol	Invalid_Reference		10596012						
ANR	10596095	Symbol	exc -> error		10596012						
ANR	10596096	Symbol	exc -> pts		10596012						
ANR	10596097	Symbol	exc -> twilight		10596012						
ANR	10596098	Function	Ins_SZP2	5054:2:182464:182858							
ANR	10596099	FunctionDef	"Ins_SZP2 (TT_ExecContext exc , FT_Long * args)"		10596098	0					
ANR	10596100	CompoundStatement		5057:2:182546:182858	10596098	0					
ANR	10596101	SwitchStatement	switch ( ( FT_Int ) args [ 0 ] )		10596098	0					
ANR	10596102	Condition	( FT_Int ) args [ 0 ]	5058:13:182561:182575	10596098	0	True				
ANR	10596103	CastExpression	( FT_Int ) args [ 0 ]		10596098	0					
ANR	10596104	CastTarget	FT_Int		10596098	0					
ANR	10596105	ArrayIndexing	args [ 0 ]		10596098	1					
ANR	10596106	Identifier	args		10596098	0					
ANR	10596107	PrimaryExpression	0		10596098	1					
ANR	10596108	CompoundStatement		3:4:36:36	10596098	1					
ANR	10596109	Label	case 0 :	5060:4:182589:182595	10596098	0	True				
ANR	10596110	ExpressionStatement	exc -> zp2 = exc -> twilight	5061:6:182603:182627	10596098	1	True				
ANR	10596111	AssignmentExpression	exc -> zp2 = exc -> twilight		10596098	0		=			
ANR	10596112	PtrMemberAccess	exc -> zp2		10596098	0					
ANR	10596113	Identifier	exc		10596098	0					
ANR	10596114	Identifier	zp2		10596098	1					
ANR	10596115	PtrMemberAccess	exc -> twilight		10596098	1					
ANR	10596116	Identifier	exc		10596098	0					
ANR	10596117	Identifier	twilight		10596098	1					
ANR	10596118	BreakStatement	break ;	5062:6:182635:182640	10596098	2	True				
ANR	10596119	Label	case 1 :	5064:4:182647:182653	10596098	3	True				
ANR	10596120	ExpressionStatement	exc -> zp2 = exc -> pts	5065:6:182661:182680	10596098	4	True				
ANR	10596121	AssignmentExpression	exc -> zp2 = exc -> pts		10596098	0		=			
ANR	10596122	PtrMemberAccess	exc -> zp2		10596098	0					
ANR	10596123	Identifier	exc		10596098	0					
ANR	10596124	Identifier	zp2		10596098	1					
ANR	10596125	PtrMemberAccess	exc -> pts		10596098	1					
ANR	10596126	Identifier	exc		10596098	0					
ANR	10596127	Identifier	pts		10596098	1					
ANR	10596128	BreakStatement	break ;	5066:6:182688:182693	10596098	5	True				
ANR	10596129	Label	default :	5068:4:182700:182707	10596098	6	True				
ANR	10596130	Identifier	default		10596098	0					
ANR	10596131	IfStatement	if ( exc -> pedantic_hinting )		10596098	7					
ANR	10596132	Condition	exc -> pedantic_hinting	5069:11:182720:182740	10596098	0	True				
ANR	10596133	PtrMemberAccess	exc -> pedantic_hinting		10596098	0					
ANR	10596134	Identifier	exc		10596098	0					
ANR	10596135	Identifier	pedantic_hinting		10596098	1					
ANR	10596136	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	5070:8:182752:182794	10596098	1	True				
ANR	10596137	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10596098	0		=			
ANR	10596138	PtrMemberAccess	exc -> error		10596098	0					
ANR	10596139	Identifier	exc		10596098	0					
ANR	10596140	Identifier	error		10596098	1					
ANR	10596141	CallExpression	FT_THROW ( Invalid_Reference )		10596098	1					
ANR	10596142	Callee	FT_THROW		10596098	0					
ANR	10596143	Identifier	FT_THROW		10596098	0					
ANR	10596144	ArgumentList	Invalid_Reference		10596098	1					
ANR	10596145	Argument	Invalid_Reference		10596098	0					
ANR	10596146	Identifier	Invalid_Reference		10596098	0					
ANR	10596147	ReturnStatement	return ;	5071:6:182802:182808	10596098	8	True				
ANR	10596148	ExpressionStatement	exc -> GS . gep2 = ( FT_UShort ) args [ 0 ]	5074:4:182821:182854	10596098	1	True				
ANR	10596149	AssignmentExpression	exc -> GS . gep2 = ( FT_UShort ) args [ 0 ]		10596098	0		=			
ANR	10596150	MemberAccess	exc -> GS . gep2		10596098	0					
ANR	10596151	PtrMemberAccess	exc -> GS		10596098	0					
ANR	10596152	Identifier	exc		10596098	0					
ANR	10596153	Identifier	GS		10596098	1					
ANR	10596154	Identifier	gep2		10596098	1					
ANR	10596155	CastExpression	( FT_UShort ) args [ 0 ]		10596098	1					
ANR	10596156	CastTarget	FT_UShort		10596098	0					
ANR	10596157	ArrayIndexing	args [ 0 ]		10596098	1					
ANR	10596158	Identifier	args		10596098	0					
ANR	10596159	PrimaryExpression	0		10596098	1					
ANR	10596160	ReturnType	static void		10596098	1					
ANR	10596161	Identifier	Ins_SZP2		10596098	2					
ANR	10596162	ParameterList	"TT_ExecContext exc , FT_Long * args"		10596098	3					
ANR	10596163	Parameter	TT_ExecContext exc	5055:12:182488:182506	10596098	0	True				
ANR	10596164	ParameterType	TT_ExecContext		10596098	0					
ANR	10596165	Identifier	exc		10596098	1					
ANR	10596166	Parameter	FT_Long * args	5056:12:182521:182540	10596098	1	True				
ANR	10596167	ParameterType	FT_Long *		10596098	0					
ANR	10596168	Identifier	args		10596098	1					
ANR	10596169	CFGEntryNode	ENTRY		10596098		True				
ANR	10596170	CFGExitNode	EXIT		10596098		True				
ANR	10596171	Symbol	* exc		10596098						
ANR	10596172	Symbol	exc -> pedantic_hinting		10596098						
ANR	10596173	Symbol	exc -> GS . gep2		10596098						
ANR	10596174	Symbol	exc -> GS		10596098						
ANR	10596175	Symbol	FT_THROW		10596098						
ANR	10596176	Symbol	* args		10596098						
ANR	10596177	Symbol	args		10596098						
ANR	10596178	Symbol	exc -> zp2		10596098						
ANR	10596179	Symbol	exc		10596098						
ANR	10596180	Symbol	Invalid_Reference		10596098						
ANR	10596181	Symbol	exc -> error		10596098						
ANR	10596182	Symbol	exc -> pts		10596098						
ANR	10596183	Symbol	exc -> twilight		10596098						
ANR	10596184	Function	Ins_SZPS	5084:2:183332:183855							
ANR	10596185	FunctionDef	"Ins_SZPS (TT_ExecContext exc , FT_Long * args)"		10596184	0					
ANR	10596186	CompoundStatement		5087:2:183414:183855	10596184	0					
ANR	10596187	SwitchStatement	switch ( ( FT_Int ) args [ 0 ] )		10596184	0					
ANR	10596188	Condition	( FT_Int ) args [ 0 ]	5088:13:183429:183443	10596184	0	True				
ANR	10596189	CastExpression	( FT_Int ) args [ 0 ]		10596184	0					
ANR	10596190	CastTarget	FT_Int		10596184	0					
ANR	10596191	ArrayIndexing	args [ 0 ]		10596184	1					
ANR	10596192	Identifier	args		10596184	0					
ANR	10596193	PrimaryExpression	0		10596184	1					
ANR	10596194	CompoundStatement		3:4:36:36	10596184	1					
ANR	10596195	Label	case 0 :	5090:4:183457:183463	10596184	0	True				
ANR	10596196	ExpressionStatement	exc -> zp0 = exc -> twilight	5091:6:183471:183495	10596184	1	True				
ANR	10596197	AssignmentExpression	exc -> zp0 = exc -> twilight		10596184	0		=			
ANR	10596198	PtrMemberAccess	exc -> zp0		10596184	0					
ANR	10596199	Identifier	exc		10596184	0					
ANR	10596200	Identifier	zp0		10596184	1					
ANR	10596201	PtrMemberAccess	exc -> twilight		10596184	1					
ANR	10596202	Identifier	exc		10596184	0					
ANR	10596203	Identifier	twilight		10596184	1					
ANR	10596204	BreakStatement	break ;	5092:6:183503:183508	10596184	2	True				
ANR	10596205	Label	case 1 :	5094:4:183515:183521	10596184	3	True				
ANR	10596206	ExpressionStatement	exc -> zp0 = exc -> pts	5095:6:183529:183548	10596184	4	True				
ANR	10596207	AssignmentExpression	exc -> zp0 = exc -> pts		10596184	0		=			
ANR	10596208	PtrMemberAccess	exc -> zp0		10596184	0					
ANR	10596209	Identifier	exc		10596184	0					
ANR	10596210	Identifier	zp0		10596184	1					
ANR	10596211	PtrMemberAccess	exc -> pts		10596184	1					
ANR	10596212	Identifier	exc		10596184	0					
ANR	10596213	Identifier	pts		10596184	1					
ANR	10596214	BreakStatement	break ;	5096:6:183556:183561	10596184	5	True				
ANR	10596215	Label	default :	5098:4:183568:183575	10596184	6	True				
ANR	10596216	Identifier	default		10596184	0					
ANR	10596217	IfStatement	if ( exc -> pedantic_hinting )		10596184	7					
ANR	10596218	Condition	exc -> pedantic_hinting	5099:11:183588:183608	10596184	0	True				
ANR	10596219	PtrMemberAccess	exc -> pedantic_hinting		10596184	0					
ANR	10596220	Identifier	exc		10596184	0					
ANR	10596221	Identifier	pedantic_hinting		10596184	1					
ANR	10596222	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	5100:8:183620:183662	10596184	1	True				
ANR	10596223	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10596184	0		=			
ANR	10596224	PtrMemberAccess	exc -> error		10596184	0					
ANR	10596225	Identifier	exc		10596184	0					
ANR	10596226	Identifier	error		10596184	1					
ANR	10596227	CallExpression	FT_THROW ( Invalid_Reference )		10596184	1					
ANR	10596228	Callee	FT_THROW		10596184	0					
ANR	10596229	Identifier	FT_THROW		10596184	0					
ANR	10596230	ArgumentList	Invalid_Reference		10596184	1					
ANR	10596231	Argument	Invalid_Reference		10596184	0					
ANR	10596232	Identifier	Invalid_Reference		10596184	0					
ANR	10596233	ReturnStatement	return ;	5101:6:183670:183676	10596184	8	True				
ANR	10596234	ExpressionStatement	exc -> zp1 = exc -> zp0	5104:4:183689:183708	10596184	1	True				
ANR	10596235	AssignmentExpression	exc -> zp1 = exc -> zp0		10596184	0		=			
ANR	10596236	PtrMemberAccess	exc -> zp1		10596184	0					
ANR	10596237	Identifier	exc		10596184	0					
ANR	10596238	Identifier	zp1		10596184	1					
ANR	10596239	PtrMemberAccess	exc -> zp0		10596184	1					
ANR	10596240	Identifier	exc		10596184	0					
ANR	10596241	Identifier	zp0		10596184	1					
ANR	10596242	ExpressionStatement	exc -> zp2 = exc -> zp0	5105:4:183714:183733	10596184	2	True				
ANR	10596243	AssignmentExpression	exc -> zp2 = exc -> zp0		10596184	0		=			
ANR	10596244	PtrMemberAccess	exc -> zp2		10596184	0					
ANR	10596245	Identifier	exc		10596184	0					
ANR	10596246	Identifier	zp2		10596184	1					
ANR	10596247	PtrMemberAccess	exc -> zp0		10596184	1					
ANR	10596248	Identifier	exc		10596184	0					
ANR	10596249	Identifier	zp0		10596184	1					
ANR	10596250	ExpressionStatement	exc -> GS . gep0 = ( FT_UShort ) args [ 0 ]	5107:4:183740:183773	10596184	3	True				
ANR	10596251	AssignmentExpression	exc -> GS . gep0 = ( FT_UShort ) args [ 0 ]		10596184	0		=			
ANR	10596252	MemberAccess	exc -> GS . gep0		10596184	0					
ANR	10596253	PtrMemberAccess	exc -> GS		10596184	0					
ANR	10596254	Identifier	exc		10596184	0					
ANR	10596255	Identifier	GS		10596184	1					
ANR	10596256	Identifier	gep0		10596184	1					
ANR	10596257	CastExpression	( FT_UShort ) args [ 0 ]		10596184	1					
ANR	10596258	CastTarget	FT_UShort		10596184	0					
ANR	10596259	ArrayIndexing	args [ 0 ]		10596184	1					
ANR	10596260	Identifier	args		10596184	0					
ANR	10596261	PrimaryExpression	0		10596184	1					
ANR	10596262	ExpressionStatement	exc -> GS . gep1 = ( FT_UShort ) args [ 0 ]	5108:4:183779:183812	10596184	4	True				
ANR	10596263	AssignmentExpression	exc -> GS . gep1 = ( FT_UShort ) args [ 0 ]		10596184	0		=			
ANR	10596264	MemberAccess	exc -> GS . gep1		10596184	0					
ANR	10596265	PtrMemberAccess	exc -> GS		10596184	0					
ANR	10596266	Identifier	exc		10596184	0					
ANR	10596267	Identifier	GS		10596184	1					
ANR	10596268	Identifier	gep1		10596184	1					
ANR	10596269	CastExpression	( FT_UShort ) args [ 0 ]		10596184	1					
ANR	10596270	CastTarget	FT_UShort		10596184	0					
ANR	10596271	ArrayIndexing	args [ 0 ]		10596184	1					
ANR	10596272	Identifier	args		10596184	0					
ANR	10596273	PrimaryExpression	0		10596184	1					
ANR	10596274	ExpressionStatement	exc -> GS . gep2 = ( FT_UShort ) args [ 0 ]	5109:4:183818:183851	10596184	5	True				
ANR	10596275	AssignmentExpression	exc -> GS . gep2 = ( FT_UShort ) args [ 0 ]		10596184	0		=			
ANR	10596276	MemberAccess	exc -> GS . gep2		10596184	0					
ANR	10596277	PtrMemberAccess	exc -> GS		10596184	0					
ANR	10596278	Identifier	exc		10596184	0					
ANR	10596279	Identifier	GS		10596184	1					
ANR	10596280	Identifier	gep2		10596184	1					
ANR	10596281	CastExpression	( FT_UShort ) args [ 0 ]		10596184	1					
ANR	10596282	CastTarget	FT_UShort		10596184	0					
ANR	10596283	ArrayIndexing	args [ 0 ]		10596184	1					
ANR	10596284	Identifier	args		10596184	0					
ANR	10596285	PrimaryExpression	0		10596184	1					
ANR	10596286	ReturnType	static void		10596184	1					
ANR	10596287	Identifier	Ins_SZPS		10596184	2					
ANR	10596288	ParameterList	"TT_ExecContext exc , FT_Long * args"		10596184	3					
ANR	10596289	Parameter	TT_ExecContext exc	5085:12:183356:183374	10596184	0	True				
ANR	10596290	ParameterType	TT_ExecContext		10596184	0					
ANR	10596291	Identifier	exc		10596184	1					
ANR	10596292	Parameter	FT_Long * args	5086:12:183389:183408	10596184	1	True				
ANR	10596293	ParameterType	FT_Long *		10596184	0					
ANR	10596294	Identifier	args		10596184	1					
ANR	10596295	CFGEntryNode	ENTRY		10596184		True				
ANR	10596296	CFGExitNode	EXIT		10596184		True				
ANR	10596297	Symbol	* exc		10596184						
ANR	10596298	Symbol	exc -> pedantic_hinting		10596184						
ANR	10596299	Symbol	exc -> GS . gep0		10596184						
ANR	10596300	Symbol	exc -> GS . gep2		10596184						
ANR	10596301	Symbol	exc -> GS . gep1		10596184						
ANR	10596302	Symbol	exc -> GS		10596184						
ANR	10596303	Symbol	FT_THROW		10596184						
ANR	10596304	Symbol	* args		10596184						
ANR	10596305	Symbol	args		10596184						
ANR	10596306	Symbol	exc -> zp2		10596184						
ANR	10596307	Symbol	exc		10596184						
ANR	10596308	Symbol	exc -> zp1		10596184						
ANR	10596309	Symbol	Invalid_Reference		10596184						
ANR	10596310	Symbol	exc -> zp0		10596184						
ANR	10596311	Symbol	exc -> error		10596184						
ANR	10596312	Symbol	exc -> pts		10596184						
ANR	10596313	Symbol	exc -> twilight		10596184						
ANR	10596314	Function	Ins_INSTCTRL	5119:2:184329:185818							
ANR	10596315	FunctionDef	"Ins_INSTCTRL (TT_ExecContext exc , FT_Long * args)"		10596314	0					
ANR	10596316	CompoundStatement		5122:2:184419:185818	10596314	0					
ANR	10596317	IdentifierDeclStatement	"FT_ULong K , L , Kf ;"	5123:4:184425:184443	10596314	0	True				
ANR	10596318	IdentifierDecl	K		10596314	0					
ANR	10596319	IdentifierDeclType	FT_ULong		10596314	0					
ANR	10596320	Identifier	K		10596314	1					
ANR	10596321	IdentifierDecl	L		10596314	1					
ANR	10596322	IdentifierDeclType	FT_ULong		10596314	0					
ANR	10596323	Identifier	L		10596314	1					
ANR	10596324	IdentifierDecl	Kf		10596314	2					
ANR	10596325	IdentifierDeclType	FT_ULong		10596314	0					
ANR	10596326	Identifier	Kf		10596314	1					
ANR	10596327	ExpressionStatement	K = ( FT_ULong ) args [ 1 ]	5126:4:184451:184472	10596314	1	True				
ANR	10596328	AssignmentExpression	K = ( FT_ULong ) args [ 1 ]		10596314	0		=			
ANR	10596329	Identifier	K		10596314	0					
ANR	10596330	CastExpression	( FT_ULong ) args [ 1 ]		10596314	1					
ANR	10596331	CastTarget	FT_ULong		10596314	0					
ANR	10596332	ArrayIndexing	args [ 1 ]		10596314	1					
ANR	10596333	Identifier	args		10596314	0					
ANR	10596334	PrimaryExpression	1		10596314	1					
ANR	10596335	ExpressionStatement	L = ( FT_ULong ) args [ 0 ]	5127:4:184478:184499	10596314	2	True				
ANR	10596336	AssignmentExpression	L = ( FT_ULong ) args [ 0 ]		10596314	0		=			
ANR	10596337	Identifier	L		10596314	0					
ANR	10596338	CastExpression	( FT_ULong ) args [ 0 ]		10596314	1					
ANR	10596339	CastTarget	FT_ULong		10596314	0					
ANR	10596340	ArrayIndexing	args [ 0 ]		10596314	1					
ANR	10596341	Identifier	args		10596314	0					
ANR	10596342	PrimaryExpression	0		10596314	1					
ANR	10596343	IfStatement	if ( K < 1 || K > 3 )		10596314	3					
ANR	10596344	Condition	K < 1 || K > 3	5131:9:184631:184644	10596314	0	True				
ANR	10596345	OrExpression	K < 1 || K > 3		10596314	0		||			
ANR	10596346	RelationalExpression	K < 1		10596314	0		<			
ANR	10596347	Identifier	K		10596314	0					
ANR	10596348	PrimaryExpression	1		10596314	1					
ANR	10596349	RelationalExpression	K > 3		10596314	1		>			
ANR	10596350	Identifier	K		10596314	0					
ANR	10596351	PrimaryExpression	3		10596314	1					
ANR	10596352	CompoundStatement		11:4:232:232	10596314	1					
ANR	10596353	IfStatement	if ( exc -> pedantic_hinting )		10596314	0					
ANR	10596354	Condition	exc -> pedantic_hinting	5133:11:184665:184685	10596314	0	True				
ANR	10596355	PtrMemberAccess	exc -> pedantic_hinting		10596314	0					
ANR	10596356	Identifier	exc		10596314	0					
ANR	10596357	Identifier	pedantic_hinting		10596314	1					
ANR	10596358	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	5134:8:184697:184739	10596314	1	True				
ANR	10596359	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10596314	0		=			
ANR	10596360	PtrMemberAccess	exc -> error		10596314	0					
ANR	10596361	Identifier	exc		10596314	0					
ANR	10596362	Identifier	error		10596314	1					
ANR	10596363	CallExpression	FT_THROW ( Invalid_Reference )		10596314	1					
ANR	10596364	Callee	FT_THROW		10596314	0					
ANR	10596365	Identifier	FT_THROW		10596314	0					
ANR	10596366	ArgumentList	Invalid_Reference		10596314	1					
ANR	10596367	Argument	Invalid_Reference		10596314	0					
ANR	10596368	Identifier	Invalid_Reference		10596314	0					
ANR	10596369	ReturnStatement	return ;	5135:6:184747:184753	10596314	1	True				
ANR	10596370	ExpressionStatement	Kf = 1 << ( K - 1 )	5139:4:184804:184823	10596314	4	True				
ANR	10596371	AssignmentExpression	Kf = 1 << ( K - 1 )		10596314	0		=			
ANR	10596372	Identifier	Kf		10596314	0					
ANR	10596373	ShiftExpression	1 << ( K - 1 )		10596314	1		<<			
ANR	10596374	PrimaryExpression	1		10596314	0					
ANR	10596375	AdditiveExpression	K - 1		10596314	1		-			
ANR	10596376	Identifier	K		10596314	0					
ANR	10596377	PrimaryExpression	1		10596314	1					
ANR	10596378	IfStatement	if ( L != 0 )		10596314	5					
ANR	10596379	Condition	L != 0	5141:9:184835:184840	10596314	0	True				
ANR	10596380	EqualityExpression	L != 0		10596314	0		!=			
ANR	10596381	Identifier	L		10596314	0					
ANR	10596382	PrimaryExpression	0		10596314	1					
ANR	10596383	CompoundStatement		21:4:428:428	10596314	1					
ANR	10596384	IfStatement	if ( L != Kf )		10596314	0					
ANR	10596385	Condition	L != Kf	5144:11:184918:184924	10596314	0	True				
ANR	10596386	EqualityExpression	L != Kf		10596314	0		!=			
ANR	10596387	Identifier	L		10596314	0					
ANR	10596388	Identifier	Kf		10596314	1					
ANR	10596389	CompoundStatement		24:6:514:514	10596314	1					
ANR	10596390	IfStatement	if ( exc -> pedantic_hinting )		10596314	0					
ANR	10596391	Condition	exc -> pedantic_hinting	5146:13:184949:184969	10596314	0	True				
ANR	10596392	PtrMemberAccess	exc -> pedantic_hinting		10596314	0					
ANR	10596393	Identifier	exc		10596314	0					
ANR	10596394	Identifier	pedantic_hinting		10596314	1					
ANR	10596395	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	5147:10:184983:185025	10596314	1	True				
ANR	10596396	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10596314	0		=			
ANR	10596397	PtrMemberAccess	exc -> error		10596314	0					
ANR	10596398	Identifier	exc		10596314	0					
ANR	10596399	Identifier	error		10596314	1					
ANR	10596400	CallExpression	FT_THROW ( Invalid_Reference )		10596314	1					
ANR	10596401	Callee	FT_THROW		10596314	0					
ANR	10596402	Identifier	FT_THROW		10596314	0					
ANR	10596403	ArgumentList	Invalid_Reference		10596314	1					
ANR	10596404	Argument	Invalid_Reference		10596314	0					
ANR	10596405	Identifier	Invalid_Reference		10596314	0					
ANR	10596406	ReturnStatement	return ;	5148:8:185035:185041	10596314	1	True				
ANR	10596407	ExpressionStatement	exc -> GS . instruct_control &= ~ ( FT_Byte ) Kf	5152:4:185062:185102	10596314	6	True				
ANR	10596408	AssignmentExpression	exc -> GS . instruct_control &= ~ ( FT_Byte ) Kf		10596314	0		&=			
ANR	10596409	MemberAccess	exc -> GS . instruct_control		10596314	0					
ANR	10596410	PtrMemberAccess	exc -> GS		10596314	0					
ANR	10596411	Identifier	exc		10596314	0					
ANR	10596412	Identifier	GS		10596314	1					
ANR	10596413	Identifier	instruct_control		10596314	1					
ANR	10596414	UnaryOperationExpression	~ ( FT_Byte ) Kf		10596314	1					
ANR	10596415	UnaryOperator	~		10596314	0					
ANR	10596416	CastExpression	( FT_Byte ) Kf		10596314	1					
ANR	10596417	CastTarget	FT_Byte		10596314	0					
ANR	10596418	Identifier	Kf		10596314	1					
ANR	10596419	ExpressionStatement	exc -> GS . instruct_control |= ( FT_Byte ) L	5153:4:185108:185146	10596314	7	True				
ANR	10596420	AssignmentExpression	exc -> GS . instruct_control |= ( FT_Byte ) L		10596314	0		|=			
ANR	10596421	MemberAccess	exc -> GS . instruct_control		10596314	0					
ANR	10596422	PtrMemberAccess	exc -> GS		10596314	0					
ANR	10596423	Identifier	exc		10596314	0					
ANR	10596424	Identifier	GS		10596314	1					
ANR	10596425	Identifier	instruct_control		10596314	1					
ANR	10596426	CastExpression	( FT_Byte ) L		10596314	1					
ANR	10596427	CastTarget	FT_Byte		10596314	0					
ANR	10596428	Identifier	L		10596314	1					
ANR	10596429	IfStatement	if ( K == 3 )		10596314	8					
ANR	10596430	Condition	K == 3	5155:9:185158:185163	10596314	0	True				
ANR	10596431	EqualityExpression	K == 3		10596314	0		==			
ANR	10596432	Identifier	K		10596314	0					
ANR	10596433	PrimaryExpression	3		10596314	1					
ANR	10596434	CompoundStatement		35:4:751:751	10596314	1					
ANR	10596435	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY )		10596314	0					
ANR	10596436	Condition	SUBPIXEL_HINTING_INFINALITY	5160:11:185344:185370	10596314	0	True				
ANR	10596437	Identifier	SUBPIXEL_HINTING_INFINALITY		10596314	0					
ANR	10596438	ExpressionStatement	exc -> ignore_x_mode = FT_BOOL ( L == 4 )	5161:8:185382:185420	10596314	1	True				
ANR	10596439	AssignmentExpression	exc -> ignore_x_mode = FT_BOOL ( L == 4 )		10596314	0		=			
ANR	10596440	PtrMemberAccess	exc -> ignore_x_mode		10596314	0					
ANR	10596441	Identifier	exc		10596314	0					
ANR	10596442	Identifier	ignore_x_mode		10596314	1					
ANR	10596443	CallExpression	FT_BOOL ( L == 4 )		10596314	1					
ANR	10596444	Callee	FT_BOOL		10596314	0					
ANR	10596445	Identifier	FT_BOOL		10596314	0					
ANR	10596446	ArgumentList	L == 4		10596314	1					
ANR	10596447	Argument	L == 4		10596314	0					
ANR	10596448	EqualityExpression	L == 4		10596314	0		==			
ANR	10596449	Identifier	L		10596314	0					
ANR	10596450	PrimaryExpression	4		10596314	1					
ANR	10596451	IfStatement	if ( SUBPIXEL_HINTING_MINIMAL )		10596314	1					
ANR	10596452	Condition	SUBPIXEL_HINTING_MINIMAL	5168:11:185718:185741	10596314	0	True				
ANR	10596453	Identifier	SUBPIXEL_HINTING_MINIMAL		10596314	0					
ANR	10596454	ExpressionStatement	exc -> backward_compatibility = ! FT_BOOL ( L == 4 )	5169:8:185753:185801	10596314	1	True				
ANR	10596455	AssignmentExpression	exc -> backward_compatibility = ! FT_BOOL ( L == 4 )		10596314	0		=			
ANR	10596456	PtrMemberAccess	exc -> backward_compatibility		10596314	0					
ANR	10596457	Identifier	exc		10596314	0					
ANR	10596458	Identifier	backward_compatibility		10596314	1					
ANR	10596459	UnaryOperationExpression	! FT_BOOL ( L == 4 )		10596314	1					
ANR	10596460	UnaryOperator	!		10596314	0					
ANR	10596461	CallExpression	FT_BOOL ( L == 4 )		10596314	1					
ANR	10596462	Callee	FT_BOOL		10596314	0					
ANR	10596463	Identifier	FT_BOOL		10596314	0					
ANR	10596464	ArgumentList	L == 4		10596314	1					
ANR	10596465	Argument	L == 4		10596314	0					
ANR	10596466	EqualityExpression	L == 4		10596314	0		==			
ANR	10596467	Identifier	L		10596314	0					
ANR	10596468	PrimaryExpression	4		10596314	1					
ANR	10596469	ReturnType	static void		10596314	1					
ANR	10596470	Identifier	Ins_INSTCTRL		10596314	2					
ANR	10596471	ParameterList	"TT_ExecContext exc , FT_Long * args"		10596314	3					
ANR	10596472	Parameter	TT_ExecContext exc	5120:16:184357:184375	10596314	0	True				
ANR	10596473	ParameterType	TT_ExecContext		10596314	0					
ANR	10596474	Identifier	exc		10596314	1					
ANR	10596475	Parameter	FT_Long * args	5121:16:184394:184413	10596314	1	True				
ANR	10596476	ParameterType	FT_Long *		10596314	0					
ANR	10596477	Identifier	args		10596314	1					
ANR	10596478	CFGEntryNode	ENTRY		10596314		True				
ANR	10596479	CFGExitNode	EXIT		10596314		True				
ANR	10596480	Symbol	SUBPIXEL_HINTING_MINIMAL		10596314						
ANR	10596481	Symbol	exc -> GS . instruct_control		10596314						
ANR	10596482	Symbol	* exc		10596314						
ANR	10596483	Symbol	exc -> pedantic_hinting		10596314						
ANR	10596484	Symbol	K		10596314						
ANR	10596485	Symbol	L		10596314						
ANR	10596486	Symbol	exc -> GS		10596314						
ANR	10596487	Symbol	FT_THROW		10596314						
ANR	10596488	Symbol	* args		10596314						
ANR	10596489	Symbol	exc -> backward_compatibility		10596314						
ANR	10596490	Symbol	args		10596314						
ANR	10596491	Symbol	SUBPIXEL_HINTING_INFINALITY		10596314						
ANR	10596492	Symbol	exc		10596314						
ANR	10596493	Symbol	Invalid_Reference		10596314						
ANR	10596494	Symbol	Kf		10596314						
ANR	10596495	Symbol	exc -> error		10596314						
ANR	10596496	Symbol	exc -> ignore_x_mode		10596314						
ANR	10596497	Symbol	FT_BOOL		10596314						
ANR	10596498	Function	Ins_SCANCTRL	5181:2:186292:187237							
ANR	10596499	FunctionDef	"Ins_SCANCTRL (TT_ExecContext exc , FT_Long * args)"		10596498	0					
ANR	10596500	CompoundStatement		5184:2:186382:187237	10596498	0					
ANR	10596501	IdentifierDeclStatement	FT_Int A ;	5185:4:186388:186397	10596498	0	True				
ANR	10596502	IdentifierDecl	A		10596498	0					
ANR	10596503	IdentifierDeclType	FT_Int		10596498	0					
ANR	10596504	Identifier	A		10596498	1					
ANR	10596505	ExpressionStatement	A = ( FT_Int ) ( args [ 0 ] & 0xFF )	5189:4:186429:186459	10596498	1	True				
ANR	10596506	AssignmentExpression	A = ( FT_Int ) ( args [ 0 ] & 0xFF )		10596498	0		=			
ANR	10596507	Identifier	A		10596498	0					
ANR	10596508	CastExpression	( FT_Int ) ( args [ 0 ] & 0xFF )		10596498	1					
ANR	10596509	CastTarget	FT_Int		10596498	0					
ANR	10596510	BitAndExpression	args [ 0 ] & 0xFF		10596498	1		&			
ANR	10596511	ArrayIndexing	args [ 0 ]		10596498	0					
ANR	10596512	Identifier	args		10596498	0					
ANR	10596513	PrimaryExpression	0		10596498	1					
ANR	10596514	PrimaryExpression	0xFF		10596498	1					
ANR	10596515	IfStatement	if ( A == 0xFF )		10596498	2					
ANR	10596516	Condition	A == 0xFF	5191:9:186471:186479	10596498	0	True				
ANR	10596517	EqualityExpression	A == 0xFF		10596498	0		==			
ANR	10596518	Identifier	A		10596498	0					
ANR	10596519	PrimaryExpression	0xFF		10596498	1					
ANR	10596520	CompoundStatement		9:4:104:104	10596498	1					
ANR	10596521	ExpressionStatement	exc -> GS . scan_control = TRUE	5193:6:186495:186522	10596498	0	True				
ANR	10596522	AssignmentExpression	exc -> GS . scan_control = TRUE		10596498	0		=			
ANR	10596523	MemberAccess	exc -> GS . scan_control		10596498	0					
ANR	10596524	PtrMemberAccess	exc -> GS		10596498	0					
ANR	10596525	Identifier	exc		10596498	0					
ANR	10596526	Identifier	GS		10596498	1					
ANR	10596527	Identifier	scan_control		10596498	1					
ANR	10596528	Identifier	TRUE		10596498	1					
ANR	10596529	ReturnStatement	return ;	5194:6:186530:186536	10596498	1	True				
ANR	10596530	ElseStatement	else		10596498	0					
ANR	10596531	IfStatement	if ( A == 0 )		10596498	0					
ANR	10596532	Condition	A == 0	5196:14:186558:186563	10596498	0	True				
ANR	10596533	EqualityExpression	A == 0		10596498	0		==			
ANR	10596534	Identifier	A		10596498	0					
ANR	10596535	PrimaryExpression	0		10596498	1					
ANR	10596536	CompoundStatement		14:4:188:188	10596498	1					
ANR	10596537	ExpressionStatement	exc -> GS . scan_control = FALSE	5198:6:186579:186607	10596498	0	True				
ANR	10596538	AssignmentExpression	exc -> GS . scan_control = FALSE		10596498	0		=			
ANR	10596539	MemberAccess	exc -> GS . scan_control		10596498	0					
ANR	10596540	PtrMemberAccess	exc -> GS		10596498	0					
ANR	10596541	Identifier	exc		10596498	0					
ANR	10596542	Identifier	GS		10596498	1					
ANR	10596543	Identifier	scan_control		10596498	1					
ANR	10596544	Identifier	FALSE		10596498	1					
ANR	10596545	ReturnStatement	return ;	5199:6:186615:186621	10596498	1	True				
ANR	10596546	IfStatement	if ( ( args [ 0 ] & 0x100 ) != 0 && exc -> tt_metrics . ppem <= A )		10596498	3					
ANR	10596547	Condition	( args [ 0 ] & 0x100 ) != 0 && exc -> tt_metrics . ppem <= A	5202:9:186639:186691	10596498	0	True				
ANR	10596548	AndExpression	( args [ 0 ] & 0x100 ) != 0 && exc -> tt_metrics . ppem <= A		10596498	0		&&			
ANR	10596549	EqualityExpression	( args [ 0 ] & 0x100 ) != 0		10596498	0		!=			
ANR	10596550	BitAndExpression	args [ 0 ] & 0x100		10596498	0		&			
ANR	10596551	ArrayIndexing	args [ 0 ]		10596498	0					
ANR	10596552	Identifier	args		10596498	0					
ANR	10596553	PrimaryExpression	0		10596498	1					
ANR	10596554	PrimaryExpression	0x100		10596498	1					
ANR	10596555	PrimaryExpression	0		10596498	1					
ANR	10596556	RelationalExpression	exc -> tt_metrics . ppem <= A		10596498	1		<=			
ANR	10596557	MemberAccess	exc -> tt_metrics . ppem		10596498	0					
ANR	10596558	PtrMemberAccess	exc -> tt_metrics		10596498	0					
ANR	10596559	Identifier	exc		10596498	0					
ANR	10596560	Identifier	tt_metrics		10596498	1					
ANR	10596561	Identifier	ppem		10596498	1					
ANR	10596562	Identifier	A		10596498	1					
ANR	10596563	ExpressionStatement	exc -> GS . scan_control = TRUE	5203:6:186701:186728	10596498	1	True				
ANR	10596564	AssignmentExpression	exc -> GS . scan_control = TRUE		10596498	0		=			
ANR	10596565	MemberAccess	exc -> GS . scan_control		10596498	0					
ANR	10596566	PtrMemberAccess	exc -> GS		10596498	0					
ANR	10596567	Identifier	exc		10596498	0					
ANR	10596568	Identifier	GS		10596498	1					
ANR	10596569	Identifier	scan_control		10596498	1					
ANR	10596570	Identifier	TRUE		10596498	1					
ANR	10596571	IfStatement	if ( ( args [ 0 ] & 0x200 ) != 0 && exc -> tt_metrics . rotated )		10596498	4					
ANR	10596572	Condition	( args [ 0 ] & 0x200 ) != 0 && exc -> tt_metrics . rotated	5205:9:186740:186790	10596498	0	True				
ANR	10596573	AndExpression	( args [ 0 ] & 0x200 ) != 0 && exc -> tt_metrics . rotated		10596498	0		&&			
ANR	10596574	EqualityExpression	( args [ 0 ] & 0x200 ) != 0		10596498	0		!=			
ANR	10596575	BitAndExpression	args [ 0 ] & 0x200		10596498	0		&			
ANR	10596576	ArrayIndexing	args [ 0 ]		10596498	0					
ANR	10596577	Identifier	args		10596498	0					
ANR	10596578	PrimaryExpression	0		10596498	1					
ANR	10596579	PrimaryExpression	0x200		10596498	1					
ANR	10596580	PrimaryExpression	0		10596498	1					
ANR	10596581	MemberAccess	exc -> tt_metrics . rotated		10596498	1					
ANR	10596582	PtrMemberAccess	exc -> tt_metrics		10596498	0					
ANR	10596583	Identifier	exc		10596498	0					
ANR	10596584	Identifier	tt_metrics		10596498	1					
ANR	10596585	Identifier	rotated		10596498	1					
ANR	10596586	ExpressionStatement	exc -> GS . scan_control = TRUE	5206:6:186800:186827	10596498	1	True				
ANR	10596587	AssignmentExpression	exc -> GS . scan_control = TRUE		10596498	0		=			
ANR	10596588	MemberAccess	exc -> GS . scan_control		10596498	0					
ANR	10596589	PtrMemberAccess	exc -> GS		10596498	0					
ANR	10596590	Identifier	exc		10596498	0					
ANR	10596591	Identifier	GS		10596498	1					
ANR	10596592	Identifier	scan_control		10596498	1					
ANR	10596593	Identifier	TRUE		10596498	1					
ANR	10596594	IfStatement	if ( ( args [ 0 ] & 0x400 ) != 0 && exc -> tt_metrics . stretched )		10596498	5					
ANR	10596595	Condition	( args [ 0 ] & 0x400 ) != 0 && exc -> tt_metrics . stretched	5208:9:186839:186891	10596498	0	True				
ANR	10596596	AndExpression	( args [ 0 ] & 0x400 ) != 0 && exc -> tt_metrics . stretched		10596498	0		&&			
ANR	10596597	EqualityExpression	( args [ 0 ] & 0x400 ) != 0		10596498	0		!=			
ANR	10596598	BitAndExpression	args [ 0 ] & 0x400		10596498	0		&			
ANR	10596599	ArrayIndexing	args [ 0 ]		10596498	0					
ANR	10596600	Identifier	args		10596498	0					
ANR	10596601	PrimaryExpression	0		10596498	1					
ANR	10596602	PrimaryExpression	0x400		10596498	1					
ANR	10596603	PrimaryExpression	0		10596498	1					
ANR	10596604	MemberAccess	exc -> tt_metrics . stretched		10596498	1					
ANR	10596605	PtrMemberAccess	exc -> tt_metrics		10596498	0					
ANR	10596606	Identifier	exc		10596498	0					
ANR	10596607	Identifier	tt_metrics		10596498	1					
ANR	10596608	Identifier	stretched		10596498	1					
ANR	10596609	ExpressionStatement	exc -> GS . scan_control = TRUE	5209:6:186901:186928	10596498	1	True				
ANR	10596610	AssignmentExpression	exc -> GS . scan_control = TRUE		10596498	0		=			
ANR	10596611	MemberAccess	exc -> GS . scan_control		10596498	0					
ANR	10596612	PtrMemberAccess	exc -> GS		10596498	0					
ANR	10596613	Identifier	exc		10596498	0					
ANR	10596614	Identifier	GS		10596498	1					
ANR	10596615	Identifier	scan_control		10596498	1					
ANR	10596616	Identifier	TRUE		10596498	1					
ANR	10596617	IfStatement	if ( ( args [ 0 ] & 0x800 ) != 0 && exc -> tt_metrics . ppem > A )		10596498	6					
ANR	10596618	Condition	( args [ 0 ] & 0x800 ) != 0 && exc -> tt_metrics . ppem > A	5211:9:186940:186991	10596498	0	True				
ANR	10596619	AndExpression	( args [ 0 ] & 0x800 ) != 0 && exc -> tt_metrics . ppem > A		10596498	0		&&			
ANR	10596620	EqualityExpression	( args [ 0 ] & 0x800 ) != 0		10596498	0		!=			
ANR	10596621	BitAndExpression	args [ 0 ] & 0x800		10596498	0		&			
ANR	10596622	ArrayIndexing	args [ 0 ]		10596498	0					
ANR	10596623	Identifier	args		10596498	0					
ANR	10596624	PrimaryExpression	0		10596498	1					
ANR	10596625	PrimaryExpression	0x800		10596498	1					
ANR	10596626	PrimaryExpression	0		10596498	1					
ANR	10596627	RelationalExpression	exc -> tt_metrics . ppem > A		10596498	1		>			
ANR	10596628	MemberAccess	exc -> tt_metrics . ppem		10596498	0					
ANR	10596629	PtrMemberAccess	exc -> tt_metrics		10596498	0					
ANR	10596630	Identifier	exc		10596498	0					
ANR	10596631	Identifier	tt_metrics		10596498	1					
ANR	10596632	Identifier	ppem		10596498	1					
ANR	10596633	Identifier	A		10596498	1					
ANR	10596634	ExpressionStatement	exc -> GS . scan_control = FALSE	5212:6:187001:187029	10596498	1	True				
ANR	10596635	AssignmentExpression	exc -> GS . scan_control = FALSE		10596498	0		=			
ANR	10596636	MemberAccess	exc -> GS . scan_control		10596498	0					
ANR	10596637	PtrMemberAccess	exc -> GS		10596498	0					
ANR	10596638	Identifier	exc		10596498	0					
ANR	10596639	Identifier	GS		10596498	1					
ANR	10596640	Identifier	scan_control		10596498	1					
ANR	10596641	Identifier	FALSE		10596498	1					
ANR	10596642	IfStatement	if ( ( args [ 0 ] & 0x1000 ) != 0 && exc -> tt_metrics . rotated )		10596498	7					
ANR	10596643	Condition	( args [ 0 ] & 0x1000 ) != 0 && exc -> tt_metrics . rotated	5214:9:187041:187092	10596498	0	True				
ANR	10596644	AndExpression	( args [ 0 ] & 0x1000 ) != 0 && exc -> tt_metrics . rotated		10596498	0		&&			
ANR	10596645	EqualityExpression	( args [ 0 ] & 0x1000 ) != 0		10596498	0		!=			
ANR	10596646	BitAndExpression	args [ 0 ] & 0x1000		10596498	0		&			
ANR	10596647	ArrayIndexing	args [ 0 ]		10596498	0					
ANR	10596648	Identifier	args		10596498	0					
ANR	10596649	PrimaryExpression	0		10596498	1					
ANR	10596650	PrimaryExpression	0x1000		10596498	1					
ANR	10596651	PrimaryExpression	0		10596498	1					
ANR	10596652	MemberAccess	exc -> tt_metrics . rotated		10596498	1					
ANR	10596653	PtrMemberAccess	exc -> tt_metrics		10596498	0					
ANR	10596654	Identifier	exc		10596498	0					
ANR	10596655	Identifier	tt_metrics		10596498	1					
ANR	10596656	Identifier	rotated		10596498	1					
ANR	10596657	ExpressionStatement	exc -> GS . scan_control = FALSE	5215:6:187102:187130	10596498	1	True				
ANR	10596658	AssignmentExpression	exc -> GS . scan_control = FALSE		10596498	0		=			
ANR	10596659	MemberAccess	exc -> GS . scan_control		10596498	0					
ANR	10596660	PtrMemberAccess	exc -> GS		10596498	0					
ANR	10596661	Identifier	exc		10596498	0					
ANR	10596662	Identifier	GS		10596498	1					
ANR	10596663	Identifier	scan_control		10596498	1					
ANR	10596664	Identifier	FALSE		10596498	1					
ANR	10596665	IfStatement	if ( ( args [ 0 ] & 0x2000 ) != 0 && exc -> tt_metrics . stretched )		10596498	8					
ANR	10596666	Condition	( args [ 0 ] & 0x2000 ) != 0 && exc -> tt_metrics . stretched	5217:9:187142:187195	10596498	0	True				
ANR	10596667	AndExpression	( args [ 0 ] & 0x2000 ) != 0 && exc -> tt_metrics . stretched		10596498	0		&&			
ANR	10596668	EqualityExpression	( args [ 0 ] & 0x2000 ) != 0		10596498	0		!=			
ANR	10596669	BitAndExpression	args [ 0 ] & 0x2000		10596498	0		&			
ANR	10596670	ArrayIndexing	args [ 0 ]		10596498	0					
ANR	10596671	Identifier	args		10596498	0					
ANR	10596672	PrimaryExpression	0		10596498	1					
ANR	10596673	PrimaryExpression	0x2000		10596498	1					
ANR	10596674	PrimaryExpression	0		10596498	1					
ANR	10596675	MemberAccess	exc -> tt_metrics . stretched		10596498	1					
ANR	10596676	PtrMemberAccess	exc -> tt_metrics		10596498	0					
ANR	10596677	Identifier	exc		10596498	0					
ANR	10596678	Identifier	tt_metrics		10596498	1					
ANR	10596679	Identifier	stretched		10596498	1					
ANR	10596680	ExpressionStatement	exc -> GS . scan_control = FALSE	5218:6:187205:187233	10596498	1	True				
ANR	10596681	AssignmentExpression	exc -> GS . scan_control = FALSE		10596498	0		=			
ANR	10596682	MemberAccess	exc -> GS . scan_control		10596498	0					
ANR	10596683	PtrMemberAccess	exc -> GS		10596498	0					
ANR	10596684	Identifier	exc		10596498	0					
ANR	10596685	Identifier	GS		10596498	1					
ANR	10596686	Identifier	scan_control		10596498	1					
ANR	10596687	Identifier	FALSE		10596498	1					
ANR	10596688	ReturnType	static void		10596498	1					
ANR	10596689	Identifier	Ins_SCANCTRL		10596498	2					
ANR	10596690	ParameterList	"TT_ExecContext exc , FT_Long * args"		10596498	3					
ANR	10596691	Parameter	TT_ExecContext exc	5182:16:186320:186338	10596498	0	True				
ANR	10596692	ParameterType	TT_ExecContext		10596498	0					
ANR	10596693	Identifier	exc		10596498	1					
ANR	10596694	Parameter	FT_Long * args	5183:16:186357:186376	10596498	1	True				
ANR	10596695	ParameterType	FT_Long *		10596498	0					
ANR	10596696	Identifier	args		10596498	1					
ANR	10596697	CFGEntryNode	ENTRY		10596498		True				
ANR	10596698	CFGExitNode	EXIT		10596498		True				
ANR	10596699	Symbol	A		10596498						
ANR	10596700	Symbol	exc -> tt_metrics . ppem		10596498						
ANR	10596701	Symbol	* exc		10596498						
ANR	10596702	Symbol	exc -> tt_metrics . rotated		10596498						
ANR	10596703	Symbol	TRUE		10596498						
ANR	10596704	Symbol	exc -> GS		10596498						
ANR	10596705	Symbol	exc -> tt_metrics		10596498						
ANR	10596706	Symbol	* args		10596498						
ANR	10596707	Symbol	args		10596498						
ANR	10596708	Symbol	exc -> tt_metrics . stretched		10596498						
ANR	10596709	Symbol	exc		10596498						
ANR	10596710	Symbol	exc -> GS . scan_control		10596498						
ANR	10596711	Symbol	FALSE		10596498						
ANR	10596712	Function	Ins_SCANTYPE	5228:2:187711:187881							
ANR	10596713	FunctionDef	"Ins_SCANTYPE (TT_ExecContext exc , FT_Long * args)"		10596712	0					
ANR	10596714	CompoundStatement		5231:2:187801:187881	10596712	0					
ANR	10596715	IfStatement	if ( args [ 0 ] >= 0 )		10596712	0					
ANR	10596716	Condition	args [ 0 ] >= 0	5232:9:187812:187823	10596712	0	True				
ANR	10596717	RelationalExpression	args [ 0 ] >= 0		10596712	0		>=			
ANR	10596718	ArrayIndexing	args [ 0 ]		10596712	0					
ANR	10596719	Identifier	args		10596712	0					
ANR	10596720	PrimaryExpression	0		10596712	1					
ANR	10596721	PrimaryExpression	0		10596712	1					
ANR	10596722	ExpressionStatement	exc -> GS . scan_type = ( FT_Int ) args [ 0 ] & 0xFFFF	5233:6:187833:187877	10596712	1	True				
ANR	10596723	AssignmentExpression	exc -> GS . scan_type = ( FT_Int ) args [ 0 ] & 0xFFFF		10596712	0		=			
ANR	10596724	MemberAccess	exc -> GS . scan_type		10596712	0					
ANR	10596725	PtrMemberAccess	exc -> GS		10596712	0					
ANR	10596726	Identifier	exc		10596712	0					
ANR	10596727	Identifier	GS		10596712	1					
ANR	10596728	Identifier	scan_type		10596712	1					
ANR	10596729	BitAndExpression	( FT_Int ) args [ 0 ] & 0xFFFF		10596712	1		&			
ANR	10596730	CastExpression	( FT_Int ) args [ 0 ]		10596712	0					
ANR	10596731	CastTarget	FT_Int		10596712	0					
ANR	10596732	ArrayIndexing	args [ 0 ]		10596712	1					
ANR	10596733	Identifier	args		10596712	0					
ANR	10596734	PrimaryExpression	0		10596712	1					
ANR	10596735	PrimaryExpression	0xFFFF		10596712	1					
ANR	10596736	ReturnType	static void		10596712	1					
ANR	10596737	Identifier	Ins_SCANTYPE		10596712	2					
ANR	10596738	ParameterList	"TT_ExecContext exc , FT_Long * args"		10596712	3					
ANR	10596739	Parameter	TT_ExecContext exc	5229:16:187739:187757	10596712	0	True				
ANR	10596740	ParameterType	TT_ExecContext		10596712	0					
ANR	10596741	Identifier	exc		10596712	1					
ANR	10596742	Parameter	FT_Long * args	5230:16:187776:187795	10596712	1	True				
ANR	10596743	ParameterType	FT_Long *		10596712	0					
ANR	10596744	Identifier	args		10596712	1					
ANR	10596745	CFGEntryNode	ENTRY		10596712		True				
ANR	10596746	CFGExitNode	EXIT		10596712		True				
ANR	10596747	Symbol	args		10596712						
ANR	10596748	Symbol	exc		10596712						
ANR	10596749	Symbol	exc -> GS . scan_type		10596712						
ANR	10596750	Symbol	* exc		10596712						
ANR	10596751	Symbol	exc -> GS		10596712						
ANR	10596752	Symbol	* args		10596712						
ANR	10596753	Function	Ins_FLIPPT	5250:2:188747:189724							
ANR	10596754	FunctionDef	Ins_FLIPPT (TT_ExecContext exc)		10596753	0					
ANR	10596755	CompoundStatement		5252:2:188797:189724	10596753	0					
ANR	10596756	IdentifierDeclStatement	FT_UShort point ;	5253:4:188803:188819	10596753	0	True				
ANR	10596757	IdentifierDecl	point		10596753	0					
ANR	10596758	IdentifierDeclType	FT_UShort		10596753	0					
ANR	10596759	Identifier	point		10596753	1					
ANR	10596760	IfStatement	if ( SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility && exc -> iupx_called && exc -> iupy_called )		10596753	1					
ANR	10596761	Condition	SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility && exc -> iupx_called && exc -> iupy_called	5258:9:188946:189081	10596753	0	True				
ANR	10596762	AndExpression	SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility && exc -> iupx_called && exc -> iupy_called		10596753	0		&&			
ANR	10596763	Identifier	SUBPIXEL_HINTING_MINIMAL		10596753	0					
ANR	10596764	AndExpression	exc -> backward_compatibility && exc -> iupx_called && exc -> iupy_called		10596753	1		&&			
ANR	10596765	PtrMemberAccess	exc -> backward_compatibility		10596753	0					
ANR	10596766	Identifier	exc		10596753	0					
ANR	10596767	Identifier	backward_compatibility		10596753	1					
ANR	10596768	AndExpression	exc -> iupx_called && exc -> iupy_called		10596753	1		&&			
ANR	10596769	PtrMemberAccess	exc -> iupx_called		10596753	0					
ANR	10596770	Identifier	exc		10596753	0					
ANR	10596771	Identifier	iupx_called		10596753	1					
ANR	10596772	PtrMemberAccess	exc -> iupy_called		10596753	1					
ANR	10596773	Identifier	exc		10596753	0					
ANR	10596774	Identifier	iupy_called		10596753	1					
ANR	10596775	GotoStatement	goto Fail ;	5262:6:189102:189111	10596753	1	True				
ANR	10596776	Identifier	Fail		10596753	0					
ANR	10596777	IfStatement	if ( exc -> top < exc -> GS . loop )		10596753	2					
ANR	10596778	Condition	exc -> top < exc -> GS . loop	5265:9:189130:189152	10596753	0	True				
ANR	10596779	RelationalExpression	exc -> top < exc -> GS . loop		10596753	0		<			
ANR	10596780	PtrMemberAccess	exc -> top		10596753	0					
ANR	10596781	Identifier	exc		10596753	0					
ANR	10596782	Identifier	top		10596753	1					
ANR	10596783	MemberAccess	exc -> GS . loop		10596753	1					
ANR	10596784	PtrMemberAccess	exc -> GS		10596753	0					
ANR	10596785	Identifier	exc		10596753	0					
ANR	10596786	Identifier	GS		10596753	1					
ANR	10596787	Identifier	loop		10596753	1					
ANR	10596788	CompoundStatement		15:4:362:362	10596753	1					
ANR	10596789	IfStatement	if ( exc -> pedantic_hinting )		10596753	0					
ANR	10596790	Condition	exc -> pedantic_hinting	5267:11:189173:189193	10596753	0	True				
ANR	10596791	PtrMemberAccess	exc -> pedantic_hinting		10596753	0					
ANR	10596792	Identifier	exc		10596753	0					
ANR	10596793	Identifier	pedantic_hinting		10596753	1					
ANR	10596794	ExpressionStatement	exc -> error = FT_THROW ( Too_Few_Arguments )	5268:8:189205:189247	10596753	1	True				
ANR	10596795	AssignmentExpression	exc -> error = FT_THROW ( Too_Few_Arguments )		10596753	0		=			
ANR	10596796	PtrMemberAccess	exc -> error		10596753	0					
ANR	10596797	Identifier	exc		10596753	0					
ANR	10596798	Identifier	error		10596753	1					
ANR	10596799	CallExpression	FT_THROW ( Too_Few_Arguments )		10596753	1					
ANR	10596800	Callee	FT_THROW		10596753	0					
ANR	10596801	Identifier	FT_THROW		10596753	0					
ANR	10596802	ArgumentList	Too_Few_Arguments		10596753	1					
ANR	10596803	Argument	Too_Few_Arguments		10596753	0					
ANR	10596804	Identifier	Too_Few_Arguments		10596753	0					
ANR	10596805	GotoStatement	goto Fail ;	5269:6:189255:189264	10596753	1	True				
ANR	10596806	Identifier	Fail		10596753	0					
ANR	10596807	WhileStatement	while ( exc -> GS . loop > 0 )		10596753	3					
ANR	10596808	Condition	exc -> GS . loop > 0	5272:12:189285:189300	10596753	0	True				
ANR	10596809	RelationalExpression	exc -> GS . loop > 0		10596753	0		>			
ANR	10596810	MemberAccess	exc -> GS . loop		10596753	0					
ANR	10596811	PtrMemberAccess	exc -> GS		10596753	0					
ANR	10596812	Identifier	exc		10596753	0					
ANR	10596813	Identifier	GS		10596753	1					
ANR	10596814	Identifier	loop		10596753	1					
ANR	10596815	PrimaryExpression	0		10596753	1					
ANR	10596816	CompoundStatement		22:4:510:510	10596753	1					
ANR	10596817	ExpressionStatement	exc -> args --	5274:6:189316:189327	10596753	0	True				
ANR	10596818	PostIncDecOperationExpression	exc -> args --		10596753	0					
ANR	10596819	PtrMemberAccess	exc -> args		10596753	0					
ANR	10596820	Identifier	exc		10596753	0					
ANR	10596821	Identifier	args		10596753	1					
ANR	10596822	IncDec	--		10596753	1					
ANR	10596823	ExpressionStatement	point = ( FT_UShort ) exc -> stack [ exc -> args ]	5276:6:189336:189376	10596753	1	True				
ANR	10596824	AssignmentExpression	point = ( FT_UShort ) exc -> stack [ exc -> args ]		10596753	0		=			
ANR	10596825	Identifier	point		10596753	0					
ANR	10596826	CastExpression	( FT_UShort ) exc -> stack [ exc -> args ]		10596753	1					
ANR	10596827	CastTarget	FT_UShort		10596753	0					
ANR	10596828	ArrayIndexing	exc -> stack [ exc -> args ]		10596753	1					
ANR	10596829	PtrMemberAccess	exc -> stack		10596753	0					
ANR	10596830	Identifier	exc		10596753	0					
ANR	10596831	Identifier	stack		10596753	1					
ANR	10596832	PtrMemberAccess	exc -> args		10596753	1					
ANR	10596833	Identifier	exc		10596753	0					
ANR	10596834	Identifier	args		10596753	1					
ANR	10596835	IfStatement	"if ( BOUNDS ( point , exc -> pts . n_points ) )"		10596753	2					
ANR	10596836	Condition	"BOUNDS ( point , exc -> pts . n_points )"	5278:11:189390:189423	10596753	0	True				
ANR	10596837	CallExpression	"BOUNDS ( point , exc -> pts . n_points )"		10596753	0					
ANR	10596838	Callee	BOUNDS		10596753	0					
ANR	10596839	Identifier	BOUNDS		10596753	0					
ANR	10596840	ArgumentList	point		10596753	1					
ANR	10596841	Argument	point		10596753	0					
ANR	10596842	Identifier	point		10596753	0					
ANR	10596843	Argument	exc -> pts . n_points		10596753	1					
ANR	10596844	MemberAccess	exc -> pts . n_points		10596753	0					
ANR	10596845	PtrMemberAccess	exc -> pts		10596753	0					
ANR	10596846	Identifier	exc		10596753	0					
ANR	10596847	Identifier	pts		10596753	1					
ANR	10596848	Identifier	n_points		10596753	1					
ANR	10596849	CompoundStatement		28:6:635:635	10596753	1					
ANR	10596850	IfStatement	if ( exc -> pedantic_hinting )		10596753	0					
ANR	10596851	Condition	exc -> pedantic_hinting	5280:13:189448:189468	10596753	0	True				
ANR	10596852	PtrMemberAccess	exc -> pedantic_hinting		10596753	0					
ANR	10596853	Identifier	exc		10596753	0					
ANR	10596854	Identifier	pedantic_hinting		10596753	1					
ANR	10596855	CompoundStatement		30:8:682:682	10596753	1					
ANR	10596856	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	5282:10:189492:189534	10596753	0	True				
ANR	10596857	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10596753	0		=			
ANR	10596858	PtrMemberAccess	exc -> error		10596753	0					
ANR	10596859	Identifier	exc		10596753	0					
ANR	10596860	Identifier	error		10596753	1					
ANR	10596861	CallExpression	FT_THROW ( Invalid_Reference )		10596753	1					
ANR	10596862	Callee	FT_THROW		10596753	0					
ANR	10596863	Identifier	FT_THROW		10596753	0					
ANR	10596864	ArgumentList	Invalid_Reference		10596753	1					
ANR	10596865	Argument	Invalid_Reference		10596753	0					
ANR	10596866	Identifier	Invalid_Reference		10596753	0					
ANR	10596867	ReturnStatement	return ;	5283:10:189546:189552	10596753	1	True				
ANR	10596868	ElseStatement	else		10596753	0					
ANR	10596869	ExpressionStatement	exc -> pts . tags [ point ] ^= FT_CURVE_TAG_ON	5287:8:189591:189630	10596753	0	True				
ANR	10596870	AssignmentExpression	exc -> pts . tags [ point ] ^= FT_CURVE_TAG_ON		10596753	0		^=			
ANR	10596871	ArrayIndexing	exc -> pts . tags [ point ]		10596753	0					
ANR	10596872	MemberAccess	exc -> pts . tags		10596753	0					
ANR	10596873	PtrMemberAccess	exc -> pts		10596753	0					
ANR	10596874	Identifier	exc		10596753	0					
ANR	10596875	Identifier	pts		10596753	1					
ANR	10596876	Identifier	tags		10596753	1					
ANR	10596877	Identifier	point		10596753	1					
ANR	10596878	Identifier	FT_CURVE_TAG_ON		10596753	1					
ANR	10596879	ExpressionStatement	exc -> GS . loop --	5289:6:189639:189653	10596753	3	True				
ANR	10596880	PostIncDecOperationExpression	exc -> GS . loop --		10596753	0					
ANR	10596881	MemberAccess	exc -> GS . loop		10596753	0					
ANR	10596882	PtrMemberAccess	exc -> GS		10596753	0					
ANR	10596883	Identifier	exc		10596753	0					
ANR	10596884	Identifier	GS		10596753	1					
ANR	10596885	Identifier	loop		10596753	1					
ANR	10596886	IncDec	--		10596753	1					
ANR	10596887	Label	Fail :	5292:2:189664:189668	10596753	4	True				
ANR	10596888	Identifier	Fail		10596753	0					
ANR	10596889	ExpressionStatement	exc -> GS . loop = 1	5293:4:189674:189690	10596753	5	True				
ANR	10596890	AssignmentExpression	exc -> GS . loop = 1		10596753	0		=			
ANR	10596891	MemberAccess	exc -> GS . loop		10596753	0					
ANR	10596892	PtrMemberAccess	exc -> GS		10596753	0					
ANR	10596893	Identifier	exc		10596753	0					
ANR	10596894	Identifier	GS		10596753	1					
ANR	10596895	Identifier	loop		10596753	1					
ANR	10596896	PrimaryExpression	1		10596753	1					
ANR	10596897	ExpressionStatement	exc -> new_top = exc -> args	5294:4:189696:189720	10596753	6	True				
ANR	10596898	AssignmentExpression	exc -> new_top = exc -> args		10596753	0		=			
ANR	10596899	PtrMemberAccess	exc -> new_top		10596753	0					
ANR	10596900	Identifier	exc		10596753	0					
ANR	10596901	Identifier	new_top		10596753	1					
ANR	10596902	PtrMemberAccess	exc -> args		10596753	1					
ANR	10596903	Identifier	exc		10596753	0					
ANR	10596904	Identifier	args		10596753	1					
ANR	10596905	ReturnType	static void		10596753	1					
ANR	10596906	Identifier	Ins_FLIPPT		10596753	2					
ANR	10596907	ParameterList	TT_ExecContext exc		10596753	3					
ANR	10596908	Parameter	TT_ExecContext exc	5251:14:188773:188791	10596753	0	True				
ANR	10596909	ParameterType	TT_ExecContext		10596753	0					
ANR	10596910	Identifier	exc		10596753	1					
ANR	10596911	CFGEntryNode	ENTRY		10596753		True				
ANR	10596912	CFGExitNode	EXIT		10596753		True				
ANR	10596913	Symbol	SUBPIXEL_HINTING_MINIMAL		10596753						
ANR	10596914	Symbol	exc -> new_top		10596753						
ANR	10596915	Symbol	* exc		10596753						
ANR	10596916	Symbol	FT_CURVE_TAG_ON		10596753						
ANR	10596917	Symbol	* exc -> args		10596753						
ANR	10596918	Symbol	exc -> pts . n_points		10596753						
ANR	10596919	Symbol	point		10596753						
ANR	10596920	Symbol	exc		10596753						
ANR	10596921	Symbol	exc -> stack		10596753						
ANR	10596922	Symbol	Invalid_Reference		10596753						
ANR	10596923	Symbol	BOUNDS		10596753						
ANR	10596924	Symbol	exc -> top		10596753						
ANR	10596925	Symbol	exc -> error		10596753						
ANR	10596926	Symbol	* exc -> stack		10596753						
ANR	10596927	Symbol	Too_Few_Arguments		10596753						
ANR	10596928	Symbol	* * exc		10596753						
ANR	10596929	Symbol	exc -> args		10596753						
ANR	10596930	Symbol	* point		10596753						
ANR	10596931	Symbol	exc -> pedantic_hinting		10596753						
ANR	10596932	Symbol	exc -> GS		10596753						
ANR	10596933	Symbol	FT_THROW		10596753						
ANR	10596934	Symbol	* exc -> pts		10596753						
ANR	10596935	Symbol	exc -> backward_compatibility		10596753						
ANR	10596936	Symbol	* exc -> pts . tags		10596753						
ANR	10596937	Symbol	exc -> GS . loop		10596753						
ANR	10596938	Symbol	exc -> pts		10596753						
ANR	10596939	Symbol	exc -> pts . tags		10596753						
ANR	10596940	Symbol	exc -> iupy_called		10596753						
ANR	10596941	Symbol	exc -> iupx_called		10596753						
ANR	10596942	Function	Ins_FLIPRGON	5304:2:190198:190943							
ANR	10596943	FunctionDef	"Ins_FLIPRGON (TT_ExecContext exc , FT_Long * args)"		10596942	0					
ANR	10596944	CompoundStatement		5307:2:190288:190943	10596942	0					
ANR	10596945	IdentifierDeclStatement	"FT_UShort I , K , L ;"	5308:4:190294:190312	10596942	0	True				
ANR	10596946	IdentifierDecl	I		10596942	0					
ANR	10596947	IdentifierDeclType	FT_UShort		10596942	0					
ANR	10596948	Identifier	I		10596942	1					
ANR	10596949	IdentifierDecl	K		10596942	1					
ANR	10596950	IdentifierDeclType	FT_UShort		10596942	0					
ANR	10596951	Identifier	K		10596942	1					
ANR	10596952	IdentifierDecl	L		10596942	2					
ANR	10596953	IdentifierDeclType	FT_UShort		10596942	0					
ANR	10596954	Identifier	L		10596942	1					
ANR	10596955	IfStatement	if ( SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility && exc -> iupx_called && exc -> iupy_called )		10596942	1					
ANR	10596956	Condition	SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility && exc -> iupx_called && exc -> iupy_called	5313:9:190439:190574	10596942	0	True				
ANR	10596957	AndExpression	SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility && exc -> iupx_called && exc -> iupy_called		10596942	0		&&			
ANR	10596958	Identifier	SUBPIXEL_HINTING_MINIMAL		10596942	0					
ANR	10596959	AndExpression	exc -> backward_compatibility && exc -> iupx_called && exc -> iupy_called		10596942	1		&&			
ANR	10596960	PtrMemberAccess	exc -> backward_compatibility		10596942	0					
ANR	10596961	Identifier	exc		10596942	0					
ANR	10596962	Identifier	backward_compatibility		10596942	1					
ANR	10596963	AndExpression	exc -> iupx_called && exc -> iupy_called		10596942	1		&&			
ANR	10596964	PtrMemberAccess	exc -> iupx_called		10596942	0					
ANR	10596965	Identifier	exc		10596942	0					
ANR	10596966	Identifier	iupx_called		10596942	1					
ANR	10596967	PtrMemberAccess	exc -> iupy_called		10596942	1					
ANR	10596968	Identifier	exc		10596942	0					
ANR	10596969	Identifier	iupy_called		10596942	1					
ANR	10596970	ReturnStatement	return ;	5317:6:190595:190601	10596942	1	True				
ANR	10596971	ExpressionStatement	K = ( FT_UShort ) args [ 1 ]	5320:4:190615:190637	10596942	2	True				
ANR	10596972	AssignmentExpression	K = ( FT_UShort ) args [ 1 ]		10596942	0		=			
ANR	10596973	Identifier	K		10596942	0					
ANR	10596974	CastExpression	( FT_UShort ) args [ 1 ]		10596942	1					
ANR	10596975	CastTarget	FT_UShort		10596942	0					
ANR	10596976	ArrayIndexing	args [ 1 ]		10596942	1					
ANR	10596977	Identifier	args		10596942	0					
ANR	10596978	PrimaryExpression	1		10596942	1					
ANR	10596979	ExpressionStatement	L = ( FT_UShort ) args [ 0 ]	5321:4:190643:190665	10596942	3	True				
ANR	10596980	AssignmentExpression	L = ( FT_UShort ) args [ 0 ]		10596942	0		=			
ANR	10596981	Identifier	L		10596942	0					
ANR	10596982	CastExpression	( FT_UShort ) args [ 0 ]		10596942	1					
ANR	10596983	CastTarget	FT_UShort		10596942	0					
ANR	10596984	ArrayIndexing	args [ 0 ]		10596942	1					
ANR	10596985	Identifier	args		10596942	0					
ANR	10596986	PrimaryExpression	0		10596942	1					
ANR	10596987	IfStatement	"if ( BOUNDS ( K , exc -> pts . n_points ) || BOUNDS ( L , exc -> pts . n_points ) )"		10596942	4					
ANR	10596988	Condition	"BOUNDS ( K , exc -> pts . n_points ) || BOUNDS ( L , exc -> pts . n_points )"	5323:9:190677:190749	10596942	0	True				
ANR	10596989	OrExpression	"BOUNDS ( K , exc -> pts . n_points ) || BOUNDS ( L , exc -> pts . n_points )"		10596942	0		||			
ANR	10596990	CallExpression	"BOUNDS ( K , exc -> pts . n_points )"		10596942	0					
ANR	10596991	Callee	BOUNDS		10596942	0					
ANR	10596992	Identifier	BOUNDS		10596942	0					
ANR	10596993	ArgumentList	K		10596942	1					
ANR	10596994	Argument	K		10596942	0					
ANR	10596995	Identifier	K		10596942	0					
ANR	10596996	Argument	exc -> pts . n_points		10596942	1					
ANR	10596997	MemberAccess	exc -> pts . n_points		10596942	0					
ANR	10596998	PtrMemberAccess	exc -> pts		10596942	0					
ANR	10596999	Identifier	exc		10596942	0					
ANR	10597000	Identifier	pts		10596942	1					
ANR	10597001	Identifier	n_points		10596942	1					
ANR	10597002	CallExpression	"BOUNDS ( L , exc -> pts . n_points )"		10596942	1					
ANR	10597003	Callee	BOUNDS		10596942	0					
ANR	10597004	Identifier	BOUNDS		10596942	0					
ANR	10597005	ArgumentList	L		10596942	1					
ANR	10597006	Argument	L		10596942	0					
ANR	10597007	Identifier	L		10596942	0					
ANR	10597008	Argument	exc -> pts . n_points		10596942	1					
ANR	10597009	MemberAccess	exc -> pts . n_points		10596942	0					
ANR	10597010	PtrMemberAccess	exc -> pts		10596942	0					
ANR	10597011	Identifier	exc		10596942	0					
ANR	10597012	Identifier	pts		10596942	1					
ANR	10597013	Identifier	n_points		10596942	1					
ANR	10597014	CompoundStatement		19:4:468:468	10596942	1					
ANR	10597015	IfStatement	if ( exc -> pedantic_hinting )		10596942	0					
ANR	10597016	Condition	exc -> pedantic_hinting	5326:11:190770:190790	10596942	0	True				
ANR	10597017	PtrMemberAccess	exc -> pedantic_hinting		10596942	0					
ANR	10597018	Identifier	exc		10596942	0					
ANR	10597019	Identifier	pedantic_hinting		10596942	1					
ANR	10597020	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	5327:8:190802:190844	10596942	1	True				
ANR	10597021	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10596942	0		=			
ANR	10597022	PtrMemberAccess	exc -> error		10596942	0					
ANR	10597023	Identifier	exc		10596942	0					
ANR	10597024	Identifier	error		10596942	1					
ANR	10597025	CallExpression	FT_THROW ( Invalid_Reference )		10596942	1					
ANR	10597026	Callee	FT_THROW		10596942	0					
ANR	10597027	Identifier	FT_THROW		10596942	0					
ANR	10597028	ArgumentList	Invalid_Reference		10596942	1					
ANR	10597029	Argument	Invalid_Reference		10596942	0					
ANR	10597030	Identifier	Invalid_Reference		10596942	0					
ANR	10597031	ReturnStatement	return ;	5328:6:190852:190858	10596942	1	True				
ANR	10597032	ForStatement	for ( I = L ; I <= K ; I ++ )		10596942	5					
ANR	10597033	ForInit	I = L ;	5331:10:190877:190882	10596942	0	True				
ANR	10597034	AssignmentExpression	I = L		10596942	0		=			
ANR	10597035	Identifier	I		10596942	0					
ANR	10597036	Identifier	L		10596942	1					
ANR	10597037	Condition	I <= K	5331:17:190884:190889	10596942	1	True				
ANR	10597038	RelationalExpression	I <= K		10596942	0		<=			
ANR	10597039	Identifier	I		10596942	0					
ANR	10597040	Identifier	K		10596942	1					
ANR	10597041	PostIncDecOperationExpression	I ++	5331:25:190892:190894	10596942	2	True				
ANR	10597042	Identifier	I		10596942	0					
ANR	10597043	IncDec	++		10596942	1					
ANR	10597044	ExpressionStatement	exc -> pts . tags [ I ] |= FT_CURVE_TAG_ON	5332:6:190904:190939	10596942	3	True				
ANR	10597045	AssignmentExpression	exc -> pts . tags [ I ] |= FT_CURVE_TAG_ON		10596942	0		|=			
ANR	10597046	ArrayIndexing	exc -> pts . tags [ I ]		10596942	0					
ANR	10597047	MemberAccess	exc -> pts . tags		10596942	0					
ANR	10597048	PtrMemberAccess	exc -> pts		10596942	0					
ANR	10597049	Identifier	exc		10596942	0					
ANR	10597050	Identifier	pts		10596942	1					
ANR	10597051	Identifier	tags		10596942	1					
ANR	10597052	Identifier	I		10596942	1					
ANR	10597053	Identifier	FT_CURVE_TAG_ON		10596942	1					
ANR	10597054	ReturnType	static void		10596942	1					
ANR	10597055	Identifier	Ins_FLIPRGON		10596942	2					
ANR	10597056	ParameterList	"TT_ExecContext exc , FT_Long * args"		10596942	3					
ANR	10597057	Parameter	TT_ExecContext exc	5305:16:190226:190244	10596942	0	True				
ANR	10597058	ParameterType	TT_ExecContext		10596942	0					
ANR	10597059	Identifier	exc		10596942	1					
ANR	10597060	Parameter	FT_Long * args	5306:16:190263:190282	10596942	1	True				
ANR	10597061	ParameterType	FT_Long *		10596942	0					
ANR	10597062	Identifier	args		10596942	1					
ANR	10597063	CFGEntryNode	ENTRY		10596942		True				
ANR	10597064	CFGExitNode	EXIT		10596942		True				
ANR	10597065	Symbol	SUBPIXEL_HINTING_MINIMAL		10596942						
ANR	10597066	Symbol	* * exc		10596942						
ANR	10597067	Symbol	* exc		10596942						
ANR	10597068	Symbol	FT_CURVE_TAG_ON		10596942						
ANR	10597069	Symbol	exc -> pedantic_hinting		10596942						
ANR	10597070	Symbol	I		10596942						
ANR	10597071	Symbol	K		10596942						
ANR	10597072	Symbol	L		10596942						
ANR	10597073	Symbol	exc -> pts . n_points		10596942						
ANR	10597074	Symbol	FT_THROW		10596942						
ANR	10597075	Symbol	* exc -> pts		10596942						
ANR	10597076	Symbol	exc -> backward_compatibility		10596942						
ANR	10597077	Symbol	* args		10596942						
ANR	10597078	Symbol	args		10596942						
ANR	10597079	Symbol	exc		10596942						
ANR	10597080	Symbol	Invalid_Reference		10596942						
ANR	10597081	Symbol	* exc -> pts . tags		10596942						
ANR	10597082	Symbol	* I		10596942						
ANR	10597083	Symbol	BOUNDS		10596942						
ANR	10597084	Symbol	exc -> error		10596942						
ANR	10597085	Symbol	exc -> pts		10596942						
ANR	10597086	Symbol	exc -> pts . tags		10596942						
ANR	10597087	Symbol	exc -> iupy_called		10596942						
ANR	10597088	Symbol	exc -> iupx_called		10596942						
ANR	10597089	Function	Ins_FLIPRGOFF	5342:2:191417:192165							
ANR	10597090	FunctionDef	"Ins_FLIPRGOFF (TT_ExecContext exc , FT_Long * args)"		10597089	0					
ANR	10597091	CompoundStatement		5345:2:191509:192165	10597089	0					
ANR	10597092	IdentifierDeclStatement	"FT_UShort I , K , L ;"	5346:4:191515:191533	10597089	0	True				
ANR	10597093	IdentifierDecl	I		10597089	0					
ANR	10597094	IdentifierDeclType	FT_UShort		10597089	0					
ANR	10597095	Identifier	I		10597089	1					
ANR	10597096	IdentifierDecl	K		10597089	1					
ANR	10597097	IdentifierDeclType	FT_UShort		10597089	0					
ANR	10597098	Identifier	K		10597089	1					
ANR	10597099	IdentifierDecl	L		10597089	2					
ANR	10597100	IdentifierDeclType	FT_UShort		10597089	0					
ANR	10597101	Identifier	L		10597089	1					
ANR	10597102	IfStatement	if ( SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility && exc -> iupx_called && exc -> iupy_called )		10597089	1					
ANR	10597103	Condition	SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility && exc -> iupx_called && exc -> iupy_called	5351:9:191660:191795	10597089	0	True				
ANR	10597104	AndExpression	SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility && exc -> iupx_called && exc -> iupy_called		10597089	0		&&			
ANR	10597105	Identifier	SUBPIXEL_HINTING_MINIMAL		10597089	0					
ANR	10597106	AndExpression	exc -> backward_compatibility && exc -> iupx_called && exc -> iupy_called		10597089	1		&&			
ANR	10597107	PtrMemberAccess	exc -> backward_compatibility		10597089	0					
ANR	10597108	Identifier	exc		10597089	0					
ANR	10597109	Identifier	backward_compatibility		10597089	1					
ANR	10597110	AndExpression	exc -> iupx_called && exc -> iupy_called		10597089	1		&&			
ANR	10597111	PtrMemberAccess	exc -> iupx_called		10597089	0					
ANR	10597112	Identifier	exc		10597089	0					
ANR	10597113	Identifier	iupx_called		10597089	1					
ANR	10597114	PtrMemberAccess	exc -> iupy_called		10597089	1					
ANR	10597115	Identifier	exc		10597089	0					
ANR	10597116	Identifier	iupy_called		10597089	1					
ANR	10597117	ReturnStatement	return ;	5355:6:191816:191822	10597089	1	True				
ANR	10597118	ExpressionStatement	K = ( FT_UShort ) args [ 1 ]	5358:4:191836:191858	10597089	2	True				
ANR	10597119	AssignmentExpression	K = ( FT_UShort ) args [ 1 ]		10597089	0		=			
ANR	10597120	Identifier	K		10597089	0					
ANR	10597121	CastExpression	( FT_UShort ) args [ 1 ]		10597089	1					
ANR	10597122	CastTarget	FT_UShort		10597089	0					
ANR	10597123	ArrayIndexing	args [ 1 ]		10597089	1					
ANR	10597124	Identifier	args		10597089	0					
ANR	10597125	PrimaryExpression	1		10597089	1					
ANR	10597126	ExpressionStatement	L = ( FT_UShort ) args [ 0 ]	5359:4:191864:191886	10597089	3	True				
ANR	10597127	AssignmentExpression	L = ( FT_UShort ) args [ 0 ]		10597089	0		=			
ANR	10597128	Identifier	L		10597089	0					
ANR	10597129	CastExpression	( FT_UShort ) args [ 0 ]		10597089	1					
ANR	10597130	CastTarget	FT_UShort		10597089	0					
ANR	10597131	ArrayIndexing	args [ 0 ]		10597089	1					
ANR	10597132	Identifier	args		10597089	0					
ANR	10597133	PrimaryExpression	0		10597089	1					
ANR	10597134	IfStatement	"if ( BOUNDS ( K , exc -> pts . n_points ) || BOUNDS ( L , exc -> pts . n_points ) )"		10597089	4					
ANR	10597135	Condition	"BOUNDS ( K , exc -> pts . n_points ) || BOUNDS ( L , exc -> pts . n_points )"	5361:9:191898:191970	10597089	0	True				
ANR	10597136	OrExpression	"BOUNDS ( K , exc -> pts . n_points ) || BOUNDS ( L , exc -> pts . n_points )"		10597089	0		||			
ANR	10597137	CallExpression	"BOUNDS ( K , exc -> pts . n_points )"		10597089	0					
ANR	10597138	Callee	BOUNDS		10597089	0					
ANR	10597139	Identifier	BOUNDS		10597089	0					
ANR	10597140	ArgumentList	K		10597089	1					
ANR	10597141	Argument	K		10597089	0					
ANR	10597142	Identifier	K		10597089	0					
ANR	10597143	Argument	exc -> pts . n_points		10597089	1					
ANR	10597144	MemberAccess	exc -> pts . n_points		10597089	0					
ANR	10597145	PtrMemberAccess	exc -> pts		10597089	0					
ANR	10597146	Identifier	exc		10597089	0					
ANR	10597147	Identifier	pts		10597089	1					
ANR	10597148	Identifier	n_points		10597089	1					
ANR	10597149	CallExpression	"BOUNDS ( L , exc -> pts . n_points )"		10597089	1					
ANR	10597150	Callee	BOUNDS		10597089	0					
ANR	10597151	Identifier	BOUNDS		10597089	0					
ANR	10597152	ArgumentList	L		10597089	1					
ANR	10597153	Argument	L		10597089	0					
ANR	10597154	Identifier	L		10597089	0					
ANR	10597155	Argument	exc -> pts . n_points		10597089	1					
ANR	10597156	MemberAccess	exc -> pts . n_points		10597089	0					
ANR	10597157	PtrMemberAccess	exc -> pts		10597089	0					
ANR	10597158	Identifier	exc		10597089	0					
ANR	10597159	Identifier	pts		10597089	1					
ANR	10597160	Identifier	n_points		10597089	1					
ANR	10597161	CompoundStatement		19:4:468:468	10597089	1					
ANR	10597162	IfStatement	if ( exc -> pedantic_hinting )		10597089	0					
ANR	10597163	Condition	exc -> pedantic_hinting	5364:11:191991:192011	10597089	0	True				
ANR	10597164	PtrMemberAccess	exc -> pedantic_hinting		10597089	0					
ANR	10597165	Identifier	exc		10597089	0					
ANR	10597166	Identifier	pedantic_hinting		10597089	1					
ANR	10597167	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	5365:8:192023:192065	10597089	1	True				
ANR	10597168	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10597089	0		=			
ANR	10597169	PtrMemberAccess	exc -> error		10597089	0					
ANR	10597170	Identifier	exc		10597089	0					
ANR	10597171	Identifier	error		10597089	1					
ANR	10597172	CallExpression	FT_THROW ( Invalid_Reference )		10597089	1					
ANR	10597173	Callee	FT_THROW		10597089	0					
ANR	10597174	Identifier	FT_THROW		10597089	0					
ANR	10597175	ArgumentList	Invalid_Reference		10597089	1					
ANR	10597176	Argument	Invalid_Reference		10597089	0					
ANR	10597177	Identifier	Invalid_Reference		10597089	0					
ANR	10597178	ReturnStatement	return ;	5366:6:192073:192079	10597089	1	True				
ANR	10597179	ForStatement	for ( I = L ; I <= K ; I ++ )		10597089	5					
ANR	10597180	ForInit	I = L ;	5369:10:192098:192103	10597089	0	True				
ANR	10597181	AssignmentExpression	I = L		10597089	0		=			
ANR	10597182	Identifier	I		10597089	0					
ANR	10597183	Identifier	L		10597089	1					
ANR	10597184	Condition	I <= K	5369:17:192105:192110	10597089	1	True				
ANR	10597185	RelationalExpression	I <= K		10597089	0		<=			
ANR	10597186	Identifier	I		10597089	0					
ANR	10597187	Identifier	K		10597089	1					
ANR	10597188	PostIncDecOperationExpression	I ++	5369:25:192113:192115	10597089	2	True				
ANR	10597189	Identifier	I		10597089	0					
ANR	10597190	IncDec	++		10597089	1					
ANR	10597191	ExpressionStatement	exc -> pts . tags [ I ] &= ~FT_CURVE_TAG_ON	5370:6:192125:192161	10597089	3	True				
ANR	10597192	AssignmentExpression	exc -> pts . tags [ I ] &= ~FT_CURVE_TAG_ON		10597089	0		&=			
ANR	10597193	ArrayIndexing	exc -> pts . tags [ I ]		10597089	0					
ANR	10597194	MemberAccess	exc -> pts . tags		10597089	0					
ANR	10597195	PtrMemberAccess	exc -> pts		10597089	0					
ANR	10597196	Identifier	exc		10597089	0					
ANR	10597197	Identifier	pts		10597089	1					
ANR	10597198	Identifier	tags		10597089	1					
ANR	10597199	Identifier	I		10597089	1					
ANR	10597200	Identifier	~FT_CURVE_TAG_ON		10597089	1					
ANR	10597201	ReturnType	static void		10597089	1					
ANR	10597202	Identifier	Ins_FLIPRGOFF		10597089	2					
ANR	10597203	ParameterList	"TT_ExecContext exc , FT_Long * args"		10597089	3					
ANR	10597204	Parameter	TT_ExecContext exc	5343:17:191446:191464	10597089	0	True				
ANR	10597205	ParameterType	TT_ExecContext		10597089	0					
ANR	10597206	Identifier	exc		10597089	1					
ANR	10597207	Parameter	FT_Long * args	5344:17:191484:191503	10597089	1	True				
ANR	10597208	ParameterType	FT_Long *		10597089	0					
ANR	10597209	Identifier	args		10597089	1					
ANR	10597210	CFGEntryNode	ENTRY		10597089		True				
ANR	10597211	CFGExitNode	EXIT		10597089		True				
ANR	10597212	Symbol	SUBPIXEL_HINTING_MINIMAL		10597089						
ANR	10597213	Symbol	* * exc		10597089						
ANR	10597214	Symbol	* exc		10597089						
ANR	10597215	Symbol	exc -> pedantic_hinting		10597089						
ANR	10597216	Symbol	I		10597089						
ANR	10597217	Symbol	~FT_CURVE_TAG_ON		10597089						
ANR	10597218	Symbol	K		10597089						
ANR	10597219	Symbol	L		10597089						
ANR	10597220	Symbol	exc -> pts . n_points		10597089						
ANR	10597221	Symbol	FT_THROW		10597089						
ANR	10597222	Symbol	* exc -> pts		10597089						
ANR	10597223	Symbol	exc -> backward_compatibility		10597089						
ANR	10597224	Symbol	* args		10597089						
ANR	10597225	Symbol	args		10597089						
ANR	10597226	Symbol	exc		10597089						
ANR	10597227	Symbol	Invalid_Reference		10597089						
ANR	10597228	Symbol	* exc -> pts . tags		10597089						
ANR	10597229	Symbol	* I		10597089						
ANR	10597230	Symbol	BOUNDS		10597089						
ANR	10597231	Symbol	exc -> error		10597089						
ANR	10597232	Symbol	exc -> pts		10597089						
ANR	10597233	Symbol	exc -> pts . tags		10597089						
ANR	10597234	Symbol	exc -> iupy_called		10597089						
ANR	10597235	Symbol	exc -> iupx_called		10597089						
ANR	10597236	Function	Compute_Point_Displacement	5374:2:192171:193084							
ANR	10597237	FunctionDef	"Compute_Point_Displacement (TT_ExecContext exc , FT_F26Dot6 * x , FT_F26Dot6 * y , TT_GlyphZone zone , FT_UShort * refp)"		10597236	0					
ANR	10597238	CompoundStatement		5380:2:192442:193084	10597236	0					
ANR	10597239	IdentifierDeclStatement	TT_GlyphZoneRec zp ;	5381:4:192448:192467	10597236	0	True				
ANR	10597240	IdentifierDecl	zp		10597236	0					
ANR	10597241	IdentifierDeclType	TT_GlyphZoneRec		10597236	0					
ANR	10597242	Identifier	zp		10597236	1					
ANR	10597243	IdentifierDeclStatement	FT_UShort p ;	5382:4:192473:192491	10597236	1	True				
ANR	10597244	IdentifierDecl	p		10597236	0					
ANR	10597245	IdentifierDeclType	FT_UShort		10597236	0					
ANR	10597246	Identifier	p		10597236	1					
ANR	10597247	IdentifierDeclStatement	FT_F26Dot6 d ;	5383:4:192497:192515	10597236	2	True				
ANR	10597248	IdentifierDecl	d		10597236	0					
ANR	10597249	IdentifierDeclType	FT_F26Dot6		10597236	0					
ANR	10597250	Identifier	d		10597236	1					
ANR	10597251	IfStatement	if ( exc -> opcode & 1 )		10597236	3					
ANR	10597252	Condition	exc -> opcode & 1	5386:9:192528:192542	10597236	0	True				
ANR	10597253	BitAndExpression	exc -> opcode & 1		10597236	0		&			
ANR	10597254	PtrMemberAccess	exc -> opcode		10597236	0					
ANR	10597255	Identifier	exc		10597236	0					
ANR	10597256	Identifier	opcode		10597236	1					
ANR	10597257	PrimaryExpression	1		10597236	1					
ANR	10597258	CompoundStatement		8:4:107:107	10597236	1					
ANR	10597259	ExpressionStatement	zp = exc -> zp0	5388:6:192558:192571	10597236	0	True				
ANR	10597260	AssignmentExpression	zp = exc -> zp0		10597236	0		=			
ANR	10597261	Identifier	zp		10597236	0					
ANR	10597262	PtrMemberAccess	exc -> zp0		10597236	1					
ANR	10597263	Identifier	exc		10597236	0					
ANR	10597264	Identifier	zp0		10597236	1					
ANR	10597265	ExpressionStatement	p = exc -> GS . rp1	5389:6:192579:192595	10597236	1	True				
ANR	10597266	AssignmentExpression	p = exc -> GS . rp1		10597236	0		=			
ANR	10597267	Identifier	p		10597236	0					
ANR	10597268	MemberAccess	exc -> GS . rp1		10597236	1					
ANR	10597269	PtrMemberAccess	exc -> GS		10597236	0					
ANR	10597270	Identifier	exc		10597236	0					
ANR	10597271	Identifier	GS		10597236	1					
ANR	10597272	Identifier	rp1		10597236	1					
ANR	10597273	ElseStatement	else		10597236	0					
ANR	10597274	CompoundStatement		13:4:173:173	10597236	0					
ANR	10597275	ExpressionStatement	zp = exc -> zp1	5393:6:192624:192637	10597236	0	True				
ANR	10597276	AssignmentExpression	zp = exc -> zp1		10597236	0		=			
ANR	10597277	Identifier	zp		10597236	0					
ANR	10597278	PtrMemberAccess	exc -> zp1		10597236	1					
ANR	10597279	Identifier	exc		10597236	0					
ANR	10597280	Identifier	zp1		10597236	1					
ANR	10597281	ExpressionStatement	p = exc -> GS . rp2	5394:6:192645:192661	10597236	1	True				
ANR	10597282	AssignmentExpression	p = exc -> GS . rp2		10597236	0		=			
ANR	10597283	Identifier	p		10597236	0					
ANR	10597284	MemberAccess	exc -> GS . rp2		10597236	1					
ANR	10597285	PtrMemberAccess	exc -> GS		10597236	0					
ANR	10597286	Identifier	exc		10597236	0					
ANR	10597287	Identifier	GS		10597236	1					
ANR	10597288	Identifier	rp2		10597236	1					
ANR	10597289	IfStatement	"if ( BOUNDS ( p , zp . n_points ) )"		10597236	4					
ANR	10597290	Condition	"BOUNDS ( p , zp . n_points )"	5397:9:192679:192702	10597236	0	True				
ANR	10597291	CallExpression	"BOUNDS ( p , zp . n_points )"		10597236	0					
ANR	10597292	Callee	BOUNDS		10597236	0					
ANR	10597293	Identifier	BOUNDS		10597236	0					
ANR	10597294	ArgumentList	p		10597236	1					
ANR	10597295	Argument	p		10597236	0					
ANR	10597296	Identifier	p		10597236	0					
ANR	10597297	Argument	zp . n_points		10597236	1					
ANR	10597298	MemberAccess	zp . n_points		10597236	0					
ANR	10597299	Identifier	zp		10597236	0					
ANR	10597300	Identifier	n_points		10597236	1					
ANR	10597301	CompoundStatement		19:4:267:267	10597236	1					
ANR	10597302	IfStatement	if ( exc -> pedantic_hinting )		10597236	0					
ANR	10597303	Condition	exc -> pedantic_hinting	5399:11:192723:192743	10597236	0	True				
ANR	10597304	PtrMemberAccess	exc -> pedantic_hinting		10597236	0					
ANR	10597305	Identifier	exc		10597236	0					
ANR	10597306	Identifier	pedantic_hinting		10597236	1					
ANR	10597307	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	5400:8:192755:192797	10597236	1	True				
ANR	10597308	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10597236	0		=			
ANR	10597309	PtrMemberAccess	exc -> error		10597236	0					
ANR	10597310	Identifier	exc		10597236	0					
ANR	10597311	Identifier	error		10597236	1					
ANR	10597312	CallExpression	FT_THROW ( Invalid_Reference )		10597236	1					
ANR	10597313	Callee	FT_THROW		10597236	0					
ANR	10597314	Identifier	FT_THROW		10597236	0					
ANR	10597315	ArgumentList	Invalid_Reference		10597236	1					
ANR	10597316	Argument	Invalid_Reference		10597236	0					
ANR	10597317	Identifier	Invalid_Reference		10597236	0					
ANR	10597318	ExpressionStatement	* refp = 0	5401:6:192805:192814	10597236	1	True				
ANR	10597319	AssignmentExpression	* refp = 0		10597236	0		=			
ANR	10597320	UnaryOperationExpression	* refp		10597236	0					
ANR	10597321	UnaryOperator	*		10597236	0					
ANR	10597322	Identifier	refp		10597236	1					
ANR	10597323	PrimaryExpression	0		10597236	1					
ANR	10597324	ReturnStatement	return FAILURE ;	5402:6:192822:192836	10597236	2	True				
ANR	10597325	Identifier	FAILURE		10597236	0					
ANR	10597326	ExpressionStatement	* zone = zp	5405:4:192849:192859	10597236	5	True				
ANR	10597327	AssignmentExpression	* zone = zp		10597236	0		=			
ANR	10597328	UnaryOperationExpression	* zone		10597236	0					
ANR	10597329	UnaryOperator	*		10597236	0					
ANR	10597330	Identifier	zone		10597236	1					
ANR	10597331	Identifier	zp		10597236	1					
ANR	10597332	ExpressionStatement	* refp = p	5406:4:192865:192874	10597236	6	True				
ANR	10597333	AssignmentExpression	* refp = p		10597236	0		=			
ANR	10597334	UnaryOperationExpression	* refp		10597236	0					
ANR	10597335	UnaryOperator	*		10597236	0					
ANR	10597336	Identifier	refp		10597236	1					
ANR	10597337	Identifier	p		10597236	1					
ANR	10597338	ExpressionStatement	"d = PROJECT ( zp . cur + p , zp . org + p )"	5408:4:192881:192918	10597236	7	True				
ANR	10597339	AssignmentExpression	"d = PROJECT ( zp . cur + p , zp . org + p )"		10597236	0		=			
ANR	10597340	Identifier	d		10597236	0					
ANR	10597341	CallExpression	"PROJECT ( zp . cur + p , zp . org + p )"		10597236	1					
ANR	10597342	Callee	PROJECT		10597236	0					
ANR	10597343	Identifier	PROJECT		10597236	0					
ANR	10597344	ArgumentList	zp . cur + p		10597236	1					
ANR	10597345	Argument	zp . cur + p		10597236	0					
ANR	10597346	AdditiveExpression	zp . cur + p		10597236	0		+			
ANR	10597347	MemberAccess	zp . cur		10597236	0					
ANR	10597348	Identifier	zp		10597236	0					
ANR	10597349	Identifier	cur		10597236	1					
ANR	10597350	Identifier	p		10597236	1					
ANR	10597351	Argument	zp . org + p		10597236	1					
ANR	10597352	AdditiveExpression	zp . org + p		10597236	0		+			
ANR	10597353	MemberAccess	zp . org		10597236	0					
ANR	10597354	Identifier	zp		10597236	0					
ANR	10597355	Identifier	org		10597236	1					
ANR	10597356	Identifier	p		10597236	1					
ANR	10597357	ExpressionStatement	"* x = FT_MulDiv ( d , ( FT_Long ) exc -> GS . freeVector . x , exc -> F_dot_P )"	5410:4:192925:192989	10597236	8	True				
ANR	10597358	AssignmentExpression	"* x = FT_MulDiv ( d , ( FT_Long ) exc -> GS . freeVector . x , exc -> F_dot_P )"		10597236	0		=			
ANR	10597359	UnaryOperationExpression	* x		10597236	0					
ANR	10597360	UnaryOperator	*		10597236	0					
ANR	10597361	Identifier	x		10597236	1					
ANR	10597362	CallExpression	"FT_MulDiv ( d , ( FT_Long ) exc -> GS . freeVector . x , exc -> F_dot_P )"		10597236	1					
ANR	10597363	Callee	FT_MulDiv		10597236	0					
ANR	10597364	Identifier	FT_MulDiv		10597236	0					
ANR	10597365	ArgumentList	d		10597236	1					
ANR	10597366	Argument	d		10597236	0					
ANR	10597367	Identifier	d		10597236	0					
ANR	10597368	Argument	( FT_Long ) exc -> GS . freeVector . x		10597236	1					
ANR	10597369	CastExpression	( FT_Long ) exc -> GS . freeVector . x		10597236	0					
ANR	10597370	CastTarget	FT_Long		10597236	0					
ANR	10597371	MemberAccess	exc -> GS . freeVector . x		10597236	1					
ANR	10597372	MemberAccess	exc -> GS . freeVector		10597236	0					
ANR	10597373	PtrMemberAccess	exc -> GS		10597236	0					
ANR	10597374	Identifier	exc		10597236	0					
ANR	10597375	Identifier	GS		10597236	1					
ANR	10597376	Identifier	freeVector		10597236	1					
ANR	10597377	Identifier	x		10597236	1					
ANR	10597378	Argument	exc -> F_dot_P		10597236	2					
ANR	10597379	PtrMemberAccess	exc -> F_dot_P		10597236	0					
ANR	10597380	Identifier	exc		10597236	0					
ANR	10597381	Identifier	F_dot_P		10597236	1					
ANR	10597382	ExpressionStatement	"* y = FT_MulDiv ( d , ( FT_Long ) exc -> GS . freeVector . y , exc -> F_dot_P )"	5411:4:192995:193059	10597236	9	True				
ANR	10597383	AssignmentExpression	"* y = FT_MulDiv ( d , ( FT_Long ) exc -> GS . freeVector . y , exc -> F_dot_P )"		10597236	0		=			
ANR	10597384	UnaryOperationExpression	* y		10597236	0					
ANR	10597385	UnaryOperator	*		10597236	0					
ANR	10597386	Identifier	y		10597236	1					
ANR	10597387	CallExpression	"FT_MulDiv ( d , ( FT_Long ) exc -> GS . freeVector . y , exc -> F_dot_P )"		10597236	1					
ANR	10597388	Callee	FT_MulDiv		10597236	0					
ANR	10597389	Identifier	FT_MulDiv		10597236	0					
ANR	10597390	ArgumentList	d		10597236	1					
ANR	10597391	Argument	d		10597236	0					
ANR	10597392	Identifier	d		10597236	0					
ANR	10597393	Argument	( FT_Long ) exc -> GS . freeVector . y		10597236	1					
ANR	10597394	CastExpression	( FT_Long ) exc -> GS . freeVector . y		10597236	0					
ANR	10597395	CastTarget	FT_Long		10597236	0					
ANR	10597396	MemberAccess	exc -> GS . freeVector . y		10597236	1					
ANR	10597397	MemberAccess	exc -> GS . freeVector		10597236	0					
ANR	10597398	PtrMemberAccess	exc -> GS		10597236	0					
ANR	10597399	Identifier	exc		10597236	0					
ANR	10597400	Identifier	GS		10597236	1					
ANR	10597401	Identifier	freeVector		10597236	1					
ANR	10597402	Identifier	y		10597236	1					
ANR	10597403	Argument	exc -> F_dot_P		10597236	2					
ANR	10597404	PtrMemberAccess	exc -> F_dot_P		10597236	0					
ANR	10597405	Identifier	exc		10597236	0					
ANR	10597406	Identifier	F_dot_P		10597236	1					
ANR	10597407	ReturnStatement	return SUCCESS ;	5413:4:193066:193080	10597236	10	True				
ANR	10597408	Identifier	SUCCESS		10597236	0					
ANR	10597409	ReturnType	static FT_Bool		10597236	1					
ANR	10597410	Identifier	Compute_Point_Displacement		10597236	2					
ANR	10597411	ParameterList	"TT_ExecContext exc , FT_F26Dot6 * x , FT_F26Dot6 * y , TT_GlyphZone zone , FT_UShort * refp"		10597236	3					
ANR	10597412	Parameter	TT_ExecContext exc	5375:30:192216:192234	10597236	0	True				
ANR	10597413	ParameterType	TT_ExecContext		10597236	0					
ANR	10597414	Identifier	exc		10597236	1					
ANR	10597415	Parameter	FT_F26Dot6 * x	5376:30:192267:192283	10597236	1	True				
ANR	10597416	ParameterType	FT_F26Dot6 *		10597236	0					
ANR	10597417	Identifier	x		10597236	1					
ANR	10597418	Parameter	FT_F26Dot6 * y	5377:30:192316:192332	10597236	2	True				
ANR	10597419	ParameterType	FT_F26Dot6 *		10597236	0					
ANR	10597420	Identifier	y		10597236	1					
ANR	10597421	Parameter	TT_GlyphZone zone	5378:30:192365:192384	10597236	3	True				
ANR	10597422	ParameterType	TT_GlyphZone		10597236	0					
ANR	10597423	Identifier	zone		10597236	1					
ANR	10597424	Parameter	FT_UShort * refp	5379:30:192417:192436	10597236	4	True				
ANR	10597425	ParameterType	FT_UShort *		10597236	0					
ANR	10597426	Identifier	refp		10597236	1					
ANR	10597427	CFGEntryNode	ENTRY		10597236		True				
ANR	10597428	CFGExitNode	EXIT		10597236		True				
ANR	10597429	Symbol	* x		10597236						
ANR	10597430	Symbol	exc -> GS . freeVector . x		10597236						
ANR	10597431	Symbol	exc -> GS . freeVector . y		10597236						
ANR	10597432	Symbol	* y		10597236						
ANR	10597433	Symbol	* exc		10597236						
ANR	10597434	Symbol	* zone		10597236						
ANR	10597435	Symbol	refp		10597236						
ANR	10597436	Symbol	FT_MulDiv		10597236						
ANR	10597437	Symbol	* refp		10597236						
ANR	10597438	Symbol	exc		10597236						
ANR	10597439	Symbol	Invalid_Reference		10597236						
ANR	10597440	Symbol	zone		10597236						
ANR	10597441	Symbol	BOUNDS		10597236						
ANR	10597442	Symbol	zp . cur		10597236						
ANR	10597443	Symbol	exc -> error		10597236						
ANR	10597444	Symbol	exc -> F_dot_P		10597236						
ANR	10597445	Symbol	PROJECT		10597236						
ANR	10597446	Symbol	SUCCESS		10597236						
ANR	10597447	Symbol	d		10597236						
ANR	10597448	Symbol	exc -> pedantic_hinting		10597236						
ANR	10597449	Symbol	exc -> GS		10597236						
ANR	10597450	Symbol	zp . n_points		10597236						
ANR	10597451	Symbol	FAILURE		10597236						
ANR	10597452	Symbol	FT_THROW		10597236						
ANR	10597453	Symbol	p		10597236						
ANR	10597454	Symbol	exc -> zp1		10597236						
ANR	10597455	Symbol	exc -> GS . rp1		10597236						
ANR	10597456	Symbol	exc -> GS . rp2		10597236						
ANR	10597457	Symbol	zp . org		10597236						
ANR	10597458	Symbol	zp		10597236						
ANR	10597459	Symbol	exc -> zp0		10597236						
ANR	10597460	Symbol	x		10597236						
ANR	10597461	Symbol	y		10597236						
ANR	10597462	Symbol	exc -> opcode		10597236						
ANR	10597463	Symbol	exc -> GS . freeVector		10597236						
ANR	10597464	Function	Move_Zp2_Point	5418:2:193159:194136							
ANR	10597465	FunctionDef	"Move_Zp2_Point (TT_ExecContext exc , FT_UShort point , FT_F26Dot6 dx , FT_F26Dot6 dy , FT_Bool touch)"		10597464	0					
ANR	10597466	CompoundStatement		5424:2:193371:194136	10597464	0					
ANR	10597467	IfStatement	if ( exc -> GS . freeVector . x != 0 )		10597464	0					
ANR	10597468	Condition	exc -> GS . freeVector . x != 0	5425:9:193382:193406	10597464	0	True				
ANR	10597469	EqualityExpression	exc -> GS . freeVector . x != 0		10597464	0		!=			
ANR	10597470	MemberAccess	exc -> GS . freeVector . x		10597464	0					
ANR	10597471	MemberAccess	exc -> GS . freeVector		10597464	0					
ANR	10597472	PtrMemberAccess	exc -> GS		10597464	0					
ANR	10597473	Identifier	exc		10597464	0					
ANR	10597474	Identifier	GS		10597464	1					
ANR	10597475	Identifier	freeVector		10597464	1					
ANR	10597476	Identifier	x		10597464	1					
ANR	10597477	PrimaryExpression	0		10597464	1					
ANR	10597478	CompoundStatement		3:4:42:42	10597464	1					
ANR	10597479	IfStatement	if ( ! ( SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility ) )		10597464	0					
ANR	10597480	Condition	! ( SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility )	5428:11:193470:193546	10597464	0	True				
ANR	10597481	UnaryOperationExpression	! ( SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility )		10597464	0					
ANR	10597482	UnaryOperator	!		10597464	0					
ANR	10597483	AndExpression	SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility		10597464	1		&&			
ANR	10597484	Identifier	SUBPIXEL_HINTING_MINIMAL		10597464	0					
ANR	10597485	PtrMemberAccess	exc -> backward_compatibility		10597464	1					
ANR	10597486	Identifier	exc		10597464	0					
ANR	10597487	Identifier	backward_compatibility		10597464	1					
ANR	10597488	ExpressionStatement	"exc -> zp2 . cur [ point ] . x = ADD_LONG ( exc -> zp2 . cur [ point ] . x , dx )"	5431:8:193565:193626	10597464	1	True				
ANR	10597489	AssignmentExpression	"exc -> zp2 . cur [ point ] . x = ADD_LONG ( exc -> zp2 . cur [ point ] . x , dx )"		10597464	0		=			
ANR	10597490	MemberAccess	exc -> zp2 . cur [ point ] . x		10597464	0					
ANR	10597491	ArrayIndexing	exc -> zp2 . cur [ point ]		10597464	0					
ANR	10597492	MemberAccess	exc -> zp2 . cur		10597464	0					
ANR	10597493	PtrMemberAccess	exc -> zp2		10597464	0					
ANR	10597494	Identifier	exc		10597464	0					
ANR	10597495	Identifier	zp2		10597464	1					
ANR	10597496	Identifier	cur		10597464	1					
ANR	10597497	Identifier	point		10597464	1					
ANR	10597498	Identifier	x		10597464	1					
ANR	10597499	CallExpression	"ADD_LONG ( exc -> zp2 . cur [ point ] . x , dx )"		10597464	1					
ANR	10597500	Callee	ADD_LONG		10597464	0					
ANR	10597501	Identifier	ADD_LONG		10597464	0					
ANR	10597502	ArgumentList	exc -> zp2 . cur [ point ] . x		10597464	1					
ANR	10597503	Argument	exc -> zp2 . cur [ point ] . x		10597464	0					
ANR	10597504	MemberAccess	exc -> zp2 . cur [ point ] . x		10597464	0					
ANR	10597505	ArrayIndexing	exc -> zp2 . cur [ point ]		10597464	0					
ANR	10597506	MemberAccess	exc -> zp2 . cur		10597464	0					
ANR	10597507	PtrMemberAccess	exc -> zp2		10597464	0					
ANR	10597508	Identifier	exc		10597464	0					
ANR	10597509	Identifier	zp2		10597464	1					
ANR	10597510	Identifier	cur		10597464	1					
ANR	10597511	Identifier	point		10597464	1					
ANR	10597512	Identifier	x		10597464	1					
ANR	10597513	Argument	dx		10597464	1					
ANR	10597514	Identifier	dx		10597464	0					
ANR	10597515	IfStatement	if ( touch )		10597464	1					
ANR	10597516	Condition	touch	5433:11:193640:193644	10597464	0	True				
ANR	10597517	Identifier	touch		10597464	0					
ANR	10597518	ExpressionStatement	exc -> zp2 . tags [ point ] |= FT_CURVE_TAG_TOUCH_X	5434:8:193656:193700	10597464	1	True				
ANR	10597519	AssignmentExpression	exc -> zp2 . tags [ point ] |= FT_CURVE_TAG_TOUCH_X		10597464	0		|=			
ANR	10597520	ArrayIndexing	exc -> zp2 . tags [ point ]		10597464	0					
ANR	10597521	MemberAccess	exc -> zp2 . tags		10597464	0					
ANR	10597522	PtrMemberAccess	exc -> zp2		10597464	0					
ANR	10597523	Identifier	exc		10597464	0					
ANR	10597524	Identifier	zp2		10597464	1					
ANR	10597525	Identifier	tags		10597464	1					
ANR	10597526	Identifier	point		10597464	1					
ANR	10597527	Identifier	FT_CURVE_TAG_TOUCH_X		10597464	1					
ANR	10597528	IfStatement	if ( exc -> GS . freeVector . y != 0 )		10597464	1					
ANR	10597529	Condition	exc -> GS . freeVector . y != 0	5437:9:193718:193742	10597464	0	True				
ANR	10597530	EqualityExpression	exc -> GS . freeVector . y != 0		10597464	0		!=			
ANR	10597531	MemberAccess	exc -> GS . freeVector . y		10597464	0					
ANR	10597532	MemberAccess	exc -> GS . freeVector		10597464	0					
ANR	10597533	PtrMemberAccess	exc -> GS		10597464	0					
ANR	10597534	Identifier	exc		10597464	0					
ANR	10597535	Identifier	GS		10597464	1					
ANR	10597536	Identifier	freeVector		10597464	1					
ANR	10597537	Identifier	y		10597464	1					
ANR	10597538	PrimaryExpression	0		10597464	1					
ANR	10597539	CompoundStatement		15:4:378:378	10597464	1					
ANR	10597540	IfStatement	if ( ! ( SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility && exc -> iupx_called && exc -> iupy_called ) )		10597464	0					
ANR	10597541	Condition	! ( SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility && exc -> iupx_called && exc -> iupy_called )	5440:11:193806:193972	10597464	0	True				
ANR	10597542	UnaryOperationExpression	! ( SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility && exc -> iupx_called && exc -> iupy_called )		10597464	0					
ANR	10597543	UnaryOperator	!		10597464	0					
ANR	10597544	AndExpression	SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility && exc -> iupx_called && exc -> iupy_called		10597464	1		&&			
ANR	10597545	Identifier	SUBPIXEL_HINTING_MINIMAL		10597464	0					
ANR	10597546	AndExpression	exc -> backward_compatibility && exc -> iupx_called && exc -> iupy_called		10597464	1		&&			
ANR	10597547	PtrMemberAccess	exc -> backward_compatibility		10597464	0					
ANR	10597548	Identifier	exc		10597464	0					
ANR	10597549	Identifier	backward_compatibility		10597464	1					
ANR	10597550	AndExpression	exc -> iupx_called && exc -> iupy_called		10597464	1		&&			
ANR	10597551	PtrMemberAccess	exc -> iupx_called		10597464	0					
ANR	10597552	Identifier	exc		10597464	0					
ANR	10597553	Identifier	iupx_called		10597464	1					
ANR	10597554	PtrMemberAccess	exc -> iupy_called		10597464	1					
ANR	10597555	Identifier	exc		10597464	0					
ANR	10597556	Identifier	iupy_called		10597464	1					
ANR	10597557	ExpressionStatement	"exc -> zp2 . cur [ point ] . y = ADD_LONG ( exc -> zp2 . cur [ point ] . y , dy )"	5445:8:193991:194052	10597464	1	True				
ANR	10597558	AssignmentExpression	"exc -> zp2 . cur [ point ] . y = ADD_LONG ( exc -> zp2 . cur [ point ] . y , dy )"		10597464	0		=			
ANR	10597559	MemberAccess	exc -> zp2 . cur [ point ] . y		10597464	0					
ANR	10597560	ArrayIndexing	exc -> zp2 . cur [ point ]		10597464	0					
ANR	10597561	MemberAccess	exc -> zp2 . cur		10597464	0					
ANR	10597562	PtrMemberAccess	exc -> zp2		10597464	0					
ANR	10597563	Identifier	exc		10597464	0					
ANR	10597564	Identifier	zp2		10597464	1					
ANR	10597565	Identifier	cur		10597464	1					
ANR	10597566	Identifier	point		10597464	1					
ANR	10597567	Identifier	y		10597464	1					
ANR	10597568	CallExpression	"ADD_LONG ( exc -> zp2 . cur [ point ] . y , dy )"		10597464	1					
ANR	10597569	Callee	ADD_LONG		10597464	0					
ANR	10597570	Identifier	ADD_LONG		10597464	0					
ANR	10597571	ArgumentList	exc -> zp2 . cur [ point ] . y		10597464	1					
ANR	10597572	Argument	exc -> zp2 . cur [ point ] . y		10597464	0					
ANR	10597573	MemberAccess	exc -> zp2 . cur [ point ] . y		10597464	0					
ANR	10597574	ArrayIndexing	exc -> zp2 . cur [ point ]		10597464	0					
ANR	10597575	MemberAccess	exc -> zp2 . cur		10597464	0					
ANR	10597576	PtrMemberAccess	exc -> zp2		10597464	0					
ANR	10597577	Identifier	exc		10597464	0					
ANR	10597578	Identifier	zp2		10597464	1					
ANR	10597579	Identifier	cur		10597464	1					
ANR	10597580	Identifier	point		10597464	1					
ANR	10597581	Identifier	y		10597464	1					
ANR	10597582	Argument	dy		10597464	1					
ANR	10597583	Identifier	dy		10597464	0					
ANR	10597584	IfStatement	if ( touch )		10597464	1					
ANR	10597585	Condition	touch	5447:11:194066:194070	10597464	0	True				
ANR	10597586	Identifier	touch		10597464	0					
ANR	10597587	ExpressionStatement	exc -> zp2 . tags [ point ] |= FT_CURVE_TAG_TOUCH_Y	5448:8:194082:194126	10597464	1	True				
ANR	10597588	AssignmentExpression	exc -> zp2 . tags [ point ] |= FT_CURVE_TAG_TOUCH_Y		10597464	0		|=			
ANR	10597589	ArrayIndexing	exc -> zp2 . tags [ point ]		10597464	0					
ANR	10597590	MemberAccess	exc -> zp2 . tags		10597464	0					
ANR	10597591	PtrMemberAccess	exc -> zp2		10597464	0					
ANR	10597592	Identifier	exc		10597464	0					
ANR	10597593	Identifier	zp2		10597464	1					
ANR	10597594	Identifier	tags		10597464	1					
ANR	10597595	Identifier	point		10597464	1					
ANR	10597596	Identifier	FT_CURVE_TAG_TOUCH_Y		10597464	1					
ANR	10597597	ReturnType	static void		10597464	1					
ANR	10597598	Identifier	Move_Zp2_Point		10597464	2					
ANR	10597599	ParameterList	"TT_ExecContext exc , FT_UShort point , FT_F26Dot6 dx , FT_F26Dot6 dy , FT_Bool touch"		10597464	3					
ANR	10597600	Parameter	TT_ExecContext exc	5419:18:193189:193207	10597464	0	True				
ANR	10597601	ParameterType	TT_ExecContext		10597464	0					
ANR	10597602	Identifier	exc		10597464	1					
ANR	10597603	Parameter	FT_UShort point	5420:18:193228:193248	10597464	1	True				
ANR	10597604	ParameterType	FT_UShort		10597464	0					
ANR	10597605	Identifier	point		10597464	1					
ANR	10597606	Parameter	FT_F26Dot6 dx	5421:18:193269:193286	10597464	2	True				
ANR	10597607	ParameterType	FT_F26Dot6		10597464	0					
ANR	10597608	Identifier	dx		10597464	1					
ANR	10597609	Parameter	FT_F26Dot6 dy	5422:18:193307:193324	10597464	3	True				
ANR	10597610	ParameterType	FT_F26Dot6		10597464	0					
ANR	10597611	Identifier	dy		10597464	1					
ANR	10597612	Parameter	FT_Bool touch	5423:18:193345:193365	10597464	4	True				
ANR	10597613	ParameterType	FT_Bool		10597464	0					
ANR	10597614	Identifier	touch		10597464	1					
ANR	10597615	CFGEntryNode	ENTRY		10597464		True				
ANR	10597616	CFGExitNode	EXIT		10597464		True				
ANR	10597617	Symbol	SUBPIXEL_HINTING_MINIMAL		10597464						
ANR	10597618	Symbol	exc -> GS . freeVector . x		10597464						
ANR	10597619	Symbol	exc -> GS . freeVector . y		10597464						
ANR	10597620	Symbol	* exc		10597464						
ANR	10597621	Symbol	ADD_LONG		10597464						
ANR	10597622	Symbol	FT_CURVE_TAG_TOUCH_X		10597464						
ANR	10597623	Symbol	FT_CURVE_TAG_TOUCH_Y		10597464						
ANR	10597624	Symbol	* exc -> zp2 . cur		10597464						
ANR	10597625	Symbol	point		10597464						
ANR	10597626	Symbol	* exc -> zp2 . tags		10597464						
ANR	10597627	Symbol	exc		10597464						
ANR	10597628	Symbol	dx		10597464						
ANR	10597629	Symbol	dy		10597464						
ANR	10597630	Symbol	* * exc		10597464						
ANR	10597631	Symbol	* point		10597464						
ANR	10597632	Symbol	exc -> zp2 . cur		10597464						
ANR	10597633	Symbol	touch		10597464						
ANR	10597634	Symbol	exc -> zp2 . tags		10597464						
ANR	10597635	Symbol	exc -> GS		10597464						
ANR	10597636	Symbol	exc -> backward_compatibility		10597464						
ANR	10597637	Symbol	exc -> zp2		10597464						
ANR	10597638	Symbol	exc -> zp2 . cur [ point ] . y		10597464						
ANR	10597639	Symbol	* exc -> zp2		10597464						
ANR	10597640	Symbol	exc -> zp2 . cur [ point ] . x		10597464						
ANR	10597641	Symbol	exc -> GS . freeVector		10597464						
ANR	10597642	Symbol	exc -> iupy_called		10597464						
ANR	10597643	Symbol	exc -> iupx_called		10597464						
ANR	10597644	Function	Ins_SHP	5459:2:194610:195750							
ANR	10597645	FunctionDef	Ins_SHP (TT_ExecContext exc)		10597644	0					
ANR	10597646	CompoundStatement		5461:2:194657:195750	10597644	0					
ANR	10597647	IdentifierDeclStatement	TT_GlyphZoneRec zp ;	5462:4:194663:194682	10597644	0	True				
ANR	10597648	IdentifierDecl	zp		10597644	0					
ANR	10597649	IdentifierDeclType	TT_GlyphZoneRec		10597644	0					
ANR	10597650	Identifier	zp		10597644	1					
ANR	10597651	IdentifierDeclStatement	FT_UShort refp ;	5463:4:194688:194709	10597644	1	True				
ANR	10597652	IdentifierDecl	refp		10597644	0					
ANR	10597653	IdentifierDeclType	FT_UShort		10597644	0					
ANR	10597654	Identifier	refp		10597644	1					
ANR	10597655	IdentifierDeclStatement	"FT_F26Dot6 dx , dy ;"	5465:4:194716:194739	10597644	2	True				
ANR	10597656	IdentifierDecl	dx		10597644	0					
ANR	10597657	IdentifierDeclType	FT_F26Dot6		10597644	0					
ANR	10597658	Identifier	dx		10597644	1					
ANR	10597659	IdentifierDecl	dy		10597644	1					
ANR	10597660	IdentifierDeclType	FT_F26Dot6		10597644	0					
ANR	10597661	Identifier	dy		10597644	1					
ANR	10597662	IdentifierDeclStatement	FT_UShort point ;	5466:4:194745:194767	10597644	3	True				
ANR	10597663	IdentifierDecl	point		10597644	0					
ANR	10597664	IdentifierDeclType	FT_UShort		10597644	0					
ANR	10597665	Identifier	point		10597644	1					
ANR	10597666	IfStatement	if ( exc -> top < exc -> GS . loop )		10597644	4					
ANR	10597667	Condition	exc -> top < exc -> GS . loop	5469:9:194780:194802	10597644	0	True				
ANR	10597668	RelationalExpression	exc -> top < exc -> GS . loop		10597644	0		<			
ANR	10597669	PtrMemberAccess	exc -> top		10597644	0					
ANR	10597670	Identifier	exc		10597644	0					
ANR	10597671	Identifier	top		10597644	1					
ANR	10597672	MemberAccess	exc -> GS . loop		10597644	1					
ANR	10597673	PtrMemberAccess	exc -> GS		10597644	0					
ANR	10597674	Identifier	exc		10597644	0					
ANR	10597675	Identifier	GS		10597644	1					
ANR	10597676	Identifier	loop		10597644	1					
ANR	10597677	CompoundStatement		10:4:152:152	10597644	1					
ANR	10597678	IfStatement	if ( exc -> pedantic_hinting )		10597644	0					
ANR	10597679	Condition	exc -> pedantic_hinting	5471:11:194823:194843	10597644	0	True				
ANR	10597680	PtrMemberAccess	exc -> pedantic_hinting		10597644	0					
ANR	10597681	Identifier	exc		10597644	0					
ANR	10597682	Identifier	pedantic_hinting		10597644	1					
ANR	10597683	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	5472:8:194855:194897	10597644	1	True				
ANR	10597684	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10597644	0		=			
ANR	10597685	PtrMemberAccess	exc -> error		10597644	0					
ANR	10597686	Identifier	exc		10597644	0					
ANR	10597687	Identifier	error		10597644	1					
ANR	10597688	CallExpression	FT_THROW ( Invalid_Reference )		10597644	1					
ANR	10597689	Callee	FT_THROW		10597644	0					
ANR	10597690	Identifier	FT_THROW		10597644	0					
ANR	10597691	ArgumentList	Invalid_Reference		10597644	1					
ANR	10597692	Argument	Invalid_Reference		10597644	0					
ANR	10597693	Identifier	Invalid_Reference		10597644	0					
ANR	10597694	GotoStatement	goto Fail ;	5473:6:194905:194914	10597644	1	True				
ANR	10597695	Identifier	Fail		10597644	0					
ANR	10597696	IfStatement	"if ( Compute_Point_Displacement ( exc , & dx , & dy , & zp , & refp ) )"		10597644	5					
ANR	10597697	Condition	"Compute_Point_Displacement ( exc , & dx , & dy , & zp , & refp )"	5476:9:194932:194986	10597644	0	True				
ANR	10597698	CallExpression	"Compute_Point_Displacement ( exc , & dx , & dy , & zp , & refp )"		10597644	0					
ANR	10597699	Callee	Compute_Point_Displacement		10597644	0					
ANR	10597700	Identifier	Compute_Point_Displacement		10597644	0					
ANR	10597701	ArgumentList	exc		10597644	1					
ANR	10597702	Argument	exc		10597644	0					
ANR	10597703	Identifier	exc		10597644	0					
ANR	10597704	Argument	& dx		10597644	1					
ANR	10597705	UnaryOperationExpression	& dx		10597644	0					
ANR	10597706	UnaryOperator	&		10597644	0					
ANR	10597707	Identifier	dx		10597644	1					
ANR	10597708	Argument	& dy		10597644	2					
ANR	10597709	UnaryOperationExpression	& dy		10597644	0					
ANR	10597710	UnaryOperator	&		10597644	0					
ANR	10597711	Identifier	dy		10597644	1					
ANR	10597712	Argument	& zp		10597644	3					
ANR	10597713	UnaryOperationExpression	& zp		10597644	0					
ANR	10597714	UnaryOperator	&		10597644	0					
ANR	10597715	Identifier	zp		10597644	1					
ANR	10597716	Argument	& refp		10597644	4					
ANR	10597717	UnaryOperationExpression	& refp		10597644	0					
ANR	10597718	UnaryOperator	&		10597644	0					
ANR	10597719	Identifier	refp		10597644	1					
ANR	10597720	ReturnStatement	return ;	5477:6:194996:195002	10597644	1	True				
ANR	10597721	WhileStatement	while ( exc -> GS . loop > 0 )		10597644	6					
ANR	10597722	Condition	exc -> GS . loop > 0	5479:12:195017:195032	10597644	0	True				
ANR	10597723	RelationalExpression	exc -> GS . loop > 0		10597644	0		>			
ANR	10597724	MemberAccess	exc -> GS . loop		10597644	0					
ANR	10597725	PtrMemberAccess	exc -> GS		10597644	0					
ANR	10597726	Identifier	exc		10597644	0					
ANR	10597727	Identifier	GS		10597644	1					
ANR	10597728	Identifier	loop		10597644	1					
ANR	10597729	PrimaryExpression	0		10597644	1					
ANR	10597730	CompoundStatement		20:4:382:382	10597644	1					
ANR	10597731	ExpressionStatement	exc -> args --	5481:6:195048:195059	10597644	0	True				
ANR	10597732	PostIncDecOperationExpression	exc -> args --		10597644	0					
ANR	10597733	PtrMemberAccess	exc -> args		10597644	0					
ANR	10597734	Identifier	exc		10597644	0					
ANR	10597735	Identifier	args		10597644	1					
ANR	10597736	IncDec	--		10597644	1					
ANR	10597737	ExpressionStatement	point = ( FT_UShort ) exc -> stack [ exc -> args ]	5482:6:195067:195107	10597644	1	True				
ANR	10597738	AssignmentExpression	point = ( FT_UShort ) exc -> stack [ exc -> args ]		10597644	0		=			
ANR	10597739	Identifier	point		10597644	0					
ANR	10597740	CastExpression	( FT_UShort ) exc -> stack [ exc -> args ]		10597644	1					
ANR	10597741	CastTarget	FT_UShort		10597644	0					
ANR	10597742	ArrayIndexing	exc -> stack [ exc -> args ]		10597644	1					
ANR	10597743	PtrMemberAccess	exc -> stack		10597644	0					
ANR	10597744	Identifier	exc		10597644	0					
ANR	10597745	Identifier	stack		10597644	1					
ANR	10597746	PtrMemberAccess	exc -> args		10597644	1					
ANR	10597747	Identifier	exc		10597644	0					
ANR	10597748	Identifier	args		10597644	1					
ANR	10597749	IfStatement	"if ( BOUNDS ( point , exc -> zp2 . n_points ) )"		10597644	2					
ANR	10597750	Condition	"BOUNDS ( point , exc -> zp2 . n_points )"	5484:11:195121:195154	10597644	0	True				
ANR	10597751	CallExpression	"BOUNDS ( point , exc -> zp2 . n_points )"		10597644	0					
ANR	10597752	Callee	BOUNDS		10597644	0					
ANR	10597753	Identifier	BOUNDS		10597644	0					
ANR	10597754	ArgumentList	point		10597644	1					
ANR	10597755	Argument	point		10597644	0					
ANR	10597756	Identifier	point		10597644	0					
ANR	10597757	Argument	exc -> zp2 . n_points		10597644	1					
ANR	10597758	MemberAccess	exc -> zp2 . n_points		10597644	0					
ANR	10597759	PtrMemberAccess	exc -> zp2		10597644	0					
ANR	10597760	Identifier	exc		10597644	0					
ANR	10597761	Identifier	zp2		10597644	1					
ANR	10597762	Identifier	n_points		10597644	1					
ANR	10597763	CompoundStatement		25:6:506:506	10597644	1					
ANR	10597764	IfStatement	if ( exc -> pedantic_hinting )		10597644	0					
ANR	10597765	Condition	exc -> pedantic_hinting	5486:13:195179:195199	10597644	0	True				
ANR	10597766	PtrMemberAccess	exc -> pedantic_hinting		10597644	0					
ANR	10597767	Identifier	exc		10597644	0					
ANR	10597768	Identifier	pedantic_hinting		10597644	1					
ANR	10597769	CompoundStatement		27:8:553:553	10597644	1					
ANR	10597770	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	5488:10:195223:195265	10597644	0	True				
ANR	10597771	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10597644	0		=			
ANR	10597772	PtrMemberAccess	exc -> error		10597644	0					
ANR	10597773	Identifier	exc		10597644	0					
ANR	10597774	Identifier	error		10597644	1					
ANR	10597775	CallExpression	FT_THROW ( Invalid_Reference )		10597644	1					
ANR	10597776	Callee	FT_THROW		10597644	0					
ANR	10597777	Identifier	FT_THROW		10597644	0					
ANR	10597778	ArgumentList	Invalid_Reference		10597644	1					
ANR	10597779	Argument	Invalid_Reference		10597644	0					
ANR	10597780	Identifier	Invalid_Reference		10597644	0					
ANR	10597781	ReturnStatement	return ;	5489:10:195277:195283	10597644	1	True				
ANR	10597782	ElseStatement	else		10597644	0					
ANR	10597783	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode )		10597644	0					
ANR	10597784	Condition	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode	5495:11:195440:195488	10597644	0	True				
ANR	10597785	AndExpression	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode		10597644	0		&&			
ANR	10597786	Identifier	SUBPIXEL_HINTING_INFINALITY		10597644	0					
ANR	10597787	PtrMemberAccess	exc -> ignore_x_mode		10597644	1					
ANR	10597788	Identifier	exc		10597644	0					
ANR	10597789	Identifier	ignore_x_mode		10597644	1					
ANR	10597790	ExpressionStatement	"Move_Zp2_Point ( exc , point , 0 , dy , TRUE )"	5496:8:195500:195541	10597644	1	True				
ANR	10597791	CallExpression	"Move_Zp2_Point ( exc , point , 0 , dy , TRUE )"		10597644	0					
ANR	10597792	Callee	Move_Zp2_Point		10597644	0					
ANR	10597793	Identifier	Move_Zp2_Point		10597644	0					
ANR	10597794	ArgumentList	exc		10597644	1					
ANR	10597795	Argument	exc		10597644	0					
ANR	10597796	Identifier	exc		10597644	0					
ANR	10597797	Argument	point		10597644	1					
ANR	10597798	Identifier	point		10597644	0					
ANR	10597799	Argument	0		10597644	2					
ANR	10597800	PrimaryExpression	0		10597644	0					
ANR	10597801	Argument	dy		10597644	3					
ANR	10597802	Identifier	dy		10597644	0					
ANR	10597803	Argument	TRUE		10597644	4					
ANR	10597804	Identifier	TRUE		10597644	0					
ANR	10597805	ElseStatement	else		10597644	0					
ANR	10597806	ExpressionStatement	"Move_Zp2_Point ( exc , point , dx , dy , TRUE )"	5499:8:195614:195656	10597644	0	True				
ANR	10597807	CallExpression	"Move_Zp2_Point ( exc , point , dx , dy , TRUE )"		10597644	0					
ANR	10597808	Callee	Move_Zp2_Point		10597644	0					
ANR	10597809	Identifier	Move_Zp2_Point		10597644	0					
ANR	10597810	ArgumentList	exc		10597644	1					
ANR	10597811	Argument	exc		10597644	0					
ANR	10597812	Identifier	exc		10597644	0					
ANR	10597813	Argument	point		10597644	1					
ANR	10597814	Identifier	point		10597644	0					
ANR	10597815	Argument	dx		10597644	2					
ANR	10597816	Identifier	dx		10597644	0					
ANR	10597817	Argument	dy		10597644	3					
ANR	10597818	Identifier	dy		10597644	0					
ANR	10597819	Argument	TRUE		10597644	4					
ANR	10597820	Identifier	TRUE		10597644	0					
ANR	10597821	ExpressionStatement	exc -> GS . loop --	5501:6:195665:195679	10597644	3	True				
ANR	10597822	PostIncDecOperationExpression	exc -> GS . loop --		10597644	0					
ANR	10597823	MemberAccess	exc -> GS . loop		10597644	0					
ANR	10597824	PtrMemberAccess	exc -> GS		10597644	0					
ANR	10597825	Identifier	exc		10597644	0					
ANR	10597826	Identifier	GS		10597644	1					
ANR	10597827	Identifier	loop		10597644	1					
ANR	10597828	IncDec	--		10597644	1					
ANR	10597829	Label	Fail :	5504:2:195690:195694	10597644	7	True				
ANR	10597830	Identifier	Fail		10597644	0					
ANR	10597831	ExpressionStatement	exc -> GS . loop = 1	5505:4:195700:195716	10597644	8	True				
ANR	10597832	AssignmentExpression	exc -> GS . loop = 1		10597644	0		=			
ANR	10597833	MemberAccess	exc -> GS . loop		10597644	0					
ANR	10597834	PtrMemberAccess	exc -> GS		10597644	0					
ANR	10597835	Identifier	exc		10597644	0					
ANR	10597836	Identifier	GS		10597644	1					
ANR	10597837	Identifier	loop		10597644	1					
ANR	10597838	PrimaryExpression	1		10597644	1					
ANR	10597839	ExpressionStatement	exc -> new_top = exc -> args	5506:4:195722:195746	10597644	9	True				
ANR	10597840	AssignmentExpression	exc -> new_top = exc -> args		10597644	0		=			
ANR	10597841	PtrMemberAccess	exc -> new_top		10597644	0					
ANR	10597842	Identifier	exc		10597644	0					
ANR	10597843	Identifier	new_top		10597644	1					
ANR	10597844	PtrMemberAccess	exc -> args		10597644	1					
ANR	10597845	Identifier	exc		10597644	0					
ANR	10597846	Identifier	args		10597644	1					
ANR	10597847	ReturnType	static void		10597644	1					
ANR	10597848	Identifier	Ins_SHP		10597644	2					
ANR	10597849	ParameterList	TT_ExecContext exc		10597644	3					
ANR	10597850	Parameter	TT_ExecContext exc	5460:11:194633:194651	10597644	0	True				
ANR	10597851	ParameterType	TT_ExecContext		10597644	0					
ANR	10597852	Identifier	exc		10597644	1					
ANR	10597853	CFGEntryNode	ENTRY		10597644		True				
ANR	10597854	CFGExitNode	EXIT		10597644		True				
ANR	10597855	Symbol	exc -> new_top		10597644						
ANR	10597856	Symbol	* exc		10597644						
ANR	10597857	Symbol	refp		10597644						
ANR	10597858	Symbol	* exc -> args		10597644						
ANR	10597859	Symbol	point		10597644						
ANR	10597860	Symbol	Compute_Point_Displacement		10597644						
ANR	10597861	Symbol	SUBPIXEL_HINTING_INFINALITY		10597644						
ANR	10597862	Symbol	exc		10597644						
ANR	10597863	Symbol	Invalid_Reference		10597644						
ANR	10597864	Symbol	exc -> stack		10597644						
ANR	10597865	Symbol	dx		10597644						
ANR	10597866	Symbol	dy		10597644						
ANR	10597867	Symbol	BOUNDS		10597644						
ANR	10597868	Symbol	exc -> top		10597644						
ANR	10597869	Symbol	exc -> error		10597644						
ANR	10597870	Symbol	& dy		10597644						
ANR	10597871	Symbol	exc -> ignore_x_mode		10597644						
ANR	10597872	Symbol	& dx		10597644						
ANR	10597873	Symbol	* exc -> stack		10597644						
ANR	10597874	Symbol	& zp		10597644						
ANR	10597875	Symbol	* * exc		10597644						
ANR	10597876	Symbol	exc -> args		10597644						
ANR	10597877	Symbol	& refp		10597644						
ANR	10597878	Symbol	exc -> pedantic_hinting		10597644						
ANR	10597879	Symbol	TRUE		10597644						
ANR	10597880	Symbol	exc -> GS		10597644						
ANR	10597881	Symbol	FT_THROW		10597644						
ANR	10597882	Symbol	exc -> zp2		10597644						
ANR	10597883	Symbol	exc -> zp2 . n_points		10597644						
ANR	10597884	Symbol	zp		10597644						
ANR	10597885	Symbol	exc -> GS . loop		10597644						
ANR	10597886	Function	Ins_SHC	5520:2:196536:197668							
ANR	10597887	FunctionDef	"Ins_SHC (TT_ExecContext exc , FT_Long * args)"		10597886	0					
ANR	10597888	CompoundStatement		5523:2:196616:197668	10597886	0					
ANR	10597889	IdentifierDeclStatement	TT_GlyphZoneRec zp ;	5524:4:196622:196641	10597886	0	True				
ANR	10597890	IdentifierDecl	zp		10597886	0					
ANR	10597891	IdentifierDeclType	TT_GlyphZoneRec		10597886	0					
ANR	10597892	Identifier	zp		10597886	1					
ANR	10597893	IdentifierDeclStatement	FT_UShort refp ;	5525:4:196647:196668	10597886	1	True				
ANR	10597894	IdentifierDecl	refp		10597886	0					
ANR	10597895	IdentifierDeclType	FT_UShort		10597886	0					
ANR	10597896	Identifier	refp		10597886	1					
ANR	10597897	IdentifierDeclStatement	"FT_F26Dot6 dx , dy ;"	5526:4:196674:196697	10597886	2	True				
ANR	10597898	IdentifierDecl	dx		10597886	0					
ANR	10597899	IdentifierDeclType	FT_F26Dot6		10597886	0					
ANR	10597900	Identifier	dx		10597886	1					
ANR	10597901	IdentifierDecl	dy		10597886	1					
ANR	10597902	IdentifierDeclType	FT_F26Dot6		10597886	0					
ANR	10597903	Identifier	dy		10597886	1					
ANR	10597904	IdentifierDeclStatement	"FT_Short contour , bounds ;"	5528:4:196704:196736	10597886	3	True				
ANR	10597905	IdentifierDecl	contour		10597886	0					
ANR	10597906	IdentifierDeclType	FT_Short		10597886	0					
ANR	10597907	Identifier	contour		10597886	1					
ANR	10597908	IdentifierDecl	bounds		10597886	1					
ANR	10597909	IdentifierDeclType	FT_Short		10597886	0					
ANR	10597910	Identifier	bounds		10597886	1					
ANR	10597911	IdentifierDeclStatement	"FT_UShort start , limit , i ;"	5529:4:196742:196774	10597886	4	True				
ANR	10597912	IdentifierDecl	start		10597886	0					
ANR	10597913	IdentifierDeclType	FT_UShort		10597886	0					
ANR	10597914	Identifier	start		10597886	1					
ANR	10597915	IdentifierDecl	limit		10597886	1					
ANR	10597916	IdentifierDeclType	FT_UShort		10597886	0					
ANR	10597917	Identifier	limit		10597886	1					
ANR	10597918	IdentifierDecl	i		10597886	2					
ANR	10597919	IdentifierDeclType	FT_UShort		10597886	0					
ANR	10597920	Identifier	i		10597886	1					
ANR	10597921	ExpressionStatement	contour = ( FT_Short ) args [ 0 ]	5532:4:196782:196809	10597886	5	True				
ANR	10597922	AssignmentExpression	contour = ( FT_Short ) args [ 0 ]		10597886	0		=			
ANR	10597923	Identifier	contour		10597886	0					
ANR	10597924	CastExpression	( FT_Short ) args [ 0 ]		10597886	1					
ANR	10597925	CastTarget	FT_Short		10597886	0					
ANR	10597926	ArrayIndexing	args [ 0 ]		10597886	1					
ANR	10597927	Identifier	args		10597886	0					
ANR	10597928	PrimaryExpression	0		10597886	1					
ANR	10597929	ExpressionStatement	bounds = ( exc -> GS . gep2 == 0 ) ? 1 : exc -> zp2 . n_contours	5533:4:196815:196872	10597886	6	True				
ANR	10597930	AssignmentExpression	bounds = ( exc -> GS . gep2 == 0 ) ? 1 : exc -> zp2 . n_contours		10597886	0		=			
ANR	10597931	Identifier	bounds		10597886	0					
ANR	10597932	ConditionalExpression	( exc -> GS . gep2 == 0 ) ? 1 : exc -> zp2 . n_contours		10597886	1					
ANR	10597933	Condition	exc -> GS . gep2 == 0		10597886	0					
ANR	10597934	EqualityExpression	exc -> GS . gep2 == 0		10597886	0		==			
ANR	10597935	MemberAccess	exc -> GS . gep2		10597886	0					
ANR	10597936	PtrMemberAccess	exc -> GS		10597886	0					
ANR	10597937	Identifier	exc		10597886	0					
ANR	10597938	Identifier	GS		10597886	1					
ANR	10597939	Identifier	gep2		10597886	1					
ANR	10597940	PrimaryExpression	0		10597886	1					
ANR	10597941	PrimaryExpression	1		10597886	1					
ANR	10597942	MemberAccess	exc -> zp2 . n_contours		10597886	2					
ANR	10597943	PtrMemberAccess	exc -> zp2		10597886	0					
ANR	10597944	Identifier	exc		10597886	0					
ANR	10597945	Identifier	zp2		10597886	1					
ANR	10597946	Identifier	n_contours		10597886	1					
ANR	10597947	IfStatement	"if ( BOUNDS ( contour , bounds ) )"		10597886	7					
ANR	10597948	Condition	"BOUNDS ( contour , bounds )"	5535:9:196884:196908	10597886	0	True				
ANR	10597949	CallExpression	"BOUNDS ( contour , bounds )"		10597886	0					
ANR	10597950	Callee	BOUNDS		10597886	0					
ANR	10597951	Identifier	BOUNDS		10597886	0					
ANR	10597952	ArgumentList	contour		10597886	1					
ANR	10597953	Argument	contour		10597886	0					
ANR	10597954	Identifier	contour		10597886	0					
ANR	10597955	Argument	bounds		10597886	1					
ANR	10597956	Identifier	bounds		10597886	0					
ANR	10597957	CompoundStatement		14:4:299:299	10597886	1					
ANR	10597958	IfStatement	if ( exc -> pedantic_hinting )		10597886	0					
ANR	10597959	Condition	exc -> pedantic_hinting	5537:11:196929:196949	10597886	0	True				
ANR	10597960	PtrMemberAccess	exc -> pedantic_hinting		10597886	0					
ANR	10597961	Identifier	exc		10597886	0					
ANR	10597962	Identifier	pedantic_hinting		10597886	1					
ANR	10597963	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	5538:8:196961:197003	10597886	1	True				
ANR	10597964	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10597886	0		=			
ANR	10597965	PtrMemberAccess	exc -> error		10597886	0					
ANR	10597966	Identifier	exc		10597886	0					
ANR	10597967	Identifier	error		10597886	1					
ANR	10597968	CallExpression	FT_THROW ( Invalid_Reference )		10597886	1					
ANR	10597969	Callee	FT_THROW		10597886	0					
ANR	10597970	Identifier	FT_THROW		10597886	0					
ANR	10597971	ArgumentList	Invalid_Reference		10597886	1					
ANR	10597972	Argument	Invalid_Reference		10597886	0					
ANR	10597973	Identifier	Invalid_Reference		10597886	0					
ANR	10597974	ReturnStatement	return ;	5539:6:197011:197017	10597886	1	True				
ANR	10597975	IfStatement	"if ( Compute_Point_Displacement ( exc , & dx , & dy , & zp , & refp ) )"		10597886	8					
ANR	10597976	Condition	"Compute_Point_Displacement ( exc , & dx , & dy , & zp , & refp )"	5542:9:197035:197089	10597886	0	True				
ANR	10597977	CallExpression	"Compute_Point_Displacement ( exc , & dx , & dy , & zp , & refp )"		10597886	0					
ANR	10597978	Callee	Compute_Point_Displacement		10597886	0					
ANR	10597979	Identifier	Compute_Point_Displacement		10597886	0					
ANR	10597980	ArgumentList	exc		10597886	1					
ANR	10597981	Argument	exc		10597886	0					
ANR	10597982	Identifier	exc		10597886	0					
ANR	10597983	Argument	& dx		10597886	1					
ANR	10597984	UnaryOperationExpression	& dx		10597886	0					
ANR	10597985	UnaryOperator	&		10597886	0					
ANR	10597986	Identifier	dx		10597886	1					
ANR	10597987	Argument	& dy		10597886	2					
ANR	10597988	UnaryOperationExpression	& dy		10597886	0					
ANR	10597989	UnaryOperator	&		10597886	0					
ANR	10597990	Identifier	dy		10597886	1					
ANR	10597991	Argument	& zp		10597886	3					
ANR	10597992	UnaryOperationExpression	& zp		10597886	0					
ANR	10597993	UnaryOperator	&		10597886	0					
ANR	10597994	Identifier	zp		10597886	1					
ANR	10597995	Argument	& refp		10597886	4					
ANR	10597996	UnaryOperationExpression	& refp		10597886	0					
ANR	10597997	UnaryOperator	&		10597886	0					
ANR	10597998	Identifier	refp		10597886	1					
ANR	10597999	ReturnStatement	return ;	5543:6:197099:197105	10597886	1	True				
ANR	10598000	IfStatement	if ( contour == 0 )		10597886	9					
ANR	10598001	Condition	contour == 0	5545:9:197117:197128	10597886	0	True				
ANR	10598002	EqualityExpression	contour == 0		10597886	0		==			
ANR	10598003	Identifier	contour		10597886	0					
ANR	10598004	PrimaryExpression	0		10597886	1					
ANR	10598005	ExpressionStatement	start = 0	5546:6:197138:197147	10597886	1	True				
ANR	10598006	AssignmentExpression	start = 0		10597886	0		=			
ANR	10598007	Identifier	start		10597886	0					
ANR	10598008	PrimaryExpression	0		10597886	1					
ANR	10598009	ElseStatement	else		10597886	0					
ANR	10598010	ExpressionStatement	start = ( FT_UShort ) ( exc -> zp2 . contours [ contour - 1 ] + 1 - exc -> zp2 . first_point )	5548:6:197164:197271	10597886	0	True				
ANR	10598011	AssignmentExpression	start = ( FT_UShort ) ( exc -> zp2 . contours [ contour - 1 ] + 1 - exc -> zp2 . first_point )		10597886	0		=			
ANR	10598012	Identifier	start		10597886	0					
ANR	10598013	CastExpression	( FT_UShort ) ( exc -> zp2 . contours [ contour - 1 ] + 1 - exc -> zp2 . first_point )		10597886	1					
ANR	10598014	CastTarget	FT_UShort		10597886	0					
ANR	10598015	AdditiveExpression	exc -> zp2 . contours [ contour - 1 ] + 1 - exc -> zp2 . first_point		10597886	1		+			
ANR	10598016	ArrayIndexing	exc -> zp2 . contours [ contour - 1 ]		10597886	0					
ANR	10598017	MemberAccess	exc -> zp2 . contours		10597886	0					
ANR	10598018	PtrMemberAccess	exc -> zp2		10597886	0					
ANR	10598019	Identifier	exc		10597886	0					
ANR	10598020	Identifier	zp2		10597886	1					
ANR	10598021	Identifier	contours		10597886	1					
ANR	10598022	AdditiveExpression	contour - 1		10597886	1		-			
ANR	10598023	Identifier	contour		10597886	0					
ANR	10598024	PrimaryExpression	1		10597886	1					
ANR	10598025	AdditiveExpression	1 - exc -> zp2 . first_point		10597886	1		-			
ANR	10598026	PrimaryExpression	1		10597886	0					
ANR	10598027	MemberAccess	exc -> zp2 . first_point		10597886	1					
ANR	10598028	PtrMemberAccess	exc -> zp2		10597886	0					
ANR	10598029	Identifier	exc		10597886	0					
ANR	10598030	Identifier	zp2		10597886	1					
ANR	10598031	Identifier	first_point		10597886	1					
ANR	10598032	IfStatement	if ( exc -> GS . gep2 == 0 )		10597886	10					
ANR	10598033	Condition	exc -> GS . gep2 == 0	5552:9:197345:197361	10597886	0	True				
ANR	10598034	EqualityExpression	exc -> GS . gep2 == 0		10597886	0		==			
ANR	10598035	MemberAccess	exc -> GS . gep2		10597886	0					
ANR	10598036	PtrMemberAccess	exc -> GS		10597886	0					
ANR	10598037	Identifier	exc		10597886	0					
ANR	10598038	Identifier	GS		10597886	1					
ANR	10598039	Identifier	gep2		10597886	1					
ANR	10598040	PrimaryExpression	0		10597886	1					
ANR	10598041	ExpressionStatement	limit = exc -> zp2 . n_points	5553:6:197371:197396	10597886	1	True				
ANR	10598042	AssignmentExpression	limit = exc -> zp2 . n_points		10597886	0		=			
ANR	10598043	Identifier	limit		10597886	0					
ANR	10598044	MemberAccess	exc -> zp2 . n_points		10597886	1					
ANR	10598045	PtrMemberAccess	exc -> zp2		10597886	0					
ANR	10598046	Identifier	exc		10597886	0					
ANR	10598047	Identifier	zp2		10597886	1					
ANR	10598048	Identifier	n_points		10597886	1					
ANR	10598049	ElseStatement	else		10597886	0					
ANR	10598050	ExpressionStatement	limit = ( FT_UShort ) ( exc -> zp2 . contours [ contour ] - exc -> zp2 . first_point + 1 )	5555:6:197413:197516	10597886	0	True				
ANR	10598051	AssignmentExpression	limit = ( FT_UShort ) ( exc -> zp2 . contours [ contour ] - exc -> zp2 . first_point + 1 )		10597886	0		=			
ANR	10598052	Identifier	limit		10597886	0					
ANR	10598053	CastExpression	( FT_UShort ) ( exc -> zp2 . contours [ contour ] - exc -> zp2 . first_point + 1 )		10597886	1					
ANR	10598054	CastTarget	FT_UShort		10597886	0					
ANR	10598055	AdditiveExpression	exc -> zp2 . contours [ contour ] - exc -> zp2 . first_point + 1		10597886	1		-			
ANR	10598056	ArrayIndexing	exc -> zp2 . contours [ contour ]		10597886	0					
ANR	10598057	MemberAccess	exc -> zp2 . contours		10597886	0					
ANR	10598058	PtrMemberAccess	exc -> zp2		10597886	0					
ANR	10598059	Identifier	exc		10597886	0					
ANR	10598060	Identifier	zp2		10597886	1					
ANR	10598061	Identifier	contours		10597886	1					
ANR	10598062	Identifier	contour		10597886	1					
ANR	10598063	AdditiveExpression	exc -> zp2 . first_point + 1		10597886	1		+			
ANR	10598064	MemberAccess	exc -> zp2 . first_point		10597886	0					
ANR	10598065	PtrMemberAccess	exc -> zp2		10597886	0					
ANR	10598066	Identifier	exc		10597886	0					
ANR	10598067	Identifier	zp2		10597886	1					
ANR	10598068	Identifier	first_point		10597886	1					
ANR	10598069	PrimaryExpression	1		10597886	1					
ANR	10598070	ForStatement	for ( i = start ; i < limit ; i ++ )		10597886	11					
ANR	10598071	ForInit	i = start ;	5558:10:197529:197538	10597886	0	True				
ANR	10598072	AssignmentExpression	i = start		10597886	0		=			
ANR	10598073	Identifier	i		10597886	0					
ANR	10598074	Identifier	start		10597886	1					
ANR	10598075	Condition	i < limit	5558:21:197540:197548	10597886	1	True				
ANR	10598076	RelationalExpression	i < limit		10597886	0		<			
ANR	10598077	Identifier	i		10597886	0					
ANR	10598078	Identifier	limit		10597886	1					
ANR	10598079	PostIncDecOperationExpression	i ++	5558:32:197551:197553	10597886	2	True				
ANR	10598080	Identifier	i		10597886	0					
ANR	10598081	IncDec	++		10597886	1					
ANR	10598082	CompoundStatement		37:4:944:944	10597886	3					
ANR	10598083	IfStatement	if ( zp . cur != exc -> zp2 . cur || refp != i )		10597886	0					
ANR	10598084	Condition	zp . cur != exc -> zp2 . cur || refp != i	5560:11:197574:197608	10597886	0	True				
ANR	10598085	OrExpression	zp . cur != exc -> zp2 . cur || refp != i		10597886	0		||			
ANR	10598086	EqualityExpression	zp . cur != exc -> zp2 . cur		10597886	0		!=			
ANR	10598087	MemberAccess	zp . cur		10597886	0					
ANR	10598088	Identifier	zp		10597886	0					
ANR	10598089	Identifier	cur		10597886	1					
ANR	10598090	MemberAccess	exc -> zp2 . cur		10597886	1					
ANR	10598091	PtrMemberAccess	exc -> zp2		10597886	0					
ANR	10598092	Identifier	exc		10597886	0					
ANR	10598093	Identifier	zp2		10597886	1					
ANR	10598094	Identifier	cur		10597886	1					
ANR	10598095	EqualityExpression	refp != i		10597886	1		!=			
ANR	10598096	Identifier	refp		10597886	0					
ANR	10598097	Identifier	i		10597886	1					
ANR	10598098	ExpressionStatement	"Move_Zp2_Point ( exc , i , dx , dy , TRUE )"	5561:8:197620:197658	10597886	1	True				
ANR	10598099	CallExpression	"Move_Zp2_Point ( exc , i , dx , dy , TRUE )"		10597886	0					
ANR	10598100	Callee	Move_Zp2_Point		10597886	0					
ANR	10598101	Identifier	Move_Zp2_Point		10597886	0					
ANR	10598102	ArgumentList	exc		10597886	1					
ANR	10598103	Argument	exc		10597886	0					
ANR	10598104	Identifier	exc		10597886	0					
ANR	10598105	Argument	i		10597886	1					
ANR	10598106	Identifier	i		10597886	0					
ANR	10598107	Argument	dx		10597886	2					
ANR	10598108	Identifier	dx		10597886	0					
ANR	10598109	Argument	dy		10597886	3					
ANR	10598110	Identifier	dy		10597886	0					
ANR	10598111	Argument	TRUE		10597886	4					
ANR	10598112	Identifier	TRUE		10597886	0					
ANR	10598113	ReturnType	static void		10597886	1					
ANR	10598114	Identifier	Ins_SHC		10597886	2					
ANR	10598115	ParameterList	"TT_ExecContext exc , FT_Long * args"		10597886	3					
ANR	10598116	Parameter	TT_ExecContext exc	5521:11:196559:196577	10597886	0	True				
ANR	10598117	ParameterType	TT_ExecContext		10597886	0					
ANR	10598118	Identifier	exc		10597886	1					
ANR	10598119	Parameter	FT_Long * args	5522:11:196591:196610	10597886	1	True				
ANR	10598120	ParameterType	FT_Long *		10597886	0					
ANR	10598121	Identifier	args		10597886	1					
ANR	10598122	CFGEntryNode	ENTRY		10597886		True				
ANR	10598123	CFGExitNode	EXIT		10597886		True				
ANR	10598124	Symbol	* exc		10597886						
ANR	10598125	Symbol	refp		10597886						
ANR	10598126	Symbol	* args		10597886						
ANR	10598127	Symbol	Compute_Point_Displacement		10597886						
ANR	10598128	Symbol	exc		10597886						
ANR	10598129	Symbol	Invalid_Reference		10597886						
ANR	10598130	Symbol	dx		10597886						
ANR	10598131	Symbol	dy		10597886						
ANR	10598132	Symbol	BOUNDS		10597886						
ANR	10598133	Symbol	limit		10597886						
ANR	10598134	Symbol	zp . cur		10597886						
ANR	10598135	Symbol	exc -> zp2 . contours		10597886						
ANR	10598136	Symbol	exc -> zp2 . n_contours		10597886						
ANR	10598137	Symbol	exc -> error		10597886						
ANR	10598138	Symbol	& dy		10597886						
ANR	10598139	Symbol	& dx		10597886						
ANR	10598140	Symbol	& zp		10597886						
ANR	10598141	Symbol	* * exc		10597886						
ANR	10598142	Symbol	& refp		10597886						
ANR	10598143	Symbol	exc -> zp2 . first_point		10597886						
ANR	10598144	Symbol	start		10597886						
ANR	10598145	Symbol	exc -> pedantic_hinting		10597886						
ANR	10598146	Symbol	exc -> zp2 . cur		10597886						
ANR	10598147	Symbol	i		10597886						
ANR	10598148	Symbol	TRUE		10597886						
ANR	10598149	Symbol	exc -> GS . gep2		10597886						
ANR	10598150	Symbol	exc -> GS		10597886						
ANR	10598151	Symbol	contour		10597886						
ANR	10598152	Symbol	FT_THROW		10597886						
ANR	10598153	Symbol	args		10597886						
ANR	10598154	Symbol	exc -> zp2		10597886						
ANR	10598155	Symbol	* contour		10597886						
ANR	10598156	Symbol	exc -> zp2 . n_points		10597886						
ANR	10598157	Symbol	zp		10597886						
ANR	10598158	Symbol	* exc -> zp2 . contours		10597886						
ANR	10598159	Symbol	bounds		10597886						
ANR	10598160	Symbol	* exc -> zp2		10597886						
ANR	10598161	Function	Ins_SHZ	5572:2:198142:199310							
ANR	10598162	FunctionDef	"Ins_SHZ (TT_ExecContext exc , FT_Long * args)"		10598161	0					
ANR	10598163	CompoundStatement		5575:2:198222:199310	10598161	0					
ANR	10598164	IdentifierDeclStatement	TT_GlyphZoneRec zp ;	5576:4:198228:198247	10598161	0	True				
ANR	10598165	IdentifierDecl	zp		10598161	0					
ANR	10598166	IdentifierDeclType	TT_GlyphZoneRec		10598161	0					
ANR	10598167	Identifier	zp		10598161	1					
ANR	10598168	IdentifierDeclStatement	FT_UShort refp ;	5577:4:198253:198274	10598161	1	True				
ANR	10598169	IdentifierDecl	refp		10598161	0					
ANR	10598170	IdentifierDeclType	FT_UShort		10598161	0					
ANR	10598171	Identifier	refp		10598161	1					
ANR	10598172	IdentifierDeclStatement	"FT_F26Dot6 dx , dy ;"	5578:4:198280:198324	10598161	2	True				
ANR	10598173	IdentifierDecl	dx		10598161	0					
ANR	10598174	IdentifierDeclType	FT_F26Dot6		10598161	0					
ANR	10598175	Identifier	dx		10598161	1					
ANR	10598176	IdentifierDecl	dy		10598161	1					
ANR	10598177	IdentifierDeclType	FT_F26Dot6		10598161	0					
ANR	10598178	Identifier	dy		10598161	1					
ANR	10598179	IdentifierDeclStatement	"FT_UShort limit , i ;"	5581:4:198331:198356	10598161	3	True				
ANR	10598180	IdentifierDecl	limit		10598161	0					
ANR	10598181	IdentifierDeclType	FT_UShort		10598161	0					
ANR	10598182	Identifier	limit		10598161	1					
ANR	10598183	IdentifierDecl	i		10598161	1					
ANR	10598184	IdentifierDeclType	FT_UShort		10598161	0					
ANR	10598185	Identifier	i		10598161	1					
ANR	10598186	IfStatement	"if ( BOUNDS ( args [ 0 ] , 2 ) )"		10598161	4					
ANR	10598187	Condition	"BOUNDS ( args [ 0 ] , 2 )"	5584:9:198369:198388	10598161	0	True				
ANR	10598188	CallExpression	"BOUNDS ( args [ 0 ] , 2 )"		10598161	0					
ANR	10598189	Callee	BOUNDS		10598161	0					
ANR	10598190	Identifier	BOUNDS		10598161	0					
ANR	10598191	ArgumentList	args [ 0 ]		10598161	1					
ANR	10598192	Argument	args [ 0 ]		10598161	0					
ANR	10598193	ArrayIndexing	args [ 0 ]		10598161	0					
ANR	10598194	Identifier	args		10598161	0					
ANR	10598195	PrimaryExpression	0		10598161	1					
ANR	10598196	Argument	2		10598161	1					
ANR	10598197	PrimaryExpression	2		10598161	0					
ANR	10598198	CompoundStatement		11:4:173:173	10598161	1					
ANR	10598199	IfStatement	if ( exc -> pedantic_hinting )		10598161	0					
ANR	10598200	Condition	exc -> pedantic_hinting	5586:11:198409:198429	10598161	0	True				
ANR	10598201	PtrMemberAccess	exc -> pedantic_hinting		10598161	0					
ANR	10598202	Identifier	exc		10598161	0					
ANR	10598203	Identifier	pedantic_hinting		10598161	1					
ANR	10598204	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	5587:8:198441:198483	10598161	1	True				
ANR	10598205	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10598161	0		=			
ANR	10598206	PtrMemberAccess	exc -> error		10598161	0					
ANR	10598207	Identifier	exc		10598161	0					
ANR	10598208	Identifier	error		10598161	1					
ANR	10598209	CallExpression	FT_THROW ( Invalid_Reference )		10598161	1					
ANR	10598210	Callee	FT_THROW		10598161	0					
ANR	10598211	Identifier	FT_THROW		10598161	0					
ANR	10598212	ArgumentList	Invalid_Reference		10598161	1					
ANR	10598213	Argument	Invalid_Reference		10598161	0					
ANR	10598214	Identifier	Invalid_Reference		10598161	0					
ANR	10598215	ReturnStatement	return ;	5588:6:198491:198497	10598161	1	True				
ANR	10598216	IfStatement	"if ( Compute_Point_Displacement ( exc , & dx , & dy , & zp , & refp ) )"		10598161	5					
ANR	10598217	Condition	"Compute_Point_Displacement ( exc , & dx , & dy , & zp , & refp )"	5591:9:198515:198569	10598161	0	True				
ANR	10598218	CallExpression	"Compute_Point_Displacement ( exc , & dx , & dy , & zp , & refp )"		10598161	0					
ANR	10598219	Callee	Compute_Point_Displacement		10598161	0					
ANR	10598220	Identifier	Compute_Point_Displacement		10598161	0					
ANR	10598221	ArgumentList	exc		10598161	1					
ANR	10598222	Argument	exc		10598161	0					
ANR	10598223	Identifier	exc		10598161	0					
ANR	10598224	Argument	& dx		10598161	1					
ANR	10598225	UnaryOperationExpression	& dx		10598161	0					
ANR	10598226	UnaryOperator	&		10598161	0					
ANR	10598227	Identifier	dx		10598161	1					
ANR	10598228	Argument	& dy		10598161	2					
ANR	10598229	UnaryOperationExpression	& dy		10598161	0					
ANR	10598230	UnaryOperator	&		10598161	0					
ANR	10598231	Identifier	dy		10598161	1					
ANR	10598232	Argument	& zp		10598161	3					
ANR	10598233	UnaryOperationExpression	& zp		10598161	0					
ANR	10598234	UnaryOperator	&		10598161	0					
ANR	10598235	Identifier	zp		10598161	1					
ANR	10598236	Argument	& refp		10598161	4					
ANR	10598237	UnaryOperationExpression	& refp		10598161	0					
ANR	10598238	UnaryOperator	&		10598161	0					
ANR	10598239	Identifier	refp		10598161	1					
ANR	10598240	ReturnStatement	return ;	5592:6:198579:198585	10598161	1	True				
ANR	10598241	IfStatement	if ( exc -> GS . gep2 == 0 )		10598161	6					
ANR	10598242	Condition	exc -> GS . gep2 == 0	5598:9:198877:198893	10598161	0	True				
ANR	10598243	EqualityExpression	exc -> GS . gep2 == 0		10598161	0		==			
ANR	10598244	MemberAccess	exc -> GS . gep2		10598161	0					
ANR	10598245	PtrMemberAccess	exc -> GS		10598161	0					
ANR	10598246	Identifier	exc		10598161	0					
ANR	10598247	Identifier	GS		10598161	1					
ANR	10598248	Identifier	gep2		10598161	1					
ANR	10598249	PrimaryExpression	0		10598161	1					
ANR	10598250	ExpressionStatement	limit = ( FT_UShort ) exc -> zp2 . n_points	5599:6:198903:198939	10598161	1	True				
ANR	10598251	AssignmentExpression	limit = ( FT_UShort ) exc -> zp2 . n_points		10598161	0		=			
ANR	10598252	Identifier	limit		10598161	0					
ANR	10598253	CastExpression	( FT_UShort ) exc -> zp2 . n_points		10598161	1					
ANR	10598254	CastTarget	FT_UShort		10598161	0					
ANR	10598255	MemberAccess	exc -> zp2 . n_points		10598161	1					
ANR	10598256	PtrMemberAccess	exc -> zp2		10598161	0					
ANR	10598257	Identifier	exc		10598161	0					
ANR	10598258	Identifier	zp2		10598161	1					
ANR	10598259	Identifier	n_points		10598161	1					
ANR	10598260	ElseStatement	else		10598161	0					
ANR	10598261	IfStatement	if ( exc -> GS . gep2 == 1 && exc -> zp2 . n_contours > 0 )		10598161	0					
ANR	10598262	Condition	exc -> GS . gep2 == 1 && exc -> zp2 . n_contours > 0	5600:14:198955:198998	10598161	0	True				
ANR	10598263	AndExpression	exc -> GS . gep2 == 1 && exc -> zp2 . n_contours > 0		10598161	0		&&			
ANR	10598264	EqualityExpression	exc -> GS . gep2 == 1		10598161	0		==			
ANR	10598265	MemberAccess	exc -> GS . gep2		10598161	0					
ANR	10598266	PtrMemberAccess	exc -> GS		10598161	0					
ANR	10598267	Identifier	exc		10598161	0					
ANR	10598268	Identifier	GS		10598161	1					
ANR	10598269	Identifier	gep2		10598161	1					
ANR	10598270	PrimaryExpression	1		10598161	1					
ANR	10598271	RelationalExpression	exc -> zp2 . n_contours > 0		10598161	1		>			
ANR	10598272	MemberAccess	exc -> zp2 . n_contours		10598161	0					
ANR	10598273	PtrMemberAccess	exc -> zp2		10598161	0					
ANR	10598274	Identifier	exc		10598161	0					
ANR	10598275	Identifier	zp2		10598161	1					
ANR	10598276	Identifier	n_contours		10598161	1					
ANR	10598277	PrimaryExpression	0		10598161	1					
ANR	10598278	ExpressionStatement	limit = ( FT_UShort ) ( exc -> zp2 . contours [ exc -> zp2 . n_contours - 1 ] + 1 )	5601:6:199008:199077	10598161	1	True				
ANR	10598279	AssignmentExpression	limit = ( FT_UShort ) ( exc -> zp2 . contours [ exc -> zp2 . n_contours - 1 ] + 1 )		10598161	0		=			
ANR	10598280	Identifier	limit		10598161	0					
ANR	10598281	CastExpression	( FT_UShort ) ( exc -> zp2 . contours [ exc -> zp2 . n_contours - 1 ] + 1 )		10598161	1					
ANR	10598282	CastTarget	FT_UShort		10598161	0					
ANR	10598283	AdditiveExpression	exc -> zp2 . contours [ exc -> zp2 . n_contours - 1 ] + 1		10598161	1		+			
ANR	10598284	ArrayIndexing	exc -> zp2 . contours [ exc -> zp2 . n_contours - 1 ]		10598161	0					
ANR	10598285	MemberAccess	exc -> zp2 . contours		10598161	0					
ANR	10598286	PtrMemberAccess	exc -> zp2		10598161	0					
ANR	10598287	Identifier	exc		10598161	0					
ANR	10598288	Identifier	zp2		10598161	1					
ANR	10598289	Identifier	contours		10598161	1					
ANR	10598290	AdditiveExpression	exc -> zp2 . n_contours - 1		10598161	1		-			
ANR	10598291	MemberAccess	exc -> zp2 . n_contours		10598161	0					
ANR	10598292	PtrMemberAccess	exc -> zp2		10598161	0					
ANR	10598293	Identifier	exc		10598161	0					
ANR	10598294	Identifier	zp2		10598161	1					
ANR	10598295	Identifier	n_contours		10598161	1					
ANR	10598296	PrimaryExpression	1		10598161	1					
ANR	10598297	PrimaryExpression	1		10598161	1					
ANR	10598298	ElseStatement	else		10598161	0					
ANR	10598299	ExpressionStatement	limit = 0	5603:6:199094:199103	10598161	0	True				
ANR	10598300	AssignmentExpression	limit = 0		10598161	0		=			
ANR	10598301	Identifier	limit		10598161	0					
ANR	10598302	PrimaryExpression	0		10598161	1					
ANR	10598303	ForStatement	for ( i = 0 ; i < limit ; i ++ )		10598161	7					
ANR	10598304	ForInit	i = 0 ;	5606:10:199174:199179	10598161	0	True				
ANR	10598305	AssignmentExpression	i = 0		10598161	0		=			
ANR	10598306	Identifier	i		10598161	0					
ANR	10598307	PrimaryExpression	0		10598161	1					
ANR	10598308	Condition	i < limit	5606:17:199181:199189	10598161	1	True				
ANR	10598309	RelationalExpression	i < limit		10598161	0		<			
ANR	10598310	Identifier	i		10598161	0					
ANR	10598311	Identifier	limit		10598161	1					
ANR	10598312	PostIncDecOperationExpression	i ++	5606:28:199192:199194	10598161	2	True				
ANR	10598313	Identifier	i		10598161	0					
ANR	10598314	IncDec	++		10598161	1					
ANR	10598315	CompoundStatement		33:4:979:979	10598161	3					
ANR	10598316	IfStatement	if ( zp . cur != exc -> zp2 . cur || refp != i )		10598161	0					
ANR	10598317	Condition	zp . cur != exc -> zp2 . cur || refp != i	5608:11:199215:199249	10598161	0	True				
ANR	10598318	OrExpression	zp . cur != exc -> zp2 . cur || refp != i		10598161	0		||			
ANR	10598319	EqualityExpression	zp . cur != exc -> zp2 . cur		10598161	0		!=			
ANR	10598320	MemberAccess	zp . cur		10598161	0					
ANR	10598321	Identifier	zp		10598161	0					
ANR	10598322	Identifier	cur		10598161	1					
ANR	10598323	MemberAccess	exc -> zp2 . cur		10598161	1					
ANR	10598324	PtrMemberAccess	exc -> zp2		10598161	0					
ANR	10598325	Identifier	exc		10598161	0					
ANR	10598326	Identifier	zp2		10598161	1					
ANR	10598327	Identifier	cur		10598161	1					
ANR	10598328	EqualityExpression	refp != i		10598161	1		!=			
ANR	10598329	Identifier	refp		10598161	0					
ANR	10598330	Identifier	i		10598161	1					
ANR	10598331	ExpressionStatement	"Move_Zp2_Point ( exc , i , dx , dy , FALSE )"	5609:8:199261:199300	10598161	1	True				
ANR	10598332	CallExpression	"Move_Zp2_Point ( exc , i , dx , dy , FALSE )"		10598161	0					
ANR	10598333	Callee	Move_Zp2_Point		10598161	0					
ANR	10598334	Identifier	Move_Zp2_Point		10598161	0					
ANR	10598335	ArgumentList	exc		10598161	1					
ANR	10598336	Argument	exc		10598161	0					
ANR	10598337	Identifier	exc		10598161	0					
ANR	10598338	Argument	i		10598161	1					
ANR	10598339	Identifier	i		10598161	0					
ANR	10598340	Argument	dx		10598161	2					
ANR	10598341	Identifier	dx		10598161	0					
ANR	10598342	Argument	dy		10598161	3					
ANR	10598343	Identifier	dy		10598161	0					
ANR	10598344	Argument	FALSE		10598161	4					
ANR	10598345	Identifier	FALSE		10598161	0					
ANR	10598346	ReturnType	static void		10598161	1					
ANR	10598347	Identifier	Ins_SHZ		10598161	2					
ANR	10598348	ParameterList	"TT_ExecContext exc , FT_Long * args"		10598161	3					
ANR	10598349	Parameter	TT_ExecContext exc	5573:11:198165:198183	10598161	0	True				
ANR	10598350	ParameterType	TT_ExecContext		10598161	0					
ANR	10598351	Identifier	exc		10598161	1					
ANR	10598352	Parameter	FT_Long * args	5574:11:198197:198216	10598161	1	True				
ANR	10598353	ParameterType	FT_Long *		10598161	0					
ANR	10598354	Identifier	args		10598161	1					
ANR	10598355	CFGEntryNode	ENTRY		10598161		True				
ANR	10598356	CFGExitNode	EXIT		10598161		True				
ANR	10598357	Symbol	* exc		10598161						
ANR	10598358	Symbol	refp		10598161						
ANR	10598359	Symbol	* exc -> zp2 . n_contours		10598161						
ANR	10598360	Symbol	* args		10598161						
ANR	10598361	Symbol	Compute_Point_Displacement		10598161						
ANR	10598362	Symbol	exc		10598161						
ANR	10598363	Symbol	Invalid_Reference		10598161						
ANR	10598364	Symbol	dx		10598161						
ANR	10598365	Symbol	dy		10598161						
ANR	10598366	Symbol	BOUNDS		10598161						
ANR	10598367	Symbol	limit		10598161						
ANR	10598368	Symbol	zp . cur		10598161						
ANR	10598369	Symbol	exc -> zp2 . contours		10598161						
ANR	10598370	Symbol	exc -> zp2 . n_contours		10598161						
ANR	10598371	Symbol	exc -> error		10598161						
ANR	10598372	Symbol	& dy		10598161						
ANR	10598373	Symbol	& dx		10598161						
ANR	10598374	Symbol	& zp		10598161						
ANR	10598375	Symbol	* * exc		10598161						
ANR	10598376	Symbol	& refp		10598161						
ANR	10598377	Symbol	exc -> pedantic_hinting		10598161						
ANR	10598378	Symbol	exc -> zp2 . cur		10598161						
ANR	10598379	Symbol	i		10598161						
ANR	10598380	Symbol	exc -> GS . gep2		10598161						
ANR	10598381	Symbol	exc -> GS		10598161						
ANR	10598382	Symbol	FT_THROW		10598161						
ANR	10598383	Symbol	args		10598161						
ANR	10598384	Symbol	exc -> zp2		10598161						
ANR	10598385	Symbol	exc -> zp2 . n_points		10598161						
ANR	10598386	Symbol	zp		10598161						
ANR	10598387	Symbol	* exc -> zp2 . contours		10598161						
ANR	10598388	Symbol	* exc -> zp2		10598161						
ANR	10598389	Symbol	FALSE		10598161						
ANR	10598390	Function	Ins_SHPIX	5620:2:199784:205239							
ANR	10598391	FunctionDef	"Ins_SHPIX (TT_ExecContext exc , FT_Long * args)"		10598390	0					
ANR	10598392	CompoundStatement		5623:2:199868:205239	10598390	0					
ANR	10598393	IdentifierDeclStatement	"FT_F26Dot6 dx , dy ;"	5624:4:199874:199892	10598390	0	True				
ANR	10598394	IdentifierDecl	dx		10598390	0					
ANR	10598395	IdentifierDeclType	FT_F26Dot6		10598390	0					
ANR	10598396	Identifier	dx		10598390	1					
ANR	10598397	IdentifierDecl	dy		10598390	1					
ANR	10598398	IdentifierDeclType	FT_F26Dot6		10598390	0					
ANR	10598399	Identifier	dy		10598390	1					
ANR	10598400	IdentifierDeclStatement	FT_UShort point ;	5625:4:199898:199915	10598390	1	True				
ANR	10598401	IdentifierDecl	point		10598390	0					
ANR	10598402	IdentifierDeclType	FT_UShort		10598390	0					
ANR	10598403	Identifier	point		10598390	1					
ANR	10598404	IdentifierDeclStatement	"FT_Int B1 , B2 ;"	5627:4:199967:199985	10598390	2	True				
ANR	10598405	IdentifierDecl	B1		10598390	0					
ANR	10598406	IdentifierDeclType	FT_Int		10598390	0					
ANR	10598407	Identifier	B1		10598390	1					
ANR	10598408	IdentifierDecl	B2		10598390	1					
ANR	10598409	IdentifierDeclType	FT_Int		10598390	0					
ANR	10598410	Identifier	B2		10598390	1					
ANR	10598411	IdentifierDeclStatement	FT_Bool in_twilight = FT_BOOL ( exc -> GS . gep0 == 0 || exc -> GS . gep1 == 0 || exc -> GS . gep2 == 0 ) ;	5630:4:200041:200215	10598390	3	True				
ANR	10598412	IdentifierDecl	in_twilight = FT_BOOL ( exc -> GS . gep0 == 0 || exc -> GS . gep1 == 0 || exc -> GS . gep2 == 0 )		10598390	0					
ANR	10598413	IdentifierDeclType	FT_Bool		10598390	0					
ANR	10598414	Identifier	in_twilight		10598390	1					
ANR	10598415	AssignmentExpression	in_twilight = FT_BOOL ( exc -> GS . gep0 == 0 || exc -> GS . gep1 == 0 || exc -> GS . gep2 == 0 )		10598390	2		=			
ANR	10598416	Identifier	in_twilight		10598390	0					
ANR	10598417	CallExpression	FT_BOOL ( exc -> GS . gep0 == 0 || exc -> GS . gep1 == 0 || exc -> GS . gep2 == 0 )		10598390	1					
ANR	10598418	Callee	FT_BOOL		10598390	0					
ANR	10598419	Identifier	FT_BOOL		10598390	0					
ANR	10598420	ArgumentList	exc -> GS . gep0 == 0 || exc -> GS . gep1 == 0 || exc -> GS . gep2 == 0		10598390	1					
ANR	10598421	Argument	exc -> GS . gep0 == 0 || exc -> GS . gep1 == 0 || exc -> GS . gep2 == 0		10598390	0					
ANR	10598422	OrExpression	exc -> GS . gep0 == 0 || exc -> GS . gep1 == 0 || exc -> GS . gep2 == 0		10598390	0		||			
ANR	10598423	EqualityExpression	exc -> GS . gep0 == 0		10598390	0		==			
ANR	10598424	MemberAccess	exc -> GS . gep0		10598390	0					
ANR	10598425	PtrMemberAccess	exc -> GS		10598390	0					
ANR	10598426	Identifier	exc		10598390	0					
ANR	10598427	Identifier	GS		10598390	1					
ANR	10598428	Identifier	gep0		10598390	1					
ANR	10598429	PrimaryExpression	0		10598390	1					
ANR	10598430	OrExpression	exc -> GS . gep1 == 0 || exc -> GS . gep2 == 0		10598390	1		||			
ANR	10598431	EqualityExpression	exc -> GS . gep1 == 0		10598390	0		==			
ANR	10598432	MemberAccess	exc -> GS . gep1		10598390	0					
ANR	10598433	PtrMemberAccess	exc -> GS		10598390	0					
ANR	10598434	Identifier	exc		10598390	0					
ANR	10598435	Identifier	GS		10598390	1					
ANR	10598436	Identifier	gep1		10598390	1					
ANR	10598437	PrimaryExpression	0		10598390	1					
ANR	10598438	EqualityExpression	exc -> GS . gep2 == 0		10598390	1		==			
ANR	10598439	MemberAccess	exc -> GS . gep2		10598390	0					
ANR	10598440	PtrMemberAccess	exc -> GS		10598390	0					
ANR	10598441	Identifier	exc		10598390	0					
ANR	10598442	Identifier	GS		10598390	1					
ANR	10598443	Identifier	gep2		10598390	1					
ANR	10598444	PrimaryExpression	0		10598390	1					
ANR	10598445	IfStatement	if ( exc -> top < exc -> GS . loop + 1 )		10598390	4					
ANR	10598446	Condition	exc -> top < exc -> GS . loop + 1	5637:9:200236:200262	10598390	0	True				
ANR	10598447	RelationalExpression	exc -> top < exc -> GS . loop + 1		10598390	0		<			
ANR	10598448	PtrMemberAccess	exc -> top		10598390	0					
ANR	10598449	Identifier	exc		10598390	0					
ANR	10598450	Identifier	top		10598390	1					
ANR	10598451	AdditiveExpression	exc -> GS . loop + 1		10598390	1		+			
ANR	10598452	MemberAccess	exc -> GS . loop		10598390	0					
ANR	10598453	PtrMemberAccess	exc -> GS		10598390	0					
ANR	10598454	Identifier	exc		10598390	0					
ANR	10598455	Identifier	GS		10598390	1					
ANR	10598456	Identifier	loop		10598390	1					
ANR	10598457	PrimaryExpression	1		10598390	1					
ANR	10598458	CompoundStatement		16:4:401:401	10598390	1					
ANR	10598459	IfStatement	if ( exc -> pedantic_hinting )		10598390	0					
ANR	10598460	Condition	exc -> pedantic_hinting	5639:11:200283:200303	10598390	0	True				
ANR	10598461	PtrMemberAccess	exc -> pedantic_hinting		10598390	0					
ANR	10598462	Identifier	exc		10598390	0					
ANR	10598463	Identifier	pedantic_hinting		10598390	1					
ANR	10598464	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	5640:8:200315:200357	10598390	1	True				
ANR	10598465	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10598390	0		=			
ANR	10598466	PtrMemberAccess	exc -> error		10598390	0					
ANR	10598467	Identifier	exc		10598390	0					
ANR	10598468	Identifier	error		10598390	1					
ANR	10598469	CallExpression	FT_THROW ( Invalid_Reference )		10598390	1					
ANR	10598470	Callee	FT_THROW		10598390	0					
ANR	10598471	Identifier	FT_THROW		10598390	0					
ANR	10598472	ArgumentList	Invalid_Reference		10598390	1					
ANR	10598473	Argument	Invalid_Reference		10598390	0					
ANR	10598474	Identifier	Invalid_Reference		10598390	0					
ANR	10598475	GotoStatement	goto Fail ;	5641:6:200365:200374	10598390	1	True				
ANR	10598476	Identifier	Fail		10598390	0					
ANR	10598477	ExpressionStatement	"dx = TT_MulFix14 ( args [ 0 ] , exc -> GS . freeVector . x )"	5644:4:200387:200436	10598390	5	True				
ANR	10598478	AssignmentExpression	"dx = TT_MulFix14 ( args [ 0 ] , exc -> GS . freeVector . x )"		10598390	0		=			
ANR	10598479	Identifier	dx		10598390	0					
ANR	10598480	CallExpression	"TT_MulFix14 ( args [ 0 ] , exc -> GS . freeVector . x )"		10598390	1					
ANR	10598481	Callee	TT_MulFix14		10598390	0					
ANR	10598482	Identifier	TT_MulFix14		10598390	0					
ANR	10598483	ArgumentList	args [ 0 ]		10598390	1					
ANR	10598484	Argument	args [ 0 ]		10598390	0					
ANR	10598485	ArrayIndexing	args [ 0 ]		10598390	0					
ANR	10598486	Identifier	args		10598390	0					
ANR	10598487	PrimaryExpression	0		10598390	1					
ANR	10598488	Argument	exc -> GS . freeVector . x		10598390	1					
ANR	10598489	MemberAccess	exc -> GS . freeVector . x		10598390	0					
ANR	10598490	MemberAccess	exc -> GS . freeVector		10598390	0					
ANR	10598491	PtrMemberAccess	exc -> GS		10598390	0					
ANR	10598492	Identifier	exc		10598390	0					
ANR	10598493	Identifier	GS		10598390	1					
ANR	10598494	Identifier	freeVector		10598390	1					
ANR	10598495	Identifier	x		10598390	1					
ANR	10598496	ExpressionStatement	"dy = TT_MulFix14 ( args [ 0 ] , exc -> GS . freeVector . y )"	5645:4:200442:200491	10598390	6	True				
ANR	10598497	AssignmentExpression	"dy = TT_MulFix14 ( args [ 0 ] , exc -> GS . freeVector . y )"		10598390	0		=			
ANR	10598498	Identifier	dy		10598390	0					
ANR	10598499	CallExpression	"TT_MulFix14 ( args [ 0 ] , exc -> GS . freeVector . y )"		10598390	1					
ANR	10598500	Callee	TT_MulFix14		10598390	0					
ANR	10598501	Identifier	TT_MulFix14		10598390	0					
ANR	10598502	ArgumentList	args [ 0 ]		10598390	1					
ANR	10598503	Argument	args [ 0 ]		10598390	0					
ANR	10598504	ArrayIndexing	args [ 0 ]		10598390	0					
ANR	10598505	Identifier	args		10598390	0					
ANR	10598506	PrimaryExpression	0		10598390	1					
ANR	10598507	Argument	exc -> GS . freeVector . y		10598390	1					
ANR	10598508	MemberAccess	exc -> GS . freeVector . y		10598390	0					
ANR	10598509	MemberAccess	exc -> GS . freeVector		10598390	0					
ANR	10598510	PtrMemberAccess	exc -> GS		10598390	0					
ANR	10598511	Identifier	exc		10598390	0					
ANR	10598512	Identifier	GS		10598390	1					
ANR	10598513	Identifier	freeVector		10598390	1					
ANR	10598514	Identifier	y		10598390	1					
ANR	10598515	WhileStatement	while ( exc -> GS . loop > 0 )		10598390	7					
ANR	10598516	Condition	exc -> GS . loop > 0	5647:12:200506:200521	10598390	0	True				
ANR	10598517	RelationalExpression	exc -> GS . loop > 0		10598390	0		>			
ANR	10598518	MemberAccess	exc -> GS . loop		10598390	0					
ANR	10598519	PtrMemberAccess	exc -> GS		10598390	0					
ANR	10598520	Identifier	exc		10598390	0					
ANR	10598521	Identifier	GS		10598390	1					
ANR	10598522	Identifier	loop		10598390	1					
ANR	10598523	PrimaryExpression	0		10598390	1					
ANR	10598524	CompoundStatement		26:4:660:660	10598390	1					
ANR	10598525	ExpressionStatement	exc -> args --	5649:6:200537:200548	10598390	0	True				
ANR	10598526	PostIncDecOperationExpression	exc -> args --		10598390	0					
ANR	10598527	PtrMemberAccess	exc -> args		10598390	0					
ANR	10598528	Identifier	exc		10598390	0					
ANR	10598529	Identifier	args		10598390	1					
ANR	10598530	IncDec	--		10598390	1					
ANR	10598531	ExpressionStatement	point = ( FT_UShort ) exc -> stack [ exc -> args ]	5651:6:200557:200597	10598390	1	True				
ANR	10598532	AssignmentExpression	point = ( FT_UShort ) exc -> stack [ exc -> args ]		10598390	0		=			
ANR	10598533	Identifier	point		10598390	0					
ANR	10598534	CastExpression	( FT_UShort ) exc -> stack [ exc -> args ]		10598390	1					
ANR	10598535	CastTarget	FT_UShort		10598390	0					
ANR	10598536	ArrayIndexing	exc -> stack [ exc -> args ]		10598390	1					
ANR	10598537	PtrMemberAccess	exc -> stack		10598390	0					
ANR	10598538	Identifier	exc		10598390	0					
ANR	10598539	Identifier	stack		10598390	1					
ANR	10598540	PtrMemberAccess	exc -> args		10598390	1					
ANR	10598541	Identifier	exc		10598390	0					
ANR	10598542	Identifier	args		10598390	1					
ANR	10598543	IfStatement	"if ( BOUNDS ( point , exc -> zp2 . n_points ) )"		10598390	2					
ANR	10598544	Condition	"BOUNDS ( point , exc -> zp2 . n_points )"	5653:11:200611:200644	10598390	0	True				
ANR	10598545	CallExpression	"BOUNDS ( point , exc -> zp2 . n_points )"		10598390	0					
ANR	10598546	Callee	BOUNDS		10598390	0					
ANR	10598547	Identifier	BOUNDS		10598390	0					
ANR	10598548	ArgumentList	point		10598390	1					
ANR	10598549	Argument	point		10598390	0					
ANR	10598550	Identifier	point		10598390	0					
ANR	10598551	Argument	exc -> zp2 . n_points		10598390	1					
ANR	10598552	MemberAccess	exc -> zp2 . n_points		10598390	0					
ANR	10598553	PtrMemberAccess	exc -> zp2		10598390	0					
ANR	10598554	Identifier	exc		10598390	0					
ANR	10598555	Identifier	zp2		10598390	1					
ANR	10598556	Identifier	n_points		10598390	1					
ANR	10598557	CompoundStatement		32:6:785:785	10598390	1					
ANR	10598558	IfStatement	if ( exc -> pedantic_hinting )		10598390	0					
ANR	10598559	Condition	exc -> pedantic_hinting	5655:13:200669:200689	10598390	0	True				
ANR	10598560	PtrMemberAccess	exc -> pedantic_hinting		10598390	0					
ANR	10598561	Identifier	exc		10598390	0					
ANR	10598562	Identifier	pedantic_hinting		10598390	1					
ANR	10598563	CompoundStatement		34:8:832:832	10598390	1					
ANR	10598564	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	5657:10:200713:200755	10598390	0	True				
ANR	10598565	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10598390	0		=			
ANR	10598566	PtrMemberAccess	exc -> error		10598390	0					
ANR	10598567	Identifier	exc		10598390	0					
ANR	10598568	Identifier	error		10598390	1					
ANR	10598569	CallExpression	FT_THROW ( Invalid_Reference )		10598390	1					
ANR	10598570	Callee	FT_THROW		10598390	0					
ANR	10598571	Identifier	FT_THROW		10598390	0					
ANR	10598572	ArgumentList	Invalid_Reference		10598390	1					
ANR	10598573	Argument	Invalid_Reference		10598390	0					
ANR	10598574	Identifier	Invalid_Reference		10598390	0					
ANR	10598575	ReturnStatement	return ;	5658:10:200767:200773	10598390	1	True				
ANR	10598576	ElseStatement	else		10598390	0					
ANR	10598577	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY )		10598390	0					
ANR	10598578	Condition	SUBPIXEL_HINTING_INFINALITY	5663:11:200861:200887	10598390	0	True				
ANR	10598579	Identifier	SUBPIXEL_HINTING_INFINALITY		10598390	0					
ANR	10598580	CompoundStatement		42:6:1028:1028	10598390	1					
ANR	10598581	IfStatement	if ( exc -> ignore_x_mode )		10598390	0					
ANR	10598582	Condition	exc -> ignore_x_mode	5673:13:201445:201462	10598390	0	True				
ANR	10598583	PtrMemberAccess	exc -> ignore_x_mode		10598390	0					
ANR	10598584	Identifier	exc		10598390	0					
ANR	10598585	Identifier	ignore_x_mode		10598390	1					
ANR	10598586	CompoundStatement		52:8:1605:1605	10598390	1					
ANR	10598587	IfStatement	if ( exc -> GS . freeVector . y != 0 )		10598390	0					
ANR	10598588	Condition	exc -> GS . freeVector . y != 0	5676:15:201539:201563	10598390	0	True				
ANR	10598589	EqualityExpression	exc -> GS . freeVector . y != 0		10598390	0		!=			
ANR	10598590	MemberAccess	exc -> GS . freeVector . y		10598390	0					
ANR	10598591	MemberAccess	exc -> GS . freeVector		10598390	0					
ANR	10598592	PtrMemberAccess	exc -> GS		10598390	0					
ANR	10598593	Identifier	exc		10598390	0					
ANR	10598594	Identifier	GS		10598390	1					
ANR	10598595	Identifier	freeVector		10598390	1					
ANR	10598596	Identifier	y		10598390	1					
ANR	10598597	PrimaryExpression	0		10598390	1					
ANR	10598598	ExpressionStatement	B1 = exc -> zp2 . cur [ point ] . y	5677:12:201579:201605	10598390	1	True				
ANR	10598599	AssignmentExpression	B1 = exc -> zp2 . cur [ point ] . y		10598390	0		=			
ANR	10598600	Identifier	B1		10598390	0					
ANR	10598601	MemberAccess	exc -> zp2 . cur [ point ] . y		10598390	1					
ANR	10598602	ArrayIndexing	exc -> zp2 . cur [ point ]		10598390	0					
ANR	10598603	MemberAccess	exc -> zp2 . cur		10598390	0					
ANR	10598604	PtrMemberAccess	exc -> zp2		10598390	0					
ANR	10598605	Identifier	exc		10598390	0					
ANR	10598606	Identifier	zp2		10598390	1					
ANR	10598607	Identifier	cur		10598390	1					
ANR	10598608	Identifier	point		10598390	1					
ANR	10598609	Identifier	y		10598390	1					
ANR	10598610	ElseStatement	else		10598390	0					
ANR	10598611	ExpressionStatement	B1 = exc -> zp2 . cur [ point ] . x	5679:12:201634:201660	10598390	0	True				
ANR	10598612	AssignmentExpression	B1 = exc -> zp2 . cur [ point ] . x		10598390	0		=			
ANR	10598613	Identifier	B1		10598390	0					
ANR	10598614	MemberAccess	exc -> zp2 . cur [ point ] . x		10598390	1					
ANR	10598615	ArrayIndexing	exc -> zp2 . cur [ point ]		10598390	0					
ANR	10598616	MemberAccess	exc -> zp2 . cur		10598390	0					
ANR	10598617	PtrMemberAccess	exc -> zp2		10598390	0					
ANR	10598618	Identifier	exc		10598390	0					
ANR	10598619	Identifier	zp2		10598390	1					
ANR	10598620	Identifier	cur		10598390	1					
ANR	10598621	Identifier	point		10598390	1					
ANR	10598622	Identifier	x		10598390	1					
ANR	10598623	IfStatement	if ( ! exc -> face -> sph_compatibility_mode && exc -> GS . freeVector . y != 0 )		10598390	1					
ANR	10598624	Condition	! exc -> face -> sph_compatibility_mode && exc -> GS . freeVector . y != 0	5681:15:201678:201755	10598390	0	True				
ANR	10598625	AndExpression	! exc -> face -> sph_compatibility_mode && exc -> GS . freeVector . y != 0		10598390	0		&&			
ANR	10598626	UnaryOperationExpression	! exc -> face -> sph_compatibility_mode		10598390	0					
ANR	10598627	UnaryOperator	!		10598390	0					
ANR	10598628	PtrMemberAccess	exc -> face -> sph_compatibility_mode		10598390	1					
ANR	10598629	PtrMemberAccess	exc -> face		10598390	0					
ANR	10598630	Identifier	exc		10598390	0					
ANR	10598631	Identifier	face		10598390	1					
ANR	10598632	Identifier	sph_compatibility_mode		10598390	1					
ANR	10598633	EqualityExpression	exc -> GS . freeVector . y != 0		10598390	1		!=			
ANR	10598634	MemberAccess	exc -> GS . freeVector . y		10598390	0					
ANR	10598635	MemberAccess	exc -> GS . freeVector		10598390	0					
ANR	10598636	PtrMemberAccess	exc -> GS		10598390	0					
ANR	10598637	Identifier	exc		10598390	0					
ANR	10598638	Identifier	GS		10598390	1					
ANR	10598639	Identifier	freeVector		10598390	1					
ANR	10598640	Identifier	y		10598390	1					
ANR	10598641	PrimaryExpression	0		10598390	1					
ANR	10598642	CompoundStatement		61:10:1909:1909	10598390	1					
ANR	10598643	ExpressionStatement	"Move_Zp2_Point ( exc , point , dx , dy , TRUE )"	5684:12:201792:201834	10598390	0	True				
ANR	10598644	CallExpression	"Move_Zp2_Point ( exc , point , dx , dy , TRUE )"		10598390	0					
ANR	10598645	Callee	Move_Zp2_Point		10598390	0					
ANR	10598646	Identifier	Move_Zp2_Point		10598390	0					
ANR	10598647	ArgumentList	exc		10598390	1					
ANR	10598648	Argument	exc		10598390	0					
ANR	10598649	Identifier	exc		10598390	0					
ANR	10598650	Argument	point		10598390	1					
ANR	10598651	Identifier	point		10598390	0					
ANR	10598652	Argument	dx		10598390	2					
ANR	10598653	Identifier	dx		10598390	0					
ANR	10598654	Argument	dy		10598390	3					
ANR	10598655	Identifier	dy		10598390	0					
ANR	10598656	Argument	TRUE		10598390	4					
ANR	10598657	Identifier	TRUE		10598390	0					
ANR	10598658	IfStatement	if ( exc -> GS . freeVector . y != 0 )		10598390	1					
ANR	10598659	Condition	exc -> GS . freeVector . y != 0	5687:17:201887:201911	10598390	0	True				
ANR	10598660	EqualityExpression	exc -> GS . freeVector . y != 0		10598390	0		!=			
ANR	10598661	MemberAccess	exc -> GS . freeVector . y		10598390	0					
ANR	10598662	MemberAccess	exc -> GS . freeVector		10598390	0					
ANR	10598663	PtrMemberAccess	exc -> GS		10598390	0					
ANR	10598664	Identifier	exc		10598390	0					
ANR	10598665	Identifier	GS		10598390	1					
ANR	10598666	Identifier	freeVector		10598390	1					
ANR	10598667	Identifier	y		10598390	1					
ANR	10598668	PrimaryExpression	0		10598390	1					
ANR	10598669	CompoundStatement		66:12:2058:2058	10598390	1					
ANR	10598670	ExpressionStatement	B2 = exc -> zp2 . cur [ point ] . y	5689:14:201943:201969	10598390	0	True				
ANR	10598671	AssignmentExpression	B2 = exc -> zp2 . cur [ point ] . y		10598390	0		=			
ANR	10598672	Identifier	B2		10598390	0					
ANR	10598673	MemberAccess	exc -> zp2 . cur [ point ] . y		10598390	1					
ANR	10598674	ArrayIndexing	exc -> zp2 . cur [ point ]		10598390	0					
ANR	10598675	MemberAccess	exc -> zp2 . cur		10598390	0					
ANR	10598676	PtrMemberAccess	exc -> zp2		10598390	0					
ANR	10598677	Identifier	exc		10598390	0					
ANR	10598678	Identifier	zp2		10598390	1					
ANR	10598679	Identifier	cur		10598390	1					
ANR	10598680	Identifier	point		10598390	1					
ANR	10598681	Identifier	y		10598390	1					
ANR	10598682	IfStatement	if ( ( exc -> sph_tweak_flags & SPH_TWEAK_SKIP_NONPIXEL_Y_MOVES ) && ( B1 & 63 ) != 0 && ( B2 & 63 ) != 0 && B1 != B2 )		10598390	1					
ANR	10598683	Condition	( exc -> sph_tweak_flags & SPH_TWEAK_SKIP_NONPIXEL_Y_MOVES ) && ( B1 & 63 ) != 0 && ( B2 & 63 ) != 0 && B1 != B2	5692:19:202040:202290	10598390	0	True				
ANR	10598684	AndExpression	( exc -> sph_tweak_flags & SPH_TWEAK_SKIP_NONPIXEL_Y_MOVES ) && ( B1 & 63 ) != 0 && ( B2 & 63 ) != 0 && B1 != B2		10598390	0		&&			
ANR	10598685	BitAndExpression	exc -> sph_tweak_flags & SPH_TWEAK_SKIP_NONPIXEL_Y_MOVES		10598390	0		&			
ANR	10598686	PtrMemberAccess	exc -> sph_tweak_flags		10598390	0					
ANR	10598687	Identifier	exc		10598390	0					
ANR	10598688	Identifier	sph_tweak_flags		10598390	1					
ANR	10598689	Identifier	SPH_TWEAK_SKIP_NONPIXEL_Y_MOVES		10598390	1					
ANR	10598690	AndExpression	( B1 & 63 ) != 0 && ( B2 & 63 ) != 0 && B1 != B2		10598390	1		&&			
ANR	10598691	EqualityExpression	( B1 & 63 ) != 0		10598390	0		!=			
ANR	10598692	BitAndExpression	B1 & 63		10598390	0		&			
ANR	10598693	Identifier	B1		10598390	0					
ANR	10598694	PrimaryExpression	63		10598390	1					
ANR	10598695	PrimaryExpression	0		10598390	1					
ANR	10598696	AndExpression	( B2 & 63 ) != 0 && B1 != B2		10598390	1		&&			
ANR	10598697	EqualityExpression	( B2 & 63 ) != 0		10598390	0		!=			
ANR	10598698	BitAndExpression	B2 & 63		10598390	0		&			
ANR	10598699	Identifier	B2		10598390	0					
ANR	10598700	PrimaryExpression	63		10598390	1					
ANR	10598701	PrimaryExpression	0		10598390	1					
ANR	10598702	EqualityExpression	B1 != B2		10598390	1		!=			
ANR	10598703	Identifier	B1		10598390	0					
ANR	10598704	Identifier	B2		10598390	1					
ANR	10598705	ExpressionStatement	"Move_Zp2_Point ( exc , point , NEG_LONG ( dx ) , NEG_LONG ( dy ) , TRUE )"	5696:16:202360:202554	10598390	1	True				
ANR	10598706	CallExpression	"Move_Zp2_Point ( exc , point , NEG_LONG ( dx ) , NEG_LONG ( dy ) , TRUE )"		10598390	0					
ANR	10598707	Callee	Move_Zp2_Point		10598390	0					
ANR	10598708	Identifier	Move_Zp2_Point		10598390	0					
ANR	10598709	ArgumentList	exc		10598390	1					
ANR	10598710	Argument	exc		10598390	0					
ANR	10598711	Identifier	exc		10598390	0					
ANR	10598712	Argument	point		10598390	1					
ANR	10598713	Identifier	point		10598390	0					
ANR	10598714	Argument	NEG_LONG ( dx )		10598390	2					
ANR	10598715	CallExpression	NEG_LONG ( dx )		10598390	0					
ANR	10598716	Callee	NEG_LONG		10598390	0					
ANR	10598717	Identifier	NEG_LONG		10598390	0					
ANR	10598718	ArgumentList	dx		10598390	1					
ANR	10598719	Argument	dx		10598390	0					
ANR	10598720	Identifier	dx		10598390	0					
ANR	10598721	Argument	NEG_LONG ( dy )		10598390	3					
ANR	10598722	CallExpression	NEG_LONG ( dy )		10598390	0					
ANR	10598723	Callee	NEG_LONG		10598390	0					
ANR	10598724	Identifier	NEG_LONG		10598390	0					
ANR	10598725	ArgumentList	dy		10598390	1					
ANR	10598726	Argument	dy		10598390	0					
ANR	10598727	Identifier	dy		10598390	0					
ANR	10598728	Argument	TRUE		10598390	4					
ANR	10598729	Identifier	TRUE		10598390	0					
ANR	10598730	ElseStatement	else		10598390	0					
ANR	10598731	IfStatement	if ( exc -> face -> sph_compatibility_mode )		10598390	0					
ANR	10598732	Condition	exc -> face -> sph_compatibility_mode	5703:20:202602:202634	10598390	0	True				
ANR	10598733	PtrMemberAccess	exc -> face -> sph_compatibility_mode		10598390	0					
ANR	10598734	PtrMemberAccess	exc -> face		10598390	0					
ANR	10598735	Identifier	exc		10598390	0					
ANR	10598736	Identifier	face		10598390	1					
ANR	10598737	Identifier	sph_compatibility_mode		10598390	1					
ANR	10598738	CompoundStatement		82:10:2779:2779	10598390	1					
ANR	10598739	IfStatement	if ( exc -> sph_tweak_flags & SPH_TWEAK_ROUND_NONPIXEL_Y_MOVES )		10598390	0					
ANR	10598740	Condition	exc -> sph_tweak_flags & SPH_TWEAK_ROUND_NONPIXEL_Y_MOVES	5705:17:202667:202721	10598390	0	True				
ANR	10598741	BitAndExpression	exc -> sph_tweak_flags & SPH_TWEAK_ROUND_NONPIXEL_Y_MOVES		10598390	0		&			
ANR	10598742	PtrMemberAccess	exc -> sph_tweak_flags		10598390	0					
ANR	10598743	Identifier	exc		10598390	0					
ANR	10598744	Identifier	sph_tweak_flags		10598390	1					
ANR	10598745	Identifier	SPH_TWEAK_ROUND_NONPIXEL_Y_MOVES		10598390	1					
ANR	10598746	CompoundStatement		84:12:2868:2868	10598390	1					
ANR	10598747	ExpressionStatement	dx = FT_PIX_ROUND ( B1 + dx ) - B1	5707:14:202753:202786	10598390	0	True				
ANR	10598748	AssignmentExpression	dx = FT_PIX_ROUND ( B1 + dx ) - B1		10598390	0		=			
ANR	10598749	Identifier	dx		10598390	0					
ANR	10598750	AdditiveExpression	FT_PIX_ROUND ( B1 + dx ) - B1		10598390	1		-			
ANR	10598751	CallExpression	FT_PIX_ROUND ( B1 + dx )		10598390	0					
ANR	10598752	Callee	FT_PIX_ROUND		10598390	0					
ANR	10598753	Identifier	FT_PIX_ROUND		10598390	0					
ANR	10598754	ArgumentList	B1 + dx		10598390	1					
ANR	10598755	Argument	B1 + dx		10598390	0					
ANR	10598756	AdditiveExpression	B1 + dx		10598390	0		+			
ANR	10598757	Identifier	B1		10598390	0					
ANR	10598758	Identifier	dx		10598390	1					
ANR	10598759	Identifier	B1		10598390	1					
ANR	10598760	ExpressionStatement	dy = FT_PIX_ROUND ( B1 + dy ) - B1	5708:14:202802:202835	10598390	1	True				
ANR	10598761	AssignmentExpression	dy = FT_PIX_ROUND ( B1 + dy ) - B1		10598390	0		=			
ANR	10598762	Identifier	dy		10598390	0					
ANR	10598763	AdditiveExpression	FT_PIX_ROUND ( B1 + dy ) - B1		10598390	1		-			
ANR	10598764	CallExpression	FT_PIX_ROUND ( B1 + dy )		10598390	0					
ANR	10598765	Callee	FT_PIX_ROUND		10598390	0					
ANR	10598766	Identifier	FT_PIX_ROUND		10598390	0					
ANR	10598767	ArgumentList	B1 + dy		10598390	1					
ANR	10598768	Argument	B1 + dy		10598390	0					
ANR	10598769	AdditiveExpression	B1 + dy		10598390	0		+			
ANR	10598770	Identifier	B1		10598390	0					
ANR	10598771	Identifier	dy		10598390	1					
ANR	10598772	Identifier	B1		10598390	1					
ANR	10598773	IfStatement	if ( exc -> iup_called && ( ( exc -> sph_in_func_flags & SPH_FDEF_INLINE_DELTA_1 ) || ( exc -> sph_in_func_flags & SPH_FDEF_INLINE_DELTA_2 ) ) )		10598390	1					
ANR	10598774	Condition	exc -> iup_called && ( ( exc -> sph_in_func_flags & SPH_FDEF_INLINE_DELTA_1 ) || ( exc -> sph_in_func_flags & SPH_FDEF_INLINE_DELTA_2 ) )	5712:17:202908:203115	10598390	0	True				
ANR	10598775	AndExpression	exc -> iup_called && ( ( exc -> sph_in_func_flags & SPH_FDEF_INLINE_DELTA_1 ) || ( exc -> sph_in_func_flags & SPH_FDEF_INLINE_DELTA_2 ) )		10598390	0		&&			
ANR	10598776	PtrMemberAccess	exc -> iup_called		10598390	0					
ANR	10598777	Identifier	exc		10598390	0					
ANR	10598778	Identifier	iup_called		10598390	1					
ANR	10598779	OrExpression	( exc -> sph_in_func_flags & SPH_FDEF_INLINE_DELTA_1 ) || ( exc -> sph_in_func_flags & SPH_FDEF_INLINE_DELTA_2 )		10598390	1		||			
ANR	10598780	BitAndExpression	exc -> sph_in_func_flags & SPH_FDEF_INLINE_DELTA_1		10598390	0		&			
ANR	10598781	PtrMemberAccess	exc -> sph_in_func_flags		10598390	0					
ANR	10598782	Identifier	exc		10598390	0					
ANR	10598783	Identifier	sph_in_func_flags		10598390	1					
ANR	10598784	Identifier	SPH_FDEF_INLINE_DELTA_1		10598390	1					
ANR	10598785	BitAndExpression	exc -> sph_in_func_flags & SPH_FDEF_INLINE_DELTA_2		10598390	1		&			
ANR	10598786	PtrMemberAccess	exc -> sph_in_func_flags		10598390	0					
ANR	10598787	Identifier	exc		10598390	0					
ANR	10598788	Identifier	sph_in_func_flags		10598390	1					
ANR	10598789	Identifier	SPH_FDEF_INLINE_DELTA_2		10598390	1					
ANR	10598790	GotoStatement	goto Skip ;	5715:14:203133:203142	10598390	1	True				
ANR	10598791	Identifier	Skip		10598390	0					
ANR	10598792	IfStatement	if ( ! ( exc -> sph_tweak_flags & SPH_TWEAK_ALWAYS_SKIP_DELTAP ) && ( ( exc -> is_composite && exc -> GS . freeVector . y != 0 ) || ( exc -> zp2 . tags [ point ] & FT_CURVE_TAG_TOUCH_Y ) || ( exc -> sph_tweak_flags & SPH_TWEAK_DO_SHPIX ) ) )		10598390	2					
ANR	10598793	Condition	! ( exc -> sph_tweak_flags & SPH_TWEAK_ALWAYS_SKIP_DELTAP ) && ( ( exc -> is_composite && exc -> GS . freeVector . y != 0 ) || ( exc -> zp2 . tags [ point ] & FT_CURVE_TAG_TOUCH_Y ) || ( exc -> sph_tweak_flags & SPH_TWEAK_DO_SHPIX ) )	5717:17:203162:203441	10598390	0	True				
ANR	10598794	AndExpression	! ( exc -> sph_tweak_flags & SPH_TWEAK_ALWAYS_SKIP_DELTAP ) && ( ( exc -> is_composite && exc -> GS . freeVector . y != 0 ) || ( exc -> zp2 . tags [ point ] & FT_CURVE_TAG_TOUCH_Y ) || ( exc -> sph_tweak_flags & SPH_TWEAK_DO_SHPIX ) )		10598390	0		&&			
ANR	10598795	UnaryOperationExpression	! ( exc -> sph_tweak_flags & SPH_TWEAK_ALWAYS_SKIP_DELTAP )		10598390	0					
ANR	10598796	UnaryOperator	!		10598390	0					
ANR	10598797	BitAndExpression	exc -> sph_tweak_flags & SPH_TWEAK_ALWAYS_SKIP_DELTAP		10598390	1		&			
ANR	10598798	PtrMemberAccess	exc -> sph_tweak_flags		10598390	0					
ANR	10598799	Identifier	exc		10598390	0					
ANR	10598800	Identifier	sph_tweak_flags		10598390	1					
ANR	10598801	Identifier	SPH_TWEAK_ALWAYS_SKIP_DELTAP		10598390	1					
ANR	10598802	OrExpression	( exc -> is_composite && exc -> GS . freeVector . y != 0 ) || ( exc -> zp2 . tags [ point ] & FT_CURVE_TAG_TOUCH_Y ) || ( exc -> sph_tweak_flags & SPH_TWEAK_DO_SHPIX )		10598390	1		||			
ANR	10598803	AndExpression	exc -> is_composite && exc -> GS . freeVector . y != 0		10598390	0		&&			
ANR	10598804	PtrMemberAccess	exc -> is_composite		10598390	0					
ANR	10598805	Identifier	exc		10598390	0					
ANR	10598806	Identifier	is_composite		10598390	1					
ANR	10598807	EqualityExpression	exc -> GS . freeVector . y != 0		10598390	1		!=			
ANR	10598808	MemberAccess	exc -> GS . freeVector . y		10598390	0					
ANR	10598809	MemberAccess	exc -> GS . freeVector		10598390	0					
ANR	10598810	PtrMemberAccess	exc -> GS		10598390	0					
ANR	10598811	Identifier	exc		10598390	0					
ANR	10598812	Identifier	GS		10598390	1					
ANR	10598813	Identifier	freeVector		10598390	1					
ANR	10598814	Identifier	y		10598390	1					
ANR	10598815	PrimaryExpression	0		10598390	1					
ANR	10598816	OrExpression	( exc -> zp2 . tags [ point ] & FT_CURVE_TAG_TOUCH_Y ) || ( exc -> sph_tweak_flags & SPH_TWEAK_DO_SHPIX )		10598390	1		||			
ANR	10598817	BitAndExpression	exc -> zp2 . tags [ point ] & FT_CURVE_TAG_TOUCH_Y		10598390	0		&			
ANR	10598818	ArrayIndexing	exc -> zp2 . tags [ point ]		10598390	0					
ANR	10598819	MemberAccess	exc -> zp2 . tags		10598390	0					
ANR	10598820	PtrMemberAccess	exc -> zp2		10598390	0					
ANR	10598821	Identifier	exc		10598390	0					
ANR	10598822	Identifier	zp2		10598390	1					
ANR	10598823	Identifier	tags		10598390	1					
ANR	10598824	Identifier	point		10598390	1					
ANR	10598825	Identifier	FT_CURVE_TAG_TOUCH_Y		10598390	1					
ANR	10598826	BitAndExpression	exc -> sph_tweak_flags & SPH_TWEAK_DO_SHPIX		10598390	1		&			
ANR	10598827	PtrMemberAccess	exc -> sph_tweak_flags		10598390	0					
ANR	10598828	Identifier	exc		10598390	0					
ANR	10598829	Identifier	sph_tweak_flags		10598390	1					
ANR	10598830	Identifier	SPH_TWEAK_DO_SHPIX		10598390	1					
ANR	10598831	ExpressionStatement	"Move_Zp2_Point ( exc , point , 0 , dy , TRUE )"	5721:14:203460:203501	10598390	1	True				
ANR	10598832	CallExpression	"Move_Zp2_Point ( exc , point , 0 , dy , TRUE )"		10598390	0					
ANR	10598833	Callee	Move_Zp2_Point		10598390	0					
ANR	10598834	Identifier	Move_Zp2_Point		10598390	0					
ANR	10598835	ArgumentList	exc		10598390	1					
ANR	10598836	Argument	exc		10598390	0					
ANR	10598837	Identifier	exc		10598390	0					
ANR	10598838	Argument	point		10598390	1					
ANR	10598839	Identifier	point		10598390	0					
ANR	10598840	Argument	0		10598390	2					
ANR	10598841	PrimaryExpression	0		10598390	0					
ANR	10598842	Argument	dy		10598390	3					
ANR	10598843	Identifier	dy		10598390	0					
ANR	10598844	Argument	TRUE		10598390	4					
ANR	10598845	Identifier	TRUE		10598390	0					
ANR	10598846	IfStatement	if ( exc -> GS . freeVector . y != 0 )		10598390	3					
ANR	10598847	Condition	exc -> GS . freeVector . y != 0	5724:17:203554:203578	10598390	0	True				
ANR	10598848	EqualityExpression	exc -> GS . freeVector . y != 0		10598390	0		!=			
ANR	10598849	MemberAccess	exc -> GS . freeVector . y		10598390	0					
ANR	10598850	MemberAccess	exc -> GS . freeVector		10598390	0					
ANR	10598851	PtrMemberAccess	exc -> GS		10598390	0					
ANR	10598852	Identifier	exc		10598390	0					
ANR	10598853	Identifier	GS		10598390	1					
ANR	10598854	Identifier	freeVector		10598390	1					
ANR	10598855	Identifier	y		10598390	1					
ANR	10598856	PrimaryExpression	0		10598390	1					
ANR	10598857	CompoundStatement		103:12:3725:3725	10598390	1					
ANR	10598858	ExpressionStatement	B2 = exc -> zp2 . cur [ point ] . y	5726:14:203610:203636	10598390	0	True				
ANR	10598859	AssignmentExpression	B2 = exc -> zp2 . cur [ point ] . y		10598390	0		=			
ANR	10598860	Identifier	B2		10598390	0					
ANR	10598861	MemberAccess	exc -> zp2 . cur [ point ] . y		10598390	1					
ANR	10598862	ArrayIndexing	exc -> zp2 . cur [ point ]		10598390	0					
ANR	10598863	MemberAccess	exc -> zp2 . cur		10598390	0					
ANR	10598864	PtrMemberAccess	exc -> zp2		10598390	0					
ANR	10598865	Identifier	exc		10598390	0					
ANR	10598866	Identifier	zp2		10598390	1					
ANR	10598867	Identifier	cur		10598390	1					
ANR	10598868	Identifier	point		10598390	1					
ANR	10598869	Identifier	y		10598390	1					
ANR	10598870	IfStatement	if ( ( B1 & 63 ) == 0 && ( B2 & 63 ) != 0 && B1 != B2 )		10598390	1					
ANR	10598871	Condition	( B1 & 63 ) == 0 && ( B2 & 63 ) != 0 && B1 != B2	5729:19:203707:203792	10598390	0	True				
ANR	10598872	AndExpression	( B1 & 63 ) == 0 && ( B2 & 63 ) != 0 && B1 != B2		10598390	0		&&			
ANR	10598873	EqualityExpression	( B1 & 63 ) == 0		10598390	0		==			
ANR	10598874	BitAndExpression	B1 & 63		10598390	0		&			
ANR	10598875	Identifier	B1		10598390	0					
ANR	10598876	PrimaryExpression	63		10598390	1					
ANR	10598877	PrimaryExpression	0		10598390	1					
ANR	10598878	AndExpression	( B2 & 63 ) != 0 && B1 != B2		10598390	1		&&			
ANR	10598879	EqualityExpression	( B2 & 63 ) != 0		10598390	0		!=			
ANR	10598880	BitAndExpression	B2 & 63		10598390	0		&			
ANR	10598881	Identifier	B2		10598390	0					
ANR	10598882	PrimaryExpression	63		10598390	1					
ANR	10598883	PrimaryExpression	0		10598390	1					
ANR	10598884	EqualityExpression	B1 != B2		10598390	1		!=			
ANR	10598885	Identifier	B1		10598390	0					
ANR	10598886	Identifier	B2		10598390	1					
ANR	10598887	ExpressionStatement	"Move_Zp2_Point ( exc , point , 0 , NEG_LONG ( dy ) , TRUE )"	5732:16:203820:203873	10598390	1	True				
ANR	10598888	CallExpression	"Move_Zp2_Point ( exc , point , 0 , NEG_LONG ( dy ) , TRUE )"		10598390	0					
ANR	10598889	Callee	Move_Zp2_Point		10598390	0					
ANR	10598890	Identifier	Move_Zp2_Point		10598390	0					
ANR	10598891	ArgumentList	exc		10598390	1					
ANR	10598892	Argument	exc		10598390	0					
ANR	10598893	Identifier	exc		10598390	0					
ANR	10598894	Argument	point		10598390	1					
ANR	10598895	Identifier	point		10598390	0					
ANR	10598896	Argument	0		10598390	2					
ANR	10598897	PrimaryExpression	0		10598390	0					
ANR	10598898	Argument	NEG_LONG ( dy )		10598390	3					
ANR	10598899	CallExpression	NEG_LONG ( dy )		10598390	0					
ANR	10598900	Callee	NEG_LONG		10598390	0					
ANR	10598901	Identifier	NEG_LONG		10598390	0					
ANR	10598902	ArgumentList	dy		10598390	1					
ANR	10598903	Argument	dy		10598390	0					
ANR	10598904	Identifier	dy		10598390	0					
ANR	10598905	Argument	TRUE		10598390	4					
ANR	10598906	Identifier	TRUE		10598390	0					
ANR	10598907	ElseStatement	else		10598390	0					
ANR	10598908	IfStatement	if ( exc -> sph_in_func_flags & SPH_FDEF_TYPEMAN_DIAGENDCTRL )		10598390	0					
ANR	10598909	Condition	exc -> sph_in_func_flags & SPH_FDEF_TYPEMAN_DIAGENDCTRL	5735:20:203921:203973	10598390	0	True				
ANR	10598910	BitAndExpression	exc -> sph_in_func_flags & SPH_FDEF_TYPEMAN_DIAGENDCTRL		10598390	0		&			
ANR	10598911	PtrMemberAccess	exc -> sph_in_func_flags		10598390	0					
ANR	10598912	Identifier	exc		10598390	0					
ANR	10598913	Identifier	sph_in_func_flags		10598390	1					
ANR	10598914	Identifier	SPH_FDEF_TYPEMAN_DIAGENDCTRL		10598390	1					
ANR	10598915	ExpressionStatement	"Move_Zp2_Point ( exc , point , dx , dy , TRUE )"	5736:12:203989:204031	10598390	1	True				
ANR	10598916	CallExpression	"Move_Zp2_Point ( exc , point , dx , dy , TRUE )"		10598390	0					
ANR	10598917	Callee	Move_Zp2_Point		10598390	0					
ANR	10598918	Identifier	Move_Zp2_Point		10598390	0					
ANR	10598919	ArgumentList	exc		10598390	1					
ANR	10598920	Argument	exc		10598390	0					
ANR	10598921	Identifier	exc		10598390	0					
ANR	10598922	Argument	point		10598390	1					
ANR	10598923	Identifier	point		10598390	0					
ANR	10598924	Argument	dx		10598390	2					
ANR	10598925	Identifier	dx		10598390	0					
ANR	10598926	Argument	dy		10598390	3					
ANR	10598927	Identifier	dy		10598390	0					
ANR	10598928	Argument	TRUE		10598390	4					
ANR	10598929	Identifier	TRUE		10598390	0					
ANR	10598930	ElseStatement	else		10598390	0					
ANR	10598931	ExpressionStatement	"Move_Zp2_Point ( exc , point , dx , dy , TRUE )"	5739:10:204066:204108	10598390	0	True				
ANR	10598932	CallExpression	"Move_Zp2_Point ( exc , point , dx , dy , TRUE )"		10598390	0					
ANR	10598933	Callee	Move_Zp2_Point		10598390	0					
ANR	10598934	Identifier	Move_Zp2_Point		10598390	0					
ANR	10598935	ArgumentList	exc		10598390	1					
ANR	10598936	Argument	exc		10598390	0					
ANR	10598937	Identifier	exc		10598390	0					
ANR	10598938	Argument	point		10598390	1					
ANR	10598939	Identifier	point		10598390	0					
ANR	10598940	Argument	dx		10598390	2					
ANR	10598941	Identifier	dx		10598390	0					
ANR	10598942	Argument	dy		10598390	3					
ANR	10598943	Identifier	dy		10598390	0					
ANR	10598944	Argument	TRUE		10598390	4					
ANR	10598945	Identifier	TRUE		10598390	0					
ANR	10598946	ElseStatement	else		10598390	0					
ANR	10598947	IfStatement	if ( SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility )		10598390	0					
ANR	10598948	Condition	SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility	5744:11:204190:204258	10598390	0	True				
ANR	10598949	AndExpression	SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility		10598390	0		&&			
ANR	10598950	Identifier	SUBPIXEL_HINTING_MINIMAL		10598390	0					
ANR	10598951	PtrMemberAccess	exc -> backward_compatibility		10598390	1					
ANR	10598952	Identifier	exc		10598390	0					
ANR	10598953	Identifier	backward_compatibility		10598390	1					
ANR	10598954	CompoundStatement		124:6:4399:4399	10598390	1					
ANR	10598955	IfStatement	if ( in_twilight || ( ! ( exc -> iupx_called && exc -> iupy_called ) && ( ( exc -> is_composite && exc -> GS . freeVector . y != 0 ) || ( exc -> zp2 . tags [ point ] & FT_CURVE_TAG_TOUCH_Y ) ) ) )		10598390	0					
ANR	10598956	Condition	in_twilight || ( ! ( exc -> iupx_called && exc -> iupy_called ) && ( ( exc -> is_composite && exc -> GS . freeVector . y != 0 ) || ( exc -> zp2 . tags [ point ] & FT_CURVE_TAG_TOUCH_Y ) ) )	5752:13:204673:204949	10598390	0	True				
ANR	10598957	OrExpression	in_twilight || ( ! ( exc -> iupx_called && exc -> iupy_called ) && ( ( exc -> is_composite && exc -> GS . freeVector . y != 0 ) || ( exc -> zp2 . tags [ point ] & FT_CURVE_TAG_TOUCH_Y ) ) )		10598390	0		||			
ANR	10598958	Identifier	in_twilight		10598390	0					
ANR	10598959	AndExpression	! ( exc -> iupx_called && exc -> iupy_called ) && ( ( exc -> is_composite && exc -> GS . freeVector . y != 0 ) || ( exc -> zp2 . tags [ point ] & FT_CURVE_TAG_TOUCH_Y ) )		10598390	1		&&			
ANR	10598960	UnaryOperationExpression	! ( exc -> iupx_called && exc -> iupy_called )		10598390	0					
ANR	10598961	UnaryOperator	!		10598390	0					
ANR	10598962	AndExpression	exc -> iupx_called && exc -> iupy_called		10598390	1		&&			
ANR	10598963	PtrMemberAccess	exc -> iupx_called		10598390	0					
ANR	10598964	Identifier	exc		10598390	0					
ANR	10598965	Identifier	iupx_called		10598390	1					
ANR	10598966	PtrMemberAccess	exc -> iupy_called		10598390	1					
ANR	10598967	Identifier	exc		10598390	0					
ANR	10598968	Identifier	iupy_called		10598390	1					
ANR	10598969	OrExpression	( exc -> is_composite && exc -> GS . freeVector . y != 0 ) || ( exc -> zp2 . tags [ point ] & FT_CURVE_TAG_TOUCH_Y )		10598390	1		||			
ANR	10598970	AndExpression	exc -> is_composite && exc -> GS . freeVector . y != 0		10598390	0		&&			
ANR	10598971	PtrMemberAccess	exc -> is_composite		10598390	0					
ANR	10598972	Identifier	exc		10598390	0					
ANR	10598973	Identifier	is_composite		10598390	1					
ANR	10598974	EqualityExpression	exc -> GS . freeVector . y != 0		10598390	1		!=			
ANR	10598975	MemberAccess	exc -> GS . freeVector . y		10598390	0					
ANR	10598976	MemberAccess	exc -> GS . freeVector		10598390	0					
ANR	10598977	PtrMemberAccess	exc -> GS		10598390	0					
ANR	10598978	Identifier	exc		10598390	0					
ANR	10598979	Identifier	GS		10598390	1					
ANR	10598980	Identifier	freeVector		10598390	1					
ANR	10598981	Identifier	y		10598390	1					
ANR	10598982	PrimaryExpression	0		10598390	1					
ANR	10598983	BitAndExpression	exc -> zp2 . tags [ point ] & FT_CURVE_TAG_TOUCH_Y		10598390	1		&			
ANR	10598984	ArrayIndexing	exc -> zp2 . tags [ point ]		10598390	0					
ANR	10598985	MemberAccess	exc -> zp2 . tags		10598390	0					
ANR	10598986	PtrMemberAccess	exc -> zp2		10598390	0					
ANR	10598987	Identifier	exc		10598390	0					
ANR	10598988	Identifier	zp2		10598390	1					
ANR	10598989	Identifier	tags		10598390	1					
ANR	10598990	Identifier	point		10598390	1					
ANR	10598991	Identifier	FT_CURVE_TAG_TOUCH_Y		10598390	1					
ANR	10598992	ExpressionStatement	"Move_Zp2_Point ( exc , point , 0 , dy , TRUE )"	5756:10:204963:205004	10598390	1	True				
ANR	10598993	CallExpression	"Move_Zp2_Point ( exc , point , 0 , dy , TRUE )"		10598390	0					
ANR	10598994	Callee	Move_Zp2_Point		10598390	0					
ANR	10598995	Identifier	Move_Zp2_Point		10598390	0					
ANR	10598996	ArgumentList	exc		10598390	1					
ANR	10598997	Argument	exc		10598390	0					
ANR	10598998	Identifier	exc		10598390	0					
ANR	10598999	Argument	point		10598390	1					
ANR	10599000	Identifier	point		10598390	0					
ANR	10599001	Argument	0		10598390	2					
ANR	10599002	PrimaryExpression	0		10598390	0					
ANR	10599003	Argument	dy		10598390	3					
ANR	10599004	Identifier	dy		10598390	0					
ANR	10599005	Argument	TRUE		10598390	4					
ANR	10599006	Identifier	TRUE		10598390	0					
ANR	10599007	ElseStatement	else		10598390	0					
ANR	10599008	ExpressionStatement	"Move_Zp2_Point ( exc , point , dx , dy , TRUE )"	5760:8:205040:205082	10598390	0	True				
ANR	10599009	CallExpression	"Move_Zp2_Point ( exc , point , dx , dy , TRUE )"		10598390	0					
ANR	10599010	Callee	Move_Zp2_Point		10598390	0					
ANR	10599011	Identifier	Move_Zp2_Point		10598390	0					
ANR	10599012	ArgumentList	exc		10598390	1					
ANR	10599013	Argument	exc		10598390	0					
ANR	10599014	Identifier	exc		10598390	0					
ANR	10599015	Argument	point		10598390	1					
ANR	10599016	Identifier	point		10598390	0					
ANR	10599017	Argument	dx		10598390	2					
ANR	10599018	Identifier	dx		10598390	0					
ANR	10599019	Argument	dy		10598390	3					
ANR	10599020	Identifier	dy		10598390	0					
ANR	10599021	Argument	TRUE		10598390	4					
ANR	10599022	Identifier	TRUE		10598390	0					
ANR	10599023	Label	Skip :	5763:4:205135:205139	10598390	3	True				
ANR	10599024	Identifier	Skip		10598390	0					
ANR	10599025	ExpressionStatement	exc -> GS . loop --	5765:6:205154:205168	10598390	4	True				
ANR	10599026	PostIncDecOperationExpression	exc -> GS . loop --		10598390	0					
ANR	10599027	MemberAccess	exc -> GS . loop		10598390	0					
ANR	10599028	PtrMemberAccess	exc -> GS		10598390	0					
ANR	10599029	Identifier	exc		10598390	0					
ANR	10599030	Identifier	GS		10598390	1					
ANR	10599031	Identifier	loop		10598390	1					
ANR	10599032	IncDec	--		10598390	1					
ANR	10599033	Label	Fail :	5768:2:205179:205183	10598390	8	True				
ANR	10599034	Identifier	Fail		10598390	0					
ANR	10599035	ExpressionStatement	exc -> GS . loop = 1	5769:4:205189:205205	10598390	9	True				
ANR	10599036	AssignmentExpression	exc -> GS . loop = 1		10598390	0		=			
ANR	10599037	MemberAccess	exc -> GS . loop		10598390	0					
ANR	10599038	PtrMemberAccess	exc -> GS		10598390	0					
ANR	10599039	Identifier	exc		10598390	0					
ANR	10599040	Identifier	GS		10598390	1					
ANR	10599041	Identifier	loop		10598390	1					
ANR	10599042	PrimaryExpression	1		10598390	1					
ANR	10599043	ExpressionStatement	exc -> new_top = exc -> args	5770:4:205211:205235	10598390	10	True				
ANR	10599044	AssignmentExpression	exc -> new_top = exc -> args		10598390	0		=			
ANR	10599045	PtrMemberAccess	exc -> new_top		10598390	0					
ANR	10599046	Identifier	exc		10598390	0					
ANR	10599047	Identifier	new_top		10598390	1					
ANR	10599048	PtrMemberAccess	exc -> args		10598390	1					
ANR	10599049	Identifier	exc		10598390	0					
ANR	10599050	Identifier	args		10598390	1					
ANR	10599051	ReturnType	static void		10598390	1					
ANR	10599052	Identifier	Ins_SHPIX		10598390	2					
ANR	10599053	ParameterList	"TT_ExecContext exc , FT_Long * args"		10598390	3					
ANR	10599054	Parameter	TT_ExecContext exc	5621:13:199809:199827	10598390	0	True				
ANR	10599055	ParameterType	TT_ExecContext		10598390	0					
ANR	10599056	Identifier	exc		10598390	1					
ANR	10599057	Parameter	FT_Long * args	5622:13:199843:199862	10598390	1	True				
ANR	10599058	ParameterType	FT_Long *		10598390	0					
ANR	10599059	Identifier	args		10598390	1					
ANR	10599060	CFGEntryNode	ENTRY		10598390		True				
ANR	10599061	CFGExitNode	EXIT		10598390		True				
ANR	10599062	Symbol	exc -> new_top		10598390						
ANR	10599063	Symbol	exc -> GS . freeVector . x		10598390						
ANR	10599064	Symbol	exc -> GS . freeVector . y		10598390						
ANR	10599065	Symbol	SPH_TWEAK_ALWAYS_SKIP_DELTAP		10598390						
ANR	10599066	Symbol	* args		10598390						
ANR	10599067	Symbol	* exc -> zp2 . tags		10598390						
ANR	10599068	Symbol	SUBPIXEL_HINTING_INFINALITY		10598390						
ANR	10599069	Symbol	exc		10598390						
ANR	10599070	Symbol	Invalid_Reference		10598390						
ANR	10599071	Symbol	dx		10598390						
ANR	10599072	Symbol	exc -> sph_in_func_flags		10598390						
ANR	10599073	Symbol	dy		10598390						
ANR	10599074	Symbol	BOUNDS		10598390						
ANR	10599075	Symbol	exc -> error		10598390						
ANR	10599076	Symbol	FT_PIX_ROUND		10598390						
ANR	10599077	Symbol	FT_BOOL		10598390						
ANR	10599078	Symbol	SPH_TWEAK_ROUND_NONPIXEL_Y_MOVES		10598390						
ANR	10599079	Symbol	exc -> args		10598390						
ANR	10599080	Symbol	* point		10598390						
ANR	10599081	Symbol	exc -> face		10598390						
ANR	10599082	Symbol	exc -> pedantic_hinting		10598390						
ANR	10599083	Symbol	TRUE		10598390						
ANR	10599084	Symbol	exc -> zp2 . tags		10598390						
ANR	10599085	Symbol	exc -> is_composite		10598390						
ANR	10599086	Symbol	B1		10598390						
ANR	10599087	Symbol	exc -> backward_compatibility		10598390						
ANR	10599088	Symbol	B2		10598390						
ANR	10599089	Symbol	exc -> face -> sph_compatibility_mode		10598390						
ANR	10599090	Symbol	exc -> zp2 . n_points		10598390						
ANR	10599091	Symbol	SPH_TWEAK_DO_SHPIX		10598390						
ANR	10599092	Symbol	exc -> GS . freeVector		10598390						
ANR	10599093	Symbol	exc -> iupx_called		10598390						
ANR	10599094	Symbol	TT_MulFix14		10598390						
ANR	10599095	Symbol	SUBPIXEL_HINTING_MINIMAL		10598390						
ANR	10599096	Symbol	* exc		10598390						
ANR	10599097	Symbol	* exc -> face		10598390						
ANR	10599098	Symbol	* exc -> args		10598390						
ANR	10599099	Symbol	FT_CURVE_TAG_TOUCH_Y		10598390						
ANR	10599100	Symbol	* exc -> zp2 . cur		10598390						
ANR	10599101	Symbol	point		10598390						
ANR	10599102	Symbol	SPH_FDEF_INLINE_DELTA_1		10598390						
ANR	10599103	Symbol	SPH_FDEF_INLINE_DELTA_2		10598390						
ANR	10599104	Symbol	exc -> stack		10598390						
ANR	10599105	Symbol	SPH_FDEF_TYPEMAN_DIAGENDCTRL		10598390						
ANR	10599106	Symbol	exc -> sph_tweak_flags		10598390						
ANR	10599107	Symbol	exc -> top		10598390						
ANR	10599108	Symbol	NEG_LONG		10598390						
ANR	10599109	Symbol	exc -> ignore_x_mode		10598390						
ANR	10599110	Symbol	* exc -> stack		10598390						
ANR	10599111	Symbol	* * exc		10598390						
ANR	10599112	Symbol	exc -> GS . gep0		10598390						
ANR	10599113	Symbol	exc -> zp2 . cur		10598390						
ANR	10599114	Symbol	exc -> GS . gep2		10598390						
ANR	10599115	Symbol	exc -> GS . gep1		10598390						
ANR	10599116	Symbol	exc -> GS		10598390						
ANR	10599117	Symbol	FT_THROW		10598390						
ANR	10599118	Symbol	args		10598390						
ANR	10599119	Symbol	exc -> zp2		10598390						
ANR	10599120	Symbol	SPH_TWEAK_SKIP_NONPIXEL_Y_MOVES		10598390						
ANR	10599121	Symbol	in_twilight		10598390						
ANR	10599122	Symbol	exc -> zp2 . cur [ point ] . y		10598390						
ANR	10599123	Symbol	exc -> iup_called		10598390						
ANR	10599124	Symbol	* exc -> zp2		10598390						
ANR	10599125	Symbol	exc -> GS . loop		10598390						
ANR	10599126	Symbol	exc -> zp2 . cur [ point ] . x		10598390						
ANR	10599127	Symbol	exc -> iupy_called		10598390						
ANR	10599128	Function	Ins_MSIRP	5780:2:205713:207710							
ANR	10599129	FunctionDef	"Ins_MSIRP (TT_ExecContext exc , FT_Long * args)"		10599128	0					
ANR	10599130	CompoundStatement		5783:2:205797:207710	10599128	0					
ANR	10599131	IdentifierDeclStatement	FT_UShort point = 0 ;	5784:4:205803:205824	10599128	0	True				
ANR	10599132	IdentifierDecl	point = 0		10599128	0					
ANR	10599133	IdentifierDeclType	FT_UShort		10599128	0					
ANR	10599134	Identifier	point		10599128	1					
ANR	10599135	AssignmentExpression	point = 0		10599128	2		=			
ANR	10599136	Identifier	point		10599128	0					
ANR	10599137	PrimaryExpression	0		10599128	1					
ANR	10599138	IdentifierDeclStatement	FT_F26Dot6 distance ;	5785:4:205830:205850	10599128	1	True				
ANR	10599139	IdentifierDecl	distance		10599128	0					
ANR	10599140	IdentifierDeclType	FT_F26Dot6		10599128	0					
ANR	10599141	Identifier	distance		10599128	1					
ANR	10599142	IdentifierDeclStatement	FT_F26Dot6 control_value_cutin = 0 ;	5787:4:205902:205937	10599128	2	True				
ANR	10599143	IdentifierDecl	control_value_cutin = 0		10599128	0					
ANR	10599144	IdentifierDeclType	FT_F26Dot6		10599128	0					
ANR	10599145	Identifier	control_value_cutin		10599128	1					
ANR	10599146	AssignmentExpression	control_value_cutin = 0		10599128	2		=			
ANR	10599147	Identifier	control_value_cutin		10599128	0					
ANR	10599148	PrimaryExpression	0		10599128	1					
ANR	10599149	IdentifierDeclStatement	FT_F26Dot6 delta ;	5788:4:205943:205960	10599128	3	True				
ANR	10599150	IdentifierDecl	delta		10599128	0					
ANR	10599151	IdentifierDeclType	FT_F26Dot6		10599128	0					
ANR	10599152	Identifier	delta		10599128	1					
ANR	10599153	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY )		10599128	4					
ANR	10599154	Condition	SUBPIXEL_HINTING_INFINALITY	5791:9:205973:205999	10599128	0	True				
ANR	10599155	Identifier	SUBPIXEL_HINTING_INFINALITY		10599128	0					
ANR	10599156	CompoundStatement		10:4:209:209	10599128	1					
ANR	10599157	ExpressionStatement	control_value_cutin = exc -> GS . control_value_cutin	5793:6:206015:206064	10599128	0	True				
ANR	10599158	AssignmentExpression	control_value_cutin = exc -> GS . control_value_cutin		10599128	0		=			
ANR	10599159	Identifier	control_value_cutin		10599128	0					
ANR	10599160	MemberAccess	exc -> GS . control_value_cutin		10599128	1					
ANR	10599161	PtrMemberAccess	exc -> GS		10599128	0					
ANR	10599162	Identifier	exc		10599128	0					
ANR	10599163	Identifier	GS		10599128	1					
ANR	10599164	Identifier	control_value_cutin		10599128	1					
ANR	10599165	IfStatement	if ( exc -> ignore_x_mode && exc -> GS . freeVector . x != 0 && ! ( exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND ) )		10599128	1					
ANR	10599166	Condition	exc -> ignore_x_mode && exc -> GS . freeVector . x != 0 && ! ( exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND )	5795:11:206078:206257	10599128	0	True				
ANR	10599167	AndExpression	exc -> ignore_x_mode && exc -> GS . freeVector . x != 0 && ! ( exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND )		10599128	0		&&			
ANR	10599168	PtrMemberAccess	exc -> ignore_x_mode		10599128	0					
ANR	10599169	Identifier	exc		10599128	0					
ANR	10599170	Identifier	ignore_x_mode		10599128	1					
ANR	10599171	AndExpression	exc -> GS . freeVector . x != 0 && ! ( exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND )		10599128	1		&&			
ANR	10599172	EqualityExpression	exc -> GS . freeVector . x != 0		10599128	0		!=			
ANR	10599173	MemberAccess	exc -> GS . freeVector . x		10599128	0					
ANR	10599174	MemberAccess	exc -> GS . freeVector		10599128	0					
ANR	10599175	PtrMemberAccess	exc -> GS		10599128	0					
ANR	10599176	Identifier	exc		10599128	0					
ANR	10599177	Identifier	GS		10599128	1					
ANR	10599178	Identifier	freeVector		10599128	1					
ANR	10599179	Identifier	x		10599128	1					
ANR	10599180	PrimaryExpression	0		10599128	1					
ANR	10599181	UnaryOperationExpression	! ( exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND )		10599128	1					
ANR	10599182	UnaryOperator	!		10599128	0					
ANR	10599183	BitAndExpression	exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND		10599128	1		&			
ANR	10599184	PtrMemberAccess	exc -> sph_tweak_flags		10599128	0					
ANR	10599185	Identifier	exc		10599128	0					
ANR	10599186	Identifier	sph_tweak_flags		10599128	1					
ANR	10599187	Identifier	SPH_TWEAK_NORMAL_ROUND		10599128	1					
ANR	10599188	ExpressionStatement	control_value_cutin = 0	5798:8:206269:206292	10599128	1	True				
ANR	10599189	AssignmentExpression	control_value_cutin = 0		10599128	0		=			
ANR	10599190	Identifier	control_value_cutin		10599128	0					
ANR	10599191	PrimaryExpression	0		10599128	1					
ANR	10599192	ExpressionStatement	point = ( FT_UShort ) args [ 0 ]	5802:4:206357:206383	10599128	5	True				
ANR	10599193	AssignmentExpression	point = ( FT_UShort ) args [ 0 ]		10599128	0		=			
ANR	10599194	Identifier	point		10599128	0					
ANR	10599195	CastExpression	( FT_UShort ) args [ 0 ]		10599128	1					
ANR	10599196	CastTarget	FT_UShort		10599128	0					
ANR	10599197	ArrayIndexing	args [ 0 ]		10599128	1					
ANR	10599198	Identifier	args		10599128	0					
ANR	10599199	PrimaryExpression	0		10599128	1					
ANR	10599200	IfStatement	"if ( BOUNDS ( point , exc -> zp1 . n_points ) || BOUNDS ( exc -> GS . rp0 , exc -> zp0 . n_points ) )"		10599128	6					
ANR	10599201	Condition	"BOUNDS ( point , exc -> zp1 . n_points ) || BOUNDS ( exc -> GS . rp0 , exc -> zp0 . n_points )"	5804:9:206395:206487	10599128	0	True				
ANR	10599202	OrExpression	"BOUNDS ( point , exc -> zp1 . n_points ) || BOUNDS ( exc -> GS . rp0 , exc -> zp0 . n_points )"		10599128	0		||			
ANR	10599203	CallExpression	"BOUNDS ( point , exc -> zp1 . n_points )"		10599128	0					
ANR	10599204	Callee	BOUNDS		10599128	0					
ANR	10599205	Identifier	BOUNDS		10599128	0					
ANR	10599206	ArgumentList	point		10599128	1					
ANR	10599207	Argument	point		10599128	0					
ANR	10599208	Identifier	point		10599128	0					
ANR	10599209	Argument	exc -> zp1 . n_points		10599128	1					
ANR	10599210	MemberAccess	exc -> zp1 . n_points		10599128	0					
ANR	10599211	PtrMemberAccess	exc -> zp1		10599128	0					
ANR	10599212	Identifier	exc		10599128	0					
ANR	10599213	Identifier	zp1		10599128	1					
ANR	10599214	Identifier	n_points		10599128	1					
ANR	10599215	CallExpression	"BOUNDS ( exc -> GS . rp0 , exc -> zp0 . n_points )"		10599128	1					
ANR	10599216	Callee	BOUNDS		10599128	0					
ANR	10599217	Identifier	BOUNDS		10599128	0					
ANR	10599218	ArgumentList	exc -> GS . rp0		10599128	1					
ANR	10599219	Argument	exc -> GS . rp0		10599128	0					
ANR	10599220	MemberAccess	exc -> GS . rp0		10599128	0					
ANR	10599221	PtrMemberAccess	exc -> GS		10599128	0					
ANR	10599222	Identifier	exc		10599128	0					
ANR	10599223	Identifier	GS		10599128	1					
ANR	10599224	Identifier	rp0		10599128	1					
ANR	10599225	Argument	exc -> zp0 . n_points		10599128	1					
ANR	10599226	MemberAccess	exc -> zp0 . n_points		10599128	0					
ANR	10599227	PtrMemberAccess	exc -> zp0		10599128	0					
ANR	10599228	Identifier	exc		10599128	0					
ANR	10599229	Identifier	zp0		10599128	1					
ANR	10599230	Identifier	n_points		10599128	1					
ANR	10599231	CompoundStatement		24:4:697:697	10599128	1					
ANR	10599232	IfStatement	if ( exc -> pedantic_hinting )		10599128	0					
ANR	10599233	Condition	exc -> pedantic_hinting	5807:11:206508:206528	10599128	0	True				
ANR	10599234	PtrMemberAccess	exc -> pedantic_hinting		10599128	0					
ANR	10599235	Identifier	exc		10599128	0					
ANR	10599236	Identifier	pedantic_hinting		10599128	1					
ANR	10599237	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	5808:8:206540:206582	10599128	1	True				
ANR	10599238	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10599128	0		=			
ANR	10599239	PtrMemberAccess	exc -> error		10599128	0					
ANR	10599240	Identifier	exc		10599128	0					
ANR	10599241	Identifier	error		10599128	1					
ANR	10599242	CallExpression	FT_THROW ( Invalid_Reference )		10599128	1					
ANR	10599243	Callee	FT_THROW		10599128	0					
ANR	10599244	Identifier	FT_THROW		10599128	0					
ANR	10599245	ArgumentList	Invalid_Reference		10599128	1					
ANR	10599246	Argument	Invalid_Reference		10599128	0					
ANR	10599247	Identifier	Invalid_Reference		10599128	0					
ANR	10599248	ReturnStatement	return ;	5809:6:206590:206596	10599128	1	True				
ANR	10599249	IfStatement	if ( exc -> GS . gep1 == 0 )		10599128	7					
ANR	10599250	Condition	exc -> GS . gep1 == 0	5814:9:206730:206746	10599128	0	True				
ANR	10599251	EqualityExpression	exc -> GS . gep1 == 0		10599128	0		==			
ANR	10599252	MemberAccess	exc -> GS . gep1		10599128	0					
ANR	10599253	PtrMemberAccess	exc -> GS		10599128	0					
ANR	10599254	Identifier	exc		10599128	0					
ANR	10599255	Identifier	GS		10599128	1					
ANR	10599256	Identifier	gep1		10599128	1					
ANR	10599257	PrimaryExpression	0		10599128	1					
ANR	10599258	CompoundStatement		33:4:956:956	10599128	1					
ANR	10599259	ExpressionStatement	exc -> zp1 . org [ point ] = exc -> zp0 . org [ exc -> GS . rp0 ]	5816:6:206762:206809	10599128	0	True				
ANR	10599260	AssignmentExpression	exc -> zp1 . org [ point ] = exc -> zp0 . org [ exc -> GS . rp0 ]		10599128	0		=			
ANR	10599261	ArrayIndexing	exc -> zp1 . org [ point ]		10599128	0					
ANR	10599262	MemberAccess	exc -> zp1 . org		10599128	0					
ANR	10599263	PtrMemberAccess	exc -> zp1		10599128	0					
ANR	10599264	Identifier	exc		10599128	0					
ANR	10599265	Identifier	zp1		10599128	1					
ANR	10599266	Identifier	org		10599128	1					
ANR	10599267	Identifier	point		10599128	1					
ANR	10599268	ArrayIndexing	exc -> zp0 . org [ exc -> GS . rp0 ]		10599128	1					
ANR	10599269	MemberAccess	exc -> zp0 . org		10599128	0					
ANR	10599270	PtrMemberAccess	exc -> zp0		10599128	0					
ANR	10599271	Identifier	exc		10599128	0					
ANR	10599272	Identifier	zp0		10599128	1					
ANR	10599273	Identifier	org		10599128	1					
ANR	10599274	MemberAccess	exc -> GS . rp0		10599128	1					
ANR	10599275	PtrMemberAccess	exc -> GS		10599128	0					
ANR	10599276	Identifier	exc		10599128	0					
ANR	10599277	Identifier	GS		10599128	1					
ANR	10599278	Identifier	rp0		10599128	1					
ANR	10599279	ExpressionStatement	"exc -> func_move_orig ( exc , & exc -> zp1 , point , args [ 1 ] )"	5817:6:206817:206870	10599128	1	True				
ANR	10599280	CallExpression	"exc -> func_move_orig ( exc , & exc -> zp1 , point , args [ 1 ] )"		10599128	0					
ANR	10599281	Callee	exc -> func_move_orig		10599128	0					
ANR	10599282	PtrMemberAccess	exc -> func_move_orig		10599128	0					
ANR	10599283	Identifier	exc		10599128	0					
ANR	10599284	Identifier	func_move_orig		10599128	1					
ANR	10599285	ArgumentList	exc		10599128	1					
ANR	10599286	Argument	exc		10599128	0					
ANR	10599287	Identifier	exc		10599128	0					
ANR	10599288	Argument	& exc -> zp1		10599128	1					
ANR	10599289	UnaryOperationExpression	& exc -> zp1		10599128	0					
ANR	10599290	UnaryOperator	&		10599128	0					
ANR	10599291	PtrMemberAccess	exc -> zp1		10599128	1					
ANR	10599292	Identifier	exc		10599128	0					
ANR	10599293	Identifier	zp1		10599128	1					
ANR	10599294	Argument	point		10599128	2					
ANR	10599295	Identifier	point		10599128	0					
ANR	10599296	Argument	args [ 1 ]		10599128	3					
ANR	10599297	ArrayIndexing	args [ 1 ]		10599128	0					
ANR	10599298	Identifier	args		10599128	0					
ANR	10599299	PrimaryExpression	1		10599128	1					
ANR	10599300	ExpressionStatement	exc -> zp1 . cur [ point ] = exc -> zp1 . org [ point ]	5818:6:206878:206919	10599128	2	True				
ANR	10599301	AssignmentExpression	exc -> zp1 . cur [ point ] = exc -> zp1 . org [ point ]		10599128	0		=			
ANR	10599302	ArrayIndexing	exc -> zp1 . cur [ point ]		10599128	0					
ANR	10599303	MemberAccess	exc -> zp1 . cur		10599128	0					
ANR	10599304	PtrMemberAccess	exc -> zp1		10599128	0					
ANR	10599305	Identifier	exc		10599128	0					
ANR	10599306	Identifier	zp1		10599128	1					
ANR	10599307	Identifier	cur		10599128	1					
ANR	10599308	Identifier	point		10599128	1					
ANR	10599309	ArrayIndexing	exc -> zp1 . org [ point ]		10599128	1					
ANR	10599310	MemberAccess	exc -> zp1 . org		10599128	0					
ANR	10599311	PtrMemberAccess	exc -> zp1		10599128	0					
ANR	10599312	Identifier	exc		10599128	0					
ANR	10599313	Identifier	zp1		10599128	1					
ANR	10599314	Identifier	org		10599128	1					
ANR	10599315	Identifier	point		10599128	1					
ANR	10599316	ExpressionStatement	"distance = PROJECT ( exc -> zp1 . cur + point , exc -> zp0 . cur + exc -> GS . rp0 )"	5821:4:206932:207002	10599128	8	True				
ANR	10599317	AssignmentExpression	"distance = PROJECT ( exc -> zp1 . cur + point , exc -> zp0 . cur + exc -> GS . rp0 )"		10599128	0		=			
ANR	10599318	Identifier	distance		10599128	0					
ANR	10599319	CallExpression	"PROJECT ( exc -> zp1 . cur + point , exc -> zp0 . cur + exc -> GS . rp0 )"		10599128	1					
ANR	10599320	Callee	PROJECT		10599128	0					
ANR	10599321	Identifier	PROJECT		10599128	0					
ANR	10599322	ArgumentList	exc -> zp1 . cur + point		10599128	1					
ANR	10599323	Argument	exc -> zp1 . cur + point		10599128	0					
ANR	10599324	AdditiveExpression	exc -> zp1 . cur + point		10599128	0		+			
ANR	10599325	MemberAccess	exc -> zp1 . cur		10599128	0					
ANR	10599326	PtrMemberAccess	exc -> zp1		10599128	0					
ANR	10599327	Identifier	exc		10599128	0					
ANR	10599328	Identifier	zp1		10599128	1					
ANR	10599329	Identifier	cur		10599128	1					
ANR	10599330	Identifier	point		10599128	1					
ANR	10599331	Argument	exc -> zp0 . cur + exc -> GS . rp0		10599128	1					
ANR	10599332	AdditiveExpression	exc -> zp0 . cur + exc -> GS . rp0		10599128	0		+			
ANR	10599333	MemberAccess	exc -> zp0 . cur		10599128	0					
ANR	10599334	PtrMemberAccess	exc -> zp0		10599128	0					
ANR	10599335	Identifier	exc		10599128	0					
ANR	10599336	Identifier	zp0		10599128	1					
ANR	10599337	Identifier	cur		10599128	1					
ANR	10599338	MemberAccess	exc -> GS . rp0		10599128	1					
ANR	10599339	PtrMemberAccess	exc -> GS		10599128	0					
ANR	10599340	Identifier	exc		10599128	0					
ANR	10599341	Identifier	GS		10599128	1					
ANR	10599342	Identifier	rp0		10599128	1					
ANR	10599343	ExpressionStatement	"delta = SUB_LONG ( distance , args [ 1 ] )"	5824:4:207055:207092	10599128	9	True				
ANR	10599344	AssignmentExpression	"delta = SUB_LONG ( distance , args [ 1 ] )"		10599128	0		=			
ANR	10599345	Identifier	delta		10599128	0					
ANR	10599346	CallExpression	"SUB_LONG ( distance , args [ 1 ] )"		10599128	1					
ANR	10599347	Callee	SUB_LONG		10599128	0					
ANR	10599348	Identifier	SUB_LONG		10599128	0					
ANR	10599349	ArgumentList	distance		10599128	1					
ANR	10599350	Argument	distance		10599128	0					
ANR	10599351	Identifier	distance		10599128	0					
ANR	10599352	Argument	args [ 1 ]		10599128	1					
ANR	10599353	ArrayIndexing	args [ 1 ]		10599128	0					
ANR	10599354	Identifier	args		10599128	0					
ANR	10599355	PrimaryExpression	1		10599128	1					
ANR	10599356	IfStatement	if ( delta < 0 )		10599128	10					
ANR	10599357	Condition	delta < 0	5825:9:207103:207111	10599128	0	True				
ANR	10599358	RelationalExpression	delta < 0		10599128	0		<			
ANR	10599359	Identifier	delta		10599128	0					
ANR	10599360	PrimaryExpression	0		10599128	1					
ANR	10599361	ExpressionStatement	delta = NEG_LONG ( delta )	5826:6:207121:207146	10599128	1	True				
ANR	10599362	AssignmentExpression	delta = NEG_LONG ( delta )		10599128	0		=			
ANR	10599363	Identifier	delta		10599128	0					
ANR	10599364	CallExpression	NEG_LONG ( delta )		10599128	1					
ANR	10599365	Callee	NEG_LONG		10599128	0					
ANR	10599366	Identifier	NEG_LONG		10599128	0					
ANR	10599367	ArgumentList	delta		10599128	1					
ANR	10599368	Argument	delta		10599128	0					
ANR	10599369	Identifier	delta		10599128	0					
ANR	10599370	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> GS . freeVector . x != 0 && delta >= control_value_cutin )		10599128	11					
ANR	10599371	Condition	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> GS . freeVector . x != 0 && delta >= control_value_cutin	5829:9:207218:207368	10599128	0	True				
ANR	10599372	AndExpression	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> GS . freeVector . x != 0 && delta >= control_value_cutin		10599128	0		&&			
ANR	10599373	Identifier	SUBPIXEL_HINTING_INFINALITY		10599128	0					
ANR	10599374	AndExpression	exc -> ignore_x_mode && exc -> GS . freeVector . x != 0 && delta >= control_value_cutin		10599128	1		&&			
ANR	10599375	PtrMemberAccess	exc -> ignore_x_mode		10599128	0					
ANR	10599376	Identifier	exc		10599128	0					
ANR	10599377	Identifier	ignore_x_mode		10599128	1					
ANR	10599378	AndExpression	exc -> GS . freeVector . x != 0 && delta >= control_value_cutin		10599128	1		&&			
ANR	10599379	EqualityExpression	exc -> GS . freeVector . x != 0		10599128	0		!=			
ANR	10599380	MemberAccess	exc -> GS . freeVector . x		10599128	0					
ANR	10599381	MemberAccess	exc -> GS . freeVector		10599128	0					
ANR	10599382	PtrMemberAccess	exc -> GS		10599128	0					
ANR	10599383	Identifier	exc		10599128	0					
ANR	10599384	Identifier	GS		10599128	1					
ANR	10599385	Identifier	freeVector		10599128	1					
ANR	10599386	Identifier	x		10599128	1					
ANR	10599387	PrimaryExpression	0		10599128	1					
ANR	10599388	RelationalExpression	delta >= control_value_cutin		10599128	1		>=			
ANR	10599389	Identifier	delta		10599128	0					
ANR	10599390	Identifier	control_value_cutin		10599128	1					
ANR	10599391	ExpressionStatement	distance = args [ 1 ]	5833:6:207378:207396	10599128	1	True				
ANR	10599392	AssignmentExpression	distance = args [ 1 ]		10599128	0		=			
ANR	10599393	Identifier	distance		10599128	0					
ANR	10599394	ArrayIndexing	args [ 1 ]		10599128	1					
ANR	10599395	Identifier	args		10599128	0					
ANR	10599396	PrimaryExpression	1		10599128	1					
ANR	10599397	ExpressionStatement	"exc -> func_move ( exc , & exc -> zp1 , point , SUB_LONG ( args [ 1 ] , distance ) )"	5836:4:207455:207585	10599128	12	True				
ANR	10599398	CallExpression	"exc -> func_move ( exc , & exc -> zp1 , point , SUB_LONG ( args [ 1 ] , distance ) )"		10599128	0					
ANR	10599399	Callee	exc -> func_move		10599128	0					
ANR	10599400	PtrMemberAccess	exc -> func_move		10599128	0					
ANR	10599401	Identifier	exc		10599128	0					
ANR	10599402	Identifier	func_move		10599128	1					
ANR	10599403	ArgumentList	exc		10599128	1					
ANR	10599404	Argument	exc		10599128	0					
ANR	10599405	Identifier	exc		10599128	0					
ANR	10599406	Argument	& exc -> zp1		10599128	1					
ANR	10599407	UnaryOperationExpression	& exc -> zp1		10599128	0					
ANR	10599408	UnaryOperator	&		10599128	0					
ANR	10599409	PtrMemberAccess	exc -> zp1		10599128	1					
ANR	10599410	Identifier	exc		10599128	0					
ANR	10599411	Identifier	zp1		10599128	1					
ANR	10599412	Argument	point		10599128	2					
ANR	10599413	Identifier	point		10599128	0					
ANR	10599414	Argument	"SUB_LONG ( args [ 1 ] , distance )"		10599128	3					
ANR	10599415	CallExpression	"SUB_LONG ( args [ 1 ] , distance )"		10599128	0					
ANR	10599416	Callee	SUB_LONG		10599128	0					
ANR	10599417	Identifier	SUB_LONG		10599128	0					
ANR	10599418	ArgumentList	args [ 1 ]		10599128	1					
ANR	10599419	Argument	args [ 1 ]		10599128	0					
ANR	10599420	ArrayIndexing	args [ 1 ]		10599128	0					
ANR	10599421	Identifier	args		10599128	0					
ANR	10599422	PrimaryExpression	1		10599128	1					
ANR	10599423	Argument	distance		10599128	1					
ANR	10599424	Identifier	distance		10599128	0					
ANR	10599425	ExpressionStatement	exc -> GS . rp1 = exc -> GS . rp0	5841:4:207592:207617	10599128	13	True				
ANR	10599426	AssignmentExpression	exc -> GS . rp1 = exc -> GS . rp0		10599128	0		=			
ANR	10599427	MemberAccess	exc -> GS . rp1		10599128	0					
ANR	10599428	PtrMemberAccess	exc -> GS		10599128	0					
ANR	10599429	Identifier	exc		10599128	0					
ANR	10599430	Identifier	GS		10599128	1					
ANR	10599431	Identifier	rp1		10599128	1					
ANR	10599432	MemberAccess	exc -> GS . rp0		10599128	1					
ANR	10599433	PtrMemberAccess	exc -> GS		10599128	0					
ANR	10599434	Identifier	exc		10599128	0					
ANR	10599435	Identifier	GS		10599128	1					
ANR	10599436	Identifier	rp0		10599128	1					
ANR	10599437	ExpressionStatement	exc -> GS . rp2 = point	5842:4:207623:207642	10599128	14	True				
ANR	10599438	AssignmentExpression	exc -> GS . rp2 = point		10599128	0		=			
ANR	10599439	MemberAccess	exc -> GS . rp2		10599128	0					
ANR	10599440	PtrMemberAccess	exc -> GS		10599128	0					
ANR	10599441	Identifier	exc		10599128	0					
ANR	10599442	Identifier	GS		10599128	1					
ANR	10599443	Identifier	rp2		10599128	1					
ANR	10599444	Identifier	point		10599128	1					
ANR	10599445	IfStatement	if ( ( exc -> opcode & 1 ) != 0 )		10599128	15					
ANR	10599446	Condition	( exc -> opcode & 1 ) != 0	5844:9:207654:207677	10599128	0	True				
ANR	10599447	EqualityExpression	( exc -> opcode & 1 ) != 0		10599128	0		!=			
ANR	10599448	BitAndExpression	exc -> opcode & 1		10599128	0		&			
ANR	10599449	PtrMemberAccess	exc -> opcode		10599128	0					
ANR	10599450	Identifier	exc		10599128	0					
ANR	10599451	Identifier	opcode		10599128	1					
ANR	10599452	PrimaryExpression	1		10599128	1					
ANR	10599453	PrimaryExpression	0		10599128	1					
ANR	10599454	ExpressionStatement	exc -> GS . rp0 = point	5845:6:207687:207706	10599128	1	True				
ANR	10599455	AssignmentExpression	exc -> GS . rp0 = point		10599128	0		=			
ANR	10599456	MemberAccess	exc -> GS . rp0		10599128	0					
ANR	10599457	PtrMemberAccess	exc -> GS		10599128	0					
ANR	10599458	Identifier	exc		10599128	0					
ANR	10599459	Identifier	GS		10599128	1					
ANR	10599460	Identifier	rp0		10599128	1					
ANR	10599461	Identifier	point		10599128	1					
ANR	10599462	ReturnType	static void		10599128	1					
ANR	10599463	Identifier	Ins_MSIRP		10599128	2					
ANR	10599464	ParameterList	"TT_ExecContext exc , FT_Long * args"		10599128	3					
ANR	10599465	Parameter	TT_ExecContext exc	5781:13:205738:205756	10599128	0	True				
ANR	10599466	ParameterType	TT_ExecContext		10599128	0					
ANR	10599467	Identifier	exc		10599128	1					
ANR	10599468	Parameter	FT_Long * args	5782:13:205772:205791	10599128	1	True				
ANR	10599469	ParameterType	FT_Long *		10599128	0					
ANR	10599470	Identifier	args		10599128	1					
ANR	10599471	CFGEntryNode	ENTRY		10599128		True				
ANR	10599472	CFGExitNode	EXIT		10599128		True				
ANR	10599473	Symbol	exc -> GS . freeVector . x		10599128						
ANR	10599474	Symbol	* exc -> zp1 . org		10599128						
ANR	10599475	Symbol	distance		10599128						
ANR	10599476	Symbol	* exc		10599128						
ANR	10599477	Symbol	control_value_cutin		10599128						
ANR	10599478	Symbol	delta		10599128						
ANR	10599479	Symbol	SUB_LONG		10599128						
ANR	10599480	Symbol	exc -> GS . control_value_cutin		10599128						
ANR	10599481	Symbol	* exc -> GS . rp0		10599128						
ANR	10599482	Symbol	point		10599128						
ANR	10599483	Symbol	* exc -> GS		10599128						
ANR	10599484	Symbol	* args		10599128						
ANR	10599485	Symbol	SUBPIXEL_HINTING_INFINALITY		10599128						
ANR	10599486	Symbol	exc		10599128						
ANR	10599487	Symbol	exc -> zp0 . n_points		10599128						
ANR	10599488	Symbol	Invalid_Reference		10599128						
ANR	10599489	Symbol	exc -> zp1 . org		10599128						
ANR	10599490	Symbol	BOUNDS		10599128						
ANR	10599491	Symbol	exc -> sph_tweak_flags		10599128						
ANR	10599492	Symbol	NEG_LONG		10599128						
ANR	10599493	Symbol	exc -> error		10599128						
ANR	10599494	Symbol	exc -> ignore_x_mode		10599128						
ANR	10599495	Symbol	exc -> zp0 . cur		10599128						
ANR	10599496	Symbol	* exc -> zp0 . org		10599128						
ANR	10599497	Symbol	PROJECT		10599128						
ANR	10599498	Symbol	SPH_TWEAK_NORMAL_ROUND		10599128						
ANR	10599499	Symbol	* * exc		10599128						
ANR	10599500	Symbol	* point		10599128						
ANR	10599501	Symbol	exc -> zp1 . n_points		10599128						
ANR	10599502	Symbol	* exc -> zp1 . cur		10599128						
ANR	10599503	Symbol	exc -> pedantic_hinting		10599128						
ANR	10599504	Symbol	exc -> GS . gep1		10599128						
ANR	10599505	Symbol	exc -> GS		10599128						
ANR	10599506	Symbol	FT_THROW		10599128						
ANR	10599507	Symbol	args		10599128						
ANR	10599508	Symbol	exc -> zp1		10599128						
ANR	10599509	Symbol	exc -> GS . rp1		10599128						
ANR	10599510	Symbol	exc -> GS . rp2		10599128						
ANR	10599511	Symbol	& exc -> zp1		10599128						
ANR	10599512	Symbol	exc -> GS . rp0		10599128						
ANR	10599513	Symbol	exc -> zp0		10599128						
ANR	10599514	Symbol	exc -> zp1 . cur		10599128						
ANR	10599515	Symbol	* exc -> zp0		10599128						
ANR	10599516	Symbol	exc -> zp0 . org		10599128						
ANR	10599517	Symbol	* exc -> zp1		10599128						
ANR	10599518	Symbol	exc -> opcode		10599128						
ANR	10599519	Symbol	exc -> GS . freeVector		10599128						
ANR	10599520	Function	Ins_MDAP	5855:2:208184:209407							
ANR	10599521	FunctionDef	"Ins_MDAP (TT_ExecContext exc , FT_Long * args)"		10599520	0					
ANR	10599522	CompoundStatement		5858:2:208266:209407	10599520	0					
ANR	10599523	IdentifierDeclStatement	FT_UShort point ;	5859:4:208272:208289	10599520	0	True				
ANR	10599524	IdentifierDecl	point		10599520	0					
ANR	10599525	IdentifierDeclType	FT_UShort		10599520	0					
ANR	10599526	Identifier	point		10599520	1					
ANR	10599527	IdentifierDeclStatement	FT_F26Dot6 cur_dist ;	5860:4:208295:208315	10599520	1	True				
ANR	10599528	IdentifierDecl	cur_dist		10599520	0					
ANR	10599529	IdentifierDeclType	FT_F26Dot6		10599520	0					
ANR	10599530	Identifier	cur_dist		10599520	1					
ANR	10599531	IdentifierDeclStatement	FT_F26Dot6 distance ;	5861:4:208321:208341	10599520	2	True				
ANR	10599532	IdentifierDecl	distance		10599520	0					
ANR	10599533	IdentifierDeclType	FT_F26Dot6		10599520	0					
ANR	10599534	Identifier	distance		10599520	1					
ANR	10599535	ExpressionStatement	point = ( FT_UShort ) args [ 0 ]	5864:4:208349:208375	10599520	3	True				
ANR	10599536	AssignmentExpression	point = ( FT_UShort ) args [ 0 ]		10599520	0		=			
ANR	10599537	Identifier	point		10599520	0					
ANR	10599538	CastExpression	( FT_UShort ) args [ 0 ]		10599520	1					
ANR	10599539	CastTarget	FT_UShort		10599520	0					
ANR	10599540	ArrayIndexing	args [ 0 ]		10599520	1					
ANR	10599541	Identifier	args		10599520	0					
ANR	10599542	PrimaryExpression	0		10599520	1					
ANR	10599543	IfStatement	"if ( BOUNDS ( point , exc -> zp0 . n_points ) )"		10599520	4					
ANR	10599544	Condition	"BOUNDS ( point , exc -> zp0 . n_points )"	5866:9:208387:208420	10599520	0	True				
ANR	10599545	CallExpression	"BOUNDS ( point , exc -> zp0 . n_points )"		10599520	0					
ANR	10599546	Callee	BOUNDS		10599520	0					
ANR	10599547	Identifier	BOUNDS		10599520	0					
ANR	10599548	ArgumentList	point		10599520	1					
ANR	10599549	Argument	point		10599520	0					
ANR	10599550	Identifier	point		10599520	0					
ANR	10599551	Argument	exc -> zp0 . n_points		10599520	1					
ANR	10599552	MemberAccess	exc -> zp0 . n_points		10599520	0					
ANR	10599553	PtrMemberAccess	exc -> zp0		10599520	0					
ANR	10599554	Identifier	exc		10599520	0					
ANR	10599555	Identifier	zp0		10599520	1					
ANR	10599556	Identifier	n_points		10599520	1					
ANR	10599557	CompoundStatement		10:4:161:161	10599520	1					
ANR	10599558	IfStatement	if ( exc -> pedantic_hinting )		10599520	0					
ANR	10599559	Condition	exc -> pedantic_hinting	5868:11:208441:208461	10599520	0	True				
ANR	10599560	PtrMemberAccess	exc -> pedantic_hinting		10599520	0					
ANR	10599561	Identifier	exc		10599520	0					
ANR	10599562	Identifier	pedantic_hinting		10599520	1					
ANR	10599563	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	5869:8:208473:208515	10599520	1	True				
ANR	10599564	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10599520	0		=			
ANR	10599565	PtrMemberAccess	exc -> error		10599520	0					
ANR	10599566	Identifier	exc		10599520	0					
ANR	10599567	Identifier	error		10599520	1					
ANR	10599568	CallExpression	FT_THROW ( Invalid_Reference )		10599520	1					
ANR	10599569	Callee	FT_THROW		10599520	0					
ANR	10599570	Identifier	FT_THROW		10599520	0					
ANR	10599571	ArgumentList	Invalid_Reference		10599520	1					
ANR	10599572	Argument	Invalid_Reference		10599520	0					
ANR	10599573	Identifier	Invalid_Reference		10599520	0					
ANR	10599574	ReturnStatement	return ;	5870:6:208523:208529	10599520	1	True				
ANR	10599575	IfStatement	if ( ( exc -> opcode & 1 ) != 0 )		10599520	5					
ANR	10599576	Condition	( exc -> opcode & 1 ) != 0	5873:9:208547:208570	10599520	0	True				
ANR	10599577	EqualityExpression	( exc -> opcode & 1 ) != 0		10599520	0		!=			
ANR	10599578	BitAndExpression	exc -> opcode & 1		10599520	0		&			
ANR	10599579	PtrMemberAccess	exc -> opcode		10599520	0					
ANR	10599580	Identifier	exc		10599520	0					
ANR	10599581	Identifier	opcode		10599520	1					
ANR	10599582	PrimaryExpression	1		10599520	1					
ANR	10599583	PrimaryExpression	0		10599520	1					
ANR	10599584	CompoundStatement		17:4:311:311	10599520	1					
ANR	10599585	ExpressionStatement	cur_dist = FAST_PROJECT ( & exc -> zp0 . cur [ point ] )	5875:6:208586:208633	10599520	0	True				
ANR	10599586	AssignmentExpression	cur_dist = FAST_PROJECT ( & exc -> zp0 . cur [ point ] )		10599520	0		=			
ANR	10599587	Identifier	cur_dist		10599520	0					
ANR	10599588	CallExpression	FAST_PROJECT ( & exc -> zp0 . cur [ point ] )		10599520	1					
ANR	10599589	Callee	FAST_PROJECT		10599520	0					
ANR	10599590	Identifier	FAST_PROJECT		10599520	0					
ANR	10599591	ArgumentList	& exc -> zp0 . cur [ point ]		10599520	1					
ANR	10599592	Argument	& exc -> zp0 . cur [ point ]		10599520	0					
ANR	10599593	UnaryOperationExpression	& exc -> zp0 . cur [ point ]		10599520	0					
ANR	10599594	UnaryOperator	&		10599520	0					
ANR	10599595	ArrayIndexing	exc -> zp0 . cur [ point ]		10599520	1					
ANR	10599596	MemberAccess	exc -> zp0 . cur		10599520	0					
ANR	10599597	PtrMemberAccess	exc -> zp0		10599520	0					
ANR	10599598	Identifier	exc		10599520	0					
ANR	10599599	Identifier	zp0		10599520	1					
ANR	10599600	Identifier	cur		10599520	1					
ANR	10599601	Identifier	point		10599520	1					
ANR	10599602	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> GS . freeVector . x != 0 )		10599520	1					
ANR	10599603	Condition	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> GS . freeVector . x != 0	5877:11:208692:208800	10599520	0	True				
ANR	10599604	AndExpression	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> GS . freeVector . x != 0		10599520	0		&&			
ANR	10599605	Identifier	SUBPIXEL_HINTING_INFINALITY		10599520	0					
ANR	10599606	AndExpression	exc -> ignore_x_mode && exc -> GS . freeVector . x != 0		10599520	1		&&			
ANR	10599607	PtrMemberAccess	exc -> ignore_x_mode		10599520	0					
ANR	10599608	Identifier	exc		10599520	0					
ANR	10599609	Identifier	ignore_x_mode		10599520	1					
ANR	10599610	EqualityExpression	exc -> GS . freeVector . x != 0		10599520	1		!=			
ANR	10599611	MemberAccess	exc -> GS . freeVector . x		10599520	0					
ANR	10599612	MemberAccess	exc -> GS . freeVector		10599520	0					
ANR	10599613	PtrMemberAccess	exc -> GS		10599520	0					
ANR	10599614	Identifier	exc		10599520	0					
ANR	10599615	Identifier	GS		10599520	1					
ANR	10599616	Identifier	freeVector		10599520	1					
ANR	10599617	Identifier	x		10599520	1					
ANR	10599618	PrimaryExpression	0		10599520	1					
ANR	10599619	ExpressionStatement	"distance = SUB_LONG ( Round_None ( exc , cur_dist , exc -> tt_metrics . compensations [ 0 ] ) , cur_dist )"	5880:8:208814:209016	10599520	1	True				
ANR	10599620	AssignmentExpression	"distance = SUB_LONG ( Round_None ( exc , cur_dist , exc -> tt_metrics . compensations [ 0 ] ) , cur_dist )"		10599520	0		=			
ANR	10599621	Identifier	distance		10599520	0					
ANR	10599622	CallExpression	"SUB_LONG ( Round_None ( exc , cur_dist , exc -> tt_metrics . compensations [ 0 ] ) , cur_dist )"		10599520	1					
ANR	10599623	Callee	SUB_LONG		10599520	0					
ANR	10599624	Identifier	SUB_LONG		10599520	0					
ANR	10599625	ArgumentList	"Round_None ( exc , cur_dist , exc -> tt_metrics . compensations [ 0 ] )"		10599520	1					
ANR	10599626	Argument	"Round_None ( exc , cur_dist , exc -> tt_metrics . compensations [ 0 ] )"		10599520	0					
ANR	10599627	CallExpression	"Round_None ( exc , cur_dist , exc -> tt_metrics . compensations [ 0 ] )"		10599520	0					
ANR	10599628	Callee	Round_None		10599520	0					
ANR	10599629	Identifier	Round_None		10599520	0					
ANR	10599630	ArgumentList	exc		10599520	1					
ANR	10599631	Argument	exc		10599520	0					
ANR	10599632	Identifier	exc		10599520	0					
ANR	10599633	Argument	cur_dist		10599520	1					
ANR	10599634	Identifier	cur_dist		10599520	0					
ANR	10599635	Argument	exc -> tt_metrics . compensations [ 0 ]		10599520	2					
ANR	10599636	ArrayIndexing	exc -> tt_metrics . compensations [ 0 ]		10599520	0					
ANR	10599637	MemberAccess	exc -> tt_metrics . compensations		10599520	0					
ANR	10599638	PtrMemberAccess	exc -> tt_metrics		10599520	0					
ANR	10599639	Identifier	exc		10599520	0					
ANR	10599640	Identifier	tt_metrics		10599520	1					
ANR	10599641	Identifier	compensations		10599520	1					
ANR	10599642	PrimaryExpression	0		10599520	1					
ANR	10599643	Argument	cur_dist		10599520	1					
ANR	10599644	Identifier	cur_dist		10599520	0					
ANR	10599645	ElseStatement	else		10599520	0					
ANR	10599646	ExpressionStatement	"distance = SUB_LONG ( exc -> func_round ( exc , cur_dist , exc -> tt_metrics . compensations [ 0 ] ) , cur_dist )"	5887:8:209044:209261	10599520	0	True				
ANR	10599647	AssignmentExpression	"distance = SUB_LONG ( exc -> func_round ( exc , cur_dist , exc -> tt_metrics . compensations [ 0 ] ) , cur_dist )"		10599520	0		=			
ANR	10599648	Identifier	distance		10599520	0					
ANR	10599649	CallExpression	"SUB_LONG ( exc -> func_round ( exc , cur_dist , exc -> tt_metrics . compensations [ 0 ] ) , cur_dist )"		10599520	1					
ANR	10599650	Callee	SUB_LONG		10599520	0					
ANR	10599651	Identifier	SUB_LONG		10599520	0					
ANR	10599652	ArgumentList	"exc -> func_round ( exc , cur_dist , exc -> tt_metrics . compensations [ 0 ] )"		10599520	1					
ANR	10599653	Argument	"exc -> func_round ( exc , cur_dist , exc -> tt_metrics . compensations [ 0 ] )"		10599520	0					
ANR	10599654	CallExpression	"exc -> func_round ( exc , cur_dist , exc -> tt_metrics . compensations [ 0 ] )"		10599520	0					
ANR	10599655	Callee	exc -> func_round		10599520	0					
ANR	10599656	PtrMemberAccess	exc -> func_round		10599520	0					
ANR	10599657	Identifier	exc		10599520	0					
ANR	10599658	Identifier	func_round		10599520	1					
ANR	10599659	ArgumentList	exc		10599520	1					
ANR	10599660	Argument	exc		10599520	0					
ANR	10599661	Identifier	exc		10599520	0					
ANR	10599662	Argument	cur_dist		10599520	1					
ANR	10599663	Identifier	cur_dist		10599520	0					
ANR	10599664	Argument	exc -> tt_metrics . compensations [ 0 ]		10599520	2					
ANR	10599665	ArrayIndexing	exc -> tt_metrics . compensations [ 0 ]		10599520	0					
ANR	10599666	MemberAccess	exc -> tt_metrics . compensations		10599520	0					
ANR	10599667	PtrMemberAccess	exc -> tt_metrics		10599520	0					
ANR	10599668	Identifier	exc		10599520	0					
ANR	10599669	Identifier	tt_metrics		10599520	1					
ANR	10599670	Identifier	compensations		10599520	1					
ANR	10599671	PrimaryExpression	0		10599520	1					
ANR	10599672	Argument	cur_dist		10599520	1					
ANR	10599673	Identifier	cur_dist		10599520	0					
ANR	10599674	ElseStatement	else		10599520	0					
ANR	10599675	ExpressionStatement	distance = 0	5894:6:209284:209296	10599520	0	True				
ANR	10599676	AssignmentExpression	distance = 0		10599520	0		=			
ANR	10599677	Identifier	distance		10599520	0					
ANR	10599678	PrimaryExpression	0		10599520	1					
ANR	10599679	ExpressionStatement	"exc -> func_move ( exc , & exc -> zp0 , point , distance )"	5896:4:209303:209352	10599520	6	True				
ANR	10599680	CallExpression	"exc -> func_move ( exc , & exc -> zp0 , point , distance )"		10599520	0					
ANR	10599681	Callee	exc -> func_move		10599520	0					
ANR	10599682	PtrMemberAccess	exc -> func_move		10599520	0					
ANR	10599683	Identifier	exc		10599520	0					
ANR	10599684	Identifier	func_move		10599520	1					
ANR	10599685	ArgumentList	exc		10599520	1					
ANR	10599686	Argument	exc		10599520	0					
ANR	10599687	Identifier	exc		10599520	0					
ANR	10599688	Argument	& exc -> zp0		10599520	1					
ANR	10599689	UnaryOperationExpression	& exc -> zp0		10599520	0					
ANR	10599690	UnaryOperator	&		10599520	0					
ANR	10599691	PtrMemberAccess	exc -> zp0		10599520	1					
ANR	10599692	Identifier	exc		10599520	0					
ANR	10599693	Identifier	zp0		10599520	1					
ANR	10599694	Argument	point		10599520	2					
ANR	10599695	Identifier	point		10599520	0					
ANR	10599696	Argument	distance		10599520	3					
ANR	10599697	Identifier	distance		10599520	0					
ANR	10599698	ExpressionStatement	exc -> GS . rp0 = point	5898:4:209359:209378	10599520	7	True				
ANR	10599699	AssignmentExpression	exc -> GS . rp0 = point		10599520	0		=			
ANR	10599700	MemberAccess	exc -> GS . rp0		10599520	0					
ANR	10599701	PtrMemberAccess	exc -> GS		10599520	0					
ANR	10599702	Identifier	exc		10599520	0					
ANR	10599703	Identifier	GS		10599520	1					
ANR	10599704	Identifier	rp0		10599520	1					
ANR	10599705	Identifier	point		10599520	1					
ANR	10599706	ExpressionStatement	exc -> GS . rp1 = point	5899:4:209384:209403	10599520	8	True				
ANR	10599707	AssignmentExpression	exc -> GS . rp1 = point		10599520	0		=			
ANR	10599708	MemberAccess	exc -> GS . rp1		10599520	0					
ANR	10599709	PtrMemberAccess	exc -> GS		10599520	0					
ANR	10599710	Identifier	exc		10599520	0					
ANR	10599711	Identifier	GS		10599520	1					
ANR	10599712	Identifier	rp1		10599520	1					
ANR	10599713	Identifier	point		10599520	1					
ANR	10599714	ReturnType	static void		10599520	1					
ANR	10599715	Identifier	Ins_MDAP		10599520	2					
ANR	10599716	ParameterList	"TT_ExecContext exc , FT_Long * args"		10599520	3					
ANR	10599717	Parameter	TT_ExecContext exc	5856:12:208208:208226	10599520	0	True				
ANR	10599718	ParameterType	TT_ExecContext		10599520	0					
ANR	10599719	Identifier	exc		10599520	1					
ANR	10599720	Parameter	FT_Long * args	5857:12:208241:208260	10599520	1	True				
ANR	10599721	ParameterType	FT_Long *		10599520	0					
ANR	10599722	Identifier	args		10599520	1					
ANR	10599723	CFGEntryNode	ENTRY		10599520		True				
ANR	10599724	CFGExitNode	EXIT		10599520		True				
ANR	10599725	Symbol	FAST_PROJECT		10599520						
ANR	10599726	Symbol	exc -> GS . freeVector . x		10599520						
ANR	10599727	Symbol	* exc -> tt_metrics . compensations		10599520						
ANR	10599728	Symbol	distance		10599520						
ANR	10599729	Symbol	exc -> tt_metrics . compensations		10599520						
ANR	10599730	Symbol	Round_None		10599520						
ANR	10599731	Symbol	* exc		10599520						
ANR	10599732	Symbol	SUB_LONG		10599520						
ANR	10599733	Symbol	point		10599520						
ANR	10599734	Symbol	* args		10599520						
ANR	10599735	Symbol	SUBPIXEL_HINTING_INFINALITY		10599520						
ANR	10599736	Symbol	exc		10599520						
ANR	10599737	Symbol	exc -> zp0 . n_points		10599520						
ANR	10599738	Symbol	Invalid_Reference		10599520						
ANR	10599739	Symbol	* exc -> tt_metrics		10599520						
ANR	10599740	Symbol	BOUNDS		10599520						
ANR	10599741	Symbol	exc -> func_round		10599520						
ANR	10599742	Symbol	exc -> error		10599520						
ANR	10599743	Symbol	exc -> ignore_x_mode		10599520						
ANR	10599744	Symbol	exc -> zp0 . cur		10599520						
ANR	10599745	Symbol	* * exc		10599520						
ANR	10599746	Symbol	exc -> pedantic_hinting		10599520						
ANR	10599747	Symbol	exc -> GS		10599520						
ANR	10599748	Symbol	exc -> tt_metrics		10599520						
ANR	10599749	Symbol	FT_THROW		10599520						
ANR	10599750	Symbol	args		10599520						
ANR	10599751	Symbol	exc -> GS . rp1		10599520						
ANR	10599752	Symbol	exc -> GS . rp0		10599520						
ANR	10599753	Symbol	exc -> zp0		10599520						
ANR	10599754	Symbol	& exc -> zp0		10599520						
ANR	10599755	Symbol	cur_dist		10599520						
ANR	10599756	Symbol	exc -> opcode		10599520						
ANR	10599757	Symbol	exc -> GS . freeVector		10599520						
ANR	10599758	Function	Ins_MIAP	5909:2:209881:214597							
ANR	10599759	FunctionDef	"Ins_MIAP (TT_ExecContext exc , FT_Long * args)"		10599758	0					
ANR	10599760	CompoundStatement		5912:2:209963:214597	10599758	0					
ANR	10599761	IdentifierDeclStatement	FT_ULong cvtEntry ;	5913:4:209969:209989	10599758	0	True				
ANR	10599762	IdentifierDecl	cvtEntry		10599758	0					
ANR	10599763	IdentifierDeclType	FT_ULong		10599758	0					
ANR	10599764	Identifier	cvtEntry		10599758	1					
ANR	10599765	IdentifierDeclStatement	FT_UShort point ;	5914:4:209995:210012	10599758	1	True				
ANR	10599766	IdentifierDecl	point		10599758	0					
ANR	10599767	IdentifierDeclType	FT_UShort		10599758	0					
ANR	10599768	Identifier	point		10599758	1					
ANR	10599769	IdentifierDeclStatement	FT_F26Dot6 distance ;	5915:4:210018:210038	10599758	2	True				
ANR	10599770	IdentifierDecl	distance		10599758	0					
ANR	10599771	IdentifierDeclType	FT_F26Dot6		10599758	0					
ANR	10599772	Identifier	distance		10599758	1					
ANR	10599773	IdentifierDeclStatement	FT_F26Dot6 org_dist ;	5916:4:210044:210064	10599758	3	True				
ANR	10599774	IdentifierDecl	org_dist		10599758	0					
ANR	10599775	IdentifierDeclType	FT_F26Dot6		10599758	0					
ANR	10599776	Identifier	org_dist		10599758	1					
ANR	10599777	IdentifierDeclStatement	FT_F26Dot6 control_value_cutin ;	5917:4:210070:210101	10599758	4	True				
ANR	10599778	IdentifierDecl	control_value_cutin		10599758	0					
ANR	10599779	IdentifierDeclType	FT_F26Dot6		10599758	0					
ANR	10599780	Identifier	control_value_cutin		10599758	1					
ANR	10599781	ExpressionStatement	control_value_cutin = exc -> GS . control_value_cutin	5920:4:210109:210158	10599758	5	True				
ANR	10599782	AssignmentExpression	control_value_cutin = exc -> GS . control_value_cutin		10599758	0		=			
ANR	10599783	Identifier	control_value_cutin		10599758	0					
ANR	10599784	MemberAccess	exc -> GS . control_value_cutin		10599758	1					
ANR	10599785	PtrMemberAccess	exc -> GS		10599758	0					
ANR	10599786	Identifier	exc		10599758	0					
ANR	10599787	Identifier	GS		10599758	1					
ANR	10599788	Identifier	control_value_cutin		10599758	1					
ANR	10599789	ExpressionStatement	cvtEntry = ( FT_ULong ) args [ 1 ]	5921:4:210164:210203	10599758	6	True				
ANR	10599790	AssignmentExpression	cvtEntry = ( FT_ULong ) args [ 1 ]		10599758	0		=			
ANR	10599791	Identifier	cvtEntry		10599758	0					
ANR	10599792	CastExpression	( FT_ULong ) args [ 1 ]		10599758	1					
ANR	10599793	CastTarget	FT_ULong		10599758	0					
ANR	10599794	ArrayIndexing	args [ 1 ]		10599758	1					
ANR	10599795	Identifier	args		10599758	0					
ANR	10599796	PrimaryExpression	1		10599758	1					
ANR	10599797	ExpressionStatement	point = ( FT_UShort ) args [ 0 ]	5922:4:210209:210249	10599758	7	True				
ANR	10599798	AssignmentExpression	point = ( FT_UShort ) args [ 0 ]		10599758	0		=			
ANR	10599799	Identifier	point		10599758	0					
ANR	10599800	CastExpression	( FT_UShort ) args [ 0 ]		10599758	1					
ANR	10599801	CastTarget	FT_UShort		10599758	0					
ANR	10599802	ArrayIndexing	args [ 0 ]		10599758	1					
ANR	10599803	Identifier	args		10599758	0					
ANR	10599804	PrimaryExpression	0		10599758	1					
ANR	10599805	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> GS . freeVector . x != 0 && exc -> GS . freeVector . y == 0 && ! ( exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND ) )		10599758	8					
ANR	10599806	Condition	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> GS . freeVector . x != 0 && exc -> GS . freeVector . y == 0 && ! ( exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND )	5925:9:210307:210608	10599758	0	True				
ANR	10599807	AndExpression	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> GS . freeVector . x != 0 && exc -> GS . freeVector . y == 0 && ! ( exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND )		10599758	0		&&			
ANR	10599808	Identifier	SUBPIXEL_HINTING_INFINALITY		10599758	0					
ANR	10599809	AndExpression	exc -> ignore_x_mode && exc -> GS . freeVector . x != 0 && exc -> GS . freeVector . y == 0 && ! ( exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND )		10599758	1		&&			
ANR	10599810	PtrMemberAccess	exc -> ignore_x_mode		10599758	0					
ANR	10599811	Identifier	exc		10599758	0					
ANR	10599812	Identifier	ignore_x_mode		10599758	1					
ANR	10599813	AndExpression	exc -> GS . freeVector . x != 0 && exc -> GS . freeVector . y == 0 && ! ( exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND )		10599758	1		&&			
ANR	10599814	EqualityExpression	exc -> GS . freeVector . x != 0		10599758	0		!=			
ANR	10599815	MemberAccess	exc -> GS . freeVector . x		10599758	0					
ANR	10599816	MemberAccess	exc -> GS . freeVector		10599758	0					
ANR	10599817	PtrMemberAccess	exc -> GS		10599758	0					
ANR	10599818	Identifier	exc		10599758	0					
ANR	10599819	Identifier	GS		10599758	1					
ANR	10599820	Identifier	freeVector		10599758	1					
ANR	10599821	Identifier	x		10599758	1					
ANR	10599822	PrimaryExpression	0		10599758	1					
ANR	10599823	AndExpression	exc -> GS . freeVector . y == 0 && ! ( exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND )		10599758	1		&&			
ANR	10599824	EqualityExpression	exc -> GS . freeVector . y == 0		10599758	0		==			
ANR	10599825	MemberAccess	exc -> GS . freeVector . y		10599758	0					
ANR	10599826	MemberAccess	exc -> GS . freeVector		10599758	0					
ANR	10599827	PtrMemberAccess	exc -> GS		10599758	0					
ANR	10599828	Identifier	exc		10599758	0					
ANR	10599829	Identifier	GS		10599758	1					
ANR	10599830	Identifier	freeVector		10599758	1					
ANR	10599831	Identifier	y		10599758	1					
ANR	10599832	PrimaryExpression	0		10599758	1					
ANR	10599833	UnaryOperationExpression	! ( exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND )		10599758	1					
ANR	10599834	UnaryOperator	!		10599758	0					
ANR	10599835	BitAndExpression	exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND		10599758	1		&			
ANR	10599836	PtrMemberAccess	exc -> sph_tweak_flags		10599758	0					
ANR	10599837	Identifier	exc		10599758	0					
ANR	10599838	Identifier	sph_tweak_flags		10599758	1					
ANR	10599839	Identifier	SPH_TWEAK_NORMAL_ROUND		10599758	1					
ANR	10599840	ExpressionStatement	control_value_cutin = 0	5930:6:210618:210641	10599758	1	True				
ANR	10599841	AssignmentExpression	control_value_cutin = 0		10599758	0		=			
ANR	10599842	Identifier	control_value_cutin		10599758	0					
ANR	10599843	PrimaryExpression	0		10599758	1					
ANR	10599844	IfStatement	"if ( BOUNDS ( point , exc -> zp0 . n_points ) || BOUNDSL ( cvtEntry , exc -> cvtSize ) )"		10599758	9					
ANR	10599845	Condition	"BOUNDS ( point , exc -> zp0 . n_points ) || BOUNDSL ( cvtEntry , exc -> cvtSize )"	5933:9:210705:210788	10599758	0	True				
ANR	10599846	OrExpression	"BOUNDS ( point , exc -> zp0 . n_points ) || BOUNDSL ( cvtEntry , exc -> cvtSize )"		10599758	0		||			
ANR	10599847	CallExpression	"BOUNDS ( point , exc -> zp0 . n_points )"		10599758	0					
ANR	10599848	Callee	BOUNDS		10599758	0					
ANR	10599849	Identifier	BOUNDS		10599758	0					
ANR	10599850	ArgumentList	point		10599758	1					
ANR	10599851	Argument	point		10599758	0					
ANR	10599852	Identifier	point		10599758	0					
ANR	10599853	Argument	exc -> zp0 . n_points		10599758	1					
ANR	10599854	MemberAccess	exc -> zp0 . n_points		10599758	0					
ANR	10599855	PtrMemberAccess	exc -> zp0		10599758	0					
ANR	10599856	Identifier	exc		10599758	0					
ANR	10599857	Identifier	zp0		10599758	1					
ANR	10599858	Identifier	n_points		10599758	1					
ANR	10599859	CallExpression	"BOUNDSL ( cvtEntry , exc -> cvtSize )"		10599758	1					
ANR	10599860	Callee	BOUNDSL		10599758	0					
ANR	10599861	Identifier	BOUNDSL		10599758	0					
ANR	10599862	ArgumentList	cvtEntry		10599758	1					
ANR	10599863	Argument	cvtEntry		10599758	0					
ANR	10599864	Identifier	cvtEntry		10599758	0					
ANR	10599865	Argument	exc -> cvtSize		10599758	1					
ANR	10599866	PtrMemberAccess	exc -> cvtSize		10599758	0					
ANR	10599867	Identifier	exc		10599758	0					
ANR	10599868	Identifier	cvtSize		10599758	1					
ANR	10599869	CompoundStatement		24:4:837:837	10599758	1					
ANR	10599870	IfStatement	if ( exc -> pedantic_hinting )		10599758	0					
ANR	10599871	Condition	exc -> pedantic_hinting	5936:11:210814:210834	10599758	0	True				
ANR	10599872	PtrMemberAccess	exc -> pedantic_hinting		10599758	0					
ANR	10599873	Identifier	exc		10599758	0					
ANR	10599874	Identifier	pedantic_hinting		10599758	1					
ANR	10599875	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	5937:8:210846:210888	10599758	1	True				
ANR	10599876	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10599758	0		=			
ANR	10599877	PtrMemberAccess	exc -> error		10599758	0					
ANR	10599878	Identifier	exc		10599758	0					
ANR	10599879	Identifier	error		10599758	1					
ANR	10599880	CallExpression	FT_THROW ( Invalid_Reference )		10599758	1					
ANR	10599881	Callee	FT_THROW		10599758	0					
ANR	10599882	Identifier	FT_THROW		10599758	0					
ANR	10599883	ArgumentList	Invalid_Reference		10599758	1					
ANR	10599884	Argument	Invalid_Reference		10599758	0					
ANR	10599885	Identifier	Invalid_Reference		10599758	0					
ANR	10599886	GotoStatement	goto Fail ;	5938:6:210896:210905	10599758	1	True				
ANR	10599887	Identifier	Fail		10599758	0					
ANR	10599888	ExpressionStatement	"distance = exc -> func_read_cvt ( exc , cvtEntry )"	5961:4:212382:212428	10599758	10	True				
ANR	10599889	AssignmentExpression	"distance = exc -> func_read_cvt ( exc , cvtEntry )"		10599758	0		=			
ANR	10599890	Identifier	distance		10599758	0					
ANR	10599891	CallExpression	"exc -> func_read_cvt ( exc , cvtEntry )"		10599758	1					
ANR	10599892	Callee	exc -> func_read_cvt		10599758	0					
ANR	10599893	PtrMemberAccess	exc -> func_read_cvt		10599758	0					
ANR	10599894	Identifier	exc		10599758	0					
ANR	10599895	Identifier	func_read_cvt		10599758	1					
ANR	10599896	ArgumentList	exc		10599758	1					
ANR	10599897	Argument	exc		10599758	0					
ANR	10599898	Identifier	exc		10599758	0					
ANR	10599899	Argument	cvtEntry		10599758	1					
ANR	10599900	Identifier	cvtEntry		10599758	0					
ANR	10599901	IfStatement	if ( exc -> GS . gep0 == 0 )		10599758	11					
ANR	10599902	Condition	exc -> GS . gep0 == 0	5963:9:212440:212456	10599758	0	True				
ANR	10599903	EqualityExpression	exc -> GS . gep0 == 0		10599758	0		==			
ANR	10599904	MemberAccess	exc -> GS . gep0		10599758	0					
ANR	10599905	PtrMemberAccess	exc -> GS		10599758	0					
ANR	10599906	Identifier	exc		10599758	0					
ANR	10599907	Identifier	GS		10599758	1					
ANR	10599908	Identifier	gep0		10599758	1					
ANR	10599909	PrimaryExpression	0		10599758	1					
ANR	10599910	CompoundStatement		53:4:2528:2528	10599758	1					
ANR	10599911	IfStatement	if ( ! ( SUBPIXEL_HINTING_INFINALITY && ( exc -> ignore_x_mode && exc -> face -> sph_compatibility_mode ) ) )		10599758	0					
ANR	10599912	Condition	! ( SUBPIXEL_HINTING_INFINALITY && ( exc -> ignore_x_mode && exc -> face -> sph_compatibility_mode ) )	5968:11:212701:212850	10599758	0	True				
ANR	10599913	UnaryOperationExpression	! ( SUBPIXEL_HINTING_INFINALITY && ( exc -> ignore_x_mode && exc -> face -> sph_compatibility_mode ) )		10599758	0					
ANR	10599914	UnaryOperator	!		10599758	0					
ANR	10599915	AndExpression	SUBPIXEL_HINTING_INFINALITY && ( exc -> ignore_x_mode && exc -> face -> sph_compatibility_mode )		10599758	1		&&			
ANR	10599916	Identifier	SUBPIXEL_HINTING_INFINALITY		10599758	0					
ANR	10599917	AndExpression	exc -> ignore_x_mode && exc -> face -> sph_compatibility_mode		10599758	1		&&			
ANR	10599918	PtrMemberAccess	exc -> ignore_x_mode		10599758	0					
ANR	10599919	Identifier	exc		10599758	0					
ANR	10599920	Identifier	ignore_x_mode		10599758	1					
ANR	10599921	PtrMemberAccess	exc -> face -> sph_compatibility_mode		10599758	1					
ANR	10599922	PtrMemberAccess	exc -> face		10599758	0					
ANR	10599923	Identifier	exc		10599758	0					
ANR	10599924	Identifier	face		10599758	1					
ANR	10599925	Identifier	sph_compatibility_mode		10599758	1					
ANR	10599926	ExpressionStatement	"exc -> zp0 . org [ point ] . x = TT_MulFix14 ( distance , exc -> GS . freeVector . x )"	5972:8:212914:213028	10599758	1	True				
ANR	10599927	AssignmentExpression	"exc -> zp0 . org [ point ] . x = TT_MulFix14 ( distance , exc -> GS . freeVector . x )"		10599758	0		=			
ANR	10599928	MemberAccess	exc -> zp0 . org [ point ] . x		10599758	0					
ANR	10599929	ArrayIndexing	exc -> zp0 . org [ point ]		10599758	0					
ANR	10599930	MemberAccess	exc -> zp0 . org		10599758	0					
ANR	10599931	PtrMemberAccess	exc -> zp0		10599758	0					
ANR	10599932	Identifier	exc		10599758	0					
ANR	10599933	Identifier	zp0		10599758	1					
ANR	10599934	Identifier	org		10599758	1					
ANR	10599935	Identifier	point		10599758	1					
ANR	10599936	Identifier	x		10599758	1					
ANR	10599937	CallExpression	"TT_MulFix14 ( distance , exc -> GS . freeVector . x )"		10599758	1					
ANR	10599938	Callee	TT_MulFix14		10599758	0					
ANR	10599939	Identifier	TT_MulFix14		10599758	0					
ANR	10599940	ArgumentList	distance		10599758	1					
ANR	10599941	Argument	distance		10599758	0					
ANR	10599942	Identifier	distance		10599758	0					
ANR	10599943	Argument	exc -> GS . freeVector . x		10599758	1					
ANR	10599944	MemberAccess	exc -> GS . freeVector . x		10599758	0					
ANR	10599945	MemberAccess	exc -> GS . freeVector		10599758	0					
ANR	10599946	PtrMemberAccess	exc -> GS		10599758	0					
ANR	10599947	Identifier	exc		10599758	0					
ANR	10599948	Identifier	GS		10599758	1					
ANR	10599949	Identifier	freeVector		10599758	1					
ANR	10599950	Identifier	x		10599758	1					
ANR	10599951	ExpressionStatement	"exc -> zp0 . org [ point ] . y = TT_MulFix14 ( distance , exc -> GS . freeVector . y ) , exc -> zp0 . cur [ point ] = exc -> zp0 . org [ point ]"	5974:6:213036:213199	10599758	1	True				
ANR	10599952	Expression	"exc -> zp0 . org [ point ] . y = TT_MulFix14 ( distance , exc -> GS . freeVector . y ) , exc -> zp0 . cur [ point ] = exc -> zp0 . org [ point ]"		10599758	0					
ANR	10599953	AssignmentExpression	"exc -> zp0 . org [ point ] . y = TT_MulFix14 ( distance , exc -> GS . freeVector . y )"		10599758	0		=			
ANR	10599954	MemberAccess	exc -> zp0 . org [ point ] . y		10599758	0					
ANR	10599955	ArrayIndexing	exc -> zp0 . org [ point ]		10599758	0					
ANR	10599956	MemberAccess	exc -> zp0 . org		10599758	0					
ANR	10599957	PtrMemberAccess	exc -> zp0		10599758	0					
ANR	10599958	Identifier	exc		10599758	0					
ANR	10599959	Identifier	zp0		10599758	1					
ANR	10599960	Identifier	org		10599758	1					
ANR	10599961	Identifier	point		10599758	1					
ANR	10599962	Identifier	y		10599758	1					
ANR	10599963	CallExpression	"TT_MulFix14 ( distance , exc -> GS . freeVector . y )"		10599758	1					
ANR	10599964	Callee	TT_MulFix14		10599758	0					
ANR	10599965	Identifier	TT_MulFix14		10599758	0					
ANR	10599966	ArgumentList	distance		10599758	1					
ANR	10599967	Argument	distance		10599758	0					
ANR	10599968	Identifier	distance		10599758	0					
ANR	10599969	Argument	exc -> GS . freeVector . y		10599758	1					
ANR	10599970	MemberAccess	exc -> GS . freeVector . y		10599758	0					
ANR	10599971	MemberAccess	exc -> GS . freeVector		10599758	0					
ANR	10599972	PtrMemberAccess	exc -> GS		10599758	0					
ANR	10599973	Identifier	exc		10599758	0					
ANR	10599974	Identifier	GS		10599758	1					
ANR	10599975	Identifier	freeVector		10599758	1					
ANR	10599976	Identifier	y		10599758	1					
ANR	10599977	AssignmentExpression	exc -> zp0 . cur [ point ] = exc -> zp0 . org [ point ]		10599758	1		=			
ANR	10599978	ArrayIndexing	exc -> zp0 . cur [ point ]		10599758	0					
ANR	10599979	MemberAccess	exc -> zp0 . cur		10599758	0					
ANR	10599980	PtrMemberAccess	exc -> zp0		10599758	0					
ANR	10599981	Identifier	exc		10599758	0					
ANR	10599982	Identifier	zp0		10599758	1					
ANR	10599983	Identifier	cur		10599758	1					
ANR	10599984	Identifier	point		10599758	1					
ANR	10599985	ArrayIndexing	exc -> zp0 . org [ point ]		10599758	1					
ANR	10599986	MemberAccess	exc -> zp0 . org		10599758	0					
ANR	10599987	PtrMemberAccess	exc -> zp0		10599758	0					
ANR	10599988	Identifier	exc		10599758	0					
ANR	10599989	Identifier	zp0		10599758	1					
ANR	10599990	Identifier	org		10599758	1					
ANR	10599991	Identifier	point		10599758	1					
ANR	10599992	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && ( exc -> sph_tweak_flags & SPH_TWEAK_MIAP_HACK ) && distance > 0 && exc -> GS . freeVector . y != 0 )		10599758	12					
ANR	10599993	Condition	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && ( exc -> sph_tweak_flags & SPH_TWEAK_MIAP_HACK ) && distance > 0 && exc -> GS . freeVector . y != 0	5979:9:213262:213522	10599758	0	True				
ANR	10599994	AndExpression	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && ( exc -> sph_tweak_flags & SPH_TWEAK_MIAP_HACK ) && distance > 0 && exc -> GS . freeVector . y != 0		10599758	0		&&			
ANR	10599995	Identifier	SUBPIXEL_HINTING_INFINALITY		10599758	0					
ANR	10599996	AndExpression	exc -> ignore_x_mode && ( exc -> sph_tweak_flags & SPH_TWEAK_MIAP_HACK ) && distance > 0 && exc -> GS . freeVector . y != 0		10599758	1		&&			
ANR	10599997	PtrMemberAccess	exc -> ignore_x_mode		10599758	0					
ANR	10599998	Identifier	exc		10599758	0					
ANR	10599999	Identifier	ignore_x_mode		10599758	1					
ANR	10600000	AndExpression	( exc -> sph_tweak_flags & SPH_TWEAK_MIAP_HACK ) && distance > 0 && exc -> GS . freeVector . y != 0		10599758	1		&&			
ANR	10600001	BitAndExpression	exc -> sph_tweak_flags & SPH_TWEAK_MIAP_HACK		10599758	0		&			
ANR	10600002	PtrMemberAccess	exc -> sph_tweak_flags		10599758	0					
ANR	10600003	Identifier	exc		10599758	0					
ANR	10600004	Identifier	sph_tweak_flags		10599758	1					
ANR	10600005	Identifier	SPH_TWEAK_MIAP_HACK		10599758	1					
ANR	10600006	AndExpression	distance > 0 && exc -> GS . freeVector . y != 0		10599758	1		&&			
ANR	10600007	RelationalExpression	distance > 0		10599758	0		>			
ANR	10600008	Identifier	distance		10599758	0					
ANR	10600009	PrimaryExpression	0		10599758	1					
ANR	10600010	EqualityExpression	exc -> GS . freeVector . y != 0		10599758	1		!=			
ANR	10600011	MemberAccess	exc -> GS . freeVector . y		10599758	0					
ANR	10600012	MemberAccess	exc -> GS . freeVector		10599758	0					
ANR	10600013	PtrMemberAccess	exc -> GS		10599758	0					
ANR	10600014	Identifier	exc		10599758	0					
ANR	10600015	Identifier	GS		10599758	1					
ANR	10600016	Identifier	freeVector		10599758	1					
ANR	10600017	Identifier	y		10599758	1					
ANR	10600018	PrimaryExpression	0		10599758	1					
ANR	10600019	ExpressionStatement	distance = 0	5984:6:213553:213565	10599758	1	True				
ANR	10600020	AssignmentExpression	distance = 0		10599758	0		=			
ANR	10600021	Identifier	distance		10599758	0					
ANR	10600022	PrimaryExpression	0		10599758	1					
ANR	10600023	ExpressionStatement	org_dist = FAST_PROJECT ( & exc -> zp0 . cur [ point ] )	5987:4:213624:213671	10599758	13	True				
ANR	10600024	AssignmentExpression	org_dist = FAST_PROJECT ( & exc -> zp0 . cur [ point ] )		10599758	0		=			
ANR	10600025	Identifier	org_dist		10599758	0					
ANR	10600026	CallExpression	FAST_PROJECT ( & exc -> zp0 . cur [ point ] )		10599758	1					
ANR	10600027	Callee	FAST_PROJECT		10599758	0					
ANR	10600028	Identifier	FAST_PROJECT		10599758	0					
ANR	10600029	ArgumentList	& exc -> zp0 . cur [ point ]		10599758	1					
ANR	10600030	Argument	& exc -> zp0 . cur [ point ]		10599758	0					
ANR	10600031	UnaryOperationExpression	& exc -> zp0 . cur [ point ]		10599758	0					
ANR	10600032	UnaryOperator	&		10599758	0					
ANR	10600033	ArrayIndexing	exc -> zp0 . cur [ point ]		10599758	1					
ANR	10600034	MemberAccess	exc -> zp0 . cur		10599758	0					
ANR	10600035	PtrMemberAccess	exc -> zp0		10599758	0					
ANR	10600036	Identifier	exc		10599758	0					
ANR	10600037	Identifier	zp0		10599758	1					
ANR	10600038	Identifier	cur		10599758	1					
ANR	10600039	Identifier	point		10599758	1					
ANR	10600040	IfStatement	if ( ( exc -> opcode & 1 ) != 0 )		10599758	14					
ANR	10600041	Condition	( exc -> opcode & 1 ) != 0	5989:9:213683:213706	10599758	0	True				
ANR	10600042	EqualityExpression	( exc -> opcode & 1 ) != 0		10599758	0		!=			
ANR	10600043	BitAndExpression	exc -> opcode & 1		10599758	0		&			
ANR	10600044	PtrMemberAccess	exc -> opcode		10599758	0					
ANR	10600045	Identifier	exc		10599758	0					
ANR	10600046	Identifier	opcode		10599758	1					
ANR	10600047	PrimaryExpression	1		10599758	1					
ANR	10600048	PrimaryExpression	0		10599758	1					
ANR	10600049	CompoundStatement		80:6:3799:3816	10599758	1					
ANR	10600050	IdentifierDeclStatement	FT_F26Dot6 delta ;	5991:6:213763:213780	10599758	0	True				
ANR	10600051	IdentifierDecl	delta		10599758	0					
ANR	10600052	IdentifierDeclType	FT_F26Dot6		10599758	0					
ANR	10600053	Identifier	delta		10599758	1					
ANR	10600054	ExpressionStatement	"delta = SUB_LONG ( distance , org_dist )"	5994:6:213790:213828	10599758	1	True				
ANR	10600055	AssignmentExpression	"delta = SUB_LONG ( distance , org_dist )"		10599758	0		=			
ANR	10600056	Identifier	delta		10599758	0					
ANR	10600057	CallExpression	"SUB_LONG ( distance , org_dist )"		10599758	1					
ANR	10600058	Callee	SUB_LONG		10599758	0					
ANR	10600059	Identifier	SUB_LONG		10599758	0					
ANR	10600060	ArgumentList	distance		10599758	1					
ANR	10600061	Argument	distance		10599758	0					
ANR	10600062	Identifier	distance		10599758	0					
ANR	10600063	Argument	org_dist		10599758	1					
ANR	10600064	Identifier	org_dist		10599758	0					
ANR	10600065	IfStatement	if ( delta < 0 )		10599758	2					
ANR	10600066	Condition	delta < 0	5995:11:213841:213849	10599758	0	True				
ANR	10600067	RelationalExpression	delta < 0		10599758	0		<			
ANR	10600068	Identifier	delta		10599758	0					
ANR	10600069	PrimaryExpression	0		10599758	1					
ANR	10600070	ExpressionStatement	delta = NEG_LONG ( delta )	5996:8:213861:213886	10599758	1	True				
ANR	10600071	AssignmentExpression	delta = NEG_LONG ( delta )		10599758	0		=			
ANR	10600072	Identifier	delta		10599758	0					
ANR	10600073	CallExpression	NEG_LONG ( delta )		10599758	1					
ANR	10600074	Callee	NEG_LONG		10599758	0					
ANR	10600075	Identifier	NEG_LONG		10599758	0					
ANR	10600076	ArgumentList	delta		10599758	1					
ANR	10600077	Argument	delta		10599758	0					
ANR	10600078	Identifier	delta		10599758	0					
ANR	10600079	IfStatement	if ( delta > control_value_cutin )		10599758	3					
ANR	10600080	Condition	delta > control_value_cutin	5998:11:213900:213926	10599758	0	True				
ANR	10600081	RelationalExpression	delta > control_value_cutin		10599758	0		>			
ANR	10600082	Identifier	delta		10599758	0					
ANR	10600083	Identifier	control_value_cutin		10599758	1					
ANR	10600084	ExpressionStatement	distance = org_dist	5999:8:213938:213957	10599758	1	True				
ANR	10600085	AssignmentExpression	distance = org_dist		10599758	0		=			
ANR	10600086	Identifier	distance		10599758	0					
ANR	10600087	Identifier	org_dist		10599758	1					
ANR	10600088	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> GS . freeVector . x != 0 )		10599758	4					
ANR	10600089	Condition	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> GS . freeVector . x != 0	6002:11:214017:214125	10599758	0	True				
ANR	10600090	AndExpression	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> GS . freeVector . x != 0		10599758	0		&&			
ANR	10600091	Identifier	SUBPIXEL_HINTING_INFINALITY		10599758	0					
ANR	10600092	AndExpression	exc -> ignore_x_mode && exc -> GS . freeVector . x != 0		10599758	1		&&			
ANR	10600093	PtrMemberAccess	exc -> ignore_x_mode		10599758	0					
ANR	10600094	Identifier	exc		10599758	0					
ANR	10600095	Identifier	ignore_x_mode		10599758	1					
ANR	10600096	EqualityExpression	exc -> GS . freeVector . x != 0		10599758	1		!=			
ANR	10600097	MemberAccess	exc -> GS . freeVector . x		10599758	0					
ANR	10600098	MemberAccess	exc -> GS . freeVector		10599758	0					
ANR	10600099	PtrMemberAccess	exc -> GS		10599758	0					
ANR	10600100	Identifier	exc		10599758	0					
ANR	10600101	Identifier	GS		10599758	1					
ANR	10600102	Identifier	freeVector		10599758	1					
ANR	10600103	Identifier	x		10599758	1					
ANR	10600104	PrimaryExpression	0		10599758	1					
ANR	10600105	ExpressionStatement	"distance = Round_None ( exc , distance , exc -> tt_metrics . compensations [ 0 ] )"	6005:8:214139:214273	10599758	1	True				
ANR	10600106	AssignmentExpression	"distance = Round_None ( exc , distance , exc -> tt_metrics . compensations [ 0 ] )"		10599758	0		=			
ANR	10600107	Identifier	distance		10599758	0					
ANR	10600108	CallExpression	"Round_None ( exc , distance , exc -> tt_metrics . compensations [ 0 ] )"		10599758	1					
ANR	10600109	Callee	Round_None		10599758	0					
ANR	10600110	Identifier	Round_None		10599758	0					
ANR	10600111	ArgumentList	exc		10599758	1					
ANR	10600112	Argument	exc		10599758	0					
ANR	10600113	Identifier	exc		10599758	0					
ANR	10600114	Argument	distance		10599758	1					
ANR	10600115	Identifier	distance		10599758	0					
ANR	10600116	Argument	exc -> tt_metrics . compensations [ 0 ]		10599758	2					
ANR	10600117	ArrayIndexing	exc -> tt_metrics . compensations [ 0 ]		10599758	0					
ANR	10600118	MemberAccess	exc -> tt_metrics . compensations		10599758	0					
ANR	10600119	PtrMemberAccess	exc -> tt_metrics		10599758	0					
ANR	10600120	Identifier	exc		10599758	0					
ANR	10600121	Identifier	tt_metrics		10599758	1					
ANR	10600122	Identifier	compensations		10599758	1					
ANR	10600123	PrimaryExpression	0		10599758	1					
ANR	10600124	ElseStatement	else		10599758	0					
ANR	10600125	ExpressionStatement	"distance = exc -> func_round ( exc , distance , exc -> tt_metrics . compensations [ 0 ] )"	6010:8:214301:214450	10599758	0	True				
ANR	10600126	AssignmentExpression	"distance = exc -> func_round ( exc , distance , exc -> tt_metrics . compensations [ 0 ] )"		10599758	0		=			
ANR	10600127	Identifier	distance		10599758	0					
ANR	10600128	CallExpression	"exc -> func_round ( exc , distance , exc -> tt_metrics . compensations [ 0 ] )"		10599758	1					
ANR	10600129	Callee	exc -> func_round		10599758	0					
ANR	10600130	PtrMemberAccess	exc -> func_round		10599758	0					
ANR	10600131	Identifier	exc		10599758	0					
ANR	10600132	Identifier	func_round		10599758	1					
ANR	10600133	ArgumentList	exc		10599758	1					
ANR	10600134	Argument	exc		10599758	0					
ANR	10600135	Identifier	exc		10599758	0					
ANR	10600136	Argument	distance		10599758	1					
ANR	10600137	Identifier	distance		10599758	0					
ANR	10600138	Argument	exc -> tt_metrics . compensations [ 0 ]		10599758	2					
ANR	10600139	ArrayIndexing	exc -> tt_metrics . compensations [ 0 ]		10599758	0					
ANR	10600140	MemberAccess	exc -> tt_metrics . compensations		10599758	0					
ANR	10600141	PtrMemberAccess	exc -> tt_metrics		10599758	0					
ANR	10600142	Identifier	exc		10599758	0					
ANR	10600143	Identifier	tt_metrics		10599758	1					
ANR	10600144	Identifier	compensations		10599758	1					
ANR	10600145	PrimaryExpression	0		10599758	1					
ANR	10600146	ExpressionStatement	"exc -> func_move ( exc , & exc -> zp0 , point , SUB_LONG ( distance , org_dist ) )"	6015:4:214463:214534	10599758	15	True				
ANR	10600147	CallExpression	"exc -> func_move ( exc , & exc -> zp0 , point , SUB_LONG ( distance , org_dist ) )"		10599758	0					
ANR	10600148	Callee	exc -> func_move		10599758	0					
ANR	10600149	PtrMemberAccess	exc -> func_move		10599758	0					
ANR	10600150	Identifier	exc		10599758	0					
ANR	10600151	Identifier	func_move		10599758	1					
ANR	10600152	ArgumentList	exc		10599758	1					
ANR	10600153	Argument	exc		10599758	0					
ANR	10600154	Identifier	exc		10599758	0					
ANR	10600155	Argument	& exc -> zp0		10599758	1					
ANR	10600156	UnaryOperationExpression	& exc -> zp0		10599758	0					
ANR	10600157	UnaryOperator	&		10599758	0					
ANR	10600158	PtrMemberAccess	exc -> zp0		10599758	1					
ANR	10600159	Identifier	exc		10599758	0					
ANR	10600160	Identifier	zp0		10599758	1					
ANR	10600161	Argument	point		10599758	2					
ANR	10600162	Identifier	point		10599758	0					
ANR	10600163	Argument	"SUB_LONG ( distance , org_dist )"		10599758	3					
ANR	10600164	CallExpression	"SUB_LONG ( distance , org_dist )"		10599758	0					
ANR	10600165	Callee	SUB_LONG		10599758	0					
ANR	10600166	Identifier	SUB_LONG		10599758	0					
ANR	10600167	ArgumentList	distance		10599758	1					
ANR	10600168	Argument	distance		10599758	0					
ANR	10600169	Identifier	distance		10599758	0					
ANR	10600170	Argument	org_dist		10599758	1					
ANR	10600171	Identifier	org_dist		10599758	0					
ANR	10600172	Label	Fail :	6017:2:214539:214543	10599758	16	True				
ANR	10600173	Identifier	Fail		10599758	0					
ANR	10600174	ExpressionStatement	exc -> GS . rp0 = point	6018:4:214549:214568	10599758	17	True				
ANR	10600175	AssignmentExpression	exc -> GS . rp0 = point		10599758	0		=			
ANR	10600176	MemberAccess	exc -> GS . rp0		10599758	0					
ANR	10600177	PtrMemberAccess	exc -> GS		10599758	0					
ANR	10600178	Identifier	exc		10599758	0					
ANR	10600179	Identifier	GS		10599758	1					
ANR	10600180	Identifier	rp0		10599758	1					
ANR	10600181	Identifier	point		10599758	1					
ANR	10600182	ExpressionStatement	exc -> GS . rp1 = point	6019:4:214574:214593	10599758	18	True				
ANR	10600183	AssignmentExpression	exc -> GS . rp1 = point		10599758	0		=			
ANR	10600184	MemberAccess	exc -> GS . rp1		10599758	0					
ANR	10600185	PtrMemberAccess	exc -> GS		10599758	0					
ANR	10600186	Identifier	exc		10599758	0					
ANR	10600187	Identifier	GS		10599758	1					
ANR	10600188	Identifier	rp1		10599758	1					
ANR	10600189	Identifier	point		10599758	1					
ANR	10600190	ReturnType	static void		10599758	1					
ANR	10600191	Identifier	Ins_MIAP		10599758	2					
ANR	10600192	ParameterList	"TT_ExecContext exc , FT_Long * args"		10599758	3					
ANR	10600193	Parameter	TT_ExecContext exc	5910:12:209905:209923	10599758	0	True				
ANR	10600194	ParameterType	TT_ExecContext		10599758	0					
ANR	10600195	Identifier	exc		10599758	1					
ANR	10600196	Parameter	FT_Long * args	5911:12:209938:209957	10599758	1	True				
ANR	10600197	ParameterType	FT_Long *		10599758	0					
ANR	10600198	Identifier	args		10599758	1					
ANR	10600199	CFGEntryNode	ENTRY		10599758		True				
ANR	10600200	CFGExitNode	EXIT		10599758		True				
ANR	10600201	Symbol	exc -> GS . freeVector . x		10599758						
ANR	10600202	Symbol	exc -> GS . freeVector . y		10599758						
ANR	10600203	Symbol	Round_None		10599758						
ANR	10600204	Symbol	delta		10599758						
ANR	10600205	Symbol	exc -> GS . control_value_cutin		10599758						
ANR	10600206	Symbol	* args		10599758						
ANR	10600207	Symbol	SUBPIXEL_HINTING_INFINALITY		10599758						
ANR	10600208	Symbol	exc		10599758						
ANR	10600209	Symbol	Invalid_Reference		10599758						
ANR	10600210	Symbol	BOUNDS		10599758						
ANR	10600211	Symbol	exc -> func_round		10599758						
ANR	10600212	Symbol	exc -> func_read_cvt		10599758						
ANR	10600213	Symbol	exc -> error		10599758						
ANR	10600214	Symbol	exc -> zp0 . cur		10599758						
ANR	10600215	Symbol	* exc -> zp0 . org		10599758						
ANR	10600216	Symbol	* point		10599758						
ANR	10600217	Symbol	exc -> face		10599758						
ANR	10600218	Symbol	exc -> pedantic_hinting		10599758						
ANR	10600219	Symbol	exc -> tt_metrics		10599758						
ANR	10600220	Symbol	exc -> face -> sph_compatibility_mode		10599758						
ANR	10600221	Symbol	exc -> GS . rp1		10599758						
ANR	10600222	Symbol	cvtEntry		10599758						
ANR	10600223	Symbol	exc -> GS . rp0		10599758						
ANR	10600224	Symbol	& exc -> zp0		10599758						
ANR	10600225	Symbol	exc -> zp0 . org [ point ] . x		10599758						
ANR	10600226	Symbol	exc -> zp0 . org		10599758						
ANR	10600227	Symbol	exc -> opcode		10599758						
ANR	10600228	Symbol	exc -> GS . freeVector		10599758						
ANR	10600229	Symbol	exc -> zp0 . org [ point ] . y		10599758						
ANR	10600230	Symbol	TT_MulFix14		10599758						
ANR	10600231	Symbol	FAST_PROJECT		10599758						
ANR	10600232	Symbol	* exc -> tt_metrics . compensations		10599758						
ANR	10600233	Symbol	distance		10599758						
ANR	10600234	Symbol	exc -> tt_metrics . compensations		10599758						
ANR	10600235	Symbol	* exc		10599758						
ANR	10600236	Symbol	control_value_cutin		10599758						
ANR	10600237	Symbol	* exc -> face		10599758						
ANR	10600238	Symbol	SPH_TWEAK_MIAP_HACK		10599758						
ANR	10600239	Symbol	SUB_LONG		10599758						
ANR	10600240	Symbol	BOUNDSL		10599758						
ANR	10600241	Symbol	point		10599758						
ANR	10600242	Symbol	exc -> zp0 . n_points		10599758						
ANR	10600243	Symbol	* exc -> tt_metrics		10599758						
ANR	10600244	Symbol	exc -> sph_tweak_flags		10599758						
ANR	10600245	Symbol	NEG_LONG		10599758						
ANR	10600246	Symbol	exc -> ignore_x_mode		10599758						
ANR	10600247	Symbol	SPH_TWEAK_NORMAL_ROUND		10599758						
ANR	10600248	Symbol	* * exc		10599758						
ANR	10600249	Symbol	exc -> cvtSize		10599758						
ANR	10600250	Symbol	exc -> GS . gep0		10599758						
ANR	10600251	Symbol	exc -> GS		10599758						
ANR	10600252	Symbol	FT_THROW		10599758						
ANR	10600253	Symbol	args		10599758						
ANR	10600254	Symbol	org_dist		10599758						
ANR	10600255	Symbol	exc -> zp0		10599758						
ANR	10600256	Symbol	* exc -> zp0		10599758						
ANR	10600257	Symbol	* exc -> zp0 . cur		10599758						
ANR	10600258	Function	Ins_MDRP	6029:2:215071:218862							
ANR	10600259	FunctionDef	"Ins_MDRP (TT_ExecContext exc , FT_Long * args)"		10600258	0					
ANR	10600260	CompoundStatement		6032:2:215153:218862	10600258	0					
ANR	10600261	IdentifierDeclStatement	FT_UShort point = 0 ;	6033:4:215159:215180	10600258	0	True				
ANR	10600262	IdentifierDecl	point = 0		10600258	0					
ANR	10600263	IdentifierDeclType	FT_UShort		10600258	0					
ANR	10600264	Identifier	point		10600258	1					
ANR	10600265	AssignmentExpression	point = 0		10600258	2		=			
ANR	10600266	Identifier	point		10600258	0					
ANR	10600267	PrimaryExpression	0		10600258	1					
ANR	10600268	IdentifierDeclStatement	"FT_F26Dot6 org_dist , distance , minimum_distance ;"	6034:4:215186:215234	10600258	1	True				
ANR	10600269	IdentifierDecl	org_dist		10600258	0					
ANR	10600270	IdentifierDeclType	FT_F26Dot6		10600258	0					
ANR	10600271	Identifier	org_dist		10600258	1					
ANR	10600272	IdentifierDecl	distance		10600258	1					
ANR	10600273	IdentifierDeclType	FT_F26Dot6		10600258	0					
ANR	10600274	Identifier	distance		10600258	1					
ANR	10600275	IdentifierDecl	minimum_distance		10600258	2					
ANR	10600276	IdentifierDeclType	FT_F26Dot6		10600258	0					
ANR	10600277	Identifier	minimum_distance		10600258	1					
ANR	10600278	ExpressionStatement	minimum_distance = exc -> GS . minimum_distance	6037:4:215242:215285	10600258	2	True				
ANR	10600279	AssignmentExpression	minimum_distance = exc -> GS . minimum_distance		10600258	0		=			
ANR	10600280	Identifier	minimum_distance		10600258	0					
ANR	10600281	MemberAccess	exc -> GS . minimum_distance		10600258	1					
ANR	10600282	PtrMemberAccess	exc -> GS		10600258	0					
ANR	10600283	Identifier	exc		10600258	0					
ANR	10600284	Identifier	GS		10600258	1					
ANR	10600285	Identifier	minimum_distance		10600258	1					
ANR	10600286	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> GS . freeVector . x != 0 && ! ( exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND ) )		10600258	3					
ANR	10600287	Condition	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> GS . freeVector . x != 0 && ! ( exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND )	6040:9:215343:215581	10600258	0	True				
ANR	10600288	AndExpression	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> GS . freeVector . x != 0 && ! ( exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND )		10600258	0		&&			
ANR	10600289	Identifier	SUBPIXEL_HINTING_INFINALITY		10600258	0					
ANR	10600290	AndExpression	exc -> ignore_x_mode && exc -> GS . freeVector . x != 0 && ! ( exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND )		10600258	1		&&			
ANR	10600291	PtrMemberAccess	exc -> ignore_x_mode		10600258	0					
ANR	10600292	Identifier	exc		10600258	0					
ANR	10600293	Identifier	ignore_x_mode		10600258	1					
ANR	10600294	AndExpression	exc -> GS . freeVector . x != 0 && ! ( exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND )		10600258	1		&&			
ANR	10600295	EqualityExpression	exc -> GS . freeVector . x != 0		10600258	0		!=			
ANR	10600296	MemberAccess	exc -> GS . freeVector . x		10600258	0					
ANR	10600297	MemberAccess	exc -> GS . freeVector		10600258	0					
ANR	10600298	PtrMemberAccess	exc -> GS		10600258	0					
ANR	10600299	Identifier	exc		10600258	0					
ANR	10600300	Identifier	GS		10600258	1					
ANR	10600301	Identifier	freeVector		10600258	1					
ANR	10600302	Identifier	x		10600258	1					
ANR	10600303	PrimaryExpression	0		10600258	1					
ANR	10600304	UnaryOperationExpression	! ( exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND )		10600258	1					
ANR	10600305	UnaryOperator	!		10600258	0					
ANR	10600306	BitAndExpression	exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND		10600258	1		&			
ANR	10600307	PtrMemberAccess	exc -> sph_tweak_flags		10600258	0					
ANR	10600308	Identifier	exc		10600258	0					
ANR	10600309	Identifier	sph_tweak_flags		10600258	1					
ANR	10600310	Identifier	SPH_TWEAK_NORMAL_ROUND		10600258	1					
ANR	10600311	ExpressionStatement	minimum_distance = 0	6044:6:215591:215611	10600258	1	True				
ANR	10600312	AssignmentExpression	minimum_distance = 0		10600258	0		=			
ANR	10600313	Identifier	minimum_distance		10600258	0					
ANR	10600314	PrimaryExpression	0		10600258	1					
ANR	10600315	ExpressionStatement	point = ( FT_UShort ) args [ 0 ]	6047:4:215670:215696	10600258	4	True				
ANR	10600316	AssignmentExpression	point = ( FT_UShort ) args [ 0 ]		10600258	0		=			
ANR	10600317	Identifier	point		10600258	0					
ANR	10600318	CastExpression	( FT_UShort ) args [ 0 ]		10600258	1					
ANR	10600319	CastTarget	FT_UShort		10600258	0					
ANR	10600320	ArrayIndexing	args [ 0 ]		10600258	1					
ANR	10600321	Identifier	args		10600258	0					
ANR	10600322	PrimaryExpression	0		10600258	1					
ANR	10600323	IfStatement	"if ( BOUNDS ( point , exc -> zp1 . n_points ) || BOUNDS ( exc -> GS . rp0 , exc -> zp0 . n_points ) )"		10600258	5					
ANR	10600324	Condition	"BOUNDS ( point , exc -> zp1 . n_points ) || BOUNDS ( exc -> GS . rp0 , exc -> zp0 . n_points )"	6049:9:215708:215800	10600258	0	True				
ANR	10600325	OrExpression	"BOUNDS ( point , exc -> zp1 . n_points ) || BOUNDS ( exc -> GS . rp0 , exc -> zp0 . n_points )"		10600258	0		||			
ANR	10600326	CallExpression	"BOUNDS ( point , exc -> zp1 . n_points )"		10600258	0					
ANR	10600327	Callee	BOUNDS		10600258	0					
ANR	10600328	Identifier	BOUNDS		10600258	0					
ANR	10600329	ArgumentList	point		10600258	1					
ANR	10600330	Argument	point		10600258	0					
ANR	10600331	Identifier	point		10600258	0					
ANR	10600332	Argument	exc -> zp1 . n_points		10600258	1					
ANR	10600333	MemberAccess	exc -> zp1 . n_points		10600258	0					
ANR	10600334	PtrMemberAccess	exc -> zp1		10600258	0					
ANR	10600335	Identifier	exc		10600258	0					
ANR	10600336	Identifier	zp1		10600258	1					
ANR	10600337	Identifier	n_points		10600258	1					
ANR	10600338	CallExpression	"BOUNDS ( exc -> GS . rp0 , exc -> zp0 . n_points )"		10600258	1					
ANR	10600339	Callee	BOUNDS		10600258	0					
ANR	10600340	Identifier	BOUNDS		10600258	0					
ANR	10600341	ArgumentList	exc -> GS . rp0		10600258	1					
ANR	10600342	Argument	exc -> GS . rp0		10600258	0					
ANR	10600343	MemberAccess	exc -> GS . rp0		10600258	0					
ANR	10600344	PtrMemberAccess	exc -> GS		10600258	0					
ANR	10600345	Identifier	exc		10600258	0					
ANR	10600346	Identifier	GS		10600258	1					
ANR	10600347	Identifier	rp0		10600258	1					
ANR	10600348	Argument	exc -> zp0 . n_points		10600258	1					
ANR	10600349	MemberAccess	exc -> zp0 . n_points		10600258	0					
ANR	10600350	PtrMemberAccess	exc -> zp0		10600258	0					
ANR	10600351	Identifier	exc		10600258	0					
ANR	10600352	Identifier	zp0		10600258	1					
ANR	10600353	Identifier	n_points		10600258	1					
ANR	10600354	CompoundStatement		20:4:654:654	10600258	1					
ANR	10600355	IfStatement	if ( exc -> pedantic_hinting )		10600258	0					
ANR	10600356	Condition	exc -> pedantic_hinting	6052:11:215821:215841	10600258	0	True				
ANR	10600357	PtrMemberAccess	exc -> pedantic_hinting		10600258	0					
ANR	10600358	Identifier	exc		10600258	0					
ANR	10600359	Identifier	pedantic_hinting		10600258	1					
ANR	10600360	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	6053:8:215853:215895	10600258	1	True				
ANR	10600361	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10600258	0		=			
ANR	10600362	PtrMemberAccess	exc -> error		10600258	0					
ANR	10600363	Identifier	exc		10600258	0					
ANR	10600364	Identifier	error		10600258	1					
ANR	10600365	CallExpression	FT_THROW ( Invalid_Reference )		10600258	1					
ANR	10600366	Callee	FT_THROW		10600258	0					
ANR	10600367	Identifier	FT_THROW		10600258	0					
ANR	10600368	ArgumentList	Invalid_Reference		10600258	1					
ANR	10600369	Argument	Invalid_Reference		10600258	0					
ANR	10600370	Identifier	Invalid_Reference		10600258	0					
ANR	10600371	GotoStatement	goto Fail ;	6054:6:215903:215912	10600258	1	True				
ANR	10600372	Identifier	Fail		10600258	0					
ANR	10600373	IfStatement	if ( exc -> GS . gep0 == 0 || exc -> GS . gep1 == 0 )		10600258	6					
ANR	10600374	Condition	exc -> GS . gep0 == 0 || exc -> GS . gep1 == 0	6062:9:216114:216151	10600258	0	True				
ANR	10600375	OrExpression	exc -> GS . gep0 == 0 || exc -> GS . gep1 == 0		10600258	0		||			
ANR	10600376	EqualityExpression	exc -> GS . gep0 == 0		10600258	0		==			
ANR	10600377	MemberAccess	exc -> GS . gep0		10600258	0					
ANR	10600378	PtrMemberAccess	exc -> GS		10600258	0					
ANR	10600379	Identifier	exc		10600258	0					
ANR	10600380	Identifier	GS		10600258	1					
ANR	10600381	Identifier	gep0		10600258	1					
ANR	10600382	PrimaryExpression	0		10600258	1					
ANR	10600383	EqualityExpression	exc -> GS . gep1 == 0		10600258	1		==			
ANR	10600384	MemberAccess	exc -> GS . gep1		10600258	0					
ANR	10600385	PtrMemberAccess	exc -> GS		10600258	0					
ANR	10600386	Identifier	exc		10600258	0					
ANR	10600387	Identifier	GS		10600258	1					
ANR	10600388	Identifier	gep1		10600258	1					
ANR	10600389	PrimaryExpression	0		10600258	1					
ANR	10600390	CompoundStatement		34:6:1060:1105	10600258	1					
ANR	10600391	IdentifierDeclStatement	FT_Vector * vec1 = & exc -> zp1 . org [ point ] ;	6064:6:216167:216206	10600258	0	True				
ANR	10600392	IdentifierDecl	* vec1 = & exc -> zp1 . org [ point ]		10600258	0					
ANR	10600393	IdentifierDeclType	FT_Vector *		10600258	0					
ANR	10600394	Identifier	vec1		10600258	1					
ANR	10600395	AssignmentExpression	* vec1 = & exc -> zp1 . org [ point ]		10600258	2		=			
ANR	10600396	Identifier	vec1		10600258	0					
ANR	10600397	UnaryOperationExpression	& exc -> zp1 . org [ point ]		10600258	1					
ANR	10600398	UnaryOperator	&		10600258	0					
ANR	10600399	ArrayIndexing	exc -> zp1 . org [ point ]		10600258	1					
ANR	10600400	MemberAccess	exc -> zp1 . org		10600258	0					
ANR	10600401	PtrMemberAccess	exc -> zp1		10600258	0					
ANR	10600402	Identifier	exc		10600258	0					
ANR	10600403	Identifier	zp1		10600258	1					
ANR	10600404	Identifier	org		10600258	1					
ANR	10600405	Identifier	point		10600258	1					
ANR	10600406	IdentifierDeclStatement	FT_Vector * vec2 = & exc -> zp0 . org [ exc -> GS . rp0 ] ;	6065:6:216214:216259	10600258	1	True				
ANR	10600407	IdentifierDecl	* vec2 = & exc -> zp0 . org [ exc -> GS . rp0 ]		10600258	0					
ANR	10600408	IdentifierDeclType	FT_Vector *		10600258	0					
ANR	10600409	Identifier	vec2		10600258	1					
ANR	10600410	AssignmentExpression	* vec2 = & exc -> zp0 . org [ exc -> GS . rp0 ]		10600258	2		=			
ANR	10600411	Identifier	vec2		10600258	0					
ANR	10600412	UnaryOperationExpression	& exc -> zp0 . org [ exc -> GS . rp0 ]		10600258	1					
ANR	10600413	UnaryOperator	&		10600258	0					
ANR	10600414	ArrayIndexing	exc -> zp0 . org [ exc -> GS . rp0 ]		10600258	1					
ANR	10600415	MemberAccess	exc -> zp0 . org		10600258	0					
ANR	10600416	PtrMemberAccess	exc -> zp0		10600258	0					
ANR	10600417	Identifier	exc		10600258	0					
ANR	10600418	Identifier	zp0		10600258	1					
ANR	10600419	Identifier	org		10600258	1					
ANR	10600420	MemberAccess	exc -> GS . rp0		10600258	1					
ANR	10600421	PtrMemberAccess	exc -> GS		10600258	0					
ANR	10600422	Identifier	exc		10600258	0					
ANR	10600423	Identifier	GS		10600258	1					
ANR	10600424	Identifier	rp0		10600258	1					
ANR	10600425	ExpressionStatement	"org_dist = DUALPROJ ( vec1 , vec2 )"	6068:6:216269:216302	10600258	2	True				
ANR	10600426	AssignmentExpression	"org_dist = DUALPROJ ( vec1 , vec2 )"		10600258	0		=			
ANR	10600427	Identifier	org_dist		10600258	0					
ANR	10600428	CallExpression	"DUALPROJ ( vec1 , vec2 )"		10600258	1					
ANR	10600429	Callee	DUALPROJ		10600258	0					
ANR	10600430	Identifier	DUALPROJ		10600258	0					
ANR	10600431	ArgumentList	vec1		10600258	1					
ANR	10600432	Argument	vec1		10600258	0					
ANR	10600433	Identifier	vec1		10600258	0					
ANR	10600434	Argument	vec2		10600258	1					
ANR	10600435	Identifier	vec2		10600258	0					
ANR	10600436	ElseStatement	else		10600258	0					
ANR	10600437	CompoundStatement		42:6:1225:1271	10600258	0					
ANR	10600438	IdentifierDeclStatement	FT_Vector * vec1 = & exc -> zp1 . orus [ point ] ;	6072:6:216331:216371	10600258	0	True				
ANR	10600439	IdentifierDecl	* vec1 = & exc -> zp1 . orus [ point ]		10600258	0					
ANR	10600440	IdentifierDeclType	FT_Vector *		10600258	0					
ANR	10600441	Identifier	vec1		10600258	1					
ANR	10600442	AssignmentExpression	* vec1 = & exc -> zp1 . orus [ point ]		10600258	2		=			
ANR	10600443	Identifier	vec1		10600258	0					
ANR	10600444	UnaryOperationExpression	& exc -> zp1 . orus [ point ]		10600258	1					
ANR	10600445	UnaryOperator	&		10600258	0					
ANR	10600446	ArrayIndexing	exc -> zp1 . orus [ point ]		10600258	1					
ANR	10600447	MemberAccess	exc -> zp1 . orus		10600258	0					
ANR	10600448	PtrMemberAccess	exc -> zp1		10600258	0					
ANR	10600449	Identifier	exc		10600258	0					
ANR	10600450	Identifier	zp1		10600258	1					
ANR	10600451	Identifier	orus		10600258	1					
ANR	10600452	Identifier	point		10600258	1					
ANR	10600453	IdentifierDeclStatement	FT_Vector * vec2 = & exc -> zp0 . orus [ exc -> GS . rp0 ] ;	6073:6:216379:216425	10600258	1	True				
ANR	10600454	IdentifierDecl	* vec2 = & exc -> zp0 . orus [ exc -> GS . rp0 ]		10600258	0					
ANR	10600455	IdentifierDeclType	FT_Vector *		10600258	0					
ANR	10600456	Identifier	vec2		10600258	1					
ANR	10600457	AssignmentExpression	* vec2 = & exc -> zp0 . orus [ exc -> GS . rp0 ]		10600258	2		=			
ANR	10600458	Identifier	vec2		10600258	0					
ANR	10600459	UnaryOperationExpression	& exc -> zp0 . orus [ exc -> GS . rp0 ]		10600258	1					
ANR	10600460	UnaryOperator	&		10600258	0					
ANR	10600461	ArrayIndexing	exc -> zp0 . orus [ exc -> GS . rp0 ]		10600258	1					
ANR	10600462	MemberAccess	exc -> zp0 . orus		10600258	0					
ANR	10600463	PtrMemberAccess	exc -> zp0		10600258	0					
ANR	10600464	Identifier	exc		10600258	0					
ANR	10600465	Identifier	zp0		10600258	1					
ANR	10600466	Identifier	orus		10600258	1					
ANR	10600467	MemberAccess	exc -> GS . rp0		10600258	1					
ANR	10600468	PtrMemberAccess	exc -> GS		10600258	0					
ANR	10600469	Identifier	exc		10600258	0					
ANR	10600470	Identifier	GS		10600258	1					
ANR	10600471	Identifier	rp0		10600258	1					
ANR	10600472	IfStatement	if ( exc -> metrics . x_scale == exc -> metrics . y_scale )		10600258	2					
ANR	10600473	Condition	exc -> metrics . x_scale == exc -> metrics . y_scale	6076:11:216440:216483	10600258	0	True				
ANR	10600474	EqualityExpression	exc -> metrics . x_scale == exc -> metrics . y_scale		10600258	0		==			
ANR	10600475	MemberAccess	exc -> metrics . x_scale		10600258	0					
ANR	10600476	PtrMemberAccess	exc -> metrics		10600258	0					
ANR	10600477	Identifier	exc		10600258	0					
ANR	10600478	Identifier	metrics		10600258	1					
ANR	10600479	Identifier	x_scale		10600258	1					
ANR	10600480	MemberAccess	exc -> metrics . y_scale		10600258	1					
ANR	10600481	PtrMemberAccess	exc -> metrics		10600258	0					
ANR	10600482	Identifier	exc		10600258	0					
ANR	10600483	Identifier	metrics		10600258	1					
ANR	10600484	Identifier	y_scale		10600258	1					
ANR	10600485	CompoundStatement		46:6:1339:1339	10600258	1					
ANR	10600486	ExpressionStatement	"org_dist = DUALPROJ ( vec1 , vec2 )"	6079:8:216539:216572	10600258	0	True				
ANR	10600487	AssignmentExpression	"org_dist = DUALPROJ ( vec1 , vec2 )"		10600258	0		=			
ANR	10600488	Identifier	org_dist		10600258	0					
ANR	10600489	CallExpression	"DUALPROJ ( vec1 , vec2 )"		10600258	1					
ANR	10600490	Callee	DUALPROJ		10600258	0					
ANR	10600491	Identifier	DUALPROJ		10600258	0					
ANR	10600492	ArgumentList	vec1		10600258	1					
ANR	10600493	Argument	vec1		10600258	0					
ANR	10600494	Identifier	vec1		10600258	0					
ANR	10600495	Argument	vec2		10600258	1					
ANR	10600496	Identifier	vec2		10600258	0					
ANR	10600497	ExpressionStatement	"org_dist = FT_MulFix ( org_dist , exc -> metrics . x_scale )"	6080:8:216582:216636	10600258	1	True				
ANR	10600498	AssignmentExpression	"org_dist = FT_MulFix ( org_dist , exc -> metrics . x_scale )"		10600258	0		=			
ANR	10600499	Identifier	org_dist		10600258	0					
ANR	10600500	CallExpression	"FT_MulFix ( org_dist , exc -> metrics . x_scale )"		10600258	1					
ANR	10600501	Callee	FT_MulFix		10600258	0					
ANR	10600502	Identifier	FT_MulFix		10600258	0					
ANR	10600503	ArgumentList	org_dist		10600258	1					
ANR	10600504	Argument	org_dist		10600258	0					
ANR	10600505	Identifier	org_dist		10600258	0					
ANR	10600506	Argument	exc -> metrics . x_scale		10600258	1					
ANR	10600507	MemberAccess	exc -> metrics . x_scale		10600258	0					
ANR	10600508	PtrMemberAccess	exc -> metrics		10600258	0					
ANR	10600509	Identifier	exc		10600258	0					
ANR	10600510	Identifier	metrics		10600258	1					
ANR	10600511	Identifier	x_scale		10600258	1					
ANR	10600512	ElseStatement	else		10600258	0					
ANR	10600513	CompoundStatement		53:8:1519:1533	10600258	0					
ANR	10600514	IdentifierDeclStatement	FT_Vector vec ;	6084:8:216673:216687	10600258	0	True				
ANR	10600515	IdentifierDecl	vec		10600258	0					
ANR	10600516	IdentifierDeclType	FT_Vector		10600258	0					
ANR	10600517	Identifier	vec		10600258	1					
ANR	10600518	ExpressionStatement	"vec . x = FT_MulFix ( SUB_LONG ( vec1 -> x , vec2 -> x ) , exc -> metrics . x_scale )"	6087:8:216699:216797	10600258	1	True				
ANR	10600519	AssignmentExpression	"vec . x = FT_MulFix ( SUB_LONG ( vec1 -> x , vec2 -> x ) , exc -> metrics . x_scale )"		10600258	0		=			
ANR	10600520	MemberAccess	vec . x		10600258	0					
ANR	10600521	Identifier	vec		10600258	0					
ANR	10600522	Identifier	x		10600258	1					
ANR	10600523	CallExpression	"FT_MulFix ( SUB_LONG ( vec1 -> x , vec2 -> x ) , exc -> metrics . x_scale )"		10600258	1					
ANR	10600524	Callee	FT_MulFix		10600258	0					
ANR	10600525	Identifier	FT_MulFix		10600258	0					
ANR	10600526	ArgumentList	"SUB_LONG ( vec1 -> x , vec2 -> x )"		10600258	1					
ANR	10600527	Argument	"SUB_LONG ( vec1 -> x , vec2 -> x )"		10600258	0					
ANR	10600528	CallExpression	"SUB_LONG ( vec1 -> x , vec2 -> x )"		10600258	0					
ANR	10600529	Callee	SUB_LONG		10600258	0					
ANR	10600530	Identifier	SUB_LONG		10600258	0					
ANR	10600531	ArgumentList	vec1 -> x		10600258	1					
ANR	10600532	Argument	vec1 -> x		10600258	0					
ANR	10600533	PtrMemberAccess	vec1 -> x		10600258	0					
ANR	10600534	Identifier	vec1		10600258	0					
ANR	10600535	Identifier	x		10600258	1					
ANR	10600536	Argument	vec2 -> x		10600258	1					
ANR	10600537	PtrMemberAccess	vec2 -> x		10600258	0					
ANR	10600538	Identifier	vec2		10600258	0					
ANR	10600539	Identifier	x		10600258	1					
ANR	10600540	Argument	exc -> metrics . x_scale		10600258	1					
ANR	10600541	MemberAccess	exc -> metrics . x_scale		10600258	0					
ANR	10600542	PtrMemberAccess	exc -> metrics		10600258	0					
ANR	10600543	Identifier	exc		10600258	0					
ANR	10600544	Identifier	metrics		10600258	1					
ANR	10600545	Identifier	x_scale		10600258	1					
ANR	10600546	ExpressionStatement	"vec . y = FT_MulFix ( SUB_LONG ( vec1 -> y , vec2 -> y ) , exc -> metrics . y_scale )"	6089:8:216807:216905	10600258	2	True				
ANR	10600547	AssignmentExpression	"vec . y = FT_MulFix ( SUB_LONG ( vec1 -> y , vec2 -> y ) , exc -> metrics . y_scale )"		10600258	0		=			
ANR	10600548	MemberAccess	vec . y		10600258	0					
ANR	10600549	Identifier	vec		10600258	0					
ANR	10600550	Identifier	y		10600258	1					
ANR	10600551	CallExpression	"FT_MulFix ( SUB_LONG ( vec1 -> y , vec2 -> y ) , exc -> metrics . y_scale )"		10600258	1					
ANR	10600552	Callee	FT_MulFix		10600258	0					
ANR	10600553	Identifier	FT_MulFix		10600258	0					
ANR	10600554	ArgumentList	"SUB_LONG ( vec1 -> y , vec2 -> y )"		10600258	1					
ANR	10600555	Argument	"SUB_LONG ( vec1 -> y , vec2 -> y )"		10600258	0					
ANR	10600556	CallExpression	"SUB_LONG ( vec1 -> y , vec2 -> y )"		10600258	0					
ANR	10600557	Callee	SUB_LONG		10600258	0					
ANR	10600558	Identifier	SUB_LONG		10600258	0					
ANR	10600559	ArgumentList	vec1 -> y		10600258	1					
ANR	10600560	Argument	vec1 -> y		10600258	0					
ANR	10600561	PtrMemberAccess	vec1 -> y		10600258	0					
ANR	10600562	Identifier	vec1		10600258	0					
ANR	10600563	Identifier	y		10600258	1					
ANR	10600564	Argument	vec2 -> y		10600258	1					
ANR	10600565	PtrMemberAccess	vec2 -> y		10600258	0					
ANR	10600566	Identifier	vec2		10600258	0					
ANR	10600567	Identifier	y		10600258	1					
ANR	10600568	Argument	exc -> metrics . y_scale		10600258	1					
ANR	10600569	MemberAccess	exc -> metrics . y_scale		10600258	0					
ANR	10600570	PtrMemberAccess	exc -> metrics		10600258	0					
ANR	10600571	Identifier	exc		10600258	0					
ANR	10600572	Identifier	metrics		10600258	1					
ANR	10600573	Identifier	y_scale		10600258	1					
ANR	10600574	ExpressionStatement	org_dist = FAST_DUALPROJ ( & vec )	6092:8:216916:216948	10600258	3	True				
ANR	10600575	AssignmentExpression	org_dist = FAST_DUALPROJ ( & vec )		10600258	0		=			
ANR	10600576	Identifier	org_dist		10600258	0					
ANR	10600577	CallExpression	FAST_DUALPROJ ( & vec )		10600258	1					
ANR	10600578	Callee	FAST_DUALPROJ		10600258	0					
ANR	10600579	Identifier	FAST_DUALPROJ		10600258	0					
ANR	10600580	ArgumentList	& vec		10600258	1					
ANR	10600581	Argument	& vec		10600258	0					
ANR	10600582	UnaryOperationExpression	& vec		10600258	0					
ANR	10600583	UnaryOperator	&		10600258	0					
ANR	10600584	Identifier	vec		10600258	1					
ANR	10600585	IfStatement	if ( exc -> GS . single_width_cutin > 0 && org_dist < exc -> GS . single_width_value + exc -> GS . single_width_cutin && org_dist > exc -> GS . single_width_value - exc -> GS . single_width_cutin )		10600258	7					
ANR	10600586	Condition	exc -> GS . single_width_cutin > 0 && org_dist < exc -> GS . single_width_value + exc -> GS . single_width_cutin && org_dist > exc -> GS . single_width_value - exc -> GS . single_width_cutin	6099:9:217073:217313	10600258	0	True				
ANR	10600587	AndExpression	exc -> GS . single_width_cutin > 0 && org_dist < exc -> GS . single_width_value + exc -> GS . single_width_cutin && org_dist > exc -> GS . single_width_value - exc -> GS . single_width_cutin		10600258	0		&&			
ANR	10600588	RelationalExpression	exc -> GS . single_width_cutin > 0		10600258	0		>			
ANR	10600589	MemberAccess	exc -> GS . single_width_cutin		10600258	0					
ANR	10600590	PtrMemberAccess	exc -> GS		10600258	0					
ANR	10600591	Identifier	exc		10600258	0					
ANR	10600592	Identifier	GS		10600258	1					
ANR	10600593	Identifier	single_width_cutin		10600258	1					
ANR	10600594	PrimaryExpression	0		10600258	1					
ANR	10600595	AndExpression	org_dist < exc -> GS . single_width_value + exc -> GS . single_width_cutin && org_dist > exc -> GS . single_width_value - exc -> GS . single_width_cutin		10600258	1		&&			
ANR	10600596	RelationalExpression	org_dist < exc -> GS . single_width_value + exc -> GS . single_width_cutin		10600258	0		<			
ANR	10600597	Identifier	org_dist		10600258	0					
ANR	10600598	AdditiveExpression	exc -> GS . single_width_value + exc -> GS . single_width_cutin		10600258	1		+			
ANR	10600599	MemberAccess	exc -> GS . single_width_value		10600258	0					
ANR	10600600	PtrMemberAccess	exc -> GS		10600258	0					
ANR	10600601	Identifier	exc		10600258	0					
ANR	10600602	Identifier	GS		10600258	1					
ANR	10600603	Identifier	single_width_value		10600258	1					
ANR	10600604	MemberAccess	exc -> GS . single_width_cutin		10600258	1					
ANR	10600605	PtrMemberAccess	exc -> GS		10600258	0					
ANR	10600606	Identifier	exc		10600258	0					
ANR	10600607	Identifier	GS		10600258	1					
ANR	10600608	Identifier	single_width_cutin		10600258	1					
ANR	10600609	RelationalExpression	org_dist > exc -> GS . single_width_value - exc -> GS . single_width_cutin		10600258	1		>			
ANR	10600610	Identifier	org_dist		10600258	0					
ANR	10600611	AdditiveExpression	exc -> GS . single_width_value - exc -> GS . single_width_cutin		10600258	1		-			
ANR	10600612	MemberAccess	exc -> GS . single_width_value		10600258	0					
ANR	10600613	PtrMemberAccess	exc -> GS		10600258	0					
ANR	10600614	Identifier	exc		10600258	0					
ANR	10600615	Identifier	GS		10600258	1					
ANR	10600616	Identifier	single_width_value		10600258	1					
ANR	10600617	MemberAccess	exc -> GS . single_width_cutin		10600258	1					
ANR	10600618	PtrMemberAccess	exc -> GS		10600258	0					
ANR	10600619	Identifier	exc		10600258	0					
ANR	10600620	Identifier	GS		10600258	1					
ANR	10600621	Identifier	single_width_cutin		10600258	1					
ANR	10600622	CompoundStatement		73:4:2167:2167	10600258	1					
ANR	10600623	IfStatement	if ( org_dist >= 0 )		10600258	0					
ANR	10600624	Condition	org_dist >= 0	6105:11:217334:217346	10600258	0	True				
ANR	10600625	RelationalExpression	org_dist >= 0		10600258	0		>=			
ANR	10600626	Identifier	org_dist		10600258	0					
ANR	10600627	PrimaryExpression	0		10600258	1					
ANR	10600628	ExpressionStatement	org_dist = exc -> GS . single_width_value	6106:8:217358:217395	10600258	1	True				
ANR	10600629	AssignmentExpression	org_dist = exc -> GS . single_width_value		10600258	0		=			
ANR	10600630	Identifier	org_dist		10600258	0					
ANR	10600631	MemberAccess	exc -> GS . single_width_value		10600258	1					
ANR	10600632	PtrMemberAccess	exc -> GS		10600258	0					
ANR	10600633	Identifier	exc		10600258	0					
ANR	10600634	Identifier	GS		10600258	1					
ANR	10600635	Identifier	single_width_value		10600258	1					
ANR	10600636	ElseStatement	else		10600258	0					
ANR	10600637	ExpressionStatement	org_dist = - exc -> GS . single_width_value	6108:8:217416:217454	10600258	0	True				
ANR	10600638	AssignmentExpression	org_dist = - exc -> GS . single_width_value		10600258	0		=			
ANR	10600639	Identifier	org_dist		10600258	0					
ANR	10600640	UnaryOperationExpression	- exc -> GS . single_width_value		10600258	1					
ANR	10600641	UnaryOperator	-		10600258	0					
ANR	10600642	MemberAccess	exc -> GS . single_width_value		10600258	1					
ANR	10600643	PtrMemberAccess	exc -> GS		10600258	0					
ANR	10600644	Identifier	exc		10600258	0					
ANR	10600645	Identifier	GS		10600258	1					
ANR	10600646	Identifier	single_width_value		10600258	1					
ANR	10600647	IfStatement	if ( ( exc -> opcode & 4 ) != 0 )		10600258	8					
ANR	10600648	Condition	( exc -> opcode & 4 ) != 0	6113:9:217494:217517	10600258	0	True				
ANR	10600649	EqualityExpression	( exc -> opcode & 4 ) != 0		10600258	0		!=			
ANR	10600650	BitAndExpression	exc -> opcode & 4		10600258	0		&			
ANR	10600651	PtrMemberAccess	exc -> opcode		10600258	0					
ANR	10600652	Identifier	exc		10600258	0					
ANR	10600653	Identifier	opcode		10600258	1					
ANR	10600654	PrimaryExpression	4		10600258	1					
ANR	10600655	PrimaryExpression	0		10600258	1					
ANR	10600656	CompoundStatement		83:4:2371:2371	10600258	1					
ANR	10600657	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> GS . freeVector . x != 0 )		10600258	0					
ANR	10600658	Condition	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> GS . freeVector . x != 0	6116:11:217584:217692	10600258	0	True				
ANR	10600659	AndExpression	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> GS . freeVector . x != 0		10600258	0		&&			
ANR	10600660	Identifier	SUBPIXEL_HINTING_INFINALITY		10600258	0					
ANR	10600661	AndExpression	exc -> ignore_x_mode && exc -> GS . freeVector . x != 0		10600258	1		&&			
ANR	10600662	PtrMemberAccess	exc -> ignore_x_mode		10600258	0					
ANR	10600663	Identifier	exc		10600258	0					
ANR	10600664	Identifier	ignore_x_mode		10600258	1					
ANR	10600665	EqualityExpression	exc -> GS . freeVector . x != 0		10600258	1		!=			
ANR	10600666	MemberAccess	exc -> GS . freeVector . x		10600258	0					
ANR	10600667	MemberAccess	exc -> GS . freeVector		10600258	0					
ANR	10600668	PtrMemberAccess	exc -> GS		10600258	0					
ANR	10600669	Identifier	exc		10600258	0					
ANR	10600670	Identifier	GS		10600258	1					
ANR	10600671	Identifier	freeVector		10600258	1					
ANR	10600672	Identifier	x		10600258	1					
ANR	10600673	PrimaryExpression	0		10600258	1					
ANR	10600674	ExpressionStatement	"distance = Round_None ( exc , org_dist , exc -> tt_metrics . compensations [ exc -> opcode & 3 ] )"	6119:8:217706:217855	10600258	1	True				
ANR	10600675	AssignmentExpression	"distance = Round_None ( exc , org_dist , exc -> tt_metrics . compensations [ exc -> opcode & 3 ] )"		10600258	0		=			
ANR	10600676	Identifier	distance		10600258	0					
ANR	10600677	CallExpression	"Round_None ( exc , org_dist , exc -> tt_metrics . compensations [ exc -> opcode & 3 ] )"		10600258	1					
ANR	10600678	Callee	Round_None		10600258	0					
ANR	10600679	Identifier	Round_None		10600258	0					
ANR	10600680	ArgumentList	exc		10600258	1					
ANR	10600681	Argument	exc		10600258	0					
ANR	10600682	Identifier	exc		10600258	0					
ANR	10600683	Argument	org_dist		10600258	1					
ANR	10600684	Identifier	org_dist		10600258	0					
ANR	10600685	Argument	exc -> tt_metrics . compensations [ exc -> opcode & 3 ]		10600258	2					
ANR	10600686	ArrayIndexing	exc -> tt_metrics . compensations [ exc -> opcode & 3 ]		10600258	0					
ANR	10600687	MemberAccess	exc -> tt_metrics . compensations		10600258	0					
ANR	10600688	PtrMemberAccess	exc -> tt_metrics		10600258	0					
ANR	10600689	Identifier	exc		10600258	0					
ANR	10600690	Identifier	tt_metrics		10600258	1					
ANR	10600691	Identifier	compensations		10600258	1					
ANR	10600692	BitAndExpression	exc -> opcode & 3		10600258	1		&			
ANR	10600693	PtrMemberAccess	exc -> opcode		10600258	0					
ANR	10600694	Identifier	exc		10600258	0					
ANR	10600695	Identifier	opcode		10600258	1					
ANR	10600696	PrimaryExpression	3		10600258	1					
ANR	10600697	ElseStatement	else		10600258	0					
ANR	10600698	ExpressionStatement	"distance = exc -> func_round ( exc , org_dist , exc -> tt_metrics . compensations [ exc -> opcode & 3 ] )"	6125:8:217883:218037	10600258	0	True				
ANR	10600699	AssignmentExpression	"distance = exc -> func_round ( exc , org_dist , exc -> tt_metrics . compensations [ exc -> opcode & 3 ] )"		10600258	0		=			
ANR	10600700	Identifier	distance		10600258	0					
ANR	10600701	CallExpression	"exc -> func_round ( exc , org_dist , exc -> tt_metrics . compensations [ exc -> opcode & 3 ] )"		10600258	1					
ANR	10600702	Callee	exc -> func_round		10600258	0					
ANR	10600703	PtrMemberAccess	exc -> func_round		10600258	0					
ANR	10600704	Identifier	exc		10600258	0					
ANR	10600705	Identifier	func_round		10600258	1					
ANR	10600706	ArgumentList	exc		10600258	1					
ANR	10600707	Argument	exc		10600258	0					
ANR	10600708	Identifier	exc		10600258	0					
ANR	10600709	Argument	org_dist		10600258	1					
ANR	10600710	Identifier	org_dist		10600258	0					
ANR	10600711	Argument	exc -> tt_metrics . compensations [ exc -> opcode & 3 ]		10600258	2					
ANR	10600712	ArrayIndexing	exc -> tt_metrics . compensations [ exc -> opcode & 3 ]		10600258	0					
ANR	10600713	MemberAccess	exc -> tt_metrics . compensations		10600258	0					
ANR	10600714	PtrMemberAccess	exc -> tt_metrics		10600258	0					
ANR	10600715	Identifier	exc		10600258	0					
ANR	10600716	Identifier	tt_metrics		10600258	1					
ANR	10600717	Identifier	compensations		10600258	1					
ANR	10600718	BitAndExpression	exc -> opcode & 3		10600258	1		&			
ANR	10600719	PtrMemberAccess	exc -> opcode		10600258	0					
ANR	10600720	Identifier	exc		10600258	0					
ANR	10600721	Identifier	opcode		10600258	1					
ANR	10600722	PrimaryExpression	3		10600258	1					
ANR	10600723	ElseStatement	else		10600258	0					
ANR	10600724	ExpressionStatement	"distance = Round_None ( exc , org_dist , exc -> tt_metrics . compensations [ exc -> opcode & 3 ] )"	6131:6:218060:218203	10600258	0	True				
ANR	10600725	AssignmentExpression	"distance = Round_None ( exc , org_dist , exc -> tt_metrics . compensations [ exc -> opcode & 3 ] )"		10600258	0		=			
ANR	10600726	Identifier	distance		10600258	0					
ANR	10600727	CallExpression	"Round_None ( exc , org_dist , exc -> tt_metrics . compensations [ exc -> opcode & 3 ] )"		10600258	1					
ANR	10600728	Callee	Round_None		10600258	0					
ANR	10600729	Identifier	Round_None		10600258	0					
ANR	10600730	ArgumentList	exc		10600258	1					
ANR	10600731	Argument	exc		10600258	0					
ANR	10600732	Identifier	exc		10600258	0					
ANR	10600733	Argument	org_dist		10600258	1					
ANR	10600734	Identifier	org_dist		10600258	0					
ANR	10600735	Argument	exc -> tt_metrics . compensations [ exc -> opcode & 3 ]		10600258	2					
ANR	10600736	ArrayIndexing	exc -> tt_metrics . compensations [ exc -> opcode & 3 ]		10600258	0					
ANR	10600737	MemberAccess	exc -> tt_metrics . compensations		10600258	0					
ANR	10600738	PtrMemberAccess	exc -> tt_metrics		10600258	0					
ANR	10600739	Identifier	exc		10600258	0					
ANR	10600740	Identifier	tt_metrics		10600258	1					
ANR	10600741	Identifier	compensations		10600258	1					
ANR	10600742	BitAndExpression	exc -> opcode & 3		10600258	1		&			
ANR	10600743	PtrMemberAccess	exc -> opcode		10600258	0					
ANR	10600744	Identifier	exc		10600258	0					
ANR	10600745	Identifier	opcode		10600258	1					
ANR	10600746	PrimaryExpression	3		10600258	1					
ANR	10600747	IfStatement	if ( ( exc -> opcode & 8 ) != 0 )		10600258	9					
ANR	10600748	Condition	( exc -> opcode & 8 ) != 0	6138:9:218248:218271	10600258	0	True				
ANR	10600749	EqualityExpression	( exc -> opcode & 8 ) != 0		10600258	0		!=			
ANR	10600750	BitAndExpression	exc -> opcode & 8		10600258	0		&			
ANR	10600751	PtrMemberAccess	exc -> opcode		10600258	0					
ANR	10600752	Identifier	exc		10600258	0					
ANR	10600753	Identifier	opcode		10600258	1					
ANR	10600754	PrimaryExpression	8		10600258	1					
ANR	10600755	PrimaryExpression	0		10600258	1					
ANR	10600756	CompoundStatement		108:4:3125:3125	10600258	1					
ANR	10600757	IfStatement	if ( org_dist >= 0 )		10600258	0					
ANR	10600758	Condition	org_dist >= 0	6140:11:218292:218304	10600258	0	True				
ANR	10600759	RelationalExpression	org_dist >= 0		10600258	0		>=			
ANR	10600760	Identifier	org_dist		10600258	0					
ANR	10600761	PrimaryExpression	0		10600258	1					
ANR	10600762	CompoundStatement		110:6:3160:3160	10600258	1					
ANR	10600763	IfStatement	if ( distance < minimum_distance )		10600258	0					
ANR	10600764	Condition	distance < minimum_distance	6142:13:218329:218355	10600258	0	True				
ANR	10600765	RelationalExpression	distance < minimum_distance		10600258	0		<			
ANR	10600766	Identifier	distance		10600258	0					
ANR	10600767	Identifier	minimum_distance		10600258	1					
ANR	10600768	ExpressionStatement	distance = minimum_distance	6143:10:218369:218396	10600258	1	True				
ANR	10600769	AssignmentExpression	distance = minimum_distance		10600258	0		=			
ANR	10600770	Identifier	distance		10600258	0					
ANR	10600771	Identifier	minimum_distance		10600258	1					
ANR	10600772	ElseStatement	else		10600258	0					
ANR	10600773	CompoundStatement		115:6:3269:3269	10600258	0					
ANR	10600774	IfStatement	if ( distance > NEG_LONG ( minimum_distance ) )		10600258	0					
ANR	10600775	Condition	distance > NEG_LONG ( minimum_distance )	6147:13:218438:218476	10600258	0	True				
ANR	10600776	RelationalExpression	distance > NEG_LONG ( minimum_distance )		10600258	0		>			
ANR	10600777	Identifier	distance		10600258	0					
ANR	10600778	CallExpression	NEG_LONG ( minimum_distance )		10600258	1					
ANR	10600779	Callee	NEG_LONG		10600258	0					
ANR	10600780	Identifier	NEG_LONG		10600258	0					
ANR	10600781	ArgumentList	minimum_distance		10600258	1					
ANR	10600782	Argument	minimum_distance		10600258	0					
ANR	10600783	Identifier	minimum_distance		10600258	0					
ANR	10600784	ExpressionStatement	distance = NEG_LONG ( minimum_distance )	6148:10:218490:218529	10600258	1	True				
ANR	10600785	AssignmentExpression	distance = NEG_LONG ( minimum_distance )		10600258	0		=			
ANR	10600786	Identifier	distance		10600258	0					
ANR	10600787	CallExpression	NEG_LONG ( minimum_distance )		10600258	1					
ANR	10600788	Callee	NEG_LONG		10600258	0					
ANR	10600789	Identifier	NEG_LONG		10600258	0					
ANR	10600790	ArgumentList	minimum_distance		10600258	1					
ANR	10600791	Argument	minimum_distance		10600258	0					
ANR	10600792	Identifier	minimum_distance		10600258	0					
ANR	10600793	ExpressionStatement	"org_dist = PROJECT ( exc -> zp1 . cur + point , exc -> zp0 . cur + exc -> GS . rp0 )"	6154:4:218580:218650	10600258	10	True				
ANR	10600794	AssignmentExpression	"org_dist = PROJECT ( exc -> zp1 . cur + point , exc -> zp0 . cur + exc -> GS . rp0 )"		10600258	0		=			
ANR	10600795	Identifier	org_dist		10600258	0					
ANR	10600796	CallExpression	"PROJECT ( exc -> zp1 . cur + point , exc -> zp0 . cur + exc -> GS . rp0 )"		10600258	1					
ANR	10600797	Callee	PROJECT		10600258	0					
ANR	10600798	Identifier	PROJECT		10600258	0					
ANR	10600799	ArgumentList	exc -> zp1 . cur + point		10600258	1					
ANR	10600800	Argument	exc -> zp1 . cur + point		10600258	0					
ANR	10600801	AdditiveExpression	exc -> zp1 . cur + point		10600258	0		+			
ANR	10600802	MemberAccess	exc -> zp1 . cur		10600258	0					
ANR	10600803	PtrMemberAccess	exc -> zp1		10600258	0					
ANR	10600804	Identifier	exc		10600258	0					
ANR	10600805	Identifier	zp1		10600258	1					
ANR	10600806	Identifier	cur		10600258	1					
ANR	10600807	Identifier	point		10600258	1					
ANR	10600808	Argument	exc -> zp0 . cur + exc -> GS . rp0		10600258	1					
ANR	10600809	AdditiveExpression	exc -> zp0 . cur + exc -> GS . rp0		10600258	0		+			
ANR	10600810	MemberAccess	exc -> zp0 . cur		10600258	0					
ANR	10600811	PtrMemberAccess	exc -> zp0		10600258	0					
ANR	10600812	Identifier	exc		10600258	0					
ANR	10600813	Identifier	zp0		10600258	1					
ANR	10600814	Identifier	cur		10600258	1					
ANR	10600815	MemberAccess	exc -> GS . rp0		10600258	1					
ANR	10600816	PtrMemberAccess	exc -> GS		10600258	0					
ANR	10600817	Identifier	exc		10600258	0					
ANR	10600818	Identifier	GS		10600258	1					
ANR	10600819	Identifier	rp0		10600258	1					
ANR	10600820	ExpressionStatement	"exc -> func_move ( exc , & exc -> zp1 , point , SUB_LONG ( distance , org_dist ) )"	6156:4:218657:218728	10600258	11	True				
ANR	10600821	CallExpression	"exc -> func_move ( exc , & exc -> zp1 , point , SUB_LONG ( distance , org_dist ) )"		10600258	0					
ANR	10600822	Callee	exc -> func_move		10600258	0					
ANR	10600823	PtrMemberAccess	exc -> func_move		10600258	0					
ANR	10600824	Identifier	exc		10600258	0					
ANR	10600825	Identifier	func_move		10600258	1					
ANR	10600826	ArgumentList	exc		10600258	1					
ANR	10600827	Argument	exc		10600258	0					
ANR	10600828	Identifier	exc		10600258	0					
ANR	10600829	Argument	& exc -> zp1		10600258	1					
ANR	10600830	UnaryOperationExpression	& exc -> zp1		10600258	0					
ANR	10600831	UnaryOperator	&		10600258	0					
ANR	10600832	PtrMemberAccess	exc -> zp1		10600258	1					
ANR	10600833	Identifier	exc		10600258	0					
ANR	10600834	Identifier	zp1		10600258	1					
ANR	10600835	Argument	point		10600258	2					
ANR	10600836	Identifier	point		10600258	0					
ANR	10600837	Argument	"SUB_LONG ( distance , org_dist )"		10600258	3					
ANR	10600838	CallExpression	"SUB_LONG ( distance , org_dist )"		10600258	0					
ANR	10600839	Callee	SUB_LONG		10600258	0					
ANR	10600840	Identifier	SUB_LONG		10600258	0					
ANR	10600841	ArgumentList	distance		10600258	1					
ANR	10600842	Argument	distance		10600258	0					
ANR	10600843	Identifier	distance		10600258	0					
ANR	10600844	Argument	org_dist		10600258	1					
ANR	10600845	Identifier	org_dist		10600258	0					
ANR	10600846	Label	Fail :	6158:2:218733:218737	10600258	12	True				
ANR	10600847	Identifier	Fail		10600258	0					
ANR	10600848	ExpressionStatement	exc -> GS . rp1 = exc -> GS . rp0	6159:4:218743:218768	10600258	13	True				
ANR	10600849	AssignmentExpression	exc -> GS . rp1 = exc -> GS . rp0		10600258	0		=			
ANR	10600850	MemberAccess	exc -> GS . rp1		10600258	0					
ANR	10600851	PtrMemberAccess	exc -> GS		10600258	0					
ANR	10600852	Identifier	exc		10600258	0					
ANR	10600853	Identifier	GS		10600258	1					
ANR	10600854	Identifier	rp1		10600258	1					
ANR	10600855	MemberAccess	exc -> GS . rp0		10600258	1					
ANR	10600856	PtrMemberAccess	exc -> GS		10600258	0					
ANR	10600857	Identifier	exc		10600258	0					
ANR	10600858	Identifier	GS		10600258	1					
ANR	10600859	Identifier	rp0		10600258	1					
ANR	10600860	ExpressionStatement	exc -> GS . rp2 = point	6160:4:218774:218793	10600258	14	True				
ANR	10600861	AssignmentExpression	exc -> GS . rp2 = point		10600258	0		=			
ANR	10600862	MemberAccess	exc -> GS . rp2		10600258	0					
ANR	10600863	PtrMemberAccess	exc -> GS		10600258	0					
ANR	10600864	Identifier	exc		10600258	0					
ANR	10600865	Identifier	GS		10600258	1					
ANR	10600866	Identifier	rp2		10600258	1					
ANR	10600867	Identifier	point		10600258	1					
ANR	10600868	IfStatement	if ( ( exc -> opcode & 16 ) != 0 )		10600258	15					
ANR	10600869	Condition	( exc -> opcode & 16 ) != 0	6162:9:218805:218829	10600258	0	True				
ANR	10600870	EqualityExpression	( exc -> opcode & 16 ) != 0		10600258	0		!=			
ANR	10600871	BitAndExpression	exc -> opcode & 16		10600258	0		&			
ANR	10600872	PtrMemberAccess	exc -> opcode		10600258	0					
ANR	10600873	Identifier	exc		10600258	0					
ANR	10600874	Identifier	opcode		10600258	1					
ANR	10600875	PrimaryExpression	16		10600258	1					
ANR	10600876	PrimaryExpression	0		10600258	1					
ANR	10600877	ExpressionStatement	exc -> GS . rp0 = point	6163:6:218839:218858	10600258	1	True				
ANR	10600878	AssignmentExpression	exc -> GS . rp0 = point		10600258	0		=			
ANR	10600879	MemberAccess	exc -> GS . rp0		10600258	0					
ANR	10600880	PtrMemberAccess	exc -> GS		10600258	0					
ANR	10600881	Identifier	exc		10600258	0					
ANR	10600882	Identifier	GS		10600258	1					
ANR	10600883	Identifier	rp0		10600258	1					
ANR	10600884	Identifier	point		10600258	1					
ANR	10600885	ReturnType	static void		10600258	1					
ANR	10600886	Identifier	Ins_MDRP		10600258	2					
ANR	10600887	ParameterList	"TT_ExecContext exc , FT_Long * args"		10600258	3					
ANR	10600888	Parameter	TT_ExecContext exc	6030:12:215095:215113	10600258	0	True				
ANR	10600889	ParameterType	TT_ExecContext		10600258	0					
ANR	10600890	Identifier	exc		10600258	1					
ANR	10600891	Parameter	FT_Long * args	6031:12:215128:215147	10600258	1	True				
ANR	10600892	ParameterType	FT_Long *		10600258	0					
ANR	10600893	Identifier	args		10600258	1					
ANR	10600894	CFGEntryNode	ENTRY		10600258		True				
ANR	10600895	CFGExitNode	EXIT		10600258		True				
ANR	10600896	Symbol	vec . y		10600258						
ANR	10600897	Symbol	vec . x		10600258						
ANR	10600898	Symbol	exc -> GS . freeVector . x		10600258						
ANR	10600899	Symbol	Round_None		10600258						
ANR	10600900	Symbol	vec1 -> x		10600258						
ANR	10600901	Symbol	vec1 -> y		10600258						
ANR	10600902	Symbol	* args		10600258						
ANR	10600903	Symbol	SUBPIXEL_HINTING_INFINALITY		10600258						
ANR	10600904	Symbol	exc		10600258						
ANR	10600905	Symbol	Invalid_Reference		10600258						
ANR	10600906	Symbol	exc -> zp1 . org		10600258						
ANR	10600907	Symbol	exc -> GS . minimum_distance		10600258						
ANR	10600908	Symbol	BOUNDS		10600258						
ANR	10600909	Symbol	vec		10600258						
ANR	10600910	Symbol	exc -> func_round		10600258						
ANR	10600911	Symbol	exc -> metrics . x_scale		10600258						
ANR	10600912	Symbol	vec2 -> y		10600258						
ANR	10600913	Symbol	exc -> error		10600258						
ANR	10600914	Symbol	vec2 -> x		10600258						
ANR	10600915	Symbol	exc -> zp0 . cur		10600258						
ANR	10600916	Symbol	PROJECT		10600258						
ANR	10600917	Symbol	exc -> metrics . y_scale		10600258						
ANR	10600918	Symbol	exc -> zp1 . n_points		10600258						
ANR	10600919	Symbol	exc -> GS . single_width_cutin		10600258						
ANR	10600920	Symbol	exc -> pedantic_hinting		10600258						
ANR	10600921	Symbol	vec2		10600258						
ANR	10600922	Symbol	vec1		10600258						
ANR	10600923	Symbol	exc -> metrics		10600258						
ANR	10600924	Symbol	exc -> tt_metrics		10600258						
ANR	10600925	Symbol	minimum_distance		10600258						
ANR	10600926	Symbol	exc -> GS . rp1		10600258						
ANR	10600927	Symbol	exc -> GS . rp2		10600258						
ANR	10600928	Symbol	& exc -> zp1		10600258						
ANR	10600929	Symbol	exc -> GS . rp0		10600258						
ANR	10600930	Symbol	exc -> zp1 . cur		10600258						
ANR	10600931	Symbol	exc -> zp0 . org		10600258						
ANR	10600932	Symbol	exc -> opcode		10600258						
ANR	10600933	Symbol	& vec		10600258						
ANR	10600934	Symbol	exc -> GS . freeVector		10600258						
ANR	10600935	Symbol	* exc -> tt_metrics . compensations		10600258						
ANR	10600936	Symbol	distance		10600258						
ANR	10600937	Symbol	exc -> tt_metrics . compensations		10600258						
ANR	10600938	Symbol	* exc		10600258						
ANR	10600939	Symbol	FAST_DUALPROJ		10600258						
ANR	10600940	Symbol	SUB_LONG		10600258						
ANR	10600941	Symbol	point		10600258						
ANR	10600942	Symbol	exc -> zp0 . n_points		10600258						
ANR	10600943	Symbol	exc -> GS . single_width_value		10600258						
ANR	10600944	Symbol	* exc -> tt_metrics		10600258						
ANR	10600945	Symbol	exc -> zp1 . orus		10600258						
ANR	10600946	Symbol	exc -> sph_tweak_flags		10600258						
ANR	10600947	Symbol	DUALPROJ		10600258						
ANR	10600948	Symbol	exc -> zp0 . orus		10600258						
ANR	10600949	Symbol	NEG_LONG		10600258						
ANR	10600950	Symbol	exc -> ignore_x_mode		10600258						
ANR	10600951	Symbol	SPH_TWEAK_NORMAL_ROUND		10600258						
ANR	10600952	Symbol	* * exc		10600258						
ANR	10600953	Symbol	exc -> GS . gep0		10600258						
ANR	10600954	Symbol	exc -> GS . gep1		10600258						
ANR	10600955	Symbol	exc -> GS		10600258						
ANR	10600956	Symbol	FT_THROW		10600258						
ANR	10600957	Symbol	args		10600258						
ANR	10600958	Symbol	exc -> zp1		10600258						
ANR	10600959	Symbol	* vec2		10600258						
ANR	10600960	Symbol	FT_MulFix		10600258						
ANR	10600961	Symbol	org_dist		10600258						
ANR	10600962	Symbol	exc -> zp0		10600258						
ANR	10600963	Symbol	* vec1		10600258						
ANR	10600964	Symbol	* exc -> opcode		10600258						
ANR	10600965	Function	Ins_MIRP	6173:2:219336:227244							
ANR	10600966	FunctionDef	"Ins_MIRP (TT_ExecContext exc , FT_Long * args)"		10600965	0					
ANR	10600967	CompoundStatement		6176:2:219418:227244	10600965	0					
ANR	10600968	IdentifierDeclStatement	FT_UShort point ;	6177:4:219424:219441	10600965	0	True				
ANR	10600969	IdentifierDecl	point		10600965	0					
ANR	10600970	IdentifierDeclType	FT_UShort		10600965	0					
ANR	10600971	Identifier	point		10600965	1					
ANR	10600972	IdentifierDeclStatement	FT_ULong cvtEntry ;	6178:4:219447:219467	10600965	1	True				
ANR	10600973	IdentifierDecl	cvtEntry		10600965	0					
ANR	10600974	IdentifierDeclType	FT_ULong		10600965	0					
ANR	10600975	Identifier	cvtEntry		10600965	1					
ANR	10600976	IdentifierDeclStatement	"FT_F26Dot6 cvt_dist , distance , cur_dist , org_dist , control_value_cutin , minimum_distance ;"	6180:4:219474:219643	10600965	2	True				
ANR	10600977	IdentifierDecl	cvt_dist		10600965	0					
ANR	10600978	IdentifierDeclType	FT_F26Dot6		10600965	0					
ANR	10600979	Identifier	cvt_dist		10600965	1					
ANR	10600980	IdentifierDecl	distance		10600965	1					
ANR	10600981	IdentifierDeclType	FT_F26Dot6		10600965	0					
ANR	10600982	Identifier	distance		10600965	1					
ANR	10600983	IdentifierDecl	cur_dist		10600965	2					
ANR	10600984	IdentifierDeclType	FT_F26Dot6		10600965	0					
ANR	10600985	Identifier	cur_dist		10600965	1					
ANR	10600986	IdentifierDecl	org_dist		10600965	3					
ANR	10600987	IdentifierDeclType	FT_F26Dot6		10600965	0					
ANR	10600988	Identifier	org_dist		10600965	1					
ANR	10600989	IdentifierDecl	control_value_cutin		10600965	4					
ANR	10600990	IdentifierDeclType	FT_F26Dot6		10600965	0					
ANR	10600991	Identifier	control_value_cutin		10600965	1					
ANR	10600992	IdentifierDecl	minimum_distance		10600965	5					
ANR	10600993	IdentifierDeclType	FT_F26Dot6		10600965	0					
ANR	10600994	Identifier	minimum_distance		10600965	1					
ANR	10600995	IdentifierDeclStatement	FT_Int B1 = 0 ;	6187:4:219695:219723	10600965	3	True				
ANR	10600996	IdentifierDecl	B1 = 0		10600965	0					
ANR	10600997	IdentifierDeclType	FT_Int		10600965	0					
ANR	10600998	Identifier	B1		10600965	1					
ANR	10600999	AssignmentExpression	B1 = 0		10600965	2		=			
ANR	10601000	Identifier	B1		10600965	0					
ANR	10601001	PrimaryExpression	0		10600965	1					
ANR	10601002	IdentifierDeclStatement	FT_Int B2 = 0 ;	6188:4:219751:219779	10600965	4	True				
ANR	10601003	IdentifierDecl	B2 = 0		10600965	0					
ANR	10601004	IdentifierDeclType	FT_Int		10600965	0					
ANR	10601005	Identifier	B2		10600965	1					
ANR	10601006	AssignmentExpression	B2 = 0		10600965	2		=			
ANR	10601007	Identifier	B2		10600965	0					
ANR	10601008	PrimaryExpression	0		10600965	1					
ANR	10601009	IdentifierDeclStatement	FT_Bool reverse_move = FALSE ;	6189:4:219785:219817	10600965	5	True				
ANR	10601010	IdentifierDecl	reverse_move = FALSE		10600965	0					
ANR	10601011	IdentifierDeclType	FT_Bool		10600965	0					
ANR	10601012	Identifier	reverse_move		10600965	1					
ANR	10601013	AssignmentExpression	reverse_move = FALSE		10600965	2		=			
ANR	10601014	Identifier	FALSE		10600965	0					
ANR	10601015	Identifier	FALSE		10600965	1					
ANR	10601016	ExpressionStatement	minimum_distance = exc -> GS . minimum_distance	6193:4:219877:219923	10600965	6	True				
ANR	10601017	AssignmentExpression	minimum_distance = exc -> GS . minimum_distance		10600965	0		=			
ANR	10601018	Identifier	minimum_distance		10600965	0					
ANR	10601019	MemberAccess	exc -> GS . minimum_distance		10600965	1					
ANR	10601020	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601021	Identifier	exc		10600965	0					
ANR	10601022	Identifier	GS		10600965	1					
ANR	10601023	Identifier	minimum_distance		10600965	1					
ANR	10601024	ExpressionStatement	control_value_cutin = exc -> GS . control_value_cutin	6194:4:219929:219978	10600965	7	True				
ANR	10601025	AssignmentExpression	control_value_cutin = exc -> GS . control_value_cutin		10600965	0		=			
ANR	10601026	Identifier	control_value_cutin		10600965	0					
ANR	10601027	MemberAccess	exc -> GS . control_value_cutin		10600965	1					
ANR	10601028	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601029	Identifier	exc		10600965	0					
ANR	10601030	Identifier	GS		10600965	1					
ANR	10601031	Identifier	control_value_cutin		10600965	1					
ANR	10601032	ExpressionStatement	point = ( FT_UShort ) args [ 0 ]	6195:4:219984:220024	10600965	8	True				
ANR	10601033	AssignmentExpression	point = ( FT_UShort ) args [ 0 ]		10600965	0		=			
ANR	10601034	Identifier	point		10600965	0					
ANR	10601035	CastExpression	( FT_UShort ) args [ 0 ]		10600965	1					
ANR	10601036	CastTarget	FT_UShort		10600965	0					
ANR	10601037	ArrayIndexing	args [ 0 ]		10600965	1					
ANR	10601038	Identifier	args		10600965	0					
ANR	10601039	PrimaryExpression	0		10600965	1					
ANR	10601040	ExpressionStatement	"cvtEntry = ( FT_ULong ) ( ADD_LONG ( args [ 1 ] , 1 ) )"	6196:4:220030:220088	10600965	9	True				
ANR	10601041	AssignmentExpression	"cvtEntry = ( FT_ULong ) ( ADD_LONG ( args [ 1 ] , 1 ) )"		10600965	0		=			
ANR	10601042	Identifier	cvtEntry		10600965	0					
ANR	10601043	CastExpression	"( FT_ULong ) ( ADD_LONG ( args [ 1 ] , 1 ) )"		10600965	1					
ANR	10601044	CastTarget	FT_ULong		10600965	0					
ANR	10601045	CallExpression	"ADD_LONG ( args [ 1 ] , 1 )"		10600965	1					
ANR	10601046	Callee	ADD_LONG		10600965	0					
ANR	10601047	Identifier	ADD_LONG		10600965	0					
ANR	10601048	ArgumentList	args [ 1 ]		10600965	1					
ANR	10601049	Argument	args [ 1 ]		10600965	0					
ANR	10601050	ArrayIndexing	args [ 1 ]		10600965	0					
ANR	10601051	Identifier	args		10600965	0					
ANR	10601052	PrimaryExpression	1		10600965	1					
ANR	10601053	Argument	1		10600965	1					
ANR	10601054	PrimaryExpression	1		10600965	0					
ANR	10601055	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> GS . freeVector . x != 0 && ! ( exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND ) )		10600965	10					
ANR	10601056	Condition	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> GS . freeVector . x != 0 && ! ( exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND )	6199:9:220146:220384	10600965	0	True				
ANR	10601057	AndExpression	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> GS . freeVector . x != 0 && ! ( exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND )		10600965	0		&&			
ANR	10601058	Identifier	SUBPIXEL_HINTING_INFINALITY		10600965	0					
ANR	10601059	AndExpression	exc -> ignore_x_mode && exc -> GS . freeVector . x != 0 && ! ( exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND )		10600965	1		&&			
ANR	10601060	PtrMemberAccess	exc -> ignore_x_mode		10600965	0					
ANR	10601061	Identifier	exc		10600965	0					
ANR	10601062	Identifier	ignore_x_mode		10600965	1					
ANR	10601063	AndExpression	exc -> GS . freeVector . x != 0 && ! ( exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND )		10600965	1		&&			
ANR	10601064	EqualityExpression	exc -> GS . freeVector . x != 0		10600965	0		!=			
ANR	10601065	MemberAccess	exc -> GS . freeVector . x		10600965	0					
ANR	10601066	MemberAccess	exc -> GS . freeVector		10600965	0					
ANR	10601067	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601068	Identifier	exc		10600965	0					
ANR	10601069	Identifier	GS		10600965	1					
ANR	10601070	Identifier	freeVector		10600965	1					
ANR	10601071	Identifier	x		10600965	1					
ANR	10601072	PrimaryExpression	0		10600965	1					
ANR	10601073	UnaryOperationExpression	! ( exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND )		10600965	1					
ANR	10601074	UnaryOperator	!		10600965	0					
ANR	10601075	BitAndExpression	exc -> sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND		10600965	1		&			
ANR	10601076	PtrMemberAccess	exc -> sph_tweak_flags		10600965	0					
ANR	10601077	Identifier	exc		10600965	0					
ANR	10601078	Identifier	sph_tweak_flags		10600965	1					
ANR	10601079	Identifier	SPH_TWEAK_NORMAL_ROUND		10600965	1					
ANR	10601080	ExpressionStatement	control_value_cutin = minimum_distance = 0	6203:6:220394:220436	10600965	1	True				
ANR	10601081	AssignmentExpression	control_value_cutin = minimum_distance = 0		10600965	0		=			
ANR	10601082	Identifier	control_value_cutin		10600965	0					
ANR	10601083	AssignmentExpression	minimum_distance = 0		10600965	1		=			
ANR	10601084	Identifier	minimum_distance		10600965	0					
ANR	10601085	PrimaryExpression	0		10600965	1					
ANR	10601086	IfStatement	"if ( BOUNDS ( point , exc -> zp1 . n_points ) || BOUNDSL ( cvtEntry , exc -> cvtSize + 1 ) || BOUNDS ( exc -> GS . rp0 , exc -> zp0 . n_points ) )"		10600965	11					
ANR	10601087	Condition	"BOUNDS ( point , exc -> zp1 . n_points ) || BOUNDSL ( cvtEntry , exc -> cvtSize + 1 ) || BOUNDS ( exc -> GS . rp0 , exc -> zp0 . n_points )"	6208:9:220549:220694	10600965	0	True				
ANR	10601088	OrExpression	"BOUNDS ( point , exc -> zp1 . n_points ) || BOUNDSL ( cvtEntry , exc -> cvtSize + 1 ) || BOUNDS ( exc -> GS . rp0 , exc -> zp0 . n_points )"		10600965	0		||			
ANR	10601089	CallExpression	"BOUNDS ( point , exc -> zp1 . n_points )"		10600965	0					
ANR	10601090	Callee	BOUNDS		10600965	0					
ANR	10601091	Identifier	BOUNDS		10600965	0					
ANR	10601092	ArgumentList	point		10600965	1					
ANR	10601093	Argument	point		10600965	0					
ANR	10601094	Identifier	point		10600965	0					
ANR	10601095	Argument	exc -> zp1 . n_points		10600965	1					
ANR	10601096	MemberAccess	exc -> zp1 . n_points		10600965	0					
ANR	10601097	PtrMemberAccess	exc -> zp1		10600965	0					
ANR	10601098	Identifier	exc		10600965	0					
ANR	10601099	Identifier	zp1		10600965	1					
ANR	10601100	Identifier	n_points		10600965	1					
ANR	10601101	OrExpression	"BOUNDSL ( cvtEntry , exc -> cvtSize + 1 ) || BOUNDS ( exc -> GS . rp0 , exc -> zp0 . n_points )"		10600965	1		||			
ANR	10601102	CallExpression	"BOUNDSL ( cvtEntry , exc -> cvtSize + 1 )"		10600965	0					
ANR	10601103	Callee	BOUNDSL		10600965	0					
ANR	10601104	Identifier	BOUNDSL		10600965	0					
ANR	10601105	ArgumentList	cvtEntry		10600965	1					
ANR	10601106	Argument	cvtEntry		10600965	0					
ANR	10601107	Identifier	cvtEntry		10600965	0					
ANR	10601108	Argument	exc -> cvtSize + 1		10600965	1					
ANR	10601109	AdditiveExpression	exc -> cvtSize + 1		10600965	0		+			
ANR	10601110	PtrMemberAccess	exc -> cvtSize		10600965	0					
ANR	10601111	Identifier	exc		10600965	0					
ANR	10601112	Identifier	cvtSize		10600965	1					
ANR	10601113	PrimaryExpression	1		10600965	1					
ANR	10601114	CallExpression	"BOUNDS ( exc -> GS . rp0 , exc -> zp0 . n_points )"		10600965	1					
ANR	10601115	Callee	BOUNDS		10600965	0					
ANR	10601116	Identifier	BOUNDS		10600965	0					
ANR	10601117	ArgumentList	exc -> GS . rp0		10600965	1					
ANR	10601118	Argument	exc -> GS . rp0		10600965	0					
ANR	10601119	MemberAccess	exc -> GS . rp0		10600965	0					
ANR	10601120	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601121	Identifier	exc		10600965	0					
ANR	10601122	Identifier	GS		10600965	1					
ANR	10601123	Identifier	rp0		10600965	1					
ANR	10601124	Argument	exc -> zp0 . n_points		10600965	1					
ANR	10601125	MemberAccess	exc -> zp0 . n_points		10600965	0					
ANR	10601126	PtrMemberAccess	exc -> zp0		10600965	0					
ANR	10601127	Identifier	exc		10600965	0					
ANR	10601128	Identifier	zp0		10600965	1					
ANR	10601129	Identifier	n_points		10600965	1					
ANR	10601130	CompoundStatement		36:4:1283:1283	10600965	1					
ANR	10601131	IfStatement	if ( exc -> pedantic_hinting )		10600965	0					
ANR	10601132	Condition	exc -> pedantic_hinting	6212:11:220715:220735	10600965	0	True				
ANR	10601133	PtrMemberAccess	exc -> pedantic_hinting		10600965	0					
ANR	10601134	Identifier	exc		10600965	0					
ANR	10601135	Identifier	pedantic_hinting		10600965	1					
ANR	10601136	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	6213:8:220747:220789	10600965	1	True				
ANR	10601137	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10600965	0		=			
ANR	10601138	PtrMemberAccess	exc -> error		10600965	0					
ANR	10601139	Identifier	exc		10600965	0					
ANR	10601140	Identifier	error		10600965	1					
ANR	10601141	CallExpression	FT_THROW ( Invalid_Reference )		10600965	1					
ANR	10601142	Callee	FT_THROW		10600965	0					
ANR	10601143	Identifier	FT_THROW		10600965	0					
ANR	10601144	ArgumentList	Invalid_Reference		10600965	1					
ANR	10601145	Argument	Invalid_Reference		10600965	0					
ANR	10601146	Identifier	Invalid_Reference		10600965	0					
ANR	10601147	GotoStatement	goto Fail ;	6214:6:220797:220806	10600965	1	True				
ANR	10601148	Identifier	Fail		10600965	0					
ANR	10601149	IfStatement	if ( ! cvtEntry )		10600965	12					
ANR	10601150	Condition	! cvtEntry	6217:9:220824:220832	10600965	0	True				
ANR	10601151	UnaryOperationExpression	! cvtEntry		10600965	0					
ANR	10601152	UnaryOperator	!		10600965	0					
ANR	10601153	Identifier	cvtEntry		10600965	1					
ANR	10601154	ExpressionStatement	cvt_dist = 0	6218:6:220842:220854	10600965	1	True				
ANR	10601155	AssignmentExpression	cvt_dist = 0		10600965	0		=			
ANR	10601156	Identifier	cvt_dist		10600965	0					
ANR	10601157	PrimaryExpression	0		10600965	1					
ANR	10601158	ElseStatement	else		10600965	0					
ANR	10601159	ExpressionStatement	"cvt_dist = exc -> func_read_cvt ( exc , cvtEntry - 1 )"	6220:6:220871:220921	10600965	0	True				
ANR	10601160	AssignmentExpression	"cvt_dist = exc -> func_read_cvt ( exc , cvtEntry - 1 )"		10600965	0		=			
ANR	10601161	Identifier	cvt_dist		10600965	0					
ANR	10601162	CallExpression	"exc -> func_read_cvt ( exc , cvtEntry - 1 )"		10600965	1					
ANR	10601163	Callee	exc -> func_read_cvt		10600965	0					
ANR	10601164	PtrMemberAccess	exc -> func_read_cvt		10600965	0					
ANR	10601165	Identifier	exc		10600965	0					
ANR	10601166	Identifier	func_read_cvt		10600965	1					
ANR	10601167	ArgumentList	exc		10600965	1					
ANR	10601168	Argument	exc		10600965	0					
ANR	10601169	Identifier	exc		10600965	0					
ANR	10601170	Argument	cvtEntry - 1		10600965	1					
ANR	10601171	AdditiveExpression	cvtEntry - 1		10600965	0		-			
ANR	10601172	Identifier	cvtEntry		10600965	0					
ANR	10601173	PrimaryExpression	1		10600965	1					
ANR	10601174	IfStatement	if ( FT_ABS ( cvt_dist - exc -> GS . single_width_value ) < exc -> GS . single_width_cutin )		10600965	13					
ANR	10601175	Condition	FT_ABS ( cvt_dist - exc -> GS . single_width_value ) < exc -> GS . single_width_cutin	6224:9:220962:221046	10600965	0	True				
ANR	10601176	RelationalExpression	FT_ABS ( cvt_dist - exc -> GS . single_width_value ) < exc -> GS . single_width_cutin		10600965	0		<			
ANR	10601177	CallExpression	FT_ABS ( cvt_dist - exc -> GS . single_width_value )		10600965	0					
ANR	10601178	Callee	FT_ABS		10600965	0					
ANR	10601179	Identifier	FT_ABS		10600965	0					
ANR	10601180	ArgumentList	cvt_dist - exc -> GS . single_width_value		10600965	1					
ANR	10601181	Argument	cvt_dist - exc -> GS . single_width_value		10600965	0					
ANR	10601182	AdditiveExpression	cvt_dist - exc -> GS . single_width_value		10600965	0		-			
ANR	10601183	Identifier	cvt_dist		10600965	0					
ANR	10601184	MemberAccess	exc -> GS . single_width_value		10600965	1					
ANR	10601185	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601186	Identifier	exc		10600965	0					
ANR	10601187	Identifier	GS		10600965	1					
ANR	10601188	Identifier	single_width_value		10600965	1					
ANR	10601189	MemberAccess	exc -> GS . single_width_cutin		10600965	1					
ANR	10601190	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601191	Identifier	exc		10600965	0					
ANR	10601192	Identifier	GS		10600965	1					
ANR	10601193	Identifier	single_width_cutin		10600965	1					
ANR	10601194	CompoundStatement		51:4:1635:1635	10600965	1					
ANR	10601195	IfStatement	if ( cvt_dist >= 0 )		10600965	0					
ANR	10601196	Condition	cvt_dist >= 0	6227:11:221067:221079	10600965	0	True				
ANR	10601197	RelationalExpression	cvt_dist >= 0		10600965	0		>=			
ANR	10601198	Identifier	cvt_dist		10600965	0					
ANR	10601199	PrimaryExpression	0		10600965	1					
ANR	10601200	ExpressionStatement	cvt_dist = exc -> GS . single_width_value	6228:8:221091:221129	10600965	1	True				
ANR	10601201	AssignmentExpression	cvt_dist = exc -> GS . single_width_value		10600965	0		=			
ANR	10601202	Identifier	cvt_dist		10600965	0					
ANR	10601203	MemberAccess	exc -> GS . single_width_value		10600965	1					
ANR	10601204	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601205	Identifier	exc		10600965	0					
ANR	10601206	Identifier	GS		10600965	1					
ANR	10601207	Identifier	single_width_value		10600965	1					
ANR	10601208	ElseStatement	else		10600965	0					
ANR	10601209	ExpressionStatement	cvt_dist = - exc -> GS . single_width_value	6230:8:221150:221188	10600965	0	True				
ANR	10601210	AssignmentExpression	cvt_dist = - exc -> GS . single_width_value		10600965	0		=			
ANR	10601211	Identifier	cvt_dist		10600965	0					
ANR	10601212	UnaryOperationExpression	- exc -> GS . single_width_value		10600965	1					
ANR	10601213	UnaryOperator	-		10600965	0					
ANR	10601214	MemberAccess	exc -> GS . single_width_value		10600965	1					
ANR	10601215	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601216	Identifier	exc		10600965	0					
ANR	10601217	Identifier	GS		10600965	1					
ANR	10601218	Identifier	single_width_value		10600965	1					
ANR	10601219	IfStatement	if ( exc -> GS . gep1 == 0 )		10600965	14					
ANR	10601220	Condition	exc -> GS . gep1 == 0	6235:9:221322:221338	10600965	0	True				
ANR	10601221	EqualityExpression	exc -> GS . gep1 == 0		10600965	0		==			
ANR	10601222	MemberAccess	exc -> GS . gep1		10600965	0					
ANR	10601223	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601224	Identifier	exc		10600965	0					
ANR	10601225	Identifier	GS		10600965	1					
ANR	10601226	Identifier	gep1		10600965	1					
ANR	10601227	PrimaryExpression	0		10600965	1					
ANR	10601228	CompoundStatement		61:4:1927:1927	10600965	1					
ANR	10601229	ExpressionStatement	"exc -> zp1 . org [ point ] . x = exc -> zp0 . org [ exc -> GS . rp0 ] . x + TT_MulFix14 ( cvt_dist , exc -> GS . freeVector . x )"	6237:6:221354:221526	10600965	0	True				
ANR	10601230	AssignmentExpression	"exc -> zp1 . org [ point ] . x = exc -> zp0 . org [ exc -> GS . rp0 ] . x + TT_MulFix14 ( cvt_dist , exc -> GS . freeVector . x )"		10600965	0		=			
ANR	10601231	MemberAccess	exc -> zp1 . org [ point ] . x		10600965	0					
ANR	10601232	ArrayIndexing	exc -> zp1 . org [ point ]		10600965	0					
ANR	10601233	MemberAccess	exc -> zp1 . org		10600965	0					
ANR	10601234	PtrMemberAccess	exc -> zp1		10600965	0					
ANR	10601235	Identifier	exc		10600965	0					
ANR	10601236	Identifier	zp1		10600965	1					
ANR	10601237	Identifier	org		10600965	1					
ANR	10601238	Identifier	point		10600965	1					
ANR	10601239	Identifier	x		10600965	1					
ANR	10601240	AdditiveExpression	"exc -> zp0 . org [ exc -> GS . rp0 ] . x + TT_MulFix14 ( cvt_dist , exc -> GS . freeVector . x )"		10600965	1		+			
ANR	10601241	MemberAccess	exc -> zp0 . org [ exc -> GS . rp0 ] . x		10600965	0					
ANR	10601242	ArrayIndexing	exc -> zp0 . org [ exc -> GS . rp0 ]		10600965	0					
ANR	10601243	MemberAccess	exc -> zp0 . org		10600965	0					
ANR	10601244	PtrMemberAccess	exc -> zp0		10600965	0					
ANR	10601245	Identifier	exc		10600965	0					
ANR	10601246	Identifier	zp0		10600965	1					
ANR	10601247	Identifier	org		10600965	1					
ANR	10601248	MemberAccess	exc -> GS . rp0		10600965	1					
ANR	10601249	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601250	Identifier	exc		10600965	0					
ANR	10601251	Identifier	GS		10600965	1					
ANR	10601252	Identifier	rp0		10600965	1					
ANR	10601253	Identifier	x		10600965	1					
ANR	10601254	CallExpression	"TT_MulFix14 ( cvt_dist , exc -> GS . freeVector . x )"		10600965	1					
ANR	10601255	Callee	TT_MulFix14		10600965	0					
ANR	10601256	Identifier	TT_MulFix14		10600965	0					
ANR	10601257	ArgumentList	cvt_dist		10600965	1					
ANR	10601258	Argument	cvt_dist		10600965	0					
ANR	10601259	Identifier	cvt_dist		10600965	0					
ANR	10601260	Argument	exc -> GS . freeVector . x		10600965	1					
ANR	10601261	MemberAccess	exc -> GS . freeVector . x		10600965	0					
ANR	10601262	MemberAccess	exc -> GS . freeVector		10600965	0					
ANR	10601263	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601264	Identifier	exc		10600965	0					
ANR	10601265	Identifier	GS		10600965	1					
ANR	10601266	Identifier	freeVector		10600965	1					
ANR	10601267	Identifier	x		10600965	1					
ANR	10601268	ExpressionStatement	"exc -> zp1 . org [ point ] . y = exc -> zp0 . org [ exc -> GS . rp0 ] . y + TT_MulFix14 ( cvt_dist , exc -> GS . freeVector . y )"	6240:6:221534:221706	10600965	1	True				
ANR	10601269	AssignmentExpression	"exc -> zp1 . org [ point ] . y = exc -> zp0 . org [ exc -> GS . rp0 ] . y + TT_MulFix14 ( cvt_dist , exc -> GS . freeVector . y )"		10600965	0		=			
ANR	10601270	MemberAccess	exc -> zp1 . org [ point ] . y		10600965	0					
ANR	10601271	ArrayIndexing	exc -> zp1 . org [ point ]		10600965	0					
ANR	10601272	MemberAccess	exc -> zp1 . org		10600965	0					
ANR	10601273	PtrMemberAccess	exc -> zp1		10600965	0					
ANR	10601274	Identifier	exc		10600965	0					
ANR	10601275	Identifier	zp1		10600965	1					
ANR	10601276	Identifier	org		10600965	1					
ANR	10601277	Identifier	point		10600965	1					
ANR	10601278	Identifier	y		10600965	1					
ANR	10601279	AdditiveExpression	"exc -> zp0 . org [ exc -> GS . rp0 ] . y + TT_MulFix14 ( cvt_dist , exc -> GS . freeVector . y )"		10600965	1		+			
ANR	10601280	MemberAccess	exc -> zp0 . org [ exc -> GS . rp0 ] . y		10600965	0					
ANR	10601281	ArrayIndexing	exc -> zp0 . org [ exc -> GS . rp0 ]		10600965	0					
ANR	10601282	MemberAccess	exc -> zp0 . org		10600965	0					
ANR	10601283	PtrMemberAccess	exc -> zp0		10600965	0					
ANR	10601284	Identifier	exc		10600965	0					
ANR	10601285	Identifier	zp0		10600965	1					
ANR	10601286	Identifier	org		10600965	1					
ANR	10601287	MemberAccess	exc -> GS . rp0		10600965	1					
ANR	10601288	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601289	Identifier	exc		10600965	0					
ANR	10601290	Identifier	GS		10600965	1					
ANR	10601291	Identifier	rp0		10600965	1					
ANR	10601292	Identifier	y		10600965	1					
ANR	10601293	CallExpression	"TT_MulFix14 ( cvt_dist , exc -> GS . freeVector . y )"		10600965	1					
ANR	10601294	Callee	TT_MulFix14		10600965	0					
ANR	10601295	Identifier	TT_MulFix14		10600965	0					
ANR	10601296	ArgumentList	cvt_dist		10600965	1					
ANR	10601297	Argument	cvt_dist		10600965	0					
ANR	10601298	Identifier	cvt_dist		10600965	0					
ANR	10601299	Argument	exc -> GS . freeVector . y		10600965	1					
ANR	10601300	MemberAccess	exc -> GS . freeVector . y		10600965	0					
ANR	10601301	MemberAccess	exc -> GS . freeVector		10600965	0					
ANR	10601302	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601303	Identifier	exc		10600965	0					
ANR	10601304	Identifier	GS		10600965	1					
ANR	10601305	Identifier	freeVector		10600965	1					
ANR	10601306	Identifier	y		10600965	1					
ANR	10601307	ExpressionStatement	exc -> zp1 . cur [ point ] = exc -> zp1 . org [ point ]	6243:6:221714:221757	10600965	2	True				
ANR	10601308	AssignmentExpression	exc -> zp1 . cur [ point ] = exc -> zp1 . org [ point ]		10600965	0		=			
ANR	10601309	ArrayIndexing	exc -> zp1 . cur [ point ]		10600965	0					
ANR	10601310	MemberAccess	exc -> zp1 . cur		10600965	0					
ANR	10601311	PtrMemberAccess	exc -> zp1		10600965	0					
ANR	10601312	Identifier	exc		10600965	0					
ANR	10601313	Identifier	zp1		10600965	1					
ANR	10601314	Identifier	cur		10600965	1					
ANR	10601315	Identifier	point		10600965	1					
ANR	10601316	ArrayIndexing	exc -> zp1 . org [ point ]		10600965	1					
ANR	10601317	MemberAccess	exc -> zp1 . org		10600965	0					
ANR	10601318	PtrMemberAccess	exc -> zp1		10600965	0					
ANR	10601319	Identifier	exc		10600965	0					
ANR	10601320	Identifier	zp1		10600965	1					
ANR	10601321	Identifier	org		10600965	1					
ANR	10601322	Identifier	point		10600965	1					
ANR	10601323	ExpressionStatement	"org_dist = DUALPROJ ( & exc -> zp1 . org [ point ] , & exc -> zp0 . org [ exc -> GS . rp0 ] )"	6246:4:221770:221841	10600965	15	True				
ANR	10601324	AssignmentExpression	"org_dist = DUALPROJ ( & exc -> zp1 . org [ point ] , & exc -> zp0 . org [ exc -> GS . rp0 ] )"		10600965	0		=			
ANR	10601325	Identifier	org_dist		10600965	0					
ANR	10601326	CallExpression	"DUALPROJ ( & exc -> zp1 . org [ point ] , & exc -> zp0 . org [ exc -> GS . rp0 ] )"		10600965	1					
ANR	10601327	Callee	DUALPROJ		10600965	0					
ANR	10601328	Identifier	DUALPROJ		10600965	0					
ANR	10601329	ArgumentList	& exc -> zp1 . org [ point ]		10600965	1					
ANR	10601330	Argument	& exc -> zp1 . org [ point ]		10600965	0					
ANR	10601331	UnaryOperationExpression	& exc -> zp1 . org [ point ]		10600965	0					
ANR	10601332	UnaryOperator	&		10600965	0					
ANR	10601333	ArrayIndexing	exc -> zp1 . org [ point ]		10600965	1					
ANR	10601334	MemberAccess	exc -> zp1 . org		10600965	0					
ANR	10601335	PtrMemberAccess	exc -> zp1		10600965	0					
ANR	10601336	Identifier	exc		10600965	0					
ANR	10601337	Identifier	zp1		10600965	1					
ANR	10601338	Identifier	org		10600965	1					
ANR	10601339	Identifier	point		10600965	1					
ANR	10601340	Argument	& exc -> zp0 . org [ exc -> GS . rp0 ]		10600965	1					
ANR	10601341	UnaryOperationExpression	& exc -> zp0 . org [ exc -> GS . rp0 ]		10600965	0					
ANR	10601342	UnaryOperator	&		10600965	0					
ANR	10601343	ArrayIndexing	exc -> zp0 . org [ exc -> GS . rp0 ]		10600965	1					
ANR	10601344	MemberAccess	exc -> zp0 . org		10600965	0					
ANR	10601345	PtrMemberAccess	exc -> zp0		10600965	0					
ANR	10601346	Identifier	exc		10600965	0					
ANR	10601347	Identifier	zp0		10600965	1					
ANR	10601348	Identifier	org		10600965	1					
ANR	10601349	MemberAccess	exc -> GS . rp0		10600965	1					
ANR	10601350	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601351	Identifier	exc		10600965	0					
ANR	10601352	Identifier	GS		10600965	1					
ANR	10601353	Identifier	rp0		10600965	1					
ANR	10601354	ExpressionStatement	"cur_dist = PROJECT ( & exc -> zp1 . cur [ point ] , & exc -> zp0 . cur [ exc -> GS . rp0 ] )"	6247:4:221847:221918	10600965	16	True				
ANR	10601355	AssignmentExpression	"cur_dist = PROJECT ( & exc -> zp1 . cur [ point ] , & exc -> zp0 . cur [ exc -> GS . rp0 ] )"		10600965	0		=			
ANR	10601356	Identifier	cur_dist		10600965	0					
ANR	10601357	CallExpression	"PROJECT ( & exc -> zp1 . cur [ point ] , & exc -> zp0 . cur [ exc -> GS . rp0 ] )"		10600965	1					
ANR	10601358	Callee	PROJECT		10600965	0					
ANR	10601359	Identifier	PROJECT		10600965	0					
ANR	10601360	ArgumentList	& exc -> zp1 . cur [ point ]		10600965	1					
ANR	10601361	Argument	& exc -> zp1 . cur [ point ]		10600965	0					
ANR	10601362	UnaryOperationExpression	& exc -> zp1 . cur [ point ]		10600965	0					
ANR	10601363	UnaryOperator	&		10600965	0					
ANR	10601364	ArrayIndexing	exc -> zp1 . cur [ point ]		10600965	1					
ANR	10601365	MemberAccess	exc -> zp1 . cur		10600965	0					
ANR	10601366	PtrMemberAccess	exc -> zp1		10600965	0					
ANR	10601367	Identifier	exc		10600965	0					
ANR	10601368	Identifier	zp1		10600965	1					
ANR	10601369	Identifier	cur		10600965	1					
ANR	10601370	Identifier	point		10600965	1					
ANR	10601371	Argument	& exc -> zp0 . cur [ exc -> GS . rp0 ]		10600965	1					
ANR	10601372	UnaryOperationExpression	& exc -> zp0 . cur [ exc -> GS . rp0 ]		10600965	0					
ANR	10601373	UnaryOperator	&		10600965	0					
ANR	10601374	ArrayIndexing	exc -> zp0 . cur [ exc -> GS . rp0 ]		10600965	1					
ANR	10601375	MemberAccess	exc -> zp0 . cur		10600965	0					
ANR	10601376	PtrMemberAccess	exc -> zp0		10600965	0					
ANR	10601377	Identifier	exc		10600965	0					
ANR	10601378	Identifier	zp0		10600965	1					
ANR	10601379	Identifier	cur		10600965	1					
ANR	10601380	MemberAccess	exc -> GS . rp0		10600965	1					
ANR	10601381	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601382	Identifier	exc		10600965	0					
ANR	10601383	Identifier	GS		10600965	1					
ANR	10601384	Identifier	rp0		10600965	1					
ANR	10601385	IfStatement	if ( exc -> GS . auto_flip )		10600965	17					
ANR	10601386	Condition	exc -> GS . auto_flip	6251:9:221956:221972	10600965	0	True				
ANR	10601387	MemberAccess	exc -> GS . auto_flip		10600965	0					
ANR	10601388	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601389	Identifier	exc		10600965	0					
ANR	10601390	Identifier	GS		10600965	1					
ANR	10601391	Identifier	auto_flip		10600965	1					
ANR	10601392	CompoundStatement		77:4:2561:2561	10600965	1					
ANR	10601393	IfStatement	if ( ( org_dist ^ cvt_dist ) < 0 )		10600965	0					
ANR	10601394	Condition	( org_dist ^ cvt_dist ) < 0	6253:11:221993:222019	10600965	0	True				
ANR	10601395	RelationalExpression	( org_dist ^ cvt_dist ) < 0		10600965	0		<			
ANR	10601396	ExclusiveOrExpression	org_dist ^ cvt_dist		10600965	0		^			
ANR	10601397	Identifier	org_dist		10600965	0					
ANR	10601398	Identifier	cvt_dist		10600965	1					
ANR	10601399	PrimaryExpression	0		10600965	1					
ANR	10601400	ExpressionStatement	cvt_dist = - cvt_dist	6254:8:222031:222051	10600965	1	True				
ANR	10601401	AssignmentExpression	cvt_dist = - cvt_dist		10600965	0		=			
ANR	10601402	Identifier	cvt_dist		10600965	0					
ANR	10601403	UnaryOperationExpression	- cvt_dist		10600965	1					
ANR	10601404	UnaryOperator	-		10600965	0					
ANR	10601405	Identifier	cvt_dist		10600965	1					
ANR	10601406	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> GS . freeVector . y != 0 && ( exc -> sph_tweak_flags & SPH_TWEAK_TIMES_NEW_ROMAN_HACK ) )		10600965	18					
ANR	10601407	Condition	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> GS . freeVector . y != 0 && ( exc -> sph_tweak_flags & SPH_TWEAK_TIMES_NEW_ROMAN_HACK )	6258:9:222115:222381	10600965	0	True				
ANR	10601408	AndExpression	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> GS . freeVector . y != 0 && ( exc -> sph_tweak_flags & SPH_TWEAK_TIMES_NEW_ROMAN_HACK )		10600965	0		&&			
ANR	10601409	Identifier	SUBPIXEL_HINTING_INFINALITY		10600965	0					
ANR	10601410	AndExpression	exc -> ignore_x_mode && exc -> GS . freeVector . y != 0 && ( exc -> sph_tweak_flags & SPH_TWEAK_TIMES_NEW_ROMAN_HACK )		10600965	1		&&			
ANR	10601411	PtrMemberAccess	exc -> ignore_x_mode		10600965	0					
ANR	10601412	Identifier	exc		10600965	0					
ANR	10601413	Identifier	ignore_x_mode		10600965	1					
ANR	10601414	AndExpression	exc -> GS . freeVector . y != 0 && ( exc -> sph_tweak_flags & SPH_TWEAK_TIMES_NEW_ROMAN_HACK )		10600965	1		&&			
ANR	10601415	EqualityExpression	exc -> GS . freeVector . y != 0		10600965	0		!=			
ANR	10601416	MemberAccess	exc -> GS . freeVector . y		10600965	0					
ANR	10601417	MemberAccess	exc -> GS . freeVector		10600965	0					
ANR	10601418	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601419	Identifier	exc		10600965	0					
ANR	10601420	Identifier	GS		10600965	1					
ANR	10601421	Identifier	freeVector		10600965	1					
ANR	10601422	Identifier	y		10600965	1					
ANR	10601423	PrimaryExpression	0		10600965	1					
ANR	10601424	BitAndExpression	exc -> sph_tweak_flags & SPH_TWEAK_TIMES_NEW_ROMAN_HACK		10600965	1		&			
ANR	10601425	PtrMemberAccess	exc -> sph_tweak_flags		10600965	0					
ANR	10601426	Identifier	exc		10600965	0					
ANR	10601427	Identifier	sph_tweak_flags		10600965	1					
ANR	10601428	Identifier	SPH_TWEAK_TIMES_NEW_ROMAN_HACK		10600965	1					
ANR	10601429	CompoundStatement		87:4:2970:2970	10600965	1					
ANR	10601430	IfStatement	if ( cur_dist < - 64 )		10600965	0					
ANR	10601431	Condition	cur_dist < - 64	6263:11:222402:222415	10600965	0	True				
ANR	10601432	RelationalExpression	cur_dist < - 64		10600965	0		<			
ANR	10601433	Identifier	cur_dist		10600965	0					
ANR	10601434	UnaryOperationExpression	- 64		10600965	1					
ANR	10601435	UnaryOperator	-		10600965	0					
ANR	10601436	PrimaryExpression	64		10600965	1					
ANR	10601437	ExpressionStatement	cvt_dist -= 16	6264:8:222427:222441	10600965	1	True				
ANR	10601438	AssignmentExpression	cvt_dist -= 16		10600965	0		-=			
ANR	10601439	Identifier	cvt_dist		10600965	0					
ANR	10601440	PrimaryExpression	16		10600965	1					
ANR	10601441	ElseStatement	else		10600965	0					
ANR	10601442	IfStatement	if ( cur_dist > 64 && cur_dist < 84 )		10600965	0					
ANR	10601443	Condition	cur_dist > 64 && cur_dist < 84	6265:16:222459:222488	10600965	0	True				
ANR	10601444	AndExpression	cur_dist > 64 && cur_dist < 84		10600965	0		&&			
ANR	10601445	RelationalExpression	cur_dist > 64		10600965	0		>			
ANR	10601446	Identifier	cur_dist		10600965	0					
ANR	10601447	PrimaryExpression	64		10600965	1					
ANR	10601448	RelationalExpression	cur_dist < 84		10600965	1		<			
ANR	10601449	Identifier	cur_dist		10600965	0					
ANR	10601450	PrimaryExpression	84		10600965	1					
ANR	10601451	ExpressionStatement	cvt_dist += 32	6266:8:222500:222514	10600965	1	True				
ANR	10601452	AssignmentExpression	cvt_dist += 32		10600965	0		+=			
ANR	10601453	Identifier	cvt_dist		10600965	0					
ANR	10601454	PrimaryExpression	32		10600965	1					
ANR	10601455	IfStatement	if ( ( exc -> opcode & 4 ) != 0 )		10600965	19					
ANR	10601456	Condition	( exc -> opcode & 4 ) != 0	6272:9:222626:222649	10600965	0	True				
ANR	10601457	EqualityExpression	( exc -> opcode & 4 ) != 0		10600965	0		!=			
ANR	10601458	BitAndExpression	exc -> opcode & 4		10600965	0		&			
ANR	10601459	PtrMemberAccess	exc -> opcode		10600965	0					
ANR	10601460	Identifier	exc		10600965	0					
ANR	10601461	Identifier	opcode		10600965	1					
ANR	10601462	PrimaryExpression	4		10600965	1					
ANR	10601463	PrimaryExpression	0		10600965	1					
ANR	10601464	CompoundStatement		98:4:3238:3238	10600965	1					
ANR	10601465	IfStatement	if ( exc -> GS . gep0 == exc -> GS . gep1 )		10600965	0					
ANR	10601466	Condition	exc -> GS . gep0 == exc -> GS . gep1	6277:11:222819:222846	10600965	0	True				
ANR	10601467	EqualityExpression	exc -> GS . gep0 == exc -> GS . gep1		10600965	0		==			
ANR	10601468	MemberAccess	exc -> GS . gep0		10600965	0					
ANR	10601469	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601470	Identifier	exc		10600965	0					
ANR	10601471	Identifier	GS		10600965	1					
ANR	10601472	Identifier	gep0		10600965	1					
ANR	10601473	MemberAccess	exc -> GS . gep1		10600965	1					
ANR	10601474	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601475	Identifier	exc		10600965	0					
ANR	10601476	Identifier	GS		10600965	1					
ANR	10601477	Identifier	gep1		10600965	1					
ANR	10601478	CompoundStatement		104:8:3447:3464	10600965	1					
ANR	10601479	IdentifierDeclStatement	FT_F26Dot6 delta ;	6279:8:222866:222883	10600965	0	True				
ANR	10601480	IdentifierDecl	delta		10600965	0					
ANR	10601481	IdentifierDeclType	FT_F26Dot6		10600965	0					
ANR	10601482	Identifier	delta		10600965	1					
ANR	10601483	ExpressionStatement	"delta = SUB_LONG ( cvt_dist , org_dist )"	6294:8:223699:223737	10600965	1	True				
ANR	10601484	AssignmentExpression	"delta = SUB_LONG ( cvt_dist , org_dist )"		10600965	0		=			
ANR	10601485	Identifier	delta		10600965	0					
ANR	10601486	CallExpression	"SUB_LONG ( cvt_dist , org_dist )"		10600965	1					
ANR	10601487	Callee	SUB_LONG		10600965	0					
ANR	10601488	Identifier	SUB_LONG		10600965	0					
ANR	10601489	ArgumentList	cvt_dist		10600965	1					
ANR	10601490	Argument	cvt_dist		10600965	0					
ANR	10601491	Identifier	cvt_dist		10600965	0					
ANR	10601492	Argument	org_dist		10600965	1					
ANR	10601493	Identifier	org_dist		10600965	0					
ANR	10601494	IfStatement	if ( delta < 0 )		10600965	2					
ANR	10601495	Condition	delta < 0	6295:13:223752:223760	10600965	0	True				
ANR	10601496	RelationalExpression	delta < 0		10600965	0		<			
ANR	10601497	Identifier	delta		10600965	0					
ANR	10601498	PrimaryExpression	0		10600965	1					
ANR	10601499	ExpressionStatement	delta = NEG_LONG ( delta )	6296:10:223774:223799	10600965	1	True				
ANR	10601500	AssignmentExpression	delta = NEG_LONG ( delta )		10600965	0		=			
ANR	10601501	Identifier	delta		10600965	0					
ANR	10601502	CallExpression	NEG_LONG ( delta )		10600965	1					
ANR	10601503	Callee	NEG_LONG		10600965	0					
ANR	10601504	Identifier	NEG_LONG		10600965	0					
ANR	10601505	ArgumentList	delta		10600965	1					
ANR	10601506	Argument	delta		10600965	0					
ANR	10601507	Identifier	delta		10600965	0					
ANR	10601508	IfStatement	if ( delta > control_value_cutin )		10600965	3					
ANR	10601509	Condition	delta > control_value_cutin	6298:13:223815:223841	10600965	0	True				
ANR	10601510	RelationalExpression	delta > control_value_cutin		10600965	0		>			
ANR	10601511	Identifier	delta		10600965	0					
ANR	10601512	Identifier	control_value_cutin		10600965	1					
ANR	10601513	ExpressionStatement	cvt_dist = org_dist	6299:10:223855:223874	10600965	1	True				
ANR	10601514	AssignmentExpression	cvt_dist = org_dist		10600965	0		=			
ANR	10601515	Identifier	cvt_dist		10600965	0					
ANR	10601516	Identifier	org_dist		10600965	1					
ANR	10601517	ExpressionStatement	"distance = exc -> func_round ( exc , cvt_dist , exc -> tt_metrics . compensations [ exc -> opcode & 3 ] )"	6302:6:223891:224039	10600965	1	True				
ANR	10601518	AssignmentExpression	"distance = exc -> func_round ( exc , cvt_dist , exc -> tt_metrics . compensations [ exc -> opcode & 3 ] )"		10600965	0		=			
ANR	10601519	Identifier	distance		10600965	0					
ANR	10601520	CallExpression	"exc -> func_round ( exc , cvt_dist , exc -> tt_metrics . compensations [ exc -> opcode & 3 ] )"		10600965	1					
ANR	10601521	Callee	exc -> func_round		10600965	0					
ANR	10601522	PtrMemberAccess	exc -> func_round		10600965	0					
ANR	10601523	Identifier	exc		10600965	0					
ANR	10601524	Identifier	func_round		10600965	1					
ANR	10601525	ArgumentList	exc		10600965	1					
ANR	10601526	Argument	exc		10600965	0					
ANR	10601527	Identifier	exc		10600965	0					
ANR	10601528	Argument	cvt_dist		10600965	1					
ANR	10601529	Identifier	cvt_dist		10600965	0					
ANR	10601530	Argument	exc -> tt_metrics . compensations [ exc -> opcode & 3 ]		10600965	2					
ANR	10601531	ArrayIndexing	exc -> tt_metrics . compensations [ exc -> opcode & 3 ]		10600965	0					
ANR	10601532	MemberAccess	exc -> tt_metrics . compensations		10600965	0					
ANR	10601533	PtrMemberAccess	exc -> tt_metrics		10600965	0					
ANR	10601534	Identifier	exc		10600965	0					
ANR	10601535	Identifier	tt_metrics		10600965	1					
ANR	10601536	Identifier	compensations		10600965	1					
ANR	10601537	BitAndExpression	exc -> opcode & 3		10600965	1		&			
ANR	10601538	PtrMemberAccess	exc -> opcode		10600965	0					
ANR	10601539	Identifier	exc		10600965	0					
ANR	10601540	Identifier	opcode		10600965	1					
ANR	10601541	PrimaryExpression	3		10600965	1					
ANR	10601542	ElseStatement	else		10600965	0					
ANR	10601543	CompoundStatement		133:4:4641:4641	10600965	0					
ANR	10601544	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> GS . gep0 == exc -> GS . gep1 )		10600965	0					
ANR	10601545	Condition	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> GS . gep0 == exc -> GS . gep1	6312:11:224169:224282	10600965	0	True				
ANR	10601546	AndExpression	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> GS . gep0 == exc -> GS . gep1		10600965	0		&&			
ANR	10601547	Identifier	SUBPIXEL_HINTING_INFINALITY		10600965	0					
ANR	10601548	AndExpression	exc -> ignore_x_mode && exc -> GS . gep0 == exc -> GS . gep1		10600965	1		&&			
ANR	10601549	PtrMemberAccess	exc -> ignore_x_mode		10600965	0					
ANR	10601550	Identifier	exc		10600965	0					
ANR	10601551	Identifier	ignore_x_mode		10600965	1					
ANR	10601552	EqualityExpression	exc -> GS . gep0 == exc -> GS . gep1		10600965	1		==			
ANR	10601553	MemberAccess	exc -> GS . gep0		10600965	0					
ANR	10601554	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601555	Identifier	exc		10600965	0					
ANR	10601556	Identifier	GS		10600965	1					
ANR	10601557	Identifier	gep0		10600965	1					
ANR	10601558	MemberAccess	exc -> GS . gep1		10600965	1					
ANR	10601559	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601560	Identifier	exc		10600965	0					
ANR	10601561	Identifier	GS		10600965	1					
ANR	10601562	Identifier	gep1		10600965	1					
ANR	10601563	CompoundStatement		141:8:4883:4900	10600965	1					
ANR	10601564	IdentifierDeclStatement	FT_F26Dot6 delta ;	6316:8:224302:224319	10600965	0	True				
ANR	10601565	IdentifierDecl	delta		10600965	0					
ANR	10601566	IdentifierDeclType	FT_F26Dot6		10600965	0					
ANR	10601567	Identifier	delta		10600965	1					
ANR	10601568	ExpressionStatement	"delta = SUB_LONG ( cvt_dist , org_dist )"	6319:8:224331:224369	10600965	1	True				
ANR	10601569	AssignmentExpression	"delta = SUB_LONG ( cvt_dist , org_dist )"		10600965	0		=			
ANR	10601570	Identifier	delta		10600965	0					
ANR	10601571	CallExpression	"SUB_LONG ( cvt_dist , org_dist )"		10600965	1					
ANR	10601572	Callee	SUB_LONG		10600965	0					
ANR	10601573	Identifier	SUB_LONG		10600965	0					
ANR	10601574	ArgumentList	cvt_dist		10600965	1					
ANR	10601575	Argument	cvt_dist		10600965	0					
ANR	10601576	Identifier	cvt_dist		10600965	0					
ANR	10601577	Argument	org_dist		10600965	1					
ANR	10601578	Identifier	org_dist		10600965	0					
ANR	10601579	IfStatement	if ( delta < 0 )		10600965	2					
ANR	10601580	Condition	delta < 0	6320:13:224384:224392	10600965	0	True				
ANR	10601581	RelationalExpression	delta < 0		10600965	0		<			
ANR	10601582	Identifier	delta		10600965	0					
ANR	10601583	PrimaryExpression	0		10600965	1					
ANR	10601584	ExpressionStatement	delta = NEG_LONG ( delta )	6321:10:224406:224431	10600965	1	True				
ANR	10601585	AssignmentExpression	delta = NEG_LONG ( delta )		10600965	0		=			
ANR	10601586	Identifier	delta		10600965	0					
ANR	10601587	CallExpression	NEG_LONG ( delta )		10600965	1					
ANR	10601588	Callee	NEG_LONG		10600965	0					
ANR	10601589	Identifier	NEG_LONG		10600965	0					
ANR	10601590	ArgumentList	delta		10600965	1					
ANR	10601591	Argument	delta		10600965	0					
ANR	10601592	Identifier	delta		10600965	0					
ANR	10601593	IfStatement	if ( delta > control_value_cutin )		10600965	3					
ANR	10601594	Condition	delta > control_value_cutin	6323:13:224447:224473	10600965	0	True				
ANR	10601595	RelationalExpression	delta > control_value_cutin		10600965	0		>			
ANR	10601596	Identifier	delta		10600965	0					
ANR	10601597	Identifier	control_value_cutin		10600965	1					
ANR	10601598	ExpressionStatement	cvt_dist = org_dist	6324:10:224487:224506	10600965	1	True				
ANR	10601599	AssignmentExpression	cvt_dist = org_dist		10600965	0		=			
ANR	10601600	Identifier	cvt_dist		10600965	0					
ANR	10601601	Identifier	org_dist		10600965	1					
ANR	10601602	ExpressionStatement	"distance = Round_None ( exc , cvt_dist , exc -> tt_metrics . compensations [ exc -> opcode & 3 ] )"	6328:6:224575:224718	10600965	1	True				
ANR	10601603	AssignmentExpression	"distance = Round_None ( exc , cvt_dist , exc -> tt_metrics . compensations [ exc -> opcode & 3 ] )"		10600965	0		=			
ANR	10601604	Identifier	distance		10600965	0					
ANR	10601605	CallExpression	"Round_None ( exc , cvt_dist , exc -> tt_metrics . compensations [ exc -> opcode & 3 ] )"		10600965	1					
ANR	10601606	Callee	Round_None		10600965	0					
ANR	10601607	Identifier	Round_None		10600965	0					
ANR	10601608	ArgumentList	exc		10600965	1					
ANR	10601609	Argument	exc		10600965	0					
ANR	10601610	Identifier	exc		10600965	0					
ANR	10601611	Argument	cvt_dist		10600965	1					
ANR	10601612	Identifier	cvt_dist		10600965	0					
ANR	10601613	Argument	exc -> tt_metrics . compensations [ exc -> opcode & 3 ]		10600965	2					
ANR	10601614	ArrayIndexing	exc -> tt_metrics . compensations [ exc -> opcode & 3 ]		10600965	0					
ANR	10601615	MemberAccess	exc -> tt_metrics . compensations		10600965	0					
ANR	10601616	PtrMemberAccess	exc -> tt_metrics		10600965	0					
ANR	10601617	Identifier	exc		10600965	0					
ANR	10601618	Identifier	tt_metrics		10600965	1					
ANR	10601619	Identifier	compensations		10600965	1					
ANR	10601620	BitAndExpression	exc -> opcode & 3		10600965	1		&			
ANR	10601621	PtrMemberAccess	exc -> opcode		10600965	0					
ANR	10601622	Identifier	exc		10600965	0					
ANR	10601623	Identifier	opcode		10600965	1					
ANR	10601624	PrimaryExpression	3		10600965	1					
ANR	10601625	IfStatement	if ( ( exc -> opcode & 8 ) != 0 )		10600965	20					
ANR	10601626	Condition	( exc -> opcode & 8 ) != 0	6336:9:224769:224792	10600965	0	True				
ANR	10601627	EqualityExpression	( exc -> opcode & 8 ) != 0		10600965	0		!=			
ANR	10601628	BitAndExpression	exc -> opcode & 8		10600965	0		&			
ANR	10601629	PtrMemberAccess	exc -> opcode		10600965	0					
ANR	10601630	Identifier	exc		10600965	0					
ANR	10601631	Identifier	opcode		10600965	1					
ANR	10601632	PrimaryExpression	8		10600965	1					
ANR	10601633	PrimaryExpression	0		10600965	1					
ANR	10601634	CompoundStatement		162:4:5381:5381	10600965	1					
ANR	10601635	IfStatement	if ( org_dist >= 0 )		10600965	0					
ANR	10601636	Condition	org_dist >= 0	6338:11:224813:224825	10600965	0	True				
ANR	10601637	RelationalExpression	org_dist >= 0		10600965	0		>=			
ANR	10601638	Identifier	org_dist		10600965	0					
ANR	10601639	PrimaryExpression	0		10600965	1					
ANR	10601640	CompoundStatement		164:6:5416:5416	10600965	1					
ANR	10601641	IfStatement	if ( distance < minimum_distance )		10600965	0					
ANR	10601642	Condition	distance < minimum_distance	6340:13:224850:224876	10600965	0	True				
ANR	10601643	RelationalExpression	distance < minimum_distance		10600965	0		<			
ANR	10601644	Identifier	distance		10600965	0					
ANR	10601645	Identifier	minimum_distance		10600965	1					
ANR	10601646	ExpressionStatement	distance = minimum_distance	6341:10:224890:224917	10600965	1	True				
ANR	10601647	AssignmentExpression	distance = minimum_distance		10600965	0		=			
ANR	10601648	Identifier	distance		10600965	0					
ANR	10601649	Identifier	minimum_distance		10600965	1					
ANR	10601650	ElseStatement	else		10600965	0					
ANR	10601651	CompoundStatement		169:6:5525:5525	10600965	0					
ANR	10601652	IfStatement	if ( distance > NEG_LONG ( minimum_distance ) )		10600965	0					
ANR	10601653	Condition	distance > NEG_LONG ( minimum_distance )	6345:13:224959:224997	10600965	0	True				
ANR	10601654	RelationalExpression	distance > NEG_LONG ( minimum_distance )		10600965	0		>			
ANR	10601655	Identifier	distance		10600965	0					
ANR	10601656	CallExpression	NEG_LONG ( minimum_distance )		10600965	1					
ANR	10601657	Callee	NEG_LONG		10600965	0					
ANR	10601658	Identifier	NEG_LONG		10600965	0					
ANR	10601659	ArgumentList	minimum_distance		10600965	1					
ANR	10601660	Argument	minimum_distance		10600965	0					
ANR	10601661	Identifier	minimum_distance		10600965	0					
ANR	10601662	ExpressionStatement	distance = NEG_LONG ( minimum_distance )	6346:10:225011:225050	10600965	1	True				
ANR	10601663	AssignmentExpression	distance = NEG_LONG ( minimum_distance )		10600965	0		=			
ANR	10601664	Identifier	distance		10600965	0					
ANR	10601665	CallExpression	NEG_LONG ( minimum_distance )		10600965	1					
ANR	10601666	Callee	NEG_LONG		10600965	0					
ANR	10601667	Identifier	NEG_LONG		10600965	0					
ANR	10601668	ArgumentList	minimum_distance		10600965	1					
ANR	10601669	Argument	minimum_distance		10600965	0					
ANR	10601670	Identifier	minimum_distance		10600965	0					
ANR	10601671	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY )		10600965	21					
ANR	10601672	Condition	SUBPIXEL_HINTING_INFINALITY	6351:9:225122:225148	10600965	0	True				
ANR	10601673	Identifier	SUBPIXEL_HINTING_INFINALITY		10600965	0					
ANR	10601674	CompoundStatement		177:4:5737:5737	10600965	1					
ANR	10601675	ExpressionStatement	B1 = exc -> zp1 . cur [ point ] . y	6353:6:225164:225190	10600965	0	True				
ANR	10601676	AssignmentExpression	B1 = exc -> zp1 . cur [ point ] . y		10600965	0		=			
ANR	10601677	Identifier	B1		10600965	0					
ANR	10601678	MemberAccess	exc -> zp1 . cur [ point ] . y		10600965	1					
ANR	10601679	ArrayIndexing	exc -> zp1 . cur [ point ]		10600965	0					
ANR	10601680	MemberAccess	exc -> zp1 . cur		10600965	0					
ANR	10601681	PtrMemberAccess	exc -> zp1		10600965	0					
ANR	10601682	Identifier	exc		10600965	0					
ANR	10601683	Identifier	zp1		10600965	1					
ANR	10601684	Identifier	cur		10600965	1					
ANR	10601685	Identifier	point		10600965	1					
ANR	10601686	Identifier	y		10600965	1					
ANR	10601687	IfStatement	if ( exc -> ignore_x_mode && exc -> GS . freeVector . y != 0 && ( exc -> sph_tweak_flags & SPH_TWEAK_ROUND_NONPIXEL_Y_MOVES ) )		10600965	1					
ANR	10601688	Condition	exc -> ignore_x_mode && exc -> GS . freeVector . y != 0 && ( exc -> sph_tweak_flags & SPH_TWEAK_ROUND_NONPIXEL_Y_MOVES )	6356:11:225241:225447	10600965	0	True				
ANR	10601689	AndExpression	exc -> ignore_x_mode && exc -> GS . freeVector . y != 0 && ( exc -> sph_tweak_flags & SPH_TWEAK_ROUND_NONPIXEL_Y_MOVES )		10600965	0		&&			
ANR	10601690	PtrMemberAccess	exc -> ignore_x_mode		10600965	0					
ANR	10601691	Identifier	exc		10600965	0					
ANR	10601692	Identifier	ignore_x_mode		10600965	1					
ANR	10601693	AndExpression	exc -> GS . freeVector . y != 0 && ( exc -> sph_tweak_flags & SPH_TWEAK_ROUND_NONPIXEL_Y_MOVES )		10600965	1		&&			
ANR	10601694	EqualityExpression	exc -> GS . freeVector . y != 0		10600965	0		!=			
ANR	10601695	MemberAccess	exc -> GS . freeVector . y		10600965	0					
ANR	10601696	MemberAccess	exc -> GS . freeVector		10600965	0					
ANR	10601697	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601698	Identifier	exc		10600965	0					
ANR	10601699	Identifier	GS		10600965	1					
ANR	10601700	Identifier	freeVector		10600965	1					
ANR	10601701	Identifier	y		10600965	1					
ANR	10601702	PrimaryExpression	0		10600965	1					
ANR	10601703	BitAndExpression	exc -> sph_tweak_flags & SPH_TWEAK_ROUND_NONPIXEL_Y_MOVES		10600965	1		&			
ANR	10601704	PtrMemberAccess	exc -> sph_tweak_flags		10600965	0					
ANR	10601705	Identifier	exc		10600965	0					
ANR	10601706	Identifier	sph_tweak_flags		10600965	1					
ANR	10601707	Identifier	SPH_TWEAK_ROUND_NONPIXEL_Y_MOVES		10600965	1					
ANR	10601708	ExpressionStatement	distance = FT_PIX_ROUND ( B1 + distance - cur_dist ) - B1 + cur_dist	6359:8:225459:225526	10600965	1	True				
ANR	10601709	AssignmentExpression	distance = FT_PIX_ROUND ( B1 + distance - cur_dist ) - B1 + cur_dist		10600965	0		=			
ANR	10601710	Identifier	distance		10600965	0					
ANR	10601711	AdditiveExpression	FT_PIX_ROUND ( B1 + distance - cur_dist ) - B1 + cur_dist		10600965	1		-			
ANR	10601712	CallExpression	FT_PIX_ROUND ( B1 + distance - cur_dist )		10600965	0					
ANR	10601713	Callee	FT_PIX_ROUND		10600965	0					
ANR	10601714	Identifier	FT_PIX_ROUND		10600965	0					
ANR	10601715	ArgumentList	B1 + distance - cur_dist		10600965	1					
ANR	10601716	Argument	B1 + distance - cur_dist		10600965	0					
ANR	10601717	AdditiveExpression	B1 + distance - cur_dist		10600965	0		+			
ANR	10601718	Identifier	B1		10600965	0					
ANR	10601719	AdditiveExpression	distance - cur_dist		10600965	1		-			
ANR	10601720	Identifier	distance		10600965	0					
ANR	10601721	Identifier	cur_dist		10600965	1					
ANR	10601722	AdditiveExpression	B1 + cur_dist		10600965	1		+			
ANR	10601723	Identifier	B1		10600965	0					
ANR	10601724	Identifier	cur_dist		10600965	1					
ANR	10601725	IfStatement	if ( exc -> ignore_x_mode && exc -> GS . freeVector . y != 0 && ( exc -> opcode & 16 ) == 0 && ( exc -> opcode & 8 ) == 0 && ( exc -> sph_tweak_flags & SPH_TWEAK_COURIER_NEW_2_HACK ) )		10600965	2					
ANR	10601726	Condition	exc -> ignore_x_mode && exc -> GS . freeVector . y != 0 && ( exc -> opcode & 16 ) == 0 && ( exc -> opcode & 8 ) == 0 && ( exc -> sph_tweak_flags & SPH_TWEAK_COURIER_NEW_2_HACK )	6361:11:225540:225874	10600965	0	True				
ANR	10601727	AndExpression	exc -> ignore_x_mode && exc -> GS . freeVector . y != 0 && ( exc -> opcode & 16 ) == 0 && ( exc -> opcode & 8 ) == 0 && ( exc -> sph_tweak_flags & SPH_TWEAK_COURIER_NEW_2_HACK )		10600965	0		&&			
ANR	10601728	PtrMemberAccess	exc -> ignore_x_mode		10600965	0					
ANR	10601729	Identifier	exc		10600965	0					
ANR	10601730	Identifier	ignore_x_mode		10600965	1					
ANR	10601731	AndExpression	exc -> GS . freeVector . y != 0 && ( exc -> opcode & 16 ) == 0 && ( exc -> opcode & 8 ) == 0 && ( exc -> sph_tweak_flags & SPH_TWEAK_COURIER_NEW_2_HACK )		10600965	1		&&			
ANR	10601732	EqualityExpression	exc -> GS . freeVector . y != 0		10600965	0		!=			
ANR	10601733	MemberAccess	exc -> GS . freeVector . y		10600965	0					
ANR	10601734	MemberAccess	exc -> GS . freeVector		10600965	0					
ANR	10601735	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601736	Identifier	exc		10600965	0					
ANR	10601737	Identifier	GS		10600965	1					
ANR	10601738	Identifier	freeVector		10600965	1					
ANR	10601739	Identifier	y		10600965	1					
ANR	10601740	PrimaryExpression	0		10600965	1					
ANR	10601741	AndExpression	( exc -> opcode & 16 ) == 0 && ( exc -> opcode & 8 ) == 0 && ( exc -> sph_tweak_flags & SPH_TWEAK_COURIER_NEW_2_HACK )		10600965	1		&&			
ANR	10601742	EqualityExpression	( exc -> opcode & 16 ) == 0		10600965	0		==			
ANR	10601743	BitAndExpression	exc -> opcode & 16		10600965	0		&			
ANR	10601744	PtrMemberAccess	exc -> opcode		10600965	0					
ANR	10601745	Identifier	exc		10600965	0					
ANR	10601746	Identifier	opcode		10600965	1					
ANR	10601747	PrimaryExpression	16		10600965	1					
ANR	10601748	PrimaryExpression	0		10600965	1					
ANR	10601749	AndExpression	( exc -> opcode & 8 ) == 0 && ( exc -> sph_tweak_flags & SPH_TWEAK_COURIER_NEW_2_HACK )		10600965	1		&&			
ANR	10601750	EqualityExpression	( exc -> opcode & 8 ) == 0		10600965	0		==			
ANR	10601751	BitAndExpression	exc -> opcode & 8		10600965	0		&			
ANR	10601752	PtrMemberAccess	exc -> opcode		10600965	0					
ANR	10601753	Identifier	exc		10600965	0					
ANR	10601754	Identifier	opcode		10600965	1					
ANR	10601755	PrimaryExpression	8		10600965	1					
ANR	10601756	PrimaryExpression	0		10600965	1					
ANR	10601757	BitAndExpression	exc -> sph_tweak_flags & SPH_TWEAK_COURIER_NEW_2_HACK		10600965	1		&			
ANR	10601758	PtrMemberAccess	exc -> sph_tweak_flags		10600965	0					
ANR	10601759	Identifier	exc		10600965	0					
ANR	10601760	Identifier	sph_tweak_flags		10600965	1					
ANR	10601761	Identifier	SPH_TWEAK_COURIER_NEW_2_HACK		10600965	1					
ANR	10601762	ExpressionStatement	distance += 64	6366:8:225886:225900	10600965	1	True				
ANR	10601763	AssignmentExpression	distance += 64		10600965	0		+=			
ANR	10601764	Identifier	distance		10600965	0					
ANR	10601765	PrimaryExpression	64		10600965	1					
ANR	10601766	ExpressionStatement	"exc -> func_move ( exc , & exc -> zp1 , point , SUB_LONG ( distance , cur_dist ) )"	6370:4:225965:226096	10600965	22	True				
ANR	10601767	CallExpression	"exc -> func_move ( exc , & exc -> zp1 , point , SUB_LONG ( distance , cur_dist ) )"		10600965	0					
ANR	10601768	Callee	exc -> func_move		10600965	0					
ANR	10601769	PtrMemberAccess	exc -> func_move		10600965	0					
ANR	10601770	Identifier	exc		10600965	0					
ANR	10601771	Identifier	func_move		10600965	1					
ANR	10601772	ArgumentList	exc		10600965	1					
ANR	10601773	Argument	exc		10600965	0					
ANR	10601774	Identifier	exc		10600965	0					
ANR	10601775	Argument	& exc -> zp1		10600965	1					
ANR	10601776	UnaryOperationExpression	& exc -> zp1		10600965	0					
ANR	10601777	UnaryOperator	&		10600965	0					
ANR	10601778	PtrMemberAccess	exc -> zp1		10600965	1					
ANR	10601779	Identifier	exc		10600965	0					
ANR	10601780	Identifier	zp1		10600965	1					
ANR	10601781	Argument	point		10600965	2					
ANR	10601782	Identifier	point		10600965	0					
ANR	10601783	Argument	"SUB_LONG ( distance , cur_dist )"		10600965	3					
ANR	10601784	CallExpression	"SUB_LONG ( distance , cur_dist )"		10600965	0					
ANR	10601785	Callee	SUB_LONG		10600965	0					
ANR	10601786	Identifier	SUB_LONG		10600965	0					
ANR	10601787	ArgumentList	distance		10600965	1					
ANR	10601788	Argument	distance		10600965	0					
ANR	10601789	Identifier	distance		10600965	0					
ANR	10601790	Argument	cur_dist		10600965	1					
ANR	10601791	Identifier	cur_dist		10600965	0					
ANR	10601792	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY )		10600965	23					
ANR	10601793	Condition	SUBPIXEL_HINTING_INFINALITY	6376:9:226154:226180	10600965	0	True				
ANR	10601794	Identifier	SUBPIXEL_HINTING_INFINALITY		10600965	0					
ANR	10601795	CompoundStatement		202:4:6769:6769	10600965	1					
ANR	10601796	ExpressionStatement	B2 = exc -> zp1 . cur [ point ] . y	6378:6:226196:226222	10600965	0	True				
ANR	10601797	AssignmentExpression	B2 = exc -> zp1 . cur [ point ] . y		10600965	0		=			
ANR	10601798	Identifier	B2		10600965	0					
ANR	10601799	MemberAccess	exc -> zp1 . cur [ point ] . y		10600965	1					
ANR	10601800	ArrayIndexing	exc -> zp1 . cur [ point ]		10600965	0					
ANR	10601801	MemberAccess	exc -> zp1 . cur		10600965	0					
ANR	10601802	PtrMemberAccess	exc -> zp1		10600965	0					
ANR	10601803	Identifier	exc		10600965	0					
ANR	10601804	Identifier	zp1		10600965	1					
ANR	10601805	Identifier	cur		10600965	1					
ANR	10601806	Identifier	point		10600965	1					
ANR	10601807	Identifier	y		10600965	1					
ANR	10601808	IfStatement	if ( exc -> ignore_x_mode )		10600965	1					
ANR	10601809	Condition	exc -> ignore_x_mode	6381:11:226274:226291	10600965	0	True				
ANR	10601810	PtrMemberAccess	exc -> ignore_x_mode		10600965	0					
ANR	10601811	Identifier	exc		10600965	0					
ANR	10601812	Identifier	ignore_x_mode		10600965	1					
ANR	10601813	CompoundStatement		207:6:6882:6882	10600965	1					
ANR	10601814	IfStatement	if ( exc -> face -> sph_compatibility_mode && exc -> GS . freeVector . y != 0 && ( B1 & 63 ) == 0 && ( B2 & 63 ) != 0 )		10600965	0					
ANR	10601815	Condition	exc -> face -> sph_compatibility_mode && exc -> GS . freeVector . y != 0 && ( B1 & 63 ) == 0 && ( B2 & 63 ) != 0	6383:13:226316:226481	10600965	0	True				
ANR	10601816	AndExpression	exc -> face -> sph_compatibility_mode && exc -> GS . freeVector . y != 0 && ( B1 & 63 ) == 0 && ( B2 & 63 ) != 0		10600965	0		&&			
ANR	10601817	PtrMemberAccess	exc -> face -> sph_compatibility_mode		10600965	0					
ANR	10601818	PtrMemberAccess	exc -> face		10600965	0					
ANR	10601819	Identifier	exc		10600965	0					
ANR	10601820	Identifier	face		10600965	1					
ANR	10601821	Identifier	sph_compatibility_mode		10600965	1					
ANR	10601822	AndExpression	exc -> GS . freeVector . y != 0 && ( B1 & 63 ) == 0 && ( B2 & 63 ) != 0		10600965	1		&&			
ANR	10601823	EqualityExpression	exc -> GS . freeVector . y != 0		10600965	0		!=			
ANR	10601824	MemberAccess	exc -> GS . freeVector . y		10600965	0					
ANR	10601825	MemberAccess	exc -> GS . freeVector		10600965	0					
ANR	10601826	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601827	Identifier	exc		10600965	0					
ANR	10601828	Identifier	GS		10600965	1					
ANR	10601829	Identifier	freeVector		10600965	1					
ANR	10601830	Identifier	y		10600965	1					
ANR	10601831	PrimaryExpression	0		10600965	1					
ANR	10601832	AndExpression	( B1 & 63 ) == 0 && ( B2 & 63 ) != 0		10600965	1		&&			
ANR	10601833	EqualityExpression	( B1 & 63 ) == 0		10600965	0		==			
ANR	10601834	BitAndExpression	B1 & 63		10600965	0		&			
ANR	10601835	Identifier	B1		10600965	0					
ANR	10601836	PrimaryExpression	63		10600965	1					
ANR	10601837	PrimaryExpression	0		10600965	1					
ANR	10601838	EqualityExpression	( B2 & 63 ) != 0		10600965	1		!=			
ANR	10601839	BitAndExpression	B2 & 63		10600965	0		&			
ANR	10601840	Identifier	B2		10600965	0					
ANR	10601841	PrimaryExpression	63		10600965	1					
ANR	10601842	PrimaryExpression	0		10600965	1					
ANR	10601843	ExpressionStatement	reverse_move = TRUE	6387:10:226512:226531	10600965	1	True				
ANR	10601844	AssignmentExpression	reverse_move = TRUE		10600965	0		=			
ANR	10601845	Identifier	reverse_move		10600965	0					
ANR	10601846	Identifier	TRUE		10600965	1					
ANR	10601847	IfStatement	if ( ( exc -> sph_tweak_flags & SPH_TWEAK_SKIP_NONPIXEL_Y_MOVES ) && exc -> GS . freeVector . y != 0 && ( B2 & 63 ) != 0 && ( B1 & 63 ) != 0 )		10600965	1					
ANR	10601848	Condition	( exc -> sph_tweak_flags & SPH_TWEAK_SKIP_NONPIXEL_Y_MOVES ) && exc -> GS . freeVector . y != 0 && ( B2 & 63 ) != 0 && ( B1 & 63 ) != 0	6389:13:226547:226787	10600965	0	True				
ANR	10601849	AndExpression	( exc -> sph_tweak_flags & SPH_TWEAK_SKIP_NONPIXEL_Y_MOVES ) && exc -> GS . freeVector . y != 0 && ( B2 & 63 ) != 0 && ( B1 & 63 ) != 0		10600965	0		&&			
ANR	10601850	BitAndExpression	exc -> sph_tweak_flags & SPH_TWEAK_SKIP_NONPIXEL_Y_MOVES		10600965	0		&			
ANR	10601851	PtrMemberAccess	exc -> sph_tweak_flags		10600965	0					
ANR	10601852	Identifier	exc		10600965	0					
ANR	10601853	Identifier	sph_tweak_flags		10600965	1					
ANR	10601854	Identifier	SPH_TWEAK_SKIP_NONPIXEL_Y_MOVES		10600965	1					
ANR	10601855	AndExpression	exc -> GS . freeVector . y != 0 && ( B2 & 63 ) != 0 && ( B1 & 63 ) != 0		10600965	1		&&			
ANR	10601856	EqualityExpression	exc -> GS . freeVector . y != 0		10600965	0		!=			
ANR	10601857	MemberAccess	exc -> GS . freeVector . y		10600965	0					
ANR	10601858	MemberAccess	exc -> GS . freeVector		10600965	0					
ANR	10601859	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601860	Identifier	exc		10600965	0					
ANR	10601861	Identifier	GS		10600965	1					
ANR	10601862	Identifier	freeVector		10600965	1					
ANR	10601863	Identifier	y		10600965	1					
ANR	10601864	PrimaryExpression	0		10600965	1					
ANR	10601865	AndExpression	( B2 & 63 ) != 0 && ( B1 & 63 ) != 0		10600965	1		&&			
ANR	10601866	EqualityExpression	( B2 & 63 ) != 0		10600965	0		!=			
ANR	10601867	BitAndExpression	B2 & 63		10600965	0		&			
ANR	10601868	Identifier	B2		10600965	0					
ANR	10601869	PrimaryExpression	63		10600965	1					
ANR	10601870	PrimaryExpression	0		10600965	1					
ANR	10601871	EqualityExpression	( B1 & 63 ) != 0		10600965	1		!=			
ANR	10601872	BitAndExpression	B1 & 63		10600965	0		&			
ANR	10601873	Identifier	B1		10600965	0					
ANR	10601874	PrimaryExpression	63		10600965	1					
ANR	10601875	PrimaryExpression	0		10600965	1					
ANR	10601876	ExpressionStatement	reverse_move = TRUE	6393:10:226843:226862	10600965	1	True				
ANR	10601877	AssignmentExpression	reverse_move = TRUE		10600965	0		=			
ANR	10601878	Identifier	reverse_move		10600965	0					
ANR	10601879	Identifier	TRUE		10600965	1					
ANR	10601880	IfStatement	if ( reverse_move )		10600965	2					
ANR	10601881	Condition	reverse_move	6396:11:226884:226895	10600965	0	True				
ANR	10601882	Identifier	reverse_move		10600965	0					
ANR	10601883	ExpressionStatement	"exc -> func_move ( exc , & exc -> zp1 , point , SUB_LONG ( cur_dist , distance ) )"	6397:8:226907:227050	10600965	1	True				
ANR	10601884	CallExpression	"exc -> func_move ( exc , & exc -> zp1 , point , SUB_LONG ( cur_dist , distance ) )"		10600965	0					
ANR	10601885	Callee	exc -> func_move		10600965	0					
ANR	10601886	PtrMemberAccess	exc -> func_move		10600965	0					
ANR	10601887	Identifier	exc		10600965	0					
ANR	10601888	Identifier	func_move		10600965	1					
ANR	10601889	ArgumentList	exc		10600965	1					
ANR	10601890	Argument	exc		10600965	0					
ANR	10601891	Identifier	exc		10600965	0					
ANR	10601892	Argument	& exc -> zp1		10600965	1					
ANR	10601893	UnaryOperationExpression	& exc -> zp1		10600965	0					
ANR	10601894	UnaryOperator	&		10600965	0					
ANR	10601895	PtrMemberAccess	exc -> zp1		10600965	1					
ANR	10601896	Identifier	exc		10600965	0					
ANR	10601897	Identifier	zp1		10600965	1					
ANR	10601898	Argument	point		10600965	2					
ANR	10601899	Identifier	point		10600965	0					
ANR	10601900	Argument	"SUB_LONG ( cur_dist , distance )"		10600965	3					
ANR	10601901	CallExpression	"SUB_LONG ( cur_dist , distance )"		10600965	0					
ANR	10601902	Callee	SUB_LONG		10600965	0					
ANR	10601903	Identifier	SUB_LONG		10600965	0					
ANR	10601904	ArgumentList	cur_dist		10600965	1					
ANR	10601905	Argument	cur_dist		10600965	0					
ANR	10601906	Identifier	cur_dist		10600965	0					
ANR	10601907	Argument	distance		10600965	1					
ANR	10601908	Identifier	distance		10600965	0					
ANR	10601909	Label	Fail :	6405:2:227114:227118	10600965	24	True				
ANR	10601910	Identifier	Fail		10600965	0					
ANR	10601911	ExpressionStatement	exc -> GS . rp1 = exc -> GS . rp0	6406:4:227124:227149	10600965	25	True				
ANR	10601912	AssignmentExpression	exc -> GS . rp1 = exc -> GS . rp0		10600965	0		=			
ANR	10601913	MemberAccess	exc -> GS . rp1		10600965	0					
ANR	10601914	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601915	Identifier	exc		10600965	0					
ANR	10601916	Identifier	GS		10600965	1					
ANR	10601917	Identifier	rp1		10600965	1					
ANR	10601918	MemberAccess	exc -> GS . rp0		10600965	1					
ANR	10601919	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601920	Identifier	exc		10600965	0					
ANR	10601921	Identifier	GS		10600965	1					
ANR	10601922	Identifier	rp0		10600965	1					
ANR	10601923	IfStatement	if ( ( exc -> opcode & 16 ) != 0 )		10600965	26					
ANR	10601924	Condition	( exc -> opcode & 16 ) != 0	6408:9:227161:227185	10600965	0	True				
ANR	10601925	EqualityExpression	( exc -> opcode & 16 ) != 0		10600965	0		!=			
ANR	10601926	BitAndExpression	exc -> opcode & 16		10600965	0		&			
ANR	10601927	PtrMemberAccess	exc -> opcode		10600965	0					
ANR	10601928	Identifier	exc		10600965	0					
ANR	10601929	Identifier	opcode		10600965	1					
ANR	10601930	PrimaryExpression	16		10600965	1					
ANR	10601931	PrimaryExpression	0		10600965	1					
ANR	10601932	ExpressionStatement	exc -> GS . rp0 = point	6409:6:227195:227214	10600965	1	True				
ANR	10601933	AssignmentExpression	exc -> GS . rp0 = point		10600965	0		=			
ANR	10601934	MemberAccess	exc -> GS . rp0		10600965	0					
ANR	10601935	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601936	Identifier	exc		10600965	0					
ANR	10601937	Identifier	GS		10600965	1					
ANR	10601938	Identifier	rp0		10600965	1					
ANR	10601939	Identifier	point		10600965	1					
ANR	10601940	ExpressionStatement	exc -> GS . rp2 = point	6411:4:227221:227240	10600965	27	True				
ANR	10601941	AssignmentExpression	exc -> GS . rp2 = point		10600965	0		=			
ANR	10601942	MemberAccess	exc -> GS . rp2		10600965	0					
ANR	10601943	PtrMemberAccess	exc -> GS		10600965	0					
ANR	10601944	Identifier	exc		10600965	0					
ANR	10601945	Identifier	GS		10600965	1					
ANR	10601946	Identifier	rp2		10600965	1					
ANR	10601947	Identifier	point		10600965	1					
ANR	10601948	ReturnType	static void		10600965	1					
ANR	10601949	Identifier	Ins_MIRP		10600965	2					
ANR	10601950	ParameterList	"TT_ExecContext exc , FT_Long * args"		10600965	3					
ANR	10601951	Parameter	TT_ExecContext exc	6174:12:219360:219378	10600965	0	True				
ANR	10601952	ParameterType	TT_ExecContext		10600965	0					
ANR	10601953	Identifier	exc		10600965	1					
ANR	10601954	Parameter	FT_Long * args	6175:12:219393:219412	10600965	1	True				
ANR	10601955	ParameterType	FT_Long *		10600965	0					
ANR	10601956	Identifier	args		10600965	1					
ANR	10601957	CFGEntryNode	ENTRY		10600965		True				
ANR	10601958	CFGExitNode	EXIT		10600965		True				
ANR	10601959	Symbol	SPH_TWEAK_COURIER_NEW_2_HACK		10600965						
ANR	10601960	Symbol	exc -> GS . freeVector . x		10600965						
ANR	10601961	Symbol	* exc -> zp1 . org		10600965						
ANR	10601962	Symbol	exc -> GS . freeVector . y		10600965						
ANR	10601963	Symbol	Round_None		10600965						
ANR	10601964	Symbol	delta		10600965						
ANR	10601965	Symbol	exc -> GS . control_value_cutin		10600965						
ANR	10601966	Symbol	* args		10600965						
ANR	10601967	Symbol	SUBPIXEL_HINTING_INFINALITY		10600965						
ANR	10601968	Symbol	exc		10600965						
ANR	10601969	Symbol	Invalid_Reference		10600965						
ANR	10601970	Symbol	exc -> zp1 . org		10600965						
ANR	10601971	Symbol	exc -> GS . minimum_distance		10600965						
ANR	10601972	Symbol	BOUNDS		10600965						
ANR	10601973	Symbol	exc -> func_round		10600965						
ANR	10601974	Symbol	exc -> func_read_cvt		10600965						
ANR	10601975	Symbol	exc -> error		10600965						
ANR	10601976	Symbol	exc -> zp0 . org [ exc -> GS . rp0 ] . x		10600965						
ANR	10601977	Symbol	exc -> zp0 . org [ exc -> GS . rp0 ] . y		10600965						
ANR	10601978	Symbol	FT_PIX_ROUND		10600965						
ANR	10601979	Symbol	SPH_TWEAK_ROUND_NONPIXEL_Y_MOVES		10600965						
ANR	10601980	Symbol	exc -> zp0 . cur		10600965						
ANR	10601981	Symbol	SPH_TWEAK_TIMES_NEW_ROMAN_HACK		10600965						
ANR	10601982	Symbol	exc -> zp1 . org [ point ] . x		10600965						
ANR	10601983	Symbol	exc -> zp1 . org [ point ] . y		10600965						
ANR	10601984	Symbol	* exc -> zp0 . org		10600965						
ANR	10601985	Symbol	PROJECT		10600965						
ANR	10601986	Symbol	reverse_move		10600965						
ANR	10601987	Symbol	* point		10600965						
ANR	10601988	Symbol	exc -> zp1 . n_points		10600965						
ANR	10601989	Symbol	exc -> GS . single_width_cutin		10600965						
ANR	10601990	Symbol	* exc -> zp1 . cur		10600965						
ANR	10601991	Symbol	exc -> face		10600965						
ANR	10601992	Symbol	exc -> pedantic_hinting		10600965						
ANR	10601993	Symbol	TRUE		10600965						
ANR	10601994	Symbol	exc -> tt_metrics		10600965						
ANR	10601995	Symbol	minimum_distance		10600965						
ANR	10601996	Symbol	B1		10600965						
ANR	10601997	Symbol	B2		10600965						
ANR	10601998	Symbol	exc -> face -> sph_compatibility_mode		10600965						
ANR	10601999	Symbol	exc -> GS . rp1		10600965						
ANR	10602000	Symbol	exc -> GS . rp2		10600965						
ANR	10602001	Symbol	cvtEntry		10600965						
ANR	10602002	Symbol	& exc -> zp1		10600965						
ANR	10602003	Symbol	exc -> GS . rp0		10600965						
ANR	10602004	Symbol	exc -> zp1 . cur		10600965						
ANR	10602005	Symbol	exc -> zp0 . org		10600965						
ANR	10602006	Symbol	exc -> opcode		10600965						
ANR	10602007	Symbol	exc -> GS . freeVector		10600965						
ANR	10602008	Symbol	TT_MulFix14		10600965						
ANR	10602009	Symbol	* exc -> tt_metrics . compensations		10600965						
ANR	10602010	Symbol	distance		10600965						
ANR	10602011	Symbol	exc -> tt_metrics . compensations		10600965						
ANR	10602012	Symbol	* exc		10600965						
ANR	10602013	Symbol	ADD_LONG		10600965						
ANR	10602014	Symbol	control_value_cutin		10600965						
ANR	10602015	Symbol	* exc -> face		10600965						
ANR	10602016	Symbol	SUB_LONG		10600965						
ANR	10602017	Symbol	cvt_dist		10600965						
ANR	10602018	Symbol	BOUNDSL		10600965						
ANR	10602019	Symbol	* exc -> GS . rp0		10600965						
ANR	10602020	Symbol	point		10600965						
ANR	10602021	Symbol	* exc -> GS		10600965						
ANR	10602022	Symbol	exc -> zp1 . cur [ point ] . y		10600965						
ANR	10602023	Symbol	exc -> zp0 . n_points		10600965						
ANR	10602024	Symbol	exc -> GS . single_width_value		10600965						
ANR	10602025	Symbol	* exc -> tt_metrics		10600965						
ANR	10602026	Symbol	exc -> sph_tweak_flags		10600965						
ANR	10602027	Symbol	DUALPROJ		10600965						
ANR	10602028	Symbol	NEG_LONG		10600965						
ANR	10602029	Symbol	exc -> ignore_x_mode		10600965						
ANR	10602030	Symbol	FT_ABS		10600965						
ANR	10602031	Symbol	SPH_TWEAK_NORMAL_ROUND		10600965						
ANR	10602032	Symbol	* * exc		10600965						
ANR	10602033	Symbol	exc -> cvtSize		10600965						
ANR	10602034	Symbol	exc -> GS . gep0		10600965						
ANR	10602035	Symbol	exc -> GS . gep1		10600965						
ANR	10602036	Symbol	exc -> GS		10600965						
ANR	10602037	Symbol	FT_THROW		10600965						
ANR	10602038	Symbol	args		10600965						
ANR	10602039	Symbol	exc -> zp1		10600965						
ANR	10602040	Symbol	SPH_TWEAK_SKIP_NONPIXEL_Y_MOVES		10600965						
ANR	10602041	Symbol	org_dist		10600965						
ANR	10602042	Symbol	exc -> zp0		10600965						
ANR	10602043	Symbol	* exc -> zp0		10600965						
ANR	10602044	Symbol	cur_dist		10600965						
ANR	10602045	Symbol	FALSE		10600965						
ANR	10602046	Symbol	* exc -> zp1		10600965						
ANR	10602047	Symbol	exc -> GS . auto_flip		10600965						
ANR	10602048	Symbol	* exc -> opcode		10600965						
ANR	10602049	Function	Ins_ALIGNRP	6421:2:227718:229099							
ANR	10602050	FunctionDef	Ins_ALIGNRP (TT_ExecContext exc)		10602049	0					
ANR	10602051	CompoundStatement		6423:2:227769:229099	10602049	0					
ANR	10602052	IdentifierDeclStatement	FT_UShort point ;	6424:4:227775:227792	10602049	0	True				
ANR	10602053	IdentifierDecl	point		10602049	0					
ANR	10602054	IdentifierDeclType	FT_UShort		10602049	0					
ANR	10602055	Identifier	point		10602049	1					
ANR	10602056	IdentifierDeclStatement	FT_F26Dot6 distance ;	6425:4:227798:227818	10602049	1	True				
ANR	10602057	IdentifierDecl	distance		10602049	0					
ANR	10602058	IdentifierDeclType	FT_F26Dot6		10602049	0					
ANR	10602059	Identifier	distance		10602049	1					
ANR	10602060	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> iup_called && ( exc -> sph_tweak_flags & SPH_TWEAK_NO_ALIGNRP_AFTER_IUP ) )		10602049	2					
ANR	10602061	Condition	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> iup_called && ( exc -> sph_tweak_flags & SPH_TWEAK_NO_ALIGNRP_AFTER_IUP )	6429:9:227877:228143	10602049	0	True				
ANR	10602062	AndExpression	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> iup_called && ( exc -> sph_tweak_flags & SPH_TWEAK_NO_ALIGNRP_AFTER_IUP )		10602049	0		&&			
ANR	10602063	Identifier	SUBPIXEL_HINTING_INFINALITY		10602049	0					
ANR	10602064	AndExpression	exc -> ignore_x_mode && exc -> iup_called && ( exc -> sph_tweak_flags & SPH_TWEAK_NO_ALIGNRP_AFTER_IUP )		10602049	1		&&			
ANR	10602065	PtrMemberAccess	exc -> ignore_x_mode		10602049	0					
ANR	10602066	Identifier	exc		10602049	0					
ANR	10602067	Identifier	ignore_x_mode		10602049	1					
ANR	10602068	AndExpression	exc -> iup_called && ( exc -> sph_tweak_flags & SPH_TWEAK_NO_ALIGNRP_AFTER_IUP )		10602049	1		&&			
ANR	10602069	PtrMemberAccess	exc -> iup_called		10602049	0					
ANR	10602070	Identifier	exc		10602049	0					
ANR	10602071	Identifier	iup_called		10602049	1					
ANR	10602072	BitAndExpression	exc -> sph_tweak_flags & SPH_TWEAK_NO_ALIGNRP_AFTER_IUP		10602049	1		&			
ANR	10602073	PtrMemberAccess	exc -> sph_tweak_flags		10602049	0					
ANR	10602074	Identifier	exc		10602049	0					
ANR	10602075	Identifier	sph_tweak_flags		10602049	1					
ANR	10602076	Identifier	SPH_TWEAK_NO_ALIGNRP_AFTER_IUP		10602049	1					
ANR	10602077	CompoundStatement		11:4:381:381	10602049	1					
ANR	10602078	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	6434:6:228159:228201	10602049	0	True				
ANR	10602079	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10602049	0		=			
ANR	10602080	PtrMemberAccess	exc -> error		10602049	0					
ANR	10602081	Identifier	exc		10602049	0					
ANR	10602082	Identifier	error		10602049	1					
ANR	10602083	CallExpression	FT_THROW ( Invalid_Reference )		10602049	1					
ANR	10602084	Callee	FT_THROW		10602049	0					
ANR	10602085	Identifier	FT_THROW		10602049	0					
ANR	10602086	ArgumentList	Invalid_Reference		10602049	1					
ANR	10602087	Argument	Invalid_Reference		10602049	0					
ANR	10602088	Identifier	Invalid_Reference		10602049	0					
ANR	10602089	GotoStatement	goto Fail ;	6435:6:228209:228218	10602049	1	True				
ANR	10602090	Identifier	Fail		10602049	0					
ANR	10602091	IfStatement	"if ( exc -> top < exc -> GS . loop || BOUNDS ( exc -> GS . rp0 , exc -> zp0 . n_points ) )"		10602049	3					
ANR	10602092	Condition	"exc -> top < exc -> GS . loop || BOUNDS ( exc -> GS . rp0 , exc -> zp0 . n_points )"	6439:9:228288:228380	10602049	0	True				
ANR	10602093	OrExpression	"exc -> top < exc -> GS . loop || BOUNDS ( exc -> GS . rp0 , exc -> zp0 . n_points )"		10602049	0		||			
ANR	10602094	RelationalExpression	exc -> top < exc -> GS . loop		10602049	0		<			
ANR	10602095	PtrMemberAccess	exc -> top		10602049	0					
ANR	10602096	Identifier	exc		10602049	0					
ANR	10602097	Identifier	top		10602049	1					
ANR	10602098	MemberAccess	exc -> GS . loop		10602049	1					
ANR	10602099	PtrMemberAccess	exc -> GS		10602049	0					
ANR	10602100	Identifier	exc		10602049	0					
ANR	10602101	Identifier	GS		10602049	1					
ANR	10602102	Identifier	loop		10602049	1					
ANR	10602103	CallExpression	"BOUNDS ( exc -> GS . rp0 , exc -> zp0 . n_points )"		10602049	1					
ANR	10602104	Callee	BOUNDS		10602049	0					
ANR	10602105	Identifier	BOUNDS		10602049	0					
ANR	10602106	ArgumentList	exc -> GS . rp0		10602049	1					
ANR	10602107	Argument	exc -> GS . rp0		10602049	0					
ANR	10602108	MemberAccess	exc -> GS . rp0		10602049	0					
ANR	10602109	PtrMemberAccess	exc -> GS		10602049	0					
ANR	10602110	Identifier	exc		10602049	0					
ANR	10602111	Identifier	GS		10602049	1					
ANR	10602112	Identifier	rp0		10602049	1					
ANR	10602113	Argument	exc -> zp0 . n_points		10602049	1					
ANR	10602114	MemberAccess	exc -> zp0 . n_points		10602049	0					
ANR	10602115	PtrMemberAccess	exc -> zp0		10602049	0					
ANR	10602116	Identifier	exc		10602049	0					
ANR	10602117	Identifier	zp0		10602049	1					
ANR	10602118	Identifier	n_points		10602049	1					
ANR	10602119	CompoundStatement		19:4:618:618	10602049	1					
ANR	10602120	IfStatement	if ( exc -> pedantic_hinting )		10602049	0					
ANR	10602121	Condition	exc -> pedantic_hinting	6442:11:228401:228421	10602049	0	True				
ANR	10602122	PtrMemberAccess	exc -> pedantic_hinting		10602049	0					
ANR	10602123	Identifier	exc		10602049	0					
ANR	10602124	Identifier	pedantic_hinting		10602049	1					
ANR	10602125	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	6443:8:228433:228475	10602049	1	True				
ANR	10602126	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10602049	0		=			
ANR	10602127	PtrMemberAccess	exc -> error		10602049	0					
ANR	10602128	Identifier	exc		10602049	0					
ANR	10602129	Identifier	error		10602049	1					
ANR	10602130	CallExpression	FT_THROW ( Invalid_Reference )		10602049	1					
ANR	10602131	Callee	FT_THROW		10602049	0					
ANR	10602132	Identifier	FT_THROW		10602049	0					
ANR	10602133	ArgumentList	Invalid_Reference		10602049	1					
ANR	10602134	Argument	Invalid_Reference		10602049	0					
ANR	10602135	Identifier	Invalid_Reference		10602049	0					
ANR	10602136	GotoStatement	goto Fail ;	6444:6:228483:228492	10602049	1	True				
ANR	10602137	Identifier	Fail		10602049	0					
ANR	10602138	WhileStatement	while ( exc -> GS . loop > 0 )		10602049	4					
ANR	10602139	Condition	exc -> GS . loop > 0	6447:12:228513:228528	10602049	0	True				
ANR	10602140	RelationalExpression	exc -> GS . loop > 0		10602049	0		>			
ANR	10602141	MemberAccess	exc -> GS . loop		10602049	0					
ANR	10602142	PtrMemberAccess	exc -> GS		10602049	0					
ANR	10602143	Identifier	exc		10602049	0					
ANR	10602144	Identifier	GS		10602049	1					
ANR	10602145	Identifier	loop		10602049	1					
ANR	10602146	PrimaryExpression	0		10602049	1					
ANR	10602147	CompoundStatement		26:4:766:766	10602049	1					
ANR	10602148	ExpressionStatement	exc -> args --	6449:6:228544:228555	10602049	0	True				
ANR	10602149	PostIncDecOperationExpression	exc -> args --		10602049	0					
ANR	10602150	PtrMemberAccess	exc -> args		10602049	0					
ANR	10602151	Identifier	exc		10602049	0					
ANR	10602152	Identifier	args		10602049	1					
ANR	10602153	IncDec	--		10602049	1					
ANR	10602154	ExpressionStatement	point = ( FT_UShort ) exc -> stack [ exc -> args ]	6451:6:228564:228604	10602049	1	True				
ANR	10602155	AssignmentExpression	point = ( FT_UShort ) exc -> stack [ exc -> args ]		10602049	0		=			
ANR	10602156	Identifier	point		10602049	0					
ANR	10602157	CastExpression	( FT_UShort ) exc -> stack [ exc -> args ]		10602049	1					
ANR	10602158	CastTarget	FT_UShort		10602049	0					
ANR	10602159	ArrayIndexing	exc -> stack [ exc -> args ]		10602049	1					
ANR	10602160	PtrMemberAccess	exc -> stack		10602049	0					
ANR	10602161	Identifier	exc		10602049	0					
ANR	10602162	Identifier	stack		10602049	1					
ANR	10602163	PtrMemberAccess	exc -> args		10602049	1					
ANR	10602164	Identifier	exc		10602049	0					
ANR	10602165	Identifier	args		10602049	1					
ANR	10602166	IfStatement	"if ( BOUNDS ( point , exc -> zp1 . n_points ) )"		10602049	2					
ANR	10602167	Condition	"BOUNDS ( point , exc -> zp1 . n_points )"	6453:11:228618:228651	10602049	0	True				
ANR	10602168	CallExpression	"BOUNDS ( point , exc -> zp1 . n_points )"		10602049	0					
ANR	10602169	Callee	BOUNDS		10602049	0					
ANR	10602170	Identifier	BOUNDS		10602049	0					
ANR	10602171	ArgumentList	point		10602049	1					
ANR	10602172	Argument	point		10602049	0					
ANR	10602173	Identifier	point		10602049	0					
ANR	10602174	Argument	exc -> zp1 . n_points		10602049	1					
ANR	10602175	MemberAccess	exc -> zp1 . n_points		10602049	0					
ANR	10602176	PtrMemberAccess	exc -> zp1		10602049	0					
ANR	10602177	Identifier	exc		10602049	0					
ANR	10602178	Identifier	zp1		10602049	1					
ANR	10602179	Identifier	n_points		10602049	1					
ANR	10602180	CompoundStatement		32:6:891:891	10602049	1					
ANR	10602181	IfStatement	if ( exc -> pedantic_hinting )		10602049	0					
ANR	10602182	Condition	exc -> pedantic_hinting	6455:13:228676:228696	10602049	0	True				
ANR	10602183	PtrMemberAccess	exc -> pedantic_hinting		10602049	0					
ANR	10602184	Identifier	exc		10602049	0					
ANR	10602185	Identifier	pedantic_hinting		10602049	1					
ANR	10602186	CompoundStatement		34:8:938:938	10602049	1					
ANR	10602187	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	6457:10:228720:228762	10602049	0	True				
ANR	10602188	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10602049	0		=			
ANR	10602189	PtrMemberAccess	exc -> error		10602049	0					
ANR	10602190	Identifier	exc		10602049	0					
ANR	10602191	Identifier	error		10602049	1					
ANR	10602192	CallExpression	FT_THROW ( Invalid_Reference )		10602049	1					
ANR	10602193	Callee	FT_THROW		10602049	0					
ANR	10602194	Identifier	FT_THROW		10602049	0					
ANR	10602195	ArgumentList	Invalid_Reference		10602049	1					
ANR	10602196	Argument	Invalid_Reference		10602049	0					
ANR	10602197	Identifier	Invalid_Reference		10602049	0					
ANR	10602198	ReturnStatement	return ;	6458:10:228774:228780	10602049	1	True				
ANR	10602199	ElseStatement	else		10602049	0					
ANR	10602200	CompoundStatement		40:6:1047:1047	10602049	0					
ANR	10602201	ExpressionStatement	"distance = PROJECT ( exc -> zp1 . cur + point , exc -> zp0 . cur + exc -> GS . rp0 )"	6463:8:228827:228925	10602049	0	True				
ANR	10602202	AssignmentExpression	"distance = PROJECT ( exc -> zp1 . cur + point , exc -> zp0 . cur + exc -> GS . rp0 )"		10602049	0		=			
ANR	10602203	Identifier	distance		10602049	0					
ANR	10602204	CallExpression	"PROJECT ( exc -> zp1 . cur + point , exc -> zp0 . cur + exc -> GS . rp0 )"		10602049	1					
ANR	10602205	Callee	PROJECT		10602049	0					
ANR	10602206	Identifier	PROJECT		10602049	0					
ANR	10602207	ArgumentList	exc -> zp1 . cur + point		10602049	1					
ANR	10602208	Argument	exc -> zp1 . cur + point		10602049	0					
ANR	10602209	AdditiveExpression	exc -> zp1 . cur + point		10602049	0		+			
ANR	10602210	MemberAccess	exc -> zp1 . cur		10602049	0					
ANR	10602211	PtrMemberAccess	exc -> zp1		10602049	0					
ANR	10602212	Identifier	exc		10602049	0					
ANR	10602213	Identifier	zp1		10602049	1					
ANR	10602214	Identifier	cur		10602049	1					
ANR	10602215	Identifier	point		10602049	1					
ANR	10602216	Argument	exc -> zp0 . cur + exc -> GS . rp0		10602049	1					
ANR	10602217	AdditiveExpression	exc -> zp0 . cur + exc -> GS . rp0		10602049	0		+			
ANR	10602218	MemberAccess	exc -> zp0 . cur		10602049	0					
ANR	10602219	PtrMemberAccess	exc -> zp0		10602049	0					
ANR	10602220	Identifier	exc		10602049	0					
ANR	10602221	Identifier	zp0		10602049	1					
ANR	10602222	Identifier	cur		10602049	1					
ANR	10602223	MemberAccess	exc -> GS . rp0		10602049	1					
ANR	10602224	PtrMemberAccess	exc -> GS		10602049	0					
ANR	10602225	Identifier	exc		10602049	0					
ANR	10602226	Identifier	GS		10602049	1					
ANR	10602227	Identifier	rp0		10602049	1					
ANR	10602228	ExpressionStatement	"exc -> func_move ( exc , & exc -> zp1 , point , NEG_LONG ( distance ) )"	6466:8:228936:228997	10602049	1	True				
ANR	10602229	CallExpression	"exc -> func_move ( exc , & exc -> zp1 , point , NEG_LONG ( distance ) )"		10602049	0					
ANR	10602230	Callee	exc -> func_move		10602049	0					
ANR	10602231	PtrMemberAccess	exc -> func_move		10602049	0					
ANR	10602232	Identifier	exc		10602049	0					
ANR	10602233	Identifier	func_move		10602049	1					
ANR	10602234	ArgumentList	exc		10602049	1					
ANR	10602235	Argument	exc		10602049	0					
ANR	10602236	Identifier	exc		10602049	0					
ANR	10602237	Argument	& exc -> zp1		10602049	1					
ANR	10602238	UnaryOperationExpression	& exc -> zp1		10602049	0					
ANR	10602239	UnaryOperator	&		10602049	0					
ANR	10602240	PtrMemberAccess	exc -> zp1		10602049	1					
ANR	10602241	Identifier	exc		10602049	0					
ANR	10602242	Identifier	zp1		10602049	1					
ANR	10602243	Argument	point		10602049	2					
ANR	10602244	Identifier	point		10602049	0					
ANR	10602245	Argument	NEG_LONG ( distance )		10602049	3					
ANR	10602246	CallExpression	NEG_LONG ( distance )		10602049	0					
ANR	10602247	Callee	NEG_LONG		10602049	0					
ANR	10602248	Identifier	NEG_LONG		10602049	0					
ANR	10602249	ArgumentList	distance		10602049	1					
ANR	10602250	Argument	distance		10602049	0					
ANR	10602251	Identifier	distance		10602049	0					
ANR	10602252	ExpressionStatement	exc -> GS . loop --	6469:6:229014:229028	10602049	3	True				
ANR	10602253	PostIncDecOperationExpression	exc -> GS . loop --		10602049	0					
ANR	10602254	MemberAccess	exc -> GS . loop		10602049	0					
ANR	10602255	PtrMemberAccess	exc -> GS		10602049	0					
ANR	10602256	Identifier	exc		10602049	0					
ANR	10602257	Identifier	GS		10602049	1					
ANR	10602258	Identifier	loop		10602049	1					
ANR	10602259	IncDec	--		10602049	1					
ANR	10602260	Label	Fail :	6472:2:229039:229043	10602049	5	True				
ANR	10602261	Identifier	Fail		10602049	0					
ANR	10602262	ExpressionStatement	exc -> GS . loop = 1	6473:4:229049:229065	10602049	6	True				
ANR	10602263	AssignmentExpression	exc -> GS . loop = 1		10602049	0		=			
ANR	10602264	MemberAccess	exc -> GS . loop		10602049	0					
ANR	10602265	PtrMemberAccess	exc -> GS		10602049	0					
ANR	10602266	Identifier	exc		10602049	0					
ANR	10602267	Identifier	GS		10602049	1					
ANR	10602268	Identifier	loop		10602049	1					
ANR	10602269	PrimaryExpression	1		10602049	1					
ANR	10602270	ExpressionStatement	exc -> new_top = exc -> args	6474:4:229071:229095	10602049	7	True				
ANR	10602271	AssignmentExpression	exc -> new_top = exc -> args		10602049	0		=			
ANR	10602272	PtrMemberAccess	exc -> new_top		10602049	0					
ANR	10602273	Identifier	exc		10602049	0					
ANR	10602274	Identifier	new_top		10602049	1					
ANR	10602275	PtrMemberAccess	exc -> args		10602049	1					
ANR	10602276	Identifier	exc		10602049	0					
ANR	10602277	Identifier	args		10602049	1					
ANR	10602278	ReturnType	static void		10602049	1					
ANR	10602279	Identifier	Ins_ALIGNRP		10602049	2					
ANR	10602280	ParameterList	TT_ExecContext exc		10602049	3					
ANR	10602281	Parameter	TT_ExecContext exc	6422:15:227745:227763	10602049	0	True				
ANR	10602282	ParameterType	TT_ExecContext		10602049	0					
ANR	10602283	Identifier	exc		10602049	1					
ANR	10602284	CFGEntryNode	ENTRY		10602049		True				
ANR	10602285	CFGExitNode	EXIT		10602049		True				
ANR	10602286	Symbol	exc -> new_top		10602049						
ANR	10602287	Symbol	distance		10602049						
ANR	10602288	Symbol	* exc		10602049						
ANR	10602289	Symbol	* exc -> args		10602049						
ANR	10602290	Symbol	point		10602049						
ANR	10602291	Symbol	SPH_TWEAK_NO_ALIGNRP_AFTER_IUP		10602049						
ANR	10602292	Symbol	SUBPIXEL_HINTING_INFINALITY		10602049						
ANR	10602293	Symbol	exc		10602049						
ANR	10602294	Symbol	exc -> zp0 . n_points		10602049						
ANR	10602295	Symbol	Invalid_Reference		10602049						
ANR	10602296	Symbol	exc -> stack		10602049						
ANR	10602297	Symbol	BOUNDS		10602049						
ANR	10602298	Symbol	exc -> sph_tweak_flags		10602049						
ANR	10602299	Symbol	exc -> top		10602049						
ANR	10602300	Symbol	NEG_LONG		10602049						
ANR	10602301	Symbol	exc -> error		10602049						
ANR	10602302	Symbol	exc -> ignore_x_mode		10602049						
ANR	10602303	Symbol	exc -> zp0 . cur		10602049						
ANR	10602304	Symbol	* exc -> stack		10602049						
ANR	10602305	Symbol	PROJECT		10602049						
ANR	10602306	Symbol	* * exc		10602049						
ANR	10602307	Symbol	exc -> args		10602049						
ANR	10602308	Symbol	exc -> zp1 . n_points		10602049						
ANR	10602309	Symbol	exc -> pedantic_hinting		10602049						
ANR	10602310	Symbol	exc -> GS		10602049						
ANR	10602311	Symbol	FT_THROW		10602049						
ANR	10602312	Symbol	exc -> zp1		10602049						
ANR	10602313	Symbol	& exc -> zp1		10602049						
ANR	10602314	Symbol	exc -> GS . rp0		10602049						
ANR	10602315	Symbol	exc -> zp0		10602049						
ANR	10602316	Symbol	exc -> zp1 . cur		10602049						
ANR	10602317	Symbol	exc -> iup_called		10602049						
ANR	10602318	Symbol	exc -> GS . loop		10602049						
ANR	10602319	Function	Ins_ISECT	6484:2:229573:232703							
ANR	10602320	FunctionDef	"Ins_ISECT (TT_ExecContext exc , FT_Long * args)"		10602319	0					
ANR	10602321	CompoundStatement		6487:2:229657:232703	10602319	0					
ANR	10602322	IdentifierDeclStatement	"FT_UShort point , a0 , a1 , b0 , b1 ;"	6488:4:229663:229728	10602319	0	True				
ANR	10602323	IdentifierDecl	point		10602319	0					
ANR	10602324	IdentifierDeclType	FT_UShort		10602319	0					
ANR	10602325	Identifier	point		10602319	1					
ANR	10602326	IdentifierDecl	a0		10602319	1					
ANR	10602327	IdentifierDeclType	FT_UShort		10602319	0					
ANR	10602328	Identifier	a0		10602319	1					
ANR	10602329	IdentifierDecl	a1		10602319	2					
ANR	10602330	IdentifierDeclType	FT_UShort		10602319	0					
ANR	10602331	Identifier	a1		10602319	1					
ANR	10602332	IdentifierDecl	b0		10602319	3					
ANR	10602333	IdentifierDeclType	FT_UShort		10602319	0					
ANR	10602334	Identifier	b0		10602319	1					
ANR	10602335	IdentifierDecl	b1		10602319	4					
ANR	10602336	IdentifierDeclType	FT_UShort		10602319	0					
ANR	10602337	Identifier	b1		10602319	1					
ANR	10602338	IdentifierDeclStatement	"FT_F26Dot6 discriminant , dotproduct ;"	6492:4:229735:229771	10602319	1	True				
ANR	10602339	IdentifierDecl	discriminant		10602319	0					
ANR	10602340	IdentifierDeclType	FT_F26Dot6		10602319	0					
ANR	10602341	Identifier	discriminant		10602319	1					
ANR	10602342	IdentifierDecl	dotproduct		10602319	1					
ANR	10602343	IdentifierDeclType	FT_F26Dot6		10602319	0					
ANR	10602344	Identifier	dotproduct		10602319	1					
ANR	10602345	IdentifierDeclStatement	"FT_F26Dot6 dx , dy , dax , day , dbx , dby ;"	6494:4:229778:229849	10602319	2	True				
ANR	10602346	IdentifierDecl	dx		10602319	0					
ANR	10602347	IdentifierDeclType	FT_F26Dot6		10602319	0					
ANR	10602348	Identifier	dx		10602319	1					
ANR	10602349	IdentifierDecl	dy		10602319	1					
ANR	10602350	IdentifierDeclType	FT_F26Dot6		10602319	0					
ANR	10602351	Identifier	dy		10602319	1					
ANR	10602352	IdentifierDecl	dax		10602319	2					
ANR	10602353	IdentifierDeclType	FT_F26Dot6		10602319	0					
ANR	10602354	Identifier	dax		10602319	1					
ANR	10602355	IdentifierDecl	day		10602319	3					
ANR	10602356	IdentifierDeclType	FT_F26Dot6		10602319	0					
ANR	10602357	Identifier	day		10602319	1					
ANR	10602358	IdentifierDecl	dbx		10602319	4					
ANR	10602359	IdentifierDeclType	FT_F26Dot6		10602319	0					
ANR	10602360	Identifier	dbx		10602319	1					
ANR	10602361	IdentifierDecl	dby		10602319	5					
ANR	10602362	IdentifierDeclType	FT_F26Dot6		10602319	0					
ANR	10602363	Identifier	dby		10602319	1					
ANR	10602364	IdentifierDeclStatement	FT_F26Dot6 val ;	6498:4:229856:229871	10602319	3	True				
ANR	10602365	IdentifierDecl	val		10602319	0					
ANR	10602366	IdentifierDeclType	FT_F26Dot6		10602319	0					
ANR	10602367	Identifier	val		10602319	1					
ANR	10602368	IdentifierDeclStatement	FT_Vector R ;	6500:4:229878:229891	10602319	4	True				
ANR	10602369	IdentifierDecl	R		10602319	0					
ANR	10602370	IdentifierDeclType	FT_Vector		10602319	0					
ANR	10602371	Identifier	R		10602319	1					
ANR	10602372	ExpressionStatement	point = ( FT_UShort ) args [ 0 ]	6503:4:229899:229925	10602319	5	True				
ANR	10602373	AssignmentExpression	point = ( FT_UShort ) args [ 0 ]		10602319	0		=			
ANR	10602374	Identifier	point		10602319	0					
ANR	10602375	CastExpression	( FT_UShort ) args [ 0 ]		10602319	1					
ANR	10602376	CastTarget	FT_UShort		10602319	0					
ANR	10602377	ArrayIndexing	args [ 0 ]		10602319	1					
ANR	10602378	Identifier	args		10602319	0					
ANR	10602379	PrimaryExpression	0		10602319	1					
ANR	10602380	ExpressionStatement	a0 = ( FT_UShort ) args [ 1 ]	6505:4:229932:229955	10602319	6	True				
ANR	10602381	AssignmentExpression	a0 = ( FT_UShort ) args [ 1 ]		10602319	0		=			
ANR	10602382	Identifier	a0		10602319	0					
ANR	10602383	CastExpression	( FT_UShort ) args [ 1 ]		10602319	1					
ANR	10602384	CastTarget	FT_UShort		10602319	0					
ANR	10602385	ArrayIndexing	args [ 1 ]		10602319	1					
ANR	10602386	Identifier	args		10602319	0					
ANR	10602387	PrimaryExpression	1		10602319	1					
ANR	10602388	ExpressionStatement	a1 = ( FT_UShort ) args [ 2 ]	6506:4:229961:229984	10602319	7	True				
ANR	10602389	AssignmentExpression	a1 = ( FT_UShort ) args [ 2 ]		10602319	0		=			
ANR	10602390	Identifier	a1		10602319	0					
ANR	10602391	CastExpression	( FT_UShort ) args [ 2 ]		10602319	1					
ANR	10602392	CastTarget	FT_UShort		10602319	0					
ANR	10602393	ArrayIndexing	args [ 2 ]		10602319	1					
ANR	10602394	Identifier	args		10602319	0					
ANR	10602395	PrimaryExpression	2		10602319	1					
ANR	10602396	ExpressionStatement	b0 = ( FT_UShort ) args [ 3 ]	6507:4:229990:230013	10602319	8	True				
ANR	10602397	AssignmentExpression	b0 = ( FT_UShort ) args [ 3 ]		10602319	0		=			
ANR	10602398	Identifier	b0		10602319	0					
ANR	10602399	CastExpression	( FT_UShort ) args [ 3 ]		10602319	1					
ANR	10602400	CastTarget	FT_UShort		10602319	0					
ANR	10602401	ArrayIndexing	args [ 3 ]		10602319	1					
ANR	10602402	Identifier	args		10602319	0					
ANR	10602403	PrimaryExpression	3		10602319	1					
ANR	10602404	ExpressionStatement	b1 = ( FT_UShort ) args [ 4 ]	6508:4:230019:230042	10602319	9	True				
ANR	10602405	AssignmentExpression	b1 = ( FT_UShort ) args [ 4 ]		10602319	0		=			
ANR	10602406	Identifier	b1		10602319	0					
ANR	10602407	CastExpression	( FT_UShort ) args [ 4 ]		10602319	1					
ANR	10602408	CastTarget	FT_UShort		10602319	0					
ANR	10602409	ArrayIndexing	args [ 4 ]		10602319	1					
ANR	10602410	Identifier	args		10602319	0					
ANR	10602411	PrimaryExpression	4		10602319	1					
ANR	10602412	IfStatement	"if ( BOUNDS ( b0 , exc -> zp0 . n_points ) || BOUNDS ( b1 , exc -> zp0 . n_points ) || BOUNDS ( a0 , exc -> zp1 . n_points ) || BOUNDS ( a1 , exc -> zp1 . n_points ) || BOUNDS ( point , exc -> zp2 . n_points ) )"		10602319	10					
ANR	10602413	Condition	"BOUNDS ( b0 , exc -> zp0 . n_points ) || BOUNDS ( b1 , exc -> zp0 . n_points ) || BOUNDS ( a0 , exc -> zp1 . n_points ) || BOUNDS ( a1 , exc -> zp1 . n_points ) || BOUNDS ( point , exc -> zp2 . n_points )"	6510:9:230054:230275	10602319	0	True				
ANR	10602414	OrExpression	"BOUNDS ( b0 , exc -> zp0 . n_points ) || BOUNDS ( b1 , exc -> zp0 . n_points ) || BOUNDS ( a0 , exc -> zp1 . n_points ) || BOUNDS ( a1 , exc -> zp1 . n_points ) || BOUNDS ( point , exc -> zp2 . n_points )"		10602319	0		||			
ANR	10602415	CallExpression	"BOUNDS ( b0 , exc -> zp0 . n_points )"		10602319	0					
ANR	10602416	Callee	BOUNDS		10602319	0					
ANR	10602417	Identifier	BOUNDS		10602319	0					
ANR	10602418	ArgumentList	b0		10602319	1					
ANR	10602419	Argument	b0		10602319	0					
ANR	10602420	Identifier	b0		10602319	0					
ANR	10602421	Argument	exc -> zp0 . n_points		10602319	1					
ANR	10602422	MemberAccess	exc -> zp0 . n_points		10602319	0					
ANR	10602423	PtrMemberAccess	exc -> zp0		10602319	0					
ANR	10602424	Identifier	exc		10602319	0					
ANR	10602425	Identifier	zp0		10602319	1					
ANR	10602426	Identifier	n_points		10602319	1					
ANR	10602427	OrExpression	"BOUNDS ( b1 , exc -> zp0 . n_points ) || BOUNDS ( a0 , exc -> zp1 . n_points ) || BOUNDS ( a1 , exc -> zp1 . n_points ) || BOUNDS ( point , exc -> zp2 . n_points )"		10602319	1		||			
ANR	10602428	CallExpression	"BOUNDS ( b1 , exc -> zp0 . n_points )"		10602319	0					
ANR	10602429	Callee	BOUNDS		10602319	0					
ANR	10602430	Identifier	BOUNDS		10602319	0					
ANR	10602431	ArgumentList	b1		10602319	1					
ANR	10602432	Argument	b1		10602319	0					
ANR	10602433	Identifier	b1		10602319	0					
ANR	10602434	Argument	exc -> zp0 . n_points		10602319	1					
ANR	10602435	MemberAccess	exc -> zp0 . n_points		10602319	0					
ANR	10602436	PtrMemberAccess	exc -> zp0		10602319	0					
ANR	10602437	Identifier	exc		10602319	0					
ANR	10602438	Identifier	zp0		10602319	1					
ANR	10602439	Identifier	n_points		10602319	1					
ANR	10602440	OrExpression	"BOUNDS ( a0 , exc -> zp1 . n_points ) || BOUNDS ( a1 , exc -> zp1 . n_points ) || BOUNDS ( point , exc -> zp2 . n_points )"		10602319	1		||			
ANR	10602441	CallExpression	"BOUNDS ( a0 , exc -> zp1 . n_points )"		10602319	0					
ANR	10602442	Callee	BOUNDS		10602319	0					
ANR	10602443	Identifier	BOUNDS		10602319	0					
ANR	10602444	ArgumentList	a0		10602319	1					
ANR	10602445	Argument	a0		10602319	0					
ANR	10602446	Identifier	a0		10602319	0					
ANR	10602447	Argument	exc -> zp1 . n_points		10602319	1					
ANR	10602448	MemberAccess	exc -> zp1 . n_points		10602319	0					
ANR	10602449	PtrMemberAccess	exc -> zp1		10602319	0					
ANR	10602450	Identifier	exc		10602319	0					
ANR	10602451	Identifier	zp1		10602319	1					
ANR	10602452	Identifier	n_points		10602319	1					
ANR	10602453	OrExpression	"BOUNDS ( a1 , exc -> zp1 . n_points ) || BOUNDS ( point , exc -> zp2 . n_points )"		10602319	1		||			
ANR	10602454	CallExpression	"BOUNDS ( a1 , exc -> zp1 . n_points )"		10602319	0					
ANR	10602455	Callee	BOUNDS		10602319	0					
ANR	10602456	Identifier	BOUNDS		10602319	0					
ANR	10602457	ArgumentList	a1		10602319	1					
ANR	10602458	Argument	a1		10602319	0					
ANR	10602459	Identifier	a1		10602319	0					
ANR	10602460	Argument	exc -> zp1 . n_points		10602319	1					
ANR	10602461	MemberAccess	exc -> zp1 . n_points		10602319	0					
ANR	10602462	PtrMemberAccess	exc -> zp1		10602319	0					
ANR	10602463	Identifier	exc		10602319	0					
ANR	10602464	Identifier	zp1		10602319	1					
ANR	10602465	Identifier	n_points		10602319	1					
ANR	10602466	CallExpression	"BOUNDS ( point , exc -> zp2 . n_points )"		10602319	1					
ANR	10602467	Callee	BOUNDS		10602319	0					
ANR	10602468	Identifier	BOUNDS		10602319	0					
ANR	10602469	ArgumentList	point		10602319	1					
ANR	10602470	Argument	point		10602319	0					
ANR	10602471	Identifier	point		10602319	0					
ANR	10602472	Argument	exc -> zp2 . n_points		10602319	1					
ANR	10602473	MemberAccess	exc -> zp2 . n_points		10602319	0					
ANR	10602474	PtrMemberAccess	exc -> zp2		10602319	0					
ANR	10602475	Identifier	exc		10602319	0					
ANR	10602476	Identifier	zp2		10602319	1					
ANR	10602477	Identifier	n_points		10602319	1					
ANR	10602478	CompoundStatement		29:4:625:625	10602319	1					
ANR	10602479	IfStatement	if ( exc -> pedantic_hinting )		10602319	0					
ANR	10602480	Condition	exc -> pedantic_hinting	6516:11:230296:230316	10602319	0	True				
ANR	10602481	PtrMemberAccess	exc -> pedantic_hinting		10602319	0					
ANR	10602482	Identifier	exc		10602319	0					
ANR	10602483	Identifier	pedantic_hinting		10602319	1					
ANR	10602484	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	6517:8:230328:230370	10602319	1	True				
ANR	10602485	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10602319	0		=			
ANR	10602486	PtrMemberAccess	exc -> error		10602319	0					
ANR	10602487	Identifier	exc		10602319	0					
ANR	10602488	Identifier	error		10602319	1					
ANR	10602489	CallExpression	FT_THROW ( Invalid_Reference )		10602319	1					
ANR	10602490	Callee	FT_THROW		10602319	0					
ANR	10602491	Identifier	FT_THROW		10602319	0					
ANR	10602492	ArgumentList	Invalid_Reference		10602319	1					
ANR	10602493	Argument	Invalid_Reference		10602319	0					
ANR	10602494	Identifier	Invalid_Reference		10602319	0					
ANR	10602495	ReturnStatement	return ;	6518:6:230378:230384	10602319	1	True				
ANR	10602496	ExpressionStatement	"dbx = SUB_LONG ( exc -> zp0 . cur [ b1 ] . x , exc -> zp0 . cur [ b0 ] . x )"	6523:4:230422:230478	10602319	11	True				
ANR	10602497	AssignmentExpression	"dbx = SUB_LONG ( exc -> zp0 . cur [ b1 ] . x , exc -> zp0 . cur [ b0 ] . x )"		10602319	0		=			
ANR	10602498	Identifier	dbx		10602319	0					
ANR	10602499	CallExpression	"SUB_LONG ( exc -> zp0 . cur [ b1 ] . x , exc -> zp0 . cur [ b0 ] . x )"		10602319	1					
ANR	10602500	Callee	SUB_LONG		10602319	0					
ANR	10602501	Identifier	SUB_LONG		10602319	0					
ANR	10602502	ArgumentList	exc -> zp0 . cur [ b1 ] . x		10602319	1					
ANR	10602503	Argument	exc -> zp0 . cur [ b1 ] . x		10602319	0					
ANR	10602504	MemberAccess	exc -> zp0 . cur [ b1 ] . x		10602319	0					
ANR	10602505	ArrayIndexing	exc -> zp0 . cur [ b1 ]		10602319	0					
ANR	10602506	MemberAccess	exc -> zp0 . cur		10602319	0					
ANR	10602507	PtrMemberAccess	exc -> zp0		10602319	0					
ANR	10602508	Identifier	exc		10602319	0					
ANR	10602509	Identifier	zp0		10602319	1					
ANR	10602510	Identifier	cur		10602319	1					
ANR	10602511	Identifier	b1		10602319	1					
ANR	10602512	Identifier	x		10602319	1					
ANR	10602513	Argument	exc -> zp0 . cur [ b0 ] . x		10602319	1					
ANR	10602514	MemberAccess	exc -> zp0 . cur [ b0 ] . x		10602319	0					
ANR	10602515	ArrayIndexing	exc -> zp0 . cur [ b0 ]		10602319	0					
ANR	10602516	MemberAccess	exc -> zp0 . cur		10602319	0					
ANR	10602517	PtrMemberAccess	exc -> zp0		10602319	0					
ANR	10602518	Identifier	exc		10602319	0					
ANR	10602519	Identifier	zp0		10602319	1					
ANR	10602520	Identifier	cur		10602319	1					
ANR	10602521	Identifier	b0		10602319	1					
ANR	10602522	Identifier	x		10602319	1					
ANR	10602523	ExpressionStatement	"dby = SUB_LONG ( exc -> zp0 . cur [ b1 ] . y , exc -> zp0 . cur [ b0 ] . y )"	6524:4:230484:230540	10602319	12	True				
ANR	10602524	AssignmentExpression	"dby = SUB_LONG ( exc -> zp0 . cur [ b1 ] . y , exc -> zp0 . cur [ b0 ] . y )"		10602319	0		=			
ANR	10602525	Identifier	dby		10602319	0					
ANR	10602526	CallExpression	"SUB_LONG ( exc -> zp0 . cur [ b1 ] . y , exc -> zp0 . cur [ b0 ] . y )"		10602319	1					
ANR	10602527	Callee	SUB_LONG		10602319	0					
ANR	10602528	Identifier	SUB_LONG		10602319	0					
ANR	10602529	ArgumentList	exc -> zp0 . cur [ b1 ] . y		10602319	1					
ANR	10602530	Argument	exc -> zp0 . cur [ b1 ] . y		10602319	0					
ANR	10602531	MemberAccess	exc -> zp0 . cur [ b1 ] . y		10602319	0					
ANR	10602532	ArrayIndexing	exc -> zp0 . cur [ b1 ]		10602319	0					
ANR	10602533	MemberAccess	exc -> zp0 . cur		10602319	0					
ANR	10602534	PtrMemberAccess	exc -> zp0		10602319	0					
ANR	10602535	Identifier	exc		10602319	0					
ANR	10602536	Identifier	zp0		10602319	1					
ANR	10602537	Identifier	cur		10602319	1					
ANR	10602538	Identifier	b1		10602319	1					
ANR	10602539	Identifier	y		10602319	1					
ANR	10602540	Argument	exc -> zp0 . cur [ b0 ] . y		10602319	1					
ANR	10602541	MemberAccess	exc -> zp0 . cur [ b0 ] . y		10602319	0					
ANR	10602542	ArrayIndexing	exc -> zp0 . cur [ b0 ]		10602319	0					
ANR	10602543	MemberAccess	exc -> zp0 . cur		10602319	0					
ANR	10602544	PtrMemberAccess	exc -> zp0		10602319	0					
ANR	10602545	Identifier	exc		10602319	0					
ANR	10602546	Identifier	zp0		10602319	1					
ANR	10602547	Identifier	cur		10602319	1					
ANR	10602548	Identifier	b0		10602319	1					
ANR	10602549	Identifier	y		10602319	1					
ANR	10602550	ExpressionStatement	"dax = SUB_LONG ( exc -> zp1 . cur [ a1 ] . x , exc -> zp1 . cur [ a0 ] . x )"	6526:4:230547:230603	10602319	13	True				
ANR	10602551	AssignmentExpression	"dax = SUB_LONG ( exc -> zp1 . cur [ a1 ] . x , exc -> zp1 . cur [ a0 ] . x )"		10602319	0		=			
ANR	10602552	Identifier	dax		10602319	0					
ANR	10602553	CallExpression	"SUB_LONG ( exc -> zp1 . cur [ a1 ] . x , exc -> zp1 . cur [ a0 ] . x )"		10602319	1					
ANR	10602554	Callee	SUB_LONG		10602319	0					
ANR	10602555	Identifier	SUB_LONG		10602319	0					
ANR	10602556	ArgumentList	exc -> zp1 . cur [ a1 ] . x		10602319	1					
ANR	10602557	Argument	exc -> zp1 . cur [ a1 ] . x		10602319	0					
ANR	10602558	MemberAccess	exc -> zp1 . cur [ a1 ] . x		10602319	0					
ANR	10602559	ArrayIndexing	exc -> zp1 . cur [ a1 ]		10602319	0					
ANR	10602560	MemberAccess	exc -> zp1 . cur		10602319	0					
ANR	10602561	PtrMemberAccess	exc -> zp1		10602319	0					
ANR	10602562	Identifier	exc		10602319	0					
ANR	10602563	Identifier	zp1		10602319	1					
ANR	10602564	Identifier	cur		10602319	1					
ANR	10602565	Identifier	a1		10602319	1					
ANR	10602566	Identifier	x		10602319	1					
ANR	10602567	Argument	exc -> zp1 . cur [ a0 ] . x		10602319	1					
ANR	10602568	MemberAccess	exc -> zp1 . cur [ a0 ] . x		10602319	0					
ANR	10602569	ArrayIndexing	exc -> zp1 . cur [ a0 ]		10602319	0					
ANR	10602570	MemberAccess	exc -> zp1 . cur		10602319	0					
ANR	10602571	PtrMemberAccess	exc -> zp1		10602319	0					
ANR	10602572	Identifier	exc		10602319	0					
ANR	10602573	Identifier	zp1		10602319	1					
ANR	10602574	Identifier	cur		10602319	1					
ANR	10602575	Identifier	a0		10602319	1					
ANR	10602576	Identifier	x		10602319	1					
ANR	10602577	ExpressionStatement	"day = SUB_LONG ( exc -> zp1 . cur [ a1 ] . y , exc -> zp1 . cur [ a0 ] . y )"	6527:4:230609:230665	10602319	14	True				
ANR	10602578	AssignmentExpression	"day = SUB_LONG ( exc -> zp1 . cur [ a1 ] . y , exc -> zp1 . cur [ a0 ] . y )"		10602319	0		=			
ANR	10602579	Identifier	day		10602319	0					
ANR	10602580	CallExpression	"SUB_LONG ( exc -> zp1 . cur [ a1 ] . y , exc -> zp1 . cur [ a0 ] . y )"		10602319	1					
ANR	10602581	Callee	SUB_LONG		10602319	0					
ANR	10602582	Identifier	SUB_LONG		10602319	0					
ANR	10602583	ArgumentList	exc -> zp1 . cur [ a1 ] . y		10602319	1					
ANR	10602584	Argument	exc -> zp1 . cur [ a1 ] . y		10602319	0					
ANR	10602585	MemberAccess	exc -> zp1 . cur [ a1 ] . y		10602319	0					
ANR	10602586	ArrayIndexing	exc -> zp1 . cur [ a1 ]		10602319	0					
ANR	10602587	MemberAccess	exc -> zp1 . cur		10602319	0					
ANR	10602588	PtrMemberAccess	exc -> zp1		10602319	0					
ANR	10602589	Identifier	exc		10602319	0					
ANR	10602590	Identifier	zp1		10602319	1					
ANR	10602591	Identifier	cur		10602319	1					
ANR	10602592	Identifier	a1		10602319	1					
ANR	10602593	Identifier	y		10602319	1					
ANR	10602594	Argument	exc -> zp1 . cur [ a0 ] . y		10602319	1					
ANR	10602595	MemberAccess	exc -> zp1 . cur [ a0 ] . y		10602319	0					
ANR	10602596	ArrayIndexing	exc -> zp1 . cur [ a0 ]		10602319	0					
ANR	10602597	MemberAccess	exc -> zp1 . cur		10602319	0					
ANR	10602598	PtrMemberAccess	exc -> zp1		10602319	0					
ANR	10602599	Identifier	exc		10602319	0					
ANR	10602600	Identifier	zp1		10602319	1					
ANR	10602601	Identifier	cur		10602319	1					
ANR	10602602	Identifier	a0		10602319	1					
ANR	10602603	Identifier	y		10602319	1					
ANR	10602604	ExpressionStatement	"dx = SUB_LONG ( exc -> zp0 . cur [ b0 ] . x , exc -> zp1 . cur [ a0 ] . x )"	6529:4:230672:230727	10602319	15	True				
ANR	10602605	AssignmentExpression	"dx = SUB_LONG ( exc -> zp0 . cur [ b0 ] . x , exc -> zp1 . cur [ a0 ] . x )"		10602319	0		=			
ANR	10602606	Identifier	dx		10602319	0					
ANR	10602607	CallExpression	"SUB_LONG ( exc -> zp0 . cur [ b0 ] . x , exc -> zp1 . cur [ a0 ] . x )"		10602319	1					
ANR	10602608	Callee	SUB_LONG		10602319	0					
ANR	10602609	Identifier	SUB_LONG		10602319	0					
ANR	10602610	ArgumentList	exc -> zp0 . cur [ b0 ] . x		10602319	1					
ANR	10602611	Argument	exc -> zp0 . cur [ b0 ] . x		10602319	0					
ANR	10602612	MemberAccess	exc -> zp0 . cur [ b0 ] . x		10602319	0					
ANR	10602613	ArrayIndexing	exc -> zp0 . cur [ b0 ]		10602319	0					
ANR	10602614	MemberAccess	exc -> zp0 . cur		10602319	0					
ANR	10602615	PtrMemberAccess	exc -> zp0		10602319	0					
ANR	10602616	Identifier	exc		10602319	0					
ANR	10602617	Identifier	zp0		10602319	1					
ANR	10602618	Identifier	cur		10602319	1					
ANR	10602619	Identifier	b0		10602319	1					
ANR	10602620	Identifier	x		10602319	1					
ANR	10602621	Argument	exc -> zp1 . cur [ a0 ] . x		10602319	1					
ANR	10602622	MemberAccess	exc -> zp1 . cur [ a0 ] . x		10602319	0					
ANR	10602623	ArrayIndexing	exc -> zp1 . cur [ a0 ]		10602319	0					
ANR	10602624	MemberAccess	exc -> zp1 . cur		10602319	0					
ANR	10602625	PtrMemberAccess	exc -> zp1		10602319	0					
ANR	10602626	Identifier	exc		10602319	0					
ANR	10602627	Identifier	zp1		10602319	1					
ANR	10602628	Identifier	cur		10602319	1					
ANR	10602629	Identifier	a0		10602319	1					
ANR	10602630	Identifier	x		10602319	1					
ANR	10602631	ExpressionStatement	"dy = SUB_LONG ( exc -> zp0 . cur [ b0 ] . y , exc -> zp1 . cur [ a0 ] . y )"	6530:4:230733:230788	10602319	16	True				
ANR	10602632	AssignmentExpression	"dy = SUB_LONG ( exc -> zp0 . cur [ b0 ] . y , exc -> zp1 . cur [ a0 ] . y )"		10602319	0		=			
ANR	10602633	Identifier	dy		10602319	0					
ANR	10602634	CallExpression	"SUB_LONG ( exc -> zp0 . cur [ b0 ] . y , exc -> zp1 . cur [ a0 ] . y )"		10602319	1					
ANR	10602635	Callee	SUB_LONG		10602319	0					
ANR	10602636	Identifier	SUB_LONG		10602319	0					
ANR	10602637	ArgumentList	exc -> zp0 . cur [ b0 ] . y		10602319	1					
ANR	10602638	Argument	exc -> zp0 . cur [ b0 ] . y		10602319	0					
ANR	10602639	MemberAccess	exc -> zp0 . cur [ b0 ] . y		10602319	0					
ANR	10602640	ArrayIndexing	exc -> zp0 . cur [ b0 ]		10602319	0					
ANR	10602641	MemberAccess	exc -> zp0 . cur		10602319	0					
ANR	10602642	PtrMemberAccess	exc -> zp0		10602319	0					
ANR	10602643	Identifier	exc		10602319	0					
ANR	10602644	Identifier	zp0		10602319	1					
ANR	10602645	Identifier	cur		10602319	1					
ANR	10602646	Identifier	b0		10602319	1					
ANR	10602647	Identifier	y		10602319	1					
ANR	10602648	Argument	exc -> zp1 . cur [ a0 ] . y		10602319	1					
ANR	10602649	MemberAccess	exc -> zp1 . cur [ a0 ] . y		10602319	0					
ANR	10602650	ArrayIndexing	exc -> zp1 . cur [ a0 ]		10602319	0					
ANR	10602651	MemberAccess	exc -> zp1 . cur		10602319	0					
ANR	10602652	PtrMemberAccess	exc -> zp1		10602319	0					
ANR	10602653	Identifier	exc		10602319	0					
ANR	10602654	Identifier	zp1		10602319	1					
ANR	10602655	Identifier	cur		10602319	1					
ANR	10602656	Identifier	a0		10602319	1					
ANR	10602657	Identifier	y		10602319	1					
ANR	10602658	ExpressionStatement	"discriminant = ADD_LONG ( FT_MulDiv ( dax , NEG_LONG ( dby ) , 0x40 ) , FT_MulDiv ( day , dbx , 0x40 ) )"	6532:4:230795:230919	10602319	17	True				
ANR	10602659	AssignmentExpression	"discriminant = ADD_LONG ( FT_MulDiv ( dax , NEG_LONG ( dby ) , 0x40 ) , FT_MulDiv ( day , dbx , 0x40 ) )"		10602319	0		=			
ANR	10602660	Identifier	discriminant		10602319	0					
ANR	10602661	CallExpression	"ADD_LONG ( FT_MulDiv ( dax , NEG_LONG ( dby ) , 0x40 ) , FT_MulDiv ( day , dbx , 0x40 ) )"		10602319	1					
ANR	10602662	Callee	ADD_LONG		10602319	0					
ANR	10602663	Identifier	ADD_LONG		10602319	0					
ANR	10602664	ArgumentList	"FT_MulDiv ( dax , NEG_LONG ( dby ) , 0x40 )"		10602319	1					
ANR	10602665	Argument	"FT_MulDiv ( dax , NEG_LONG ( dby ) , 0x40 )"		10602319	0					
ANR	10602666	CallExpression	"FT_MulDiv ( dax , NEG_LONG ( dby ) , 0x40 )"		10602319	0					
ANR	10602667	Callee	FT_MulDiv		10602319	0					
ANR	10602668	Identifier	FT_MulDiv		10602319	0					
ANR	10602669	ArgumentList	dax		10602319	1					
ANR	10602670	Argument	dax		10602319	0					
ANR	10602671	Identifier	dax		10602319	0					
ANR	10602672	Argument	NEG_LONG ( dby )		10602319	1					
ANR	10602673	CallExpression	NEG_LONG ( dby )		10602319	0					
ANR	10602674	Callee	NEG_LONG		10602319	0					
ANR	10602675	Identifier	NEG_LONG		10602319	0					
ANR	10602676	ArgumentList	dby		10602319	1					
ANR	10602677	Argument	dby		10602319	0					
ANR	10602678	Identifier	dby		10602319	0					
ANR	10602679	Argument	0x40		10602319	2					
ANR	10602680	PrimaryExpression	0x40		10602319	0					
ANR	10602681	Argument	"FT_MulDiv ( day , dbx , 0x40 )"		10602319	1					
ANR	10602682	CallExpression	"FT_MulDiv ( day , dbx , 0x40 )"		10602319	0					
ANR	10602683	Callee	FT_MulDiv		10602319	0					
ANR	10602684	Identifier	FT_MulDiv		10602319	0					
ANR	10602685	ArgumentList	day		10602319	1					
ANR	10602686	Argument	day		10602319	0					
ANR	10602687	Identifier	day		10602319	0					
ANR	10602688	Argument	dbx		10602319	1					
ANR	10602689	Identifier	dbx		10602319	0					
ANR	10602690	Argument	0x40		10602319	2					
ANR	10602691	PrimaryExpression	0x40		10602319	0					
ANR	10602692	ExpressionStatement	"dotproduct = ADD_LONG ( FT_MulDiv ( dax , dbx , 0x40 ) , FT_MulDiv ( day , dby , 0x40 ) )"	6534:4:230925:231037	10602319	18	True				
ANR	10602693	AssignmentExpression	"dotproduct = ADD_LONG ( FT_MulDiv ( dax , dbx , 0x40 ) , FT_MulDiv ( day , dby , 0x40 ) )"		10602319	0		=			
ANR	10602694	Identifier	dotproduct		10602319	0					
ANR	10602695	CallExpression	"ADD_LONG ( FT_MulDiv ( dax , dbx , 0x40 ) , FT_MulDiv ( day , dby , 0x40 ) )"		10602319	1					
ANR	10602696	Callee	ADD_LONG		10602319	0					
ANR	10602697	Identifier	ADD_LONG		10602319	0					
ANR	10602698	ArgumentList	"FT_MulDiv ( dax , dbx , 0x40 )"		10602319	1					
ANR	10602699	Argument	"FT_MulDiv ( dax , dbx , 0x40 )"		10602319	0					
ANR	10602700	CallExpression	"FT_MulDiv ( dax , dbx , 0x40 )"		10602319	0					
ANR	10602701	Callee	FT_MulDiv		10602319	0					
ANR	10602702	Identifier	FT_MulDiv		10602319	0					
ANR	10602703	ArgumentList	dax		10602319	1					
ANR	10602704	Argument	dax		10602319	0					
ANR	10602705	Identifier	dax		10602319	0					
ANR	10602706	Argument	dbx		10602319	1					
ANR	10602707	Identifier	dbx		10602319	0					
ANR	10602708	Argument	0x40		10602319	2					
ANR	10602709	PrimaryExpression	0x40		10602319	0					
ANR	10602710	Argument	"FT_MulDiv ( day , dby , 0x40 )"		10602319	1					
ANR	10602711	CallExpression	"FT_MulDiv ( day , dby , 0x40 )"		10602319	0					
ANR	10602712	Callee	FT_MulDiv		10602319	0					
ANR	10602713	Identifier	FT_MulDiv		10602319	0					
ANR	10602714	ArgumentList	day		10602319	1					
ANR	10602715	Argument	day		10602319	0					
ANR	10602716	Identifier	day		10602319	0					
ANR	10602717	Argument	dby		10602319	1					
ANR	10602718	Identifier	dby		10602319	0					
ANR	10602719	Argument	0x40		10602319	2					
ANR	10602720	PrimaryExpression	0x40		10602319	0					
ANR	10602721	IfStatement	"if ( MUL_LONG ( 19 , FT_ABS ( discriminant ) ) > FT_ABS ( dotproduct ) )"		10602319	19					
ANR	10602722	Condition	"MUL_LONG ( 19 , FT_ABS ( discriminant ) ) > FT_ABS ( dotproduct )"	6545:9:231657:231717	10602319	0	True				
ANR	10602723	RelationalExpression	"MUL_LONG ( 19 , FT_ABS ( discriminant ) ) > FT_ABS ( dotproduct )"		10602319	0		>			
ANR	10602724	CallExpression	"MUL_LONG ( 19 , FT_ABS ( discriminant ) )"		10602319	0					
ANR	10602725	Callee	MUL_LONG		10602319	0					
ANR	10602726	Identifier	MUL_LONG		10602319	0					
ANR	10602727	ArgumentList	19		10602319	1					
ANR	10602728	Argument	19		10602319	0					
ANR	10602729	PrimaryExpression	19		10602319	0					
ANR	10602730	Argument	FT_ABS ( discriminant )		10602319	1					
ANR	10602731	CallExpression	FT_ABS ( discriminant )		10602319	0					
ANR	10602732	Callee	FT_ABS		10602319	0					
ANR	10602733	Identifier	FT_ABS		10602319	0					
ANR	10602734	ArgumentList	discriminant		10602319	1					
ANR	10602735	Argument	discriminant		10602319	0					
ANR	10602736	Identifier	discriminant		10602319	0					
ANR	10602737	CallExpression	FT_ABS ( dotproduct )		10602319	1					
ANR	10602738	Callee	FT_ABS		10602319	0					
ANR	10602739	Identifier	FT_ABS		10602319	0					
ANR	10602740	ArgumentList	dotproduct		10602319	1					
ANR	10602741	Argument	dotproduct		10602319	0					
ANR	10602742	Identifier	dotproduct		10602319	0					
ANR	10602743	CompoundStatement		60:4:2067:2067	10602319	1					
ANR	10602744	ExpressionStatement	"val = ADD_LONG ( FT_MulDiv ( dx , NEG_LONG ( dby ) , 0x40 ) , FT_MulDiv ( dy , dbx , 0x40 ) )"	6547:6:231733:231839	10602319	0	True				
ANR	10602745	AssignmentExpression	"val = ADD_LONG ( FT_MulDiv ( dx , NEG_LONG ( dby ) , 0x40 ) , FT_MulDiv ( dy , dbx , 0x40 ) )"		10602319	0		=			
ANR	10602746	Identifier	val		10602319	0					
ANR	10602747	CallExpression	"ADD_LONG ( FT_MulDiv ( dx , NEG_LONG ( dby ) , 0x40 ) , FT_MulDiv ( dy , dbx , 0x40 ) )"		10602319	1					
ANR	10602748	Callee	ADD_LONG		10602319	0					
ANR	10602749	Identifier	ADD_LONG		10602319	0					
ANR	10602750	ArgumentList	"FT_MulDiv ( dx , NEG_LONG ( dby ) , 0x40 )"		10602319	1					
ANR	10602751	Argument	"FT_MulDiv ( dx , NEG_LONG ( dby ) , 0x40 )"		10602319	0					
ANR	10602752	CallExpression	"FT_MulDiv ( dx , NEG_LONG ( dby ) , 0x40 )"		10602319	0					
ANR	10602753	Callee	FT_MulDiv		10602319	0					
ANR	10602754	Identifier	FT_MulDiv		10602319	0					
ANR	10602755	ArgumentList	dx		10602319	1					
ANR	10602756	Argument	dx		10602319	0					
ANR	10602757	Identifier	dx		10602319	0					
ANR	10602758	Argument	NEG_LONG ( dby )		10602319	1					
ANR	10602759	CallExpression	NEG_LONG ( dby )		10602319	0					
ANR	10602760	Callee	NEG_LONG		10602319	0					
ANR	10602761	Identifier	NEG_LONG		10602319	0					
ANR	10602762	ArgumentList	dby		10602319	1					
ANR	10602763	Argument	dby		10602319	0					
ANR	10602764	Identifier	dby		10602319	0					
ANR	10602765	Argument	0x40		10602319	2					
ANR	10602766	PrimaryExpression	0x40		10602319	0					
ANR	10602767	Argument	"FT_MulDiv ( dy , dbx , 0x40 )"		10602319	1					
ANR	10602768	CallExpression	"FT_MulDiv ( dy , dbx , 0x40 )"		10602319	0					
ANR	10602769	Callee	FT_MulDiv		10602319	0					
ANR	10602770	Identifier	FT_MulDiv		10602319	0					
ANR	10602771	ArgumentList	dy		10602319	1					
ANR	10602772	Argument	dy		10602319	0					
ANR	10602773	Identifier	dy		10602319	0					
ANR	10602774	Argument	dbx		10602319	1					
ANR	10602775	Identifier	dbx		10602319	0					
ANR	10602776	Argument	0x40		10602319	2					
ANR	10602777	PrimaryExpression	0x40		10602319	0					
ANR	10602778	ExpressionStatement	"R . x = FT_MulDiv ( val , dax , discriminant )"	6550:6:231848:231889	10602319	1	True				
ANR	10602779	AssignmentExpression	"R . x = FT_MulDiv ( val , dax , discriminant )"		10602319	0		=			
ANR	10602780	MemberAccess	R . x		10602319	0					
ANR	10602781	Identifier	R		10602319	0					
ANR	10602782	Identifier	x		10602319	1					
ANR	10602783	CallExpression	"FT_MulDiv ( val , dax , discriminant )"		10602319	1					
ANR	10602784	Callee	FT_MulDiv		10602319	0					
ANR	10602785	Identifier	FT_MulDiv		10602319	0					
ANR	10602786	ArgumentList	val		10602319	1					
ANR	10602787	Argument	val		10602319	0					
ANR	10602788	Identifier	val		10602319	0					
ANR	10602789	Argument	dax		10602319	1					
ANR	10602790	Identifier	dax		10602319	0					
ANR	10602791	Argument	discriminant		10602319	2					
ANR	10602792	Identifier	discriminant		10602319	0					
ANR	10602793	ExpressionStatement	"R . y = FT_MulDiv ( val , day , discriminant )"	6551:6:231897:231938	10602319	2	True				
ANR	10602794	AssignmentExpression	"R . y = FT_MulDiv ( val , day , discriminant )"		10602319	0		=			
ANR	10602795	MemberAccess	R . y		10602319	0					
ANR	10602796	Identifier	R		10602319	0					
ANR	10602797	Identifier	y		10602319	1					
ANR	10602798	CallExpression	"FT_MulDiv ( val , day , discriminant )"		10602319	1					
ANR	10602799	Callee	FT_MulDiv		10602319	0					
ANR	10602800	Identifier	FT_MulDiv		10602319	0					
ANR	10602801	ArgumentList	val		10602319	1					
ANR	10602802	Argument	val		10602319	0					
ANR	10602803	Identifier	val		10602319	0					
ANR	10602804	Argument	day		10602319	1					
ANR	10602805	Identifier	day		10602319	0					
ANR	10602806	Argument	discriminant		10602319	2					
ANR	10602807	Identifier	discriminant		10602319	0					
ANR	10602808	ExpressionStatement	"exc -> zp2 . cur [ point ] . x = ADD_LONG ( exc -> zp1 . cur [ a0 ] . x , R . x )"	6554:6:232013:232072	10602319	3	True				
ANR	10602809	AssignmentExpression	"exc -> zp2 . cur [ point ] . x = ADD_LONG ( exc -> zp1 . cur [ a0 ] . x , R . x )"		10602319	0		=			
ANR	10602810	MemberAccess	exc -> zp2 . cur [ point ] . x		10602319	0					
ANR	10602811	ArrayIndexing	exc -> zp2 . cur [ point ]		10602319	0					
ANR	10602812	MemberAccess	exc -> zp2 . cur		10602319	0					
ANR	10602813	PtrMemberAccess	exc -> zp2		10602319	0					
ANR	10602814	Identifier	exc		10602319	0					
ANR	10602815	Identifier	zp2		10602319	1					
ANR	10602816	Identifier	cur		10602319	1					
ANR	10602817	Identifier	point		10602319	1					
ANR	10602818	Identifier	x		10602319	1					
ANR	10602819	CallExpression	"ADD_LONG ( exc -> zp1 . cur [ a0 ] . x , R . x )"		10602319	1					
ANR	10602820	Callee	ADD_LONG		10602319	0					
ANR	10602821	Identifier	ADD_LONG		10602319	0					
ANR	10602822	ArgumentList	exc -> zp1 . cur [ a0 ] . x		10602319	1					
ANR	10602823	Argument	exc -> zp1 . cur [ a0 ] . x		10602319	0					
ANR	10602824	MemberAccess	exc -> zp1 . cur [ a0 ] . x		10602319	0					
ANR	10602825	ArrayIndexing	exc -> zp1 . cur [ a0 ]		10602319	0					
ANR	10602826	MemberAccess	exc -> zp1 . cur		10602319	0					
ANR	10602827	PtrMemberAccess	exc -> zp1		10602319	0					
ANR	10602828	Identifier	exc		10602319	0					
ANR	10602829	Identifier	zp1		10602319	1					
ANR	10602830	Identifier	cur		10602319	1					
ANR	10602831	Identifier	a0		10602319	1					
ANR	10602832	Identifier	x		10602319	1					
ANR	10602833	Argument	R . x		10602319	1					
ANR	10602834	MemberAccess	R . x		10602319	0					
ANR	10602835	Identifier	R		10602319	0					
ANR	10602836	Identifier	x		10602319	1					
ANR	10602837	ExpressionStatement	"exc -> zp2 . cur [ point ] . y = ADD_LONG ( exc -> zp1 . cur [ a0 ] . y , R . y )"	6555:6:232080:232139	10602319	4	True				
ANR	10602838	AssignmentExpression	"exc -> zp2 . cur [ point ] . y = ADD_LONG ( exc -> zp1 . cur [ a0 ] . y , R . y )"		10602319	0		=			
ANR	10602839	MemberAccess	exc -> zp2 . cur [ point ] . y		10602319	0					
ANR	10602840	ArrayIndexing	exc -> zp2 . cur [ point ]		10602319	0					
ANR	10602841	MemberAccess	exc -> zp2 . cur		10602319	0					
ANR	10602842	PtrMemberAccess	exc -> zp2		10602319	0					
ANR	10602843	Identifier	exc		10602319	0					
ANR	10602844	Identifier	zp2		10602319	1					
ANR	10602845	Identifier	cur		10602319	1					
ANR	10602846	Identifier	point		10602319	1					
ANR	10602847	Identifier	y		10602319	1					
ANR	10602848	CallExpression	"ADD_LONG ( exc -> zp1 . cur [ a0 ] . y , R . y )"		10602319	1					
ANR	10602849	Callee	ADD_LONG		10602319	0					
ANR	10602850	Identifier	ADD_LONG		10602319	0					
ANR	10602851	ArgumentList	exc -> zp1 . cur [ a0 ] . y		10602319	1					
ANR	10602852	Argument	exc -> zp1 . cur [ a0 ] . y		10602319	0					
ANR	10602853	MemberAccess	exc -> zp1 . cur [ a0 ] . y		10602319	0					
ANR	10602854	ArrayIndexing	exc -> zp1 . cur [ a0 ]		10602319	0					
ANR	10602855	MemberAccess	exc -> zp1 . cur		10602319	0					
ANR	10602856	PtrMemberAccess	exc -> zp1		10602319	0					
ANR	10602857	Identifier	exc		10602319	0					
ANR	10602858	Identifier	zp1		10602319	1					
ANR	10602859	Identifier	cur		10602319	1					
ANR	10602860	Identifier	a0		10602319	1					
ANR	10602861	Identifier	y		10602319	1					
ANR	10602862	Argument	R . y		10602319	1					
ANR	10602863	MemberAccess	R . y		10602319	0					
ANR	10602864	Identifier	R		10602319	0					
ANR	10602865	Identifier	y		10602319	1					
ANR	10602866	ElseStatement	else		10602319	0					
ANR	10602867	CompoundStatement		72:4:2502:2502	10602319	0					
ANR	10602868	ExpressionStatement	"exc -> zp2 . cur [ point ] . x = ADD_LONG ( ADD_LONG ( exc -> zp1 . cur [ a0 ] . x , exc -> zp1 . cur [ a1 ] . x ) , ADD_LONG ( exc -> zp0 . cur [ b0 ] . x , exc -> zp0 . cur [ b1 ] . x ) ) / 4"	6562:6:232295:232463	10602319	0	True				
ANR	10602869	AssignmentExpression	"exc -> zp2 . cur [ point ] . x = ADD_LONG ( ADD_LONG ( exc -> zp1 . cur [ a0 ] . x , exc -> zp1 . cur [ a1 ] . x ) , ADD_LONG ( exc -> zp0 . cur [ b0 ] . x , exc -> zp0 . cur [ b1 ] . x ) ) / 4"		10602319	0		=			
ANR	10602870	MemberAccess	exc -> zp2 . cur [ point ] . x		10602319	0					
ANR	10602871	ArrayIndexing	exc -> zp2 . cur [ point ]		10602319	0					
ANR	10602872	MemberAccess	exc -> zp2 . cur		10602319	0					
ANR	10602873	PtrMemberAccess	exc -> zp2		10602319	0					
ANR	10602874	Identifier	exc		10602319	0					
ANR	10602875	Identifier	zp2		10602319	1					
ANR	10602876	Identifier	cur		10602319	1					
ANR	10602877	Identifier	point		10602319	1					
ANR	10602878	Identifier	x		10602319	1					
ANR	10602879	MultiplicativeExpression	"ADD_LONG ( ADD_LONG ( exc -> zp1 . cur [ a0 ] . x , exc -> zp1 . cur [ a1 ] . x ) , ADD_LONG ( exc -> zp0 . cur [ b0 ] . x , exc -> zp0 . cur [ b1 ] . x ) ) / 4"		10602319	1		/			
ANR	10602880	CallExpression	"ADD_LONG ( ADD_LONG ( exc -> zp1 . cur [ a0 ] . x , exc -> zp1 . cur [ a1 ] . x ) , ADD_LONG ( exc -> zp0 . cur [ b0 ] . x , exc -> zp0 . cur [ b1 ] . x ) )"		10602319	0					
ANR	10602881	Callee	ADD_LONG		10602319	0					
ANR	10602882	Identifier	ADD_LONG		10602319	0					
ANR	10602883	ArgumentList	"ADD_LONG ( exc -> zp1 . cur [ a0 ] . x , exc -> zp1 . cur [ a1 ] . x )"		10602319	1					
ANR	10602884	Argument	"ADD_LONG ( exc -> zp1 . cur [ a0 ] . x , exc -> zp1 . cur [ a1 ] . x )"		10602319	0					
ANR	10602885	CallExpression	"ADD_LONG ( exc -> zp1 . cur [ a0 ] . x , exc -> zp1 . cur [ a1 ] . x )"		10602319	0					
ANR	10602886	Callee	ADD_LONG		10602319	0					
ANR	10602887	Identifier	ADD_LONG		10602319	0					
ANR	10602888	ArgumentList	exc -> zp1 . cur [ a0 ] . x		10602319	1					
ANR	10602889	Argument	exc -> zp1 . cur [ a0 ] . x		10602319	0					
ANR	10602890	MemberAccess	exc -> zp1 . cur [ a0 ] . x		10602319	0					
ANR	10602891	ArrayIndexing	exc -> zp1 . cur [ a0 ]		10602319	0					
ANR	10602892	MemberAccess	exc -> zp1 . cur		10602319	0					
ANR	10602893	PtrMemberAccess	exc -> zp1		10602319	0					
ANR	10602894	Identifier	exc		10602319	0					
ANR	10602895	Identifier	zp1		10602319	1					
ANR	10602896	Identifier	cur		10602319	1					
ANR	10602897	Identifier	a0		10602319	1					
ANR	10602898	Identifier	x		10602319	1					
ANR	10602899	Argument	exc -> zp1 . cur [ a1 ] . x		10602319	1					
ANR	10602900	MemberAccess	exc -> zp1 . cur [ a1 ] . x		10602319	0					
ANR	10602901	ArrayIndexing	exc -> zp1 . cur [ a1 ]		10602319	0					
ANR	10602902	MemberAccess	exc -> zp1 . cur		10602319	0					
ANR	10602903	PtrMemberAccess	exc -> zp1		10602319	0					
ANR	10602904	Identifier	exc		10602319	0					
ANR	10602905	Identifier	zp1		10602319	1					
ANR	10602906	Identifier	cur		10602319	1					
ANR	10602907	Identifier	a1		10602319	1					
ANR	10602908	Identifier	x		10602319	1					
ANR	10602909	Argument	"ADD_LONG ( exc -> zp0 . cur [ b0 ] . x , exc -> zp0 . cur [ b1 ] . x )"		10602319	1					
ANR	10602910	CallExpression	"ADD_LONG ( exc -> zp0 . cur [ b0 ] . x , exc -> zp0 . cur [ b1 ] . x )"		10602319	0					
ANR	10602911	Callee	ADD_LONG		10602319	0					
ANR	10602912	Identifier	ADD_LONG		10602319	0					
ANR	10602913	ArgumentList	exc -> zp0 . cur [ b0 ] . x		10602319	1					
ANR	10602914	Argument	exc -> zp0 . cur [ b0 ] . x		10602319	0					
ANR	10602915	MemberAccess	exc -> zp0 . cur [ b0 ] . x		10602319	0					
ANR	10602916	ArrayIndexing	exc -> zp0 . cur [ b0 ]		10602319	0					
ANR	10602917	MemberAccess	exc -> zp0 . cur		10602319	0					
ANR	10602918	PtrMemberAccess	exc -> zp0		10602319	0					
ANR	10602919	Identifier	exc		10602319	0					
ANR	10602920	Identifier	zp0		10602319	1					
ANR	10602921	Identifier	cur		10602319	1					
ANR	10602922	Identifier	b0		10602319	1					
ANR	10602923	Identifier	x		10602319	1					
ANR	10602924	Argument	exc -> zp0 . cur [ b1 ] . x		10602319	1					
ANR	10602925	MemberAccess	exc -> zp0 . cur [ b1 ] . x		10602319	0					
ANR	10602926	ArrayIndexing	exc -> zp0 . cur [ b1 ]		10602319	0					
ANR	10602927	MemberAccess	exc -> zp0 . cur		10602319	0					
ANR	10602928	PtrMemberAccess	exc -> zp0		10602319	0					
ANR	10602929	Identifier	exc		10602319	0					
ANR	10602930	Identifier	zp0		10602319	1					
ANR	10602931	Identifier	cur		10602319	1					
ANR	10602932	Identifier	b1		10602319	1					
ANR	10602933	Identifier	x		10602319	1					
ANR	10602934	PrimaryExpression	4		10602319	1					
ANR	10602935	ExpressionStatement	"exc -> zp2 . cur [ point ] . y = ADD_LONG ( ADD_LONG ( exc -> zp1 . cur [ a0 ] . y , exc -> zp1 . cur [ a1 ] . y ) , ADD_LONG ( exc -> zp0 . cur [ b0 ] . y , exc -> zp0 . cur [ b1 ] . y ) ) / 4"	6565:6:232471:232639	10602319	1	True				
ANR	10602936	AssignmentExpression	"exc -> zp2 . cur [ point ] . y = ADD_LONG ( ADD_LONG ( exc -> zp1 . cur [ a0 ] . y , exc -> zp1 . cur [ a1 ] . y ) , ADD_LONG ( exc -> zp0 . cur [ b0 ] . y , exc -> zp0 . cur [ b1 ] . y ) ) / 4"		10602319	0		=			
ANR	10602937	MemberAccess	exc -> zp2 . cur [ point ] . y		10602319	0					
ANR	10602938	ArrayIndexing	exc -> zp2 . cur [ point ]		10602319	0					
ANR	10602939	MemberAccess	exc -> zp2 . cur		10602319	0					
ANR	10602940	PtrMemberAccess	exc -> zp2		10602319	0					
ANR	10602941	Identifier	exc		10602319	0					
ANR	10602942	Identifier	zp2		10602319	1					
ANR	10602943	Identifier	cur		10602319	1					
ANR	10602944	Identifier	point		10602319	1					
ANR	10602945	Identifier	y		10602319	1					
ANR	10602946	MultiplicativeExpression	"ADD_LONG ( ADD_LONG ( exc -> zp1 . cur [ a0 ] . y , exc -> zp1 . cur [ a1 ] . y ) , ADD_LONG ( exc -> zp0 . cur [ b0 ] . y , exc -> zp0 . cur [ b1 ] . y ) ) / 4"		10602319	1		/			
ANR	10602947	CallExpression	"ADD_LONG ( ADD_LONG ( exc -> zp1 . cur [ a0 ] . y , exc -> zp1 . cur [ a1 ] . y ) , ADD_LONG ( exc -> zp0 . cur [ b0 ] . y , exc -> zp0 . cur [ b1 ] . y ) )"		10602319	0					
ANR	10602948	Callee	ADD_LONG		10602319	0					
ANR	10602949	Identifier	ADD_LONG		10602319	0					
ANR	10602950	ArgumentList	"ADD_LONG ( exc -> zp1 . cur [ a0 ] . y , exc -> zp1 . cur [ a1 ] . y )"		10602319	1					
ANR	10602951	Argument	"ADD_LONG ( exc -> zp1 . cur [ a0 ] . y , exc -> zp1 . cur [ a1 ] . y )"		10602319	0					
ANR	10602952	CallExpression	"ADD_LONG ( exc -> zp1 . cur [ a0 ] . y , exc -> zp1 . cur [ a1 ] . y )"		10602319	0					
ANR	10602953	Callee	ADD_LONG		10602319	0					
ANR	10602954	Identifier	ADD_LONG		10602319	0					
ANR	10602955	ArgumentList	exc -> zp1 . cur [ a0 ] . y		10602319	1					
ANR	10602956	Argument	exc -> zp1 . cur [ a0 ] . y		10602319	0					
ANR	10602957	MemberAccess	exc -> zp1 . cur [ a0 ] . y		10602319	0					
ANR	10602958	ArrayIndexing	exc -> zp1 . cur [ a0 ]		10602319	0					
ANR	10602959	MemberAccess	exc -> zp1 . cur		10602319	0					
ANR	10602960	PtrMemberAccess	exc -> zp1		10602319	0					
ANR	10602961	Identifier	exc		10602319	0					
ANR	10602962	Identifier	zp1		10602319	1					
ANR	10602963	Identifier	cur		10602319	1					
ANR	10602964	Identifier	a0		10602319	1					
ANR	10602965	Identifier	y		10602319	1					
ANR	10602966	Argument	exc -> zp1 . cur [ a1 ] . y		10602319	1					
ANR	10602967	MemberAccess	exc -> zp1 . cur [ a1 ] . y		10602319	0					
ANR	10602968	ArrayIndexing	exc -> zp1 . cur [ a1 ]		10602319	0					
ANR	10602969	MemberAccess	exc -> zp1 . cur		10602319	0					
ANR	10602970	PtrMemberAccess	exc -> zp1		10602319	0					
ANR	10602971	Identifier	exc		10602319	0					
ANR	10602972	Identifier	zp1		10602319	1					
ANR	10602973	Identifier	cur		10602319	1					
ANR	10602974	Identifier	a1		10602319	1					
ANR	10602975	Identifier	y		10602319	1					
ANR	10602976	Argument	"ADD_LONG ( exc -> zp0 . cur [ b0 ] . y , exc -> zp0 . cur [ b1 ] . y )"		10602319	1					
ANR	10602977	CallExpression	"ADD_LONG ( exc -> zp0 . cur [ b0 ] . y , exc -> zp0 . cur [ b1 ] . y )"		10602319	0					
ANR	10602978	Callee	ADD_LONG		10602319	0					
ANR	10602979	Identifier	ADD_LONG		10602319	0					
ANR	10602980	ArgumentList	exc -> zp0 . cur [ b0 ] . y		10602319	1					
ANR	10602981	Argument	exc -> zp0 . cur [ b0 ] . y		10602319	0					
ANR	10602982	MemberAccess	exc -> zp0 . cur [ b0 ] . y		10602319	0					
ANR	10602983	ArrayIndexing	exc -> zp0 . cur [ b0 ]		10602319	0					
ANR	10602984	MemberAccess	exc -> zp0 . cur		10602319	0					
ANR	10602985	PtrMemberAccess	exc -> zp0		10602319	0					
ANR	10602986	Identifier	exc		10602319	0					
ANR	10602987	Identifier	zp0		10602319	1					
ANR	10602988	Identifier	cur		10602319	1					
ANR	10602989	Identifier	b0		10602319	1					
ANR	10602990	Identifier	y		10602319	1					
ANR	10602991	Argument	exc -> zp0 . cur [ b1 ] . y		10602319	1					
ANR	10602992	MemberAccess	exc -> zp0 . cur [ b1 ] . y		10602319	0					
ANR	10602993	ArrayIndexing	exc -> zp0 . cur [ b1 ]		10602319	0					
ANR	10602994	MemberAccess	exc -> zp0 . cur		10602319	0					
ANR	10602995	PtrMemberAccess	exc -> zp0		10602319	0					
ANR	10602996	Identifier	exc		10602319	0					
ANR	10602997	Identifier	zp0		10602319	1					
ANR	10602998	Identifier	cur		10602319	1					
ANR	10602999	Identifier	b1		10602319	1					
ANR	10603000	Identifier	y		10602319	1					
ANR	10603001	PrimaryExpression	4		10602319	1					
ANR	10603002	ExpressionStatement	exc -> zp2 . tags [ point ] |= FT_CURVE_TAG_TOUCH_BOTH	6570:4:232652:232699	10602319	20	True				
ANR	10603003	AssignmentExpression	exc -> zp2 . tags [ point ] |= FT_CURVE_TAG_TOUCH_BOTH		10602319	0		|=			
ANR	10603004	ArrayIndexing	exc -> zp2 . tags [ point ]		10602319	0					
ANR	10603005	MemberAccess	exc -> zp2 . tags		10602319	0					
ANR	10603006	PtrMemberAccess	exc -> zp2		10602319	0					
ANR	10603007	Identifier	exc		10602319	0					
ANR	10603008	Identifier	zp2		10602319	1					
ANR	10603009	Identifier	tags		10602319	1					
ANR	10603010	Identifier	point		10602319	1					
ANR	10603011	Identifier	FT_CURVE_TAG_TOUCH_BOTH		10602319	1					
ANR	10603012	ReturnType	static void		10602319	1					
ANR	10603013	Identifier	Ins_ISECT		10602319	2					
ANR	10603014	ParameterList	"TT_ExecContext exc , FT_Long * args"		10602319	3					
ANR	10603015	Parameter	TT_ExecContext exc	6485:13:229598:229616	10602319	0	True				
ANR	10603016	ParameterType	TT_ExecContext		10602319	0					
ANR	10603017	Identifier	exc		10602319	1					
ANR	10603018	Parameter	FT_Long * args	6486:13:229632:229651	10602319	1	True				
ANR	10603019	ParameterType	FT_Long *		10602319	0					
ANR	10603020	Identifier	args		10602319	1					
ANR	10603021	CFGEntryNode	ENTRY		10602319		True				
ANR	10603022	CFGExitNode	EXIT		10602319		True				
ANR	10603023	Symbol	exc -> zp0 . cur [ b0 ] . x		10602319						
ANR	10603024	Symbol	FT_CURVE_TAG_TOUCH_BOTH		10602319						
ANR	10603025	Symbol	MUL_LONG		10602319						
ANR	10603026	Symbol	b0		10602319						
ANR	10603027	Symbol	b1		10602319						
ANR	10603028	Symbol	* args		10602319						
ANR	10603029	Symbol	exc -> zp0 . cur [ b0 ] . y		10602319						
ANR	10603030	Symbol	* exc -> zp2 . tags		10602319						
ANR	10603031	Symbol	exc		10602319						
ANR	10603032	Symbol	Invalid_Reference		10602319						
ANR	10603033	Symbol	dx		10602319						
ANR	10603034	Symbol	dy		10602319						
ANR	10603035	Symbol	BOUNDS		10602319						
ANR	10603036	Symbol	exc -> zp1 . cur [ a1 ] . x		10602319						
ANR	10603037	Symbol	exc -> zp1 . cur [ a1 ] . y		10602319						
ANR	10603038	Symbol	dax		10602319						
ANR	10603039	Symbol	exc -> error		10602319						
ANR	10603040	Symbol	day		10602319						
ANR	10603041	Symbol	exc -> zp0 . cur		10602319						
ANR	10603042	Symbol	val		10602319						
ANR	10603043	Symbol	* point		10602319						
ANR	10603044	Symbol	exc -> zp1 . n_points		10602319						
ANR	10603045	Symbol	* exc -> zp1 . cur		10602319						
ANR	10603046	Symbol	exc -> pedantic_hinting		10602319						
ANR	10603047	Symbol	exc -> zp0 . cur [ b1 ] . y		10602319						
ANR	10603048	Symbol	exc -> zp0 . cur [ b1 ] . x		10602319						
ANR	10603049	Symbol	exc -> zp2 . tags		10602319						
ANR	10603050	Symbol	R . x		10602319						
ANR	10603051	Symbol	R . y		10602319						
ANR	10603052	Symbol	exc -> zp2 . n_points		10602319						
ANR	10603053	Symbol	* a1		10602319						
ANR	10603054	Symbol	exc -> zp1 . cur		10602319						
ANR	10603055	Symbol	* a0		10602319						
ANR	10603056	Symbol	discriminant		10602319						
ANR	10603057	Symbol	dby		10602319						
ANR	10603058	Symbol	dbx		10602319						
ANR	10603059	Symbol	* exc		10602319						
ANR	10603060	Symbol	ADD_LONG		10602319						
ANR	10603061	Symbol	SUB_LONG		10602319						
ANR	10603062	Symbol	* exc -> zp2 . cur		10602319						
ANR	10603063	Symbol	point		10602319						
ANR	10603064	Symbol	FT_MulDiv		10602319						
ANR	10603065	Symbol	exc -> zp0 . n_points		10602319						
ANR	10603066	Symbol	R		10602319						
ANR	10603067	Symbol	* b1		10602319						
ANR	10603068	Symbol	* b0		10602319						
ANR	10603069	Symbol	NEG_LONG		10602319						
ANR	10603070	Symbol	FT_ABS		10602319						
ANR	10603071	Symbol	* * exc		10602319						
ANR	10603072	Symbol	exc -> zp2 . cur		10602319						
ANR	10603073	Symbol	FT_THROW		10602319						
ANR	10603074	Symbol	a0		10602319						
ANR	10603075	Symbol	args		10602319						
ANR	10603076	Symbol	a1		10602319						
ANR	10603077	Symbol	exc -> zp2		10602319						
ANR	10603078	Symbol	exc -> zp1		10602319						
ANR	10603079	Symbol	dotproduct		10602319						
ANR	10603080	Symbol	exc -> zp0		10602319						
ANR	10603081	Symbol	* exc -> zp0		10602319						
ANR	10603082	Symbol	exc -> zp2 . cur [ point ] . y		10602319						
ANR	10603083	Symbol	* exc -> zp2		10602319						
ANR	10603084	Symbol	* exc -> zp1		10602319						
ANR	10603085	Symbol	exc -> zp2 . cur [ point ] . x		10602319						
ANR	10603086	Symbol	exc -> zp1 . cur [ a0 ] . y		10602319						
ANR	10603087	Symbol	* exc -> zp0 . cur		10602319						
ANR	10603088	Symbol	exc -> zp1 . cur [ a0 ] . x		10602319						
ANR	10603089	Function	Ins_ALIGNPTS	6580:2:233177:233768							
ANR	10603090	FunctionDef	"Ins_ALIGNPTS (TT_ExecContext exc , FT_Long * args)"		10603089	0					
ANR	10603091	CompoundStatement		6583:2:233267:233768	10603089	0					
ANR	10603092	IdentifierDeclStatement	"FT_UShort p1 , p2 ;"	6584:4:233273:233291	10603089	0	True				
ANR	10603093	IdentifierDecl	p1		10603089	0					
ANR	10603094	IdentifierDeclType	FT_UShort		10603089	0					
ANR	10603095	Identifier	p1		10603089	1					
ANR	10603096	IdentifierDecl	p2		10603089	1					
ANR	10603097	IdentifierDeclType	FT_UShort		10603089	0					
ANR	10603098	Identifier	p2		10603089	1					
ANR	10603099	IdentifierDeclStatement	FT_F26Dot6 distance ;	6585:4:233297:233317	10603089	1	True				
ANR	10603100	IdentifierDecl	distance		10603089	0					
ANR	10603101	IdentifierDeclType	FT_F26Dot6		10603089	0					
ANR	10603102	Identifier	distance		10603089	1					
ANR	10603103	ExpressionStatement	p1 = ( FT_UShort ) args [ 0 ]	6588:4:233325:233348	10603089	2	True				
ANR	10603104	AssignmentExpression	p1 = ( FT_UShort ) args [ 0 ]		10603089	0		=			
ANR	10603105	Identifier	p1		10603089	0					
ANR	10603106	CastExpression	( FT_UShort ) args [ 0 ]		10603089	1					
ANR	10603107	CastTarget	FT_UShort		10603089	0					
ANR	10603108	ArrayIndexing	args [ 0 ]		10603089	1					
ANR	10603109	Identifier	args		10603089	0					
ANR	10603110	PrimaryExpression	0		10603089	1					
ANR	10603111	ExpressionStatement	p2 = ( FT_UShort ) args [ 1 ]	6589:4:233354:233377	10603089	3	True				
ANR	10603112	AssignmentExpression	p2 = ( FT_UShort ) args [ 1 ]		10603089	0		=			
ANR	10603113	Identifier	p2		10603089	0					
ANR	10603114	CastExpression	( FT_UShort ) args [ 1 ]		10603089	1					
ANR	10603115	CastTarget	FT_UShort		10603089	0					
ANR	10603116	ArrayIndexing	args [ 1 ]		10603089	1					
ANR	10603117	Identifier	args		10603089	0					
ANR	10603118	PrimaryExpression	1		10603089	1					
ANR	10603119	IfStatement	"if ( BOUNDS ( p1 , exc -> zp1 . n_points ) || BOUNDS ( p2 , exc -> zp0 . n_points ) )"		10603089	4					
ANR	10603120	Condition	"BOUNDS ( p1 , exc -> zp1 . n_points ) || BOUNDS ( p2 , exc -> zp0 . n_points )"	6591:9:233389:233463	10603089	0	True				
ANR	10603121	OrExpression	"BOUNDS ( p1 , exc -> zp1 . n_points ) || BOUNDS ( p2 , exc -> zp0 . n_points )"		10603089	0		||			
ANR	10603122	CallExpression	"BOUNDS ( p1 , exc -> zp1 . n_points )"		10603089	0					
ANR	10603123	Callee	BOUNDS		10603089	0					
ANR	10603124	Identifier	BOUNDS		10603089	0					
ANR	10603125	ArgumentList	p1		10603089	1					
ANR	10603126	Argument	p1		10603089	0					
ANR	10603127	Identifier	p1		10603089	0					
ANR	10603128	Argument	exc -> zp1 . n_points		10603089	1					
ANR	10603129	MemberAccess	exc -> zp1 . n_points		10603089	0					
ANR	10603130	PtrMemberAccess	exc -> zp1		10603089	0					
ANR	10603131	Identifier	exc		10603089	0					
ANR	10603132	Identifier	zp1		10603089	1					
ANR	10603133	Identifier	n_points		10603089	1					
ANR	10603134	CallExpression	"BOUNDS ( p2 , exc -> zp0 . n_points )"		10603089	1					
ANR	10603135	Callee	BOUNDS		10603089	0					
ANR	10603136	Identifier	BOUNDS		10603089	0					
ANR	10603137	ArgumentList	p2		10603089	1					
ANR	10603138	Argument	p2		10603089	0					
ANR	10603139	Identifier	p2		10603089	0					
ANR	10603140	Argument	exc -> zp0 . n_points		10603089	1					
ANR	10603141	MemberAccess	exc -> zp0 . n_points		10603089	0					
ANR	10603142	PtrMemberAccess	exc -> zp0		10603089	0					
ANR	10603143	Identifier	exc		10603089	0					
ANR	10603144	Identifier	zp0		10603089	1					
ANR	10603145	Identifier	n_points		10603089	1					
ANR	10603146	CompoundStatement		11:4:203:203	10603089	1					
ANR	10603147	IfStatement	if ( exc -> pedantic_hinting )		10603089	0					
ANR	10603148	Condition	exc -> pedantic_hinting	6594:11:233484:233504	10603089	0	True				
ANR	10603149	PtrMemberAccess	exc -> pedantic_hinting		10603089	0					
ANR	10603150	Identifier	exc		10603089	0					
ANR	10603151	Identifier	pedantic_hinting		10603089	1					
ANR	10603152	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	6595:8:233516:233558	10603089	1	True				
ANR	10603153	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10603089	0		=			
ANR	10603154	PtrMemberAccess	exc -> error		10603089	0					
ANR	10603155	Identifier	exc		10603089	0					
ANR	10603156	Identifier	error		10603089	1					
ANR	10603157	CallExpression	FT_THROW ( Invalid_Reference )		10603089	1					
ANR	10603158	Callee	FT_THROW		10603089	0					
ANR	10603159	Identifier	FT_THROW		10603089	0					
ANR	10603160	ArgumentList	Invalid_Reference		10603089	1					
ANR	10603161	Argument	Invalid_Reference		10603089	0					
ANR	10603162	Identifier	Invalid_Reference		10603089	0					
ANR	10603163	ReturnStatement	return ;	6596:6:233566:233572	10603089	1	True				
ANR	10603164	ExpressionStatement	"distance = PROJECT ( exc -> zp0 . cur + p2 , exc -> zp1 . cur + p1 ) / 2"	6599:4:233585:233647	10603089	5	True				
ANR	10603165	AssignmentExpression	"distance = PROJECT ( exc -> zp0 . cur + p2 , exc -> zp1 . cur + p1 ) / 2"		10603089	0		=			
ANR	10603166	Identifier	distance		10603089	0					
ANR	10603167	MultiplicativeExpression	"PROJECT ( exc -> zp0 . cur + p2 , exc -> zp1 . cur + p1 ) / 2"		10603089	1		/			
ANR	10603168	CallExpression	"PROJECT ( exc -> zp0 . cur + p2 , exc -> zp1 . cur + p1 )"		10603089	0					
ANR	10603169	Callee	PROJECT		10603089	0					
ANR	10603170	Identifier	PROJECT		10603089	0					
ANR	10603171	ArgumentList	exc -> zp0 . cur + p2		10603089	1					
ANR	10603172	Argument	exc -> zp0 . cur + p2		10603089	0					
ANR	10603173	AdditiveExpression	exc -> zp0 . cur + p2		10603089	0		+			
ANR	10603174	MemberAccess	exc -> zp0 . cur		10603089	0					
ANR	10603175	PtrMemberAccess	exc -> zp0		10603089	0					
ANR	10603176	Identifier	exc		10603089	0					
ANR	10603177	Identifier	zp0		10603089	1					
ANR	10603178	Identifier	cur		10603089	1					
ANR	10603179	Identifier	p2		10603089	1					
ANR	10603180	Argument	exc -> zp1 . cur + p1		10603089	1					
ANR	10603181	AdditiveExpression	exc -> zp1 . cur + p1		10603089	0		+			
ANR	10603182	MemberAccess	exc -> zp1 . cur		10603089	0					
ANR	10603183	PtrMemberAccess	exc -> zp1		10603089	0					
ANR	10603184	Identifier	exc		10603089	0					
ANR	10603185	Identifier	zp1		10603089	1					
ANR	10603186	Identifier	cur		10603089	1					
ANR	10603187	Identifier	p1		10603089	1					
ANR	10603188	PrimaryExpression	2		10603089	1					
ANR	10603189	ExpressionStatement	"exc -> func_move ( exc , & exc -> zp1 , p1 , distance )"	6601:4:233654:233700	10603089	6	True				
ANR	10603190	CallExpression	"exc -> func_move ( exc , & exc -> zp1 , p1 , distance )"		10603089	0					
ANR	10603191	Callee	exc -> func_move		10603089	0					
ANR	10603192	PtrMemberAccess	exc -> func_move		10603089	0					
ANR	10603193	Identifier	exc		10603089	0					
ANR	10603194	Identifier	func_move		10603089	1					
ANR	10603195	ArgumentList	exc		10603089	1					
ANR	10603196	Argument	exc		10603089	0					
ANR	10603197	Identifier	exc		10603089	0					
ANR	10603198	Argument	& exc -> zp1		10603089	1					
ANR	10603199	UnaryOperationExpression	& exc -> zp1		10603089	0					
ANR	10603200	UnaryOperator	&		10603089	0					
ANR	10603201	PtrMemberAccess	exc -> zp1		10603089	1					
ANR	10603202	Identifier	exc		10603089	0					
ANR	10603203	Identifier	zp1		10603089	1					
ANR	10603204	Argument	p1		10603089	2					
ANR	10603205	Identifier	p1		10603089	0					
ANR	10603206	Argument	distance		10603089	3					
ANR	10603207	Identifier	distance		10603089	0					
ANR	10603208	ExpressionStatement	"exc -> func_move ( exc , & exc -> zp0 , p2 , NEG_LONG ( distance ) )"	6602:4:233706:233764	10603089	7	True				
ANR	10603209	CallExpression	"exc -> func_move ( exc , & exc -> zp0 , p2 , NEG_LONG ( distance ) )"		10603089	0					
ANR	10603210	Callee	exc -> func_move		10603089	0					
ANR	10603211	PtrMemberAccess	exc -> func_move		10603089	0					
ANR	10603212	Identifier	exc		10603089	0					
ANR	10603213	Identifier	func_move		10603089	1					
ANR	10603214	ArgumentList	exc		10603089	1					
ANR	10603215	Argument	exc		10603089	0					
ANR	10603216	Identifier	exc		10603089	0					
ANR	10603217	Argument	& exc -> zp0		10603089	1					
ANR	10603218	UnaryOperationExpression	& exc -> zp0		10603089	0					
ANR	10603219	UnaryOperator	&		10603089	0					
ANR	10603220	PtrMemberAccess	exc -> zp0		10603089	1					
ANR	10603221	Identifier	exc		10603089	0					
ANR	10603222	Identifier	zp0		10603089	1					
ANR	10603223	Argument	p2		10603089	2					
ANR	10603224	Identifier	p2		10603089	0					
ANR	10603225	Argument	NEG_LONG ( distance )		10603089	3					
ANR	10603226	CallExpression	NEG_LONG ( distance )		10603089	0					
ANR	10603227	Callee	NEG_LONG		10603089	0					
ANR	10603228	Identifier	NEG_LONG		10603089	0					
ANR	10603229	ArgumentList	distance		10603089	1					
ANR	10603230	Argument	distance		10603089	0					
ANR	10603231	Identifier	distance		10603089	0					
ANR	10603232	ReturnType	static void		10603089	1					
ANR	10603233	Identifier	Ins_ALIGNPTS		10603089	2					
ANR	10603234	ParameterList	"TT_ExecContext exc , FT_Long * args"		10603089	3					
ANR	10603235	Parameter	TT_ExecContext exc	6581:16:233205:233223	10603089	0	True				
ANR	10603236	ParameterType	TT_ExecContext		10603089	0					
ANR	10603237	Identifier	exc		10603089	1					
ANR	10603238	Parameter	FT_Long * args	6582:16:233242:233261	10603089	1	True				
ANR	10603239	ParameterType	FT_Long *		10603089	0					
ANR	10603240	Identifier	args		10603089	1					
ANR	10603241	CFGEntryNode	ENTRY		10603089		True				
ANR	10603242	CFGExitNode	EXIT		10603089		True				
ANR	10603243	Symbol	p1		10603089						
ANR	10603244	Symbol	p2		10603089						
ANR	10603245	Symbol	PROJECT		10603089						
ANR	10603246	Symbol	distance		10603089						
ANR	10603247	Symbol	* exc		10603089						
ANR	10603248	Symbol	exc -> zp1 . n_points		10603089						
ANR	10603249	Symbol	exc -> pedantic_hinting		10603089						
ANR	10603250	Symbol	FT_THROW		10603089						
ANR	10603251	Symbol	* args		10603089						
ANR	10603252	Symbol	args		10603089						
ANR	10603253	Symbol	exc		10603089						
ANR	10603254	Symbol	exc -> zp1		10603089						
ANR	10603255	Symbol	exc -> zp0 . n_points		10603089						
ANR	10603256	Symbol	Invalid_Reference		10603089						
ANR	10603257	Symbol	& exc -> zp1		10603089						
ANR	10603258	Symbol	BOUNDS		10603089						
ANR	10603259	Symbol	exc -> zp0		10603089						
ANR	10603260	Symbol	exc -> zp1 . cur		10603089						
ANR	10603261	Symbol	& exc -> zp0		10603089						
ANR	10603262	Symbol	NEG_LONG		10603089						
ANR	10603263	Symbol	exc -> error		10603089						
ANR	10603264	Symbol	exc -> zp0 . cur		10603089						
ANR	10603265	Function	Ins_IP	6615:2:234290:239062							
ANR	10603266	FunctionDef	Ins_IP (TT_ExecContext exc)		10603265	0					
ANR	10603267	CompoundStatement		6617:2:234336:239062	10603265	0					
ANR	10603268	IdentifierDeclStatement	"FT_F26Dot6 old_range , cur_range ;"	6618:4:234342:234374	10603265	0	True				
ANR	10603269	IdentifierDecl	old_range		10603265	0					
ANR	10603270	IdentifierDeclType	FT_F26Dot6		10603265	0					
ANR	10603271	Identifier	old_range		10603265	1					
ANR	10603272	IdentifierDecl	cur_range		10603265	1					
ANR	10603273	IdentifierDeclType	FT_F26Dot6		10603265	0					
ANR	10603274	Identifier	cur_range		10603265	1					
ANR	10603275	IdentifierDeclStatement	FT_Vector * orus_base ;	6619:4:234380:234401	10603265	1	True				
ANR	10603276	IdentifierDecl	* orus_base		10603265	0					
ANR	10603277	IdentifierDeclType	FT_Vector *		10603265	0					
ANR	10603278	Identifier	orus_base		10603265	1					
ANR	10603279	IdentifierDeclStatement	FT_Vector * cur_base ;	6620:4:234407:234427	10603265	2	True				
ANR	10603280	IdentifierDecl	* cur_base		10603265	0					
ANR	10603281	IdentifierDeclType	FT_Vector *		10603265	0					
ANR	10603282	Identifier	cur_base		10603265	1					
ANR	10603283	IdentifierDeclStatement	FT_Int twilight ;	6621:4:234433:234453	10603265	3	True				
ANR	10603284	IdentifierDecl	twilight		10603265	0					
ANR	10603285	IdentifierDeclType	FT_Int		10603265	0					
ANR	10603286	Identifier	twilight		10603265	1					
ANR	10603287	IfStatement	if ( exc -> top < exc -> GS . loop )		10603265	4					
ANR	10603288	Condition	exc -> top < exc -> GS . loop	6624:9:234466:234488	10603265	0	True				
ANR	10603289	RelationalExpression	exc -> top < exc -> GS . loop		10603265	0		<			
ANR	10603290	PtrMemberAccess	exc -> top		10603265	0					
ANR	10603291	Identifier	exc		10603265	0					
ANR	10603292	Identifier	top		10603265	1					
ANR	10603293	MemberAccess	exc -> GS . loop		10603265	1					
ANR	10603294	PtrMemberAccess	exc -> GS		10603265	0					
ANR	10603295	Identifier	exc		10603265	0					
ANR	10603296	Identifier	GS		10603265	1					
ANR	10603297	Identifier	loop		10603265	1					
ANR	10603298	CompoundStatement		9:4:159:159	10603265	1					
ANR	10603299	IfStatement	if ( exc -> pedantic_hinting )		10603265	0					
ANR	10603300	Condition	exc -> pedantic_hinting	6626:11:234509:234529	10603265	0	True				
ANR	10603301	PtrMemberAccess	exc -> pedantic_hinting		10603265	0					
ANR	10603302	Identifier	exc		10603265	0					
ANR	10603303	Identifier	pedantic_hinting		10603265	1					
ANR	10603304	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	6627:8:234541:234583	10603265	1	True				
ANR	10603305	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10603265	0		=			
ANR	10603306	PtrMemberAccess	exc -> error		10603265	0					
ANR	10603307	Identifier	exc		10603265	0					
ANR	10603308	Identifier	error		10603265	1					
ANR	10603309	CallExpression	FT_THROW ( Invalid_Reference )		10603265	1					
ANR	10603310	Callee	FT_THROW		10603265	0					
ANR	10603311	Identifier	FT_THROW		10603265	0					
ANR	10603312	ArgumentList	Invalid_Reference		10603265	1					
ANR	10603313	Argument	Invalid_Reference		10603265	0					
ANR	10603314	Identifier	Invalid_Reference		10603265	0					
ANR	10603315	GotoStatement	goto Fail ;	6628:6:234591:234600	10603265	1	True				
ANR	10603316	Identifier	Fail		10603265	0					
ANR	10603317	ExpressionStatement	twilight = ( exc -> GS . gep0 == 0 || exc -> GS . gep1 == 0 || exc -> GS . gep2 == 0 )	6636:4:234790:234898	10603265	5	True				
ANR	10603318	AssignmentExpression	twilight = ( exc -> GS . gep0 == 0 || exc -> GS . gep1 == 0 || exc -> GS . gep2 == 0 )		10603265	0		=			
ANR	10603319	Identifier	twilight		10603265	0					
ANR	10603320	OrExpression	exc -> GS . gep0 == 0 || exc -> GS . gep1 == 0 || exc -> GS . gep2 == 0		10603265	1		||			
ANR	10603321	EqualityExpression	exc -> GS . gep0 == 0		10603265	0		==			
ANR	10603322	MemberAccess	exc -> GS . gep0		10603265	0					
ANR	10603323	PtrMemberAccess	exc -> GS		10603265	0					
ANR	10603324	Identifier	exc		10603265	0					
ANR	10603325	Identifier	GS		10603265	1					
ANR	10603326	Identifier	gep0		10603265	1					
ANR	10603327	PrimaryExpression	0		10603265	1					
ANR	10603328	OrExpression	exc -> GS . gep1 == 0 || exc -> GS . gep2 == 0		10603265	1		||			
ANR	10603329	EqualityExpression	exc -> GS . gep1 == 0		10603265	0		==			
ANR	10603330	MemberAccess	exc -> GS . gep1		10603265	0					
ANR	10603331	PtrMemberAccess	exc -> GS		10603265	0					
ANR	10603332	Identifier	exc		10603265	0					
ANR	10603333	Identifier	GS		10603265	1					
ANR	10603334	Identifier	gep1		10603265	1					
ANR	10603335	PrimaryExpression	0		10603265	1					
ANR	10603336	EqualityExpression	exc -> GS . gep2 == 0		10603265	1		==			
ANR	10603337	MemberAccess	exc -> GS . gep2		10603265	0					
ANR	10603338	PtrMemberAccess	exc -> GS		10603265	0					
ANR	10603339	Identifier	exc		10603265	0					
ANR	10603340	Identifier	GS		10603265	1					
ANR	10603341	Identifier	gep2		10603265	1					
ANR	10603342	PrimaryExpression	0		10603265	1					
ANR	10603343	IfStatement	"if ( BOUNDS ( exc -> GS . rp1 , exc -> zp0 . n_points ) )"		10603265	6					
ANR	10603344	Condition	"BOUNDS ( exc -> GS . rp1 , exc -> zp0 . n_points )"	6640:9:234910:234949	10603265	0	True				
ANR	10603345	CallExpression	"BOUNDS ( exc -> GS . rp1 , exc -> zp0 . n_points )"		10603265	0					
ANR	10603346	Callee	BOUNDS		10603265	0					
ANR	10603347	Identifier	BOUNDS		10603265	0					
ANR	10603348	ArgumentList	exc -> GS . rp1		10603265	1					
ANR	10603349	Argument	exc -> GS . rp1		10603265	0					
ANR	10603350	MemberAccess	exc -> GS . rp1		10603265	0					
ANR	10603351	PtrMemberAccess	exc -> GS		10603265	0					
ANR	10603352	Identifier	exc		10603265	0					
ANR	10603353	Identifier	GS		10603265	1					
ANR	10603354	Identifier	rp1		10603265	1					
ANR	10603355	Argument	exc -> zp0 . n_points		10603265	1					
ANR	10603356	MemberAccess	exc -> zp0 . n_points		10603265	0					
ANR	10603357	PtrMemberAccess	exc -> zp0		10603265	0					
ANR	10603358	Identifier	exc		10603265	0					
ANR	10603359	Identifier	zp0		10603265	1					
ANR	10603360	Identifier	n_points		10603265	1					
ANR	10603361	CompoundStatement		25:4:620:620	10603265	1					
ANR	10603362	IfStatement	if ( exc -> pedantic_hinting )		10603265	0					
ANR	10603363	Condition	exc -> pedantic_hinting	6642:11:234970:234990	10603265	0	True				
ANR	10603364	PtrMemberAccess	exc -> pedantic_hinting		10603265	0					
ANR	10603365	Identifier	exc		10603265	0					
ANR	10603366	Identifier	pedantic_hinting		10603265	1					
ANR	10603367	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	6643:8:235002:235044	10603265	1	True				
ANR	10603368	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10603265	0		=			
ANR	10603369	PtrMemberAccess	exc -> error		10603265	0					
ANR	10603370	Identifier	exc		10603265	0					
ANR	10603371	Identifier	error		10603265	1					
ANR	10603372	CallExpression	FT_THROW ( Invalid_Reference )		10603265	1					
ANR	10603373	Callee	FT_THROW		10603265	0					
ANR	10603374	Identifier	FT_THROW		10603265	0					
ANR	10603375	ArgumentList	Invalid_Reference		10603265	1					
ANR	10603376	Argument	Invalid_Reference		10603265	0					
ANR	10603377	Identifier	Invalid_Reference		10603265	0					
ANR	10603378	GotoStatement	goto Fail ;	6644:6:235052:235061	10603265	1	True				
ANR	10603379	Identifier	Fail		10603265	0					
ANR	10603380	IfStatement	if ( twilight )		10603265	7					
ANR	10603381	Condition	twilight	6647:9:235079:235086	10603265	0	True				
ANR	10603382	Identifier	twilight		10603265	0					
ANR	10603383	ExpressionStatement	orus_base = & exc -> zp0 . org [ exc -> GS . rp1 ]	6648:6:235096:235134	10603265	1	True				
ANR	10603384	AssignmentExpression	orus_base = & exc -> zp0 . org [ exc -> GS . rp1 ]		10603265	0		=			
ANR	10603385	Identifier	orus_base		10603265	0					
ANR	10603386	UnaryOperationExpression	& exc -> zp0 . org [ exc -> GS . rp1 ]		10603265	1					
ANR	10603387	UnaryOperator	&		10603265	0					
ANR	10603388	ArrayIndexing	exc -> zp0 . org [ exc -> GS . rp1 ]		10603265	1					
ANR	10603389	MemberAccess	exc -> zp0 . org		10603265	0					
ANR	10603390	PtrMemberAccess	exc -> zp0		10603265	0					
ANR	10603391	Identifier	exc		10603265	0					
ANR	10603392	Identifier	zp0		10603265	1					
ANR	10603393	Identifier	org		10603265	1					
ANR	10603394	MemberAccess	exc -> GS . rp1		10603265	1					
ANR	10603395	PtrMemberAccess	exc -> GS		10603265	0					
ANR	10603396	Identifier	exc		10603265	0					
ANR	10603397	Identifier	GS		10603265	1					
ANR	10603398	Identifier	rp1		10603265	1					
ANR	10603399	ElseStatement	else		10603265	0					
ANR	10603400	ExpressionStatement	orus_base = & exc -> zp0 . orus [ exc -> GS . rp1 ]	6650:6:235151:235190	10603265	0	True				
ANR	10603401	AssignmentExpression	orus_base = & exc -> zp0 . orus [ exc -> GS . rp1 ]		10603265	0		=			
ANR	10603402	Identifier	orus_base		10603265	0					
ANR	10603403	UnaryOperationExpression	& exc -> zp0 . orus [ exc -> GS . rp1 ]		10603265	1					
ANR	10603404	UnaryOperator	&		10603265	0					
ANR	10603405	ArrayIndexing	exc -> zp0 . orus [ exc -> GS . rp1 ]		10603265	1					
ANR	10603406	MemberAccess	exc -> zp0 . orus		10603265	0					
ANR	10603407	PtrMemberAccess	exc -> zp0		10603265	0					
ANR	10603408	Identifier	exc		10603265	0					
ANR	10603409	Identifier	zp0		10603265	1					
ANR	10603410	Identifier	orus		10603265	1					
ANR	10603411	MemberAccess	exc -> GS . rp1		10603265	1					
ANR	10603412	PtrMemberAccess	exc -> GS		10603265	0					
ANR	10603413	Identifier	exc		10603265	0					
ANR	10603414	Identifier	GS		10603265	1					
ANR	10603415	Identifier	rp1		10603265	1					
ANR	10603416	ExpressionStatement	cur_base = & exc -> zp0 . cur [ exc -> GS . rp1 ]	6652:4:235197:235234	10603265	8	True				
ANR	10603417	AssignmentExpression	cur_base = & exc -> zp0 . cur [ exc -> GS . rp1 ]		10603265	0		=			
ANR	10603418	Identifier	cur_base		10603265	0					
ANR	10603419	UnaryOperationExpression	& exc -> zp0 . cur [ exc -> GS . rp1 ]		10603265	1					
ANR	10603420	UnaryOperator	&		10603265	0					
ANR	10603421	ArrayIndexing	exc -> zp0 . cur [ exc -> GS . rp1 ]		10603265	1					
ANR	10603422	MemberAccess	exc -> zp0 . cur		10603265	0					
ANR	10603423	PtrMemberAccess	exc -> zp0		10603265	0					
ANR	10603424	Identifier	exc		10603265	0					
ANR	10603425	Identifier	zp0		10603265	1					
ANR	10603426	Identifier	cur		10603265	1					
ANR	10603427	MemberAccess	exc -> GS . rp1		10603265	1					
ANR	10603428	PtrMemberAccess	exc -> GS		10603265	0					
ANR	10603429	Identifier	exc		10603265	0					
ANR	10603430	Identifier	GS		10603265	1					
ANR	10603431	Identifier	rp1		10603265	1					
ANR	10603432	IfStatement	"if ( BOUNDS ( exc -> GS . rp1 , exc -> zp0 . n_points ) || BOUNDS ( exc -> GS . rp2 , exc -> zp1 . n_points ) )"		10603265	9					
ANR	10603433	Condition	"BOUNDS ( exc -> GS . rp1 , exc -> zp0 . n_points ) || BOUNDS ( exc -> GS . rp2 , exc -> zp1 . n_points )"	6658:9:235514:235606	10603265	0	True				
ANR	10603434	OrExpression	"BOUNDS ( exc -> GS . rp1 , exc -> zp0 . n_points ) || BOUNDS ( exc -> GS . rp2 , exc -> zp1 . n_points )"		10603265	0		||			
ANR	10603435	CallExpression	"BOUNDS ( exc -> GS . rp1 , exc -> zp0 . n_points )"		10603265	0					
ANR	10603436	Callee	BOUNDS		10603265	0					
ANR	10603437	Identifier	BOUNDS		10603265	0					
ANR	10603438	ArgumentList	exc -> GS . rp1		10603265	1					
ANR	10603439	Argument	exc -> GS . rp1		10603265	0					
ANR	10603440	MemberAccess	exc -> GS . rp1		10603265	0					
ANR	10603441	PtrMemberAccess	exc -> GS		10603265	0					
ANR	10603442	Identifier	exc		10603265	0					
ANR	10603443	Identifier	GS		10603265	1					
ANR	10603444	Identifier	rp1		10603265	1					
ANR	10603445	Argument	exc -> zp0 . n_points		10603265	1					
ANR	10603446	MemberAccess	exc -> zp0 . n_points		10603265	0					
ANR	10603447	PtrMemberAccess	exc -> zp0		10603265	0					
ANR	10603448	Identifier	exc		10603265	0					
ANR	10603449	Identifier	zp0		10603265	1					
ANR	10603450	Identifier	n_points		10603265	1					
ANR	10603451	CallExpression	"BOUNDS ( exc -> GS . rp2 , exc -> zp1 . n_points )"		10603265	1					
ANR	10603452	Callee	BOUNDS		10603265	0					
ANR	10603453	Identifier	BOUNDS		10603265	0					
ANR	10603454	ArgumentList	exc -> GS . rp2		10603265	1					
ANR	10603455	Argument	exc -> GS . rp2		10603265	0					
ANR	10603456	MemberAccess	exc -> GS . rp2		10603265	0					
ANR	10603457	PtrMemberAccess	exc -> GS		10603265	0					
ANR	10603458	Identifier	exc		10603265	0					
ANR	10603459	Identifier	GS		10603265	1					
ANR	10603460	Identifier	rp2		10603265	1					
ANR	10603461	Argument	exc -> zp1 . n_points		10603265	1					
ANR	10603462	MemberAccess	exc -> zp1 . n_points		10603265	0					
ANR	10603463	PtrMemberAccess	exc -> zp1		10603265	0					
ANR	10603464	Identifier	exc		10603265	0					
ANR	10603465	Identifier	zp1		10603265	1					
ANR	10603466	Identifier	n_points		10603265	1					
ANR	10603467	CompoundStatement		44:4:1277:1277	10603265	1					
ANR	10603468	ExpressionStatement	old_range = 0	6661:6:235622:235635	10603265	0	True				
ANR	10603469	AssignmentExpression	old_range = 0		10603265	0		=			
ANR	10603470	Identifier	old_range		10603265	0					
ANR	10603471	PrimaryExpression	0		10603265	1					
ANR	10603472	ExpressionStatement	cur_range = 0	6662:6:235643:235656	10603265	1	True				
ANR	10603473	AssignmentExpression	cur_range = 0		10603265	0		=			
ANR	10603474	Identifier	cur_range		10603265	0					
ANR	10603475	PrimaryExpression	0		10603265	1					
ANR	10603476	ElseStatement	else		10603265	0					
ANR	10603477	CompoundStatement		49:4:1340:1340	10603265	0					
ANR	10603478	IfStatement	if ( twilight )		10603265	0					
ANR	10603479	Condition	twilight	6666:11:235690:235697	10603265	0	True				
ANR	10603480	Identifier	twilight		10603265	0					
ANR	10603481	ExpressionStatement	"old_range = DUALPROJ ( & exc -> zp1 . org [ exc -> GS . rp2 ] , orus_base )"	6667:8:235709:235770	10603265	1	True				
ANR	10603482	AssignmentExpression	"old_range = DUALPROJ ( & exc -> zp1 . org [ exc -> GS . rp2 ] , orus_base )"		10603265	0		=			
ANR	10603483	Identifier	old_range		10603265	0					
ANR	10603484	CallExpression	"DUALPROJ ( & exc -> zp1 . org [ exc -> GS . rp2 ] , orus_base )"		10603265	1					
ANR	10603485	Callee	DUALPROJ		10603265	0					
ANR	10603486	Identifier	DUALPROJ		10603265	0					
ANR	10603487	ArgumentList	& exc -> zp1 . org [ exc -> GS . rp2 ]		10603265	1					
ANR	10603488	Argument	& exc -> zp1 . org [ exc -> GS . rp2 ]		10603265	0					
ANR	10603489	UnaryOperationExpression	& exc -> zp1 . org [ exc -> GS . rp2 ]		10603265	0					
ANR	10603490	UnaryOperator	&		10603265	0					
ANR	10603491	ArrayIndexing	exc -> zp1 . org [ exc -> GS . rp2 ]		10603265	1					
ANR	10603492	MemberAccess	exc -> zp1 . org		10603265	0					
ANR	10603493	PtrMemberAccess	exc -> zp1		10603265	0					
ANR	10603494	Identifier	exc		10603265	0					
ANR	10603495	Identifier	zp1		10603265	1					
ANR	10603496	Identifier	org		10603265	1					
ANR	10603497	MemberAccess	exc -> GS . rp2		10603265	1					
ANR	10603498	PtrMemberAccess	exc -> GS		10603265	0					
ANR	10603499	Identifier	exc		10603265	0					
ANR	10603500	Identifier	GS		10603265	1					
ANR	10603501	Identifier	rp2		10603265	1					
ANR	10603502	Argument	orus_base		10603265	1					
ANR	10603503	Identifier	orus_base		10603265	0					
ANR	10603504	ElseStatement	else		10603265	0					
ANR	10603505	IfStatement	if ( exc -> metrics . x_scale == exc -> metrics . y_scale )		10603265	0					
ANR	10603506	Condition	exc -> metrics . x_scale == exc -> metrics . y_scale	6668:16:235788:235831	10603265	0	True				
ANR	10603507	EqualityExpression	exc -> metrics . x_scale == exc -> metrics . y_scale		10603265	0		==			
ANR	10603508	MemberAccess	exc -> metrics . x_scale		10603265	0					
ANR	10603509	PtrMemberAccess	exc -> metrics		10603265	0					
ANR	10603510	Identifier	exc		10603265	0					
ANR	10603511	Identifier	metrics		10603265	1					
ANR	10603512	Identifier	x_scale		10603265	1					
ANR	10603513	MemberAccess	exc -> metrics . y_scale		10603265	1					
ANR	10603514	PtrMemberAccess	exc -> metrics		10603265	0					
ANR	10603515	Identifier	exc		10603265	0					
ANR	10603516	Identifier	metrics		10603265	1					
ANR	10603517	Identifier	y_scale		10603265	1					
ANR	10603518	ExpressionStatement	"old_range = DUALPROJ ( & exc -> zp1 . orus [ exc -> GS . rp2 ] , orus_base )"	6669:8:235843:235905	10603265	1	True				
ANR	10603519	AssignmentExpression	"old_range = DUALPROJ ( & exc -> zp1 . orus [ exc -> GS . rp2 ] , orus_base )"		10603265	0		=			
ANR	10603520	Identifier	old_range		10603265	0					
ANR	10603521	CallExpression	"DUALPROJ ( & exc -> zp1 . orus [ exc -> GS . rp2 ] , orus_base )"		10603265	1					
ANR	10603522	Callee	DUALPROJ		10603265	0					
ANR	10603523	Identifier	DUALPROJ		10603265	0					
ANR	10603524	ArgumentList	& exc -> zp1 . orus [ exc -> GS . rp2 ]		10603265	1					
ANR	10603525	Argument	& exc -> zp1 . orus [ exc -> GS . rp2 ]		10603265	0					
ANR	10603526	UnaryOperationExpression	& exc -> zp1 . orus [ exc -> GS . rp2 ]		10603265	0					
ANR	10603527	UnaryOperator	&		10603265	0					
ANR	10603528	ArrayIndexing	exc -> zp1 . orus [ exc -> GS . rp2 ]		10603265	1					
ANR	10603529	MemberAccess	exc -> zp1 . orus		10603265	0					
ANR	10603530	PtrMemberAccess	exc -> zp1		10603265	0					
ANR	10603531	Identifier	exc		10603265	0					
ANR	10603532	Identifier	zp1		10603265	1					
ANR	10603533	Identifier	orus		10603265	1					
ANR	10603534	MemberAccess	exc -> GS . rp2		10603265	1					
ANR	10603535	PtrMemberAccess	exc -> GS		10603265	0					
ANR	10603536	Identifier	exc		10603265	0					
ANR	10603537	Identifier	GS		10603265	1					
ANR	10603538	Identifier	rp2		10603265	1					
ANR	10603539	Argument	orus_base		10603265	1					
ANR	10603540	Identifier	orus_base		10603265	0					
ANR	10603541	ElseStatement	else		10603265	0					
ANR	10603542	CompoundStatement		56:8:1597:1611	10603265	0					
ANR	10603543	IdentifierDeclStatement	FT_Vector vec ;	6672:8:235934:235948	10603265	0	True				
ANR	10603544	IdentifierDecl	vec		10603265	0					
ANR	10603545	IdentifierDeclType	FT_Vector		10603265	0					
ANR	10603546	Identifier	vec		10603265	1					
ANR	10603547	ExpressionStatement	"vec . x = FT_MulFix ( SUB_LONG ( exc -> zp1 . orus [ exc -> GS . rp2 ] . x , orus_base -> x ) , exc -> metrics . x_scale )"	6675:8:235960:236121	10603265	1	True				
ANR	10603548	AssignmentExpression	"vec . x = FT_MulFix ( SUB_LONG ( exc -> zp1 . orus [ exc -> GS . rp2 ] . x , orus_base -> x ) , exc -> metrics . x_scale )"		10603265	0		=			
ANR	10603549	MemberAccess	vec . x		10603265	0					
ANR	10603550	Identifier	vec		10603265	0					
ANR	10603551	Identifier	x		10603265	1					
ANR	10603552	CallExpression	"FT_MulFix ( SUB_LONG ( exc -> zp1 . orus [ exc -> GS . rp2 ] . x , orus_base -> x ) , exc -> metrics . x_scale )"		10603265	1					
ANR	10603553	Callee	FT_MulFix		10603265	0					
ANR	10603554	Identifier	FT_MulFix		10603265	0					
ANR	10603555	ArgumentList	"SUB_LONG ( exc -> zp1 . orus [ exc -> GS . rp2 ] . x , orus_base -> x )"		10603265	1					
ANR	10603556	Argument	"SUB_LONG ( exc -> zp1 . orus [ exc -> GS . rp2 ] . x , orus_base -> x )"		10603265	0					
ANR	10603557	CallExpression	"SUB_LONG ( exc -> zp1 . orus [ exc -> GS . rp2 ] . x , orus_base -> x )"		10603265	0					
ANR	10603558	Callee	SUB_LONG		10603265	0					
ANR	10603559	Identifier	SUB_LONG		10603265	0					
ANR	10603560	ArgumentList	exc -> zp1 . orus [ exc -> GS . rp2 ] . x		10603265	1					
ANR	10603561	Argument	exc -> zp1 . orus [ exc -> GS . rp2 ] . x		10603265	0					
ANR	10603562	MemberAccess	exc -> zp1 . orus [ exc -> GS . rp2 ] . x		10603265	0					
ANR	10603563	ArrayIndexing	exc -> zp1 . orus [ exc -> GS . rp2 ]		10603265	0					
ANR	10603564	MemberAccess	exc -> zp1 . orus		10603265	0					
ANR	10603565	PtrMemberAccess	exc -> zp1		10603265	0					
ANR	10603566	Identifier	exc		10603265	0					
ANR	10603567	Identifier	zp1		10603265	1					
ANR	10603568	Identifier	orus		10603265	1					
ANR	10603569	MemberAccess	exc -> GS . rp2		10603265	1					
ANR	10603570	PtrMemberAccess	exc -> GS		10603265	0					
ANR	10603571	Identifier	exc		10603265	0					
ANR	10603572	Identifier	GS		10603265	1					
ANR	10603573	Identifier	rp2		10603265	1					
ANR	10603574	Identifier	x		10603265	1					
ANR	10603575	Argument	orus_base -> x		10603265	1					
ANR	10603576	PtrMemberAccess	orus_base -> x		10603265	0					
ANR	10603577	Identifier	orus_base		10603265	0					
ANR	10603578	Identifier	x		10603265	1					
ANR	10603579	Argument	exc -> metrics . x_scale		10603265	1					
ANR	10603580	MemberAccess	exc -> metrics . x_scale		10603265	0					
ANR	10603581	PtrMemberAccess	exc -> metrics		10603265	0					
ANR	10603582	Identifier	exc		10603265	0					
ANR	10603583	Identifier	metrics		10603265	1					
ANR	10603584	Identifier	x_scale		10603265	1					
ANR	10603585	ExpressionStatement	"vec . y = FT_MulFix ( SUB_LONG ( exc -> zp1 . orus [ exc -> GS . rp2 ] . y , orus_base -> y ) , exc -> metrics . y_scale )"	6678:8:236131:236292	10603265	2	True				
ANR	10603586	AssignmentExpression	"vec . y = FT_MulFix ( SUB_LONG ( exc -> zp1 . orus [ exc -> GS . rp2 ] . y , orus_base -> y ) , exc -> metrics . y_scale )"		10603265	0		=			
ANR	10603587	MemberAccess	vec . y		10603265	0					
ANR	10603588	Identifier	vec		10603265	0					
ANR	10603589	Identifier	y		10603265	1					
ANR	10603590	CallExpression	"FT_MulFix ( SUB_LONG ( exc -> zp1 . orus [ exc -> GS . rp2 ] . y , orus_base -> y ) , exc -> metrics . y_scale )"		10603265	1					
ANR	10603591	Callee	FT_MulFix		10603265	0					
ANR	10603592	Identifier	FT_MulFix		10603265	0					
ANR	10603593	ArgumentList	"SUB_LONG ( exc -> zp1 . orus [ exc -> GS . rp2 ] . y , orus_base -> y )"		10603265	1					
ANR	10603594	Argument	"SUB_LONG ( exc -> zp1 . orus [ exc -> GS . rp2 ] . y , orus_base -> y )"		10603265	0					
ANR	10603595	CallExpression	"SUB_LONG ( exc -> zp1 . orus [ exc -> GS . rp2 ] . y , orus_base -> y )"		10603265	0					
ANR	10603596	Callee	SUB_LONG		10603265	0					
ANR	10603597	Identifier	SUB_LONG		10603265	0					
ANR	10603598	ArgumentList	exc -> zp1 . orus [ exc -> GS . rp2 ] . y		10603265	1					
ANR	10603599	Argument	exc -> zp1 . orus [ exc -> GS . rp2 ] . y		10603265	0					
ANR	10603600	MemberAccess	exc -> zp1 . orus [ exc -> GS . rp2 ] . y		10603265	0					
ANR	10603601	ArrayIndexing	exc -> zp1 . orus [ exc -> GS . rp2 ]		10603265	0					
ANR	10603602	MemberAccess	exc -> zp1 . orus		10603265	0					
ANR	10603603	PtrMemberAccess	exc -> zp1		10603265	0					
ANR	10603604	Identifier	exc		10603265	0					
ANR	10603605	Identifier	zp1		10603265	1					
ANR	10603606	Identifier	orus		10603265	1					
ANR	10603607	MemberAccess	exc -> GS . rp2		10603265	1					
ANR	10603608	PtrMemberAccess	exc -> GS		10603265	0					
ANR	10603609	Identifier	exc		10603265	0					
ANR	10603610	Identifier	GS		10603265	1					
ANR	10603611	Identifier	rp2		10603265	1					
ANR	10603612	Identifier	y		10603265	1					
ANR	10603613	Argument	orus_base -> y		10603265	1					
ANR	10603614	PtrMemberAccess	orus_base -> y		10603265	0					
ANR	10603615	Identifier	orus_base		10603265	0					
ANR	10603616	Identifier	y		10603265	1					
ANR	10603617	Argument	exc -> metrics . y_scale		10603265	1					
ANR	10603618	MemberAccess	exc -> metrics . y_scale		10603265	0					
ANR	10603619	PtrMemberAccess	exc -> metrics		10603265	0					
ANR	10603620	Identifier	exc		10603265	0					
ANR	10603621	Identifier	metrics		10603265	1					
ANR	10603622	Identifier	y_scale		10603265	1					
ANR	10603623	ExpressionStatement	old_range = FAST_DUALPROJ ( & vec )	6682:8:236303:236336	10603265	3	True				
ANR	10603624	AssignmentExpression	old_range = FAST_DUALPROJ ( & vec )		10603265	0		=			
ANR	10603625	Identifier	old_range		10603265	0					
ANR	10603626	CallExpression	FAST_DUALPROJ ( & vec )		10603265	1					
ANR	10603627	Callee	FAST_DUALPROJ		10603265	0					
ANR	10603628	Identifier	FAST_DUALPROJ		10603265	0					
ANR	10603629	ArgumentList	& vec		10603265	1					
ANR	10603630	Argument	& vec		10603265	0					
ANR	10603631	UnaryOperationExpression	& vec		10603265	0					
ANR	10603632	UnaryOperator	&		10603265	0					
ANR	10603633	Identifier	vec		10603265	1					
ANR	10603634	ExpressionStatement	"cur_range = PROJECT ( & exc -> zp1 . cur [ exc -> GS . rp2 ] , cur_base )"	6685:6:236353:236412	10603265	1	True				
ANR	10603635	AssignmentExpression	"cur_range = PROJECT ( & exc -> zp1 . cur [ exc -> GS . rp2 ] , cur_base )"		10603265	0		=			
ANR	10603636	Identifier	cur_range		10603265	0					
ANR	10603637	CallExpression	"PROJECT ( & exc -> zp1 . cur [ exc -> GS . rp2 ] , cur_base )"		10603265	1					
ANR	10603638	Callee	PROJECT		10603265	0					
ANR	10603639	Identifier	PROJECT		10603265	0					
ANR	10603640	ArgumentList	& exc -> zp1 . cur [ exc -> GS . rp2 ]		10603265	1					
ANR	10603641	Argument	& exc -> zp1 . cur [ exc -> GS . rp2 ]		10603265	0					
ANR	10603642	UnaryOperationExpression	& exc -> zp1 . cur [ exc -> GS . rp2 ]		10603265	0					
ANR	10603643	UnaryOperator	&		10603265	0					
ANR	10603644	ArrayIndexing	exc -> zp1 . cur [ exc -> GS . rp2 ]		10603265	1					
ANR	10603645	MemberAccess	exc -> zp1 . cur		10603265	0					
ANR	10603646	PtrMemberAccess	exc -> zp1		10603265	0					
ANR	10603647	Identifier	exc		10603265	0					
ANR	10603648	Identifier	zp1		10603265	1					
ANR	10603649	Identifier	cur		10603265	1					
ANR	10603650	MemberAccess	exc -> GS . rp2		10603265	1					
ANR	10603651	PtrMemberAccess	exc -> GS		10603265	0					
ANR	10603652	Identifier	exc		10603265	0					
ANR	10603653	Identifier	GS		10603265	1					
ANR	10603654	Identifier	rp2		10603265	1					
ANR	10603655	Argument	cur_base		10603265	1					
ANR	10603656	Identifier	cur_base		10603265	0					
ANR	10603657	ForStatement	for ( ; exc -> GS . loop > 0 ; exc -> GS . loop -- )		10603265	10					
ANR	10603658	Condition	exc -> GS . loop > 0	6688:12:236433:236448	10603265	0	True				
ANR	10603659	RelationalExpression	exc -> GS . loop > 0		10603265	0		>			
ANR	10603660	MemberAccess	exc -> GS . loop		10603265	0					
ANR	10603661	PtrMemberAccess	exc -> GS		10603265	0					
ANR	10603662	Identifier	exc		10603265	0					
ANR	10603663	Identifier	GS		10603265	1					
ANR	10603664	Identifier	loop		10603265	1					
ANR	10603665	PrimaryExpression	0		10603265	1					
ANR	10603666	PostIncDecOperationExpression	exc -> GS . loop --	6688:30:236451:236464	10603265	1	True				
ANR	10603667	MemberAccess	exc -> GS . loop		10603265	0					
ANR	10603668	PtrMemberAccess	exc -> GS		10603265	0					
ANR	10603669	Identifier	exc		10603265	0					
ANR	10603670	Identifier	GS		10603265	1					
ANR	10603671	Identifier	loop		10603265	1					
ANR	10603672	IncDec	--		10603265	1					
ANR	10603673	CompoundStatement		75:6:2203:2243	10603265	2					
ANR	10603674	IdentifierDeclStatement	FT_UInt point = ( FT_UInt ) exc -> stack [ -- exc -> args ] ;	6690:6:236480:236532	10603265	0	True				
ANR	10603675	IdentifierDecl	point = ( FT_UInt ) exc -> stack [ -- exc -> args ]		10603265	0					
ANR	10603676	IdentifierDeclType	FT_UInt		10603265	0					
ANR	10603677	Identifier	point		10603265	1					
ANR	10603678	AssignmentExpression	point = ( FT_UInt ) exc -> stack [ -- exc -> args ]		10603265	2		=			
ANR	10603679	Identifier	point		10603265	0					
ANR	10603680	CastExpression	( FT_UInt ) exc -> stack [ -- exc -> args ]		10603265	1					
ANR	10603681	CastTarget	FT_UInt		10603265	0					
ANR	10603682	ArrayIndexing	exc -> stack [ -- exc -> args ]		10603265	1					
ANR	10603683	PtrMemberAccess	exc -> stack		10603265	0					
ANR	10603684	Identifier	exc		10603265	0					
ANR	10603685	Identifier	stack		10603265	1					
ANR	10603686	UnaryExpression	-- exc -> args		10603265	1					
ANR	10603687	IncDec	--		10603265	0					
ANR	10603688	PtrMemberAccess	exc -> args		10603265	1					
ANR	10603689	Identifier	exc		10603265	0					
ANR	10603690	Identifier	args		10603265	1					
ANR	10603691	IdentifierDeclStatement	"FT_F26Dot6 org_dist , cur_dist , new_dist ;"	6691:6:236540:236580	10603265	1	True				
ANR	10603692	IdentifierDecl	org_dist		10603265	0					
ANR	10603693	IdentifierDeclType	FT_F26Dot6		10603265	0					
ANR	10603694	Identifier	org_dist		10603265	1					
ANR	10603695	IdentifierDecl	cur_dist		10603265	1					
ANR	10603696	IdentifierDeclType	FT_F26Dot6		10603265	0					
ANR	10603697	Identifier	cur_dist		10603265	1					
ANR	10603698	IdentifierDecl	new_dist		10603265	2					
ANR	10603699	IdentifierDeclType	FT_F26Dot6		10603265	0					
ANR	10603700	Identifier	new_dist		10603265	1					
ANR	10603701	IfStatement	"if ( BOUNDS ( point , exc -> zp2 . n_points ) )"		10603265	2					
ANR	10603702	Condition	"BOUNDS ( point , exc -> zp2 . n_points )"	6695:11:236626:236659	10603265	0	True				
ANR	10603703	CallExpression	"BOUNDS ( point , exc -> zp2 . n_points )"		10603265	0					
ANR	10603704	Callee	BOUNDS		10603265	0					
ANR	10603705	Identifier	BOUNDS		10603265	0					
ANR	10603706	ArgumentList	point		10603265	1					
ANR	10603707	Argument	point		10603265	0					
ANR	10603708	Identifier	point		10603265	0					
ANR	10603709	Argument	exc -> zp2 . n_points		10603265	1					
ANR	10603710	MemberAccess	exc -> zp2 . n_points		10603265	0					
ANR	10603711	PtrMemberAccess	exc -> zp2		10603265	0					
ANR	10603712	Identifier	exc		10603265	0					
ANR	10603713	Identifier	zp2		10603265	1					
ANR	10603714	Identifier	n_points		10603265	1					
ANR	10603715	CompoundStatement		80:6:2332:2332	10603265	1					
ANR	10603716	IfStatement	if ( exc -> pedantic_hinting )		10603265	0					
ANR	10603717	Condition	exc -> pedantic_hinting	6697:13:236684:236704	10603265	0	True				
ANR	10603718	PtrMemberAccess	exc -> pedantic_hinting		10603265	0					
ANR	10603719	Identifier	exc		10603265	0					
ANR	10603720	Identifier	pedantic_hinting		10603265	1					
ANR	10603721	CompoundStatement		82:8:2379:2379	10603265	1					
ANR	10603722	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	6699:10:236728:236770	10603265	0	True				
ANR	10603723	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10603265	0		=			
ANR	10603724	PtrMemberAccess	exc -> error		10603265	0					
ANR	10603725	Identifier	exc		10603265	0					
ANR	10603726	Identifier	error		10603265	1					
ANR	10603727	CallExpression	FT_THROW ( Invalid_Reference )		10603265	1					
ANR	10603728	Callee	FT_THROW		10603265	0					
ANR	10603729	Identifier	FT_THROW		10603265	0					
ANR	10603730	ArgumentList	Invalid_Reference		10603265	1					
ANR	10603731	Argument	Invalid_Reference		10603265	0					
ANR	10603732	Identifier	Invalid_Reference		10603265	0					
ANR	10603733	ReturnStatement	return ;	6700:10:236782:236788	10603265	1	True				
ANR	10603734	ContinueStatement	continue ;	6702:8:236808:236816	10603265	1	True				
ANR	10603735	IfStatement	if ( twilight )		10603265	3					
ANR	10603736	Condition	twilight	6705:11:236838:236845	10603265	0	True				
ANR	10603737	Identifier	twilight		10603265	0					
ANR	10603738	ExpressionStatement	"org_dist = DUALPROJ ( & exc -> zp2 . org [ point ] , orus_base )"	6706:8:236857:236911	10603265	1	True				
ANR	10603739	AssignmentExpression	"org_dist = DUALPROJ ( & exc -> zp2 . org [ point ] , orus_base )"		10603265	0		=			
ANR	10603740	Identifier	org_dist		10603265	0					
ANR	10603741	CallExpression	"DUALPROJ ( & exc -> zp2 . org [ point ] , orus_base )"		10603265	1					
ANR	10603742	Callee	DUALPROJ		10603265	0					
ANR	10603743	Identifier	DUALPROJ		10603265	0					
ANR	10603744	ArgumentList	& exc -> zp2 . org [ point ]		10603265	1					
ANR	10603745	Argument	& exc -> zp2 . org [ point ]		10603265	0					
ANR	10603746	UnaryOperationExpression	& exc -> zp2 . org [ point ]		10603265	0					
ANR	10603747	UnaryOperator	&		10603265	0					
ANR	10603748	ArrayIndexing	exc -> zp2 . org [ point ]		10603265	1					
ANR	10603749	MemberAccess	exc -> zp2 . org		10603265	0					
ANR	10603750	PtrMemberAccess	exc -> zp2		10603265	0					
ANR	10603751	Identifier	exc		10603265	0					
ANR	10603752	Identifier	zp2		10603265	1					
ANR	10603753	Identifier	org		10603265	1					
ANR	10603754	Identifier	point		10603265	1					
ANR	10603755	Argument	orus_base		10603265	1					
ANR	10603756	Identifier	orus_base		10603265	0					
ANR	10603757	ElseStatement	else		10603265	0					
ANR	10603758	IfStatement	if ( exc -> metrics . x_scale == exc -> metrics . y_scale )		10603265	0					
ANR	10603759	Condition	exc -> metrics . x_scale == exc -> metrics . y_scale	6707:16:236929:236972	10603265	0	True				
ANR	10603760	EqualityExpression	exc -> metrics . x_scale == exc -> metrics . y_scale		10603265	0		==			
ANR	10603761	MemberAccess	exc -> metrics . x_scale		10603265	0					
ANR	10603762	PtrMemberAccess	exc -> metrics		10603265	0					
ANR	10603763	Identifier	exc		10603265	0					
ANR	10603764	Identifier	metrics		10603265	1					
ANR	10603765	Identifier	x_scale		10603265	1					
ANR	10603766	MemberAccess	exc -> metrics . y_scale		10603265	1					
ANR	10603767	PtrMemberAccess	exc -> metrics		10603265	0					
ANR	10603768	Identifier	exc		10603265	0					
ANR	10603769	Identifier	metrics		10603265	1					
ANR	10603770	Identifier	y_scale		10603265	1					
ANR	10603771	ExpressionStatement	"org_dist = DUALPROJ ( & exc -> zp2 . orus [ point ] , orus_base )"	6708:8:236984:237039	10603265	1	True				
ANR	10603772	AssignmentExpression	"org_dist = DUALPROJ ( & exc -> zp2 . orus [ point ] , orus_base )"		10603265	0		=			
ANR	10603773	Identifier	org_dist		10603265	0					
ANR	10603774	CallExpression	"DUALPROJ ( & exc -> zp2 . orus [ point ] , orus_base )"		10603265	1					
ANR	10603775	Callee	DUALPROJ		10603265	0					
ANR	10603776	Identifier	DUALPROJ		10603265	0					
ANR	10603777	ArgumentList	& exc -> zp2 . orus [ point ]		10603265	1					
ANR	10603778	Argument	& exc -> zp2 . orus [ point ]		10603265	0					
ANR	10603779	UnaryOperationExpression	& exc -> zp2 . orus [ point ]		10603265	0					
ANR	10603780	UnaryOperator	&		10603265	0					
ANR	10603781	ArrayIndexing	exc -> zp2 . orus [ point ]		10603265	1					
ANR	10603782	MemberAccess	exc -> zp2 . orus		10603265	0					
ANR	10603783	PtrMemberAccess	exc -> zp2		10603265	0					
ANR	10603784	Identifier	exc		10603265	0					
ANR	10603785	Identifier	zp2		10603265	1					
ANR	10603786	Identifier	orus		10603265	1					
ANR	10603787	Identifier	point		10603265	1					
ANR	10603788	Argument	orus_base		10603265	1					
ANR	10603789	Identifier	orus_base		10603265	0					
ANR	10603790	ElseStatement	else		10603265	0					
ANR	10603791	CompoundStatement		95:8:2731:2745	10603265	0					
ANR	10603792	IdentifierDeclStatement	FT_Vector vec ;	6711:8:237068:237082	10603265	0	True				
ANR	10603793	IdentifierDecl	vec		10603265	0					
ANR	10603794	IdentifierDeclType	FT_Vector		10603265	0					
ANR	10603795	Identifier	vec		10603265	1					
ANR	10603796	ExpressionStatement	"vec . x = FT_MulFix ( SUB_LONG ( exc -> zp2 . orus [ point ] . x , orus_base -> x ) , exc -> metrics . x_scale )"	6714:8:237094:237249	10603265	1	True				
ANR	10603797	AssignmentExpression	"vec . x = FT_MulFix ( SUB_LONG ( exc -> zp2 . orus [ point ] . x , orus_base -> x ) , exc -> metrics . x_scale )"		10603265	0		=			
ANR	10603798	MemberAccess	vec . x		10603265	0					
ANR	10603799	Identifier	vec		10603265	0					
ANR	10603800	Identifier	x		10603265	1					
ANR	10603801	CallExpression	"FT_MulFix ( SUB_LONG ( exc -> zp2 . orus [ point ] . x , orus_base -> x ) , exc -> metrics . x_scale )"		10603265	1					
ANR	10603802	Callee	FT_MulFix		10603265	0					
ANR	10603803	Identifier	FT_MulFix		10603265	0					
ANR	10603804	ArgumentList	"SUB_LONG ( exc -> zp2 . orus [ point ] . x , orus_base -> x )"		10603265	1					
ANR	10603805	Argument	"SUB_LONG ( exc -> zp2 . orus [ point ] . x , orus_base -> x )"		10603265	0					
ANR	10603806	CallExpression	"SUB_LONG ( exc -> zp2 . orus [ point ] . x , orus_base -> x )"		10603265	0					
ANR	10603807	Callee	SUB_LONG		10603265	0					
ANR	10603808	Identifier	SUB_LONG		10603265	0					
ANR	10603809	ArgumentList	exc -> zp2 . orus [ point ] . x		10603265	1					
ANR	10603810	Argument	exc -> zp2 . orus [ point ] . x		10603265	0					
ANR	10603811	MemberAccess	exc -> zp2 . orus [ point ] . x		10603265	0					
ANR	10603812	ArrayIndexing	exc -> zp2 . orus [ point ]		10603265	0					
ANR	10603813	MemberAccess	exc -> zp2 . orus		10603265	0					
ANR	10603814	PtrMemberAccess	exc -> zp2		10603265	0					
ANR	10603815	Identifier	exc		10603265	0					
ANR	10603816	Identifier	zp2		10603265	1					
ANR	10603817	Identifier	orus		10603265	1					
ANR	10603818	Identifier	point		10603265	1					
ANR	10603819	Identifier	x		10603265	1					
ANR	10603820	Argument	orus_base -> x		10603265	1					
ANR	10603821	PtrMemberAccess	orus_base -> x		10603265	0					
ANR	10603822	Identifier	orus_base		10603265	0					
ANR	10603823	Identifier	x		10603265	1					
ANR	10603824	Argument	exc -> metrics . x_scale		10603265	1					
ANR	10603825	MemberAccess	exc -> metrics . x_scale		10603265	0					
ANR	10603826	PtrMemberAccess	exc -> metrics		10603265	0					
ANR	10603827	Identifier	exc		10603265	0					
ANR	10603828	Identifier	metrics		10603265	1					
ANR	10603829	Identifier	x_scale		10603265	1					
ANR	10603830	ExpressionStatement	"vec . y = FT_MulFix ( SUB_LONG ( exc -> zp2 . orus [ point ] . y , orus_base -> y ) , exc -> metrics . y_scale )"	6717:8:237259:237414	10603265	2	True				
ANR	10603831	AssignmentExpression	"vec . y = FT_MulFix ( SUB_LONG ( exc -> zp2 . orus [ point ] . y , orus_base -> y ) , exc -> metrics . y_scale )"		10603265	0		=			
ANR	10603832	MemberAccess	vec . y		10603265	0					
ANR	10603833	Identifier	vec		10603265	0					
ANR	10603834	Identifier	y		10603265	1					
ANR	10603835	CallExpression	"FT_MulFix ( SUB_LONG ( exc -> zp2 . orus [ point ] . y , orus_base -> y ) , exc -> metrics . y_scale )"		10603265	1					
ANR	10603836	Callee	FT_MulFix		10603265	0					
ANR	10603837	Identifier	FT_MulFix		10603265	0					
ANR	10603838	ArgumentList	"SUB_LONG ( exc -> zp2 . orus [ point ] . y , orus_base -> y )"		10603265	1					
ANR	10603839	Argument	"SUB_LONG ( exc -> zp2 . orus [ point ] . y , orus_base -> y )"		10603265	0					
ANR	10603840	CallExpression	"SUB_LONG ( exc -> zp2 . orus [ point ] . y , orus_base -> y )"		10603265	0					
ANR	10603841	Callee	SUB_LONG		10603265	0					
ANR	10603842	Identifier	SUB_LONG		10603265	0					
ANR	10603843	ArgumentList	exc -> zp2 . orus [ point ] . y		10603265	1					
ANR	10603844	Argument	exc -> zp2 . orus [ point ] . y		10603265	0					
ANR	10603845	MemberAccess	exc -> zp2 . orus [ point ] . y		10603265	0					
ANR	10603846	ArrayIndexing	exc -> zp2 . orus [ point ]		10603265	0					
ANR	10603847	MemberAccess	exc -> zp2 . orus		10603265	0					
ANR	10603848	PtrMemberAccess	exc -> zp2		10603265	0					
ANR	10603849	Identifier	exc		10603265	0					
ANR	10603850	Identifier	zp2		10603265	1					
ANR	10603851	Identifier	orus		10603265	1					
ANR	10603852	Identifier	point		10603265	1					
ANR	10603853	Identifier	y		10603265	1					
ANR	10603854	Argument	orus_base -> y		10603265	1					
ANR	10603855	PtrMemberAccess	orus_base -> y		10603265	0					
ANR	10603856	Identifier	orus_base		10603265	0					
ANR	10603857	Identifier	y		10603265	1					
ANR	10603858	Argument	exc -> metrics . y_scale		10603265	1					
ANR	10603859	MemberAccess	exc -> metrics . y_scale		10603265	0					
ANR	10603860	PtrMemberAccess	exc -> metrics		10603265	0					
ANR	10603861	Identifier	exc		10603265	0					
ANR	10603862	Identifier	metrics		10603265	1					
ANR	10603863	Identifier	y_scale		10603265	1					
ANR	10603864	ExpressionStatement	org_dist = FAST_DUALPROJ ( & vec )	6721:8:237425:237457	10603265	3	True				
ANR	10603865	AssignmentExpression	org_dist = FAST_DUALPROJ ( & vec )		10603265	0		=			
ANR	10603866	Identifier	org_dist		10603265	0					
ANR	10603867	CallExpression	FAST_DUALPROJ ( & vec )		10603265	1					
ANR	10603868	Callee	FAST_DUALPROJ		10603265	0					
ANR	10603869	Identifier	FAST_DUALPROJ		10603265	0					
ANR	10603870	ArgumentList	& vec		10603265	1					
ANR	10603871	Argument	& vec		10603265	0					
ANR	10603872	UnaryOperationExpression	& vec		10603265	0					
ANR	10603873	UnaryOperator	&		10603265	0					
ANR	10603874	Identifier	vec		10603265	1					
ANR	10603875	ExpressionStatement	"cur_dist = PROJECT ( & exc -> zp2 . cur [ point ] , cur_base )"	6724:6:237474:237526	10603265	4	True				
ANR	10603876	AssignmentExpression	"cur_dist = PROJECT ( & exc -> zp2 . cur [ point ] , cur_base )"		10603265	0		=			
ANR	10603877	Identifier	cur_dist		10603265	0					
ANR	10603878	CallExpression	"PROJECT ( & exc -> zp2 . cur [ point ] , cur_base )"		10603265	1					
ANR	10603879	Callee	PROJECT		10603265	0					
ANR	10603880	Identifier	PROJECT		10603265	0					
ANR	10603881	ArgumentList	& exc -> zp2 . cur [ point ]		10603265	1					
ANR	10603882	Argument	& exc -> zp2 . cur [ point ]		10603265	0					
ANR	10603883	UnaryOperationExpression	& exc -> zp2 . cur [ point ]		10603265	0					
ANR	10603884	UnaryOperator	&		10603265	0					
ANR	10603885	ArrayIndexing	exc -> zp2 . cur [ point ]		10603265	1					
ANR	10603886	MemberAccess	exc -> zp2 . cur		10603265	0					
ANR	10603887	PtrMemberAccess	exc -> zp2		10603265	0					
ANR	10603888	Identifier	exc		10603265	0					
ANR	10603889	Identifier	zp2		10603265	1					
ANR	10603890	Identifier	cur		10603265	1					
ANR	10603891	Identifier	point		10603265	1					
ANR	10603892	Argument	cur_base		10603265	1					
ANR	10603893	Identifier	cur_base		10603265	0					
ANR	10603894	IfStatement	if ( org_dist )		10603265	5					
ANR	10603895	Condition	org_dist	6726:11:237540:237547	10603265	0	True				
ANR	10603896	Identifier	org_dist		10603265	0					
ANR	10603897	CompoundStatement		111:6:3220:3220	10603265	1					
ANR	10603898	IfStatement	if ( old_range )		10603265	0					
ANR	10603899	Condition	old_range	6728:13:237572:237580	10603265	0	True				
ANR	10603900	Identifier	old_range		10603265	0					
ANR	10603901	ExpressionStatement	"new_dist = FT_MulDiv ( org_dist , cur_range , old_range )"	6729:10:237594:237648	10603265	1	True				
ANR	10603902	AssignmentExpression	"new_dist = FT_MulDiv ( org_dist , cur_range , old_range )"		10603265	0		=			
ANR	10603903	Identifier	new_dist		10603265	0					
ANR	10603904	CallExpression	"FT_MulDiv ( org_dist , cur_range , old_range )"		10603265	1					
ANR	10603905	Callee	FT_MulDiv		10603265	0					
ANR	10603906	Identifier	FT_MulDiv		10603265	0					
ANR	10603907	ArgumentList	org_dist		10603265	1					
ANR	10603908	Argument	org_dist		10603265	0					
ANR	10603909	Identifier	org_dist		10603265	0					
ANR	10603910	Argument	cur_range		10603265	1					
ANR	10603911	Identifier	cur_range		10603265	0					
ANR	10603912	Argument	old_range		10603265	2					
ANR	10603913	Identifier	old_range		10603265	0					
ANR	10603914	ElseStatement	else		10603265	0					
ANR	10603915	CompoundStatement		115:8:3334:3334	10603265	0					
ANR	10603916	ExpressionStatement	new_dist = org_dist	6748:10:238764:238783	10603265	0	True				
ANR	10603917	AssignmentExpression	new_dist = org_dist		10603265	0		=			
ANR	10603918	Identifier	new_dist		10603265	0					
ANR	10603919	Identifier	org_dist		10603265	1					
ANR	10603920	ElseStatement	else		10603265	0					
ANR	10603921	ExpressionStatement	new_dist = 0	6752:8:238822:238834	10603265	0	True				
ANR	10603922	AssignmentExpression	new_dist = 0		10603265	0		=			
ANR	10603923	Identifier	new_dist		10603265	0					
ANR	10603924	PrimaryExpression	0		10603265	1					
ANR	10603925	ExpressionStatement	"exc -> func_move ( exc , & exc -> zp2 , ( FT_UShort ) point , SUB_LONG ( new_dist , cur_dist ) )"	6754:6:238843:238991	10603265	6	True				
ANR	10603926	CallExpression	"exc -> func_move ( exc , & exc -> zp2 , ( FT_UShort ) point , SUB_LONG ( new_dist , cur_dist ) )"		10603265	0					
ANR	10603927	Callee	exc -> func_move		10603265	0					
ANR	10603928	PtrMemberAccess	exc -> func_move		10603265	0					
ANR	10603929	Identifier	exc		10603265	0					
ANR	10603930	Identifier	func_move		10603265	1					
ANR	10603931	ArgumentList	exc		10603265	1					
ANR	10603932	Argument	exc		10603265	0					
ANR	10603933	Identifier	exc		10603265	0					
ANR	10603934	Argument	& exc -> zp2		10603265	1					
ANR	10603935	UnaryOperationExpression	& exc -> zp2		10603265	0					
ANR	10603936	UnaryOperator	&		10603265	0					
ANR	10603937	PtrMemberAccess	exc -> zp2		10603265	1					
ANR	10603938	Identifier	exc		10603265	0					
ANR	10603939	Identifier	zp2		10603265	1					
ANR	10603940	Argument	( FT_UShort ) point		10603265	2					
ANR	10603941	CastExpression	( FT_UShort ) point		10603265	0					
ANR	10603942	CastTarget	FT_UShort		10603265	0					
ANR	10603943	Identifier	point		10603265	1					
ANR	10603944	Argument	"SUB_LONG ( new_dist , cur_dist )"		10603265	3					
ANR	10603945	CallExpression	"SUB_LONG ( new_dist , cur_dist )"		10603265	0					
ANR	10603946	Callee	SUB_LONG		10603265	0					
ANR	10603947	Identifier	SUB_LONG		10603265	0					
ANR	10603948	ArgumentList	new_dist		10603265	1					
ANR	10603949	Argument	new_dist		10603265	0					
ANR	10603950	Identifier	new_dist		10603265	0					
ANR	10603951	Argument	cur_dist		10603265	1					
ANR	10603952	Identifier	cur_dist		10603265	0					
ANR	10603953	Label	Fail :	6760:2:239002:239006	10603265	11	True				
ANR	10603954	Identifier	Fail		10603265	0					
ANR	10603955	ExpressionStatement	exc -> GS . loop = 1	6761:4:239012:239028	10603265	12	True				
ANR	10603956	AssignmentExpression	exc -> GS . loop = 1		10603265	0		=			
ANR	10603957	MemberAccess	exc -> GS . loop		10603265	0					
ANR	10603958	PtrMemberAccess	exc -> GS		10603265	0					
ANR	10603959	Identifier	exc		10603265	0					
ANR	10603960	Identifier	GS		10603265	1					
ANR	10603961	Identifier	loop		10603265	1					
ANR	10603962	PrimaryExpression	1		10603265	1					
ANR	10603963	ExpressionStatement	exc -> new_top = exc -> args	6762:4:239034:239058	10603265	13	True				
ANR	10603964	AssignmentExpression	exc -> new_top = exc -> args		10603265	0		=			
ANR	10603965	PtrMemberAccess	exc -> new_top		10603265	0					
ANR	10603966	Identifier	exc		10603265	0					
ANR	10603967	Identifier	new_top		10603265	1					
ANR	10603968	PtrMemberAccess	exc -> args		10603265	1					
ANR	10603969	Identifier	exc		10603265	0					
ANR	10603970	Identifier	args		10603265	1					
ANR	10603971	ReturnType	static void		10603265	1					
ANR	10603972	Identifier	Ins_IP		10603265	2					
ANR	10603973	ParameterList	TT_ExecContext exc		10603265	3					
ANR	10603974	Parameter	TT_ExecContext exc	6616:10:234312:234330	10603265	0	True				
ANR	10603975	ParameterType	TT_ExecContext		10603265	0					
ANR	10603976	Identifier	exc		10603265	1					
ANR	10603977	CFGEntryNode	ENTRY		10603265		True				
ANR	10603978	CFGExitNode	EXIT		10603265		True				
ANR	10603979	Symbol	vec . y		10603265						
ANR	10603980	Symbol	exc -> new_top		10603265						
ANR	10603981	Symbol	vec . x		10603265						
ANR	10603982	Symbol	cur_range		10603265						
ANR	10603983	Symbol	old_range		10603265						
ANR	10603984	Symbol	exc		10603265						
ANR	10603985	Symbol	Invalid_Reference		10603265						
ANR	10603986	Symbol	exc -> zp1 . org		10603265						
ANR	10603987	Symbol	BOUNDS		10603265						
ANR	10603988	Symbol	vec		10603265						
ANR	10603989	Symbol	exc -> metrics . x_scale		10603265						
ANR	10603990	Symbol	exc -> error		10603265						
ANR	10603991	Symbol	* orus_base		10603265						
ANR	10603992	Symbol	exc -> zp0 . cur		10603265						
ANR	10603993	Symbol	PROJECT		10603265						
ANR	10603994	Symbol	exc -> metrics . y_scale		10603265						
ANR	10603995	Symbol	exc -> args		10603265						
ANR	10603996	Symbol	* point		10603265						
ANR	10603997	Symbol	exc -> zp1 . n_points		10603265						
ANR	10603998	Symbol	exc -> pedantic_hinting		10603265						
ANR	10603999	Symbol	exc -> zp1 . orus [ exc -> GS . rp2 ] . x		10603265						
ANR	10604000	Symbol	exc -> metrics		10603265						
ANR	10604001	Symbol	exc -> zp1 . orus [ exc -> GS . rp2 ] . y		10603265						
ANR	10604002	Symbol	exc -> GS . rp1		10603265						
ANR	10604003	Symbol	exc -> GS . rp2		10603265						
ANR	10604004	Symbol	exc -> zp2 . n_points		10603265						
ANR	10604005	Symbol	& exc -> zp2		10603265						
ANR	10604006	Symbol	exc -> zp1 . cur		10603265						
ANR	10604007	Symbol	exc -> zp0 . org		10603265						
ANR	10604008	Symbol	& vec		10603265						
ANR	10604009	Symbol	* exc		10603265						
ANR	10604010	Symbol	FAST_DUALPROJ		10603265						
ANR	10604011	Symbol	SUB_LONG		10603265						
ANR	10604012	Symbol	* exc -> args		10603265						
ANR	10604013	Symbol	exc -> zp2 . org		10603265						
ANR	10604014	Symbol	twilight		10603265						
ANR	10604015	Symbol	cur_base		10603265						
ANR	10604016	Symbol	* exc -> GS		10603265						
ANR	10604017	Symbol	point		10603265						
ANR	10604018	Symbol	* exc -> GS . rp2		10603265						
ANR	10604019	Symbol	FT_MulDiv		10603265						
ANR	10604020	Symbol	exc -> zp0 . n_points		10603265						
ANR	10604021	Symbol	exc -> stack		10603265						
ANR	10604022	Symbol	exc -> zp2 . orus		10603265						
ANR	10604023	Symbol	exc -> zp1 . orus		10603265						
ANR	10604024	Symbol	* exc -> zp1 . orus		10603265						
ANR	10604025	Symbol	* exc -> zp2 . orus		10603265						
ANR	10604026	Symbol	DUALPROJ		10603265						
ANR	10604027	Symbol	exc -> zp0 . orus		10603265						
ANR	10604028	Symbol	exc -> zp2 . orus [ point ] . y		10603265						
ANR	10604029	Symbol	exc -> top		10603265						
ANR	10604030	Symbol	exc -> zp2 . orus [ point ] . x		10603265						
ANR	10604031	Symbol	orus_base		10603265						
ANR	10604032	Symbol	* exc -> stack		10603265						
ANR	10604033	Symbol	* * exc		10603265						
ANR	10604034	Symbol	exc -> GS . gep0		10603265						
ANR	10604035	Symbol	exc -> zp2 . cur		10603265						
ANR	10604036	Symbol	exc -> GS . gep2		10603265						
ANR	10604037	Symbol	exc -> GS . gep1		10603265						
ANR	10604038	Symbol	exc -> GS		10603265						
ANR	10604039	Symbol	FT_THROW		10603265						
ANR	10604040	Symbol	orus_base -> x		10603265						
ANR	10604041	Symbol	orus_base -> y		10603265						
ANR	10604042	Symbol	exc -> zp2		10603265						
ANR	10604043	Symbol	exc -> zp1		10603265						
ANR	10604044	Symbol	FT_MulFix		10603265						
ANR	10604045	Symbol	org_dist		10603265						
ANR	10604046	Symbol	new_dist		10603265						
ANR	10604047	Symbol	exc -> zp0		10603265						
ANR	10604048	Symbol	cur_dist		10603265						
ANR	10604049	Symbol	* exc -> zp2		10603265						
ANR	10604050	Symbol	exc -> GS . loop		10603265						
ANR	10604051	Symbol	* exc -> zp1		10603265						
ANR	10604052	Function	Ins_UTP	6772:2:239536:240060							
ANR	10604053	FunctionDef	"Ins_UTP (TT_ExecContext exc , FT_Long * args)"		10604052	0					
ANR	10604054	CompoundStatement		6775:2:239616:240060	10604052	0					
ANR	10604055	IdentifierDeclStatement	FT_UShort point ;	6776:4:239622:239638	10604052	0	True				
ANR	10604056	IdentifierDecl	point		10604052	0					
ANR	10604057	IdentifierDeclType	FT_UShort		10604052	0					
ANR	10604058	Identifier	point		10604052	1					
ANR	10604059	IdentifierDeclStatement	FT_Byte mask ;	6777:4:239644:239659	10604052	1	True				
ANR	10604060	IdentifierDecl	mask		10604052	0					
ANR	10604061	IdentifierDeclType	FT_Byte		10604052	0					
ANR	10604062	Identifier	mask		10604052	1					
ANR	10604063	ExpressionStatement	point = ( FT_UShort ) args [ 0 ]	6780:4:239667:239693	10604052	2	True				
ANR	10604064	AssignmentExpression	point = ( FT_UShort ) args [ 0 ]		10604052	0		=			
ANR	10604065	Identifier	point		10604052	0					
ANR	10604066	CastExpression	( FT_UShort ) args [ 0 ]		10604052	1					
ANR	10604067	CastTarget	FT_UShort		10604052	0					
ANR	10604068	ArrayIndexing	args [ 0 ]		10604052	1					
ANR	10604069	Identifier	args		10604052	0					
ANR	10604070	PrimaryExpression	0		10604052	1					
ANR	10604071	IfStatement	"if ( BOUNDS ( point , exc -> zp0 . n_points ) )"		10604052	3					
ANR	10604072	Condition	"BOUNDS ( point , exc -> zp0 . n_points )"	6782:9:239705:239738	10604052	0	True				
ANR	10604073	CallExpression	"BOUNDS ( point , exc -> zp0 . n_points )"		10604052	0					
ANR	10604074	Callee	BOUNDS		10604052	0					
ANR	10604075	Identifier	BOUNDS		10604052	0					
ANR	10604076	ArgumentList	point		10604052	1					
ANR	10604077	Argument	point		10604052	0					
ANR	10604078	Identifier	point		10604052	0					
ANR	10604079	Argument	exc -> zp0 . n_points		10604052	1					
ANR	10604080	MemberAccess	exc -> zp0 . n_points		10604052	0					
ANR	10604081	PtrMemberAccess	exc -> zp0		10604052	0					
ANR	10604082	Identifier	exc		10604052	0					
ANR	10604083	Identifier	zp0		10604052	1					
ANR	10604084	Identifier	n_points		10604052	1					
ANR	10604085	CompoundStatement		9:4:129:129	10604052	1					
ANR	10604086	IfStatement	if ( exc -> pedantic_hinting )		10604052	0					
ANR	10604087	Condition	exc -> pedantic_hinting	6784:11:239759:239779	10604052	0	True				
ANR	10604088	PtrMemberAccess	exc -> pedantic_hinting		10604052	0					
ANR	10604089	Identifier	exc		10604052	0					
ANR	10604090	Identifier	pedantic_hinting		10604052	1					
ANR	10604091	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	6785:8:239791:239833	10604052	1	True				
ANR	10604092	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10604052	0		=			
ANR	10604093	PtrMemberAccess	exc -> error		10604052	0					
ANR	10604094	Identifier	exc		10604052	0					
ANR	10604095	Identifier	error		10604052	1					
ANR	10604096	CallExpression	FT_THROW ( Invalid_Reference )		10604052	1					
ANR	10604097	Callee	FT_THROW		10604052	0					
ANR	10604098	Identifier	FT_THROW		10604052	0					
ANR	10604099	ArgumentList	Invalid_Reference		10604052	1					
ANR	10604100	Argument	Invalid_Reference		10604052	0					
ANR	10604101	Identifier	Invalid_Reference		10604052	0					
ANR	10604102	ReturnStatement	return ;	6786:6:239841:239847	10604052	1	True				
ANR	10604103	ExpressionStatement	mask = 0xFF	6789:4:239860:239871	10604052	4	True				
ANR	10604104	AssignmentExpression	mask = 0xFF		10604052	0		=			
ANR	10604105	Identifier	mask		10604052	0					
ANR	10604106	PrimaryExpression	0xFF		10604052	1					
ANR	10604107	IfStatement	if ( exc -> GS . freeVector . x != 0 )		10604052	5					
ANR	10604108	Condition	exc -> GS . freeVector . x != 0	6791:9:239883:239907	10604052	0	True				
ANR	10604109	EqualityExpression	exc -> GS . freeVector . x != 0		10604052	0		!=			
ANR	10604110	MemberAccess	exc -> GS . freeVector . x		10604052	0					
ANR	10604111	MemberAccess	exc -> GS . freeVector		10604052	0					
ANR	10604112	PtrMemberAccess	exc -> GS		10604052	0					
ANR	10604113	Identifier	exc		10604052	0					
ANR	10604114	Identifier	GS		10604052	1					
ANR	10604115	Identifier	freeVector		10604052	1					
ANR	10604116	Identifier	x		10604052	1					
ANR	10604117	PrimaryExpression	0		10604052	1					
ANR	10604118	ExpressionStatement	mask &= ~FT_CURVE_TAG_TOUCH_X	6792:6:239917:239946	10604052	1	True				
ANR	10604119	AssignmentExpression	mask &= ~FT_CURVE_TAG_TOUCH_X		10604052	0		&=			
ANR	10604120	Identifier	mask		10604052	0					
ANR	10604121	Identifier	~FT_CURVE_TAG_TOUCH_X		10604052	1					
ANR	10604122	IfStatement	if ( exc -> GS . freeVector . y != 0 )		10604052	6					
ANR	10604123	Condition	exc -> GS . freeVector . y != 0	6794:9:239958:239982	10604052	0	True				
ANR	10604124	EqualityExpression	exc -> GS . freeVector . y != 0		10604052	0		!=			
ANR	10604125	MemberAccess	exc -> GS . freeVector . y		10604052	0					
ANR	10604126	MemberAccess	exc -> GS . freeVector		10604052	0					
ANR	10604127	PtrMemberAccess	exc -> GS		10604052	0					
ANR	10604128	Identifier	exc		10604052	0					
ANR	10604129	Identifier	GS		10604052	1					
ANR	10604130	Identifier	freeVector		10604052	1					
ANR	10604131	Identifier	y		10604052	1					
ANR	10604132	PrimaryExpression	0		10604052	1					
ANR	10604133	ExpressionStatement	mask &= ~FT_CURVE_TAG_TOUCH_Y	6795:6:239992:240021	10604052	1	True				
ANR	10604134	AssignmentExpression	mask &= ~FT_CURVE_TAG_TOUCH_Y		10604052	0		&=			
ANR	10604135	Identifier	mask		10604052	0					
ANR	10604136	Identifier	~FT_CURVE_TAG_TOUCH_Y		10604052	1					
ANR	10604137	ExpressionStatement	exc -> zp0 . tags [ point ] &= mask	6797:4:240028:240056	10604052	7	True				
ANR	10604138	AssignmentExpression	exc -> zp0 . tags [ point ] &= mask		10604052	0		&=			
ANR	10604139	ArrayIndexing	exc -> zp0 . tags [ point ]		10604052	0					
ANR	10604140	MemberAccess	exc -> zp0 . tags		10604052	0					
ANR	10604141	PtrMemberAccess	exc -> zp0		10604052	0					
ANR	10604142	Identifier	exc		10604052	0					
ANR	10604143	Identifier	zp0		10604052	1					
ANR	10604144	Identifier	tags		10604052	1					
ANR	10604145	Identifier	point		10604052	1					
ANR	10604146	Identifier	mask		10604052	1					
ANR	10604147	ReturnType	static void		10604052	1					
ANR	10604148	Identifier	Ins_UTP		10604052	2					
ANR	10604149	ParameterList	"TT_ExecContext exc , FT_Long * args"		10604052	3					
ANR	10604150	Parameter	TT_ExecContext exc	6773:11:239559:239577	10604052	0	True				
ANR	10604151	ParameterType	TT_ExecContext		10604052	0					
ANR	10604152	Identifier	exc		10604052	1					
ANR	10604153	Parameter	FT_Long * args	6774:11:239591:239610	10604052	1	True				
ANR	10604154	ParameterType	FT_Long *		10604052	0					
ANR	10604155	Identifier	args		10604052	1					
ANR	10604156	CFGEntryNode	ENTRY		10604052		True				
ANR	10604157	CFGExitNode	EXIT		10604052		True				
ANR	10604158	Symbol	exc -> GS . freeVector . x		10604052						
ANR	10604159	Symbol	exc -> GS . freeVector . y		10604052						
ANR	10604160	Symbol	* * exc		10604052						
ANR	10604161	Symbol	* exc		10604052						
ANR	10604162	Symbol	* point		10604052						
ANR	10604163	Symbol	exc -> pedantic_hinting		10604052						
ANR	10604164	Symbol	exc -> GS		10604052						
ANR	10604165	Symbol	point		10604052						
ANR	10604166	Symbol	FT_THROW		10604052						
ANR	10604167	Symbol	* args		10604052						
ANR	10604168	Symbol	* exc -> zp0 . tags		10604052						
ANR	10604169	Symbol	args		10604052						
ANR	10604170	Symbol	~FT_CURVE_TAG_TOUCH_Y		10604052						
ANR	10604171	Symbol	exc		10604052						
ANR	10604172	Symbol	exc -> zp0 . n_points		10604052						
ANR	10604173	Symbol	~FT_CURVE_TAG_TOUCH_X		10604052						
ANR	10604174	Symbol	Invalid_Reference		10604052						
ANR	10604175	Symbol	exc -> zp0 . tags		10604052						
ANR	10604176	Symbol	BOUNDS		10604052						
ANR	10604177	Symbol	exc -> zp0		10604052						
ANR	10604178	Symbol	* exc -> zp0		10604052						
ANR	10604179	Symbol	exc -> error		10604052						
ANR	10604180	Symbol	mask		10604052						
ANR	10604181	Symbol	exc -> GS . freeVector		10604052						
ANR	10604182	ClassDef	IUP_WorkerRec_	6802:10:240111:240343							
ANR	10604183	DeclStmt									
ANR	10604184	Decl							FT_Vector	FT_Vector *	orgs
ANR	10604185	DeclStmt									
ANR	10604186	Decl							FT_Vector	FT_Vector *	curs
ANR	10604187	DeclStmt									
ANR	10604188	Decl							FT_Vector	FT_Vector *	orus
ANR	10604189	DeclStmt									
ANR	10604190	Decl							FT_UInt	FT_UInt	max_points
ANR	10604191	DeclStmt									
ANR	10604192	Decl							IUP_WorkerRec_	IUP_WorkerRec_	IUP_WorkerRec
ANR	10604193	Decl							IUP_WorkerRec_	IUP_WorkerRec_ *	IUP_Worker
ANR	10604194	Function	_iup_worker_shift	6812:2:240349:240848							
ANR	10604195	FunctionDef	"_iup_worker_shift (IUP_Worker worker , FT_UInt p1 , FT_UInt p2 , FT_UInt p)"		10604194	0					
ANR	10604196	CompoundStatement		6817:2:240515:240848	10604194	0					
ANR	10604197	IdentifierDeclStatement	FT_UInt i ;	6818:4:240521:240534	10604194	0	True				
ANR	10604198	IdentifierDecl	i		10604194	0					
ANR	10604199	IdentifierDeclType	FT_UInt		10604194	0					
ANR	10604200	Identifier	i		10604194	1					
ANR	10604201	IdentifierDeclStatement	FT_F26Dot6 dx ;	6819:4:240540:240554	10604194	1	True				
ANR	10604202	IdentifierDecl	dx		10604194	0					
ANR	10604203	IdentifierDeclType	FT_F26Dot6		10604194	0					
ANR	10604204	Identifier	dx		10604194	1					
ANR	10604205	ExpressionStatement	"dx = SUB_LONG ( worker -> curs [ p ] . x , worker -> orgs [ p ] . x )"	6822:4:240562:240615	10604194	2	True				
ANR	10604206	AssignmentExpression	"dx = SUB_LONG ( worker -> curs [ p ] . x , worker -> orgs [ p ] . x )"		10604194	0		=			
ANR	10604207	Identifier	dx		10604194	0					
ANR	10604208	CallExpression	"SUB_LONG ( worker -> curs [ p ] . x , worker -> orgs [ p ] . x )"		10604194	1					
ANR	10604209	Callee	SUB_LONG		10604194	0					
ANR	10604210	Identifier	SUB_LONG		10604194	0					
ANR	10604211	ArgumentList	worker -> curs [ p ] . x		10604194	1					
ANR	10604212	Argument	worker -> curs [ p ] . x		10604194	0					
ANR	10604213	MemberAccess	worker -> curs [ p ] . x		10604194	0					
ANR	10604214	ArrayIndexing	worker -> curs [ p ]		10604194	0					
ANR	10604215	PtrMemberAccess	worker -> curs		10604194	0					
ANR	10604216	Identifier	worker		10604194	0					
ANR	10604217	Identifier	curs		10604194	1					
ANR	10604218	Identifier	p		10604194	1					
ANR	10604219	Identifier	x		10604194	1					
ANR	10604220	Argument	worker -> orgs [ p ] . x		10604194	1					
ANR	10604221	MemberAccess	worker -> orgs [ p ] . x		10604194	0					
ANR	10604222	ArrayIndexing	worker -> orgs [ p ]		10604194	0					
ANR	10604223	PtrMemberAccess	worker -> orgs		10604194	0					
ANR	10604224	Identifier	worker		10604194	0					
ANR	10604225	Identifier	orgs		10604194	1					
ANR	10604226	Identifier	p		10604194	1					
ANR	10604227	Identifier	x		10604194	1					
ANR	10604228	IfStatement	if ( dx != 0 )		10604194	3					
ANR	10604229	Condition	dx != 0	6823:9:240626:240632	10604194	0	True				
ANR	10604230	EqualityExpression	dx != 0		10604194	0		!=			
ANR	10604231	Identifier	dx		10604194	0					
ANR	10604232	PrimaryExpression	0		10604194	1					
ANR	10604233	CompoundStatement		8:4:124:124	10604194	1					
ANR	10604234	ForStatement	for ( i = p1 ; i < p ; i ++ )		10604194	0					
ANR	10604235	ForInit	i = p1 ;	6825:12:240654:240660	10604194	0	True				
ANR	10604236	AssignmentExpression	i = p1		10604194	0		=			
ANR	10604237	Identifier	i		10604194	0					
ANR	10604238	Identifier	p1		10604194	1					
ANR	10604239	Condition	i < p	6825:20:240662:240666	10604194	1	True				
ANR	10604240	RelationalExpression	i < p		10604194	0		<			
ANR	10604241	Identifier	i		10604194	0					
ANR	10604242	Identifier	p		10604194	1					
ANR	10604243	PostIncDecOperationExpression	i ++	6825:27:240669:240671	10604194	2	True				
ANR	10604244	Identifier	i		10604194	0					
ANR	10604245	IncDec	++		10604194	1					
ANR	10604246	ExpressionStatement	"worker -> curs [ i ] . x = ADD_LONG ( worker -> curs [ i ] . x , dx )"	6826:8:240683:240736	10604194	3	True				
ANR	10604247	AssignmentExpression	"worker -> curs [ i ] . x = ADD_LONG ( worker -> curs [ i ] . x , dx )"		10604194	0		=			
ANR	10604248	MemberAccess	worker -> curs [ i ] . x		10604194	0					
ANR	10604249	ArrayIndexing	worker -> curs [ i ]		10604194	0					
ANR	10604250	PtrMemberAccess	worker -> curs		10604194	0					
ANR	10604251	Identifier	worker		10604194	0					
ANR	10604252	Identifier	curs		10604194	1					
ANR	10604253	Identifier	i		10604194	1					
ANR	10604254	Identifier	x		10604194	1					
ANR	10604255	CallExpression	"ADD_LONG ( worker -> curs [ i ] . x , dx )"		10604194	1					
ANR	10604256	Callee	ADD_LONG		10604194	0					
ANR	10604257	Identifier	ADD_LONG		10604194	0					
ANR	10604258	ArgumentList	worker -> curs [ i ] . x		10604194	1					
ANR	10604259	Argument	worker -> curs [ i ] . x		10604194	0					
ANR	10604260	MemberAccess	worker -> curs [ i ] . x		10604194	0					
ANR	10604261	ArrayIndexing	worker -> curs [ i ]		10604194	0					
ANR	10604262	PtrMemberAccess	worker -> curs		10604194	0					
ANR	10604263	Identifier	worker		10604194	0					
ANR	10604264	Identifier	curs		10604194	1					
ANR	10604265	Identifier	i		10604194	1					
ANR	10604266	Identifier	x		10604194	1					
ANR	10604267	Argument	dx		10604194	1					
ANR	10604268	Identifier	dx		10604194	0					
ANR	10604269	ForStatement	for ( i = p + 1 ; i <= p2 ; i ++ )		10604194	1					
ANR	10604270	ForInit	i = p + 1 ;	6828:12:240751:240760	10604194	0	True				
ANR	10604271	AssignmentExpression	i = p + 1		10604194	0		=			
ANR	10604272	Identifier	i		10604194	0					
ANR	10604273	AdditiveExpression	p + 1		10604194	1		+			
ANR	10604274	Identifier	p		10604194	0					
ANR	10604275	PrimaryExpression	1		10604194	1					
ANR	10604276	Condition	i <= p2	6828:23:240762:240768	10604194	1	True				
ANR	10604277	RelationalExpression	i <= p2		10604194	0		<=			
ANR	10604278	Identifier	i		10604194	0					
ANR	10604279	Identifier	p2		10604194	1					
ANR	10604280	PostIncDecOperationExpression	i ++	6828:32:240771:240773	10604194	2	True				
ANR	10604281	Identifier	i		10604194	0					
ANR	10604282	IncDec	++		10604194	1					
ANR	10604283	ExpressionStatement	"worker -> curs [ i ] . x = ADD_LONG ( worker -> curs [ i ] . x , dx )"	6829:8:240785:240838	10604194	3	True				
ANR	10604284	AssignmentExpression	"worker -> curs [ i ] . x = ADD_LONG ( worker -> curs [ i ] . x , dx )"		10604194	0		=			
ANR	10604285	MemberAccess	worker -> curs [ i ] . x		10604194	0					
ANR	10604286	ArrayIndexing	worker -> curs [ i ]		10604194	0					
ANR	10604287	PtrMemberAccess	worker -> curs		10604194	0					
ANR	10604288	Identifier	worker		10604194	0					
ANR	10604289	Identifier	curs		10604194	1					
ANR	10604290	Identifier	i		10604194	1					
ANR	10604291	Identifier	x		10604194	1					
ANR	10604292	CallExpression	"ADD_LONG ( worker -> curs [ i ] . x , dx )"		10604194	1					
ANR	10604293	Callee	ADD_LONG		10604194	0					
ANR	10604294	Identifier	ADD_LONG		10604194	0					
ANR	10604295	ArgumentList	worker -> curs [ i ] . x		10604194	1					
ANR	10604296	Argument	worker -> curs [ i ] . x		10604194	0					
ANR	10604297	MemberAccess	worker -> curs [ i ] . x		10604194	0					
ANR	10604298	ArrayIndexing	worker -> curs [ i ]		10604194	0					
ANR	10604299	PtrMemberAccess	worker -> curs		10604194	0					
ANR	10604300	Identifier	worker		10604194	0					
ANR	10604301	Identifier	curs		10604194	1					
ANR	10604302	Identifier	i		10604194	1					
ANR	10604303	Identifier	x		10604194	1					
ANR	10604304	Argument	dx		10604194	1					
ANR	10604305	Identifier	dx		10604194	0					
ANR	10604306	ReturnType	static void		10604194	1					
ANR	10604307	Identifier	_iup_worker_shift		10604194	2					
ANR	10604308	ParameterList	"IUP_Worker worker , FT_UInt p1 , FT_UInt p2 , FT_UInt p"		10604194	3					
ANR	10604309	Parameter	IUP_Worker worker	6813:21:240382:240399	10604194	0	True				
ANR	10604310	ParameterType	IUP_Worker		10604194	0					
ANR	10604311	Identifier	worker		10604194	1					
ANR	10604312	Parameter	FT_UInt p1	6814:21:240423:240436	10604194	1	True				
ANR	10604313	ParameterType	FT_UInt		10604194	0					
ANR	10604314	Identifier	p1		10604194	1					
ANR	10604315	Parameter	FT_UInt p2	6815:21:240460:240473	10604194	2	True				
ANR	10604316	ParameterType	FT_UInt		10604194	0					
ANR	10604317	Identifier	p2		10604194	1					
ANR	10604318	Parameter	FT_UInt p	6816:21:240497:240509	10604194	3	True				
ANR	10604319	ParameterType	FT_UInt		10604194	0					
ANR	10604320	Identifier	p		10604194	1					
ANR	10604321	CFGEntryNode	ENTRY		10604194		True				
ANR	10604322	CFGExitNode	EXIT		10604194		True				
ANR	10604323	Symbol	p1		10604194						
ANR	10604324	Symbol	worker -> curs [ i ] . x		10604194						
ANR	10604325	Symbol	p2		10604194						
ANR	10604326	Symbol	worker -> orgs [ p ] . x		10604194						
ANR	10604327	Symbol	ADD_LONG		10604194						
ANR	10604328	Symbol	i		10604194						
ANR	10604329	Symbol	SUB_LONG		10604194						
ANR	10604330	Symbol	worker -> curs		10604194						
ANR	10604331	Symbol	* worker		10604194						
ANR	10604332	Symbol	p		10604194						
ANR	10604333	Symbol	* worker -> curs		10604194						
ANR	10604334	Symbol	worker -> orgs		10604194						
ANR	10604335	Symbol	* i		10604194						
ANR	10604336	Symbol	dx		10604194						
ANR	10604337	Symbol	* worker -> orgs		10604194						
ANR	10604338	Symbol	* p		10604194						
ANR	10604339	Symbol	worker		10604194						
ANR	10604340	Symbol	worker -> curs [ p ] . x		10604194						
ANR	10604341	Symbol	* * worker		10604194						
ANR	10604342	Function	_iup_worker_interpolate	6834:2:240854:242994							
ANR	10604343	FunctionDef	"_iup_worker_interpolate (IUP_Worker worker , FT_UInt p1 , FT_UInt p2 , FT_UInt ref1 , FT_UInt ref2)"		10604342	0					
ANR	10604344	CompoundStatement		6840:2:241092:242994	10604342	0					
ANR	10604345	IdentifierDeclStatement	FT_UInt i ;	6841:4:241098:241111	10604342	0	True				
ANR	10604346	IdentifierDecl	i		10604342	0					
ANR	10604347	IdentifierDeclType	FT_UInt		10604342	0					
ANR	10604348	Identifier	i		10604342	1					
ANR	10604349	IdentifierDeclStatement	"FT_F26Dot6 orus1 , orus2 , org1 , org2 , cur1 , cur2 , delta1 , delta2 ;"	6842:4:241117:241181	10604342	1	True				
ANR	10604350	IdentifierDecl	orus1		10604342	0					
ANR	10604351	IdentifierDeclType	FT_F26Dot6		10604342	0					
ANR	10604352	Identifier	orus1		10604342	1					
ANR	10604353	IdentifierDecl	orus2		10604342	1					
ANR	10604354	IdentifierDeclType	FT_F26Dot6		10604342	0					
ANR	10604355	Identifier	orus2		10604342	1					
ANR	10604356	IdentifierDecl	org1		10604342	2					
ANR	10604357	IdentifierDeclType	FT_F26Dot6		10604342	0					
ANR	10604358	Identifier	org1		10604342	1					
ANR	10604359	IdentifierDecl	org2		10604342	3					
ANR	10604360	IdentifierDeclType	FT_F26Dot6		10604342	0					
ANR	10604361	Identifier	org2		10604342	1					
ANR	10604362	IdentifierDecl	cur1		10604342	4					
ANR	10604363	IdentifierDeclType	FT_F26Dot6		10604342	0					
ANR	10604364	Identifier	cur1		10604342	1					
ANR	10604365	IdentifierDecl	cur2		10604342	5					
ANR	10604366	IdentifierDeclType	FT_F26Dot6		10604342	0					
ANR	10604367	Identifier	cur2		10604342	1					
ANR	10604368	IdentifierDecl	delta1		10604342	6					
ANR	10604369	IdentifierDeclType	FT_F26Dot6		10604342	0					
ANR	10604370	Identifier	delta1		10604342	1					
ANR	10604371	IdentifierDecl	delta2		10604342	7					
ANR	10604372	IdentifierDeclType	FT_F26Dot6		10604342	0					
ANR	10604373	Identifier	delta2		10604342	1					
ANR	10604374	IfStatement	if ( p1 > p2 )		10604342	2					
ANR	10604375	Condition	p1 > p2	6845:9:241194:241200	10604342	0	True				
ANR	10604376	RelationalExpression	p1 > p2		10604342	0		>			
ANR	10604377	Identifier	p1		10604342	0					
ANR	10604378	Identifier	p2		10604342	1					
ANR	10604379	ReturnStatement	return ;	6846:6:241210:241216	10604342	1	True				
ANR	10604380	IfStatement	"if ( BOUNDS ( ref1 , worker -> max_points ) || BOUNDS ( ref2 , worker -> max_points ) )"		10604342	3					
ANR	10604381	Condition	"BOUNDS ( ref1 , worker -> max_points ) || BOUNDS ( ref2 , worker -> max_points )"	6848:9:241228:241308	10604342	0	True				
ANR	10604382	OrExpression	"BOUNDS ( ref1 , worker -> max_points ) || BOUNDS ( ref2 , worker -> max_points )"		10604342	0		||			
ANR	10604383	CallExpression	"BOUNDS ( ref1 , worker -> max_points )"		10604342	0					
ANR	10604384	Callee	BOUNDS		10604342	0					
ANR	10604385	Identifier	BOUNDS		10604342	0					
ANR	10604386	ArgumentList	ref1		10604342	1					
ANR	10604387	Argument	ref1		10604342	0					
ANR	10604388	Identifier	ref1		10604342	0					
ANR	10604389	Argument	worker -> max_points		10604342	1					
ANR	10604390	PtrMemberAccess	worker -> max_points		10604342	0					
ANR	10604391	Identifier	worker		10604342	0					
ANR	10604392	Identifier	max_points		10604342	1					
ANR	10604393	CallExpression	"BOUNDS ( ref2 , worker -> max_points )"		10604342	1					
ANR	10604394	Callee	BOUNDS		10604342	0					
ANR	10604395	Identifier	BOUNDS		10604342	0					
ANR	10604396	ArgumentList	ref2		10604342	1					
ANR	10604397	Argument	ref2		10604342	0					
ANR	10604398	Identifier	ref2		10604342	0					
ANR	10604399	Argument	worker -> max_points		10604342	1					
ANR	10604400	PtrMemberAccess	worker -> max_points		10604342	0					
ANR	10604401	Identifier	worker		10604342	0					
ANR	10604402	Identifier	max_points		10604342	1					
ANR	10604403	ReturnStatement	return ;	6850:6:241318:241324	10604342	1	True				
ANR	10604404	ExpressionStatement	orus1 = worker -> orus [ ref1 ] . x	6852:4:241331:241359	10604342	4	True				
ANR	10604405	AssignmentExpression	orus1 = worker -> orus [ ref1 ] . x		10604342	0		=			
ANR	10604406	Identifier	orus1		10604342	0					
ANR	10604407	MemberAccess	worker -> orus [ ref1 ] . x		10604342	1					
ANR	10604408	ArrayIndexing	worker -> orus [ ref1 ]		10604342	0					
ANR	10604409	PtrMemberAccess	worker -> orus		10604342	0					
ANR	10604410	Identifier	worker		10604342	0					
ANR	10604411	Identifier	orus		10604342	1					
ANR	10604412	Identifier	ref1		10604342	1					
ANR	10604413	Identifier	x		10604342	1					
ANR	10604414	ExpressionStatement	orus2 = worker -> orus [ ref2 ] . x	6853:4:241365:241393	10604342	5	True				
ANR	10604415	AssignmentExpression	orus2 = worker -> orus [ ref2 ] . x		10604342	0		=			
ANR	10604416	Identifier	orus2		10604342	0					
ANR	10604417	MemberAccess	worker -> orus [ ref2 ] . x		10604342	1					
ANR	10604418	ArrayIndexing	worker -> orus [ ref2 ]		10604342	0					
ANR	10604419	PtrMemberAccess	worker -> orus		10604342	0					
ANR	10604420	Identifier	worker		10604342	0					
ANR	10604421	Identifier	orus		10604342	1					
ANR	10604422	Identifier	ref2		10604342	1					
ANR	10604423	Identifier	x		10604342	1					
ANR	10604424	IfStatement	if ( orus1 > orus2 )		10604342	6					
ANR	10604425	Condition	orus1 > orus2	6855:9:241405:241417	10604342	0	True				
ANR	10604426	RelationalExpression	orus1 > orus2		10604342	0		>			
ANR	10604427	Identifier	orus1		10604342	0					
ANR	10604428	Identifier	orus2		10604342	1					
ANR	10604429	CompoundStatement		19:6:365:382	10604342	1					
ANR	10604430	IdentifierDeclStatement	FT_F26Dot6 tmp_o ;	6857:6:241433:241450	10604342	0	True				
ANR	10604431	IdentifierDecl	tmp_o		10604342	0					
ANR	10604432	IdentifierDeclType	FT_F26Dot6		10604342	0					
ANR	10604433	Identifier	tmp_o		10604342	1					
ANR	10604434	IdentifierDeclStatement	FT_UInt tmp_r ;	6858:6:241458:241475	10604342	1	True				
ANR	10604435	IdentifierDecl	tmp_r		10604342	0					
ANR	10604436	IdentifierDeclType	FT_UInt		10604342	0					
ANR	10604437	Identifier	tmp_r		10604342	1					
ANR	10604438	ExpressionStatement	tmp_o = orus1	6861:6:241485:241498	10604342	2	True				
ANR	10604439	AssignmentExpression	tmp_o = orus1		10604342	0		=			
ANR	10604440	Identifier	tmp_o		10604342	0					
ANR	10604441	Identifier	orus1		10604342	1					
ANR	10604442	ExpressionStatement	orus1 = orus2	6862:6:241506:241519	10604342	3	True				
ANR	10604443	AssignmentExpression	orus1 = orus2		10604342	0		=			
ANR	10604444	Identifier	orus1		10604342	0					
ANR	10604445	Identifier	orus2		10604342	1					
ANR	10604446	ExpressionStatement	orus2 = tmp_o	6863:6:241527:241540	10604342	4	True				
ANR	10604447	AssignmentExpression	orus2 = tmp_o		10604342	0		=			
ANR	10604448	Identifier	orus2		10604342	0					
ANR	10604449	Identifier	tmp_o		10604342	1					
ANR	10604450	ExpressionStatement	tmp_r = ref1	6865:6:241549:241561	10604342	5	True				
ANR	10604451	AssignmentExpression	tmp_r = ref1		10604342	0		=			
ANR	10604452	Identifier	tmp_r		10604342	0					
ANR	10604453	Identifier	ref1		10604342	1					
ANR	10604454	ExpressionStatement	ref1 = ref2	6866:6:241569:241581	10604342	6	True				
ANR	10604455	AssignmentExpression	ref1 = ref2		10604342	0		=			
ANR	10604456	Identifier	ref1		10604342	0					
ANR	10604457	Identifier	ref2		10604342	1					
ANR	10604458	ExpressionStatement	ref2 = tmp_r	6867:6:241589:241602	10604342	7	True				
ANR	10604459	AssignmentExpression	ref2 = tmp_r		10604342	0		=			
ANR	10604460	Identifier	ref2		10604342	0					
ANR	10604461	Identifier	tmp_r		10604342	1					
ANR	10604462	ExpressionStatement	org1 = worker -> orgs [ ref1 ] . x	6870:4:241615:241644	10604342	7	True				
ANR	10604463	AssignmentExpression	org1 = worker -> orgs [ ref1 ] . x		10604342	0		=			
ANR	10604464	Identifier	org1		10604342	0					
ANR	10604465	MemberAccess	worker -> orgs [ ref1 ] . x		10604342	1					
ANR	10604466	ArrayIndexing	worker -> orgs [ ref1 ]		10604342	0					
ANR	10604467	PtrMemberAccess	worker -> orgs		10604342	0					
ANR	10604468	Identifier	worker		10604342	0					
ANR	10604469	Identifier	orgs		10604342	1					
ANR	10604470	Identifier	ref1		10604342	1					
ANR	10604471	Identifier	x		10604342	1					
ANR	10604472	ExpressionStatement	org2 = worker -> orgs [ ref2 ] . x	6871:4:241650:241679	10604342	8	True				
ANR	10604473	AssignmentExpression	org2 = worker -> orgs [ ref2 ] . x		10604342	0		=			
ANR	10604474	Identifier	org2		10604342	0					
ANR	10604475	MemberAccess	worker -> orgs [ ref2 ] . x		10604342	1					
ANR	10604476	ArrayIndexing	worker -> orgs [ ref2 ]		10604342	0					
ANR	10604477	PtrMemberAccess	worker -> orgs		10604342	0					
ANR	10604478	Identifier	worker		10604342	0					
ANR	10604479	Identifier	orgs		10604342	1					
ANR	10604480	Identifier	ref2		10604342	1					
ANR	10604481	Identifier	x		10604342	1					
ANR	10604482	ExpressionStatement	cur1 = worker -> curs [ ref1 ] . x	6872:4:241685:241714	10604342	9	True				
ANR	10604483	AssignmentExpression	cur1 = worker -> curs [ ref1 ] . x		10604342	0		=			
ANR	10604484	Identifier	cur1		10604342	0					
ANR	10604485	MemberAccess	worker -> curs [ ref1 ] . x		10604342	1					
ANR	10604486	ArrayIndexing	worker -> curs [ ref1 ]		10604342	0					
ANR	10604487	PtrMemberAccess	worker -> curs		10604342	0					
ANR	10604488	Identifier	worker		10604342	0					
ANR	10604489	Identifier	curs		10604342	1					
ANR	10604490	Identifier	ref1		10604342	1					
ANR	10604491	Identifier	x		10604342	1					
ANR	10604492	ExpressionStatement	cur2 = worker -> curs [ ref2 ] . x	6873:4:241720:241749	10604342	10	True				
ANR	10604493	AssignmentExpression	cur2 = worker -> curs [ ref2 ] . x		10604342	0		=			
ANR	10604494	Identifier	cur2		10604342	0					
ANR	10604495	MemberAccess	worker -> curs [ ref2 ] . x		10604342	1					
ANR	10604496	ArrayIndexing	worker -> curs [ ref2 ]		10604342	0					
ANR	10604497	PtrMemberAccess	worker -> curs		10604342	0					
ANR	10604498	Identifier	worker		10604342	0					
ANR	10604499	Identifier	curs		10604342	1					
ANR	10604500	Identifier	ref2		10604342	1					
ANR	10604501	Identifier	x		10604342	1					
ANR	10604502	ExpressionStatement	"delta1 = SUB_LONG ( cur1 , org1 )"	6874:4:241755:241786	10604342	11	True				
ANR	10604503	AssignmentExpression	"delta1 = SUB_LONG ( cur1 , org1 )"		10604342	0		=			
ANR	10604504	Identifier	delta1		10604342	0					
ANR	10604505	CallExpression	"SUB_LONG ( cur1 , org1 )"		10604342	1					
ANR	10604506	Callee	SUB_LONG		10604342	0					
ANR	10604507	Identifier	SUB_LONG		10604342	0					
ANR	10604508	ArgumentList	cur1		10604342	1					
ANR	10604509	Argument	cur1		10604342	0					
ANR	10604510	Identifier	cur1		10604342	0					
ANR	10604511	Argument	org1		10604342	1					
ANR	10604512	Identifier	org1		10604342	0					
ANR	10604513	ExpressionStatement	"delta2 = SUB_LONG ( cur2 , org2 )"	6875:4:241792:241823	10604342	12	True				
ANR	10604514	AssignmentExpression	"delta2 = SUB_LONG ( cur2 , org2 )"		10604342	0		=			
ANR	10604515	Identifier	delta2		10604342	0					
ANR	10604516	CallExpression	"SUB_LONG ( cur2 , org2 )"		10604342	1					
ANR	10604517	Callee	SUB_LONG		10604342	0					
ANR	10604518	Identifier	SUB_LONG		10604342	0					
ANR	10604519	ArgumentList	cur2		10604342	1					
ANR	10604520	Argument	cur2		10604342	0					
ANR	10604521	Identifier	cur2		10604342	0					
ANR	10604522	Argument	org2		10604342	1					
ANR	10604523	Identifier	org2		10604342	0					
ANR	10604524	IfStatement	if ( cur1 == cur2 || orus1 == orus2 )		10604342	13					
ANR	10604525	Condition	cur1 == cur2 || orus1 == orus2	6877:9:241835:241864	10604342	0	True				
ANR	10604526	OrExpression	cur1 == cur2 || orus1 == orus2		10604342	0		||			
ANR	10604527	EqualityExpression	cur1 == cur2		10604342	0		==			
ANR	10604528	Identifier	cur1		10604342	0					
ANR	10604529	Identifier	cur2		10604342	1					
ANR	10604530	EqualityExpression	orus1 == orus2		10604342	1		==			
ANR	10604531	Identifier	orus1		10604342	0					
ANR	10604532	Identifier	orus2		10604342	1					
ANR	10604533	CompoundStatement		39:4:779:779	10604342	1					
ANR	10604534	ForStatement	for ( i = p1 ; i <= p2 ; i ++ )		10604342	0					
ANR	10604535	ForInit	i = p1 ;	6881:12:241941:241947	10604342	0	True				
ANR	10604536	AssignmentExpression	i = p1		10604342	0		=			
ANR	10604537	Identifier	i		10604342	0					
ANR	10604538	Identifier	p1		10604342	1					
ANR	10604539	Condition	i <= p2	6881:20:241949:241955	10604342	1	True				
ANR	10604540	RelationalExpression	i <= p2		10604342	0		<=			
ANR	10604541	Identifier	i		10604342	0					
ANR	10604542	Identifier	p2		10604342	1					
ANR	10604543	PostIncDecOperationExpression	i ++	6881:29:241958:241960	10604342	2	True				
ANR	10604544	Identifier	i		10604342	0					
ANR	10604545	IncDec	++		10604342	1					
ANR	10604546	CompoundStatement		44:8:887:920	10604342	3					
ANR	10604547	IdentifierDeclStatement	FT_F26Dot6 x = worker -> orgs [ i ] . x ;	6883:8:241980:242013	10604342	0	True				
ANR	10604548	IdentifierDecl	x = worker -> orgs [ i ] . x		10604342	0					
ANR	10604549	IdentifierDeclType	FT_F26Dot6		10604342	0					
ANR	10604550	Identifier	x		10604342	1					
ANR	10604551	AssignmentExpression	x = worker -> orgs [ i ] . x		10604342	2		=			
ANR	10604552	Identifier	x		10604342	0					
ANR	10604553	MemberAccess	worker -> orgs [ i ] . x		10604342	1					
ANR	10604554	ArrayIndexing	worker -> orgs [ i ]		10604342	0					
ANR	10604555	PtrMemberAccess	worker -> orgs		10604342	0					
ANR	10604556	Identifier	worker		10604342	0					
ANR	10604557	Identifier	orgs		10604342	1					
ANR	10604558	Identifier	i		10604342	1					
ANR	10604559	Identifier	x		10604342	1					
ANR	10604560	IfStatement	if ( x <= org1 )		10604342	1					
ANR	10604561	Condition	x <= org1	6886:13:242030:242038	10604342	0	True				
ANR	10604562	RelationalExpression	x <= org1		10604342	0		<=			
ANR	10604563	Identifier	x		10604342	0					
ANR	10604564	Identifier	org1		10604342	1					
ANR	10604565	ExpressionStatement	"x = ADD_LONG ( x , delta1 )"	6887:10:242052:242077	10604342	1	True				
ANR	10604566	AssignmentExpression	"x = ADD_LONG ( x , delta1 )"		10604342	0		=			
ANR	10604567	Identifier	x		10604342	0					
ANR	10604568	CallExpression	"ADD_LONG ( x , delta1 )"		10604342	1					
ANR	10604569	Callee	ADD_LONG		10604342	0					
ANR	10604570	Identifier	ADD_LONG		10604342	0					
ANR	10604571	ArgumentList	x		10604342	1					
ANR	10604572	Argument	x		10604342	0					
ANR	10604573	Identifier	x		10604342	0					
ANR	10604574	Argument	delta1		10604342	1					
ANR	10604575	Identifier	delta1		10604342	0					
ANR	10604576	ElseStatement	else		10604342	0					
ANR	10604577	IfStatement	if ( x >= org2 )		10604342	0					
ANR	10604578	Condition	x >= org2	6889:18:242098:242106	10604342	0	True				
ANR	10604579	RelationalExpression	x >= org2		10604342	0		>=			
ANR	10604580	Identifier	x		10604342	0					
ANR	10604581	Identifier	org2		10604342	1					
ANR	10604582	ExpressionStatement	"x = ADD_LONG ( x , delta2 )"	6890:10:242120:242145	10604342	1	True				
ANR	10604583	AssignmentExpression	"x = ADD_LONG ( x , delta2 )"		10604342	0		=			
ANR	10604584	Identifier	x		10604342	0					
ANR	10604585	CallExpression	"ADD_LONG ( x , delta2 )"		10604342	1					
ANR	10604586	Callee	ADD_LONG		10604342	0					
ANR	10604587	Identifier	ADD_LONG		10604342	0					
ANR	10604588	ArgumentList	x		10604342	1					
ANR	10604589	Argument	x		10604342	0					
ANR	10604590	Identifier	x		10604342	0					
ANR	10604591	Argument	delta2		10604342	1					
ANR	10604592	Identifier	delta2		10604342	0					
ANR	10604593	ElseStatement	else		10604342	0					
ANR	10604594	ExpressionStatement	x = cur1	6893:10:242171:242179	10604342	0	True				
ANR	10604595	AssignmentExpression	x = cur1		10604342	0		=			
ANR	10604596	Identifier	x		10604342	0					
ANR	10604597	Identifier	cur1		10604342	1					
ANR	10604598	ExpressionStatement	worker -> curs [ i ] . x = x	6895:8:242190:242211	10604342	2	True				
ANR	10604599	AssignmentExpression	worker -> curs [ i ] . x = x		10604342	0		=			
ANR	10604600	MemberAccess	worker -> curs [ i ] . x		10604342	0					
ANR	10604601	ArrayIndexing	worker -> curs [ i ]		10604342	0					
ANR	10604602	PtrMemberAccess	worker -> curs		10604342	0					
ANR	10604603	Identifier	worker		10604342	0					
ANR	10604604	Identifier	curs		10604342	1					
ANR	10604605	Identifier	i		10604342	1					
ANR	10604606	Identifier	x		10604342	1					
ANR	10604607	Identifier	x		10604342	1					
ANR	10604608	ElseStatement	else		10604342	0					
ANR	10604609	CompoundStatement		62:6:1188:1213	10604342	0					
ANR	10604610	IdentifierDeclStatement	FT_Fixed scale = 0 ;	6900:6:242248:242273	10604342	0	True				
ANR	10604611	IdentifierDecl	scale = 0		10604342	0					
ANR	10604612	IdentifierDeclType	FT_Fixed		10604342	0					
ANR	10604613	Identifier	scale		10604342	1					
ANR	10604614	AssignmentExpression	scale = 0		10604342	2		=			
ANR	10604615	Identifier	scale		10604342	0					
ANR	10604616	PrimaryExpression	0		10604342	1					
ANR	10604617	IdentifierDeclStatement	FT_Bool scale_valid = 0 ;	6901:6:242281:242306	10604342	1	True				
ANR	10604618	IdentifierDecl	scale_valid = 0		10604342	0					
ANR	10604619	IdentifierDeclType	FT_Bool		10604342	0					
ANR	10604620	Identifier	scale_valid		10604342	1					
ANR	10604621	AssignmentExpression	scale_valid = 0		10604342	2		=			
ANR	10604622	Identifier	scale_valid		10604342	0					
ANR	10604623	PrimaryExpression	0		10604342	1					
ANR	10604624	ForStatement	for ( i = p1 ; i <= p2 ; i ++ )		10604342	2					
ANR	10604625	ForInit	i = p1 ;	6905:12:242348:242354	10604342	0	True				
ANR	10604626	AssignmentExpression	i = p1		10604342	0		=			
ANR	10604627	Identifier	i		10604342	0					
ANR	10604628	Identifier	p1		10604342	1					
ANR	10604629	Condition	i <= p2	6905:20:242356:242362	10604342	1	True				
ANR	10604630	RelationalExpression	i <= p2		10604342	0		<=			
ANR	10604631	Identifier	i		10604342	0					
ANR	10604632	Identifier	p2		10604342	1					
ANR	10604633	PostIncDecOperationExpression	i ++	6905:29:242365:242367	10604342	2	True				
ANR	10604634	Identifier	i		10604342	0					
ANR	10604635	IncDec	++		10604342	1					
ANR	10604636	CompoundStatement		68:8:1294:1327	10604342	3					
ANR	10604637	IdentifierDeclStatement	FT_F26Dot6 x = worker -> orgs [ i ] . x ;	6907:8:242387:242420	10604342	0	True				
ANR	10604638	IdentifierDecl	x = worker -> orgs [ i ] . x		10604342	0					
ANR	10604639	IdentifierDeclType	FT_F26Dot6		10604342	0					
ANR	10604640	Identifier	x		10604342	1					
ANR	10604641	AssignmentExpression	x = worker -> orgs [ i ] . x		10604342	2		=			
ANR	10604642	Identifier	x		10604342	0					
ANR	10604643	MemberAccess	worker -> orgs [ i ] . x		10604342	1					
ANR	10604644	ArrayIndexing	worker -> orgs [ i ]		10604342	0					
ANR	10604645	PtrMemberAccess	worker -> orgs		10604342	0					
ANR	10604646	Identifier	worker		10604342	0					
ANR	10604647	Identifier	orgs		10604342	1					
ANR	10604648	Identifier	i		10604342	1					
ANR	10604649	Identifier	x		10604342	1					
ANR	10604650	IfStatement	if ( x <= org1 )		10604342	1					
ANR	10604651	Condition	x <= org1	6910:13:242437:242445	10604342	0	True				
ANR	10604652	RelationalExpression	x <= org1		10604342	0		<=			
ANR	10604653	Identifier	x		10604342	0					
ANR	10604654	Identifier	org1		10604342	1					
ANR	10604655	ExpressionStatement	"x = ADD_LONG ( x , delta1 )"	6911:10:242459:242484	10604342	1	True				
ANR	10604656	AssignmentExpression	"x = ADD_LONG ( x , delta1 )"		10604342	0		=			
ANR	10604657	Identifier	x		10604342	0					
ANR	10604658	CallExpression	"ADD_LONG ( x , delta1 )"		10604342	1					
ANR	10604659	Callee	ADD_LONG		10604342	0					
ANR	10604660	Identifier	ADD_LONG		10604342	0					
ANR	10604661	ArgumentList	x		10604342	1					
ANR	10604662	Argument	x		10604342	0					
ANR	10604663	Identifier	x		10604342	0					
ANR	10604664	Argument	delta1		10604342	1					
ANR	10604665	Identifier	delta1		10604342	0					
ANR	10604666	ElseStatement	else		10604342	0					
ANR	10604667	IfStatement	if ( x >= org2 )		10604342	0					
ANR	10604668	Condition	x >= org2	6913:18:242505:242513	10604342	0	True				
ANR	10604669	RelationalExpression	x >= org2		10604342	0		>=			
ANR	10604670	Identifier	x		10604342	0					
ANR	10604671	Identifier	org2		10604342	1					
ANR	10604672	ExpressionStatement	"x = ADD_LONG ( x , delta2 )"	6914:10:242527:242552	10604342	1	True				
ANR	10604673	AssignmentExpression	"x = ADD_LONG ( x , delta2 )"		10604342	0		=			
ANR	10604674	Identifier	x		10604342	0					
ANR	10604675	CallExpression	"ADD_LONG ( x , delta2 )"		10604342	1					
ANR	10604676	Callee	ADD_LONG		10604342	0					
ANR	10604677	Identifier	ADD_LONG		10604342	0					
ANR	10604678	ArgumentList	x		10604342	1					
ANR	10604679	Argument	x		10604342	0					
ANR	10604680	Identifier	x		10604342	0					
ANR	10604681	Argument	delta2		10604342	1					
ANR	10604682	Identifier	delta2		10604342	0					
ANR	10604683	ElseStatement	else		10604342	0					
ANR	10604684	CompoundStatement		78:8:1483:1483	10604342	0					
ANR	10604685	IfStatement	if ( ! scale_valid )		10604342	0					
ANR	10604686	Condition	! scale_valid	6918:15:242593:242604	10604342	0	True				
ANR	10604687	UnaryOperationExpression	! scale_valid		10604342	0					
ANR	10604688	UnaryOperator	!		10604342	0					
ANR	10604689	Identifier	scale_valid		10604342	1					
ANR	10604690	CompoundStatement		80:10:1525:1525	10604342	1					
ANR	10604691	ExpressionStatement	scale_valid = 1	6920:12:242632:242647	10604342	0	True				
ANR	10604692	AssignmentExpression	scale_valid = 1		10604342	0		=			
ANR	10604693	Identifier	scale_valid		10604342	0					
ANR	10604694	PrimaryExpression	1		10604342	1					
ANR	10604695	ExpressionStatement	"scale = FT_DivFix ( SUB_LONG ( cur2 , cur1 ) , SUB_LONG ( orus2 , orus1 ) )"	6921:12:242661:242773	10604342	1	True				
ANR	10604696	AssignmentExpression	"scale = FT_DivFix ( SUB_LONG ( cur2 , cur1 ) , SUB_LONG ( orus2 , orus1 ) )"		10604342	0		=			
ANR	10604697	Identifier	scale		10604342	0					
ANR	10604698	CallExpression	"FT_DivFix ( SUB_LONG ( cur2 , cur1 ) , SUB_LONG ( orus2 , orus1 ) )"		10604342	1					
ANR	10604699	Callee	FT_DivFix		10604342	0					
ANR	10604700	Identifier	FT_DivFix		10604342	0					
ANR	10604701	ArgumentList	"SUB_LONG ( cur2 , cur1 )"		10604342	1					
ANR	10604702	Argument	"SUB_LONG ( cur2 , cur1 )"		10604342	0					
ANR	10604703	CallExpression	"SUB_LONG ( cur2 , cur1 )"		10604342	0					
ANR	10604704	Callee	SUB_LONG		10604342	0					
ANR	10604705	Identifier	SUB_LONG		10604342	0					
ANR	10604706	ArgumentList	cur2		10604342	1					
ANR	10604707	Argument	cur2		10604342	0					
ANR	10604708	Identifier	cur2		10604342	0					
ANR	10604709	Argument	cur1		10604342	1					
ANR	10604710	Identifier	cur1		10604342	0					
ANR	10604711	Argument	"SUB_LONG ( orus2 , orus1 )"		10604342	1					
ANR	10604712	CallExpression	"SUB_LONG ( orus2 , orus1 )"		10604342	0					
ANR	10604713	Callee	SUB_LONG		10604342	0					
ANR	10604714	Identifier	SUB_LONG		10604342	0					
ANR	10604715	ArgumentList	orus2		10604342	1					
ANR	10604716	Argument	orus2		10604342	0					
ANR	10604717	Identifier	orus2		10604342	0					
ANR	10604718	Argument	orus1		10604342	1					
ANR	10604719	Identifier	orus1		10604342	0					
ANR	10604720	ExpressionStatement	"x = ADD_LONG ( cur1 , FT_MulFix ( SUB_LONG ( worker -> orus [ i ] . x , orus1 ) , scale ) )"	6925:10:242798:242935	10604342	1	True				
ANR	10604721	AssignmentExpression	"x = ADD_LONG ( cur1 , FT_MulFix ( SUB_LONG ( worker -> orus [ i ] . x , orus1 ) , scale ) )"		10604342	0		=			
ANR	10604722	Identifier	x		10604342	0					
ANR	10604723	CallExpression	"ADD_LONG ( cur1 , FT_MulFix ( SUB_LONG ( worker -> orus [ i ] . x , orus1 ) , scale ) )"		10604342	1					
ANR	10604724	Callee	ADD_LONG		10604342	0					
ANR	10604725	Identifier	ADD_LONG		10604342	0					
ANR	10604726	ArgumentList	cur1		10604342	1					
ANR	10604727	Argument	cur1		10604342	0					
ANR	10604728	Identifier	cur1		10604342	0					
ANR	10604729	Argument	"FT_MulFix ( SUB_LONG ( worker -> orus [ i ] . x , orus1 ) , scale )"		10604342	1					
ANR	10604730	CallExpression	"FT_MulFix ( SUB_LONG ( worker -> orus [ i ] . x , orus1 ) , scale )"		10604342	0					
ANR	10604731	Callee	FT_MulFix		10604342	0					
ANR	10604732	Identifier	FT_MulFix		10604342	0					
ANR	10604733	ArgumentList	"SUB_LONG ( worker -> orus [ i ] . x , orus1 )"		10604342	1					
ANR	10604734	Argument	"SUB_LONG ( worker -> orus [ i ] . x , orus1 )"		10604342	0					
ANR	10604735	CallExpression	"SUB_LONG ( worker -> orus [ i ] . x , orus1 )"		10604342	0					
ANR	10604736	Callee	SUB_LONG		10604342	0					
ANR	10604737	Identifier	SUB_LONG		10604342	0					
ANR	10604738	ArgumentList	worker -> orus [ i ] . x		10604342	1					
ANR	10604739	Argument	worker -> orus [ i ] . x		10604342	0					
ANR	10604740	MemberAccess	worker -> orus [ i ] . x		10604342	0					
ANR	10604741	ArrayIndexing	worker -> orus [ i ]		10604342	0					
ANR	10604742	PtrMemberAccess	worker -> orus		10604342	0					
ANR	10604743	Identifier	worker		10604342	0					
ANR	10604744	Identifier	orus		10604342	1					
ANR	10604745	Identifier	i		10604342	1					
ANR	10604746	Identifier	x		10604342	1					
ANR	10604747	Argument	orus1		10604342	1					
ANR	10604748	Identifier	orus1		10604342	0					
ANR	10604749	Argument	scale		10604342	1					
ANR	10604750	Identifier	scale		10604342	0					
ANR	10604751	ExpressionStatement	worker -> curs [ i ] . x = x	6929:8:242955:242976	10604342	2	True				
ANR	10604752	AssignmentExpression	worker -> curs [ i ] . x = x		10604342	0		=			
ANR	10604753	MemberAccess	worker -> curs [ i ] . x		10604342	0					
ANR	10604754	ArrayIndexing	worker -> curs [ i ]		10604342	0					
ANR	10604755	PtrMemberAccess	worker -> curs		10604342	0					
ANR	10604756	Identifier	worker		10604342	0					
ANR	10604757	Identifier	curs		10604342	1					
ANR	10604758	Identifier	i		10604342	1					
ANR	10604759	Identifier	x		10604342	1					
ANR	10604760	Identifier	x		10604342	1					
ANR	10604761	ReturnType	static void		10604342	1					
ANR	10604762	Identifier	_iup_worker_interpolate		10604342	2					
ANR	10604763	ParameterList	"IUP_Worker worker , FT_UInt p1 , FT_UInt p2 , FT_UInt ref1 , FT_UInt ref2"		10604342	3					
ANR	10604764	Parameter	IUP_Worker worker	6835:27:240893:240910	10604342	0	True				
ANR	10604765	ParameterType	IUP_Worker		10604342	0					
ANR	10604766	Identifier	worker		10604342	1					
ANR	10604767	Parameter	FT_UInt p1	6836:27:240940:240953	10604342	1	True				
ANR	10604768	ParameterType	FT_UInt		10604342	0					
ANR	10604769	Identifier	p1		10604342	1					
ANR	10604770	Parameter	FT_UInt p2	6837:27:240983:240996	10604342	2	True				
ANR	10604771	ParameterType	FT_UInt		10604342	0					
ANR	10604772	Identifier	p2		10604342	1					
ANR	10604773	Parameter	FT_UInt ref1	6838:27:241026:241041	10604342	3	True				
ANR	10604774	ParameterType	FT_UInt		10604342	0					
ANR	10604775	Identifier	ref1		10604342	1					
ANR	10604776	Parameter	FT_UInt ref2	6839:27:241071:241086	10604342	4	True				
ANR	10604777	ParameterType	FT_UInt		10604342	0					
ANR	10604778	Identifier	ref2		10604342	1					
ANR	10604779	CFGEntryNode	ENTRY		10604342		True				
ANR	10604780	CFGExitNode	EXIT		10604342		True				
ANR	10604781	Symbol	orus2		10604342						
ANR	10604782	Symbol	p1		10604342						
ANR	10604783	Symbol	orus1		10604342						
ANR	10604784	Symbol	worker -> orus		10604342						
ANR	10604785	Symbol	worker -> orgs [ ref1 ] . x		10604342						
ANR	10604786	Symbol	p2		10604342						
ANR	10604787	Symbol	worker -> orus [ i ] . x		10604342						
ANR	10604788	Symbol	worker -> orgs [ i ] . x		10604342						
ANR	10604789	Symbol	worker -> max_points		10604342						
ANR	10604790	Symbol	ADD_LONG		10604342						
ANR	10604791	Symbol	scale		10604342						
ANR	10604792	Symbol	ref2		10604342						
ANR	10604793	Symbol	worker -> curs		10604342						
ANR	10604794	Symbol	SUB_LONG		10604342						
ANR	10604795	Symbol	ref1		10604342						
ANR	10604796	Symbol	tmp_o		10604342						
ANR	10604797	Symbol	worker -> orus [ ref1 ] . x		10604342						
ANR	10604798	Symbol	worker -> orgs		10604342						
ANR	10604799	Symbol	* worker -> curs		10604342						
ANR	10604800	Symbol	BOUNDS		10604342						
ANR	10604801	Symbol	* ref2		10604342						
ANR	10604802	Symbol	* ref1		10604342						
ANR	10604803	Symbol	worker		10604342						
ANR	10604804	Symbol	delta2		10604342						
ANR	10604805	Symbol	cur2		10604342						
ANR	10604806	Symbol	worker -> curs [ ref1 ] . x		10604342						
ANR	10604807	Symbol	cur1		10604342						
ANR	10604808	Symbol	delta1		10604342						
ANR	10604809	Symbol	* * worker		10604342						
ANR	10604810	Symbol	tmp_r		10604342						
ANR	10604811	Symbol	worker -> curs [ i ] . x		10604342						
ANR	10604812	Symbol	FT_DivFix		10604342						
ANR	10604813	Symbol	worker -> orus [ ref2 ] . x		10604342						
ANR	10604814	Symbol	i		10604342						
ANR	10604815	Symbol	scale_valid		10604342						
ANR	10604816	Symbol	* worker		10604342						
ANR	10604817	Symbol	* worker -> orus		10604342						
ANR	10604818	Symbol	* i		10604342						
ANR	10604819	Symbol	FT_MulFix		10604342						
ANR	10604820	Symbol	x		10604342						
ANR	10604821	Symbol	org1		10604342						
ANR	10604822	Symbol	* worker -> orgs		10604342						
ANR	10604823	Symbol	worker -> curs [ ref2 ] . x		10604342						
ANR	10604824	Symbol	org2		10604342						
ANR	10604825	Symbol	worker -> orgs [ ref2 ] . x		10604342						
ANR	10604826	Function	Ins_IUP	6941:2:243468:246925							
ANR	10604827	FunctionDef	Ins_IUP (TT_ExecContext exc)		10604826	0					
ANR	10604828	CompoundStatement		6943:2:243515:246925	10604826	0					
ANR	10604829	IdentifierDeclStatement	IUP_WorkerRec V ;	6944:4:243521:243537	10604826	0	True				
ANR	10604830	IdentifierDecl	V		10604826	0					
ANR	10604831	IdentifierDeclType	IUP_WorkerRec		10604826	0					
ANR	10604832	Identifier	V		10604826	1					
ANR	10604833	IdentifierDeclStatement	FT_Byte mask ;	6945:4:243543:243562	10604826	1	True				
ANR	10604834	IdentifierDecl	mask		10604826	0					
ANR	10604835	IdentifierDeclType	FT_Byte		10604826	0					
ANR	10604836	Identifier	mask		10604826	1					
ANR	10604837	IdentifierDeclStatement	FT_UInt first_point ;	6947:4:243569:243590	10604826	2	True				
ANR	10604838	IdentifierDecl	first_point		10604826	0					
ANR	10604839	IdentifierDeclType	FT_UInt		10604826	0					
ANR	10604840	Identifier	first_point		10604826	1					
ANR	10604841	IdentifierDeclStatement	FT_UInt end_point ;	6948:4:243634:243653	10604826	3	True				
ANR	10604842	IdentifierDecl	end_point		10604826	0					
ANR	10604843	IdentifierDeclType	FT_UInt		10604826	0					
ANR	10604844	Identifier	end_point		10604826	1					
ANR	10604845	IdentifierDeclStatement	FT_UInt first_touched ;	6950:4:243700:243723	10604826	4	True				
ANR	10604846	IdentifierDecl	first_touched		10604826	0					
ANR	10604847	IdentifierDeclType	FT_UInt		10604826	0					
ANR	10604848	Identifier	first_touched		10604826	1					
ANR	10604849	IdentifierDeclStatement	FT_UInt cur_touched ;	6951:4:243768:243789	10604826	5	True				
ANR	10604850	IdentifierDecl	cur_touched		10604826	0					
ANR	10604851	IdentifierDeclType	FT_UInt		10604826	0					
ANR	10604852	Identifier	cur_touched		10604826	1					
ANR	10604853	IdentifierDeclStatement	FT_UInt point ;	6953:4:243837:243852	10604826	6	True				
ANR	10604854	IdentifierDecl	point		10604826	0					
ANR	10604855	IdentifierDeclType	FT_UInt		10604826	0					
ANR	10604856	Identifier	point		10604826	1					
ANR	10604857	IdentifierDeclStatement	FT_Short contour ;	6954:4:243888:243905	10604826	7	True				
ANR	10604858	IdentifierDecl	contour		10604826	0					
ANR	10604859	IdentifierDeclType	FT_Short		10604826	0					
ANR	10604860	Identifier	contour		10604826	1					
ANR	10604861	IfStatement	if ( SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility )		10604826	8					
ANR	10604862	Condition	SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility	6961:9:244205:244271	10604826	0	True				
ANR	10604863	AndExpression	SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility		10604826	0		&&			
ANR	10604864	Identifier	SUBPIXEL_HINTING_MINIMAL		10604826	0					
ANR	10604865	PtrMemberAccess	exc -> backward_compatibility		10604826	1					
ANR	10604866	Identifier	exc		10604826	0					
ANR	10604867	Identifier	backward_compatibility		10604826	1					
ANR	10604868	CompoundStatement		21:4:763:763	10604826	1					
ANR	10604869	IfStatement	if ( exc -> iupx_called && exc -> iupy_called )		10604826	0					
ANR	10604870	Condition	exc -> iupx_called && exc -> iupy_called	6964:11:244292:244327	10604826	0	True				
ANR	10604871	AndExpression	exc -> iupx_called && exc -> iupy_called		10604826	0		&&			
ANR	10604872	PtrMemberAccess	exc -> iupx_called		10604826	0					
ANR	10604873	Identifier	exc		10604826	0					
ANR	10604874	Identifier	iupx_called		10604826	1					
ANR	10604875	PtrMemberAccess	exc -> iupy_called		10604826	1					
ANR	10604876	Identifier	exc		10604826	0					
ANR	10604877	Identifier	iupy_called		10604826	1					
ANR	10604878	ReturnStatement	return ;	6965:8:244339:244345	10604826	1	True				
ANR	10604879	IfStatement	if ( exc -> opcode & 1 )		10604826	1					
ANR	10604880	Condition	exc -> opcode & 1	6967:11:244359:244373	10604826	0	True				
ANR	10604881	BitAndExpression	exc -> opcode & 1		10604826	0		&			
ANR	10604882	PtrMemberAccess	exc -> opcode		10604826	0					
ANR	10604883	Identifier	exc		10604826	0					
ANR	10604884	Identifier	opcode		10604826	1					
ANR	10604885	PrimaryExpression	1		10604826	1					
ANR	10604886	ExpressionStatement	exc -> iupx_called = TRUE	6968:8:244385:244408	10604826	1	True				
ANR	10604887	AssignmentExpression	exc -> iupx_called = TRUE		10604826	0		=			
ANR	10604888	PtrMemberAccess	exc -> iupx_called		10604826	0					
ANR	10604889	Identifier	exc		10604826	0					
ANR	10604890	Identifier	iupx_called		10604826	1					
ANR	10604891	Identifier	TRUE		10604826	1					
ANR	10604892	ElseStatement	else		10604826	0					
ANR	10604893	ExpressionStatement	exc -> iupy_called = TRUE	6970:8:244429:244452	10604826	0	True				
ANR	10604894	AssignmentExpression	exc -> iupy_called = TRUE		10604826	0		=			
ANR	10604895	PtrMemberAccess	exc -> iupy_called		10604826	0					
ANR	10604896	Identifier	exc		10604826	0					
ANR	10604897	Identifier	iupy_called		10604826	1					
ANR	10604898	Identifier	TRUE		10604826	1					
ANR	10604899	IfStatement	if ( exc -> pts . n_contours == 0 )		10604826	9					
ANR	10604900	Condition	exc -> pts . n_contours == 0	6975:9:244509:244532	10604826	0	True				
ANR	10604901	EqualityExpression	exc -> pts . n_contours == 0		10604826	0		==			
ANR	10604902	MemberAccess	exc -> pts . n_contours		10604826	0					
ANR	10604903	PtrMemberAccess	exc -> pts		10604826	0					
ANR	10604904	Identifier	exc		10604826	0					
ANR	10604905	Identifier	pts		10604826	1					
ANR	10604906	Identifier	n_contours		10604826	1					
ANR	10604907	PrimaryExpression	0		10604826	1					
ANR	10604908	ReturnStatement	return ;	6976:6:244542:244548	10604826	1	True				
ANR	10604909	IfStatement	if ( exc -> opcode & 1 )		10604826	10					
ANR	10604910	Condition	exc -> opcode & 1	6978:9:244560:244574	10604826	0	True				
ANR	10604911	BitAndExpression	exc -> opcode & 1		10604826	0		&			
ANR	10604912	PtrMemberAccess	exc -> opcode		10604826	0					
ANR	10604913	Identifier	exc		10604826	0					
ANR	10604914	Identifier	opcode		10604826	1					
ANR	10604915	PrimaryExpression	1		10604826	1					
ANR	10604916	CompoundStatement		37:4:1066:1066	10604826	1					
ANR	10604917	ExpressionStatement	mask = FT_CURVE_TAG_TOUCH_X	6980:6:244590:244619	10604826	0	True				
ANR	10604918	AssignmentExpression	mask = FT_CURVE_TAG_TOUCH_X		10604826	0		=			
ANR	10604919	Identifier	mask		10604826	0					
ANR	10604920	Identifier	FT_CURVE_TAG_TOUCH_X		10604826	1					
ANR	10604921	ExpressionStatement	V . orgs = exc -> pts . org	6981:6:244627:244648	10604826	1	True				
ANR	10604922	AssignmentExpression	V . orgs = exc -> pts . org		10604826	0		=			
ANR	10604923	MemberAccess	V . orgs		10604826	0					
ANR	10604924	Identifier	V		10604826	0					
ANR	10604925	Identifier	orgs		10604826	1					
ANR	10604926	MemberAccess	exc -> pts . org		10604826	1					
ANR	10604927	PtrMemberAccess	exc -> pts		10604826	0					
ANR	10604928	Identifier	exc		10604826	0					
ANR	10604929	Identifier	pts		10604826	1					
ANR	10604930	Identifier	org		10604826	1					
ANR	10604931	ExpressionStatement	V . curs = exc -> pts . cur	6982:6:244656:244677	10604826	2	True				
ANR	10604932	AssignmentExpression	V . curs = exc -> pts . cur		10604826	0		=			
ANR	10604933	MemberAccess	V . curs		10604826	0					
ANR	10604934	Identifier	V		10604826	0					
ANR	10604935	Identifier	curs		10604826	1					
ANR	10604936	MemberAccess	exc -> pts . cur		10604826	1					
ANR	10604937	PtrMemberAccess	exc -> pts		10604826	0					
ANR	10604938	Identifier	exc		10604826	0					
ANR	10604939	Identifier	pts		10604826	1					
ANR	10604940	Identifier	cur		10604826	1					
ANR	10604941	ExpressionStatement	V . orus = exc -> pts . orus	6983:6:244685:244707	10604826	3	True				
ANR	10604942	AssignmentExpression	V . orus = exc -> pts . orus		10604826	0		=			
ANR	10604943	MemberAccess	V . orus		10604826	0					
ANR	10604944	Identifier	V		10604826	0					
ANR	10604945	Identifier	orus		10604826	1					
ANR	10604946	MemberAccess	exc -> pts . orus		10604826	1					
ANR	10604947	PtrMemberAccess	exc -> pts		10604826	0					
ANR	10604948	Identifier	exc		10604826	0					
ANR	10604949	Identifier	pts		10604826	1					
ANR	10604950	Identifier	orus		10604826	1					
ANR	10604951	ElseStatement	else		10604826	0					
ANR	10604952	CompoundStatement		44:4:1212:1212	10604826	0					
ANR	10604953	ExpressionStatement	mask = FT_CURVE_TAG_TOUCH_Y	6987:6:244736:244765	10604826	0	True				
ANR	10604954	AssignmentExpression	mask = FT_CURVE_TAG_TOUCH_Y		10604826	0		=			
ANR	10604955	Identifier	mask		10604826	0					
ANR	10604956	Identifier	FT_CURVE_TAG_TOUCH_Y		10604826	1					
ANR	10604957	ExpressionStatement	V . orgs = ( FT_Vector * ) ( ( FT_Pos * ) exc -> pts . org + 1 )	6988:6:244773:244823	10604826	1	True				
ANR	10604958	AssignmentExpression	V . orgs = ( FT_Vector * ) ( ( FT_Pos * ) exc -> pts . org + 1 )		10604826	0		=			
ANR	10604959	MemberAccess	V . orgs		10604826	0					
ANR	10604960	Identifier	V		10604826	0					
ANR	10604961	Identifier	orgs		10604826	1					
ANR	10604962	CastExpression	( FT_Vector * ) ( ( FT_Pos * ) exc -> pts . org + 1 )		10604826	1					
ANR	10604963	CastTarget	FT_Vector *		10604826	0					
ANR	10604964	AdditiveExpression	( FT_Pos * ) exc -> pts . org + 1		10604826	1		+			
ANR	10604965	CastExpression	( FT_Pos * ) exc -> pts . org		10604826	0					
ANR	10604966	CastTarget	FT_Pos *		10604826	0					
ANR	10604967	MemberAccess	exc -> pts . org		10604826	1					
ANR	10604968	PtrMemberAccess	exc -> pts		10604826	0					
ANR	10604969	Identifier	exc		10604826	0					
ANR	10604970	Identifier	pts		10604826	1					
ANR	10604971	Identifier	org		10604826	1					
ANR	10604972	PrimaryExpression	1		10604826	1					
ANR	10604973	ExpressionStatement	V . curs = ( FT_Vector * ) ( ( FT_Pos * ) exc -> pts . cur + 1 )	6989:6:244831:244881	10604826	2	True				
ANR	10604974	AssignmentExpression	V . curs = ( FT_Vector * ) ( ( FT_Pos * ) exc -> pts . cur + 1 )		10604826	0		=			
ANR	10604975	MemberAccess	V . curs		10604826	0					
ANR	10604976	Identifier	V		10604826	0					
ANR	10604977	Identifier	curs		10604826	1					
ANR	10604978	CastExpression	( FT_Vector * ) ( ( FT_Pos * ) exc -> pts . cur + 1 )		10604826	1					
ANR	10604979	CastTarget	FT_Vector *		10604826	0					
ANR	10604980	AdditiveExpression	( FT_Pos * ) exc -> pts . cur + 1		10604826	1		+			
ANR	10604981	CastExpression	( FT_Pos * ) exc -> pts . cur		10604826	0					
ANR	10604982	CastTarget	FT_Pos *		10604826	0					
ANR	10604983	MemberAccess	exc -> pts . cur		10604826	1					
ANR	10604984	PtrMemberAccess	exc -> pts		10604826	0					
ANR	10604985	Identifier	exc		10604826	0					
ANR	10604986	Identifier	pts		10604826	1					
ANR	10604987	Identifier	cur		10604826	1					
ANR	10604988	PrimaryExpression	1		10604826	1					
ANR	10604989	ExpressionStatement	V . orus = ( FT_Vector * ) ( ( FT_Pos * ) exc -> pts . orus + 1 )	6990:6:244889:244940	10604826	3	True				
ANR	10604990	AssignmentExpression	V . orus = ( FT_Vector * ) ( ( FT_Pos * ) exc -> pts . orus + 1 )		10604826	0		=			
ANR	10604991	MemberAccess	V . orus		10604826	0					
ANR	10604992	Identifier	V		10604826	0					
ANR	10604993	Identifier	orus		10604826	1					
ANR	10604994	CastExpression	( FT_Vector * ) ( ( FT_Pos * ) exc -> pts . orus + 1 )		10604826	1					
ANR	10604995	CastTarget	FT_Vector *		10604826	0					
ANR	10604996	AdditiveExpression	( FT_Pos * ) exc -> pts . orus + 1		10604826	1		+			
ANR	10604997	CastExpression	( FT_Pos * ) exc -> pts . orus		10604826	0					
ANR	10604998	CastTarget	FT_Pos *		10604826	0					
ANR	10604999	MemberAccess	exc -> pts . orus		10604826	1					
ANR	10605000	PtrMemberAccess	exc -> pts		10604826	0					
ANR	10605001	Identifier	exc		10604826	0					
ANR	10605002	Identifier	pts		10604826	1					
ANR	10605003	Identifier	orus		10604826	1					
ANR	10605004	PrimaryExpression	1		10604826	1					
ANR	10605005	ExpressionStatement	V . max_points = exc -> pts . n_points	6992:4:244952:244984	10604826	11	True				
ANR	10605006	AssignmentExpression	V . max_points = exc -> pts . n_points		10604826	0		=			
ANR	10605007	MemberAccess	V . max_points		10604826	0					
ANR	10605008	Identifier	V		10604826	0					
ANR	10605009	Identifier	max_points		10604826	1					
ANR	10605010	MemberAccess	exc -> pts . n_points		10604826	1					
ANR	10605011	PtrMemberAccess	exc -> pts		10604826	0					
ANR	10605012	Identifier	exc		10604826	0					
ANR	10605013	Identifier	pts		10604826	1					
ANR	10605014	Identifier	n_points		10604826	1					
ANR	10605015	ExpressionStatement	contour = 0	6994:4:244991:245002	10604826	12	True				
ANR	10605016	AssignmentExpression	contour = 0		10604826	0		=			
ANR	10605017	Identifier	contour		10604826	0					
ANR	10605018	PrimaryExpression	0		10604826	1					
ANR	10605019	ExpressionStatement	point = 0	6995:4:245008:245019	10604826	13	True				
ANR	10605020	AssignmentExpression	point = 0		10604826	0		=			
ANR	10605021	Identifier	point		10604826	0					
ANR	10605022	PrimaryExpression	0		10604826	1					
ANR	10605023	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode )		10604826	14					
ANR	10605024	Condition	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode	6998:9:245077:245134	10604826	0	True				
ANR	10605025	AndExpression	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode		10604826	0		&&			
ANR	10605026	Identifier	SUBPIXEL_HINTING_INFINALITY		10604826	0					
ANR	10605027	PtrMemberAccess	exc -> ignore_x_mode		10604826	1					
ANR	10605028	Identifier	exc		10604826	0					
ANR	10605029	Identifier	ignore_x_mode		10604826	1					
ANR	10605030	CompoundStatement		58:4:1635:1635	10604826	1					
ANR	10605031	ExpressionStatement	exc -> iup_called = TRUE	7001:6:245159:245181	10604826	0	True				
ANR	10605032	AssignmentExpression	exc -> iup_called = TRUE		10604826	0		=			
ANR	10605033	PtrMemberAccess	exc -> iup_called		10604826	0					
ANR	10605034	Identifier	exc		10604826	0					
ANR	10605035	Identifier	iup_called		10604826	1					
ANR	10605036	Identifier	TRUE		10604826	1					
ANR	10605037	IfStatement	if ( exc -> sph_tweak_flags & SPH_TWEAK_SKIP_IUP )		10604826	1					
ANR	10605038	Condition	exc -> sph_tweak_flags & SPH_TWEAK_SKIP_IUP	7002:11:245194:245234	10604826	0	True				
ANR	10605039	BitAndExpression	exc -> sph_tweak_flags & SPH_TWEAK_SKIP_IUP		10604826	0		&			
ANR	10605040	PtrMemberAccess	exc -> sph_tweak_flags		10604826	0					
ANR	10605041	Identifier	exc		10604826	0					
ANR	10605042	Identifier	sph_tweak_flags		10604826	1					
ANR	10605043	Identifier	SPH_TWEAK_SKIP_IUP		10604826	1					
ANR	10605044	ReturnStatement	return ;	7003:8:245246:245252	10604826	1	True				
ANR	10605045	DoStatement	do		10604826	15					
ANR	10605046	CompoundStatement		66:4:1808:1808	10604826	0					
ANR	10605047	ExpressionStatement	end_point = exc -> pts . contours [ contour ] - exc -> pts . first_point	7009:6:245332:245395	10604826	0	True				
ANR	10605048	AssignmentExpression	end_point = exc -> pts . contours [ contour ] - exc -> pts . first_point		10604826	0		=			
ANR	10605049	Identifier	end_point		10604826	0					
ANR	10605050	AdditiveExpression	exc -> pts . contours [ contour ] - exc -> pts . first_point		10604826	1		-			
ANR	10605051	ArrayIndexing	exc -> pts . contours [ contour ]		10604826	0					
ANR	10605052	MemberAccess	exc -> pts . contours		10604826	0					
ANR	10605053	PtrMemberAccess	exc -> pts		10604826	0					
ANR	10605054	Identifier	exc		10604826	0					
ANR	10605055	Identifier	pts		10604826	1					
ANR	10605056	Identifier	contours		10604826	1					
ANR	10605057	Identifier	contour		10604826	1					
ANR	10605058	MemberAccess	exc -> pts . first_point		10604826	1					
ANR	10605059	PtrMemberAccess	exc -> pts		10604826	0					
ANR	10605060	Identifier	exc		10604826	0					
ANR	10605061	Identifier	pts		10604826	1					
ANR	10605062	Identifier	first_point		10604826	1					
ANR	10605063	ExpressionStatement	first_point = point	7010:6:245403:245422	10604826	1	True				
ANR	10605064	AssignmentExpression	first_point = point		10604826	0		=			
ANR	10605065	Identifier	first_point		10604826	0					
ANR	10605066	Identifier	point		10604826	1					
ANR	10605067	IfStatement	"if ( BOUNDS ( end_point , exc -> pts . n_points ) )"		10604826	2					
ANR	10605068	Condition	"BOUNDS ( end_point , exc -> pts . n_points )"	7012:11:245436:245473	10604826	0	True				
ANR	10605069	CallExpression	"BOUNDS ( end_point , exc -> pts . n_points )"		10604826	0					
ANR	10605070	Callee	BOUNDS		10604826	0					
ANR	10605071	Identifier	BOUNDS		10604826	0					
ANR	10605072	ArgumentList	end_point		10604826	1					
ANR	10605073	Argument	end_point		10604826	0					
ANR	10605074	Identifier	end_point		10604826	0					
ANR	10605075	Argument	exc -> pts . n_points		10604826	1					
ANR	10605076	MemberAccess	exc -> pts . n_points		10604826	0					
ANR	10605077	PtrMemberAccess	exc -> pts		10604826	0					
ANR	10605078	Identifier	exc		10604826	0					
ANR	10605079	Identifier	pts		10604826	1					
ANR	10605080	Identifier	n_points		10604826	1					
ANR	10605081	ExpressionStatement	end_point = exc -> pts . n_points - 1	7013:8:245485:245518	10604826	1	True				
ANR	10605082	AssignmentExpression	end_point = exc -> pts . n_points - 1		10604826	0		=			
ANR	10605083	Identifier	end_point		10604826	0					
ANR	10605084	AdditiveExpression	exc -> pts . n_points - 1		10604826	1		-			
ANR	10605085	MemberAccess	exc -> pts . n_points		10604826	0					
ANR	10605086	PtrMemberAccess	exc -> pts		10604826	0					
ANR	10605087	Identifier	exc		10604826	0					
ANR	10605088	Identifier	pts		10604826	1					
ANR	10605089	Identifier	n_points		10604826	1					
ANR	10605090	PrimaryExpression	1		10604826	1					
ANR	10605091	WhileStatement	while ( point <= end_point && ( exc -> pts . tags [ point ] & mask ) == 0 )		10604826	3					
ANR	10605092	Condition	point <= end_point && ( exc -> pts . tags [ point ] & mask ) == 0	7015:14:245535:245592	10604826	0	True				
ANR	10605093	AndExpression	point <= end_point && ( exc -> pts . tags [ point ] & mask ) == 0		10604826	0		&&			
ANR	10605094	RelationalExpression	point <= end_point		10604826	0		<=			
ANR	10605095	Identifier	point		10604826	0					
ANR	10605096	Identifier	end_point		10604826	1					
ANR	10605097	EqualityExpression	( exc -> pts . tags [ point ] & mask ) == 0		10604826	1		==			
ANR	10605098	BitAndExpression	exc -> pts . tags [ point ] & mask		10604826	0		&			
ANR	10605099	ArrayIndexing	exc -> pts . tags [ point ]		10604826	0					
ANR	10605100	MemberAccess	exc -> pts . tags		10604826	0					
ANR	10605101	PtrMemberAccess	exc -> pts		10604826	0					
ANR	10605102	Identifier	exc		10604826	0					
ANR	10605103	Identifier	pts		10604826	1					
ANR	10605104	Identifier	tags		10604826	1					
ANR	10605105	Identifier	point		10604826	1					
ANR	10605106	Identifier	mask		10604826	1					
ANR	10605107	PrimaryExpression	0		10604826	1					
ANR	10605108	ExpressionStatement	point ++	7016:8:245604:245611	10604826	1	True				
ANR	10605109	PostIncDecOperationExpression	point ++		10604826	0					
ANR	10605110	Identifier	point		10604826	0					
ANR	10605111	IncDec	++		10604826	1					
ANR	10605112	IfStatement	if ( point <= end_point )		10604826	4					
ANR	10605113	Condition	point <= end_point	7018:11:245625:245642	10604826	0	True				
ANR	10605114	RelationalExpression	point <= end_point		10604826	0		<=			
ANR	10605115	Identifier	point		10604826	0					
ANR	10605116	Identifier	end_point		10604826	1					
ANR	10605117	CompoundStatement		77:6:2136:2136	10604826	1					
ANR	10605118	ExpressionStatement	first_touched = point	7020:8:245662:245683	10604826	0	True				
ANR	10605119	AssignmentExpression	first_touched = point		10604826	0		=			
ANR	10605120	Identifier	first_touched		10604826	0					
ANR	10605121	Identifier	point		10604826	1					
ANR	10605122	ExpressionStatement	cur_touched = point	7021:8:245693:245714	10604826	1	True				
ANR	10605123	AssignmentExpression	cur_touched = point		10604826	0		=			
ANR	10605124	Identifier	cur_touched		10604826	0					
ANR	10605125	Identifier	point		10604826	1					
ANR	10605126	ExpressionStatement	point ++	7023:8:245725:245732	10604826	2	True				
ANR	10605127	PostIncDecOperationExpression	point ++		10604826	0					
ANR	10605128	Identifier	point		10604826	0					
ANR	10605129	IncDec	++		10604826	1					
ANR	10605130	WhileStatement	while ( point <= end_point )		10604826	3					
ANR	10605131	Condition	point <= end_point	7025:16:245751:245768	10604826	0	True				
ANR	10605132	RelationalExpression	point <= end_point		10604826	0		<=			
ANR	10605133	Identifier	point		10604826	0					
ANR	10605134	Identifier	end_point		10604826	1					
ANR	10605135	CompoundStatement		84:8:2264:2264	10604826	1					
ANR	10605136	IfStatement	if ( ( exc -> pts . tags [ point ] & mask ) != 0 )		10604826	0					
ANR	10605137	Condition	( exc -> pts . tags [ point ] & mask ) != 0	7027:15:245797:245832	10604826	0	True				
ANR	10605138	EqualityExpression	( exc -> pts . tags [ point ] & mask ) != 0		10604826	0		!=			
ANR	10605139	BitAndExpression	exc -> pts . tags [ point ] & mask		10604826	0		&			
ANR	10605140	ArrayIndexing	exc -> pts . tags [ point ]		10604826	0					
ANR	10605141	MemberAccess	exc -> pts . tags		10604826	0					
ANR	10605142	PtrMemberAccess	exc -> pts		10604826	0					
ANR	10605143	Identifier	exc		10604826	0					
ANR	10605144	Identifier	pts		10604826	1					
ANR	10605145	Identifier	tags		10604826	1					
ANR	10605146	Identifier	point		10604826	1					
ANR	10605147	Identifier	mask		10604826	1					
ANR	10605148	PrimaryExpression	0		10604826	1					
ANR	10605149	CompoundStatement		86:10:2330:2330	10604826	1					
ANR	10605150	ExpressionStatement	"_iup_worker_interpolate ( & V , cur_touched + 1 , point - 1 , cur_touched , point )"	7029:12:245860:246085	10604826	0	True				
ANR	10605151	CallExpression	"_iup_worker_interpolate ( & V , cur_touched + 1 , point - 1 , cur_touched , point )"		10604826	0					
ANR	10605152	Callee	_iup_worker_interpolate		10604826	0					
ANR	10605153	Identifier	_iup_worker_interpolate		10604826	0					
ANR	10605154	ArgumentList	& V		10604826	1					
ANR	10605155	Argument	& V		10604826	0					
ANR	10605156	UnaryOperationExpression	& V		10604826	0					
ANR	10605157	UnaryOperator	&		10604826	0					
ANR	10605158	Identifier	V		10604826	1					
ANR	10605159	Argument	cur_touched + 1		10604826	1					
ANR	10605160	AdditiveExpression	cur_touched + 1		10604826	0		+			
ANR	10605161	Identifier	cur_touched		10604826	0					
ANR	10605162	PrimaryExpression	1		10604826	1					
ANR	10605163	Argument	point - 1		10604826	2					
ANR	10605164	AdditiveExpression	point - 1		10604826	0		-			
ANR	10605165	Identifier	point		10604826	0					
ANR	10605166	PrimaryExpression	1		10604826	1					
ANR	10605167	Argument	cur_touched		10604826	3					
ANR	10605168	Identifier	cur_touched		10604826	0					
ANR	10605169	Argument	point		10604826	4					
ANR	10605170	Identifier	point		10604826	0					
ANR	10605171	ExpressionStatement	cur_touched = point	7034:12:246099:246118	10604826	1	True				
ANR	10605172	AssignmentExpression	cur_touched = point		10604826	0		=			
ANR	10605173	Identifier	cur_touched		10604826	0					
ANR	10605174	Identifier	point		10604826	1					
ANR	10605175	ExpressionStatement	point ++	7037:10:246143:246150	10604826	1	True				
ANR	10605176	PostIncDecOperationExpression	point ++		10604826	0					
ANR	10605177	Identifier	point		10604826	0					
ANR	10605178	IncDec	++		10604826	1					
ANR	10605179	IfStatement	if ( cur_touched == first_touched )		10604826	4					
ANR	10605180	Condition	cur_touched == first_touched	7040:13:246176:246203	10604826	0	True				
ANR	10605181	EqualityExpression	cur_touched == first_touched		10604826	0		==			
ANR	10605182	Identifier	cur_touched		10604826	0					
ANR	10605183	Identifier	first_touched		10604826	1					
ANR	10605184	ExpressionStatement	"_iup_worker_shift ( & V , first_point , end_point , cur_touched )"	7041:10:246217:246277	10604826	1	True				
ANR	10605185	CallExpression	"_iup_worker_shift ( & V , first_point , end_point , cur_touched )"		10604826	0					
ANR	10605186	Callee	_iup_worker_shift		10604826	0					
ANR	10605187	Identifier	_iup_worker_shift		10604826	0					
ANR	10605188	ArgumentList	& V		10604826	1					
ANR	10605189	Argument	& V		10604826	0					
ANR	10605190	UnaryOperationExpression	& V		10604826	0					
ANR	10605191	UnaryOperator	&		10604826	0					
ANR	10605192	Identifier	V		10604826	1					
ANR	10605193	Argument	first_point		10604826	1					
ANR	10605194	Identifier	first_point		10604826	0					
ANR	10605195	Argument	end_point		10604826	2					
ANR	10605196	Identifier	end_point		10604826	0					
ANR	10605197	Argument	cur_touched		10604826	3					
ANR	10605198	Identifier	cur_touched		10604826	0					
ANR	10605199	ElseStatement	else		10604826	0					
ANR	10605200	CompoundStatement		101:8:2784:2784	10604826	0					
ANR	10605201	ExpressionStatement	"_iup_worker_interpolate ( & V , ( FT_UShort ) ( cur_touched + 1 ) , end_point , cur_touched , first_touched )"	7044:10:246312:246552	10604826	0	True				
ANR	10605202	CallExpression	"_iup_worker_interpolate ( & V , ( FT_UShort ) ( cur_touched + 1 ) , end_point , cur_touched , first_touched )"		10604826	0					
ANR	10605203	Callee	_iup_worker_interpolate		10604826	0					
ANR	10605204	Identifier	_iup_worker_interpolate		10604826	0					
ANR	10605205	ArgumentList	& V		10604826	1					
ANR	10605206	Argument	& V		10604826	0					
ANR	10605207	UnaryOperationExpression	& V		10604826	0					
ANR	10605208	UnaryOperator	&		10604826	0					
ANR	10605209	Identifier	V		10604826	1					
ANR	10605210	Argument	( FT_UShort ) ( cur_touched + 1 )		10604826	1					
ANR	10605211	CastExpression	( FT_UShort ) ( cur_touched + 1 )		10604826	0					
ANR	10605212	CastTarget	FT_UShort		10604826	0					
ANR	10605213	AdditiveExpression	cur_touched + 1		10604826	1		+			
ANR	10605214	Identifier	cur_touched		10604826	0					
ANR	10605215	PrimaryExpression	1		10604826	1					
ANR	10605216	Argument	end_point		10604826	2					
ANR	10605217	Identifier	end_point		10604826	0					
ANR	10605218	Argument	cur_touched		10604826	3					
ANR	10605219	Identifier	cur_touched		10604826	0					
ANR	10605220	Argument	first_touched		10604826	4					
ANR	10605221	Identifier	first_touched		10604826	0					
ANR	10605222	IfStatement	if ( first_touched > 0 )		10604826	1					
ANR	10605223	Condition	first_touched > 0	7050:15:246570:246586	10604826	0	True				
ANR	10605224	RelationalExpression	first_touched > 0		10604826	0		>			
ANR	10605225	Identifier	first_touched		10604826	0					
ANR	10605226	PrimaryExpression	0		10604826	1					
ANR	10605227	ExpressionStatement	"_iup_worker_interpolate ( & V , first_point , first_touched - 1 , cur_touched , first_touched )"	7051:12:246602:246839	10604826	1	True				
ANR	10605228	CallExpression	"_iup_worker_interpolate ( & V , first_point , first_touched - 1 , cur_touched , first_touched )"		10604826	0					
ANR	10605229	Callee	_iup_worker_interpolate		10604826	0					
ANR	10605230	Identifier	_iup_worker_interpolate		10604826	0					
ANR	10605231	ArgumentList	& V		10604826	1					
ANR	10605232	Argument	& V		10604826	0					
ANR	10605233	UnaryOperationExpression	& V		10604826	0					
ANR	10605234	UnaryOperator	&		10604826	0					
ANR	10605235	Identifier	V		10604826	1					
ANR	10605236	Argument	first_point		10604826	1					
ANR	10605237	Identifier	first_point		10604826	0					
ANR	10605238	Argument	first_touched - 1		10604826	2					
ANR	10605239	AdditiveExpression	first_touched - 1		10604826	0		-			
ANR	10605240	Identifier	first_touched		10604826	0					
ANR	10605241	PrimaryExpression	1		10604826	1					
ANR	10605242	Argument	cur_touched		10604826	3					
ANR	10605243	Identifier	cur_touched		10604826	0					
ANR	10605244	Argument	first_touched		10604826	4					
ANR	10605245	Identifier	first_touched		10604826	0					
ANR	10605246	ExpressionStatement	contour ++	7058:6:246865:246874	10604826	5	True				
ANR	10605247	PostIncDecOperationExpression	contour ++		10604826	0					
ANR	10605248	Identifier	contour		10604826	0					
ANR	10605249	IncDec	++		10604826	1					
ANR	10605250	Condition	contour < exc -> pts . n_contours	7059:14:246890:246918	10604826	1	True				
ANR	10605251	RelationalExpression	contour < exc -> pts . n_contours		10604826	0		<			
ANR	10605252	Identifier	contour		10604826	0					
ANR	10605253	MemberAccess	exc -> pts . n_contours		10604826	1					
ANR	10605254	PtrMemberAccess	exc -> pts		10604826	0					
ANR	10605255	Identifier	exc		10604826	0					
ANR	10605256	Identifier	pts		10604826	1					
ANR	10605257	Identifier	n_contours		10604826	1					
ANR	10605258	ReturnType	static void		10604826	1					
ANR	10605259	Identifier	Ins_IUP		10604826	2					
ANR	10605260	ParameterList	TT_ExecContext exc		10604826	3					
ANR	10605261	Parameter	TT_ExecContext exc	6942:11:243491:243509	10604826	0	True				
ANR	10605262	ParameterType	TT_ExecContext		10604826	0					
ANR	10605263	Identifier	exc		10604826	1					
ANR	10605264	CFGEntryNode	ENTRY		10604826		True				
ANR	10605265	CFGExitNode	EXIT		10604826		True				
ANR	10605266	Symbol	SUBPIXEL_HINTING_MINIMAL		10604826						
ANR	10605267	Symbol	exc -> pts . n_contours		10604826						
ANR	10605268	Symbol	* exc		10604826						
ANR	10605269	Symbol	end_point		10604826						
ANR	10605270	Symbol	FT_CURVE_TAG_TOUCH_X		10604826						
ANR	10605271	Symbol	FT_CURVE_TAG_TOUCH_Y		10604826						
ANR	10605272	Symbol	exc -> pts . n_points		10604826						
ANR	10605273	Symbol	point		10604826						
ANR	10605274	Symbol	exc -> pts . cur		10604826						
ANR	10605275	Symbol	SUBPIXEL_HINTING_INFINALITY		10604826						
ANR	10605276	Symbol	exc		10604826						
ANR	10605277	Symbol	exc -> pts . org		10604826						
ANR	10605278	Symbol	BOUNDS		10604826						
ANR	10605279	Symbol	V		10604826						
ANR	10605280	Symbol	exc -> sph_tweak_flags		10604826						
ANR	10605281	Symbol	first_touched		10604826						
ANR	10605282	Symbol	V . max_points		10604826						
ANR	10605283	Symbol	& V		10604826						
ANR	10605284	Symbol	exc -> ignore_x_mode		10604826						
ANR	10605285	Symbol	mask		10604826						
ANR	10605286	Symbol	V . orus		10604826						
ANR	10605287	Symbol	* * exc		10604826						
ANR	10605288	Symbol	* point		10604826						
ANR	10605289	Symbol	exc -> pts . orus		10604826						
ANR	10605290	Symbol	TRUE		10604826						
ANR	10605291	Symbol	V . orgs		10604826						
ANR	10605292	Symbol	exc -> pts . contours		10604826						
ANR	10605293	Symbol	first_point		10604826						
ANR	10605294	Symbol	contour		10604826						
ANR	10605295	Symbol	* exc -> pts		10604826						
ANR	10605296	Symbol	* exc -> pts . contours		10604826						
ANR	10605297	Symbol	exc -> backward_compatibility		10604826						
ANR	10605298	Symbol	V . curs		10604826						
ANR	10605299	Symbol	* exc -> pts . tags		10604826						
ANR	10605300	Symbol	SPH_TWEAK_SKIP_IUP		10604826						
ANR	10605301	Symbol	* contour		10604826						
ANR	10605302	Symbol	cur_touched		10604826						
ANR	10605303	Symbol	exc -> iup_called		10604826						
ANR	10605304	Symbol	exc -> pts . first_point		10604826						
ANR	10605305	Symbol	exc -> opcode		10604826						
ANR	10605306	Symbol	exc -> pts		10604826						
ANR	10605307	Symbol	exc -> pts . tags		10604826						
ANR	10605308	Symbol	exc -> iupx_called		10604826						
ANR	10605309	Symbol	exc -> iupy_called		10604826						
ANR	10605310	Function	Ins_DELTAP	7069:2:247399:253155							
ANR	10605311	FunctionDef	"Ins_DELTAP (TT_ExecContext exc , FT_Long * args)"		10605310	0					
ANR	10605312	CompoundStatement		7072:2:247485:253155	10605310	0					
ANR	10605313	IdentifierDeclStatement	"FT_ULong nump , k ;"	7073:4:247491:247509	10605310	0	True				
ANR	10605314	IdentifierDecl	nump		10605310	0					
ANR	10605315	IdentifierDeclType	FT_ULong		10605310	0					
ANR	10605316	Identifier	nump		10605310	1					
ANR	10605317	IdentifierDecl	k		10605310	1					
ANR	10605318	IdentifierDeclType	FT_ULong		10605310	0					
ANR	10605319	Identifier	k		10605310	1					
ANR	10605320	IdentifierDeclStatement	FT_UShort A ;	7074:4:247515:247527	10605310	1	True				
ANR	10605321	IdentifierDecl	A		10605310	0					
ANR	10605322	IdentifierDeclType	FT_UShort		10605310	0					
ANR	10605323	Identifier	A		10605310	1					
ANR	10605324	IdentifierDeclStatement	"FT_ULong C , P ;"	7075:4:247533:247548	10605310	2	True				
ANR	10605325	IdentifierDecl	C		10605310	0					
ANR	10605326	IdentifierDeclType	FT_ULong		10605310	0					
ANR	10605327	Identifier	C		10605310	1					
ANR	10605328	IdentifierDecl	P		10605310	1					
ANR	10605329	IdentifierDeclType	FT_ULong		10605310	0					
ANR	10605330	Identifier	P		10605310	1					
ANR	10605331	IdentifierDeclStatement	FT_Long B ;	7076:4:247554:247566	10605310	3	True				
ANR	10605332	IdentifierDecl	B		10605310	0					
ANR	10605333	IdentifierDeclType	FT_Long		10605310	0					
ANR	10605334	Identifier	B		10605310	1					
ANR	10605335	IdentifierDeclStatement	"FT_UShort B1 , B2 ;"	7078:4:247618:247635	10605310	4	True				
ANR	10605336	IdentifierDecl	B1		10605310	0					
ANR	10605337	IdentifierDeclType	FT_UShort		10605310	0					
ANR	10605338	Identifier	B1		10605310	1					
ANR	10605339	IdentifierDecl	B2		10605310	1					
ANR	10605340	IdentifierDeclType	FT_UShort		10605310	0					
ANR	10605341	Identifier	B2		10605310	1					
ANR	10605342	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> iup_called && ( exc -> sph_tweak_flags & SPH_TWEAK_NO_DELTAP_AFTER_IUP ) )		10605310	5					
ANR	10605343	Condition	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> iup_called && ( exc -> sph_tweak_flags & SPH_TWEAK_NO_DELTAP_AFTER_IUP )	7081:9:247648:247910	10605310	0	True				
ANR	10605344	AndExpression	SUBPIXEL_HINTING_INFINALITY && exc -> ignore_x_mode && exc -> iup_called && ( exc -> sph_tweak_flags & SPH_TWEAK_NO_DELTAP_AFTER_IUP )		10605310	0		&&			
ANR	10605345	Identifier	SUBPIXEL_HINTING_INFINALITY		10605310	0					
ANR	10605346	AndExpression	exc -> ignore_x_mode && exc -> iup_called && ( exc -> sph_tweak_flags & SPH_TWEAK_NO_DELTAP_AFTER_IUP )		10605310	1		&&			
ANR	10605347	PtrMemberAccess	exc -> ignore_x_mode		10605310	0					
ANR	10605348	Identifier	exc		10605310	0					
ANR	10605349	Identifier	ignore_x_mode		10605310	1					
ANR	10605350	AndExpression	exc -> iup_called && ( exc -> sph_tweak_flags & SPH_TWEAK_NO_DELTAP_AFTER_IUP )		10605310	1		&&			
ANR	10605351	PtrMemberAccess	exc -> iup_called		10605310	0					
ANR	10605352	Identifier	exc		10605310	0					
ANR	10605353	Identifier	iup_called		10605310	1					
ANR	10605354	BitAndExpression	exc -> sph_tweak_flags & SPH_TWEAK_NO_DELTAP_AFTER_IUP		10605310	1		&			
ANR	10605355	PtrMemberAccess	exc -> sph_tweak_flags		10605310	0					
ANR	10605356	Identifier	exc		10605310	0					
ANR	10605357	Identifier	sph_tweak_flags		10605310	1					
ANR	10605358	Identifier	SPH_TWEAK_NO_DELTAP_AFTER_IUP		10605310	1					
ANR	10605359	GotoStatement	goto Fail ;	7085:6:247920:247929	10605310	1	True				
ANR	10605360	Identifier	Fail		10605310	0					
ANR	10605361	ExpressionStatement	P = ( FT_ULong ) exc -> func_cur_ppem ( exc )	7088:4:247988:248030	10605310	6	True				
ANR	10605362	AssignmentExpression	P = ( FT_ULong ) exc -> func_cur_ppem ( exc )		10605310	0		=			
ANR	10605363	Identifier	P		10605310	0					
ANR	10605364	CastExpression	( FT_ULong ) exc -> func_cur_ppem ( exc )		10605310	1					
ANR	10605365	CastTarget	FT_ULong		10605310	0					
ANR	10605366	CallExpression	exc -> func_cur_ppem ( exc )		10605310	1					
ANR	10605367	Callee	exc -> func_cur_ppem		10605310	0					
ANR	10605368	PtrMemberAccess	exc -> func_cur_ppem		10605310	0					
ANR	10605369	Identifier	exc		10605310	0					
ANR	10605370	Identifier	func_cur_ppem		10605310	1					
ANR	10605371	ArgumentList	exc		10605310	1					
ANR	10605372	Argument	exc		10605310	0					
ANR	10605373	Identifier	exc		10605310	0					
ANR	10605374	ExpressionStatement	nump = ( FT_ULong ) args [ 0 ]	7089:4:248036:248060	10605310	7	True				
ANR	10605375	AssignmentExpression	nump = ( FT_ULong ) args [ 0 ]		10605310	0		=			
ANR	10605376	Identifier	nump		10605310	0					
ANR	10605377	CastExpression	( FT_ULong ) args [ 0 ]		10605310	1					
ANR	10605378	CastTarget	FT_ULong		10605310	0					
ANR	10605379	ArrayIndexing	args [ 0 ]		10605310	1					
ANR	10605380	Identifier	args		10605310	0					
ANR	10605381	PrimaryExpression	0		10605310	1					
ANR	10605382	ForStatement	for ( k = 1 ; k <= nump ; k ++ )		10605310	8					
ANR	10605383	ForInit	k = 1 ;	7092:10:248193:248198	10605310	0	True				
ANR	10605384	AssignmentExpression	k = 1		10605310	0		=			
ANR	10605385	Identifier	k		10605310	0					
ANR	10605386	PrimaryExpression	1		10605310	1					
ANR	10605387	Condition	k <= nump	7092:17:248200:248208	10605310	1	True				
ANR	10605388	RelationalExpression	k <= nump		10605310	0		<=			
ANR	10605389	Identifier	k		10605310	0					
ANR	10605390	Identifier	nump		10605310	1					
ANR	10605391	PostIncDecOperationExpression	k ++	7092:28:248211:248213	10605310	2	True				
ANR	10605392	Identifier	k		10605310	0					
ANR	10605393	IncDec	++		10605310	1					
ANR	10605394	CompoundStatement		22:4:735:735	10605310	3					
ANR	10605395	IfStatement	if ( exc -> args < 2 )		10605310	0					
ANR	10605396	Condition	exc -> args < 2	7094:11:248234:248246	10605310	0	True				
ANR	10605397	RelationalExpression	exc -> args < 2		10605310	0		<			
ANR	10605398	PtrMemberAccess	exc -> args		10605310	0					
ANR	10605399	Identifier	exc		10605310	0					
ANR	10605400	Identifier	args		10605310	1					
ANR	10605401	PrimaryExpression	2		10605310	1					
ANR	10605402	CompoundStatement		24:6:770:770	10605310	1					
ANR	10605403	IfStatement	if ( exc -> pedantic_hinting )		10605310	0					
ANR	10605404	Condition	exc -> pedantic_hinting	7096:13:248271:248291	10605310	0	True				
ANR	10605405	PtrMemberAccess	exc -> pedantic_hinting		10605310	0					
ANR	10605406	Identifier	exc		10605310	0					
ANR	10605407	Identifier	pedantic_hinting		10605310	1					
ANR	10605408	ExpressionStatement	exc -> error = FT_THROW ( Too_Few_Arguments )	7097:10:248305:248347	10605310	1	True				
ANR	10605409	AssignmentExpression	exc -> error = FT_THROW ( Too_Few_Arguments )		10605310	0		=			
ANR	10605410	PtrMemberAccess	exc -> error		10605310	0					
ANR	10605411	Identifier	exc		10605310	0					
ANR	10605412	Identifier	error		10605310	1					
ANR	10605413	CallExpression	FT_THROW ( Too_Few_Arguments )		10605310	1					
ANR	10605414	Callee	FT_THROW		10605310	0					
ANR	10605415	Identifier	FT_THROW		10605310	0					
ANR	10605416	ArgumentList	Too_Few_Arguments		10605310	1					
ANR	10605417	Argument	Too_Few_Arguments		10605310	0					
ANR	10605418	Identifier	Too_Few_Arguments		10605310	0					
ANR	10605419	ExpressionStatement	exc -> args = 0	7098:8:248357:248370	10605310	1	True				
ANR	10605420	AssignmentExpression	exc -> args = 0		10605310	0		=			
ANR	10605421	PtrMemberAccess	exc -> args		10605310	0					
ANR	10605422	Identifier	exc		10605310	0					
ANR	10605423	Identifier	args		10605310	1					
ANR	10605424	PrimaryExpression	0		10605310	1					
ANR	10605425	GotoStatement	goto Fail ;	7099:8:248380:248389	10605310	2	True				
ANR	10605426	Identifier	Fail		10605310	0					
ANR	10605427	ExpressionStatement	exc -> args -= 2	7102:6:248406:248420	10605310	1	True				
ANR	10605428	AssignmentExpression	exc -> args -= 2		10605310	0		-=			
ANR	10605429	PtrMemberAccess	exc -> args		10605310	0					
ANR	10605430	Identifier	exc		10605310	0					
ANR	10605431	Identifier	args		10605310	1					
ANR	10605432	PrimaryExpression	2		10605310	1					
ANR	10605433	ExpressionStatement	A = ( FT_UShort ) exc -> stack [ exc -> args + 1 ]	7104:6:248429:248469	10605310	2	True				
ANR	10605434	AssignmentExpression	A = ( FT_UShort ) exc -> stack [ exc -> args + 1 ]		10605310	0		=			
ANR	10605435	Identifier	A		10605310	0					
ANR	10605436	CastExpression	( FT_UShort ) exc -> stack [ exc -> args + 1 ]		10605310	1					
ANR	10605437	CastTarget	FT_UShort		10605310	0					
ANR	10605438	ArrayIndexing	exc -> stack [ exc -> args + 1 ]		10605310	1					
ANR	10605439	PtrMemberAccess	exc -> stack		10605310	0					
ANR	10605440	Identifier	exc		10605310	0					
ANR	10605441	Identifier	stack		10605310	1					
ANR	10605442	AdditiveExpression	exc -> args + 1		10605310	1		+			
ANR	10605443	PtrMemberAccess	exc -> args		10605310	0					
ANR	10605444	Identifier	exc		10605310	0					
ANR	10605445	Identifier	args		10605310	1					
ANR	10605446	PrimaryExpression	1		10605310	1					
ANR	10605447	ExpressionStatement	B = exc -> stack [ exc -> args ]	7105:6:248477:248502	10605310	3	True				
ANR	10605448	AssignmentExpression	B = exc -> stack [ exc -> args ]		10605310	0		=			
ANR	10605449	Identifier	B		10605310	0					
ANR	10605450	ArrayIndexing	exc -> stack [ exc -> args ]		10605310	1					
ANR	10605451	PtrMemberAccess	exc -> stack		10605310	0					
ANR	10605452	Identifier	exc		10605310	0					
ANR	10605453	Identifier	stack		10605310	1					
ANR	10605454	PtrMemberAccess	exc -> args		10605310	1					
ANR	10605455	Identifier	exc		10605310	0					
ANR	10605456	Identifier	args		10605310	1					
ANR	10605457	IfStatement	"if ( ! BOUNDS ( A , exc -> zp0 . n_points ) )"		10605310	4					
ANR	10605458	Condition	"! BOUNDS ( A , exc -> zp0 . n_points )"	7113:11:248877:248907	10605310	0	True				
ANR	10605459	UnaryOperationExpression	"! BOUNDS ( A , exc -> zp0 . n_points )"		10605310	0					
ANR	10605460	UnaryOperator	!		10605310	0					
ANR	10605461	CallExpression	"BOUNDS ( A , exc -> zp0 . n_points )"		10605310	1					
ANR	10605462	Callee	BOUNDS		10605310	0					
ANR	10605463	Identifier	BOUNDS		10605310	0					
ANR	10605464	ArgumentList	A		10605310	1					
ANR	10605465	Argument	A		10605310	0					
ANR	10605466	Identifier	A		10605310	0					
ANR	10605467	Argument	exc -> zp0 . n_points		10605310	1					
ANR	10605468	MemberAccess	exc -> zp0 . n_points		10605310	0					
ANR	10605469	PtrMemberAccess	exc -> zp0		10605310	0					
ANR	10605470	Identifier	exc		10605310	0					
ANR	10605471	Identifier	zp0		10605310	1					
ANR	10605472	Identifier	n_points		10605310	1					
ANR	10605473	CompoundStatement		43:6:1431:1431	10605310	1					
ANR	10605474	ExpressionStatement	C = ( ( FT_ULong ) B & 0xF0 ) >> 4	7115:8:248927:248958	10605310	0	True				
ANR	10605475	AssignmentExpression	C = ( ( FT_ULong ) B & 0xF0 ) >> 4		10605310	0		=			
ANR	10605476	Identifier	C		10605310	0					
ANR	10605477	ShiftExpression	( ( FT_ULong ) B & 0xF0 ) >> 4		10605310	1		>>			
ANR	10605478	BitAndExpression	( FT_ULong ) B & 0xF0		10605310	0		&			
ANR	10605479	CastExpression	( FT_ULong ) B		10605310	0					
ANR	10605480	CastTarget	FT_ULong		10605310	0					
ANR	10605481	Identifier	B		10605310	1					
ANR	10605482	PrimaryExpression	0xF0		10605310	1					
ANR	10605483	PrimaryExpression	4		10605310	1					
ANR	10605484	SwitchStatement	switch ( exc -> opcode )		10605310	1					
ANR	10605485	Condition	exc -> opcode	7117:17:248978:248988	10605310	0	True				
ANR	10605486	PtrMemberAccess	exc -> opcode		10605310	0					
ANR	10605487	Identifier	exc		10605310	0					
ANR	10605488	Identifier	opcode		10605310	1					
ANR	10605489	CompoundStatement		47:8:1514:1514	10605310	1					
ANR	10605490	Label	case 0x5D :	7119:8:249010:249019	10605310	0	True				
ANR	10605491	BreakStatement	break ;	7120:10:249031:249036	10605310	1	True				
ANR	10605492	Label	case 0x71 :	7122:8:249047:249056	10605310	2	True				
ANR	10605493	ExpressionStatement	C += 16	7123:10:249068:249075	10605310	3	True				
ANR	10605494	AssignmentExpression	C += 16		10605310	0		+=			
ANR	10605495	Identifier	C		10605310	0					
ANR	10605496	PrimaryExpression	16		10605310	1					
ANR	10605497	BreakStatement	break ;	7124:10:249087:249092	10605310	4	True				
ANR	10605498	Label	case 0x72 :	7126:8:249103:249112	10605310	5	True				
ANR	10605499	ExpressionStatement	C += 32	7127:10:249124:249131	10605310	6	True				
ANR	10605500	AssignmentExpression	C += 32		10605310	0		+=			
ANR	10605501	Identifier	C		10605310	0					
ANR	10605502	PrimaryExpression	32		10605310	1					
ANR	10605503	BreakStatement	break ;	7128:10:249143:249148	10605310	7	True				
ANR	10605504	ExpressionStatement	C += exc -> GS . delta_base	7131:8:249169:249192	10605310	2	True				
ANR	10605505	AssignmentExpression	C += exc -> GS . delta_base		10605310	0		+=			
ANR	10605506	Identifier	C		10605310	0					
ANR	10605507	MemberAccess	exc -> GS . delta_base		10605310	1					
ANR	10605508	PtrMemberAccess	exc -> GS		10605310	0					
ANR	10605509	Identifier	exc		10605310	0					
ANR	10605510	Identifier	GS		10605310	1					
ANR	10605511	Identifier	delta_base		10605310	1					
ANR	10605512	IfStatement	if ( P == C )		10605310	3					
ANR	10605513	Condition	P == C	7133:13:249208:249213	10605310	0	True				
ANR	10605514	EqualityExpression	P == C		10605310	0		==			
ANR	10605515	Identifier	P		10605310	0					
ANR	10605516	Identifier	C		10605310	1					
ANR	10605517	CompoundStatement		63:8:1739:1739	10605310	1					
ANR	10605518	ExpressionStatement	B = ( ( FT_ULong ) B & 0xF ) - 8	7135:10:249237:249266	10605310	0	True				
ANR	10605519	AssignmentExpression	B = ( ( FT_ULong ) B & 0xF ) - 8		10605310	0		=			
ANR	10605520	Identifier	B		10605310	0					
ANR	10605521	AdditiveExpression	( ( FT_ULong ) B & 0xF ) - 8		10605310	1		-			
ANR	10605522	BitAndExpression	( FT_ULong ) B & 0xF		10605310	0		&			
ANR	10605523	CastExpression	( FT_ULong ) B		10605310	0					
ANR	10605524	CastTarget	FT_ULong		10605310	0					
ANR	10605525	Identifier	B		10605310	1					
ANR	10605526	PrimaryExpression	0xF		10605310	1					
ANR	10605527	PrimaryExpression	8		10605310	1					
ANR	10605528	IfStatement	if ( B >= 0 )		10605310	1					
ANR	10605529	Condition	B >= 0	7136:15:249283:249288	10605310	0	True				
ANR	10605530	RelationalExpression	B >= 0		10605310	0		>=			
ANR	10605531	Identifier	B		10605310	0					
ANR	10605532	PrimaryExpression	0		10605310	1					
ANR	10605533	ExpressionStatement	B ++	7137:12:249304:249307	10605310	1	True				
ANR	10605534	PostIncDecOperationExpression	B ++		10605310	0					
ANR	10605535	Identifier	B		10605310	0					
ANR	10605536	IncDec	++		10605310	1					
ANR	10605537	ExpressionStatement	B *= 1L << ( 6 - exc -> GS . delta_shift )	7138:10:249319:249357	10605310	2	True				
ANR	10605538	AssignmentExpression	B *= 1L << ( 6 - exc -> GS . delta_shift )		10605310	0		*=			
ANR	10605539	Identifier	B		10605310	0					
ANR	10605540	ShiftExpression	1L << ( 6 - exc -> GS . delta_shift )		10605310	1		<<			
ANR	10605541	PrimaryExpression	1L		10605310	0					
ANR	10605542	AdditiveExpression	6 - exc -> GS . delta_shift		10605310	1		-			
ANR	10605543	PrimaryExpression	6		10605310	0					
ANR	10605544	MemberAccess	exc -> GS . delta_shift		10605310	1					
ANR	10605545	PtrMemberAccess	exc -> GS		10605310	0					
ANR	10605546	Identifier	exc		10605310	0					
ANR	10605547	Identifier	GS		10605310	1					
ANR	10605548	Identifier	delta_shift		10605310	1					
ANR	10605549	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY )		10605310	3					
ANR	10605550	Condition	SUBPIXEL_HINTING_INFINALITY	7142:15:249422:249448	10605310	0	True				
ANR	10605551	Identifier	SUBPIXEL_HINTING_INFINALITY		10605310	0					
ANR	10605552	CompoundStatement		72:10:1976:1976	10605310	1					
ANR	10605553	IfStatement	if ( ! exc -> ignore_x_mode || ( exc -> sph_tweak_flags & SPH_TWEAK_ALWAYS_DO_DELTAP ) || ( exc -> is_composite && exc -> GS . freeVector . y != 0 ) )		10605310	0					
ANR	10605554	Condition	! exc -> ignore_x_mode || ( exc -> sph_tweak_flags & SPH_TWEAK_ALWAYS_DO_DELTAP ) || ( exc -> is_composite && exc -> GS . freeVector . y != 0 )	7152:17:249780:249977	10605310	0	True				
ANR	10605555	OrExpression	! exc -> ignore_x_mode || ( exc -> sph_tweak_flags & SPH_TWEAK_ALWAYS_DO_DELTAP ) || ( exc -> is_composite && exc -> GS . freeVector . y != 0 )		10605310	0		||			
ANR	10605556	UnaryOperationExpression	! exc -> ignore_x_mode		10605310	0					
ANR	10605557	UnaryOperator	!		10605310	0					
ANR	10605558	PtrMemberAccess	exc -> ignore_x_mode		10605310	1					
ANR	10605559	Identifier	exc		10605310	0					
ANR	10605560	Identifier	ignore_x_mode		10605310	1					
ANR	10605561	OrExpression	( exc -> sph_tweak_flags & SPH_TWEAK_ALWAYS_DO_DELTAP ) || ( exc -> is_composite && exc -> GS . freeVector . y != 0 )		10605310	1		||			
ANR	10605562	BitAndExpression	exc -> sph_tweak_flags & SPH_TWEAK_ALWAYS_DO_DELTAP		10605310	0		&			
ANR	10605563	PtrMemberAccess	exc -> sph_tweak_flags		10605310	0					
ANR	10605564	Identifier	exc		10605310	0					
ANR	10605565	Identifier	sph_tweak_flags		10605310	1					
ANR	10605566	Identifier	SPH_TWEAK_ALWAYS_DO_DELTAP		10605310	1					
ANR	10605567	AndExpression	exc -> is_composite && exc -> GS . freeVector . y != 0		10605310	1		&&			
ANR	10605568	PtrMemberAccess	exc -> is_composite		10605310	0					
ANR	10605569	Identifier	exc		10605310	0					
ANR	10605570	Identifier	is_composite		10605310	1					
ANR	10605571	EqualityExpression	exc -> GS . freeVector . y != 0		10605310	1		!=			
ANR	10605572	MemberAccess	exc -> GS . freeVector . y		10605310	0					
ANR	10605573	MemberAccess	exc -> GS . freeVector		10605310	0					
ANR	10605574	PtrMemberAccess	exc -> GS		10605310	0					
ANR	10605575	Identifier	exc		10605310	0					
ANR	10605576	Identifier	GS		10605310	1					
ANR	10605577	Identifier	freeVector		10605310	1					
ANR	10605578	Identifier	y		10605310	1					
ANR	10605579	PrimaryExpression	0		10605310	1					
ANR	10605580	ExpressionStatement	"exc -> func_move ( exc , & exc -> zp0 , A , B )"	7155:14:249998:250036	10605310	1	True				
ANR	10605581	CallExpression	"exc -> func_move ( exc , & exc -> zp0 , A , B )"		10605310	0					
ANR	10605582	Callee	exc -> func_move		10605310	0					
ANR	10605583	PtrMemberAccess	exc -> func_move		10605310	0					
ANR	10605584	Identifier	exc		10605310	0					
ANR	10605585	Identifier	func_move		10605310	1					
ANR	10605586	ArgumentList	exc		10605310	1					
ANR	10605587	Argument	exc		10605310	0					
ANR	10605588	Identifier	exc		10605310	0					
ANR	10605589	Argument	& exc -> zp0		10605310	1					
ANR	10605590	UnaryOperationExpression	& exc -> zp0		10605310	0					
ANR	10605591	UnaryOperator	&		10605310	0					
ANR	10605592	PtrMemberAccess	exc -> zp0		10605310	1					
ANR	10605593	Identifier	exc		10605310	0					
ANR	10605594	Identifier	zp0		10605310	1					
ANR	10605595	Argument	A		10605310	2					
ANR	10605596	Identifier	A		10605310	0					
ANR	10605597	Argument	B		10605310	3					
ANR	10605598	Identifier	B		10605310	0					
ANR	10605599	ElseStatement	else		10605310	0					
ANR	10605600	IfStatement	if ( exc -> ignore_x_mode && exc -> GS . freeVector . y != 0 )		10605310	0					
ANR	10605601	Condition	exc -> ignore_x_mode && exc -> GS . freeVector . y != 0	7159:22:250211:250257	10605310	0	True				
ANR	10605602	AndExpression	exc -> ignore_x_mode && exc -> GS . freeVector . y != 0		10605310	0		&&			
ANR	10605603	PtrMemberAccess	exc -> ignore_x_mode		10605310	0					
ANR	10605604	Identifier	exc		10605310	0					
ANR	10605605	Identifier	ignore_x_mode		10605310	1					
ANR	10605606	EqualityExpression	exc -> GS . freeVector . y != 0		10605310	1		!=			
ANR	10605607	MemberAccess	exc -> GS . freeVector . y		10605310	0					
ANR	10605608	MemberAccess	exc -> GS . freeVector		10605310	0					
ANR	10605609	PtrMemberAccess	exc -> GS		10605310	0					
ANR	10605610	Identifier	exc		10605310	0					
ANR	10605611	Identifier	GS		10605310	1					
ANR	10605612	Identifier	freeVector		10605310	1					
ANR	10605613	Identifier	y		10605310	1					
ANR	10605614	PrimaryExpression	0		10605310	1					
ANR	10605615	CompoundStatement		89:12:2787:2787	10605310	1					
ANR	10605616	ExpressionStatement	B1 = ( FT_UShort ) exc -> zp0 . cur [ A ] . y	7162:14:250363:250396	10605310	0	True				
ANR	10605617	AssignmentExpression	B1 = ( FT_UShort ) exc -> zp0 . cur [ A ] . y		10605310	0		=			
ANR	10605618	Identifier	B1		10605310	0					
ANR	10605619	CastExpression	( FT_UShort ) exc -> zp0 . cur [ A ] . y		10605310	1					
ANR	10605620	CastTarget	FT_UShort		10605310	0					
ANR	10605621	MemberAccess	exc -> zp0 . cur [ A ] . y		10605310	1					
ANR	10605622	ArrayIndexing	exc -> zp0 . cur [ A ]		10605310	0					
ANR	10605623	MemberAccess	exc -> zp0 . cur		10605310	0					
ANR	10605624	PtrMemberAccess	exc -> zp0		10605310	0					
ANR	10605625	Identifier	exc		10605310	0					
ANR	10605626	Identifier	zp0		10605310	1					
ANR	10605627	Identifier	cur		10605310	1					
ANR	10605628	Identifier	A		10605310	1					
ANR	10605629	Identifier	y		10605310	1					
ANR	10605630	IfStatement	if ( ! exc -> face -> sph_compatibility_mode && ( exc -> zp0 . tags [ A ] & FT_CURVE_TAG_TOUCH_Y ) )		10605310	1					
ANR	10605631	Condition	! exc -> face -> sph_compatibility_mode && ( exc -> zp0 . tags [ A ] & FT_CURVE_TAG_TOUCH_Y )	7166:19:250566:250674	10605310	0	True				
ANR	10605632	AndExpression	! exc -> face -> sph_compatibility_mode && ( exc -> zp0 . tags [ A ] & FT_CURVE_TAG_TOUCH_Y )		10605310	0		&&			
ANR	10605633	UnaryOperationExpression	! exc -> face -> sph_compatibility_mode		10605310	0					
ANR	10605634	UnaryOperator	!		10605310	0					
ANR	10605635	PtrMemberAccess	exc -> face -> sph_compatibility_mode		10605310	1					
ANR	10605636	PtrMemberAccess	exc -> face		10605310	0					
ANR	10605637	Identifier	exc		10605310	0					
ANR	10605638	Identifier	face		10605310	1					
ANR	10605639	Identifier	sph_compatibility_mode		10605310	1					
ANR	10605640	BitAndExpression	exc -> zp0 . tags [ A ] & FT_CURVE_TAG_TOUCH_Y		10605310	1		&			
ANR	10605641	ArrayIndexing	exc -> zp0 . tags [ A ]		10605310	0					
ANR	10605642	MemberAccess	exc -> zp0 . tags		10605310	0					
ANR	10605643	PtrMemberAccess	exc -> zp0		10605310	0					
ANR	10605644	Identifier	exc		10605310	0					
ANR	10605645	Identifier	zp0		10605310	1					
ANR	10605646	Identifier	tags		10605310	1					
ANR	10605647	Identifier	A		10605310	1					
ANR	10605648	Identifier	FT_CURVE_TAG_TOUCH_Y		10605310	1					
ANR	10605649	ExpressionStatement	"exc -> func_move ( exc , & exc -> zp0 , A , B )"	7168:16:250694:250732	10605310	1	True				
ANR	10605650	CallExpression	"exc -> func_move ( exc , & exc -> zp0 , A , B )"		10605310	0					
ANR	10605651	Callee	exc -> func_move		10605310	0					
ANR	10605652	PtrMemberAccess	exc -> func_move		10605310	0					
ANR	10605653	Identifier	exc		10605310	0					
ANR	10605654	Identifier	func_move		10605310	1					
ANR	10605655	ArgumentList	exc		10605310	1					
ANR	10605656	Argument	exc		10605310	0					
ANR	10605657	Identifier	exc		10605310	0					
ANR	10605658	Argument	& exc -> zp0		10605310	1					
ANR	10605659	UnaryOperationExpression	& exc -> zp0		10605310	0					
ANR	10605660	UnaryOperator	&		10605310	0					
ANR	10605661	PtrMemberAccess	exc -> zp0		10605310	1					
ANR	10605662	Identifier	exc		10605310	0					
ANR	10605663	Identifier	zp0		10605310	1					
ANR	10605664	Argument	A		10605310	2					
ANR	10605665	Identifier	A		10605310	0					
ANR	10605666	Argument	B		10605310	3					
ANR	10605667	Identifier	B		10605310	0					
ANR	10605668	ElseStatement	else		10605310	0					
ANR	10605669	IfStatement	if ( exc -> face -> sph_compatibility_mode && ! ( exc -> sph_tweak_flags & SPH_TWEAK_ALWAYS_SKIP_DELTAP ) )		10605310	0					
ANR	10605670	Condition	exc -> face -> sph_compatibility_mode && ! ( exc -> sph_tweak_flags & SPH_TWEAK_ALWAYS_SKIP_DELTAP )	7171:24:250798:250937	10605310	0	True				
ANR	10605671	AndExpression	exc -> face -> sph_compatibility_mode && ! ( exc -> sph_tweak_flags & SPH_TWEAK_ALWAYS_SKIP_DELTAP )		10605310	0		&&			
ANR	10605672	PtrMemberAccess	exc -> face -> sph_compatibility_mode		10605310	0					
ANR	10605673	PtrMemberAccess	exc -> face		10605310	0					
ANR	10605674	Identifier	exc		10605310	0					
ANR	10605675	Identifier	face		10605310	1					
ANR	10605676	Identifier	sph_compatibility_mode		10605310	1					
ANR	10605677	UnaryOperationExpression	! ( exc -> sph_tweak_flags & SPH_TWEAK_ALWAYS_SKIP_DELTAP )		10605310	1					
ANR	10605678	UnaryOperator	!		10605310	0					
ANR	10605679	BitAndExpression	exc -> sph_tweak_flags & SPH_TWEAK_ALWAYS_SKIP_DELTAP		10605310	1		&			
ANR	10605680	PtrMemberAccess	exc -> sph_tweak_flags		10605310	0					
ANR	10605681	Identifier	exc		10605310	0					
ANR	10605682	Identifier	sph_tweak_flags		10605310	1					
ANR	10605683	Identifier	SPH_TWEAK_ALWAYS_SKIP_DELTAP		10605310	1					
ANR	10605684	CompoundStatement		102:14:3469:3469	10605310	1					
ANR	10605685	IfStatement	if ( exc -> sph_tweak_flags & SPH_TWEAK_ROUND_NONPIXEL_Y_MOVES )		10605310	0					
ANR	10605686	Condition	exc -> sph_tweak_flags & SPH_TWEAK_ROUND_NONPIXEL_Y_MOVES	7174:21:250978:251032	10605310	0	True				
ANR	10605687	BitAndExpression	exc -> sph_tweak_flags & SPH_TWEAK_ROUND_NONPIXEL_Y_MOVES		10605310	0		&			
ANR	10605688	PtrMemberAccess	exc -> sph_tweak_flags		10605310	0					
ANR	10605689	Identifier	exc		10605310	0					
ANR	10605690	Identifier	sph_tweak_flags		10605310	1					
ANR	10605691	Identifier	SPH_TWEAK_ROUND_NONPIXEL_Y_MOVES		10605310	1					
ANR	10605692	ExpressionStatement	B = FT_PIX_ROUND ( B1 + B ) - B1	7175:18:251054:251085	10605310	1	True				
ANR	10605693	AssignmentExpression	B = FT_PIX_ROUND ( B1 + B ) - B1		10605310	0		=			
ANR	10605694	Identifier	B		10605310	0					
ANR	10605695	AdditiveExpression	FT_PIX_ROUND ( B1 + B ) - B1		10605310	1		-			
ANR	10605696	CallExpression	FT_PIX_ROUND ( B1 + B )		10605310	0					
ANR	10605697	Callee	FT_PIX_ROUND		10605310	0					
ANR	10605698	Identifier	FT_PIX_ROUND		10605310	0					
ANR	10605699	ArgumentList	B1 + B		10605310	1					
ANR	10605700	Argument	B1 + B		10605310	0					
ANR	10605701	AdditiveExpression	B1 + B		10605310	0		+			
ANR	10605702	Identifier	B1		10605310	0					
ANR	10605703	Identifier	B		10605310	1					
ANR	10605704	Identifier	B1		10605310	1					
ANR	10605705	IfStatement	if ( ! exc -> iup_called && ( exc -> zp0 . tags [ A ] & FT_CURVE_TAG_TOUCH_Y ) )		10605310	1					
ANR	10605706	Condition	! exc -> iup_called && ( exc -> zp0 . tags [ A ] & FT_CURVE_TAG_TOUCH_Y )	7179:21:251257:251367	10605310	0	True				
ANR	10605707	AndExpression	! exc -> iup_called && ( exc -> zp0 . tags [ A ] & FT_CURVE_TAG_TOUCH_Y )		10605310	0		&&			
ANR	10605708	UnaryOperationExpression	! exc -> iup_called		10605310	0					
ANR	10605709	UnaryOperator	!		10605310	0					
ANR	10605710	PtrMemberAccess	exc -> iup_called		10605310	1					
ANR	10605711	Identifier	exc		10605310	0					
ANR	10605712	Identifier	iup_called		10605310	1					
ANR	10605713	BitAndExpression	exc -> zp0 . tags [ A ] & FT_CURVE_TAG_TOUCH_Y		10605310	1		&			
ANR	10605714	ArrayIndexing	exc -> zp0 . tags [ A ]		10605310	0					
ANR	10605715	MemberAccess	exc -> zp0 . tags		10605310	0					
ANR	10605716	PtrMemberAccess	exc -> zp0		10605310	0					
ANR	10605717	Identifier	exc		10605310	0					
ANR	10605718	Identifier	zp0		10605310	1					
ANR	10605719	Identifier	tags		10605310	1					
ANR	10605720	Identifier	A		10605310	1					
ANR	10605721	Identifier	FT_CURVE_TAG_TOUCH_Y		10605310	1					
ANR	10605722	ExpressionStatement	"exc -> func_move ( exc , & exc -> zp0 , A , B )"	7181:18:251389:251427	10605310	1	True				
ANR	10605723	CallExpression	"exc -> func_move ( exc , & exc -> zp0 , A , B )"		10605310	0					
ANR	10605724	Callee	exc -> func_move		10605310	0					
ANR	10605725	PtrMemberAccess	exc -> func_move		10605310	0					
ANR	10605726	Identifier	exc		10605310	0					
ANR	10605727	Identifier	func_move		10605310	1					
ANR	10605728	ArgumentList	exc		10605310	1					
ANR	10605729	Argument	exc		10605310	0					
ANR	10605730	Identifier	exc		10605310	0					
ANR	10605731	Argument	& exc -> zp0		10605310	1					
ANR	10605732	UnaryOperationExpression	& exc -> zp0		10605310	0					
ANR	10605733	UnaryOperator	&		10605310	0					
ANR	10605734	PtrMemberAccess	exc -> zp0		10605310	1					
ANR	10605735	Identifier	exc		10605310	0					
ANR	10605736	Identifier	zp0		10605310	1					
ANR	10605737	Argument	A		10605310	2					
ANR	10605738	Identifier	A		10605310	0					
ANR	10605739	Argument	B		10605310	3					
ANR	10605740	Identifier	B		10605310	0					
ANR	10605741	ExpressionStatement	B2 = ( FT_UShort ) exc -> zp0 . cur [ A ] . y	7184:14:251460:251493	10605310	2	True				
ANR	10605742	AssignmentExpression	B2 = ( FT_UShort ) exc -> zp0 . cur [ A ] . y		10605310	0		=			
ANR	10605743	Identifier	B2		10605310	0					
ANR	10605744	CastExpression	( FT_UShort ) exc -> zp0 . cur [ A ] . y		10605310	1					
ANR	10605745	CastTarget	FT_UShort		10605310	0					
ANR	10605746	MemberAccess	exc -> zp0 . cur [ A ] . y		10605310	1					
ANR	10605747	ArrayIndexing	exc -> zp0 . cur [ A ]		10605310	0					
ANR	10605748	MemberAccess	exc -> zp0 . cur		10605310	0					
ANR	10605749	PtrMemberAccess	exc -> zp0		10605310	0					
ANR	10605750	Identifier	exc		10605310	0					
ANR	10605751	Identifier	zp0		10605310	1					
ANR	10605752	Identifier	cur		10605310	1					
ANR	10605753	Identifier	A		10605310	1					
ANR	10605754	Identifier	y		10605310	1					
ANR	10605755	IfStatement	if ( exc -> GS . freeVector . y != 0 && ( ( exc -> face -> sph_compatibility_mode && ( B1 & 63 ) == 0 && ( B2 & 63 ) != 0 ) || ( ( exc -> sph_tweak_flags & SPH_TWEAK_SKIP_NONPIXEL_Y_MOVES_DELTAP ) && ( B1 & 63 ) != 0 && ( B2 & 63 ) != 0 ) ) )		10605310	3					
ANR	10605756	Condition	exc -> GS . freeVector . y != 0 && ( ( exc -> face -> sph_compatibility_mode && ( B1 & 63 ) == 0 && ( B2 & 63 ) != 0 ) || ( ( exc -> sph_tweak_flags & SPH_TWEAK_SKIP_NONPIXEL_Y_MOVES_DELTAP ) && ( B1 & 63 ) != 0 && ( B2 & 63 ) != 0 ) )	7187:19:251588:252123	10605310	0	True				
ANR	10605757	AndExpression	exc -> GS . freeVector . y != 0 && ( ( exc -> face -> sph_compatibility_mode && ( B1 & 63 ) == 0 && ( B2 & 63 ) != 0 ) || ( ( exc -> sph_tweak_flags & SPH_TWEAK_SKIP_NONPIXEL_Y_MOVES_DELTAP ) && ( B1 & 63 ) != 0 && ( B2 & 63 ) != 0 ) )		10605310	0		&&			
ANR	10605758	EqualityExpression	exc -> GS . freeVector . y != 0		10605310	0		!=			
ANR	10605759	MemberAccess	exc -> GS . freeVector . y		10605310	0					
ANR	10605760	MemberAccess	exc -> GS . freeVector		10605310	0					
ANR	10605761	PtrMemberAccess	exc -> GS		10605310	0					
ANR	10605762	Identifier	exc		10605310	0					
ANR	10605763	Identifier	GS		10605310	1					
ANR	10605764	Identifier	freeVector		10605310	1					
ANR	10605765	Identifier	y		10605310	1					
ANR	10605766	PrimaryExpression	0		10605310	1					
ANR	10605767	OrExpression	( exc -> face -> sph_compatibility_mode && ( B1 & 63 ) == 0 && ( B2 & 63 ) != 0 ) || ( ( exc -> sph_tweak_flags & SPH_TWEAK_SKIP_NONPIXEL_Y_MOVES_DELTAP ) && ( B1 & 63 ) != 0 && ( B2 & 63 ) != 0 )		10605310	1		||			
ANR	10605768	AndExpression	exc -> face -> sph_compatibility_mode && ( B1 & 63 ) == 0 && ( B2 & 63 ) != 0		10605310	0		&&			
ANR	10605769	PtrMemberAccess	exc -> face -> sph_compatibility_mode		10605310	0					
ANR	10605770	PtrMemberAccess	exc -> face		10605310	0					
ANR	10605771	Identifier	exc		10605310	0					
ANR	10605772	Identifier	face		10605310	1					
ANR	10605773	Identifier	sph_compatibility_mode		10605310	1					
ANR	10605774	AndExpression	( B1 & 63 ) == 0 && ( B2 & 63 ) != 0		10605310	1		&&			
ANR	10605775	EqualityExpression	( B1 & 63 ) == 0		10605310	0		==			
ANR	10605776	BitAndExpression	B1 & 63		10605310	0		&			
ANR	10605777	Identifier	B1		10605310	0					
ANR	10605778	PrimaryExpression	63		10605310	1					
ANR	10605779	PrimaryExpression	0		10605310	1					
ANR	10605780	EqualityExpression	( B2 & 63 ) != 0		10605310	1		!=			
ANR	10605781	BitAndExpression	B2 & 63		10605310	0		&			
ANR	10605782	Identifier	B2		10605310	0					
ANR	10605783	PrimaryExpression	63		10605310	1					
ANR	10605784	PrimaryExpression	0		10605310	1					
ANR	10605785	AndExpression	( exc -> sph_tweak_flags & SPH_TWEAK_SKIP_NONPIXEL_Y_MOVES_DELTAP ) && ( B1 & 63 ) != 0 && ( B2 & 63 ) != 0		10605310	1		&&			
ANR	10605786	BitAndExpression	exc -> sph_tweak_flags & SPH_TWEAK_SKIP_NONPIXEL_Y_MOVES_DELTAP		10605310	0		&			
ANR	10605787	PtrMemberAccess	exc -> sph_tweak_flags		10605310	0					
ANR	10605788	Identifier	exc		10605310	0					
ANR	10605789	Identifier	sph_tweak_flags		10605310	1					
ANR	10605790	Identifier	SPH_TWEAK_SKIP_NONPIXEL_Y_MOVES_DELTAP		10605310	1					
ANR	10605791	AndExpression	( B1 & 63 ) != 0 && ( B2 & 63 ) != 0		10605310	1		&&			
ANR	10605792	EqualityExpression	( B1 & 63 ) != 0		10605310	0		!=			
ANR	10605793	BitAndExpression	B1 & 63		10605310	0		&			
ANR	10605794	Identifier	B1		10605310	0					
ANR	10605795	PrimaryExpression	63		10605310	1					
ANR	10605796	PrimaryExpression	0		10605310	1					
ANR	10605797	EqualityExpression	( B2 & 63 ) != 0		10605310	1		!=			
ANR	10605798	BitAndExpression	B2 & 63		10605310	0		&			
ANR	10605799	Identifier	B2		10605310	0					
ANR	10605800	PrimaryExpression	63		10605310	1					
ANR	10605801	PrimaryExpression	0		10605310	1					
ANR	10605802	ExpressionStatement	"exc -> func_move ( exc , & exc -> zp0 , A , NEG_LONG ( B ) )"	7195:16:252143:252193	10605310	1	True				
ANR	10605803	CallExpression	"exc -> func_move ( exc , & exc -> zp0 , A , NEG_LONG ( B ) )"		10605310	0					
ANR	10605804	Callee	exc -> func_move		10605310	0					
ANR	10605805	PtrMemberAccess	exc -> func_move		10605310	0					
ANR	10605806	Identifier	exc		10605310	0					
ANR	10605807	Identifier	func_move		10605310	1					
ANR	10605808	ArgumentList	exc		10605310	1					
ANR	10605809	Argument	exc		10605310	0					
ANR	10605810	Identifier	exc		10605310	0					
ANR	10605811	Argument	& exc -> zp0		10605310	1					
ANR	10605812	UnaryOperationExpression	& exc -> zp0		10605310	0					
ANR	10605813	UnaryOperator	&		10605310	0					
ANR	10605814	PtrMemberAccess	exc -> zp0		10605310	1					
ANR	10605815	Identifier	exc		10605310	0					
ANR	10605816	Identifier	zp0		10605310	1					
ANR	10605817	Argument	A		10605310	2					
ANR	10605818	Identifier	A		10605310	0					
ANR	10605819	Argument	NEG_LONG ( B )		10605310	3					
ANR	10605820	CallExpression	NEG_LONG ( B )		10605310	0					
ANR	10605821	Callee	NEG_LONG		10605310	0					
ANR	10605822	Identifier	NEG_LONG		10605310	0					
ANR	10605823	ArgumentList	B		10605310	1					
ANR	10605824	Argument	B		10605310	0					
ANR	10605825	Identifier	B		10605310	0					
ANR	10605826	ElseStatement	else		10605310	0					
ANR	10605827	CompoundStatement		130:10:4813:4813	10605310	0					
ANR	10605828	IfStatement	if ( SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility )		10605310	0					
ANR	10605829	Condition	SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility	7206:17:252508:252582	10605310	0	True				
ANR	10605830	AndExpression	SUBPIXEL_HINTING_MINIMAL && exc -> backward_compatibility		10605310	0		&&			
ANR	10605831	Identifier	SUBPIXEL_HINTING_MINIMAL		10605310	0					
ANR	10605832	PtrMemberAccess	exc -> backward_compatibility		10605310	1					
ANR	10605833	Identifier	exc		10605310	0					
ANR	10605834	Identifier	backward_compatibility		10605310	1					
ANR	10605835	CompoundStatement		137:12:5112:5112	10605310	1					
ANR	10605836	IfStatement	if ( ! ( exc -> iupx_called && exc -> iupy_called ) && ( ( exc -> is_composite && exc -> GS . freeVector . y != 0 ) || ( exc -> zp0 . tags [ A ] & FT_CURVE_TAG_TOUCH_Y ) ) )		10605310	0					
ANR	10605837	Condition	! ( exc -> iupx_called && exc -> iupy_called ) && ( ( exc -> is_composite && exc -> GS . freeVector . y != 0 ) || ( exc -> zp0 . tags [ A ] & FT_CURVE_TAG_TOUCH_Y ) )	7209:19:252619:252824	10605310	0	True				
ANR	10605838	AndExpression	! ( exc -> iupx_called && exc -> iupy_called ) && ( ( exc -> is_composite && exc -> GS . freeVector . y != 0 ) || ( exc -> zp0 . tags [ A ] & FT_CURVE_TAG_TOUCH_Y ) )		10605310	0		&&			
ANR	10605839	UnaryOperationExpression	! ( exc -> iupx_called && exc -> iupy_called )		10605310	0					
ANR	10605840	UnaryOperator	!		10605310	0					
ANR	10605841	AndExpression	exc -> iupx_called && exc -> iupy_called		10605310	1		&&			
ANR	10605842	PtrMemberAccess	exc -> iupx_called		10605310	0					
ANR	10605843	Identifier	exc		10605310	0					
ANR	10605844	Identifier	iupx_called		10605310	1					
ANR	10605845	PtrMemberAccess	exc -> iupy_called		10605310	1					
ANR	10605846	Identifier	exc		10605310	0					
ANR	10605847	Identifier	iupy_called		10605310	1					
ANR	10605848	OrExpression	( exc -> is_composite && exc -> GS . freeVector . y != 0 ) || ( exc -> zp0 . tags [ A ] & FT_CURVE_TAG_TOUCH_Y )		10605310	1		||			
ANR	10605849	AndExpression	exc -> is_composite && exc -> GS . freeVector . y != 0		10605310	0		&&			
ANR	10605850	PtrMemberAccess	exc -> is_composite		10605310	0					
ANR	10605851	Identifier	exc		10605310	0					
ANR	10605852	Identifier	is_composite		10605310	1					
ANR	10605853	EqualityExpression	exc -> GS . freeVector . y != 0		10605310	1		!=			
ANR	10605854	MemberAccess	exc -> GS . freeVector . y		10605310	0					
ANR	10605855	MemberAccess	exc -> GS . freeVector		10605310	0					
ANR	10605856	PtrMemberAccess	exc -> GS		10605310	0					
ANR	10605857	Identifier	exc		10605310	0					
ANR	10605858	Identifier	GS		10605310	1					
ANR	10605859	Identifier	freeVector		10605310	1					
ANR	10605860	Identifier	y		10605310	1					
ANR	10605861	PrimaryExpression	0		10605310	1					
ANR	10605862	BitAndExpression	exc -> zp0 . tags [ A ] & FT_CURVE_TAG_TOUCH_Y		10605310	1		&			
ANR	10605863	ArrayIndexing	exc -> zp0 . tags [ A ]		10605310	0					
ANR	10605864	MemberAccess	exc -> zp0 . tags		10605310	0					
ANR	10605865	PtrMemberAccess	exc -> zp0		10605310	0					
ANR	10605866	Identifier	exc		10605310	0					
ANR	10605867	Identifier	zp0		10605310	1					
ANR	10605868	Identifier	tags		10605310	1					
ANR	10605869	Identifier	A		10605310	1					
ANR	10605870	Identifier	FT_CURVE_TAG_TOUCH_Y		10605310	1					
ANR	10605871	ExpressionStatement	"exc -> func_move ( exc , & exc -> zp0 , A , B )"	7212:16:252844:252882	10605310	1	True				
ANR	10605872	CallExpression	"exc -> func_move ( exc , & exc -> zp0 , A , B )"		10605310	0					
ANR	10605873	Callee	exc -> func_move		10605310	0					
ANR	10605874	PtrMemberAccess	exc -> func_move		10605310	0					
ANR	10605875	Identifier	exc		10605310	0					
ANR	10605876	Identifier	func_move		10605310	1					
ANR	10605877	ArgumentList	exc		10605310	1					
ANR	10605878	Argument	exc		10605310	0					
ANR	10605879	Identifier	exc		10605310	0					
ANR	10605880	Argument	& exc -> zp0		10605310	1					
ANR	10605881	UnaryOperationExpression	& exc -> zp0		10605310	0					
ANR	10605882	UnaryOperator	&		10605310	0					
ANR	10605883	PtrMemberAccess	exc -> zp0		10605310	1					
ANR	10605884	Identifier	exc		10605310	0					
ANR	10605885	Identifier	zp0		10605310	1					
ANR	10605886	Argument	A		10605310	2					
ANR	10605887	Identifier	A		10605310	0					
ANR	10605888	Argument	B		10605310	3					
ANR	10605889	Identifier	B		10605310	0					
ANR	10605890	ElseStatement	else		10605310	0					
ANR	10605891	ExpressionStatement	"exc -> func_move ( exc , & exc -> zp0 , A , B )"	7216:14:252936:252974	10605310	0	True				
ANR	10605892	CallExpression	"exc -> func_move ( exc , & exc -> zp0 , A , B )"		10605310	0					
ANR	10605893	Callee	exc -> func_move		10605310	0					
ANR	10605894	PtrMemberAccess	exc -> func_move		10605310	0					
ANR	10605895	Identifier	exc		10605310	0					
ANR	10605896	Identifier	func_move		10605310	1					
ANR	10605897	ArgumentList	exc		10605310	1					
ANR	10605898	Argument	exc		10605310	0					
ANR	10605899	Identifier	exc		10605310	0					
ANR	10605900	Argument	& exc -> zp0		10605310	1					
ANR	10605901	UnaryOperationExpression	& exc -> zp0		10605310	0					
ANR	10605902	UnaryOperator	&		10605310	0					
ANR	10605903	PtrMemberAccess	exc -> zp0		10605310	1					
ANR	10605904	Identifier	exc		10605310	0					
ANR	10605905	Identifier	zp0		10605310	1					
ANR	10605906	Argument	A		10605310	2					
ANR	10605907	Identifier	A		10605310	0					
ANR	10605908	Argument	B		10605310	3					
ANR	10605909	Identifier	B		10605310	0					
ANR	10605910	ElseStatement	else		10605310	0					
ANR	10605911	IfStatement	if ( exc -> pedantic_hinting )		10605310	0					
ANR	10605912	Condition	exc -> pedantic_hinting	7221:13:253030:253050	10605310	0	True				
ANR	10605913	PtrMemberAccess	exc -> pedantic_hinting		10605310	0					
ANR	10605914	Identifier	exc		10605310	0					
ANR	10605915	Identifier	pedantic_hinting		10605310	1					
ANR	10605916	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	7222:10:253064:253106	10605310	1	True				
ANR	10605917	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10605310	0		=			
ANR	10605918	PtrMemberAccess	exc -> error		10605310	0					
ANR	10605919	Identifier	exc		10605310	0					
ANR	10605920	Identifier	error		10605310	1					
ANR	10605921	CallExpression	FT_THROW ( Invalid_Reference )		10605310	1					
ANR	10605922	Callee	FT_THROW		10605310	0					
ANR	10605923	Identifier	FT_THROW		10605310	0					
ANR	10605924	ArgumentList	Invalid_Reference		10605310	1					
ANR	10605925	Argument	Invalid_Reference		10605310	0					
ANR	10605926	Identifier	Invalid_Reference		10605310	0					
ANR	10605927	Label	Fail :	7225:2:253117:253121	10605310	9	True				
ANR	10605928	Identifier	Fail		10605310	0					
ANR	10605929	ExpressionStatement	exc -> new_top = exc -> args	7226:4:253127:253151	10605310	10	True				
ANR	10605930	AssignmentExpression	exc -> new_top = exc -> args		10605310	0		=			
ANR	10605931	PtrMemberAccess	exc -> new_top		10605310	0					
ANR	10605932	Identifier	exc		10605310	0					
ANR	10605933	Identifier	new_top		10605310	1					
ANR	10605934	PtrMemberAccess	exc -> args		10605310	1					
ANR	10605935	Identifier	exc		10605310	0					
ANR	10605936	Identifier	args		10605310	1					
ANR	10605937	ReturnType	static void		10605310	1					
ANR	10605938	Identifier	Ins_DELTAP		10605310	2					
ANR	10605939	ParameterList	"TT_ExecContext exc , FT_Long * args"		10605310	3					
ANR	10605940	Parameter	TT_ExecContext exc	7070:14:247425:247443	10605310	0	True				
ANR	10605941	ParameterType	TT_ExecContext		10605310	0					
ANR	10605942	Identifier	exc		10605310	1					
ANR	10605943	Parameter	FT_Long * args	7071:14:247460:247479	10605310	1	True				
ANR	10605944	ParameterType	FT_Long *		10605310	0					
ANR	10605945	Identifier	args		10605310	1					
ANR	10605946	CFGEntryNode	ENTRY		10605310		True				
ANR	10605947	CFGExitNode	EXIT		10605310		True				
ANR	10605948	Symbol	exc -> new_top		10605310						
ANR	10605949	Symbol	exc -> GS . freeVector . y		10605310						
ANR	10605950	Symbol	SPH_TWEAK_SKIP_NONPIXEL_Y_MOVES_DELTAP		10605310						
ANR	10605951	Symbol	exc -> GS . delta_base		10605310						
ANR	10605952	Symbol	SPH_TWEAK_ALWAYS_SKIP_DELTAP		10605310						
ANR	10605953	Symbol	* args		10605310						
ANR	10605954	Symbol	* exc -> zp0 . tags		10605310						
ANR	10605955	Symbol	SUBPIXEL_HINTING_INFINALITY		10605310						
ANR	10605956	Symbol	exc		10605310						
ANR	10605957	Symbol	Invalid_Reference		10605310						
ANR	10605958	Symbol	BOUNDS		10605310						
ANR	10605959	Symbol	exc -> zp0 . cur [ A ] . y		10605310						
ANR	10605960	Symbol	nump		10605310						
ANR	10605961	Symbol	exc -> error		10605310						
ANR	10605962	Symbol	FT_PIX_ROUND		10605310						
ANR	10605963	Symbol	SPH_TWEAK_ROUND_NONPIXEL_Y_MOVES		10605310						
ANR	10605964	Symbol	exc -> zp0 . cur		10605310						
ANR	10605965	Symbol	exc -> args		10605310						
ANR	10605966	Symbol	exc -> face		10605310						
ANR	10605967	Symbol	exc -> pedantic_hinting		10605310						
ANR	10605968	Symbol	exc -> is_composite		10605310						
ANR	10605969	Symbol	B1		10605310						
ANR	10605970	Symbol	exc -> backward_compatibility		10605310						
ANR	10605971	Symbol	B2		10605310						
ANR	10605972	Symbol	exc -> face -> sph_compatibility_mode		10605310						
ANR	10605973	Symbol	exc -> zp0 . tags		10605310						
ANR	10605974	Symbol	& exc -> zp0		10605310						
ANR	10605975	Symbol	exc -> opcode		10605310						
ANR	10605976	Symbol	exc -> GS . freeVector		10605310						
ANR	10605977	Symbol	exc -> iupx_called		10605310						
ANR	10605978	Symbol	SUBPIXEL_HINTING_MINIMAL		10605310						
ANR	10605979	Symbol	A		10605310						
ANR	10605980	Symbol	B		10605310						
ANR	10605981	Symbol	C		10605310						
ANR	10605982	Symbol	* exc		10605310						
ANR	10605983	Symbol	* exc -> face		10605310						
ANR	10605984	Symbol	* exc -> args		10605310						
ANR	10605985	Symbol	* A		10605310						
ANR	10605986	Symbol	FT_CURVE_TAG_TOUCH_Y		10605310						
ANR	10605987	Symbol	P		10605310						
ANR	10605988	Symbol	exc -> zp0 . n_points		10605310						
ANR	10605989	Symbol	exc -> stack		10605310						
ANR	10605990	Symbol	exc -> sph_tweak_flags		10605310						
ANR	10605991	Symbol	exc -> GS . delta_shift		10605310						
ANR	10605992	Symbol	exc -> func_cur_ppem		10605310						
ANR	10605993	Symbol	NEG_LONG		10605310						
ANR	10605994	Symbol	exc -> ignore_x_mode		10605310						
ANR	10605995	Symbol	SPH_TWEAK_NO_DELTAP_AFTER_IUP		10605310						
ANR	10605996	Symbol	* exc -> stack		10605310						
ANR	10605997	Symbol	Too_Few_Arguments		10605310						
ANR	10605998	Symbol	* * exc		10605310						
ANR	10605999	Symbol	k		10605310						
ANR	10606000	Symbol	exc -> GS		10605310						
ANR	10606001	Symbol	FT_THROW		10605310						
ANR	10606002	Symbol	args		10605310						
ANR	10606003	Symbol	exc -> zp0		10605310						
ANR	10606004	Symbol	exc -> iup_called		10605310						
ANR	10606005	Symbol	* exc -> zp0		10605310						
ANR	10606006	Symbol	SPH_TWEAK_ALWAYS_DO_DELTAP		10605310						
ANR	10606007	Symbol	* exc -> zp0 . cur		10605310						
ANR	10606008	Symbol	exc -> iupy_called		10605310						
ANR	10606009	Function	Ins_DELTAC	7236:2:253629:254935							
ANR	10606010	FunctionDef	"Ins_DELTAC (TT_ExecContext exc , FT_Long * args)"		10606009	0					
ANR	10606011	CompoundStatement		7239:2:253715:254935	10606009	0					
ANR	10606012	IdentifierDeclStatement	"FT_ULong nump , k ;"	7240:4:253721:253738	10606009	0	True				
ANR	10606013	IdentifierDecl	nump		10606009	0					
ANR	10606014	IdentifierDeclType	FT_ULong		10606009	0					
ANR	10606015	Identifier	nump		10606009	1					
ANR	10606016	IdentifierDecl	k		10606009	1					
ANR	10606017	IdentifierDeclType	FT_ULong		10606009	0					
ANR	10606018	Identifier	k		10606009	1					
ANR	10606019	IdentifierDeclStatement	"FT_ULong A , C , P ;"	7241:4:253744:253761	10606009	1	True				
ANR	10606020	IdentifierDecl	A		10606009	0					
ANR	10606021	IdentifierDeclType	FT_ULong		10606009	0					
ANR	10606022	Identifier	A		10606009	1					
ANR	10606023	IdentifierDecl	C		10606009	1					
ANR	10606024	IdentifierDeclType	FT_ULong		10606009	0					
ANR	10606025	Identifier	C		10606009	1					
ANR	10606026	IdentifierDecl	P		10606009	2					
ANR	10606027	IdentifierDeclType	FT_ULong		10606009	0					
ANR	10606028	Identifier	P		10606009	1					
ANR	10606029	IdentifierDeclStatement	FT_Long B ;	7242:4:253767:253778	10606009	2	True				
ANR	10606030	IdentifierDecl	B		10606009	0					
ANR	10606031	IdentifierDeclType	FT_Long		10606009	0					
ANR	10606032	Identifier	B		10606009	1					
ANR	10606033	ExpressionStatement	P = ( FT_ULong ) exc -> func_cur_ppem ( exc )	7245:4:253786:253828	10606009	3	True				
ANR	10606034	AssignmentExpression	P = ( FT_ULong ) exc -> func_cur_ppem ( exc )		10606009	0		=			
ANR	10606035	Identifier	P		10606009	0					
ANR	10606036	CastExpression	( FT_ULong ) exc -> func_cur_ppem ( exc )		10606009	1					
ANR	10606037	CastTarget	FT_ULong		10606009	0					
ANR	10606038	CallExpression	exc -> func_cur_ppem ( exc )		10606009	1					
ANR	10606039	Callee	exc -> func_cur_ppem		10606009	0					
ANR	10606040	PtrMemberAccess	exc -> func_cur_ppem		10606009	0					
ANR	10606041	Identifier	exc		10606009	0					
ANR	10606042	Identifier	func_cur_ppem		10606009	1					
ANR	10606043	ArgumentList	exc		10606009	1					
ANR	10606044	Argument	exc		10606009	0					
ANR	10606045	Identifier	exc		10606009	0					
ANR	10606046	ExpressionStatement	nump = ( FT_ULong ) args [ 0 ]	7246:4:253834:253858	10606009	4	True				
ANR	10606047	AssignmentExpression	nump = ( FT_ULong ) args [ 0 ]		10606009	0		=			
ANR	10606048	Identifier	nump		10606009	0					
ANR	10606049	CastExpression	( FT_ULong ) args [ 0 ]		10606009	1					
ANR	10606050	CastTarget	FT_ULong		10606009	0					
ANR	10606051	ArrayIndexing	args [ 0 ]		10606009	1					
ANR	10606052	Identifier	args		10606009	0					
ANR	10606053	PrimaryExpression	0		10606009	1					
ANR	10606054	ForStatement	for ( k = 1 ; k <= nump ; k ++ )		10606009	5					
ANR	10606055	ForInit	k = 1 ;	7248:10:253871:253876	10606009	0	True				
ANR	10606056	AssignmentExpression	k = 1		10606009	0		=			
ANR	10606057	Identifier	k		10606009	0					
ANR	10606058	PrimaryExpression	1		10606009	1					
ANR	10606059	Condition	k <= nump	7248:17:253878:253886	10606009	1	True				
ANR	10606060	RelationalExpression	k <= nump		10606009	0		<=			
ANR	10606061	Identifier	k		10606009	0					
ANR	10606062	Identifier	nump		10606009	1					
ANR	10606063	PostIncDecOperationExpression	k ++	7248:28:253889:253891	10606009	2	True				
ANR	10606064	Identifier	k		10606009	0					
ANR	10606065	IncDec	++		10606009	1					
ANR	10606066	CompoundStatement		11:4:183:183	10606009	3					
ANR	10606067	IfStatement	if ( exc -> args < 2 )		10606009	0					
ANR	10606068	Condition	exc -> args < 2	7250:11:253912:253924	10606009	0	True				
ANR	10606069	RelationalExpression	exc -> args < 2		10606009	0		<			
ANR	10606070	PtrMemberAccess	exc -> args		10606009	0					
ANR	10606071	Identifier	exc		10606009	0					
ANR	10606072	Identifier	args		10606009	1					
ANR	10606073	PrimaryExpression	2		10606009	1					
ANR	10606074	CompoundStatement		13:6:218:218	10606009	1					
ANR	10606075	IfStatement	if ( exc -> pedantic_hinting )		10606009	0					
ANR	10606076	Condition	exc -> pedantic_hinting	7252:13:253949:253969	10606009	0	True				
ANR	10606077	PtrMemberAccess	exc -> pedantic_hinting		10606009	0					
ANR	10606078	Identifier	exc		10606009	0					
ANR	10606079	Identifier	pedantic_hinting		10606009	1					
ANR	10606080	ExpressionStatement	exc -> error = FT_THROW ( Too_Few_Arguments )	7253:10:253983:254025	10606009	1	True				
ANR	10606081	AssignmentExpression	exc -> error = FT_THROW ( Too_Few_Arguments )		10606009	0		=			
ANR	10606082	PtrMemberAccess	exc -> error		10606009	0					
ANR	10606083	Identifier	exc		10606009	0					
ANR	10606084	Identifier	error		10606009	1					
ANR	10606085	CallExpression	FT_THROW ( Too_Few_Arguments )		10606009	1					
ANR	10606086	Callee	FT_THROW		10606009	0					
ANR	10606087	Identifier	FT_THROW		10606009	0					
ANR	10606088	ArgumentList	Too_Few_Arguments		10606009	1					
ANR	10606089	Argument	Too_Few_Arguments		10606009	0					
ANR	10606090	Identifier	Too_Few_Arguments		10606009	0					
ANR	10606091	ExpressionStatement	exc -> args = 0	7254:8:254035:254048	10606009	1	True				
ANR	10606092	AssignmentExpression	exc -> args = 0		10606009	0		=			
ANR	10606093	PtrMemberAccess	exc -> args		10606009	0					
ANR	10606094	Identifier	exc		10606009	0					
ANR	10606095	Identifier	args		10606009	1					
ANR	10606096	PrimaryExpression	0		10606009	1					
ANR	10606097	GotoStatement	goto Fail ;	7255:8:254058:254067	10606009	2	True				
ANR	10606098	Identifier	Fail		10606009	0					
ANR	10606099	ExpressionStatement	exc -> args -= 2	7258:6:254084:254098	10606009	1	True				
ANR	10606100	AssignmentExpression	exc -> args -= 2		10606009	0		-=			
ANR	10606101	PtrMemberAccess	exc -> args		10606009	0					
ANR	10606102	Identifier	exc		10606009	0					
ANR	10606103	Identifier	args		10606009	1					
ANR	10606104	PrimaryExpression	2		10606009	1					
ANR	10606105	ExpressionStatement	A = ( FT_ULong ) exc -> stack [ exc -> args + 1 ]	7260:6:254107:254146	10606009	2	True				
ANR	10606106	AssignmentExpression	A = ( FT_ULong ) exc -> stack [ exc -> args + 1 ]		10606009	0		=			
ANR	10606107	Identifier	A		10606009	0					
ANR	10606108	CastExpression	( FT_ULong ) exc -> stack [ exc -> args + 1 ]		10606009	1					
ANR	10606109	CastTarget	FT_ULong		10606009	0					
ANR	10606110	ArrayIndexing	exc -> stack [ exc -> args + 1 ]		10606009	1					
ANR	10606111	PtrMemberAccess	exc -> stack		10606009	0					
ANR	10606112	Identifier	exc		10606009	0					
ANR	10606113	Identifier	stack		10606009	1					
ANR	10606114	AdditiveExpression	exc -> args + 1		10606009	1		+			
ANR	10606115	PtrMemberAccess	exc -> args		10606009	0					
ANR	10606116	Identifier	exc		10606009	0					
ANR	10606117	Identifier	args		10606009	1					
ANR	10606118	PrimaryExpression	1		10606009	1					
ANR	10606119	ExpressionStatement	B = exc -> stack [ exc -> args ]	7261:6:254154:254179	10606009	3	True				
ANR	10606120	AssignmentExpression	B = exc -> stack [ exc -> args ]		10606009	0		=			
ANR	10606121	Identifier	B		10606009	0					
ANR	10606122	ArrayIndexing	exc -> stack [ exc -> args ]		10606009	1					
ANR	10606123	PtrMemberAccess	exc -> stack		10606009	0					
ANR	10606124	Identifier	exc		10606009	0					
ANR	10606125	Identifier	stack		10606009	1					
ANR	10606126	PtrMemberAccess	exc -> args		10606009	1					
ANR	10606127	Identifier	exc		10606009	0					
ANR	10606128	Identifier	args		10606009	1					
ANR	10606129	IfStatement	"if ( BOUNDSL ( A , exc -> cvtSize ) )"		10606009	4					
ANR	10606130	Condition	"BOUNDSL ( A , exc -> cvtSize )"	7263:11:254193:254218	10606009	0	True				
ANR	10606131	CallExpression	"BOUNDSL ( A , exc -> cvtSize )"		10606009	0					
ANR	10606132	Callee	BOUNDSL		10606009	0					
ANR	10606133	Identifier	BOUNDSL		10606009	0					
ANR	10606134	ArgumentList	A		10606009	1					
ANR	10606135	Argument	A		10606009	0					
ANR	10606136	Identifier	A		10606009	0					
ANR	10606137	Argument	exc -> cvtSize		10606009	1					
ANR	10606138	PtrMemberAccess	exc -> cvtSize		10606009	0					
ANR	10606139	Identifier	exc		10606009	0					
ANR	10606140	Identifier	cvtSize		10606009	1					
ANR	10606141	CompoundStatement		26:6:512:512	10606009	1					
ANR	10606142	IfStatement	if ( exc -> pedantic_hinting )		10606009	0					
ANR	10606143	Condition	exc -> pedantic_hinting	7265:13:254243:254263	10606009	0	True				
ANR	10606144	PtrMemberAccess	exc -> pedantic_hinting		10606009	0					
ANR	10606145	Identifier	exc		10606009	0					
ANR	10606146	Identifier	pedantic_hinting		10606009	1					
ANR	10606147	CompoundStatement		28:8:559:559	10606009	1					
ANR	10606148	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	7267:10:254287:254329	10606009	0	True				
ANR	10606149	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10606009	0		=			
ANR	10606150	PtrMemberAccess	exc -> error		10606009	0					
ANR	10606151	Identifier	exc		10606009	0					
ANR	10606152	Identifier	error		10606009	1					
ANR	10606153	CallExpression	FT_THROW ( Invalid_Reference )		10606009	1					
ANR	10606154	Callee	FT_THROW		10606009	0					
ANR	10606155	Identifier	FT_THROW		10606009	0					
ANR	10606156	ArgumentList	Invalid_Reference		10606009	1					
ANR	10606157	Argument	Invalid_Reference		10606009	0					
ANR	10606158	Identifier	Invalid_Reference		10606009	0					
ANR	10606159	ReturnStatement	return ;	7268:10:254341:254347	10606009	1	True				
ANR	10606160	ElseStatement	else		10606009	0					
ANR	10606161	CompoundStatement		34:6:668:668	10606009	0					
ANR	10606162	ExpressionStatement	C = ( ( FT_ULong ) B & 0xF0 ) >> 4	7273:8:254394:254425	10606009	0	True				
ANR	10606163	AssignmentExpression	C = ( ( FT_ULong ) B & 0xF0 ) >> 4		10606009	0		=			
ANR	10606164	Identifier	C		10606009	0					
ANR	10606165	ShiftExpression	( ( FT_ULong ) B & 0xF0 ) >> 4		10606009	1		>>			
ANR	10606166	BitAndExpression	( FT_ULong ) B & 0xF0		10606009	0		&			
ANR	10606167	CastExpression	( FT_ULong ) B		10606009	0					
ANR	10606168	CastTarget	FT_ULong		10606009	0					
ANR	10606169	Identifier	B		10606009	1					
ANR	10606170	PrimaryExpression	0xF0		10606009	1					
ANR	10606171	PrimaryExpression	4		10606009	1					
ANR	10606172	SwitchStatement	switch ( exc -> opcode )		10606009	1					
ANR	10606173	Condition	exc -> opcode	7275:17:254445:254455	10606009	0	True				
ANR	10606174	PtrMemberAccess	exc -> opcode		10606009	0					
ANR	10606175	Identifier	exc		10606009	0					
ANR	10606176	Identifier	opcode		10606009	1					
ANR	10606177	CompoundStatement		38:8:751:751	10606009	1					
ANR	10606178	Label	case 0x73 :	7277:8:254477:254486	10606009	0	True				
ANR	10606179	BreakStatement	break ;	7278:10:254498:254503	10606009	1	True				
ANR	10606180	Label	case 0x74 :	7280:8:254514:254523	10606009	2	True				
ANR	10606181	ExpressionStatement	C += 16	7281:10:254535:254542	10606009	3	True				
ANR	10606182	AssignmentExpression	C += 16		10606009	0		+=			
ANR	10606183	Identifier	C		10606009	0					
ANR	10606184	PrimaryExpression	16		10606009	1					
ANR	10606185	BreakStatement	break ;	7282:10:254554:254559	10606009	4	True				
ANR	10606186	Label	case 0x75 :	7284:8:254570:254579	10606009	5	True				
ANR	10606187	ExpressionStatement	C += 32	7285:10:254591:254598	10606009	6	True				
ANR	10606188	AssignmentExpression	C += 32		10606009	0		+=			
ANR	10606189	Identifier	C		10606009	0					
ANR	10606190	PrimaryExpression	32		10606009	1					
ANR	10606191	BreakStatement	break ;	7286:10:254610:254615	10606009	7	True				
ANR	10606192	ExpressionStatement	C += exc -> GS . delta_base	7289:8:254636:254659	10606009	2	True				
ANR	10606193	AssignmentExpression	C += exc -> GS . delta_base		10606009	0		+=			
ANR	10606194	Identifier	C		10606009	0					
ANR	10606195	MemberAccess	exc -> GS . delta_base		10606009	1					
ANR	10606196	PtrMemberAccess	exc -> GS		10606009	0					
ANR	10606197	Identifier	exc		10606009	0					
ANR	10606198	Identifier	GS		10606009	1					
ANR	10606199	Identifier	delta_base		10606009	1					
ANR	10606200	IfStatement	if ( P == C )		10606009	3					
ANR	10606201	Condition	P == C	7291:13:254675:254680	10606009	0	True				
ANR	10606202	EqualityExpression	P == C		10606009	0		==			
ANR	10606203	Identifier	P		10606009	0					
ANR	10606204	Identifier	C		10606009	1					
ANR	10606205	CompoundStatement		54:8:976:976	10606009	1					
ANR	10606206	ExpressionStatement	B = ( ( FT_ULong ) B & 0xF ) - 8	7293:10:254704:254733	10606009	0	True				
ANR	10606207	AssignmentExpression	B = ( ( FT_ULong ) B & 0xF ) - 8		10606009	0		=			
ANR	10606208	Identifier	B		10606009	0					
ANR	10606209	AdditiveExpression	( ( FT_ULong ) B & 0xF ) - 8		10606009	1		-			
ANR	10606210	BitAndExpression	( FT_ULong ) B & 0xF		10606009	0		&			
ANR	10606211	CastExpression	( FT_ULong ) B		10606009	0					
ANR	10606212	CastTarget	FT_ULong		10606009	0					
ANR	10606213	Identifier	B		10606009	1					
ANR	10606214	PrimaryExpression	0xF		10606009	1					
ANR	10606215	PrimaryExpression	8		10606009	1					
ANR	10606216	IfStatement	if ( B >= 0 )		10606009	1					
ANR	10606217	Condition	B >= 0	7294:15:254750:254755	10606009	0	True				
ANR	10606218	RelationalExpression	B >= 0		10606009	0		>=			
ANR	10606219	Identifier	B		10606009	0					
ANR	10606220	PrimaryExpression	0		10606009	1					
ANR	10606221	ExpressionStatement	B ++	7295:12:254771:254774	10606009	1	True				
ANR	10606222	PostIncDecOperationExpression	B ++		10606009	0					
ANR	10606223	Identifier	B		10606009	0					
ANR	10606224	IncDec	++		10606009	1					
ANR	10606225	ExpressionStatement	B *= 1L << ( 6 - exc -> GS . delta_shift )	7296:10:254786:254824	10606009	2	True				
ANR	10606226	AssignmentExpression	B *= 1L << ( 6 - exc -> GS . delta_shift )		10606009	0		*=			
ANR	10606227	Identifier	B		10606009	0					
ANR	10606228	ShiftExpression	1L << ( 6 - exc -> GS . delta_shift )		10606009	1		<<			
ANR	10606229	PrimaryExpression	1L		10606009	0					
ANR	10606230	AdditiveExpression	6 - exc -> GS . delta_shift		10606009	1		-			
ANR	10606231	PrimaryExpression	6		10606009	0					
ANR	10606232	MemberAccess	exc -> GS . delta_shift		10606009	1					
ANR	10606233	PtrMemberAccess	exc -> GS		10606009	0					
ANR	10606234	Identifier	exc		10606009	0					
ANR	10606235	Identifier	GS		10606009	1					
ANR	10606236	Identifier	delta_shift		10606009	1					
ANR	10606237	ExpressionStatement	"exc -> func_move_cvt ( exc , A , B )"	7298:10:254837:254868	10606009	3	True				
ANR	10606238	CallExpression	"exc -> func_move_cvt ( exc , A , B )"		10606009	0					
ANR	10606239	Callee	exc -> func_move_cvt		10606009	0					
ANR	10606240	PtrMemberAccess	exc -> func_move_cvt		10606009	0					
ANR	10606241	Identifier	exc		10606009	0					
ANR	10606242	Identifier	func_move_cvt		10606009	1					
ANR	10606243	ArgumentList	exc		10606009	1					
ANR	10606244	Argument	exc		10606009	0					
ANR	10606245	Identifier	exc		10606009	0					
ANR	10606246	Argument	A		10606009	1					
ANR	10606247	Identifier	A		10606009	0					
ANR	10606248	Argument	B		10606009	2					
ANR	10606249	Identifier	B		10606009	0					
ANR	10606250	Label	Fail :	7303:2:254897:254901	10606009	6	True				
ANR	10606251	Identifier	Fail		10606009	0					
ANR	10606252	ExpressionStatement	exc -> new_top = exc -> args	7304:4:254907:254931	10606009	7	True				
ANR	10606253	AssignmentExpression	exc -> new_top = exc -> args		10606009	0		=			
ANR	10606254	PtrMemberAccess	exc -> new_top		10606009	0					
ANR	10606255	Identifier	exc		10606009	0					
ANR	10606256	Identifier	new_top		10606009	1					
ANR	10606257	PtrMemberAccess	exc -> args		10606009	1					
ANR	10606258	Identifier	exc		10606009	0					
ANR	10606259	Identifier	args		10606009	1					
ANR	10606260	ReturnType	static void		10606009	1					
ANR	10606261	Identifier	Ins_DELTAC		10606009	2					
ANR	10606262	ParameterList	"TT_ExecContext exc , FT_Long * args"		10606009	3					
ANR	10606263	Parameter	TT_ExecContext exc	7237:14:253655:253673	10606009	0	True				
ANR	10606264	ParameterType	TT_ExecContext		10606009	0					
ANR	10606265	Identifier	exc		10606009	1					
ANR	10606266	Parameter	FT_Long * args	7238:14:253690:253709	10606009	1	True				
ANR	10606267	ParameterType	FT_Long *		10606009	0					
ANR	10606268	Identifier	args		10606009	1					
ANR	10606269	CFGEntryNode	ENTRY		10606009		True				
ANR	10606270	CFGExitNode	EXIT		10606009		True				
ANR	10606271	Symbol	exc -> new_top		10606009						
ANR	10606272	Symbol	A		10606009						
ANR	10606273	Symbol	B		10606009						
ANR	10606274	Symbol	C		10606009						
ANR	10606275	Symbol	* exc		10606009						
ANR	10606276	Symbol	* exc -> args		10606009						
ANR	10606277	Symbol	BOUNDSL		10606009						
ANR	10606278	Symbol	exc -> GS . delta_base		10606009						
ANR	10606279	Symbol	* args		10606009						
ANR	10606280	Symbol	P		10606009						
ANR	10606281	Symbol	exc		10606009						
ANR	10606282	Symbol	exc -> stack		10606009						
ANR	10606283	Symbol	Invalid_Reference		10606009						
ANR	10606284	Symbol	exc -> GS . delta_shift		10606009						
ANR	10606285	Symbol	nump		10606009						
ANR	10606286	Symbol	exc -> func_cur_ppem		10606009						
ANR	10606287	Symbol	exc -> error		10606009						
ANR	10606288	Symbol	* exc -> stack		10606009						
ANR	10606289	Symbol	Too_Few_Arguments		10606009						
ANR	10606290	Symbol	* * exc		10606009						
ANR	10606291	Symbol	exc -> args		10606009						
ANR	10606292	Symbol	exc -> cvtSize		10606009						
ANR	10606293	Symbol	exc -> pedantic_hinting		10606009						
ANR	10606294	Symbol	k		10606009						
ANR	10606295	Symbol	exc -> GS		10606009						
ANR	10606296	Symbol	FT_THROW		10606009						
ANR	10606297	Symbol	args		10606009						
ANR	10606298	Symbol	exc -> opcode		10606009						
ANR	10606299	Function	Ins_GETINFO	7329:2:256425:263806							
ANR	10606300	FunctionDef	"Ins_GETINFO (TT_ExecContext exc , FT_Long * args)"		10606299	0					
ANR	10606301	CompoundStatement		7332:2:256513:263806	10606299	0					
ANR	10606302	IdentifierDeclStatement	FT_Long K ;	7333:4:256519:256531	10606299	0	True				
ANR	10606303	IdentifierDecl	K		10606299	0					
ANR	10606304	IdentifierDeclType	FT_Long		10606299	0					
ANR	10606305	Identifier	K		10606299	1					
ANR	10606306	IdentifierDeclStatement	TT_Driver driver = ( TT_Driver ) FT_FACE_DRIVER ( exc -> face ) ;	7334:4:256537:256595	10606299	1	True				
ANR	10606307	IdentifierDecl	driver = ( TT_Driver ) FT_FACE_DRIVER ( exc -> face )		10606299	0					
ANR	10606308	IdentifierDeclType	TT_Driver		10606299	0					
ANR	10606309	Identifier	driver		10606299	1					
ANR	10606310	AssignmentExpression	driver = ( TT_Driver ) FT_FACE_DRIVER ( exc -> face )		10606299	2		=			
ANR	10606311	Identifier	driver		10606299	0					
ANR	10606312	CastExpression	( TT_Driver ) FT_FACE_DRIVER ( exc -> face )		10606299	1					
ANR	10606313	CastTarget	TT_Driver		10606299	0					
ANR	10606314	CallExpression	FT_FACE_DRIVER ( exc -> face )		10606299	1					
ANR	10606315	Callee	FT_FACE_DRIVER		10606299	0					
ANR	10606316	Identifier	FT_FACE_DRIVER		10606299	0					
ANR	10606317	ArgumentList	exc -> face		10606299	1					
ANR	10606318	Argument	exc -> face		10606299	0					
ANR	10606319	PtrMemberAccess	exc -> face		10606299	0					
ANR	10606320	Identifier	exc		10606299	0					
ANR	10606321	Identifier	face		10606299	1					
ANR	10606322	ExpressionStatement	K = 0	7337:4:256603:256608	10606299	2	True				
ANR	10606323	AssignmentExpression	K = 0		10606299	0		=			
ANR	10606324	Identifier	K		10606299	0					
ANR	10606325	PrimaryExpression	0		10606299	1					
ANR	10606326	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY && ( args [ 0 ] & 1 ) != 0 && exc -> subpixel_hinting )		10606299	3					
ANR	10606327	Condition	SUBPIXEL_HINTING_INFINALITY && ( args [ 0 ] & 1 ) != 0 && exc -> subpixel_hinting	7345:9:256861:256961	10606299	0	True				
ANR	10606328	AndExpression	SUBPIXEL_HINTING_INFINALITY && ( args [ 0 ] & 1 ) != 0 && exc -> subpixel_hinting		10606299	0		&&			
ANR	10606329	Identifier	SUBPIXEL_HINTING_INFINALITY		10606299	0					
ANR	10606330	AndExpression	( args [ 0 ] & 1 ) != 0 && exc -> subpixel_hinting		10606299	1		&&			
ANR	10606331	EqualityExpression	( args [ 0 ] & 1 ) != 0		10606299	0		!=			
ANR	10606332	BitAndExpression	args [ 0 ] & 1		10606299	0		&			
ANR	10606333	ArrayIndexing	args [ 0 ]		10606299	0					
ANR	10606334	Identifier	args		10606299	0					
ANR	10606335	PrimaryExpression	0		10606299	1					
ANR	10606336	PrimaryExpression	1		10606299	1					
ANR	10606337	PrimaryExpression	0		10606299	1					
ANR	10606338	PtrMemberAccess	exc -> subpixel_hinting		10606299	1					
ANR	10606339	Identifier	exc		10606299	0					
ANR	10606340	Identifier	subpixel_hinting		10606299	1					
ANR	10606341	CompoundStatement		17:4:461:461	10606299	1					
ANR	10606342	IfStatement	if ( exc -> ignore_x_mode )		10606299	0					
ANR	10606343	Condition	exc -> ignore_x_mode	7349:11:256988:257005	10606299	0	True				
ANR	10606344	PtrMemberAccess	exc -> ignore_x_mode		10606299	0					
ANR	10606345	Identifier	exc		10606299	0					
ANR	10606346	Identifier	ignore_x_mode		10606299	1					
ANR	10606347	CompoundStatement		19:6:501:501	10606299	1					
ANR	10606348	ExpressionStatement	K = exc -> rasterizer_version	7353:8:257159:257186	10606299	0	True				
ANR	10606349	AssignmentExpression	K = exc -> rasterizer_version		10606299	0		=			
ANR	10606350	Identifier	K		10606299	0					
ANR	10606351	PtrMemberAccess	exc -> rasterizer_version		10606299	1					
ANR	10606352	Identifier	exc		10606299	0					
ANR	10606353	Identifier	rasterizer_version		10606299	1					
ANR	10606354	ExpressionStatement	"FT_TRACE6 ( ( ""Setting rasterizer version %d\\n"" , exc -> rasterizer_version ) )"	7354:8:257196:257289	10606299	1	True				
ANR	10606355	CallExpression	"FT_TRACE6 ( ( ""Setting rasterizer version %d\\n"" , exc -> rasterizer_version ) )"		10606299	0					
ANR	10606356	Callee	FT_TRACE6		10606299	0					
ANR	10606357	Identifier	FT_TRACE6		10606299	0					
ANR	10606358	ArgumentList	"""Setting rasterizer version %d\\n"" , exc -> rasterizer_version"		10606299	1					
ANR	10606359	Argument	"""Setting rasterizer version %d\\n"" , exc -> rasterizer_version"		10606299	0					
ANR	10606360	Expression	"""Setting rasterizer version %d\\n"" , exc -> rasterizer_version"		10606299	0					
ANR	10606361	PrimaryExpression	"""Setting rasterizer version %d\\n"""		10606299	0					
ANR	10606362	PtrMemberAccess	exc -> rasterizer_version		10606299	1					
ANR	10606363	Identifier	exc		10606299	0					
ANR	10606364	Identifier	rasterizer_version		10606299	1					
ANR	10606365	ElseStatement	else		10606299	0					
ANR	10606366	ExpressionStatement	K = TT_INTERPRETER_VERSION_38	7358:8:257318:257347	10606299	0	True				
ANR	10606367	AssignmentExpression	K = TT_INTERPRETER_VERSION_38		10606299	0		=			
ANR	10606368	Identifier	K		10606299	0					
ANR	10606369	Identifier	TT_INTERPRETER_VERSION_38		10606299	1					
ANR	10606370	ElseStatement	else		10606299	0					
ANR	10606371	IfStatement	if ( ( args [ 0 ] & 1 ) != 0 )		10606299	0					
ANR	10606372	Condition	( args [ 0 ] & 1 ) != 0	7362:11:257427:257446	10606299	0	True				
ANR	10606373	EqualityExpression	( args [ 0 ] & 1 ) != 0		10606299	0		!=			
ANR	10606374	BitAndExpression	args [ 0 ] & 1		10606299	0		&			
ANR	10606375	ArrayIndexing	args [ 0 ]		10606299	0					
ANR	10606376	Identifier	args		10606299	0					
ANR	10606377	PrimaryExpression	0		10606299	1					
ANR	10606378	PrimaryExpression	1		10606299	1					
ANR	10606379	PrimaryExpression	0		10606299	1					
ANR	10606380	ExpressionStatement	K = driver -> interpreter_version	7363:8:257458:257489	10606299	1	True				
ANR	10606381	AssignmentExpression	K = driver -> interpreter_version		10606299	0		=			
ANR	10606382	Identifier	K		10606299	0					
ANR	10606383	PtrMemberAccess	driver -> interpreter_version		10606299	1					
ANR	10606384	Identifier	driver		10606299	0					
ANR	10606385	Identifier	interpreter_version		10606299	1					
ANR	10606386	IfStatement	if ( ( args [ 0 ] & 2 ) != 0 && exc -> tt_metrics . rotated )		10606299	4					
ANR	10606387	Condition	( args [ 0 ] & 2 ) != 0 && exc -> tt_metrics . rotated	7370:9:257696:257742	10606299	0	True				
ANR	10606388	AndExpression	( args [ 0 ] & 2 ) != 0 && exc -> tt_metrics . rotated		10606299	0		&&			
ANR	10606389	EqualityExpression	( args [ 0 ] & 2 ) != 0		10606299	0		!=			
ANR	10606390	BitAndExpression	args [ 0 ] & 2		10606299	0		&			
ANR	10606391	ArrayIndexing	args [ 0 ]		10606299	0					
ANR	10606392	Identifier	args		10606299	0					
ANR	10606393	PrimaryExpression	0		10606299	1					
ANR	10606394	PrimaryExpression	2		10606299	1					
ANR	10606395	PrimaryExpression	0		10606299	1					
ANR	10606396	MemberAccess	exc -> tt_metrics . rotated		10606299	1					
ANR	10606397	PtrMemberAccess	exc -> tt_metrics		10606299	0					
ANR	10606398	Identifier	exc		10606299	0					
ANR	10606399	Identifier	tt_metrics		10606299	1					
ANR	10606400	Identifier	rotated		10606299	1					
ANR	10606401	ExpressionStatement	K |= 1 << 8	7371:6:257752:257763	10606299	1	True				
ANR	10606402	AssignmentExpression	K |= 1 << 8		10606299	0		|=			
ANR	10606403	Identifier	K		10606299	0					
ANR	10606404	ShiftExpression	1 << 8		10606299	1		<<			
ANR	10606405	PrimaryExpression	1		10606299	0					
ANR	10606406	PrimaryExpression	8		10606299	1					
ANR	10606407	IfStatement	if ( ( args [ 0 ] & 4 ) != 0 && exc -> tt_metrics . stretched )		10606299	5					
ANR	10606408	Condition	( args [ 0 ] & 4 ) != 0 && exc -> tt_metrics . stretched	7378:9:257970:258018	10606299	0	True				
ANR	10606409	AndExpression	( args [ 0 ] & 4 ) != 0 && exc -> tt_metrics . stretched		10606299	0		&&			
ANR	10606410	EqualityExpression	( args [ 0 ] & 4 ) != 0		10606299	0		!=			
ANR	10606411	BitAndExpression	args [ 0 ] & 4		10606299	0		&			
ANR	10606412	ArrayIndexing	args [ 0 ]		10606299	0					
ANR	10606413	Identifier	args		10606299	0					
ANR	10606414	PrimaryExpression	0		10606299	1					
ANR	10606415	PrimaryExpression	4		10606299	1					
ANR	10606416	PrimaryExpression	0		10606299	1					
ANR	10606417	MemberAccess	exc -> tt_metrics . stretched		10606299	1					
ANR	10606418	PtrMemberAccess	exc -> tt_metrics		10606299	0					
ANR	10606419	Identifier	exc		10606299	0					
ANR	10606420	Identifier	tt_metrics		10606299	1					
ANR	10606421	Identifier	stretched		10606299	1					
ANR	10606422	ExpressionStatement	K |= 1 << 9	7379:6:258028:258039	10606299	1	True				
ANR	10606423	AssignmentExpression	K |= 1 << 9		10606299	0		|=			
ANR	10606424	Identifier	K		10606299	0					
ANR	10606425	ShiftExpression	1 << 9		10606299	1		<<			
ANR	10606426	PrimaryExpression	1		10606299	0					
ANR	10606427	PrimaryExpression	9		10606299	1					
ANR	10606428	IfStatement	if ( ( args [ 0 ] & 8 ) != 0 && exc -> face -> blend )		10606299	6					
ANR	10606429	Condition	( args [ 0 ] & 8 ) != 0 && exc -> face -> blend	7388:9:258324:258362	10606299	0	True				
ANR	10606430	AndExpression	( args [ 0 ] & 8 ) != 0 && exc -> face -> blend		10606299	0		&&			
ANR	10606431	EqualityExpression	( args [ 0 ] & 8 ) != 0		10606299	0		!=			
ANR	10606432	BitAndExpression	args [ 0 ] & 8		10606299	0		&			
ANR	10606433	ArrayIndexing	args [ 0 ]		10606299	0					
ANR	10606434	Identifier	args		10606299	0					
ANR	10606435	PrimaryExpression	0		10606299	1					
ANR	10606436	PrimaryExpression	8		10606299	1					
ANR	10606437	PrimaryExpression	0		10606299	1					
ANR	10606438	PtrMemberAccess	exc -> face -> blend		10606299	1					
ANR	10606439	PtrMemberAccess	exc -> face		10606299	0					
ANR	10606440	Identifier	exc		10606299	0					
ANR	10606441	Identifier	face		10606299	1					
ANR	10606442	Identifier	blend		10606299	1					
ANR	10606443	ExpressionStatement	K |= 1 << 10	7389:6:258372:258384	10606299	1	True				
ANR	10606444	AssignmentExpression	K |= 1 << 10		10606299	0		|=			
ANR	10606445	Identifier	K		10606299	0					
ANR	10606446	ShiftExpression	1 << 10		10606299	1		<<			
ANR	10606447	PrimaryExpression	1		10606299	0					
ANR	10606448	PrimaryExpression	10		10606299	1					
ANR	10606449	IfStatement	if ( ( args [ 0 ] & 32 ) != 0 && exc -> grayscale )		10606299	7					
ANR	10606450	Condition	( args [ 0 ] & 32 ) != 0 && exc -> grayscale	7398:9:258637:258675	10606299	0	True				
ANR	10606451	AndExpression	( args [ 0 ] & 32 ) != 0 && exc -> grayscale		10606299	0		&&			
ANR	10606452	EqualityExpression	( args [ 0 ] & 32 ) != 0		10606299	0		!=			
ANR	10606453	BitAndExpression	args [ 0 ] & 32		10606299	0		&			
ANR	10606454	ArrayIndexing	args [ 0 ]		10606299	0					
ANR	10606455	Identifier	args		10606299	0					
ANR	10606456	PrimaryExpression	0		10606299	1					
ANR	10606457	PrimaryExpression	32		10606299	1					
ANR	10606458	PrimaryExpression	0		10606299	1					
ANR	10606459	PtrMemberAccess	exc -> grayscale		10606299	1					
ANR	10606460	Identifier	exc		10606299	0					
ANR	10606461	Identifier	grayscale		10606299	1					
ANR	10606462	ExpressionStatement	K |= 1 << 12	7399:6:258685:258697	10606299	1	True				
ANR	10606463	AssignmentExpression	K |= 1 << 12		10606299	0		|=			
ANR	10606464	Identifier	K		10606299	0					
ANR	10606465	ShiftExpression	1 << 12		10606299	1		<<			
ANR	10606466	PrimaryExpression	1		10606299	0					
ANR	10606467	PrimaryExpression	12		10606299	1					
ANR	10606468	IfStatement	if ( SUBPIXEL_HINTING_MINIMAL && exc -> subpixel_hinting_lean )		10606299	8					
ANR	10606469	Condition	SUBPIXEL_HINTING_MINIMAL && exc -> subpixel_hinting_lean	7406:9:259001:259054	10606299	0	True				
ANR	10606470	AndExpression	SUBPIXEL_HINTING_MINIMAL && exc -> subpixel_hinting_lean		10606299	0		&&			
ANR	10606471	Identifier	SUBPIXEL_HINTING_MINIMAL		10606299	0					
ANR	10606472	PtrMemberAccess	exc -> subpixel_hinting_lean		10606299	1					
ANR	10606473	Identifier	exc		10606299	0					
ANR	10606474	Identifier	subpixel_hinting_lean		10606299	1					
ANR	10606475	CompoundStatement		76:4:2548:2548	10606299	1					
ANR	10606476	IfStatement	if ( ( args [ 0 ] & 64 ) != 0 )		10606299	0					
ANR	10606477	Condition	( args [ 0 ] & 64 ) != 0	7414:11:259330:259350	10606299	0	True				
ANR	10606478	EqualityExpression	( args [ 0 ] & 64 ) != 0		10606299	0		!=			
ANR	10606479	BitAndExpression	args [ 0 ] & 64		10606299	0		&			
ANR	10606480	ArrayIndexing	args [ 0 ]		10606299	0					
ANR	10606481	Identifier	args		10606299	0					
ANR	10606482	PrimaryExpression	0		10606299	1					
ANR	10606483	PrimaryExpression	64		10606299	1					
ANR	10606484	PrimaryExpression	0		10606299	1					
ANR	10606485	ExpressionStatement	K |= 1 << 13	7415:8:259362:259374	10606299	1	True				
ANR	10606486	AssignmentExpression	K |= 1 << 13		10606299	0		|=			
ANR	10606487	Identifier	K		10606299	0					
ANR	10606488	ShiftExpression	1 << 13		10606299	1		<<			
ANR	10606489	PrimaryExpression	1		10606299	0					
ANR	10606490	PrimaryExpression	13		10606299	1					
ANR	10606491	IfStatement	if ( ( args [ 0 ] & 256 ) != 0 && exc -> vertical_lcd_lean )		10606299	1					
ANR	10606492	Condition	( args [ 0 ] & 256 ) != 0 && exc -> vertical_lcd_lean	7422:11:259593:259640	10606299	0	True				
ANR	10606493	AndExpression	( args [ 0 ] & 256 ) != 0 && exc -> vertical_lcd_lean		10606299	0		&&			
ANR	10606494	EqualityExpression	( args [ 0 ] & 256 ) != 0		10606299	0		!=			
ANR	10606495	BitAndExpression	args [ 0 ] & 256		10606299	0		&			
ANR	10606496	ArrayIndexing	args [ 0 ]		10606299	0					
ANR	10606497	Identifier	args		10606299	0					
ANR	10606498	PrimaryExpression	0		10606299	1					
ANR	10606499	PrimaryExpression	256		10606299	1					
ANR	10606500	PrimaryExpression	0		10606299	1					
ANR	10606501	PtrMemberAccess	exc -> vertical_lcd_lean		10606299	1					
ANR	10606502	Identifier	exc		10606299	0					
ANR	10606503	Identifier	vertical_lcd_lean		10606299	1					
ANR	10606504	ExpressionStatement	K |= 1 << 15	7423:8:259652:259664	10606299	1	True				
ANR	10606505	AssignmentExpression	K |= 1 << 15		10606299	0		|=			
ANR	10606506	Identifier	K		10606299	0					
ANR	10606507	ShiftExpression	1 << 15		10606299	1		<<			
ANR	10606508	PrimaryExpression	1		10606299	0					
ANR	10606509	PrimaryExpression	15		10606299	1					
ANR	10606510	IfStatement	if ( ( args [ 0 ] & 1024 ) != 0 )		10606299	2					
ANR	10606511	Condition	( args [ 0 ] & 1024 ) != 0	7431:11:259953:259975	10606299	0	True				
ANR	10606512	EqualityExpression	( args [ 0 ] & 1024 ) != 0		10606299	0		!=			
ANR	10606513	BitAndExpression	args [ 0 ] & 1024		10606299	0		&			
ANR	10606514	ArrayIndexing	args [ 0 ]		10606299	0					
ANR	10606515	Identifier	args		10606299	0					
ANR	10606516	PrimaryExpression	0		10606299	1					
ANR	10606517	PrimaryExpression	1024		10606299	1					
ANR	10606518	PrimaryExpression	0		10606299	1					
ANR	10606519	ExpressionStatement	K |= 1 << 17	7432:8:259987:259999	10606299	1	True				
ANR	10606520	AssignmentExpression	K |= 1 << 17		10606299	0		|=			
ANR	10606521	Identifier	K		10606299	0					
ANR	10606522	ShiftExpression	1 << 17		10606299	1		<<			
ANR	10606523	PrimaryExpression	1		10606299	0					
ANR	10606524	PrimaryExpression	17		10606299	1					
ANR	10606525	IfStatement	if ( ( args [ 0 ] & 2048 ) != 0 && exc -> subpixel_hinting_lean )		10606299	3					
ANR	10606526	Condition	( args [ 0 ] & 2048 ) != 0 && exc -> subpixel_hinting_lean	7441:11:260370:260422	10606299	0	True				
ANR	10606527	AndExpression	( args [ 0 ] & 2048 ) != 0 && exc -> subpixel_hinting_lean		10606299	0		&&			
ANR	10606528	EqualityExpression	( args [ 0 ] & 2048 ) != 0		10606299	0		!=			
ANR	10606529	BitAndExpression	args [ 0 ] & 2048		10606299	0		&			
ANR	10606530	ArrayIndexing	args [ 0 ]		10606299	0					
ANR	10606531	Identifier	args		10606299	0					
ANR	10606532	PrimaryExpression	0		10606299	1					
ANR	10606533	PrimaryExpression	2048		10606299	1					
ANR	10606534	PrimaryExpression	0		10606299	1					
ANR	10606535	PtrMemberAccess	exc -> subpixel_hinting_lean		10606299	1					
ANR	10606536	Identifier	exc		10606299	0					
ANR	10606537	Identifier	subpixel_hinting_lean		10606299	1					
ANR	10606538	ExpressionStatement	K |= 1 << 18	7442:8:260434:260446	10606299	1	True				
ANR	10606539	AssignmentExpression	K |= 1 << 18		10606299	0		|=			
ANR	10606540	Identifier	K		10606299	0					
ANR	10606541	ShiftExpression	1 << 18		10606299	1		<<			
ANR	10606542	PrimaryExpression	1		10606299	0					
ANR	10606543	PrimaryExpression	18		10606299	1					
ANR	10606544	IfStatement	if ( ( args [ 0 ] & 4096 ) != 0 && exc -> grayscale_cleartype )		10606299	4					
ANR	10606545	Condition	( args [ 0 ] & 4096 ) != 0 && exc -> grayscale_cleartype	7452:11:260858:260908	10606299	0	True				
ANR	10606546	AndExpression	( args [ 0 ] & 4096 ) != 0 && exc -> grayscale_cleartype		10606299	0		&&			
ANR	10606547	EqualityExpression	( args [ 0 ] & 4096 ) != 0		10606299	0		!=			
ANR	10606548	BitAndExpression	args [ 0 ] & 4096		10606299	0		&			
ANR	10606549	ArrayIndexing	args [ 0 ]		10606299	0					
ANR	10606550	Identifier	args		10606299	0					
ANR	10606551	PrimaryExpression	0		10606299	1					
ANR	10606552	PrimaryExpression	4096		10606299	1					
ANR	10606553	PrimaryExpression	0		10606299	1					
ANR	10606554	PtrMemberAccess	exc -> grayscale_cleartype		10606299	1					
ANR	10606555	Identifier	exc		10606299	0					
ANR	10606556	Identifier	grayscale_cleartype		10606299	1					
ANR	10606557	ExpressionStatement	K |= 1 << 19	7453:8:260920:260932	10606299	1	True				
ANR	10606558	AssignmentExpression	K |= 1 << 19		10606299	0		|=			
ANR	10606559	Identifier	K		10606299	0					
ANR	10606560	ShiftExpression	1 << 19		10606299	1		<<			
ANR	10606561	PrimaryExpression	1		10606299	0					
ANR	10606562	PrimaryExpression	19		10606299	1					
ANR	10606563	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY && exc -> rasterizer_version >= TT_INTERPRETER_VERSION_35 )		10606299	9					
ANR	10606564	Condition	SUBPIXEL_HINTING_INFINALITY && exc -> rasterizer_version >= TT_INTERPRETER_VERSION_35	7459:9:261004:261120	10606299	0	True				
ANR	10606565	AndExpression	SUBPIXEL_HINTING_INFINALITY && exc -> rasterizer_version >= TT_INTERPRETER_VERSION_35		10606299	0		&&			
ANR	10606566	Identifier	SUBPIXEL_HINTING_INFINALITY		10606299	0					
ANR	10606567	RelationalExpression	exc -> rasterizer_version >= TT_INTERPRETER_VERSION_35		10606299	1		>=			
ANR	10606568	PtrMemberAccess	exc -> rasterizer_version		10606299	0					
ANR	10606569	Identifier	exc		10606299	0					
ANR	10606570	Identifier	rasterizer_version		10606299	1					
ANR	10606571	Identifier	TT_INTERPRETER_VERSION_35		10606299	1					
ANR	10606572	CompoundStatement		130:4:4614:4614	10606299	1					
ANR	10606573	IfStatement	if ( exc -> rasterizer_version >= 37 )		10606299	0					
ANR	10606574	Condition	exc -> rasterizer_version >= 37	7463:11:261142:261170	10606299	0	True				
ANR	10606575	RelationalExpression	exc -> rasterizer_version >= 37		10606299	0		>=			
ANR	10606576	PtrMemberAccess	exc -> rasterizer_version		10606299	0					
ANR	10606577	Identifier	exc		10606299	0					
ANR	10606578	Identifier	rasterizer_version		10606299	1					
ANR	10606579	PrimaryExpression	37		10606299	1					
ANR	10606580	CompoundStatement		133:6:4666:4666	10606299	1					
ANR	10606581	IfStatement	if ( ( args [ 0 ] & 64 ) != 0 && exc -> subpixel_hinting )		10606299	0					
ANR	10606582	Condition	( args [ 0 ] & 64 ) != 0 && exc -> subpixel_hinting	7470:13:261410:261455	10606299	0	True				
ANR	10606583	AndExpression	( args [ 0 ] & 64 ) != 0 && exc -> subpixel_hinting		10606299	0		&&			
ANR	10606584	EqualityExpression	( args [ 0 ] & 64 ) != 0		10606299	0		!=			
ANR	10606585	BitAndExpression	args [ 0 ] & 64		10606299	0		&			
ANR	10606586	ArrayIndexing	args [ 0 ]		10606299	0					
ANR	10606587	Identifier	args		10606299	0					
ANR	10606588	PrimaryExpression	0		10606299	1					
ANR	10606589	PrimaryExpression	64		10606299	1					
ANR	10606590	PrimaryExpression	0		10606299	1					
ANR	10606591	PtrMemberAccess	exc -> subpixel_hinting		10606299	1					
ANR	10606592	Identifier	exc		10606299	0					
ANR	10606593	Identifier	subpixel_hinting		10606299	1					
ANR	10606594	ExpressionStatement	K |= 1 << 13	7471:10:261469:261481	10606299	1	True				
ANR	10606595	AssignmentExpression	K |= 1 << 13		10606299	0		|=			
ANR	10606596	Identifier	K		10606299	0					
ANR	10606597	ShiftExpression	1 << 13		10606299	1		<<			
ANR	10606598	PrimaryExpression	1		10606299	0					
ANR	10606599	PrimaryExpression	13		10606299	1					
ANR	10606600	IfStatement	if ( ( args [ 0 ] & 128 ) != 0 && exc -> compatible_widths )		10606299	1					
ANR	10606601	Condition	( args [ 0 ] & 128 ) != 0 && exc -> compatible_widths	7479:13:261764:261811	10606299	0	True				
ANR	10606602	AndExpression	( args [ 0 ] & 128 ) != 0 && exc -> compatible_widths		10606299	0		&&			
ANR	10606603	EqualityExpression	( args [ 0 ] & 128 ) != 0		10606299	0		!=			
ANR	10606604	BitAndExpression	args [ 0 ] & 128		10606299	0		&			
ANR	10606605	ArrayIndexing	args [ 0 ]		10606299	0					
ANR	10606606	Identifier	args		10606299	0					
ANR	10606607	PrimaryExpression	0		10606299	1					
ANR	10606608	PrimaryExpression	128		10606299	1					
ANR	10606609	PrimaryExpression	0		10606299	1					
ANR	10606610	PtrMemberAccess	exc -> compatible_widths		10606299	1					
ANR	10606611	Identifier	exc		10606299	0					
ANR	10606612	Identifier	compatible_widths		10606299	1					
ANR	10606613	ExpressionStatement	K |= 1 << 14	7480:10:261825:261837	10606299	1	True				
ANR	10606614	AssignmentExpression	K |= 1 << 14		10606299	0		|=			
ANR	10606615	Identifier	K		10606299	0					
ANR	10606616	ShiftExpression	1 << 14		10606299	1		<<			
ANR	10606617	PrimaryExpression	1		10606299	0					
ANR	10606618	PrimaryExpression	14		10606299	1					
ANR	10606619	IfStatement	if ( ( args [ 0 ] & 256 ) != 0 && exc -> vertical_lcd )		10606299	2					
ANR	10606620	Condition	( args [ 0 ] & 256 ) != 0 && exc -> vertical_lcd	7488:13:262120:262162	10606299	0	True				
ANR	10606621	AndExpression	( args [ 0 ] & 256 ) != 0 && exc -> vertical_lcd		10606299	0		&&			
ANR	10606622	EqualityExpression	( args [ 0 ] & 256 ) != 0		10606299	0		!=			
ANR	10606623	BitAndExpression	args [ 0 ] & 256		10606299	0		&			
ANR	10606624	ArrayIndexing	args [ 0 ]		10606299	0					
ANR	10606625	Identifier	args		10606299	0					
ANR	10606626	PrimaryExpression	0		10606299	1					
ANR	10606627	PrimaryExpression	256		10606299	1					
ANR	10606628	PrimaryExpression	0		10606299	1					
ANR	10606629	PtrMemberAccess	exc -> vertical_lcd		10606299	1					
ANR	10606630	Identifier	exc		10606299	0					
ANR	10606631	Identifier	vertical_lcd		10606299	1					
ANR	10606632	ExpressionStatement	K |= 1 << 15	7489:10:262176:262188	10606299	1	True				
ANR	10606633	AssignmentExpression	K |= 1 << 15		10606299	0		|=			
ANR	10606634	Identifier	K		10606299	0					
ANR	10606635	ShiftExpression	1 << 15		10606299	1		<<			
ANR	10606636	PrimaryExpression	1		10606299	0					
ANR	10606637	PrimaryExpression	15		10606299	1					
ANR	10606638	IfStatement	if ( ( args [ 0 ] & 512 ) != 0 && exc -> bgr )		10606299	3					
ANR	10606639	Condition	( args [ 0 ] & 512 ) != 0 && exc -> bgr	7497:13:262471:262504	10606299	0	True				
ANR	10606640	AndExpression	( args [ 0 ] & 512 ) != 0 && exc -> bgr		10606299	0		&&			
ANR	10606641	EqualityExpression	( args [ 0 ] & 512 ) != 0		10606299	0		!=			
ANR	10606642	BitAndExpression	args [ 0 ] & 512		10606299	0		&			
ANR	10606643	ArrayIndexing	args [ 0 ]		10606299	0					
ANR	10606644	Identifier	args		10606299	0					
ANR	10606645	PrimaryExpression	0		10606299	1					
ANR	10606646	PrimaryExpression	512		10606299	1					
ANR	10606647	PrimaryExpression	0		10606299	1					
ANR	10606648	PtrMemberAccess	exc -> bgr		10606299	1					
ANR	10606649	Identifier	exc		10606299	0					
ANR	10606650	Identifier	bgr		10606299	1					
ANR	10606651	ExpressionStatement	K |= 1 << 16	7498:10:262518:262530	10606299	1	True				
ANR	10606652	AssignmentExpression	K |= 1 << 16		10606299	0		|=			
ANR	10606653	Identifier	K		10606299	0					
ANR	10606654	ShiftExpression	1 << 16		10606299	1		<<			
ANR	10606655	PrimaryExpression	1		10606299	0					
ANR	10606656	PrimaryExpression	16		10606299	1					
ANR	10606657	IfStatement	if ( exc -> rasterizer_version >= 38 )		10606299	4					
ANR	10606658	Condition	exc -> rasterizer_version >= 38	7500:13:262546:262574	10606299	0	True				
ANR	10606659	RelationalExpression	exc -> rasterizer_version >= 38		10606299	0		>=			
ANR	10606660	PtrMemberAccess	exc -> rasterizer_version		10606299	0					
ANR	10606661	Identifier	exc		10606299	0					
ANR	10606662	Identifier	rasterizer_version		10606299	1					
ANR	10606663	PrimaryExpression	38		10606299	1					
ANR	10606664	CompoundStatement		170:8:6072:6072	10606299	1					
ANR	10606665	IfStatement	if ( ( args [ 0 ] & 1024 ) != 0 && exc -> subpixel_positioned )		10606299	0					
ANR	10606666	Condition	( args [ 0 ] & 1024 ) != 0 && exc -> subpixel_positioned	7508:15:262882:262932	10606299	0	True				
ANR	10606667	AndExpression	( args [ 0 ] & 1024 ) != 0 && exc -> subpixel_positioned		10606299	0		&&			
ANR	10606668	EqualityExpression	( args [ 0 ] & 1024 ) != 0		10606299	0		!=			
ANR	10606669	BitAndExpression	args [ 0 ] & 1024		10606299	0		&			
ANR	10606670	ArrayIndexing	args [ 0 ]		10606299	0					
ANR	10606671	Identifier	args		10606299	0					
ANR	10606672	PrimaryExpression	0		10606299	1					
ANR	10606673	PrimaryExpression	1024		10606299	1					
ANR	10606674	PrimaryExpression	0		10606299	1					
ANR	10606675	PtrMemberAccess	exc -> subpixel_positioned		10606299	1					
ANR	10606676	Identifier	exc		10606299	0					
ANR	10606677	Identifier	subpixel_positioned		10606299	1					
ANR	10606678	ExpressionStatement	K |= 1 << 17	7509:12:262948:262960	10606299	1	True				
ANR	10606679	AssignmentExpression	K |= 1 << 17		10606299	0		|=			
ANR	10606680	Identifier	K		10606299	0					
ANR	10606681	ShiftExpression	1 << 17		10606299	1		<<			
ANR	10606682	PrimaryExpression	1		10606299	0					
ANR	10606683	PrimaryExpression	17		10606299	1					
ANR	10606684	IfStatement	if ( ( args [ 0 ] & 2048 ) != 0 && exc -> symmetrical_smoothing )		10606299	1					
ANR	10606685	Condition	( args [ 0 ] & 2048 ) != 0 && exc -> symmetrical_smoothing	7517:15:263257:263309	10606299	0	True				
ANR	10606686	AndExpression	( args [ 0 ] & 2048 ) != 0 && exc -> symmetrical_smoothing		10606299	0		&&			
ANR	10606687	EqualityExpression	( args [ 0 ] & 2048 ) != 0		10606299	0		!=			
ANR	10606688	BitAndExpression	args [ 0 ] & 2048		10606299	0		&			
ANR	10606689	ArrayIndexing	args [ 0 ]		10606299	0					
ANR	10606690	Identifier	args		10606299	0					
ANR	10606691	PrimaryExpression	0		10606299	1					
ANR	10606692	PrimaryExpression	2048		10606299	1					
ANR	10606693	PrimaryExpression	0		10606299	1					
ANR	10606694	PtrMemberAccess	exc -> symmetrical_smoothing		10606299	1					
ANR	10606695	Identifier	exc		10606299	0					
ANR	10606696	Identifier	symmetrical_smoothing		10606299	1					
ANR	10606697	ExpressionStatement	K |= 1 << 18	7518:12:263325:263337	10606299	1	True				
ANR	10606698	AssignmentExpression	K |= 1 << 18		10606299	0		|=			
ANR	10606699	Identifier	K		10606299	0					
ANR	10606700	ShiftExpression	1 << 18		10606299	1		<<			
ANR	10606701	PrimaryExpression	1		10606299	0					
ANR	10606702	PrimaryExpression	18		10606299	1					
ANR	10606703	IfStatement	if ( ( args [ 0 ] & 4096 ) != 0 && exc -> gray_cleartype )		10606299	2					
ANR	10606704	Condition	( args [ 0 ] & 4096 ) != 0 && exc -> gray_cleartype	7526:15:263634:263679	10606299	0	True				
ANR	10606705	AndExpression	( args [ 0 ] & 4096 ) != 0 && exc -> gray_cleartype		10606299	0		&&			
ANR	10606706	EqualityExpression	( args [ 0 ] & 4096 ) != 0		10606299	0		!=			
ANR	10606707	BitAndExpression	args [ 0 ] & 4096		10606299	0		&			
ANR	10606708	ArrayIndexing	args [ 0 ]		10606299	0					
ANR	10606709	Identifier	args		10606299	0					
ANR	10606710	PrimaryExpression	0		10606299	1					
ANR	10606711	PrimaryExpression	4096		10606299	1					
ANR	10606712	PrimaryExpression	0		10606299	1					
ANR	10606713	PtrMemberAccess	exc -> gray_cleartype		10606299	1					
ANR	10606714	Identifier	exc		10606299	0					
ANR	10606715	Identifier	gray_cleartype		10606299	1					
ANR	10606716	ExpressionStatement	K |= 1 << 19	7527:12:263695:263707	10606299	1	True				
ANR	10606717	AssignmentExpression	K |= 1 << 19		10606299	0		|=			
ANR	10606718	Identifier	K		10606299	0					
ANR	10606719	ShiftExpression	1 << 19		10606299	1		<<			
ANR	10606720	PrimaryExpression	1		10606299	0					
ANR	10606721	PrimaryExpression	19		10606299	1					
ANR	10606722	ExpressionStatement	args [ 0 ] = K	7534:4:263791:263802	10606299	10	True				
ANR	10606723	AssignmentExpression	args [ 0 ] = K		10606299	0		=			
ANR	10606724	ArrayIndexing	args [ 0 ]		10606299	0					
ANR	10606725	Identifier	args		10606299	0					
ANR	10606726	PrimaryExpression	0		10606299	1					
ANR	10606727	Identifier	K		10606299	1					
ANR	10606728	ReturnType	static void		10606299	1					
ANR	10606729	Identifier	Ins_GETINFO		10606299	2					
ANR	10606730	ParameterList	"TT_ExecContext exc , FT_Long * args"		10606299	3					
ANR	10606731	Parameter	TT_ExecContext exc	7330:15:256452:256470	10606299	0	True				
ANR	10606732	ParameterType	TT_ExecContext		10606299	0					
ANR	10606733	Identifier	exc		10606299	1					
ANR	10606734	Parameter	FT_Long * args	7331:15:256488:256507	10606299	1	True				
ANR	10606735	ParameterType	FT_Long *		10606299	0					
ANR	10606736	Identifier	args		10606299	1					
ANR	10606737	CFGEntryNode	ENTRY		10606299		True				
ANR	10606738	CFGExitNode	EXIT		10606299		True				
ANR	10606739	Symbol	SUBPIXEL_HINTING_MINIMAL		10606299						
ANR	10606740	Symbol	exc -> face -> blend		10606299						
ANR	10606741	Symbol	exc -> bgr		10606299						
ANR	10606742	Symbol	* exc		10606299						
ANR	10606743	Symbol	exc -> grayscale		10606299						
ANR	10606744	Symbol	* exc -> face		10606299						
ANR	10606745	Symbol	K		10606299						
ANR	10606746	Symbol	* driver		10606299						
ANR	10606747	Symbol	exc -> vertical_lcd		10606299						
ANR	10606748	Symbol	* args		10606299						
ANR	10606749	Symbol	exc -> subpixel_positioned		10606299						
ANR	10606750	Symbol	SUBPIXEL_HINTING_INFINALITY		10606299						
ANR	10606751	Symbol	exc		10606299						
ANR	10606752	Symbol	driver -> interpreter_version		10606299						
ANR	10606753	Symbol	exc -> gray_cleartype		10606299						
ANR	10606754	Symbol	exc -> ignore_x_mode		10606299						
ANR	10606755	Symbol	exc -> compatible_widths		10606299						
ANR	10606756	Symbol	exc -> subpixel_hinting		10606299						
ANR	10606757	Symbol	exc -> symmetrical_smoothing		10606299						
ANR	10606758	Symbol	* * exc		10606299						
ANR	10606759	Symbol	exc -> vertical_lcd_lean		10606299						
ANR	10606760	Symbol	exc -> face		10606299						
ANR	10606761	Symbol	exc -> tt_metrics . rotated		10606299						
ANR	10606762	Symbol	exc -> tt_metrics		10606299						
ANR	10606763	Symbol	FT_FACE_DRIVER		10606299						
ANR	10606764	Symbol	TT_INTERPRETER_VERSION_35		10606299						
ANR	10606765	Symbol	args		10606299						
ANR	10606766	Symbol	exc -> tt_metrics . stretched		10606299						
ANR	10606767	Symbol	exc -> rasterizer_version		10606299						
ANR	10606768	Symbol	exc -> grayscale_cleartype		10606299						
ANR	10606769	Symbol	exc -> subpixel_hinting_lean		10606299						
ANR	10606770	Symbol	TT_INTERPRETER_VERSION_38		10606299						
ANR	10606771	Symbol	driver		10606299						
ANR	10606772	Function	Ins_GETVARIATION	7550:2:264632:265223							
ANR	10606773	FunctionDef	"Ins_GETVARIATION (TT_ExecContext exc , FT_Long * args)"		10606772	0					
ANR	10606774	CompoundStatement		7553:2:264730:265223	10606772	0					
ANR	10606775	IdentifierDeclStatement	FT_UInt num_axes = exc -> face -> blend -> num_axis ;	7554:4:264736:264784	10606772	0	True				
ANR	10606776	IdentifierDecl	num_axes = exc -> face -> blend -> num_axis		10606772	0					
ANR	10606777	IdentifierDeclType	FT_UInt		10606772	0					
ANR	10606778	Identifier	num_axes		10606772	1					
ANR	10606779	AssignmentExpression	num_axes = exc -> face -> blend -> num_axis		10606772	2		=			
ANR	10606780	Identifier	num_axes		10606772	0					
ANR	10606781	PtrMemberAccess	exc -> face -> blend -> num_axis		10606772	1					
ANR	10606782	PtrMemberAccess	exc -> face -> blend		10606772	0					
ANR	10606783	PtrMemberAccess	exc -> face		10606772	0					
ANR	10606784	Identifier	exc		10606772	0					
ANR	10606785	Identifier	face		10606772	1					
ANR	10606786	Identifier	blend		10606772	1					
ANR	10606787	Identifier	num_axis		10606772	1					
ANR	10606788	IdentifierDeclStatement	FT_Fixed * coords = exc -> face -> blend -> normalizedcoords ;	7555:4:264790:264846	10606772	1	True				
ANR	10606789	IdentifierDecl	* coords = exc -> face -> blend -> normalizedcoords		10606772	0					
ANR	10606790	IdentifierDeclType	FT_Fixed *		10606772	0					
ANR	10606791	Identifier	coords		10606772	1					
ANR	10606792	AssignmentExpression	* coords = exc -> face -> blend -> normalizedcoords		10606772	2		=			
ANR	10606793	Identifier	coords		10606772	0					
ANR	10606794	PtrMemberAccess	exc -> face -> blend -> normalizedcoords		10606772	1					
ANR	10606795	PtrMemberAccess	exc -> face -> blend		10606772	0					
ANR	10606796	PtrMemberAccess	exc -> face		10606772	0					
ANR	10606797	Identifier	exc		10606772	0					
ANR	10606798	Identifier	face		10606772	1					
ANR	10606799	Identifier	blend		10606772	1					
ANR	10606800	Identifier	normalizedcoords		10606772	1					
ANR	10606801	IdentifierDeclStatement	FT_UInt i ;	7557:4:264853:264863	10606772	2	True				
ANR	10606802	IdentifierDecl	i		10606772	0					
ANR	10606803	IdentifierDeclType	FT_UInt		10606772	0					
ANR	10606804	Identifier	i		10606772	1					
ANR	10606805	IfStatement	"if ( BOUNDS ( num_axes , exc -> stackSize + 1 - exc -> top ) )"		10606772	3					
ANR	10606806	Condition	"BOUNDS ( num_axes , exc -> stackSize + 1 - exc -> top )"	7560:9:264876:264924	10606772	0	True				
ANR	10606807	CallExpression	"BOUNDS ( num_axes , exc -> stackSize + 1 - exc -> top )"		10606772	0					
ANR	10606808	Callee	BOUNDS		10606772	0					
ANR	10606809	Identifier	BOUNDS		10606772	0					
ANR	10606810	ArgumentList	num_axes		10606772	1					
ANR	10606811	Argument	num_axes		10606772	0					
ANR	10606812	Identifier	num_axes		10606772	0					
ANR	10606813	Argument	exc -> stackSize + 1 - exc -> top		10606772	1					
ANR	10606814	AdditiveExpression	exc -> stackSize + 1 - exc -> top		10606772	0		+			
ANR	10606815	PtrMemberAccess	exc -> stackSize		10606772	0					
ANR	10606816	Identifier	exc		10606772	0					
ANR	10606817	Identifier	stackSize		10606772	1					
ANR	10606818	AdditiveExpression	1 - exc -> top		10606772	1		-			
ANR	10606819	PrimaryExpression	1		10606772	0					
ANR	10606820	PtrMemberAccess	exc -> top		10606772	1					
ANR	10606821	Identifier	exc		10606772	0					
ANR	10606822	Identifier	top		10606772	1					
ANR	10606823	CompoundStatement		9:4:201:201	10606772	1					
ANR	10606824	ExpressionStatement	exc -> error = FT_THROW ( Stack_Overflow )	7562:6:264940:264979	10606772	0	True				
ANR	10606825	AssignmentExpression	exc -> error = FT_THROW ( Stack_Overflow )		10606772	0		=			
ANR	10606826	PtrMemberAccess	exc -> error		10606772	0					
ANR	10606827	Identifier	exc		10606772	0					
ANR	10606828	Identifier	error		10606772	1					
ANR	10606829	CallExpression	FT_THROW ( Stack_Overflow )		10606772	1					
ANR	10606830	Callee	FT_THROW		10606772	0					
ANR	10606831	Identifier	FT_THROW		10606772	0					
ANR	10606832	ArgumentList	Stack_Overflow		10606772	1					
ANR	10606833	Argument	Stack_Overflow		10606772	0					
ANR	10606834	Identifier	Stack_Overflow		10606772	0					
ANR	10606835	ReturnStatement	return ;	7563:6:264987:264993	10606772	1	True				
ANR	10606836	IfStatement	if ( coords )		10606772	4					
ANR	10606837	Condition	coords	7566:9:265011:265016	10606772	0	True				
ANR	10606838	Identifier	coords		10606772	0					
ANR	10606839	CompoundStatement		15:4:293:293	10606772	1					
ANR	10606840	ForStatement	for ( i = 0 ; i < num_axes ; i ++ )		10606772	0					
ANR	10606841	ForInit	i = 0 ;	7568:12:265038:265043	10606772	0	True				
ANR	10606842	AssignmentExpression	i = 0		10606772	0		=			
ANR	10606843	Identifier	i		10606772	0					
ANR	10606844	PrimaryExpression	0		10606772	1					
ANR	10606845	Condition	i < num_axes	7568:19:265045:265056	10606772	1	True				
ANR	10606846	RelationalExpression	i < num_axes		10606772	0		<			
ANR	10606847	Identifier	i		10606772	0					
ANR	10606848	Identifier	num_axes		10606772	1					
ANR	10606849	PostIncDecOperationExpression	i ++	7568:33:265059:265061	10606772	2	True				
ANR	10606850	Identifier	i		10606772	0					
ANR	10606851	IncDec	++		10606772	1					
ANR	10606852	ExpressionStatement	args [ i ] = coords [ i ] >> 2	7569:8:265073:265097	10606772	3	True				
ANR	10606853	AssignmentExpression	args [ i ] = coords [ i ] >> 2		10606772	0		=			
ANR	10606854	ArrayIndexing	args [ i ]		10606772	0					
ANR	10606855	Identifier	args		10606772	0					
ANR	10606856	Identifier	i		10606772	1					
ANR	10606857	ShiftExpression	coords [ i ] >> 2		10606772	1		>>			
ANR	10606858	ArrayIndexing	coords [ i ]		10606772	0					
ANR	10606859	Identifier	coords		10606772	0					
ANR	10606860	Identifier	i		10606772	1					
ANR	10606861	PrimaryExpression	2		10606772	1					
ANR	10606862	ElseStatement	else		10606772	0					
ANR	10606863	CompoundStatement		20:4:422:422	10606772	0					
ANR	10606864	ForStatement	for ( i = 0 ; i < num_axes ; i ++ )		10606772	0					
ANR	10606865	ForInit	i = 0 ;	7573:12:265167:265172	10606772	0	True				
ANR	10606866	AssignmentExpression	i = 0		10606772	0		=			
ANR	10606867	Identifier	i		10606772	0					
ANR	10606868	PrimaryExpression	0		10606772	1					
ANR	10606869	Condition	i < num_axes	7573:19:265174:265185	10606772	1	True				
ANR	10606870	RelationalExpression	i < num_axes		10606772	0		<			
ANR	10606871	Identifier	i		10606772	0					
ANR	10606872	Identifier	num_axes		10606772	1					
ANR	10606873	PostIncDecOperationExpression	i ++	7573:33:265188:265190	10606772	2	True				
ANR	10606874	Identifier	i		10606772	0					
ANR	10606875	IncDec	++		10606772	1					
ANR	10606876	ExpressionStatement	args [ i ] = 0	7574:8:265202:265213	10606772	3	True				
ANR	10606877	AssignmentExpression	args [ i ] = 0		10606772	0		=			
ANR	10606878	ArrayIndexing	args [ i ]		10606772	0					
ANR	10606879	Identifier	args		10606772	0					
ANR	10606880	Identifier	i		10606772	1					
ANR	10606881	PrimaryExpression	0		10606772	1					
ANR	10606882	ReturnType	static void		10606772	1					
ANR	10606883	Identifier	Ins_GETVARIATION		10606772	2					
ANR	10606884	ParameterList	"TT_ExecContext exc , FT_Long * args"		10606772	3					
ANR	10606885	Parameter	TT_ExecContext exc	7551:20:264664:264682	10606772	0	True				
ANR	10606886	ParameterType	TT_ExecContext		10606772	0					
ANR	10606887	Identifier	exc		10606772	1					
ANR	10606888	Parameter	FT_Long * args	7552:20:264705:264724	10606772	1	True				
ANR	10606889	ParameterType	FT_Long *		10606772	0					
ANR	10606890	Identifier	args		10606772	1					
ANR	10606891	CFGEntryNode	ENTRY		10606772		True				
ANR	10606892	CFGExitNode	EXIT		10606772		True				
ANR	10606893	Symbol	exc -> face -> blend -> num_axis		10606772						
ANR	10606894	Symbol	exc -> face -> blend		10606772						
ANR	10606895	Symbol	* * exc		10606772						
ANR	10606896	Symbol	* exc		10606772						
ANR	10606897	Symbol	exc -> face		10606772						
ANR	10606898	Symbol	* exc -> face -> blend		10606772						
ANR	10606899	Symbol	* exc -> face		10606772						
ANR	10606900	Symbol	i		10606772						
ANR	10606901	Symbol	* coords		10606772						
ANR	10606902	Symbol	* * * exc		10606772						
ANR	10606903	Symbol	FT_THROW		10606772						
ANR	10606904	Symbol	exc -> face -> blend -> normalizedcoords		10606772						
ANR	10606905	Symbol	* args		10606772						
ANR	10606906	Symbol	args		10606772						
ANR	10606907	Symbol	exc		10606772						
ANR	10606908	Symbol	Stack_Overflow		10606772						
ANR	10606909	Symbol	* i		10606772						
ANR	10606910	Symbol	BOUNDS		10606772						
ANR	10606911	Symbol	* * exc -> face		10606772						
ANR	10606912	Symbol	exc -> top		10606772						
ANR	10606913	Symbol	exc -> error		10606772						
ANR	10606914	Symbol	num_axes		10606772						
ANR	10606915	Symbol	coords		10606772						
ANR	10606916	Symbol	exc -> stackSize		10606772						
ANR	10606917	Function	Ins_GETDATA	7588:2:265931:265999							
ANR	10606918	FunctionDef	Ins_GETDATA (FT_Long * args)		10606917	0					
ANR	10606919	CompoundStatement		7590:2:265977:265999	10606917	0					
ANR	10606920	ExpressionStatement	args [ 0 ] = 17	7591:4:265983:265995	10606917	0	True				
ANR	10606921	AssignmentExpression	args [ 0 ] = 17		10606917	0		=			
ANR	10606922	ArrayIndexing	args [ 0 ]		10606917	0					
ANR	10606923	Identifier	args		10606917	0					
ANR	10606924	PrimaryExpression	0		10606917	1					
ANR	10606925	PrimaryExpression	17		10606917	1					
ANR	10606926	ReturnType	static void		10606917	1					
ANR	10606927	Identifier	Ins_GETDATA		10606917	2					
ANR	10606928	ParameterList	FT_Long * args		10606917	3					
ANR	10606929	Parameter	FT_Long * args	7589:15:265958:265971	10606917	0	True				
ANR	10606930	ParameterType	FT_Long *		10606917	0					
ANR	10606931	Identifier	args		10606917	1					
ANR	10606932	CFGEntryNode	ENTRY		10606917		True				
ANR	10606933	CFGExitNode	EXIT		10606917		True				
ANR	10606934	Symbol	args		10606917						
ANR	10606935	Symbol	* args		10606917						
ANR	10606936	Function	Ins_UNKNOWN	7597:2:266051:266836							
ANR	10606937	FunctionDef	Ins_UNKNOWN (TT_ExecContext exc)		10606936	0					
ANR	10606938	CompoundStatement		7599:2:266102:266836	10606936	0					
ANR	10606939	IdentifierDeclStatement	TT_DefRecord * def = exc -> IDefs ;	7600:4:266108:266141	10606936	0	True				
ANR	10606940	IdentifierDecl	* def = exc -> IDefs		10606936	0					
ANR	10606941	IdentifierDeclType	TT_DefRecord *		10606936	0					
ANR	10606942	Identifier	def		10606936	1					
ANR	10606943	AssignmentExpression	* def = exc -> IDefs		10606936	2		=			
ANR	10606944	Identifier	def		10606936	0					
ANR	10606945	PtrMemberAccess	exc -> IDefs		10606936	1					
ANR	10606946	Identifier	exc		10606936	0					
ANR	10606947	Identifier	IDefs		10606936	1					
ANR	10606948	IdentifierDeclStatement	TT_DefRecord * limit = def + exc -> numIDefs ;	7601:4:266147:266189	10606936	1	True				
ANR	10606949	IdentifierDecl	* limit = def + exc -> numIDefs		10606936	0					
ANR	10606950	IdentifierDeclType	TT_DefRecord *		10606936	0					
ANR	10606951	Identifier	limit		10606936	1					
ANR	10606952	AssignmentExpression	* limit = def + exc -> numIDefs		10606936	2		=			
ANR	10606953	Identifier	limit		10606936	0					
ANR	10606954	AdditiveExpression	def + exc -> numIDefs		10606936	1		+			
ANR	10606955	Identifier	def		10606936	0					
ANR	10606956	PtrMemberAccess	exc -> numIDefs		10606936	1					
ANR	10606957	Identifier	exc		10606936	0					
ANR	10606958	Identifier	numIDefs		10606936	1					
ANR	10606959	ForStatement	for ( ; def < limit ; def ++ )		10606936	2					
ANR	10606960	Condition	def < limit	7604:12:266205:266215	10606936	0	True				
ANR	10606961	RelationalExpression	def < limit		10606936	0		<			
ANR	10606962	Identifier	def		10606936	0					
ANR	10606963	Identifier	limit		10606936	1					
ANR	10606964	PostIncDecOperationExpression	def ++	7604:25:266218:266222	10606936	1	True				
ANR	10606965	Identifier	def		10606936	0					
ANR	10606966	IncDec	++		10606936	1					
ANR	10606967	CompoundStatement		7:4:127:127	10606936	2					
ANR	10606968	IfStatement	if ( ( FT_Byte ) def -> opc == exc -> opcode && def -> active )		10606936	0					
ANR	10606969	Condition	( FT_Byte ) def -> opc == exc -> opcode && def -> active	7606:11:266243:266289	10606936	0	True				
ANR	10606970	AndExpression	( FT_Byte ) def -> opc == exc -> opcode && def -> active		10606936	0		&&			
ANR	10606971	EqualityExpression	( FT_Byte ) def -> opc == exc -> opcode		10606936	0		==			
ANR	10606972	CastExpression	( FT_Byte ) def -> opc		10606936	0					
ANR	10606973	CastTarget	FT_Byte		10606936	0					
ANR	10606974	PtrMemberAccess	def -> opc		10606936	1					
ANR	10606975	Identifier	def		10606936	0					
ANR	10606976	Identifier	opc		10606936	1					
ANR	10606977	PtrMemberAccess	exc -> opcode		10606936	1					
ANR	10606978	Identifier	exc		10606936	0					
ANR	10606979	Identifier	opcode		10606936	1					
ANR	10606980	PtrMemberAccess	def -> active		10606936	1					
ANR	10606981	Identifier	def		10606936	0					
ANR	10606982	Identifier	active		10606936	1					
ANR	10606983	CompoundStatement		10:8:206:223	10606936	1					
ANR	10606984	IdentifierDeclStatement	TT_CallRec * call ;	7608:8:266309:266326	10606936	0	True				
ANR	10606985	IdentifierDecl	* call		10606936	0					
ANR	10606986	IdentifierDeclType	TT_CallRec *		10606936	0					
ANR	10606987	Identifier	call		10606936	1					
ANR	10606988	IfStatement	if ( exc -> callTop >= exc -> callSize )		10606936	1					
ANR	10606989	Condition	exc -> callTop >= exc -> callSize	7611:13:266343:266371	10606936	0	True				
ANR	10606990	RelationalExpression	exc -> callTop >= exc -> callSize		10606936	0		>=			
ANR	10606991	PtrMemberAccess	exc -> callTop		10606936	0					
ANR	10606992	Identifier	exc		10606936	0					
ANR	10606993	Identifier	callTop		10606936	1					
ANR	10606994	PtrMemberAccess	exc -> callSize		10606936	1					
ANR	10606995	Identifier	exc		10606936	0					
ANR	10606996	Identifier	callSize		10606936	1					
ANR	10606997	CompoundStatement		14:8:280:280	10606936	1					
ANR	10606998	ExpressionStatement	exc -> error = FT_THROW ( Stack_Overflow )	7613:10:266395:266434	10606936	0	True				
ANR	10606999	AssignmentExpression	exc -> error = FT_THROW ( Stack_Overflow )		10606936	0		=			
ANR	10607000	PtrMemberAccess	exc -> error		10606936	0					
ANR	10607001	Identifier	exc		10606936	0					
ANR	10607002	Identifier	error		10606936	1					
ANR	10607003	CallExpression	FT_THROW ( Stack_Overflow )		10606936	1					
ANR	10607004	Callee	FT_THROW		10606936	0					
ANR	10607005	Identifier	FT_THROW		10606936	0					
ANR	10607006	ArgumentList	Stack_Overflow		10606936	1					
ANR	10607007	Argument	Stack_Overflow		10606936	0					
ANR	10607008	Identifier	Stack_Overflow		10606936	0					
ANR	10607009	ReturnStatement	return ;	7614:10:266446:266452	10606936	1	True				
ANR	10607010	ExpressionStatement	call = exc -> callStack + exc -> callTop ++	7617:8:266473:266511	10606936	2	True				
ANR	10607011	AssignmentExpression	call = exc -> callStack + exc -> callTop ++		10606936	0		=			
ANR	10607012	Identifier	call		10606936	0					
ANR	10607013	AdditiveExpression	exc -> callStack + exc -> callTop ++		10606936	1		+			
ANR	10607014	PtrMemberAccess	exc -> callStack		10606936	0					
ANR	10607015	Identifier	exc		10606936	0					
ANR	10607016	Identifier	callStack		10606936	1					
ANR	10607017	PostIncDecOperationExpression	exc -> callTop ++		10606936	1					
ANR	10607018	PtrMemberAccess	exc -> callTop		10606936	0					
ANR	10607019	Identifier	exc		10606936	0					
ANR	10607020	Identifier	callTop		10606936	1					
ANR	10607021	IncDec	++		10606936	1					
ANR	10607022	ExpressionStatement	call -> Caller_Range = exc -> curRange	7619:8:266522:266556	10606936	3	True				
ANR	10607023	AssignmentExpression	call -> Caller_Range = exc -> curRange		10606936	0		=			
ANR	10607024	PtrMemberAccess	call -> Caller_Range		10606936	0					
ANR	10607025	Identifier	call		10606936	0					
ANR	10607026	Identifier	Caller_Range		10606936	1					
ANR	10607027	PtrMemberAccess	exc -> curRange		10606936	1					
ANR	10607028	Identifier	exc		10606936	0					
ANR	10607029	Identifier	curRange		10606936	1					
ANR	10607030	ExpressionStatement	call -> Caller_IP = exc -> IP + 1	7620:8:266566:266598	10606936	4	True				
ANR	10607031	AssignmentExpression	call -> Caller_IP = exc -> IP + 1		10606936	0		=			
ANR	10607032	PtrMemberAccess	call -> Caller_IP		10606936	0					
ANR	10607033	Identifier	call		10606936	0					
ANR	10607034	Identifier	Caller_IP		10606936	1					
ANR	10607035	AdditiveExpression	exc -> IP + 1		10606936	1		+			
ANR	10607036	PtrMemberAccess	exc -> IP		10606936	0					
ANR	10607037	Identifier	exc		10606936	0					
ANR	10607038	Identifier	IP		10606936	1					
ANR	10607039	PrimaryExpression	1		10606936	1					
ANR	10607040	ExpressionStatement	call -> Cur_Count = 1	7621:8:266608:266630	10606936	5	True				
ANR	10607041	AssignmentExpression	call -> Cur_Count = 1		10606936	0		=			
ANR	10607042	PtrMemberAccess	call -> Cur_Count		10606936	0					
ANR	10607043	Identifier	call		10606936	0					
ANR	10607044	Identifier	Cur_Count		10606936	1					
ANR	10607045	PrimaryExpression	1		10606936	1					
ANR	10607046	ExpressionStatement	call -> Def = def	7622:8:266640:266664	10606936	6	True				
ANR	10607047	AssignmentExpression	call -> Def = def		10606936	0		=			
ANR	10607048	PtrMemberAccess	call -> Def		10606936	0					
ANR	10607049	Identifier	call		10606936	0					
ANR	10607050	Identifier	Def		10606936	1					
ANR	10607051	Identifier	def		10606936	1					
ANR	10607052	ExpressionStatement	"Ins_Goto_CodeRange ( exc , def -> range , def -> start )"	7624:8:266675:266724	10606936	7	True				
ANR	10607053	CallExpression	"Ins_Goto_CodeRange ( exc , def -> range , def -> start )"		10606936	0					
ANR	10607054	Callee	Ins_Goto_CodeRange		10606936	0					
ANR	10607055	Identifier	Ins_Goto_CodeRange		10606936	0					
ANR	10607056	ArgumentList	exc		10606936	1					
ANR	10607057	Argument	exc		10606936	0					
ANR	10607058	Identifier	exc		10606936	0					
ANR	10607059	Argument	def -> range		10606936	1					
ANR	10607060	PtrMemberAccess	def -> range		10606936	0					
ANR	10607061	Identifier	def		10606936	0					
ANR	10607062	Identifier	range		10606936	1					
ANR	10607063	Argument	def -> start		10606936	2					
ANR	10607064	PtrMemberAccess	def -> start		10606936	0					
ANR	10607065	Identifier	def		10606936	0					
ANR	10607066	Identifier	start		10606936	1					
ANR	10607067	ExpressionStatement	exc -> step_ins = FALSE	7626:8:266735:266756	10606936	8	True				
ANR	10607068	AssignmentExpression	exc -> step_ins = FALSE		10606936	0		=			
ANR	10607069	PtrMemberAccess	exc -> step_ins		10606936	0					
ANR	10607070	Identifier	exc		10606936	0					
ANR	10607071	Identifier	step_ins		10606936	1					
ANR	10607072	Identifier	FALSE		10606936	1					
ANR	10607073	ReturnStatement	return ;	7627:8:266766:266772	10606936	9	True				
ANR	10607074	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Opcode )	7631:4:266793:266832	10606936	3	True				
ANR	10607075	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Opcode )		10606936	0		=			
ANR	10607076	PtrMemberAccess	exc -> error		10606936	0					
ANR	10607077	Identifier	exc		10606936	0					
ANR	10607078	Identifier	error		10606936	1					
ANR	10607079	CallExpression	FT_THROW ( Invalid_Opcode )		10606936	1					
ANR	10607080	Callee	FT_THROW		10606936	0					
ANR	10607081	Identifier	FT_THROW		10606936	0					
ANR	10607082	ArgumentList	Invalid_Opcode		10606936	1					
ANR	10607083	Argument	Invalid_Opcode		10606936	0					
ANR	10607084	Identifier	Invalid_Opcode		10606936	0					
ANR	10607085	ReturnType	static void		10606936	1					
ANR	10607086	Identifier	Ins_UNKNOWN		10606936	2					
ANR	10607087	ParameterList	TT_ExecContext exc		10606936	3					
ANR	10607088	Parameter	TT_ExecContext exc	7598:15:266078:266096	10606936	0	True				
ANR	10607089	ParameterType	TT_ExecContext		10606936	0					
ANR	10607090	Identifier	exc		10606936	1					
ANR	10607091	CFGEntryNode	ENTRY		10606936		True				
ANR	10607092	CFGExitNode	EXIT		10606936		True				
ANR	10607093	Symbol	def -> start		10606936						
ANR	10607094	Symbol	def		10606936						
ANR	10607095	Symbol	* exc		10606936						
ANR	10607096	Symbol	* call		10606936						
ANR	10607097	Symbol	exc -> IDefs		10606936						
ANR	10607098	Symbol	* def		10606936						
ANR	10607099	Symbol	exc		10606936						
ANR	10607100	Symbol	Stack_Overflow		10606936						
ANR	10607101	Symbol	call -> Def		10606936						
ANR	10607102	Symbol	limit		10606936						
ANR	10607103	Symbol	exc -> callSize		10606936						
ANR	10607104	Symbol	exc -> error		10606936						
ANR	10607105	Symbol	def -> opc		10606936						
ANR	10607106	Symbol	def -> range		10606936						
ANR	10607107	Symbol	exc -> IP		10606936						
ANR	10607108	Symbol	exc -> numIDefs		10606936						
ANR	10607109	Symbol	def -> active		10606936						
ANR	10607110	Symbol	exc -> curRange		10606936						
ANR	10607111	Symbol	exc -> step_ins		10606936						
ANR	10607112	Symbol	FT_THROW		10606936						
ANR	10607113	Symbol	call		10606936						
ANR	10607114	Symbol	exc -> callTop		10606936						
ANR	10607115	Symbol	Invalid_Opcode		10606936						
ANR	10607116	Symbol	FALSE		10606936						
ANR	10607117	Symbol	exc -> opcode		10606936						
ANR	10607118	Symbol	call -> Caller_Range		10606936						
ANR	10607119	Symbol	call -> Caller_IP		10606936						
ANR	10607120	Symbol	call -> Cur_Count		10606936						
ANR	10607121	Symbol	exc -> callStack		10606936						
ANR	10607122	Function	TT_RunIns	7668:2:269096:291856							
ANR	10607123	FunctionDef	TT_RunIns (TT_ExecContext exc)		10607122	0					
ANR	10607124	CompoundStatement		7669:2:269131:291856	10607122	0					
ANR	10607125	IdentifierDeclStatement	FT_ULong ins_counter = 0 ;	7670:4:269137:269163	10607122	0	True				
ANR	10607126	IdentifierDecl	ins_counter = 0		10607122	0					
ANR	10607127	IdentifierDeclType	FT_ULong		10607122	0					
ANR	10607128	Identifier	ins_counter		10607122	1					
ANR	10607129	AssignmentExpression	ins_counter = 0		10607122	2		=			
ANR	10607130	Identifier	ins_counter		10607122	0					
ANR	10607131	PrimaryExpression	0		10607122	1					
ANR	10607132	IdentifierDeclStatement	FT_ULong num_twilight_points ;	7671:4:269206:269236	10607122	1	True				
ANR	10607133	IdentifierDecl	num_twilight_points		10607122	0					
ANR	10607134	IdentifierDeclType	FT_ULong		10607122	0					
ANR	10607135	Identifier	num_twilight_points		10607122	1					
ANR	10607136	IdentifierDeclStatement	FT_UShort i ;	7672:4:269242:269254	10607122	2	True				
ANR	10607137	IdentifierDecl	i		10607122	0					
ANR	10607138	IdentifierDeclType	FT_UShort		10607122	0					
ANR	10607139	Identifier	i		10607122	1					
ANR	10607140	Statement	FT_Byte	7675:4:269307:269313	10607122	3	True				
ANR	10607141	Statement	opcode_pattern	7675:15:269318:269331	10607122	4	True				
ANR	10607142	Statement	[	7675:29:269332:269332	10607122	5	True				
ANR	10607143	Statement	1	7675:30:269333:269333	10607122	6	True				
ANR	10607144	Statement	]	7675:31:269334:269334	10607122	7	True				
ANR	10607145	Statement	[	7675:32:269335:269335	10607122	8	True				
ANR	10607146	Statement	2	7675:33:269336:269336	10607122	9	True				
ANR	10607147	Statement	]	7675:34:269337:269337	10607122	10	True				
ANR	10607148	Statement	=	7675:36:269339:269339	10607122	11	True				
ANR	10607149	CompoundStatement		7:38:209:209	10607122	12					
ANR	10607150	CompoundStatement		9:18:275:275	10607122	0					
ANR	10607151	Statement	0x06	7678:20:269429:269432	10607122	0	True				
ANR	10607152	Statement	","	7678:24:269433:269433	10607122	1	True				
ANR	10607153	Statement	0x7D	7679:20:269469:269472	10607122	2	True				
ANR	10607154	Statement	","	7679:24:269473:269473	10607122	3	True				
ANR	10607155	Statement	","	7680:19:269508:269508	10607122	1	True				
ANR	10607156	ExpressionStatement		7681:17:269527:269527	10607122	13	True				
ANR	10607157	IdentifierDeclStatement	FT_UShort opcode_patterns = 1 ;	7682:4:269533:269565	10607122	14	True				
ANR	10607158	IdentifierDecl	opcode_patterns = 1		10607122	0					
ANR	10607159	IdentifierDeclType	FT_UShort		10607122	0					
ANR	10607160	Identifier	opcode_patterns		10607122	1					
ANR	10607161	AssignmentExpression	opcode_patterns = 1		10607122	2		=			
ANR	10607162	Identifier	opcode_patterns		10607122	0					
ANR	10607163	PrimaryExpression	1		10607122	1					
ANR	10607164	IdentifierDeclStatement	FT_UShort opcode_pointer [ 1 ] = { 0 } ;	7683:4:269571:269607	10607122	15	True				
ANR	10607165	IdentifierDecl	opcode_pointer [ 1 ] = { 0 }		10607122	0					
ANR	10607166	IdentifierDeclType	FT_UShort [ 1 ]		10607122	0					
ANR	10607167	Identifier	opcode_pointer		10607122	1					
ANR	10607168	PrimaryExpression	1		10607122	2					
ANR	10607169	AssignmentExpression	opcode_pointer [ 1 ] = { 0 }		10607122	3		=			
ANR	10607170	Identifier	opcode_pointer		10607122	0					
ANR	10607171	InitializerList	0		10607122	1					
ANR	10607172	PrimaryExpression	0		10607122	0					
ANR	10607173	IdentifierDeclStatement	FT_UShort opcode_size [ 1 ] = { 1 } ;	7684:4:269613:269649	10607122	16	True				
ANR	10607174	IdentifierDecl	opcode_size [ 1 ] = { 1 }		10607122	0					
ANR	10607175	IdentifierDeclType	FT_UShort [ 1 ]		10607122	0					
ANR	10607176	Identifier	opcode_size		10607122	1					
ANR	10607177	PrimaryExpression	1		10607122	2					
ANR	10607178	AssignmentExpression	opcode_size [ 1 ] = { 1 }		10607122	3		=			
ANR	10607179	Identifier	opcode_size		10607122	0					
ANR	10607180	InitializerList	1		10607122	1					
ANR	10607181	PrimaryExpression	1		10607122	0					
ANR	10607182	ExpressionStatement	exc -> iup_called = FALSE	7689:4:269755:269778	10607122	17	True				
ANR	10607183	AssignmentExpression	exc -> iup_called = FALSE		10607122	0		=			
ANR	10607184	PtrMemberAccess	exc -> iup_called		10607122	0					
ANR	10607185	Identifier	exc		10607122	0					
ANR	10607186	Identifier	iup_called		10607122	1					
ANR	10607187	Identifier	FALSE		10607122	1					
ANR	10607188	IfStatement	if ( SUBPIXEL_HINTING_MINIMAL && exc -> subpixel_hinting_lean && ! FT_IS_TRICKY ( & exc -> face -> root ) )		10607122	18					
ANR	10607189	Condition	SUBPIXEL_HINTING_MINIMAL && exc -> subpixel_hinting_lean && ! FT_IS_TRICKY ( & exc -> face -> root )	7706:9:270395:270519	10607122	0	True				
ANR	10607190	AndExpression	SUBPIXEL_HINTING_MINIMAL && exc -> subpixel_hinting_lean && ! FT_IS_TRICKY ( & exc -> face -> root )		10607122	0		&&			
ANR	10607191	Identifier	SUBPIXEL_HINTING_MINIMAL		10607122	0					
ANR	10607192	AndExpression	exc -> subpixel_hinting_lean && ! FT_IS_TRICKY ( & exc -> face -> root )		10607122	1		&&			
ANR	10607193	PtrMemberAccess	exc -> subpixel_hinting_lean		10607122	0					
ANR	10607194	Identifier	exc		10607122	0					
ANR	10607195	Identifier	subpixel_hinting_lean		10607122	1					
ANR	10607196	UnaryOperationExpression	! FT_IS_TRICKY ( & exc -> face -> root )		10607122	1					
ANR	10607197	UnaryOperator	!		10607122	0					
ANR	10607198	CallExpression	FT_IS_TRICKY ( & exc -> face -> root )		10607122	1					
ANR	10607199	Callee	FT_IS_TRICKY		10607122	0					
ANR	10607200	Identifier	FT_IS_TRICKY		10607122	0					
ANR	10607201	ArgumentList	& exc -> face -> root		10607122	1					
ANR	10607202	Argument	& exc -> face -> root		10607122	0					
ANR	10607203	UnaryOperationExpression	& exc -> face -> root		10607122	0					
ANR	10607204	UnaryOperator	&		10607122	0					
ANR	10607205	PtrMemberAccess	exc -> face -> root		10607122	1					
ANR	10607206	PtrMemberAccess	exc -> face		10607122	0					
ANR	10607207	Identifier	exc		10607122	0					
ANR	10607208	Identifier	face		10607122	1					
ANR	10607209	Identifier	root		10607122	1					
ANR	10607210	ExpressionStatement	exc -> backward_compatibility = ! ( exc -> GS . instruct_control & 4 )	7709:6:270529:270592	10607122	1	True				
ANR	10607211	AssignmentExpression	exc -> backward_compatibility = ! ( exc -> GS . instruct_control & 4 )		10607122	0		=			
ANR	10607212	PtrMemberAccess	exc -> backward_compatibility		10607122	0					
ANR	10607213	Identifier	exc		10607122	0					
ANR	10607214	Identifier	backward_compatibility		10607122	1					
ANR	10607215	UnaryOperationExpression	! ( exc -> GS . instruct_control & 4 )		10607122	1					
ANR	10607216	UnaryOperator	!		10607122	0					
ANR	10607217	BitAndExpression	exc -> GS . instruct_control & 4		10607122	1		&			
ANR	10607218	MemberAccess	exc -> GS . instruct_control		10607122	0					
ANR	10607219	PtrMemberAccess	exc -> GS		10607122	0					
ANR	10607220	Identifier	exc		10607122	0					
ANR	10607221	Identifier	GS		10607122	1					
ANR	10607222	Identifier	instruct_control		10607122	1					
ANR	10607223	PrimaryExpression	4		10607122	1					
ANR	10607224	ElseStatement	else		10607122	0					
ANR	10607225	ExpressionStatement	exc -> backward_compatibility = FALSE	7711:6:270609:270644	10607122	0	True				
ANR	10607226	AssignmentExpression	exc -> backward_compatibility = FALSE		10607122	0		=			
ANR	10607227	PtrMemberAccess	exc -> backward_compatibility		10607122	0					
ANR	10607228	Identifier	exc		10607122	0					
ANR	10607229	Identifier	backward_compatibility		10607122	1					
ANR	10607230	Identifier	FALSE		10607122	1					
ANR	10607231	ExpressionStatement	exc -> iupx_called = FALSE	7713:4:270651:270675	10607122	19	True				
ANR	10607232	AssignmentExpression	exc -> iupx_called = FALSE		10607122	0		=			
ANR	10607233	PtrMemberAccess	exc -> iupx_called		10607122	0					
ANR	10607234	Identifier	exc		10607122	0					
ANR	10607235	Identifier	iupx_called		10607122	1					
ANR	10607236	Identifier	FALSE		10607122	1					
ANR	10607237	ExpressionStatement	exc -> iupy_called = FALSE	7714:4:270681:270705	10607122	20	True				
ANR	10607238	AssignmentExpression	exc -> iupy_called = FALSE		10607122	0		=			
ANR	10607239	PtrMemberAccess	exc -> iupy_called		10607122	0					
ANR	10607240	Identifier	exc		10607122	0					
ANR	10607241	Identifier	iupy_called		10607122	1					
ANR	10607242	Identifier	FALSE		10607122	1					
ANR	10607243	ExpressionStatement	"num_twilight_points = FT_MAX ( 30 , 2 * ( exc -> pts . n_points + exc -> cvtSize ) )"	7719:4:270865:270975	10607122	21	True				
ANR	10607244	AssignmentExpression	"num_twilight_points = FT_MAX ( 30 , 2 * ( exc -> pts . n_points + exc -> cvtSize ) )"		10607122	0		=			
ANR	10607245	Identifier	num_twilight_points		10607122	0					
ANR	10607246	CallExpression	"FT_MAX ( 30 , 2 * ( exc -> pts . n_points + exc -> cvtSize ) )"		10607122	1					
ANR	10607247	Callee	FT_MAX		10607122	0					
ANR	10607248	Identifier	FT_MAX		10607122	0					
ANR	10607249	ArgumentList	30		10607122	1					
ANR	10607250	Argument	30		10607122	0					
ANR	10607251	PrimaryExpression	30		10607122	0					
ANR	10607252	Argument	2 * ( exc -> pts . n_points + exc -> cvtSize )		10607122	1					
ANR	10607253	MultiplicativeExpression	2 * ( exc -> pts . n_points + exc -> cvtSize )		10607122	0		*			
ANR	10607254	PrimaryExpression	2		10607122	0					
ANR	10607255	AdditiveExpression	exc -> pts . n_points + exc -> cvtSize		10607122	1		+			
ANR	10607256	MemberAccess	exc -> pts . n_points		10607122	0					
ANR	10607257	PtrMemberAccess	exc -> pts		10607122	0					
ANR	10607258	Identifier	exc		10607122	0					
ANR	10607259	Identifier	pts		10607122	1					
ANR	10607260	Identifier	n_points		10607122	1					
ANR	10607261	PtrMemberAccess	exc -> cvtSize		10607122	1					
ANR	10607262	Identifier	exc		10607122	0					
ANR	10607263	Identifier	cvtSize		10607122	1					
ANR	10607264	IfStatement	if ( exc -> twilight . n_points > num_twilight_points )		10607122	22					
ANR	10607265	Condition	exc -> twilight . n_points > num_twilight_points	7721:9:270986:271029	10607122	0	True				
ANR	10607266	RelationalExpression	exc -> twilight . n_points > num_twilight_points		10607122	0		>			
ANR	10607267	MemberAccess	exc -> twilight . n_points		10607122	0					
ANR	10607268	PtrMemberAccess	exc -> twilight		10607122	0					
ANR	10607269	Identifier	exc		10607122	0					
ANR	10607270	Identifier	twilight		10607122	1					
ANR	10607271	Identifier	n_points		10607122	1					
ANR	10607272	Identifier	num_twilight_points		10607122	1					
ANR	10607273	CompoundStatement		54:4:1905:1905	10607122	1					
ANR	10607274	IfStatement	if ( num_twilight_points > 0xFFFFU )		10607122	0					
ANR	10607275	Condition	num_twilight_points > 0xFFFFU	7723:11:271050:271078	10607122	0	True				
ANR	10607276	RelationalExpression	num_twilight_points > 0xFFFFU		10607122	0		>			
ANR	10607277	Identifier	num_twilight_points		10607122	0					
ANR	10607278	PrimaryExpression	0xFFFFU		10607122	1					
ANR	10607279	ExpressionStatement	num_twilight_points = 0xFFFFU	7724:8:271090:271119	10607122	1	True				
ANR	10607280	AssignmentExpression	num_twilight_points = 0xFFFFU		10607122	0		=			
ANR	10607281	Identifier	num_twilight_points		10607122	0					
ANR	10607282	PrimaryExpression	0xFFFFU		10607122	1					
ANR	10607283	Statement	FT_TRACE5	7726:6:271128:271136	10607122	1	True				
ANR	10607284	Statement	(	7726:15:271137:271137	10607122	2	True				
ANR	10607285	Statement	(	7726:16:271138:271138	10607122	3	True				
ANR	10607286	Statement	"""TT_RunIns: Resetting number of twilight points\\n"""	7726:18:271140:271189	10607122	4	True				
ANR	10607287	Statement	"""           from %d to the more reasonable value %d\\n"""	7727:18:271209:271262	10607122	5	True				
ANR	10607288	Statement	","	7727:72:271263:271263	10607122	6	True				
ANR	10607289	Statement	exc	7728:18:271283:271285	10607122	7	True				
ANR	10607290	Statement	->	7728:21:271286:271287	10607122	8	True				
ANR	10607291	Statement	twilight	7728:23:271288:271295	10607122	9	True				
ANR	10607292	Statement	.	7728:31:271296:271296	10607122	10	True				
ANR	10607293	Statement	n_points	7728:32:271297:271304	10607122	11	True				
ANR	10607294	Statement	","	7728:40:271305:271305	10607122	12	True				
ANR	10607295	Statement	num_twilight_points	7729:18:271325:271343	10607122	13	True				
ANR	10607296	Statement	)	7729:38:271345:271345	10607122	14	True				
ANR	10607297	Statement	)	7729:39:271346:271346	10607122	15	True				
ANR	10607298	ExpressionStatement		7729:40:271347:271347	10607122	16	True				
ANR	10607299	ExpressionStatement	exc -> twilight . n_points = ( FT_UShort ) num_twilight_points	7730:6:271355:271410	10607122	17	True				
ANR	10607300	AssignmentExpression	exc -> twilight . n_points = ( FT_UShort ) num_twilight_points		10607122	0		=			
ANR	10607301	MemberAccess	exc -> twilight . n_points		10607122	0					
ANR	10607302	PtrMemberAccess	exc -> twilight		10607122	0					
ANR	10607303	Identifier	exc		10607122	0					
ANR	10607304	Identifier	twilight		10607122	1					
ANR	10607305	Identifier	n_points		10607122	1					
ANR	10607306	CastExpression	( FT_UShort ) num_twilight_points		10607122	1					
ANR	10607307	CastTarget	FT_UShort		10607122	0					
ANR	10607308	Identifier	num_twilight_points		10607122	1					
ANR	10607309	ExpressionStatement	exc -> loopcall_counter = 0	7743:4:272173:272198	10607122	23	True				
ANR	10607310	AssignmentExpression	exc -> loopcall_counter = 0		10607122	0		=			
ANR	10607311	PtrMemberAccess	exc -> loopcall_counter		10607122	0					
ANR	10607312	Identifier	exc		10607122	0					
ANR	10607313	Identifier	loopcall_counter		10607122	1					
ANR	10607314	PrimaryExpression	0		10607122	1					
ANR	10607315	ExpressionStatement	exc -> neg_jump_counter = 0	7744:4:272204:272229	10607122	24	True				
ANR	10607316	AssignmentExpression	exc -> neg_jump_counter = 0		10607122	0		=			
ANR	10607317	PtrMemberAccess	exc -> neg_jump_counter		10607122	0					
ANR	10607318	Identifier	exc		10607122	0					
ANR	10607319	Identifier	neg_jump_counter		10607122	1					
ANR	10607320	PrimaryExpression	0		10607122	1					
ANR	10607321	IfStatement	if ( exc -> pts . n_points )		10607122	25					
ANR	10607322	Condition	exc -> pts . n_points	7747:9:272285:272301	10607122	0	True				
ANR	10607323	MemberAccess	exc -> pts . n_points		10607122	0					
ANR	10607324	PtrMemberAccess	exc -> pts		10607122	0					
ANR	10607325	Identifier	exc		10607122	0					
ANR	10607326	Identifier	pts		10607122	1					
ANR	10607327	Identifier	n_points		10607122	1					
ANR	10607328	ExpressionStatement	"exc -> loopcall_counter_max = FT_MAX ( 50 , 10 * exc -> pts . n_points ) + FT_MAX ( 50 , exc -> cvtSize / 10 )"	7748:6:272311:272527	10607122	1	True				
ANR	10607329	AssignmentExpression	"exc -> loopcall_counter_max = FT_MAX ( 50 , 10 * exc -> pts . n_points ) + FT_MAX ( 50 , exc -> cvtSize / 10 )"		10607122	0		=			
ANR	10607330	PtrMemberAccess	exc -> loopcall_counter_max		10607122	0					
ANR	10607331	Identifier	exc		10607122	0					
ANR	10607332	Identifier	loopcall_counter_max		10607122	1					
ANR	10607333	AdditiveExpression	"FT_MAX ( 50 , 10 * exc -> pts . n_points ) + FT_MAX ( 50 , exc -> cvtSize / 10 )"		10607122	1		+			
ANR	10607334	CallExpression	"FT_MAX ( 50 , 10 * exc -> pts . n_points )"		10607122	0					
ANR	10607335	Callee	FT_MAX		10607122	0					
ANR	10607336	Identifier	FT_MAX		10607122	0					
ANR	10607337	ArgumentList	50		10607122	1					
ANR	10607338	Argument	50		10607122	0					
ANR	10607339	PrimaryExpression	50		10607122	0					
ANR	10607340	Argument	10 * exc -> pts . n_points		10607122	1					
ANR	10607341	MultiplicativeExpression	10 * exc -> pts . n_points		10607122	0		*			
ANR	10607342	PrimaryExpression	10		10607122	0					
ANR	10607343	MemberAccess	exc -> pts . n_points		10607122	1					
ANR	10607344	PtrMemberAccess	exc -> pts		10607122	0					
ANR	10607345	Identifier	exc		10607122	0					
ANR	10607346	Identifier	pts		10607122	1					
ANR	10607347	Identifier	n_points		10607122	1					
ANR	10607348	CallExpression	"FT_MAX ( 50 , exc -> cvtSize / 10 )"		10607122	1					
ANR	10607349	Callee	FT_MAX		10607122	0					
ANR	10607350	Identifier	FT_MAX		10607122	0					
ANR	10607351	ArgumentList	50		10607122	1					
ANR	10607352	Argument	50		10607122	0					
ANR	10607353	PrimaryExpression	50		10607122	0					
ANR	10607354	Argument	exc -> cvtSize / 10		10607122	1					
ANR	10607355	MultiplicativeExpression	exc -> cvtSize / 10		10607122	0		/			
ANR	10607356	PtrMemberAccess	exc -> cvtSize		10607122	0					
ANR	10607357	Identifier	exc		10607122	0					
ANR	10607358	Identifier	cvtSize		10607122	1					
ANR	10607359	PrimaryExpression	10		10607122	1					
ANR	10607360	ElseStatement	else		10607122	0					
ANR	10607361	ExpressionStatement	exc -> loopcall_counter_max = 300 + 8 * exc -> cvtSize	7753:6:272544:272594	10607122	0	True				
ANR	10607362	AssignmentExpression	exc -> loopcall_counter_max = 300 + 8 * exc -> cvtSize		10607122	0		=			
ANR	10607363	PtrMemberAccess	exc -> loopcall_counter_max		10607122	0					
ANR	10607364	Identifier	exc		10607122	0					
ANR	10607365	Identifier	loopcall_counter_max		10607122	1					
ANR	10607366	AdditiveExpression	300 + 8 * exc -> cvtSize		10607122	1		+			
ANR	10607367	PrimaryExpression	300		10607122	0					
ANR	10607368	MultiplicativeExpression	8 * exc -> cvtSize		10607122	1		*			
ANR	10607369	PrimaryExpression	8		10607122	0					
ANR	10607370	PtrMemberAccess	exc -> cvtSize		10607122	1					
ANR	10607371	Identifier	exc		10607122	0					
ANR	10607372	Identifier	cvtSize		10607122	1					
ANR	10607373	IfStatement	if ( exc -> loopcall_counter_max > 100 * ( FT_ULong ) exc -> face -> root . num_glyphs )		10607122	26					
ANR	10607374	Condition	exc -> loopcall_counter_max > 100 * ( FT_ULong ) exc -> face -> root . num_glyphs	7757:9:272752:272830	10607122	0	True				
ANR	10607375	RelationalExpression	exc -> loopcall_counter_max > 100 * ( FT_ULong ) exc -> face -> root . num_glyphs		10607122	0		>			
ANR	10607376	PtrMemberAccess	exc -> loopcall_counter_max		10607122	0					
ANR	10607377	Identifier	exc		10607122	0					
ANR	10607378	Identifier	loopcall_counter_max		10607122	1					
ANR	10607379	MultiplicativeExpression	100 * ( FT_ULong ) exc -> face -> root . num_glyphs		10607122	1		*			
ANR	10607380	PrimaryExpression	100		10607122	0					
ANR	10607381	CastExpression	( FT_ULong ) exc -> face -> root . num_glyphs		10607122	1					
ANR	10607382	CastTarget	FT_ULong		10607122	0					
ANR	10607383	MemberAccess	exc -> face -> root . num_glyphs		10607122	1					
ANR	10607384	PtrMemberAccess	exc -> face -> root		10607122	0					
ANR	10607385	PtrMemberAccess	exc -> face		10607122	0					
ANR	10607386	Identifier	exc		10607122	0					
ANR	10607387	Identifier	face		10607122	1					
ANR	10607388	Identifier	root		10607122	1					
ANR	10607389	Identifier	num_glyphs		10607122	1					
ANR	10607390	ExpressionStatement	exc -> loopcall_counter_max = 100 * ( FT_ULong ) exc -> face -> root . num_glyphs	7759:6:272840:272910	10607122	1	True				
ANR	10607391	AssignmentExpression	exc -> loopcall_counter_max = 100 * ( FT_ULong ) exc -> face -> root . num_glyphs		10607122	0		=			
ANR	10607392	PtrMemberAccess	exc -> loopcall_counter_max		10607122	0					
ANR	10607393	Identifier	exc		10607122	0					
ANR	10607394	Identifier	loopcall_counter_max		10607122	1					
ANR	10607395	MultiplicativeExpression	100 * ( FT_ULong ) exc -> face -> root . num_glyphs		10607122	1		*			
ANR	10607396	PrimaryExpression	100		10607122	0					
ANR	10607397	CastExpression	( FT_ULong ) exc -> face -> root . num_glyphs		10607122	1					
ANR	10607398	CastTarget	FT_ULong		10607122	0					
ANR	10607399	MemberAccess	exc -> face -> root . num_glyphs		10607122	1					
ANR	10607400	PtrMemberAccess	exc -> face -> root		10607122	0					
ANR	10607401	PtrMemberAccess	exc -> face		10607122	0					
ANR	10607402	Identifier	exc		10607122	0					
ANR	10607403	Identifier	face		10607122	1					
ANR	10607404	Identifier	root		10607122	1					
ANR	10607405	Identifier	num_glyphs		10607122	1					
ANR	10607406	Statement	FT_TRACE5	7761:4:272917:272925	10607122	27	True				
ANR	10607407	Statement	(	7761:13:272926:272926	10607122	28	True				
ANR	10607408	Statement	(	7761:14:272927:272927	10607122	29	True				
ANR	10607409	Statement	"""TT_RunIns: Limiting total number of loops in LOOPCALL"""	7761:16:272929:272983	10607122	30	True				
ANR	10607410	Statement	""" to %d\\n"""	7762:16:273001:273010	10607122	31	True				
ANR	10607411	Statement	","	7762:26:273011:273011	10607122	32	True				
ANR	10607412	Statement	exc	7762:28:273013:273015	10607122	33	True				
ANR	10607413	Statement	->	7762:31:273016:273017	10607122	34	True				
ANR	10607414	Statement	loopcall_counter_max	7762:33:273018:273037	10607122	35	True				
ANR	10607415	Statement	)	7762:54:273039:273039	10607122	36	True				
ANR	10607416	Statement	)	7762:55:273040:273040	10607122	37	True				
ANR	10607417	ExpressionStatement		7762:56:273041:273041	10607122	38	True				
ANR	10607418	ExpressionStatement	exc -> neg_jump_counter_max = exc -> loopcall_counter_max	7764:4:273048:273101	10607122	39	True				
ANR	10607419	AssignmentExpression	exc -> neg_jump_counter_max = exc -> loopcall_counter_max		10607122	0		=			
ANR	10607420	PtrMemberAccess	exc -> neg_jump_counter_max		10607122	0					
ANR	10607421	Identifier	exc		10607122	0					
ANR	10607422	Identifier	neg_jump_counter_max		10607122	1					
ANR	10607423	PtrMemberAccess	exc -> loopcall_counter_max		10607122	1					
ANR	10607424	Identifier	exc		10607122	0					
ANR	10607425	Identifier	loopcall_counter_max		10607122	1					
ANR	10607426	Statement	FT_TRACE5	7765:4:273107:273115	10607122	40	True				
ANR	10607427	Statement	(	7765:13:273116:273116	10607122	41	True				
ANR	10607428	Statement	(	7765:14:273117:273117	10607122	42	True				
ANR	10607429	Statement	"""TT_RunIns: Limiting total number of backward jumps"""	7765:16:273119:273170	10607122	43	True				
ANR	10607430	Statement	""" to %d\\n"""	7766:16:273188:273197	10607122	44	True				
ANR	10607431	Statement	","	7766:26:273198:273198	10607122	45	True				
ANR	10607432	Statement	exc	7766:28:273200:273202	10607122	46	True				
ANR	10607433	Statement	->	7766:31:273203:273204	10607122	47	True				
ANR	10607434	Statement	neg_jump_counter_max	7766:33:273205:273224	10607122	48	True				
ANR	10607435	Statement	)	7766:54:273226:273226	10607122	49	True				
ANR	10607436	Statement	)	7766:55:273227:273227	10607122	50	True				
ANR	10607437	ExpressionStatement		7766:56:273228:273228	10607122	51	True				
ANR	10607438	ExpressionStatement	exc -> tt_metrics . ratio = 0	7769:4:273272:273297	10607122	52	True				
ANR	10607439	AssignmentExpression	exc -> tt_metrics . ratio = 0		10607122	0		=			
ANR	10607440	MemberAccess	exc -> tt_metrics . ratio		10607122	0					
ANR	10607441	PtrMemberAccess	exc -> tt_metrics		10607122	0					
ANR	10607442	Identifier	exc		10607122	0					
ANR	10607443	Identifier	tt_metrics		10607122	1					
ANR	10607444	Identifier	ratio		10607122	1					
ANR	10607445	PrimaryExpression	0		10607122	1					
ANR	10607446	IfStatement	if ( exc -> metrics . x_ppem != exc -> metrics . y_ppem )		10607122	53					
ANR	10607447	Condition	exc -> metrics . x_ppem != exc -> metrics . y_ppem	7770:9:273308:273349	10607122	0	True				
ANR	10607448	EqualityExpression	exc -> metrics . x_ppem != exc -> metrics . y_ppem		10607122	0		!=			
ANR	10607449	MemberAccess	exc -> metrics . x_ppem		10607122	0					
ANR	10607450	PtrMemberAccess	exc -> metrics		10607122	0					
ANR	10607451	Identifier	exc		10607122	0					
ANR	10607452	Identifier	metrics		10607122	1					
ANR	10607453	Identifier	x_ppem		10607122	1					
ANR	10607454	MemberAccess	exc -> metrics . y_ppem		10607122	1					
ANR	10607455	PtrMemberAccess	exc -> metrics		10607122	0					
ANR	10607456	Identifier	exc		10607122	0					
ANR	10607457	Identifier	metrics		10607122	1					
ANR	10607458	Identifier	y_ppem		10607122	1					
ANR	10607459	CompoundStatement		103:4:4225:4225	10607122	1					
ANR	10607460	ExpressionStatement	exc -> func_cur_ppem = Current_Ppem_Stretched	7773:6:273423:273467	10607122	0	True				
ANR	10607461	AssignmentExpression	exc -> func_cur_ppem = Current_Ppem_Stretched		10607122	0		=			
ANR	10607462	PtrMemberAccess	exc -> func_cur_ppem		10607122	0					
ANR	10607463	Identifier	exc		10607122	0					
ANR	10607464	Identifier	func_cur_ppem		10607122	1					
ANR	10607465	Identifier	Current_Ppem_Stretched		10607122	1					
ANR	10607466	ExpressionStatement	exc -> func_read_cvt = Read_CVT_Stretched	7774:6:273475:273515	10607122	1	True				
ANR	10607467	AssignmentExpression	exc -> func_read_cvt = Read_CVT_Stretched		10607122	0		=			
ANR	10607468	PtrMemberAccess	exc -> func_read_cvt		10607122	0					
ANR	10607469	Identifier	exc		10607122	0					
ANR	10607470	Identifier	func_read_cvt		10607122	1					
ANR	10607471	Identifier	Read_CVT_Stretched		10607122	1					
ANR	10607472	ExpressionStatement	exc -> func_write_cvt = Write_CVT_Stretched	7775:6:273523:273564	10607122	2	True				
ANR	10607473	AssignmentExpression	exc -> func_write_cvt = Write_CVT_Stretched		10607122	0		=			
ANR	10607474	PtrMemberAccess	exc -> func_write_cvt		10607122	0					
ANR	10607475	Identifier	exc		10607122	0					
ANR	10607476	Identifier	func_write_cvt		10607122	1					
ANR	10607477	Identifier	Write_CVT_Stretched		10607122	1					
ANR	10607478	ExpressionStatement	exc -> func_move_cvt = Move_CVT_Stretched	7776:6:273572:273612	10607122	3	True				
ANR	10607479	AssignmentExpression	exc -> func_move_cvt = Move_CVT_Stretched		10607122	0		=			
ANR	10607480	PtrMemberAccess	exc -> func_move_cvt		10607122	0					
ANR	10607481	Identifier	exc		10607122	0					
ANR	10607482	Identifier	func_move_cvt		10607122	1					
ANR	10607483	Identifier	Move_CVT_Stretched		10607122	1					
ANR	10607484	ElseStatement	else		10607122	0					
ANR	10607485	CompoundStatement		111:4:4501:4501	10607122	0					
ANR	10607486	ExpressionStatement	exc -> func_cur_ppem = Current_Ppem	7781:6:273688:273722	10607122	0	True				
ANR	10607487	AssignmentExpression	exc -> func_cur_ppem = Current_Ppem		10607122	0		=			
ANR	10607488	PtrMemberAccess	exc -> func_cur_ppem		10607122	0					
ANR	10607489	Identifier	exc		10607122	0					
ANR	10607490	Identifier	func_cur_ppem		10607122	1					
ANR	10607491	Identifier	Current_Ppem		10607122	1					
ANR	10607492	ExpressionStatement	exc -> func_read_cvt = Read_CVT	7782:6:273730:273760	10607122	1	True				
ANR	10607493	AssignmentExpression	exc -> func_read_cvt = Read_CVT		10607122	0		=			
ANR	10607494	PtrMemberAccess	exc -> func_read_cvt		10607122	0					
ANR	10607495	Identifier	exc		10607122	0					
ANR	10607496	Identifier	func_read_cvt		10607122	1					
ANR	10607497	Identifier	Read_CVT		10607122	1					
ANR	10607498	ExpressionStatement	exc -> func_write_cvt = Write_CVT	7783:6:273768:273799	10607122	2	True				
ANR	10607499	AssignmentExpression	exc -> func_write_cvt = Write_CVT		10607122	0		=			
ANR	10607500	PtrMemberAccess	exc -> func_write_cvt		10607122	0					
ANR	10607501	Identifier	exc		10607122	0					
ANR	10607502	Identifier	func_write_cvt		10607122	1					
ANR	10607503	Identifier	Write_CVT		10607122	1					
ANR	10607504	ExpressionStatement	exc -> func_move_cvt = Move_CVT	7784:6:273807:273837	10607122	3	True				
ANR	10607505	AssignmentExpression	exc -> func_move_cvt = Move_CVT		10607122	0		=			
ANR	10607506	PtrMemberAccess	exc -> func_move_cvt		10607122	0					
ANR	10607507	Identifier	exc		10607122	0					
ANR	10607508	Identifier	func_move_cvt		10607122	1					
ANR	10607509	Identifier	Move_CVT		10607122	1					
ANR	10607510	ExpressionStatement	Compute_Funcs ( exc )	7787:4:273850:273870	10607122	54	True				
ANR	10607511	CallExpression	Compute_Funcs ( exc )		10607122	0					
ANR	10607512	Callee	Compute_Funcs		10607122	0					
ANR	10607513	Identifier	Compute_Funcs		10607122	0					
ANR	10607514	ArgumentList	exc		10607122	1					
ANR	10607515	Argument	exc		10607122	0					
ANR	10607516	Identifier	exc		10607122	0					
ANR	10607517	ExpressionStatement	"Compute_Round ( exc , ( FT_Byte ) exc -> GS . round_state )"	7788:4:273876:273926	10607122	55	True				
ANR	10607518	CallExpression	"Compute_Round ( exc , ( FT_Byte ) exc -> GS . round_state )"		10607122	0					
ANR	10607519	Callee	Compute_Round		10607122	0					
ANR	10607520	Identifier	Compute_Round		10607122	0					
ANR	10607521	ArgumentList	exc		10607122	1					
ANR	10607522	Argument	exc		10607122	0					
ANR	10607523	Identifier	exc		10607122	0					
ANR	10607524	Argument	( FT_Byte ) exc -> GS . round_state		10607122	1					
ANR	10607525	CastExpression	( FT_Byte ) exc -> GS . round_state		10607122	0					
ANR	10607526	CastTarget	FT_Byte		10607122	0					
ANR	10607527	MemberAccess	exc -> GS . round_state		10607122	1					
ANR	10607528	PtrMemberAccess	exc -> GS		10607122	0					
ANR	10607529	Identifier	exc		10607122	0					
ANR	10607530	Identifier	GS		10607122	1					
ANR	10607531	Identifier	round_state		10607122	1					
ANR	10607532	DoStatement	do		10607122	56					
ANR	10607533	CompoundStatement		123:4:4808:4808	10607122	0					
ANR	10607534	ExpressionStatement	exc -> opcode = exc -> code [ exc -> IP ]	7792:6:273948:273980	10607122	0	True				
ANR	10607535	AssignmentExpression	exc -> opcode = exc -> code [ exc -> IP ]		10607122	0		=			
ANR	10607536	PtrMemberAccess	exc -> opcode		10607122	0					
ANR	10607537	Identifier	exc		10607122	0					
ANR	10607538	Identifier	opcode		10607122	1					
ANR	10607539	ArrayIndexing	exc -> code [ exc -> IP ]		10607122	1					
ANR	10607540	PtrMemberAccess	exc -> code		10607122	0					
ANR	10607541	Identifier	exc		10607122	0					
ANR	10607542	Identifier	code		10607122	1					
ANR	10607543	PtrMemberAccess	exc -> IP		10607122	1					
ANR	10607544	Identifier	exc		10607122	0					
ANR	10607545	Identifier	IP		10607122	1					
ANR	10607546	CompoundStatement		129:8:4941:4951	10607122	1					
ANR	10607547	IdentifierDeclStatement	"FT_Long cnt = FT_MIN ( 8 , exc -> top ) ;"	7796:8:274027:274063	10607122	0	True				
ANR	10607548	IdentifierDecl	"cnt = FT_MIN ( 8 , exc -> top )"		10607122	0					
ANR	10607549	IdentifierDeclType	FT_Long		10607122	0					
ANR	10607550	Identifier	cnt		10607122	1					
ANR	10607551	AssignmentExpression	"cnt = FT_MIN ( 8 , exc -> top )"		10607122	2		=			
ANR	10607552	Identifier	cnt		10607122	0					
ANR	10607553	CallExpression	"FT_MIN ( 8 , exc -> top )"		10607122	1					
ANR	10607554	Callee	FT_MIN		10607122	0					
ANR	10607555	Identifier	FT_MIN		10607122	0					
ANR	10607556	ArgumentList	8		10607122	1					
ANR	10607557	Argument	8		10607122	0					
ANR	10607558	PrimaryExpression	8		10607122	0					
ANR	10607559	Argument	exc -> top		10607122	1					
ANR	10607560	PtrMemberAccess	exc -> top		10607122	0					
ANR	10607561	Identifier	exc		10607122	0					
ANR	10607562	Identifier	top		10607122	1					
ANR	10607563	IdentifierDeclStatement	FT_Long n ;	7797:8:274073:274083	10607122	1	True				
ANR	10607564	IdentifierDecl	n		10607122	0					
ANR	10607565	IdentifierDeclType	FT_Long		10607122	0					
ANR	10607566	Identifier	n		10607122	1					
ANR	10607567	ExpressionStatement	"FT_TRACE6 ( ( ""  "" ) )"	7802:8:274223:274242	10607122	2	True				
ANR	10607568	CallExpression	"FT_TRACE6 ( ( ""  "" ) )"		10607122	0					
ANR	10607569	Callee	FT_TRACE6		10607122	0					
ANR	10607570	Identifier	FT_TRACE6		10607122	0					
ANR	10607571	ArgumentList	"""  """		10607122	1					
ANR	10607572	Argument	"""  """		10607122	0					
ANR	10607573	PrimaryExpression	"""  """		10607122	0					
ANR	10607574	ExpressionStatement	"FT_TRACE7 ( ( ""%06d "" , exc -> IP ) )"	7803:8:274252:274283	10607122	3	True				
ANR	10607575	CallExpression	"FT_TRACE7 ( ( ""%06d "" , exc -> IP ) )"		10607122	0					
ANR	10607576	Callee	FT_TRACE7		10607122	0					
ANR	10607577	Identifier	FT_TRACE7		10607122	0					
ANR	10607578	ArgumentList	"""%06d "" , exc -> IP"		10607122	1					
ANR	10607579	Argument	"""%06d "" , exc -> IP"		10607122	0					
ANR	10607580	Expression	"""%06d "" , exc -> IP"		10607122	0					
ANR	10607581	PrimaryExpression	"""%06d """		10607122	0					
ANR	10607582	PtrMemberAccess	exc -> IP		10607122	1					
ANR	10607583	Identifier	exc		10607122	0					
ANR	10607584	Identifier	IP		10607122	1					
ANR	10607585	ExpressionStatement	FT_TRACE6 ( ( opcode_name [ exc -> opcode ] + 2 ) )	7804:8:274293:274336	10607122	4	True				
ANR	10607586	CallExpression	FT_TRACE6 ( ( opcode_name [ exc -> opcode ] + 2 ) )		10607122	0					
ANR	10607587	Callee	FT_TRACE6		10607122	0					
ANR	10607588	Identifier	FT_TRACE6		10607122	0					
ANR	10607589	ArgumentList	opcode_name [ exc -> opcode ] + 2		10607122	1					
ANR	10607590	Argument	opcode_name [ exc -> opcode ] + 2		10607122	0					
ANR	10607591	AdditiveExpression	opcode_name [ exc -> opcode ] + 2		10607122	0		+			
ANR	10607592	ArrayIndexing	opcode_name [ exc -> opcode ]		10607122	0					
ANR	10607593	Identifier	opcode_name		10607122	0					
ANR	10607594	PtrMemberAccess	exc -> opcode		10607122	1					
ANR	10607595	Identifier	exc		10607122	0					
ANR	10607596	Identifier	opcode		10607122	1					
ANR	10607597	PrimaryExpression	2		10607122	1					
ANR	10607598	ExpressionStatement	"FT_TRACE7 ( ( ""%*s"" , * opcode_name [ exc -> opcode ] == 'A' ? 2 : 12 - ( * opcode_name [ exc -> opcode ] - '0' ) , ""#"" ) )"	7805:8:274346:274542	10607122	5	True				
ANR	10607599	CallExpression	"FT_TRACE7 ( ( ""%*s"" , * opcode_name [ exc -> opcode ] == 'A' ? 2 : 12 - ( * opcode_name [ exc -> opcode ] - '0' ) , ""#"" ) )"		10607122	0					
ANR	10607600	Callee	FT_TRACE7		10607122	0					
ANR	10607601	Identifier	FT_TRACE7		10607122	0					
ANR	10607602	ArgumentList	"""%*s"" , * opcode_name [ exc -> opcode ] == 'A' ? 2 : 12 - ( * opcode_name [ exc -> opcode ] - '0' ) , ""#"""		10607122	1					
ANR	10607603	Argument	"""%*s"" , * opcode_name [ exc -> opcode ] == 'A' ? 2 : 12 - ( * opcode_name [ exc -> opcode ] - '0' ) , ""#"""		10607122	0					
ANR	10607604	Expression	"""%*s"" , * opcode_name [ exc -> opcode ] == 'A' ? 2 : 12 - ( * opcode_name [ exc -> opcode ] - '0' ) , ""#"""		10607122	0					
ANR	10607605	PrimaryExpression	"""%*s"""		10607122	0					
ANR	10607606	Expression	"* opcode_name [ exc -> opcode ] == 'A' ? 2 : 12 - ( * opcode_name [ exc -> opcode ] - '0' ) , ""#"""		10607122	1					
ANR	10607607	ConditionalExpression	* opcode_name [ exc -> opcode ] == 'A' ? 2 : 12 - ( * opcode_name [ exc -> opcode ] - '0' )		10607122	0					
ANR	10607608	Condition	* opcode_name [ exc -> opcode ] == 'A'		10607122	0					
ANR	10607609	EqualityExpression	* opcode_name [ exc -> opcode ] == 'A'		10607122	0		==			
ANR	10607610	UnaryOperationExpression	* opcode_name [ exc -> opcode ]		10607122	0					
ANR	10607611	UnaryOperator	*		10607122	0					
ANR	10607612	ArrayIndexing	opcode_name [ exc -> opcode ]		10607122	1					
ANR	10607613	Identifier	opcode_name		10607122	0					
ANR	10607614	PtrMemberAccess	exc -> opcode		10607122	1					
ANR	10607615	Identifier	exc		10607122	0					
ANR	10607616	Identifier	opcode		10607122	1					
ANR	10607617	PrimaryExpression	'A'		10607122	1					
ANR	10607618	PrimaryExpression	2		10607122	1					
ANR	10607619	AdditiveExpression	12 - ( * opcode_name [ exc -> opcode ] - '0' )		10607122	2		-			
ANR	10607620	PrimaryExpression	12		10607122	0					
ANR	10607621	AdditiveExpression	* opcode_name [ exc -> opcode ] - '0'		10607122	1		-			
ANR	10607622	UnaryOperationExpression	* opcode_name [ exc -> opcode ]		10607122	0					
ANR	10607623	UnaryOperator	*		10607122	0					
ANR	10607624	ArrayIndexing	opcode_name [ exc -> opcode ]		10607122	1					
ANR	10607625	Identifier	opcode_name		10607122	0					
ANR	10607626	PtrMemberAccess	exc -> opcode		10607122	1					
ANR	10607627	Identifier	exc		10607122	0					
ANR	10607628	Identifier	opcode		10607122	1					
ANR	10607629	PrimaryExpression	'0'		10607122	1					
ANR	10607630	PrimaryExpression	"""#"""		10607122	1					
ANR	10607631	ForStatement	for ( n = 1 ; n <= cnt ; n ++ )		10607122	6					
ANR	10607632	ForInit	n = 1 ;	7809:14:274558:274563	10607122	0	True				
ANR	10607633	AssignmentExpression	n = 1		10607122	0		=			
ANR	10607634	Identifier	n		10607122	0					
ANR	10607635	PrimaryExpression	1		10607122	1					
ANR	10607636	Condition	n <= cnt	7809:21:274565:274572	10607122	1	True				
ANR	10607637	RelationalExpression	n <= cnt		10607122	0		<=			
ANR	10607638	Identifier	n		10607122	0					
ANR	10607639	Identifier	cnt		10607122	1					
ANR	10607640	PostIncDecOperationExpression	n ++	7809:31:274575:274577	10607122	2	True				
ANR	10607641	Identifier	n		10607122	0					
ANR	10607642	IncDec	++		10607122	1					
ANR	10607643	ExpressionStatement	"FT_TRACE7 ( ( "" %d"" , exc -> stack [ exc -> top - n ] ) )"	7810:10:274591:274637	10607122	3	True				
ANR	10607644	CallExpression	"FT_TRACE7 ( ( "" %d"" , exc -> stack [ exc -> top - n ] ) )"		10607122	0					
ANR	10607645	Callee	FT_TRACE7		10607122	0					
ANR	10607646	Identifier	FT_TRACE7		10607122	0					
ANR	10607647	ArgumentList	""" %d"" , exc -> stack [ exc -> top - n ]"		10607122	1					
ANR	10607648	Argument	""" %d"" , exc -> stack [ exc -> top - n ]"		10607122	0					
ANR	10607649	Expression	""" %d"" , exc -> stack [ exc -> top - n ]"		10607122	0					
ANR	10607650	PrimaryExpression	""" %d"""		10607122	0					
ANR	10607651	ArrayIndexing	exc -> stack [ exc -> top - n ]		10607122	1					
ANR	10607652	PtrMemberAccess	exc -> stack		10607122	0					
ANR	10607653	Identifier	exc		10607122	0					
ANR	10607654	Identifier	stack		10607122	1					
ANR	10607655	AdditiveExpression	exc -> top - n		10607122	1		-			
ANR	10607656	PtrMemberAccess	exc -> top		10607122	0					
ANR	10607657	Identifier	exc		10607122	0					
ANR	10607658	Identifier	top		10607122	1					
ANR	10607659	Identifier	n		10607122	1					
ANR	10607660	ExpressionStatement	"FT_TRACE6 ( ( ""\\n"" ) )"	7811:8:274647:274666	10607122	7	True				
ANR	10607661	CallExpression	"FT_TRACE6 ( ( ""\\n"" ) )"		10607122	0					
ANR	10607662	Callee	FT_TRACE6		10607122	0					
ANR	10607663	Identifier	FT_TRACE6		10607122	0					
ANR	10607664	ArgumentList	"""\\n"""		10607122	1					
ANR	10607665	Argument	"""\\n"""		10607122	0					
ANR	10607666	PrimaryExpression	"""\\n"""		10607122	0					
ANR	10607667	IfStatement	if ( ( exc -> length = opcode_length [ exc -> opcode ] ) < 0 )		10607122	2					
ANR	10607668	Condition	( exc -> length = opcode_length [ exc -> opcode ] ) < 0	7815:11:274722:274769	10607122	0	True				
ANR	10607669	RelationalExpression	( exc -> length = opcode_length [ exc -> opcode ] ) < 0		10607122	0		<			
ANR	10607670	AssignmentExpression	exc -> length = opcode_length [ exc -> opcode ]		10607122	0		=			
ANR	10607671	PtrMemberAccess	exc -> length		10607122	0					
ANR	10607672	Identifier	exc		10607122	0					
ANR	10607673	Identifier	length		10607122	1					
ANR	10607674	ArrayIndexing	opcode_length [ exc -> opcode ]		10607122	1					
ANR	10607675	Identifier	opcode_length		10607122	0					
ANR	10607676	PtrMemberAccess	exc -> opcode		10607122	1					
ANR	10607677	Identifier	exc		10607122	0					
ANR	10607678	Identifier	opcode		10607122	1					
ANR	10607679	PrimaryExpression	0		10607122	1					
ANR	10607680	CompoundStatement		148:6:5647:5647	10607122	1					
ANR	10607681	IfStatement	if ( exc -> IP + 1 >= exc -> codeSize )		10607122	0					
ANR	10607682	Condition	exc -> IP + 1 >= exc -> codeSize	7817:13:274794:274821	10607122	0	True				
ANR	10607683	RelationalExpression	exc -> IP + 1 >= exc -> codeSize		10607122	0		>=			
ANR	10607684	AdditiveExpression	exc -> IP + 1		10607122	0		+			
ANR	10607685	PtrMemberAccess	exc -> IP		10607122	0					
ANR	10607686	Identifier	exc		10607122	0					
ANR	10607687	Identifier	IP		10607122	1					
ANR	10607688	PrimaryExpression	1		10607122	1					
ANR	10607689	PtrMemberAccess	exc -> codeSize		10607122	1					
ANR	10607690	Identifier	exc		10607122	0					
ANR	10607691	Identifier	codeSize		10607122	1					
ANR	10607692	GotoStatement	goto LErrorCodeOverflow_ ;	7818:10:274835:274859	10607122	1	True				
ANR	10607693	Identifier	LErrorCodeOverflow_		10607122	0					
ANR	10607694	ExpressionStatement	exc -> length = 2 - exc -> length * exc -> code [ exc -> IP + 1 ]	7820:8:274870:274924	10607122	1	True				
ANR	10607695	AssignmentExpression	exc -> length = 2 - exc -> length * exc -> code [ exc -> IP + 1 ]		10607122	0		=			
ANR	10607696	PtrMemberAccess	exc -> length		10607122	0					
ANR	10607697	Identifier	exc		10607122	0					
ANR	10607698	Identifier	length		10607122	1					
ANR	10607699	AdditiveExpression	2 - exc -> length * exc -> code [ exc -> IP + 1 ]		10607122	1		-			
ANR	10607700	PrimaryExpression	2		10607122	0					
ANR	10607701	MultiplicativeExpression	exc -> length * exc -> code [ exc -> IP + 1 ]		10607122	1		*			
ANR	10607702	PtrMemberAccess	exc -> length		10607122	0					
ANR	10607703	Identifier	exc		10607122	0					
ANR	10607704	Identifier	length		10607122	1					
ANR	10607705	ArrayIndexing	exc -> code [ exc -> IP + 1 ]		10607122	1					
ANR	10607706	PtrMemberAccess	exc -> code		10607122	0					
ANR	10607707	Identifier	exc		10607122	0					
ANR	10607708	Identifier	code		10607122	1					
ANR	10607709	AdditiveExpression	exc -> IP + 1		10607122	1		+			
ANR	10607710	PtrMemberAccess	exc -> IP		10607122	0					
ANR	10607711	Identifier	exc		10607122	0					
ANR	10607712	Identifier	IP		10607122	1					
ANR	10607713	PrimaryExpression	1		10607122	1					
ANR	10607714	IfStatement	if ( exc -> IP + exc -> length > exc -> codeSize )		10607122	3					
ANR	10607715	Condition	exc -> IP + exc -> length > exc -> codeSize	7823:11:274946:274982	10607122	0	True				
ANR	10607716	RelationalExpression	exc -> IP + exc -> length > exc -> codeSize		10607122	0		>			
ANR	10607717	AdditiveExpression	exc -> IP + exc -> length		10607122	0		+			
ANR	10607718	PtrMemberAccess	exc -> IP		10607122	0					
ANR	10607719	Identifier	exc		10607122	0					
ANR	10607720	Identifier	IP		10607122	1					
ANR	10607721	PtrMemberAccess	exc -> length		10607122	1					
ANR	10607722	Identifier	exc		10607122	0					
ANR	10607723	Identifier	length		10607122	1					
ANR	10607724	PtrMemberAccess	exc -> codeSize		10607122	1					
ANR	10607725	Identifier	exc		10607122	0					
ANR	10607726	Identifier	codeSize		10607122	1					
ANR	10607727	GotoStatement	goto LErrorCodeOverflow_ ;	7824:8:274994:275018	10607122	1	True				
ANR	10607728	Identifier	LErrorCodeOverflow_		10607122	0					
ANR	10607729	ExpressionStatement	exc -> args = exc -> top - ( Pop_Push_Count [ exc -> opcode ] >> 4 )	7827:6:275087:275146	10607122	4	True				
ANR	10607730	AssignmentExpression	exc -> args = exc -> top - ( Pop_Push_Count [ exc -> opcode ] >> 4 )		10607122	0		=			
ANR	10607731	PtrMemberAccess	exc -> args		10607122	0					
ANR	10607732	Identifier	exc		10607122	0					
ANR	10607733	Identifier	args		10607122	1					
ANR	10607734	AdditiveExpression	exc -> top - ( Pop_Push_Count [ exc -> opcode ] >> 4 )		10607122	1		-			
ANR	10607735	PtrMemberAccess	exc -> top		10607122	0					
ANR	10607736	Identifier	exc		10607122	0					
ANR	10607737	Identifier	top		10607122	1					
ANR	10607738	ShiftExpression	Pop_Push_Count [ exc -> opcode ] >> 4		10607122	1		>>			
ANR	10607739	ArrayIndexing	Pop_Push_Count [ exc -> opcode ]		10607122	0					
ANR	10607740	Identifier	Pop_Push_Count		10607122	0					
ANR	10607741	PtrMemberAccess	exc -> opcode		10607122	1					
ANR	10607742	Identifier	exc		10607122	0					
ANR	10607743	Identifier	opcode		10607122	1					
ANR	10607744	PrimaryExpression	4		10607122	1					
ANR	10607745	IfStatement	if ( exc -> args < 0 )		10607122	5					
ANR	10607746	Condition	exc -> args < 0	7831:11:275312:275324	10607122	0	True				
ANR	10607747	RelationalExpression	exc -> args < 0		10607122	0		<			
ANR	10607748	PtrMemberAccess	exc -> args		10607122	0					
ANR	10607749	Identifier	exc		10607122	0					
ANR	10607750	Identifier	args		10607122	1					
ANR	10607751	PrimaryExpression	0		10607122	1					
ANR	10607752	CompoundStatement		164:6:6202:6202	10607122	1					
ANR	10607753	IfStatement	if ( exc -> pedantic_hinting )		10607122	0					
ANR	10607754	Condition	exc -> pedantic_hinting	7833:13:275349:275369	10607122	0	True				
ANR	10607755	PtrMemberAccess	exc -> pedantic_hinting		10607122	0					
ANR	10607756	Identifier	exc		10607122	0					
ANR	10607757	Identifier	pedantic_hinting		10607122	1					
ANR	10607758	CompoundStatement		166:8:6249:6249	10607122	1					
ANR	10607759	ExpressionStatement	exc -> error = FT_THROW ( Too_Few_Arguments )	7835:10:275393:275435	10607122	0	True				
ANR	10607760	AssignmentExpression	exc -> error = FT_THROW ( Too_Few_Arguments )		10607122	0		=			
ANR	10607761	PtrMemberAccess	exc -> error		10607122	0					
ANR	10607762	Identifier	exc		10607122	0					
ANR	10607763	Identifier	error		10607122	1					
ANR	10607764	CallExpression	FT_THROW ( Too_Few_Arguments )		10607122	1					
ANR	10607765	Callee	FT_THROW		10607122	0					
ANR	10607766	Identifier	FT_THROW		10607122	0					
ANR	10607767	ArgumentList	Too_Few_Arguments		10607122	1					
ANR	10607768	Argument	Too_Few_Arguments		10607122	0					
ANR	10607769	Identifier	Too_Few_Arguments		10607122	0					
ANR	10607770	GotoStatement	goto LErrorLabel_ ;	7836:10:275447:275464	10607122	1	True				
ANR	10607771	Identifier	LErrorLabel_		10607122	0					
ANR	10607772	ForStatement	for ( i = 0 ; i < Pop_Push_Count [ exc -> opcode ] >> 4 ; i ++ )		10607122	1					
ANR	10607773	ForInit	i = 0 ;	7840:14:275532:275537	10607122	0	True				
ANR	10607774	AssignmentExpression	i = 0		10607122	0		=			
ANR	10607775	Identifier	i		10607122	0					
ANR	10607776	PrimaryExpression	0		10607122	1					
ANR	10607777	Condition	i < Pop_Push_Count [ exc -> opcode ] >> 4	7840:21:275539:275574	10607122	1	True				
ANR	10607778	RelationalExpression	i < Pop_Push_Count [ exc -> opcode ] >> 4		10607122	0		<			
ANR	10607779	Identifier	i		10607122	0					
ANR	10607780	ShiftExpression	Pop_Push_Count [ exc -> opcode ] >> 4		10607122	1		>>			
ANR	10607781	ArrayIndexing	Pop_Push_Count [ exc -> opcode ]		10607122	0					
ANR	10607782	Identifier	Pop_Push_Count		10607122	0					
ANR	10607783	PtrMemberAccess	exc -> opcode		10607122	1					
ANR	10607784	Identifier	exc		10607122	0					
ANR	10607785	Identifier	opcode		10607122	1					
ANR	10607786	PrimaryExpression	4		10607122	1					
ANR	10607787	PostIncDecOperationExpression	i ++	7840:59:275577:275579	10607122	2	True				
ANR	10607788	Identifier	i		10607122	0					
ANR	10607789	IncDec	++		10607122	1					
ANR	10607790	ExpressionStatement	exc -> stack [ i ] = 0	7841:10:275593:275610	10607122	3	True				
ANR	10607791	AssignmentExpression	exc -> stack [ i ] = 0		10607122	0		=			
ANR	10607792	ArrayIndexing	exc -> stack [ i ]		10607122	0					
ANR	10607793	PtrMemberAccess	exc -> stack		10607122	0					
ANR	10607794	Identifier	exc		10607122	0					
ANR	10607795	Identifier	stack		10607122	1					
ANR	10607796	Identifier	i		10607122	1					
ANR	10607797	PrimaryExpression	0		10607122	1					
ANR	10607798	ExpressionStatement	exc -> args = 0	7842:8:275620:275633	10607122	2	True				
ANR	10607799	AssignmentExpression	exc -> args = 0		10607122	0		=			
ANR	10607800	PtrMemberAccess	exc -> args		10607122	0					
ANR	10607801	Identifier	exc		10607122	0					
ANR	10607802	Identifier	args		10607122	1					
ANR	10607803	PrimaryExpression	0		10607122	1					
ANR	10607804	IfStatement	if ( exc -> opcode == 0x91 )		10607122	6					
ANR	10607805	Condition	exc -> opcode == 0x91	7846:11:275694:275712	10607122	0	True				
ANR	10607806	EqualityExpression	exc -> opcode == 0x91		10607122	0		==			
ANR	10607807	PtrMemberAccess	exc -> opcode		10607122	0					
ANR	10607808	Identifier	exc		10607122	0					
ANR	10607809	Identifier	opcode		10607122	1					
ANR	10607810	PrimaryExpression	0x91		10607122	1					
ANR	10607811	CompoundStatement		179:6:6590:6590	10607122	1					
ANR	10607812	IfStatement	if ( exc -> face -> blend )		10607122	0					
ANR	10607813	Condition	exc -> face -> blend	7854:13:276074:276089	10607122	0	True				
ANR	10607814	PtrMemberAccess	exc -> face -> blend		10607122	0					
ANR	10607815	PtrMemberAccess	exc -> face		10607122	0					
ANR	10607816	Identifier	exc		10607122	0					
ANR	10607817	Identifier	face		10607122	1					
ANR	10607818	Identifier	blend		10607122	1					
ANR	10607819	ExpressionStatement	exc -> new_top = exc -> args + exc -> face -> blend -> num_axis	7855:10:276103:276156	10607122	1	True				
ANR	10607820	AssignmentExpression	exc -> new_top = exc -> args + exc -> face -> blend -> num_axis		10607122	0		=			
ANR	10607821	PtrMemberAccess	exc -> new_top		10607122	0					
ANR	10607822	Identifier	exc		10607122	0					
ANR	10607823	Identifier	new_top		10607122	1					
ANR	10607824	AdditiveExpression	exc -> args + exc -> face -> blend -> num_axis		10607122	1		+			
ANR	10607825	PtrMemberAccess	exc -> args		10607122	0					
ANR	10607826	Identifier	exc		10607122	0					
ANR	10607827	Identifier	args		10607122	1					
ANR	10607828	PtrMemberAccess	exc -> face -> blend -> num_axis		10607122	1					
ANR	10607829	PtrMemberAccess	exc -> face -> blend		10607122	0					
ANR	10607830	PtrMemberAccess	exc -> face		10607122	0					
ANR	10607831	Identifier	exc		10607122	0					
ANR	10607832	Identifier	face		10607122	1					
ANR	10607833	Identifier	blend		10607122	1					
ANR	10607834	Identifier	num_axis		10607122	1					
ANR	10607835	ElseStatement	else		10607122	0					
ANR	10607836	ExpressionStatement	exc -> new_top = exc -> args + ( Pop_Push_Count [ exc -> opcode ] & 15 )	7859:8:276192:276255	10607122	0	True				
ANR	10607837	AssignmentExpression	exc -> new_top = exc -> args + ( Pop_Push_Count [ exc -> opcode ] & 15 )		10607122	0		=			
ANR	10607838	PtrMemberAccess	exc -> new_top		10607122	0					
ANR	10607839	Identifier	exc		10607122	0					
ANR	10607840	Identifier	new_top		10607122	1					
ANR	10607841	AdditiveExpression	exc -> args + ( Pop_Push_Count [ exc -> opcode ] & 15 )		10607122	1		+			
ANR	10607842	PtrMemberAccess	exc -> args		10607122	0					
ANR	10607843	Identifier	exc		10607122	0					
ANR	10607844	Identifier	args		10607122	1					
ANR	10607845	BitAndExpression	Pop_Push_Count [ exc -> opcode ] & 15		10607122	1		&			
ANR	10607846	ArrayIndexing	Pop_Push_Count [ exc -> opcode ]		10607122	0					
ANR	10607847	Identifier	Pop_Push_Count		10607122	0					
ANR	10607848	PtrMemberAccess	exc -> opcode		10607122	1					
ANR	10607849	Identifier	exc		10607122	0					
ANR	10607850	Identifier	opcode		10607122	1					
ANR	10607851	PrimaryExpression	15		10607122	1					
ANR	10607852	IfStatement	if ( exc -> new_top > exc -> stackSize )		10607122	7					
ANR	10607853	Condition	exc -> new_top > exc -> stackSize	7864:11:276494:276522	10607122	0	True				
ANR	10607854	RelationalExpression	exc -> new_top > exc -> stackSize		10607122	0		>			
ANR	10607855	PtrMemberAccess	exc -> new_top		10607122	0					
ANR	10607856	Identifier	exc		10607122	0					
ANR	10607857	Identifier	new_top		10607122	1					
ANR	10607858	PtrMemberAccess	exc -> stackSize		10607122	1					
ANR	10607859	Identifier	exc		10607122	0					
ANR	10607860	Identifier	stackSize		10607122	1					
ANR	10607861	CompoundStatement		197:6:7400:7400	10607122	1					
ANR	10607862	ExpressionStatement	exc -> error = FT_THROW ( Stack_Overflow )	7866:8:276542:276581	10607122	0	True				
ANR	10607863	AssignmentExpression	exc -> error = FT_THROW ( Stack_Overflow )		10607122	0		=			
ANR	10607864	PtrMemberAccess	exc -> error		10607122	0					
ANR	10607865	Identifier	exc		10607122	0					
ANR	10607866	Identifier	error		10607122	1					
ANR	10607867	CallExpression	FT_THROW ( Stack_Overflow )		10607122	1					
ANR	10607868	Callee	FT_THROW		10607122	0					
ANR	10607869	Identifier	FT_THROW		10607122	0					
ANR	10607870	ArgumentList	Stack_Overflow		10607122	1					
ANR	10607871	Argument	Stack_Overflow		10607122	0					
ANR	10607872	Identifier	Stack_Overflow		10607122	0					
ANR	10607873	GotoStatement	goto LErrorLabel_ ;	7867:8:276591:276608	10607122	1	True				
ANR	10607874	Identifier	LErrorLabel_		10607122	0					
ANR	10607875	ExpressionStatement	exc -> step_ins = TRUE	7870:6:276625:276645	10607122	8	True				
ANR	10607876	AssignmentExpression	exc -> step_ins = TRUE		10607122	0		=			
ANR	10607877	PtrMemberAccess	exc -> step_ins		10607122	0					
ANR	10607878	Identifier	exc		10607122	0					
ANR	10607879	Identifier	step_ins		10607122	1					
ANR	10607880	Identifier	TRUE		10607122	1					
ANR	10607881	ExpressionStatement	exc -> error = FT_Err_Ok	7871:6:276653:276678	10607122	9	True				
ANR	10607882	AssignmentExpression	exc -> error = FT_Err_Ok		10607122	0		=			
ANR	10607883	PtrMemberAccess	exc -> error		10607122	0					
ANR	10607884	Identifier	exc		10607122	0					
ANR	10607885	Identifier	error		10607122	1					
ANR	10607886	Identifier	FT_Err_Ok		10607122	1					
ANR	10607887	IfStatement	if ( SUBPIXEL_HINTING_INFINALITY )		10607122	10					
ANR	10607888	Condition	SUBPIXEL_HINTING_INFINALITY	7875:11:276739:276765	10607122	0	True				
ANR	10607889	Identifier	SUBPIXEL_HINTING_INFINALITY		10607122	0					
ANR	10607890	CompoundStatement		208:6:7643:7643	10607122	1					
ANR	10607891	ForStatement	for ( i = 0 ; i < opcode_patterns ; i ++ )		10607122	0					
ANR	10607892	ForInit	i = 0 ;	7877:14:276791:276796	10607122	0	True				
ANR	10607893	AssignmentExpression	i = 0		10607122	0		=			
ANR	10607894	Identifier	i		10607122	0					
ANR	10607895	PrimaryExpression	0		10607122	1					
ANR	10607896	Condition	i < opcode_patterns	7877:21:276798:276816	10607122	1	True				
ANR	10607897	RelationalExpression	i < opcode_patterns		10607122	0		<			
ANR	10607898	Identifier	i		10607122	0					
ANR	10607899	Identifier	opcode_patterns		10607122	1					
ANR	10607900	PostIncDecOperationExpression	i ++	7877:42:276819:276821	10607122	2	True				
ANR	10607901	Identifier	i		10607122	0					
ANR	10607902	IncDec	++		10607122	1					
ANR	10607903	CompoundStatement		210:8:7701:7701	10607122	3					
ANR	10607904	IfStatement	if ( opcode_pointer [ i ] < opcode_size [ i ] && exc -> opcode == opcode_pattern [ i ] [ opcode_pointer [ i ] ] )		10607122	0					
ANR	10607905	Condition	opcode_pointer [ i ] < opcode_size [ i ] && exc -> opcode == opcode_pattern [ i ] [ opcode_pointer [ i ] ]	7879:15:276850:276970	10607122	0	True				
ANR	10607906	AndExpression	opcode_pointer [ i ] < opcode_size [ i ] && exc -> opcode == opcode_pattern [ i ] [ opcode_pointer [ i ] ]		10607122	0		&&			
ANR	10607907	RelationalExpression	opcode_pointer [ i ] < opcode_size [ i ]		10607122	0		<			
ANR	10607908	ArrayIndexing	opcode_pointer [ i ]		10607122	0					
ANR	10607909	Identifier	opcode_pointer		10607122	0					
ANR	10607910	Identifier	i		10607122	1					
ANR	10607911	ArrayIndexing	opcode_size [ i ]		10607122	1					
ANR	10607912	Identifier	opcode_size		10607122	0					
ANR	10607913	Identifier	i		10607122	1					
ANR	10607914	EqualityExpression	exc -> opcode == opcode_pattern [ i ] [ opcode_pointer [ i ] ]		10607122	1		==			
ANR	10607915	PtrMemberAccess	exc -> opcode		10607122	0					
ANR	10607916	Identifier	exc		10607122	0					
ANR	10607917	Identifier	opcode		10607122	1					
ANR	10607918	ArrayIndexing	opcode_pattern [ i ] [ opcode_pointer [ i ] ]		10607122	1					
ANR	10607919	ArrayIndexing	opcode_pattern [ i ]		10607122	0					
ANR	10607920	Identifier	opcode_pattern		10607122	0					
ANR	10607921	Identifier	i		10607122	1					
ANR	10607922	ArrayIndexing	opcode_pointer [ i ]		10607122	1					
ANR	10607923	Identifier	opcode_pointer		10607122	0					
ANR	10607924	Identifier	i		10607122	1					
ANR	10607925	CompoundStatement		213:10:7852:7852	10607122	1					
ANR	10607926	ExpressionStatement	opcode_pointer [ i ] += 1	7882:12:276998:277020	10607122	0	True				
ANR	10607927	AssignmentExpression	opcode_pointer [ i ] += 1		10607122	0		+=			
ANR	10607928	ArrayIndexing	opcode_pointer [ i ]		10607122	0					
ANR	10607929	Identifier	opcode_pointer		10607122	0					
ANR	10607930	Identifier	i		10607122	1					
ANR	10607931	PrimaryExpression	1		10607122	1					
ANR	10607932	IfStatement	if ( opcode_pointer [ i ] == opcode_size [ i ] )		10607122	1					
ANR	10607933	Condition	opcode_pointer [ i ] == opcode_size [ i ]	7884:17:277040:277074	10607122	0	True				
ANR	10607934	EqualityExpression	opcode_pointer [ i ] == opcode_size [ i ]		10607122	0		==			
ANR	10607935	ArrayIndexing	opcode_pointer [ i ]		10607122	0					
ANR	10607936	Identifier	opcode_pointer		10607122	0					
ANR	10607937	Identifier	i		10607122	1					
ANR	10607938	ArrayIndexing	opcode_size [ i ]		10607122	1					
ANR	10607939	Identifier	opcode_size		10607122	0					
ANR	10607940	Identifier	i		10607122	1					
ANR	10607941	CompoundStatement		217:12:7958:7958	10607122	1					
ANR	10607942	ExpressionStatement	"FT_TRACE6 ( ( ""sph: opcode ptrn: %d, %s %s\\n"" , i , exc -> face -> root . family_name , exc -> face -> root . style_name ) )"	7886:14:277106:277290	10607122	0	True				
ANR	10607943	CallExpression	"FT_TRACE6 ( ( ""sph: opcode ptrn: %d, %s %s\\n"" , i , exc -> face -> root . family_name , exc -> face -> root . style_name ) )"		10607122	0					
ANR	10607944	Callee	FT_TRACE6		10607122	0					
ANR	10607945	Identifier	FT_TRACE6		10607122	0					
ANR	10607946	ArgumentList	"""sph: opcode ptrn: %d, %s %s\\n"" , i , exc -> face -> root . family_name , exc -> face -> root . style_name"		10607122	1					
ANR	10607947	Argument	"""sph: opcode ptrn: %d, %s %s\\n"" , i , exc -> face -> root . family_name , exc -> face -> root . style_name"		10607122	0					
ANR	10607948	Expression	"""sph: opcode ptrn: %d, %s %s\\n"" , i , exc -> face -> root . family_name , exc -> face -> root . style_name"		10607122	0					
ANR	10607949	PrimaryExpression	"""sph: opcode ptrn: %d, %s %s\\n"""		10607122	0					
ANR	10607950	Expression	"i , exc -> face -> root . family_name , exc -> face -> root . style_name"		10607122	1					
ANR	10607951	Identifier	i		10607122	0					
ANR	10607952	Expression	"exc -> face -> root . family_name , exc -> face -> root . style_name"		10607122	1					
ANR	10607953	MemberAccess	exc -> face -> root . family_name		10607122	0					
ANR	10607954	PtrMemberAccess	exc -> face -> root		10607122	0					
ANR	10607955	PtrMemberAccess	exc -> face		10607122	0					
ANR	10607956	Identifier	exc		10607122	0					
ANR	10607957	Identifier	face		10607122	1					
ANR	10607958	Identifier	root		10607122	1					
ANR	10607959	Identifier	family_name		10607122	1					
ANR	10607960	MemberAccess	exc -> face -> root . style_name		10607122	1					
ANR	10607961	PtrMemberAccess	exc -> face -> root		10607122	0					
ANR	10607962	PtrMemberAccess	exc -> face		10607122	0					
ANR	10607963	Identifier	exc		10607122	0					
ANR	10607964	Identifier	face		10607122	1					
ANR	10607965	Identifier	root		10607122	1					
ANR	10607966	Identifier	style_name		10607122	1					
ANR	10607967	SwitchStatement	switch ( i )		10607122	1					
ANR	10607968	Condition	i	7891:23:277316:277316	10607122	0	True				
ANR	10607969	Identifier	i		10607122	0					
ANR	10607970	CompoundStatement		224:14:8202:8202	10607122	1					
ANR	10607971	Label	case 0 :	7893:14:277350:277356	10607122	0	True				
ANR	10607972	BreakStatement	break ;	7894:16:277374:277379	10607122	1	True				
ANR	10607973	ExpressionStatement	opcode_pointer [ i ] = 0	7896:14:277411:277432	10607122	2	True				
ANR	10607974	AssignmentExpression	opcode_pointer [ i ] = 0		10607122	0		=			
ANR	10607975	ArrayIndexing	opcode_pointer [ i ]		10607122	0					
ANR	10607976	Identifier	opcode_pointer		10607122	0					
ANR	10607977	Identifier	i		10607122	1					
ANR	10607978	PrimaryExpression	0		10607122	1					
ANR	10607979	ElseStatement	else		10607122	0					
ANR	10607980	ExpressionStatement	opcode_pointer [ i ] = 0	7900:12:277487:277508	10607122	0	True				
ANR	10607981	AssignmentExpression	opcode_pointer [ i ] = 0		10607122	0		=			
ANR	10607982	ArrayIndexing	opcode_pointer [ i ]		10607122	0					
ANR	10607983	Identifier	opcode_pointer		10607122	0					
ANR	10607984	Identifier	i		10607122	1					
ANR	10607985	PrimaryExpression	0		10607122	1					
ANR	10607986	CompoundStatement		240:8:8517:8547	10607122	11					
ANR	10607987	IdentifierDeclStatement	FT_Long * args = exc -> stack + exc -> args ;	7907:8:277598:277639	10607122	0	True				
ANR	10607988	IdentifierDecl	* args = exc -> stack + exc -> args		10607122	0					
ANR	10607989	IdentifierDeclType	FT_Long *		10607122	0					
ANR	10607990	Identifier	args		10607122	1					
ANR	10607991	AssignmentExpression	* args = exc -> stack + exc -> args		10607122	2		=			
ANR	10607992	Identifier	args		10607122	0					
ANR	10607993	AdditiveExpression	exc -> stack + exc -> args		10607122	1		+			
ANR	10607994	PtrMemberAccess	exc -> stack		10607122	0					
ANR	10607995	Identifier	exc		10607122	0					
ANR	10607996	Identifier	stack		10607122	1					
ANR	10607997	PtrMemberAccess	exc -> args		10607122	1					
ANR	10607998	Identifier	exc		10607122	0					
ANR	10607999	Identifier	args		10607122	1					
ANR	10608000	IdentifierDeclStatement	FT_Byte opcode = exc -> opcode ;	7908:8:277649:277679	10607122	1	True				
ANR	10608001	IdentifierDecl	opcode = exc -> opcode		10607122	0					
ANR	10608002	IdentifierDeclType	FT_Byte		10607122	0					
ANR	10608003	Identifier	opcode		10607122	1					
ANR	10608004	AssignmentExpression	opcode = exc -> opcode		10607122	2		=			
ANR	10608005	Identifier	opcode		10607122	0					
ANR	10608006	PtrMemberAccess	exc -> opcode		10607122	1					
ANR	10608007	Identifier	exc		10607122	0					
ANR	10608008	Identifier	opcode		10607122	1					
ANR	10608009	SwitchStatement	switch ( opcode )		10607122	2					
ANR	10608010	Condition	opcode	7911:17:277700:277705	10607122	0	True				
ANR	10608011	Identifier	opcode		10607122	0					
ANR	10608012	CompoundStatement		244:8:8585:8585	10607122	1					
ANR	10608013	Label	case 0x00 :	7913:8:277727:277736	10607122	0	True				
ANR	10608014	Label	case 0x01 :	7914:8:277762:277771	10607122	1	True				
ANR	10608015	Label	case 0x02 :	7915:8:277797:277806	10607122	2	True				
ANR	10608016	Label	case 0x03 :	7916:8:277832:277841	10607122	3	True				
ANR	10608017	Label	case 0x04 :	7917:8:277867:277876	10607122	4	True				
ANR	10608018	Label	case 0x05 :	7918:8:277902:277911	10607122	5	True				
ANR	10608019	ExpressionStatement	Ins_SxyTCA ( exc )	7919:10:277939:277956	10607122	6	True				
ANR	10608020	CallExpression	Ins_SxyTCA ( exc )		10607122	0					
ANR	10608021	Callee	Ins_SxyTCA		10607122	0					
ANR	10608022	Identifier	Ins_SxyTCA		10607122	0					
ANR	10608023	ArgumentList	exc		10607122	1					
ANR	10608024	Argument	exc		10607122	0					
ANR	10608025	Identifier	exc		10607122	0					
ANR	10608026	BreakStatement	break ;	7920:10:277968:277973	10607122	7	True				
ANR	10608027	Label	case 0x06 :	7922:8:277984:277993	10607122	8	True				
ANR	10608028	Label	case 0x07 :	7923:8:278019:278028	10607122	9	True				
ANR	10608029	ExpressionStatement	"Ins_SPVTL ( exc , args )"	7924:10:278056:278078	10607122	10	True				
ANR	10608030	CallExpression	"Ins_SPVTL ( exc , args )"		10607122	0					
ANR	10608031	Callee	Ins_SPVTL		10607122	0					
ANR	10608032	Identifier	Ins_SPVTL		10607122	0					
ANR	10608033	ArgumentList	exc		10607122	1					
ANR	10608034	Argument	exc		10607122	0					
ANR	10608035	Identifier	exc		10607122	0					
ANR	10608036	Argument	args		10607122	1					
ANR	10608037	Identifier	args		10607122	0					
ANR	10608038	BreakStatement	break ;	7925:10:278090:278095	10607122	11	True				
ANR	10608039	Label	case 0x08 :	7927:8:278106:278115	10607122	12	True				
ANR	10608040	Label	case 0x09 :	7928:8:278141:278150	10607122	13	True				
ANR	10608041	ExpressionStatement	"Ins_SFVTL ( exc , args )"	7929:10:278178:278200	10607122	14	True				
ANR	10608042	CallExpression	"Ins_SFVTL ( exc , args )"		10607122	0					
ANR	10608043	Callee	Ins_SFVTL		10607122	0					
ANR	10608044	Identifier	Ins_SFVTL		10607122	0					
ANR	10608045	ArgumentList	exc		10607122	1					
ANR	10608046	Argument	exc		10607122	0					
ANR	10608047	Identifier	exc		10607122	0					
ANR	10608048	Argument	args		10607122	1					
ANR	10608049	Identifier	args		10607122	0					
ANR	10608050	BreakStatement	break ;	7930:10:278212:278217	10607122	15	True				
ANR	10608051	Label	case 0x0A :	7932:8:278228:278237	10607122	16	True				
ANR	10608052	ExpressionStatement	"Ins_SPVFS ( exc , args )"	7933:10:278262:278284	10607122	17	True				
ANR	10608053	CallExpression	"Ins_SPVFS ( exc , args )"		10607122	0					
ANR	10608054	Callee	Ins_SPVFS		10607122	0					
ANR	10608055	Identifier	Ins_SPVFS		10607122	0					
ANR	10608056	ArgumentList	exc		10607122	1					
ANR	10608057	Argument	exc		10607122	0					
ANR	10608058	Identifier	exc		10607122	0					
ANR	10608059	Argument	args		10607122	1					
ANR	10608060	Identifier	args		10607122	0					
ANR	10608061	BreakStatement	break ;	7934:10:278296:278301	10607122	18	True				
ANR	10608062	Label	case 0x0B :	7936:8:278312:278321	10607122	19	True				
ANR	10608063	ExpressionStatement	"Ins_SFVFS ( exc , args )"	7937:10:278346:278368	10607122	20	True				
ANR	10608064	CallExpression	"Ins_SFVFS ( exc , args )"		10607122	0					
ANR	10608065	Callee	Ins_SFVFS		10607122	0					
ANR	10608066	Identifier	Ins_SFVFS		10607122	0					
ANR	10608067	ArgumentList	exc		10607122	1					
ANR	10608068	Argument	exc		10607122	0					
ANR	10608069	Identifier	exc		10607122	0					
ANR	10608070	Argument	args		10607122	1					
ANR	10608071	Identifier	args		10607122	0					
ANR	10608072	BreakStatement	break ;	7938:10:278380:278385	10607122	21	True				
ANR	10608073	Label	case 0x0C :	7940:8:278396:278405	10607122	22	True				
ANR	10608074	ExpressionStatement	"Ins_GPV ( exc , args )"	7941:10:278428:278448	10607122	23	True				
ANR	10608075	CallExpression	"Ins_GPV ( exc , args )"		10607122	0					
ANR	10608076	Callee	Ins_GPV		10607122	0					
ANR	10608077	Identifier	Ins_GPV		10607122	0					
ANR	10608078	ArgumentList	exc		10607122	1					
ANR	10608079	Argument	exc		10607122	0					
ANR	10608080	Identifier	exc		10607122	0					
ANR	10608081	Argument	args		10607122	1					
ANR	10608082	Identifier	args		10607122	0					
ANR	10608083	BreakStatement	break ;	7942:10:278460:278465	10607122	24	True				
ANR	10608084	Label	case 0x0D :	7944:8:278476:278485	10607122	25	True				
ANR	10608085	ExpressionStatement	"Ins_GFV ( exc , args )"	7945:10:278508:278528	10607122	26	True				
ANR	10608086	CallExpression	"Ins_GFV ( exc , args )"		10607122	0					
ANR	10608087	Callee	Ins_GFV		10607122	0					
ANR	10608088	Identifier	Ins_GFV		10607122	0					
ANR	10608089	ArgumentList	exc		10607122	1					
ANR	10608090	Argument	exc		10607122	0					
ANR	10608091	Identifier	exc		10607122	0					
ANR	10608092	Argument	args		10607122	1					
ANR	10608093	Identifier	args		10607122	0					
ANR	10608094	BreakStatement	break ;	7946:10:278540:278545	10607122	27	True				
ANR	10608095	Label	case 0x0E :	7948:8:278556:278565	10607122	28	True				
ANR	10608096	ExpressionStatement	Ins_SFVTPV ( exc )	7949:10:278591:278608	10607122	29	True				
ANR	10608097	CallExpression	Ins_SFVTPV ( exc )		10607122	0					
ANR	10608098	Callee	Ins_SFVTPV		10607122	0					
ANR	10608099	Identifier	Ins_SFVTPV		10607122	0					
ANR	10608100	ArgumentList	exc		10607122	1					
ANR	10608101	Argument	exc		10607122	0					
ANR	10608102	Identifier	exc		10607122	0					
ANR	10608103	BreakStatement	break ;	7950:10:278620:278625	10607122	30	True				
ANR	10608104	Label	case 0x0F :	7952:8:278636:278645	10607122	31	True				
ANR	10608105	ExpressionStatement	"Ins_ISECT ( exc , args )"	7953:10:278671:278693	10607122	32	True				
ANR	10608106	CallExpression	"Ins_ISECT ( exc , args )"		10607122	0					
ANR	10608107	Callee	Ins_ISECT		10607122	0					
ANR	10608108	Identifier	Ins_ISECT		10607122	0					
ANR	10608109	ArgumentList	exc		10607122	1					
ANR	10608110	Argument	exc		10607122	0					
ANR	10608111	Identifier	exc		10607122	0					
ANR	10608112	Argument	args		10607122	1					
ANR	10608113	Identifier	args		10607122	0					
ANR	10608114	BreakStatement	break ;	7954:10:278705:278710	10607122	33	True				
ANR	10608115	Label	case 0x10 :	7956:8:278721:278730	10607122	34	True				
ANR	10608116	ExpressionStatement	"Ins_SRP0 ( exc , args )"	7957:10:278754:278775	10607122	35	True				
ANR	10608117	CallExpression	"Ins_SRP0 ( exc , args )"		10607122	0					
ANR	10608118	Callee	Ins_SRP0		10607122	0					
ANR	10608119	Identifier	Ins_SRP0		10607122	0					
ANR	10608120	ArgumentList	exc		10607122	1					
ANR	10608121	Argument	exc		10607122	0					
ANR	10608122	Identifier	exc		10607122	0					
ANR	10608123	Argument	args		10607122	1					
ANR	10608124	Identifier	args		10607122	0					
ANR	10608125	BreakStatement	break ;	7958:10:278787:278792	10607122	36	True				
ANR	10608126	Label	case 0x11 :	7960:8:278803:278812	10607122	37	True				
ANR	10608127	ExpressionStatement	"Ins_SRP1 ( exc , args )"	7961:10:278836:278857	10607122	38	True				
ANR	10608128	CallExpression	"Ins_SRP1 ( exc , args )"		10607122	0					
ANR	10608129	Callee	Ins_SRP1		10607122	0					
ANR	10608130	Identifier	Ins_SRP1		10607122	0					
ANR	10608131	ArgumentList	exc		10607122	1					
ANR	10608132	Argument	exc		10607122	0					
ANR	10608133	Identifier	exc		10607122	0					
ANR	10608134	Argument	args		10607122	1					
ANR	10608135	Identifier	args		10607122	0					
ANR	10608136	BreakStatement	break ;	7962:10:278869:278874	10607122	39	True				
ANR	10608137	Label	case 0x12 :	7964:8:278885:278894	10607122	40	True				
ANR	10608138	ExpressionStatement	"Ins_SRP2 ( exc , args )"	7965:10:278918:278939	10607122	41	True				
ANR	10608139	CallExpression	"Ins_SRP2 ( exc , args )"		10607122	0					
ANR	10608140	Callee	Ins_SRP2		10607122	0					
ANR	10608141	Identifier	Ins_SRP2		10607122	0					
ANR	10608142	ArgumentList	exc		10607122	1					
ANR	10608143	Argument	exc		10607122	0					
ANR	10608144	Identifier	exc		10607122	0					
ANR	10608145	Argument	args		10607122	1					
ANR	10608146	Identifier	args		10607122	0					
ANR	10608147	BreakStatement	break ;	7966:10:278951:278956	10607122	42	True				
ANR	10608148	Label	case 0x13 :	7968:8:278967:278976	10607122	43	True				
ANR	10608149	ExpressionStatement	"Ins_SZP0 ( exc , args )"	7969:10:279000:279021	10607122	44	True				
ANR	10608150	CallExpression	"Ins_SZP0 ( exc , args )"		10607122	0					
ANR	10608151	Callee	Ins_SZP0		10607122	0					
ANR	10608152	Identifier	Ins_SZP0		10607122	0					
ANR	10608153	ArgumentList	exc		10607122	1					
ANR	10608154	Argument	exc		10607122	0					
ANR	10608155	Identifier	exc		10607122	0					
ANR	10608156	Argument	args		10607122	1					
ANR	10608157	Identifier	args		10607122	0					
ANR	10608158	BreakStatement	break ;	7970:10:279033:279038	10607122	45	True				
ANR	10608159	Label	case 0x14 :	7972:8:279049:279058	10607122	46	True				
ANR	10608160	ExpressionStatement	"Ins_SZP1 ( exc , args )"	7973:10:279082:279103	10607122	47	True				
ANR	10608161	CallExpression	"Ins_SZP1 ( exc , args )"		10607122	0					
ANR	10608162	Callee	Ins_SZP1		10607122	0					
ANR	10608163	Identifier	Ins_SZP1		10607122	0					
ANR	10608164	ArgumentList	exc		10607122	1					
ANR	10608165	Argument	exc		10607122	0					
ANR	10608166	Identifier	exc		10607122	0					
ANR	10608167	Argument	args		10607122	1					
ANR	10608168	Identifier	args		10607122	0					
ANR	10608169	BreakStatement	break ;	7974:10:279115:279120	10607122	48	True				
ANR	10608170	Label	case 0x15 :	7976:8:279131:279140	10607122	49	True				
ANR	10608171	ExpressionStatement	"Ins_SZP2 ( exc , args )"	7977:10:279164:279185	10607122	50	True				
ANR	10608172	CallExpression	"Ins_SZP2 ( exc , args )"		10607122	0					
ANR	10608173	Callee	Ins_SZP2		10607122	0					
ANR	10608174	Identifier	Ins_SZP2		10607122	0					
ANR	10608175	ArgumentList	exc		10607122	1					
ANR	10608176	Argument	exc		10607122	0					
ANR	10608177	Identifier	exc		10607122	0					
ANR	10608178	Argument	args		10607122	1					
ANR	10608179	Identifier	args		10607122	0					
ANR	10608180	BreakStatement	break ;	7978:10:279197:279202	10607122	51	True				
ANR	10608181	Label	case 0x16 :	7980:8:279213:279222	10607122	52	True				
ANR	10608182	ExpressionStatement	"Ins_SZPS ( exc , args )"	7981:10:279246:279267	10607122	53	True				
ANR	10608183	CallExpression	"Ins_SZPS ( exc , args )"		10607122	0					
ANR	10608184	Callee	Ins_SZPS		10607122	0					
ANR	10608185	Identifier	Ins_SZPS		10607122	0					
ANR	10608186	ArgumentList	exc		10607122	1					
ANR	10608187	Argument	exc		10607122	0					
ANR	10608188	Identifier	exc		10607122	0					
ANR	10608189	Argument	args		10607122	1					
ANR	10608190	Identifier	args		10607122	0					
ANR	10608191	BreakStatement	break ;	7982:10:279279:279284	10607122	54	True				
ANR	10608192	Label	case 0x17 :	7984:8:279295:279304	10607122	55	True				
ANR	10608193	ExpressionStatement	"Ins_SLOOP ( exc , args )"	7985:10:279329:279351	10607122	56	True				
ANR	10608194	CallExpression	"Ins_SLOOP ( exc , args )"		10607122	0					
ANR	10608195	Callee	Ins_SLOOP		10607122	0					
ANR	10608196	Identifier	Ins_SLOOP		10607122	0					
ANR	10608197	ArgumentList	exc		10607122	1					
ANR	10608198	Argument	exc		10607122	0					
ANR	10608199	Identifier	exc		10607122	0					
ANR	10608200	Argument	args		10607122	1					
ANR	10608201	Identifier	args		10607122	0					
ANR	10608202	BreakStatement	break ;	7986:10:279363:279368	10607122	57	True				
ANR	10608203	Label	case 0x18 :	7988:8:279379:279388	10607122	58	True				
ANR	10608204	ExpressionStatement	Ins_RTG ( exc )	7989:10:279411:279425	10607122	59	True				
ANR	10608205	CallExpression	Ins_RTG ( exc )		10607122	0					
ANR	10608206	Callee	Ins_RTG		10607122	0					
ANR	10608207	Identifier	Ins_RTG		10607122	0					
ANR	10608208	ArgumentList	exc		10607122	1					
ANR	10608209	Argument	exc		10607122	0					
ANR	10608210	Identifier	exc		10607122	0					
ANR	10608211	BreakStatement	break ;	7990:10:279437:279442	10607122	60	True				
ANR	10608212	Label	case 0x19 :	7992:8:279453:279462	10607122	61	True				
ANR	10608213	ExpressionStatement	Ins_RTHG ( exc )	7993:10:279486:279501	10607122	62	True				
ANR	10608214	CallExpression	Ins_RTHG ( exc )		10607122	0					
ANR	10608215	Callee	Ins_RTHG		10607122	0					
ANR	10608216	Identifier	Ins_RTHG		10607122	0					
ANR	10608217	ArgumentList	exc		10607122	1					
ANR	10608218	Argument	exc		10607122	0					
ANR	10608219	Identifier	exc		10607122	0					
ANR	10608220	BreakStatement	break ;	7994:10:279513:279518	10607122	63	True				
ANR	10608221	Label	case 0x1A :	7996:8:279529:279538	10607122	64	True				
ANR	10608222	ExpressionStatement	"Ins_SMD ( exc , args )"	7997:10:279561:279581	10607122	65	True				
ANR	10608223	CallExpression	"Ins_SMD ( exc , args )"		10607122	0					
ANR	10608224	Callee	Ins_SMD		10607122	0					
ANR	10608225	Identifier	Ins_SMD		10607122	0					
ANR	10608226	ArgumentList	exc		10607122	1					
ANR	10608227	Argument	exc		10607122	0					
ANR	10608228	Identifier	exc		10607122	0					
ANR	10608229	Argument	args		10607122	1					
ANR	10608230	Identifier	args		10607122	0					
ANR	10608231	BreakStatement	break ;	7998:10:279593:279598	10607122	66	True				
ANR	10608232	Label	case 0x1B :	8000:8:279609:279618	10607122	67	True				
ANR	10608233	ExpressionStatement	Ins_ELSE ( exc )	8001:10:279642:279657	10607122	68	True				
ANR	10608234	CallExpression	Ins_ELSE ( exc )		10607122	0					
ANR	10608235	Callee	Ins_ELSE		10607122	0					
ANR	10608236	Identifier	Ins_ELSE		10607122	0					
ANR	10608237	ArgumentList	exc		10607122	1					
ANR	10608238	Argument	exc		10607122	0					
ANR	10608239	Identifier	exc		10607122	0					
ANR	10608240	BreakStatement	break ;	8002:10:279669:279674	10607122	69	True				
ANR	10608241	Label	case 0x1C :	8004:8:279685:279694	10607122	70	True				
ANR	10608242	ExpressionStatement	"Ins_JMPR ( exc , args )"	8005:10:279718:279739	10607122	71	True				
ANR	10608243	CallExpression	"Ins_JMPR ( exc , args )"		10607122	0					
ANR	10608244	Callee	Ins_JMPR		10607122	0					
ANR	10608245	Identifier	Ins_JMPR		10607122	0					
ANR	10608246	ArgumentList	exc		10607122	1					
ANR	10608247	Argument	exc		10607122	0					
ANR	10608248	Identifier	exc		10607122	0					
ANR	10608249	Argument	args		10607122	1					
ANR	10608250	Identifier	args		10607122	0					
ANR	10608251	BreakStatement	break ;	8006:10:279751:279756	10607122	72	True				
ANR	10608252	Label	case 0x1D :	8008:8:279767:279776	10607122	73	True				
ANR	10608253	ExpressionStatement	"Ins_SCVTCI ( exc , args )"	8009:10:279802:279825	10607122	74	True				
ANR	10608254	CallExpression	"Ins_SCVTCI ( exc , args )"		10607122	0					
ANR	10608255	Callee	Ins_SCVTCI		10607122	0					
ANR	10608256	Identifier	Ins_SCVTCI		10607122	0					
ANR	10608257	ArgumentList	exc		10607122	1					
ANR	10608258	Argument	exc		10607122	0					
ANR	10608259	Identifier	exc		10607122	0					
ANR	10608260	Argument	args		10607122	1					
ANR	10608261	Identifier	args		10607122	0					
ANR	10608262	BreakStatement	break ;	8010:10:279837:279842	10607122	75	True				
ANR	10608263	Label	case 0x1E :	8012:8:279853:279862	10607122	76	True				
ANR	10608264	ExpressionStatement	"Ins_SSWCI ( exc , args )"	8013:10:279887:279909	10607122	77	True				
ANR	10608265	CallExpression	"Ins_SSWCI ( exc , args )"		10607122	0					
ANR	10608266	Callee	Ins_SSWCI		10607122	0					
ANR	10608267	Identifier	Ins_SSWCI		10607122	0					
ANR	10608268	ArgumentList	exc		10607122	1					
ANR	10608269	Argument	exc		10607122	0					
ANR	10608270	Identifier	exc		10607122	0					
ANR	10608271	Argument	args		10607122	1					
ANR	10608272	Identifier	args		10607122	0					
ANR	10608273	BreakStatement	break ;	8014:10:279921:279926	10607122	78	True				
ANR	10608274	Label	case 0x1F :	8016:8:279937:279946	10607122	79	True				
ANR	10608275	ExpressionStatement	"Ins_SSW ( exc , args )"	8017:10:279969:279989	10607122	80	True				
ANR	10608276	CallExpression	"Ins_SSW ( exc , args )"		10607122	0					
ANR	10608277	Callee	Ins_SSW		10607122	0					
ANR	10608278	Identifier	Ins_SSW		10607122	0					
ANR	10608279	ArgumentList	exc		10607122	1					
ANR	10608280	Argument	exc		10607122	0					
ANR	10608281	Identifier	exc		10607122	0					
ANR	10608282	Argument	args		10607122	1					
ANR	10608283	Identifier	args		10607122	0					
ANR	10608284	BreakStatement	break ;	8018:10:280001:280006	10607122	81	True				
ANR	10608285	Label	case 0x20 :	8020:8:280017:280026	10607122	82	True				
ANR	10608286	ExpressionStatement	Ins_DUP ( args )	8021:10:280049:280064	10607122	83	True				
ANR	10608287	CallExpression	Ins_DUP ( args )		10607122	0					
ANR	10608288	Callee	Ins_DUP		10607122	0					
ANR	10608289	Identifier	Ins_DUP		10607122	0					
ANR	10608290	ArgumentList	args		10607122	1					
ANR	10608291	Argument	args		10607122	0					
ANR	10608292	Identifier	args		10607122	0					
ANR	10608293	BreakStatement	break ;	8022:10:280076:280081	10607122	84	True				
ANR	10608294	Label	case 0x21 :	8024:8:280092:280101	10607122	85	True				
ANR	10608295	ExpressionStatement	Ins_POP ( )	8025:10:280124:280133	10607122	86	True				
ANR	10608296	CallExpression	Ins_POP ( )		10607122	0					
ANR	10608297	Callee	Ins_POP		10607122	0					
ANR	10608298	Identifier	Ins_POP		10607122	0					
ANR	10608299	ArgumentList			10607122	1					
ANR	10608300	BreakStatement	break ;	8026:10:280145:280150	10607122	87	True				
ANR	10608301	Label	case 0x22 :	8028:8:280161:280170	10607122	88	True				
ANR	10608302	ExpressionStatement	Ins_CLEAR ( exc )	8029:10:280195:280211	10607122	89	True				
ANR	10608303	CallExpression	Ins_CLEAR ( exc )		10607122	0					
ANR	10608304	Callee	Ins_CLEAR		10607122	0					
ANR	10608305	Identifier	Ins_CLEAR		10607122	0					
ANR	10608306	ArgumentList	exc		10607122	1					
ANR	10608307	Argument	exc		10607122	0					
ANR	10608308	Identifier	exc		10607122	0					
ANR	10608309	BreakStatement	break ;	8030:10:280223:280228	10607122	90	True				
ANR	10608310	Label	case 0x23 :	8032:8:280239:280248	10607122	91	True				
ANR	10608311	ExpressionStatement	Ins_SWAP ( args )	8033:10:280272:280288	10607122	92	True				
ANR	10608312	CallExpression	Ins_SWAP ( args )		10607122	0					
ANR	10608313	Callee	Ins_SWAP		10607122	0					
ANR	10608314	Identifier	Ins_SWAP		10607122	0					
ANR	10608315	ArgumentList	args		10607122	1					
ANR	10608316	Argument	args		10607122	0					
ANR	10608317	Identifier	args		10607122	0					
ANR	10608318	BreakStatement	break ;	8034:10:280300:280305	10607122	93	True				
ANR	10608319	Label	case 0x24 :	8036:8:280316:280325	10607122	94	True				
ANR	10608320	ExpressionStatement	"Ins_DEPTH ( exc , args )"	8037:10:280350:280372	10607122	95	True				
ANR	10608321	CallExpression	"Ins_DEPTH ( exc , args )"		10607122	0					
ANR	10608322	Callee	Ins_DEPTH		10607122	0					
ANR	10608323	Identifier	Ins_DEPTH		10607122	0					
ANR	10608324	ArgumentList	exc		10607122	1					
ANR	10608325	Argument	exc		10607122	0					
ANR	10608326	Identifier	exc		10607122	0					
ANR	10608327	Argument	args		10607122	1					
ANR	10608328	Identifier	args		10607122	0					
ANR	10608329	BreakStatement	break ;	8038:10:280384:280389	10607122	96	True				
ANR	10608330	Label	case 0x25 :	8040:8:280400:280409	10607122	97	True				
ANR	10608331	ExpressionStatement	"Ins_CINDEX ( exc , args )"	8041:10:280435:280458	10607122	98	True				
ANR	10608332	CallExpression	"Ins_CINDEX ( exc , args )"		10607122	0					
ANR	10608333	Callee	Ins_CINDEX		10607122	0					
ANR	10608334	Identifier	Ins_CINDEX		10607122	0					
ANR	10608335	ArgumentList	exc		10607122	1					
ANR	10608336	Argument	exc		10607122	0					
ANR	10608337	Identifier	exc		10607122	0					
ANR	10608338	Argument	args		10607122	1					
ANR	10608339	Identifier	args		10607122	0					
ANR	10608340	BreakStatement	break ;	8042:10:280470:280475	10607122	99	True				
ANR	10608341	Label	case 0x26 :	8044:8:280486:280495	10607122	100	True				
ANR	10608342	ExpressionStatement	"Ins_MINDEX ( exc , args )"	8045:10:280521:280544	10607122	101	True				
ANR	10608343	CallExpression	"Ins_MINDEX ( exc , args )"		10607122	0					
ANR	10608344	Callee	Ins_MINDEX		10607122	0					
ANR	10608345	Identifier	Ins_MINDEX		10607122	0					
ANR	10608346	ArgumentList	exc		10607122	1					
ANR	10608347	Argument	exc		10607122	0					
ANR	10608348	Identifier	exc		10607122	0					
ANR	10608349	Argument	args		10607122	1					
ANR	10608350	Identifier	args		10607122	0					
ANR	10608351	BreakStatement	break ;	8046:10:280556:280561	10607122	102	True				
ANR	10608352	Label	case 0x27 :	8048:8:280572:280581	10607122	103	True				
ANR	10608353	ExpressionStatement	"Ins_ALIGNPTS ( exc , args )"	8049:10:280609:280634	10607122	104	True				
ANR	10608354	CallExpression	"Ins_ALIGNPTS ( exc , args )"		10607122	0					
ANR	10608355	Callee	Ins_ALIGNPTS		10607122	0					
ANR	10608356	Identifier	Ins_ALIGNPTS		10607122	0					
ANR	10608357	ArgumentList	exc		10607122	1					
ANR	10608358	Argument	exc		10607122	0					
ANR	10608359	Identifier	exc		10607122	0					
ANR	10608360	Argument	args		10607122	1					
ANR	10608361	Identifier	args		10607122	0					
ANR	10608362	BreakStatement	break ;	8050:10:280646:280651	10607122	105	True				
ANR	10608363	Label	case 0x28 :	8052:8:280662:280671	10607122	106	True				
ANR	10608364	ExpressionStatement	Ins_UNKNOWN ( exc )	8053:10:280694:280712	10607122	107	True				
ANR	10608365	CallExpression	Ins_UNKNOWN ( exc )		10607122	0					
ANR	10608366	Callee	Ins_UNKNOWN		10607122	0					
ANR	10608367	Identifier	Ins_UNKNOWN		10607122	0					
ANR	10608368	ArgumentList	exc		10607122	1					
ANR	10608369	Argument	exc		10607122	0					
ANR	10608370	Identifier	exc		10607122	0					
ANR	10608371	BreakStatement	break ;	8054:10:280724:280729	10607122	108	True				
ANR	10608372	Label	case 0x29 :	8056:8:280740:280749	10607122	109	True				
ANR	10608373	ExpressionStatement	"Ins_UTP ( exc , args )"	8057:10:280772:280792	10607122	110	True				
ANR	10608374	CallExpression	"Ins_UTP ( exc , args )"		10607122	0					
ANR	10608375	Callee	Ins_UTP		10607122	0					
ANR	10608376	Identifier	Ins_UTP		10607122	0					
ANR	10608377	ArgumentList	exc		10607122	1					
ANR	10608378	Argument	exc		10607122	0					
ANR	10608379	Identifier	exc		10607122	0					
ANR	10608380	Argument	args		10607122	1					
ANR	10608381	Identifier	args		10607122	0					
ANR	10608382	BreakStatement	break ;	8058:10:280804:280809	10607122	111	True				
ANR	10608383	Label	case 0x2A :	8060:8:280820:280829	10607122	112	True				
ANR	10608384	ExpressionStatement	"Ins_LOOPCALL ( exc , args )"	8061:10:280857:280882	10607122	113	True				
ANR	10608385	CallExpression	"Ins_LOOPCALL ( exc , args )"		10607122	0					
ANR	10608386	Callee	Ins_LOOPCALL		10607122	0					
ANR	10608387	Identifier	Ins_LOOPCALL		10607122	0					
ANR	10608388	ArgumentList	exc		10607122	1					
ANR	10608389	Argument	exc		10607122	0					
ANR	10608390	Identifier	exc		10607122	0					
ANR	10608391	Argument	args		10607122	1					
ANR	10608392	Identifier	args		10607122	0					
ANR	10608393	BreakStatement	break ;	8062:10:280894:280899	10607122	114	True				
ANR	10608394	Label	case 0x2B :	8064:8:280910:280919	10607122	115	True				
ANR	10608395	ExpressionStatement	"Ins_CALL ( exc , args )"	8065:10:280943:280964	10607122	116	True				
ANR	10608396	CallExpression	"Ins_CALL ( exc , args )"		10607122	0					
ANR	10608397	Callee	Ins_CALL		10607122	0					
ANR	10608398	Identifier	Ins_CALL		10607122	0					
ANR	10608399	ArgumentList	exc		10607122	1					
ANR	10608400	Argument	exc		10607122	0					
ANR	10608401	Identifier	exc		10607122	0					
ANR	10608402	Argument	args		10607122	1					
ANR	10608403	Identifier	args		10607122	0					
ANR	10608404	BreakStatement	break ;	8066:10:280976:280981	10607122	117	True				
ANR	10608405	Label	case 0x2C :	8068:8:280992:281001	10607122	118	True				
ANR	10608406	ExpressionStatement	"Ins_FDEF ( exc , args )"	8069:10:281025:281046	10607122	119	True				
ANR	10608407	CallExpression	"Ins_FDEF ( exc , args )"		10607122	0					
ANR	10608408	Callee	Ins_FDEF		10607122	0					
ANR	10608409	Identifier	Ins_FDEF		10607122	0					
ANR	10608410	ArgumentList	exc		10607122	1					
ANR	10608411	Argument	exc		10607122	0					
ANR	10608412	Identifier	exc		10607122	0					
ANR	10608413	Argument	args		10607122	1					
ANR	10608414	Identifier	args		10607122	0					
ANR	10608415	BreakStatement	break ;	8070:10:281058:281063	10607122	120	True				
ANR	10608416	Label	case 0x2D :	8072:8:281074:281083	10607122	121	True				
ANR	10608417	ExpressionStatement	Ins_ENDF ( exc )	8073:10:281107:281122	10607122	122	True				
ANR	10608418	CallExpression	Ins_ENDF ( exc )		10607122	0					
ANR	10608419	Callee	Ins_ENDF		10607122	0					
ANR	10608420	Identifier	Ins_ENDF		10607122	0					
ANR	10608421	ArgumentList	exc		10607122	1					
ANR	10608422	Argument	exc		10607122	0					
ANR	10608423	Identifier	exc		10607122	0					
ANR	10608424	BreakStatement	break ;	8074:10:281134:281139	10607122	123	True				
ANR	10608425	Label	case 0x2E :	8076:8:281150:281159	10607122	124	True				
ANR	10608426	Label	case 0x2F :	8077:8:281181:281190	10607122	125	True				
ANR	10608427	ExpressionStatement	"Ins_MDAP ( exc , args )"	8078:10:281214:281235	10607122	126	True				
ANR	10608428	CallExpression	"Ins_MDAP ( exc , args )"		10607122	0					
ANR	10608429	Callee	Ins_MDAP		10607122	0					
ANR	10608430	Identifier	Ins_MDAP		10607122	0					
ANR	10608431	ArgumentList	exc		10607122	1					
ANR	10608432	Argument	exc		10607122	0					
ANR	10608433	Identifier	exc		10607122	0					
ANR	10608434	Argument	args		10607122	1					
ANR	10608435	Identifier	args		10607122	0					
ANR	10608436	BreakStatement	break ;	8079:10:281247:281252	10607122	127	True				
ANR	10608437	Label	case 0x30 :	8081:8:281263:281272	10607122	128	True				
ANR	10608438	Label	case 0x31 :	8082:8:281293:281302	10607122	129	True				
ANR	10608439	ExpressionStatement	Ins_IUP ( exc )	8083:10:281325:281339	10607122	130	True				
ANR	10608440	CallExpression	Ins_IUP ( exc )		10607122	0					
ANR	10608441	Callee	Ins_IUP		10607122	0					
ANR	10608442	Identifier	Ins_IUP		10607122	0					
ANR	10608443	ArgumentList	exc		10607122	1					
ANR	10608444	Argument	exc		10607122	0					
ANR	10608445	Identifier	exc		10607122	0					
ANR	10608446	BreakStatement	break ;	8084:10:281351:281356	10607122	131	True				
ANR	10608447	Label	case 0x32 :	8086:8:281367:281376	10607122	132	True				
ANR	10608448	Label	case 0x33 :	8087:8:281397:281406	10607122	133	True				
ANR	10608449	ExpressionStatement	Ins_SHP ( exc )	8088:10:281429:281443	10607122	134	True				
ANR	10608450	CallExpression	Ins_SHP ( exc )		10607122	0					
ANR	10608451	Callee	Ins_SHP		10607122	0					
ANR	10608452	Identifier	Ins_SHP		10607122	0					
ANR	10608453	ArgumentList	exc		10607122	1					
ANR	10608454	Argument	exc		10607122	0					
ANR	10608455	Identifier	exc		10607122	0					
ANR	10608456	BreakStatement	break ;	8089:10:281455:281460	10607122	135	True				
ANR	10608457	Label	case 0x34 :	8091:8:281471:281480	10607122	136	True				
ANR	10608458	Label	case 0x35 :	8092:8:281501:281510	10607122	137	True				
ANR	10608459	ExpressionStatement	"Ins_SHC ( exc , args )"	8093:10:281533:281553	10607122	138	True				
ANR	10608460	CallExpression	"Ins_SHC ( exc , args )"		10607122	0					
ANR	10608461	Callee	Ins_SHC		10607122	0					
ANR	10608462	Identifier	Ins_SHC		10607122	0					
ANR	10608463	ArgumentList	exc		10607122	1					
ANR	10608464	Argument	exc		10607122	0					
ANR	10608465	Identifier	exc		10607122	0					
ANR	10608466	Argument	args		10607122	1					
ANR	10608467	Identifier	args		10607122	0					
ANR	10608468	BreakStatement	break ;	8094:10:281565:281570	10607122	139	True				
ANR	10608469	Label	case 0x36 :	8096:8:281581:281590	10607122	140	True				
ANR	10608470	Label	case 0x37 :	8097:8:281611:281620	10607122	141	True				
ANR	10608471	ExpressionStatement	"Ins_SHZ ( exc , args )"	8098:10:281643:281663	10607122	142	True				
ANR	10608472	CallExpression	"Ins_SHZ ( exc , args )"		10607122	0					
ANR	10608473	Callee	Ins_SHZ		10607122	0					
ANR	10608474	Identifier	Ins_SHZ		10607122	0					
ANR	10608475	ArgumentList	exc		10607122	1					
ANR	10608476	Argument	exc		10607122	0					
ANR	10608477	Identifier	exc		10607122	0					
ANR	10608478	Argument	args		10607122	1					
ANR	10608479	Identifier	args		10607122	0					
ANR	10608480	BreakStatement	break ;	8099:10:281675:281680	10607122	143	True				
ANR	10608481	Label	case 0x38 :	8101:8:281691:281700	10607122	144	True				
ANR	10608482	ExpressionStatement	"Ins_SHPIX ( exc , args )"	8102:10:281725:281747	10607122	145	True				
ANR	10608483	CallExpression	"Ins_SHPIX ( exc , args )"		10607122	0					
ANR	10608484	Callee	Ins_SHPIX		10607122	0					
ANR	10608485	Identifier	Ins_SHPIX		10607122	0					
ANR	10608486	ArgumentList	exc		10607122	1					
ANR	10608487	Argument	exc		10607122	0					
ANR	10608488	Identifier	exc		10607122	0					
ANR	10608489	Argument	args		10607122	1					
ANR	10608490	Identifier	args		10607122	0					
ANR	10608491	BreakStatement	break ;	8103:10:281759:281764	10607122	146	True				
ANR	10608492	Label	case 0x39 :	8105:8:281775:281784	10607122	147	True				
ANR	10608493	ExpressionStatement	Ins_IP ( exc )	8106:10:281809:281822	10607122	148	True				
ANR	10608494	CallExpression	Ins_IP ( exc )		10607122	0					
ANR	10608495	Callee	Ins_IP		10607122	0					
ANR	10608496	Identifier	Ins_IP		10607122	0					
ANR	10608497	ArgumentList	exc		10607122	1					
ANR	10608498	Argument	exc		10607122	0					
ANR	10608499	Identifier	exc		10607122	0					
ANR	10608500	BreakStatement	break ;	8107:10:281834:281839	10607122	149	True				
ANR	10608501	Label	case 0x3A :	8109:8:281850:281859	10607122	150	True				
ANR	10608502	Label	case 0x3B :	8110:8:281882:281891	10607122	151	True				
ANR	10608503	ExpressionStatement	"Ins_MSIRP ( exc , args )"	8111:10:281916:281938	10607122	152	True				
ANR	10608504	CallExpression	"Ins_MSIRP ( exc , args )"		10607122	0					
ANR	10608505	Callee	Ins_MSIRP		10607122	0					
ANR	10608506	Identifier	Ins_MSIRP		10607122	0					
ANR	10608507	ArgumentList	exc		10607122	1					
ANR	10608508	Argument	exc		10607122	0					
ANR	10608509	Identifier	exc		10607122	0					
ANR	10608510	Argument	args		10607122	1					
ANR	10608511	Identifier	args		10607122	0					
ANR	10608512	BreakStatement	break ;	8112:10:281950:281955	10607122	153	True				
ANR	10608513	Label	case 0x3C :	8114:8:281966:281975	10607122	154	True				
ANR	10608514	ExpressionStatement	Ins_ALIGNRP ( exc )	8115:10:282002:282020	10607122	155	True				
ANR	10608515	CallExpression	Ins_ALIGNRP ( exc )		10607122	0					
ANR	10608516	Callee	Ins_ALIGNRP		10607122	0					
ANR	10608517	Identifier	Ins_ALIGNRP		10607122	0					
ANR	10608518	ArgumentList	exc		10607122	1					
ANR	10608519	Argument	exc		10607122	0					
ANR	10608520	Identifier	exc		10607122	0					
ANR	10608521	BreakStatement	break ;	8116:10:282032:282037	10607122	156	True				
ANR	10608522	Label	case 0x3D :	8118:8:282048:282057	10607122	157	True				
ANR	10608523	ExpressionStatement	Ins_RTDG ( exc )	8119:10:282081:282096	10607122	158	True				
ANR	10608524	CallExpression	Ins_RTDG ( exc )		10607122	0					
ANR	10608525	Callee	Ins_RTDG		10607122	0					
ANR	10608526	Identifier	Ins_RTDG		10607122	0					
ANR	10608527	ArgumentList	exc		10607122	1					
ANR	10608528	Argument	exc		10607122	0					
ANR	10608529	Identifier	exc		10607122	0					
ANR	10608530	BreakStatement	break ;	8120:10:282108:282113	10607122	159	True				
ANR	10608531	Label	case 0x3E :	8122:8:282124:282133	10607122	160	True				
ANR	10608532	Label	case 0x3F :	8123:8:282155:282164	10607122	161	True				
ANR	10608533	ExpressionStatement	"Ins_MIAP ( exc , args )"	8124:10:282188:282209	10607122	162	True				
ANR	10608534	CallExpression	"Ins_MIAP ( exc , args )"		10607122	0					
ANR	10608535	Callee	Ins_MIAP		10607122	0					
ANR	10608536	Identifier	Ins_MIAP		10607122	0					
ANR	10608537	ArgumentList	exc		10607122	1					
ANR	10608538	Argument	exc		10607122	0					
ANR	10608539	Identifier	exc		10607122	0					
ANR	10608540	Argument	args		10607122	1					
ANR	10608541	Identifier	args		10607122	0					
ANR	10608542	BreakStatement	break ;	8125:10:282221:282226	10607122	163	True				
ANR	10608543	Label	case 0x40 :	8127:8:282237:282246	10607122	164	True				
ANR	10608544	ExpressionStatement	"Ins_NPUSHB ( exc , args )"	8128:10:282272:282295	10607122	165	True				
ANR	10608545	CallExpression	"Ins_NPUSHB ( exc , args )"		10607122	0					
ANR	10608546	Callee	Ins_NPUSHB		10607122	0					
ANR	10608547	Identifier	Ins_NPUSHB		10607122	0					
ANR	10608548	ArgumentList	exc		10607122	1					
ANR	10608549	Argument	exc		10607122	0					
ANR	10608550	Identifier	exc		10607122	0					
ANR	10608551	Argument	args		10607122	1					
ANR	10608552	Identifier	args		10607122	0					
ANR	10608553	BreakStatement	break ;	8129:10:282307:282312	10607122	166	True				
ANR	10608554	Label	case 0x41 :	8131:8:282323:282332	10607122	167	True				
ANR	10608555	ExpressionStatement	"Ins_NPUSHW ( exc , args )"	8132:10:282358:282381	10607122	168	True				
ANR	10608556	CallExpression	"Ins_NPUSHW ( exc , args )"		10607122	0					
ANR	10608557	Callee	Ins_NPUSHW		10607122	0					
ANR	10608558	Identifier	Ins_NPUSHW		10607122	0					
ANR	10608559	ArgumentList	exc		10607122	1					
ANR	10608560	Argument	exc		10607122	0					
ANR	10608561	Identifier	exc		10607122	0					
ANR	10608562	Argument	args		10607122	1					
ANR	10608563	Identifier	args		10607122	0					
ANR	10608564	BreakStatement	break ;	8133:10:282393:282398	10607122	169	True				
ANR	10608565	Label	case 0x42 :	8135:8:282409:282418	10607122	170	True				
ANR	10608566	ExpressionStatement	"Ins_WS ( exc , args )"	8136:10:282440:282459	10607122	171	True				
ANR	10608567	CallExpression	"Ins_WS ( exc , args )"		10607122	0					
ANR	10608568	Callee	Ins_WS		10607122	0					
ANR	10608569	Identifier	Ins_WS		10607122	0					
ANR	10608570	ArgumentList	exc		10607122	1					
ANR	10608571	Argument	exc		10607122	0					
ANR	10608572	Identifier	exc		10607122	0					
ANR	10608573	Argument	args		10607122	1					
ANR	10608574	Identifier	args		10607122	0					
ANR	10608575	BreakStatement	break ;	8137:10:282471:282476	10607122	172	True				
ANR	10608576	Label	case 0x43 :	8139:8:282487:282496	10607122	173	True				
ANR	10608577	ExpressionStatement	"Ins_RS ( exc , args )"	8140:10:282518:282537	10607122	174	True				
ANR	10608578	CallExpression	"Ins_RS ( exc , args )"		10607122	0					
ANR	10608579	Callee	Ins_RS		10607122	0					
ANR	10608580	Identifier	Ins_RS		10607122	0					
ANR	10608581	ArgumentList	exc		10607122	1					
ANR	10608582	Argument	exc		10607122	0					
ANR	10608583	Identifier	exc		10607122	0					
ANR	10608584	Argument	args		10607122	1					
ANR	10608585	Identifier	args		10607122	0					
ANR	10608586	BreakStatement	break ;	8141:10:282549:282554	10607122	175	True				
ANR	10608587	Label	case 0x44 :	8143:8:282565:282574	10607122	176	True				
ANR	10608588	ExpressionStatement	"Ins_WCVTP ( exc , args )"	8144:10:282599:282621	10607122	177	True				
ANR	10608589	CallExpression	"Ins_WCVTP ( exc , args )"		10607122	0					
ANR	10608590	Callee	Ins_WCVTP		10607122	0					
ANR	10608591	Identifier	Ins_WCVTP		10607122	0					
ANR	10608592	ArgumentList	exc		10607122	1					
ANR	10608593	Argument	exc		10607122	0					
ANR	10608594	Identifier	exc		10607122	0					
ANR	10608595	Argument	args		10607122	1					
ANR	10608596	Identifier	args		10607122	0					
ANR	10608597	BreakStatement	break ;	8145:10:282633:282638	10607122	178	True				
ANR	10608598	Label	case 0x45 :	8147:8:282649:282658	10607122	179	True				
ANR	10608599	ExpressionStatement	"Ins_RCVT ( exc , args )"	8148:10:282682:282703	10607122	180	True				
ANR	10608600	CallExpression	"Ins_RCVT ( exc , args )"		10607122	0					
ANR	10608601	Callee	Ins_RCVT		10607122	0					
ANR	10608602	Identifier	Ins_RCVT		10607122	0					
ANR	10608603	ArgumentList	exc		10607122	1					
ANR	10608604	Argument	exc		10607122	0					
ANR	10608605	Identifier	exc		10607122	0					
ANR	10608606	Argument	args		10607122	1					
ANR	10608607	Identifier	args		10607122	0					
ANR	10608608	BreakStatement	break ;	8149:10:282715:282720	10607122	181	True				
ANR	10608609	Label	case 0x46 :	8151:8:282731:282740	10607122	182	True				
ANR	10608610	Label	case 0x47 :	8152:8:282760:282769	10607122	183	True				
ANR	10608611	ExpressionStatement	"Ins_GC ( exc , args )"	8153:10:282791:282810	10607122	184	True				
ANR	10608612	CallExpression	"Ins_GC ( exc , args )"		10607122	0					
ANR	10608613	Callee	Ins_GC		10607122	0					
ANR	10608614	Identifier	Ins_GC		10607122	0					
ANR	10608615	ArgumentList	exc		10607122	1					
ANR	10608616	Argument	exc		10607122	0					
ANR	10608617	Identifier	exc		10607122	0					
ANR	10608618	Argument	args		10607122	1					
ANR	10608619	Identifier	args		10607122	0					
ANR	10608620	BreakStatement	break ;	8154:10:282822:282827	10607122	185	True				
ANR	10608621	Label	case 0x48 :	8156:8:282838:282847	10607122	186	True				
ANR	10608622	ExpressionStatement	"Ins_SCFS ( exc , args )"	8157:10:282871:282892	10607122	187	True				
ANR	10608623	CallExpression	"Ins_SCFS ( exc , args )"		10607122	0					
ANR	10608624	Callee	Ins_SCFS		10607122	0					
ANR	10608625	Identifier	Ins_SCFS		10607122	0					
ANR	10608626	ArgumentList	exc		10607122	1					
ANR	10608627	Argument	exc		10607122	0					
ANR	10608628	Identifier	exc		10607122	0					
ANR	10608629	Argument	args		10607122	1					
ANR	10608630	Identifier	args		10607122	0					
ANR	10608631	BreakStatement	break ;	8158:10:282904:282909	10607122	188	True				
ANR	10608632	Label	case 0x49 :	8160:8:282920:282929	10607122	189	True				
ANR	10608633	Label	case 0x4A :	8161:8:282949:282958	10607122	190	True				
ANR	10608634	ExpressionStatement	"Ins_MD ( exc , args )"	8162:10:282980:282999	10607122	191	True				
ANR	10608635	CallExpression	"Ins_MD ( exc , args )"		10607122	0					
ANR	10608636	Callee	Ins_MD		10607122	0					
ANR	10608637	Identifier	Ins_MD		10607122	0					
ANR	10608638	ArgumentList	exc		10607122	1					
ANR	10608639	Argument	exc		10607122	0					
ANR	10608640	Identifier	exc		10607122	0					
ANR	10608641	Argument	args		10607122	1					
ANR	10608642	Identifier	args		10607122	0					
ANR	10608643	BreakStatement	break ;	8163:10:283011:283016	10607122	192	True				
ANR	10608644	Label	case 0x4B :	8165:8:283027:283036	10607122	193	True				
ANR	10608645	ExpressionStatement	"Ins_MPPEM ( exc , args )"	8166:10:283061:283083	10607122	194	True				
ANR	10608646	CallExpression	"Ins_MPPEM ( exc , args )"		10607122	0					
ANR	10608647	Callee	Ins_MPPEM		10607122	0					
ANR	10608648	Identifier	Ins_MPPEM		10607122	0					
ANR	10608649	ArgumentList	exc		10607122	1					
ANR	10608650	Argument	exc		10607122	0					
ANR	10608651	Identifier	exc		10607122	0					
ANR	10608652	Argument	args		10607122	1					
ANR	10608653	Identifier	args		10607122	0					
ANR	10608654	BreakStatement	break ;	8167:10:283095:283100	10607122	195	True				
ANR	10608655	Label	case 0x4C :	8169:8:283111:283120	10607122	196	True				
ANR	10608656	ExpressionStatement	"Ins_MPS ( exc , args )"	8170:10:283143:283163	10607122	197	True				
ANR	10608657	CallExpression	"Ins_MPS ( exc , args )"		10607122	0					
ANR	10608658	Callee	Ins_MPS		10607122	0					
ANR	10608659	Identifier	Ins_MPS		10607122	0					
ANR	10608660	ArgumentList	exc		10607122	1					
ANR	10608661	Argument	exc		10607122	0					
ANR	10608662	Identifier	exc		10607122	0					
ANR	10608663	Argument	args		10607122	1					
ANR	10608664	Identifier	args		10607122	0					
ANR	10608665	BreakStatement	break ;	8171:10:283175:283180	10607122	198	True				
ANR	10608666	Label	case 0x4D :	8173:8:283191:283200	10607122	199	True				
ANR	10608667	ExpressionStatement	Ins_FLIPON ( exc )	8174:10:283226:283243	10607122	200	True				
ANR	10608668	CallExpression	Ins_FLIPON ( exc )		10607122	0					
ANR	10608669	Callee	Ins_FLIPON		10607122	0					
ANR	10608670	Identifier	Ins_FLIPON		10607122	0					
ANR	10608671	ArgumentList	exc		10607122	1					
ANR	10608672	Argument	exc		10607122	0					
ANR	10608673	Identifier	exc		10607122	0					
ANR	10608674	BreakStatement	break ;	8175:10:283255:283260	10607122	201	True				
ANR	10608675	Label	case 0x4E :	8177:8:283271:283280	10607122	202	True				
ANR	10608676	ExpressionStatement	Ins_FLIPOFF ( exc )	8178:10:283307:283325	10607122	203	True				
ANR	10608677	CallExpression	Ins_FLIPOFF ( exc )		10607122	0					
ANR	10608678	Callee	Ins_FLIPOFF		10607122	0					
ANR	10608679	Identifier	Ins_FLIPOFF		10607122	0					
ANR	10608680	ArgumentList	exc		10607122	1					
ANR	10608681	Argument	exc		10607122	0					
ANR	10608682	Identifier	exc		10607122	0					
ANR	10608683	BreakStatement	break ;	8179:10:283337:283342	10607122	204	True				
ANR	10608684	Label	case 0x4F :	8181:8:283353:283362	10607122	205	True				
ANR	10608685	ExpressionStatement	Ins_DEBUG ( exc )	8182:10:283387:283403	10607122	206	True				
ANR	10608686	CallExpression	Ins_DEBUG ( exc )		10607122	0					
ANR	10608687	Callee	Ins_DEBUG		10607122	0					
ANR	10608688	Identifier	Ins_DEBUG		10607122	0					
ANR	10608689	ArgumentList	exc		10607122	1					
ANR	10608690	Argument	exc		10607122	0					
ANR	10608691	Identifier	exc		10607122	0					
ANR	10608692	BreakStatement	break ;	8183:10:283415:283420	10607122	207	True				
ANR	10608693	Label	case 0x50 :	8185:8:283431:283440	10607122	208	True				
ANR	10608694	ExpressionStatement	Ins_LT ( args )	8186:10:283462:283476	10607122	209	True				
ANR	10608695	CallExpression	Ins_LT ( args )		10607122	0					
ANR	10608696	Callee	Ins_LT		10607122	0					
ANR	10608697	Identifier	Ins_LT		10607122	0					
ANR	10608698	ArgumentList	args		10607122	1					
ANR	10608699	Argument	args		10607122	0					
ANR	10608700	Identifier	args		10607122	0					
ANR	10608701	BreakStatement	break ;	8187:10:283488:283493	10607122	210	True				
ANR	10608702	Label	case 0x51 :	8189:8:283504:283513	10607122	211	True				
ANR	10608703	ExpressionStatement	Ins_LTEQ ( args )	8190:10:283537:283553	10607122	212	True				
ANR	10608704	CallExpression	Ins_LTEQ ( args )		10607122	0					
ANR	10608705	Callee	Ins_LTEQ		10607122	0					
ANR	10608706	Identifier	Ins_LTEQ		10607122	0					
ANR	10608707	ArgumentList	args		10607122	1					
ANR	10608708	Argument	args		10607122	0					
ANR	10608709	Identifier	args		10607122	0					
ANR	10608710	BreakStatement	break ;	8191:10:283565:283570	10607122	213	True				
ANR	10608711	Label	case 0x52 :	8193:8:283581:283590	10607122	214	True				
ANR	10608712	ExpressionStatement	Ins_GT ( args )	8194:10:283612:283626	10607122	215	True				
ANR	10608713	CallExpression	Ins_GT ( args )		10607122	0					
ANR	10608714	Callee	Ins_GT		10607122	0					
ANR	10608715	Identifier	Ins_GT		10607122	0					
ANR	10608716	ArgumentList	args		10607122	1					
ANR	10608717	Argument	args		10607122	0					
ANR	10608718	Identifier	args		10607122	0					
ANR	10608719	BreakStatement	break ;	8195:10:283638:283643	10607122	216	True				
ANR	10608720	Label	case 0x53 :	8197:8:283654:283663	10607122	217	True				
ANR	10608721	ExpressionStatement	Ins_GTEQ ( args )	8198:10:283687:283703	10607122	218	True				
ANR	10608722	CallExpression	Ins_GTEQ ( args )		10607122	0					
ANR	10608723	Callee	Ins_GTEQ		10607122	0					
ANR	10608724	Identifier	Ins_GTEQ		10607122	0					
ANR	10608725	ArgumentList	args		10607122	1					
ANR	10608726	Argument	args		10607122	0					
ANR	10608727	Identifier	args		10607122	0					
ANR	10608728	BreakStatement	break ;	8199:10:283715:283720	10607122	219	True				
ANR	10608729	Label	case 0x54 :	8201:8:283731:283740	10607122	220	True				
ANR	10608730	ExpressionStatement	Ins_EQ ( args )	8202:10:283762:283776	10607122	221	True				
ANR	10608731	CallExpression	Ins_EQ ( args )		10607122	0					
ANR	10608732	Callee	Ins_EQ		10607122	0					
ANR	10608733	Identifier	Ins_EQ		10607122	0					
ANR	10608734	ArgumentList	args		10607122	1					
ANR	10608735	Argument	args		10607122	0					
ANR	10608736	Identifier	args		10607122	0					
ANR	10608737	BreakStatement	break ;	8203:10:283788:283793	10607122	222	True				
ANR	10608738	Label	case 0x55 :	8205:8:283804:283813	10607122	223	True				
ANR	10608739	ExpressionStatement	Ins_NEQ ( args )	8206:10:283836:283851	10607122	224	True				
ANR	10608740	CallExpression	Ins_NEQ ( args )		10607122	0					
ANR	10608741	Callee	Ins_NEQ		10607122	0					
ANR	10608742	Identifier	Ins_NEQ		10607122	0					
ANR	10608743	ArgumentList	args		10607122	1					
ANR	10608744	Argument	args		10607122	0					
ANR	10608745	Identifier	args		10607122	0					
ANR	10608746	BreakStatement	break ;	8207:10:283863:283868	10607122	225	True				
ANR	10608747	Label	case 0x56 :	8209:8:283879:283888	10607122	226	True				
ANR	10608748	ExpressionStatement	"Ins_ODD ( exc , args )"	8210:10:283911:283931	10607122	227	True				
ANR	10608749	CallExpression	"Ins_ODD ( exc , args )"		10607122	0					
ANR	10608750	Callee	Ins_ODD		10607122	0					
ANR	10608751	Identifier	Ins_ODD		10607122	0					
ANR	10608752	ArgumentList	exc		10607122	1					
ANR	10608753	Argument	exc		10607122	0					
ANR	10608754	Identifier	exc		10607122	0					
ANR	10608755	Argument	args		10607122	1					
ANR	10608756	Identifier	args		10607122	0					
ANR	10608757	BreakStatement	break ;	8211:10:283943:283948	10607122	228	True				
ANR	10608758	Label	case 0x57 :	8213:8:283959:283968	10607122	229	True				
ANR	10608759	ExpressionStatement	"Ins_EVEN ( exc , args )"	8214:10:283992:284013	10607122	230	True				
ANR	10608760	CallExpression	"Ins_EVEN ( exc , args )"		10607122	0					
ANR	10608761	Callee	Ins_EVEN		10607122	0					
ANR	10608762	Identifier	Ins_EVEN		10607122	0					
ANR	10608763	ArgumentList	exc		10607122	1					
ANR	10608764	Argument	exc		10607122	0					
ANR	10608765	Identifier	exc		10607122	0					
ANR	10608766	Argument	args		10607122	1					
ANR	10608767	Identifier	args		10607122	0					
ANR	10608768	BreakStatement	break ;	8215:10:284025:284030	10607122	231	True				
ANR	10608769	Label	case 0x58 :	8217:8:284041:284050	10607122	232	True				
ANR	10608770	ExpressionStatement	"Ins_IF ( exc , args )"	8218:10:284072:284091	10607122	233	True				
ANR	10608771	CallExpression	"Ins_IF ( exc , args )"		10607122	0					
ANR	10608772	Callee	Ins_IF		10607122	0					
ANR	10608773	Identifier	Ins_IF		10607122	0					
ANR	10608774	ArgumentList	exc		10607122	1					
ANR	10608775	Argument	exc		10607122	0					
ANR	10608776	Identifier	exc		10607122	0					
ANR	10608777	Argument	args		10607122	1					
ANR	10608778	Identifier	args		10607122	0					
ANR	10608779	BreakStatement	break ;	8219:10:284103:284108	10607122	234	True				
ANR	10608780	Label	case 0x59 :	8221:8:284119:284128	10607122	235	True				
ANR	10608781	ExpressionStatement	Ins_EIF ( )	8222:10:284151:284160	10607122	236	True				
ANR	10608782	CallExpression	Ins_EIF ( )		10607122	0					
ANR	10608783	Callee	Ins_EIF		10607122	0					
ANR	10608784	Identifier	Ins_EIF		10607122	0					
ANR	10608785	ArgumentList			10607122	1					
ANR	10608786	BreakStatement	break ;	8223:10:284172:284177	10607122	237	True				
ANR	10608787	Label	case 0x5A :	8225:8:284188:284197	10607122	238	True				
ANR	10608788	ExpressionStatement	Ins_AND ( args )	8226:10:284220:284235	10607122	239	True				
ANR	10608789	CallExpression	Ins_AND ( args )		10607122	0					
ANR	10608790	Callee	Ins_AND		10607122	0					
ANR	10608791	Identifier	Ins_AND		10607122	0					
ANR	10608792	ArgumentList	args		10607122	1					
ANR	10608793	Argument	args		10607122	0					
ANR	10608794	Identifier	args		10607122	0					
ANR	10608795	BreakStatement	break ;	8227:10:284247:284252	10607122	240	True				
ANR	10608796	Label	case 0x5B :	8229:8:284263:284272	10607122	241	True				
ANR	10608797	ExpressionStatement	Ins_OR ( args )	8230:10:284294:284308	10607122	242	True				
ANR	10608798	CallExpression	Ins_OR ( args )		10607122	0					
ANR	10608799	Callee	Ins_OR		10607122	0					
ANR	10608800	Identifier	Ins_OR		10607122	0					
ANR	10608801	ArgumentList	args		10607122	1					
ANR	10608802	Argument	args		10607122	0					
ANR	10608803	Identifier	args		10607122	0					
ANR	10608804	BreakStatement	break ;	8231:10:284320:284325	10607122	243	True				
ANR	10608805	Label	case 0x5C :	8233:8:284336:284345	10607122	244	True				
ANR	10608806	ExpressionStatement	Ins_NOT ( args )	8234:10:284368:284383	10607122	245	True				
ANR	10608807	CallExpression	Ins_NOT ( args )		10607122	0					
ANR	10608808	Callee	Ins_NOT		10607122	0					
ANR	10608809	Identifier	Ins_NOT		10607122	0					
ANR	10608810	ArgumentList	args		10607122	1					
ANR	10608811	Argument	args		10607122	0					
ANR	10608812	Identifier	args		10607122	0					
ANR	10608813	BreakStatement	break ;	8235:10:284395:284400	10607122	246	True				
ANR	10608814	Label	case 0x5D :	8237:8:284411:284420	10607122	247	True				
ANR	10608815	ExpressionStatement	"Ins_DELTAP ( exc , args )"	8238:10:284447:284470	10607122	248	True				
ANR	10608816	CallExpression	"Ins_DELTAP ( exc , args )"		10607122	0					
ANR	10608817	Callee	Ins_DELTAP		10607122	0					
ANR	10608818	Identifier	Ins_DELTAP		10607122	0					
ANR	10608819	ArgumentList	exc		10607122	1					
ANR	10608820	Argument	exc		10607122	0					
ANR	10608821	Identifier	exc		10607122	0					
ANR	10608822	Argument	args		10607122	1					
ANR	10608823	Identifier	args		10607122	0					
ANR	10608824	BreakStatement	break ;	8239:10:284482:284487	10607122	249	True				
ANR	10608825	Label	case 0x5E :	8241:8:284498:284507	10607122	250	True				
ANR	10608826	ExpressionStatement	"Ins_SDB ( exc , args )"	8242:10:284530:284550	10607122	251	True				
ANR	10608827	CallExpression	"Ins_SDB ( exc , args )"		10607122	0					
ANR	10608828	Callee	Ins_SDB		10607122	0					
ANR	10608829	Identifier	Ins_SDB		10607122	0					
ANR	10608830	ArgumentList	exc		10607122	1					
ANR	10608831	Argument	exc		10607122	0					
ANR	10608832	Identifier	exc		10607122	0					
ANR	10608833	Argument	args		10607122	1					
ANR	10608834	Identifier	args		10607122	0					
ANR	10608835	BreakStatement	break ;	8243:10:284562:284567	10607122	252	True				
ANR	10608836	Label	case 0x5F :	8245:8:284578:284587	10607122	253	True				
ANR	10608837	ExpressionStatement	"Ins_SDS ( exc , args )"	8246:10:284610:284630	10607122	254	True				
ANR	10608838	CallExpression	"Ins_SDS ( exc , args )"		10607122	0					
ANR	10608839	Callee	Ins_SDS		10607122	0					
ANR	10608840	Identifier	Ins_SDS		10607122	0					
ANR	10608841	ArgumentList	exc		10607122	1					
ANR	10608842	Argument	exc		10607122	0					
ANR	10608843	Identifier	exc		10607122	0					
ANR	10608844	Argument	args		10607122	1					
ANR	10608845	Identifier	args		10607122	0					
ANR	10608846	BreakStatement	break ;	8247:10:284642:284647	10607122	255	True				
ANR	10608847	Label	case 0x60 :	8249:8:284658:284667	10607122	256	True				
ANR	10608848	ExpressionStatement	Ins_ADD ( args )	8250:10:284690:284705	10607122	257	True				
ANR	10608849	CallExpression	Ins_ADD ( args )		10607122	0					
ANR	10608850	Callee	Ins_ADD		10607122	0					
ANR	10608851	Identifier	Ins_ADD		10607122	0					
ANR	10608852	ArgumentList	args		10607122	1					
ANR	10608853	Argument	args		10607122	0					
ANR	10608854	Identifier	args		10607122	0					
ANR	10608855	BreakStatement	break ;	8251:10:284717:284722	10607122	258	True				
ANR	10608856	Label	case 0x61 :	8253:8:284733:284742	10607122	259	True				
ANR	10608857	ExpressionStatement	Ins_SUB ( args )	8254:10:284765:284780	10607122	260	True				
ANR	10608858	CallExpression	Ins_SUB ( args )		10607122	0					
ANR	10608859	Callee	Ins_SUB		10607122	0					
ANR	10608860	Identifier	Ins_SUB		10607122	0					
ANR	10608861	ArgumentList	args		10607122	1					
ANR	10608862	Argument	args		10607122	0					
ANR	10608863	Identifier	args		10607122	0					
ANR	10608864	BreakStatement	break ;	8255:10:284792:284797	10607122	261	True				
ANR	10608865	Label	case 0x62 :	8257:8:284808:284817	10607122	262	True				
ANR	10608866	ExpressionStatement	"Ins_DIV ( exc , args )"	8258:10:284840:284860	10607122	263	True				
ANR	10608867	CallExpression	"Ins_DIV ( exc , args )"		10607122	0					
ANR	10608868	Callee	Ins_DIV		10607122	0					
ANR	10608869	Identifier	Ins_DIV		10607122	0					
ANR	10608870	ArgumentList	exc		10607122	1					
ANR	10608871	Argument	exc		10607122	0					
ANR	10608872	Identifier	exc		10607122	0					
ANR	10608873	Argument	args		10607122	1					
ANR	10608874	Identifier	args		10607122	0					
ANR	10608875	BreakStatement	break ;	8259:10:284872:284877	10607122	264	True				
ANR	10608876	Label	case 0x63 :	8261:8:284888:284897	10607122	265	True				
ANR	10608877	ExpressionStatement	Ins_MUL ( args )	8262:10:284920:284935	10607122	266	True				
ANR	10608878	CallExpression	Ins_MUL ( args )		10607122	0					
ANR	10608879	Callee	Ins_MUL		10607122	0					
ANR	10608880	Identifier	Ins_MUL		10607122	0					
ANR	10608881	ArgumentList	args		10607122	1					
ANR	10608882	Argument	args		10607122	0					
ANR	10608883	Identifier	args		10607122	0					
ANR	10608884	BreakStatement	break ;	8263:10:284947:284952	10607122	267	True				
ANR	10608885	Label	case 0x64 :	8265:8:284963:284972	10607122	268	True				
ANR	10608886	ExpressionStatement	Ins_ABS ( args )	8266:10:284995:285010	10607122	269	True				
ANR	10608887	CallExpression	Ins_ABS ( args )		10607122	0					
ANR	10608888	Callee	Ins_ABS		10607122	0					
ANR	10608889	Identifier	Ins_ABS		10607122	0					
ANR	10608890	ArgumentList	args		10607122	1					
ANR	10608891	Argument	args		10607122	0					
ANR	10608892	Identifier	args		10607122	0					
ANR	10608893	BreakStatement	break ;	8267:10:285022:285027	10607122	270	True				
ANR	10608894	Label	case 0x65 :	8269:8:285038:285047	10607122	271	True				
ANR	10608895	ExpressionStatement	Ins_NEG ( args )	8270:10:285070:285085	10607122	272	True				
ANR	10608896	CallExpression	Ins_NEG ( args )		10607122	0					
ANR	10608897	Callee	Ins_NEG		10607122	0					
ANR	10608898	Identifier	Ins_NEG		10607122	0					
ANR	10608899	ArgumentList	args		10607122	1					
ANR	10608900	Argument	args		10607122	0					
ANR	10608901	Identifier	args		10607122	0					
ANR	10608902	BreakStatement	break ;	8271:10:285097:285102	10607122	273	True				
ANR	10608903	Label	case 0x66 :	8273:8:285113:285122	10607122	274	True				
ANR	10608904	ExpressionStatement	Ins_FLOOR ( args )	8274:10:285147:285164	10607122	275	True				
ANR	10608905	CallExpression	Ins_FLOOR ( args )		10607122	0					
ANR	10608906	Callee	Ins_FLOOR		10607122	0					
ANR	10608907	Identifier	Ins_FLOOR		10607122	0					
ANR	10608908	ArgumentList	args		10607122	1					
ANR	10608909	Argument	args		10607122	0					
ANR	10608910	Identifier	args		10607122	0					
ANR	10608911	BreakStatement	break ;	8275:10:285176:285181	10607122	276	True				
ANR	10608912	Label	case 0x67 :	8277:8:285192:285201	10607122	277	True				
ANR	10608913	ExpressionStatement	Ins_CEILING ( args )	8278:10:285228:285247	10607122	278	True				
ANR	10608914	CallExpression	Ins_CEILING ( args )		10607122	0					
ANR	10608915	Callee	Ins_CEILING		10607122	0					
ANR	10608916	Identifier	Ins_CEILING		10607122	0					
ANR	10608917	ArgumentList	args		10607122	1					
ANR	10608918	Argument	args		10607122	0					
ANR	10608919	Identifier	args		10607122	0					
ANR	10608920	BreakStatement	break ;	8279:10:285259:285264	10607122	279	True				
ANR	10608921	Label	case 0x68 :	8281:8:285275:285284	10607122	280	True				
ANR	10608922	Label	case 0x69 :	8282:8:285307:285316	10607122	281	True				
ANR	10608923	Label	case 0x6A :	8283:8:285339:285348	10607122	282	True				
ANR	10608924	Label	case 0x6B :	8284:8:285371:285380	10607122	283	True				
ANR	10608925	ExpressionStatement	"Ins_ROUND ( exc , args )"	8285:10:285405:285427	10607122	284	True				
ANR	10608926	CallExpression	"Ins_ROUND ( exc , args )"		10607122	0					
ANR	10608927	Callee	Ins_ROUND		10607122	0					
ANR	10608928	Identifier	Ins_ROUND		10607122	0					
ANR	10608929	ArgumentList	exc		10607122	1					
ANR	10608930	Argument	exc		10607122	0					
ANR	10608931	Identifier	exc		10607122	0					
ANR	10608932	Argument	args		10607122	1					
ANR	10608933	Identifier	args		10607122	0					
ANR	10608934	BreakStatement	break ;	8286:10:285439:285444	10607122	285	True				
ANR	10608935	Label	case 0x6C :	8288:8:285455:285464	10607122	286	True				
ANR	10608936	Label	case 0x6D :	8289:8:285488:285497	10607122	287	True				
ANR	10608937	Label	case 0x6E :	8290:8:285521:285530	10607122	288	True				
ANR	10608938	Label	case 0x6F :	8291:8:285554:285563	10607122	289	True				
ANR	10608939	ExpressionStatement	"Ins_NROUND ( exc , args )"	8292:10:285589:285612	10607122	290	True				
ANR	10608940	CallExpression	"Ins_NROUND ( exc , args )"		10607122	0					
ANR	10608941	Callee	Ins_NROUND		10607122	0					
ANR	10608942	Identifier	Ins_NROUND		10607122	0					
ANR	10608943	ArgumentList	exc		10607122	1					
ANR	10608944	Argument	exc		10607122	0					
ANR	10608945	Identifier	exc		10607122	0					
ANR	10608946	Argument	args		10607122	1					
ANR	10608947	Identifier	args		10607122	0					
ANR	10608948	BreakStatement	break ;	8293:10:285624:285629	10607122	291	True				
ANR	10608949	Label	case 0x70 :	8295:8:285640:285649	10607122	292	True				
ANR	10608950	ExpressionStatement	"Ins_WCVTF ( exc , args )"	8296:10:285674:285696	10607122	293	True				
ANR	10608951	CallExpression	"Ins_WCVTF ( exc , args )"		10607122	0					
ANR	10608952	Callee	Ins_WCVTF		10607122	0					
ANR	10608953	Identifier	Ins_WCVTF		10607122	0					
ANR	10608954	ArgumentList	exc		10607122	1					
ANR	10608955	Argument	exc		10607122	0					
ANR	10608956	Identifier	exc		10607122	0					
ANR	10608957	Argument	args		10607122	1					
ANR	10608958	Identifier	args		10607122	0					
ANR	10608959	BreakStatement	break ;	8297:10:285708:285713	10607122	294	True				
ANR	10608960	Label	case 0x71 :	8299:8:285724:285733	10607122	295	True				
ANR	10608961	Label	case 0x72 :	8300:8:285758:285767	10607122	296	True				
ANR	10608962	ExpressionStatement	"Ins_DELTAP ( exc , args )"	8301:10:285794:285817	10607122	297	True				
ANR	10608963	CallExpression	"Ins_DELTAP ( exc , args )"		10607122	0					
ANR	10608964	Callee	Ins_DELTAP		10607122	0					
ANR	10608965	Identifier	Ins_DELTAP		10607122	0					
ANR	10608966	ArgumentList	exc		10607122	1					
ANR	10608967	Argument	exc		10607122	0					
ANR	10608968	Identifier	exc		10607122	0					
ANR	10608969	Argument	args		10607122	1					
ANR	10608970	Identifier	args		10607122	0					
ANR	10608971	BreakStatement	break ;	8302:10:285829:285834	10607122	298	True				
ANR	10608972	Label	case 0x73 :	8304:8:285845:285854	10607122	299	True				
ANR	10608973	Label	case 0x74 :	8305:8:285879:285888	10607122	300	True				
ANR	10608974	Label	case 0x75 :	8306:8:285913:285922	10607122	301	True				
ANR	10608975	ExpressionStatement	"Ins_DELTAC ( exc , args )"	8307:10:285949:285972	10607122	302	True				
ANR	10608976	CallExpression	"Ins_DELTAC ( exc , args )"		10607122	0					
ANR	10608977	Callee	Ins_DELTAC		10607122	0					
ANR	10608978	Identifier	Ins_DELTAC		10607122	0					
ANR	10608979	ArgumentList	exc		10607122	1					
ANR	10608980	Argument	exc		10607122	0					
ANR	10608981	Identifier	exc		10607122	0					
ANR	10608982	Argument	args		10607122	1					
ANR	10608983	Identifier	args		10607122	0					
ANR	10608984	BreakStatement	break ;	8308:10:285984:285989	10607122	303	True				
ANR	10608985	Label	case 0x76 :	8310:8:286000:286009	10607122	304	True				
ANR	10608986	ExpressionStatement	"Ins_SROUND ( exc , args )"	8311:10:286035:286058	10607122	305	True				
ANR	10608987	CallExpression	"Ins_SROUND ( exc , args )"		10607122	0					
ANR	10608988	Callee	Ins_SROUND		10607122	0					
ANR	10608989	Identifier	Ins_SROUND		10607122	0					
ANR	10608990	ArgumentList	exc		10607122	1					
ANR	10608991	Argument	exc		10607122	0					
ANR	10608992	Identifier	exc		10607122	0					
ANR	10608993	Argument	args		10607122	1					
ANR	10608994	Identifier	args		10607122	0					
ANR	10608995	BreakStatement	break ;	8312:10:286070:286075	10607122	306	True				
ANR	10608996	Label	case 0x77 :	8314:8:286086:286095	10607122	307	True				
ANR	10608997	ExpressionStatement	"Ins_S45ROUND ( exc , args )"	8315:10:286123:286148	10607122	308	True				
ANR	10608998	CallExpression	"Ins_S45ROUND ( exc , args )"		10607122	0					
ANR	10608999	Callee	Ins_S45ROUND		10607122	0					
ANR	10609000	Identifier	Ins_S45ROUND		10607122	0					
ANR	10609001	ArgumentList	exc		10607122	1					
ANR	10609002	Argument	exc		10607122	0					
ANR	10609003	Identifier	exc		10607122	0					
ANR	10609004	Argument	args		10607122	1					
ANR	10609005	Identifier	args		10607122	0					
ANR	10609006	BreakStatement	break ;	8316:10:286160:286165	10607122	309	True				
ANR	10609007	Label	case 0x78 :	8318:8:286176:286185	10607122	310	True				
ANR	10609008	ExpressionStatement	"Ins_JROT ( exc , args )"	8319:10:286209:286230	10607122	311	True				
ANR	10609009	CallExpression	"Ins_JROT ( exc , args )"		10607122	0					
ANR	10609010	Callee	Ins_JROT		10607122	0					
ANR	10609011	Identifier	Ins_JROT		10607122	0					
ANR	10609012	ArgumentList	exc		10607122	1					
ANR	10609013	Argument	exc		10607122	0					
ANR	10609014	Identifier	exc		10607122	0					
ANR	10609015	Argument	args		10607122	1					
ANR	10609016	Identifier	args		10607122	0					
ANR	10609017	BreakStatement	break ;	8320:10:286242:286247	10607122	312	True				
ANR	10609018	Label	case 0x79 :	8322:8:286258:286267	10607122	313	True				
ANR	10609019	ExpressionStatement	"Ins_JROF ( exc , args )"	8323:10:286291:286312	10607122	314	True				
ANR	10609020	CallExpression	"Ins_JROF ( exc , args )"		10607122	0					
ANR	10609021	Callee	Ins_JROF		10607122	0					
ANR	10609022	Identifier	Ins_JROF		10607122	0					
ANR	10609023	ArgumentList	exc		10607122	1					
ANR	10609024	Argument	exc		10607122	0					
ANR	10609025	Identifier	exc		10607122	0					
ANR	10609026	Argument	args		10607122	1					
ANR	10609027	Identifier	args		10607122	0					
ANR	10609028	BreakStatement	break ;	8324:10:286324:286329	10607122	315	True				
ANR	10609029	Label	case 0x7A :	8326:8:286340:286349	10607122	316	True				
ANR	10609030	ExpressionStatement	Ins_ROFF ( exc )	8327:10:286373:286388	10607122	317	True				
ANR	10609031	CallExpression	Ins_ROFF ( exc )		10607122	0					
ANR	10609032	Callee	Ins_ROFF		10607122	0					
ANR	10609033	Identifier	Ins_ROFF		10607122	0					
ANR	10609034	ArgumentList	exc		10607122	1					
ANR	10609035	Argument	exc		10607122	0					
ANR	10609036	Identifier	exc		10607122	0					
ANR	10609037	BreakStatement	break ;	8328:10:286400:286405	10607122	318	True				
ANR	10609038	Label	case 0x7B :	8330:8:286416:286425	10607122	319	True				
ANR	10609039	ExpressionStatement	Ins_UNKNOWN ( exc )	8331:10:286449:286467	10607122	320	True				
ANR	10609040	CallExpression	Ins_UNKNOWN ( exc )		10607122	0					
ANR	10609041	Callee	Ins_UNKNOWN		10607122	0					
ANR	10609042	Identifier	Ins_UNKNOWN		10607122	0					
ANR	10609043	ArgumentList	exc		10607122	1					
ANR	10609044	Argument	exc		10607122	0					
ANR	10609045	Identifier	exc		10607122	0					
ANR	10609046	BreakStatement	break ;	8332:10:286479:286484	10607122	321	True				
ANR	10609047	Label	case 0x7C :	8334:8:286495:286504	10607122	322	True				
ANR	10609048	ExpressionStatement	Ins_RUTG ( exc )	8335:10:286528:286543	10607122	323	True				
ANR	10609049	CallExpression	Ins_RUTG ( exc )		10607122	0					
ANR	10609050	Callee	Ins_RUTG		10607122	0					
ANR	10609051	Identifier	Ins_RUTG		10607122	0					
ANR	10609052	ArgumentList	exc		10607122	1					
ANR	10609053	Argument	exc		10607122	0					
ANR	10609054	Identifier	exc		10607122	0					
ANR	10609055	BreakStatement	break ;	8336:10:286555:286560	10607122	324	True				
ANR	10609056	Label	case 0x7D :	8338:8:286571:286580	10607122	325	True				
ANR	10609057	ExpressionStatement	Ins_RDTG ( exc )	8339:10:286604:286619	10607122	326	True				
ANR	10609058	CallExpression	Ins_RDTG ( exc )		10607122	0					
ANR	10609059	Callee	Ins_RDTG		10607122	0					
ANR	10609060	Identifier	Ins_RDTG		10607122	0					
ANR	10609061	ArgumentList	exc		10607122	1					
ANR	10609062	Argument	exc		10607122	0					
ANR	10609063	Identifier	exc		10607122	0					
ANR	10609064	BreakStatement	break ;	8340:10:286631:286636	10607122	327	True				
ANR	10609065	Label	case 0x7E :	8342:8:286647:286656	10607122	328	True				
ANR	10609066	ExpressionStatement	Ins_SANGW ( )	8343:10:286681:286692	10607122	329	True				
ANR	10609067	CallExpression	Ins_SANGW ( )		10607122	0					
ANR	10609068	Callee	Ins_SANGW		10607122	0					
ANR	10609069	Identifier	Ins_SANGW		10607122	0					
ANR	10609070	ArgumentList			10607122	1					
ANR	10609071	BreakStatement	break ;	8344:10:286704:286709	10607122	330	True				
ANR	10609072	Label	case 0x7F :	8346:8:286720:286729	10607122	331	True				
ANR	10609073	ExpressionStatement	Ins_AA ( )	8347:10:286751:286759	10607122	332	True				
ANR	10609074	CallExpression	Ins_AA ( )		10607122	0					
ANR	10609075	Callee	Ins_AA		10607122	0					
ANR	10609076	Identifier	Ins_AA		10607122	0					
ANR	10609077	ArgumentList			10607122	1					
ANR	10609078	BreakStatement	break ;	8348:10:286771:286776	10607122	333	True				
ANR	10609079	Label	case 0x80 :	8350:8:286787:286796	10607122	334	True				
ANR	10609080	ExpressionStatement	Ins_FLIPPT ( exc )	8351:10:286822:286839	10607122	335	True				
ANR	10609081	CallExpression	Ins_FLIPPT ( exc )		10607122	0					
ANR	10609082	Callee	Ins_FLIPPT		10607122	0					
ANR	10609083	Identifier	Ins_FLIPPT		10607122	0					
ANR	10609084	ArgumentList	exc		10607122	1					
ANR	10609085	Argument	exc		10607122	0					
ANR	10609086	Identifier	exc		10607122	0					
ANR	10609087	BreakStatement	break ;	8352:10:286851:286856	10607122	336	True				
ANR	10609088	Label	case 0x81 :	8354:8:286867:286876	10607122	337	True				
ANR	10609089	ExpressionStatement	"Ins_FLIPRGON ( exc , args )"	8355:10:286904:286929	10607122	338	True				
ANR	10609090	CallExpression	"Ins_FLIPRGON ( exc , args )"		10607122	0					
ANR	10609091	Callee	Ins_FLIPRGON		10607122	0					
ANR	10609092	Identifier	Ins_FLIPRGON		10607122	0					
ANR	10609093	ArgumentList	exc		10607122	1					
ANR	10609094	Argument	exc		10607122	0					
ANR	10609095	Identifier	exc		10607122	0					
ANR	10609096	Argument	args		10607122	1					
ANR	10609097	Identifier	args		10607122	0					
ANR	10609098	BreakStatement	break ;	8356:10:286941:286946	10607122	339	True				
ANR	10609099	Label	case 0x82 :	8358:8:286957:286966	10607122	340	True				
ANR	10609100	ExpressionStatement	"Ins_FLIPRGOFF ( exc , args )"	8359:10:286995:287021	10607122	341	True				
ANR	10609101	CallExpression	"Ins_FLIPRGOFF ( exc , args )"		10607122	0					
ANR	10609102	Callee	Ins_FLIPRGOFF		10607122	0					
ANR	10609103	Identifier	Ins_FLIPRGOFF		10607122	0					
ANR	10609104	ArgumentList	exc		10607122	1					
ANR	10609105	Argument	exc		10607122	0					
ANR	10609106	Identifier	exc		10607122	0					
ANR	10609107	Argument	args		10607122	1					
ANR	10609108	Identifier	args		10607122	0					
ANR	10609109	BreakStatement	break ;	8360:10:287033:287038	10607122	342	True				
ANR	10609110	Label	case 0x83 :	8362:8:287049:287058	10607122	343	True				
ANR	10609111	Label	case 0x84 :	8363:8:287083:287092	10607122	344	True				
ANR	10609112	ExpressionStatement	Ins_UNKNOWN ( exc )	8364:10:287119:287137	10607122	345	True				
ANR	10609113	CallExpression	Ins_UNKNOWN ( exc )		10607122	0					
ANR	10609114	Callee	Ins_UNKNOWN		10607122	0					
ANR	10609115	Identifier	Ins_UNKNOWN		10607122	0					
ANR	10609116	ArgumentList	exc		10607122	1					
ANR	10609117	Argument	exc		10607122	0					
ANR	10609118	Identifier	exc		10607122	0					
ANR	10609119	BreakStatement	break ;	8365:10:287149:287154	10607122	346	True				
ANR	10609120	Label	case 0x85 :	8367:8:287165:287174	10607122	347	True				
ANR	10609121	ExpressionStatement	"Ins_SCANCTRL ( exc , args )"	8368:10:287202:287227	10607122	348	True				
ANR	10609122	CallExpression	"Ins_SCANCTRL ( exc , args )"		10607122	0					
ANR	10609123	Callee	Ins_SCANCTRL		10607122	0					
ANR	10609124	Identifier	Ins_SCANCTRL		10607122	0					
ANR	10609125	ArgumentList	exc		10607122	1					
ANR	10609126	Argument	exc		10607122	0					
ANR	10609127	Identifier	exc		10607122	0					
ANR	10609128	Argument	args		10607122	1					
ANR	10609129	Identifier	args		10607122	0					
ANR	10609130	BreakStatement	break ;	8369:10:287239:287244	10607122	349	True				
ANR	10609131	Label	case 0x86 :	8371:8:287255:287264	10607122	350	True				
ANR	10609132	Label	case 0x87 :	8372:8:287288:287297	10607122	351	True				
ANR	10609133	ExpressionStatement	"Ins_SDPVTL ( exc , args )"	8373:10:287323:287346	10607122	352	True				
ANR	10609134	CallExpression	"Ins_SDPVTL ( exc , args )"		10607122	0					
ANR	10609135	Callee	Ins_SDPVTL		10607122	0					
ANR	10609136	Identifier	Ins_SDPVTL		10607122	0					
ANR	10609137	ArgumentList	exc		10607122	1					
ANR	10609138	Argument	exc		10607122	0					
ANR	10609139	Identifier	exc		10607122	0					
ANR	10609140	Argument	args		10607122	1					
ANR	10609141	Identifier	args		10607122	0					
ANR	10609142	BreakStatement	break ;	8374:10:287358:287363	10607122	353	True				
ANR	10609143	Label	case 0x88 :	8376:8:287374:287383	10607122	354	True				
ANR	10609144	ExpressionStatement	"Ins_GETINFO ( exc , args )"	8377:10:287410:287434	10607122	355	True				
ANR	10609145	CallExpression	"Ins_GETINFO ( exc , args )"		10607122	0					
ANR	10609146	Callee	Ins_GETINFO		10607122	0					
ANR	10609147	Identifier	Ins_GETINFO		10607122	0					
ANR	10609148	ArgumentList	exc		10607122	1					
ANR	10609149	Argument	exc		10607122	0					
ANR	10609150	Identifier	exc		10607122	0					
ANR	10609151	Argument	args		10607122	1					
ANR	10609152	Identifier	args		10607122	0					
ANR	10609153	BreakStatement	break ;	8378:10:287446:287451	10607122	356	True				
ANR	10609154	Label	case 0x89 :	8380:8:287462:287471	10607122	357	True				
ANR	10609155	ExpressionStatement	"Ins_IDEF ( exc , args )"	8381:10:287495:287516	10607122	358	True				
ANR	10609156	CallExpression	"Ins_IDEF ( exc , args )"		10607122	0					
ANR	10609157	Callee	Ins_IDEF		10607122	0					
ANR	10609158	Identifier	Ins_IDEF		10607122	0					
ANR	10609159	ArgumentList	exc		10607122	1					
ANR	10609160	Argument	exc		10607122	0					
ANR	10609161	Identifier	exc		10607122	0					
ANR	10609162	Argument	args		10607122	1					
ANR	10609163	Identifier	args		10607122	0					
ANR	10609164	BreakStatement	break ;	8382:10:287528:287533	10607122	359	True				
ANR	10609165	Label	case 0x8A :	8384:8:287544:287553	10607122	360	True				
ANR	10609166	ExpressionStatement	Ins_ROLL ( args )	8385:10:287577:287593	10607122	361	True				
ANR	10609167	CallExpression	Ins_ROLL ( args )		10607122	0					
ANR	10609168	Callee	Ins_ROLL		10607122	0					
ANR	10609169	Identifier	Ins_ROLL		10607122	0					
ANR	10609170	ArgumentList	args		10607122	1					
ANR	10609171	Argument	args		10607122	0					
ANR	10609172	Identifier	args		10607122	0					
ANR	10609173	BreakStatement	break ;	8386:10:287605:287610	10607122	362	True				
ANR	10609174	Label	case 0x8B :	8388:8:287621:287630	10607122	363	True				
ANR	10609175	ExpressionStatement	Ins_MAX ( args )	8389:10:287653:287668	10607122	364	True				
ANR	10609176	CallExpression	Ins_MAX ( args )		10607122	0					
ANR	10609177	Callee	Ins_MAX		10607122	0					
ANR	10609178	Identifier	Ins_MAX		10607122	0					
ANR	10609179	ArgumentList	args		10607122	1					
ANR	10609180	Argument	args		10607122	0					
ANR	10609181	Identifier	args		10607122	0					
ANR	10609182	BreakStatement	break ;	8390:10:287680:287685	10607122	365	True				
ANR	10609183	Label	case 0x8C :	8392:8:287696:287705	10607122	366	True				
ANR	10609184	ExpressionStatement	Ins_MIN ( args )	8393:10:287728:287743	10607122	367	True				
ANR	10609185	CallExpression	Ins_MIN ( args )		10607122	0					
ANR	10609186	Callee	Ins_MIN		10607122	0					
ANR	10609187	Identifier	Ins_MIN		10607122	0					
ANR	10609188	ArgumentList	args		10607122	1					
ANR	10609189	Argument	args		10607122	0					
ANR	10609190	Identifier	args		10607122	0					
ANR	10609191	BreakStatement	break ;	8394:10:287755:287760	10607122	368	True				
ANR	10609192	Label	case 0x8D :	8396:8:287771:287780	10607122	369	True				
ANR	10609193	ExpressionStatement	"Ins_SCANTYPE ( exc , args )"	8397:10:287808:287833	10607122	370	True				
ANR	10609194	CallExpression	"Ins_SCANTYPE ( exc , args )"		10607122	0					
ANR	10609195	Callee	Ins_SCANTYPE		10607122	0					
ANR	10609196	Identifier	Ins_SCANTYPE		10607122	0					
ANR	10609197	ArgumentList	exc		10607122	1					
ANR	10609198	Argument	exc		10607122	0					
ANR	10609199	Identifier	exc		10607122	0					
ANR	10609200	Argument	args		10607122	1					
ANR	10609201	Identifier	args		10607122	0					
ANR	10609202	BreakStatement	break ;	8398:10:287845:287850	10607122	371	True				
ANR	10609203	Label	case 0x8E :	8400:8:287861:287870	10607122	372	True				
ANR	10609204	ExpressionStatement	"Ins_INSTCTRL ( exc , args )"	8401:10:287898:287923	10607122	373	True				
ANR	10609205	CallExpression	"Ins_INSTCTRL ( exc , args )"		10607122	0					
ANR	10609206	Callee	Ins_INSTCTRL		10607122	0					
ANR	10609207	Identifier	Ins_INSTCTRL		10607122	0					
ANR	10609208	ArgumentList	exc		10607122	1					
ANR	10609209	Argument	exc		10607122	0					
ANR	10609210	Identifier	exc		10607122	0					
ANR	10609211	Argument	args		10607122	1					
ANR	10609212	Identifier	args		10607122	0					
ANR	10609213	BreakStatement	break ;	8402:10:287935:287940	10607122	374	True				
ANR	10609214	Label	case 0x8F :	8404:8:287951:287960	10607122	375	True				
ANR	10609215	Label	case 0x90 :	8405:8:287984:287993	10607122	376	True				
ANR	10609216	ExpressionStatement	Ins_UNKNOWN ( exc )	8406:10:288019:288037	10607122	377	True				
ANR	10609217	CallExpression	Ins_UNKNOWN ( exc )		10607122	0					
ANR	10609218	Callee	Ins_UNKNOWN		10607122	0					
ANR	10609219	Identifier	Ins_UNKNOWN		10607122	0					
ANR	10609220	ArgumentList	exc		10607122	1					
ANR	10609221	Argument	exc		10607122	0					
ANR	10609222	Identifier	exc		10607122	0					
ANR	10609223	BreakStatement	break ;	8407:10:288049:288054	10607122	378	True				
ANR	10609224	Label	case 0x91 :	8410:8:288104:288113	10607122	379	True				
ANR	10609225	IfStatement	if ( exc -> face -> blend )		10607122	380					
ANR	10609226	Condition	exc -> face -> blend	8414:15:288358:288373	10607122	0	True				
ANR	10609227	PtrMemberAccess	exc -> face -> blend		10607122	0					
ANR	10609228	PtrMemberAccess	exc -> face		10607122	0					
ANR	10609229	Identifier	exc		10607122	0					
ANR	10609230	Identifier	face		10607122	1					
ANR	10609231	Identifier	blend		10607122	1					
ANR	10609232	ExpressionStatement	"Ins_GETVARIATION ( exc , args )"	8415:12:288389:288418	10607122	1	True				
ANR	10609233	CallExpression	"Ins_GETVARIATION ( exc , args )"		10607122	0					
ANR	10609234	Callee	Ins_GETVARIATION		10607122	0					
ANR	10609235	Identifier	Ins_GETVARIATION		10607122	0					
ANR	10609236	ArgumentList	exc		10607122	1					
ANR	10609237	Argument	exc		10607122	0					
ANR	10609238	Identifier	exc		10607122	0					
ANR	10609239	Argument	args		10607122	1					
ANR	10609240	Identifier	args		10607122	0					
ANR	10609241	ElseStatement	else		10607122	0					
ANR	10609242	ExpressionStatement	Ins_UNKNOWN ( exc )	8417:12:288447:288465	10607122	0	True				
ANR	10609243	CallExpression	Ins_UNKNOWN ( exc )		10607122	0					
ANR	10609244	Callee	Ins_UNKNOWN		10607122	0					
ANR	10609245	Identifier	Ins_UNKNOWN		10607122	0					
ANR	10609246	ArgumentList	exc		10607122	1					
ANR	10609247	Argument	exc		10607122	0					
ANR	10609248	Identifier	exc		10607122	0					
ANR	10609249	BreakStatement	break ;	8418:10:288477:288482	10607122	381	True				
ANR	10609250	Label	case 0x92 :	8420:8:288493:288502	10607122	382	True				
ANR	10609251	IfStatement	if ( exc -> face -> blend )		10607122	383					
ANR	10609252	Condition	exc -> face -> blend	8424:15:288747:288762	10607122	0	True				
ANR	10609253	PtrMemberAccess	exc -> face -> blend		10607122	0					
ANR	10609254	PtrMemberAccess	exc -> face		10607122	0					
ANR	10609255	Identifier	exc		10607122	0					
ANR	10609256	Identifier	face		10607122	1					
ANR	10609257	Identifier	blend		10607122	1					
ANR	10609258	ExpressionStatement	Ins_GETDATA ( args )	8425:12:288778:288797	10607122	1	True				
ANR	10609259	CallExpression	Ins_GETDATA ( args )		10607122	0					
ANR	10609260	Callee	Ins_GETDATA		10607122	0					
ANR	10609261	Identifier	Ins_GETDATA		10607122	0					
ANR	10609262	ArgumentList	args		10607122	1					
ANR	10609263	Argument	args		10607122	0					
ANR	10609264	Identifier	args		10607122	0					
ANR	10609265	ElseStatement	else		10607122	0					
ANR	10609266	ExpressionStatement	Ins_UNKNOWN ( exc )	8427:12:288826:288844	10607122	0	True				
ANR	10609267	CallExpression	Ins_UNKNOWN ( exc )		10607122	0					
ANR	10609268	Callee	Ins_UNKNOWN		10607122	0					
ANR	10609269	Identifier	Ins_UNKNOWN		10607122	0					
ANR	10609270	ArgumentList	exc		10607122	1					
ANR	10609271	Argument	exc		10607122	0					
ANR	10609272	Identifier	exc		10607122	0					
ANR	10609273	BreakStatement	break ;	8428:10:288856:288861	10607122	384	True				
ANR	10609274	Label	default :	8431:8:288879:288886	10607122	385	True				
ANR	10609275	Identifier	default		10607122	0					
ANR	10609276	IfStatement	if ( opcode >= 0xE0 )		10607122	386					
ANR	10609277	Condition	opcode >= 0xE0	8432:15:288903:288916	10607122	0	True				
ANR	10609278	RelationalExpression	opcode >= 0xE0		10607122	0		>=			
ANR	10609279	Identifier	opcode		10607122	0					
ANR	10609280	PrimaryExpression	0xE0		10607122	1					
ANR	10609281	ExpressionStatement	"Ins_MIRP ( exc , args )"	8433:12:288932:288953	10607122	1	True				
ANR	10609282	CallExpression	"Ins_MIRP ( exc , args )"		10607122	0					
ANR	10609283	Callee	Ins_MIRP		10607122	0					
ANR	10609284	Identifier	Ins_MIRP		10607122	0					
ANR	10609285	ArgumentList	exc		10607122	1					
ANR	10609286	Argument	exc		10607122	0					
ANR	10609287	Identifier	exc		10607122	0					
ANR	10609288	Argument	args		10607122	1					
ANR	10609289	Identifier	args		10607122	0					
ANR	10609290	ElseStatement	else		10607122	0					
ANR	10609291	IfStatement	if ( opcode >= 0xC0 )		10607122	0					
ANR	10609292	Condition	opcode >= 0xC0	8434:20:288975:288988	10607122	0	True				
ANR	10609293	RelationalExpression	opcode >= 0xC0		10607122	0		>=			
ANR	10609294	Identifier	opcode		10607122	0					
ANR	10609295	PrimaryExpression	0xC0		10607122	1					
ANR	10609296	ExpressionStatement	"Ins_MDRP ( exc , args )"	8435:12:289004:289025	10607122	1	True				
ANR	10609297	CallExpression	"Ins_MDRP ( exc , args )"		10607122	0					
ANR	10609298	Callee	Ins_MDRP		10607122	0					
ANR	10609299	Identifier	Ins_MDRP		10607122	0					
ANR	10609300	ArgumentList	exc		10607122	1					
ANR	10609301	Argument	exc		10607122	0					
ANR	10609302	Identifier	exc		10607122	0					
ANR	10609303	Argument	args		10607122	1					
ANR	10609304	Identifier	args		10607122	0					
ANR	10609305	ElseStatement	else		10607122	0					
ANR	10609306	IfStatement	if ( opcode >= 0xB8 )		10607122	0					
ANR	10609307	Condition	opcode >= 0xB8	8436:20:289047:289060	10607122	0	True				
ANR	10609308	RelationalExpression	opcode >= 0xB8		10607122	0		>=			
ANR	10609309	Identifier	opcode		10607122	0					
ANR	10609310	PrimaryExpression	0xB8		10607122	1					
ANR	10609311	ExpressionStatement	"Ins_PUSHW ( exc , args )"	8437:12:289076:289098	10607122	1	True				
ANR	10609312	CallExpression	"Ins_PUSHW ( exc , args )"		10607122	0					
ANR	10609313	Callee	Ins_PUSHW		10607122	0					
ANR	10609314	Identifier	Ins_PUSHW		10607122	0					
ANR	10609315	ArgumentList	exc		10607122	1					
ANR	10609316	Argument	exc		10607122	0					
ANR	10609317	Identifier	exc		10607122	0					
ANR	10609318	Argument	args		10607122	1					
ANR	10609319	Identifier	args		10607122	0					
ANR	10609320	ElseStatement	else		10607122	0					
ANR	10609321	IfStatement	if ( opcode >= 0xB0 )		10607122	0					
ANR	10609322	Condition	opcode >= 0xB0	8438:20:289120:289133	10607122	0	True				
ANR	10609323	RelationalExpression	opcode >= 0xB0		10607122	0		>=			
ANR	10609324	Identifier	opcode		10607122	0					
ANR	10609325	PrimaryExpression	0xB0		10607122	1					
ANR	10609326	ExpressionStatement	"Ins_PUSHB ( exc , args )"	8439:12:289149:289171	10607122	1	True				
ANR	10609327	CallExpression	"Ins_PUSHB ( exc , args )"		10607122	0					
ANR	10609328	Callee	Ins_PUSHB		10607122	0					
ANR	10609329	Identifier	Ins_PUSHB		10607122	0					
ANR	10609330	ArgumentList	exc		10607122	1					
ANR	10609331	Argument	exc		10607122	0					
ANR	10609332	Identifier	exc		10607122	0					
ANR	10609333	Argument	args		10607122	1					
ANR	10609334	Identifier	args		10607122	0					
ANR	10609335	ElseStatement	else		10607122	0					
ANR	10609336	ExpressionStatement	Ins_UNKNOWN ( exc )	8441:12:289200:289218	10607122	0	True				
ANR	10609337	CallExpression	Ins_UNKNOWN ( exc )		10607122	0					
ANR	10609338	Callee	Ins_UNKNOWN		10607122	0					
ANR	10609339	Identifier	Ins_UNKNOWN		10607122	0					
ANR	10609340	ArgumentList	exc		10607122	1					
ANR	10609341	Argument	exc		10607122	0					
ANR	10609342	Identifier	exc		10607122	0					
ANR	10609343	IfStatement	if ( exc -> error )		10607122	12					
ANR	10609344	Condition	exc -> error	8445:11:289250:289259	10607122	0	True				
ANR	10609345	PtrMemberAccess	exc -> error		10607122	0					
ANR	10609346	Identifier	exc		10607122	0					
ANR	10609347	Identifier	error		10607122	1					
ANR	10609348	CompoundStatement		778:6:20137:20137	10607122	1					
ANR	10609349	SwitchStatement	switch ( exc -> error )		10607122	0					
ANR	10609350	Condition	exc -> error	8447:17:289288:289297	10607122	0	True				
ANR	10609351	PtrMemberAccess	exc -> error		10607122	0					
ANR	10609352	Identifier	exc		10607122	0					
ANR	10609353	Identifier	error		10607122	1					
ANR	10609354	CompoundStatement		780:8:20177:20177	10607122	1					
ANR	10609355	Statement	case	8450:8:289370:289373	10607122	0	True				
ANR	10609356	Statement	FT_ERR	8450:13:289375:289380	10607122	1	True				
ANR	10609357	Statement	(	8450:19:289381:289381	10607122	2	True				
ANR	10609358	Statement	Invalid_Opcode	8450:21:289383:289396	10607122	3	True				
ANR	10609359	Statement	)	8450:36:289398:289398	10607122	4	True				
ANR	10609360	Statement	:	8450:37:289399:289399	10607122	5	True				
ANR	10609361	CompoundStatement		785:12:20340:20382	10607122	6					
ANR	10609362	IdentifierDeclStatement	TT_DefRecord * def = exc -> IDefs ;	8452:12:289425:289458	10607122	0	True				
ANR	10609363	IdentifierDecl	* def = exc -> IDefs		10607122	0					
ANR	10609364	IdentifierDeclType	TT_DefRecord *		10607122	0					
ANR	10609365	Identifier	def		10607122	1					
ANR	10609366	AssignmentExpression	* def = exc -> IDefs		10607122	2		=			
ANR	10609367	Identifier	def		10607122	0					
ANR	10609368	PtrMemberAccess	exc -> IDefs		10607122	1					
ANR	10609369	Identifier	exc		10607122	0					
ANR	10609370	Identifier	IDefs		10607122	1					
ANR	10609371	IdentifierDeclStatement	TT_DefRecord * limit = def + exc -> numIDefs ;	8453:12:289472:289514	10607122	1	True				
ANR	10609372	IdentifierDecl	* limit = def + exc -> numIDefs		10607122	0					
ANR	10609373	IdentifierDeclType	TT_DefRecord *		10607122	0					
ANR	10609374	Identifier	limit		10607122	1					
ANR	10609375	AssignmentExpression	* limit = def + exc -> numIDefs		10607122	2		=			
ANR	10609376	Identifier	limit		10607122	0					
ANR	10609377	AdditiveExpression	def + exc -> numIDefs		10607122	1		+			
ANR	10609378	Identifier	def		10607122	0					
ANR	10609379	PtrMemberAccess	exc -> numIDefs		10607122	1					
ANR	10609380	Identifier	exc		10607122	0					
ANR	10609381	Identifier	numIDefs		10607122	1					
ANR	10609382	ForStatement	for ( ; def < limit ; def ++ )		10607122	2					
ANR	10609383	Condition	def < limit	8456:20:289538:289548	10607122	0	True				
ANR	10609384	RelationalExpression	def < limit		10607122	0		<			
ANR	10609385	Identifier	def		10607122	0					
ANR	10609386	Identifier	limit		10607122	1					
ANR	10609387	PostIncDecOperationExpression	def ++	8456:33:289551:289555	10607122	1	True				
ANR	10609388	Identifier	def		10607122	0					
ANR	10609389	IncDec	++		10607122	1					
ANR	10609390	CompoundStatement		789:12:20439:20439	10607122	2					
ANR	10609391	IfStatement	if ( def -> active && exc -> opcode == ( FT_Byte ) def -> opc )		10607122	0					
ANR	10609392	Condition	def -> active && exc -> opcode == ( FT_Byte ) def -> opc	8458:19:289592:289638	10607122	0	True				
ANR	10609393	AndExpression	def -> active && exc -> opcode == ( FT_Byte ) def -> opc		10607122	0		&&			
ANR	10609394	PtrMemberAccess	def -> active		10607122	0					
ANR	10609395	Identifier	def		10607122	0					
ANR	10609396	Identifier	active		10607122	1					
ANR	10609397	EqualityExpression	exc -> opcode == ( FT_Byte ) def -> opc		10607122	1		==			
ANR	10609398	PtrMemberAccess	exc -> opcode		10607122	0					
ANR	10609399	Identifier	exc		10607122	0					
ANR	10609400	Identifier	opcode		10607122	1					
ANR	10609401	CastExpression	( FT_Byte ) def -> opc		10607122	1					
ANR	10609402	CastTarget	FT_Byte		10607122	0					
ANR	10609403	PtrMemberAccess	def -> opc		10607122	1					
ANR	10609404	Identifier	def		10607122	0					
ANR	10609405	Identifier	opc		10607122	1					
ANR	10609406	CompoundStatement		792:16:20542:20562	10607122	1					
ANR	10609407	IdentifierDeclStatement	TT_CallRec * callrec ;	8460:16:289674:289694	10607122	0	True				
ANR	10609408	IdentifierDecl	* callrec		10607122	0					
ANR	10609409	IdentifierDeclType	TT_CallRec *		10607122	0					
ANR	10609410	Identifier	callrec		10607122	1					
ANR	10609411	IfStatement	if ( exc -> callTop >= exc -> callSize )		10607122	1					
ANR	10609412	Condition	exc -> callTop >= exc -> callSize	8463:21:289719:289747	10607122	0	True				
ANR	10609413	RelationalExpression	exc -> callTop >= exc -> callSize		10607122	0		>=			
ANR	10609414	PtrMemberAccess	exc -> callTop		10607122	0					
ANR	10609415	Identifier	exc		10607122	0					
ANR	10609416	Identifier	callTop		10607122	1					
ANR	10609417	PtrMemberAccess	exc -> callSize		10607122	1					
ANR	10609418	Identifier	exc		10607122	0					
ANR	10609419	Identifier	callSize		10607122	1					
ANR	10609420	CompoundStatement		796:16:20635:20635	10607122	1					
ANR	10609421	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Reference )	8465:18:289787:289829	10607122	0	True				
ANR	10609422	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Reference )		10607122	0		=			
ANR	10609423	PtrMemberAccess	exc -> error		10607122	0					
ANR	10609424	Identifier	exc		10607122	0					
ANR	10609425	Identifier	error		10607122	1					
ANR	10609426	CallExpression	FT_THROW ( Invalid_Reference )		10607122	1					
ANR	10609427	Callee	FT_THROW		10607122	0					
ANR	10609428	Identifier	FT_THROW		10607122	0					
ANR	10609429	ArgumentList	Invalid_Reference		10607122	1					
ANR	10609430	Argument	Invalid_Reference		10607122	0					
ANR	10609431	Identifier	Invalid_Reference		10607122	0					
ANR	10609432	GotoStatement	goto LErrorLabel_ ;	8466:18:289849:289866	10607122	1	True				
ANR	10609433	Identifier	LErrorLabel_		10607122	0					
ANR	10609434	ExpressionStatement	callrec = & exc -> callStack [ exc -> callTop ]	8469:16:289903:289942	10607122	2	True				
ANR	10609435	AssignmentExpression	callrec = & exc -> callStack [ exc -> callTop ]		10607122	0		=			
ANR	10609436	Identifier	callrec		10607122	0					
ANR	10609437	UnaryOperationExpression	& exc -> callStack [ exc -> callTop ]		10607122	1					
ANR	10609438	UnaryOperator	&		10607122	0					
ANR	10609439	ArrayIndexing	exc -> callStack [ exc -> callTop ]		10607122	1					
ANR	10609440	PtrMemberAccess	exc -> callStack		10607122	0					
ANR	10609441	Identifier	exc		10607122	0					
ANR	10609442	Identifier	callStack		10607122	1					
ANR	10609443	PtrMemberAccess	exc -> callTop		10607122	1					
ANR	10609444	Identifier	exc		10607122	0					
ANR	10609445	Identifier	callTop		10607122	1					
ANR	10609446	ExpressionStatement	callrec -> Caller_Range = exc -> curRange	8471:16:289961:289998	10607122	3	True				
ANR	10609447	AssignmentExpression	callrec -> Caller_Range = exc -> curRange		10607122	0		=			
ANR	10609448	PtrMemberAccess	callrec -> Caller_Range		10607122	0					
ANR	10609449	Identifier	callrec		10607122	0					
ANR	10609450	Identifier	Caller_Range		10607122	1					
ANR	10609451	PtrMemberAccess	exc -> curRange		10607122	1					
ANR	10609452	Identifier	exc		10607122	0					
ANR	10609453	Identifier	curRange		10607122	1					
ANR	10609454	ExpressionStatement	callrec -> Caller_IP = exc -> IP + 1	8472:16:290016:290051	10607122	4	True				
ANR	10609455	AssignmentExpression	callrec -> Caller_IP = exc -> IP + 1		10607122	0		=			
ANR	10609456	PtrMemberAccess	callrec -> Caller_IP		10607122	0					
ANR	10609457	Identifier	callrec		10607122	0					
ANR	10609458	Identifier	Caller_IP		10607122	1					
ANR	10609459	AdditiveExpression	exc -> IP + 1		10607122	1		+			
ANR	10609460	PtrMemberAccess	exc -> IP		10607122	0					
ANR	10609461	Identifier	exc		10607122	0					
ANR	10609462	Identifier	IP		10607122	1					
ANR	10609463	PrimaryExpression	1		10607122	1					
ANR	10609464	ExpressionStatement	callrec -> Cur_Count = 1	8473:16:290069:290094	10607122	5	True				
ANR	10609465	AssignmentExpression	callrec -> Cur_Count = 1		10607122	0		=			
ANR	10609466	PtrMemberAccess	callrec -> Cur_Count		10607122	0					
ANR	10609467	Identifier	callrec		10607122	0					
ANR	10609468	Identifier	Cur_Count		10607122	1					
ANR	10609469	PrimaryExpression	1		10607122	1					
ANR	10609470	ExpressionStatement	callrec -> Def = def	8474:16:290112:290139	10607122	6	True				
ANR	10609471	AssignmentExpression	callrec -> Def = def		10607122	0		=			
ANR	10609472	PtrMemberAccess	callrec -> Def		10607122	0					
ANR	10609473	Identifier	callrec		10607122	0					
ANR	10609474	Identifier	Def		10607122	1					
ANR	10609475	Identifier	def		10607122	1					
ANR	10609476	IfStatement	"if ( Ins_Goto_CodeRange ( exc , def -> range , def -> start ) == FAILURE )"		10607122	7					
ANR	10609477	Condition	"Ins_Goto_CodeRange ( exc , def -> range , def -> start ) == FAILURE"	8476:21:290163:290304	10607122	0	True				
ANR	10609478	EqualityExpression	"Ins_Goto_CodeRange ( exc , def -> range , def -> start ) == FAILURE"		10607122	0		==			
ANR	10609479	CallExpression	"Ins_Goto_CodeRange ( exc , def -> range , def -> start )"		10607122	0					
ANR	10609480	Callee	Ins_Goto_CodeRange		10607122	0					
ANR	10609481	Identifier	Ins_Goto_CodeRange		10607122	0					
ANR	10609482	ArgumentList	exc		10607122	1					
ANR	10609483	Argument	exc		10607122	0					
ANR	10609484	Identifier	exc		10607122	0					
ANR	10609485	Argument	def -> range		10607122	1					
ANR	10609486	PtrMemberAccess	def -> range		10607122	0					
ANR	10609487	Identifier	def		10607122	0					
ANR	10609488	Identifier	range		10607122	1					
ANR	10609489	Argument	def -> start		10607122	2					
ANR	10609490	PtrMemberAccess	def -> start		10607122	0					
ANR	10609491	Identifier	def		10607122	0					
ANR	10609492	Identifier	start		10607122	1					
ANR	10609493	Identifier	FAILURE		10607122	1					
ANR	10609494	GotoStatement	goto LErrorLabel_ ;	8479:18:290326:290343	10607122	1	True				
ANR	10609495	Identifier	LErrorLabel_		10607122	0					
ANR	10609496	GotoStatement	goto LSuiteLabel_ ;	8481:16:290362:290379	10607122	8	True				
ANR	10609497	Identifier	LSuiteLabel_		10607122	0					
ANR	10609498	ExpressionStatement	exc -> error = FT_THROW ( Invalid_Opcode )	8486:10:290434:290473	10607122	7	True				
ANR	10609499	AssignmentExpression	exc -> error = FT_THROW ( Invalid_Opcode )		10607122	0		=			
ANR	10609500	PtrMemberAccess	exc -> error		10607122	0					
ANR	10609501	Identifier	exc		10607122	0					
ANR	10609502	Identifier	error		10607122	1					
ANR	10609503	CallExpression	FT_THROW ( Invalid_Opcode )		10607122	1					
ANR	10609504	Callee	FT_THROW		10607122	0					
ANR	10609505	Identifier	FT_THROW		10607122	0					
ANR	10609506	ArgumentList	Invalid_Opcode		10607122	1					
ANR	10609507	Argument	Invalid_Opcode		10607122	0					
ANR	10609508	Identifier	Invalid_Opcode		10607122	0					
ANR	10609509	GotoStatement	goto LErrorLabel_ ;	8487:10:290485:290502	10607122	8	True				
ANR	10609510	Identifier	LErrorLabel_		10607122	0					
ANR	10609511	BreakStatement	break ;	8490:10:290521:290526	10607122	9	True				
ANR	10609512	Label	default :	8495:8:290752:290759	10607122	10	True				
ANR	10609513	Identifier	default		10607122	0					
ANR	10609514	GotoStatement	goto LErrorLabel_ ;	8496:10:290771:290788	10607122	11	True				
ANR	10609515	Identifier	LErrorLabel_		10607122	0					
ANR	10609516	BreakStatement	break ;	8499:8:290805:290810	10607122	12	True				
ANR	10609517	ExpressionStatement	exc -> top = exc -> new_top	8504:6:290844:290867	10607122	13	True				
ANR	10609518	AssignmentExpression	exc -> top = exc -> new_top		10607122	0		=			
ANR	10609519	PtrMemberAccess	exc -> top		10607122	0					
ANR	10609520	Identifier	exc		10607122	0					
ANR	10609521	Identifier	top		10607122	1					
ANR	10609522	PtrMemberAccess	exc -> new_top		10607122	1					
ANR	10609523	Identifier	exc		10607122	0					
ANR	10609524	Identifier	new_top		10607122	1					
ANR	10609525	IfStatement	if ( exc -> step_ins )		10607122	14					
ANR	10609526	Condition	exc -> step_ins	8506:11:290881:290893	10607122	0	True				
ANR	10609527	PtrMemberAccess	exc -> step_ins		10607122	0					
ANR	10609528	Identifier	exc		10607122	0					
ANR	10609529	Identifier	step_ins		10607122	1					
ANR	10609530	ExpressionStatement	exc -> IP += exc -> length	8507:8:290905:290927	10607122	1	True				
ANR	10609531	AssignmentExpression	exc -> IP += exc -> length		10607122	0		+=			
ANR	10609532	PtrMemberAccess	exc -> IP		10607122	0					
ANR	10609533	Identifier	exc		10607122	0					
ANR	10609534	Identifier	IP		10607122	1					
ANR	10609535	PtrMemberAccess	exc -> length		10607122	1					
ANR	10609536	Identifier	exc		10607122	0					
ANR	10609537	Identifier	length		10607122	1					
ANR	10609538	IfStatement	if ( ++ ins_counter > TT_CONFIG_OPTION_MAX_RUNNABLE_OPCODES )		10607122	15					
ANR	10609539	Condition	++ ins_counter > TT_CONFIG_OPTION_MAX_RUNNABLE_OPCODES	8511:11:291071:291123	10607122	0	True				
ANR	10609540	RelationalExpression	++ ins_counter > TT_CONFIG_OPTION_MAX_RUNNABLE_OPCODES		10607122	0		>			
ANR	10609541	UnaryExpression	++ ins_counter		10607122	0					
ANR	10609542	IncDec	++		10607122	0					
ANR	10609543	Identifier	ins_counter		10607122	1					
ANR	10609544	Identifier	TT_CONFIG_OPTION_MAX_RUNNABLE_OPCODES		10607122	1					
ANR	10609545	ReturnStatement	return FT_THROW ( Execution_Too_Long ) ;	8512:8:291135:291172	10607122	1	True				
ANR	10609546	CallExpression	FT_THROW ( Execution_Too_Long )		10607122	0					
ANR	10609547	Callee	FT_THROW		10607122	0					
ANR	10609548	Identifier	FT_THROW		10607122	0					
ANR	10609549	ArgumentList	Execution_Too_Long		10607122	1					
ANR	10609550	Argument	Execution_Too_Long		10607122	0					
ANR	10609551	Identifier	Execution_Too_Long		10607122	0					
ANR	10609552	Label	LSuiteLabel_ :	8514:4:291179:291191	10607122	16	True				
ANR	10609553	Identifier	LSuiteLabel_		10607122	0					
ANR	10609554	IfStatement	if ( exc -> IP >= exc -> codeSize )		10607122	17					
ANR	10609555	Condition	exc -> IP >= exc -> codeSize	8515:11:291204:291227	10607122	0	True				
ANR	10609556	RelationalExpression	exc -> IP >= exc -> codeSize		10607122	0		>=			
ANR	10609557	PtrMemberAccess	exc -> IP		10607122	0					
ANR	10609558	Identifier	exc		10607122	0					
ANR	10609559	Identifier	IP		10607122	1					
ANR	10609560	PtrMemberAccess	exc -> codeSize		10607122	1					
ANR	10609561	Identifier	exc		10607122	0					
ANR	10609562	Identifier	codeSize		10607122	1					
ANR	10609563	CompoundStatement		848:6:22105:22105	10607122	1					
ANR	10609564	IfStatement	if ( exc -> callTop > 0 )		10607122	0					
ANR	10609565	Condition	exc -> callTop > 0	8517:13:291252:291267	10607122	0	True				
ANR	10609566	RelationalExpression	exc -> callTop > 0		10607122	0		>			
ANR	10609567	PtrMemberAccess	exc -> callTop		10607122	0					
ANR	10609568	Identifier	exc		10607122	0					
ANR	10609569	Identifier	callTop		10607122	1					
ANR	10609570	PrimaryExpression	0		10607122	1					
ANR	10609571	CompoundStatement		850:8:22147:22147	10607122	1					
ANR	10609572	ExpressionStatement	exc -> error = FT_THROW ( Code_Overflow )	8519:10:291291:291329	10607122	0	True				
ANR	10609573	AssignmentExpression	exc -> error = FT_THROW ( Code_Overflow )		10607122	0		=			
ANR	10609574	PtrMemberAccess	exc -> error		10607122	0					
ANR	10609575	Identifier	exc		10607122	0					
ANR	10609576	Identifier	error		10607122	1					
ANR	10609577	CallExpression	FT_THROW ( Code_Overflow )		10607122	1					
ANR	10609578	Callee	FT_THROW		10607122	0					
ANR	10609579	Identifier	FT_THROW		10607122	0					
ANR	10609580	ArgumentList	Code_Overflow		10607122	1					
ANR	10609581	Argument	Code_Overflow		10607122	0					
ANR	10609582	Identifier	Code_Overflow		10607122	0					
ANR	10609583	GotoStatement	goto LErrorLabel_ ;	8520:10:291341:291358	10607122	1	True				
ANR	10609584	Identifier	LErrorLabel_		10607122	0					
ANR	10609585	ElseStatement	else		10607122	0					
ANR	10609586	GotoStatement	goto LNo_Error_ ;	8523:10:291393:291408	10607122	0	True				
ANR	10609587	Identifier	LNo_Error_		10607122	0					
ANR	10609588	Condition	! exc -> instruction_trap	8525:14:291432:291453	10607122	1	True				
ANR	10609589	UnaryOperationExpression	! exc -> instruction_trap		10607122	0					
ANR	10609590	UnaryOperator	!		10607122	0					
ANR	10609591	PtrMemberAccess	exc -> instruction_trap		10607122	1					
ANR	10609592	Identifier	exc		10607122	0					
ANR	10609593	Identifier	instruction_trap		10607122	1					
ANR	10609594	Label	LNo_Error_ :	8527:2:291461:291471	10607122	57	True				
ANR	10609595	Identifier	LNo_Error_		10607122	0					
ANR	10609596	ExpressionStatement	"FT_TRACE4 ( ( ""  %d instruction%s executed\\n"" , ins_counter , ins_counter == 1 ? """" : ""s"" ) )"	8528:4:291477:291597	10607122	58	True				
ANR	10609597	CallExpression	"FT_TRACE4 ( ( ""  %d instruction%s executed\\n"" , ins_counter , ins_counter == 1 ? """" : ""s"" ) )"		10607122	0					
ANR	10609598	Callee	FT_TRACE4		10607122	0					
ANR	10609599	Identifier	FT_TRACE4		10607122	0					
ANR	10609600	ArgumentList	"""  %d instruction%s executed\\n"" , ins_counter , ins_counter == 1 ? """" : ""s"""		10607122	1					
ANR	10609601	Argument	"""  %d instruction%s executed\\n"" , ins_counter , ins_counter == 1 ? """" : ""s"""		10607122	0					
ANR	10609602	Expression	"""  %d instruction%s executed\\n"" , ins_counter , ins_counter == 1 ? """" : ""s"""		10607122	0					
ANR	10609603	PrimaryExpression	"""  %d instruction%s executed\\n"""		10607122	0					
ANR	10609604	Expression	"ins_counter , ins_counter == 1 ? """" : ""s"""		10607122	1					
ANR	10609605	Identifier	ins_counter		10607122	0					
ANR	10609606	ConditionalExpression	"ins_counter == 1 ? """" : ""s"""		10607122	1					
ANR	10609607	Condition	ins_counter == 1		10607122	0					
ANR	10609608	EqualityExpression	ins_counter == 1		10607122	0		==			
ANR	10609609	Identifier	ins_counter		10607122	0					
ANR	10609610	PrimaryExpression	1		10607122	1					
ANR	10609611	PrimaryExpression	""""""		10607122	1					
ANR	10609612	PrimaryExpression	"""s"""		10607122	2					
ANR	10609613	ReturnStatement	return FT_Err_Ok ;	8531:4:291603:291619	10607122	59	True				
ANR	10609614	Identifier	FT_Err_Ok		10607122	0					
ANR	10609615	Label	LErrorCodeOverflow_ :	8533:2:291624:291643	10607122	60	True				
ANR	10609616	Identifier	LErrorCodeOverflow_		10607122	0					
ANR	10609617	ExpressionStatement	exc -> error = FT_THROW ( Code_Overflow )	8534:4:291649:291687	10607122	61	True				
ANR	10609618	AssignmentExpression	exc -> error = FT_THROW ( Code_Overflow )		10607122	0		=			
ANR	10609619	PtrMemberAccess	exc -> error		10607122	0					
ANR	10609620	Identifier	exc		10607122	0					
ANR	10609621	Identifier	error		10607122	1					
ANR	10609622	CallExpression	FT_THROW ( Code_Overflow )		10607122	1					
ANR	10609623	Callee	FT_THROW		10607122	0					
ANR	10609624	Identifier	FT_THROW		10607122	0					
ANR	10609625	ArgumentList	Code_Overflow		10607122	1					
ANR	10609626	Argument	Code_Overflow		10607122	0					
ANR	10609627	Identifier	Code_Overflow		10607122	0					
ANR	10609628	Label	LErrorLabel_ :	8536:2:291692:291704	10607122	62	True				
ANR	10609629	Identifier	LErrorLabel_		10607122	0					
ANR	10609630	IfStatement	if ( exc -> error && ! exc -> instruction_trap )		10607122	63					
ANR	10609631	Condition	exc -> error && ! exc -> instruction_trap	8537:9:291715:291750	10607122	0	True				
ANR	10609632	AndExpression	exc -> error && ! exc -> instruction_trap		10607122	0		&&			
ANR	10609633	PtrMemberAccess	exc -> error		10607122	0					
ANR	10609634	Identifier	exc		10607122	0					
ANR	10609635	Identifier	error		10607122	1					
ANR	10609636	UnaryOperationExpression	! exc -> instruction_trap		10607122	1					
ANR	10609637	UnaryOperator	!		10607122	0					
ANR	10609638	PtrMemberAccess	exc -> instruction_trap		10607122	1					
ANR	10609639	Identifier	exc		10607122	0					
ANR	10609640	Identifier	instruction_trap		10607122	1					
ANR	10609641	ExpressionStatement	"FT_TRACE1 ( ( ""  The interpreter returned error 0x%x\\n"" , exc -> error ) )"	8538:6:291760:291828	10607122	1	True				
ANR	10609642	CallExpression	"FT_TRACE1 ( ( ""  The interpreter returned error 0x%x\\n"" , exc -> error ) )"		10607122	0					
ANR	10609643	Callee	FT_TRACE1		10607122	0					
ANR	10609644	Identifier	FT_TRACE1		10607122	0					
ANR	10609645	ArgumentList	"""  The interpreter returned error 0x%x\\n"" , exc -> error"		10607122	1					
ANR	10609646	Argument	"""  The interpreter returned error 0x%x\\n"" , exc -> error"		10607122	0					
ANR	10609647	Expression	"""  The interpreter returned error 0x%x\\n"" , exc -> error"		10607122	0					
ANR	10609648	PrimaryExpression	"""  The interpreter returned error 0x%x\\n"""		10607122	0					
ANR	10609649	PtrMemberAccess	exc -> error		10607122	1					
ANR	10609650	Identifier	exc		10607122	0					
ANR	10609651	Identifier	error		10607122	1					
ANR	10609652	ReturnStatement	return exc -> error ;	8540:4:291835:291852	10607122	64	True				
ANR	10609653	PtrMemberAccess	exc -> error		10607122	0					
ANR	10609654	Identifier	exc		10607122	0					
ANR	10609655	Identifier	error		10607122	1					
ANR	10609656	Identifier	TT_RunIns		10607122	1					
ANR	10609657	ParameterList	TT_ExecContext exc		10607122	2					
ANR	10609658	Parameter	TT_ExecContext exc	7668:13:269107:269125	10607122	0	True				
ANR	10609659	ParameterType	TT_ExecContext		10607122	0					
ANR	10609660	Identifier	exc		10607122	1					
ANR	10609661	CFGEntryNode	ENTRY		10607122		True				
ANR	10609662	CFGExitNode	EXIT		10607122		True				
ANR	10609663	Symbol	exc -> new_top		10607122						
ANR	10609664	Symbol	exc -> GS . instruct_control		10607122						
ANR	10609665	Symbol	def -> start		10607122						
ANR	10609666	Symbol	def		10607122						
ANR	10609667	Symbol	* * opcode_pointer		10607122						
ANR	10609668	Symbol	Read_CVT_Stretched		10607122						
ANR	10609669	Symbol	* exc -> IP		10607122						
ANR	10609670	Symbol	exc -> tt_metrics . ratio		10607122						
ANR	10609671	Symbol	SUBPIXEL_HINTING_INFINALITY		10607122						
ANR	10609672	Symbol	exc		10607122						
ANR	10609673	Symbol	Read_CVT		10607122						
ANR	10609674	Symbol	exc -> loopcall_counter		10607122						
ANR	10609675	Symbol	opcode_length		10607122						
ANR	10609676	Symbol	* opcode_pointer		10607122						
ANR	10609677	Symbol	* * exc -> face		10607122						
ANR	10609678	Symbol	* opcode_length		10607122						
ANR	10609679	Symbol	exc -> error		10607122						
ANR	10609680	Symbol	exc -> instruction_trap		10607122						
ANR	10609681	Symbol	def -> range		10607122						
ANR	10609682	Symbol	exc -> IP		10607122						
ANR	10609683	Symbol	exc -> curRange		10607122						
ANR	10609684	Symbol	exc -> face		10607122						
ANR	10609685	Symbol	Write_CVT_Stretched		10607122						
ANR	10609686	Symbol	* opcode_name		10607122						
ANR	10609687	Symbol	exc -> pedantic_hinting		10607122						
ANR	10609688	Symbol	exc -> face -> root . num_glyphs		10607122						
ANR	10609689	Symbol	num_twilight_points		10607122						
ANR	10609690	Symbol	exc -> twilight . n_points		10607122						
ANR	10609691	Symbol	exc -> callTop		10607122						
ANR	10609692	Symbol	exc -> codeSize		10607122						
ANR	10609693	Symbol	exc -> opcode		10607122						
ANR	10609694	Symbol	callrec -> Caller_Range		10607122						
ANR	10609695	Symbol	exc -> pts		10607122						
ANR	10609696	Symbol	SUBPIXEL_HINTING_MINIMAL		10607122						
ANR	10609697	Symbol	exc -> face -> root		10607122						
ANR	10609698	Symbol	* exc		10607122						
ANR	10609699	Symbol	callrec -> Caller_IP		10607122						
ANR	10609700	Symbol	* exc -> face		10607122						
ANR	10609701	Symbol	* opcode_name [ exc -> opcode ]		10607122						
ANR	10609702	Symbol	Ins_Goto_CodeRange		10607122						
ANR	10609703	Symbol	opcode_size		10607122						
ANR	10609704	Symbol	* def		10607122						
ANR	10609705	Symbol	Move_CVT		10607122						
ANR	10609706	Symbol	exc -> callSize		10607122						
ANR	10609707	Symbol	exc -> top		10607122						
ANR	10609708	Symbol	def -> opc		10607122						
ANR	10609709	Symbol	exc -> twilight		10607122						
ANR	10609710	Symbol	exc -> stackSize		10607122						
ANR	10609711	Symbol	Too_Few_Arguments		10607122						
ANR	10609712	Symbol	opcode_patterns		10607122						
ANR	10609713	Symbol	Write_CVT		10607122						
ANR	10609714	Symbol	* * exc		10607122						
ANR	10609715	Symbol	callrec -> Cur_Count		10607122						
ANR	10609716	Symbol	exc -> cvtSize		10607122						
ANR	10609717	Symbol	exc -> step_ins		10607122						
ANR	10609718	Symbol	Code_Overflow		10607122						
ANR	10609719	Symbol	Move_CVT_Stretched		10607122						
ANR	10609720	Symbol	cnt		10607122						
ANR	10609721	Symbol	* exc -> face -> blend		10607122						
ANR	10609722	Symbol	exc -> face -> root . family_name		10607122						
ANR	10609723	Symbol	i		10607122						
ANR	10609724	Symbol	ins_counter		10607122						
ANR	10609725	Symbol	& exc -> face -> root		10607122						
ANR	10609726	Symbol	exc -> GS		10607122						
ANR	10609727	Symbol	FT_MAX		10607122						
ANR	10609728	Symbol	FAILURE		10607122						
ANR	10609729	Symbol	n		10607122						
ANR	10609730	Symbol	* callrec		10607122						
ANR	10609731	Symbol	exc -> subpixel_hinting_lean		10607122						
ANR	10609732	Symbol	* * opcode_pattern		10607122						
ANR	10609733	Symbol	exc -> iup_called		10607122						
ANR	10609734	Symbol	Invalid_Opcode		10607122						
ANR	10609735	Symbol	exc -> GS . round_state		10607122						
ANR	10609736	Symbol	FT_MIN		10607122						
ANR	10609737	Symbol	* exc -> opcode		10607122						
ANR	10609738	Symbol	exc -> iupy_called		10607122						
ANR	10609739	Symbol	exc -> callStack		10607122						
ANR	10609740	Symbol	exc -> face -> blend		10607122						
ANR	10609741	Symbol	exc -> face -> blend -> num_axis		10607122						
ANR	10609742	Symbol	FT_Err_Ok		10607122						
ANR	10609743	Symbol	exc -> neg_jump_counter		10607122						
ANR	10609744	Symbol	exc -> metrics . x_ppem		10607122						
ANR	10609745	Symbol	opcode		10607122						
ANR	10609746	Symbol	exc -> pts . n_points		10607122						
ANR	10609747	Symbol	exc -> loopcall_counter_max		10607122						
ANR	10609748	Symbol	* opcode_size		10607122						
ANR	10609749	Symbol	* * * exc		10607122						
ANR	10609750	Symbol	exc -> IDefs		10607122						
ANR	10609751	Symbol	Stack_Overflow		10607122						
ANR	10609752	Symbol	Invalid_Reference		10607122						
ANR	10609753	Symbol	exc -> face -> root . style_name		10607122						
ANR	10609754	Symbol	exc -> code		10607122						
ANR	10609755	Symbol	exc -> func_read_cvt		10607122						
ANR	10609756	Symbol	* opcode_pattern		10607122						
ANR	10609757	Symbol	limit		10607122						
ANR	10609758	Symbol	TT_CONFIG_OPTION_MAX_RUNNABLE_OPCODES		10607122						
ANR	10609759	Symbol	Execution_Too_Long		10607122						
ANR	10609760	Symbol	* * exc -> opcode		10607122						
ANR	10609761	Symbol	* * i		10607122						
ANR	10609762	Symbol	exc -> numIDefs		10607122						
ANR	10609763	Symbol	exc -> args		10607122						
ANR	10609764	Symbol	Current_Ppem		10607122						
ANR	10609765	Symbol	TRUE		10607122						
ANR	10609766	Symbol	exc -> metrics		10607122						
ANR	10609767	Symbol	exc -> tt_metrics		10607122						
ANR	10609768	Symbol	exc -> backward_compatibility		10607122						
ANR	10609769	Symbol	exc -> metrics . y_ppem		10607122						
ANR	10609770	Symbol	exc -> iupx_called		10607122						
ANR	10609771	Symbol	callrec		10607122						
ANR	10609772	Symbol	* exc -> top		10607122						
ANR	10609773	Symbol	opcode_name		10607122						
ANR	10609774	Symbol	callrec -> Def		10607122						
ANR	10609775	Symbol	exc -> func_move_cvt		10607122						
ANR	10609776	Symbol	exc -> stack		10607122						
ANR	10609777	Symbol	* Pop_Push_Count		10607122						
ANR	10609778	Symbol	* exc -> code		10607122						
ANR	10609779	Symbol	exc -> length		10607122						
ANR	10609780	Symbol	FT_IS_TRICKY		10607122						
ANR	10609781	Symbol	exc -> func_cur_ppem		10607122						
ANR	10609782	Symbol	Current_Ppem_Stretched		10607122						
ANR	10609783	Symbol	exc -> neg_jump_counter_max		10607122						
ANR	10609784	Symbol	* exc -> stack		10607122						
ANR	10609785	Symbol	def -> active		10607122						
ANR	10609786	Symbol	Pop_Push_Count		10607122						
ANR	10609787	Symbol	opcode_pattern		10607122						
ANR	10609788	Symbol	exc -> func_write_cvt		10607122						
ANR	10609789	Symbol	FT_THROW		10607122						
ANR	10609790	Symbol	args		10607122						
ANR	10609791	Symbol	* i		10607122						
ANR	10609792	Symbol	opcode_pointer		10607122						
ANR	10609793	Symbol	* * opcode_name		10607122						
ANR	10609794	Symbol	* n		10607122						
ANR	10609795	Symbol	FALSE		10607122						
ANR	10609796	DeclStmt									
ANR	10609797	Decl							int	int	_tt_interp_dummy
