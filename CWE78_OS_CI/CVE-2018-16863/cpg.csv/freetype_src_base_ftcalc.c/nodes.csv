command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3331552	File	data/converged/CVE-2018-16863_ghostpdl/freetype_src_base_ftcalc.c								
ANR	3331553	ClassDef	FT_Int64_	51:10:2659:2732							
ANR	3331554	DeclStmt									
ANR	3331555	Decl							FT_UInt32	FT_UInt32	lo
ANR	3331556	DeclStmt									
ANR	3331557	Decl							FT_UInt32	FT_UInt32	hi
ANR	3331558	DeclStmt									
ANR	3331559	Decl							FT_Int64_	FT_Int64_	FT_Int64
ANR	3331560	Function	FT_RoundFix	88:2:3967:4062							
ANR	3331561	FunctionDef	FT_RoundFix (FT_Fixed a)		3331560	0					
ANR	3331562	CompoundStatement		89:2:3996:4062	3331560	0					
ANR	3331563	ReturnStatement	"return ( ADD_LONG ( a , 0x8000L - ( a < 0 ) ) ) & ~0xFFFFL ;"	90:4:4002:4058	3331560	0	True				
ANR	3331564	BitAndExpression	"( ADD_LONG ( a , 0x8000L - ( a < 0 ) ) ) & ~0xFFFFL"		3331560	0		&			
ANR	3331565	CallExpression	"ADD_LONG ( a , 0x8000L - ( a < 0 ) )"		3331560	0					
ANR	3331566	Callee	ADD_LONG		3331560	0					
ANR	3331567	Identifier	ADD_LONG		3331560	0					
ANR	3331568	ArgumentList	a		3331560	1					
ANR	3331569	Argument	a		3331560	0					
ANR	3331570	Identifier	a		3331560	0					
ANR	3331571	Argument	0x8000L - ( a < 0 )		3331560	1					
ANR	3331572	AdditiveExpression	0x8000L - ( a < 0 )		3331560	0		-			
ANR	3331573	PrimaryExpression	0x8000L		3331560	0					
ANR	3331574	RelationalExpression	a < 0		3331560	1		<			
ANR	3331575	Identifier	a		3331560	0					
ANR	3331576	PrimaryExpression	0		3331560	1					
ANR	3331577	Identifier	~0xFFFFL		3331560	1					
ANR	3331578	Identifier	FT_RoundFix		3331560	1					
ANR	3331579	ParameterList	FT_Fixed a		3331560	2					
ANR	3331580	Parameter	FT_Fixed a	88:15:3980:3990	3331560	0	True				
ANR	3331581	ParameterType	FT_Fixed		3331560	0					
ANR	3331582	Identifier	a		3331560	1					
ANR	3331583	CFGEntryNode	ENTRY		3331560		True				
ANR	3331584	CFGExitNode	EXIT		3331560		True				
ANR	3331585	Symbol	a		3331560						
ANR	3331586	Symbol	ADD_LONG		3331560						
ANR	3331587	Symbol	~0xFFFFL		3331560						
ANR	3331588	Function	FT_CeilFix	97:2:4136:4218							
ANR	3331589	FunctionDef	FT_CeilFix (FT_Fixed a)		3331588	0					
ANR	3331590	CompoundStatement		98:2:4164:4218	3331588	0					
ANR	3331591	ReturnStatement	"return ( ADD_LONG ( a , 0xFFFFL ) ) & ~0xFFFFL ;"	99:4:4170:4214	3331588	0	True				
ANR	3331592	BitAndExpression	"( ADD_LONG ( a , 0xFFFFL ) ) & ~0xFFFFL"		3331588	0		&			
ANR	3331593	CallExpression	"ADD_LONG ( a , 0xFFFFL )"		3331588	0					
ANR	3331594	Callee	ADD_LONG		3331588	0					
ANR	3331595	Identifier	ADD_LONG		3331588	0					
ANR	3331596	ArgumentList	a		3331588	1					
ANR	3331597	Argument	a		3331588	0					
ANR	3331598	Identifier	a		3331588	0					
ANR	3331599	Argument	0xFFFFL		3331588	1					
ANR	3331600	PrimaryExpression	0xFFFFL		3331588	0					
ANR	3331601	Identifier	~0xFFFFL		3331588	1					
ANR	3331602	Identifier	FT_CeilFix		3331588	1					
ANR	3331603	ParameterList	FT_Fixed a		3331588	2					
ANR	3331604	Parameter	FT_Fixed a	97:14:4148:4158	3331588	0	True				
ANR	3331605	ParameterType	FT_Fixed		3331588	0					
ANR	3331606	Identifier	a		3331588	1					
ANR	3331607	CFGEntryNode	ENTRY		3331588		True				
ANR	3331608	CFGExitNode	EXIT		3331588		True				
ANR	3331609	Symbol	a		3331588						
ANR	3331610	Symbol	~0xFFFFL		3331588						
ANR	3331611	Symbol	ADD_LONG		3331588						
ANR	3331612	Function	FT_FloorFix	106:2:4292:4350							
ANR	3331613	FunctionDef	FT_FloorFix (FT_Fixed a)		3331612	0					
ANR	3331614	CompoundStatement		107:2:4321:4350	3331612	0					
ANR	3331615	ReturnStatement	return a & ~0xFFFFL ;	108:4:4327:4346	3331612	0	True				
ANR	3331616	BitAndExpression	a & ~0xFFFFL		3331612	0		&			
ANR	3331617	Identifier	a		3331612	0					
ANR	3331618	Identifier	~0xFFFFL		3331612	1					
ANR	3331619	Identifier	FT_FloorFix		3331612	1					
ANR	3331620	ParameterList	FT_Fixed a		3331612	2					
ANR	3331621	Parameter	FT_Fixed a	106:15:4305:4315	3331612	0	True				
ANR	3331622	ParameterType	FT_Fixed		3331612	0					
ANR	3331623	Identifier	a		3331612	1					
ANR	3331624	CFGEntryNode	ENTRY		3331612		True				
ANR	3331625	CFGExitNode	EXIT		3331612		True				
ANR	3331626	Symbol	a		3331612						
ANR	3331627	Symbol	~0xFFFFL		3331612						
ANR	3331628	Function	FT_MSB	114:2:4396:4908							
ANR	3331629	FunctionDef	FT_MSB (FT_UInt32 z)		3331628	0					
ANR	3331630	CompoundStatement		115:2:4420:4908	3331628	0					
ANR	3331631	IdentifierDeclStatement	FT_Int shift = 0 ;	116:4:4426:4443	3331628	0	True				
ANR	3331632	IdentifierDecl	shift = 0		3331628	0					
ANR	3331633	IdentifierDeclType	FT_Int		3331628	0					
ANR	3331634	Identifier	shift		3331628	1					
ANR	3331635	AssignmentExpression	shift = 0		3331628	2		=			
ANR	3331636	Identifier	shift		3331628	0					
ANR	3331637	PrimaryExpression	0		3331628	1					
ANR	3331638	IfStatement	if ( z & 0xFFFF0000UL )		3331628	1					
ANR	3331639	Condition	z & 0xFFFF0000UL	120:9:4501:4516	3331628	0	True				
ANR	3331640	BitAndExpression	z & 0xFFFF0000UL		3331628	0		&			
ANR	3331641	Identifier	z		3331628	0					
ANR	3331642	PrimaryExpression	0xFFFF0000UL		3331628	1					
ANR	3331643	CompoundStatement		7:4:103:103	3331628	1					
ANR	3331644	ExpressionStatement	z >>= 16	122:6:4532:4544	3331628	0	True				
ANR	3331645	AssignmentExpression	z >>= 16		3331628	0		>>=			
ANR	3331646	Identifier	z		3331628	0					
ANR	3331647	PrimaryExpression	16		3331628	1					
ANR	3331648	ExpressionStatement	shift += 16	123:6:4552:4564	3331628	1	True				
ANR	3331649	AssignmentExpression	shift += 16		3331628	0		+=			
ANR	3331650	Identifier	shift		3331628	0					
ANR	3331651	PrimaryExpression	16		3331628	1					
ANR	3331652	IfStatement	if ( z & 0x0000FF00UL )		3331628	2					
ANR	3331653	Condition	z & 0x0000FF00UL	125:9:4581:4596	3331628	0	True				
ANR	3331654	BitAndExpression	z & 0x0000FF00UL		3331628	0		&			
ANR	3331655	Identifier	z		3331628	0					
ANR	3331656	PrimaryExpression	0x0000FF00UL		3331628	1					
ANR	3331657	CompoundStatement		12:4:183:183	3331628	1					
ANR	3331658	ExpressionStatement	z >>= 8	127:6:4612:4623	3331628	0	True				
ANR	3331659	AssignmentExpression	z >>= 8		3331628	0		>>=			
ANR	3331660	Identifier	z		3331628	0					
ANR	3331661	PrimaryExpression	8		3331628	1					
ANR	3331662	ExpressionStatement	shift += 8	128:6:4631:4642	3331628	1	True				
ANR	3331663	AssignmentExpression	shift += 8		3331628	0		+=			
ANR	3331664	Identifier	shift		3331628	0					
ANR	3331665	PrimaryExpression	8		3331628	1					
ANR	3331666	IfStatement	if ( z & 0x000000F0UL )		3331628	3					
ANR	3331667	Condition	z & 0x000000F0UL	130:9:4659:4674	3331628	0	True				
ANR	3331668	BitAndExpression	z & 0x000000F0UL		3331628	0		&			
ANR	3331669	Identifier	z		3331628	0					
ANR	3331670	PrimaryExpression	0x000000F0UL		3331628	1					
ANR	3331671	CompoundStatement		17:4:261:261	3331628	1					
ANR	3331672	ExpressionStatement	z >>= 4	132:6:4690:4701	3331628	0	True				
ANR	3331673	AssignmentExpression	z >>= 4		3331628	0		>>=			
ANR	3331674	Identifier	z		3331628	0					
ANR	3331675	PrimaryExpression	4		3331628	1					
ANR	3331676	ExpressionStatement	shift += 4	133:6:4709:4720	3331628	1	True				
ANR	3331677	AssignmentExpression	shift += 4		3331628	0		+=			
ANR	3331678	Identifier	shift		3331628	0					
ANR	3331679	PrimaryExpression	4		3331628	1					
ANR	3331680	IfStatement	if ( z & 0x0000000CUL )		3331628	4					
ANR	3331681	Condition	z & 0x0000000CUL	135:9:4737:4752	3331628	0	True				
ANR	3331682	BitAndExpression	z & 0x0000000CUL		3331628	0		&			
ANR	3331683	Identifier	z		3331628	0					
ANR	3331684	PrimaryExpression	0x0000000CUL		3331628	1					
ANR	3331685	CompoundStatement		22:4:339:339	3331628	1					
ANR	3331686	ExpressionStatement	z >>= 2	137:6:4768:4779	3331628	0	True				
ANR	3331687	AssignmentExpression	z >>= 2		3331628	0		>>=			
ANR	3331688	Identifier	z		3331628	0					
ANR	3331689	PrimaryExpression	2		3331628	1					
ANR	3331690	ExpressionStatement	shift += 2	138:6:4787:4798	3331628	1	True				
ANR	3331691	AssignmentExpression	shift += 2		3331628	0		+=			
ANR	3331692	Identifier	shift		3331628	0					
ANR	3331693	PrimaryExpression	2		3331628	1					
ANR	3331694	IfStatement	if ( z & 0x00000002UL )		3331628	5					
ANR	3331695	Condition	z & 0x00000002UL	140:9:4815:4830	3331628	0	True				
ANR	3331696	BitAndExpression	z & 0x00000002UL		3331628	0		&			
ANR	3331697	Identifier	z		3331628	0					
ANR	3331698	PrimaryExpression	0x00000002UL		3331628	1					
ANR	3331699	CompoundStatement		27:4:417:417	3331628	1					
ANR	3331700	ExpressionStatement	shift += 1	143:6:4868:4879	3331628	0	True				
ANR	3331701	AssignmentExpression	shift += 1		3331628	0		+=			
ANR	3331702	Identifier	shift		3331628	0					
ANR	3331703	PrimaryExpression	1		3331628	1					
ANR	3331704	ReturnStatement	return shift ;	146:4:4892:4904	3331628	6	True				
ANR	3331705	Identifier	shift		3331628	0					
ANR	3331706	Identifier	FT_MSB		3331628	1					
ANR	3331707	ParameterList	FT_UInt32 z		3331628	2					
ANR	3331708	Parameter	FT_UInt32 z	114:10:4404:4414	3331628	0	True				
ANR	3331709	ParameterType	FT_UInt32		3331628	0					
ANR	3331710	Identifier	z		3331628	1					
ANR	3331711	CFGEntryNode	ENTRY		3331628		True				
ANR	3331712	CFGExitNode	EXIT		3331628		True				
ANR	3331713	Symbol	shift		3331628						
ANR	3331714	Symbol	z		3331628						
ANR	3331715	Function	FT_Hypot	155:2:5000:5137							
ANR	3331716	FunctionDef	"FT_Hypot (FT_Fixed x , FT_Fixed y)"		3331715	0					
ANR	3331717	CompoundStatement		157:2:5051:5137	3331715	0					
ANR	3331718	IdentifierDeclStatement	FT_Vector v ;	158:4:5057:5069	3331715	0	True				
ANR	3331719	IdentifierDecl	v		3331715	0					
ANR	3331720	IdentifierDeclType	FT_Vector		3331715	0					
ANR	3331721	Identifier	v		3331715	1					
ANR	3331722	ExpressionStatement	v . x = x	161:4:5077:5084	3331715	1	True				
ANR	3331723	AssignmentExpression	v . x = x		3331715	0		=			
ANR	3331724	MemberAccess	v . x		3331715	0					
ANR	3331725	Identifier	v		3331715	0					
ANR	3331726	Identifier	x		3331715	1					
ANR	3331727	Identifier	x		3331715	1					
ANR	3331728	ExpressionStatement	v . y = y	162:4:5090:5097	3331715	2	True				
ANR	3331729	AssignmentExpression	v . y = y		3331715	0		=			
ANR	3331730	MemberAccess	v . y		3331715	0					
ANR	3331731	Identifier	v		3331715	0					
ANR	3331732	Identifier	y		3331715	1					
ANR	3331733	Identifier	y		3331715	1					
ANR	3331734	ReturnStatement	return FT_Vector_Length ( & v ) ;	164:4:5104:5133	3331715	3	True				
ANR	3331735	CallExpression	FT_Vector_Length ( & v )		3331715	0					
ANR	3331736	Callee	FT_Vector_Length		3331715	0					
ANR	3331737	Identifier	FT_Vector_Length		3331715	0					
ANR	3331738	ArgumentList	& v		3331715	1					
ANR	3331739	Argument	& v		3331715	0					
ANR	3331740	UnaryOperationExpression	& v		3331715	0					
ANR	3331741	UnaryOperator	&		3331715	0					
ANR	3331742	Identifier	v		3331715	1					
ANR	3331743	Identifier	FT_Hypot		3331715	1					
ANR	3331744	ParameterList	"FT_Fixed x , FT_Fixed y"		3331715	2					
ANR	3331745	Parameter	FT_Fixed x	155:12:5010:5020	3331715	0	True				
ANR	3331746	ParameterType	FT_Fixed		3331715	0					
ANR	3331747	Identifier	x		3331715	1					
ANR	3331748	Parameter	FT_Fixed y	156:12:5035:5045	3331715	1	True				
ANR	3331749	ParameterType	FT_Fixed		3331715	0					
ANR	3331750	Identifier	y		3331715	1					
ANR	3331751	CFGEntryNode	ENTRY		3331715		True				
ANR	3331752	CFGExitNode	EXIT		3331715		True				
ANR	3331753	Symbol	v . x		3331715						
ANR	3331754	Symbol	v . y		3331715						
ANR	3331755	Symbol	v		3331715						
ANR	3331756	Symbol	FT_Vector_Length		3331715						
ANR	3331757	Symbol	x		3331715						
ANR	3331758	Symbol	y		3331715						
ANR	3331759	Symbol	& v		3331715						
ANR	3331760	Function	FT_MulDiv	174:2:5229:5679							
ANR	3331761	FunctionDef	"FT_MulDiv (FT_Long a_ , FT_Long b_ , FT_Long c_)"		3331760	0					
ANR	3331762	CompoundStatement		177:2:5308:5679	3331760	0					
ANR	3331763	IdentifierDeclStatement	FT_Int s = 1 ;	178:4:5314:5330	3331760	0	True				
ANR	3331764	IdentifierDecl	s = 1		3331760	0					
ANR	3331765	IdentifierDeclType	FT_Int		3331760	0					
ANR	3331766	Identifier	s		3331760	1					
ANR	3331767	AssignmentExpression	s = 1		3331760	2		=			
ANR	3331768	Identifier	s		3331760	0					
ANR	3331769	PrimaryExpression	1		3331760	1					
ANR	3331770	IdentifierDeclStatement	"FT_UInt64 a , b , c , d ;"	179:4:5336:5357	3331760	1	True				
ANR	3331771	IdentifierDecl	a		3331760	0					
ANR	3331772	IdentifierDeclType	FT_UInt64		3331760	0					
ANR	3331773	Identifier	a		3331760	1					
ANR	3331774	IdentifierDecl	b		3331760	1					
ANR	3331775	IdentifierDeclType	FT_UInt64		3331760	0					
ANR	3331776	Identifier	b		3331760	1					
ANR	3331777	IdentifierDecl	c		3331760	2					
ANR	3331778	IdentifierDeclType	FT_UInt64		3331760	0					
ANR	3331779	Identifier	c		3331760	1					
ANR	3331780	IdentifierDecl	d		3331760	3					
ANR	3331781	IdentifierDeclType	FT_UInt64		3331760	0					
ANR	3331782	Identifier	d		3331760	1					
ANR	3331783	IdentifierDeclStatement	FT_Long d_ ;	180:4:5363:5376	3331760	2	True				
ANR	3331784	IdentifierDecl	d_		3331760	0					
ANR	3331785	IdentifierDeclType	FT_Long		3331760	0					
ANR	3331786	Identifier	d_		3331760	1					
ANR	3331787	ExpressionStatement	a = ( FT_UInt64 ) a_	183:4:5384:5401	3331760	3	True				
ANR	3331788	AssignmentExpression	a = ( FT_UInt64 ) a_		3331760	0		=			
ANR	3331789	Identifier	a		3331760	0					
ANR	3331790	CastExpression	( FT_UInt64 ) a_		3331760	1					
ANR	3331791	CastTarget	FT_UInt64		3331760	0					
ANR	3331792	Identifier	a_		3331760	1					
ANR	3331793	ExpressionStatement	b = ( FT_UInt64 ) b_	184:4:5407:5424	3331760	4	True				
ANR	3331794	AssignmentExpression	b = ( FT_UInt64 ) b_		3331760	0		=			
ANR	3331795	Identifier	b		3331760	0					
ANR	3331796	CastExpression	( FT_UInt64 ) b_		3331760	1					
ANR	3331797	CastTarget	FT_UInt64		3331760	0					
ANR	3331798	Identifier	b_		3331760	1					
ANR	3331799	ExpressionStatement	c = ( FT_UInt64 ) c_	185:4:5430:5447	3331760	5	True				
ANR	3331800	AssignmentExpression	c = ( FT_UInt64 ) c_		3331760	0		=			
ANR	3331801	Identifier	c		3331760	0					
ANR	3331802	CastExpression	( FT_UInt64 ) c_		3331760	1					
ANR	3331803	CastTarget	FT_UInt64		3331760	0					
ANR	3331804	Identifier	c_		3331760	1					
ANR	3331805	ExpressionStatement	"FT_MOVE_SIGN ( a_ , a , s )"	187:4:5454:5478	3331760	6	True				
ANR	3331806	CallExpression	"FT_MOVE_SIGN ( a_ , a , s )"		3331760	0					
ANR	3331807	Callee	FT_MOVE_SIGN		3331760	0					
ANR	3331808	Identifier	FT_MOVE_SIGN		3331760	0					
ANR	3331809	ArgumentList	a_		3331760	1					
ANR	3331810	Argument	a_		3331760	0					
ANR	3331811	Identifier	a_		3331760	0					
ANR	3331812	Argument	a		3331760	1					
ANR	3331813	Identifier	a		3331760	0					
ANR	3331814	Argument	s		3331760	2					
ANR	3331815	Identifier	s		3331760	0					
ANR	3331816	ExpressionStatement	"FT_MOVE_SIGN ( b_ , b , s )"	188:4:5484:5508	3331760	7	True				
ANR	3331817	CallExpression	"FT_MOVE_SIGN ( b_ , b , s )"		3331760	0					
ANR	3331818	Callee	FT_MOVE_SIGN		3331760	0					
ANR	3331819	Identifier	FT_MOVE_SIGN		3331760	0					
ANR	3331820	ArgumentList	b_		3331760	1					
ANR	3331821	Argument	b_		3331760	0					
ANR	3331822	Identifier	b_		3331760	0					
ANR	3331823	Argument	b		3331760	1					
ANR	3331824	Identifier	b		3331760	0					
ANR	3331825	Argument	s		3331760	2					
ANR	3331826	Identifier	s		3331760	0					
ANR	3331827	ExpressionStatement	"FT_MOVE_SIGN ( c_ , c , s )"	189:4:5514:5538	3331760	8	True				
ANR	3331828	CallExpression	"FT_MOVE_SIGN ( c_ , c , s )"		3331760	0					
ANR	3331829	Callee	FT_MOVE_SIGN		3331760	0					
ANR	3331830	Identifier	FT_MOVE_SIGN		3331760	0					
ANR	3331831	ArgumentList	c_		3331760	1					
ANR	3331832	Argument	c_		3331760	0					
ANR	3331833	Identifier	c_		3331760	0					
ANR	3331834	Argument	c		3331760	1					
ANR	3331835	Identifier	c		3331760	0					
ANR	3331836	Argument	s		3331760	2					
ANR	3331837	Identifier	s		3331760	0					
ANR	3331838	ExpressionStatement	d = c > 0 ? ( a * b + ( c >> 1 ) ) / c : 0x7FFFFFFFUL	191:4:5545:5612	3331760	9	True				
ANR	3331839	AssignmentExpression	d = c > 0 ? ( a * b + ( c >> 1 ) ) / c : 0x7FFFFFFFUL		3331760	0		=			
ANR	3331840	Identifier	d		3331760	0					
ANR	3331841	ConditionalExpression	c > 0 ? ( a * b + ( c >> 1 ) ) / c : 0x7FFFFFFFUL		3331760	1					
ANR	3331842	Condition	c > 0		3331760	0					
ANR	3331843	RelationalExpression	c > 0		3331760	0		>			
ANR	3331844	Identifier	c		3331760	0					
ANR	3331845	PrimaryExpression	0		3331760	1					
ANR	3331846	MultiplicativeExpression	( a * b + ( c >> 1 ) ) / c		3331760	1		/			
ANR	3331847	AdditiveExpression	a * b + ( c >> 1 )		3331760	0		+			
ANR	3331848	MultiplicativeExpression	a * b		3331760	0		*			
ANR	3331849	Identifier	a		3331760	0					
ANR	3331850	Identifier	b		3331760	1					
ANR	3331851	ShiftExpression	c >> 1		3331760	1		>>			
ANR	3331852	Identifier	c		3331760	0					
ANR	3331853	PrimaryExpression	1		3331760	1					
ANR	3331854	Identifier	c		3331760	1					
ANR	3331855	PrimaryExpression	0x7FFFFFFFUL		3331760	2					
ANR	3331856	ExpressionStatement	d_ = ( FT_Long ) d	194:4:5619:5634	3331760	10	True				
ANR	3331857	AssignmentExpression	d_ = ( FT_Long ) d		3331760	0		=			
ANR	3331858	Identifier	d_		3331760	0					
ANR	3331859	CastExpression	( FT_Long ) d		3331760	1					
ANR	3331860	CastTarget	FT_Long		3331760	0					
ANR	3331861	Identifier	d		3331760	1					
ANR	3331862	ReturnStatement	return s < 0 ? NEG_LONG ( d_ ) : d_ ;	196:4:5641:5675	3331760	11	True				
ANR	3331863	ConditionalExpression	s < 0 ? NEG_LONG ( d_ ) : d_		3331760	0					
ANR	3331864	Condition	s < 0		3331760	0					
ANR	3331865	RelationalExpression	s < 0		3331760	0		<			
ANR	3331866	Identifier	s		3331760	0					
ANR	3331867	PrimaryExpression	0		3331760	1					
ANR	3331868	CallExpression	NEG_LONG ( d_ )		3331760	1					
ANR	3331869	Callee	NEG_LONG		3331760	0					
ANR	3331870	Identifier	NEG_LONG		3331760	0					
ANR	3331871	ArgumentList	d_		3331760	1					
ANR	3331872	Argument	d_		3331760	0					
ANR	3331873	Identifier	d_		3331760	0					
ANR	3331874	Identifier	d_		3331760	2					
ANR	3331875	Identifier	FT_MulDiv		3331760	1					
ANR	3331876	ParameterList	"FT_Long a_ , FT_Long b_ , FT_Long c_"		3331760	2					
ANR	3331877	Parameter	FT_Long a_	174:13:5240:5250	3331760	0	True				
ANR	3331878	ParameterType	FT_Long		3331760	0					
ANR	3331879	Identifier	a_		3331760	1					
ANR	3331880	Parameter	FT_Long b_	175:13:5266:5276	3331760	1	True				
ANR	3331881	ParameterType	FT_Long		3331760	0					
ANR	3331882	Identifier	b_		3331760	1					
ANR	3331883	Parameter	FT_Long c_	176:13:5292:5302	3331760	2	True				
ANR	3331884	ParameterType	FT_Long		3331760	0					
ANR	3331885	Identifier	c_		3331760	1					
ANR	3331886	CFGEntryNode	ENTRY		3331760		True				
ANR	3331887	CFGExitNode	EXIT		3331760		True				
ANR	3331888	Symbol	a		3331760						
ANR	3331889	Symbol	b		3331760						
ANR	3331890	Symbol	s		3331760						
ANR	3331891	Symbol	c		3331760						
ANR	3331892	Symbol	d		3331760						
ANR	3331893	Symbol	d_		3331760						
ANR	3331894	Symbol	NEG_LONG		3331760						
ANR	3331895	Symbol	c_		3331760						
ANR	3331896	Symbol	b_		3331760						
ANR	3331897	Symbol	a_		3331760						
ANR	3331898	Function	FT_MulDiv_No_Round	203:2:5748:6208							
ANR	3331899	FunctionDef	"FT_MulDiv_No_Round (FT_Long a_ , FT_Long b_ , FT_Long c_)"		3331898	0					
ANR	3331900	CompoundStatement		206:2:5854:6208	3331898	0					
ANR	3331901	IdentifierDeclStatement	FT_Int s = 1 ;	207:4:5860:5876	3331898	0	True				
ANR	3331902	IdentifierDecl	s = 1		3331898	0					
ANR	3331903	IdentifierDeclType	FT_Int		3331898	0					
ANR	3331904	Identifier	s		3331898	1					
ANR	3331905	AssignmentExpression	s = 1		3331898	2		=			
ANR	3331906	Identifier	s		3331898	0					
ANR	3331907	PrimaryExpression	1		3331898	1					
ANR	3331908	IdentifierDeclStatement	"FT_UInt64 a , b , c , d ;"	208:4:5882:5903	3331898	1	True				
ANR	3331909	IdentifierDecl	a		3331898	0					
ANR	3331910	IdentifierDeclType	FT_UInt64		3331898	0					
ANR	3331911	Identifier	a		3331898	1					
ANR	3331912	IdentifierDecl	b		3331898	1					
ANR	3331913	IdentifierDeclType	FT_UInt64		3331898	0					
ANR	3331914	Identifier	b		3331898	1					
ANR	3331915	IdentifierDecl	c		3331898	2					
ANR	3331916	IdentifierDeclType	FT_UInt64		3331898	0					
ANR	3331917	Identifier	c		3331898	1					
ANR	3331918	IdentifierDecl	d		3331898	3					
ANR	3331919	IdentifierDeclType	FT_UInt64		3331898	0					
ANR	3331920	Identifier	d		3331898	1					
ANR	3331921	IdentifierDeclStatement	FT_Long d_ ;	209:4:5909:5922	3331898	2	True				
ANR	3331922	IdentifierDecl	d_		3331898	0					
ANR	3331923	IdentifierDeclType	FT_Long		3331898	0					
ANR	3331924	Identifier	d_		3331898	1					
ANR	3331925	ExpressionStatement	a = ( FT_UInt64 ) a_	212:4:5930:5947	3331898	3	True				
ANR	3331926	AssignmentExpression	a = ( FT_UInt64 ) a_		3331898	0		=			
ANR	3331927	Identifier	a		3331898	0					
ANR	3331928	CastExpression	( FT_UInt64 ) a_		3331898	1					
ANR	3331929	CastTarget	FT_UInt64		3331898	0					
ANR	3331930	Identifier	a_		3331898	1					
ANR	3331931	ExpressionStatement	b = ( FT_UInt64 ) b_	213:4:5953:5970	3331898	4	True				
ANR	3331932	AssignmentExpression	b = ( FT_UInt64 ) b_		3331898	0		=			
ANR	3331933	Identifier	b		3331898	0					
ANR	3331934	CastExpression	( FT_UInt64 ) b_		3331898	1					
ANR	3331935	CastTarget	FT_UInt64		3331898	0					
ANR	3331936	Identifier	b_		3331898	1					
ANR	3331937	ExpressionStatement	c = ( FT_UInt64 ) c_	214:4:5976:5993	3331898	5	True				
ANR	3331938	AssignmentExpression	c = ( FT_UInt64 ) c_		3331898	0		=			
ANR	3331939	Identifier	c		3331898	0					
ANR	3331940	CastExpression	( FT_UInt64 ) c_		3331898	1					
ANR	3331941	CastTarget	FT_UInt64		3331898	0					
ANR	3331942	Identifier	c_		3331898	1					
ANR	3331943	ExpressionStatement	"FT_MOVE_SIGN ( a_ , a , s )"	216:4:6000:6024	3331898	6	True				
ANR	3331944	CallExpression	"FT_MOVE_SIGN ( a_ , a , s )"		3331898	0					
ANR	3331945	Callee	FT_MOVE_SIGN		3331898	0					
ANR	3331946	Identifier	FT_MOVE_SIGN		3331898	0					
ANR	3331947	ArgumentList	a_		3331898	1					
ANR	3331948	Argument	a_		3331898	0					
ANR	3331949	Identifier	a_		3331898	0					
ANR	3331950	Argument	a		3331898	1					
ANR	3331951	Identifier	a		3331898	0					
ANR	3331952	Argument	s		3331898	2					
ANR	3331953	Identifier	s		3331898	0					
ANR	3331954	ExpressionStatement	"FT_MOVE_SIGN ( b_ , b , s )"	217:4:6030:6054	3331898	7	True				
ANR	3331955	CallExpression	"FT_MOVE_SIGN ( b_ , b , s )"		3331898	0					
ANR	3331956	Callee	FT_MOVE_SIGN		3331898	0					
ANR	3331957	Identifier	FT_MOVE_SIGN		3331898	0					
ANR	3331958	ArgumentList	b_		3331898	1					
ANR	3331959	Argument	b_		3331898	0					
ANR	3331960	Identifier	b_		3331898	0					
ANR	3331961	Argument	b		3331898	1					
ANR	3331962	Identifier	b		3331898	0					
ANR	3331963	Argument	s		3331898	2					
ANR	3331964	Identifier	s		3331898	0					
ANR	3331965	ExpressionStatement	"FT_MOVE_SIGN ( c_ , c , s )"	218:4:6060:6084	3331898	8	True				
ANR	3331966	CallExpression	"FT_MOVE_SIGN ( c_ , c , s )"		3331898	0					
ANR	3331967	Callee	FT_MOVE_SIGN		3331898	0					
ANR	3331968	Identifier	FT_MOVE_SIGN		3331898	0					
ANR	3331969	ArgumentList	c_		3331898	1					
ANR	3331970	Argument	c_		3331898	0					
ANR	3331971	Identifier	c_		3331898	0					
ANR	3331972	Argument	c		3331898	1					
ANR	3331973	Identifier	c		3331898	0					
ANR	3331974	Argument	s		3331898	2					
ANR	3331975	Identifier	s		3331898	0					
ANR	3331976	ExpressionStatement	d = c > 0 ? a * b / c : 0x7FFFFFFFUL	220:4:6091:6141	3331898	9	True				
ANR	3331977	AssignmentExpression	d = c > 0 ? a * b / c : 0x7FFFFFFFUL		3331898	0		=			
ANR	3331978	Identifier	d		3331898	0					
ANR	3331979	ConditionalExpression	c > 0 ? a * b / c : 0x7FFFFFFFUL		3331898	1					
ANR	3331980	Condition	c > 0		3331898	0					
ANR	3331981	RelationalExpression	c > 0		3331898	0		>			
ANR	3331982	Identifier	c		3331898	0					
ANR	3331983	PrimaryExpression	0		3331898	1					
ANR	3331984	MultiplicativeExpression	a * b / c		3331898	1		*			
ANR	3331985	Identifier	a		3331898	0					
ANR	3331986	MultiplicativeExpression	b / c		3331898	1		/			
ANR	3331987	Identifier	b		3331898	0					
ANR	3331988	Identifier	c		3331898	1					
ANR	3331989	PrimaryExpression	0x7FFFFFFFUL		3331898	2					
ANR	3331990	ExpressionStatement	d_ = ( FT_Long ) d	223:4:6148:6163	3331898	10	True				
ANR	3331991	AssignmentExpression	d_ = ( FT_Long ) d		3331898	0		=			
ANR	3331992	Identifier	d_		3331898	0					
ANR	3331993	CastExpression	( FT_Long ) d		3331898	1					
ANR	3331994	CastTarget	FT_Long		3331898	0					
ANR	3331995	Identifier	d		3331898	1					
ANR	3331996	ReturnStatement	return s < 0 ? NEG_LONG ( d_ ) : d_ ;	225:4:6170:6204	3331898	11	True				
ANR	3331997	ConditionalExpression	s < 0 ? NEG_LONG ( d_ ) : d_		3331898	0					
ANR	3331998	Condition	s < 0		3331898	0					
ANR	3331999	RelationalExpression	s < 0		3331898	0		<			
ANR	3332000	Identifier	s		3331898	0					
ANR	3332001	PrimaryExpression	0		3331898	1					
ANR	3332002	CallExpression	NEG_LONG ( d_ )		3331898	1					
ANR	3332003	Callee	NEG_LONG		3331898	0					
ANR	3332004	Identifier	NEG_LONG		3331898	0					
ANR	3332005	ArgumentList	d_		3331898	1					
ANR	3332006	Argument	d_		3331898	0					
ANR	3332007	Identifier	d_		3331898	0					
ANR	3332008	Identifier	d_		3331898	2					
ANR	3332009	Identifier	FT_MulDiv_No_Round		3331898	1					
ANR	3332010	ParameterList	"FT_Long a_ , FT_Long b_ , FT_Long c_"		3331898	2					
ANR	3332011	Parameter	FT_Long a_	203:22:5768:5778	3331898	0	True				
ANR	3332012	ParameterType	FT_Long		3331898	0					
ANR	3332013	Identifier	a_		3331898	1					
ANR	3332014	Parameter	FT_Long b_	204:22:5803:5813	3331898	1	True				
ANR	3332015	ParameterType	FT_Long		3331898	0					
ANR	3332016	Identifier	b_		3331898	1					
ANR	3332017	Parameter	FT_Long c_	205:22:5838:5848	3331898	2	True				
ANR	3332018	ParameterType	FT_Long		3331898	0					
ANR	3332019	Identifier	c_		3331898	1					
ANR	3332020	CFGEntryNode	ENTRY		3331898		True				
ANR	3332021	CFGExitNode	EXIT		3331898		True				
ANR	3332022	Symbol	a		3331898						
ANR	3332023	Symbol	b		3331898						
ANR	3332024	Symbol	s		3331898						
ANR	3332025	Symbol	c		3331898						
ANR	3332026	Symbol	d		3331898						
ANR	3332027	Symbol	d_		3331898						
ANR	3332028	Symbol	NEG_LONG		3331898						
ANR	3332029	Symbol	c_		3331898						
ANR	3332030	Symbol	b_		3331898						
ANR	3332031	Symbol	a_		3331898						
ANR	3332032	Function	FT_MulFix	232:2:6281:6645							
ANR	3332033	FunctionDef	"FT_MulFix (FT_Long a_ , FT_Long b_)"		3332032	0					
ANR	3332034	CompoundStatement		234:2:6334:6645	3332032	0					
ANR	3332035	ReturnStatement	"return FT_MULFIX_ASSEMBLER ( ( FT_Int32 ) a_ , ( FT_Int32 ) b_ ) ;"	237:4:6368:6424	3332032	0	True				
ANR	3332036	CallExpression	"FT_MULFIX_ASSEMBLER ( ( FT_Int32 ) a_ , ( FT_Int32 ) b_ )"		3332032	0					
ANR	3332037	Callee	FT_MULFIX_ASSEMBLER		3332032	0					
ANR	3332038	Identifier	FT_MULFIX_ASSEMBLER		3332032	0					
ANR	3332039	ArgumentList	( FT_Int32 ) a_		3332032	1					
ANR	3332040	Argument	( FT_Int32 ) a_		3332032	0					
ANR	3332041	CastExpression	( FT_Int32 ) a_		3332032	0					
ANR	3332042	CastTarget	FT_Int32		3332032	0					
ANR	3332043	Identifier	a_		3332032	1					
ANR	3332044	Argument	( FT_Int32 ) b_		3332032	1					
ANR	3332045	CastExpression	( FT_Int32 ) b_		3332032	0					
ANR	3332046	CastTarget	FT_Int32		3332032	0					
ANR	3332047	Identifier	b_		3332032	1					
ANR	3332048	Identifier	FT_MulFix		3332032	1					
ANR	3332049	ParameterList	"FT_Long a_ , FT_Long b_"		3332032	2					
ANR	3332050	Parameter	FT_Long a_	232:13:6292:6302	3332032	0	True				
ANR	3332051	ParameterType	FT_Long		3332032	0					
ANR	3332052	Identifier	a_		3332032	1					
ANR	3332053	Parameter	FT_Long b_	233:13:6318:6328	3332032	1	True				
ANR	3332054	ParameterType	FT_Long		3332032	0					
ANR	3332055	Identifier	b_		3332032	1					
ANR	3332056	CFGEntryNode	ENTRY		3332032		True				
ANR	3332057	CFGExitNode	EXIT		3332032		True				
ANR	3332058	Symbol	b_		3332032						
ANR	3332059	Symbol	a_		3332032						
ANR	3332060	Symbol	FT_MULFIX_ASSEMBLER		3332032						
ANR	3332061	Function	FT_DivFix	253:2:6718:7092							
ANR	3332062	FunctionDef	"FT_DivFix (FT_Long a_ , FT_Long b_)"		3332061	0					
ANR	3332063	CompoundStatement		255:2:6771:7092	3332061	0					
ANR	3332064	IdentifierDeclStatement	FT_Int s = 1 ;	256:4:6777:6793	3332061	0	True				
ANR	3332065	IdentifierDecl	s = 1		3332061	0					
ANR	3332066	IdentifierDeclType	FT_Int		3332061	0					
ANR	3332067	Identifier	s		3332061	1					
ANR	3332068	AssignmentExpression	s = 1		3332061	2		=			
ANR	3332069	Identifier	s		3332061	0					
ANR	3332070	PrimaryExpression	1		3332061	1					
ANR	3332071	IdentifierDeclStatement	"FT_UInt64 a , b , q ;"	257:4:6799:6817	3332061	1	True				
ANR	3332072	IdentifierDecl	a		3332061	0					
ANR	3332073	IdentifierDeclType	FT_UInt64		3332061	0					
ANR	3332074	Identifier	a		3332061	1					
ANR	3332075	IdentifierDecl	b		3332061	1					
ANR	3332076	IdentifierDeclType	FT_UInt64		3332061	0					
ANR	3332077	Identifier	b		3332061	1					
ANR	3332078	IdentifierDecl	q		3332061	2					
ANR	3332079	IdentifierDeclType	FT_UInt64		3332061	0					
ANR	3332080	Identifier	q		3332061	1					
ANR	3332081	IdentifierDeclStatement	FT_Long q_ ;	258:4:6823:6836	3332061	2	True				
ANR	3332082	IdentifierDecl	q_		3332061	0					
ANR	3332083	IdentifierDeclType	FT_Long		3332061	0					
ANR	3332084	Identifier	q_		3332061	1					
ANR	3332085	ExpressionStatement	a = ( FT_UInt64 ) a_	261:4:6844:6861	3332061	3	True				
ANR	3332086	AssignmentExpression	a = ( FT_UInt64 ) a_		3332061	0		=			
ANR	3332087	Identifier	a		3332061	0					
ANR	3332088	CastExpression	( FT_UInt64 ) a_		3332061	1					
ANR	3332089	CastTarget	FT_UInt64		3332061	0					
ANR	3332090	Identifier	a_		3332061	1					
ANR	3332091	ExpressionStatement	b = ( FT_UInt64 ) b_	262:4:6867:6884	3332061	4	True				
ANR	3332092	AssignmentExpression	b = ( FT_UInt64 ) b_		3332061	0		=			
ANR	3332093	Identifier	b		3332061	0					
ANR	3332094	CastExpression	( FT_UInt64 ) b_		3332061	1					
ANR	3332095	CastTarget	FT_UInt64		3332061	0					
ANR	3332096	Identifier	b_		3332061	1					
ANR	3332097	ExpressionStatement	"FT_MOVE_SIGN ( a_ , a , s )"	264:4:6891:6915	3332061	5	True				
ANR	3332098	CallExpression	"FT_MOVE_SIGN ( a_ , a , s )"		3332061	0					
ANR	3332099	Callee	FT_MOVE_SIGN		3332061	0					
ANR	3332100	Identifier	FT_MOVE_SIGN		3332061	0					
ANR	3332101	ArgumentList	a_		3332061	1					
ANR	3332102	Argument	a_		3332061	0					
ANR	3332103	Identifier	a_		3332061	0					
ANR	3332104	Argument	a		3332061	1					
ANR	3332105	Identifier	a		3332061	0					
ANR	3332106	Argument	s		3332061	2					
ANR	3332107	Identifier	s		3332061	0					
ANR	3332108	ExpressionStatement	"FT_MOVE_SIGN ( b_ , b , s )"	265:4:6921:6945	3332061	6	True				
ANR	3332109	CallExpression	"FT_MOVE_SIGN ( b_ , b , s )"		3332061	0					
ANR	3332110	Callee	FT_MOVE_SIGN		3332061	0					
ANR	3332111	Identifier	FT_MOVE_SIGN		3332061	0					
ANR	3332112	ArgumentList	b_		3332061	1					
ANR	3332113	Argument	b_		3332061	0					
ANR	3332114	Identifier	b_		3332061	0					
ANR	3332115	Argument	b		3332061	1					
ANR	3332116	Identifier	b		3332061	0					
ANR	3332117	Argument	s		3332061	2					
ANR	3332118	Identifier	s		3332061	0					
ANR	3332119	ExpressionStatement	q = b > 0 ? ( ( a << 16 ) + ( b >> 1 ) ) / b : 0x7FFFFFFFUL	267:4:6952:7025	3332061	7	True				
ANR	3332120	AssignmentExpression	q = b > 0 ? ( ( a << 16 ) + ( b >> 1 ) ) / b : 0x7FFFFFFFUL		3332061	0		=			
ANR	3332121	Identifier	q		3332061	0					
ANR	3332122	ConditionalExpression	b > 0 ? ( ( a << 16 ) + ( b >> 1 ) ) / b : 0x7FFFFFFFUL		3332061	1					
ANR	3332123	Condition	b > 0		3332061	0					
ANR	3332124	RelationalExpression	b > 0		3332061	0		>			
ANR	3332125	Identifier	b		3332061	0					
ANR	3332126	PrimaryExpression	0		3332061	1					
ANR	3332127	MultiplicativeExpression	( ( a << 16 ) + ( b >> 1 ) ) / b		3332061	1		/			
ANR	3332128	AdditiveExpression	( a << 16 ) + ( b >> 1 )		3332061	0		+			
ANR	3332129	ShiftExpression	a << 16		3332061	0		<<			
ANR	3332130	Identifier	a		3332061	0					
ANR	3332131	PrimaryExpression	16		3332061	1					
ANR	3332132	ShiftExpression	b >> 1		3332061	1		>>			
ANR	3332133	Identifier	b		3332061	0					
ANR	3332134	PrimaryExpression	1		3332061	1					
ANR	3332135	Identifier	b		3332061	1					
ANR	3332136	PrimaryExpression	0x7FFFFFFFUL		3332061	2					
ANR	3332137	ExpressionStatement	q_ = ( FT_Long ) q	270:4:7032:7047	3332061	8	True				
ANR	3332138	AssignmentExpression	q_ = ( FT_Long ) q		3332061	0		=			
ANR	3332139	Identifier	q_		3332061	0					
ANR	3332140	CastExpression	( FT_Long ) q		3332061	1					
ANR	3332141	CastTarget	FT_Long		3332061	0					
ANR	3332142	Identifier	q		3332061	1					
ANR	3332143	ReturnStatement	return s < 0 ? NEG_LONG ( q_ ) : q_ ;	272:4:7054:7088	3332061	9	True				
ANR	3332144	ConditionalExpression	s < 0 ? NEG_LONG ( q_ ) : q_		3332061	0					
ANR	3332145	Condition	s < 0		3332061	0					
ANR	3332146	RelationalExpression	s < 0		3332061	0		<			
ANR	3332147	Identifier	s		3332061	0					
ANR	3332148	PrimaryExpression	0		3332061	1					
ANR	3332149	CallExpression	NEG_LONG ( q_ )		3332061	1					
ANR	3332150	Callee	NEG_LONG		3332061	0					
ANR	3332151	Identifier	NEG_LONG		3332061	0					
ANR	3332152	ArgumentList	q_		3332061	1					
ANR	3332153	Argument	q_		3332061	0					
ANR	3332154	Identifier	q_		3332061	0					
ANR	3332155	Identifier	q_		3332061	2					
ANR	3332156	Identifier	FT_DivFix		3332061	1					
ANR	3332157	ParameterList	"FT_Long a_ , FT_Long b_"		3332061	2					
ANR	3332158	Parameter	FT_Long a_	253:13:6729:6739	3332061	0	True				
ANR	3332159	ParameterType	FT_Long		3332061	0					
ANR	3332160	Identifier	a_		3332061	1					
ANR	3332161	Parameter	FT_Long b_	254:13:6755:6765	3332061	1	True				
ANR	3332162	ParameterType	FT_Long		3332061	0					
ANR	3332163	Identifier	b_		3332061	1					
ANR	3332164	CFGEntryNode	ENTRY		3332061		True				
ANR	3332165	CFGExitNode	EXIT		3332061		True				
ANR	3332166	Symbol	a		3332061						
ANR	3332167	Symbol	q		3332061						
ANR	3332168	Symbol	b		3332061						
ANR	3332169	Symbol	s		3332061						
ANR	3332170	Symbol	NEG_LONG		3332061						
ANR	3332171	Symbol	b_		3332061						
ANR	3332172	Symbol	a_		3332061						
ANR	3332173	Symbol	q_		3332061						
ANR	3332174	Function	ft_multo64	279:2:7123:7697							
ANR	3332175	FunctionDef	"ft_multo64 (FT_UInt32 x , FT_UInt32 y , FT_Int64 * z)"		3332174	0					
ANR	3332176	CompoundStatement		283:2:7222:7697	3332174	0					
ANR	3332177	IdentifierDeclStatement	"FT_UInt32 lo1 , hi1 , lo2 , hi2 , lo , hi , i1 , i2 ;"	284:4:7228:7273	3332174	0	True				
ANR	3332178	IdentifierDecl	lo1		3332174	0					
ANR	3332179	IdentifierDeclType	FT_UInt32		3332174	0					
ANR	3332180	Identifier	lo1		3332174	1					
ANR	3332181	IdentifierDecl	hi1		3332174	1					
ANR	3332182	IdentifierDeclType	FT_UInt32		3332174	0					
ANR	3332183	Identifier	hi1		3332174	1					
ANR	3332184	IdentifierDecl	lo2		3332174	2					
ANR	3332185	IdentifierDeclType	FT_UInt32		3332174	0					
ANR	3332186	Identifier	lo2		3332174	1					
ANR	3332187	IdentifierDecl	hi2		3332174	3					
ANR	3332188	IdentifierDeclType	FT_UInt32		3332174	0					
ANR	3332189	Identifier	hi2		3332174	1					
ANR	3332190	IdentifierDecl	lo		3332174	4					
ANR	3332191	IdentifierDeclType	FT_UInt32		3332174	0					
ANR	3332192	Identifier	lo		3332174	1					
ANR	3332193	IdentifierDecl	hi		3332174	5					
ANR	3332194	IdentifierDeclType	FT_UInt32		3332174	0					
ANR	3332195	Identifier	hi		3332174	1					
ANR	3332196	IdentifierDecl	i1		3332174	6					
ANR	3332197	IdentifierDeclType	FT_UInt32		3332174	0					
ANR	3332198	Identifier	i1		3332174	1					
ANR	3332199	IdentifierDecl	i2		3332174	7					
ANR	3332200	IdentifierDeclType	FT_UInt32		3332174	0					
ANR	3332201	Identifier	i2		3332174	1					
ANR	3332202	ExpressionStatement	lo1 = x & 0x0000FFFFU	287:4:7281:7302	3332174	1	True				
ANR	3332203	AssignmentExpression	lo1 = x & 0x0000FFFFU		3332174	0		=			
ANR	3332204	Identifier	lo1		3332174	0					
ANR	3332205	BitAndExpression	x & 0x0000FFFFU		3332174	1		&			
ANR	3332206	Identifier	x		3332174	0					
ANR	3332207	PrimaryExpression	0x0000FFFFU		3332174	1					
ANR	3332208	ExpressionStatement	hi1 = x >> 16	287:28:7305:7318	3332174	2	True				
ANR	3332209	AssignmentExpression	hi1 = x >> 16		3332174	0		=			
ANR	3332210	Identifier	hi1		3332174	0					
ANR	3332211	ShiftExpression	x >> 16		3332174	1		>>			
ANR	3332212	Identifier	x		3332174	0					
ANR	3332213	PrimaryExpression	16		3332174	1					
ANR	3332214	ExpressionStatement	lo2 = y & 0x0000FFFFU	288:4:7324:7345	3332174	3	True				
ANR	3332215	AssignmentExpression	lo2 = y & 0x0000FFFFU		3332174	0		=			
ANR	3332216	Identifier	lo2		3332174	0					
ANR	3332217	BitAndExpression	y & 0x0000FFFFU		3332174	1		&			
ANR	3332218	Identifier	y		3332174	0					
ANR	3332219	PrimaryExpression	0x0000FFFFU		3332174	1					
ANR	3332220	ExpressionStatement	hi2 = y >> 16	288:28:7348:7361	3332174	4	True				
ANR	3332221	AssignmentExpression	hi2 = y >> 16		3332174	0		=			
ANR	3332222	Identifier	hi2		3332174	0					
ANR	3332223	ShiftExpression	y >> 16		3332174	1		>>			
ANR	3332224	Identifier	y		3332174	0					
ANR	3332225	PrimaryExpression	16		3332174	1					
ANR	3332226	ExpressionStatement	lo = lo1 * lo2	290:4:7368:7382	3332174	5	True				
ANR	3332227	AssignmentExpression	lo = lo1 * lo2		3332174	0		=			
ANR	3332228	Identifier	lo		3332174	0					
ANR	3332229	MultiplicativeExpression	lo1 * lo2		3332174	1		*			
ANR	3332230	Identifier	lo1		3332174	0					
ANR	3332231	Identifier	lo2		3332174	1					
ANR	3332232	ExpressionStatement	i1 = lo1 * hi2	291:4:7388:7402	3332174	6	True				
ANR	3332233	AssignmentExpression	i1 = lo1 * hi2		3332174	0		=			
ANR	3332234	Identifier	i1		3332174	0					
ANR	3332235	MultiplicativeExpression	lo1 * hi2		3332174	1		*			
ANR	3332236	Identifier	lo1		3332174	0					
ANR	3332237	Identifier	hi2		3332174	1					
ANR	3332238	ExpressionStatement	i2 = lo2 * hi1	292:4:7408:7422	3332174	7	True				
ANR	3332239	AssignmentExpression	i2 = lo2 * hi1		3332174	0		=			
ANR	3332240	Identifier	i2		3332174	0					
ANR	3332241	MultiplicativeExpression	lo2 * hi1		3332174	1		*			
ANR	3332242	Identifier	lo2		3332174	0					
ANR	3332243	Identifier	hi1		3332174	1					
ANR	3332244	ExpressionStatement	hi = hi1 * hi2	293:4:7428:7442	3332174	8	True				
ANR	3332245	AssignmentExpression	hi = hi1 * hi2		3332174	0		=			
ANR	3332246	Identifier	hi		3332174	0					
ANR	3332247	MultiplicativeExpression	hi1 * hi2		3332174	1		*			
ANR	3332248	Identifier	hi1		3332174	0					
ANR	3332249	Identifier	hi2		3332174	1					
ANR	3332250	ExpressionStatement	i1 += i2	296:4:7491:7499	3332174	9	True				
ANR	3332251	AssignmentExpression	i1 += i2		3332174	0		+=			
ANR	3332252	Identifier	i1		3332174	0					
ANR	3332253	Identifier	i2		3332174	1					
ANR	3332254	ExpressionStatement	hi += ( FT_UInt32 ) ( i1 < i2 ) << 16	297:4:7505:7539	3332174	10	True				
ANR	3332255	AssignmentExpression	hi += ( FT_UInt32 ) ( i1 < i2 ) << 16		3332174	0		+=			
ANR	3332256	Identifier	hi		3332174	0					
ANR	3332257	ShiftExpression	( FT_UInt32 ) ( i1 < i2 ) << 16		3332174	1		<<			
ANR	3332258	CastExpression	( FT_UInt32 ) ( i1 < i2 )		3332174	0					
ANR	3332259	CastTarget	FT_UInt32		3332174	0					
ANR	3332260	RelationalExpression	i1 < i2		3332174	1		<			
ANR	3332261	Identifier	i1		3332174	0					
ANR	3332262	Identifier	i2		3332174	1					
ANR	3332263	PrimaryExpression	16		3332174	1					
ANR	3332264	ExpressionStatement	hi += i1 >> 16	299:4:7546:7560	3332174	11	True				
ANR	3332265	AssignmentExpression	hi += i1 >> 16		3332174	0		+=			
ANR	3332266	Identifier	hi		3332174	0					
ANR	3332267	ShiftExpression	i1 >> 16		3332174	1		>>			
ANR	3332268	Identifier	i1		3332174	0					
ANR	3332269	PrimaryExpression	16		3332174	1					
ANR	3332270	ExpressionStatement	i1 = i1 << 16	300:4:7566:7580	3332174	12	True				
ANR	3332271	AssignmentExpression	i1 = i1 << 16		3332174	0		=			
ANR	3332272	Identifier	i1		3332174	0					
ANR	3332273	ShiftExpression	i1 << 16		3332174	1		<<			
ANR	3332274	Identifier	i1		3332174	0					
ANR	3332275	PrimaryExpression	16		3332174	1					
ANR	3332276	ExpressionStatement	lo += i1	303:4:7629:7637	3332174	13	True				
ANR	3332277	AssignmentExpression	lo += i1		3332174	0		+=			
ANR	3332278	Identifier	lo		3332174	0					
ANR	3332279	Identifier	i1		3332174	1					
ANR	3332280	ExpressionStatement	hi += ( lo < i1 )	304:4:7643:7660	3332174	14	True				
ANR	3332281	AssignmentExpression	hi += ( lo < i1 )		3332174	0		+=			
ANR	3332282	Identifier	hi		3332174	0					
ANR	3332283	RelationalExpression	lo < i1		3332174	1		<			
ANR	3332284	Identifier	lo		3332174	0					
ANR	3332285	Identifier	i1		3332174	1					
ANR	3332286	ExpressionStatement	z -> lo = lo	306:4:7667:7677	3332174	15	True				
ANR	3332287	AssignmentExpression	z -> lo = lo		3332174	0		=			
ANR	3332288	PtrMemberAccess	z -> lo		3332174	0					
ANR	3332289	Identifier	z		3332174	0					
ANR	3332290	Identifier	lo		3332174	1					
ANR	3332291	Identifier	lo		3332174	1					
ANR	3332292	ExpressionStatement	z -> hi = hi	307:4:7683:7693	3332174	16	True				
ANR	3332293	AssignmentExpression	z -> hi = hi		3332174	0		=			
ANR	3332294	PtrMemberAccess	z -> hi		3332174	0					
ANR	3332295	Identifier	z		3332174	0					
ANR	3332296	Identifier	hi		3332174	1					
ANR	3332297	Identifier	hi		3332174	1					
ANR	3332298	ReturnType	static void		3332174	1					
ANR	3332299	Identifier	ft_multo64		3332174	2					
ANR	3332300	ParameterList	"FT_UInt32 x , FT_UInt32 y , FT_Int64 * z"		3332174	3					
ANR	3332301	Parameter	FT_UInt32 x	280:14:7149:7160	3332174	0	True				
ANR	3332302	ParameterType	FT_UInt32		3332174	0					
ANR	3332303	Identifier	x		3332174	1					
ANR	3332304	Parameter	FT_UInt32 y	281:14:7177:7188	3332174	1	True				
ANR	3332305	ParameterType	FT_UInt32		3332174	0					
ANR	3332306	Identifier	y		3332174	1					
ANR	3332307	Parameter	FT_Int64 * z	282:14:7205:7216	3332174	2	True				
ANR	3332308	ParameterType	FT_Int64 *		3332174	0					
ANR	3332309	Identifier	z		3332174	1					
ANR	3332310	CFGEntryNode	ENTRY		3332174		True				
ANR	3332311	CFGExitNode	EXIT		3332174		True				
ANR	3332312	Symbol	z -> hi		3332174						
ANR	3332313	Symbol	hi		3332174						
ANR	3332314	Symbol	lo		3332174						
ANR	3332315	Symbol	* z		3332174						
ANR	3332316	Symbol	z -> lo		3332174						
ANR	3332317	Symbol	i1		3332174						
ANR	3332318	Symbol	i2		3332174						
ANR	3332319	Symbol	lo2		3332174						
ANR	3332320	Symbol	lo1		3332174						
ANR	3332321	Symbol	hi2		3332174						
ANR	3332322	Symbol	hi1		3332174						
ANR	3332323	Symbol	x		3332174						
ANR	3332324	Symbol	y		3332174						
ANR	3332325	Symbol	z		3332174						
ANR	3332326	Function	ft_div64by32	311:2:7703:8622							
ANR	3332327	FunctionDef	"ft_div64by32 (FT_UInt32 hi , FT_UInt32 lo , FT_UInt32 y)"		3332326	0					
ANR	3332328	CompoundStatement		315:2:7815:8622	3332326	0					
ANR	3332329	IdentifierDeclStatement	"FT_UInt32 r , q ;"	316:4:7821:7836	3332326	0	True				
ANR	3332330	IdentifierDecl	r		3332326	0					
ANR	3332331	IdentifierDeclType	FT_UInt32		3332326	0					
ANR	3332332	Identifier	r		3332326	1					
ANR	3332333	IdentifierDecl	q		3332326	1					
ANR	3332334	IdentifierDeclType	FT_UInt32		3332326	0					
ANR	3332335	Identifier	q		3332326	1					
ANR	3332336	IdentifierDeclStatement	FT_Int i ;	317:4:7842:7854	3332326	1	True				
ANR	3332337	IdentifierDecl	i		3332326	0					
ANR	3332338	IdentifierDeclType	FT_Int		3332326	0					
ANR	3332339	Identifier	i		3332326	1					
ANR	3332340	IfStatement	if ( hi >= y )		3332326	2					
ANR	3332341	Condition	hi >= y	320:9:7867:7873	3332326	0	True				
ANR	3332342	RelationalExpression	hi >= y		3332326	0		>=			
ANR	3332343	Identifier	hi		3332326	0					
ANR	3332344	Identifier	y		3332326	1					
ANR	3332345	ReturnStatement	return ( FT_UInt32 ) 0x7FFFFFFFL ;	321:6:7883:7912	3332326	1	True				
ANR	3332346	CastExpression	( FT_UInt32 ) 0x7FFFFFFFL		3332326	0					
ANR	3332347	CastTarget	FT_UInt32		3332326	0					
ANR	3332348	PrimaryExpression	0x7FFFFFFFL		3332326	1					
ANR	3332349	ExpressionStatement	i = 31 - FT_MSB ( hi )	328:4:8232:8253	3332326	3	True				
ANR	3332350	AssignmentExpression	i = 31 - FT_MSB ( hi )		3332326	0		=			
ANR	3332351	Identifier	i		3332326	0					
ANR	3332352	AdditiveExpression	31 - FT_MSB ( hi )		3332326	1		-			
ANR	3332353	PrimaryExpression	31		3332326	0					
ANR	3332354	CallExpression	FT_MSB ( hi )		3332326	1					
ANR	3332355	Callee	FT_MSB		3332326	0					
ANR	3332356	Identifier	FT_MSB		3332326	0					
ANR	3332357	ArgumentList	hi		3332326	1					
ANR	3332358	Argument	hi		3332326	0					
ANR	3332359	Identifier	hi		3332326	0					
ANR	3332360	ExpressionStatement	r = ( hi << i ) | ( lo >> ( 32 - i ) )	329:4:8259:8297	3332326	4	True				
ANR	3332361	AssignmentExpression	r = ( hi << i ) | ( lo >> ( 32 - i ) )		3332326	0		=			
ANR	3332362	Identifier	r		3332326	0					
ANR	3332363	InclusiveOrExpression	( hi << i ) | ( lo >> ( 32 - i ) )		3332326	1		|			
ANR	3332364	ShiftExpression	hi << i		3332326	0		<<			
ANR	3332365	Identifier	hi		3332326	0					
ANR	3332366	Identifier	i		3332326	1					
ANR	3332367	ShiftExpression	lo >> ( 32 - i )		3332326	1		>>			
ANR	3332368	Identifier	lo		3332326	0					
ANR	3332369	AdditiveExpression	32 - i		3332326	1		-			
ANR	3332370	PrimaryExpression	32		3332326	0					
ANR	3332371	Identifier	i		3332326	1					
ANR	3332372	ExpressionStatement	lo <<= i	329:44:8299:8307	3332326	5	True				
ANR	3332373	AssignmentExpression	lo <<= i		3332326	0		<<=			
ANR	3332374	Identifier	lo		3332326	0					
ANR	3332375	Identifier	i		3332326	1					
ANR	3332376	ExpressionStatement	q = r / y	330:4:8337:8346	3332326	6	True				
ANR	3332377	AssignmentExpression	q = r / y		3332326	0		=			
ANR	3332378	Identifier	q		3332326	0					
ANR	3332379	MultiplicativeExpression	r / y		3332326	1		/			
ANR	3332380	Identifier	r		3332326	0					
ANR	3332381	Identifier	y		3332326	1					
ANR	3332382	ExpressionStatement	r -= q * y	331:4:8352:8362	3332326	7	True				
ANR	3332383	AssignmentExpression	r -= q * y		3332326	0		-=			
ANR	3332384	Identifier	r		3332326	0					
ANR	3332385	MultiplicativeExpression	q * y		3332326	1		*			
ANR	3332386	Identifier	q		3332326	0					
ANR	3332387	Identifier	y		3332326	1					
ANR	3332388	ExpressionStatement	i = 32 - i	333:4:8387:8397	3332326	8	True				
ANR	3332389	AssignmentExpression	i = 32 - i		3332326	0		=			
ANR	3332390	Identifier	i		3332326	0					
ANR	3332391	AdditiveExpression	32 - i		3332326	1		-			
ANR	3332392	PrimaryExpression	32		3332326	0					
ANR	3332393	Identifier	i		3332326	1					
ANR	3332394	DoStatement	do		3332326	9					
ANR	3332395	CompoundStatement		21:4:633:633	3332326	0					
ANR	3332396	ExpressionStatement	q <<= 1	336:6:8457:8464	3332326	0	True				
ANR	3332397	AssignmentExpression	q <<= 1		3332326	0		<<=			
ANR	3332398	Identifier	q		3332326	0					
ANR	3332399	PrimaryExpression	1		3332326	1					
ANR	3332400	ExpressionStatement	r = ( r << 1 ) | ( lo >> 31 )	337:6:8472:8503	3332326	1	True				
ANR	3332401	AssignmentExpression	r = ( r << 1 ) | ( lo >> 31 )		3332326	0		=			
ANR	3332402	Identifier	r		3332326	0					
ANR	3332403	InclusiveOrExpression	( r << 1 ) | ( lo >> 31 )		3332326	1		|			
ANR	3332404	ShiftExpression	r << 1		3332326	0		<<			
ANR	3332405	Identifier	r		3332326	0					
ANR	3332406	PrimaryExpression	1		3332326	1					
ANR	3332407	ShiftExpression	lo >> 31		3332326	1		>>			
ANR	3332408	Identifier	lo		3332326	0					
ANR	3332409	PrimaryExpression	31		3332326	1					
ANR	3332410	ExpressionStatement	lo <<= 1	337:39:8505:8513	3332326	2	True				
ANR	3332411	AssignmentExpression	lo <<= 1		3332326	0		<<=			
ANR	3332412	Identifier	lo		3332326	0					
ANR	3332413	PrimaryExpression	1		3332326	1					
ANR	3332414	IfStatement	if ( r >= y )		3332326	3					
ANR	3332415	Condition	r >= y	339:11:8527:8532	3332326	0	True				
ANR	3332416	RelationalExpression	r >= y		3332326	0		>=			
ANR	3332417	Identifier	r		3332326	0					
ANR	3332418	Identifier	y		3332326	1					
ANR	3332419	CompoundStatement		26:6:726:726	3332326	1					
ANR	3332420	ExpressionStatement	r -= y	341:8:8552:8558	3332326	0	True				
ANR	3332421	AssignmentExpression	r -= y		3332326	0		-=			
ANR	3332422	Identifier	r		3332326	0					
ANR	3332423	Identifier	y		3332326	1					
ANR	3332424	ExpressionStatement	q |= 1	342:8:8568:8574	3332326	1	True				
ANR	3332425	AssignmentExpression	q |= 1		3332326	0		|=			
ANR	3332426	Identifier	q		3332326	0					
ANR	3332427	PrimaryExpression	1		3332326	1					
ANR	3332428	Condition	-- i	344:14:8598:8600	3332326	1	True				
ANR	3332429	UnaryExpression	-- i		3332326	0					
ANR	3332430	IncDec	--		3332326	0					
ANR	3332431	Identifier	i		3332326	1					
ANR	3332432	ReturnStatement	return q ;	346:4:8610:8618	3332326	10	True				
ANR	3332433	Identifier	q		3332326	0					
ANR	3332434	ReturnType	static FT_UInt32		3332326	1					
ANR	3332435	Identifier	ft_div64by32		3332326	2					
ANR	3332436	ParameterList	"FT_UInt32 hi , FT_UInt32 lo , FT_UInt32 y"		3332326	3					
ANR	3332437	Parameter	FT_UInt32 hi	312:16:7736:7748	3332326	0	True				
ANR	3332438	ParameterType	FT_UInt32		3332326	0					
ANR	3332439	Identifier	hi		3332326	1					
ANR	3332440	Parameter	FT_UInt32 lo	313:16:7767:7779	3332326	1	True				
ANR	3332441	ParameterType	FT_UInt32		3332326	0					
ANR	3332442	Identifier	lo		3332326	1					
ANR	3332443	Parameter	FT_UInt32 y	314:16:7798:7809	3332326	2	True				
ANR	3332444	ParameterType	FT_UInt32		3332326	0					
ANR	3332445	Identifier	y		3332326	1					
ANR	3332446	CFGEntryNode	ENTRY		3332326		True				
ANR	3332447	CFGExitNode	EXIT		3332326		True				
ANR	3332448	Symbol	hi		3332326						
ANR	3332449	Symbol	q		3332326						
ANR	3332450	Symbol	r		3332326						
ANR	3332451	Symbol	lo		3332326						
ANR	3332452	Symbol	FT_MSB		3332326						
ANR	3332453	Symbol	y		3332326						
ANR	3332454	Symbol	i		3332326						
ANR	3332455	Function	FT_Add64	350:2:8628:8848							
ANR	3332456	FunctionDef	"FT_Add64 (FT_Int64 * x , FT_Int64 * y , FT_Int64 * z)"		3332455	0					
ANR	3332457	CompoundStatement		354:2:8721:8848	3332455	0					
ANR	3332458	IdentifierDeclStatement	"FT_UInt32 lo , hi ;"	355:4:8727:8744	3332455	0	True				
ANR	3332459	IdentifierDecl	lo		3332455	0					
ANR	3332460	IdentifierDeclType	FT_UInt32		3332455	0					
ANR	3332461	Identifier	lo		3332455	1					
ANR	3332462	IdentifierDecl	hi		3332455	1					
ANR	3332463	IdentifierDeclType	FT_UInt32		3332455	0					
ANR	3332464	Identifier	hi		3332455	1					
ANR	3332465	ExpressionStatement	lo = x -> lo + y -> lo	358:4:8752:8770	3332455	1	True				
ANR	3332466	AssignmentExpression	lo = x -> lo + y -> lo		3332455	0		=			
ANR	3332467	Identifier	lo		3332455	0					
ANR	3332468	AdditiveExpression	x -> lo + y -> lo		3332455	1		+			
ANR	3332469	PtrMemberAccess	x -> lo		3332455	0					
ANR	3332470	Identifier	x		3332455	0					
ANR	3332471	Identifier	lo		3332455	1					
ANR	3332472	PtrMemberAccess	y -> lo		3332455	1					
ANR	3332473	Identifier	y		3332455	0					
ANR	3332474	Identifier	lo		3332455	1					
ANR	3332475	ExpressionStatement	hi = x -> hi + y -> hi + ( lo < x -> lo )	359:4:8776:8811	3332455	2	True				
ANR	3332476	AssignmentExpression	hi = x -> hi + y -> hi + ( lo < x -> lo )		3332455	0		=			
ANR	3332477	Identifier	hi		3332455	0					
ANR	3332478	AdditiveExpression	x -> hi + y -> hi + ( lo < x -> lo )		3332455	1		+			
ANR	3332479	PtrMemberAccess	x -> hi		3332455	0					
ANR	3332480	Identifier	x		3332455	0					
ANR	3332481	Identifier	hi		3332455	1					
ANR	3332482	AdditiveExpression	y -> hi + ( lo < x -> lo )		3332455	1		+			
ANR	3332483	PtrMemberAccess	y -> hi		3332455	0					
ANR	3332484	Identifier	y		3332455	0					
ANR	3332485	Identifier	hi		3332455	1					
ANR	3332486	RelationalExpression	lo < x -> lo		3332455	1		<			
ANR	3332487	Identifier	lo		3332455	0					
ANR	3332488	PtrMemberAccess	x -> lo		3332455	1					
ANR	3332489	Identifier	x		3332455	0					
ANR	3332490	Identifier	lo		3332455	1					
ANR	3332491	ExpressionStatement	z -> lo = lo	361:4:8818:8828	3332455	3	True				
ANR	3332492	AssignmentExpression	z -> lo = lo		3332455	0		=			
ANR	3332493	PtrMemberAccess	z -> lo		3332455	0					
ANR	3332494	Identifier	z		3332455	0					
ANR	3332495	Identifier	lo		3332455	1					
ANR	3332496	Identifier	lo		3332455	1					
ANR	3332497	ExpressionStatement	z -> hi = hi	362:4:8834:8844	3332455	4	True				
ANR	3332498	AssignmentExpression	z -> hi = hi		3332455	0		=			
ANR	3332499	PtrMemberAccess	z -> hi		3332455	0					
ANR	3332500	Identifier	z		3332455	0					
ANR	3332501	Identifier	hi		3332455	1					
ANR	3332502	Identifier	hi		3332455	1					
ANR	3332503	ReturnType	static void		3332455	1					
ANR	3332504	Identifier	FT_Add64		3332455	2					
ANR	3332505	ParameterList	"FT_Int64 * x , FT_Int64 * y , FT_Int64 * z"		3332455	3					
ANR	3332506	Parameter	FT_Int64 * x	351:12:8652:8663	3332455	0	True				
ANR	3332507	ParameterType	FT_Int64 *		3332455	0					
ANR	3332508	Identifier	x		3332455	1					
ANR	3332509	Parameter	FT_Int64 * y	352:12:8678:8689	3332455	1	True				
ANR	3332510	ParameterType	FT_Int64 *		3332455	0					
ANR	3332511	Identifier	y		3332455	1					
ANR	3332512	Parameter	FT_Int64 * z	353:12:8704:8715	3332455	2	True				
ANR	3332513	ParameterType	FT_Int64 *		3332455	0					
ANR	3332514	Identifier	z		3332455	1					
ANR	3332515	CFGEntryNode	ENTRY		3332455		True				
ANR	3332516	CFGExitNode	EXIT		3332455		True				
ANR	3332517	Symbol	z -> hi		3332455						
ANR	3332518	Symbol	hi		3332455						
ANR	3332519	Symbol	* x		3332455						
ANR	3332520	Symbol	lo		3332455						
ANR	3332521	Symbol	* y		3332455						
ANR	3332522	Symbol	* z		3332455						
ANR	3332523	Symbol	z -> lo		3332455						
ANR	3332524	Symbol	y -> lo		3332455						
ANR	3332525	Symbol	y -> hi		3332455						
ANR	3332526	Symbol	x -> hi		3332455						
ANR	3332527	Symbol	x -> lo		3332455						
ANR	3332528	Symbol	x		3332455						
ANR	3332529	Symbol	y		3332455						
ANR	3332530	Symbol	z		3332455						
ANR	3332531	Function	FT_MulDiv	416:2:12418:13293							
ANR	3332532	FunctionDef	"FT_MulDiv (FT_Long a_ , FT_Long b_ , FT_Long c_)"		3332531	0					
ANR	3332533	CompoundStatement		419:2:12497:13293	3332531	0					
ANR	3332534	IdentifierDeclStatement	FT_Int s = 1 ;	420:4:12503:12519	3332531	0	True				
ANR	3332535	IdentifierDecl	s = 1		3332531	0					
ANR	3332536	IdentifierDeclType	FT_Int		3332531	0					
ANR	3332537	Identifier	s		3332531	1					
ANR	3332538	AssignmentExpression	s = 1		3332531	2		=			
ANR	3332539	Identifier	s		3332531	0					
ANR	3332540	PrimaryExpression	1		3332531	1					
ANR	3332541	IdentifierDeclStatement	"FT_UInt32 a , b , c ;"	421:4:12525:12543	3332531	1	True				
ANR	3332542	IdentifierDecl	a		3332531	0					
ANR	3332543	IdentifierDeclType	FT_UInt32		3332531	0					
ANR	3332544	Identifier	a		3332531	1					
ANR	3332545	IdentifierDecl	b		3332531	1					
ANR	3332546	IdentifierDeclType	FT_UInt32		3332531	0					
ANR	3332547	Identifier	b		3332531	1					
ANR	3332548	IdentifierDecl	c		3332531	2					
ANR	3332549	IdentifierDeclType	FT_UInt32		3332531	0					
ANR	3332550	Identifier	c		3332531	1					
ANR	3332551	ExpressionStatement	a = ( FT_UInt32 ) a_	426:4:12613:12630	3332531	2	True				
ANR	3332552	AssignmentExpression	a = ( FT_UInt32 ) a_		3332531	0		=			
ANR	3332553	Identifier	a		3332531	0					
ANR	3332554	CastExpression	( FT_UInt32 ) a_		3332531	1					
ANR	3332555	CastTarget	FT_UInt32		3332531	0					
ANR	3332556	Identifier	a_		3332531	1					
ANR	3332557	ExpressionStatement	b = ( FT_UInt32 ) b_	427:4:12636:12653	3332531	3	True				
ANR	3332558	AssignmentExpression	b = ( FT_UInt32 ) b_		3332531	0		=			
ANR	3332559	Identifier	b		3332531	0					
ANR	3332560	CastExpression	( FT_UInt32 ) b_		3332531	1					
ANR	3332561	CastTarget	FT_UInt32		3332531	0					
ANR	3332562	Identifier	b_		3332531	1					
ANR	3332563	ExpressionStatement	c = ( FT_UInt32 ) c_	428:4:12659:12676	3332531	4	True				
ANR	3332564	AssignmentExpression	c = ( FT_UInt32 ) c_		3332531	0		=			
ANR	3332565	Identifier	c		3332531	0					
ANR	3332566	CastExpression	( FT_UInt32 ) c_		3332531	1					
ANR	3332567	CastTarget	FT_UInt32		3332531	0					
ANR	3332568	Identifier	c_		3332531	1					
ANR	3332569	ExpressionStatement	"FT_MOVE_SIGN ( a_ , a , s )"	430:4:12683:12707	3332531	5	True				
ANR	3332570	CallExpression	"FT_MOVE_SIGN ( a_ , a , s )"		3332531	0					
ANR	3332571	Callee	FT_MOVE_SIGN		3332531	0					
ANR	3332572	Identifier	FT_MOVE_SIGN		3332531	0					
ANR	3332573	ArgumentList	a_		3332531	1					
ANR	3332574	Argument	a_		3332531	0					
ANR	3332575	Identifier	a_		3332531	0					
ANR	3332576	Argument	a		3332531	1					
ANR	3332577	Identifier	a		3332531	0					
ANR	3332578	Argument	s		3332531	2					
ANR	3332579	Identifier	s		3332531	0					
ANR	3332580	ExpressionStatement	"FT_MOVE_SIGN ( b_ , b , s )"	431:4:12713:12737	3332531	6	True				
ANR	3332581	CallExpression	"FT_MOVE_SIGN ( b_ , b , s )"		3332531	0					
ANR	3332582	Callee	FT_MOVE_SIGN		3332531	0					
ANR	3332583	Identifier	FT_MOVE_SIGN		3332531	0					
ANR	3332584	ArgumentList	b_		3332531	1					
ANR	3332585	Argument	b_		3332531	0					
ANR	3332586	Identifier	b_		3332531	0					
ANR	3332587	Argument	b		3332531	1					
ANR	3332588	Identifier	b		3332531	0					
ANR	3332589	Argument	s		3332531	2					
ANR	3332590	Identifier	s		3332531	0					
ANR	3332591	ExpressionStatement	"FT_MOVE_SIGN ( c_ , c , s )"	432:4:12743:12767	3332531	7	True				
ANR	3332592	CallExpression	"FT_MOVE_SIGN ( c_ , c , s )"		3332531	0					
ANR	3332593	Callee	FT_MOVE_SIGN		3332531	0					
ANR	3332594	Identifier	FT_MOVE_SIGN		3332531	0					
ANR	3332595	ArgumentList	c_		3332531	1					
ANR	3332596	Argument	c_		3332531	0					
ANR	3332597	Identifier	c_		3332531	0					
ANR	3332598	Argument	c		3332531	1					
ANR	3332599	Identifier	c		3332531	0					
ANR	3332600	Argument	s		3332531	2					
ANR	3332601	Identifier	s		3332531	0					
ANR	3332602	IfStatement	if ( c == 0 )		3332531	8					
ANR	3332603	Condition	c == 0	434:9:12779:12784	3332531	0	True				
ANR	3332604	EqualityExpression	c == 0		3332531	0		==			
ANR	3332605	Identifier	c		3332531	0					
ANR	3332606	PrimaryExpression	0		3332531	1					
ANR	3332607	ExpressionStatement	a = 0x7FFFFFFFUL	435:6:12794:12810	3332531	1	True				
ANR	3332608	AssignmentExpression	a = 0x7FFFFFFFUL		3332531	0		=			
ANR	3332609	Identifier	a		3332531	0					
ANR	3332610	PrimaryExpression	0x7FFFFFFFUL		3332531	1					
ANR	3332611	ElseStatement	else		3332531	0					
ANR	3332612	IfStatement	if ( a + b <= 129894UL - ( c >> 17 ) )		3332531	0					
ANR	3332613	Condition	a + b <= 129894UL - ( c >> 17 )	437:14:12827:12857	3332531	0	True				
ANR	3332614	RelationalExpression	a + b <= 129894UL - ( c >> 17 )		3332531	0		<=			
ANR	3332615	AdditiveExpression	a + b		3332531	0		+			
ANR	3332616	Identifier	a		3332531	0					
ANR	3332617	Identifier	b		3332531	1					
ANR	3332618	AdditiveExpression	129894UL - ( c >> 17 )		3332531	1		-			
ANR	3332619	PrimaryExpression	129894UL		3332531	0					
ANR	3332620	ShiftExpression	c >> 17		3332531	1		>>			
ANR	3332621	Identifier	c		3332531	0					
ANR	3332622	PrimaryExpression	17		3332531	1					
ANR	3332623	ExpressionStatement	a = ( a * b + ( c >> 1 ) ) / c	438:6:12867:12897	3332531	1	True				
ANR	3332624	AssignmentExpression	a = ( a * b + ( c >> 1 ) ) / c		3332531	0		=			
ANR	3332625	Identifier	a		3332531	0					
ANR	3332626	MultiplicativeExpression	( a * b + ( c >> 1 ) ) / c		3332531	1		/			
ANR	3332627	AdditiveExpression	a * b + ( c >> 1 )		3332531	0		+			
ANR	3332628	MultiplicativeExpression	a * b		3332531	0		*			
ANR	3332629	Identifier	a		3332531	0					
ANR	3332630	Identifier	b		3332531	1					
ANR	3332631	ShiftExpression	c >> 1		3332531	1		>>			
ANR	3332632	Identifier	c		3332531	0					
ANR	3332633	PrimaryExpression	1		3332531	1					
ANR	3332634	Identifier	c		3332531	1					
ANR	3332635	ElseStatement	else		3332531	0					
ANR	3332636	CompoundStatement		24:6:423:444	3332531	0					
ANR	3332637	IdentifierDeclStatement	"FT_Int64 temp , temp2 ;"	442:6:12921:12942	3332531	0	True				
ANR	3332638	IdentifierDecl	temp		3332531	0					
ANR	3332639	IdentifierDeclType	FT_Int64		3332531	0					
ANR	3332640	Identifier	temp		3332531	1					
ANR	3332641	IdentifierDecl	temp2		3332531	1					
ANR	3332642	IdentifierDeclType	FT_Int64		3332531	0					
ANR	3332643	Identifier	temp2		3332531	1					
ANR	3332644	ExpressionStatement	"ft_multo64 ( a , b , & temp )"	445:6:12952:12977	3332531	1	True				
ANR	3332645	CallExpression	"ft_multo64 ( a , b , & temp )"		3332531	0					
ANR	3332646	Callee	ft_multo64		3332531	0					
ANR	3332647	Identifier	ft_multo64		3332531	0					
ANR	3332648	ArgumentList	a		3332531	1					
ANR	3332649	Argument	a		3332531	0					
ANR	3332650	Identifier	a		3332531	0					
ANR	3332651	Argument	b		3332531	1					
ANR	3332652	Identifier	b		3332531	0					
ANR	3332653	Argument	& temp		3332531	2					
ANR	3332654	UnaryOperationExpression	& temp		3332531	0					
ANR	3332655	UnaryOperator	&		3332531	0					
ANR	3332656	Identifier	temp		3332531	1					
ANR	3332657	ExpressionStatement	temp2 . hi = 0	447:6:12986:12998	3332531	2	True				
ANR	3332658	AssignmentExpression	temp2 . hi = 0		3332531	0		=			
ANR	3332659	MemberAccess	temp2 . hi		3332531	0					
ANR	3332660	Identifier	temp2		3332531	0					
ANR	3332661	Identifier	hi		3332531	1					
ANR	3332662	PrimaryExpression	0		3332531	1					
ANR	3332663	ExpressionStatement	temp2 . lo = c >> 1	448:6:13006:13023	3332531	3	True				
ANR	3332664	AssignmentExpression	temp2 . lo = c >> 1		3332531	0		=			
ANR	3332665	MemberAccess	temp2 . lo		3332531	0					
ANR	3332666	Identifier	temp2		3332531	0					
ANR	3332667	Identifier	lo		3332531	1					
ANR	3332668	ShiftExpression	c >> 1		3332531	1		>>			
ANR	3332669	Identifier	c		3332531	0					
ANR	3332670	PrimaryExpression	1		3332531	1					
ANR	3332671	ExpressionStatement	"FT_Add64 ( & temp , & temp2 , & temp )"	450:6:13032:13064	3332531	4	True				
ANR	3332672	CallExpression	"FT_Add64 ( & temp , & temp2 , & temp )"		3332531	0					
ANR	3332673	Callee	FT_Add64		3332531	0					
ANR	3332674	Identifier	FT_Add64		3332531	0					
ANR	3332675	ArgumentList	& temp		3332531	1					
ANR	3332676	Argument	& temp		3332531	0					
ANR	3332677	UnaryOperationExpression	& temp		3332531	0					
ANR	3332678	UnaryOperator	&		3332531	0					
ANR	3332679	Identifier	temp		3332531	1					
ANR	3332680	Argument	& temp2		3332531	1					
ANR	3332681	UnaryOperationExpression	& temp2		3332531	0					
ANR	3332682	UnaryOperator	&		3332531	0					
ANR	3332683	Identifier	temp2		3332531	1					
ANR	3332684	Argument	& temp		3332531	2					
ANR	3332685	UnaryOperationExpression	& temp		3332531	0					
ANR	3332686	UnaryOperator	&		3332531	0					
ANR	3332687	Identifier	temp		3332531	1					
ANR	3332688	ExpressionStatement	"a = ( temp . hi == 0 ) ? temp . lo / c : ft_div64by32 ( temp . hi , temp . lo , c )"	453:6:13121:13220	3332531	5	True				
ANR	3332689	AssignmentExpression	"a = ( temp . hi == 0 ) ? temp . lo / c : ft_div64by32 ( temp . hi , temp . lo , c )"		3332531	0		=			
ANR	3332690	Identifier	a		3332531	0					
ANR	3332691	ConditionalExpression	"( temp . hi == 0 ) ? temp . lo / c : ft_div64by32 ( temp . hi , temp . lo , c )"		3332531	1					
ANR	3332692	Condition	temp . hi == 0		3332531	0					
ANR	3332693	EqualityExpression	temp . hi == 0		3332531	0		==			
ANR	3332694	MemberAccess	temp . hi		3332531	0					
ANR	3332695	Identifier	temp		3332531	0					
ANR	3332696	Identifier	hi		3332531	1					
ANR	3332697	PrimaryExpression	0		3332531	1					
ANR	3332698	MultiplicativeExpression	temp . lo / c		3332531	1		/			
ANR	3332699	MemberAccess	temp . lo		3332531	0					
ANR	3332700	Identifier	temp		3332531	0					
ANR	3332701	Identifier	lo		3332531	1					
ANR	3332702	Identifier	c		3332531	1					
ANR	3332703	CallExpression	"ft_div64by32 ( temp . hi , temp . lo , c )"		3332531	2					
ANR	3332704	Callee	ft_div64by32		3332531	0					
ANR	3332705	Identifier	ft_div64by32		3332531	0					
ANR	3332706	ArgumentList	temp . hi		3332531	1					
ANR	3332707	Argument	temp . hi		3332531	0					
ANR	3332708	MemberAccess	temp . hi		3332531	0					
ANR	3332709	Identifier	temp		3332531	0					
ANR	3332710	Identifier	hi		3332531	1					
ANR	3332711	Argument	temp . lo		3332531	1					
ANR	3332712	MemberAccess	temp . lo		3332531	0					
ANR	3332713	Identifier	temp		3332531	0					
ANR	3332714	Identifier	lo		3332531	1					
ANR	3332715	Argument	c		3332531	2					
ANR	3332716	Identifier	c		3332531	0					
ANR	3332717	ExpressionStatement	a_ = ( FT_Long ) a	457:4:13233:13248	3332531	9	True				
ANR	3332718	AssignmentExpression	a_ = ( FT_Long ) a		3332531	0		=			
ANR	3332719	Identifier	a_		3332531	0					
ANR	3332720	CastExpression	( FT_Long ) a		3332531	1					
ANR	3332721	CastTarget	FT_Long		3332531	0					
ANR	3332722	Identifier	a		3332531	1					
ANR	3332723	ReturnStatement	return s < 0 ? NEG_LONG ( a_ ) : a_ ;	459:4:13255:13289	3332531	10	True				
ANR	3332724	ConditionalExpression	s < 0 ? NEG_LONG ( a_ ) : a_		3332531	0					
ANR	3332725	Condition	s < 0		3332531	0					
ANR	3332726	RelationalExpression	s < 0		3332531	0		<			
ANR	3332727	Identifier	s		3332531	0					
ANR	3332728	PrimaryExpression	0		3332531	1					
ANR	3332729	CallExpression	NEG_LONG ( a_ )		3332531	1					
ANR	3332730	Callee	NEG_LONG		3332531	0					
ANR	3332731	Identifier	NEG_LONG		3332531	0					
ANR	3332732	ArgumentList	a_		3332531	1					
ANR	3332733	Argument	a_		3332531	0					
ANR	3332734	Identifier	a_		3332531	0					
ANR	3332735	Identifier	a_		3332531	2					
ANR	3332736	Identifier	FT_MulDiv		3332531	1					
ANR	3332737	ParameterList	"FT_Long a_ , FT_Long b_ , FT_Long c_"		3332531	2					
ANR	3332738	Parameter	FT_Long a_	416:13:12429:12439	3332531	0	True				
ANR	3332739	ParameterType	FT_Long		3332531	0					
ANR	3332740	Identifier	a_		3332531	1					
ANR	3332741	Parameter	FT_Long b_	417:13:12455:12465	3332531	1	True				
ANR	3332742	ParameterType	FT_Long		3332531	0					
ANR	3332743	Identifier	b_		3332531	1					
ANR	3332744	Parameter	FT_Long c_	418:13:12481:12491	3332531	2	True				
ANR	3332745	ParameterType	FT_Long		3332531	0					
ANR	3332746	Identifier	c_		3332531	1					
ANR	3332747	CFGEntryNode	ENTRY		3332531		True				
ANR	3332748	CFGExitNode	EXIT		3332531		True				
ANR	3332749	Symbol	a		3332531						
ANR	3332750	Symbol	b		3332531						
ANR	3332751	Symbol	temp		3332531						
ANR	3332752	Symbol	c		3332531						
ANR	3332753	Symbol	ft_div64by32		3332531						
ANR	3332754	Symbol	temp . hi		3332531						
ANR	3332755	Symbol	temp2		3332531						
ANR	3332756	Symbol	s		3332531						
ANR	3332757	Symbol	temp . lo		3332531						
ANR	3332758	Symbol	NEG_LONG		3332531						
ANR	3332759	Symbol	c_		3332531						
ANR	3332760	Symbol	temp2 . lo		3332531						
ANR	3332761	Symbol	b_		3332531						
ANR	3332762	Symbol	a_		3332531						
ANR	3332763	Symbol	temp2 . hi		3332531						
ANR	3332764	Symbol	& temp2		3332531						
ANR	3332765	Symbol	& temp		3332531						
ANR	3332766	Function	FT_MulDiv_No_Round	464:2:13324:14101							
ANR	3332767	FunctionDef	"FT_MulDiv_No_Round (FT_Long a_ , FT_Long b_ , FT_Long c_)"		3332766	0					
ANR	3332768	CompoundStatement		467:2:13430:14101	3332766	0					
ANR	3332769	IdentifierDeclStatement	FT_Int s = 1 ;	468:4:13436:13452	3332766	0	True				
ANR	3332770	IdentifierDecl	s = 1		3332766	0					
ANR	3332771	IdentifierDeclType	FT_Int		3332766	0					
ANR	3332772	Identifier	s		3332766	1					
ANR	3332773	AssignmentExpression	s = 1		3332766	2		=			
ANR	3332774	Identifier	s		3332766	0					
ANR	3332775	PrimaryExpression	1		3332766	1					
ANR	3332776	IdentifierDeclStatement	"FT_UInt32 a , b , c ;"	469:4:13458:13476	3332766	1	True				
ANR	3332777	IdentifierDecl	a		3332766	0					
ANR	3332778	IdentifierDeclType	FT_UInt32		3332766	0					
ANR	3332779	Identifier	a		3332766	1					
ANR	3332780	IdentifierDecl	b		3332766	1					
ANR	3332781	IdentifierDeclType	FT_UInt32		3332766	0					
ANR	3332782	Identifier	b		3332766	1					
ANR	3332783	IdentifierDecl	c		3332766	2					
ANR	3332784	IdentifierDeclType	FT_UInt32		3332766	0					
ANR	3332785	Identifier	c		3332766	1					
ANR	3332786	ExpressionStatement	a = ( FT_UInt32 ) a_	474:4:13546:13563	3332766	2	True				
ANR	3332787	AssignmentExpression	a = ( FT_UInt32 ) a_		3332766	0		=			
ANR	3332788	Identifier	a		3332766	0					
ANR	3332789	CastExpression	( FT_UInt32 ) a_		3332766	1					
ANR	3332790	CastTarget	FT_UInt32		3332766	0					
ANR	3332791	Identifier	a_		3332766	1					
ANR	3332792	ExpressionStatement	b = ( FT_UInt32 ) b_	475:4:13569:13586	3332766	3	True				
ANR	3332793	AssignmentExpression	b = ( FT_UInt32 ) b_		3332766	0		=			
ANR	3332794	Identifier	b		3332766	0					
ANR	3332795	CastExpression	( FT_UInt32 ) b_		3332766	1					
ANR	3332796	CastTarget	FT_UInt32		3332766	0					
ANR	3332797	Identifier	b_		3332766	1					
ANR	3332798	ExpressionStatement	c = ( FT_UInt32 ) c_	476:4:13592:13609	3332766	4	True				
ANR	3332799	AssignmentExpression	c = ( FT_UInt32 ) c_		3332766	0		=			
ANR	3332800	Identifier	c		3332766	0					
ANR	3332801	CastExpression	( FT_UInt32 ) c_		3332766	1					
ANR	3332802	CastTarget	FT_UInt32		3332766	0					
ANR	3332803	Identifier	c_		3332766	1					
ANR	3332804	ExpressionStatement	"FT_MOVE_SIGN ( a_ , a , s )"	478:4:13616:13640	3332766	5	True				
ANR	3332805	CallExpression	"FT_MOVE_SIGN ( a_ , a , s )"		3332766	0					
ANR	3332806	Callee	FT_MOVE_SIGN		3332766	0					
ANR	3332807	Identifier	FT_MOVE_SIGN		3332766	0					
ANR	3332808	ArgumentList	a_		3332766	1					
ANR	3332809	Argument	a_		3332766	0					
ANR	3332810	Identifier	a_		3332766	0					
ANR	3332811	Argument	a		3332766	1					
ANR	3332812	Identifier	a		3332766	0					
ANR	3332813	Argument	s		3332766	2					
ANR	3332814	Identifier	s		3332766	0					
ANR	3332815	ExpressionStatement	"FT_MOVE_SIGN ( b_ , b , s )"	479:4:13646:13670	3332766	6	True				
ANR	3332816	CallExpression	"FT_MOVE_SIGN ( b_ , b , s )"		3332766	0					
ANR	3332817	Callee	FT_MOVE_SIGN		3332766	0					
ANR	3332818	Identifier	FT_MOVE_SIGN		3332766	0					
ANR	3332819	ArgumentList	b_		3332766	1					
ANR	3332820	Argument	b_		3332766	0					
ANR	3332821	Identifier	b_		3332766	0					
ANR	3332822	Argument	b		3332766	1					
ANR	3332823	Identifier	b		3332766	0					
ANR	3332824	Argument	s		3332766	2					
ANR	3332825	Identifier	s		3332766	0					
ANR	3332826	ExpressionStatement	"FT_MOVE_SIGN ( c_ , c , s )"	480:4:13676:13700	3332766	7	True				
ANR	3332827	CallExpression	"FT_MOVE_SIGN ( c_ , c , s )"		3332766	0					
ANR	3332828	Callee	FT_MOVE_SIGN		3332766	0					
ANR	3332829	Identifier	FT_MOVE_SIGN		3332766	0					
ANR	3332830	ArgumentList	c_		3332766	1					
ANR	3332831	Argument	c_		3332766	0					
ANR	3332832	Identifier	c_		3332766	0					
ANR	3332833	Argument	c		3332766	1					
ANR	3332834	Identifier	c		3332766	0					
ANR	3332835	Argument	s		3332766	2					
ANR	3332836	Identifier	s		3332766	0					
ANR	3332837	IfStatement	if ( c == 0 )		3332766	8					
ANR	3332838	Condition	c == 0	482:9:13712:13717	3332766	0	True				
ANR	3332839	EqualityExpression	c == 0		3332766	0		==			
ANR	3332840	Identifier	c		3332766	0					
ANR	3332841	PrimaryExpression	0		3332766	1					
ANR	3332842	ExpressionStatement	a = 0x7FFFFFFFUL	483:6:13727:13743	3332766	1	True				
ANR	3332843	AssignmentExpression	a = 0x7FFFFFFFUL		3332766	0		=			
ANR	3332844	Identifier	a		3332766	0					
ANR	3332845	PrimaryExpression	0x7FFFFFFFUL		3332766	1					
ANR	3332846	ElseStatement	else		3332766	0					
ANR	3332847	IfStatement	if ( a + b <= 131071UL )		3332766	0					
ANR	3332848	Condition	a + b <= 131071UL	485:14:13760:13776	3332766	0	True				
ANR	3332849	RelationalExpression	a + b <= 131071UL		3332766	0		<=			
ANR	3332850	AdditiveExpression	a + b		3332766	0		+			
ANR	3332851	Identifier	a		3332766	0					
ANR	3332852	Identifier	b		3332766	1					
ANR	3332853	PrimaryExpression	131071UL		3332766	1					
ANR	3332854	ExpressionStatement	a = a * b / c	486:6:13786:13799	3332766	1	True				
ANR	3332855	AssignmentExpression	a = a * b / c		3332766	0		=			
ANR	3332856	Identifier	a		3332766	0					
ANR	3332857	MultiplicativeExpression	a * b / c		3332766	1		*			
ANR	3332858	Identifier	a		3332766	0					
ANR	3332859	MultiplicativeExpression	b / c		3332766	1		/			
ANR	3332860	Identifier	b		3332766	0					
ANR	3332861	Identifier	c		3332766	1					
ANR	3332862	ElseStatement	else		3332766	0					
ANR	3332863	CompoundStatement		24:6:392:406	3332766	0					
ANR	3332864	IdentifierDeclStatement	FT_Int64 temp ;	490:6:13823:13837	3332766	0	True				
ANR	3332865	IdentifierDecl	temp		3332766	0					
ANR	3332866	IdentifierDeclType	FT_Int64		3332766	0					
ANR	3332867	Identifier	temp		3332766	1					
ANR	3332868	ExpressionStatement	"ft_multo64 ( a , b , & temp )"	493:6:13847:13872	3332766	1	True				
ANR	3332869	CallExpression	"ft_multo64 ( a , b , & temp )"		3332766	0					
ANR	3332870	Callee	ft_multo64		3332766	0					
ANR	3332871	Identifier	ft_multo64		3332766	0					
ANR	3332872	ArgumentList	a		3332766	1					
ANR	3332873	Argument	a		3332766	0					
ANR	3332874	Identifier	a		3332766	0					
ANR	3332875	Argument	b		3332766	1					
ANR	3332876	Identifier	b		3332766	0					
ANR	3332877	Argument	& temp		3332766	2					
ANR	3332878	UnaryOperationExpression	& temp		3332766	0					
ANR	3332879	UnaryOperator	&		3332766	0					
ANR	3332880	Identifier	temp		3332766	1					
ANR	3332881	ExpressionStatement	"a = ( temp . hi == 0 ) ? temp . lo / c : ft_div64by32 ( temp . hi , temp . lo , c )"	496:6:13929:14028	3332766	2	True				
ANR	3332882	AssignmentExpression	"a = ( temp . hi == 0 ) ? temp . lo / c : ft_div64by32 ( temp . hi , temp . lo , c )"		3332766	0		=			
ANR	3332883	Identifier	a		3332766	0					
ANR	3332884	ConditionalExpression	"( temp . hi == 0 ) ? temp . lo / c : ft_div64by32 ( temp . hi , temp . lo , c )"		3332766	1					
ANR	3332885	Condition	temp . hi == 0		3332766	0					
ANR	3332886	EqualityExpression	temp . hi == 0		3332766	0		==			
ANR	3332887	MemberAccess	temp . hi		3332766	0					
ANR	3332888	Identifier	temp		3332766	0					
ANR	3332889	Identifier	hi		3332766	1					
ANR	3332890	PrimaryExpression	0		3332766	1					
ANR	3332891	MultiplicativeExpression	temp . lo / c		3332766	1		/			
ANR	3332892	MemberAccess	temp . lo		3332766	0					
ANR	3332893	Identifier	temp		3332766	0					
ANR	3332894	Identifier	lo		3332766	1					
ANR	3332895	Identifier	c		3332766	1					
ANR	3332896	CallExpression	"ft_div64by32 ( temp . hi , temp . lo , c )"		3332766	2					
ANR	3332897	Callee	ft_div64by32		3332766	0					
ANR	3332898	Identifier	ft_div64by32		3332766	0					
ANR	3332899	ArgumentList	temp . hi		3332766	1					
ANR	3332900	Argument	temp . hi		3332766	0					
ANR	3332901	MemberAccess	temp . hi		3332766	0					
ANR	3332902	Identifier	temp		3332766	0					
ANR	3332903	Identifier	hi		3332766	1					
ANR	3332904	Argument	temp . lo		3332766	1					
ANR	3332905	MemberAccess	temp . lo		3332766	0					
ANR	3332906	Identifier	temp		3332766	0					
ANR	3332907	Identifier	lo		3332766	1					
ANR	3332908	Argument	c		3332766	2					
ANR	3332909	Identifier	c		3332766	0					
ANR	3332910	ExpressionStatement	a_ = ( FT_Long ) a	500:4:14041:14056	3332766	9	True				
ANR	3332911	AssignmentExpression	a_ = ( FT_Long ) a		3332766	0		=			
ANR	3332912	Identifier	a_		3332766	0					
ANR	3332913	CastExpression	( FT_Long ) a		3332766	1					
ANR	3332914	CastTarget	FT_Long		3332766	0					
ANR	3332915	Identifier	a		3332766	1					
ANR	3332916	ReturnStatement	return s < 0 ? NEG_LONG ( a_ ) : a_ ;	502:4:14063:14097	3332766	10	True				
ANR	3332917	ConditionalExpression	s < 0 ? NEG_LONG ( a_ ) : a_		3332766	0					
ANR	3332918	Condition	s < 0		3332766	0					
ANR	3332919	RelationalExpression	s < 0		3332766	0		<			
ANR	3332920	Identifier	s		3332766	0					
ANR	3332921	PrimaryExpression	0		3332766	1					
ANR	3332922	CallExpression	NEG_LONG ( a_ )		3332766	1					
ANR	3332923	Callee	NEG_LONG		3332766	0					
ANR	3332924	Identifier	NEG_LONG		3332766	0					
ANR	3332925	ArgumentList	a_		3332766	1					
ANR	3332926	Argument	a_		3332766	0					
ANR	3332927	Identifier	a_		3332766	0					
ANR	3332928	Identifier	a_		3332766	2					
ANR	3332929	Identifier	FT_MulDiv_No_Round		3332766	1					
ANR	3332930	ParameterList	"FT_Long a_ , FT_Long b_ , FT_Long c_"		3332766	2					
ANR	3332931	Parameter	FT_Long a_	464:22:13344:13354	3332766	0	True				
ANR	3332932	ParameterType	FT_Long		3332766	0					
ANR	3332933	Identifier	a_		3332766	1					
ANR	3332934	Parameter	FT_Long b_	465:22:13379:13389	3332766	1	True				
ANR	3332935	ParameterType	FT_Long		3332766	0					
ANR	3332936	Identifier	b_		3332766	1					
ANR	3332937	Parameter	FT_Long c_	466:22:13414:13424	3332766	2	True				
ANR	3332938	ParameterType	FT_Long		3332766	0					
ANR	3332939	Identifier	c_		3332766	1					
ANR	3332940	CFGEntryNode	ENTRY		3332766		True				
ANR	3332941	CFGExitNode	EXIT		3332766		True				
ANR	3332942	Symbol	a		3332766						
ANR	3332943	Symbol	b		3332766						
ANR	3332944	Symbol	temp		3332766						
ANR	3332945	Symbol	c		3332766						
ANR	3332946	Symbol	ft_div64by32		3332766						
ANR	3332947	Symbol	temp . hi		3332766						
ANR	3332948	Symbol	s		3332766						
ANR	3332949	Symbol	temp . lo		3332766						
ANR	3332950	Symbol	NEG_LONG		3332766						
ANR	3332951	Symbol	c_		3332766						
ANR	3332952	Symbol	b_		3332766						
ANR	3332953	Symbol	a_		3332766						
ANR	3332954	Symbol	& temp		3332766						
ANR	3332955	Function	FT_MulFix	509:2:14174:16593							
ANR	3332956	FunctionDef	"FT_MulFix (FT_Long a_ , FT_Long b_)"		3332955	0					
ANR	3332957	CompoundStatement		511:2:14227:16593	3332955	0					
ANR	3332958	ReturnStatement	"return FT_MULFIX_ASSEMBLER ( a_ , b_ ) ;"	514:4:14261:14297	3332955	0	True				
ANR	3332959	CallExpression	"FT_MULFIX_ASSEMBLER ( a_ , b_ )"		3332955	0					
ANR	3332960	Callee	FT_MULFIX_ASSEMBLER		3332955	0					
ANR	3332961	Identifier	FT_MULFIX_ASSEMBLER		3332955	0					
ANR	3332962	ArgumentList	a_		3332955	1					
ANR	3332963	Argument	a_		3332955	0					
ANR	3332964	Identifier	a_		3332955	0					
ANR	3332965	Argument	b_		3332955	1					
ANR	3332966	Identifier	b_		3332955	0					
ANR	3332967	Identifier	FT_MulFix		3332955	1					
ANR	3332968	ParameterList	"FT_Long a_ , FT_Long b_"		3332955	2					
ANR	3332969	Parameter	FT_Long a_	509:13:14185:14195	3332955	0	True				
ANR	3332970	ParameterType	FT_Long		3332955	0					
ANR	3332971	Identifier	a_		3332955	1					
ANR	3332972	Parameter	FT_Long b_	510:13:14211:14221	3332955	1	True				
ANR	3332973	ParameterType	FT_Long		3332955	0					
ANR	3332974	Identifier	b_		3332955	1					
ANR	3332975	CFGEntryNode	ENTRY		3332955		True				
ANR	3332976	CFGExitNode	EXIT		3332955		True				
ANR	3332977	Symbol	b_		3332955						
ANR	3332978	Symbol	a_		3332955						
ANR	3332979	Symbol	FT_MULFIX_ASSEMBLER		3332955						
ANR	3332980	Function	FT_DivFix	608:2:16666:17541							
ANR	3332981	FunctionDef	"FT_DivFix (FT_Long a_ , FT_Long b_)"		3332980	0					
ANR	3332982	CompoundStatement		610:2:16719:17541	3332980	0					
ANR	3332983	IdentifierDeclStatement	FT_Int s = 1 ;	611:4:16725:16741	3332980	0	True				
ANR	3332984	IdentifierDecl	s = 1		3332980	0					
ANR	3332985	IdentifierDeclType	FT_Int		3332980	0					
ANR	3332986	Identifier	s		3332980	1					
ANR	3332987	AssignmentExpression	s = 1		3332980	2		=			
ANR	3332988	Identifier	s		3332980	0					
ANR	3332989	PrimaryExpression	1		3332980	1					
ANR	3332990	IdentifierDeclStatement	"FT_UInt32 a , b , q ;"	612:4:16747:16765	3332980	1	True				
ANR	3332991	IdentifierDecl	a		3332980	0					
ANR	3332992	IdentifierDeclType	FT_UInt32		3332980	0					
ANR	3332993	Identifier	a		3332980	1					
ANR	3332994	IdentifierDecl	b		3332980	1					
ANR	3332995	IdentifierDeclType	FT_UInt32		3332980	0					
ANR	3332996	Identifier	b		3332980	1					
ANR	3332997	IdentifierDecl	q		3332980	2					
ANR	3332998	IdentifierDeclType	FT_UInt32		3332980	0					
ANR	3332999	Identifier	q		3332980	1					
ANR	3333000	IdentifierDeclStatement	FT_Long q_ ;	613:4:16771:16784	3332980	2	True				
ANR	3333001	IdentifierDecl	q_		3332980	0					
ANR	3333002	IdentifierDeclType	FT_Long		3332980	0					
ANR	3333003	Identifier	q_		3332980	1					
ANR	3333004	ExpressionStatement	a = ( FT_UInt32 ) a_	618:4:16854:16871	3332980	3	True				
ANR	3333005	AssignmentExpression	a = ( FT_UInt32 ) a_		3332980	0		=			
ANR	3333006	Identifier	a		3332980	0					
ANR	3333007	CastExpression	( FT_UInt32 ) a_		3332980	1					
ANR	3333008	CastTarget	FT_UInt32		3332980	0					
ANR	3333009	Identifier	a_		3332980	1					
ANR	3333010	ExpressionStatement	b = ( FT_UInt32 ) b_	619:4:16877:16894	3332980	4	True				
ANR	3333011	AssignmentExpression	b = ( FT_UInt32 ) b_		3332980	0		=			
ANR	3333012	Identifier	b		3332980	0					
ANR	3333013	CastExpression	( FT_UInt32 ) b_		3332980	1					
ANR	3333014	CastTarget	FT_UInt32		3332980	0					
ANR	3333015	Identifier	b_		3332980	1					
ANR	3333016	ExpressionStatement	"FT_MOVE_SIGN ( a_ , a , s )"	621:4:16901:16925	3332980	5	True				
ANR	3333017	CallExpression	"FT_MOVE_SIGN ( a_ , a , s )"		3332980	0					
ANR	3333018	Callee	FT_MOVE_SIGN		3332980	0					
ANR	3333019	Identifier	FT_MOVE_SIGN		3332980	0					
ANR	3333020	ArgumentList	a_		3332980	1					
ANR	3333021	Argument	a_		3332980	0					
ANR	3333022	Identifier	a_		3332980	0					
ANR	3333023	Argument	a		3332980	1					
ANR	3333024	Identifier	a		3332980	0					
ANR	3333025	Argument	s		3332980	2					
ANR	3333026	Identifier	s		3332980	0					
ANR	3333027	ExpressionStatement	"FT_MOVE_SIGN ( b_ , b , s )"	622:4:16931:16955	3332980	6	True				
ANR	3333028	CallExpression	"FT_MOVE_SIGN ( b_ , b , s )"		3332980	0					
ANR	3333029	Callee	FT_MOVE_SIGN		3332980	0					
ANR	3333030	Identifier	FT_MOVE_SIGN		3332980	0					
ANR	3333031	ArgumentList	b_		3332980	1					
ANR	3333032	Argument	b_		3332980	0					
ANR	3333033	Identifier	b_		3332980	0					
ANR	3333034	Argument	b		3332980	1					
ANR	3333035	Identifier	b		3332980	0					
ANR	3333036	Argument	s		3332980	2					
ANR	3333037	Identifier	s		3332980	0					
ANR	3333038	IfStatement	if ( b == 0 )		3332980	7					
ANR	3333039	Condition	b == 0	624:9:16967:16972	3332980	0	True				
ANR	3333040	EqualityExpression	b == 0		3332980	0		==			
ANR	3333041	Identifier	b		3332980	0					
ANR	3333042	PrimaryExpression	0		3332980	1					
ANR	3333043	CompoundStatement		16:4:260:260	3332980	1					
ANR	3333044	ExpressionStatement	q = 0x7FFFFFFFUL	627:6:17024:17040	3332980	0	True				
ANR	3333045	AssignmentExpression	q = 0x7FFFFFFFUL		3332980	0		=			
ANR	3333046	Identifier	q		3332980	0					
ANR	3333047	PrimaryExpression	0x7FFFFFFFUL		3332980	1					
ANR	3333048	ElseStatement	else		3332980	0					
ANR	3333049	IfStatement	if ( a <= 65535UL - ( b >> 17 ) )		3332980	0					
ANR	3333050	Condition	a <= 65535UL - ( b >> 17 )	629:14:17062:17087	3332980	0	True				
ANR	3333051	RelationalExpression	a <= 65535UL - ( b >> 17 )		3332980	0		<=			
ANR	3333052	Identifier	a		3332980	0					
ANR	3333053	AdditiveExpression	65535UL - ( b >> 17 )		3332980	1		-			
ANR	3333054	PrimaryExpression	65535UL		3332980	0					
ANR	3333055	ShiftExpression	b >> 17		3332980	1		>>			
ANR	3333056	Identifier	b		3332980	0					
ANR	3333057	PrimaryExpression	17		3332980	1					
ANR	3333058	CompoundStatement		21:4:375:375	3332980	1					
ANR	3333059	ExpressionStatement	q = ( ( a << 16 ) + ( b >> 1 ) ) / b	632:6:17139:17175	3332980	0	True				
ANR	3333060	AssignmentExpression	q = ( ( a << 16 ) + ( b >> 1 ) ) / b		3332980	0		=			
ANR	3333061	Identifier	q		3332980	0					
ANR	3333062	MultiplicativeExpression	( ( a << 16 ) + ( b >> 1 ) ) / b		3332980	1		/			
ANR	3333063	AdditiveExpression	( a << 16 ) + ( b >> 1 )		3332980	0		+			
ANR	3333064	ShiftExpression	a << 16		3332980	0		<<			
ANR	3333065	Identifier	a		3332980	0					
ANR	3333066	PrimaryExpression	16		3332980	1					
ANR	3333067	ShiftExpression	b >> 1		3332980	1		>>			
ANR	3333068	Identifier	b		3332980	0					
ANR	3333069	PrimaryExpression	1		3332980	1					
ANR	3333070	Identifier	b		3332980	1					
ANR	3333071	ElseStatement	else		3332980	0					
ANR	3333072	CompoundStatement		28:6:540:561	3332980	0					
ANR	3333073	IdentifierDeclStatement	"FT_Int64 temp , temp2 ;"	637:6:17260:17281	3332980	0	True				
ANR	3333074	IdentifierDecl	temp		3332980	0					
ANR	3333075	IdentifierDeclType	FT_Int64		3332980	0					
ANR	3333076	Identifier	temp		3332980	1					
ANR	3333077	IdentifierDecl	temp2		3332980	1					
ANR	3333078	IdentifierDeclType	FT_Int64		3332980	0					
ANR	3333079	Identifier	temp2		3332980	1					
ANR	3333080	ExpressionStatement	temp . hi = a >> 16	640:6:17291:17309	3332980	1	True				
ANR	3333081	AssignmentExpression	temp . hi = a >> 16		3332980	0		=			
ANR	3333082	MemberAccess	temp . hi		3332980	0					
ANR	3333083	Identifier	temp		3332980	0					
ANR	3333084	Identifier	hi		3332980	1					
ANR	3333085	ShiftExpression	a >> 16		3332980	1		>>			
ANR	3333086	Identifier	a		3332980	0					
ANR	3333087	PrimaryExpression	16		3332980	1					
ANR	3333088	ExpressionStatement	temp . lo = a << 16	641:6:17317:17335	3332980	2	True				
ANR	3333089	AssignmentExpression	temp . lo = a << 16		3332980	0		=			
ANR	3333090	MemberAccess	temp . lo		3332980	0					
ANR	3333091	Identifier	temp		3332980	0					
ANR	3333092	Identifier	lo		3332980	1					
ANR	3333093	ShiftExpression	a << 16		3332980	1		<<			
ANR	3333094	Identifier	a		3332980	0					
ANR	3333095	PrimaryExpression	16		3332980	1					
ANR	3333096	ExpressionStatement	temp2 . hi = 0	642:6:17343:17355	3332980	3	True				
ANR	3333097	AssignmentExpression	temp2 . hi = 0		3332980	0		=			
ANR	3333098	MemberAccess	temp2 . hi		3332980	0					
ANR	3333099	Identifier	temp2		3332980	0					
ANR	3333100	Identifier	hi		3332980	1					
ANR	3333101	PrimaryExpression	0		3332980	1					
ANR	3333102	ExpressionStatement	temp2 . lo = b >> 1	643:6:17363:17380	3332980	4	True				
ANR	3333103	AssignmentExpression	temp2 . lo = b >> 1		3332980	0		=			
ANR	3333104	MemberAccess	temp2 . lo		3332980	0					
ANR	3333105	Identifier	temp2		3332980	0					
ANR	3333106	Identifier	lo		3332980	1					
ANR	3333107	ShiftExpression	b >> 1		3332980	1		>>			
ANR	3333108	Identifier	b		3332980	0					
ANR	3333109	PrimaryExpression	1		3332980	1					
ANR	3333110	ExpressionStatement	"FT_Add64 ( & temp , & temp2 , & temp )"	645:6:17389:17421	3332980	5	True				
ANR	3333111	CallExpression	"FT_Add64 ( & temp , & temp2 , & temp )"		3332980	0					
ANR	3333112	Callee	FT_Add64		3332980	0					
ANR	3333113	Identifier	FT_Add64		3332980	0					
ANR	3333114	ArgumentList	& temp		3332980	1					
ANR	3333115	Argument	& temp		3332980	0					
ANR	3333116	UnaryOperationExpression	& temp		3332980	0					
ANR	3333117	UnaryOperator	&		3332980	0					
ANR	3333118	Identifier	temp		3332980	1					
ANR	3333119	Argument	& temp2		3332980	1					
ANR	3333120	UnaryOperationExpression	& temp2		3332980	0					
ANR	3333121	UnaryOperator	&		3332980	0					
ANR	3333122	Identifier	temp2		3332980	1					
ANR	3333123	Argument	& temp		3332980	2					
ANR	3333124	UnaryOperationExpression	& temp		3332980	0					
ANR	3333125	UnaryOperator	&		3332980	0					
ANR	3333126	Identifier	temp		3332980	1					
ANR	3333127	ExpressionStatement	"q = ft_div64by32 ( temp . hi , temp . lo , b )"	646:6:17429:17468	3332980	6	True				
ANR	3333128	AssignmentExpression	"q = ft_div64by32 ( temp . hi , temp . lo , b )"		3332980	0		=			
ANR	3333129	Identifier	q		3332980	0					
ANR	3333130	CallExpression	"ft_div64by32 ( temp . hi , temp . lo , b )"		3332980	1					
ANR	3333131	Callee	ft_div64by32		3332980	0					
ANR	3333132	Identifier	ft_div64by32		3332980	0					
ANR	3333133	ArgumentList	temp . hi		3332980	1					
ANR	3333134	Argument	temp . hi		3332980	0					
ANR	3333135	MemberAccess	temp . hi		3332980	0					
ANR	3333136	Identifier	temp		3332980	0					
ANR	3333137	Identifier	hi		3332980	1					
ANR	3333138	Argument	temp . lo		3332980	1					
ANR	3333139	MemberAccess	temp . lo		3332980	0					
ANR	3333140	Identifier	temp		3332980	0					
ANR	3333141	Identifier	lo		3332980	1					
ANR	3333142	Argument	b		3332980	2					
ANR	3333143	Identifier	b		3332980	0					
ANR	3333144	ExpressionStatement	q_ = ( FT_Long ) q	649:4:17481:17496	3332980	8	True				
ANR	3333145	AssignmentExpression	q_ = ( FT_Long ) q		3332980	0		=			
ANR	3333146	Identifier	q_		3332980	0					
ANR	3333147	CastExpression	( FT_Long ) q		3332980	1					
ANR	3333148	CastTarget	FT_Long		3332980	0					
ANR	3333149	Identifier	q		3332980	1					
ANR	3333150	ReturnStatement	return s < 0 ? NEG_LONG ( q_ ) : q_ ;	651:4:17503:17537	3332980	9	True				
ANR	3333151	ConditionalExpression	s < 0 ? NEG_LONG ( q_ ) : q_		3332980	0					
ANR	3333152	Condition	s < 0		3332980	0					
ANR	3333153	RelationalExpression	s < 0		3332980	0		<			
ANR	3333154	Identifier	s		3332980	0					
ANR	3333155	PrimaryExpression	0		3332980	1					
ANR	3333156	CallExpression	NEG_LONG ( q_ )		3332980	1					
ANR	3333157	Callee	NEG_LONG		3332980	0					
ANR	3333158	Identifier	NEG_LONG		3332980	0					
ANR	3333159	ArgumentList	q_		3332980	1					
ANR	3333160	Argument	q_		3332980	0					
ANR	3333161	Identifier	q_		3332980	0					
ANR	3333162	Identifier	q_		3332980	2					
ANR	3333163	Identifier	FT_DivFix		3332980	1					
ANR	3333164	ParameterList	"FT_Long a_ , FT_Long b_"		3332980	2					
ANR	3333165	Parameter	FT_Long a_	608:13:16677:16687	3332980	0	True				
ANR	3333166	ParameterType	FT_Long		3332980	0					
ANR	3333167	Identifier	a_		3332980	1					
ANR	3333168	Parameter	FT_Long b_	609:13:16703:16713	3332980	1	True				
ANR	3333169	ParameterType	FT_Long		3332980	0					
ANR	3333170	Identifier	b_		3332980	1					
ANR	3333171	CFGEntryNode	ENTRY		3332980		True				
ANR	3333172	CFGExitNode	EXIT		3332980		True				
ANR	3333173	Symbol	a		3332980						
ANR	3333174	Symbol	b		3332980						
ANR	3333175	Symbol	temp		3332980						
ANR	3333176	Symbol	ft_div64by32		3332980						
ANR	3333177	Symbol	temp . hi		3332980						
ANR	3333178	Symbol	temp2		3332980						
ANR	3333179	Symbol	q_		3332980						
ANR	3333180	Symbol	q		3332980						
ANR	3333181	Symbol	s		3332980						
ANR	3333182	Symbol	temp . lo		3332980						
ANR	3333183	Symbol	NEG_LONG		3332980						
ANR	3333184	Symbol	temp2 . lo		3332980						
ANR	3333185	Symbol	b_		3332980						
ANR	3333186	Symbol	a_		3332980						
ANR	3333187	Symbol	temp2 . hi		3332980						
ANR	3333188	Symbol	& temp2		3332980						
ANR	3333189	Symbol	& temp		3332980						
ANR	3333190	Function	FT_Matrix_Multiply	661:2:17636:18235							
ANR	3333191	FunctionDef	"FT_Matrix_Multiply (const FT_Matrix * a , FT_Matrix * b)"		3333190	0					
ANR	3333192	CompoundStatement		663:2:17723:18235	3333190	0					
ANR	3333193	IdentifierDeclStatement	"FT_Fixed xx , xy , yx , yy ;"	664:4:17729:17753	3333190	0	True				
ANR	3333194	IdentifierDecl	xx		3333190	0					
ANR	3333195	IdentifierDeclType	FT_Fixed		3333190	0					
ANR	3333196	Identifier	xx		3333190	1					
ANR	3333197	IdentifierDecl	xy		3333190	1					
ANR	3333198	IdentifierDeclType	FT_Fixed		3333190	0					
ANR	3333199	Identifier	xy		3333190	1					
ANR	3333200	IdentifierDecl	yx		3333190	2					
ANR	3333201	IdentifierDeclType	FT_Fixed		3333190	0					
ANR	3333202	Identifier	yx		3333190	1					
ANR	3333203	IdentifierDecl	yy		3333190	3					
ANR	3333204	IdentifierDeclType	FT_Fixed		3333190	0					
ANR	3333205	Identifier	yy		3333190	1					
ANR	3333206	IfStatement	if ( ! a || ! b )		3333190	1					
ANR	3333207	Condition	! a || ! b	667:9:17766:17773	3333190	0	True				
ANR	3333208	OrExpression	! a || ! b		3333190	0		||			
ANR	3333209	UnaryOperationExpression	! a		3333190	0					
ANR	3333210	UnaryOperator	!		3333190	0					
ANR	3333211	Identifier	a		3333190	1					
ANR	3333212	UnaryOperationExpression	! b		3333190	1					
ANR	3333213	UnaryOperator	!		3333190	0					
ANR	3333214	Identifier	b		3333190	1					
ANR	3333215	ReturnStatement	return ;	668:6:17783:17789	3333190	1	True				
ANR	3333216	ExpressionStatement	"xx = ADD_LONG ( FT_MulFix ( a -> xx , b -> xx ) , FT_MulFix ( a -> xy , b -> yx ) )"	670:4:17796:17884	3333190	2	True				
ANR	3333217	AssignmentExpression	"xx = ADD_LONG ( FT_MulFix ( a -> xx , b -> xx ) , FT_MulFix ( a -> xy , b -> yx ) )"		3333190	0		=			
ANR	3333218	Identifier	xx		3333190	0					
ANR	3333219	CallExpression	"ADD_LONG ( FT_MulFix ( a -> xx , b -> xx ) , FT_MulFix ( a -> xy , b -> yx ) )"		3333190	1					
ANR	3333220	Callee	ADD_LONG		3333190	0					
ANR	3333221	Identifier	ADD_LONG		3333190	0					
ANR	3333222	ArgumentList	"FT_MulFix ( a -> xx , b -> xx )"		3333190	1					
ANR	3333223	Argument	"FT_MulFix ( a -> xx , b -> xx )"		3333190	0					
ANR	3333224	CallExpression	"FT_MulFix ( a -> xx , b -> xx )"		3333190	0					
ANR	3333225	Callee	FT_MulFix		3333190	0					
ANR	3333226	Identifier	FT_MulFix		3333190	0					
ANR	3333227	ArgumentList	a -> xx		3333190	1					
ANR	3333228	Argument	a -> xx		3333190	0					
ANR	3333229	PtrMemberAccess	a -> xx		3333190	0					
ANR	3333230	Identifier	a		3333190	0					
ANR	3333231	Identifier	xx		3333190	1					
ANR	3333232	Argument	b -> xx		3333190	1					
ANR	3333233	PtrMemberAccess	b -> xx		3333190	0					
ANR	3333234	Identifier	b		3333190	0					
ANR	3333235	Identifier	xx		3333190	1					
ANR	3333236	Argument	"FT_MulFix ( a -> xy , b -> yx )"		3333190	1					
ANR	3333237	CallExpression	"FT_MulFix ( a -> xy , b -> yx )"		3333190	0					
ANR	3333238	Callee	FT_MulFix		3333190	0					
ANR	3333239	Identifier	FT_MulFix		3333190	0					
ANR	3333240	ArgumentList	a -> xy		3333190	1					
ANR	3333241	Argument	a -> xy		3333190	0					
ANR	3333242	PtrMemberAccess	a -> xy		3333190	0					
ANR	3333243	Identifier	a		3333190	0					
ANR	3333244	Identifier	xy		3333190	1					
ANR	3333245	Argument	b -> yx		3333190	1					
ANR	3333246	PtrMemberAccess	b -> yx		3333190	0					
ANR	3333247	Identifier	b		3333190	0					
ANR	3333248	Identifier	yx		3333190	1					
ANR	3333249	ExpressionStatement	"xy = ADD_LONG ( FT_MulFix ( a -> xx , b -> xy ) , FT_MulFix ( a -> xy , b -> yy ) )"	672:4:17890:17978	3333190	3	True				
ANR	3333250	AssignmentExpression	"xy = ADD_LONG ( FT_MulFix ( a -> xx , b -> xy ) , FT_MulFix ( a -> xy , b -> yy ) )"		3333190	0		=			
ANR	3333251	Identifier	xy		3333190	0					
ANR	3333252	CallExpression	"ADD_LONG ( FT_MulFix ( a -> xx , b -> xy ) , FT_MulFix ( a -> xy , b -> yy ) )"		3333190	1					
ANR	3333253	Callee	ADD_LONG		3333190	0					
ANR	3333254	Identifier	ADD_LONG		3333190	0					
ANR	3333255	ArgumentList	"FT_MulFix ( a -> xx , b -> xy )"		3333190	1					
ANR	3333256	Argument	"FT_MulFix ( a -> xx , b -> xy )"		3333190	0					
ANR	3333257	CallExpression	"FT_MulFix ( a -> xx , b -> xy )"		3333190	0					
ANR	3333258	Callee	FT_MulFix		3333190	0					
ANR	3333259	Identifier	FT_MulFix		3333190	0					
ANR	3333260	ArgumentList	a -> xx		3333190	1					
ANR	3333261	Argument	a -> xx		3333190	0					
ANR	3333262	PtrMemberAccess	a -> xx		3333190	0					
ANR	3333263	Identifier	a		3333190	0					
ANR	3333264	Identifier	xx		3333190	1					
ANR	3333265	Argument	b -> xy		3333190	1					
ANR	3333266	PtrMemberAccess	b -> xy		3333190	0					
ANR	3333267	Identifier	b		3333190	0					
ANR	3333268	Identifier	xy		3333190	1					
ANR	3333269	Argument	"FT_MulFix ( a -> xy , b -> yy )"		3333190	1					
ANR	3333270	CallExpression	"FT_MulFix ( a -> xy , b -> yy )"		3333190	0					
ANR	3333271	Callee	FT_MulFix		3333190	0					
ANR	3333272	Identifier	FT_MulFix		3333190	0					
ANR	3333273	ArgumentList	a -> xy		3333190	1					
ANR	3333274	Argument	a -> xy		3333190	0					
ANR	3333275	PtrMemberAccess	a -> xy		3333190	0					
ANR	3333276	Identifier	a		3333190	0					
ANR	3333277	Identifier	xy		3333190	1					
ANR	3333278	Argument	b -> yy		3333190	1					
ANR	3333279	PtrMemberAccess	b -> yy		3333190	0					
ANR	3333280	Identifier	b		3333190	0					
ANR	3333281	Identifier	yy		3333190	1					
ANR	3333282	ExpressionStatement	"yx = ADD_LONG ( FT_MulFix ( a -> yx , b -> xx ) , FT_MulFix ( a -> yy , b -> yx ) )"	674:4:17984:18072	3333190	4	True				
ANR	3333283	AssignmentExpression	"yx = ADD_LONG ( FT_MulFix ( a -> yx , b -> xx ) , FT_MulFix ( a -> yy , b -> yx ) )"		3333190	0		=			
ANR	3333284	Identifier	yx		3333190	0					
ANR	3333285	CallExpression	"ADD_LONG ( FT_MulFix ( a -> yx , b -> xx ) , FT_MulFix ( a -> yy , b -> yx ) )"		3333190	1					
ANR	3333286	Callee	ADD_LONG		3333190	0					
ANR	3333287	Identifier	ADD_LONG		3333190	0					
ANR	3333288	ArgumentList	"FT_MulFix ( a -> yx , b -> xx )"		3333190	1					
ANR	3333289	Argument	"FT_MulFix ( a -> yx , b -> xx )"		3333190	0					
ANR	3333290	CallExpression	"FT_MulFix ( a -> yx , b -> xx )"		3333190	0					
ANR	3333291	Callee	FT_MulFix		3333190	0					
ANR	3333292	Identifier	FT_MulFix		3333190	0					
ANR	3333293	ArgumentList	a -> yx		3333190	1					
ANR	3333294	Argument	a -> yx		3333190	0					
ANR	3333295	PtrMemberAccess	a -> yx		3333190	0					
ANR	3333296	Identifier	a		3333190	0					
ANR	3333297	Identifier	yx		3333190	1					
ANR	3333298	Argument	b -> xx		3333190	1					
ANR	3333299	PtrMemberAccess	b -> xx		3333190	0					
ANR	3333300	Identifier	b		3333190	0					
ANR	3333301	Identifier	xx		3333190	1					
ANR	3333302	Argument	"FT_MulFix ( a -> yy , b -> yx )"		3333190	1					
ANR	3333303	CallExpression	"FT_MulFix ( a -> yy , b -> yx )"		3333190	0					
ANR	3333304	Callee	FT_MulFix		3333190	0					
ANR	3333305	Identifier	FT_MulFix		3333190	0					
ANR	3333306	ArgumentList	a -> yy		3333190	1					
ANR	3333307	Argument	a -> yy		3333190	0					
ANR	3333308	PtrMemberAccess	a -> yy		3333190	0					
ANR	3333309	Identifier	a		3333190	0					
ANR	3333310	Identifier	yy		3333190	1					
ANR	3333311	Argument	b -> yx		3333190	1					
ANR	3333312	PtrMemberAccess	b -> yx		3333190	0					
ANR	3333313	Identifier	b		3333190	0					
ANR	3333314	Identifier	yx		3333190	1					
ANR	3333315	ExpressionStatement	"yy = ADD_LONG ( FT_MulFix ( a -> yx , b -> xy ) , FT_MulFix ( a -> yy , b -> yy ) )"	676:4:18078:18166	3333190	5	True				
ANR	3333316	AssignmentExpression	"yy = ADD_LONG ( FT_MulFix ( a -> yx , b -> xy ) , FT_MulFix ( a -> yy , b -> yy ) )"		3333190	0		=			
ANR	3333317	Identifier	yy		3333190	0					
ANR	3333318	CallExpression	"ADD_LONG ( FT_MulFix ( a -> yx , b -> xy ) , FT_MulFix ( a -> yy , b -> yy ) )"		3333190	1					
ANR	3333319	Callee	ADD_LONG		3333190	0					
ANR	3333320	Identifier	ADD_LONG		3333190	0					
ANR	3333321	ArgumentList	"FT_MulFix ( a -> yx , b -> xy )"		3333190	1					
ANR	3333322	Argument	"FT_MulFix ( a -> yx , b -> xy )"		3333190	0					
ANR	3333323	CallExpression	"FT_MulFix ( a -> yx , b -> xy )"		3333190	0					
ANR	3333324	Callee	FT_MulFix		3333190	0					
ANR	3333325	Identifier	FT_MulFix		3333190	0					
ANR	3333326	ArgumentList	a -> yx		3333190	1					
ANR	3333327	Argument	a -> yx		3333190	0					
ANR	3333328	PtrMemberAccess	a -> yx		3333190	0					
ANR	3333329	Identifier	a		3333190	0					
ANR	3333330	Identifier	yx		3333190	1					
ANR	3333331	Argument	b -> xy		3333190	1					
ANR	3333332	PtrMemberAccess	b -> xy		3333190	0					
ANR	3333333	Identifier	b		3333190	0					
ANR	3333334	Identifier	xy		3333190	1					
ANR	3333335	Argument	"FT_MulFix ( a -> yy , b -> yy )"		3333190	1					
ANR	3333336	CallExpression	"FT_MulFix ( a -> yy , b -> yy )"		3333190	0					
ANR	3333337	Callee	FT_MulFix		3333190	0					
ANR	3333338	Identifier	FT_MulFix		3333190	0					
ANR	3333339	ArgumentList	a -> yy		3333190	1					
ANR	3333340	Argument	a -> yy		3333190	0					
ANR	3333341	PtrMemberAccess	a -> yy		3333190	0					
ANR	3333342	Identifier	a		3333190	0					
ANR	3333343	Identifier	yy		3333190	1					
ANR	3333344	Argument	b -> yy		3333190	1					
ANR	3333345	PtrMemberAccess	b -> yy		3333190	0					
ANR	3333346	Identifier	b		3333190	0					
ANR	3333347	Identifier	yy		3333190	1					
ANR	3333348	ExpressionStatement	b -> xx = xx	679:4:18173:18183	3333190	6	True				
ANR	3333349	AssignmentExpression	b -> xx = xx		3333190	0		=			
ANR	3333350	PtrMemberAccess	b -> xx		3333190	0					
ANR	3333351	Identifier	b		3333190	0					
ANR	3333352	Identifier	xx		3333190	1					
ANR	3333353	Identifier	xx		3333190	1					
ANR	3333354	ExpressionStatement	b -> xy = xy	680:4:18189:18199	3333190	7	True				
ANR	3333355	AssignmentExpression	b -> xy = xy		3333190	0		=			
ANR	3333356	PtrMemberAccess	b -> xy		3333190	0					
ANR	3333357	Identifier	b		3333190	0					
ANR	3333358	Identifier	xy		3333190	1					
ANR	3333359	Identifier	xy		3333190	1					
ANR	3333360	ExpressionStatement	b -> yx = yx	681:4:18205:18215	3333190	8	True				
ANR	3333361	AssignmentExpression	b -> yx = yx		3333190	0		=			
ANR	3333362	PtrMemberAccess	b -> yx		3333190	0					
ANR	3333363	Identifier	b		3333190	0					
ANR	3333364	Identifier	yx		3333190	1					
ANR	3333365	Identifier	yx		3333190	1					
ANR	3333366	ExpressionStatement	b -> yy = yy	682:4:18221:18231	3333190	9	True				
ANR	3333367	AssignmentExpression	b -> yy = yy		3333190	0		=			
ANR	3333368	PtrMemberAccess	b -> yy		3333190	0					
ANR	3333369	Identifier	b		3333190	0					
ANR	3333370	Identifier	yy		3333190	1					
ANR	3333371	Identifier	yy		3333190	1					
ANR	3333372	Identifier	FT_Matrix_Multiply		3333190	1					
ANR	3333373	ParameterList	"const FT_Matrix * a , FT_Matrix * b"		3333190	2					
ANR	3333374	Parameter	const FT_Matrix * a	661:22:17656:17674	3333190	0	True				
ANR	3333375	ParameterType	const FT_Matrix *		3333190	0					
ANR	3333376	Identifier	a		3333190	1					
ANR	3333377	Parameter	FT_Matrix * b	662:22:17699:17717	3333190	1	True				
ANR	3333378	ParameterType	FT_Matrix *		3333190	0					
ANR	3333379	Identifier	b		3333190	1					
ANR	3333380	CFGEntryNode	ENTRY		3333190		True				
ANR	3333381	CFGExitNode	EXIT		3333190		True				
ANR	3333382	Symbol	yy		3333190						
ANR	3333383	Symbol	xx		3333190						
ANR	3333384	Symbol	a		3333190						
ANR	3333385	Symbol	xy		3333190						
ANR	3333386	Symbol	a -> yx		3333190						
ANR	3333387	Symbol	b		3333190						
ANR	3333388	Symbol	b -> yx		3333190						
ANR	3333389	Symbol	b -> xx		3333190						
ANR	3333390	Symbol	b -> yy		3333190						
ANR	3333391	Symbol	ADD_LONG		3333190						
ANR	3333392	Symbol	b -> xy		3333190						
ANR	3333393	Symbol	* a		3333190						
ANR	3333394	Symbol	* b		3333190						
ANR	3333395	Symbol	FT_MulFix		3333190						
ANR	3333396	Symbol	a -> xx		3333190						
ANR	3333397	Symbol	a -> yy		3333190						
ANR	3333398	Symbol	yx		3333190						
ANR	3333399	Symbol	a -> xy		3333190						
ANR	3333400	Function	FT_Matrix_Invert	689:2:18308:18921							
ANR	3333401	FunctionDef	FT_Matrix_Invert (FT_Matrix * matrix)		3333400	0					
ANR	3333402	CompoundStatement		690:2:18349:18921	3333400	0					
ANR	3333403	IdentifierDeclStatement	"FT_Pos delta , xx , yy ;"	691:4:18355:18376	3333400	0	True				
ANR	3333404	IdentifierDecl	delta		3333400	0					
ANR	3333405	IdentifierDeclType	FT_Pos		3333400	0					
ANR	3333406	Identifier	delta		3333400	1					
ANR	3333407	IdentifierDecl	xx		3333400	1					
ANR	3333408	IdentifierDeclType	FT_Pos		3333400	0					
ANR	3333409	Identifier	xx		3333400	1					
ANR	3333410	IdentifierDecl	yy		3333400	2					
ANR	3333411	IdentifierDeclType	FT_Pos		3333400	0					
ANR	3333412	Identifier	yy		3333400	1					
ANR	3333413	IfStatement	if ( ! matrix )		3333400	1					
ANR	3333414	Condition	! matrix	694:9:18389:18395	3333400	0	True				
ANR	3333415	UnaryOperationExpression	! matrix		3333400	0					
ANR	3333416	UnaryOperator	!		3333400	0					
ANR	3333417	Identifier	matrix		3333400	1					
ANR	3333418	ReturnStatement	return FT_THROW ( Invalid_Argument ) ;	695:6:18405:18440	3333400	1	True				
ANR	3333419	CallExpression	FT_THROW ( Invalid_Argument )		3333400	0					
ANR	3333420	Callee	FT_THROW		3333400	0					
ANR	3333421	Identifier	FT_THROW		3333400	0					
ANR	3333422	ArgumentList	Invalid_Argument		3333400	1					
ANR	3333423	Argument	Invalid_Argument		3333400	0					
ANR	3333424	Identifier	Invalid_Argument		3333400	0					
ANR	3333425	ExpressionStatement	"delta = FT_MulFix ( matrix -> xx , matrix -> yy ) - FT_MulFix ( matrix -> xy , matrix -> yx )"	698:4:18478:18571	3333400	2	True				
ANR	3333426	AssignmentExpression	"delta = FT_MulFix ( matrix -> xx , matrix -> yy ) - FT_MulFix ( matrix -> xy , matrix -> yx )"		3333400	0		=			
ANR	3333427	Identifier	delta		3333400	0					
ANR	3333428	AdditiveExpression	"FT_MulFix ( matrix -> xx , matrix -> yy ) - FT_MulFix ( matrix -> xy , matrix -> yx )"		3333400	1		-			
ANR	3333429	CallExpression	"FT_MulFix ( matrix -> xx , matrix -> yy )"		3333400	0					
ANR	3333430	Callee	FT_MulFix		3333400	0					
ANR	3333431	Identifier	FT_MulFix		3333400	0					
ANR	3333432	ArgumentList	matrix -> xx		3333400	1					
ANR	3333433	Argument	matrix -> xx		3333400	0					
ANR	3333434	PtrMemberAccess	matrix -> xx		3333400	0					
ANR	3333435	Identifier	matrix		3333400	0					
ANR	3333436	Identifier	xx		3333400	1					
ANR	3333437	Argument	matrix -> yy		3333400	1					
ANR	3333438	PtrMemberAccess	matrix -> yy		3333400	0					
ANR	3333439	Identifier	matrix		3333400	0					
ANR	3333440	Identifier	yy		3333400	1					
ANR	3333441	CallExpression	"FT_MulFix ( matrix -> xy , matrix -> yx )"		3333400	1					
ANR	3333442	Callee	FT_MulFix		3333400	0					
ANR	3333443	Identifier	FT_MulFix		3333400	0					
ANR	3333444	ArgumentList	matrix -> xy		3333400	1					
ANR	3333445	Argument	matrix -> xy		3333400	0					
ANR	3333446	PtrMemberAccess	matrix -> xy		3333400	0					
ANR	3333447	Identifier	matrix		3333400	0					
ANR	3333448	Identifier	xy		3333400	1					
ANR	3333449	Argument	matrix -> yx		3333400	1					
ANR	3333450	PtrMemberAccess	matrix -> yx		3333400	0					
ANR	3333451	Identifier	matrix		3333400	0					
ANR	3333452	Identifier	yx		3333400	1					
ANR	3333453	IfStatement	if ( ! delta )		3333400	3					
ANR	3333454	Condition	! delta	701:9:18583:18588	3333400	0	True				
ANR	3333455	UnaryOperationExpression	! delta		3333400	0					
ANR	3333456	UnaryOperator	!		3333400	0					
ANR	3333457	Identifier	delta		3333400	1					
ANR	3333458	ReturnStatement	return FT_THROW ( Invalid_Argument ) ;	702:6:18598:18633	3333400	1	True				
ANR	3333459	CallExpression	FT_THROW ( Invalid_Argument )		3333400	0					
ANR	3333460	Callee	FT_THROW		3333400	0					
ANR	3333461	Identifier	FT_THROW		3333400	0					
ANR	3333462	ArgumentList	Invalid_Argument		3333400	1					
ANR	3333463	Argument	Invalid_Argument		3333400	0					
ANR	3333464	Identifier	Invalid_Argument		3333400	0					
ANR	3333465	ExpressionStatement	"matrix -> xy = - FT_DivFix ( matrix -> xy , delta )"	704:4:18672:18717	3333400	4	True				
ANR	3333466	AssignmentExpression	"matrix -> xy = - FT_DivFix ( matrix -> xy , delta )"		3333400	0		=			
ANR	3333467	PtrMemberAccess	matrix -> xy		3333400	0					
ANR	3333468	Identifier	matrix		3333400	0					
ANR	3333469	Identifier	xy		3333400	1					
ANR	3333470	UnaryOperationExpression	"- FT_DivFix ( matrix -> xy , delta )"		3333400	1					
ANR	3333471	UnaryOperator	-		3333400	0					
ANR	3333472	CallExpression	"FT_DivFix ( matrix -> xy , delta )"		3333400	1					
ANR	3333473	Callee	FT_DivFix		3333400	0					
ANR	3333474	Identifier	FT_DivFix		3333400	0					
ANR	3333475	ArgumentList	matrix -> xy		3333400	1					
ANR	3333476	Argument	matrix -> xy		3333400	0					
ANR	3333477	PtrMemberAccess	matrix -> xy		3333400	0					
ANR	3333478	Identifier	matrix		3333400	0					
ANR	3333479	Identifier	xy		3333400	1					
ANR	3333480	Argument	delta		3333400	1					
ANR	3333481	Identifier	delta		3333400	0					
ANR	3333482	ExpressionStatement	"matrix -> yx = - FT_DivFix ( matrix -> yx , delta )"	705:4:18723:18768	3333400	5	True				
ANR	3333483	AssignmentExpression	"matrix -> yx = - FT_DivFix ( matrix -> yx , delta )"		3333400	0		=			
ANR	3333484	PtrMemberAccess	matrix -> yx		3333400	0					
ANR	3333485	Identifier	matrix		3333400	0					
ANR	3333486	Identifier	yx		3333400	1					
ANR	3333487	UnaryOperationExpression	"- FT_DivFix ( matrix -> yx , delta )"		3333400	1					
ANR	3333488	UnaryOperator	-		3333400	0					
ANR	3333489	CallExpression	"FT_DivFix ( matrix -> yx , delta )"		3333400	1					
ANR	3333490	Callee	FT_DivFix		3333400	0					
ANR	3333491	Identifier	FT_DivFix		3333400	0					
ANR	3333492	ArgumentList	matrix -> yx		3333400	1					
ANR	3333493	Argument	matrix -> yx		3333400	0					
ANR	3333494	PtrMemberAccess	matrix -> yx		3333400	0					
ANR	3333495	Identifier	matrix		3333400	0					
ANR	3333496	Identifier	yx		3333400	1					
ANR	3333497	Argument	delta		3333400	1					
ANR	3333498	Identifier	delta		3333400	0					
ANR	3333499	ExpressionStatement	xx = matrix -> xx	707:4:18775:18790	3333400	6	True				
ANR	3333500	AssignmentExpression	xx = matrix -> xx		3333400	0		=			
ANR	3333501	Identifier	xx		3333400	0					
ANR	3333502	PtrMemberAccess	matrix -> xx		3333400	1					
ANR	3333503	Identifier	matrix		3333400	0					
ANR	3333504	Identifier	xx		3333400	1					
ANR	3333505	ExpressionStatement	yy = matrix -> yy	708:4:18796:18811	3333400	7	True				
ANR	3333506	AssignmentExpression	yy = matrix -> yy		3333400	0		=			
ANR	3333507	Identifier	yy		3333400	0					
ANR	3333508	PtrMemberAccess	matrix -> yy		3333400	1					
ANR	3333509	Identifier	matrix		3333400	0					
ANR	3333510	Identifier	yy		3333400	1					
ANR	3333511	ExpressionStatement	"matrix -> xx = FT_DivFix ( yy , delta )"	710:4:18818:18853	3333400	8	True				
ANR	3333512	AssignmentExpression	"matrix -> xx = FT_DivFix ( yy , delta )"		3333400	0		=			
ANR	3333513	PtrMemberAccess	matrix -> xx		3333400	0					
ANR	3333514	Identifier	matrix		3333400	0					
ANR	3333515	Identifier	xx		3333400	1					
ANR	3333516	CallExpression	"FT_DivFix ( yy , delta )"		3333400	1					
ANR	3333517	Callee	FT_DivFix		3333400	0					
ANR	3333518	Identifier	FT_DivFix		3333400	0					
ANR	3333519	ArgumentList	yy		3333400	1					
ANR	3333520	Argument	yy		3333400	0					
ANR	3333521	Identifier	yy		3333400	0					
ANR	3333522	Argument	delta		3333400	1					
ANR	3333523	Identifier	delta		3333400	0					
ANR	3333524	ExpressionStatement	"matrix -> yy = FT_DivFix ( xx , delta )"	711:4:18859:18894	3333400	9	True				
ANR	3333525	AssignmentExpression	"matrix -> yy = FT_DivFix ( xx , delta )"		3333400	0		=			
ANR	3333526	PtrMemberAccess	matrix -> yy		3333400	0					
ANR	3333527	Identifier	matrix		3333400	0					
ANR	3333528	Identifier	yy		3333400	1					
ANR	3333529	CallExpression	"FT_DivFix ( xx , delta )"		3333400	1					
ANR	3333530	Callee	FT_DivFix		3333400	0					
ANR	3333531	Identifier	FT_DivFix		3333400	0					
ANR	3333532	ArgumentList	xx		3333400	1					
ANR	3333533	Argument	xx		3333400	0					
ANR	3333534	Identifier	xx		3333400	0					
ANR	3333535	Argument	delta		3333400	1					
ANR	3333536	Identifier	delta		3333400	0					
ANR	3333537	ReturnStatement	return FT_Err_Ok ;	713:4:18901:18917	3333400	10	True				
ANR	3333538	Identifier	FT_Err_Ok		3333400	0					
ANR	3333539	Identifier	FT_Matrix_Invert		3333400	1					
ANR	3333540	ParameterList	FT_Matrix * matrix		3333400	2					
ANR	3333541	Parameter	FT_Matrix * matrix	689:20:18326:18343	3333400	0	True				
ANR	3333542	ParameterType	FT_Matrix *		3333400	0					
ANR	3333543	Identifier	matrix		3333400	1					
ANR	3333544	CFGEntryNode	ENTRY		3333400		True				
ANR	3333545	CFGExitNode	EXIT		3333400		True				
ANR	3333546	Symbol	xx		3333400						
ANR	3333547	Symbol	yy		3333400						
ANR	3333548	Symbol	FT_Err_Ok		3333400						
ANR	3333549	Symbol	FT_DivFix		3333400						
ANR	3333550	Symbol	delta		3333400						
ANR	3333551	Symbol	Invalid_Argument		3333400						
ANR	3333552	Symbol	matrix -> yx		3333400						
ANR	3333553	Symbol	matrix		3333400						
ANR	3333554	Symbol	FT_THROW		3333400						
ANR	3333555	Symbol	* matrix		3333400						
ANR	3333556	Symbol	FT_MulFix		3333400						
ANR	3333557	Symbol	matrix -> xx		3333400						
ANR	3333558	Symbol	matrix -> yy		3333400						
ANR	3333559	Symbol	matrix -> xy		3333400						
ANR	3333560	Function	FT_Matrix_Multiply_Scaled	720:2:18987:19737							
ANR	3333561	FunctionDef	"FT_Matrix_Multiply_Scaled (const FT_Matrix * a , FT_Matrix * b , FT_Long scaling)"		3333560	0					
ANR	3333562	CompoundStatement		723:2:19144:19737	3333560	0					
ANR	3333563	IdentifierDeclStatement	"FT_Fixed xx , xy , yx , yy ;"	724:4:19150:19174	3333560	0	True				
ANR	3333564	IdentifierDecl	xx		3333560	0					
ANR	3333565	IdentifierDeclType	FT_Fixed		3333560	0					
ANR	3333566	Identifier	xx		3333560	1					
ANR	3333567	IdentifierDecl	xy		3333560	1					
ANR	3333568	IdentifierDeclType	FT_Fixed		3333560	0					
ANR	3333569	Identifier	xy		3333560	1					
ANR	3333570	IdentifierDecl	yx		3333560	2					
ANR	3333571	IdentifierDeclType	FT_Fixed		3333560	0					
ANR	3333572	Identifier	yx		3333560	1					
ANR	3333573	IdentifierDecl	yy		3333560	3					
ANR	3333574	IdentifierDeclType	FT_Fixed		3333560	0					
ANR	3333575	Identifier	yy		3333560	1					
ANR	3333576	IdentifierDeclStatement	FT_Long val = 0x10000L * scaling ;	726:4:19181:19215	3333560	1	True				
ANR	3333577	IdentifierDecl	val = 0x10000L * scaling		3333560	0					
ANR	3333578	IdentifierDeclType	FT_Long		3333560	0					
ANR	3333579	Identifier	val		3333560	1					
ANR	3333580	AssignmentExpression	val = 0x10000L * scaling		3333560	2		=			
ANR	3333581	Identifier	val		3333560	0					
ANR	3333582	MultiplicativeExpression	0x10000L * scaling		3333560	1		*			
ANR	3333583	PrimaryExpression	0x10000L		3333560	0					
ANR	3333584	Identifier	scaling		3333560	1					
ANR	3333585	IfStatement	if ( ! a || ! b )		3333560	2					
ANR	3333586	Condition	! a || ! b	729:9:19228:19235	3333560	0	True				
ANR	3333587	OrExpression	! a || ! b		3333560	0		||			
ANR	3333588	UnaryOperationExpression	! a		3333560	0					
ANR	3333589	UnaryOperator	!		3333560	0					
ANR	3333590	Identifier	a		3333560	1					
ANR	3333591	UnaryOperationExpression	! b		3333560	1					
ANR	3333592	UnaryOperator	!		3333560	0					
ANR	3333593	Identifier	b		3333560	1					
ANR	3333594	ReturnStatement	return ;	730:6:19245:19251	3333560	1	True				
ANR	3333595	ExpressionStatement	"xx = ADD_LONG ( FT_MulDiv ( a -> xx , b -> xx , val ) , FT_MulDiv ( a -> xy , b -> yx , val ) )"	732:4:19258:19356	3333560	3	True				
ANR	3333596	AssignmentExpression	"xx = ADD_LONG ( FT_MulDiv ( a -> xx , b -> xx , val ) , FT_MulDiv ( a -> xy , b -> yx , val ) )"		3333560	0		=			
ANR	3333597	Identifier	xx		3333560	0					
ANR	3333598	CallExpression	"ADD_LONG ( FT_MulDiv ( a -> xx , b -> xx , val ) , FT_MulDiv ( a -> xy , b -> yx , val ) )"		3333560	1					
ANR	3333599	Callee	ADD_LONG		3333560	0					
ANR	3333600	Identifier	ADD_LONG		3333560	0					
ANR	3333601	ArgumentList	"FT_MulDiv ( a -> xx , b -> xx , val )"		3333560	1					
ANR	3333602	Argument	"FT_MulDiv ( a -> xx , b -> xx , val )"		3333560	0					
ANR	3333603	CallExpression	"FT_MulDiv ( a -> xx , b -> xx , val )"		3333560	0					
ANR	3333604	Callee	FT_MulDiv		3333560	0					
ANR	3333605	Identifier	FT_MulDiv		3333560	0					
ANR	3333606	ArgumentList	a -> xx		3333560	1					
ANR	3333607	Argument	a -> xx		3333560	0					
ANR	3333608	PtrMemberAccess	a -> xx		3333560	0					
ANR	3333609	Identifier	a		3333560	0					
ANR	3333610	Identifier	xx		3333560	1					
ANR	3333611	Argument	b -> xx		3333560	1					
ANR	3333612	PtrMemberAccess	b -> xx		3333560	0					
ANR	3333613	Identifier	b		3333560	0					
ANR	3333614	Identifier	xx		3333560	1					
ANR	3333615	Argument	val		3333560	2					
ANR	3333616	Identifier	val		3333560	0					
ANR	3333617	Argument	"FT_MulDiv ( a -> xy , b -> yx , val )"		3333560	1					
ANR	3333618	CallExpression	"FT_MulDiv ( a -> xy , b -> yx , val )"		3333560	0					
ANR	3333619	Callee	FT_MulDiv		3333560	0					
ANR	3333620	Identifier	FT_MulDiv		3333560	0					
ANR	3333621	ArgumentList	a -> xy		3333560	1					
ANR	3333622	Argument	a -> xy		3333560	0					
ANR	3333623	PtrMemberAccess	a -> xy		3333560	0					
ANR	3333624	Identifier	a		3333560	0					
ANR	3333625	Identifier	xy		3333560	1					
ANR	3333626	Argument	b -> yx		3333560	1					
ANR	3333627	PtrMemberAccess	b -> yx		3333560	0					
ANR	3333628	Identifier	b		3333560	0					
ANR	3333629	Identifier	yx		3333560	1					
ANR	3333630	Argument	val		3333560	2					
ANR	3333631	Identifier	val		3333560	0					
ANR	3333632	ExpressionStatement	"xy = ADD_LONG ( FT_MulDiv ( a -> xx , b -> xy , val ) , FT_MulDiv ( a -> xy , b -> yy , val ) )"	734:4:19362:19460	3333560	4	True				
ANR	3333633	AssignmentExpression	"xy = ADD_LONG ( FT_MulDiv ( a -> xx , b -> xy , val ) , FT_MulDiv ( a -> xy , b -> yy , val ) )"		3333560	0		=			
ANR	3333634	Identifier	xy		3333560	0					
ANR	3333635	CallExpression	"ADD_LONG ( FT_MulDiv ( a -> xx , b -> xy , val ) , FT_MulDiv ( a -> xy , b -> yy , val ) )"		3333560	1					
ANR	3333636	Callee	ADD_LONG		3333560	0					
ANR	3333637	Identifier	ADD_LONG		3333560	0					
ANR	3333638	ArgumentList	"FT_MulDiv ( a -> xx , b -> xy , val )"		3333560	1					
ANR	3333639	Argument	"FT_MulDiv ( a -> xx , b -> xy , val )"		3333560	0					
ANR	3333640	CallExpression	"FT_MulDiv ( a -> xx , b -> xy , val )"		3333560	0					
ANR	3333641	Callee	FT_MulDiv		3333560	0					
ANR	3333642	Identifier	FT_MulDiv		3333560	0					
ANR	3333643	ArgumentList	a -> xx		3333560	1					
ANR	3333644	Argument	a -> xx		3333560	0					
ANR	3333645	PtrMemberAccess	a -> xx		3333560	0					
ANR	3333646	Identifier	a		3333560	0					
ANR	3333647	Identifier	xx		3333560	1					
ANR	3333648	Argument	b -> xy		3333560	1					
ANR	3333649	PtrMemberAccess	b -> xy		3333560	0					
ANR	3333650	Identifier	b		3333560	0					
ANR	3333651	Identifier	xy		3333560	1					
ANR	3333652	Argument	val		3333560	2					
ANR	3333653	Identifier	val		3333560	0					
ANR	3333654	Argument	"FT_MulDiv ( a -> xy , b -> yy , val )"		3333560	1					
ANR	3333655	CallExpression	"FT_MulDiv ( a -> xy , b -> yy , val )"		3333560	0					
ANR	3333656	Callee	FT_MulDiv		3333560	0					
ANR	3333657	Identifier	FT_MulDiv		3333560	0					
ANR	3333658	ArgumentList	a -> xy		3333560	1					
ANR	3333659	Argument	a -> xy		3333560	0					
ANR	3333660	PtrMemberAccess	a -> xy		3333560	0					
ANR	3333661	Identifier	a		3333560	0					
ANR	3333662	Identifier	xy		3333560	1					
ANR	3333663	Argument	b -> yy		3333560	1					
ANR	3333664	PtrMemberAccess	b -> yy		3333560	0					
ANR	3333665	Identifier	b		3333560	0					
ANR	3333666	Identifier	yy		3333560	1					
ANR	3333667	Argument	val		3333560	2					
ANR	3333668	Identifier	val		3333560	0					
ANR	3333669	ExpressionStatement	"yx = ADD_LONG ( FT_MulDiv ( a -> yx , b -> xx , val ) , FT_MulDiv ( a -> yy , b -> yx , val ) )"	736:4:19466:19564	3333560	5	True				
ANR	3333670	AssignmentExpression	"yx = ADD_LONG ( FT_MulDiv ( a -> yx , b -> xx , val ) , FT_MulDiv ( a -> yy , b -> yx , val ) )"		3333560	0		=			
ANR	3333671	Identifier	yx		3333560	0					
ANR	3333672	CallExpression	"ADD_LONG ( FT_MulDiv ( a -> yx , b -> xx , val ) , FT_MulDiv ( a -> yy , b -> yx , val ) )"		3333560	1					
ANR	3333673	Callee	ADD_LONG		3333560	0					
ANR	3333674	Identifier	ADD_LONG		3333560	0					
ANR	3333675	ArgumentList	"FT_MulDiv ( a -> yx , b -> xx , val )"		3333560	1					
ANR	3333676	Argument	"FT_MulDiv ( a -> yx , b -> xx , val )"		3333560	0					
ANR	3333677	CallExpression	"FT_MulDiv ( a -> yx , b -> xx , val )"		3333560	0					
ANR	3333678	Callee	FT_MulDiv		3333560	0					
ANR	3333679	Identifier	FT_MulDiv		3333560	0					
ANR	3333680	ArgumentList	a -> yx		3333560	1					
ANR	3333681	Argument	a -> yx		3333560	0					
ANR	3333682	PtrMemberAccess	a -> yx		3333560	0					
ANR	3333683	Identifier	a		3333560	0					
ANR	3333684	Identifier	yx		3333560	1					
ANR	3333685	Argument	b -> xx		3333560	1					
ANR	3333686	PtrMemberAccess	b -> xx		3333560	0					
ANR	3333687	Identifier	b		3333560	0					
ANR	3333688	Identifier	xx		3333560	1					
ANR	3333689	Argument	val		3333560	2					
ANR	3333690	Identifier	val		3333560	0					
ANR	3333691	Argument	"FT_MulDiv ( a -> yy , b -> yx , val )"		3333560	1					
ANR	3333692	CallExpression	"FT_MulDiv ( a -> yy , b -> yx , val )"		3333560	0					
ANR	3333693	Callee	FT_MulDiv		3333560	0					
ANR	3333694	Identifier	FT_MulDiv		3333560	0					
ANR	3333695	ArgumentList	a -> yy		3333560	1					
ANR	3333696	Argument	a -> yy		3333560	0					
ANR	3333697	PtrMemberAccess	a -> yy		3333560	0					
ANR	3333698	Identifier	a		3333560	0					
ANR	3333699	Identifier	yy		3333560	1					
ANR	3333700	Argument	b -> yx		3333560	1					
ANR	3333701	PtrMemberAccess	b -> yx		3333560	0					
ANR	3333702	Identifier	b		3333560	0					
ANR	3333703	Identifier	yx		3333560	1					
ANR	3333704	Argument	val		3333560	2					
ANR	3333705	Identifier	val		3333560	0					
ANR	3333706	ExpressionStatement	"yy = ADD_LONG ( FT_MulDiv ( a -> yx , b -> xy , val ) , FT_MulDiv ( a -> yy , b -> yy , val ) )"	738:4:19570:19668	3333560	6	True				
ANR	3333707	AssignmentExpression	"yy = ADD_LONG ( FT_MulDiv ( a -> yx , b -> xy , val ) , FT_MulDiv ( a -> yy , b -> yy , val ) )"		3333560	0		=			
ANR	3333708	Identifier	yy		3333560	0					
ANR	3333709	CallExpression	"ADD_LONG ( FT_MulDiv ( a -> yx , b -> xy , val ) , FT_MulDiv ( a -> yy , b -> yy , val ) )"		3333560	1					
ANR	3333710	Callee	ADD_LONG		3333560	0					
ANR	3333711	Identifier	ADD_LONG		3333560	0					
ANR	3333712	ArgumentList	"FT_MulDiv ( a -> yx , b -> xy , val )"		3333560	1					
ANR	3333713	Argument	"FT_MulDiv ( a -> yx , b -> xy , val )"		3333560	0					
ANR	3333714	CallExpression	"FT_MulDiv ( a -> yx , b -> xy , val )"		3333560	0					
ANR	3333715	Callee	FT_MulDiv		3333560	0					
ANR	3333716	Identifier	FT_MulDiv		3333560	0					
ANR	3333717	ArgumentList	a -> yx		3333560	1					
ANR	3333718	Argument	a -> yx		3333560	0					
ANR	3333719	PtrMemberAccess	a -> yx		3333560	0					
ANR	3333720	Identifier	a		3333560	0					
ANR	3333721	Identifier	yx		3333560	1					
ANR	3333722	Argument	b -> xy		3333560	1					
ANR	3333723	PtrMemberAccess	b -> xy		3333560	0					
ANR	3333724	Identifier	b		3333560	0					
ANR	3333725	Identifier	xy		3333560	1					
ANR	3333726	Argument	val		3333560	2					
ANR	3333727	Identifier	val		3333560	0					
ANR	3333728	Argument	"FT_MulDiv ( a -> yy , b -> yy , val )"		3333560	1					
ANR	3333729	CallExpression	"FT_MulDiv ( a -> yy , b -> yy , val )"		3333560	0					
ANR	3333730	Callee	FT_MulDiv		3333560	0					
ANR	3333731	Identifier	FT_MulDiv		3333560	0					
ANR	3333732	ArgumentList	a -> yy		3333560	1					
ANR	3333733	Argument	a -> yy		3333560	0					
ANR	3333734	PtrMemberAccess	a -> yy		3333560	0					
ANR	3333735	Identifier	a		3333560	0					
ANR	3333736	Identifier	yy		3333560	1					
ANR	3333737	Argument	b -> yy		3333560	1					
ANR	3333738	PtrMemberAccess	b -> yy		3333560	0					
ANR	3333739	Identifier	b		3333560	0					
ANR	3333740	Identifier	yy		3333560	1					
ANR	3333741	Argument	val		3333560	2					
ANR	3333742	Identifier	val		3333560	0					
ANR	3333743	ExpressionStatement	b -> xx = xx	741:4:19675:19685	3333560	7	True				
ANR	3333744	AssignmentExpression	b -> xx = xx		3333560	0		=			
ANR	3333745	PtrMemberAccess	b -> xx		3333560	0					
ANR	3333746	Identifier	b		3333560	0					
ANR	3333747	Identifier	xx		3333560	1					
ANR	3333748	Identifier	xx		3333560	1					
ANR	3333749	ExpressionStatement	b -> xy = xy	742:4:19691:19701	3333560	8	True				
ANR	3333750	AssignmentExpression	b -> xy = xy		3333560	0		=			
ANR	3333751	PtrMemberAccess	b -> xy		3333560	0					
ANR	3333752	Identifier	b		3333560	0					
ANR	3333753	Identifier	xy		3333560	1					
ANR	3333754	Identifier	xy		3333560	1					
ANR	3333755	ExpressionStatement	b -> yx = yx	743:4:19707:19717	3333560	9	True				
ANR	3333756	AssignmentExpression	b -> yx = yx		3333560	0		=			
ANR	3333757	PtrMemberAccess	b -> yx		3333560	0					
ANR	3333758	Identifier	b		3333560	0					
ANR	3333759	Identifier	yx		3333560	1					
ANR	3333760	Identifier	yx		3333560	1					
ANR	3333761	ExpressionStatement	b -> yy = yy	744:4:19723:19733	3333560	10	True				
ANR	3333762	AssignmentExpression	b -> yy = yy		3333560	0		=			
ANR	3333763	PtrMemberAccess	b -> yy		3333560	0					
ANR	3333764	Identifier	b		3333560	0					
ANR	3333765	Identifier	yy		3333560	1					
ANR	3333766	Identifier	yy		3333560	1					
ANR	3333767	Identifier	FT_Matrix_Multiply_Scaled		3333560	1					
ANR	3333768	ParameterList	"const FT_Matrix * a , FT_Matrix * b , FT_Long scaling"		3333560	2					
ANR	3333769	Parameter	const FT_Matrix * a	720:29:19014:19032	3333560	0	True				
ANR	3333770	ParameterType	const FT_Matrix *		3333560	0					
ANR	3333771	Identifier	a		3333560	1					
ANR	3333772	Parameter	FT_Matrix * b	721:29:19064:19082	3333560	1	True				
ANR	3333773	ParameterType	FT_Matrix *		3333560	0					
ANR	3333774	Identifier	b		3333560	1					
ANR	3333775	Parameter	FT_Long scaling	722:29:19114:19138	3333560	2	True				
ANR	3333776	ParameterType	FT_Long		3333560	0					
ANR	3333777	Identifier	scaling		3333560	1					
ANR	3333778	CFGEntryNode	ENTRY		3333560		True				
ANR	3333779	CFGExitNode	EXIT		3333560		True				
ANR	3333780	Symbol	yy		3333560						
ANR	3333781	Symbol	xx		3333560						
ANR	3333782	Symbol	val		3333560						
ANR	3333783	Symbol	a		3333560						
ANR	3333784	Symbol	xy		3333560						
ANR	3333785	Symbol	a -> yx		3333560						
ANR	3333786	Symbol	b		3333560						
ANR	3333787	Symbol	scaling		3333560						
ANR	3333788	Symbol	b -> yx		3333560						
ANR	3333789	Symbol	b -> xx		3333560						
ANR	3333790	Symbol	b -> yy		3333560						
ANR	3333791	Symbol	ADD_LONG		3333560						
ANR	3333792	Symbol	b -> xy		3333560						
ANR	3333793	Symbol	* a		3333560						
ANR	3333794	Symbol	* b		3333560						
ANR	3333795	Symbol	FT_MulDiv		3333560						
ANR	3333796	Symbol	a -> xx		3333560						
ANR	3333797	Symbol	a -> yy		3333560						
ANR	3333798	Symbol	yx		3333560						
ANR	3333799	Symbol	a -> xy		3333560						
ANR	3333800	Function	FT_Vector_Transform_Scaled	751:2:19803:20370							
ANR	3333801	FunctionDef	"FT_Vector_Transform_Scaled (FT_Vector * vector , const FT_Matrix * matrix , FT_Long scaling)"		3333800	0					
ANR	3333802	CompoundStatement		754:2:19973:20370	3333800	0					
ANR	3333803	IdentifierDeclStatement	"FT_Pos xz , yz ;"	755:4:19979:19994	3333800	0	True				
ANR	3333804	IdentifierDecl	xz		3333800	0					
ANR	3333805	IdentifierDeclType	FT_Pos		3333800	0					
ANR	3333806	Identifier	xz		3333800	1					
ANR	3333807	IdentifierDecl	yz		3333800	1					
ANR	3333808	IdentifierDeclType	FT_Pos		3333800	0					
ANR	3333809	Identifier	yz		3333800	1					
ANR	3333810	IdentifierDeclStatement	FT_Long val = 0x10000L * scaling ;	757:4:20001:20034	3333800	1	True				
ANR	3333811	IdentifierDecl	val = 0x10000L * scaling		3333800	0					
ANR	3333812	IdentifierDeclType	FT_Long		3333800	0					
ANR	3333813	Identifier	val		3333800	1					
ANR	3333814	AssignmentExpression	val = 0x10000L * scaling		3333800	2		=			
ANR	3333815	Identifier	val		3333800	0					
ANR	3333816	MultiplicativeExpression	0x10000L * scaling		3333800	1		*			
ANR	3333817	PrimaryExpression	0x10000L		3333800	0					
ANR	3333818	Identifier	scaling		3333800	1					
ANR	3333819	IfStatement	if ( ! vector || ! matrix )		3333800	2					
ANR	3333820	Condition	! vector || ! matrix	760:9:20047:20064	3333800	0	True				
ANR	3333821	OrExpression	! vector || ! matrix		3333800	0		||			
ANR	3333822	UnaryOperationExpression	! vector		3333800	0					
ANR	3333823	UnaryOperator	!		3333800	0					
ANR	3333824	Identifier	vector		3333800	1					
ANR	3333825	UnaryOperationExpression	! matrix		3333800	1					
ANR	3333826	UnaryOperator	!		3333800	0					
ANR	3333827	Identifier	matrix		3333800	1					
ANR	3333828	ReturnStatement	return ;	761:6:20074:20080	3333800	1	True				
ANR	3333829	ExpressionStatement	"xz = ADD_LONG ( FT_MulDiv ( vector -> x , matrix -> xx , val ) , FT_MulDiv ( vector -> y , matrix -> xy , val ) )"	763:4:20087:20203	3333800	3	True				
ANR	3333830	AssignmentExpression	"xz = ADD_LONG ( FT_MulDiv ( vector -> x , matrix -> xx , val ) , FT_MulDiv ( vector -> y , matrix -> xy , val ) )"		3333800	0		=			
ANR	3333831	Identifier	xz		3333800	0					
ANR	3333832	CallExpression	"ADD_LONG ( FT_MulDiv ( vector -> x , matrix -> xx , val ) , FT_MulDiv ( vector -> y , matrix -> xy , val ) )"		3333800	1					
ANR	3333833	Callee	ADD_LONG		3333800	0					
ANR	3333834	Identifier	ADD_LONG		3333800	0					
ANR	3333835	ArgumentList	"FT_MulDiv ( vector -> x , matrix -> xx , val )"		3333800	1					
ANR	3333836	Argument	"FT_MulDiv ( vector -> x , matrix -> xx , val )"		3333800	0					
ANR	3333837	CallExpression	"FT_MulDiv ( vector -> x , matrix -> xx , val )"		3333800	0					
ANR	3333838	Callee	FT_MulDiv		3333800	0					
ANR	3333839	Identifier	FT_MulDiv		3333800	0					
ANR	3333840	ArgumentList	vector -> x		3333800	1					
ANR	3333841	Argument	vector -> x		3333800	0					
ANR	3333842	PtrMemberAccess	vector -> x		3333800	0					
ANR	3333843	Identifier	vector		3333800	0					
ANR	3333844	Identifier	x		3333800	1					
ANR	3333845	Argument	matrix -> xx		3333800	1					
ANR	3333846	PtrMemberAccess	matrix -> xx		3333800	0					
ANR	3333847	Identifier	matrix		3333800	0					
ANR	3333848	Identifier	xx		3333800	1					
ANR	3333849	Argument	val		3333800	2					
ANR	3333850	Identifier	val		3333800	0					
ANR	3333851	Argument	"FT_MulDiv ( vector -> y , matrix -> xy , val )"		3333800	1					
ANR	3333852	CallExpression	"FT_MulDiv ( vector -> y , matrix -> xy , val )"		3333800	0					
ANR	3333853	Callee	FT_MulDiv		3333800	0					
ANR	3333854	Identifier	FT_MulDiv		3333800	0					
ANR	3333855	ArgumentList	vector -> y		3333800	1					
ANR	3333856	Argument	vector -> y		3333800	0					
ANR	3333857	PtrMemberAccess	vector -> y		3333800	0					
ANR	3333858	Identifier	vector		3333800	0					
ANR	3333859	Identifier	y		3333800	1					
ANR	3333860	Argument	matrix -> xy		3333800	1					
ANR	3333861	PtrMemberAccess	matrix -> xy		3333800	0					
ANR	3333862	Identifier	matrix		3333800	0					
ANR	3333863	Identifier	xy		3333800	1					
ANR	3333864	Argument	val		3333800	2					
ANR	3333865	Identifier	val		3333800	0					
ANR	3333866	ExpressionStatement	"yz = ADD_LONG ( FT_MulDiv ( vector -> x , matrix -> yx , val ) , FT_MulDiv ( vector -> y , matrix -> yy , val ) )"	765:4:20209:20325	3333800	4	True				
ANR	3333867	AssignmentExpression	"yz = ADD_LONG ( FT_MulDiv ( vector -> x , matrix -> yx , val ) , FT_MulDiv ( vector -> y , matrix -> yy , val ) )"		3333800	0		=			
ANR	3333868	Identifier	yz		3333800	0					
ANR	3333869	CallExpression	"ADD_LONG ( FT_MulDiv ( vector -> x , matrix -> yx , val ) , FT_MulDiv ( vector -> y , matrix -> yy , val ) )"		3333800	1					
ANR	3333870	Callee	ADD_LONG		3333800	0					
ANR	3333871	Identifier	ADD_LONG		3333800	0					
ANR	3333872	ArgumentList	"FT_MulDiv ( vector -> x , matrix -> yx , val )"		3333800	1					
ANR	3333873	Argument	"FT_MulDiv ( vector -> x , matrix -> yx , val )"		3333800	0					
ANR	3333874	CallExpression	"FT_MulDiv ( vector -> x , matrix -> yx , val )"		3333800	0					
ANR	3333875	Callee	FT_MulDiv		3333800	0					
ANR	3333876	Identifier	FT_MulDiv		3333800	0					
ANR	3333877	ArgumentList	vector -> x		3333800	1					
ANR	3333878	Argument	vector -> x		3333800	0					
ANR	3333879	PtrMemberAccess	vector -> x		3333800	0					
ANR	3333880	Identifier	vector		3333800	0					
ANR	3333881	Identifier	x		3333800	1					
ANR	3333882	Argument	matrix -> yx		3333800	1					
ANR	3333883	PtrMemberAccess	matrix -> yx		3333800	0					
ANR	3333884	Identifier	matrix		3333800	0					
ANR	3333885	Identifier	yx		3333800	1					
ANR	3333886	Argument	val		3333800	2					
ANR	3333887	Identifier	val		3333800	0					
ANR	3333888	Argument	"FT_MulDiv ( vector -> y , matrix -> yy , val )"		3333800	1					
ANR	3333889	CallExpression	"FT_MulDiv ( vector -> y , matrix -> yy , val )"		3333800	0					
ANR	3333890	Callee	FT_MulDiv		3333800	0					
ANR	3333891	Identifier	FT_MulDiv		3333800	0					
ANR	3333892	ArgumentList	vector -> y		3333800	1					
ANR	3333893	Argument	vector -> y		3333800	0					
ANR	3333894	PtrMemberAccess	vector -> y		3333800	0					
ANR	3333895	Identifier	vector		3333800	0					
ANR	3333896	Identifier	y		3333800	1					
ANR	3333897	Argument	matrix -> yy		3333800	1					
ANR	3333898	PtrMemberAccess	matrix -> yy		3333800	0					
ANR	3333899	Identifier	matrix		3333800	0					
ANR	3333900	Identifier	yy		3333800	1					
ANR	3333901	Argument	val		3333800	2					
ANR	3333902	Identifier	val		3333800	0					
ANR	3333903	ExpressionStatement	vector -> x = xz	768:4:20332:20346	3333800	5	True				
ANR	3333904	AssignmentExpression	vector -> x = xz		3333800	0		=			
ANR	3333905	PtrMemberAccess	vector -> x		3333800	0					
ANR	3333906	Identifier	vector		3333800	0					
ANR	3333907	Identifier	x		3333800	1					
ANR	3333908	Identifier	xz		3333800	1					
ANR	3333909	ExpressionStatement	vector -> y = yz	769:4:20352:20366	3333800	6	True				
ANR	3333910	AssignmentExpression	vector -> y = yz		3333800	0		=			
ANR	3333911	PtrMemberAccess	vector -> y		3333800	0					
ANR	3333912	Identifier	vector		3333800	0					
ANR	3333913	Identifier	y		3333800	1					
ANR	3333914	Identifier	yz		3333800	1					
ANR	3333915	Identifier	FT_Vector_Transform_Scaled		3333800	1					
ANR	3333916	ParameterList	"FT_Vector * vector , const FT_Matrix * matrix , FT_Long scaling"		3333800	2					
ANR	3333917	Parameter	FT_Vector * vector	751:30:19831:19854	3333800	0	True				
ANR	3333918	ParameterType	FT_Vector *		3333800	0					
ANR	3333919	Identifier	vector		3333800	1					
ANR	3333920	Parameter	const FT_Matrix * matrix	752:30:19887:19910	3333800	1	True				
ANR	3333921	ParameterType	const FT_Matrix *		3333800	0					
ANR	3333922	Identifier	matrix		3333800	1					
ANR	3333923	Parameter	FT_Long scaling	753:30:19943:19967	3333800	2	True				
ANR	3333924	ParameterType	FT_Long		3333800	0					
ANR	3333925	Identifier	scaling		3333800	1					
ANR	3333926	CFGEntryNode	ENTRY		3333800		True				
ANR	3333927	CFGExitNode	EXIT		3333800		True				
ANR	3333928	Symbol	val		3333800						
ANR	3333929	Symbol	yz		3333800						
ANR	3333930	Symbol	scaling		3333800						
ANR	3333931	Symbol	xz		3333800						
ANR	3333932	Symbol	ADD_LONG		3333800						
ANR	3333933	Symbol	* vector		3333800						
ANR	3333934	Symbol	matrix -> yx		3333800						
ANR	3333935	Symbol	matrix		3333800						
ANR	3333936	Symbol	FT_MulDiv		3333800						
ANR	3333937	Symbol	vector -> y		3333800						
ANR	3333938	Symbol	* matrix		3333800						
ANR	3333939	Symbol	vector -> x		3333800						
ANR	3333940	Symbol	matrix -> xx		3333800						
ANR	3333941	Symbol	matrix -> yy		3333800						
ANR	3333942	Symbol	matrix -> xy		3333800						
ANR	3333943	Symbol	vector		3333800						
ANR	3333944	Function	FT_Vector_NormLen	776:2:20441:22798							
ANR	3333945	FunctionDef	FT_Vector_NormLen (FT_Vector * vector)		3333944	0					
ANR	3333946	CompoundStatement		777:2:20483:22798	3333944	0					
ANR	3333947	IdentifierDeclStatement	FT_Int32 x_ = vector -> x ;	778:4:20489:20514	3333944	0	True				
ANR	3333948	IdentifierDecl	x_ = vector -> x		3333944	0					
ANR	3333949	IdentifierDeclType	FT_Int32		3333944	0					
ANR	3333950	Identifier	x_		3333944	1					
ANR	3333951	AssignmentExpression	x_ = vector -> x		3333944	2		=			
ANR	3333952	Identifier	x_		3333944	0					
ANR	3333953	PtrMemberAccess	vector -> x		3333944	1					
ANR	3333954	Identifier	vector		3333944	0					
ANR	3333955	Identifier	x		3333944	1					
ANR	3333956	IdentifierDeclStatement	FT_Int32 y_ = vector -> y ;	779:4:20520:20545	3333944	1	True				
ANR	3333957	IdentifierDecl	y_ = vector -> y		3333944	0					
ANR	3333958	IdentifierDeclType	FT_Int32		3333944	0					
ANR	3333959	Identifier	y_		3333944	1					
ANR	3333960	AssignmentExpression	y_ = vector -> y		3333944	2		=			
ANR	3333961	Identifier	y_		3333944	0					
ANR	3333962	PtrMemberAccess	vector -> y		3333944	1					
ANR	3333963	Identifier	vector		3333944	0					
ANR	3333964	Identifier	y		3333944	1					
ANR	3333965	IdentifierDeclStatement	"FT_Int32 b , z ;"	780:4:20551:20566	3333944	2	True				
ANR	3333966	IdentifierDecl	b		3333944	0					
ANR	3333967	IdentifierDeclType	FT_Int32		3333944	0					
ANR	3333968	Identifier	b		3333944	1					
ANR	3333969	IdentifierDecl	z		3333944	1					
ANR	3333970	IdentifierDeclType	FT_Int32		3333944	0					
ANR	3333971	Identifier	z		3333944	1					
ANR	3333972	IdentifierDeclStatement	"FT_UInt32 x , y , u , v , l ;"	781:4:20572:20596	3333944	3	True				
ANR	3333973	IdentifierDecl	x		3333944	0					
ANR	3333974	IdentifierDeclType	FT_UInt32		3333944	0					
ANR	3333975	Identifier	x		3333944	1					
ANR	3333976	IdentifierDecl	y		3333944	1					
ANR	3333977	IdentifierDeclType	FT_UInt32		3333944	0					
ANR	3333978	Identifier	y		3333944	1					
ANR	3333979	IdentifierDecl	u		3333944	2					
ANR	3333980	IdentifierDeclType	FT_UInt32		3333944	0					
ANR	3333981	Identifier	u		3333944	1					
ANR	3333982	IdentifierDecl	v		3333944	3					
ANR	3333983	IdentifierDeclType	FT_UInt32		3333944	0					
ANR	3333984	Identifier	v		3333944	1					
ANR	3333985	IdentifierDecl	l		3333944	4					
ANR	3333986	IdentifierDeclType	FT_UInt32		3333944	0					
ANR	3333987	Identifier	l		3333944	1					
ANR	3333988	IdentifierDeclStatement	"FT_Int sx = 1 , sy = 1 , shift ;"	782:4:20602:20634	3333944	4	True				
ANR	3333989	IdentifierDecl	sx = 1		3333944	0					
ANR	3333990	IdentifierDeclType	FT_Int		3333944	0					
ANR	3333991	Identifier	sx		3333944	1					
ANR	3333992	AssignmentExpression	sx = 1		3333944	2		=			
ANR	3333993	Identifier	sx		3333944	0					
ANR	3333994	PrimaryExpression	1		3333944	1					
ANR	3333995	IdentifierDecl	sy = 1		3333944	1					
ANR	3333996	IdentifierDeclType	FT_Int		3333944	0					
ANR	3333997	Identifier	sy		3333944	1					
ANR	3333998	AssignmentExpression	sy = 1		3333944	2		=			
ANR	3333999	Identifier	sy		3333944	0					
ANR	3334000	PrimaryExpression	1		3333944	1					
ANR	3334001	IdentifierDecl	shift		3333944	2					
ANR	3334002	IdentifierDeclType	FT_Int		3333944	0					
ANR	3334003	Identifier	shift		3333944	1					
ANR	3334004	ExpressionStatement	x = ( FT_UInt32 ) x_	785:4:20642:20659	3333944	5	True				
ANR	3334005	AssignmentExpression	x = ( FT_UInt32 ) x_		3333944	0		=			
ANR	3334006	Identifier	x		3333944	0					
ANR	3334007	CastExpression	( FT_UInt32 ) x_		3333944	1					
ANR	3334008	CastTarget	FT_UInt32		3333944	0					
ANR	3334009	Identifier	x_		3333944	1					
ANR	3334010	ExpressionStatement	y = ( FT_UInt32 ) y_	786:4:20665:20682	3333944	6	True				
ANR	3334011	AssignmentExpression	y = ( FT_UInt32 ) y_		3333944	0		=			
ANR	3334012	Identifier	y		3333944	0					
ANR	3334013	CastExpression	( FT_UInt32 ) y_		3333944	1					
ANR	3334014	CastTarget	FT_UInt32		3333944	0					
ANR	3334015	Identifier	y_		3333944	1					
ANR	3334016	ExpressionStatement	"FT_MOVE_SIGN ( x_ , x , sx )"	788:4:20689:20714	3333944	7	True				
ANR	3334017	CallExpression	"FT_MOVE_SIGN ( x_ , x , sx )"		3333944	0					
ANR	3334018	Callee	FT_MOVE_SIGN		3333944	0					
ANR	3334019	Identifier	FT_MOVE_SIGN		3333944	0					
ANR	3334020	ArgumentList	x_		3333944	1					
ANR	3334021	Argument	x_		3333944	0					
ANR	3334022	Identifier	x_		3333944	0					
ANR	3334023	Argument	x		3333944	1					
ANR	3334024	Identifier	x		3333944	0					
ANR	3334025	Argument	sx		3333944	2					
ANR	3334026	Identifier	sx		3333944	0					
ANR	3334027	ExpressionStatement	"FT_MOVE_SIGN ( y_ , y , sy )"	789:4:20720:20745	3333944	8	True				
ANR	3334028	CallExpression	"FT_MOVE_SIGN ( y_ , y , sy )"		3333944	0					
ANR	3334029	Callee	FT_MOVE_SIGN		3333944	0					
ANR	3334030	Identifier	FT_MOVE_SIGN		3333944	0					
ANR	3334031	ArgumentList	y_		3333944	1					
ANR	3334032	Argument	y_		3333944	0					
ANR	3334033	Identifier	y_		3333944	0					
ANR	3334034	Argument	y		3333944	1					
ANR	3334035	Identifier	y		3333944	0					
ANR	3334036	Argument	sy		3333944	2					
ANR	3334037	Identifier	sy		3333944	0					
ANR	3334038	IfStatement	if ( x == 0 )		3333944	9					
ANR	3334039	Condition	x == 0	792:9:20781:20786	3333944	0	True				
ANR	3334040	EqualityExpression	x == 0		3333944	0		==			
ANR	3334041	Identifier	x		3333944	0					
ANR	3334042	PrimaryExpression	0		3333944	1					
ANR	3334043	CompoundStatement		17:4:310:310	3333944	1					
ANR	3334044	IfStatement	if ( y > 0 )		3333944	0					
ANR	3334045	Condition	y > 0	794:11:20807:20811	3333944	0	True				
ANR	3334046	RelationalExpression	y > 0		3333944	0		>			
ANR	3334047	Identifier	y		3333944	0					
ANR	3334048	PrimaryExpression	0		3333944	1					
ANR	3334049	ExpressionStatement	vector -> y = sy * 0x10000	795:8:20823:20847	3333944	1	True				
ANR	3334050	AssignmentExpression	vector -> y = sy * 0x10000		3333944	0		=			
ANR	3334051	PtrMemberAccess	vector -> y		3333944	0					
ANR	3334052	Identifier	vector		3333944	0					
ANR	3334053	Identifier	y		3333944	1					
ANR	3334054	MultiplicativeExpression	sy * 0x10000		3333944	1		*			
ANR	3334055	Identifier	sy		3333944	0					
ANR	3334056	PrimaryExpression	0x10000		3333944	1					
ANR	3334057	ReturnStatement	return y ;	796:6:20855:20863	3333944	1	True				
ANR	3334058	Identifier	y		3333944	0					
ANR	3334059	ElseStatement	else		3333944	0					
ANR	3334060	IfStatement	if ( y == 0 )		3333944	0					
ANR	3334061	Condition	y == 0	798:14:20885:20890	3333944	0	True				
ANR	3334062	EqualityExpression	y == 0		3333944	0		==			
ANR	3334063	Identifier	y		3333944	0					
ANR	3334064	PrimaryExpression	0		3333944	1					
ANR	3334065	CompoundStatement		23:4:414:414	3333944	1					
ANR	3334066	IfStatement	if ( x > 0 )		3333944	0					
ANR	3334067	Condition	x > 0	800:11:20911:20915	3333944	0	True				
ANR	3334068	RelationalExpression	x > 0		3333944	0		>			
ANR	3334069	Identifier	x		3333944	0					
ANR	3334070	PrimaryExpression	0		3333944	1					
ANR	3334071	ExpressionStatement	vector -> x = sx * 0x10000	801:8:20927:20951	3333944	1	True				
ANR	3334072	AssignmentExpression	vector -> x = sx * 0x10000		3333944	0		=			
ANR	3334073	PtrMemberAccess	vector -> x		3333944	0					
ANR	3334074	Identifier	vector		3333944	0					
ANR	3334075	Identifier	x		3333944	1					
ANR	3334076	MultiplicativeExpression	sx * 0x10000		3333944	1		*			
ANR	3334077	Identifier	sx		3333944	0					
ANR	3334078	PrimaryExpression	0x10000		3333944	1					
ANR	3334079	ReturnStatement	return x ;	802:6:20959:20967	3333944	1	True				
ANR	3334080	Identifier	x		3333944	0					
ANR	3334081	ExpressionStatement	l = x > y ? x + ( y >> 1 ) : y + ( x >> 1 )	809:4:21232:21289	3333944	10	True				
ANR	3334082	AssignmentExpression	l = x > y ? x + ( y >> 1 ) : y + ( x >> 1 )		3333944	0		=			
ANR	3334083	Identifier	l		3333944	0					
ANR	3334084	ConditionalExpression	x > y ? x + ( y >> 1 ) : y + ( x >> 1 )		3333944	1					
ANR	3334085	Condition	x > y		3333944	0					
ANR	3334086	RelationalExpression	x > y		3333944	0		>			
ANR	3334087	Identifier	x		3333944	0					
ANR	3334088	Identifier	y		3333944	1					
ANR	3334089	AdditiveExpression	x + ( y >> 1 )		3333944	1		+			
ANR	3334090	Identifier	x		3333944	0					
ANR	3334091	ShiftExpression	y >> 1		3333944	1		>>			
ANR	3334092	Identifier	y		3333944	0					
ANR	3334093	PrimaryExpression	1		3333944	1					
ANR	3334094	AdditiveExpression	y + ( x >> 1 )		3333944	2		+			
ANR	3334095	Identifier	y		3333944	0					
ANR	3334096	ShiftExpression	x >> 1		3333944	1		>>			
ANR	3334097	Identifier	x		3333944	0					
ANR	3334098	PrimaryExpression	1		3333944	1					
ANR	3334099	ExpressionStatement	shift = 31 - FT_MSB ( l )	812:4:21296:21321	3333944	11	True				
ANR	3334100	AssignmentExpression	shift = 31 - FT_MSB ( l )		3333944	0		=			
ANR	3334101	Identifier	shift		3333944	0					
ANR	3334102	AdditiveExpression	31 - FT_MSB ( l )		3333944	1		-			
ANR	3334103	PrimaryExpression	31		3333944	0					
ANR	3334104	CallExpression	FT_MSB ( l )		3333944	1					
ANR	3334105	Callee	FT_MSB		3333944	0					
ANR	3334106	Identifier	FT_MSB		3333944	0					
ANR	3334107	ArgumentList	l		3333944	1					
ANR	3334108	Argument	l		3333944	0					
ANR	3334109	Identifier	l		3333944	0					
ANR	3334110	ExpressionStatement	shift -= 15 + ( l >= ( 0xAAAAAAAAUL >> shift ) )	813:4:21327:21375	3333944	12	True				
ANR	3334111	AssignmentExpression	shift -= 15 + ( l >= ( 0xAAAAAAAAUL >> shift ) )		3333944	0		-=			
ANR	3334112	Identifier	shift		3333944	0					
ANR	3334113	AdditiveExpression	15 + ( l >= ( 0xAAAAAAAAUL >> shift ) )		3333944	1		+			
ANR	3334114	PrimaryExpression	15		3333944	0					
ANR	3334115	RelationalExpression	l >= ( 0xAAAAAAAAUL >> shift )		3333944	1		>=			
ANR	3334116	Identifier	l		3333944	0					
ANR	3334117	ShiftExpression	0xAAAAAAAAUL >> shift		3333944	1		>>			
ANR	3334118	PrimaryExpression	0xAAAAAAAAUL		3333944	0					
ANR	3334119	Identifier	shift		3333944	1					
ANR	3334120	IfStatement	if ( shift > 0 )		3333944	13					
ANR	3334121	Condition	shift > 0	815:9:21387:21395	3333944	0	True				
ANR	3334122	RelationalExpression	shift > 0		3333944	0		>			
ANR	3334123	Identifier	shift		3333944	0					
ANR	3334124	PrimaryExpression	0		3333944	1					
ANR	3334125	CompoundStatement		40:4:919:919	3333944	1					
ANR	3334126	ExpressionStatement	x <<= shift	817:6:21411:21422	3333944	0	True				
ANR	3334127	AssignmentExpression	x <<= shift		3333944	0		<<=			
ANR	3334128	Identifier	x		3333944	0					
ANR	3334129	Identifier	shift		3333944	1					
ANR	3334130	ExpressionStatement	y <<= shift	818:6:21430:21441	3333944	1	True				
ANR	3334131	AssignmentExpression	y <<= shift		3333944	0		<<=			
ANR	3334132	Identifier	y		3333944	0					
ANR	3334133	Identifier	shift		3333944	1					
ANR	3334134	ExpressionStatement	l = x > y ? x + ( y >> 1 ) : y + ( x >> 1 )	821:6:21498:21557	3333944	2	True				
ANR	3334135	AssignmentExpression	l = x > y ? x + ( y >> 1 ) : y + ( x >> 1 )		3333944	0		=			
ANR	3334136	Identifier	l		3333944	0					
ANR	3334137	ConditionalExpression	x > y ? x + ( y >> 1 ) : y + ( x >> 1 )		3333944	1					
ANR	3334138	Condition	x > y		3333944	0					
ANR	3334139	RelationalExpression	x > y		3333944	0		>			
ANR	3334140	Identifier	x		3333944	0					
ANR	3334141	Identifier	y		3333944	1					
ANR	3334142	AdditiveExpression	x + ( y >> 1 )		3333944	1		+			
ANR	3334143	Identifier	x		3333944	0					
ANR	3334144	ShiftExpression	y >> 1		3333944	1		>>			
ANR	3334145	Identifier	y		3333944	0					
ANR	3334146	PrimaryExpression	1		3333944	1					
ANR	3334147	AdditiveExpression	y + ( x >> 1 )		3333944	2		+			
ANR	3334148	Identifier	y		3333944	0					
ANR	3334149	ShiftExpression	x >> 1		3333944	1		>>			
ANR	3334150	Identifier	x		3333944	0					
ANR	3334151	PrimaryExpression	1		3333944	1					
ANR	3334152	ElseStatement	else		3333944	0					
ANR	3334153	CompoundStatement		49:4:1094:1094	3333944	0					
ANR	3334154	ExpressionStatement	x >>= - shift	826:6:21586:21598	3333944	0	True				
ANR	3334155	AssignmentExpression	x >>= - shift		3333944	0		>>=			
ANR	3334156	Identifier	x		3333944	0					
ANR	3334157	UnaryOperationExpression	- shift		3333944	1					
ANR	3334158	UnaryOperator	-		3333944	0					
ANR	3334159	Identifier	shift		3333944	1					
ANR	3334160	ExpressionStatement	y >>= - shift	827:6:21606:21618	3333944	1	True				
ANR	3334161	AssignmentExpression	y >>= - shift		3333944	0		>>=			
ANR	3334162	Identifier	y		3333944	0					
ANR	3334163	UnaryOperationExpression	- shift		3333944	1					
ANR	3334164	UnaryOperator	-		3333944	0					
ANR	3334165	Identifier	shift		3333944	1					
ANR	3334166	ExpressionStatement	l >>= - shift	828:6:21626:21638	3333944	2	True				
ANR	3334167	AssignmentExpression	l >>= - shift		3333944	0		>>=			
ANR	3334168	Identifier	l		3333944	0					
ANR	3334169	UnaryOperationExpression	- shift		3333944	1					
ANR	3334170	UnaryOperator	-		3333944	0					
ANR	3334171	Identifier	shift		3333944	1					
ANR	3334172	ExpressionStatement	b = 0x10000 - ( FT_Int32 ) l	832:4:21720:21745	3333944	14	True				
ANR	3334173	AssignmentExpression	b = 0x10000 - ( FT_Int32 ) l		3333944	0		=			
ANR	3334174	Identifier	b		3333944	0					
ANR	3334175	AdditiveExpression	0x10000 - ( FT_Int32 ) l		3333944	1		-			
ANR	3334176	PrimaryExpression	0x10000		3333944	0					
ANR	3334177	CastExpression	( FT_Int32 ) l		3333944	1					
ANR	3334178	CastTarget	FT_Int32		3333944	0					
ANR	3334179	Identifier	l		3333944	1					
ANR	3334180	ExpressionStatement	x_ = ( FT_Int32 ) x	834:4:21752:21768	3333944	15	True				
ANR	3334181	AssignmentExpression	x_ = ( FT_Int32 ) x		3333944	0		=			
ANR	3334182	Identifier	x_		3333944	0					
ANR	3334183	CastExpression	( FT_Int32 ) x		3333944	1					
ANR	3334184	CastTarget	FT_Int32		3333944	0					
ANR	3334185	Identifier	x		3333944	1					
ANR	3334186	ExpressionStatement	y_ = ( FT_Int32 ) y	835:4:21774:21790	3333944	16	True				
ANR	3334187	AssignmentExpression	y_ = ( FT_Int32 ) y		3333944	0		=			
ANR	3334188	Identifier	y_		3333944	0					
ANR	3334189	CastExpression	( FT_Int32 ) y		3333944	1					
ANR	3334190	CastTarget	FT_Int32		3333944	0					
ANR	3334191	Identifier	y		3333944	1					
ANR	3334192	DoStatement	do		3333944	17					
ANR	3334193	CompoundStatement		63:4:1350:1350	3333944	0					
ANR	3334194	ExpressionStatement	u = ( FT_UInt32 ) ( x_ + ( x_ * b >> 16 ) )	840:6:21842:21882	3333944	0	True				
ANR	3334195	AssignmentExpression	u = ( FT_UInt32 ) ( x_ + ( x_ * b >> 16 ) )		3333944	0		=			
ANR	3334196	Identifier	u		3333944	0					
ANR	3334197	CastExpression	( FT_UInt32 ) ( x_ + ( x_ * b >> 16 ) )		3333944	1					
ANR	3334198	CastTarget	FT_UInt32		3333944	0					
ANR	3334199	AdditiveExpression	x_ + ( x_ * b >> 16 )		3333944	1		+			
ANR	3334200	Identifier	x_		3333944	0					
ANR	3334201	ShiftExpression	x_ * b >> 16		3333944	1		>>			
ANR	3334202	MultiplicativeExpression	x_ * b		3333944	0		*			
ANR	3334203	Identifier	x_		3333944	0					
ANR	3334204	Identifier	b		3333944	1					
ANR	3334205	PrimaryExpression	16		3333944	1					
ANR	3334206	ExpressionStatement	v = ( FT_UInt32 ) ( y_ + ( y_ * b >> 16 ) )	841:6:21890:21930	3333944	1	True				
ANR	3334207	AssignmentExpression	v = ( FT_UInt32 ) ( y_ + ( y_ * b >> 16 ) )		3333944	0		=			
ANR	3334208	Identifier	v		3333944	0					
ANR	3334209	CastExpression	( FT_UInt32 ) ( y_ + ( y_ * b >> 16 ) )		3333944	1					
ANR	3334210	CastTarget	FT_UInt32		3333944	0					
ANR	3334211	AdditiveExpression	y_ + ( y_ * b >> 16 )		3333944	1		+			
ANR	3334212	Identifier	y_		3333944	0					
ANR	3334213	ShiftExpression	y_ * b >> 16		3333944	1		>>			
ANR	3334214	MultiplicativeExpression	y_ * b		3333944	0		*			
ANR	3334215	Identifier	y_		3333944	0					
ANR	3334216	Identifier	b		3333944	1					
ANR	3334217	PrimaryExpression	16		3333944	1					
ANR	3334218	ExpressionStatement	z = - ( FT_Int32 ) ( u * u + v * v ) / 0x200	846:6:22161:22201	3333944	2	True				
ANR	3334219	AssignmentExpression	z = - ( FT_Int32 ) ( u * u + v * v ) / 0x200		3333944	0		=			
ANR	3334220	Identifier	z		3333944	0					
ANR	3334221	MultiplicativeExpression	- ( FT_Int32 ) ( u * u + v * v ) / 0x200		3333944	1		/			
ANR	3334222	UnaryOperationExpression	- ( FT_Int32 ) ( u * u + v * v )		3333944	0					
ANR	3334223	UnaryOperator	-		3333944	0					
ANR	3334224	CastExpression	( FT_Int32 ) ( u * u + v * v )		3333944	1					
ANR	3334225	CastTarget	FT_Int32		3333944	0					
ANR	3334226	AdditiveExpression	u * u + v * v		3333944	1		+			
ANR	3334227	MultiplicativeExpression	u * u		3333944	0		*			
ANR	3334228	Identifier	u		3333944	0					
ANR	3334229	Identifier	u		3333944	1					
ANR	3334230	MultiplicativeExpression	v * v		3333944	1		*			
ANR	3334231	Identifier	v		3333944	0					
ANR	3334232	Identifier	v		3333944	1					
ANR	3334233	PrimaryExpression	0x200		3333944	1					
ANR	3334234	ExpressionStatement	z = z * ( ( 0x10000 + b ) >> 8 ) / 0x10000	847:6:22209:22251	3333944	3	True				
ANR	3334235	AssignmentExpression	z = z * ( ( 0x10000 + b ) >> 8 ) / 0x10000		3333944	0		=			
ANR	3334236	Identifier	z		3333944	0					
ANR	3334237	MultiplicativeExpression	z * ( ( 0x10000 + b ) >> 8 ) / 0x10000		3333944	1		*			
ANR	3334238	Identifier	z		3333944	0					
ANR	3334239	MultiplicativeExpression	( ( 0x10000 + b ) >> 8 ) / 0x10000		3333944	1		/			
ANR	3334240	ShiftExpression	( 0x10000 + b ) >> 8		3333944	0		>>			
ANR	3334241	AdditiveExpression	0x10000 + b		3333944	0		+			
ANR	3334242	PrimaryExpression	0x10000		3333944	0					
ANR	3334243	Identifier	b		3333944	1					
ANR	3334244	PrimaryExpression	8		3333944	1					
ANR	3334245	PrimaryExpression	0x10000		3333944	1					
ANR	3334246	ExpressionStatement	b += z	849:6:22260:22266	3333944	4	True				
ANR	3334247	AssignmentExpression	b += z		3333944	0		+=			
ANR	3334248	Identifier	b		3333944	0					
ANR	3334249	Identifier	z		3333944	1					
ANR	3334250	Condition	z > 0	851:14:22283:22287	3333944	1	True				
ANR	3334251	RelationalExpression	z > 0		3333944	0		>			
ANR	3334252	Identifier	z		3333944	0					
ANR	3334253	PrimaryExpression	0		3333944	1					
ANR	3334254	ExpressionStatement	vector -> x = sx < 0 ? - ( FT_Pos ) u : ( FT_Pos ) u	853:4:22297:22340	3333944	18	True				
ANR	3334255	AssignmentExpression	vector -> x = sx < 0 ? - ( FT_Pos ) u : ( FT_Pos ) u		3333944	0		=			
ANR	3334256	PtrMemberAccess	vector -> x		3333944	0					
ANR	3334257	Identifier	vector		3333944	0					
ANR	3334258	Identifier	x		3333944	1					
ANR	3334259	ConditionalExpression	sx < 0 ? - ( FT_Pos ) u : ( FT_Pos ) u		3333944	1					
ANR	3334260	Condition	sx < 0		3333944	0					
ANR	3334261	RelationalExpression	sx < 0		3333944	0		<			
ANR	3334262	Identifier	sx		3333944	0					
ANR	3334263	PrimaryExpression	0		3333944	1					
ANR	3334264	UnaryOperationExpression	- ( FT_Pos ) u		3333944	1					
ANR	3334265	UnaryOperator	-		3333944	0					
ANR	3334266	CastExpression	( FT_Pos ) u		3333944	1					
ANR	3334267	CastTarget	FT_Pos		3333944	0					
ANR	3334268	Identifier	u		3333944	1					
ANR	3334269	CastExpression	( FT_Pos ) u		3333944	2					
ANR	3334270	CastTarget	FT_Pos		3333944	0					
ANR	3334271	Identifier	u		3333944	1					
ANR	3334272	ExpressionStatement	vector -> y = sy < 0 ? - ( FT_Pos ) v : ( FT_Pos ) v	854:4:22346:22389	3333944	19	True				
ANR	3334273	AssignmentExpression	vector -> y = sy < 0 ? - ( FT_Pos ) v : ( FT_Pos ) v		3333944	0		=			
ANR	3334274	PtrMemberAccess	vector -> y		3333944	0					
ANR	3334275	Identifier	vector		3333944	0					
ANR	3334276	Identifier	y		3333944	1					
ANR	3334277	ConditionalExpression	sy < 0 ? - ( FT_Pos ) v : ( FT_Pos ) v		3333944	1					
ANR	3334278	Condition	sy < 0		3333944	0					
ANR	3334279	RelationalExpression	sy < 0		3333944	0		<			
ANR	3334280	Identifier	sy		3333944	0					
ANR	3334281	PrimaryExpression	0		3333944	1					
ANR	3334282	UnaryOperationExpression	- ( FT_Pos ) v		3333944	1					
ANR	3334283	UnaryOperator	-		3333944	0					
ANR	3334284	CastExpression	( FT_Pos ) v		3333944	1					
ANR	3334285	CastTarget	FT_Pos		3333944	0					
ANR	3334286	Identifier	v		3333944	1					
ANR	3334287	CastExpression	( FT_Pos ) v		3333944	2					
ANR	3334288	CastTarget	FT_Pos		3333944	0					
ANR	3334289	Identifier	v		3333944	1					
ANR	3334290	ExpressionStatement	l = ( FT_UInt32 ) ( 0x10000 + ( FT_Int32 ) ( u * x + v * y ) / 0x10000 )	859:4:22612:22678	3333944	20	True				
ANR	3334291	AssignmentExpression	l = ( FT_UInt32 ) ( 0x10000 + ( FT_Int32 ) ( u * x + v * y ) / 0x10000 )		3333944	0		=			
ANR	3334292	Identifier	l		3333944	0					
ANR	3334293	CastExpression	( FT_UInt32 ) ( 0x10000 + ( FT_Int32 ) ( u * x + v * y ) / 0x10000 )		3333944	1					
ANR	3334294	CastTarget	FT_UInt32		3333944	0					
ANR	3334295	AdditiveExpression	0x10000 + ( FT_Int32 ) ( u * x + v * y ) / 0x10000		3333944	1		+			
ANR	3334296	PrimaryExpression	0x10000		3333944	0					
ANR	3334297	MultiplicativeExpression	( FT_Int32 ) ( u * x + v * y ) / 0x10000		3333944	1		/			
ANR	3334298	CastExpression	( FT_Int32 ) ( u * x + v * y )		3333944	0					
ANR	3334299	CastTarget	FT_Int32		3333944	0					
ANR	3334300	AdditiveExpression	u * x + v * y		3333944	1		+			
ANR	3334301	MultiplicativeExpression	u * x		3333944	0		*			
ANR	3334302	Identifier	u		3333944	0					
ANR	3334303	Identifier	x		3333944	1					
ANR	3334304	MultiplicativeExpression	v * y		3333944	1		*			
ANR	3334305	Identifier	v		3333944	0					
ANR	3334306	Identifier	y		3333944	1					
ANR	3334307	PrimaryExpression	0x10000		3333944	1					
ANR	3334308	IfStatement	if ( shift > 0 )		3333944	21					
ANR	3334309	Condition	shift > 0	860:9:22689:22697	3333944	0	True				
ANR	3334310	RelationalExpression	shift > 0		3333944	0		>			
ANR	3334311	Identifier	shift		3333944	0					
ANR	3334312	PrimaryExpression	0		3333944	1					
ANR	3334313	ExpressionStatement	l = ( l + ( 1 << ( shift - 1 ) ) ) >> shift	861:6:22707:22750	3333944	1	True				
ANR	3334314	AssignmentExpression	l = ( l + ( 1 << ( shift - 1 ) ) ) >> shift		3333944	0		=			
ANR	3334315	Identifier	l		3333944	0					
ANR	3334316	ShiftExpression	( l + ( 1 << ( shift - 1 ) ) ) >> shift		3333944	1		>>			
ANR	3334317	AdditiveExpression	l + ( 1 << ( shift - 1 ) )		3333944	0		+			
ANR	3334318	Identifier	l		3333944	0					
ANR	3334319	ShiftExpression	1 << ( shift - 1 )		3333944	1		<<			
ANR	3334320	PrimaryExpression	1		3333944	0					
ANR	3334321	AdditiveExpression	shift - 1		3333944	1		-			
ANR	3334322	Identifier	shift		3333944	0					
ANR	3334323	PrimaryExpression	1		3333944	1					
ANR	3334324	Identifier	shift		3333944	1					
ANR	3334325	ElseStatement	else		3333944	0					
ANR	3334326	ExpressionStatement	l <<= - shift	863:6:22767:22779	3333944	0	True				
ANR	3334327	AssignmentExpression	l <<= - shift		3333944	0		<<=			
ANR	3334328	Identifier	l		3333944	0					
ANR	3334329	UnaryOperationExpression	- shift		3333944	1					
ANR	3334330	UnaryOperator	-		3333944	0					
ANR	3334331	Identifier	shift		3333944	1					
ANR	3334332	ReturnStatement	return l ;	865:4:22786:22794	3333944	22	True				
ANR	3334333	Identifier	l		3333944	0					
ANR	3334334	Identifier	FT_Vector_NormLen		3333944	1					
ANR	3334335	ParameterList	FT_Vector * vector		3333944	2					
ANR	3334336	Parameter	FT_Vector * vector	776:21:20460:20477	3333944	0	True				
ANR	3334337	ParameterType	FT_Vector *		3333944	0					
ANR	3334338	Identifier	vector		3333944	1					
ANR	3334339	CFGEntryNode	ENTRY		3333944		True				
ANR	3334340	CFGExitNode	EXIT		3333944		True				
ANR	3334341	Symbol	b		3333944						
ANR	3334342	Symbol	sx		3333944						
ANR	3334343	Symbol	y_		3333944						
ANR	3334344	Symbol	sy		3333944						
ANR	3334345	Symbol	x_		3333944						
ANR	3334346	Symbol	shift		3333944						
ANR	3334347	Symbol	* vector		3333944						
ANR	3334348	Symbol	l		3333944						
ANR	3334349	Symbol	vector -> y		3333944						
ANR	3334350	Symbol	vector -> x		3333944						
ANR	3334351	Symbol	FT_MSB		3333944						
ANR	3334352	Symbol	u		3333944						
ANR	3334353	Symbol	v		3333944						
ANR	3334354	Symbol	x		3333944						
ANR	3334355	Symbol	y		3333944						
ANR	3334356	Symbol	vector		3333944						
ANR	3334357	Symbol	z		3333944						
ANR	3334358	Function	FT_SqrtFixed	874:2:22875:23407							
ANR	3334359	FunctionDef	FT_SqrtFixed (FT_Int32 x)		3334358	0					
ANR	3334360	CompoundStatement		875:2:22905:23407	3334358	0					
ANR	3334361	IdentifierDeclStatement	"FT_UInt32 root , rem_hi , rem_lo , test_div ;"	876:4:22911:22952	3334358	0	True				
ANR	3334362	IdentifierDecl	root		3334358	0					
ANR	3334363	IdentifierDeclType	FT_UInt32		3334358	0					
ANR	3334364	Identifier	root		3334358	1					
ANR	3334365	IdentifierDecl	rem_hi		3334358	1					
ANR	3334366	IdentifierDeclType	FT_UInt32		3334358	0					
ANR	3334367	Identifier	rem_hi		3334358	1					
ANR	3334368	IdentifierDecl	rem_lo		3334358	2					
ANR	3334369	IdentifierDeclType	FT_UInt32		3334358	0					
ANR	3334370	Identifier	rem_lo		3334358	1					
ANR	3334371	IdentifierDecl	test_div		3334358	3					
ANR	3334372	IdentifierDeclType	FT_UInt32		3334358	0					
ANR	3334373	Identifier	test_div		3334358	1					
ANR	3334374	IdentifierDeclStatement	FT_Int count ;	877:4:22958:22974	3334358	1	True				
ANR	3334375	IdentifierDecl	count		3334358	0					
ANR	3334376	IdentifierDeclType	FT_Int		3334358	0					
ANR	3334377	Identifier	count		3334358	1					
ANR	3334378	ExpressionStatement	root = 0	880:4:22982:22990	3334358	2	True				
ANR	3334379	AssignmentExpression	root = 0		3334358	0		=			
ANR	3334380	Identifier	root		3334358	0					
ANR	3334381	PrimaryExpression	0		3334358	1					
ANR	3334382	IfStatement	if ( x > 0 )		3334358	3					
ANR	3334383	Condition	x > 0	882:9:23002:23006	3334358	0	True				
ANR	3334384	RelationalExpression	x > 0		3334358	0		>			
ANR	3334385	Identifier	x		3334358	0					
ANR	3334386	PrimaryExpression	0		3334358	1					
ANR	3334387	CompoundStatement		9:4:108:108	3334358	1					
ANR	3334388	ExpressionStatement	rem_hi = 0	884:6:23022:23032	3334358	0	True				
ANR	3334389	AssignmentExpression	rem_hi = 0		3334358	0		=			
ANR	3334390	Identifier	rem_hi		3334358	0					
ANR	3334391	PrimaryExpression	0		3334358	1					
ANR	3334392	ExpressionStatement	rem_lo = ( FT_UInt32 ) x	885:6:23040:23061	3334358	1	True				
ANR	3334393	AssignmentExpression	rem_lo = ( FT_UInt32 ) x		3334358	0		=			
ANR	3334394	Identifier	rem_lo		3334358	0					
ANR	3334395	CastExpression	( FT_UInt32 ) x		3334358	1					
ANR	3334396	CastTarget	FT_UInt32		3334358	0					
ANR	3334397	Identifier	x		3334358	1					
ANR	3334398	ExpressionStatement	count = 24	886:6:23069:23080	3334358	2	True				
ANR	3334399	AssignmentExpression	count = 24		3334358	0		=			
ANR	3334400	Identifier	count		3334358	0					
ANR	3334401	PrimaryExpression	24		3334358	1					
ANR	3334402	DoStatement	do		3334358	3					
ANR	3334403	CompoundStatement		14:6:191:191	3334358	0					
ANR	3334404	ExpressionStatement	rem_hi = ( rem_hi << 2 ) | ( rem_lo >> 30 )	889:8:23107:23152	3334358	0	True				
ANR	3334405	AssignmentExpression	rem_hi = ( rem_hi << 2 ) | ( rem_lo >> 30 )		3334358	0		=			
ANR	3334406	Identifier	rem_hi		3334358	0					
ANR	3334407	InclusiveOrExpression	( rem_hi << 2 ) | ( rem_lo >> 30 )		3334358	1		|			
ANR	3334408	ShiftExpression	rem_hi << 2		3334358	0		<<			
ANR	3334409	Identifier	rem_hi		3334358	0					
ANR	3334410	PrimaryExpression	2		3334358	1					
ANR	3334411	ShiftExpression	rem_lo >> 30		3334358	1		>>			
ANR	3334412	Identifier	rem_lo		3334358	0					
ANR	3334413	PrimaryExpression	30		3334358	1					
ANR	3334414	ExpressionStatement	rem_lo <<= 2	890:8:23162:23174	3334358	1	True				
ANR	3334415	AssignmentExpression	rem_lo <<= 2		3334358	0		<<=			
ANR	3334416	Identifier	rem_lo		3334358	0					
ANR	3334417	PrimaryExpression	2		3334358	1					
ANR	3334418	ExpressionStatement	root <<= 1	891:8:23184:23196	3334358	2	True				
ANR	3334419	AssignmentExpression	root <<= 1		3334358	0		<<=			
ANR	3334420	Identifier	root		3334358	0					
ANR	3334421	PrimaryExpression	1		3334358	1					
ANR	3334422	ExpressionStatement	test_div = ( root << 1 ) + 1	892:8:23206:23234	3334358	3	True				
ANR	3334423	AssignmentExpression	test_div = ( root << 1 ) + 1		3334358	0		=			
ANR	3334424	Identifier	test_div		3334358	0					
ANR	3334425	AdditiveExpression	( root << 1 ) + 1		3334358	1		+			
ANR	3334426	ShiftExpression	root << 1		3334358	0		<<			
ANR	3334427	Identifier	root		3334358	0					
ANR	3334428	PrimaryExpression	1		3334358	1					
ANR	3334429	PrimaryExpression	1		3334358	1					
ANR	3334430	IfStatement	if ( rem_hi >= test_div )		3334358	4					
ANR	3334431	Condition	rem_hi >= test_div	894:13:23250:23267	3334358	0	True				
ANR	3334432	RelationalExpression	rem_hi >= test_div		3334358	0		>=			
ANR	3334433	Identifier	rem_hi		3334358	0					
ANR	3334434	Identifier	test_div		3334358	1					
ANR	3334435	CompoundStatement		21:8:373:373	3334358	1					
ANR	3334436	ExpressionStatement	rem_hi -= test_div	896:10:23291:23309	3334358	0	True				
ANR	3334437	AssignmentExpression	rem_hi -= test_div		3334358	0		-=			
ANR	3334438	Identifier	rem_hi		3334358	0					
ANR	3334439	Identifier	test_div		3334358	1					
ANR	3334440	ExpressionStatement	root += 1	897:10:23321:23332	3334358	1	True				
ANR	3334441	AssignmentExpression	root += 1		3334358	0		+=			
ANR	3334442	Identifier	root		3334358	0					
ANR	3334443	PrimaryExpression	1		3334358	1					
ANR	3334444	Condition	-- count	899:16:23360:23366	3334358	1	True				
ANR	3334445	UnaryExpression	-- count		3334358	0					
ANR	3334446	IncDec	--		3334358	0					
ANR	3334447	Identifier	count		3334358	1					
ANR	3334448	ReturnStatement	return ( FT_Int32 ) root ;	902:4:23382:23403	3334358	4	True				
ANR	3334449	CastExpression	( FT_Int32 ) root		3334358	0					
ANR	3334450	CastTarget	FT_Int32		3334358	0					
ANR	3334451	Identifier	root		3334358	1					
ANR	3334452	Identifier	FT_SqrtFixed		3334358	1					
ANR	3334453	ParameterList	FT_Int32 x		3334358	2					
ANR	3334454	Parameter	FT_Int32 x	874:16:22889:22899	3334358	0	True				
ANR	3334455	ParameterType	FT_Int32		3334358	0					
ANR	3334456	Identifier	x		3334358	1					
ANR	3334457	CFGEntryNode	ENTRY		3334358		True				
ANR	3334458	CFGExitNode	EXIT		3334358		True				
ANR	3334459	Symbol	rem_lo		3334358						
ANR	3334460	Symbol	root		3334358						
ANR	3334461	Symbol	x		3334358						
ANR	3334462	Symbol	count		3334358						
ANR	3334463	Symbol	rem_hi		3334358						
ANR	3334464	Symbol	test_div		3334358						
ANR	3334465	Function	ft_corner_orientation	911:2:23491:24916							
ANR	3334466	FunctionDef	"ft_corner_orientation (FT_Pos in_x , FT_Pos in_y , FT_Pos out_x , FT_Pos out_y)"		3334465	0					
ANR	3334467	CompoundStatement		915:2:23650:24916	3334465	0					
ANR	3334468	IdentifierDeclStatement	FT_Int64 delta = ( FT_Int64 ) in_x * out_y - ( FT_Int64 ) in_y * out_x ;	918:4:23674:23739	3334465	0	True				
ANR	3334469	IdentifierDecl	delta = ( FT_Int64 ) in_x * out_y - ( FT_Int64 ) in_y * out_x		3334465	0					
ANR	3334470	IdentifierDeclType	FT_Int64		3334465	0					
ANR	3334471	Identifier	delta		3334465	1					
ANR	3334472	AssignmentExpression	delta = ( FT_Int64 ) in_x * out_y - ( FT_Int64 ) in_y * out_x		3334465	2		=			
ANR	3334473	Identifier	delta		3334465	0					
ANR	3334474	AdditiveExpression	( FT_Int64 ) in_x * out_y - ( FT_Int64 ) in_y * out_x		3334465	1		-			
ANR	3334475	MultiplicativeExpression	( FT_Int64 ) in_x * out_y		3334465	0		*			
ANR	3334476	CastExpression	( FT_Int64 ) in_x		3334465	0					
ANR	3334477	CastTarget	FT_Int64		3334465	0					
ANR	3334478	Identifier	in_x		3334465	1					
ANR	3334479	Identifier	out_y		3334465	1					
ANR	3334480	MultiplicativeExpression	( FT_Int64 ) in_y * out_x		3334465	1		*			
ANR	3334481	CastExpression	( FT_Int64 ) in_y		3334465	0					
ANR	3334482	CastTarget	FT_Int64		3334465	0					
ANR	3334483	Identifier	in_y		3334465	1					
ANR	3334484	Identifier	out_x		3334465	1					
ANR	3334485	ReturnStatement	return ( delta > 0 ) - ( delta < 0 ) ;	921:4:23747:23783	3334465	1	True				
ANR	3334486	AdditiveExpression	( delta > 0 ) - ( delta < 0 )		3334465	0		-			
ANR	3334487	RelationalExpression	delta > 0		3334465	0		>			
ANR	3334488	Identifier	delta		3334465	0					
ANR	3334489	PrimaryExpression	0		3334465	1					
ANR	3334490	RelationalExpression	delta < 0		3334465	1		<			
ANR	3334491	Identifier	delta		3334465	0					
ANR	3334492	PrimaryExpression	0		3334465	1					
ANR	3334493	Identifier	ft_corner_orientation		3334465	1					
ANR	3334494	ParameterList	"FT_Pos in_x , FT_Pos in_y , FT_Pos out_x , FT_Pos out_y"		3334465	2					
ANR	3334495	Parameter	FT_Pos in_x	911:25:23514:23525	3334465	0	True				
ANR	3334496	ParameterType	FT_Pos		3334465	0					
ANR	3334497	Identifier	in_x		3334465	1					
ANR	3334498	Parameter	FT_Pos in_y	912:25:23553:23564	3334465	1	True				
ANR	3334499	ParameterType	FT_Pos		3334465	0					
ANR	3334500	Identifier	in_y		3334465	1					
ANR	3334501	Parameter	FT_Pos out_x	913:25:23592:23604	3334465	2	True				
ANR	3334502	ParameterType	FT_Pos		3334465	0					
ANR	3334503	Identifier	out_x		3334465	1					
ANR	3334504	Parameter	FT_Pos out_y	914:25:23632:23644	3334465	3	True				
ANR	3334505	ParameterType	FT_Pos		3334465	0					
ANR	3334506	Identifier	out_y		3334465	1					
ANR	3334507	CFGEntryNode	ENTRY		3334465		True				
ANR	3334508	CFGExitNode	EXIT		3334465		True				
ANR	3334509	Symbol	out_x		3334465						
ANR	3334510	Symbol	delta		3334465						
ANR	3334511	Symbol	out_y		3334465						
ANR	3334512	Symbol	in_y		3334465						
ANR	3334513	Symbol	in_x		3334465						
ANR	3334514	Function	ft_corner_is_flat	975:2:24984:26770							
ANR	3334515	FunctionDef	"ft_corner_is_flat (FT_Pos in_x , FT_Pos in_y , FT_Pos out_x , FT_Pos out_y)"		3334514	0					
ANR	3334516	CompoundStatement		979:2:25127:26770	3334514	0					
ANR	3334517	IdentifierDeclStatement	FT_Pos ax = in_x + out_x ;	980:4:25133:25158	3334514	0	True				
ANR	3334518	IdentifierDecl	ax = in_x + out_x		3334514	0					
ANR	3334519	IdentifierDeclType	FT_Pos		3334514	0					
ANR	3334520	Identifier	ax		3334514	1					
ANR	3334521	AssignmentExpression	ax = in_x + out_x		3334514	2		=			
ANR	3334522	Identifier	ax		3334514	0					
ANR	3334523	AdditiveExpression	in_x + out_x		3334514	1		+			
ANR	3334524	Identifier	in_x		3334514	0					
ANR	3334525	Identifier	out_x		3334514	1					
ANR	3334526	IdentifierDeclStatement	FT_Pos ay = in_y + out_y ;	981:4:25164:25189	3334514	1	True				
ANR	3334527	IdentifierDecl	ay = in_y + out_y		3334514	0					
ANR	3334528	IdentifierDeclType	FT_Pos		3334514	0					
ANR	3334529	Identifier	ay		3334514	1					
ANR	3334530	AssignmentExpression	ay = in_y + out_y		3334514	2		=			
ANR	3334531	Identifier	ay		3334514	0					
ANR	3334532	AdditiveExpression	in_y + out_y		3334514	1		+			
ANR	3334533	Identifier	in_y		3334514	0					
ANR	3334534	Identifier	out_y		3334514	1					
ANR	3334535	IdentifierDeclStatement	"FT_Pos d_in , d_out , d_hypot ;"	983:4:25196:25224	3334514	2	True				
ANR	3334536	IdentifierDecl	d_in		3334514	0					
ANR	3334537	IdentifierDeclType	FT_Pos		3334514	0					
ANR	3334538	Identifier	d_in		3334514	1					
ANR	3334539	IdentifierDecl	d_out		3334514	1					
ANR	3334540	IdentifierDeclType	FT_Pos		3334514	0					
ANR	3334541	Identifier	d_out		3334514	1					
ANR	3334542	IdentifierDecl	d_hypot		3334514	2					
ANR	3334543	IdentifierDeclType	FT_Pos		3334514	0					
ANR	3334544	Identifier	d_hypot		3334514	1					
ANR	3334545	ExpressionStatement	"d_in = FT_HYPOT ( in_x , in_y )"	1005:4:26457:26491	3334514	3	True				
ANR	3334546	AssignmentExpression	"d_in = FT_HYPOT ( in_x , in_y )"		3334514	0		=			
ANR	3334547	Identifier	d_in		3334514	0					
ANR	3334548	CallExpression	"FT_HYPOT ( in_x , in_y )"		3334514	1					
ANR	3334549	Callee	FT_HYPOT		3334514	0					
ANR	3334550	Identifier	FT_HYPOT		3334514	0					
ANR	3334551	ArgumentList	in_x		3334514	1					
ANR	3334552	Argument	in_x		3334514	0					
ANR	3334553	Identifier	in_x		3334514	0					
ANR	3334554	Argument	in_y		3334514	1					
ANR	3334555	Identifier	in_y		3334514	0					
ANR	3334556	ExpressionStatement	"d_out = FT_HYPOT ( out_x , out_y )"	1006:4:26497:26531	3334514	4	True				
ANR	3334557	AssignmentExpression	"d_out = FT_HYPOT ( out_x , out_y )"		3334514	0		=			
ANR	3334558	Identifier	d_out		3334514	0					
ANR	3334559	CallExpression	"FT_HYPOT ( out_x , out_y )"		3334514	1					
ANR	3334560	Callee	FT_HYPOT		3334514	0					
ANR	3334561	Identifier	FT_HYPOT		3334514	0					
ANR	3334562	ArgumentList	out_x		3334514	1					
ANR	3334563	Argument	out_x		3334514	0					
ANR	3334564	Identifier	out_x		3334514	0					
ANR	3334565	Argument	out_y		3334514	1					
ANR	3334566	Identifier	out_y		3334514	0					
ANR	3334567	ExpressionStatement	"d_hypot = FT_HYPOT ( ax , ay )"	1007:4:26537:26571	3334514	5	True				
ANR	3334568	AssignmentExpression	"d_hypot = FT_HYPOT ( ax , ay )"		3334514	0		=			
ANR	3334569	Identifier	d_hypot		3334514	0					
ANR	3334570	CallExpression	"FT_HYPOT ( ax , ay )"		3334514	1					
ANR	3334571	Callee	FT_HYPOT		3334514	0					
ANR	3334572	Identifier	FT_HYPOT		3334514	0					
ANR	3334573	ArgumentList	ax		3334514	1					
ANR	3334574	Argument	ax		3334514	0					
ANR	3334575	Identifier	ax		3334514	0					
ANR	3334576	Argument	ay		3334514	1					
ANR	3334577	Identifier	ay		3334514	0					
ANR	3334578	ReturnStatement	return ( d_in + d_out - d_hypot ) < ( d_hypot >> 4 ) ;	1013:4:26714:26766	3334514	6	True				
ANR	3334579	RelationalExpression	( d_in + d_out - d_hypot ) < ( d_hypot >> 4 )		3334514	0		<			
ANR	3334580	AdditiveExpression	d_in + d_out - d_hypot		3334514	0		+			
ANR	3334581	Identifier	d_in		3334514	0					
ANR	3334582	AdditiveExpression	d_out - d_hypot		3334514	1		-			
ANR	3334583	Identifier	d_out		3334514	0					
ANR	3334584	Identifier	d_hypot		3334514	1					
ANR	3334585	ShiftExpression	d_hypot >> 4		3334514	1		>>			
ANR	3334586	Identifier	d_hypot		3334514	0					
ANR	3334587	PrimaryExpression	4		3334514	1					
ANR	3334588	Identifier	ft_corner_is_flat		3334514	1					
ANR	3334589	ParameterList	"FT_Pos in_x , FT_Pos in_y , FT_Pos out_x , FT_Pos out_y"		3334514	2					
ANR	3334590	Parameter	FT_Pos in_x	975:21:25003:25014	3334514	0	True				
ANR	3334591	ParameterType	FT_Pos		3334514	0					
ANR	3334592	Identifier	in_x		3334514	1					
ANR	3334593	Parameter	FT_Pos in_y	976:21:25038:25049	3334514	1	True				
ANR	3334594	ParameterType	FT_Pos		3334514	0					
ANR	3334595	Identifier	in_y		3334514	1					
ANR	3334596	Parameter	FT_Pos out_x	977:21:25073:25085	3334514	2	True				
ANR	3334597	ParameterType	FT_Pos		3334514	0					
ANR	3334598	Identifier	out_x		3334514	1					
ANR	3334599	Parameter	FT_Pos out_y	978:21:25109:25121	3334514	3	True				
ANR	3334600	ParameterType	FT_Pos		3334514	0					
ANR	3334601	Identifier	out_y		3334514	1					
ANR	3334602	CFGEntryNode	ENTRY		3334514		True				
ANR	3334603	CFGExitNode	EXIT		3334514		True				
ANR	3334604	Symbol	out_x		3334514						
ANR	3334605	Symbol	d_hypot		3334514						
ANR	3334606	Symbol	ax		3334514						
ANR	3334607	Symbol	ay		3334514						
ANR	3334608	Symbol	FT_HYPOT		3334514						
ANR	3334609	Symbol	out_y		3334514						
ANR	3334610	Symbol	d_out		3334514						
ANR	3334611	Symbol	in_y		3334514						
ANR	3334612	Symbol	d_in		3334514						
ANR	3334613	Symbol	in_x		3334514						
