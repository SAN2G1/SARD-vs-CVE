command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10547702	File	data/converged/CVE-2018-16863_ghostpdl/ttfmain.c								
ANR	10547703	DeclStmt									
ANR	10547704	Decl							const bool	const bool	skip_instructions
ANR	10547705	ClassDef	<unnamed>	32:8:913:966							
ANR	10547706	DeclStmt									
ANR	10547707	Decl							TT_Fixed	TT_Fixed	a
ANR	10547708	Decl							TT_Fixed	TT_Fixed	b
ANR	10547709	Decl							TT_Fixed	TT_Fixed	c
ANR	10547710	Decl							TT_Fixed	TT_Fixed	d
ANR	10547711	Decl							TT_Fixed	TT_Fixed	tx
ANR	10547712	Decl							TT_Fixed	TT_Fixed	ty
ANR	10547713	DeclStmt									
ANR	10547714	Decl									FixMatrix
ANR	10547715	ClassDef	ttfSubGlyphUsage_s	36:0:969:1066							
ANR	10547716	DeclStmt									
ANR	10547717	Decl							FixMatrix	FixMatrix	m
ANR	10547718	DeclStmt									
ANR	10547719	Decl							int	int	index
ANR	10547720	DeclStmt									
ANR	10547721	Decl							int	int	flags
ANR	10547722	DeclStmt									
ANR	10547723	Decl							short	short	arg1
ANR	10547724	Decl							short	short	arg2
ANR	10547725	Function	AVE	45:0:1144:1210							
ANR	10547726	FunctionDef	"AVE (F26Dot6 a , F26Dot6 b)"		10547725	0					
ANR	10547727	CompoundStatement		46:0:1186:1210	10547725	0					
ANR	10547728	ReturnStatement	return ( a + b ) / 2 ;	46:3:1190:1208	10547725	0	True				
ANR	10547729	MultiplicativeExpression	( a + b ) / 2		10547725	0		/			
ANR	10547730	AdditiveExpression	a + b		10547725	0		+			
ANR	10547731	Identifier	a		10547725	0					
ANR	10547732	Identifier	b		10547725	1					
ANR	10547733	PrimaryExpression	2		10547725	1					
ANR	10547734	ReturnType	static TT_Fixed		10547725	1					
ANR	10547735	Identifier	AVE		10547725	2					
ANR	10547736	ParameterList	"F26Dot6 a , F26Dot6 b"		10547725	3					
ANR	10547737	Parameter	F26Dot6 a	45:20:1164:1172	10547725	0	True				
ANR	10547738	ParameterType	F26Dot6		10547725	0					
ANR	10547739	Identifier	a		10547725	1					
ANR	10547740	Parameter	F26Dot6 b	45:31:1175:1183	10547725	1	True				
ANR	10547741	ParameterType	F26Dot6		10547725	0					
ANR	10547742	Identifier	b		10547725	1					
ANR	10547743	CFGEntryNode	ENTRY		10547725		True				
ANR	10547744	CFGExitNode	EXIT		10547725		True				
ANR	10547745	Symbol	a		10547725						
ANR	10547746	Symbol	b		10547725						
ANR	10547747	Function	shortToF26Dot6	49:0:1213:1280							
ANR	10547748	FunctionDef	shortToF26Dot6 (short a)		10547747	0					
ANR	10547749	CompoundStatement		50:0:1252:1280	10547747	0					
ANR	10547750	ReturnStatement	return ( F26Dot6 ) a << 6 ;	50:3:1256:1278	10547747	0	True				
ANR	10547751	ShiftExpression	( F26Dot6 ) a << 6		10547747	0		<<			
ANR	10547752	CastExpression	( F26Dot6 ) a		10547747	0					
ANR	10547753	CastTarget	F26Dot6		10547747	0					
ANR	10547754	Identifier	a		10547747	1					
ANR	10547755	PrimaryExpression	6		10547747	1					
ANR	10547756	ReturnType	static F26Dot6		10547747	1					
ANR	10547757	Identifier	shortToF26Dot6		10547747	2					
ANR	10547758	ParameterList	short a		10547747	3					
ANR	10547759	Parameter	short a	49:30:1243:1249	10547747	0	True				
ANR	10547760	ParameterType	short		10547747	0					
ANR	10547761	Identifier	a		10547747	1					
ANR	10547762	CFGEntryNode	ENTRY		10547747		True				
ANR	10547763	CFGExitNode	EXIT		10547747		True				
ANR	10547764	Symbol	a		10547747						
ANR	10547765	Function	floatToF26Dot6	53:0:1283:1364							
ANR	10547766	FunctionDef	floatToF26Dot6 (float a)		10547765	0					
ANR	10547767	CompoundStatement		54:0:1322:1364	10547765	0					
ANR	10547768	ReturnStatement	return ( F26Dot6 ) ( a * ( 1 << 6 ) + 0.5 ) ;	54:3:1326:1362	10547765	0	True				
ANR	10547769	CastExpression	( F26Dot6 ) ( a * ( 1 << 6 ) + 0.5 )		10547765	0					
ANR	10547770	CastTarget	F26Dot6		10547765	0					
ANR	10547771	AdditiveExpression	a * ( 1 << 6 ) + 0.5		10547765	1		+			
ANR	10547772	MultiplicativeExpression	a * ( 1 << 6 )		10547765	0		*			
ANR	10547773	Identifier	a		10547765	0					
ANR	10547774	ShiftExpression	1 << 6		10547765	1		<<			
ANR	10547775	PrimaryExpression	1		10547765	0					
ANR	10547776	PrimaryExpression	6		10547765	1					
ANR	10547777	PrimaryExpression	0.5		10547765	1					
ANR	10547778	ReturnType	static F26Dot6		10547765	1					
ANR	10547779	Identifier	floatToF26Dot6		10547765	2					
ANR	10547780	ParameterList	float a		10547765	3					
ANR	10547781	Parameter	float a	53:30:1313:1319	10547765	0	True				
ANR	10547782	ParameterType	float		10547765	0					
ANR	10547783	Identifier	a		10547765	1					
ANR	10547784	CFGEntryNode	ENTRY		10547765		True				
ANR	10547785	CFGExitNode	EXIT		10547765		True				
ANR	10547786	Symbol	a		10547765						
ANR	10547787	Function	floatToF16Dot16	57:0:1367:1451							
ANR	10547788	FunctionDef	floatToF16Dot16 (float a)		10547787	0					
ANR	10547789	CompoundStatement		58:0:1408:1451	10547787	0					
ANR	10547790	ReturnStatement	return ( F26Dot6 ) ( a * ( 1 << 16 ) + 0.5 ) ;	58:3:1412:1449	10547787	0	True				
ANR	10547791	CastExpression	( F26Dot6 ) ( a * ( 1 << 16 ) + 0.5 )		10547787	0					
ANR	10547792	CastTarget	F26Dot6		10547787	0					
ANR	10547793	AdditiveExpression	a * ( 1 << 16 ) + 0.5		10547787	1		+			
ANR	10547794	MultiplicativeExpression	a * ( 1 << 16 )		10547787	0		*			
ANR	10547795	Identifier	a		10547787	0					
ANR	10547796	ShiftExpression	1 << 16		10547787	1		<<			
ANR	10547797	PrimaryExpression	1		10547787	0					
ANR	10547798	PrimaryExpression	16		10547787	1					
ANR	10547799	PrimaryExpression	0.5		10547787	1					
ANR	10547800	ReturnType	static TT_Fixed		10547787	1					
ANR	10547801	Identifier	floatToF16Dot16		10547787	2					
ANR	10547802	ParameterList	float a		10547787	3					
ANR	10547803	Parameter	float a	57:32:1399:1405	10547787	0	True				
ANR	10547804	ParameterType	float		10547787	0					
ANR	10547805	Identifier	a		10547787	1					
ANR	10547806	CFGEntryNode	ENTRY		10547787		True				
ANR	10547807	CFGExitNode	EXIT		10547787		True				
ANR	10547808	Symbol	a		10547787						
ANR	10547809	Function	TransformF26Dot6PointFix	61:0:1454:1705							
ANR	10547810	FunctionDef	"TransformF26Dot6PointFix (F26Dot6Point * pt , F26Dot6 dx , F26Dot6 dy , FixMatrix * m)"		10547809	0					
ANR	10547811	CompoundStatement		62:0:1547:1705	10547809	0					
ANR	10547812	ExpressionStatement	"pt -> x = MulDiv ( dx , m -> a , 65536 ) + MulDiv ( dy , m -> c , 65536 ) + ( m -> tx >> 10 )"	62:3:1551:1624	10547809	0	True				
ANR	10547813	AssignmentExpression	"pt -> x = MulDiv ( dx , m -> a , 65536 ) + MulDiv ( dy , m -> c , 65536 ) + ( m -> tx >> 10 )"		10547809	0		=			
ANR	10547814	PtrMemberAccess	pt -> x		10547809	0					
ANR	10547815	Identifier	pt		10547809	0					
ANR	10547816	Identifier	x		10547809	1					
ANR	10547817	AdditiveExpression	"MulDiv ( dx , m -> a , 65536 ) + MulDiv ( dy , m -> c , 65536 ) + ( m -> tx >> 10 )"		10547809	1		+			
ANR	10547818	CallExpression	"MulDiv ( dx , m -> a , 65536 )"		10547809	0					
ANR	10547819	Callee	MulDiv		10547809	0					
ANR	10547820	Identifier	MulDiv		10547809	0					
ANR	10547821	ArgumentList	dx		10547809	1					
ANR	10547822	Argument	dx		10547809	0					
ANR	10547823	Identifier	dx		10547809	0					
ANR	10547824	Argument	m -> a		10547809	1					
ANR	10547825	PtrMemberAccess	m -> a		10547809	0					
ANR	10547826	Identifier	m		10547809	0					
ANR	10547827	Identifier	a		10547809	1					
ANR	10547828	Argument	65536		10547809	2					
ANR	10547829	PrimaryExpression	65536		10547809	0					
ANR	10547830	AdditiveExpression	"MulDiv ( dy , m -> c , 65536 ) + ( m -> tx >> 10 )"		10547809	1		+			
ANR	10547831	CallExpression	"MulDiv ( dy , m -> c , 65536 )"		10547809	0					
ANR	10547832	Callee	MulDiv		10547809	0					
ANR	10547833	Identifier	MulDiv		10547809	0					
ANR	10547834	ArgumentList	dy		10547809	1					
ANR	10547835	Argument	dy		10547809	0					
ANR	10547836	Identifier	dy		10547809	0					
ANR	10547837	Argument	m -> c		10547809	1					
ANR	10547838	PtrMemberAccess	m -> c		10547809	0					
ANR	10547839	Identifier	m		10547809	0					
ANR	10547840	Identifier	c		10547809	1					
ANR	10547841	Argument	65536		10547809	2					
ANR	10547842	PrimaryExpression	65536		10547809	0					
ANR	10547843	ShiftExpression	m -> tx >> 10		10547809	1		>>			
ANR	10547844	PtrMemberAccess	m -> tx		10547809	0					
ANR	10547845	Identifier	m		10547809	0					
ANR	10547846	Identifier	tx		10547809	1					
ANR	10547847	PrimaryExpression	10		10547809	1					
ANR	10547848	ExpressionStatement	"pt -> y = MulDiv ( dx , m -> b , 65536 ) + MulDiv ( dy , m -> d , 65536 ) + ( m -> ty >> 10 )"	63:4:1630:1703	10547809	1	True				
ANR	10547849	AssignmentExpression	"pt -> y = MulDiv ( dx , m -> b , 65536 ) + MulDiv ( dy , m -> d , 65536 ) + ( m -> ty >> 10 )"		10547809	0		=			
ANR	10547850	PtrMemberAccess	pt -> y		10547809	0					
ANR	10547851	Identifier	pt		10547809	0					
ANR	10547852	Identifier	y		10547809	1					
ANR	10547853	AdditiveExpression	"MulDiv ( dx , m -> b , 65536 ) + MulDiv ( dy , m -> d , 65536 ) + ( m -> ty >> 10 )"		10547809	1		+			
ANR	10547854	CallExpression	"MulDiv ( dx , m -> b , 65536 )"		10547809	0					
ANR	10547855	Callee	MulDiv		10547809	0					
ANR	10547856	Identifier	MulDiv		10547809	0					
ANR	10547857	ArgumentList	dx		10547809	1					
ANR	10547858	Argument	dx		10547809	0					
ANR	10547859	Identifier	dx		10547809	0					
ANR	10547860	Argument	m -> b		10547809	1					
ANR	10547861	PtrMemberAccess	m -> b		10547809	0					
ANR	10547862	Identifier	m		10547809	0					
ANR	10547863	Identifier	b		10547809	1					
ANR	10547864	Argument	65536		10547809	2					
ANR	10547865	PrimaryExpression	65536		10547809	0					
ANR	10547866	AdditiveExpression	"MulDiv ( dy , m -> d , 65536 ) + ( m -> ty >> 10 )"		10547809	1		+			
ANR	10547867	CallExpression	"MulDiv ( dy , m -> d , 65536 )"		10547809	0					
ANR	10547868	Callee	MulDiv		10547809	0					
ANR	10547869	Identifier	MulDiv		10547809	0					
ANR	10547870	ArgumentList	dy		10547809	1					
ANR	10547871	Argument	dy		10547809	0					
ANR	10547872	Identifier	dy		10547809	0					
ANR	10547873	Argument	m -> d		10547809	1					
ANR	10547874	PtrMemberAccess	m -> d		10547809	0					
ANR	10547875	Identifier	m		10547809	0					
ANR	10547876	Identifier	d		10547809	1					
ANR	10547877	Argument	65536		10547809	2					
ANR	10547878	PrimaryExpression	65536		10547809	0					
ANR	10547879	ShiftExpression	m -> ty >> 10		10547809	1		>>			
ANR	10547880	PtrMemberAccess	m -> ty		10547809	0					
ANR	10547881	Identifier	m		10547809	0					
ANR	10547882	Identifier	ty		10547809	1					
ANR	10547883	PrimaryExpression	10		10547809	1					
ANR	10547884	ReturnType	static void		10547809	1					
ANR	10547885	Identifier	TransformF26Dot6PointFix		10547809	2					
ANR	10547886	ParameterList	"F26Dot6Point * pt , F26Dot6 dx , F26Dot6 dy , FixMatrix * m"		10547809	3					
ANR	10547887	Parameter	F26Dot6Point * pt	61:37:1491:1506	10547809	0	True				
ANR	10547888	ParameterType	F26Dot6Point *		10547809	0					
ANR	10547889	Identifier	pt		10547809	1					
ANR	10547890	Parameter	F26Dot6 dx	61:55:1509:1518	10547809	1	True				
ANR	10547891	ParameterType	F26Dot6		10547809	0					
ANR	10547892	Identifier	dx		10547809	1					
ANR	10547893	Parameter	F26Dot6 dy	61:67:1521:1530	10547809	2	True				
ANR	10547894	ParameterType	F26Dot6		10547809	0					
ANR	10547895	Identifier	dy		10547809	1					
ANR	10547896	Parameter	FixMatrix * m	61:79:1533:1544	10547809	3	True				
ANR	10547897	ParameterType	FixMatrix *		10547809	0					
ANR	10547898	Identifier	m		10547809	1					
ANR	10547899	CFGEntryNode	ENTRY		10547809		True				
ANR	10547900	CFGExitNode	EXIT		10547809		True				
ANR	10547901	Symbol	pt -> x		10547809						
ANR	10547902	Symbol	pt -> y		10547809						
ANR	10547903	Symbol	pt		10547809						
ANR	10547904	Symbol	MulDiv		10547809						
ANR	10547905	Symbol	* pt		10547809						
ANR	10547906	Symbol	m		10547809						
ANR	10547907	Symbol	m -> d		10547809						
ANR	10547908	Symbol	dx		10547809						
ANR	10547909	Symbol	dy		10547809						
ANR	10547910	Symbol	* m		10547809						
ANR	10547911	Symbol	m -> ty		10547809						
ANR	10547912	Symbol	m -> tx		10547809						
ANR	10547913	Symbol	m -> a		10547809						
ANR	10547914	Symbol	m -> b		10547809						
ANR	10547915	Symbol	m -> c		10547809						
ANR	10547916	Function	TransformF26Dot6PointFloat	66:0:1708:1909							
ANR	10547917	FunctionDef	"TransformF26Dot6PointFloat (FloatPoint * pt , F26Dot6 dx , F26Dot6 dy , FloatMatrix * m)"		10547916	0					
ANR	10547918	CompoundStatement		67:0:1803:1909	10547916	0					
ANR	10547919	ExpressionStatement	pt -> x = dx * m -> a / 64 + dy * m -> c / 64 + m -> tx	67:3:1807:1854	10547916	0	True				
ANR	10547920	AssignmentExpression	pt -> x = dx * m -> a / 64 + dy * m -> c / 64 + m -> tx		10547916	0		=			
ANR	10547921	PtrMemberAccess	pt -> x		10547916	0					
ANR	10547922	Identifier	pt		10547916	0					
ANR	10547923	Identifier	x		10547916	1					
ANR	10547924	AdditiveExpression	dx * m -> a / 64 + dy * m -> c / 64 + m -> tx		10547916	1		+			
ANR	10547925	MultiplicativeExpression	dx * m -> a / 64		10547916	0		*			
ANR	10547926	Identifier	dx		10547916	0					
ANR	10547927	MultiplicativeExpression	m -> a / 64		10547916	1		/			
ANR	10547928	PtrMemberAccess	m -> a		10547916	0					
ANR	10547929	Identifier	m		10547916	0					
ANR	10547930	Identifier	a		10547916	1					
ANR	10547931	PrimaryExpression	64		10547916	1					
ANR	10547932	AdditiveExpression	dy * m -> c / 64 + m -> tx		10547916	1		+			
ANR	10547933	MultiplicativeExpression	dy * m -> c / 64		10547916	0		*			
ANR	10547934	Identifier	dy		10547916	0					
ANR	10547935	MultiplicativeExpression	m -> c / 64		10547916	1		/			
ANR	10547936	PtrMemberAccess	m -> c		10547916	0					
ANR	10547937	Identifier	m		10547916	0					
ANR	10547938	Identifier	c		10547916	1					
ANR	10547939	PrimaryExpression	64		10547916	1					
ANR	10547940	PtrMemberAccess	m -> tx		10547916	1					
ANR	10547941	Identifier	m		10547916	0					
ANR	10547942	Identifier	tx		10547916	1					
ANR	10547943	ExpressionStatement	pt -> y = dx * m -> b / 64 + dy * m -> d / 64 + m -> ty	68:4:1860:1907	10547916	1	True				
ANR	10547944	AssignmentExpression	pt -> y = dx * m -> b / 64 + dy * m -> d / 64 + m -> ty		10547916	0		=			
ANR	10547945	PtrMemberAccess	pt -> y		10547916	0					
ANR	10547946	Identifier	pt		10547916	0					
ANR	10547947	Identifier	y		10547916	1					
ANR	10547948	AdditiveExpression	dx * m -> b / 64 + dy * m -> d / 64 + m -> ty		10547916	1		+			
ANR	10547949	MultiplicativeExpression	dx * m -> b / 64		10547916	0		*			
ANR	10547950	Identifier	dx		10547916	0					
ANR	10547951	MultiplicativeExpression	m -> b / 64		10547916	1		/			
ANR	10547952	PtrMemberAccess	m -> b		10547916	0					
ANR	10547953	Identifier	m		10547916	0					
ANR	10547954	Identifier	b		10547916	1					
ANR	10547955	PrimaryExpression	64		10547916	1					
ANR	10547956	AdditiveExpression	dy * m -> d / 64 + m -> ty		10547916	1		+			
ANR	10547957	MultiplicativeExpression	dy * m -> d / 64		10547916	0		*			
ANR	10547958	Identifier	dy		10547916	0					
ANR	10547959	MultiplicativeExpression	m -> d / 64		10547916	1		/			
ANR	10547960	PtrMemberAccess	m -> d		10547916	0					
ANR	10547961	Identifier	m		10547916	0					
ANR	10547962	Identifier	d		10547916	1					
ANR	10547963	PrimaryExpression	64		10547916	1					
ANR	10547964	PtrMemberAccess	m -> ty		10547916	1					
ANR	10547965	Identifier	m		10547916	0					
ANR	10547966	Identifier	ty		10547916	1					
ANR	10547967	ReturnType	static void		10547916	1					
ANR	10547968	Identifier	TransformF26Dot6PointFloat		10547916	2					
ANR	10547969	ParameterList	"FloatPoint * pt , F26Dot6 dx , F26Dot6 dy , FloatMatrix * m"		10547916	3					
ANR	10547970	Parameter	FloatPoint * pt	66:39:1747:1760	10547916	0	True				
ANR	10547971	ParameterType	FloatPoint *		10547916	0					
ANR	10547972	Identifier	pt		10547916	1					
ANR	10547973	Parameter	F26Dot6 dx	66:55:1763:1772	10547916	1	True				
ANR	10547974	ParameterType	F26Dot6		10547916	0					
ANR	10547975	Identifier	dx		10547916	1					
ANR	10547976	Parameter	F26Dot6 dy	66:67:1775:1784	10547916	2	True				
ANR	10547977	ParameterType	F26Dot6		10547916	0					
ANR	10547978	Identifier	dy		10547916	1					
ANR	10547979	Parameter	FloatMatrix * m	66:79:1787:1800	10547916	3	True				
ANR	10547980	ParameterType	FloatMatrix *		10547916	0					
ANR	10547981	Identifier	m		10547916	1					
ANR	10547982	CFGEntryNode	ENTRY		10547916		True				
ANR	10547983	CFGExitNode	EXIT		10547916		True				
ANR	10547984	Symbol	pt -> x		10547916						
ANR	10547985	Symbol	pt -> y		10547916						
ANR	10547986	Symbol	pt		10547916						
ANR	10547987	Symbol	* pt		10547916						
ANR	10547988	Symbol	m		10547916						
ANR	10547989	Symbol	m -> d		10547916						
ANR	10547990	Symbol	dx		10547916						
ANR	10547991	Symbol	dy		10547916						
ANR	10547992	Symbol	* m		10547916						
ANR	10547993	Symbol	m -> ty		10547916						
ANR	10547994	Symbol	m -> tx		10547916						
ANR	10547995	Symbol	m -> a		10547916						
ANR	10547996	Symbol	m -> b		10547916						
ANR	10547997	Symbol	m -> c		10547916						
ANR	10547998	Function	ttfFont__get_table_ptr	73:0:1985:2773							
ANR	10547999	FunctionDef	"ttfFont__get_table_ptr (ttfFont * f , char * id)"		10547998	0					
ANR	10548000	CompoundStatement		74:0:2049:2773	10547998	0					
ANR	10548001	IfStatement	"if ( ! memcmp ( id , ""cvt "" , 4 ) )"		10547998	0					
ANR	10548002	Condition	"! memcmp ( id , ""cvt "" , 4 )"	75:8:2059:2080	10547998	0	True				
ANR	10548003	UnaryOperationExpression	"! memcmp ( id , ""cvt "" , 4 )"		10547998	0					
ANR	10548004	UnaryOperator	!		10547998	0					
ANR	10548005	CallExpression	"memcmp ( id , ""cvt "" , 4 )"		10547998	1					
ANR	10548006	Callee	memcmp		10547998	0					
ANR	10548007	Identifier	memcmp		10547998	0					
ANR	10548008	ArgumentList	id		10547998	1					
ANR	10548009	Argument	id		10547998	0					
ANR	10548010	Identifier	id		10547998	0					
ANR	10548011	Argument	"""cvt """		10547998	1					
ANR	10548012	PrimaryExpression	"""cvt """		10547998	0					
ANR	10548013	Argument	4		10547998	2					
ANR	10548014	PrimaryExpression	4		10547998	0					
ANR	10548015	ReturnStatement	return & f -> t_cvt_ ;	76:8:2091:2108	10547998	1	True				
ANR	10548016	UnaryOperationExpression	& f -> t_cvt_		10547998	0					
ANR	10548017	UnaryOperator	&		10547998	0					
ANR	10548018	PtrMemberAccess	f -> t_cvt_		10547998	1					
ANR	10548019	Identifier	f		10547998	0					
ANR	10548020	Identifier	t_cvt_		10547998	1					
ANR	10548021	IfStatement	"if ( ! memcmp ( id , ""fpgm"" , 4 ) )"		10547998	1					
ANR	10548022	Condition	"! memcmp ( id , ""fpgm"" , 4 )"	77:8:2118:2139	10547998	0	True				
ANR	10548023	UnaryOperationExpression	"! memcmp ( id , ""fpgm"" , 4 )"		10547998	0					
ANR	10548024	UnaryOperator	!		10547998	0					
ANR	10548025	CallExpression	"memcmp ( id , ""fpgm"" , 4 )"		10547998	1					
ANR	10548026	Callee	memcmp		10547998	0					
ANR	10548027	Identifier	memcmp		10547998	0					
ANR	10548028	ArgumentList	id		10547998	1					
ANR	10548029	Argument	id		10547998	0					
ANR	10548030	Identifier	id		10547998	0					
ANR	10548031	Argument	"""fpgm"""		10547998	1					
ANR	10548032	PrimaryExpression	"""fpgm"""		10547998	0					
ANR	10548033	Argument	4		10547998	2					
ANR	10548034	PrimaryExpression	4		10547998	0					
ANR	10548035	ReturnStatement	return & f -> t_fpgm ;	78:8:2150:2167	10547998	1	True				
ANR	10548036	UnaryOperationExpression	& f -> t_fpgm		10547998	0					
ANR	10548037	UnaryOperator	&		10547998	0					
ANR	10548038	PtrMemberAccess	f -> t_fpgm		10547998	1					
ANR	10548039	Identifier	f		10547998	0					
ANR	10548040	Identifier	t_fpgm		10547998	1					
ANR	10548041	IfStatement	"if ( ! memcmp ( id , ""glyf"" , 4 ) )"		10547998	2					
ANR	10548042	Condition	"! memcmp ( id , ""glyf"" , 4 )"	79:8:2177:2198	10547998	0	True				
ANR	10548043	UnaryOperationExpression	"! memcmp ( id , ""glyf"" , 4 )"		10547998	0					
ANR	10548044	UnaryOperator	!		10547998	0					
ANR	10548045	CallExpression	"memcmp ( id , ""glyf"" , 4 )"		10547998	1					
ANR	10548046	Callee	memcmp		10547998	0					
ANR	10548047	Identifier	memcmp		10547998	0					
ANR	10548048	ArgumentList	id		10547998	1					
ANR	10548049	Argument	id		10547998	0					
ANR	10548050	Identifier	id		10547998	0					
ANR	10548051	Argument	"""glyf"""		10547998	1					
ANR	10548052	PrimaryExpression	"""glyf"""		10547998	0					
ANR	10548053	Argument	4		10547998	2					
ANR	10548054	PrimaryExpression	4		10547998	0					
ANR	10548055	ReturnStatement	return & f -> t_glyf ;	80:8:2209:2226	10547998	1	True				
ANR	10548056	UnaryOperationExpression	& f -> t_glyf		10547998	0					
ANR	10548057	UnaryOperator	&		10547998	0					
ANR	10548058	PtrMemberAccess	f -> t_glyf		10547998	1					
ANR	10548059	Identifier	f		10547998	0					
ANR	10548060	Identifier	t_glyf		10547998	1					
ANR	10548061	IfStatement	"if ( ! memcmp ( id , ""head"" , 4 ) )"		10547998	3					
ANR	10548062	Condition	"! memcmp ( id , ""head"" , 4 )"	81:8:2236:2257	10547998	0	True				
ANR	10548063	UnaryOperationExpression	"! memcmp ( id , ""head"" , 4 )"		10547998	0					
ANR	10548064	UnaryOperator	!		10547998	0					
ANR	10548065	CallExpression	"memcmp ( id , ""head"" , 4 )"		10547998	1					
ANR	10548066	Callee	memcmp		10547998	0					
ANR	10548067	Identifier	memcmp		10547998	0					
ANR	10548068	ArgumentList	id		10547998	1					
ANR	10548069	Argument	id		10547998	0					
ANR	10548070	Identifier	id		10547998	0					
ANR	10548071	Argument	"""head"""		10547998	1					
ANR	10548072	PrimaryExpression	"""head"""		10547998	0					
ANR	10548073	Argument	4		10547998	2					
ANR	10548074	PrimaryExpression	4		10547998	0					
ANR	10548075	ReturnStatement	return & f -> t_head ;	82:8:2268:2285	10547998	1	True				
ANR	10548076	UnaryOperationExpression	& f -> t_head		10547998	0					
ANR	10548077	UnaryOperator	&		10547998	0					
ANR	10548078	PtrMemberAccess	f -> t_head		10547998	1					
ANR	10548079	Identifier	f		10547998	0					
ANR	10548080	Identifier	t_head		10547998	1					
ANR	10548081	IfStatement	"if ( ! memcmp ( id , ""hhea"" , 4 ) )"		10547998	4					
ANR	10548082	Condition	"! memcmp ( id , ""hhea"" , 4 )"	83:8:2295:2316	10547998	0	True				
ANR	10548083	UnaryOperationExpression	"! memcmp ( id , ""hhea"" , 4 )"		10547998	0					
ANR	10548084	UnaryOperator	!		10547998	0					
ANR	10548085	CallExpression	"memcmp ( id , ""hhea"" , 4 )"		10547998	1					
ANR	10548086	Callee	memcmp		10547998	0					
ANR	10548087	Identifier	memcmp		10547998	0					
ANR	10548088	ArgumentList	id		10547998	1					
ANR	10548089	Argument	id		10547998	0					
ANR	10548090	Identifier	id		10547998	0					
ANR	10548091	Argument	"""hhea"""		10547998	1					
ANR	10548092	PrimaryExpression	"""hhea"""		10547998	0					
ANR	10548093	Argument	4		10547998	2					
ANR	10548094	PrimaryExpression	4		10547998	0					
ANR	10548095	ReturnStatement	return & f -> t_hhea ;	84:8:2327:2344	10547998	1	True				
ANR	10548096	UnaryOperationExpression	& f -> t_hhea		10547998	0					
ANR	10548097	UnaryOperator	&		10547998	0					
ANR	10548098	PtrMemberAccess	f -> t_hhea		10547998	1					
ANR	10548099	Identifier	f		10547998	0					
ANR	10548100	Identifier	t_hhea		10547998	1					
ANR	10548101	IfStatement	"if ( ! memcmp ( id , ""hmtx"" , 4 ) )"		10547998	5					
ANR	10548102	Condition	"! memcmp ( id , ""hmtx"" , 4 )"	85:8:2354:2375	10547998	0	True				
ANR	10548103	UnaryOperationExpression	"! memcmp ( id , ""hmtx"" , 4 )"		10547998	0					
ANR	10548104	UnaryOperator	!		10547998	0					
ANR	10548105	CallExpression	"memcmp ( id , ""hmtx"" , 4 )"		10547998	1					
ANR	10548106	Callee	memcmp		10547998	0					
ANR	10548107	Identifier	memcmp		10547998	0					
ANR	10548108	ArgumentList	id		10547998	1					
ANR	10548109	Argument	id		10547998	0					
ANR	10548110	Identifier	id		10547998	0					
ANR	10548111	Argument	"""hmtx"""		10547998	1					
ANR	10548112	PrimaryExpression	"""hmtx"""		10547998	0					
ANR	10548113	Argument	4		10547998	2					
ANR	10548114	PrimaryExpression	4		10547998	0					
ANR	10548115	ReturnStatement	return & f -> t_hmtx ;	86:8:2386:2403	10547998	1	True				
ANR	10548116	UnaryOperationExpression	& f -> t_hmtx		10547998	0					
ANR	10548117	UnaryOperator	&		10547998	0					
ANR	10548118	PtrMemberAccess	f -> t_hmtx		10547998	1					
ANR	10548119	Identifier	f		10547998	0					
ANR	10548120	Identifier	t_hmtx		10547998	1					
ANR	10548121	IfStatement	"if ( ! memcmp ( id , ""vhea"" , 4 ) )"		10547998	6					
ANR	10548122	Condition	"! memcmp ( id , ""vhea"" , 4 )"	87:8:2413:2434	10547998	0	True				
ANR	10548123	UnaryOperationExpression	"! memcmp ( id , ""vhea"" , 4 )"		10547998	0					
ANR	10548124	UnaryOperator	!		10547998	0					
ANR	10548125	CallExpression	"memcmp ( id , ""vhea"" , 4 )"		10547998	1					
ANR	10548126	Callee	memcmp		10547998	0					
ANR	10548127	Identifier	memcmp		10547998	0					
ANR	10548128	ArgumentList	id		10547998	1					
ANR	10548129	Argument	id		10547998	0					
ANR	10548130	Identifier	id		10547998	0					
ANR	10548131	Argument	"""vhea"""		10547998	1					
ANR	10548132	PrimaryExpression	"""vhea"""		10547998	0					
ANR	10548133	Argument	4		10547998	2					
ANR	10548134	PrimaryExpression	4		10547998	0					
ANR	10548135	ReturnStatement	return & f -> t_vhea ;	88:8:2445:2462	10547998	1	True				
ANR	10548136	UnaryOperationExpression	& f -> t_vhea		10547998	0					
ANR	10548137	UnaryOperator	&		10547998	0					
ANR	10548138	PtrMemberAccess	f -> t_vhea		10547998	1					
ANR	10548139	Identifier	f		10547998	0					
ANR	10548140	Identifier	t_vhea		10547998	1					
ANR	10548141	IfStatement	"if ( ! memcmp ( id , ""vmtx"" , 4 ) )"		10547998	7					
ANR	10548142	Condition	"! memcmp ( id , ""vmtx"" , 4 )"	89:8:2472:2493	10547998	0	True				
ANR	10548143	UnaryOperationExpression	"! memcmp ( id , ""vmtx"" , 4 )"		10547998	0					
ANR	10548144	UnaryOperator	!		10547998	0					
ANR	10548145	CallExpression	"memcmp ( id , ""vmtx"" , 4 )"		10547998	1					
ANR	10548146	Callee	memcmp		10547998	0					
ANR	10548147	Identifier	memcmp		10547998	0					
ANR	10548148	ArgumentList	id		10547998	1					
ANR	10548149	Argument	id		10547998	0					
ANR	10548150	Identifier	id		10547998	0					
ANR	10548151	Argument	"""vmtx"""		10547998	1					
ANR	10548152	PrimaryExpression	"""vmtx"""		10547998	0					
ANR	10548153	Argument	4		10547998	2					
ANR	10548154	PrimaryExpression	4		10547998	0					
ANR	10548155	ReturnStatement	return & f -> t_vmtx ;	90:8:2504:2521	10547998	1	True				
ANR	10548156	UnaryOperationExpression	& f -> t_vmtx		10547998	0					
ANR	10548157	UnaryOperator	&		10547998	0					
ANR	10548158	PtrMemberAccess	f -> t_vmtx		10547998	1					
ANR	10548159	Identifier	f		10547998	0					
ANR	10548160	Identifier	t_vmtx		10547998	1					
ANR	10548161	IfStatement	"if ( ! memcmp ( id , ""loca"" , 4 ) )"		10547998	8					
ANR	10548162	Condition	"! memcmp ( id , ""loca"" , 4 )"	91:8:2531:2552	10547998	0	True				
ANR	10548163	UnaryOperationExpression	"! memcmp ( id , ""loca"" , 4 )"		10547998	0					
ANR	10548164	UnaryOperator	!		10547998	0					
ANR	10548165	CallExpression	"memcmp ( id , ""loca"" , 4 )"		10547998	1					
ANR	10548166	Callee	memcmp		10547998	0					
ANR	10548167	Identifier	memcmp		10547998	0					
ANR	10548168	ArgumentList	id		10547998	1					
ANR	10548169	Argument	id		10547998	0					
ANR	10548170	Identifier	id		10547998	0					
ANR	10548171	Argument	"""loca"""		10547998	1					
ANR	10548172	PrimaryExpression	"""loca"""		10547998	0					
ANR	10548173	Argument	4		10547998	2					
ANR	10548174	PrimaryExpression	4		10547998	0					
ANR	10548175	ReturnStatement	return & f -> t_loca ;	92:8:2563:2580	10547998	1	True				
ANR	10548176	UnaryOperationExpression	& f -> t_loca		10547998	0					
ANR	10548177	UnaryOperator	&		10547998	0					
ANR	10548178	PtrMemberAccess	f -> t_loca		10547998	1					
ANR	10548179	Identifier	f		10547998	0					
ANR	10548180	Identifier	t_loca		10547998	1					
ANR	10548181	IfStatement	"if ( ! memcmp ( id , ""maxp"" , 4 ) )"		10547998	9					
ANR	10548182	Condition	"! memcmp ( id , ""maxp"" , 4 )"	93:8:2590:2611	10547998	0	True				
ANR	10548183	UnaryOperationExpression	"! memcmp ( id , ""maxp"" , 4 )"		10547998	0					
ANR	10548184	UnaryOperator	!		10547998	0					
ANR	10548185	CallExpression	"memcmp ( id , ""maxp"" , 4 )"		10547998	1					
ANR	10548186	Callee	memcmp		10547998	0					
ANR	10548187	Identifier	memcmp		10547998	0					
ANR	10548188	ArgumentList	id		10547998	1					
ANR	10548189	Argument	id		10547998	0					
ANR	10548190	Identifier	id		10547998	0					
ANR	10548191	Argument	"""maxp"""		10547998	1					
ANR	10548192	PrimaryExpression	"""maxp"""		10547998	0					
ANR	10548193	Argument	4		10547998	2					
ANR	10548194	PrimaryExpression	4		10547998	0					
ANR	10548195	ReturnStatement	return & f -> t_maxp ;	94:8:2622:2639	10547998	1	True				
ANR	10548196	UnaryOperationExpression	& f -> t_maxp		10547998	0					
ANR	10548197	UnaryOperator	&		10547998	0					
ANR	10548198	PtrMemberAccess	f -> t_maxp		10547998	1					
ANR	10548199	Identifier	f		10547998	0					
ANR	10548200	Identifier	t_maxp		10547998	1					
ANR	10548201	IfStatement	"if ( ! memcmp ( id , ""prep"" , 4 ) )"		10547998	10					
ANR	10548202	Condition	"! memcmp ( id , ""prep"" , 4 )"	95:8:2649:2670	10547998	0	True				
ANR	10548203	UnaryOperationExpression	"! memcmp ( id , ""prep"" , 4 )"		10547998	0					
ANR	10548204	UnaryOperator	!		10547998	0					
ANR	10548205	CallExpression	"memcmp ( id , ""prep"" , 4 )"		10547998	1					
ANR	10548206	Callee	memcmp		10547998	0					
ANR	10548207	Identifier	memcmp		10547998	0					
ANR	10548208	ArgumentList	id		10547998	1					
ANR	10548209	Argument	id		10547998	0					
ANR	10548210	Identifier	id		10547998	0					
ANR	10548211	Argument	"""prep"""		10547998	1					
ANR	10548212	PrimaryExpression	"""prep"""		10547998	0					
ANR	10548213	Argument	4		10547998	2					
ANR	10548214	PrimaryExpression	4		10547998	0					
ANR	10548215	ReturnStatement	return & f -> t_prep ;	96:8:2681:2698	10547998	1	True				
ANR	10548216	UnaryOperationExpression	& f -> t_prep		10547998	0					
ANR	10548217	UnaryOperator	&		10547998	0					
ANR	10548218	PtrMemberAccess	f -> t_prep		10547998	1					
ANR	10548219	Identifier	f		10547998	0					
ANR	10548220	Identifier	t_prep		10547998	1					
ANR	10548221	IfStatement	"if ( ! memcmp ( id , ""cmap"" , 4 ) )"		10547998	11					
ANR	10548222	Condition	"! memcmp ( id , ""cmap"" , 4 )"	97:8:2708:2729	10547998	0	True				
ANR	10548223	UnaryOperationExpression	"! memcmp ( id , ""cmap"" , 4 )"		10547998	0					
ANR	10548224	UnaryOperator	!		10547998	0					
ANR	10548225	CallExpression	"memcmp ( id , ""cmap"" , 4 )"		10547998	1					
ANR	10548226	Callee	memcmp		10547998	0					
ANR	10548227	Identifier	memcmp		10547998	0					
ANR	10548228	ArgumentList	id		10547998	1					
ANR	10548229	Argument	id		10547998	0					
ANR	10548230	Identifier	id		10547998	0					
ANR	10548231	Argument	"""cmap"""		10547998	1					
ANR	10548232	PrimaryExpression	"""cmap"""		10547998	0					
ANR	10548233	Argument	4		10547998	2					
ANR	10548234	PrimaryExpression	4		10547998	0					
ANR	10548235	ReturnStatement	return & f -> t_cmap ;	98:8:2740:2757	10547998	1	True				
ANR	10548236	UnaryOperationExpression	& f -> t_cmap		10547998	0					
ANR	10548237	UnaryOperator	&		10547998	0					
ANR	10548238	PtrMemberAccess	f -> t_cmap		10547998	1					
ANR	10548239	Identifier	f		10547998	0					
ANR	10548240	Identifier	t_cmap		10547998	1					
ANR	10548241	ReturnStatement	return 0 ;	99:4:2763:2771	10547998	12	True				
ANR	10548242	PrimaryExpression	0		10547998	0					
ANR	10548243	ReturnType	static ttfPtrElem *		10547998	1					
ANR	10548244	Identifier	ttfFont__get_table_ptr		10547998	2					
ANR	10548245	ParameterList	"ttfFont * f , char * id"		10547998	3					
ANR	10548246	Parameter	ttfFont * f	73:42:2027:2036	10547998	0	True				
ANR	10548247	ParameterType	ttfFont *		10547998	0					
ANR	10548248	Identifier	f		10547998	1					
ANR	10548249	Parameter	char * id	73:54:2039:2046	10547998	1	True				
ANR	10548250	ParameterType	char *		10547998	0					
ANR	10548251	Identifier	id		10547998	1					
ANR	10548252	CFGEntryNode	ENTRY		10547998		True				
ANR	10548253	CFGExitNode	EXIT		10547998		True				
ANR	10548254	Symbol	& f -> t_vhea		10547998						
ANR	10548255	Symbol	& f -> t_hmtx		10547998						
ANR	10548256	Symbol	f		10547998						
ANR	10548257	Symbol	& f -> t_hhea		10547998						
ANR	10548258	Symbol	& f -> t_loca		10547998						
ANR	10548259	Symbol	& f -> t_cvt_		10547998						
ANR	10548260	Symbol	& f -> t_head		10547998						
ANR	10548261	Symbol	& f -> t_vmtx		10547998						
ANR	10548262	Symbol	& f -> t_glyf		10547998						
ANR	10548263	Symbol	memcmp		10547998						
ANR	10548264	Symbol	& f -> t_cmap		10547998						
ANR	10548265	Symbol	id		10547998						
ANR	10548266	Symbol	& f -> t_prep		10547998						
ANR	10548267	Symbol	& f -> t_maxp		10547998						
ANR	10548268	Symbol	& f -> t_fpgm		10547998						
ANR	10548269	Function	TT_Set_Instance_CharSizes	104:0:2849:3923							
ANR	10548270	FunctionDef	"TT_Set_Instance_CharSizes (TT_Instance instance , TT_F26Dot6 charWidth , TT_F26Dot6 charHeight)"		10548269	0					
ANR	10548271	CompoundStatement		107:0:3035:3923	10548269	0					
ANR	10548272	IdentifierDeclStatement	PInstance ins = instance . z ;	108:4:3041:3068	10548269	0	True				
ANR	10548273	IdentifierDecl	ins = instance . z		10548269	0					
ANR	10548274	IdentifierDeclType	PInstance		10548269	0					
ANR	10548275	Identifier	ins		10548269	1					
ANR	10548276	AssignmentExpression	ins = instance . z		10548269	2		=			
ANR	10548277	Identifier	ins		10548269	0					
ANR	10548278	MemberAccess	instance . z		10548269	1					
ANR	10548279	Identifier	instance		10548269	0					
ANR	10548280	Identifier	z		10548269	1					
ANR	10548281	IfStatement	if ( ! ins )		10548269	1					
ANR	10548282	Condition	! ins	110:9:3080:3083	10548269	0	True				
ANR	10548283	UnaryOperationExpression	! ins		10548269	0					
ANR	10548284	UnaryOperator	!		10548269	0					
ANR	10548285	Identifier	ins		10548269	1					
ANR	10548286	ReturnStatement	return TT_Err_Invalid_Instance_Handle ;	111:8:3095:3132	10548269	1	True				
ANR	10548287	Identifier	TT_Err_Invalid_Instance_Handle		10548269	0					
ANR	10548288	IfStatement	if ( charWidth < 1 * 64 )		10548269	2					
ANR	10548289	Condition	charWidth < 1 * 64	113:8:3143:3158	10548269	0	True				
ANR	10548290	RelationalExpression	charWidth < 1 * 64		10548269	0		<			
ANR	10548291	Identifier	charWidth		10548269	0					
ANR	10548292	MultiplicativeExpression	1 * 64		10548269	1		*			
ANR	10548293	PrimaryExpression	1		10548269	0					
ANR	10548294	PrimaryExpression	64		10548269	1					
ANR	10548295	ExpressionStatement	charWidth = 1 * 64	114:8:3169:3185	10548269	1	True				
ANR	10548296	AssignmentExpression	charWidth = 1 * 64		10548269	0		=			
ANR	10548297	Identifier	charWidth		10548269	0					
ANR	10548298	MultiplicativeExpression	1 * 64		10548269	1		*			
ANR	10548299	PrimaryExpression	1		10548269	0					
ANR	10548300	PrimaryExpression	64		10548269	1					
ANR	10548301	IfStatement	if ( charHeight < 1 * 64 )		10548269	3					
ANR	10548302	Condition	charHeight < 1 * 64	116:8:3196:3212	10548269	0	True				
ANR	10548303	RelationalExpression	charHeight < 1 * 64		10548269	0		<			
ANR	10548304	Identifier	charHeight		10548269	0					
ANR	10548305	MultiplicativeExpression	1 * 64		10548269	1		*			
ANR	10548306	PrimaryExpression	1		10548269	0					
ANR	10548307	PrimaryExpression	64		10548269	1					
ANR	10548308	ExpressionStatement	charHeight = 1 * 64	117:8:3223:3240	10548269	1	True				
ANR	10548309	AssignmentExpression	charHeight = 1 * 64		10548269	0		=			
ANR	10548310	Identifier	charHeight		10548269	0					
ANR	10548311	MultiplicativeExpression	1 * 64		10548269	1		*			
ANR	10548312	PrimaryExpression	1		10548269	0					
ANR	10548313	PrimaryExpression	64		10548269	1					
ANR	10548314	ExpressionStatement	ins -> metrics . x_scale1 = charWidth	119:4:3247:3280	10548269	4	True				
ANR	10548315	AssignmentExpression	ins -> metrics . x_scale1 = charWidth		10548269	0		=			
ANR	10548316	MemberAccess	ins -> metrics . x_scale1		10548269	0					
ANR	10548317	PtrMemberAccess	ins -> metrics		10548269	0					
ANR	10548318	Identifier	ins		10548269	0					
ANR	10548319	Identifier	metrics		10548269	1					
ANR	10548320	Identifier	x_scale1		10548269	1					
ANR	10548321	Identifier	charWidth		10548269	1					
ANR	10548322	ExpressionStatement	ins -> metrics . y_scale1 = charHeight	120:4:3286:3320	10548269	5	True				
ANR	10548323	AssignmentExpression	ins -> metrics . y_scale1 = charHeight		10548269	0		=			
ANR	10548324	MemberAccess	ins -> metrics . y_scale1		10548269	0					
ANR	10548325	PtrMemberAccess	ins -> metrics		10548269	0					
ANR	10548326	Identifier	ins		10548269	0					
ANR	10548327	Identifier	metrics		10548269	1					
ANR	10548328	Identifier	y_scale1		10548269	1					
ANR	10548329	Identifier	charHeight		10548269	1					
ANR	10548330	ExpressionStatement	ins -> metrics . x_scale2 = ins -> face -> font -> nUnitsPerEm	121:4:3326:3378	10548269	6	True				
ANR	10548331	AssignmentExpression	ins -> metrics . x_scale2 = ins -> face -> font -> nUnitsPerEm		10548269	0		=			
ANR	10548332	MemberAccess	ins -> metrics . x_scale2		10548269	0					
ANR	10548333	PtrMemberAccess	ins -> metrics		10548269	0					
ANR	10548334	Identifier	ins		10548269	0					
ANR	10548335	Identifier	metrics		10548269	1					
ANR	10548336	Identifier	x_scale2		10548269	1					
ANR	10548337	PtrMemberAccess	ins -> face -> font -> nUnitsPerEm		10548269	1					
ANR	10548338	PtrMemberAccess	ins -> face -> font		10548269	0					
ANR	10548339	PtrMemberAccess	ins -> face		10548269	0					
ANR	10548340	Identifier	ins		10548269	0					
ANR	10548341	Identifier	face		10548269	1					
ANR	10548342	Identifier	font		10548269	1					
ANR	10548343	Identifier	nUnitsPerEm		10548269	1					
ANR	10548344	ExpressionStatement	ins -> metrics . y_scale2 = ins -> face -> font -> nUnitsPerEm	122:4:3384:3436	10548269	7	True				
ANR	10548345	AssignmentExpression	ins -> metrics . y_scale2 = ins -> face -> font -> nUnitsPerEm		10548269	0		=			
ANR	10548346	MemberAccess	ins -> metrics . y_scale2		10548269	0					
ANR	10548347	PtrMemberAccess	ins -> metrics		10548269	0					
ANR	10548348	Identifier	ins		10548269	0					
ANR	10548349	Identifier	metrics		10548269	1					
ANR	10548350	Identifier	y_scale2		10548269	1					
ANR	10548351	PtrMemberAccess	ins -> face -> font -> nUnitsPerEm		10548269	1					
ANR	10548352	PtrMemberAccess	ins -> face -> font		10548269	0					
ANR	10548353	PtrMemberAccess	ins -> face		10548269	0					
ANR	10548354	Identifier	ins		10548269	0					
ANR	10548355	Identifier	face		10548269	1					
ANR	10548356	Identifier	font		10548269	1					
ANR	10548357	Identifier	nUnitsPerEm		10548269	1					
ANR	10548358	IfStatement	if ( ins -> face -> font -> nFlags & 8 )		10548269	8					
ANR	10548359	Condition	ins -> face -> font -> nFlags & 8	124:8:3447:3473	10548269	0	True				
ANR	10548360	BitAndExpression	ins -> face -> font -> nFlags & 8		10548269	0		&			
ANR	10548361	PtrMemberAccess	ins -> face -> font -> nFlags		10548269	0					
ANR	10548362	PtrMemberAccess	ins -> face -> font		10548269	0					
ANR	10548363	PtrMemberAccess	ins -> face		10548269	0					
ANR	10548364	Identifier	ins		10548269	0					
ANR	10548365	Identifier	face		10548269	1					
ANR	10548366	Identifier	font		10548269	1					
ANR	10548367	Identifier	nFlags		10548269	1					
ANR	10548368	PrimaryExpression	8		10548269	1					
ANR	10548369	CompoundStatement		18:37:440:440	10548269	1					
ANR	10548370	ExpressionStatement	ins -> metrics . x_scale1 = ( ins -> metrics . x_scale1 + 32 ) & - 64	125:8:3486:3542	10548269	0	True				
ANR	10548371	AssignmentExpression	ins -> metrics . x_scale1 = ( ins -> metrics . x_scale1 + 32 ) & - 64		10548269	0		=			
ANR	10548372	MemberAccess	ins -> metrics . x_scale1		10548269	0					
ANR	10548373	PtrMemberAccess	ins -> metrics		10548269	0					
ANR	10548374	Identifier	ins		10548269	0					
ANR	10548375	Identifier	metrics		10548269	1					
ANR	10548376	Identifier	x_scale1		10548269	1					
ANR	10548377	BitAndExpression	( ins -> metrics . x_scale1 + 32 ) & - 64		10548269	1		&			
ANR	10548378	AdditiveExpression	ins -> metrics . x_scale1 + 32		10548269	0		+			
ANR	10548379	MemberAccess	ins -> metrics . x_scale1		10548269	0					
ANR	10548380	PtrMemberAccess	ins -> metrics		10548269	0					
ANR	10548381	Identifier	ins		10548269	0					
ANR	10548382	Identifier	metrics		10548269	1					
ANR	10548383	Identifier	x_scale1		10548269	1					
ANR	10548384	PrimaryExpression	32		10548269	1					
ANR	10548385	UnaryOperationExpression	- 64		10548269	1					
ANR	10548386	UnaryOperator	-		10548269	0					
ANR	10548387	PrimaryExpression	64		10548269	1					
ANR	10548388	ExpressionStatement	ins -> metrics . y_scale1 = ( ins -> metrics . y_scale1 + 32 ) & - 64	126:8:3552:3608	10548269	1	True				
ANR	10548389	AssignmentExpression	ins -> metrics . y_scale1 = ( ins -> metrics . y_scale1 + 32 ) & - 64		10548269	0		=			
ANR	10548390	MemberAccess	ins -> metrics . y_scale1		10548269	0					
ANR	10548391	PtrMemberAccess	ins -> metrics		10548269	0					
ANR	10548392	Identifier	ins		10548269	0					
ANR	10548393	Identifier	metrics		10548269	1					
ANR	10548394	Identifier	y_scale1		10548269	1					
ANR	10548395	BitAndExpression	( ins -> metrics . y_scale1 + 32 ) & - 64		10548269	1		&			
ANR	10548396	AdditiveExpression	ins -> metrics . y_scale1 + 32		10548269	0		+			
ANR	10548397	MemberAccess	ins -> metrics . y_scale1		10548269	0					
ANR	10548398	PtrMemberAccess	ins -> metrics		10548269	0					
ANR	10548399	Identifier	ins		10548269	0					
ANR	10548400	Identifier	metrics		10548269	1					
ANR	10548401	Identifier	y_scale1		10548269	1					
ANR	10548402	PrimaryExpression	32		10548269	1					
ANR	10548403	UnaryOperationExpression	- 64		10548269	1					
ANR	10548404	UnaryOperator	-		10548269	0					
ANR	10548405	PrimaryExpression	64		10548269	1					
ANR	10548406	ExpressionStatement	ins -> metrics . x_ppem = ins -> metrics . x_scale1 / 64	129:4:3621:3669	10548269	9	True				
ANR	10548407	AssignmentExpression	ins -> metrics . x_ppem = ins -> metrics . x_scale1 / 64		10548269	0		=			
ANR	10548408	MemberAccess	ins -> metrics . x_ppem		10548269	0					
ANR	10548409	PtrMemberAccess	ins -> metrics		10548269	0					
ANR	10548410	Identifier	ins		10548269	0					
ANR	10548411	Identifier	metrics		10548269	1					
ANR	10548412	Identifier	x_ppem		10548269	1					
ANR	10548413	MultiplicativeExpression	ins -> metrics . x_scale1 / 64		10548269	1		/			
ANR	10548414	MemberAccess	ins -> metrics . x_scale1		10548269	0					
ANR	10548415	PtrMemberAccess	ins -> metrics		10548269	0					
ANR	10548416	Identifier	ins		10548269	0					
ANR	10548417	Identifier	metrics		10548269	1					
ANR	10548418	Identifier	x_scale1		10548269	1					
ANR	10548419	PrimaryExpression	64		10548269	1					
ANR	10548420	ExpressionStatement	ins -> metrics . y_ppem = ins -> metrics . y_scale1 / 64	130:4:3675:3723	10548269	10	True				
ANR	10548421	AssignmentExpression	ins -> metrics . y_ppem = ins -> metrics . y_scale1 / 64		10548269	0		=			
ANR	10548422	MemberAccess	ins -> metrics . y_ppem		10548269	0					
ANR	10548423	PtrMemberAccess	ins -> metrics		10548269	0					
ANR	10548424	Identifier	ins		10548269	0					
ANR	10548425	Identifier	metrics		10548269	1					
ANR	10548426	Identifier	y_ppem		10548269	1					
ANR	10548427	MultiplicativeExpression	ins -> metrics . y_scale1 / 64		10548269	1		/			
ANR	10548428	MemberAccess	ins -> metrics . y_scale1		10548269	0					
ANR	10548429	PtrMemberAccess	ins -> metrics		10548269	0					
ANR	10548430	Identifier	ins		10548269	0					
ANR	10548431	Identifier	metrics		10548269	1					
ANR	10548432	Identifier	y_scale1		10548269	1					
ANR	10548433	PrimaryExpression	64		10548269	1					
ANR	10548434	IfStatement	if ( charWidth > charHeight )		10548269	11					
ANR	10548435	Condition	charWidth > charHeight	132:8:3734:3755	10548269	0	True				
ANR	10548436	RelationalExpression	charWidth > charHeight		10548269	0		>			
ANR	10548437	Identifier	charWidth		10548269	0					
ANR	10548438	Identifier	charHeight		10548269	1					
ANR	10548439	ExpressionStatement	ins -> metrics . pointSize = charWidth	133:8:3766:3800	10548269	1	True				
ANR	10548440	AssignmentExpression	ins -> metrics . pointSize = charWidth		10548269	0		=			
ANR	10548441	MemberAccess	ins -> metrics . pointSize		10548269	0					
ANR	10548442	PtrMemberAccess	ins -> metrics		10548269	0					
ANR	10548443	Identifier	ins		10548269	0					
ANR	10548444	Identifier	metrics		10548269	1					
ANR	10548445	Identifier	pointSize		10548269	1					
ANR	10548446	Identifier	charWidth		10548269	1					
ANR	10548447	ElseStatement	else		10548269	0					
ANR	10548448	ExpressionStatement	ins -> metrics . pointSize = charHeight	135:8:3819:3854	10548269	0	True				
ANR	10548449	AssignmentExpression	ins -> metrics . pointSize = charHeight		10548269	0		=			
ANR	10548450	MemberAccess	ins -> metrics . pointSize		10548269	0					
ANR	10548451	PtrMemberAccess	ins -> metrics		10548269	0					
ANR	10548452	Identifier	ins		10548269	0					
ANR	10548453	Identifier	metrics		10548269	1					
ANR	10548454	Identifier	pointSize		10548269	1					
ANR	10548455	Identifier	charHeight		10548269	1					
ANR	10548456	ExpressionStatement	ins -> valid = FALSE	137:4:3861:3880	10548269	12	True				
ANR	10548457	AssignmentExpression	ins -> valid = FALSE		10548269	0		=			
ANR	10548458	PtrMemberAccess	ins -> valid		10548269	0					
ANR	10548459	Identifier	ins		10548269	0					
ANR	10548460	Identifier	valid		10548269	1					
ANR	10548461	Identifier	FALSE		10548269	1					
ANR	10548462	ReturnStatement	"return Instance_Reset ( ins , FALSE ) ;"	138:4:3886:3919	10548269	13	True				
ANR	10548463	CallExpression	"Instance_Reset ( ins , FALSE )"		10548269	0					
ANR	10548464	Callee	Instance_Reset		10548269	0					
ANR	10548465	Identifier	Instance_Reset		10548269	0					
ANR	10548466	ArgumentList	ins		10548269	1					
ANR	10548467	Argument	ins		10548269	0					
ANR	10548468	Identifier	ins		10548269	0					
ANR	10548469	Argument	FALSE		10548269	1					
ANR	10548470	Identifier	FALSE		10548269	0					
ANR	10548471	ReturnType	TT_Error		10548269	1					
ANR	10548472	Identifier	TT_Set_Instance_CharSizes		10548269	2					
ANR	10548473	ParameterList	"TT_Instance instance , TT_F26Dot6 charWidth , TT_F26Dot6 charHeight"		10548269	3					
ANR	10548474	Parameter	TT_Instance instance	104:36:2885:2905	10548269	0	True				
ANR	10548475	ParameterType	TT_Instance		10548269	0					
ANR	10548476	Identifier	instance		10548269	1					
ANR	10548477	Parameter	TT_F26Dot6 charWidth	105:39:2947:2968	10548269	1	True				
ANR	10548478	ParameterType	TT_F26Dot6		10548269	0					
ANR	10548479	Identifier	charWidth		10548269	1					
ANR	10548480	Parameter	TT_F26Dot6 charHeight	106:39:3010:3032	10548269	2	True				
ANR	10548481	ParameterType	TT_F26Dot6		10548269	0					
ANR	10548482	Identifier	charHeight		10548269	1					
ANR	10548483	CFGEntryNode	ENTRY		10548269		True				
ANR	10548484	CFGExitNode	EXIT		10548269		True				
ANR	10548485	Symbol	ins -> face -> font		10548269						
ANR	10548486	Symbol	* * ins		10548269						
ANR	10548487	Symbol	instance		10548269						
ANR	10548488	Symbol	ins -> metrics		10548269						
ANR	10548489	Symbol	ins -> metrics . x_ppem		10548269						
ANR	10548490	Symbol	* ins -> face -> font		10548269						
ANR	10548491	Symbol	Instance_Reset		10548269						
ANR	10548492	Symbol	ins -> face		10548269						
ANR	10548493	Symbol	ins -> metrics . pointSize		10548269						
ANR	10548494	Symbol	instance . z		10548269						
ANR	10548495	Symbol	ins -> face -> font -> nUnitsPerEm		10548269						
ANR	10548496	Symbol	charWidth		10548269						
ANR	10548497	Symbol	* ins		10548269						
ANR	10548498	Symbol	TT_Err_Invalid_Instance_Handle		10548269						
ANR	10548499	Symbol	* * * ins		10548269						
ANR	10548500	Symbol	* * ins -> face		10548269						
ANR	10548501	Symbol	ins -> face -> font -> nFlags		10548269						
ANR	10548502	Symbol	* ins -> face		10548269						
ANR	10548503	Symbol	ins		10548269						
ANR	10548504	Symbol	ins -> metrics . y_ppem		10548269						
ANR	10548505	Symbol	ins -> valid		10548269						
ANR	10548506	Symbol	charHeight		10548269						
ANR	10548507	Symbol	ins -> metrics . y_scale2		10548269						
ANR	10548508	Symbol	ins -> metrics . x_scale2		10548269						
ANR	10548509	Symbol	ins -> metrics . x_scale1		10548269						
ANR	10548510	Symbol	ins -> metrics . y_scale1		10548269						
ANR	10548511	Symbol	FALSE		10548269						
ANR	10548512	Function	ttfInterpreter__obtain	143:0:3999:4710							
ANR	10548513	FunctionDef	"ttfInterpreter__obtain (ttfMemory * mem , ttfInterpreter * * ptti)"		10548512	0					
ANR	10548514	CompoundStatement		144:0:4065:4710	10548512	0					
ANR	10548515	IdentifierDeclStatement	ttfInterpreter * tti ;	145:4:4071:4090	10548512	0	True				
ANR	10548516	IdentifierDecl	* tti		10548512	0					
ANR	10548517	IdentifierDeclType	ttfInterpreter *		10548512	0					
ANR	10548518	Identifier	tti		10548512	1					
ANR	10548519	IfStatement	if ( * ptti )		10548512	1					
ANR	10548520	Condition	* ptti	147:8:4101:4105	10548512	0	True				
ANR	10548521	UnaryOperationExpression	* ptti		10548512	0					
ANR	10548522	UnaryOperator	*		10548512	0					
ANR	10548523	Identifier	ptti		10548512	1					
ANR	10548524	CompoundStatement		4:15:42:42	10548512	1					
ANR	10548525	ExpressionStatement	( * ptti ) -> lock ++	148:8:4118:4133	10548512	0	True				
ANR	10548526	PostIncDecOperationExpression	( * ptti ) -> lock ++		10548512	0					
ANR	10548527	PtrMemberAccess	( * ptti ) -> lock		10548512	0					
ANR	10548528	UnaryOperationExpression	* ptti		10548512	0					
ANR	10548529	UnaryOperator	*		10548512	0					
ANR	10548530	Identifier	ptti		10548512	1					
ANR	10548531	Identifier	lock		10548512	1					
ANR	10548532	IncDec	++		10548512	1					
ANR	10548533	ReturnStatement	return 0 ;	149:8:4143:4151	10548512	1	True				
ANR	10548534	PrimaryExpression	0		10548512	0					
ANR	10548535	ExpressionStatement	"tti = mem -> alloc_struct ( mem , ( const ttfMemoryDescriptor * ) & st_ttfInterpreter , ""ttfInterpreter__obtain"" )"	151:4:4163:4266	10548512	2	True				
ANR	10548536	AssignmentExpression	"tti = mem -> alloc_struct ( mem , ( const ttfMemoryDescriptor * ) & st_ttfInterpreter , ""ttfInterpreter__obtain"" )"		10548512	0		=			
ANR	10548537	Identifier	tti		10548512	0					
ANR	10548538	CallExpression	"mem -> alloc_struct ( mem , ( const ttfMemoryDescriptor * ) & st_ttfInterpreter , ""ttfInterpreter__obtain"" )"		10548512	1					
ANR	10548539	Callee	mem -> alloc_struct		10548512	0					
ANR	10548540	PtrMemberAccess	mem -> alloc_struct		10548512	0					
ANR	10548541	Identifier	mem		10548512	0					
ANR	10548542	Identifier	alloc_struct		10548512	1					
ANR	10548543	ArgumentList	mem		10548512	1					
ANR	10548544	Argument	mem		10548512	0					
ANR	10548545	Identifier	mem		10548512	0					
ANR	10548546	Argument	( const ttfMemoryDescriptor * ) & st_ttfInterpreter		10548512	1					
ANR	10548547	CastExpression	( const ttfMemoryDescriptor * ) & st_ttfInterpreter		10548512	0					
ANR	10548548	CastTarget	const ttfMemoryDescriptor *		10548512	0					
ANR	10548549	UnaryOperationExpression	& st_ttfInterpreter		10548512	1					
ANR	10548550	UnaryOperator	&		10548512	0					
ANR	10548551	Identifier	st_ttfInterpreter		10548512	1					
ANR	10548552	Argument	"""ttfInterpreter__obtain"""		10548512	2					
ANR	10548553	PrimaryExpression	"""ttfInterpreter__obtain"""		10548512	0					
ANR	10548554	IfStatement	if ( ! tti )		10548512	3					
ANR	10548555	Condition	! tti	152:8:4276:4279	10548512	0	True				
ANR	10548556	UnaryOperationExpression	! tti		10548512	0					
ANR	10548557	UnaryOperator	!		10548512	0					
ANR	10548558	Identifier	tti		10548512	1					
ANR	10548559	ReturnStatement	return fMemoryError ;	153:8:4290:4309	10548512	1	True				
ANR	10548560	Identifier	fMemoryError		10548512	0					
ANR	10548561	ExpressionStatement	tti -> usage = 0	154:4:4315:4329	10548512	4	True				
ANR	10548562	AssignmentExpression	tti -> usage = 0		10548512	0		=			
ANR	10548563	PtrMemberAccess	tti -> usage		10548512	0					
ANR	10548564	Identifier	tti		10548512	0					
ANR	10548565	Identifier	usage		10548512	1					
ANR	10548566	PrimaryExpression	0		10548512	1					
ANR	10548567	ExpressionStatement	tti -> usage_size = 0	155:4:4335:4354	10548512	5	True				
ANR	10548568	AssignmentExpression	tti -> usage_size = 0		10548512	0		=			
ANR	10548569	PtrMemberAccess	tti -> usage_size		10548512	0					
ANR	10548570	Identifier	tti		10548512	0					
ANR	10548571	Identifier	usage_size		10548512	1					
ANR	10548572	PrimaryExpression	0		10548512	1					
ANR	10548573	ExpressionStatement	tti -> ttf_memory = mem	156:4:4360:4381	10548512	6	True				
ANR	10548574	AssignmentExpression	tti -> ttf_memory = mem		10548512	0		=			
ANR	10548575	PtrMemberAccess	tti -> ttf_memory		10548512	0					
ANR	10548576	Identifier	tti		10548512	0					
ANR	10548577	Identifier	ttf_memory		10548512	1					
ANR	10548578	Identifier	mem		10548512	1					
ANR	10548579	ExpressionStatement	tti -> lock = 1	157:4:4387:4400	10548512	7	True				
ANR	10548580	AssignmentExpression	tti -> lock = 1		10548512	0		=			
ANR	10548581	PtrMemberAccess	tti -> lock		10548512	0					
ANR	10548582	Identifier	tti		10548512	0					
ANR	10548583	Identifier	lock		10548512	1					
ANR	10548584	PrimaryExpression	1		10548512	1					
ANR	10548585	ExpressionStatement	"tti -> exec = mem -> alloc_struct ( mem , ( const ttfMemoryDescriptor * ) & st_TExecution_Context , ""ttfInterpreter__obtain"" )"	158:4:4406:4519	10548512	8	True				
ANR	10548586	AssignmentExpression	"tti -> exec = mem -> alloc_struct ( mem , ( const ttfMemoryDescriptor * ) & st_TExecution_Context , ""ttfInterpreter__obtain"" )"		10548512	0		=			
ANR	10548587	PtrMemberAccess	tti -> exec		10548512	0					
ANR	10548588	Identifier	tti		10548512	0					
ANR	10548589	Identifier	exec		10548512	1					
ANR	10548590	CallExpression	"mem -> alloc_struct ( mem , ( const ttfMemoryDescriptor * ) & st_TExecution_Context , ""ttfInterpreter__obtain"" )"		10548512	1					
ANR	10548591	Callee	mem -> alloc_struct		10548512	0					
ANR	10548592	PtrMemberAccess	mem -> alloc_struct		10548512	0					
ANR	10548593	Identifier	mem		10548512	0					
ANR	10548594	Identifier	alloc_struct		10548512	1					
ANR	10548595	ArgumentList	mem		10548512	1					
ANR	10548596	Argument	mem		10548512	0					
ANR	10548597	Identifier	mem		10548512	0					
ANR	10548598	Argument	( const ttfMemoryDescriptor * ) & st_TExecution_Context		10548512	1					
ANR	10548599	CastExpression	( const ttfMemoryDescriptor * ) & st_TExecution_Context		10548512	0					
ANR	10548600	CastTarget	const ttfMemoryDescriptor *		10548512	0					
ANR	10548601	UnaryOperationExpression	& st_TExecution_Context		10548512	1					
ANR	10548602	UnaryOperator	&		10548512	0					
ANR	10548603	Identifier	st_TExecution_Context		10548512	1					
ANR	10548604	Argument	"""ttfInterpreter__obtain"""		10548512	2					
ANR	10548605	PrimaryExpression	"""ttfInterpreter__obtain"""		10548512	0					
ANR	10548606	IfStatement	if ( ! tti -> exec )		10548512	9					
ANR	10548607	Condition	! tti -> exec	159:8:4529:4538	10548512	0	True				
ANR	10548608	UnaryOperationExpression	! tti -> exec		10548512	0					
ANR	10548609	UnaryOperator	!		10548512	0					
ANR	10548610	PtrMemberAccess	tti -> exec		10548512	1					
ANR	10548611	Identifier	tti		10548512	0					
ANR	10548612	Identifier	exec		10548512	1					
ANR	10548613	CompoundStatement		16:20:475:475	10548512	1					
ANR	10548614	ExpressionStatement	"mem -> free ( mem , tti , ""ttfInterpreter__obtain"" )"	160:8:4551:4596	10548512	0	True				
ANR	10548615	CallExpression	"mem -> free ( mem , tti , ""ttfInterpreter__obtain"" )"		10548512	0					
ANR	10548616	Callee	mem -> free		10548512	0					
ANR	10548617	PtrMemberAccess	mem -> free		10548512	0					
ANR	10548618	Identifier	mem		10548512	0					
ANR	10548619	Identifier	free		10548512	1					
ANR	10548620	ArgumentList	mem		10548512	1					
ANR	10548621	Argument	mem		10548512	0					
ANR	10548622	Identifier	mem		10548512	0					
ANR	10548623	Argument	tti		10548512	1					
ANR	10548624	Identifier	tti		10548512	0					
ANR	10548625	Argument	"""ttfInterpreter__obtain"""		10548512	2					
ANR	10548626	PrimaryExpression	"""ttfInterpreter__obtain"""		10548512	0					
ANR	10548627	ReturnStatement	return fMemoryError ;	161:8:4606:4625	10548512	1	True				
ANR	10548628	Identifier	fMemoryError		10548512	0					
ANR	10548629	ExpressionStatement	"memset ( tti -> exec , 0 , sizeof ( * tti -> exec ) )"	163:4:4637:4677	10548512	10	True				
ANR	10548630	CallExpression	"memset ( tti -> exec , 0 , sizeof ( * tti -> exec ) )"		10548512	0					
ANR	10548631	Callee	memset		10548512	0					
ANR	10548632	Identifier	memset		10548512	0					
ANR	10548633	ArgumentList	tti -> exec		10548512	1					
ANR	10548634	Argument	tti -> exec		10548512	0					
ANR	10548635	PtrMemberAccess	tti -> exec		10548512	0					
ANR	10548636	Identifier	tti		10548512	0					
ANR	10548637	Identifier	exec		10548512	1					
ANR	10548638	Argument	0		10548512	1					
ANR	10548639	PrimaryExpression	0		10548512	0					
ANR	10548640	Argument	sizeof ( * tti -> exec )		10548512	2					
ANR	10548641	SizeofExpression	sizeof ( * tti -> exec )		10548512	0					
ANR	10548642	Sizeof	sizeof		10548512	0					
ANR	10548643	UnaryOperationExpression	* tti -> exec		10548512	1					
ANR	10548644	UnaryOperator	*		10548512	0					
ANR	10548645	PtrMemberAccess	tti -> exec		10548512	1					
ANR	10548646	Identifier	tti		10548512	0					
ANR	10548647	Identifier	exec		10548512	1					
ANR	10548648	ExpressionStatement	* ptti = tti	164:4:4683:4694	10548512	11	True				
ANR	10548649	AssignmentExpression	* ptti = tti		10548512	0		=			
ANR	10548650	UnaryOperationExpression	* ptti		10548512	0					
ANR	10548651	UnaryOperator	*		10548512	0					
ANR	10548652	Identifier	ptti		10548512	1					
ANR	10548653	Identifier	tti		10548512	1					
ANR	10548654	ReturnStatement	return 0 ;	165:4:4700:4708	10548512	12	True				
ANR	10548655	PrimaryExpression	0		10548512	0					
ANR	10548656	ReturnType	int		10548512	1					
ANR	10548657	Identifier	ttfInterpreter__obtain		10548512	2					
ANR	10548658	ParameterList	"ttfMemory * mem , ttfInterpreter * * ptti"		10548512	3					
ANR	10548659	Parameter	ttfMemory * mem	143:27:4026:4039	10548512	0	True				
ANR	10548660	ParameterType	ttfMemory *		10548512	0					
ANR	10548661	Identifier	mem		10548512	1					
ANR	10548662	Parameter	ttfInterpreter * * ptti	143:43:4042:4062	10548512	1	True				
ANR	10548663	ParameterType	ttfInterpreter * *		10548512	0					
ANR	10548664	Identifier	ptti		10548512	1					
ANR	10548665	CFGEntryNode	ENTRY		10548512		True				
ANR	10548666	CFGExitNode	EXIT		10548512		True				
ANR	10548667	Symbol	& st_ttfInterpreter		10548512						
ANR	10548668	Symbol	tti		10548512						
ANR	10548669	Symbol	* ptti		10548512						
ANR	10548670	Symbol	ptti		10548512						
ANR	10548671	Symbol	tti -> usage_size		10548512						
ANR	10548672	Symbol	tti -> usage		10548512						
ANR	10548673	Symbol	( * ptti ) -> lock		10548512						
ANR	10548674	Symbol	fMemoryError		10548512						
ANR	10548675	Symbol	* tti		10548512						
ANR	10548676	Symbol	tti -> ttf_memory		10548512						
ANR	10548677	Symbol	mem		10548512						
ANR	10548678	Symbol	* tti -> exec		10548512						
ANR	10548679	Symbol	tti -> lock		10548512						
ANR	10548680	Symbol	mem -> alloc_struct		10548512						
ANR	10548681	Symbol	& st_TExecution_Context		10548512						
ANR	10548682	Symbol	* * tti		10548512						
ANR	10548683	Symbol	* * ptti		10548512						
ANR	10548684	Symbol	* mem		10548512						
ANR	10548685	Symbol	tti -> exec		10548512						
ANR	10548686	Function	ttfInterpreter__release	168:0:4713:5061							
ANR	10548687	FunctionDef	ttfInterpreter__release (ttfInterpreter * * ptti)		10548686	0					
ANR	10548688	CompoundStatement		169:0:4765:5061	10548686	0					
ANR	10548689	IdentifierDeclStatement	ttfInterpreter * tti = * ptti ;	170:4:4771:4798	10548686	0	True				
ANR	10548690	IdentifierDecl	* tti = * ptti		10548686	0					
ANR	10548691	IdentifierDeclType	ttfInterpreter *		10548686	0					
ANR	10548692	Identifier	tti		10548686	1					
ANR	10548693	AssignmentExpression	* tti = * ptti		10548686	2		=			
ANR	10548694	Identifier	tti		10548686	0					
ANR	10548695	UnaryOperationExpression	* ptti		10548686	1					
ANR	10548696	UnaryOperator	*		10548686	0					
ANR	10548697	Identifier	ptti		10548686	1					
ANR	10548698	IdentifierDeclStatement	ttfMemory * mem = tti -> ttf_memory ;	171:4:4804:4836	10548686	1	True				
ANR	10548699	IdentifierDecl	* mem = tti -> ttf_memory		10548686	0					
ANR	10548700	IdentifierDeclType	ttfMemory *		10548686	0					
ANR	10548701	Identifier	mem		10548686	1					
ANR	10548702	AssignmentExpression	* mem = tti -> ttf_memory		10548686	2		=			
ANR	10548703	Identifier	mem		10548686	0					
ANR	10548704	PtrMemberAccess	tti -> ttf_memory		10548686	1					
ANR	10548705	Identifier	tti		10548686	0					
ANR	10548706	Identifier	ttf_memory		10548686	1					
ANR	10548707	IfStatement	if ( -- tti -> lock )		10548686	2					
ANR	10548708	Condition	-- tti -> lock	173:7:4846:4856	10548686	0	True				
ANR	10548709	UnaryExpression	-- tti -> lock		10548686	0					
ANR	10548710	IncDec	--		10548686	0					
ANR	10548711	PtrMemberAccess	tti -> lock		10548686	1					
ANR	10548712	Identifier	tti		10548686	0					
ANR	10548713	Identifier	lock		10548686	1					
ANR	10548714	ReturnStatement	return ;	174:8:4867:4873	10548686	1	True				
ANR	10548715	ExpressionStatement	"mem -> free ( mem , tti -> usage , ""ttfInterpreter__release"" )"	175:4:4879:4932	10548686	3	True				
ANR	10548716	CallExpression	"mem -> free ( mem , tti -> usage , ""ttfInterpreter__release"" )"		10548686	0					
ANR	10548717	Callee	mem -> free		10548686	0					
ANR	10548718	PtrMemberAccess	mem -> free		10548686	0					
ANR	10548719	Identifier	mem		10548686	0					
ANR	10548720	Identifier	free		10548686	1					
ANR	10548721	ArgumentList	mem		10548686	1					
ANR	10548722	Argument	mem		10548686	0					
ANR	10548723	Identifier	mem		10548686	0					
ANR	10548724	Argument	tti -> usage		10548686	1					
ANR	10548725	PtrMemberAccess	tti -> usage		10548686	0					
ANR	10548726	Identifier	tti		10548686	0					
ANR	10548727	Identifier	usage		10548686	1					
ANR	10548728	Argument	"""ttfInterpreter__release"""		10548686	2					
ANR	10548729	PrimaryExpression	"""ttfInterpreter__release"""		10548686	0					
ANR	10548730	ExpressionStatement	"mem -> free ( mem , tti -> exec , ""ttfInterpreter__release"" )"	176:4:4938:4990	10548686	4	True				
ANR	10548731	CallExpression	"mem -> free ( mem , tti -> exec , ""ttfInterpreter__release"" )"		10548686	0					
ANR	10548732	Callee	mem -> free		10548686	0					
ANR	10548733	PtrMemberAccess	mem -> free		10548686	0					
ANR	10548734	Identifier	mem		10548686	0					
ANR	10548735	Identifier	free		10548686	1					
ANR	10548736	ArgumentList	mem		10548686	1					
ANR	10548737	Argument	mem		10548686	0					
ANR	10548738	Identifier	mem		10548686	0					
ANR	10548739	Argument	tti -> exec		10548686	1					
ANR	10548740	PtrMemberAccess	tti -> exec		10548686	0					
ANR	10548741	Identifier	tti		10548686	0					
ANR	10548742	Identifier	exec		10548686	1					
ANR	10548743	Argument	"""ttfInterpreter__release"""		10548686	2					
ANR	10548744	PrimaryExpression	"""ttfInterpreter__release"""		10548686	0					
ANR	10548745	ExpressionStatement	"mem -> free ( mem , * ptti , ""ttfInterpreter__release"" )"	177:4:4996:5044	10548686	5	True				
ANR	10548746	CallExpression	"mem -> free ( mem , * ptti , ""ttfInterpreter__release"" )"		10548686	0					
ANR	10548747	Callee	mem -> free		10548686	0					
ANR	10548748	PtrMemberAccess	mem -> free		10548686	0					
ANR	10548749	Identifier	mem		10548686	0					
ANR	10548750	Identifier	free		10548686	1					
ANR	10548751	ArgumentList	mem		10548686	1					
ANR	10548752	Argument	mem		10548686	0					
ANR	10548753	Identifier	mem		10548686	0					
ANR	10548754	Argument	* ptti		10548686	1					
ANR	10548755	UnaryOperationExpression	* ptti		10548686	0					
ANR	10548756	UnaryOperator	*		10548686	0					
ANR	10548757	Identifier	ptti		10548686	1					
ANR	10548758	Argument	"""ttfInterpreter__release"""		10548686	2					
ANR	10548759	PrimaryExpression	"""ttfInterpreter__release"""		10548686	0					
ANR	10548760	ExpressionStatement	* ptti = 0	178:4:5050:5059	10548686	6	True				
ANR	10548761	AssignmentExpression	* ptti = 0		10548686	0		=			
ANR	10548762	UnaryOperationExpression	* ptti		10548686	0					
ANR	10548763	UnaryOperator	*		10548686	0					
ANR	10548764	Identifier	ptti		10548686	1					
ANR	10548765	PrimaryExpression	0		10548686	1					
ANR	10548766	ReturnType	void		10548686	1					
ANR	10548767	Identifier	ttfInterpreter__release		10548686	2					
ANR	10548768	ParameterList	ttfInterpreter * * ptti		10548686	3					
ANR	10548769	Parameter	ttfInterpreter * * ptti	168:29:4742:4762	10548686	0	True				
ANR	10548770	ParameterType	ttfInterpreter * *		10548686	0					
ANR	10548771	Identifier	ptti		10548686	1					
ANR	10548772	CFGEntryNode	ENTRY		10548686		True				
ANR	10548773	CFGExitNode	EXIT		10548686		True				
ANR	10548774	Symbol	tti -> ttf_memory		10548686						
ANR	10548775	Symbol	* tti		10548686						
ANR	10548776	Symbol	mem		10548686						
ANR	10548777	Symbol	tti		10548686						
ANR	10548778	Symbol	tti -> lock		10548686						
ANR	10548779	Symbol	* ptti		10548686						
ANR	10548780	Symbol	ptti		10548686						
ANR	10548781	Symbol	tti -> usage		10548686						
ANR	10548782	Symbol	tti -> exec		10548686						
ANR	10548783	Function	ttfFont__finit	194:0:5511:6142							
ANR	10548784	FunctionDef	ttfFont__finit (ttfFont * self)		10548783	0					
ANR	10548785	CompoundStatement		195:0:5546:6142	10548783	0					
ANR	10548786	IdentifierDeclStatement	ttfMemory * mem = self -> tti -> ttf_memory ;	195:3:5550:5588	10548783	0	True				
ANR	10548787	IdentifierDecl	* mem = self -> tti -> ttf_memory		10548783	0					
ANR	10548788	IdentifierDeclType	ttfMemory *		10548783	0					
ANR	10548789	Identifier	mem		10548783	1					
ANR	10548790	AssignmentExpression	* mem = self -> tti -> ttf_memory		10548783	2		=			
ANR	10548791	Identifier	mem		10548783	0					
ANR	10548792	PtrMemberAccess	self -> tti -> ttf_memory		10548783	1					
ANR	10548793	PtrMemberAccess	self -> tti		10548783	0					
ANR	10548794	Identifier	self		10548783	0					
ANR	10548795	Identifier	tti		10548783	1					
ANR	10548796	Identifier	ttf_memory		10548783	1					
ANR	10548797	IfStatement	if ( self -> exec )		10548783	1					
ANR	10548798	Condition	self -> exec	197:8:5599:5608	10548783	0	True				
ANR	10548799	PtrMemberAccess	self -> exec		10548783	0					
ANR	10548800	Identifier	self		10548783	0					
ANR	10548801	Identifier	exec		10548783	1					
ANR	10548802	CompoundStatement		3:20:64:64	10548783	1					
ANR	10548803	IfStatement	if ( self -> inst )		10548783	0					
ANR	10548804	Condition	self -> inst	198:12:5625:5634	10548783	0	True				
ANR	10548805	PtrMemberAccess	self -> inst		10548783	0					
ANR	10548806	Identifier	self		10548783	0					
ANR	10548807	Identifier	inst		10548783	1					
ANR	10548808	ExpressionStatement	Context_Destroy ( self -> exec )	199:12:5649:5676	10548783	1	True				
ANR	10548809	CallExpression	Context_Destroy ( self -> exec )		10548783	0					
ANR	10548810	Callee	Context_Destroy		10548783	0					
ANR	10548811	Identifier	Context_Destroy		10548783	0					
ANR	10548812	ArgumentList	self -> exec		10548783	1					
ANR	10548813	Argument	self -> exec		10548783	0					
ANR	10548814	PtrMemberAccess	self -> exec		10548783	0					
ANR	10548815	Identifier	self		10548783	0					
ANR	10548816	Identifier	exec		10548783	1					
ANR	10548817	ElseStatement	else		10548783	0					
ANR	10548818	CompoundStatement		6:13:144:144	10548783	0					
ANR	10548819	ExpressionStatement	self -> exec = NULL	206:4:5865:5882	10548783	2	True				
ANR	10548820	AssignmentExpression	self -> exec = NULL		10548783	0		=			
ANR	10548821	PtrMemberAccess	self -> exec		10548783	0					
ANR	10548822	Identifier	self		10548783	0					
ANR	10548823	Identifier	exec		10548783	1					
ANR	10548824	Identifier	NULL		10548783	1					
ANR	10548825	IfStatement	if ( self -> inst )		10548783	3					
ANR	10548826	Condition	self -> inst	207:8:5892:5901	10548783	0	True				
ANR	10548827	PtrMemberAccess	self -> inst		10548783	0					
ANR	10548828	Identifier	self		10548783	0					
ANR	10548829	Identifier	inst		10548783	1					
ANR	10548830	ExpressionStatement	Instance_Destroy ( self -> inst )	208:8:5912:5940	10548783	1	True				
ANR	10548831	CallExpression	Instance_Destroy ( self -> inst )		10548783	0					
ANR	10548832	Callee	Instance_Destroy		10548783	0					
ANR	10548833	Identifier	Instance_Destroy		10548783	0					
ANR	10548834	ArgumentList	self -> inst		10548783	1					
ANR	10548835	Argument	self -> inst		10548783	0					
ANR	10548836	PtrMemberAccess	self -> inst		10548783	0					
ANR	10548837	Identifier	self		10548783	0					
ANR	10548838	Identifier	inst		10548783	1					
ANR	10548839	ExpressionStatement	"mem -> free ( mem , self -> inst , ""ttfFont__finit"" )"	209:4:5946:5990	10548783	4	True				
ANR	10548840	CallExpression	"mem -> free ( mem , self -> inst , ""ttfFont__finit"" )"		10548783	0					
ANR	10548841	Callee	mem -> free		10548783	0					
ANR	10548842	PtrMemberAccess	mem -> free		10548783	0					
ANR	10548843	Identifier	mem		10548783	0					
ANR	10548844	Identifier	free		10548783	1					
ANR	10548845	ArgumentList	mem		10548783	1					
ANR	10548846	Argument	mem		10548783	0					
ANR	10548847	Identifier	mem		10548783	0					
ANR	10548848	Argument	self -> inst		10548783	1					
ANR	10548849	PtrMemberAccess	self -> inst		10548783	0					
ANR	10548850	Identifier	self		10548783	0					
ANR	10548851	Identifier	inst		10548783	1					
ANR	10548852	Argument	"""ttfFont__finit"""		10548783	2					
ANR	10548853	PrimaryExpression	"""ttfFont__finit"""		10548783	0					
ANR	10548854	ExpressionStatement	self -> inst = NULL	210:4:5996:6013	10548783	5	True				
ANR	10548855	AssignmentExpression	self -> inst = NULL		10548783	0		=			
ANR	10548856	PtrMemberAccess	self -> inst		10548783	0					
ANR	10548857	Identifier	self		10548783	0					
ANR	10548858	Identifier	inst		10548783	1					
ANR	10548859	Identifier	NULL		10548783	1					
ANR	10548860	IfStatement	if ( self -> face )		10548783	6					
ANR	10548861	Condition	self -> face	211:8:6023:6032	10548783	0	True				
ANR	10548862	PtrMemberAccess	self -> face		10548783	0					
ANR	10548863	Identifier	self		10548783	0					
ANR	10548864	Identifier	face		10548783	1					
ANR	10548865	ExpressionStatement	Face_Destroy ( self -> face )	212:8:6043:6067	10548783	1	True				
ANR	10548866	CallExpression	Face_Destroy ( self -> face )		10548783	0					
ANR	10548867	Callee	Face_Destroy		10548783	0					
ANR	10548868	Identifier	Face_Destroy		10548783	0					
ANR	10548869	ArgumentList	self -> face		10548783	1					
ANR	10548870	Argument	self -> face		10548783	0					
ANR	10548871	PtrMemberAccess	self -> face		10548783	0					
ANR	10548872	Identifier	self		10548783	0					
ANR	10548873	Identifier	face		10548783	1					
ANR	10548874	ExpressionStatement	"mem -> free ( mem , self -> face , ""ttfFont__finit"" )"	213:4:6073:6117	10548783	7	True				
ANR	10548875	CallExpression	"mem -> free ( mem , self -> face , ""ttfFont__finit"" )"		10548783	0					
ANR	10548876	Callee	mem -> free		10548783	0					
ANR	10548877	PtrMemberAccess	mem -> free		10548783	0					
ANR	10548878	Identifier	mem		10548783	0					
ANR	10548879	Identifier	free		10548783	1					
ANR	10548880	ArgumentList	mem		10548783	1					
ANR	10548881	Argument	mem		10548783	0					
ANR	10548882	Identifier	mem		10548783	0					
ANR	10548883	Argument	self -> face		10548783	1					
ANR	10548884	PtrMemberAccess	self -> face		10548783	0					
ANR	10548885	Identifier	self		10548783	0					
ANR	10548886	Identifier	face		10548783	1					
ANR	10548887	Argument	"""ttfFont__finit"""		10548783	2					
ANR	10548888	PrimaryExpression	"""ttfFont__finit"""		10548783	0					
ANR	10548889	ExpressionStatement	self -> face = NULL	214:4:6123:6140	10548783	8	True				
ANR	10548890	AssignmentExpression	self -> face = NULL		10548783	0		=			
ANR	10548891	PtrMemberAccess	self -> face		10548783	0					
ANR	10548892	Identifier	self		10548783	0					
ANR	10548893	Identifier	face		10548783	1					
ANR	10548894	Identifier	NULL		10548783	1					
ANR	10548895	ReturnType	void		10548783	1					
ANR	10548896	Identifier	ttfFont__finit		10548783	2					
ANR	10548897	ParameterList	ttfFont * self		10548783	3					
ANR	10548898	Parameter	ttfFont * self	194:20:5531:5543	10548783	0	True				
ANR	10548899	ParameterType	ttfFont *		10548783	0					
ANR	10548900	Identifier	self		10548783	1					
ANR	10548901	CFGEntryNode	ENTRY		10548783		True				
ANR	10548902	CFGExitNode	EXIT		10548783		True				
ANR	10548903	Symbol	self -> tti -> ttf_memory		10548783						
ANR	10548904	Symbol	* self -> tti		10548783						
ANR	10548905	Symbol	NULL		10548783						
ANR	10548906	Symbol	mem		10548783						
ANR	10548907	Symbol	* * self		10548783						
ANR	10548908	Symbol	self -> tti		10548783						
ANR	10548909	Symbol	* self		10548783						
ANR	10548910	Symbol	self -> inst		10548783						
ANR	10548911	Symbol	self -> exec		10548783						
ANR	10548912	Symbol	self		10548783						
ANR	10548913	Symbol	self -> face		10548783						
ANR	10548914	Function	ttfFont__Open	221:0:6378:11903							
ANR	10548915	FunctionDef	"ttfFont__Open (ttfInterpreter * tti , ttfFont * self , ttfReader * r , unsigned int nTTC , float w , float h , bool design_grid)"		10548914	0					
ANR	10548916	CompoundStatement		224:0:6579:11903	10548914	0					
ANR	10548917	IdentifierDeclStatement	"char sVersion [ 4 ] , sVersion1 [ 4 ] = { 0 , 1 , 0 , 0 } ;"	224:3:6583:6628	10548914	0	True				
ANR	10548918	IdentifierDecl	sVersion [ 4 ]		10548914	0					
ANR	10548919	IdentifierDeclType	char [ 4 ]		10548914	0					
ANR	10548920	Identifier	sVersion		10548914	1					
ANR	10548921	PrimaryExpression	4		10548914	2					
ANR	10548922	IdentifierDecl	"sVersion1 [ 4 ] = { 0 , 1 , 0 , 0 }"		10548914	1					
ANR	10548923	IdentifierDeclType	char [ 4 ]		10548914	0					
ANR	10548924	Identifier	sVersion1		10548914	1					
ANR	10548925	PrimaryExpression	4		10548914	2					
ANR	10548926	AssignmentExpression	"sVersion1 [ 4 ] = { 0 , 1 , 0 , 0 }"		10548914	3		=			
ANR	10548927	Identifier	sVersion1		10548914	0					
ANR	10548928	InitializerList	0		10548914	1					
ANR	10548929	PrimaryExpression	0		10548914	0					
ANR	10548930	PrimaryExpression	1		10548914	1					
ANR	10548931	PrimaryExpression	0		10548914	2					
ANR	10548932	PrimaryExpression	0		10548914	3					
ANR	10548933	IdentifierDeclStatement	"char sVersion2 [ 4 ] = { 0 , 2 , 0 , 0 } ;"	225:4:6634:6666	10548914	1	True				
ANR	10548934	IdentifierDecl	"sVersion2 [ 4 ] = { 0 , 2 , 0 , 0 }"		10548914	0					
ANR	10548935	IdentifierDeclType	char [ 4 ]		10548914	0					
ANR	10548936	Identifier	sVersion2		10548914	1					
ANR	10548937	PrimaryExpression	4		10548914	2					
ANR	10548938	AssignmentExpression	"sVersion2 [ 4 ] = { 0 , 2 , 0 , 0 }"		10548914	3		=			
ANR	10548939	Identifier	sVersion2		10548914	0					
ANR	10548940	InitializerList	0		10548914	1					
ANR	10548941	PrimaryExpression	0		10548914	0					
ANR	10548942	PrimaryExpression	2		10548914	1					
ANR	10548943	PrimaryExpression	0		10548914	2					
ANR	10548944	PrimaryExpression	0		10548914	3					
ANR	10548945	IdentifierDeclStatement	"unsigned int nNumTables , i ;"	226:4:6672:6698	10548914	2	True				
ANR	10548946	IdentifierDecl	nNumTables		10548914	0					
ANR	10548947	IdentifierDeclType	unsigned int		10548914	0					
ANR	10548948	Identifier	nNumTables		10548914	1					
ANR	10548949	IdentifierDecl	i		10548914	1					
ANR	10548950	IdentifierDeclType	unsigned int		10548914	0					
ANR	10548951	Identifier	i		10548914	1					
ANR	10548952	IdentifierDeclStatement	"TT_Error code , code1 = 0 ;"	227:4:6704:6728	10548914	3	True				
ANR	10548953	IdentifierDecl	code		10548914	0					
ANR	10548954	IdentifierDeclType	TT_Error		10548914	0					
ANR	10548955	Identifier	code		10548914	1					
ANR	10548956	IdentifierDecl	code1 = 0		10548914	1					
ANR	10548957	IdentifierDeclType	TT_Error		10548914	0					
ANR	10548958	Identifier	code1		10548914	1					
ANR	10548959	AssignmentExpression	code1 = 0		10548914	2		=			
ANR	10548960	Identifier	code1		10548914	0					
ANR	10548961	PrimaryExpression	0		10548914	1					
ANR	10548962	IdentifierDeclStatement	int k ;	228:4:6734:6739	10548914	4	True				
ANR	10548963	IdentifierDecl	k		10548914	0					
ANR	10548964	IdentifierDeclType	int		10548914	0					
ANR	10548965	Identifier	k		10548914	1					
ANR	10548966	IdentifierDeclStatement	TT_Instance I ;	229:4:6745:6758	10548914	5	True				
ANR	10548967	IdentifierDecl	I		10548914	0					
ANR	10548968	IdentifierDeclType	TT_Instance		10548914	0					
ANR	10548969	Identifier	I		10548914	1					
ANR	10548970	IdentifierDeclStatement	ttfMemory * mem = tti -> ttf_memory ;	230:4:6764:6796	10548914	6	True				
ANR	10548971	IdentifierDecl	* mem = tti -> ttf_memory		10548914	0					
ANR	10548972	IdentifierDeclType	ttfMemory *		10548914	0					
ANR	10548973	Identifier	mem		10548914	1					
ANR	10548974	AssignmentExpression	* mem = tti -> ttf_memory		10548914	2		=			
ANR	10548975	Identifier	mem		10548914	0					
ANR	10548976	PtrMemberAccess	tti -> ttf_memory		10548914	1					
ANR	10548977	Identifier	tti		10548914	0					
ANR	10548978	Identifier	ttf_memory		10548914	1					
ANR	10548979	IdentifierDeclStatement	"F26Dot6 ww , hh ;"	231:4:6802:6816	10548914	7	True				
ANR	10548980	IdentifierDecl	ww		10548914	0					
ANR	10548981	IdentifierDeclType	F26Dot6		10548914	0					
ANR	10548982	Identifier	ww		10548914	1					
ANR	10548983	IdentifierDecl	hh		10548914	1					
ANR	10548984	IdentifierDeclType	F26Dot6		10548914	0					
ANR	10548985	Identifier	hh		10548914	1					
ANR	10548986	ExpressionStatement	self -> tti = tti	233:4:6823:6838	10548914	8	True				
ANR	10548987	AssignmentExpression	self -> tti = tti		10548914	0		=			
ANR	10548988	PtrMemberAccess	self -> tti		10548914	0					
ANR	10548989	Identifier	self		10548914	0					
ANR	10548990	Identifier	tti		10548914	1					
ANR	10548991	Identifier	tti		10548914	1					
ANR	10548992	ExpressionStatement	self -> design_grid = design_grid	234:4:6844:6875	10548914	9	True				
ANR	10548993	AssignmentExpression	self -> design_grid = design_grid		10548914	0		=			
ANR	10548994	PtrMemberAccess	self -> design_grid		10548914	0					
ANR	10548995	Identifier	self		10548914	0					
ANR	10548996	Identifier	design_grid		10548914	1					
ANR	10548997	Identifier	design_grid		10548914	1					
ANR	10548998	ExpressionStatement	"r -> Read ( r , sVersion , 4 )"	235:4:6881:6904	10548914	10	True				
ANR	10548999	CallExpression	"r -> Read ( r , sVersion , 4 )"		10548914	0					
ANR	10549000	Callee	r -> Read		10548914	0					
ANR	10549001	PtrMemberAccess	r -> Read		10548914	0					
ANR	10549002	Identifier	r		10548914	0					
ANR	10549003	Identifier	Read		10548914	1					
ANR	10549004	ArgumentList	r		10548914	1					
ANR	10549005	Argument	r		10548914	0					
ANR	10549006	Identifier	r		10548914	0					
ANR	10549007	Argument	sVersion		10548914	1					
ANR	10549008	Identifier	sVersion		10548914	0					
ANR	10549009	Argument	4		10548914	2					
ANR	10549010	PrimaryExpression	4		10548914	0					
ANR	10549011	IfStatement	"if ( ! memcmp ( sVersion , ""ttcf"" , 4 ) )"		10548914	11					
ANR	10549012	Condition	"! memcmp ( sVersion , ""ttcf"" , 4 )"	236:7:6913:6940	10548914	0	True				
ANR	10549013	UnaryOperationExpression	"! memcmp ( sVersion , ""ttcf"" , 4 )"		10548914	0					
ANR	10549014	UnaryOperator	!		10548914	0					
ANR	10549015	CallExpression	"memcmp ( sVersion , ""ttcf"" , 4 )"		10548914	1					
ANR	10549016	Callee	memcmp		10548914	0					
ANR	10549017	Identifier	memcmp		10548914	0					
ANR	10549018	ArgumentList	sVersion		10548914	1					
ANR	10549019	Argument	sVersion		10548914	0					
ANR	10549020	Identifier	sVersion		10548914	0					
ANR	10549021	Argument	"""ttcf"""		10548914	1					
ANR	10549022	PrimaryExpression	"""ttcf"""		10548914	0					
ANR	10549023	Argument	4		10548914	2					
ANR	10549024	PrimaryExpression	4		10548914	0					
ANR	10549025	CompoundStatement		15:8:402:432	10548914	1					
ANR	10549026	IdentifierDeclStatement	unsigned int nFonts ;	237:8:6953:6972	10548914	0	True				
ANR	10549027	IdentifierDecl	nFonts		10548914	0					
ANR	10549028	IdentifierDeclType	unsigned int		10548914	0					
ANR	10549029	Identifier	nFonts		10548914	1					
ANR	10549030	IdentifierDeclStatement	unsigned int nPos = 0xbaadf00d ;	238:8:6982:7012	10548914	1	True				
ANR	10549031	IdentifierDecl	nPos = 0xbaadf00d		10548914	0					
ANR	10549032	IdentifierDeclType	unsigned int		10548914	0					
ANR	10549033	Identifier	nPos		10548914	1					
ANR	10549034	AssignmentExpression	nPos = 0xbaadf00d		10548914	2		=			
ANR	10549035	Identifier	nPos		10548914	0					
ANR	10549036	PrimaryExpression	0xbaadf00d		10548914	1					
ANR	10549037	ExpressionStatement	"r -> Read ( r , sVersion , 4 )"	240:8:7045:7068	10548914	2	True				
ANR	10549038	CallExpression	"r -> Read ( r , sVersion , 4 )"		10548914	0					
ANR	10549039	Callee	r -> Read		10548914	0					
ANR	10549040	PtrMemberAccess	r -> Read		10548914	0					
ANR	10549041	Identifier	r		10548914	0					
ANR	10549042	Identifier	Read		10548914	1					
ANR	10549043	ArgumentList	r		10548914	1					
ANR	10549044	Argument	r		10548914	0					
ANR	10549045	Identifier	r		10548914	0					
ANR	10549046	Argument	sVersion		10548914	1					
ANR	10549047	Identifier	sVersion		10548914	0					
ANR	10549048	Argument	4		10548914	2					
ANR	10549049	PrimaryExpression	4		10548914	0					
ANR	10549050	IfStatement	"if ( memcmp ( sVersion , sVersion1 , 4 ) && memcmp ( sVersion , sVersion2 , 4 ) )"		10548914	3					
ANR	10549051	Condition	"memcmp ( sVersion , sVersion1 , 4 ) && memcmp ( sVersion , sVersion2 , 4 )"	241:10:7080:7143	10548914	0	True				
ANR	10549052	AndExpression	"memcmp ( sVersion , sVersion1 , 4 ) && memcmp ( sVersion , sVersion2 , 4 )"		10548914	0		&&			
ANR	10549053	CallExpression	"memcmp ( sVersion , sVersion1 , 4 )"		10548914	0					
ANR	10549054	Callee	memcmp		10548914	0					
ANR	10549055	Identifier	memcmp		10548914	0					
ANR	10549056	ArgumentList	sVersion		10548914	1					
ANR	10549057	Argument	sVersion		10548914	0					
ANR	10549058	Identifier	sVersion		10548914	0					
ANR	10549059	Argument	sVersion1		10548914	1					
ANR	10549060	Identifier	sVersion1		10548914	0					
ANR	10549061	Argument	4		10548914	2					
ANR	10549062	PrimaryExpression	4		10548914	0					
ANR	10549063	CallExpression	"memcmp ( sVersion , sVersion2 , 4 )"		10548914	1					
ANR	10549064	Callee	memcmp		10548914	0					
ANR	10549065	Identifier	memcmp		10548914	0					
ANR	10549066	ArgumentList	sVersion		10548914	1					
ANR	10549067	Argument	sVersion		10548914	0					
ANR	10549068	Identifier	sVersion		10548914	0					
ANR	10549069	Argument	sVersion2		10548914	1					
ANR	10549070	Identifier	sVersion2		10548914	0					
ANR	10549071	Argument	4		10548914	2					
ANR	10549072	PrimaryExpression	4		10548914	0					
ANR	10549073	ReturnStatement	return fUnimplemented ;	242:12:7158:7179	10548914	1	True				
ANR	10549074	Identifier	fUnimplemented		10548914	0					
ANR	10549075	ExpressionStatement	nFonts = ttfReader__UInt ( r )	243:8:7189:7216	10548914	4	True				
ANR	10549076	AssignmentExpression	nFonts = ttfReader__UInt ( r )		10548914	0		=			
ANR	10549077	Identifier	nFonts		10548914	0					
ANR	10549078	CallExpression	ttfReader__UInt ( r )		10548914	1					
ANR	10549079	Callee	ttfReader__UInt		10548914	0					
ANR	10549080	Identifier	ttfReader__UInt		10548914	0					
ANR	10549081	ArgumentList	r		10548914	1					
ANR	10549082	Argument	r		10548914	0					
ANR	10549083	Identifier	r		10548914	0					
ANR	10549084	IfStatement	if ( nFonts == 0 )		10548914	5					
ANR	10549085	Condition	nFonts == 0	244:12:7230:7240	10548914	0	True				
ANR	10549086	EqualityExpression	nFonts == 0		10548914	0		==			
ANR	10549087	Identifier	nFonts		10548914	0					
ANR	10549088	PrimaryExpression	0		10548914	1					
ANR	10549089	ReturnStatement	return fBadFontData ;	245:12:7255:7274	10548914	1	True				
ANR	10549090	Identifier	fBadFontData		10548914	0					
ANR	10549091	IfStatement	if ( nTTC >= nFonts )		10548914	6					
ANR	10549092	Condition	nTTC >= nFonts	246:11:7287:7300	10548914	0	True				
ANR	10549093	RelationalExpression	nTTC >= nFonts		10548914	0		>=			
ANR	10549094	Identifier	nTTC		10548914	0					
ANR	10549095	Identifier	nFonts		10548914	1					
ANR	10549096	ReturnStatement	return fTableNotFound ;	247:12:7315:7336	10548914	1	True				
ANR	10549097	Identifier	fTableNotFound		10548914	0					
ANR	10549098	ForStatement	for ( i = 0 ; i <= nTTC ; i ++ )		10548914	7					
ANR	10549099	ForInit	i = 0 ;	248:12:7350:7355	10548914	0	True				
ANR	10549100	AssignmentExpression	i = 0		10548914	0		=			
ANR	10549101	Identifier	i		10548914	0					
ANR	10549102	PrimaryExpression	0		10548914	1					
ANR	10549103	Condition	i <= nTTC	248:19:7357:7365	10548914	1	True				
ANR	10549104	RelationalExpression	i <= nTTC		10548914	0		<=			
ANR	10549105	Identifier	i		10548914	0					
ANR	10549106	Identifier	nTTC		10548914	1					
ANR	10549107	PostIncDecOperationExpression	i ++	248:30:7368:7370	10548914	2	True				
ANR	10549108	Identifier	i		10548914	0					
ANR	10549109	IncDec	++		10548914	1					
ANR	10549110	ExpressionStatement	nPos = ttfReader__UInt ( r )	249:12:7385:7410	10548914	3	True				
ANR	10549111	AssignmentExpression	nPos = ttfReader__UInt ( r )		10548914	0		=			
ANR	10549112	Identifier	nPos		10548914	0					
ANR	10549113	CallExpression	ttfReader__UInt ( r )		10548914	1					
ANR	10549114	Callee	ttfReader__UInt		10548914	0					
ANR	10549115	Identifier	ttfReader__UInt		10548914	0					
ANR	10549116	ArgumentList	r		10548914	1					
ANR	10549117	Argument	r		10548914	0					
ANR	10549118	Identifier	r		10548914	0					
ANR	10549119	ExpressionStatement	"r -> Seek ( r , nPos )"	250:8:7420:7436	10548914	8	True				
ANR	10549120	CallExpression	"r -> Seek ( r , nPos )"		10548914	0					
ANR	10549121	Callee	r -> Seek		10548914	0					
ANR	10549122	PtrMemberAccess	r -> Seek		10548914	0					
ANR	10549123	Identifier	r		10548914	0					
ANR	10549124	Identifier	Seek		10548914	1					
ANR	10549125	ArgumentList	r		10548914	1					
ANR	10549126	Argument	r		10548914	0					
ANR	10549127	Identifier	r		10548914	0					
ANR	10549128	Argument	nPos		10548914	1					
ANR	10549129	Identifier	nPos		10548914	0					
ANR	10549130	ExpressionStatement	"r -> Read ( r , sVersion , 4 )"	251:8:7446:7469	10548914	9	True				
ANR	10549131	CallExpression	"r -> Read ( r , sVersion , 4 )"		10548914	0					
ANR	10549132	Callee	r -> Read		10548914	0					
ANR	10549133	PtrMemberAccess	r -> Read		10548914	0					
ANR	10549134	Identifier	r		10548914	0					
ANR	10549135	Identifier	Read		10548914	1					
ANR	10549136	ArgumentList	r		10548914	1					
ANR	10549137	Argument	r		10548914	0					
ANR	10549138	Identifier	r		10548914	0					
ANR	10549139	Argument	sVersion		10548914	1					
ANR	10549140	Identifier	sVersion		10548914	0					
ANR	10549141	Argument	4		10548914	2					
ANR	10549142	PrimaryExpression	4		10548914	0					
ANR	10549143	IfStatement	"if ( memcmp ( sVersion , sVersion1 , 4 ) && memcmp ( sVersion , ""true"" , 4 ) )"		10548914	12					
ANR	10549144	Condition	"memcmp ( sVersion , sVersion1 , 4 ) && memcmp ( sVersion , ""true"" , 4 )"	253:7:7484:7544	10548914	0	True				
ANR	10549145	AndExpression	"memcmp ( sVersion , sVersion1 , 4 ) && memcmp ( sVersion , ""true"" , 4 )"		10548914	0		&&			
ANR	10549146	CallExpression	"memcmp ( sVersion , sVersion1 , 4 )"		10548914	0					
ANR	10549147	Callee	memcmp		10548914	0					
ANR	10549148	Identifier	memcmp		10548914	0					
ANR	10549149	ArgumentList	sVersion		10548914	1					
ANR	10549150	Argument	sVersion		10548914	0					
ANR	10549151	Identifier	sVersion		10548914	0					
ANR	10549152	Argument	sVersion1		10548914	1					
ANR	10549153	Identifier	sVersion1		10548914	0					
ANR	10549154	Argument	4		10548914	2					
ANR	10549155	PrimaryExpression	4		10548914	0					
ANR	10549156	CallExpression	"memcmp ( sVersion , ""true"" , 4 )"		10548914	1					
ANR	10549157	Callee	memcmp		10548914	0					
ANR	10549158	Identifier	memcmp		10548914	0					
ANR	10549159	ArgumentList	sVersion		10548914	1					
ANR	10549160	Argument	sVersion		10548914	0					
ANR	10549161	Identifier	sVersion		10548914	0					
ANR	10549162	Argument	"""true"""		10548914	1					
ANR	10549163	PrimaryExpression	"""true"""		10548914	0					
ANR	10549164	Argument	4		10548914	2					
ANR	10549165	PrimaryExpression	4		10548914	0					
ANR	10549166	ReturnStatement	return fUnimplemented ;	254:8:7555:7576	10548914	1	True				
ANR	10549167	Identifier	fUnimplemented		10548914	0					
ANR	10549168	ExpressionStatement	nNumTables = ttfReader__UShort ( r )	255:4:7582:7618	10548914	13	True				
ANR	10549169	AssignmentExpression	nNumTables = ttfReader__UShort ( r )		10548914	0		=			
ANR	10549170	Identifier	nNumTables		10548914	0					
ANR	10549171	CallExpression	ttfReader__UShort ( r )		10548914	1					
ANR	10549172	Callee	ttfReader__UShort		10548914	0					
ANR	10549173	Identifier	ttfReader__UShort		10548914	0					
ANR	10549174	ArgumentList	r		10548914	1					
ANR	10549175	Argument	r		10548914	0					
ANR	10549176	Identifier	r		10548914	0					
ANR	10549177	ExpressionStatement	ttfReader__UShort ( r )	256:4:7624:7644	10548914	14	True				
ANR	10549178	CallExpression	ttfReader__UShort ( r )		10548914	0					
ANR	10549179	Callee	ttfReader__UShort		10548914	0					
ANR	10549180	Identifier	ttfReader__UShort		10548914	0					
ANR	10549181	ArgumentList	r		10548914	1					
ANR	10549182	Argument	r		10548914	0					
ANR	10549183	Identifier	r		10548914	0					
ANR	10549184	ExpressionStatement	ttfReader__UShort ( r )	257:4:7669:7689	10548914	15	True				
ANR	10549185	CallExpression	ttfReader__UShort ( r )		10548914	0					
ANR	10549186	Callee	ttfReader__UShort		10548914	0					
ANR	10549187	Identifier	ttfReader__UShort		10548914	0					
ANR	10549188	ArgumentList	r		10548914	1					
ANR	10549189	Argument	r		10548914	0					
ANR	10549190	Identifier	r		10548914	0					
ANR	10549191	ExpressionStatement	ttfReader__UShort ( r )	258:4:7716:7736	10548914	16	True				
ANR	10549192	CallExpression	ttfReader__UShort ( r )		10548914	0					
ANR	10549193	Callee	ttfReader__UShort		10548914	0					
ANR	10549194	Identifier	ttfReader__UShort		10548914	0					
ANR	10549195	ArgumentList	r		10548914	1					
ANR	10549196	Argument	r		10548914	0					
ANR	10549197	Identifier	r		10548914	0					
ANR	10549198	ForStatement	for ( i = 0 ; i < nNumTables ; i ++ )		10548914	17					
ANR	10549199	ForInit	i = 0 ;	259:9:7765:7770	10548914	0	True				
ANR	10549200	AssignmentExpression	i = 0		10548914	0		=			
ANR	10549201	Identifier	i		10548914	0					
ANR	10549202	PrimaryExpression	0		10548914	1					
ANR	10549203	Condition	i < nNumTables	259:16:7772:7785	10548914	1	True				
ANR	10549204	RelationalExpression	i < nNumTables		10548914	0		<			
ANR	10549205	Identifier	i		10548914	0					
ANR	10549206	Identifier	nNumTables		10548914	1					
ANR	10549207	PostIncDecOperationExpression	i ++	259:32:7788:7790	10548914	2	True				
ANR	10549208	Identifier	i		10548914	0					
ANR	10549209	IncDec	++		10548914	1					
ANR	10549210	CompoundStatement		39:8:1284:1297	10548914	3					
ANR	10549211	IdentifierDeclStatement	char sTag [ 5 ] ;	260:8:7803:7815	10548914	0	True				
ANR	10549212	IdentifierDecl	sTag [ 5 ]		10548914	0					
ANR	10549213	IdentifierDeclType	char [ 5 ]		10548914	0					
ANR	10549214	Identifier	sTag		10548914	1					
ANR	10549215	PrimaryExpression	5		10548914	2					
ANR	10549216	IdentifierDeclStatement	"unsigned int nOffset , nLength ;"	261:8:7825:7854	10548914	1	True				
ANR	10549217	IdentifierDecl	nOffset		10548914	0					
ANR	10549218	IdentifierDeclType	unsigned int		10548914	0					
ANR	10549219	Identifier	nOffset		10548914	1					
ANR	10549220	IdentifierDecl	nLength		10548914	1					
ANR	10549221	IdentifierDeclType	unsigned int		10548914	0					
ANR	10549222	Identifier	nLength		10548914	1					
ANR	10549223	IdentifierDeclStatement	ttfPtrElem * e ;	262:8:7864:7877	10548914	2	True				
ANR	10549224	IdentifierDecl	* e		10548914	0					
ANR	10549225	IdentifierDeclType	ttfPtrElem *		10548914	0					
ANR	10549226	Identifier	e		10548914	1					
ANR	10549227	ExpressionStatement	sTag [ 4 ] = 0	264:8:7888:7899	10548914	3	True				
ANR	10549228	AssignmentExpression	sTag [ 4 ] = 0		10548914	0		=			
ANR	10549229	ArrayIndexing	sTag [ 4 ]		10548914	0					
ANR	10549230	Identifier	sTag		10548914	0					
ANR	10549231	PrimaryExpression	4		10548914	1					
ANR	10549232	PrimaryExpression	0		10548914	1					
ANR	10549233	ExpressionStatement	"r -> Read ( r , sTag , 4 )"	265:8:7909:7928	10548914	4	True				
ANR	10549234	CallExpression	"r -> Read ( r , sTag , 4 )"		10548914	0					
ANR	10549235	Callee	r -> Read		10548914	0					
ANR	10549236	PtrMemberAccess	r -> Read		10548914	0					
ANR	10549237	Identifier	r		10548914	0					
ANR	10549238	Identifier	Read		10548914	1					
ANR	10549239	ArgumentList	r		10548914	1					
ANR	10549240	Argument	r		10548914	0					
ANR	10549241	Identifier	r		10548914	0					
ANR	10549242	Argument	sTag		10548914	1					
ANR	10549243	Identifier	sTag		10548914	0					
ANR	10549244	Argument	4		10548914	2					
ANR	10549245	PrimaryExpression	4		10548914	0					
ANR	10549246	ExpressionStatement	ttfReader__UInt ( r )	266:8:7938:7956	10548914	5	True				
ANR	10549247	CallExpression	ttfReader__UInt ( r )		10548914	0					
ANR	10549248	Callee	ttfReader__UInt		10548914	0					
ANR	10549249	Identifier	ttfReader__UInt		10548914	0					
ANR	10549250	ArgumentList	r		10548914	1					
ANR	10549251	Argument	r		10548914	0					
ANR	10549252	Identifier	r		10548914	0					
ANR	10549253	ExpressionStatement	nOffset = ttfReader__UInt ( r )	267:8:7982:8010	10548914	6	True				
ANR	10549254	AssignmentExpression	nOffset = ttfReader__UInt ( r )		10548914	0		=			
ANR	10549255	Identifier	nOffset		10548914	0					
ANR	10549256	CallExpression	ttfReader__UInt ( r )		10548914	1					
ANR	10549257	Callee	ttfReader__UInt		10548914	0					
ANR	10549258	Identifier	ttfReader__UInt		10548914	0					
ANR	10549259	ArgumentList	r		10548914	1					
ANR	10549260	Argument	r		10548914	0					
ANR	10549261	Identifier	r		10548914	0					
ANR	10549262	ExpressionStatement	nLength = ttfReader__UInt ( r )	268:8:8020:8048	10548914	7	True				
ANR	10549263	AssignmentExpression	nLength = ttfReader__UInt ( r )		10548914	0		=			
ANR	10549264	Identifier	nLength		10548914	0					
ANR	10549265	CallExpression	ttfReader__UInt ( r )		10548914	1					
ANR	10549266	Callee	ttfReader__UInt		10548914	0					
ANR	10549267	Identifier	ttfReader__UInt		10548914	0					
ANR	10549268	ArgumentList	r		10548914	1					
ANR	10549269	Argument	r		10548914	0					
ANR	10549270	Identifier	r		10548914	0					
ANR	10549271	ExpressionStatement	"e = ttfFont__get_table_ptr ( self , sTag )"	269:8:8058:8096	10548914	8	True				
ANR	10549272	AssignmentExpression	"e = ttfFont__get_table_ptr ( self , sTag )"		10548914	0		=			
ANR	10549273	Identifier	e		10548914	0					
ANR	10549274	CallExpression	"ttfFont__get_table_ptr ( self , sTag )"		10548914	1					
ANR	10549275	Callee	ttfFont__get_table_ptr		10548914	0					
ANR	10549276	Identifier	ttfFont__get_table_ptr		10548914	0					
ANR	10549277	ArgumentList	self		10548914	1					
ANR	10549278	Argument	self		10548914	0					
ANR	10549279	Identifier	self		10548914	0					
ANR	10549280	Argument	sTag		10548914	1					
ANR	10549281	Identifier	sTag		10548914	0					
ANR	10549282	IfStatement	if ( e != NULL )		10548914	9					
ANR	10549283	Condition	e != NULL	270:12:8110:8118	10548914	0	True				
ANR	10549284	EqualityExpression	e != NULL		10548914	0		!=			
ANR	10549285	Identifier	e		10548914	0					
ANR	10549286	Identifier	NULL		10548914	1					
ANR	10549287	CompoundStatement		47:23:1541:1541	10548914	1					
ANR	10549288	ExpressionStatement	e -> nPos = nOffset	271:12:8135:8152	10548914	0	True				
ANR	10549289	AssignmentExpression	e -> nPos = nOffset		10548914	0		=			
ANR	10549290	PtrMemberAccess	e -> nPos		10548914	0					
ANR	10549291	Identifier	e		10548914	0					
ANR	10549292	Identifier	nPos		10548914	1					
ANR	10549293	Identifier	nOffset		10548914	1					
ANR	10549294	ExpressionStatement	e -> nLen = nLength	272:12:8166:8183	10548914	1	True				
ANR	10549295	AssignmentExpression	e -> nLen = nLength		10548914	0		=			
ANR	10549296	PtrMemberAccess	e -> nLen		10548914	0					
ANR	10549297	Identifier	e		10548914	0					
ANR	10549298	Identifier	nLen		10548914	1					
ANR	10549299	Identifier	nLength		10548914	1					
ANR	10549300	ExpressionStatement	"r -> Seek ( r , self -> t_head . nPos + offset_of ( sfnt_FontHeader , flags ) )"	275:4:8205:8270	10548914	18	True				
ANR	10549301	CallExpression	"r -> Seek ( r , self -> t_head . nPos + offset_of ( sfnt_FontHeader , flags ) )"		10548914	0					
ANR	10549302	Callee	r -> Seek		10548914	0					
ANR	10549303	PtrMemberAccess	r -> Seek		10548914	0					
ANR	10549304	Identifier	r		10548914	0					
ANR	10549305	Identifier	Seek		10548914	1					
ANR	10549306	ArgumentList	r		10548914	1					
ANR	10549307	Argument	r		10548914	0					
ANR	10549308	Identifier	r		10548914	0					
ANR	10549309	Argument	"self -> t_head . nPos + offset_of ( sfnt_FontHeader , flags )"		10548914	1					
ANR	10549310	AdditiveExpression	"self -> t_head . nPos + offset_of ( sfnt_FontHeader , flags )"		10548914	0		+			
ANR	10549311	MemberAccess	self -> t_head . nPos		10548914	0					
ANR	10549312	PtrMemberAccess	self -> t_head		10548914	0					
ANR	10549313	Identifier	self		10548914	0					
ANR	10549314	Identifier	t_head		10548914	1					
ANR	10549315	Identifier	nPos		10548914	1					
ANR	10549316	CallExpression	"offset_of ( sfnt_FontHeader , flags )"		10548914	1					
ANR	10549317	Callee	offset_of		10548914	0					
ANR	10549318	Identifier	offset_of		10548914	0					
ANR	10549319	ArgumentList	sfnt_FontHeader		10548914	1					
ANR	10549320	Argument	sfnt_FontHeader		10548914	0					
ANR	10549321	Identifier	sfnt_FontHeader		10548914	0					
ANR	10549322	Argument	flags		10548914	1					
ANR	10549323	Identifier	flags		10548914	0					
ANR	10549324	ExpressionStatement	self -> nFlags = ttfReader__UShort ( r )	276:4:8276:8311	10548914	19	True				
ANR	10549325	AssignmentExpression	self -> nFlags = ttfReader__UShort ( r )		10548914	0		=			
ANR	10549326	PtrMemberAccess	self -> nFlags		10548914	0					
ANR	10549327	Identifier	self		10548914	0					
ANR	10549328	Identifier	nFlags		10548914	1					
ANR	10549329	CallExpression	ttfReader__UShort ( r )		10548914	1					
ANR	10549330	Callee	ttfReader__UShort		10548914	0					
ANR	10549331	Identifier	ttfReader__UShort		10548914	0					
ANR	10549332	ArgumentList	r		10548914	1					
ANR	10549333	Argument	r		10548914	0					
ANR	10549334	Identifier	r		10548914	0					
ANR	10549335	ExpressionStatement	"r -> Seek ( r , self -> t_head . nPos + offset_of ( sfnt_FontHeader , unitsPerEm ) )"	277:4:8317:8387	10548914	20	True				
ANR	10549336	CallExpression	"r -> Seek ( r , self -> t_head . nPos + offset_of ( sfnt_FontHeader , unitsPerEm ) )"		10548914	0					
ANR	10549337	Callee	r -> Seek		10548914	0					
ANR	10549338	PtrMemberAccess	r -> Seek		10548914	0					
ANR	10549339	Identifier	r		10548914	0					
ANR	10549340	Identifier	Seek		10548914	1					
ANR	10549341	ArgumentList	r		10548914	1					
ANR	10549342	Argument	r		10548914	0					
ANR	10549343	Identifier	r		10548914	0					
ANR	10549344	Argument	"self -> t_head . nPos + offset_of ( sfnt_FontHeader , unitsPerEm )"		10548914	1					
ANR	10549345	AdditiveExpression	"self -> t_head . nPos + offset_of ( sfnt_FontHeader , unitsPerEm )"		10548914	0		+			
ANR	10549346	MemberAccess	self -> t_head . nPos		10548914	0					
ANR	10549347	PtrMemberAccess	self -> t_head		10548914	0					
ANR	10549348	Identifier	self		10548914	0					
ANR	10549349	Identifier	t_head		10548914	1					
ANR	10549350	Identifier	nPos		10548914	1					
ANR	10549351	CallExpression	"offset_of ( sfnt_FontHeader , unitsPerEm )"		10548914	1					
ANR	10549352	Callee	offset_of		10548914	0					
ANR	10549353	Identifier	offset_of		10548914	0					
ANR	10549354	ArgumentList	sfnt_FontHeader		10548914	1					
ANR	10549355	Argument	sfnt_FontHeader		10548914	0					
ANR	10549356	Identifier	sfnt_FontHeader		10548914	0					
ANR	10549357	Argument	unitsPerEm		10548914	1					
ANR	10549358	Identifier	unitsPerEm		10548914	0					
ANR	10549359	ExpressionStatement	self -> nUnitsPerEm = ttfReader__UShort ( r )	278:4:8393:8433	10548914	21	True				
ANR	10549360	AssignmentExpression	self -> nUnitsPerEm = ttfReader__UShort ( r )		10548914	0		=			
ANR	10549361	PtrMemberAccess	self -> nUnitsPerEm		10548914	0					
ANR	10549362	Identifier	self		10548914	0					
ANR	10549363	Identifier	nUnitsPerEm		10548914	1					
ANR	10549364	CallExpression	ttfReader__UShort ( r )		10548914	1					
ANR	10549365	Callee	ttfReader__UShort		10548914	0					
ANR	10549366	Identifier	ttfReader__UShort		10548914	0					
ANR	10549367	ArgumentList	r		10548914	1					
ANR	10549368	Argument	r		10548914	0					
ANR	10549369	Identifier	r		10548914	0					
ANR	10549370	IfStatement	if ( self -> nUnitsPerEm <= 0 )		10548914	22					
ANR	10549371	Condition	self -> nUnitsPerEm <= 0	279:8:8443:8464	10548914	0	True				
ANR	10549372	RelationalExpression	self -> nUnitsPerEm <= 0		10548914	0		<=			
ANR	10549373	PtrMemberAccess	self -> nUnitsPerEm		10548914	0					
ANR	10549374	Identifier	self		10548914	0					
ANR	10549375	Identifier	nUnitsPerEm		10548914	1					
ANR	10549376	PrimaryExpression	0		10548914	1					
ANR	10549377	ExpressionStatement	self -> nUnitsPerEm = 1024	280:8:8475:8499	10548914	1	True				
ANR	10549378	AssignmentExpression	self -> nUnitsPerEm = 1024		10548914	0		=			
ANR	10549379	PtrMemberAccess	self -> nUnitsPerEm		10548914	0					
ANR	10549380	Identifier	self		10548914	0					
ANR	10549381	Identifier	nUnitsPerEm		10548914	1					
ANR	10549382	PrimaryExpression	1024		10548914	1					
ANR	10549383	ExpressionStatement	"r -> Seek ( r , self -> t_head . nPos + offset_of ( sfnt_FontHeader , indexToLocFormat ) )"	281:4:8505:8581	10548914	23	True				
ANR	10549384	CallExpression	"r -> Seek ( r , self -> t_head . nPos + offset_of ( sfnt_FontHeader , indexToLocFormat ) )"		10548914	0					
ANR	10549385	Callee	r -> Seek		10548914	0					
ANR	10549386	PtrMemberAccess	r -> Seek		10548914	0					
ANR	10549387	Identifier	r		10548914	0					
ANR	10549388	Identifier	Seek		10548914	1					
ANR	10549389	ArgumentList	r		10548914	1					
ANR	10549390	Argument	r		10548914	0					
ANR	10549391	Identifier	r		10548914	0					
ANR	10549392	Argument	"self -> t_head . nPos + offset_of ( sfnt_FontHeader , indexToLocFormat )"		10548914	1					
ANR	10549393	AdditiveExpression	"self -> t_head . nPos + offset_of ( sfnt_FontHeader , indexToLocFormat )"		10548914	0		+			
ANR	10549394	MemberAccess	self -> t_head . nPos		10548914	0					
ANR	10549395	PtrMemberAccess	self -> t_head		10548914	0					
ANR	10549396	Identifier	self		10548914	0					
ANR	10549397	Identifier	t_head		10548914	1					
ANR	10549398	Identifier	nPos		10548914	1					
ANR	10549399	CallExpression	"offset_of ( sfnt_FontHeader , indexToLocFormat )"		10548914	1					
ANR	10549400	Callee	offset_of		10548914	0					
ANR	10549401	Identifier	offset_of		10548914	0					
ANR	10549402	ArgumentList	sfnt_FontHeader		10548914	1					
ANR	10549403	Argument	sfnt_FontHeader		10548914	0					
ANR	10549404	Identifier	sfnt_FontHeader		10548914	0					
ANR	10549405	Argument	indexToLocFormat		10548914	1					
ANR	10549406	Identifier	indexToLocFormat		10548914	0					
ANR	10549407	ExpressionStatement	self -> nIndexToLocFormat = ttfReader__UShort ( r )	282:4:8587:8633	10548914	24	True				
ANR	10549408	AssignmentExpression	self -> nIndexToLocFormat = ttfReader__UShort ( r )		10548914	0		=			
ANR	10549409	PtrMemberAccess	self -> nIndexToLocFormat		10548914	0					
ANR	10549410	Identifier	self		10548914	0					
ANR	10549411	Identifier	nIndexToLocFormat		10548914	1					
ANR	10549412	CallExpression	ttfReader__UShort ( r )		10548914	1					
ANR	10549413	Callee	ttfReader__UShort		10548914	0					
ANR	10549414	Identifier	ttfReader__UShort		10548914	0					
ANR	10549415	ArgumentList	r		10548914	1					
ANR	10549416	Argument	r		10548914	0					
ANR	10549417	Identifier	r		10548914	0					
ANR	10549418	ExpressionStatement	"r -> Seek ( r , self -> t_maxp . nPos + offset_of ( sfnt_maxProfileTable , numGlyphs ) )"	283:4:8639:8713	10548914	25	True				
ANR	10549419	CallExpression	"r -> Seek ( r , self -> t_maxp . nPos + offset_of ( sfnt_maxProfileTable , numGlyphs ) )"		10548914	0					
ANR	10549420	Callee	r -> Seek		10548914	0					
ANR	10549421	PtrMemberAccess	r -> Seek		10548914	0					
ANR	10549422	Identifier	r		10548914	0					
ANR	10549423	Identifier	Seek		10548914	1					
ANR	10549424	ArgumentList	r		10548914	1					
ANR	10549425	Argument	r		10548914	0					
ANR	10549426	Identifier	r		10548914	0					
ANR	10549427	Argument	"self -> t_maxp . nPos + offset_of ( sfnt_maxProfileTable , numGlyphs )"		10548914	1					
ANR	10549428	AdditiveExpression	"self -> t_maxp . nPos + offset_of ( sfnt_maxProfileTable , numGlyphs )"		10548914	0		+			
ANR	10549429	MemberAccess	self -> t_maxp . nPos		10548914	0					
ANR	10549430	PtrMemberAccess	self -> t_maxp		10548914	0					
ANR	10549431	Identifier	self		10548914	0					
ANR	10549432	Identifier	t_maxp		10548914	1					
ANR	10549433	Identifier	nPos		10548914	1					
ANR	10549434	CallExpression	"offset_of ( sfnt_maxProfileTable , numGlyphs )"		10548914	1					
ANR	10549435	Callee	offset_of		10548914	0					
ANR	10549436	Identifier	offset_of		10548914	0					
ANR	10549437	ArgumentList	sfnt_maxProfileTable		10548914	1					
ANR	10549438	Argument	sfnt_maxProfileTable		10548914	0					
ANR	10549439	Identifier	sfnt_maxProfileTable		10548914	0					
ANR	10549440	Argument	numGlyphs		10548914	1					
ANR	10549441	Identifier	numGlyphs		10548914	0					
ANR	10549442	ExpressionStatement	self -> nNumGlyphs = ttfReader__UShort ( r )	284:4:8719:8758	10548914	26	True				
ANR	10549443	AssignmentExpression	self -> nNumGlyphs = ttfReader__UShort ( r )		10548914	0		=			
ANR	10549444	PtrMemberAccess	self -> nNumGlyphs		10548914	0					
ANR	10549445	Identifier	self		10548914	0					
ANR	10549446	Identifier	nNumGlyphs		10548914	1					
ANR	10549447	CallExpression	ttfReader__UShort ( r )		10548914	1					
ANR	10549448	Callee	ttfReader__UShort		10548914	0					
ANR	10549449	Identifier	ttfReader__UShort		10548914	0					
ANR	10549450	ArgumentList	r		10548914	1					
ANR	10549451	Argument	r		10548914	0					
ANR	10549452	Identifier	r		10548914	0					
ANR	10549453	ExpressionStatement	"r -> Seek ( r , self -> t_maxp . nPos + offset_of ( sfnt_maxProfileTable , maxComponentElements ) )"	285:4:8764:8849	10548914	27	True				
ANR	10549454	CallExpression	"r -> Seek ( r , self -> t_maxp . nPos + offset_of ( sfnt_maxProfileTable , maxComponentElements ) )"		10548914	0					
ANR	10549455	Callee	r -> Seek		10548914	0					
ANR	10549456	PtrMemberAccess	r -> Seek		10548914	0					
ANR	10549457	Identifier	r		10548914	0					
ANR	10549458	Identifier	Seek		10548914	1					
ANR	10549459	ArgumentList	r		10548914	1					
ANR	10549460	Argument	r		10548914	0					
ANR	10549461	Identifier	r		10548914	0					
ANR	10549462	Argument	"self -> t_maxp . nPos + offset_of ( sfnt_maxProfileTable , maxComponentElements )"		10548914	1					
ANR	10549463	AdditiveExpression	"self -> t_maxp . nPos + offset_of ( sfnt_maxProfileTable , maxComponentElements )"		10548914	0		+			
ANR	10549464	MemberAccess	self -> t_maxp . nPos		10548914	0					
ANR	10549465	PtrMemberAccess	self -> t_maxp		10548914	0					
ANR	10549466	Identifier	self		10548914	0					
ANR	10549467	Identifier	t_maxp		10548914	1					
ANR	10549468	Identifier	nPos		10548914	1					
ANR	10549469	CallExpression	"offset_of ( sfnt_maxProfileTable , maxComponentElements )"		10548914	1					
ANR	10549470	Callee	offset_of		10548914	0					
ANR	10549471	Identifier	offset_of		10548914	0					
ANR	10549472	ArgumentList	sfnt_maxProfileTable		10548914	1					
ANR	10549473	Argument	sfnt_maxProfileTable		10548914	0					
ANR	10549474	Identifier	sfnt_maxProfileTable		10548914	0					
ANR	10549475	Argument	maxComponentElements		10548914	1					
ANR	10549476	Identifier	maxComponentElements		10548914	0					
ANR	10549477	ExpressionStatement	self -> nMaxComponents = ttfReader__UShort ( r )	286:4:8855:8898	10548914	28	True				
ANR	10549478	AssignmentExpression	self -> nMaxComponents = ttfReader__UShort ( r )		10548914	0		=			
ANR	10549479	PtrMemberAccess	self -> nMaxComponents		10548914	0					
ANR	10549480	Identifier	self		10548914	0					
ANR	10549481	Identifier	nMaxComponents		10548914	1					
ANR	10549482	CallExpression	ttfReader__UShort ( r )		10548914	1					
ANR	10549483	Callee	ttfReader__UShort		10548914	0					
ANR	10549484	Identifier	ttfReader__UShort		10548914	0					
ANR	10549485	ArgumentList	r		10548914	1					
ANR	10549486	Argument	r		10548914	0					
ANR	10549487	Identifier	r		10548914	0					
ANR	10549488	IfStatement	if ( self -> nMaxComponents < 10 )		10548914	29					
ANR	10549489	Condition	self -> nMaxComponents < 10	287:7:8907:8931	10548914	0	True				
ANR	10549490	RelationalExpression	self -> nMaxComponents < 10		10548914	0		<			
ANR	10549491	PtrMemberAccess	self -> nMaxComponents		10548914	0					
ANR	10549492	Identifier	self		10548914	0					
ANR	10549493	Identifier	nMaxComponents		10548914	1					
ANR	10549494	PrimaryExpression	10		10548914	1					
ANR	10549495	ExpressionStatement	self -> nMaxComponents = 10	288:8:8942:8967	10548914	1	True				
ANR	10549496	AssignmentExpression	self -> nMaxComponents = 10		10548914	0		=			
ANR	10549497	PtrMemberAccess	self -> nMaxComponents		10548914	0					
ANR	10549498	Identifier	self		10548914	0					
ANR	10549499	Identifier	nMaxComponents		10548914	1					
ANR	10549500	PrimaryExpression	10		10548914	1					
ANR	10549501	ExpressionStatement	"r -> Seek ( r , self -> t_hhea . nPos + offset_of ( sfnt_MetricsHeader , numberLongMetrics ) )"	289:4:9016:9096	10548914	30	True				
ANR	10549502	CallExpression	"r -> Seek ( r , self -> t_hhea . nPos + offset_of ( sfnt_MetricsHeader , numberLongMetrics ) )"		10548914	0					
ANR	10549503	Callee	r -> Seek		10548914	0					
ANR	10549504	PtrMemberAccess	r -> Seek		10548914	0					
ANR	10549505	Identifier	r		10548914	0					
ANR	10549506	Identifier	Seek		10548914	1					
ANR	10549507	ArgumentList	r		10548914	1					
ANR	10549508	Argument	r		10548914	0					
ANR	10549509	Identifier	r		10548914	0					
ANR	10549510	Argument	"self -> t_hhea . nPos + offset_of ( sfnt_MetricsHeader , numberLongMetrics )"		10548914	1					
ANR	10549511	AdditiveExpression	"self -> t_hhea . nPos + offset_of ( sfnt_MetricsHeader , numberLongMetrics )"		10548914	0		+			
ANR	10549512	MemberAccess	self -> t_hhea . nPos		10548914	0					
ANR	10549513	PtrMemberAccess	self -> t_hhea		10548914	0					
ANR	10549514	Identifier	self		10548914	0					
ANR	10549515	Identifier	t_hhea		10548914	1					
ANR	10549516	Identifier	nPos		10548914	1					
ANR	10549517	CallExpression	"offset_of ( sfnt_MetricsHeader , numberLongMetrics )"		10548914	1					
ANR	10549518	Callee	offset_of		10548914	0					
ANR	10549519	Identifier	offset_of		10548914	0					
ANR	10549520	ArgumentList	sfnt_MetricsHeader		10548914	1					
ANR	10549521	Argument	sfnt_MetricsHeader		10548914	0					
ANR	10549522	Identifier	sfnt_MetricsHeader		10548914	0					
ANR	10549523	Argument	numberLongMetrics		10548914	1					
ANR	10549524	Identifier	numberLongMetrics		10548914	0					
ANR	10549525	ExpressionStatement	self -> nLongMetricsHorz = ttfReader__UShort ( r )	290:4:9102:9147	10548914	31	True				
ANR	10549526	AssignmentExpression	self -> nLongMetricsHorz = ttfReader__UShort ( r )		10548914	0		=			
ANR	10549527	PtrMemberAccess	self -> nLongMetricsHorz		10548914	0					
ANR	10549528	Identifier	self		10548914	0					
ANR	10549529	Identifier	nLongMetricsHorz		10548914	1					
ANR	10549530	CallExpression	ttfReader__UShort ( r )		10548914	1					
ANR	10549531	Callee	ttfReader__UShort		10548914	0					
ANR	10549532	Identifier	ttfReader__UShort		10548914	0					
ANR	10549533	ArgumentList	r		10548914	1					
ANR	10549534	Argument	r		10548914	0					
ANR	10549535	Identifier	r		10548914	0					
ANR	10549536	IfStatement	if ( self -> t_vhea . nPos != 0 )		10548914	32					
ANR	10549537	Condition	self -> t_vhea . nPos != 0	291:8:9157:9178	10548914	0	True				
ANR	10549538	EqualityExpression	self -> t_vhea . nPos != 0		10548914	0		!=			
ANR	10549539	MemberAccess	self -> t_vhea . nPos		10548914	0					
ANR	10549540	PtrMemberAccess	self -> t_vhea		10548914	0					
ANR	10549541	Identifier	self		10548914	0					
ANR	10549542	Identifier	t_vhea		10548914	1					
ANR	10549543	Identifier	nPos		10548914	1					
ANR	10549544	PrimaryExpression	0		10548914	1					
ANR	10549545	CompoundStatement		68:32:2601:2601	10548914	1					
ANR	10549546	ExpressionStatement	"r -> Seek ( r , self -> t_vhea . nPos + offset_of ( sfnt_MetricsHeader , numberLongMetrics ) )"	292:8:9191:9271	10548914	0	True				
ANR	10549547	CallExpression	"r -> Seek ( r , self -> t_vhea . nPos + offset_of ( sfnt_MetricsHeader , numberLongMetrics ) )"		10548914	0					
ANR	10549548	Callee	r -> Seek		10548914	0					
ANR	10549549	PtrMemberAccess	r -> Seek		10548914	0					
ANR	10549550	Identifier	r		10548914	0					
ANR	10549551	Identifier	Seek		10548914	1					
ANR	10549552	ArgumentList	r		10548914	1					
ANR	10549553	Argument	r		10548914	0					
ANR	10549554	Identifier	r		10548914	0					
ANR	10549555	Argument	"self -> t_vhea . nPos + offset_of ( sfnt_MetricsHeader , numberLongMetrics )"		10548914	1					
ANR	10549556	AdditiveExpression	"self -> t_vhea . nPos + offset_of ( sfnt_MetricsHeader , numberLongMetrics )"		10548914	0		+			
ANR	10549557	MemberAccess	self -> t_vhea . nPos		10548914	0					
ANR	10549558	PtrMemberAccess	self -> t_vhea		10548914	0					
ANR	10549559	Identifier	self		10548914	0					
ANR	10549560	Identifier	t_vhea		10548914	1					
ANR	10549561	Identifier	nPos		10548914	1					
ANR	10549562	CallExpression	"offset_of ( sfnt_MetricsHeader , numberLongMetrics )"		10548914	1					
ANR	10549563	Callee	offset_of		10548914	0					
ANR	10549564	Identifier	offset_of		10548914	0					
ANR	10549565	ArgumentList	sfnt_MetricsHeader		10548914	1					
ANR	10549566	Argument	sfnt_MetricsHeader		10548914	0					
ANR	10549567	Identifier	sfnt_MetricsHeader		10548914	0					
ANR	10549568	Argument	numberLongMetrics		10548914	1					
ANR	10549569	Identifier	numberLongMetrics		10548914	0					
ANR	10549570	ExpressionStatement	self -> nLongMetricsVert = ttfReader__UShort ( r )	293:8:9281:9326	10548914	1	True				
ANR	10549571	AssignmentExpression	self -> nLongMetricsVert = ttfReader__UShort ( r )		10548914	0		=			
ANR	10549572	PtrMemberAccess	self -> nLongMetricsVert		10548914	0					
ANR	10549573	Identifier	self		10548914	0					
ANR	10549574	Identifier	nLongMetricsVert		10548914	1					
ANR	10549575	CallExpression	ttfReader__UShort ( r )		10548914	1					
ANR	10549576	Callee	ttfReader__UShort		10548914	0					
ANR	10549577	Identifier	ttfReader__UShort		10548914	0					
ANR	10549578	ArgumentList	r		10548914	1					
ANR	10549579	Argument	r		10548914	0					
ANR	10549580	Identifier	r		10548914	0					
ANR	10549581	ElseStatement	else		10548914	0					
ANR	10549582	ExpressionStatement	self -> nLongMetricsVert = 0	295:8:9347:9373	10548914	0	True				
ANR	10549583	AssignmentExpression	self -> nLongMetricsVert = 0		10548914	0		=			
ANR	10549584	PtrMemberAccess	self -> nLongMetricsVert		10548914	0					
ANR	10549585	Identifier	self		10548914	0					
ANR	10549586	Identifier	nLongMetricsVert		10548914	1					
ANR	10549587	PrimaryExpression	0		10548914	1					
ANR	10549588	IfStatement	if ( tti -> usage_size < self -> nMaxComponents * MAX_SUBGLYPH_NESTING )		10548914	33					
ANR	10549589	Condition	tti -> usage_size < self -> nMaxComponents * MAX_SUBGLYPH_NESTING	296:8:9383:9443	10548914	0	True				
ANR	10549590	RelationalExpression	tti -> usage_size < self -> nMaxComponents * MAX_SUBGLYPH_NESTING		10548914	0		<			
ANR	10549591	PtrMemberAccess	tti -> usage_size		10548914	0					
ANR	10549592	Identifier	tti		10548914	0					
ANR	10549593	Identifier	usage_size		10548914	1					
ANR	10549594	MultiplicativeExpression	self -> nMaxComponents * MAX_SUBGLYPH_NESTING		10548914	1		*			
ANR	10549595	PtrMemberAccess	self -> nMaxComponents		10548914	0					
ANR	10549596	Identifier	self		10548914	0					
ANR	10549597	Identifier	nMaxComponents		10548914	1					
ANR	10549598	Identifier	MAX_SUBGLYPH_NESTING		10548914	1					
ANR	10549599	CompoundStatement		73:71:2866:2866	10548914	1					
ANR	10549600	ExpressionStatement	"tti -> ttf_memory -> free ( tti -> ttf_memory , tti -> usage , ""ttfFont__Open"" )"	297:8:9456:9523	10548914	0	True				
ANR	10549601	CallExpression	"tti -> ttf_memory -> free ( tti -> ttf_memory , tti -> usage , ""ttfFont__Open"" )"		10548914	0					
ANR	10549602	Callee	tti -> ttf_memory -> free		10548914	0					
ANR	10549603	PtrMemberAccess	tti -> ttf_memory -> free		10548914	0					
ANR	10549604	PtrMemberAccess	tti -> ttf_memory		10548914	0					
ANR	10549605	Identifier	tti		10548914	0					
ANR	10549606	Identifier	ttf_memory		10548914	1					
ANR	10549607	Identifier	free		10548914	1					
ANR	10549608	ArgumentList	tti -> ttf_memory		10548914	1					
ANR	10549609	Argument	tti -> ttf_memory		10548914	0					
ANR	10549610	PtrMemberAccess	tti -> ttf_memory		10548914	0					
ANR	10549611	Identifier	tti		10548914	0					
ANR	10549612	Identifier	ttf_memory		10548914	1					
ANR	10549613	Argument	tti -> usage		10548914	1					
ANR	10549614	PtrMemberAccess	tti -> usage		10548914	0					
ANR	10549615	Identifier	tti		10548914	0					
ANR	10549616	Identifier	usage		10548914	1					
ANR	10549617	Argument	"""ttfFont__Open"""		10548914	2					
ANR	10549618	PrimaryExpression	"""ttfFont__Open"""		10548914	0					
ANR	10549619	ExpressionStatement	tti -> usage_size = 0	298:8:9533:9552	10548914	1	True				
ANR	10549620	AssignmentExpression	tti -> usage_size = 0		10548914	0		=			
ANR	10549621	PtrMemberAccess	tti -> usage_size		10548914	0					
ANR	10549622	Identifier	tti		10548914	0					
ANR	10549623	Identifier	usage_size		10548914	1					
ANR	10549624	PrimaryExpression	0		10548914	1					
ANR	10549625	ExpressionStatement	"tti -> usage = mem -> alloc_bytes ( mem , sizeof ( ttfSubGlyphUsage ) * self -> nMaxComponents * MAX_SUBGLYPH_NESTING , ""ttfFont__Open"" )"	299:8:9562:9717	10548914	2	True				
ANR	10549626	AssignmentExpression	"tti -> usage = mem -> alloc_bytes ( mem , sizeof ( ttfSubGlyphUsage ) * self -> nMaxComponents * MAX_SUBGLYPH_NESTING , ""ttfFont__Open"" )"		10548914	0		=			
ANR	10549627	PtrMemberAccess	tti -> usage		10548914	0					
ANR	10549628	Identifier	tti		10548914	0					
ANR	10549629	Identifier	usage		10548914	1					
ANR	10549630	CallExpression	"mem -> alloc_bytes ( mem , sizeof ( ttfSubGlyphUsage ) * self -> nMaxComponents * MAX_SUBGLYPH_NESTING , ""ttfFont__Open"" )"		10548914	1					
ANR	10549631	Callee	mem -> alloc_bytes		10548914	0					
ANR	10549632	PtrMemberAccess	mem -> alloc_bytes		10548914	0					
ANR	10549633	Identifier	mem		10548914	0					
ANR	10549634	Identifier	alloc_bytes		10548914	1					
ANR	10549635	ArgumentList	mem		10548914	1					
ANR	10549636	Argument	mem		10548914	0					
ANR	10549637	Identifier	mem		10548914	0					
ANR	10549638	Argument	sizeof ( ttfSubGlyphUsage ) * self -> nMaxComponents * MAX_SUBGLYPH_NESTING		10548914	1					
ANR	10549639	MultiplicativeExpression	sizeof ( ttfSubGlyphUsage ) * self -> nMaxComponents * MAX_SUBGLYPH_NESTING		10548914	0		*			
ANR	10549640	SizeofExpression	sizeof ( ttfSubGlyphUsage )		10548914	0					
ANR	10549641	Sizeof	sizeof		10548914	0					
ANR	10549642	SizeofOperand	ttfSubGlyphUsage		10548914	1					
ANR	10549643	MultiplicativeExpression	self -> nMaxComponents * MAX_SUBGLYPH_NESTING		10548914	1		*			
ANR	10549644	PtrMemberAccess	self -> nMaxComponents		10548914	0					
ANR	10549645	Identifier	self		10548914	0					
ANR	10549646	Identifier	nMaxComponents		10548914	1					
ANR	10549647	Identifier	MAX_SUBGLYPH_NESTING		10548914	1					
ANR	10549648	Argument	"""ttfFont__Open"""		10548914	2					
ANR	10549649	PrimaryExpression	"""ttfFont__Open"""		10548914	0					
ANR	10549650	IfStatement	if ( tti -> usage == NULL )		10548914	3					
ANR	10549651	Condition	tti -> usage == NULL	302:12:9731:9748	10548914	0	True				
ANR	10549652	EqualityExpression	tti -> usage == NULL		10548914	0		==			
ANR	10549653	PtrMemberAccess	tti -> usage		10548914	0					
ANR	10549654	Identifier	tti		10548914	0					
ANR	10549655	Identifier	usage		10548914	1					
ANR	10549656	Identifier	NULL		10548914	1					
ANR	10549657	ReturnStatement	return fMemoryError ;	303:12:9763:9782	10548914	1	True				
ANR	10549658	Identifier	fMemoryError		10548914	0					
ANR	10549659	ExpressionStatement	tti -> usage_size = self -> nMaxComponents * MAX_SUBGLYPH_NESTING	304:8:9792:9853	10548914	4	True				
ANR	10549660	AssignmentExpression	tti -> usage_size = self -> nMaxComponents * MAX_SUBGLYPH_NESTING		10548914	0		=			
ANR	10549661	PtrMemberAccess	tti -> usage_size		10548914	0					
ANR	10549662	Identifier	tti		10548914	0					
ANR	10549663	Identifier	usage_size		10548914	1					
ANR	10549664	MultiplicativeExpression	self -> nMaxComponents * MAX_SUBGLYPH_NESTING		10548914	1		*			
ANR	10549665	PtrMemberAccess	self -> nMaxComponents		10548914	0					
ANR	10549666	Identifier	self		10548914	0					
ANR	10549667	Identifier	nMaxComponents		10548914	1					
ANR	10549668	Identifier	MAX_SUBGLYPH_NESTING		10548914	1					
ANR	10549669	ExpressionStatement	"self -> face = mem -> alloc_struct ( mem , ( const ttfMemoryDescriptor * ) & st_TFace , ""ttfFont__Open"" )"	306:4:9865:9957	10548914	34	True				
ANR	10549670	AssignmentExpression	"self -> face = mem -> alloc_struct ( mem , ( const ttfMemoryDescriptor * ) & st_TFace , ""ttfFont__Open"" )"		10548914	0		=			
ANR	10549671	PtrMemberAccess	self -> face		10548914	0					
ANR	10549672	Identifier	self		10548914	0					
ANR	10549673	Identifier	face		10548914	1					
ANR	10549674	CallExpression	"mem -> alloc_struct ( mem , ( const ttfMemoryDescriptor * ) & st_TFace , ""ttfFont__Open"" )"		10548914	1					
ANR	10549675	Callee	mem -> alloc_struct		10548914	0					
ANR	10549676	PtrMemberAccess	mem -> alloc_struct		10548914	0					
ANR	10549677	Identifier	mem		10548914	0					
ANR	10549678	Identifier	alloc_struct		10548914	1					
ANR	10549679	ArgumentList	mem		10548914	1					
ANR	10549680	Argument	mem		10548914	0					
ANR	10549681	Identifier	mem		10548914	0					
ANR	10549682	Argument	( const ttfMemoryDescriptor * ) & st_TFace		10548914	1					
ANR	10549683	CastExpression	( const ttfMemoryDescriptor * ) & st_TFace		10548914	0					
ANR	10549684	CastTarget	const ttfMemoryDescriptor *		10548914	0					
ANR	10549685	UnaryOperationExpression	& st_TFace		10548914	1					
ANR	10549686	UnaryOperator	&		10548914	0					
ANR	10549687	Identifier	st_TFace		10548914	1					
ANR	10549688	Argument	"""ttfFont__Open"""		10548914	2					
ANR	10549689	PrimaryExpression	"""ttfFont__Open"""		10548914	0					
ANR	10549690	IfStatement	if ( self -> face == NULL )		10548914	35					
ANR	10549691	Condition	self -> face == NULL	307:8:9967:9984	10548914	0	True				
ANR	10549692	EqualityExpression	self -> face == NULL		10548914	0		==			
ANR	10549693	PtrMemberAccess	self -> face		10548914	0					
ANR	10549694	Identifier	self		10548914	0					
ANR	10549695	Identifier	face		10548914	1					
ANR	10549696	Identifier	NULL		10548914	1					
ANR	10549697	ReturnStatement	return fMemoryError ;	308:8:9995:10014	10548914	1	True				
ANR	10549698	Identifier	fMemoryError		10548914	0					
ANR	10549699	ExpressionStatement	"memset ( self -> face , 0 , sizeof ( * self -> face ) )"	309:4:10020:10062	10548914	36	True				
ANR	10549700	CallExpression	"memset ( self -> face , 0 , sizeof ( * self -> face ) )"		10548914	0					
ANR	10549701	Callee	memset		10548914	0					
ANR	10549702	Identifier	memset		10548914	0					
ANR	10549703	ArgumentList	self -> face		10548914	1					
ANR	10549704	Argument	self -> face		10548914	0					
ANR	10549705	PtrMemberAccess	self -> face		10548914	0					
ANR	10549706	Identifier	self		10548914	0					
ANR	10549707	Identifier	face		10548914	1					
ANR	10549708	Argument	0		10548914	1					
ANR	10549709	PrimaryExpression	0		10548914	0					
ANR	10549710	Argument	sizeof ( * self -> face )		10548914	2					
ANR	10549711	SizeofExpression	sizeof ( * self -> face )		10548914	0					
ANR	10549712	Sizeof	sizeof		10548914	0					
ANR	10549713	UnaryOperationExpression	* self -> face		10548914	1					
ANR	10549714	UnaryOperator	*		10548914	0					
ANR	10549715	PtrMemberAccess	self -> face		10548914	1					
ANR	10549716	Identifier	self		10548914	0					
ANR	10549717	Identifier	face		10548914	1					
ANR	10549718	ExpressionStatement	self -> face -> r = r	310:4:10068:10085	10548914	37	True				
ANR	10549719	AssignmentExpression	self -> face -> r = r		10548914	0		=			
ANR	10549720	PtrMemberAccess	self -> face -> r		10548914	0					
ANR	10549721	PtrMemberAccess	self -> face		10548914	0					
ANR	10549722	Identifier	self		10548914	0					
ANR	10549723	Identifier	face		10548914	1					
ANR	10549724	Identifier	r		10548914	1					
ANR	10549725	Identifier	r		10548914	1					
ANR	10549726	ExpressionStatement	self -> face -> font = self	311:4:10091:10114	10548914	38	True				
ANR	10549727	AssignmentExpression	self -> face -> font = self		10548914	0		=			
ANR	10549728	PtrMemberAccess	self -> face -> font		10548914	0					
ANR	10549729	PtrMemberAccess	self -> face		10548914	0					
ANR	10549730	Identifier	self		10548914	0					
ANR	10549731	Identifier	face		10548914	1					
ANR	10549732	Identifier	font		10548914	1					
ANR	10549733	Identifier	self		10548914	1					
ANR	10549734	ExpressionStatement	self -> exec = tti -> exec	312:4:10120:10142	10548914	39	True				
ANR	10549735	AssignmentExpression	self -> exec = tti -> exec		10548914	0		=			
ANR	10549736	PtrMemberAccess	self -> exec		10548914	0					
ANR	10549737	Identifier	self		10548914	0					
ANR	10549738	Identifier	exec		10548914	1					
ANR	10549739	PtrMemberAccess	tti -> exec		10548914	1					
ANR	10549740	Identifier	tti		10548914	0					
ANR	10549741	Identifier	exec		10548914	1					
ANR	10549742	ExpressionStatement	code = Face_Create ( self -> face )	313:4:10148:10178	10548914	40	True				
ANR	10549743	AssignmentExpression	code = Face_Create ( self -> face )		10548914	0		=			
ANR	10549744	Identifier	code		10548914	0					
ANR	10549745	CallExpression	Face_Create ( self -> face )		10548914	1					
ANR	10549746	Callee	Face_Create		10548914	0					
ANR	10549747	Identifier	Face_Create		10548914	0					
ANR	10549748	ArgumentList	self -> face		10548914	1					
ANR	10549749	Argument	self -> face		10548914	0					
ANR	10549750	PtrMemberAccess	self -> face		10548914	0					
ANR	10549751	Identifier	self		10548914	0					
ANR	10549752	Identifier	face		10548914	1					
ANR	10549753	IfStatement	if ( code )		10548914	41					
ANR	10549754	Condition	code	314:8:10188:10191	10548914	0	True				
ANR	10549755	Identifier	code		10548914	0					
ANR	10549756	ReturnStatement	return fMemoryError ;	315:8:10202:10221	10548914	1	True				
ANR	10549757	Identifier	fMemoryError		10548914	0					
ANR	10549758	ExpressionStatement	code = r -> Error ( r )	316:4:10227:10245	10548914	42	True				
ANR	10549759	AssignmentExpression	code = r -> Error ( r )		10548914	0		=			
ANR	10549760	Identifier	code		10548914	0					
ANR	10549761	CallExpression	r -> Error ( r )		10548914	1					
ANR	10549762	Callee	r -> Error		10548914	0					
ANR	10549763	PtrMemberAccess	r -> Error		10548914	0					
ANR	10549764	Identifier	r		10548914	0					
ANR	10549765	Identifier	Error		10548914	1					
ANR	10549766	ArgumentList	r		10548914	1					
ANR	10549767	Argument	r		10548914	0					
ANR	10549768	Identifier	r		10548914	0					
ANR	10549769	IfStatement	if ( code < 0 )		10548914	43					
ANR	10549770	Condition	code < 0	317:8:10255:10262	10548914	0	True				
ANR	10549771	RelationalExpression	code < 0		10548914	0		<			
ANR	10549772	Identifier	code		10548914	0					
ANR	10549773	PrimaryExpression	0		10548914	1					
ANR	10549774	ReturnStatement	return fBadFontData ;	318:8:10273:10292	10548914	1	True				
ANR	10549775	Identifier	fBadFontData		10548914	0					
ANR	10549776	ExpressionStatement	"self -> inst = mem -> alloc_struct ( mem , ( const ttfMemoryDescriptor * ) & st_TInstance , ""ttfFont__Open"" )"	319:4:10298:10394	10548914	44	True				
ANR	10549777	AssignmentExpression	"self -> inst = mem -> alloc_struct ( mem , ( const ttfMemoryDescriptor * ) & st_TInstance , ""ttfFont__Open"" )"		10548914	0		=			
ANR	10549778	PtrMemberAccess	self -> inst		10548914	0					
ANR	10549779	Identifier	self		10548914	0					
ANR	10549780	Identifier	inst		10548914	1					
ANR	10549781	CallExpression	"mem -> alloc_struct ( mem , ( const ttfMemoryDescriptor * ) & st_TInstance , ""ttfFont__Open"" )"		10548914	1					
ANR	10549782	Callee	mem -> alloc_struct		10548914	0					
ANR	10549783	PtrMemberAccess	mem -> alloc_struct		10548914	0					
ANR	10549784	Identifier	mem		10548914	0					
ANR	10549785	Identifier	alloc_struct		10548914	1					
ANR	10549786	ArgumentList	mem		10548914	1					
ANR	10549787	Argument	mem		10548914	0					
ANR	10549788	Identifier	mem		10548914	0					
ANR	10549789	Argument	( const ttfMemoryDescriptor * ) & st_TInstance		10548914	1					
ANR	10549790	CastExpression	( const ttfMemoryDescriptor * ) & st_TInstance		10548914	0					
ANR	10549791	CastTarget	const ttfMemoryDescriptor *		10548914	0					
ANR	10549792	UnaryOperationExpression	& st_TInstance		10548914	1					
ANR	10549793	UnaryOperator	&		10548914	0					
ANR	10549794	Identifier	st_TInstance		10548914	1					
ANR	10549795	Argument	"""ttfFont__Open"""		10548914	2					
ANR	10549796	PrimaryExpression	"""ttfFont__Open"""		10548914	0					
ANR	10549797	IfStatement	if ( self -> inst == NULL )		10548914	45					
ANR	10549798	Condition	self -> inst == NULL	320:8:10404:10421	10548914	0	True				
ANR	10549799	EqualityExpression	self -> inst == NULL		10548914	0		==			
ANR	10549800	PtrMemberAccess	self -> inst		10548914	0					
ANR	10549801	Identifier	self		10548914	0					
ANR	10549802	Identifier	inst		10548914	1					
ANR	10549803	Identifier	NULL		10548914	1					
ANR	10549804	ReturnStatement	return fMemoryError ;	321:8:10432:10451	10548914	1	True				
ANR	10549805	Identifier	fMemoryError		10548914	0					
ANR	10549806	ExpressionStatement	"memset ( self -> inst , 0 , sizeof ( * self -> inst ) )"	322:4:10457:10499	10548914	46	True				
ANR	10549807	CallExpression	"memset ( self -> inst , 0 , sizeof ( * self -> inst ) )"		10548914	0					
ANR	10549808	Callee	memset		10548914	0					
ANR	10549809	Identifier	memset		10548914	0					
ANR	10549810	ArgumentList	self -> inst		10548914	1					
ANR	10549811	Argument	self -> inst		10548914	0					
ANR	10549812	PtrMemberAccess	self -> inst		10548914	0					
ANR	10549813	Identifier	self		10548914	0					
ANR	10549814	Identifier	inst		10548914	1					
ANR	10549815	Argument	0		10548914	1					
ANR	10549816	PrimaryExpression	0		10548914	0					
ANR	10549817	Argument	sizeof ( * self -> inst )		10548914	2					
ANR	10549818	SizeofExpression	sizeof ( * self -> inst )		10548914	0					
ANR	10549819	Sizeof	sizeof		10548914	0					
ANR	10549820	UnaryOperationExpression	* self -> inst		10548914	1					
ANR	10549821	UnaryOperator	*		10548914	0					
ANR	10549822	PtrMemberAccess	self -> inst		10548914	1					
ANR	10549823	Identifier	self		10548914	0					
ANR	10549824	Identifier	inst		10548914	1					
ANR	10549825	ExpressionStatement	"code = Context_Create ( self -> exec , self -> face )"	323:4:10505:10550	10548914	47	True				
ANR	10549826	AssignmentExpression	"code = Context_Create ( self -> exec , self -> face )"		10548914	0		=			
ANR	10549827	Identifier	code		10548914	0					
ANR	10549828	CallExpression	"Context_Create ( self -> exec , self -> face )"		10548914	1					
ANR	10549829	Callee	Context_Create		10548914	0					
ANR	10549830	Identifier	Context_Create		10548914	0					
ANR	10549831	ArgumentList	self -> exec		10548914	1					
ANR	10549832	Argument	self -> exec		10548914	0					
ANR	10549833	PtrMemberAccess	self -> exec		10548914	0					
ANR	10549834	Identifier	self		10548914	0					
ANR	10549835	Identifier	exec		10548914	1					
ANR	10549836	Argument	self -> face		10548914	1					
ANR	10549837	PtrMemberAccess	self -> face		10548914	0					
ANR	10549838	Identifier	self		10548914	0					
ANR	10549839	Identifier	face		10548914	1					
ANR	10549840	IfStatement	if ( code == TT_Err_Out_Of_Memory )		10548914	48					
ANR	10549841	Condition	code == TT_Err_Out_Of_Memory	324:8:10619:10646	10548914	0	True				
ANR	10549842	EqualityExpression	code == TT_Err_Out_Of_Memory		10548914	0		==			
ANR	10549843	Identifier	code		10548914	0					
ANR	10549844	Identifier	TT_Err_Out_Of_Memory		10548914	1					
ANR	10549845	ReturnStatement	return fMemoryError ;	325:8:10657:10676	10548914	1	True				
ANR	10549846	Identifier	fMemoryError		10548914	0					
ANR	10549847	ExpressionStatement	"code = Instance_Create ( self -> inst , self -> face )"	326:4:10682:10728	10548914	49	True				
ANR	10549848	AssignmentExpression	"code = Instance_Create ( self -> inst , self -> face )"		10548914	0		=			
ANR	10549849	Identifier	code		10548914	0					
ANR	10549850	CallExpression	"Instance_Create ( self -> inst , self -> face )"		10548914	1					
ANR	10549851	Callee	Instance_Create		10548914	0					
ANR	10549852	Identifier	Instance_Create		10548914	0					
ANR	10549853	ArgumentList	self -> inst		10548914	1					
ANR	10549854	Argument	self -> inst		10548914	0					
ANR	10549855	PtrMemberAccess	self -> inst		10548914	0					
ANR	10549856	Identifier	self		10548914	0					
ANR	10549857	Identifier	inst		10548914	1					
ANR	10549858	Argument	self -> face		10548914	1					
ANR	10549859	PtrMemberAccess	self -> face		10548914	0					
ANR	10549860	Identifier	self		10548914	0					
ANR	10549861	Identifier	face		10548914	1					
ANR	10549862	IfStatement	if ( code == TT_Err_Out_Of_Memory )		10548914	50					
ANR	10549863	Condition	code == TT_Err_Out_Of_Memory	327:8:10738:10765	10548914	0	True				
ANR	10549864	EqualityExpression	code == TT_Err_Out_Of_Memory		10548914	0		==			
ANR	10549865	Identifier	code		10548914	0					
ANR	10549866	Identifier	TT_Err_Out_Of_Memory		10548914	1					
ANR	10549867	ReturnStatement	return fMemoryError ;	328:8:10776:10795	10548914	1	True				
ANR	10549868	Identifier	fMemoryError		10548914	0					
ANR	10549869	IfStatement	if ( code )		10548914	51					
ANR	10549870	Condition	code	329:8:10805:10808	10548914	0	True				
ANR	10549871	Identifier	code		10548914	0					
ANR	10549872	ReturnStatement	return fBadFontData ;	330:8:10819:10838	10548914	1	True				
ANR	10549873	Identifier	fBadFontData		10548914	0					
ANR	10549874	ForStatement	for ( k = 0 ; k < self -> face -> cvtSize ; k ++ )		10548914	52					
ANR	10549875	ForInit	k = 0 ;	331:8:10848:10853	10548914	0	True				
ANR	10549876	AssignmentExpression	k = 0		10548914	0		=			
ANR	10549877	Identifier	k		10548914	0					
ANR	10549878	PrimaryExpression	0		10548914	1					
ANR	10549879	Condition	k < self -> face -> cvtSize	331:15:10855:10877	10548914	1	True				
ANR	10549880	RelationalExpression	k < self -> face -> cvtSize		10548914	0		<			
ANR	10549881	Identifier	k		10548914	0					
ANR	10549882	PtrMemberAccess	self -> face -> cvtSize		10548914	1					
ANR	10549883	PtrMemberAccess	self -> face		10548914	0					
ANR	10549884	Identifier	self		10548914	0					
ANR	10549885	Identifier	face		10548914	1					
ANR	10549886	Identifier	cvtSize		10548914	1					
ANR	10549887	PostIncDecOperationExpression	k ++	331:40:10880:10882	10548914	2	True				
ANR	10549888	Identifier	k		10548914	0					
ANR	10549889	IncDec	++		10548914	1					
ANR	10549890	ExpressionStatement	self -> inst -> cvt [ k ] = shortToF26Dot6 ( self -> face -> cvt [ k ] )	332:8:10893:10948	10548914	3	True				
ANR	10549891	AssignmentExpression	self -> inst -> cvt [ k ] = shortToF26Dot6 ( self -> face -> cvt [ k ] )		10548914	0		=			
ANR	10549892	ArrayIndexing	self -> inst -> cvt [ k ]		10548914	0					
ANR	10549893	PtrMemberAccess	self -> inst -> cvt		10548914	0					
ANR	10549894	PtrMemberAccess	self -> inst		10548914	0					
ANR	10549895	Identifier	self		10548914	0					
ANR	10549896	Identifier	inst		10548914	1					
ANR	10549897	Identifier	cvt		10548914	1					
ANR	10549898	Identifier	k		10548914	1					
ANR	10549899	CallExpression	shortToF26Dot6 ( self -> face -> cvt [ k ] )		10548914	1					
ANR	10549900	Callee	shortToF26Dot6		10548914	0					
ANR	10549901	Identifier	shortToF26Dot6		10548914	0					
ANR	10549902	ArgumentList	self -> face -> cvt [ k ]		10548914	1					
ANR	10549903	Argument	self -> face -> cvt [ k ]		10548914	0					
ANR	10549904	ArrayIndexing	self -> face -> cvt [ k ]		10548914	0					
ANR	10549905	PtrMemberAccess	self -> face -> cvt		10548914	0					
ANR	10549906	PtrMemberAccess	self -> face		10548914	0					
ANR	10549907	Identifier	self		10548914	0					
ANR	10549908	Identifier	face		10548914	1					
ANR	10549909	Identifier	cvt		10548914	1					
ANR	10549910	Identifier	k		10548914	1					
ANR	10549911	ExpressionStatement	code = Instance_Init ( self -> inst )	333:4:10954:10986	10548914	53	True				
ANR	10549912	AssignmentExpression	code = Instance_Init ( self -> inst )		10548914	0		=			
ANR	10549913	Identifier	code		10548914	0					
ANR	10549914	CallExpression	Instance_Init ( self -> inst )		10548914	1					
ANR	10549915	Callee	Instance_Init		10548914	0					
ANR	10549916	Identifier	Instance_Init		10548914	0					
ANR	10549917	ArgumentList	self -> inst		10548914	1					
ANR	10549918	Argument	self -> inst		10548914	0					
ANR	10549919	PtrMemberAccess	self -> inst		10548914	0					
ANR	10549920	Identifier	self		10548914	0					
ANR	10549921	Identifier	inst		10548914	1					
ANR	10549922	IfStatement	if ( code == TT_Err_Out_Of_Memory )		10548914	54					
ANR	10549923	Condition	code == TT_Err_Out_Of_Memory	334:8:10996:11023	10548914	0	True				
ANR	10549924	EqualityExpression	code == TT_Err_Out_Of_Memory		10548914	0		==			
ANR	10549925	Identifier	code		10548914	0					
ANR	10549926	Identifier	TT_Err_Out_Of_Memory		10548914	1					
ANR	10549927	ReturnStatement	return fMemoryError ;	335:8:11034:11053	10548914	1	True				
ANR	10549928	Identifier	fMemoryError		10548914	0					
ANR	10549929	IfStatement	if ( code >= TT_Err_Invalid_Opcode && code <= TT_Err_Invalid_Displacement )		10548914	55					
ANR	10549930	Condition	code >= TT_Err_Invalid_Opcode && code <= TT_Err_Invalid_Displacement	336:8:11063:11130	10548914	0	True				
ANR	10549931	AndExpression	code >= TT_Err_Invalid_Opcode && code <= TT_Err_Invalid_Displacement		10548914	0		&&			
ANR	10549932	RelationalExpression	code >= TT_Err_Invalid_Opcode		10548914	0		>=			
ANR	10549933	Identifier	code		10548914	0					
ANR	10549934	Identifier	TT_Err_Invalid_Opcode		10548914	1					
ANR	10549935	RelationalExpression	code <= TT_Err_Invalid_Displacement		10548914	1		<=			
ANR	10549936	Identifier	code		10548914	0					
ANR	10549937	Identifier	TT_Err_Invalid_Displacement		10548914	1					
ANR	10549938	ExpressionStatement	code1 = fBadInstruction	337:8:11141:11164	10548914	1	True				
ANR	10549939	AssignmentExpression	code1 = fBadInstruction		10548914	0		=			
ANR	10549940	Identifier	code1		10548914	0					
ANR	10549941	Identifier	fBadInstruction		10548914	1					
ANR	10549942	ElseStatement	else		10548914	0					
ANR	10549943	IfStatement	if ( code )		10548914	0					
ANR	10549944	Condition	code	338:13:11179:11182	10548914	0	True				
ANR	10549945	Identifier	code		10548914	0					
ANR	10549946	ReturnStatement	return fBadFontData ;	339:8:11193:11212	10548914	1	True				
ANR	10549947	Identifier	fBadFontData		10548914	0					
ANR	10549948	ExpressionStatement	I . z = self -> inst	340:4:11218:11234	10548914	56	True				
ANR	10549949	AssignmentExpression	I . z = self -> inst		10548914	0		=			
ANR	10549950	MemberAccess	I . z		10548914	0					
ANR	10549951	Identifier	I		10548914	0					
ANR	10549952	Identifier	z		10548914	1					
ANR	10549953	PtrMemberAccess	self -> inst		10548914	1					
ANR	10549954	Identifier	self		10548914	0					
ANR	10549955	Identifier	inst		10548914	1					
ANR	10549956	IfStatement	if ( design_grid )		10548914	57					
ANR	10549957	Condition	design_grid	341:8:11244:11254	10548914	0	True				
ANR	10549958	Identifier	design_grid		10548914	0					
ANR	10549959	ExpressionStatement	ww = hh = shortToF26Dot6 ( self -> nUnitsPerEm )	342:8:11265:11308	10548914	1	True				
ANR	10549960	AssignmentExpression	ww = hh = shortToF26Dot6 ( self -> nUnitsPerEm )		10548914	0		=			
ANR	10549961	Identifier	ww		10548914	0					
ANR	10549962	AssignmentExpression	hh = shortToF26Dot6 ( self -> nUnitsPerEm )		10548914	1		=			
ANR	10549963	Identifier	hh		10548914	0					
ANR	10549964	CallExpression	shortToF26Dot6 ( self -> nUnitsPerEm )		10548914	1					
ANR	10549965	Callee	shortToF26Dot6		10548914	0					
ANR	10549966	Identifier	shortToF26Dot6		10548914	0					
ANR	10549967	ArgumentList	self -> nUnitsPerEm		10548914	1					
ANR	10549968	Argument	self -> nUnitsPerEm		10548914	0					
ANR	10549969	PtrMemberAccess	self -> nUnitsPerEm		10548914	0					
ANR	10549970	Identifier	self		10548914	0					
ANR	10549971	Identifier	nUnitsPerEm		10548914	1					
ANR	10549972	ElseStatement	else		10548914	0					
ANR	10549973	CompoundStatement		120:9:4739:4739	10548914	0					
ANR	10549974	ExpressionStatement	ww = floatToF26Dot6 ( w )	345:8:11405:11427	10548914	0	True				
ANR	10549975	AssignmentExpression	ww = floatToF26Dot6 ( w )		10548914	0		=			
ANR	10549976	Identifier	ww		10548914	0					
ANR	10549977	CallExpression	floatToF26Dot6 ( w )		10548914	1					
ANR	10549978	Callee	floatToF26Dot6		10548914	0					
ANR	10549979	Identifier	floatToF26Dot6		10548914	0					
ANR	10549980	ArgumentList	w		10548914	1					
ANR	10549981	Argument	w		10548914	0					
ANR	10549982	Identifier	w		10548914	0					
ANR	10549983	ExpressionStatement	hh = floatToF26Dot6 ( h )	346:8:11437:11459	10548914	1	True				
ANR	10549984	AssignmentExpression	hh = floatToF26Dot6 ( h )		10548914	0		=			
ANR	10549985	Identifier	hh		10548914	0					
ANR	10549986	CallExpression	floatToF26Dot6 ( h )		10548914	1					
ANR	10549987	Callee	floatToF26Dot6		10548914	0					
ANR	10549988	Identifier	floatToF26Dot6		10548914	0					
ANR	10549989	ArgumentList	h		10548914	1					
ANR	10549990	Argument	h		10548914	0					
ANR	10549991	Identifier	h		10548914	0					
ANR	10549992	ExpressionStatement	"code = TT_Set_Instance_CharSizes ( I , ww , hh )"	348:4:11471:11514	10548914	58	True				
ANR	10549993	AssignmentExpression	"code = TT_Set_Instance_CharSizes ( I , ww , hh )"		10548914	0		=			
ANR	10549994	Identifier	code		10548914	0					
ANR	10549995	CallExpression	"TT_Set_Instance_CharSizes ( I , ww , hh )"		10548914	1					
ANR	10549996	Callee	TT_Set_Instance_CharSizes		10548914	0					
ANR	10549997	Identifier	TT_Set_Instance_CharSizes		10548914	0					
ANR	10549998	ArgumentList	I		10548914	1					
ANR	10549999	Argument	I		10548914	0					
ANR	10550000	Identifier	I		10548914	0					
ANR	10550001	Argument	ww		10548914	1					
ANR	10550002	Identifier	ww		10548914	0					
ANR	10550003	Argument	hh		10548914	2					
ANR	10550004	Identifier	hh		10548914	0					
ANR	10550005	ExpressionStatement	self -> inst -> metrics = self -> exec -> metrics	349:4:11520:11562	10548914	59	True				
ANR	10550006	AssignmentExpression	self -> inst -> metrics = self -> exec -> metrics		10548914	0		=			
ANR	10550007	PtrMemberAccess	self -> inst -> metrics		10548914	0					
ANR	10550008	PtrMemberAccess	self -> inst		10548914	0					
ANR	10550009	Identifier	self		10548914	0					
ANR	10550010	Identifier	inst		10548914	1					
ANR	10550011	Identifier	metrics		10548914	1					
ANR	10550012	PtrMemberAccess	self -> exec -> metrics		10548914	1					
ANR	10550013	PtrMemberAccess	self -> exec		10548914	0					
ANR	10550014	Identifier	self		10548914	0					
ANR	10550015	Identifier	exec		10548914	1					
ANR	10550016	Identifier	metrics		10548914	1					
ANR	10550017	IfStatement	if ( code == TT_Err_Invalid_Engine )		10548914	60					
ANR	10550018	Condition	code == TT_Err_Invalid_Engine	350:8:11572:11600	10548914	0	True				
ANR	10550019	EqualityExpression	code == TT_Err_Invalid_Engine		10548914	0		==			
ANR	10550020	Identifier	code		10548914	0					
ANR	10550021	Identifier	TT_Err_Invalid_Engine		10548914	1					
ANR	10550022	ReturnStatement	return fPatented ;	351:8:11611:11627	10548914	1	True				
ANR	10550023	Identifier	fPatented		10548914	0					
ANR	10550024	IfStatement	if ( code == TT_Err_Out_Of_Memory )		10548914	61					
ANR	10550025	Condition	code == TT_Err_Out_Of_Memory	352:8:11637:11664	10548914	0	True				
ANR	10550026	EqualityExpression	code == TT_Err_Out_Of_Memory		10548914	0		==			
ANR	10550027	Identifier	code		10548914	0					
ANR	10550028	Identifier	TT_Err_Out_Of_Memory		10548914	1					
ANR	10550029	ReturnStatement	return fMemoryError ;	353:8:11675:11694	10548914	1	True				
ANR	10550030	Identifier	fMemoryError		10548914	0					
ANR	10550031	IfStatement	if ( code >= TT_Err_Invalid_Opcode && code <= TT_Err_Invalid_Displacement )		10548914	62					
ANR	10550032	Condition	code >= TT_Err_Invalid_Opcode && code <= TT_Err_Invalid_Displacement	354:8:11704:11771	10548914	0	True				
ANR	10550033	AndExpression	code >= TT_Err_Invalid_Opcode && code <= TT_Err_Invalid_Displacement		10548914	0		&&			
ANR	10550034	RelationalExpression	code >= TT_Err_Invalid_Opcode		10548914	0		>=			
ANR	10550035	Identifier	code		10548914	0					
ANR	10550036	Identifier	TT_Err_Invalid_Opcode		10548914	1					
ANR	10550037	RelationalExpression	code <= TT_Err_Invalid_Displacement		10548914	1		<=			
ANR	10550038	Identifier	code		10548914	0					
ANR	10550039	Identifier	TT_Err_Invalid_Displacement		10548914	1					
ANR	10550040	ReturnStatement	return fBadInstruction ;	355:8:11782:11804	10548914	1	True				
ANR	10550041	Identifier	fBadInstruction		10548914	0					
ANR	10550042	IfStatement	if ( code )		10548914	63					
ANR	10550043	Condition	code	356:8:11814:11817	10548914	0	True				
ANR	10550044	Identifier	code		10548914	0					
ANR	10550045	ReturnStatement	return fBadFontData ;	357:8:11828:11847	10548914	1	True				
ANR	10550046	Identifier	fBadFontData		10548914	0					
ANR	10550047	IfStatement	if ( code1 )		10548914	64					
ANR	10550048	Condition	code1	358:8:11857:11861	10548914	0	True				
ANR	10550049	Identifier	code1		10548914	0					
ANR	10550050	ReturnStatement	return code1 ;	359:8:11872:11884	10548914	1	True				
ANR	10550051	Identifier	code1		10548914	0					
ANR	10550052	ReturnStatement	return code ;	360:4:11890:11901	10548914	65	True				
ANR	10550053	Identifier	code		10548914	0					
ANR	10550054	ReturnType	FontError		10548914	1					
ANR	10550055	Identifier	ttfFont__Open		10548914	2					
ANR	10550056	ParameterList	"ttfInterpreter * tti , ttfFont * self , ttfReader * r , unsigned int nTTC , float w , float h , bool design_grid"		10548914	3					
ANR	10550057	Parameter	ttfInterpreter * tti	221:24:6402:6420	10548914	0	True				
ANR	10550058	ParameterType	ttfInterpreter *		10548914	0					
ANR	10550059	Identifier	tti		10548914	1					
ANR	10550060	Parameter	ttfFont * self	221:45:6423:6435	10548914	1	True				
ANR	10550061	ParameterType	ttfFont *		10548914	0					
ANR	10550062	Identifier	self		10548914	1					
ANR	10550063	Parameter	ttfReader * r	221:60:6438:6449	10548914	2	True				
ANR	10550064	ParameterType	ttfReader *		10548914	0					
ANR	10550065	Identifier	r		10548914	1					
ANR	10550066	Parameter	unsigned int nTTC	222:36:6488:6504	10548914	3	True				
ANR	10550067	ParameterType	unsigned int		10548914	0					
ANR	10550068	Identifier	nTTC		10548914	1					
ANR	10550069	Parameter	float w	222:55:6507:6513	10548914	4	True				
ANR	10550070	ParameterType	float		10548914	0					
ANR	10550071	Identifier	w		10548914	1					
ANR	10550072	Parameter	float h	222:64:6516:6522	10548914	5	True				
ANR	10550073	ParameterType	float		10548914	0					
ANR	10550074	Identifier	h		10548914	1					
ANR	10550075	Parameter	bool design_grid	223:36:6561:6576	10548914	6	True				
ANR	10550076	ParameterType	bool		10548914	0					
ANR	10550077	Identifier	design_grid		10548914	1					
ANR	10550078	CFGEntryNode	ENTRY		10548914		True				
ANR	10550079	CFGExitNode	EXIT		10548914		True				
ANR	10550080	Symbol	hh		10548914						
ANR	10550081	Symbol	self -> t_head		10548914						
ANR	10550082	Symbol	& st_TInstance		10548914						
ANR	10550083	Symbol	self -> t_maxp . nPos		10548914						
ANR	10550084	Symbol	unitsPerEm		10548914						
ANR	10550085	Symbol	design_grid		10548914						
ANR	10550086	Symbol	Instance_Create		10548914						
ANR	10550087	Symbol	sTag		10548914						
ANR	10550088	Symbol	fMemoryError		10548914						
ANR	10550089	Symbol	self -> tti		10548914						
ANR	10550090	Symbol	sfnt_maxProfileTable		10548914						
ANR	10550091	Symbol	fPatented		10548914						
ANR	10550092	Symbol	offset_of		10548914						
ANR	10550093	Symbol	self -> nUnitsPerEm		10548914						
ANR	10550094	Symbol	* self		10548914						
ANR	10550095	Symbol	self -> inst		10548914						
ANR	10550096	Symbol	nOffset		10548914						
ANR	10550097	Symbol	numberLongMetrics		10548914						
ANR	10550098	Symbol	fTableNotFound		10548914						
ANR	10550099	Symbol	nPos		10548914						
ANR	10550100	Symbol	sfnt_MetricsHeader		10548914						
ANR	10550101	Symbol	shortToF26Dot6		10548914						
ANR	10550102	Symbol	e -> nPos		10548914						
ANR	10550103	Symbol	self -> face		10548914						
ANR	10550104	Symbol	tti -> exec		10548914						
ANR	10550105	Symbol	* * self -> face		10548914						
ANR	10550106	Symbol	self -> nLongMetricsHorz		10548914						
ANR	10550107	Symbol	* self -> inst -> cvt		10548914						
ANR	10550108	Symbol	TT_Err_Invalid_Engine		10548914						
ANR	10550109	Symbol	code1		10548914						
ANR	10550110	Symbol	self -> t_vhea . nPos		10548914						
ANR	10550111	Symbol	self -> t_hhea		10548914						
ANR	10550112	Symbol	ttfFont__get_table_ptr		10548914						
ANR	10550113	Symbol	numGlyphs		10548914						
ANR	10550114	Symbol	flags		10548914						
ANR	10550115	Symbol	I		10548914						
ANR	10550116	Symbol	self -> t_head . nPos		10548914						
ANR	10550117	Symbol	fBadInstruction		10548914						
ANR	10550118	Symbol	self -> exec -> metrics		10548914						
ANR	10550119	Symbol	maxComponentElements		10548914						
ANR	10550120	Symbol	Instance_Init		10548914						
ANR	10550121	Symbol	e		10548914						
ANR	10550122	Symbol	* * self		10548914						
ANR	10550123	Symbol	self -> inst -> metrics		10548914						
ANR	10550124	Symbol	h		10548914						
ANR	10550125	Symbol	self -> exec		10548914						
ANR	10550126	Symbol	i		10548914						
ANR	10550127	Symbol	* self -> exec		10548914						
ANR	10550128	Symbol	k		10548914						
ANR	10550129	Symbol	ttfReader__UInt		10548914						
ANR	10550130	Symbol	TT_Set_Instance_CharSizes		10548914						
ANR	10550131	Symbol	ttfReader__UShort		10548914						
ANR	10550132	Symbol	self -> t_hhea . nPos		10548914						
ANR	10550133	Symbol	floatToF26Dot6		10548914						
ANR	10550134	Symbol	r		10548914						
ANR	10550135	Symbol	w		10548914						
ANR	10550136	Symbol	self		10548914						
ANR	10550137	Symbol	self -> t_vhea		10548914						
ANR	10550138	Symbol	TT_Err_Invalid_Displacement		10548914						
ANR	10550139	Symbol	e -> nLen		10548914						
ANR	10550140	Symbol	self -> face -> cvt		10548914						
ANR	10550141	Symbol	nNumTables		10548914						
ANR	10550142	Symbol	sfnt_FontHeader		10548914						
ANR	10550143	Symbol	self -> nMaxComponents		10548914						
ANR	10550144	Symbol	self -> face -> r		10548914						
ANR	10550145	Symbol	r -> Error		10548914						
ANR	10550146	Symbol	* tti		10548914						
ANR	10550147	Symbol	memcmp		10548914						
ANR	10550148	Symbol	fBadFontData		10548914						
ANR	10550149	Symbol	nLength		10548914						
ANR	10550150	Symbol	self -> nNumGlyphs		10548914						
ANR	10550151	Symbol	self -> inst -> cvt		10548914						
ANR	10550152	Symbol	self -> nFlags		10548914						
ANR	10550153	Symbol	* * * self		10548914						
ANR	10550154	Symbol	self -> face -> cvtSize		10548914						
ANR	10550155	Symbol	TT_Err_Invalid_Opcode		10548914						
ANR	10550156	Symbol	I . z		10548914						
ANR	10550157	Symbol	NULL		10548914						
ANR	10550158	Symbol	nTTC		10548914						
ANR	10550159	Symbol	* self -> face		10548914						
ANR	10550160	Symbol	sVersion1		10548914						
ANR	10550161	Symbol	sVersion2		10548914						
ANR	10550162	Symbol	* * self -> inst		10548914						
ANR	10550163	Symbol	self -> nIndexToLocFormat		10548914						
ANR	10550164	Symbol	tti -> usage		10548914						
ANR	10550165	Symbol	sVersion		10548914						
ANR	10550166	Symbol	indexToLocFormat		10548914						
ANR	10550167	Symbol	self -> t_maxp		10548914						
ANR	10550168	Symbol	* mem		10548914						
ANR	10550169	Symbol	code		10548914						
ANR	10550170	Symbol	TT_Err_Out_Of_Memory		10548914						
ANR	10550171	Symbol	fUnimplemented		10548914						
ANR	10550172	Symbol	tti -> usage_size		10548914						
ANR	10550173	Symbol	mem		10548914						
ANR	10550174	Symbol	MAX_SUBGLYPH_NESTING		10548914						
ANR	10550175	Symbol	* self -> inst		10548914						
ANR	10550176	Symbol	* self -> face -> cvt		10548914						
ANR	10550177	Symbol	ww		10548914						
ANR	10550178	Symbol	& st_TFace		10548914						
ANR	10550179	Symbol	mem -> alloc_bytes		10548914						
ANR	10550180	Symbol	tti		10548914						
ANR	10550181	Symbol	self -> face -> font		10548914						
ANR	10550182	Symbol	self -> design_grid		10548914						
ANR	10550183	Symbol	self -> nLongMetricsVert		10548914						
ANR	10550184	Symbol	Context_Create		10548914						
ANR	10550185	Symbol	* e		10548914						
ANR	10550186	Symbol	tti -> ttf_memory		10548914						
ANR	10550187	Symbol	nFonts		10548914						
ANR	10550188	Symbol	* k		10548914						
ANR	10550189	Symbol	* sTag		10548914						
ANR	10550190	Symbol	Face_Create		10548914						
ANR	10550191	Symbol	mem -> alloc_struct		10548914						
ANR	10550192	Symbol	* r		10548914						
ANR	10550193	Function	ttfFont__StartGlyph	363:0:11906:12172							
ANR	10550194	FunctionDef	ttfFont__StartGlyph (ttfFont * self)		10550193	0					
ANR	10550195	CompoundStatement		364:0:11953:12172	10550193	0					
ANR	10550196	ExpressionStatement	"Context_Load ( self -> exec , self -> inst )"	364:3:11957:11995	10550193	0	True				
ANR	10550197	CallExpression	"Context_Load ( self -> exec , self -> inst )"		10550193	0					
ANR	10550198	Callee	Context_Load		10550193	0					
ANR	10550199	Identifier	Context_Load		10550193	0					
ANR	10550200	ArgumentList	self -> exec		10550193	1					
ANR	10550201	Argument	self -> exec		10550193	0					
ANR	10550202	PtrMemberAccess	self -> exec		10550193	0					
ANR	10550203	Identifier	self		10550193	0					
ANR	10550204	Identifier	exec		10550193	1					
ANR	10550205	Argument	self -> inst		10550193	1					
ANR	10550206	PtrMemberAccess	self -> inst		10550193	0					
ANR	10550207	Identifier	self		10550193	0					
ANR	10550208	Identifier	inst		10550193	1					
ANR	10550209	IfStatement	if ( self -> inst -> GS . instruct_control & 2 )		10550193	1					
ANR	10550210	Condition	self -> inst -> GS . instruct_control & 2	365:9:12006:12040	10550193	0	True				
ANR	10550211	BitAndExpression	self -> inst -> GS . instruct_control & 2		10550193	0		&			
ANR	10550212	MemberAccess	self -> inst -> GS . instruct_control		10550193	0					
ANR	10550213	PtrMemberAccess	self -> inst -> GS		10550193	0					
ANR	10550214	PtrMemberAccess	self -> inst		10550193	0					
ANR	10550215	Identifier	self		10550193	0					
ANR	10550216	Identifier	inst		10550193	1					
ANR	10550217	Identifier	GS		10550193	1					
ANR	10550218	Identifier	instruct_control		10550193	1					
ANR	10550219	PrimaryExpression	2		10550193	1					
ANR	10550220	ExpressionStatement	self -> exec -> GS = Default_GraphicsState	366:8:12052:12090	10550193	1	True				
ANR	10550221	AssignmentExpression	self -> exec -> GS = Default_GraphicsState		10550193	0		=			
ANR	10550222	PtrMemberAccess	self -> exec -> GS		10550193	0					
ANR	10550223	PtrMemberAccess	self -> exec		10550193	0					
ANR	10550224	Identifier	self		10550193	0					
ANR	10550225	Identifier	exec		10550193	1					
ANR	10550226	Identifier	GS		10550193	1					
ANR	10550227	Identifier	Default_GraphicsState		10550193	1					
ANR	10550228	ElseStatement	else		10550193	0					
ANR	10550229	ExpressionStatement	self -> exec -> GS = self -> inst -> GS	368:8:12109:12140	10550193	0	True				
ANR	10550230	AssignmentExpression	self -> exec -> GS = self -> inst -> GS		10550193	0		=			
ANR	10550231	PtrMemberAccess	self -> exec -> GS		10550193	0					
ANR	10550232	PtrMemberAccess	self -> exec		10550193	0					
ANR	10550233	Identifier	self		10550193	0					
ANR	10550234	Identifier	exec		10550193	1					
ANR	10550235	Identifier	GS		10550193	1					
ANR	10550236	PtrMemberAccess	self -> inst -> GS		10550193	1					
ANR	10550237	PtrMemberAccess	self -> inst		10550193	0					
ANR	10550238	Identifier	self		10550193	0					
ANR	10550239	Identifier	inst		10550193	1					
ANR	10550240	Identifier	GS		10550193	1					
ANR	10550241	ExpressionStatement	self -> tti -> usage_top = 0	369:4:12146:12170	10550193	2	True				
ANR	10550242	AssignmentExpression	self -> tti -> usage_top = 0		10550193	0		=			
ANR	10550243	PtrMemberAccess	self -> tti -> usage_top		10550193	0					
ANR	10550244	PtrMemberAccess	self -> tti		10550193	0					
ANR	10550245	Identifier	self		10550193	0					
ANR	10550246	Identifier	tti		10550193	1					
ANR	10550247	Identifier	usage_top		10550193	1					
ANR	10550248	PrimaryExpression	0		10550193	1					
ANR	10550249	ReturnType	static void		10550193	1					
ANR	10550250	Identifier	ttfFont__StartGlyph		10550193	2					
ANR	10550251	ParameterList	ttfFont * self		10550193	3					
ANR	10550252	Parameter	ttfFont * self	363:32:11938:11950	10550193	0	True				
ANR	10550253	ParameterType	ttfFont *		10550193	0					
ANR	10550254	Identifier	self		10550193	1					
ANR	10550255	CFGEntryNode	ENTRY		10550193		True				
ANR	10550256	CFGExitNode	EXIT		10550193		True				
ANR	10550257	Symbol	self -> inst -> GS . instruct_control		10550193						
ANR	10550258	Symbol	* * self		10550193						
ANR	10550259	Symbol	* self		10550193						
ANR	10550260	Symbol	self -> inst		10550193						
ANR	10550261	Symbol	self -> exec -> GS		10550193						
ANR	10550262	Symbol	self -> exec		10550193						
ANR	10550263	Symbol	self -> tti -> usage_top		10550193						
ANR	10550264	Symbol	* self -> exec		10550193						
ANR	10550265	Symbol	self -> inst -> GS		10550193						
ANR	10550266	Symbol	* self -> tti		10550193						
ANR	10550267	Symbol	Default_GraphicsState		10550193						
ANR	10550268	Symbol	self -> tti		10550193						
ANR	10550269	Symbol	self		10550193						
ANR	10550270	Symbol	* self -> inst		10550193						
ANR	10550271	Function	ttfFont__StopGlyph	372:0:12175:12265							
ANR	10550272	FunctionDef	ttfFont__StopGlyph (ttfFont * self)		10550271	0					
ANR	10550273	CompoundStatement		373:0:12221:12265	10550271	0					
ANR	10550274	ExpressionStatement	"Context_Save ( self -> exec , self -> inst )"	374:4:12227:12263	10550271	0	True				
ANR	10550275	CallExpression	"Context_Save ( self -> exec , self -> inst )"		10550271	0					
ANR	10550276	Callee	Context_Save		10550271	0					
ANR	10550277	Identifier	Context_Save		10550271	0					
ANR	10550278	ArgumentList	self -> exec		10550271	1					
ANR	10550279	Argument	self -> exec		10550271	0					
ANR	10550280	PtrMemberAccess	self -> exec		10550271	0					
ANR	10550281	Identifier	self		10550271	0					
ANR	10550282	Identifier	exec		10550271	1					
ANR	10550283	Argument	self -> inst		10550271	1					
ANR	10550284	PtrMemberAccess	self -> inst		10550271	0					
ANR	10550285	Identifier	self		10550271	0					
ANR	10550286	Identifier	inst		10550271	1					
ANR	10550287	ReturnType	static void		10550271	1					
ANR	10550288	Identifier	ttfFont__StopGlyph		10550271	2					
ANR	10550289	ParameterList	ttfFont * self		10550271	3					
ANR	10550290	Parameter	ttfFont * self	372:31:12206:12218	10550271	0	True				
ANR	10550291	ParameterType	ttfFont *		10550271	0					
ANR	10550292	Identifier	self		10550271	1					
ANR	10550293	CFGEntryNode	ENTRY		10550271		True				
ANR	10550294	CFGExitNode	EXIT		10550271		True				
ANR	10550295	Symbol	* self		10550271						
ANR	10550296	Symbol	self -> inst		10550271						
ANR	10550297	Symbol	self -> exec		10550271						
ANR	10550298	Symbol	self		10550271						
ANR	10550299	Function	mount_zone	379:0:12341:12816							
ANR	10550300	FunctionDef	"mount_zone (PGlyph_Zone source , PGlyph_Zone target)"		10550299	0					
ANR	10550301	CompoundStatement		381:0:12435:12816	10550299	0					
ANR	10550302	IdentifierDeclStatement	"Int np , nc ;"	382:4:12441:12452	10550299	0	True				
ANR	10550303	IdentifierDecl	np		10550299	0					
ANR	10550304	IdentifierDeclType	Int		10550299	0					
ANR	10550305	Identifier	np		10550299	1					
ANR	10550306	IdentifierDecl	nc		10550299	1					
ANR	10550307	IdentifierDeclType	Int		10550299	0					
ANR	10550308	Identifier	nc		10550299	1					
ANR	10550309	ExpressionStatement	np = source -> n_points	384:4:12459:12480	10550299	1	True				
ANR	10550310	AssignmentExpression	np = source -> n_points		10550299	0		=			
ANR	10550311	Identifier	np		10550299	0					
ANR	10550312	PtrMemberAccess	source -> n_points		10550299	1					
ANR	10550313	Identifier	source		10550299	0					
ANR	10550314	Identifier	n_points		10550299	1					
ANR	10550315	ExpressionStatement	nc = source -> n_contours	385:4:12486:12509	10550299	2	True				
ANR	10550316	AssignmentExpression	nc = source -> n_contours		10550299	0		=			
ANR	10550317	Identifier	nc		10550299	0					
ANR	10550318	PtrMemberAccess	source -> n_contours		10550299	1					
ANR	10550319	Identifier	source		10550299	0					
ANR	10550320	Identifier	n_contours		10550299	1					
ANR	10550321	ExpressionStatement	target -> org_x = source -> org_x + np	387:4:12516:12550	10550299	3	True				
ANR	10550322	AssignmentExpression	target -> org_x = source -> org_x + np		10550299	0		=			
ANR	10550323	PtrMemberAccess	target -> org_x		10550299	0					
ANR	10550324	Identifier	target		10550299	0					
ANR	10550325	Identifier	org_x		10550299	1					
ANR	10550326	AdditiveExpression	source -> org_x + np		10550299	1		+			
ANR	10550327	PtrMemberAccess	source -> org_x		10550299	0					
ANR	10550328	Identifier	source		10550299	0					
ANR	10550329	Identifier	org_x		10550299	1					
ANR	10550330	Identifier	np		10550299	1					
ANR	10550331	ExpressionStatement	target -> org_y = source -> org_y + np	388:4:12556:12590	10550299	4	True				
ANR	10550332	AssignmentExpression	target -> org_y = source -> org_y + np		10550299	0		=			
ANR	10550333	PtrMemberAccess	target -> org_y		10550299	0					
ANR	10550334	Identifier	target		10550299	0					
ANR	10550335	Identifier	org_y		10550299	1					
ANR	10550336	AdditiveExpression	source -> org_y + np		10550299	1		+			
ANR	10550337	PtrMemberAccess	source -> org_y		10550299	0					
ANR	10550338	Identifier	source		10550299	0					
ANR	10550339	Identifier	org_y		10550299	1					
ANR	10550340	Identifier	np		10550299	1					
ANR	10550341	ExpressionStatement	target -> cur_x = source -> cur_x + np	389:4:12596:12630	10550299	5	True				
ANR	10550342	AssignmentExpression	target -> cur_x = source -> cur_x + np		10550299	0		=			
ANR	10550343	PtrMemberAccess	target -> cur_x		10550299	0					
ANR	10550344	Identifier	target		10550299	0					
ANR	10550345	Identifier	cur_x		10550299	1					
ANR	10550346	AdditiveExpression	source -> cur_x + np		10550299	1		+			
ANR	10550347	PtrMemberAccess	source -> cur_x		10550299	0					
ANR	10550348	Identifier	source		10550299	0					
ANR	10550349	Identifier	cur_x		10550299	1					
ANR	10550350	Identifier	np		10550299	1					
ANR	10550351	ExpressionStatement	target -> cur_y = source -> cur_y + np	390:4:12636:12670	10550299	6	True				
ANR	10550352	AssignmentExpression	target -> cur_y = source -> cur_y + np		10550299	0		=			
ANR	10550353	PtrMemberAccess	target -> cur_y		10550299	0					
ANR	10550354	Identifier	target		10550299	0					
ANR	10550355	Identifier	cur_y		10550299	1					
ANR	10550356	AdditiveExpression	source -> cur_y + np		10550299	1		+			
ANR	10550357	PtrMemberAccess	source -> cur_y		10550299	0					
ANR	10550358	Identifier	source		10550299	0					
ANR	10550359	Identifier	cur_y		10550299	1					
ANR	10550360	Identifier	np		10550299	1					
ANR	10550361	ExpressionStatement	target -> touch = source -> touch + np	391:4:12676:12710	10550299	7	True				
ANR	10550362	AssignmentExpression	target -> touch = source -> touch + np		10550299	0		=			
ANR	10550363	PtrMemberAccess	target -> touch		10550299	0					
ANR	10550364	Identifier	target		10550299	0					
ANR	10550365	Identifier	touch		10550299	1					
ANR	10550366	AdditiveExpression	source -> touch + np		10550299	1		+			
ANR	10550367	PtrMemberAccess	source -> touch		10550299	0					
ANR	10550368	Identifier	source		10550299	0					
ANR	10550369	Identifier	touch		10550299	1					
ANR	10550370	Identifier	np		10550299	1					
ANR	10550371	ExpressionStatement	target -> contours = source -> contours + nc	393:4:12717:12757	10550299	8	True				
ANR	10550372	AssignmentExpression	target -> contours = source -> contours + nc		10550299	0		=			
ANR	10550373	PtrMemberAccess	target -> contours		10550299	0					
ANR	10550374	Identifier	target		10550299	0					
ANR	10550375	Identifier	contours		10550299	1					
ANR	10550376	AdditiveExpression	source -> contours + nc		10550299	1		+			
ANR	10550377	PtrMemberAccess	source -> contours		10550299	0					
ANR	10550378	Identifier	source		10550299	0					
ANR	10550379	Identifier	contours		10550299	1					
ANR	10550380	Identifier	nc		10550299	1					
ANR	10550381	ExpressionStatement	target -> n_points = 0	395:4:12764:12786	10550299	9	True				
ANR	10550382	AssignmentExpression	target -> n_points = 0		10550299	0		=			
ANR	10550383	PtrMemberAccess	target -> n_points		10550299	0					
ANR	10550384	Identifier	target		10550299	0					
ANR	10550385	Identifier	n_points		10550299	1					
ANR	10550386	PrimaryExpression	0		10550299	1					
ANR	10550387	ExpressionStatement	target -> n_contours = 0	396:4:12792:12814	10550299	10	True				
ANR	10550388	AssignmentExpression	target -> n_contours = 0		10550299	0		=			
ANR	10550389	PtrMemberAccess	target -> n_contours		10550299	0					
ANR	10550390	Identifier	target		10550299	0					
ANR	10550391	Identifier	n_contours		10550299	1					
ANR	10550392	PrimaryExpression	0		10550299	1					
ANR	10550393	ReturnType	static void		10550299	1					
ANR	10550394	Identifier	mount_zone		10550299	2					
ANR	10550395	ParameterList	"PGlyph_Zone source , PGlyph_Zone target"		10550299	3					
ANR	10550396	Parameter	PGlyph_Zone source	379:25:12366:12384	10550299	0	True				
ANR	10550397	ParameterType	PGlyph_Zone		10550299	0					
ANR	10550398	Identifier	source		10550299	1					
ANR	10550399	Parameter	PGlyph_Zone target	380:26:12413:12431	10550299	1	True				
ANR	10550400	ParameterType	PGlyph_Zone		10550299	0					
ANR	10550401	Identifier	target		10550299	1					
ANR	10550402	CFGEntryNode	ENTRY		10550299		True				
ANR	10550403	CFGExitNode	EXIT		10550299		True				
ANR	10550404	Symbol	source -> org_y		10550299						
ANR	10550405	Symbol	np		10550299						
ANR	10550406	Symbol	source -> cur_x		10550299						
ANR	10550407	Symbol	target -> n_points		10550299						
ANR	10550408	Symbol	target -> org_y		10550299						
ANR	10550409	Symbol	source -> org_x		10550299						
ANR	10550410	Symbol	target -> org_x		10550299						
ANR	10550411	Symbol	target -> cur_y		10550299						
ANR	10550412	Symbol	target -> cur_x		10550299						
ANR	10550413	Symbol	source		10550299						
ANR	10550414	Symbol	target		10550299						
ANR	10550415	Symbol	source -> touch		10550299						
ANR	10550416	Symbol	source -> n_contours		10550299						
ANR	10550417	Symbol	* target		10550299						
ANR	10550418	Symbol	nc		10550299						
ANR	10550419	Symbol	* source		10550299						
ANR	10550420	Symbol	source -> contours		10550299						
ANR	10550421	Symbol	target -> n_contours		10550299						
ANR	10550422	Symbol	source -> n_points		10550299						
ANR	10550423	Symbol	source -> cur_y		10550299						
ANR	10550424	Symbol	target -> touch		10550299						
ANR	10550425	Symbol	target -> contours		10550299						
ANR	10550426	Function	Init_Glyph_Component	399:0:12819:13671							
ANR	10550427	FunctionDef	"Init_Glyph_Component (PSubglyph_Record element , PSubglyph_Record original , PExecution_Context exec)"		10550426	0					
ANR	10550428	CompoundStatement		402:0:13010:13671	10550426	0					
ANR	10550429	ExpressionStatement	element -> index = - 1	403:4:13016:13039	10550426	0	True				
ANR	10550430	AssignmentExpression	element -> index = - 1		10550426	0		=			
ANR	10550431	PtrMemberAccess	element -> index		10550426	0					
ANR	10550432	Identifier	element		10550426	0					
ANR	10550433	Identifier	index		10550426	1					
ANR	10550434	UnaryOperationExpression	- 1		10550426	1					
ANR	10550435	UnaryOperator	-		10550426	0					
ANR	10550436	PrimaryExpression	1		10550426	1					
ANR	10550437	ExpressionStatement	element -> is_scaled = FALSE	404:4:13045:13071	10550426	1	True				
ANR	10550438	AssignmentExpression	element -> is_scaled = FALSE		10550426	0		=			
ANR	10550439	PtrMemberAccess	element -> is_scaled		10550426	0					
ANR	10550440	Identifier	element		10550426	0					
ANR	10550441	Identifier	is_scaled		10550426	1					
ANR	10550442	Identifier	FALSE		10550426	1					
ANR	10550443	ExpressionStatement	element -> is_hinted = FALSE	405:4:13077:13103	10550426	2	True				
ANR	10550444	AssignmentExpression	element -> is_hinted = FALSE		10550426	0		=			
ANR	10550445	PtrMemberAccess	element -> is_hinted		10550426	0					
ANR	10550446	Identifier	element		10550426	0					
ANR	10550447	Identifier	is_hinted		10550426	1					
ANR	10550448	Identifier	FALSE		10550426	1					
ANR	10550449	IfStatement	if ( original )		10550426	3					
ANR	10550450	Condition	original	407:8:13114:13121	10550426	0	True				
ANR	10550451	Identifier	original		10550426	0					
ANR	10550452	ExpressionStatement	"mount_zone ( & original -> zone , & element -> zone )"	408:8:13132:13177	10550426	1	True				
ANR	10550453	CallExpression	"mount_zone ( & original -> zone , & element -> zone )"		10550426	0					
ANR	10550454	Callee	mount_zone		10550426	0					
ANR	10550455	Identifier	mount_zone		10550426	0					
ANR	10550456	ArgumentList	& original -> zone		10550426	1					
ANR	10550457	Argument	& original -> zone		10550426	0					
ANR	10550458	UnaryOperationExpression	& original -> zone		10550426	0					
ANR	10550459	UnaryOperator	&		10550426	0					
ANR	10550460	PtrMemberAccess	original -> zone		10550426	1					
ANR	10550461	Identifier	original		10550426	0					
ANR	10550462	Identifier	zone		10550426	1					
ANR	10550463	Argument	& element -> zone		10550426	1					
ANR	10550464	UnaryOperationExpression	& element -> zone		10550426	0					
ANR	10550465	UnaryOperator	&		10550426	0					
ANR	10550466	PtrMemberAccess	element -> zone		10550426	1					
ANR	10550467	Identifier	element		10550426	0					
ANR	10550468	Identifier	zone		10550426	1					
ANR	10550469	ElseStatement	else		10550426	0					
ANR	10550470	ExpressionStatement	element -> zone = exec -> pts	410:8:13196:13221	10550426	0	True				
ANR	10550471	AssignmentExpression	element -> zone = exec -> pts		10550426	0		=			
ANR	10550472	PtrMemberAccess	element -> zone		10550426	0					
ANR	10550473	Identifier	element		10550426	0					
ANR	10550474	Identifier	zone		10550426	1					
ANR	10550475	PtrMemberAccess	exec -> pts		10550426	1					
ANR	10550476	Identifier	exec		10550426	0					
ANR	10550477	Identifier	pts		10550426	1					
ANR	10550478	ExpressionStatement	element -> zone . n_contours = 0	412:4:13228:13256	10550426	4	True				
ANR	10550479	AssignmentExpression	element -> zone . n_contours = 0		10550426	0		=			
ANR	10550480	MemberAccess	element -> zone . n_contours		10550426	0					
ANR	10550481	PtrMemberAccess	element -> zone		10550426	0					
ANR	10550482	Identifier	element		10550426	0					
ANR	10550483	Identifier	zone		10550426	1					
ANR	10550484	Identifier	n_contours		10550426	1					
ANR	10550485	PrimaryExpression	0		10550426	1					
ANR	10550486	ExpressionStatement	element -> zone . n_points = 0	413:4:13262:13290	10550426	5	True				
ANR	10550487	AssignmentExpression	element -> zone . n_points = 0		10550426	0		=			
ANR	10550488	MemberAccess	element -> zone . n_points		10550426	0					
ANR	10550489	PtrMemberAccess	element -> zone		10550426	0					
ANR	10550490	Identifier	element		10550426	0					
ANR	10550491	Identifier	zone		10550426	1					
ANR	10550492	Identifier	n_points		10550426	1					
ANR	10550493	PrimaryExpression	0		10550426	1					
ANR	10550494	ExpressionStatement	element -> arg1 = 0	415:4:13297:13314	10550426	6	True				
ANR	10550495	AssignmentExpression	element -> arg1 = 0		10550426	0		=			
ANR	10550496	PtrMemberAccess	element -> arg1		10550426	0					
ANR	10550497	Identifier	element		10550426	0					
ANR	10550498	Identifier	arg1		10550426	1					
ANR	10550499	PrimaryExpression	0		10550426	1					
ANR	10550500	ExpressionStatement	element -> arg2 = 0	416:4:13320:13337	10550426	7	True				
ANR	10550501	AssignmentExpression	element -> arg2 = 0		10550426	0		=			
ANR	10550502	PtrMemberAccess	element -> arg2		10550426	0					
ANR	10550503	Identifier	element		10550426	0					
ANR	10550504	Identifier	arg2		10550426	1					
ANR	10550505	PrimaryExpression	0		10550426	1					
ANR	10550506	ExpressionStatement	element -> element_flag = 0	418:4:13344:13369	10550426	8	True				
ANR	10550507	AssignmentExpression	element -> element_flag = 0		10550426	0		=			
ANR	10550508	PtrMemberAccess	element -> element_flag		10550426	0					
ANR	10550509	Identifier	element		10550426	0					
ANR	10550510	Identifier	element_flag		10550426	1					
ANR	10550511	PrimaryExpression	0		10550426	1					
ANR	10550512	ExpressionStatement	element -> preserve_pps = FALSE	419:4:13375:13404	10550426	9	True				
ANR	10550513	AssignmentExpression	element -> preserve_pps = FALSE		10550426	0		=			
ANR	10550514	PtrMemberAccess	element -> preserve_pps		10550426	0					
ANR	10550515	Identifier	element		10550426	0					
ANR	10550516	Identifier	preserve_pps		10550426	1					
ANR	10550517	Identifier	FALSE		10550426	1					
ANR	10550518	ExpressionStatement	element -> transform . xx = 1 << 16	421:4:13411:13442	10550426	10	True				
ANR	10550519	AssignmentExpression	element -> transform . xx = 1 << 16		10550426	0		=			
ANR	10550520	MemberAccess	element -> transform . xx		10550426	0					
ANR	10550521	PtrMemberAccess	element -> transform		10550426	0					
ANR	10550522	Identifier	element		10550426	0					
ANR	10550523	Identifier	transform		10550426	1					
ANR	10550524	Identifier	xx		10550426	1					
ANR	10550525	ShiftExpression	1 << 16		10550426	1		<<			
ANR	10550526	PrimaryExpression	1		10550426	0					
ANR	10550527	PrimaryExpression	16		10550426	1					
ANR	10550528	ExpressionStatement	element -> transform . xy = 0	422:4:13448:13473	10550426	11	True				
ANR	10550529	AssignmentExpression	element -> transform . xy = 0		10550426	0		=			
ANR	10550530	MemberAccess	element -> transform . xy		10550426	0					
ANR	10550531	PtrMemberAccess	element -> transform		10550426	0					
ANR	10550532	Identifier	element		10550426	0					
ANR	10550533	Identifier	transform		10550426	1					
ANR	10550534	Identifier	xy		10550426	1					
ANR	10550535	PrimaryExpression	0		10550426	1					
ANR	10550536	ExpressionStatement	element -> transform . yx = 0	423:4:13479:13504	10550426	12	True				
ANR	10550537	AssignmentExpression	element -> transform . yx = 0		10550426	0		=			
ANR	10550538	MemberAccess	element -> transform . yx		10550426	0					
ANR	10550539	PtrMemberAccess	element -> transform		10550426	0					
ANR	10550540	Identifier	element		10550426	0					
ANR	10550541	Identifier	transform		10550426	1					
ANR	10550542	Identifier	yx		10550426	1					
ANR	10550543	PrimaryExpression	0		10550426	1					
ANR	10550544	ExpressionStatement	element -> transform . yy = 1 << 16	424:4:13510:13541	10550426	13	True				
ANR	10550545	AssignmentExpression	element -> transform . yy = 1 << 16		10550426	0		=			
ANR	10550546	MemberAccess	element -> transform . yy		10550426	0					
ANR	10550547	PtrMemberAccess	element -> transform		10550426	0					
ANR	10550548	Identifier	element		10550426	0					
ANR	10550549	Identifier	transform		10550426	1					
ANR	10550550	Identifier	yy		10550426	1					
ANR	10550551	ShiftExpression	1 << 16		10550426	1		<<			
ANR	10550552	PrimaryExpression	1		10550426	0					
ANR	10550553	PrimaryExpression	16		10550426	1					
ANR	10550554	ExpressionStatement	element -> transform . ox = 0	426:4:13548:13573	10550426	14	True				
ANR	10550555	AssignmentExpression	element -> transform . ox = 0		10550426	0		=			
ANR	10550556	MemberAccess	element -> transform . ox		10550426	0					
ANR	10550557	PtrMemberAccess	element -> transform		10550426	0					
ANR	10550558	Identifier	element		10550426	0					
ANR	10550559	Identifier	transform		10550426	1					
ANR	10550560	Identifier	ox		10550426	1					
ANR	10550561	PrimaryExpression	0		10550426	1					
ANR	10550562	ExpressionStatement	element -> transform . oy = 0	427:4:13579:13604	10550426	15	True				
ANR	10550563	AssignmentExpression	element -> transform . oy = 0		10550426	0		=			
ANR	10550564	MemberAccess	element -> transform . oy		10550426	0					
ANR	10550565	PtrMemberAccess	element -> transform		10550426	0					
ANR	10550566	Identifier	element		10550426	0					
ANR	10550567	Identifier	transform		10550426	1					
ANR	10550568	Identifier	oy		10550426	1					
ANR	10550569	PrimaryExpression	0		10550426	1					
ANR	10550570	ExpressionStatement	element -> leftBearing = 0	429:4:13611:13636	10550426	16	True				
ANR	10550571	AssignmentExpression	element -> leftBearing = 0		10550426	0		=			
ANR	10550572	PtrMemberAccess	element -> leftBearing		10550426	0					
ANR	10550573	Identifier	element		10550426	0					
ANR	10550574	Identifier	leftBearing		10550426	1					
ANR	10550575	PrimaryExpression	0		10550426	1					
ANR	10550576	ExpressionStatement	element -> advanceWidth = 0	430:4:13642:13667	10550426	17	True				
ANR	10550577	AssignmentExpression	element -> advanceWidth = 0		10550426	0		=			
ANR	10550578	PtrMemberAccess	element -> advanceWidth		10550426	0					
ANR	10550579	Identifier	element		10550426	0					
ANR	10550580	Identifier	advanceWidth		10550426	1					
ANR	10550581	PrimaryExpression	0		10550426	1					
ANR	10550582	ReturnType	static void		10550426	1					
ANR	10550583	Identifier	Init_Glyph_Component		10550426	2					
ANR	10550584	ParameterList	"PSubglyph_Record element , PSubglyph_Record original , PExecution_Context exec"		10550426	3					
ANR	10550585	Parameter	PSubglyph_Record element	399:35:12854:12880	10550426	0	True				
ANR	10550586	ParameterType	PSubglyph_Record		10550426	0					
ANR	10550587	Identifier	element		10550426	1					
ANR	10550588	Parameter	PSubglyph_Record original	400:35:12918:12945	10550426	1	True				
ANR	10550589	ParameterType	PSubglyph_Record		10550426	0					
ANR	10550590	Identifier	original		10550426	1					
ANR	10550591	Parameter	PExecution_Context exec	401:35:12983:13006	10550426	2	True				
ANR	10550592	ParameterType	PExecution_Context		10550426	0					
ANR	10550593	Identifier	exec		10550426	1					
ANR	10550594	CFGEntryNode	ENTRY		10550426		True				
ANR	10550595	CFGExitNode	EXIT		10550426		True				
ANR	10550596	Symbol	element -> advanceWidth		10550426						
ANR	10550597	Symbol	element -> index		10550426						
ANR	10550598	Symbol	* element		10550426						
ANR	10550599	Symbol	& element -> zone		10550426						
ANR	10550600	Symbol	element -> transform . xx		10550426						
ANR	10550601	Symbol	element -> transform . xy		10550426						
ANR	10550602	Symbol	element -> preserve_pps		10550426						
ANR	10550603	Symbol	* exec		10550426						
ANR	10550604	Symbol	element -> arg2		10550426						
ANR	10550605	Symbol	element -> arg1		10550426						
ANR	10550606	Symbol	element		10550426						
ANR	10550607	Symbol	element -> zone . n_points		10550426						
ANR	10550608	Symbol	element -> transform . oy		10550426						
ANR	10550609	Symbol	original		10550426						
ANR	10550610	Symbol	element -> transform . ox		10550426						
ANR	10550611	Symbol	& original -> zone		10550426						
ANR	10550612	Symbol	element -> is_scaled		10550426						
ANR	10550613	Symbol	element -> is_hinted		10550426						
ANR	10550614	Symbol	exec -> pts		10550426						
ANR	10550615	Symbol	element -> element_flag		10550426						
ANR	10550616	Symbol	element -> transform . yy		10550426						
ANR	10550617	Symbol	element -> transform . yx		10550426						
ANR	10550618	Symbol	element -> leftBearing		10550426						
ANR	10550619	Symbol	element -> zone . n_contours		10550426						
ANR	10550620	Symbol	FALSE		10550426						
ANR	10550621	Symbol	element -> transform		10550426						
ANR	10550622	Symbol	exec		10550426						
ANR	10550623	Symbol	element -> zone		10550426						
ANR	10550624	Function	cur_to_org	433:0:13674:13885							
ANR	10550625	FunctionDef	"cur_to_org (Int n , PGlyph_Zone zone)"		10550624	0					
ANR	10550626	CompoundStatement		434:0:13727:13885	10550624	0					
ANR	10550627	IdentifierDeclStatement	Int k ;	435:4:13733:13739	10550624	0	True				
ANR	10550628	IdentifierDecl	k		10550624	0					
ANR	10550629	IdentifierDeclType	Int		10550624	0					
ANR	10550630	Identifier	k		10550624	1					
ANR	10550631	ForStatement	for ( k = 0 ; k < n ; k ++ )		10550624	1					
ANR	10550632	ForInit	k = 0 ;	437:10:13752:13757	10550624	0	True				
ANR	10550633	AssignmentExpression	k = 0		10550624	0		=			
ANR	10550634	Identifier	k		10550624	0					
ANR	10550635	PrimaryExpression	0		10550624	1					
ANR	10550636	Condition	k < n	437:17:13759:13763	10550624	1	True				
ANR	10550637	RelationalExpression	k < n		10550624	0		<			
ANR	10550638	Identifier	k		10550624	0					
ANR	10550639	Identifier	n		10550624	1					
ANR	10550640	PostIncDecOperationExpression	k ++	437:24:13766:13768	10550624	2	True				
ANR	10550641	Identifier	k		10550624	0					
ANR	10550642	IncDec	++		10550624	1					
ANR	10550643	ExpressionStatement	zone -> org_x [ k ] = zone -> cur_x [ k ]	438:8:13780:13811	10550624	3	True				
ANR	10550644	AssignmentExpression	zone -> org_x [ k ] = zone -> cur_x [ k ]		10550624	0		=			
ANR	10550645	ArrayIndexing	zone -> org_x [ k ]		10550624	0					
ANR	10550646	PtrMemberAccess	zone -> org_x		10550624	0					
ANR	10550647	Identifier	zone		10550624	0					
ANR	10550648	Identifier	org_x		10550624	1					
ANR	10550649	Identifier	k		10550624	1					
ANR	10550650	ArrayIndexing	zone -> cur_x [ k ]		10550624	1					
ANR	10550651	PtrMemberAccess	zone -> cur_x		10550624	0					
ANR	10550652	Identifier	zone		10550624	0					
ANR	10550653	Identifier	cur_x		10550624	1					
ANR	10550654	Identifier	k		10550624	1					
ANR	10550655	ForStatement	for ( k = 0 ; k < n ; k ++ )		10550624	2					
ANR	10550656	ForInit	k = 0 ;	440:10:13824:13829	10550624	0	True				
ANR	10550657	AssignmentExpression	k = 0		10550624	0		=			
ANR	10550658	Identifier	k		10550624	0					
ANR	10550659	PrimaryExpression	0		10550624	1					
ANR	10550660	Condition	k < n	440:17:13831:13835	10550624	1	True				
ANR	10550661	RelationalExpression	k < n		10550624	0		<			
ANR	10550662	Identifier	k		10550624	0					
ANR	10550663	Identifier	n		10550624	1					
ANR	10550664	PostIncDecOperationExpression	k ++	440:24:13838:13840	10550624	2	True				
ANR	10550665	Identifier	k		10550624	0					
ANR	10550666	IncDec	++		10550624	1					
ANR	10550667	ExpressionStatement	zone -> org_y [ k ] = zone -> cur_y [ k ]	441:8:13852:13883	10550624	3	True				
ANR	10550668	AssignmentExpression	zone -> org_y [ k ] = zone -> cur_y [ k ]		10550624	0		=			
ANR	10550669	ArrayIndexing	zone -> org_y [ k ]		10550624	0					
ANR	10550670	PtrMemberAccess	zone -> org_y		10550624	0					
ANR	10550671	Identifier	zone		10550624	0					
ANR	10550672	Identifier	org_y		10550624	1					
ANR	10550673	Identifier	k		10550624	1					
ANR	10550674	ArrayIndexing	zone -> cur_y [ k ]		10550624	1					
ANR	10550675	PtrMemberAccess	zone -> cur_y		10550624	0					
ANR	10550676	Identifier	zone		10550624	0					
ANR	10550677	Identifier	cur_y		10550624	1					
ANR	10550678	Identifier	k		10550624	1					
ANR	10550679	ReturnType	static void		10550624	1					
ANR	10550680	Identifier	cur_to_org		10550624	2					
ANR	10550681	ParameterList	"Int n , PGlyph_Zone zone"		10550624	3					
ANR	10550682	Parameter	Int n	433:25:13699:13704	10550624	0	True				
ANR	10550683	ParameterType	Int		10550624	0					
ANR	10550684	Identifier	n		10550624	1					
ANR	10550685	Parameter	PGlyph_Zone zone	433:33:13707:13723	10550624	1	True				
ANR	10550686	ParameterType	PGlyph_Zone		10550624	0					
ANR	10550687	Identifier	zone		10550624	1					
ANR	10550688	CFGEntryNode	ENTRY		10550624		True				
ANR	10550689	CFGExitNode	EXIT		10550624		True				
ANR	10550690	Symbol	* zone		10550624						
ANR	10550691	Symbol	zone -> org_x		10550624						
ANR	10550692	Symbol	k		10550624						
ANR	10550693	Symbol	zone -> org_y		10550624						
ANR	10550694	Symbol	* zone -> org_x		10550624						
ANR	10550695	Symbol	* zone -> org_y		10550624						
ANR	10550696	Symbol	n		10550624						
ANR	10550697	Symbol	* zone -> cur_y		10550624						
ANR	10550698	Symbol	* zone -> cur_x		10550624						
ANR	10550699	Symbol	zone		10550624						
ANR	10550700	Symbol	* k		10550624						
ANR	10550701	Symbol	* * zone		10550624						
ANR	10550702	Symbol	zone -> cur_x		10550624						
ANR	10550703	Symbol	zone -> cur_y		10550624						
ANR	10550704	Function	org_to_cur	444:0:13888:14099							
ANR	10550705	FunctionDef	"org_to_cur (Int n , PGlyph_Zone zone)"		10550704	0					
ANR	10550706	CompoundStatement		445:0:13941:14099	10550704	0					
ANR	10550707	IdentifierDeclStatement	Int k ;	446:4:13947:13953	10550704	0	True				
ANR	10550708	IdentifierDecl	k		10550704	0					
ANR	10550709	IdentifierDeclType	Int		10550704	0					
ANR	10550710	Identifier	k		10550704	1					
ANR	10550711	ForStatement	for ( k = 0 ; k < n ; k ++ )		10550704	1					
ANR	10550712	ForInit	k = 0 ;	448:10:13966:13971	10550704	0	True				
ANR	10550713	AssignmentExpression	k = 0		10550704	0		=			
ANR	10550714	Identifier	k		10550704	0					
ANR	10550715	PrimaryExpression	0		10550704	1					
ANR	10550716	Condition	k < n	448:17:13973:13977	10550704	1	True				
ANR	10550717	RelationalExpression	k < n		10550704	0		<			
ANR	10550718	Identifier	k		10550704	0					
ANR	10550719	Identifier	n		10550704	1					
ANR	10550720	PostIncDecOperationExpression	k ++	448:24:13980:13982	10550704	2	True				
ANR	10550721	Identifier	k		10550704	0					
ANR	10550722	IncDec	++		10550704	1					
ANR	10550723	ExpressionStatement	zone -> cur_x [ k ] = zone -> org_x [ k ]	449:8:13994:14025	10550704	3	True				
ANR	10550724	AssignmentExpression	zone -> cur_x [ k ] = zone -> org_x [ k ]		10550704	0		=			
ANR	10550725	ArrayIndexing	zone -> cur_x [ k ]		10550704	0					
ANR	10550726	PtrMemberAccess	zone -> cur_x		10550704	0					
ANR	10550727	Identifier	zone		10550704	0					
ANR	10550728	Identifier	cur_x		10550704	1					
ANR	10550729	Identifier	k		10550704	1					
ANR	10550730	ArrayIndexing	zone -> org_x [ k ]		10550704	1					
ANR	10550731	PtrMemberAccess	zone -> org_x		10550704	0					
ANR	10550732	Identifier	zone		10550704	0					
ANR	10550733	Identifier	org_x		10550704	1					
ANR	10550734	Identifier	k		10550704	1					
ANR	10550735	ForStatement	for ( k = 0 ; k < n ; k ++ )		10550704	2					
ANR	10550736	ForInit	k = 0 ;	451:10:14038:14043	10550704	0	True				
ANR	10550737	AssignmentExpression	k = 0		10550704	0		=			
ANR	10550738	Identifier	k		10550704	0					
ANR	10550739	PrimaryExpression	0		10550704	1					
ANR	10550740	Condition	k < n	451:17:14045:14049	10550704	1	True				
ANR	10550741	RelationalExpression	k < n		10550704	0		<			
ANR	10550742	Identifier	k		10550704	0					
ANR	10550743	Identifier	n		10550704	1					
ANR	10550744	PostIncDecOperationExpression	k ++	451:24:14052:14054	10550704	2	True				
ANR	10550745	Identifier	k		10550704	0					
ANR	10550746	IncDec	++		10550704	1					
ANR	10550747	ExpressionStatement	zone -> cur_y [ k ] = zone -> org_y [ k ]	452:8:14066:14097	10550704	3	True				
ANR	10550748	AssignmentExpression	zone -> cur_y [ k ] = zone -> org_y [ k ]		10550704	0		=			
ANR	10550749	ArrayIndexing	zone -> cur_y [ k ]		10550704	0					
ANR	10550750	PtrMemberAccess	zone -> cur_y		10550704	0					
ANR	10550751	Identifier	zone		10550704	0					
ANR	10550752	Identifier	cur_y		10550704	1					
ANR	10550753	Identifier	k		10550704	1					
ANR	10550754	ArrayIndexing	zone -> org_y [ k ]		10550704	1					
ANR	10550755	PtrMemberAccess	zone -> org_y		10550704	0					
ANR	10550756	Identifier	zone		10550704	0					
ANR	10550757	Identifier	org_y		10550704	1					
ANR	10550758	Identifier	k		10550704	1					
ANR	10550759	ReturnType	static void		10550704	1					
ANR	10550760	Identifier	org_to_cur		10550704	2					
ANR	10550761	ParameterList	"Int n , PGlyph_Zone zone"		10550704	3					
ANR	10550762	Parameter	Int n	444:25:13913:13918	10550704	0	True				
ANR	10550763	ParameterType	Int		10550704	0					
ANR	10550764	Identifier	n		10550704	1					
ANR	10550765	Parameter	PGlyph_Zone zone	444:33:13921:13937	10550704	1	True				
ANR	10550766	ParameterType	PGlyph_Zone		10550704	0					
ANR	10550767	Identifier	zone		10550704	1					
ANR	10550768	CFGEntryNode	ENTRY		10550704		True				
ANR	10550769	CFGExitNode	EXIT		10550704		True				
ANR	10550770	Symbol	* zone		10550704						
ANR	10550771	Symbol	zone -> org_x		10550704						
ANR	10550772	Symbol	k		10550704						
ANR	10550773	Symbol	zone -> org_y		10550704						
ANR	10550774	Symbol	* zone -> org_x		10550704						
ANR	10550775	Symbol	* zone -> org_y		10550704						
ANR	10550776	Symbol	n		10550704						
ANR	10550777	Symbol	* zone -> cur_y		10550704						
ANR	10550778	Symbol	* zone -> cur_x		10550704						
ANR	10550779	Symbol	zone		10550704						
ANR	10550780	Symbol	* k		10550704						
ANR	10550781	Symbol	* * zone		10550704						
ANR	10550782	Symbol	zone -> cur_x		10550704						
ANR	10550783	Symbol	zone -> cur_y		10550704						
ANR	10550784	Function	ttfOutliner__init	457:0:14175:14479							
ANR	10550785	FunctionDef	"ttfOutliner__init (ttfOutliner * self , ttfFont * f , ttfReader * r , ttfExport * exp , bool bOutline , bool bFirst , bool bVertical)"		10550784	0					
ANR	10550786	CompoundStatement		459:0:14327:14479	10550784	0					
ANR	10550787	ExpressionStatement	self -> r = r	460:4:14333:14344	10550784	0	True				
ANR	10550788	AssignmentExpression	self -> r = r		10550784	0		=			
ANR	10550789	PtrMemberAccess	self -> r		10550784	0					
ANR	10550790	Identifier	self		10550784	0					
ANR	10550791	Identifier	r		10550784	1					
ANR	10550792	Identifier	r		10550784	1					
ANR	10550793	ExpressionStatement	self -> bOutline = bOutline	461:4:14350:14375	10550784	1	True				
ANR	10550794	AssignmentExpression	self -> bOutline = bOutline		10550784	0		=			
ANR	10550795	PtrMemberAccess	self -> bOutline		10550784	0					
ANR	10550796	Identifier	self		10550784	0					
ANR	10550797	Identifier	bOutline		10550784	1					
ANR	10550798	Identifier	bOutline		10550784	1					
ANR	10550799	ExpressionStatement	self -> bFirst = bFirst	462:4:14381:14402	10550784	2	True				
ANR	10550800	AssignmentExpression	self -> bFirst = bFirst		10550784	0		=			
ANR	10550801	PtrMemberAccess	self -> bFirst		10550784	0					
ANR	10550802	Identifier	self		10550784	0					
ANR	10550803	Identifier	bFirst		10550784	1					
ANR	10550804	Identifier	bFirst		10550784	1					
ANR	10550805	ExpressionStatement	self -> pFont = f	463:4:14408:14423	10550784	3	True				
ANR	10550806	AssignmentExpression	self -> pFont = f		10550784	0		=			
ANR	10550807	PtrMemberAccess	self -> pFont		10550784	0					
ANR	10550808	Identifier	self		10550784	0					
ANR	10550809	Identifier	pFont		10550784	1					
ANR	10550810	Identifier	f		10550784	1					
ANR	10550811	ExpressionStatement	self -> bVertical = bVertical	464:4:14429:14456	10550784	4	True				
ANR	10550812	AssignmentExpression	self -> bVertical = bVertical		10550784	0		=			
ANR	10550813	PtrMemberAccess	self -> bVertical		10550784	0					
ANR	10550814	Identifier	self		10550784	0					
ANR	10550815	Identifier	bVertical		10550784	1					
ANR	10550816	Identifier	bVertical		10550784	1					
ANR	10550817	ExpressionStatement	self -> exp = exp	465:4:14462:14477	10550784	5	True				
ANR	10550818	AssignmentExpression	self -> exp = exp		10550784	0		=			
ANR	10550819	PtrMemberAccess	self -> exp		10550784	0					
ANR	10550820	Identifier	self		10550784	0					
ANR	10550821	Identifier	exp		10550784	1					
ANR	10550822	Identifier	exp		10550784	1					
ANR	10550823	ReturnType	void		10550784	1					
ANR	10550824	Identifier	ttfOutliner__init		10550784	2					
ANR	10550825	ParameterList	"ttfOutliner * self , ttfFont * f , ttfReader * r , ttfExport * exp , bool bOutline , bool bFirst , bool bVertical"		10550784	3					
ANR	10550826	Parameter	ttfOutliner * self	457:23:14198:14214	10550784	0	True				
ANR	10550827	ParameterType	ttfOutliner *		10550784	0					
ANR	10550828	Identifier	self		10550784	1					
ANR	10550829	Parameter	ttfFont * f	457:42:14217:14226	10550784	1	True				
ANR	10550830	ParameterType	ttfFont *		10550784	0					
ANR	10550831	Identifier	f		10550784	1					
ANR	10550832	Parameter	ttfReader * r	457:54:14229:14240	10550784	2	True				
ANR	10550833	ParameterType	ttfReader *		10550784	0					
ANR	10550834	Identifier	r		10550784	1					
ANR	10550835	Parameter	ttfExport * exp	457:68:14243:14256	10550784	3	True				
ANR	10550836	ParameterType	ttfExport *		10550784	0					
ANR	10550837	Identifier	exp		10550784	1					
ANR	10550838	Parameter	bool bOutline	458:24:14283:14295	10550784	4	True				
ANR	10550839	ParameterType	bool		10550784	0					
ANR	10550840	Identifier	bOutline		10550784	1					
ANR	10550841	Parameter	bool bFirst	458:39:14298:14308	10550784	5	True				
ANR	10550842	ParameterType	bool		10550784	0					
ANR	10550843	Identifier	bFirst		10550784	1					
ANR	10550844	Parameter	bool bVertical	458:52:14311:14324	10550784	6	True				
ANR	10550845	ParameterType	bool		10550784	0					
ANR	10550846	Identifier	bVertical		10550784	1					
ANR	10550847	CFGEntryNode	ENTRY		10550784		True				
ANR	10550848	CFGExitNode	EXIT		10550784		True				
ANR	10550849	Symbol	self -> bOutline		10550784						
ANR	10550850	Symbol	f		10550784						
ANR	10550851	Symbol	* self		10550784						
ANR	10550852	Symbol	bFirst		10550784						
ANR	10550853	Symbol	self -> r		10550784						
ANR	10550854	Symbol	bVertical		10550784						
ANR	10550855	Symbol	r		10550784						
ANR	10550856	Symbol	self -> exp		10550784						
ANR	10550857	Symbol	self -> pFont		10550784						
ANR	10550858	Symbol	self		10550784						
ANR	10550859	Symbol	self -> bFirst		10550784						
ANR	10550860	Symbol	bOutline		10550784						
ANR	10550861	Symbol	exp		10550784						
ANR	10550862	Symbol	self -> bVertical		10550784						
ANR	10550863	Function	MoveGlyphOutline	468:0:14482:14967							
ANR	10550864	FunctionDef	"MoveGlyphOutline (TGlyph_Zone * pts , int nOffset , ttfGlyphOutline * out , FixMatrix * m)"		10550863	0					
ANR	10550865	CompoundStatement		469:0:14578:14967	10550863	0					
ANR	10550866	IdentifierDeclStatement	F26Dot6 * x = pts -> org_x + nOffset ;	469:3:14582:14615	10550863	0	True				
ANR	10550867	IdentifierDecl	* x = pts -> org_x + nOffset		10550863	0					
ANR	10550868	IdentifierDeclType	F26Dot6 *		10550863	0					
ANR	10550869	Identifier	x		10550863	1					
ANR	10550870	AssignmentExpression	* x = pts -> org_x + nOffset		10550863	2		=			
ANR	10550871	Identifier	x		10550863	0					
ANR	10550872	AdditiveExpression	pts -> org_x + nOffset		10550863	1		+			
ANR	10550873	PtrMemberAccess	pts -> org_x		10550863	0					
ANR	10550874	Identifier	pts		10550863	0					
ANR	10550875	Identifier	org_x		10550863	1					
ANR	10550876	Identifier	nOffset		10550863	1					
ANR	10550877	IdentifierDeclStatement	F26Dot6 * y = pts -> org_y + nOffset ;	470:4:14621:14654	10550863	1	True				
ANR	10550878	IdentifierDecl	* y = pts -> org_y + nOffset		10550863	0					
ANR	10550879	IdentifierDeclType	F26Dot6 *		10550863	0					
ANR	10550880	Identifier	y		10550863	1					
ANR	10550881	AssignmentExpression	* y = pts -> org_y + nOffset		10550863	2		=			
ANR	10550882	Identifier	y		10550863	0					
ANR	10550883	AdditiveExpression	pts -> org_y + nOffset		10550863	1		+			
ANR	10550884	PtrMemberAccess	pts -> org_y		10550863	0					
ANR	10550885	Identifier	pts		10550863	0					
ANR	10550886	Identifier	org_y		10550863	1					
ANR	10550887	Identifier	nOffset		10550863	1					
ANR	10550888	IdentifierDeclStatement	short count = out -> pointCount ;	471:4:14660:14689	10550863	2	True				
ANR	10550889	IdentifierDecl	count = out -> pointCount		10550863	0					
ANR	10550890	IdentifierDeclType	short		10550863	0					
ANR	10550891	Identifier	count		10550863	1					
ANR	10550892	AssignmentExpression	count = out -> pointCount		10550863	2		=			
ANR	10550893	Identifier	count		10550863	0					
ANR	10550894	PtrMemberAccess	out -> pointCount		10550863	1					
ANR	10550895	Identifier	out		10550863	0					
ANR	10550896	Identifier	pointCount		10550863	1					
ANR	10550897	IdentifierDeclStatement	F26Dot6Point p ;	472:4:14695:14709	10550863	3	True				
ANR	10550898	IdentifierDecl	p		10550863	0					
ANR	10550899	IdentifierDeclType	F26Dot6Point		10550863	0					
ANR	10550900	Identifier	p		10550863	1					
ANR	10550901	IfStatement	if ( m -> a == 65536 && m -> b == 0 && m -> c == 0 && m -> d == 65536 && m -> tx == 0 && m -> ty == 0 )		10550863	4					
ANR	10550902	Condition	m -> a == 65536 && m -> b == 0 && m -> c == 0 && m -> d == 65536 && m -> tx == 0 && m -> ty == 0	474:8:14720:14819	10550863	0	True				
ANR	10550903	AndExpression	m -> a == 65536 && m -> b == 0 && m -> c == 0 && m -> d == 65536 && m -> tx == 0 && m -> ty == 0		10550863	0		&&			
ANR	10550904	EqualityExpression	m -> a == 65536		10550863	0		==			
ANR	10550905	PtrMemberAccess	m -> a		10550863	0					
ANR	10550906	Identifier	m		10550863	0					
ANR	10550907	Identifier	a		10550863	1					
ANR	10550908	PrimaryExpression	65536		10550863	1					
ANR	10550909	AndExpression	m -> b == 0 && m -> c == 0 && m -> d == 65536 && m -> tx == 0 && m -> ty == 0		10550863	1		&&			
ANR	10550910	EqualityExpression	m -> b == 0		10550863	0		==			
ANR	10550911	PtrMemberAccess	m -> b		10550863	0					
ANR	10550912	Identifier	m		10550863	0					
ANR	10550913	Identifier	b		10550863	1					
ANR	10550914	PrimaryExpression	0		10550863	1					
ANR	10550915	AndExpression	m -> c == 0 && m -> d == 65536 && m -> tx == 0 && m -> ty == 0		10550863	1		&&			
ANR	10550916	EqualityExpression	m -> c == 0		10550863	0		==			
ANR	10550917	PtrMemberAccess	m -> c		10550863	0					
ANR	10550918	Identifier	m		10550863	0					
ANR	10550919	Identifier	c		10550863	1					
ANR	10550920	PrimaryExpression	0		10550863	1					
ANR	10550921	AndExpression	m -> d == 65536 && m -> tx == 0 && m -> ty == 0		10550863	1		&&			
ANR	10550922	EqualityExpression	m -> d == 65536		10550863	0		==			
ANR	10550923	PtrMemberAccess	m -> d		10550863	0					
ANR	10550924	Identifier	m		10550863	0					
ANR	10550925	Identifier	d		10550863	1					
ANR	10550926	PrimaryExpression	65536		10550863	1					
ANR	10550927	AndExpression	m -> tx == 0 && m -> ty == 0		10550863	1		&&			
ANR	10550928	EqualityExpression	m -> tx == 0		10550863	0		==			
ANR	10550929	PtrMemberAccess	m -> tx		10550863	0					
ANR	10550930	Identifier	m		10550863	0					
ANR	10550931	Identifier	tx		10550863	1					
ANR	10550932	PrimaryExpression	0		10550863	1					
ANR	10550933	EqualityExpression	m -> ty == 0		10550863	1		==			
ANR	10550934	PtrMemberAccess	m -> ty		10550863	0					
ANR	10550935	Identifier	m		10550863	0					
ANR	10550936	Identifier	ty		10550863	1					
ANR	10550937	PrimaryExpression	0		10550863	1					
ANR	10550938	ReturnStatement	return ;	477:8:14830:14836	10550863	1	True				
ANR	10550939	ForStatement	for ( ; count != 0 ; -- count )		10550863	5					
ANR	10550940	Condition	count != 0	478:11:14849:14858	10550863	0	True				
ANR	10550941	EqualityExpression	count != 0		10550863	0		!=			
ANR	10550942	Identifier	count		10550863	0					
ANR	10550943	PrimaryExpression	0		10550863	1					
ANR	10550944	UnaryExpression	-- count	478:23:14861:14867	10550863	1	True				
ANR	10550945	IncDec	--		10550863	0					
ANR	10550946	Identifier	count		10550863	1					
ANR	10550947	CompoundStatement		10:32:291:291	10550863	2					
ANR	10550948	ExpressionStatement	"TransformF26Dot6PointFix ( & p , * x , * y , m )"	479:8:14880:14919	10550863	0	True				
ANR	10550949	CallExpression	"TransformF26Dot6PointFix ( & p , * x , * y , m )"		10550863	0					
ANR	10550950	Callee	TransformF26Dot6PointFix		10550863	0					
ANR	10550951	Identifier	TransformF26Dot6PointFix		10550863	0					
ANR	10550952	ArgumentList	& p		10550863	1					
ANR	10550953	Argument	& p		10550863	0					
ANR	10550954	UnaryOperationExpression	& p		10550863	0					
ANR	10550955	UnaryOperator	&		10550863	0					
ANR	10550956	Identifier	p		10550863	1					
ANR	10550957	Argument	* x		10550863	1					
ANR	10550958	UnaryOperationExpression	* x		10550863	0					
ANR	10550959	UnaryOperator	*		10550863	0					
ANR	10550960	Identifier	x		10550863	1					
ANR	10550961	Argument	* y		10550863	2					
ANR	10550962	UnaryOperationExpression	* y		10550863	0					
ANR	10550963	UnaryOperator	*		10550863	0					
ANR	10550964	Identifier	y		10550863	1					
ANR	10550965	Argument	m		10550863	3					
ANR	10550966	Identifier	m		10550863	0					
ANR	10550967	ExpressionStatement	* x ++ = p . x	480:8:14929:14939	10550863	1	True				
ANR	10550968	AssignmentExpression	* x ++ = p . x		10550863	0		=			
ANR	10550969	UnaryOperationExpression	* x ++		10550863	0					
ANR	10550970	UnaryOperator	*		10550863	0					
ANR	10550971	PostIncDecOperationExpression	x ++		10550863	1					
ANR	10550972	Identifier	x		10550863	0					
ANR	10550973	IncDec	++		10550863	1					
ANR	10550974	MemberAccess	p . x		10550863	1					
ANR	10550975	Identifier	p		10550863	0					
ANR	10550976	Identifier	x		10550863	1					
ANR	10550977	ExpressionStatement	* y ++ = p . y	481:8:14949:14959	10550863	2	True				
ANR	10550978	AssignmentExpression	* y ++ = p . y		10550863	0		=			
ANR	10550979	UnaryOperationExpression	* y ++		10550863	0					
ANR	10550980	UnaryOperator	*		10550863	0					
ANR	10550981	PostIncDecOperationExpression	y ++		10550863	1					
ANR	10550982	Identifier	y		10550863	0					
ANR	10550983	IncDec	++		10550863	1					
ANR	10550984	MemberAccess	p . y		10550863	1					
ANR	10550985	Identifier	p		10550863	0					
ANR	10550986	Identifier	y		10550863	1					
ANR	10550987	ReturnType	static void		10550863	1					
ANR	10550988	Identifier	MoveGlyphOutline		10550863	2					
ANR	10550989	ParameterList	"TGlyph_Zone * pts , int nOffset , ttfGlyphOutline * out , FixMatrix * m"		10550863	3					
ANR	10550990	Parameter	TGlyph_Zone * pts	468:29:14511:14526	10550863	0	True				
ANR	10550991	ParameterType	TGlyph_Zone *		10550863	0					
ANR	10550992	Identifier	pts		10550863	1					
ANR	10550993	Parameter	int nOffset	468:47:14529:14539	10550863	1	True				
ANR	10550994	ParameterType	int		10550863	0					
ANR	10550995	Identifier	nOffset		10550863	1					
ANR	10550996	Parameter	ttfGlyphOutline * out	468:60:14542:14561	10550863	2	True				
ANR	10550997	ParameterType	ttfGlyphOutline *		10550863	0					
ANR	10550998	Identifier	out		10550863	1					
ANR	10550999	Parameter	FixMatrix * m	468:82:14564:14575	10550863	3	True				
ANR	10551000	ParameterType	FixMatrix *		10550863	0					
ANR	10551001	Identifier	m		10550863	1					
ANR	10551002	CFGEntryNode	ENTRY		10550863		True				
ANR	10551003	CFGExitNode	EXIT		10550863		True				
ANR	10551004	Symbol	* x		10550863						
ANR	10551005	Symbol	* y		10550863						
ANR	10551006	Symbol	out		10550863						
ANR	10551007	Symbol	m -> d		10550863						
ANR	10551008	Symbol	out -> pointCount		10550863						
ANR	10551009	Symbol	pts -> org_x		10550863						
ANR	10551010	Symbol	m -> ty		10550863						
ANR	10551011	Symbol	* pts		10550863						
ANR	10551012	Symbol	m -> tx		10550863						
ANR	10551013	Symbol	* x ++		10550863						
ANR	10551014	Symbol	m -> a		10550863						
ANR	10551015	Symbol	m -> b		10550863						
ANR	10551016	Symbol	m -> c		10550863						
ANR	10551017	Symbol	nOffset		10550863						
ANR	10551018	Symbol	pts -> org_y		10550863						
ANR	10551019	Symbol	count		10550863						
ANR	10551020	Symbol	m		10550863						
ANR	10551021	Symbol	pts		10550863						
ANR	10551022	Symbol	p . y		10550863						
ANR	10551023	Symbol	p . x		10550863						
ANR	10551024	Symbol	p		10550863						
ANR	10551025	Symbol	& p		10550863						
ANR	10551026	Symbol	* m		10550863						
ANR	10551027	Symbol	x		10550863						
ANR	10551028	Symbol	* out		10550863						
ANR	10551029	Symbol	* y ++		10550863						
ANR	10551030	Symbol	y		10550863						
ANR	10551031	Function	ttfOutliner__BuildGlyphOutlineAux	485:0:14970:30052							
ANR	10551032	FunctionDef	"ttfOutliner__BuildGlyphOutlineAux (ttfOutliner * self , int glyphIndex , FixMatrix * m_orig , ttfGlyphOutline * gOutline)"		10551031	0					
ANR	10551033	CompoundStatement		487:0:15114:30052	10551031	0					
ANR	10551034	IdentifierDeclStatement	ttfFont * pFont = self -> pFont ;	487:3:15118:15146	10551031	0	True				
ANR	10551035	IdentifierDecl	* pFont = self -> pFont		10551031	0					
ANR	10551036	IdentifierDeclType	ttfFont *		10551031	0					
ANR	10551037	Identifier	pFont		10551031	1					
ANR	10551038	AssignmentExpression	* pFont = self -> pFont		10551031	2		=			
ANR	10551039	Identifier	pFont		10551031	0					
ANR	10551040	PtrMemberAccess	self -> pFont		10551031	1					
ANR	10551041	Identifier	self		10551031	0					
ANR	10551042	Identifier	pFont		10551031	1					
ANR	10551043	IdentifierDeclStatement	ttfReader * r = self -> r ;	488:4:15152:15174	10551031	1	True				
ANR	10551044	IdentifierDecl	* r = self -> r		10551031	0					
ANR	10551045	IdentifierDeclType	ttfReader *		10551031	0					
ANR	10551046	Identifier	r		10551031	1					
ANR	10551047	AssignmentExpression	* r = self -> r		10551031	2		=			
ANR	10551048	Identifier	r		10551031	0					
ANR	10551049	PtrMemberAccess	self -> r		10551031	1					
ANR	10551050	Identifier	self		10551031	0					
ANR	10551051	Identifier	r		10551031	1					
ANR	10551052	IdentifierDeclStatement	ttfInterpreter * tti = pFont -> tti ;	489:4:15180:15212	10551031	2	True				
ANR	10551053	IdentifierDecl	* tti = pFont -> tti		10551031	0					
ANR	10551054	IdentifierDeclType	ttfInterpreter *		10551031	0					
ANR	10551055	Identifier	tti		10551031	1					
ANR	10551056	AssignmentExpression	* tti = pFont -> tti		10551031	2		=			
ANR	10551057	Identifier	tti		10551031	0					
ANR	10551058	PtrMemberAccess	pFont -> tti		10551031	1					
ANR	10551059	Identifier	pFont		10551031	0					
ANR	10551060	Identifier	tti		10551031	1					
ANR	10551061	IdentifierDeclStatement	short sideBearing ;	490:4:15218:15235	10551031	3	True				
ANR	10551062	IdentifierDecl	sideBearing		10551031	0					
ANR	10551063	IdentifierDeclType	short		10551031	0					
ANR	10551064	Identifier	sideBearing		10551031	1					
ANR	10551065	IdentifierDeclStatement	FontError error = fNoError ;	491:4:15241:15267	10551031	4	True				
ANR	10551066	IdentifierDecl	error = fNoError		10551031	0					
ANR	10551067	IdentifierDeclType	FontError		10551031	0					
ANR	10551068	Identifier	error		10551031	1					
ANR	10551069	AssignmentExpression	error = fNoError		10551031	2		=			
ANR	10551070	Identifier	fNoError		10551031	0					
ANR	10551071	Identifier	fNoError		10551031	1					
ANR	10551072	IdentifierDeclStatement	"short arg1 , arg2 ;"	492:4:15273:15289	10551031	5	True				
ANR	10551073	IdentifierDecl	arg1		10551031	0					
ANR	10551074	IdentifierDeclType	short		10551031	0					
ANR	10551075	Identifier	arg1		10551031	1					
ANR	10551076	IdentifierDecl	arg2		10551031	1					
ANR	10551077	IdentifierDeclType	short		10551031	0					
ANR	10551078	Identifier	arg2		10551031	1					
ANR	10551079	IdentifierDeclStatement	short count ;	493:4:15295:15306	10551031	6	True				
ANR	10551080	IdentifierDecl	count		10551031	0					
ANR	10551081	IdentifierDeclType	short		10551031	0					
ANR	10551082	Identifier	count		10551031	1					
ANR	10551083	IdentifierDeclStatement	unsigned int i ;	494:4:15312:15326	10551031	7	True				
ANR	10551084	IdentifierDecl	i		10551031	0					
ANR	10551085	IdentifierDeclType	unsigned int		10551031	0					
ANR	10551086	Identifier	i		10551031	1					
ANR	10551087	IdentifierDeclStatement	unsigned short nAdvance ;	495:4:15332:15355	10551031	8	True				
ANR	10551088	IdentifierDecl	nAdvance		10551031	0					
ANR	10551089	IdentifierDeclType	unsigned short		10551031	0					
ANR	10551090	Identifier	nAdvance		10551031	1					
ANR	10551091	IdentifierDeclStatement	unsigned int nNextGlyphPtr = 0 ;	496:4:15361:15391	10551031	9	True				
ANR	10551092	IdentifierDecl	nNextGlyphPtr = 0		10551031	0					
ANR	10551093	IdentifierDeclType	unsigned int		10551031	0					
ANR	10551094	Identifier	nNextGlyphPtr		10551031	1					
ANR	10551095	AssignmentExpression	nNextGlyphPtr = 0		10551031	2		=			
ANR	10551096	Identifier	nNextGlyphPtr		10551031	0					
ANR	10551097	PrimaryExpression	0		10551031	1					
ANR	10551098	IdentifierDeclStatement	unsigned int nPosBeg ;	497:4:15397:15417	10551031	10	True				
ANR	10551099	IdentifierDecl	nPosBeg		10551031	0					
ANR	10551100	IdentifierDeclType	unsigned int		10551031	0					
ANR	10551101	Identifier	nPosBeg		10551031	1					
ANR	10551102	IdentifierDeclStatement	TExecution_Context * exec = pFont -> exec ;	498:4:15423:15461	10551031	11	True				
ANR	10551103	IdentifierDecl	* exec = pFont -> exec		10551031	0					
ANR	10551104	IdentifierDeclType	TExecution_Context *		10551031	0					
ANR	10551105	Identifier	exec		10551031	1					
ANR	10551106	AssignmentExpression	* exec = pFont -> exec		10551031	2		=			
ANR	10551107	Identifier	exec		10551031	0					
ANR	10551108	PtrMemberAccess	pFont -> exec		10551031	1					
ANR	10551109	Identifier	pFont		10551031	0					
ANR	10551110	Identifier	exec		10551031	1					
ANR	10551111	IdentifierDeclStatement	TGlyph_Zone * pts = & exec -> pts ;	499:4:15467:15496	10551031	12	True				
ANR	10551112	IdentifierDecl	* pts = & exec -> pts		10551031	0					
ANR	10551113	IdentifierDeclType	TGlyph_Zone *		10551031	0					
ANR	10551114	Identifier	pts		10551031	1					
ANR	10551115	AssignmentExpression	* pts = & exec -> pts		10551031	2		=			
ANR	10551116	Identifier	pts		10551031	0					
ANR	10551117	UnaryOperationExpression	& exec -> pts		10551031	1					
ANR	10551118	UnaryOperator	&		10551031	0					
ANR	10551119	PtrMemberAccess	exec -> pts		10551031	1					
ANR	10551120	Identifier	exec		10551031	0					
ANR	10551121	Identifier	pts		10551031	1					
ANR	10551122	IdentifierDeclStatement	TSubglyph_Record subglyph ;	500:4:15502:15528	10551031	13	True				
ANR	10551123	IdentifierDecl	subglyph		10551031	0					
ANR	10551124	IdentifierDeclType	TSubglyph_Record		10551031	0					
ANR	10551125	Identifier	subglyph		10551031	1					
ANR	10551126	IdentifierDeclStatement	ttfSubGlyphUsage * usage = tti -> usage + tti -> usage_top ;	501:4:15534:15587	10551031	14	True				
ANR	10551127	IdentifierDecl	* usage = tti -> usage + tti -> usage_top		10551031	0					
ANR	10551128	IdentifierDeclType	ttfSubGlyphUsage *		10551031	0					
ANR	10551129	Identifier	usage		10551031	1					
ANR	10551130	AssignmentExpression	* usage = tti -> usage + tti -> usage_top		10551031	2		=			
ANR	10551131	Identifier	usage		10551031	0					
ANR	10551132	AdditiveExpression	tti -> usage + tti -> usage_top		10551031	1		+			
ANR	10551133	PtrMemberAccess	tti -> usage		10551031	0					
ANR	10551134	Identifier	tti		10551031	0					
ANR	10551135	Identifier	usage		10551031	1					
ANR	10551136	PtrMemberAccess	tti -> usage_top		10551031	1					
ANR	10551137	Identifier	tti		10551031	0					
ANR	10551138	Identifier	usage_top		10551031	1					
ANR	10551139	IdentifierDeclStatement	const byte * glyph = NULL ;	502:4:15593:15617	10551031	15	True				
ANR	10551140	IdentifierDecl	* glyph = NULL		10551031	0					
ANR	10551141	IdentifierDeclType	const byte *		10551031	0					
ANR	10551142	Identifier	glyph		10551031	1					
ANR	10551143	AssignmentExpression	* glyph = NULL		10551031	2		=			
ANR	10551144	Identifier	NULL		10551031	0					
ANR	10551145	Identifier	NULL		10551031	1					
ANR	10551146	IdentifierDeclStatement	int glyph_size ;	503:4:15623:15637	10551031	16	True				
ANR	10551147	IdentifierDecl	glyph_size		10551031	0					
ANR	10551148	IdentifierDeclType	int		10551031	0					
ANR	10551149	Identifier	glyph_size		10551031	1					
ANR	10551150	IdentifierDeclStatement	bool execute_bytecode = true ;	504:4:15643:15671	10551031	17	True				
ANR	10551151	IdentifierDecl	execute_bytecode = true		10551031	0					
ANR	10551152	IdentifierDeclType	bool		10551031	0					
ANR	10551153	Identifier	execute_bytecode		10551031	1					
ANR	10551154	AssignmentExpression	execute_bytecode = true		10551031	2		=			
ANR	10551155	Identifier	true		10551031	0					
ANR	10551156	Identifier	true		10551031	1					
ANR	10551157	IdentifierDeclStatement	int nPoints = 0 ;	505:4:15677:15692	10551031	18	True				
ANR	10551158	IdentifierDecl	nPoints = 0		10551031	0					
ANR	10551159	IdentifierDeclType	int		10551031	0					
ANR	10551160	Identifier	nPoints		10551031	1					
ANR	10551161	AssignmentExpression	nPoints = 0		10551031	2		=			
ANR	10551162	Identifier	nPoints		10551031	0					
ANR	10551163	PrimaryExpression	0		10551031	1					
ANR	10551164	Label	retry :	507:0:15695:15700	10551031	19	True				
ANR	10551165	Identifier	retry		10551031	0					
ANR	10551166	IfStatement	"if ( r -> get_metrics ( r , glyphIndex , self -> bVertical , & sideBearing , & nAdvance ) < 0 )"		10551031	20					
ANR	10551167	Condition	"r -> get_metrics ( r , glyphIndex , self -> bVertical , & sideBearing , & nAdvance ) < 0"	508:8:15710:15784	10551031	0	True				
ANR	10551168	RelationalExpression	"r -> get_metrics ( r , glyphIndex , self -> bVertical , & sideBearing , & nAdvance ) < 0"		10551031	0		<			
ANR	10551169	CallExpression	"r -> get_metrics ( r , glyphIndex , self -> bVertical , & sideBearing , & nAdvance )"		10551031	0					
ANR	10551170	Callee	r -> get_metrics		10551031	0					
ANR	10551171	PtrMemberAccess	r -> get_metrics		10551031	0					
ANR	10551172	Identifier	r		10551031	0					
ANR	10551173	Identifier	get_metrics		10551031	1					
ANR	10551174	ArgumentList	r		10551031	1					
ANR	10551175	Argument	r		10551031	0					
ANR	10551176	Identifier	r		10551031	0					
ANR	10551177	Argument	glyphIndex		10551031	1					
ANR	10551178	Identifier	glyphIndex		10551031	0					
ANR	10551179	Argument	self -> bVertical		10551031	2					
ANR	10551180	PtrMemberAccess	self -> bVertical		10551031	0					
ANR	10551181	Identifier	self		10551031	0					
ANR	10551182	Identifier	bVertical		10551031	1					
ANR	10551183	Argument	& sideBearing		10551031	3					
ANR	10551184	UnaryOperationExpression	& sideBearing		10551031	0					
ANR	10551185	UnaryOperator	&		10551031	0					
ANR	10551186	Identifier	sideBearing		10551031	1					
ANR	10551187	Argument	& nAdvance		10551031	4					
ANR	10551188	UnaryOperationExpression	& nAdvance		10551031	0					
ANR	10551189	UnaryOperator	&		10551031	0					
ANR	10551190	Identifier	nAdvance		10551031	1					
ANR	10551191	PrimaryExpression	0		10551031	1					
ANR	10551192	CompoundStatement		22:85:672:672	10551031	1					
ANR	10551193	GotoStatement	goto errex ;	510:8:15875:15885	10551031	0	True				
ANR	10551194	Identifier	errex		10551031	0					
ANR	10551195	ExpressionStatement	gOutline -> sideBearing = shortToF26Dot6 ( sideBearing )	512:4:15897:15948	10551031	21	True				
ANR	10551196	AssignmentExpression	gOutline -> sideBearing = shortToF26Dot6 ( sideBearing )		10551031	0		=			
ANR	10551197	PtrMemberAccess	gOutline -> sideBearing		10551031	0					
ANR	10551198	Identifier	gOutline		10551031	0					
ANR	10551199	Identifier	sideBearing		10551031	1					
ANR	10551200	CallExpression	shortToF26Dot6 ( sideBearing )		10551031	1					
ANR	10551201	Callee	shortToF26Dot6		10551031	0					
ANR	10551202	Identifier	shortToF26Dot6		10551031	0					
ANR	10551203	ArgumentList	sideBearing		10551031	1					
ANR	10551204	Argument	sideBearing		10551031	0					
ANR	10551205	Identifier	sideBearing		10551031	0					
ANR	10551206	ExpressionStatement	gOutline -> advance . x = shortToF26Dot6 ( nAdvance )	513:4:15954:16000	10551031	22	True				
ANR	10551207	AssignmentExpression	gOutline -> advance . x = shortToF26Dot6 ( nAdvance )		10551031	0		=			
ANR	10551208	MemberAccess	gOutline -> advance . x		10551031	0					
ANR	10551209	PtrMemberAccess	gOutline -> advance		10551031	0					
ANR	10551210	Identifier	gOutline		10551031	0					
ANR	10551211	Identifier	advance		10551031	1					
ANR	10551212	Identifier	x		10551031	1					
ANR	10551213	CallExpression	shortToF26Dot6 ( nAdvance )		10551031	1					
ANR	10551214	Callee	shortToF26Dot6		10551031	0					
ANR	10551215	Identifier	shortToF26Dot6		10551031	0					
ANR	10551216	ArgumentList	nAdvance		10551031	1					
ANR	10551217	Argument	nAdvance		10551031	0					
ANR	10551218	Identifier	nAdvance		10551031	0					
ANR	10551219	ExpressionStatement	gOutline -> advance . y = 0	514:4:16006:16029	10551031	23	True				
ANR	10551220	AssignmentExpression	gOutline -> advance . y = 0		10551031	0		=			
ANR	10551221	MemberAccess	gOutline -> advance . y		10551031	0					
ANR	10551222	PtrMemberAccess	gOutline -> advance		10551031	0					
ANR	10551223	Identifier	gOutline		10551031	0					
ANR	10551224	Identifier	advance		10551031	1					
ANR	10551225	Identifier	y		10551031	1					
ANR	10551226	PrimaryExpression	0		10551031	1					
ANR	10551227	ExpressionStatement	self -> bFirst = FALSE	515:4:16035:16055	10551031	24	True				
ANR	10551228	AssignmentExpression	self -> bFirst = FALSE		10551031	0		=			
ANR	10551229	PtrMemberAccess	self -> bFirst		10551031	0					
ANR	10551230	Identifier	self		10551031	0					
ANR	10551231	Identifier	bFirst		10551031	1					
ANR	10551232	Identifier	FALSE		10551031	1					
ANR	10551233	IfStatement	if ( ! self -> bOutline )		10551031	25					
ANR	10551234	Condition	! self -> bOutline	517:8:16066:16080	10551031	0	True				
ANR	10551235	UnaryOperationExpression	! self -> bOutline		10551031	0					
ANR	10551236	UnaryOperator	!		10551031	0					
ANR	10551237	PtrMemberAccess	self -> bOutline		10551031	1					
ANR	10551238	Identifier	self		10551031	0					
ANR	10551239	Identifier	bOutline		10551031	1					
ANR	10551240	ReturnStatement	return fNoError ;	518:8:16091:16106	10551031	1	True				
ANR	10551241	Identifier	fNoError		10551031	0					
ANR	10551242	IfStatement	"if ( ! r -> LoadGlyph ( r , glyphIndex , & glyph , & glyph_size ) )"		10551031	26					
ANR	10551243	Condition	"! r -> LoadGlyph ( r , glyphIndex , & glyph , & glyph_size )"	519:8:16116:16164	10551031	0	True				
ANR	10551244	UnaryOperationExpression	"! r -> LoadGlyph ( r , glyphIndex , & glyph , & glyph_size )"		10551031	0					
ANR	10551245	UnaryOperator	!		10551031	0					
ANR	10551246	CallExpression	"r -> LoadGlyph ( r , glyphIndex , & glyph , & glyph_size )"		10551031	1					
ANR	10551247	Callee	r -> LoadGlyph		10551031	0					
ANR	10551248	PtrMemberAccess	r -> LoadGlyph		10551031	0					
ANR	10551249	Identifier	r		10551031	0					
ANR	10551250	Identifier	LoadGlyph		10551031	1					
ANR	10551251	ArgumentList	r		10551031	1					
ANR	10551252	Argument	r		10551031	0					
ANR	10551253	Identifier	r		10551031	0					
ANR	10551254	Argument	glyphIndex		10551031	1					
ANR	10551255	Identifier	glyphIndex		10551031	0					
ANR	10551256	Argument	& glyph		10551031	2					
ANR	10551257	UnaryOperationExpression	& glyph		10551031	0					
ANR	10551258	UnaryOperator	&		10551031	0					
ANR	10551259	Identifier	glyph		10551031	1					
ANR	10551260	Argument	& glyph_size		10551031	3					
ANR	10551261	UnaryOperationExpression	& glyph_size		10551031	0					
ANR	10551262	UnaryOperator	&		10551031	0					
ANR	10551263	Identifier	glyph_size		10551031	1					
ANR	10551264	ReturnStatement	return fGlyphNotFound ;	520:8:16175:16196	10551031	1	True				
ANR	10551265	Identifier	fGlyphNotFound		10551031	0					
ANR	10551266	IfStatement	if ( r -> Eof ( r ) )		10551031	27					
ANR	10551267	Condition	r -> Eof ( r )	521:8:16206:16214	10551031	0	True				
ANR	10551268	CallExpression	r -> Eof ( r )		10551031	0					
ANR	10551269	Callee	r -> Eof		10551031	0					
ANR	10551270	PtrMemberAccess	r -> Eof		10551031	0					
ANR	10551271	Identifier	r		10551031	0					
ANR	10551272	Identifier	Eof		10551031	1					
ANR	10551273	ArgumentList	r		10551031	1					
ANR	10551274	Argument	r		10551031	0					
ANR	10551275	Identifier	r		10551031	0					
ANR	10551276	CompoundStatement		35:19:1102:1102	10551031	1					
ANR	10551277	ExpressionStatement	"r -> ReleaseGlyph ( r , glyphIndex )"	522:8:16227:16257	10551031	0	True				
ANR	10551278	CallExpression	"r -> ReleaseGlyph ( r , glyphIndex )"		10551031	0					
ANR	10551279	Callee	r -> ReleaseGlyph		10551031	0					
ANR	10551280	PtrMemberAccess	r -> ReleaseGlyph		10551031	0					
ANR	10551281	Identifier	r		10551031	0					
ANR	10551282	Identifier	ReleaseGlyph		10551031	1					
ANR	10551283	ArgumentList	r		10551031	1					
ANR	10551284	Argument	r		10551031	0					
ANR	10551285	Identifier	r		10551031	0					
ANR	10551286	Argument	glyphIndex		10551031	1					
ANR	10551287	Identifier	glyphIndex		10551031	0					
ANR	10551288	ExpressionStatement	gOutline -> xMinB = gOutline -> yMinB = 0	523:8:16267:16304	10551031	1	True				
ANR	10551289	AssignmentExpression	gOutline -> xMinB = gOutline -> yMinB = 0		10551031	0		=			
ANR	10551290	PtrMemberAccess	gOutline -> xMinB		10551031	0					
ANR	10551291	Identifier	gOutline		10551031	0					
ANR	10551292	Identifier	xMinB		10551031	1					
ANR	10551293	AssignmentExpression	gOutline -> yMinB = 0		10551031	1		=			
ANR	10551294	PtrMemberAccess	gOutline -> yMinB		10551031	0					
ANR	10551295	Identifier	gOutline		10551031	0					
ANR	10551296	Identifier	yMinB		10551031	1					
ANR	10551297	PrimaryExpression	0		10551031	1					
ANR	10551298	ExpressionStatement	gOutline -> xMaxB = gOutline -> yMaxB = 0	524:8:16314:16351	10551031	2	True				
ANR	10551299	AssignmentExpression	gOutline -> xMaxB = gOutline -> yMaxB = 0		10551031	0		=			
ANR	10551300	PtrMemberAccess	gOutline -> xMaxB		10551031	0					
ANR	10551301	Identifier	gOutline		10551031	0					
ANR	10551302	Identifier	xMaxB		10551031	1					
ANR	10551303	AssignmentExpression	gOutline -> yMaxB = 0		10551031	1		=			
ANR	10551304	PtrMemberAccess	gOutline -> yMaxB		10551031	0					
ANR	10551305	Identifier	gOutline		10551031	0					
ANR	10551306	Identifier	yMaxB		10551031	1					
ANR	10551307	PrimaryExpression	0		10551031	1					
ANR	10551308	ReturnStatement	return fNoError ;	525:8:16361:16376	10551031	3	True				
ANR	10551309	Identifier	fNoError		10551031	0					
ANR	10551310	IfStatement	if ( r -> Error ( r ) )		10551031	28					
ANR	10551311	Condition	r -> Error ( r )	527:8:16392:16402	10551031	0	True				
ANR	10551312	CallExpression	r -> Error ( r )		10551031	0					
ANR	10551313	Callee	r -> Error		10551031	0					
ANR	10551314	PtrMemberAccess	r -> Error		10551031	0					
ANR	10551315	Identifier	r		10551031	0					
ANR	10551316	Identifier	Error		10551031	1					
ANR	10551317	ArgumentList	r		10551031	1					
ANR	10551318	Argument	r		10551031	0					
ANR	10551319	Identifier	r		10551031	0					
ANR	10551320	GotoStatement	goto errex ;	528:8:16413:16423	10551031	1	True				
ANR	10551321	Identifier	errex		10551031	0					
ANR	10551322	ExpressionStatement	nPosBeg = r -> Tell ( r )	529:4:16429:16449	10551031	29	True				
ANR	10551323	AssignmentExpression	nPosBeg = r -> Tell ( r )		10551031	0		=			
ANR	10551324	Identifier	nPosBeg		10551031	0					
ANR	10551325	CallExpression	r -> Tell ( r )		10551031	1					
ANR	10551326	Callee	r -> Tell		10551031	0					
ANR	10551327	PtrMemberAccess	r -> Tell		10551031	0					
ANR	10551328	Identifier	r		10551031	0					
ANR	10551329	Identifier	Tell		10551031	1					
ANR	10551330	ArgumentList	r		10551031	1					
ANR	10551331	Argument	r		10551031	0					
ANR	10551332	Identifier	r		10551031	0					
ANR	10551333	ExpressionStatement	gOutline -> contourCount = ttfReader__Short ( r )	531:4:16456:16500	10551031	30	True				
ANR	10551334	AssignmentExpression	gOutline -> contourCount = ttfReader__Short ( r )		10551031	0		=			
ANR	10551335	PtrMemberAccess	gOutline -> contourCount		10551031	0					
ANR	10551336	Identifier	gOutline		10551031	0					
ANR	10551337	Identifier	contourCount		10551031	1					
ANR	10551338	CallExpression	ttfReader__Short ( r )		10551031	1					
ANR	10551339	Callee	ttfReader__Short		10551031	0					
ANR	10551340	Identifier	ttfReader__Short		10551031	0					
ANR	10551341	ArgumentList	r		10551031	1					
ANR	10551342	Argument	r		10551031	0					
ANR	10551343	Identifier	r		10551031	0					
ANR	10551344	ExpressionStatement	subglyph . bbox . xMin = ttfReader__Short ( r )	532:4:16506:16546	10551031	31	True				
ANR	10551345	AssignmentExpression	subglyph . bbox . xMin = ttfReader__Short ( r )		10551031	0		=			
ANR	10551346	MemberAccess	subglyph . bbox . xMin		10551031	0					
ANR	10551347	MemberAccess	subglyph . bbox		10551031	0					
ANR	10551348	Identifier	subglyph		10551031	0					
ANR	10551349	Identifier	bbox		10551031	1					
ANR	10551350	Identifier	xMin		10551031	1					
ANR	10551351	CallExpression	ttfReader__Short ( r )		10551031	1					
ANR	10551352	Callee	ttfReader__Short		10551031	0					
ANR	10551353	Identifier	ttfReader__Short		10551031	0					
ANR	10551354	ArgumentList	r		10551031	1					
ANR	10551355	Argument	r		10551031	0					
ANR	10551356	Identifier	r		10551031	0					
ANR	10551357	ExpressionStatement	subglyph . bbox . yMin = ttfReader__Short ( r )	533:4:16552:16592	10551031	32	True				
ANR	10551358	AssignmentExpression	subglyph . bbox . yMin = ttfReader__Short ( r )		10551031	0		=			
ANR	10551359	MemberAccess	subglyph . bbox . yMin		10551031	0					
ANR	10551360	MemberAccess	subglyph . bbox		10551031	0					
ANR	10551361	Identifier	subglyph		10551031	0					
ANR	10551362	Identifier	bbox		10551031	1					
ANR	10551363	Identifier	yMin		10551031	1					
ANR	10551364	CallExpression	ttfReader__Short ( r )		10551031	1					
ANR	10551365	Callee	ttfReader__Short		10551031	0					
ANR	10551366	Identifier	ttfReader__Short		10551031	0					
ANR	10551367	ArgumentList	r		10551031	1					
ANR	10551368	Argument	r		10551031	0					
ANR	10551369	Identifier	r		10551031	0					
ANR	10551370	ExpressionStatement	subglyph . bbox . xMax = ttfReader__Short ( r )	534:4:16598:16638	10551031	33	True				
ANR	10551371	AssignmentExpression	subglyph . bbox . xMax = ttfReader__Short ( r )		10551031	0		=			
ANR	10551372	MemberAccess	subglyph . bbox . xMax		10551031	0					
ANR	10551373	MemberAccess	subglyph . bbox		10551031	0					
ANR	10551374	Identifier	subglyph		10551031	0					
ANR	10551375	Identifier	bbox		10551031	1					
ANR	10551376	Identifier	xMax		10551031	1					
ANR	10551377	CallExpression	ttfReader__Short ( r )		10551031	1					
ANR	10551378	Callee	ttfReader__Short		10551031	0					
ANR	10551379	Identifier	ttfReader__Short		10551031	0					
ANR	10551380	ArgumentList	r		10551031	1					
ANR	10551381	Argument	r		10551031	0					
ANR	10551382	Identifier	r		10551031	0					
ANR	10551383	ExpressionStatement	subglyph . bbox . yMax = ttfReader__Short ( r )	535:4:16644:16684	10551031	34	True				
ANR	10551384	AssignmentExpression	subglyph . bbox . yMax = ttfReader__Short ( r )		10551031	0		=			
ANR	10551385	MemberAccess	subglyph . bbox . yMax		10551031	0					
ANR	10551386	MemberAccess	subglyph . bbox		10551031	0					
ANR	10551387	Identifier	subglyph		10551031	0					
ANR	10551388	Identifier	bbox		10551031	1					
ANR	10551389	Identifier	yMax		10551031	1					
ANR	10551390	CallExpression	ttfReader__Short ( r )		10551031	1					
ANR	10551391	Callee	ttfReader__Short		10551031	0					
ANR	10551392	Identifier	ttfReader__Short		10551031	0					
ANR	10551393	ArgumentList	r		10551031	1					
ANR	10551394	Argument	r		10551031	0					
ANR	10551395	Identifier	r		10551031	0					
ANR	10551396	ExpressionStatement	"gOutline -> xMinB = Scale_X ( & exec -> metrics , subglyph . bbox . xMin )"	537:4:16691:16752	10551031	35	True				
ANR	10551397	AssignmentExpression	"gOutline -> xMinB = Scale_X ( & exec -> metrics , subglyph . bbox . xMin )"		10551031	0		=			
ANR	10551398	PtrMemberAccess	gOutline -> xMinB		10551031	0					
ANR	10551399	Identifier	gOutline		10551031	0					
ANR	10551400	Identifier	xMinB		10551031	1					
ANR	10551401	CallExpression	"Scale_X ( & exec -> metrics , subglyph . bbox . xMin )"		10551031	1					
ANR	10551402	Callee	Scale_X		10551031	0					
ANR	10551403	Identifier	Scale_X		10551031	0					
ANR	10551404	ArgumentList	& exec -> metrics		10551031	1					
ANR	10551405	Argument	& exec -> metrics		10551031	0					
ANR	10551406	UnaryOperationExpression	& exec -> metrics		10551031	0					
ANR	10551407	UnaryOperator	&		10551031	0					
ANR	10551408	PtrMemberAccess	exec -> metrics		10551031	1					
ANR	10551409	Identifier	exec		10551031	0					
ANR	10551410	Identifier	metrics		10551031	1					
ANR	10551411	Argument	subglyph . bbox . xMin		10551031	1					
ANR	10551412	MemberAccess	subglyph . bbox . xMin		10551031	0					
ANR	10551413	MemberAccess	subglyph . bbox		10551031	0					
ANR	10551414	Identifier	subglyph		10551031	0					
ANR	10551415	Identifier	bbox		10551031	1					
ANR	10551416	Identifier	xMin		10551031	1					
ANR	10551417	ExpressionStatement	"gOutline -> yMinB = Scale_Y ( & exec -> metrics , subglyph . bbox . yMin )"	538:4:16758:16819	10551031	36	True				
ANR	10551418	AssignmentExpression	"gOutline -> yMinB = Scale_Y ( & exec -> metrics , subglyph . bbox . yMin )"		10551031	0		=			
ANR	10551419	PtrMemberAccess	gOutline -> yMinB		10551031	0					
ANR	10551420	Identifier	gOutline		10551031	0					
ANR	10551421	Identifier	yMinB		10551031	1					
ANR	10551422	CallExpression	"Scale_Y ( & exec -> metrics , subglyph . bbox . yMin )"		10551031	1					
ANR	10551423	Callee	Scale_Y		10551031	0					
ANR	10551424	Identifier	Scale_Y		10551031	0					
ANR	10551425	ArgumentList	& exec -> metrics		10551031	1					
ANR	10551426	Argument	& exec -> metrics		10551031	0					
ANR	10551427	UnaryOperationExpression	& exec -> metrics		10551031	0					
ANR	10551428	UnaryOperator	&		10551031	0					
ANR	10551429	PtrMemberAccess	exec -> metrics		10551031	1					
ANR	10551430	Identifier	exec		10551031	0					
ANR	10551431	Identifier	metrics		10551031	1					
ANR	10551432	Argument	subglyph . bbox . yMin		10551031	1					
ANR	10551433	MemberAccess	subglyph . bbox . yMin		10551031	0					
ANR	10551434	MemberAccess	subglyph . bbox		10551031	0					
ANR	10551435	Identifier	subglyph		10551031	0					
ANR	10551436	Identifier	bbox		10551031	1					
ANR	10551437	Identifier	yMin		10551031	1					
ANR	10551438	ExpressionStatement	"gOutline -> xMaxB = Scale_X ( & exec -> metrics , subglyph . bbox . xMax )"	539:4:16825:16886	10551031	37	True				
ANR	10551439	AssignmentExpression	"gOutline -> xMaxB = Scale_X ( & exec -> metrics , subglyph . bbox . xMax )"		10551031	0		=			
ANR	10551440	PtrMemberAccess	gOutline -> xMaxB		10551031	0					
ANR	10551441	Identifier	gOutline		10551031	0					
ANR	10551442	Identifier	xMaxB		10551031	1					
ANR	10551443	CallExpression	"Scale_X ( & exec -> metrics , subglyph . bbox . xMax )"		10551031	1					
ANR	10551444	Callee	Scale_X		10551031	0					
ANR	10551445	Identifier	Scale_X		10551031	0					
ANR	10551446	ArgumentList	& exec -> metrics		10551031	1					
ANR	10551447	Argument	& exec -> metrics		10551031	0					
ANR	10551448	UnaryOperationExpression	& exec -> metrics		10551031	0					
ANR	10551449	UnaryOperator	&		10551031	0					
ANR	10551450	PtrMemberAccess	exec -> metrics		10551031	1					
ANR	10551451	Identifier	exec		10551031	0					
ANR	10551452	Identifier	metrics		10551031	1					
ANR	10551453	Argument	subglyph . bbox . xMax		10551031	1					
ANR	10551454	MemberAccess	subglyph . bbox . xMax		10551031	0					
ANR	10551455	MemberAccess	subglyph . bbox		10551031	0					
ANR	10551456	Identifier	subglyph		10551031	0					
ANR	10551457	Identifier	bbox		10551031	1					
ANR	10551458	Identifier	xMax		10551031	1					
ANR	10551459	ExpressionStatement	"gOutline -> yMaxB = Scale_Y ( & exec -> metrics , subglyph . bbox . yMax )"	540:4:16892:16953	10551031	38	True				
ANR	10551460	AssignmentExpression	"gOutline -> yMaxB = Scale_Y ( & exec -> metrics , subglyph . bbox . yMax )"		10551031	0		=			
ANR	10551461	PtrMemberAccess	gOutline -> yMaxB		10551031	0					
ANR	10551462	Identifier	gOutline		10551031	0					
ANR	10551463	Identifier	yMaxB		10551031	1					
ANR	10551464	CallExpression	"Scale_Y ( & exec -> metrics , subglyph . bbox . yMax )"		10551031	1					
ANR	10551465	Callee	Scale_Y		10551031	0					
ANR	10551466	Identifier	Scale_Y		10551031	0					
ANR	10551467	ArgumentList	& exec -> metrics		10551031	1					
ANR	10551468	Argument	& exec -> metrics		10551031	0					
ANR	10551469	UnaryOperationExpression	& exec -> metrics		10551031	0					
ANR	10551470	UnaryOperator	&		10551031	0					
ANR	10551471	PtrMemberAccess	exec -> metrics		10551031	1					
ANR	10551472	Identifier	exec		10551031	0					
ANR	10551473	Identifier	metrics		10551031	1					
ANR	10551474	Argument	subglyph . bbox . yMax		10551031	1					
ANR	10551475	MemberAccess	subglyph . bbox . yMax		10551031	0					
ANR	10551476	MemberAccess	subglyph . bbox		10551031	0					
ANR	10551477	Identifier	subglyph		10551031	0					
ANR	10551478	Identifier	bbox		10551031	1					
ANR	10551479	Identifier	yMax		10551031	1					
ANR	10551480	ExpressionStatement	"Init_Glyph_Component ( & subglyph , NULL , pFont -> exec )"	543:4:16989:17039	10551031	39	True				
ANR	10551481	CallExpression	"Init_Glyph_Component ( & subglyph , NULL , pFont -> exec )"		10551031	0					
ANR	10551482	Callee	Init_Glyph_Component		10551031	0					
ANR	10551483	Identifier	Init_Glyph_Component		10551031	0					
ANR	10551484	ArgumentList	& subglyph		10551031	1					
ANR	10551485	Argument	& subglyph		10551031	0					
ANR	10551486	UnaryOperationExpression	& subglyph		10551031	0					
ANR	10551487	UnaryOperator	&		10551031	0					
ANR	10551488	Identifier	subglyph		10551031	1					
ANR	10551489	Argument	NULL		10551031	1					
ANR	10551490	Identifier	NULL		10551031	0					
ANR	10551491	Argument	pFont -> exec		10551031	2					
ANR	10551492	PtrMemberAccess	pFont -> exec		10551031	0					
ANR	10551493	Identifier	pFont		10551031	0					
ANR	10551494	Identifier	exec		10551031	1					
ANR	10551495	ExpressionStatement	subglyph . leftBearing = sideBearing	544:4:17045:17079	10551031	40	True				
ANR	10551496	AssignmentExpression	subglyph . leftBearing = sideBearing		10551031	0		=			
ANR	10551497	MemberAccess	subglyph . leftBearing		10551031	0					
ANR	10551498	Identifier	subglyph		10551031	0					
ANR	10551499	Identifier	leftBearing		10551031	1					
ANR	10551500	Identifier	sideBearing		10551031	1					
ANR	10551501	ExpressionStatement	subglyph . advanceWidth = nAdvance	545:4:17085:17117	10551031	41	True				
ANR	10551502	AssignmentExpression	subglyph . advanceWidth = nAdvance		10551031	0		=			
ANR	10551503	MemberAccess	subglyph . advanceWidth		10551031	0					
ANR	10551504	Identifier	subglyph		10551031	0					
ANR	10551505	Identifier	advanceWidth		10551031	1					
ANR	10551506	Identifier	nAdvance		10551031	1					
ANR	10551507	ExpressionStatement	subglyph . pp1 . x = subglyph . bbox . xMin - sideBearing	546:4:17123:17172	10551031	42	True				
ANR	10551508	AssignmentExpression	subglyph . pp1 . x = subglyph . bbox . xMin - sideBearing		10551031	0		=			
ANR	10551509	MemberAccess	subglyph . pp1 . x		10551031	0					
ANR	10551510	MemberAccess	subglyph . pp1		10551031	0					
ANR	10551511	Identifier	subglyph		10551031	0					
ANR	10551512	Identifier	pp1		10551031	1					
ANR	10551513	Identifier	x		10551031	1					
ANR	10551514	AdditiveExpression	subglyph . bbox . xMin - sideBearing		10551031	1		-			
ANR	10551515	MemberAccess	subglyph . bbox . xMin		10551031	0					
ANR	10551516	MemberAccess	subglyph . bbox		10551031	0					
ANR	10551517	Identifier	subglyph		10551031	0					
ANR	10551518	Identifier	bbox		10551031	1					
ANR	10551519	Identifier	xMin		10551031	1					
ANR	10551520	Identifier	sideBearing		10551031	1					
ANR	10551521	ExpressionStatement	subglyph . pp1 . y = 0	547:4:17178:17196	10551031	43	True				
ANR	10551522	AssignmentExpression	subglyph . pp1 . y = 0		10551031	0		=			
ANR	10551523	MemberAccess	subglyph . pp1 . y		10551031	0					
ANR	10551524	MemberAccess	subglyph . pp1		10551031	0					
ANR	10551525	Identifier	subglyph		10551031	0					
ANR	10551526	Identifier	pp1		10551031	1					
ANR	10551527	Identifier	y		10551031	1					
ANR	10551528	PrimaryExpression	0		10551031	1					
ANR	10551529	ExpressionStatement	subglyph . pp2 . x = subglyph . pp1 . x + nAdvance	548:4:17202:17244	10551031	44	True				
ANR	10551530	AssignmentExpression	subglyph . pp2 . x = subglyph . pp1 . x + nAdvance		10551031	0		=			
ANR	10551531	MemberAccess	subglyph . pp2 . x		10551031	0					
ANR	10551532	MemberAccess	subglyph . pp2		10551031	0					
ANR	10551533	Identifier	subglyph		10551031	0					
ANR	10551534	Identifier	pp2		10551031	1					
ANR	10551535	Identifier	x		10551031	1					
ANR	10551536	AdditiveExpression	subglyph . pp1 . x + nAdvance		10551031	1		+			
ANR	10551537	MemberAccess	subglyph . pp1 . x		10551031	0					
ANR	10551538	MemberAccess	subglyph . pp1		10551031	0					
ANR	10551539	Identifier	subglyph		10551031	0					
ANR	10551540	Identifier	pp1		10551031	1					
ANR	10551541	Identifier	x		10551031	1					
ANR	10551542	Identifier	nAdvance		10551031	1					
ANR	10551543	ExpressionStatement	subglyph . pp2 . y = 0	549:4:17250:17268	10551031	45	True				
ANR	10551544	AssignmentExpression	subglyph . pp2 . y = 0		10551031	0		=			
ANR	10551545	MemberAccess	subglyph . pp2 . y		10551031	0					
ANR	10551546	MemberAccess	subglyph . pp2		10551031	0					
ANR	10551547	Identifier	subglyph		10551031	0					
ANR	10551548	Identifier	pp2		10551031	1					
ANR	10551549	Identifier	y		10551031	1					
ANR	10551550	PrimaryExpression	0		10551031	1					
ANR	10551551	IfStatement	if ( gOutline -> contourCount == 0 )		10551031	46					
ANR	10551552	Condition	gOutline -> contourCount == 0	552:8:17308:17334	10551031	0	True				
ANR	10551553	EqualityExpression	gOutline -> contourCount == 0		10551031	0		==			
ANR	10551554	PtrMemberAccess	gOutline -> contourCount		10551031	0					
ANR	10551555	Identifier	gOutline		10551031	0					
ANR	10551556	Identifier	contourCount		10551031	1					
ANR	10551557	PrimaryExpression	0		10551031	1					
ANR	10551558	ExpressionStatement	gOutline -> pointCount = 0	553:8:17345:17369	10551031	1	True				
ANR	10551559	AssignmentExpression	gOutline -> pointCount = 0		10551031	0		=			
ANR	10551560	PtrMemberAccess	gOutline -> pointCount		10551031	0					
ANR	10551561	Identifier	gOutline		10551031	0					
ANR	10551562	Identifier	pointCount		10551031	1					
ANR	10551563	PrimaryExpression	0		10551031	1					
ANR	10551564	ElseStatement	else		10551031	0					
ANR	10551565	IfStatement	if ( gOutline -> contourCount == - 1 )		10551031	0					
ANR	10551566	Condition	gOutline -> contourCount == - 1	554:13:17384:17411	10551031	0	True				
ANR	10551567	EqualityExpression	gOutline -> contourCount == - 1		10551031	0		==			
ANR	10551568	PtrMemberAccess	gOutline -> contourCount		10551031	0					
ANR	10551569	Identifier	gOutline		10551031	0					
ANR	10551570	Identifier	contourCount		10551031	1					
ANR	10551571	UnaryOperationExpression	- 1		10551031	1					
ANR	10551572	UnaryOperator	-		10551031	0					
ANR	10551573	PrimaryExpression	1		10551031	1					
ANR	10551574	CompoundStatement		72:8:2429:2447	10551031	1					
ANR	10551575	IdentifierDeclStatement	"unsigned short flags , index , bHaveInstructions = 0 ;"	555:8:17424:17474	10551031	0	True				
ANR	10551576	IdentifierDecl	flags		10551031	0					
ANR	10551577	IdentifierDeclType	unsigned short		10551031	0					
ANR	10551578	Identifier	flags		10551031	1					
ANR	10551579	IdentifierDecl	index		10551031	1					
ANR	10551580	IdentifierDeclType	unsigned short		10551031	0					
ANR	10551581	Identifier	index		10551031	1					
ANR	10551582	IdentifierDecl	bHaveInstructions = 0		10551031	2					
ANR	10551583	IdentifierDeclType	unsigned short		10551031	0					
ANR	10551584	Identifier	bHaveInstructions		10551031	1					
ANR	10551585	AssignmentExpression	bHaveInstructions = 0		10551031	2		=			
ANR	10551586	Identifier	bHaveInstructions		10551031	0					
ANR	10551587	PrimaryExpression	0		10551031	1					
ANR	10551588	IdentifierDeclStatement	unsigned int nUsage = 0 ;	556:8:17484:17507	10551031	1	True				
ANR	10551589	IdentifierDecl	nUsage = 0		10551031	0					
ANR	10551590	IdentifierDeclType	unsigned int		10551031	0					
ANR	10551591	Identifier	nUsage		10551031	1					
ANR	10551592	AssignmentExpression	nUsage = 0		10551031	2		=			
ANR	10551593	Identifier	nUsage		10551031	0					
ANR	10551594	PrimaryExpression	0		10551031	1					
ANR	10551595	IdentifierDeclStatement	unsigned int nPos ;	557:8:17517:17534	10551031	2	True				
ANR	10551596	IdentifierDecl	nPos		10551031	0					
ANR	10551597	IdentifierDeclType	unsigned int		10551031	0					
ANR	10551598	Identifier	nPos		10551031	1					
ANR	10551599	IdentifierDeclStatement	unsigned int n_ins ;	558:8:17544:17562	10551031	3	True				
ANR	10551600	IdentifierDecl	n_ins		10551031	0					
ANR	10551601	IdentifierDeclType	unsigned int		10551031	0					
ANR	10551602	Identifier	n_ins		10551031	1					
ANR	10551603	ExpressionStatement	gOutline -> bCompound = TRUE	560:8:17573:17599	10551031	4	True				
ANR	10551604	AssignmentExpression	gOutline -> bCompound = TRUE		10551031	0		=			
ANR	10551605	PtrMemberAccess	gOutline -> bCompound		10551031	0					
ANR	10551606	Identifier	gOutline		10551031	0					
ANR	10551607	Identifier	bCompound		10551031	1					
ANR	10551608	Identifier	TRUE		10551031	1					
ANR	10551609	IfStatement	if ( tti -> usage_top + pFont -> nMaxComponents > tti -> usage_size )		10551031	5					
ANR	10551610	Condition	tti -> usage_top + pFont -> nMaxComponents > tti -> usage_size	561:12:17613:17668	10551031	0	True				
ANR	10551611	RelationalExpression	tti -> usage_top + pFont -> nMaxComponents > tti -> usage_size		10551031	0		>			
ANR	10551612	AdditiveExpression	tti -> usage_top + pFont -> nMaxComponents		10551031	0		+			
ANR	10551613	PtrMemberAccess	tti -> usage_top		10551031	0					
ANR	10551614	Identifier	tti		10551031	0					
ANR	10551615	Identifier	usage_top		10551031	1					
ANR	10551616	PtrMemberAccess	pFont -> nMaxComponents		10551031	1					
ANR	10551617	Identifier	pFont		10551031	0					
ANR	10551618	Identifier	nMaxComponents		10551031	1					
ANR	10551619	PtrMemberAccess	tti -> usage_size		10551031	1					
ANR	10551620	Identifier	tti		10551031	0					
ANR	10551621	Identifier	usage_size		10551031	1					
ANR	10551622	ReturnStatement	return fBadFontData ;	562:12:17683:17702	10551031	1	True				
ANR	10551623	Identifier	fBadFontData		10551031	0					
ANR	10551624	ExpressionStatement	gOutline -> contourCount = gOutline -> pointCount = 0	563:8:17712:17761	10551031	6	True				
ANR	10551625	AssignmentExpression	gOutline -> contourCount = gOutline -> pointCount = 0		10551031	0		=			
ANR	10551626	PtrMemberAccess	gOutline -> contourCount		10551031	0					
ANR	10551627	Identifier	gOutline		10551031	0					
ANR	10551628	Identifier	contourCount		10551031	1					
ANR	10551629	AssignmentExpression	gOutline -> pointCount = 0		10551031	1		=			
ANR	10551630	PtrMemberAccess	gOutline -> pointCount		10551031	0					
ANR	10551631	Identifier	gOutline		10551031	0					
ANR	10551632	Identifier	pointCount		10551031	1					
ANR	10551633	PrimaryExpression	0		10551031	1					
ANR	10551634	DoStatement	do		10551031	7					
ANR	10551635	CompoundStatement		80:12:2698:2717	10551031	0					
ANR	10551636	IdentifierDeclStatement	FixMatrix m ;	565:12:17788:17799	10551031	0	True				
ANR	10551637	IdentifierDecl	m		10551031	0					
ANR	10551638	IdentifierDeclType	FixMatrix		10551031	0					
ANR	10551639	Identifier	m		10551031	1					
ANR	10551640	IdentifierDeclStatement	ttfSubGlyphUsage * e ;	566:12:17813:17832	10551031	1	True				
ANR	10551641	IdentifierDecl	* e		10551031	0					
ANR	10551642	IdentifierDeclType	ttfSubGlyphUsage *		10551031	0					
ANR	10551643	Identifier	e		10551031	1					
ANR	10551644	IfStatement	if ( nUsage >= pFont -> nMaxComponents )		10551031	2					
ANR	10551645	Condition	nUsage >= pFont -> nMaxComponents	568:16:17851:17881	10551031	0	True				
ANR	10551646	RelationalExpression	nUsage >= pFont -> nMaxComponents		10551031	0		>=			
ANR	10551647	Identifier	nUsage		10551031	0					
ANR	10551648	PtrMemberAccess	pFont -> nMaxComponents		10551031	1					
ANR	10551649	Identifier	pFont		10551031	0					
ANR	10551650	Identifier	nMaxComponents		10551031	1					
ANR	10551651	CompoundStatement		82:49:2769:2769	10551031	1					
ANR	10551652	ExpressionStatement	error = fMemoryError	569:16:17902:17922	10551031	0	True				
ANR	10551653	AssignmentExpression	error = fMemoryError		10551031	0		=			
ANR	10551654	Identifier	error		10551031	0					
ANR	10551655	Identifier	fMemoryError		10551031	1					
ANR	10551656	GotoStatement	goto ex ;	569:38:17924:17931	10551031	1	True				
ANR	10551657	Identifier	ex		10551031	0					
ANR	10551658	ExpressionStatement	flags = ttfReader__UShort ( r )	571:12:17959:17987	10551031	3	True				
ANR	10551659	AssignmentExpression	flags = ttfReader__UShort ( r )		10551031	0		=			
ANR	10551660	Identifier	flags		10551031	0					
ANR	10551661	CallExpression	ttfReader__UShort ( r )		10551031	1					
ANR	10551662	Callee	ttfReader__UShort		10551031	0					
ANR	10551663	Identifier	ttfReader__UShort		10551031	0					
ANR	10551664	ArgumentList	r		10551031	1					
ANR	10551665	Argument	r		10551031	0					
ANR	10551666	Identifier	r		10551031	0					
ANR	10551667	ExpressionStatement	index = ttfReader__UShort ( r )	572:12:18001:18029	10551031	4	True				
ANR	10551668	AssignmentExpression	index = ttfReader__UShort ( r )		10551031	0		=			
ANR	10551669	Identifier	index		10551031	0					
ANR	10551670	CallExpression	ttfReader__UShort ( r )		10551031	1					
ANR	10551671	Callee	ttfReader__UShort		10551031	0					
ANR	10551672	Identifier	ttfReader__UShort		10551031	0					
ANR	10551673	ArgumentList	r		10551031	1					
ANR	10551674	Argument	r		10551031	0					
ANR	10551675	Identifier	r		10551031	0					
ANR	10551676	ExpressionStatement	bHaveInstructions |= ( flags & WE_HAVE_INSTRUCTIONS )	573:12:18043:18094	10551031	5	True				
ANR	10551677	AssignmentExpression	bHaveInstructions |= ( flags & WE_HAVE_INSTRUCTIONS )		10551031	0		|=			
ANR	10551678	Identifier	bHaveInstructions		10551031	0					
ANR	10551679	BitAndExpression	flags & WE_HAVE_INSTRUCTIONS		10551031	1		&			
ANR	10551680	Identifier	flags		10551031	0					
ANR	10551681	Identifier	WE_HAVE_INSTRUCTIONS		10551031	1					
ANR	10551682	IfStatement	if ( flags & ARG_1_AND_2_ARE_WORDS )		10551031	6					
ANR	10551683	Condition	flags & ARG_1_AND_2_ARE_WORDS	574:16:18112:18140	10551031	0	True				
ANR	10551684	BitAndExpression	flags & ARG_1_AND_2_ARE_WORDS		10551031	0		&			
ANR	10551685	Identifier	flags		10551031	0					
ANR	10551686	Identifier	ARG_1_AND_2_ARE_WORDS		10551031	1					
ANR	10551687	CompoundStatement		88:47:3028:3028	10551031	1					
ANR	10551688	ExpressionStatement	arg1 = ttfReader__Short ( r )	575:16:18161:18187	10551031	0	True				
ANR	10551689	AssignmentExpression	arg1 = ttfReader__Short ( r )		10551031	0		=			
ANR	10551690	Identifier	arg1		10551031	0					
ANR	10551691	CallExpression	ttfReader__Short ( r )		10551031	1					
ANR	10551692	Callee	ttfReader__Short		10551031	0					
ANR	10551693	Identifier	ttfReader__Short		10551031	0					
ANR	10551694	ArgumentList	r		10551031	1					
ANR	10551695	Argument	r		10551031	0					
ANR	10551696	Identifier	r		10551031	0					
ANR	10551697	ExpressionStatement	arg2 = ttfReader__Short ( r )	576:16:18205:18231	10551031	1	True				
ANR	10551698	AssignmentExpression	arg2 = ttfReader__Short ( r )		10551031	0		=			
ANR	10551699	Identifier	arg2		10551031	0					
ANR	10551700	CallExpression	ttfReader__Short ( r )		10551031	1					
ANR	10551701	Callee	ttfReader__Short		10551031	0					
ANR	10551702	Identifier	ttfReader__Short		10551031	0					
ANR	10551703	ArgumentList	r		10551031	1					
ANR	10551704	Argument	r		10551031	0					
ANR	10551705	Identifier	r		10551031	0					
ANR	10551706	ElseStatement	else		10551031	0					
ANR	10551707	CompoundStatement		91:19:3137:3137	10551031	0					
ANR	10551708	IfStatement	if ( flags & ARGS_ARE_XY_VALUES )		10551031	0					
ANR	10551709	Condition	flags & ARGS_ARE_XY_VALUES	578:20:18274:18299	10551031	0	True				
ANR	10551710	BitAndExpression	flags & ARGS_ARE_XY_VALUES		10551031	0		&			
ANR	10551711	Identifier	flags		10551031	0					
ANR	10551712	Identifier	ARGS_ARE_XY_VALUES		10551031	1					
ANR	10551713	CompoundStatement		92:48:3187:3187	10551031	1					
ANR	10551714	ExpressionStatement	arg1 = ttfReader__SignedByte ( r )	580:20:18369:18400	10551031	0	True				
ANR	10551715	AssignmentExpression	arg1 = ttfReader__SignedByte ( r )		10551031	0		=			
ANR	10551716	Identifier	arg1		10551031	0					
ANR	10551717	CallExpression	ttfReader__SignedByte ( r )		10551031	1					
ANR	10551718	Callee	ttfReader__SignedByte		10551031	0					
ANR	10551719	Identifier	ttfReader__SignedByte		10551031	0					
ANR	10551720	ArgumentList	r		10551031	1					
ANR	10551721	Argument	r		10551031	0					
ANR	10551722	Identifier	r		10551031	0					
ANR	10551723	ExpressionStatement	arg2 = ttfReader__SignedByte ( r )	581:20:18422:18453	10551031	1	True				
ANR	10551724	AssignmentExpression	arg2 = ttfReader__SignedByte ( r )		10551031	0		=			
ANR	10551725	Identifier	arg2		10551031	0					
ANR	10551726	CallExpression	ttfReader__SignedByte ( r )		10551031	1					
ANR	10551727	Callee	ttfReader__SignedByte		10551031	0					
ANR	10551728	Identifier	ttfReader__SignedByte		10551031	0					
ANR	10551729	ArgumentList	r		10551031	1					
ANR	10551730	Argument	r		10551031	0					
ANR	10551731	Identifier	r		10551031	0					
ANR	10551732	ElseStatement	else		10551031	0					
ANR	10551733	CompoundStatement		96:23:3363:3363	10551031	0					
ANR	10551734	ExpressionStatement	arg1 = ttfReader__Byte ( r )	583:20:18533:18558	10551031	0	True				
ANR	10551735	AssignmentExpression	arg1 = ttfReader__Byte ( r )		10551031	0		=			
ANR	10551736	Identifier	arg1		10551031	0					
ANR	10551737	CallExpression	ttfReader__Byte ( r )		10551031	1					
ANR	10551738	Callee	ttfReader__Byte		10551031	0					
ANR	10551739	Identifier	ttfReader__Byte		10551031	0					
ANR	10551740	ArgumentList	r		10551031	1					
ANR	10551741	Argument	r		10551031	0					
ANR	10551742	Identifier	r		10551031	0					
ANR	10551743	ExpressionStatement	arg2 = ttfReader__Byte ( r )	584:20:18580:18605	10551031	1	True				
ANR	10551744	AssignmentExpression	arg2 = ttfReader__Byte ( r )		10551031	0		=			
ANR	10551745	Identifier	arg2		10551031	0					
ANR	10551746	CallExpression	ttfReader__Byte ( r )		10551031	1					
ANR	10551747	Callee	ttfReader__Byte		10551031	0					
ANR	10551748	Identifier	ttfReader__Byte		10551031	0					
ANR	10551749	ArgumentList	r		10551031	1					
ANR	10551750	Argument	r		10551031	0					
ANR	10551751	Identifier	r		10551031	0					
ANR	10551752	ExpressionStatement	m . b = m . c = m . tx = m . ty = 0	587:12:18651:18678	10551031	7	True				
ANR	10551753	AssignmentExpression	m . b = m . c = m . tx = m . ty = 0		10551031	0		=			
ANR	10551754	MemberAccess	m . b		10551031	0					
ANR	10551755	Identifier	m		10551031	0					
ANR	10551756	Identifier	b		10551031	1					
ANR	10551757	AssignmentExpression	m . c = m . tx = m . ty = 0		10551031	1		=			
ANR	10551758	MemberAccess	m . c		10551031	0					
ANR	10551759	Identifier	m		10551031	0					
ANR	10551760	Identifier	c		10551031	1					
ANR	10551761	AssignmentExpression	m . tx = m . ty = 0		10551031	1		=			
ANR	10551762	MemberAccess	m . tx		10551031	0					
ANR	10551763	Identifier	m		10551031	0					
ANR	10551764	Identifier	tx		10551031	1					
ANR	10551765	AssignmentExpression	m . ty = 0		10551031	1		=			
ANR	10551766	MemberAccess	m . ty		10551031	0					
ANR	10551767	Identifier	m		10551031	0					
ANR	10551768	Identifier	ty		10551031	1					
ANR	10551769	PrimaryExpression	0		10551031	1					
ANR	10551770	IfStatement	if ( flags & WE_HAVE_A_SCALE )		10551031	8					
ANR	10551771	Condition	flags & WE_HAVE_A_SCALE	588:16:18696:18718	10551031	0	True				
ANR	10551772	BitAndExpression	flags & WE_HAVE_A_SCALE		10551031	0		&			
ANR	10551773	Identifier	flags		10551031	0					
ANR	10551774	Identifier	WE_HAVE_A_SCALE		10551031	1					
ANR	10551775	ExpressionStatement	m . a = m . d = ( TT_Fixed ) ttfReader__Short ( r ) << 2	589:16:18737:18783	10551031	1	True				
ANR	10551776	AssignmentExpression	m . a = m . d = ( TT_Fixed ) ttfReader__Short ( r ) << 2		10551031	0		=			
ANR	10551777	MemberAccess	m . a		10551031	0					
ANR	10551778	Identifier	m		10551031	0					
ANR	10551779	Identifier	a		10551031	1					
ANR	10551780	AssignmentExpression	m . d = ( TT_Fixed ) ttfReader__Short ( r ) << 2		10551031	1		=			
ANR	10551781	MemberAccess	m . d		10551031	0					
ANR	10551782	Identifier	m		10551031	0					
ANR	10551783	Identifier	d		10551031	1					
ANR	10551784	ShiftExpression	( TT_Fixed ) ttfReader__Short ( r ) << 2		10551031	1		<<			
ANR	10551785	CastExpression	( TT_Fixed ) ttfReader__Short ( r )		10551031	0					
ANR	10551786	CastTarget	TT_Fixed		10551031	0					
ANR	10551787	CallExpression	ttfReader__Short ( r )		10551031	1					
ANR	10551788	Callee	ttfReader__Short		10551031	0					
ANR	10551789	Identifier	ttfReader__Short		10551031	0					
ANR	10551790	ArgumentList	r		10551031	1					
ANR	10551791	Argument	r		10551031	0					
ANR	10551792	Identifier	r		10551031	0					
ANR	10551793	PrimaryExpression	2		10551031	1					
ANR	10551794	ElseStatement	else		10551031	0					
ANR	10551795	IfStatement	if ( flags & WE_HAVE_AN_X_AND_Y_SCALE )		10551031	0					
ANR	10551796	Condition	flags & WE_HAVE_AN_X_AND_Y_SCALE	590:21:18806:18837	10551031	0	True				
ANR	10551797	BitAndExpression	flags & WE_HAVE_AN_X_AND_Y_SCALE		10551031	0		&			
ANR	10551798	Identifier	flags		10551031	0					
ANR	10551799	Identifier	WE_HAVE_AN_X_AND_Y_SCALE		10551031	1					
ANR	10551800	CompoundStatement		104:55:3725:3725	10551031	1					
ANR	10551801	ExpressionStatement	m . a = ( TT_Fixed ) ttfReader__Short ( r ) << 2	591:16:18858:18898	10551031	0	True				
ANR	10551802	AssignmentExpression	m . a = ( TT_Fixed ) ttfReader__Short ( r ) << 2		10551031	0		=			
ANR	10551803	MemberAccess	m . a		10551031	0					
ANR	10551804	Identifier	m		10551031	0					
ANR	10551805	Identifier	a		10551031	1					
ANR	10551806	ShiftExpression	( TT_Fixed ) ttfReader__Short ( r ) << 2		10551031	1		<<			
ANR	10551807	CastExpression	( TT_Fixed ) ttfReader__Short ( r )		10551031	0					
ANR	10551808	CastTarget	TT_Fixed		10551031	0					
ANR	10551809	CallExpression	ttfReader__Short ( r )		10551031	1					
ANR	10551810	Callee	ttfReader__Short		10551031	0					
ANR	10551811	Identifier	ttfReader__Short		10551031	0					
ANR	10551812	ArgumentList	r		10551031	1					
ANR	10551813	Argument	r		10551031	0					
ANR	10551814	Identifier	r		10551031	0					
ANR	10551815	PrimaryExpression	2		10551031	1					
ANR	10551816	ExpressionStatement	m . d = ( TT_Fixed ) ttfReader__Short ( r ) << 2	592:16:18916:18956	10551031	1	True				
ANR	10551817	AssignmentExpression	m . d = ( TT_Fixed ) ttfReader__Short ( r ) << 2		10551031	0		=			
ANR	10551818	MemberAccess	m . d		10551031	0					
ANR	10551819	Identifier	m		10551031	0					
ANR	10551820	Identifier	d		10551031	1					
ANR	10551821	ShiftExpression	( TT_Fixed ) ttfReader__Short ( r ) << 2		10551031	1		<<			
ANR	10551822	CastExpression	( TT_Fixed ) ttfReader__Short ( r )		10551031	0					
ANR	10551823	CastTarget	TT_Fixed		10551031	0					
ANR	10551824	CallExpression	ttfReader__Short ( r )		10551031	1					
ANR	10551825	Callee	ttfReader__Short		10551031	0					
ANR	10551826	Identifier	ttfReader__Short		10551031	0					
ANR	10551827	ArgumentList	r		10551031	1					
ANR	10551828	Argument	r		10551031	0					
ANR	10551829	Identifier	r		10551031	0					
ANR	10551830	PrimaryExpression	2		10551031	1					
ANR	10551831	ElseStatement	else		10551031	0					
ANR	10551832	IfStatement	if ( flags & WE_HAVE_A_TWO_BY_TWO )		10551031	0					
ANR	10551833	Condition	flags & WE_HAVE_A_TWO_BY_TWO	593:23:18981:19008	10551031	0	True				
ANR	10551834	BitAndExpression	flags & WE_HAVE_A_TWO_BY_TWO		10551031	0		&			
ANR	10551835	Identifier	flags		10551031	0					
ANR	10551836	Identifier	WE_HAVE_A_TWO_BY_TWO		10551031	1					
ANR	10551837	CompoundStatement		107:53:3896:3896	10551031	1					
ANR	10551838	ExpressionStatement	m . a = ( TT_Fixed ) ttfReader__Short ( r ) << 2	594:16:19029:19067	10551031	0	True				
ANR	10551839	AssignmentExpression	m . a = ( TT_Fixed ) ttfReader__Short ( r ) << 2		10551031	0		=			
ANR	10551840	MemberAccess	m . a		10551031	0					
ANR	10551841	Identifier	m		10551031	0					
ANR	10551842	Identifier	a		10551031	1					
ANR	10551843	ShiftExpression	( TT_Fixed ) ttfReader__Short ( r ) << 2		10551031	1		<<			
ANR	10551844	CastExpression	( TT_Fixed ) ttfReader__Short ( r )		10551031	0					
ANR	10551845	CastTarget	TT_Fixed		10551031	0					
ANR	10551846	CallExpression	ttfReader__Short ( r )		10551031	1					
ANR	10551847	Callee	ttfReader__Short		10551031	0					
ANR	10551848	Identifier	ttfReader__Short		10551031	0					
ANR	10551849	ArgumentList	r		10551031	1					
ANR	10551850	Argument	r		10551031	0					
ANR	10551851	Identifier	r		10551031	0					
ANR	10551852	PrimaryExpression	2		10551031	1					
ANR	10551853	ExpressionStatement	m . b = ( TT_Fixed ) ttfReader__Short ( r ) << 2	595:16:19085:19123	10551031	1	True				
ANR	10551854	AssignmentExpression	m . b = ( TT_Fixed ) ttfReader__Short ( r ) << 2		10551031	0		=			
ANR	10551855	MemberAccess	m . b		10551031	0					
ANR	10551856	Identifier	m		10551031	0					
ANR	10551857	Identifier	b		10551031	1					
ANR	10551858	ShiftExpression	( TT_Fixed ) ttfReader__Short ( r ) << 2		10551031	1		<<			
ANR	10551859	CastExpression	( TT_Fixed ) ttfReader__Short ( r )		10551031	0					
ANR	10551860	CastTarget	TT_Fixed		10551031	0					
ANR	10551861	CallExpression	ttfReader__Short ( r )		10551031	1					
ANR	10551862	Callee	ttfReader__Short		10551031	0					
ANR	10551863	Identifier	ttfReader__Short		10551031	0					
ANR	10551864	ArgumentList	r		10551031	1					
ANR	10551865	Argument	r		10551031	0					
ANR	10551866	Identifier	r		10551031	0					
ANR	10551867	PrimaryExpression	2		10551031	1					
ANR	10551868	ExpressionStatement	m . c = ( TT_Fixed ) ttfReader__Short ( r ) << 2	596:16:19141:19179	10551031	2	True				
ANR	10551869	AssignmentExpression	m . c = ( TT_Fixed ) ttfReader__Short ( r ) << 2		10551031	0		=			
ANR	10551870	MemberAccess	m . c		10551031	0					
ANR	10551871	Identifier	m		10551031	0					
ANR	10551872	Identifier	c		10551031	1					
ANR	10551873	ShiftExpression	( TT_Fixed ) ttfReader__Short ( r ) << 2		10551031	1		<<			
ANR	10551874	CastExpression	( TT_Fixed ) ttfReader__Short ( r )		10551031	0					
ANR	10551875	CastTarget	TT_Fixed		10551031	0					
ANR	10551876	CallExpression	ttfReader__Short ( r )		10551031	1					
ANR	10551877	Callee	ttfReader__Short		10551031	0					
ANR	10551878	Identifier	ttfReader__Short		10551031	0					
ANR	10551879	ArgumentList	r		10551031	1					
ANR	10551880	Argument	r		10551031	0					
ANR	10551881	Identifier	r		10551031	0					
ANR	10551882	PrimaryExpression	2		10551031	1					
ANR	10551883	ExpressionStatement	m . d = ( TT_Fixed ) ttfReader__Short ( r ) << 2	597:16:19197:19235	10551031	3	True				
ANR	10551884	AssignmentExpression	m . d = ( TT_Fixed ) ttfReader__Short ( r ) << 2		10551031	0		=			
ANR	10551885	MemberAccess	m . d		10551031	0					
ANR	10551886	Identifier	m		10551031	0					
ANR	10551887	Identifier	d		10551031	1					
ANR	10551888	ShiftExpression	( TT_Fixed ) ttfReader__Short ( r ) << 2		10551031	1		<<			
ANR	10551889	CastExpression	( TT_Fixed ) ttfReader__Short ( r )		10551031	0					
ANR	10551890	CastTarget	TT_Fixed		10551031	0					
ANR	10551891	CallExpression	ttfReader__Short ( r )		10551031	1					
ANR	10551892	Callee	ttfReader__Short		10551031	0					
ANR	10551893	Identifier	ttfReader__Short		10551031	0					
ANR	10551894	ArgumentList	r		10551031	1					
ANR	10551895	Argument	r		10551031	0					
ANR	10551896	Identifier	r		10551031	0					
ANR	10551897	PrimaryExpression	2		10551031	1					
ANR	10551898	ElseStatement	else		10551031	0					
ANR	10551899	ExpressionStatement	m . a = m . d = 65536	599:16:19272:19289	10551031	0	True				
ANR	10551900	AssignmentExpression	m . a = m . d = 65536		10551031	0		=			
ANR	10551901	MemberAccess	m . a		10551031	0					
ANR	10551902	Identifier	m		10551031	0					
ANR	10551903	Identifier	a		10551031	1					
ANR	10551904	AssignmentExpression	m . d = 65536		10551031	1		=			
ANR	10551905	MemberAccess	m . d		10551031	0					
ANR	10551906	Identifier	m		10551031	0					
ANR	10551907	Identifier	d		10551031	1					
ANR	10551908	PrimaryExpression	65536		10551031	1					
ANR	10551909	ExpressionStatement	e = & usage [ nUsage ]	600:12:19303:19321	10551031	9	True				
ANR	10551910	AssignmentExpression	e = & usage [ nUsage ]		10551031	0		=			
ANR	10551911	Identifier	e		10551031	0					
ANR	10551912	UnaryOperationExpression	& usage [ nUsage ]		10551031	1					
ANR	10551913	UnaryOperator	&		10551031	0					
ANR	10551914	ArrayIndexing	usage [ nUsage ]		10551031	1					
ANR	10551915	Identifier	usage		10551031	0					
ANR	10551916	Identifier	nUsage		10551031	1					
ANR	10551917	ExpressionStatement	e -> m = m	601:12:19335:19343	10551031	10	True				
ANR	10551918	AssignmentExpression	e -> m = m		10551031	0		=			
ANR	10551919	PtrMemberAccess	e -> m		10551031	0					
ANR	10551920	Identifier	e		10551031	0					
ANR	10551921	Identifier	m		10551031	1					
ANR	10551922	Identifier	m		10551031	1					
ANR	10551923	ExpressionStatement	e -> index = index	602:12:19357:19373	10551031	11	True				
ANR	10551924	AssignmentExpression	e -> index = index		10551031	0		=			
ANR	10551925	PtrMemberAccess	e -> index		10551031	0					
ANR	10551926	Identifier	e		10551031	0					
ANR	10551927	Identifier	index		10551031	1					
ANR	10551928	Identifier	index		10551031	1					
ANR	10551929	ExpressionStatement	e -> arg1 = arg1	603:12:19387:19401	10551031	12	True				
ANR	10551930	AssignmentExpression	e -> arg1 = arg1		10551031	0		=			
ANR	10551931	PtrMemberAccess	e -> arg1		10551031	0					
ANR	10551932	Identifier	e		10551031	0					
ANR	10551933	Identifier	arg1		10551031	1					
ANR	10551934	Identifier	arg1		10551031	1					
ANR	10551935	ExpressionStatement	e -> arg2 = arg2	604:12:19415:19429	10551031	13	True				
ANR	10551936	AssignmentExpression	e -> arg2 = arg2		10551031	0		=			
ANR	10551937	PtrMemberAccess	e -> arg2		10551031	0					
ANR	10551938	Identifier	e		10551031	0					
ANR	10551939	Identifier	arg2		10551031	1					
ANR	10551940	Identifier	arg2		10551031	1					
ANR	10551941	ExpressionStatement	e -> flags = flags	605:12:19443:19459	10551031	14	True				
ANR	10551942	AssignmentExpression	e -> flags = flags		10551031	0		=			
ANR	10551943	PtrMemberAccess	e -> flags		10551031	0					
ANR	10551944	Identifier	e		10551031	0					
ANR	10551945	Identifier	flags		10551031	1					
ANR	10551946	Identifier	flags		10551031	1					
ANR	10551947	ExpressionStatement	nUsage ++	606:12:19473:19481	10551031	15	True				
ANR	10551948	PostIncDecOperationExpression	nUsage ++		10551031	0					
ANR	10551949	Identifier	nUsage		10551031	0					
ANR	10551950	IncDec	++		10551031	1					
ANR	10551951	Condition	flags & MORE_COMPONENTS	607:17:19500:19522	10551031	1	True				
ANR	10551952	BitAndExpression	flags & MORE_COMPONENTS		10551031	0		&			
ANR	10551953	Identifier	flags		10551031	0					
ANR	10551954	Identifier	MORE_COMPONENTS		10551031	1					
ANR	10551955	IfStatement	if ( r -> Error ( r ) )		10551031	8					
ANR	10551956	Condition	r -> Error ( r )	609:12:19617:19627	10551031	0	True				
ANR	10551957	CallExpression	r -> Error ( r )		10551031	0					
ANR	10551958	Callee	r -> Error		10551031	0					
ANR	10551959	PtrMemberAccess	r -> Error		10551031	0					
ANR	10551960	Identifier	r		10551031	0					
ANR	10551961	Identifier	Error		10551031	1					
ANR	10551962	ArgumentList	r		10551031	1					
ANR	10551963	Argument	r		10551031	0					
ANR	10551964	Identifier	r		10551031	0					
ANR	10551965	GotoStatement	goto errex ;	610:12:19642:19652	10551031	1	True				
ANR	10551966	Identifier	errex		10551031	0					
ANR	10551967	ExpressionStatement	nPos = r -> Tell ( r )	611:8:19662:19679	10551031	9	True				
ANR	10551968	AssignmentExpression	nPos = r -> Tell ( r )		10551031	0		=			
ANR	10551969	Identifier	nPos		10551031	0					
ANR	10551970	CallExpression	r -> Tell ( r )		10551031	1					
ANR	10551971	Callee	r -> Tell		10551031	0					
ANR	10551972	PtrMemberAccess	r -> Tell		10551031	0					
ANR	10551973	Identifier	r		10551031	0					
ANR	10551974	Identifier	Tell		10551031	1					
ANR	10551975	ArgumentList	r		10551031	1					
ANR	10551976	Argument	r		10551031	0					
ANR	10551977	Identifier	r		10551031	0					
ANR	10551978	ExpressionStatement	n_ins = ( ( ! r -> Eof ( r ) && ( bHaveInstructions || nPos < nNextGlyphPtr ) ) ? ttfReader__UShort ( r ) : 0 )	612:8:19689:19785	10551031	10	True				
ANR	10551979	AssignmentExpression	n_ins = ( ( ! r -> Eof ( r ) && ( bHaveInstructions || nPos < nNextGlyphPtr ) ) ? ttfReader__UShort ( r ) : 0 )		10551031	0		=			
ANR	10551980	Identifier	n_ins		10551031	0					
ANR	10551981	ConditionalExpression	( ! r -> Eof ( r ) && ( bHaveInstructions || nPos < nNextGlyphPtr ) ) ? ttfReader__UShort ( r ) : 0		10551031	1					
ANR	10551982	Condition	! r -> Eof ( r ) && ( bHaveInstructions || nPos < nNextGlyphPtr )		10551031	0					
ANR	10551983	AndExpression	! r -> Eof ( r ) && ( bHaveInstructions || nPos < nNextGlyphPtr )		10551031	0		&&			
ANR	10551984	UnaryOperationExpression	! r -> Eof ( r )		10551031	0					
ANR	10551985	UnaryOperator	!		10551031	0					
ANR	10551986	CallExpression	r -> Eof ( r )		10551031	1					
ANR	10551987	Callee	r -> Eof		10551031	0					
ANR	10551988	PtrMemberAccess	r -> Eof		10551031	0					
ANR	10551989	Identifier	r		10551031	0					
ANR	10551990	Identifier	Eof		10551031	1					
ANR	10551991	ArgumentList	r		10551031	1					
ANR	10551992	Argument	r		10551031	0					
ANR	10551993	Identifier	r		10551031	0					
ANR	10551994	OrExpression	bHaveInstructions || nPos < nNextGlyphPtr		10551031	1		||			
ANR	10551995	Identifier	bHaveInstructions		10551031	0					
ANR	10551996	RelationalExpression	nPos < nNextGlyphPtr		10551031	1		<			
ANR	10551997	Identifier	nPos		10551031	0					
ANR	10551998	Identifier	nNextGlyphPtr		10551031	1					
ANR	10551999	CallExpression	ttfReader__UShort ( r )		10551031	1					
ANR	10552000	Callee	ttfReader__UShort		10551031	0					
ANR	10552001	Identifier	ttfReader__UShort		10551031	0					
ANR	10552002	ArgumentList	r		10551031	1					
ANR	10552003	Argument	r		10551031	0					
ANR	10552004	Identifier	r		10551031	0					
ANR	10552005	PrimaryExpression	0		10551031	2					
ANR	10552006	ExpressionStatement	nPos = r -> Tell ( r )	613:8:19795:19812	10551031	11	True				
ANR	10552007	AssignmentExpression	nPos = r -> Tell ( r )		10551031	0		=			
ANR	10552008	Identifier	nPos		10551031	0					
ANR	10552009	CallExpression	r -> Tell ( r )		10551031	1					
ANR	10552010	Callee	r -> Tell		10551031	0					
ANR	10552011	PtrMemberAccess	r -> Tell		10551031	0					
ANR	10552012	Identifier	r		10551031	0					
ANR	10552013	Identifier	Tell		10551031	1					
ANR	10552014	ArgumentList	r		10551031	1					
ANR	10552015	Argument	r		10551031	0					
ANR	10552016	Identifier	r		10551031	0					
ANR	10552017	ExpressionStatement	"r -> ReleaseGlyph ( r , glyphIndex )"	614:8:19822:19852	10551031	12	True				
ANR	10552018	CallExpression	"r -> ReleaseGlyph ( r , glyphIndex )"		10551031	0					
ANR	10552019	Callee	r -> ReleaseGlyph		10551031	0					
ANR	10552020	PtrMemberAccess	r -> ReleaseGlyph		10551031	0					
ANR	10552021	Identifier	r		10551031	0					
ANR	10552022	Identifier	ReleaseGlyph		10551031	1					
ANR	10552023	ArgumentList	r		10551031	1					
ANR	10552024	Argument	r		10551031	0					
ANR	10552025	Identifier	r		10551031	0					
ANR	10552026	Argument	glyphIndex		10551031	1					
ANR	10552027	Identifier	glyphIndex		10551031	0					
ANR	10552028	ExpressionStatement	glyph = NULL	615:8:19862:19874	10551031	13	True				
ANR	10552029	AssignmentExpression	glyph = NULL		10551031	0		=			
ANR	10552030	Identifier	glyph		10551031	0					
ANR	10552031	Identifier	NULL		10551031	1					
ANR	10552032	ForStatement	for ( i = 0 ; i < nUsage ; i ++ )		10551031	14					
ANR	10552033	ForInit	i = 0 ;	616:13:19889:19894	10551031	0	True				
ANR	10552034	AssignmentExpression	i = 0		10551031	0		=			
ANR	10552035	Identifier	i		10551031	0					
ANR	10552036	PrimaryExpression	0		10551031	1					
ANR	10552037	Condition	i < nUsage	616:20:19896:19905	10551031	1	True				
ANR	10552038	RelationalExpression	i < nUsage		10551031	0		<			
ANR	10552039	Identifier	i		10551031	0					
ANR	10552040	Identifier	nUsage		10551031	1					
ANR	10552041	PostIncDecOperationExpression	i ++	616:32:19908:19910	10551031	2	True				
ANR	10552042	Identifier	i		10551031	0					
ANR	10552043	IncDec	++		10551031	1					
ANR	10552044	CompoundStatement		135:12:4936:5018	10551031	3					
ANR	10552045	IdentifierDeclStatement	ttfGlyphOutline out ;	617:12:19927:19946	10551031	0	True				
ANR	10552046	IdentifierDecl	out		10551031	0					
ANR	10552047	IdentifierDeclType	ttfGlyphOutline		10551031	0					
ANR	10552048	Identifier	out		10551031	1					
ANR	10552049	IdentifierDeclStatement	ttfSubGlyphUsage * e = & usage [ i ] ;	618:12:19960:19991	10551031	1	True				
ANR	10552050	IdentifierDecl	* e = & usage [ i ]		10551031	0					
ANR	10552051	IdentifierDeclType	ttfSubGlyphUsage *		10551031	0					
ANR	10552052	Identifier	e		10551031	1					
ANR	10552053	AssignmentExpression	* e = & usage [ i ]		10551031	2		=			
ANR	10552054	Identifier	e		10551031	0					
ANR	10552055	UnaryOperationExpression	& usage [ i ]		10551031	1					
ANR	10552056	UnaryOperator	&		10551031	0					
ANR	10552057	ArrayIndexing	usage [ i ]		10551031	1					
ANR	10552058	Identifier	usage		10551031	0					
ANR	10552059	Identifier	i		10551031	1					
ANR	10552060	IdentifierDeclStatement	int j ;	619:12:20005:20010	10551031	2	True				
ANR	10552061	IdentifierDecl	j		10551031	0					
ANR	10552062	IdentifierDeclType	int		10551031	0					
ANR	10552063	Identifier	j		10551031	1					
ANR	10552064	IdentifierDeclStatement	TT_Error code ;	620:12:20024:20037	10551031	3	True				
ANR	10552065	IdentifierDecl	code		10551031	0					
ANR	10552066	IdentifierDeclType	TT_Error		10551031	0					
ANR	10552067	Identifier	code		10551031	1					
ANR	10552068	IdentifierDeclStatement	"int nPointsStored = gOutline -> pointCount , nContoursStored = gOutline -> contourCount ;"	621:12:20051:20133	10551031	4	True				
ANR	10552069	IdentifierDecl	nPointsStored = gOutline -> pointCount		10551031	0					
ANR	10552070	IdentifierDeclType	int		10551031	0					
ANR	10552071	Identifier	nPointsStored		10551031	1					
ANR	10552072	AssignmentExpression	nPointsStored = gOutline -> pointCount		10551031	2		=			
ANR	10552073	Identifier	nPointsStored		10551031	0					
ANR	10552074	PtrMemberAccess	gOutline -> pointCount		10551031	1					
ANR	10552075	Identifier	gOutline		10551031	0					
ANR	10552076	Identifier	pointCount		10551031	1					
ANR	10552077	IdentifierDecl	nContoursStored = gOutline -> contourCount		10551031	1					
ANR	10552078	IdentifierDeclType	int		10551031	0					
ANR	10552079	Identifier	nContoursStored		10551031	1					
ANR	10552080	AssignmentExpression	nContoursStored = gOutline -> contourCount		10551031	2		=			
ANR	10552081	Identifier	nContoursStored		10551031	0					
ANR	10552082	PtrMemberAccess	gOutline -> contourCount		10551031	1					
ANR	10552083	Identifier	gOutline		10551031	0					
ANR	10552084	Identifier	contourCount		10551031	1					
ANR	10552085	ExpressionStatement	out . contourCount = 0	623:12:20148:20168	10551031	5	True				
ANR	10552086	AssignmentExpression	out . contourCount = 0		10551031	0		=			
ANR	10552087	MemberAccess	out . contourCount		10551031	0					
ANR	10552088	Identifier	out		10551031	0					
ANR	10552089	Identifier	contourCount		10551031	1					
ANR	10552090	PrimaryExpression	0		10551031	1					
ANR	10552091	ExpressionStatement	out . pointCount = 0	624:12:20182:20200	10551031	6	True				
ANR	10552092	AssignmentExpression	out . pointCount = 0		10551031	0		=			
ANR	10552093	MemberAccess	out . pointCount		10551031	0					
ANR	10552094	Identifier	out		10551031	0					
ANR	10552095	Identifier	pointCount		10551031	1					
ANR	10552096	PrimaryExpression	0		10551031	1					
ANR	10552097	ExpressionStatement	out . bCompound = FALSE	625:12:20214:20235	10551031	7	True				
ANR	10552098	AssignmentExpression	out . bCompound = FALSE		10551031	0		=			
ANR	10552099	MemberAccess	out . bCompound		10551031	0					
ANR	10552100	Identifier	out		10551031	0					
ANR	10552101	Identifier	bCompound		10551031	1					
ANR	10552102	Identifier	FALSE		10551031	1					
ANR	10552103	ExpressionStatement	pts -> org_x += nPointsStored	626:12:20249:20276	10551031	8	True				
ANR	10552104	AssignmentExpression	pts -> org_x += nPointsStored		10551031	0		+=			
ANR	10552105	PtrMemberAccess	pts -> org_x		10551031	0					
ANR	10552106	Identifier	pts		10551031	0					
ANR	10552107	Identifier	org_x		10551031	1					
ANR	10552108	Identifier	nPointsStored		10551031	1					
ANR	10552109	ExpressionStatement	pts -> org_y += nPointsStored	627:12:20290:20317	10551031	9	True				
ANR	10552110	AssignmentExpression	pts -> org_y += nPointsStored		10551031	0		+=			
ANR	10552111	PtrMemberAccess	pts -> org_y		10551031	0					
ANR	10552112	Identifier	pts		10551031	0					
ANR	10552113	Identifier	org_y		10551031	1					
ANR	10552114	Identifier	nPointsStored		10551031	1					
ANR	10552115	ExpressionStatement	pts -> cur_x += nPointsStored	628:12:20331:20358	10551031	10	True				
ANR	10552116	AssignmentExpression	pts -> cur_x += nPointsStored		10551031	0		+=			
ANR	10552117	PtrMemberAccess	pts -> cur_x		10551031	0					
ANR	10552118	Identifier	pts		10551031	0					
ANR	10552119	Identifier	cur_x		10551031	1					
ANR	10552120	Identifier	nPointsStored		10551031	1					
ANR	10552121	ExpressionStatement	pts -> cur_y += nPointsStored	629:12:20372:20399	10551031	11	True				
ANR	10552122	AssignmentExpression	pts -> cur_y += nPointsStored		10551031	0		+=			
ANR	10552123	PtrMemberAccess	pts -> cur_y		10551031	0					
ANR	10552124	Identifier	pts		10551031	0					
ANR	10552125	Identifier	cur_y		10551031	1					
ANR	10552126	Identifier	nPointsStored		10551031	1					
ANR	10552127	ExpressionStatement	pts -> touch += nPointsStored	630:12:20413:20440	10551031	12	True				
ANR	10552128	AssignmentExpression	pts -> touch += nPointsStored		10551031	0		+=			
ANR	10552129	PtrMemberAccess	pts -> touch		10551031	0					
ANR	10552130	Identifier	pts		10551031	0					
ANR	10552131	Identifier	touch		10551031	1					
ANR	10552132	Identifier	nPointsStored		10551031	1					
ANR	10552133	ExpressionStatement	pts -> contours += nContoursStored	631:12:20454:20486	10551031	13	True				
ANR	10552134	AssignmentExpression	pts -> contours += nContoursStored		10551031	0		+=			
ANR	10552135	PtrMemberAccess	pts -> contours		10551031	0					
ANR	10552136	Identifier	pts		10551031	0					
ANR	10552137	Identifier	contours		10551031	1					
ANR	10552138	Identifier	nContoursStored		10551031	1					
ANR	10552139	ExpressionStatement	tti -> usage_top += nUsage	632:12:20500:20524	10551031	14	True				
ANR	10552140	AssignmentExpression	tti -> usage_top += nUsage		10551031	0		+=			
ANR	10552141	PtrMemberAccess	tti -> usage_top		10551031	0					
ANR	10552142	Identifier	tti		10551031	0					
ANR	10552143	Identifier	usage_top		10551031	1					
ANR	10552144	Identifier	nUsage		10551031	1					
ANR	10552145	ExpressionStatement	"code = ttfOutliner__BuildGlyphOutlineAux ( self , e -> index , m_orig , & out )"	633:12:20538:20608	10551031	15	True				
ANR	10552146	AssignmentExpression	"code = ttfOutliner__BuildGlyphOutlineAux ( self , e -> index , m_orig , & out )"		10551031	0		=			
ANR	10552147	Identifier	code		10551031	0					
ANR	10552148	CallExpression	"ttfOutliner__BuildGlyphOutlineAux ( self , e -> index , m_orig , & out )"		10551031	1					
ANR	10552149	Callee	ttfOutliner__BuildGlyphOutlineAux		10551031	0					
ANR	10552150	Identifier	ttfOutliner__BuildGlyphOutlineAux		10551031	0					
ANR	10552151	ArgumentList	self		10551031	1					
ANR	10552152	Argument	self		10551031	0					
ANR	10552153	Identifier	self		10551031	0					
ANR	10552154	Argument	e -> index		10551031	1					
ANR	10552155	PtrMemberAccess	e -> index		10551031	0					
ANR	10552156	Identifier	e		10551031	0					
ANR	10552157	Identifier	index		10551031	1					
ANR	10552158	Argument	m_orig		10551031	2					
ANR	10552159	Identifier	m_orig		10551031	0					
ANR	10552160	Argument	& out		10551031	3					
ANR	10552161	UnaryOperationExpression	& out		10551031	0					
ANR	10552162	UnaryOperator	&		10551031	0					
ANR	10552163	Identifier	out		10551031	1					
ANR	10552164	ExpressionStatement	pts -> org_x -= nPointsStored	634:12:20622:20649	10551031	16	True				
ANR	10552165	AssignmentExpression	pts -> org_x -= nPointsStored		10551031	0		-=			
ANR	10552166	PtrMemberAccess	pts -> org_x		10551031	0					
ANR	10552167	Identifier	pts		10551031	0					
ANR	10552168	Identifier	org_x		10551031	1					
ANR	10552169	Identifier	nPointsStored		10551031	1					
ANR	10552170	ExpressionStatement	pts -> org_y -= nPointsStored	635:12:20663:20690	10551031	17	True				
ANR	10552171	AssignmentExpression	pts -> org_y -= nPointsStored		10551031	0		-=			
ANR	10552172	PtrMemberAccess	pts -> org_y		10551031	0					
ANR	10552173	Identifier	pts		10551031	0					
ANR	10552174	Identifier	org_y		10551031	1					
ANR	10552175	Identifier	nPointsStored		10551031	1					
ANR	10552176	ExpressionStatement	pts -> cur_x -= nPointsStored	636:12:20704:20731	10551031	18	True				
ANR	10552177	AssignmentExpression	pts -> cur_x -= nPointsStored		10551031	0		-=			
ANR	10552178	PtrMemberAccess	pts -> cur_x		10551031	0					
ANR	10552179	Identifier	pts		10551031	0					
ANR	10552180	Identifier	cur_x		10551031	1					
ANR	10552181	Identifier	nPointsStored		10551031	1					
ANR	10552182	ExpressionStatement	pts -> cur_y -= nPointsStored	637:12:20745:20772	10551031	19	True				
ANR	10552183	AssignmentExpression	pts -> cur_y -= nPointsStored		10551031	0		-=			
ANR	10552184	PtrMemberAccess	pts -> cur_y		10551031	0					
ANR	10552185	Identifier	pts		10551031	0					
ANR	10552186	Identifier	cur_y		10551031	1					
ANR	10552187	Identifier	nPointsStored		10551031	1					
ANR	10552188	ExpressionStatement	pts -> touch -= nPointsStored	638:12:20786:20813	10551031	20	True				
ANR	10552189	AssignmentExpression	pts -> touch -= nPointsStored		10551031	0		-=			
ANR	10552190	PtrMemberAccess	pts -> touch		10551031	0					
ANR	10552191	Identifier	pts		10551031	0					
ANR	10552192	Identifier	touch		10551031	1					
ANR	10552193	Identifier	nPointsStored		10551031	1					
ANR	10552194	ExpressionStatement	tti -> usage_top -= nUsage	639:12:20827:20851	10551031	21	True				
ANR	10552195	AssignmentExpression	tti -> usage_top -= nUsage		10551031	0		-=			
ANR	10552196	PtrMemberAccess	tti -> usage_top		10551031	0					
ANR	10552197	Identifier	tti		10551031	0					
ANR	10552198	Identifier	usage_top		10551031	1					
ANR	10552199	Identifier	nUsage		10551031	1					
ANR	10552200	ExpressionStatement	pts -> contours -= nContoursStored	640:12:20865:20897	10551031	22	True				
ANR	10552201	AssignmentExpression	pts -> contours -= nContoursStored		10551031	0		-=			
ANR	10552202	PtrMemberAccess	pts -> contours		10551031	0					
ANR	10552203	Identifier	pts		10551031	0					
ANR	10552204	Identifier	contours		10551031	1					
ANR	10552205	Identifier	nContoursStored		10551031	1					
ANR	10552206	IfStatement	if ( code == fPatented )		10551031	23					
ANR	10552207	Condition	code == fPatented	641:16:20915:20931	10551031	0	True				
ANR	10552208	EqualityExpression	code == fPatented		10551031	0		==			
ANR	10552209	Identifier	code		10551031	0					
ANR	10552210	Identifier	fPatented		10551031	1					
ANR	10552211	ExpressionStatement	error = code	642:16:20950:20962	10551031	1	True				
ANR	10552212	AssignmentExpression	error = code		10551031	0		=			
ANR	10552213	Identifier	error		10551031	0					
ANR	10552214	Identifier	code		10551031	1					
ANR	10552215	ElseStatement	else		10551031	0					
ANR	10552216	IfStatement	if ( code != fNoError )		10551031	0					
ANR	10552217	Condition	code != fNoError	643:21:20985:21000	10551031	0	True				
ANR	10552218	EqualityExpression	code != fNoError		10551031	0		!=			
ANR	10552219	Identifier	code		10551031	0					
ANR	10552220	Identifier	fNoError		10551031	1					
ANR	10552221	CompoundStatement		157:39:5888:5888	10551031	1					
ANR	10552222	ExpressionStatement	error = code	644:16:21021:21033	10551031	0	True				
ANR	10552223	AssignmentExpression	error = code		10551031	0		=			
ANR	10552224	Identifier	error		10551031	0					
ANR	10552225	Identifier	code		10551031	1					
ANR	10552226	GotoStatement	goto ex ;	645:16:21051:21058	10551031	1	True				
ANR	10552227	Identifier	ex		10551031	0					
ANR	10552228	IfStatement	if ( flags & ARGS_ARE_XY_VALUES )		10551031	24					
ANR	10552229	Condition	flags & ARGS_ARE_XY_VALUES	647:16:21090:21115	10551031	0	True				
ANR	10552230	BitAndExpression	flags & ARGS_ARE_XY_VALUES		10551031	0		&			
ANR	10552231	Identifier	flags		10551031	0					
ANR	10552232	Identifier	ARGS_ARE_XY_VALUES		10551031	1					
ANR	10552233	CompoundStatement		161:44:6003:6003	10551031	1					
ANR	10552234	ExpressionStatement	"e -> m . tx = Scale_X ( & exec -> metrics , e -> arg1 ) << 10"	648:16:21136:21186	10551031	0	True				
ANR	10552235	AssignmentExpression	"e -> m . tx = Scale_X ( & exec -> metrics , e -> arg1 ) << 10"		10551031	0		=			
ANR	10552236	MemberAccess	e -> m . tx		10551031	0					
ANR	10552237	PtrMemberAccess	e -> m		10551031	0					
ANR	10552238	Identifier	e		10551031	0					
ANR	10552239	Identifier	m		10551031	1					
ANR	10552240	Identifier	tx		10551031	1					
ANR	10552241	ShiftExpression	"Scale_X ( & exec -> metrics , e -> arg1 ) << 10"		10551031	1		<<			
ANR	10552242	CallExpression	"Scale_X ( & exec -> metrics , e -> arg1 )"		10551031	0					
ANR	10552243	Callee	Scale_X		10551031	0					
ANR	10552244	Identifier	Scale_X		10551031	0					
ANR	10552245	ArgumentList	& exec -> metrics		10551031	1					
ANR	10552246	Argument	& exec -> metrics		10551031	0					
ANR	10552247	UnaryOperationExpression	& exec -> metrics		10551031	0					
ANR	10552248	UnaryOperator	&		10551031	0					
ANR	10552249	PtrMemberAccess	exec -> metrics		10551031	1					
ANR	10552250	Identifier	exec		10551031	0					
ANR	10552251	Identifier	metrics		10551031	1					
ANR	10552252	Argument	e -> arg1		10551031	1					
ANR	10552253	PtrMemberAccess	e -> arg1		10551031	0					
ANR	10552254	Identifier	e		10551031	0					
ANR	10552255	Identifier	arg1		10551031	1					
ANR	10552256	PrimaryExpression	10		10551031	1					
ANR	10552257	ExpressionStatement	"e -> m . ty = Scale_Y ( & exec -> metrics , e -> arg2 ) << 10"	649:16:21204:21254	10551031	1	True				
ANR	10552258	AssignmentExpression	"e -> m . ty = Scale_Y ( & exec -> metrics , e -> arg2 ) << 10"		10551031	0		=			
ANR	10552259	MemberAccess	e -> m . ty		10551031	0					
ANR	10552260	PtrMemberAccess	e -> m		10551031	0					
ANR	10552261	Identifier	e		10551031	0					
ANR	10552262	Identifier	m		10551031	1					
ANR	10552263	Identifier	ty		10551031	1					
ANR	10552264	ShiftExpression	"Scale_Y ( & exec -> metrics , e -> arg2 ) << 10"		10551031	1		<<			
ANR	10552265	CallExpression	"Scale_Y ( & exec -> metrics , e -> arg2 )"		10551031	0					
ANR	10552266	Callee	Scale_Y		10551031	0					
ANR	10552267	Identifier	Scale_Y		10551031	0					
ANR	10552268	ArgumentList	& exec -> metrics		10551031	1					
ANR	10552269	Argument	& exec -> metrics		10551031	0					
ANR	10552270	UnaryOperationExpression	& exec -> metrics		10551031	0					
ANR	10552271	UnaryOperator	&		10551031	0					
ANR	10552272	PtrMemberAccess	exec -> metrics		10551031	1					
ANR	10552273	Identifier	exec		10551031	0					
ANR	10552274	Identifier	metrics		10551031	1					
ANR	10552275	Argument	e -> arg2		10551031	1					
ANR	10552276	PtrMemberAccess	e -> arg2		10551031	0					
ANR	10552277	Identifier	e		10551031	0					
ANR	10552278	Identifier	arg2		10551031	1					
ANR	10552279	PrimaryExpression	10		10551031	1					
ANR	10552280	ElseStatement	else		10551031	0					
ANR	10552281	CompoundStatement		164:19:6160:6160	10551031	0					
ANR	10552282	ExpressionStatement	e -> m . tx = ( pts -> org_x [ e -> arg1 ] - pts -> org_x [ gOutline -> pointCount + e -> arg2 ] ) << 10	651:16:21293:21375	10551031	0	True				
ANR	10552283	AssignmentExpression	e -> m . tx = ( pts -> org_x [ e -> arg1 ] - pts -> org_x [ gOutline -> pointCount + e -> arg2 ] ) << 10		10551031	0		=			
ANR	10552284	MemberAccess	e -> m . tx		10551031	0					
ANR	10552285	PtrMemberAccess	e -> m		10551031	0					
ANR	10552286	Identifier	e		10551031	0					
ANR	10552287	Identifier	m		10551031	1					
ANR	10552288	Identifier	tx		10551031	1					
ANR	10552289	ShiftExpression	( pts -> org_x [ e -> arg1 ] - pts -> org_x [ gOutline -> pointCount + e -> arg2 ] ) << 10		10551031	1		<<			
ANR	10552290	AdditiveExpression	pts -> org_x [ e -> arg1 ] - pts -> org_x [ gOutline -> pointCount + e -> arg2 ]		10551031	0		-			
ANR	10552291	ArrayIndexing	pts -> org_x [ e -> arg1 ]		10551031	0					
ANR	10552292	PtrMemberAccess	pts -> org_x		10551031	0					
ANR	10552293	Identifier	pts		10551031	0					
ANR	10552294	Identifier	org_x		10551031	1					
ANR	10552295	PtrMemberAccess	e -> arg1		10551031	1					
ANR	10552296	Identifier	e		10551031	0					
ANR	10552297	Identifier	arg1		10551031	1					
ANR	10552298	ArrayIndexing	pts -> org_x [ gOutline -> pointCount + e -> arg2 ]		10551031	1					
ANR	10552299	PtrMemberAccess	pts -> org_x		10551031	0					
ANR	10552300	Identifier	pts		10551031	0					
ANR	10552301	Identifier	org_x		10551031	1					
ANR	10552302	AdditiveExpression	gOutline -> pointCount + e -> arg2		10551031	1		+			
ANR	10552303	PtrMemberAccess	gOutline -> pointCount		10551031	0					
ANR	10552304	Identifier	gOutline		10551031	0					
ANR	10552305	Identifier	pointCount		10551031	1					
ANR	10552306	PtrMemberAccess	e -> arg2		10551031	1					
ANR	10552307	Identifier	e		10551031	0					
ANR	10552308	Identifier	arg2		10551031	1					
ANR	10552309	PrimaryExpression	10		10551031	1					
ANR	10552310	ExpressionStatement	e -> m . ty = ( pts -> org_y [ e -> arg1 ] - pts -> org_y [ gOutline -> pointCount + e -> arg2 ] ) << 10	652:16:21393:21475	10551031	1	True				
ANR	10552311	AssignmentExpression	e -> m . ty = ( pts -> org_y [ e -> arg1 ] - pts -> org_y [ gOutline -> pointCount + e -> arg2 ] ) << 10		10551031	0		=			
ANR	10552312	MemberAccess	e -> m . ty		10551031	0					
ANR	10552313	PtrMemberAccess	e -> m		10551031	0					
ANR	10552314	Identifier	e		10551031	0					
ANR	10552315	Identifier	m		10551031	1					
ANR	10552316	Identifier	ty		10551031	1					
ANR	10552317	ShiftExpression	( pts -> org_y [ e -> arg1 ] - pts -> org_y [ gOutline -> pointCount + e -> arg2 ] ) << 10		10551031	1		<<			
ANR	10552318	AdditiveExpression	pts -> org_y [ e -> arg1 ] - pts -> org_y [ gOutline -> pointCount + e -> arg2 ]		10551031	0		-			
ANR	10552319	ArrayIndexing	pts -> org_y [ e -> arg1 ]		10551031	0					
ANR	10552320	PtrMemberAccess	pts -> org_y		10551031	0					
ANR	10552321	Identifier	pts		10551031	0					
ANR	10552322	Identifier	org_y		10551031	1					
ANR	10552323	PtrMemberAccess	e -> arg1		10551031	1					
ANR	10552324	Identifier	e		10551031	0					
ANR	10552325	Identifier	arg1		10551031	1					
ANR	10552326	ArrayIndexing	pts -> org_y [ gOutline -> pointCount + e -> arg2 ]		10551031	1					
ANR	10552327	PtrMemberAccess	pts -> org_y		10551031	0					
ANR	10552328	Identifier	pts		10551031	0					
ANR	10552329	Identifier	org_y		10551031	1					
ANR	10552330	AdditiveExpression	gOutline -> pointCount + e -> arg2		10551031	1		+			
ANR	10552331	PtrMemberAccess	gOutline -> pointCount		10551031	0					
ANR	10552332	Identifier	gOutline		10551031	0					
ANR	10552333	Identifier	pointCount		10551031	1					
ANR	10552334	PtrMemberAccess	e -> arg2		10551031	1					
ANR	10552335	Identifier	e		10551031	0					
ANR	10552336	Identifier	arg2		10551031	1					
ANR	10552337	PrimaryExpression	10		10551031	1					
ANR	10552338	ExpressionStatement	"MoveGlyphOutline ( pts , nPointsStored , & out , & e -> m )"	654:12:21503:21552	10551031	25	True				
ANR	10552339	CallExpression	"MoveGlyphOutline ( pts , nPointsStored , & out , & e -> m )"		10551031	0					
ANR	10552340	Callee	MoveGlyphOutline		10551031	0					
ANR	10552341	Identifier	MoveGlyphOutline		10551031	0					
ANR	10552342	ArgumentList	pts		10551031	1					
ANR	10552343	Argument	pts		10551031	0					
ANR	10552344	Identifier	pts		10551031	0					
ANR	10552345	Argument	nPointsStored		10551031	1					
ANR	10552346	Identifier	nPointsStored		10551031	0					
ANR	10552347	Argument	& out		10551031	2					
ANR	10552348	UnaryOperationExpression	& out		10551031	0					
ANR	10552349	UnaryOperator	&		10551031	0					
ANR	10552350	Identifier	out		10551031	1					
ANR	10552351	Argument	& e -> m		10551031	3					
ANR	10552352	UnaryOperationExpression	& e -> m		10551031	0					
ANR	10552353	UnaryOperator	&		10551031	0					
ANR	10552354	PtrMemberAccess	e -> m		10551031	1					
ANR	10552355	Identifier	e		10551031	0					
ANR	10552356	Identifier	m		10551031	1					
ANR	10552357	ForStatement	for ( j = nContoursStored ; j < out . contourCount + nContoursStored ; j ++ )		10551031	26					
ANR	10552358	ForInit	j = nContoursStored ;	655:17:21571:21590	10551031	0	True				
ANR	10552359	AssignmentExpression	j = nContoursStored		10551031	0		=			
ANR	10552360	Identifier	j		10551031	0					
ANR	10552361	Identifier	nContoursStored		10551031	1					
ANR	10552362	Condition	j < out . contourCount + nContoursStored	655:38:21592:21629	10551031	1	True				
ANR	10552363	RelationalExpression	j < out . contourCount + nContoursStored		10551031	0		<			
ANR	10552364	Identifier	j		10551031	0					
ANR	10552365	AdditiveExpression	out . contourCount + nContoursStored		10551031	1		+			
ANR	10552366	MemberAccess	out . contourCount		10551031	0					
ANR	10552367	Identifier	out		10551031	0					
ANR	10552368	Identifier	contourCount		10551031	1					
ANR	10552369	Identifier	nContoursStored		10551031	1					
ANR	10552370	PostIncDecOperationExpression	j ++	655:78:21632:21634	10551031	2	True				
ANR	10552371	Identifier	j		10551031	0					
ANR	10552372	IncDec	++		10551031	1					
ANR	10552373	ExpressionStatement	pts -> contours [ j ] += nPointsStored	656:16:21653:21686	10551031	3	True				
ANR	10552374	AssignmentExpression	pts -> contours [ j ] += nPointsStored		10551031	0		+=			
ANR	10552375	ArrayIndexing	pts -> contours [ j ]		10551031	0					
ANR	10552376	PtrMemberAccess	pts -> contours		10551031	0					
ANR	10552377	Identifier	pts		10551031	0					
ANR	10552378	Identifier	contours		10551031	1					
ANR	10552379	Identifier	j		10551031	1					
ANR	10552380	Identifier	nPointsStored		10551031	1					
ANR	10552381	ExpressionStatement	gOutline -> contourCount += out . contourCount	657:12:21700:21742	10551031	27	True				
ANR	10552382	AssignmentExpression	gOutline -> contourCount += out . contourCount		10551031	0		+=			
ANR	10552383	PtrMemberAccess	gOutline -> contourCount		10551031	0					
ANR	10552384	Identifier	gOutline		10551031	0					
ANR	10552385	Identifier	contourCount		10551031	1					
ANR	10552386	MemberAccess	out . contourCount		10551031	1					
ANR	10552387	Identifier	out		10551031	0					
ANR	10552388	Identifier	contourCount		10551031	1					
ANR	10552389	ExpressionStatement	gOutline -> pointCount += out . pointCount	658:12:21756:21794	10551031	28	True				
ANR	10552390	AssignmentExpression	gOutline -> pointCount += out . pointCount		10551031	0		+=			
ANR	10552391	PtrMemberAccess	gOutline -> pointCount		10551031	0					
ANR	10552392	Identifier	gOutline		10551031	0					
ANR	10552393	Identifier	pointCount		10551031	1					
ANR	10552394	MemberAccess	out . pointCount		10551031	1					
ANR	10552395	Identifier	out		10551031	0					
ANR	10552396	Identifier	pointCount		10551031	1					
ANR	10552397	IfStatement	if ( e -> flags & USE_MY_METRICS )		10551031	29					
ANR	10552398	Condition	e -> flags & USE_MY_METRICS	659:15:21811:21835	10551031	0	True				
ANR	10552399	BitAndExpression	e -> flags & USE_MY_METRICS		10551031	0		&			
ANR	10552400	PtrMemberAccess	e -> flags		10551031	0					
ANR	10552401	Identifier	e		10551031	0					
ANR	10552402	Identifier	flags		10551031	1					
ANR	10552403	Identifier	USE_MY_METRICS		10551031	1					
ANR	10552404	CompoundStatement		173:42:6723:6723	10551031	1					
ANR	10552405	ExpressionStatement	gOutline -> advance . x = out . advance . x	660:16:21856:21891	10551031	0	True				
ANR	10552406	AssignmentExpression	gOutline -> advance . x = out . advance . x		10551031	0		=			
ANR	10552407	MemberAccess	gOutline -> advance . x		10551031	0					
ANR	10552408	PtrMemberAccess	gOutline -> advance		10551031	0					
ANR	10552409	Identifier	gOutline		10551031	0					
ANR	10552410	Identifier	advance		10551031	1					
ANR	10552411	Identifier	x		10551031	1					
ANR	10552412	MemberAccess	out . advance . x		10551031	1					
ANR	10552413	MemberAccess	out . advance		10551031	0					
ANR	10552414	Identifier	out		10551031	0					
ANR	10552415	Identifier	advance		10551031	1					
ANR	10552416	Identifier	x		10551031	1					
ANR	10552417	ExpressionStatement	gOutline -> sideBearing = out . sideBearing	661:16:21909:21948	10551031	1	True				
ANR	10552418	AssignmentExpression	gOutline -> sideBearing = out . sideBearing		10551031	0		=			
ANR	10552419	PtrMemberAccess	gOutline -> sideBearing		10551031	0					
ANR	10552420	Identifier	gOutline		10551031	0					
ANR	10552421	Identifier	sideBearing		10551031	1					
ANR	10552422	MemberAccess	out . sideBearing		10551031	1					
ANR	10552423	Identifier	out		10551031	0					
ANR	10552424	Identifier	sideBearing		10551031	1					
ANR	10552425	IfStatement	if ( execute_bytecode && ! skip_instructions && n_ins && ! ( pFont -> inst -> GS . instruct_control & 1 ) )		10551031	15					
ANR	10552426	Condition	execute_bytecode && ! skip_instructions && n_ins && ! ( pFont -> inst -> GS . instruct_control & 1 )	664:12:21986:22091	10551031	0	True				
ANR	10552427	AndExpression	execute_bytecode && ! skip_instructions && n_ins && ! ( pFont -> inst -> GS . instruct_control & 1 )		10551031	0		&&			
ANR	10552428	Identifier	execute_bytecode		10551031	0					
ANR	10552429	AndExpression	! skip_instructions && n_ins && ! ( pFont -> inst -> GS . instruct_control & 1 )		10551031	1		&&			
ANR	10552430	UnaryOperationExpression	! skip_instructions		10551031	0					
ANR	10552431	UnaryOperator	!		10551031	0					
ANR	10552432	Identifier	skip_instructions		10551031	1					
ANR	10552433	AndExpression	n_ins && ! ( pFont -> inst -> GS . instruct_control & 1 )		10551031	1		&&			
ANR	10552434	Identifier	n_ins		10551031	0					
ANR	10552435	UnaryOperationExpression	! ( pFont -> inst -> GS . instruct_control & 1 )		10551031	1					
ANR	10552436	UnaryOperator	!		10551031	0					
ANR	10552437	BitAndExpression	pFont -> inst -> GS . instruct_control & 1		10551031	1		&			
ANR	10552438	MemberAccess	pFont -> inst -> GS . instruct_control		10551031	0					
ANR	10552439	PtrMemberAccess	pFont -> inst -> GS		10551031	0					
ANR	10552440	PtrMemberAccess	pFont -> inst		10551031	0					
ANR	10552441	Identifier	pFont		10551031	0					
ANR	10552442	Identifier	inst		10551031	1					
ANR	10552443	Identifier	GS		10551031	1					
ANR	10552444	Identifier	instruct_control		10551031	1					
ANR	10552445	PrimaryExpression	1		10551031	1					
ANR	10552446	CompoundStatement		180:12:6993:7006	10551031	1					
ANR	10552447	IdentifierDeclStatement	TT_Error code ;	666:12:22108:22121	10551031	0	True				
ANR	10552448	IdentifierDecl	code		10551031	0					
ANR	10552449	IdentifierDeclType	TT_Error		10551031	0					
ANR	10552450	Identifier	code		10551031	1					
ANR	10552451	ExpressionStatement	"r -> LoadGlyph ( r , glyphIndex , & glyph , & glyph_size )"	668:12:22136:22184	10551031	1	True				
ANR	10552452	CallExpression	"r -> LoadGlyph ( r , glyphIndex , & glyph , & glyph_size )"		10551031	0					
ANR	10552453	Callee	r -> LoadGlyph		10551031	0					
ANR	10552454	PtrMemberAccess	r -> LoadGlyph		10551031	0					
ANR	10552455	Identifier	r		10551031	0					
ANR	10552456	Identifier	LoadGlyph		10551031	1					
ANR	10552457	ArgumentList	r		10551031	1					
ANR	10552458	Argument	r		10551031	0					
ANR	10552459	Identifier	r		10551031	0					
ANR	10552460	Argument	glyphIndex		10551031	1					
ANR	10552461	Identifier	glyphIndex		10551031	0					
ANR	10552462	Argument	& glyph		10551031	2					
ANR	10552463	UnaryOperationExpression	& glyph		10551031	0					
ANR	10552464	UnaryOperator	&		10551031	0					
ANR	10552465	Identifier	glyph		10551031	1					
ANR	10552466	Argument	& glyph_size		10551031	3					
ANR	10552467	UnaryOperationExpression	& glyph_size		10551031	0					
ANR	10552468	UnaryOperator	&		10551031	0					
ANR	10552469	Identifier	glyph_size		10551031	1					
ANR	10552470	IfStatement	if ( r -> Error ( r ) )		10551031	2					
ANR	10552471	Condition	r -> Error ( r )	669:16:22202:22212	10551031	0	True				
ANR	10552472	CallExpression	r -> Error ( r )		10551031	0					
ANR	10552473	Callee	r -> Error		10551031	0					
ANR	10552474	PtrMemberAccess	r -> Error		10551031	0					
ANR	10552475	Identifier	r		10551031	0					
ANR	10552476	Identifier	Error		10551031	1					
ANR	10552477	ArgumentList	r		10551031	1					
ANR	10552478	Argument	r		10551031	0					
ANR	10552479	Identifier	r		10551031	0					
ANR	10552480	GotoStatement	goto errex ;	670:16:22231:22241	10551031	1	True				
ANR	10552481	Identifier	errex		10551031	0					
ANR	10552482	IfStatement	if ( nPos + n_ins > glyph_size )		10551031	3					
ANR	10552483	Condition	nPos + n_ins > glyph_size	671:16:22259:22283	10551031	0	True				
ANR	10552484	RelationalExpression	nPos + n_ins > glyph_size		10551031	0		>			
ANR	10552485	AdditiveExpression	nPos + n_ins		10551031	0		+			
ANR	10552486	Identifier	nPos		10551031	0					
ANR	10552487	Identifier	n_ins		10551031	1					
ANR	10552488	Identifier	glyph_size		10551031	1					
ANR	10552489	GotoStatement	goto errex ;	672:16:22302:22312	10551031	1	True				
ANR	10552490	Identifier	errex		10551031	0					
ANR	10552491	ExpressionStatement	"code = Set_CodeRange ( exec , TT_CodeRange_Glyph , ( byte * ) glyph + nPos , n_ins )"	673:12:22326:22401	10551031	4	True				
ANR	10552492	AssignmentExpression	"code = Set_CodeRange ( exec , TT_CodeRange_Glyph , ( byte * ) glyph + nPos , n_ins )"		10551031	0		=			
ANR	10552493	Identifier	code		10551031	0					
ANR	10552494	CallExpression	"Set_CodeRange ( exec , TT_CodeRange_Glyph , ( byte * ) glyph + nPos , n_ins )"		10551031	1					
ANR	10552495	Callee	Set_CodeRange		10551031	0					
ANR	10552496	Identifier	Set_CodeRange		10551031	0					
ANR	10552497	ArgumentList	exec		10551031	1					
ANR	10552498	Argument	exec		10551031	0					
ANR	10552499	Identifier	exec		10551031	0					
ANR	10552500	Argument	TT_CodeRange_Glyph		10551031	1					
ANR	10552501	Identifier	TT_CodeRange_Glyph		10551031	0					
ANR	10552502	Argument	( byte * ) glyph + nPos		10551031	2					
ANR	10552503	AdditiveExpression	( byte * ) glyph + nPos		10551031	0		+			
ANR	10552504	CastExpression	( byte * ) glyph		10551031	0					
ANR	10552505	CastTarget	byte *		10551031	0					
ANR	10552506	Identifier	glyph		10551031	1					
ANR	10552507	Identifier	nPos		10551031	1					
ANR	10552508	Argument	n_ins		10551031	3					
ANR	10552509	Identifier	n_ins		10551031	0					
ANR	10552510	IfStatement	if ( ! code )		10551031	5					
ANR	10552511	Condition	! code	674:16:22419:22423	10551031	0	True				
ANR	10552512	UnaryOperationExpression	! code		10551031	0					
ANR	10552513	UnaryOperator	!		10551031	0					
ANR	10552514	Identifier	code		10551031	1					
ANR	10552515	CompoundStatement		190:16:7352:7361	10551031	1					
ANR	10552516	IdentifierDeclStatement	int k ;	675:16:22444:22449	10551031	0	True				
ANR	10552517	IdentifierDecl	k		10551031	0					
ANR	10552518	IdentifierDeclType	int		10551031	0					
ANR	10552519	Identifier	k		10551031	1					
ANR	10552520	IdentifierDeclStatement	F26Dot6 x ;	676:16:22467:22476	10551031	1	True				
ANR	10552521	IdentifierDecl	x		10551031	0					
ANR	10552522	IdentifierDeclType	F26Dot6		10551031	0					
ANR	10552523	Identifier	x		10551031	1					
ANR	10552524	ExpressionStatement	nPoints = gOutline -> pointCount + 2	678:16:22495:22529	10551031	2	True				
ANR	10552525	AssignmentExpression	nPoints = gOutline -> pointCount + 2		10551031	0		=			
ANR	10552526	Identifier	nPoints		10551031	0					
ANR	10552527	AdditiveExpression	gOutline -> pointCount + 2		10551031	1		+			
ANR	10552528	PtrMemberAccess	gOutline -> pointCount		10551031	0					
ANR	10552529	Identifier	gOutline		10551031	0					
ANR	10552530	Identifier	pointCount		10551031	1					
ANR	10552531	PrimaryExpression	2		10551031	1					
ANR	10552532	ExpressionStatement	exec -> pts = subglyph . zone	679:16:22547:22572	10551031	3	True				
ANR	10552533	AssignmentExpression	exec -> pts = subglyph . zone		10551031	0		=			
ANR	10552534	PtrMemberAccess	exec -> pts		10551031	0					
ANR	10552535	Identifier	exec		10551031	0					
ANR	10552536	Identifier	pts		10551031	1					
ANR	10552537	MemberAccess	subglyph . zone		10551031	1					
ANR	10552538	Identifier	subglyph		10551031	0					
ANR	10552539	Identifier	zone		10551031	1					
ANR	10552540	ExpressionStatement	pts -> n_points = nPoints	680:16:22590:22613	10551031	4	True				
ANR	10552541	AssignmentExpression	pts -> n_points = nPoints		10551031	0		=			
ANR	10552542	PtrMemberAccess	pts -> n_points		10551031	0					
ANR	10552543	Identifier	pts		10551031	0					
ANR	10552544	Identifier	n_points		10551031	1					
ANR	10552545	Identifier	nPoints		10551031	1					
ANR	10552546	ExpressionStatement	pts -> n_contours = gOutline -> contourCount	681:16:22631:22671	10551031	5	True				
ANR	10552547	AssignmentExpression	pts -> n_contours = gOutline -> contourCount		10551031	0		=			
ANR	10552548	PtrMemberAccess	pts -> n_contours		10551031	0					
ANR	10552549	Identifier	pts		10551031	0					
ANR	10552550	Identifier	n_contours		10551031	1					
ANR	10552551	PtrMemberAccess	gOutline -> contourCount		10551031	1					
ANR	10552552	Identifier	gOutline		10551031	0					
ANR	10552553	Identifier	contourCount		10551031	1					
ANR	10552554	ExpressionStatement	"pts -> org_x [ nPoints - 2 ] = Scale_X ( & exec -> metrics , subglyph . pp1 . x )"	683:16:22732:22797	10551031	6	True				
ANR	10552555	AssignmentExpression	"pts -> org_x [ nPoints - 2 ] = Scale_X ( & exec -> metrics , subglyph . pp1 . x )"		10551031	0		=			
ANR	10552556	ArrayIndexing	pts -> org_x [ nPoints - 2 ]		10551031	0					
ANR	10552557	PtrMemberAccess	pts -> org_x		10551031	0					
ANR	10552558	Identifier	pts		10551031	0					
ANR	10552559	Identifier	org_x		10551031	1					
ANR	10552560	AdditiveExpression	nPoints - 2		10551031	1		-			
ANR	10552561	Identifier	nPoints		10551031	0					
ANR	10552562	PrimaryExpression	2		10551031	1					
ANR	10552563	CallExpression	"Scale_X ( & exec -> metrics , subglyph . pp1 . x )"		10551031	1					
ANR	10552564	Callee	Scale_X		10551031	0					
ANR	10552565	Identifier	Scale_X		10551031	0					
ANR	10552566	ArgumentList	& exec -> metrics		10551031	1					
ANR	10552567	Argument	& exec -> metrics		10551031	0					
ANR	10552568	UnaryOperationExpression	& exec -> metrics		10551031	0					
ANR	10552569	UnaryOperator	&		10551031	0					
ANR	10552570	PtrMemberAccess	exec -> metrics		10551031	1					
ANR	10552571	Identifier	exec		10551031	0					
ANR	10552572	Identifier	metrics		10551031	1					
ANR	10552573	Argument	subglyph . pp1 . x		10551031	1					
ANR	10552574	MemberAccess	subglyph . pp1 . x		10551031	0					
ANR	10552575	MemberAccess	subglyph . pp1		10551031	0					
ANR	10552576	Identifier	subglyph		10551031	0					
ANR	10552577	Identifier	pp1		10551031	1					
ANR	10552578	Identifier	x		10551031	1					
ANR	10552579	ExpressionStatement	"pts -> org_y [ nPoints - 2 ] = Scale_Y ( & exec -> metrics , subglyph . pp1 . y )"	684:16:22815:22880	10551031	7	True				
ANR	10552580	AssignmentExpression	"pts -> org_y [ nPoints - 2 ] = Scale_Y ( & exec -> metrics , subglyph . pp1 . y )"		10551031	0		=			
ANR	10552581	ArrayIndexing	pts -> org_y [ nPoints - 2 ]		10551031	0					
ANR	10552582	PtrMemberAccess	pts -> org_y		10551031	0					
ANR	10552583	Identifier	pts		10551031	0					
ANR	10552584	Identifier	org_y		10551031	1					
ANR	10552585	AdditiveExpression	nPoints - 2		10551031	1		-			
ANR	10552586	Identifier	nPoints		10551031	0					
ANR	10552587	PrimaryExpression	2		10551031	1					
ANR	10552588	CallExpression	"Scale_Y ( & exec -> metrics , subglyph . pp1 . y )"		10551031	1					
ANR	10552589	Callee	Scale_Y		10551031	0					
ANR	10552590	Identifier	Scale_Y		10551031	0					
ANR	10552591	ArgumentList	& exec -> metrics		10551031	1					
ANR	10552592	Argument	& exec -> metrics		10551031	0					
ANR	10552593	UnaryOperationExpression	& exec -> metrics		10551031	0					
ANR	10552594	UnaryOperator	&		10551031	0					
ANR	10552595	PtrMemberAccess	exec -> metrics		10551031	1					
ANR	10552596	Identifier	exec		10551031	0					
ANR	10552597	Identifier	metrics		10551031	1					
ANR	10552598	Argument	subglyph . pp1 . y		10551031	1					
ANR	10552599	MemberAccess	subglyph . pp1 . y		10551031	0					
ANR	10552600	MemberAccess	subglyph . pp1		10551031	0					
ANR	10552601	Identifier	subglyph		10551031	0					
ANR	10552602	Identifier	pp1		10551031	1					
ANR	10552603	Identifier	y		10551031	1					
ANR	10552604	ExpressionStatement	"pts -> org_x [ nPoints - 1 ] = Scale_X ( & exec -> metrics , subglyph . pp2 . x )"	685:16:22898:22963	10551031	8	True				
ANR	10552605	AssignmentExpression	"pts -> org_x [ nPoints - 1 ] = Scale_X ( & exec -> metrics , subglyph . pp2 . x )"		10551031	0		=			
ANR	10552606	ArrayIndexing	pts -> org_x [ nPoints - 1 ]		10551031	0					
ANR	10552607	PtrMemberAccess	pts -> org_x		10551031	0					
ANR	10552608	Identifier	pts		10551031	0					
ANR	10552609	Identifier	org_x		10551031	1					
ANR	10552610	AdditiveExpression	nPoints - 1		10551031	1		-			
ANR	10552611	Identifier	nPoints		10551031	0					
ANR	10552612	PrimaryExpression	1		10551031	1					
ANR	10552613	CallExpression	"Scale_X ( & exec -> metrics , subglyph . pp2 . x )"		10551031	1					
ANR	10552614	Callee	Scale_X		10551031	0					
ANR	10552615	Identifier	Scale_X		10551031	0					
ANR	10552616	ArgumentList	& exec -> metrics		10551031	1					
ANR	10552617	Argument	& exec -> metrics		10551031	0					
ANR	10552618	UnaryOperationExpression	& exec -> metrics		10551031	0					
ANR	10552619	UnaryOperator	&		10551031	0					
ANR	10552620	PtrMemberAccess	exec -> metrics		10551031	1					
ANR	10552621	Identifier	exec		10551031	0					
ANR	10552622	Identifier	metrics		10551031	1					
ANR	10552623	Argument	subglyph . pp2 . x		10551031	1					
ANR	10552624	MemberAccess	subglyph . pp2 . x		10551031	0					
ANR	10552625	MemberAccess	subglyph . pp2		10551031	0					
ANR	10552626	Identifier	subglyph		10551031	0					
ANR	10552627	Identifier	pp2		10551031	1					
ANR	10552628	Identifier	x		10551031	1					
ANR	10552629	ExpressionStatement	"pts -> org_y [ nPoints - 1 ] = Scale_Y ( & exec -> metrics , subglyph . pp2 . y )"	686:16:22981:23046	10551031	9	True				
ANR	10552630	AssignmentExpression	"pts -> org_y [ nPoints - 1 ] = Scale_Y ( & exec -> metrics , subglyph . pp2 . y )"		10551031	0		=			
ANR	10552631	ArrayIndexing	pts -> org_y [ nPoints - 1 ]		10551031	0					
ANR	10552632	PtrMemberAccess	pts -> org_y		10551031	0					
ANR	10552633	Identifier	pts		10551031	0					
ANR	10552634	Identifier	org_y		10551031	1					
ANR	10552635	AdditiveExpression	nPoints - 1		10551031	1		-			
ANR	10552636	Identifier	nPoints		10551031	0					
ANR	10552637	PrimaryExpression	1		10551031	1					
ANR	10552638	CallExpression	"Scale_Y ( & exec -> metrics , subglyph . pp2 . y )"		10551031	1					
ANR	10552639	Callee	Scale_Y		10551031	0					
ANR	10552640	Identifier	Scale_Y		10551031	0					
ANR	10552641	ArgumentList	& exec -> metrics		10551031	1					
ANR	10552642	Argument	& exec -> metrics		10551031	0					
ANR	10552643	UnaryOperationExpression	& exec -> metrics		10551031	0					
ANR	10552644	UnaryOperator	&		10551031	0					
ANR	10552645	PtrMemberAccess	exec -> metrics		10551031	1					
ANR	10552646	Identifier	exec		10551031	0					
ANR	10552647	Identifier	metrics		10551031	1					
ANR	10552648	Argument	subglyph . pp2 . y		10551031	1					
ANR	10552649	MemberAccess	subglyph . pp2 . y		10551031	0					
ANR	10552650	MemberAccess	subglyph . pp2		10551031	0					
ANR	10552651	Identifier	subglyph		10551031	0					
ANR	10552652	Identifier	pp2		10551031	1					
ANR	10552653	Identifier	y		10551031	1					
ANR	10552654	ExpressionStatement	pts -> touch [ nPoints - 1 ] = 0	687:16:23064:23091	10551031	10	True				
ANR	10552655	AssignmentExpression	pts -> touch [ nPoints - 1 ] = 0		10551031	0		=			
ANR	10552656	ArrayIndexing	pts -> touch [ nPoints - 1 ]		10551031	0					
ANR	10552657	PtrMemberAccess	pts -> touch		10551031	0					
ANR	10552658	Identifier	pts		10551031	0					
ANR	10552659	Identifier	touch		10551031	1					
ANR	10552660	AdditiveExpression	nPoints - 1		10551031	1		-			
ANR	10552661	Identifier	nPoints		10551031	0					
ANR	10552662	PrimaryExpression	1		10551031	1					
ANR	10552663	PrimaryExpression	0		10551031	1					
ANR	10552664	ExpressionStatement	pts -> touch [ nPoints - 2 ] = 0	688:16:23109:23136	10551031	11	True				
ANR	10552665	AssignmentExpression	pts -> touch [ nPoints - 2 ] = 0		10551031	0		=			
ANR	10552666	ArrayIndexing	pts -> touch [ nPoints - 2 ]		10551031	0					
ANR	10552667	PtrMemberAccess	pts -> touch		10551031	0					
ANR	10552668	Identifier	pts		10551031	0					
ANR	10552669	Identifier	touch		10551031	1					
ANR	10552670	AdditiveExpression	nPoints - 2		10551031	1		-			
ANR	10552671	Identifier	nPoints		10551031	0					
ANR	10552672	PrimaryExpression	2		10551031	1					
ANR	10552673	PrimaryExpression	0		10551031	1					
ANR	10552674	ExpressionStatement	x = pts -> org_x [ nPoints - 2 ]	690:16:23226:23253	10551031	12	True				
ANR	10552675	AssignmentExpression	x = pts -> org_x [ nPoints - 2 ]		10551031	0		=			
ANR	10552676	Identifier	x		10551031	0					
ANR	10552677	ArrayIndexing	pts -> org_x [ nPoints - 2 ]		10551031	1					
ANR	10552678	PtrMemberAccess	pts -> org_x		10551031	0					
ANR	10552679	Identifier	pts		10551031	0					
ANR	10552680	Identifier	org_x		10551031	1					
ANR	10552681	AdditiveExpression	nPoints - 2		10551031	1		-			
ANR	10552682	Identifier	nPoints		10551031	0					
ANR	10552683	PrimaryExpression	2		10551031	1					
ANR	10552684	ExpressionStatement	x = ( ( x + 32 ) & - 64 ) - x	691:16:23271:23295	10551031	13	True				
ANR	10552685	AssignmentExpression	x = ( ( x + 32 ) & - 64 ) - x		10551031	0		=			
ANR	10552686	Identifier	x		10551031	0					
ANR	10552687	AdditiveExpression	( ( x + 32 ) & - 64 ) - x		10551031	1		-			
ANR	10552688	BitAndExpression	( x + 32 ) & - 64		10551031	0		&			
ANR	10552689	AdditiveExpression	x + 32		10551031	0		+			
ANR	10552690	Identifier	x		10551031	0					
ANR	10552691	PrimaryExpression	32		10551031	1					
ANR	10552692	UnaryOperationExpression	- 64		10551031	1					
ANR	10552693	UnaryOperator	-		10551031	0					
ANR	10552694	PrimaryExpression	64		10551031	1					
ANR	10552695	Identifier	x		10551031	1					
ANR	10552696	IfStatement	if ( x )		10551031	14					
ANR	10552697	Condition	x	692:20:23317:23317	10551031	0	True				
ANR	10552698	Identifier	x		10551031	0					
ANR	10552699	ForStatement	for ( k = 0 ; k < nPoints ; k ++ )		10551031	1					
ANR	10552700	ForInit	k = 0 ;	693:25:23345:23350	10551031	0	True				
ANR	10552701	AssignmentExpression	k = 0		10551031	0		=			
ANR	10552702	Identifier	k		10551031	0					
ANR	10552703	PrimaryExpression	0		10551031	1					
ANR	10552704	Condition	k < nPoints	693:32:23352:23362	10551031	1	True				
ANR	10552705	RelationalExpression	k < nPoints		10551031	0		<			
ANR	10552706	Identifier	k		10551031	0					
ANR	10552707	Identifier	nPoints		10551031	1					
ANR	10552708	PostIncDecOperationExpression	k ++	693:45:23365:23367	10551031	2	True				
ANR	10552709	Identifier	k		10551031	0					
ANR	10552710	IncDec	++		10551031	1					
ANR	10552711	ExpressionStatement	pts -> org_x [ k ] += x	694:24:23394:23412	10551031	3	True				
ANR	10552712	AssignmentExpression	pts -> org_x [ k ] += x		10551031	0		+=			
ANR	10552713	ArrayIndexing	pts -> org_x [ k ]		10551031	0					
ANR	10552714	PtrMemberAccess	pts -> org_x		10551031	0					
ANR	10552715	Identifier	pts		10551031	0					
ANR	10552716	Identifier	org_x		10551031	1					
ANR	10552717	Identifier	k		10551031	1					
ANR	10552718	Identifier	x		10551031	1					
ANR	10552719	ExpressionStatement	pts -> cur_x [ nPoints - 1 ] = ( pts -> cur_x [ nPoints - 1 ] + 32 ) & - 64	695:16:23430:23492	10551031	15	True				
ANR	10552720	AssignmentExpression	pts -> cur_x [ nPoints - 1 ] = ( pts -> cur_x [ nPoints - 1 ] + 32 ) & - 64		10551031	0		=			
ANR	10552721	ArrayIndexing	pts -> cur_x [ nPoints - 1 ]		10551031	0					
ANR	10552722	PtrMemberAccess	pts -> cur_x		10551031	0					
ANR	10552723	Identifier	pts		10551031	0					
ANR	10552724	Identifier	cur_x		10551031	1					
ANR	10552725	AdditiveExpression	nPoints - 1		10551031	1		-			
ANR	10552726	Identifier	nPoints		10551031	0					
ANR	10552727	PrimaryExpression	1		10551031	1					
ANR	10552728	BitAndExpression	( pts -> cur_x [ nPoints - 1 ] + 32 ) & - 64		10551031	1		&			
ANR	10552729	AdditiveExpression	pts -> cur_x [ nPoints - 1 ] + 32		10551031	0		+			
ANR	10552730	ArrayIndexing	pts -> cur_x [ nPoints - 1 ]		10551031	0					
ANR	10552731	PtrMemberAccess	pts -> cur_x		10551031	0					
ANR	10552732	Identifier	pts		10551031	0					
ANR	10552733	Identifier	cur_x		10551031	1					
ANR	10552734	AdditiveExpression	nPoints - 1		10551031	1		-			
ANR	10552735	Identifier	nPoints		10551031	0					
ANR	10552736	PrimaryExpression	1		10551031	1					
ANR	10552737	PrimaryExpression	32		10551031	1					
ANR	10552738	UnaryOperationExpression	- 64		10551031	1					
ANR	10552739	UnaryOperator	-		10551031	0					
ANR	10552740	PrimaryExpression	64		10551031	1					
ANR	10552741	ForStatement	for ( k = 0 ; k < nPoints ; k ++ )		10551031	16					
ANR	10552742	ForInit	k = 0 ;	696:21:23515:23520	10551031	0	True				
ANR	10552743	AssignmentExpression	k = 0		10551031	0		=			
ANR	10552744	Identifier	k		10551031	0					
ANR	10552745	PrimaryExpression	0		10551031	1					
ANR	10552746	Condition	k < nPoints	696:28:23522:23532	10551031	1	True				
ANR	10552747	RelationalExpression	k < nPoints		10551031	0		<			
ANR	10552748	Identifier	k		10551031	0					
ANR	10552749	Identifier	nPoints		10551031	1					
ANR	10552750	PostIncDecOperationExpression	k ++	696:41:23535:23537	10551031	2	True				
ANR	10552751	Identifier	k		10551031	0					
ANR	10552752	IncDec	++		10551031	1					
ANR	10552753	ExpressionStatement	pts -> touch [ k ] = pts -> touch [ k ] & TT_Flag_On_Curve	697:20:23560:23608	10551031	3	True				
ANR	10552754	AssignmentExpression	pts -> touch [ k ] = pts -> touch [ k ] & TT_Flag_On_Curve		10551031	0		=			
ANR	10552755	ArrayIndexing	pts -> touch [ k ]		10551031	0					
ANR	10552756	PtrMemberAccess	pts -> touch		10551031	0					
ANR	10552757	Identifier	pts		10551031	0					
ANR	10552758	Identifier	touch		10551031	1					
ANR	10552759	Identifier	k		10551031	1					
ANR	10552760	BitAndExpression	pts -> touch [ k ] & TT_Flag_On_Curve		10551031	1		&			
ANR	10552761	ArrayIndexing	pts -> touch [ k ]		10551031	0					
ANR	10552762	PtrMemberAccess	pts -> touch		10551031	0					
ANR	10552763	Identifier	pts		10551031	0					
ANR	10552764	Identifier	touch		10551031	1					
ANR	10552765	Identifier	k		10551031	1					
ANR	10552766	Identifier	TT_Flag_On_Curve		10551031	1					
ANR	10552767	ExpressionStatement	"org_to_cur ( nPoints , pts )"	698:16:23626:23650	10551031	17	True				
ANR	10552768	CallExpression	"org_to_cur ( nPoints , pts )"		10551031	0					
ANR	10552769	Callee	org_to_cur		10551031	0					
ANR	10552770	Identifier	org_to_cur		10551031	0					
ANR	10552771	ArgumentList	nPoints		10551031	1					
ANR	10552772	Argument	nPoints		10551031	0					
ANR	10552773	Identifier	nPoints		10551031	0					
ANR	10552774	Argument	pts		10551031	1					
ANR	10552775	Identifier	pts		10551031	0					
ANR	10552776	ExpressionStatement	exec -> is_composite = TRUE	699:16:23668:23693	10551031	18	True				
ANR	10552777	AssignmentExpression	exec -> is_composite = TRUE		10551031	0		=			
ANR	10552778	PtrMemberAccess	exec -> is_composite		10551031	0					
ANR	10552779	Identifier	exec		10551031	0					
ANR	10552780	Identifier	is_composite		10551031	1					
ANR	10552781	Identifier	TRUE		10551031	1					
ANR	10552782	IfStatement	if ( pFont -> patented )		10551031	19					
ANR	10552783	Condition	pFont -> patented	700:20:23715:23729	10551031	0	True				
ANR	10552784	PtrMemberAccess	pFont -> patented		10551031	0					
ANR	10552785	Identifier	pFont		10551031	0					
ANR	10552786	Identifier	patented		10551031	1					
ANR	10552787	ExpressionStatement	code = TT_Err_Invalid_Engine	701:20:23752:23780	10551031	1	True				
ANR	10552788	AssignmentExpression	code = TT_Err_Invalid_Engine		10551031	0		=			
ANR	10552789	Identifier	code		10551031	0					
ANR	10552790	Identifier	TT_Err_Invalid_Engine		10551031	1					
ANR	10552791	ElseStatement	else		10551031	0					
ANR	10552792	ExpressionStatement	"code = Context_Run ( exec , FALSE )"	703:20:23823:23854	10551031	0	True				
ANR	10552793	AssignmentExpression	"code = Context_Run ( exec , FALSE )"		10551031	0		=			
ANR	10552794	Identifier	code		10551031	0					
ANR	10552795	CallExpression	"Context_Run ( exec , FALSE )"		10551031	1					
ANR	10552796	Callee	Context_Run		10551031	0					
ANR	10552797	Identifier	Context_Run		10551031	0					
ANR	10552798	ArgumentList	exec		10551031	1					
ANR	10552799	Argument	exec		10551031	0					
ANR	10552800	Identifier	exec		10551031	0					
ANR	10552801	Argument	FALSE		10551031	1					
ANR	10552802	Identifier	FALSE		10551031	0					
ANR	10552803	IfStatement	if ( ! code )		10551031	20					
ANR	10552804	Condition	! code	704:20:23876:23880	10551031	0	True				
ANR	10552805	UnaryOperationExpression	! code		10551031	0					
ANR	10552806	UnaryOperator	!		10551031	0					
ANR	10552807	Identifier	code		10551031	1					
ANR	10552808	ExpressionStatement	"cur_to_org ( nPoints , pts )"	705:20:23903:23927	10551031	1	True				
ANR	10552809	CallExpression	"cur_to_org ( nPoints , pts )"		10551031	0					
ANR	10552810	Callee	cur_to_org		10551031	0					
ANR	10552811	Identifier	cur_to_org		10551031	0					
ANR	10552812	ArgumentList	nPoints		10551031	1					
ANR	10552813	Argument	nPoints		10551031	0					
ANR	10552814	Identifier	nPoints		10551031	0					
ANR	10552815	Argument	pts		10551031	1					
ANR	10552816	Identifier	pts		10551031	0					
ANR	10552817	ElseStatement	else		10551031	0					
ANR	10552818	IfStatement	if ( code == TT_Err_Invalid_Engine )		10551031	0					
ANR	10552819	Condition	code == TT_Err_Invalid_Engine	706:25:23954:23982	10551031	0	True				
ANR	10552820	EqualityExpression	code == TT_Err_Invalid_Engine		10551031	0		==			
ANR	10552821	Identifier	code		10551031	0					
ANR	10552822	Identifier	TT_Err_Invalid_Engine		10551031	1					
ANR	10552823	ExpressionStatement	error = fPatented	707:20:24005:24022	10551031	1	True				
ANR	10552824	AssignmentExpression	error = fPatented		10551031	0		=			
ANR	10552825	Identifier	error		10551031	0					
ANR	10552826	Identifier	fPatented		10551031	1					
ANR	10552827	ElseStatement	else		10551031	0					
ANR	10552828	CompoundStatement		222:21:8930:8930	10551031	0					
ANR	10552829	IfStatement	if ( ( int ) code >= TT_Err_Invalid_Opcode && ( int ) code <= TT_Err_Invalid_Displacement )		10551031	0					
ANR	10552830	Condition	( int ) code >= TT_Err_Invalid_Opcode && ( int ) code <= TT_Err_Invalid_Displacement	712:24:24202:24300	10551031	0	True				
ANR	10552831	AndExpression	( int ) code >= TT_Err_Invalid_Opcode && ( int ) code <= TT_Err_Invalid_Displacement		10551031	0		&&			
ANR	10552832	RelationalExpression	( int ) code >= TT_Err_Invalid_Opcode		10551031	0		>=			
ANR	10552833	CastExpression	( int ) code		10551031	0					
ANR	10552834	CastTarget	int		10551031	0					
ANR	10552835	Identifier	code		10551031	1					
ANR	10552836	Identifier	TT_Err_Invalid_Opcode		10551031	1					
ANR	10552837	RelationalExpression	( int ) code <= TT_Err_Invalid_Displacement		10551031	1		<=			
ANR	10552838	CastExpression	( int ) code		10551031	0					
ANR	10552839	CastTarget	int		10551031	0					
ANR	10552840	Identifier	code		10551031	1					
ANR	10552841	Identifier	TT_Err_Invalid_Displacement		10551031	1					
ANR	10552842	CompoundStatement		227:66:9188:9188	10551031	1					
ANR	10552843	ExpressionStatement	error = fBadInstruction	714:24:24329:24352	10551031	0	True				
ANR	10552844	AssignmentExpression	error = fBadInstruction		10551031	0		=			
ANR	10552845	Identifier	error		10551031	0					
ANR	10552846	Identifier	fBadInstruction		10551031	1					
ANR	10552847	ElseStatement	else		10551031	0					
ANR	10552848	CompoundStatement		230:25:9286:9286	10551031	0					
ANR	10552849	ExpressionStatement	error = fBadFontData	717:24:24427:24447	10551031	0	True				
ANR	10552850	AssignmentExpression	error = fBadFontData		10551031	0		=			
ANR	10552851	Identifier	error		10551031	0					
ANR	10552852	Identifier	fBadFontData		10551031	1					
ANR	10552853	ExpressionStatement	Unset_CodeRange ( exec )	721:12:24515:24536	10551031	6	True				
ANR	10552854	CallExpression	Unset_CodeRange ( exec )		10551031	0					
ANR	10552855	Callee	Unset_CodeRange		10551031	0					
ANR	10552856	Identifier	Unset_CodeRange		10551031	0					
ANR	10552857	ArgumentList	exec		10551031	1					
ANR	10552858	Argument	exec		10551031	0					
ANR	10552859	Identifier	exec		10551031	0					
ANR	10552860	ExpressionStatement	"Clear_CodeRange ( exec , TT_CodeRange_Glyph )"	722:12:24550:24591	10551031	7	True				
ANR	10552861	CallExpression	"Clear_CodeRange ( exec , TT_CodeRange_Glyph )"		10551031	0					
ANR	10552862	Callee	Clear_CodeRange		10551031	0					
ANR	10552863	Identifier	Clear_CodeRange		10551031	0					
ANR	10552864	ArgumentList	exec		10551031	1					
ANR	10552865	Argument	exec		10551031	0					
ANR	10552866	Identifier	exec		10551031	0					
ANR	10552867	Argument	TT_CodeRange_Glyph		10551031	1					
ANR	10552868	Identifier	TT_CodeRange_Glyph		10551031	0					
ANR	10552869	ElseStatement	else		10551031	0					
ANR	10552870	IfStatement	if ( gOutline -> contourCount > 0 )		10551031	0					
ANR	10552871	Condition	gOutline -> contourCount > 0	724:15:24618:24643	10551031	0	True				
ANR	10552872	RelationalExpression	gOutline -> contourCount > 0		10551031	0		>			
ANR	10552873	PtrMemberAccess	gOutline -> contourCount		10551031	0					
ANR	10552874	Identifier	gOutline		10551031	0					
ANR	10552875	Identifier	contourCount		10551031	1					
ANR	10552876	PrimaryExpression	0		10551031	1					
ANR	10552877	CompoundStatement		244:8:9669:9687	10551031	1					
ANR	10552878	IdentifierDeclStatement	uint16 i ;	725:8:24656:24664	10551031	0	True				
ANR	10552879	IdentifierDecl	i		10551031	0					
ANR	10552880	IdentifierDeclType	uint16		10551031	0					
ANR	10552881	Identifier	i		10551031	1					
ANR	10552882	IdentifierDeclStatement	bool bInsOK ;	726:8:24674:24685	10551031	1	True				
ANR	10552883	IdentifierDecl	bInsOK		10551031	0					
ANR	10552884	IdentifierDeclType	bool		10551031	0					
ANR	10552885	Identifier	bInsOK		10551031	1					
ANR	10552886	IdentifierDeclStatement	"byte * onCurve , * stop , flag ;"	727:8:24695:24721	10551031	2	True				
ANR	10552887	IdentifierDecl	* onCurve		10551031	0					
ANR	10552888	IdentifierDeclType	byte *		10551031	0					
ANR	10552889	Identifier	onCurve		10551031	1					
ANR	10552890	IdentifierDecl	* stop		10551031	1					
ANR	10552891	IdentifierDeclType	byte *		10551031	0					
ANR	10552892	Identifier	stop		10551031	1					
ANR	10552893	IdentifierDecl	flag		10551031	2					
ANR	10552894	IdentifierDeclType	byte		10551031	0					
ANR	10552895	Identifier	flag		10551031	1					
ANR	10552896	IdentifierDeclStatement	short * endPoints ;	728:8:24731:24747	10551031	3	True				
ANR	10552897	IdentifierDecl	* endPoints		10551031	0					
ANR	10552898	IdentifierDeclType	short *		10551031	0					
ANR	10552899	Identifier	endPoints		10551031	1					
ANR	10552900	IdentifierDeclStatement	unsigned int nPos ;	729:8:24757:24774	10551031	4	True				
ANR	10552901	IdentifierDecl	nPos		10551031	0					
ANR	10552902	IdentifierDeclType	unsigned int		10551031	0					
ANR	10552903	Identifier	nPos		10551031	1					
ANR	10552904	IdentifierDeclStatement	unsigned int n_ins ;	730:8:24784:24802	10551031	5	True				
ANR	10552905	IdentifierDecl	n_ins		10551031	0					
ANR	10552906	IdentifierDeclType	unsigned int		10551031	0					
ANR	10552907	Identifier	n_ins		10551031	1					
ANR	10552908	IfStatement	if ( self -> nContoursTotal + gOutline -> contourCount > exec -> n_contours )		10551031	6					
ANR	10552909	Condition	self -> nContoursTotal + gOutline -> contourCount > exec -> n_contours	732:12:24817:24880	10551031	0	True				
ANR	10552910	RelationalExpression	self -> nContoursTotal + gOutline -> contourCount > exec -> n_contours		10551031	0		>			
ANR	10552911	AdditiveExpression	self -> nContoursTotal + gOutline -> contourCount		10551031	0		+			
ANR	10552912	PtrMemberAccess	self -> nContoursTotal		10551031	0					
ANR	10552913	Identifier	self		10551031	0					
ANR	10552914	Identifier	nContoursTotal		10551031	1					
ANR	10552915	PtrMemberAccess	gOutline -> contourCount		10551031	1					
ANR	10552916	Identifier	gOutline		10551031	0					
ANR	10552917	Identifier	contourCount		10551031	1					
ANR	10552918	PtrMemberAccess	exec -> n_contours		10551031	1					
ANR	10552919	Identifier	exec		10551031	0					
ANR	10552920	Identifier	n_contours		10551031	1					
ANR	10552921	CompoundStatement		246:78:9768:9768	10551031	1					
ANR	10552922	ExpressionStatement	error = fBadFontData	733:12:24897:24917	10551031	0	True				
ANR	10552923	AssignmentExpression	error = fBadFontData		10551031	0		=			
ANR	10552924	Identifier	error		10551031	0					
ANR	10552925	Identifier	fBadFontData		10551031	1					
ANR	10552926	GotoStatement	goto ex ;	733:34:24919:24926	10551031	1	True				
ANR	10552927	Identifier	ex		10551031	0					
ANR	10552928	ExpressionStatement	endPoints = pts -> contours	735:8:24946:24971	10551031	7	True				
ANR	10552929	AssignmentExpression	endPoints = pts -> contours		10551031	0		=			
ANR	10552930	Identifier	endPoints		10551031	0					
ANR	10552931	PtrMemberAccess	pts -> contours		10551031	1					
ANR	10552932	Identifier	pts		10551031	0					
ANR	10552933	Identifier	contours		10551031	1					
ANR	10552934	ForStatement	for ( i = 0 ; i < gOutline -> contourCount ; i ++ )		10551031	8					
ANR	10552935	ForInit	i = 0 ;	736:13:24986:24991	10551031	0	True				
ANR	10552936	AssignmentExpression	i = 0		10551031	0		=			
ANR	10552937	Identifier	i		10551031	0					
ANR	10552938	PrimaryExpression	0		10551031	1					
ANR	10552939	Condition	i < gOutline -> contourCount	736:20:24993:25018	10551031	1	True				
ANR	10552940	RelationalExpression	i < gOutline -> contourCount		10551031	0		<			
ANR	10552941	Identifier	i		10551031	0					
ANR	10552942	PtrMemberAccess	gOutline -> contourCount		10551031	1					
ANR	10552943	Identifier	gOutline		10551031	0					
ANR	10552944	Identifier	contourCount		10551031	1					
ANR	10552945	PostIncDecOperationExpression	i ++	736:48:25021:25023	10551031	2	True				
ANR	10552946	Identifier	i		10551031	0					
ANR	10552947	IncDec	++		10551031	1					
ANR	10552948	ExpressionStatement	endPoints [ i ] = ttfReader__Short ( r )	737:12:25038:25072	10551031	3	True				
ANR	10552949	AssignmentExpression	endPoints [ i ] = ttfReader__Short ( r )		10551031	0		=			
ANR	10552950	ArrayIndexing	endPoints [ i ]		10551031	0					
ANR	10552951	Identifier	endPoints		10551031	0					
ANR	10552952	Identifier	i		10551031	1					
ANR	10552953	CallExpression	ttfReader__Short ( r )		10551031	1					
ANR	10552954	Callee	ttfReader__Short		10551031	0					
ANR	10552955	Identifier	ttfReader__Short		10551031	0					
ANR	10552956	ArgumentList	r		10551031	1					
ANR	10552957	Argument	r		10551031	0					
ANR	10552958	Identifier	r		10551031	0					
ANR	10552959	ForStatement	for ( i = 1 ; i < gOutline -> contourCount ; i ++ )		10551031	9					
ANR	10552960	ForInit	i = 1 ;	738:13:25087:25092	10551031	0	True				
ANR	10552961	AssignmentExpression	i = 1		10551031	0		=			
ANR	10552962	Identifier	i		10551031	0					
ANR	10552963	PrimaryExpression	1		10551031	1					
ANR	10552964	Condition	i < gOutline -> contourCount	738:20:25094:25119	10551031	1	True				
ANR	10552965	RelationalExpression	i < gOutline -> contourCount		10551031	0		<			
ANR	10552966	Identifier	i		10551031	0					
ANR	10552967	PtrMemberAccess	gOutline -> contourCount		10551031	1					
ANR	10552968	Identifier	gOutline		10551031	0					
ANR	10552969	Identifier	contourCount		10551031	1					
ANR	10552970	PostIncDecOperationExpression	i ++	738:48:25122:25124	10551031	2	True				
ANR	10552971	Identifier	i		10551031	0					
ANR	10552972	IncDec	++		10551031	1					
ANR	10552973	IfStatement	if ( endPoints [ i - 1 ] < 0 || endPoints [ i - 1 ] >= endPoints [ i ] )		10551031	3					
ANR	10552974	Condition	endPoints [ i - 1 ] < 0 || endPoints [ i - 1 ] >= endPoints [ i ]	739:16:25143:25198	10551031	0	True				
ANR	10552975	OrExpression	endPoints [ i - 1 ] < 0 || endPoints [ i - 1 ] >= endPoints [ i ]		10551031	0		||			
ANR	10552976	RelationalExpression	endPoints [ i - 1 ] < 0		10551031	0		<			
ANR	10552977	ArrayIndexing	endPoints [ i - 1 ]		10551031	0					
ANR	10552978	Identifier	endPoints		10551031	0					
ANR	10552979	AdditiveExpression	i - 1		10551031	1		-			
ANR	10552980	Identifier	i		10551031	0					
ANR	10552981	PrimaryExpression	1		10551031	1					
ANR	10552982	PrimaryExpression	0		10551031	1					
ANR	10552983	RelationalExpression	endPoints [ i - 1 ] >= endPoints [ i ]		10551031	1		>=			
ANR	10552984	ArrayIndexing	endPoints [ i - 1 ]		10551031	0					
ANR	10552985	Identifier	endPoints		10551031	0					
ANR	10552986	AdditiveExpression	i - 1		10551031	1		-			
ANR	10552987	Identifier	i		10551031	0					
ANR	10552988	PrimaryExpression	1		10551031	1					
ANR	10552989	ArrayIndexing	endPoints [ i ]		10551031	1					
ANR	10552990	Identifier	endPoints		10551031	0					
ANR	10552991	Identifier	i		10551031	1					
ANR	10552992	CompoundStatement		253:74:10086:10086	10551031	1					
ANR	10552993	ExpressionStatement	error = fBadFontData	740:16:25219:25239	10551031	0	True				
ANR	10552994	AssignmentExpression	error = fBadFontData		10551031	0		=			
ANR	10552995	Identifier	error		10551031	0					
ANR	10552996	Identifier	fBadFontData		10551031	1					
ANR	10552997	GotoStatement	goto ex ;	740:38:25241:25248	10551031	1	True				
ANR	10552998	Identifier	ex		10551031	0					
ANR	10552999	ExpressionStatement	nPoints = gOutline -> pointCount = endPoints [ gOutline -> contourCount - 1 ] + 1	742:8:25272:25346	10551031	10	True				
ANR	10553000	AssignmentExpression	nPoints = gOutline -> pointCount = endPoints [ gOutline -> contourCount - 1 ] + 1		10551031	0		=			
ANR	10553001	Identifier	nPoints		10551031	0					
ANR	10553002	AssignmentExpression	gOutline -> pointCount = endPoints [ gOutline -> contourCount - 1 ] + 1		10551031	1		=			
ANR	10553003	PtrMemberAccess	gOutline -> pointCount		10551031	0					
ANR	10553004	Identifier	gOutline		10551031	0					
ANR	10553005	Identifier	pointCount		10551031	1					
ANR	10553006	AdditiveExpression	endPoints [ gOutline -> contourCount - 1 ] + 1		10551031	1		+			
ANR	10553007	ArrayIndexing	endPoints [ gOutline -> contourCount - 1 ]		10551031	0					
ANR	10553008	Identifier	endPoints		10551031	0					
ANR	10553009	AdditiveExpression	gOutline -> contourCount - 1		10551031	1		-			
ANR	10553010	PtrMemberAccess	gOutline -> contourCount		10551031	0					
ANR	10553011	Identifier	gOutline		10551031	0					
ANR	10553012	Identifier	contourCount		10551031	1					
ANR	10553013	PrimaryExpression	1		10551031	1					
ANR	10553014	PrimaryExpression	1		10551031	1					
ANR	10553015	IfStatement	if ( nPoints < 0 || self -> nPointsTotal + nPoints + 2 > exec -> n_points )		10551031	11					
ANR	10553016	Condition	nPoints < 0 || self -> nPointsTotal + nPoints + 2 > exec -> n_points	743:12:25360:25423	10551031	0	True				
ANR	10553017	OrExpression	nPoints < 0 || self -> nPointsTotal + nPoints + 2 > exec -> n_points		10551031	0		||			
ANR	10553018	RelationalExpression	nPoints < 0		10551031	0		<			
ANR	10553019	Identifier	nPoints		10551031	0					
ANR	10553020	PrimaryExpression	0		10551031	1					
ANR	10553021	RelationalExpression	self -> nPointsTotal + nPoints + 2 > exec -> n_points		10551031	1		>			
ANR	10553022	AdditiveExpression	self -> nPointsTotal + nPoints + 2		10551031	0		+			
ANR	10553023	PtrMemberAccess	self -> nPointsTotal		10551031	0					
ANR	10553024	Identifier	self		10551031	0					
ANR	10553025	Identifier	nPointsTotal		10551031	1					
ANR	10553026	AdditiveExpression	nPoints + 2		10551031	1		+			
ANR	10553027	Identifier	nPoints		10551031	0					
ANR	10553028	PrimaryExpression	2		10551031	1					
ANR	10553029	PtrMemberAccess	exec -> n_points		10551031	1					
ANR	10553030	Identifier	exec		10551031	0					
ANR	10553031	Identifier	n_points		10551031	1					
ANR	10553032	CompoundStatement		257:78:10311:10311	10551031	1					
ANR	10553033	ExpressionStatement	error = fBadFontData	744:12:25440:25460	10551031	0	True				
ANR	10553034	AssignmentExpression	error = fBadFontData		10551031	0		=			
ANR	10553035	Identifier	error		10551031	0					
ANR	10553036	Identifier	fBadFontData		10551031	1					
ANR	10553037	GotoStatement	goto ex ;	744:34:25462:25469	10551031	1	True				
ANR	10553038	Identifier	ex		10551031	0					
ANR	10553039	ExpressionStatement	n_ins = ttfReader__Short ( r )	746:8:25489:25516	10551031	12	True				
ANR	10553040	AssignmentExpression	n_ins = ttfReader__Short ( r )		10551031	0		=			
ANR	10553041	Identifier	n_ins		10551031	0					
ANR	10553042	CallExpression	ttfReader__Short ( r )		10551031	1					
ANR	10553043	Callee	ttfReader__Short		10551031	0					
ANR	10553044	Identifier	ttfReader__Short		10551031	0					
ANR	10553045	ArgumentList	r		10551031	1					
ANR	10553046	Argument	r		10551031	0					
ANR	10553047	Identifier	r		10551031	0					
ANR	10553048	ExpressionStatement	nPos = r -> Tell ( r )	747:8:25526:25543	10551031	13	True				
ANR	10553049	AssignmentExpression	nPos = r -> Tell ( r )		10551031	0		=			
ANR	10553050	Identifier	nPos		10551031	0					
ANR	10553051	CallExpression	r -> Tell ( r )		10551031	1					
ANR	10553052	Callee	r -> Tell		10551031	0					
ANR	10553053	PtrMemberAccess	r -> Tell		10551031	0					
ANR	10553054	Identifier	r		10551031	0					
ANR	10553055	Identifier	Tell		10551031	1					
ANR	10553056	ArgumentList	r		10551031	1					
ANR	10553057	Argument	r		10551031	0					
ANR	10553058	Identifier	r		10551031	0					
ANR	10553059	ExpressionStatement	"r -> Seek ( r , nPos + n_ins )"	748:8:25553:25577	10551031	14	True				
ANR	10553060	CallExpression	"r -> Seek ( r , nPos + n_ins )"		10551031	0					
ANR	10553061	Callee	r -> Seek		10551031	0					
ANR	10553062	PtrMemberAccess	r -> Seek		10551031	0					
ANR	10553063	Identifier	r		10551031	0					
ANR	10553064	Identifier	Seek		10551031	1					
ANR	10553065	ArgumentList	r		10551031	1					
ANR	10553066	Argument	r		10551031	0					
ANR	10553067	Identifier	r		10551031	0					
ANR	10553068	Argument	nPos + n_ins		10551031	1					
ANR	10553069	AdditiveExpression	nPos + n_ins		10551031	0		+			
ANR	10553070	Identifier	nPos		10551031	0					
ANR	10553071	Identifier	n_ins		10551031	1					
ANR	10553072	IfStatement	if ( r -> Error ( r ) )		10551031	15					
ANR	10553073	Condition	r -> Error ( r )	749:12:25591:25601	10551031	0	True				
ANR	10553074	CallExpression	r -> Error ( r )		10551031	0					
ANR	10553075	Callee	r -> Error		10551031	0					
ANR	10553076	PtrMemberAccess	r -> Error		10551031	0					
ANR	10553077	Identifier	r		10551031	0					
ANR	10553078	Identifier	Error		10551031	1					
ANR	10553079	ArgumentList	r		10551031	1					
ANR	10553080	Argument	r		10551031	0					
ANR	10553081	Identifier	r		10551031	0					
ANR	10553082	GotoStatement	goto errex ;	750:12:25616:25626	10551031	1	True				
ANR	10553083	Identifier	errex		10551031	0					
ANR	10553084	ExpressionStatement	"bInsOK = ! Set_CodeRange ( exec , TT_CodeRange_Glyph , ( byte * ) glyph + nPos , n_ins )"	751:8:25636:25714	10551031	16	True				
ANR	10553085	AssignmentExpression	"bInsOK = ! Set_CodeRange ( exec , TT_CodeRange_Glyph , ( byte * ) glyph + nPos , n_ins )"		10551031	0		=			
ANR	10553086	Identifier	bInsOK		10551031	0					
ANR	10553087	UnaryOperationExpression	"! Set_CodeRange ( exec , TT_CodeRange_Glyph , ( byte * ) glyph + nPos , n_ins )"		10551031	1					
ANR	10553088	UnaryOperator	!		10551031	0					
ANR	10553089	CallExpression	"Set_CodeRange ( exec , TT_CodeRange_Glyph , ( byte * ) glyph + nPos , n_ins )"		10551031	1					
ANR	10553090	Callee	Set_CodeRange		10551031	0					
ANR	10553091	Identifier	Set_CodeRange		10551031	0					
ANR	10553092	ArgumentList	exec		10551031	1					
ANR	10553093	Argument	exec		10551031	0					
ANR	10553094	Identifier	exec		10551031	0					
ANR	10553095	Argument	TT_CodeRange_Glyph		10551031	1					
ANR	10553096	Identifier	TT_CodeRange_Glyph		10551031	0					
ANR	10553097	Argument	( byte * ) glyph + nPos		10551031	2					
ANR	10553098	AdditiveExpression	( byte * ) glyph + nPos		10551031	0		+			
ANR	10553099	CastExpression	( byte * ) glyph		10551031	0					
ANR	10553100	CastTarget	byte *		10551031	0					
ANR	10553101	Identifier	glyph		10551031	1					
ANR	10553102	Identifier	nPos		10551031	1					
ANR	10553103	Argument	n_ins		10551031	3					
ANR	10553104	Identifier	n_ins		10551031	0					
ANR	10553105	ExpressionStatement	onCurve = pts -> touch	752:8:25724:25744	10551031	17	True				
ANR	10553106	AssignmentExpression	onCurve = pts -> touch		10551031	0		=			
ANR	10553107	Identifier	onCurve		10551031	0					
ANR	10553108	PtrMemberAccess	pts -> touch		10551031	1					
ANR	10553109	Identifier	pts		10551031	0					
ANR	10553110	Identifier	touch		10551031	1					
ANR	10553111	ExpressionStatement	stop = onCurve + gOutline -> pointCount	753:8:25754:25791	10551031	18	True				
ANR	10553112	AssignmentExpression	stop = onCurve + gOutline -> pointCount		10551031	0		=			
ANR	10553113	Identifier	stop		10551031	0					
ANR	10553114	AdditiveExpression	onCurve + gOutline -> pointCount		10551031	1		+			
ANR	10553115	Identifier	onCurve		10551031	0					
ANR	10553116	PtrMemberAccess	gOutline -> pointCount		10551031	1					
ANR	10553117	Identifier	gOutline		10551031	0					
ANR	10553118	Identifier	pointCount		10551031	1					
ANR	10553119	WhileStatement	while ( onCurve < stop )		10551031	19					
ANR	10553120	Condition	onCurve < stop	755:15:25809:25822	10551031	0	True				
ANR	10553121	RelationalExpression	onCurve < stop		10551031	0		<			
ANR	10553122	Identifier	onCurve		10551031	0					
ANR	10553123	Identifier	stop		10551031	1					
ANR	10553124	CompoundStatement		269:31:10710:10710	10551031	1					
ANR	10553125	ExpressionStatement	* onCurve ++ = flag = ttfReader__Byte ( r )	756:12:25839:25877	10551031	0	True				
ANR	10553126	AssignmentExpression	* onCurve ++ = flag = ttfReader__Byte ( r )		10551031	0		=			
ANR	10553127	UnaryOperationExpression	* onCurve ++		10551031	0					
ANR	10553128	UnaryOperator	*		10551031	0					
ANR	10553129	PostIncDecOperationExpression	onCurve ++		10551031	1					
ANR	10553130	Identifier	onCurve		10551031	0					
ANR	10553131	IncDec	++		10551031	1					
ANR	10553132	AssignmentExpression	flag = ttfReader__Byte ( r )		10551031	1		=			
ANR	10553133	Identifier	flag		10551031	0					
ANR	10553134	CallExpression	ttfReader__Byte ( r )		10551031	1					
ANR	10553135	Callee	ttfReader__Byte		10551031	0					
ANR	10553136	Identifier	ttfReader__Byte		10551031	0					
ANR	10553137	ArgumentList	r		10551031	1					
ANR	10553138	Argument	r		10551031	0					
ANR	10553139	Identifier	r		10551031	0					
ANR	10553140	IfStatement	if ( flag & REPEAT_FLAGS )		10551031	1					
ANR	10553141	Condition	flag & REPEAT_FLAGS	757:16:25895:25913	10551031	0	True				
ANR	10553142	BitAndExpression	flag & REPEAT_FLAGS		10551031	0		&			
ANR	10553143	Identifier	flag		10551031	0					
ANR	10553144	Identifier	REPEAT_FLAGS		10551031	1					
ANR	10553145	CompoundStatement		271:37:10801:10801	10551031	1					
ANR	10553146	ExpressionStatement	count = ttfReader__Byte ( r )	758:16:25934:25960	10551031	0	True				
ANR	10553147	AssignmentExpression	count = ttfReader__Byte ( r )		10551031	0		=			
ANR	10553148	Identifier	count		10551031	0					
ANR	10553149	CallExpression	ttfReader__Byte ( r )		10551031	1					
ANR	10553150	Callee	ttfReader__Byte		10551031	0					
ANR	10553151	Identifier	ttfReader__Byte		10551031	0					
ANR	10553152	ArgumentList	r		10551031	1					
ANR	10553153	Argument	r		10551031	0					
ANR	10553154	Identifier	r		10551031	0					
ANR	10553155	ForStatement	for ( -- count ; count >= 0 && onCurve < stop ; -- count )		10551031	1					
ANR	10553156	ForInit	-- count ;	759:21:25983:25990	10551031	0	True				
ANR	10553157	UnaryExpression	-- count		10551031	0					
ANR	10553158	IncDec	--		10551031	0					
ANR	10553159	Identifier	count		10551031	1					
ANR	10553160	Condition	count >= 0 && onCurve < stop	759:30:25992:26019	10551031	1	True				
ANR	10553161	AndExpression	count >= 0 && onCurve < stop		10551031	0		&&			
ANR	10553162	RelationalExpression	count >= 0		10551031	0		>=			
ANR	10553163	Identifier	count		10551031	0					
ANR	10553164	PrimaryExpression	0		10551031	1					
ANR	10553165	RelationalExpression	onCurve < stop		10551031	1		<			
ANR	10553166	Identifier	onCurve		10551031	0					
ANR	10553167	Identifier	stop		10551031	1					
ANR	10553168	UnaryExpression	-- count	759:60:26022:26028	10551031	2	True				
ANR	10553169	IncDec	--		10551031	0					
ANR	10553170	Identifier	count		10551031	1					
ANR	10553171	ExpressionStatement	* onCurve ++ = flag	760:20:26051:26068	10551031	3	True				
ANR	10553172	AssignmentExpression	* onCurve ++ = flag		10551031	0		=			
ANR	10553173	UnaryOperationExpression	* onCurve ++		10551031	0					
ANR	10553174	UnaryOperator	*		10551031	0					
ANR	10553175	PostIncDecOperationExpression	onCurve ++		10551031	1					
ANR	10553176	Identifier	onCurve		10551031	0					
ANR	10553177	IncDec	++		10551031	1					
ANR	10553178	Identifier	flag		10551031	1					
ANR	10553179	CompoundStatement		279:12:11100:11123	10551031	20					
ANR	10553180	IdentifierDeclStatement	short coord = ( self -> bVertical ? 0 : sideBearing - subglyph . bbox . xMin ) ;	764:12:26131:26201	10551031	0	True				
ANR	10553181	IdentifierDecl	coord = ( self -> bVertical ? 0 : sideBearing - subglyph . bbox . xMin )		10551031	0					
ANR	10553182	IdentifierDeclType	short		10551031	0					
ANR	10553183	Identifier	coord		10551031	1					
ANR	10553184	AssignmentExpression	coord = ( self -> bVertical ? 0 : sideBearing - subglyph . bbox . xMin )		10551031	2		=			
ANR	10553185	Identifier	coord		10551031	0					
ANR	10553186	ConditionalExpression	self -> bVertical ? 0 : sideBearing - subglyph . bbox . xMin		10551031	1					
ANR	10553187	Condition	self -> bVertical		10551031	0					
ANR	10553188	PtrMemberAccess	self -> bVertical		10551031	0					
ANR	10553189	Identifier	self		10551031	0					
ANR	10553190	Identifier	bVertical		10551031	1					
ANR	10553191	PrimaryExpression	0		10551031	1					
ANR	10553192	AdditiveExpression	sideBearing - subglyph . bbox . xMin		10551031	2		-			
ANR	10553193	Identifier	sideBearing		10551031	0					
ANR	10553194	MemberAccess	subglyph . bbox . xMin		10551031	1					
ANR	10553195	MemberAccess	subglyph . bbox		10551031	0					
ANR	10553196	Identifier	subglyph		10551031	0					
ANR	10553197	Identifier	bbox		10551031	1					
ANR	10553198	Identifier	xMin		10551031	1					
ANR	10553199	IdentifierDeclStatement	F26Dot6 * x = pts -> org_x ;	765:12:26215:26238	10551031	1	True				
ANR	10553200	IdentifierDecl	* x = pts -> org_x		10551031	0					
ANR	10553201	IdentifierDeclType	F26Dot6 *		10551031	0					
ANR	10553202	Identifier	x		10551031	1					
ANR	10553203	AssignmentExpression	* x = pts -> org_x		10551031	2		=			
ANR	10553204	Identifier	x		10551031	0					
ANR	10553205	PtrMemberAccess	pts -> org_x		10551031	1					
ANR	10553206	Identifier	pts		10551031	0					
ANR	10553207	Identifier	org_x		10551031	1					
ANR	10553208	ExpressionStatement	onCurve = pts -> touch	766:12:26252:26272	10551031	2	True				
ANR	10553209	AssignmentExpression	onCurve = pts -> touch		10551031	0		=			
ANR	10553210	Identifier	onCurve		10551031	0					
ANR	10553211	PtrMemberAccess	pts -> touch		10551031	1					
ANR	10553212	Identifier	pts		10551031	0					
ANR	10553213	Identifier	touch		10551031	1					
ANR	10553214	WhileStatement	while ( onCurve < stop )		10551031	3					
ANR	10553215	Condition	onCurve < stop	767:19:26293:26306	10551031	0	True				
ANR	10553216	RelationalExpression	onCurve < stop		10551031	0		<			
ANR	10553217	Identifier	onCurve		10551031	0					
ANR	10553218	Identifier	stop		10551031	1					
ANR	10553219	CompoundStatement		281:35:11194:11194	10551031	1					
ANR	10553220	IfStatement	if ( ( flag = * onCurve ++ ) & XSHORT )		10551031	0					
ANR	10553221	Condition	( flag = * onCurve ++ ) & XSHORT	768:20:26331:26358	10551031	0	True				
ANR	10553222	BitAndExpression	( flag = * onCurve ++ ) & XSHORT		10551031	0		&			
ANR	10553223	AssignmentExpression	flag = * onCurve ++		10551031	0		=			
ANR	10553224	Identifier	flag		10551031	0					
ANR	10553225	UnaryOperationExpression	* onCurve ++		10551031	1					
ANR	10553226	UnaryOperator	*		10551031	0					
ANR	10553227	PostIncDecOperationExpression	onCurve ++		10551031	1					
ANR	10553228	Identifier	onCurve		10551031	0					
ANR	10553229	IncDec	++		10551031	1					
ANR	10553230	Identifier	XSHORT		10551031	1					
ANR	10553231	CompoundStatement		282:50:11246:11246	10551031	1					
ANR	10553232	IfStatement	if ( flag & SHORT_X_IS_POS )		10551031	0					
ANR	10553233	Condition	flag & SHORT_X_IS_POS	769:24:26387:26407	10551031	0	True				
ANR	10553234	BitAndExpression	flag & SHORT_X_IS_POS		10551031	0		&			
ANR	10553235	Identifier	flag		10551031	0					
ANR	10553236	Identifier	SHORT_X_IS_POS		10551031	1					
ANR	10553237	ExpressionStatement	coord += ttfReader__Byte ( r )	770:24:26434:26461	10551031	1	True				
ANR	10553238	AssignmentExpression	coord += ttfReader__Byte ( r )		10551031	0		+=			
ANR	10553239	Identifier	coord		10551031	0					
ANR	10553240	CallExpression	ttfReader__Byte ( r )		10551031	1					
ANR	10553241	Callee	ttfReader__Byte		10551031	0					
ANR	10553242	Identifier	ttfReader__Byte		10551031	0					
ANR	10553243	ArgumentList	r		10551031	1					
ANR	10553244	Argument	r		10551031	0					
ANR	10553245	Identifier	r		10551031	0					
ANR	10553246	ElseStatement	else		10551031	0					
ANR	10553247	ExpressionStatement	coord -= ttfReader__Byte ( r )	772:20:26508:26535	10551031	0	True				
ANR	10553248	AssignmentExpression	coord -= ttfReader__Byte ( r )		10551031	0		-=			
ANR	10553249	Identifier	coord		10551031	0					
ANR	10553250	CallExpression	ttfReader__Byte ( r )		10551031	1					
ANR	10553251	Callee	ttfReader__Byte		10551031	0					
ANR	10553252	Identifier	ttfReader__Byte		10551031	0					
ANR	10553253	ArgumentList	r		10551031	1					
ANR	10553254	Argument	r		10551031	0					
ANR	10553255	Identifier	r		10551031	0					
ANR	10553256	ElseStatement	else		10551031	0					
ANR	10553257	IfStatement	if ( ! ( flag & NEXT_X_IS_ZERO ) )		10551031	0					
ANR	10553258	Condition	! ( flag & NEXT_X_IS_ZERO )	773:27:26564:26587	10551031	0	True				
ANR	10553259	UnaryOperationExpression	! ( flag & NEXT_X_IS_ZERO )		10551031	0					
ANR	10553260	UnaryOperator	!		10551031	0					
ANR	10553261	BitAndExpression	flag & NEXT_X_IS_ZERO		10551031	1		&			
ANR	10553262	Identifier	flag		10551031	0					
ANR	10553263	Identifier	NEXT_X_IS_ZERO		10551031	1					
ANR	10553264	ExpressionStatement	coord += ttfReader__Short ( r )	774:20:26610:26638	10551031	1	True				
ANR	10553265	AssignmentExpression	coord += ttfReader__Short ( r )		10551031	0		+=			
ANR	10553266	Identifier	coord		10551031	0					
ANR	10553267	CallExpression	ttfReader__Short ( r )		10551031	1					
ANR	10553268	Callee	ttfReader__Short		10551031	0					
ANR	10553269	Identifier	ttfReader__Short		10551031	0					
ANR	10553270	ArgumentList	r		10551031	1					
ANR	10553271	Argument	r		10551031	0					
ANR	10553272	Identifier	r		10551031	0					
ANR	10553273	ExpressionStatement	"* x ++ = Scale_X ( & exec -> metrics , coord )"	775:16:26656:26693	10551031	1	True				
ANR	10553274	AssignmentExpression	"* x ++ = Scale_X ( & exec -> metrics , coord )"		10551031	0		=			
ANR	10553275	UnaryOperationExpression	* x ++		10551031	0					
ANR	10553276	UnaryOperator	*		10551031	0					
ANR	10553277	PostIncDecOperationExpression	x ++		10551031	1					
ANR	10553278	Identifier	x		10551031	0					
ANR	10553279	IncDec	++		10551031	1					
ANR	10553280	CallExpression	"Scale_X ( & exec -> metrics , coord )"		10551031	1					
ANR	10553281	Callee	Scale_X		10551031	0					
ANR	10553282	Identifier	Scale_X		10551031	0					
ANR	10553283	ArgumentList	& exec -> metrics		10551031	1					
ANR	10553284	Argument	& exec -> metrics		10551031	0					
ANR	10553285	UnaryOperationExpression	& exec -> metrics		10551031	0					
ANR	10553286	UnaryOperator	&		10551031	0					
ANR	10553287	PtrMemberAccess	exec -> metrics		10551031	1					
ANR	10553288	Identifier	exec		10551031	0					
ANR	10553289	Identifier	metrics		10551031	1					
ANR	10553290	Argument	coord		10551031	1					
ANR	10553291	Identifier	coord		10551031	0					
ANR	10553292	CompoundStatement		294:12:11670:11693	10551031	21					
ANR	10553293	IdentifierDeclStatement	short coord = 0 ;	779:12:26756:26771	10551031	0	True				
ANR	10553294	IdentifierDecl	coord = 0		10551031	0					
ANR	10553295	IdentifierDeclType	short		10551031	0					
ANR	10553296	Identifier	coord		10551031	1					
ANR	10553297	AssignmentExpression	coord = 0		10551031	2		=			
ANR	10553298	Identifier	coord		10551031	0					
ANR	10553299	PrimaryExpression	0		10551031	1					
ANR	10553300	IdentifierDeclStatement	F26Dot6 * y = pts -> org_y ;	780:12:26785:26808	10551031	1	True				
ANR	10553301	IdentifierDecl	* y = pts -> org_y		10551031	0					
ANR	10553302	IdentifierDeclType	F26Dot6 *		10551031	0					
ANR	10553303	Identifier	y		10551031	1					
ANR	10553304	AssignmentExpression	* y = pts -> org_y		10551031	2		=			
ANR	10553305	Identifier	y		10551031	0					
ANR	10553306	PtrMemberAccess	pts -> org_y		10551031	1					
ANR	10553307	Identifier	pts		10551031	0					
ANR	10553308	Identifier	org_y		10551031	1					
ANR	10553309	ExpressionStatement	onCurve = pts -> touch	781:12:26822:26842	10551031	2	True				
ANR	10553310	AssignmentExpression	onCurve = pts -> touch		10551031	0		=			
ANR	10553311	Identifier	onCurve		10551031	0					
ANR	10553312	PtrMemberAccess	pts -> touch		10551031	1					
ANR	10553313	Identifier	pts		10551031	0					
ANR	10553314	Identifier	touch		10551031	1					
ANR	10553315	WhileStatement	while ( onCurve < stop )		10551031	3					
ANR	10553316	Condition	onCurve < stop	782:19:26863:26876	10551031	0	True				
ANR	10553317	RelationalExpression	onCurve < stop		10551031	0		<			
ANR	10553318	Identifier	onCurve		10551031	0					
ANR	10553319	Identifier	stop		10551031	1					
ANR	10553320	CompoundStatement		296:35:11764:11764	10551031	1					
ANR	10553321	IfStatement	if ( ( flag = * onCurve ) & YSHORT )		10551031	0					
ANR	10553322	Condition	( flag = * onCurve ) & YSHORT	783:19:26900:26925	10551031	0	True				
ANR	10553323	BitAndExpression	( flag = * onCurve ) & YSHORT		10551031	0		&			
ANR	10553324	AssignmentExpression	flag = * onCurve		10551031	0		=			
ANR	10553325	Identifier	flag		10551031	0					
ANR	10553326	UnaryOperationExpression	* onCurve		10551031	1					
ANR	10553327	UnaryOperator	*		10551031	0					
ANR	10553328	Identifier	onCurve		10551031	1					
ANR	10553329	Identifier	YSHORT		10551031	1					
ANR	10553330	IfStatement	if ( flag & SHORT_Y_IS_POS )		10551031	1					
ANR	10553331	Condition	flag & SHORT_Y_IS_POS	784:25:26953:26973	10551031	0	True				
ANR	10553332	BitAndExpression	flag & SHORT_Y_IS_POS		10551031	0		&			
ANR	10553333	Identifier	flag		10551031	0					
ANR	10553334	Identifier	SHORT_Y_IS_POS		10551031	1					
ANR	10553335	ExpressionStatement	coord += ttfReader__Byte ( r )	785:24:27001:27028	10551031	1	True				
ANR	10553336	AssignmentExpression	coord += ttfReader__Byte ( r )		10551031	0		+=			
ANR	10553337	Identifier	coord		10551031	0					
ANR	10553338	CallExpression	ttfReader__Byte ( r )		10551031	1					
ANR	10553339	Callee	ttfReader__Byte		10551031	0					
ANR	10553340	Identifier	ttfReader__Byte		10551031	0					
ANR	10553341	ArgumentList	r		10551031	1					
ANR	10553342	Argument	r		10551031	0					
ANR	10553343	Identifier	r		10551031	0					
ANR	10553344	ElseStatement	else		10551031	0					
ANR	10553345	ExpressionStatement	coord -= ttfReader__Byte ( r )	787:24:27079:27106	10551031	0	True				
ANR	10553346	AssignmentExpression	coord -= ttfReader__Byte ( r )		10551031	0		-=			
ANR	10553347	Identifier	coord		10551031	0					
ANR	10553348	CallExpression	ttfReader__Byte ( r )		10551031	1					
ANR	10553349	Callee	ttfReader__Byte		10551031	0					
ANR	10553350	Identifier	ttfReader__Byte		10551031	0					
ANR	10553351	ArgumentList	r		10551031	1					
ANR	10553352	Argument	r		10551031	0					
ANR	10553353	Identifier	r		10551031	0					
ANR	10553354	ElseStatement	else		10551031	0					
ANR	10553355	IfStatement	if ( ! ( flag & NEXT_Y_IS_ZERO ) )		10551031	0					
ANR	10553356	Condition	! ( flag & NEXT_Y_IS_ZERO )	788:24:27132:27155	10551031	0	True				
ANR	10553357	UnaryOperationExpression	! ( flag & NEXT_Y_IS_ZERO )		10551031	0					
ANR	10553358	UnaryOperator	!		10551031	0					
ANR	10553359	BitAndExpression	flag & NEXT_Y_IS_ZERO		10551031	1		&			
ANR	10553360	Identifier	flag		10551031	0					
ANR	10553361	Identifier	NEXT_Y_IS_ZERO		10551031	1					
ANR	10553362	ExpressionStatement	coord += ttfReader__Short ( r )	789:20:27178:27206	10551031	1	True				
ANR	10553363	AssignmentExpression	coord += ttfReader__Short ( r )		10551031	0		+=			
ANR	10553364	Identifier	coord		10551031	0					
ANR	10553365	CallExpression	ttfReader__Short ( r )		10551031	1					
ANR	10553366	Callee	ttfReader__Short		10551031	0					
ANR	10553367	Identifier	ttfReader__Short		10551031	0					
ANR	10553368	ArgumentList	r		10551031	1					
ANR	10553369	Argument	r		10551031	0					
ANR	10553370	Identifier	r		10551031	0					
ANR	10553371	ExpressionStatement	"* y ++ = Scale_Y ( & exec -> metrics , coord )"	790:16:27224:27263	10551031	1	True				
ANR	10553372	AssignmentExpression	"* y ++ = Scale_Y ( & exec -> metrics , coord )"		10551031	0		=			
ANR	10553373	UnaryOperationExpression	* y ++		10551031	0					
ANR	10553374	UnaryOperator	*		10551031	0					
ANR	10553375	PostIncDecOperationExpression	y ++		10551031	1					
ANR	10553376	Identifier	y		10551031	0					
ANR	10553377	IncDec	++		10551031	1					
ANR	10553378	CallExpression	"Scale_Y ( & exec -> metrics , coord )"		10551031	1					
ANR	10553379	Callee	Scale_Y		10551031	0					
ANR	10553380	Identifier	Scale_Y		10551031	0					
ANR	10553381	ArgumentList	& exec -> metrics		10551031	1					
ANR	10553382	Argument	& exec -> metrics		10551031	0					
ANR	10553383	UnaryOperationExpression	& exec -> metrics		10551031	0					
ANR	10553384	UnaryOperator	&		10551031	0					
ANR	10553385	PtrMemberAccess	exec -> metrics		10551031	1					
ANR	10553386	Identifier	exec		10551031	0					
ANR	10553387	Identifier	metrics		10551031	1					
ANR	10553388	Argument	coord		10551031	1					
ANR	10553389	Identifier	coord		10551031	0					
ANR	10553390	ExpressionStatement	* onCurve ++ = flag & ONCURVE	793:16:27331:27358	10551031	2	True				
ANR	10553391	AssignmentExpression	* onCurve ++ = flag & ONCURVE		10551031	0		=			
ANR	10553392	UnaryOperationExpression	* onCurve ++		10551031	0					
ANR	10553393	UnaryOperator	*		10551031	0					
ANR	10553394	PostIncDecOperationExpression	onCurve ++		10551031	1					
ANR	10553395	Identifier	onCurve		10551031	0					
ANR	10553396	IncDec	++		10551031	1					
ANR	10553397	BitAndExpression	flag & ONCURVE		10551031	1		&			
ANR	10553398	Identifier	flag		10551031	0					
ANR	10553399	Identifier	ONCURVE		10551031	1					
ANR	10553400	ExpressionStatement	"MoveGlyphOutline ( pts , 0 , gOutline , m_orig )"	796:8:27392:27434	10551031	22	True				
ANR	10553401	CallExpression	"MoveGlyphOutline ( pts , 0 , gOutline , m_orig )"		10551031	0					
ANR	10553402	Callee	MoveGlyphOutline		10551031	0					
ANR	10553403	Identifier	MoveGlyphOutline		10551031	0					
ANR	10553404	ArgumentList	pts		10551031	1					
ANR	10553405	Argument	pts		10551031	0					
ANR	10553406	Identifier	pts		10551031	0					
ANR	10553407	Argument	0		10551031	1					
ANR	10553408	PrimaryExpression	0		10551031	0					
ANR	10553409	Argument	gOutline		10551031	2					
ANR	10553410	Identifier	gOutline		10551031	0					
ANR	10553411	Argument	m_orig		10551031	3					
ANR	10553412	Identifier	m_orig		10551031	0					
ANR	10553413	ExpressionStatement	self -> nContoursTotal += gOutline -> contourCount	797:8:27444:27490	10551031	23	True				
ANR	10553414	AssignmentExpression	self -> nContoursTotal += gOutline -> contourCount		10551031	0		+=			
ANR	10553415	PtrMemberAccess	self -> nContoursTotal		10551031	0					
ANR	10553416	Identifier	self		10551031	0					
ANR	10553417	Identifier	nContoursTotal		10551031	1					
ANR	10553418	PtrMemberAccess	gOutline -> contourCount		10551031	1					
ANR	10553419	Identifier	gOutline		10551031	0					
ANR	10553420	Identifier	contourCount		10551031	1					
ANR	10553421	ExpressionStatement	self -> nPointsTotal += nPoints	798:8:27500:27529	10551031	24	True				
ANR	10553422	AssignmentExpression	self -> nPointsTotal += nPoints		10551031	0		+=			
ANR	10553423	PtrMemberAccess	self -> nPointsTotal		10551031	0					
ANR	10553424	Identifier	self		10551031	0					
ANR	10553425	Identifier	nPointsTotal		10551031	1					
ANR	10553426	Identifier	nPoints		10551031	1					
ANR	10553427	IfStatement	if ( execute_bytecode && ! skip_instructions && ! r -> Error ( r ) && n_ins && bInsOK && ! ( pFont -> inst -> GS . instruct_control & 1 ) )		10551031	25					
ANR	10553428	Condition	execute_bytecode && ! skip_instructions && ! r -> Error ( r ) && n_ins && bInsOK && ! ( pFont -> inst -> GS . instruct_control & 1 )	799:12:27543:27675	10551031	0	True				
ANR	10553429	AndExpression	execute_bytecode && ! skip_instructions && ! r -> Error ( r ) && n_ins && bInsOK && ! ( pFont -> inst -> GS . instruct_control & 1 )		10551031	0		&&			
ANR	10553430	Identifier	execute_bytecode		10551031	0					
ANR	10553431	AndExpression	! skip_instructions && ! r -> Error ( r ) && n_ins && bInsOK && ! ( pFont -> inst -> GS . instruct_control & 1 )		10551031	1		&&			
ANR	10553432	UnaryOperationExpression	! skip_instructions		10551031	0					
ANR	10553433	UnaryOperator	!		10551031	0					
ANR	10553434	Identifier	skip_instructions		10551031	1					
ANR	10553435	AndExpression	! r -> Error ( r ) && n_ins && bInsOK && ! ( pFont -> inst -> GS . instruct_control & 1 )		10551031	1		&&			
ANR	10553436	UnaryOperationExpression	! r -> Error ( r )		10551031	0					
ANR	10553437	UnaryOperator	!		10551031	0					
ANR	10553438	CallExpression	r -> Error ( r )		10551031	1					
ANR	10553439	Callee	r -> Error		10551031	0					
ANR	10553440	PtrMemberAccess	r -> Error		10551031	0					
ANR	10553441	Identifier	r		10551031	0					
ANR	10553442	Identifier	Error		10551031	1					
ANR	10553443	ArgumentList	r		10551031	1					
ANR	10553444	Argument	r		10551031	0					
ANR	10553445	Identifier	r		10551031	0					
ANR	10553446	AndExpression	n_ins && bInsOK && ! ( pFont -> inst -> GS . instruct_control & 1 )		10551031	1		&&			
ANR	10553447	Identifier	n_ins		10551031	0					
ANR	10553448	AndExpression	bInsOK && ! ( pFont -> inst -> GS . instruct_control & 1 )		10551031	1		&&			
ANR	10553449	Identifier	bInsOK		10551031	0					
ANR	10553450	UnaryOperationExpression	! ( pFont -> inst -> GS . instruct_control & 1 )		10551031	1					
ANR	10553451	UnaryOperator	!		10551031	0					
ANR	10553452	BitAndExpression	pFont -> inst -> GS . instruct_control & 1		10551031	1		&			
ANR	10553453	MemberAccess	pFont -> inst -> GS . instruct_control		10551031	0					
ANR	10553454	PtrMemberAccess	pFont -> inst -> GS		10551031	0					
ANR	10553455	PtrMemberAccess	pFont -> inst		10551031	0					
ANR	10553456	Identifier	pFont		10551031	0					
ANR	10553457	Identifier	inst		10551031	1					
ANR	10553458	Identifier	GS		10551031	1					
ANR	10553459	Identifier	instruct_control		10551031	1					
ANR	10553460	PrimaryExpression	1		10551031	1					
ANR	10553461	CompoundStatement		318:12:12662:12675	10551031	1					
ANR	10553462	IdentifierDeclStatement	TGlyph_Zone * pts = & exec -> pts ;	801:12:27692:27721	10551031	0	True				
ANR	10553463	IdentifierDecl	* pts = & exec -> pts		10551031	0					
ANR	10553464	IdentifierDeclType	TGlyph_Zone *		10551031	0					
ANR	10553465	Identifier	pts		10551031	1					
ANR	10553466	AssignmentExpression	* pts = & exec -> pts		10551031	2		=			
ANR	10553467	Identifier	pts		10551031	0					
ANR	10553468	UnaryOperationExpression	& exec -> pts		10551031	1					
ANR	10553469	UnaryOperator	&		10551031	0					
ANR	10553470	PtrMemberAccess	exec -> pts		10551031	1					
ANR	10553471	Identifier	exec		10551031	0					
ANR	10553472	Identifier	pts		10551031	1					
ANR	10553473	IdentifierDeclStatement	int k ;	802:12:27735:27740	10551031	1	True				
ANR	10553474	IdentifierDecl	k		10551031	0					
ANR	10553475	IdentifierDeclType	int		10551031	0					
ANR	10553476	Identifier	k		10551031	1					
ANR	10553477	IdentifierDeclStatement	F26Dot6 x ;	803:12:27754:27763	10551031	2	True				
ANR	10553478	IdentifierDecl	x		10551031	0					
ANR	10553479	IdentifierDeclType	F26Dot6		10551031	0					
ANR	10553480	Identifier	x		10551031	1					
ANR	10553481	IdentifierDeclStatement	TT_Error code ;	804:12:27777:27790	10551031	3	True				
ANR	10553482	IdentifierDecl	code		10551031	0					
ANR	10553483	IdentifierDeclType	TT_Error		10551031	0					
ANR	10553484	Identifier	code		10551031	1					
ANR	10553485	ExpressionStatement	exec -> is_composite = FALSE	806:12:27805:27831	10551031	4	True				
ANR	10553486	AssignmentExpression	exec -> is_composite = FALSE		10551031	0		=			
ANR	10553487	PtrMemberAccess	exec -> is_composite		10551031	0					
ANR	10553488	Identifier	exec		10551031	0					
ANR	10553489	Identifier	is_composite		10551031	1					
ANR	10553490	Identifier	FALSE		10551031	1					
ANR	10553491	ExpressionStatement	"pts -> org_x [ nPoints ] = Scale_X ( & exec -> metrics , subglyph . pp1 . x )"	808:12:27884:27949	10551031	5	True				
ANR	10553492	AssignmentExpression	"pts -> org_x [ nPoints ] = Scale_X ( & exec -> metrics , subglyph . pp1 . x )"		10551031	0		=			
ANR	10553493	ArrayIndexing	pts -> org_x [ nPoints ]		10551031	0					
ANR	10553494	PtrMemberAccess	pts -> org_x		10551031	0					
ANR	10553495	Identifier	pts		10551031	0					
ANR	10553496	Identifier	org_x		10551031	1					
ANR	10553497	Identifier	nPoints		10551031	1					
ANR	10553498	CallExpression	"Scale_X ( & exec -> metrics , subglyph . pp1 . x )"		10551031	1					
ANR	10553499	Callee	Scale_X		10551031	0					
ANR	10553500	Identifier	Scale_X		10551031	0					
ANR	10553501	ArgumentList	& exec -> metrics		10551031	1					
ANR	10553502	Argument	& exec -> metrics		10551031	0					
ANR	10553503	UnaryOperationExpression	& exec -> metrics		10551031	0					
ANR	10553504	UnaryOperator	&		10551031	0					
ANR	10553505	PtrMemberAccess	exec -> metrics		10551031	1					
ANR	10553506	Identifier	exec		10551031	0					
ANR	10553507	Identifier	metrics		10551031	1					
ANR	10553508	Argument	subglyph . pp1 . x		10551031	1					
ANR	10553509	MemberAccess	subglyph . pp1 . x		10551031	0					
ANR	10553510	MemberAccess	subglyph . pp1		10551031	0					
ANR	10553511	Identifier	subglyph		10551031	0					
ANR	10553512	Identifier	pp1		10551031	1					
ANR	10553513	Identifier	x		10551031	1					
ANR	10553514	ExpressionStatement	"pts -> org_y [ nPoints ] = Scale_Y ( & exec -> metrics , subglyph . pp1 . y )"	809:12:27963:28028	10551031	6	True				
ANR	10553515	AssignmentExpression	"pts -> org_y [ nPoints ] = Scale_Y ( & exec -> metrics , subglyph . pp1 . y )"		10551031	0		=			
ANR	10553516	ArrayIndexing	pts -> org_y [ nPoints ]		10551031	0					
ANR	10553517	PtrMemberAccess	pts -> org_y		10551031	0					
ANR	10553518	Identifier	pts		10551031	0					
ANR	10553519	Identifier	org_y		10551031	1					
ANR	10553520	Identifier	nPoints		10551031	1					
ANR	10553521	CallExpression	"Scale_Y ( & exec -> metrics , subglyph . pp1 . y )"		10551031	1					
ANR	10553522	Callee	Scale_Y		10551031	0					
ANR	10553523	Identifier	Scale_Y		10551031	0					
ANR	10553524	ArgumentList	& exec -> metrics		10551031	1					
ANR	10553525	Argument	& exec -> metrics		10551031	0					
ANR	10553526	UnaryOperationExpression	& exec -> metrics		10551031	0					
ANR	10553527	UnaryOperator	&		10551031	0					
ANR	10553528	PtrMemberAccess	exec -> metrics		10551031	1					
ANR	10553529	Identifier	exec		10551031	0					
ANR	10553530	Identifier	metrics		10551031	1					
ANR	10553531	Argument	subglyph . pp1 . y		10551031	1					
ANR	10553532	MemberAccess	subglyph . pp1 . y		10551031	0					
ANR	10553533	MemberAccess	subglyph . pp1		10551031	0					
ANR	10553534	Identifier	subglyph		10551031	0					
ANR	10553535	Identifier	pp1		10551031	1					
ANR	10553536	Identifier	y		10551031	1					
ANR	10553537	ExpressionStatement	"pts -> org_x [ nPoints + 1 ] = Scale_X ( & exec -> metrics , subglyph . pp2 . x )"	810:12:28042:28107	10551031	7	True				
ANR	10553538	AssignmentExpression	"pts -> org_x [ nPoints + 1 ] = Scale_X ( & exec -> metrics , subglyph . pp2 . x )"		10551031	0		=			
ANR	10553539	ArrayIndexing	pts -> org_x [ nPoints + 1 ]		10551031	0					
ANR	10553540	PtrMemberAccess	pts -> org_x		10551031	0					
ANR	10553541	Identifier	pts		10551031	0					
ANR	10553542	Identifier	org_x		10551031	1					
ANR	10553543	AdditiveExpression	nPoints + 1		10551031	1		+			
ANR	10553544	Identifier	nPoints		10551031	0					
ANR	10553545	PrimaryExpression	1		10551031	1					
ANR	10553546	CallExpression	"Scale_X ( & exec -> metrics , subglyph . pp2 . x )"		10551031	1					
ANR	10553547	Callee	Scale_X		10551031	0					
ANR	10553548	Identifier	Scale_X		10551031	0					
ANR	10553549	ArgumentList	& exec -> metrics		10551031	1					
ANR	10553550	Argument	& exec -> metrics		10551031	0					
ANR	10553551	UnaryOperationExpression	& exec -> metrics		10551031	0					
ANR	10553552	UnaryOperator	&		10551031	0					
ANR	10553553	PtrMemberAccess	exec -> metrics		10551031	1					
ANR	10553554	Identifier	exec		10551031	0					
ANR	10553555	Identifier	metrics		10551031	1					
ANR	10553556	Argument	subglyph . pp2 . x		10551031	1					
ANR	10553557	MemberAccess	subglyph . pp2 . x		10551031	0					
ANR	10553558	MemberAccess	subglyph . pp2		10551031	0					
ANR	10553559	Identifier	subglyph		10551031	0					
ANR	10553560	Identifier	pp2		10551031	1					
ANR	10553561	Identifier	x		10551031	1					
ANR	10553562	ExpressionStatement	"pts -> org_y [ nPoints + 1 ] = Scale_Y ( & exec -> metrics , subglyph . pp2 . y )"	811:12:28121:28186	10551031	8	True				
ANR	10553563	AssignmentExpression	"pts -> org_y [ nPoints + 1 ] = Scale_Y ( & exec -> metrics , subglyph . pp2 . y )"		10551031	0		=			
ANR	10553564	ArrayIndexing	pts -> org_y [ nPoints + 1 ]		10551031	0					
ANR	10553565	PtrMemberAccess	pts -> org_y		10551031	0					
ANR	10553566	Identifier	pts		10551031	0					
ANR	10553567	Identifier	org_y		10551031	1					
ANR	10553568	AdditiveExpression	nPoints + 1		10551031	1		+			
ANR	10553569	Identifier	nPoints		10551031	0					
ANR	10553570	PrimaryExpression	1		10551031	1					
ANR	10553571	CallExpression	"Scale_Y ( & exec -> metrics , subglyph . pp2 . y )"		10551031	1					
ANR	10553572	Callee	Scale_Y		10551031	0					
ANR	10553573	Identifier	Scale_Y		10551031	0					
ANR	10553574	ArgumentList	& exec -> metrics		10551031	1					
ANR	10553575	Argument	& exec -> metrics		10551031	0					
ANR	10553576	UnaryOperationExpression	& exec -> metrics		10551031	0					
ANR	10553577	UnaryOperator	&		10551031	0					
ANR	10553578	PtrMemberAccess	exec -> metrics		10551031	1					
ANR	10553579	Identifier	exec		10551031	0					
ANR	10553580	Identifier	metrics		10551031	1					
ANR	10553581	Argument	subglyph . pp2 . y		10551031	1					
ANR	10553582	MemberAccess	subglyph . pp2 . y		10551031	0					
ANR	10553583	MemberAccess	subglyph . pp2		10551031	0					
ANR	10553584	Identifier	subglyph		10551031	0					
ANR	10553585	Identifier	pp2		10551031	1					
ANR	10553586	Identifier	y		10551031	1					
ANR	10553587	ExpressionStatement	pts -> touch [ nPoints ] = 0	812:12:28200:28227	10551031	9	True				
ANR	10553588	AssignmentExpression	pts -> touch [ nPoints ] = 0		10551031	0		=			
ANR	10553589	ArrayIndexing	pts -> touch [ nPoints ]		10551031	0					
ANR	10553590	PtrMemberAccess	pts -> touch		10551031	0					
ANR	10553591	Identifier	pts		10551031	0					
ANR	10553592	Identifier	touch		10551031	1					
ANR	10553593	Identifier	nPoints		10551031	1					
ANR	10553594	PrimaryExpression	0		10551031	1					
ANR	10553595	ExpressionStatement	pts -> touch [ nPoints + 1 ] = 0	813:12:28241:28268	10551031	10	True				
ANR	10553596	AssignmentExpression	pts -> touch [ nPoints + 1 ] = 0		10551031	0		=			
ANR	10553597	ArrayIndexing	pts -> touch [ nPoints + 1 ]		10551031	0					
ANR	10553598	PtrMemberAccess	pts -> touch		10551031	0					
ANR	10553599	Identifier	pts		10551031	0					
ANR	10553600	Identifier	touch		10551031	1					
ANR	10553601	AdditiveExpression	nPoints + 1		10551031	1		+			
ANR	10553602	Identifier	nPoints		10551031	0					
ANR	10553603	PrimaryExpression	1		10551031	1					
ANR	10553604	PrimaryExpression	0		10551031	1					
ANR	10553605	ExpressionStatement	pts -> n_points = nPoints + 2	814:12:28282:28311	10551031	11	True				
ANR	10553606	AssignmentExpression	pts -> n_points = nPoints + 2		10551031	0		=			
ANR	10553607	PtrMemberAccess	pts -> n_points		10551031	0					
ANR	10553608	Identifier	pts		10551031	0					
ANR	10553609	Identifier	n_points		10551031	1					
ANR	10553610	AdditiveExpression	nPoints + 2		10551031	1		+			
ANR	10553611	Identifier	nPoints		10551031	0					
ANR	10553612	PrimaryExpression	2		10551031	1					
ANR	10553613	ExpressionStatement	pts -> n_contours = gOutline -> contourCount	815:12:28325:28365	10551031	12	True				
ANR	10553614	AssignmentExpression	pts -> n_contours = gOutline -> contourCount		10551031	0		=			
ANR	10553615	PtrMemberAccess	pts -> n_contours		10551031	0					
ANR	10553616	Identifier	pts		10551031	0					
ANR	10553617	Identifier	n_contours		10551031	1					
ANR	10553618	PtrMemberAccess	gOutline -> contourCount		10551031	1					
ANR	10553619	Identifier	gOutline		10551031	0					
ANR	10553620	Identifier	contourCount		10551031	1					
ANR	10553621	ExpressionStatement	x = pts -> org_x [ nPoints ]	817:12:28447:28470	10551031	13	True				
ANR	10553622	AssignmentExpression	x = pts -> org_x [ nPoints ]		10551031	0		=			
ANR	10553623	Identifier	x		10551031	0					
ANR	10553624	ArrayIndexing	pts -> org_x [ nPoints ]		10551031	1					
ANR	10553625	PtrMemberAccess	pts -> org_x		10551031	0					
ANR	10553626	Identifier	pts		10551031	0					
ANR	10553627	Identifier	org_x		10551031	1					
ANR	10553628	Identifier	nPoints		10551031	1					
ANR	10553629	ExpressionStatement	x = ( ( x + 32 ) & - 64 ) - x	818:12:28484:28508	10551031	14	True				
ANR	10553630	AssignmentExpression	x = ( ( x + 32 ) & - 64 ) - x		10551031	0		=			
ANR	10553631	Identifier	x		10551031	0					
ANR	10553632	AdditiveExpression	( ( x + 32 ) & - 64 ) - x		10551031	1		-			
ANR	10553633	BitAndExpression	( x + 32 ) & - 64		10551031	0		&			
ANR	10553634	AdditiveExpression	x + 32		10551031	0		+			
ANR	10553635	Identifier	x		10551031	0					
ANR	10553636	PrimaryExpression	32		10551031	1					
ANR	10553637	UnaryOperationExpression	- 64		10551031	1					
ANR	10553638	UnaryOperator	-		10551031	0					
ANR	10553639	PrimaryExpression	64		10551031	1					
ANR	10553640	Identifier	x		10551031	1					
ANR	10553641	IfStatement	if ( x )		10551031	15					
ANR	10553642	Condition	x	819:16:28526:28526	10551031	0	True				
ANR	10553643	Identifier	x		10551031	0					
ANR	10553644	ForStatement	for ( k = 0 ; k < nPoints + 2 ; k ++ )		10551031	1					
ANR	10553645	ForInit	k = 0 ;	820:21:28550:28555	10551031	0	True				
ANR	10553646	AssignmentExpression	k = 0		10551031	0		=			
ANR	10553647	Identifier	k		10551031	0					
ANR	10553648	PrimaryExpression	0		10551031	1					
ANR	10553649	Condition	k < nPoints + 2	820:28:28557:28571	10551031	1	True				
ANR	10553650	RelationalExpression	k < nPoints + 2		10551031	0		<			
ANR	10553651	Identifier	k		10551031	0					
ANR	10553652	AdditiveExpression	nPoints + 2		10551031	1		+			
ANR	10553653	Identifier	nPoints		10551031	0					
ANR	10553654	PrimaryExpression	2		10551031	1					
ANR	10553655	PostIncDecOperationExpression	k ++	820:45:28574:28576	10551031	2	True				
ANR	10553656	Identifier	k		10551031	0					
ANR	10553657	IncDec	++		10551031	1					
ANR	10553658	ExpressionStatement	pts -> org_x [ k ] += x	821:20:28599:28617	10551031	3	True				
ANR	10553659	AssignmentExpression	pts -> org_x [ k ] += x		10551031	0		+=			
ANR	10553660	ArrayIndexing	pts -> org_x [ k ]		10551031	0					
ANR	10553661	PtrMemberAccess	pts -> org_x		10551031	0					
ANR	10553662	Identifier	pts		10551031	0					
ANR	10553663	Identifier	org_x		10551031	1					
ANR	10553664	Identifier	k		10551031	1					
ANR	10553665	Identifier	x		10551031	1					
ANR	10553666	ExpressionStatement	"org_to_cur ( nPoints + 2 , pts )"	822:12:28631:28659	10551031	16	True				
ANR	10553667	CallExpression	"org_to_cur ( nPoints + 2 , pts )"		10551031	0					
ANR	10553668	Callee	org_to_cur		10551031	0					
ANR	10553669	Identifier	org_to_cur		10551031	0					
ANR	10553670	ArgumentList	nPoints + 2		10551031	1					
ANR	10553671	Argument	nPoints + 2		10551031	0					
ANR	10553672	AdditiveExpression	nPoints + 2		10551031	0		+			
ANR	10553673	Identifier	nPoints		10551031	0					
ANR	10553674	PrimaryExpression	2		10551031	1					
ANR	10553675	Argument	pts		10551031	1					
ANR	10553676	Identifier	pts		10551031	0					
ANR	10553677	ExpressionStatement	exec -> is_composite = FALSE	823:12:28673:28699	10551031	17	True				
ANR	10553678	AssignmentExpression	exec -> is_composite = FALSE		10551031	0		=			
ANR	10553679	PtrMemberAccess	exec -> is_composite		10551031	0					
ANR	10553680	Identifier	exec		10551031	0					
ANR	10553681	Identifier	is_composite		10551031	1					
ANR	10553682	Identifier	FALSE		10551031	1					
ANR	10553683	ForStatement	for ( k = 0 ; k < nPoints + 2 ; k ++ )		10551031	18					
ANR	10553684	ForInit	k = 0 ;	824:17:28718:28723	10551031	0	True				
ANR	10553685	AssignmentExpression	k = 0		10551031	0		=			
ANR	10553686	Identifier	k		10551031	0					
ANR	10553687	PrimaryExpression	0		10551031	1					
ANR	10553688	Condition	k < nPoints + 2	824:24:28725:28739	10551031	1	True				
ANR	10553689	RelationalExpression	k < nPoints + 2		10551031	0		<			
ANR	10553690	Identifier	k		10551031	0					
ANR	10553691	AdditiveExpression	nPoints + 2		10551031	1		+			
ANR	10553692	Identifier	nPoints		10551031	0					
ANR	10553693	PrimaryExpression	2		10551031	1					
ANR	10553694	PostIncDecOperationExpression	k ++	824:41:28742:28744	10551031	2	True				
ANR	10553695	Identifier	k		10551031	0					
ANR	10553696	IncDec	++		10551031	1					
ANR	10553697	ExpressionStatement	pts -> touch [ k ] &= TT_Flag_On_Curve	825:16:28763:28796	10551031	3	True				
ANR	10553698	AssignmentExpression	pts -> touch [ k ] &= TT_Flag_On_Curve		10551031	0		&=			
ANR	10553699	ArrayIndexing	pts -> touch [ k ]		10551031	0					
ANR	10553700	PtrMemberAccess	pts -> touch		10551031	0					
ANR	10553701	Identifier	pts		10551031	0					
ANR	10553702	Identifier	touch		10551031	1					
ANR	10553703	Identifier	k		10551031	1					
ANR	10553704	Identifier	TT_Flag_On_Curve		10551031	1					
ANR	10553705	IfStatement	if ( pFont -> patented )		10551031	19					
ANR	10553706	Condition	pFont -> patented	826:16:28814:28828	10551031	0	True				
ANR	10553707	PtrMemberAccess	pFont -> patented		10551031	0					
ANR	10553708	Identifier	pFont		10551031	0					
ANR	10553709	Identifier	patented		10551031	1					
ANR	10553710	ExpressionStatement	code = TT_Err_Invalid_Engine	827:16:28847:28875	10551031	1	True				
ANR	10553711	AssignmentExpression	code = TT_Err_Invalid_Engine		10551031	0		=			
ANR	10553712	Identifier	code		10551031	0					
ANR	10553713	Identifier	TT_Err_Invalid_Engine		10551031	1					
ANR	10553714	ElseStatement	else		10551031	0					
ANR	10553715	ExpressionStatement	"code = Context_Run ( exec , FALSE )"	829:16:28910:28942	10551031	0	True				
ANR	10553716	AssignmentExpression	"code = Context_Run ( exec , FALSE )"		10551031	0		=			
ANR	10553717	Identifier	code		10551031	0					
ANR	10553718	CallExpression	"Context_Run ( exec , FALSE )"		10551031	1					
ANR	10553719	Callee	Context_Run		10551031	0					
ANR	10553720	Identifier	Context_Run		10551031	0					
ANR	10553721	ArgumentList	exec		10551031	1					
ANR	10553722	Argument	exec		10551031	0					
ANR	10553723	Identifier	exec		10551031	0					
ANR	10553724	Argument	FALSE		10551031	1					
ANR	10553725	Identifier	FALSE		10551031	0					
ANR	10553726	IfStatement	if ( ! code )		10551031	20					
ANR	10553727	Condition	! code	830:16:28960:28964	10551031	0	True				
ANR	10553728	UnaryOperationExpression	! code		10551031	0					
ANR	10553729	UnaryOperator	!		10551031	0					
ANR	10553730	Identifier	code		10551031	1					
ANR	10553731	ExpressionStatement	"cur_to_org ( nPoints + 2 , pts )"	831:16:28983:29011	10551031	1	True				
ANR	10553732	CallExpression	"cur_to_org ( nPoints + 2 , pts )"		10551031	0					
ANR	10553733	Callee	cur_to_org		10551031	0					
ANR	10553734	Identifier	cur_to_org		10551031	0					
ANR	10553735	ArgumentList	nPoints + 2		10551031	1					
ANR	10553736	Argument	nPoints + 2		10551031	0					
ANR	10553737	AdditiveExpression	nPoints + 2		10551031	0		+			
ANR	10553738	Identifier	nPoints		10551031	0					
ANR	10553739	PrimaryExpression	2		10551031	1					
ANR	10553740	Argument	pts		10551031	1					
ANR	10553741	Identifier	pts		10551031	0					
ANR	10553742	ElseStatement	else		10551031	0					
ANR	10553743	IfStatement	if ( code == TT_Err_Invalid_Engine )		10551031	0					
ANR	10553744	Condition	code == TT_Err_Invalid_Engine	832:21:29034:29062	10551031	0	True				
ANR	10553745	EqualityExpression	code == TT_Err_Invalid_Engine		10551031	0		==			
ANR	10553746	Identifier	code		10551031	0					
ANR	10553747	Identifier	TT_Err_Invalid_Engine		10551031	1					
ANR	10553748	ExpressionStatement	error = fPatented	833:16:29081:29098	10551031	1	True				
ANR	10553749	AssignmentExpression	error = fPatented		10551031	0		=			
ANR	10553750	Identifier	error		10551031	0					
ANR	10553751	Identifier	fPatented		10551031	1					
ANR	10553752	ElseStatement	else		10551031	0					
ANR	10553753	ExpressionStatement	error = fBadInstruction	835:16:29133:29156	10551031	0	True				
ANR	10553754	AssignmentExpression	error = fBadInstruction		10551031	0		=			
ANR	10553755	Identifier	error		10551031	0					
ANR	10553756	Identifier	fBadInstruction		10551031	1					
ANR	10553757	ExpressionStatement	gOutline -> sideBearing = subglyph . bbox . xMin - subglyph . pp1 . x	836:12:29170:29229	10551031	21	True				
ANR	10553758	AssignmentExpression	gOutline -> sideBearing = subglyph . bbox . xMin - subglyph . pp1 . x		10551031	0		=			
ANR	10553759	PtrMemberAccess	gOutline -> sideBearing		10551031	0					
ANR	10553760	Identifier	gOutline		10551031	0					
ANR	10553761	Identifier	sideBearing		10551031	1					
ANR	10553762	AdditiveExpression	subglyph . bbox . xMin - subglyph . pp1 . x		10551031	1		-			
ANR	10553763	MemberAccess	subglyph . bbox . xMin		10551031	0					
ANR	10553764	MemberAccess	subglyph . bbox		10551031	0					
ANR	10553765	Identifier	subglyph		10551031	0					
ANR	10553766	Identifier	bbox		10551031	1					
ANR	10553767	Identifier	xMin		10551031	1					
ANR	10553768	MemberAccess	subglyph . pp1 . x		10551031	1					
ANR	10553769	MemberAccess	subglyph . pp1		10551031	0					
ANR	10553770	Identifier	subglyph		10551031	0					
ANR	10553771	Identifier	pp1		10551031	1					
ANR	10553772	Identifier	x		10551031	1					
ANR	10553773	ExpressionStatement	gOutline -> advance . x = subglyph . pp2 . x - subglyph . pp1 . x	837:12:29243:29296	10551031	22	True				
ANR	10553774	AssignmentExpression	gOutline -> advance . x = subglyph . pp2 . x - subglyph . pp1 . x		10551031	0		=			
ANR	10553775	MemberAccess	gOutline -> advance . x		10551031	0					
ANR	10553776	PtrMemberAccess	gOutline -> advance		10551031	0					
ANR	10553777	Identifier	gOutline		10551031	0					
ANR	10553778	Identifier	advance		10551031	1					
ANR	10553779	Identifier	x		10551031	1					
ANR	10553780	AdditiveExpression	subglyph . pp2 . x - subglyph . pp1 . x		10551031	1		-			
ANR	10553781	MemberAccess	subglyph . pp2 . x		10551031	0					
ANR	10553782	MemberAccess	subglyph . pp2		10551031	0					
ANR	10553783	Identifier	subglyph		10551031	0					
ANR	10553784	Identifier	pp2		10551031	1					
ANR	10553785	Identifier	x		10551031	1					
ANR	10553786	MemberAccess	subglyph . pp1 . x		10551031	1					
ANR	10553787	MemberAccess	subglyph . pp1		10551031	0					
ANR	10553788	Identifier	subglyph		10551031	0					
ANR	10553789	Identifier	pp1		10551031	1					
ANR	10553790	Identifier	x		10551031	1					
ANR	10553791	ExpressionStatement	Unset_CodeRange ( exec )	839:8:29316:29337	10551031	26	True				
ANR	10553792	CallExpression	Unset_CodeRange ( exec )		10551031	0					
ANR	10553793	Callee	Unset_CodeRange		10551031	0					
ANR	10553794	Identifier	Unset_CodeRange		10551031	0					
ANR	10553795	ArgumentList	exec		10551031	1					
ANR	10553796	Argument	exec		10551031	0					
ANR	10553797	Identifier	exec		10551031	0					
ANR	10553798	ExpressionStatement	"Clear_CodeRange ( exec , TT_CodeRange_Glyph )"	840:8:29347:29388	10551031	27	True				
ANR	10553799	CallExpression	"Clear_CodeRange ( exec , TT_CodeRange_Glyph )"		10551031	0					
ANR	10553800	Callee	Clear_CodeRange		10551031	0					
ANR	10553801	Identifier	Clear_CodeRange		10551031	0					
ANR	10553802	ArgumentList	exec		10551031	1					
ANR	10553803	Argument	exec		10551031	0					
ANR	10553804	Identifier	exec		10551031	0					
ANR	10553805	Argument	TT_CodeRange_Glyph		10551031	1					
ANR	10553806	Identifier	TT_CodeRange_Glyph		10551031	0					
ANR	10553807	ElseStatement	else		10551031	0					
ANR	10553808	ExpressionStatement	error = fBadFontData	842:8:29409:29429	10551031	0	True				
ANR	10553809	AssignmentExpression	error = fBadFontData		10551031	0		=			
ANR	10553810	Identifier	error		10551031	0					
ANR	10553811	Identifier	fBadFontData		10551031	1					
ANR	10553812	GotoStatement	goto ex ;	843:4:29435:29442	10551031	47	True				
ANR	10553813	Identifier	ex		10551031	0					
ANR	10553814	Label	errex :	844:0:29444:29449	10551031	48	True				
ANR	10553815	Identifier	errex		10551031	0					
ANR	10553816	ExpressionStatement		844:6:29450:29450	10551031	49	True				
ANR	10553817	ExpressionStatement	error = fBadFontData	845:4:29456:29476	10551031	50	True				
ANR	10553818	AssignmentExpression	error = fBadFontData		10551031	0		=			
ANR	10553819	Identifier	error		10551031	0					
ANR	10553820	Identifier	fBadFontData		10551031	1					
ANR	10553821	Label	ex :	846:0:29478:29480	10551031	51	True				
ANR	10553822	Identifier	ex		10551031	0					
ANR	10553823	ExpressionStatement		846:3:29481:29481	10551031	52	True				
ANR	10553824	ExpressionStatement	"r -> ReleaseGlyph ( r , glyphIndex )"	847:4:29487:29517	10551031	53	True				
ANR	10553825	CallExpression	"r -> ReleaseGlyph ( r , glyphIndex )"		10551031	0					
ANR	10553826	Callee	r -> ReleaseGlyph		10551031	0					
ANR	10553827	PtrMemberAccess	r -> ReleaseGlyph		10551031	0					
ANR	10553828	Identifier	r		10551031	0					
ANR	10553829	Identifier	ReleaseGlyph		10551031	1					
ANR	10553830	ArgumentList	r		10551031	1					
ANR	10553831	Argument	r		10551031	0					
ANR	10553832	Identifier	r		10551031	0					
ANR	10553833	Argument	glyphIndex		10551031	1					
ANR	10553834	Identifier	glyphIndex		10551031	0					
ANR	10553835	IfStatement	if ( error == fBadInstruction && execute_bytecode )		10551031	54					
ANR	10553836	Condition	error == fBadInstruction && execute_bytecode	849:8:29528:29571	10551031	0	True				
ANR	10553837	AndExpression	error == fBadInstruction && execute_bytecode		10551031	0		&&			
ANR	10553838	EqualityExpression	error == fBadInstruction		10551031	0		==			
ANR	10553839	Identifier	error		10551031	0					
ANR	10553840	Identifier	fBadInstruction		10551031	1					
ANR	10553841	Identifier	execute_bytecode		10551031	1					
ANR	10553842	CompoundStatement		363:54:14459:14459	10551031	1					
ANR	10553843	ExpressionStatement	nNextGlyphPtr = 0	851:8:29656:29673	10551031	0	True				
ANR	10553844	AssignmentExpression	nNextGlyphPtr = 0		10551031	0		=			
ANR	10553845	Identifier	nNextGlyphPtr		10551031	0					
ANR	10553846	PrimaryExpression	0		10551031	1					
ANR	10553847	ExpressionStatement	exec = pFont -> exec	852:8:29683:29701	10551031	1	True				
ANR	10553848	AssignmentExpression	exec = pFont -> exec		10551031	0		=			
ANR	10553849	Identifier	exec		10551031	0					
ANR	10553850	PtrMemberAccess	pFont -> exec		10551031	1					
ANR	10553851	Identifier	pFont		10551031	0					
ANR	10553852	Identifier	exec		10551031	1					
ANR	10553853	ExpressionStatement	pts = & exec -> pts	853:8:29711:29727	10551031	2	True				
ANR	10553854	AssignmentExpression	pts = & exec -> pts		10551031	0		=			
ANR	10553855	Identifier	pts		10551031	0					
ANR	10553856	UnaryOperationExpression	& exec -> pts		10551031	1					
ANR	10553857	UnaryOperator	&		10551031	0					
ANR	10553858	PtrMemberAccess	exec -> pts		10551031	1					
ANR	10553859	Identifier	exec		10551031	0					
ANR	10553860	Identifier	pts		10551031	1					
ANR	10553861	ExpressionStatement	usage = tti -> usage + tti -> usage_top	854:8:29737:29772	10551031	3	True				
ANR	10553862	AssignmentExpression	usage = tti -> usage + tti -> usage_top		10551031	0		=			
ANR	10553863	Identifier	usage		10551031	0					
ANR	10553864	AdditiveExpression	tti -> usage + tti -> usage_top		10551031	1		+			
ANR	10553865	PtrMemberAccess	tti -> usage		10551031	0					
ANR	10553866	Identifier	tti		10551031	0					
ANR	10553867	Identifier	usage		10551031	1					
ANR	10553868	PtrMemberAccess	tti -> usage_top		10551031	1					
ANR	10553869	Identifier	tti		10551031	0					
ANR	10553870	Identifier	usage_top		10551031	1					
ANR	10553871	ExpressionStatement	glyph = NULL	855:8:29782:29794	10551031	4	True				
ANR	10553872	AssignmentExpression	glyph = NULL		10551031	0		=			
ANR	10553873	Identifier	glyph		10551031	0					
ANR	10553874	Identifier	NULL		10551031	1					
ANR	10553875	ExpressionStatement	self -> nPointsTotal -= ( nPoints + 2 )	856:8:29804:29839	10551031	5	True				
ANR	10553876	AssignmentExpression	self -> nPointsTotal -= ( nPoints + 2 )		10551031	0		-=			
ANR	10553877	PtrMemberAccess	self -> nPointsTotal		10551031	0					
ANR	10553878	Identifier	self		10551031	0					
ANR	10553879	Identifier	nPointsTotal		10551031	1					
ANR	10553880	AdditiveExpression	nPoints + 2		10551031	1		+			
ANR	10553881	Identifier	nPoints		10551031	0					
ANR	10553882	PrimaryExpression	2		10551031	1					
ANR	10553883	ExpressionStatement	nPoints = 0	857:8:29849:29860	10551031	6	True				
ANR	10553884	AssignmentExpression	nPoints = 0		10551031	0		=			
ANR	10553885	Identifier	nPoints		10551031	0					
ANR	10553886	PrimaryExpression	0		10551031	1					
ANR	10553887	ExpressionStatement	self -> nContoursTotal -= gOutline -> contourCount	858:8:29870:29916	10551031	7	True				
ANR	10553888	AssignmentExpression	self -> nContoursTotal -= gOutline -> contourCount		10551031	0		-=			
ANR	10553889	PtrMemberAccess	self -> nContoursTotal		10551031	0					
ANR	10553890	Identifier	self		10551031	0					
ANR	10553891	Identifier	nContoursTotal		10551031	1					
ANR	10553892	PtrMemberAccess	gOutline -> contourCount		10551031	1					
ANR	10553893	Identifier	gOutline		10551031	0					
ANR	10553894	Identifier	contourCount		10551031	1					
ANR	10553895	ExpressionStatement	error = fNoError	859:8:29926:29942	10551031	8	True				
ANR	10553896	AssignmentExpression	error = fNoError		10551031	0		=			
ANR	10553897	Identifier	error		10551031	0					
ANR	10553898	Identifier	fNoError		10551031	1					
ANR	10553899	ExpressionStatement	execute_bytecode = false	860:8:29952:29976	10551031	9	True				
ANR	10553900	AssignmentExpression	execute_bytecode = false		10551031	0		=			
ANR	10553901	Identifier	execute_bytecode		10551031	0					
ANR	10553902	Identifier	false		10551031	1					
ANR	10553903	ExpressionStatement	"r -> Seek ( r , nPosBeg )"	861:8:29986:30005	10551031	10	True				
ANR	10553904	CallExpression	"r -> Seek ( r , nPosBeg )"		10551031	0					
ANR	10553905	Callee	r -> Seek		10551031	0					
ANR	10553906	PtrMemberAccess	r -> Seek		10551031	0					
ANR	10553907	Identifier	r		10551031	0					
ANR	10553908	Identifier	Seek		10551031	1					
ANR	10553909	ArgumentList	r		10551031	1					
ANR	10553910	Argument	r		10551031	0					
ANR	10553911	Identifier	r		10551031	0					
ANR	10553912	Argument	nPosBeg		10551031	1					
ANR	10553913	Identifier	nPosBeg		10551031	0					
ANR	10553914	GotoStatement	goto retry ;	862:8:30015:30025	10551031	11	True				
ANR	10553915	Identifier	retry		10551031	0					
ANR	10553916	ReturnStatement	return error ;	865:4:30038:30050	10551031	55	True				
ANR	10553917	Identifier	error		10551031	0					
ANR	10553918	ReturnType	static FontError		10551031	1					
ANR	10553919	Identifier	ttfOutliner__BuildGlyphOutlineAux		10551031	2					
ANR	10553920	ParameterList	"ttfOutliner * self , int glyphIndex , FixMatrix * m_orig , ttfGlyphOutline * gOutline"		10551031	3					
ANR	10553921	Parameter	ttfOutliner * self	485:51:15021:15037	10551031	0	True				
ANR	10553922	ParameterType	ttfOutliner *		10551031	0					
ANR	10553923	Identifier	self		10551031	1					
ANR	10553924	Parameter	int glyphIndex	485:70:15040:15053	10551031	1	True				
ANR	10553925	ParameterType	int		10551031	0					
ANR	10553926	Identifier	glyphIndex		10551031	1					
ANR	10553927	Parameter	FixMatrix * m_orig	486:12:15068:15084	10551031	2	True				
ANR	10553928	ParameterType	FixMatrix *		10551031	0					
ANR	10553929	Identifier	m_orig		10551031	1					
ANR	10553930	Parameter	ttfGlyphOutline * gOutline	486:31:15087:15111	10551031	3	True				
ANR	10553931	ParameterType	ttfGlyphOutline *		10551031	0					
ANR	10553932	Identifier	gOutline		10551031	1					
ANR	10553933	CFGEntryNode	ENTRY		10551031		True				
ANR	10553934	CFGExitNode	EXIT		10551031		True				
ANR	10553935	Symbol	pts -> n_points		10551031						
ANR	10553936	Symbol	r -> Eof		10551031						
ANR	10553937	Symbol	tti -> usage_top		10551031						
ANR	10553938	Symbol	subglyph . pp2		10551031						
ANR	10553939	Symbol	fMemoryError		10551031						
ANR	10553940	Symbol	& glyph		10551031						
ANR	10553941	Symbol	subglyph . pp1		10551031						
ANR	10553942	Symbol	* pts -> org_x		10551031						
ANR	10553943	Symbol	* pts -> org_y		10551031						
ANR	10553944	Symbol	* endPoints		10551031						
ANR	10553945	Symbol	fPatented		10551031						
ANR	10553946	Symbol	self -> bOutline		10551031						
ANR	10553947	Symbol	* self		10551031						
ANR	10553948	Symbol	MORE_COMPONENTS		10551031						
ANR	10553949	Symbol	* pFont -> inst		10551031						
ANR	10553950	Symbol	stop		10551031						
ANR	10553951	Symbol	gOutline -> yMaxB		10551031						
ANR	10553952	Symbol	nNextGlyphPtr		10551031						
ANR	10553953	Symbol	out . contourCount		10551031						
ANR	10553954	Symbol	* * pts		10551031						
ANR	10553955	Symbol	out . bCompound		10551031						
ANR	10553956	Symbol	e -> m . tx		10551031						
ANR	10553957	Symbol	e -> m . ty		10551031						
ANR	10553958	Symbol	glyph_size		10551031						
ANR	10553959	Symbol	& subglyph		10551031						
ANR	10553960	Symbol	WE_HAVE_A_SCALE		10551031						
ANR	10553961	Symbol	fBadInstruction		10551031						
ANR	10553962	Symbol	ttfReader__SignedByte		10551031						
ANR	10553963	Symbol	pts -> touch		10551031						
ANR	10553964	Symbol	m . tx		10551031						
ANR	10553965	Symbol	m . ty		10551031						
ANR	10553966	Symbol	nPosBeg		10551031						
ANR	10553967	Symbol	self -> bVertical		10551031						
ANR	10553968	Symbol	subglyph . advanceWidth		10551031						
ANR	10553969	Symbol	e		10551031						
ANR	10553970	Symbol	i		10551031						
ANR	10553971	Symbol	j		10551031						
ANR	10553972	Symbol	k		10551031						
ANR	10553973	Symbol	* gOutline		10551031						
ANR	10553974	Symbol	subglyph . bbox . yMax		10551031						
ANR	10553975	Symbol	m		10551031						
ANR	10553976	Symbol	NEXT_X_IS_ZERO		10551031						
ANR	10553977	Symbol	pFont -> inst -> GS		10551031						
ANR	10553978	Symbol	ttfReader__UShort		10551031						
ANR	10553979	Symbol	r		10551031						
ANR	10553980	Symbol	& out		10551031						
ANR	10553981	Symbol	* e -> arg2		10551031						
ANR	10553982	Symbol	skip_instructions		10551031						
ANR	10553983	Symbol	exec -> is_composite		10551031						
ANR	10553984	Symbol	* e -> arg1		10551031						
ANR	10553985	Symbol	x		10551031						
ANR	10553986	Symbol	y		10551031						
ANR	10553987	Symbol	TT_Err_Invalid_Displacement		10551031						
ANR	10553988	Symbol	bInsOK		10551031						
ANR	10553989	Symbol	subglyph . zone		10551031						
ANR	10553990	Symbol	gOutline -> advance		10551031						
ANR	10553991	Symbol	e -> index		10551031						
ANR	10553992	Symbol	Set_CodeRange		10551031						
ANR	10553993	Symbol	gOutline -> sideBearing		10551031						
ANR	10553994	Symbol	r -> Error		10551031						
ANR	10553995	Symbol	* tti		10551031						
ANR	10553996	Symbol	fBadFontData		10551031						
ANR	10553997	Symbol	pFont		10551031						
ANR	10553998	Symbol	SHORT_Y_IS_POS		10551031						
ANR	10553999	Symbol	subglyph		10551031						
ANR	10554000	Symbol	TT_Flag_On_Curve		10551031						
ANR	10554001	Symbol	* onCurve		10551031						
ANR	10554002	Symbol	pts -> org_x		10551031						
ANR	10554003	Symbol	pts -> n_contours		10551031						
ANR	10554004	Symbol	gOutline -> bCompound		10551031						
ANR	10554005	Symbol	pts -> cur_x		10551031						
ANR	10554006	Symbol	gOutline -> advance . x		10551031						
ANR	10554007	Symbol	gOutline -> advance . y		10551031						
ANR	10554008	Symbol	pts -> cur_y		10551031						
ANR	10554009	Symbol	pFont -> exec		10551031						
ANR	10554010	Symbol	bHaveInstructions		10551031						
ANR	10554011	Symbol	* * e		10551031						
ANR	10554012	Symbol	* pts -> contours		10551031						
ANR	10554013	Symbol	n_ins		10551031						
ANR	10554014	Symbol	count		10551031						
ANR	10554015	Symbol	e -> m		10551031						
ANR	10554016	Symbol	exec -> pts		10551031						
ANR	10554017	Symbol	tti -> usage		10551031						
ANR	10554018	Symbol	m . d		10551031						
ANR	10554019	Symbol	arg2		10551031						
ANR	10554020	Symbol	m . c		10551031						
ANR	10554021	Symbol	m . b		10551031						
ANR	10554022	Symbol	nAdvance		10551031						
ANR	10554023	Symbol	m . a		10551031						
ANR	10554024	Symbol	arg1		10551031						
ANR	10554025	Symbol	ttfOutliner__BuildGlyphOutlineAux		10551031						
ANR	10554026	Symbol	exec -> n_points		10551031						
ANR	10554027	Symbol	exec		10551031						
ANR	10554028	Symbol	out . advance . x		10551031						
ANR	10554029	Symbol	TT_CodeRange_Glyph		10551031						
ANR	10554030	Symbol	fNoError		10551031						
ANR	10554031	Symbol	nContoursStored		10551031						
ANR	10554032	Symbol	gOutline -> contourCount		10551031						
ANR	10554033	Symbol	subglyph . bbox . xMax		10551031						
ANR	10554034	Symbol	tti -> usage_size		10551031						
ANR	10554035	Symbol	subglyph . pp1 . y		10551031						
ANR	10554036	Symbol	subglyph . pp1 . x		10551031						
ANR	10554037	Symbol	WE_HAVE_INSTRUCTIONS		10551031						
ANR	10554038	Symbol	self -> bFirst		10551031						
ANR	10554039	Symbol	WE_HAVE_AN_X_AND_Y_SCALE		10551031						
ANR	10554040	Symbol	pFont -> patented		10551031						
ANR	10554041	Symbol	pts -> org_y		10551031						
ANR	10554042	Symbol	self -> nPointsTotal		10551031						
ANR	10554043	Symbol	false		10551031						
ANR	10554044	Symbol	fGlyphNotFound		10551031						
ANR	10554045	Symbol	pFont -> inst		10551031						
ANR	10554046	Symbol	subglyph . bbox		10551031						
ANR	10554047	Symbol	pts		10551031						
ANR	10554048	Symbol	out . advance		10551031						
ANR	10554049	Symbol	glyph		10551031						
ANR	10554050	Symbol	out . pointCount		10551031						
ANR	10554051	Symbol	out . sideBearing		10551031						
ANR	10554052	Symbol	Context_Run		10551031						
ANR	10554053	Symbol	sideBearing		10551031						
ANR	10554054	Symbol	FALSE		10551031						
ANR	10554055	Symbol	gOutline -> xMinB		10551031						
ANR	10554056	Symbol	e -> flags		10551031						
ANR	10554057	Symbol	pts -> contours		10551031						
ANR	10554058	Symbol	REPEAT_FLAGS		10551031						
ANR	10554059	Symbol	usage		10551031						
ANR	10554060	Symbol	execute_bytecode		10551031						
ANR	10554061	Symbol	& sideBearing		10551031						
ANR	10554062	Symbol	exec -> n_contours		10551031						
ANR	10554063	Symbol	& nAdvance		10551031						
ANR	10554064	Symbol	* pts -> cur_x		10551031						
ANR	10554065	Symbol	& exec -> pts		10551031						
ANR	10554066	Symbol	& glyph_size		10551031						
ANR	10554067	Symbol	endPoints		10551031						
ANR	10554068	Symbol	NEXT_Y_IS_ZERO		10551031						
ANR	10554069	Symbol	index		10551031						
ANR	10554070	Symbol	YSHORT		10551031						
ANR	10554071	Symbol	nPos		10551031						
ANR	10554072	Symbol	ttfReader__Byte		10551031						
ANR	10554073	Symbol	shortToF26Dot6		10551031						
ANR	10554074	Symbol	* y ++		10551031						
ANR	10554075	Symbol	gOutline		10551031						
ANR	10554076	Symbol	* gOutline -> pointCount		10551031						
ANR	10554077	Symbol	onCurve		10551031						
ANR	10554078	Symbol	subglyph . leftBearing		10551031						
ANR	10554079	Symbol	subglyph . pp2 . x		10551031						
ANR	10554080	Symbol	subglyph . pp2 . y		10551031						
ANR	10554081	Symbol	TT_Err_Invalid_Engine		10551031						
ANR	10554082	Symbol	flag		10551031						
ANR	10554083	Symbol	gOutline -> pointCount		10551031						
ANR	10554084	Symbol	glyphIndex		10551031						
ANR	10554085	Symbol	flags		10551031						
ANR	10554086	Symbol	nUsage		10551031						
ANR	10554087	Symbol	nPoints		10551031						
ANR	10554088	Symbol	out		10551031						
ANR	10554089	Symbol	coord		10551031						
ANR	10554090	Symbol	WE_HAVE_A_TWO_BY_TWO		10551031						
ANR	10554091	Symbol	* exec		10551031						
ANR	10554092	Symbol	self -> nContoursTotal		10551031						
ANR	10554093	Symbol	* pts -> touch		10551031						
ANR	10554094	Symbol	gOutline -> yMinB		10551031						
ANR	10554095	Symbol	self -> pFont		10551031						
ANR	10554096	Symbol	self		10551031						
ANR	10554097	Symbol	* * pFont		10551031						
ANR	10554098	Symbol	self -> r		10551031						
ANR	10554099	Symbol	r -> get_metrics		10551031						
ANR	10554100	Symbol	SHORT_X_IS_POS		10551031						
ANR	10554101	Symbol	pFont -> nMaxComponents		10551031						
ANR	10554102	Symbol	* pts		10551031						
ANR	10554103	Symbol	Scale_Y		10551031						
ANR	10554104	Symbol	* x ++		10551031						
ANR	10554105	Symbol	Scale_X		10551031						
ANR	10554106	Symbol	subglyph . bbox . yMin		10551031						
ANR	10554107	Symbol	TT_Err_Invalid_Opcode		10551031						
ANR	10554108	Symbol	NULL		10551031						
ANR	10554109	Symbol	gOutline -> xMaxB		10551031						
ANR	10554110	Symbol	TRUE		10551031						
ANR	10554111	Symbol	e -> arg2		10551031						
ANR	10554112	Symbol	ARG_1_AND_2_ARE_WORDS		10551031						
ANR	10554113	Symbol	ONCURVE		10551031						
ANR	10554114	Symbol	e -> arg1		10551031						
ANR	10554115	Symbol	& e -> m		10551031						
ANR	10554116	Symbol	true		10551031						
ANR	10554117	Symbol	m_orig		10551031						
ANR	10554118	Symbol	* onCurve ++		10551031						
ANR	10554119	Symbol	code		10551031						
ANR	10554120	Symbol	* pFont		10551031						
ANR	10554121	Symbol	& exec -> metrics		10551031						
ANR	10554122	Symbol	error		10551031						
ANR	10554123	Symbol	ttfReader__Short		10551031						
ANR	10554124	Symbol	pFont -> tti		10551031						
ANR	10554125	Symbol	* gOutline -> contourCount		10551031						
ANR	10554126	Symbol	ARGS_ARE_XY_VALUES		10551031						
ANR	10554127	Symbol	XSHORT		10551031						
ANR	10554128	Symbol	nPointsStored		10551031						
ANR	10554129	Symbol	r -> LoadGlyph		10551031						
ANR	10554130	Symbol	* nPoints		10551031						
ANR	10554131	Symbol	tti		10551031						
ANR	10554132	Symbol	pFont -> inst -> GS . instruct_control		10551031						
ANR	10554133	Symbol	* e		10551031						
ANR	10554134	Symbol	* * gOutline		10551031						
ANR	10554135	Symbol	* i		10551031						
ANR	10554136	Symbol	* j		10551031						
ANR	10554137	Symbol	* k		10551031						
ANR	10554138	Symbol	* r		10551031						
ANR	10554139	Symbol	r -> Tell		10551031						
ANR	10554140	Symbol	USE_MY_METRICS		10551031						
ANR	10554141	Symbol	subglyph . bbox . xMin		10551031						
ANR	10554142	Function	ttfOutliner__BuildGlyphOutline	868:0:30055:30503							
ANR	10554143	FunctionDef	"ttfOutliner__BuildGlyphOutline (ttfOutliner * self , int glyphIndex , float orig_x , float orig_y , ttfGlyphOutline * gOutline)"		10554142	0					
ANR	10554144	CompoundStatement		870:0:30205:30503	10554142	0					
ANR	10554145	IdentifierDeclStatement	"FixMatrix m_orig = { 1 << 16 , 0 , 0 , 1 << 16 , 0 , 0 } ;"	871:4:30211:30260	10554142	0	True				
ANR	10554146	IdentifierDecl	"m_orig = { 1 << 16 , 0 , 0 , 1 << 16 , 0 , 0 }"		10554142	0					
ANR	10554147	IdentifierDeclType	FixMatrix		10554142	0					
ANR	10554148	Identifier	m_orig		10554142	1					
ANR	10554149	AssignmentExpression	"m_orig = { 1 << 16 , 0 , 0 , 1 << 16 , 0 , 0 }"		10554142	2		=			
ANR	10554150	Identifier	m_orig		10554142	0					
ANR	10554151	InitializerList	1 << 16		10554142	1					
ANR	10554152	ShiftExpression	1 << 16		10554142	0		<<			
ANR	10554153	PrimaryExpression	1		10554142	0					
ANR	10554154	PrimaryExpression	16		10554142	1					
ANR	10554155	PrimaryExpression	0		10554142	1					
ANR	10554156	PrimaryExpression	0		10554142	2					
ANR	10554157	ShiftExpression	1 << 16		10554142	3		<<			
ANR	10554158	PrimaryExpression	1		10554142	0					
ANR	10554159	PrimaryExpression	16		10554142	1					
ANR	10554160	PrimaryExpression	0		10554142	4					
ANR	10554161	PrimaryExpression	0		10554142	5					
ANR	10554162	ExpressionStatement	m_orig . tx = floatToF16Dot16 ( orig_x )	874:4:30342:30377	10554142	1	True				
ANR	10554163	AssignmentExpression	m_orig . tx = floatToF16Dot16 ( orig_x )		10554142	0		=			
ANR	10554164	MemberAccess	m_orig . tx		10554142	0					
ANR	10554165	Identifier	m_orig		10554142	0					
ANR	10554166	Identifier	tx		10554142	1					
ANR	10554167	CallExpression	floatToF16Dot16 ( orig_x )		10554142	1					
ANR	10554168	Callee	floatToF16Dot16		10554142	0					
ANR	10554169	Identifier	floatToF16Dot16		10554142	0					
ANR	10554170	ArgumentList	orig_x		10554142	1					
ANR	10554171	Argument	orig_x		10554142	0					
ANR	10554172	Identifier	orig_x		10554142	0					
ANR	10554173	ExpressionStatement	m_orig . ty = floatToF16Dot16 ( orig_y )	875:4:30383:30418	10554142	2	True				
ANR	10554174	AssignmentExpression	m_orig . ty = floatToF16Dot16 ( orig_y )		10554142	0		=			
ANR	10554175	MemberAccess	m_orig . ty		10554142	0					
ANR	10554176	Identifier	m_orig		10554142	0					
ANR	10554177	Identifier	ty		10554142	1					
ANR	10554178	CallExpression	floatToF16Dot16 ( orig_y )		10554142	1					
ANR	10554179	Callee	floatToF16Dot16		10554142	0					
ANR	10554180	Identifier	floatToF16Dot16		10554142	0					
ANR	10554181	ArgumentList	orig_y		10554142	1					
ANR	10554182	Argument	orig_y		10554142	0					
ANR	10554183	Identifier	orig_y		10554142	0					
ANR	10554184	ReturnStatement	"return ttfOutliner__BuildGlyphOutlineAux ( self , glyphIndex , & m_orig , gOutline ) ;"	876:4:30424:30501	10554142	3	True				
ANR	10554185	CallExpression	"ttfOutliner__BuildGlyphOutlineAux ( self , glyphIndex , & m_orig , gOutline )"		10554142	0					
ANR	10554186	Callee	ttfOutliner__BuildGlyphOutlineAux		10554142	0					
ANR	10554187	Identifier	ttfOutliner__BuildGlyphOutlineAux		10554142	0					
ANR	10554188	ArgumentList	self		10554142	1					
ANR	10554189	Argument	self		10554142	0					
ANR	10554190	Identifier	self		10554142	0					
ANR	10554191	Argument	glyphIndex		10554142	1					
ANR	10554192	Identifier	glyphIndex		10554142	0					
ANR	10554193	Argument	& m_orig		10554142	2					
ANR	10554194	UnaryOperationExpression	& m_orig		10554142	0					
ANR	10554195	UnaryOperator	&		10554142	0					
ANR	10554196	Identifier	m_orig		10554142	1					
ANR	10554197	Argument	gOutline		10554142	3					
ANR	10554198	Identifier	gOutline		10554142	0					
ANR	10554199	ReturnType	static FontError		10554142	1					
ANR	10554200	Identifier	ttfOutliner__BuildGlyphOutline		10554142	2					
ANR	10554201	ParameterList	"ttfOutliner * self , int glyphIndex , float orig_x , float orig_y , ttfGlyphOutline * gOutline"		10554142	3					
ANR	10554202	Parameter	ttfOutliner * self	868:48:30103:30119	10554142	0	True				
ANR	10554203	ParameterType	ttfOutliner *		10554142	0					
ANR	10554204	Identifier	self		10554142	1					
ANR	10554205	Parameter	int glyphIndex	868:67:30122:30135	10554142	1	True				
ANR	10554206	ParameterType	int		10554142	0					
ANR	10554207	Identifier	glyphIndex		10554142	1					
ANR	10554208	Parameter	float orig_x	869:12:30150:30161	10554142	2	True				
ANR	10554209	ParameterType	float		10554142	0					
ANR	10554210	Identifier	orig_x		10554142	1					
ANR	10554211	Parameter	float orig_y	869:26:30164:30175	10554142	3	True				
ANR	10554212	ParameterType	float		10554142	0					
ANR	10554213	Identifier	orig_y		10554142	1					
ANR	10554214	Parameter	ttfGlyphOutline * gOutline	869:40:30178:30202	10554142	4	True				
ANR	10554215	ParameterType	ttfGlyphOutline *		10554142	0					
ANR	10554216	Identifier	gOutline		10554142	1					
ANR	10554217	CFGEntryNode	ENTRY		10554142		True				
ANR	10554218	CFGExitNode	EXIT		10554142		True				
ANR	10554219	Symbol	floatToF16Dot16		10554142						
ANR	10554220	Symbol	glyphIndex		10554142						
ANR	10554221	Symbol	ttfOutliner__BuildGlyphOutlineAux		10554142						
ANR	10554222	Symbol	self		10554142						
ANR	10554223	Symbol	m_orig . ty		10554142						
ANR	10554224	Symbol	orig_y		10554142						
ANR	10554225	Symbol	gOutline		10554142						
ANR	10554226	Symbol	orig_x		10554142						
ANR	10554227	Symbol	m_orig		10554142						
ANR	10554228	Symbol	m_orig . tx		10554142						
ANR	10554229	Symbol	& m_orig		10554142						
ANR	10554230	Function	ttfOutliner__DrawGlyphOutline	881:0:30571:36044							
ANR	10554231	FunctionDef	ttfOutliner__DrawGlyphOutline (ttfOutliner * self)		10554230	0					
ANR	10554232	CompoundStatement		882:0:30625:36044	10554230	0					
ANR	10554233	IdentifierDeclStatement	ttfGlyphOutline * out = & self -> out ;	882:3:30629:30662	10554230	0	True				
ANR	10554234	IdentifierDecl	* out = & self -> out		10554230	0					
ANR	10554235	IdentifierDeclType	ttfGlyphOutline *		10554230	0					
ANR	10554236	Identifier	out		10554230	1					
ANR	10554237	AssignmentExpression	* out = & self -> out		10554230	2		=			
ANR	10554238	Identifier	out		10554230	0					
ANR	10554239	UnaryOperationExpression	& self -> out		10554230	1					
ANR	10554240	UnaryOperator	&		10554230	0					
ANR	10554241	PtrMemberAccess	self -> out		10554230	1					
ANR	10554242	Identifier	self		10554230	0					
ANR	10554243	Identifier	out		10554230	1					
ANR	10554244	IdentifierDeclStatement	FloatMatrix * m = & self -> post_transform ;	883:4:30668:30706	10554230	1	True				
ANR	10554245	IdentifierDecl	* m = & self -> post_transform		10554230	0					
ANR	10554246	IdentifierDeclType	FloatMatrix *		10554230	0					
ANR	10554247	Identifier	m		10554230	1					
ANR	10554248	AssignmentExpression	* m = & self -> post_transform		10554230	2		=			
ANR	10554249	Identifier	m		10554230	0					
ANR	10554250	UnaryOperationExpression	& self -> post_transform		10554230	1					
ANR	10554251	UnaryOperator	&		10554230	0					
ANR	10554252	PtrMemberAccess	self -> post_transform		10554230	1					
ANR	10554253	Identifier	self		10554230	0					
ANR	10554254	Identifier	post_transform		10554230	1					
ANR	10554255	IdentifierDeclStatement	ttfFont * pFont = self -> pFont ;	884:4:30712:30740	10554230	2	True				
ANR	10554256	IdentifierDecl	* pFont = self -> pFont		10554230	0					
ANR	10554257	IdentifierDeclType	ttfFont *		10554230	0					
ANR	10554258	Identifier	pFont		10554230	1					
ANR	10554259	AssignmentExpression	* pFont = self -> pFont		10554230	2		=			
ANR	10554260	Identifier	pFont		10554230	0					
ANR	10554261	PtrMemberAccess	self -> pFont		10554230	1					
ANR	10554262	Identifier	self		10554230	0					
ANR	10554263	Identifier	pFont		10554230	1					
ANR	10554264	IdentifierDeclStatement	ttfExport * exp = self -> exp ;	885:4:30746:30772	10554230	3	True				
ANR	10554265	IdentifierDecl	* exp = self -> exp		10554230	0					
ANR	10554266	IdentifierDeclType	ttfExport *		10554230	0					
ANR	10554267	Identifier	exp		10554230	1					
ANR	10554268	AssignmentExpression	* exp = self -> exp		10554230	2		=			
ANR	10554269	Identifier	exp		10554230	0					
ANR	10554270	PtrMemberAccess	self -> exp		10554230	1					
ANR	10554271	Identifier	self		10554230	0					
ANR	10554272	Identifier	exp		10554230	1					
ANR	10554273	IdentifierDeclStatement	TExecution_Context * exec = pFont -> exec ;	886:4:30778:30816	10554230	4	True				
ANR	10554274	IdentifierDecl	* exec = pFont -> exec		10554230	0					
ANR	10554275	IdentifierDeclType	TExecution_Context *		10554230	0					
ANR	10554276	Identifier	exec		10554230	1					
ANR	10554277	AssignmentExpression	* exec = pFont -> exec		10554230	2		=			
ANR	10554278	Identifier	exec		10554230	0					
ANR	10554279	PtrMemberAccess	pFont -> exec		10554230	1					
ANR	10554280	Identifier	pFont		10554230	0					
ANR	10554281	Identifier	exec		10554230	1					
ANR	10554282	IdentifierDeclStatement	TGlyph_Zone * epts = & exec -> pts ;	887:4:30822:30852	10554230	5	True				
ANR	10554283	IdentifierDecl	* epts = & exec -> pts		10554230	0					
ANR	10554284	IdentifierDeclType	TGlyph_Zone *		10554230	0					
ANR	10554285	Identifier	epts		10554230	1					
ANR	10554286	AssignmentExpression	* epts = & exec -> pts		10554230	2		=			
ANR	10554287	Identifier	epts		10554230	0					
ANR	10554288	UnaryOperationExpression	& exec -> pts		10554230	1					
ANR	10554289	UnaryOperator	&		10554230	0					
ANR	10554290	PtrMemberAccess	exec -> pts		10554230	1					
ANR	10554291	Identifier	exec		10554230	0					
ANR	10554292	Identifier	pts		10554230	1					
ANR	10554293	IdentifierDeclStatement	short * endP = epts -> contours ;	888:4:30858:30886	10554230	6	True				
ANR	10554294	IdentifierDecl	* endP = epts -> contours		10554230	0					
ANR	10554295	IdentifierDeclType	short *		10554230	0					
ANR	10554296	Identifier	endP		10554230	1					
ANR	10554297	AssignmentExpression	* endP = epts -> contours		10554230	2		=			
ANR	10554298	Identifier	endP		10554230	0					
ANR	10554299	PtrMemberAccess	epts -> contours		10554230	1					
ANR	10554300	Identifier	epts		10554230	0					
ANR	10554301	Identifier	contours		10554230	1					
ANR	10554302	IdentifierDeclStatement	byte * onCurve = epts -> touch ;	889:4:30892:30919	10554230	7	True				
ANR	10554303	IdentifierDecl	* onCurve = epts -> touch		10554230	0					
ANR	10554304	IdentifierDeclType	byte *		10554230	0					
ANR	10554305	Identifier	onCurve		10554230	1					
ANR	10554306	AssignmentExpression	* onCurve = epts -> touch		10554230	2		=			
ANR	10554307	Identifier	onCurve		10554230	0					
ANR	10554308	PtrMemberAccess	epts -> touch		10554230	1					
ANR	10554309	Identifier	epts		10554230	0					
ANR	10554310	Identifier	touch		10554230	1					
ANR	10554311	IdentifierDeclStatement	F26Dot6 * x = epts -> org_x ;	890:4:30925:30949	10554230	8	True				
ANR	10554312	IdentifierDecl	* x = epts -> org_x		10554230	0					
ANR	10554313	IdentifierDeclType	F26Dot6 *		10554230	0					
ANR	10554314	Identifier	x		10554230	1					
ANR	10554315	AssignmentExpression	* x = epts -> org_x		10554230	2		=			
ANR	10554316	Identifier	x		10554230	0					
ANR	10554317	PtrMemberAccess	epts -> org_x		10554230	1					
ANR	10554318	Identifier	epts		10554230	0					
ANR	10554319	Identifier	org_x		10554230	1					
ANR	10554320	IdentifierDeclStatement	F26Dot6 * y = epts -> org_y ;	891:4:30955:30979	10554230	9	True				
ANR	10554321	IdentifierDecl	* y = epts -> org_y		10554230	0					
ANR	10554322	IdentifierDeclType	F26Dot6 *		10554230	0					
ANR	10554323	Identifier	y		10554230	1					
ANR	10554324	AssignmentExpression	* y = epts -> org_y		10554230	2		=			
ANR	10554325	Identifier	y		10554230	0					
ANR	10554326	PtrMemberAccess	epts -> org_y		10554230	1					
ANR	10554327	Identifier	epts		10554230	0					
ANR	10554328	Identifier	org_y		10554230	1					
ANR	10554329	IdentifierDeclStatement	"F26Dot6 px , py ;"	892:4:30985:30999	10554230	10	True				
ANR	10554330	IdentifierDecl	px		10554230	0					
ANR	10554331	IdentifierDeclType	F26Dot6		10554230	0					
ANR	10554332	Identifier	px		10554230	1					
ANR	10554333	IdentifierDecl	py		10554230	1					
ANR	10554334	IdentifierDeclType	F26Dot6		10554230	0					
ANR	10554335	Identifier	py		10554230	1					
ANR	10554336	IdentifierDeclStatement	"short sp , ctr ;"	893:4:31005:31018	10554230	11	True				
ANR	10554337	IdentifierDecl	sp		10554230	0					
ANR	10554338	IdentifierDeclType	short		10554230	0					
ANR	10554339	Identifier	sp		10554230	1					
ANR	10554340	IdentifierDecl	ctr		10554230	1					
ANR	10554341	IdentifierDeclType	short		10554230	0					
ANR	10554342	Identifier	ctr		10554230	1					
ANR	10554343	IdentifierDeclStatement	"FloatPoint p0 , p1 , p2 , p3 ;"	894:4:31024:31049	10554230	12	True				
ANR	10554344	IdentifierDecl	p0		10554230	0					
ANR	10554345	IdentifierDeclType	FloatPoint		10554230	0					
ANR	10554346	Identifier	p0		10554230	1					
ANR	10554347	IdentifierDecl	p1		10554230	1					
ANR	10554348	IdentifierDeclType	FloatPoint		10554230	0					
ANR	10554349	Identifier	p1		10554230	1					
ANR	10554350	IdentifierDecl	p2		10554230	2					
ANR	10554351	IdentifierDeclType	FloatPoint		10554230	0					
ANR	10554352	Identifier	p2		10554230	1					
ANR	10554353	IdentifierDecl	p3		10554230	3					
ANR	10554354	IdentifierDeclType	FloatPoint		10554230	0					
ANR	10554355	Identifier	p3		10554230	1					
ANR	10554356	Statement	if	895:4:31055:31056	10554230	13	True				
ANR	10554357	IdentifierDeclStatement	"AVECTOR_BUG F26Dot6 expand_x = Scale_X ( & exec -> metrics , pFont -> nUnitsPerEm * 2 ) ;"	895:7:31058:31140	10554230	14	True				
ANR	10554358	IdentifierDecl	"expand_x = Scale_X ( & exec -> metrics , pFont -> nUnitsPerEm * 2 )"		10554230	0					
ANR	10554359	IdentifierDeclType	AVECTOR_BUG F26Dot6		10554230	0					
ANR	10554360	Identifier	expand_x		10554230	1					
ANR	10554361	AssignmentExpression	"expand_x = Scale_X ( & exec -> metrics , pFont -> nUnitsPerEm * 2 )"		10554230	2		=			
ANR	10554362	Identifier	expand_x		10554230	0					
ANR	10554363	CallExpression	"Scale_X ( & exec -> metrics , pFont -> nUnitsPerEm * 2 )"		10554230	1					
ANR	10554364	Callee	Scale_X		10554230	0					
ANR	10554365	Identifier	Scale_X		10554230	0					
ANR	10554366	ArgumentList	& exec -> metrics		10554230	1					
ANR	10554367	Argument	& exec -> metrics		10554230	0					
ANR	10554368	UnaryOperationExpression	& exec -> metrics		10554230	0					
ANR	10554369	UnaryOperator	&		10554230	0					
ANR	10554370	PtrMemberAccess	exec -> metrics		10554230	1					
ANR	10554371	Identifier	exec		10554230	0					
ANR	10554372	Identifier	metrics		10554230	1					
ANR	10554373	Argument	pFont -> nUnitsPerEm * 2		10554230	1					
ANR	10554374	MultiplicativeExpression	pFont -> nUnitsPerEm * 2		10554230	0		*			
ANR	10554375	PtrMemberAccess	pFont -> nUnitsPerEm		10554230	0					
ANR	10554376	Identifier	pFont		10554230	0					
ANR	10554377	Identifier	nUnitsPerEm		10554230	1					
ANR	10554378	PrimaryExpression	2		10554230	1					
ANR	10554379	IdentifierDeclStatement	"F26Dot6 expand_y = Scale_Y ( & exec -> metrics , pFont -> nUnitsPerEm * 2 ) ;"	897:4:31146:31212	10554230	15	True				
ANR	10554380	IdentifierDecl	"expand_y = Scale_Y ( & exec -> metrics , pFont -> nUnitsPerEm * 2 )"		10554230	0					
ANR	10554381	IdentifierDeclType	F26Dot6		10554230	0					
ANR	10554382	Identifier	expand_y		10554230	1					
ANR	10554383	AssignmentExpression	"expand_y = Scale_Y ( & exec -> metrics , pFont -> nUnitsPerEm * 2 )"		10554230	2		=			
ANR	10554384	Identifier	expand_y		10554230	0					
ANR	10554385	CallExpression	"Scale_Y ( & exec -> metrics , pFont -> nUnitsPerEm * 2 )"		10554230	1					
ANR	10554386	Callee	Scale_Y		10554230	0					
ANR	10554387	Identifier	Scale_Y		10554230	0					
ANR	10554388	ArgumentList	& exec -> metrics		10554230	1					
ANR	10554389	Argument	& exec -> metrics		10554230	0					
ANR	10554390	UnaryOperationExpression	& exec -> metrics		10554230	0					
ANR	10554391	UnaryOperator	&		10554230	0					
ANR	10554392	PtrMemberAccess	exec -> metrics		10554230	1					
ANR	10554393	Identifier	exec		10554230	0					
ANR	10554394	Identifier	metrics		10554230	1					
ANR	10554395	Argument	pFont -> nUnitsPerEm * 2		10554230	1					
ANR	10554396	MultiplicativeExpression	pFont -> nUnitsPerEm * 2		10554230	0		*			
ANR	10554397	PtrMemberAccess	pFont -> nUnitsPerEm		10554230	0					
ANR	10554398	Identifier	pFont		10554230	0					
ANR	10554399	Identifier	nUnitsPerEm		10554230	1					
ANR	10554400	PrimaryExpression	2		10554230	1					
ANR	10554401	IdentifierDeclStatement	"F26Dot6 xMin = out -> xMinB - expand_x , xMax = out -> xMaxB + expand_x ;"	898:4:31218:31284	10554230	16	True				
ANR	10554402	IdentifierDecl	xMin = out -> xMinB - expand_x		10554230	0					
ANR	10554403	IdentifierDeclType	F26Dot6		10554230	0					
ANR	10554404	Identifier	xMin		10554230	1					
ANR	10554405	AssignmentExpression	xMin = out -> xMinB - expand_x		10554230	2		=			
ANR	10554406	Identifier	xMin		10554230	0					
ANR	10554407	AdditiveExpression	out -> xMinB - expand_x		10554230	1		-			
ANR	10554408	PtrMemberAccess	out -> xMinB		10554230	0					
ANR	10554409	Identifier	out		10554230	0					
ANR	10554410	Identifier	xMinB		10554230	1					
ANR	10554411	Identifier	expand_x		10554230	1					
ANR	10554412	IdentifierDecl	xMax = out -> xMaxB + expand_x		10554230	1					
ANR	10554413	IdentifierDeclType	F26Dot6		10554230	0					
ANR	10554414	Identifier	xMax		10554230	1					
ANR	10554415	AssignmentExpression	xMax = out -> xMaxB + expand_x		10554230	2		=			
ANR	10554416	Identifier	xMax		10554230	0					
ANR	10554417	AdditiveExpression	out -> xMaxB + expand_x		10554230	1		+			
ANR	10554418	PtrMemberAccess	out -> xMaxB		10554230	0					
ANR	10554419	Identifier	out		10554230	0					
ANR	10554420	Identifier	xMaxB		10554230	1					
ANR	10554421	Identifier	expand_x		10554230	1					
ANR	10554422	IdentifierDeclStatement	"F26Dot6 yMin = out -> yMinB - expand_y , yMax = out -> yMaxB + expand_y ;"	899:4:31290:31356	10554230	17	True				
ANR	10554423	IdentifierDecl	yMin = out -> yMinB - expand_y		10554230	0					
ANR	10554424	IdentifierDeclType	F26Dot6		10554230	0					
ANR	10554425	Identifier	yMin		10554230	1					
ANR	10554426	AssignmentExpression	yMin = out -> yMinB - expand_y		10554230	2		=			
ANR	10554427	Identifier	yMin		10554230	0					
ANR	10554428	AdditiveExpression	out -> yMinB - expand_y		10554230	1		-			
ANR	10554429	PtrMemberAccess	out -> yMinB		10554230	0					
ANR	10554430	Identifier	out		10554230	0					
ANR	10554431	Identifier	yMinB		10554230	1					
ANR	10554432	Identifier	expand_y		10554230	1					
ANR	10554433	IdentifierDecl	yMax = out -> yMaxB + expand_y		10554230	1					
ANR	10554434	IdentifierDeclType	F26Dot6		10554230	0					
ANR	10554435	Identifier	yMax		10554230	1					
ANR	10554436	AssignmentExpression	yMax = out -> yMaxB + expand_y		10554230	2		=			
ANR	10554437	Identifier	yMax		10554230	0					
ANR	10554438	AdditiveExpression	out -> yMaxB + expand_y		10554230	1		+			
ANR	10554439	PtrMemberAccess	out -> yMaxB		10554230	0					
ANR	10554440	Identifier	out		10554230	0					
ANR	10554441	Identifier	yMaxB		10554230	1					
ANR	10554442	Identifier	expand_y		10554230	1					
ANR	10554443	IdentifierDeclStatement	"endif TransformF26Dot6PointFloat ( & p1 , out -> advance . x , out -> advance . y , m ) ;"	900:4:31362:31439	10554230	18	True				
ANR	10554444	IdentifierDecl	"TransformF26Dot6PointFloat ( & p1 , out -> advance . x , out -> advance . y , m )"		10554230	0					
ANR	10554445	IdentifierDeclType	endif		10554230	0					
ANR	10554446	Identifier	TransformF26Dot6PointFloat		10554230	1					
ANR	10554447	Expression	"& p1 , out -> advance . x , out -> advance . y , m"		10554230	2					
ANR	10554448	UnaryOperationExpression	& p1		10554230	0					
ANR	10554449	UnaryOperator	&		10554230	0					
ANR	10554450	Identifier	p1		10554230	1					
ANR	10554451	Expression	"out -> advance . x , out -> advance . y , m"		10554230	1					
ANR	10554452	MemberAccess	out -> advance . x		10554230	0					
ANR	10554453	PtrMemberAccess	out -> advance		10554230	0					
ANR	10554454	Identifier	out		10554230	0					
ANR	10554455	Identifier	advance		10554230	1					
ANR	10554456	Identifier	x		10554230	1					
ANR	10554457	Expression	"out -> advance . y , m"		10554230	1					
ANR	10554458	MemberAccess	out -> advance . y		10554230	0					
ANR	10554459	PtrMemberAccess	out -> advance		10554230	0					
ANR	10554460	Identifier	out		10554230	0					
ANR	10554461	Identifier	advance		10554230	1					
ANR	10554462	Identifier	y		10554230	1					
ANR	10554463	Identifier	m		10554230	1					
ANR	10554464	ExpressionStatement	p1 . x -= self -> post_transform . tx	903:4:31445:31476	10554230	19	True				
ANR	10554465	AssignmentExpression	p1 . x -= self -> post_transform . tx		10554230	0		-=			
ANR	10554466	MemberAccess	p1 . x		10554230	0					
ANR	10554467	Identifier	p1		10554230	0					
ANR	10554468	Identifier	x		10554230	1					
ANR	10554469	MemberAccess	self -> post_transform . tx		10554230	1					
ANR	10554470	PtrMemberAccess	self -> post_transform		10554230	0					
ANR	10554471	Identifier	self		10554230	0					
ANR	10554472	Identifier	post_transform		10554230	1					
ANR	10554473	Identifier	tx		10554230	1					
ANR	10554474	ExpressionStatement	p1 . y -= self -> post_transform . ty	904:4:31482:31513	10554230	20	True				
ANR	10554475	AssignmentExpression	p1 . y -= self -> post_transform . ty		10554230	0		-=			
ANR	10554476	MemberAccess	p1 . y		10554230	0					
ANR	10554477	Identifier	p1		10554230	0					
ANR	10554478	Identifier	y		10554230	1					
ANR	10554479	MemberAccess	self -> post_transform . ty		10554230	1					
ANR	10554480	PtrMemberAccess	self -> post_transform		10554230	0					
ANR	10554481	Identifier	self		10554230	0					
ANR	10554482	Identifier	post_transform		10554230	1					
ANR	10554483	Identifier	ty		10554230	1					
ANR	10554484	ExpressionStatement	"exp -> SetWidth ( exp , & p1 )"	905:4:31519:31542	10554230	21	True				
ANR	10554485	CallExpression	"exp -> SetWidth ( exp , & p1 )"		10554230	0					
ANR	10554486	Callee	exp -> SetWidth		10554230	0					
ANR	10554487	PtrMemberAccess	exp -> SetWidth		10554230	0					
ANR	10554488	Identifier	exp		10554230	0					
ANR	10554489	Identifier	SetWidth		10554230	1					
ANR	10554490	ArgumentList	exp		10554230	1					
ANR	10554491	Argument	exp		10554230	0					
ANR	10554492	Identifier	exp		10554230	0					
ANR	10554493	Argument	& p1		10554230	1					
ANR	10554494	UnaryOperationExpression	& p1		10554230	0					
ANR	10554495	UnaryOperator	&		10554230	0					
ANR	10554496	Identifier	p1		10554230	1					
ANR	10554497	ExpressionStatement	sp = - 1	906:4:31548:31555	10554230	22	True				
ANR	10554498	AssignmentExpression	sp = - 1		10554230	0		=			
ANR	10554499	Identifier	sp		10554230	0					
ANR	10554500	UnaryOperationExpression	- 1		10554230	1					
ANR	10554501	UnaryOperator	-		10554230	0					
ANR	10554502	PrimaryExpression	1		10554230	1					
ANR	10554503	ForStatement	for ( ctr = out -> contourCount ; ctr != 0 ; -- ctr )		10554230	23					
ANR	10554504	ForInit	ctr = out -> contourCount ;	907:9:31566:31589	10554230	0	True				
ANR	10554505	AssignmentExpression	ctr = out -> contourCount		10554230	0		=			
ANR	10554506	Identifier	ctr		10554230	0					
ANR	10554507	PtrMemberAccess	out -> contourCount		10554230	1					
ANR	10554508	Identifier	out		10554230	0					
ANR	10554509	Identifier	contourCount		10554230	1					
ANR	10554510	Condition	ctr != 0	907:34:31591:31598	10554230	1	True				
ANR	10554511	EqualityExpression	ctr != 0		10554230	0		!=			
ANR	10554512	Identifier	ctr		10554230	0					
ANR	10554513	PrimaryExpression	0		10554230	1					
ANR	10554514	UnaryExpression	-- ctr	907:44:31601:31605	10554230	2	True				
ANR	10554515	IncDec	--		10554230	0					
ANR	10554516	Identifier	ctr		10554230	1					
ANR	10554517	CompoundStatement		28:8:1028:1046	10554230	3					
ANR	10554518	IdentifierDeclStatement	"short pt , pts = * endP - sp ;"	908:8:31618:31644	10554230	0	True				
ANR	10554519	IdentifierDecl	pt		10554230	0					
ANR	10554520	IdentifierDeclType	short		10554230	0					
ANR	10554521	Identifier	pt		10554230	1					
ANR	10554522	IdentifierDecl	pts = * endP - sp		10554230	1					
ANR	10554523	IdentifierDeclType	short		10554230	0					
ANR	10554524	Identifier	pts		10554230	1					
ANR	10554525	AssignmentExpression	pts = * endP - sp		10554230	2		=			
ANR	10554526	Identifier	pts		10554230	0					
ANR	10554527	AdditiveExpression	* endP - sp		10554230	1		-			
ANR	10554528	UnaryOperationExpression	* endP		10554230	0					
ANR	10554529	UnaryOperator	*		10554230	0					
ANR	10554530	Identifier	endP		10554230	1					
ANR	10554531	Identifier	sp		10554230	1					
ANR	10554532	IdentifierDeclStatement	short ep = pts - 1 ;	909:8:31654:31672	10554230	1	True				
ANR	10554533	IdentifierDecl	ep = pts - 1		10554230	0					
ANR	10554534	IdentifierDeclType	short		10554230	0					
ANR	10554535	Identifier	ep		10554230	1					
ANR	10554536	AssignmentExpression	ep = pts - 1		10554230	2		=			
ANR	10554537	Identifier	ep		10554230	0					
ANR	10554538	AdditiveExpression	pts - 1		10554230	1		-			
ANR	10554539	Identifier	pts		10554230	0					
ANR	10554540	PrimaryExpression	1		10554230	1					
ANR	10554541	IfStatement	if ( pts < 3 )		10554230	2					
ANR	10554542	Condition	pts < 3	911:12:31687:31693	10554230	0	True				
ANR	10554543	RelationalExpression	pts < 3		10554230	0		<			
ANR	10554544	Identifier	pts		10554230	0					
ANR	10554545	PrimaryExpression	3		10554230	1					
ANR	10554546	CompoundStatement		30:21:1070:1070	10554230	1					
ANR	10554547	ExpressionStatement	x += pts	912:12:31710:31718	10554230	0	True				
ANR	10554548	AssignmentExpression	x += pts		10554230	0		+=			
ANR	10554549	Identifier	x		10554230	0					
ANR	10554550	Identifier	pts		10554230	1					
ANR	10554551	ExpressionStatement	y += pts	913:12:31732:31740	10554230	1	True				
ANR	10554552	AssignmentExpression	y += pts		10554230	0		+=			
ANR	10554553	Identifier	y		10554230	0					
ANR	10554554	Identifier	pts		10554230	1					
ANR	10554555	ExpressionStatement	onCurve += pts	914:12:31754:31768	10554230	2	True				
ANR	10554556	AssignmentExpression	onCurve += pts		10554230	0		+=			
ANR	10554557	Identifier	onCurve		10554230	0					
ANR	10554558	Identifier	pts		10554230	1					
ANR	10554559	ExpressionStatement	sp = * endP ++	915:12:31782:31794	10554230	3	True				
ANR	10554560	AssignmentExpression	sp = * endP ++		10554230	0		=			
ANR	10554561	Identifier	sp		10554230	0					
ANR	10554562	UnaryOperationExpression	* endP ++		10554230	1					
ANR	10554563	UnaryOperator	*		10554230	0					
ANR	10554564	PostIncDecOperationExpression	endP ++		10554230	1					
ANR	10554565	Identifier	endP		10554230	0					
ANR	10554566	IncDec	++		10554230	1					
ANR	10554567	ContinueStatement	continue ;	916:12:31808:31816	10554230	4	True				
ANR	10554568	IfStatement	if ( exp -> bPoints )		10554230	3					
ANR	10554569	Condition	exp -> bPoints	919:12:31877:31888	10554230	0	True				
ANR	10554570	PtrMemberAccess	exp -> bPoints		10554230	0					
ANR	10554571	Identifier	exp		10554230	0					
ANR	10554572	Identifier	bPoints		10554230	1					
ANR	10554573	CompoundStatement		38:26:1265:1265	10554230	1					
ANR	10554574	ForStatement	for ( pt = 0 ; pt <= ep ; pt ++ )		10554230	0					
ANR	10554575	ForInit	pt = 0 ;	920:17:31910:31916	10554230	0	True				
ANR	10554576	AssignmentExpression	pt = 0		10554230	0		=			
ANR	10554577	Identifier	pt		10554230	0					
ANR	10554578	PrimaryExpression	0		10554230	1					
ANR	10554579	Condition	pt <= ep	920:25:31918:31925	10554230	1	True				
ANR	10554580	RelationalExpression	pt <= ep		10554230	0		<=			
ANR	10554581	Identifier	pt		10554230	0					
ANR	10554582	Identifier	ep		10554230	1					
ANR	10554583	PostIncDecOperationExpression	pt ++	920:35:31928:31931	10554230	2	True				
ANR	10554584	Identifier	pt		10554230	0					
ANR	10554585	IncDec	++		10554230	1					
ANR	10554586	CompoundStatement		50:3:1818:1882	10554230	3					
ANR	10554587	ExpressionStatement	"px = x [ pt ] , py = y [ pt ]"	921:16:31952:31974	10554230	0	True				
ANR	10554588	Expression	"px = x [ pt ] , py = y [ pt ]"		10554230	0					
ANR	10554589	AssignmentExpression	px = x [ pt ]		10554230	0		=			
ANR	10554590	Identifier	px		10554230	0					
ANR	10554591	ArrayIndexing	x [ pt ]		10554230	1					
ANR	10554592	Identifier	x		10554230	0					
ANR	10554593	Identifier	pt		10554230	1					
ANR	10554594	AssignmentExpression	py = y [ pt ]		10554230	1		=			
ANR	10554595	Identifier	py		10554230	0					
ANR	10554596	ArrayIndexing	y [ pt ]		10554230	1					
ANR	10554597	Identifier	y		10554230	0					
ANR	10554598	Identifier	pt		10554230	1					
ANR	10554599	Statement	if	922:3:31979:31980	10554230	1	True				
ANR	10554600	Statement	AVECTOR_BUG	922:6:31982:31992	10554230	2	True				
ANR	10554601	IfStatement	if ( x [ pt ] < xMin || xMax < x [ pt ] || y [ pt ] < yMin || yMax < y [ pt ] )		10554230	3					
ANR	10554602	Condition	x [ pt ] < xMin || xMax < x [ pt ] || y [ pt ] < yMin || yMax < y [ pt ]	923:24:32018:32077	10554230	0	True				
ANR	10554603	OrExpression	x [ pt ] < xMin || xMax < x [ pt ] || y [ pt ] < yMin || yMax < y [ pt ]		10554230	0		||			
ANR	10554604	RelationalExpression	x [ pt ] < xMin		10554230	0		<			
ANR	10554605	ArrayIndexing	x [ pt ]		10554230	0					
ANR	10554606	Identifier	x		10554230	0					
ANR	10554607	Identifier	pt		10554230	1					
ANR	10554608	Identifier	xMin		10554230	1					
ANR	10554609	OrExpression	xMax < x [ pt ] || y [ pt ] < yMin || yMax < y [ pt ]		10554230	1		||			
ANR	10554610	RelationalExpression	xMax < x [ pt ]		10554230	0		<			
ANR	10554611	Identifier	xMax		10554230	0					
ANR	10554612	ArrayIndexing	x [ pt ]		10554230	1					
ANR	10554613	Identifier	x		10554230	0					
ANR	10554614	Identifier	pt		10554230	1					
ANR	10554615	OrExpression	y [ pt ] < yMin || yMax < y [ pt ]		10554230	1		||			
ANR	10554616	RelationalExpression	y [ pt ] < yMin		10554230	0		<			
ANR	10554617	ArrayIndexing	y [ pt ]		10554230	0					
ANR	10554618	Identifier	y		10554230	0					
ANR	10554619	Identifier	pt		10554230	1					
ANR	10554620	Identifier	yMin		10554230	1					
ANR	10554621	RelationalExpression	yMax < y [ pt ]		10554230	1		<			
ANR	10554622	Identifier	yMax		10554230	0					
ANR	10554623	ArrayIndexing	y [ pt ]		10554230	1					
ANR	10554624	Identifier	y		10554230	0					
ANR	10554625	Identifier	pt		10554230	1					
ANR	10554626	CompoundStatement		44:24:1545:1584	10554230	1					
ANR	10554627	IdentifierDeclStatement	short prevIndex = pt == 0 ? ep : pt - 1 ;	924:24:32106:32145	10554230	0	True				
ANR	10554628	IdentifierDecl	prevIndex = pt == 0 ? ep : pt - 1		10554230	0					
ANR	10554629	IdentifierDeclType	short		10554230	0					
ANR	10554630	Identifier	prevIndex		10554230	1					
ANR	10554631	AssignmentExpression	prevIndex = pt == 0 ? ep : pt - 1		10554230	2		=			
ANR	10554632	Identifier	prevIndex		10554230	0					
ANR	10554633	ConditionalExpression	pt == 0 ? ep : pt - 1		10554230	1					
ANR	10554634	Condition	pt == 0		10554230	0					
ANR	10554635	EqualityExpression	pt == 0		10554230	0		==			
ANR	10554636	Identifier	pt		10554230	0					
ANR	10554637	PrimaryExpression	0		10554230	1					
ANR	10554638	Identifier	ep		10554230	1					
ANR	10554639	AdditiveExpression	pt - 1		10554230	2		-			
ANR	10554640	Identifier	pt		10554230	0					
ANR	10554641	PrimaryExpression	1		10554230	1					
ANR	10554642	IdentifierDeclStatement	short nextIndex = pt == ep ? 0 : pt + 1 ;	925:24:32171:32210	10554230	1	True				
ANR	10554643	IdentifierDecl	nextIndex = pt == ep ? 0 : pt + 1		10554230	0					
ANR	10554644	IdentifierDeclType	short		10554230	0					
ANR	10554645	Identifier	nextIndex		10554230	1					
ANR	10554646	AssignmentExpression	nextIndex = pt == ep ? 0 : pt + 1		10554230	2		=			
ANR	10554647	Identifier	nextIndex		10554230	0					
ANR	10554648	ConditionalExpression	pt == ep ? 0 : pt + 1		10554230	1					
ANR	10554649	Condition	pt == ep		10554230	0					
ANR	10554650	EqualityExpression	pt == ep		10554230	0		==			
ANR	10554651	Identifier	pt		10554230	0					
ANR	10554652	Identifier	ep		10554230	1					
ANR	10554653	PrimaryExpression	0		10554230	1					
ANR	10554654	AdditiveExpression	pt + 1		10554230	2		+			
ANR	10554655	Identifier	pt		10554230	0					
ANR	10554656	PrimaryExpression	1		10554230	1					
ANR	10554657	IfStatement	if ( nextIndex > ep )		10554230	2					
ANR	10554658	Condition	nextIndex > ep	926:28:32240:32253	10554230	0	True				
ANR	10554659	RelationalExpression	nextIndex > ep		10554230	0		>			
ANR	10554660	Identifier	nextIndex		10554230	0					
ANR	10554661	Identifier	ep		10554230	1					
ANR	10554662	ExpressionStatement	nextIndex = 0	927:28:32284:32297	10554230	1	True				
ANR	10554663	AssignmentExpression	nextIndex = 0		10554230	0		=			
ANR	10554664	Identifier	nextIndex		10554230	0					
ANR	10554665	PrimaryExpression	0		10554230	1					
ANR	10554666	ExpressionStatement	"px = AVE ( x [ prevIndex ] , x [ nextIndex ] )"	928:24:32323:32357	10554230	3	True				
ANR	10554667	AssignmentExpression	"px = AVE ( x [ prevIndex ] , x [ nextIndex ] )"		10554230	0		=			
ANR	10554668	Identifier	px		10554230	0					
ANR	10554669	CallExpression	"AVE ( x [ prevIndex ] , x [ nextIndex ] )"		10554230	1					
ANR	10554670	Callee	AVE		10554230	0					
ANR	10554671	Identifier	AVE		10554230	0					
ANR	10554672	ArgumentList	x [ prevIndex ]		10554230	1					
ANR	10554673	Argument	x [ prevIndex ]		10554230	0					
ANR	10554674	ArrayIndexing	x [ prevIndex ]		10554230	0					
ANR	10554675	Identifier	x		10554230	0					
ANR	10554676	Identifier	prevIndex		10554230	1					
ANR	10554677	Argument	x [ nextIndex ]		10554230	1					
ANR	10554678	ArrayIndexing	x [ nextIndex ]		10554230	0					
ANR	10554679	Identifier	x		10554230	0					
ANR	10554680	Identifier	nextIndex		10554230	1					
ANR	10554681	ExpressionStatement	"py = AVE ( y [ prevIndex ] , y [ nextIndex ] )"	929:24:32383:32417	10554230	4	True				
ANR	10554682	AssignmentExpression	"py = AVE ( y [ prevIndex ] , y [ nextIndex ] )"		10554230	0		=			
ANR	10554683	Identifier	py		10554230	0					
ANR	10554684	CallExpression	"AVE ( y [ prevIndex ] , y [ nextIndex ] )"		10554230	1					
ANR	10554685	Callee	AVE		10554230	0					
ANR	10554686	Identifier	AVE		10554230	0					
ANR	10554687	ArgumentList	y [ prevIndex ]		10554230	1					
ANR	10554688	Argument	y [ prevIndex ]		10554230	0					
ANR	10554689	ArrayIndexing	y [ prevIndex ]		10554230	0					
ANR	10554690	Identifier	y		10554230	0					
ANR	10554691	Identifier	prevIndex		10554230	1					
ANR	10554692	Argument	y [ nextIndex ]		10554230	1					
ANR	10554693	ArrayIndexing	y [ nextIndex ]		10554230	0					
ANR	10554694	Identifier	y		10554230	0					
ANR	10554695	Identifier	nextIndex		10554230	1					
ANR	10554696	IdentifierDeclStatement	"endif TransformF26Dot6PointFloat ( & p0 , px , py , m ) ;"	931:3:32444:32508	10554230	4	True				
ANR	10554697	IdentifierDecl	"TransformF26Dot6PointFloat ( & p0 , px , py , m )"		10554230	0					
ANR	10554698	IdentifierDeclType	endif		10554230	0					
ANR	10554699	Identifier	TransformF26Dot6PointFloat		10554230	1					
ANR	10554700	Expression	"& p0 , px , py , m"		10554230	2					
ANR	10554701	UnaryOperationExpression	& p0		10554230	0					
ANR	10554702	UnaryOperator	&		10554230	0					
ANR	10554703	Identifier	p0		10554230	1					
ANR	10554704	Expression	"px , py , m"		10554230	1					
ANR	10554705	Identifier	px		10554230	0					
ANR	10554706	Expression	"py , m"		10554230	1					
ANR	10554707	Identifier	py		10554230	0					
ANR	10554708	Identifier	m		10554230	1					
ANR	10554709	ExpressionStatement	"exp -> Point ( exp , & p0 , onCurve [ pt ] , ! pt )"	933:16:32526:32564	10554230	5	True				
ANR	10554710	CallExpression	"exp -> Point ( exp , & p0 , onCurve [ pt ] , ! pt )"		10554230	0					
ANR	10554711	Callee	exp -> Point		10554230	0					
ANR	10554712	PtrMemberAccess	exp -> Point		10554230	0					
ANR	10554713	Identifier	exp		10554230	0					
ANR	10554714	Identifier	Point		10554230	1					
ANR	10554715	ArgumentList	exp		10554230	1					
ANR	10554716	Argument	exp		10554230	0					
ANR	10554717	Identifier	exp		10554230	0					
ANR	10554718	Argument	& p0		10554230	1					
ANR	10554719	UnaryOperationExpression	& p0		10554230	0					
ANR	10554720	UnaryOperator	&		10554230	0					
ANR	10554721	Identifier	p0		10554230	1					
ANR	10554722	Argument	onCurve [ pt ]		10554230	2					
ANR	10554723	ArrayIndexing	onCurve [ pt ]		10554230	0					
ANR	10554724	Identifier	onCurve		10554230	0					
ANR	10554725	Identifier	pt		10554230	1					
ANR	10554726	Argument	! pt		10554230	3					
ANR	10554727	UnaryOperationExpression	! pt		10554230	0					
ANR	10554728	UnaryOperator	!		10554230	0					
ANR	10554729	Identifier	pt		10554230	1					
ANR	10554730	IfStatement	if ( exp -> bOutline )		10554230	4					
ANR	10554731	Condition	exp -> bOutline	937:12:32603:32615	10554230	0	True				
ANR	10554732	PtrMemberAccess	exp -> bOutline		10554230	0					
ANR	10554733	Identifier	exp		10554230	0					
ANR	10554734	Identifier	bOutline		10554230	1					
ANR	10554735	CompoundStatement		56:27:1992:1992	10554230	1					
ANR	10554736	ExpressionStatement	pt = 0	938:12:32632:32638	10554230	0	True				
ANR	10554737	AssignmentExpression	pt = 0		10554230	0		=			
ANR	10554738	Identifier	pt		10554230	0					
ANR	10554739	PrimaryExpression	0		10554230	1					
ANR	10554740	IfStatement	if ( onCurve [ ep ] & 1 )		10554230	1					
ANR	10554741	Condition	onCurve [ ep ] & 1	939:15:32655:32669	10554230	0	True				
ANR	10554742	BitAndExpression	onCurve [ ep ] & 1		10554230	0		&			
ANR	10554743	ArrayIndexing	onCurve [ ep ]		10554230	0					
ANR	10554744	Identifier	onCurve		10554230	0					
ANR	10554745	Identifier	ep		10554230	1					
ANR	10554746	PrimaryExpression	1		10554230	1					
ANR	10554747	CompoundStatement		58:32:2046:2046	10554230	1					
ANR	10554748	ExpressionStatement	px = x [ ep ]	940:16:32690:32700	10554230	0	True				
ANR	10554749	AssignmentExpression	px = x [ ep ]		10554230	0		=			
ANR	10554750	Identifier	px		10554230	0					
ANR	10554751	ArrayIndexing	x [ ep ]		10554230	1					
ANR	10554752	Identifier	x		10554230	0					
ANR	10554753	Identifier	ep		10554230	1					
ANR	10554754	ExpressionStatement	py = y [ ep ]	941:16:32718:32728	10554230	1	True				
ANR	10554755	AssignmentExpression	py = y [ ep ]		10554230	0		=			
ANR	10554756	Identifier	py		10554230	0					
ANR	10554757	ArrayIndexing	y [ ep ]		10554230	1					
ANR	10554758	Identifier	y		10554230	0					
ANR	10554759	Identifier	ep		10554230	1					
ANR	10554760	ElseStatement	else		10554230	0					
ANR	10554761	IfStatement	if ( onCurve [ 0 ] & 1 )		10554230	0					
ANR	10554762	Condition	onCurve [ 0 ] & 1	942:23:32753:32766	10554230	0	True				
ANR	10554763	BitAndExpression	onCurve [ 0 ] & 1		10554230	0		&			
ANR	10554764	ArrayIndexing	onCurve [ 0 ]		10554230	0					
ANR	10554765	Identifier	onCurve		10554230	0					
ANR	10554766	PrimaryExpression	0		10554230	1					
ANR	10554767	PrimaryExpression	1		10554230	1					
ANR	10554768	CompoundStatement		61:39:2143:2143	10554230	1					
ANR	10554769	ExpressionStatement	px = x [ 0 ]	943:16:32787:32796	10554230	0	True				
ANR	10554770	AssignmentExpression	px = x [ 0 ]		10554230	0		=			
ANR	10554771	Identifier	px		10554230	0					
ANR	10554772	ArrayIndexing	x [ 0 ]		10554230	1					
ANR	10554773	Identifier	x		10554230	0					
ANR	10554774	PrimaryExpression	0		10554230	1					
ANR	10554775	ExpressionStatement	py = y [ 0 ]	944:16:32814:32823	10554230	1	True				
ANR	10554776	AssignmentExpression	py = y [ 0 ]		10554230	0		=			
ANR	10554777	Identifier	py		10554230	0					
ANR	10554778	ArrayIndexing	y [ 0 ]		10554230	1					
ANR	10554779	Identifier	y		10554230	0					
ANR	10554780	PrimaryExpression	0		10554230	1					
ANR	10554781	ExpressionStatement	pt = 1	945:16:32841:32847	10554230	2	True				
ANR	10554782	AssignmentExpression	pt = 1		10554230	0		=			
ANR	10554783	Identifier	pt		10554230	0					
ANR	10554784	PrimaryExpression	1		10554230	1					
ANR	10554785	ElseStatement	else		10554230	0					
ANR	10554786	CompoundStatement		65:19:2242:2242	10554230	0					
ANR	10554787	ExpressionStatement	"px = AVE ( x [ 0 ] , x [ ep ] )"	947:16:32886:32907	10554230	0	True				
ANR	10554788	AssignmentExpression	"px = AVE ( x [ 0 ] , x [ ep ] )"		10554230	0		=			
ANR	10554789	Identifier	px		10554230	0					
ANR	10554790	CallExpression	"AVE ( x [ 0 ] , x [ ep ] )"		10554230	1					
ANR	10554791	Callee	AVE		10554230	0					
ANR	10554792	Identifier	AVE		10554230	0					
ANR	10554793	ArgumentList	x [ 0 ]		10554230	1					
ANR	10554794	Argument	x [ 0 ]		10554230	0					
ANR	10554795	ArrayIndexing	x [ 0 ]		10554230	0					
ANR	10554796	Identifier	x		10554230	0					
ANR	10554797	PrimaryExpression	0		10554230	1					
ANR	10554798	Argument	x [ ep ]		10554230	1					
ANR	10554799	ArrayIndexing	x [ ep ]		10554230	0					
ANR	10554800	Identifier	x		10554230	0					
ANR	10554801	Identifier	ep		10554230	1					
ANR	10554802	ExpressionStatement	"py = AVE ( y [ 0 ] , y [ ep ] )"	948:16:32925:32946	10554230	1	True				
ANR	10554803	AssignmentExpression	"py = AVE ( y [ 0 ] , y [ ep ] )"		10554230	0		=			
ANR	10554804	Identifier	py		10554230	0					
ANR	10554805	CallExpression	"AVE ( y [ 0 ] , y [ ep ] )"		10554230	1					
ANR	10554806	Callee	AVE		10554230	0					
ANR	10554807	Identifier	AVE		10554230	0					
ANR	10554808	ArgumentList	y [ 0 ]		10554230	1					
ANR	10554809	Argument	y [ 0 ]		10554230	0					
ANR	10554810	ArrayIndexing	y [ 0 ]		10554230	0					
ANR	10554811	Identifier	y		10554230	0					
ANR	10554812	PrimaryExpression	0		10554230	1					
ANR	10554813	Argument	y [ ep ]		10554230	1					
ANR	10554814	ArrayIndexing	y [ ep ]		10554230	0					
ANR	10554815	Identifier	y		10554230	0					
ANR	10554816	Identifier	ep		10554230	1					
ANR	10554817	ExpressionStatement	self -> ppx = px	950:12:32974:32988	10554230	2	True				
ANR	10554818	AssignmentExpression	self -> ppx = px		10554230	0		=			
ANR	10554819	PtrMemberAccess	self -> ppx		10554230	0					
ANR	10554820	Identifier	self		10554230	0					
ANR	10554821	Identifier	ppx		10554230	1					
ANR	10554822	Identifier	px		10554230	1					
ANR	10554823	ExpressionStatement	self -> ppy = py	950:28:32990:33004	10554230	3	True				
ANR	10554824	AssignmentExpression	self -> ppy = py		10554230	0		=			
ANR	10554825	PtrMemberAccess	self -> ppy		10554230	0					
ANR	10554826	Identifier	self		10554230	0					
ANR	10554827	Identifier	ppy		10554230	1					
ANR	10554828	Identifier	py		10554230	1					
ANR	10554829	ExpressionStatement	"TransformF26Dot6PointFloat ( & p0 , px , py , m )"	951:12:33018:33060	10554230	4	True				
ANR	10554830	CallExpression	"TransformF26Dot6PointFloat ( & p0 , px , py , m )"		10554230	0					
ANR	10554831	Callee	TransformF26Dot6PointFloat		10554230	0					
ANR	10554832	Identifier	TransformF26Dot6PointFloat		10554230	0					
ANR	10554833	ArgumentList	& p0		10554230	1					
ANR	10554834	Argument	& p0		10554230	0					
ANR	10554835	UnaryOperationExpression	& p0		10554230	0					
ANR	10554836	UnaryOperator	&		10554230	0					
ANR	10554837	Identifier	p0		10554230	1					
ANR	10554838	Argument	px		10554230	1					
ANR	10554839	Identifier	px		10554230	0					
ANR	10554840	Argument	py		10554230	2					
ANR	10554841	Identifier	py		10554230	0					
ANR	10554842	Argument	m		10554230	3					
ANR	10554843	Identifier	m		10554230	0					
ANR	10554844	ExpressionStatement	"exp -> MoveTo ( exp , & p0 )"	952:12:33074:33095	10554230	5	True				
ANR	10554845	CallExpression	"exp -> MoveTo ( exp , & p0 )"		10554230	0					
ANR	10554846	Callee	exp -> MoveTo		10554230	0					
ANR	10554847	PtrMemberAccess	exp -> MoveTo		10554230	0					
ANR	10554848	Identifier	exp		10554230	0					
ANR	10554849	Identifier	MoveTo		10554230	1					
ANR	10554850	ArgumentList	exp		10554230	1					
ANR	10554851	Argument	exp		10554230	0					
ANR	10554852	Identifier	exp		10554230	0					
ANR	10554853	Argument	& p0		10554230	1					
ANR	10554854	UnaryOperationExpression	& p0		10554230	0					
ANR	10554855	UnaryOperator	&		10554230	0					
ANR	10554856	Identifier	p0		10554230	1					
ANR	10554857	ForStatement	for ( ; pt <= ep ; pt ++ )		10554230	6					
ANR	10554858	Condition	pt <= ep	954:19:33117:33124	10554230	0	True				
ANR	10554859	RelationalExpression	pt <= ep		10554230	0		<=			
ANR	10554860	Identifier	pt		10554230	0					
ANR	10554861	Identifier	ep		10554230	1					
ANR	10554862	PostIncDecOperationExpression	pt ++	954:29:33127:33130	10554230	1	True				
ANR	10554863	Identifier	pt		10554230	0					
ANR	10554864	IncDec	++		10554230	1					
ANR	10554865	CompoundStatement		75:16:2582:2621	10554230	2					
ANR	10554866	IdentifierDeclStatement	short prevIndex = pt == 0 ? ep : pt - 1 ;	955:16:33151:33190	10554230	0	True				
ANR	10554867	IdentifierDecl	prevIndex = pt == 0 ? ep : pt - 1		10554230	0					
ANR	10554868	IdentifierDeclType	short		10554230	0					
ANR	10554869	Identifier	prevIndex		10554230	1					
ANR	10554870	AssignmentExpression	prevIndex = pt == 0 ? ep : pt - 1		10554230	2		=			
ANR	10554871	Identifier	prevIndex		10554230	0					
ANR	10554872	ConditionalExpression	pt == 0 ? ep : pt - 1		10554230	1					
ANR	10554873	Condition	pt == 0		10554230	0					
ANR	10554874	EqualityExpression	pt == 0		10554230	0		==			
ANR	10554875	Identifier	pt		10554230	0					
ANR	10554876	PrimaryExpression	0		10554230	1					
ANR	10554877	Identifier	ep		10554230	1					
ANR	10554878	AdditiveExpression	pt - 1		10554230	2		-			
ANR	10554879	Identifier	pt		10554230	0					
ANR	10554880	PrimaryExpression	1		10554230	1					
ANR	10554881	IdentifierDeclStatement	short nextIndex = pt == ep ? 0 : pt + 1 ;	956:16:33208:33247	10554230	1	True				
ANR	10554882	IdentifierDecl	nextIndex = pt == ep ? 0 : pt + 1		10554230	0					
ANR	10554883	IdentifierDeclType	short		10554230	0					
ANR	10554884	Identifier	nextIndex		10554230	1					
ANR	10554885	AssignmentExpression	nextIndex = pt == ep ? 0 : pt + 1		10554230	2		=			
ANR	10554886	Identifier	nextIndex		10554230	0					
ANR	10554887	ConditionalExpression	pt == ep ? 0 : pt + 1		10554230	1					
ANR	10554888	Condition	pt == ep		10554230	0					
ANR	10554889	EqualityExpression	pt == ep		10554230	0		==			
ANR	10554890	Identifier	pt		10554230	0					
ANR	10554891	Identifier	ep		10554230	1					
ANR	10554892	PrimaryExpression	0		10554230	1					
ANR	10554893	AdditiveExpression	pt + 1		10554230	2		+			
ANR	10554894	Identifier	pt		10554230	0					
ANR	10554895	PrimaryExpression	1		10554230	1					
ANR	10554896	IfStatement	if ( onCurve [ pt ] & 1 )		10554230	2					
ANR	10554897	Condition	onCurve [ pt ] & 1	957:20:33269:33283	10554230	0	True				
ANR	10554898	BitAndExpression	onCurve [ pt ] & 1		10554230	0		&			
ANR	10554899	ArrayIndexing	onCurve [ pt ]		10554230	0					
ANR	10554900	Identifier	onCurve		10554230	0					
ANR	10554901	Identifier	pt		10554230	1					
ANR	10554902	PrimaryExpression	1		10554230	1					
ANR	10554903	CompoundStatement		76:37:2660:2660	10554230	1					
ANR	10554904	IfStatement	if ( onCurve [ prevIndex ] & 1 )		10554230	0					
ANR	10554905	Condition	onCurve [ prevIndex ] & 1	958:24:33312:33333	10554230	0	True				
ANR	10554906	BitAndExpression	onCurve [ prevIndex ] & 1		10554230	0		&			
ANR	10554907	ArrayIndexing	onCurve [ prevIndex ]		10554230	0					
ANR	10554908	Identifier	onCurve		10554230	0					
ANR	10554909	Identifier	prevIndex		10554230	1					
ANR	10554910	PrimaryExpression	1		10554230	1					
ANR	10554911	CompoundStatement		77:48:2710:2710	10554230	1					
ANR	10554912	ExpressionStatement	px = x [ pt ]	959:24:33362:33372	10554230	0	True				
ANR	10554913	AssignmentExpression	px = x [ pt ]		10554230	0		=			
ANR	10554914	Identifier	px		10554230	0					
ANR	10554915	ArrayIndexing	x [ pt ]		10554230	1					
ANR	10554916	Identifier	x		10554230	0					
ANR	10554917	Identifier	pt		10554230	1					
ANR	10554918	ExpressionStatement	py = y [ pt ]	960:24:33398:33408	10554230	1	True				
ANR	10554919	AssignmentExpression	py = y [ pt ]		10554230	0		=			
ANR	10554920	Identifier	py		10554230	0					
ANR	10554921	ArrayIndexing	y [ pt ]		10554230	1					
ANR	10554922	Identifier	y		10554230	0					
ANR	10554923	Identifier	pt		10554230	1					
ANR	10554924	IfStatement	if ( self -> ppx != px || self -> ppy != py )		10554230	2					
ANR	10554925	Condition	self -> ppx != px || self -> ppy != py	961:28:33438:33471	10554230	0	True				
ANR	10554926	OrExpression	self -> ppx != px || self -> ppy != py		10554230	0		||			
ANR	10554927	EqualityExpression	self -> ppx != px		10554230	0		!=			
ANR	10554928	PtrMemberAccess	self -> ppx		10554230	0					
ANR	10554929	Identifier	self		10554230	0					
ANR	10554930	Identifier	ppx		10554230	1					
ANR	10554931	Identifier	px		10554230	1					
ANR	10554932	EqualityExpression	self -> ppy != py		10554230	1		!=			
ANR	10554933	PtrMemberAccess	self -> ppy		10554230	0					
ANR	10554934	Identifier	self		10554230	0					
ANR	10554935	Identifier	ppy		10554230	1					
ANR	10554936	Identifier	py		10554230	1					
ANR	10554937	CompoundStatement		80:64:2848:2848	10554230	1					
ANR	10554938	ExpressionStatement	"TransformF26Dot6PointFloat ( & p1 , px , py , m )"	962:28:33504:33546	10554230	0	True				
ANR	10554939	CallExpression	"TransformF26Dot6PointFloat ( & p1 , px , py , m )"		10554230	0					
ANR	10554940	Callee	TransformF26Dot6PointFloat		10554230	0					
ANR	10554941	Identifier	TransformF26Dot6PointFloat		10554230	0					
ANR	10554942	ArgumentList	& p1		10554230	1					
ANR	10554943	Argument	& p1		10554230	0					
ANR	10554944	UnaryOperationExpression	& p1		10554230	0					
ANR	10554945	UnaryOperator	&		10554230	0					
ANR	10554946	Identifier	p1		10554230	1					
ANR	10554947	Argument	px		10554230	1					
ANR	10554948	Identifier	px		10554230	0					
ANR	10554949	Argument	py		10554230	2					
ANR	10554950	Identifier	py		10554230	0					
ANR	10554951	Argument	m		10554230	3					
ANR	10554952	Identifier	m		10554230	0					
ANR	10554953	ExpressionStatement	"exp -> LineTo ( exp , & p1 )"	963:28:33576:33597	10554230	1	True				
ANR	10554954	CallExpression	"exp -> LineTo ( exp , & p1 )"		10554230	0					
ANR	10554955	Callee	exp -> LineTo		10554230	0					
ANR	10554956	PtrMemberAccess	exp -> LineTo		10554230	0					
ANR	10554957	Identifier	exp		10554230	0					
ANR	10554958	Identifier	LineTo		10554230	1					
ANR	10554959	ArgumentList	exp		10554230	1					
ANR	10554960	Argument	exp		10554230	0					
ANR	10554961	Identifier	exp		10554230	0					
ANR	10554962	Argument	& p1		10554230	1					
ANR	10554963	UnaryOperationExpression	& p1		10554230	0					
ANR	10554964	UnaryOperator	&		10554230	0					
ANR	10554965	Identifier	p1		10554230	1					
ANR	10554966	ExpressionStatement	self -> ppx = px	964:28:33627:33641	10554230	2	True				
ANR	10554967	AssignmentExpression	self -> ppx = px		10554230	0		=			
ANR	10554968	PtrMemberAccess	self -> ppx		10554230	0					
ANR	10554969	Identifier	self		10554230	0					
ANR	10554970	Identifier	ppx		10554230	1					
ANR	10554971	Identifier	px		10554230	1					
ANR	10554972	ExpressionStatement	self -> ppy = py	964:44:33643:33657	10554230	3	True				
ANR	10554973	AssignmentExpression	self -> ppy = py		10554230	0		=			
ANR	10554974	PtrMemberAccess	self -> ppy		10554230	0					
ANR	10554975	Identifier	self		10554230	0					
ANR	10554976	Identifier	ppy		10554230	1					
ANR	10554977	Identifier	py		10554230	1					
ANR	10554978	ExpressionStatement	p0 = p1	965:28:33687:33694	10554230	4	True				
ANR	10554979	AssignmentExpression	p0 = p1		10554230	0		=			
ANR	10554980	Identifier	p0		10554230	0					
ANR	10554981	Identifier	p1		10554230	1					
ANR	10554982	ElseStatement	else		10554230	0					
ANR	10554983	CompoundStatement		88:20:3163:3197	10554230	0					
ANR	10554984	IdentifierDeclStatement	"F26Dot6 prevX , prevY , nextX , nextY ;"	969:20:33789:33823	10554230	0	True				
ANR	10554985	IdentifierDecl	prevX		10554230	0					
ANR	10554986	IdentifierDeclType	F26Dot6		10554230	0					
ANR	10554987	Identifier	prevX		10554230	1					
ANR	10554988	IdentifierDecl	prevY		10554230	1					
ANR	10554989	IdentifierDeclType	F26Dot6		10554230	0					
ANR	10554990	Identifier	prevY		10554230	1					
ANR	10554991	IdentifierDecl	nextX		10554230	2					
ANR	10554992	IdentifierDeclType	F26Dot6		10554230	0					
ANR	10554993	Identifier	nextX		10554230	1					
ANR	10554994	IdentifierDecl	nextY		10554230	3					
ANR	10554995	IdentifierDeclType	F26Dot6		10554230	0					
ANR	10554996	Identifier	nextY		10554230	1					
ANR	10554997	ExpressionStatement	px = x [ pt ]	971:20:33846:33856	10554230	1	True				
ANR	10554998	AssignmentExpression	px = x [ pt ]		10554230	0		=			
ANR	10554999	Identifier	px		10554230	0					
ANR	10555000	ArrayIndexing	x [ pt ]		10554230	1					
ANR	10555001	Identifier	x		10554230	0					
ANR	10555002	Identifier	pt		10554230	1					
ANR	10555003	ExpressionStatement	py = y [ pt ]	972:20:33878:33888	10554230	2	True				
ANR	10555004	AssignmentExpression	py = y [ pt ]		10554230	0		=			
ANR	10555005	Identifier	py		10554230	0					
ANR	10555006	ArrayIndexing	y [ pt ]		10554230	1					
ANR	10555007	Identifier	y		10554230	0					
ANR	10555008	Identifier	pt		10554230	1					
ANR	10555009	Statement	if	973:7:33897:33898	10554230	3	True				
ANR	10555010	Statement	AVECTOR_BUG	973:10:33900:33910	10554230	4	True				
ANR	10555011	IfStatement	if ( x [ pt ] < xMin || xMax < x [ pt ] || y [ pt ] < yMin || yMax < y [ pt ] )		10554230	5					
ANR	10555012	Condition	x [ pt ] < xMin || xMax < x [ pt ] || y [ pt ] < yMin || yMax < y [ pt ]	974:27:33939:33998	10554230	0	True				
ANR	10555013	OrExpression	x [ pt ] < xMin || xMax < x [ pt ] || y [ pt ] < yMin || yMax < y [ pt ]		10554230	0		||			
ANR	10555014	RelationalExpression	x [ pt ] < xMin		10554230	0		<			
ANR	10555015	ArrayIndexing	x [ pt ]		10554230	0					
ANR	10555016	Identifier	x		10554230	0					
ANR	10555017	Identifier	pt		10554230	1					
ANR	10555018	Identifier	xMin		10554230	1					
ANR	10555019	OrExpression	xMax < x [ pt ] || y [ pt ] < yMin || yMax < y [ pt ]		10554230	1		||			
ANR	10555020	RelationalExpression	xMax < x [ pt ]		10554230	0		<			
ANR	10555021	Identifier	xMax		10554230	0					
ANR	10555022	ArrayIndexing	x [ pt ]		10554230	1					
ANR	10555023	Identifier	x		10554230	0					
ANR	10555024	Identifier	pt		10554230	1					
ANR	10555025	OrExpression	y [ pt ] < yMin || yMax < y [ pt ]		10554230	1		||			
ANR	10555026	RelationalExpression	y [ pt ] < yMin		10554230	0		<			
ANR	10555027	ArrayIndexing	y [ pt ]		10554230	0					
ANR	10555028	Identifier	y		10554230	0					
ANR	10555029	Identifier	pt		10554230	1					
ANR	10555030	Identifier	yMin		10554230	1					
ANR	10555031	RelationalExpression	yMax < y [ pt ]		10554230	1		<			
ANR	10555032	Identifier	yMax		10554230	0					
ANR	10555033	ArrayIndexing	y [ pt ]		10554230	1					
ANR	10555034	Identifier	y		10554230	0					
ANR	10555035	Identifier	pt		10554230	1					
ANR	10555036	CompoundStatement		93:89:3375:3375	10554230	1					
ANR	10555037	ExpressionStatement	"px = AVE ( x [ prevIndex ] , x [ nextIndex ] )"	975:28:34031:34065	10554230	0	True				
ANR	10555038	AssignmentExpression	"px = AVE ( x [ prevIndex ] , x [ nextIndex ] )"		10554230	0		=			
ANR	10555039	Identifier	px		10554230	0					
ANR	10555040	CallExpression	"AVE ( x [ prevIndex ] , x [ nextIndex ] )"		10554230	1					
ANR	10555041	Callee	AVE		10554230	0					
ANR	10555042	Identifier	AVE		10554230	0					
ANR	10555043	ArgumentList	x [ prevIndex ]		10554230	1					
ANR	10555044	Argument	x [ prevIndex ]		10554230	0					
ANR	10555045	ArrayIndexing	x [ prevIndex ]		10554230	0					
ANR	10555046	Identifier	x		10554230	0					
ANR	10555047	Identifier	prevIndex		10554230	1					
ANR	10555048	Argument	x [ nextIndex ]		10554230	1					
ANR	10555049	ArrayIndexing	x [ nextIndex ]		10554230	0					
ANR	10555050	Identifier	x		10554230	0					
ANR	10555051	Identifier	nextIndex		10554230	1					
ANR	10555052	ExpressionStatement	"py = AVE ( y [ prevIndex ] , y [ nextIndex ] )"	976:28:34095:34129	10554230	1	True				
ANR	10555053	AssignmentExpression	"py = AVE ( y [ prevIndex ] , y [ nextIndex ] )"		10554230	0		=			
ANR	10555054	Identifier	py		10554230	0					
ANR	10555055	CallExpression	"AVE ( y [ prevIndex ] , y [ nextIndex ] )"		10554230	1					
ANR	10555056	Callee	AVE		10554230	0					
ANR	10555057	Identifier	AVE		10554230	0					
ANR	10555058	ArgumentList	y [ prevIndex ]		10554230	1					
ANR	10555059	Argument	y [ prevIndex ]		10554230	0					
ANR	10555060	ArrayIndexing	y [ prevIndex ]		10554230	0					
ANR	10555061	Identifier	y		10554230	0					
ANR	10555062	Identifier	prevIndex		10554230	1					
ANR	10555063	Argument	y [ nextIndex ]		10554230	1					
ANR	10555064	ArrayIndexing	y [ nextIndex ]		10554230	0					
ANR	10555065	Identifier	y		10554230	0					
ANR	10555066	Identifier	nextIndex		10554230	1					
ANR	10555067	Statement	endif	978:7:34164:34168	10554230	6	True				
ANR	10555068	IfStatement	if ( onCurve [ prevIndex ] & 1 )		10554230	7					
ANR	10555069	Condition	onCurve [ prevIndex ] & 1	979:24:34194:34215	10554230	0	True				
ANR	10555070	BitAndExpression	onCurve [ prevIndex ] & 1		10554230	0		&			
ANR	10555071	ArrayIndexing	onCurve [ prevIndex ]		10554230	0					
ANR	10555072	Identifier	onCurve		10554230	0					
ANR	10555073	Identifier	prevIndex		10554230	1					
ANR	10555074	PrimaryExpression	1		10554230	1					
ANR	10555075	CompoundStatement		98:48:3592:3592	10554230	1					
ANR	10555076	ExpressionStatement	prevX = x [ prevIndex ]	980:24:34244:34264	10554230	0	True				
ANR	10555077	AssignmentExpression	prevX = x [ prevIndex ]		10554230	0		=			
ANR	10555078	Identifier	prevX		10554230	0					
ANR	10555079	ArrayIndexing	x [ prevIndex ]		10554230	1					
ANR	10555080	Identifier	x		10554230	0					
ANR	10555081	Identifier	prevIndex		10554230	1					
ANR	10555082	ExpressionStatement	prevY = y [ prevIndex ]	981:24:34290:34310	10554230	1	True				
ANR	10555083	AssignmentExpression	prevY = y [ prevIndex ]		10554230	0		=			
ANR	10555084	Identifier	prevY		10554230	0					
ANR	10555085	ArrayIndexing	y [ prevIndex ]		10554230	1					
ANR	10555086	Identifier	y		10554230	0					
ANR	10555087	Identifier	prevIndex		10554230	1					
ANR	10555088	ElseStatement	else		10554230	0					
ANR	10555089	CompoundStatement		101:27:3713:3713	10554230	0					
ANR	10555090	ExpressionStatement	"prevX = AVE ( x [ prevIndex ] , px )"	983:24:34365:34394	10554230	0	True				
ANR	10555091	AssignmentExpression	"prevX = AVE ( x [ prevIndex ] , px )"		10554230	0		=			
ANR	10555092	Identifier	prevX		10554230	0					
ANR	10555093	CallExpression	"AVE ( x [ prevIndex ] , px )"		10554230	1					
ANR	10555094	Callee	AVE		10554230	0					
ANR	10555095	Identifier	AVE		10554230	0					
ANR	10555096	ArgumentList	x [ prevIndex ]		10554230	1					
ANR	10555097	Argument	x [ prevIndex ]		10554230	0					
ANR	10555098	ArrayIndexing	x [ prevIndex ]		10554230	0					
ANR	10555099	Identifier	x		10554230	0					
ANR	10555100	Identifier	prevIndex		10554230	1					
ANR	10555101	Argument	px		10554230	1					
ANR	10555102	Identifier	px		10554230	0					
ANR	10555103	ExpressionStatement	"prevY = AVE ( y [ prevIndex ] , py )"	984:24:34420:34449	10554230	1	True				
ANR	10555104	AssignmentExpression	"prevY = AVE ( y [ prevIndex ] , py )"		10554230	0		=			
ANR	10555105	Identifier	prevY		10554230	0					
ANR	10555106	CallExpression	"AVE ( y [ prevIndex ] , py )"		10554230	1					
ANR	10555107	Callee	AVE		10554230	0					
ANR	10555108	Identifier	AVE		10554230	0					
ANR	10555109	ArgumentList	y [ prevIndex ]		10554230	1					
ANR	10555110	Argument	y [ prevIndex ]		10554230	0					
ANR	10555111	ArrayIndexing	y [ prevIndex ]		10554230	0					
ANR	10555112	Identifier	y		10554230	0					
ANR	10555113	Identifier	prevIndex		10554230	1					
ANR	10555114	Argument	py		10554230	1					
ANR	10555115	Identifier	py		10554230	0					
ANR	10555116	IfStatement	if ( onCurve [ nextIndex ] & 1 )		10554230	8					
ANR	10555117	Condition	onCurve [ nextIndex ] & 1	986:24:34497:34518	10554230	0	True				
ANR	10555118	BitAndExpression	onCurve [ nextIndex ] & 1		10554230	0		&			
ANR	10555119	ArrayIndexing	onCurve [ nextIndex ]		10554230	0					
ANR	10555120	Identifier	onCurve		10554230	0					
ANR	10555121	Identifier	nextIndex		10554230	1					
ANR	10555122	PrimaryExpression	1		10554230	1					
ANR	10555123	CompoundStatement		105:48:3895:3895	10554230	1					
ANR	10555124	ExpressionStatement	nextX = x [ nextIndex ]	987:24:34547:34567	10554230	0	True				
ANR	10555125	AssignmentExpression	nextX = x [ nextIndex ]		10554230	0		=			
ANR	10555126	Identifier	nextX		10554230	0					
ANR	10555127	ArrayIndexing	x [ nextIndex ]		10554230	1					
ANR	10555128	Identifier	x		10554230	0					
ANR	10555129	Identifier	nextIndex		10554230	1					
ANR	10555130	ExpressionStatement	nextY = y [ nextIndex ]	988:24:34593:34613	10554230	1	True				
ANR	10555131	AssignmentExpression	nextY = y [ nextIndex ]		10554230	0		=			
ANR	10555132	Identifier	nextY		10554230	0					
ANR	10555133	ArrayIndexing	y [ nextIndex ]		10554230	1					
ANR	10555134	Identifier	y		10554230	0					
ANR	10555135	Identifier	nextIndex		10554230	1					
ANR	10555136	ElseStatement	else		10554230	0					
ANR	10555137	CompoundStatement		108:27:4016:4016	10554230	0					
ANR	10555138	ExpressionStatement	"nextX = AVE ( px , x [ nextIndex ] )"	990:24:34668:34697	10554230	0	True				
ANR	10555139	AssignmentExpression	"nextX = AVE ( px , x [ nextIndex ] )"		10554230	0		=			
ANR	10555140	Identifier	nextX		10554230	0					
ANR	10555141	CallExpression	"AVE ( px , x [ nextIndex ] )"		10554230	1					
ANR	10555142	Callee	AVE		10554230	0					
ANR	10555143	Identifier	AVE		10554230	0					
ANR	10555144	ArgumentList	px		10554230	1					
ANR	10555145	Argument	px		10554230	0					
ANR	10555146	Identifier	px		10554230	0					
ANR	10555147	Argument	x [ nextIndex ]		10554230	1					
ANR	10555148	ArrayIndexing	x [ nextIndex ]		10554230	0					
ANR	10555149	Identifier	x		10554230	0					
ANR	10555150	Identifier	nextIndex		10554230	1					
ANR	10555151	ExpressionStatement	"nextY = AVE ( py , y [ nextIndex ] )"	991:24:34723:34752	10554230	1	True				
ANR	10555152	AssignmentExpression	"nextY = AVE ( py , y [ nextIndex ] )"		10554230	0		=			
ANR	10555153	Identifier	nextY		10554230	0					
ANR	10555154	CallExpression	"AVE ( py , y [ nextIndex ] )"		10554230	1					
ANR	10555155	Callee	AVE		10554230	0					
ANR	10555156	Identifier	AVE		10554230	0					
ANR	10555157	ArgumentList	py		10554230	1					
ANR	10555158	Argument	py		10554230	0					
ANR	10555159	Identifier	py		10554230	0					
ANR	10555160	Argument	y [ nextIndex ]		10554230	1					
ANR	10555161	ArrayIndexing	y [ nextIndex ]		10554230	0					
ANR	10555162	Identifier	y		10554230	0					
ANR	10555163	Identifier	nextIndex		10554230	1					
ANR	10555164	IfStatement	if ( self -> ppx != nextX || self -> ppy != nextY )		10554230	9					
ANR	10555165	Condition	self -> ppx != nextX || self -> ppy != nextY	993:24:34800:34839	10554230	0	True				
ANR	10555166	OrExpression	self -> ppx != nextX || self -> ppy != nextY		10554230	0		||			
ANR	10555167	EqualityExpression	self -> ppx != nextX		10554230	0		!=			
ANR	10555168	PtrMemberAccess	self -> ppx		10554230	0					
ANR	10555169	Identifier	self		10554230	0					
ANR	10555170	Identifier	ppx		10554230	1					
ANR	10555171	Identifier	nextX		10554230	1					
ANR	10555172	EqualityExpression	self -> ppy != nextY		10554230	1		!=			
ANR	10555173	PtrMemberAccess	self -> ppy		10554230	0					
ANR	10555174	Identifier	self		10554230	0					
ANR	10555175	Identifier	ppy		10554230	1					
ANR	10555176	Identifier	nextY		10554230	1					
ANR	10555177	CompoundStatement		114:24:4303:4327	10554230	1					
ANR	10555178	IdentifierDeclStatement	"double dx1 , dy1 , dx2 , dy2 , dx3 , dy3 ;"	994:24:34868:34903	10554230	0	True				
ANR	10555179	IdentifierDecl	dx1		10554230	0					
ANR	10555180	IdentifierDeclType	double		10554230	0					
ANR	10555181	Identifier	dx1		10554230	1					
ANR	10555182	IdentifierDecl	dy1		10554230	1					
ANR	10555183	IdentifierDeclType	double		10554230	0					
ANR	10555184	Identifier	dy1		10554230	1					
ANR	10555185	IdentifierDecl	dx2		10554230	2					
ANR	10555186	IdentifierDeclType	double		10554230	0					
ANR	10555187	Identifier	dx2		10554230	1					
ANR	10555188	IdentifierDecl	dy2		10554230	3					
ANR	10555189	IdentifierDeclType	double		10554230	0					
ANR	10555190	Identifier	dy2		10554230	1					
ANR	10555191	IdentifierDecl	dx3		10554230	4					
ANR	10555192	IdentifierDeclType	double		10554230	0					
ANR	10555193	Identifier	dx3		10554230	1					
ANR	10555194	IdentifierDecl	dy3		10554230	5					
ANR	10555195	IdentifierDeclType	double		10554230	0					
ANR	10555196	Identifier	dy3		10554230	1					
ANR	10555197	IdentifierDeclStatement	const double prec = 1e-6 ;	995:24:34929:34953	10554230	1	True				
ANR	10555198	IdentifierDecl	prec = 1e-6		10554230	0					
ANR	10555199	IdentifierDeclType	const double		10554230	0					
ANR	10555200	Identifier	prec		10554230	1					
ANR	10555201	AssignmentExpression	prec = 1e-6		10554230	2		=			
ANR	10555202	Identifier	prec		10554230	0					
ANR	10555203	PrimaryExpression	1e-6		10554230	1					
ANR	10555204	ExpressionStatement	"TransformF26Dot6PointFloat ( & p1 , ( prevX + ( px << 1 ) ) / 3 , ( prevY + ( py << 1 ) ) / 3 , m )"	997:24:34980:35064	10554230	2	True				
ANR	10555205	CallExpression	"TransformF26Dot6PointFloat ( & p1 , ( prevX + ( px << 1 ) ) / 3 , ( prevY + ( py << 1 ) ) / 3 , m )"		10554230	0					
ANR	10555206	Callee	TransformF26Dot6PointFloat		10554230	0					
ANR	10555207	Identifier	TransformF26Dot6PointFloat		10554230	0					
ANR	10555208	ArgumentList	& p1		10554230	1					
ANR	10555209	Argument	& p1		10554230	0					
ANR	10555210	UnaryOperationExpression	& p1		10554230	0					
ANR	10555211	UnaryOperator	&		10554230	0					
ANR	10555212	Identifier	p1		10554230	1					
ANR	10555213	Argument	( prevX + ( px << 1 ) ) / 3		10554230	1					
ANR	10555214	MultiplicativeExpression	( prevX + ( px << 1 ) ) / 3		10554230	0		/			
ANR	10555215	AdditiveExpression	prevX + ( px << 1 )		10554230	0		+			
ANR	10555216	Identifier	prevX		10554230	0					
ANR	10555217	ShiftExpression	px << 1		10554230	1		<<			
ANR	10555218	Identifier	px		10554230	0					
ANR	10555219	PrimaryExpression	1		10554230	1					
ANR	10555220	PrimaryExpression	3		10554230	1					
ANR	10555221	Argument	( prevY + ( py << 1 ) ) / 3		10554230	2					
ANR	10555222	MultiplicativeExpression	( prevY + ( py << 1 ) ) / 3		10554230	0		/			
ANR	10555223	AdditiveExpression	prevY + ( py << 1 )		10554230	0		+			
ANR	10555224	Identifier	prevY		10554230	0					
ANR	10555225	ShiftExpression	py << 1		10554230	1		<<			
ANR	10555226	Identifier	py		10554230	0					
ANR	10555227	PrimaryExpression	1		10554230	1					
ANR	10555228	PrimaryExpression	3		10554230	1					
ANR	10555229	Argument	m		10554230	3					
ANR	10555230	Identifier	m		10554230	0					
ANR	10555231	ExpressionStatement	"TransformF26Dot6PointFloat ( & p2 , ( nextX + ( px << 1 ) ) / 3 , ( nextY + ( py << 1 ) ) / 3 , m )"	998:24:35090:35174	10554230	3	True				
ANR	10555232	CallExpression	"TransformF26Dot6PointFloat ( & p2 , ( nextX + ( px << 1 ) ) / 3 , ( nextY + ( py << 1 ) ) / 3 , m )"		10554230	0					
ANR	10555233	Callee	TransformF26Dot6PointFloat		10554230	0					
ANR	10555234	Identifier	TransformF26Dot6PointFloat		10554230	0					
ANR	10555235	ArgumentList	& p2		10554230	1					
ANR	10555236	Argument	& p2		10554230	0					
ANR	10555237	UnaryOperationExpression	& p2		10554230	0					
ANR	10555238	UnaryOperator	&		10554230	0					
ANR	10555239	Identifier	p2		10554230	1					
ANR	10555240	Argument	( nextX + ( px << 1 ) ) / 3		10554230	1					
ANR	10555241	MultiplicativeExpression	( nextX + ( px << 1 ) ) / 3		10554230	0		/			
ANR	10555242	AdditiveExpression	nextX + ( px << 1 )		10554230	0		+			
ANR	10555243	Identifier	nextX		10554230	0					
ANR	10555244	ShiftExpression	px << 1		10554230	1		<<			
ANR	10555245	Identifier	px		10554230	0					
ANR	10555246	PrimaryExpression	1		10554230	1					
ANR	10555247	PrimaryExpression	3		10554230	1					
ANR	10555248	Argument	( nextY + ( py << 1 ) ) / 3		10554230	2					
ANR	10555249	MultiplicativeExpression	( nextY + ( py << 1 ) ) / 3		10554230	0		/			
ANR	10555250	AdditiveExpression	nextY + ( py << 1 )		10554230	0		+			
ANR	10555251	Identifier	nextY		10554230	0					
ANR	10555252	ShiftExpression	py << 1		10554230	1		<<			
ANR	10555253	Identifier	py		10554230	0					
ANR	10555254	PrimaryExpression	1		10554230	1					
ANR	10555255	PrimaryExpression	3		10554230	1					
ANR	10555256	Argument	m		10554230	3					
ANR	10555257	Identifier	m		10554230	0					
ANR	10555258	ExpressionStatement	"TransformF26Dot6PointFloat ( & p3 , nextX , nextY , m )"	999:24:35200:35248	10554230	4	True				
ANR	10555259	CallExpression	"TransformF26Dot6PointFloat ( & p3 , nextX , nextY , m )"		10554230	0					
ANR	10555260	Callee	TransformF26Dot6PointFloat		10554230	0					
ANR	10555261	Identifier	TransformF26Dot6PointFloat		10554230	0					
ANR	10555262	ArgumentList	& p3		10554230	1					
ANR	10555263	Argument	& p3		10554230	0					
ANR	10555264	UnaryOperationExpression	& p3		10554230	0					
ANR	10555265	UnaryOperator	&		10554230	0					
ANR	10555266	Identifier	p3		10554230	1					
ANR	10555267	Argument	nextX		10554230	1					
ANR	10555268	Identifier	nextX		10554230	0					
ANR	10555269	Argument	nextY		10554230	2					
ANR	10555270	Identifier	nextY		10554230	0					
ANR	10555271	Argument	m		10554230	3					
ANR	10555272	Identifier	m		10554230	0					
ANR	10555273	ExpressionStatement	"dx1 = p1 . x - p0 . x , dy1 = p1 . y - p0 . y"	1000:24:35274:35310	10554230	5	True				
ANR	10555274	Expression	"dx1 = p1 . x - p0 . x , dy1 = p1 . y - p0 . y"		10554230	0					
ANR	10555275	AssignmentExpression	dx1 = p1 . x - p0 . x		10554230	0		=			
ANR	10555276	Identifier	dx1		10554230	0					
ANR	10555277	AdditiveExpression	p1 . x - p0 . x		10554230	1		-			
ANR	10555278	MemberAccess	p1 . x		10554230	0					
ANR	10555279	Identifier	p1		10554230	0					
ANR	10555280	Identifier	x		10554230	1					
ANR	10555281	MemberAccess	p0 . x		10554230	1					
ANR	10555282	Identifier	p0		10554230	0					
ANR	10555283	Identifier	x		10554230	1					
ANR	10555284	AssignmentExpression	dy1 = p1 . y - p0 . y		10554230	1		=			
ANR	10555285	Identifier	dy1		10554230	0					
ANR	10555286	AdditiveExpression	p1 . y - p0 . y		10554230	1		-			
ANR	10555287	MemberAccess	p1 . y		10554230	0					
ANR	10555288	Identifier	p1		10554230	0					
ANR	10555289	Identifier	y		10554230	1					
ANR	10555290	MemberAccess	p0 . y		10554230	1					
ANR	10555291	Identifier	p0		10554230	0					
ANR	10555292	Identifier	y		10554230	1					
ANR	10555293	ExpressionStatement	"dx2 = p2 . x - p0 . x , dy2 = p2 . y - p0 . y"	1001:24:35336:35372	10554230	6	True				
ANR	10555294	Expression	"dx2 = p2 . x - p0 . x , dy2 = p2 . y - p0 . y"		10554230	0					
ANR	10555295	AssignmentExpression	dx2 = p2 . x - p0 . x		10554230	0		=			
ANR	10555296	Identifier	dx2		10554230	0					
ANR	10555297	AdditiveExpression	p2 . x - p0 . x		10554230	1		-			
ANR	10555298	MemberAccess	p2 . x		10554230	0					
ANR	10555299	Identifier	p2		10554230	0					
ANR	10555300	Identifier	x		10554230	1					
ANR	10555301	MemberAccess	p0 . x		10554230	1					
ANR	10555302	Identifier	p0		10554230	0					
ANR	10555303	Identifier	x		10554230	1					
ANR	10555304	AssignmentExpression	dy2 = p2 . y - p0 . y		10554230	1		=			
ANR	10555305	Identifier	dy2		10554230	0					
ANR	10555306	AdditiveExpression	p2 . y - p0 . y		10554230	1		-			
ANR	10555307	MemberAccess	p2 . y		10554230	0					
ANR	10555308	Identifier	p2		10554230	0					
ANR	10555309	Identifier	y		10554230	1					
ANR	10555310	MemberAccess	p0 . y		10554230	1					
ANR	10555311	Identifier	p0		10554230	0					
ANR	10555312	Identifier	y		10554230	1					
ANR	10555313	ExpressionStatement	"dx3 = p3 . x - p0 . x , dy3 = p3 . y - p0 . y"	1002:24:35398:35434	10554230	7	True				
ANR	10555314	Expression	"dx3 = p3 . x - p0 . x , dy3 = p3 . y - p0 . y"		10554230	0					
ANR	10555315	AssignmentExpression	dx3 = p3 . x - p0 . x		10554230	0		=			
ANR	10555316	Identifier	dx3		10554230	0					
ANR	10555317	AdditiveExpression	p3 . x - p0 . x		10554230	1		-			
ANR	10555318	MemberAccess	p3 . x		10554230	0					
ANR	10555319	Identifier	p3		10554230	0					
ANR	10555320	Identifier	x		10554230	1					
ANR	10555321	MemberAccess	p0 . x		10554230	1					
ANR	10555322	Identifier	p0		10554230	0					
ANR	10555323	Identifier	x		10554230	1					
ANR	10555324	AssignmentExpression	dy3 = p3 . y - p0 . y		10554230	1		=			
ANR	10555325	Identifier	dy3		10554230	0					
ANR	10555326	AdditiveExpression	p3 . y - p0 . y		10554230	1		-			
ANR	10555327	MemberAccess	p3 . y		10554230	0					
ANR	10555328	Identifier	p3		10554230	0					
ANR	10555329	Identifier	y		10554230	1					
ANR	10555330	MemberAccess	p0 . y		10554230	1					
ANR	10555331	Identifier	p0		10554230	0					
ANR	10555332	Identifier	y		10554230	1					
ANR	10555333	IfStatement	if ( fabs ( dx1 * dy3 - dy1 * dx3 ) > prec * fabs ( dx1 * dx3 - dy1 * dy3 ) || fabs ( dx2 * dy3 - dy2 * dx3 ) > prec * fabs ( dx2 * dx3 - dy2 * dy3 ) )		10554230	8					
ANR	10555334	Condition	fabs ( dx1 * dy3 - dy1 * dx3 ) > prec * fabs ( dx1 * dx3 - dy1 * dy3 ) || fabs ( dx2 * dy3 - dy2 * dx3 ) > prec * fabs ( dx2 * dx3 - dy2 * dy3 )	1003:28:35464:35623	10554230	0	True				
ANR	10555335	OrExpression	fabs ( dx1 * dy3 - dy1 * dx3 ) > prec * fabs ( dx1 * dx3 - dy1 * dy3 ) || fabs ( dx2 * dy3 - dy2 * dx3 ) > prec * fabs ( dx2 * dx3 - dy2 * dy3 )		10554230	0		||			
ANR	10555336	RelationalExpression	fabs ( dx1 * dy3 - dy1 * dx3 ) > prec * fabs ( dx1 * dx3 - dy1 * dy3 )		10554230	0		>			
ANR	10555337	CallExpression	fabs ( dx1 * dy3 - dy1 * dx3 )		10554230	0					
ANR	10555338	Callee	fabs		10554230	0					
ANR	10555339	Identifier	fabs		10554230	0					
ANR	10555340	ArgumentList	dx1 * dy3 - dy1 * dx3		10554230	1					
ANR	10555341	Argument	dx1 * dy3 - dy1 * dx3		10554230	0					
ANR	10555342	AdditiveExpression	dx1 * dy3 - dy1 * dx3		10554230	0		-			
ANR	10555343	MultiplicativeExpression	dx1 * dy3		10554230	0		*			
ANR	10555344	Identifier	dx1		10554230	0					
ANR	10555345	Identifier	dy3		10554230	1					
ANR	10555346	MultiplicativeExpression	dy1 * dx3		10554230	1		*			
ANR	10555347	Identifier	dy1		10554230	0					
ANR	10555348	Identifier	dx3		10554230	1					
ANR	10555349	MultiplicativeExpression	prec * fabs ( dx1 * dx3 - dy1 * dy3 )		10554230	1		*			
ANR	10555350	Identifier	prec		10554230	0					
ANR	10555351	CallExpression	fabs ( dx1 * dx3 - dy1 * dy3 )		10554230	1					
ANR	10555352	Callee	fabs		10554230	0					
ANR	10555353	Identifier	fabs		10554230	0					
ANR	10555354	ArgumentList	dx1 * dx3 - dy1 * dy3		10554230	1					
ANR	10555355	Argument	dx1 * dx3 - dy1 * dy3		10554230	0					
ANR	10555356	AdditiveExpression	dx1 * dx3 - dy1 * dy3		10554230	0		-			
ANR	10555357	MultiplicativeExpression	dx1 * dx3		10554230	0		*			
ANR	10555358	Identifier	dx1		10554230	0					
ANR	10555359	Identifier	dx3		10554230	1					
ANR	10555360	MultiplicativeExpression	dy1 * dy3		10554230	1		*			
ANR	10555361	Identifier	dy1		10554230	0					
ANR	10555362	Identifier	dy3		10554230	1					
ANR	10555363	RelationalExpression	fabs ( dx2 * dy3 - dy2 * dx3 ) > prec * fabs ( dx2 * dx3 - dy2 * dy3 )		10554230	1		>			
ANR	10555364	CallExpression	fabs ( dx2 * dy3 - dy2 * dx3 )		10554230	0					
ANR	10555365	Callee	fabs		10554230	0					
ANR	10555366	Identifier	fabs		10554230	0					
ANR	10555367	ArgumentList	dx2 * dy3 - dy2 * dx3		10554230	1					
ANR	10555368	Argument	dx2 * dy3 - dy2 * dx3		10554230	0					
ANR	10555369	AdditiveExpression	dx2 * dy3 - dy2 * dx3		10554230	0		-			
ANR	10555370	MultiplicativeExpression	dx2 * dy3		10554230	0		*			
ANR	10555371	Identifier	dx2		10554230	0					
ANR	10555372	Identifier	dy3		10554230	1					
ANR	10555373	MultiplicativeExpression	dy2 * dx3		10554230	1		*			
ANR	10555374	Identifier	dy2		10554230	0					
ANR	10555375	Identifier	dx3		10554230	1					
ANR	10555376	MultiplicativeExpression	prec * fabs ( dx2 * dx3 - dy2 * dy3 )		10554230	1		*			
ANR	10555377	Identifier	prec		10554230	0					
ANR	10555378	CallExpression	fabs ( dx2 * dx3 - dy2 * dy3 )		10554230	1					
ANR	10555379	Callee	fabs		10554230	0					
ANR	10555380	Identifier	fabs		10554230	0					
ANR	10555381	ArgumentList	dx2 * dx3 - dy2 * dy3		10554230	1					
ANR	10555382	Argument	dx2 * dx3 - dy2 * dy3		10554230	0					
ANR	10555383	AdditiveExpression	dx2 * dx3 - dy2 * dy3		10554230	0		-			
ANR	10555384	MultiplicativeExpression	dx2 * dx3		10554230	0		*			
ANR	10555385	Identifier	dx2		10554230	0					
ANR	10555386	Identifier	dx3		10554230	1					
ANR	10555387	MultiplicativeExpression	dy2 * dy3		10554230	1		*			
ANR	10555388	Identifier	dy2		10554230	0					
ANR	10555389	Identifier	dy3		10554230	1					
ANR	10555390	ExpressionStatement	"exp -> CurveTo ( exp , & p1 , & p2 , & p3 )"	1005:28:35654:35686	10554230	1	True				
ANR	10555391	CallExpression	"exp -> CurveTo ( exp , & p1 , & p2 , & p3 )"		10554230	0					
ANR	10555392	Callee	exp -> CurveTo		10554230	0					
ANR	10555393	PtrMemberAccess	exp -> CurveTo		10554230	0					
ANR	10555394	Identifier	exp		10554230	0					
ANR	10555395	Identifier	CurveTo		10554230	1					
ANR	10555396	ArgumentList	exp		10554230	1					
ANR	10555397	Argument	exp		10554230	0					
ANR	10555398	Identifier	exp		10554230	0					
ANR	10555399	Argument	& p1		10554230	1					
ANR	10555400	UnaryOperationExpression	& p1		10554230	0					
ANR	10555401	UnaryOperator	&		10554230	0					
ANR	10555402	Identifier	p1		10554230	1					
ANR	10555403	Argument	& p2		10554230	2					
ANR	10555404	UnaryOperationExpression	& p2		10554230	0					
ANR	10555405	UnaryOperator	&		10554230	0					
ANR	10555406	Identifier	p2		10554230	1					
ANR	10555407	Argument	& p3		10554230	3					
ANR	10555408	UnaryOperationExpression	& p3		10554230	0					
ANR	10555409	UnaryOperator	&		10554230	0					
ANR	10555410	Identifier	p3		10554230	1					
ANR	10555411	ElseStatement	else		10554230	0					
ANR	10555412	ExpressionStatement	"exp -> LineTo ( exp , & p3 )"	1007:28:35745:35766	10554230	0	True				
ANR	10555413	CallExpression	"exp -> LineTo ( exp , & p3 )"		10554230	0					
ANR	10555414	Callee	exp -> LineTo		10554230	0					
ANR	10555415	PtrMemberAccess	exp -> LineTo		10554230	0					
ANR	10555416	Identifier	exp		10554230	0					
ANR	10555417	Identifier	LineTo		10554230	1					
ANR	10555418	ArgumentList	exp		10554230	1					
ANR	10555419	Argument	exp		10554230	0					
ANR	10555420	Identifier	exp		10554230	0					
ANR	10555421	Argument	& p3		10554230	1					
ANR	10555422	UnaryOperationExpression	& p3		10554230	0					
ANR	10555423	UnaryOperator	&		10554230	0					
ANR	10555424	Identifier	p3		10554230	1					
ANR	10555425	ExpressionStatement	self -> ppx = nextX	1008:24:35792:35809	10554230	9	True				
ANR	10555426	AssignmentExpression	self -> ppx = nextX		10554230	0		=			
ANR	10555427	PtrMemberAccess	self -> ppx		10554230	0					
ANR	10555428	Identifier	self		10554230	0					
ANR	10555429	Identifier	ppx		10554230	1					
ANR	10555430	Identifier	nextX		10554230	1					
ANR	10555431	ExpressionStatement	self -> ppy = nextY	1008:43:35811:35828	10554230	10	True				
ANR	10555432	AssignmentExpression	self -> ppy = nextY		10554230	0		=			
ANR	10555433	PtrMemberAccess	self -> ppy		10554230	0					
ANR	10555434	Identifier	self		10554230	0					
ANR	10555435	Identifier	ppy		10554230	1					
ANR	10555436	Identifier	nextY		10554230	1					
ANR	10555437	ExpressionStatement	p0 = p3	1009:24:35854:35861	10554230	11	True				
ANR	10555438	AssignmentExpression	p0 = p3		10554230	0		=			
ANR	10555439	Identifier	p0		10554230	0					
ANR	10555440	Identifier	p3		10554230	1					
ANR	10555441	ExpressionStatement	exp -> Close ( exp )	1013:12:35929:35944	10554230	7	True				
ANR	10555442	CallExpression	exp -> Close ( exp )		10554230	0					
ANR	10555443	Callee	exp -> Close		10554230	0					
ANR	10555444	PtrMemberAccess	exp -> Close		10554230	0					
ANR	10555445	Identifier	exp		10554230	0					
ANR	10555446	Identifier	Close		10554230	1					
ANR	10555447	ArgumentList	exp		10554230	1					
ANR	10555448	Argument	exp		10554230	0					
ANR	10555449	Identifier	exp		10554230	0					
ANR	10555450	ExpressionStatement	x += pts	1015:8:35964:35972	10554230	5	True				
ANR	10555451	AssignmentExpression	x += pts		10554230	0		+=			
ANR	10555452	Identifier	x		10554230	0					
ANR	10555453	Identifier	pts		10554230	1					
ANR	10555454	ExpressionStatement	y += pts	1016:8:35982:35990	10554230	6	True				
ANR	10555455	AssignmentExpression	y += pts		10554230	0		+=			
ANR	10555456	Identifier	y		10554230	0					
ANR	10555457	Identifier	pts		10554230	1					
ANR	10555458	ExpressionStatement	onCurve += pts	1017:8:36000:36014	10554230	7	True				
ANR	10555459	AssignmentExpression	onCurve += pts		10554230	0		+=			
ANR	10555460	Identifier	onCurve		10554230	0					
ANR	10555461	Identifier	pts		10554230	1					
ANR	10555462	ExpressionStatement	sp = * endP ++	1018:8:36024:36036	10554230	8	True				
ANR	10555463	AssignmentExpression	sp = * endP ++		10554230	0		=			
ANR	10555464	Identifier	sp		10554230	0					
ANR	10555465	UnaryOperationExpression	* endP ++		10554230	1					
ANR	10555466	UnaryOperator	*		10554230	0					
ANR	10555467	PostIncDecOperationExpression	endP ++		10554230	1					
ANR	10555468	Identifier	endP		10554230	0					
ANR	10555469	IncDec	++		10554230	1					
ANR	10555470	ReturnType	void		10554230	1					
ANR	10555471	Identifier	ttfOutliner__DrawGlyphOutline		10554230	2					
ANR	10555472	ParameterList	ttfOutliner * self		10554230	3					
ANR	10555473	Parameter	ttfOutliner * self	881:35:30606:30622	10554230	0	True				
ANR	10555474	ParameterType	ttfOutliner *		10554230	0					
ANR	10555475	Identifier	self		10554230	1					
ANR	10555476	CFGEntryNode	ENTRY		10554230		True				
ANR	10555477	CFGExitNode	EXIT		10554230		True				
ANR	10555478	Symbol	* x		10554230						
ANR	10555479	Symbol	* y		10554230						
ANR	10555480	Symbol	pt		10554230						
ANR	10555481	Symbol	* endP ++		10554230						
ANR	10555482	Symbol	px		10554230						
ANR	10555483	Symbol	py		10554230						
ANR	10555484	Symbol	TransformF26Dot6PointFloat		10554230						
ANR	10555485	Symbol	yMax		10554230						
ANR	10555486	Symbol	prec		10554230						
ANR	10555487	Symbol	epts -> touch		10554230						
ANR	10555488	Symbol	& exec -> pts		10554230						
ANR	10555489	Symbol	exp		10554230						
ANR	10555490	Symbol	dx1		10554230						
ANR	10555491	Symbol	dx3		10554230						
ANR	10555492	Symbol	dx2		10554230						
ANR	10555493	Symbol	ctr		10554230						
ANR	10555494	Symbol	yMin		10554230						
ANR	10555495	Symbol	* nextIndex		10554230						
ANR	10555496	Symbol	* self		10554230						
ANR	10555497	Symbol	* out		10554230						
ANR	10555498	Symbol	out -> xMinB		10554230						
ANR	10555499	Symbol	dy2		10554230						
ANR	10555500	Symbol	dy1		10554230						
ANR	10555501	Symbol	* epts		10554230						
ANR	10555502	Symbol	onCurve		10554230						
ANR	10555503	Symbol	dy3		10554230						
ANR	10555504	Symbol	epts		10554230						
ANR	10555505	Symbol	& self -> out		10554230						
ANR	10555506	Symbol	p2 . x		10554230						
ANR	10555507	Symbol	p2 . y		10554230						
ANR	10555508	Symbol	out -> xMaxB		10554230						
ANR	10555509	Symbol	out		10554230						
ANR	10555510	Symbol	pFont -> nUnitsPerEm		10554230						
ANR	10555511	Symbol	sp		10554230						
ANR	10555512	Symbol	& self -> post_transform		10554230						
ANR	10555513	Symbol	fabs		10554230						
ANR	10555514	Symbol	epts -> contours		10554230						
ANR	10555515	Symbol	m		10554230						
ANR	10555516	Symbol	* ep		10554230						
ANR	10555517	Symbol	p0 . x		10554230						
ANR	10555518	Symbol	out -> advance		10554230						
ANR	10555519	Symbol	p0 . y		10554230						
ANR	10555520	Symbol	self -> pFont		10554230						
ANR	10555521	Symbol	x		10554230						
ANR	10555522	Symbol	expand_x		10554230						
ANR	10555523	Symbol	* exp		10554230						
ANR	10555524	Symbol	self		10554230						
ANR	10555525	Symbol	y		10554230						
ANR	10555526	Symbol	epts -> org_x		10554230						
ANR	10555527	Symbol	epts -> org_y		10554230						
ANR	10555528	Symbol	expand_y		10554230						
ANR	10555529	Symbol	self -> ppx		10554230						
ANR	10555530	Symbol	self -> ppy		10554230						
ANR	10555531	Symbol	xMin		10554230						
ANR	10555532	Symbol	out -> yMinB		10554230						
ANR	10555533	Symbol	pFont		10554230						
ANR	10555534	Symbol	* endP		10554230						
ANR	10555535	Symbol	* onCurve		10554230						
ANR	10555536	Symbol	exp -> bPoints		10554230						
ANR	10555537	Symbol	exp -> bOutline		10554230						
ANR	10555538	Symbol	Scale_Y		10554230						
ANR	10555539	Symbol	Scale_X		10554230						
ANR	10555540	Symbol	pFont -> exec		10554230						
ANR	10555541	Symbol	* pt		10554230						
ANR	10555542	Symbol	ep		10554230						
ANR	10555543	Symbol	AVE		10554230						
ANR	10555544	Symbol	out -> contourCount		10554230						
ANR	10555545	Symbol	* prevIndex		10554230						
ANR	10555546	Symbol	self -> post_transform		10554230						
ANR	10555547	Symbol	self -> post_transform . tx		10554230						
ANR	10555548	Symbol	self -> post_transform . ty		10554230						
ANR	10555549	Symbol	exec		10554230						
ANR	10555550	Symbol	p0		10554230						
ANR	10555551	Symbol	prevIndex		10554230						
ANR	10555552	Symbol	p1		10554230						
ANR	10555553	Symbol	p2		10554230						
ANR	10555554	Symbol	p3		10554230						
ANR	10555555	Symbol	* pFont		10554230						
ANR	10555556	Symbol	& exec -> metrics		10554230						
ANR	10555557	Symbol	p1 . x		10554230						
ANR	10555558	Symbol	p1 . y		10554230						
ANR	10555559	Symbol	nextIndex		10554230						
ANR	10555560	Symbol	self -> exp		10554230						
ANR	10555561	Symbol	p3 . x		10554230						
ANR	10555562	Symbol	p3 . y		10554230						
ANR	10555563	Symbol	prevY		10554230						
ANR	10555564	Symbol	prevX		10554230						
ANR	10555565	Symbol	& p1		10554230						
ANR	10555566	Symbol	& p0		10554230						
ANR	10555567	Symbol	& p3		10554230						
ANR	10555568	Symbol	& p2		10554230						
ANR	10555569	Symbol	pts		10554230						
ANR	10555570	Symbol	nextX		10554230						
ANR	10555571	Symbol	endP		10554230						
ANR	10555572	Symbol	xMax		10554230						
ANR	10555573	Symbol	out -> yMaxB		10554230						
ANR	10555574	Symbol	nextY		10554230						
ANR	10555575	Function	ttfOutliner__Outline	1022:0:36047:36949							
ANR	10555576	FunctionDef	"ttfOutliner__Outline (ttfOutliner * self , int glyphIndex , float orig_x , float orig_y , FloatMatrix * m1)"		10555575	0					
ANR	10555577	CompoundStatement		1024:0:36166:36949	10555575	0					
ANR	10555578	IdentifierDeclStatement	ttfFont * pFont = self -> pFont ;	1024:3:36170:36198	10555575	0	True				
ANR	10555579	IdentifierDecl	* pFont = self -> pFont		10555575	0					
ANR	10555580	IdentifierDeclType	ttfFont *		10555575	0					
ANR	10555581	Identifier	pFont		10555575	1					
ANR	10555582	AssignmentExpression	* pFont = self -> pFont		10555575	2		=			
ANR	10555583	Identifier	pFont		10555575	0					
ANR	10555584	PtrMemberAccess	self -> pFont		10555575	1					
ANR	10555585	Identifier	self		10555575	0					
ANR	10555586	Identifier	pFont		10555575	1					
ANR	10555587	IdentifierDeclStatement	FontError error ;	1025:4:36204:36219	10555575	1	True				
ANR	10555588	IdentifierDecl	error		10555575	0					
ANR	10555589	IdentifierDeclType	FontError		10555575	0					
ANR	10555590	Identifier	error		10555575	1					
ANR	10555591	ExpressionStatement	self -> post_transform = * m1	1027:4:36226:36252	10555575	2	True				
ANR	10555592	AssignmentExpression	self -> post_transform = * m1		10555575	0		=			
ANR	10555593	PtrMemberAccess	self -> post_transform		10555575	0					
ANR	10555594	Identifier	self		10555575	0					
ANR	10555595	Identifier	post_transform		10555575	1					
ANR	10555596	UnaryOperationExpression	* m1		10555575	1					
ANR	10555597	UnaryOperator	*		10555575	0					
ANR	10555598	Identifier	m1		10555575	1					
ANR	10555599	ExpressionStatement	self -> out . contourCount = 0	1028:4:36258:36284	10555575	3	True				
ANR	10555600	AssignmentExpression	self -> out . contourCount = 0		10555575	0		=			
ANR	10555601	MemberAccess	self -> out . contourCount		10555575	0					
ANR	10555602	PtrMemberAccess	self -> out		10555575	0					
ANR	10555603	Identifier	self		10555575	0					
ANR	10555604	Identifier	out		10555575	1					
ANR	10555605	Identifier	contourCount		10555575	1					
ANR	10555606	PrimaryExpression	0		10555575	1					
ANR	10555607	ExpressionStatement	self -> out . pointCount = 0	1029:4:36290:36314	10555575	4	True				
ANR	10555608	AssignmentExpression	self -> out . pointCount = 0		10555575	0		=			
ANR	10555609	MemberAccess	self -> out . pointCount		10555575	0					
ANR	10555610	PtrMemberAccess	self -> out		10555575	0					
ANR	10555611	Identifier	self		10555575	0					
ANR	10555612	Identifier	out		10555575	1					
ANR	10555613	Identifier	pointCount		10555575	1					
ANR	10555614	PrimaryExpression	0		10555575	1					
ANR	10555615	ExpressionStatement	self -> out . bCompound = FALSE	1030:4:36320:36347	10555575	5	True				
ANR	10555616	AssignmentExpression	self -> out . bCompound = FALSE		10555575	0		=			
ANR	10555617	MemberAccess	self -> out . bCompound		10555575	0					
ANR	10555618	PtrMemberAccess	self -> out		10555575	0					
ANR	10555619	Identifier	self		10555575	0					
ANR	10555620	Identifier	out		10555575	1					
ANR	10555621	Identifier	bCompound		10555575	1					
ANR	10555622	Identifier	FALSE		10555575	1					
ANR	10555623	ExpressionStatement	self -> nPointsTotal = 0	1031:4:36353:36375	10555575	6	True				
ANR	10555624	AssignmentExpression	self -> nPointsTotal = 0		10555575	0		=			
ANR	10555625	PtrMemberAccess	self -> nPointsTotal		10555575	0					
ANR	10555626	Identifier	self		10555575	0					
ANR	10555627	Identifier	nPointsTotal		10555575	1					
ANR	10555628	PrimaryExpression	0		10555575	1					
ANR	10555629	ExpressionStatement	self -> nContoursTotal = 0	1032:4:36381:36405	10555575	7	True				
ANR	10555630	AssignmentExpression	self -> nContoursTotal = 0		10555575	0		=			
ANR	10555631	PtrMemberAccess	self -> nContoursTotal		10555575	0					
ANR	10555632	Identifier	self		10555575	0					
ANR	10555633	Identifier	nContoursTotal		10555575	1					
ANR	10555634	PrimaryExpression	0		10555575	1					
ANR	10555635	ExpressionStatement	self -> out . advance . x = self -> out . advance . y = 0	1033:4:36411:36456	10555575	8	True				
ANR	10555636	AssignmentExpression	self -> out . advance . x = self -> out . advance . y = 0		10555575	0		=			
ANR	10555637	MemberAccess	self -> out . advance . x		10555575	0					
ANR	10555638	MemberAccess	self -> out . advance		10555575	0					
ANR	10555639	PtrMemberAccess	self -> out		10555575	0					
ANR	10555640	Identifier	self		10555575	0					
ANR	10555641	Identifier	out		10555575	1					
ANR	10555642	Identifier	advance		10555575	1					
ANR	10555643	Identifier	x		10555575	1					
ANR	10555644	AssignmentExpression	self -> out . advance . y = 0		10555575	1		=			
ANR	10555645	MemberAccess	self -> out . advance . y		10555575	0					
ANR	10555646	MemberAccess	self -> out . advance		10555575	0					
ANR	10555647	PtrMemberAccess	self -> out		10555575	0					
ANR	10555648	Identifier	self		10555575	0					
ANR	10555649	Identifier	out		10555575	1					
ANR	10555650	Identifier	advance		10555575	1					
ANR	10555651	Identifier	y		10555575	1					
ANR	10555652	PrimaryExpression	0		10555575	1					
ANR	10555653	ExpressionStatement	ttfFont__StartGlyph ( pFont )	1034:4:36462:36488	10555575	9	True				
ANR	10555654	CallExpression	ttfFont__StartGlyph ( pFont )		10555575	0					
ANR	10555655	Callee	ttfFont__StartGlyph		10555575	0					
ANR	10555656	Identifier	ttfFont__StartGlyph		10555575	0					
ANR	10555657	ArgumentList	pFont		10555575	1					
ANR	10555658	Argument	pFont		10555575	0					
ANR	10555659	Identifier	pFont		10555575	0					
ANR	10555660	ExpressionStatement	"error = ttfOutliner__BuildGlyphOutline ( self , glyphIndex , orig_x , orig_y , & self -> out )"	1035:4:36494:36578	10555575	10	True				
ANR	10555661	AssignmentExpression	"error = ttfOutliner__BuildGlyphOutline ( self , glyphIndex , orig_x , orig_y , & self -> out )"		10555575	0		=			
ANR	10555662	Identifier	error		10555575	0					
ANR	10555663	CallExpression	"ttfOutliner__BuildGlyphOutline ( self , glyphIndex , orig_x , orig_y , & self -> out )"		10555575	1					
ANR	10555664	Callee	ttfOutliner__BuildGlyphOutline		10555575	0					
ANR	10555665	Identifier	ttfOutliner__BuildGlyphOutline		10555575	0					
ANR	10555666	ArgumentList	self		10555575	1					
ANR	10555667	Argument	self		10555575	0					
ANR	10555668	Identifier	self		10555575	0					
ANR	10555669	Argument	glyphIndex		10555575	1					
ANR	10555670	Identifier	glyphIndex		10555575	0					
ANR	10555671	Argument	orig_x		10555575	2					
ANR	10555672	Identifier	orig_x		10555575	0					
ANR	10555673	Argument	orig_y		10555575	3					
ANR	10555674	Identifier	orig_y		10555575	0					
ANR	10555675	Argument	& self -> out		10555575	4					
ANR	10555676	UnaryOperationExpression	& self -> out		10555575	0					
ANR	10555677	UnaryOperator	&		10555575	0					
ANR	10555678	PtrMemberAccess	self -> out		10555575	1					
ANR	10555679	Identifier	self		10555575	0					
ANR	10555680	Identifier	out		10555575	1					
ANR	10555681	ExpressionStatement	ttfFont__StopGlyph ( pFont )	1036:4:36584:36609	10555575	11	True				
ANR	10555682	CallExpression	ttfFont__StopGlyph ( pFont )		10555575	0					
ANR	10555683	Callee	ttfFont__StopGlyph		10555575	0					
ANR	10555684	Identifier	ttfFont__StopGlyph		10555575	0					
ANR	10555685	ArgumentList	pFont		10555575	1					
ANR	10555686	Argument	pFont		10555575	0					
ANR	10555687	Identifier	pFont		10555575	0					
ANR	10555688	IfStatement	if ( pFont -> nUnitsPerEm <= 0 )		10555575	12					
ANR	10555689	Condition	pFont -> nUnitsPerEm <= 0	1037:8:36619:36641	10555575	0	True				
ANR	10555690	RelationalExpression	pFont -> nUnitsPerEm <= 0		10555575	0		<=			
ANR	10555691	PtrMemberAccess	pFont -> nUnitsPerEm		10555575	0					
ANR	10555692	Identifier	pFont		10555575	0					
ANR	10555693	Identifier	nUnitsPerEm		10555575	1					
ANR	10555694	PrimaryExpression	0		10555575	1					
ANR	10555695	ExpressionStatement	pFont -> nUnitsPerEm = 1024	1038:8:36652:36677	10555575	1	True				
ANR	10555696	AssignmentExpression	pFont -> nUnitsPerEm = 1024		10555575	0		=			
ANR	10555697	PtrMemberAccess	pFont -> nUnitsPerEm		10555575	0					
ANR	10555698	Identifier	pFont		10555575	0					
ANR	10555699	Identifier	nUnitsPerEm		10555575	1					
ANR	10555700	PrimaryExpression	1024		10555575	1					
ANR	10555701	IfStatement	if ( pFont -> design_grid )		10555575	13					
ANR	10555702	Condition	pFont -> design_grid	1039:8:36687:36704	10555575	0	True				
ANR	10555703	PtrMemberAccess	pFont -> design_grid		10555575	0					
ANR	10555704	Identifier	pFont		10555575	0					
ANR	10555705	Identifier	design_grid		10555575	1					
ANR	10555706	CompoundStatement		16:28:540:540	10555575	1					
ANR	10555707	ExpressionStatement	self -> post_transform . a /= pFont -> nUnitsPerEm	1040:8:36717:36761	10555575	0	True				
ANR	10555708	AssignmentExpression	self -> post_transform . a /= pFont -> nUnitsPerEm		10555575	0		/=			
ANR	10555709	MemberAccess	self -> post_transform . a		10555575	0					
ANR	10555710	PtrMemberAccess	self -> post_transform		10555575	0					
ANR	10555711	Identifier	self		10555575	0					
ANR	10555712	Identifier	post_transform		10555575	1					
ANR	10555713	Identifier	a		10555575	1					
ANR	10555714	PtrMemberAccess	pFont -> nUnitsPerEm		10555575	1					
ANR	10555715	Identifier	pFont		10555575	0					
ANR	10555716	Identifier	nUnitsPerEm		10555575	1					
ANR	10555717	ExpressionStatement	self -> post_transform . b /= pFont -> nUnitsPerEm	1041:8:36771:36815	10555575	1	True				
ANR	10555718	AssignmentExpression	self -> post_transform . b /= pFont -> nUnitsPerEm		10555575	0		/=			
ANR	10555719	MemberAccess	self -> post_transform . b		10555575	0					
ANR	10555720	PtrMemberAccess	self -> post_transform		10555575	0					
ANR	10555721	Identifier	self		10555575	0					
ANR	10555722	Identifier	post_transform		10555575	1					
ANR	10555723	Identifier	b		10555575	1					
ANR	10555724	PtrMemberAccess	pFont -> nUnitsPerEm		10555575	1					
ANR	10555725	Identifier	pFont		10555575	0					
ANR	10555726	Identifier	nUnitsPerEm		10555575	1					
ANR	10555727	ExpressionStatement	self -> post_transform . c /= pFont -> nUnitsPerEm	1042:8:36825:36869	10555575	2	True				
ANR	10555728	AssignmentExpression	self -> post_transform . c /= pFont -> nUnitsPerEm		10555575	0		/=			
ANR	10555729	MemberAccess	self -> post_transform . c		10555575	0					
ANR	10555730	PtrMemberAccess	self -> post_transform		10555575	0					
ANR	10555731	Identifier	self		10555575	0					
ANR	10555732	Identifier	post_transform		10555575	1					
ANR	10555733	Identifier	c		10555575	1					
ANR	10555734	PtrMemberAccess	pFont -> nUnitsPerEm		10555575	1					
ANR	10555735	Identifier	pFont		10555575	0					
ANR	10555736	Identifier	nUnitsPerEm		10555575	1					
ANR	10555737	ExpressionStatement	self -> post_transform . d /= pFont -> nUnitsPerEm	1043:8:36879:36923	10555575	3	True				
ANR	10555738	AssignmentExpression	self -> post_transform . d /= pFont -> nUnitsPerEm		10555575	0		/=			
ANR	10555739	MemberAccess	self -> post_transform . d		10555575	0					
ANR	10555740	PtrMemberAccess	self -> post_transform		10555575	0					
ANR	10555741	Identifier	self		10555575	0					
ANR	10555742	Identifier	post_transform		10555575	1					
ANR	10555743	Identifier	d		10555575	1					
ANR	10555744	PtrMemberAccess	pFont -> nUnitsPerEm		10555575	1					
ANR	10555745	Identifier	pFont		10555575	0					
ANR	10555746	Identifier	nUnitsPerEm		10555575	1					
ANR	10555747	ReturnStatement	return error ;	1045:4:36935:36947	10555575	14	True				
ANR	10555748	Identifier	error		10555575	0					
ANR	10555749	ReturnType	FontError		10555575	1					
ANR	10555750	Identifier	ttfOutliner__Outline		10555575	2					
ANR	10555751	ParameterList	"ttfOutliner * self , int glyphIndex , float orig_x , float orig_y , FloatMatrix * m1"		10555575	3					
ANR	10555752	Parameter	ttfOutliner * self	1022:31:36078:36094	10555575	0	True				
ANR	10555753	ParameterType	ttfOutliner *		10555575	0					
ANR	10555754	Identifier	self		10555575	1					
ANR	10555755	Parameter	int glyphIndex	1022:50:36097:36110	10555575	1	True				
ANR	10555756	ParameterType	int		10555575	0					
ANR	10555757	Identifier	glyphIndex		10555575	1					
ANR	10555758	Parameter	float orig_x	1023:8:36121:36132	10555575	2	True				
ANR	10555759	ParameterType	float		10555575	0					
ANR	10555760	Identifier	orig_x		10555575	1					
ANR	10555761	Parameter	float orig_y	1023:22:36135:36146	10555575	3	True				
ANR	10555762	ParameterType	float		10555575	0					
ANR	10555763	Identifier	orig_y		10555575	1					
ANR	10555764	Parameter	FloatMatrix * m1	1023:36:36149:36163	10555575	4	True				
ANR	10555765	ParameterType	FloatMatrix *		10555575	0					
ANR	10555766	Identifier	m1		10555575	1					
ANR	10555767	CFGEntryNode	ENTRY		10555575		True				
ANR	10555768	CFGExitNode	EXIT		10555575		True				
ANR	10555769	Symbol	glyphIndex		10555575						
ANR	10555770	Symbol	self -> out . bCompound		10555575						
ANR	10555771	Symbol	* pFont		10555575						
ANR	10555772	Symbol	& self -> out		10555575						
ANR	10555773	Symbol	* m1		10555575						
ANR	10555774	Symbol	error		10555575						
ANR	10555775	Symbol	pFont -> nUnitsPerEm		10555575						
ANR	10555776	Symbol	pFont		10555575						
ANR	10555777	Symbol	self -> out . contourCount		10555575						
ANR	10555778	Symbol	pFont -> design_grid		10555575						
ANR	10555779	Symbol	orig_y		10555575						
ANR	10555780	Symbol	orig_x		10555575						
ANR	10555781	Symbol	self -> nContoursTotal		10555575						
ANR	10555782	Symbol	ttfOutliner__BuildGlyphOutline		10555575						
ANR	10555783	Symbol	m1		10555575						
ANR	10555784	Symbol	self -> post_transform . d		10555575						
ANR	10555785	Symbol	* self		10555575						
ANR	10555786	Symbol	self -> post_transform . c		10555575						
ANR	10555787	Symbol	self -> post_transform . b		10555575						
ANR	10555788	Symbol	self -> nPointsTotal		10555575						
ANR	10555789	Symbol	self -> post_transform . a		10555575						
ANR	10555790	Symbol	self -> out		10555575						
ANR	10555791	Symbol	self -> out . pointCount		10555575						
ANR	10555792	Symbol	self -> out . advance . x		10555575						
ANR	10555793	Symbol	self -> out . advance . y		10555575						
ANR	10555794	Symbol	self -> pFont		10555575						
ANR	10555795	Symbol	self		10555575						
ANR	10555796	Symbol	FALSE		10555575						
ANR	10555797	Symbol	self -> post_transform		10555575						
ANR	10555798	Symbol	self -> out . advance		10555575						
