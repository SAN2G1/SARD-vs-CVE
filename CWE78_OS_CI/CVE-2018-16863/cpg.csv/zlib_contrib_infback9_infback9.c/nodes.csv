command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	11180275	File	data/converged/CVE-2018-16863_ghostpdl/zlib_contrib_infback9_infback9.c								
ANR	11180276	DeclStmt									
ANR	11180277	Decl							z_stream FAR	z_stream FAR *	strm
ANR	11180278	DeclStmt									
ANR	11180279	Decl							unsigned char FAR	unsigned char FAR *	window
ANR	11180280	DeclStmt									
ANR	11180281	Decl							const char	const char *	version
ANR	11180282	DeclStmt									
ANR	11180283	Decl							int	int	stream_size
ANR	11180284	DeclStmt									
ANR	11180285	Decl							struct inflate_state FAR	struct inflate_state FAR *	state
ANR	11180286	Function	makefixed9	54:0:1589:3411							
ANR	11180287	FunctionDef	makefixed9 ()		11180286	0					
ANR	11180288	CompoundStatement		55:0:1611:3411	11180286	0					
ANR	11180289	IdentifierDeclStatement	"unsigned sym , bits , low , size ;"	56:4:1617:1646	11180286	0	True				
ANR	11180290	IdentifierDecl	sym		11180286	0					
ANR	11180291	IdentifierDeclType	unsigned		11180286	0					
ANR	11180292	Identifier	sym		11180286	1					
ANR	11180293	IdentifierDecl	bits		11180286	1					
ANR	11180294	IdentifierDeclType	unsigned		11180286	0					
ANR	11180295	Identifier	bits		11180286	1					
ANR	11180296	IdentifierDecl	low		11180286	2					
ANR	11180297	IdentifierDeclType	unsigned		11180286	0					
ANR	11180298	Identifier	low		11180286	1					
ANR	11180299	IdentifierDecl	size		11180286	3					
ANR	11180300	IdentifierDeclType	unsigned		11180286	0					
ANR	11180301	Identifier	size		11180286	1					
ANR	11180302	IdentifierDeclStatement	"code * next , * lenfix , * distfix ;"	57:4:1652:1681	11180286	1	True				
ANR	11180303	IdentifierDecl	* next		11180286	0					
ANR	11180304	IdentifierDeclType	code *		11180286	0					
ANR	11180305	Identifier	next		11180286	1					
ANR	11180306	IdentifierDecl	* lenfix		11180286	1					
ANR	11180307	IdentifierDeclType	code *		11180286	0					
ANR	11180308	Identifier	lenfix		11180286	1					
ANR	11180309	IdentifierDecl	* distfix		11180286	2					
ANR	11180310	IdentifierDeclType	code *		11180286	0					
ANR	11180311	Identifier	distfix		11180286	1					
ANR	11180312	IdentifierDeclStatement	struct inflate_state state ;	58:4:1687:1713	11180286	2	True				
ANR	11180313	IdentifierDecl	state		11180286	0					
ANR	11180314	IdentifierDeclType	struct inflate_state		11180286	0					
ANR	11180315	Identifier	state		11180286	1					
ANR	11180316	IdentifierDeclStatement	code fixed [ 544 ] ;	59:4:1719:1734	11180286	3	True				
ANR	11180317	IdentifierDecl	fixed [ 544 ]		11180286	0					
ANR	11180318	IdentifierDeclType	code [ 544 ]		11180286	0					
ANR	11180319	Identifier	fixed		11180286	1					
ANR	11180320	PrimaryExpression	544		11180286	2					
ANR	11180321	ExpressionStatement	sym = 0	62:4:1772:1779	11180286	4	True				
ANR	11180322	AssignmentExpression	sym = 0		11180286	0		=			
ANR	11180323	Identifier	sym		11180286	0					
ANR	11180324	PrimaryExpression	0		11180286	1					
ANR	11180325	WhileStatement	while ( sym < 144 )		11180286	5					
ANR	11180326	Condition	sym < 144	63:11:1792:1800	11180286	0	True				
ANR	11180327	RelationalExpression	sym < 144		11180286	0		<			
ANR	11180328	Identifier	sym		11180286	0					
ANR	11180329	PrimaryExpression	144		11180286	1					
ANR	11180330	ExpressionStatement	state . lens [ sym ++ ] = 8	63:22:1803:1824	11180286	1	True				
ANR	11180331	AssignmentExpression	state . lens [ sym ++ ] = 8		11180286	0		=			
ANR	11180332	ArrayIndexing	state . lens [ sym ++ ]		11180286	0					
ANR	11180333	MemberAccess	state . lens		11180286	0					
ANR	11180334	Identifier	state		11180286	0					
ANR	11180335	Identifier	lens		11180286	1					
ANR	11180336	PostIncDecOperationExpression	sym ++		11180286	1					
ANR	11180337	Identifier	sym		11180286	0					
ANR	11180338	IncDec	++		11180286	1					
ANR	11180339	PrimaryExpression	8		11180286	1					
ANR	11180340	WhileStatement	while ( sym < 256 )		11180286	6					
ANR	11180341	Condition	sym < 256	64:11:1837:1845	11180286	0	True				
ANR	11180342	RelationalExpression	sym < 256		11180286	0		<			
ANR	11180343	Identifier	sym		11180286	0					
ANR	11180344	PrimaryExpression	256		11180286	1					
ANR	11180345	ExpressionStatement	state . lens [ sym ++ ] = 9	64:22:1848:1869	11180286	1	True				
ANR	11180346	AssignmentExpression	state . lens [ sym ++ ] = 9		11180286	0		=			
ANR	11180347	ArrayIndexing	state . lens [ sym ++ ]		11180286	0					
ANR	11180348	MemberAccess	state . lens		11180286	0					
ANR	11180349	Identifier	state		11180286	0					
ANR	11180350	Identifier	lens		11180286	1					
ANR	11180351	PostIncDecOperationExpression	sym ++		11180286	1					
ANR	11180352	Identifier	sym		11180286	0					
ANR	11180353	IncDec	++		11180286	1					
ANR	11180354	PrimaryExpression	9		11180286	1					
ANR	11180355	WhileStatement	while ( sym < 280 )		11180286	7					
ANR	11180356	Condition	sym < 280	65:11:1882:1890	11180286	0	True				
ANR	11180357	RelationalExpression	sym < 280		11180286	0		<			
ANR	11180358	Identifier	sym		11180286	0					
ANR	11180359	PrimaryExpression	280		11180286	1					
ANR	11180360	ExpressionStatement	state . lens [ sym ++ ] = 7	65:22:1893:1914	11180286	1	True				
ANR	11180361	AssignmentExpression	state . lens [ sym ++ ] = 7		11180286	0		=			
ANR	11180362	ArrayIndexing	state . lens [ sym ++ ]		11180286	0					
ANR	11180363	MemberAccess	state . lens		11180286	0					
ANR	11180364	Identifier	state		11180286	0					
ANR	11180365	Identifier	lens		11180286	1					
ANR	11180366	PostIncDecOperationExpression	sym ++		11180286	1					
ANR	11180367	Identifier	sym		11180286	0					
ANR	11180368	IncDec	++		11180286	1					
ANR	11180369	PrimaryExpression	7		11180286	1					
ANR	11180370	WhileStatement	while ( sym < 288 )		11180286	8					
ANR	11180371	Condition	sym < 288	66:11:1927:1935	11180286	0	True				
ANR	11180372	RelationalExpression	sym < 288		11180286	0		<			
ANR	11180373	Identifier	sym		11180286	0					
ANR	11180374	PrimaryExpression	288		11180286	1					
ANR	11180375	ExpressionStatement	state . lens [ sym ++ ] = 8	66:22:1938:1959	11180286	1	True				
ANR	11180376	AssignmentExpression	state . lens [ sym ++ ] = 8		11180286	0		=			
ANR	11180377	ArrayIndexing	state . lens [ sym ++ ]		11180286	0					
ANR	11180378	MemberAccess	state . lens		11180286	0					
ANR	11180379	Identifier	state		11180286	0					
ANR	11180380	Identifier	lens		11180286	1					
ANR	11180381	PostIncDecOperationExpression	sym ++		11180286	1					
ANR	11180382	Identifier	sym		11180286	0					
ANR	11180383	IncDec	++		11180286	1					
ANR	11180384	PrimaryExpression	8		11180286	1					
ANR	11180385	ExpressionStatement	next = fixed	67:4:1965:1977	11180286	9	True				
ANR	11180386	AssignmentExpression	next = fixed		11180286	0		=			
ANR	11180387	Identifier	next		11180286	0					
ANR	11180388	Identifier	fixed		11180286	1					
ANR	11180389	ExpressionStatement	lenfix = next	68:4:1983:1996	11180286	10	True				
ANR	11180390	AssignmentExpression	lenfix = next		11180286	0		=			
ANR	11180391	Identifier	lenfix		11180286	0					
ANR	11180392	Identifier	next		11180286	1					
ANR	11180393	ExpressionStatement	bits = 9	69:4:2002:2010	11180286	11	True				
ANR	11180394	AssignmentExpression	bits = 9		11180286	0		=			
ANR	11180395	Identifier	bits		11180286	0					
ANR	11180396	PrimaryExpression	9		11180286	1					
ANR	11180397	ExpressionStatement	"inflate_table9 ( LENS , state . lens , 288 , & ( next ) , & ( bits ) , state . work )"	70:4:2016:2083	11180286	12	True				
ANR	11180398	CallExpression	"inflate_table9 ( LENS , state . lens , 288 , & ( next ) , & ( bits ) , state . work )"		11180286	0					
ANR	11180399	Callee	inflate_table9		11180286	0					
ANR	11180400	Identifier	inflate_table9		11180286	0					
ANR	11180401	ArgumentList	LENS		11180286	1					
ANR	11180402	Argument	LENS		11180286	0					
ANR	11180403	Identifier	LENS		11180286	0					
ANR	11180404	Argument	state . lens		11180286	1					
ANR	11180405	MemberAccess	state . lens		11180286	0					
ANR	11180406	Identifier	state		11180286	0					
ANR	11180407	Identifier	lens		11180286	1					
ANR	11180408	Argument	288		11180286	2					
ANR	11180409	PrimaryExpression	288		11180286	0					
ANR	11180410	Argument	& ( next )		11180286	3					
ANR	11180411	UnaryOperationExpression	& ( next )		11180286	0					
ANR	11180412	UnaryOperator	&		11180286	0					
ANR	11180413	Identifier	next		11180286	1					
ANR	11180414	Argument	& ( bits )		11180286	4					
ANR	11180415	UnaryOperationExpression	& ( bits )		11180286	0					
ANR	11180416	UnaryOperator	&		11180286	0					
ANR	11180417	Identifier	bits		11180286	1					
ANR	11180418	Argument	state . work		11180286	5					
ANR	11180419	MemberAccess	state . work		11180286	0					
ANR	11180420	Identifier	state		11180286	0					
ANR	11180421	Identifier	work		11180286	1					
ANR	11180422	ExpressionStatement	sym = 0	73:4:2115:2122	11180286	13	True				
ANR	11180423	AssignmentExpression	sym = 0		11180286	0		=			
ANR	11180424	Identifier	sym		11180286	0					
ANR	11180425	PrimaryExpression	0		11180286	1					
ANR	11180426	WhileStatement	while ( sym < 32 )		11180286	14					
ANR	11180427	Condition	sym < 32	74:11:2135:2142	11180286	0	True				
ANR	11180428	RelationalExpression	sym < 32		11180286	0		<			
ANR	11180429	Identifier	sym		11180286	0					
ANR	11180430	PrimaryExpression	32		11180286	1					
ANR	11180431	ExpressionStatement	state . lens [ sym ++ ] = 5	74:21:2145:2166	11180286	1	True				
ANR	11180432	AssignmentExpression	state . lens [ sym ++ ] = 5		11180286	0		=			
ANR	11180433	ArrayIndexing	state . lens [ sym ++ ]		11180286	0					
ANR	11180434	MemberAccess	state . lens		11180286	0					
ANR	11180435	Identifier	state		11180286	0					
ANR	11180436	Identifier	lens		11180286	1					
ANR	11180437	PostIncDecOperationExpression	sym ++		11180286	1					
ANR	11180438	Identifier	sym		11180286	0					
ANR	11180439	IncDec	++		11180286	1					
ANR	11180440	PrimaryExpression	5		11180286	1					
ANR	11180441	ExpressionStatement	distfix = next	75:4:2172:2186	11180286	15	True				
ANR	11180442	AssignmentExpression	distfix = next		11180286	0		=			
ANR	11180443	Identifier	distfix		11180286	0					
ANR	11180444	Identifier	next		11180286	1					
ANR	11180445	ExpressionStatement	bits = 5	76:4:2192:2200	11180286	16	True				
ANR	11180446	AssignmentExpression	bits = 5		11180286	0		=			
ANR	11180447	Identifier	bits		11180286	0					
ANR	11180448	PrimaryExpression	5		11180286	1					
ANR	11180449	ExpressionStatement	"inflate_table9 ( DISTS , state . lens , 32 , & ( next ) , & ( bits ) , state . work )"	77:4:2206:2273	11180286	17	True				
ANR	11180450	CallExpression	"inflate_table9 ( DISTS , state . lens , 32 , & ( next ) , & ( bits ) , state . work )"		11180286	0					
ANR	11180451	Callee	inflate_table9		11180286	0					
ANR	11180452	Identifier	inflate_table9		11180286	0					
ANR	11180453	ArgumentList	DISTS		11180286	1					
ANR	11180454	Argument	DISTS		11180286	0					
ANR	11180455	Identifier	DISTS		11180286	0					
ANR	11180456	Argument	state . lens		11180286	1					
ANR	11180457	MemberAccess	state . lens		11180286	0					
ANR	11180458	Identifier	state		11180286	0					
ANR	11180459	Identifier	lens		11180286	1					
ANR	11180460	Argument	32		11180286	2					
ANR	11180461	PrimaryExpression	32		11180286	0					
ANR	11180462	Argument	& ( next )		11180286	3					
ANR	11180463	UnaryOperationExpression	& ( next )		11180286	0					
ANR	11180464	UnaryOperator	&		11180286	0					
ANR	11180465	Identifier	next		11180286	1					
ANR	11180466	Argument	& ( bits )		11180286	4					
ANR	11180467	UnaryOperationExpression	& ( bits )		11180286	0					
ANR	11180468	UnaryOperator	&		11180286	0					
ANR	11180469	Identifier	bits		11180286	1					
ANR	11180470	Argument	state . work		11180286	5					
ANR	11180471	MemberAccess	state . work		11180286	0					
ANR	11180472	Identifier	state		11180286	0					
ANR	11180473	Identifier	work		11180286	1					
ANR	11180474	ExpressionStatement	"puts ( ""    /* inffix9.h -- table for decoding deflate64 fixed codes"" )"	80:4:2303:2371	11180286	18	True				
ANR	11180475	CallExpression	"puts ( ""    /* inffix9.h -- table for decoding deflate64 fixed codes"" )"		11180286	0					
ANR	11180476	Callee	puts		11180286	0					
ANR	11180477	Identifier	puts		11180286	0					
ANR	11180478	ArgumentList	"""    /* inffix9.h -- table for decoding deflate64 fixed codes"""		11180286	1					
ANR	11180479	Argument	"""    /* inffix9.h -- table for decoding deflate64 fixed codes"""		11180286	0					
ANR	11180480	PrimaryExpression	"""    /* inffix9.h -- table for decoding deflate64 fixed codes"""		11180286	0					
ANR	11180481	ExpressionStatement	"puts ( ""     * Generated automatically by makefixed9()."" )"	81:4:2377:2432	11180286	19	True				
ANR	11180482	CallExpression	"puts ( ""     * Generated automatically by makefixed9()."" )"		11180286	0					
ANR	11180483	Callee	puts		11180286	0					
ANR	11180484	Identifier	puts		11180286	0					
ANR	11180485	ArgumentList	"""     * Generated automatically by makefixed9()."""		11180286	1					
ANR	11180486	Argument	"""     * Generated automatically by makefixed9()."""		11180286	0					
ANR	11180487	PrimaryExpression	"""     * Generated automatically by makefixed9()."""		11180286	0					
ANR	11180488	ExpressionStatement	"puts ( ""     */"" )"	82:4:2438:2453	11180286	20	True				
ANR	11180489	CallExpression	"puts ( ""     */"" )"		11180286	0					
ANR	11180490	Callee	puts		11180286	0					
ANR	11180491	Identifier	puts		11180286	0					
ANR	11180492	ArgumentList	"""     */"""		11180286	1					
ANR	11180493	Argument	"""     */"""		11180286	0					
ANR	11180494	PrimaryExpression	"""     */"""		11180286	0					
ANR	11180495	ExpressionStatement	"puts ( """" )"	83:4:2459:2467	11180286	21	True				
ANR	11180496	CallExpression	"puts ( """" )"		11180286	0					
ANR	11180497	Callee	puts		11180286	0					
ANR	11180498	Identifier	puts		11180286	0					
ANR	11180499	ArgumentList	""""""		11180286	1					
ANR	11180500	Argument	""""""		11180286	0					
ANR	11180501	PrimaryExpression	""""""		11180286	0					
ANR	11180502	ExpressionStatement	"puts ( ""    /* WARNING: this file should *not* be used by applications."" )"	84:4:2473:2544	11180286	22	True				
ANR	11180503	CallExpression	"puts ( ""    /* WARNING: this file should *not* be used by applications."" )"		11180286	0					
ANR	11180504	Callee	puts		11180286	0					
ANR	11180505	Identifier	puts		11180286	0					
ANR	11180506	ArgumentList	"""    /* WARNING: this file should *not* be used by applications."""		11180286	1					
ANR	11180507	Argument	"""    /* WARNING: this file should *not* be used by applications."""		11180286	0					
ANR	11180508	PrimaryExpression	"""    /* WARNING: this file should *not* be used by applications."""		11180286	0					
ANR	11180509	ExpressionStatement	"puts ( ""       It is part of the implementation of this library and is"" )"	85:4:2550:2620	11180286	23	True				
ANR	11180510	CallExpression	"puts ( ""       It is part of the implementation of this library and is"" )"		11180286	0					
ANR	11180511	Callee	puts		11180286	0					
ANR	11180512	Identifier	puts		11180286	0					
ANR	11180513	ArgumentList	"""       It is part of the implementation of this library and is"""		11180286	1					
ANR	11180514	Argument	"""       It is part of the implementation of this library and is"""		11180286	0					
ANR	11180515	PrimaryExpression	"""       It is part of the implementation of this library and is"""		11180286	0					
ANR	11180516	ExpressionStatement	"puts ( ""       subject to change. Applications should only use zlib.h."" )"	86:4:2626:2696	11180286	24	True				
ANR	11180517	CallExpression	"puts ( ""       subject to change. Applications should only use zlib.h."" )"		11180286	0					
ANR	11180518	Callee	puts		11180286	0					
ANR	11180519	Identifier	puts		11180286	0					
ANR	11180520	ArgumentList	"""       subject to change. Applications should only use zlib.h."""		11180286	1					
ANR	11180521	Argument	"""       subject to change. Applications should only use zlib.h."""		11180286	0					
ANR	11180522	PrimaryExpression	"""       subject to change. Applications should only use zlib.h."""		11180286	0					
ANR	11180523	ExpressionStatement	"puts ( ""     */"" )"	87:4:2702:2717	11180286	25	True				
ANR	11180524	CallExpression	"puts ( ""     */"" )"		11180286	0					
ANR	11180525	Callee	puts		11180286	0					
ANR	11180526	Identifier	puts		11180286	0					
ANR	11180527	ArgumentList	"""     */"""		11180286	1					
ANR	11180528	Argument	"""     */"""		11180286	0					
ANR	11180529	PrimaryExpression	"""     */"""		11180286	0					
ANR	11180530	ExpressionStatement	"puts ( """" )"	88:4:2723:2731	11180286	26	True				
ANR	11180531	CallExpression	"puts ( """" )"		11180286	0					
ANR	11180532	Callee	puts		11180286	0					
ANR	11180533	Identifier	puts		11180286	0					
ANR	11180534	ArgumentList	""""""		11180286	1					
ANR	11180535	Argument	""""""		11180286	0					
ANR	11180536	PrimaryExpression	""""""		11180286	0					
ANR	11180537	ExpressionStatement	size = 1U << 9	89:4:2737:2751	11180286	27	True				
ANR	11180538	AssignmentExpression	size = 1U << 9		11180286	0		=			
ANR	11180539	Identifier	size		11180286	0					
ANR	11180540	ShiftExpression	1U << 9		11180286	1		<<			
ANR	11180541	PrimaryExpression	1U		11180286	0					
ANR	11180542	PrimaryExpression	9		11180286	1					
ANR	11180543	ExpressionStatement	"printf ( ""    static const code lenfix[%u] = {"" , size )"	90:4:2757:2809	11180286	28	True				
ANR	11180544	CallExpression	"printf ( ""    static const code lenfix[%u] = {"" , size )"		11180286	0					
ANR	11180545	Callee	printf		11180286	0					
ANR	11180546	Identifier	printf		11180286	0					
ANR	11180547	ArgumentList	"""    static const code lenfix[%u] = {"""		11180286	1					
ANR	11180548	Argument	"""    static const code lenfix[%u] = {"""		11180286	0					
ANR	11180549	PrimaryExpression	"""    static const code lenfix[%u] = {"""		11180286	0					
ANR	11180550	Argument	size		11180286	1					
ANR	11180551	Identifier	size		11180286	0					
ANR	11180552	ExpressionStatement	low = 0	91:4:2815:2822	11180286	29	True				
ANR	11180553	AssignmentExpression	low = 0		11180286	0		=			
ANR	11180554	Identifier	low		11180286	0					
ANR	11180555	PrimaryExpression	0		11180286	1					
ANR	11180556	ForStatement	for ( ; ; )		11180286	30					
ANR	11180557	CompoundStatement		38:13:1225:1225	11180286	0					
ANR	11180558	IfStatement	if ( ( low % 6 ) == 0 )		11180286	0					
ANR	11180559	Condition	( low % 6 ) == 0	93:12:2851:2864	11180286	0	True				
ANR	11180560	EqualityExpression	( low % 6 ) == 0		11180286	0		==			
ANR	11180561	MultiplicativeExpression	low % 6		11180286	0		%			
ANR	11180562	Identifier	low		11180286	0					
ANR	11180563	PrimaryExpression	6		11180286	1					
ANR	11180564	PrimaryExpression	0		11180286	1					
ANR	11180565	ExpressionStatement	"printf ( ""\\n        "" )"	93:28:2867:2887	11180286	1	True				
ANR	11180566	CallExpression	"printf ( ""\\n        "" )"		11180286	0					
ANR	11180567	Callee	printf		11180286	0					
ANR	11180568	Identifier	printf		11180286	0					
ANR	11180569	ArgumentList	"""\\n        """		11180286	1					
ANR	11180570	Argument	"""\\n        """		11180286	0					
ANR	11180571	PrimaryExpression	"""\\n        """		11180286	0					
ANR	11180572	ExpressionStatement	"printf ( ""{%u,%u,%d}"" , lenfix [ low ] . op , lenfix [ low ] . bits , lenfix [ low ] . val )"	94:8:2897:2983	11180286	1	True				
ANR	11180573	CallExpression	"printf ( ""{%u,%u,%d}"" , lenfix [ low ] . op , lenfix [ low ] . bits , lenfix [ low ] . val )"		11180286	0					
ANR	11180574	Callee	printf		11180286	0					
ANR	11180575	Identifier	printf		11180286	0					
ANR	11180576	ArgumentList	"""{%u,%u,%d}"""		11180286	1					
ANR	11180577	Argument	"""{%u,%u,%d}"""		11180286	0					
ANR	11180578	PrimaryExpression	"""{%u,%u,%d}"""		11180286	0					
ANR	11180579	Argument	lenfix [ low ] . op		11180286	1					
ANR	11180580	MemberAccess	lenfix [ low ] . op		11180286	0					
ANR	11180581	ArrayIndexing	lenfix [ low ]		11180286	0					
ANR	11180582	Identifier	lenfix		11180286	0					
ANR	11180583	Identifier	low		11180286	1					
ANR	11180584	Identifier	op		11180286	1					
ANR	11180585	Argument	lenfix [ low ] . bits		11180286	2					
ANR	11180586	MemberAccess	lenfix [ low ] . bits		11180286	0					
ANR	11180587	ArrayIndexing	lenfix [ low ]		11180286	0					
ANR	11180588	Identifier	lenfix		11180286	0					
ANR	11180589	Identifier	low		11180286	1					
ANR	11180590	Identifier	bits		11180286	1					
ANR	11180591	Argument	lenfix [ low ] . val		11180286	3					
ANR	11180592	MemberAccess	lenfix [ low ] . val		11180286	0					
ANR	11180593	ArrayIndexing	lenfix [ low ]		11180286	0					
ANR	11180594	Identifier	lenfix		11180286	0					
ANR	11180595	Identifier	low		11180286	1					
ANR	11180596	Identifier	val		11180286	1					
ANR	11180597	IfStatement	if ( ++ low == size )		11180286	2					
ANR	11180598	Condition	++ low == size	96:12:2997:3009	11180286	0	True				
ANR	11180599	EqualityExpression	++ low == size		11180286	0		==			
ANR	11180600	UnaryExpression	++ low		11180286	0					
ANR	11180601	IncDec	++		11180286	0					
ANR	11180602	Identifier	low		11180286	1					
ANR	11180603	Identifier	size		11180286	1					
ANR	11180604	BreakStatement	break ;	96:27:3012:3017	11180286	1	True				
ANR	11180605	ExpressionStatement	"putchar ( ',' )"	97:8:3027:3039	11180286	3	True				
ANR	11180606	CallExpression	"putchar ( ',' )"		11180286	0					
ANR	11180607	Callee	putchar		11180286	0					
ANR	11180608	Identifier	putchar		11180286	0					
ANR	11180609	ArgumentList	"','"		11180286	1					
ANR	11180610	Argument	"','"		11180286	0					
ANR	11180611	PrimaryExpression	"','"		11180286	0					
ANR	11180612	ExpressionStatement	"puts ( ""\\n    };"" )"	99:4:3051:3067	11180286	31	True				
ANR	11180613	CallExpression	"puts ( ""\\n    };"" )"		11180286	0					
ANR	11180614	Callee	puts		11180286	0					
ANR	11180615	Identifier	puts		11180286	0					
ANR	11180616	ArgumentList	"""\\n    };"""		11180286	1					
ANR	11180617	Argument	"""\\n    };"""		11180286	0					
ANR	11180618	PrimaryExpression	"""\\n    };"""		11180286	0					
ANR	11180619	ExpressionStatement	size = 1U << 5	100:4:3073:3087	11180286	32	True				
ANR	11180620	AssignmentExpression	size = 1U << 5		11180286	0		=			
ANR	11180621	Identifier	size		11180286	0					
ANR	11180622	ShiftExpression	1U << 5		11180286	1		<<			
ANR	11180623	PrimaryExpression	1U		11180286	0					
ANR	11180624	PrimaryExpression	5		11180286	1					
ANR	11180625	ExpressionStatement	"printf ( ""\\n    static const code distfix[%u] = {"" , size )"	101:4:3093:3148	11180286	33	True				
ANR	11180626	CallExpression	"printf ( ""\\n    static const code distfix[%u] = {"" , size )"		11180286	0					
ANR	11180627	Callee	printf		11180286	0					
ANR	11180628	Identifier	printf		11180286	0					
ANR	11180629	ArgumentList	"""\\n    static const code distfix[%u] = {"""		11180286	1					
ANR	11180630	Argument	"""\\n    static const code distfix[%u] = {"""		11180286	0					
ANR	11180631	PrimaryExpression	"""\\n    static const code distfix[%u] = {"""		11180286	0					
ANR	11180632	Argument	size		11180286	1					
ANR	11180633	Identifier	size		11180286	0					
ANR	11180634	ExpressionStatement	low = 0	102:4:3154:3161	11180286	34	True				
ANR	11180635	AssignmentExpression	low = 0		11180286	0		=			
ANR	11180636	Identifier	low		11180286	0					
ANR	11180637	PrimaryExpression	0		11180286	1					
ANR	11180638	ForStatement	for ( ; ; )		11180286	35					
ANR	11180639	CompoundStatement		49:13:1564:1564	11180286	0					
ANR	11180640	IfStatement	if ( ( low % 5 ) == 0 )		11180286	0					
ANR	11180641	Condition	( low % 5 ) == 0	104:12:3190:3203	11180286	0	True				
ANR	11180642	EqualityExpression	( low % 5 ) == 0		11180286	0		==			
ANR	11180643	MultiplicativeExpression	low % 5		11180286	0		%			
ANR	11180644	Identifier	low		11180286	0					
ANR	11180645	PrimaryExpression	5		11180286	1					
ANR	11180646	PrimaryExpression	0		11180286	1					
ANR	11180647	ExpressionStatement	"printf ( ""\\n        "" )"	104:28:3206:3226	11180286	1	True				
ANR	11180648	CallExpression	"printf ( ""\\n        "" )"		11180286	0					
ANR	11180649	Callee	printf		11180286	0					
ANR	11180650	Identifier	printf		11180286	0					
ANR	11180651	ArgumentList	"""\\n        """		11180286	1					
ANR	11180652	Argument	"""\\n        """		11180286	0					
ANR	11180653	PrimaryExpression	"""\\n        """		11180286	0					
ANR	11180654	ExpressionStatement	"printf ( ""{%u,%u,%d}"" , distfix [ low ] . op , distfix [ low ] . bits , distfix [ low ] . val )"	105:8:3236:3325	11180286	1	True				
ANR	11180655	CallExpression	"printf ( ""{%u,%u,%d}"" , distfix [ low ] . op , distfix [ low ] . bits , distfix [ low ] . val )"		11180286	0					
ANR	11180656	Callee	printf		11180286	0					
ANR	11180657	Identifier	printf		11180286	0					
ANR	11180658	ArgumentList	"""{%u,%u,%d}"""		11180286	1					
ANR	11180659	Argument	"""{%u,%u,%d}"""		11180286	0					
ANR	11180660	PrimaryExpression	"""{%u,%u,%d}"""		11180286	0					
ANR	11180661	Argument	distfix [ low ] . op		11180286	1					
ANR	11180662	MemberAccess	distfix [ low ] . op		11180286	0					
ANR	11180663	ArrayIndexing	distfix [ low ]		11180286	0					
ANR	11180664	Identifier	distfix		11180286	0					
ANR	11180665	Identifier	low		11180286	1					
ANR	11180666	Identifier	op		11180286	1					
ANR	11180667	Argument	distfix [ low ] . bits		11180286	2					
ANR	11180668	MemberAccess	distfix [ low ] . bits		11180286	0					
ANR	11180669	ArrayIndexing	distfix [ low ]		11180286	0					
ANR	11180670	Identifier	distfix		11180286	0					
ANR	11180671	Identifier	low		11180286	1					
ANR	11180672	Identifier	bits		11180286	1					
ANR	11180673	Argument	distfix [ low ] . val		11180286	3					
ANR	11180674	MemberAccess	distfix [ low ] . val		11180286	0					
ANR	11180675	ArrayIndexing	distfix [ low ]		11180286	0					
ANR	11180676	Identifier	distfix		11180286	0					
ANR	11180677	Identifier	low		11180286	1					
ANR	11180678	Identifier	val		11180286	1					
ANR	11180679	IfStatement	if ( ++ low == size )		11180286	2					
ANR	11180680	Condition	++ low == size	107:12:3339:3351	11180286	0	True				
ANR	11180681	EqualityExpression	++ low == size		11180286	0		==			
ANR	11180682	UnaryExpression	++ low		11180286	0					
ANR	11180683	IncDec	++		11180286	0					
ANR	11180684	Identifier	low		11180286	1					
ANR	11180685	Identifier	size		11180286	1					
ANR	11180686	BreakStatement	break ;	107:27:3354:3359	11180286	1	True				
ANR	11180687	ExpressionStatement	"putchar ( ',' )"	108:8:3369:3381	11180286	3	True				
ANR	11180688	CallExpression	"putchar ( ',' )"		11180286	0					
ANR	11180689	Callee	putchar		11180286	0					
ANR	11180690	Identifier	putchar		11180286	0					
ANR	11180691	ArgumentList	"','"		11180286	1					
ANR	11180692	Argument	"','"		11180286	0					
ANR	11180693	PrimaryExpression	"','"		11180286	0					
ANR	11180694	ExpressionStatement	"puts ( ""\\n    };"" )"	110:4:3393:3409	11180286	36	True				
ANR	11180695	CallExpression	"puts ( ""\\n    };"" )"		11180286	0					
ANR	11180696	Callee	puts		11180286	0					
ANR	11180697	Identifier	puts		11180286	0					
ANR	11180698	ArgumentList	"""\\n    };"""		11180286	1					
ANR	11180699	Argument	"""\\n    };"""		11180286	0					
ANR	11180700	PrimaryExpression	"""\\n    };"""		11180286	0					
ANR	11180701	ReturnType	void		11180286	1					
ANR	11180702	Identifier	makefixed9		11180286	2					
ANR	11180703	ParameterList			11180286	3					
ANR	11180704	CFGEntryNode	ENTRY		11180286		True				
ANR	11180705	CFGExitNode	EXIT		11180286		True				
ANR	11180706	InfiniteForNode	true		11180286		True				
ANR	11180707	InfiniteForNode	true		11180286		True				
ANR	11180708	Symbol	next		11180286						
ANR	11180709	Symbol	sym		11180286						
ANR	11180710	Symbol	state . lens		11180286						
ANR	11180711	Symbol	distfix		11180286						
ANR	11180712	Symbol	& bits		11180286						
ANR	11180713	Symbol	distfix [ low ] . op		11180286						
ANR	11180714	Symbol	DISTS		11180286						
ANR	11180715	Symbol	* state . lens		11180286						
ANR	11180716	Symbol	* lenfix		11180286						
ANR	11180717	Symbol	low		11180286						
ANR	11180718	Symbol	state		11180286						
ANR	11180719	Symbol	LENS		11180286						
ANR	11180720	Symbol	distfix [ low ] . bits		11180286						
ANR	11180721	Symbol	& next		11180286						
ANR	11180722	Symbol	lenfix [ low ] . op		11180286						
ANR	11180723	Symbol	bits		11180286						
ANR	11180724	Symbol	distfix [ low ] . val		11180286						
ANR	11180725	Symbol	lenfix		11180286						
ANR	11180726	Symbol	state . work		11180286						
ANR	11180727	Symbol	* state		11180286						
ANR	11180728	Symbol	lenfix [ low ] . val		11180286						
ANR	11180729	Symbol	size		11180286						
ANR	11180730	Symbol	lenfix [ low ] . bits		11180286						
ANR	11180731	Symbol	fixed		11180286						
ANR	11180732	Symbol	* low		11180286						
ANR	11180733	Symbol	* distfix		11180286						
ANR	11180734	DeclStmt									
ANR	11180735	Decl							z_stream FAR	z_stream FAR *	strm
ANR	11180736	DeclStmt									
ANR	11180737	Decl							in_func	in_func	in
ANR	11180738	DeclStmt									
ANR	11180739	Decl							void FAR	void FAR *	in_desc
ANR	11180740	DeclStmt									
ANR	11180741	Decl							out_func	out_func	out
ANR	11180742	DeclStmt									
ANR	11180743	Decl							void FAR	void FAR *	out_desc
ANR	11180744	DeclStmt									
ANR	11180745	Decl							struct inflate_state FAR	struct inflate_state FAR *	state
ANR	11180746	DeclStmt									
ANR	11180747	Decl							unsigned char FAR	unsigned char FAR *	next
ANR	11180748	DeclStmt									
ANR	11180749	Decl							unsigned char FAR	unsigned char FAR *	put
ANR	11180750	DeclStmt									
ANR	11180751	Decl							unsigned	unsigned	have
ANR	11180752	DeclStmt									
ANR	11180753	Decl							unsigned long	unsigned long	left
ANR	11180754	DeclStmt									
ANR	11180755	Decl							inflate_mode	inflate_mode	mode
ANR	11180756	DeclStmt									
ANR	11180757	Decl							int	int	lastblock
ANR	11180758	DeclStmt									
ANR	11180759	Decl							int	int	wrap
ANR	11180760	DeclStmt									
ANR	11180761	Decl							unsigned char FAR	unsigned char FAR *	window
ANR	11180762	DeclStmt									
ANR	11180763	Decl							unsigned long	unsigned long	hold
ANR	11180764	DeclStmt									
ANR	11180765	Decl							unsigned	unsigned	bits
ANR	11180766	DeclStmt									
ANR	11180767	Decl							unsigned	unsigned	extra
ANR	11180768	DeclStmt									
ANR	11180769	Decl							unsigned long	unsigned long	length
ANR	11180770	DeclStmt									
ANR	11180771	Decl							unsigned long	unsigned long	offset
ANR	11180772	DeclStmt									
ANR	11180773	Decl							unsigned long	unsigned long	copy
ANR	11180774	DeclStmt									
ANR	11180775	Decl							unsigned char FAR	unsigned char FAR *	from
ANR	11180776	DeclStmt									
ANR	11180777	Decl							const FAR	const FAR *	lencode
ANR	11180778	DeclStmt									
ANR	11180779	Decl							const FAR	const FAR *	distcode
ANR	11180780	DeclStmt									
ANR	11180781	Decl							unsigned	unsigned	lenbits
ANR	11180782	DeclStmt									
ANR	11180783	Decl							unsigned	unsigned	distbits
ANR	11180784	DeclStmt									
ANR	11180785	Decl							code	code	here
ANR	11180786	DeclStmt									
ANR	11180787	Decl							code	code	last
ANR	11180788	DeclStmt									
ANR	11180789	Decl							unsigned	unsigned	len
ANR	11180790	DeclStmt									
ANR	11180791	Decl							int	int	ret
ANR	11180792	DeclStmt									
ANR	11180793	Decl							const unsigned short	const unsigned short [ 19 ]	order
ANR	11180794	DeclStmt									
ANR	11180795	Decl							z_stream FAR	z_stream FAR *	strm
