command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1038192	File	data/converged/CVE-2018-16863_ghostpdl/base_gxfapiu.c								
ANR	1038193	DeclStmt									
ANR	1038194	Decl							gs_memory_t	gs_memory_t *	gs_mem_ctx
ANR	1038195	Function	stub_PCLEO_charptr	56:0:1534:1621							
ANR	1038196	FunctionDef	"stub_PCLEO_charptr (FSP LPUB8 pfont_hdr , UW16 sym_code)"		1038195	0					
ANR	1038197	CompoundStatement		58:0:1602:1621	1038195	0					
ANR	1038198	ReturnStatement	return NULL ;	59:4:1608:1619	1038195	0	True				
ANR	1038199	Identifier	NULL		1038195	0					
ANR	1038200	ReturnType	static LPUB8		1038195	1					
ANR	1038201	Identifier	stub_PCLEO_charptr		1038195	2					
ANR	1038202	ParameterList	"FSP LPUB8 pfont_hdr , UW16 sym_code"		1038195	3					
ANR	1038203	Parameter	FSP LPUB8 pfont_hdr	57:19:1566:1584	1038195	0	True				
ANR	1038204	ParameterType	FSP LPUB8		1038195	0					
ANR	1038205	Identifier	pfont_hdr		1038195	1					
ANR	1038206	Parameter	UW16 sym_code	57:40:1587:1599	1038195	1	True				
ANR	1038207	ParameterType	UW16		1038195	0					
ANR	1038208	Identifier	sym_code		1038195	1					
ANR	1038209	CFGEntryNode	ENTRY		1038195		True				
ANR	1038210	CFGExitNode	EXIT		1038195		True				
ANR	1038211	Symbol	NULL		1038195						
ANR	1038212	Symbol	pfont_hdr		1038195						
ANR	1038213	Symbol	sym_code		1038195						
ANR	1038214	Function	stub_PCLchId2ptr	62:0:1624:1688							
ANR	1038215	FunctionDef	stub_PCLchId2ptr (FSP UW16 chId)		1038214	0					
ANR	1038216	CompoundStatement		64:0:1669:1688	1038214	0					
ANR	1038217	ReturnStatement	return NULL ;	65:4:1675:1686	1038214	0	True				
ANR	1038218	Identifier	NULL		1038214	0					
ANR	1038219	ReturnType	static LPUB8		1038214	1					
ANR	1038220	Identifier	stub_PCLchId2ptr		1038214	2					
ANR	1038221	ParameterList	FSP UW16 chId		1038214	3					
ANR	1038222	Parameter	FSP UW16 chId	63:17:1654:1666	1038214	0	True				
ANR	1038223	ParameterType	FSP UW16		1038214	0					
ANR	1038224	Identifier	chId		1038214	1					
ANR	1038225	CFGEntryNode	ENTRY		1038214		True				
ANR	1038226	CFGExitNode	EXIT		1038214		True				
ANR	1038227	Symbol	NULL		1038214						
ANR	1038228	Symbol	chId		1038214						
ANR	1038229	Function	stub_PCLglyphID2Ptr	68:0:1691:1761							
ANR	1038230	FunctionDef	stub_PCLglyphID2Ptr (FSP UW16 glyphID)		1038229	0					
ANR	1038231	CompoundStatement		70:0:1742:1761	1038229	0					
ANR	1038232	ReturnStatement	return NULL ;	71:4:1748:1759	1038229	0	True				
ANR	1038233	Identifier	NULL		1038229	0					
ANR	1038234	ReturnType	static LPUB8		1038229	1					
ANR	1038235	Identifier	stub_PCLglyphID2Ptr		1038229	2					
ANR	1038236	ParameterList	FSP UW16 glyphID		1038229	3					
ANR	1038237	Parameter	FSP UW16 glyphID	69:20:1724:1739	1038229	0	True				
ANR	1038238	ParameterType	FSP UW16		1038229	0					
ANR	1038239	Identifier	glyphID		1038229	1					
ANR	1038240	CFGEntryNode	ENTRY		1038229		True				
ANR	1038241	CFGExitNode	EXIT		1038229		True				
ANR	1038242	Symbol	NULL		1038229						
ANR	1038243	Symbol	glyphID		1038229						
ANR	1038244	DeclStmt									
ANR	1038245	Decl							const SW16	const SW16	trace_sw
ANR	1038246	DeclStmt									
ANR	1038247	Decl							"LPUB8 ( * ) ( FSP LPUB8 pfont_hdr , UW16 sym_code )"	"LPUB8 ( * ) ( FSP LPUB8 pfont_hdr , UW16 sym_code )"	m_PCLEO_charptr
ANR	1038248	DeclStmt									
ANR	1038249	Decl							LPUB8 ( * ) ( FSP UW16 chId )	LPUB8 ( * ) ( FSP UW16 chId )	m_PCLchId2ptr
ANR	1038250	DeclStmt									
ANR	1038251	Decl							LPUB8 ( * ) ( FSP UW16 glyphID )	LPUB8 ( * ) ( FSP UW16 glyphID )	m_PCLglyphID2Ptr
ANR	1038252	DeclStmt									
ANR	1038253	Decl							fco_list_elem	fco_list_elem [ MAX_STATIC_FCO_COUNT ]	static_fco_list
ANR	1038254	DeclStmt									
ANR	1038255	Decl							int	int	static_fco_count
ANR	1038256	DeclStmt									
ANR	1038257	Decl							bool	bool	ufst_initialized
ANR	1038258	Function	PCLEO_charptr	97:0:2586:2697							
ANR	1038259	FunctionDef	"PCLEO_charptr (FSP LPUB8 pfont_hdr , UW16 sym_code)"		1038258	0					
ANR	1038260	CompoundStatement		99:0:2642:2697	1038258	0					
ANR	1038261	Statement	return	100:4:2648:2653	1038258	0	True				
ANR	1038262	Statement	m_PCLEO_charptr	100:11:2655:2669	1038258	1	True				
ANR	1038263	Statement	(	100:26:2670:2670	1038258	2	True				
ANR	1038264	Statement	FSA	100:27:2671:2673	1038258	3	True				
ANR	1038265	Statement	pfont_hdr	100:31:2675:2683	1038258	4	True				
ANR	1038266	Statement	","	100:40:2684:2684	1038258	5	True				
ANR	1038267	Statement	sym_code	100:42:2686:2693	1038258	6	True				
ANR	1038268	Statement	)	100:50:2694:2694	1038258	7	True				
ANR	1038269	ExpressionStatement		100:51:2695:2695	1038258	8	True				
ANR	1038270	ReturnType	LPUB8		1038258	1					
ANR	1038271	Identifier	PCLEO_charptr		1038258	2					
ANR	1038272	ParameterList	"FSP LPUB8 pfont_hdr , UW16 sym_code"		1038258	3					
ANR	1038273	Parameter	FSP LPUB8 pfont_hdr	98:14:2606:2624	1038258	0	True				
ANR	1038274	ParameterType	FSP LPUB8		1038258	0					
ANR	1038275	Identifier	pfont_hdr		1038258	1					
ANR	1038276	Parameter	UW16 sym_code	98:35:2627:2639	1038258	1	True				
ANR	1038277	ParameterType	UW16		1038258	0					
ANR	1038278	Identifier	sym_code		1038258	1					
ANR	1038279	CFGEntryNode	ENTRY		1038258		True				
ANR	1038280	CFGExitNode	EXIT		1038258		True				
ANR	1038281	Symbol	pfont_hdr		1038258						
ANR	1038282	Symbol	sym_code		1038258						
ANR	1038283	Function	PCLchId2ptr	103:0:2700:2771							
ANR	1038284	FunctionDef	PCLchId2ptr (FSP UW16 chId)		1038283	0					
ANR	1038285	CompoundStatement		105:0:2733:2771	1038283	0					
ANR	1038286	Statement	return	106:4:2739:2744	1038283	0	True				
ANR	1038287	Statement	m_PCLchId2ptr	106:11:2746:2758	1038283	1	True				
ANR	1038288	Statement	(	106:24:2759:2759	1038283	2	True				
ANR	1038289	Statement	FSA	106:25:2760:2762	1038283	3	True				
ANR	1038290	Statement	chId	106:29:2764:2767	1038283	4	True				
ANR	1038291	Statement	)	106:33:2768:2768	1038283	5	True				
ANR	1038292	ExpressionStatement		106:34:2769:2769	1038283	6	True				
ANR	1038293	ReturnType	LPUB8		1038283	1					
ANR	1038294	Identifier	PCLchId2ptr		1038283	2					
ANR	1038295	ParameterList	FSP UW16 chId		1038283	3					
ANR	1038296	Parameter	FSP UW16 chId	104:12:2718:2730	1038283	0	True				
ANR	1038297	ParameterType	FSP UW16		1038283	0					
ANR	1038298	Identifier	chId		1038283	1					
ANR	1038299	CFGEntryNode	ENTRY		1038283		True				
ANR	1038300	CFGExitNode	EXIT		1038283		True				
ANR	1038301	Symbol	chId		1038283						
ANR	1038302	Function	PCLglyphID2Ptr	109:0:2774:2857							
ANR	1038303	FunctionDef	PCLglyphID2Ptr (FSP UW16 glyphID)		1038302	0					
ANR	1038304	CompoundStatement		111:0:2813:2857	1038302	0					
ANR	1038305	Statement	return	112:4:2819:2824	1038302	0	True				
ANR	1038306	Statement	m_PCLglyphID2Ptr	112:11:2826:2841	1038302	1	True				
ANR	1038307	Statement	(	112:27:2842:2842	1038302	2	True				
ANR	1038308	Statement	FSA	112:28:2843:2845	1038302	3	True				
ANR	1038309	Statement	glyphID	112:32:2847:2853	1038302	4	True				
ANR	1038310	Statement	)	112:39:2854:2854	1038302	5	True				
ANR	1038311	ExpressionStatement		112:40:2855:2855	1038302	6	True				
ANR	1038312	ReturnType	LPUB8		1038302	1					
ANR	1038313	Identifier	PCLglyphID2Ptr		1038302	2					
ANR	1038314	ParameterList	FSP UW16 glyphID		1038302	3					
ANR	1038315	Parameter	FSP UW16 glyphID	110:15:2795:2810	1038302	0	True				
ANR	1038316	ParameterType	FSP UW16		1038302	0					
ANR	1038317	Identifier	glyphID		1038302	1					
ANR	1038318	CFGEntryNode	ENTRY		1038302		True				
ANR	1038319	CFGExitNode	EXIT		1038302		True				
ANR	1038320	Symbol	glyphID		1038302						
ANR	1038321	Function	FAPIU_fopen	116:0:2894:3035							
ANR	1038322	FunctionDef	"FAPIU_fopen (char * path , char * mode)"		1038321	0					
ANR	1038323	CompoundStatement		118:0:2937:3035	1038321	0					
ANR	1038324	IfStatement	if ( ! gs_mem_ctx )		1038321	0					
ANR	1038325	Condition	! gs_mem_ctx	119:8:2947:2957	1038321	0	True				
ANR	1038326	UnaryOperationExpression	! gs_mem_ctx		1038321	0					
ANR	1038327	UnaryOperator	!		1038321	0					
ANR	1038328	Identifier	gs_mem_ctx		1038321	1					
ANR	1038329	ReturnStatement	return NULL ;	120:8:2968:2979	1038321	1	True				
ANR	1038330	Identifier	NULL		1038321	0					
ANR	1038331	ReturnStatement	"return ( ( void * ) sfopen ( path , mode , gs_mem_ctx ) ) ;"	122:4:2986:3033	1038321	1	True				
ANR	1038332	CastExpression	"( void * ) sfopen ( path , mode , gs_mem_ctx )"		1038321	0					
ANR	1038333	CastTarget	void *		1038321	0					
ANR	1038334	CallExpression	"sfopen ( path , mode , gs_mem_ctx )"		1038321	1					
ANR	1038335	Callee	sfopen		1038321	0					
ANR	1038336	Identifier	sfopen		1038321	0					
ANR	1038337	ArgumentList	path		1038321	1					
ANR	1038338	Argument	path		1038321	0					
ANR	1038339	Identifier	path		1038321	0					
ANR	1038340	Argument	mode		1038321	1					
ANR	1038341	Identifier	mode		1038321	0					
ANR	1038342	Argument	gs_mem_ctx		1038321	2					
ANR	1038343	Identifier	gs_mem_ctx		1038321	0					
ANR	1038344	ReturnType	void *		1038321	1					
ANR	1038345	Identifier	FAPIU_fopen		1038321	2					
ANR	1038346	ParameterList	"char * path , char * mode"		1038321	3					
ANR	1038347	Parameter	char * path	117:12:2913:2922	1038321	0	True				
ANR	1038348	ParameterType	char *		1038321	0					
ANR	1038349	Identifier	path		1038321	1					
ANR	1038350	Parameter	char * mode	117:24:2925:2934	1038321	1	True				
ANR	1038351	ParameterType	char *		1038321	0					
ANR	1038352	Identifier	mode		1038321	1					
ANR	1038353	CFGEntryNode	ENTRY		1038321		True				
ANR	1038354	CFGExitNode	EXIT		1038321		True				
ANR	1038355	Symbol	mode		1038321						
ANR	1038356	Symbol	path		1038321						
ANR	1038357	Symbol	NULL		1038321						
ANR	1038358	Symbol	sfopen		1038321						
ANR	1038359	Symbol	gs_mem_ctx		1038321						
ANR	1038360	Function	FAPIU_fread	125:0:3038:3152							
ANR	1038361	FunctionDef	"FAPIU_fread (void * ptr , int size , int count , void * s)"		1038360	0					
ANR	1038362	CompoundStatement		127:0:3095:3152	1038360	0					
ANR	1038363	ReturnStatement	"return ( sfread ( ptr , size , count , ( stream * ) ( s ) ) ) ;"	128:4:3101:3150	1038360	0	True				
ANR	1038364	CallExpression	"sfread ( ptr , size , count , ( stream * ) ( s ) )"		1038360	0					
ANR	1038365	Callee	sfread		1038360	0					
ANR	1038366	Identifier	sfread		1038360	0					
ANR	1038367	ArgumentList	ptr		1038360	1					
ANR	1038368	Argument	ptr		1038360	0					
ANR	1038369	Identifier	ptr		1038360	0					
ANR	1038370	Argument	size		1038360	1					
ANR	1038371	Identifier	size		1038360	0					
ANR	1038372	Argument	count		1038360	2					
ANR	1038373	Identifier	count		1038360	0					
ANR	1038374	Argument	( stream * ) ( s )		1038360	3					
ANR	1038375	CastExpression	( stream * ) ( s )		1038360	0					
ANR	1038376	CastTarget	stream *		1038360	0					
ANR	1038377	Identifier	s		1038360	1					
ANR	1038378	ReturnType	int		1038360	1					
ANR	1038379	Identifier	FAPIU_fread		1038360	2					
ANR	1038380	ParameterList	"void * ptr , int size , int count , void * s"		1038360	3					
ANR	1038381	Parameter	void * ptr	126:12:3054:3062	1038360	0	True				
ANR	1038382	ParameterType	void *		1038360	0					
ANR	1038383	Identifier	ptr		1038360	1					
ANR	1038384	Parameter	int size	126:23:3065:3072	1038360	1	True				
ANR	1038385	ParameterType	int		1038360	0					
ANR	1038386	Identifier	size		1038360	1					
ANR	1038387	Parameter	int count	126:33:3075:3083	1038360	2	True				
ANR	1038388	ParameterType	int		1038360	0					
ANR	1038389	Identifier	count		1038360	1					
ANR	1038390	Parameter	void * s	126:44:3086:3092	1038360	3	True				
ANR	1038391	ParameterType	void *		1038360	0					
ANR	1038392	Identifier	s		1038360	1					
ANR	1038393	CFGEntryNode	ENTRY		1038360		True				
ANR	1038394	CFGExitNode	EXIT		1038360		True				
ANR	1038395	Symbol	s		1038360						
ANR	1038396	Symbol	size		1038360						
ANR	1038397	Symbol	count		1038360						
ANR	1038398	Symbol	sfread		1038360						
ANR	1038399	Symbol	ptr		1038360						
ANR	1038400	Function	FAPIU_fgetc	131:0:3155:3219							
ANR	1038401	FunctionDef	FAPIU_fgetc (void * s)		1038400	0					
ANR	1038402	CompoundStatement		133:0:3180:3219	1038400	0					
ANR	1038403	ReturnStatement	return ( sfgetc ( ( stream * ) ( s ) ) ) ;	134:4:3186:3217	1038400	0	True				
ANR	1038404	CallExpression	sfgetc ( ( stream * ) ( s ) )		1038400	0					
ANR	1038405	Callee	sfgetc		1038400	0					
ANR	1038406	Identifier	sfgetc		1038400	0					
ANR	1038407	ArgumentList	( stream * ) ( s )		1038400	1					
ANR	1038408	Argument	( stream * ) ( s )		1038400	0					
ANR	1038409	CastExpression	( stream * ) ( s )		1038400	0					
ANR	1038410	CastTarget	stream *		1038400	0					
ANR	1038411	Identifier	s		1038400	1					
ANR	1038412	ReturnType	int		1038400	1					
ANR	1038413	Identifier	FAPIU_fgetc		1038400	2					
ANR	1038414	ParameterList	void * s		1038400	3					
ANR	1038415	Parameter	void * s	132:12:3171:3177	1038400	0	True				
ANR	1038416	ParameterType	void *		1038400	0					
ANR	1038417	Identifier	s		1038400	1					
ANR	1038418	CFGEntryNode	ENTRY		1038400		True				
ANR	1038419	CFGExitNode	EXIT		1038400		True				
ANR	1038420	Symbol	s		1038400						
ANR	1038421	Symbol	sfgetc		1038400						
ANR	1038422	Function	FAPIU_fseek	137:0:3222:3326							
ANR	1038423	FunctionDef	"FAPIU_fseek (void * s , int offset , int whence)"		1038422	0					
ANR	1038424	CompoundStatement		139:0:3271:3326	1038422	0					
ANR	1038425	ReturnStatement	"return ( sfseek ( ( stream * ) ( s ) , offset , whence ) ) ;"	140:4:3277:3324	1038422	0	True				
ANR	1038426	CallExpression	"sfseek ( ( stream * ) ( s ) , offset , whence )"		1038422	0					
ANR	1038427	Callee	sfseek		1038422	0					
ANR	1038428	Identifier	sfseek		1038422	0					
ANR	1038429	ArgumentList	( stream * ) ( s )		1038422	1					
ANR	1038430	Argument	( stream * ) ( s )		1038422	0					
ANR	1038431	CastExpression	( stream * ) ( s )		1038422	0					
ANR	1038432	CastTarget	stream *		1038422	0					
ANR	1038433	Identifier	s		1038422	1					
ANR	1038434	Argument	offset		1038422	1					
ANR	1038435	Identifier	offset		1038422	0					
ANR	1038436	Argument	whence		1038422	2					
ANR	1038437	Identifier	whence		1038422	0					
ANR	1038438	ReturnType	int		1038422	1					
ANR	1038439	Identifier	FAPIU_fseek		1038422	2					
ANR	1038440	ParameterList	"void * s , int offset , int whence"		1038422	3					
ANR	1038441	Parameter	void * s	138:12:3238:3244	1038422	0	True				
ANR	1038442	ParameterType	void *		1038422	0					
ANR	1038443	Identifier	s		1038422	1					
ANR	1038444	Parameter	int offset	138:21:3247:3256	1038422	1	True				
ANR	1038445	ParameterType	int		1038422	0					
ANR	1038446	Identifier	offset		1038422	1					
ANR	1038447	Parameter	int whence	138:33:3259:3268	1038422	2	True				
ANR	1038448	ParameterType	int		1038422	0					
ANR	1038449	Identifier	whence		1038422	1					
ANR	1038450	CFGEntryNode	ENTRY		1038422		True				
ANR	1038451	CFGExitNode	EXIT		1038422		True				
ANR	1038452	Symbol	s		1038422						
ANR	1038453	Symbol	offset		1038422						
ANR	1038454	Symbol	whence		1038422						
ANR	1038455	Symbol	sfseek		1038422						
ANR	1038456	Function	FAPIU_frewind	143:0:3329:3396							
ANR	1038457	FunctionDef	FAPIU_frewind (void * s)		1038456	0					
ANR	1038458	CompoundStatement		145:0:3356:3396	1038456	0					
ANR	1038459	ReturnStatement	return ( srewind ( ( stream * ) ( s ) ) ) ;	146:4:3362:3394	1038456	0	True				
ANR	1038460	CallExpression	srewind ( ( stream * ) ( s ) )		1038456	0					
ANR	1038461	Callee	srewind		1038456	0					
ANR	1038462	Identifier	srewind		1038456	0					
ANR	1038463	ArgumentList	( stream * ) ( s )		1038456	1					
ANR	1038464	Argument	( stream * ) ( s )		1038456	0					
ANR	1038465	CastExpression	( stream * ) ( s )		1038456	0					
ANR	1038466	CastTarget	stream *		1038456	0					
ANR	1038467	Identifier	s		1038456	1					
ANR	1038468	ReturnType	int		1038456	1					
ANR	1038469	Identifier	FAPIU_frewind		1038456	2					
ANR	1038470	ParameterList	void * s		1038456	3					
ANR	1038471	Parameter	void * s	144:14:3347:3353	1038456	0	True				
ANR	1038472	ParameterType	void *		1038456	0					
ANR	1038473	Identifier	s		1038456	1					
ANR	1038474	CFGEntryNode	ENTRY		1038456		True				
ANR	1038475	CFGExitNode	EXIT		1038456		True				
ANR	1038476	Symbol	srewind		1038456						
ANR	1038477	Symbol	s		1038456						
ANR	1038478	Function	FAPIU_ftell	149:0:3399:3463							
ANR	1038479	FunctionDef	FAPIU_ftell (void * s)		1038478	0					
ANR	1038480	CompoundStatement		151:0:3424:3463	1038478	0					
ANR	1038481	ReturnStatement	return ( sftell ( ( stream * ) ( s ) ) ) ;	152:4:3430:3461	1038478	0	True				
ANR	1038482	CallExpression	sftell ( ( stream * ) ( s ) )		1038478	0					
ANR	1038483	Callee	sftell		1038478	0					
ANR	1038484	Identifier	sftell		1038478	0					
ANR	1038485	ArgumentList	( stream * ) ( s )		1038478	1					
ANR	1038486	Argument	( stream * ) ( s )		1038478	0					
ANR	1038487	CastExpression	( stream * ) ( s )		1038478	0					
ANR	1038488	CastTarget	stream *		1038478	0					
ANR	1038489	Identifier	s		1038478	1					
ANR	1038490	ReturnType	int		1038478	1					
ANR	1038491	Identifier	FAPIU_ftell		1038478	2					
ANR	1038492	ParameterList	void * s		1038478	3					
ANR	1038493	Parameter	void * s	150:12:3415:3421	1038478	0	True				
ANR	1038494	ParameterType	void *		1038478	0					
ANR	1038495	Identifier	s		1038478	1					
ANR	1038496	CFGEntryNode	ENTRY		1038478		True				
ANR	1038497	CFGExitNode	EXIT		1038478		True				
ANR	1038498	Symbol	s		1038478						
ANR	1038499	Symbol	sftell		1038478						
ANR	1038500	Function	FAPIU_feof	155:0:3466:3528							
ANR	1038501	FunctionDef	FAPIU_feof (void * s)		1038500	0					
ANR	1038502	CompoundStatement		157:0:3490:3528	1038500	0					
ANR	1038503	ReturnStatement	return ( sfeof ( ( stream * ) ( s ) ) ) ;	158:4:3496:3526	1038500	0	True				
ANR	1038504	CallExpression	sfeof ( ( stream * ) ( s ) )		1038500	0					
ANR	1038505	Callee	sfeof		1038500	0					
ANR	1038506	Identifier	sfeof		1038500	0					
ANR	1038507	ArgumentList	( stream * ) ( s )		1038500	1					
ANR	1038508	Argument	( stream * ) ( s )		1038500	0					
ANR	1038509	CastExpression	( stream * ) ( s )		1038500	0					
ANR	1038510	CastTarget	stream *		1038500	0					
ANR	1038511	Identifier	s		1038500	1					
ANR	1038512	ReturnType	int		1038500	1					
ANR	1038513	Identifier	FAPIU_feof		1038500	2					
ANR	1038514	ParameterList	void * s		1038500	3					
ANR	1038515	Parameter	void * s	156:11:3481:3487	1038500	0	True				
ANR	1038516	ParameterType	void *		1038500	0					
ANR	1038517	Identifier	s		1038500	1					
ANR	1038518	CFGEntryNode	ENTRY		1038500		True				
ANR	1038519	CFGExitNode	EXIT		1038500		True				
ANR	1038520	Symbol	s		1038500						
ANR	1038521	Symbol	sfeof		1038500						
ANR	1038522	Function	FAPIU_ferror	161:0:3531:3597							
ANR	1038523	FunctionDef	FAPIU_ferror (void * s)		1038522	0					
ANR	1038524	CompoundStatement		163:0:3557:3597	1038522	0					
ANR	1038525	ReturnStatement	return ( sferror ( ( stream * ) ( s ) ) ) ;	164:4:3563:3595	1038522	0	True				
ANR	1038526	CallExpression	sferror ( ( stream * ) ( s ) )		1038522	0					
ANR	1038527	Callee	sferror		1038522	0					
ANR	1038528	Identifier	sferror		1038522	0					
ANR	1038529	ArgumentList	( stream * ) ( s )		1038522	1					
ANR	1038530	Argument	( stream * ) ( s )		1038522	0					
ANR	1038531	CastExpression	( stream * ) ( s )		1038522	0					
ANR	1038532	CastTarget	stream *		1038522	0					
ANR	1038533	Identifier	s		1038522	1					
ANR	1038534	ReturnType	int		1038522	1					
ANR	1038535	Identifier	FAPIU_ferror		1038522	2					
ANR	1038536	ParameterList	void * s		1038522	3					
ANR	1038537	Parameter	void * s	162:13:3548:3554	1038522	0	True				
ANR	1038538	ParameterType	void *		1038522	0					
ANR	1038539	Identifier	s		1038522	1					
ANR	1038540	CFGEntryNode	ENTRY		1038522		True				
ANR	1038541	CFGExitNode	EXIT		1038522		True				
ANR	1038542	Symbol	s		1038522						
ANR	1038543	Symbol	sferror		1038522						
ANR	1038544	Function	FAPIU_fclose	167:0:3600:3666							
ANR	1038545	FunctionDef	FAPIU_fclose (void * s)		1038544	0					
ANR	1038546	CompoundStatement		169:0:3626:3666	1038544	0					
ANR	1038547	ReturnStatement	return ( sfclose ( ( stream * ) ( s ) ) ) ;	170:4:3632:3664	1038544	0	True				
ANR	1038548	CallExpression	sfclose ( ( stream * ) ( s ) )		1038544	0					
ANR	1038549	Callee	sfclose		1038544	0					
ANR	1038550	Identifier	sfclose		1038544	0					
ANR	1038551	ArgumentList	( stream * ) ( s )		1038544	1					
ANR	1038552	Argument	( stream * ) ( s )		1038544	0					
ANR	1038553	CastExpression	( stream * ) ( s )		1038544	0					
ANR	1038554	CastTarget	stream *		1038544	0					
ANR	1038555	Identifier	s		1038544	1					
ANR	1038556	ReturnType	int		1038544	1					
ANR	1038557	Identifier	FAPIU_fclose		1038544	2					
ANR	1038558	ParameterList	void * s		1038544	3					
ANR	1038559	Parameter	void * s	168:13:3617:3623	1038544	0	True				
ANR	1038560	ParameterType	void *		1038544	0					
ANR	1038561	Identifier	s		1038544	1					
ANR	1038562	CFGEntryNode	ENTRY		1038544		True				
ANR	1038563	CFGExitNode	EXIT		1038544		True				
ANR	1038564	Symbol	s		1038544						
ANR	1038565	Symbol	sfclose		1038544						
ANR	1038566	Function	FAPIU_open	173:0:3669:3902							
ANR	1038567	FunctionDef	"FAPIU_open (char * path , int mode)"		1038566	0					
ANR	1038568	CompoundStatement		175:0:3709:3902	1038566	0					
ANR	1038569	IdentifierDeclStatement	void * s ;	176:4:3715:3722	1038566	0	True				
ANR	1038570	IdentifierDecl	* s		1038566	0					
ANR	1038571	IdentifierDeclType	void *		1038566	0					
ANR	1038572	Identifier	s		1038566	1					
ANR	1038573	IfStatement	if ( ! gs_mem_ctx )		1038566	1					
ANR	1038574	Condition	! gs_mem_ctx	178:8:3733:3743	1038566	0	True				
ANR	1038575	UnaryOperationExpression	! gs_mem_ctx		1038566	0					
ANR	1038576	UnaryOperator	!		1038566	0					
ANR	1038577	Identifier	gs_mem_ctx		1038566	1					
ANR	1038578	ReturnStatement	return ( void * ) - 1 ;	179:8:3754:3771	1038566	1	True				
ANR	1038579	CastExpression	( void * ) - 1		1038566	0					
ANR	1038580	CastTarget	void *		1038566	0					
ANR	1038581	UnaryOperationExpression	- 1		1038566	1					
ANR	1038582	UnaryOperator	-		1038566	0					
ANR	1038583	PrimaryExpression	1		1038566	1					
ANR	1038584	ExpressionStatement	"s = sfopen ( path , ""r+"" , gs_mem_ctx )"	182:4:3813:3847	1038566	2	True				
ANR	1038585	AssignmentExpression	"s = sfopen ( path , ""r+"" , gs_mem_ctx )"		1038566	0		=			
ANR	1038586	Identifier	s		1038566	0					
ANR	1038587	CallExpression	"sfopen ( path , ""r+"" , gs_mem_ctx )"		1038566	1					
ANR	1038588	Callee	sfopen		1038566	0					
ANR	1038589	Identifier	sfopen		1038566	0					
ANR	1038590	ArgumentList	path		1038566	1					
ANR	1038591	Argument	path		1038566	0					
ANR	1038592	Identifier	path		1038566	0					
ANR	1038593	Argument	"""r+"""		1038566	1					
ANR	1038594	PrimaryExpression	"""r+"""		1038566	0					
ANR	1038595	Argument	gs_mem_ctx		1038566	2					
ANR	1038596	Identifier	gs_mem_ctx		1038566	0					
ANR	1038597	IfStatement	if ( ! s )		1038566	3					
ANR	1038598	Condition	! s	183:8:3857:3858	1038566	0	True				
ANR	1038599	UnaryOperationExpression	! s		1038566	0					
ANR	1038600	UnaryOperator	!		1038566	0					
ANR	1038601	Identifier	s		1038566	1					
ANR	1038602	ExpressionStatement	s = ( void * ) - 1	184:8:3869:3883	1038566	1	True				
ANR	1038603	AssignmentExpression	s = ( void * ) - 1		1038566	0		=			
ANR	1038604	Identifier	s		1038566	0					
ANR	1038605	CastExpression	( void * ) - 1		1038566	1					
ANR	1038606	CastTarget	void *		1038566	0					
ANR	1038607	UnaryOperationExpression	- 1		1038566	1					
ANR	1038608	UnaryOperator	-		1038566	0					
ANR	1038609	PrimaryExpression	1		1038566	1					
ANR	1038610	ReturnStatement	return ( s ) ;	186:4:3890:3900	1038566	4	True				
ANR	1038611	Identifier	s		1038566	0					
ANR	1038612	ReturnType	void *		1038566	1					
ANR	1038613	Identifier	FAPIU_open		1038566	2					
ANR	1038614	ParameterList	"char * path , int mode"		1038566	3					
ANR	1038615	Parameter	char * path	174:11:3687:3696	1038566	0	True				
ANR	1038616	ParameterType	char *		1038566	0					
ANR	1038617	Identifier	path		1038566	1					
ANR	1038618	Parameter	int mode	174:23:3699:3706	1038566	1	True				
ANR	1038619	ParameterType	int		1038566	0					
ANR	1038620	Identifier	mode		1038566	1					
ANR	1038621	CFGEntryNode	ENTRY		1038566		True				
ANR	1038622	CFGExitNode	EXIT		1038566		True				
ANR	1038623	Symbol	mode		1038566						
ANR	1038624	Symbol	path		1038566						
ANR	1038625	Symbol	s		1038566						
ANR	1038626	Symbol	sfopen		1038566						
ANR	1038627	Symbol	gs_mem_ctx		1038566						
ANR	1038628	Function	FAPIU_read	189:0:3905:4005							
ANR	1038629	FunctionDef	"FAPIU_read (void * s , void * ptr , int count)"		1038628	0					
ANR	1038630	CompoundStatement		191:0:3951:4005	1038628	0					
ANR	1038631	ReturnStatement	"return ( sfread ( ptr , 1 , count , ( stream * ) ( s ) ) ) ;"	192:4:3957:4003	1038628	0	True				
ANR	1038632	CallExpression	"sfread ( ptr , 1 , count , ( stream * ) ( s ) )"		1038628	0					
ANR	1038633	Callee	sfread		1038628	0					
ANR	1038634	Identifier	sfread		1038628	0					
ANR	1038635	ArgumentList	ptr		1038628	1					
ANR	1038636	Argument	ptr		1038628	0					
ANR	1038637	Identifier	ptr		1038628	0					
ANR	1038638	Argument	1		1038628	1					
ANR	1038639	PrimaryExpression	1		1038628	0					
ANR	1038640	Argument	count		1038628	2					
ANR	1038641	Identifier	count		1038628	0					
ANR	1038642	Argument	( stream * ) ( s )		1038628	3					
ANR	1038643	CastExpression	( stream * ) ( s )		1038628	0					
ANR	1038644	CastTarget	stream *		1038628	0					
ANR	1038645	Identifier	s		1038628	1					
ANR	1038646	ReturnType	int		1038628	1					
ANR	1038647	Identifier	FAPIU_read		1038628	2					
ANR	1038648	ParameterList	"void * s , void * ptr , int count"		1038628	3					
ANR	1038649	Parameter	void * s	190:11:3920:3926	1038628	0	True				
ANR	1038650	ParameterType	void *		1038628	0					
ANR	1038651	Identifier	s		1038628	1					
ANR	1038652	Parameter	void * ptr	190:20:3929:3937	1038628	1	True				
ANR	1038653	ParameterType	void *		1038628	0					
ANR	1038654	Identifier	ptr		1038628	1					
ANR	1038655	Parameter	int count	190:31:3940:3948	1038628	2	True				
ANR	1038656	ParameterType	int		1038628	0					
ANR	1038657	Identifier	count		1038628	1					
ANR	1038658	CFGEntryNode	ENTRY		1038628		True				
ANR	1038659	CFGExitNode	EXIT		1038628		True				
ANR	1038660	Symbol	s		1038628						
ANR	1038661	Symbol	count		1038628						
ANR	1038662	Symbol	sfread		1038628						
ANR	1038663	Symbol	ptr		1038628						
ANR	1038664	Function	FAPIU_lseek	195:0:4008:4170							
ANR	1038665	FunctionDef	"FAPIU_lseek (void * s , int offset , int whence)"		1038664	0					
ANR	1038666	CompoundStatement		197:0:4057:4170	1038664	0					
ANR	1038667	IdentifierDeclStatement	"int pos = sfseek ( s , offset , whence ) ;"	198:4:4063:4098	1038664	0	True				
ANR	1038668	IdentifierDecl	"pos = sfseek ( s , offset , whence )"		1038664	0					
ANR	1038669	IdentifierDeclType	int		1038664	0					
ANR	1038670	Identifier	pos		1038664	1					
ANR	1038671	AssignmentExpression	"pos = sfseek ( s , offset , whence )"		1038664	2		=			
ANR	1038672	Identifier	pos		1038664	0					
ANR	1038673	CallExpression	"sfseek ( s , offset , whence )"		1038664	1					
ANR	1038674	Callee	sfseek		1038664	0					
ANR	1038675	Identifier	sfseek		1038664	0					
ANR	1038676	ArgumentList	s		1038664	1					
ANR	1038677	Argument	s		1038664	0					
ANR	1038678	Identifier	s		1038664	0					
ANR	1038679	Argument	offset		1038664	1					
ANR	1038680	Identifier	offset		1038664	0					
ANR	1038681	Argument	whence		1038664	2					
ANR	1038682	Identifier	whence		1038664	0					
ANR	1038683	IfStatement	if ( pos >= 0 )		1038664	1					
ANR	1038684	Condition	pos >= 0	200:8:4109:4116	1038664	0	True				
ANR	1038685	RelationalExpression	pos >= 0		1038664	0		>=			
ANR	1038686	Identifier	pos		1038664	0					
ANR	1038687	PrimaryExpression	0		1038664	1					
ANR	1038688	CompoundStatement		4:18:61:61	1038664	1					
ANR	1038689	ExpressionStatement	pos = sftell ( s )	201:8:4129:4144	1038664	0	True				
ANR	1038690	AssignmentExpression	pos = sftell ( s )		1038664	0		=			
ANR	1038691	Identifier	pos		1038664	0					
ANR	1038692	CallExpression	sftell ( s )		1038664	1					
ANR	1038693	Callee	sftell		1038664	0					
ANR	1038694	Identifier	sftell		1038664	0					
ANR	1038695	ArgumentList	s		1038664	1					
ANR	1038696	Argument	s		1038664	0					
ANR	1038697	Identifier	s		1038664	0					
ANR	1038698	ReturnStatement	return ( pos ) ;	203:4:4156:4168	1038664	2	True				
ANR	1038699	Identifier	pos		1038664	0					
ANR	1038700	ReturnType	int		1038664	1					
ANR	1038701	Identifier	FAPIU_lseek		1038664	2					
ANR	1038702	ParameterList	"void * s , int offset , int whence"		1038664	3					
ANR	1038703	Parameter	void * s	196:12:4024:4030	1038664	0	True				
ANR	1038704	ParameterType	void *		1038664	0					
ANR	1038705	Identifier	s		1038664	1					
ANR	1038706	Parameter	int offset	196:21:4033:4042	1038664	1	True				
ANR	1038707	ParameterType	int		1038664	0					
ANR	1038708	Identifier	offset		1038664	1					
ANR	1038709	Parameter	int whence	196:33:4045:4054	1038664	2	True				
ANR	1038710	ParameterType	int		1038664	0					
ANR	1038711	Identifier	whence		1038664	1					
ANR	1038712	CFGEntryNode	ENTRY		1038664		True				
ANR	1038713	CFGExitNode	EXIT		1038664		True				
ANR	1038714	Symbol	s		1038664						
ANR	1038715	Symbol	offset		1038664						
ANR	1038716	Symbol	sftell		1038664						
ANR	1038717	Symbol	whence		1038664						
ANR	1038718	Symbol	pos		1038664						
ANR	1038719	Symbol	sfseek		1038664						
ANR	1038720	Function	fapi_ufseek	206:0:4173:4339							
ANR	1038721	FunctionDef	"fapi_ufseek (stream * s , long offset , int whence)"		1038720	0					
ANR	1038722	CompoundStatement		208:0:4226:4339	1038720	0					
ANR	1038723	IdentifierDeclStatement	"int pos = sfseek ( s , offset , whence ) ;"	209:4:4232:4267	1038720	0	True				
ANR	1038724	IdentifierDecl	"pos = sfseek ( s , offset , whence )"		1038720	0					
ANR	1038725	IdentifierDeclType	int		1038720	0					
ANR	1038726	Identifier	pos		1038720	1					
ANR	1038727	AssignmentExpression	"pos = sfseek ( s , offset , whence )"		1038720	2		=			
ANR	1038728	Identifier	pos		1038720	0					
ANR	1038729	CallExpression	"sfseek ( s , offset , whence )"		1038720	1					
ANR	1038730	Callee	sfseek		1038720	0					
ANR	1038731	Identifier	sfseek		1038720	0					
ANR	1038732	ArgumentList	s		1038720	1					
ANR	1038733	Argument	s		1038720	0					
ANR	1038734	Identifier	s		1038720	0					
ANR	1038735	Argument	offset		1038720	1					
ANR	1038736	Identifier	offset		1038720	0					
ANR	1038737	Argument	whence		1038720	2					
ANR	1038738	Identifier	whence		1038720	0					
ANR	1038739	IfStatement	if ( pos >= 0 )		1038720	1					
ANR	1038740	Condition	pos >= 0	211:8:4278:4285	1038720	0	True				
ANR	1038741	RelationalExpression	pos >= 0		1038720	0		>=			
ANR	1038742	Identifier	pos		1038720	0					
ANR	1038743	PrimaryExpression	0		1038720	1					
ANR	1038744	CompoundStatement		4:18:61:61	1038720	1					
ANR	1038745	ExpressionStatement	pos = sftell ( s )	212:8:4298:4313	1038720	0	True				
ANR	1038746	AssignmentExpression	pos = sftell ( s )		1038720	0		=			
ANR	1038747	Identifier	pos		1038720	0					
ANR	1038748	CallExpression	sftell ( s )		1038720	1					
ANR	1038749	Callee	sftell		1038720	0					
ANR	1038750	Identifier	sftell		1038720	0					
ANR	1038751	ArgumentList	s		1038720	1					
ANR	1038752	Argument	s		1038720	0					
ANR	1038753	Identifier	s		1038720	0					
ANR	1038754	ReturnStatement	return ( pos ) ;	214:4:4325:4337	1038720	2	True				
ANR	1038755	Identifier	pos		1038720	0					
ANR	1038756	ReturnType	int		1038720	1					
ANR	1038757	Identifier	fapi_ufseek		1038720	2					
ANR	1038758	ParameterList	"stream * s , long offset , int whence"		1038720	3					
ANR	1038759	Parameter	stream * s	207:12:4189:4198	1038720	0	True				
ANR	1038760	ParameterType	stream *		1038720	0					
ANR	1038761	Identifier	s		1038720	1					
ANR	1038762	Parameter	long offset	207:24:4201:4211	1038720	1	True				
ANR	1038763	ParameterType	long		1038720	0					
ANR	1038764	Identifier	offset		1038720	1					
ANR	1038765	Parameter	int whence	207:37:4214:4223	1038720	2	True				
ANR	1038766	ParameterType	int		1038720	0					
ANR	1038767	Identifier	whence		1038720	1					
ANR	1038768	CFGEntryNode	ENTRY		1038720		True				
ANR	1038769	CFGExitNode	EXIT		1038720		True				
ANR	1038770	Symbol	s		1038720						
ANR	1038771	Symbol	offset		1038720						
ANR	1038772	Symbol	sftell		1038720						
ANR	1038773	Symbol	whence		1038720						
ANR	1038774	Symbol	pos		1038720						
ANR	1038775	Symbol	sfseek		1038720						
ANR	1038776	Function	FAPIU_close	217:0:4342:4407							
ANR	1038777	FunctionDef	FAPIU_close (void * s)		1038776	0					
ANR	1038778	CompoundStatement		219:0:4367:4407	1038776	0					
ANR	1038779	ReturnStatement	return ( sfclose ( ( stream * ) ( s ) ) ) ;	220:4:4373:4405	1038776	0	True				
ANR	1038780	CallExpression	sfclose ( ( stream * ) ( s ) )		1038776	0					
ANR	1038781	Callee	sfclose		1038776	0					
ANR	1038782	Identifier	sfclose		1038776	0					
ANR	1038783	ArgumentList	( stream * ) ( s )		1038776	1					
ANR	1038784	Argument	( stream * ) ( s )		1038776	0					
ANR	1038785	CastExpression	( stream * ) ( s )		1038776	0					
ANR	1038786	CastTarget	stream *		1038776	0					
ANR	1038787	Identifier	s		1038776	1					
ANR	1038788	ReturnType	int		1038776	1					
ANR	1038789	Identifier	FAPIU_close		1038776	2					
ANR	1038790	ParameterList	void * s		1038776	3					
ANR	1038791	Parameter	void * s	218:12:4358:4364	1038776	0	True				
ANR	1038792	ParameterType	void *		1038776	0					
ANR	1038793	Identifier	s		1038776	1					
ANR	1038794	CFGEntryNode	ENTRY		1038776		True				
ANR	1038795	CFGExitNode	EXIT		1038776		True				
ANR	1038796	Symbol	s		1038776						
ANR	1038797	Symbol	sfclose		1038776						
ANR	1038798	DeclStmt									
ANR	1038799	Decl							uint	uint	cache_pool
ANR	1038800	DeclStmt									
ANR	1038801	Decl							uint	uint	buffer_pool
ANR	1038802	DeclStmt									
ANR	1038803	Decl							uint	uint	chargen_pool
ANR	1038804	DeclStmt									
ANR	1038805	Decl							unsigned long	unsigned long	curmem
ANR	1038806	DeclStmt									
ANR	1038807	Decl							unsigned long	unsigned long	maxmem
ANR	1038808	Function	MEMalloc	249:0:5088:5958							
ANR	1038809	FunctionDef	"MEMalloc (FSP UW16 pool , SL32 size)"		1038808	0					
ANR	1038810	CompoundStatement		251:0:5141:5958	1038808	0					
ANR	1038811	IdentifierDeclStatement	char * ptr ;	253:4:5148:5157	1038808	0	True				
ANR	1038812	IdentifierDecl	* ptr		1038808	0					
ANR	1038813	IdentifierDeclType	char *		1038808	0					
ANR	1038814	Identifier	ptr		1038808	1					
ANR	1038815	IfStatement	if ( if_state . pserver -> mem_avail [ pool ] < size )		1038808	1					
ANR	1038816	Condition	if_state . pserver -> mem_avail [ pool ] < size	255:7:5167:5206	1038808	0	True				
ANR	1038817	RelationalExpression	if_state . pserver -> mem_avail [ pool ] < size		1038808	0		<			
ANR	1038818	ArrayIndexing	if_state . pserver -> mem_avail [ pool ]		1038808	0					
ANR	1038819	PtrMemberAccess	if_state . pserver -> mem_avail		1038808	0					
ANR	1038820	MemberAccess	if_state . pserver		1038808	0					
ANR	1038821	Identifier	if_state		1038808	0					
ANR	1038822	Identifier	pserver		1038808	1					
ANR	1038823	Identifier	mem_avail		1038808	1					
ANR	1038824	Identifier	pool		1038808	1					
ANR	1038825	Identifier	size		1038808	1					
ANR	1038826	ReturnStatement	return ( MEM_HANDLE ) 0 ;	256:8:5217:5237	1038808	1	True				
ANR	1038827	CastExpression	( MEM_HANDLE ) 0		1038808	0					
ANR	1038828	CastTarget	MEM_HANDLE		1038808	0					
ANR	1038829	PrimaryExpression	0		1038808	1					
ANR	1038830	IdentifierDeclStatement	char * ptr2 ;	259:4:5269:5279	1038808	2	True				
ANR	1038831	IdentifierDecl	* ptr2		1038808	0					
ANR	1038832	IdentifierDeclType	char *		1038808	0					
ANR	1038833	Identifier	ptr2		1038808	1					
ANR	1038834	ExpressionStatement	size += sizeof ( long ) + 2 * sizeof ( void * )	261:4:5286:5327	1038808	3	True				
ANR	1038835	AssignmentExpression	size += sizeof ( long ) + 2 * sizeof ( void * )		1038808	0		+=			
ANR	1038836	Identifier	size		1038808	0					
ANR	1038837	AdditiveExpression	sizeof ( long ) + 2 * sizeof ( void * )		1038808	1		+			
ANR	1038838	SizeofExpression	sizeof ( long )		1038808	0					
ANR	1038839	Sizeof	sizeof		1038808	0					
ANR	1038840	SizeofOperand	long		1038808	1					
ANR	1038841	MultiplicativeExpression	2 * sizeof ( void * )		1038808	1		*			
ANR	1038842	PrimaryExpression	2		1038808	0					
ANR	1038843	SizeofExpression	sizeof ( void * )		1038808	1					
ANR	1038844	Sizeof	sizeof		1038808	0					
ANR	1038845	SizeofOperand	void *		1038808	1					
ANR	1038846	ExpressionStatement	size += sizeof ( long )	264:4:5341:5361	1038808	4	True				
ANR	1038847	AssignmentExpression	size += sizeof ( long )		1038808	0		+=			
ANR	1038848	Identifier	size		1038808	0					
ANR	1038849	SizeofExpression	sizeof ( long )		1038808	1					
ANR	1038850	Sizeof	sizeof		1038808	0					
ANR	1038851	SizeofOperand	long		1038808	1					
ANR	1038852	ExpressionStatement	"ptr = gs_malloc ( gs_mem_ctx , size , 1 , ""UFST MEMalloc"" )"	265:4:5367:5420	1038808	5	True				
ANR	1038853	AssignmentExpression	"ptr = gs_malloc ( gs_mem_ctx , size , 1 , ""UFST MEMalloc"" )"		1038808	0		=			
ANR	1038854	Identifier	ptr		1038808	0					
ANR	1038855	CallExpression	"gs_malloc ( gs_mem_ctx , size , 1 , ""UFST MEMalloc"" )"		1038808	1					
ANR	1038856	Callee	gs_malloc		1038808	0					
ANR	1038857	Identifier	gs_malloc		1038808	0					
ANR	1038858	ArgumentList	gs_mem_ctx		1038808	1					
ANR	1038859	Argument	gs_mem_ctx		1038808	0					
ANR	1038860	Identifier	gs_mem_ctx		1038808	0					
ANR	1038861	Argument	size		1038808	1					
ANR	1038862	Identifier	size		1038808	0					
ANR	1038863	Argument	1		1038808	2					
ANR	1038864	PrimaryExpression	1		1038808	0					
ANR	1038865	Argument	"""UFST MEMalloc"""		1038808	3					
ANR	1038866	PrimaryExpression	"""UFST MEMalloc"""		1038808	0					
ANR	1038867	IfStatement	if ( ! ptr )		1038808	6					
ANR	1038868	Condition	! ptr	266:8:5430:5433	1038808	0	True				
ANR	1038869	UnaryOperationExpression	! ptr		1038808	0					
ANR	1038870	UnaryOperator	!		1038808	0					
ANR	1038871	Identifier	ptr		1038808	1					
ANR	1038872	CompoundStatement		16:14:294:294	1038808	1					
ANR	1038873	ReturnStatement	return ( NIL_MH ) ;	267:8:5446:5461	1038808	0	True				
ANR	1038874	Identifier	NIL_MH		1038808	0					
ANR	1038875	ElseStatement	else		1038808	0					
ANR	1038876	CompoundStatement		19:9:336:336	1038808	0					
ANR	1038877	ExpressionStatement	* ( ( long * ) ptr ) = size	270:8:5488:5509	1038808	0	True				
ANR	1038878	AssignmentExpression	* ( ( long * ) ptr ) = size		1038808	0		=			
ANR	1038879	UnaryOperationExpression	* ( ( long * ) ptr )		1038808	0					
ANR	1038880	UnaryOperator	*		1038808	0					
ANR	1038881	CastExpression	( long * ) ptr		1038808	1					
ANR	1038882	CastTarget	long *		1038808	0					
ANR	1038883	Identifier	ptr		1038808	1					
ANR	1038884	Identifier	size		1038808	1					
ANR	1038885	ExpressionStatement	* ( ( long * ) ( ptr + size - sizeof ( long ) ) ) = size	273:8:5545:5590	1038808	1	True				
ANR	1038886	AssignmentExpression	* ( ( long * ) ( ptr + size - sizeof ( long ) ) ) = size		1038808	0		=			
ANR	1038887	UnaryOperationExpression	* ( ( long * ) ( ptr + size - sizeof ( long ) ) )		1038808	0					
ANR	1038888	UnaryOperator	*		1038808	0					
ANR	1038889	CastExpression	( long * ) ( ptr + size - sizeof ( long ) )		1038808	1					
ANR	1038890	CastTarget	long *		1038808	0					
ANR	1038891	AdditiveExpression	ptr + size - sizeof ( long )		1038808	1		+			
ANR	1038892	Identifier	ptr		1038808	0					
ANR	1038893	AdditiveExpression	size - sizeof ( long )		1038808	1		-			
ANR	1038894	Identifier	size		1038808	0					
ANR	1038895	SizeofExpression	sizeof ( long )		1038808	1					
ANR	1038896	Sizeof	sizeof		1038808	0					
ANR	1038897	SizeofOperand	long		1038808	1					
ANR	1038898	Identifier	size		1038808	1					
ANR	1038899	ExpressionStatement	ptr2 = ptr	274:8:5600:5610	1038808	2	True				
ANR	1038900	AssignmentExpression	ptr2 = ptr		1038808	0		=			
ANR	1038901	Identifier	ptr2		1038808	0					
ANR	1038902	Identifier	ptr		1038808	1					
ANR	1038903	ExpressionStatement	ptr += sizeof ( long )	277:8:5628:5647	1038808	3	True				
ANR	1038904	AssignmentExpression	ptr += sizeof ( long )		1038808	0		+=			
ANR	1038905	Identifier	ptr		1038808	0					
ANR	1038906	SizeofExpression	sizeof ( long )		1038808	1					
ANR	1038907	Sizeof	sizeof		1038808	0					
ANR	1038908	SizeofOperand	long		1038808	1					
ANR	1038909	IfStatement	if ( ( curmem += size ) > maxmem )		1038808	4					
ANR	1038910	Condition	( curmem += size ) > maxmem	280:12:5687:5711	1038808	0	True				
ANR	1038911	RelationalExpression	( curmem += size ) > maxmem		1038808	0		>			
ANR	1038912	AssignmentExpression	curmem += size		1038808	0		+=			
ANR	1038913	Identifier	curmem		1038808	0					
ANR	1038914	Identifier	size		1038808	1					
ANR	1038915	Identifier	maxmem		1038808	1					
ANR	1038916	CompoundStatement		30:39:572:572	1038808	1					
ANR	1038917	ExpressionStatement	maxmem = curmem	281:12:5728:5743	1038808	0	True				
ANR	1038918	AssignmentExpression	maxmem = curmem		1038808	0		=			
ANR	1038919	Identifier	maxmem		1038808	0					
ANR	1038920	Identifier	curmem		1038808	1					
ANR	1038921	ExpressionStatement	size -= 2 * sizeof ( long )	283:8:5763:5787	1038808	5	True				
ANR	1038922	AssignmentExpression	size -= 2 * sizeof ( long )		1038808	0		-=			
ANR	1038923	Identifier	size		1038808	0					
ANR	1038924	MultiplicativeExpression	2 * sizeof ( long )		1038808	1		*			
ANR	1038925	PrimaryExpression	2		1038808	0					
ANR	1038926	SizeofExpression	sizeof ( long )		1038808	1					
ANR	1038927	Sizeof	sizeof		1038808	0					
ANR	1038928	SizeofOperand	long		1038808	1					
ANR	1038929	ExpressionStatement	* ( ( char * ) ptr ) = ptr2	284:8:5797:5818	1038808	6	True				
ANR	1038930	AssignmentExpression	* ( ( char * ) ptr ) = ptr2		1038808	0		=			
ANR	1038931	UnaryOperationExpression	* ( ( char * ) ptr )		1038808	0					
ANR	1038932	UnaryOperator	*		1038808	0					
ANR	1038933	CastExpression	( char * ) ptr		1038808	1					
ANR	1038934	CastTarget	char *		1038808	0					
ANR	1038935	Identifier	ptr		1038808	1					
ANR	1038936	Identifier	ptr2		1038808	1					
ANR	1038937	ExpressionStatement	* ( ( char * ) ( ptr + size - sizeof ( void * ) ) ) = ptr2	285:8:5828:5875	1038808	7	True				
ANR	1038938	AssignmentExpression	* ( ( char * ) ( ptr + size - sizeof ( void * ) ) ) = ptr2		1038808	0		=			
ANR	1038939	UnaryOperationExpression	* ( ( char * ) ( ptr + size - sizeof ( void * ) ) )		1038808	0					
ANR	1038940	UnaryOperator	*		1038808	0					
ANR	1038941	CastExpression	( char * ) ( ptr + size - sizeof ( void * ) )		1038808	1					
ANR	1038942	CastTarget	char *		1038808	0					
ANR	1038943	AdditiveExpression	ptr + size - sizeof ( void * )		1038808	1		+			
ANR	1038944	Identifier	ptr		1038808	0					
ANR	1038945	AdditiveExpression	size - sizeof ( void * )		1038808	1		-			
ANR	1038946	Identifier	size		1038808	0					
ANR	1038947	SizeofExpression	sizeof ( void * )		1038808	1					
ANR	1038948	Sizeof	sizeof		1038808	0					
ANR	1038949	SizeofOperand	void *		1038808	1					
ANR	1038950	Identifier	ptr2		1038808	1					
ANR	1038951	ExpressionStatement	ptr += sizeof ( char * )	286:8:5885:5906	1038808	8	True				
ANR	1038952	AssignmentExpression	ptr += sizeof ( char * )		1038808	0		+=			
ANR	1038953	Identifier	ptr		1038808	0					
ANR	1038954	SizeofExpression	sizeof ( char * )		1038808	1					
ANR	1038955	Sizeof	sizeof		1038808	0					
ANR	1038956	SizeofOperand	char *		1038808	1					
ANR	1038957	ReturnStatement	return ( ( MEM_HANDLE ) ptr ) ;	290:8:5925:5950	1038808	9	True				
ANR	1038958	CastExpression	( MEM_HANDLE ) ptr		1038808	0					
ANR	1038959	CastTarget	MEM_HANDLE		1038808	0					
ANR	1038960	Identifier	ptr		1038808	1					
ANR	1038961	ReturnType	GLOBAL MEM_HANDLE		1038808	1					
ANR	1038962	Identifier	MEMalloc		1038808	2					
ANR	1038963	ParameterList	"FSP UW16 pool , SL32 size"		1038808	3					
ANR	1038964	Parameter	FSP UW16 pool	250:9:5115:5127	1038808	0	True				
ANR	1038965	ParameterType	FSP UW16		1038808	0					
ANR	1038966	Identifier	pool		1038808	1					
ANR	1038967	Parameter	SL32 size	250:24:5130:5138	1038808	1	True				
ANR	1038968	ParameterType	SL32		1038808	0					
ANR	1038969	Identifier	size		1038808	1					
ANR	1038970	CFGEntryNode	ENTRY		1038808		True				
ANR	1038971	CFGExitNode	EXIT		1038808		True				
ANR	1038972	Symbol	if_state . pserver		1038808						
ANR	1038973	Symbol	curmem		1038808						
ANR	1038974	Symbol	* * if_state . pserver		1038808						
ANR	1038975	Symbol	pool		1038808						
ANR	1038976	Symbol	NIL_MH		1038808						
ANR	1038977	Symbol	gs_mem_ctx		1038808						
ANR	1038978	Symbol	* ( ( char * ) ptr )		1038808						
ANR	1038979	Symbol	ptr		1038808						
ANR	1038980	Symbol	* if_state . pserver		1038808						
ANR	1038981	Symbol	* * if_state		1038808						
ANR	1038982	Symbol	* if_state . pserver -> mem_avail		1038808						
ANR	1038983	Symbol	ptr2		1038808						
ANR	1038984	Symbol	* ( ( long * ) ( ptr + size - sizeof ( long ) ) )		1038808						
ANR	1038985	Symbol	* pool		1038808						
ANR	1038986	Symbol	if_state		1038808						
ANR	1038987	Symbol	if_state . pserver -> mem_avail		1038808						
ANR	1038988	Symbol	gs_malloc		1038808						
ANR	1038989	Symbol	* size		1038808						
ANR	1038990	Symbol	* ( ( char * ) ( ptr + size - sizeof ( void * ) ) )		1038808						
ANR	1038991	Symbol	size		1038808						
ANR	1038992	Symbol	* ( ( long * ) ptr )		1038808						
ANR	1038993	Symbol	* ptr		1038808						
ANR	1038994	Symbol	* if_state		1038808						
ANR	1038995	Symbol	maxmem		1038808						
ANR	1038996	Function	MEMfree	294:0:5961:6735							
ANR	1038997	FunctionDef	"MEMfree (FSP UW16 pool , MEM_HANDLE ptr0)"		1038996	0					
ANR	1038998	CompoundStatement		296:0:6013:6735	1038996	0					
ANR	1038999	IdentifierDeclStatement	int size = 0 ;	297:4:6019:6031	1038996	0	True				
ANR	1039000	IdentifierDecl	size = 0		1038996	0					
ANR	1039001	IdentifierDeclType	int		1038996	0					
ANR	1039002	Identifier	size		1038996	1					
ANR	1039003	AssignmentExpression	size = 0		1038996	2		=			
ANR	1039004	Identifier	size		1038996	0					
ANR	1039005	PrimaryExpression	0		1038996	1					
ANR	1039006	IdentifierDeclStatement	void * ptr1 ;	298:4:6037:6047	1038996	1	True				
ANR	1039007	IdentifierDecl	* ptr1		1038996	0					
ANR	1039008	IdentifierDeclType	void *		1038996	0					
ANR	1039009	Identifier	ptr1		1038996	1					
ANR	1039010	IdentifierDeclStatement	char * ptr = ( char * ) ptr0 ;	299:4:6053:6077	1038996	2	True				
ANR	1039011	IdentifierDecl	* ptr = ( char * ) ptr0		1038996	0					
ANR	1039012	IdentifierDeclType	char *		1038996	0					
ANR	1039013	Identifier	ptr		1038996	1					
ANR	1039014	AssignmentExpression	* ptr = ( char * ) ptr0		1038996	2		=			
ANR	1039015	Identifier	ptr		1038996	0					
ANR	1039016	CastExpression	( char * ) ptr0		1038996	1					
ANR	1039017	CastTarget	char *		1038996	0					
ANR	1039018	Identifier	ptr0		1038996	1					
ANR	1039019	IdentifierDeclStatement	int size1 ;	302:4:6109:6118	1038996	3	True				
ANR	1039020	IdentifierDecl	size1		1038996	0					
ANR	1039021	IdentifierDeclType	int		1038996	0					
ANR	1039022	Identifier	size1		1038996	1					
ANR	1039023	IdentifierDeclStatement	void * ptr2 ;	303:4:6124:6134	1038996	4	True				
ANR	1039024	IdentifierDecl	* ptr2		1038996	0					
ANR	1039025	IdentifierDeclType	void *		1038996	0					
ANR	1039026	Identifier	ptr2		1038996	1					
ANR	1039027	ExpressionStatement	size = sizeof ( void * )	305:4:6141:6162	1038996	5	True				
ANR	1039028	AssignmentExpression	size = sizeof ( void * )		1038996	0		=			
ANR	1039029	Identifier	size		1038996	0					
ANR	1039030	SizeofExpression	sizeof ( void * )		1038996	1					
ANR	1039031	Sizeof	sizeof		1038996	0					
ANR	1039032	SizeofOperand	void *		1038996	1					
ANR	1039033	IfStatement	if ( ! ptr )		1038996	6					
ANR	1039034	Condition	! ptr	308:8:6180:6183	1038996	0	True				
ANR	1039035	UnaryOperationExpression	! ptr		1038996	0					
ANR	1039036	UnaryOperator	!		1038996	0					
ANR	1039037	Identifier	ptr		1038996	1					
ANR	1039038	CompoundStatement		13:14:172:172	1038996	1					
ANR	1039039	ReturnStatement	return ;	309:8:6196:6202	1038996	0	True				
ANR	1039040	ExpressionStatement	ptr -= ( sizeof ( long ) + size )	312:4:6215:6243	1038996	7	True				
ANR	1039041	AssignmentExpression	ptr -= ( sizeof ( long ) + size )		1038996	0		-=			
ANR	1039042	Identifier	ptr		1038996	0					
ANR	1039043	AdditiveExpression	sizeof ( long ) + size		1038996	1		+			
ANR	1039044	SizeofExpression	sizeof ( long )		1038996	0					
ANR	1039045	Sizeof	sizeof		1038996	0					
ANR	1039046	SizeofOperand	long		1038996	1					
ANR	1039047	Identifier	size		1038996	1					
ANR	1039048	ExpressionStatement	size = * ( ( long * ) ptr )	313:4:6249:6270	1038996	8	True				
ANR	1039049	AssignmentExpression	size = * ( ( long * ) ptr )		1038996	0		=			
ANR	1039050	Identifier	size		1038996	0					
ANR	1039051	UnaryOperationExpression	* ( ( long * ) ptr )		1038996	1					
ANR	1039052	UnaryOperator	*		1038996	0					
ANR	1039053	CastExpression	( long * ) ptr		1038996	1					
ANR	1039054	CastTarget	long *		1038996	0					
ANR	1039055	Identifier	ptr		1038996	1					
ANR	1039056	ExpressionStatement	ptr1 = ptr	316:4:6302:6312	1038996	9	True				
ANR	1039057	AssignmentExpression	ptr1 = ptr		1038996	0		=			
ANR	1039058	Identifier	ptr1		1038996	0					
ANR	1039059	Identifier	ptr		1038996	1					
ANR	1039060	ExpressionStatement	size1 = size	317:4:6318:6330	1038996	10	True				
ANR	1039061	AssignmentExpression	size1 = size		1038996	0		=			
ANR	1039062	Identifier	size1		1038996	0					
ANR	1039063	Identifier	size		1038996	1					
ANR	1039064	ExpressionStatement	curmem -= size	318:4:6336:6350	1038996	11	True				
ANR	1039065	AssignmentExpression	curmem -= size		1038996	0		-=			
ANR	1039066	Identifier	curmem		1038996	0					
ANR	1039067	Identifier	size		1038996	1					
ANR	1039068	IfStatement	if ( size1 != * ( ( long * ) ( ptr + size - sizeof ( long ) ) ) )		1038996	12					
ANR	1039069	Condition	size1 != * ( ( long * ) ( ptr + size - sizeof ( long ) ) )	320:8:6361:6407	1038996	0	True				
ANR	1039070	EqualityExpression	size1 != * ( ( long * ) ( ptr + size - sizeof ( long ) ) )		1038996	0		!=			
ANR	1039071	Identifier	size1		1038996	0					
ANR	1039072	UnaryOperationExpression	* ( ( long * ) ( ptr + size - sizeof ( long ) ) )		1038996	1					
ANR	1039073	UnaryOperator	*		1038996	0					
ANR	1039074	CastExpression	( long * ) ( ptr + size - sizeof ( long ) )		1038996	1					
ANR	1039075	CastTarget	long *		1038996	0					
ANR	1039076	AdditiveExpression	ptr + size - sizeof ( long )		1038996	1		+			
ANR	1039077	Identifier	ptr		1038996	0					
ANR	1039078	AdditiveExpression	size - sizeof ( long )		1038996	1		-			
ANR	1039079	Identifier	size		1038996	0					
ANR	1039080	SizeofExpression	sizeof ( long )		1038996	1					
ANR	1039081	Sizeof	sizeof		1038996	0					
ANR	1039082	SizeofOperand	long		1038996	1					
ANR	1039083	CompoundStatement		25:57:396:396	1038996	1					
ANR	1039084	ExpressionStatement	"dprintf ( ""Memory length corrupt!\\n"" )"	321:8:6420:6455	1038996	0	True				
ANR	1039085	CallExpression	"dprintf ( ""Memory length corrupt!\\n"" )"		1038996	0					
ANR	1039086	Callee	dprintf		1038996	0					
ANR	1039087	Identifier	dprintf		1038996	0					
ANR	1039088	ArgumentList	"""Memory length corrupt!\\n"""		1038996	1					
ANR	1039089	Argument	"""Memory length corrupt!\\n"""		1038996	0					
ANR	1039090	PrimaryExpression	"""Memory length corrupt!\\n"""		1038996	0					
ANR	1039091	ExpressionStatement	ptr1 += sizeof ( long )	324:4:6468:6488	1038996	13	True				
ANR	1039092	AssignmentExpression	ptr1 += sizeof ( long )		1038996	0		+=			
ANR	1039093	Identifier	ptr1		1038996	0					
ANR	1039094	SizeofExpression	sizeof ( long )		1038996	1					
ANR	1039095	Sizeof	sizeof		1038996	0					
ANR	1039096	SizeofOperand	long		1038996	1					
ANR	1039097	ExpressionStatement	size1 -= sizeof ( long )	325:4:6494:6515	1038996	14	True				
ANR	1039098	AssignmentExpression	size1 -= sizeof ( long )		1038996	0		-=			
ANR	1039099	Identifier	size1		1038996	0					
ANR	1039100	SizeofExpression	sizeof ( long )		1038996	1					
ANR	1039101	Sizeof	sizeof		1038996	0					
ANR	1039102	SizeofOperand	long		1038996	1					
ANR	1039103	IfStatement	if ( * ( ( char * ) ptr ) != * ( ( char * ) ( ptr + size - sizeof ( void * ) ) ) )		1038996	15					
ANR	1039104	Condition	* ( ( char * ) ptr ) != * ( ( char * ) ( ptr + size - sizeof ( void * ) ) )	326:8:6525:6582	1038996	0	True				
ANR	1039105	EqualityExpression	* ( ( char * ) ptr ) != * ( ( char * ) ( ptr + size - sizeof ( void * ) ) )		1038996	0		!=			
ANR	1039106	UnaryOperationExpression	* ( ( char * ) ptr )		1038996	0					
ANR	1039107	UnaryOperator	*		1038996	0					
ANR	1039108	CastExpression	( char * ) ptr		1038996	1					
ANR	1039109	CastTarget	char *		1038996	0					
ANR	1039110	Identifier	ptr		1038996	1					
ANR	1039111	UnaryOperationExpression	* ( ( char * ) ( ptr + size - sizeof ( void * ) ) )		1038996	1					
ANR	1039112	UnaryOperator	*		1038996	0					
ANR	1039113	CastExpression	( char * ) ( ptr + size - sizeof ( void * ) )		1038996	1					
ANR	1039114	CastTarget	char *		1038996	0					
ANR	1039115	AdditiveExpression	ptr + size - sizeof ( void * )		1038996	1		+			
ANR	1039116	Identifier	ptr		1038996	0					
ANR	1039117	AdditiveExpression	size - sizeof ( void * )		1038996	1		-			
ANR	1039118	Identifier	size		1038996	0					
ANR	1039119	SizeofExpression	sizeof ( void * )		1038996	1					
ANR	1039120	Sizeof	sizeof		1038996	0					
ANR	1039121	SizeofOperand	void *		1038996	1					
ANR	1039122	CompoundStatement		31:68:571:571	1038996	1					
ANR	1039123	ExpressionStatement	"dprintf ( ""Memory pointer record corrupt!\\n"" )"	327:8:6595:6638	1038996	0	True				
ANR	1039124	CallExpression	"dprintf ( ""Memory pointer record corrupt!\\n"" )"		1038996	0					
ANR	1039125	Callee	dprintf		1038996	0					
ANR	1039126	Identifier	dprintf		1038996	0					
ANR	1039127	ArgumentList	"""Memory pointer record corrupt!\\n"""		1038996	1					
ANR	1039128	Argument	"""Memory pointer record corrupt!\\n"""		1038996	0					
ANR	1039129	PrimaryExpression	"""Memory pointer record corrupt!\\n"""		1038996	0					
ANR	1039130	ExpressionStatement	"memset ( ptr , 0x00 , size )"	331:4:6658:6681	1038996	16	True				
ANR	1039131	CallExpression	"memset ( ptr , 0x00 , size )"		1038996	0					
ANR	1039132	Callee	memset		1038996	0					
ANR	1039133	Identifier	memset		1038996	0					
ANR	1039134	ArgumentList	ptr		1038996	1					
ANR	1039135	Argument	ptr		1038996	0					
ANR	1039136	Identifier	ptr		1038996	0					
ANR	1039137	Argument	0x00		1038996	1					
ANR	1039138	PrimaryExpression	0x00		1038996	0					
ANR	1039139	Argument	size		1038996	2					
ANR	1039140	Identifier	size		1038996	0					
ANR	1039141	ExpressionStatement	"gs_free ( gs_mem_ctx , ptr , 0 , 0 , ""UFST MEMfree"" )"	332:4:6687:6733	1038996	17	True				
ANR	1039142	CallExpression	"gs_free ( gs_mem_ctx , ptr , 0 , 0 , ""UFST MEMfree"" )"		1038996	0					
ANR	1039143	Callee	gs_free		1038996	0					
ANR	1039144	Identifier	gs_free		1038996	0					
ANR	1039145	ArgumentList	gs_mem_ctx		1038996	1					
ANR	1039146	Argument	gs_mem_ctx		1038996	0					
ANR	1039147	Identifier	gs_mem_ctx		1038996	0					
ANR	1039148	Argument	ptr		1038996	1					
ANR	1039149	Identifier	ptr		1038996	0					
ANR	1039150	Argument	0		1038996	2					
ANR	1039151	PrimaryExpression	0		1038996	0					
ANR	1039152	Argument	0		1038996	3					
ANR	1039153	PrimaryExpression	0		1038996	0					
ANR	1039154	Argument	"""UFST MEMfree"""		1038996	4					
ANR	1039155	PrimaryExpression	"""UFST MEMfree"""		1038996	0					
ANR	1039156	ReturnType	GLOBAL VOID		1038996	1					
ANR	1039157	Identifier	MEMfree		1038996	2					
ANR	1039158	ParameterList	"FSP UW16 pool , MEM_HANDLE ptr0"		1038996	3					
ANR	1039159	Parameter	FSP UW16 pool	295:8:5981:5993	1038996	0	True				
ANR	1039160	ParameterType	FSP UW16		1038996	0					
ANR	1039161	Identifier	pool		1038996	1					
ANR	1039162	Parameter	MEM_HANDLE ptr0	295:23:5996:6010	1038996	1	True				
ANR	1039163	ParameterType	MEM_HANDLE		1038996	0					
ANR	1039164	Identifier	ptr0		1038996	1					
ANR	1039165	CFGEntryNode	ENTRY		1038996		True				
ANR	1039166	CFGExitNode	EXIT		1038996		True				
ANR	1039167	Symbol	curmem		1038996						
ANR	1039168	Symbol	pool		1038996						
ANR	1039169	Symbol	gs_mem_ctx		1038996						
ANR	1039170	Symbol	* ( ( char * ) ptr )		1038996						
ANR	1039171	Symbol	ptr		1038996						
ANR	1039172	Symbol	ptr2		1038996						
ANR	1039173	Symbol	* ( ( long * ) ( ptr + size - sizeof ( long ) ) )		1038996						
ANR	1039174	Symbol	* size		1038996						
ANR	1039175	Symbol	* ( ( char * ) ( ptr + size - sizeof ( void * ) ) )		1038996						
ANR	1039176	Symbol	size		1038996						
ANR	1039177	Symbol	ptr0		1038996						
ANR	1039178	Symbol	size1		1038996						
ANR	1039179	Symbol	ptr1		1038996						
ANR	1039180	Symbol	* ( ( long * ) ptr )		1038996						
ANR	1039181	Symbol	* ptr		1038996						
ANR	1039182	Function	gx_set_UFST_Callbacks	346:0:7190:7715							
ANR	1039183	FunctionDef	"gx_set_UFST_Callbacks (LPUB8 ( * p_PCLEO_charptr ) ( FSP LPUB8 pfont_hdr , UW16 sym_code ) , LPUB8 ( * p_PCLchId2ptr ) ( FSP UW16 chId ) , LPUB8 ( * p_PCLglyphID2Ptr ) ( FSP UW16 glyphID ))"		1039182	0					
ANR	1039184	CompoundStatement		351:0:7429:7715	1039182	0					
ANR	1039185	ExpressionStatement	m_PCLEO_charptr = ( p_PCLEO_charptr != NULL ? p_PCLEO_charptr : stub_PCLEO_charptr )	352:4:7435:7525	1039182	0	True				
ANR	1039186	AssignmentExpression	m_PCLEO_charptr = ( p_PCLEO_charptr != NULL ? p_PCLEO_charptr : stub_PCLEO_charptr )		1039182	0		=			
ANR	1039187	Identifier	m_PCLEO_charptr		1039182	0					
ANR	1039188	ConditionalExpression	p_PCLEO_charptr != NULL ? p_PCLEO_charptr : stub_PCLEO_charptr		1039182	1					
ANR	1039189	Condition	p_PCLEO_charptr != NULL		1039182	0					
ANR	1039190	EqualityExpression	p_PCLEO_charptr != NULL		1039182	0		!=			
ANR	1039191	Identifier	p_PCLEO_charptr		1039182	0					
ANR	1039192	Identifier	NULL		1039182	1					
ANR	1039193	Identifier	p_PCLEO_charptr		1039182	1					
ANR	1039194	Identifier	stub_PCLEO_charptr		1039182	2					
ANR	1039195	ExpressionStatement	m_PCLchId2ptr = ( p_PCLchId2ptr != NULL ? p_PCLchId2ptr : stub_PCLchId2ptr )	354:4:7531:7613	1039182	1	True				
ANR	1039196	AssignmentExpression	m_PCLchId2ptr = ( p_PCLchId2ptr != NULL ? p_PCLchId2ptr : stub_PCLchId2ptr )		1039182	0		=			
ANR	1039197	Identifier	m_PCLchId2ptr		1039182	0					
ANR	1039198	ConditionalExpression	p_PCLchId2ptr != NULL ? p_PCLchId2ptr : stub_PCLchId2ptr		1039182	1					
ANR	1039199	Condition	p_PCLchId2ptr != NULL		1039182	0					
ANR	1039200	EqualityExpression	p_PCLchId2ptr != NULL		1039182	0		!=			
ANR	1039201	Identifier	p_PCLchId2ptr		1039182	0					
ANR	1039202	Identifier	NULL		1039182	1					
ANR	1039203	Identifier	p_PCLchId2ptr		1039182	1					
ANR	1039204	Identifier	stub_PCLchId2ptr		1039182	2					
ANR	1039205	ExpressionStatement	m_PCLglyphID2Ptr = ( p_PCLglyphID2Ptr != NULL ? p_PCLglyphID2Ptr : stub_PCLglyphID2Ptr )	356:4:7619:7713	1039182	2	True				
ANR	1039206	AssignmentExpression	m_PCLglyphID2Ptr = ( p_PCLglyphID2Ptr != NULL ? p_PCLglyphID2Ptr : stub_PCLglyphID2Ptr )		1039182	0		=			
ANR	1039207	Identifier	m_PCLglyphID2Ptr		1039182	0					
ANR	1039208	ConditionalExpression	p_PCLglyphID2Ptr != NULL ? p_PCLglyphID2Ptr : stub_PCLglyphID2Ptr		1039182	1					
ANR	1039209	Condition	p_PCLglyphID2Ptr != NULL		1039182	0					
ANR	1039210	EqualityExpression	p_PCLglyphID2Ptr != NULL		1039182	0		!=			
ANR	1039211	Identifier	p_PCLglyphID2Ptr		1039182	0					
ANR	1039212	Identifier	NULL		1039182	1					
ANR	1039213	Identifier	p_PCLglyphID2Ptr		1039182	1					
ANR	1039214	Identifier	stub_PCLglyphID2Ptr		1039182	2					
ANR	1039215	ReturnType	void		1039182	1					
ANR	1039216	Identifier	gx_set_UFST_Callbacks		1039182	2					
ANR	1039217	ParameterList	"LPUB8 ( * p_PCLEO_charptr ) ( FSP LPUB8 pfont_hdr , UW16 sym_code ) , LPUB8 ( * p_PCLchId2ptr ) ( FSP UW16 chId ) , LPUB8 ( * p_PCLglyphID2Ptr ) ( FSP UW16 glyphID )"		1039182	3					
ANR	1039218	Parameter	"LPUB8 ( * p_PCLEO_charptr ) ( FSP LPUB8 pfont_hdr , UW16 sym_code )"	347:22:7217:7298	1039182	0	True				
ANR	1039219	ParameterType	"(( FSP LPUB8 pfont_hdr , UW16 sym_code ) LPUB8) *"		1039182	0					
ANR	1039220	Identifier	p_PCLEO_charptr		1039182	1					
ANR	1039221	Parameter	LPUB8 ( * p_PCLchId2ptr ) ( FSP UW16 chId )	349:22:7323:7359	1039182	1	True				
ANR	1039222	ParameterType	(( FSP UW16 chId ) LPUB8) *		1039182	0					
ANR	1039223	Identifier	p_PCLchId2ptr		1039182	1					
ANR	1039224	Parameter	LPUB8 ( * p_PCLglyphID2Ptr ) ( FSP UW16 glyphID )	350:22:7384:7426	1039182	2	True				
ANR	1039225	ParameterType	(( FSP UW16 glyphID ) LPUB8) *		1039182	0					
ANR	1039226	Identifier	p_PCLglyphID2Ptr		1039182	1					
ANR	1039227	CFGEntryNode	ENTRY		1039182		True				
ANR	1039228	CFGExitNode	EXIT		1039182		True				
ANR	1039229	Symbol	NULL		1039182						
ANR	1039230	Symbol	p_PCLEO_charptr		1039182						
ANR	1039231	Symbol	m_PCLglyphID2Ptr		1039182						
ANR	1039232	Symbol	stub_PCLglyphID2Ptr		1039182						
ANR	1039233	Symbol	p_PCLglyphID2Ptr		1039182						
ANR	1039234	Symbol	stub_PCLchId2ptr		1039182						
ANR	1039235	Symbol	m_PCLEO_charptr		1039182						
ANR	1039236	Symbol	m_PCLchId2ptr		1039182						
ANR	1039237	Symbol	p_PCLchId2ptr		1039182						
ANR	1039238	Symbol	stub_PCLEO_charptr		1039182						
ANR	1039239	Function	gx_UFST_init	368:0:8003:9316							
ANR	1039240	FunctionDef	"gx_UFST_init (gs_memory_t * mem , const UB8 * ufst_root_dir)"		1039239	0					
ANR	1039241	CompoundStatement		370:0:8066:9316	1039239	0					
ANR	1039242	IdentifierDeclStatement	IFCONFIG config_block ;	371:4:8072:8093	1039239	0	True				
ANR	1039243	IdentifierDecl	config_block		1039239	0					
ANR	1039244	IdentifierDeclType	IFCONFIG		1039239	0					
ANR	1039245	Identifier	config_block		1039239	1					
ANR	1039246	IdentifierDeclStatement	int status ;	372:4:8099:8109	1039239	1	True				
ANR	1039247	IdentifierDecl	status		1039239	0					
ANR	1039248	IdentifierDeclType	int		1039239	0					
ANR	1039249	Identifier	status		1039239	1					
ANR	1039250	IfStatement	if ( ufst_initialized )		1039239	2					
ANR	1039251	Condition	ufst_initialized	375:8:8140:8155	1039239	0	True				
ANR	1039252	Identifier	ufst_initialized		1039239	0					
ANR	1039253	ReturnStatement	return 0 ;	376:8:8166:8174	1039239	1	True				
ANR	1039254	PrimaryExpression	0		1039239	0					
ANR	1039255	ExpressionStatement	gs_mem_ctx = mem	377:4:8180:8196	1039239	3	True				
ANR	1039256	AssignmentExpression	gs_mem_ctx = mem		1039239	0		=			
ANR	1039257	Identifier	gs_mem_ctx		1039239	0					
ANR	1039258	Identifier	mem		1039239	1					
ANR	1039259	ExpressionStatement	"strcpy ( config_block . ufstPath , ufst_root_dir )"	379:4:8209:8253	1039239	4	True				
ANR	1039260	CallExpression	"strcpy ( config_block . ufstPath , ufst_root_dir )"		1039239	0					
ANR	1039261	Callee	strcpy		1039239	0					
ANR	1039262	Identifier	strcpy		1039239	0					
ANR	1039263	ArgumentList	config_block . ufstPath		1039239	1					
ANR	1039264	Argument	config_block . ufstPath		1039239	0					
ANR	1039265	MemberAccess	config_block . ufstPath		1039239	0					
ANR	1039266	Identifier	config_block		1039239	0					
ANR	1039267	Identifier	ufstPath		1039239	1					
ANR	1039268	Argument	ufst_root_dir		1039239	1					
ANR	1039269	Identifier	ufst_root_dir		1039239	0					
ANR	1039270	ExpressionStatement	"strcpy ( config_block . typePath , ufst_root_dir )"	380:4:8259:8303	1039239	5	True				
ANR	1039271	CallExpression	"strcpy ( config_block . typePath , ufst_root_dir )"		1039239	0					
ANR	1039272	Callee	strcpy		1039239	0					
ANR	1039273	Identifier	strcpy		1039239	0					
ANR	1039274	ArgumentList	config_block . typePath		1039239	1					
ANR	1039275	Argument	config_block . typePath		1039239	0					
ANR	1039276	MemberAccess	config_block . typePath		1039239	0					
ANR	1039277	Identifier	config_block		1039239	0					
ANR	1039278	Identifier	typePath		1039239	1					
ANR	1039279	Argument	ufst_root_dir		1039239	1					
ANR	1039280	Identifier	ufst_root_dir		1039239	0					
ANR	1039281	ExpressionStatement	config_block . num_files = MAX_OPEN_LIBRARIES	381:4:8309:8352	1039239	6	True				
ANR	1039282	AssignmentExpression	config_block . num_files = MAX_OPEN_LIBRARIES		1039239	0		=			
ANR	1039283	MemberAccess	config_block . num_files		1039239	0					
ANR	1039284	Identifier	config_block		1039239	0					
ANR	1039285	Identifier	num_files		1039239	1					
ANR	1039286	Identifier	MAX_OPEN_LIBRARIES		1039239	1					
ANR	1039287	ExpressionStatement	config_block . bit_map_width = BITMAP_WIDTH	382:4:8394:8435	1039239	7	True				
ANR	1039288	AssignmentExpression	config_block . bit_map_width = BITMAP_WIDTH		1039239	0		=			
ANR	1039289	MemberAccess	config_block . bit_map_width		1039239	0					
ANR	1039290	Identifier	config_block		1039239	0					
ANR	1039291	Identifier	bit_map_width		1039239	1					
ANR	1039292	Identifier	BITMAP_WIDTH		1039239	1					
ANR	1039293	ExpressionStatement	config_block . typePath [ 0 ] = 0	386:4:8613:8641	1039239	8	True				
ANR	1039294	AssignmentExpression	config_block . typePath [ 0 ] = 0		1039239	0		=			
ANR	1039295	ArrayIndexing	config_block . typePath [ 0 ]		1039239	0					
ANR	1039296	MemberAccess	config_block . typePath		1039239	0					
ANR	1039297	Identifier	config_block		1039239	0					
ANR	1039298	Identifier	typePath		1039239	1					
ANR	1039299	PrimaryExpression	0		1039239	1					
ANR	1039300	PrimaryExpression	0		1039239	1					
ANR	1039301	IfStatement	if ( ( status = CGIFinit ( FSA0 ) ) != 0 )		1039239	9					
ANR	1039302	Condition	( status = CGIFinit ( FSA0 ) ) != 0	388:8:8652:8681	1039239	0	True				
ANR	1039303	EqualityExpression	( status = CGIFinit ( FSA0 ) ) != 0		1039239	0		!=			
ANR	1039304	AssignmentExpression	status = CGIFinit ( FSA0 )		1039239	0		=			
ANR	1039305	Identifier	status		1039239	0					
ANR	1039306	CallExpression	CGIFinit ( FSA0 )		1039239	1					
ANR	1039307	Callee	CGIFinit		1039239	0					
ANR	1039308	Identifier	CGIFinit		1039239	0					
ANR	1039309	ArgumentList	FSA0		1039239	1					
ANR	1039310	Argument	FSA0		1039239	0					
ANR	1039311	Identifier	FSA0		1039239	0					
ANR	1039312	PrimaryExpression	0		1039239	1					
ANR	1039313	CompoundStatement		19:40:617:617	1039239	1					
ANR	1039314	ExpressionStatement	"dmprintf1 ( mem , ""CGIFinit() error: %d\\n"" , status )"	389:8:8694:8742	1039239	0	True				
ANR	1039315	CallExpression	"dmprintf1 ( mem , ""CGIFinit() error: %d\\n"" , status )"		1039239	0					
ANR	1039316	Callee	dmprintf1		1039239	0					
ANR	1039317	Identifier	dmprintf1		1039239	0					
ANR	1039318	ArgumentList	mem		1039239	1					
ANR	1039319	Argument	mem		1039239	0					
ANR	1039320	Identifier	mem		1039239	0					
ANR	1039321	Argument	"""CGIFinit() error: %d\\n"""		1039239	1					
ANR	1039322	PrimaryExpression	"""CGIFinit() error: %d\\n"""		1039239	0					
ANR	1039323	Argument	status		1039239	2					
ANR	1039324	Identifier	status		1039239	0					
ANR	1039325	ExpressionStatement	gs_mem_ctx = NULL	390:8:8752:8769	1039239	1	True				
ANR	1039326	AssignmentExpression	gs_mem_ctx = NULL		1039239	0		=			
ANR	1039327	Identifier	gs_mem_ctx		1039239	0					
ANR	1039328	Identifier	NULL		1039239	1					
ANR	1039329	ReturnStatement	return status ;	391:8:8779:8792	1039239	2	True				
ANR	1039330	Identifier	status		1039239	0					
ANR	1039331	IfStatement	if ( ( status = CGIFconfig ( FSA & config_block ) ) != 0 )		1039239	10					
ANR	1039332	Condition	( status = CGIFconfig ( FSA & config_block ) ) != 0	393:8:8808:8852	1039239	0	True				
ANR	1039333	EqualityExpression	( status = CGIFconfig ( FSA & config_block ) ) != 0		1039239	0		!=			
ANR	1039334	AssignmentExpression	status = CGIFconfig ( FSA & config_block )		1039239	0		=			
ANR	1039335	Identifier	status		1039239	0					
ANR	1039336	CallExpression	CGIFconfig ( FSA & config_block )		1039239	1					
ANR	1039337	Callee	CGIFconfig		1039239	0					
ANR	1039338	Identifier	CGIFconfig		1039239	0					
ANR	1039339	ArgumentList	FSA & config_block		1039239	1					
ANR	1039340	Argument	FSA & config_block		1039239	0					
ANR	1039341	BitAndExpression	FSA & config_block		1039239	0		&			
ANR	1039342	Identifier	FSA		1039239	0					
ANR	1039343	Identifier	config_block		1039239	1					
ANR	1039344	PrimaryExpression	0		1039239	1					
ANR	1039345	CompoundStatement		24:55:788:788	1039239	1					
ANR	1039346	ExpressionStatement	"dmprintf1 ( mem , ""CGIFconfig() error: %d\\n"" , status )"	394:8:8865:8915	1039239	0	True				
ANR	1039347	CallExpression	"dmprintf1 ( mem , ""CGIFconfig() error: %d\\n"" , status )"		1039239	0					
ANR	1039348	Callee	dmprintf1		1039239	0					
ANR	1039349	Identifier	dmprintf1		1039239	0					
ANR	1039350	ArgumentList	mem		1039239	1					
ANR	1039351	Argument	mem		1039239	0					
ANR	1039352	Identifier	mem		1039239	0					
ANR	1039353	Argument	"""CGIFconfig() error: %d\\n"""		1039239	1					
ANR	1039354	PrimaryExpression	"""CGIFconfig() error: %d\\n"""		1039239	0					
ANR	1039355	Argument	status		1039239	2					
ANR	1039356	Identifier	status		1039239	0					
ANR	1039357	ExpressionStatement	gs_mem_ctx = NULL	395:8:8925:8942	1039239	1	True				
ANR	1039358	AssignmentExpression	gs_mem_ctx = NULL		1039239	0		=			
ANR	1039359	Identifier	gs_mem_ctx		1039239	0					
ANR	1039360	Identifier	NULL		1039239	1					
ANR	1039361	ReturnStatement	return status ;	396:8:8952:8965	1039239	2	True				
ANR	1039362	Identifier	status		1039239	0					
ANR	1039363	Statement	CGIFfont_access	398:4:8977:8991	1039239	11	True				
ANR	1039364	Statement	(	398:19:8992:8992	1039239	12	True				
ANR	1039365	Statement	FSA	398:20:8993:8995	1039239	13	True				
ANR	1039366	Statement	DISK_ACCESS	398:24:8997:9007	1039239	14	True				
ANR	1039367	Statement	)	398:35:9008:9008	1039239	15	True				
ANR	1039368	ExpressionStatement		398:36:9009:9009	1039239	16	True				
ANR	1039369	IfStatement	if ( ( status = CGIFenter ( FSA0 ) ) != 0 )		1039239	17					
ANR	1039370	Condition	( status = CGIFenter ( FSA0 ) ) != 0	399:8:9019:9049	1039239	0	True				
ANR	1039371	EqualityExpression	( status = CGIFenter ( FSA0 ) ) != 0		1039239	0		!=			
ANR	1039372	AssignmentExpression	status = CGIFenter ( FSA0 )		1039239	0		=			
ANR	1039373	Identifier	status		1039239	0					
ANR	1039374	CallExpression	CGIFenter ( FSA0 )		1039239	1					
ANR	1039375	Callee	CGIFenter		1039239	0					
ANR	1039376	Identifier	CGIFenter		1039239	0					
ANR	1039377	ArgumentList	FSA0		1039239	1					
ANR	1039378	Argument	FSA0		1039239	0					
ANR	1039379	Identifier	FSA0		1039239	0					
ANR	1039380	PrimaryExpression	0		1039239	1					
ANR	1039381	CompoundStatement		30:41:985:985	1039239	1					
ANR	1039382	ExpressionStatement	"dmprintf1 ( mem , ""CGIFenter() error: %u\\n"" , status )"	400:8:9062:9110	1039239	0	True				
ANR	1039383	CallExpression	"dmprintf1 ( mem , ""CGIFenter() error: %u\\n"" , status )"		1039239	0					
ANR	1039384	Callee	dmprintf1		1039239	0					
ANR	1039385	Identifier	dmprintf1		1039239	0					
ANR	1039386	ArgumentList	mem		1039239	1					
ANR	1039387	Argument	mem		1039239	0					
ANR	1039388	Identifier	mem		1039239	0					
ANR	1039389	Argument	"""CGIFenter() error: %u\\n"""		1039239	1					
ANR	1039390	PrimaryExpression	"""CGIFenter() error: %u\\n"""		1039239	0					
ANR	1039391	Argument	status		1039239	2					
ANR	1039392	Identifier	status		1039239	0					
ANR	1039393	ExpressionStatement	gs_mem_ctx = NULL	401:8:9120:9137	1039239	1	True				
ANR	1039394	AssignmentExpression	gs_mem_ctx = NULL		1039239	0		=			
ANR	1039395	Identifier	gs_mem_ctx		1039239	0					
ANR	1039396	Identifier	NULL		1039239	1					
ANR	1039397	ReturnStatement	return status ;	402:8:9147:9160	1039239	2	True				
ANR	1039398	Identifier	status		1039239	0					
ANR	1039399	ExpressionStatement	ufst_initialized = TRUE	405:4:9192:9215	1039239	18	True				
ANR	1039400	AssignmentExpression	ufst_initialized = TRUE		1039239	0		=			
ANR	1039401	Identifier	ufst_initialized		1039239	0					
ANR	1039402	Identifier	TRUE		1039239	1					
ANR	1039403	ReturnStatement	return 1 ;	407:4:9228:9236	1039239	19	True				
ANR	1039404	PrimaryExpression	1		1039239	0					
ANR	1039405	ReturnType	int		1039239	1					
ANR	1039406	Identifier	gx_UFST_init		1039239	2					
ANR	1039407	ParameterList	"gs_memory_t * mem , const UB8 * ufst_root_dir"		1039239	3					
ANR	1039408	Parameter	gs_memory_t * mem	369:13:8020:8036	1039239	0	True				
ANR	1039409	ParameterType	gs_memory_t *		1039239	0					
ANR	1039410	Identifier	mem		1039239	1					
ANR	1039411	Parameter	const UB8 * ufst_root_dir	369:32:8039:8063	1039239	1	True				
ANR	1039412	ParameterType	const UB8 *		1039239	0					
ANR	1039413	Identifier	ufst_root_dir		1039239	1					
ANR	1039414	CFGEntryNode	ENTRY		1039239		True				
ANR	1039415	CFGExitNode	EXIT		1039239		True				
ANR	1039416	Symbol	config_block . ufstPath		1039239						
ANR	1039417	Symbol	* config_block		1039239						
ANR	1039418	Symbol	NULL		1039239						
ANR	1039419	Symbol	config_block . bit_map_width		1039239						
ANR	1039420	Symbol	TRUE		1039239						
ANR	1039421	Symbol	gs_mem_ctx		1039239						
ANR	1039422	Symbol	MAX_OPEN_LIBRARIES		1039239						
ANR	1039423	Symbol	CGIFenter		1039239						
ANR	1039424	Symbol	BITMAP_WIDTH		1039239						
ANR	1039425	Symbol	config_block		1039239						
ANR	1039426	Symbol	config_block . num_files		1039239						
ANR	1039427	Symbol	mem		1039239						
ANR	1039428	Symbol	FSA		1039239						
ANR	1039429	Symbol	ufst_initialized		1039239						
ANR	1039430	Symbol	* config_block . typePath		1039239						
ANR	1039431	Symbol	CGIFinit		1039239						
ANR	1039432	Symbol	ufst_root_dir		1039239						
ANR	1039433	Symbol	FSA0		1039239						
ANR	1039434	Symbol	config_block . typePath		1039239						
ANR	1039435	Symbol	status		1039239						
ANR	1039436	Symbol	CGIFconfig		1039239						
ANR	1039437	Function	gx_UFST_fini	410:0:9319:9458							
ANR	1039438	FunctionDef	gx_UFST_fini ()		1039437	0					
ANR	1039439	CompoundStatement		412:0:9342:9458	1039437	0					
ANR	1039440	ExpressionStatement	CGIFexit ( FSA0 )	413:4:9348:9362	1039437	0	True				
ANR	1039441	CallExpression	CGIFexit ( FSA0 )		1039437	0					
ANR	1039442	Callee	CGIFexit		1039437	0					
ANR	1039443	Identifier	CGIFexit		1039437	0					
ANR	1039444	ArgumentList	FSA0		1039437	1					
ANR	1039445	Argument	FSA0		1039437	0					
ANR	1039446	Identifier	FSA0		1039437	0					
ANR	1039447	ExpressionStatement	ufst_initialized = FALSE	415:4:9388:9412	1039437	1	True				
ANR	1039448	AssignmentExpression	ufst_initialized = FALSE		1039437	0		=			
ANR	1039449	Identifier	ufst_initialized		1039437	0					
ANR	1039450	Identifier	FALSE		1039437	1					
ANR	1039451	ExpressionStatement	gs_mem_ctx = NULL	416:4:9418:9435	1039437	2	True				
ANR	1039452	AssignmentExpression	gs_mem_ctx = NULL		1039437	0		=			
ANR	1039453	Identifier	gs_mem_ctx		1039437	0					
ANR	1039454	Identifier	NULL		1039437	1					
ANR	1039455	ReturnStatement	return 0 ;	418:4:9448:9456	1039437	3	True				
ANR	1039456	PrimaryExpression	0		1039437	0					
ANR	1039457	ReturnType	int		1039437	1					
ANR	1039458	Identifier	gx_UFST_fini		1039437	2					
ANR	1039459	ParameterList			1039437	3					
ANR	1039460	CFGEntryNode	ENTRY		1039437		True				
ANR	1039461	CFGExitNode	EXIT		1039437		True				
ANR	1039462	Symbol	NULL		1039437						
ANR	1039463	Symbol	ufst_initialized		1039437						
ANR	1039464	Symbol	FALSE		1039437						
ANR	1039465	Symbol	FSA0		1039437						
ANR	1039466	Symbol	gs_mem_ctx		1039437						
ANR	1039467	Function	gx_UFST_find_static_fco	423:0:9534:9810							
ANR	1039468	FunctionDef	gx_UFST_find_static_fco (const char * font_file_path)		1039467	0					
ANR	1039469	CompoundStatement		425:0:9602:9810	1039467	0					
ANR	1039470	IdentifierDeclStatement	int i ;	427:4:9628:9633	1039467	0	True				
ANR	1039471	IdentifierDecl	i		1039467	0					
ANR	1039472	IdentifierDeclType	int		1039467	0					
ANR	1039473	Identifier	i		1039467	1					
ANR	1039474	ForStatement	for ( i = 0 ; i < static_fco_count ; i ++ )		1039467	1					
ANR	1039475	ForInit	i = 0 ;	429:9:9645:9650	1039467	0	True				
ANR	1039476	AssignmentExpression	i = 0		1039467	0		=			
ANR	1039477	Identifier	i		1039467	0					
ANR	1039478	PrimaryExpression	0		1039467	1					
ANR	1039479	Condition	i < static_fco_count	429:16:9652:9671	1039467	1	True				
ANR	1039480	RelationalExpression	i < static_fco_count		1039467	0		<			
ANR	1039481	Identifier	i		1039467	0					
ANR	1039482	Identifier	static_fco_count		1039467	1					
ANR	1039483	PostIncDecOperationExpression	i ++	429:38:9674:9676	1039467	2	True				
ANR	1039484	Identifier	i		1039467	0					
ANR	1039485	IncDec	++		1039467	1					
ANR	1039486	IfStatement	"if ( ! strcmp ( static_fco_list [ i ] . file_path , font_file_path ) )"		1039467	3					
ANR	1039487	Condition	"! strcmp ( static_fco_list [ i ] . file_path , font_file_path )"	430:12:9691:9743	1039467	0	True				
ANR	1039488	UnaryOperationExpression	"! strcmp ( static_fco_list [ i ] . file_path , font_file_path )"		1039467	0					
ANR	1039489	UnaryOperator	!		1039467	0					
ANR	1039490	CallExpression	"strcmp ( static_fco_list [ i ] . file_path , font_file_path )"		1039467	1					
ANR	1039491	Callee	strcmp		1039467	0					
ANR	1039492	Identifier	strcmp		1039467	0					
ANR	1039493	ArgumentList	static_fco_list [ i ] . file_path		1039467	1					
ANR	1039494	Argument	static_fco_list [ i ] . file_path		1039467	0					
ANR	1039495	MemberAccess	static_fco_list [ i ] . file_path		1039467	0					
ANR	1039496	ArrayIndexing	static_fco_list [ i ]		1039467	0					
ANR	1039497	Identifier	static_fco_list		1039467	0					
ANR	1039498	Identifier	i		1039467	1					
ANR	1039499	Identifier	file_path		1039467	1					
ANR	1039500	Argument	font_file_path		1039467	1					
ANR	1039501	Identifier	font_file_path		1039467	0					
ANR	1039502	ReturnStatement	return & static_fco_list [ i ] ;	431:12:9758:9784	1039467	1	True				
ANR	1039503	UnaryOperationExpression	& static_fco_list [ i ]		1039467	0					
ANR	1039504	UnaryOperator	&		1039467	0					
ANR	1039505	ArrayIndexing	static_fco_list [ i ]		1039467	1					
ANR	1039506	Identifier	static_fco_list		1039467	0					
ANR	1039507	Identifier	i		1039467	1					
ANR	1039508	ReturnStatement	return NULL ;	433:4:9797:9808	1039467	2	True				
ANR	1039509	Identifier	NULL		1039467	0					
ANR	1039510	ReturnType	fco_list_elem *		1039467	1					
ANR	1039511	Identifier	gx_UFST_find_static_fco		1039467	2					
ANR	1039512	ParameterList	const char * font_file_path		1039467	3					
ANR	1039513	Parameter	const char * font_file_path	424:24:9574:9599	1039467	0	True				
ANR	1039514	ParameterType	const char *		1039467	0					
ANR	1039515	Identifier	font_file_path		1039467	1					
ANR	1039516	CFGEntryNode	ENTRY		1039467		True				
ANR	1039517	CFGExitNode	EXIT		1039467		True				
ANR	1039518	Symbol	strcmp		1039467						
ANR	1039519	Symbol	* i		1039467						
ANR	1039520	Symbol	NULL		1039467						
ANR	1039521	Symbol	font_file_path		1039467						
ANR	1039522	Symbol	* static_fco_list		1039467						
ANR	1039523	Symbol	i		1039467						
ANR	1039524	Symbol	static_fco_list		1039467						
ANR	1039525	Symbol	static_fco_count		1039467						
ANR	1039526	Symbol	static_fco_list [ i ] . file_path		1039467						
ANR	1039527	Function	gx_UFST_find_static_fco_handle	436:0:9813:10069							
ANR	1039528	FunctionDef	gx_UFST_find_static_fco_handle (SW16 fcHandle)		1039527	0					
ANR	1039529	CompoundStatement		438:0:9875:10069	1039527	0					
ANR	1039530	IdentifierDeclStatement	int i ;	440:4:9901:9906	1039527	0	True				
ANR	1039531	IdentifierDecl	i		1039527	0					
ANR	1039532	IdentifierDeclType	int		1039527	0					
ANR	1039533	Identifier	i		1039527	1					
ANR	1039534	ForStatement	for ( i = 0 ; i < static_fco_count ; i ++ )		1039527	1					
ANR	1039535	ForInit	i = 0 ;	442:9:9918:9923	1039527	0	True				
ANR	1039536	AssignmentExpression	i = 0		1039527	0		=			
ANR	1039537	Identifier	i		1039527	0					
ANR	1039538	PrimaryExpression	0		1039527	1					
ANR	1039539	Condition	i < static_fco_count	442:16:9925:9944	1039527	1	True				
ANR	1039540	RelationalExpression	i < static_fco_count		1039527	0		<			
ANR	1039541	Identifier	i		1039527	0					
ANR	1039542	Identifier	static_fco_count		1039527	1					
ANR	1039543	PostIncDecOperationExpression	i ++	442:38:9947:9949	1039527	2	True				
ANR	1039544	Identifier	i		1039527	0					
ANR	1039545	IncDec	++		1039527	1					
ANR	1039546	IfStatement	if ( static_fco_list [ i ] . fcHandle == fcHandle )		1039527	3					
ANR	1039547	Condition	static_fco_list [ i ] . fcHandle == fcHandle	443:12:9964:10002	1039527	0	True				
ANR	1039548	EqualityExpression	static_fco_list [ i ] . fcHandle == fcHandle		1039527	0		==			
ANR	1039549	MemberAccess	static_fco_list [ i ] . fcHandle		1039527	0					
ANR	1039550	ArrayIndexing	static_fco_list [ i ]		1039527	0					
ANR	1039551	Identifier	static_fco_list		1039527	0					
ANR	1039552	Identifier	i		1039527	1					
ANR	1039553	Identifier	fcHandle		1039527	1					
ANR	1039554	Identifier	fcHandle		1039527	1					
ANR	1039555	ReturnStatement	return & static_fco_list [ i ] ;	444:12:10017:10043	1039527	1	True				
ANR	1039556	UnaryOperationExpression	& static_fco_list [ i ]		1039527	0					
ANR	1039557	UnaryOperator	&		1039527	0					
ANR	1039558	ArrayIndexing	static_fco_list [ i ]		1039527	1					
ANR	1039559	Identifier	static_fco_list		1039527	0					
ANR	1039560	Identifier	i		1039527	1					
ANR	1039561	ReturnStatement	return NULL ;	446:4:10056:10067	1039527	2	True				
ANR	1039562	Identifier	NULL		1039527	0					
ANR	1039563	ReturnType	fco_list_elem *		1039527	1					
ANR	1039564	Identifier	gx_UFST_find_static_fco_handle		1039527	2					
ANR	1039565	ParameterList	SW16 fcHandle		1039527	3					
ANR	1039566	Parameter	SW16 fcHandle	437:31:9860:9872	1039527	0	True				
ANR	1039567	ParameterType	SW16		1039527	0					
ANR	1039568	Identifier	fcHandle		1039527	1					
ANR	1039569	CFGEntryNode	ENTRY		1039527		True				
ANR	1039570	CFGExitNode	EXIT		1039527		True				
ANR	1039571	Symbol	* i		1039527						
ANR	1039572	Symbol	NULL		1039527						
ANR	1039573	Symbol	static_fco_list [ i ] . fcHandle		1039527						
ANR	1039574	Symbol	* static_fco_list		1039527						
ANR	1039575	Symbol	i		1039527						
ANR	1039576	Symbol	static_fco_list		1039527						
ANR	1039577	Symbol	static_fco_count		1039527						
ANR	1039578	Symbol	fcHandle		1039527						
ANR	1039579	Function	gx_UFST_find_fco_handle_by_name	449:0:10072:10290							
ANR	1039580	FunctionDef	gx_UFST_find_fco_handle_by_name (const char * font_file_path)		1039579	0					
ANR	1039581	CompoundStatement		451:0:10137:10290	1039579	0					
ANR	1039582	IdentifierDeclStatement	fco_list_elem * fco = gx_UFST_find_static_fco ( font_file_path ) ;	453:4:10163:10223	1039579	0	True				
ANR	1039583	IdentifierDecl	* fco = gx_UFST_find_static_fco ( font_file_path )		1039579	0					
ANR	1039584	IdentifierDeclType	fco_list_elem *		1039579	0					
ANR	1039585	Identifier	fco		1039579	1					
ANR	1039586	AssignmentExpression	* fco = gx_UFST_find_static_fco ( font_file_path )		1039579	2		=			
ANR	1039587	Identifier	fco		1039579	0					
ANR	1039588	CallExpression	gx_UFST_find_static_fco ( font_file_path )		1039579	1					
ANR	1039589	Callee	gx_UFST_find_static_fco		1039579	0					
ANR	1039590	Identifier	gx_UFST_find_static_fco		1039579	0					
ANR	1039591	ArgumentList	font_file_path		1039579	1					
ANR	1039592	Argument	font_file_path		1039579	0					
ANR	1039593	Identifier	font_file_path		1039579	0					
ANR	1039594	IfStatement	if ( fco )		1039579	1					
ANR	1039595	Condition	fco	455:8:10234:10236	1039579	0	True				
ANR	1039596	Identifier	fco		1039579	0					
ANR	1039597	ReturnStatement	return fco -> fcHandle ;	456:8:10247:10267	1039579	1	True				
ANR	1039598	PtrMemberAccess	fco -> fcHandle		1039579	0					
ANR	1039599	Identifier	fco		1039579	0					
ANR	1039600	Identifier	fcHandle		1039579	1					
ANR	1039601	ReturnStatement	return 0 ;	457:4:10273:10281	1039579	2	True				
ANR	1039602	PrimaryExpression	0		1039579	0					
ANR	1039603	ReturnType	SW16		1039579	1					
ANR	1039604	Identifier	gx_UFST_find_fco_handle_by_name		1039579	2					
ANR	1039605	ParameterList	const char * font_file_path		1039579	3					
ANR	1039606	Parameter	const char * font_file_path	450:32:10109:10134	1039579	0	True				
ANR	1039607	ParameterType	const char *		1039579	0					
ANR	1039608	Identifier	font_file_path		1039579	1					
ANR	1039609	CFGEntryNode	ENTRY		1039579		True				
ANR	1039610	CFGExitNode	EXIT		1039579		True				
ANR	1039611	Symbol	gx_UFST_find_static_fco		1039579						
ANR	1039612	Symbol	fco		1039579						
ANR	1039613	Symbol	* fco		1039579						
ANR	1039614	Symbol	font_file_path		1039579						
ANR	1039615	Symbol	fco -> fcHandle		1039579						
ANR	1039616	Function	gx_UFST_open_static_fco	461:0:10293:11084							
ANR	1039617	FunctionDef	"gx_UFST_open_static_fco (const char * font_file_path , SW16 * result_fcHandle)"		1039616	0					
ANR	1039618	CompoundStatement		463:0:10374:11084	1039616	0					
ANR	1039619	IdentifierDeclStatement	SW16 fcHandle ;	465:4:10400:10413	1039616	0	True				
ANR	1039620	IdentifierDecl	fcHandle		1039616	0					
ANR	1039621	IdentifierDeclType	SW16		1039616	0					
ANR	1039622	Identifier	fcHandle		1039616	1					
ANR	1039623	IdentifierDeclStatement	UW16 code ;	466:4:10419:10428	1039616	1	True				
ANR	1039624	IdentifierDecl	code		1039616	0					
ANR	1039625	IdentifierDeclType	UW16		1039616	0					
ANR	1039626	Identifier	code		1039616	1					
ANR	1039627	IdentifierDeclStatement	fco_list_elem * e ;	467:4:10434:10450	1039616	2	True				
ANR	1039628	IdentifierDecl	* e		1039616	0					
ANR	1039629	IdentifierDeclType	fco_list_elem *		1039616	0					
ANR	1039630	Identifier	e		1039616	1					
ANR	1039631	IfStatement	if ( static_fco_count >= MAX_STATIC_FCO_COUNT )		1039616	3					
ANR	1039632	Condition	static_fco_count >= MAX_STATIC_FCO_COUNT	469:8:10461:10500	1039616	0	True				
ANR	1039633	RelationalExpression	static_fco_count >= MAX_STATIC_FCO_COUNT		1039616	0		>=			
ANR	1039634	Identifier	static_fco_count		1039616	0					
ANR	1039635	Identifier	MAX_STATIC_FCO_COUNT		1039616	1					
ANR	1039636	ReturnStatement	return ERR_fco_NoMem ;	470:8:10511:10531	1039616	1	True				
ANR	1039637	Identifier	ERR_fco_NoMem		1039616	0					
ANR	1039638	Statement	code	471:4:10537:10540	1039616	4	True				
ANR	1039639	Statement	=	471:9:10542:10542	1039616	5	True				
ANR	1039640	Statement	CGIFfco_Open	471:11:10544:10555	1039616	6	True				
ANR	1039641	Statement	(	471:23:10556:10556	1039616	7	True				
ANR	1039642	Statement	FSA	471:24:10557:10559	1039616	8	True				
ANR	1039643	Statement	(	471:27:10560:10560	1039616	9	True				
ANR	1039644	Statement	UB8	471:28:10561:10563	1039616	10	True				
ANR	1039645	Statement	*	471:32:10565:10565	1039616	11	True				
ANR	1039646	Statement	)	471:33:10566:10566	1039616	12	True				
ANR	1039647	Statement	font_file_path	471:35:10568:10581	1039616	13	True				
ANR	1039648	Statement	","	471:49:10582:10582	1039616	14	True				
ANR	1039649	Statement	&	471:51:10584:10584	1039616	15	True				
ANR	1039650	Statement	fcHandle	471:52:10585:10592	1039616	16	True				
ANR	1039651	Statement	)	471:60:10593:10593	1039616	17	True				
ANR	1039652	ExpressionStatement		471:61:10594:10594	1039616	18	True				
ANR	1039653	IfStatement	if ( code != 0 )		1039616	19					
ANR	1039654	Condition	code != 0	472:8:10604:10612	1039616	0	True				
ANR	1039655	EqualityExpression	code != 0		1039616	0		!=			
ANR	1039656	Identifier	code		1039616	0					
ANR	1039657	PrimaryExpression	0		1039616	1					
ANR	1039658	ReturnStatement	return code ;	473:8:10623:10634	1039616	1	True				
ANR	1039659	Identifier	code		1039616	0					
ANR	1039660	ExpressionStatement	e = & static_fco_list [ static_fco_count ]	474:4:10640:10678	1039616	20	True				
ANR	1039661	AssignmentExpression	e = & static_fco_list [ static_fco_count ]		1039616	0		=			
ANR	1039662	Identifier	e		1039616	0					
ANR	1039663	UnaryOperationExpression	& static_fco_list [ static_fco_count ]		1039616	1					
ANR	1039664	UnaryOperator	&		1039616	0					
ANR	1039665	ArrayIndexing	static_fco_list [ static_fco_count ]		1039616	1					
ANR	1039666	Identifier	static_fco_list		1039616	0					
ANR	1039667	Identifier	static_fco_count		1039616	1					
ANR	1039668	ExpressionStatement	"strncpy ( static_fco_paths [ static_fco_count ] , font_file_path , sizeof ( static_fco_paths [ static_fco_count ] ) )"	475:4:10684:10799	1039616	21	True				
ANR	1039669	CallExpression	"strncpy ( static_fco_paths [ static_fco_count ] , font_file_path , sizeof ( static_fco_paths [ static_fco_count ] ) )"		1039616	0					
ANR	1039670	Callee	strncpy		1039616	0					
ANR	1039671	Identifier	strncpy		1039616	0					
ANR	1039672	ArgumentList	static_fco_paths [ static_fco_count ]		1039616	1					
ANR	1039673	Argument	static_fco_paths [ static_fco_count ]		1039616	0					
ANR	1039674	ArrayIndexing	static_fco_paths [ static_fco_count ]		1039616	0					
ANR	1039675	Identifier	static_fco_paths		1039616	0					
ANR	1039676	Identifier	static_fco_count		1039616	1					
ANR	1039677	Argument	font_file_path		1039616	1					
ANR	1039678	Identifier	font_file_path		1039616	0					
ANR	1039679	Argument	sizeof ( static_fco_paths [ static_fco_count ] )		1039616	2					
ANR	1039680	SizeofExpression	sizeof ( static_fco_paths [ static_fco_count ] )		1039616	0					
ANR	1039681	Sizeof	sizeof		1039616	0					
ANR	1039682	ArrayIndexing	static_fco_paths [ static_fco_count ]		1039616	1					
ANR	1039683	Identifier	static_fco_paths		1039616	0					
ANR	1039684	Identifier	static_fco_count		1039616	1					
ANR	1039685	ExpressionStatement	e -> file_path = static_fco_paths [ static_fco_count ]	477:4:10805:10854	1039616	22	True				
ANR	1039686	AssignmentExpression	e -> file_path = static_fco_paths [ static_fco_count ]		1039616	0		=			
ANR	1039687	PtrMemberAccess	e -> file_path		1039616	0					
ANR	1039688	Identifier	e		1039616	0					
ANR	1039689	Identifier	file_path		1039616	1					
ANR	1039690	ArrayIndexing	static_fco_paths [ static_fco_count ]		1039616	1					
ANR	1039691	Identifier	static_fco_paths		1039616	0					
ANR	1039692	Identifier	static_fco_count		1039616	1					
ANR	1039693	ExpressionStatement	e -> fcHandle = fcHandle	478:4:10860:10882	1039616	23	True				
ANR	1039694	AssignmentExpression	e -> fcHandle = fcHandle		1039616	0		=			
ANR	1039695	PtrMemberAccess	e -> fcHandle		1039616	0					
ANR	1039696	Identifier	e		1039616	0					
ANR	1039697	Identifier	fcHandle		1039616	1					
ANR	1039698	Identifier	fcHandle		1039616	1					
ANR	1039699	ExpressionStatement	e -> open_count = - 1	479:4:10888:10906	1039616	24	True				
ANR	1039700	AssignmentExpression	e -> open_count = - 1		1039616	0		=			
ANR	1039701	PtrMemberAccess	e -> open_count		1039616	0					
ANR	1039702	Identifier	e		1039616	0					
ANR	1039703	Identifier	open_count		1039616	1					
ANR	1039704	UnaryOperationExpression	- 1		1039616	1					
ANR	1039705	UnaryOperator	-		1039616	0					
ANR	1039706	PrimaryExpression	1		1039616	1					
ANR	1039707	ExpressionStatement	static_fco_count ++	480:4:10950:10968	1039616	25	True				
ANR	1039708	PostIncDecOperationExpression	static_fco_count ++		1039616	0					
ANR	1039709	Identifier	static_fco_count		1039616	0					
ANR	1039710	IncDec	++		1039616	1					
ANR	1039711	ExpressionStatement	* result_fcHandle = fcHandle	481:4:10974:11001	1039616	26	True				
ANR	1039712	AssignmentExpression	* result_fcHandle = fcHandle		1039616	0		=			
ANR	1039713	UnaryOperationExpression	* result_fcHandle		1039616	0					
ANR	1039714	UnaryOperator	*		1039616	0					
ANR	1039715	Identifier	result_fcHandle		1039616	1					
ANR	1039716	Identifier	fcHandle		1039616	1					
ANR	1039717	ReturnStatement	return 0 ;	482:4:11007:11015	1039616	27	True				
ANR	1039718	PrimaryExpression	0		1039616	0					
ANR	1039719	ReturnType	UW16		1039616	1					
ANR	1039720	Identifier	gx_UFST_open_static_fco		1039616	2					
ANR	1039721	ParameterList	"const char * font_file_path , SW16 * result_fcHandle"		1039616	3					
ANR	1039722	Parameter	const char * font_file_path	462:24:10322:10347	1039616	0	True				
ANR	1039723	ParameterType	const char *		1039616	0					
ANR	1039724	Identifier	font_file_path		1039616	1					
ANR	1039725	Parameter	SW16 * result_fcHandle	462:52:10350:10371	1039616	1	True				
ANR	1039726	ParameterType	SW16 *		1039616	0					
ANR	1039727	Identifier	result_fcHandle		1039616	1					
ANR	1039728	CFGEntryNode	ENTRY		1039616		True				
ANR	1039729	CFGExitNode	EXIT		1039616		True				
ANR	1039730	Symbol	e -> fcHandle		1039616						
ANR	1039731	Symbol	e -> file_path		1039616						
ANR	1039732	Symbol	code		1039616						
ANR	1039733	Symbol	* static_fco_count		1039616						
ANR	1039734	Symbol	e		1039616						
ANR	1039735	Symbol	static_fco_count		1039616						
ANR	1039736	Symbol	ERR_fco_NoMem		1039616						
ANR	1039737	Symbol	fcHandle		1039616						
ANR	1039738	Symbol	* e		1039616						
ANR	1039739	Symbol	e -> open_count		1039616						
ANR	1039740	Symbol	MAX_STATIC_FCO_COUNT		1039616						
ANR	1039741	Symbol	* static_fco_paths		1039616						
ANR	1039742	Symbol	result_fcHandle		1039616						
ANR	1039743	Symbol	font_file_path		1039616						
ANR	1039744	Symbol	static_fco_list		1039616						
ANR	1039745	Symbol	static_fco_paths		1039616						
ANR	1039746	Symbol	* result_fcHandle		1039616						
ANR	1039747	Function	gx_UFST_close_static_fco	489:0:11087:11584							
ANR	1039748	FunctionDef	gx_UFST_close_static_fco (SW16 fcHandle)		1039747	0					
ANR	1039749	CompoundStatement		491:0:11132:11584	1039747	0					
ANR	1039750	IdentifierDeclStatement	int i ;	493:4:11158:11163	1039747	0	True				
ANR	1039751	IdentifierDecl	i		1039747	0					
ANR	1039752	IdentifierDeclType	int		1039747	0					
ANR	1039753	Identifier	i		1039747	1					
ANR	1039754	ForStatement	for ( i = 0 ; i < static_fco_count ; i ++ )		1039747	1					
ANR	1039755	ForInit	i = 0 ;	495:9:11175:11180	1039747	0	True				
ANR	1039756	AssignmentExpression	i = 0		1039747	0		=			
ANR	1039757	Identifier	i		1039747	0					
ANR	1039758	PrimaryExpression	0		1039747	1					
ANR	1039759	Condition	i < static_fco_count	495:16:11182:11201	1039747	1	True				
ANR	1039760	RelationalExpression	i < static_fco_count		1039747	0		<			
ANR	1039761	Identifier	i		1039747	0					
ANR	1039762	Identifier	static_fco_count		1039747	1					
ANR	1039763	PostIncDecOperationExpression	i ++	495:38:11204:11206	1039747	2	True				
ANR	1039764	Identifier	i		1039747	0					
ANR	1039765	IncDec	++		1039747	1					
ANR	1039766	IfStatement	if ( static_fco_list [ i ] . fcHandle == fcHandle )		1039747	3					
ANR	1039767	Condition	static_fco_list [ i ] . fcHandle == fcHandle	496:12:11221:11259	1039747	0	True				
ANR	1039768	EqualityExpression	static_fco_list [ i ] . fcHandle == fcHandle		1039747	0		==			
ANR	1039769	MemberAccess	static_fco_list [ i ] . fcHandle		1039747	0					
ANR	1039770	ArrayIndexing	static_fco_list [ i ]		1039747	0					
ANR	1039771	Identifier	static_fco_list		1039747	0					
ANR	1039772	Identifier	i		1039747	1					
ANR	1039773	Identifier	fcHandle		1039747	1					
ANR	1039774	Identifier	fcHandle		1039747	1					
ANR	1039775	BreakStatement	break ;	497:12:11274:11279	1039747	1	True				
ANR	1039776	IfStatement	if ( i >= static_fco_count )		1039747	2					
ANR	1039777	Condition	i >= static_fco_count	498:8:11289:11309	1039747	0	True				
ANR	1039778	RelationalExpression	i >= static_fco_count		1039747	0		>=			
ANR	1039779	Identifier	i		1039747	0					
ANR	1039780	Identifier	static_fco_count		1039747	1					
ANR	1039781	ReturnStatement	return ERR_fco_NoMem ;	499:8:11320:11340	1039747	1	True				
ANR	1039782	Identifier	ERR_fco_NoMem		1039747	0					
ANR	1039783	Statement	CGIFfco_Close	500:4:11346:11358	1039747	3	True				
ANR	1039784	Statement	(	500:17:11359:11359	1039747	4	True				
ANR	1039785	Statement	FSA	500:18:11360:11362	1039747	5	True				
ANR	1039786	Statement	fcHandle	500:22:11364:11371	1039747	6	True				
ANR	1039787	Statement	)	500:30:11372:11372	1039747	7	True				
ANR	1039788	ExpressionStatement		500:31:11373:11373	1039747	8	True				
ANR	1039789	ForStatement	for ( i ++ ; i < static_fco_count ; i ++ )		1039747	9					
ANR	1039790	ForInit	i ++ ;	501:9:11384:11387	1039747	0	True				
ANR	1039791	PostIncDecOperationExpression	i ++		1039747	0					
ANR	1039792	Identifier	i		1039747	0					
ANR	1039793	IncDec	++		1039747	1					
ANR	1039794	Condition	i < static_fco_count	501:14:11389:11408	1039747	1	True				
ANR	1039795	RelationalExpression	i < static_fco_count		1039747	0		<			
ANR	1039796	Identifier	i		1039747	0					
ANR	1039797	Identifier	static_fco_count		1039747	1					
ANR	1039798	PostIncDecOperationExpression	i ++	501:36:11411:11413	1039747	2	True				
ANR	1039799	Identifier	i		1039747	0					
ANR	1039800	IncDec	++		1039747	1					
ANR	1039801	CompoundStatement		11:41:283:283	1039747	3					
ANR	1039802	ExpressionStatement	static_fco_list [ i - 1 ] = static_fco_list [ i ]	502:8:11426:11469	1039747	0	True				
ANR	1039803	AssignmentExpression	static_fco_list [ i - 1 ] = static_fco_list [ i ]		1039747	0		=			
ANR	1039804	ArrayIndexing	static_fco_list [ i - 1 ]		1039747	0					
ANR	1039805	Identifier	static_fco_list		1039747	0					
ANR	1039806	AdditiveExpression	i - 1		1039747	1		-			
ANR	1039807	Identifier	i		1039747	0					
ANR	1039808	PrimaryExpression	1		1039747	1					
ANR	1039809	ArrayIndexing	static_fco_list [ i ]		1039747	1					
ANR	1039810	Identifier	static_fco_list		1039747	0					
ANR	1039811	Identifier	i		1039747	1					
ANR	1039812	ExpressionStatement	"strcpy ( static_fco_paths [ i - 1 ] , static_fco_paths [ i ] )"	503:8:11479:11531	1039747	1	True				
ANR	1039813	CallExpression	"strcpy ( static_fco_paths [ i - 1 ] , static_fco_paths [ i ] )"		1039747	0					
ANR	1039814	Callee	strcpy		1039747	0					
ANR	1039815	Identifier	strcpy		1039747	0					
ANR	1039816	ArgumentList	static_fco_paths [ i - 1 ]		1039747	1					
ANR	1039817	Argument	static_fco_paths [ i - 1 ]		1039747	0					
ANR	1039818	ArrayIndexing	static_fco_paths [ i - 1 ]		1039747	0					
ANR	1039819	Identifier	static_fco_paths		1039747	0					
ANR	1039820	AdditiveExpression	i - 1		1039747	1		-			
ANR	1039821	Identifier	i		1039747	0					
ANR	1039822	PrimaryExpression	1		1039747	1					
ANR	1039823	Argument	static_fco_paths [ i ]		1039747	1					
ANR	1039824	ArrayIndexing	static_fco_paths [ i ]		1039747	0					
ANR	1039825	Identifier	static_fco_paths		1039747	0					
ANR	1039826	Identifier	i		1039747	1					
ANR	1039827	ExpressionStatement	static_fco_count --	505:4:11543:11561	1039747	10	True				
ANR	1039828	PostIncDecOperationExpression	static_fco_count --		1039747	0					
ANR	1039829	Identifier	static_fco_count		1039747	0					
ANR	1039830	IncDec	--		1039747	1					
ANR	1039831	ReturnStatement	return 0 ;	507:4:11574:11582	1039747	11	True				
ANR	1039832	PrimaryExpression	0		1039747	0					
ANR	1039833	ReturnType	UW16		1039747	1					
ANR	1039834	Identifier	gx_UFST_close_static_fco		1039747	2					
ANR	1039835	ParameterList	SW16 fcHandle		1039747	3					
ANR	1039836	Parameter	SW16 fcHandle	490:25:11117:11129	1039747	0	True				
ANR	1039837	ParameterType	SW16		1039747	0					
ANR	1039838	Identifier	fcHandle		1039747	1					
ANR	1039839	CFGEntryNode	ENTRY		1039747		True				
ANR	1039840	CFGExitNode	EXIT		1039747		True				
ANR	1039841	Symbol	* i		1039747						
ANR	1039842	Symbol	* static_fco_paths		1039747						
ANR	1039843	Symbol	static_fco_list [ i ] . fcHandle		1039747						
ANR	1039844	Symbol	* static_fco_list		1039747						
ANR	1039845	Symbol	i		1039747						
ANR	1039846	Symbol	static_fco_list		1039747						
ANR	1039847	Symbol	static_fco_paths		1039747						
ANR	1039848	Symbol	static_fco_count		1039747						
ANR	1039849	Symbol	ERR_fco_NoMem		1039747						
ANR	1039850	Symbol	fcHandle		1039747						
ANR	1039851	Function	gx_UFST_close_static_fcos	510:0:11587:11742							
ANR	1039852	FunctionDef	gx_UFST_close_static_fcos ()		1039851	0					
ANR	1039853	CompoundStatement		512:0:11620:11742	1039851	0					
ANR	1039854	ForStatement	for ( ; static_fco_count ; )		1039851	0					
ANR	1039855	Condition	static_fco_count	514:11:11653:11668	1039851	0	True				
ANR	1039856	Identifier	static_fco_count		1039851	0					
ANR	1039857	ExpressionStatement	gx_UFST_close_static_fco ( static_fco_list [ 0 ] . fcHandle )	515:8:11680:11733	1039851	1	True				
ANR	1039858	CallExpression	gx_UFST_close_static_fco ( static_fco_list [ 0 ] . fcHandle )		1039851	0					
ANR	1039859	Callee	gx_UFST_close_static_fco		1039851	0					
ANR	1039860	Identifier	gx_UFST_close_static_fco		1039851	0					
ANR	1039861	ArgumentList	static_fco_list [ 0 ] . fcHandle		1039851	1					
ANR	1039862	Argument	static_fco_list [ 0 ] . fcHandle		1039851	0					
ANR	1039863	MemberAccess	static_fco_list [ 0 ] . fcHandle		1039851	0					
ANR	1039864	ArrayIndexing	static_fco_list [ 0 ]		1039851	0					
ANR	1039865	Identifier	static_fco_list		1039851	0					
ANR	1039866	PrimaryExpression	0		1039851	1					
ANR	1039867	Identifier	fcHandle		1039851	1					
ANR	1039868	ReturnType	void		1039851	1					
ANR	1039869	Identifier	gx_UFST_close_static_fcos		1039851	2					
ANR	1039870	ParameterList			1039851	3					
ANR	1039871	CFGEntryNode	ENTRY		1039851		True				
ANR	1039872	CFGExitNode	EXIT		1039851		True				
ANR	1039873	Symbol	* static_fco_list		1039851						
ANR	1039874	Symbol	static_fco_list		1039851						
ANR	1039875	Symbol	static_fco_count		1039851						
ANR	1039876	Symbol	static_fco_list [ 0 ] . fcHandle		1039851						
ANR	1039877	Function	BLACKPIX	525:0:11970:12025							
ANR	1039878	FunctionDef	"BLACKPIX (FSP SW16 x , SW16 y)"		1039877	0					
ANR	1039879	CompoundStatement		527:0:12011:12025	1039877	0					
ANR	1039880	ReturnStatement	return ;	528:4:12017:12023	1039877	0	True				
ANR	1039881	ReturnType	GLOBAL VOID		1039877	1					
ANR	1039882	Identifier	BLACKPIX		1039877	2					
ANR	1039883	ParameterList	"FSP SW16 x , SW16 y"		1039877	3					
ANR	1039884	Parameter	FSP SW16 x	526:9:11991:12000	1039877	0	True				
ANR	1039885	ParameterType	FSP SW16		1039877	0					
ANR	1039886	Identifier	x		1039877	1					
ANR	1039887	Parameter	SW16 y	526:21:12003:12008	1039877	1	True				
ANR	1039888	ParameterType	SW16		1039877	0					
ANR	1039889	Identifier	y		1039877	1					
ANR	1039890	CFGEntryNode	ENTRY		1039877		True				
ANR	1039891	CFGExitNode	EXIT		1039877		True				
ANR	1039892	Symbol	x		1039877						
ANR	1039893	Symbol	y		1039877						
ANR	1039894	Function	GRAYPIX	536:0:12237:12299							
ANR	1039895	FunctionDef	"GRAYPIX (FSP SW16 x , SW16 y , SW16 v)"		1039894	0					
ANR	1039896	CompoundStatement		538:0:12285:12299	1039894	0					
ANR	1039897	ReturnStatement	return ;	539:4:12291:12297	1039894	0	True				
ANR	1039898	ReturnType	GLOBAL VOID		1039894	1					
ANR	1039899	Identifier	GRAYPIX		1039894	2					
ANR	1039900	ParameterList	"FSP SW16 x , SW16 y , SW16 v"		1039894	3					
ANR	1039901	Parameter	FSP SW16 x	537:8:12257:12266	1039894	0	True				
ANR	1039902	ParameterType	FSP SW16		1039894	0					
ANR	1039903	Identifier	x		1039894	1					
ANR	1039904	Parameter	SW16 y	537:20:12269:12274	1039894	1	True				
ANR	1039905	ParameterType	SW16		1039894	0					
ANR	1039906	Identifier	y		1039894	1					
ANR	1039907	Parameter	SW16 v	537:28:12277:12282	1039894	2	True				
ANR	1039908	ParameterType	SW16		1039894	0					
ANR	1039909	Identifier	v		1039894	1					
ANR	1039910	CFGEntryNode	ENTRY		1039894		True				
ANR	1039911	CFGExitNode	EXIT		1039894		True				
ANR	1039912	Symbol	v		1039894						
ANR	1039913	Symbol	x		1039894						
ANR	1039914	Symbol	y		1039894						
