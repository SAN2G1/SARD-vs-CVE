command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9562497	File	data/converged/CVE-2018-16863_ghostpdl/stream.c								
ANR	9562498	DeclStmt									
ANR	9562499	Decl							int	int ( stream * )	s_close_disable
ANR	9562500	DeclStmt									
ANR	9562501	Decl							int	"int ( stream * , stream_cursor_write * )"	sreadbuf
ANR	9562502	DeclStmt									
ANR	9562503	Decl							int	"int ( stream * , stream_cursor_read * , bool )"	swritebuf
ANR	9562504	DeclStmt									
ANR	9562505	Decl							void	"void ( stream * , bool )"	stream_compact
ANR	9562506	DeclStmt									
ANR	9562507	Decl							byte	byte *	cbuf_old
ANR	9562508	DeclStmt									
ANR	9562509	Decl							long	long	reloc
ANR	9562510	Function	stream_finalize	76:0:2327:2912							
ANR	9562511	FunctionDef	"stream_finalize (const gs_memory_t * cmem , void * vptr)"		9562510	0					
ANR	9562512	CompoundStatement		78:0:2392:2912	9562510	0					
ANR	9562513	Statement	stream	79:4:2398:2403	9562510	0	True				
ANR	9562514	Statement	*	79:11:2405:2405	9562510	1	True				
ANR	9562515	Statement	const	79:12:2406:2410	9562510	2	True				
ANR	9562516	ExpressionStatement	st = vptr	79:18:2412:2421	9562510	3	True				
ANR	9562517	AssignmentExpression	st = vptr		9562510	0		=			
ANR	9562518	Identifier	st		9562510	0					
ANR	9562519	Identifier	vptr		9562510	1					
ANR	9562520	ExpressionStatement	( void ) cmem	80:4:2427:2437	9562510	4	True				
ANR	9562521	CastExpression	( void ) cmem		9562510	0					
ANR	9562522	CastTarget	void		9562510	0					
ANR	9562523	Identifier	cmem		9562510	1					
ANR	9562524	ExpressionStatement	"if_debug2m ( 'u' , st -> memory , ""[u]%s 0x%lx\\n"" , ( ! s_is_valid ( st ) ? ""already closed:"" : st -> is_temp ? ""is_temp set:"" : st -> file == 0 ? ""not file:"" : ""closing file:"" ) , ( ulong ) st )"	82:4:2457:2694	9562510	5	True				
ANR	9562525	CallExpression	"if_debug2m ( 'u' , st -> memory , ""[u]%s 0x%lx\\n"" , ( ! s_is_valid ( st ) ? ""already closed:"" : st -> is_temp ? ""is_temp set:"" : st -> file == 0 ? ""not file:"" : ""closing file:"" ) , ( ulong ) st )"		9562510	0					
ANR	9562526	Callee	if_debug2m		9562510	0					
ANR	9562527	Identifier	if_debug2m		9562510	0					
ANR	9562528	ArgumentList	'u'		9562510	1					
ANR	9562529	Argument	'u'		9562510	0					
ANR	9562530	PrimaryExpression	'u'		9562510	0					
ANR	9562531	Argument	st -> memory		9562510	1					
ANR	9562532	PtrMemberAccess	st -> memory		9562510	0					
ANR	9562533	Identifier	st		9562510	0					
ANR	9562534	Identifier	memory		9562510	1					
ANR	9562535	Argument	"""[u]%s 0x%lx\\n"""		9562510	2					
ANR	9562536	PrimaryExpression	"""[u]%s 0x%lx\\n"""		9562510	0					
ANR	9562537	Argument	"! s_is_valid ( st ) ? ""already closed:"" : st -> is_temp ? ""is_temp set:"" : st -> file == 0 ? ""not file:"" : ""closing file:"""		9562510	3					
ANR	9562538	ConditionalExpression	"! s_is_valid ( st ) ? ""already closed:"" : st -> is_temp ? ""is_temp set:"" : st -> file == 0 ? ""not file:"" : ""closing file:"""		9562510	0					
ANR	9562539	Condition	! s_is_valid ( st )		9562510	0					
ANR	9562540	UnaryOperationExpression	! s_is_valid ( st )		9562510	0					
ANR	9562541	UnaryOperator	!		9562510	0					
ANR	9562542	CallExpression	s_is_valid ( st )		9562510	1					
ANR	9562543	Callee	s_is_valid		9562510	0					
ANR	9562544	Identifier	s_is_valid		9562510	0					
ANR	9562545	ArgumentList	st		9562510	1					
ANR	9562546	Argument	st		9562510	0					
ANR	9562547	Identifier	st		9562510	0					
ANR	9562548	PrimaryExpression	"""already closed:"""		9562510	1					
ANR	9562549	ConditionalExpression	"st -> is_temp ? ""is_temp set:"" : st -> file == 0 ? ""not file:"" : ""closing file:"""		9562510	2					
ANR	9562550	Condition	st -> is_temp		9562510	0					
ANR	9562551	PtrMemberAccess	st -> is_temp		9562510	0					
ANR	9562552	Identifier	st		9562510	0					
ANR	9562553	Identifier	is_temp		9562510	1					
ANR	9562554	PrimaryExpression	"""is_temp set:"""		9562510	1					
ANR	9562555	ConditionalExpression	"st -> file == 0 ? ""not file:"" : ""closing file:"""		9562510	2					
ANR	9562556	Condition	st -> file == 0		9562510	0					
ANR	9562557	EqualityExpression	st -> file == 0		9562510	0		==			
ANR	9562558	PtrMemberAccess	st -> file		9562510	0					
ANR	9562559	Identifier	st		9562510	0					
ANR	9562560	Identifier	file		9562510	1					
ANR	9562561	PrimaryExpression	0		9562510	1					
ANR	9562562	PrimaryExpression	"""not file:"""		9562510	1					
ANR	9562563	PrimaryExpression	"""closing file:"""		9562510	2					
ANR	9562564	Argument	( ulong ) st		9562510	4					
ANR	9562565	CastExpression	( ulong ) st		9562510	0					
ANR	9562566	CastTarget	ulong		9562510	0					
ANR	9562567	Identifier	st		9562510	1					
ANR	9562568	IfStatement	if ( s_is_valid ( st ) && ! st -> is_temp && st -> file != 0 )		9562510	6					
ANR	9562569	Condition	s_is_valid ( st ) && ! st -> is_temp && st -> file != 0	87:8:2704:2750	9562510	0	True				
ANR	9562570	AndExpression	s_is_valid ( st ) && ! st -> is_temp && st -> file != 0		9562510	0		&&			
ANR	9562571	CallExpression	s_is_valid ( st )		9562510	0					
ANR	9562572	Callee	s_is_valid		9562510	0					
ANR	9562573	Identifier	s_is_valid		9562510	0					
ANR	9562574	ArgumentList	st		9562510	1					
ANR	9562575	Argument	st		9562510	0					
ANR	9562576	Identifier	st		9562510	0					
ANR	9562577	AndExpression	! st -> is_temp && st -> file != 0		9562510	1		&&			
ANR	9562578	UnaryOperationExpression	! st -> is_temp		9562510	0					
ANR	9562579	UnaryOperator	!		9562510	0					
ANR	9562580	PtrMemberAccess	st -> is_temp		9562510	1					
ANR	9562581	Identifier	st		9562510	0					
ANR	9562582	Identifier	is_temp		9562510	1					
ANR	9562583	EqualityExpression	st -> file != 0		9562510	1		!=			
ANR	9562584	PtrMemberAccess	st -> file		9562510	0					
ANR	9562585	Identifier	st		9562510	0					
ANR	9562586	Identifier	file		9562510	1					
ANR	9562587	PrimaryExpression	0		9562510	1					
ANR	9562588	CompoundStatement		10:57:360:360	9562510	1					
ANR	9562589	ExpressionStatement	st -> cbuf = 0	89:8:2817:2829	9562510	0	True				
ANR	9562590	AssignmentExpression	st -> cbuf = 0		9562510	0		=			
ANR	9562591	PtrMemberAccess	st -> cbuf		9562510	0					
ANR	9562592	Identifier	st		9562510	0					
ANR	9562593	Identifier	cbuf		9562510	1					
ANR	9562594	PrimaryExpression	0		9562510	1					
ANR	9562595	ExpressionStatement	st -> cbuf_string . data = 0	90:8:2839:2863	9562510	1	True				
ANR	9562596	AssignmentExpression	st -> cbuf_string . data = 0		9562510	0		=			
ANR	9562597	MemberAccess	st -> cbuf_string . data		9562510	0					
ANR	9562598	PtrMemberAccess	st -> cbuf_string		9562510	0					
ANR	9562599	Identifier	st		9562510	0					
ANR	9562600	Identifier	cbuf_string		9562510	1					
ANR	9562601	Identifier	data		9562510	1					
ANR	9562602	PrimaryExpression	0		9562510	1					
ANR	9562603	ExpressionStatement	sclose ( st )	91:8:2873:2883	9562510	2	True				
ANR	9562604	CallExpression	sclose ( st )		9562510	0					
ANR	9562605	Callee	sclose		9562510	0					
ANR	9562606	Identifier	sclose		9562510	0					
ANR	9562607	ArgumentList	st		9562510	1					
ANR	9562608	Argument	st		9562510	0					
ANR	9562609	Identifier	st		9562510	0					
ANR	9562610	ReturnType	static void		9562510	1					
ANR	9562611	Identifier	stream_finalize		9562510	2					
ANR	9562612	ParameterList	"const gs_memory_t * cmem , void * vptr"		9562510	3					
ANR	9562613	Parameter	const gs_memory_t * cmem	77:16:2355:2377	9562510	0	True				
ANR	9562614	ParameterType	const gs_memory_t *		9562510	0					
ANR	9562615	Identifier	cmem		9562510	1					
ANR	9562616	Parameter	void * vptr	77:41:2380:2389	9562510	1	True				
ANR	9562617	ParameterType	void *		9562510	0					
ANR	9562618	Identifier	vptr		9562510	1					
ANR	9562619	CFGEntryNode	ENTRY		9562510		True				
ANR	9562620	CFGExitNode	EXIT		9562510		True				
ANR	9562621	Symbol	s_is_valid		9562510						
ANR	9562622	Symbol	st		9562510						
ANR	9562623	Symbol	st -> file		9562510						
ANR	9562624	Symbol	st -> cbuf_string		9562510						
ANR	9562625	Symbol	* st		9562510						
ANR	9562626	Symbol	st -> is_temp		9562510						
ANR	9562627	Symbol	st -> memory		9562510						
ANR	9562628	Symbol	st -> cbuf_string . data		9562510						
ANR	9562629	Symbol	cmem		9562510						
ANR	9562630	Symbol	st -> cbuf		9562510						
ANR	9562631	Symbol	vptr		9562510						
ANR	9562632	DeclStmt									
ANR	9562633	Decl							const stream_template	const stream_template	s_no_template
ANR	9562634	Function	s_init	103:0:3162:3512							
ANR	9562635	FunctionDef	"s_init (stream * s , gs_memory_t * mem)"		9562634	0					
ANR	9562636	CompoundStatement		105:0:3204:3512	9562634	0					
ANR	9562637	ExpressionStatement	s -> memory = mem	106:4:3210:3225	9562634	0	True				
ANR	9562638	AssignmentExpression	s -> memory = mem		9562634	0		=			
ANR	9562639	PtrMemberAccess	s -> memory		9562634	0					
ANR	9562640	Identifier	s		9562634	0					
ANR	9562641	Identifier	memory		9562634	1					
ANR	9562642	Identifier	mem		9562634	1					
ANR	9562643	ExpressionStatement	s -> report_error = s_no_report_error	107:4:3231:3266	9562634	1	True				
ANR	9562644	AssignmentExpression	s -> report_error = s_no_report_error		9562634	0		=			
ANR	9562645	PtrMemberAccess	s -> report_error		9562634	0					
ANR	9562646	Identifier	s		9562634	0					
ANR	9562647	Identifier	report_error		9562634	1					
ANR	9562648	Identifier	s_no_report_error		9562634	1					
ANR	9562649	ExpressionStatement	s -> min_left = 0	108:4:3272:3287	9562634	2	True				
ANR	9562650	AssignmentExpression	s -> min_left = 0		9562634	0		=			
ANR	9562651	PtrMemberAccess	s -> min_left		9562634	0					
ANR	9562652	Identifier	s		9562634	0					
ANR	9562653	Identifier	min_left		9562634	1					
ANR	9562654	PrimaryExpression	0		9562634	1					
ANR	9562655	ExpressionStatement	s -> error_string [ 0 ] = 0	109:4:3293:3315	9562634	3	True				
ANR	9562656	AssignmentExpression	s -> error_string [ 0 ] = 0		9562634	0		=			
ANR	9562657	ArrayIndexing	s -> error_string [ 0 ]		9562634	0					
ANR	9562658	PtrMemberAccess	s -> error_string		9562634	0					
ANR	9562659	Identifier	s		9562634	0					
ANR	9562660	Identifier	error_string		9562634	1					
ANR	9562661	PrimaryExpression	0		9562634	1					
ANR	9562662	PrimaryExpression	0		9562634	1					
ANR	9562663	ExpressionStatement	s -> prev = s -> next = 0	110:4:3321:3342	9562634	4	True				
ANR	9562664	AssignmentExpression	s -> prev = s -> next = 0		9562634	0		=			
ANR	9562665	PtrMemberAccess	s -> prev		9562634	0					
ANR	9562666	Identifier	s		9562634	0					
ANR	9562667	Identifier	prev		9562634	1					
ANR	9562668	AssignmentExpression	s -> next = 0		9562634	1		=			
ANR	9562669	PtrMemberAccess	s -> next		9562634	0					
ANR	9562670	Identifier	s		9562634	0					
ANR	9562671	Identifier	next		9562634	1					
ANR	9562672	PrimaryExpression	0		9562634	1					
ANR	9562673	ExpressionStatement	s -> file_name . data = 0	111:4:3367:3388	9562634	5	True				
ANR	9562674	AssignmentExpression	s -> file_name . data = 0		9562634	0		=			
ANR	9562675	MemberAccess	s -> file_name . data		9562634	0					
ANR	9562676	PtrMemberAccess	s -> file_name		9562634	0					
ANR	9562677	Identifier	s		9562634	0					
ANR	9562678	Identifier	file_name		9562634	1					
ANR	9562679	Identifier	data		9562634	1					
ANR	9562680	PrimaryExpression	0		9562634	1					
ANR	9562681	ExpressionStatement	s -> file_name . size = 0	112:4:3406:3427	9562634	6	True				
ANR	9562682	AssignmentExpression	s -> file_name . size = 0		9562634	0		=			
ANR	9562683	MemberAccess	s -> file_name . size		9562634	0					
ANR	9562684	PtrMemberAccess	s -> file_name		9562634	0					
ANR	9562685	Identifier	s		9562634	0					
ANR	9562686	Identifier	file_name		9562634	1					
ANR	9562687	Identifier	size		9562634	1					
ANR	9562688	PrimaryExpression	0		9562634	1					
ANR	9562689	ExpressionStatement	s -> close_strm = false	113:4:3433:3454	9562634	7	True				
ANR	9562690	AssignmentExpression	s -> close_strm = false		9562634	0		=			
ANR	9562691	PtrMemberAccess	s -> close_strm		9562634	0					
ANR	9562692	Identifier	s		9562634	0					
ANR	9562693	Identifier	close_strm		9562634	1					
ANR	9562694	Identifier	false		9562634	1					
ANR	9562695	ExpressionStatement	s -> close_at_eod = true	114:4:3474:3496	9562634	8	True				
ANR	9562696	AssignmentExpression	s -> close_at_eod = true		9562634	0		=			
ANR	9562697	PtrMemberAccess	s -> close_at_eod		9562634	0					
ANR	9562698	Identifier	s		9562634	0					
ANR	9562699	Identifier	close_at_eod		9562634	1					
ANR	9562700	Identifier	true		9562634	1					
ANR	9562701	ReturnType	void		9562634	1					
ANR	9562702	Identifier	s_init		9562634	2					
ANR	9562703	ParameterList	"stream * s , gs_memory_t * mem"		9562634	3					
ANR	9562704	Parameter	stream * s	104:7:3174:3182	9562634	0	True				
ANR	9562705	ParameterType	stream *		9562634	0					
ANR	9562706	Identifier	s		9562634	1					
ANR	9562707	Parameter	gs_memory_t * mem	104:18:3185:3201	9562634	1	True				
ANR	9562708	ParameterType	gs_memory_t *		9562634	0					
ANR	9562709	Identifier	mem		9562634	1					
ANR	9562710	CFGEntryNode	ENTRY		9562634		True				
ANR	9562711	CFGExitNode	EXIT		9562634		True				
ANR	9562712	Symbol	s -> close_at_eod		9562634						
ANR	9562713	Symbol	s -> memory		9562634						
ANR	9562714	Symbol	s -> error_string		9562634						
ANR	9562715	Symbol	s -> close_strm		9562634						
ANR	9562716	Symbol	false		9562634						
ANR	9562717	Symbol	* s -> error_string		9562634						
ANR	9562718	Symbol	s -> prev		9562634						
ANR	9562719	Symbol	s -> next		9562634						
ANR	9562720	Symbol	s -> report_error		9562634						
ANR	9562721	Symbol	s_no_report_error		9562634						
ANR	9562722	Symbol	s		9562634						
ANR	9562723	Symbol	mem		9562634						
ANR	9562724	Symbol	s -> file_name . size		9562634						
ANR	9562725	Symbol	* * s		9562634						
ANR	9562726	Symbol	true		9562634						
ANR	9562727	Symbol	s -> min_left		9562634						
ANR	9562728	Symbol	s -> file_name		9562634						
ANR	9562729	Symbol	s -> file_name . data		9562634						
ANR	9562730	Symbol	* s		9562634						
ANR	9562731	Function	s_alloc	116:0:3514:3812							
ANR	9562732	FunctionDef	"s_alloc (gs_memory_t * mem , client_name_t cname)"		9562731	0					
ANR	9562733	CompoundStatement		118:0:3571:3812	9562731	0					
ANR	9562734	IdentifierDeclStatement	"stream * s = gs_alloc_struct ( mem , stream , & st_stream , cname ) ;"	119:4:3577:3636	9562731	0	True				
ANR	9562735	IdentifierDecl	"* s = gs_alloc_struct ( mem , stream , & st_stream , cname )"		9562731	0					
ANR	9562736	IdentifierDeclType	stream *		9562731	0					
ANR	9562737	Identifier	s		9562731	1					
ANR	9562738	AssignmentExpression	"* s = gs_alloc_struct ( mem , stream , & st_stream , cname )"		9562731	2		=			
ANR	9562739	Identifier	s		9562731	0					
ANR	9562740	CallExpression	"gs_alloc_struct ( mem , stream , & st_stream , cname )"		9562731	1					
ANR	9562741	Callee	gs_alloc_struct		9562731	0					
ANR	9562742	Identifier	gs_alloc_struct		9562731	0					
ANR	9562743	ArgumentList	mem		9562731	1					
ANR	9562744	Argument	mem		9562731	0					
ANR	9562745	Identifier	mem		9562731	0					
ANR	9562746	Argument	stream		9562731	1					
ANR	9562747	Identifier	stream		9562731	0					
ANR	9562748	Argument	& st_stream		9562731	2					
ANR	9562749	UnaryOperationExpression	& st_stream		9562731	0					
ANR	9562750	UnaryOperator	&		9562731	0					
ANR	9562751	Identifier	st_stream		9562731	1					
ANR	9562752	Argument	cname		9562731	3					
ANR	9562753	Identifier	cname		9562731	0					
ANR	9562754	ExpressionStatement	"if_debug2m ( 's' , mem , ""[s]alloc(%s) = 0x%lx\\n"" , client_name_string ( cname ) , ( ulong ) s )"	121:4:3643:3742	9562731	1	True				
ANR	9562755	CallExpression	"if_debug2m ( 's' , mem , ""[s]alloc(%s) = 0x%lx\\n"" , client_name_string ( cname ) , ( ulong ) s )"		9562731	0					
ANR	9562756	Callee	if_debug2m		9562731	0					
ANR	9562757	Identifier	if_debug2m		9562731	0					
ANR	9562758	ArgumentList	's'		9562731	1					
ANR	9562759	Argument	's'		9562731	0					
ANR	9562760	PrimaryExpression	's'		9562731	0					
ANR	9562761	Argument	mem		9562731	1					
ANR	9562762	Identifier	mem		9562731	0					
ANR	9562763	Argument	"""[s]alloc(%s) = 0x%lx\\n"""		9562731	2					
ANR	9562764	PrimaryExpression	"""[s]alloc(%s) = 0x%lx\\n"""		9562731	0					
ANR	9562765	Argument	client_name_string ( cname )		9562731	3					
ANR	9562766	CallExpression	client_name_string ( cname )		9562731	0					
ANR	9562767	Callee	client_name_string		9562731	0					
ANR	9562768	Identifier	client_name_string		9562731	0					
ANR	9562769	ArgumentList	cname		9562731	1					
ANR	9562770	Argument	cname		9562731	0					
ANR	9562771	Identifier	cname		9562731	0					
ANR	9562772	Argument	( ulong ) s		9562731	4					
ANR	9562773	CastExpression	( ulong ) s		9562731	0					
ANR	9562774	CastTarget	ulong		9562731	0					
ANR	9562775	Identifier	s		9562731	1					
ANR	9562776	IfStatement	if ( s == 0 )		9562731	2					
ANR	9562777	Condition	s == 0	123:8:3752:3757	9562731	0	True				
ANR	9562778	EqualityExpression	s == 0		9562731	0		==			
ANR	9562779	Identifier	s		9562731	0					
ANR	9562780	PrimaryExpression	0		9562731	1					
ANR	9562781	ReturnStatement	return 0 ;	124:8:3768:3776	9562731	1	True				
ANR	9562782	PrimaryExpression	0		9562731	0					
ANR	9562783	ExpressionStatement	"s_init ( s , mem )"	125:4:3782:3796	9562731	3	True				
ANR	9562784	CallExpression	"s_init ( s , mem )"		9562731	0					
ANR	9562785	Callee	s_init		9562731	0					
ANR	9562786	Identifier	s_init		9562731	0					
ANR	9562787	ArgumentList	s		9562731	1					
ANR	9562788	Argument	s		9562731	0					
ANR	9562789	Identifier	s		9562731	0					
ANR	9562790	Argument	mem		9562731	1					
ANR	9562791	Identifier	mem		9562731	0					
ANR	9562792	ReturnStatement	return s ;	126:4:3802:3810	9562731	4	True				
ANR	9562793	Identifier	s		9562731	0					
ANR	9562794	ReturnType	stream *		9562731	1					
ANR	9562795	Identifier	s_alloc		9562731	2					
ANR	9562796	ParameterList	"gs_memory_t * mem , client_name_t cname"		9562731	3					
ANR	9562797	Parameter	gs_memory_t * mem	117:8:3531:3547	9562731	0	True				
ANR	9562798	ParameterType	gs_memory_t *		9562731	0					
ANR	9562799	Identifier	mem		9562731	1					
ANR	9562800	Parameter	client_name_t cname	117:27:3550:3568	9562731	1	True				
ANR	9562801	ParameterType	client_name_t		9562731	0					
ANR	9562802	Identifier	cname		9562731	1					
ANR	9562803	CFGEntryNode	ENTRY		9562731		True				
ANR	9562804	CFGExitNode	EXIT		9562731		True				
ANR	9562805	Symbol	s		9562731						
ANR	9562806	Symbol	mem		9562731						
ANR	9562807	Symbol	stream		9562731						
ANR	9562808	Symbol	gs_alloc_struct		9562731						
ANR	9562809	Symbol	cname		9562731						
ANR	9562810	Symbol	& st_stream		9562731						
ANR	9562811	Symbol	client_name_string		9562731						
ANR	9562812	Function	s_init_state	130:0:3874:4117							
ANR	9562813	FunctionDef	"s_init_state (stream_state * st , const stream_template * templat , gs_memory_t * mem)"		9562812	0					
ANR	9562814	CompoundStatement		133:0:3973:4117	9562812	0					
ANR	9562815	ExpressionStatement	st -> templat = templat	134:4:3979:4000	9562812	0	True				
ANR	9562816	AssignmentExpression	st -> templat = templat		9562812	0		=			
ANR	9562817	PtrMemberAccess	st -> templat		9562812	0					
ANR	9562818	Identifier	st		9562812	0					
ANR	9562819	Identifier	templat		9562812	1					
ANR	9562820	Identifier	templat		9562812	1					
ANR	9562821	ExpressionStatement	st -> memory = mem	135:4:4006:4022	9562812	1	True				
ANR	9562822	AssignmentExpression	st -> memory = mem		9562812	0		=			
ANR	9562823	PtrMemberAccess	st -> memory		9562812	0					
ANR	9562824	Identifier	st		9562812	0					
ANR	9562825	Identifier	memory		9562812	1					
ANR	9562826	Identifier	mem		9562812	1					
ANR	9562827	ExpressionStatement	st -> report_error = s_no_report_error	136:4:4028:4064	9562812	2	True				
ANR	9562828	AssignmentExpression	st -> report_error = s_no_report_error		9562812	0		=			
ANR	9562829	PtrMemberAccess	st -> report_error		9562812	0					
ANR	9562830	Identifier	st		9562812	0					
ANR	9562831	Identifier	report_error		9562812	1					
ANR	9562832	Identifier	s_no_report_error		9562812	1					
ANR	9562833	ExpressionStatement	st -> min_left = 0	137:4:4070:4086	9562812	3	True				
ANR	9562834	AssignmentExpression	st -> min_left = 0		9562812	0		=			
ANR	9562835	PtrMemberAccess	st -> min_left		9562812	0					
ANR	9562836	Identifier	st		9562812	0					
ANR	9562837	Identifier	min_left		9562812	1					
ANR	9562838	PrimaryExpression	0		9562812	1					
ANR	9562839	ExpressionStatement	st -> error_string [ 0 ] = 0	138:4:4092:4115	9562812	4	True				
ANR	9562840	AssignmentExpression	st -> error_string [ 0 ] = 0		9562812	0		=			
ANR	9562841	ArrayIndexing	st -> error_string [ 0 ]		9562812	0					
ANR	9562842	PtrMemberAccess	st -> error_string		9562812	0					
ANR	9562843	Identifier	st		9562812	0					
ANR	9562844	Identifier	error_string		9562812	1					
ANR	9562845	PrimaryExpression	0		9562812	1					
ANR	9562846	PrimaryExpression	0		9562812	1					
ANR	9562847	ReturnType	void		9562812	1					
ANR	9562848	Identifier	s_init_state		9562812	2					
ANR	9562849	ParameterList	"stream_state * st , const stream_template * templat , gs_memory_t * mem"		9562812	3					
ANR	9562850	Parameter	stream_state * st	131:13:3892:3907	9562812	0	True				
ANR	9562851	ParameterType	stream_state *		9562812	0					
ANR	9562852	Identifier	st		9562812	1					
ANR	9562853	Parameter	const stream_template * templat	131:31:3910:3939	9562812	1	True				
ANR	9562854	ParameterType	const stream_template *		9562812	0					
ANR	9562855	Identifier	templat		9562812	1					
ANR	9562856	Parameter	gs_memory_t * mem	132:13:3955:3970	9562812	2	True				
ANR	9562857	ParameterType	gs_memory_t *		9562812	0					
ANR	9562858	Identifier	mem		9562812	1					
ANR	9562859	CFGEntryNode	ENTRY		9562812		True				
ANR	9562860	CFGExitNode	EXIT		9562812		True				
ANR	9562861	Symbol	s_no_report_error		9562812						
ANR	9562862	Symbol	st		9562812						
ANR	9562863	Symbol	mem		9562812						
ANR	9562864	Symbol	* st		9562812						
ANR	9562865	Symbol	st -> min_left		9562812						
ANR	9562866	Symbol	st -> memory		9562812						
ANR	9562867	Symbol	st -> error_string		9562812						
ANR	9562868	Symbol	* st -> error_string		9562812						
ANR	9562869	Symbol	st -> templat		9562812						
ANR	9562870	Symbol	st -> report_error		9562812						
ANR	9562871	Symbol	templat		9562812						
ANR	9562872	Symbol	* * st		9562812						
ANR	9562873	Function	s_alloc_state	140:0:4119:4549							
ANR	9562874	FunctionDef	"s_alloc_state (gs_memory_t * mem , gs_memory_type_ptr_t stype , client_name_t cname)"		9562873	0					
ANR	9562875	CompoundStatement		143:0:4230:4549	9562873	0					
ANR	9562876	IdentifierDeclStatement	"stream_state * st = gs_alloc_struct ( mem , stream_state , stype , cname ) ;"	144:4:4236:4303	9562873	0	True				
ANR	9562877	IdentifierDecl	"* st = gs_alloc_struct ( mem , stream_state , stype , cname )"		9562873	0					
ANR	9562878	IdentifierDeclType	stream_state *		9562873	0					
ANR	9562879	Identifier	st		9562873	1					
ANR	9562880	AssignmentExpression	"* st = gs_alloc_struct ( mem , stream_state , stype , cname )"		9562873	2		=			
ANR	9562881	Identifier	st		9562873	0					
ANR	9562882	CallExpression	"gs_alloc_struct ( mem , stream_state , stype , cname )"		9562873	1					
ANR	9562883	Callee	gs_alloc_struct		9562873	0					
ANR	9562884	Identifier	gs_alloc_struct		9562873	0					
ANR	9562885	ArgumentList	mem		9562873	1					
ANR	9562886	Argument	mem		9562873	0					
ANR	9562887	Identifier	mem		9562873	0					
ANR	9562888	Argument	stream_state		9562873	1					
ANR	9562889	Identifier	stream_state		9562873	0					
ANR	9562890	Argument	stype		9562873	2					
ANR	9562891	Identifier	stype		9562873	0					
ANR	9562892	Argument	cname		9562873	3					
ANR	9562893	Identifier	cname		9562873	0					
ANR	9562894	ExpressionStatement	"if_debug3m ( 's' , mem , ""[s]alloc_state %s(%s) = 0x%lx\\n"" , client_name_string ( cname ) , client_name_string ( stype -> sname ) , ( ulong ) st )"	146:4:4310:4483	9562873	1	True				
ANR	9562895	CallExpression	"if_debug3m ( 's' , mem , ""[s]alloc_state %s(%s) = 0x%lx\\n"" , client_name_string ( cname ) , client_name_string ( stype -> sname ) , ( ulong ) st )"		9562873	0					
ANR	9562896	Callee	if_debug3m		9562873	0					
ANR	9562897	Identifier	if_debug3m		9562873	0					
ANR	9562898	ArgumentList	's'		9562873	1					
ANR	9562899	Argument	's'		9562873	0					
ANR	9562900	PrimaryExpression	's'		9562873	0					
ANR	9562901	Argument	mem		9562873	1					
ANR	9562902	Identifier	mem		9562873	0					
ANR	9562903	Argument	"""[s]alloc_state %s(%s) = 0x%lx\\n"""		9562873	2					
ANR	9562904	PrimaryExpression	"""[s]alloc_state %s(%s) = 0x%lx\\n"""		9562873	0					
ANR	9562905	Argument	client_name_string ( cname )		9562873	3					
ANR	9562906	CallExpression	client_name_string ( cname )		9562873	0					
ANR	9562907	Callee	client_name_string		9562873	0					
ANR	9562908	Identifier	client_name_string		9562873	0					
ANR	9562909	ArgumentList	cname		9562873	1					
ANR	9562910	Argument	cname		9562873	0					
ANR	9562911	Identifier	cname		9562873	0					
ANR	9562912	Argument	client_name_string ( stype -> sname )		9562873	4					
ANR	9562913	CallExpression	client_name_string ( stype -> sname )		9562873	0					
ANR	9562914	Callee	client_name_string		9562873	0					
ANR	9562915	Identifier	client_name_string		9562873	0					
ANR	9562916	ArgumentList	stype -> sname		9562873	1					
ANR	9562917	Argument	stype -> sname		9562873	0					
ANR	9562918	PtrMemberAccess	stype -> sname		9562873	0					
ANR	9562919	Identifier	stype		9562873	0					
ANR	9562920	Identifier	sname		9562873	1					
ANR	9562921	Argument	( ulong ) st		9562873	5					
ANR	9562922	CastExpression	( ulong ) st		9562873	0					
ANR	9562923	CastTarget	ulong		9562873	0					
ANR	9562924	Identifier	st		9562873	1					
ANR	9562925	IfStatement	if ( st )		9562873	2					
ANR	9562926	Condition	st	150:8:4493:4494	9562873	0	True				
ANR	9562927	Identifier	st		9562873	0					
ANR	9562928	ExpressionStatement	"s_init_state ( st , NULL , mem )"	151:8:4505:4532	9562873	1	True				
ANR	9562929	CallExpression	"s_init_state ( st , NULL , mem )"		9562873	0					
ANR	9562930	Callee	s_init_state		9562873	0					
ANR	9562931	Identifier	s_init_state		9562873	0					
ANR	9562932	ArgumentList	st		9562873	1					
ANR	9562933	Argument	st		9562873	0					
ANR	9562934	Identifier	st		9562873	0					
ANR	9562935	Argument	NULL		9562873	1					
ANR	9562936	Identifier	NULL		9562873	0					
ANR	9562937	Argument	mem		9562873	2					
ANR	9562938	Identifier	mem		9562873	0					
ANR	9562939	ReturnStatement	return st ;	152:4:4538:4547	9562873	3	True				
ANR	9562940	Identifier	st		9562873	0					
ANR	9562941	ReturnType	stream_state *		9562873	1					
ANR	9562942	Identifier	s_alloc_state		9562873	2					
ANR	9562943	ParameterList	"gs_memory_t * mem , gs_memory_type_ptr_t stype , client_name_t cname"		9562873	3					
ANR	9562944	Parameter	gs_memory_t * mem	141:14:4148:4164	9562873	0	True				
ANR	9562945	ParameterType	gs_memory_t *		9562873	0					
ANR	9562946	Identifier	mem		9562873	1					
ANR	9562947	Parameter	gs_memory_type_ptr_t stype	141:33:4167:4192	9562873	1	True				
ANR	9562948	ParameterType	gs_memory_type_ptr_t		9562873	0					
ANR	9562949	Identifier	stype		9562873	1					
ANR	9562950	Parameter	client_name_t cname	142:14:4209:4227	9562873	2	True				
ANR	9562951	ParameterType	client_name_t		9562873	0					
ANR	9562952	Identifier	cname		9562873	1					
ANR	9562953	CFGEntryNode	ENTRY		9562873		True				
ANR	9562954	CFGExitNode	EXIT		9562873		True				
ANR	9562955	Symbol	stream_state		9562873						
ANR	9562956	Symbol	st		9562873						
ANR	9562957	Symbol	NULL		9562873						
ANR	9562958	Symbol	mem		9562873						
ANR	9562959	Symbol	stype -> sname		9562873						
ANR	9562960	Symbol	stype		9562873						
ANR	9562961	Symbol	gs_alloc_struct		9562873						
ANR	9562962	Symbol	cname		9562873						
ANR	9562963	Symbol	client_name_string		9562873						
ANR	9562964	Symbol	* stype		9562873						
ANR	9562965	Function	s_std_init	156:0:4589:5393							
ANR	9562966	FunctionDef	"s_std_init (register stream * s , byte * ptr , uint len , const stream_procs * pp , int modes)"		9562965	0					
ANR	9562967	CompoundStatement		159:0:4695:5393	9562965	0					
ANR	9562968	ExpressionStatement	s -> templat = & s_no_template	160:4:4701:4728	9562965	0	True				
ANR	9562969	AssignmentExpression	s -> templat = & s_no_template		9562965	0		=			
ANR	9562970	PtrMemberAccess	s -> templat		9562965	0					
ANR	9562971	Identifier	s		9562965	0					
ANR	9562972	Identifier	templat		9562965	1					
ANR	9562973	UnaryOperationExpression	& s_no_template		9562965	1					
ANR	9562974	UnaryOperator	&		9562965	0					
ANR	9562975	Identifier	s_no_template		9562965	1					
ANR	9562976	ExpressionStatement	s -> cbuf = ptr	161:4:4734:4747	9562965	1	True				
ANR	9562977	AssignmentExpression	s -> cbuf = ptr		9562965	0		=			
ANR	9562978	PtrMemberAccess	s -> cbuf		9562965	0					
ANR	9562979	Identifier	s		9562965	0					
ANR	9562980	Identifier	cbuf		9562965	1					
ANR	9562981	Identifier	ptr		9562965	1					
ANR	9562982	ExpressionStatement	s -> srptr = s -> srlimit = s -> swptr = ptr - 1	162:4:4753:4795	9562965	2	True				
ANR	9562983	AssignmentExpression	s -> srptr = s -> srlimit = s -> swptr = ptr - 1		9562965	0		=			
ANR	9562984	PtrMemberAccess	s -> srptr		9562965	0					
ANR	9562985	Identifier	s		9562965	0					
ANR	9562986	Identifier	srptr		9562965	1					
ANR	9562987	AssignmentExpression	s -> srlimit = s -> swptr = ptr - 1		9562965	1		=			
ANR	9562988	PtrMemberAccess	s -> srlimit		9562965	0					
ANR	9562989	Identifier	s		9562965	0					
ANR	9562990	Identifier	srlimit		9562965	1					
ANR	9562991	AssignmentExpression	s -> swptr = ptr - 1		9562965	1		=			
ANR	9562992	PtrMemberAccess	s -> swptr		9562965	0					
ANR	9562993	Identifier	s		9562965	0					
ANR	9562994	Identifier	swptr		9562965	1					
ANR	9562995	AdditiveExpression	ptr - 1		9562965	1		-			
ANR	9562996	Identifier	ptr		9562965	0					
ANR	9562997	PrimaryExpression	1		9562965	1					
ANR	9562998	ExpressionStatement	s -> swlimit = ptr - 1 + len	163:4:4801:4827	9562965	3	True				
ANR	9562999	AssignmentExpression	s -> swlimit = ptr - 1 + len		9562965	0		=			
ANR	9563000	PtrMemberAccess	s -> swlimit		9562965	0					
ANR	9563001	Identifier	s		9562965	0					
ANR	9563002	Identifier	swlimit		9562965	1					
ANR	9563003	AdditiveExpression	ptr - 1 + len		9562965	1		-			
ANR	9563004	Identifier	ptr		9562965	0					
ANR	9563005	AdditiveExpression	1 + len		9562965	1		+			
ANR	9563006	PrimaryExpression	1		9562965	0					
ANR	9563007	Identifier	len		9562965	1					
ANR	9563008	ExpressionStatement	s -> end_status = 0	164:4:4833:4850	9562965	4	True				
ANR	9563009	AssignmentExpression	s -> end_status = 0		9562965	0		=			
ANR	9563010	PtrMemberAccess	s -> end_status		9562965	0					
ANR	9563011	Identifier	s		9562965	0					
ANR	9563012	Identifier	end_status		9562965	1					
ANR	9563013	PrimaryExpression	0		9562965	1					
ANR	9563014	ExpressionStatement	s -> foreign = 0	165:4:4856:4870	9562965	5	True				
ANR	9563015	AssignmentExpression	s -> foreign = 0		9562965	0		=			
ANR	9563016	PtrMemberAccess	s -> foreign		9562965	0					
ANR	9563017	Identifier	s		9562965	0					
ANR	9563018	Identifier	foreign		9562965	1					
ANR	9563019	PrimaryExpression	0		9562965	1					
ANR	9563020	ExpressionStatement	s -> modes = modes	166:4:4876:4892	9562965	6	True				
ANR	9563021	AssignmentExpression	s -> modes = modes		9562965	0		=			
ANR	9563022	PtrMemberAccess	s -> modes		9562965	0					
ANR	9563023	Identifier	s		9562965	0					
ANR	9563024	Identifier	modes		9562965	1					
ANR	9563025	Identifier	modes		9562965	1					
ANR	9563026	ExpressionStatement	s -> cbuf_string . data = 0	167:4:4898:4921	9562965	7	True				
ANR	9563027	AssignmentExpression	s -> cbuf_string . data = 0		9562965	0		=			
ANR	9563028	MemberAccess	s -> cbuf_string . data		9562965	0					
ANR	9563029	PtrMemberAccess	s -> cbuf_string		9562965	0					
ANR	9563030	Identifier	s		9562965	0					
ANR	9563031	Identifier	cbuf_string		9562965	1					
ANR	9563032	Identifier	data		9562965	1					
ANR	9563033	PrimaryExpression	0		9562965	1					
ANR	9563034	ExpressionStatement	s -> position = 0	168:4:4927:4942	9562965	8	True				
ANR	9563035	AssignmentExpression	s -> position = 0		9562965	0		=			
ANR	9563036	PtrMemberAccess	s -> position		9562965	0					
ANR	9563037	Identifier	s		9562965	0					
ANR	9563038	Identifier	position		9562965	1					
ANR	9563039	PrimaryExpression	0		9562965	1					
ANR	9563040	ExpressionStatement	s -> bsize = s -> cbsize = len	169:4:4948:4974	9562965	9	True				
ANR	9563041	AssignmentExpression	s -> bsize = s -> cbsize = len		9562965	0		=			
ANR	9563042	PtrMemberAccess	s -> bsize		9562965	0					
ANR	9563043	Identifier	s		9562965	0					
ANR	9563044	Identifier	bsize		9562965	1					
ANR	9563045	AssignmentExpression	s -> cbsize = len		9562965	1		=			
ANR	9563046	PtrMemberAccess	s -> cbsize		9562965	0					
ANR	9563047	Identifier	s		9562965	0					
ANR	9563048	Identifier	cbsize		9562965	1					
ANR	9563049	Identifier	len		9562965	1					
ANR	9563050	ExpressionStatement	s -> strm = 0	170:4:4980:4991	9562965	10	True				
ANR	9563051	AssignmentExpression	s -> strm = 0		9562965	0		=			
ANR	9563052	PtrMemberAccess	s -> strm		9562965	0					
ANR	9563053	Identifier	s		9562965	0					
ANR	9563054	Identifier	strm		9562965	1					
ANR	9563055	PrimaryExpression	0		9562965	1					
ANR	9563056	ExpressionStatement	s -> is_temp = 0	171:4:5017:5031	9562965	11	True				
ANR	9563057	AssignmentExpression	s -> is_temp = 0		9562965	0		=			
ANR	9563058	PtrMemberAccess	s -> is_temp		9562965	0					
ANR	9563059	Identifier	s		9562965	0					
ANR	9563060	Identifier	is_temp		9562965	1					
ANR	9563061	PrimaryExpression	0		9562965	1					
ANR	9563062	ExpressionStatement	s -> procs = * pp	172:4:5037:5051	9562965	12	True				
ANR	9563063	AssignmentExpression	s -> procs = * pp		9562965	0		=			
ANR	9563064	PtrMemberAccess	s -> procs		9562965	0					
ANR	9563065	Identifier	s		9562965	0					
ANR	9563066	Identifier	procs		9562965	1					
ANR	9563067	UnaryOperationExpression	* pp		9562965	1					
ANR	9563068	UnaryOperator	*		9562965	0					
ANR	9563069	Identifier	pp		9562965	1					
ANR	9563070	ExpressionStatement	s -> state = ( stream_state * ) s	173:4:5057:5086	9562965	13	True				
ANR	9563071	AssignmentExpression	s -> state = ( stream_state * ) s		9562965	0		=			
ANR	9563072	PtrMemberAccess	s -> state		9562965	0					
ANR	9563073	Identifier	s		9562965	0					
ANR	9563074	Identifier	state		9562965	1					
ANR	9563075	CastExpression	( stream_state * ) s		9562965	1					
ANR	9563076	CastTarget	stream_state *		9562965	0					
ANR	9563077	Identifier	s		9562965	1					
ANR	9563078	ExpressionStatement	s -> file = 0	174:4:5127:5138	9562965	14	True				
ANR	9563079	AssignmentExpression	s -> file = 0		9562965	0		=			
ANR	9563080	PtrMemberAccess	s -> file		9562965	0					
ANR	9563081	Identifier	s		9562965	0					
ANR	9563082	Identifier	file		9562965	1					
ANR	9563083	PrimaryExpression	0		9562965	1					
ANR	9563084	ExpressionStatement	s -> file_name . data = 0	175:4:5144:5165	9562965	15	True				
ANR	9563085	AssignmentExpression	s -> file_name . data = 0		9562965	0		=			
ANR	9563086	MemberAccess	s -> file_name . data		9562965	0					
ANR	9563087	PtrMemberAccess	s -> file_name		9562965	0					
ANR	9563088	Identifier	s		9562965	0					
ANR	9563089	Identifier	file_name		9562965	1					
ANR	9563090	Identifier	data		9562965	1					
ANR	9563091	PrimaryExpression	0		9562965	1					
ANR	9563092	ExpressionStatement	s -> file_name . size = 0	176:4:5204:5225	9562965	16	True				
ANR	9563093	AssignmentExpression	s -> file_name . size = 0		9562965	0		=			
ANR	9563094	MemberAccess	s -> file_name . size		9562965	0					
ANR	9563095	PtrMemberAccess	s -> file_name		9562965	0					
ANR	9563096	Identifier	s		9562965	0					
ANR	9563097	Identifier	file_name		9562965	1					
ANR	9563098	Identifier	size		9562965	1					
ANR	9563099	PrimaryExpression	0		9562965	1					
ANR	9563100	IfStatement	if ( s -> memory )		9562965	17					
ANR	9563101	Condition	s -> memory	177:8:5235:5243	9562965	0	True				
ANR	9563102	PtrMemberAccess	s -> memory		9562965	0					
ANR	9563103	Identifier	s		9562965	0					
ANR	9563104	Identifier	memory		9562965	1					
ANR	9563105	CompoundStatement		19:19:550:550	9562965	1					
ANR	9563106	ExpressionStatement	"if_debug4m ( 's' , s -> memory , ""[s]init 0x%lx, buf=0x%lx, len=%u, modes=%d\\n"" , ( ulong ) s , ( ulong ) ptr , len , modes )"	178:8:5256:5385	9562965	0	True				
ANR	9563107	CallExpression	"if_debug4m ( 's' , s -> memory , ""[s]init 0x%lx, buf=0x%lx, len=%u, modes=%d\\n"" , ( ulong ) s , ( ulong ) ptr , len , modes )"		9562965	0					
ANR	9563108	Callee	if_debug4m		9562965	0					
ANR	9563109	Identifier	if_debug4m		9562965	0					
ANR	9563110	ArgumentList	's'		9562965	1					
ANR	9563111	Argument	's'		9562965	0					
ANR	9563112	PrimaryExpression	's'		9562965	0					
ANR	9563113	Argument	s -> memory		9562965	1					
ANR	9563114	PtrMemberAccess	s -> memory		9562965	0					
ANR	9563115	Identifier	s		9562965	0					
ANR	9563116	Identifier	memory		9562965	1					
ANR	9563117	Argument	"""[s]init 0x%lx, buf=0x%lx, len=%u, modes=%d\\n"""		9562965	2					
ANR	9563118	PrimaryExpression	"""[s]init 0x%lx, buf=0x%lx, len=%u, modes=%d\\n"""		9562965	0					
ANR	9563119	Argument	( ulong ) s		9562965	3					
ANR	9563120	CastExpression	( ulong ) s		9562965	0					
ANR	9563121	CastTarget	ulong		9562965	0					
ANR	9563122	Identifier	s		9562965	1					
ANR	9563123	Argument	( ulong ) ptr		9562965	4					
ANR	9563124	CastExpression	( ulong ) ptr		9562965	0					
ANR	9563125	CastTarget	ulong		9562965	0					
ANR	9563126	Identifier	ptr		9562965	1					
ANR	9563127	Argument	len		9562965	5					
ANR	9563128	Identifier	len		9562965	0					
ANR	9563129	Argument	modes		9562965	6					
ANR	9563130	Identifier	modes		9562965	0					
ANR	9563131	ReturnType	void		9562965	1					
ANR	9563132	Identifier	s_std_init		9562965	2					
ANR	9563133	ParameterList	"register stream * s , byte * ptr , uint len , const stream_procs * pp , int modes"		9562965	3					
ANR	9563134	Parameter	register stream * s	157:11:4605:4623	9562965	0	True				
ANR	9563135	ParameterType	register stream *		9562965	0					
ANR	9563136	Identifier	s		9562965	1					
ANR	9563137	Parameter	byte * ptr	157:32:4626:4635	9562965	1	True				
ANR	9563138	ParameterType	byte *		9562965	0					
ANR	9563139	Identifier	ptr		9562965	1					
ANR	9563140	Parameter	uint len	157:44:4638:4645	9562965	2	True				
ANR	9563141	ParameterType	uint		9562965	0					
ANR	9563142	Identifier	len		9562965	1					
ANR	9563143	Parameter	const stream_procs * pp	157:54:4648:4670	9562965	3	True				
ANR	9563144	ParameterType	const stream_procs *		9562965	0					
ANR	9563145	Identifier	pp		9562965	1					
ANR	9563146	Parameter	int modes	158:11:4684:4692	9562965	4	True				
ANR	9563147	ParameterType	int		9562965	0					
ANR	9563148	Identifier	modes		9562965	1					
ANR	9563149	CFGEntryNode	ENTRY		9562965		True				
ANR	9563150	CFGExitNode	EXIT		9562965		True				
ANR	9563151	Symbol	pp		9562965						
ANR	9563152	Symbol	modes		9562965						
ANR	9563153	Symbol	s -> srptr		9562965						
ANR	9563154	Symbol	s -> file		9562965						
ANR	9563155	Symbol	s -> is_temp		9562965						
ANR	9563156	Symbol	s -> srlimit		9562965						
ANR	9563157	Symbol	s -> cbuf		9562965						
ANR	9563158	Symbol	s -> templat		9562965						
ANR	9563159	Symbol	s -> cbsize		9562965						
ANR	9563160	Symbol	s -> swlimit		9562965						
ANR	9563161	Symbol	s -> foreign		9562965						
ANR	9563162	Symbol	len		9562965						
ANR	9563163	Symbol	s -> file_name . size		9562965						
ANR	9563164	Symbol	s -> bsize		9562965						
ANR	9563165	Symbol	s -> file_name		9562965						
ANR	9563166	Symbol	s -> cbuf_string . data		9562965						
ANR	9563167	Symbol	s -> strm		9562965						
ANR	9563168	Symbol	& s_no_template		9562965						
ANR	9563169	Symbol	s -> swptr		9562965						
ANR	9563170	Symbol	* pp		9562965						
ANR	9563171	Symbol	s -> position		9562965						
ANR	9563172	Symbol	s -> procs		9562965						
ANR	9563173	Symbol	s -> state		9562965						
ANR	9563174	Symbol	s -> memory		9562965						
ANR	9563175	Symbol	s -> cbuf_string		9562965						
ANR	9563176	Symbol	ptr		9562965						
ANR	9563177	Symbol	s		9562965						
ANR	9563178	Symbol	s -> end_status		9562965						
ANR	9563179	Symbol	s -> file_name . data		9562965						
ANR	9563180	Symbol	* s		9562965						
ANR	9563181	Symbol	s -> modes		9562965						
ANR	9563182	Function	ssetfilename	185:0:5503:6046							
ANR	9563183	FunctionDef	"ssetfilename (stream * s , const byte * data , uint size)"		9563182	0					
ANR	9563184	CompoundStatement		187:0:5560:6046	9563182	0					
ANR	9563185	IdentifierDeclStatement	"byte * str = ( s -> file_name . data == 0 ? gs_alloc_string ( s -> memory , size + 1 , ""ssetfilename"" ) : gs_resize_string ( s -> memory , ( byte * ) s -> file_name . data , s -> file_name . size , size + 1 , ""ssetfilename"" ) ) ;"	188:4:5566:5881	9563182	0	True				
ANR	9563186	IdentifierDecl	"* str = ( s -> file_name . data == 0 ? gs_alloc_string ( s -> memory , size + 1 , ""ssetfilename"" ) : gs_resize_string ( s -> memory , ( byte * ) s -> file_name . data , s -> file_name . size , size + 1 , ""ssetfilename"" ) )"		9563182	0					
ANR	9563187	IdentifierDeclType	byte *		9563182	0					
ANR	9563188	Identifier	str		9563182	1					
ANR	9563189	AssignmentExpression	"* str = ( s -> file_name . data == 0 ? gs_alloc_string ( s -> memory , size + 1 , ""ssetfilename"" ) : gs_resize_string ( s -> memory , ( byte * ) s -> file_name . data , s -> file_name . size , size + 1 , ""ssetfilename"" ) )"		9563182	2		=			
ANR	9563190	Identifier	str		9563182	0					
ANR	9563191	ConditionalExpression	"s -> file_name . data == 0 ? gs_alloc_string ( s -> memory , size + 1 , ""ssetfilename"" ) : gs_resize_string ( s -> memory , ( byte * ) s -> file_name . data , s -> file_name . size , size + 1 , ""ssetfilename"" )"		9563182	1					
ANR	9563192	Condition	s -> file_name . data == 0		9563182	0					
ANR	9563193	EqualityExpression	s -> file_name . data == 0		9563182	0		==			
ANR	9563194	MemberAccess	s -> file_name . data		9563182	0					
ANR	9563195	PtrMemberAccess	s -> file_name		9563182	0					
ANR	9563196	Identifier	s		9563182	0					
ANR	9563197	Identifier	file_name		9563182	1					
ANR	9563198	Identifier	data		9563182	1					
ANR	9563199	PrimaryExpression	0		9563182	1					
ANR	9563200	CallExpression	"gs_alloc_string ( s -> memory , size + 1 , ""ssetfilename"" )"		9563182	1					
ANR	9563201	Callee	gs_alloc_string		9563182	0					
ANR	9563202	Identifier	gs_alloc_string		9563182	0					
ANR	9563203	ArgumentList	s -> memory		9563182	1					
ANR	9563204	Argument	s -> memory		9563182	0					
ANR	9563205	PtrMemberAccess	s -> memory		9563182	0					
ANR	9563206	Identifier	s		9563182	0					
ANR	9563207	Identifier	memory		9563182	1					
ANR	9563208	Argument	size + 1		9563182	1					
ANR	9563209	AdditiveExpression	size + 1		9563182	0		+			
ANR	9563210	Identifier	size		9563182	0					
ANR	9563211	PrimaryExpression	1		9563182	1					
ANR	9563212	Argument	"""ssetfilename"""		9563182	2					
ANR	9563213	PrimaryExpression	"""ssetfilename"""		9563182	0					
ANR	9563214	CallExpression	"gs_resize_string ( s -> memory , ( byte * ) s -> file_name . data , s -> file_name . size , size + 1 , ""ssetfilename"" )"		9563182	2					
ANR	9563215	Callee	gs_resize_string		9563182	0					
ANR	9563216	Identifier	gs_resize_string		9563182	0					
ANR	9563217	ArgumentList	s -> memory		9563182	1					
ANR	9563218	Argument	s -> memory		9563182	0					
ANR	9563219	PtrMemberAccess	s -> memory		9563182	0					
ANR	9563220	Identifier	s		9563182	0					
ANR	9563221	Identifier	memory		9563182	1					
ANR	9563222	Argument	( byte * ) s -> file_name . data		9563182	1					
ANR	9563223	CastExpression	( byte * ) s -> file_name . data		9563182	0					
ANR	9563224	CastTarget	byte *		9563182	0					
ANR	9563225	MemberAccess	s -> file_name . data		9563182	1					
ANR	9563226	PtrMemberAccess	s -> file_name		9563182	0					
ANR	9563227	Identifier	s		9563182	0					
ANR	9563228	Identifier	file_name		9563182	1					
ANR	9563229	Identifier	data		9563182	1					
ANR	9563230	Argument	s -> file_name . size		9563182	2					
ANR	9563231	MemberAccess	s -> file_name . size		9563182	0					
ANR	9563232	PtrMemberAccess	s -> file_name		9563182	0					
ANR	9563233	Identifier	s		9563182	0					
ANR	9563234	Identifier	file_name		9563182	1					
ANR	9563235	Identifier	size		9563182	1					
ANR	9563236	Argument	size + 1		9563182	3					
ANR	9563237	AdditiveExpression	size + 1		9563182	0		+			
ANR	9563238	Identifier	size		9563182	0					
ANR	9563239	PrimaryExpression	1		9563182	1					
ANR	9563240	Argument	"""ssetfilename"""		9563182	4					
ANR	9563241	PrimaryExpression	"""ssetfilename"""		9563182	0					
ANR	9563242	IfStatement	if ( str == 0 )		9563182	1					
ANR	9563243	Condition	str == 0	196:8:5892:5899	9563182	0	True				
ANR	9563244	EqualityExpression	str == 0		9563182	0		==			
ANR	9563245	Identifier	str		9563182	0					
ANR	9563246	PrimaryExpression	0		9563182	1					
ANR	9563247	ReturnStatement	return - 1 ;	197:8:5910:5919	9563182	1	True				
ANR	9563248	UnaryOperationExpression	- 1		9563182	0					
ANR	9563249	UnaryOperator	-		9563182	0					
ANR	9563250	PrimaryExpression	1		9563182	1					
ANR	9563251	ExpressionStatement	"memcpy ( str , data , size )"	198:4:5925:5948	9563182	2	True				
ANR	9563252	CallExpression	"memcpy ( str , data , size )"		9563182	0					
ANR	9563253	Callee	memcpy		9563182	0					
ANR	9563254	Identifier	memcpy		9563182	0					
ANR	9563255	ArgumentList	str		9563182	1					
ANR	9563256	Argument	str		9563182	0					
ANR	9563257	Identifier	str		9563182	0					
ANR	9563258	Argument	data		9563182	1					
ANR	9563259	Identifier	data		9563182	0					
ANR	9563260	Argument	size		9563182	2					
ANR	9563261	Identifier	size		9563182	0					
ANR	9563262	ExpressionStatement	str [ size ] = 0	199:4:5954:5967	9563182	3	True				
ANR	9563263	AssignmentExpression	str [ size ] = 0		9563182	0		=			
ANR	9563264	ArrayIndexing	str [ size ]		9563182	0					
ANR	9563265	Identifier	str		9563182	0					
ANR	9563266	Identifier	size		9563182	1					
ANR	9563267	PrimaryExpression	0		9563182	1					
ANR	9563268	ExpressionStatement	s -> file_name . data = str	200:4:5973:5996	9563182	4	True				
ANR	9563269	AssignmentExpression	s -> file_name . data = str		9563182	0		=			
ANR	9563270	MemberAccess	s -> file_name . data		9563182	0					
ANR	9563271	PtrMemberAccess	s -> file_name		9563182	0					
ANR	9563272	Identifier	s		9563182	0					
ANR	9563273	Identifier	file_name		9563182	1					
ANR	9563274	Identifier	data		9563182	1					
ANR	9563275	Identifier	str		9563182	1					
ANR	9563276	ExpressionStatement	s -> file_name . size = size + 1	201:4:6002:6030	9563182	5	True				
ANR	9563277	AssignmentExpression	s -> file_name . size = size + 1		9563182	0		=			
ANR	9563278	MemberAccess	s -> file_name . size		9563182	0					
ANR	9563279	PtrMemberAccess	s -> file_name		9563182	0					
ANR	9563280	Identifier	s		9563182	0					
ANR	9563281	Identifier	file_name		9563182	1					
ANR	9563282	Identifier	size		9563182	1					
ANR	9563283	AdditiveExpression	size + 1		9563182	1		+			
ANR	9563284	Identifier	size		9563182	0					
ANR	9563285	PrimaryExpression	1		9563182	1					
ANR	9563286	ReturnStatement	return 0 ;	202:4:6036:6044	9563182	6	True				
ANR	9563287	PrimaryExpression	0		9563182	0					
ANR	9563288	ReturnType	int		9563182	1					
ANR	9563289	Identifier	ssetfilename		9563182	2					
ANR	9563290	ParameterList	"stream * s , const byte * data , uint size"		9563182	3					
ANR	9563291	Parameter	stream * s	186:13:5520:5528	9563182	0	True				
ANR	9563292	ParameterType	stream *		9563182	0					
ANR	9563293	Identifier	s		9563182	1					
ANR	9563294	Parameter	const byte * data	186:24:5531:5546	9563182	1	True				
ANR	9563295	ParameterType	const byte *		9563182	0					
ANR	9563296	Identifier	data		9563182	1					
ANR	9563297	Parameter	uint size	186:42:5549:5557	9563182	2	True				
ANR	9563298	ParameterType	uint		9563182	0					
ANR	9563299	Identifier	size		9563182	1					
ANR	9563300	CFGEntryNode	ENTRY		9563182		True				
ANR	9563301	CFGExitNode	EXIT		9563182		True				
ANR	9563302	Symbol	data		9563182						
ANR	9563303	Symbol	s -> memory		9563182						
ANR	9563304	Symbol	str		9563182						
ANR	9563305	Symbol	s		9563182						
ANR	9563306	Symbol	* size		9563182						
ANR	9563307	Symbol	size		9563182						
ANR	9563308	Symbol	s -> file_name . size		9563182						
ANR	9563309	Symbol	s -> file_name		9563182						
ANR	9563310	Symbol	gs_alloc_string		9563182						
ANR	9563311	Symbol	s -> file_name . data		9563182						
ANR	9563312	Symbol	gs_resize_string		9563182						
ANR	9563313	Symbol	* str		9563182						
ANR	9563314	Symbol	* s		9563182						
ANR	9563315	Function	sfilename	207:0:6150:6398							
ANR	9563316	FunctionDef	"sfilename (stream * s , gs_const_string * pfname)"		9563315	0					
ANR	9563317	CompoundStatement		209:0:6200:6398	9563315	0					
ANR	9563318	ExpressionStatement	pfname -> data = s -> file_name . data	210:4:6206:6238	9563315	0	True				
ANR	9563319	AssignmentExpression	pfname -> data = s -> file_name . data		9563315	0		=			
ANR	9563320	PtrMemberAccess	pfname -> data		9563315	0					
ANR	9563321	Identifier	pfname		9563315	0					
ANR	9563322	Identifier	data		9563315	1					
ANR	9563323	MemberAccess	s -> file_name . data		9563315	1					
ANR	9563324	PtrMemberAccess	s -> file_name		9563315	0					
ANR	9563325	Identifier	s		9563315	0					
ANR	9563326	Identifier	file_name		9563315	1					
ANR	9563327	Identifier	data		9563315	1					
ANR	9563328	IfStatement	if ( pfname -> data == 0 )		9563315	1					
ANR	9563329	Condition	pfname -> data == 0	211:8:6248:6264	9563315	0	True				
ANR	9563330	EqualityExpression	pfname -> data == 0		9563315	0		==			
ANR	9563331	PtrMemberAccess	pfname -> data		9563315	0					
ANR	9563332	Identifier	pfname		9563315	0					
ANR	9563333	Identifier	data		9563315	1					
ANR	9563334	PrimaryExpression	0		9563315	1					
ANR	9563335	CompoundStatement		3:27:66:66	9563315	1					
ANR	9563336	ExpressionStatement	pfname -> size = 0	212:8:6277:6293	9563315	0	True				
ANR	9563337	AssignmentExpression	pfname -> size = 0		9563315	0		=			
ANR	9563338	PtrMemberAccess	pfname -> size		9563315	0					
ANR	9563339	Identifier	pfname		9563315	0					
ANR	9563340	Identifier	size		9563315	1					
ANR	9563341	PrimaryExpression	0		9563315	1					
ANR	9563342	ReturnStatement	return - 1 ;	213:8:6303:6312	9563315	1	True				
ANR	9563343	UnaryOperationExpression	- 1		9563315	0					
ANR	9563344	UnaryOperator	-		9563315	0					
ANR	9563345	PrimaryExpression	1		9563315	1					
ANR	9563346	ExpressionStatement	pfname -> size = s -> file_name . size - 1	215:4:6324:6360	9563315	2	True				
ANR	9563347	AssignmentExpression	pfname -> size = s -> file_name . size - 1		9563315	0		=			
ANR	9563348	PtrMemberAccess	pfname -> size		9563315	0					
ANR	9563349	Identifier	pfname		9563315	0					
ANR	9563350	Identifier	size		9563315	1					
ANR	9563351	AdditiveExpression	s -> file_name . size - 1		9563315	1		-			
ANR	9563352	MemberAccess	s -> file_name . size		9563315	0					
ANR	9563353	PtrMemberAccess	s -> file_name		9563315	0					
ANR	9563354	Identifier	s		9563315	0					
ANR	9563355	Identifier	file_name		9563315	1					
ANR	9563356	Identifier	size		9563315	1					
ANR	9563357	PrimaryExpression	1		9563315	1					
ANR	9563358	ReturnStatement	return 0 ;	216:4:6388:6396	9563315	3	True				
ANR	9563359	PrimaryExpression	0		9563315	0					
ANR	9563360	ReturnType	int		9563315	1					
ANR	9563361	Identifier	sfilename		9563315	2					
ANR	9563362	ParameterList	"stream * s , gs_const_string * pfname"		9563315	3					
ANR	9563363	Parameter	stream * s	208:10:6164:6172	9563315	0	True				
ANR	9563364	ParameterType	stream *		9563315	0					
ANR	9563365	Identifier	s		9563315	1					
ANR	9563366	Parameter	gs_const_string * pfname	208:21:6175:6197	9563315	1	True				
ANR	9563367	ParameterType	gs_const_string *		9563315	0					
ANR	9563368	Identifier	pfname		9563315	1					
ANR	9563369	CFGEntryNode	ENTRY		9563315		True				
ANR	9563370	CFGExitNode	EXIT		9563315		True				
ANR	9563371	Symbol	pfname -> data		9563315						
ANR	9563372	Symbol	pfname -> size		9563315						
ANR	9563373	Symbol	s		9563315						
ANR	9563374	Symbol	s -> file_name . size		9563315						
ANR	9563375	Symbol	s -> file_name		9563315						
ANR	9563376	Symbol	s -> file_name . data		9563315						
ANR	9563377	Symbol	* s		9563315						
ANR	9563378	Symbol	pfname		9563315						
ANR	9563379	Symbol	* pfname		9563315						
ANR	9563380	Function	s_std_null	220:0:6448:6491							
ANR	9563381	FunctionDef	s_std_null (stream * s)		9563380	0					
ANR	9563382	CompoundStatement		222:0:6475:6491	9563380	0					
ANR	9563383	ReturnStatement	return 0 ;	223:4:6481:6489	9563380	0	True				
ANR	9563384	PrimaryExpression	0		9563380	0					
ANR	9563385	ReturnType	int		9563380	1					
ANR	9563386	Identifier	s_std_null		9563380	2					
ANR	9563387	ParameterList	stream * s		9563380	3					
ANR	9563388	Parameter	stream * s	221:11:6463:6472	9563380	0	True				
ANR	9563389	ParameterType	stream *		9563380	0					
ANR	9563390	Identifier	s		9563380	1					
ANR	9563391	CFGEntryNode	ENTRY		9563380		True				
ANR	9563392	CFGExitNode	EXIT		9563380		True				
ANR	9563393	Symbol	s		9563380						
ANR	9563394	Function	s_std_read_reset	227:0:6549:6626							
ANR	9563395	FunctionDef	s_std_read_reset (stream * s)		9563394	0					
ANR	9563396	CompoundStatement		229:0:6583:6626	9563394	0					
ANR	9563397	ExpressionStatement	s -> srptr = s -> srlimit = s -> cbuf - 1	230:4:6589:6624	9563394	0	True				
ANR	9563398	AssignmentExpression	s -> srptr = s -> srlimit = s -> cbuf - 1		9563394	0		=			
ANR	9563399	PtrMemberAccess	s -> srptr		9563394	0					
ANR	9563400	Identifier	s		9563394	0					
ANR	9563401	Identifier	srptr		9563394	1					
ANR	9563402	AssignmentExpression	s -> srlimit = s -> cbuf - 1		9563394	1		=			
ANR	9563403	PtrMemberAccess	s -> srlimit		9563394	0					
ANR	9563404	Identifier	s		9563394	0					
ANR	9563405	Identifier	srlimit		9563394	1					
ANR	9563406	AdditiveExpression	s -> cbuf - 1		9563394	1		-			
ANR	9563407	PtrMemberAccess	s -> cbuf		9563394	0					
ANR	9563408	Identifier	s		9563394	0					
ANR	9563409	Identifier	cbuf		9563394	1					
ANR	9563410	PrimaryExpression	1		9563394	1					
ANR	9563411	ReturnType	void		9563394	1					
ANR	9563412	Identifier	s_std_read_reset		9563394	2					
ANR	9563413	ParameterList	stream * s		9563394	3					
ANR	9563414	Parameter	stream * s	228:17:6571:6580	9563394	0	True				
ANR	9563415	ParameterType	stream *		9563394	0					
ANR	9563416	Identifier	s		9563394	1					
ANR	9563417	CFGEntryNode	ENTRY		9563394		True				
ANR	9563418	CFGExitNode	EXIT		9563394		True				
ANR	9563419	Symbol	s		9563394						
ANR	9563420	Symbol	s -> srptr		9563394						
ANR	9563421	Symbol	s -> srlimit		9563394						
ANR	9563422	Symbol	s -> cbuf		9563394						
ANR	9563423	Symbol	* s		9563394						
ANR	9563424	Function	s_std_write_reset	234:0:6684:6749							
ANR	9563425	FunctionDef	s_std_write_reset (stream * s)		9563424	0					
ANR	9563426	CompoundStatement		236:0:6719:6749	9563424	0					
ANR	9563427	ExpressionStatement	s -> swptr = s -> cbuf - 1	237:4:6725:6747	9563424	0	True				
ANR	9563428	AssignmentExpression	s -> swptr = s -> cbuf - 1		9563424	0		=			
ANR	9563429	PtrMemberAccess	s -> swptr		9563424	0					
ANR	9563430	Identifier	s		9563424	0					
ANR	9563431	Identifier	swptr		9563424	1					
ANR	9563432	AdditiveExpression	s -> cbuf - 1		9563424	1		-			
ANR	9563433	PtrMemberAccess	s -> cbuf		9563424	0					
ANR	9563434	Identifier	s		9563424	0					
ANR	9563435	Identifier	cbuf		9563424	1					
ANR	9563436	PrimaryExpression	1		9563424	1					
ANR	9563437	ReturnType	void		9563424	1					
ANR	9563438	Identifier	s_std_write_reset		9563424	2					
ANR	9563439	ParameterList	stream * s		9563424	3					
ANR	9563440	Parameter	stream * s	235:18:6707:6716	9563424	0	True				
ANR	9563441	ParameterType	stream *		9563424	0					
ANR	9563442	Identifier	s		9563424	1					
ANR	9563443	CFGEntryNode	ENTRY		9563424		True				
ANR	9563444	CFGExitNode	EXIT		9563424		True				
ANR	9563445	Symbol	s -> swptr		9563424						
ANR	9563446	Symbol	s		9563424						
ANR	9563447	Symbol	s -> cbuf		9563424						
ANR	9563448	Symbol	* s		9563424						
ANR	9563449	Function	s_std_read_flush	241:0:6798:7033							
ANR	9563450	FunctionDef	s_std_read_flush (stream * s)		9563449	0					
ANR	9563451	CompoundStatement		243:0:6831:7033	9563449	0					
ANR	9563452	WhileStatement	while ( 1 )		9563449	0					
ANR	9563453	Condition	1	244:11:6844:6844	9563449	0	True				
ANR	9563454	PrimaryExpression	1		9563449	0					
ANR	9563455	CompoundStatement		2:14:15:15	9563449	1					
ANR	9563456	ExpressionStatement	s -> srptr = s -> srlimit = s -> cbuf - 1	245:8:6857:6892	9563449	0	True				
ANR	9563457	AssignmentExpression	s -> srptr = s -> srlimit = s -> cbuf - 1		9563449	0		=			
ANR	9563458	PtrMemberAccess	s -> srptr		9563449	0					
ANR	9563459	Identifier	s		9563449	0					
ANR	9563460	Identifier	srptr		9563449	1					
ANR	9563461	AssignmentExpression	s -> srlimit = s -> cbuf - 1		9563449	1		=			
ANR	9563462	PtrMemberAccess	s -> srlimit		9563449	0					
ANR	9563463	Identifier	s		9563449	0					
ANR	9563464	Identifier	srlimit		9563449	1					
ANR	9563465	AdditiveExpression	s -> cbuf - 1		9563449	1		-			
ANR	9563466	PtrMemberAccess	s -> cbuf		9563449	0					
ANR	9563467	Identifier	s		9563449	0					
ANR	9563468	Identifier	cbuf		9563449	1					
ANR	9563469	PrimaryExpression	1		9563449	1					
ANR	9563470	IfStatement	if ( s -> end_status )		9563449	1					
ANR	9563471	Condition	s -> end_status	246:12:6906:6918	9563449	0	True				
ANR	9563472	PtrMemberAccess	s -> end_status		9563449	0					
ANR	9563473	Identifier	s		9563449	0					
ANR	9563474	Identifier	end_status		9563449	1					
ANR	9563475	BreakStatement	break ;	247:12:6933:6938	9563449	1	True				
ANR	9563476	ExpressionStatement	s_process_read_buf ( s )	248:8:6948:6969	9563449	2	True				
ANR	9563477	CallExpression	s_process_read_buf ( s )		9563449	0					
ANR	9563478	Callee	s_process_read_buf		9563449	0					
ANR	9563479	Identifier	s_process_read_buf		9563449	0					
ANR	9563480	ArgumentList	s		9563449	1					
ANR	9563481	Argument	s		9563449	0					
ANR	9563482	Identifier	s		9563449	0					
ANR	9563483	ReturnStatement	return ( s -> end_status == EOFC ? 0 : s -> end_status ) ;	250:4:6981:7031	9563449	1	True				
ANR	9563484	ConditionalExpression	s -> end_status == EOFC ? 0 : s -> end_status		9563449	0					
ANR	9563485	Condition	s -> end_status == EOFC		9563449	0					
ANR	9563486	EqualityExpression	s -> end_status == EOFC		9563449	0		==			
ANR	9563487	PtrMemberAccess	s -> end_status		9563449	0					
ANR	9563488	Identifier	s		9563449	0					
ANR	9563489	Identifier	end_status		9563449	1					
ANR	9563490	Identifier	EOFC		9563449	1					
ANR	9563491	PrimaryExpression	0		9563449	1					
ANR	9563492	PtrMemberAccess	s -> end_status		9563449	2					
ANR	9563493	Identifier	s		9563449	0					
ANR	9563494	Identifier	end_status		9563449	1					
ANR	9563495	ReturnType	int		9563449	1					
ANR	9563496	Identifier	s_std_read_flush		9563449	2					
ANR	9563497	ParameterList	stream * s		9563449	3					
ANR	9563498	Parameter	stream * s	242:17:6819:6828	9563449	0	True				
ANR	9563499	ParameterType	stream *		9563449	0					
ANR	9563500	Identifier	s		9563449	1					
ANR	9563501	CFGEntryNode	ENTRY		9563449		True				
ANR	9563502	CFGExitNode	EXIT		9563449		True				
ANR	9563503	Symbol	s		9563449						
ANR	9563504	Symbol	s -> srptr		9563449						
ANR	9563505	Symbol	s -> srlimit		9563449						
ANR	9563506	Symbol	EOFC		9563449						
ANR	9563507	Symbol	s -> cbuf		9563449						
ANR	9563508	Symbol	s -> end_status		9563449						
ANR	9563509	Symbol	* s		9563449						
ANR	9563510	Function	s_std_write_flush	254:0:7076:7154							
ANR	9563511	FunctionDef	s_std_write_flush (stream * s)		9563510	0					
ANR	9563512	CompoundStatement		256:0:7110:7154	9563510	0					
ANR	9563513	ReturnStatement	"return s_process_write_buf ( s , false ) ;"	257:4:7116:7152	9563510	0	True				
ANR	9563514	CallExpression	"s_process_write_buf ( s , false )"		9563510	0					
ANR	9563515	Callee	s_process_write_buf		9563510	0					
ANR	9563516	Identifier	s_process_write_buf		9563510	0					
ANR	9563517	ArgumentList	s		9563510	1					
ANR	9563518	Argument	s		9563510	0					
ANR	9563519	Identifier	s		9563510	0					
ANR	9563520	Argument	false		9563510	1					
ANR	9563521	Identifier	false		9563510	0					
ANR	9563522	ReturnType	int		9563510	1					
ANR	9563523	Identifier	s_std_write_flush		9563510	2					
ANR	9563524	ParameterList	stream * s		9563510	3					
ANR	9563525	Parameter	stream * s	255:18:7098:7107	9563510	0	True				
ANR	9563526	ParameterType	stream *		9563510	0					
ANR	9563527	Identifier	s		9563510	1					
ANR	9563528	CFGEntryNode	ENTRY		9563510		True				
ANR	9563529	CFGExitNode	EXIT		9563510		True				
ANR	9563530	Symbol	s		9563510						
ANR	9563531	Symbol	false		9563510						
ANR	9563532	Symbol	s_process_write_buf		9563510						
ANR	9563533	Function	s_std_noavailable	261:0:7225:7306							
ANR	9563534	FunctionDef	"s_std_noavailable (stream * s , gs_offset_t * pl)"		9563533	0					
ANR	9563535	CompoundStatement		263:0:7276:7306	9563533	0					
ANR	9563536	ExpressionStatement	* pl = - 1	264:4:7282:7290	9563533	0	True				
ANR	9563537	AssignmentExpression	* pl = - 1		9563533	0		=			
ANR	9563538	UnaryOperationExpression	* pl		9563533	0					
ANR	9563539	UnaryOperator	*		9563533	0					
ANR	9563540	Identifier	pl		9563533	1					
ANR	9563541	UnaryOperationExpression	- 1		9563533	1					
ANR	9563542	UnaryOperator	-		9563533	0					
ANR	9563543	PrimaryExpression	1		9563533	1					
ANR	9563544	ReturnStatement	return 0 ;	265:4:7296:7304	9563533	1	True				
ANR	9563545	PrimaryExpression	0		9563533	0					
ANR	9563546	ReturnType	int		9563533	1					
ANR	9563547	Identifier	s_std_noavailable		9563533	2					
ANR	9563548	ParameterList	"stream * s , gs_offset_t * pl"		9563533	3					
ANR	9563549	Parameter	stream * s	262:18:7247:7256	9563533	0	True				
ANR	9563550	ParameterType	stream *		9563533	0					
ANR	9563551	Identifier	s		9563533	1					
ANR	9563552	Parameter	gs_offset_t * pl	262:30:7259:7273	9563533	1	True				
ANR	9563553	ParameterType	gs_offset_t *		9563533	0					
ANR	9563554	Identifier	pl		9563533	1					
ANR	9563555	CFGEntryNode	ENTRY		9563533		True				
ANR	9563556	CFGExitNode	EXIT		9563533		True				
ANR	9563557	Symbol	* pl		9563533						
ANR	9563558	Symbol	s		9563533						
ANR	9563559	Symbol	pl		9563533						
ANR	9563560	Function	s_std_noseek	269:0:7353:7418							
ANR	9563561	FunctionDef	"s_std_noseek (stream * s , gs_offset_t pos)"		9563560	0					
ANR	9563562	CompoundStatement		271:0:7399:7418	9563560	0					
ANR	9563563	ReturnStatement	return ERRC ;	272:4:7405:7416	9563560	0	True				
ANR	9563564	Identifier	ERRC		9563560	0					
ANR	9563565	ReturnType	int		9563560	1					
ANR	9563566	Identifier	s_std_noseek		9563560	2					
ANR	9563567	ParameterList	"stream * s , gs_offset_t pos"		9563560	3					
ANR	9563568	Parameter	stream * s	270:13:7370:7379	9563560	0	True				
ANR	9563569	ParameterType	stream *		9563560	0					
ANR	9563570	Identifier	s		9563560	1					
ANR	9563571	Parameter	gs_offset_t pos	270:25:7382:7396	9563560	1	True				
ANR	9563572	ParameterType	gs_offset_t		9563560	0					
ANR	9563573	Identifier	pos		9563560	1					
ANR	9563574	CFGEntryNode	ENTRY		9563560		True				
ANR	9563575	CFGExitNode	EXIT		9563560		True				
ANR	9563576	Symbol	s		9563560						
ANR	9563577	Symbol	pos		9563560						
ANR	9563578	Symbol	ERRC		9563560						
ANR	9563579	Function	s_std_close	276:0:7452:7496							
ANR	9563580	FunctionDef	s_std_close (stream * s)		9563579	0					
ANR	9563581	CompoundStatement		278:0:7480:7496	9563579	0					
ANR	9563582	ReturnStatement	return 0 ;	279:4:7486:7494	9563579	0	True				
ANR	9563583	PrimaryExpression	0		9563579	0					
ANR	9563584	ReturnType	int		9563579	1					
ANR	9563585	Identifier	s_std_close		9563579	2					
ANR	9563586	ParameterList	stream * s		9563579	3					
ANR	9563587	Parameter	stream * s	277:12:7468:7477	9563579	0	True				
ANR	9563588	ParameterType	stream *		9563579	0					
ANR	9563589	Identifier	s		9563579	1					
ANR	9563590	CFGEntryNode	ENTRY		9563579		True				
ANR	9563591	CFGExitNode	EXIT		9563579		True				
ANR	9563592	Symbol	s		9563579						
ANR	9563593	Function	s_std_switch_mode	283:0:7537:7604							
ANR	9563594	FunctionDef	"s_std_switch_mode (stream * s , bool writing)"		9563593	0					
ANR	9563595	CompoundStatement		285:0:7585:7604	9563593	0					
ANR	9563596	ReturnStatement	return ERRC ;	286:4:7591:7602	9563593	0	True				
ANR	9563597	Identifier	ERRC		9563593	0					
ANR	9563598	ReturnType	int		9563593	1					
ANR	9563599	Identifier	s_std_switch_mode		9563593	2					
ANR	9563600	ParameterList	"stream * s , bool writing"		9563593	3					
ANR	9563601	Parameter	stream * s	284:18:7559:7568	9563593	0	True				
ANR	9563602	ParameterType	stream *		9563593	0					
ANR	9563603	Identifier	s		9563593	1					
ANR	9563604	Parameter	bool writing	284:30:7571:7582	9563593	1	True				
ANR	9563605	ParameterType	bool		9563593	0					
ANR	9563606	Identifier	writing		9563593	1					
ANR	9563607	CFGEntryNode	ENTRY		9563593		True				
ANR	9563608	CFGExitNode	EXIT		9563593		True				
ANR	9563609	Symbol	s		9563593						
ANR	9563610	Symbol	writing		9563593						
ANR	9563611	Symbol	ERRC		9563593						
ANR	9563612	Function	s_disable	290:0:7664:8651							
ANR	9563613	FunctionDef	s_disable (register stream * s)		9563612	0					
ANR	9563614	CompoundStatement		292:0:7700:8651	9563612	0					
ANR	9563615	ExpressionStatement	s -> cbuf = 0	293:4:7706:7717	9563612	0	True				
ANR	9563616	AssignmentExpression	s -> cbuf = 0		9563612	0		=			
ANR	9563617	PtrMemberAccess	s -> cbuf		9563612	0					
ANR	9563618	Identifier	s		9563612	0					
ANR	9563619	Identifier	cbuf		9563612	1					
ANR	9563620	PrimaryExpression	0		9563612	1					
ANR	9563621	ExpressionStatement	s -> bsize = 0	294:4:7723:7735	9563612	1	True				
ANR	9563622	AssignmentExpression	s -> bsize = 0		9563612	0		=			
ANR	9563623	PtrMemberAccess	s -> bsize		9563612	0					
ANR	9563624	Identifier	s		9563612	0					
ANR	9563625	Identifier	bsize		9563612	1					
ANR	9563626	PrimaryExpression	0		9563612	1					
ANR	9563627	ExpressionStatement	s -> end_status = EOFC	295:4:7741:7761	9563612	2	True				
ANR	9563628	AssignmentExpression	s -> end_status = EOFC		9563612	0		=			
ANR	9563629	PtrMemberAccess	s -> end_status		9563612	0					
ANR	9563630	Identifier	s		9563612	0					
ANR	9563631	Identifier	end_status		9563612	1					
ANR	9563632	Identifier	EOFC		9563612	1					
ANR	9563633	ExpressionStatement	s -> modes = 0	296:4:7767:7779	9563612	3	True				
ANR	9563634	AssignmentExpression	s -> modes = 0		9563612	0		=			
ANR	9563635	PtrMemberAccess	s -> modes		9563612	0					
ANR	9563636	Identifier	s		9563612	0					
ANR	9563637	Identifier	modes		9563612	1					
ANR	9563638	PrimaryExpression	0		9563612	1					
ANR	9563639	ExpressionStatement	s -> cbuf_string . data = 0	297:4:7785:7808	9563612	4	True				
ANR	9563640	AssignmentExpression	s -> cbuf_string . data = 0		9563612	0		=			
ANR	9563641	MemberAccess	s -> cbuf_string . data		9563612	0					
ANR	9563642	PtrMemberAccess	s -> cbuf_string		9563612	0					
ANR	9563643	Identifier	s		9563612	0					
ANR	9563644	Identifier	cbuf_string		9563612	1					
ANR	9563645	Identifier	data		9563612	1					
ANR	9563646	PrimaryExpression	0		9563612	1					
ANR	9563647	ExpressionStatement	s -> cursor . r . ptr = s -> cursor . r . limit = 0	301:4:7990:8029	9563612	5	True				
ANR	9563648	AssignmentExpression	s -> cursor . r . ptr = s -> cursor . r . limit = 0		9563612	0		=			
ANR	9563649	MemberAccess	s -> cursor . r . ptr		9563612	0					
ANR	9563650	MemberAccess	s -> cursor . r		9563612	0					
ANR	9563651	PtrMemberAccess	s -> cursor		9563612	0					
ANR	9563652	Identifier	s		9563612	0					
ANR	9563653	Identifier	cursor		9563612	1					
ANR	9563654	Identifier	r		9563612	1					
ANR	9563655	Identifier	ptr		9563612	1					
ANR	9563656	AssignmentExpression	s -> cursor . r . limit = 0		9563612	1		=			
ANR	9563657	MemberAccess	s -> cursor . r . limit		9563612	0					
ANR	9563658	MemberAccess	s -> cursor . r		9563612	0					
ANR	9563659	PtrMemberAccess	s -> cursor		9563612	0					
ANR	9563660	Identifier	s		9563612	0					
ANR	9563661	Identifier	cursor		9563612	1					
ANR	9563662	Identifier	r		9563612	1					
ANR	9563663	Identifier	limit		9563612	1					
ANR	9563664	PrimaryExpression	0		9563612	1					
ANR	9563665	ExpressionStatement	s -> cursor . w . limit = 0	302:4:8035:8056	9563612	6	True				
ANR	9563666	AssignmentExpression	s -> cursor . w . limit = 0		9563612	0		=			
ANR	9563667	MemberAccess	s -> cursor . w . limit		9563612	0					
ANR	9563668	MemberAccess	s -> cursor . w		9563612	0					
ANR	9563669	PtrMemberAccess	s -> cursor		9563612	0					
ANR	9563670	Identifier	s		9563612	0					
ANR	9563671	Identifier	cursor		9563612	1					
ANR	9563672	Identifier	w		9563612	1					
ANR	9563673	Identifier	limit		9563612	1					
ANR	9563674	PrimaryExpression	0		9563612	1					
ANR	9563675	ExpressionStatement	s -> procs . close = s_std_null	303:4:8062:8089	9563612	7	True				
ANR	9563676	AssignmentExpression	s -> procs . close = s_std_null		9563612	0		=			
ANR	9563677	MemberAccess	s -> procs . close		9563612	0					
ANR	9563678	PtrMemberAccess	s -> procs		9563612	0					
ANR	9563679	Identifier	s		9563612	0					
ANR	9563680	Identifier	procs		9563612	1					
ANR	9563681	Identifier	close		9563612	1					
ANR	9563682	Identifier	s_std_null		9563612	1					
ANR	9563683	ExpressionStatement	s -> strm = 0	305:4:8127:8138	9563612	8	True				
ANR	9563684	AssignmentExpression	s -> strm = 0		9563612	0		=			
ANR	9563685	PtrMemberAccess	s -> strm		9563612	0					
ANR	9563686	Identifier	s		9563612	0					
ANR	9563687	Identifier	strm		9563612	1					
ANR	9563688	PrimaryExpression	0		9563612	1					
ANR	9563689	ExpressionStatement	s -> state = ( stream_state * ) s	306:4:8144:8173	9563612	9	True				
ANR	9563690	AssignmentExpression	s -> state = ( stream_state * ) s		9563612	0		=			
ANR	9563691	PtrMemberAccess	s -> state		9563612	0					
ANR	9563692	Identifier	s		9563612	0					
ANR	9563693	Identifier	state		9563612	1					
ANR	9563694	CastExpression	( stream_state * ) s		9563612	1					
ANR	9563695	CastTarget	stream_state *		9563612	0					
ANR	9563696	Identifier	s		9563612	1					
ANR	9563697	ExpressionStatement	s -> templat = & s_no_template	307:4:8179:8206	9563612	10	True				
ANR	9563698	AssignmentExpression	s -> templat = & s_no_template		9563612	0		=			
ANR	9563699	PtrMemberAccess	s -> templat		9563612	0					
ANR	9563700	Identifier	s		9563612	0					
ANR	9563701	Identifier	templat		9563612	1					
ANR	9563702	UnaryOperationExpression	& s_no_template		9563612	1					
ANR	9563703	UnaryOperator	&		9563612	0					
ANR	9563704	Identifier	s_no_template		9563612	1					
ANR	9563705	IfStatement	if ( s -> file_name . data )		9563612	11					
ANR	9563706	Condition	s -> file_name . data	309:8:8246:8262	9563612	0	True				
ANR	9563707	MemberAccess	s -> file_name . data		9563612	0					
ANR	9563708	PtrMemberAccess	s -> file_name		9563612	0					
ANR	9563709	Identifier	s		9563612	0					
ANR	9563710	Identifier	file_name		9563612	1					
ANR	9563711	Identifier	data		9563612	1					
ANR	9563712	CompoundStatement		18:27:564:564	9563612	1					
ANR	9563713	IfStatement	if ( s -> memory )		9563612	0					
ANR	9563714	Condition	s -> memory	310:12:8279:8287	9563612	0	True				
ANR	9563715	PtrMemberAccess	s -> memory		9563612	0					
ANR	9563716	Identifier	s		9563612	0					
ANR	9563717	Identifier	memory		9563612	1					
ANR	9563718	CompoundStatement		19:23:589:589	9563612	1					
ANR	9563719	ExpressionStatement	"gs_free_const_string ( s -> memory , s -> file_name . data , s -> file_name . size , ""s_disable(file_name)"" )"	311:12:8304:8430	9563612	0	True				
ANR	9563720	CallExpression	"gs_free_const_string ( s -> memory , s -> file_name . data , s -> file_name . size , ""s_disable(file_name)"" )"		9563612	0					
ANR	9563721	Callee	gs_free_const_string		9563612	0					
ANR	9563722	Identifier	gs_free_const_string		9563612	0					
ANR	9563723	ArgumentList	s -> memory		9563612	1					
ANR	9563724	Argument	s -> memory		9563612	0					
ANR	9563725	PtrMemberAccess	s -> memory		9563612	0					
ANR	9563726	Identifier	s		9563612	0					
ANR	9563727	Identifier	memory		9563612	1					
ANR	9563728	Argument	s -> file_name . data		9563612	1					
ANR	9563729	MemberAccess	s -> file_name . data		9563612	0					
ANR	9563730	PtrMemberAccess	s -> file_name		9563612	0					
ANR	9563731	Identifier	s		9563612	0					
ANR	9563732	Identifier	file_name		9563612	1					
ANR	9563733	Identifier	data		9563612	1					
ANR	9563734	Argument	s -> file_name . size		9563612	2					
ANR	9563735	MemberAccess	s -> file_name . size		9563612	0					
ANR	9563736	PtrMemberAccess	s -> file_name		9563612	0					
ANR	9563737	Identifier	s		9563612	0					
ANR	9563738	Identifier	file_name		9563612	1					
ANR	9563739	Identifier	size		9563612	1					
ANR	9563740	Argument	"""s_disable(file_name)"""		9563612	3					
ANR	9563741	PrimaryExpression	"""s_disable(file_name)"""		9563612	0					
ANR	9563742	ExpressionStatement	s -> file_name . data = 0	314:8:8450:8471	9563612	1	True				
ANR	9563743	AssignmentExpression	s -> file_name . data = 0		9563612	0		=			
ANR	9563744	MemberAccess	s -> file_name . data		9563612	0					
ANR	9563745	PtrMemberAccess	s -> file_name		9563612	0					
ANR	9563746	Identifier	s		9563612	0					
ANR	9563747	Identifier	file_name		9563612	1					
ANR	9563748	Identifier	data		9563612	1					
ANR	9563749	PrimaryExpression	0		9563612	1					
ANR	9563750	ExpressionStatement	s -> file_name . size = 0	315:8:8481:8502	9563612	2	True				
ANR	9563751	AssignmentExpression	s -> file_name . size = 0		9563612	0		=			
ANR	9563752	MemberAccess	s -> file_name . size		9563612	0					
ANR	9563753	PtrMemberAccess	s -> file_name		9563612	0					
ANR	9563754	Identifier	s		9563612	0					
ANR	9563755	Identifier	file_name		9563612	1					
ANR	9563756	Identifier	size		9563612	1					
ANR	9563757	PrimaryExpression	0		9563612	1					
ANR	9563758	IfStatement	if ( s -> memory )		9563612	12					
ANR	9563759	Condition	s -> memory	318:8:8563:8571	9563612	0	True				
ANR	9563760	PtrMemberAccess	s -> memory		9563612	0					
ANR	9563761	Identifier	s		9563612	0					
ANR	9563762	Identifier	memory		9563612	1					
ANR	9563763	CompoundStatement		27:19:873:873	9563612	1					
ANR	9563764	ExpressionStatement	"if_debug1m ( 's' , s -> memory , ""[s]disable 0x%lx\\n"" , ( ulong ) s )"	319:8:8584:8643	9563612	0	True				
ANR	9563765	CallExpression	"if_debug1m ( 's' , s -> memory , ""[s]disable 0x%lx\\n"" , ( ulong ) s )"		9563612	0					
ANR	9563766	Callee	if_debug1m		9563612	0					
ANR	9563767	Identifier	if_debug1m		9563612	0					
ANR	9563768	ArgumentList	's'		9563612	1					
ANR	9563769	Argument	's'		9563612	0					
ANR	9563770	PrimaryExpression	's'		9563612	0					
ANR	9563771	Argument	s -> memory		9563612	1					
ANR	9563772	PtrMemberAccess	s -> memory		9563612	0					
ANR	9563773	Identifier	s		9563612	0					
ANR	9563774	Identifier	memory		9563612	1					
ANR	9563775	Argument	"""[s]disable 0x%lx\\n"""		9563612	2					
ANR	9563776	PrimaryExpression	"""[s]disable 0x%lx\\n"""		9563612	0					
ANR	9563777	Argument	( ulong ) s		9563612	3					
ANR	9563778	CastExpression	( ulong ) s		9563612	0					
ANR	9563779	CastTarget	ulong		9563612	0					
ANR	9563780	Identifier	s		9563612	1					
ANR	9563781	ReturnType	void		9563612	1					
ANR	9563782	Identifier	s_disable		9563612	2					
ANR	9563783	ParameterList	register stream * s		9563612	3					
ANR	9563784	Parameter	register stream * s	291:10:7679:7697	9563612	0	True				
ANR	9563785	ParameterType	register stream *		9563612	0					
ANR	9563786	Identifier	s		9563612	1					
ANR	9563787	CFGEntryNode	ENTRY		9563612		True				
ANR	9563788	CFGExitNode	EXIT		9563612		True				
ANR	9563789	Symbol	s -> cursor . w . limit		9563612						
ANR	9563790	Symbol	EOFC		9563612						
ANR	9563791	Symbol	s -> cursor . r . ptr		9563612						
ANR	9563792	Symbol	s -> cbuf		9563612						
ANR	9563793	Symbol	s -> templat		9563612						
ANR	9563794	Symbol	s -> cursor . w		9563612						
ANR	9563795	Symbol	s -> file_name . size		9563612						
ANR	9563796	Symbol	s -> cursor . r		9563612						
ANR	9563797	Symbol	s -> bsize		9563612						
ANR	9563798	Symbol	s -> file_name		9563612						
ANR	9563799	Symbol	s -> cbuf_string . data		9563612						
ANR	9563800	Symbol	s_std_null		9563612						
ANR	9563801	Symbol	s -> strm		9563612						
ANR	9563802	Symbol	s -> cursor		9563612						
ANR	9563803	Symbol	& s_no_template		9563612						
ANR	9563804	Symbol	s -> procs . close		9563612						
ANR	9563805	Symbol	s -> procs		9563612						
ANR	9563806	Symbol	s -> state		9563612						
ANR	9563807	Symbol	s -> memory		9563612						
ANR	9563808	Symbol	s -> cursor . r . limit		9563612						
ANR	9563809	Symbol	s -> cbuf_string		9563612						
ANR	9563810	Symbol	s		9563612						
ANR	9563811	Symbol	s -> end_status		9563612						
ANR	9563812	Symbol	s -> file_name . data		9563612						
ANR	9563813	Symbol	* s		9563612						
ANR	9563814	Symbol	s -> modes		9563612						
ANR	9563815	Function	s_filter_write_flush	324:0:8701:8870							
ANR	9563816	FunctionDef	s_filter_write_flush (register stream * s)		9563815	0					
ANR	9563817	CompoundStatement		326:0:8747:8870	9563815	0					
ANR	9563818	IdentifierDeclStatement	"int status = s_process_write_buf ( s , false ) ;"	327:4:8753:8795	9563815	0	True				
ANR	9563819	IdentifierDecl	"status = s_process_write_buf ( s , false )"		9563815	0					
ANR	9563820	IdentifierDeclType	int		9563815	0					
ANR	9563821	Identifier	status		9563815	1					
ANR	9563822	AssignmentExpression	"status = s_process_write_buf ( s , false )"		9563815	2		=			
ANR	9563823	Identifier	status		9563815	0					
ANR	9563824	CallExpression	"s_process_write_buf ( s , false )"		9563815	1					
ANR	9563825	Callee	s_process_write_buf		9563815	0					
ANR	9563826	Identifier	s_process_write_buf		9563815	0					
ANR	9563827	ArgumentList	s		9563815	1					
ANR	9563828	Argument	s		9563815	0					
ANR	9563829	Identifier	s		9563815	0					
ANR	9563830	Argument	false		9563815	1					
ANR	9563831	Identifier	false		9563815	0					
ANR	9563832	IfStatement	if ( status != 0 )		9563815	1					
ANR	9563833	Condition	status != 0	329:8:8806:8816	9563815	0	True				
ANR	9563834	EqualityExpression	status != 0		9563815	0		!=			
ANR	9563835	Identifier	status		9563815	0					
ANR	9563836	PrimaryExpression	0		9563815	1					
ANR	9563837	ReturnStatement	return status ;	330:8:8827:8840	9563815	1	True				
ANR	9563838	Identifier	status		9563815	0					
ANR	9563839	ReturnStatement	return sflush ( s -> strm ) ;	331:4:8846:8868	9563815	2	True				
ANR	9563840	CallExpression	sflush ( s -> strm )		9563815	0					
ANR	9563841	Callee	sflush		9563815	0					
ANR	9563842	Identifier	sflush		9563815	0					
ANR	9563843	ArgumentList	s -> strm		9563815	1					
ANR	9563844	Argument	s -> strm		9563815	0					
ANR	9563845	PtrMemberAccess	s -> strm		9563815	0					
ANR	9563846	Identifier	s		9563815	0					
ANR	9563847	Identifier	strm		9563815	1					
ANR	9563848	ReturnType	int		9563815	1					
ANR	9563849	Identifier	s_filter_write_flush		9563815	2					
ANR	9563850	ParameterList	register stream * s		9563815	3					
ANR	9563851	Parameter	register stream * s	325:21:8726:8744	9563815	0	True				
ANR	9563852	ParameterType	register stream *		9563815	0					
ANR	9563853	Identifier	s		9563815	1					
ANR	9563854	CFGEntryNode	ENTRY		9563815		True				
ANR	9563855	CFGExitNode	EXIT		9563815		True				
ANR	9563856	Symbol	s		9563815						
ANR	9563857	Symbol	false		9563815						
ANR	9563858	Symbol	sflush		9563815						
ANR	9563859	Symbol	* s		9563815						
ANR	9563860	Symbol	status		9563815						
ANR	9563861	Symbol	s_process_write_buf		9563815						
ANR	9563862	Symbol	s -> strm		9563815						
ANR	9563863	Function	s_filter_close	336:0:9018:9564							
ANR	9563864	FunctionDef	s_filter_close (register stream * s)		9563863	0					
ANR	9563865	CompoundStatement		338:0:9058:9564	9563863	0					
ANR	9563866	IdentifierDeclStatement	int status ;	339:4:9064:9074	9563863	0	True				
ANR	9563867	IdentifierDecl	status		9563863	0					
ANR	9563868	IdentifierDeclType	int		9563863	0					
ANR	9563869	Identifier	status		9563863	1					
ANR	9563870	IdentifierDeclStatement	bool close = s -> close_strm ;	340:4:9080:9106	9563863	1	True				
ANR	9563871	IdentifierDecl	close = s -> close_strm		9563863	0					
ANR	9563872	IdentifierDeclType	bool		9563863	0					
ANR	9563873	Identifier	close		9563863	1					
ANR	9563874	AssignmentExpression	close = s -> close_strm		9563863	2		=			
ANR	9563875	Identifier	close		9563863	0					
ANR	9563876	PtrMemberAccess	s -> close_strm		9563863	1					
ANR	9563877	Identifier	s		9563863	0					
ANR	9563878	Identifier	close_strm		9563863	1					
ANR	9563879	IdentifierDeclStatement	stream * stemp = s -> strm ;	341:4:9112:9135	9563863	2	True				
ANR	9563880	IdentifierDecl	* stemp = s -> strm		9563863	0					
ANR	9563881	IdentifierDeclType	stream *		9563863	0					
ANR	9563882	Identifier	stemp		9563863	1					
ANR	9563883	AssignmentExpression	* stemp = s -> strm		9563863	2		=			
ANR	9563884	Identifier	stemp		9563863	0					
ANR	9563885	PtrMemberAccess	s -> strm		9563863	1					
ANR	9563886	Identifier	s		9563863	0					
ANR	9563887	Identifier	strm		9563863	1					
ANR	9563888	IfStatement	if ( s_is_writing ( s ) )		9563863	3					
ANR	9563889	Condition	s_is_writing ( s )	343:8:9146:9160	9563863	0	True				
ANR	9563890	CallExpression	s_is_writing ( s )		9563863	0					
ANR	9563891	Callee	s_is_writing		9563863	0					
ANR	9563892	Identifier	s_is_writing		9563863	0					
ANR	9563893	ArgumentList	s		9563863	1					
ANR	9563894	Argument	s		9563863	0					
ANR	9563895	Identifier	s		9563863	0					
ANR	9563896	CompoundStatement		7:8:114:155	9563863	1					
ANR	9563897	IdentifierDeclStatement	"int status = s_process_write_buf ( s , true ) ;"	344:8:9173:9214	9563863	0	True				
ANR	9563898	IdentifierDecl	"status = s_process_write_buf ( s , true )"		9563863	0					
ANR	9563899	IdentifierDeclType	int		9563863	0					
ANR	9563900	Identifier	status		9563863	1					
ANR	9563901	AssignmentExpression	"status = s_process_write_buf ( s , true )"		9563863	2		=			
ANR	9563902	Identifier	status		9563863	0					
ANR	9563903	CallExpression	"s_process_write_buf ( s , true )"		9563863	1					
ANR	9563904	Callee	s_process_write_buf		9563863	0					
ANR	9563905	Identifier	s_process_write_buf		9563863	0					
ANR	9563906	ArgumentList	s		9563863	1					
ANR	9563907	Argument	s		9563863	0					
ANR	9563908	Identifier	s		9563863	0					
ANR	9563909	Argument	true		9563863	1					
ANR	9563910	Identifier	true		9563863	0					
ANR	9563911	IfStatement	if ( status != 0 && status != EOFC )		9563863	1					
ANR	9563912	Condition	status != 0 && status != EOFC	346:12:9229:9257	9563863	0	True				
ANR	9563913	AndExpression	status != 0 && status != EOFC		9563863	0		&&			
ANR	9563914	EqualityExpression	status != 0		9563863	0		!=			
ANR	9563915	Identifier	status		9563863	0					
ANR	9563916	PrimaryExpression	0		9563863	1					
ANR	9563917	EqualityExpression	status != EOFC		9563863	1		!=			
ANR	9563918	Identifier	status		9563863	0					
ANR	9563919	Identifier	EOFC		9563863	1					
ANR	9563920	ReturnStatement	return status ;	347:12:9272:9285	9563863	1	True				
ANR	9563921	Identifier	status		9563863	0					
ANR	9563922	ExpressionStatement	status = sflush ( stemp )	348:8:9295:9317	9563863	2	True				
ANR	9563923	AssignmentExpression	status = sflush ( stemp )		9563863	0		=			
ANR	9563924	Identifier	status		9563863	0					
ANR	9563925	CallExpression	sflush ( stemp )		9563863	1					
ANR	9563926	Callee	sflush		9563863	0					
ANR	9563927	Identifier	sflush		9563863	0					
ANR	9563928	ArgumentList	stemp		9563863	1					
ANR	9563929	Argument	stemp		9563863	0					
ANR	9563930	Identifier	stemp		9563863	0					
ANR	9563931	IfStatement	if ( status != 0 && status != EOFC )		9563863	3					
ANR	9563932	Condition	status != 0 && status != EOFC	349:12:9331:9359	9563863	0	True				
ANR	9563933	AndExpression	status != 0 && status != EOFC		9563863	0		&&			
ANR	9563934	EqualityExpression	status != 0		9563863	0		!=			
ANR	9563935	Identifier	status		9563863	0					
ANR	9563936	PrimaryExpression	0		9563863	1					
ANR	9563937	EqualityExpression	status != EOFC		9563863	1		!=			
ANR	9563938	Identifier	status		9563863	0					
ANR	9563939	Identifier	EOFC		9563863	1					
ANR	9563940	ReturnStatement	return status ;	350:12:9374:9387	9563863	1	True				
ANR	9563941	Identifier	status		9563863	0					
ANR	9563942	ExpressionStatement	status = s_std_close ( s )	352:4:9399:9422	9563863	4	True				
ANR	9563943	AssignmentExpression	status = s_std_close ( s )		9563863	0		=			
ANR	9563944	Identifier	status		9563863	0					
ANR	9563945	CallExpression	s_std_close ( s )		9563863	1					
ANR	9563946	Callee	s_std_close		9563863	0					
ANR	9563947	Identifier	s_std_close		9563863	0					
ANR	9563948	ArgumentList	s		9563863	1					
ANR	9563949	Argument	s		9563863	0					
ANR	9563950	Identifier	s		9563863	0					
ANR	9563951	IfStatement	if ( status != 0 && status != EOFC )		9563863	5					
ANR	9563952	Condition	status != 0 && status != EOFC	353:8:9432:9460	9563863	0	True				
ANR	9563953	AndExpression	status != 0 && status != EOFC		9563863	0		&&			
ANR	9563954	EqualityExpression	status != 0		9563863	0		!=			
ANR	9563955	Identifier	status		9563863	0					
ANR	9563956	PrimaryExpression	0		9563863	1					
ANR	9563957	EqualityExpression	status != EOFC		9563863	1		!=			
ANR	9563958	Identifier	status		9563863	0					
ANR	9563959	Identifier	EOFC		9563863	1					
ANR	9563960	ReturnStatement	return status ;	354:8:9471:9484	9563863	1	True				
ANR	9563961	Identifier	status		9563863	0					
ANR	9563962	IfStatement	if ( close && stemp != 0 )		9563863	6					
ANR	9563963	Condition	close && stemp != 0	355:8:9494:9512	9563863	0	True				
ANR	9563964	AndExpression	close && stemp != 0		9563863	0		&&			
ANR	9563965	Identifier	close		9563863	0					
ANR	9563966	EqualityExpression	stemp != 0		9563863	1		!=			
ANR	9563967	Identifier	stemp		9563863	0					
ANR	9563968	PrimaryExpression	0		9563863	1					
ANR	9563969	ReturnStatement	return sclose ( stemp ) ;	356:8:9523:9543	9563863	1	True				
ANR	9563970	CallExpression	sclose ( stemp )		9563863	0					
ANR	9563971	Callee	sclose		9563863	0					
ANR	9563972	Identifier	sclose		9563863	0					
ANR	9563973	ArgumentList	stemp		9563863	1					
ANR	9563974	Argument	stemp		9563863	0					
ANR	9563975	Identifier	stemp		9563863	0					
ANR	9563976	ReturnStatement	return status ;	357:4:9549:9562	9563863	7	True				
ANR	9563977	Identifier	status		9563863	0					
ANR	9563978	ReturnType	int		9563863	1					
ANR	9563979	Identifier	s_filter_close		9563863	2					
ANR	9563980	ParameterList	register stream * s		9563863	3					
ANR	9563981	Parameter	register stream * s	337:15:9037:9055	9563863	0	True				
ANR	9563982	ParameterType	register stream *		9563863	0					
ANR	9563983	Identifier	s		9563863	1					
ANR	9563984	CFGEntryNode	ENTRY		9563863		True				
ANR	9563985	CFGExitNode	EXIT		9563863		True				
ANR	9563986	Symbol	s_std_close		9563863						
ANR	9563987	Symbol	sclose		9563863						
ANR	9563988	Symbol	EOFC		9563863						
ANR	9563989	Symbol	s -> close_strm		9563863						
ANR	9563990	Symbol	stemp		9563863						
ANR	9563991	Symbol	s		9563863						
ANR	9563992	Symbol	s_is_writing		9563863						
ANR	9563993	Symbol	true		9563863						
ANR	9563994	Symbol	sflush		9563863						
ANR	9563995	Symbol	* s		9563863						
ANR	9563996	Symbol	close		9563863						
ANR	9563997	Symbol	status		9563863						
ANR	9563998	Symbol	s -> strm		9563863						
ANR	9563999	Symbol	s_process_write_buf		9563863						
ANR	9564000	Function	s_no_report_error	361:0:9607:9681							
ANR	9564001	FunctionDef	"s_no_report_error (stream_state * st , const char * str)"		9564000	0					
ANR	9564002	CompoundStatement		363:0:9665:9681	9564000	0					
ANR	9564003	ReturnStatement	return 0 ;	364:4:9671:9679	9564000	0	True				
ANR	9564004	PrimaryExpression	0		9564000	0					
ANR	9564005	ReturnType	int		9564000	1					
ANR	9564006	Identifier	s_no_report_error		9564000	2					
ANR	9564007	ParameterList	"stream_state * st , const char * str"		9564000	3					
ANR	9564008	Parameter	stream_state * st	362:18:9629:9645	9564000	0	True				
ANR	9564009	ParameterType	stream_state *		9564000	0					
ANR	9564010	Identifier	st		9564000	1					
ANR	9564011	Parameter	const char * str	362:37:9648:9662	9564000	1	True				
ANR	9564012	ParameterType	const char *		9564000	0					
ANR	9564013	Identifier	str		9564000	1					
ANR	9564014	CFGEntryNode	ENTRY		9564000		True				
ANR	9564015	CFGExitNode	EXIT		9564000		True				
ANR	9564016	Symbol	str		9564000						
ANR	9564017	Symbol	st		9564000						
ANR	9564018	DeclStmt									
ANR	9564019	Decl							const stream_procs	const stream_procs	s_filter_read_procs
ANR	9564020	DeclStmt									
ANR	9564021	Decl							const stream_procs	const stream_procs	s_filter_write_procs
ANR	9564022	Function	savailable	382:0:10139:10229							
ANR	9564023	FunctionDef	"savailable (stream * s , gs_offset_t * pl)"		9564022	0					
ANR	9564024	CompoundStatement		384:0:10183:10229	9564022	0					
ANR	9564025	ReturnStatement	"return ( * ( s ) -> procs . available ) ( s , pl ) ;"	385:4:10189:10227	9564022	0	True				
ANR	9564026	CallExpression	"( * ( s ) -> procs . available ) ( s , pl )"		9564022	0					
ANR	9564027	Callee	* ( s ) -> procs . available		9564022	0					
ANR	9564028	UnaryOperationExpression	* ( s ) -> procs . available		9564022	0					
ANR	9564029	UnaryOperator	*		9564022	0					
ANR	9564030	MemberAccess	( s ) -> procs . available		9564022	1					
ANR	9564031	PtrMemberAccess	( s ) -> procs		9564022	0					
ANR	9564032	Identifier	s		9564022	0					
ANR	9564033	Identifier	procs		9564022	1					
ANR	9564034	Identifier	available		9564022	1					
ANR	9564035	ArgumentList	s		9564022	1					
ANR	9564036	Argument	s		9564022	0					
ANR	9564037	Identifier	s		9564022	0					
ANR	9564038	Argument	pl		9564022	1					
ANR	9564039	Identifier	pl		9564022	0					
ANR	9564040	ReturnType	int		9564022	1					
ANR	9564041	Identifier	savailable		9564022	2					
ANR	9564042	ParameterList	"stream * s , gs_offset_t * pl"		9564022	3					
ANR	9564043	Parameter	stream * s	383:11:10154:10163	9564022	0	True				
ANR	9564044	ParameterType	stream *		9564022	0					
ANR	9564045	Identifier	s		9564022	1					
ANR	9564046	Parameter	gs_offset_t * pl	383:23:10166:10180	9564022	1	True				
ANR	9564047	ParameterType	gs_offset_t *		9564022	0					
ANR	9564048	Identifier	pl		9564022	1					
ANR	9564049	CFGEntryNode	ENTRY		9564022		True				
ANR	9564050	CFGExitNode	EXIT		9564022		True				
ANR	9564051	Symbol	s		9564022						
ANR	9564052	Symbol	* ( s ) -> procs . available		9564022						
ANR	9564053	Symbol	( s ) -> procs		9564022						
ANR	9564054	Symbol	( s ) -> procs . available		9564022						
ANR	9564055	Symbol	* * s		9564022						
ANR	9564056	Symbol	* ( s ) -> procs		9564022						
ANR	9564057	Symbol	pl		9564022						
ANR	9564058	Symbol	* s		9564022						
ANR	9564059	Function	stell	389:0:10279:10551							
ANR	9564060	FunctionDef	stell (stream * s)		9564059	0					
ANR	9564061	CompoundStatement		391:0:10309:10551	9564059	0					
ANR	9564062	IdentifierDeclStatement	const byte * ptr = ( s_is_writing ( s ) ? s -> swptr : s -> srptr ) ;	396:4:10430:10487	9564059	0	True				
ANR	9564063	IdentifierDecl	* ptr = ( s_is_writing ( s ) ? s -> swptr : s -> srptr )		9564059	0					
ANR	9564064	IdentifierDeclType	const byte *		9564059	0					
ANR	9564065	Identifier	ptr		9564059	1					
ANR	9564066	AssignmentExpression	* ptr = ( s_is_writing ( s ) ? s -> swptr : s -> srptr )		9564059	2		=			
ANR	9564067	Identifier	ptr		9564059	0					
ANR	9564068	ConditionalExpression	s_is_writing ( s ) ? s -> swptr : s -> srptr		9564059	1					
ANR	9564069	Condition	s_is_writing ( s )		9564059	0					
ANR	9564070	CallExpression	s_is_writing ( s )		9564059	0					
ANR	9564071	Callee	s_is_writing		9564059	0					
ANR	9564072	Identifier	s_is_writing		9564059	0					
ANR	9564073	ArgumentList	s		9564059	1					
ANR	9564074	Argument	s		9564059	0					
ANR	9564075	Identifier	s		9564059	0					
ANR	9564076	PtrMemberAccess	s -> swptr		9564059	1					
ANR	9564077	Identifier	s		9564059	0					
ANR	9564078	Identifier	swptr		9564059	1					
ANR	9564079	PtrMemberAccess	s -> srptr		9564059	2					
ANR	9564080	Identifier	s		9564059	0					
ANR	9564081	Identifier	srptr		9564059	1					
ANR	9564082	ReturnStatement	return ( ptr == 0 ? 0 : ptr + 1 - s -> cbuf ) + s -> position ;	398:4:10494:10549	9564059	1	True				
ANR	9564083	AdditiveExpression	( ptr == 0 ? 0 : ptr + 1 - s -> cbuf ) + s -> position		9564059	0		+			
ANR	9564084	ConditionalExpression	ptr == 0 ? 0 : ptr + 1 - s -> cbuf		9564059	0					
ANR	9564085	Condition	ptr == 0		9564059	0					
ANR	9564086	EqualityExpression	ptr == 0		9564059	0		==			
ANR	9564087	Identifier	ptr		9564059	0					
ANR	9564088	PrimaryExpression	0		9564059	1					
ANR	9564089	PrimaryExpression	0		9564059	1					
ANR	9564090	AdditiveExpression	ptr + 1 - s -> cbuf		9564059	2		+			
ANR	9564091	Identifier	ptr		9564059	0					
ANR	9564092	AdditiveExpression	1 - s -> cbuf		9564059	1		-			
ANR	9564093	PrimaryExpression	1		9564059	0					
ANR	9564094	PtrMemberAccess	s -> cbuf		9564059	1					
ANR	9564095	Identifier	s		9564059	0					
ANR	9564096	Identifier	cbuf		9564059	1					
ANR	9564097	PtrMemberAccess	s -> position		9564059	1					
ANR	9564098	Identifier	s		9564059	0					
ANR	9564099	Identifier	position		9564059	1					
ANR	9564100	ReturnType	gs_offset_t		9564059	1					
ANR	9564101	Identifier	stell		9564059	2					
ANR	9564102	ParameterList	stream * s		9564059	3					
ANR	9564103	Parameter	stream * s	390:6:10297:10306	9564059	0	True				
ANR	9564104	ParameterType	stream *		9564059	0					
ANR	9564105	Identifier	s		9564059	1					
ANR	9564106	CFGEntryNode	ENTRY		9564059		True				
ANR	9564107	CFGExitNode	EXIT		9564059		True				
ANR	9564108	Symbol	s -> swptr		9564059						
ANR	9564109	Symbol	s		9564059						
ANR	9564110	Symbol	s -> srptr		9564059						
ANR	9564111	Symbol	s -> position		9564059						
ANR	9564112	Symbol	s_is_writing		9564059						
ANR	9564113	Symbol	s -> cbuf		9564059						
ANR	9564114	Symbol	* s		9564059						
ANR	9564115	Symbol	ptr		9564059						
ANR	9564116	Function	spseek	402:0:10590:10828							
ANR	9564117	FunctionDef	"spseek (stream * s , gs_offset_t pos)"		9564116	0					
ANR	9564118	CompoundStatement		404:0:10630:10828	9564116	0					
ANR	9564119	Statement	if_debug3m	405:4:10636:10645	9564116	0	True				
ANR	9564120	Statement	(	405:14:10646:10646	9564116	1	True				
ANR	9564121	Statement	's'	405:15:10647:10649	9564116	2	True				
ANR	9564122	Statement	","	405:18:10650:10650	9564116	3	True				
ANR	9564123	Statement	s	405:20:10652:10652	9564116	4	True				
ANR	9564124	Statement	->	405:21:10653:10654	9564116	5	True				
ANR	9564125	Statement	memory	405:23:10655:10660	9564116	6	True				
ANR	9564126	Statement	","	405:29:10661:10661	9564116	7	True				
ANR	9564127	Statement	"""[s]seek 0x%"""	405:31:10663:10675	9564116	8	True				
ANR	9564128	Statement	PRIx64	405:44:10676:10681	9564116	9	True				
ANR	9564129	Statement	""" to %"""	405:50:10682:10688	9564116	10	True				
ANR	9564130	Statement	PRId64	405:57:10689:10694	9564116	11	True				
ANR	9564131	Statement	""", position was %"""	405:63:10695:10712	9564116	12	True				
ANR	9564132	Statement	PRId64	405:81:10713:10718	9564116	13	True				
ANR	9564133	Statement	"""\\n"""	405:87:10719:10722	9564116	14	True				
ANR	9564134	Statement	","	405:91:10723:10723	9564116	15	True				
ANR	9564135	Statement	(	406:16:10741:10741	9564116	16	True				
ANR	9564136	Statement	uint64_t	406:17:10742:10749	9564116	17	True				
ANR	9564137	Statement	)	406:25:10750:10750	9564116	18	True				
ANR	9564138	Statement	s	406:26:10751:10751	9564116	19	True				
ANR	9564139	Statement	","	406:27:10752:10752	9564116	20	True				
ANR	9564140	Statement	(	406:29:10754:10754	9564116	21	True				
ANR	9564141	Statement	int64_t	406:30:10755:10761	9564116	22	True				
ANR	9564142	Statement	)	406:37:10762:10762	9564116	23	True				
ANR	9564143	Statement	pos	406:38:10763:10765	9564116	24	True				
ANR	9564144	Statement	","	406:41:10766:10766	9564116	25	True				
ANR	9564145	Statement	(	406:43:10768:10768	9564116	26	True				
ANR	9564146	Statement	int64_t	406:44:10769:10775	9564116	27	True				
ANR	9564147	Statement	)	406:51:10776:10776	9564116	28	True				
ANR	9564148	Statement	stell	406:52:10777:10781	9564116	29	True				
ANR	9564149	Statement	(	406:57:10782:10782	9564116	30	True				
ANR	9564150	Statement	s	406:58:10783:10783	9564116	31	True				
ANR	9564151	Statement	)	406:59:10784:10784	9564116	32	True				
ANR	9564152	Statement	)	406:60:10785:10785	9564116	33	True				
ANR	9564153	ExpressionStatement		406:61:10786:10786	9564116	34	True				
ANR	9564154	ReturnStatement	"return ( * ( s ) -> procs . seek ) ( s , pos ) ;"	407:4:10792:10826	9564116	35	True				
ANR	9564155	CallExpression	"( * ( s ) -> procs . seek ) ( s , pos )"		9564116	0					
ANR	9564156	Callee	* ( s ) -> procs . seek		9564116	0					
ANR	9564157	UnaryOperationExpression	* ( s ) -> procs . seek		9564116	0					
ANR	9564158	UnaryOperator	*		9564116	0					
ANR	9564159	MemberAccess	( s ) -> procs . seek		9564116	1					
ANR	9564160	PtrMemberAccess	( s ) -> procs		9564116	0					
ANR	9564161	Identifier	s		9564116	0					
ANR	9564162	Identifier	procs		9564116	1					
ANR	9564163	Identifier	seek		9564116	1					
ANR	9564164	ArgumentList	s		9564116	1					
ANR	9564165	Argument	s		9564116	0					
ANR	9564166	Identifier	s		9564116	0					
ANR	9564167	Argument	pos		9564116	1					
ANR	9564168	Identifier	pos		9564116	0					
ANR	9564169	ReturnType	int		9564116	1					
ANR	9564170	Identifier	spseek		9564116	2					
ANR	9564171	ParameterList	"stream * s , gs_offset_t pos"		9564116	3					
ANR	9564172	Parameter	stream * s	403:7:10601:10610	9564116	0	True				
ANR	9564173	ParameterType	stream *		9564116	0					
ANR	9564174	Identifier	s		9564116	1					
ANR	9564175	Parameter	gs_offset_t pos	403:19:10613:10627	9564116	1	True				
ANR	9564176	ParameterType	gs_offset_t		9564116	0					
ANR	9564177	Identifier	pos		9564116	1					
ANR	9564178	CFGEntryNode	ENTRY		9564116		True				
ANR	9564179	CFGExitNode	EXIT		9564116		True				
ANR	9564180	Symbol	s		9564116						
ANR	9564181	Symbol	pos		9564116						
ANR	9564182	Symbol	( s ) -> procs		9564116						
ANR	9564183	Symbol	( s ) -> procs . seek		9564116						
ANR	9564184	Symbol	* * s		9564116						
ANR	9564185	Symbol	* ( s ) -> procs		9564116						
ANR	9564186	Symbol	* ( s ) -> procs . seek		9564116						
ANR	9564187	Symbol	* s		9564116						
ANR	9564188	Function	sswitch	412:0:10900:11054							
ANR	9564189	FunctionDef	"sswitch (register stream * s , bool writing)"		9564188	0					
ANR	9564190	CompoundStatement		414:0:10947:11054	9564188	0					
ANR	9564191	IfStatement	if ( s -> procs . switch_mode == 0 )		9564188	0					
ANR	9564192	Condition	s -> procs . switch_mode == 0	415:8:10957:10981	9564188	0	True				
ANR	9564193	EqualityExpression	s -> procs . switch_mode == 0		9564188	0		==			
ANR	9564194	MemberAccess	s -> procs . switch_mode		9564188	0					
ANR	9564195	PtrMemberAccess	s -> procs		9564188	0					
ANR	9564196	Identifier	s		9564188	0					
ANR	9564197	Identifier	procs		9564188	1					
ANR	9564198	Identifier	switch_mode		9564188	1					
ANR	9564199	PrimaryExpression	0		9564188	1					
ANR	9564200	ReturnStatement	return ERRC ;	416:8:10992:11003	9564188	1	True				
ANR	9564201	Identifier	ERRC		9564188	0					
ANR	9564202	ReturnStatement	"return ( * s -> procs . switch_mode ) ( s , writing ) ;"	417:4:11009:11052	9564188	1	True				
ANR	9564203	CallExpression	"( * s -> procs . switch_mode ) ( s , writing )"		9564188	0					
ANR	9564204	Callee	* s -> procs . switch_mode		9564188	0					
ANR	9564205	UnaryOperationExpression	* s -> procs . switch_mode		9564188	0					
ANR	9564206	UnaryOperator	*		9564188	0					
ANR	9564207	MemberAccess	s -> procs . switch_mode		9564188	1					
ANR	9564208	PtrMemberAccess	s -> procs		9564188	0					
ANR	9564209	Identifier	s		9564188	0					
ANR	9564210	Identifier	procs		9564188	1					
ANR	9564211	Identifier	switch_mode		9564188	1					
ANR	9564212	ArgumentList	s		9564188	1					
ANR	9564213	Argument	s		9564188	0					
ANR	9564214	Identifier	s		9564188	0					
ANR	9564215	Argument	writing		9564188	1					
ANR	9564216	Identifier	writing		9564188	0					
ANR	9564217	ReturnType	int		9564188	1					
ANR	9564218	Identifier	sswitch		9564188	2					
ANR	9564219	ParameterList	"register stream * s , bool writing"		9564188	3					
ANR	9564220	Parameter	register stream * s	413:8:10912:10930	9564188	0	True				
ANR	9564221	ParameterType	register stream *		9564188	0					
ANR	9564222	Identifier	s		9564188	1					
ANR	9564223	Parameter	bool writing	413:29:10933:10944	9564188	1	True				
ANR	9564224	ParameterType	bool		9564188	0					
ANR	9564225	Identifier	writing		9564188	1					
ANR	9564226	CFGEntryNode	ENTRY		9564188		True				
ANR	9564227	CFGExitNode	EXIT		9564188		True				
ANR	9564228	Symbol	s		9564188						
ANR	9564229	Symbol	s -> procs . switch_mode		9564188						
ANR	9564230	Symbol	s -> procs		9564188						
ANR	9564231	Symbol	writing		9564188						
ANR	9564232	Symbol	* s -> procs		9564188						
ANR	9564233	Symbol	* * s		9564188						
ANR	9564234	Symbol	* s		9564188						
ANR	9564235	Symbol	ERRC		9564188						
ANR	9564236	Symbol	* s -> procs . switch_mode		9564188						
ANR	9564237	Function	sclose	422:0:11149:11723							
ANR	9564238	FunctionDef	sclose (register stream * s)		9564237	0					
ANR	9564239	CompoundStatement		424:0:11181:11723	9564237	0					
ANR	9564240	IdentifierDeclStatement	stream_state * st ;	425:4:11187:11203	9564237	0	True				
ANR	9564241	IdentifierDecl	* st		9564237	0					
ANR	9564242	IdentifierDeclType	stream_state *		9564237	0					
ANR	9564243	Identifier	st		9564237	1					
ANR	9564244	IdentifierDeclStatement	int status = ( * s -> procs . close ) ( s ) ;	426:4:11209:11243	9564237	1	True				
ANR	9564245	IdentifierDecl	status = ( * s -> procs . close ) ( s )		9564237	0					
ANR	9564246	IdentifierDeclType	int		9564237	0					
ANR	9564247	Identifier	status		9564237	1					
ANR	9564248	AssignmentExpression	status = ( * s -> procs . close ) ( s )		9564237	2		=			
ANR	9564249	Identifier	status		9564237	0					
ANR	9564250	CallExpression	( * s -> procs . close ) ( s )		9564237	1					
ANR	9564251	Callee	* s -> procs . close		9564237	0					
ANR	9564252	UnaryOperationExpression	* s -> procs . close		9564237	0					
ANR	9564253	UnaryOperator	*		9564237	0					
ANR	9564254	MemberAccess	s -> procs . close		9564237	1					
ANR	9564255	PtrMemberAccess	s -> procs		9564237	0					
ANR	9564256	Identifier	s		9564237	0					
ANR	9564257	Identifier	procs		9564237	1					
ANR	9564258	Identifier	close		9564237	1					
ANR	9564259	ArgumentList	s		9564237	1					
ANR	9564260	Argument	s		9564237	0					
ANR	9564261	Identifier	s		9564237	0					
ANR	9564262	IfStatement	if ( status < 0 )		9564237	2					
ANR	9564263	Condition	status < 0	428:8:11254:11263	9564237	0	True				
ANR	9564264	RelationalExpression	status < 0		9564237	0		<			
ANR	9564265	Identifier	status		9564237	0					
ANR	9564266	PrimaryExpression	0		9564237	1					
ANR	9564267	ReturnStatement	return status ;	429:8:11274:11287	9564237	1	True				
ANR	9564268	Identifier	status		9564237	0					
ANR	9564269	ExpressionStatement	st = s -> state	430:4:11293:11306	9564237	3	True				
ANR	9564270	AssignmentExpression	st = s -> state		9564237	0		=			
ANR	9564271	Identifier	st		9564237	0					
ANR	9564272	PtrMemberAccess	s -> state		9564237	1					
ANR	9564273	Identifier	s		9564237	0					
ANR	9564274	Identifier	state		9564237	1					
ANR	9564275	IfStatement	if ( st != 0 )		9564237	4					
ANR	9564276	Condition	st != 0	431:8:11316:11322	9564237	0	True				
ANR	9564277	EqualityExpression	st != 0		9564237	0		!=			
ANR	9564278	Identifier	st		9564237	0					
ANR	9564279	PrimaryExpression	0		9564237	1					
ANR	9564280	CompoundStatement		8:17:143:143	9564237	1					
ANR	9564281	ExpressionStatement	stream_proc_release ( ( * release ) ) = st -> templat -> release	432:8:11335:11389	9564237	0	True				
ANR	9564282	AssignmentExpression	stream_proc_release ( ( * release ) ) = st -> templat -> release		9564237	0		=			
ANR	9564283	CallExpression	stream_proc_release ( ( * release ) )		9564237	0					
ANR	9564284	Callee	stream_proc_release		9564237	0					
ANR	9564285	Identifier	stream_proc_release		9564237	0					
ANR	9564286	ArgumentList	* release		9564237	1					
ANR	9564287	Argument	* release		9564237	0					
ANR	9564288	UnaryOperationExpression	* release		9564237	0					
ANR	9564289	UnaryOperator	*		9564237	0					
ANR	9564290	Identifier	release		9564237	1					
ANR	9564291	PtrMemberAccess	st -> templat -> release		9564237	1					
ANR	9564292	PtrMemberAccess	st -> templat		9564237	0					
ANR	9564293	Identifier	st		9564237	0					
ANR	9564294	Identifier	templat		9564237	1					
ANR	9564295	Identifier	release		9564237	1					
ANR	9564296	IfStatement	if ( release != 0 )		9564237	1					
ANR	9564297	Condition	release != 0	433:12:11403:11414	9564237	0	True				
ANR	9564298	EqualityExpression	release != 0		9564237	0		!=			
ANR	9564299	Identifier	release		9564237	0					
ANR	9564300	PrimaryExpression	0		9564237	1					
ANR	9564301	ExpressionStatement	( * release ) ( st )	434:12:11429:11444	9564237	1	True				
ANR	9564302	CallExpression	( * release ) ( st )		9564237	0					
ANR	9564303	Callee	* release		9564237	0					
ANR	9564304	UnaryOperationExpression	* release		9564237	0					
ANR	9564305	UnaryOperator	*		9564237	0					
ANR	9564306	Identifier	release		9564237	1					
ANR	9564307	ArgumentList	st		9564237	1					
ANR	9564308	Argument	st		9564237	0					
ANR	9564309	Identifier	st		9564237	0					
ANR	9564310	IfStatement	if ( st != ( stream_state * ) s && st -> memory != 0 )		9564237	2					
ANR	9564311	Condition	st != ( stream_state * ) s && st -> memory != 0	435:12:11458:11500	9564237	0	True				
ANR	9564312	AndExpression	st != ( stream_state * ) s && st -> memory != 0		9564237	0		&&			
ANR	9564313	EqualityExpression	st != ( stream_state * ) s		9564237	0		!=			
ANR	9564314	Identifier	st		9564237	0					
ANR	9564315	CastExpression	( stream_state * ) s		9564237	1					
ANR	9564316	CastTarget	stream_state *		9564237	0					
ANR	9564317	Identifier	s		9564237	1					
ANR	9564318	EqualityExpression	st -> memory != 0		9564237	1		!=			
ANR	9564319	PtrMemberAccess	st -> memory		9564237	0					
ANR	9564320	Identifier	st		9564237	0					
ANR	9564321	Identifier	memory		9564237	1					
ANR	9564322	PrimaryExpression	0		9564237	1					
ANR	9564323	CompoundStatement		13:12:335:364	9564237	1					
ANR	9564324	IdentifierDeclStatement	gs_memory_t * mem = st -> memory ;	436:12:11517:11546	9564237	0	True				
ANR	9564325	IdentifierDecl	* mem = st -> memory		9564237	0					
ANR	9564326	IdentifierDeclType	gs_memory_t *		9564237	0					
ANR	9564327	Identifier	mem		9564237	1					
ANR	9564328	AssignmentExpression	* mem = st -> memory		9564237	2		=			
ANR	9564329	Identifier	mem		9564237	0					
ANR	9564330	PtrMemberAccess	st -> memory		9564237	1					
ANR	9564331	Identifier	st		9564237	0					
ANR	9564332	Identifier	memory		9564237	1					
ANR	9564333	ExpressionStatement	st -> memory = NULL	437:12:11560:11577	9564237	1	True				
ANR	9564334	AssignmentExpression	st -> memory = NULL		9564237	0		=			
ANR	9564335	PtrMemberAccess	st -> memory		9564237	0					
ANR	9564336	Identifier	st		9564237	0					
ANR	9564337	Identifier	memory		9564237	1					
ANR	9564338	Identifier	NULL		9564237	1					
ANR	9564339	ExpressionStatement	"gs_free_object ( mem , st , ""s_std_close"" )"	438:12:11591:11629	9564237	2	True				
ANR	9564340	CallExpression	"gs_free_object ( mem , st , ""s_std_close"" )"		9564237	0					
ANR	9564341	Callee	gs_free_object		9564237	0					
ANR	9564342	Identifier	gs_free_object		9564237	0					
ANR	9564343	ArgumentList	mem		9564237	1					
ANR	9564344	Argument	mem		9564237	0					
ANR	9564345	Identifier	mem		9564237	0					
ANR	9564346	Argument	st		9564237	1					
ANR	9564347	Identifier	st		9564237	0					
ANR	9564348	Argument	"""s_std_close"""		9564237	2					
ANR	9564349	PrimaryExpression	"""s_std_close"""		9564237	0					
ANR	9564350	ExpressionStatement	s -> state = ( stream_state * ) s	440:8:11649:11678	9564237	3	True				
ANR	9564351	AssignmentExpression	s -> state = ( stream_state * ) s		9564237	0		=			
ANR	9564352	PtrMemberAccess	s -> state		9564237	0					
ANR	9564353	Identifier	s		9564237	0					
ANR	9564354	Identifier	state		9564237	1					
ANR	9564355	CastExpression	( stream_state * ) s		9564237	1					
ANR	9564356	CastTarget	stream_state *		9564237	0					
ANR	9564357	Identifier	s		9564237	1					
ANR	9564358	ExpressionStatement	s_disable ( s )	442:4:11690:11702	9564237	5	True				
ANR	9564359	CallExpression	s_disable ( s )		9564237	0					
ANR	9564360	Callee	s_disable		9564237	0					
ANR	9564361	Identifier	s_disable		9564237	0					
ANR	9564362	ArgumentList	s		9564237	1					
ANR	9564363	Argument	s		9564237	0					
ANR	9564364	Identifier	s		9564237	0					
ANR	9564365	ReturnStatement	return status ;	443:4:11708:11721	9564237	6	True				
ANR	9564366	Identifier	status		9564237	0					
ANR	9564367	ReturnType	int		9564237	1					
ANR	9564368	Identifier	sclose		9564237	2					
ANR	9564369	ParameterList	register stream * s		9564237	3					
ANR	9564370	Parameter	register stream * s	423:7:11160:11178	9564237	0	True				
ANR	9564371	ParameterType	register stream *		9564237	0					
ANR	9564372	Identifier	s		9564237	1					
ANR	9564373	CFGEntryNode	ENTRY		9564237		True				
ANR	9564374	CFGExitNode	EXIT		9564237		True				
ANR	9564375	Symbol	st		9564237						
ANR	9564376	Symbol	NULL		9564237						
ANR	9564377	Symbol	* st		9564237						
ANR	9564378	Symbol	s -> procs . close		9564237						
ANR	9564379	Symbol	s -> procs		9564237						
ANR	9564380	Symbol	release		9564237						
ANR	9564381	Symbol	s -> state		9564237						
ANR	9564382	Symbol	st -> memory		9564237						
ANR	9564383	Symbol	* s -> procs		9564237						
ANR	9564384	Symbol	st -> templat		9564237						
ANR	9564385	Symbol	* st -> templat		9564237						
ANR	9564386	Symbol	stream_proc_release		9564237						
ANR	9564387	Symbol	* * st		9564237						
ANR	9564388	Symbol	* release		9564237						
ANR	9564389	Symbol	st -> templat -> release		9564237						
ANR	9564390	Symbol	s		9564237						
ANR	9564391	Symbol	mem		9564237						
ANR	9564392	Symbol	* s -> procs . close		9564237						
ANR	9564393	Symbol	* * s		9564237						
ANR	9564394	Symbol	* s		9564237						
ANR	9564395	Symbol	status		9564237						
ANR	9564396	Function	spgetcc	452:0:12006:12768							
ANR	9564397	FunctionDef	"spgetcc (register stream * s , bool close_at_eod)"		9564396	0					
ANR	9564398	CompoundStatement		454:0:12058:12768	9564396	0					
ANR	9564399	IdentifierDeclStatement	"int status , left ;"	455:4:12064:12080	9564396	0	True				
ANR	9564400	IdentifierDecl	status		9564396	0					
ANR	9564401	IdentifierDeclType	int		9564396	0					
ANR	9564402	Identifier	status		9564396	1					
ANR	9564403	IdentifierDecl	left		9564396	1					
ANR	9564404	IdentifierDeclType	int		9564396	0					
ANR	9564405	Identifier	left		9564396	1					
ANR	9564406	IdentifierDeclStatement	int min_left = sbuf_min_left ( s ) ;	456:4:12086:12117	9564396	1	True				
ANR	9564407	IdentifierDecl	min_left = sbuf_min_left ( s )		9564396	0					
ANR	9564408	IdentifierDeclType	int		9564396	0					
ANR	9564409	Identifier	min_left		9564396	1					
ANR	9564410	AssignmentExpression	min_left = sbuf_min_left ( s )		9564396	2		=			
ANR	9564411	Identifier	min_left		9564396	0					
ANR	9564412	CallExpression	sbuf_min_left ( s )		9564396	1					
ANR	9564413	Callee	sbuf_min_left		9564396	0					
ANR	9564414	Identifier	sbuf_min_left		9564396	0					
ANR	9564415	ArgumentList	s		9564396	1					
ANR	9564416	Argument	s		9564396	0					
ANR	9564417	Identifier	s		9564396	0					
ANR	9564418	WhileStatement	"while ( status = s -> end_status , left = s -> srlimit - s -> srptr , left <= min_left && status >= 0 )"		9564396	2					
ANR	9564419	Condition	"status = s -> end_status , left = s -> srlimit - s -> srptr , left <= min_left && status >= 0"	458:11:12131:12237	9564396	0	True				
ANR	9564420	Expression	"status = s -> end_status , left = s -> srlimit - s -> srptr , left <= min_left && status >= 0"		9564396	0					
ANR	9564421	AssignmentExpression	status = s -> end_status		9564396	0		=			
ANR	9564422	Identifier	status		9564396	0					
ANR	9564423	PtrMemberAccess	s -> end_status		9564396	1					
ANR	9564424	Identifier	s		9564396	0					
ANR	9564425	Identifier	end_status		9564396	1					
ANR	9564426	Expression	"left = s -> srlimit - s -> srptr , left <= min_left && status >= 0"		9564396	1					
ANR	9564427	AssignmentExpression	left = s -> srlimit - s -> srptr		9564396	0		=			
ANR	9564428	Identifier	left		9564396	0					
ANR	9564429	AdditiveExpression	s -> srlimit - s -> srptr		9564396	1		-			
ANR	9564430	PtrMemberAccess	s -> srlimit		9564396	0					
ANR	9564431	Identifier	s		9564396	0					
ANR	9564432	Identifier	srlimit		9564396	1					
ANR	9564433	PtrMemberAccess	s -> srptr		9564396	1					
ANR	9564434	Identifier	s		9564396	0					
ANR	9564435	Identifier	srptr		9564396	1					
ANR	9564436	AndExpression	left <= min_left && status >= 0		9564396	1		&&			
ANR	9564437	RelationalExpression	left <= min_left		9564396	0		<=			
ANR	9564438	Identifier	left		9564396	0					
ANR	9564439	Identifier	min_left		9564396	1					
ANR	9564440	RelationalExpression	status >= 0		9564396	1		>=			
ANR	9564441	Identifier	status		9564396	0					
ANR	9564442	PrimaryExpression	0		9564396	1					
ANR	9564443	ExpressionStatement	s_process_read_buf ( s )	462:8:12257:12278	9564396	1	True				
ANR	9564444	CallExpression	s_process_read_buf ( s )		9564396	0					
ANR	9564445	Callee	s_process_read_buf		9564396	0					
ANR	9564446	Identifier	s_process_read_buf		9564396	0					
ANR	9564447	ArgumentList	s		9564396	1					
ANR	9564448	Argument	s		9564396	0					
ANR	9564449	Identifier	s		9564396	0					
ANR	9564450	IfStatement	if ( left <= min_left && ( left <= 0 || ( status != EOFC && status != ERRC ) ) )		9564396	3					
ANR	9564451	Condition	left <= min_left && ( left <= 0 || ( status != EOFC && status != ERRC ) )	463:8:12288:12364	9564396	0	True				
ANR	9564452	AndExpression	left <= min_left && ( left <= 0 || ( status != EOFC && status != ERRC ) )		9564396	0		&&			
ANR	9564453	RelationalExpression	left <= min_left		9564396	0		<=			
ANR	9564454	Identifier	left		9564396	0					
ANR	9564455	Identifier	min_left		9564396	1					
ANR	9564456	OrExpression	left <= 0 || ( status != EOFC && status != ERRC )		9564396	1		||			
ANR	9564457	RelationalExpression	left <= 0		9564396	0		<=			
ANR	9564458	Identifier	left		9564396	0					
ANR	9564459	PrimaryExpression	0		9564396	1					
ANR	9564460	AndExpression	status != EOFC && status != ERRC		9564396	1		&&			
ANR	9564461	EqualityExpression	status != EOFC		9564396	0		!=			
ANR	9564462	Identifier	status		9564396	0					
ANR	9564463	Identifier	EOFC		9564396	1					
ANR	9564464	EqualityExpression	status != ERRC		9564396	1		!=			
ANR	9564465	Identifier	status		9564396	0					
ANR	9564466	Identifier	ERRC		9564396	1					
ANR	9564467	CompoundStatement		12:10:317:317	9564396	1					
ANR	9564468	IfStatement	if ( left == 0 )		9564396	0					
ANR	9564469	Condition	left == 0	467:12:12462:12470	9564396	0	True				
ANR	9564470	EqualityExpression	left == 0		9564396	0		==			
ANR	9564471	Identifier	left		9564396	0					
ANR	9564472	PrimaryExpression	0		9564396	1					
ANR	9564473	ExpressionStatement	"stream_compact ( s , true )"	468:12:12485:12508	9564396	1	True				
ANR	9564474	CallExpression	"stream_compact ( s , true )"		9564396	0					
ANR	9564475	Callee	stream_compact		9564396	0					
ANR	9564476	Identifier	stream_compact		9564396	0					
ANR	9564477	ArgumentList	s		9564396	1					
ANR	9564478	Argument	s		9564396	0					
ANR	9564479	Identifier	s		9564396	0					
ANR	9564480	Argument	true		9564396	1					
ANR	9564481	Identifier	true		9564396	0					
ANR	9564482	IfStatement	if ( status == EOFC && close_at_eod && s -> close_at_eod )		9564396	1					
ANR	9564483	Condition	status == EOFC && close_at_eod && s -> close_at_eod	469:12:12522:12570	9564396	0	True				
ANR	9564484	AndExpression	status == EOFC && close_at_eod && s -> close_at_eod		9564396	0		&&			
ANR	9564485	EqualityExpression	status == EOFC		9564396	0		==			
ANR	9564486	Identifier	status		9564396	0					
ANR	9564487	Identifier	EOFC		9564396	1					
ANR	9564488	AndExpression	close_at_eod && s -> close_at_eod		9564396	1		&&			
ANR	9564489	Identifier	close_at_eod		9564396	0					
ANR	9564490	PtrMemberAccess	s -> close_at_eod		9564396	1					
ANR	9564491	Identifier	s		9564396	0					
ANR	9564492	Identifier	close_at_eod		9564396	1					
ANR	9564493	CompoundStatement		16:63:514:514	9564396	1					
ANR	9564494	ExpressionStatement	status = sclose ( s )	470:12:12587:12605	9564396	0	True				
ANR	9564495	AssignmentExpression	status = sclose ( s )		9564396	0		=			
ANR	9564496	Identifier	status		9564396	0					
ANR	9564497	CallExpression	sclose ( s )		9564396	1					
ANR	9564498	Callee	sclose		9564396	0					
ANR	9564499	Identifier	sclose		9564396	0					
ANR	9564500	ArgumentList	s		9564396	1					
ANR	9564501	Argument	s		9564396	0					
ANR	9564502	Identifier	s		9564396	0					
ANR	9564503	IfStatement	if ( status == 0 )		9564396	1					
ANR	9564504	Condition	status == 0	471:16:12623:12633	9564396	0	True				
ANR	9564505	EqualityExpression	status == 0		9564396	0		==			
ANR	9564506	Identifier	status		9564396	0					
ANR	9564507	PrimaryExpression	0		9564396	1					
ANR	9564508	ExpressionStatement	status = EOFC	472:16:12652:12665	9564396	1	True				
ANR	9564509	AssignmentExpression	status = EOFC		9564396	0		=			
ANR	9564510	Identifier	status		9564396	0					
ANR	9564511	Identifier	EOFC		9564396	1					
ANR	9564512	ExpressionStatement	s -> end_status = status	473:12:12679:12701	9564396	2	True				
ANR	9564513	AssignmentExpression	s -> end_status = status		9564396	0		=			
ANR	9564514	PtrMemberAccess	s -> end_status		9564396	0					
ANR	9564515	Identifier	s		9564396	0					
ANR	9564516	Identifier	end_status		9564396	1					
ANR	9564517	Identifier	status		9564396	1					
ANR	9564518	ReturnStatement	return status ;	475:8:12721:12734	9564396	2	True				
ANR	9564519	Identifier	status		9564396	0					
ANR	9564520	ReturnStatement	return * ++ ( s -> srptr ) ;	477:4:12746:12766	9564396	4	True				
ANR	9564521	UnaryOperationExpression	* ++ ( s -> srptr )		9564396	0					
ANR	9564522	UnaryOperator	*		9564396	0					
ANR	9564523	UnaryExpression	++ ( s -> srptr )		9564396	1					
ANR	9564524	IncDec	++		9564396	0					
ANR	9564525	PtrMemberAccess	s -> srptr		9564396	1					
ANR	9564526	Identifier	s		9564396	0					
ANR	9564527	Identifier	srptr		9564396	1					
ANR	9564528	ReturnType	int		9564396	1					
ANR	9564529	Identifier	spgetcc		9564396	2					
ANR	9564530	ParameterList	"register stream * s , bool close_at_eod"		9564396	3					
ANR	9564531	Parameter	register stream * s	453:8:12018:12036	9564396	0	True				
ANR	9564532	ParameterType	register stream *		9564396	0					
ANR	9564533	Identifier	s		9564396	1					
ANR	9564534	Parameter	bool close_at_eod	453:29:12039:12055	9564396	1	True				
ANR	9564535	ParameterType	bool		9564396	0					
ANR	9564536	Identifier	close_at_eod		9564396	1					
ANR	9564537	CFGEntryNode	ENTRY		9564396		True				
ANR	9564538	CFGExitNode	EXIT		9564396		True				
ANR	9564539	Symbol	* s -> srptr		9564396						
ANR	9564540	Symbol	s -> close_at_eod		9564396						
ANR	9564541	Symbol	min_left		9564396						
ANR	9564542	Symbol	s -> srptr		9564396						
ANR	9564543	Symbol	sclose		9564396						
ANR	9564544	Symbol	s -> srlimit		9564396						
ANR	9564545	Symbol	EOFC		9564396						
ANR	9564546	Symbol	sbuf_min_left		9564396						
ANR	9564547	Symbol	* ++ ( s -> srptr )		9564396						
ANR	9564548	Symbol	s		9564396						
ANR	9564549	Symbol	close_at_eod		9564396						
ANR	9564550	Symbol	left		9564396						
ANR	9564551	Symbol	true		9564396						
ANR	9564552	Symbol	* * s		9564396						
ANR	9564553	Symbol	s -> end_status		9564396						
ANR	9564554	Symbol	* s		9564396						
ANR	9564555	Symbol	ERRC		9564396						
ANR	9564556	Symbol	status		9564396						
ANR	9564557	Function	spputc	482:0:12877:13129							
ANR	9564558	FunctionDef	"spputc (register stream * s , byte b)"		9564557	0					
ANR	9564559	CompoundStatement		484:0:12917:13129	9564557	0					
ANR	9564560	ForStatement	for ( ; ; )		9564557	0					
ANR	9564561	CompoundStatement		2:13:14:14	9564557	0					
ANR	9564562	IfStatement	if ( s -> end_status )		9564557	0					
ANR	9564563	Condition	s -> end_status	486:12:12946:12958	9564557	0	True				
ANR	9564564	PtrMemberAccess	s -> end_status		9564557	0					
ANR	9564565	Identifier	s		9564557	0					
ANR	9564566	Identifier	end_status		9564557	1					
ANR	9564567	ReturnStatement	return s -> end_status ;	487:12:12973:12993	9564557	1	True				
ANR	9564568	PtrMemberAccess	s -> end_status		9564557	0					
ANR	9564569	Identifier	s		9564557	0					
ANR	9564570	Identifier	end_status		9564557	1					
ANR	9564571	IfStatement	if ( ! sendwp ( s ) )		9564557	1					
ANR	9564572	Condition	! sendwp ( s )	488:12:13007:13016	9564557	0	True				
ANR	9564573	UnaryOperationExpression	! sendwp ( s )		9564557	0					
ANR	9564574	UnaryOperator	!		9564557	0					
ANR	9564575	CallExpression	sendwp ( s )		9564557	1					
ANR	9564576	Callee	sendwp		9564557	0					
ANR	9564577	Identifier	sendwp		9564557	0					
ANR	9564578	ArgumentList	s		9564557	1					
ANR	9564579	Argument	s		9564557	0					
ANR	9564580	Identifier	s		9564557	0					
ANR	9564581	CompoundStatement		5:24:101:101	9564557	1					
ANR	9564582	ExpressionStatement	* ++ ( s -> swptr ) = b	489:12:13033:13050	9564557	0	True				
ANR	9564583	AssignmentExpression	* ++ ( s -> swptr ) = b		9564557	0		=			
ANR	9564584	UnaryOperationExpression	* ++ ( s -> swptr )		9564557	0					
ANR	9564585	UnaryOperator	*		9564557	0					
ANR	9564586	UnaryExpression	++ ( s -> swptr )		9564557	1					
ANR	9564587	IncDec	++		9564557	0					
ANR	9564588	PtrMemberAccess	s -> swptr		9564557	1					
ANR	9564589	Identifier	s		9564557	0					
ANR	9564590	Identifier	swptr		9564557	1					
ANR	9564591	Identifier	b		9564557	1					
ANR	9564592	ReturnStatement	return b ;	490:12:13064:13072	9564557	1	True				
ANR	9564593	Identifier	b		9564557	0					
ANR	9564594	ExpressionStatement	"s_process_write_buf ( s , false )"	492:8:13092:13121	9564557	2	True				
ANR	9564595	CallExpression	"s_process_write_buf ( s , false )"		9564557	0					
ANR	9564596	Callee	s_process_write_buf		9564557	0					
ANR	9564597	Identifier	s_process_write_buf		9564557	0					
ANR	9564598	ArgumentList	s		9564557	1					
ANR	9564599	Argument	s		9564557	0					
ANR	9564600	Identifier	s		9564557	0					
ANR	9564601	Argument	false		9564557	1					
ANR	9564602	Identifier	false		9564557	0					
ANR	9564603	ReturnType	int		9564557	1					
ANR	9564604	Identifier	spputc		9564557	2					
ANR	9564605	ParameterList	"register stream * s , byte b"		9564557	3					
ANR	9564606	Parameter	register stream * s	483:7:12888:12906	9564557	0	True				
ANR	9564607	ParameterType	register stream *		9564557	0					
ANR	9564608	Identifier	s		9564557	1					
ANR	9564609	Parameter	byte b	483:28:12909:12914	9564557	1	True				
ANR	9564610	ParameterType	byte		9564557	0					
ANR	9564611	Identifier	b		9564557	1					
ANR	9564612	CFGEntryNode	ENTRY		9564557		True				
ANR	9564613	CFGExitNode	EXIT		9564557		True				
ANR	9564614	InfiniteForNode	true		9564557		True				
ANR	9564615	Symbol	sendwp		9564557						
ANR	9564616	Symbol	b		9564557						
ANR	9564617	Symbol	* ++ ( s -> swptr )		9564557						
ANR	9564618	Symbol	s -> swptr		9564557						
ANR	9564619	Symbol	s		9564557						
ANR	9564620	Symbol	* * s		9564557						
ANR	9564621	Symbol	false		9564557						
ANR	9564622	Symbol	s -> end_status		9564557						
ANR	9564623	Symbol	* s -> swptr		9564557						
ANR	9564624	Symbol	* s		9564557						
ANR	9564625	Function	sungetc	499:0:13285:13447							
ANR	9564626	FunctionDef	"sungetc (register stream * s , byte c)"		9564625	0					
ANR	9564627	CompoundStatement		501:0:13326:13447	9564625	0					
ANR	9564628	IfStatement	if ( ! s_is_reading ( s ) || s -> srptr < s -> cbuf || * ( s -> srptr ) != c )		9564625	0					
ANR	9564629	Condition	! s_is_reading ( s ) || s -> srptr < s -> cbuf || * ( s -> srptr ) != c	502:8:13336:13393	9564625	0	True				
ANR	9564630	OrExpression	! s_is_reading ( s ) || s -> srptr < s -> cbuf || * ( s -> srptr ) != c		9564625	0		||			
ANR	9564631	UnaryOperationExpression	! s_is_reading ( s )		9564625	0					
ANR	9564632	UnaryOperator	!		9564625	0					
ANR	9564633	CallExpression	s_is_reading ( s )		9564625	1					
ANR	9564634	Callee	s_is_reading		9564625	0					
ANR	9564635	Identifier	s_is_reading		9564625	0					
ANR	9564636	ArgumentList	s		9564625	1					
ANR	9564637	Argument	s		9564625	0					
ANR	9564638	Identifier	s		9564625	0					
ANR	9564639	OrExpression	s -> srptr < s -> cbuf || * ( s -> srptr ) != c		9564625	1		||			
ANR	9564640	RelationalExpression	s -> srptr < s -> cbuf		9564625	0		<			
ANR	9564641	PtrMemberAccess	s -> srptr		9564625	0					
ANR	9564642	Identifier	s		9564625	0					
ANR	9564643	Identifier	srptr		9564625	1					
ANR	9564644	PtrMemberAccess	s -> cbuf		9564625	1					
ANR	9564645	Identifier	s		9564625	0					
ANR	9564646	Identifier	cbuf		9564625	1					
ANR	9564647	EqualityExpression	* ( s -> srptr ) != c		9564625	1		!=			
ANR	9564648	UnaryOperationExpression	* ( s -> srptr )		9564625	0					
ANR	9564649	UnaryOperator	*		9564625	0					
ANR	9564650	PtrMemberAccess	s -> srptr		9564625	1					
ANR	9564651	Identifier	s		9564625	0					
ANR	9564652	Identifier	srptr		9564625	1					
ANR	9564653	Identifier	c		9564625	1					
ANR	9564654	ReturnStatement	return ERRC ;	503:8:13404:13415	9564625	1	True				
ANR	9564655	Identifier	ERRC		9564625	0					
ANR	9564656	ExpressionStatement	s -> srptr --	504:4:13421:13431	9564625	1	True				
ANR	9564657	PostIncDecOperationExpression	s -> srptr --		9564625	0					
ANR	9564658	PtrMemberAccess	s -> srptr		9564625	0					
ANR	9564659	Identifier	s		9564625	0					
ANR	9564660	Identifier	srptr		9564625	1					
ANR	9564661	IncDec	--		9564625	1					
ANR	9564662	ReturnStatement	return 0 ;	505:4:13437:13445	9564625	2	True				
ANR	9564663	PrimaryExpression	0		9564625	0					
ANR	9564664	ReturnType	int		9564625	1					
ANR	9564665	Identifier	sungetc		9564625	2					
ANR	9564666	ParameterList	"register stream * s , byte c"		9564625	3					
ANR	9564667	Parameter	register stream * s	500:8:13297:13315	9564625	0	True				
ANR	9564668	ParameterType	register stream *		9564625	0					
ANR	9564669	Identifier	s		9564625	1					
ANR	9564670	Parameter	byte c	500:29:13318:13323	9564625	1	True				
ANR	9564671	ParameterType	byte		9564625	0					
ANR	9564672	Identifier	c		9564625	1					
ANR	9564673	CFGEntryNode	ENTRY		9564625		True				
ANR	9564674	CFGExitNode	EXIT		9564625		True				
ANR	9564675	Symbol	* s -> srptr		9564625						
ANR	9564676	Symbol	s		9564625						
ANR	9564677	Symbol	c		9564625						
ANR	9564678	Symbol	s -> srptr		9564625						
ANR	9564679	Symbol	* * s		9564625						
ANR	9564680	Symbol	* ( s -> srptr )		9564625						
ANR	9564681	Symbol	s -> cbuf		9564625						
ANR	9564682	Symbol	* s		9564625						
ANR	9564683	Symbol	s_is_reading		9564625						
ANR	9564684	Symbol	ERRC		9564625						
ANR	9564685	Function	sgets	510:0:13549:15270							
ANR	9564686	FunctionDef	"sgets (stream * s , byte * buf , uint nmax , uint * pn)"		9564685	0					
ANR	9564687	CompoundStatement		512:0:13605:15270	9564685	0					
ANR	9564688	IdentifierDeclStatement	stream_cursor_write cw ;	513:4:13611:13633	9564685	0	True				
ANR	9564689	IdentifierDecl	cw		9564685	0					
ANR	9564690	IdentifierDeclType	stream_cursor_write		9564685	0					
ANR	9564691	Identifier	cw		9564685	1					
ANR	9564692	IdentifierDeclStatement	int status = 0 ;	514:4:13639:13653	9564685	1	True				
ANR	9564693	IdentifierDecl	status = 0		9564685	0					
ANR	9564694	IdentifierDeclType	int		9564685	0					
ANR	9564695	Identifier	status		9564685	1					
ANR	9564696	AssignmentExpression	status = 0		9564685	2		=			
ANR	9564697	Identifier	status		9564685	0					
ANR	9564698	PrimaryExpression	0		9564685	1					
ANR	9564699	IdentifierDeclStatement	gs_offset_t min_left = sbuf_min_left ( s ) ;	515:4:13659:13698	9564685	2	True				
ANR	9564700	IdentifierDecl	min_left = sbuf_min_left ( s )		9564685	0					
ANR	9564701	IdentifierDeclType	gs_offset_t		9564685	0					
ANR	9564702	Identifier	min_left		9564685	1					
ANR	9564703	AssignmentExpression	min_left = sbuf_min_left ( s )		9564685	2		=			
ANR	9564704	Identifier	min_left		9564685	0					
ANR	9564705	CallExpression	sbuf_min_left ( s )		9564685	1					
ANR	9564706	Callee	sbuf_min_left		9564685	0					
ANR	9564707	Identifier	sbuf_min_left		9564685	0					
ANR	9564708	ArgumentList	s		9564685	1					
ANR	9564709	Argument	s		9564685	0					
ANR	9564710	Identifier	s		9564685	0					
ANR	9564711	ExpressionStatement	cw . ptr = buf - 1	517:4:13705:13721	9564685	3	True				
ANR	9564712	AssignmentExpression	cw . ptr = buf - 1		9564685	0		=			
ANR	9564713	MemberAccess	cw . ptr		9564685	0					
ANR	9564714	Identifier	cw		9564685	0					
ANR	9564715	Identifier	ptr		9564685	1					
ANR	9564716	AdditiveExpression	buf - 1		9564685	1		-			
ANR	9564717	Identifier	buf		9564685	0					
ANR	9564718	PrimaryExpression	1		9564685	1					
ANR	9564719	ExpressionStatement	cw . limit = cw . ptr + nmax	518:4:13727:13751	9564685	4	True				
ANR	9564720	AssignmentExpression	cw . limit = cw . ptr + nmax		9564685	0		=			
ANR	9564721	MemberAccess	cw . limit		9564685	0					
ANR	9564722	Identifier	cw		9564685	0					
ANR	9564723	Identifier	limit		9564685	1					
ANR	9564724	AdditiveExpression	cw . ptr + nmax		9564685	1		+			
ANR	9564725	MemberAccess	cw . ptr		9564685	0					
ANR	9564726	Identifier	cw		9564685	0					
ANR	9564727	Identifier	ptr		9564685	1					
ANR	9564728	Identifier	nmax		9564685	1					
ANR	9564729	WhileStatement	while ( cw . ptr < cw . limit )		9564685	5					
ANR	9564730	Condition	cw . ptr < cw . limit	519:11:13764:13780	9564685	0	True				
ANR	9564731	RelationalExpression	cw . ptr < cw . limit		9564685	0		<			
ANR	9564732	MemberAccess	cw . ptr		9564685	0					
ANR	9564733	Identifier	cw		9564685	0					
ANR	9564734	Identifier	ptr		9564685	1					
ANR	9564735	MemberAccess	cw . limit		9564685	1					
ANR	9564736	Identifier	cw		9564685	0					
ANR	9564737	Identifier	limit		9564685	1					
ANR	9564738	CompoundStatement		9:8:187:195	9564685	1					
ANR	9564739	IdentifierDeclStatement	int left ;	520:8:13793:13801	9564685	0	True				
ANR	9564740	IdentifierDecl	left		9564685	0					
ANR	9564741	IdentifierDeclType	int		9564685	0					
ANR	9564742	Identifier	left		9564685	1					
ANR	9564743	IfStatement	if ( ( left = s -> srlimit - s -> srptr ) > min_left )		9564685	1					
ANR	9564744	Condition	( left = s -> srlimit - s -> srptr ) > min_left	522:12:13816:13856	9564685	0	True				
ANR	9564745	RelationalExpression	( left = s -> srlimit - s -> srptr ) > min_left		9564685	0		>			
ANR	9564746	AssignmentExpression	left = s -> srlimit - s -> srptr		9564685	0		=			
ANR	9564747	Identifier	left		9564685	0					
ANR	9564748	AdditiveExpression	s -> srlimit - s -> srptr		9564685	1		-			
ANR	9564749	PtrMemberAccess	s -> srlimit		9564685	0					
ANR	9564750	Identifier	s		9564685	0					
ANR	9564751	Identifier	srlimit		9564685	1					
ANR	9564752	PtrMemberAccess	s -> srptr		9564685	1					
ANR	9564753	Identifier	s		9564685	0					
ANR	9564754	Identifier	srptr		9564685	1					
ANR	9564755	Identifier	min_left		9564685	1					
ANR	9564756	CompoundStatement		11:55:253:253	9564685	1					
ANR	9564757	ExpressionStatement	s -> srlimit -= min_left	523:12:13873:13895	9564685	0	True				
ANR	9564758	AssignmentExpression	s -> srlimit -= min_left		9564685	0		-=			
ANR	9564759	PtrMemberAccess	s -> srlimit		9564685	0					
ANR	9564760	Identifier	s		9564685	0					
ANR	9564761	Identifier	srlimit		9564685	1					
ANR	9564762	Identifier	min_left		9564685	1					
ANR	9564763	ExpressionStatement	"stream_move ( & s -> cursor . r , & cw )"	524:12:13909:13939	9564685	1	True				
ANR	9564764	CallExpression	"stream_move ( & s -> cursor . r , & cw )"		9564685	0					
ANR	9564765	Callee	stream_move		9564685	0					
ANR	9564766	Identifier	stream_move		9564685	0					
ANR	9564767	ArgumentList	& s -> cursor . r		9564685	1					
ANR	9564768	Argument	& s -> cursor . r		9564685	0					
ANR	9564769	UnaryOperationExpression	& s -> cursor . r		9564685	0					
ANR	9564770	UnaryOperator	&		9564685	0					
ANR	9564771	MemberAccess	s -> cursor . r		9564685	1					
ANR	9564772	PtrMemberAccess	s -> cursor		9564685	0					
ANR	9564773	Identifier	s		9564685	0					
ANR	9564774	Identifier	cursor		9564685	1					
ANR	9564775	Identifier	r		9564685	1					
ANR	9564776	Argument	& cw		9564685	1					
ANR	9564777	UnaryOperationExpression	& cw		9564685	0					
ANR	9564778	UnaryOperator	&		9564685	0					
ANR	9564779	Identifier	cw		9564685	1					
ANR	9564780	ExpressionStatement	s -> srlimit += min_left	525:12:13953:13975	9564685	2	True				
ANR	9564781	AssignmentExpression	s -> srlimit += min_left		9564685	0		+=			
ANR	9564782	PtrMemberAccess	s -> srlimit		9564685	0					
ANR	9564783	Identifier	s		9564685	0					
ANR	9564784	Identifier	srlimit		9564685	1					
ANR	9564785	Identifier	min_left		9564685	1					
ANR	9564786	ElseStatement	else		9564685	0					
ANR	9564787	CompoundStatement		18:12:464:480	9564685	0					
ANR	9564788	IdentifierDeclStatement	uint wanted = cw . limit - cw . ptr ;	527:12:14006:14037	9564685	0	True				
ANR	9564789	IdentifierDecl	wanted = cw . limit - cw . ptr		9564685	0					
ANR	9564790	IdentifierDeclType	uint		9564685	0					
ANR	9564791	Identifier	wanted		9564685	1					
ANR	9564792	AssignmentExpression	wanted = cw . limit - cw . ptr		9564685	2		=			
ANR	9564793	Identifier	wanted		9564685	0					
ANR	9564794	AdditiveExpression	cw . limit - cw . ptr		9564685	1		-			
ANR	9564795	MemberAccess	cw . limit		9564685	0					
ANR	9564796	Identifier	cw		9564685	0					
ANR	9564797	Identifier	limit		9564685	1					
ANR	9564798	MemberAccess	cw . ptr		9564685	1					
ANR	9564799	Identifier	cw		9564685	0					
ANR	9564800	Identifier	ptr		9564685	1					
ANR	9564801	IdentifierDeclStatement	int c ;	528:12:14051:14056	9564685	1	True				
ANR	9564802	IdentifierDecl	c		9564685	0					
ANR	9564803	IdentifierDeclType	int		9564685	0					
ANR	9564804	Identifier	c		9564685	1					
ANR	9564805	IdentifierDeclStatement	stream_state * st ;	529:12:14070:14086	9564685	2	True				
ANR	9564806	IdentifierDecl	* st		9564685	0					
ANR	9564807	IdentifierDeclType	stream_state *		9564685	0					
ANR	9564808	Identifier	st		9564685	1					
ANR	9564809	IfStatement	if ( wanted >= s -> bsize >> 2 && ( st = s -> state ) != 0 && wanted >= st -> templat -> min_out_size && s -> end_status == 0 && left == 0 )		9564685	3					
ANR	9564810	Condition	wanted >= s -> bsize >> 2 && ( st = s -> state ) != 0 && wanted >= st -> templat -> min_out_size && s -> end_status == 0 && left == 0	531:16:14105:14289	9564685	0	True				
ANR	9564811	AndExpression	wanted >= s -> bsize >> 2 && ( st = s -> state ) != 0 && wanted >= st -> templat -> min_out_size && s -> end_status == 0 && left == 0		9564685	0		&&			
ANR	9564812	RelationalExpression	wanted >= s -> bsize >> 2		9564685	0		>=			
ANR	9564813	Identifier	wanted		9564685	0					
ANR	9564814	ShiftExpression	s -> bsize >> 2		9564685	1		>>			
ANR	9564815	PtrMemberAccess	s -> bsize		9564685	0					
ANR	9564816	Identifier	s		9564685	0					
ANR	9564817	Identifier	bsize		9564685	1					
ANR	9564818	PrimaryExpression	2		9564685	1					
ANR	9564819	AndExpression	( st = s -> state ) != 0 && wanted >= st -> templat -> min_out_size && s -> end_status == 0 && left == 0		9564685	1		&&			
ANR	9564820	EqualityExpression	( st = s -> state ) != 0		9564685	0		!=			
ANR	9564821	AssignmentExpression	st = s -> state		9564685	0		=			
ANR	9564822	Identifier	st		9564685	0					
ANR	9564823	PtrMemberAccess	s -> state		9564685	1					
ANR	9564824	Identifier	s		9564685	0					
ANR	9564825	Identifier	state		9564685	1					
ANR	9564826	PrimaryExpression	0		9564685	1					
ANR	9564827	AndExpression	wanted >= st -> templat -> min_out_size && s -> end_status == 0 && left == 0		9564685	1		&&			
ANR	9564828	RelationalExpression	wanted >= st -> templat -> min_out_size		9564685	0		>=			
ANR	9564829	Identifier	wanted		9564685	0					
ANR	9564830	PtrMemberAccess	st -> templat -> min_out_size		9564685	1					
ANR	9564831	PtrMemberAccess	st -> templat		9564685	0					
ANR	9564832	Identifier	st		9564685	0					
ANR	9564833	Identifier	templat		9564685	1					
ANR	9564834	Identifier	min_out_size		9564685	1					
ANR	9564835	AndExpression	s -> end_status == 0 && left == 0		9564685	1		&&			
ANR	9564836	EqualityExpression	s -> end_status == 0		9564685	0		==			
ANR	9564837	PtrMemberAccess	s -> end_status		9564685	0					
ANR	9564838	Identifier	s		9564685	0					
ANR	9564839	Identifier	end_status		9564685	1					
ANR	9564840	PrimaryExpression	0		9564685	1					
ANR	9564841	EqualityExpression	left == 0		9564685	1		==			
ANR	9564842	Identifier	left		9564685	0					
ANR	9564843	PrimaryExpression	0		9564685	1					
ANR	9564844	CompoundStatement		26:16:721:740	9564685	1					
ANR	9564845	IdentifierDeclStatement	byte * wptr = cw . ptr ;	537:16:14327:14346	9564685	0	True				
ANR	9564846	IdentifierDecl	* wptr = cw . ptr		9564685	0					
ANR	9564847	IdentifierDeclType	byte *		9564685	0					
ANR	9564848	Identifier	wptr		9564685	1					
ANR	9564849	AssignmentExpression	* wptr = cw . ptr		9564685	2		=			
ANR	9564850	Identifier	wptr		9564685	0					
ANR	9564851	MemberAccess	cw . ptr		9564685	1					
ANR	9564852	Identifier	cw		9564685	0					
ANR	9564853	Identifier	ptr		9564685	1					
ANR	9564854	ExpressionStatement	cw . limit -= min_left	539:16:14365:14385	9564685	1	True				
ANR	9564855	AssignmentExpression	cw . limit -= min_left		9564685	0		-=			
ANR	9564856	MemberAccess	cw . limit		9564685	0					
ANR	9564857	Identifier	cw		9564685	0					
ANR	9564858	Identifier	limit		9564685	1					
ANR	9564859	Identifier	min_left		9564685	1					
ANR	9564860	ExpressionStatement	"status = sreadbuf ( s , & cw )"	540:16:14403:14428	9564685	2	True				
ANR	9564861	AssignmentExpression	"status = sreadbuf ( s , & cw )"		9564685	0		=			
ANR	9564862	Identifier	status		9564685	0					
ANR	9564863	CallExpression	"sreadbuf ( s , & cw )"		9564685	1					
ANR	9564864	Callee	sreadbuf		9564685	0					
ANR	9564865	Identifier	sreadbuf		9564685	0					
ANR	9564866	ArgumentList	s		9564685	1					
ANR	9564867	Argument	s		9564685	0					
ANR	9564868	Identifier	s		9564685	0					
ANR	9564869	Argument	& cw		9564685	1					
ANR	9564870	UnaryOperationExpression	& cw		9564685	0					
ANR	9564871	UnaryOperator	&		9564685	0					
ANR	9564872	Identifier	cw		9564685	1					
ANR	9564873	ExpressionStatement	cw . limit += min_left	541:16:14446:14466	9564685	3	True				
ANR	9564874	AssignmentExpression	cw . limit += min_left		9564685	0		+=			
ANR	9564875	MemberAccess	cw . limit		9564685	0					
ANR	9564876	Identifier	cw		9564685	0					
ANR	9564877	Identifier	limit		9564685	1					
ANR	9564878	Identifier	min_left		9564685	1					
ANR	9564879	ExpressionStatement	"stream_compact ( s , true )"	543:16:14564:14587	9564685	4	True				
ANR	9564880	CallExpression	"stream_compact ( s , true )"		9564685	0					
ANR	9564881	Callee	stream_compact		9564685	0					
ANR	9564882	Identifier	stream_compact		9564685	0					
ANR	9564883	ArgumentList	s		9564685	1					
ANR	9564884	Argument	s		9564685	0					
ANR	9564885	Identifier	s		9564685	0					
ANR	9564886	Argument	true		9564685	1					
ANR	9564887	Identifier	true		9564685	0					
ANR	9564888	ExpressionStatement	s -> srptr = s -> srlimit = s -> cbuf - 1	549:16:14862:14897	9564685	5	True				
ANR	9564889	AssignmentExpression	s -> srptr = s -> srlimit = s -> cbuf - 1		9564685	0		=			
ANR	9564890	PtrMemberAccess	s -> srptr		9564685	0					
ANR	9564891	Identifier	s		9564685	0					
ANR	9564892	Identifier	srptr		9564685	1					
ANR	9564893	AssignmentExpression	s -> srlimit = s -> cbuf - 1		9564685	1		=			
ANR	9564894	PtrMemberAccess	s -> srlimit		9564685	0					
ANR	9564895	Identifier	s		9564685	0					
ANR	9564896	Identifier	srlimit		9564685	1					
ANR	9564897	AdditiveExpression	s -> cbuf - 1		9564685	1		-			
ANR	9564898	PtrMemberAccess	s -> cbuf		9564685	0					
ANR	9564899	Identifier	s		9564685	0					
ANR	9564900	Identifier	cbuf		9564685	1					
ANR	9564901	PrimaryExpression	1		9564685	1					
ANR	9564902	ExpressionStatement	s -> position += cw . ptr - wptr	550:16:14915:14943	9564685	6	True				
ANR	9564903	AssignmentExpression	s -> position += cw . ptr - wptr		9564685	0		+=			
ANR	9564904	PtrMemberAccess	s -> position		9564685	0					
ANR	9564905	Identifier	s		9564685	0					
ANR	9564906	Identifier	position		9564685	1					
ANR	9564907	AdditiveExpression	cw . ptr - wptr		9564685	1		-			
ANR	9564908	MemberAccess	cw . ptr		9564685	0					
ANR	9564909	Identifier	cw		9564685	0					
ANR	9564910	Identifier	ptr		9564685	1					
ANR	9564911	Identifier	wptr		9564685	1					
ANR	9564912	IfStatement	if ( status <= 0 || cw . ptr == cw . limit )		9564685	7					
ANR	9564913	Condition	status <= 0 || cw . ptr == cw . limit	551:20:14965:14997	9564685	0	True				
ANR	9564914	OrExpression	status <= 0 || cw . ptr == cw . limit		9564685	0		||			
ANR	9564915	RelationalExpression	status <= 0		9564685	0		<=			
ANR	9564916	Identifier	status		9564685	0					
ANR	9564917	PrimaryExpression	0		9564685	1					
ANR	9564918	EqualityExpression	cw . ptr == cw . limit		9564685	1		==			
ANR	9564919	MemberAccess	cw . ptr		9564685	0					
ANR	9564920	Identifier	cw		9564685	0					
ANR	9564921	Identifier	ptr		9564685	1					
ANR	9564922	MemberAccess	cw . limit		9564685	1					
ANR	9564923	Identifier	cw		9564685	0					
ANR	9564924	Identifier	limit		9564685	1					
ANR	9564925	BreakStatement	break ;	552:20:15020:15025	9564685	1	True				
ANR	9564926	ExpressionStatement	c = spgetc ( s )	554:12:15053:15066	9564685	4	True				
ANR	9564927	AssignmentExpression	c = spgetc ( s )		9564685	0		=			
ANR	9564928	Identifier	c		9564685	0					
ANR	9564929	CallExpression	spgetc ( s )		9564685	1					
ANR	9564930	Callee	spgetc		9564685	0					
ANR	9564931	Identifier	spgetc		9564685	0					
ANR	9564932	ArgumentList	s		9564685	1					
ANR	9564933	Argument	s		9564685	0					
ANR	9564934	Identifier	s		9564685	0					
ANR	9564935	IfStatement	if ( c < 0 )		9564685	5					
ANR	9564936	Condition	c < 0	555:16:15084:15088	9564685	0	True				
ANR	9564937	RelationalExpression	c < 0		9564685	0		<			
ANR	9564938	Identifier	c		9564685	0					
ANR	9564939	PrimaryExpression	0		9564685	1					
ANR	9564940	CompoundStatement		44:23:1485:1485	9564685	1					
ANR	9564941	ExpressionStatement	status = c	556:16:15109:15119	9564685	0	True				
ANR	9564942	AssignmentExpression	status = c		9564685	0		=			
ANR	9564943	Identifier	status		9564685	0					
ANR	9564944	Identifier	c		9564685	1					
ANR	9564945	BreakStatement	break ;	557:16:15137:15142	9564685	1	True				
ANR	9564946	ExpressionStatement	* ++ ( cw . ptr ) = c	559:12:15170:15185	9564685	6	True				
ANR	9564947	AssignmentExpression	* ++ ( cw . ptr ) = c		9564685	0		=			
ANR	9564948	UnaryOperationExpression	* ++ ( cw . ptr )		9564685	0					
ANR	9564949	UnaryOperator	*		9564685	0					
ANR	9564950	UnaryExpression	++ ( cw . ptr )		9564685	1					
ANR	9564951	IncDec	++		9564685	0					
ANR	9564952	MemberAccess	cw . ptr		9564685	1					
ANR	9564953	Identifier	cw		9564685	0					
ANR	9564954	Identifier	ptr		9564685	1					
ANR	9564955	Identifier	c		9564685	1					
ANR	9564956	ExpressionStatement	* pn = cw . ptr + 1 - buf	562:4:15207:15229	9564685	6	True				
ANR	9564957	AssignmentExpression	* pn = cw . ptr + 1 - buf		9564685	0		=			
ANR	9564958	UnaryOperationExpression	* pn		9564685	0					
ANR	9564959	UnaryOperator	*		9564685	0					
ANR	9564960	Identifier	pn		9564685	1					
ANR	9564961	AdditiveExpression	cw . ptr + 1 - buf		9564685	1		+			
ANR	9564962	MemberAccess	cw . ptr		9564685	0					
ANR	9564963	Identifier	cw		9564685	0					
ANR	9564964	Identifier	ptr		9564685	1					
ANR	9564965	AdditiveExpression	1 - buf		9564685	1		-			
ANR	9564966	PrimaryExpression	1		9564685	0					
ANR	9564967	Identifier	buf		9564685	1					
ANR	9564968	ReturnStatement	return ( status >= 0 ? 0 : status ) ;	563:4:15235:15268	9564685	7	True				
ANR	9564969	ConditionalExpression	status >= 0 ? 0 : status		9564685	0					
ANR	9564970	Condition	status >= 0		9564685	0					
ANR	9564971	RelationalExpression	status >= 0		9564685	0		>=			
ANR	9564972	Identifier	status		9564685	0					
ANR	9564973	PrimaryExpression	0		9564685	1					
ANR	9564974	PrimaryExpression	0		9564685	1					
ANR	9564975	Identifier	status		9564685	2					
ANR	9564976	ReturnType	int		9564685	1					
ANR	9564977	Identifier	sgets		9564685	2					
ANR	9564978	ParameterList	"stream * s , byte * buf , uint nmax , uint * pn"		9564685	3					
ANR	9564979	Parameter	stream * s	511:6:13559:13568	9564685	0	True				
ANR	9564980	ParameterType	stream *		9564685	0					
ANR	9564981	Identifier	s		9564685	1					
ANR	9564982	Parameter	byte * buf	511:18:13571:13580	9564685	1	True				
ANR	9564983	ParameterType	byte *		9564685	0					
ANR	9564984	Identifier	buf		9564685	1					
ANR	9564985	Parameter	uint nmax	511:30:13583:13591	9564685	2	True				
ANR	9564986	ParameterType	uint		9564685	0					
ANR	9564987	Identifier	nmax		9564685	1					
ANR	9564988	Parameter	uint * pn	511:41:13594:13602	9564685	3	True				
ANR	9564989	ParameterType	uint *		9564685	0					
ANR	9564990	Identifier	pn		9564685	1					
ANR	9564991	CFGEntryNode	ENTRY		9564685		True				
ANR	9564992	CFGExitNode	EXIT		9564685		True				
ANR	9564993	Symbol	& s -> cursor		9564685						
ANR	9564994	Symbol	* st		9564685						
ANR	9564995	Symbol	nmax		9564685						
ANR	9564996	Symbol	s -> srptr		9564685						
ANR	9564997	Symbol	sreadbuf		9564685						
ANR	9564998	Symbol	s -> srlimit		9564685						
ANR	9564999	Symbol	st -> templat		9564685						
ANR	9565000	Symbol	s -> cbuf		9564685						
ANR	9565001	Symbol	* * st		9564685						
ANR	9565002	Symbol	s -> bsize		9564685						
ANR	9565003	Symbol	cw . ptr		9564685						
ANR	9565004	Symbol	& s -> cursor . r		9564685						
ANR	9565005	Symbol	s -> cursor		9564685						
ANR	9565006	Symbol	wptr		9564685						
ANR	9565007	Symbol	st		9564685						
ANR	9565008	Symbol	* cw . ptr		9564685						
ANR	9565009	Symbol	c		9564685						
ANR	9565010	Symbol	min_left		9564685						
ANR	9565011	Symbol	cw . limit		9564685						
ANR	9565012	Symbol	s -> position		9564685						
ANR	9565013	Symbol	s -> state		9564685						
ANR	9565014	Symbol	* pn		9564685						
ANR	9565015	Symbol	* st -> templat		9564685						
ANR	9565016	Symbol	st -> templat -> min_out_size		9564685						
ANR	9565017	Symbol	sbuf_min_left		9564685						
ANR	9565018	Symbol	buf		9564685						
ANR	9565019	Symbol	s		9564685						
ANR	9565020	Symbol	cw		9564685						
ANR	9565021	Symbol	wanted		9564685						
ANR	9565022	Symbol	left		9564685						
ANR	9565023	Symbol	true		9564685						
ANR	9565024	Symbol	* cw		9564685						
ANR	9565025	Symbol	s -> end_status		9564685						
ANR	9565026	Symbol	* s		9564685						
ANR	9565027	Symbol	spgetc		9564685						
ANR	9565028	Symbol	pn		9564685						
ANR	9565029	Symbol	* ++ ( cw . ptr )		9564685						
ANR	9565030	Symbol	status		9564685						
ANR	9565031	Symbol	& cw		9564685						
ANR	9565032	Function	sputs	568:0:15380:16105							
ANR	9565033	FunctionDef	"sputs (register stream * s , const byte * str , uint wlen , uint * pn)"		9565032	0					
ANR	9565034	CompoundStatement		570:0:15451:16105	9565032	0					
ANR	9565035	IdentifierDeclStatement	uint len = wlen ;	571:4:15457:15472	9565032	0	True				
ANR	9565036	IdentifierDecl	len = wlen		9565032	0					
ANR	9565037	IdentifierDeclType	uint		9565032	0					
ANR	9565038	Identifier	len		9565032	1					
ANR	9565039	AssignmentExpression	len = wlen		9565032	2		=			
ANR	9565040	Identifier	wlen		9565032	0					
ANR	9565041	Identifier	wlen		9565032	1					
ANR	9565042	IdentifierDeclStatement	int status = s -> end_status ;	572:4:15478:15504	9565032	1	True				
ANR	9565043	IdentifierDecl	status = s -> end_status		9565032	0					
ANR	9565044	IdentifierDeclType	int		9565032	0					
ANR	9565045	Identifier	status		9565032	1					
ANR	9565046	AssignmentExpression	status = s -> end_status		9565032	2		=			
ANR	9565047	Identifier	status		9565032	0					
ANR	9565048	PtrMemberAccess	s -> end_status		9565032	1					
ANR	9565049	Identifier	s		9565032	0					
ANR	9565050	Identifier	end_status		9565032	1					
ANR	9565051	IfStatement	if ( status >= 0 )		9565032	2					
ANR	9565052	Condition	status >= 0	574:8:15515:15525	9565032	0	True				
ANR	9565053	RelationalExpression	status >= 0		9565032	0		>=			
ANR	9565054	Identifier	status		9565032	0					
ANR	9565055	PrimaryExpression	0		9565032	1					
ANR	9565056	WhileStatement	while ( len > 0 )		9565032	1					
ANR	9565057	Condition	len > 0	575:15:15543:15549	9565032	0	True				
ANR	9565058	RelationalExpression	len > 0		9565032	0		>			
ANR	9565059	Identifier	len		9565032	0					
ANR	9565060	PrimaryExpression	0		9565032	1					
ANR	9565061	CompoundStatement		7:12:114:148	9565032	1					
ANR	9565062	IdentifierDeclStatement	uint count = s -> swlimit - s -> swptr ;	576:12:15566:15600	9565032	0	True				
ANR	9565063	IdentifierDecl	count = s -> swlimit - s -> swptr		9565032	0					
ANR	9565064	IdentifierDeclType	uint		9565032	0					
ANR	9565065	Identifier	count		9565032	1					
ANR	9565066	AssignmentExpression	count = s -> swlimit - s -> swptr		9565032	2		=			
ANR	9565067	Identifier	count		9565032	0					
ANR	9565068	AdditiveExpression	s -> swlimit - s -> swptr		9565032	1		-			
ANR	9565069	PtrMemberAccess	s -> swlimit		9565032	0					
ANR	9565070	Identifier	s		9565032	0					
ANR	9565071	Identifier	swlimit		9565032	1					
ANR	9565072	PtrMemberAccess	s -> swptr		9565032	1					
ANR	9565073	Identifier	s		9565032	0					
ANR	9565074	Identifier	swptr		9565032	1					
ANR	9565075	IfStatement	if ( count > 0 )		9565032	1					
ANR	9565076	Condition	count > 0	578:16:15619:15627	9565032	0	True				
ANR	9565077	RelationalExpression	count > 0		9565032	0		>			
ANR	9565078	Identifier	count		9565032	0					
ANR	9565079	PrimaryExpression	0		9565032	1					
ANR	9565080	CompoundStatement		9:27:178:178	9565032	1					
ANR	9565081	IfStatement	if ( count > len )		9565032	0					
ANR	9565082	Condition	count > len	579:20:15652:15662	9565032	0	True				
ANR	9565083	RelationalExpression	count > len		9565032	0		>			
ANR	9565084	Identifier	count		9565032	0					
ANR	9565085	Identifier	len		9565032	1					
ANR	9565086	ExpressionStatement	count = len	580:20:15685:15696	9565032	1	True				
ANR	9565087	AssignmentExpression	count = len		9565032	0		=			
ANR	9565088	Identifier	count		9565032	0					
ANR	9565089	Identifier	len		9565032	1					
ANR	9565090	ExpressionStatement	"memcpy ( s -> swptr + 1 , str , count )"	581:16:15714:15746	9565032	1	True				
ANR	9565091	CallExpression	"memcpy ( s -> swptr + 1 , str , count )"		9565032	0					
ANR	9565092	Callee	memcpy		9565032	0					
ANR	9565093	Identifier	memcpy		9565032	0					
ANR	9565094	ArgumentList	s -> swptr + 1		9565032	1					
ANR	9565095	Argument	s -> swptr + 1		9565032	0					
ANR	9565096	AdditiveExpression	s -> swptr + 1		9565032	0		+			
ANR	9565097	PtrMemberAccess	s -> swptr		9565032	0					
ANR	9565098	Identifier	s		9565032	0					
ANR	9565099	Identifier	swptr		9565032	1					
ANR	9565100	PrimaryExpression	1		9565032	1					
ANR	9565101	Argument	str		9565032	1					
ANR	9565102	Identifier	str		9565032	0					
ANR	9565103	Argument	count		9565032	2					
ANR	9565104	Identifier	count		9565032	0					
ANR	9565105	ExpressionStatement	s -> swptr += count	582:16:15764:15781	9565032	2	True				
ANR	9565106	AssignmentExpression	s -> swptr += count		9565032	0		+=			
ANR	9565107	PtrMemberAccess	s -> swptr		9565032	0					
ANR	9565108	Identifier	s		9565032	0					
ANR	9565109	Identifier	swptr		9565032	1					
ANR	9565110	Identifier	count		9565032	1					
ANR	9565111	ExpressionStatement	str += count	583:16:15799:15811	9565032	3	True				
ANR	9565112	AssignmentExpression	str += count		9565032	0		+=			
ANR	9565113	Identifier	str		9565032	0					
ANR	9565114	Identifier	count		9565032	1					
ANR	9565115	ExpressionStatement	len -= count	584:16:15829:15841	9565032	4	True				
ANR	9565116	AssignmentExpression	len -= count		9565032	0		-=			
ANR	9565117	Identifier	len		9565032	0					
ANR	9565118	Identifier	count		9565032	1					
ANR	9565119	ElseStatement	else		9565032	0					
ANR	9565120	CompoundStatement		17:16:428:444	9565032	0					
ANR	9565121	IdentifierDeclStatement	byte ch = * str ++ ;	586:16:15880:15896	9565032	0	True				
ANR	9565122	IdentifierDecl	ch = * str ++		9565032	0					
ANR	9565123	IdentifierDeclType	byte		9565032	0					
ANR	9565124	Identifier	ch		9565032	1					
ANR	9565125	AssignmentExpression	ch = * str ++		9565032	2		=			
ANR	9565126	Identifier	ch		9565032	0					
ANR	9565127	UnaryOperationExpression	* str ++		9565032	1					
ANR	9565128	UnaryOperator	*		9565032	0					
ANR	9565129	PostIncDecOperationExpression	str ++		9565032	1					
ANR	9565130	Identifier	str		9565032	0					
ANR	9565131	IncDec	++		9565032	1					
ANR	9565132	ExpressionStatement	"status = sputc ( s , ch )"	588:16:15915:15936	9565032	1	True				
ANR	9565133	AssignmentExpression	"status = sputc ( s , ch )"		9565032	0		=			
ANR	9565134	Identifier	status		9565032	0					
ANR	9565135	CallExpression	"sputc ( s , ch )"		9565032	1					
ANR	9565136	Callee	sputc		9565032	0					
ANR	9565137	Identifier	sputc		9565032	0					
ANR	9565138	ArgumentList	s		9565032	1					
ANR	9565139	Argument	s		9565032	0					
ANR	9565140	Identifier	s		9565032	0					
ANR	9565141	Argument	ch		9565032	1					
ANR	9565142	Identifier	ch		9565032	0					
ANR	9565143	IfStatement	if ( status < 0 )		9565032	2					
ANR	9565144	Condition	status < 0	589:20:15958:15967	9565032	0	True				
ANR	9565145	RelationalExpression	status < 0		9565032	0		<			
ANR	9565146	Identifier	status		9565032	0					
ANR	9565147	PrimaryExpression	0		9565032	1					
ANR	9565148	BreakStatement	break ;	590:20:15990:15995	9565032	1	True				
ANR	9565149	ExpressionStatement	len --	591:16:16013:16018	9565032	3	True				
ANR	9565150	PostIncDecOperationExpression	len --		9565032	0					
ANR	9565151	Identifier	len		9565032	0					
ANR	9565152	IncDec	--		9565032	1					
ANR	9565153	ExpressionStatement	* pn = wlen - len	594:4:16048:16064	9565032	3	True				
ANR	9565154	AssignmentExpression	* pn = wlen - len		9565032	0		=			
ANR	9565155	UnaryOperationExpression	* pn		9565032	0					
ANR	9565156	UnaryOperator	*		9565032	0					
ANR	9565157	Identifier	pn		9565032	1					
ANR	9565158	AdditiveExpression	wlen - len		9565032	1		-			
ANR	9565159	Identifier	wlen		9565032	0					
ANR	9565160	Identifier	len		9565032	1					
ANR	9565161	ReturnStatement	return ( status >= 0 ? 0 : status ) ;	595:4:16070:16103	9565032	4	True				
ANR	9565162	ConditionalExpression	status >= 0 ? 0 : status		9565032	0					
ANR	9565163	Condition	status >= 0		9565032	0					
ANR	9565164	RelationalExpression	status >= 0		9565032	0		>=			
ANR	9565165	Identifier	status		9565032	0					
ANR	9565166	PrimaryExpression	0		9565032	1					
ANR	9565167	PrimaryExpression	0		9565032	1					
ANR	9565168	Identifier	status		9565032	2					
ANR	9565169	ReturnType	int		9565032	1					
ANR	9565170	Identifier	sputs		9565032	2					
ANR	9565171	ParameterList	"register stream * s , const byte * str , uint wlen , uint * pn"		9565032	3					
ANR	9565172	Parameter	register stream * s	569:6:15390:15408	9565032	0	True				
ANR	9565173	ParameterType	register stream *		9565032	0					
ANR	9565174	Identifier	s		9565032	1					
ANR	9565175	Parameter	const byte * str	569:27:15411:15426	9565032	1	True				
ANR	9565176	ParameterType	const byte *		9565032	0					
ANR	9565177	Identifier	str		9565032	1					
ANR	9565178	Parameter	uint wlen	569:45:15429:15437	9565032	2	True				
ANR	9565179	ParameterType	uint		9565032	0					
ANR	9565180	Identifier	wlen		9565032	1					
ANR	9565181	Parameter	uint * pn	569:56:15440:15448	9565032	3	True				
ANR	9565182	ParameterType	uint *		9565032	0					
ANR	9565183	Identifier	pn		9565032	1					
ANR	9565184	CFGEntryNode	ENTRY		9565032		True				
ANR	9565185	CFGExitNode	EXIT		9565032		True				
ANR	9565186	Symbol	s -> swptr		9565032						
ANR	9565187	Symbol	ch		9565032						
ANR	9565188	Symbol	* pn		9565032						
ANR	9565189	Symbol	count		9565032						
ANR	9565190	Symbol	* str ++		9565032						
ANR	9565191	Symbol	wlen		9565032						
ANR	9565192	Symbol	sputc		9565032						
ANR	9565193	Symbol	str		9565032						
ANR	9565194	Symbol	s -> swlimit		9565032						
ANR	9565195	Symbol	s		9565032						
ANR	9565196	Symbol	len		9565032						
ANR	9565197	Symbol	s -> end_status		9565032						
ANR	9565198	Symbol	* s		9565032						
ANR	9565199	Symbol	pn		9565032						
ANR	9565200	Symbol	status		9565032						
ANR	9565201	Function	spskip	601:0:16257:17189							
ANR	9565202	FunctionDef	"spskip (register stream * s , gs_offset_t nskip , gs_offset_t * pskipped)"		9565201	0					
ANR	9565203	CompoundStatement		603:0:16331:17189	9565201	0					
ANR	9565204	IdentifierDeclStatement	gs_offset_t n = nskip ;	604:4:16337:16358	9565201	0	True				
ANR	9565205	IdentifierDecl	n = nskip		9565201	0					
ANR	9565206	IdentifierDeclType	gs_offset_t		9565201	0					
ANR	9565207	Identifier	n		9565201	1					
ANR	9565208	AssignmentExpression	n = nskip		9565201	2		=			
ANR	9565209	Identifier	nskip		9565201	0					
ANR	9565210	Identifier	nskip		9565201	1					
ANR	9565211	IdentifierDeclStatement	gs_offset_t min_left ;	605:4:16364:16384	9565201	1	True				
ANR	9565212	IdentifierDecl	min_left		9565201	0					
ANR	9565213	IdentifierDeclType	gs_offset_t		9565201	0					
ANR	9565214	Identifier	min_left		9565201	1					
ANR	9565215	IfStatement	if ( nskip < 0 || ! s_is_reading ( s ) )		9565201	2					
ANR	9565216	Condition	nskip < 0 || ! s_is_reading ( s )	607:8:16395:16423	9565201	0	True				
ANR	9565217	OrExpression	nskip < 0 || ! s_is_reading ( s )		9565201	0		||			
ANR	9565218	RelationalExpression	nskip < 0		9565201	0		<			
ANR	9565219	Identifier	nskip		9565201	0					
ANR	9565220	PrimaryExpression	0		9565201	1					
ANR	9565221	UnaryOperationExpression	! s_is_reading ( s )		9565201	1					
ANR	9565222	UnaryOperator	!		9565201	0					
ANR	9565223	CallExpression	s_is_reading ( s )		9565201	1					
ANR	9565224	Callee	s_is_reading		9565201	0					
ANR	9565225	Identifier	s_is_reading		9565201	0					
ANR	9565226	ArgumentList	s		9565201	1					
ANR	9565227	Argument	s		9565201	0					
ANR	9565228	Identifier	s		9565201	0					
ANR	9565229	CompoundStatement		5:39:94:94	9565201	1					
ANR	9565230	ExpressionStatement	* pskipped = 0	608:8:16436:16449	9565201	0	True				
ANR	9565231	AssignmentExpression	* pskipped = 0		9565201	0		=			
ANR	9565232	UnaryOperationExpression	* pskipped		9565201	0					
ANR	9565233	UnaryOperator	*		9565201	0					
ANR	9565234	Identifier	pskipped		9565201	1					
ANR	9565235	PrimaryExpression	0		9565201	1					
ANR	9565236	ReturnStatement	return ERRC ;	609:8:16459:16470	9565201	1	True				
ANR	9565237	Identifier	ERRC		9565201	0					
ANR	9565238	IfStatement	if ( s_can_seek ( s ) )		9565201	3					
ANR	9565239	Condition	s_can_seek ( s )	611:8:16486:16498	9565201	0	True				
ANR	9565240	CallExpression	s_can_seek ( s )		9565201	0					
ANR	9565241	Callee	s_can_seek		9565201	0					
ANR	9565242	Identifier	s_can_seek		9565201	0					
ANR	9565243	ArgumentList	s		9565201	1					
ANR	9565244	Argument	s		9565201	0					
ANR	9565245	Identifier	s		9565201	0					
ANR	9565246	CompoundStatement		11:8:215:245	9565201	1					
ANR	9565247	IdentifierDeclStatement	gs_offset_t pos = stell ( s ) ;	612:8:16511:16537	9565201	0	True				
ANR	9565248	IdentifierDecl	pos = stell ( s )		9565201	0					
ANR	9565249	IdentifierDeclType	gs_offset_t		9565201	0					
ANR	9565250	Identifier	pos		9565201	1					
ANR	9565251	AssignmentExpression	pos = stell ( s )		9565201	2		=			
ANR	9565252	Identifier	pos		9565201	0					
ANR	9565253	CallExpression	stell ( s )		9565201	1					
ANR	9565254	Callee	stell		9565201	0					
ANR	9565255	Identifier	stell		9565201	0					
ANR	9565256	ArgumentList	s		9565201	1					
ANR	9565257	Argument	s		9565201	0					
ANR	9565258	Identifier	s		9565201	0					
ANR	9565259	IdentifierDeclStatement	"int status = sseek ( s , pos + n ) ;"	613:8:16547:16577	9565201	1	True				
ANR	9565260	IdentifierDecl	"status = sseek ( s , pos + n )"		9565201	0					
ANR	9565261	IdentifierDeclType	int		9565201	0					
ANR	9565262	Identifier	status		9565201	1					
ANR	9565263	AssignmentExpression	"status = sseek ( s , pos + n )"		9565201	2		=			
ANR	9565264	Identifier	status		9565201	0					
ANR	9565265	CallExpression	"sseek ( s , pos + n )"		9565201	1					
ANR	9565266	Callee	sseek		9565201	0					
ANR	9565267	Identifier	sseek		9565201	0					
ANR	9565268	ArgumentList	s		9565201	1					
ANR	9565269	Argument	s		9565201	0					
ANR	9565270	Identifier	s		9565201	0					
ANR	9565271	Argument	pos + n		9565201	1					
ANR	9565272	AdditiveExpression	pos + n		9565201	0		+			
ANR	9565273	Identifier	pos		9565201	0					
ANR	9565274	Identifier	n		9565201	1					
ANR	9565275	ExpressionStatement	* pskipped = stell ( s ) - pos	615:8:16588:16614	9565201	2	True				
ANR	9565276	AssignmentExpression	* pskipped = stell ( s ) - pos		9565201	0		=			
ANR	9565277	UnaryOperationExpression	* pskipped		9565201	0					
ANR	9565278	UnaryOperator	*		9565201	0					
ANR	9565279	Identifier	pskipped		9565201	1					
ANR	9565280	AdditiveExpression	stell ( s ) - pos		9565201	1		-			
ANR	9565281	CallExpression	stell ( s )		9565201	0					
ANR	9565282	Callee	stell		9565201	0					
ANR	9565283	Identifier	stell		9565201	0					
ANR	9565284	ArgumentList	s		9565201	1					
ANR	9565285	Argument	s		9565201	0					
ANR	9565286	Identifier	s		9565201	0					
ANR	9565287	Identifier	pos		9565201	1					
ANR	9565288	ReturnStatement	return status ;	616:8:16624:16637	9565201	3	True				
ANR	9565289	Identifier	status		9565201	0					
ANR	9565290	ExpressionStatement	min_left = sbuf_min_left ( s )	618:4:16649:16676	9565201	4	True				
ANR	9565291	AssignmentExpression	min_left = sbuf_min_left ( s )		9565201	0		=			
ANR	9565292	Identifier	min_left		9565201	0					
ANR	9565293	CallExpression	sbuf_min_left ( s )		9565201	1					
ANR	9565294	Callee	sbuf_min_left		9565201	0					
ANR	9565295	Identifier	sbuf_min_left		9565201	0					
ANR	9565296	ArgumentList	s		9565201	1					
ANR	9565297	Argument	s		9565201	0					
ANR	9565298	Identifier	s		9565201	0					
ANR	9565299	WhileStatement	while ( sbufavailable ( s ) < n + min_left )		9565201	5					
ANR	9565300	Condition	sbufavailable ( s ) < n + min_left	619:11:16689:16719	9565201	0	True				
ANR	9565301	RelationalExpression	sbufavailable ( s ) < n + min_left		9565201	0		<			
ANR	9565302	CallExpression	sbufavailable ( s )		9565201	0					
ANR	9565303	Callee	sbufavailable		9565201	0					
ANR	9565304	Identifier	sbufavailable		9565201	0					
ANR	9565305	ArgumentList	s		9565201	1					
ANR	9565306	Argument	s		9565201	0					
ANR	9565307	Identifier	s		9565201	0					
ANR	9565308	AdditiveExpression	n + min_left		9565201	1		+			
ANR	9565309	Identifier	n		9565201	0					
ANR	9565310	Identifier	min_left		9565201	1					
ANR	9565311	CompoundStatement		18:8:400:410	9565201	1					
ANR	9565312	IdentifierDeclStatement	int status ;	620:8:16732:16742	9565201	0	True				
ANR	9565313	IdentifierDecl	status		9565201	0					
ANR	9565314	IdentifierDeclType	int		9565201	0					
ANR	9565315	Identifier	status		9565201	1					
ANR	9565316	ExpressionStatement	n -= sbufavailable ( s )	622:8:16753:16774	9565201	1	True				
ANR	9565317	AssignmentExpression	n -= sbufavailable ( s )		9565201	0		-=			
ANR	9565318	Identifier	n		9565201	0					
ANR	9565319	CallExpression	sbufavailable ( s )		9565201	1					
ANR	9565320	Callee	sbufavailable		9565201	0					
ANR	9565321	Identifier	sbufavailable		9565201	0					
ANR	9565322	ArgumentList	s		9565201	1					
ANR	9565323	Argument	s		9565201	0					
ANR	9565324	Identifier	s		9565201	0					
ANR	9565325	ExpressionStatement	s -> srptr = s -> srlimit	623:8:16784:16805	9565201	2	True				
ANR	9565326	AssignmentExpression	s -> srptr = s -> srlimit		9565201	0		=			
ANR	9565327	PtrMemberAccess	s -> srptr		9565201	0					
ANR	9565328	Identifier	s		9565201	0					
ANR	9565329	Identifier	srptr		9565201	1					
ANR	9565330	PtrMemberAccess	s -> srlimit		9565201	1					
ANR	9565331	Identifier	s		9565201	0					
ANR	9565332	Identifier	srlimit		9565201	1					
ANR	9565333	IfStatement	if ( s -> end_status )		9565201	3					
ANR	9565334	Condition	s -> end_status	624:12:16819:16831	9565201	0	True				
ANR	9565335	PtrMemberAccess	s -> end_status		9565201	0					
ANR	9565336	Identifier	s		9565201	0					
ANR	9565337	Identifier	end_status		9565201	1					
ANR	9565338	CompoundStatement		22:27:502:502	9565201	1					
ANR	9565339	ExpressionStatement	* pskipped = nskip - n	625:12:16848:16869	9565201	0	True				
ANR	9565340	AssignmentExpression	* pskipped = nskip - n		9565201	0		=			
ANR	9565341	UnaryOperationExpression	* pskipped		9565201	0					
ANR	9565342	UnaryOperator	*		9565201	0					
ANR	9565343	Identifier	pskipped		9565201	1					
ANR	9565344	AdditiveExpression	nskip - n		9565201	1		-			
ANR	9565345	Identifier	nskip		9565201	0					
ANR	9565346	Identifier	n		9565201	1					
ANR	9565347	ReturnStatement	return s -> end_status ;	626:12:16883:16903	9565201	1	True				
ANR	9565348	PtrMemberAccess	s -> end_status		9565201	0					
ANR	9565349	Identifier	s		9565201	0					
ANR	9565350	Identifier	end_status		9565201	1					
ANR	9565351	ExpressionStatement	status = sgetc ( s )	628:8:16923:16940	9565201	4	True				
ANR	9565352	AssignmentExpression	status = sgetc ( s )		9565201	0		=			
ANR	9565353	Identifier	status		9565201	0					
ANR	9565354	CallExpression	sgetc ( s )		9565201	1					
ANR	9565355	Callee	sgetc		9565201	0					
ANR	9565356	Identifier	sgetc		9565201	0					
ANR	9565357	ArgumentList	s		9565201	1					
ANR	9565358	Argument	s		9565201	0					
ANR	9565359	Identifier	s		9565201	0					
ANR	9565360	IfStatement	if ( status < 0 )		9565201	5					
ANR	9565361	Condition	status < 0	629:12:16954:16963	9565201	0	True				
ANR	9565362	RelationalExpression	status < 0		9565201	0		<			
ANR	9565363	Identifier	status		9565201	0					
ANR	9565364	PrimaryExpression	0		9565201	1					
ANR	9565365	CompoundStatement		27:24:634:634	9565201	1					
ANR	9565366	ExpressionStatement	* pskipped = nskip - n	630:12:16980:17001	9565201	0	True				
ANR	9565367	AssignmentExpression	* pskipped = nskip - n		9565201	0		=			
ANR	9565368	UnaryOperationExpression	* pskipped		9565201	0					
ANR	9565369	UnaryOperator	*		9565201	0					
ANR	9565370	Identifier	pskipped		9565201	1					
ANR	9565371	AdditiveExpression	nskip - n		9565201	1		-			
ANR	9565372	Identifier	nskip		9565201	0					
ANR	9565373	Identifier	n		9565201	1					
ANR	9565374	ReturnStatement	return status ;	631:12:17015:17028	9565201	1	True				
ANR	9565375	Identifier	status		9565201	0					
ANR	9565376	ExpressionStatement	-- n	633:8:17048:17051	9565201	6	True				
ANR	9565377	UnaryExpression	-- n		9565201	0					
ANR	9565378	IncDec	--		9565201	0					
ANR	9565379	Identifier	n		9565201	1					
ANR	9565380	ExpressionStatement	s -> srptr += n	636:4:17137:17150	9565201	6	True				
ANR	9565381	AssignmentExpression	s -> srptr += n		9565201	0		+=			
ANR	9565382	PtrMemberAccess	s -> srptr		9565201	0					
ANR	9565383	Identifier	s		9565201	0					
ANR	9565384	Identifier	srptr		9565201	1					
ANR	9565385	Identifier	n		9565201	1					
ANR	9565386	ExpressionStatement	* pskipped = nskip	637:4:17156:17173	9565201	7	True				
ANR	9565387	AssignmentExpression	* pskipped = nskip		9565201	0		=			
ANR	9565388	UnaryOperationExpression	* pskipped		9565201	0					
ANR	9565389	UnaryOperator	*		9565201	0					
ANR	9565390	Identifier	pskipped		9565201	1					
ANR	9565391	Identifier	nskip		9565201	1					
ANR	9565392	ReturnStatement	return 0 ;	638:4:17179:17187	9565201	8	True				
ANR	9565393	PrimaryExpression	0		9565201	0					
ANR	9565394	ReturnType	int		9565201	1					
ANR	9565395	Identifier	spskip		9565201	2					
ANR	9565396	ParameterList	"register stream * s , gs_offset_t nskip , gs_offset_t * pskipped"		9565201	3					
ANR	9565397	Parameter	register stream * s	602:7:16268:16286	9565201	0	True				
ANR	9565398	ParameterType	register stream *		9565201	0					
ANR	9565399	Identifier	s		9565201	1					
ANR	9565400	Parameter	gs_offset_t nskip	602:28:16289:16305	9565201	1	True				
ANR	9565401	ParameterType	gs_offset_t		9565201	0					
ANR	9565402	Identifier	nskip		9565201	1					
ANR	9565403	Parameter	gs_offset_t * pskipped	602:47:16308:16328	9565201	2	True				
ANR	9565404	ParameterType	gs_offset_t *		9565201	0					
ANR	9565405	Identifier	pskipped		9565201	1					
ANR	9565406	CFGEntryNode	ENTRY		9565201		True				
ANR	9565407	CFGExitNode	EXIT		9565201		True				
ANR	9565408	Symbol	sseek		9565201						
ANR	9565409	Symbol	pskipped		9565201						
ANR	9565410	Symbol	min_left		9565201						
ANR	9565411	Symbol	sgetc		9565201						
ANR	9565412	Symbol	s -> srptr		9565201						
ANR	9565413	Symbol	s -> srlimit		9565201						
ANR	9565414	Symbol	s_can_seek		9565201						
ANR	9565415	Symbol	* pskipped		9565201						
ANR	9565416	Symbol	nskip		9565201						
ANR	9565417	Symbol	n		9565201						
ANR	9565418	Symbol	stell		9565201						
ANR	9565419	Symbol	sbufavailable		9565201						
ANR	9565420	Symbol	sbuf_min_left		9565201						
ANR	9565421	Symbol	s		9565201						
ANR	9565422	Symbol	pos		9565201						
ANR	9565423	Symbol	s -> end_status		9565201						
ANR	9565424	Symbol	s_is_reading		9565201						
ANR	9565425	Symbol	* s		9565201						
ANR	9565426	Symbol	ERRC		9565201						
ANR	9565427	Symbol	status		9565201						
ANR	9565428	Function	sreadline	642:0:17263:19747							
ANR	9565429	FunctionDef	"sreadline (stream * s_in , stream * s_out , void * readline_data , gs_const_string * prompt , gs_string * buf , gs_memory_t * bufmem , uint * pcount , bool * pin_eol , bool ( * is_stdin ) ( const stream * ))"		9565428	0					
ANR	9565430	CompoundStatement		647:0:17485:19747	9565428	0					
ANR	9565431	IdentifierDeclStatement	uint count = * pcount ;	648:4:17491:17511	9565428	0	True				
ANR	9565432	IdentifierDecl	count = * pcount		9565428	0					
ANR	9565433	IdentifierDeclType	uint		9565428	0					
ANR	9565434	Identifier	count		9565428	1					
ANR	9565435	AssignmentExpression	count = * pcount		9565428	2		=			
ANR	9565436	Identifier	count		9565428	0					
ANR	9565437	UnaryOperationExpression	* pcount		9565428	1					
ANR	9565438	UnaryOperator	*		9565428	0					
ANR	9565439	Identifier	pcount		9565428	1					
ANR	9565440	Statement	define	654:3:17720:17725	9565428	1	True				
ANR	9565441	Statement	LF	654:10:17727:17728	9565428	2	True				
ANR	9565442	Statement	0xa	654:13:17730:17732	9565428	3	True				
ANR	9565443	IfStatement	if ( count == 0 && s_out && prompt )		9565428	4					
ANR	9565444	Condition	count == 0 && s_out && prompt	659:8:17774:17802	9565428	0	True				
ANR	9565445	AndExpression	count == 0 && s_out && prompt		9565428	0		&&			
ANR	9565446	EqualityExpression	count == 0		9565428	0		==			
ANR	9565447	Identifier	count		9565428	0					
ANR	9565448	PrimaryExpression	0		9565428	1					
ANR	9565449	AndExpression	s_out && prompt		9565428	1		&&			
ANR	9565450	Identifier	s_out		9565428	0					
ANR	9565451	Identifier	prompt		9565428	1					
ANR	9565452	CompoundStatement		15:8:352:412	9565428	1					
ANR	9565453	IdentifierDeclStatement	uint ignore_n ;	660:8:17815:17828	9565428	0	True				
ANR	9565454	IdentifierDecl	ignore_n		9565428	0					
ANR	9565455	IdentifierDeclType	uint		9565428	0					
ANR	9565456	Identifier	ignore_n		9565428	1					
ANR	9565457	IdentifierDeclStatement	"int ch = sputs ( s_out , prompt -> data , prompt -> size , & ignore_n ) ;"	661:8:17838:17898	9565428	1	True				
ANR	9565458	IdentifierDecl	"ch = sputs ( s_out , prompt -> data , prompt -> size , & ignore_n )"		9565428	0					
ANR	9565459	IdentifierDeclType	int		9565428	0					
ANR	9565460	Identifier	ch		9565428	1					
ANR	9565461	AssignmentExpression	"ch = sputs ( s_out , prompt -> data , prompt -> size , & ignore_n )"		9565428	2		=			
ANR	9565462	Identifier	ch		9565428	0					
ANR	9565463	CallExpression	"sputs ( s_out , prompt -> data , prompt -> size , & ignore_n )"		9565428	1					
ANR	9565464	Callee	sputs		9565428	0					
ANR	9565465	Identifier	sputs		9565428	0					
ANR	9565466	ArgumentList	s_out		9565428	1					
ANR	9565467	Argument	s_out		9565428	0					
ANR	9565468	Identifier	s_out		9565428	0					
ANR	9565469	Argument	prompt -> data		9565428	1					
ANR	9565470	PtrMemberAccess	prompt -> data		9565428	0					
ANR	9565471	Identifier	prompt		9565428	0					
ANR	9565472	Identifier	data		9565428	1					
ANR	9565473	Argument	prompt -> size		9565428	2					
ANR	9565474	PtrMemberAccess	prompt -> size		9565428	0					
ANR	9565475	Identifier	prompt		9565428	0					
ANR	9565476	Identifier	size		9565428	1					
ANR	9565477	Argument	& ignore_n		9565428	3					
ANR	9565478	UnaryOperationExpression	& ignore_n		9565428	0					
ANR	9565479	UnaryOperator	&		9565428	0					
ANR	9565480	Identifier	ignore_n		9565428	1					
ANR	9565481	IfStatement	if ( ch < 0 )		9565428	2					
ANR	9565482	Condition	ch < 0	663:12:17913:17918	9565428	0	True				
ANR	9565483	RelationalExpression	ch < 0		9565428	0		<			
ANR	9565484	Identifier	ch		9565428	0					
ANR	9565485	PrimaryExpression	0		9565428	1					
ANR	9565486	ReturnStatement	return ch ;	664:12:17933:17942	9565428	1	True				
ANR	9565487	Identifier	ch		9565428	0					
ANR	9565488	Label	top :	667:0:17951:17954	9565428	5	True				
ANR	9565489	Identifier	top		9565428	0					
ANR	9565490	IfStatement	if ( * pin_eol )		9565428	6					
ANR	9565491	Condition	* pin_eol	668:8:17964:17971	9565428	0	True				
ANR	9565492	UnaryOperationExpression	* pin_eol		9565428	0					
ANR	9565493	UnaryOperator	*		9565428	0					
ANR	9565494	Identifier	pin_eol		9565428	1					
ANR	9565495	CompoundStatement		28:8:709:738	9565428	1					
ANR	9565496	IdentifierDeclStatement	"int ch = spgetcc ( s_in , false ) ;"	674:8:18195:18224	9565428	0	True				
ANR	9565497	IdentifierDecl	"ch = spgetcc ( s_in , false )"		9565428	0					
ANR	9565498	IdentifierDeclType	int		9565428	0					
ANR	9565499	Identifier	ch		9565428	1					
ANR	9565500	AssignmentExpression	"ch = spgetcc ( s_in , false )"		9565428	2		=			
ANR	9565501	Identifier	ch		9565428	0					
ANR	9565502	CallExpression	"spgetcc ( s_in , false )"		9565428	1					
ANR	9565503	Callee	spgetcc		9565428	0					
ANR	9565504	Identifier	spgetcc		9565428	0					
ANR	9565505	ArgumentList	s_in		9565428	1					
ANR	9565506	Argument	s_in		9565428	0					
ANR	9565507	Identifier	s_in		9565428	0					
ANR	9565508	Argument	false		9565428	1					
ANR	9565509	Identifier	false		9565428	0					
ANR	9565510	IfStatement	if ( ch == EOFC )		9565428	1					
ANR	9565511	Condition	ch == EOFC	676:12:18239:18248	9565428	0	True				
ANR	9565512	EqualityExpression	ch == EOFC		9565428	0		==			
ANR	9565513	Identifier	ch		9565428	0					
ANR	9565514	Identifier	EOFC		9565428	1					
ANR	9565515	CompoundStatement		30:24:765:765	9565428	1					
ANR	9565516	ExpressionStatement	* pin_eol = false	677:12:18265:18281	9565428	0	True				
ANR	9565517	AssignmentExpression	* pin_eol = false		9565428	0		=			
ANR	9565518	UnaryOperationExpression	* pin_eol		9565428	0					
ANR	9565519	UnaryOperator	*		9565428	0					
ANR	9565520	Identifier	pin_eol		9565428	1					
ANR	9565521	Identifier	false		9565428	1					
ANR	9565522	ReturnStatement	return 0 ;	678:12:18295:18303	9565428	1	True				
ANR	9565523	PrimaryExpression	0		9565428	0					
ANR	9565524	ElseStatement	else		9565428	0					
ANR	9565525	IfStatement	if ( ch < 0 )		9565428	0					
ANR	9565526	Condition	ch < 0	679:19:18324:18329	9565428	0	True				
ANR	9565527	RelationalExpression	ch < 0		9565428	0		<			
ANR	9565528	Identifier	ch		9565428	0					
ANR	9565529	PrimaryExpression	0		9565428	1					
ANR	9565530	ReturnStatement	return ch ;	680:12:18344:18353	9565428	1	True				
ANR	9565531	Identifier	ch		9565428	0					
ANR	9565532	ElseStatement	else		9565428	0					
ANR	9565533	IfStatement	if ( ch != LF )		9565428	0					
ANR	9565534	Condition	ch != LF	681:17:18372:18379	9565428	0	True				
ANR	9565535	EqualityExpression	ch != LF		9565428	0		!=			
ANR	9565536	Identifier	ch		9565428	0					
ANR	9565537	Identifier	LF		9565428	1					
ANR	9565538	ExpressionStatement	sputback ( s_in )	682:12:18394:18408	9565428	1	True				
ANR	9565539	CallExpression	sputback ( s_in )		9565428	0					
ANR	9565540	Callee	sputback		9565428	0					
ANR	9565541	Identifier	sputback		9565428	0					
ANR	9565542	ArgumentList	s_in		9565428	1					
ANR	9565543	Argument	s_in		9565428	0					
ANR	9565544	Identifier	s_in		9565428	0					
ANR	9565545	ExpressionStatement	* pin_eol = false	683:8:18418:18434	9565428	2	True				
ANR	9565546	AssignmentExpression	* pin_eol = false		9565428	0		=			
ANR	9565547	UnaryOperationExpression	* pin_eol		9565428	0					
ANR	9565548	UnaryOperator	*		9565428	0					
ANR	9565549	Identifier	pin_eol		9565428	1					
ANR	9565550	Identifier	false		9565428	1					
ANR	9565551	ReturnStatement	return 0 ;	684:8:18444:18452	9565428	3	True				
ANR	9565552	PrimaryExpression	0		9565428	0					
ANR	9565553	ForStatement	for ( ; ; )		9565428	7					
ANR	9565554	CompoundStatement		41:8:997:1017	9565428	0					
ANR	9565555	IdentifierDeclStatement	int ch = sgetc ( s_in ) ;	687:8:18483:18503	9565428	0	True				
ANR	9565556	IdentifierDecl	ch = sgetc ( s_in )		9565428	0					
ANR	9565557	IdentifierDeclType	int		9565428	0					
ANR	9565558	Identifier	ch		9565428	1					
ANR	9565559	AssignmentExpression	ch = sgetc ( s_in )		9565428	2		=			
ANR	9565560	Identifier	ch		9565428	0					
ANR	9565561	CallExpression	sgetc ( s_in )		9565428	1					
ANR	9565562	Callee	sgetc		9565428	0					
ANR	9565563	Identifier	sgetc		9565428	0					
ANR	9565564	ArgumentList	s_in		9565428	1					
ANR	9565565	Argument	s_in		9565428	0					
ANR	9565566	Identifier	s_in		9565428	0					
ANR	9565567	IfStatement	if ( ch < 0 )		9565428	1					
ANR	9565568	Condition	ch < 0	689:12:18518:18523	9565428	0	True				
ANR	9565569	RelationalExpression	ch < 0		9565428	0		<			
ANR	9565570	Identifier	ch		9565428	0					
ANR	9565571	PrimaryExpression	0		9565428	1					
ANR	9565572	CompoundStatement		43:20:1040:1040	9565428	1					
ANR	9565573	ExpressionStatement	* pcount = count	690:12:18564:18579	9565428	0	True				
ANR	9565574	AssignmentExpression	* pcount = count		9565428	0		=			
ANR	9565575	UnaryOperationExpression	* pcount		9565428	0					
ANR	9565576	UnaryOperator	*		9565428	0					
ANR	9565577	Identifier	pcount		9565428	1					
ANR	9565578	Identifier	count		9565428	1					
ANR	9565579	ReturnStatement	return ch ;	691:12:18593:18602	9565428	1	True				
ANR	9565580	Identifier	ch		9565428	0					
ANR	9565581	SwitchStatement	switch ( ch )		9565428	2					
ANR	9565582	Condition	ch	693:16:18630:18631	9565428	0	True				
ANR	9565583	Identifier	ch		9565428	0					
ANR	9565584	CompoundStatement		61:1:1515:1555	9565428	1					
ANR	9565585	Label	case '\\r' :	694:12:18648:18657	9565428	0	True				
ANR	9565586	CompoundStatement		49:16:1189:1189	9565428	1					
ANR	9565587	IfStatement	if ( ! is_stdin ( s_in ) )		9565428	0					
ANR	9565588	Condition	! is_stdin ( s_in )	697:24:18741:18755	9565428	0	True				
ANR	9565589	UnaryOperationExpression	! is_stdin ( s_in )		9565428	0					
ANR	9565590	UnaryOperator	!		9565428	0					
ANR	9565591	CallExpression	is_stdin ( s_in )		9565428	1					
ANR	9565592	Callee	is_stdin		9565428	0					
ANR	9565593	Identifier	is_stdin		9565428	0					
ANR	9565594	ArgumentList	s_in		9565428	1					
ANR	9565595	Argument	s_in		9565428	0					
ANR	9565596	Identifier	s_in		9565428	0					
ANR	9565597	CompoundStatement		53:20:1299:1299	9565428	1					
ANR	9565598	ExpressionStatement	* pcount = count	700:24:18811:18826	9565428	0	True				
ANR	9565599	AssignmentExpression	* pcount = count		9565428	0		=			
ANR	9565600	UnaryOperationExpression	* pcount		9565428	0					
ANR	9565601	UnaryOperator	*		9565428	0					
ANR	9565602	Identifier	pcount		9565428	1					
ANR	9565603	Identifier	count		9565428	1					
ANR	9565604	ExpressionStatement	* pin_eol = true	701:24:18852:18867	9565428	1	True				
ANR	9565605	AssignmentExpression	* pin_eol = true		9565428	0		=			
ANR	9565606	UnaryOperationExpression	* pin_eol		9565428	0					
ANR	9565607	UnaryOperator	*		9565428	0					
ANR	9565608	Identifier	pin_eol		9565428	1					
ANR	9565609	Identifier	true		9565428	1					
ANR	9565610	GotoStatement	goto top ;	702:24:18893:18901	9565428	2	True				
ANR	9565611	Identifier	top		9565428	0					
ANR	9565612	Label	case LF :	706:12:18991:18998	9565428	2	True				
ANR	9565613	Identifier	LF		9565428	0					
ANR	9565614	IdentifierDeclStatement	undef LF * pcount = count ;	707:1:19001:19041	9565428	3	True				
ANR	9565615	IdentifierDecl	* pcount = count		9565428	0					
ANR	9565616	IdentifierDeclType	undef LF *		9565428	0					
ANR	9565617	Identifier	pcount		9565428	1					
ANR	9565618	AssignmentExpression	* pcount = count		9565428	2		=			
ANR	9565619	Identifier	count		9565428	0					
ANR	9565620	Identifier	count		9565428	1					
ANR	9565621	ReturnStatement	return 0 ;	709:16:19059:19067	9565428	4	True				
ANR	9565622	PrimaryExpression	0		9565428	0					
ANR	9565623	IfStatement	if ( count >= buf -> size )		9565428	3					
ANR	9565624	Condition	count >= buf -> size	711:12:19091:19108	9565428	0	True				
ANR	9565625	RelationalExpression	count >= buf -> size		9565428	0		>=			
ANR	9565626	Identifier	count		9565428	0					
ANR	9565627	PtrMemberAccess	buf -> size		9565428	1					
ANR	9565628	Identifier	buf		9565428	0					
ANR	9565629	Identifier	size		9565428	1					
ANR	9565630	CompoundStatement		65:32:1625:1625	9565428	1					
ANR	9565631	IfStatement	if ( ! bufmem )		9565428	0					
ANR	9565632	Condition	! bufmem	712:16:19153:19159	9565428	0	True				
ANR	9565633	UnaryOperationExpression	! bufmem		9565428	0					
ANR	9565634	UnaryOperator	!		9565428	0					
ANR	9565635	Identifier	bufmem		9565428	1					
ANR	9565636	CompoundStatement		66:25:1676:1676	9565428	1					
ANR	9565637	ExpressionStatement	sputback ( s_in )	713:16:19180:19194	9565428	0	True				
ANR	9565638	CallExpression	sputback ( s_in )		9565428	0					
ANR	9565639	Callee	sputback		9565428	0					
ANR	9565640	Identifier	sputback		9565428	0					
ANR	9565641	ArgumentList	s_in		9565428	1					
ANR	9565642	Argument	s_in		9565428	0					
ANR	9565643	Identifier	s_in		9565428	0					
ANR	9565644	ExpressionStatement	* pcount = count	714:16:19212:19227	9565428	1	True				
ANR	9565645	AssignmentExpression	* pcount = count		9565428	0		=			
ANR	9565646	UnaryOperationExpression	* pcount		9565428	0					
ANR	9565647	UnaryOperator	*		9565428	0					
ANR	9565648	Identifier	pcount		9565428	1					
ANR	9565649	Identifier	count		9565428	1					
ANR	9565650	ReturnStatement	return 1 ;	715:16:19245:19253	9565428	2	True				
ANR	9565651	PrimaryExpression	1		9565428	0					
ANR	9565652	CompoundStatement		73:16:1866:2001	9565428	1					
ANR	9565653	IdentifierDeclStatement	"uint nsize = count + max ( count , 20 ) ;"	718:16:19299:19334	9565428	0	True				
ANR	9565654	IdentifierDecl	"nsize = count + max ( count , 20 )"		9565428	0					
ANR	9565655	IdentifierDeclType	uint		9565428	0					
ANR	9565656	Identifier	nsize		9565428	1					
ANR	9565657	AssignmentExpression	"nsize = count + max ( count , 20 )"		9565428	2		=			
ANR	9565658	Identifier	nsize		9565428	0					
ANR	9565659	AdditiveExpression	"count + max ( count , 20 )"		9565428	1		+			
ANR	9565660	Identifier	count		9565428	0					
ANR	9565661	CallExpression	"max ( count , 20 )"		9565428	1					
ANR	9565662	Callee	max		9565428	0					
ANR	9565663	Identifier	max		9565428	0					
ANR	9565664	ArgumentList	count		9565428	1					
ANR	9565665	Argument	count		9565428	0					
ANR	9565666	Identifier	count		9565428	0					
ANR	9565667	Argument	20		9565428	1					
ANR	9565668	PrimaryExpression	20		9565428	0					
ANR	9565669	IdentifierDeclStatement	"byte * ndata = gs_resize_string ( bufmem , buf -> data , buf -> size , nsize , ""sreadline(buffer)"" ) ;"	719:16:19352:19487	9565428	1	True				
ANR	9565670	IdentifierDecl	"* ndata = gs_resize_string ( bufmem , buf -> data , buf -> size , nsize , ""sreadline(buffer)"" )"		9565428	0					
ANR	9565671	IdentifierDeclType	byte *		9565428	0					
ANR	9565672	Identifier	ndata		9565428	1					
ANR	9565673	AssignmentExpression	"* ndata = gs_resize_string ( bufmem , buf -> data , buf -> size , nsize , ""sreadline(buffer)"" )"		9565428	2		=			
ANR	9565674	Identifier	ndata		9565428	0					
ANR	9565675	CallExpression	"gs_resize_string ( bufmem , buf -> data , buf -> size , nsize , ""sreadline(buffer)"" )"		9565428	1					
ANR	9565676	Callee	gs_resize_string		9565428	0					
ANR	9565677	Identifier	gs_resize_string		9565428	0					
ANR	9565678	ArgumentList	bufmem		9565428	1					
ANR	9565679	Argument	bufmem		9565428	0					
ANR	9565680	Identifier	bufmem		9565428	0					
ANR	9565681	Argument	buf -> data		9565428	1					
ANR	9565682	PtrMemberAccess	buf -> data		9565428	0					
ANR	9565683	Identifier	buf		9565428	0					
ANR	9565684	Identifier	data		9565428	1					
ANR	9565685	Argument	buf -> size		9565428	2					
ANR	9565686	PtrMemberAccess	buf -> size		9565428	0					
ANR	9565687	Identifier	buf		9565428	0					
ANR	9565688	Identifier	size		9565428	1					
ANR	9565689	Argument	nsize		9565428	3					
ANR	9565690	Identifier	nsize		9565428	0					
ANR	9565691	Argument	"""sreadline(buffer)"""		9565428	4					
ANR	9565692	PrimaryExpression	"""sreadline(buffer)"""		9565428	0					
ANR	9565693	IfStatement	if ( ndata == 0 )		9565428	2					
ANR	9565694	Condition	ndata == 0	722:20:19510:19519	9565428	0	True				
ANR	9565695	EqualityExpression	ndata == 0		9565428	0		==			
ANR	9565696	Identifier	ndata		9565428	0					
ANR	9565697	PrimaryExpression	0		9565428	1					
ANR	9565698	ReturnStatement	return ERRC ;	723:20:19542:19553	9565428	1	True				
ANR	9565699	Identifier	ERRC		9565428	0					
ANR	9565700	ExpressionStatement	buf -> data = ndata	724:16:19594:19611	9565428	3	True				
ANR	9565701	AssignmentExpression	buf -> data = ndata		9565428	0		=			
ANR	9565702	PtrMemberAccess	buf -> data		9565428	0					
ANR	9565703	Identifier	buf		9565428	0					
ANR	9565704	Identifier	data		9565428	1					
ANR	9565705	Identifier	ndata		9565428	1					
ANR	9565706	ExpressionStatement	buf -> size = nsize	725:16:19629:19646	9565428	4	True				
ANR	9565707	AssignmentExpression	buf -> size = nsize		9565428	0		=			
ANR	9565708	PtrMemberAccess	buf -> size		9565428	0					
ANR	9565709	Identifier	buf		9565428	0					
ANR	9565710	Identifier	size		9565428	1					
ANR	9565711	Identifier	nsize		9565428	1					
ANR	9565712	ExpressionStatement	buf -> data [ count ++ ] = ch	728:8:19680:19703	9565428	4	True				
ANR	9565713	AssignmentExpression	buf -> data [ count ++ ] = ch		9565428	0		=			
ANR	9565714	ArrayIndexing	buf -> data [ count ++ ]		9565428	0					
ANR	9565715	PtrMemberAccess	buf -> data		9565428	0					
ANR	9565716	Identifier	buf		9565428	0					
ANR	9565717	Identifier	data		9565428	1					
ANR	9565718	PostIncDecOperationExpression	count ++		9565428	1					
ANR	9565719	Identifier	count		9565428	0					
ANR	9565720	IncDec	++		9565428	1					
ANR	9565721	Identifier	ch		9565428	1					
ANR	9565722	ReturnType	int		9565428	1					
ANR	9565723	Identifier	sreadline		9565428	2					
ANR	9565724	ParameterList	"stream * s_in , stream * s_out , void * readline_data , gs_const_string * prompt , gs_string * buf , gs_memory_t * bufmem , uint * pcount , bool * pin_eol , bool ( * is_stdin ) ( const stream * )"		9565428	3					
ANR	9565725	Parameter	stream * s_in	643:10:17277:17288	9565428	0	True				
ANR	9565726	ParameterType	stream *		9565428	0					
ANR	9565727	Identifier	s_in		9565428	1					
ANR	9565728	Parameter	stream * s_out	643:24:17291:17303	9565428	1	True				
ANR	9565729	ParameterType	stream *		9565428	0					
ANR	9565730	Identifier	s_out		9565428	1					
ANR	9565731	Parameter	void * readline_data	643:39:17306:17324	9565428	2	True				
ANR	9565732	ParameterType	void *		9565428	0					
ANR	9565733	Identifier	readline_data		9565428	1					
ANR	9565734	Parameter	gs_const_string * prompt	644:10:17337:17359	9565428	3	True				
ANR	9565735	ParameterType	gs_const_string *		9565428	0					
ANR	9565736	Identifier	prompt		9565428	1					
ANR	9565737	Parameter	gs_string * buf	644:35:17362:17376	9565428	4	True				
ANR	9565738	ParameterType	gs_string *		9565428	0					
ANR	9565739	Identifier	buf		9565428	1					
ANR	9565740	Parameter	gs_memory_t * bufmem	645:10:17389:17408	9565428	5	True				
ANR	9565741	ParameterType	gs_memory_t *		9565428	0					
ANR	9565742	Identifier	bufmem		9565428	1					
ANR	9565743	Parameter	uint * pcount	645:32:17411:17423	9565428	6	True				
ANR	9565744	ParameterType	uint *		9565428	0					
ANR	9565745	Identifier	pcount		9565428	1					
ANR	9565746	Parameter	bool * pin_eol	645:47:17426:17438	9565428	7	True				
ANR	9565747	ParameterType	bool *		9565428	0					
ANR	9565748	Identifier	pin_eol		9565428	1					
ANR	9565749	Parameter	bool ( * is_stdin ) ( const stream * )	646:10:17451:17482	9565428	8	True				
ANR	9565750	ParameterType	(( const stream * ) bool) *		9565428	0					
ANR	9565751	Identifier	is_stdin		9565428	1					
ANR	9565752	CFGEntryNode	ENTRY		9565428		True				
ANR	9565753	CFGExitNode	EXIT		9565428		True				
ANR	9565754	InfiniteForNode	true		9565428		True				
ANR	9565755	Symbol	ignore_n		9565428						
ANR	9565756	Symbol	s_out		9565428						
ANR	9565757	Symbol	& ignore_n		9565428						
ANR	9565758	Symbol	s_in		9565428						
ANR	9565759	Symbol	sgetc		9565428						
ANR	9565760	Symbol	EOFC		9565428						
ANR	9565761	Symbol	* * buf		9565428						
ANR	9565762	Symbol	* prompt		9565428						
ANR	9565763	Symbol	readline_data		9565428						
ANR	9565764	Symbol	bufmem		9565428						
ANR	9565765	Symbol	pcount		9565428						
ANR	9565766	Symbol	prompt -> size		9565428						
ANR	9565767	Symbol	is_stdin		9565428						
ANR	9565768	Symbol	spgetcc		9565428						
ANR	9565769	Symbol	* buf		9565428						
ANR	9565770	Symbol	* pin_eol		9565428						
ANR	9565771	Symbol	ch		9565428						
ANR	9565772	Symbol	max		9565428						
ANR	9565773	Symbol	ndata		9565428						
ANR	9565774	Symbol	buf -> size		9565428						
ANR	9565775	Symbol	* buf -> data		9565428						
ANR	9565776	Symbol	count		9565428						
ANR	9565777	Symbol	false		9565428						
ANR	9565778	Symbol	* pcount		9565428						
ANR	9565779	Symbol	nsize		9565428						
ANR	9565780	Symbol	buf -> data		9565428						
ANR	9565781	Symbol	buf		9565428						
ANR	9565782	Symbol	prompt -> data		9565428						
ANR	9565783	Symbol	true		9565428						
ANR	9565784	Symbol	pin_eol		9565428						
ANR	9565785	Symbol	LF		9565428						
ANR	9565786	Symbol	gs_resize_string		9565428						
ANR	9565787	Symbol	prompt		9565428						
ANR	9565788	Symbol	sputs		9565428						
ANR	9565789	Symbol	ERRC		9565428						
ANR	9565790	Function	s_process_read_buf	739:0:19925:20111							
ANR	9565791	FunctionDef	s_process_read_buf (stream * s)		9565790	0					
ANR	9565792	CompoundStatement		741:0:19960:20111	9565790	0					
ANR	9565793	IdentifierDeclStatement	int status ;	742:4:19966:19976	9565790	0	True				
ANR	9565794	IdentifierDecl	status		9565790	0					
ANR	9565795	IdentifierDeclType	int		9565790	0					
ANR	9565796	Identifier	status		9565790	1					
ANR	9565797	ExpressionStatement	"stream_compact ( s , false )"	744:4:19983:20007	9565790	1	True				
ANR	9565798	CallExpression	"stream_compact ( s , false )"		9565790	0					
ANR	9565799	Callee	stream_compact		9565790	0					
ANR	9565800	Identifier	stream_compact		9565790	0					
ANR	9565801	ArgumentList	s		9565790	1					
ANR	9565802	Argument	s		9565790	0					
ANR	9565803	Identifier	s		9565790	0					
ANR	9565804	Argument	false		9565790	1					
ANR	9565805	Identifier	false		9565790	0					
ANR	9565806	ExpressionStatement	"status = sreadbuf ( s , & s -> cursor . w )"	745:4:20013:20047	9565790	2	True				
ANR	9565807	AssignmentExpression	"status = sreadbuf ( s , & s -> cursor . w )"		9565790	0		=			
ANR	9565808	Identifier	status		9565790	0					
ANR	9565809	CallExpression	"sreadbuf ( s , & s -> cursor . w )"		9565790	1					
ANR	9565810	Callee	sreadbuf		9565790	0					
ANR	9565811	Identifier	sreadbuf		9565790	0					
ANR	9565812	ArgumentList	s		9565790	1					
ANR	9565813	Argument	s		9565790	0					
ANR	9565814	Identifier	s		9565790	0					
ANR	9565815	Argument	& s -> cursor . w		9565790	1					
ANR	9565816	UnaryOperationExpression	& s -> cursor . w		9565790	0					
ANR	9565817	UnaryOperator	&		9565790	0					
ANR	9565818	MemberAccess	s -> cursor . w		9565790	1					
ANR	9565819	PtrMemberAccess	s -> cursor		9565790	0					
ANR	9565820	Identifier	s		9565790	0					
ANR	9565821	Identifier	cursor		9565790	1					
ANR	9565822	Identifier	w		9565790	1					
ANR	9565823	ExpressionStatement	s -> end_status = ( status >= 0 ? 0 : status )	746:4:20053:20095	9565790	3	True				
ANR	9565824	AssignmentExpression	s -> end_status = ( status >= 0 ? 0 : status )		9565790	0		=			
ANR	9565825	PtrMemberAccess	s -> end_status		9565790	0					
ANR	9565826	Identifier	s		9565790	0					
ANR	9565827	Identifier	end_status		9565790	1					
ANR	9565828	ConditionalExpression	status >= 0 ? 0 : status		9565790	1					
ANR	9565829	Condition	status >= 0		9565790	0					
ANR	9565830	RelationalExpression	status >= 0		9565790	0		>=			
ANR	9565831	Identifier	status		9565790	0					
ANR	9565832	PrimaryExpression	0		9565790	1					
ANR	9565833	PrimaryExpression	0		9565790	1					
ANR	9565834	Identifier	status		9565790	2					
ANR	9565835	ReturnStatement	return 0 ;	747:4:20101:20109	9565790	4	True				
ANR	9565836	PrimaryExpression	0		9565790	0					
ANR	9565837	ReturnType	int		9565790	1					
ANR	9565838	Identifier	s_process_read_buf		9565790	2					
ANR	9565839	ParameterList	stream * s		9565790	3					
ANR	9565840	Parameter	stream * s	740:19:19948:19957	9565790	0	True				
ANR	9565841	ParameterType	stream *		9565790	0					
ANR	9565842	Identifier	s		9565790	1					
ANR	9565843	CFGEntryNode	ENTRY		9565790		True				
ANR	9565844	CFGExitNode	EXIT		9565790		True				
ANR	9565845	Symbol	s -> cursor		9565790						
ANR	9565846	Symbol	& s -> cursor		9565790						
ANR	9565847	Symbol	s		9565790						
ANR	9565848	Symbol	& s -> cursor . w		9565790						
ANR	9565849	Symbol	sreadbuf		9565790						
ANR	9565850	Symbol	false		9565790						
ANR	9565851	Symbol	s -> end_status		9565790						
ANR	9565852	Symbol	* s		9565790						
ANR	9565853	Symbol	status		9565790						
ANR	9565854	Function	s_process_write_buf	754:0:20221:20391							
ANR	9565855	FunctionDef	"s_process_write_buf (stream * s , bool last)"		9565854	0					
ANR	9565856	CompoundStatement		756:0:20268:20391	9565854	0					
ANR	9565857	IdentifierDeclStatement	"int status = swritebuf ( s , & s -> cursor . r , last ) ;"	757:4:20274:20319	9565854	0	True				
ANR	9565858	IdentifierDecl	"status = swritebuf ( s , & s -> cursor . r , last )"		9565854	0					
ANR	9565859	IdentifierDeclType	int		9565854	0					
ANR	9565860	Identifier	status		9565854	1					
ANR	9565861	AssignmentExpression	"status = swritebuf ( s , & s -> cursor . r , last )"		9565854	2		=			
ANR	9565862	Identifier	status		9565854	0					
ANR	9565863	CallExpression	"swritebuf ( s , & s -> cursor . r , last )"		9565854	1					
ANR	9565864	Callee	swritebuf		9565854	0					
ANR	9565865	Identifier	swritebuf		9565854	0					
ANR	9565866	ArgumentList	s		9565854	1					
ANR	9565867	Argument	s		9565854	0					
ANR	9565868	Identifier	s		9565854	0					
ANR	9565869	Argument	& s -> cursor . r		9565854	1					
ANR	9565870	UnaryOperationExpression	& s -> cursor . r		9565854	0					
ANR	9565871	UnaryOperator	&		9565854	0					
ANR	9565872	MemberAccess	s -> cursor . r		9565854	1					
ANR	9565873	PtrMemberAccess	s -> cursor		9565854	0					
ANR	9565874	Identifier	s		9565854	0					
ANR	9565875	Identifier	cursor		9565854	1					
ANR	9565876	Identifier	r		9565854	1					
ANR	9565877	Argument	last		9565854	2					
ANR	9565878	Identifier	last		9565854	0					
ANR	9565879	ExpressionStatement	"stream_compact ( s , false )"	759:4:20326:20350	9565854	1	True				
ANR	9565880	CallExpression	"stream_compact ( s , false )"		9565854	0					
ANR	9565881	Callee	stream_compact		9565854	0					
ANR	9565882	Identifier	stream_compact		9565854	0					
ANR	9565883	ArgumentList	s		9565854	1					
ANR	9565884	Argument	s		9565854	0					
ANR	9565885	Identifier	s		9565854	0					
ANR	9565886	Argument	false		9565854	1					
ANR	9565887	Identifier	false		9565854	0					
ANR	9565888	ReturnStatement	return ( status >= 0 ? 0 : status ) ;	760:4:20356:20389	9565854	2	True				
ANR	9565889	ConditionalExpression	status >= 0 ? 0 : status		9565854	0					
ANR	9565890	Condition	status >= 0		9565854	0					
ANR	9565891	RelationalExpression	status >= 0		9565854	0		>=			
ANR	9565892	Identifier	status		9565854	0					
ANR	9565893	PrimaryExpression	0		9565854	1					
ANR	9565894	PrimaryExpression	0		9565854	1					
ANR	9565895	Identifier	status		9565854	2					
ANR	9565896	ReturnType	int		9565854	1					
ANR	9565897	Identifier	s_process_write_buf		9565854	2					
ANR	9565898	ParameterList	"stream * s , bool last"		9565854	3					
ANR	9565899	Parameter	stream * s	755:20:20245:20254	9565854	0	True				
ANR	9565900	ParameterType	stream *		9565854	0					
ANR	9565901	Identifier	s		9565854	1					
ANR	9565902	Parameter	bool last	755:32:20257:20265	9565854	1	True				
ANR	9565903	ParameterType	bool		9565854	0					
ANR	9565904	Identifier	last		9565854	1					
ANR	9565905	CFGEntryNode	ENTRY		9565854		True				
ANR	9565906	CFGExitNode	EXIT		9565854		True				
ANR	9565907	Symbol	s -> cursor		9565854						
ANR	9565908	Symbol	& s -> cursor		9565854						
ANR	9565909	Symbol	s		9565854						
ANR	9565910	Symbol	last		9565854						
ANR	9565911	Symbol	swritebuf		9565854						
ANR	9565912	Symbol	false		9565854						
ANR	9565913	Symbol	* s		9565854						
ANR	9565914	Symbol	& s -> cursor . r		9565854						
ANR	9565915	Symbol	status		9565854						
ANR	9565916	DeclStmt									
ANR	9565917	Decl							BEGIN stream	BEGIN stream *	back
ANR	9565918	DeclStmt									
ANR	9565919	Decl							BEGIN stream	BEGIN stream *	ahead
ANR	9565920	Function	sreadbuf	783:0:21133:23664							
ANR	9565921	FunctionDef	"sreadbuf (stream * s , stream_cursor_write * pbuf)"		9565920	0					
ANR	9565922	CompoundStatement		785:0:21193:23664	9565920	0					
ANR	9565923	IdentifierDeclStatement	stream * prev = 0 ;	786:4:21199:21215	9565920	0	True				
ANR	9565924	IdentifierDecl	* prev = 0		9565920	0					
ANR	9565925	IdentifierDeclType	stream *		9565920	0					
ANR	9565926	Identifier	prev		9565920	1					
ANR	9565927	AssignmentExpression	* prev = 0		9565920	2		=			
ANR	9565928	Identifier	prev		9565920	0					
ANR	9565929	PrimaryExpression	0		9565920	1					
ANR	9565930	IdentifierDeclStatement	stream * curr = s ;	787:4:21221:21237	9565920	1	True				
ANR	9565931	IdentifierDecl	* curr = s		9565920	0					
ANR	9565932	IdentifierDeclType	stream *		9565920	0					
ANR	9565933	Identifier	curr		9565920	1					
ANR	9565934	AssignmentExpression	* curr = s		9565920	2		=			
ANR	9565935	Identifier	s		9565920	0					
ANR	9565936	Identifier	s		9565920	1					
ANR	9565937	IdentifierDeclStatement	int status ;	788:4:21243:21253	9565920	2	True				
ANR	9565938	IdentifierDecl	status		9565920	0					
ANR	9565939	IdentifierDeclType	int		9565920	0					
ANR	9565940	Identifier	status		9565920	1					
ANR	9565941	ForStatement	for ( ; ; )		9565920	3					
ANR	9565942	CompoundStatement		9:8:140:152	9565920	0					
ANR	9565943	IdentifierDeclStatement	stream * strm ;	791:8:21279:21291	9565920	0	True				
ANR	9565944	IdentifierDecl	* strm		9565920	0					
ANR	9565945	IdentifierDeclType	stream *		9565920	0					
ANR	9565946	Identifier	strm		9565920	1					
ANR	9565947	IdentifierDeclStatement	stream_cursor_write * pw ;	792:8:21301:21324	9565920	1	True				
ANR	9565948	IdentifierDecl	* pw		9565920	0					
ANR	9565949	IdentifierDeclType	stream_cursor_write *		9565920	0					
ANR	9565950	Identifier	pw		9565920	1					
ANR	9565951	IdentifierDeclStatement	byte * oldpos ;	793:8:21334:21346	9565920	2	True				
ANR	9565952	IdentifierDecl	* oldpos		9565920	0					
ANR	9565953	IdentifierDeclType	byte *		9565920	0					
ANR	9565954	Identifier	oldpos		9565920	1					
ANR	9565955	ForStatement	for ( ; ; )		9565920	3					
ANR	9565956	CompoundStatement		15:12:314:322	9565920	0					
ANR	9565957	IdentifierDeclStatement	stream_cursor_read cr ;	796:12:21415:21436	9565920	0	True				
ANR	9565958	IdentifierDecl	cr		9565920	0					
ANR	9565959	IdentifierDeclType	stream_cursor_read		9565920	0					
ANR	9565960	Identifier	cr		9565920	1					
ANR	9565961	IdentifierDeclStatement	stream_cursor_read * pr ;	797:12:21450:21472	9565920	1	True				
ANR	9565962	IdentifierDecl	* pr		9565920	0					
ANR	9565963	IdentifierDeclType	stream_cursor_read *		9565920	0					
ANR	9565964	Identifier	pr		9565920	1					
ANR	9565965	IdentifierDeclStatement	int left ;	798:12:21486:21494	9565920	2	True				
ANR	9565966	IdentifierDecl	left		9565920	0					
ANR	9565967	IdentifierDeclType	int		9565920	0					
ANR	9565968	Identifier	left		9565920	1					
ANR	9565969	IdentifierDeclStatement	bool eof ;	799:12:21508:21516	9565920	3	True				
ANR	9565970	IdentifierDecl	eof		9565920	0					
ANR	9565971	IdentifierDeclType	bool		9565920	0					
ANR	9565972	Identifier	eof		9565920	1					
ANR	9565973	ExpressionStatement	strm = curr -> strm	801:12:21531:21548	9565920	4	True				
ANR	9565974	AssignmentExpression	strm = curr -> strm		9565920	0		=			
ANR	9565975	Identifier	strm		9565920	0					
ANR	9565976	PtrMemberAccess	curr -> strm		9565920	1					
ANR	9565977	Identifier	curr		9565920	0					
ANR	9565978	Identifier	strm		9565920	1					
ANR	9565979	IfStatement	if ( strm == 0 )		9565920	5					
ANR	9565980	Condition	strm == 0	802:16:21566:21574	9565920	0	True				
ANR	9565981	EqualityExpression	strm == 0		9565920	0		==			
ANR	9565982	Identifier	strm		9565920	0					
ANR	9565983	PrimaryExpression	0		9565920	1					
ANR	9565984	CompoundStatement		18:27:383:383	9565920	1					
ANR	9565985	ExpressionStatement	"cr . ptr = 0 , cr . limit = 0"	803:16:21595:21619	9565920	0	True				
ANR	9565986	Expression	"cr . ptr = 0 , cr . limit = 0"		9565920	0					
ANR	9565987	AssignmentExpression	cr . ptr = 0		9565920	0		=			
ANR	9565988	MemberAccess	cr . ptr		9565920	0					
ANR	9565989	Identifier	cr		9565920	0					
ANR	9565990	Identifier	ptr		9565920	1					
ANR	9565991	PrimaryExpression	0		9565920	1					
ANR	9565992	AssignmentExpression	cr . limit = 0		9565920	1		=			
ANR	9565993	MemberAccess	cr . limit		9565920	0					
ANR	9565994	Identifier	cr		9565920	0					
ANR	9565995	Identifier	limit		9565920	1					
ANR	9565996	PrimaryExpression	0		9565920	1					
ANR	9565997	ExpressionStatement	pr = & cr	804:16:21637:21645	9565920	1	True				
ANR	9565998	AssignmentExpression	pr = & cr		9565920	0		=			
ANR	9565999	Identifier	pr		9565920	0					
ANR	9566000	UnaryOperationExpression	& cr		9565920	1					
ANR	9566001	UnaryOperator	&		9565920	0					
ANR	9566002	Identifier	cr		9565920	1					
ANR	9566003	ExpressionStatement	left = 0	805:16:21663:21671	9565920	2	True				
ANR	9566004	AssignmentExpression	left = 0		9565920	0		=			
ANR	9566005	Identifier	left		9565920	0					
ANR	9566006	PrimaryExpression	0		9565920	1					
ANR	9566007	ExpressionStatement	eof = false	806:16:21689:21700	9565920	3	True				
ANR	9566008	AssignmentExpression	eof = false		9565920	0		=			
ANR	9566009	Identifier	eof		9565920	0					
ANR	9566010	Identifier	false		9565920	1					
ANR	9566011	ElseStatement	else		9565920	0					
ANR	9566012	CompoundStatement		23:19:527:527	9565920	0					
ANR	9566013	ExpressionStatement	pr = & strm -> cursor . r	808:16:21739:21759	9565920	0	True				
ANR	9566014	AssignmentExpression	pr = & strm -> cursor . r		9565920	0		=			
ANR	9566015	Identifier	pr		9565920	0					
ANR	9566016	UnaryOperationExpression	& strm -> cursor . r		9565920	1					
ANR	9566017	UnaryOperator	&		9565920	0					
ANR	9566018	MemberAccess	strm -> cursor . r		9565920	1					
ANR	9566019	PtrMemberAccess	strm -> cursor		9565920	0					
ANR	9566020	Identifier	strm		9565920	0					
ANR	9566021	Identifier	cursor		9565920	1					
ANR	9566022	Identifier	r		9565920	1					
ANR	9566023	ExpressionStatement	left = sbuf_min_left ( strm )	809:16:21777:21803	9565920	1	True				
ANR	9566024	AssignmentExpression	left = sbuf_min_left ( strm )		9565920	0		=			
ANR	9566025	Identifier	left		9565920	0					
ANR	9566026	CallExpression	sbuf_min_left ( strm )		9565920	1					
ANR	9566027	Callee	sbuf_min_left		9565920	0					
ANR	9566028	Identifier	sbuf_min_left		9565920	0					
ANR	9566029	ArgumentList	strm		9565920	1					
ANR	9566030	Argument	strm		9565920	0					
ANR	9566031	Identifier	strm		9565920	0					
ANR	9566032	ExpressionStatement	"left = min ( left , pr -> limit - pr -> ptr )"	810:16:21821:21858	9565920	2	True				
ANR	9566033	AssignmentExpression	"left = min ( left , pr -> limit - pr -> ptr )"		9565920	0		=			
ANR	9566034	Identifier	left		9565920	0					
ANR	9566035	CallExpression	"min ( left , pr -> limit - pr -> ptr )"		9565920	1					
ANR	9566036	Callee	min		9565920	0					
ANR	9566037	Identifier	min		9565920	0					
ANR	9566038	ArgumentList	left		9565920	1					
ANR	9566039	Argument	left		9565920	0					
ANR	9566040	Identifier	left		9565920	0					
ANR	9566041	Argument	pr -> limit - pr -> ptr		9565920	1					
ANR	9566042	AdditiveExpression	pr -> limit - pr -> ptr		9565920	0		-			
ANR	9566043	PtrMemberAccess	pr -> limit		9565920	0					
ANR	9566044	Identifier	pr		9565920	0					
ANR	9566045	Identifier	limit		9565920	1					
ANR	9566046	PtrMemberAccess	pr -> ptr		9565920	1					
ANR	9566047	Identifier	pr		9565920	0					
ANR	9566048	Identifier	ptr		9565920	1					
ANR	9566049	ExpressionStatement	pr -> limit -= left	811:16:21876:21893	9565920	3	True				
ANR	9566050	AssignmentExpression	pr -> limit -= left		9565920	0		-=			
ANR	9566051	PtrMemberAccess	pr -> limit		9565920	0					
ANR	9566052	Identifier	pr		9565920	0					
ANR	9566053	Identifier	limit		9565920	1					
ANR	9566054	Identifier	left		9565920	1					
ANR	9566055	ExpressionStatement	eof = strm -> end_status == EOFC	812:16:21911:21941	9565920	4	True				
ANR	9566056	AssignmentExpression	eof = strm -> end_status == EOFC		9565920	0		=			
ANR	9566057	Identifier	eof		9565920	0					
ANR	9566058	EqualityExpression	strm -> end_status == EOFC		9565920	1		==			
ANR	9566059	PtrMemberAccess	strm -> end_status		9565920	0					
ANR	9566060	Identifier	strm		9565920	0					
ANR	9566061	Identifier	end_status		9565920	1					
ANR	9566062	Identifier	EOFC		9565920	1					
ANR	9566063	ExpressionStatement	pw = ( prev == 0 ? pbuf : & curr -> cursor . w )	814:12:21969:22010	9565920	6	True				
ANR	9566064	AssignmentExpression	pw = ( prev == 0 ? pbuf : & curr -> cursor . w )		9565920	0		=			
ANR	9566065	Identifier	pw		9565920	0					
ANR	9566066	ConditionalExpression	prev == 0 ? pbuf : & curr -> cursor . w		9565920	1					
ANR	9566067	Condition	prev == 0		9565920	0					
ANR	9566068	EqualityExpression	prev == 0		9565920	0		==			
ANR	9566069	Identifier	prev		9565920	0					
ANR	9566070	PrimaryExpression	0		9565920	1					
ANR	9566071	Identifier	pbuf		9565920	1					
ANR	9566072	UnaryOperationExpression	& curr -> cursor . w		9565920	2					
ANR	9566073	UnaryOperator	&		9565920	0					
ANR	9566074	MemberAccess	curr -> cursor . w		9565920	1					
ANR	9566075	PtrMemberAccess	curr -> cursor		9565920	0					
ANR	9566076	Identifier	curr		9565920	0					
ANR	9566077	Identifier	cursor		9565920	1					
ANR	9566078	Identifier	w		9565920	1					
ANR	9566079	ExpressionStatement	"if_debug4m ( 's' , s -> memory , ""[s]read process 0x%lx, nr=%u, nw=%u, eof=%d\\n"" , ( ulong ) curr , ( uint ) ( pr -> limit - pr -> ptr ) , ( uint ) ( pw -> limit - pw -> ptr ) , eof )"	815:12:22024:22224	9565920	7	True				
ANR	9566080	CallExpression	"if_debug4m ( 's' , s -> memory , ""[s]read process 0x%lx, nr=%u, nw=%u, eof=%d\\n"" , ( ulong ) curr , ( uint ) ( pr -> limit - pr -> ptr ) , ( uint ) ( pw -> limit - pw -> ptr ) , eof )"		9565920	0					
ANR	9566081	Callee	if_debug4m		9565920	0					
ANR	9566082	Identifier	if_debug4m		9565920	0					
ANR	9566083	ArgumentList	's'		9565920	1					
ANR	9566084	Argument	's'		9565920	0					
ANR	9566085	PrimaryExpression	's'		9565920	0					
ANR	9566086	Argument	s -> memory		9565920	1					
ANR	9566087	PtrMemberAccess	s -> memory		9565920	0					
ANR	9566088	Identifier	s		9565920	0					
ANR	9566089	Identifier	memory		9565920	1					
ANR	9566090	Argument	"""[s]read process 0x%lx, nr=%u, nw=%u, eof=%d\\n"""		9565920	2					
ANR	9566091	PrimaryExpression	"""[s]read process 0x%lx, nr=%u, nw=%u, eof=%d\\n"""		9565920	0					
ANR	9566092	Argument	( ulong ) curr		9565920	3					
ANR	9566093	CastExpression	( ulong ) curr		9565920	0					
ANR	9566094	CastTarget	ulong		9565920	0					
ANR	9566095	Identifier	curr		9565920	1					
ANR	9566096	Argument	( uint ) ( pr -> limit - pr -> ptr )		9565920	4					
ANR	9566097	CastExpression	( uint ) ( pr -> limit - pr -> ptr )		9565920	0					
ANR	9566098	CastTarget	uint		9565920	0					
ANR	9566099	AdditiveExpression	pr -> limit - pr -> ptr		9565920	1		-			
ANR	9566100	PtrMemberAccess	pr -> limit		9565920	0					
ANR	9566101	Identifier	pr		9565920	0					
ANR	9566102	Identifier	limit		9565920	1					
ANR	9566103	PtrMemberAccess	pr -> ptr		9565920	1					
ANR	9566104	Identifier	pr		9565920	0					
ANR	9566105	Identifier	ptr		9565920	1					
ANR	9566106	Argument	( uint ) ( pw -> limit - pw -> ptr )		9565920	5					
ANR	9566107	CastExpression	( uint ) ( pw -> limit - pw -> ptr )		9565920	0					
ANR	9566108	CastTarget	uint		9565920	0					
ANR	9566109	AdditiveExpression	pw -> limit - pw -> ptr		9565920	1		-			
ANR	9566110	PtrMemberAccess	pw -> limit		9565920	0					
ANR	9566111	Identifier	pw		9565920	0					
ANR	9566112	Identifier	limit		9565920	1					
ANR	9566113	PtrMemberAccess	pw -> ptr		9565920	1					
ANR	9566114	Identifier	pw		9565920	0					
ANR	9566115	Identifier	ptr		9565920	1					
ANR	9566116	Argument	eof		9565920	6					
ANR	9566117	Identifier	eof		9565920	0					
ANR	9566118	ExpressionStatement	oldpos = pw -> ptr	818:12:22238:22254	9565920	8	True				
ANR	9566119	AssignmentExpression	oldpos = pw -> ptr		9565920	0		=			
ANR	9566120	Identifier	oldpos		9565920	0					
ANR	9566121	PtrMemberAccess	pw -> ptr		9565920	1					
ANR	9566122	Identifier	pw		9565920	0					
ANR	9566123	Identifier	ptr		9565920	1					
ANR	9566124	ExpressionStatement	"status = ( * curr -> procs . process ) ( curr -> state , pr , pw , eof )"	819:12:22268:22326	9565920	9	True				
ANR	9566125	AssignmentExpression	"status = ( * curr -> procs . process ) ( curr -> state , pr , pw , eof )"		9565920	0		=			
ANR	9566126	Identifier	status		9565920	0					
ANR	9566127	CallExpression	"( * curr -> procs . process ) ( curr -> state , pr , pw , eof )"		9565920	1					
ANR	9566128	Callee	* curr -> procs . process		9565920	0					
ANR	9566129	UnaryOperationExpression	* curr -> procs . process		9565920	0					
ANR	9566130	UnaryOperator	*		9565920	0					
ANR	9566131	MemberAccess	curr -> procs . process		9565920	1					
ANR	9566132	PtrMemberAccess	curr -> procs		9565920	0					
ANR	9566133	Identifier	curr		9565920	0					
ANR	9566134	Identifier	procs		9565920	1					
ANR	9566135	Identifier	process		9565920	1					
ANR	9566136	ArgumentList	curr -> state		9565920	1					
ANR	9566137	Argument	curr -> state		9565920	0					
ANR	9566138	PtrMemberAccess	curr -> state		9565920	0					
ANR	9566139	Identifier	curr		9565920	0					
ANR	9566140	Identifier	state		9565920	1					
ANR	9566141	Argument	pr		9565920	1					
ANR	9566142	Identifier	pr		9565920	0					
ANR	9566143	Argument	pw		9565920	2					
ANR	9566144	Identifier	pw		9565920	0					
ANR	9566145	Argument	eof		9565920	3					
ANR	9566146	Identifier	eof		9565920	0					
ANR	9566147	ExpressionStatement	pr -> limit += left	820:12:22340:22357	9565920	10	True				
ANR	9566148	AssignmentExpression	pr -> limit += left		9565920	0		+=			
ANR	9566149	PtrMemberAccess	pr -> limit		9565920	0					
ANR	9566150	Identifier	pr		9565920	0					
ANR	9566151	Identifier	limit		9565920	1					
ANR	9566152	Identifier	left		9565920	1					
ANR	9566153	Statement	if_debug5m	821:12:22371:22380	9565920	11	True				
ANR	9566154	Statement	(	821:22:22381:22381	9565920	12	True				
ANR	9566155	Statement	's'	821:23:22382:22384	9565920	13	True				
ANR	9566156	Statement	","	821:26:22385:22385	9565920	14	True				
ANR	9566157	Statement	s	821:28:22387:22387	9565920	15	True				
ANR	9566158	Statement	->	821:29:22388:22389	9565920	16	True				
ANR	9566159	Statement	memory	821:31:22390:22395	9565920	17	True				
ANR	9566160	Statement	","	821:37:22396:22396	9565920	18	True				
ANR	9566161	Statement	"""[s]after read 0x%lx, nr=%u, nw=%u, status=%d, position=%"""	821:39:22398:22455	9565920	19	True				
ANR	9566162	Statement	PRId64	821:97:22456:22461	9565920	20	True				
ANR	9566163	Statement	"""\\n"""	821:103:22462:22465	9565920	21	True				
ANR	9566164	Statement	","	821:107:22466:22466	9565920	22	True				
ANR	9566165	Statement	(	822:23:22491:22491	9565920	23	True				
ANR	9566166	Statement	ulong	822:24:22492:22496	9565920	24	True				
ANR	9566167	Statement	)	822:29:22497:22497	9565920	25	True				
ANR	9566168	Statement	curr	822:31:22499:22502	9565920	26	True				
ANR	9566169	Statement	","	822:35:22503:22503	9565920	27	True				
ANR	9566170	Statement	(	822:37:22505:22505	9565920	28	True				
ANR	9566171	Statement	uint	822:38:22506:22509	9565920	29	True				
ANR	9566172	Statement	)	822:42:22510:22510	9565920	30	True				
ANR	9566173	Statement	(	822:44:22512:22512	9565920	31	True				
ANR	9566174	Statement	pr	822:45:22513:22514	9565920	32	True				
ANR	9566175	Statement	->	822:47:22515:22516	9565920	33	True				
ANR	9566176	Statement	limit	822:49:22517:22521	9565920	34	True				
ANR	9566177	Statement	-	822:55:22523:22523	9565920	35	True				
ANR	9566178	Statement	pr	822:57:22525:22526	9565920	36	True				
ANR	9566179	Statement	->	822:59:22527:22528	9565920	37	True				
ANR	9566180	Statement	ptr	822:61:22529:22531	9565920	38	True				
ANR	9566181	Statement	)	822:64:22532:22532	9565920	39	True				
ANR	9566182	Statement	","	822:65:22533:22533	9565920	40	True				
ANR	9566183	Statement	(	823:23:22558:22558	9565920	41	True				
ANR	9566184	Statement	uint	823:24:22559:22562	9565920	42	True				
ANR	9566185	Statement	)	823:28:22563:22563	9565920	43	True				
ANR	9566186	Statement	(	823:30:22565:22565	9565920	44	True				
ANR	9566187	Statement	pw	823:31:22566:22567	9565920	45	True				
ANR	9566188	Statement	->	823:33:22568:22569	9565920	46	True				
ANR	9566189	Statement	limit	823:35:22570:22574	9565920	47	True				
ANR	9566190	Statement	-	823:41:22576:22576	9565920	48	True				
ANR	9566191	Statement	pw	823:43:22578:22579	9565920	49	True				
ANR	9566192	Statement	->	823:45:22580:22581	9565920	50	True				
ANR	9566193	Statement	ptr	823:47:22582:22584	9565920	51	True				
ANR	9566194	Statement	)	823:50:22585:22585	9565920	52	True				
ANR	9566195	Statement	","	823:51:22586:22586	9565920	53	True				
ANR	9566196	Statement	status	823:53:22588:22593	9565920	54	True				
ANR	9566197	Statement	","	823:59:22594:22594	9565920	55	True				
ANR	9566198	Statement	s	823:61:22596:22596	9565920	56	True				
ANR	9566199	Statement	->	823:62:22597:22598	9565920	57	True				
ANR	9566200	Statement	position	823:64:22599:22606	9565920	58	True				
ANR	9566201	Statement	)	823:72:22607:22607	9565920	59	True				
ANR	9566202	ExpressionStatement		823:73:22608:22608	9565920	60	True				
ANR	9566203	IfStatement	if ( strm == 0 || status != 0 )		9565920	61					
ANR	9566204	Condition	strm == 0 || status != 0	824:16:22626:22649	9565920	0	True				
ANR	9566205	OrExpression	strm == 0 || status != 0		9565920	0		||			
ANR	9566206	EqualityExpression	strm == 0		9565920	0		==			
ANR	9566207	Identifier	strm		9565920	0					
ANR	9566208	PrimaryExpression	0		9565920	1					
ANR	9566209	EqualityExpression	status != 0		9565920	1		!=			
ANR	9566210	Identifier	status		9565920	0					
ANR	9566211	PrimaryExpression	0		9565920	1					
ANR	9566212	BreakStatement	break ;	825:16:22668:22673	9565920	1	True				
ANR	9566213	IfStatement	if ( strm -> end_status < 0 )		9565920	62					
ANR	9566214	Condition	strm -> end_status < 0	826:16:22691:22710	9565920	0	True				
ANR	9566215	RelationalExpression	strm -> end_status < 0		9565920	0		<			
ANR	9566216	PtrMemberAccess	strm -> end_status		9565920	0					
ANR	9566217	Identifier	strm		9565920	0					
ANR	9566218	Identifier	end_status		9565920	1					
ANR	9566219	PrimaryExpression	0		9565920	1					
ANR	9566220	CompoundStatement		42:38:1519:1519	9565920	1					
ANR	9566221	IfStatement	if ( strm -> end_status != EOFC || pw -> ptr == oldpos )		9565920	0					
ANR	9566222	Condition	strm -> end_status != EOFC || pw -> ptr == oldpos	827:20:22735:22779	9565920	0	True				
ANR	9566223	OrExpression	strm -> end_status != EOFC || pw -> ptr == oldpos		9565920	0		||			
ANR	9566224	EqualityExpression	strm -> end_status != EOFC		9565920	0		!=			
ANR	9566225	PtrMemberAccess	strm -> end_status		9565920	0					
ANR	9566226	Identifier	strm		9565920	0					
ANR	9566227	Identifier	end_status		9565920	1					
ANR	9566228	Identifier	EOFC		9565920	1					
ANR	9566229	EqualityExpression	pw -> ptr == oldpos		9565920	1		==			
ANR	9566230	PtrMemberAccess	pw -> ptr		9565920	0					
ANR	9566231	Identifier	pw		9565920	0					
ANR	9566232	Identifier	ptr		9565920	1					
ANR	9566233	Identifier	oldpos		9565920	1					
ANR	9566234	ExpressionStatement	status = strm -> end_status	828:20:22802:22827	9565920	1	True				
ANR	9566235	AssignmentExpression	status = strm -> end_status		9565920	0		=			
ANR	9566236	Identifier	status		9565920	0					
ANR	9566237	PtrMemberAccess	strm -> end_status		9565920	1					
ANR	9566238	Identifier	strm		9565920	0					
ANR	9566239	Identifier	end_status		9565920	1					
ANR	9566240	BreakStatement	break ;	829:16:22845:22850	9565920	1	True				
ANR	9566241	ExpressionStatement	"MOVE_AHEAD ( curr , prev )"	831:12:22878:22900	9565920	63	True				
ANR	9566242	CallExpression	"MOVE_AHEAD ( curr , prev )"		9565920	0					
ANR	9566243	Callee	MOVE_AHEAD		9565920	0					
ANR	9566244	Identifier	MOVE_AHEAD		9565920	0					
ANR	9566245	ArgumentList	curr		9565920	1					
ANR	9566246	Argument	curr		9565920	0					
ANR	9566247	Identifier	curr		9565920	0					
ANR	9566248	Argument	prev		9565920	1					
ANR	9566249	Identifier	prev		9565920	0					
ANR	9566250	ExpressionStatement	"stream_compact ( curr , false )"	832:12:22914:22941	9565920	64	True				
ANR	9566251	CallExpression	"stream_compact ( curr , false )"		9565920	0					
ANR	9566252	Callee	stream_compact		9565920	0					
ANR	9566253	Identifier	stream_compact		9565920	0					
ANR	9566254	ArgumentList	curr		9565920	1					
ANR	9566255	Argument	curr		9565920	0					
ANR	9566256	Identifier	curr		9565920	0					
ANR	9566257	Argument	false		9565920	1					
ANR	9566258	Identifier	false		9565920	0					
ANR	9566259	IfStatement	if ( ( strm != 0 || curr -> file ) && status == EOFC && curr -> cursor . r . ptr >= curr -> cursor . r . limit && curr -> close_at_eod && prev == 0 )		9565920	4					
ANR	9566260	Condition	( strm != 0 || curr -> file ) && status == EOFC && curr -> cursor . r . ptr >= curr -> cursor . r . limit && curr -> close_at_eod && prev == 0	838:12:23195:23354	9565920	0	True				
ANR	9566261	AndExpression	( strm != 0 || curr -> file ) && status == EOFC && curr -> cursor . r . ptr >= curr -> cursor . r . limit && curr -> close_at_eod && prev == 0		9565920	0		&&			
ANR	9566262	OrExpression	strm != 0 || curr -> file		9565920	0		||			
ANR	9566263	EqualityExpression	strm != 0		9565920	0		!=			
ANR	9566264	Identifier	strm		9565920	0					
ANR	9566265	PrimaryExpression	0		9565920	1					
ANR	9566266	PtrMemberAccess	curr -> file		9565920	1					
ANR	9566267	Identifier	curr		9565920	0					
ANR	9566268	Identifier	file		9565920	1					
ANR	9566269	AndExpression	status == EOFC && curr -> cursor . r . ptr >= curr -> cursor . r . limit && curr -> close_at_eod && prev == 0		9565920	1		&&			
ANR	9566270	EqualityExpression	status == EOFC		9565920	0		==			
ANR	9566271	Identifier	status		9565920	0					
ANR	9566272	Identifier	EOFC		9565920	1					
ANR	9566273	AndExpression	curr -> cursor . r . ptr >= curr -> cursor . r . limit && curr -> close_at_eod && prev == 0		9565920	1		&&			
ANR	9566274	RelationalExpression	curr -> cursor . r . ptr >= curr -> cursor . r . limit		9565920	0		>=			
ANR	9566275	MemberAccess	curr -> cursor . r . ptr		9565920	0					
ANR	9566276	MemberAccess	curr -> cursor . r		9565920	0					
ANR	9566277	PtrMemberAccess	curr -> cursor		9565920	0					
ANR	9566278	Identifier	curr		9565920	0					
ANR	9566279	Identifier	cursor		9565920	1					
ANR	9566280	Identifier	r		9565920	1					
ANR	9566281	Identifier	ptr		9565920	1					
ANR	9566282	MemberAccess	curr -> cursor . r . limit		9565920	1					
ANR	9566283	MemberAccess	curr -> cursor . r		9565920	0					
ANR	9566284	PtrMemberAccess	curr -> cursor		9565920	0					
ANR	9566285	Identifier	curr		9565920	0					
ANR	9566286	Identifier	cursor		9565920	1					
ANR	9566287	Identifier	r		9565920	1					
ANR	9566288	Identifier	limit		9565920	1					
ANR	9566289	AndExpression	curr -> close_at_eod && prev == 0		9565920	1		&&			
ANR	9566290	PtrMemberAccess	curr -> close_at_eod		9565920	0					
ANR	9566291	Identifier	curr		9565920	0					
ANR	9566292	Identifier	close_at_eod		9565920	1					
ANR	9566293	EqualityExpression	prev == 0		9565920	1		==			
ANR	9566294	Identifier	prev		9565920	0					
ANR	9566295	PrimaryExpression	0		9565920	1					
ANR	9566296	CompoundStatement		59:12:2190:2214	9565920	1					
ANR	9566297	IdentifierDeclStatement	int cstat = sclose ( curr ) ;	843:12:23384:23408	9565920	0	True				
ANR	9566298	IdentifierDecl	cstat = sclose ( curr )		9565920	0					
ANR	9566299	IdentifierDeclType	int		9565920	0					
ANR	9566300	Identifier	cstat		9565920	1					
ANR	9566301	AssignmentExpression	cstat = sclose ( curr )		9565920	2		=			
ANR	9566302	Identifier	cstat		9565920	0					
ANR	9566303	CallExpression	sclose ( curr )		9565920	1					
ANR	9566304	Callee	sclose		9565920	0					
ANR	9566305	Identifier	sclose		9565920	0					
ANR	9566306	ArgumentList	curr		9565920	1					
ANR	9566307	Argument	curr		9565920	0					
ANR	9566308	Identifier	curr		9565920	0					
ANR	9566309	IfStatement	if ( cstat != 0 )		9565920	1					
ANR	9566310	Condition	cstat != 0	845:16:23427:23436	9565920	0	True				
ANR	9566311	EqualityExpression	cstat != 0		9565920	0		!=			
ANR	9566312	Identifier	cstat		9565920	0					
ANR	9566313	PrimaryExpression	0		9565920	1					
ANR	9566314	ExpressionStatement	status = cstat	846:16:23455:23469	9565920	1	True				
ANR	9566315	AssignmentExpression	status = cstat		9565920	0		=			
ANR	9566316	Identifier	status		9565920	0					
ANR	9566317	Identifier	cstat		9565920	1					
ANR	9566318	ExpressionStatement	curr -> end_status = ( status >= 0 ? 0 : status )	849:8:23530:23575	9565920	5	True				
ANR	9566319	AssignmentExpression	curr -> end_status = ( status >= 0 ? 0 : status )		9565920	0		=			
ANR	9566320	PtrMemberAccess	curr -> end_status		9565920	0					
ANR	9566321	Identifier	curr		9565920	0					
ANR	9566322	Identifier	end_status		9565920	1					
ANR	9566323	ConditionalExpression	status >= 0 ? 0 : status		9565920	1					
ANR	9566324	Condition	status >= 0		9565920	0					
ANR	9566325	RelationalExpression	status >= 0		9565920	0		>=			
ANR	9566326	Identifier	status		9565920	0					
ANR	9566327	PrimaryExpression	0		9565920	1					
ANR	9566328	PrimaryExpression	0		9565920	1					
ANR	9566329	Identifier	status		9565920	2					
ANR	9566330	IfStatement	if ( prev == 0 )		9565920	6					
ANR	9566331	Condition	prev == 0	850:12:23589:23597	9565920	0	True				
ANR	9566332	EqualityExpression	prev == 0		9565920	0		==			
ANR	9566333	Identifier	prev		9565920	0					
ANR	9566334	PrimaryExpression	0		9565920	1					
ANR	9566335	ReturnStatement	return status ;	851:12:23612:23625	9565920	1	True				
ANR	9566336	Identifier	status		9565920	0					
ANR	9566337	ExpressionStatement	"MOVE_BACK ( curr , prev )"	852:8:23635:23656	9565920	7	True				
ANR	9566338	CallExpression	"MOVE_BACK ( curr , prev )"		9565920	0					
ANR	9566339	Callee	MOVE_BACK		9565920	0					
ANR	9566340	Identifier	MOVE_BACK		9565920	0					
ANR	9566341	ArgumentList	curr		9565920	1					
ANR	9566342	Argument	curr		9565920	0					
ANR	9566343	Identifier	curr		9565920	0					
ANR	9566344	Argument	prev		9565920	1					
ANR	9566345	Identifier	prev		9565920	0					
ANR	9566346	ReturnType	static int		9565920	1					
ANR	9566347	Identifier	sreadbuf		9565920	2					
ANR	9566348	ParameterList	"stream * s , stream_cursor_write * pbuf"		9565920	3					
ANR	9566349	Parameter	stream * s	784:9:21153:21162	9565920	0	True				
ANR	9566350	ParameterType	stream *		9565920	0					
ANR	9566351	Identifier	s		9565920	1					
ANR	9566352	Parameter	stream_cursor_write * pbuf	784:21:21165:21190	9565920	1	True				
ANR	9566353	ParameterType	stream_cursor_write *		9565920	0					
ANR	9566354	Identifier	pbuf		9565920	1					
ANR	9566355	CFGEntryNode	ENTRY		9565920		True				
ANR	9566356	CFGExitNode	EXIT		9565920		True				
ANR	9566357	InfiniteForNode	true		9565920		True				
ANR	9566358	InfiniteForNode	true		9565920		True				
ANR	9566359	Symbol	curr -> cursor		9565920						
ANR	9566360	Symbol	pr		9565920						
ANR	9566361	Symbol	curr -> cursor . r . ptr		9565920						
ANR	9566362	Symbol	sclose		9565920						
ANR	9566363	Symbol	prev		9565920						
ANR	9566364	Symbol	pw		9565920						
ANR	9566365	Symbol	curr -> cursor . r . limit		9565920						
ANR	9566366	Symbol	pr -> limit		9565920						
ANR	9566367	Symbol	curr -> procs		9565920						
ANR	9566368	Symbol	curr		9565920						
ANR	9566369	Symbol	pr -> ptr		9565920						
ANR	9566370	Symbol	cstat		9565920						
ANR	9566371	Symbol	curr -> end_status		9565920						
ANR	9566372	Symbol	pw -> ptr		9565920						
ANR	9566373	Symbol	curr -> cursor . r		9565920						
ANR	9566374	Symbol	curr -> close_at_eod		9565920						
ANR	9566375	Symbol	* pr		9565920						
ANR	9566376	Symbol	* pw		9565920						
ANR	9566377	Symbol	curr -> strm		9565920						
ANR	9566378	Symbol	left		9565920						
ANR	9566379	Symbol	strm -> end_status		9565920						
ANR	9566380	Symbol	* strm		9565920						
ANR	9566381	Symbol	pbuf		9565920						
ANR	9566382	Symbol	& strm -> cursor		9565920						
ANR	9566383	Symbol	& cr		9565920						
ANR	9566384	Symbol	cr . limit		9565920						
ANR	9566385	Symbol	& curr -> cursor		9565920						
ANR	9566386	Symbol	status		9565920						
ANR	9566387	Symbol	curr -> procs . process		9565920						
ANR	9566388	Symbol	cr . ptr		9565920						
ANR	9566389	Symbol	oldpos		9565920						
ANR	9566390	Symbol	EOFC		9565920						
ANR	9566391	Symbol	* * curr		9565920						
ANR	9566392	Symbol	& strm -> cursor . r		9565920						
ANR	9566393	Symbol	& curr -> cursor . w		9565920						
ANR	9566394	Symbol	pw -> limit		9565920						
ANR	9566395	Symbol	min		9565920						
ANR	9566396	Symbol	* curr -> procs . process		9565920						
ANR	9566397	Symbol	curr -> file		9565920						
ANR	9566398	Symbol	curr -> state		9565920						
ANR	9566399	Symbol	* curr -> procs		9565920						
ANR	9566400	Symbol	s -> memory		9565920						
ANR	9566401	Symbol	false		9565920						
ANR	9566402	Symbol	strm		9565920						
ANR	9566403	Symbol	cr		9565920						
ANR	9566404	Symbol	sbuf_min_left		9565920						
ANR	9566405	Symbol	s		9565920						
ANR	9566406	Symbol	* curr		9565920						
ANR	9566407	Symbol	strm -> cursor		9565920						
ANR	9566408	Symbol	eof		9565920						
ANR	9566409	Symbol	* s		9565920						
ANR	9566410	Function	swritebuf	857:0:23694:27656							
ANR	9566411	FunctionDef	"swritebuf (stream * s , stream_cursor_read * pbuf , bool last)"		9566410	0					
ANR	9566412	CompoundStatement		859:0:23765:27656	9566410	0					
ANR	9566413	IdentifierDeclStatement	stream * prev = 0 ;	860:4:23771:23787	9566410	0	True				
ANR	9566414	IdentifierDecl	* prev = 0		9566410	0					
ANR	9566415	IdentifierDeclType	stream *		9566410	0					
ANR	9566416	Identifier	prev		9566410	1					
ANR	9566417	AssignmentExpression	* prev = 0		9566410	2		=			
ANR	9566418	Identifier	prev		9566410	0					
ANR	9566419	PrimaryExpression	0		9566410	1					
ANR	9566420	IdentifierDeclStatement	stream * curr = s ;	861:4:23793:23809	9566410	1	True				
ANR	9566421	IdentifierDecl	* curr = s		9566410	0					
ANR	9566422	IdentifierDeclType	stream *		9566410	0					
ANR	9566423	Identifier	curr		9566410	1					
ANR	9566424	AssignmentExpression	* curr = s		9566410	2		=			
ANR	9566425	Identifier	s		9566410	0					
ANR	9566426	Identifier	s		9566410	1					
ANR	9566427	IdentifierDeclStatement	int depth = 0 ;	862:4:23815:23828	9566410	2	True				
ANR	9566428	IdentifierDecl	depth = 0		9566410	0					
ANR	9566429	IdentifierDeclType	int		9566410	0					
ANR	9566430	Identifier	depth		9566410	1					
ANR	9566431	AssignmentExpression	depth = 0		9566410	2		=			
ANR	9566432	Identifier	depth		9566410	0					
ANR	9566433	PrimaryExpression	0		9566410	1					
ANR	9566434	IdentifierDeclStatement	int status ;	863:4:23875:23885	9566410	3	True				
ANR	9566435	IdentifierDecl	status		9566410	0					
ANR	9566436	IdentifierDeclType	int		9566410	0					
ANR	9566437	Identifier	status		9566410	1					
ANR	9566438	ForStatement	for ( ; ; )		9566410	4					
ANR	9566439	CompoundStatement		15:13:486:486	9566410	0					
ANR	9566440	ForStatement	for ( ; ; )		9566410	0					
ANR	9566441	CompoundStatement		28:12:901:1008	9566410	0					
ANR	9566442	IdentifierDeclStatement	stream * strm = curr -> strm ;	876:12:24331:24356	9566410	0	True				
ANR	9566443	IdentifierDecl	* strm = curr -> strm		9566410	0					
ANR	9566444	IdentifierDeclType	stream *		9566410	0					
ANR	9566445	Identifier	strm		9566410	1					
ANR	9566446	AssignmentExpression	* strm = curr -> strm		9566410	2		=			
ANR	9566447	Identifier	strm		9566410	0					
ANR	9566448	PtrMemberAccess	curr -> strm		9566410	1					
ANR	9566449	Identifier	curr		9566410	0					
ANR	9566450	Identifier	strm		9566410	1					
ANR	9566451	IdentifierDeclStatement	stream_cursor_write cw ;	877:12:24370:24392	9566410	1	True				
ANR	9566452	IdentifierDecl	cw		9566410	0					
ANR	9566453	IdentifierDeclType	stream_cursor_write		9566410	0					
ANR	9566454	Identifier	cw		9566410	1					
ANR	9566455	IdentifierDeclStatement	stream_cursor_read * pr ;	878:12:24406:24428	9566410	2	True				
ANR	9566456	IdentifierDecl	* pr		9566410	0					
ANR	9566457	IdentifierDeclType	stream_cursor_read *		9566410	0					
ANR	9566458	Identifier	pr		9566410	1					
ANR	9566459	IdentifierDeclStatement	stream_cursor_write * pw ;	879:12:24442:24465	9566410	3	True				
ANR	9566460	IdentifierDecl	* pw		9566410	0					
ANR	9566461	IdentifierDeclType	stream_cursor_write *		9566410	0					
ANR	9566462	Identifier	pw		9566410	1					
ANR	9566463	IdentifierDeclStatement	bool end = last && ( prev == 0 || ( depth <= 1 && prev -> end_status == EOFC ) ) ;	886:12:24667:24774	9566410	4	True				
ANR	9566464	IdentifierDecl	end = last && ( prev == 0 || ( depth <= 1 && prev -> end_status == EOFC ) )		9566410	0					
ANR	9566465	IdentifierDeclType	bool		9566410	0					
ANR	9566466	Identifier	end		9566410	1					
ANR	9566467	AssignmentExpression	end = last && ( prev == 0 || ( depth <= 1 && prev -> end_status == EOFC ) )		9566410	2		=			
ANR	9566468	Identifier	end		9566410	0					
ANR	9566469	AndExpression	last && ( prev == 0 || ( depth <= 1 && prev -> end_status == EOFC ) )		9566410	1		&&			
ANR	9566470	Identifier	last		9566410	0					
ANR	9566471	OrExpression	prev == 0 || ( depth <= 1 && prev -> end_status == EOFC )		9566410	1		||			
ANR	9566472	EqualityExpression	prev == 0		9566410	0		==			
ANR	9566473	Identifier	prev		9566410	0					
ANR	9566474	PrimaryExpression	0		9566410	1					
ANR	9566475	AndExpression	depth <= 1 && prev -> end_status == EOFC		9566410	1		&&			
ANR	9566476	RelationalExpression	depth <= 1		9566410	0		<=			
ANR	9566477	Identifier	depth		9566410	0					
ANR	9566478	PrimaryExpression	1		9566410	1					
ANR	9566479	EqualityExpression	prev -> end_status == EOFC		9566410	1		==			
ANR	9566480	PtrMemberAccess	prev -> end_status		9566410	0					
ANR	9566481	Identifier	prev		9566410	0					
ANR	9566482	Identifier	end_status		9566410	1					
ANR	9566483	Identifier	EOFC		9566410	1					
ANR	9566484	IfStatement	if ( strm == 0 )		9566410	5					
ANR	9566485	Condition	strm == 0	890:16:24793:24801	9566410	0	True				
ANR	9566486	EqualityExpression	strm == 0		9566410	0		==			
ANR	9566487	Identifier	strm		9566410	0					
ANR	9566488	PrimaryExpression	0		9566410	1					
ANR	9566489	ExpressionStatement	"cw . ptr = 0 , cw . limit = 0 , pw = & cw"	891:16:24820:24854	9566410	1	True				
ANR	9566490	Expression	"cw . ptr = 0 , cw . limit = 0 , pw = & cw"		9566410	0					
ANR	9566491	AssignmentExpression	cw . ptr = 0		9566410	0		=			
ANR	9566492	MemberAccess	cw . ptr		9566410	0					
ANR	9566493	Identifier	cw		9566410	0					
ANR	9566494	Identifier	ptr		9566410	1					
ANR	9566495	PrimaryExpression	0		9566410	1					
ANR	9566496	Expression	"cw . limit = 0 , pw = & cw"		9566410	1					
ANR	9566497	AssignmentExpression	cw . limit = 0		9566410	0		=			
ANR	9566498	MemberAccess	cw . limit		9566410	0					
ANR	9566499	Identifier	cw		9566410	0					
ANR	9566500	Identifier	limit		9566410	1					
ANR	9566501	PrimaryExpression	0		9566410	1					
ANR	9566502	AssignmentExpression	pw = & cw		9566410	1		=			
ANR	9566503	Identifier	pw		9566410	0					
ANR	9566504	UnaryOperationExpression	& cw		9566410	1					
ANR	9566505	UnaryOperator	&		9566410	0					
ANR	9566506	Identifier	cw		9566410	1					
ANR	9566507	ElseStatement	else		9566410	0					
ANR	9566508	ExpressionStatement	pw = & strm -> cursor . w	893:16:24889:24909	9566410	0	True				
ANR	9566509	AssignmentExpression	pw = & strm -> cursor . w		9566410	0		=			
ANR	9566510	Identifier	pw		9566410	0					
ANR	9566511	UnaryOperationExpression	& strm -> cursor . w		9566410	1					
ANR	9566512	UnaryOperator	&		9566410	0					
ANR	9566513	MemberAccess	strm -> cursor . w		9566410	1					
ANR	9566514	PtrMemberAccess	strm -> cursor		9566410	0					
ANR	9566515	Identifier	strm		9566410	0					
ANR	9566516	Identifier	cursor		9566410	1					
ANR	9566517	Identifier	w		9566410	1					
ANR	9566518	IfStatement	if ( prev == 0 )		9566410	6					
ANR	9566519	Condition	prev == 0	894:16:24927:24935	9566410	0	True				
ANR	9566520	EqualityExpression	prev == 0		9566410	0		==			
ANR	9566521	Identifier	prev		9566410	0					
ANR	9566522	PrimaryExpression	0		9566410	1					
ANR	9566523	ExpressionStatement	pr = pbuf	895:16:24954:24963	9566410	1	True				
ANR	9566524	AssignmentExpression	pr = pbuf		9566410	0		=			
ANR	9566525	Identifier	pr		9566410	0					
ANR	9566526	Identifier	pbuf		9566410	1					
ANR	9566527	ElseStatement	else		9566410	0					
ANR	9566528	ExpressionStatement	pr = & curr -> cursor . r	897:16:24998:25018	9566410	0	True				
ANR	9566529	AssignmentExpression	pr = & curr -> cursor . r		9566410	0		=			
ANR	9566530	Identifier	pr		9566410	0					
ANR	9566531	UnaryOperationExpression	& curr -> cursor . r		9566410	1					
ANR	9566532	UnaryOperator	&		9566410	0					
ANR	9566533	MemberAccess	curr -> cursor . r		9566410	1					
ANR	9566534	PtrMemberAccess	curr -> cursor		9566410	0					
ANR	9566535	Identifier	curr		9566410	0					
ANR	9566536	Identifier	cursor		9566410	1					
ANR	9566537	Identifier	r		9566410	1					
ANR	9566538	ExpressionStatement	"if_debug5m ( 's' , s -> memory , ""[s]write process 0x%lx(%s), nr=%u, nw=%u, end=%d\\n"" , ( ulong ) curr , gs_struct_type_name ( curr -> state -> templat -> stype ) , ( uint ) ( pr -> limit - pr -> ptr ) , ( uint ) ( pw -> limit - pw -> ptr ) , end )"	898:12:25032:25353	9566410	7	True				
ANR	9566539	CallExpression	"if_debug5m ( 's' , s -> memory , ""[s]write process 0x%lx(%s), nr=%u, nw=%u, end=%d\\n"" , ( ulong ) curr , gs_struct_type_name ( curr -> state -> templat -> stype ) , ( uint ) ( pr -> limit - pr -> ptr ) , ( uint ) ( pw -> limit - pw -> ptr ) , end )"		9566410	0					
ANR	9566540	Callee	if_debug5m		9566410	0					
ANR	9566541	Identifier	if_debug5m		9566410	0					
ANR	9566542	ArgumentList	's'		9566410	1					
ANR	9566543	Argument	's'		9566410	0					
ANR	9566544	PrimaryExpression	's'		9566410	0					
ANR	9566545	Argument	s -> memory		9566410	1					
ANR	9566546	PtrMemberAccess	s -> memory		9566410	0					
ANR	9566547	Identifier	s		9566410	0					
ANR	9566548	Identifier	memory		9566410	1					
ANR	9566549	Argument	"""[s]write process 0x%lx(%s), nr=%u, nw=%u, end=%d\\n"""		9566410	2					
ANR	9566550	PrimaryExpression	"""[s]write process 0x%lx(%s), nr=%u, nw=%u, end=%d\\n"""		9566410	0					
ANR	9566551	Argument	( ulong ) curr		9566410	3					
ANR	9566552	CastExpression	( ulong ) curr		9566410	0					
ANR	9566553	CastTarget	ulong		9566410	0					
ANR	9566554	Identifier	curr		9566410	1					
ANR	9566555	Argument	gs_struct_type_name ( curr -> state -> templat -> stype )		9566410	4					
ANR	9566556	CallExpression	gs_struct_type_name ( curr -> state -> templat -> stype )		9566410	0					
ANR	9566557	Callee	gs_struct_type_name		9566410	0					
ANR	9566558	Identifier	gs_struct_type_name		9566410	0					
ANR	9566559	ArgumentList	curr -> state -> templat -> stype		9566410	1					
ANR	9566560	Argument	curr -> state -> templat -> stype		9566410	0					
ANR	9566561	PtrMemberAccess	curr -> state -> templat -> stype		9566410	0					
ANR	9566562	PtrMemberAccess	curr -> state -> templat		9566410	0					
ANR	9566563	PtrMemberAccess	curr -> state		9566410	0					
ANR	9566564	Identifier	curr		9566410	0					
ANR	9566565	Identifier	state		9566410	1					
ANR	9566566	Identifier	templat		9566410	1					
ANR	9566567	Identifier	stype		9566410	1					
ANR	9566568	Argument	( uint ) ( pr -> limit - pr -> ptr )		9566410	5					
ANR	9566569	CastExpression	( uint ) ( pr -> limit - pr -> ptr )		9566410	0					
ANR	9566570	CastTarget	uint		9566410	0					
ANR	9566571	AdditiveExpression	pr -> limit - pr -> ptr		9566410	1		-			
ANR	9566572	PtrMemberAccess	pr -> limit		9566410	0					
ANR	9566573	Identifier	pr		9566410	0					
ANR	9566574	Identifier	limit		9566410	1					
ANR	9566575	PtrMemberAccess	pr -> ptr		9566410	1					
ANR	9566576	Identifier	pr		9566410	0					
ANR	9566577	Identifier	ptr		9566410	1					
ANR	9566578	Argument	( uint ) ( pw -> limit - pw -> ptr )		9566410	6					
ANR	9566579	CastExpression	( uint ) ( pw -> limit - pw -> ptr )		9566410	0					
ANR	9566580	CastTarget	uint		9566410	0					
ANR	9566581	AdditiveExpression	pw -> limit - pw -> ptr		9566410	1		-			
ANR	9566582	PtrMemberAccess	pw -> limit		9566410	0					
ANR	9566583	Identifier	pw		9566410	0					
ANR	9566584	Identifier	limit		9566410	1					
ANR	9566585	PtrMemberAccess	pw -> ptr		9566410	1					
ANR	9566586	Identifier	pw		9566410	0					
ANR	9566587	Identifier	ptr		9566410	1					
ANR	9566588	Argument	end		9566410	7					
ANR	9566589	Identifier	end		9566410	0					
ANR	9566590	ExpressionStatement	status = curr -> end_status	904:12:25367:25392	9566410	8	True				
ANR	9566591	AssignmentExpression	status = curr -> end_status		9566410	0		=			
ANR	9566592	Identifier	status		9566410	0					
ANR	9566593	PtrMemberAccess	curr -> end_status		9566410	1					
ANR	9566594	Identifier	curr		9566410	0					
ANR	9566595	Identifier	end_status		9566410	1					
ANR	9566596	IfStatement	if ( status >= 0 )		9566410	9					
ANR	9566597	Condition	status >= 0	905:16:25410:25420	9566410	0	True				
ANR	9566598	RelationalExpression	status >= 0		9566410	0		>=			
ANR	9566599	Identifier	status		9566410	0					
ANR	9566600	PrimaryExpression	0		9566410	1					
ANR	9566601	CompoundStatement		47:29:1657:1657	9566410	1					
ANR	9566602	ExpressionStatement	"status = ( * curr -> procs . process ) ( curr -> state , pr , pw , end )"	906:16:25441:25498	9566410	0	True				
ANR	9566603	AssignmentExpression	"status = ( * curr -> procs . process ) ( curr -> state , pr , pw , end )"		9566410	0		=			
ANR	9566604	Identifier	status		9566410	0					
ANR	9566605	CallExpression	"( * curr -> procs . process ) ( curr -> state , pr , pw , end )"		9566410	1					
ANR	9566606	Callee	* curr -> procs . process		9566410	0					
ANR	9566607	UnaryOperationExpression	* curr -> procs . process		9566410	0					
ANR	9566608	UnaryOperator	*		9566410	0					
ANR	9566609	MemberAccess	curr -> procs . process		9566410	1					
ANR	9566610	PtrMemberAccess	curr -> procs		9566410	0					
ANR	9566611	Identifier	curr		9566410	0					
ANR	9566612	Identifier	procs		9566410	1					
ANR	9566613	Identifier	process		9566410	1					
ANR	9566614	ArgumentList	curr -> state		9566410	1					
ANR	9566615	Argument	curr -> state		9566410	0					
ANR	9566616	PtrMemberAccess	curr -> state		9566410	0					
ANR	9566617	Identifier	curr		9566410	0					
ANR	9566618	Identifier	state		9566410	1					
ANR	9566619	Argument	pr		9566410	1					
ANR	9566620	Identifier	pr		9566410	0					
ANR	9566621	Argument	pw		9566410	2					
ANR	9566622	Identifier	pw		9566410	0					
ANR	9566623	Argument	end		9566410	3					
ANR	9566624	Identifier	end		9566410	0					
ANR	9566625	ExpressionStatement	"if_debug5m ( 's' , s -> memory , ""[s]after write 0x%lx, nr=%u, nw=%u, end=%d, status=%d\\n"" , ( ulong ) curr , ( uint ) ( pr -> limit - pr -> ptr ) , ( uint ) ( pw -> limit - pw -> ptr ) , end , status )"	907:16:25516:25769	9566410	1	True				
ANR	9566626	CallExpression	"if_debug5m ( 's' , s -> memory , ""[s]after write 0x%lx, nr=%u, nw=%u, end=%d, status=%d\\n"" , ( ulong ) curr , ( uint ) ( pr -> limit - pr -> ptr ) , ( uint ) ( pw -> limit - pw -> ptr ) , end , status )"		9566410	0					
ANR	9566627	Callee	if_debug5m		9566410	0					
ANR	9566628	Identifier	if_debug5m		9566410	0					
ANR	9566629	ArgumentList	's'		9566410	1					
ANR	9566630	Argument	's'		9566410	0					
ANR	9566631	PrimaryExpression	's'		9566410	0					
ANR	9566632	Argument	s -> memory		9566410	1					
ANR	9566633	PtrMemberAccess	s -> memory		9566410	0					
ANR	9566634	Identifier	s		9566410	0					
ANR	9566635	Identifier	memory		9566410	1					
ANR	9566636	Argument	"""[s]after write 0x%lx, nr=%u, nw=%u, end=%d, status=%d\\n"""		9566410	2					
ANR	9566637	PrimaryExpression	"""[s]after write 0x%lx, nr=%u, nw=%u, end=%d, status=%d\\n"""		9566410	0					
ANR	9566638	Argument	( ulong ) curr		9566410	3					
ANR	9566639	CastExpression	( ulong ) curr		9566410	0					
ANR	9566640	CastTarget	ulong		9566410	0					
ANR	9566641	Identifier	curr		9566410	1					
ANR	9566642	Argument	( uint ) ( pr -> limit - pr -> ptr )		9566410	4					
ANR	9566643	CastExpression	( uint ) ( pr -> limit - pr -> ptr )		9566410	0					
ANR	9566644	CastTarget	uint		9566410	0					
ANR	9566645	AdditiveExpression	pr -> limit - pr -> ptr		9566410	1		-			
ANR	9566646	PtrMemberAccess	pr -> limit		9566410	0					
ANR	9566647	Identifier	pr		9566410	0					
ANR	9566648	Identifier	limit		9566410	1					
ANR	9566649	PtrMemberAccess	pr -> ptr		9566410	1					
ANR	9566650	Identifier	pr		9566410	0					
ANR	9566651	Identifier	ptr		9566410	1					
ANR	9566652	Argument	( uint ) ( pw -> limit - pw -> ptr )		9566410	5					
ANR	9566653	CastExpression	( uint ) ( pw -> limit - pw -> ptr )		9566410	0					
ANR	9566654	CastTarget	uint		9566410	0					
ANR	9566655	AdditiveExpression	pw -> limit - pw -> ptr		9566410	1		-			
ANR	9566656	PtrMemberAccess	pw -> limit		9566410	0					
ANR	9566657	Identifier	pw		9566410	0					
ANR	9566658	Identifier	limit		9566410	1					
ANR	9566659	PtrMemberAccess	pw -> ptr		9566410	1					
ANR	9566660	Identifier	pw		9566410	0					
ANR	9566661	Identifier	ptr		9566410	1					
ANR	9566662	Argument	end		9566410	6					
ANR	9566663	Identifier	end		9566410	0					
ANR	9566664	Argument	status		9566410	7					
ANR	9566665	Identifier	status		9566410	0					
ANR	9566666	IfStatement	if ( status == 0 && end )		9566410	2					
ANR	9566667	Condition	status == 0 && end	911:20:25791:25808	9566410	0	True				
ANR	9566668	AndExpression	status == 0 && end		9566410	0		&&			
ANR	9566669	EqualityExpression	status == 0		9566410	0		==			
ANR	9566670	Identifier	status		9566410	0					
ANR	9566671	PrimaryExpression	0		9566410	1					
ANR	9566672	Identifier	end		9566410	1					
ANR	9566673	ExpressionStatement	status = EOFC	912:20:25831:25844	9566410	1	True				
ANR	9566674	AssignmentExpression	status = EOFC		9566410	0		=			
ANR	9566675	Identifier	status		9566410	0					
ANR	9566676	Identifier	EOFC		9566410	1					
ANR	9566677	IfStatement	if ( status == EOFC || status == ERRC )		9566410	3					
ANR	9566678	Condition	status == EOFC || status == ERRC	913:20:25866:25897	9566410	0	True				
ANR	9566679	OrExpression	status == EOFC || status == ERRC		9566410	0		||			
ANR	9566680	EqualityExpression	status == EOFC		9566410	0		==			
ANR	9566681	Identifier	status		9566410	0					
ANR	9566682	Identifier	EOFC		9566410	1					
ANR	9566683	EqualityExpression	status == ERRC		9566410	1		==			
ANR	9566684	Identifier	status		9566410	0					
ANR	9566685	Identifier	ERRC		9566410	1					
ANR	9566686	ExpressionStatement	curr -> end_status = status	914:20:25920:25945	9566410	1	True				
ANR	9566687	AssignmentExpression	curr -> end_status = status		9566410	0		=			
ANR	9566688	PtrMemberAccess	curr -> end_status		9566410	0					
ANR	9566689	Identifier	curr		9566410	0					
ANR	9566690	Identifier	end_status		9566410	1					
ANR	9566691	Identifier	status		9566410	1					
ANR	9566692	IfStatement	if ( strm == 0 || ( status < 0 && status != EOFC ) )		9566410	10					
ANR	9566693	Condition	strm == 0 || ( status < 0 && status != EOFC )	916:16:25977:26019	9566410	0	True				
ANR	9566694	OrExpression	strm == 0 || ( status < 0 && status != EOFC )		9566410	0		||			
ANR	9566695	EqualityExpression	strm == 0		9566410	0		==			
ANR	9566696	Identifier	strm		9566410	0					
ANR	9566697	PrimaryExpression	0		9566410	1					
ANR	9566698	AndExpression	status < 0 && status != EOFC		9566410	1		&&			
ANR	9566699	RelationalExpression	status < 0		9566410	0		<			
ANR	9566700	Identifier	status		9566410	0					
ANR	9566701	PrimaryExpression	0		9566410	1					
ANR	9566702	EqualityExpression	status != EOFC		9566410	1		!=			
ANR	9566703	Identifier	status		9566410	0					
ANR	9566704	Identifier	EOFC		9566410	1					
ANR	9566705	BreakStatement	break ;	917:16:26038:26043	9566410	1	True				
ANR	9566706	IfStatement	if ( status != 1 )		9566410	11					
ANR	9566707	Condition	status != 1	918:16:26061:26071	9566410	0	True				
ANR	9566708	EqualityExpression	status != 1		9566410	0		!=			
ANR	9566709	Identifier	status		9566410	0					
ANR	9566710	PrimaryExpression	1		9566410	1					
ANR	9566711	CompoundStatement		60:29:2308:2308	9566410	1					
ANR	9566712	IfStatement	if ( ! end || ! strm -> is_temp )		9566410	0					
ANR	9566713	Condition	! end || ! strm -> is_temp	923:20:26259:26280	9566410	0	True				
ANR	9566714	OrExpression	! end || ! strm -> is_temp		9566410	0		||			
ANR	9566715	UnaryOperationExpression	! end		9566410	0					
ANR	9566716	UnaryOperator	!		9566410	0					
ANR	9566717	Identifier	end		9566410	1					
ANR	9566718	UnaryOperationExpression	! strm -> is_temp		9566410	1					
ANR	9566719	UnaryOperator	!		9566410	0					
ANR	9566720	PtrMemberAccess	strm -> is_temp		9566410	1					
ANR	9566721	Identifier	strm		9566410	0					
ANR	9566722	Identifier	is_temp		9566410	1					
ANR	9566723	BreakStatement	break ;	924:20:26303:26308	9566410	1	True				
ANR	9566724	ExpressionStatement	status = strm -> end_status	926:12:26336:26361	9566410	12	True				
ANR	9566725	AssignmentExpression	status = strm -> end_status		9566410	0		=			
ANR	9566726	Identifier	status		9566410	0					
ANR	9566727	PtrMemberAccess	strm -> end_status		9566410	1					
ANR	9566728	Identifier	strm		9566410	0					
ANR	9566729	Identifier	end_status		9566410	1					
ANR	9566730	IfStatement	if ( status < 0 && ( status != EOFC || ! end ) )		9566410	13					
ANR	9566731	Condition	status < 0 && ( status != EOFC || ! end )	927:16:26379:26416	9566410	0	True				
ANR	9566732	AndExpression	status < 0 && ( status != EOFC || ! end )		9566410	0		&&			
ANR	9566733	RelationalExpression	status < 0		9566410	0		<			
ANR	9566734	Identifier	status		9566410	0					
ANR	9566735	PrimaryExpression	0		9566410	1					
ANR	9566736	OrExpression	status != EOFC || ! end		9566410	1		||			
ANR	9566737	EqualityExpression	status != EOFC		9566410	0		!=			
ANR	9566738	Identifier	status		9566410	0					
ANR	9566739	Identifier	EOFC		9566410	1					
ANR	9566740	UnaryOperationExpression	! end		9566410	1					
ANR	9566741	UnaryOperator	!		9566410	0					
ANR	9566742	Identifier	end		9566410	1					
ANR	9566743	BreakStatement	break ;	928:16:26435:26440	9566410	1	True				
ANR	9566744	IfStatement	if ( ! curr -> is_temp )		9566410	14					
ANR	9566745	Condition	! curr -> is_temp	929:16:26458:26471	9566410	0	True				
ANR	9566746	UnaryOperationExpression	! curr -> is_temp		9566410	0					
ANR	9566747	UnaryOperator	!		9566410	0					
ANR	9566748	PtrMemberAccess	curr -> is_temp		9566410	1					
ANR	9566749	Identifier	curr		9566410	0					
ANR	9566750	Identifier	is_temp		9566410	1					
ANR	9566751	ExpressionStatement	++ depth	930:16:26490:26497	9566410	1	True				
ANR	9566752	UnaryExpression	++ depth		9566410	0					
ANR	9566753	IncDec	++		9566410	0					
ANR	9566754	Identifier	depth		9566410	1					
ANR	9566755	ExpressionStatement	"if_debug1m ( 's' , strm -> memory , ""[s]moving ahead, depth = %d\\n"" , depth )"	931:12:26511:26580	9566410	15	True				
ANR	9566756	CallExpression	"if_debug1m ( 's' , strm -> memory , ""[s]moving ahead, depth = %d\\n"" , depth )"		9566410	0					
ANR	9566757	Callee	if_debug1m		9566410	0					
ANR	9566758	Identifier	if_debug1m		9566410	0					
ANR	9566759	ArgumentList	's'		9566410	1					
ANR	9566760	Argument	's'		9566410	0					
ANR	9566761	PrimaryExpression	's'		9566410	0					
ANR	9566762	Argument	strm -> memory		9566410	1					
ANR	9566763	PtrMemberAccess	strm -> memory		9566410	0					
ANR	9566764	Identifier	strm		9566410	0					
ANR	9566765	Identifier	memory		9566410	1					
ANR	9566766	Argument	"""[s]moving ahead, depth = %d\\n"""		9566410	2					
ANR	9566767	PrimaryExpression	"""[s]moving ahead, depth = %d\\n"""		9566410	0					
ANR	9566768	Argument	depth		9566410	3					
ANR	9566769	Identifier	depth		9566410	0					
ANR	9566770	ExpressionStatement	"MOVE_AHEAD ( curr , prev )"	932:12:26594:26616	9566410	16	True				
ANR	9566771	CallExpression	"MOVE_AHEAD ( curr , prev )"		9566410	0					
ANR	9566772	Callee	MOVE_AHEAD		9566410	0					
ANR	9566773	Identifier	MOVE_AHEAD		9566410	0					
ANR	9566774	ArgumentList	curr		9566410	1					
ANR	9566775	Argument	curr		9566410	0					
ANR	9566776	Identifier	curr		9566410	0					
ANR	9566777	Argument	prev		9566410	1					
ANR	9566778	Identifier	prev		9566410	0					
ANR	9566779	ExpressionStatement	"stream_compact ( curr , false )"	933:12:26630:26657	9566410	17	True				
ANR	9566780	CallExpression	"stream_compact ( curr , false )"		9566410	0					
ANR	9566781	Callee	stream_compact		9566410	0					
ANR	9566782	Identifier	stream_compact		9566410	0					
ANR	9566783	ArgumentList	curr		9566410	1					
ANR	9566784	Argument	curr		9566410	0					
ANR	9566785	Identifier	curr		9566410	0					
ANR	9566786	Argument	false		9566410	1					
ANR	9566787	Identifier	false		9566410	0					
ANR	9566788	ExpressionStatement	curr -> end_status = ( status >= 0 ? 0 : status )	936:8:26718:26763	9566410	1	True				
ANR	9566789	AssignmentExpression	curr -> end_status = ( status >= 0 ? 0 : status )		9566410	0		=			
ANR	9566790	PtrMemberAccess	curr -> end_status		9566410	0					
ANR	9566791	Identifier	curr		9566410	0					
ANR	9566792	Identifier	end_status		9566410	1					
ANR	9566793	ConditionalExpression	status >= 0 ? 0 : status		9566410	1					
ANR	9566794	Condition	status >= 0		9566410	0					
ANR	9566795	RelationalExpression	status >= 0		9566410	0		>=			
ANR	9566796	Identifier	status		9566410	0					
ANR	9566797	PrimaryExpression	0		9566410	1					
ANR	9566798	PrimaryExpression	0		9566410	1					
ANR	9566799	Identifier	status		9566410	2					
ANR	9566800	IfStatement	if ( status < 0 || prev == 0 )		9566410	2					
ANR	9566801	Condition	status < 0 || prev == 0	937:12:26777:26799	9566410	0	True				
ANR	9566802	OrExpression	status < 0 || prev == 0		9566410	0		||			
ANR	9566803	RelationalExpression	status < 0		9566410	0		<			
ANR	9566804	Identifier	status		9566410	0					
ANR	9566805	PrimaryExpression	0		9566410	1					
ANR	9566806	EqualityExpression	prev == 0		9566410	1		==			
ANR	9566807	Identifier	prev		9566410	0					
ANR	9566808	PrimaryExpression	0		9566410	1					
ANR	9566809	CompoundStatement		79:37:3036:3036	9566410	1					
ANR	9566810	WhileStatement	while ( prev )		9566410	0					
ANR	9566811	Condition	prev	945:19:27174:27177	9566410	0	True				
ANR	9566812	Identifier	prev		9566410	0					
ANR	9566813	CompoundStatement		87:25:3414:3414	9566410	1					
ANR	9566814	ExpressionStatement	"if_debug0m ( 's' , s -> memory , ""[s]unwinding\\n"" )"	946:16:27198:27242	9566410	0	True				
ANR	9566815	CallExpression	"if_debug0m ( 's' , s -> memory , ""[s]unwinding\\n"" )"		9566410	0					
ANR	9566816	Callee	if_debug0m		9566410	0					
ANR	9566817	Identifier	if_debug0m		9566410	0					
ANR	9566818	ArgumentList	's'		9566410	1					
ANR	9566819	Argument	's'		9566410	0					
ANR	9566820	PrimaryExpression	's'		9566410	0					
ANR	9566821	Argument	s -> memory		9566410	1					
ANR	9566822	PtrMemberAccess	s -> memory		9566410	0					
ANR	9566823	Identifier	s		9566410	0					
ANR	9566824	Identifier	memory		9566410	1					
ANR	9566825	Argument	"""[s]unwinding\\n"""		9566410	2					
ANR	9566826	PrimaryExpression	"""[s]unwinding\\n"""		9566410	0					
ANR	9566827	ExpressionStatement	"MOVE_BACK ( curr , prev )"	947:16:27260:27281	9566410	1	True				
ANR	9566828	CallExpression	"MOVE_BACK ( curr , prev )"		9566410	0					
ANR	9566829	Callee	MOVE_BACK		9566410	0					
ANR	9566830	Identifier	MOVE_BACK		9566410	0					
ANR	9566831	ArgumentList	curr		9566410	1					
ANR	9566832	Argument	curr		9566410	0					
ANR	9566833	Identifier	curr		9566410	0					
ANR	9566834	Argument	prev		9566410	1					
ANR	9566835	Identifier	prev		9566410	0					
ANR	9566836	IfStatement	if ( status >= 0 )		9566410	2					
ANR	9566837	Condition	status >= 0	948:20:27303:27313	9566410	0	True				
ANR	9566838	RelationalExpression	status >= 0		9566410	0		>=			
ANR	9566839	Identifier	status		9566410	0					
ANR	9566840	PrimaryExpression	0		9566410	1					
ANR	9566841	ExpressionStatement	curr -> end_status = 0	949:20:27336:27356	9566410	1	True				
ANR	9566842	AssignmentExpression	curr -> end_status = 0		9566410	0		=			
ANR	9566843	PtrMemberAccess	curr -> end_status		9566410	0					
ANR	9566844	Identifier	curr		9566410	0					
ANR	9566845	Identifier	end_status		9566410	1					
ANR	9566846	PrimaryExpression	0		9566410	1					
ANR	9566847	ElseStatement	else		9566410	0					
ANR	9566848	IfStatement	if ( status == ERRC )		9566410	0					
ANR	9566849	Condition	status == ERRC	950:25:27383:27396	9566410	0	True				
ANR	9566850	EqualityExpression	status == ERRC		9566410	0		==			
ANR	9566851	Identifier	status		9566410	0					
ANR	9566852	Identifier	ERRC		9566410	1					
ANR	9566853	ExpressionStatement	curr -> end_status = ERRC	951:20:27419:27442	9566410	1	True				
ANR	9566854	AssignmentExpression	curr -> end_status = ERRC		9566410	0		=			
ANR	9566855	PtrMemberAccess	curr -> end_status		9566410	0					
ANR	9566856	Identifier	curr		9566410	0					
ANR	9566857	Identifier	end_status		9566410	1					
ANR	9566858	Identifier	ERRC		9566410	1					
ANR	9566859	ReturnStatement	return status ;	953:12:27470:27483	9566410	1	True				
ANR	9566860	Identifier	status		9566410	0					
ANR	9566861	ExpressionStatement	"MOVE_BACK ( curr , prev )"	955:8:27503:27524	9566410	3	True				
ANR	9566862	CallExpression	"MOVE_BACK ( curr , prev )"		9566410	0					
ANR	9566863	Callee	MOVE_BACK		9566410	0					
ANR	9566864	Identifier	MOVE_BACK		9566410	0					
ANR	9566865	ArgumentList	curr		9566410	1					
ANR	9566866	Argument	curr		9566410	0					
ANR	9566867	Identifier	curr		9566410	0					
ANR	9566868	Argument	prev		9566410	1					
ANR	9566869	Identifier	prev		9566410	0					
ANR	9566870	IfStatement	if ( ! curr -> is_temp )		9566410	4					
ANR	9566871	Condition	! curr -> is_temp	956:12:27538:27551	9566410	0	True				
ANR	9566872	UnaryOperationExpression	! curr -> is_temp		9566410	0					
ANR	9566873	UnaryOperator	!		9566410	0					
ANR	9566874	PtrMemberAccess	curr -> is_temp		9566410	1					
ANR	9566875	Identifier	curr		9566410	0					
ANR	9566876	Identifier	is_temp		9566410	1					
ANR	9566877	ExpressionStatement	-- depth	957:12:27566:27573	9566410	1	True				
ANR	9566878	UnaryExpression	-- depth		9566410	0					
ANR	9566879	IncDec	--		9566410	0					
ANR	9566880	Identifier	depth		9566410	1					
ANR	9566881	ExpressionStatement	"if_debug1m ( 's' , s -> memory , ""[s]moving back, depth = %d\\n"" , depth )"	958:8:27583:27648	9566410	5	True				
ANR	9566882	CallExpression	"if_debug1m ( 's' , s -> memory , ""[s]moving back, depth = %d\\n"" , depth )"		9566410	0					
ANR	9566883	Callee	if_debug1m		9566410	0					
ANR	9566884	Identifier	if_debug1m		9566410	0					
ANR	9566885	ArgumentList	's'		9566410	1					
ANR	9566886	Argument	's'		9566410	0					
ANR	9566887	PrimaryExpression	's'		9566410	0					
ANR	9566888	Argument	s -> memory		9566410	1					
ANR	9566889	PtrMemberAccess	s -> memory		9566410	0					
ANR	9566890	Identifier	s		9566410	0					
ANR	9566891	Identifier	memory		9566410	1					
ANR	9566892	Argument	"""[s]moving back, depth = %d\\n"""		9566410	2					
ANR	9566893	PrimaryExpression	"""[s]moving back, depth = %d\\n"""		9566410	0					
ANR	9566894	Argument	depth		9566410	3					
ANR	9566895	Identifier	depth		9566410	0					
ANR	9566896	ReturnType	static int		9566410	1					
ANR	9566897	Identifier	swritebuf		9566410	2					
ANR	9566898	ParameterList	"stream * s , stream_cursor_read * pbuf , bool last"		9566410	3					
ANR	9566899	Parameter	stream * s	858:10:23715:23724	9566410	0	True				
ANR	9566900	ParameterType	stream *		9566410	0					
ANR	9566901	Identifier	s		9566410	1					
ANR	9566902	Parameter	stream_cursor_read * pbuf	858:22:23727:23751	9566410	1	True				
ANR	9566903	ParameterType	stream_cursor_read *		9566410	0					
ANR	9566904	Identifier	pbuf		9566410	1					
ANR	9566905	Parameter	bool last	858:49:23754:23762	9566410	2	True				
ANR	9566906	ParameterType	bool		9566410	0					
ANR	9566907	Identifier	last		9566410	1					
ANR	9566908	CFGEntryNode	ENTRY		9566410		True				
ANR	9566909	CFGExitNode	EXIT		9566410		True				
ANR	9566910	InfiniteForNode	true		9566410		True				
ANR	9566911	InfiniteForNode	true		9566410		True				
ANR	9566912	Symbol	curr -> cursor		9566410						
ANR	9566913	Symbol	pr		9566410						
ANR	9566914	Symbol	prev		9566410						
ANR	9566915	Symbol	pw		9566410						
ANR	9566916	Symbol	curr -> is_temp		9566410						
ANR	9566917	Symbol	pr -> limit		9566410						
ANR	9566918	Symbol	curr -> procs		9566410						
ANR	9566919	Symbol	curr		9566410						
ANR	9566920	Symbol	pr -> ptr		9566410						
ANR	9566921	Symbol	cw . ptr		9566410						
ANR	9566922	Symbol	curr -> end_status		9566410						
ANR	9566923	Symbol	pw -> ptr		9566410						
ANR	9566924	Symbol	last		9566410						
ANR	9566925	Symbol	* * * curr		9566410						
ANR	9566926	Symbol	* pr		9566410						
ANR	9566927	Symbol	* pw		9566410						
ANR	9566928	Symbol	& strm -> cursor . w		9566410						
ANR	9566929	Symbol	* curr -> state		9566410						
ANR	9566930	Symbol	curr -> strm		9566410						
ANR	9566931	Symbol	strm -> end_status		9566410						
ANR	9566932	Symbol	* strm		9566410						
ANR	9566933	Symbol	pbuf		9566410						
ANR	9566934	Symbol	& strm -> cursor		9566410						
ANR	9566935	Symbol	& curr -> cursor		9566410						
ANR	9566936	Symbol	ERRC		9566410						
ANR	9566937	Symbol	status		9566410						
ANR	9566938	Symbol	& cw		9566410						
ANR	9566939	Symbol	curr -> procs . process		9566410						
ANR	9566940	Symbol	EOFC		9566410						
ANR	9566941	Symbol	gs_struct_type_name		9566410						
ANR	9566942	Symbol	* * curr		9566410						
ANR	9566943	Symbol	strm -> memory		9566410						
ANR	9566944	Symbol	* prev		9566410						
ANR	9566945	Symbol	* curr -> state -> templat		9566410						
ANR	9566946	Symbol	pw -> limit		9566410						
ANR	9566947	Symbol	curr -> state -> templat		9566410						
ANR	9566948	Symbol	& curr -> cursor . r		9566410						
ANR	9566949	Symbol	end		9566410						
ANR	9566950	Symbol	* curr -> procs . process		9566410						
ANR	9566951	Symbol	prev -> end_status		9566410						
ANR	9566952	Symbol	* * curr -> state		9566410						
ANR	9566953	Symbol	curr -> state		9566410						
ANR	9566954	Symbol	cw . limit		9566410						
ANR	9566955	Symbol	* curr -> procs		9566410						
ANR	9566956	Symbol	s -> memory		9566410						
ANR	9566957	Symbol	false		9566410						
ANR	9566958	Symbol	strm		9566410						
ANR	9566959	Symbol	s		9566410						
ANR	9566960	Symbol	depth		9566410						
ANR	9566961	Symbol	cw		9566410						
ANR	9566962	Symbol	* curr		9566410						
ANR	9566963	Symbol	strm -> cursor		9566410						
ANR	9566964	Symbol	curr -> state -> templat -> stype		9566410						
ANR	9566965	Symbol	* s		9566410						
ANR	9566966	Symbol	strm -> is_temp		9566410						
ANR	9566967	Function	stream_move	964:0:27794:28190							
ANR	9566968	FunctionDef	"stream_move (stream_cursor_read * pr , stream_cursor_write * pw)"		9566967	0					
ANR	9566969	CompoundStatement		966:0:27861:28190	9566967	0					
ANR	9566970	IdentifierDeclStatement	uint rcount = pr -> limit - pr -> ptr ;	967:4:27867:27900	9566967	0	True				
ANR	9566971	IdentifierDecl	rcount = pr -> limit - pr -> ptr		9566967	0					
ANR	9566972	IdentifierDeclType	uint		9566967	0					
ANR	9566973	Identifier	rcount		9566967	1					
ANR	9566974	AssignmentExpression	rcount = pr -> limit - pr -> ptr		9566967	2		=			
ANR	9566975	Identifier	rcount		9566967	0					
ANR	9566976	AdditiveExpression	pr -> limit - pr -> ptr		9566967	1		-			
ANR	9566977	PtrMemberAccess	pr -> limit		9566967	0					
ANR	9566978	Identifier	pr		9566967	0					
ANR	9566979	Identifier	limit		9566967	1					
ANR	9566980	PtrMemberAccess	pr -> ptr		9566967	1					
ANR	9566981	Identifier	pr		9566967	0					
ANR	9566982	Identifier	ptr		9566967	1					
ANR	9566983	IdentifierDeclStatement	uint wcount = pw -> limit - pw -> ptr ;	968:4:27906:27939	9566967	1	True				
ANR	9566984	IdentifierDecl	wcount = pw -> limit - pw -> ptr		9566967	0					
ANR	9566985	IdentifierDeclType	uint		9566967	0					
ANR	9566986	Identifier	wcount		9566967	1					
ANR	9566987	AssignmentExpression	wcount = pw -> limit - pw -> ptr		9566967	2		=			
ANR	9566988	Identifier	wcount		9566967	0					
ANR	9566989	AdditiveExpression	pw -> limit - pw -> ptr		9566967	1		-			
ANR	9566990	PtrMemberAccess	pw -> limit		9566967	0					
ANR	9566991	Identifier	pw		9566967	0					
ANR	9566992	Identifier	limit		9566967	1					
ANR	9566993	PtrMemberAccess	pw -> ptr		9566967	1					
ANR	9566994	Identifier	pw		9566967	0					
ANR	9566995	Identifier	ptr		9566967	1					
ANR	9566996	IdentifierDeclStatement	uint count ;	969:4:27945:27955	9566967	2	True				
ANR	9566997	IdentifierDecl	count		9566967	0					
ANR	9566998	IdentifierDeclType	uint		9566967	0					
ANR	9566999	Identifier	count		9566967	1					
ANR	9567000	IdentifierDeclStatement	int status ;	970:4:27961:27971	9566967	3	True				
ANR	9567001	IdentifierDecl	status		9566967	0					
ANR	9567002	IdentifierDeclType	int		9566967	0					
ANR	9567003	Identifier	status		9566967	1					
ANR	9567004	IfStatement	if ( rcount <= wcount )		9566967	4					
ANR	9567005	Condition	rcount <= wcount	972:8:27982:27997	9566967	0	True				
ANR	9567006	RelationalExpression	rcount <= wcount		9566967	0		<=			
ANR	9567007	Identifier	rcount		9566967	0					
ANR	9567008	Identifier	wcount		9566967	1					
ANR	9567009	ExpressionStatement	"count = rcount , status = 0"	973:8:28008:28034	9566967	1	True				
ANR	9567010	Expression	"count = rcount , status = 0"		9566967	0					
ANR	9567011	AssignmentExpression	count = rcount		9566967	0		=			
ANR	9567012	Identifier	count		9566967	0					
ANR	9567013	Identifier	rcount		9566967	1					
ANR	9567014	AssignmentExpression	status = 0		9566967	1		=			
ANR	9567015	Identifier	status		9566967	0					
ANR	9567016	PrimaryExpression	0		9566967	1					
ANR	9567017	ElseStatement	else		9566967	0					
ANR	9567018	ExpressionStatement	"count = wcount , status = 1"	975:8:28053:28079	9566967	0	True				
ANR	9567019	Expression	"count = wcount , status = 1"		9566967	0					
ANR	9567020	AssignmentExpression	count = wcount		9566967	0		=			
ANR	9567021	Identifier	count		9566967	0					
ANR	9567022	Identifier	wcount		9566967	1					
ANR	9567023	AssignmentExpression	status = 1		9566967	1		=			
ANR	9567024	Identifier	status		9566967	0					
ANR	9567025	PrimaryExpression	1		9566967	1					
ANR	9567026	ExpressionStatement	"memmove ( pw -> ptr + 1 , pr -> ptr + 1 , count )"	976:4:28085:28125	9566967	5	True				
ANR	9567027	CallExpression	"memmove ( pw -> ptr + 1 , pr -> ptr + 1 , count )"		9566967	0					
ANR	9567028	Callee	memmove		9566967	0					
ANR	9567029	Identifier	memmove		9566967	0					
ANR	9567030	ArgumentList	pw -> ptr + 1		9566967	1					
ANR	9567031	Argument	pw -> ptr + 1		9566967	0					
ANR	9567032	AdditiveExpression	pw -> ptr + 1		9566967	0		+			
ANR	9567033	PtrMemberAccess	pw -> ptr		9566967	0					
ANR	9567034	Identifier	pw		9566967	0					
ANR	9567035	Identifier	ptr		9566967	1					
ANR	9567036	PrimaryExpression	1		9566967	1					
ANR	9567037	Argument	pr -> ptr + 1		9566967	1					
ANR	9567038	AdditiveExpression	pr -> ptr + 1		9566967	0		+			
ANR	9567039	PtrMemberAccess	pr -> ptr		9566967	0					
ANR	9567040	Identifier	pr		9566967	0					
ANR	9567041	Identifier	ptr		9566967	1					
ANR	9567042	PrimaryExpression	1		9566967	1					
ANR	9567043	Argument	count		9566967	2					
ANR	9567044	Identifier	count		9566967	0					
ANR	9567045	ExpressionStatement	pr -> ptr += count	977:4:28131:28147	9566967	6	True				
ANR	9567046	AssignmentExpression	pr -> ptr += count		9566967	0		+=			
ANR	9567047	PtrMemberAccess	pr -> ptr		9566967	0					
ANR	9567048	Identifier	pr		9566967	0					
ANR	9567049	Identifier	ptr		9566967	1					
ANR	9567050	Identifier	count		9566967	1					
ANR	9567051	ExpressionStatement	pw -> ptr += count	978:4:28153:28169	9566967	7	True				
ANR	9567052	AssignmentExpression	pw -> ptr += count		9566967	0		+=			
ANR	9567053	PtrMemberAccess	pw -> ptr		9566967	0					
ANR	9567054	Identifier	pw		9566967	0					
ANR	9567055	Identifier	ptr		9566967	1					
ANR	9567056	Identifier	count		9566967	1					
ANR	9567057	ReturnStatement	return status ;	979:4:28175:28188	9566967	8	True				
ANR	9567058	Identifier	status		9566967	0					
ANR	9567059	ReturnType	int		9566967	1					
ANR	9567060	Identifier	stream_move		9566967	2					
ANR	9567061	ParameterList	"stream_cursor_read * pr , stream_cursor_write * pw"		9566967	3					
ANR	9567062	Parameter	stream_cursor_read * pr	965:12:27810:27832	9566967	0	True				
ANR	9567063	ParameterType	stream_cursor_read *		9566967	0					
ANR	9567064	Identifier	pr		9566967	1					
ANR	9567065	Parameter	stream_cursor_write * pw	965:37:27835:27858	9566967	1	True				
ANR	9567066	ParameterType	stream_cursor_write *		9566967	0					
ANR	9567067	Identifier	pw		9566967	1					
ANR	9567068	CFGEntryNode	ENTRY		9566967		True				
ANR	9567069	CFGExitNode	EXIT		9566967		True				
ANR	9567070	Symbol	wcount		9566967						
ANR	9567071	Symbol	pw -> limit		9566967						
ANR	9567072	Symbol	pr		9566967						
ANR	9567073	Symbol	rcount		9566967						
ANR	9567074	Symbol	pw		9566967						
ANR	9567075	Symbol	count		9566967						
ANR	9567076	Symbol	* pr		9566967						
ANR	9567077	Symbol	pr -> limit		9566967						
ANR	9567078	Symbol	pr -> ptr		9566967						
ANR	9567079	Symbol	* pw		9566967						
ANR	9567080	Symbol	pw -> ptr		9566967						
ANR	9567081	Symbol	status		9566967						
ANR	9567082	Function	stream_compact	983:0:28270:28686							
ANR	9567083	FunctionDef	"stream_compact (stream * s , bool always)"		9567082	0					
ANR	9567084	CompoundStatement		985:0:28322:28686	9567082	0					
ANR	9567085	IfStatement	if ( s -> cursor . r . ptr >= s -> cbuf && ( always || s -> end_status >= 0 ) )		9567082	0					
ANR	9567086	Condition	s -> cursor . r . ptr >= s -> cbuf && ( always || s -> end_status >= 0 )	986:8:28332:28391	9567082	0	True				
ANR	9567087	AndExpression	s -> cursor . r . ptr >= s -> cbuf && ( always || s -> end_status >= 0 )		9567082	0		&&			
ANR	9567088	RelationalExpression	s -> cursor . r . ptr >= s -> cbuf		9567082	0		>=			
ANR	9567089	MemberAccess	s -> cursor . r . ptr		9567082	0					
ANR	9567090	MemberAccess	s -> cursor . r		9567082	0					
ANR	9567091	PtrMemberAccess	s -> cursor		9567082	0					
ANR	9567092	Identifier	s		9567082	0					
ANR	9567093	Identifier	cursor		9567082	1					
ANR	9567094	Identifier	r		9567082	1					
ANR	9567095	Identifier	ptr		9567082	1					
ANR	9567096	PtrMemberAccess	s -> cbuf		9567082	1					
ANR	9567097	Identifier	s		9567082	0					
ANR	9567098	Identifier	cbuf		9567082	1					
ANR	9567099	OrExpression	always || s -> end_status >= 0		9567082	1		||			
ANR	9567100	Identifier	always		9567082	0					
ANR	9567101	RelationalExpression	s -> end_status >= 0		9567082	1		>=			
ANR	9567102	PtrMemberAccess	s -> end_status		9567082	0					
ANR	9567103	Identifier	s		9567082	0					
ANR	9567104	Identifier	end_status		9567082	1					
ANR	9567105	PrimaryExpression	0		9567082	1					
ANR	9567106	CompoundStatement		3:8:81:122	9567082	1					
ANR	9567107	IdentifierDeclStatement	uint dist = s -> cursor . r . ptr + 1 - s -> cbuf ;	987:8:28404:28445	9567082	0	True				
ANR	9567108	IdentifierDecl	dist = s -> cursor . r . ptr + 1 - s -> cbuf		9567082	0					
ANR	9567109	IdentifierDeclType	uint		9567082	0					
ANR	9567110	Identifier	dist		9567082	1					
ANR	9567111	AssignmentExpression	dist = s -> cursor . r . ptr + 1 - s -> cbuf		9567082	2		=			
ANR	9567112	Identifier	dist		9567082	0					
ANR	9567113	AdditiveExpression	s -> cursor . r . ptr + 1 - s -> cbuf		9567082	1		+			
ANR	9567114	MemberAccess	s -> cursor . r . ptr		9567082	0					
ANR	9567115	MemberAccess	s -> cursor . r		9567082	0					
ANR	9567116	PtrMemberAccess	s -> cursor		9567082	0					
ANR	9567117	Identifier	s		9567082	0					
ANR	9567118	Identifier	cursor		9567082	1					
ANR	9567119	Identifier	r		9567082	1					
ANR	9567120	Identifier	ptr		9567082	1					
ANR	9567121	AdditiveExpression	1 - s -> cbuf		9567082	1		-			
ANR	9567122	PrimaryExpression	1		9567082	0					
ANR	9567123	PtrMemberAccess	s -> cbuf		9567082	1					
ANR	9567124	Identifier	s		9567082	0					
ANR	9567125	Identifier	cbuf		9567082	1					
ANR	9567126	ExpressionStatement	"memmove ( s -> cbuf , s -> cursor . r . ptr + 1 , ( uint ) ( s -> cursor . r . limit - s -> cursor . r . ptr ) )"	989:8:28456:28555	9567082	1	True				
ANR	9567127	CallExpression	"memmove ( s -> cbuf , s -> cursor . r . ptr + 1 , ( uint ) ( s -> cursor . r . limit - s -> cursor . r . ptr ) )"		9567082	0					
ANR	9567128	Callee	memmove		9567082	0					
ANR	9567129	Identifier	memmove		9567082	0					
ANR	9567130	ArgumentList	s -> cbuf		9567082	1					
ANR	9567131	Argument	s -> cbuf		9567082	0					
ANR	9567132	PtrMemberAccess	s -> cbuf		9567082	0					
ANR	9567133	Identifier	s		9567082	0					
ANR	9567134	Identifier	cbuf		9567082	1					
ANR	9567135	Argument	s -> cursor . r . ptr + 1		9567082	1					
ANR	9567136	AdditiveExpression	s -> cursor . r . ptr + 1		9567082	0		+			
ANR	9567137	MemberAccess	s -> cursor . r . ptr		9567082	0					
ANR	9567138	MemberAccess	s -> cursor . r		9567082	0					
ANR	9567139	PtrMemberAccess	s -> cursor		9567082	0					
ANR	9567140	Identifier	s		9567082	0					
ANR	9567141	Identifier	cursor		9567082	1					
ANR	9567142	Identifier	r		9567082	1					
ANR	9567143	Identifier	ptr		9567082	1					
ANR	9567144	PrimaryExpression	1		9567082	1					
ANR	9567145	Argument	( uint ) ( s -> cursor . r . limit - s -> cursor . r . ptr )		9567082	2					
ANR	9567146	CastExpression	( uint ) ( s -> cursor . r . limit - s -> cursor . r . ptr )		9567082	0					
ANR	9567147	CastTarget	uint		9567082	0					
ANR	9567148	AdditiveExpression	s -> cursor . r . limit - s -> cursor . r . ptr		9567082	1		-			
ANR	9567149	MemberAccess	s -> cursor . r . limit		9567082	0					
ANR	9567150	MemberAccess	s -> cursor . r		9567082	0					
ANR	9567151	PtrMemberAccess	s -> cursor		9567082	0					
ANR	9567152	Identifier	s		9567082	0					
ANR	9567153	Identifier	cursor		9567082	1					
ANR	9567154	Identifier	r		9567082	1					
ANR	9567155	Identifier	limit		9567082	1					
ANR	9567156	MemberAccess	s -> cursor . r . ptr		9567082	1					
ANR	9567157	MemberAccess	s -> cursor . r		9567082	0					
ANR	9567158	PtrMemberAccess	s -> cursor		9567082	0					
ANR	9567159	Identifier	s		9567082	0					
ANR	9567160	Identifier	cursor		9567082	1					
ANR	9567161	Identifier	r		9567082	1					
ANR	9567162	Identifier	ptr		9567082	1					
ANR	9567163	ExpressionStatement	s -> cursor . r . ptr = s -> cbuf - 1	991:8:28565:28594	9567082	2	True				
ANR	9567164	AssignmentExpression	s -> cursor . r . ptr = s -> cbuf - 1		9567082	0		=			
ANR	9567165	MemberAccess	s -> cursor . r . ptr		9567082	0					
ANR	9567166	MemberAccess	s -> cursor . r		9567082	0					
ANR	9567167	PtrMemberAccess	s -> cursor		9567082	0					
ANR	9567168	Identifier	s		9567082	0					
ANR	9567169	Identifier	cursor		9567082	1					
ANR	9567170	Identifier	r		9567082	1					
ANR	9567171	Identifier	ptr		9567082	1					
ANR	9567172	AdditiveExpression	s -> cbuf - 1		9567082	1		-			
ANR	9567173	PtrMemberAccess	s -> cbuf		9567082	0					
ANR	9567174	Identifier	s		9567082	0					
ANR	9567175	Identifier	cbuf		9567082	1					
ANR	9567176	PrimaryExpression	1		9567082	1					
ANR	9567177	ExpressionStatement	s -> cursor . r . limit -= dist	992:8:28604:28629	9567082	3	True				
ANR	9567178	AssignmentExpression	s -> cursor . r . limit -= dist		9567082	0		-=			
ANR	9567179	MemberAccess	s -> cursor . r . limit		9567082	0					
ANR	9567180	MemberAccess	s -> cursor . r		9567082	0					
ANR	9567181	PtrMemberAccess	s -> cursor		9567082	0					
ANR	9567182	Identifier	s		9567082	0					
ANR	9567183	Identifier	cursor		9567082	1					
ANR	9567184	Identifier	r		9567082	1					
ANR	9567185	Identifier	limit		9567082	1					
ANR	9567186	Identifier	dist		9567082	1					
ANR	9567187	ExpressionStatement	s -> position += dist	993:8:28659:28678	9567082	4	True				
ANR	9567188	AssignmentExpression	s -> position += dist		9567082	0		+=			
ANR	9567189	PtrMemberAccess	s -> position		9567082	0					
ANR	9567190	Identifier	s		9567082	0					
ANR	9567191	Identifier	position		9567082	1					
ANR	9567192	Identifier	dist		9567082	1					
ANR	9567193	ReturnType	static void		9567082	1					
ANR	9567194	Identifier	stream_compact		9567082	2					
ANR	9567195	ParameterList	"stream * s , bool always"		9567082	3					
ANR	9567196	Parameter	stream * s	984:15:28297:28306	9567082	0	True				
ANR	9567197	ParameterType	stream *		9567082	0					
ANR	9567198	Identifier	s		9567082	1					
ANR	9567199	Parameter	bool always	984:27:28309:28319	9567082	1	True				
ANR	9567200	ParameterType	bool		9567082	0					
ANR	9567201	Identifier	always		9567082	1					
ANR	9567202	CFGEntryNode	ENTRY		9567082		True				
ANR	9567203	CFGExitNode	EXIT		9567082		True				
ANR	9567204	Symbol	always		9567082						
ANR	9567205	Symbol	s -> cursor		9567082						
ANR	9567206	Symbol	s		9567082						
ANR	9567207	Symbol	s -> cursor . r		9567082						
ANR	9567208	Symbol	s -> position		9567082						
ANR	9567209	Symbol	s -> cursor . r . ptr		9567082						
ANR	9567210	Symbol	dist		9567082						
ANR	9567211	Symbol	s -> cbuf		9567082						
ANR	9567212	Symbol	s -> end_status		9567082						
ANR	9567213	Symbol	s -> cursor . r . limit		9567082						
ANR	9567214	Symbol	* s		9567082						
ANR	9567215	DeclStmt									
ANR	9567216	Decl							int	"int ( stream * , gs_offset_t * )"	s_string_available
ANR	9567217	Decl							int	"int ( stream * , gs_offset_t )"	s_string_read_seek
ANR	9567218	Decl							int	"int ( stream * , gs_offset_t )"	s_string_write_seek
ANR	9567219	Decl							int	"int ( stream_state * , stream_cursor_read * , stream_cursor_write * , bool )"	s_string_read_process
ANR	9567220	Decl							int	"int ( stream_state * , stream_cursor_read * , stream_cursor_write * , bool )"	s_string_write_process
ANR	9567221	Function	sread_string	1010:0:29202:29634							
ANR	9567222	FunctionDef	"sread_string (register stream * s , const byte * ptr , uint len)"		9567221	0					
ANR	9567223	CompoundStatement		1012:0:29267:29634	9567221	0					
ANR	9567224	Statement	static	1013:4:29273:29278	9567221	0	True				
ANR	9567225	IdentifierDeclStatement	"const stream_procs p = { s_string_available , s_string_read_seek , s_std_read_reset , s_std_read_flush , s_std_null , s_string_read_process } ;"	1013:11:29280:29438	9567221	1	True				
ANR	9567226	IdentifierDecl	"p = { s_string_available , s_string_read_seek , s_std_read_reset , s_std_read_flush , s_std_null , s_string_read_process }"		9567221	0					
ANR	9567227	IdentifierDeclType	const stream_procs		9567221	0					
ANR	9567228	Identifier	p		9567221	1					
ANR	9567229	AssignmentExpression	"p = { s_string_available , s_string_read_seek , s_std_read_reset , s_std_read_flush , s_std_null , s_string_read_process }"		9567221	2		=			
ANR	9567230	Identifier	p		9567221	0					
ANR	9567231	InitializerList	s_string_available		9567221	1					
ANR	9567232	Identifier	s_string_available		9567221	0					
ANR	9567233	Identifier	s_string_read_seek		9567221	1					
ANR	9567234	Identifier	s_std_read_reset		9567221	2					
ANR	9567235	Identifier	s_std_read_flush		9567221	3					
ANR	9567236	Identifier	s_std_null		9567221	4					
ANR	9567237	Identifier	s_string_read_process		9567221	5					
ANR	9567238	ExpressionStatement	"s_std_init ( s , ( byte * ) ptr , len , & p , s_mode_read + s_mode_seek )"	1018:4:29445:29507	9567221	2	True				
ANR	9567239	CallExpression	"s_std_init ( s , ( byte * ) ptr , len , & p , s_mode_read + s_mode_seek )"		9567221	0					
ANR	9567240	Callee	s_std_init		9567221	0					
ANR	9567241	Identifier	s_std_init		9567221	0					
ANR	9567242	ArgumentList	s		9567221	1					
ANR	9567243	Argument	s		9567221	0					
ANR	9567244	Identifier	s		9567221	0					
ANR	9567245	Argument	( byte * ) ptr		9567221	1					
ANR	9567246	CastExpression	( byte * ) ptr		9567221	0					
ANR	9567247	CastTarget	byte *		9567221	0					
ANR	9567248	Identifier	ptr		9567221	1					
ANR	9567249	Argument	len		9567221	2					
ANR	9567250	Identifier	len		9567221	0					
ANR	9567251	Argument	& p		9567221	3					
ANR	9567252	UnaryOperationExpression	& p		9567221	0					
ANR	9567253	UnaryOperator	&		9567221	0					
ANR	9567254	Identifier	p		9567221	1					
ANR	9567255	Argument	s_mode_read + s_mode_seek		9567221	4					
ANR	9567256	AdditiveExpression	s_mode_read + s_mode_seek		9567221	0		+			
ANR	9567257	Identifier	s_mode_read		9567221	0					
ANR	9567258	Identifier	s_mode_seek		9567221	1					
ANR	9567259	ExpressionStatement	s -> cbuf_string . data = ( byte * ) ptr	1019:4:29513:29546	9567221	3	True				
ANR	9567260	AssignmentExpression	s -> cbuf_string . data = ( byte * ) ptr		9567221	0		=			
ANR	9567261	MemberAccess	s -> cbuf_string . data		9567221	0					
ANR	9567262	PtrMemberAccess	s -> cbuf_string		9567221	0					
ANR	9567263	Identifier	s		9567221	0					
ANR	9567264	Identifier	cbuf_string		9567221	1					
ANR	9567265	Identifier	data		9567221	1					
ANR	9567266	CastExpression	( byte * ) ptr		9567221	1					
ANR	9567267	CastTarget	byte *		9567221	0					
ANR	9567268	Identifier	ptr		9567221	1					
ANR	9567269	ExpressionStatement	s -> cbuf_string . size = len	1020:4:29552:29577	9567221	4	True				
ANR	9567270	AssignmentExpression	s -> cbuf_string . size = len		9567221	0		=			
ANR	9567271	MemberAccess	s -> cbuf_string . size		9567221	0					
ANR	9567272	PtrMemberAccess	s -> cbuf_string		9567221	0					
ANR	9567273	Identifier	s		9567221	0					
ANR	9567274	Identifier	cbuf_string		9567221	1					
ANR	9567275	Identifier	size		9567221	1					
ANR	9567276	Identifier	len		9567221	1					
ANR	9567277	ExpressionStatement	s -> end_status = EOFC	1021:4:29583:29603	9567221	5	True				
ANR	9567278	AssignmentExpression	s -> end_status = EOFC		9567221	0		=			
ANR	9567279	PtrMemberAccess	s -> end_status		9567221	0					
ANR	9567280	Identifier	s		9567221	0					
ANR	9567281	Identifier	end_status		9567221	1					
ANR	9567282	Identifier	EOFC		9567221	1					
ANR	9567283	ExpressionStatement	s -> srlimit = s -> swlimit	1022:4:29609:29632	9567221	6	True				
ANR	9567284	AssignmentExpression	s -> srlimit = s -> swlimit		9567221	0		=			
ANR	9567285	PtrMemberAccess	s -> srlimit		9567221	0					
ANR	9567286	Identifier	s		9567221	0					
ANR	9567287	Identifier	srlimit		9567221	1					
ANR	9567288	PtrMemberAccess	s -> swlimit		9567221	1					
ANR	9567289	Identifier	s		9567221	0					
ANR	9567290	Identifier	swlimit		9567221	1					
ANR	9567291	ReturnType	void		9567221	1					
ANR	9567292	Identifier	sread_string		9567221	2					
ANR	9567293	ParameterList	"register stream * s , const byte * ptr , uint len"		9567221	3					
ANR	9567294	Parameter	register stream * s	1011:13:29220:29237	9567221	0	True				
ANR	9567295	ParameterType	register stream *		9567221	0					
ANR	9567296	Identifier	s		9567221	1					
ANR	9567297	Parameter	const byte * ptr	1011:33:29240:29254	9567221	1	True				
ANR	9567298	ParameterType	const byte *		9567221	0					
ANR	9567299	Identifier	ptr		9567221	1					
ANR	9567300	Parameter	uint len	1011:50:29257:29264	9567221	2	True				
ANR	9567301	ParameterType	uint		9567221	0					
ANR	9567302	Identifier	len		9567221	1					
ANR	9567303	CFGEntryNode	ENTRY		9567221		True				
ANR	9567304	CFGExitNode	EXIT		9567221		True				
ANR	9567305	Symbol	s_string_available		9567221						
ANR	9567306	Symbol	EOFC		9567221						
ANR	9567307	Symbol	s -> srlimit		9567221						
ANR	9567308	Symbol	s -> cbuf_string		9567221						
ANR	9567309	Symbol	ptr		9567221						
ANR	9567310	Symbol	s_string_read_process		9567221						
ANR	9567311	Symbol	p		9567221						
ANR	9567312	Symbol	s_std_read_reset		9567221						
ANR	9567313	Symbol	s -> swlimit		9567221						
ANR	9567314	Symbol	s		9567221						
ANR	9567315	Symbol	len		9567221						
ANR	9567316	Symbol	s_mode_seek		9567221						
ANR	9567317	Symbol	& p		9567221						
ANR	9567318	Symbol	s_std_read_flush		9567221						
ANR	9567319	Symbol	s -> end_status		9567221						
ANR	9567320	Symbol	s_mode_read		9567221						
ANR	9567321	Symbol	* s		9567221						
ANR	9567322	Symbol	s -> cbuf_string . size		9567221						
ANR	9567323	Symbol	s_string_read_seek		9567221						
ANR	9567324	Symbol	s_std_null		9567221						
ANR	9567325	Symbol	s -> cbuf_string . data		9567221						
ANR	9567326	Function	s_string_reusable_reset	1025:0:29693:29873							
ANR	9567327	FunctionDef	s_string_reusable_reset (stream * s)		9567326	0					
ANR	9567328	CompoundStatement		1027:0:29740:29873	9567326	0					
ANR	9567329	ExpressionStatement	s -> srptr = s -> cbuf - 1	1028:4:29746:29768	9567326	0	True				
ANR	9567330	AssignmentExpression	s -> srptr = s -> cbuf - 1		9567326	0		=			
ANR	9567331	PtrMemberAccess	s -> srptr		9567326	0					
ANR	9567332	Identifier	s		9567326	0					
ANR	9567333	Identifier	srptr		9567326	1					
ANR	9567334	AdditiveExpression	s -> cbuf - 1		9567326	1		-			
ANR	9567335	PtrMemberAccess	s -> cbuf		9567326	0					
ANR	9567336	Identifier	s		9567326	0					
ANR	9567337	Identifier	cbuf		9567326	1					
ANR	9567338	PrimaryExpression	1		9567326	1					
ANR	9567339	ExpressionStatement	s -> srlimit = s -> srptr + s -> bsize	1029:4:29808:29840	9567326	1	True				
ANR	9567340	AssignmentExpression	s -> srlimit = s -> srptr + s -> bsize		9567326	0		=			
ANR	9567341	PtrMemberAccess	s -> srlimit		9567326	0					
ANR	9567342	Identifier	s		9567326	0					
ANR	9567343	Identifier	srlimit		9567326	1					
ANR	9567344	AdditiveExpression	s -> srptr + s -> bsize		9567326	1		+			
ANR	9567345	PtrMemberAccess	s -> srptr		9567326	0					
ANR	9567346	Identifier	s		9567326	0					
ANR	9567347	Identifier	srptr		9567326	1					
ANR	9567348	PtrMemberAccess	s -> bsize		9567326	1					
ANR	9567349	Identifier	s		9567326	0					
ANR	9567350	Identifier	bsize		9567326	1					
ANR	9567351	ReturnType	static void		9567326	1					
ANR	9567352	Identifier	s_string_reusable_reset		9567326	2					
ANR	9567353	ParameterList	stream * s		9567326	3					
ANR	9567354	Parameter	stream * s	1026:24:29729:29737	9567326	0	True				
ANR	9567355	ParameterType	stream *		9567326	0					
ANR	9567356	Identifier	s		9567326	1					
ANR	9567357	CFGEntryNode	ENTRY		9567326		True				
ANR	9567358	CFGExitNode	EXIT		9567326		True				
ANR	9567359	Symbol	s		9567326						
ANR	9567360	Symbol	s -> srptr		9567326						
ANR	9567361	Symbol	s -> srlimit		9567326						
ANR	9567362	Symbol	s -> bsize		9567326						
ANR	9567363	Symbol	s -> cbuf		9567326						
ANR	9567364	Symbol	* s		9567326						
ANR	9567365	Function	s_string_reusable_flush	1031:0:29875:30016							
ANR	9567366	FunctionDef	s_string_reusable_flush (stream * s)		9567365	0					
ANR	9567367	CompoundStatement		1033:0:29921:30016	9567365	0					
ANR	9567368	ExpressionStatement	s -> srptr = s -> srlimit = s -> cbuf + s -> bsize - 1	1034:4:29927:29973	9567365	0	True				
ANR	9567369	AssignmentExpression	s -> srptr = s -> srlimit = s -> cbuf + s -> bsize - 1		9567365	0		=			
ANR	9567370	PtrMemberAccess	s -> srptr		9567365	0					
ANR	9567371	Identifier	s		9567365	0					
ANR	9567372	Identifier	srptr		9567365	1					
ANR	9567373	AssignmentExpression	s -> srlimit = s -> cbuf + s -> bsize - 1		9567365	1		=			
ANR	9567374	PtrMemberAccess	s -> srlimit		9567365	0					
ANR	9567375	Identifier	s		9567365	0					
ANR	9567376	Identifier	srlimit		9567365	1					
ANR	9567377	AdditiveExpression	s -> cbuf + s -> bsize - 1		9567365	1		+			
ANR	9567378	PtrMemberAccess	s -> cbuf		9567365	0					
ANR	9567379	Identifier	s		9567365	0					
ANR	9567380	Identifier	cbuf		9567365	1					
ANR	9567381	AdditiveExpression	s -> bsize - 1		9567365	1		-			
ANR	9567382	PtrMemberAccess	s -> bsize		9567365	0					
ANR	9567383	Identifier	s		9567365	0					
ANR	9567384	Identifier	bsize		9567365	1					
ANR	9567385	PrimaryExpression	1		9567365	1					
ANR	9567386	ReturnStatement	return 0 ;	1035:4:30006:30014	9567365	1	True				
ANR	9567387	PrimaryExpression	0		9567365	0					
ANR	9567388	ReturnType	static int		9567365	1					
ANR	9567389	Identifier	s_string_reusable_flush		9567365	2					
ANR	9567390	ParameterList	stream * s		9567365	3					
ANR	9567391	Parameter	stream * s	1032:24:29910:29918	9567365	0	True				
ANR	9567392	ParameterType	stream *		9567365	0					
ANR	9567393	Identifier	s		9567365	1					
ANR	9567394	CFGEntryNode	ENTRY		9567365		True				
ANR	9567395	CFGExitNode	EXIT		9567365		True				
ANR	9567396	Symbol	s		9567365						
ANR	9567397	Symbol	s -> srptr		9567365						
ANR	9567398	Symbol	s -> srlimit		9567365						
ANR	9567399	Symbol	s -> bsize		9567365						
ANR	9567400	Symbol	s -> cbuf		9567365						
ANR	9567401	Symbol	* s		9567365						
ANR	9567402	Function	sread_string_reusable	1037:0:30018:30460							
ANR	9567403	FunctionDef	"sread_string_reusable (stream * s , const byte * ptr , uint len)"		9567402	0					
ANR	9567404	CompoundStatement		1039:0:30083:30460	9567402	0					
ANR	9567405	Statement	static	1044:4:30195:30200	9567402	0	True				
ANR	9567406	IdentifierDeclStatement	"const stream_procs p = { s_string_available , s_string_read_seek , s_string_reusable_reset , s_string_reusable_flush , s_close_disable , s_string_read_process } ;"	1044:11:30202:30379	9567402	1	True				
ANR	9567407	IdentifierDecl	"p = { s_string_available , s_string_read_seek , s_string_reusable_reset , s_string_reusable_flush , s_close_disable , s_string_read_process }"		9567402	0					
ANR	9567408	IdentifierDeclType	const stream_procs		9567402	0					
ANR	9567409	Identifier	p		9567402	1					
ANR	9567410	AssignmentExpression	"p = { s_string_available , s_string_read_seek , s_string_reusable_reset , s_string_reusable_flush , s_close_disable , s_string_read_process }"		9567402	2		=			
ANR	9567411	Identifier	p		9567402	0					
ANR	9567412	InitializerList	s_string_available		9567402	1					
ANR	9567413	Identifier	s_string_available		9567402	0					
ANR	9567414	Identifier	s_string_read_seek		9567402	1					
ANR	9567415	Identifier	s_string_reusable_reset		9567402	2					
ANR	9567416	Identifier	s_string_reusable_flush		9567402	3					
ANR	9567417	Identifier	s_close_disable		9567402	4					
ANR	9567418	Identifier	s_string_read_process		9567402	5					
ANR	9567419	ExpressionStatement	"sread_string ( s , ptr , len )"	1049:4:30386:30411	9567402	2	True				
ANR	9567420	CallExpression	"sread_string ( s , ptr , len )"		9567402	0					
ANR	9567421	Callee	sread_string		9567402	0					
ANR	9567422	Identifier	sread_string		9567402	0					
ANR	9567423	ArgumentList	s		9567402	1					
ANR	9567424	Argument	s		9567402	0					
ANR	9567425	Identifier	s		9567402	0					
ANR	9567426	Argument	ptr		9567402	1					
ANR	9567427	Identifier	ptr		9567402	0					
ANR	9567428	Argument	len		9567402	2					
ANR	9567429	Identifier	len		9567402	0					
ANR	9567430	ExpressionStatement	s -> procs = p	1050:4:30417:30429	9567402	3	True				
ANR	9567431	AssignmentExpression	s -> procs = p		9567402	0		=			
ANR	9567432	PtrMemberAccess	s -> procs		9567402	0					
ANR	9567433	Identifier	s		9567402	0					
ANR	9567434	Identifier	procs		9567402	1					
ANR	9567435	Identifier	p		9567402	1					
ANR	9567436	ExpressionStatement	s -> close_at_eod = false	1051:4:30435:30458	9567402	4	True				
ANR	9567437	AssignmentExpression	s -> close_at_eod = false		9567402	0		=			
ANR	9567438	PtrMemberAccess	s -> close_at_eod		9567402	0					
ANR	9567439	Identifier	s		9567402	0					
ANR	9567440	Identifier	close_at_eod		9567402	1					
ANR	9567441	Identifier	false		9567402	1					
ANR	9567442	ReturnType	void		9567402	1					
ANR	9567443	Identifier	sread_string_reusable		9567402	2					
ANR	9567444	ParameterList	"stream * s , const byte * ptr , uint len"		9567402	3					
ANR	9567445	Parameter	stream * s	1038:22:30045:30053	9567402	0	True				
ANR	9567446	ParameterType	stream *		9567402	0					
ANR	9567447	Identifier	s		9567402	1					
ANR	9567448	Parameter	const byte * ptr	1038:33:30056:30070	9567402	1	True				
ANR	9567449	ParameterType	const byte *		9567402	0					
ANR	9567450	Identifier	ptr		9567402	1					
ANR	9567451	Parameter	uint len	1038:50:30073:30080	9567402	2	True				
ANR	9567452	ParameterType	uint		9567402	0					
ANR	9567453	Identifier	len		9567402	1					
ANR	9567454	CFGEntryNode	ENTRY		9567402		True				
ANR	9567455	CFGExitNode	EXIT		9567402		True				
ANR	9567456	Symbol	s -> close_at_eod		9567402						
ANR	9567457	Symbol	s_close_disable		9567402						
ANR	9567458	Symbol	s_string_available		9567402						
ANR	9567459	Symbol	s -> procs		9567402						
ANR	9567460	Symbol	false		9567402						
ANR	9567461	Symbol	ptr		9567402						
ANR	9567462	Symbol	s_string_read_process		9567402						
ANR	9567463	Symbol	s_string_reusable_reset		9567402						
ANR	9567464	Symbol	p		9567402						
ANR	9567465	Symbol	s		9567402						
ANR	9567466	Symbol	len		9567402						
ANR	9567467	Symbol	* s		9567402						
ANR	9567468	Symbol	s_string_reusable_flush		9567402						
ANR	9567469	Symbol	s_string_read_seek		9567402						
ANR	9567470	Function	s_string_available	1055:0:30534:30701							
ANR	9567471	FunctionDef	"s_string_available (stream * s , gs_offset_t * pl)"		9567470	0					
ANR	9567472	CompoundStatement		1057:0:30592:30701	9567470	0					
ANR	9567473	ExpressionStatement	* pl = sbufavailable ( s )	1058:4:30598:30620	9567470	0	True				
ANR	9567474	AssignmentExpression	* pl = sbufavailable ( s )		9567470	0		=			
ANR	9567475	UnaryOperationExpression	* pl		9567470	0					
ANR	9567476	UnaryOperator	*		9567470	0					
ANR	9567477	Identifier	pl		9567470	1					
ANR	9567478	CallExpression	sbufavailable ( s )		9567470	1					
ANR	9567479	Callee	sbufavailable		9567470	0					
ANR	9567480	Identifier	sbufavailable		9567470	0					
ANR	9567481	ArgumentList	s		9567470	1					
ANR	9567482	Argument	s		9567470	0					
ANR	9567483	Identifier	s		9567470	0					
ANR	9567484	IfStatement	if ( * pl == 0 && s -> close_at_eod )		9567470	1					
ANR	9567485	Condition	* pl == 0 && s -> close_at_eod	1059:8:30630:30656	9567470	0	True				
ANR	9567486	AndExpression	* pl == 0 && s -> close_at_eod		9567470	0		&&			
ANR	9567487	EqualityExpression	* pl == 0		9567470	0		==			
ANR	9567488	UnaryOperationExpression	* pl		9567470	0					
ANR	9567489	UnaryOperator	*		9567470	0					
ANR	9567490	Identifier	pl		9567470	1					
ANR	9567491	PrimaryExpression	0		9567470	1					
ANR	9567492	PtrMemberAccess	s -> close_at_eod		9567470	1					
ANR	9567493	Identifier	s		9567470	0					
ANR	9567494	Identifier	close_at_eod		9567470	1					
ANR	9567495	ExpressionStatement	* pl = - 1	1060:8:30677:30685	9567470	1	True				
ANR	9567496	AssignmentExpression	* pl = - 1		9567470	0		=			
ANR	9567497	UnaryOperationExpression	* pl		9567470	0					
ANR	9567498	UnaryOperator	*		9567470	0					
ANR	9567499	Identifier	pl		9567470	1					
ANR	9567500	UnaryOperationExpression	- 1		9567470	1					
ANR	9567501	UnaryOperator	-		9567470	0					
ANR	9567502	PrimaryExpression	1		9567470	1					
ANR	9567503	ReturnStatement	return 0 ;	1061:4:30691:30699	9567470	2	True				
ANR	9567504	PrimaryExpression	0		9567470	0					
ANR	9567505	ReturnType	static int		9567470	1					
ANR	9567506	Identifier	s_string_available		9567470	2					
ANR	9567507	ParameterList	"stream * s , gs_offset_t * pl"		9567470	3					
ANR	9567508	Parameter	stream * s	1056:19:30564:30572	9567470	0	True				
ANR	9567509	ParameterType	stream *		9567470	0					
ANR	9567510	Identifier	s		9567470	1					
ANR	9567511	Parameter	gs_offset_t * pl	1056:30:30575:30589	9567470	1	True				
ANR	9567512	ParameterType	gs_offset_t *		9567470	0					
ANR	9567513	Identifier	pl		9567470	1					
ANR	9567514	CFGEntryNode	ENTRY		9567470		True				
ANR	9567515	CFGExitNode	EXIT		9567470		True				
ANR	9567516	Symbol	* pl		9567470						
ANR	9567517	Symbol	s		9567470						
ANR	9567518	Symbol	s -> close_at_eod		9567470						
ANR	9567519	Symbol	pl		9567470						
ANR	9567520	Symbol	* s		9567470						
ANR	9567521	Symbol	sbufavailable		9567470						
ANR	9567522	Function	s_string_read_seek	1065:0:30769:31371							
ANR	9567523	FunctionDef	"s_string_read_seek (register stream * s , gs_offset_t pos)"		9567522	0					
ANR	9567524	CompoundStatement		1067:0:30837:31371	9567522	0					
ANR	9567525	IfStatement	if ( pos < 0 || pos > s -> bsize )		9567522	0					
ANR	9567526	Condition	pos < 0 || pos > s -> bsize	1068:8:30847:30871	9567522	0	True				
ANR	9567527	OrExpression	pos < 0 || pos > s -> bsize		9567522	0		||			
ANR	9567528	RelationalExpression	pos < 0		9567522	0		<			
ANR	9567529	Identifier	pos		9567522	0					
ANR	9567530	PrimaryExpression	0		9567522	1					
ANR	9567531	RelationalExpression	pos > s -> bsize		9567522	1		>			
ANR	9567532	Identifier	pos		9567522	0					
ANR	9567533	PtrMemberAccess	s -> bsize		9567522	1					
ANR	9567534	Identifier	s		9567522	0					
ANR	9567535	Identifier	bsize		9567522	1					
ANR	9567536	ReturnStatement	return ERRC ;	1069:8:30882:30893	9567522	1	True				
ANR	9567537	Identifier	ERRC		9567522	0					
ANR	9567538	ExpressionStatement	s -> srptr = s -> cbuf + pos - 1	1070:4:30899:30927	9567522	1	True				
ANR	9567539	AssignmentExpression	s -> srptr = s -> cbuf + pos - 1		9567522	0		=			
ANR	9567540	PtrMemberAccess	s -> srptr		9567522	0					
ANR	9567541	Identifier	s		9567522	0					
ANR	9567542	Identifier	srptr		9567522	1					
ANR	9567543	AdditiveExpression	s -> cbuf + pos - 1		9567522	1		+			
ANR	9567544	PtrMemberAccess	s -> cbuf		9567522	0					
ANR	9567545	Identifier	s		9567522	0					
ANR	9567546	Identifier	cbuf		9567522	1					
ANR	9567547	AdditiveExpression	pos - 1		9567522	1		-			
ANR	9567548	Identifier	pos		9567522	0					
ANR	9567549	PrimaryExpression	1		9567522	1					
ANR	9567550	ExpressionStatement	s -> srlimit = s -> cbuf + s -> bsize - 1	1072:4:31000:31035	9567522	2	True				
ANR	9567551	AssignmentExpression	s -> srlimit = s -> cbuf + s -> bsize - 1		9567522	0		=			
ANR	9567552	PtrMemberAccess	s -> srlimit		9567522	0					
ANR	9567553	Identifier	s		9567522	0					
ANR	9567554	Identifier	srlimit		9567522	1					
ANR	9567555	AdditiveExpression	s -> cbuf + s -> bsize - 1		9567522	1		+			
ANR	9567556	PtrMemberAccess	s -> cbuf		9567522	0					
ANR	9567557	Identifier	s		9567522	0					
ANR	9567558	Identifier	cbuf		9567522	1					
ANR	9567559	AdditiveExpression	s -> bsize - 1		9567522	1		-			
ANR	9567560	PtrMemberAccess	s -> bsize		9567522	0					
ANR	9567561	Identifier	s		9567522	0					
ANR	9567562	Identifier	bsize		9567522	1					
ANR	9567563	PrimaryExpression	1		9567522	1					
ANR	9567564	ExpressionStatement	s -> position = 0	1081:4:31340:31355	9567522	3	True				
ANR	9567565	AssignmentExpression	s -> position = 0		9567522	0		=			
ANR	9567566	PtrMemberAccess	s -> position		9567522	0					
ANR	9567567	Identifier	s		9567522	0					
ANR	9567568	Identifier	position		9567522	1					
ANR	9567569	PrimaryExpression	0		9567522	1					
ANR	9567570	ReturnStatement	return 0 ;	1082:4:31361:31369	9567522	4	True				
ANR	9567571	PrimaryExpression	0		9567522	0					
ANR	9567572	ReturnType	static int		9567522	1					
ANR	9567573	Identifier	s_string_read_seek		9567522	2					
ANR	9567574	ParameterList	"register stream * s , gs_offset_t pos"		9567522	3					
ANR	9567575	Parameter	register stream * s	1066:19:30799:30817	9567522	0	True				
ANR	9567576	ParameterType	register stream *		9567522	0					
ANR	9567577	Identifier	s		9567522	1					
ANR	9567578	Parameter	gs_offset_t pos	1066:40:30820:30834	9567522	1	True				
ANR	9567579	ParameterType	gs_offset_t		9567522	0					
ANR	9567580	Identifier	pos		9567522	1					
ANR	9567581	CFGEntryNode	ENTRY		9567522		True				
ANR	9567582	CFGExitNode	EXIT		9567522		True				
ANR	9567583	Symbol	s		9567522						
ANR	9567584	Symbol	pos		9567522						
ANR	9567585	Symbol	s -> srptr		9567522						
ANR	9567586	Symbol	s -> position		9567522						
ANR	9567587	Symbol	s -> srlimit		9567522						
ANR	9567588	Symbol	s -> bsize		9567522						
ANR	9567589	Symbol	s -> cbuf		9567522						
ANR	9567590	Symbol	* s		9567522						
ANR	9567591	Symbol	ERRC		9567522						
ANR	9567592	Function	swrite_string	1086:0:31422:31775							
ANR	9567593	FunctionDef	"swrite_string (register stream * s , byte * ptr , uint len)"		9567592	0					
ANR	9567594	CompoundStatement		1088:0:31484:31775	9567592	0					
ANR	9567595	Statement	static	1089:4:31490:31495	9567592	0	True				
ANR	9567596	IdentifierDeclStatement	"const stream_procs p = { s_std_noavailable , s_string_write_seek , s_std_write_reset , s_std_null , s_std_null , s_string_write_process } ;"	1089:11:31497:31649	9567592	1	True				
ANR	9567597	IdentifierDecl	"p = { s_std_noavailable , s_string_write_seek , s_std_write_reset , s_std_null , s_std_null , s_string_write_process }"		9567592	0					
ANR	9567598	IdentifierDeclType	const stream_procs		9567592	0					
ANR	9567599	Identifier	p		9567592	1					
ANR	9567600	AssignmentExpression	"p = { s_std_noavailable , s_string_write_seek , s_std_write_reset , s_std_null , s_std_null , s_string_write_process }"		9567592	2		=			
ANR	9567601	Identifier	p		9567592	0					
ANR	9567602	InitializerList	s_std_noavailable		9567592	1					
ANR	9567603	Identifier	s_std_noavailable		9567592	0					
ANR	9567604	Identifier	s_string_write_seek		9567592	1					
ANR	9567605	Identifier	s_std_write_reset		9567592	2					
ANR	9567606	Identifier	s_std_null		9567592	3					
ANR	9567607	Identifier	s_std_null		9567592	4					
ANR	9567608	Identifier	s_string_write_process		9567592	5					
ANR	9567609	ExpressionStatement	"s_std_init ( s , ptr , len , & p , s_mode_write + s_mode_seek )"	1094:4:31656:31711	9567592	2	True				
ANR	9567610	CallExpression	"s_std_init ( s , ptr , len , & p , s_mode_write + s_mode_seek )"		9567592	0					
ANR	9567611	Callee	s_std_init		9567592	0					
ANR	9567612	Identifier	s_std_init		9567592	0					
ANR	9567613	ArgumentList	s		9567592	1					
ANR	9567614	Argument	s		9567592	0					
ANR	9567615	Identifier	s		9567592	0					
ANR	9567616	Argument	ptr		9567592	1					
ANR	9567617	Identifier	ptr		9567592	0					
ANR	9567618	Argument	len		9567592	2					
ANR	9567619	Identifier	len		9567592	0					
ANR	9567620	Argument	& p		9567592	3					
ANR	9567621	UnaryOperationExpression	& p		9567592	0					
ANR	9567622	UnaryOperator	&		9567592	0					
ANR	9567623	Identifier	p		9567592	1					
ANR	9567624	Argument	s_mode_write + s_mode_seek		9567592	4					
ANR	9567625	AdditiveExpression	s_mode_write + s_mode_seek		9567592	0		+			
ANR	9567626	Identifier	s_mode_write		9567592	0					
ANR	9567627	Identifier	s_mode_seek		9567592	1					
ANR	9567628	ExpressionStatement	s -> cbuf_string . data = ptr	1095:4:31717:31742	9567592	3	True				
ANR	9567629	AssignmentExpression	s -> cbuf_string . data = ptr		9567592	0		=			
ANR	9567630	MemberAccess	s -> cbuf_string . data		9567592	0					
ANR	9567631	PtrMemberAccess	s -> cbuf_string		9567592	0					
ANR	9567632	Identifier	s		9567592	0					
ANR	9567633	Identifier	cbuf_string		9567592	1					
ANR	9567634	Identifier	data		9567592	1					
ANR	9567635	Identifier	ptr		9567592	1					
ANR	9567636	ExpressionStatement	s -> cbuf_string . size = len	1096:4:31748:31773	9567592	4	True				
ANR	9567637	AssignmentExpression	s -> cbuf_string . size = len		9567592	0		=			
ANR	9567638	MemberAccess	s -> cbuf_string . size		9567592	0					
ANR	9567639	PtrMemberAccess	s -> cbuf_string		9567592	0					
ANR	9567640	Identifier	s		9567592	0					
ANR	9567641	Identifier	cbuf_string		9567592	1					
ANR	9567642	Identifier	size		9567592	1					
ANR	9567643	Identifier	len		9567592	1					
ANR	9567644	ReturnType	void		9567592	1					
ANR	9567645	Identifier	swrite_string		9567592	2					
ANR	9567646	ParameterList	"register stream * s , byte * ptr , uint len"		9567592	3					
ANR	9567647	Parameter	register stream * s	1087:14:31441:31459	9567592	0	True				
ANR	9567648	ParameterType	register stream *		9567592	0					
ANR	9567649	Identifier	s		9567592	1					
ANR	9567650	Parameter	byte * ptr	1087:35:31462:31471	9567592	1	True				
ANR	9567651	ParameterType	byte *		9567592	0					
ANR	9567652	Identifier	ptr		9567592	1					
ANR	9567653	Parameter	uint len	1087:47:31474:31481	9567592	2	True				
ANR	9567654	ParameterType	uint		9567592	0					
ANR	9567655	Identifier	len		9567592	1					
ANR	9567656	CFGEntryNode	ENTRY		9567592		True				
ANR	9567657	CFGExitNode	EXIT		9567592		True				
ANR	9567658	Symbol	s_string_write_seek		9567592						
ANR	9567659	Symbol	s_std_write_reset		9567592						
ANR	9567660	Symbol	s_mode_write		9567592						
ANR	9567661	Symbol	s -> cbuf_string		9567592						
ANR	9567662	Symbol	ptr		9567592						
ANR	9567663	Symbol	p		9567592						
ANR	9567664	Symbol	s		9567592						
ANR	9567665	Symbol	len		9567592						
ANR	9567666	Symbol	s_mode_seek		9567592						
ANR	9567667	Symbol	& p		9567592						
ANR	9567668	Symbol	s_std_noavailable		9567592						
ANR	9567669	Symbol	s_string_write_process		9567592						
ANR	9567670	Symbol	* s		9567592						
ANR	9567671	Symbol	s -> cbuf_string . size		9567592						
ANR	9567672	Symbol	s_std_null		9567592						
ANR	9567673	Symbol	s -> cbuf_string . data		9567592						
ANR	9567674	Function	s_string_write_seek	1100:0:31846:32021							
ANR	9567675	FunctionDef	"s_string_write_seek (register stream * s , gs_offset_t pos)"		9567674	0					
ANR	9567676	CompoundStatement		1102:0:31915:32021	9567674	0					
ANR	9567677	IfStatement	if ( pos < 0 || pos > s -> bsize )		9567674	0					
ANR	9567678	Condition	pos < 0 || pos > s -> bsize	1103:8:31925:31949	9567674	0	True				
ANR	9567679	OrExpression	pos < 0 || pos > s -> bsize		9567674	0		||			
ANR	9567680	RelationalExpression	pos < 0		9567674	0		<			
ANR	9567681	Identifier	pos		9567674	0					
ANR	9567682	PrimaryExpression	0		9567674	1					
ANR	9567683	RelationalExpression	pos > s -> bsize		9567674	1		>			
ANR	9567684	Identifier	pos		9567674	0					
ANR	9567685	PtrMemberAccess	s -> bsize		9567674	1					
ANR	9567686	Identifier	s		9567674	0					
ANR	9567687	Identifier	bsize		9567674	1					
ANR	9567688	ReturnStatement	return ERRC ;	1104:8:31960:31971	9567674	1	True				
ANR	9567689	Identifier	ERRC		9567674	0					
ANR	9567690	ExpressionStatement	s -> swptr = s -> cbuf + pos - 1	1105:4:31977:32005	9567674	1	True				
ANR	9567691	AssignmentExpression	s -> swptr = s -> cbuf + pos - 1		9567674	0		=			
ANR	9567692	PtrMemberAccess	s -> swptr		9567674	0					
ANR	9567693	Identifier	s		9567674	0					
ANR	9567694	Identifier	swptr		9567674	1					
ANR	9567695	AdditiveExpression	s -> cbuf + pos - 1		9567674	1		+			
ANR	9567696	PtrMemberAccess	s -> cbuf		9567674	0					
ANR	9567697	Identifier	s		9567674	0					
ANR	9567698	Identifier	cbuf		9567674	1					
ANR	9567699	AdditiveExpression	pos - 1		9567674	1		-			
ANR	9567700	Identifier	pos		9567674	0					
ANR	9567701	PrimaryExpression	1		9567674	1					
ANR	9567702	ReturnStatement	return 0 ;	1106:4:32011:32019	9567674	2	True				
ANR	9567703	PrimaryExpression	0		9567674	0					
ANR	9567704	ReturnType	static int		9567674	1					
ANR	9567705	Identifier	s_string_write_seek		9567674	2					
ANR	9567706	ParameterList	"register stream * s , gs_offset_t pos"		9567674	3					
ANR	9567707	Parameter	register stream * s	1101:20:31877:31895	9567674	0	True				
ANR	9567708	ParameterType	register stream *		9567674	0					
ANR	9567709	Identifier	s		9567674	1					
ANR	9567710	Parameter	gs_offset_t pos	1101:41:31898:31912	9567674	1	True				
ANR	9567711	ParameterType	gs_offset_t		9567674	0					
ANR	9567712	Identifier	pos		9567674	1					
ANR	9567713	CFGEntryNode	ENTRY		9567674		True				
ANR	9567714	CFGExitNode	EXIT		9567674		True				
ANR	9567715	Symbol	s -> swptr		9567674						
ANR	9567716	Symbol	s		9567674						
ANR	9567717	Symbol	pos		9567674						
ANR	9567718	Symbol	s -> bsize		9567674						
ANR	9567719	Symbol	s -> cbuf		9567674						
ANR	9567720	Symbol	* s		9567674						
ANR	9567721	Symbol	ERRC		9567674						
ANR	9567722	Function	s_string_read_process	1112:0:32210:32372							
ANR	9567723	FunctionDef	"s_string_read_process (stream_state * st , stream_cursor_read * ignore_pr , stream_cursor_write * pw , bool last)"		9567722	0					
ANR	9567724	CompoundStatement		1115:0:32353:32372	9567722	0					
ANR	9567725	ReturnStatement	return EOFC ;	1116:4:32359:32370	9567722	0	True				
ANR	9567726	Identifier	EOFC		9567722	0					
ANR	9567727	ReturnType	static int		9567722	1					
ANR	9567728	Identifier	s_string_read_process		9567722	2					
ANR	9567729	ParameterList	"stream_state * st , stream_cursor_read * ignore_pr , stream_cursor_write * pw , bool last"		9567722	3					
ANR	9567730	Parameter	stream_state * st	1113:22:32243:32259	9567722	0	True				
ANR	9567731	ParameterType	stream_state *		9567722	0					
ANR	9567732	Identifier	st		9567722	1					
ANR	9567733	Parameter	stream_cursor_read * ignore_pr	1113:41:32262:32291	9567722	1	True				
ANR	9567734	ParameterType	stream_cursor_read *		9567722	0					
ANR	9567735	Identifier	ignore_pr		9567722	1					
ANR	9567736	Parameter	stream_cursor_write * pw	1114:22:32316:32339	9567722	2	True				
ANR	9567737	ParameterType	stream_cursor_write *		9567722	0					
ANR	9567738	Identifier	pw		9567722	1					
ANR	9567739	Parameter	bool last	1114:48:32342:32350	9567722	3	True				
ANR	9567740	ParameterType	bool		9567722	0					
ANR	9567741	Identifier	last		9567722	1					
ANR	9567742	CFGEntryNode	ENTRY		9567722		True				
ANR	9567743	CFGExitNode	EXIT		9567722		True				
ANR	9567744	Symbol	st		9567722						
ANR	9567745	Symbol	last		9567722						
ANR	9567746	Symbol	pw		9567722						
ANR	9567747	Symbol	EOFC		9567722						
ANR	9567748	Symbol	ignore_pr		9567722						
ANR	9567749	Function	s_string_write_process	1120:0:32515:32695							
ANR	9567750	FunctionDef	"s_string_write_process (stream_state * st , stream_cursor_read * pr , stream_cursor_write * ignore_pw , bool last)"		9567749	0					
ANR	9567751	CompoundStatement		1123:0:32660:32695	9567749	0					
ANR	9567752	ReturnStatement	return ( last ? EOFC : ERRC ) ;	1124:4:32666:32693	9567749	0	True				
ANR	9567753	ConditionalExpression	last ? EOFC : ERRC		9567749	0					
ANR	9567754	Condition	last		9567749	0					
ANR	9567755	Identifier	last		9567749	0					
ANR	9567756	Identifier	EOFC		9567749	1					
ANR	9567757	Identifier	ERRC		9567749	2					
ANR	9567758	ReturnType	static int		9567749	1					
ANR	9567759	Identifier	s_string_write_process		9567749	2					
ANR	9567760	ParameterList	"stream_state * st , stream_cursor_read * pr , stream_cursor_write * ignore_pw , bool last"		9567749	3					
ANR	9567761	Parameter	stream_state * st	1121:23:32549:32565	9567749	0	True				
ANR	9567762	ParameterType	stream_state *		9567749	0					
ANR	9567763	Identifier	st		9567749	1					
ANR	9567764	Parameter	stream_cursor_read * pr	1121:42:32568:32590	9567749	1	True				
ANR	9567765	ParameterType	stream_cursor_read *		9567749	0					
ANR	9567766	Identifier	pr		9567749	1					
ANR	9567767	Parameter	stream_cursor_write * ignore_pw	1122:23:32616:32646	9567749	2	True				
ANR	9567768	ParameterType	stream_cursor_write *		9567749	0					
ANR	9567769	Identifier	ignore_pw		9567749	1					
ANR	9567770	Parameter	bool last	1122:56:32649:32657	9567749	3	True				
ANR	9567771	ParameterType	bool		9567749	0					
ANR	9567772	Identifier	last		9567749	1					
ANR	9567773	CFGEntryNode	ENTRY		9567749		True				
ANR	9567774	CFGExitNode	EXIT		9567749		True				
ANR	9567775	Symbol	st		9567749						
ANR	9567776	Symbol	pr		9567749						
ANR	9567777	Symbol	ignore_pw		9567749						
ANR	9567778	Symbol	last		9567749						
ANR	9567779	Symbol	EOFC		9567749						
ANR	9567780	Symbol	ERRC		9567749						
ANR	9567781	DeclStmt									
ANR	9567782	Decl							int	"int ( stream_state * , stream_cursor_read * , stream_cursor_write * , bool )"	s_write_position_process
ANR	9567783	Function	swrite_position_only	1134:0:32949:33151							
ANR	9567784	FunctionDef	swrite_position_only (stream * s)		9567783	0					
ANR	9567785	CompoundStatement		1136:0:32986:33151	9567783	0					
ANR	9567786	Statement	static	1137:4:32992:32997	9567783	0	True				
ANR	9567787	IdentifierDeclStatement	byte discard_buf [ 50 ] ;	1137:11:32999:33019	9567783	1	True				
ANR	9567788	IdentifierDecl	discard_buf [ 50 ]		9567783	0					
ANR	9567789	IdentifierDeclType	byte [ 50 ]		9567783	0					
ANR	9567790	Identifier	discard_buf		9567783	1					
ANR	9567791	PrimaryExpression	50		9567783	2					
ANR	9567792	ExpressionStatement	"swrite_string ( s , discard_buf , sizeof ( discard_buf ) )"	1139:4:33050:33100	9567783	2	True				
ANR	9567793	CallExpression	"swrite_string ( s , discard_buf , sizeof ( discard_buf ) )"		9567783	0					
ANR	9567794	Callee	swrite_string		9567783	0					
ANR	9567795	Identifier	swrite_string		9567783	0					
ANR	9567796	ArgumentList	s		9567783	1					
ANR	9567797	Argument	s		9567783	0					
ANR	9567798	Identifier	s		9567783	0					
ANR	9567799	Argument	discard_buf		9567783	1					
ANR	9567800	Identifier	discard_buf		9567783	0					
ANR	9567801	Argument	sizeof ( discard_buf )		9567783	2					
ANR	9567802	SizeofExpression	sizeof ( discard_buf )		9567783	0					
ANR	9567803	Sizeof	sizeof		9567783	0					
ANR	9567804	SizeofOperand	discard_buf		9567783	1					
ANR	9567805	ExpressionStatement	s -> procs . process = s_write_position_process	1140:4:33106:33149	9567783	3	True				
ANR	9567806	AssignmentExpression	s -> procs . process = s_write_position_process		9567783	0		=			
ANR	9567807	MemberAccess	s -> procs . process		9567783	0					
ANR	9567808	PtrMemberAccess	s -> procs		9567783	0					
ANR	9567809	Identifier	s		9567783	0					
ANR	9567810	Identifier	procs		9567783	1					
ANR	9567811	Identifier	process		9567783	1					
ANR	9567812	Identifier	s_write_position_process		9567783	1					
ANR	9567813	ReturnType	void		9567783	1					
ANR	9567814	Identifier	swrite_position_only		9567783	2					
ANR	9567815	ParameterList	stream * s		9567783	3					
ANR	9567816	Parameter	stream * s	1135:21:32975:32983	9567783	0	True				
ANR	9567817	ParameterType	stream *		9567783	0					
ANR	9567818	Identifier	s		9567783	1					
ANR	9567819	CFGEntryNode	ENTRY		9567783		True				
ANR	9567820	CFGExitNode	EXIT		9567783		True				
ANR	9567821	Symbol	s		9567783						
ANR	9567822	Symbol	s -> procs		9567783						
ANR	9567823	Symbol	discard_buf		9567783						
ANR	9567824	Symbol	s -> procs . process		9567783						
ANR	9567825	Symbol	* s		9567783						
ANR	9567826	Symbol	s_write_position_process		9567783						
ANR	9567827	Function	s_write_position_process	1143:0:33154:33363							
ANR	9567828	FunctionDef	"s_write_position_process (stream_state * st , stream_cursor_read * pr , stream_cursor_write * ignore_pw , bool last)"		9567827	0					
ANR	9567829	CompoundStatement		1146:0:33303:33363	9567827	0					
ANR	9567830	ExpressionStatement	pr -> ptr = pr -> limit	1147:4:33309:33328	9567827	0	True				
ANR	9567831	AssignmentExpression	pr -> ptr = pr -> limit		9567827	0		=			
ANR	9567832	PtrMemberAccess	pr -> ptr		9567827	0					
ANR	9567833	Identifier	pr		9567827	0					
ANR	9567834	Identifier	ptr		9567827	1					
ANR	9567835	PtrMemberAccess	pr -> limit		9567827	1					
ANR	9567836	Identifier	pr		9567827	0					
ANR	9567837	Identifier	limit		9567827	1					
ANR	9567838	ReturnStatement	return 0 ;	1148:4:33353:33361	9567827	1	True				
ANR	9567839	PrimaryExpression	0		9567827	0					
ANR	9567840	ReturnType	static int		9567827	1					
ANR	9567841	Identifier	s_write_position_process		9567827	2					
ANR	9567842	ParameterList	"stream_state * st , stream_cursor_read * pr , stream_cursor_write * ignore_pw , bool last"		9567827	3					
ANR	9567843	Parameter	stream_state * st	1144:25:33190:33206	9567827	0	True				
ANR	9567844	ParameterType	stream_state *		9567827	0					
ANR	9567845	Identifier	st		9567827	1					
ANR	9567846	Parameter	stream_cursor_read * pr	1144:44:33209:33231	9567827	1	True				
ANR	9567847	ParameterType	stream_cursor_read *		9567827	0					
ANR	9567848	Identifier	pr		9567827	1					
ANR	9567849	Parameter	stream_cursor_write * ignore_pw	1145:25:33259:33289	9567827	2	True				
ANR	9567850	ParameterType	stream_cursor_write *		9567827	0					
ANR	9567851	Identifier	ignore_pw		9567827	1					
ANR	9567852	Parameter	bool last	1145:58:33292:33300	9567827	3	True				
ANR	9567853	ParameterType	bool		9567827	0					
ANR	9567854	Identifier	last		9567827	1					
ANR	9567855	CFGEntryNode	ENTRY		9567827		True				
ANR	9567856	CFGExitNode	EXIT		9567827		True				
ANR	9567857	Symbol	st		9567827						
ANR	9567858	Symbol	pr		9567827						
ANR	9567859	Symbol	ignore_pw		9567827						
ANR	9567860	Symbol	last		9567827						
ANR	9567861	Symbol	* pr		9567827						
ANR	9567862	Symbol	pr -> limit		9567827						
ANR	9567863	Symbol	pr -> ptr		9567827						
ANR	9567864	Function	s_init_filter	1158:0:33614:34143							
ANR	9567865	FunctionDef	"s_init_filter (stream * fs , stream_state * fss , byte * buf , uint bsize , stream * target)"		9567864	0					
ANR	9567866	CompoundStatement		1161:0:33716:34143	9567864	0					
ANR	9567867	IdentifierDeclStatement	const stream_template * templat = fss -> templat ;	1162:4:33722:33767	9567864	0	True				
ANR	9567868	IdentifierDecl	* templat = fss -> templat		9567864	0					
ANR	9567869	IdentifierDeclType	const stream_template *		9567864	0					
ANR	9567870	Identifier	templat		9567864	1					
ANR	9567871	AssignmentExpression	* templat = fss -> templat		9567864	2		=			
ANR	9567872	Identifier	templat		9567864	0					
ANR	9567873	PtrMemberAccess	fss -> templat		9567864	1					
ANR	9567874	Identifier	fss		9567864	0					
ANR	9567875	Identifier	templat		9567864	1					
ANR	9567876	IfStatement	if ( bsize < templat -> min_in_size )		9567864	1					
ANR	9567877	Condition	bsize < templat -> min_in_size	1164:8:33778:33805	9567864	0	True				
ANR	9567878	RelationalExpression	bsize < templat -> min_in_size		9567864	0		<			
ANR	9567879	Identifier	bsize		9567864	0					
ANR	9567880	PtrMemberAccess	templat -> min_in_size		9567864	1					
ANR	9567881	Identifier	templat		9567864	0					
ANR	9567882	Identifier	min_in_size		9567864	1					
ANR	9567883	ReturnStatement	return ERRC ;	1165:8:33816:33827	9567864	1	True				
ANR	9567884	Identifier	ERRC		9567864	0					
ANR	9567885	ExpressionStatement	"s_std_init ( fs , buf , bsize , & s_filter_write_procs , s_mode_write )"	1166:4:33833:33896	9567864	2	True				
ANR	9567886	CallExpression	"s_std_init ( fs , buf , bsize , & s_filter_write_procs , s_mode_write )"		9567864	0					
ANR	9567887	Callee	s_std_init		9567864	0					
ANR	9567888	Identifier	s_std_init		9567864	0					
ANR	9567889	ArgumentList	fs		9567864	1					
ANR	9567890	Argument	fs		9567864	0					
ANR	9567891	Identifier	fs		9567864	0					
ANR	9567892	Argument	buf		9567864	1					
ANR	9567893	Identifier	buf		9567864	0					
ANR	9567894	Argument	bsize		9567864	2					
ANR	9567895	Identifier	bsize		9567864	0					
ANR	9567896	Argument	& s_filter_write_procs		9567864	3					
ANR	9567897	UnaryOperationExpression	& s_filter_write_procs		9567864	0					
ANR	9567898	UnaryOperator	&		9567864	0					
ANR	9567899	Identifier	s_filter_write_procs		9567864	1					
ANR	9567900	Argument	s_mode_write		9567864	4					
ANR	9567901	Identifier	s_mode_write		9567864	0					
ANR	9567902	ExpressionStatement	fs -> procs . process = templat -> process	1167:4:33902:33938	9567864	3	True				
ANR	9567903	AssignmentExpression	fs -> procs . process = templat -> process		9567864	0		=			
ANR	9567904	MemberAccess	fs -> procs . process		9567864	0					
ANR	9567905	PtrMemberAccess	fs -> procs		9567864	0					
ANR	9567906	Identifier	fs		9567864	0					
ANR	9567907	Identifier	procs		9567864	1					
ANR	9567908	Identifier	process		9567864	1					
ANR	9567909	PtrMemberAccess	templat -> process		9567864	1					
ANR	9567910	Identifier	templat		9567864	0					
ANR	9567911	Identifier	process		9567864	1					
ANR	9567912	ExpressionStatement	fs -> state = fss	1168:4:33944:33959	9567864	4	True				
ANR	9567913	AssignmentExpression	fs -> state = fss		9567864	0		=			
ANR	9567914	PtrMemberAccess	fs -> state		9567864	0					
ANR	9567915	Identifier	fs		9567864	0					
ANR	9567916	Identifier	state		9567864	1					
ANR	9567917	Identifier	fss		9567864	1					
ANR	9567918	IfStatement	if ( templat -> init )		9567864	5					
ANR	9567919	Condition	templat -> init	1169:8:33969:33981	9567864	0	True				
ANR	9567920	PtrMemberAccess	templat -> init		9567864	0					
ANR	9567921	Identifier	templat		9567864	0					
ANR	9567922	Identifier	init		9567864	1					
ANR	9567923	CompoundStatement		9:23:267:267	9567864	1					
ANR	9567924	ExpressionStatement	fs -> end_status = ( templat -> init ) ( fss )	1170:8:33994:34031	9567864	0	True				
ANR	9567925	AssignmentExpression	fs -> end_status = ( templat -> init ) ( fss )		9567864	0		=			
ANR	9567926	PtrMemberAccess	fs -> end_status		9567864	0					
ANR	9567927	Identifier	fs		9567864	0					
ANR	9567928	Identifier	end_status		9567864	1					
ANR	9567929	CallExpression	( templat -> init ) ( fss )		9567864	1					
ANR	9567930	Callee	templat -> init		9567864	0					
ANR	9567931	PtrMemberAccess	templat -> init		9567864	0					
ANR	9567932	Identifier	templat		9567864	0					
ANR	9567933	Identifier	init		9567864	1					
ANR	9567934	ArgumentList	fss		9567864	1					
ANR	9567935	Argument	fss		9567864	0					
ANR	9567936	Identifier	fss		9567864	0					
ANR	9567937	IfStatement	if ( fs -> end_status < 0 )		9567864	1					
ANR	9567938	Condition	fs -> end_status < 0	1171:12:34045:34062	9567864	0	True				
ANR	9567939	RelationalExpression	fs -> end_status < 0		9567864	0		<			
ANR	9567940	PtrMemberAccess	fs -> end_status		9567864	0					
ANR	9567941	Identifier	fs		9567864	0					
ANR	9567942	Identifier	end_status		9567864	1					
ANR	9567943	PrimaryExpression	0		9567864	1					
ANR	9567944	ReturnStatement	return fs -> end_status ;	1172:12:34077:34098	9567864	1	True				
ANR	9567945	PtrMemberAccess	fs -> end_status		9567864	0					
ANR	9567946	Identifier	fs		9567864	0					
ANR	9567947	Identifier	end_status		9567864	1					
ANR	9567948	ExpressionStatement	fs -> strm = target	1174:4:34110:34127	9567864	6	True				
ANR	9567949	AssignmentExpression	fs -> strm = target		9567864	0		=			
ANR	9567950	PtrMemberAccess	fs -> strm		9567864	0					
ANR	9567951	Identifier	fs		9567864	0					
ANR	9567952	Identifier	strm		9567864	1					
ANR	9567953	Identifier	target		9567864	1					
ANR	9567954	ReturnStatement	return 0 ;	1175:4:34133:34141	9567864	7	True				
ANR	9567955	PrimaryExpression	0		9567864	0					
ANR	9567956	ReturnType	int		9567864	1					
ANR	9567957	Identifier	s_init_filter		9567864	2					
ANR	9567958	ParameterList	"stream * fs , stream_state * fss , byte * buf , uint bsize , stream * target"		9567864	3					
ANR	9567959	Parameter	stream * fs	1159:14:33632:33641	9567864	0	True				
ANR	9567960	ParameterType	stream *		9567864	0					
ANR	9567961	Identifier	fs		9567864	1					
ANR	9567962	Parameter	stream_state * fss	1159:26:33644:33660	9567864	1	True				
ANR	9567963	ParameterType	stream_state *		9567864	0					
ANR	9567964	Identifier	fss		9567864	1					
ANR	9567965	Parameter	byte * buf	1159:45:33663:33671	9567864	2	True				
ANR	9567966	ParameterType	byte *		9567864	0					
ANR	9567967	Identifier	buf		9567864	1					
ANR	9567968	Parameter	uint bsize	1159:56:33674:33683	9567864	3	True				
ANR	9567969	ParameterType	uint		9567864	0					
ANR	9567970	Identifier	bsize		9567864	1					
ANR	9567971	Parameter	stream * target	1160:14:33700:33713	9567864	4	True				
ANR	9567972	ParameterType	stream *		9567864	0					
ANR	9567973	Identifier	target		9567864	1					
ANR	9567974	CFGEntryNode	ENTRY		9567864		True				
ANR	9567975	CFGExitNode	EXIT		9567864		True				
ANR	9567976	Symbol	& s_filter_write_procs		9567864						
ANR	9567977	Symbol	templat -> process		9567864						
ANR	9567978	Symbol	fss		9567864						
ANR	9567979	Symbol	s_mode_write		9567864						
ANR	9567980	Symbol	templat		9567864						
ANR	9567981	Symbol	fs		9567864						
ANR	9567982	Symbol	target		9567864						
ANR	9567983	Symbol	* fss		9567864						
ANR	9567984	Symbol	* fs		9567864						
ANR	9567985	Symbol	buf		9567864						
ANR	9567986	Symbol	fs -> state		9567864						
ANR	9567987	Symbol	fs -> end_status		9567864						
ANR	9567988	Symbol	* templat		9567864						
ANR	9567989	Symbol	templat -> init		9567864						
ANR	9567990	Symbol	fss -> templat		9567864						
ANR	9567991	Symbol	bsize		9567864						
ANR	9567992	Symbol	fs -> procs		9567864						
ANR	9567993	Symbol	fs -> strm		9567864						
ANR	9567994	Symbol	fs -> procs . process		9567864						
ANR	9567995	Symbol	templat -> min_in_size		9567864						
ANR	9567996	Symbol	ERRC		9567864						
ANR	9567997	Function	s_add_filter	1177:0:34145:35272							
ANR	9567998	FunctionDef	"s_add_filter (stream * * ps , const stream_template * templat , stream_state * ss , gs_memory_t * mem)"		9567997	0					
ANR	9567999	CompoundStatement		1180:0:34261:35272	9567997	0					
ANR	9568000	IdentifierDeclStatement	stream * es ;	1181:4:34267:34277	9567997	0	True				
ANR	9568001	IdentifierDecl	* es		9567997	0					
ANR	9568002	IdentifierDeclType	stream *		9567997	0					
ANR	9568003	Identifier	es		9567997	1					
ANR	9568004	IdentifierDeclStatement	stream_state * ess ;	1182:4:34283:34300	9567997	1	True				
ANR	9568005	IdentifierDecl	* ess		9567997	0					
ANR	9568006	IdentifierDeclType	stream_state *		9567997	0					
ANR	9568007	Identifier	ess		9567997	1					
ANR	9568008	IdentifierDeclStatement	"uint bsize = max ( templat -> min_in_size , 256 ) ;"	1183:4:34306:34349	9567997	2	True				
ANR	9568009	IdentifierDecl	"bsize = max ( templat -> min_in_size , 256 )"		9567997	0					
ANR	9568010	IdentifierDeclType	uint		9567997	0					
ANR	9568011	Identifier	bsize		9567997	1					
ANR	9568012	AssignmentExpression	"bsize = max ( templat -> min_in_size , 256 )"		9567997	2		=			
ANR	9568013	Identifier	bsize		9567997	0					
ANR	9568014	CallExpression	"max ( templat -> min_in_size , 256 )"		9567997	1					
ANR	9568015	Callee	max		9567997	0					
ANR	9568016	Identifier	max		9567997	0					
ANR	9568017	ArgumentList	templat -> min_in_size		9567997	1					
ANR	9568018	Argument	templat -> min_in_size		9567997	0					
ANR	9568019	PtrMemberAccess	templat -> min_in_size		9567997	0					
ANR	9568020	Identifier	templat		9567997	0					
ANR	9568021	Identifier	min_in_size		9567997	1					
ANR	9568022	Argument	256		9567997	1					
ANR	9568023	PrimaryExpression	256		9567997	0					
ANR	9568024	IdentifierDeclStatement	byte * buf ;	1184:4:34371:34380	9567997	3	True				
ANR	9568025	IdentifierDecl	* buf		9567997	0					
ANR	9568026	IdentifierDeclType	byte *		9567997	0					
ANR	9568027	Identifier	buf		9567997	1					
ANR	9568028	IfStatement	if ( bsize > ( * ps ) -> bsize && templat -> process != s_NullE_template . process )		9567997	4					
ANR	9568029	Condition	bsize > ( * ps ) -> bsize && templat -> process != s_NullE_template . process	1190:8:34492:34559	9567997	0	True				
ANR	9568030	AndExpression	bsize > ( * ps ) -> bsize && templat -> process != s_NullE_template . process		9567997	0		&&			
ANR	9568031	RelationalExpression	bsize > ( * ps ) -> bsize		9567997	0		>			
ANR	9568032	Identifier	bsize		9567997	0					
ANR	9568033	PtrMemberAccess	( * ps ) -> bsize		9567997	1					
ANR	9568034	UnaryOperationExpression	* ps		9567997	0					
ANR	9568035	UnaryOperator	*		9567997	0					
ANR	9568036	Identifier	ps		9567997	1					
ANR	9568037	Identifier	bsize		9567997	1					
ANR	9568038	EqualityExpression	templat -> process != s_NullE_template . process		9567997	1		!=			
ANR	9568039	PtrMemberAccess	templat -> process		9567997	0					
ANR	9568040	Identifier	templat		9567997	0					
ANR	9568041	Identifier	process		9567997	1					
ANR	9568042	MemberAccess	s_NullE_template . process		9567997	1					
ANR	9568043	Identifier	s_NullE_template		9567997	0					
ANR	9568044	Identifier	process		9567997	1					
ANR	9568045	CompoundStatement		12:8:310:339	9567997	1					
ANR	9568046	IdentifierDeclStatement	stream_template null_template ;	1191:8:34572:34601	9567997	0	True				
ANR	9568047	IdentifierDecl	null_template		9567997	0					
ANR	9568048	IdentifierDeclType	stream_template		9567997	0					
ANR	9568049	Identifier	null_template		9567997	1					
ANR	9568050	ExpressionStatement	null_template = s_NullE_template	1193:8:34612:34644	9567997	1	True				
ANR	9568051	AssignmentExpression	null_template = s_NullE_template		9567997	0		=			
ANR	9568052	Identifier	null_template		9567997	0					
ANR	9568053	Identifier	s_NullE_template		9567997	1					
ANR	9568054	ExpressionStatement	null_template . min_in_size = bsize	1194:8:34654:34687	9567997	2	True				
ANR	9568055	AssignmentExpression	null_template . min_in_size = bsize		9567997	0		=			
ANR	9568056	MemberAccess	null_template . min_in_size		9567997	0					
ANR	9568057	Identifier	null_template		9567997	0					
ANR	9568058	Identifier	min_in_size		9567997	1					
ANR	9568059	Identifier	bsize		9567997	1					
ANR	9568060	IfStatement	"if ( s_add_filter ( ps , & null_template , NULL , mem ) == 0 )"		9567997	3					
ANR	9568061	Condition	"s_add_filter ( ps , & null_template , NULL , mem ) == 0"	1195:12:34701:34748	9567997	0	True				
ANR	9568062	EqualityExpression	"s_add_filter ( ps , & null_template , NULL , mem ) == 0"		9567997	0		==			
ANR	9568063	CallExpression	"s_add_filter ( ps , & null_template , NULL , mem )"		9567997	0					
ANR	9568064	Callee	s_add_filter		9567997	0					
ANR	9568065	Identifier	s_add_filter		9567997	0					
ANR	9568066	ArgumentList	ps		9567997	1					
ANR	9568067	Argument	ps		9567997	0					
ANR	9568068	Identifier	ps		9567997	0					
ANR	9568069	Argument	& null_template		9567997	1					
ANR	9568070	UnaryOperationExpression	& null_template		9567997	0					
ANR	9568071	UnaryOperator	&		9567997	0					
ANR	9568072	Identifier	null_template		9567997	1					
ANR	9568073	Argument	NULL		9567997	2					
ANR	9568074	Identifier	NULL		9567997	0					
ANR	9568075	Argument	mem		9567997	3					
ANR	9568076	Identifier	mem		9567997	0					
ANR	9568077	PrimaryExpression	0		9567997	1					
ANR	9568078	ReturnStatement	return 0 ;	1196:12:34763:34771	9567997	1	True				
ANR	9568079	PrimaryExpression	0		9567997	0					
ANR	9568080	ExpressionStatement	"es = s_alloc ( mem , ""s_add_filter(stream)"" )"	1198:4:34783:34824	9567997	5	True				
ANR	9568081	AssignmentExpression	"es = s_alloc ( mem , ""s_add_filter(stream)"" )"		9567997	0		=			
ANR	9568082	Identifier	es		9567997	0					
ANR	9568083	CallExpression	"s_alloc ( mem , ""s_add_filter(stream)"" )"		9567997	1					
ANR	9568084	Callee	s_alloc		9567997	0					
ANR	9568085	Identifier	s_alloc		9567997	0					
ANR	9568086	ArgumentList	mem		9567997	1					
ANR	9568087	Argument	mem		9567997	0					
ANR	9568088	Identifier	mem		9567997	0					
ANR	9568089	Argument	"""s_add_filter(stream)"""		9567997	1					
ANR	9568090	PrimaryExpression	"""s_add_filter(stream)"""		9567997	0					
ANR	9568091	ExpressionStatement	"buf = gs_alloc_bytes ( mem , bsize , ""s_add_filter(buf)"" )"	1199:4:34830:34883	9567997	6	True				
ANR	9568092	AssignmentExpression	"buf = gs_alloc_bytes ( mem , bsize , ""s_add_filter(buf)"" )"		9567997	0		=			
ANR	9568093	Identifier	buf		9567997	0					
ANR	9568094	CallExpression	"gs_alloc_bytes ( mem , bsize , ""s_add_filter(buf)"" )"		9567997	1					
ANR	9568095	Callee	gs_alloc_bytes		9567997	0					
ANR	9568096	Identifier	gs_alloc_bytes		9567997	0					
ANR	9568097	ArgumentList	mem		9567997	1					
ANR	9568098	Argument	mem		9567997	0					
ANR	9568099	Identifier	mem		9567997	0					
ANR	9568100	Argument	bsize		9567997	1					
ANR	9568101	Identifier	bsize		9567997	0					
ANR	9568102	Argument	"""s_add_filter(buf)"""		9567997	2					
ANR	9568103	PrimaryExpression	"""s_add_filter(buf)"""		9567997	0					
ANR	9568104	IfStatement	if ( es == 0 || buf == 0 )		9567997	7					
ANR	9568105	Condition	es == 0 || buf == 0	1200:8:34893:34911	9567997	0	True				
ANR	9568106	OrExpression	es == 0 || buf == 0		9567997	0		||			
ANR	9568107	EqualityExpression	es == 0		9567997	0		==			
ANR	9568108	Identifier	es		9567997	0					
ANR	9568109	PrimaryExpression	0		9567997	1					
ANR	9568110	EqualityExpression	buf == 0		9567997	1		==			
ANR	9568111	Identifier	buf		9567997	0					
ANR	9568112	PrimaryExpression	0		9567997	1					
ANR	9568113	CompoundStatement		21:29:652:652	9567997	1					
ANR	9568114	ExpressionStatement	"gs_free_object ( mem , buf , ""s_add_filter(buf)"" )"	1201:8:34924:34969	9567997	0	True				
ANR	9568115	CallExpression	"gs_free_object ( mem , buf , ""s_add_filter(buf)"" )"		9567997	0					
ANR	9568116	Callee	gs_free_object		9567997	0					
ANR	9568117	Identifier	gs_free_object		9567997	0					
ANR	9568118	ArgumentList	mem		9567997	1					
ANR	9568119	Argument	mem		9567997	0					
ANR	9568120	Identifier	mem		9567997	0					
ANR	9568121	Argument	buf		9567997	1					
ANR	9568122	Identifier	buf		9567997	0					
ANR	9568123	Argument	"""s_add_filter(buf)"""		9567997	2					
ANR	9568124	PrimaryExpression	"""s_add_filter(buf)"""		9567997	0					
ANR	9568125	ExpressionStatement	"gs_free_object ( mem , es , ""s_add_filter(stream)"" )"	1202:8:34979:35026	9567997	1	True				
ANR	9568126	CallExpression	"gs_free_object ( mem , es , ""s_add_filter(stream)"" )"		9567997	0					
ANR	9568127	Callee	gs_free_object		9567997	0					
ANR	9568128	Identifier	gs_free_object		9567997	0					
ANR	9568129	ArgumentList	mem		9567997	1					
ANR	9568130	Argument	mem		9567997	0					
ANR	9568131	Identifier	mem		9567997	0					
ANR	9568132	Argument	es		9567997	1					
ANR	9568133	Identifier	es		9567997	0					
ANR	9568134	Argument	"""s_add_filter(stream)"""		9567997	2					
ANR	9568135	PrimaryExpression	"""s_add_filter(stream)"""		9567997	0					
ANR	9568136	ReturnStatement	return 0 ;	1203:8:35036:35044	9567997	2	True				
ANR	9568137	PrimaryExpression	0		9567997	0					
ANR	9568138	ExpressionStatement	ess = ( ss == 0 ? ( stream_state * ) es : ss )	1205:4:35056:35097	9567997	8	True				
ANR	9568139	AssignmentExpression	ess = ( ss == 0 ? ( stream_state * ) es : ss )		9567997	0		=			
ANR	9568140	Identifier	ess		9567997	0					
ANR	9568141	ConditionalExpression	ss == 0 ? ( stream_state * ) es : ss		9567997	1					
ANR	9568142	Condition	ss == 0		9567997	0					
ANR	9568143	EqualityExpression	ss == 0		9567997	0		==			
ANR	9568144	Identifier	ss		9567997	0					
ANR	9568145	PrimaryExpression	0		9567997	1					
ANR	9568146	CastExpression	( stream_state * ) es		9567997	1					
ANR	9568147	CastTarget	stream_state *		9567997	0					
ANR	9568148	Identifier	es		9567997	1					
ANR	9568149	Identifier	ss		9567997	2					
ANR	9568150	ExpressionStatement	ess -> templat = templat	1206:4:35103:35125	9567997	9	True				
ANR	9568151	AssignmentExpression	ess -> templat = templat		9567997	0		=			
ANR	9568152	PtrMemberAccess	ess -> templat		9567997	0					
ANR	9568153	Identifier	ess		9567997	0					
ANR	9568154	Identifier	templat		9567997	1					
ANR	9568155	Identifier	templat		9567997	1					
ANR	9568156	ExpressionStatement	ess -> memory = mem	1207:4:35131:35148	9567997	10	True				
ANR	9568157	AssignmentExpression	ess -> memory = mem		9567997	0		=			
ANR	9568158	PtrMemberAccess	ess -> memory		9567997	0					
ANR	9568159	Identifier	ess		9567997	0					
ANR	9568160	Identifier	memory		9567997	1					
ANR	9568161	Identifier	mem		9567997	1					
ANR	9568162	ExpressionStatement	es -> memory = mem	1208:4:35154:35170	9567997	11	True				
ANR	9568163	AssignmentExpression	es -> memory = mem		9567997	0		=			
ANR	9568164	PtrMemberAccess	es -> memory		9567997	0					
ANR	9568165	Identifier	es		9567997	0					
ANR	9568166	Identifier	memory		9567997	1					
ANR	9568167	Identifier	mem		9567997	1					
ANR	9568168	IfStatement	"if ( s_init_filter ( es , ess , buf , bsize , * ps ) < 0 )"		9567997	12					
ANR	9568169	Condition	"s_init_filter ( es , ess , buf , bsize , * ps ) < 0"	1209:8:35180:35222	9567997	0	True				
ANR	9568170	RelationalExpression	"s_init_filter ( es , ess , buf , bsize , * ps ) < 0"		9567997	0		<			
ANR	9568171	CallExpression	"s_init_filter ( es , ess , buf , bsize , * ps )"		9567997	0					
ANR	9568172	Callee	s_init_filter		9567997	0					
ANR	9568173	Identifier	s_init_filter		9567997	0					
ANR	9568174	ArgumentList	es		9567997	1					
ANR	9568175	Argument	es		9567997	0					
ANR	9568176	Identifier	es		9567997	0					
ANR	9568177	Argument	ess		9567997	1					
ANR	9568178	Identifier	ess		9567997	0					
ANR	9568179	Argument	buf		9567997	2					
ANR	9568180	Identifier	buf		9567997	0					
ANR	9568181	Argument	bsize		9567997	3					
ANR	9568182	Identifier	bsize		9567997	0					
ANR	9568183	Argument	* ps		9567997	4					
ANR	9568184	UnaryOperationExpression	* ps		9567997	0					
ANR	9568185	UnaryOperator	*		9567997	0					
ANR	9568186	Identifier	ps		9567997	1					
ANR	9568187	PrimaryExpression	0		9567997	1					
ANR	9568188	ReturnStatement	return 0 ;	1210:8:35233:35241	9567997	1	True				
ANR	9568189	PrimaryExpression	0		9567997	0					
ANR	9568190	ExpressionStatement	* ps = es	1211:4:35247:35255	9567997	13	True				
ANR	9568191	AssignmentExpression	* ps = es		9567997	0		=			
ANR	9568192	UnaryOperationExpression	* ps		9567997	0					
ANR	9568193	UnaryOperator	*		9567997	0					
ANR	9568194	Identifier	ps		9567997	1					
ANR	9568195	Identifier	es		9567997	1					
ANR	9568196	ReturnStatement	return es ;	1212:4:35261:35270	9567997	14	True				
ANR	9568197	Identifier	es		9567997	0					
ANR	9568198	ReturnType	stream *		9567997	1					
ANR	9568199	Identifier	s_add_filter		9567997	2					
ANR	9568200	ParameterList	"stream * * ps , const stream_template * templat , stream_state * ss , gs_memory_t * mem"		9567997	3					
ANR	9568201	Parameter	stream * * ps	1178:13:34167:34177	9567997	0	True				
ANR	9568202	ParameterType	stream * *		9567997	0					
ANR	9568203	Identifier	ps		9567997	1					
ANR	9568204	Parameter	const stream_template * templat	1178:26:34180:34209	9567997	1	True				
ANR	9568205	ParameterType	const stream_template *		9567997	0					
ANR	9568206	Identifier	templat		9567997	1					
ANR	9568207	Parameter	stream_state * ss	1179:13:34225:34240	9567997	2	True				
ANR	9568208	ParameterType	stream_state *		9567997	0					
ANR	9568209	Identifier	ss		9567997	1					
ANR	9568210	Parameter	gs_memory_t * mem	1179:31:34243:34258	9567997	3	True				
ANR	9568211	ParameterType	gs_memory_t *		9567997	0					
ANR	9568212	Identifier	mem		9567997	1					
ANR	9568213	CFGEntryNode	ENTRY		9567997		True				
ANR	9568214	CFGExitNode	EXIT		9567997		True				
ANR	9568215	Symbol	ps		9567997						
ANR	9568216	Symbol	ess		9567997						
ANR	9568217	Symbol	es -> memory		9567997						
ANR	9568218	Symbol	templat -> process		9567997						
ANR	9568219	Symbol	( * ps ) -> bsize		9567997						
ANR	9568220	Symbol	s_add_filter		9567997						
ANR	9568221	Symbol	s_init_filter		9567997						
ANR	9568222	Symbol	* ess		9567997						
ANR	9568223	Symbol	mem		9567997						
ANR	9568224	Symbol	* templat		9567997						
ANR	9568225	Symbol	ess -> templat		9567997						
ANR	9568226	Symbol	s_NullE_template . process		9567997						
ANR	9568227	Symbol	null_template . min_in_size		9567997						
ANR	9568228	Symbol	ss		9567997						
ANR	9568229	Symbol	gs_alloc_bytes		9567997						
ANR	9568230	Symbol	NULL		9567997						
ANR	9568231	Symbol	max		9567997						
ANR	9568232	Symbol	s_NullE_template		9567997						
ANR	9568233	Symbol	null_template		9567997						
ANR	9568234	Symbol	& null_template		9567997						
ANR	9568235	Symbol	* ps		9567997						
ANR	9568236	Symbol	templat		9567997						
ANR	9568237	Symbol	* * ps		9567997						
ANR	9568238	Symbol	es		9567997						
ANR	9568239	Symbol	buf		9567997						
ANR	9568240	Symbol	ess -> memory		9567997						
ANR	9568241	Symbol	* es		9567997						
ANR	9568242	Symbol	bsize		9567997						
ANR	9568243	Symbol	s_alloc		9567997						
ANR	9568244	Symbol	templat -> min_in_size		9567997						
ANR	9568245	Function	s_close_filters	1219:0:35394:36060							
ANR	9568246	FunctionDef	"s_close_filters (stream * * ps , stream * target)"		9568245	0					
ANR	9568247	CompoundStatement		1221:0:35443:36060	9568245	0					
ANR	9568248	WhileStatement	while ( * ps != target )		9568245	0					
ANR	9568249	Condition	* ps != target	1222:11:35456:35468	9568245	0	True				
ANR	9568250	EqualityExpression	* ps != target		9568245	0		!=			
ANR	9568251	UnaryOperationExpression	* ps		9568245	0					
ANR	9568252	UnaryOperator	*		9568245	0					
ANR	9568253	Identifier	ps		9568245	1					
ANR	9568254	Identifier	target		9568245	1					
ANR	9568255	CompoundStatement		8:8:201:228	9568245	1					
ANR	9568256	IdentifierDeclStatement	stream * s = * ps ;	1223:8:35481:35496	9568245	0	True				
ANR	9568257	IdentifierDecl	* s = * ps		9568245	0					
ANR	9568258	IdentifierDeclType	stream *		9568245	0					
ANR	9568259	Identifier	s		9568245	1					
ANR	9568260	AssignmentExpression	* s = * ps		9568245	2		=			
ANR	9568261	Identifier	s		9568245	0					
ANR	9568262	UnaryOperationExpression	* ps		9568245	1					
ANR	9568263	UnaryOperator	*		9568245	0					
ANR	9568264	Identifier	ps		9568245	1					
ANR	9568265	IdentifierDeclStatement	gs_memory_t * mem = s -> state -> memory ;	1224:8:35506:35541	9568245	1	True				
ANR	9568266	IdentifierDecl	* mem = s -> state -> memory		9568245	0					
ANR	9568267	IdentifierDeclType	gs_memory_t *		9568245	0					
ANR	9568268	Identifier	mem		9568245	1					
ANR	9568269	AssignmentExpression	* mem = s -> state -> memory		9568245	2		=			
ANR	9568270	Identifier	mem		9568245	0					
ANR	9568271	PtrMemberAccess	s -> state -> memory		9568245	1					
ANR	9568272	PtrMemberAccess	s -> state		9568245	0					
ANR	9568273	Identifier	s		9568245	0					
ANR	9568274	Identifier	state		9568245	1					
ANR	9568275	Identifier	memory		9568245	1					
ANR	9568276	IdentifierDeclStatement	byte * sbuf = s -> cbuf ;	1225:8:35551:35571	9568245	2	True				
ANR	9568277	IdentifierDecl	* sbuf = s -> cbuf		9568245	0					
ANR	9568278	IdentifierDeclType	byte *		9568245	0					
ANR	9568279	Identifier	sbuf		9568245	1					
ANR	9568280	AssignmentExpression	* sbuf = s -> cbuf		9568245	2		=			
ANR	9568281	Identifier	sbuf		9568245	0					
ANR	9568282	PtrMemberAccess	s -> cbuf		9568245	1					
ANR	9568283	Identifier	s		9568245	0					
ANR	9568284	Identifier	cbuf		9568245	1					
ANR	9568285	IdentifierDeclStatement	stream * next = s -> strm ;	1226:8:35581:35603	9568245	3	True				
ANR	9568286	IdentifierDecl	* next = s -> strm		9568245	0					
ANR	9568287	IdentifierDeclType	stream *		9568245	0					
ANR	9568288	Identifier	next		9568245	1					
ANR	9568289	AssignmentExpression	* next = s -> strm		9568245	2		=			
ANR	9568290	Identifier	next		9568245	0					
ANR	9568291	PtrMemberAccess	s -> strm		9568245	1					
ANR	9568292	Identifier	s		9568245	0					
ANR	9568293	Identifier	strm		9568245	1					
ANR	9568294	IdentifierDeclStatement	int status = sclose ( s ) ;	1227:8:35613:35635	9568245	4	True				
ANR	9568295	IdentifierDecl	status = sclose ( s )		9568245	0					
ANR	9568296	IdentifierDeclType	int		9568245	0					
ANR	9568297	Identifier	status		9568245	1					
ANR	9568298	AssignmentExpression	status = sclose ( s )		9568245	2		=			
ANR	9568299	Identifier	status		9568245	0					
ANR	9568300	CallExpression	sclose ( s )		9568245	1					
ANR	9568301	Callee	sclose		9568245	0					
ANR	9568302	Identifier	sclose		9568245	0					
ANR	9568303	ArgumentList	s		9568245	1					
ANR	9568304	Argument	s		9568245	0					
ANR	9568305	Identifier	s		9568245	0					
ANR	9568306	IdentifierDeclStatement	stream_state * ss = s -> state ;	1228:8:35645:35672	9568245	5	True				
ANR	9568307	IdentifierDecl	* ss = s -> state		9568245	0					
ANR	9568308	IdentifierDeclType	stream_state *		9568245	0					
ANR	9568309	Identifier	ss		9568245	1					
ANR	9568310	AssignmentExpression	* ss = s -> state		9568245	2		=			
ANR	9568311	Identifier	ss		9568245	0					
ANR	9568312	PtrMemberAccess	s -> state		9568245	1					
ANR	9568313	Identifier	s		9568245	0					
ANR	9568314	Identifier	state		9568245	1					
ANR	9568315	IfStatement	if ( status < 0 )		9568245	6					
ANR	9568316	Condition	status < 0	1230:12:35718:35727	9568245	0	True				
ANR	9568317	RelationalExpression	status < 0		9568245	0		<			
ANR	9568318	Identifier	status		9568245	0					
ANR	9568319	PrimaryExpression	0		9568245	1					
ANR	9568320	ReturnStatement	return status ;	1231:12:35742:35755	9568245	1	True				
ANR	9568321	Identifier	status		9568245	0					
ANR	9568322	IfStatement	if ( mem )		9568245	7					
ANR	9568323	Condition	mem	1232:12:35769:35771	9568245	0	True				
ANR	9568324	Identifier	mem		9568245	0					
ANR	9568325	CompoundStatement		12:17:330:330	9568245	1					
ANR	9568326	ExpressionStatement	"gs_free_object ( mem , sbuf , ""s_close_filters(buf)"" )"	1233:12:35788:35837	9568245	0	True				
ANR	9568327	CallExpression	"gs_free_object ( mem , sbuf , ""s_close_filters(buf)"" )"		9568245	0					
ANR	9568328	Callee	gs_free_object		9568245	0					
ANR	9568329	Identifier	gs_free_object		9568245	0					
ANR	9568330	ArgumentList	mem		9568245	1					
ANR	9568331	Argument	mem		9568245	0					
ANR	9568332	Identifier	mem		9568245	0					
ANR	9568333	Argument	sbuf		9568245	1					
ANR	9568334	Identifier	sbuf		9568245	0					
ANR	9568335	Argument	"""s_close_filters(buf)"""		9568245	2					
ANR	9568336	PrimaryExpression	"""s_close_filters(buf)"""		9568245	0					
ANR	9568337	ExpressionStatement	"gs_free_object ( mem , s , ""s_close_filters(stream)"" )"	1234:12:35851:35900	9568245	1	True				
ANR	9568338	CallExpression	"gs_free_object ( mem , s , ""s_close_filters(stream)"" )"		9568245	0					
ANR	9568339	Callee	gs_free_object		9568245	0					
ANR	9568340	Identifier	gs_free_object		9568245	0					
ANR	9568341	ArgumentList	mem		9568245	1					
ANR	9568342	Argument	mem		9568245	0					
ANR	9568343	Identifier	mem		9568245	0					
ANR	9568344	Argument	s		9568245	1					
ANR	9568345	Identifier	s		9568245	0					
ANR	9568346	Argument	"""s_close_filters(stream)"""		9568245	2					
ANR	9568347	PrimaryExpression	"""s_close_filters(stream)"""		9568245	0					
ANR	9568348	IfStatement	if ( ss != ( stream_state * ) s )		9568245	2					
ANR	9568349	Condition	ss != ( stream_state * ) s	1235:16:35918:35940	9568245	0	True				
ANR	9568350	EqualityExpression	ss != ( stream_state * ) s		9568245	0		!=			
ANR	9568351	Identifier	ss		9568245	0					
ANR	9568352	CastExpression	( stream_state * ) s		9568245	1					
ANR	9568353	CastTarget	stream_state *		9568245	0					
ANR	9568354	Identifier	s		9568245	1					
ANR	9568355	ExpressionStatement	"gs_free_object ( mem , ss , ""s_close_filters(state)"" )"	1236:16:35959:36008	9568245	1	True				
ANR	9568356	CallExpression	"gs_free_object ( mem , ss , ""s_close_filters(state)"" )"		9568245	0					
ANR	9568357	Callee	gs_free_object		9568245	0					
ANR	9568358	Identifier	gs_free_object		9568245	0					
ANR	9568359	ArgumentList	mem		9568245	1					
ANR	9568360	Argument	mem		9568245	0					
ANR	9568361	Identifier	mem		9568245	0					
ANR	9568362	Argument	ss		9568245	1					
ANR	9568363	Identifier	ss		9568245	0					
ANR	9568364	Argument	"""s_close_filters(state)"""		9568245	2					
ANR	9568365	PrimaryExpression	"""s_close_filters(state)"""		9568245	0					
ANR	9568366	ExpressionStatement	* ps = next	1238:8:36028:36038	9568245	8	True				
ANR	9568367	AssignmentExpression	* ps = next		9568245	0		=			
ANR	9568368	UnaryOperationExpression	* ps		9568245	0					
ANR	9568369	UnaryOperator	*		9568245	0					
ANR	9568370	Identifier	ps		9568245	1					
ANR	9568371	Identifier	next		9568245	1					
ANR	9568372	ReturnStatement	return 0 ;	1240:4:36050:36058	9568245	1	True				
ANR	9568373	PrimaryExpression	0		9568245	0					
ANR	9568374	ReturnType	int		9568245	1					
ANR	9568375	Identifier	s_close_filters		9568245	2					
ANR	9568376	ParameterList	"stream * * ps , stream * target"		9568245	3					
ANR	9568377	Parameter	stream * * ps	1220:16:35414:35424	9568245	0	True				
ANR	9568378	ParameterType	stream * *		9568245	0					
ANR	9568379	Identifier	ps		9568245	1					
ANR	9568380	Parameter	stream * target	1220:29:35427:35440	9568245	1	True				
ANR	9568381	ParameterType	stream *		9568245	0					
ANR	9568382	Identifier	target		9568245	1					
ANR	9568383	CFGEntryNode	ENTRY		9568245		True				
ANR	9568384	CFGExitNode	EXIT		9568245		True				
ANR	9568385	Symbol	next		9568245						
ANR	9568386	Symbol	ss		9568245						
ANR	9568387	Symbol	* s -> state		9568245						
ANR	9568388	Symbol	ps		9568245						
ANR	9568389	Symbol	s -> state -> memory		9568245						
ANR	9568390	Symbol	sclose		9568245						
ANR	9568391	Symbol	s -> state		9568245						
ANR	9568392	Symbol	* ps		9568245						
ANR	9568393	Symbol	s -> cbuf		9568245						
ANR	9568394	Symbol	target		9568245						
ANR	9568395	Symbol	s		9568245						
ANR	9568396	Symbol	mem		9568245						
ANR	9568397	Symbol	sbuf		9568245						
ANR	9568398	Symbol	* * s		9568245						
ANR	9568399	Symbol	* s		9568245						
ANR	9568400	Symbol	s -> strm		9568245						
ANR	9568401	Symbol	status		9568245						
ANR	9568402	Function	file_close_finish	1251:0:36361:36411							
ANR	9568403	FunctionDef	file_close_finish (stream * s)		9568402	0					
ANR	9568404	CompoundStatement		1253:0:36395:36411	9568402	0					
ANR	9568405	ReturnStatement	return 0 ;	1254:4:36401:36409	9568402	0	True				
ANR	9568406	PrimaryExpression	0		9568402	0					
ANR	9568407	ReturnType	int		9568402	1					
ANR	9568408	Identifier	file_close_finish		9568402	2					
ANR	9568409	ParameterList	stream * s		9568402	3					
ANR	9568410	Parameter	stream * s	1252:18:36383:36392	9568402	0	True				
ANR	9568411	ParameterType	stream *		9568402	0					
ANR	9568412	Identifier	s		9568402	1					
ANR	9568413	CFGEntryNode	ENTRY		9568402		True				
ANR	9568414	CFGExitNode	EXIT		9568402		True				
ANR	9568415	Symbol	s		9568402						
ANR	9568416	Function	s_close_disable	1265:0:36855:37020							
ANR	9568417	FunctionDef	s_close_disable (stream * s)		9568416	0					
ANR	9568418	CompoundStatement		1267:0:36886:37020	9568416	0					
ANR	9568419	ExpressionStatement	s -> read_id = s -> write_id = ( s -> read_id | s -> write_id ) + 1	1269:4:36947:37004	9568416	0	True				
ANR	9568420	AssignmentExpression	s -> read_id = s -> write_id = ( s -> read_id | s -> write_id ) + 1		9568416	0		=			
ANR	9568421	PtrMemberAccess	s -> read_id		9568416	0					
ANR	9568422	Identifier	s		9568416	0					
ANR	9568423	Identifier	read_id		9568416	1					
ANR	9568424	AssignmentExpression	s -> write_id = ( s -> read_id | s -> write_id ) + 1		9568416	1		=			
ANR	9568425	PtrMemberAccess	s -> write_id		9568416	0					
ANR	9568426	Identifier	s		9568416	0					
ANR	9568427	Identifier	write_id		9568416	1					
ANR	9568428	AdditiveExpression	( s -> read_id | s -> write_id ) + 1		9568416	1		+			
ANR	9568429	InclusiveOrExpression	s -> read_id | s -> write_id		9568416	0		|			
ANR	9568430	PtrMemberAccess	s -> read_id		9568416	0					
ANR	9568431	Identifier	s		9568416	0					
ANR	9568432	Identifier	read_id		9568416	1					
ANR	9568433	PtrMemberAccess	s -> write_id		9568416	1					
ANR	9568434	Identifier	s		9568416	0					
ANR	9568435	Identifier	write_id		9568416	1					
ANR	9568436	PrimaryExpression	1		9568416	1					
ANR	9568437	ReturnStatement	return 0 ;	1270:4:37010:37018	9568416	1	True				
ANR	9568438	PrimaryExpression	0		9568416	0					
ANR	9568439	ReturnType	int		9568416	1					
ANR	9568440	Identifier	s_close_disable		9568416	2					
ANR	9568441	ParameterList	stream * s		9568416	3					
ANR	9568442	Parameter	stream * s	1266:16:36875:36883	9568416	0	True				
ANR	9568443	ParameterType	stream *		9568416	0					
ANR	9568444	Identifier	s		9568416	1					
ANR	9568445	CFGEntryNode	ENTRY		9568416		True				
ANR	9568446	CFGExitNode	EXIT		9568416		True				
ANR	9568447	Symbol	s -> write_id		9568416						
ANR	9568448	Symbol	s		9568416						
ANR	9568449	Symbol	s -> read_id		9568416						
ANR	9568450	Symbol	* s		9568416						
ANR	9568451	Function	file_close_disable	1272:0:37022:37225							
ANR	9568452	FunctionDef	file_close_disable (stream * s)		9568451	0					
ANR	9568453	CompoundStatement		1274:0:37057:37225	9568451	0					
ANR	9568454	IdentifierDeclStatement	int code ;	1275:4:37063:37071	9568451	0	True				
ANR	9568455	IdentifierDecl	code		9568451	0					
ANR	9568456	IdentifierDeclType	int		9568451	0					
ANR	9568457	Identifier	code		9568451	1					
ANR	9568458	IfStatement	if ( ( * s -> save_close != NULL ) && ( ( code = ( * s -> save_close ) ( s ) ) != 0 ) )		9568451	1					
ANR	9568459	Condition	( * s -> save_close != NULL ) && ( ( code = ( * s -> save_close ) ( s ) ) != 0 )	1277:8:37082:37144	9568451	0	True				
ANR	9568460	AndExpression	( * s -> save_close != NULL ) && ( ( code = ( * s -> save_close ) ( s ) ) != 0 )		9568451	0		&&			
ANR	9568461	EqualityExpression	* s -> save_close != NULL		9568451	0		!=			
ANR	9568462	UnaryOperationExpression	* s -> save_close		9568451	0					
ANR	9568463	UnaryOperator	*		9568451	0					
ANR	9568464	PtrMemberAccess	s -> save_close		9568451	1					
ANR	9568465	Identifier	s		9568451	0					
ANR	9568466	Identifier	save_close		9568451	1					
ANR	9568467	Identifier	NULL		9568451	1					
ANR	9568468	EqualityExpression	( code = ( * s -> save_close ) ( s ) ) != 0		9568451	1		!=			
ANR	9568469	AssignmentExpression	code = ( * s -> save_close ) ( s )		9568451	0		=			
ANR	9568470	Identifier	code		9568451	0					
ANR	9568471	CallExpression	( * s -> save_close ) ( s )		9568451	1					
ANR	9568472	Callee	* s -> save_close		9568451	0					
ANR	9568473	UnaryOperationExpression	* s -> save_close		9568451	0					
ANR	9568474	UnaryOperator	*		9568451	0					
ANR	9568475	PtrMemberAccess	s -> save_close		9568451	1					
ANR	9568476	Identifier	s		9568451	0					
ANR	9568477	Identifier	save_close		9568451	1					
ANR	9568478	ArgumentList	s		9568451	1					
ANR	9568479	Argument	s		9568451	0					
ANR	9568480	Identifier	s		9568451	0					
ANR	9568481	PrimaryExpression	0		9568451	1					
ANR	9568482	ReturnStatement	return code ;	1278:8:37155:37166	9568451	1	True				
ANR	9568483	Identifier	code		9568451	0					
ANR	9568484	ExpressionStatement	s_close_disable ( s )	1279:4:37172:37190	9568451	2	True				
ANR	9568485	CallExpression	s_close_disable ( s )		9568451	0					
ANR	9568486	Callee	s_close_disable		9568451	0					
ANR	9568487	Identifier	s_close_disable		9568451	0					
ANR	9568488	ArgumentList	s		9568451	1					
ANR	9568489	Argument	s		9568451	0					
ANR	9568490	Identifier	s		9568451	0					
ANR	9568491	ReturnStatement	return file_close_finish ( s ) ;	1280:4:37196:37223	9568451	3	True				
ANR	9568492	CallExpression	file_close_finish ( s )		9568451	0					
ANR	9568493	Callee	file_close_finish		9568451	0					
ANR	9568494	Identifier	file_close_finish		9568451	0					
ANR	9568495	ArgumentList	s		9568451	1					
ANR	9568496	Argument	s		9568451	0					
ANR	9568497	Identifier	s		9568451	0					
ANR	9568498	ReturnType	int		9568451	1					
ANR	9568499	Identifier	file_close_disable		9568451	2					
ANR	9568500	ParameterList	stream * s		9568451	3					
ANR	9568501	Parameter	stream * s	1273:19:37045:37054	9568451	0	True				
ANR	9568502	ParameterType	stream *		9568451	0					
ANR	9568503	Identifier	s		9568451	1					
ANR	9568504	CFGEntryNode	ENTRY		9568451		True				
ANR	9568505	CFGExitNode	EXIT		9568451		True				
ANR	9568506	Symbol	s		9568451						
ANR	9568507	Symbol	code		9568451						
ANR	9568508	Symbol	NULL		9568451						
ANR	9568509	Symbol	* s -> save_close		9568451						
ANR	9568510	Symbol	s -> save_close		9568451						
ANR	9568511	Symbol	* * s		9568451						
ANR	9568512	Symbol	file_close_finish		9568451						
ANR	9568513	Symbol	* s		9568451						
ANR	9568514	Function	s_Null_process	1286:0:37290:37446							
ANR	9568515	FunctionDef	"s_Null_process (stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last)"		9568514	0					
ANR	9568516	CompoundStatement		1289:0:37412:37446	9568514	0					
ANR	9568517	ReturnStatement	"return stream_move ( pr , pw ) ;"	1290:4:37418:37444	9568514	0	True				
ANR	9568518	CallExpression	"stream_move ( pr , pw )"		9568514	0					
ANR	9568519	Callee	stream_move		9568514	0					
ANR	9568520	Identifier	stream_move		9568514	0					
ANR	9568521	ArgumentList	pr		9568514	1					
ANR	9568522	Argument	pr		9568514	0					
ANR	9568523	Identifier	pr		9568514	0					
ANR	9568524	Argument	pw		9568514	1					
ANR	9568525	Identifier	pw		9568514	0					
ANR	9568526	ReturnType	static int		9568514	1					
ANR	9568527	Identifier	s_Null_process		9568514	2					
ANR	9568528	ParameterList	"stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last"		9568514	3					
ANR	9568529	Parameter	stream_state * st	1287:15:37316:37332	9568514	0	True				
ANR	9568530	ParameterType	stream_state *		9568514	0					
ANR	9568531	Identifier	st		9568514	1					
ANR	9568532	Parameter	stream_cursor_read * pr	1287:34:37335:37357	9568514	1	True				
ANR	9568533	ParameterType	stream_cursor_read *		9568514	0					
ANR	9568534	Identifier	pr		9568514	1					
ANR	9568535	Parameter	stream_cursor_write * pw	1288:15:37375:37398	9568514	2	True				
ANR	9568536	ParameterType	stream_cursor_write *		9568514	0					
ANR	9568537	Identifier	pw		9568514	1					
ANR	9568538	Parameter	bool last	1288:41:37401:37409	9568514	3	True				
ANR	9568539	ParameterType	bool		9568514	0					
ANR	9568540	Identifier	last		9568514	1					
ANR	9568541	CFGEntryNode	ENTRY		9568514		True				
ANR	9568542	CFGExitNode	EXIT		9568514		True				
ANR	9568543	Symbol	st		9568514						
ANR	9568544	Symbol	pr		9568514						
ANR	9568545	Symbol	last		9568514						
ANR	9568546	Symbol	pw		9568514						
ANR	9568547	Symbol	stream_move		9568514						
ANR	9568548	DeclStmt									
ANR	9568549	Decl							const stream_template	const stream_template	s_NullE_template
ANR	9568550	DeclStmt									
ANR	9568551	Decl							const stream_template	const stream_template	s_NullD_template
