command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	11165826	File	data/converged/CVE-2018-16863_ghostpdl/ziodevsc.c								
ANR	11165827	DeclStmt									
ANR	11165828	Decl							const char	const char [ ]	iodev_dtype_stdio
ANR	11165829	DeclStmt									
ANR	11165830	Decl							const gx_io_device	const gx_io_device	gs_iodev_stdin
ANR	11165831	DeclStmt									
ANR	11165832	Decl							const gx_io_device	const gx_io_device	gs_iodev_stdout
ANR	11165833	DeclStmt									
ANR	11165834	Decl							const gx_io_device	const gx_io_device	gs_iodev_stderr
ANR	11165835	DeclStmt									
ANR	11165836	Decl							int	"int ( stream_state * , stream_cursor_read * , stream_cursor_write * , bool )"	s_stdin_read_process
ANR	11165837	Function	stdin_init	81:0:2893:3022							
ANR	11165838	FunctionDef	"stdin_init (gx_io_device * iodev , gs_memory_t * mem)"		11165837	0					
ANR	11165839	CompoundStatement		83:0:2956:3022	11165837	0					
ANR	11165840	ExpressionStatement	mem -> gs_lib_ctx -> stdin_is_interactive = true	84:4:2962:3006	11165837	0	True				
ANR	11165841	AssignmentExpression	mem -> gs_lib_ctx -> stdin_is_interactive = true		11165837	0		=			
ANR	11165842	PtrMemberAccess	mem -> gs_lib_ctx -> stdin_is_interactive		11165837	0					
ANR	11165843	PtrMemberAccess	mem -> gs_lib_ctx		11165837	0					
ANR	11165844	Identifier	mem		11165837	0					
ANR	11165845	Identifier	gs_lib_ctx		11165837	1					
ANR	11165846	Identifier	stdin_is_interactive		11165837	1					
ANR	11165847	Identifier	true		11165837	1					
ANR	11165848	ReturnStatement	return 0 ;	85:4:3012:3020	11165837	1	True				
ANR	11165849	PrimaryExpression	0		11165837	0					
ANR	11165850	ReturnType	static int		11165837	1					
ANR	11165851	Identifier	stdin_init		11165837	2					
ANR	11165852	ParameterList	"gx_io_device * iodev , gs_memory_t * mem"		11165837	3					
ANR	11165853	Parameter	gx_io_device * iodev	82:11:2915:2934	11165837	0	True				
ANR	11165854	ParameterType	gx_io_device *		11165837	0					
ANR	11165855	Identifier	iodev		11165837	1					
ANR	11165856	Parameter	gs_memory_t * mem	82:33:2937:2953	11165837	1	True				
ANR	11165857	ParameterType	gs_memory_t *		11165837	0					
ANR	11165858	Identifier	mem		11165837	1					
ANR	11165859	CFGEntryNode	ENTRY		11165837		True				
ANR	11165860	CFGExitNode	EXIT		11165837		True				
ANR	11165861	Symbol	iodev		11165837						
ANR	11165862	Symbol	mem		11165837						
ANR	11165863	Symbol	mem -> gs_lib_ctx -> stdin_is_interactive		11165837						
ANR	11165864	Symbol	true		11165837						
ANR	11165865	Symbol	* * mem		11165837						
ANR	11165866	Symbol	* mem -> gs_lib_ctx		11165837						
ANR	11165867	Symbol	mem -> gs_lib_ctx		11165837						
ANR	11165868	Symbol	* mem		11165837						
ANR	11165869	Function	stdin_finit	88:0:3025:3155							
ANR	11165870	FunctionDef	"stdin_finit (gx_io_device * iodev , gs_memory_t * mem)"		11165869	0					
ANR	11165871	CompoundStatement		90:0:3090:3155	11165869	0					
ANR	11165872	ExpressionStatement	mem -> gs_lib_ctx -> stdin_is_interactive = false	91:4:3096:3141	11165869	0	True				
ANR	11165873	AssignmentExpression	mem -> gs_lib_ctx -> stdin_is_interactive = false		11165869	0		=			
ANR	11165874	PtrMemberAccess	mem -> gs_lib_ctx -> stdin_is_interactive		11165869	0					
ANR	11165875	PtrMemberAccess	mem -> gs_lib_ctx		11165869	0					
ANR	11165876	Identifier	mem		11165869	0					
ANR	11165877	Identifier	gs_lib_ctx		11165869	1					
ANR	11165878	Identifier	stdin_is_interactive		11165869	1					
ANR	11165879	Identifier	false		11165869	1					
ANR	11165880	ReturnStatement	return ;	92:4:3147:3153	11165869	1	True				
ANR	11165881	ReturnType	static void		11165869	1					
ANR	11165882	Identifier	stdin_finit		11165869	2					
ANR	11165883	ParameterList	"gx_io_device * iodev , gs_memory_t * mem"		11165869	3					
ANR	11165884	Parameter	gx_io_device * iodev	89:12:3049:3068	11165869	0	True				
ANR	11165885	ParameterType	gx_io_device *		11165869	0					
ANR	11165886	Identifier	iodev		11165869	1					
ANR	11165887	Parameter	gs_memory_t * mem	89:34:3071:3087	11165869	1	True				
ANR	11165888	ParameterType	gs_memory_t *		11165869	0					
ANR	11165889	Identifier	mem		11165869	1					
ANR	11165890	CFGEntryNode	ENTRY		11165869		True				
ANR	11165891	CFGExitNode	EXIT		11165869		True				
ANR	11165892	Symbol	iodev		11165869						
ANR	11165893	Symbol	mem		11165869						
ANR	11165894	Symbol	mem -> gs_lib_ctx -> stdin_is_interactive		11165869						
ANR	11165895	Symbol	false		11165869						
ANR	11165896	Symbol	* * mem		11165869						
ANR	11165897	Symbol	* mem -> gs_lib_ctx		11165869						
ANR	11165898	Symbol	mem -> gs_lib_ctx		11165869						
ANR	11165899	Symbol	* mem		11165869						
ANR	11165900	Function	s_stdin_read_process	97:0:3244:4041							
ANR	11165901	FunctionDef	"s_stdin_read_process (stream_state * st , stream_cursor_read * ignore_pr , stream_cursor_write * pw , bool last)"		11165900	0					
ANR	11165902	CompoundStatement		100:0:3385:4041	11165900	0					
ANR	11165903	IdentifierDeclStatement	int wcount = ( int ) ( pw -> limit - pw -> ptr ) ;	101:4:3391:3430	11165900	0	True				
ANR	11165904	IdentifierDecl	wcount = ( int ) ( pw -> limit - pw -> ptr )		11165900	0					
ANR	11165905	IdentifierDeclType	int		11165900	0					
ANR	11165906	Identifier	wcount		11165900	1					
ANR	11165907	AssignmentExpression	wcount = ( int ) ( pw -> limit - pw -> ptr )		11165900	2		=			
ANR	11165908	Identifier	wcount		11165900	0					
ANR	11165909	CastExpression	( int ) ( pw -> limit - pw -> ptr )		11165900	1					
ANR	11165910	CastTarget	int		11165900	0					
ANR	11165911	AdditiveExpression	pw -> limit - pw -> ptr		11165900	1		-			
ANR	11165912	PtrMemberAccess	pw -> limit		11165900	0					
ANR	11165913	Identifier	pw		11165900	0					
ANR	11165914	Identifier	limit		11165900	1					
ANR	11165915	PtrMemberAccess	pw -> ptr		11165900	1					
ANR	11165916	Identifier	pw		11165900	0					
ANR	11165917	Identifier	ptr		11165900	1					
ANR	11165918	IdentifierDeclStatement	int count ;	102:4:3436:3445	11165900	1	True				
ANR	11165919	IdentifierDecl	count		11165900	0					
ANR	11165920	IdentifierDeclType	int		11165900	0					
ANR	11165921	Identifier	count		11165900	1					
ANR	11165922	IdentifierDeclStatement	gs_memory_t * mem = st -> memory ;	103:4:3451:3480	11165900	2	True				
ANR	11165923	IdentifierDecl	* mem = st -> memory		11165900	0					
ANR	11165924	IdentifierDeclType	gs_memory_t *		11165900	0					
ANR	11165925	Identifier	mem		11165900	1					
ANR	11165926	AssignmentExpression	* mem = st -> memory		11165900	2		=			
ANR	11165927	Identifier	mem		11165900	0					
ANR	11165928	PtrMemberAccess	st -> memory		11165900	1					
ANR	11165929	Identifier	st		11165900	0					
ANR	11165930	Identifier	memory		11165900	1					
ANR	11165931	IfStatement	if ( wcount <= 0 )		11165900	3					
ANR	11165932	Condition	wcount <= 0	105:8:3491:3501	11165900	0	True				
ANR	11165933	RelationalExpression	wcount <= 0		11165900	0		<=			
ANR	11165934	Identifier	wcount		11165900	0					
ANR	11165935	PrimaryExpression	0		11165900	1					
ANR	11165936	ReturnStatement	return 0 ;	106:8:3512:3520	11165900	1	True				
ANR	11165937	PrimaryExpression	0		11165900	0					
ANR	11165938	IfStatement	if ( mem -> gs_lib_ctx -> stdin_fn )		11165900	4					
ANR	11165939	Condition	mem -> gs_lib_ctx -> stdin_fn	109:8:3556:3580	11165900	0	True				
ANR	11165940	PtrMemberAccess	mem -> gs_lib_ctx -> stdin_fn		11165900	0					
ANR	11165941	PtrMemberAccess	mem -> gs_lib_ctx		11165900	0					
ANR	11165942	Identifier	mem		11165900	0					
ANR	11165943	Identifier	gs_lib_ctx		11165900	1					
ANR	11165944	Identifier	stdin_fn		11165900	1					
ANR	11165945	ExpressionStatement	"count = ( * mem -> gs_lib_ctx -> stdin_fn ) ( mem -> gs_lib_ctx -> caller_handle , ( char * ) pw -> ptr + 1 , mem -> gs_lib_ctx -> stdin_is_interactive ? 1 : wcount )"	110:8:3591:3758	11165900	1	True				
ANR	11165946	AssignmentExpression	"count = ( * mem -> gs_lib_ctx -> stdin_fn ) ( mem -> gs_lib_ctx -> caller_handle , ( char * ) pw -> ptr + 1 , mem -> gs_lib_ctx -> stdin_is_interactive ? 1 : wcount )"		11165900	0		=			
ANR	11165947	Identifier	count		11165900	0					
ANR	11165948	CallExpression	"( * mem -> gs_lib_ctx -> stdin_fn ) ( mem -> gs_lib_ctx -> caller_handle , ( char * ) pw -> ptr + 1 , mem -> gs_lib_ctx -> stdin_is_interactive ? 1 : wcount )"		11165900	1					
ANR	11165949	Callee	* mem -> gs_lib_ctx -> stdin_fn		11165900	0					
ANR	11165950	UnaryOperationExpression	* mem -> gs_lib_ctx -> stdin_fn		11165900	0					
ANR	11165951	UnaryOperator	*		11165900	0					
ANR	11165952	PtrMemberAccess	mem -> gs_lib_ctx -> stdin_fn		11165900	1					
ANR	11165953	PtrMemberAccess	mem -> gs_lib_ctx		11165900	0					
ANR	11165954	Identifier	mem		11165900	0					
ANR	11165955	Identifier	gs_lib_ctx		11165900	1					
ANR	11165956	Identifier	stdin_fn		11165900	1					
ANR	11165957	ArgumentList	mem -> gs_lib_ctx -> caller_handle		11165900	1					
ANR	11165958	Argument	mem -> gs_lib_ctx -> caller_handle		11165900	0					
ANR	11165959	PtrMemberAccess	mem -> gs_lib_ctx -> caller_handle		11165900	0					
ANR	11165960	PtrMemberAccess	mem -> gs_lib_ctx		11165900	0					
ANR	11165961	Identifier	mem		11165900	0					
ANR	11165962	Identifier	gs_lib_ctx		11165900	1					
ANR	11165963	Identifier	caller_handle		11165900	1					
ANR	11165964	Argument	( char * ) pw -> ptr + 1		11165900	1					
ANR	11165965	AdditiveExpression	( char * ) pw -> ptr + 1		11165900	0		+			
ANR	11165966	CastExpression	( char * ) pw -> ptr		11165900	0					
ANR	11165967	CastTarget	char *		11165900	0					
ANR	11165968	PtrMemberAccess	pw -> ptr		11165900	1					
ANR	11165969	Identifier	pw		11165900	0					
ANR	11165970	Identifier	ptr		11165900	1					
ANR	11165971	PrimaryExpression	1		11165900	1					
ANR	11165972	Argument	mem -> gs_lib_ctx -> stdin_is_interactive ? 1 : wcount		11165900	2					
ANR	11165973	ConditionalExpression	mem -> gs_lib_ctx -> stdin_is_interactive ? 1 : wcount		11165900	0					
ANR	11165974	Condition	mem -> gs_lib_ctx -> stdin_is_interactive		11165900	0					
ANR	11165975	PtrMemberAccess	mem -> gs_lib_ctx -> stdin_is_interactive		11165900	0					
ANR	11165976	PtrMemberAccess	mem -> gs_lib_ctx		11165900	0					
ANR	11165977	Identifier	mem		11165900	0					
ANR	11165978	Identifier	gs_lib_ctx		11165900	1					
ANR	11165979	Identifier	stdin_is_interactive		11165900	1					
ANR	11165980	PrimaryExpression	1		11165900	1					
ANR	11165981	Identifier	wcount		11165900	2					
ANR	11165982	ElseStatement	else		11165900	0					
ANR	11165983	ExpressionStatement	"count = gp_stdin_read ( ( char * ) pw -> ptr + 1 , wcount , mem -> gs_lib_ctx -> stdin_is_interactive , mem -> gs_lib_ctx -> fstdin )"	114:8:3777:3935	11165900	0	True				
ANR	11165984	AssignmentExpression	"count = gp_stdin_read ( ( char * ) pw -> ptr + 1 , wcount , mem -> gs_lib_ctx -> stdin_is_interactive , mem -> gs_lib_ctx -> fstdin )"		11165900	0		=			
ANR	11165985	Identifier	count		11165900	0					
ANR	11165986	CallExpression	"gp_stdin_read ( ( char * ) pw -> ptr + 1 , wcount , mem -> gs_lib_ctx -> stdin_is_interactive , mem -> gs_lib_ctx -> fstdin )"		11165900	1					
ANR	11165987	Callee	gp_stdin_read		11165900	0					
ANR	11165988	Identifier	gp_stdin_read		11165900	0					
ANR	11165989	ArgumentList	( char * ) pw -> ptr + 1		11165900	1					
ANR	11165990	Argument	( char * ) pw -> ptr + 1		11165900	0					
ANR	11165991	AdditiveExpression	( char * ) pw -> ptr + 1		11165900	0		+			
ANR	11165992	CastExpression	( char * ) pw -> ptr		11165900	0					
ANR	11165993	CastTarget	char *		11165900	0					
ANR	11165994	PtrMemberAccess	pw -> ptr		11165900	1					
ANR	11165995	Identifier	pw		11165900	0					
ANR	11165996	Identifier	ptr		11165900	1					
ANR	11165997	PrimaryExpression	1		11165900	1					
ANR	11165998	Argument	wcount		11165900	1					
ANR	11165999	Identifier	wcount		11165900	0					
ANR	11166000	Argument	mem -> gs_lib_ctx -> stdin_is_interactive		11165900	2					
ANR	11166001	PtrMemberAccess	mem -> gs_lib_ctx -> stdin_is_interactive		11165900	0					
ANR	11166002	PtrMemberAccess	mem -> gs_lib_ctx		11165900	0					
ANR	11166003	Identifier	mem		11165900	0					
ANR	11166004	Identifier	gs_lib_ctx		11165900	1					
ANR	11166005	Identifier	stdin_is_interactive		11165900	1					
ANR	11166006	Argument	mem -> gs_lib_ctx -> fstdin		11165900	3					
ANR	11166007	PtrMemberAccess	mem -> gs_lib_ctx -> fstdin		11165900	0					
ANR	11166008	PtrMemberAccess	mem -> gs_lib_ctx		11165900	0					
ANR	11166009	Identifier	mem		11165900	0					
ANR	11166010	Identifier	gs_lib_ctx		11165900	1					
ANR	11166011	Identifier	fstdin		11165900	1					
ANR	11166012	ExpressionStatement	pw -> ptr += ( count < 0 ) ? 0 : count	118:4:3942:3976	11165900	5	True				
ANR	11166013	AssignmentExpression	pw -> ptr += ( count < 0 ) ? 0 : count		11165900	0		+=			
ANR	11166014	PtrMemberAccess	pw -> ptr		11165900	0					
ANR	11166015	Identifier	pw		11165900	0					
ANR	11166016	Identifier	ptr		11165900	1					
ANR	11166017	ConditionalExpression	( count < 0 ) ? 0 : count		11165900	1					
ANR	11166018	Condition	count < 0		11165900	0					
ANR	11166019	RelationalExpression	count < 0		11165900	0		<			
ANR	11166020	Identifier	count		11165900	0					
ANR	11166021	PrimaryExpression	0		11165900	1					
ANR	11166022	PrimaryExpression	0		11165900	1					
ANR	11166023	Identifier	count		11165900	2					
ANR	11166024	ReturnStatement	return ( ( count < 0 ) ? ERRC : ( count == 0 ) ? EOFC : count ) ;	119:4:3982:4039	11165900	6	True				
ANR	11166025	ConditionalExpression	( count < 0 ) ? ERRC : ( count == 0 ) ? EOFC : count		11165900	0					
ANR	11166026	Condition	count < 0		11165900	0					
ANR	11166027	RelationalExpression	count < 0		11165900	0		<			
ANR	11166028	Identifier	count		11165900	0					
ANR	11166029	PrimaryExpression	0		11165900	1					
ANR	11166030	Identifier	ERRC		11165900	1					
ANR	11166031	ConditionalExpression	( count == 0 ) ? EOFC : count		11165900	2					
ANR	11166032	Condition	count == 0		11165900	0					
ANR	11166033	EqualityExpression	count == 0		11165900	0		==			
ANR	11166034	Identifier	count		11165900	0					
ANR	11166035	PrimaryExpression	0		11165900	1					
ANR	11166036	Identifier	EOFC		11165900	1					
ANR	11166037	Identifier	count		11165900	2					
ANR	11166038	ReturnType	static int		11165900	1					
ANR	11166039	Identifier	s_stdin_read_process		11165900	2					
ANR	11166040	ParameterList	"stream_state * st , stream_cursor_read * ignore_pr , stream_cursor_write * pw , bool last"		11165900	3					
ANR	11166041	Parameter	stream_state * st	98:21:3276:3292	11165900	0	True				
ANR	11166042	ParameterType	stream_state *		11165900	0					
ANR	11166043	Identifier	st		11165900	1					
ANR	11166044	Parameter	stream_cursor_read * ignore_pr	98:40:3295:3324	11165900	1	True				
ANR	11166045	ParameterType	stream_cursor_read *		11165900	0					
ANR	11166046	Identifier	ignore_pr		11165900	1					
ANR	11166047	Parameter	stream_cursor_write * pw	99:21:3348:3371	11165900	2	True				
ANR	11166048	ParameterType	stream_cursor_write *		11165900	0					
ANR	11166049	Identifier	pw		11165900	1					
ANR	11166050	Parameter	bool last	99:47:3374:3382	11165900	3	True				
ANR	11166051	ParameterType	bool		11165900	0					
ANR	11166052	Identifier	last		11165900	1					
ANR	11166053	CFGEntryNode	ENTRY		11165900		True				
ANR	11166054	CFGExitNode	EXIT		11165900		True				
ANR	11166055	Symbol	wcount		11165900						
ANR	11166056	Symbol	* st		11165900						
ANR	11166057	Symbol	pw		11165900						
ANR	11166058	Symbol	EOFC		11165900						
ANR	11166059	Symbol	pw -> limit		11165900						
ANR	11166060	Symbol	* * * mem		11165900						
ANR	11166061	Symbol	mem		11165900						
ANR	11166062	Symbol	mem -> gs_lib_ctx -> stdin_is_interactive		11165900						
ANR	11166063	Symbol	* * mem -> gs_lib_ctx		11165900						
ANR	11166064	Symbol	gp_stdin_read		11165900						
ANR	11166065	Symbol	pw -> ptr		11165900						
ANR	11166066	Symbol	mem -> gs_lib_ctx -> caller_handle		11165900						
ANR	11166067	Symbol	mem -> gs_lib_ctx -> fstdin		11165900						
ANR	11166068	Symbol	st		11165900						
ANR	11166069	Symbol	last		11165900						
ANR	11166070	Symbol	* mem -> gs_lib_ctx -> stdin_fn		11165900						
ANR	11166071	Symbol	st -> memory		11165900						
ANR	11166072	Symbol	mem -> gs_lib_ctx -> stdin_fn		11165900						
ANR	11166073	Symbol	count		11165900						
ANR	11166074	Symbol	* * mem		11165900						
ANR	11166075	Symbol	* pw		11165900						
ANR	11166076	Symbol	ignore_pr		11165900						
ANR	11166077	Symbol	* mem -> gs_lib_ctx		11165900						
ANR	11166078	Symbol	mem -> gs_lib_ctx		11165900						
ANR	11166079	Symbol	ERRC		11165900						
ANR	11166080	Symbol	* mem		11165900						
ANR	11166081	Function	stdin_open	122:0:4044:5468							
ANR	11166082	FunctionDef	"stdin_open (gx_io_device * iodev , const char * access , stream * * ps , gs_memory_t * mem)"		11166081	0					
ANR	11166083	CompoundStatement		125:0:4152:5468	11166081	0					
ANR	11166084	IdentifierDeclStatement	i_ctx_t * i_ctx_p = ( i_ctx_t * ) iodev -> state ;	126:4:4158:4200	11166081	0	True				
ANR	11166085	IdentifierDecl	* i_ctx_p = ( i_ctx_t * ) iodev -> state		11166081	0					
ANR	11166086	IdentifierDeclType	i_ctx_t *		11166081	0					
ANR	11166087	Identifier	i_ctx_p		11166081	1					
ANR	11166088	AssignmentExpression	* i_ctx_p = ( i_ctx_t * ) iodev -> state		11166081	2		=			
ANR	11166089	Identifier	i_ctx_p		11166081	0					
ANR	11166090	CastExpression	( i_ctx_t * ) iodev -> state		11166081	1					
ANR	11166091	CastTarget	i_ctx_t *		11166081	0					
ANR	11166092	PtrMemberAccess	iodev -> state		11166081	1					
ANR	11166093	Identifier	iodev		11166081	0					
ANR	11166094	Identifier	state		11166081	1					
ANR	11166095	IdentifierDeclStatement	stream * s ;	127:4:4222:4231	11166081	1	True				
ANR	11166096	IdentifierDecl	* s		11166081	0					
ANR	11166097	IdentifierDeclType	stream *		11166081	0					
ANR	11166098	Identifier	s		11166081	1					
ANR	11166099	IfStatement	"if ( ! streq1 ( access , 'r' ) )"		11166081	2					
ANR	11166100	Condition	"! streq1 ( access , 'r' )"	129:8:4242:4261	11166081	0	True				
ANR	11166101	UnaryOperationExpression	"! streq1 ( access , 'r' )"		11166081	0					
ANR	11166102	UnaryOperator	!		11166081	0					
ANR	11166103	CallExpression	"streq1 ( access , 'r' )"		11166081	1					
ANR	11166104	Callee	streq1		11166081	0					
ANR	11166105	Identifier	streq1		11166081	0					
ANR	11166106	ArgumentList	access		11166081	1					
ANR	11166107	Argument	access		11166081	0					
ANR	11166108	Identifier	access		11166081	0					
ANR	11166109	Argument	'r'		11166081	1					
ANR	11166110	PrimaryExpression	'r'		11166081	0					
ANR	11166111	ExpressionStatement	return_error ( gs_error_invalidfileaccess )	130:8:4272:4312	11166081	1	True				
ANR	11166112	CallExpression	return_error ( gs_error_invalidfileaccess )		11166081	0					
ANR	11166113	Callee	return_error		11166081	0					
ANR	11166114	Identifier	return_error		11166081	0					
ANR	11166115	ArgumentList	gs_error_invalidfileaccess		11166081	1					
ANR	11166116	Argument	gs_error_invalidfileaccess		11166081	0					
ANR	11166117	Identifier	gs_error_invalidfileaccess		11166081	0					
ANR	11166118	IfStatement	"if ( file_is_invalid ( s , & ref_stdin ) )"		11166081	3					
ANR	11166119	Condition	"file_is_invalid ( s , & ref_stdin )"	131:8:4322:4351	11166081	0	True				
ANR	11166120	CallExpression	"file_is_invalid ( s , & ref_stdin )"		11166081	0					
ANR	11166121	Callee	file_is_invalid		11166081	0					
ANR	11166122	Identifier	file_is_invalid		11166081	0					
ANR	11166123	ArgumentList	s		11166081	1					
ANR	11166124	Argument	s		11166081	0					
ANR	11166125	Identifier	s		11166081	0					
ANR	11166126	Argument	& ref_stdin		11166081	1					
ANR	11166127	UnaryOperationExpression	& ref_stdin		11166081	0					
ANR	11166128	UnaryOperator	&		11166081	0					
ANR	11166129	Identifier	ref_stdin		11166081	1					
ANR	11166130	CompoundStatement		11:15:336:501	11166081	1					
ANR	11166131	IdentifierDeclStatement	gs_memory_t * sysmem = imemory_system ;	133:8:4417:4453	11166081	0	True				
ANR	11166132	IdentifierDecl	* sysmem = imemory_system		11166081	0					
ANR	11166133	IdentifierDeclType	gs_memory_t *		11166081	0					
ANR	11166134	Identifier	sysmem		11166081	1					
ANR	11166135	AssignmentExpression	* sysmem = imemory_system		11166081	2		=			
ANR	11166136	Identifier	imemory_system		11166081	0					
ANR	11166137	Identifier	imemory_system		11166081	1					
ANR	11166138	IdentifierDeclStatement	byte * buf ;	134:8:4463:4472	11166081	1	True				
ANR	11166139	IdentifierDecl	* buf		11166081	0					
ANR	11166140	IdentifierDeclType	byte *		11166081	0					
ANR	11166141	Identifier	buf		11166081	1					
ANR	11166142	Statement	static	135:8:4482:4487	11166081	2	True				
ANR	11166143	IdentifierDeclStatement	"const stream_procs p = { s_std_noavailable , s_std_noseek , s_std_read_reset , s_std_read_flush , file_close_file , s_stdin_read_process } ;"	135:15:4489:4654	11166081	3	True				
ANR	11166144	IdentifierDecl	"p = { s_std_noavailable , s_std_noseek , s_std_read_reset , s_std_read_flush , file_close_file , s_stdin_read_process }"		11166081	0					
ANR	11166145	IdentifierDeclType	const stream_procs		11166081	0					
ANR	11166146	Identifier	p		11166081	1					
ANR	11166147	AssignmentExpression	"p = { s_std_noavailable , s_std_noseek , s_std_read_reset , s_std_read_flush , file_close_file , s_stdin_read_process }"		11166081	2		=			
ANR	11166148	Identifier	p		11166081	0					
ANR	11166149	InitializerList	s_std_noavailable		11166081	1					
ANR	11166150	Identifier	s_std_noavailable		11166081	0					
ANR	11166151	Identifier	s_std_noseek		11166081	1					
ANR	11166152	Identifier	s_std_read_reset		11166081	2					
ANR	11166153	Identifier	s_std_read_flush		11166081	3					
ANR	11166154	Identifier	file_close_file		11166081	4					
ANR	11166155	Identifier	s_stdin_read_process		11166081	5					
ANR	11166156	ExpressionStatement	"s = file_alloc_stream ( sysmem , ""stdin_open(stream)"" )"	140:8:4665:4716	11166081	4	True				
ANR	11166157	AssignmentExpression	"s = file_alloc_stream ( sysmem , ""stdin_open(stream)"" )"		11166081	0		=			
ANR	11166158	Identifier	s		11166081	0					
ANR	11166159	CallExpression	"file_alloc_stream ( sysmem , ""stdin_open(stream)"" )"		11166081	1					
ANR	11166160	Callee	file_alloc_stream		11166081	0					
ANR	11166161	Identifier	file_alloc_stream		11166081	0					
ANR	11166162	ArgumentList	sysmem		11166081	1					
ANR	11166163	Argument	sysmem		11166081	0					
ANR	11166164	Identifier	sysmem		11166081	0					
ANR	11166165	Argument	"""stdin_open(stream)"""		11166081	1					
ANR	11166166	PrimaryExpression	"""stdin_open(stream)"""		11166081	0					
ANR	11166167	ExpressionStatement	"buf = gs_alloc_bytes ( sysmem , STDIN_BUF_SIZE , ""stdin_open(buffer)"" )"	146:8:4962:5028	11166081	5	True				
ANR	11166168	AssignmentExpression	"buf = gs_alloc_bytes ( sysmem , STDIN_BUF_SIZE , ""stdin_open(buffer)"" )"		11166081	0		=			
ANR	11166169	Identifier	buf		11166081	0					
ANR	11166170	CallExpression	"gs_alloc_bytes ( sysmem , STDIN_BUF_SIZE , ""stdin_open(buffer)"" )"		11166081	1					
ANR	11166171	Callee	gs_alloc_bytes		11166081	0					
ANR	11166172	Identifier	gs_alloc_bytes		11166081	0					
ANR	11166173	ArgumentList	sysmem		11166081	1					
ANR	11166174	Argument	sysmem		11166081	0					
ANR	11166175	Identifier	sysmem		11166081	0					
ANR	11166176	Argument	STDIN_BUF_SIZE		11166081	1					
ANR	11166177	Identifier	STDIN_BUF_SIZE		11166081	0					
ANR	11166178	Argument	"""stdin_open(buffer)"""		11166081	2					
ANR	11166179	PrimaryExpression	"""stdin_open(buffer)"""		11166081	0					
ANR	11166180	IfStatement	if ( s == 0 || buf == 0 )		11166081	6					
ANR	11166181	Condition	s == 0 || buf == 0	147:12:5042:5059	11166081	0	True				
ANR	11166182	OrExpression	s == 0 || buf == 0		11166081	0		||			
ANR	11166183	EqualityExpression	s == 0		11166081	0		==			
ANR	11166184	Identifier	s		11166081	0					
ANR	11166185	PrimaryExpression	0		11166081	1					
ANR	11166186	EqualityExpression	buf == 0		11166081	1		==			
ANR	11166187	Identifier	buf		11166081	0					
ANR	11166188	PrimaryExpression	0		11166081	1					
ANR	11166189	ExpressionStatement	return_error ( gs_error_VMerror )	148:12:5074:5104	11166081	1	True				
ANR	11166190	CallExpression	return_error ( gs_error_VMerror )		11166081	0					
ANR	11166191	Callee	return_error		11166081	0					
ANR	11166192	Identifier	return_error		11166081	0					
ANR	11166193	ArgumentList	gs_error_VMerror		11166081	1					
ANR	11166194	Argument	gs_error_VMerror		11166081	0					
ANR	11166195	Identifier	gs_error_VMerror		11166081	0					
ANR	11166196	ExpressionStatement	"s_std_init ( s , buf , STDIN_BUF_SIZE , & p , s_mode_read )"	150:8:5115:5166	11166081	7	True				
ANR	11166197	CallExpression	"s_std_init ( s , buf , STDIN_BUF_SIZE , & p , s_mode_read )"		11166081	0					
ANR	11166198	Callee	s_std_init		11166081	0					
ANR	11166199	Identifier	s_std_init		11166081	0					
ANR	11166200	ArgumentList	s		11166081	1					
ANR	11166201	Argument	s		11166081	0					
ANR	11166202	Identifier	s		11166081	0					
ANR	11166203	Argument	buf		11166081	1					
ANR	11166204	Identifier	buf		11166081	0					
ANR	11166205	Argument	STDIN_BUF_SIZE		11166081	2					
ANR	11166206	Identifier	STDIN_BUF_SIZE		11166081	0					
ANR	11166207	Argument	& p		11166081	3					
ANR	11166208	UnaryOperationExpression	& p		11166081	0					
ANR	11166209	UnaryOperator	&		11166081	0					
ANR	11166210	Identifier	p		11166081	1					
ANR	11166211	Argument	s_mode_read		11166081	4					
ANR	11166212	Identifier	s_mode_read		11166081	0					
ANR	11166213	ExpressionStatement	s -> file = 0	151:8:5176:5187	11166081	8	True				
ANR	11166214	AssignmentExpression	s -> file = 0		11166081	0		=			
ANR	11166215	PtrMemberAccess	s -> file		11166081	0					
ANR	11166216	Identifier	s		11166081	0					
ANR	11166217	Identifier	file		11166081	1					
ANR	11166218	PrimaryExpression	0		11166081	1					
ANR	11166219	ExpressionStatement	s -> file_modes = s -> modes	152:8:5197:5221	11166081	9	True				
ANR	11166220	AssignmentExpression	s -> file_modes = s -> modes		11166081	0		=			
ANR	11166221	PtrMemberAccess	s -> file_modes		11166081	0					
ANR	11166222	Identifier	s		11166081	0					
ANR	11166223	Identifier	file_modes		11166081	1					
ANR	11166224	PtrMemberAccess	s -> modes		11166081	1					
ANR	11166225	Identifier	s		11166081	0					
ANR	11166226	Identifier	modes		11166081	1					
ANR	11166227	ExpressionStatement	s -> file_offset = 0	153:8:5231:5249	11166081	10	True				
ANR	11166228	AssignmentExpression	s -> file_offset = 0		11166081	0		=			
ANR	11166229	PtrMemberAccess	s -> file_offset		11166081	0					
ANR	11166230	Identifier	s		11166081	0					
ANR	11166231	Identifier	file_offset		11166081	1					
ANR	11166232	PrimaryExpression	0		11166081	1					
ANR	11166233	ExpressionStatement	s -> file_limit = S_FILE_LIMIT_MAX	154:8:5259:5291	11166081	11	True				
ANR	11166234	AssignmentExpression	s -> file_limit = S_FILE_LIMIT_MAX		11166081	0		=			
ANR	11166235	PtrMemberAccess	s -> file_limit		11166081	0					
ANR	11166236	Identifier	s		11166081	0					
ANR	11166237	Identifier	file_limit		11166081	1					
ANR	11166238	Identifier	S_FILE_LIMIT_MAX		11166081	1					
ANR	11166239	ExpressionStatement	s -> save_close = s_std_null	155:8:5301:5327	11166081	12	True				
ANR	11166240	AssignmentExpression	s -> save_close = s_std_null		11166081	0		=			
ANR	11166241	PtrMemberAccess	s -> save_close		11166081	0					
ANR	11166242	Identifier	s		11166081	0					
ANR	11166243	Identifier	save_close		11166081	1					
ANR	11166244	Identifier	s_std_null		11166081	1					
ANR	11166245	ExpressionStatement	"make_file ( & ref_stdin , a_readonly | avm_system , s -> read_id , s )"	156:8:5337:5398	11166081	13	True				
ANR	11166246	CallExpression	"make_file ( & ref_stdin , a_readonly | avm_system , s -> read_id , s )"		11166081	0					
ANR	11166247	Callee	make_file		11166081	0					
ANR	11166248	Identifier	make_file		11166081	0					
ANR	11166249	ArgumentList	& ref_stdin		11166081	1					
ANR	11166250	Argument	& ref_stdin		11166081	0					
ANR	11166251	UnaryOperationExpression	& ref_stdin		11166081	0					
ANR	11166252	UnaryOperator	&		11166081	0					
ANR	11166253	Identifier	ref_stdin		11166081	1					
ANR	11166254	Argument	a_readonly | avm_system		11166081	1					
ANR	11166255	InclusiveOrExpression	a_readonly | avm_system		11166081	0		|			
ANR	11166256	Identifier	a_readonly		11166081	0					
ANR	11166257	Identifier	avm_system		11166081	1					
ANR	11166258	Argument	s -> read_id		11166081	2					
ANR	11166259	PtrMemberAccess	s -> read_id		11166081	0					
ANR	11166260	Identifier	s		11166081	0					
ANR	11166261	Identifier	read_id		11166081	1					
ANR	11166262	Argument	s		11166081	3					
ANR	11166263	Identifier	s		11166081	0					
ANR	11166264	ExpressionStatement	* ps = s	157:8:5408:5415	11166081	14	True				
ANR	11166265	AssignmentExpression	* ps = s		11166081	0		=			
ANR	11166266	UnaryOperationExpression	* ps		11166081	0					
ANR	11166267	UnaryOperator	*		11166081	0					
ANR	11166268	Identifier	ps		11166081	1					
ANR	11166269	Identifier	s		11166081	1					
ANR	11166270	ReturnStatement	return 1 ;	158:8:5425:5433	11166081	15	True				
ANR	11166271	PrimaryExpression	1		11166081	0					
ANR	11166272	ExpressionStatement	* ps = s	160:4:5445:5452	11166081	4	True				
ANR	11166273	AssignmentExpression	* ps = s		11166081	0		=			
ANR	11166274	UnaryOperationExpression	* ps		11166081	0					
ANR	11166275	UnaryOperator	*		11166081	0					
ANR	11166276	Identifier	ps		11166081	1					
ANR	11166277	Identifier	s		11166081	1					
ANR	11166278	ReturnStatement	return 0 ;	161:4:5458:5466	11166081	5	True				
ANR	11166279	PrimaryExpression	0		11166081	0					
ANR	11166280	ReturnType	static int		11166081	1					
ANR	11166281	Identifier	stdin_open		11166081	2					
ANR	11166282	ParameterList	"gx_io_device * iodev , const char * access , stream * * ps , gs_memory_t * mem"		11166081	3					
ANR	11166283	Parameter	gx_io_device * iodev	123:11:4066:4085	11166081	0	True				
ANR	11166284	ParameterType	gx_io_device *		11166081	0					
ANR	11166285	Identifier	iodev		11166081	1					
ANR	11166286	Parameter	const char * access	123:33:4088:4105	11166081	1	True				
ANR	11166287	ParameterType	const char *		11166081	0					
ANR	11166288	Identifier	access		11166081	1					
ANR	11166289	Parameter	stream * * ps	123:53:4108:4119	11166081	2	True				
ANR	11166290	ParameterType	stream * *		11166081	0					
ANR	11166291	Identifier	ps		11166081	1					
ANR	11166292	Parameter	gs_memory_t * mem	124:11:4133:4149	11166081	3	True				
ANR	11166293	ParameterType	gs_memory_t *		11166081	0					
ANR	11166294	Identifier	mem		11166081	1					
ANR	11166295	CFGEntryNode	ENTRY		11166081		True				
ANR	11166296	CFGExitNode	EXIT		11166081		True				
ANR	11166297	Symbol	access		11166081						
ANR	11166298	Symbol	ps		11166081						
ANR	11166299	Symbol	STDIN_BUF_SIZE		11166081						
ANR	11166300	Symbol	s -> file		11166081						
ANR	11166301	Symbol	S_FILE_LIMIT_MAX		11166081						
ANR	11166302	Symbol	s -> file_limit		11166081						
ANR	11166303	Symbol	file_alloc_stream		11166081						
ANR	11166304	Symbol	iodev		11166081						
ANR	11166305	Symbol	mem		11166081						
ANR	11166306	Symbol	file_is_invalid		11166081						
ANR	11166307	Symbol	s_std_read_flush		11166081						
ANR	11166308	Symbol	s_mode_read		11166081						
ANR	11166309	Symbol	s_std_null		11166081						
ANR	11166310	Symbol	streq1		11166081						
ANR	11166311	Symbol	gs_alloc_bytes		11166081						
ANR	11166312	Symbol	s -> save_close		11166081						
ANR	11166313	Symbol	* iodev		11166081						
ANR	11166314	Symbol	imemory_system		11166081						
ANR	11166315	Symbol	s -> file_modes		11166081						
ANR	11166316	Symbol	s -> file_offset		11166081						
ANR	11166317	Symbol	s -> read_id		11166081						
ANR	11166318	Symbol	* ps		11166081						
ANR	11166319	Symbol	a_readonly		11166081						
ANR	11166320	Symbol	s_std_read_reset		11166081						
ANR	11166321	Symbol	p		11166081						
ANR	11166322	Symbol	& ref_stdin		11166081						
ANR	11166323	Symbol	gs_error_VMerror		11166081						
ANR	11166324	Symbol	buf		11166081						
ANR	11166325	Symbol	s		11166081						
ANR	11166326	Symbol	sysmem		11166081						
ANR	11166327	Symbol	i_ctx_p		11166081						
ANR	11166328	Symbol	& p		11166081						
ANR	11166329	Symbol	iodev -> state		11166081						
ANR	11166330	Symbol	s_std_noavailable		11166081						
ANR	11166331	Symbol	s_std_noseek		11166081						
ANR	11166332	Symbol	gs_error_invalidfileaccess		11166081						
ANR	11166333	Symbol	* s		11166081						
ANR	11166334	Symbol	avm_system		11166081						
ANR	11166335	Symbol	file_close_file		11166081						
ANR	11166336	Symbol	s_stdin_read_process		11166081						
ANR	11166337	Symbol	s -> modes		11166081						
ANR	11166338	Function	zget_stdin	164:0:5533:5933							
ANR	11166339	FunctionDef	"zget_stdin (i_ctx_t * i_ctx_p , stream * * ps)"		11166338	0					
ANR	11166340	CompoundStatement		166:0:5580:5933	11166338	0					
ANR	11166341	IdentifierDeclStatement	stream * s ;	167:4:5586:5595	11166338	0	True				
ANR	11166342	IdentifierDecl	* s		11166338	0					
ANR	11166343	IdentifierDeclType	stream *		11166338	0					
ANR	11166344	Identifier	s		11166338	1					
ANR	11166345	IdentifierDeclStatement	gx_io_device * iodev ;	168:4:5601:5620	11166338	1	True				
ANR	11166346	IdentifierDecl	* iodev		11166338	0					
ANR	11166347	IdentifierDeclType	gx_io_device *		11166338	0					
ANR	11166348	Identifier	iodev		11166338	1					
ANR	11166349	IdentifierDeclStatement	int code ;	169:4:5626:5634	11166338	2	True				
ANR	11166350	IdentifierDecl	code		11166338	0					
ANR	11166351	IdentifierDeclType	int		11166338	0					
ANR	11166352	Identifier	code		11166338	1					
ANR	11166353	IfStatement	"if ( file_is_valid ( s , & ref_stdin ) )"		11166338	3					
ANR	11166354	Condition	"file_is_valid ( s , & ref_stdin )"	171:8:5645:5672	11166338	0	True				
ANR	11166355	CallExpression	"file_is_valid ( s , & ref_stdin )"		11166338	0					
ANR	11166356	Callee	file_is_valid		11166338	0					
ANR	11166357	Identifier	file_is_valid		11166338	0					
ANR	11166358	ArgumentList	s		11166338	1					
ANR	11166359	Argument	s		11166338	0					
ANR	11166360	Identifier	s		11166338	0					
ANR	11166361	Argument	& ref_stdin		11166338	1					
ANR	11166362	UnaryOperationExpression	& ref_stdin		11166338	0					
ANR	11166363	UnaryOperator	&		11166338	0					
ANR	11166364	Identifier	ref_stdin		11166338	1					
ANR	11166365	CompoundStatement		6:38:94:94	11166338	1					
ANR	11166366	ExpressionStatement	* ps = s	172:8:5685:5692	11166338	0	True				
ANR	11166367	AssignmentExpression	* ps = s		11166338	0		=			
ANR	11166368	UnaryOperationExpression	* ps		11166338	0					
ANR	11166369	UnaryOperator	*		11166338	0					
ANR	11166370	Identifier	ps		11166338	1					
ANR	11166371	Identifier	s		11166338	1					
ANR	11166372	ReturnStatement	return 0 ;	173:8:5702:5710	11166338	1	True				
ANR	11166373	PrimaryExpression	0		11166338	0					
ANR	11166374	ExpressionStatement	"iodev = gs_findiodevice ( imemory , ( const byte * ) ""%stdin"" , 6 )"	175:4:5722:5781	11166338	4	True				
ANR	11166375	AssignmentExpression	"iodev = gs_findiodevice ( imemory , ( const byte * ) ""%stdin"" , 6 )"		11166338	0		=			
ANR	11166376	Identifier	iodev		11166338	0					
ANR	11166377	CallExpression	"gs_findiodevice ( imemory , ( const byte * ) ""%stdin"" , 6 )"		11166338	1					
ANR	11166378	Callee	gs_findiodevice		11166338	0					
ANR	11166379	Identifier	gs_findiodevice		11166338	0					
ANR	11166380	ArgumentList	imemory		11166338	1					
ANR	11166381	Argument	imemory		11166338	0					
ANR	11166382	Identifier	imemory		11166338	0					
ANR	11166383	Argument	"( const byte * ) ""%stdin"""		11166338	1					
ANR	11166384	CastExpression	"( const byte * ) ""%stdin"""		11166338	0					
ANR	11166385	CastTarget	const byte *		11166338	0					
ANR	11166386	PrimaryExpression	"""%stdin"""		11166338	1					
ANR	11166387	Argument	6		11166338	2					
ANR	11166388	PrimaryExpression	6		11166338	0					
ANR	11166389	ExpressionStatement	iodev -> state = i_ctx_p	176:4:5787:5809	11166338	5	True				
ANR	11166390	AssignmentExpression	iodev -> state = i_ctx_p		11166338	0		=			
ANR	11166391	PtrMemberAccess	iodev -> state		11166338	0					
ANR	11166392	Identifier	iodev		11166338	0					
ANR	11166393	Identifier	state		11166338	1					
ANR	11166394	Identifier	i_ctx_p		11166338	1					
ANR	11166395	ExpressionStatement	"code = ( * iodev -> procs . open_device ) ( iodev , ""r"" , ps , imemory_system )"	177:4:5815:5881	11166338	6	True				
ANR	11166396	AssignmentExpression	"code = ( * iodev -> procs . open_device ) ( iodev , ""r"" , ps , imemory_system )"		11166338	0		=			
ANR	11166397	Identifier	code		11166338	0					
ANR	11166398	CallExpression	"( * iodev -> procs . open_device ) ( iodev , ""r"" , ps , imemory_system )"		11166338	1					
ANR	11166399	Callee	* iodev -> procs . open_device		11166338	0					
ANR	11166400	UnaryOperationExpression	* iodev -> procs . open_device		11166338	0					
ANR	11166401	UnaryOperator	*		11166338	0					
ANR	11166402	MemberAccess	iodev -> procs . open_device		11166338	1					
ANR	11166403	PtrMemberAccess	iodev -> procs		11166338	0					
ANR	11166404	Identifier	iodev		11166338	0					
ANR	11166405	Identifier	procs		11166338	1					
ANR	11166406	Identifier	open_device		11166338	1					
ANR	11166407	ArgumentList	iodev		11166338	1					
ANR	11166408	Argument	iodev		11166338	0					
ANR	11166409	Identifier	iodev		11166338	0					
ANR	11166410	Argument	"""r"""		11166338	1					
ANR	11166411	PrimaryExpression	"""r"""		11166338	0					
ANR	11166412	Argument	ps		11166338	2					
ANR	11166413	Identifier	ps		11166338	0					
ANR	11166414	Argument	imemory_system		11166338	3					
ANR	11166415	Identifier	imemory_system		11166338	0					
ANR	11166416	ExpressionStatement	iodev -> state = NULL	178:4:5887:5906	11166338	7	True				
ANR	11166417	AssignmentExpression	iodev -> state = NULL		11166338	0		=			
ANR	11166418	PtrMemberAccess	iodev -> state		11166338	0					
ANR	11166419	Identifier	iodev		11166338	0					
ANR	11166420	Identifier	state		11166338	1					
ANR	11166421	Identifier	NULL		11166338	1					
ANR	11166422	ReturnStatement	"return min ( code , 0 ) ;"	179:4:5912:5931	11166338	8	True				
ANR	11166423	CallExpression	"min ( code , 0 )"		11166338	0					
ANR	11166424	Callee	min		11166338	0					
ANR	11166425	Identifier	min		11166338	0					
ANR	11166426	ArgumentList	code		11166338	1					
ANR	11166427	Argument	code		11166338	0					
ANR	11166428	Identifier	code		11166338	0					
ANR	11166429	Argument	0		11166338	1					
ANR	11166430	PrimaryExpression	0		11166338	0					
ANR	11166431	ReturnType	int		11166338	1					
ANR	11166432	Identifier	zget_stdin		11166338	2					
ANR	11166433	ParameterList	"i_ctx_t * i_ctx_p , stream * * ps"		11166338	3					
ANR	11166434	Parameter	i_ctx_t * i_ctx_p	165:11:5548:5563	11166338	0	True				
ANR	11166435	ParameterType	i_ctx_t *		11166338	0					
ANR	11166436	Identifier	i_ctx_p		11166338	1					
ANR	11166437	Parameter	stream * * ps	165:29:5566:5577	11166338	1	True				
ANR	11166438	ParameterType	stream * *		11166338	0					
ANR	11166439	Identifier	ps		11166338	1					
ANR	11166440	CFGEntryNode	ENTRY		11166338		True				
ANR	11166441	CFGExitNode	EXIT		11166338		True				
ANR	11166442	Symbol	ps		11166338						
ANR	11166443	Symbol	code		11166338						
ANR	11166444	Symbol	NULL		11166338						
ANR	11166445	Symbol	* iodev		11166338						
ANR	11166446	Symbol	imemory_system		11166338						
ANR	11166447	Symbol	* iodev -> procs		11166338						
ANR	11166448	Symbol	* ps		11166338						
ANR	11166449	Symbol	gs_findiodevice		11166338						
ANR	11166450	Symbol	& ref_stdin		11166338						
ANR	11166451	Symbol	iodev -> procs . open_device		11166338						
ANR	11166452	Symbol	s		11166338						
ANR	11166453	Symbol	min		11166338						
ANR	11166454	Symbol	iodev		11166338						
ANR	11166455	Symbol	* iodev -> procs . open_device		11166338						
ANR	11166456	Symbol	i_ctx_p		11166338						
ANR	11166457	Symbol	file_is_valid		11166338						
ANR	11166458	Symbol	iodev -> state		11166338						
ANR	11166459	Symbol	imemory		11166338						
ANR	11166460	Symbol	iodev -> procs		11166338						
ANR	11166461	Symbol	* * iodev		11166338						
ANR	11166462	Function	zis_stdin	183:0:5974:6080							
ANR	11166463	FunctionDef	zis_stdin (const stream * s)		11166462	0					
ANR	11166464	CompoundStatement		185:0:6006:6080	11166462	0					
ANR	11166465	ReturnStatement	return ( s_is_valid ( s ) && s -> procs . process == s_stdin_read_process ) ;	186:4:6012:6078	11166462	0	True				
ANR	11166466	AndExpression	s_is_valid ( s ) && s -> procs . process == s_stdin_read_process		11166462	0		&&			
ANR	11166467	CallExpression	s_is_valid ( s )		11166462	0					
ANR	11166468	Callee	s_is_valid		11166462	0					
ANR	11166469	Identifier	s_is_valid		11166462	0					
ANR	11166470	ArgumentList	s		11166462	1					
ANR	11166471	Argument	s		11166462	0					
ANR	11166472	Identifier	s		11166462	0					
ANR	11166473	EqualityExpression	s -> procs . process == s_stdin_read_process		11166462	1		==			
ANR	11166474	MemberAccess	s -> procs . process		11166462	0					
ANR	11166475	PtrMemberAccess	s -> procs		11166462	0					
ANR	11166476	Identifier	s		11166462	0					
ANR	11166477	Identifier	procs		11166462	1					
ANR	11166478	Identifier	process		11166462	1					
ANR	11166479	Identifier	s_stdin_read_process		11166462	1					
ANR	11166480	ReturnType	bool		11166462	1					
ANR	11166481	Identifier	zis_stdin		11166462	2					
ANR	11166482	ParameterList	const stream * s		11166462	3					
ANR	11166483	Parameter	const stream * s	184:10:5989:6003	11166462	0	True				
ANR	11166484	ParameterType	const stream *		11166462	0					
ANR	11166485	Identifier	s		11166462	1					
ANR	11166486	CFGEntryNode	ENTRY		11166462		True				
ANR	11166487	CFGExitNode	EXIT		11166462		True				
ANR	11166488	Symbol	s_is_valid		11166462						
ANR	11166489	Symbol	s		11166462						
ANR	11166490	Symbol	s -> procs		11166462						
ANR	11166491	Symbol	s -> procs . process		11166462						
ANR	11166492	Symbol	* s		11166462						
ANR	11166493	Symbol	s_stdin_read_process		11166462						
ANR	11166494	Function	s_stdout_write_process	190:0:6147:6538							
ANR	11166495	FunctionDef	"s_stdout_write_process (stream_state * st , stream_cursor_read * pr , stream_cursor_write * ignore_pw , bool last)"		11166494	0					
ANR	11166496	CompoundStatement		193:0:6288:6538	11166494	0					
ANR	11166497	IdentifierDeclStatement	uint count = pr -> limit - pr -> ptr ;	194:4:6294:6326	11166494	0	True				
ANR	11166498	IdentifierDecl	count = pr -> limit - pr -> ptr		11166494	0					
ANR	11166499	IdentifierDeclType	uint		11166494	0					
ANR	11166500	Identifier	count		11166494	1					
ANR	11166501	AssignmentExpression	count = pr -> limit - pr -> ptr		11166494	2		=			
ANR	11166502	Identifier	count		11166494	0					
ANR	11166503	AdditiveExpression	pr -> limit - pr -> ptr		11166494	1		-			
ANR	11166504	PtrMemberAccess	pr -> limit		11166494	0					
ANR	11166505	Identifier	pr		11166494	0					
ANR	11166506	Identifier	limit		11166494	1					
ANR	11166507	PtrMemberAccess	pr -> ptr		11166494	1					
ANR	11166508	Identifier	pr		11166494	0					
ANR	11166509	Identifier	ptr		11166494	1					
ANR	11166510	IdentifierDeclStatement	int written ;	195:4:6332:6343	11166494	1	True				
ANR	11166511	IdentifierDecl	written		11166494	0					
ANR	11166512	IdentifierDeclType	int		11166494	0					
ANR	11166513	Identifier	written		11166494	1					
ANR	11166514	IfStatement	if ( count == 0 )		11166494	2					
ANR	11166515	Condition	count == 0	197:8:6354:6363	11166494	0	True				
ANR	11166516	EqualityExpression	count == 0		11166494	0		==			
ANR	11166517	Identifier	count		11166494	0					
ANR	11166518	PrimaryExpression	0		11166494	1					
ANR	11166519	ReturnStatement	return 0 ;	198:8:6374:6382	11166494	1	True				
ANR	11166520	PrimaryExpression	0		11166494	0					
ANR	11166521	ExpressionStatement	"written = outwrite ( st -> memory , ( const char * ) pr -> ptr + 1 , count )"	199:4:6388:6452	11166494	3	True				
ANR	11166522	AssignmentExpression	"written = outwrite ( st -> memory , ( const char * ) pr -> ptr + 1 , count )"		11166494	0		=			
ANR	11166523	Identifier	written		11166494	0					
ANR	11166524	CallExpression	"outwrite ( st -> memory , ( const char * ) pr -> ptr + 1 , count )"		11166494	1					
ANR	11166525	Callee	outwrite		11166494	0					
ANR	11166526	Identifier	outwrite		11166494	0					
ANR	11166527	ArgumentList	st -> memory		11166494	1					
ANR	11166528	Argument	st -> memory		11166494	0					
ANR	11166529	PtrMemberAccess	st -> memory		11166494	0					
ANR	11166530	Identifier	st		11166494	0					
ANR	11166531	Identifier	memory		11166494	1					
ANR	11166532	Argument	( const char * ) pr -> ptr + 1		11166494	1					
ANR	11166533	AdditiveExpression	( const char * ) pr -> ptr + 1		11166494	0		+			
ANR	11166534	CastExpression	( const char * ) pr -> ptr		11166494	0					
ANR	11166535	CastTarget	const char *		11166494	0					
ANR	11166536	PtrMemberAccess	pr -> ptr		11166494	1					
ANR	11166537	Identifier	pr		11166494	0					
ANR	11166538	Identifier	ptr		11166494	1					
ANR	11166539	PrimaryExpression	1		11166494	1					
ANR	11166540	Argument	count		11166494	2					
ANR	11166541	Identifier	count		11166494	0					
ANR	11166542	IfStatement	if ( written < count )		11166494	4					
ANR	11166543	Condition	written < count	200:8:6462:6476	11166494	0	True				
ANR	11166544	RelationalExpression	written < count		11166494	0		<			
ANR	11166545	Identifier	written		11166494	0					
ANR	11166546	Identifier	count		11166494	1					
ANR	11166547	ReturnStatement	return ERRC ;	201:8:6487:6498	11166494	1	True				
ANR	11166548	Identifier	ERRC		11166494	0					
ANR	11166549	ExpressionStatement	pr -> ptr += written	202:4:6504:6522	11166494	5	True				
ANR	11166550	AssignmentExpression	pr -> ptr += written		11166494	0		+=			
ANR	11166551	PtrMemberAccess	pr -> ptr		11166494	0					
ANR	11166552	Identifier	pr		11166494	0					
ANR	11166553	Identifier	ptr		11166494	1					
ANR	11166554	Identifier	written		11166494	1					
ANR	11166555	ReturnStatement	return 0 ;	203:4:6528:6536	11166494	6	True				
ANR	11166556	PrimaryExpression	0		11166494	0					
ANR	11166557	ReturnType	static int		11166494	1					
ANR	11166558	Identifier	s_stdout_write_process		11166494	2					
ANR	11166559	ParameterList	"stream_state * st , stream_cursor_read * pr , stream_cursor_write * ignore_pw , bool last"		11166494	3					
ANR	11166560	Parameter	stream_state * st	191:23:6181:6197	11166494	0	True				
ANR	11166561	ParameterType	stream_state *		11166494	0					
ANR	11166562	Identifier	st		11166494	1					
ANR	11166563	Parameter	stream_cursor_read * pr	191:42:6200:6221	11166494	1	True				
ANR	11166564	ParameterType	stream_cursor_read *		11166494	0					
ANR	11166565	Identifier	pr		11166494	1					
ANR	11166566	Parameter	stream_cursor_write * ignore_pw	192:21:6245:6274	11166494	2	True				
ANR	11166567	ParameterType	stream_cursor_write *		11166494	0					
ANR	11166568	Identifier	ignore_pw		11166494	1					
ANR	11166569	Parameter	bool last	192:53:6277:6285	11166494	3	True				
ANR	11166570	ParameterType	bool		11166494	0					
ANR	11166571	Identifier	last		11166494	1					
ANR	11166572	CFGEntryNode	ENTRY		11166494		True				
ANR	11166573	CFGExitNode	EXIT		11166494		True				
ANR	11166574	Symbol	st		11166494						
ANR	11166575	Symbol	outwrite		11166494						
ANR	11166576	Symbol	pr		11166494						
ANR	11166577	Symbol	ignore_pw		11166494						
ANR	11166578	Symbol	last		11166494						
ANR	11166579	Symbol	* st		11166494						
ANR	11166580	Symbol	st -> memory		11166494						
ANR	11166581	Symbol	count		11166494						
ANR	11166582	Symbol	* pr		11166494						
ANR	11166583	Symbol	pr -> limit		11166494						
ANR	11166584	Symbol	written		11166494						
ANR	11166585	Symbol	pr -> ptr		11166494						
ANR	11166586	Symbol	ERRC		11166494						
ANR	11166587	Function	stdout_open	206:0:6541:7732							
ANR	11166588	FunctionDef	"stdout_open (gx_io_device * iodev , const char * access , stream * * ps , gs_memory_t * mem)"		11166587	0					
ANR	11166589	CompoundStatement		209:0:6651:7732	11166587	0					
ANR	11166590	IdentifierDeclStatement	i_ctx_t * i_ctx_p = ( i_ctx_t * ) iodev -> state ;	210:4:6657:6699	11166587	0	True				
ANR	11166591	IdentifierDecl	* i_ctx_p = ( i_ctx_t * ) iodev -> state		11166587	0					
ANR	11166592	IdentifierDeclType	i_ctx_t *		11166587	0					
ANR	11166593	Identifier	i_ctx_p		11166587	1					
ANR	11166594	AssignmentExpression	* i_ctx_p = ( i_ctx_t * ) iodev -> state		11166587	2		=			
ANR	11166595	Identifier	i_ctx_p		11166587	0					
ANR	11166596	CastExpression	( i_ctx_t * ) iodev -> state		11166587	1					
ANR	11166597	CastTarget	i_ctx_t *		11166587	0					
ANR	11166598	PtrMemberAccess	iodev -> state		11166587	1					
ANR	11166599	Identifier	iodev		11166587	0					
ANR	11166600	Identifier	state		11166587	1					
ANR	11166601	IdentifierDeclStatement	stream * s ;	211:4:6721:6730	11166587	1	True				
ANR	11166602	IdentifierDecl	* s		11166587	0					
ANR	11166603	IdentifierDeclType	stream *		11166587	0					
ANR	11166604	Identifier	s		11166587	1					
ANR	11166605	IfStatement	"if ( ! streq1 ( access , 'w' ) )"		11166587	2					
ANR	11166606	Condition	"! streq1 ( access , 'w' )"	213:8:6741:6760	11166587	0	True				
ANR	11166607	UnaryOperationExpression	"! streq1 ( access , 'w' )"		11166587	0					
ANR	11166608	UnaryOperator	!		11166587	0					
ANR	11166609	CallExpression	"streq1 ( access , 'w' )"		11166587	1					
ANR	11166610	Callee	streq1		11166587	0					
ANR	11166611	Identifier	streq1		11166587	0					
ANR	11166612	ArgumentList	access		11166587	1					
ANR	11166613	Argument	access		11166587	0					
ANR	11166614	Identifier	access		11166587	0					
ANR	11166615	Argument	'w'		11166587	1					
ANR	11166616	PrimaryExpression	'w'		11166587	0					
ANR	11166617	ExpressionStatement	return_error ( gs_error_invalidfileaccess )	214:8:6771:6811	11166587	1	True				
ANR	11166618	CallExpression	return_error ( gs_error_invalidfileaccess )		11166587	0					
ANR	11166619	Callee	return_error		11166587	0					
ANR	11166620	Identifier	return_error		11166587	0					
ANR	11166621	ArgumentList	gs_error_invalidfileaccess		11166587	1					
ANR	11166622	Argument	gs_error_invalidfileaccess		11166587	0					
ANR	11166623	Identifier	gs_error_invalidfileaccess		11166587	0					
ANR	11166624	IfStatement	"if ( file_is_invalid ( s , & ref_stdout ) )"		11166587	3					
ANR	11166625	Condition	"file_is_invalid ( s , & ref_stdout )"	215:8:6821:6851	11166587	0	True				
ANR	11166626	CallExpression	"file_is_invalid ( s , & ref_stdout )"		11166587	0					
ANR	11166627	Callee	file_is_invalid		11166587	0					
ANR	11166628	Identifier	file_is_invalid		11166587	0					
ANR	11166629	ArgumentList	s		11166587	1					
ANR	11166630	Argument	s		11166587	0					
ANR	11166631	Identifier	s		11166587	0					
ANR	11166632	Argument	& ref_stdout		11166587	1					
ANR	11166633	UnaryOperationExpression	& ref_stdout		11166587	0					
ANR	11166634	UnaryOperator	&		11166587	0					
ANR	11166635	Identifier	ref_stdout		11166587	1					
ANR	11166636	CompoundStatement		10:15:284:453	11166587	1					
ANR	11166637	IdentifierDeclStatement	gs_memory_t * sysmem = imemory_system ;	216:8:6864:6900	11166587	0	True				
ANR	11166638	IdentifierDecl	* sysmem = imemory_system		11166587	0					
ANR	11166639	IdentifierDeclType	gs_memory_t *		11166587	0					
ANR	11166640	Identifier	sysmem		11166587	1					
ANR	11166641	AssignmentExpression	* sysmem = imemory_system		11166587	2		=			
ANR	11166642	Identifier	imemory_system		11166587	0					
ANR	11166643	Identifier	imemory_system		11166587	1					
ANR	11166644	IdentifierDeclStatement	byte * buf ;	217:8:6910:6919	11166587	1	True				
ANR	11166645	IdentifierDecl	* buf		11166587	0					
ANR	11166646	IdentifierDeclType	byte *		11166587	0					
ANR	11166647	Identifier	buf		11166587	1					
ANR	11166648	Statement	static	218:8:6929:6934	11166587	2	True				
ANR	11166649	IdentifierDeclStatement	"const stream_procs p = { s_std_noavailable , s_std_noseek , s_std_write_reset , s_std_write_flush , file_close_file , s_stdout_write_process } ;"	218:15:6936:7105	11166587	3	True				
ANR	11166650	IdentifierDecl	"p = { s_std_noavailable , s_std_noseek , s_std_write_reset , s_std_write_flush , file_close_file , s_stdout_write_process }"		11166587	0					
ANR	11166651	IdentifierDeclType	const stream_procs		11166587	0					
ANR	11166652	Identifier	p		11166587	1					
ANR	11166653	AssignmentExpression	"p = { s_std_noavailable , s_std_noseek , s_std_write_reset , s_std_write_flush , file_close_file , s_stdout_write_process }"		11166587	2		=			
ANR	11166654	Identifier	p		11166587	0					
ANR	11166655	InitializerList	s_std_noavailable		11166587	1					
ANR	11166656	Identifier	s_std_noavailable		11166587	0					
ANR	11166657	Identifier	s_std_noseek		11166587	1					
ANR	11166658	Identifier	s_std_write_reset		11166587	2					
ANR	11166659	Identifier	s_std_write_flush		11166587	3					
ANR	11166660	Identifier	file_close_file		11166587	4					
ANR	11166661	Identifier	s_stdout_write_process		11166587	5					
ANR	11166662	ExpressionStatement	"s = file_alloc_stream ( sysmem , ""stdout_open(stream)"" )"	223:8:7116:7168	11166587	4	True				
ANR	11166663	AssignmentExpression	"s = file_alloc_stream ( sysmem , ""stdout_open(stream)"" )"		11166587	0		=			
ANR	11166664	Identifier	s		11166587	0					
ANR	11166665	CallExpression	"file_alloc_stream ( sysmem , ""stdout_open(stream)"" )"		11166587	1					
ANR	11166666	Callee	file_alloc_stream		11166587	0					
ANR	11166667	Identifier	file_alloc_stream		11166587	0					
ANR	11166668	ArgumentList	sysmem		11166587	1					
ANR	11166669	Argument	sysmem		11166587	0					
ANR	11166670	Identifier	sysmem		11166587	0					
ANR	11166671	Argument	"""stdout_open(stream)"""		11166587	1					
ANR	11166672	PrimaryExpression	"""stdout_open(stream)"""		11166587	0					
ANR	11166673	ExpressionStatement	"buf = gs_alloc_bytes ( sysmem , STDOUT_BUF_SIZE , ""stdout_open(buffer)"" )"	224:8:7178:7246	11166587	5	True				
ANR	11166674	AssignmentExpression	"buf = gs_alloc_bytes ( sysmem , STDOUT_BUF_SIZE , ""stdout_open(buffer)"" )"		11166587	0		=			
ANR	11166675	Identifier	buf		11166587	0					
ANR	11166676	CallExpression	"gs_alloc_bytes ( sysmem , STDOUT_BUF_SIZE , ""stdout_open(buffer)"" )"		11166587	1					
ANR	11166677	Callee	gs_alloc_bytes		11166587	0					
ANR	11166678	Identifier	gs_alloc_bytes		11166587	0					
ANR	11166679	ArgumentList	sysmem		11166587	1					
ANR	11166680	Argument	sysmem		11166587	0					
ANR	11166681	Identifier	sysmem		11166587	0					
ANR	11166682	Argument	STDOUT_BUF_SIZE		11166587	1					
ANR	11166683	Identifier	STDOUT_BUF_SIZE		11166587	0					
ANR	11166684	Argument	"""stdout_open(buffer)"""		11166587	2					
ANR	11166685	PrimaryExpression	"""stdout_open(buffer)"""		11166587	0					
ANR	11166686	IfStatement	if ( s == 0 || buf == 0 )		11166587	6					
ANR	11166687	Condition	s == 0 || buf == 0	225:12:7260:7277	11166587	0	True				
ANR	11166688	OrExpression	s == 0 || buf == 0		11166587	0		||			
ANR	11166689	EqualityExpression	s == 0		11166587	0		==			
ANR	11166690	Identifier	s		11166587	0					
ANR	11166691	PrimaryExpression	0		11166587	1					
ANR	11166692	EqualityExpression	buf == 0		11166587	1		==			
ANR	11166693	Identifier	buf		11166587	0					
ANR	11166694	PrimaryExpression	0		11166587	1					
ANR	11166695	ExpressionStatement	return_error ( gs_error_VMerror )	226:12:7292:7322	11166587	1	True				
ANR	11166696	CallExpression	return_error ( gs_error_VMerror )		11166587	0					
ANR	11166697	Callee	return_error		11166587	0					
ANR	11166698	Identifier	return_error		11166587	0					
ANR	11166699	ArgumentList	gs_error_VMerror		11166587	1					
ANR	11166700	Argument	gs_error_VMerror		11166587	0					
ANR	11166701	Identifier	gs_error_VMerror		11166587	0					
ANR	11166702	ExpressionStatement	"s_std_init ( s , buf , STDOUT_BUF_SIZE , & p , s_mode_write )"	227:8:7332:7385	11166587	7	True				
ANR	11166703	CallExpression	"s_std_init ( s , buf , STDOUT_BUF_SIZE , & p , s_mode_write )"		11166587	0					
ANR	11166704	Callee	s_std_init		11166587	0					
ANR	11166705	Identifier	s_std_init		11166587	0					
ANR	11166706	ArgumentList	s		11166587	1					
ANR	11166707	Argument	s		11166587	0					
ANR	11166708	Identifier	s		11166587	0					
ANR	11166709	Argument	buf		11166587	1					
ANR	11166710	Identifier	buf		11166587	0					
ANR	11166711	Argument	STDOUT_BUF_SIZE		11166587	2					
ANR	11166712	Identifier	STDOUT_BUF_SIZE		11166587	0					
ANR	11166713	Argument	& p		11166587	3					
ANR	11166714	UnaryOperationExpression	& p		11166587	0					
ANR	11166715	UnaryOperator	&		11166587	0					
ANR	11166716	Identifier	p		11166587	1					
ANR	11166717	Argument	s_mode_write		11166587	4					
ANR	11166718	Identifier	s_mode_write		11166587	0					
ANR	11166719	ExpressionStatement	s -> file = 0	228:8:7395:7406	11166587	8	True				
ANR	11166720	AssignmentExpression	s -> file = 0		11166587	0		=			
ANR	11166721	PtrMemberAccess	s -> file		11166587	0					
ANR	11166722	Identifier	s		11166587	0					
ANR	11166723	Identifier	file		11166587	1					
ANR	11166724	PrimaryExpression	0		11166587	1					
ANR	11166725	ExpressionStatement	s -> file_modes = s -> modes	229:8:7416:7440	11166587	9	True				
ANR	11166726	AssignmentExpression	s -> file_modes = s -> modes		11166587	0		=			
ANR	11166727	PtrMemberAccess	s -> file_modes		11166587	0					
ANR	11166728	Identifier	s		11166587	0					
ANR	11166729	Identifier	file_modes		11166587	1					
ANR	11166730	PtrMemberAccess	s -> modes		11166587	1					
ANR	11166731	Identifier	s		11166587	0					
ANR	11166732	Identifier	modes		11166587	1					
ANR	11166733	ExpressionStatement	s -> file_offset = 0	230:8:7450:7468	11166587	10	True				
ANR	11166734	AssignmentExpression	s -> file_offset = 0		11166587	0		=			
ANR	11166735	PtrMemberAccess	s -> file_offset		11166587	0					
ANR	11166736	Identifier	s		11166587	0					
ANR	11166737	Identifier	file_offset		11166587	1					
ANR	11166738	PrimaryExpression	0		11166587	1					
ANR	11166739	ExpressionStatement	s -> file_limit = S_FILE_LIMIT_MAX	231:8:7520:7552	11166587	11	True				
ANR	11166740	AssignmentExpression	s -> file_limit = S_FILE_LIMIT_MAX		11166587	0		=			
ANR	11166741	PtrMemberAccess	s -> file_limit		11166587	0					
ANR	11166742	Identifier	s		11166587	0					
ANR	11166743	Identifier	file_limit		11166587	1					
ANR	11166744	Identifier	S_FILE_LIMIT_MAX		11166587	1					
ANR	11166745	ExpressionStatement	s -> save_close = s -> procs . flush	232:8:7562:7592	11166587	12	True				
ANR	11166746	AssignmentExpression	s -> save_close = s -> procs . flush		11166587	0		=			
ANR	11166747	PtrMemberAccess	s -> save_close		11166587	0					
ANR	11166748	Identifier	s		11166587	0					
ANR	11166749	Identifier	save_close		11166587	1					
ANR	11166750	MemberAccess	s -> procs . flush		11166587	1					
ANR	11166751	PtrMemberAccess	s -> procs		11166587	0					
ANR	11166752	Identifier	s		11166587	0					
ANR	11166753	Identifier	procs		11166587	1					
ANR	11166754	Identifier	flush		11166587	1					
ANR	11166755	ExpressionStatement	"make_file ( & ref_stdout , a_write | avm_system , s -> write_id , s )"	233:8:7602:7662	11166587	13	True				
ANR	11166756	CallExpression	"make_file ( & ref_stdout , a_write | avm_system , s -> write_id , s )"		11166587	0					
ANR	11166757	Callee	make_file		11166587	0					
ANR	11166758	Identifier	make_file		11166587	0					
ANR	11166759	ArgumentList	& ref_stdout		11166587	1					
ANR	11166760	Argument	& ref_stdout		11166587	0					
ANR	11166761	UnaryOperationExpression	& ref_stdout		11166587	0					
ANR	11166762	UnaryOperator	&		11166587	0					
ANR	11166763	Identifier	ref_stdout		11166587	1					
ANR	11166764	Argument	a_write | avm_system		11166587	1					
ANR	11166765	InclusiveOrExpression	a_write | avm_system		11166587	0		|			
ANR	11166766	Identifier	a_write		11166587	0					
ANR	11166767	Identifier	avm_system		11166587	1					
ANR	11166768	Argument	s -> write_id		11166587	2					
ANR	11166769	PtrMemberAccess	s -> write_id		11166587	0					
ANR	11166770	Identifier	s		11166587	0					
ANR	11166771	Identifier	write_id		11166587	1					
ANR	11166772	Argument	s		11166587	3					
ANR	11166773	Identifier	s		11166587	0					
ANR	11166774	ExpressionStatement	* ps = s	234:8:7672:7679	11166587	14	True				
ANR	11166775	AssignmentExpression	* ps = s		11166587	0		=			
ANR	11166776	UnaryOperationExpression	* ps		11166587	0					
ANR	11166777	UnaryOperator	*		11166587	0					
ANR	11166778	Identifier	ps		11166587	1					
ANR	11166779	Identifier	s		11166587	1					
ANR	11166780	ReturnStatement	return 1 ;	235:8:7689:7697	11166587	15	True				
ANR	11166781	PrimaryExpression	1		11166587	0					
ANR	11166782	ExpressionStatement	* ps = s	237:4:7709:7716	11166587	4	True				
ANR	11166783	AssignmentExpression	* ps = s		11166587	0		=			
ANR	11166784	UnaryOperationExpression	* ps		11166587	0					
ANR	11166785	UnaryOperator	*		11166587	0					
ANR	11166786	Identifier	ps		11166587	1					
ANR	11166787	Identifier	s		11166587	1					
ANR	11166788	ReturnStatement	return 0 ;	238:4:7722:7730	11166587	5	True				
ANR	11166789	PrimaryExpression	0		11166587	0					
ANR	11166790	ReturnType	static int		11166587	1					
ANR	11166791	Identifier	stdout_open		11166587	2					
ANR	11166792	ParameterList	"gx_io_device * iodev , const char * access , stream * * ps , gs_memory_t * mem"		11166587	3					
ANR	11166793	Parameter	gx_io_device * iodev	207:12:6564:6583	11166587	0	True				
ANR	11166794	ParameterType	gx_io_device *		11166587	0					
ANR	11166795	Identifier	iodev		11166587	1					
ANR	11166796	Parameter	const char * access	207:34:6586:6603	11166587	1	True				
ANR	11166797	ParameterType	const char *		11166587	0					
ANR	11166798	Identifier	access		11166587	1					
ANR	11166799	Parameter	stream * * ps	207:54:6606:6617	11166587	2	True				
ANR	11166800	ParameterType	stream * *		11166587	0					
ANR	11166801	Identifier	ps		11166587	1					
ANR	11166802	Parameter	gs_memory_t * mem	208:12:6632:6648	11166587	3	True				
ANR	11166803	ParameterType	gs_memory_t *		11166587	0					
ANR	11166804	Identifier	mem		11166587	1					
ANR	11166805	CFGEntryNode	ENTRY		11166587		True				
ANR	11166806	CFGExitNode	EXIT		11166587		True				
ANR	11166807	Symbol	access		11166587						
ANR	11166808	Symbol	ps		11166587						
ANR	11166809	Symbol	s -> file		11166587						
ANR	11166810	Symbol	s_std_write_flush		11166587						
ANR	11166811	Symbol	s_mode_write		11166587						
ANR	11166812	Symbol	S_FILE_LIMIT_MAX		11166587						
ANR	11166813	Symbol	s -> file_limit		11166587						
ANR	11166814	Symbol	& ref_stdout		11166587						
ANR	11166815	Symbol	s -> write_id		11166587						
ANR	11166816	Symbol	file_alloc_stream		11166587						
ANR	11166817	Symbol	iodev		11166587						
ANR	11166818	Symbol	mem		11166587						
ANR	11166819	Symbol	file_is_invalid		11166587						
ANR	11166820	Symbol	a_write		11166587						
ANR	11166821	Symbol	s -> procs . flush		11166587						
ANR	11166822	Symbol	s_stdout_write_process		11166587						
ANR	11166823	Symbol	streq1		11166587						
ANR	11166824	Symbol	gs_alloc_bytes		11166587						
ANR	11166825	Symbol	s -> save_close		11166587						
ANR	11166826	Symbol	* iodev		11166587						
ANR	11166827	Symbol	s -> procs		11166587						
ANR	11166828	Symbol	imemory_system		11166587						
ANR	11166829	Symbol	s_std_write_reset		11166587						
ANR	11166830	Symbol	s -> file_modes		11166587						
ANR	11166831	Symbol	s -> file_offset		11166587						
ANR	11166832	Symbol	STDOUT_BUF_SIZE		11166587						
ANR	11166833	Symbol	* ps		11166587						
ANR	11166834	Symbol	p		11166587						
ANR	11166835	Symbol	gs_error_VMerror		11166587						
ANR	11166836	Symbol	buf		11166587						
ANR	11166837	Symbol	s		11166587						
ANR	11166838	Symbol	sysmem		11166587						
ANR	11166839	Symbol	i_ctx_p		11166587						
ANR	11166840	Symbol	& p		11166587						
ANR	11166841	Symbol	iodev -> state		11166587						
ANR	11166842	Symbol	s_std_noavailable		11166587						
ANR	11166843	Symbol	s_std_noseek		11166587						
ANR	11166844	Symbol	gs_error_invalidfileaccess		11166587						
ANR	11166845	Symbol	* s		11166587						
ANR	11166846	Symbol	avm_system		11166587						
ANR	11166847	Symbol	file_close_file		11166587						
ANR	11166848	Symbol	s -> modes		11166587						
ANR	11166849	Function	zget_stdout	242:0:7799:8202							
ANR	11166850	FunctionDef	"zget_stdout (i_ctx_t * i_ctx_p , stream * * ps)"		11166849	0					
ANR	11166851	CompoundStatement		244:0:7847:8202	11166849	0					
ANR	11166852	IdentifierDeclStatement	stream * s ;	245:4:7853:7862	11166849	0	True				
ANR	11166853	IdentifierDecl	* s		11166849	0					
ANR	11166854	IdentifierDeclType	stream *		11166849	0					
ANR	11166855	Identifier	s		11166849	1					
ANR	11166856	IdentifierDeclStatement	gx_io_device * iodev ;	246:4:7868:7887	11166849	1	True				
ANR	11166857	IdentifierDecl	* iodev		11166849	0					
ANR	11166858	IdentifierDeclType	gx_io_device *		11166849	0					
ANR	11166859	Identifier	iodev		11166849	1					
ANR	11166860	IdentifierDeclStatement	int code ;	247:4:7893:7901	11166849	2	True				
ANR	11166861	IdentifierDecl	code		11166849	0					
ANR	11166862	IdentifierDeclType	int		11166849	0					
ANR	11166863	Identifier	code		11166849	1					
ANR	11166864	IfStatement	"if ( file_is_valid ( s , & ref_stdout ) )"		11166849	3					
ANR	11166865	Condition	"file_is_valid ( s , & ref_stdout )"	249:8:7912:7940	11166849	0	True				
ANR	11166866	CallExpression	"file_is_valid ( s , & ref_stdout )"		11166849	0					
ANR	11166867	Callee	file_is_valid		11166849	0					
ANR	11166868	Identifier	file_is_valid		11166849	0					
ANR	11166869	ArgumentList	s		11166849	1					
ANR	11166870	Argument	s		11166849	0					
ANR	11166871	Identifier	s		11166849	0					
ANR	11166872	Argument	& ref_stdout		11166849	1					
ANR	11166873	UnaryOperationExpression	& ref_stdout		11166849	0					
ANR	11166874	UnaryOperator	&		11166849	0					
ANR	11166875	Identifier	ref_stdout		11166849	1					
ANR	11166876	CompoundStatement		6:39:95:95	11166849	1					
ANR	11166877	ExpressionStatement	* ps = s	250:8:7953:7960	11166849	0	True				
ANR	11166878	AssignmentExpression	* ps = s		11166849	0		=			
ANR	11166879	UnaryOperationExpression	* ps		11166849	0					
ANR	11166880	UnaryOperator	*		11166849	0					
ANR	11166881	Identifier	ps		11166849	1					
ANR	11166882	Identifier	s		11166849	1					
ANR	11166883	ReturnStatement	return 0 ;	251:8:7970:7978	11166849	1	True				
ANR	11166884	PrimaryExpression	0		11166849	0					
ANR	11166885	ExpressionStatement	"iodev = gs_findiodevice ( imemory , ( const byte * ) ""%stdout"" , 7 )"	253:4:7990:8050	11166849	4	True				
ANR	11166886	AssignmentExpression	"iodev = gs_findiodevice ( imemory , ( const byte * ) ""%stdout"" , 7 )"		11166849	0		=			
ANR	11166887	Identifier	iodev		11166849	0					
ANR	11166888	CallExpression	"gs_findiodevice ( imemory , ( const byte * ) ""%stdout"" , 7 )"		11166849	1					
ANR	11166889	Callee	gs_findiodevice		11166849	0					
ANR	11166890	Identifier	gs_findiodevice		11166849	0					
ANR	11166891	ArgumentList	imemory		11166849	1					
ANR	11166892	Argument	imemory		11166849	0					
ANR	11166893	Identifier	imemory		11166849	0					
ANR	11166894	Argument	"( const byte * ) ""%stdout"""		11166849	1					
ANR	11166895	CastExpression	"( const byte * ) ""%stdout"""		11166849	0					
ANR	11166896	CastTarget	const byte *		11166849	0					
ANR	11166897	PrimaryExpression	"""%stdout"""		11166849	1					
ANR	11166898	Argument	7		11166849	2					
ANR	11166899	PrimaryExpression	7		11166849	0					
ANR	11166900	ExpressionStatement	iodev -> state = i_ctx_p	254:4:8056:8078	11166849	5	True				
ANR	11166901	AssignmentExpression	iodev -> state = i_ctx_p		11166849	0		=			
ANR	11166902	PtrMemberAccess	iodev -> state		11166849	0					
ANR	11166903	Identifier	iodev		11166849	0					
ANR	11166904	Identifier	state		11166849	1					
ANR	11166905	Identifier	i_ctx_p		11166849	1					
ANR	11166906	ExpressionStatement	"code = ( * iodev -> procs . open_device ) ( iodev , ""w"" , ps , imemory_system )"	255:4:8084:8150	11166849	6	True				
ANR	11166907	AssignmentExpression	"code = ( * iodev -> procs . open_device ) ( iodev , ""w"" , ps , imemory_system )"		11166849	0		=			
ANR	11166908	Identifier	code		11166849	0					
ANR	11166909	CallExpression	"( * iodev -> procs . open_device ) ( iodev , ""w"" , ps , imemory_system )"		11166849	1					
ANR	11166910	Callee	* iodev -> procs . open_device		11166849	0					
ANR	11166911	UnaryOperationExpression	* iodev -> procs . open_device		11166849	0					
ANR	11166912	UnaryOperator	*		11166849	0					
ANR	11166913	MemberAccess	iodev -> procs . open_device		11166849	1					
ANR	11166914	PtrMemberAccess	iodev -> procs		11166849	0					
ANR	11166915	Identifier	iodev		11166849	0					
ANR	11166916	Identifier	procs		11166849	1					
ANR	11166917	Identifier	open_device		11166849	1					
ANR	11166918	ArgumentList	iodev		11166849	1					
ANR	11166919	Argument	iodev		11166849	0					
ANR	11166920	Identifier	iodev		11166849	0					
ANR	11166921	Argument	"""w"""		11166849	1					
ANR	11166922	PrimaryExpression	"""w"""		11166849	0					
ANR	11166923	Argument	ps		11166849	2					
ANR	11166924	Identifier	ps		11166849	0					
ANR	11166925	Argument	imemory_system		11166849	3					
ANR	11166926	Identifier	imemory_system		11166849	0					
ANR	11166927	ExpressionStatement	iodev -> state = NULL	256:4:8156:8175	11166849	7	True				
ANR	11166928	AssignmentExpression	iodev -> state = NULL		11166849	0		=			
ANR	11166929	PtrMemberAccess	iodev -> state		11166849	0					
ANR	11166930	Identifier	iodev		11166849	0					
ANR	11166931	Identifier	state		11166849	1					
ANR	11166932	Identifier	NULL		11166849	1					
ANR	11166933	ReturnStatement	"return min ( code , 0 ) ;"	257:4:8181:8200	11166849	8	True				
ANR	11166934	CallExpression	"min ( code , 0 )"		11166849	0					
ANR	11166935	Callee	min		11166849	0					
ANR	11166936	Identifier	min		11166849	0					
ANR	11166937	ArgumentList	code		11166849	1					
ANR	11166938	Argument	code		11166849	0					
ANR	11166939	Identifier	code		11166849	0					
ANR	11166940	Argument	0		11166849	1					
ANR	11166941	PrimaryExpression	0		11166849	0					
ANR	11166942	ReturnType	int		11166849	1					
ANR	11166943	Identifier	zget_stdout		11166849	2					
ANR	11166944	ParameterList	"i_ctx_t * i_ctx_p , stream * * ps"		11166849	3					
ANR	11166945	Parameter	i_ctx_t * i_ctx_p	243:12:7815:7830	11166849	0	True				
ANR	11166946	ParameterType	i_ctx_t *		11166849	0					
ANR	11166947	Identifier	i_ctx_p		11166849	1					
ANR	11166948	Parameter	stream * * ps	243:30:7833:7844	11166849	1	True				
ANR	11166949	ParameterType	stream * *		11166849	0					
ANR	11166950	Identifier	ps		11166849	1					
ANR	11166951	CFGEntryNode	ENTRY		11166849		True				
ANR	11166952	CFGExitNode	EXIT		11166849		True				
ANR	11166953	Symbol	ps		11166849						
ANR	11166954	Symbol	code		11166849						
ANR	11166955	Symbol	NULL		11166849						
ANR	11166956	Symbol	* iodev		11166849						
ANR	11166957	Symbol	imemory_system		11166849						
ANR	11166958	Symbol	* iodev -> procs		11166849						
ANR	11166959	Symbol	* ps		11166849						
ANR	11166960	Symbol	gs_findiodevice		11166849						
ANR	11166961	Symbol	& ref_stdout		11166849						
ANR	11166962	Symbol	iodev -> procs . open_device		11166849						
ANR	11166963	Symbol	s		11166849						
ANR	11166964	Symbol	min		11166849						
ANR	11166965	Symbol	iodev		11166849						
ANR	11166966	Symbol	* iodev -> procs . open_device		11166849						
ANR	11166967	Symbol	i_ctx_p		11166849						
ANR	11166968	Symbol	file_is_valid		11166849						
ANR	11166969	Symbol	iodev -> state		11166849						
ANR	11166970	Symbol	imemory		11166849						
ANR	11166971	Symbol	iodev -> procs		11166849						
ANR	11166972	Symbol	* * iodev		11166849						
ANR	11166973	Function	s_stderr_write_process	261:0:8269:8662							
ANR	11166974	FunctionDef	"s_stderr_write_process (stream_state * st , stream_cursor_read * pr , stream_cursor_write * ignore_pw , bool last)"		11166973	0					
ANR	11166975	CompoundStatement		264:0:8410:8662	11166973	0					
ANR	11166976	IdentifierDeclStatement	uint count = pr -> limit - pr -> ptr ;	265:4:8416:8448	11166973	0	True				
ANR	11166977	IdentifierDecl	count = pr -> limit - pr -> ptr		11166973	0					
ANR	11166978	IdentifierDeclType	uint		11166973	0					
ANR	11166979	Identifier	count		11166973	1					
ANR	11166980	AssignmentExpression	count = pr -> limit - pr -> ptr		11166973	2		=			
ANR	11166981	Identifier	count		11166973	0					
ANR	11166982	AdditiveExpression	pr -> limit - pr -> ptr		11166973	1		-			
ANR	11166983	PtrMemberAccess	pr -> limit		11166973	0					
ANR	11166984	Identifier	pr		11166973	0					
ANR	11166985	Identifier	limit		11166973	1					
ANR	11166986	PtrMemberAccess	pr -> ptr		11166973	1					
ANR	11166987	Identifier	pr		11166973	0					
ANR	11166988	Identifier	ptr		11166973	1					
ANR	11166989	IdentifierDeclStatement	int written ;	266:4:8454:8465	11166973	1	True				
ANR	11166990	IdentifierDecl	written		11166973	0					
ANR	11166991	IdentifierDeclType	int		11166973	0					
ANR	11166992	Identifier	written		11166973	1					
ANR	11166993	IfStatement	if ( count == 0 )		11166973	2					
ANR	11166994	Condition	count == 0	268:8:8476:8485	11166973	0	True				
ANR	11166995	EqualityExpression	count == 0		11166973	0		==			
ANR	11166996	Identifier	count		11166973	0					
ANR	11166997	PrimaryExpression	0		11166973	1					
ANR	11166998	ReturnStatement	return 0 ;	269:8:8496:8504	11166973	1	True				
ANR	11166999	PrimaryExpression	0		11166973	0					
ANR	11167000	ExpressionStatement	"written = errwrite ( st -> memory , ( const char * ) ( pr -> ptr + 1 ) , count )"	270:4:8510:8576	11166973	3	True				
ANR	11167001	AssignmentExpression	"written = errwrite ( st -> memory , ( const char * ) ( pr -> ptr + 1 ) , count )"		11166973	0		=			
ANR	11167002	Identifier	written		11166973	0					
ANR	11167003	CallExpression	"errwrite ( st -> memory , ( const char * ) ( pr -> ptr + 1 ) , count )"		11166973	1					
ANR	11167004	Callee	errwrite		11166973	0					
ANR	11167005	Identifier	errwrite		11166973	0					
ANR	11167006	ArgumentList	st -> memory		11166973	1					
ANR	11167007	Argument	st -> memory		11166973	0					
ANR	11167008	PtrMemberAccess	st -> memory		11166973	0					
ANR	11167009	Identifier	st		11166973	0					
ANR	11167010	Identifier	memory		11166973	1					
ANR	11167011	Argument	( const char * ) ( pr -> ptr + 1 )		11166973	1					
ANR	11167012	CastExpression	( const char * ) ( pr -> ptr + 1 )		11166973	0					
ANR	11167013	CastTarget	const char *		11166973	0					
ANR	11167014	AdditiveExpression	pr -> ptr + 1		11166973	1		+			
ANR	11167015	PtrMemberAccess	pr -> ptr		11166973	0					
ANR	11167016	Identifier	pr		11166973	0					
ANR	11167017	Identifier	ptr		11166973	1					
ANR	11167018	PrimaryExpression	1		11166973	1					
ANR	11167019	Argument	count		11166973	2					
ANR	11167020	Identifier	count		11166973	0					
ANR	11167021	IfStatement	if ( written < count )		11166973	4					
ANR	11167022	Condition	written < count	271:8:8586:8600	11166973	0	True				
ANR	11167023	RelationalExpression	written < count		11166973	0		<			
ANR	11167024	Identifier	written		11166973	0					
ANR	11167025	Identifier	count		11166973	1					
ANR	11167026	ReturnStatement	return ERRC ;	272:8:8611:8622	11166973	1	True				
ANR	11167027	Identifier	ERRC		11166973	0					
ANR	11167028	ExpressionStatement	pr -> ptr += written	273:4:8628:8646	11166973	5	True				
ANR	11167029	AssignmentExpression	pr -> ptr += written		11166973	0		+=			
ANR	11167030	PtrMemberAccess	pr -> ptr		11166973	0					
ANR	11167031	Identifier	pr		11166973	0					
ANR	11167032	Identifier	ptr		11166973	1					
ANR	11167033	Identifier	written		11166973	1					
ANR	11167034	ReturnStatement	return 0 ;	274:4:8652:8660	11166973	6	True				
ANR	11167035	PrimaryExpression	0		11166973	0					
ANR	11167036	ReturnType	static int		11166973	1					
ANR	11167037	Identifier	s_stderr_write_process		11166973	2					
ANR	11167038	ParameterList	"stream_state * st , stream_cursor_read * pr , stream_cursor_write * ignore_pw , bool last"		11166973	3					
ANR	11167039	Parameter	stream_state * st	262:23:8303:8319	11166973	0	True				
ANR	11167040	ParameterType	stream_state *		11166973	0					
ANR	11167041	Identifier	st		11166973	1					
ANR	11167042	Parameter	stream_cursor_read * pr	262:42:8322:8343	11166973	1	True				
ANR	11167043	ParameterType	stream_cursor_read *		11166973	0					
ANR	11167044	Identifier	pr		11166973	1					
ANR	11167045	Parameter	stream_cursor_write * ignore_pw	263:21:8367:8396	11166973	2	True				
ANR	11167046	ParameterType	stream_cursor_write *		11166973	0					
ANR	11167047	Identifier	ignore_pw		11166973	1					
ANR	11167048	Parameter	bool last	263:53:8399:8407	11166973	3	True				
ANR	11167049	ParameterType	bool		11166973	0					
ANR	11167050	Identifier	last		11166973	1					
ANR	11167051	CFGEntryNode	ENTRY		11166973		True				
ANR	11167052	CFGExitNode	EXIT		11166973		True				
ANR	11167053	Symbol	st		11166973						
ANR	11167054	Symbol	pr		11166973						
ANR	11167055	Symbol	ignore_pw		11166973						
ANR	11167056	Symbol	last		11166973						
ANR	11167057	Symbol	* st		11166973						
ANR	11167058	Symbol	st -> memory		11166973						
ANR	11167059	Symbol	count		11166973						
ANR	11167060	Symbol	* pr		11166973						
ANR	11167061	Symbol	pr -> limit		11166973						
ANR	11167062	Symbol	written		11166973						
ANR	11167063	Symbol	pr -> ptr		11166973						
ANR	11167064	Symbol	errwrite		11166973						
ANR	11167065	Symbol	ERRC		11166973						
ANR	11167066	Function	stderr_open	277:0:8665:9856							
ANR	11167067	FunctionDef	"stderr_open (gx_io_device * iodev , const char * access , stream * * ps , gs_memory_t * mem)"		11167066	0					
ANR	11167068	CompoundStatement		280:0:8775:9856	11167066	0					
ANR	11167069	IdentifierDeclStatement	i_ctx_t * i_ctx_p = ( i_ctx_t * ) iodev -> state ;	281:4:8781:8823	11167066	0	True				
ANR	11167070	IdentifierDecl	* i_ctx_p = ( i_ctx_t * ) iodev -> state		11167066	0					
ANR	11167071	IdentifierDeclType	i_ctx_t *		11167066	0					
ANR	11167072	Identifier	i_ctx_p		11167066	1					
ANR	11167073	AssignmentExpression	* i_ctx_p = ( i_ctx_t * ) iodev -> state		11167066	2		=			
ANR	11167074	Identifier	i_ctx_p		11167066	0					
ANR	11167075	CastExpression	( i_ctx_t * ) iodev -> state		11167066	1					
ANR	11167076	CastTarget	i_ctx_t *		11167066	0					
ANR	11167077	PtrMemberAccess	iodev -> state		11167066	1					
ANR	11167078	Identifier	iodev		11167066	0					
ANR	11167079	Identifier	state		11167066	1					
ANR	11167080	IdentifierDeclStatement	stream * s ;	282:4:8845:8854	11167066	1	True				
ANR	11167081	IdentifierDecl	* s		11167066	0					
ANR	11167082	IdentifierDeclType	stream *		11167066	0					
ANR	11167083	Identifier	s		11167066	1					
ANR	11167084	IfStatement	"if ( ! streq1 ( access , 'w' ) )"		11167066	2					
ANR	11167085	Condition	"! streq1 ( access , 'w' )"	284:8:8865:8884	11167066	0	True				
ANR	11167086	UnaryOperationExpression	"! streq1 ( access , 'w' )"		11167066	0					
ANR	11167087	UnaryOperator	!		11167066	0					
ANR	11167088	CallExpression	"streq1 ( access , 'w' )"		11167066	1					
ANR	11167089	Callee	streq1		11167066	0					
ANR	11167090	Identifier	streq1		11167066	0					
ANR	11167091	ArgumentList	access		11167066	1					
ANR	11167092	Argument	access		11167066	0					
ANR	11167093	Identifier	access		11167066	0					
ANR	11167094	Argument	'w'		11167066	1					
ANR	11167095	PrimaryExpression	'w'		11167066	0					
ANR	11167096	ExpressionStatement	return_error ( gs_error_invalidfileaccess )	285:8:8895:8935	11167066	1	True				
ANR	11167097	CallExpression	return_error ( gs_error_invalidfileaccess )		11167066	0					
ANR	11167098	Callee	return_error		11167066	0					
ANR	11167099	Identifier	return_error		11167066	0					
ANR	11167100	ArgumentList	gs_error_invalidfileaccess		11167066	1					
ANR	11167101	Argument	gs_error_invalidfileaccess		11167066	0					
ANR	11167102	Identifier	gs_error_invalidfileaccess		11167066	0					
ANR	11167103	IfStatement	"if ( file_is_invalid ( s , & ref_stderr ) )"		11167066	3					
ANR	11167104	Condition	"file_is_invalid ( s , & ref_stderr )"	286:8:8945:8975	11167066	0	True				
ANR	11167105	CallExpression	"file_is_invalid ( s , & ref_stderr )"		11167066	0					
ANR	11167106	Callee	file_is_invalid		11167066	0					
ANR	11167107	Identifier	file_is_invalid		11167066	0					
ANR	11167108	ArgumentList	s		11167066	1					
ANR	11167109	Argument	s		11167066	0					
ANR	11167110	Identifier	s		11167066	0					
ANR	11167111	Argument	& ref_stderr		11167066	1					
ANR	11167112	UnaryOperationExpression	& ref_stderr		11167066	0					
ANR	11167113	UnaryOperator	&		11167066	0					
ANR	11167114	Identifier	ref_stderr		11167066	1					
ANR	11167115	CompoundStatement		10:15:284:453	11167066	1					
ANR	11167116	IdentifierDeclStatement	gs_memory_t * sysmem = imemory_system ;	287:8:8988:9024	11167066	0	True				
ANR	11167117	IdentifierDecl	* sysmem = imemory_system		11167066	0					
ANR	11167118	IdentifierDeclType	gs_memory_t *		11167066	0					
ANR	11167119	Identifier	sysmem		11167066	1					
ANR	11167120	AssignmentExpression	* sysmem = imemory_system		11167066	2		=			
ANR	11167121	Identifier	imemory_system		11167066	0					
ANR	11167122	Identifier	imemory_system		11167066	1					
ANR	11167123	IdentifierDeclStatement	byte * buf ;	288:8:9034:9043	11167066	1	True				
ANR	11167124	IdentifierDecl	* buf		11167066	0					
ANR	11167125	IdentifierDeclType	byte *		11167066	0					
ANR	11167126	Identifier	buf		11167066	1					
ANR	11167127	Statement	static	289:8:9053:9058	11167066	2	True				
ANR	11167128	IdentifierDeclStatement	"const stream_procs p = { s_std_noavailable , s_std_noseek , s_std_write_reset , s_std_write_flush , file_close_file , s_stderr_write_process } ;"	289:15:9060:9229	11167066	3	True				
ANR	11167129	IdentifierDecl	"p = { s_std_noavailable , s_std_noseek , s_std_write_reset , s_std_write_flush , file_close_file , s_stderr_write_process }"		11167066	0					
ANR	11167130	IdentifierDeclType	const stream_procs		11167066	0					
ANR	11167131	Identifier	p		11167066	1					
ANR	11167132	AssignmentExpression	"p = { s_std_noavailable , s_std_noseek , s_std_write_reset , s_std_write_flush , file_close_file , s_stderr_write_process }"		11167066	2		=			
ANR	11167133	Identifier	p		11167066	0					
ANR	11167134	InitializerList	s_std_noavailable		11167066	1					
ANR	11167135	Identifier	s_std_noavailable		11167066	0					
ANR	11167136	Identifier	s_std_noseek		11167066	1					
ANR	11167137	Identifier	s_std_write_reset		11167066	2					
ANR	11167138	Identifier	s_std_write_flush		11167066	3					
ANR	11167139	Identifier	file_close_file		11167066	4					
ANR	11167140	Identifier	s_stderr_write_process		11167066	5					
ANR	11167141	ExpressionStatement	"s = file_alloc_stream ( sysmem , ""stderr_open(stream)"" )"	294:8:9240:9292	11167066	4	True				
ANR	11167142	AssignmentExpression	"s = file_alloc_stream ( sysmem , ""stderr_open(stream)"" )"		11167066	0		=			
ANR	11167143	Identifier	s		11167066	0					
ANR	11167144	CallExpression	"file_alloc_stream ( sysmem , ""stderr_open(stream)"" )"		11167066	1					
ANR	11167145	Callee	file_alloc_stream		11167066	0					
ANR	11167146	Identifier	file_alloc_stream		11167066	0					
ANR	11167147	ArgumentList	sysmem		11167066	1					
ANR	11167148	Argument	sysmem		11167066	0					
ANR	11167149	Identifier	sysmem		11167066	0					
ANR	11167150	Argument	"""stderr_open(stream)"""		11167066	1					
ANR	11167151	PrimaryExpression	"""stderr_open(stream)"""		11167066	0					
ANR	11167152	ExpressionStatement	"buf = gs_alloc_bytes ( sysmem , STDERR_BUF_SIZE , ""stderr_open(buffer)"" )"	295:8:9302:9370	11167066	5	True				
ANR	11167153	AssignmentExpression	"buf = gs_alloc_bytes ( sysmem , STDERR_BUF_SIZE , ""stderr_open(buffer)"" )"		11167066	0		=			
ANR	11167154	Identifier	buf		11167066	0					
ANR	11167155	CallExpression	"gs_alloc_bytes ( sysmem , STDERR_BUF_SIZE , ""stderr_open(buffer)"" )"		11167066	1					
ANR	11167156	Callee	gs_alloc_bytes		11167066	0					
ANR	11167157	Identifier	gs_alloc_bytes		11167066	0					
ANR	11167158	ArgumentList	sysmem		11167066	1					
ANR	11167159	Argument	sysmem		11167066	0					
ANR	11167160	Identifier	sysmem		11167066	0					
ANR	11167161	Argument	STDERR_BUF_SIZE		11167066	1					
ANR	11167162	Identifier	STDERR_BUF_SIZE		11167066	0					
ANR	11167163	Argument	"""stderr_open(buffer)"""		11167066	2					
ANR	11167164	PrimaryExpression	"""stderr_open(buffer)"""		11167066	0					
ANR	11167165	IfStatement	if ( s == 0 || buf == 0 )		11167066	6					
ANR	11167166	Condition	s == 0 || buf == 0	296:12:9384:9401	11167066	0	True				
ANR	11167167	OrExpression	s == 0 || buf == 0		11167066	0		||			
ANR	11167168	EqualityExpression	s == 0		11167066	0		==			
ANR	11167169	Identifier	s		11167066	0					
ANR	11167170	PrimaryExpression	0		11167066	1					
ANR	11167171	EqualityExpression	buf == 0		11167066	1		==			
ANR	11167172	Identifier	buf		11167066	0					
ANR	11167173	PrimaryExpression	0		11167066	1					
ANR	11167174	ExpressionStatement	return_error ( gs_error_VMerror )	297:12:9416:9446	11167066	1	True				
ANR	11167175	CallExpression	return_error ( gs_error_VMerror )		11167066	0					
ANR	11167176	Callee	return_error		11167066	0					
ANR	11167177	Identifier	return_error		11167066	0					
ANR	11167178	ArgumentList	gs_error_VMerror		11167066	1					
ANR	11167179	Argument	gs_error_VMerror		11167066	0					
ANR	11167180	Identifier	gs_error_VMerror		11167066	0					
ANR	11167181	ExpressionStatement	"s_std_init ( s , buf , STDERR_BUF_SIZE , & p , s_mode_write )"	298:8:9456:9509	11167066	7	True				
ANR	11167182	CallExpression	"s_std_init ( s , buf , STDERR_BUF_SIZE , & p , s_mode_write )"		11167066	0					
ANR	11167183	Callee	s_std_init		11167066	0					
ANR	11167184	Identifier	s_std_init		11167066	0					
ANR	11167185	ArgumentList	s		11167066	1					
ANR	11167186	Argument	s		11167066	0					
ANR	11167187	Identifier	s		11167066	0					
ANR	11167188	Argument	buf		11167066	1					
ANR	11167189	Identifier	buf		11167066	0					
ANR	11167190	Argument	STDERR_BUF_SIZE		11167066	2					
ANR	11167191	Identifier	STDERR_BUF_SIZE		11167066	0					
ANR	11167192	Argument	& p		11167066	3					
ANR	11167193	UnaryOperationExpression	& p		11167066	0					
ANR	11167194	UnaryOperator	&		11167066	0					
ANR	11167195	Identifier	p		11167066	1					
ANR	11167196	Argument	s_mode_write		11167066	4					
ANR	11167197	Identifier	s_mode_write		11167066	0					
ANR	11167198	ExpressionStatement	s -> file = 0	299:8:9519:9530	11167066	8	True				
ANR	11167199	AssignmentExpression	s -> file = 0		11167066	0		=			
ANR	11167200	PtrMemberAccess	s -> file		11167066	0					
ANR	11167201	Identifier	s		11167066	0					
ANR	11167202	Identifier	file		11167066	1					
ANR	11167203	PrimaryExpression	0		11167066	1					
ANR	11167204	ExpressionStatement	s -> file_modes = s -> modes	300:8:9540:9564	11167066	9	True				
ANR	11167205	AssignmentExpression	s -> file_modes = s -> modes		11167066	0		=			
ANR	11167206	PtrMemberAccess	s -> file_modes		11167066	0					
ANR	11167207	Identifier	s		11167066	0					
ANR	11167208	Identifier	file_modes		11167066	1					
ANR	11167209	PtrMemberAccess	s -> modes		11167066	1					
ANR	11167210	Identifier	s		11167066	0					
ANR	11167211	Identifier	modes		11167066	1					
ANR	11167212	ExpressionStatement	s -> file_offset = 0	301:8:9574:9592	11167066	10	True				
ANR	11167213	AssignmentExpression	s -> file_offset = 0		11167066	0		=			
ANR	11167214	PtrMemberAccess	s -> file_offset		11167066	0					
ANR	11167215	Identifier	s		11167066	0					
ANR	11167216	Identifier	file_offset		11167066	1					
ANR	11167217	PrimaryExpression	0		11167066	1					
ANR	11167218	ExpressionStatement	s -> file_limit = S_FILE_LIMIT_MAX	302:8:9644:9676	11167066	11	True				
ANR	11167219	AssignmentExpression	s -> file_limit = S_FILE_LIMIT_MAX		11167066	0		=			
ANR	11167220	PtrMemberAccess	s -> file_limit		11167066	0					
ANR	11167221	Identifier	s		11167066	0					
ANR	11167222	Identifier	file_limit		11167066	1					
ANR	11167223	Identifier	S_FILE_LIMIT_MAX		11167066	1					
ANR	11167224	ExpressionStatement	s -> save_close = s -> procs . flush	303:8:9686:9716	11167066	12	True				
ANR	11167225	AssignmentExpression	s -> save_close = s -> procs . flush		11167066	0		=			
ANR	11167226	PtrMemberAccess	s -> save_close		11167066	0					
ANR	11167227	Identifier	s		11167066	0					
ANR	11167228	Identifier	save_close		11167066	1					
ANR	11167229	MemberAccess	s -> procs . flush		11167066	1					
ANR	11167230	PtrMemberAccess	s -> procs		11167066	0					
ANR	11167231	Identifier	s		11167066	0					
ANR	11167232	Identifier	procs		11167066	1					
ANR	11167233	Identifier	flush		11167066	1					
ANR	11167234	ExpressionStatement	"make_file ( & ref_stderr , a_write | avm_system , s -> write_id , s )"	304:8:9726:9786	11167066	13	True				
ANR	11167235	CallExpression	"make_file ( & ref_stderr , a_write | avm_system , s -> write_id , s )"		11167066	0					
ANR	11167236	Callee	make_file		11167066	0					
ANR	11167237	Identifier	make_file		11167066	0					
ANR	11167238	ArgumentList	& ref_stderr		11167066	1					
ANR	11167239	Argument	& ref_stderr		11167066	0					
ANR	11167240	UnaryOperationExpression	& ref_stderr		11167066	0					
ANR	11167241	UnaryOperator	&		11167066	0					
ANR	11167242	Identifier	ref_stderr		11167066	1					
ANR	11167243	Argument	a_write | avm_system		11167066	1					
ANR	11167244	InclusiveOrExpression	a_write | avm_system		11167066	0		|			
ANR	11167245	Identifier	a_write		11167066	0					
ANR	11167246	Identifier	avm_system		11167066	1					
ANR	11167247	Argument	s -> write_id		11167066	2					
ANR	11167248	PtrMemberAccess	s -> write_id		11167066	0					
ANR	11167249	Identifier	s		11167066	0					
ANR	11167250	Identifier	write_id		11167066	1					
ANR	11167251	Argument	s		11167066	3					
ANR	11167252	Identifier	s		11167066	0					
ANR	11167253	ExpressionStatement	* ps = s	305:8:9796:9803	11167066	14	True				
ANR	11167254	AssignmentExpression	* ps = s		11167066	0		=			
ANR	11167255	UnaryOperationExpression	* ps		11167066	0					
ANR	11167256	UnaryOperator	*		11167066	0					
ANR	11167257	Identifier	ps		11167066	1					
ANR	11167258	Identifier	s		11167066	1					
ANR	11167259	ReturnStatement	return 1 ;	306:8:9813:9821	11167066	15	True				
ANR	11167260	PrimaryExpression	1		11167066	0					
ANR	11167261	ExpressionStatement	* ps = s	308:4:9833:9840	11167066	4	True				
ANR	11167262	AssignmentExpression	* ps = s		11167066	0		=			
ANR	11167263	UnaryOperationExpression	* ps		11167066	0					
ANR	11167264	UnaryOperator	*		11167066	0					
ANR	11167265	Identifier	ps		11167066	1					
ANR	11167266	Identifier	s		11167066	1					
ANR	11167267	ReturnStatement	return 0 ;	309:4:9846:9854	11167066	5	True				
ANR	11167268	PrimaryExpression	0		11167066	0					
ANR	11167269	ReturnType	static int		11167066	1					
ANR	11167270	Identifier	stderr_open		11167066	2					
ANR	11167271	ParameterList	"gx_io_device * iodev , const char * access , stream * * ps , gs_memory_t * mem"		11167066	3					
ANR	11167272	Parameter	gx_io_device * iodev	278:12:8688:8707	11167066	0	True				
ANR	11167273	ParameterType	gx_io_device *		11167066	0					
ANR	11167274	Identifier	iodev		11167066	1					
ANR	11167275	Parameter	const char * access	278:34:8710:8727	11167066	1	True				
ANR	11167276	ParameterType	const char *		11167066	0					
ANR	11167277	Identifier	access		11167066	1					
ANR	11167278	Parameter	stream * * ps	278:54:8730:8741	11167066	2	True				
ANR	11167279	ParameterType	stream * *		11167066	0					
ANR	11167280	Identifier	ps		11167066	1					
ANR	11167281	Parameter	gs_memory_t * mem	279:12:8756:8772	11167066	3	True				
ANR	11167282	ParameterType	gs_memory_t *		11167066	0					
ANR	11167283	Identifier	mem		11167066	1					
ANR	11167284	CFGEntryNode	ENTRY		11167066		True				
ANR	11167285	CFGExitNode	EXIT		11167066		True				
ANR	11167286	Symbol	access		11167066						
ANR	11167287	Symbol	ps		11167066						
ANR	11167288	Symbol	s -> file		11167066						
ANR	11167289	Symbol	s_std_write_flush		11167066						
ANR	11167290	Symbol	s_mode_write		11167066						
ANR	11167291	Symbol	S_FILE_LIMIT_MAX		11167066						
ANR	11167292	Symbol	s -> file_limit		11167066						
ANR	11167293	Symbol	s -> write_id		11167066						
ANR	11167294	Symbol	file_alloc_stream		11167066						
ANR	11167295	Symbol	iodev		11167066						
ANR	11167296	Symbol	mem		11167066						
ANR	11167297	Symbol	s_stderr_write_process		11167066						
ANR	11167298	Symbol	& ref_stderr		11167066						
ANR	11167299	Symbol	file_is_invalid		11167066						
ANR	11167300	Symbol	a_write		11167066						
ANR	11167301	Symbol	s -> procs . flush		11167066						
ANR	11167302	Symbol	streq1		11167066						
ANR	11167303	Symbol	gs_alloc_bytes		11167066						
ANR	11167304	Symbol	s -> save_close		11167066						
ANR	11167305	Symbol	* iodev		11167066						
ANR	11167306	Symbol	s -> procs		11167066						
ANR	11167307	Symbol	imemory_system		11167066						
ANR	11167308	Symbol	s_std_write_reset		11167066						
ANR	11167309	Symbol	s -> file_modes		11167066						
ANR	11167310	Symbol	s -> file_offset		11167066						
ANR	11167311	Symbol	* ps		11167066						
ANR	11167312	Symbol	p		11167066						
ANR	11167313	Symbol	gs_error_VMerror		11167066						
ANR	11167314	Symbol	buf		11167066						
ANR	11167315	Symbol	s		11167066						
ANR	11167316	Symbol	STDERR_BUF_SIZE		11167066						
ANR	11167317	Symbol	sysmem		11167066						
ANR	11167318	Symbol	i_ctx_p		11167066						
ANR	11167319	Symbol	& p		11167066						
ANR	11167320	Symbol	iodev -> state		11167066						
ANR	11167321	Symbol	s_std_noavailable		11167066						
ANR	11167322	Symbol	s_std_noseek		11167066						
ANR	11167323	Symbol	gs_error_invalidfileaccess		11167066						
ANR	11167324	Symbol	* s		11167066						
ANR	11167325	Symbol	avm_system		11167066						
ANR	11167326	Symbol	file_close_file		11167066						
ANR	11167327	Symbol	s -> modes		11167066						
ANR	11167328	Function	zget_stderr	313:0:9923:10326							
ANR	11167329	FunctionDef	"zget_stderr (i_ctx_t * i_ctx_p , stream * * ps)"		11167328	0					
ANR	11167330	CompoundStatement		315:0:9971:10326	11167328	0					
ANR	11167331	IdentifierDeclStatement	stream * s ;	316:4:9977:9986	11167328	0	True				
ANR	11167332	IdentifierDecl	* s		11167328	0					
ANR	11167333	IdentifierDeclType	stream *		11167328	0					
ANR	11167334	Identifier	s		11167328	1					
ANR	11167335	IdentifierDeclStatement	gx_io_device * iodev ;	317:4:9992:10011	11167328	1	True				
ANR	11167336	IdentifierDecl	* iodev		11167328	0					
ANR	11167337	IdentifierDeclType	gx_io_device *		11167328	0					
ANR	11167338	Identifier	iodev		11167328	1					
ANR	11167339	IdentifierDeclStatement	int code ;	318:4:10017:10025	11167328	2	True				
ANR	11167340	IdentifierDecl	code		11167328	0					
ANR	11167341	IdentifierDeclType	int		11167328	0					
ANR	11167342	Identifier	code		11167328	1					
ANR	11167343	IfStatement	"if ( file_is_valid ( s , & ref_stderr ) )"		11167328	3					
ANR	11167344	Condition	"file_is_valid ( s , & ref_stderr )"	320:8:10036:10064	11167328	0	True				
ANR	11167345	CallExpression	"file_is_valid ( s , & ref_stderr )"		11167328	0					
ANR	11167346	Callee	file_is_valid		11167328	0					
ANR	11167347	Identifier	file_is_valid		11167328	0					
ANR	11167348	ArgumentList	s		11167328	1					
ANR	11167349	Argument	s		11167328	0					
ANR	11167350	Identifier	s		11167328	0					
ANR	11167351	Argument	& ref_stderr		11167328	1					
ANR	11167352	UnaryOperationExpression	& ref_stderr		11167328	0					
ANR	11167353	UnaryOperator	&		11167328	0					
ANR	11167354	Identifier	ref_stderr		11167328	1					
ANR	11167355	CompoundStatement		6:39:95:95	11167328	1					
ANR	11167356	ExpressionStatement	* ps = s	321:8:10077:10084	11167328	0	True				
ANR	11167357	AssignmentExpression	* ps = s		11167328	0		=			
ANR	11167358	UnaryOperationExpression	* ps		11167328	0					
ANR	11167359	UnaryOperator	*		11167328	0					
ANR	11167360	Identifier	ps		11167328	1					
ANR	11167361	Identifier	s		11167328	1					
ANR	11167362	ReturnStatement	return 0 ;	322:8:10094:10102	11167328	1	True				
ANR	11167363	PrimaryExpression	0		11167328	0					
ANR	11167364	ExpressionStatement	"iodev = gs_findiodevice ( imemory , ( const byte * ) ""%stderr"" , 7 )"	324:4:10114:10174	11167328	4	True				
ANR	11167365	AssignmentExpression	"iodev = gs_findiodevice ( imemory , ( const byte * ) ""%stderr"" , 7 )"		11167328	0		=			
ANR	11167366	Identifier	iodev		11167328	0					
ANR	11167367	CallExpression	"gs_findiodevice ( imemory , ( const byte * ) ""%stderr"" , 7 )"		11167328	1					
ANR	11167368	Callee	gs_findiodevice		11167328	0					
ANR	11167369	Identifier	gs_findiodevice		11167328	0					
ANR	11167370	ArgumentList	imemory		11167328	1					
ANR	11167371	Argument	imemory		11167328	0					
ANR	11167372	Identifier	imemory		11167328	0					
ANR	11167373	Argument	"( const byte * ) ""%stderr"""		11167328	1					
ANR	11167374	CastExpression	"( const byte * ) ""%stderr"""		11167328	0					
ANR	11167375	CastTarget	const byte *		11167328	0					
ANR	11167376	PrimaryExpression	"""%stderr"""		11167328	1					
ANR	11167377	Argument	7		11167328	2					
ANR	11167378	PrimaryExpression	7		11167328	0					
ANR	11167379	ExpressionStatement	iodev -> state = i_ctx_p	325:4:10180:10202	11167328	5	True				
ANR	11167380	AssignmentExpression	iodev -> state = i_ctx_p		11167328	0		=			
ANR	11167381	PtrMemberAccess	iodev -> state		11167328	0					
ANR	11167382	Identifier	iodev		11167328	0					
ANR	11167383	Identifier	state		11167328	1					
ANR	11167384	Identifier	i_ctx_p		11167328	1					
ANR	11167385	ExpressionStatement	"code = ( * iodev -> procs . open_device ) ( iodev , ""w"" , ps , imemory_system )"	326:4:10208:10274	11167328	6	True				
ANR	11167386	AssignmentExpression	"code = ( * iodev -> procs . open_device ) ( iodev , ""w"" , ps , imemory_system )"		11167328	0		=			
ANR	11167387	Identifier	code		11167328	0					
ANR	11167388	CallExpression	"( * iodev -> procs . open_device ) ( iodev , ""w"" , ps , imemory_system )"		11167328	1					
ANR	11167389	Callee	* iodev -> procs . open_device		11167328	0					
ANR	11167390	UnaryOperationExpression	* iodev -> procs . open_device		11167328	0					
ANR	11167391	UnaryOperator	*		11167328	0					
ANR	11167392	MemberAccess	iodev -> procs . open_device		11167328	1					
ANR	11167393	PtrMemberAccess	iodev -> procs		11167328	0					
ANR	11167394	Identifier	iodev		11167328	0					
ANR	11167395	Identifier	procs		11167328	1					
ANR	11167396	Identifier	open_device		11167328	1					
ANR	11167397	ArgumentList	iodev		11167328	1					
ANR	11167398	Argument	iodev		11167328	0					
ANR	11167399	Identifier	iodev		11167328	0					
ANR	11167400	Argument	"""w"""		11167328	1					
ANR	11167401	PrimaryExpression	"""w"""		11167328	0					
ANR	11167402	Argument	ps		11167328	2					
ANR	11167403	Identifier	ps		11167328	0					
ANR	11167404	Argument	imemory_system		11167328	3					
ANR	11167405	Identifier	imemory_system		11167328	0					
ANR	11167406	ExpressionStatement	iodev -> state = NULL	327:4:10280:10299	11167328	7	True				
ANR	11167407	AssignmentExpression	iodev -> state = NULL		11167328	0		=			
ANR	11167408	PtrMemberAccess	iodev -> state		11167328	0					
ANR	11167409	Identifier	iodev		11167328	0					
ANR	11167410	Identifier	state		11167328	1					
ANR	11167411	Identifier	NULL		11167328	1					
ANR	11167412	ReturnStatement	"return min ( code , 0 ) ;"	328:4:10305:10324	11167328	8	True				
ANR	11167413	CallExpression	"min ( code , 0 )"		11167328	0					
ANR	11167414	Callee	min		11167328	0					
ANR	11167415	Identifier	min		11167328	0					
ANR	11167416	ArgumentList	code		11167328	1					
ANR	11167417	Argument	code		11167328	0					
ANR	11167418	Identifier	code		11167328	0					
ANR	11167419	Argument	0		11167328	1					
ANR	11167420	PrimaryExpression	0		11167328	0					
ANR	11167421	ReturnType	int		11167328	1					
ANR	11167422	Identifier	zget_stderr		11167328	2					
ANR	11167423	ParameterList	"i_ctx_t * i_ctx_p , stream * * ps"		11167328	3					
ANR	11167424	Parameter	i_ctx_t * i_ctx_p	314:12:9939:9954	11167328	0	True				
ANR	11167425	ParameterType	i_ctx_t *		11167328	0					
ANR	11167426	Identifier	i_ctx_p		11167328	1					
ANR	11167427	Parameter	stream * * ps	314:30:9957:9968	11167328	1	True				
ANR	11167428	ParameterType	stream * *		11167328	0					
ANR	11167429	Identifier	ps		11167328	1					
ANR	11167430	CFGEntryNode	ENTRY		11167328		True				
ANR	11167431	CFGExitNode	EXIT		11167328		True				
ANR	11167432	Symbol	ps		11167328						
ANR	11167433	Symbol	code		11167328						
ANR	11167434	Symbol	NULL		11167328						
ANR	11167435	Symbol	* iodev		11167328						
ANR	11167436	Symbol	imemory_system		11167328						
ANR	11167437	Symbol	* iodev -> procs		11167328						
ANR	11167438	Symbol	* ps		11167328						
ANR	11167439	Symbol	gs_findiodevice		11167328						
ANR	11167440	Symbol	iodev -> procs . open_device		11167328						
ANR	11167441	Symbol	s		11167328						
ANR	11167442	Symbol	min		11167328						
ANR	11167443	Symbol	iodev		11167328						
ANR	11167444	Symbol	* iodev -> procs . open_device		11167328						
ANR	11167445	Symbol	i_ctx_p		11167328						
ANR	11167446	Symbol	file_is_valid		11167328						
ANR	11167447	Symbol	& ref_stderr		11167328						
ANR	11167448	Symbol	iodev -> state		11167328						
ANR	11167449	Symbol	imemory		11167328						
ANR	11167450	Symbol	iodev -> procs		11167328						
ANR	11167451	Symbol	* * iodev		11167328						
