command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9101963	File	data/converged/CVE-2018-16863_ghostpdl/psi_zfont1.c								
ANR	9101964	DeclStmt									
ANR	9101965	Decl							const gs_type1_data_procs_t	const gs_type1_data_procs_t	z1_data_procs
ANR	9101966	Function	find_zone_height	44:0:1267:1530							
ANR	9101967	FunctionDef	"find_zone_height (float * pmax_height , int count , const float * values)"		9101966	0					
ANR	9101968	CompoundStatement		46:0:1348:1530	9101966	0					
ANR	9101969	IdentifierDeclStatement	int i ;	47:4:1354:1359	9101966	0	True				
ANR	9101970	IdentifierDecl	i		9101966	0					
ANR	9101971	IdentifierDeclType	int		9101966	0					
ANR	9101972	Identifier	i		9101966	1					
ANR	9101973	IdentifierDeclStatement	float zone_height ;	48:4:1365:1382	9101966	1	True				
ANR	9101974	IdentifierDecl	zone_height		9101966	0					
ANR	9101975	IdentifierDeclType	float		9101966	0					
ANR	9101976	Identifier	zone_height		9101966	1					
ANR	9101977	ForStatement	for ( i = 0 ; i < count ; i += 2 )		9101966	2					
ANR	9101978	ForInit	i = 0 ;	50:9:1394:1399	9101966	0	True				
ANR	9101979	AssignmentExpression	i = 0		9101966	0		=			
ANR	9101980	Identifier	i		9101966	0					
ANR	9101981	PrimaryExpression	0		9101966	1					
ANR	9101982	Condition	i < count	50:16:1401:1409	9101966	1	True				
ANR	9101983	RelationalExpression	i < count		9101966	0		<			
ANR	9101984	Identifier	i		9101966	0					
ANR	9101985	Identifier	count		9101966	1					
ANR	9101986	AssignmentExpression	i += 2	50:27:1412:1417	9101966	2	True	+=			
ANR	9101987	Identifier	i		9101966	0					
ANR	9101988	PrimaryExpression	2		9101966	1					
ANR	9101989	IfStatement	if ( ( zone_height = values [ i + 1 ] - values [ i ] ) > * pmax_height )		9101966	3					
ANR	9101990	Condition	( zone_height = values [ i + 1 ] - values [ i ] ) > * pmax_height	51:12:1432:1487	9101966	0	True				
ANR	9101991	RelationalExpression	( zone_height = values [ i + 1 ] - values [ i ] ) > * pmax_height		9101966	0		>			
ANR	9101992	AssignmentExpression	zone_height = values [ i + 1 ] - values [ i ]		9101966	0		=			
ANR	9101993	Identifier	zone_height		9101966	0					
ANR	9101994	AdditiveExpression	values [ i + 1 ] - values [ i ]		9101966	1		-			
ANR	9101995	ArrayIndexing	values [ i + 1 ]		9101966	0					
ANR	9101996	Identifier	values		9101966	0					
ANR	9101997	AdditiveExpression	i + 1		9101966	1		+			
ANR	9101998	Identifier	i		9101966	0					
ANR	9101999	PrimaryExpression	1		9101966	1					
ANR	9102000	ArrayIndexing	values [ i ]		9101966	1					
ANR	9102001	Identifier	values		9101966	0					
ANR	9102002	Identifier	i		9101966	1					
ANR	9102003	UnaryOperationExpression	* pmax_height		9101966	1					
ANR	9102004	UnaryOperator	*		9101966	0					
ANR	9102005	Identifier	pmax_height		9101966	1					
ANR	9102006	ExpressionStatement	* pmax_height = zone_height	52:12:1502:1528	9101966	1	True				
ANR	9102007	AssignmentExpression	* pmax_height = zone_height		9101966	0		=			
ANR	9102008	UnaryOperationExpression	* pmax_height		9101966	0					
ANR	9102009	UnaryOperator	*		9101966	0					
ANR	9102010	Identifier	pmax_height		9101966	1					
ANR	9102011	Identifier	zone_height		9101966	1					
ANR	9102012	ReturnType	static void		9101966	1					
ANR	9102013	Identifier	find_zone_height		9101966	2					
ANR	9102014	ParameterList	"float * pmax_height , int count , const float * values"		9101966	3					
ANR	9102015	Parameter	float * pmax_height	45:17:1296:1313	9101966	0	True				
ANR	9102016	ParameterType	float *		9101966	0					
ANR	9102017	Identifier	pmax_height		9101966	1					
ANR	9102018	Parameter	int count	45:37:1316:1324	9101966	1	True				
ANR	9102019	ParameterType	int		9101966	0					
ANR	9102020	Identifier	count		9101966	1					
ANR	9102021	Parameter	const float * values	45:48:1327:1345	9101966	2	True				
ANR	9102022	ParameterType	const float *		9101966	0					
ANR	9102023	Identifier	values		9101966	1					
ANR	9102024	CFGEntryNode	ENTRY		9101966		True				
ANR	9102025	CFGExitNode	EXIT		9101966		True				
ANR	9102026	Symbol	* i		9101966						
ANR	9102027	Symbol	pmax_height		9101966						
ANR	9102028	Symbol	zone_height		9101966						
ANR	9102029	Symbol	* pmax_height		9101966						
ANR	9102030	Symbol	* values		9101966						
ANR	9102031	Symbol	values		9101966						
ANR	9102032	Symbol	count		9101966						
ANR	9102033	Symbol	i		9101966						
ANR	9102034	Function	z1_enumerate_glyph	57:0:1570:1894							
ANR	9102035	FunctionDef	"z1_enumerate_glyph (gs_font * pfont , int * pindex , gs_glyph_space_t ignored , gs_glyph * pglyph)"		9102034	0					
ANR	9102036	CompoundStatement		60:0:1694:1894	9102034	0					
ANR	9102037	Statement	const	61:4:1700:1704	9102034	0	True				
ANR	9102038	Statement	gs_font_type1	61:10:1706:1718	9102034	1	True				
ANR	9102039	Statement	*	61:24:1720:1720	9102034	2	True				
ANR	9102040	Statement	const	61:25:1721:1725	9102034	3	True				
ANR	9102041	ExpressionStatement	pfont1 = ( gs_font_type1 * ) pfont	61:31:1727:1758	9102034	4	True				
ANR	9102042	AssignmentExpression	pfont1 = ( gs_font_type1 * ) pfont		9102034	0		=			
ANR	9102043	Identifier	pfont1		9102034	0					
ANR	9102044	CastExpression	( gs_font_type1 * ) pfont		9102034	1					
ANR	9102045	CastTarget	gs_font_type1 *		9102034	0					
ANR	9102046	Identifier	pfont		9102034	1					
ANR	9102047	IdentifierDeclStatement	const ref * pcsdict = & pfont_data ( pfont1 ) -> CharStrings ;	62:4:1764:1817	9102034	5	True				
ANR	9102048	IdentifierDecl	* pcsdict = & pfont_data ( pfont1 ) -> CharStrings		9102034	0					
ANR	9102049	IdentifierDeclType	const ref *		9102034	0					
ANR	9102050	Identifier	pcsdict		9102034	1					
ANR	9102051	AssignmentExpression	* pcsdict = & pfont_data ( pfont1 ) -> CharStrings		9102034	2		=			
ANR	9102052	Identifier	pcsdict		9102034	0					
ANR	9102053	UnaryOperationExpression	& pfont_data ( pfont1 ) -> CharStrings		9102034	1					
ANR	9102054	UnaryOperator	&		9102034	0					
ANR	9102055	PtrMemberAccess	pfont_data ( pfont1 ) -> CharStrings		9102034	1					
ANR	9102056	CallExpression	pfont_data ( pfont1 )		9102034	0					
ANR	9102057	Callee	pfont_data		9102034	0					
ANR	9102058	Identifier	pfont_data		9102034	0					
ANR	9102059	ArgumentList	pfont1		9102034	1					
ANR	9102060	Argument	pfont1		9102034	0					
ANR	9102061	Identifier	pfont1		9102034	0					
ANR	9102062	Identifier	CharStrings		9102034	1					
ANR	9102063	ReturnStatement	"return zchar_enumerate_glyph ( pfont -> memory , pcsdict , pindex , pglyph ) ;"	64:4:1824:1892	9102034	6	True				
ANR	9102064	CallExpression	"zchar_enumerate_glyph ( pfont -> memory , pcsdict , pindex , pglyph )"		9102034	0					
ANR	9102065	Callee	zchar_enumerate_glyph		9102034	0					
ANR	9102066	Identifier	zchar_enumerate_glyph		9102034	0					
ANR	9102067	ArgumentList	pfont -> memory		9102034	1					
ANR	9102068	Argument	pfont -> memory		9102034	0					
ANR	9102069	PtrMemberAccess	pfont -> memory		9102034	0					
ANR	9102070	Identifier	pfont		9102034	0					
ANR	9102071	Identifier	memory		9102034	1					
ANR	9102072	Argument	pcsdict		9102034	1					
ANR	9102073	Identifier	pcsdict		9102034	0					
ANR	9102074	Argument	pindex		9102034	2					
ANR	9102075	Identifier	pindex		9102034	0					
ANR	9102076	Argument	pglyph		9102034	3					
ANR	9102077	Identifier	pglyph		9102034	0					
ANR	9102078	ReturnType	static int		9102034	1					
ANR	9102079	Identifier	z1_enumerate_glyph		9102034	2					
ANR	9102080	ParameterList	"gs_font * pfont , int * pindex , gs_glyph_space_t ignored , gs_glyph * pglyph"		9102034	3					
ANR	9102081	Parameter	gs_font * pfont	58:19:1600:1614	9102034	0	True				
ANR	9102082	ParameterType	gs_font *		9102034	0					
ANR	9102083	Identifier	pfont		9102034	1					
ANR	9102084	Parameter	int * pindex	58:36:1617:1627	9102034	1	True				
ANR	9102085	ParameterType	int *		9102034	0					
ANR	9102086	Identifier	pindex		9102034	1					
ANR	9102087	Parameter	gs_glyph_space_t ignored	58:49:1630:1653	9102034	2	True				
ANR	9102088	ParameterType	gs_glyph_space_t		9102034	0					
ANR	9102089	Identifier	ignored		9102034	1					
ANR	9102090	Parameter	gs_glyph * pglyph	59:19:1675:1691	9102034	3	True				
ANR	9102091	ParameterType	gs_glyph *		9102034	0					
ANR	9102092	Identifier	pglyph		9102034	1					
ANR	9102093	CFGEntryNode	ENTRY		9102034		True				
ANR	9102094	CFGExitNode	EXIT		9102034		True				
ANR	9102095	Symbol	ignored		9102034						
ANR	9102096	Symbol	pglyph		9102034						
ANR	9102097	Symbol	pfont1		9102034						
ANR	9102098	Symbol	* pfont		9102034						
ANR	9102099	Symbol	pfont -> memory		9102034						
ANR	9102100	Symbol	pfont		9102034						
ANR	9102101	Symbol	zchar_enumerate_glyph		9102034						
ANR	9102102	Symbol	& pfont_data ( pfont1 ) -> CharStrings		9102034						
ANR	9102103	Symbol	pindex		9102034						
ANR	9102104	Symbol	pfont_data		9102034						
ANR	9102105	Symbol	pcsdict		9102034						
ANR	9102106	Function	charstring_font_get_refs	70:0:1983:2772							
ANR	9102107	FunctionDef	"charstring_font_get_refs (const_os_ptr op , charstring_font_refs_t * pfr)"		9102106	0					
ANR	9102108	CompoundStatement		72:0:2058:2772	9102106	0					
ANR	9102109	ExpressionStatement	"check_type ( * op , t_dictionary )"	73:4:2064:2093	9102106	0	True				
ANR	9102110	CallExpression	"check_type ( * op , t_dictionary )"		9102106	0					
ANR	9102111	Callee	check_type		9102106	0					
ANR	9102112	Identifier	check_type		9102106	0					
ANR	9102113	ArgumentList	* op		9102106	1					
ANR	9102114	Argument	* op		9102106	0					
ANR	9102115	UnaryOperationExpression	* op		9102106	0					
ANR	9102116	UnaryOperator	*		9102106	0					
ANR	9102117	Identifier	op		9102106	1					
ANR	9102118	Argument	t_dictionary		9102106	1					
ANR	9102119	Identifier	t_dictionary		9102106	0					
ANR	9102120	IfStatement	"if ( dict_find_string ( op , ""Private"" , & pfr -> Private ) <= 0 || ! r_has_type ( pfr -> Private , t_dictionary ) )"		9102106	1					
ANR	9102121	Condition	"dict_find_string ( op , ""Private"" , & pfr -> Private ) <= 0 || ! r_has_type ( pfr -> Private , t_dictionary )"	74:8:2103:2204	9102106	0	True				
ANR	9102122	OrExpression	"dict_find_string ( op , ""Private"" , & pfr -> Private ) <= 0 || ! r_has_type ( pfr -> Private , t_dictionary )"		9102106	0		||			
ANR	9102123	RelationalExpression	"dict_find_string ( op , ""Private"" , & pfr -> Private ) <= 0"		9102106	0		<=			
ANR	9102124	CallExpression	"dict_find_string ( op , ""Private"" , & pfr -> Private )"		9102106	0					
ANR	9102125	Callee	dict_find_string		9102106	0					
ANR	9102126	Identifier	dict_find_string		9102106	0					
ANR	9102127	ArgumentList	op		9102106	1					
ANR	9102128	Argument	op		9102106	0					
ANR	9102129	Identifier	op		9102106	0					
ANR	9102130	Argument	"""Private"""		9102106	1					
ANR	9102131	PrimaryExpression	"""Private"""		9102106	0					
ANR	9102132	Argument	& pfr -> Private		9102106	2					
ANR	9102133	UnaryOperationExpression	& pfr -> Private		9102106	0					
ANR	9102134	UnaryOperator	&		9102106	0					
ANR	9102135	PtrMemberAccess	pfr -> Private		9102106	1					
ANR	9102136	Identifier	pfr		9102106	0					
ANR	9102137	Identifier	Private		9102106	1					
ANR	9102138	PrimaryExpression	0		9102106	1					
ANR	9102139	UnaryOperationExpression	"! r_has_type ( pfr -> Private , t_dictionary )"		9102106	1					
ANR	9102140	UnaryOperator	!		9102106	0					
ANR	9102141	CallExpression	"r_has_type ( pfr -> Private , t_dictionary )"		9102106	1					
ANR	9102142	Callee	r_has_type		9102106	0					
ANR	9102143	Identifier	r_has_type		9102106	0					
ANR	9102144	ArgumentList	pfr -> Private		9102106	1					
ANR	9102145	Argument	pfr -> Private		9102106	0					
ANR	9102146	PtrMemberAccess	pfr -> Private		9102106	0					
ANR	9102147	Identifier	pfr		9102106	0					
ANR	9102148	Identifier	Private		9102106	1					
ANR	9102149	Argument	t_dictionary		9102106	1					
ANR	9102150	Identifier	t_dictionary		9102106	0					
ANR	9102151	ExpressionStatement	return_error ( gs_error_invalidfont )	77:8:2224:2258	9102106	1	True				
ANR	9102152	CallExpression	return_error ( gs_error_invalidfont )		9102106	0					
ANR	9102153	Callee	return_error		9102106	0					
ANR	9102154	Identifier	return_error		9102106	0					
ANR	9102155	ArgumentList	gs_error_invalidfont		9102106	1					
ANR	9102156	Argument	gs_error_invalidfont		9102106	0					
ANR	9102157	Identifier	gs_error_invalidfont		9102106	0					
ANR	9102158	ExpressionStatement	"make_empty_array ( & pfr -> no_subrs , 0 )"	78:4:2264:2299	9102106	2	True				
ANR	9102159	CallExpression	"make_empty_array ( & pfr -> no_subrs , 0 )"		9102106	0					
ANR	9102160	Callee	make_empty_array		9102106	0					
ANR	9102161	Identifier	make_empty_array		9102106	0					
ANR	9102162	ArgumentList	& pfr -> no_subrs		9102106	1					
ANR	9102163	Argument	& pfr -> no_subrs		9102106	0					
ANR	9102164	UnaryOperationExpression	& pfr -> no_subrs		9102106	0					
ANR	9102165	UnaryOperator	&		9102106	0					
ANR	9102166	PtrMemberAccess	pfr -> no_subrs		9102106	1					
ANR	9102167	Identifier	pfr		9102106	0					
ANR	9102168	Identifier	no_subrs		9102106	1					
ANR	9102169	Argument	0		9102106	1					
ANR	9102170	PrimaryExpression	0		9102106	0					
ANR	9102171	IfStatement	"if ( dict_find_string ( pfr -> Private , ""OtherSubrs"" , & pfr -> OtherSubrs ) > 0 )"		9102106	3					
ANR	9102172	Condition	"dict_find_string ( pfr -> Private , ""OtherSubrs"" , & pfr -> OtherSubrs ) > 0"	79:8:2309:2374	9102106	0	True				
ANR	9102173	RelationalExpression	"dict_find_string ( pfr -> Private , ""OtherSubrs"" , & pfr -> OtherSubrs ) > 0"		9102106	0		>			
ANR	9102174	CallExpression	"dict_find_string ( pfr -> Private , ""OtherSubrs"" , & pfr -> OtherSubrs )"		9102106	0					
ANR	9102175	Callee	dict_find_string		9102106	0					
ANR	9102176	Identifier	dict_find_string		9102106	0					
ANR	9102177	ArgumentList	pfr -> Private		9102106	1					
ANR	9102178	Argument	pfr -> Private		9102106	0					
ANR	9102179	PtrMemberAccess	pfr -> Private		9102106	0					
ANR	9102180	Identifier	pfr		9102106	0					
ANR	9102181	Identifier	Private		9102106	1					
ANR	9102182	Argument	"""OtherSubrs"""		9102106	1					
ANR	9102183	PrimaryExpression	"""OtherSubrs"""		9102106	0					
ANR	9102184	Argument	& pfr -> OtherSubrs		9102106	2					
ANR	9102185	UnaryOperationExpression	& pfr -> OtherSubrs		9102106	0					
ANR	9102186	UnaryOperator	&		9102106	0					
ANR	9102187	PtrMemberAccess	pfr -> OtherSubrs		9102106	1					
ANR	9102188	Identifier	pfr		9102106	0					
ANR	9102189	Identifier	OtherSubrs		9102106	1					
ANR	9102190	PrimaryExpression	0		9102106	1					
ANR	9102191	CompoundStatement		8:76:318:318	9102106	1					
ANR	9102192	IfStatement	if ( ! r_is_array ( pfr -> OtherSubrs ) )		9102106	0					
ANR	9102193	Condition	! r_is_array ( pfr -> OtherSubrs )	80:12:2391:2418	9102106	0	True				
ANR	9102194	UnaryOperationExpression	! r_is_array ( pfr -> OtherSubrs )		9102106	0					
ANR	9102195	UnaryOperator	!		9102106	0					
ANR	9102196	CallExpression	r_is_array ( pfr -> OtherSubrs )		9102106	1					
ANR	9102197	Callee	r_is_array		9102106	0					
ANR	9102198	Identifier	r_is_array		9102106	0					
ANR	9102199	ArgumentList	pfr -> OtherSubrs		9102106	1					
ANR	9102200	Argument	pfr -> OtherSubrs		9102106	0					
ANR	9102201	PtrMemberAccess	pfr -> OtherSubrs		9102106	0					
ANR	9102202	Identifier	pfr		9102106	0					
ANR	9102203	Identifier	OtherSubrs		9102106	1					
ANR	9102204	ExpressionStatement	return_error ( gs_error_typecheck )	81:12:2433:2465	9102106	1	True				
ANR	9102205	CallExpression	return_error ( gs_error_typecheck )		9102106	0					
ANR	9102206	Callee	return_error		9102106	0					
ANR	9102207	Identifier	return_error		9102106	0					
ANR	9102208	ArgumentList	gs_error_typecheck		9102106	1					
ANR	9102209	Argument	gs_error_typecheck		9102106	0					
ANR	9102210	Identifier	gs_error_typecheck		9102106	0					
ANR	9102211	ElseStatement	else		9102106	0					
ANR	9102212	ExpressionStatement	pfr -> OtherSubrs = & pfr -> no_subrs	83:8:2486:2518	9102106	0	True				
ANR	9102213	AssignmentExpression	pfr -> OtherSubrs = & pfr -> no_subrs		9102106	0		=			
ANR	9102214	PtrMemberAccess	pfr -> OtherSubrs		9102106	0					
ANR	9102215	Identifier	pfr		9102106	0					
ANR	9102216	Identifier	OtherSubrs		9102106	1					
ANR	9102217	UnaryOperationExpression	& pfr -> no_subrs		9102106	1					
ANR	9102218	UnaryOperator	&		9102106	0					
ANR	9102219	PtrMemberAccess	pfr -> no_subrs		9102106	1					
ANR	9102220	Identifier	pfr		9102106	0					
ANR	9102221	Identifier	no_subrs		9102106	1					
ANR	9102222	IfStatement	"if ( dict_find_string ( pfr -> Private , ""Subrs"" , & pfr -> Subrs ) > 0 )"		9102106	4					
ANR	9102223	Condition	"dict_find_string ( pfr -> Private , ""Subrs"" , & pfr -> Subrs ) > 0"	84:8:2528:2583	9102106	0	True				
ANR	9102224	RelationalExpression	"dict_find_string ( pfr -> Private , ""Subrs"" , & pfr -> Subrs ) > 0"		9102106	0		>			
ANR	9102225	CallExpression	"dict_find_string ( pfr -> Private , ""Subrs"" , & pfr -> Subrs )"		9102106	0					
ANR	9102226	Callee	dict_find_string		9102106	0					
ANR	9102227	Identifier	dict_find_string		9102106	0					
ANR	9102228	ArgumentList	pfr -> Private		9102106	1					
ANR	9102229	Argument	pfr -> Private		9102106	0					
ANR	9102230	PtrMemberAccess	pfr -> Private		9102106	0					
ANR	9102231	Identifier	pfr		9102106	0					
ANR	9102232	Identifier	Private		9102106	1					
ANR	9102233	Argument	"""Subrs"""		9102106	1					
ANR	9102234	PrimaryExpression	"""Subrs"""		9102106	0					
ANR	9102235	Argument	& pfr -> Subrs		9102106	2					
ANR	9102236	UnaryOperationExpression	& pfr -> Subrs		9102106	0					
ANR	9102237	UnaryOperator	&		9102106	0					
ANR	9102238	PtrMemberAccess	pfr -> Subrs		9102106	1					
ANR	9102239	Identifier	pfr		9102106	0					
ANR	9102240	Identifier	Subrs		9102106	1					
ANR	9102241	PrimaryExpression	0		9102106	1					
ANR	9102242	CompoundStatement		13:66:527:527	9102106	1					
ANR	9102243	IfStatement	if ( ! r_is_array ( pfr -> Subrs ) )		9102106	0					
ANR	9102244	Condition	! r_is_array ( pfr -> Subrs )	85:12:2600:2622	9102106	0	True				
ANR	9102245	UnaryOperationExpression	! r_is_array ( pfr -> Subrs )		9102106	0					
ANR	9102246	UnaryOperator	!		9102106	0					
ANR	9102247	CallExpression	r_is_array ( pfr -> Subrs )		9102106	1					
ANR	9102248	Callee	r_is_array		9102106	0					
ANR	9102249	Identifier	r_is_array		9102106	0					
ANR	9102250	ArgumentList	pfr -> Subrs		9102106	1					
ANR	9102251	Argument	pfr -> Subrs		9102106	0					
ANR	9102252	PtrMemberAccess	pfr -> Subrs		9102106	0					
ANR	9102253	Identifier	pfr		9102106	0					
ANR	9102254	Identifier	Subrs		9102106	1					
ANR	9102255	ExpressionStatement	return_error ( gs_error_typecheck )	86:12:2637:2669	9102106	1	True				
ANR	9102256	CallExpression	return_error ( gs_error_typecheck )		9102106	0					
ANR	9102257	Callee	return_error		9102106	0					
ANR	9102258	Identifier	return_error		9102106	0					
ANR	9102259	ArgumentList	gs_error_typecheck		9102106	1					
ANR	9102260	Argument	gs_error_typecheck		9102106	0					
ANR	9102261	Identifier	gs_error_typecheck		9102106	0					
ANR	9102262	ElseStatement	else		9102106	0					
ANR	9102263	ExpressionStatement	pfr -> Subrs = & pfr -> no_subrs	88:8:2690:2717	9102106	0	True				
ANR	9102264	AssignmentExpression	pfr -> Subrs = & pfr -> no_subrs		9102106	0		=			
ANR	9102265	PtrMemberAccess	pfr -> Subrs		9102106	0					
ANR	9102266	Identifier	pfr		9102106	0					
ANR	9102267	Identifier	Subrs		9102106	1					
ANR	9102268	UnaryOperationExpression	& pfr -> no_subrs		9102106	1					
ANR	9102269	UnaryOperator	&		9102106	0					
ANR	9102270	PtrMemberAccess	pfr -> no_subrs		9102106	1					
ANR	9102271	Identifier	pfr		9102106	0					
ANR	9102272	Identifier	no_subrs		9102106	1					
ANR	9102273	ExpressionStatement	pfr -> GlobalSubrs = & pfr -> no_subrs	89:4:2723:2756	9102106	5	True				
ANR	9102274	AssignmentExpression	pfr -> GlobalSubrs = & pfr -> no_subrs		9102106	0		=			
ANR	9102275	PtrMemberAccess	pfr -> GlobalSubrs		9102106	0					
ANR	9102276	Identifier	pfr		9102106	0					
ANR	9102277	Identifier	GlobalSubrs		9102106	1					
ANR	9102278	UnaryOperationExpression	& pfr -> no_subrs		9102106	1					
ANR	9102279	UnaryOperator	&		9102106	0					
ANR	9102280	PtrMemberAccess	pfr -> no_subrs		9102106	1					
ANR	9102281	Identifier	pfr		9102106	0					
ANR	9102282	Identifier	no_subrs		9102106	1					
ANR	9102283	ReturnStatement	return 0 ;	90:4:2762:2770	9102106	6	True				
ANR	9102284	PrimaryExpression	0		9102106	0					
ANR	9102285	ReturnType	int		9102106	1					
ANR	9102286	Identifier	charstring_font_get_refs		9102106	2					
ANR	9102287	ParameterList	"const_os_ptr op , charstring_font_refs_t * pfr"		9102106	3					
ANR	9102288	Parameter	const_os_ptr op	71:25:2012:2026	9102106	0	True				
ANR	9102289	ParameterType	const_os_ptr		9102106	0					
ANR	9102290	Identifier	op		9102106	1					
ANR	9102291	Parameter	charstring_font_refs_t * pfr	71:42:2029:2055	9102106	1	True				
ANR	9102292	ParameterType	charstring_font_refs_t *		9102106	0					
ANR	9102293	Identifier	pfr		9102106	1					
ANR	9102294	CFGEntryNode	ENTRY		9102106		True				
ANR	9102295	CFGExitNode	EXIT		9102106		True				
ANR	9102296	Symbol	op		9102106						
ANR	9102297	Symbol	pfr -> Subrs		9102106						
ANR	9102298	Symbol	t_dictionary		9102106						
ANR	9102299	Symbol	* op		9102106						
ANR	9102300	Symbol	dict_find_string		9102106						
ANR	9102301	Symbol	* pfr		9102106						
ANR	9102302	Symbol	& pfr -> Private		9102106						
ANR	9102303	Symbol	& pfr -> no_subrs		9102106						
ANR	9102304	Symbol	pfr -> Private		9102106						
ANR	9102305	Symbol	& pfr -> Subrs		9102106						
ANR	9102306	Symbol	r_has_type		9102106						
ANR	9102307	Symbol	gs_error_typecheck		9102106						
ANR	9102308	Symbol	pfr -> OtherSubrs		9102106						
ANR	9102309	Symbol	& pfr -> OtherSubrs		9102106						
ANR	9102310	Symbol	r_is_array		9102106						
ANR	9102311	Symbol	pfr -> GlobalSubrs		9102106						
ANR	9102312	Symbol	gs_error_invalidfont		9102106						
ANR	9102313	Symbol	pfr		9102106						
ANR	9102314	Function	charstring_font_params	94:0:2847:7872							
ANR	9102315	FunctionDef	"charstring_font_params (const gs_memory_t * mem , const_os_ptr op , charstring_font_refs_t * pfr , gs_type1_data * pdata1)"		9102314	0					
ANR	9102316	CompoundStatement		98:0:3013:7872	9102314	0					
ANR	9102317	IdentifierDeclStatement	const ref * pprivate = pfr -> Private ;	99:4:3019:3053	9102314	0	True				
ANR	9102318	IdentifierDecl	* pprivate = pfr -> Private		9102314	0					
ANR	9102319	IdentifierDeclType	const ref *		9102314	0					
ANR	9102320	Identifier	pprivate		9102314	1					
ANR	9102321	AssignmentExpression	* pprivate = pfr -> Private		9102314	2		=			
ANR	9102322	Identifier	pprivate		9102314	0					
ANR	9102323	PtrMemberAccess	pfr -> Private		9102314	1					
ANR	9102324	Identifier	pfr		9102314	0					
ANR	9102325	Identifier	Private		9102314	1					
ANR	9102326	IdentifierDeclStatement	int code ;	100:4:3059:3067	9102314	1	True				
ANR	9102327	IdentifierDecl	code		9102314	0					
ANR	9102328	IdentifierDeclType	int		9102314	0					
ANR	9102329	Identifier	code		9102314	1					
ANR	9102330	IfStatement	"if ( ( code = dict_int_param ( pprivate , ""lenIV"" , - 1 , 255 , pdata1 -> lenIV , & pdata1 -> lenIV ) ) < 0 )"		9102314	2					
ANR	9102331	Condition	"( code = dict_int_param ( pprivate , ""lenIV"" , - 1 , 255 , pdata1 -> lenIV , & pdata1 -> lenIV ) ) < 0"	103:8:3149:3234	9102314	0	True				
ANR	9102332	RelationalExpression	"( code = dict_int_param ( pprivate , ""lenIV"" , - 1 , 255 , pdata1 -> lenIV , & pdata1 -> lenIV ) ) < 0"		9102314	0		<			
ANR	9102333	AssignmentExpression	"code = dict_int_param ( pprivate , ""lenIV"" , - 1 , 255 , pdata1 -> lenIV , & pdata1 -> lenIV )"		9102314	0		=			
ANR	9102334	Identifier	code		9102314	0					
ANR	9102335	CallExpression	"dict_int_param ( pprivate , ""lenIV"" , - 1 , 255 , pdata1 -> lenIV , & pdata1 -> lenIV )"		9102314	1					
ANR	9102336	Callee	dict_int_param		9102314	0					
ANR	9102337	Identifier	dict_int_param		9102314	0					
ANR	9102338	ArgumentList	pprivate		9102314	1					
ANR	9102339	Argument	pprivate		9102314	0					
ANR	9102340	Identifier	pprivate		9102314	0					
ANR	9102341	Argument	"""lenIV"""		9102314	1					
ANR	9102342	PrimaryExpression	"""lenIV"""		9102314	0					
ANR	9102343	Argument	- 1		9102314	2					
ANR	9102344	UnaryOperationExpression	- 1		9102314	0					
ANR	9102345	UnaryOperator	-		9102314	0					
ANR	9102346	PrimaryExpression	1		9102314	1					
ANR	9102347	Argument	255		9102314	3					
ANR	9102348	PrimaryExpression	255		9102314	0					
ANR	9102349	Argument	pdata1 -> lenIV		9102314	4					
ANR	9102350	PtrMemberAccess	pdata1 -> lenIV		9102314	0					
ANR	9102351	Identifier	pdata1		9102314	0					
ANR	9102352	Identifier	lenIV		9102314	1					
ANR	9102353	Argument	& pdata1 -> lenIV		9102314	5					
ANR	9102354	UnaryOperationExpression	& pdata1 -> lenIV		9102314	0					
ANR	9102355	UnaryOperator	&		9102314	0					
ANR	9102356	PtrMemberAccess	pdata1 -> lenIV		9102314	1					
ANR	9102357	Identifier	pdata1		9102314	0					
ANR	9102358	Identifier	lenIV		9102314	1					
ANR	9102359	PrimaryExpression	0		9102314	1					
ANR	9102360	ReturnStatement	return code ;	104:8:3245:3256	9102314	1	True				
ANR	9102361	Identifier	code		9102314	0					
ANR	9102362	IfStatement	"if ( ( code = dict_uint_param ( pprivate , ""subroutineNumberBias"" , 0 , max_uint , pdata1 -> subroutineNumberBias , & pdata1 -> subroutineNumberBias ) ) < 0 )"		9102314	3					
ANR	9102363	Condition	"( code = dict_uint_param ( pprivate , ""subroutineNumberBias"" , 0 , max_uint , pdata1 -> subroutineNumberBias , & pdata1 -> subroutineNumberBias ) ) < 0"	105:8:3266:3410	9102314	0	True				
ANR	9102364	RelationalExpression	"( code = dict_uint_param ( pprivate , ""subroutineNumberBias"" , 0 , max_uint , pdata1 -> subroutineNumberBias , & pdata1 -> subroutineNumberBias ) ) < 0"		9102314	0		<			
ANR	9102365	AssignmentExpression	"code = dict_uint_param ( pprivate , ""subroutineNumberBias"" , 0 , max_uint , pdata1 -> subroutineNumberBias , & pdata1 -> subroutineNumberBias )"		9102314	0		=			
ANR	9102366	Identifier	code		9102314	0					
ANR	9102367	CallExpression	"dict_uint_param ( pprivate , ""subroutineNumberBias"" , 0 , max_uint , pdata1 -> subroutineNumberBias , & pdata1 -> subroutineNumberBias )"		9102314	1					
ANR	9102368	Callee	dict_uint_param		9102314	0					
ANR	9102369	Identifier	dict_uint_param		9102314	0					
ANR	9102370	ArgumentList	pprivate		9102314	1					
ANR	9102371	Argument	pprivate		9102314	0					
ANR	9102372	Identifier	pprivate		9102314	0					
ANR	9102373	Argument	"""subroutineNumberBias"""		9102314	1					
ANR	9102374	PrimaryExpression	"""subroutineNumberBias"""		9102314	0					
ANR	9102375	Argument	0		9102314	2					
ANR	9102376	PrimaryExpression	0		9102314	0					
ANR	9102377	Argument	max_uint		9102314	3					
ANR	9102378	Identifier	max_uint		9102314	0					
ANR	9102379	Argument	pdata1 -> subroutineNumberBias		9102314	4					
ANR	9102380	PtrMemberAccess	pdata1 -> subroutineNumberBias		9102314	0					
ANR	9102381	Identifier	pdata1		9102314	0					
ANR	9102382	Identifier	subroutineNumberBias		9102314	1					
ANR	9102383	Argument	& pdata1 -> subroutineNumberBias		9102314	5					
ANR	9102384	UnaryOperationExpression	& pdata1 -> subroutineNumberBias		9102314	0					
ANR	9102385	UnaryOperator	&		9102314	0					
ANR	9102386	PtrMemberAccess	pdata1 -> subroutineNumberBias		9102314	1					
ANR	9102387	Identifier	pdata1		9102314	0					
ANR	9102388	Identifier	subroutineNumberBias		9102314	1					
ANR	9102389	PrimaryExpression	0		9102314	1					
ANR	9102390	ReturnStatement	return code ;	107:8:3421:3432	9102314	1	True				
ANR	9102391	Identifier	code		9102314	0					
ANR	9102392	IfStatement	"if ( ( code = dict_int_param ( pprivate , ""BlueFuzz"" , 0 , 1999 , 1 , & pdata1 -> BlueFuzz ) ) < 0 )"		9102314	4					
ANR	9102393	Condition	"( code = dict_int_param ( pprivate , ""BlueFuzz"" , 0 , 1999 , 1 , & pdata1 -> BlueFuzz ) ) < 0"	108:8:3442:3521	9102314	0	True				
ANR	9102394	RelationalExpression	"( code = dict_int_param ( pprivate , ""BlueFuzz"" , 0 , 1999 , 1 , & pdata1 -> BlueFuzz ) ) < 0"		9102314	0		<			
ANR	9102395	AssignmentExpression	"code = dict_int_param ( pprivate , ""BlueFuzz"" , 0 , 1999 , 1 , & pdata1 -> BlueFuzz )"		9102314	0		=			
ANR	9102396	Identifier	code		9102314	0					
ANR	9102397	CallExpression	"dict_int_param ( pprivate , ""BlueFuzz"" , 0 , 1999 , 1 , & pdata1 -> BlueFuzz )"		9102314	1					
ANR	9102398	Callee	dict_int_param		9102314	0					
ANR	9102399	Identifier	dict_int_param		9102314	0					
ANR	9102400	ArgumentList	pprivate		9102314	1					
ANR	9102401	Argument	pprivate		9102314	0					
ANR	9102402	Identifier	pprivate		9102314	0					
ANR	9102403	Argument	"""BlueFuzz"""		9102314	1					
ANR	9102404	PrimaryExpression	"""BlueFuzz"""		9102314	0					
ANR	9102405	Argument	0		9102314	2					
ANR	9102406	PrimaryExpression	0		9102314	0					
ANR	9102407	Argument	1999		9102314	3					
ANR	9102408	PrimaryExpression	1999		9102314	0					
ANR	9102409	Argument	1		9102314	4					
ANR	9102410	PrimaryExpression	1		9102314	0					
ANR	9102411	Argument	& pdata1 -> BlueFuzz		9102314	5					
ANR	9102412	UnaryOperationExpression	& pdata1 -> BlueFuzz		9102314	0					
ANR	9102413	UnaryOperator	&		9102314	0					
ANR	9102414	PtrMemberAccess	pdata1 -> BlueFuzz		9102314	1					
ANR	9102415	Identifier	pdata1		9102314	0					
ANR	9102416	Identifier	BlueFuzz		9102314	1					
ANR	9102417	PrimaryExpression	0		9102314	1					
ANR	9102418	ReturnStatement	return code ;	109:8:3532:3543	9102314	1	True				
ANR	9102419	Identifier	code		9102314	0					
ANR	9102420	IfStatement	"if ( ( code = dict_float_param ( pprivate , ""BlueScale"" , 0.039625 , & pdata1 -> BlueScale ) ) < 0 )"		9102314	5					
ANR	9102421	Condition	"( code = dict_float_param ( pprivate , ""BlueScale"" , 0.039625 , & pdata1 -> BlueScale ) ) < 0"	110:8:3553:3634	9102314	0	True				
ANR	9102422	RelationalExpression	"( code = dict_float_param ( pprivate , ""BlueScale"" , 0.039625 , & pdata1 -> BlueScale ) ) < 0"		9102314	0		<			
ANR	9102423	AssignmentExpression	"code = dict_float_param ( pprivate , ""BlueScale"" , 0.039625 , & pdata1 -> BlueScale )"		9102314	0		=			
ANR	9102424	Identifier	code		9102314	0					
ANR	9102425	CallExpression	"dict_float_param ( pprivate , ""BlueScale"" , 0.039625 , & pdata1 -> BlueScale )"		9102314	1					
ANR	9102426	Callee	dict_float_param		9102314	0					
ANR	9102427	Identifier	dict_float_param		9102314	0					
ANR	9102428	ArgumentList	pprivate		9102314	1					
ANR	9102429	Argument	pprivate		9102314	0					
ANR	9102430	Identifier	pprivate		9102314	0					
ANR	9102431	Argument	"""BlueScale"""		9102314	1					
ANR	9102432	PrimaryExpression	"""BlueScale"""		9102314	0					
ANR	9102433	Argument	0.039625		9102314	2					
ANR	9102434	PrimaryExpression	0.039625		9102314	0					
ANR	9102435	Argument	& pdata1 -> BlueScale		9102314	3					
ANR	9102436	UnaryOperationExpression	& pdata1 -> BlueScale		9102314	0					
ANR	9102437	UnaryOperator	&		9102314	0					
ANR	9102438	PtrMemberAccess	pdata1 -> BlueScale		9102314	1					
ANR	9102439	Identifier	pdata1		9102314	0					
ANR	9102440	Identifier	BlueScale		9102314	1					
ANR	9102441	PrimaryExpression	0		9102314	1					
ANR	9102442	ReturnStatement	return code ;	111:8:3645:3656	9102314	1	True				
ANR	9102443	Identifier	code		9102314	0					
ANR	9102444	IfStatement	"if ( ( code = dict_float_param ( pprivate , ""BlueShift"" , 7.0 , & pdata1 -> BlueShift ) ) < 0 )"		9102314	6					
ANR	9102445	Condition	"( code = dict_float_param ( pprivate , ""BlueShift"" , 7.0 , & pdata1 -> BlueShift ) ) < 0"	112:8:3666:3742	9102314	0	True				
ANR	9102446	RelationalExpression	"( code = dict_float_param ( pprivate , ""BlueShift"" , 7.0 , & pdata1 -> BlueShift ) ) < 0"		9102314	0		<			
ANR	9102447	AssignmentExpression	"code = dict_float_param ( pprivate , ""BlueShift"" , 7.0 , & pdata1 -> BlueShift )"		9102314	0		=			
ANR	9102448	Identifier	code		9102314	0					
ANR	9102449	CallExpression	"dict_float_param ( pprivate , ""BlueShift"" , 7.0 , & pdata1 -> BlueShift )"		9102314	1					
ANR	9102450	Callee	dict_float_param		9102314	0					
ANR	9102451	Identifier	dict_float_param		9102314	0					
ANR	9102452	ArgumentList	pprivate		9102314	1					
ANR	9102453	Argument	pprivate		9102314	0					
ANR	9102454	Identifier	pprivate		9102314	0					
ANR	9102455	Argument	"""BlueShift"""		9102314	1					
ANR	9102456	PrimaryExpression	"""BlueShift"""		9102314	0					
ANR	9102457	Argument	7.0		9102314	2					
ANR	9102458	PrimaryExpression	7.0		9102314	0					
ANR	9102459	Argument	& pdata1 -> BlueShift		9102314	3					
ANR	9102460	UnaryOperationExpression	& pdata1 -> BlueShift		9102314	0					
ANR	9102461	UnaryOperator	&		9102314	0					
ANR	9102462	PtrMemberAccess	pdata1 -> BlueShift		9102314	1					
ANR	9102463	Identifier	pdata1		9102314	0					
ANR	9102464	Identifier	BlueShift		9102314	1					
ANR	9102465	PrimaryExpression	0		9102314	1					
ANR	9102466	ReturnStatement	return code ;	113:8:3753:3764	9102314	1	True				
ANR	9102467	Identifier	code		9102314	0					
ANR	9102468	IfStatement	"if ( ( code = pdata1 -> BlueValues . count = dict_float_array_param ( mem , pprivate , ""BlueValues"" , max_BlueValues * 2 , & pdata1 -> BlueValues . values [ 0 ] , NULL ) ) < 0 )"		9102314	7					
ANR	9102469	Condition	"( code = pdata1 -> BlueValues . count = dict_float_array_param ( mem , pprivate , ""BlueValues"" , max_BlueValues * 2 , & pdata1 -> BlueValues . values [ 0 ] , NULL ) ) < 0"	114:8:3774:3937	9102314	0	True				
ANR	9102470	RelationalExpression	"( code = pdata1 -> BlueValues . count = dict_float_array_param ( mem , pprivate , ""BlueValues"" , max_BlueValues * 2 , & pdata1 -> BlueValues . values [ 0 ] , NULL ) ) < 0"		9102314	0		<			
ANR	9102471	AssignmentExpression	"code = pdata1 -> BlueValues . count = dict_float_array_param ( mem , pprivate , ""BlueValues"" , max_BlueValues * 2 , & pdata1 -> BlueValues . values [ 0 ] , NULL )"		9102314	0		=			
ANR	9102472	Identifier	code		9102314	0					
ANR	9102473	AssignmentExpression	"pdata1 -> BlueValues . count = dict_float_array_param ( mem , pprivate , ""BlueValues"" , max_BlueValues * 2 , & pdata1 -> BlueValues . values [ 0 ] , NULL )"		9102314	1		=			
ANR	9102474	MemberAccess	pdata1 -> BlueValues . count		9102314	0					
ANR	9102475	PtrMemberAccess	pdata1 -> BlueValues		9102314	0					
ANR	9102476	Identifier	pdata1		9102314	0					
ANR	9102477	Identifier	BlueValues		9102314	1					
ANR	9102478	Identifier	count		9102314	1					
ANR	9102479	CallExpression	"dict_float_array_param ( mem , pprivate , ""BlueValues"" , max_BlueValues * 2 , & pdata1 -> BlueValues . values [ 0 ] , NULL )"		9102314	1					
ANR	9102480	Callee	dict_float_array_param		9102314	0					
ANR	9102481	Identifier	dict_float_array_param		9102314	0					
ANR	9102482	ArgumentList	mem		9102314	1					
ANR	9102483	Argument	mem		9102314	0					
ANR	9102484	Identifier	mem		9102314	0					
ANR	9102485	Argument	pprivate		9102314	1					
ANR	9102486	Identifier	pprivate		9102314	0					
ANR	9102487	Argument	"""BlueValues"""		9102314	2					
ANR	9102488	PrimaryExpression	"""BlueValues"""		9102314	0					
ANR	9102489	Argument	max_BlueValues * 2		9102314	3					
ANR	9102490	MultiplicativeExpression	max_BlueValues * 2		9102314	0		*			
ANR	9102491	Identifier	max_BlueValues		9102314	0					
ANR	9102492	PrimaryExpression	2		9102314	1					
ANR	9102493	Argument	& pdata1 -> BlueValues . values [ 0 ]		9102314	4					
ANR	9102494	UnaryOperationExpression	& pdata1 -> BlueValues . values [ 0 ]		9102314	0					
ANR	9102495	UnaryOperator	&		9102314	0					
ANR	9102496	ArrayIndexing	pdata1 -> BlueValues . values [ 0 ]		9102314	1					
ANR	9102497	MemberAccess	pdata1 -> BlueValues . values		9102314	0					
ANR	9102498	PtrMemberAccess	pdata1 -> BlueValues		9102314	0					
ANR	9102499	Identifier	pdata1		9102314	0					
ANR	9102500	Identifier	BlueValues		9102314	1					
ANR	9102501	Identifier	values		9102314	1					
ANR	9102502	PrimaryExpression	0		9102314	1					
ANR	9102503	Argument	NULL		9102314	5					
ANR	9102504	Identifier	NULL		9102314	0					
ANR	9102505	PrimaryExpression	0		9102314	1					
ANR	9102506	ReturnStatement	return code ;	116:8:3948:3959	9102314	1	True				
ANR	9102507	Identifier	code		9102314	0					
ANR	9102508	IfStatement	"if ( ( code = dict_float_param ( pprivate , ""ExpansionFactor"" , 0.06 , & pdata1 -> ExpansionFactor ) ) < 0 )"		9102314	8					
ANR	9102509	Condition	"( code = dict_float_param ( pprivate , ""ExpansionFactor"" , 0.06 , & pdata1 -> ExpansionFactor ) ) < 0"	117:8:3969:4058	9102314	0	True				
ANR	9102510	RelationalExpression	"( code = dict_float_param ( pprivate , ""ExpansionFactor"" , 0.06 , & pdata1 -> ExpansionFactor ) ) < 0"		9102314	0		<			
ANR	9102511	AssignmentExpression	"code = dict_float_param ( pprivate , ""ExpansionFactor"" , 0.06 , & pdata1 -> ExpansionFactor )"		9102314	0		=			
ANR	9102512	Identifier	code		9102314	0					
ANR	9102513	CallExpression	"dict_float_param ( pprivate , ""ExpansionFactor"" , 0.06 , & pdata1 -> ExpansionFactor )"		9102314	1					
ANR	9102514	Callee	dict_float_param		9102314	0					
ANR	9102515	Identifier	dict_float_param		9102314	0					
ANR	9102516	ArgumentList	pprivate		9102314	1					
ANR	9102517	Argument	pprivate		9102314	0					
ANR	9102518	Identifier	pprivate		9102314	0					
ANR	9102519	Argument	"""ExpansionFactor"""		9102314	1					
ANR	9102520	PrimaryExpression	"""ExpansionFactor"""		9102314	0					
ANR	9102521	Argument	0.06		9102314	2					
ANR	9102522	PrimaryExpression	0.06		9102314	0					
ANR	9102523	Argument	& pdata1 -> ExpansionFactor		9102314	3					
ANR	9102524	UnaryOperationExpression	& pdata1 -> ExpansionFactor		9102314	0					
ANR	9102525	UnaryOperator	&		9102314	0					
ANR	9102526	PtrMemberAccess	pdata1 -> ExpansionFactor		9102314	1					
ANR	9102527	Identifier	pdata1		9102314	0					
ANR	9102528	Identifier	ExpansionFactor		9102314	1					
ANR	9102529	PrimaryExpression	0		9102314	1					
ANR	9102530	ReturnStatement	return code ;	118:8:4069:4080	9102314	1	True				
ANR	9102531	Identifier	code		9102314	0					
ANR	9102532	IfStatement	"if ( ( code = pdata1 -> FamilyBlues . count = dict_float_array_param ( mem , pprivate , ""FamilyBlues"" , max_FamilyBlues * 2 , & pdata1 -> FamilyBlues . values [ 0 ] , NULL ) ) < 0 )"		9102314	9					
ANR	9102533	Condition	"( code = pdata1 -> FamilyBlues . count = dict_float_array_param ( mem , pprivate , ""FamilyBlues"" , max_FamilyBlues * 2 , & pdata1 -> FamilyBlues . values [ 0 ] , NULL ) ) < 0"	119:8:4090:4257	9102314	0	True				
ANR	9102534	RelationalExpression	"( code = pdata1 -> FamilyBlues . count = dict_float_array_param ( mem , pprivate , ""FamilyBlues"" , max_FamilyBlues * 2 , & pdata1 -> FamilyBlues . values [ 0 ] , NULL ) ) < 0"		9102314	0		<			
ANR	9102535	AssignmentExpression	"code = pdata1 -> FamilyBlues . count = dict_float_array_param ( mem , pprivate , ""FamilyBlues"" , max_FamilyBlues * 2 , & pdata1 -> FamilyBlues . values [ 0 ] , NULL )"		9102314	0		=			
ANR	9102536	Identifier	code		9102314	0					
ANR	9102537	AssignmentExpression	"pdata1 -> FamilyBlues . count = dict_float_array_param ( mem , pprivate , ""FamilyBlues"" , max_FamilyBlues * 2 , & pdata1 -> FamilyBlues . values [ 0 ] , NULL )"		9102314	1		=			
ANR	9102538	MemberAccess	pdata1 -> FamilyBlues . count		9102314	0					
ANR	9102539	PtrMemberAccess	pdata1 -> FamilyBlues		9102314	0					
ANR	9102540	Identifier	pdata1		9102314	0					
ANR	9102541	Identifier	FamilyBlues		9102314	1					
ANR	9102542	Identifier	count		9102314	1					
ANR	9102543	CallExpression	"dict_float_array_param ( mem , pprivate , ""FamilyBlues"" , max_FamilyBlues * 2 , & pdata1 -> FamilyBlues . values [ 0 ] , NULL )"		9102314	1					
ANR	9102544	Callee	dict_float_array_param		9102314	0					
ANR	9102545	Identifier	dict_float_array_param		9102314	0					
ANR	9102546	ArgumentList	mem		9102314	1					
ANR	9102547	Argument	mem		9102314	0					
ANR	9102548	Identifier	mem		9102314	0					
ANR	9102549	Argument	pprivate		9102314	1					
ANR	9102550	Identifier	pprivate		9102314	0					
ANR	9102551	Argument	"""FamilyBlues"""		9102314	2					
ANR	9102552	PrimaryExpression	"""FamilyBlues"""		9102314	0					
ANR	9102553	Argument	max_FamilyBlues * 2		9102314	3					
ANR	9102554	MultiplicativeExpression	max_FamilyBlues * 2		9102314	0		*			
ANR	9102555	Identifier	max_FamilyBlues		9102314	0					
ANR	9102556	PrimaryExpression	2		9102314	1					
ANR	9102557	Argument	& pdata1 -> FamilyBlues . values [ 0 ]		9102314	4					
ANR	9102558	UnaryOperationExpression	& pdata1 -> FamilyBlues . values [ 0 ]		9102314	0					
ANR	9102559	UnaryOperator	&		9102314	0					
ANR	9102560	ArrayIndexing	pdata1 -> FamilyBlues . values [ 0 ]		9102314	1					
ANR	9102561	MemberAccess	pdata1 -> FamilyBlues . values		9102314	0					
ANR	9102562	PtrMemberAccess	pdata1 -> FamilyBlues		9102314	0					
ANR	9102563	Identifier	pdata1		9102314	0					
ANR	9102564	Identifier	FamilyBlues		9102314	1					
ANR	9102565	Identifier	values		9102314	1					
ANR	9102566	PrimaryExpression	0		9102314	1					
ANR	9102567	Argument	NULL		9102314	5					
ANR	9102568	Identifier	NULL		9102314	0					
ANR	9102569	PrimaryExpression	0		9102314	1					
ANR	9102570	ReturnStatement	return code ;	121:8:4268:4279	9102314	1	True				
ANR	9102571	Identifier	code		9102314	0					
ANR	9102572	IfStatement	"if ( ( code = pdata1 -> FamilyOtherBlues . count = dict_float_array_param ( mem , pprivate , ""FamilyOtherBlues"" , max_FamilyOtherBlues * 2 , & pdata1 -> FamilyOtherBlues . values [ 0 ] , NULL ) ) < 0 )"		9102314	10					
ANR	9102573	Condition	"( code = pdata1 -> FamilyOtherBlues . count = dict_float_array_param ( mem , pprivate , ""FamilyOtherBlues"" , max_FamilyOtherBlues * 2 , & pdata1 -> FamilyOtherBlues . values [ 0 ] , NULL ) ) < 0"	122:8:4289:4476	9102314	0	True				
ANR	9102574	RelationalExpression	"( code = pdata1 -> FamilyOtherBlues . count = dict_float_array_param ( mem , pprivate , ""FamilyOtherBlues"" , max_FamilyOtherBlues * 2 , & pdata1 -> FamilyOtherBlues . values [ 0 ] , NULL ) ) < 0"		9102314	0		<			
ANR	9102575	AssignmentExpression	"code = pdata1 -> FamilyOtherBlues . count = dict_float_array_param ( mem , pprivate , ""FamilyOtherBlues"" , max_FamilyOtherBlues * 2 , & pdata1 -> FamilyOtherBlues . values [ 0 ] , NULL )"		9102314	0		=			
ANR	9102576	Identifier	code		9102314	0					
ANR	9102577	AssignmentExpression	"pdata1 -> FamilyOtherBlues . count = dict_float_array_param ( mem , pprivate , ""FamilyOtherBlues"" , max_FamilyOtherBlues * 2 , & pdata1 -> FamilyOtherBlues . values [ 0 ] , NULL )"		9102314	1		=			
ANR	9102578	MemberAccess	pdata1 -> FamilyOtherBlues . count		9102314	0					
ANR	9102579	PtrMemberAccess	pdata1 -> FamilyOtherBlues		9102314	0					
ANR	9102580	Identifier	pdata1		9102314	0					
ANR	9102581	Identifier	FamilyOtherBlues		9102314	1					
ANR	9102582	Identifier	count		9102314	1					
ANR	9102583	CallExpression	"dict_float_array_param ( mem , pprivate , ""FamilyOtherBlues"" , max_FamilyOtherBlues * 2 , & pdata1 -> FamilyOtherBlues . values [ 0 ] , NULL )"		9102314	1					
ANR	9102584	Callee	dict_float_array_param		9102314	0					
ANR	9102585	Identifier	dict_float_array_param		9102314	0					
ANR	9102586	ArgumentList	mem		9102314	1					
ANR	9102587	Argument	mem		9102314	0					
ANR	9102588	Identifier	mem		9102314	0					
ANR	9102589	Argument	pprivate		9102314	1					
ANR	9102590	Identifier	pprivate		9102314	0					
ANR	9102591	Argument	"""FamilyOtherBlues"""		9102314	2					
ANR	9102592	PrimaryExpression	"""FamilyOtherBlues"""		9102314	0					
ANR	9102593	Argument	max_FamilyOtherBlues * 2		9102314	3					
ANR	9102594	MultiplicativeExpression	max_FamilyOtherBlues * 2		9102314	0		*			
ANR	9102595	Identifier	max_FamilyOtherBlues		9102314	0					
ANR	9102596	PrimaryExpression	2		9102314	1					
ANR	9102597	Argument	& pdata1 -> FamilyOtherBlues . values [ 0 ]		9102314	4					
ANR	9102598	UnaryOperationExpression	& pdata1 -> FamilyOtherBlues . values [ 0 ]		9102314	0					
ANR	9102599	UnaryOperator	&		9102314	0					
ANR	9102600	ArrayIndexing	pdata1 -> FamilyOtherBlues . values [ 0 ]		9102314	1					
ANR	9102601	MemberAccess	pdata1 -> FamilyOtherBlues . values		9102314	0					
ANR	9102602	PtrMemberAccess	pdata1 -> FamilyOtherBlues		9102314	0					
ANR	9102603	Identifier	pdata1		9102314	0					
ANR	9102604	Identifier	FamilyOtherBlues		9102314	1					
ANR	9102605	Identifier	values		9102314	1					
ANR	9102606	PrimaryExpression	0		9102314	1					
ANR	9102607	Argument	NULL		9102314	5					
ANR	9102608	Identifier	NULL		9102314	0					
ANR	9102609	PrimaryExpression	0		9102314	1					
ANR	9102610	ReturnStatement	return code ;	124:8:4487:4498	9102314	1	True				
ANR	9102611	Identifier	code		9102314	0					
ANR	9102612	IfStatement	"if ( ( code = dict_bool_param ( pprivate , ""ForceBold"" , false , & pdata1 -> ForceBold ) ) < 0 )"		9102314	11					
ANR	9102613	Condition	"( code = dict_bool_param ( pprivate , ""ForceBold"" , false , & pdata1 -> ForceBold ) ) < 0"	125:8:4508:4585	9102314	0	True				
ANR	9102614	RelationalExpression	"( code = dict_bool_param ( pprivate , ""ForceBold"" , false , & pdata1 -> ForceBold ) ) < 0"		9102314	0		<			
ANR	9102615	AssignmentExpression	"code = dict_bool_param ( pprivate , ""ForceBold"" , false , & pdata1 -> ForceBold )"		9102314	0		=			
ANR	9102616	Identifier	code		9102314	0					
ANR	9102617	CallExpression	"dict_bool_param ( pprivate , ""ForceBold"" , false , & pdata1 -> ForceBold )"		9102314	1					
ANR	9102618	Callee	dict_bool_param		9102314	0					
ANR	9102619	Identifier	dict_bool_param		9102314	0					
ANR	9102620	ArgumentList	pprivate		9102314	1					
ANR	9102621	Argument	pprivate		9102314	0					
ANR	9102622	Identifier	pprivate		9102314	0					
ANR	9102623	Argument	"""ForceBold"""		9102314	1					
ANR	9102624	PrimaryExpression	"""ForceBold"""		9102314	0					
ANR	9102625	Argument	false		9102314	2					
ANR	9102626	Identifier	false		9102314	0					
ANR	9102627	Argument	& pdata1 -> ForceBold		9102314	3					
ANR	9102628	UnaryOperationExpression	& pdata1 -> ForceBold		9102314	0					
ANR	9102629	UnaryOperator	&		9102314	0					
ANR	9102630	PtrMemberAccess	pdata1 -> ForceBold		9102314	1					
ANR	9102631	Identifier	pdata1		9102314	0					
ANR	9102632	Identifier	ForceBold		9102314	1					
ANR	9102633	PrimaryExpression	0		9102314	1					
ANR	9102634	ReturnStatement	return code ;	126:8:4596:4607	9102314	1	True				
ANR	9102635	Identifier	code		9102314	0					
ANR	9102636	IfStatement	"if ( ( code = dict_int_param ( pprivate , ""LanguageGroup"" , min_int , max_int , 0 , & pdata1 -> LanguageGroup ) ) < 0 )"		9102314	12					
ANR	9102637	Condition	"( code = dict_int_param ( pprivate , ""LanguageGroup"" , min_int , max_int , 0 , & pdata1 -> LanguageGroup ) ) < 0"	131:8:4773:4871	9102314	0	True				
ANR	9102638	RelationalExpression	"( code = dict_int_param ( pprivate , ""LanguageGroup"" , min_int , max_int , 0 , & pdata1 -> LanguageGroup ) ) < 0"		9102314	0		<			
ANR	9102639	AssignmentExpression	"code = dict_int_param ( pprivate , ""LanguageGroup"" , min_int , max_int , 0 , & pdata1 -> LanguageGroup )"		9102314	0		=			
ANR	9102640	Identifier	code		9102314	0					
ANR	9102641	CallExpression	"dict_int_param ( pprivate , ""LanguageGroup"" , min_int , max_int , 0 , & pdata1 -> LanguageGroup )"		9102314	1					
ANR	9102642	Callee	dict_int_param		9102314	0					
ANR	9102643	Identifier	dict_int_param		9102314	0					
ANR	9102644	ArgumentList	pprivate		9102314	1					
ANR	9102645	Argument	pprivate		9102314	0					
ANR	9102646	Identifier	pprivate		9102314	0					
ANR	9102647	Argument	"""LanguageGroup"""		9102314	1					
ANR	9102648	PrimaryExpression	"""LanguageGroup"""		9102314	0					
ANR	9102649	Argument	min_int		9102314	2					
ANR	9102650	Identifier	min_int		9102314	0					
ANR	9102651	Argument	max_int		9102314	3					
ANR	9102652	Identifier	max_int		9102314	0					
ANR	9102653	Argument	0		9102314	4					
ANR	9102654	PrimaryExpression	0		9102314	0					
ANR	9102655	Argument	& pdata1 -> LanguageGroup		9102314	5					
ANR	9102656	UnaryOperationExpression	& pdata1 -> LanguageGroup		9102314	0					
ANR	9102657	UnaryOperator	&		9102314	0					
ANR	9102658	PtrMemberAccess	pdata1 -> LanguageGroup		9102314	1					
ANR	9102659	Identifier	pdata1		9102314	0					
ANR	9102660	Identifier	LanguageGroup		9102314	1					
ANR	9102661	PrimaryExpression	0		9102314	1					
ANR	9102662	ReturnStatement	return code ;	132:8:4882:4893	9102314	1	True				
ANR	9102663	Identifier	code		9102314	0					
ANR	9102664	IfStatement	"if ( ( code = pdata1 -> OtherBlues . count = dict_float_array_param ( mem , pprivate , ""OtherBlues"" , max_OtherBlues * 2 , & pdata1 -> OtherBlues . values [ 0 ] , NULL ) ) < 0 )"		9102314	13					
ANR	9102665	Condition	"( code = pdata1 -> OtherBlues . count = dict_float_array_param ( mem , pprivate , ""OtherBlues"" , max_OtherBlues * 2 , & pdata1 -> OtherBlues . values [ 0 ] , NULL ) ) < 0"	133:8:4903:5066	9102314	0	True				
ANR	9102666	RelationalExpression	"( code = pdata1 -> OtherBlues . count = dict_float_array_param ( mem , pprivate , ""OtherBlues"" , max_OtherBlues * 2 , & pdata1 -> OtherBlues . values [ 0 ] , NULL ) ) < 0"		9102314	0		<			
ANR	9102667	AssignmentExpression	"code = pdata1 -> OtherBlues . count = dict_float_array_param ( mem , pprivate , ""OtherBlues"" , max_OtherBlues * 2 , & pdata1 -> OtherBlues . values [ 0 ] , NULL )"		9102314	0		=			
ANR	9102668	Identifier	code		9102314	0					
ANR	9102669	AssignmentExpression	"pdata1 -> OtherBlues . count = dict_float_array_param ( mem , pprivate , ""OtherBlues"" , max_OtherBlues * 2 , & pdata1 -> OtherBlues . values [ 0 ] , NULL )"		9102314	1		=			
ANR	9102670	MemberAccess	pdata1 -> OtherBlues . count		9102314	0					
ANR	9102671	PtrMemberAccess	pdata1 -> OtherBlues		9102314	0					
ANR	9102672	Identifier	pdata1		9102314	0					
ANR	9102673	Identifier	OtherBlues		9102314	1					
ANR	9102674	Identifier	count		9102314	1					
ANR	9102675	CallExpression	"dict_float_array_param ( mem , pprivate , ""OtherBlues"" , max_OtherBlues * 2 , & pdata1 -> OtherBlues . values [ 0 ] , NULL )"		9102314	1					
ANR	9102676	Callee	dict_float_array_param		9102314	0					
ANR	9102677	Identifier	dict_float_array_param		9102314	0					
ANR	9102678	ArgumentList	mem		9102314	1					
ANR	9102679	Argument	mem		9102314	0					
ANR	9102680	Identifier	mem		9102314	0					
ANR	9102681	Argument	pprivate		9102314	1					
ANR	9102682	Identifier	pprivate		9102314	0					
ANR	9102683	Argument	"""OtherBlues"""		9102314	2					
ANR	9102684	PrimaryExpression	"""OtherBlues"""		9102314	0					
ANR	9102685	Argument	max_OtherBlues * 2		9102314	3					
ANR	9102686	MultiplicativeExpression	max_OtherBlues * 2		9102314	0		*			
ANR	9102687	Identifier	max_OtherBlues		9102314	0					
ANR	9102688	PrimaryExpression	2		9102314	1					
ANR	9102689	Argument	& pdata1 -> OtherBlues . values [ 0 ]		9102314	4					
ANR	9102690	UnaryOperationExpression	& pdata1 -> OtherBlues . values [ 0 ]		9102314	0					
ANR	9102691	UnaryOperator	&		9102314	0					
ANR	9102692	ArrayIndexing	pdata1 -> OtherBlues . values [ 0 ]		9102314	1					
ANR	9102693	MemberAccess	pdata1 -> OtherBlues . values		9102314	0					
ANR	9102694	PtrMemberAccess	pdata1 -> OtherBlues		9102314	0					
ANR	9102695	Identifier	pdata1		9102314	0					
ANR	9102696	Identifier	OtherBlues		9102314	1					
ANR	9102697	Identifier	values		9102314	1					
ANR	9102698	PrimaryExpression	0		9102314	1					
ANR	9102699	Argument	NULL		9102314	5					
ANR	9102700	Identifier	NULL		9102314	0					
ANR	9102701	PrimaryExpression	0		9102314	1					
ANR	9102702	ReturnStatement	return code ;	135:8:5077:5088	9102314	1	True				
ANR	9102703	Identifier	code		9102314	0					
ANR	9102704	IfStatement	"if ( ( code = dict_bool_param ( pprivate , ""RndStemUp"" , true , & pdata1 -> RndStemUp ) ) < 0 )"		9102314	14					
ANR	9102705	Condition	"( code = dict_bool_param ( pprivate , ""RndStemUp"" , true , & pdata1 -> RndStemUp ) ) < 0"	136:8:5098:5174	9102314	0	True				
ANR	9102706	RelationalExpression	"( code = dict_bool_param ( pprivate , ""RndStemUp"" , true , & pdata1 -> RndStemUp ) ) < 0"		9102314	0		<			
ANR	9102707	AssignmentExpression	"code = dict_bool_param ( pprivate , ""RndStemUp"" , true , & pdata1 -> RndStemUp )"		9102314	0		=			
ANR	9102708	Identifier	code		9102314	0					
ANR	9102709	CallExpression	"dict_bool_param ( pprivate , ""RndStemUp"" , true , & pdata1 -> RndStemUp )"		9102314	1					
ANR	9102710	Callee	dict_bool_param		9102314	0					
ANR	9102711	Identifier	dict_bool_param		9102314	0					
ANR	9102712	ArgumentList	pprivate		9102314	1					
ANR	9102713	Argument	pprivate		9102314	0					
ANR	9102714	Identifier	pprivate		9102314	0					
ANR	9102715	Argument	"""RndStemUp"""		9102314	1					
ANR	9102716	PrimaryExpression	"""RndStemUp"""		9102314	0					
ANR	9102717	Argument	true		9102314	2					
ANR	9102718	Identifier	true		9102314	0					
ANR	9102719	Argument	& pdata1 -> RndStemUp		9102314	3					
ANR	9102720	UnaryOperationExpression	& pdata1 -> RndStemUp		9102314	0					
ANR	9102721	UnaryOperator	&		9102314	0					
ANR	9102722	PtrMemberAccess	pdata1 -> RndStemUp		9102314	1					
ANR	9102723	Identifier	pdata1		9102314	0					
ANR	9102724	Identifier	RndStemUp		9102314	1					
ANR	9102725	PrimaryExpression	0		9102314	1					
ANR	9102726	ReturnStatement	return code ;	137:8:5185:5196	9102314	1	True				
ANR	9102727	Identifier	code		9102314	0					
ANR	9102728	IfStatement	"if ( ( code = pdata1 -> StdHW . count = dict_float_array_check_param ( mem , pprivate , ""StdHW"" , 1 , & pdata1 -> StdHW . values [ 0 ] , NULL , 0 , gs_error_rangecheck ) ) < 0 )"		9102314	15					
ANR	9102729	Condition	"( code = pdata1 -> StdHW . count = dict_float_array_check_param ( mem , pprivate , ""StdHW"" , 1 , & pdata1 -> StdHW . values [ 0 ] , NULL , 0 , gs_error_rangecheck ) ) < 0"	138:8:5206:5367	9102314	0	True				
ANR	9102730	RelationalExpression	"( code = pdata1 -> StdHW . count = dict_float_array_check_param ( mem , pprivate , ""StdHW"" , 1 , & pdata1 -> StdHW . values [ 0 ] , NULL , 0 , gs_error_rangecheck ) ) < 0"		9102314	0		<			
ANR	9102731	AssignmentExpression	"code = pdata1 -> StdHW . count = dict_float_array_check_param ( mem , pprivate , ""StdHW"" , 1 , & pdata1 -> StdHW . values [ 0 ] , NULL , 0 , gs_error_rangecheck )"		9102314	0		=			
ANR	9102732	Identifier	code		9102314	0					
ANR	9102733	AssignmentExpression	"pdata1 -> StdHW . count = dict_float_array_check_param ( mem , pprivate , ""StdHW"" , 1 , & pdata1 -> StdHW . values [ 0 ] , NULL , 0 , gs_error_rangecheck )"		9102314	1		=			
ANR	9102734	MemberAccess	pdata1 -> StdHW . count		9102314	0					
ANR	9102735	PtrMemberAccess	pdata1 -> StdHW		9102314	0					
ANR	9102736	Identifier	pdata1		9102314	0					
ANR	9102737	Identifier	StdHW		9102314	1					
ANR	9102738	Identifier	count		9102314	1					
ANR	9102739	CallExpression	"dict_float_array_check_param ( mem , pprivate , ""StdHW"" , 1 , & pdata1 -> StdHW . values [ 0 ] , NULL , 0 , gs_error_rangecheck )"		9102314	1					
ANR	9102740	Callee	dict_float_array_check_param		9102314	0					
ANR	9102741	Identifier	dict_float_array_check_param		9102314	0					
ANR	9102742	ArgumentList	mem		9102314	1					
ANR	9102743	Argument	mem		9102314	0					
ANR	9102744	Identifier	mem		9102314	0					
ANR	9102745	Argument	pprivate		9102314	1					
ANR	9102746	Identifier	pprivate		9102314	0					
ANR	9102747	Argument	"""StdHW"""		9102314	2					
ANR	9102748	PrimaryExpression	"""StdHW"""		9102314	0					
ANR	9102749	Argument	1		9102314	3					
ANR	9102750	PrimaryExpression	1		9102314	0					
ANR	9102751	Argument	& pdata1 -> StdHW . values [ 0 ]		9102314	4					
ANR	9102752	UnaryOperationExpression	& pdata1 -> StdHW . values [ 0 ]		9102314	0					
ANR	9102753	UnaryOperator	&		9102314	0					
ANR	9102754	ArrayIndexing	pdata1 -> StdHW . values [ 0 ]		9102314	1					
ANR	9102755	MemberAccess	pdata1 -> StdHW . values		9102314	0					
ANR	9102756	PtrMemberAccess	pdata1 -> StdHW		9102314	0					
ANR	9102757	Identifier	pdata1		9102314	0					
ANR	9102758	Identifier	StdHW		9102314	1					
ANR	9102759	Identifier	values		9102314	1					
ANR	9102760	PrimaryExpression	0		9102314	1					
ANR	9102761	Argument	NULL		9102314	5					
ANR	9102762	Identifier	NULL		9102314	0					
ANR	9102763	Argument	0		9102314	6					
ANR	9102764	PrimaryExpression	0		9102314	0					
ANR	9102765	Argument	gs_error_rangecheck		9102314	7					
ANR	9102766	Identifier	gs_error_rangecheck		9102314	0					
ANR	9102767	PrimaryExpression	0		9102314	1					
ANR	9102768	ReturnStatement	return code ;	140:8:5378:5389	9102314	1	True				
ANR	9102769	Identifier	code		9102314	0					
ANR	9102770	IfStatement	"if ( ( code = pdata1 -> StdVW . count = dict_float_array_check_param ( mem , pprivate , ""StdVW"" , 1 , & pdata1 -> StdVW . values [ 0 ] , NULL , 0 , gs_error_rangecheck ) ) < 0 )"		9102314	16					
ANR	9102771	Condition	"( code = pdata1 -> StdVW . count = dict_float_array_check_param ( mem , pprivate , ""StdVW"" , 1 , & pdata1 -> StdVW . values [ 0 ] , NULL , 0 , gs_error_rangecheck ) ) < 0"	141:8:5399:5560	9102314	0	True				
ANR	9102772	RelationalExpression	"( code = pdata1 -> StdVW . count = dict_float_array_check_param ( mem , pprivate , ""StdVW"" , 1 , & pdata1 -> StdVW . values [ 0 ] , NULL , 0 , gs_error_rangecheck ) ) < 0"		9102314	0		<			
ANR	9102773	AssignmentExpression	"code = pdata1 -> StdVW . count = dict_float_array_check_param ( mem , pprivate , ""StdVW"" , 1 , & pdata1 -> StdVW . values [ 0 ] , NULL , 0 , gs_error_rangecheck )"		9102314	0		=			
ANR	9102774	Identifier	code		9102314	0					
ANR	9102775	AssignmentExpression	"pdata1 -> StdVW . count = dict_float_array_check_param ( mem , pprivate , ""StdVW"" , 1 , & pdata1 -> StdVW . values [ 0 ] , NULL , 0 , gs_error_rangecheck )"		9102314	1		=			
ANR	9102776	MemberAccess	pdata1 -> StdVW . count		9102314	0					
ANR	9102777	PtrMemberAccess	pdata1 -> StdVW		9102314	0					
ANR	9102778	Identifier	pdata1		9102314	0					
ANR	9102779	Identifier	StdVW		9102314	1					
ANR	9102780	Identifier	count		9102314	1					
ANR	9102781	CallExpression	"dict_float_array_check_param ( mem , pprivate , ""StdVW"" , 1 , & pdata1 -> StdVW . values [ 0 ] , NULL , 0 , gs_error_rangecheck )"		9102314	1					
ANR	9102782	Callee	dict_float_array_check_param		9102314	0					
ANR	9102783	Identifier	dict_float_array_check_param		9102314	0					
ANR	9102784	ArgumentList	mem		9102314	1					
ANR	9102785	Argument	mem		9102314	0					
ANR	9102786	Identifier	mem		9102314	0					
ANR	9102787	Argument	pprivate		9102314	1					
ANR	9102788	Identifier	pprivate		9102314	0					
ANR	9102789	Argument	"""StdVW"""		9102314	2					
ANR	9102790	PrimaryExpression	"""StdVW"""		9102314	0					
ANR	9102791	Argument	1		9102314	3					
ANR	9102792	PrimaryExpression	1		9102314	0					
ANR	9102793	Argument	& pdata1 -> StdVW . values [ 0 ]		9102314	4					
ANR	9102794	UnaryOperationExpression	& pdata1 -> StdVW . values [ 0 ]		9102314	0					
ANR	9102795	UnaryOperator	&		9102314	0					
ANR	9102796	ArrayIndexing	pdata1 -> StdVW . values [ 0 ]		9102314	1					
ANR	9102797	MemberAccess	pdata1 -> StdVW . values		9102314	0					
ANR	9102798	PtrMemberAccess	pdata1 -> StdVW		9102314	0					
ANR	9102799	Identifier	pdata1		9102314	0					
ANR	9102800	Identifier	StdVW		9102314	1					
ANR	9102801	Identifier	values		9102314	1					
ANR	9102802	PrimaryExpression	0		9102314	1					
ANR	9102803	Argument	NULL		9102314	5					
ANR	9102804	Identifier	NULL		9102314	0					
ANR	9102805	Argument	0		9102314	6					
ANR	9102806	PrimaryExpression	0		9102314	0					
ANR	9102807	Argument	gs_error_rangecheck		9102314	7					
ANR	9102808	Identifier	gs_error_rangecheck		9102314	0					
ANR	9102809	PrimaryExpression	0		9102314	1					
ANR	9102810	ReturnStatement	return code ;	143:8:5571:5582	9102314	1	True				
ANR	9102811	Identifier	code		9102314	0					
ANR	9102812	IfStatement	"if ( ( code = pdata1 -> StemSnapH . count = dict_float_array_param ( mem , pprivate , ""StemSnapH"" , max_StemSnap , & pdata1 -> StemSnapH . values [ 0 ] , NULL ) ) < 0 )"		9102314	17					
ANR	9102813	Condition	"( code = pdata1 -> StemSnapH . count = dict_float_array_param ( mem , pprivate , ""StemSnapH"" , max_StemSnap , & pdata1 -> StemSnapH . values [ 0 ] , NULL ) ) < 0"	144:8:5592:5746	9102314	0	True				
ANR	9102814	RelationalExpression	"( code = pdata1 -> StemSnapH . count = dict_float_array_param ( mem , pprivate , ""StemSnapH"" , max_StemSnap , & pdata1 -> StemSnapH . values [ 0 ] , NULL ) ) < 0"		9102314	0		<			
ANR	9102815	AssignmentExpression	"code = pdata1 -> StemSnapH . count = dict_float_array_param ( mem , pprivate , ""StemSnapH"" , max_StemSnap , & pdata1 -> StemSnapH . values [ 0 ] , NULL )"		9102314	0		=			
ANR	9102816	Identifier	code		9102314	0					
ANR	9102817	AssignmentExpression	"pdata1 -> StemSnapH . count = dict_float_array_param ( mem , pprivate , ""StemSnapH"" , max_StemSnap , & pdata1 -> StemSnapH . values [ 0 ] , NULL )"		9102314	1		=			
ANR	9102818	MemberAccess	pdata1 -> StemSnapH . count		9102314	0					
ANR	9102819	PtrMemberAccess	pdata1 -> StemSnapH		9102314	0					
ANR	9102820	Identifier	pdata1		9102314	0					
ANR	9102821	Identifier	StemSnapH		9102314	1					
ANR	9102822	Identifier	count		9102314	1					
ANR	9102823	CallExpression	"dict_float_array_param ( mem , pprivate , ""StemSnapH"" , max_StemSnap , & pdata1 -> StemSnapH . values [ 0 ] , NULL )"		9102314	1					
ANR	9102824	Callee	dict_float_array_param		9102314	0					
ANR	9102825	Identifier	dict_float_array_param		9102314	0					
ANR	9102826	ArgumentList	mem		9102314	1					
ANR	9102827	Argument	mem		9102314	0					
ANR	9102828	Identifier	mem		9102314	0					
ANR	9102829	Argument	pprivate		9102314	1					
ANR	9102830	Identifier	pprivate		9102314	0					
ANR	9102831	Argument	"""StemSnapH"""		9102314	2					
ANR	9102832	PrimaryExpression	"""StemSnapH"""		9102314	0					
ANR	9102833	Argument	max_StemSnap		9102314	3					
ANR	9102834	Identifier	max_StemSnap		9102314	0					
ANR	9102835	Argument	& pdata1 -> StemSnapH . values [ 0 ]		9102314	4					
ANR	9102836	UnaryOperationExpression	& pdata1 -> StemSnapH . values [ 0 ]		9102314	0					
ANR	9102837	UnaryOperator	&		9102314	0					
ANR	9102838	ArrayIndexing	pdata1 -> StemSnapH . values [ 0 ]		9102314	1					
ANR	9102839	MemberAccess	pdata1 -> StemSnapH . values		9102314	0					
ANR	9102840	PtrMemberAccess	pdata1 -> StemSnapH		9102314	0					
ANR	9102841	Identifier	pdata1		9102314	0					
ANR	9102842	Identifier	StemSnapH		9102314	1					
ANR	9102843	Identifier	values		9102314	1					
ANR	9102844	PrimaryExpression	0		9102314	1					
ANR	9102845	Argument	NULL		9102314	5					
ANR	9102846	Identifier	NULL		9102314	0					
ANR	9102847	PrimaryExpression	0		9102314	1					
ANR	9102848	ReturnStatement	return code ;	146:8:5757:5768	9102314	1	True				
ANR	9102849	Identifier	code		9102314	0					
ANR	9102850	IfStatement	"if ( ( code = pdata1 -> StemSnapV . count = dict_float_array_param ( mem , pprivate , ""StemSnapV"" , max_StemSnap , & pdata1 -> StemSnapV . values [ 0 ] , NULL ) ) < 0 )"		9102314	18					
ANR	9102851	Condition	"( code = pdata1 -> StemSnapV . count = dict_float_array_param ( mem , pprivate , ""StemSnapV"" , max_StemSnap , & pdata1 -> StemSnapV . values [ 0 ] , NULL ) ) < 0"	147:8:5778:5932	9102314	0	True				
ANR	9102852	RelationalExpression	"( code = pdata1 -> StemSnapV . count = dict_float_array_param ( mem , pprivate , ""StemSnapV"" , max_StemSnap , & pdata1 -> StemSnapV . values [ 0 ] , NULL ) ) < 0"		9102314	0		<			
ANR	9102853	AssignmentExpression	"code = pdata1 -> StemSnapV . count = dict_float_array_param ( mem , pprivate , ""StemSnapV"" , max_StemSnap , & pdata1 -> StemSnapV . values [ 0 ] , NULL )"		9102314	0		=			
ANR	9102854	Identifier	code		9102314	0					
ANR	9102855	AssignmentExpression	"pdata1 -> StemSnapV . count = dict_float_array_param ( mem , pprivate , ""StemSnapV"" , max_StemSnap , & pdata1 -> StemSnapV . values [ 0 ] , NULL )"		9102314	1		=			
ANR	9102856	MemberAccess	pdata1 -> StemSnapV . count		9102314	0					
ANR	9102857	PtrMemberAccess	pdata1 -> StemSnapV		9102314	0					
ANR	9102858	Identifier	pdata1		9102314	0					
ANR	9102859	Identifier	StemSnapV		9102314	1					
ANR	9102860	Identifier	count		9102314	1					
ANR	9102861	CallExpression	"dict_float_array_param ( mem , pprivate , ""StemSnapV"" , max_StemSnap , & pdata1 -> StemSnapV . values [ 0 ] , NULL )"		9102314	1					
ANR	9102862	Callee	dict_float_array_param		9102314	0					
ANR	9102863	Identifier	dict_float_array_param		9102314	0					
ANR	9102864	ArgumentList	mem		9102314	1					
ANR	9102865	Argument	mem		9102314	0					
ANR	9102866	Identifier	mem		9102314	0					
ANR	9102867	Argument	pprivate		9102314	1					
ANR	9102868	Identifier	pprivate		9102314	0					
ANR	9102869	Argument	"""StemSnapV"""		9102314	2					
ANR	9102870	PrimaryExpression	"""StemSnapV"""		9102314	0					
ANR	9102871	Argument	max_StemSnap		9102314	3					
ANR	9102872	Identifier	max_StemSnap		9102314	0					
ANR	9102873	Argument	& pdata1 -> StemSnapV . values [ 0 ]		9102314	4					
ANR	9102874	UnaryOperationExpression	& pdata1 -> StemSnapV . values [ 0 ]		9102314	0					
ANR	9102875	UnaryOperator	&		9102314	0					
ANR	9102876	ArrayIndexing	pdata1 -> StemSnapV . values [ 0 ]		9102314	1					
ANR	9102877	MemberAccess	pdata1 -> StemSnapV . values		9102314	0					
ANR	9102878	PtrMemberAccess	pdata1 -> StemSnapV		9102314	0					
ANR	9102879	Identifier	pdata1		9102314	0					
ANR	9102880	Identifier	StemSnapV		9102314	1					
ANR	9102881	Identifier	values		9102314	1					
ANR	9102882	PrimaryExpression	0		9102314	1					
ANR	9102883	Argument	NULL		9102314	5					
ANR	9102884	Identifier	NULL		9102314	0					
ANR	9102885	PrimaryExpression	0		9102314	1					
ANR	9102886	ReturnStatement	return code ;	149:8:5943:5954	9102314	1	True				
ANR	9102887	Identifier	code		9102314	0					
ANR	9102888	IfStatement	"if ( ( code = pdata1 -> WeightVector . count = dict_float_array_param ( mem , op , ""WeightVector"" , max_WeightVector , pdata1 -> WeightVector . values , NULL ) ) < 0 )"		9102314	19					
ANR	9102889	Condition	"( code = pdata1 -> WeightVector . count = dict_float_array_param ( mem , op , ""WeightVector"" , max_WeightVector , pdata1 -> WeightVector . values , NULL ) ) < 0"	151:8:6031:6188	9102314	0	True				
ANR	9102890	RelationalExpression	"( code = pdata1 -> WeightVector . count = dict_float_array_param ( mem , op , ""WeightVector"" , max_WeightVector , pdata1 -> WeightVector . values , NULL ) ) < 0"		9102314	0		<			
ANR	9102891	AssignmentExpression	"code = pdata1 -> WeightVector . count = dict_float_array_param ( mem , op , ""WeightVector"" , max_WeightVector , pdata1 -> WeightVector . values , NULL )"		9102314	0		=			
ANR	9102892	Identifier	code		9102314	0					
ANR	9102893	AssignmentExpression	"pdata1 -> WeightVector . count = dict_float_array_param ( mem , op , ""WeightVector"" , max_WeightVector , pdata1 -> WeightVector . values , NULL )"		9102314	1		=			
ANR	9102894	MemberAccess	pdata1 -> WeightVector . count		9102314	0					
ANR	9102895	PtrMemberAccess	pdata1 -> WeightVector		9102314	0					
ANR	9102896	Identifier	pdata1		9102314	0					
ANR	9102897	Identifier	WeightVector		9102314	1					
ANR	9102898	Identifier	count		9102314	1					
ANR	9102899	CallExpression	"dict_float_array_param ( mem , op , ""WeightVector"" , max_WeightVector , pdata1 -> WeightVector . values , NULL )"		9102314	1					
ANR	9102900	Callee	dict_float_array_param		9102314	0					
ANR	9102901	Identifier	dict_float_array_param		9102314	0					
ANR	9102902	ArgumentList	mem		9102314	1					
ANR	9102903	Argument	mem		9102314	0					
ANR	9102904	Identifier	mem		9102314	0					
ANR	9102905	Argument	op		9102314	1					
ANR	9102906	Identifier	op		9102314	0					
ANR	9102907	Argument	"""WeightVector"""		9102314	2					
ANR	9102908	PrimaryExpression	"""WeightVector"""		9102314	0					
ANR	9102909	Argument	max_WeightVector		9102314	3					
ANR	9102910	Identifier	max_WeightVector		9102314	0					
ANR	9102911	Argument	pdata1 -> WeightVector . values		9102314	4					
ANR	9102912	MemberAccess	pdata1 -> WeightVector . values		9102314	0					
ANR	9102913	PtrMemberAccess	pdata1 -> WeightVector		9102314	0					
ANR	9102914	Identifier	pdata1		9102314	0					
ANR	9102915	Identifier	WeightVector		9102314	1					
ANR	9102916	Identifier	values		9102314	1					
ANR	9102917	Argument	NULL		9102314	5					
ANR	9102918	Identifier	NULL		9102314	0					
ANR	9102919	PrimaryExpression	0		9102314	1					
ANR	9102920	ReturnStatement	return code ;	153:8:6199:6210	9102314	1	True				
ANR	9102921	Identifier	code		9102314	0					
ANR	9102922	CompoundStatement		65:8:3544:3571	9102314	20					
ANR	9102923	IdentifierDeclStatement	float max_zone_height = 1.0 ;	162:8:6558:6585	9102314	0	True				
ANR	9102924	IdentifierDecl	max_zone_height = 1.0		9102314	0					
ANR	9102925	IdentifierDeclType	float		9102314	0					
ANR	9102926	Identifier	max_zone_height		9102314	1					
ANR	9102927	AssignmentExpression	max_zone_height = 1.0		9102314	2		=			
ANR	9102928	Identifier	max_zone_height		9102314	0					
ANR	9102929	PrimaryExpression	1.0		9102314	1					
ANR	9102930	ExpressionStatement	"find_zone_height ( & max_zone_height , pdata1 -> BlueValues . count , pdata1 -> BlueValues . values )"	164:8:6596:6683	9102314	1	True				
ANR	9102931	CallExpression	"find_zone_height ( & max_zone_height , pdata1 -> BlueValues . count , pdata1 -> BlueValues . values )"		9102314	0					
ANR	9102932	Callee	find_zone_height		9102314	0					
ANR	9102933	Identifier	find_zone_height		9102314	0					
ANR	9102934	ArgumentList	& max_zone_height		9102314	1					
ANR	9102935	Argument	& max_zone_height		9102314	0					
ANR	9102936	UnaryOperationExpression	& max_zone_height		9102314	0					
ANR	9102937	UnaryOperator	&		9102314	0					
ANR	9102938	Identifier	max_zone_height		9102314	1					
ANR	9102939	Argument	pdata1 -> BlueValues . count		9102314	1					
ANR	9102940	MemberAccess	pdata1 -> BlueValues . count		9102314	0					
ANR	9102941	PtrMemberAccess	pdata1 -> BlueValues		9102314	0					
ANR	9102942	Identifier	pdata1		9102314	0					
ANR	9102943	Identifier	BlueValues		9102314	1					
ANR	9102944	Identifier	count		9102314	1					
ANR	9102945	Argument	pdata1 -> BlueValues . values		9102314	2					
ANR	9102946	MemberAccess	pdata1 -> BlueValues . values		9102314	0					
ANR	9102947	PtrMemberAccess	pdata1 -> BlueValues		9102314	0					
ANR	9102948	Identifier	pdata1		9102314	0					
ANR	9102949	Identifier	BlueValues		9102314	1					
ANR	9102950	Identifier	values		9102314	1					
ANR	9102951	ExpressionStatement	"find_zone_height ( & max_zone_height , pdata1 -> OtherBlues . count , pdata1 -> OtherBlues . values )"	165:8:6693:6780	9102314	2	True				
ANR	9102952	CallExpression	"find_zone_height ( & max_zone_height , pdata1 -> OtherBlues . count , pdata1 -> OtherBlues . values )"		9102314	0					
ANR	9102953	Callee	find_zone_height		9102314	0					
ANR	9102954	Identifier	find_zone_height		9102314	0					
ANR	9102955	ArgumentList	& max_zone_height		9102314	1					
ANR	9102956	Argument	& max_zone_height		9102314	0					
ANR	9102957	UnaryOperationExpression	& max_zone_height		9102314	0					
ANR	9102958	UnaryOperator	&		9102314	0					
ANR	9102959	Identifier	max_zone_height		9102314	1					
ANR	9102960	Argument	pdata1 -> OtherBlues . count		9102314	1					
ANR	9102961	MemberAccess	pdata1 -> OtherBlues . count		9102314	0					
ANR	9102962	PtrMemberAccess	pdata1 -> OtherBlues		9102314	0					
ANR	9102963	Identifier	pdata1		9102314	0					
ANR	9102964	Identifier	OtherBlues		9102314	1					
ANR	9102965	Identifier	count		9102314	1					
ANR	9102966	Argument	pdata1 -> OtherBlues . values		9102314	2					
ANR	9102967	MemberAccess	pdata1 -> OtherBlues . values		9102314	0					
ANR	9102968	PtrMemberAccess	pdata1 -> OtherBlues		9102314	0					
ANR	9102969	Identifier	pdata1		9102314	0					
ANR	9102970	Identifier	OtherBlues		9102314	1					
ANR	9102971	Identifier	values		9102314	1					
ANR	9102972	ExpressionStatement	"find_zone_height ( & max_zone_height , pdata1 -> FamilyBlues . count , pdata1 -> FamilyBlues . values )"	166:8:6790:6879	9102314	3	True				
ANR	9102973	CallExpression	"find_zone_height ( & max_zone_height , pdata1 -> FamilyBlues . count , pdata1 -> FamilyBlues . values )"		9102314	0					
ANR	9102974	Callee	find_zone_height		9102314	0					
ANR	9102975	Identifier	find_zone_height		9102314	0					
ANR	9102976	ArgumentList	& max_zone_height		9102314	1					
ANR	9102977	Argument	& max_zone_height		9102314	0					
ANR	9102978	UnaryOperationExpression	& max_zone_height		9102314	0					
ANR	9102979	UnaryOperator	&		9102314	0					
ANR	9102980	Identifier	max_zone_height		9102314	1					
ANR	9102981	Argument	pdata1 -> FamilyBlues . count		9102314	1					
ANR	9102982	MemberAccess	pdata1 -> FamilyBlues . count		9102314	0					
ANR	9102983	PtrMemberAccess	pdata1 -> FamilyBlues		9102314	0					
ANR	9102984	Identifier	pdata1		9102314	0					
ANR	9102985	Identifier	FamilyBlues		9102314	1					
ANR	9102986	Identifier	count		9102314	1					
ANR	9102987	Argument	pdata1 -> FamilyBlues . values		9102314	2					
ANR	9102988	MemberAccess	pdata1 -> FamilyBlues . values		9102314	0					
ANR	9102989	PtrMemberAccess	pdata1 -> FamilyBlues		9102314	0					
ANR	9102990	Identifier	pdata1		9102314	0					
ANR	9102991	Identifier	FamilyBlues		9102314	1					
ANR	9102992	Identifier	values		9102314	1					
ANR	9102993	ExpressionStatement	"find_zone_height ( & max_zone_height , pdata1 -> FamilyOtherBlues . count , pdata1 -> FamilyOtherBlues . values )"	167:8:6889:6988	9102314	4	True				
ANR	9102994	CallExpression	"find_zone_height ( & max_zone_height , pdata1 -> FamilyOtherBlues . count , pdata1 -> FamilyOtherBlues . values )"		9102314	0					
ANR	9102995	Callee	find_zone_height		9102314	0					
ANR	9102996	Identifier	find_zone_height		9102314	0					
ANR	9102997	ArgumentList	& max_zone_height		9102314	1					
ANR	9102998	Argument	& max_zone_height		9102314	0					
ANR	9102999	UnaryOperationExpression	& max_zone_height		9102314	0					
ANR	9103000	UnaryOperator	&		9102314	0					
ANR	9103001	Identifier	max_zone_height		9102314	1					
ANR	9103002	Argument	pdata1 -> FamilyOtherBlues . count		9102314	1					
ANR	9103003	MemberAccess	pdata1 -> FamilyOtherBlues . count		9102314	0					
ANR	9103004	PtrMemberAccess	pdata1 -> FamilyOtherBlues		9102314	0					
ANR	9103005	Identifier	pdata1		9102314	0					
ANR	9103006	Identifier	FamilyOtherBlues		9102314	1					
ANR	9103007	Identifier	count		9102314	1					
ANR	9103008	Argument	pdata1 -> FamilyOtherBlues . values		9102314	2					
ANR	9103009	MemberAccess	pdata1 -> FamilyOtherBlues . values		9102314	0					
ANR	9103010	PtrMemberAccess	pdata1 -> FamilyOtherBlues		9102314	0					
ANR	9103011	Identifier	pdata1		9102314	0					
ANR	9103012	Identifier	FamilyOtherBlues		9102314	1					
ANR	9103013	Identifier	values		9102314	1					
ANR	9103014	IfStatement	if ( pdata1 -> BlueScale * max_zone_height > 1.0 )		9102314	5					
ANR	9103015	Condition	pdata1 -> BlueScale * max_zone_height > 1.0	168:12:7002:7042	9102314	0	True				
ANR	9103016	RelationalExpression	pdata1 -> BlueScale * max_zone_height > 1.0		9102314	0		>			
ANR	9103017	MultiplicativeExpression	pdata1 -> BlueScale * max_zone_height		9102314	0		*			
ANR	9103018	PtrMemberAccess	pdata1 -> BlueScale		9102314	0					
ANR	9103019	Identifier	pdata1		9102314	0					
ANR	9103020	Identifier	BlueScale		9102314	1					
ANR	9103021	Identifier	max_zone_height		9102314	1					
ANR	9103022	PrimaryExpression	1.0		9102314	1					
ANR	9103023	ExpressionStatement	pdata1 -> BlueScale = 1.0 / max_zone_height	169:12:7057:7098	9102314	1	True				
ANR	9103024	AssignmentExpression	pdata1 -> BlueScale = 1.0 / max_zone_height		9102314	0		=			
ANR	9103025	PtrMemberAccess	pdata1 -> BlueScale		9102314	0					
ANR	9103026	Identifier	pdata1		9102314	0					
ANR	9103027	Identifier	BlueScale		9102314	1					
ANR	9103028	MultiplicativeExpression	1.0 / max_zone_height		9102314	1		/			
ANR	9103029	PrimaryExpression	1.0		9102314	0					
ANR	9103030	Identifier	max_zone_height		9102314	1					
ANR	9103031	IfStatement	if ( pdata1 -> LanguageGroup > 1 || pdata1 -> LanguageGroup < 0 )		9102314	21					
ANR	9103032	Condition	pdata1 -> LanguageGroup > 1 || pdata1 -> LanguageGroup < 0	178:8:7431:7484	9102314	0	True				
ANR	9103033	OrExpression	pdata1 -> LanguageGroup > 1 || pdata1 -> LanguageGroup < 0		9102314	0		||			
ANR	9103034	RelationalExpression	pdata1 -> LanguageGroup > 1		9102314	0		>			
ANR	9103035	PtrMemberAccess	pdata1 -> LanguageGroup		9102314	0					
ANR	9103036	Identifier	pdata1		9102314	0					
ANR	9103037	Identifier	LanguageGroup		9102314	1					
ANR	9103038	PrimaryExpression	1		9102314	1					
ANR	9103039	RelationalExpression	pdata1 -> LanguageGroup < 0		9102314	1		<			
ANR	9103040	PtrMemberAccess	pdata1 -> LanguageGroup		9102314	0					
ANR	9103041	Identifier	pdata1		9102314	0					
ANR	9103042	Identifier	LanguageGroup		9102314	1					
ANR	9103043	PrimaryExpression	0		9102314	1					
ANR	9103044	ExpressionStatement	pdata1 -> LanguageGroup = 0	179:8:7495:7520	9102314	1	True				
ANR	9103045	AssignmentExpression	pdata1 -> LanguageGroup = 0		9102314	0		=			
ANR	9103046	PtrMemberAccess	pdata1 -> LanguageGroup		9102314	0					
ANR	9103047	Identifier	pdata1		9102314	0					
ANR	9103048	Identifier	LanguageGroup		9102314	1					
ANR	9103049	PrimaryExpression	0		9102314	1					
ANR	9103050	ExpressionStatement	"memset ( & pdata1 -> hash_subrs , 0x00 , 16 )"	185:4:7819:7856	9102314	22	True				
ANR	9103051	CallExpression	"memset ( & pdata1 -> hash_subrs , 0x00 , 16 )"		9102314	0					
ANR	9103052	Callee	memset		9102314	0					
ANR	9103053	Identifier	memset		9102314	0					
ANR	9103054	ArgumentList	& pdata1 -> hash_subrs		9102314	1					
ANR	9103055	Argument	& pdata1 -> hash_subrs		9102314	0					
ANR	9103056	UnaryOperationExpression	& pdata1 -> hash_subrs		9102314	0					
ANR	9103057	UnaryOperator	&		9102314	0					
ANR	9103058	PtrMemberAccess	pdata1 -> hash_subrs		9102314	1					
ANR	9103059	Identifier	pdata1		9102314	0					
ANR	9103060	Identifier	hash_subrs		9102314	1					
ANR	9103061	Argument	0x00		9102314	1					
ANR	9103062	PrimaryExpression	0x00		9102314	0					
ANR	9103063	Argument	16		9102314	2					
ANR	9103064	PrimaryExpression	16		9102314	0					
ANR	9103065	ReturnStatement	return 0 ;	186:4:7862:7870	9102314	23	True				
ANR	9103066	PrimaryExpression	0		9102314	0					
ANR	9103067	ReturnType	int		9102314	1					
ANR	9103068	Identifier	charstring_font_params		9102314	2					
ANR	9103069	ParameterList	"const gs_memory_t * mem , const_os_ptr op , charstring_font_refs_t * pfr , gs_type1_data * pdata1"		9102314	3					
ANR	9103070	Parameter	const gs_memory_t * mem	95:23:2874:2895	9102314	0	True				
ANR	9103071	ParameterType	const gs_memory_t *		9102314	0					
ANR	9103072	Identifier	mem		9102314	1					
ANR	9103073	Parameter	const_os_ptr op	96:23:2921:2935	9102314	1	True				
ANR	9103074	ParameterType	const_os_ptr		9102314	0					
ANR	9103075	Identifier	op		9102314	1					
ANR	9103076	Parameter	charstring_font_refs_t * pfr	96:40:2938:2964	9102314	2	True				
ANR	9103077	ParameterType	charstring_font_refs_t *		9102314	0					
ANR	9103078	Identifier	pfr		9102314	1					
ANR	9103079	Parameter	gs_type1_data * pdata1	97:23:2990:3010	9102314	3	True				
ANR	9103080	ParameterType	gs_type1_data *		9102314	0					
ANR	9103081	Identifier	pdata1		9102314	1					
ANR	9103082	CFGEntryNode	ENTRY		9102314		True				
ANR	9103083	CFGExitNode	EXIT		9102314		True				
ANR	9103084	Symbol	pdata1 -> StemSnapV . count		9102314						
ANR	9103085	Symbol	pdata1 -> StemSnapV . values		9102314						
ANR	9103086	Symbol	gs_error_rangecheck		9102314						
ANR	9103087	Symbol	max_uint		9102314						
ANR	9103088	Symbol	& pdata1 -> subroutineNumberBias		9102314						
ANR	9103089	Symbol	dict_float_param		9102314						
ANR	9103090	Symbol	pdata1 -> StdHW		9102314						
ANR	9103091	Symbol	* pdata1		9102314						
ANR	9103092	Symbol	dict_float_array_check_param		9102314						
ANR	9103093	Symbol	pdata1 -> StdVW . count		9102314						
ANR	9103094	Symbol	& pdata1 -> BlueShift		9102314						
ANR	9103095	Symbol	& pdata1 -> lenIV		9102314						
ANR	9103096	Symbol	& pdata1 -> RndStemUp		9102314						
ANR	9103097	Symbol	max_WeightVector		9102314						
ANR	9103098	Symbol	pdata1 -> BlueValues . values		9102314						
ANR	9103099	Symbol	pdata1 -> FamilyBlues		9102314						
ANR	9103100	Symbol	max_OtherBlues		9102314						
ANR	9103101	Symbol	pdata1 -> BlueValues		9102314						
ANR	9103102	Symbol	dict_bool_param		9102314						
ANR	9103103	Symbol	pdata1 -> OtherBlues		9102314						
ANR	9103104	Symbol	pdata1		9102314						
ANR	9103105	Symbol	NULL		9102314						
ANR	9103106	Symbol	pdata1 -> OtherBlues . values		9102314						
ANR	9103107	Symbol	* pfr		9102314						
ANR	9103108	Symbol	pdata1 -> FamilyOtherBlues . count		9102314						
ANR	9103109	Symbol	pdata1 -> FamilyBlues . count		9102314						
ANR	9103110	Symbol	pdata1 -> FamilyOtherBlues . values		9102314						
ANR	9103111	Symbol	max_FamilyOtherBlues		9102314						
ANR	9103112	Symbol	pdata1 -> StemSnapH . values		9102314						
ANR	9103113	Symbol	max_zone_height		9102314						
ANR	9103114	Symbol	true		9102314						
ANR	9103115	Symbol	pdata1 -> StdVW		9102314						
ANR	9103116	Symbol	pdata1 -> StdHW . count		9102314						
ANR	9103117	Symbol	pdata1 -> FamilyBlues . values		9102314						
ANR	9103118	Symbol	max_StemSnap		9102314						
ANR	9103119	Symbol	pfr		9102314						
ANR	9103120	Symbol	& max_zone_height		9102314						
ANR	9103121	Symbol	& pdata1 -> hash_subrs		9102314						
ANR	9103122	Symbol	max_int		9102314						
ANR	9103123	Symbol	pdata1 -> StdVW . values		9102314						
ANR	9103124	Symbol	max_FamilyBlues		9102314						
ANR	9103125	Symbol	code		9102314						
ANR	9103126	Symbol	pdata1 -> WeightVector		9102314						
ANR	9103127	Symbol	pdata1 -> WeightVector . values		9102314						
ANR	9103128	Symbol	pdata1 -> LanguageGroup		9102314						
ANR	9103129	Symbol	pdata1 -> StemSnapV		9102314						
ANR	9103130	Symbol	pfr -> Private		9102314						
ANR	9103131	Symbol	pdata1 -> StemSnapH . count		9102314						
ANR	9103132	Symbol	mem		9102314						
ANR	9103133	Symbol	pdata1 -> OtherBlues . count		9102314						
ANR	9103134	Symbol	& pdata1 -> BlueScale		9102314						
ANR	9103135	Symbol	pprivate		9102314						
ANR	9103136	Symbol	pdata1 -> WeightVector . count		9102314						
ANR	9103137	Symbol	pdata1 -> FamilyOtherBlues		9102314						
ANR	9103138	Symbol	pdata1 -> BlueValues . count		9102314						
ANR	9103139	Symbol	pdata1 -> BlueScale		9102314						
ANR	9103140	Symbol	& pdata1 -> ForceBold		9102314						
ANR	9103141	Symbol	pdata1 -> StemSnapH		9102314						
ANR	9103142	Symbol	pdata1 -> StdHW . values		9102314						
ANR	9103143	Symbol	op		9102314						
ANR	9103144	Symbol	pdata1 -> lenIV		9102314						
ANR	9103145	Symbol	& pdata1 -> ExpansionFactor		9102314						
ANR	9103146	Symbol	false		9102314						
ANR	9103147	Symbol	min_int		9102314						
ANR	9103148	Symbol	& pdata1 -> LanguageGroup		9102314						
ANR	9103149	Symbol	dict_uint_param		9102314						
ANR	9103150	Symbol	pdata1 -> subroutineNumberBias		9102314						
ANR	9103151	Symbol	max_BlueValues		9102314						
ANR	9103152	Symbol	dict_int_param		9102314						
ANR	9103153	Symbol	& pdata1 -> BlueFuzz		9102314						
ANR	9103154	Symbol	dict_float_array_param		9102314						
ANR	9103155	Function	charstring_font_init	190:0:7943:8658							
ANR	9103156	FunctionDef	"charstring_font_init (gs_font_type1 * pfont , const charstring_font_refs_t * pfr , const gs_type1_data * pdata1)"		9103155	0					
ANR	9103157	CompoundStatement		193:0:8075:8658	9103155	0					
ANR	9103158	IdentifierDeclStatement	font_data * pdata ;	194:4:8081:8097	9103155	0	True				
ANR	9103159	IdentifierDecl	* pdata		9103155	0					
ANR	9103160	IdentifierDeclType	font_data *		9103155	0					
ANR	9103161	Identifier	pdata		9103155	1					
ANR	9103162	ExpressionStatement	pdata = pfont_data ( pfont )	196:4:8104:8129	9103155	1	True				
ANR	9103163	AssignmentExpression	pdata = pfont_data ( pfont )		9103155	0		=			
ANR	9103164	Identifier	pdata		9103155	0					
ANR	9103165	CallExpression	pfont_data ( pfont )		9103155	1					
ANR	9103166	Callee	pfont_data		9103155	0					
ANR	9103167	Identifier	pfont_data		9103155	0					
ANR	9103168	ArgumentList	pfont		9103155	1					
ANR	9103169	Argument	pfont		9103155	0					
ANR	9103170	Identifier	pfont		9103155	0					
ANR	9103171	ExpressionStatement	pfont -> data = * pdata1	197:4:8135:8156	9103155	2	True				
ANR	9103172	AssignmentExpression	pfont -> data = * pdata1		9103155	0		=			
ANR	9103173	PtrMemberAccess	pfont -> data		9103155	0					
ANR	9103174	Identifier	pfont		9103155	0					
ANR	9103175	Identifier	data		9103155	1					
ANR	9103176	UnaryOperationExpression	* pdata1		9103155	1					
ANR	9103177	UnaryOperator	*		9103155	0					
ANR	9103178	Identifier	pdata1		9103155	1					
ANR	9103179	ExpressionStatement	pfont -> data . parent = NULL	198:4:8162:8187	9103155	3	True				
ANR	9103180	AssignmentExpression	pfont -> data . parent = NULL		9103155	0		=			
ANR	9103181	MemberAccess	pfont -> data . parent		9103155	0					
ANR	9103182	PtrMemberAccess	pfont -> data		9103155	0					
ANR	9103183	Identifier	pfont		9103155	0					
ANR	9103184	Identifier	data		9103155	1					
ANR	9103185	Identifier	parent		9103155	1					
ANR	9103186	Identifier	NULL		9103155	1					
ANR	9103187	ExpressionStatement	"ref_assign ( & pdata -> u . type1 . OtherSubrs , pfr -> OtherSubrs )"	199:4:8193:8248	9103155	4	True				
ANR	9103188	CallExpression	"ref_assign ( & pdata -> u . type1 . OtherSubrs , pfr -> OtherSubrs )"		9103155	0					
ANR	9103189	Callee	ref_assign		9103155	0					
ANR	9103190	Identifier	ref_assign		9103155	0					
ANR	9103191	ArgumentList	& pdata -> u . type1 . OtherSubrs		9103155	1					
ANR	9103192	Argument	& pdata -> u . type1 . OtherSubrs		9103155	0					
ANR	9103193	UnaryOperationExpression	& pdata -> u . type1 . OtherSubrs		9103155	0					
ANR	9103194	UnaryOperator	&		9103155	0					
ANR	9103195	MemberAccess	pdata -> u . type1 . OtherSubrs		9103155	1					
ANR	9103196	MemberAccess	pdata -> u . type1		9103155	0					
ANR	9103197	PtrMemberAccess	pdata -> u		9103155	0					
ANR	9103198	Identifier	pdata		9103155	0					
ANR	9103199	Identifier	u		9103155	1					
ANR	9103200	Identifier	type1		9103155	1					
ANR	9103201	Identifier	OtherSubrs		9103155	1					
ANR	9103202	Argument	pfr -> OtherSubrs		9103155	1					
ANR	9103203	PtrMemberAccess	pfr -> OtherSubrs		9103155	0					
ANR	9103204	Identifier	pfr		9103155	0					
ANR	9103205	Identifier	OtherSubrs		9103155	1					
ANR	9103206	ExpressionStatement	"ref_assign ( & pdata -> u . type1 . Subrs , pfr -> Subrs )"	200:4:8254:8299	9103155	5	True				
ANR	9103207	CallExpression	"ref_assign ( & pdata -> u . type1 . Subrs , pfr -> Subrs )"		9103155	0					
ANR	9103208	Callee	ref_assign		9103155	0					
ANR	9103209	Identifier	ref_assign		9103155	0					
ANR	9103210	ArgumentList	& pdata -> u . type1 . Subrs		9103155	1					
ANR	9103211	Argument	& pdata -> u . type1 . Subrs		9103155	0					
ANR	9103212	UnaryOperationExpression	& pdata -> u . type1 . Subrs		9103155	0					
ANR	9103213	UnaryOperator	&		9103155	0					
ANR	9103214	MemberAccess	pdata -> u . type1 . Subrs		9103155	1					
ANR	9103215	MemberAccess	pdata -> u . type1		9103155	0					
ANR	9103216	PtrMemberAccess	pdata -> u		9103155	0					
ANR	9103217	Identifier	pdata		9103155	0					
ANR	9103218	Identifier	u		9103155	1					
ANR	9103219	Identifier	type1		9103155	1					
ANR	9103220	Identifier	Subrs		9103155	1					
ANR	9103221	Argument	pfr -> Subrs		9103155	1					
ANR	9103222	PtrMemberAccess	pfr -> Subrs		9103155	0					
ANR	9103223	Identifier	pfr		9103155	0					
ANR	9103224	Identifier	Subrs		9103155	1					
ANR	9103225	ExpressionStatement	"ref_assign ( & pdata -> u . type1 . GlobalSubrs , pfr -> GlobalSubrs )"	201:4:8305:8362	9103155	6	True				
ANR	9103226	CallExpression	"ref_assign ( & pdata -> u . type1 . GlobalSubrs , pfr -> GlobalSubrs )"		9103155	0					
ANR	9103227	Callee	ref_assign		9103155	0					
ANR	9103228	Identifier	ref_assign		9103155	0					
ANR	9103229	ArgumentList	& pdata -> u . type1 . GlobalSubrs		9103155	1					
ANR	9103230	Argument	& pdata -> u . type1 . GlobalSubrs		9103155	0					
ANR	9103231	UnaryOperationExpression	& pdata -> u . type1 . GlobalSubrs		9103155	0					
ANR	9103232	UnaryOperator	&		9103155	0					
ANR	9103233	MemberAccess	pdata -> u . type1 . GlobalSubrs		9103155	1					
ANR	9103234	MemberAccess	pdata -> u . type1		9103155	0					
ANR	9103235	PtrMemberAccess	pdata -> u		9103155	0					
ANR	9103236	Identifier	pdata		9103155	0					
ANR	9103237	Identifier	u		9103155	1					
ANR	9103238	Identifier	type1		9103155	1					
ANR	9103239	Identifier	GlobalSubrs		9103155	1					
ANR	9103240	Argument	pfr -> GlobalSubrs		9103155	1					
ANR	9103241	PtrMemberAccess	pfr -> GlobalSubrs		9103155	0					
ANR	9103242	Identifier	pfr		9103155	0					
ANR	9103243	Identifier	GlobalSubrs		9103155	1					
ANR	9103244	ExpressionStatement	pfont -> data . procs = z1_data_procs	202:4:8368:8401	9103155	7	True				
ANR	9103245	AssignmentExpression	pfont -> data . procs = z1_data_procs		9103155	0		=			
ANR	9103246	MemberAccess	pfont -> data . procs		9103155	0					
ANR	9103247	PtrMemberAccess	pfont -> data		9103155	0					
ANR	9103248	Identifier	pfont		9103155	0					
ANR	9103249	Identifier	data		9103155	1					
ANR	9103250	Identifier	procs		9103155	1					
ANR	9103251	Identifier	z1_data_procs		9103155	1					
ANR	9103252	ExpressionStatement	pfont -> data . proc_data = ( char * ) pdata	203:4:8407:8444	9103155	8	True				
ANR	9103253	AssignmentExpression	pfont -> data . proc_data = ( char * ) pdata		9103155	0		=			
ANR	9103254	MemberAccess	pfont -> data . proc_data		9103155	0					
ANR	9103255	PtrMemberAccess	pfont -> data		9103155	0					
ANR	9103256	Identifier	pfont		9103155	0					
ANR	9103257	Identifier	data		9103155	1					
ANR	9103258	Identifier	proc_data		9103155	1					
ANR	9103259	CastExpression	( char * ) pdata		9103155	1					
ANR	9103260	CastTarget	char *		9103155	0					
ANR	9103261	Identifier	pdata		9103155	1					
ANR	9103262	ExpressionStatement	pfont -> procs . same_font = z1_same_font	204:4:8450:8487	9103155	9	True				
ANR	9103263	AssignmentExpression	pfont -> procs . same_font = z1_same_font		9103155	0		=			
ANR	9103264	MemberAccess	pfont -> procs . same_font		9103155	0					
ANR	9103265	PtrMemberAccess	pfont -> procs		9103155	0					
ANR	9103266	Identifier	pfont		9103155	0					
ANR	9103267	Identifier	procs		9103155	1					
ANR	9103268	Identifier	same_font		9103155	1					
ANR	9103269	Identifier	z1_same_font		9103155	1					
ANR	9103270	ExpressionStatement	pfont -> procs . glyph_info = z1_glyph_info	205:4:8493:8532	9103155	10	True				
ANR	9103271	AssignmentExpression	pfont -> procs . glyph_info = z1_glyph_info		9103155	0		=			
ANR	9103272	MemberAccess	pfont -> procs . glyph_info		9103155	0					
ANR	9103273	PtrMemberAccess	pfont -> procs		9103155	0					
ANR	9103274	Identifier	pfont		9103155	0					
ANR	9103275	Identifier	procs		9103155	1					
ANR	9103276	Identifier	glyph_info		9103155	1					
ANR	9103277	Identifier	z1_glyph_info		9103155	1					
ANR	9103278	ExpressionStatement	pfont -> procs . enumerate_glyph = z1_enumerate_glyph	206:4:8538:8587	9103155	11	True				
ANR	9103279	AssignmentExpression	pfont -> procs . enumerate_glyph = z1_enumerate_glyph		9103155	0		=			
ANR	9103280	MemberAccess	pfont -> procs . enumerate_glyph		9103155	0					
ANR	9103281	PtrMemberAccess	pfont -> procs		9103155	0					
ANR	9103282	Identifier	pfont		9103155	0					
ANR	9103283	Identifier	procs		9103155	1					
ANR	9103284	Identifier	enumerate_glyph		9103155	1					
ANR	9103285	Identifier	z1_enumerate_glyph		9103155	1					
ANR	9103286	ExpressionStatement	pfont -> procs . glyph_outline = zchar1_glyph_outline	207:4:8593:8642	9103155	12	True				
ANR	9103287	AssignmentExpression	pfont -> procs . glyph_outline = zchar1_glyph_outline		9103155	0		=			
ANR	9103288	MemberAccess	pfont -> procs . glyph_outline		9103155	0					
ANR	9103289	PtrMemberAccess	pfont -> procs		9103155	0					
ANR	9103290	Identifier	pfont		9103155	0					
ANR	9103291	Identifier	procs		9103155	1					
ANR	9103292	Identifier	glyph_outline		9103155	1					
ANR	9103293	Identifier	zchar1_glyph_outline		9103155	1					
ANR	9103294	ReturnStatement	return 0 ;	208:4:8648:8656	9103155	13	True				
ANR	9103295	PrimaryExpression	0		9103155	0					
ANR	9103296	ReturnType	int		9103155	1					
ANR	9103297	Identifier	charstring_font_init		9103155	2					
ANR	9103298	ParameterList	"gs_font_type1 * pfont , const charstring_font_refs_t * pfr , const gs_type1_data * pdata1"		9103155	3					
ANR	9103299	Parameter	gs_font_type1 * pfont	191:21:7968:7987	9103155	0	True				
ANR	9103300	ParameterType	gs_font_type1 *		9103155	0					
ANR	9103301	Identifier	pfont		9103155	1					
ANR	9103302	Parameter	const charstring_font_refs_t * pfr	191:43:7990:8022	9103155	1	True				
ANR	9103303	ParameterType	const charstring_font_refs_t *		9103155	0					
ANR	9103304	Identifier	pfr		9103155	1					
ANR	9103305	Parameter	const gs_type1_data * pdata1	192:21:8046:8072	9103155	2	True				
ANR	9103306	ParameterType	const gs_type1_data *		9103155	0					
ANR	9103307	Identifier	pdata1		9103155	1					
ANR	9103308	CFGEntryNode	ENTRY		9103155		True				
ANR	9103309	CFGExitNode	EXIT		9103155		True				
ANR	9103310	Symbol	pfont -> procs		9103155						
ANR	9103311	Symbol	pfr -> Subrs		9103155						
ANR	9103312	Symbol	pdata		9103155						
ANR	9103313	Symbol	& pdata -> u . type1		9103155						
ANR	9103314	Symbol	* pdata1		9103155						
ANR	9103315	Symbol	z1_same_font		9103155						
ANR	9103316	Symbol	z1_enumerate_glyph		9103155						
ANR	9103317	Symbol	& pdata -> u		9103155						
ANR	9103318	Symbol	pfr -> OtherSubrs		9103155						
ANR	9103319	Symbol	pdata1		9103155						
ANR	9103320	Symbol	pfr -> GlobalSubrs		9103155						
ANR	9103321	Symbol	* pdata		9103155						
ANR	9103322	Symbol	pfont -> data . proc_data		9103155						
ANR	9103323	Symbol	& pdata -> u . type1 . GlobalSubrs		9103155						
ANR	9103324	Symbol	NULL		9103155						
ANR	9103325	Symbol	pdata -> u . type1		9103155						
ANR	9103326	Symbol	pfont		9103155						
ANR	9103327	Symbol	* pfr		9103155						
ANR	9103328	Symbol	pfont -> procs . enumerate_glyph		9103155						
ANR	9103329	Symbol	zchar1_glyph_outline		9103155						
ANR	9103330	Symbol	pfont -> data		9103155						
ANR	9103331	Symbol	pdata -> u		9103155						
ANR	9103332	Symbol	pfont -> procs . glyph_info		9103155						
ANR	9103333	Symbol	z1_glyph_info		9103155						
ANR	9103334	Symbol	pfont -> procs . glyph_outline		9103155						
ANR	9103335	Symbol	* pfont		9103155						
ANR	9103336	Symbol	pfont -> data . parent		9103155						
ANR	9103337	Symbol	& pdata -> u . type1 . Subrs		9103155						
ANR	9103338	Symbol	& pdata -> u . type1 . OtherSubrs		9103155						
ANR	9103339	Symbol	pfont -> data . procs		9103155						
ANR	9103340	Symbol	pfont_data		9103155						
ANR	9103341	Symbol	pfont -> procs . same_font		9103155						
ANR	9103342	Symbol	pfr		9103155						
ANR	9103343	Symbol	z1_data_procs		9103155						
ANR	9103344	Function	build_charstring_font	212:0:8707:9397							
ANR	9103345	FunctionDef	"build_charstring_font (i_ctx_t * i_ctx_p , os_ptr op , build_proc_refs * pbuild , font_type ftype , charstring_font_refs_t * pfr , gs_type1_data * pdata1 , build_font_options_t options)"		9103344	0					
ANR	9103346	CompoundStatement		216:0:8930:9397	9103344	0					
ANR	9103347	IdentifierDeclStatement	"int code = charstring_font_params ( imemory , op , pfr , pdata1 ) ;"	217:4:8936:8995	9103344	0	True				
ANR	9103348	IdentifierDecl	"code = charstring_font_params ( imemory , op , pfr , pdata1 )"		9103344	0					
ANR	9103349	IdentifierDeclType	int		9103344	0					
ANR	9103350	Identifier	code		9103344	1					
ANR	9103351	AssignmentExpression	"code = charstring_font_params ( imemory , op , pfr , pdata1 )"		9103344	2		=			
ANR	9103352	Identifier	code		9103344	0					
ANR	9103353	CallExpression	"charstring_font_params ( imemory , op , pfr , pdata1 )"		9103344	1					
ANR	9103354	Callee	charstring_font_params		9103344	0					
ANR	9103355	Identifier	charstring_font_params		9103344	0					
ANR	9103356	ArgumentList	imemory		9103344	1					
ANR	9103357	Argument	imemory		9103344	0					
ANR	9103358	Identifier	imemory		9103344	0					
ANR	9103359	Argument	op		9103344	1					
ANR	9103360	Identifier	op		9103344	0					
ANR	9103361	Argument	pfr		9103344	2					
ANR	9103362	Identifier	pfr		9103344	0					
ANR	9103363	Argument	pdata1		9103344	3					
ANR	9103364	Identifier	pdata1		9103344	0					
ANR	9103365	IdentifierDeclStatement	gs_font_type1 * pfont ;	218:4:9001:9021	9103344	1	True				
ANR	9103366	IdentifierDecl	* pfont		9103344	0					
ANR	9103367	IdentifierDeclType	gs_font_type1 *		9103344	0					
ANR	9103368	Identifier	pfont		9103344	1					
ANR	9103369	IfStatement	if ( code < 0 )		9103344	2					
ANR	9103370	Condition	code < 0	220:8:9032:9039	9103344	0	True				
ANR	9103371	RelationalExpression	code < 0		9103344	0		<			
ANR	9103372	Identifier	code		9103344	0					
ANR	9103373	PrimaryExpression	0		9103344	1					
ANR	9103374	ReturnStatement	return code ;	221:8:9050:9061	9103344	1	True				
ANR	9103375	Identifier	code		9103344	0					
ANR	9103376	ExpressionStatement	"code = build_gs_primitive_font ( i_ctx_p , op , ( gs_font_base * * ) & pfont , ftype , & st_gs_font_type1 , pbuild , options )"	222:4:9067:9213	9103344	3	True				
ANR	9103377	AssignmentExpression	"code = build_gs_primitive_font ( i_ctx_p , op , ( gs_font_base * * ) & pfont , ftype , & st_gs_font_type1 , pbuild , options )"		9103344	0		=			
ANR	9103378	Identifier	code		9103344	0					
ANR	9103379	CallExpression	"build_gs_primitive_font ( i_ctx_p , op , ( gs_font_base * * ) & pfont , ftype , & st_gs_font_type1 , pbuild , options )"		9103344	1					
ANR	9103380	Callee	build_gs_primitive_font		9103344	0					
ANR	9103381	Identifier	build_gs_primitive_font		9103344	0					
ANR	9103382	ArgumentList	i_ctx_p		9103344	1					
ANR	9103383	Argument	i_ctx_p		9103344	0					
ANR	9103384	Identifier	i_ctx_p		9103344	0					
ANR	9103385	Argument	op		9103344	1					
ANR	9103386	Identifier	op		9103344	0					
ANR	9103387	Argument	( gs_font_base * * ) & pfont		9103344	2					
ANR	9103388	CastExpression	( gs_font_base * * ) & pfont		9103344	0					
ANR	9103389	CastTarget	gs_font_base * *		9103344	0					
ANR	9103390	UnaryOperationExpression	& pfont		9103344	1					
ANR	9103391	UnaryOperator	&		9103344	0					
ANR	9103392	Identifier	pfont		9103344	1					
ANR	9103393	Argument	ftype		9103344	3					
ANR	9103394	Identifier	ftype		9103344	0					
ANR	9103395	Argument	& st_gs_font_type1		9103344	4					
ANR	9103396	UnaryOperationExpression	& st_gs_font_type1		9103344	0					
ANR	9103397	UnaryOperator	&		9103344	0					
ANR	9103398	Identifier	st_gs_font_type1		9103344	1					
ANR	9103399	Argument	pbuild		9103344	5					
ANR	9103400	Identifier	pbuild		9103344	0					
ANR	9103401	Argument	options		9103344	6					
ANR	9103402	Identifier	options		9103344	0					
ANR	9103403	IfStatement	if ( code != 0 )		9103344	4					
ANR	9103404	Condition	code != 0	224:8:9223:9231	9103344	0	True				
ANR	9103405	EqualityExpression	code != 0		9103344	0		!=			
ANR	9103406	Identifier	code		9103344	0					
ANR	9103407	PrimaryExpression	0		9103344	1					
ANR	9103408	ReturnStatement	return code ;	225:8:9242:9253	9103344	1	True				
ANR	9103409	Identifier	code		9103344	0					
ANR	9103410	ExpressionStatement	"charstring_font_init ( pfont , pfr , pdata1 )"	227:4:9301:9341	9103344	5	True				
ANR	9103411	CallExpression	"charstring_font_init ( pfont , pfr , pdata1 )"		9103344	0					
ANR	9103412	Callee	charstring_font_init		9103344	0					
ANR	9103413	Identifier	charstring_font_init		9103344	0					
ANR	9103414	ArgumentList	pfont		9103344	1					
ANR	9103415	Argument	pfont		9103344	0					
ANR	9103416	Identifier	pfont		9103344	0					
ANR	9103417	Argument	pfr		9103344	1					
ANR	9103418	Identifier	pfr		9103344	0					
ANR	9103419	Argument	pdata1		9103344	2					
ANR	9103420	Identifier	pdata1		9103344	0					
ANR	9103421	ReturnStatement	"return define_gs_font ( i_ctx_p , ( gs_font * ) pfont ) ;"	228:4:9347:9395	9103344	6	True				
ANR	9103422	CallExpression	"define_gs_font ( i_ctx_p , ( gs_font * ) pfont )"		9103344	0					
ANR	9103423	Callee	define_gs_font		9103344	0					
ANR	9103424	Identifier	define_gs_font		9103344	0					
ANR	9103425	ArgumentList	i_ctx_p		9103344	1					
ANR	9103426	Argument	i_ctx_p		9103344	0					
ANR	9103427	Identifier	i_ctx_p		9103344	0					
ANR	9103428	Argument	( gs_font * ) pfont		9103344	1					
ANR	9103429	CastExpression	( gs_font * ) pfont		9103344	0					
ANR	9103430	CastTarget	gs_font *		9103344	0					
ANR	9103431	Identifier	pfont		9103344	1					
ANR	9103432	ReturnType	int		9103344	1					
ANR	9103433	Identifier	build_charstring_font		9103344	2					
ANR	9103434	ParameterList	"i_ctx_t * i_ctx_p , os_ptr op , build_proc_refs * pbuild , font_type ftype , charstring_font_refs_t * pfr , gs_type1_data * pdata1 , build_font_options_t options"		9103344	3					
ANR	9103435	Parameter	i_ctx_t * i_ctx_p	213:22:8733:8748	9103344	0	True				
ANR	9103436	ParameterType	i_ctx_t *		9103344	0					
ANR	9103437	Identifier	i_ctx_p		9103344	1					
ANR	9103438	Parameter	os_ptr op	213:40:8751:8759	9103344	1	True				
ANR	9103439	ParameterType	os_ptr		9103344	0					
ANR	9103440	Identifier	op		9103344	1					
ANR	9103441	Parameter	build_proc_refs * pbuild	213:51:8762:8784	9103344	2	True				
ANR	9103442	ParameterType	build_proc_refs *		9103344	0					
ANR	9103443	Identifier	pbuild		9103344	1					
ANR	9103444	Parameter	font_type ftype	214:22:8809:8823	9103344	3	True				
ANR	9103445	ParameterType	font_type		9103344	0					
ANR	9103446	Identifier	ftype		9103344	1					
ANR	9103447	Parameter	charstring_font_refs_t * pfr	214:39:8826:8852	9103344	4	True				
ANR	9103448	ParameterType	charstring_font_refs_t *		9103344	0					
ANR	9103449	Identifier	pfr		9103344	1					
ANR	9103450	Parameter	gs_type1_data * pdata1	215:22:8877:8897	9103344	5	True				
ANR	9103451	ParameterType	gs_type1_data *		9103344	0					
ANR	9103452	Identifier	pdata1		9103344	1					
ANR	9103453	Parameter	build_font_options_t options	215:45:8900:8927	9103344	6	True				
ANR	9103454	ParameterType	build_font_options_t		9103344	0					
ANR	9103455	Identifier	options		9103344	1					
ANR	9103456	CFGEntryNode	ENTRY		9103344		True				
ANR	9103457	CFGExitNode	EXIT		9103344		True				
ANR	9103458	Symbol	op		9103344						
ANR	9103459	Symbol	code		9103344						
ANR	9103460	Symbol	pbuild		9103344						
ANR	9103461	Symbol	pfont		9103344						
ANR	9103462	Symbol	& pfont		9103344						
ANR	9103463	Symbol	charstring_font_params		9103344						
ANR	9103464	Symbol	define_gs_font		9103344						
ANR	9103465	Symbol	build_gs_primitive_font		9103344						
ANR	9103466	Symbol	ftype		9103344						
ANR	9103467	Symbol	& st_gs_font_type1		9103344						
ANR	9103468	Symbol	i_ctx_p		9103344						
ANR	9103469	Symbol	options		9103344						
ANR	9103470	Symbol	pdata1		9103344						
ANR	9103471	Symbol	imemory		9103344						
ANR	9103472	Symbol	pfr		9103344						
ANR	9103473	Function	buildfont1or4	234:0:9468:9993							
ANR	9103474	FunctionDef	"buildfont1or4 (i_ctx_t * i_ctx_p , os_ptr op , build_proc_refs * pbuild , font_type ftype , build_font_options_t options)"		9103473	0					
ANR	9103475	CompoundStatement		237:0:9609:9993	9103473	0					
ANR	9103476	IdentifierDeclStatement	charstring_font_refs_t refs ;	238:4:9615:9642	9103473	0	True				
ANR	9103477	IdentifierDecl	refs		9103473	0					
ANR	9103478	IdentifierDeclType	charstring_font_refs_t		9103473	0					
ANR	9103479	Identifier	refs		9103473	1					
ANR	9103480	IdentifierDeclStatement	"int code = charstring_font_get_refs ( op , & refs ) ;"	239:4:9648:9694	9103473	1	True				
ANR	9103481	IdentifierDecl	"code = charstring_font_get_refs ( op , & refs )"		9103473	0					
ANR	9103482	IdentifierDeclType	int		9103473	0					
ANR	9103483	Identifier	code		9103473	1					
ANR	9103484	AssignmentExpression	"code = charstring_font_get_refs ( op , & refs )"		9103473	2		=			
ANR	9103485	Identifier	code		9103473	0					
ANR	9103486	CallExpression	"charstring_font_get_refs ( op , & refs )"		9103473	1					
ANR	9103487	Callee	charstring_font_get_refs		9103473	0					
ANR	9103488	Identifier	charstring_font_get_refs		9103473	0					
ANR	9103489	ArgumentList	op		9103473	1					
ANR	9103490	Argument	op		9103473	0					
ANR	9103491	Identifier	op		9103473	0					
ANR	9103492	Argument	& refs		9103473	1					
ANR	9103493	UnaryOperationExpression	& refs		9103473	0					
ANR	9103494	UnaryOperator	&		9103473	0					
ANR	9103495	Identifier	refs		9103473	1					
ANR	9103496	IdentifierDeclStatement	gs_type1_data data1 ;	240:4:9700:9719	9103473	2	True				
ANR	9103497	IdentifierDecl	data1		9103473	0					
ANR	9103498	IdentifierDeclType	gs_type1_data		9103473	0					
ANR	9103499	Identifier	data1		9103473	1					
ANR	9103500	IfStatement	if ( code < 0 )		9103473	3					
ANR	9103501	Condition	code < 0	242:8:9730:9737	9103473	0	True				
ANR	9103502	RelationalExpression	code < 0		9103473	0		<			
ANR	9103503	Identifier	code		9103473	0					
ANR	9103504	PrimaryExpression	0		9103473	1					
ANR	9103505	ReturnStatement	return code ;	243:8:9748:9759	9103473	1	True				
ANR	9103506	Identifier	code		9103473	0					
ANR	9103507	ExpressionStatement	data1 . interpret = gs_type1_interpret	244:4:9765:9801	9103473	4	True				
ANR	9103508	AssignmentExpression	data1 . interpret = gs_type1_interpret		9103473	0		=			
ANR	9103509	MemberAccess	data1 . interpret		9103473	0					
ANR	9103510	Identifier	data1		9103473	0					
ANR	9103511	Identifier	interpret		9103473	1					
ANR	9103512	Identifier	gs_type1_interpret		9103473	1					
ANR	9103513	ExpressionStatement	data1 . subroutineNumberBias = 0	245:4:9807:9837	9103473	5	True				
ANR	9103514	AssignmentExpression	data1 . subroutineNumberBias = 0		9103473	0		=			
ANR	9103515	MemberAccess	data1 . subroutineNumberBias		9103473	0					
ANR	9103516	Identifier	data1		9103473	0					
ANR	9103517	Identifier	subroutineNumberBias		9103473	1					
ANR	9103518	PrimaryExpression	0		9103473	1					
ANR	9103519	ExpressionStatement	data1 . lenIV = DEFAULT_LENIV_1	246:4:9843:9872	9103473	6	True				
ANR	9103520	AssignmentExpression	data1 . lenIV = DEFAULT_LENIV_1		9103473	0		=			
ANR	9103521	MemberAccess	data1 . lenIV		9103473	0					
ANR	9103522	Identifier	data1		9103473	0					
ANR	9103523	Identifier	lenIV		9103473	1					
ANR	9103524	Identifier	DEFAULT_LENIV_1		9103473	1					
ANR	9103525	ReturnStatement	"return build_charstring_font ( i_ctx_p , op , pbuild , ftype , & refs , & data1 , options ) ;"	247:4:9878:9991	9103473	7	True				
ANR	9103526	CallExpression	"build_charstring_font ( i_ctx_p , op , pbuild , ftype , & refs , & data1 , options )"		9103473	0					
ANR	9103527	Callee	build_charstring_font		9103473	0					
ANR	9103528	Identifier	build_charstring_font		9103473	0					
ANR	9103529	ArgumentList	i_ctx_p		9103473	1					
ANR	9103530	Argument	i_ctx_p		9103473	0					
ANR	9103531	Identifier	i_ctx_p		9103473	0					
ANR	9103532	Argument	op		9103473	1					
ANR	9103533	Identifier	op		9103473	0					
ANR	9103534	Argument	pbuild		9103473	2					
ANR	9103535	Identifier	pbuild		9103473	0					
ANR	9103536	Argument	ftype		9103473	3					
ANR	9103537	Identifier	ftype		9103473	0					
ANR	9103538	Argument	& refs		9103473	4					
ANR	9103539	UnaryOperationExpression	& refs		9103473	0					
ANR	9103540	UnaryOperator	&		9103473	0					
ANR	9103541	Identifier	refs		9103473	1					
ANR	9103542	Argument	& data1		9103473	5					
ANR	9103543	UnaryOperationExpression	& data1		9103473	0					
ANR	9103544	UnaryOperator	&		9103473	0					
ANR	9103545	Identifier	data1		9103473	1					
ANR	9103546	Argument	options		9103473	6					
ANR	9103547	Identifier	options		9103473	0					
ANR	9103548	ReturnType	static int		9103473	1					
ANR	9103549	Identifier	buildfont1or4		9103473	2					
ANR	9103550	ParameterList	"i_ctx_t * i_ctx_p , os_ptr op , build_proc_refs * pbuild , font_type ftype , build_font_options_t options"		9103473	3					
ANR	9103551	Parameter	i_ctx_t * i_ctx_p	235:14:9493:9508	9103473	0	True				
ANR	9103552	ParameterType	i_ctx_t *		9103473	0					
ANR	9103553	Identifier	i_ctx_p		9103473	1					
ANR	9103554	Parameter	os_ptr op	235:32:9511:9519	9103473	1	True				
ANR	9103555	ParameterType	os_ptr		9103473	0					
ANR	9103556	Identifier	op		9103473	1					
ANR	9103557	Parameter	build_proc_refs * pbuild	235:43:9522:9545	9103473	2	True				
ANR	9103558	ParameterType	build_proc_refs *		9103473	0					
ANR	9103559	Identifier	pbuild		9103473	1					
ANR	9103560	Parameter	font_type ftype	236:14:9562:9576	9103473	3	True				
ANR	9103561	ParameterType	font_type		9103473	0					
ANR	9103562	Identifier	ftype		9103473	1					
ANR	9103563	Parameter	build_font_options_t options	236:31:9579:9606	9103473	4	True				
ANR	9103564	ParameterType	build_font_options_t		9103473	0					
ANR	9103565	Identifier	options		9103473	1					
ANR	9103566	CFGEntryNode	ENTRY		9103473		True				
ANR	9103567	CFGExitNode	EXIT		9103473		True				
ANR	9103568	Symbol	op		9103473						
ANR	9103569	Symbol	build_charstring_font		9103473						
ANR	9103570	Symbol	code		9103473						
ANR	9103571	Symbol	pbuild		9103473						
ANR	9103572	Symbol	data1 . subroutineNumberBias		9103473						
ANR	9103573	Symbol	data1		9103473						
ANR	9103574	Symbol	& refs		9103473						
ANR	9103575	Symbol	DEFAULT_LENIV_1		9103473						
ANR	9103576	Symbol	ftype		9103473						
ANR	9103577	Symbol	refs		9103473						
ANR	9103578	Symbol	charstring_font_get_refs		9103473						
ANR	9103579	Symbol	i_ctx_p		9103473						
ANR	9103580	Symbol	options		9103473						
ANR	9103581	Symbol	data1 . lenIV		9103473						
ANR	9103582	Symbol	& data1		9103473						
ANR	9103583	Symbol	data1 . interpret		9103473						
ANR	9103584	Symbol	gs_type1_interpret		9103473						
ANR	9103585	Function	zbuildfont1	253:0:10106:10472							
ANR	9103586	FunctionDef	zbuildfont1 (i_ctx_t * i_ctx_p)		9103585	0					
ANR	9103587	CompoundStatement		255:0:10147:10472	9103585	0					
ANR	9103588	IdentifierDeclStatement	os_ptr op = osp ;	256:4:10153:10168	9103585	0	True				
ANR	9103589	IdentifierDecl	op = osp		9103585	0					
ANR	9103590	IdentifierDeclType	os_ptr		9103585	0					
ANR	9103591	Identifier	op		9103585	1					
ANR	9103592	AssignmentExpression	op = osp		9103585	2		=			
ANR	9103593	Identifier	osp		9103585	0					
ANR	9103594	Identifier	osp		9103585	1					
ANR	9103595	IdentifierDeclStatement	build_proc_refs build ;	257:4:10174:10195	9103585	1	True				
ANR	9103596	IdentifierDecl	build		9103585	0					
ANR	9103597	IdentifierDeclType	build_proc_refs		9103585	0					
ANR	9103598	Identifier	build		9103585	1					
ANR	9103599	IdentifierDeclStatement	"int code = build_proc_name_refs ( imemory , & build , ""%Type1BuildChar"" , ""%Type1BuildGlyph"" ) ;"	258:4:10201:10324	9103585	2	True				
ANR	9103600	IdentifierDecl	"code = build_proc_name_refs ( imemory , & build , ""%Type1BuildChar"" , ""%Type1BuildGlyph"" )"		9103585	0					
ANR	9103601	IdentifierDeclType	int		9103585	0					
ANR	9103602	Identifier	code		9103585	1					
ANR	9103603	AssignmentExpression	"code = build_proc_name_refs ( imemory , & build , ""%Type1BuildChar"" , ""%Type1BuildGlyph"" )"		9103585	2		=			
ANR	9103604	Identifier	code		9103585	0					
ANR	9103605	CallExpression	"build_proc_name_refs ( imemory , & build , ""%Type1BuildChar"" , ""%Type1BuildGlyph"" )"		9103585	1					
ANR	9103606	Callee	build_proc_name_refs		9103585	0					
ANR	9103607	Identifier	build_proc_name_refs		9103585	0					
ANR	9103608	ArgumentList	imemory		9103585	1					
ANR	9103609	Argument	imemory		9103585	0					
ANR	9103610	Identifier	imemory		9103585	0					
ANR	9103611	Argument	& build		9103585	1					
ANR	9103612	UnaryOperationExpression	& build		9103585	0					
ANR	9103613	UnaryOperator	&		9103585	0					
ANR	9103614	Identifier	build		9103585	1					
ANR	9103615	Argument	"""%Type1BuildChar"""		9103585	2					
ANR	9103616	PrimaryExpression	"""%Type1BuildChar"""		9103585	0					
ANR	9103617	Argument	"""%Type1BuildGlyph"""		9103585	3					
ANR	9103618	PrimaryExpression	"""%Type1BuildGlyph"""		9103585	0					
ANR	9103619	IfStatement	if ( code < 0 )		9103585	3					
ANR	9103620	Condition	code < 0	261:8:10335:10342	9103585	0	True				
ANR	9103621	RelationalExpression	code < 0		9103585	0		<			
ANR	9103622	Identifier	code		9103585	0					
ANR	9103623	PrimaryExpression	0		9103585	1					
ANR	9103624	ReturnStatement	return code ;	262:8:10353:10364	9103585	1	True				
ANR	9103625	Identifier	code		9103585	0					
ANR	9103626	ReturnStatement	"return buildfont1or4 ( i_ctx_p , op , & build , ft_encrypted , bf_notdef_required ) ;"	263:4:10370:10470	9103585	4	True				
ANR	9103627	CallExpression	"buildfont1or4 ( i_ctx_p , op , & build , ft_encrypted , bf_notdef_required )"		9103585	0					
ANR	9103628	Callee	buildfont1or4		9103585	0					
ANR	9103629	Identifier	buildfont1or4		9103585	0					
ANR	9103630	ArgumentList	i_ctx_p		9103585	1					
ANR	9103631	Argument	i_ctx_p		9103585	0					
ANR	9103632	Identifier	i_ctx_p		9103585	0					
ANR	9103633	Argument	op		9103585	1					
ANR	9103634	Identifier	op		9103585	0					
ANR	9103635	Argument	& build		9103585	2					
ANR	9103636	UnaryOperationExpression	& build		9103585	0					
ANR	9103637	UnaryOperator	&		9103585	0					
ANR	9103638	Identifier	build		9103585	1					
ANR	9103639	Argument	ft_encrypted		9103585	3					
ANR	9103640	Identifier	ft_encrypted		9103585	0					
ANR	9103641	Argument	bf_notdef_required		9103585	4					
ANR	9103642	Identifier	bf_notdef_required		9103585	0					
ANR	9103643	ReturnType	static int		9103585	1					
ANR	9103644	Identifier	zbuildfont1		9103585	2					
ANR	9103645	ParameterList	i_ctx_t * i_ctx_p		9103585	3					
ANR	9103646	Parameter	i_ctx_t * i_ctx_p	254:12:10129:10144	9103585	0	True				
ANR	9103647	ParameterType	i_ctx_t *		9103585	0					
ANR	9103648	Identifier	i_ctx_p		9103585	1					
ANR	9103649	CFGEntryNode	ENTRY		9103585		True				
ANR	9103650	CFGExitNode	EXIT		9103585		True				
ANR	9103651	Symbol	bf_notdef_required		9103585						
ANR	9103652	Symbol	op		9103585						
ANR	9103653	Symbol	build_proc_name_refs		9103585						
ANR	9103654	Symbol	code		9103585						
ANR	9103655	Symbol	build		9103585						
ANR	9103656	Symbol	buildfont1or4		9103585						
ANR	9103657	Symbol	i_ctx_p		9103585						
ANR	9103658	Symbol	& build		9103585						
ANR	9103659	Symbol	ft_encrypted		9103585						
ANR	9103660	Symbol	imemory		9103585						
ANR	9103661	Symbol	osp		9103585						
ANR	9103662	Function	zbuildfont4	269:0:10596:10854							
ANR	9103663	FunctionDef	zbuildfont4 (i_ctx_t * i_ctx_p)		9103662	0					
ANR	9103664	CompoundStatement		271:0:10637:10854	9103662	0					
ANR	9103665	IdentifierDeclStatement	os_ptr op = osp ;	272:4:10643:10658	9103662	0	True				
ANR	9103666	IdentifierDecl	op = osp		9103662	0					
ANR	9103667	IdentifierDeclType	os_ptr		9103662	0					
ANR	9103668	Identifier	op		9103662	1					
ANR	9103669	AssignmentExpression	op = osp		9103662	2		=			
ANR	9103670	Identifier	osp		9103662	0					
ANR	9103671	Identifier	osp		9103662	1					
ANR	9103672	IdentifierDeclStatement	build_proc_refs build ;	273:4:10664:10685	9103662	1	True				
ANR	9103673	IdentifierDecl	build		9103662	0					
ANR	9103674	IdentifierDeclType	build_proc_refs		9103662	0					
ANR	9103675	Identifier	build		9103662	1					
ANR	9103676	IdentifierDeclStatement	"int code = build_gs_font_procs ( op , & build ) ;"	274:4:10691:10733	9103662	2	True				
ANR	9103677	IdentifierDecl	"code = build_gs_font_procs ( op , & build )"		9103662	0					
ANR	9103678	IdentifierDeclType	int		9103662	0					
ANR	9103679	Identifier	code		9103662	1					
ANR	9103680	AssignmentExpression	"code = build_gs_font_procs ( op , & build )"		9103662	2		=			
ANR	9103681	Identifier	code		9103662	0					
ANR	9103682	CallExpression	"build_gs_font_procs ( op , & build )"		9103662	1					
ANR	9103683	Callee	build_gs_font_procs		9103662	0					
ANR	9103684	Identifier	build_gs_font_procs		9103662	0					
ANR	9103685	ArgumentList	op		9103662	1					
ANR	9103686	Argument	op		9103662	0					
ANR	9103687	Identifier	op		9103662	0					
ANR	9103688	Argument	& build		9103662	1					
ANR	9103689	UnaryOperationExpression	& build		9103662	0					
ANR	9103690	UnaryOperator	&		9103662	0					
ANR	9103691	Identifier	build		9103662	1					
ANR	9103692	IfStatement	if ( code < 0 )		9103662	3					
ANR	9103693	Condition	code < 0	276:8:10744:10751	9103662	0	True				
ANR	9103694	RelationalExpression	code < 0		9103662	0		<			
ANR	9103695	Identifier	code		9103662	0					
ANR	9103696	PrimaryExpression	0		9103662	1					
ANR	9103697	ReturnStatement	return code ;	277:8:10762:10773	9103662	1	True				
ANR	9103698	Identifier	code		9103662	0					
ANR	9103699	ReturnStatement	"return buildfont1or4 ( i_ctx_p , op , & build , ft_disk_based , bf_options_none ) ;"	278:4:10779:10852	9103662	4	True				
ANR	9103700	CallExpression	"buildfont1or4 ( i_ctx_p , op , & build , ft_disk_based , bf_options_none )"		9103662	0					
ANR	9103701	Callee	buildfont1or4		9103662	0					
ANR	9103702	Identifier	buildfont1or4		9103662	0					
ANR	9103703	ArgumentList	i_ctx_p		9103662	1					
ANR	9103704	Argument	i_ctx_p		9103662	0					
ANR	9103705	Identifier	i_ctx_p		9103662	0					
ANR	9103706	Argument	op		9103662	1					
ANR	9103707	Identifier	op		9103662	0					
ANR	9103708	Argument	& build		9103662	2					
ANR	9103709	UnaryOperationExpression	& build		9103662	0					
ANR	9103710	UnaryOperator	&		9103662	0					
ANR	9103711	Identifier	build		9103662	1					
ANR	9103712	Argument	ft_disk_based		9103662	3					
ANR	9103713	Identifier	ft_disk_based		9103662	0					
ANR	9103714	Argument	bf_options_none		9103662	4					
ANR	9103715	Identifier	bf_options_none		9103662	0					
ANR	9103716	ReturnType	static int		9103662	1					
ANR	9103717	Identifier	zbuildfont4		9103662	2					
ANR	9103718	ParameterList	i_ctx_t * i_ctx_p		9103662	3					
ANR	9103719	Parameter	i_ctx_t * i_ctx_p	270:12:10619:10634	9103662	0	True				
ANR	9103720	ParameterType	i_ctx_t *		9103662	0					
ANR	9103721	Identifier	i_ctx_p		9103662	1					
ANR	9103722	CFGEntryNode	ENTRY		9103662		True				
ANR	9103723	CFGExitNode	EXIT		9103662		True				
ANR	9103724	Symbol	op		9103662						
ANR	9103725	Symbol	bf_options_none		9103662						
ANR	9103726	Symbol	code		9103662						
ANR	9103727	Symbol	build		9103662						
ANR	9103728	Symbol	buildfont1or4		9103662						
ANR	9103729	Symbol	i_ctx_p		9103662						
ANR	9103730	Symbol	ft_disk_based		9103662						
ANR	9103731	Symbol	& build		9103662						
ANR	9103732	Symbol	osp		9103662						
ANR	9103733	Symbol	build_gs_font_procs		9103662						
ANR	9103734	DeclStmt									
ANR	9103735	Decl							const op_def	const op_def [ ]	zfont1_op_defs
ANR	9103736	Function	same_font_dict	293:0:11109:11554							
ANR	9103737	FunctionDef	"same_font_dict (const font_data * pdata , const font_data * podata , const char * key)"		9103736	0					
ANR	9103738	CompoundStatement		296:0:11217:11554	9103736	0					
ANR	9103739	IdentifierDeclStatement	ref * pvalue ;	297:4:11223:11234	9103736	0	True				
ANR	9103740	IdentifierDecl	* pvalue		9103736	0					
ANR	9103741	IdentifierDeclType	ref *		9103736	0					
ANR	9103742	Identifier	pvalue		9103736	1					
ANR	9103743	IdentifierDeclStatement	"bool present = dict_find_string ( & pdata -> dict , key , & pvalue ) > 0 ;"	298:4:11240:11303	9103736	1	True				
ANR	9103744	IdentifierDecl	"present = dict_find_string ( & pdata -> dict , key , & pvalue ) > 0"		9103736	0					
ANR	9103745	IdentifierDeclType	bool		9103736	0					
ANR	9103746	Identifier	present		9103736	1					
ANR	9103747	AssignmentExpression	"present = dict_find_string ( & pdata -> dict , key , & pvalue ) > 0"		9103736	2		=			
ANR	9103748	Identifier	present		9103736	0					
ANR	9103749	RelationalExpression	"dict_find_string ( & pdata -> dict , key , & pvalue ) > 0"		9103736	1		>			
ANR	9103750	CallExpression	"dict_find_string ( & pdata -> dict , key , & pvalue )"		9103736	0					
ANR	9103751	Callee	dict_find_string		9103736	0					
ANR	9103752	Identifier	dict_find_string		9103736	0					
ANR	9103753	ArgumentList	& pdata -> dict		9103736	1					
ANR	9103754	Argument	& pdata -> dict		9103736	0					
ANR	9103755	UnaryOperationExpression	& pdata -> dict		9103736	0					
ANR	9103756	UnaryOperator	&		9103736	0					
ANR	9103757	PtrMemberAccess	pdata -> dict		9103736	1					
ANR	9103758	Identifier	pdata		9103736	0					
ANR	9103759	Identifier	dict		9103736	1					
ANR	9103760	Argument	key		9103736	1					
ANR	9103761	Identifier	key		9103736	0					
ANR	9103762	Argument	& pvalue		9103736	2					
ANR	9103763	UnaryOperationExpression	& pvalue		9103736	0					
ANR	9103764	UnaryOperator	&		9103736	0					
ANR	9103765	Identifier	pvalue		9103736	1					
ANR	9103766	PrimaryExpression	0		9103736	1					
ANR	9103767	IdentifierDeclStatement	ref * povalue ;	299:4:11309:11321	9103736	2	True				
ANR	9103768	IdentifierDecl	* povalue		9103736	0					
ANR	9103769	IdentifierDeclType	ref *		9103736	0					
ANR	9103770	Identifier	povalue		9103736	1					
ANR	9103771	IdentifierDeclStatement	"bool opresent = dict_find_string ( & podata -> dict , key , & povalue ) > 0 ;"	300:4:11327:11393	9103736	3	True				
ANR	9103772	IdentifierDecl	"opresent = dict_find_string ( & podata -> dict , key , & povalue ) > 0"		9103736	0					
ANR	9103773	IdentifierDeclType	bool		9103736	0					
ANR	9103774	Identifier	opresent		9103736	1					
ANR	9103775	AssignmentExpression	"opresent = dict_find_string ( & podata -> dict , key , & povalue ) > 0"		9103736	2		=			
ANR	9103776	Identifier	opresent		9103736	0					
ANR	9103777	RelationalExpression	"dict_find_string ( & podata -> dict , key , & povalue ) > 0"		9103736	1		>			
ANR	9103778	CallExpression	"dict_find_string ( & podata -> dict , key , & povalue )"		9103736	0					
ANR	9103779	Callee	dict_find_string		9103736	0					
ANR	9103780	Identifier	dict_find_string		9103736	0					
ANR	9103781	ArgumentList	& podata -> dict		9103736	1					
ANR	9103782	Argument	& podata -> dict		9103736	0					
ANR	9103783	UnaryOperationExpression	& podata -> dict		9103736	0					
ANR	9103784	UnaryOperator	&		9103736	0					
ANR	9103785	PtrMemberAccess	podata -> dict		9103736	1					
ANR	9103786	Identifier	podata		9103736	0					
ANR	9103787	Identifier	dict		9103736	1					
ANR	9103788	Argument	key		9103736	1					
ANR	9103789	Identifier	key		9103736	0					
ANR	9103790	Argument	& povalue		9103736	2					
ANR	9103791	UnaryOperationExpression	& povalue		9103736	0					
ANR	9103792	UnaryOperator	&		9103736	0					
ANR	9103793	Identifier	povalue		9103736	1					
ANR	9103794	PrimaryExpression	0		9103736	1					
ANR	9103795	IdentifierDeclStatement	dict * pdict = ( & ( podata -> dict ) ) -> value . pdict ;	301:4:11399:11443	9103736	4	True				
ANR	9103796	IdentifierDecl	* pdict = ( & ( podata -> dict ) ) -> value . pdict		9103736	0					
ANR	9103797	IdentifierDeclType	dict *		9103736	0					
ANR	9103798	Identifier	pdict		9103736	1					
ANR	9103799	AssignmentExpression	* pdict = ( & ( podata -> dict ) ) -> value . pdict		9103736	2		=			
ANR	9103800	Identifier	pdict		9103736	0					
ANR	9103801	MemberAccess	( & ( podata -> dict ) ) -> value . pdict		9103736	1					
ANR	9103802	PtrMemberAccess	( & ( podata -> dict ) ) -> value		9103736	0					
ANR	9103803	UnaryOperationExpression	& ( podata -> dict )		9103736	0					
ANR	9103804	UnaryOperator	&		9103736	0					
ANR	9103805	PtrMemberAccess	podata -> dict		9103736	1					
ANR	9103806	Identifier	podata		9103736	0					
ANR	9103807	Identifier	dict		9103736	1					
ANR	9103808	Identifier	value		9103736	1					
ANR	9103809	Identifier	pdict		9103736	1					
ANR	9103810	ReturnStatement	"return ( present == opresent && ( present <= 0 || obj_eq ( dict_mem ( pdict ) , pvalue , povalue ) ) ) ;"	303:4:11450:11552	9103736	5	True				
ANR	9103811	AndExpression	"present == opresent && ( present <= 0 || obj_eq ( dict_mem ( pdict ) , pvalue , povalue ) )"		9103736	0		&&			
ANR	9103812	EqualityExpression	present == opresent		9103736	0		==			
ANR	9103813	Identifier	present		9103736	0					
ANR	9103814	Identifier	opresent		9103736	1					
ANR	9103815	OrExpression	"present <= 0 || obj_eq ( dict_mem ( pdict ) , pvalue , povalue )"		9103736	1		||			
ANR	9103816	RelationalExpression	present <= 0		9103736	0		<=			
ANR	9103817	Identifier	present		9103736	0					
ANR	9103818	PrimaryExpression	0		9103736	1					
ANR	9103819	CallExpression	"obj_eq ( dict_mem ( pdict ) , pvalue , povalue )"		9103736	1					
ANR	9103820	Callee	obj_eq		9103736	0					
ANR	9103821	Identifier	obj_eq		9103736	0					
ANR	9103822	ArgumentList	dict_mem ( pdict )		9103736	1					
ANR	9103823	Argument	dict_mem ( pdict )		9103736	0					
ANR	9103824	CallExpression	dict_mem ( pdict )		9103736	0					
ANR	9103825	Callee	dict_mem		9103736	0					
ANR	9103826	Identifier	dict_mem		9103736	0					
ANR	9103827	ArgumentList	pdict		9103736	1					
ANR	9103828	Argument	pdict		9103736	0					
ANR	9103829	Identifier	pdict		9103736	0					
ANR	9103830	Argument	pvalue		9103736	1					
ANR	9103831	Identifier	pvalue		9103736	0					
ANR	9103832	Argument	povalue		9103736	2					
ANR	9103833	Identifier	povalue		9103736	0					
ANR	9103834	ReturnType	static bool		9103736	1					
ANR	9103835	Identifier	same_font_dict		9103736	2					
ANR	9103836	ParameterList	"const font_data * pdata , const font_data * podata , const char * key"		9103736	3					
ANR	9103837	Parameter	const font_data * pdata	294:15:11136:11157	9103736	0	True				
ANR	9103838	ParameterType	const font_data *		9103736	0					
ANR	9103839	Identifier	pdata		9103736	1					
ANR	9103840	Parameter	const font_data * podata	294:39:11160:11182	9103736	1	True				
ANR	9103841	ParameterType	const font_data *		9103736	0					
ANR	9103842	Identifier	podata		9103736	1					
ANR	9103843	Parameter	const char * key	295:15:11200:11214	9103736	2	True				
ANR	9103844	ParameterType	const char *		9103736	0					
ANR	9103845	Identifier	key		9103736	1					
ANR	9103846	CFGEntryNode	ENTRY		9103736		True				
ANR	9103847	CFGExitNode	EXIT		9103736		True				
ANR	9103848	Symbol	podata		9103736						
ANR	9103849	Symbol	povalue		9103736						
ANR	9103850	Symbol	& podata -> dict		9103736						
ANR	9103851	Symbol	pdata		9103736						
ANR	9103852	Symbol	& pvalue		9103736						
ANR	9103853	Symbol	dict_find_string		9103736						
ANR	9103854	Symbol	opresent		9103736						
ANR	9103855	Symbol	( & ( podata -> dict ) ) -> value		9103736						
ANR	9103856	Symbol	& povalue		9103736						
ANR	9103857	Symbol	( & ( podata -> dict ) ) -> value . pdict		9103736						
ANR	9103858	Symbol	pvalue		9103736						
ANR	9103859	Symbol	dict_mem		9103736						
ANR	9103860	Symbol	obj_eq		9103736						
ANR	9103861	Symbol	podata -> dict		9103736						
ANR	9103862	Symbol	present		9103736						
ANR	9103863	Symbol	* podata		9103736						
ANR	9103864	Symbol	key		9103736						
ANR	9103865	Symbol	& pdata -> dict		9103736						
ANR	9103866	Symbol	pdict		9103736						
ANR	9103867	Function	z1_check_data_procs_equal	306:0:11556:11995							
ANR	9103868	FunctionDef	"z1_check_data_procs_equal (const gs_type1_data_procs_t * p1 , const gs_type1_data_procs_t * p2)"		9103867	0					
ANR	9103869	CompoundStatement		307:0:11660:11995	9103867	0					
ANR	9103870	IfStatement	if ( p1 -> glyph_data != p2 -> glyph_data )		9103867	0					
ANR	9103871	Condition	p1 -> glyph_data != p2 -> glyph_data	308:8:11670:11701	9103867	0	True				
ANR	9103872	EqualityExpression	p1 -> glyph_data != p2 -> glyph_data		9103867	0		!=			
ANR	9103873	PtrMemberAccess	p1 -> glyph_data		9103867	0					
ANR	9103874	Identifier	p1		9103867	0					
ANR	9103875	Identifier	glyph_data		9103867	1					
ANR	9103876	PtrMemberAccess	p2 -> glyph_data		9103867	1					
ANR	9103877	Identifier	p2		9103867	0					
ANR	9103878	Identifier	glyph_data		9103867	1					
ANR	9103879	ReturnStatement	return false ;	309:8:11712:11724	9103867	1	True				
ANR	9103880	Identifier	false		9103867	0					
ANR	9103881	IfStatement	if ( p1 -> subr_data != p2 -> subr_data )		9103867	1					
ANR	9103882	Condition	p1 -> subr_data != p2 -> subr_data	310:8:11734:11763	9103867	0	True				
ANR	9103883	EqualityExpression	p1 -> subr_data != p2 -> subr_data		9103867	0		!=			
ANR	9103884	PtrMemberAccess	p1 -> subr_data		9103867	0					
ANR	9103885	Identifier	p1		9103867	0					
ANR	9103886	Identifier	subr_data		9103867	1					
ANR	9103887	PtrMemberAccess	p2 -> subr_data		9103867	1					
ANR	9103888	Identifier	p2		9103867	0					
ANR	9103889	Identifier	subr_data		9103867	1					
ANR	9103890	ReturnStatement	return false ;	311:8:11774:11786	9103867	1	True				
ANR	9103891	Identifier	false		9103867	0					
ANR	9103892	IfStatement	if ( p1 -> seac_data != p2 -> seac_data )		9103867	2					
ANR	9103893	Condition	p1 -> seac_data != p2 -> seac_data	312:8:11796:11825	9103867	0	True				
ANR	9103894	EqualityExpression	p1 -> seac_data != p2 -> seac_data		9103867	0		!=			
ANR	9103895	PtrMemberAccess	p1 -> seac_data		9103867	0					
ANR	9103896	Identifier	p1		9103867	0					
ANR	9103897	Identifier	seac_data		9103867	1					
ANR	9103898	PtrMemberAccess	p2 -> seac_data		9103867	1					
ANR	9103899	Identifier	p2		9103867	0					
ANR	9103900	Identifier	seac_data		9103867	1					
ANR	9103901	ReturnStatement	return false ;	313:8:11836:11848	9103867	1	True				
ANR	9103902	Identifier	false		9103867	0					
ANR	9103903	IfStatement	if ( p1 -> push_values != p2 -> push_values )		9103867	3					
ANR	9103904	Condition	p1 -> push_values != p2 -> push_values	314:8:11858:11891	9103867	0	True				
ANR	9103905	EqualityExpression	p1 -> push_values != p2 -> push_values		9103867	0		!=			
ANR	9103906	PtrMemberAccess	p1 -> push_values		9103867	0					
ANR	9103907	Identifier	p1		9103867	0					
ANR	9103908	Identifier	push_values		9103867	1					
ANR	9103909	PtrMemberAccess	p2 -> push_values		9103867	1					
ANR	9103910	Identifier	p2		9103867	0					
ANR	9103911	Identifier	push_values		9103867	1					
ANR	9103912	ReturnStatement	return false ;	315:8:11902:11914	9103867	1	True				
ANR	9103913	Identifier	false		9103867	0					
ANR	9103914	IfStatement	if ( p1 -> pop_value != p2 -> pop_value )		9103867	4					
ANR	9103915	Condition	p1 -> pop_value != p2 -> pop_value	316:8:11924:11953	9103867	0	True				
ANR	9103916	EqualityExpression	p1 -> pop_value != p2 -> pop_value		9103867	0		!=			
ANR	9103917	PtrMemberAccess	p1 -> pop_value		9103867	0					
ANR	9103918	Identifier	p1		9103867	0					
ANR	9103919	Identifier	pop_value		9103867	1					
ANR	9103920	PtrMemberAccess	p2 -> pop_value		9103867	1					
ANR	9103921	Identifier	p2		9103867	0					
ANR	9103922	Identifier	pop_value		9103867	1					
ANR	9103923	ReturnStatement	return false ;	317:8:11964:11976	9103867	1	True				
ANR	9103924	Identifier	false		9103867	0					
ANR	9103925	ReturnStatement	return true ;	318:4:11982:11993	9103867	5	True				
ANR	9103926	Identifier	true		9103867	0					
ANR	9103927	ReturnType	static bool		9103867	1					
ANR	9103928	Identifier	z1_check_data_procs_equal		9103867	2					
ANR	9103929	ParameterList	"const gs_type1_data_procs_t * p1 , const gs_type1_data_procs_t * p2"		9103867	3					
ANR	9103930	Parameter	const gs_type1_data_procs_t * p1	306:38:11594:11624	9103867	0	True				
ANR	9103931	ParameterType	const gs_type1_data_procs_t *		9103867	0					
ANR	9103932	Identifier	p1		9103867	1					
ANR	9103933	Parameter	const gs_type1_data_procs_t * p2	306:71:11627:11657	9103867	1	True				
ANR	9103934	ParameterType	const gs_type1_data_procs_t *		9103867	0					
ANR	9103935	Identifier	p2		9103867	1					
ANR	9103936	CFGEntryNode	ENTRY		9103867		True				
ANR	9103937	CFGExitNode	EXIT		9103867		True				
ANR	9103938	Symbol	p2 -> pop_value		9103867						
ANR	9103939	Symbol	p1		9103867						
ANR	9103940	Symbol	p2		9103867						
ANR	9103941	Symbol	p2 -> seac_data		9103867						
ANR	9103942	Symbol	p2 -> push_values		9103867						
ANR	9103943	Symbol	* p1		9103867						
ANR	9103944	Symbol	p1 -> pop_value		9103867						
ANR	9103945	Symbol	false		9103867						
ANR	9103946	Symbol	* p2		9103867						
ANR	9103947	Symbol	p1 -> seac_data		9103867						
ANR	9103948	Symbol	p1 -> glyph_data		9103867						
ANR	9103949	Symbol	p2 -> glyph_data		9103867						
ANR	9103950	Symbol	p1 -> push_values		9103867						
ANR	9103951	Symbol	true		9103867						
ANR	9103952	Symbol	p1 -> subr_data		9103867						
ANR	9103953	Symbol	p2 -> subr_data		9103867						
ANR	9103954	Function	z1_same_font	321:0:11998:13833							
ANR	9103955	FunctionDef	"z1_same_font (const gs_font * font , const gs_font * ofont , int mask)"		9103954	0					
ANR	9103956	CompoundStatement		323:0:12075:13833	9103954	0					
ANR	9103957	IfStatement	if ( ofont -> FontType != font -> FontType )		9103954	0					
ANR	9103958	Condition	ofont -> FontType != font -> FontType	324:8:12085:12117	9103954	0	True				
ANR	9103959	EqualityExpression	ofont -> FontType != font -> FontType		9103954	0		!=			
ANR	9103960	PtrMemberAccess	ofont -> FontType		9103954	0					
ANR	9103961	Identifier	ofont		9103954	0					
ANR	9103962	Identifier	FontType		9103954	1					
ANR	9103963	PtrMemberAccess	font -> FontType		9103954	1					
ANR	9103964	Identifier	font		9103954	0					
ANR	9103965	Identifier	FontType		9103954	1					
ANR	9103966	ReturnStatement	return 0 ;	325:8:12128:12136	9103954	1	True				
ANR	9103967	PrimaryExpression	0		9103954	0					
ANR	9103968	WhileStatement	while ( font -> base != font )		9103954	1					
ANR	9103969	Condition	font -> base != font	326:11:12149:12166	9103954	0	True				
ANR	9103970	EqualityExpression	font -> base != font		9103954	0		!=			
ANR	9103971	PtrMemberAccess	font -> base		9103954	0					
ANR	9103972	Identifier	font		9103954	0					
ANR	9103973	Identifier	base		9103954	1					
ANR	9103974	Identifier	font		9103954	1					
ANR	9103975	ExpressionStatement	font = font -> base	327:8:12177:12194	9103954	1	True				
ANR	9103976	AssignmentExpression	font = font -> base		9103954	0		=			
ANR	9103977	Identifier	font		9103954	0					
ANR	9103978	PtrMemberAccess	font -> base		9103954	1					
ANR	9103979	Identifier	font		9103954	0					
ANR	9103980	Identifier	base		9103954	1					
ANR	9103981	WhileStatement	while ( ofont -> base != ofont )		9103954	2					
ANR	9103982	Condition	ofont -> base != ofont	328:11:12207:12226	9103954	0	True				
ANR	9103983	EqualityExpression	ofont -> base != ofont		9103954	0		!=			
ANR	9103984	PtrMemberAccess	ofont -> base		9103954	0					
ANR	9103985	Identifier	ofont		9103954	0					
ANR	9103986	Identifier	base		9103954	1					
ANR	9103987	Identifier	ofont		9103954	1					
ANR	9103988	ExpressionStatement	ofont = ofont -> base	329:8:12237:12256	9103954	1	True				
ANR	9103989	AssignmentExpression	ofont = ofont -> base		9103954	0		=			
ANR	9103990	Identifier	ofont		9103954	0					
ANR	9103991	PtrMemberAccess	ofont -> base		9103954	1					
ANR	9103992	Identifier	ofont		9103954	0					
ANR	9103993	Identifier	base		9103954	1					
ANR	9103994	IfStatement	if ( ofont == font )		9103954	3					
ANR	9103995	Condition	ofont == font	330:8:12266:12278	9103954	0	True				
ANR	9103996	EqualityExpression	ofont == font		9103954	0		==			
ANR	9103997	Identifier	ofont		9103954	0					
ANR	9103998	Identifier	font		9103954	1					
ANR	9103999	ReturnStatement	return mask ;	331:8:12289:12300	9103954	1	True				
ANR	9104000	Identifier	mask		9103954	0					
ANR	9104001	CompoundStatement		17:8:593:679	9103954	4					
ANR	9104002	IdentifierDeclStatement	"int same = gs_base_same_font ( font , ofont , mask ) ;"	333:8:12316:12363	9103954	0	True				
ANR	9104003	IdentifierDecl	"same = gs_base_same_font ( font , ofont , mask )"		9103954	0					
ANR	9104004	IdentifierDeclType	int		9103954	0					
ANR	9104005	Identifier	same		9103954	1					
ANR	9104006	AssignmentExpression	"same = gs_base_same_font ( font , ofont , mask )"		9103954	2		=			
ANR	9104007	Identifier	same		9103954	0					
ANR	9104008	CallExpression	"gs_base_same_font ( font , ofont , mask )"		9103954	1					
ANR	9104009	Callee	gs_base_same_font		9103954	0					
ANR	9104010	Identifier	gs_base_same_font		9103954	0					
ANR	9104011	ArgumentList	font		9103954	1					
ANR	9104012	Argument	font		9103954	0					
ANR	9104013	Identifier	font		9103954	0					
ANR	9104014	Argument	ofont		9103954	1					
ANR	9104015	Identifier	ofont		9103954	0					
ANR	9104016	Argument	mask		9103954	2					
ANR	9104017	Identifier	mask		9103954	0					
ANR	9104018	IdentifierDeclStatement	int check = mask & ~same ;	334:8:12373:12397	9103954	1	True				
ANR	9104019	IdentifierDecl	check = mask & ~same		9103954	0					
ANR	9104020	IdentifierDeclType	int		9103954	0					
ANR	9104021	Identifier	check		9103954	1					
ANR	9104022	AssignmentExpression	check = mask & ~same		9103954	2		=			
ANR	9104023	Identifier	check		9103954	0					
ANR	9104024	BitAndExpression	mask & ~same		9103954	1		&			
ANR	9104025	Identifier	mask		9103954	0					
ANR	9104026	Identifier	~same		9103954	1					
ANR	9104027	Statement	const	335:8:12407:12411	9103954	2	True				
ANR	9104028	Statement	gs_font_type1	335:14:12413:12425	9103954	3	True				
ANR	9104029	Statement	*	335:28:12427:12427	9103954	4	True				
ANR	9104030	Statement	const	335:29:12428:12432	9103954	5	True				
ANR	9104031	ExpressionStatement	pfont1 = ( const gs_font_type1 * ) font	335:35:12434:12470	9103954	6	True				
ANR	9104032	AssignmentExpression	pfont1 = ( const gs_font_type1 * ) font		9103954	0		=			
ANR	9104033	Identifier	pfont1		9103954	0					
ANR	9104034	CastExpression	( const gs_font_type1 * ) font		9103954	1					
ANR	9104035	CastTarget	const gs_font_type1 *		9103954	0					
ANR	9104036	Identifier	font		9103954	1					
ANR	9104037	Statement	const	336:8:12480:12484	9103954	7	True				
ANR	9104038	Statement	font_data	336:14:12486:12494	9103954	8	True				
ANR	9104039	Statement	*	336:24:12496:12496	9103954	9	True				
ANR	9104040	Statement	const	336:25:12497:12501	9103954	10	True				
ANR	9104041	ExpressionStatement	pdata = pfont_data ( pfont1 )	336:31:12503:12529	9103954	11	True				
ANR	9104042	AssignmentExpression	pdata = pfont_data ( pfont1 )		9103954	0		=			
ANR	9104043	Identifier	pdata		9103954	0					
ANR	9104044	CallExpression	pfont_data ( pfont1 )		9103954	1					
ANR	9104045	Callee	pfont_data		9103954	0					
ANR	9104046	Identifier	pfont_data		9103954	0					
ANR	9104047	ArgumentList	pfont1		9103954	1					
ANR	9104048	Argument	pfont1		9103954	0					
ANR	9104049	Identifier	pfont1		9103954	0					
ANR	9104050	IdentifierDeclStatement	const gs_font_type1 * pofont1 = ( const gs_font_type1 * ) ofont ;	337:8:12539:12598	9103954	12	True				
ANR	9104051	IdentifierDecl	* pofont1 = ( const gs_font_type1 * ) ofont		9103954	0					
ANR	9104052	IdentifierDeclType	const gs_font_type1 *		9103954	0					
ANR	9104053	Identifier	pofont1		9103954	1					
ANR	9104054	AssignmentExpression	* pofont1 = ( const gs_font_type1 * ) ofont		9103954	2		=			
ANR	9104055	Identifier	pofont1		9103954	0					
ANR	9104056	CastExpression	( const gs_font_type1 * ) ofont		9103954	1					
ANR	9104057	CastTarget	const gs_font_type1 *		9103954	0					
ANR	9104058	Identifier	ofont		9103954	1					
ANR	9104059	Statement	const	338:8:12608:12612	9103954	13	True				
ANR	9104060	Statement	font_data	338:14:12614:12622	9103954	14	True				
ANR	9104061	Statement	*	338:24:12624:12624	9103954	15	True				
ANR	9104062	Statement	const	338:25:12625:12629	9103954	16	True				
ANR	9104063	ExpressionStatement	podata = pfont_data ( pofont1 )	338:31:12631:12659	9103954	17	True				
ANR	9104064	AssignmentExpression	podata = pfont_data ( pofont1 )		9103954	0		=			
ANR	9104065	Identifier	podata		9103954	0					
ANR	9104066	CallExpression	pfont_data ( pofont1 )		9103954	1					
ANR	9104067	Callee	pfont_data		9103954	0					
ANR	9104068	Identifier	pfont_data		9103954	0					
ANR	9104069	ArgumentList	pofont1		9103954	1					
ANR	9104070	Argument	pofont1		9103954	0					
ANR	9104071	Identifier	pofont1		9103954	0					
ANR	9104072	IdentifierDeclStatement	"bool same_data_procs = z1_check_data_procs_equal ( & pofont1 -> data . procs , & z1_data_procs ) ;"	339:8:12669:12755	9103954	18	True				
ANR	9104073	IdentifierDecl	"same_data_procs = z1_check_data_procs_equal ( & pofont1 -> data . procs , & z1_data_procs )"		9103954	0					
ANR	9104074	IdentifierDeclType	bool		9103954	0					
ANR	9104075	Identifier	same_data_procs		9103954	1					
ANR	9104076	AssignmentExpression	"same_data_procs = z1_check_data_procs_equal ( & pofont1 -> data . procs , & z1_data_procs )"		9103954	2		=			
ANR	9104077	Identifier	same_data_procs		9103954	0					
ANR	9104078	CallExpression	"z1_check_data_procs_equal ( & pofont1 -> data . procs , & z1_data_procs )"		9103954	1					
ANR	9104079	Callee	z1_check_data_procs_equal		9103954	0					
ANR	9104080	Identifier	z1_check_data_procs_equal		9103954	0					
ANR	9104081	ArgumentList	& pofont1 -> data . procs		9103954	1					
ANR	9104082	Argument	& pofont1 -> data . procs		9103954	0					
ANR	9104083	UnaryOperationExpression	& pofont1 -> data . procs		9103954	0					
ANR	9104084	UnaryOperator	&		9103954	0					
ANR	9104085	MemberAccess	pofont1 -> data . procs		9103954	1					
ANR	9104086	PtrMemberAccess	pofont1 -> data		9103954	0					
ANR	9104087	Identifier	pofont1		9103954	0					
ANR	9104088	Identifier	data		9103954	1					
ANR	9104089	Identifier	procs		9103954	1					
ANR	9104090	Argument	& z1_data_procs		9103954	1					
ANR	9104091	UnaryOperationExpression	& z1_data_procs		9103954	0					
ANR	9104092	UnaryOperator	&		9103954	0					
ANR	9104093	Identifier	z1_data_procs		9103954	1					
ANR	9104094	IfStatement	"if ( ( check & ( FONT_SAME_OUTLINES | FONT_SAME_METRICS ) ) && same_data_procs && obj_eq ( font -> memory , & pdata -> CharStrings , & podata -> CharStrings ) && same_font_dict ( pdata , podata , ""Private"" ) )"		9103954	19					
ANR	9104095	Condition	"( check & ( FONT_SAME_OUTLINES | FONT_SAME_METRICS ) ) && same_data_procs && obj_eq ( font -> memory , & pdata -> CharStrings , & podata -> CharStrings ) && same_font_dict ( pdata , podata , ""Private"" )"	342:12:12771:13128	9103954	0	True				
ANR	9104096	AndExpression	"( check & ( FONT_SAME_OUTLINES | FONT_SAME_METRICS ) ) && same_data_procs && obj_eq ( font -> memory , & pdata -> CharStrings , & podata -> CharStrings ) && same_font_dict ( pdata , podata , ""Private"" )"		9103954	0		&&			
ANR	9104097	BitAndExpression	check & ( FONT_SAME_OUTLINES | FONT_SAME_METRICS )		9103954	0		&			
ANR	9104098	Identifier	check		9103954	0					
ANR	9104099	InclusiveOrExpression	FONT_SAME_OUTLINES | FONT_SAME_METRICS		9103954	1		|			
ANR	9104100	Identifier	FONT_SAME_OUTLINES		9103954	0					
ANR	9104101	Identifier	FONT_SAME_METRICS		9103954	1					
ANR	9104102	AndExpression	"same_data_procs && obj_eq ( font -> memory , & pdata -> CharStrings , & podata -> CharStrings ) && same_font_dict ( pdata , podata , ""Private"" )"		9103954	1		&&			
ANR	9104103	Identifier	same_data_procs		9103954	0					
ANR	9104104	AndExpression	"obj_eq ( font -> memory , & pdata -> CharStrings , & podata -> CharStrings ) && same_font_dict ( pdata , podata , ""Private"" )"		9103954	1		&&			
ANR	9104105	CallExpression	"obj_eq ( font -> memory , & pdata -> CharStrings , & podata -> CharStrings )"		9103954	0					
ANR	9104106	Callee	obj_eq		9103954	0					
ANR	9104107	Identifier	obj_eq		9103954	0					
ANR	9104108	ArgumentList	font -> memory		9103954	1					
ANR	9104109	Argument	font -> memory		9103954	0					
ANR	9104110	PtrMemberAccess	font -> memory		9103954	0					
ANR	9104111	Identifier	font		9103954	0					
ANR	9104112	Identifier	memory		9103954	1					
ANR	9104113	Argument	& pdata -> CharStrings		9103954	1					
ANR	9104114	UnaryOperationExpression	& pdata -> CharStrings		9103954	0					
ANR	9104115	UnaryOperator	&		9103954	0					
ANR	9104116	PtrMemberAccess	pdata -> CharStrings		9103954	1					
ANR	9104117	Identifier	pdata		9103954	0					
ANR	9104118	Identifier	CharStrings		9103954	1					
ANR	9104119	Argument	& podata -> CharStrings		9103954	2					
ANR	9104120	UnaryOperationExpression	& podata -> CharStrings		9103954	0					
ANR	9104121	UnaryOperator	&		9103954	0					
ANR	9104122	PtrMemberAccess	podata -> CharStrings		9103954	1					
ANR	9104123	Identifier	podata		9103954	0					
ANR	9104124	Identifier	CharStrings		9103954	1					
ANR	9104125	CallExpression	"same_font_dict ( pdata , podata , ""Private"" )"		9103954	1					
ANR	9104126	Callee	same_font_dict		9103954	0					
ANR	9104127	Identifier	same_font_dict		9103954	0					
ANR	9104128	ArgumentList	pdata		9103954	1					
ANR	9104129	Argument	pdata		9103954	0					
ANR	9104130	Identifier	pdata		9103954	0					
ANR	9104131	Argument	podata		9103954	1					
ANR	9104132	Identifier	podata		9103954	0					
ANR	9104133	Argument	"""Private"""		9103954	2					
ANR	9104134	PrimaryExpression	"""Private"""		9103954	0					
ANR	9104135	ExpressionStatement	same |= FONT_SAME_OUTLINES	350:12:13156:13182	9103954	1	True				
ANR	9104136	AssignmentExpression	same |= FONT_SAME_OUTLINES		9103954	0		|=			
ANR	9104137	Identifier	same		9103954	0					
ANR	9104138	Identifier	FONT_SAME_OUTLINES		9103954	1					
ANR	9104139	IfStatement	"if ( ( check & FONT_SAME_METRICS ) && ( same & FONT_SAME_OUTLINES ) && same_data_procs && same_font_dict ( pdata , podata , ""Metrics"" ) && same_font_dict ( pdata , podata , ""Metrics2"" ) && same_font_dict ( pdata , podata , ""CDevProc"" ) )"		9103954	20					
ANR	9104140	Condition	"( check & FONT_SAME_METRICS ) && ( same & FONT_SAME_OUTLINES ) && same_data_procs && same_font_dict ( pdata , podata , ""Metrics"" ) && same_font_dict ( pdata , podata , ""Metrics2"" ) && same_font_dict ( pdata , podata , ""CDevProc"" )"	352:12:13197:13518	9103954	0	True				
ANR	9104141	AndExpression	"( check & FONT_SAME_METRICS ) && ( same & FONT_SAME_OUTLINES ) && same_data_procs && same_font_dict ( pdata , podata , ""Metrics"" ) && same_font_dict ( pdata , podata , ""Metrics2"" ) && same_font_dict ( pdata , podata , ""CDevProc"" )"		9103954	0		&&			
ANR	9104142	BitAndExpression	check & FONT_SAME_METRICS		9103954	0		&			
ANR	9104143	Identifier	check		9103954	0					
ANR	9104144	Identifier	FONT_SAME_METRICS		9103954	1					
ANR	9104145	AndExpression	"( same & FONT_SAME_OUTLINES ) && same_data_procs && same_font_dict ( pdata , podata , ""Metrics"" ) && same_font_dict ( pdata , podata , ""Metrics2"" ) && same_font_dict ( pdata , podata , ""CDevProc"" )"		9103954	1		&&			
ANR	9104146	BitAndExpression	same & FONT_SAME_OUTLINES		9103954	0		&			
ANR	9104147	Identifier	same		9103954	0					
ANR	9104148	Identifier	FONT_SAME_OUTLINES		9103954	1					
ANR	9104149	AndExpression	"same_data_procs && same_font_dict ( pdata , podata , ""Metrics"" ) && same_font_dict ( pdata , podata , ""Metrics2"" ) && same_font_dict ( pdata , podata , ""CDevProc"" )"		9103954	1		&&			
ANR	9104150	Identifier	same_data_procs		9103954	0					
ANR	9104151	AndExpression	"same_font_dict ( pdata , podata , ""Metrics"" ) && same_font_dict ( pdata , podata , ""Metrics2"" ) && same_font_dict ( pdata , podata , ""CDevProc"" )"		9103954	1		&&			
ANR	9104152	CallExpression	"same_font_dict ( pdata , podata , ""Metrics"" )"		9103954	0					
ANR	9104153	Callee	same_font_dict		9103954	0					
ANR	9104154	Identifier	same_font_dict		9103954	0					
ANR	9104155	ArgumentList	pdata		9103954	1					
ANR	9104156	Argument	pdata		9103954	0					
ANR	9104157	Identifier	pdata		9103954	0					
ANR	9104158	Argument	podata		9103954	1					
ANR	9104159	Identifier	podata		9103954	0					
ANR	9104160	Argument	"""Metrics"""		9103954	2					
ANR	9104161	PrimaryExpression	"""Metrics"""		9103954	0					
ANR	9104162	AndExpression	"same_font_dict ( pdata , podata , ""Metrics2"" ) && same_font_dict ( pdata , podata , ""CDevProc"" )"		9103954	1		&&			
ANR	9104163	CallExpression	"same_font_dict ( pdata , podata , ""Metrics2"" )"		9103954	0					
ANR	9104164	Callee	same_font_dict		9103954	0					
ANR	9104165	Identifier	same_font_dict		9103954	0					
ANR	9104166	ArgumentList	pdata		9103954	1					
ANR	9104167	Argument	pdata		9103954	0					
ANR	9104168	Identifier	pdata		9103954	0					
ANR	9104169	Argument	podata		9103954	1					
ANR	9104170	Identifier	podata		9103954	0					
ANR	9104171	Argument	"""Metrics2"""		9103954	2					
ANR	9104172	PrimaryExpression	"""Metrics2"""		9103954	0					
ANR	9104173	CallExpression	"same_font_dict ( pdata , podata , ""CDevProc"" )"		9103954	1					
ANR	9104174	Callee	same_font_dict		9103954	0					
ANR	9104175	Identifier	same_font_dict		9103954	0					
ANR	9104176	ArgumentList	pdata		9103954	1					
ANR	9104177	Argument	pdata		9103954	0					
ANR	9104178	Identifier	pdata		9103954	0					
ANR	9104179	Argument	podata		9103954	1					
ANR	9104180	Identifier	podata		9103954	0					
ANR	9104181	Argument	"""CDevProc"""		9103954	2					
ANR	9104182	PrimaryExpression	"""CDevProc"""		9103954	0					
ANR	9104183	ExpressionStatement	same |= FONT_SAME_METRICS	358:12:13546:13571	9103954	1	True				
ANR	9104184	AssignmentExpression	same |= FONT_SAME_METRICS		9103954	0		|=			
ANR	9104185	Identifier	same		9103954	0					
ANR	9104186	Identifier	FONT_SAME_METRICS		9103954	1					
ANR	9104187	IfStatement	"if ( ( check & FONT_SAME_ENCODING ) && pofont1 -> procs . same_font == z1_same_font && obj_eq ( font -> memory , & pdata -> Encoding , & podata -> Encoding ) )"		9103954	21					
ANR	9104188	Condition	"( check & FONT_SAME_ENCODING ) && pofont1 -> procs . same_font == z1_same_font && obj_eq ( font -> memory , & pdata -> Encoding , & podata -> Encoding )"	360:12:13586:13742	9103954	0	True				
ANR	9104189	AndExpression	"( check & FONT_SAME_ENCODING ) && pofont1 -> procs . same_font == z1_same_font && obj_eq ( font -> memory , & pdata -> Encoding , & podata -> Encoding )"		9103954	0		&&			
ANR	9104190	BitAndExpression	check & FONT_SAME_ENCODING		9103954	0		&			
ANR	9104191	Identifier	check		9103954	0					
ANR	9104192	Identifier	FONT_SAME_ENCODING		9103954	1					
ANR	9104193	AndExpression	"pofont1 -> procs . same_font == z1_same_font && obj_eq ( font -> memory , & pdata -> Encoding , & podata -> Encoding )"		9103954	1		&&			
ANR	9104194	EqualityExpression	pofont1 -> procs . same_font == z1_same_font		9103954	0		==			
ANR	9104195	MemberAccess	pofont1 -> procs . same_font		9103954	0					
ANR	9104196	PtrMemberAccess	pofont1 -> procs		9103954	0					
ANR	9104197	Identifier	pofont1		9103954	0					
ANR	9104198	Identifier	procs		9103954	1					
ANR	9104199	Identifier	same_font		9103954	1					
ANR	9104200	Identifier	z1_same_font		9103954	1					
ANR	9104201	CallExpression	"obj_eq ( font -> memory , & pdata -> Encoding , & podata -> Encoding )"		9103954	1					
ANR	9104202	Callee	obj_eq		9103954	0					
ANR	9104203	Identifier	obj_eq		9103954	0					
ANR	9104204	ArgumentList	font -> memory		9103954	1					
ANR	9104205	Argument	font -> memory		9103954	0					
ANR	9104206	PtrMemberAccess	font -> memory		9103954	0					
ANR	9104207	Identifier	font		9103954	0					
ANR	9104208	Identifier	memory		9103954	1					
ANR	9104209	Argument	& pdata -> Encoding		9103954	1					
ANR	9104210	UnaryOperationExpression	& pdata -> Encoding		9103954	0					
ANR	9104211	UnaryOperator	&		9103954	0					
ANR	9104212	PtrMemberAccess	pdata -> Encoding		9103954	1					
ANR	9104213	Identifier	pdata		9103954	0					
ANR	9104214	Identifier	Encoding		9103954	1					
ANR	9104215	Argument	& podata -> Encoding		9103954	2					
ANR	9104216	UnaryOperationExpression	& podata -> Encoding		9103954	0					
ANR	9104217	UnaryOperator	&		9103954	0					
ANR	9104218	PtrMemberAccess	podata -> Encoding		9103954	1					
ANR	9104219	Identifier	podata		9103954	0					
ANR	9104220	Identifier	Encoding		9103954	1					
ANR	9104221	ExpressionStatement	same |= FONT_SAME_ENCODING	364:12:13770:13796	9103954	1	True				
ANR	9104222	AssignmentExpression	same |= FONT_SAME_ENCODING		9103954	0		|=			
ANR	9104223	Identifier	same		9103954	0					
ANR	9104224	Identifier	FONT_SAME_ENCODING		9103954	1					
ANR	9104225	ReturnStatement	return same & mask ;	366:8:13807:13825	9103954	22	True				
ANR	9104226	BitAndExpression	same & mask		9103954	0		&			
ANR	9104227	Identifier	same		9103954	0					
ANR	9104228	Identifier	mask		9103954	1					
ANR	9104229	ReturnType	static int		9103954	1					
ANR	9104230	Identifier	z1_same_font		9103954	2					
ANR	9104231	ParameterList	"const gs_font * font , const gs_font * ofont , int mask"		9103954	3					
ANR	9104232	Parameter	const gs_font * font	322:13:12022:12040	9103954	0	True				
ANR	9104233	ParameterType	const gs_font *		9103954	0					
ANR	9104234	Identifier	font		9103954	1					
ANR	9104235	Parameter	const gs_font * ofont	322:34:12043:12062	9103954	1	True				
ANR	9104236	ParameterType	const gs_font *		9103954	0					
ANR	9104237	Identifier	ofont		9103954	1					
ANR	9104238	Parameter	int mask	322:56:12065:12072	9103954	2	True				
ANR	9104239	ParameterType	int		9103954	0					
ANR	9104240	Identifier	mask		9103954	1					
ANR	9104241	CFGEntryNode	ENTRY		9103954		True				
ANR	9104242	CFGExitNode	EXIT		9103954		True				
ANR	9104243	Symbol	podata		9103954						
ANR	9104244	Symbol	~same		9103954						
ANR	9104245	Symbol	pdata		9103954						
ANR	9104246	Symbol	FONT_SAME_METRICS		9103954						
ANR	9104247	Symbol	z1_same_font		9103954						
ANR	9104248	Symbol	pofont1 -> procs		9103954						
ANR	9104249	Symbol	ofont -> FontType		9103954						
ANR	9104250	Symbol	z1_check_data_procs_equal		9103954						
ANR	9104251	Symbol	FONT_SAME_OUTLINES		9103954						
ANR	9104252	Symbol	pofont1 -> procs . same_font		9103954						
ANR	9104253	Symbol	& podata -> CharStrings		9103954						
ANR	9104254	Symbol	font -> base		9103954						
ANR	9104255	Symbol	ofont -> base		9103954						
ANR	9104256	Symbol	same		9103954						
ANR	9104257	Symbol	font -> memory		9103954						
ANR	9104258	Symbol	font -> FontType		9103954						
ANR	9104259	Symbol	pofont1		9103954						
ANR	9104260	Symbol	pofont1 -> data		9103954						
ANR	9104261	Symbol	& pofont1 -> data		9103954						
ANR	9104262	Symbol	* font		9103954						
ANR	9104263	Symbol	& pdata -> CharStrings		9103954						
ANR	9104264	Symbol	same_font_dict		9103954						
ANR	9104265	Symbol	mask		9103954						
ANR	9104266	Symbol	FONT_SAME_ENCODING		9103954						
ANR	9104267	Symbol	pfont1		9103954						
ANR	9104268	Symbol	& podata -> Encoding		9103954						
ANR	9104269	Symbol	* ofont		9103954						
ANR	9104270	Symbol	check		9103954						
ANR	9104271	Symbol	& z1_data_procs		9103954						
ANR	9104272	Symbol	& pofont1 -> data . procs		9103954						
ANR	9104273	Symbol	gs_base_same_font		9103954						
ANR	9104274	Symbol	& pdata -> Encoding		9103954						
ANR	9104275	Symbol	ofont		9103954						
ANR	9104276	Symbol	obj_eq		9103954						
ANR	9104277	Symbol	same_data_procs		9103954						
ANR	9104278	Symbol	* pofont1		9103954						
ANR	9104279	Symbol	pfont_data		9103954						
ANR	9104280	Symbol	font		9103954						
