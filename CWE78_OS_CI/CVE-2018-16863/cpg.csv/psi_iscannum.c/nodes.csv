command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8922270	File	data/converged/CVE-2018-16863_ghostpdl/psi_iscannum.c								
ANR	8922271	Function	scan_number	37:0:1190:12076							
ANR	8922272	FunctionDef	"scan_number (const byte * str , const byte * end , int sign , ref * pref , const byte * * psp , int scanner_options)"		8922271	0					
ANR	8922273	CompoundStatement		40:0:1316:12076	8922271	0					
ANR	8922274	IdentifierDeclStatement	const byte * sp = str ;	41:4:1322:1342	8922271	0	True				
ANR	8922275	IdentifierDecl	* sp = str		8922271	0					
ANR	8922276	IdentifierDeclType	const byte *		8922271	0					
ANR	8922277	Identifier	sp		8922271	1					
ANR	8922278	AssignmentExpression	* sp = str		8922271	2		=			
ANR	8922279	Identifier	str		8922271	0					
ANR	8922280	Identifier	str		8922271	1					
ANR	8922281	Statement	define	42:1:1345:1350	8922271	1	True				
ANR	8922282	Statement	GET_NEXT	42:8:1352:1359	8922271	2	True				
ANR	8922283	Statement	(	42:16:1360:1360	8922271	3	True				
ANR	8922284	Statement	cvar	42:17:1361:1364	8922271	4	True				
ANR	8922285	Statement	","	42:21:1365:1365	8922271	5	True				
ANR	8922286	Statement	sp	42:23:1367:1368	8922271	6	True				
ANR	8922287	Statement	","	42:25:1369:1369	8922271	7	True				
ANR	8922288	Statement	end_action	42:27:1371:1380	8922271	8	True				
ANR	8922289	Statement	)	42:37:1381:1381	8922271	9	True				
ANR	8922290	IfStatement	if ( sp >= end )		8922271	10					
ANR	8922291	Condition	sp >= end	43:6:1390:1398	8922271	0	True				
ANR	8922292	RelationalExpression	sp >= end		8922271	0		>=			
ANR	8922293	Identifier	sp		8922271	0					
ANR	8922294	Identifier	end		8922271	1					
ANR	8922295	CompoundStatement		4:17:84:84	8922271	1					
ANR	8922296	ExpressionStatement	end_action	43:19:1403:1413	8922271	0	True				
ANR	8922297	Identifier	end_action		8922271	0					
ANR	8922298	ElseStatement	else		8922271	0					
ANR	8922299	Statement	cvar	43:38:1422:1425	8922271	0	True				
ANR	8922300	Statement	=	43:43:1427:1427	8922271	11	True				
ANR	8922301	Statement	*	43:45:1429:1429	8922271	12	True				
ANR	8922302	Statement	sp	43:46:1430:1431	8922271	13	True				
ANR	8922303	Statement	++	43:48:1432:1433	8922271	14	True				
ANR	8922304	Statement	define	49:1:1546:1551	8922271	15	True				
ANR	8922305	Statement	NUM_POWERS_10	49:8:1553:1565	8922271	16	True				
ANR	8922306	Statement	6	49:22:1567:1567	8922271	17	True				
ANR	8922307	Statement	static	50:4:1573:1578	8922271	18	True				
ANR	8922308	IdentifierDeclStatement	"const float powers_10 [ NUM_POWERS_10 + 1 ] = { 1e0 , 1e1 , 1e2 , 1e3 , 1e4 , 1e5 , 1e6 } ;"	50:11:1580:1672	8922271	19	True				
ANR	8922309	IdentifierDecl	"powers_10 [ NUM_POWERS_10 + 1 ] = { 1e0 , 1e1 , 1e2 , 1e3 , 1e4 , 1e5 , 1e6 }"		8922271	0					
ANR	8922310	IdentifierDeclType	const float [ NUM_POWERS_10 + 1 ]		8922271	0					
ANR	8922311	Identifier	powers_10		8922271	1					
ANR	8922312	AdditiveExpression	NUM_POWERS_10 + 1		8922271	2		+			
ANR	8922313	Identifier	NUM_POWERS_10		8922271	0					
ANR	8922314	PrimaryExpression	1		8922271	1					
ANR	8922315	AssignmentExpression	"powers_10 [ NUM_POWERS_10 + 1 ] = { 1e0 , 1e1 , 1e2 , 1e3 , 1e4 , 1e5 , 1e6 }"		8922271	3		=			
ANR	8922316	Identifier	powers_10		8922271	0					
ANR	8922317	InitializerList	1e0		8922271	1					
ANR	8922318	PrimaryExpression	1e0		8922271	0					
ANR	8922319	PrimaryExpression	1e1		8922271	1					
ANR	8922320	PrimaryExpression	1e2		8922271	2					
ANR	8922321	PrimaryExpression	1e3		8922271	3					
ANR	8922322	PrimaryExpression	1e4		8922271	4					
ANR	8922323	PrimaryExpression	1e5		8922271	5					
ANR	8922324	PrimaryExpression	1e6		8922271	6					
ANR	8922325	Statement	static	53:4:1678:1683	8922271	20	True				
ANR	8922326	IdentifierDeclStatement	"const double neg_powers_10 [ NUM_POWERS_10 + 1 ] = { 1e0 , 1e-1 , 1e-2 , 1e-3 , 1e-4 , 1e-5 , 1e-6 } ;"	53:11:1685:1788	8922271	21	True				
ANR	8922327	IdentifierDecl	"neg_powers_10 [ NUM_POWERS_10 + 1 ] = { 1e0 , 1e-1 , 1e-2 , 1e-3 , 1e-4 , 1e-5 , 1e-6 }"		8922271	0					
ANR	8922328	IdentifierDeclType	const double [ NUM_POWERS_10 + 1 ]		8922271	0					
ANR	8922329	Identifier	neg_powers_10		8922271	1					
ANR	8922330	AdditiveExpression	NUM_POWERS_10 + 1		8922271	2		+			
ANR	8922331	Identifier	NUM_POWERS_10		8922271	0					
ANR	8922332	PrimaryExpression	1		8922271	1					
ANR	8922333	AssignmentExpression	"neg_powers_10 [ NUM_POWERS_10 + 1 ] = { 1e0 , 1e-1 , 1e-2 , 1e-3 , 1e-4 , 1e-5 , 1e-6 }"		8922271	3		=			
ANR	8922334	Identifier	neg_powers_10		8922271	0					
ANR	8922335	InitializerList	1e0		8922271	1					
ANR	8922336	PrimaryExpression	1e0		8922271	0					
ANR	8922337	PrimaryExpression	1e-1		8922271	1					
ANR	8922338	PrimaryExpression	1e-2		8922271	2					
ANR	8922339	PrimaryExpression	1e-3		8922271	3					
ANR	8922340	PrimaryExpression	1e-4		8922271	4					
ANR	8922341	PrimaryExpression	1e-5		8922271	5					
ANR	8922342	PrimaryExpression	1e-6		8922271	6					
ANR	8922343	IdentifierDeclStatement	ps_int ival ;	57:4:1795:1806	8922271	22	True				
ANR	8922344	IdentifierDecl	ival		8922271	0					
ANR	8922345	IdentifierDeclType	ps_int		8922271	0					
ANR	8922346	Identifier	ival		8922271	1					
ANR	8922347	IdentifierDeclStatement	double dval ;	58:4:1812:1823	8922271	23	True				
ANR	8922348	IdentifierDecl	dval		8922271	0					
ANR	8922349	IdentifierDeclType	double		8922271	0					
ANR	8922350	Identifier	dval		8922271	1					
ANR	8922351	IdentifierDeclStatement	int exp10 ;	59:4:1829:1838	8922271	24	True				
ANR	8922352	IdentifierDecl	exp10		8922271	0					
ANR	8922353	IdentifierDeclType	int		8922271	0					
ANR	8922354	Identifier	exp10		8922271	1					
ANR	8922355	IdentifierDeclStatement	int code = 0 ;	60:4:1844:1856	8922271	25	True				
ANR	8922356	IdentifierDecl	code = 0		8922271	0					
ANR	8922357	IdentifierDeclType	int		8922271	0					
ANR	8922358	Identifier	code		8922271	1					
ANR	8922359	AssignmentExpression	code = 0		8922271	2		=			
ANR	8922360	Identifier	code		8922271	0					
ANR	8922361	PrimaryExpression	0		8922271	1					
ANR	8922362	IdentifierDeclStatement	"int c , d ;"	61:4:1862:1870	8922271	26	True				
ANR	8922363	IdentifierDecl	c		8922271	0					
ANR	8922364	IdentifierDeclType	int		8922271	0					
ANR	8922365	Identifier	c		8922271	1					
ANR	8922366	IdentifierDecl	d		8922271	1					
ANR	8922367	IdentifierDeclType	int		8922271	0					
ANR	8922368	Identifier	d		8922271	1					
ANR	8922369	IdentifierDeclStatement	ps_uint max_scan ;	62:4:1876:1892	8922271	27	True				
ANR	8922370	IdentifierDecl	max_scan		8922271	0					
ANR	8922371	IdentifierDeclType	ps_uint		8922271	0					
ANR	8922372	Identifier	max_scan		8922271	1					
ANR	8922373	IdentifierDeclStatement	"ps_int max_ps_int_scan , min_ps_int_scan ;"	63:4:1931:1970	8922271	28	True				
ANR	8922374	IdentifierDecl	max_ps_int_scan		8922271	0					
ANR	8922375	IdentifierDeclType	ps_int		8922271	0					
ANR	8922376	Identifier	max_ps_int_scan		8922271	1					
ANR	8922377	IdentifierDecl	min_ps_int_scan		8922271	1					
ANR	8922378	IdentifierDeclType	ps_int		8922271	0					
ANR	8922379	Identifier	min_ps_int_scan		8922271	1					
ANR	8922380	Statement	const	64:4:1976:1980	8922271	29	True				
ANR	8922381	Statement	byte	64:10:1982:1985	8922271	30	True				
ANR	8922382	Statement	*	64:15:1987:1987	8922271	31	True				
ANR	8922383	Statement	const	64:16:1988:1992	8922271	32	True				
ANR	8922384	ExpressionStatement	decoder = scan_char_decoder	64:22:1994:2021	8922271	33	True				
ANR	8922385	AssignmentExpression	decoder = scan_char_decoder		8922271	0		=			
ANR	8922386	Identifier	decoder		8922271	0					
ANR	8922387	Identifier	scan_char_decoder		8922271	1					
ANR	8922388	Statement	define	65:1:2024:2029	8922271	34	True				
ANR	8922389	Statement	IS_DIGIT	65:8:2031:2038	8922271	35	True				
ANR	8922390	Statement	(	65:16:2039:2039	8922271	36	True				
ANR	8922391	Statement	d	65:17:2040:2040	8922271	37	True				
ANR	8922392	Statement	","	65:18:2041:2041	8922271	38	True				
ANR	8922393	Statement	c	65:20:2043:2043	8922271	39	True				
ANR	8922394	Statement	)	65:21:2044:2044	8922271	40	True				
ANR	8922395	Statement	(	66:2:2049:2049	8922271	41	True				
ANR	8922396	Statement	(	66:3:2050:2050	8922271	42	True				
ANR	8922397	Statement	d	66:4:2051:2051	8922271	43	True				
ANR	8922398	Statement	=	66:6:2053:2053	8922271	44	True				
ANR	8922399	Statement	decoder	66:8:2055:2061	8922271	45	True				
ANR	8922400	Statement	[	66:15:2062:2062	8922271	46	True				
ANR	8922401	Statement	c	66:16:2063:2063	8922271	47	True				
ANR	8922402	Statement	]	66:17:2064:2064	8922271	48	True				
ANR	8922403	Statement	)	66:18:2065:2065	8922271	49	True				
ANR	8922404	Statement	<	66:20:2067:2067	8922271	50	True				
ANR	8922405	Statement	10	66:22:2069:2070	8922271	51	True				
ANR	8922406	Statement	)	66:24:2071:2071	8922271	52	True				
ANR	8922407	Statement	define	67:1:2074:2079	8922271	53	True				
ANR	8922408	Statement	WOULD_OVERFLOW	67:8:2081:2094	8922271	54	True				
ANR	8922409	Statement	(	67:22:2095:2095	8922271	55	True				
ANR	8922410	Statement	val	67:23:2096:2098	8922271	56	True				
ANR	8922411	Statement	","	67:26:2099:2099	8922271	57	True				
ANR	8922412	Statement	d	67:28:2101:2101	8922271	58	True				
ANR	8922413	Statement	","	67:29:2102:2102	8922271	59	True				
ANR	8922414	Statement	maxv	67:31:2104:2107	8922271	60	True				
ANR	8922415	Statement	)	67:35:2108:2108	8922271	61	True				
ANR	8922416	Statement	(	68:2:2113:2113	8922271	62	True				
ANR	8922417	Statement	val	68:3:2114:2116	8922271	63	True				
ANR	8922418	Statement	>=	68:7:2118:2119	8922271	64	True				
ANR	8922419	Statement	maxv	68:10:2121:2124	8922271	65	True				
ANR	8922420	Statement	/	68:15:2126:2126	8922271	66	True				
ANR	8922421	Statement	10	68:17:2128:2129	8922271	67	True				
ANR	8922422	Statement	&&	68:20:2131:2132	8922271	68	True				
ANR	8922423	Statement	(	68:23:2134:2134	8922271	69	True				
ANR	8922424	Statement	val	68:24:2135:2137	8922271	70	True				
ANR	8922425	Statement	>	68:28:2139:2139	8922271	71	True				
ANR	8922426	Statement	maxv	68:30:2141:2144	8922271	72	True				
ANR	8922427	Statement	/	68:35:2146:2146	8922271	73	True				
ANR	8922428	Statement	10	68:37:2148:2149	8922271	74	True				
ANR	8922429	Statement	||	68:40:2151:2152	8922271	75	True				
ANR	8922430	Statement	d	68:43:2154:2154	8922271	76	True				
ANR	8922431	Statement	>	68:45:2156:2156	8922271	77	True				
ANR	8922432	Statement	(	68:47:2158:2158	8922271	78	True				
ANR	8922433	Statement	int64_t	68:48:2159:2165	8922271	79	True				
ANR	8922434	Statement	)	68:55:2166:2166	8922271	80	True				
ANR	8922435	Statement	(	68:56:2167:2167	8922271	81	True				
ANR	8922436	Statement	maxv	68:57:2168:2171	8922271	82	True				
ANR	8922437	Statement	%	68:62:2173:2173	8922271	83	True				
ANR	8922438	Statement	10	68:64:2175:2176	8922271	84	True				
ANR	8922439	Statement	)	68:66:2177:2177	8922271	85	True				
ANR	8922440	Statement	)	68:67:2178:2178	8922271	86	True				
ANR	8922441	Statement	)	68:68:2179:2179	8922271	87	True				
ANR	8922442	ExpressionStatement	"GET_NEXT ( c , sp , return_error ( gs_error_syntaxerror ) )"	70:4:2186:2237	8922271	88	True				
ANR	8922443	CallExpression	"GET_NEXT ( c , sp , return_error ( gs_error_syntaxerror ) )"		8922271	0					
ANR	8922444	Callee	GET_NEXT		8922271	0					
ANR	8922445	Identifier	GET_NEXT		8922271	0					
ANR	8922446	ArgumentList	c		8922271	1					
ANR	8922447	Argument	c		8922271	0					
ANR	8922448	Identifier	c		8922271	0					
ANR	8922449	Argument	sp		8922271	1					
ANR	8922450	Identifier	sp		8922271	0					
ANR	8922451	Argument	return_error ( gs_error_syntaxerror )		8922271	2					
ANR	8922452	CallExpression	return_error ( gs_error_syntaxerror )		8922271	0					
ANR	8922453	Callee	return_error		8922271	0					
ANR	8922454	Identifier	return_error		8922271	0					
ANR	8922455	ArgumentList	gs_error_syntaxerror		8922271	1					
ANR	8922456	Argument	gs_error_syntaxerror		8922271	0					
ANR	8922457	Identifier	gs_error_syntaxerror		8922271	0					
ANR	8922458	IfStatement	"if ( ! IS_DIGIT ( d , c ) )"		8922271	89					
ANR	8922459	Condition	"! IS_DIGIT ( d , c )"	71:8:2247:2261	8922271	0	True				
ANR	8922460	UnaryOperationExpression	"! IS_DIGIT ( d , c )"		8922271	0					
ANR	8922461	UnaryOperator	!		8922271	0					
ANR	8922462	CallExpression	"IS_DIGIT ( d , c )"		8922271	1					
ANR	8922463	Callee	IS_DIGIT		8922271	0					
ANR	8922464	Identifier	IS_DIGIT		8922271	0					
ANR	8922465	ArgumentList	d		8922271	1					
ANR	8922466	Argument	d		8922271	0					
ANR	8922467	Identifier	d		8922271	0					
ANR	8922468	Argument	c		8922271	1					
ANR	8922469	Identifier	c		8922271	0					
ANR	8922470	CompoundStatement		32:25:947:947	8922271	1					
ANR	8922471	IfStatement	if ( c != '.' )		8922271	0					
ANR	8922472	Condition	c != '.'	72:12:2278:2285	8922271	0	True				
ANR	8922473	EqualityExpression	c != '.'		8922271	0		!=			
ANR	8922474	Identifier	c		8922271	0					
ANR	8922475	PrimaryExpression	'.'		8922271	1					
ANR	8922476	ExpressionStatement	return_error ( gs_error_syntaxerror )	73:12:2300:2334	8922271	1	True				
ANR	8922477	CallExpression	return_error ( gs_error_syntaxerror )		8922271	0					
ANR	8922478	Callee	return_error		8922271	0					
ANR	8922479	Identifier	return_error		8922271	0					
ANR	8922480	ArgumentList	gs_error_syntaxerror		8922271	1					
ANR	8922481	Argument	gs_error_syntaxerror		8922271	0					
ANR	8922482	Identifier	gs_error_syntaxerror		8922271	0					
ANR	8922483	ExpressionStatement	"GET_NEXT ( c , sp , return_error ( gs_error_syntaxerror ) )"	75:8:2395:2446	8922271	1	True				
ANR	8922484	CallExpression	"GET_NEXT ( c , sp , return_error ( gs_error_syntaxerror ) )"		8922271	0					
ANR	8922485	Callee	GET_NEXT		8922271	0					
ANR	8922486	Identifier	GET_NEXT		8922271	0					
ANR	8922487	ArgumentList	c		8922271	1					
ANR	8922488	Argument	c		8922271	0					
ANR	8922489	Identifier	c		8922271	0					
ANR	8922490	Argument	sp		8922271	1					
ANR	8922491	Identifier	sp		8922271	0					
ANR	8922492	Argument	return_error ( gs_error_syntaxerror )		8922271	2					
ANR	8922493	CallExpression	return_error ( gs_error_syntaxerror )		8922271	0					
ANR	8922494	Callee	return_error		8922271	0					
ANR	8922495	Identifier	return_error		8922271	0					
ANR	8922496	ArgumentList	gs_error_syntaxerror		8922271	1					
ANR	8922497	Argument	gs_error_syntaxerror		8922271	0					
ANR	8922498	Identifier	gs_error_syntaxerror		8922271	0					
ANR	8922499	IfStatement	"if ( ! IS_DIGIT ( d , c ) )"		8922271	2					
ANR	8922500	Condition	"! IS_DIGIT ( d , c )"	76:12:2460:2474	8922271	0	True				
ANR	8922501	UnaryOperationExpression	"! IS_DIGIT ( d , c )"		8922271	0					
ANR	8922502	UnaryOperator	!		8922271	0					
ANR	8922503	CallExpression	"IS_DIGIT ( d , c )"		8922271	1					
ANR	8922504	Callee	IS_DIGIT		8922271	0					
ANR	8922505	Identifier	IS_DIGIT		8922271	0					
ANR	8922506	ArgumentList	d		8922271	1					
ANR	8922507	Argument	d		8922271	0					
ANR	8922508	Identifier	d		8922271	0					
ANR	8922509	Argument	c		8922271	1					
ANR	8922510	Identifier	c		8922271	0					
ANR	8922511	ExpressionStatement	return_error ( gs_error_syntaxerror )	77:12:2489:2523	8922271	1	True				
ANR	8922512	CallExpression	return_error ( gs_error_syntaxerror )		8922271	0					
ANR	8922513	Callee	return_error		8922271	0					
ANR	8922514	Identifier	return_error		8922271	0					
ANR	8922515	ArgumentList	gs_error_syntaxerror		8922271	1					
ANR	8922516	Argument	gs_error_syntaxerror		8922271	0					
ANR	8922517	Identifier	gs_error_syntaxerror		8922271	0					
ANR	8922518	ExpressionStatement	ival = 0	78:8:2533:2541	8922271	3	True				
ANR	8922519	AssignmentExpression	ival = 0		8922271	0		=			
ANR	8922520	Identifier	ival		8922271	0					
ANR	8922521	PrimaryExpression	0		8922271	1					
ANR	8922522	GotoStatement	goto i2r ;	79:8:2551:2559	8922271	4	True				
ANR	8922523	Identifier	i2r		8922271	0					
ANR	8922524	ExpressionStatement	ival = d	85:4:2767:2775	8922271	90	True				
ANR	8922525	AssignmentExpression	ival = d		8922271	0		=			
ANR	8922526	Identifier	ival		8922271	0					
ANR	8922527	Identifier	d		8922271	1					
ANR	8922528	IfStatement	if ( end - sp >= 3 )		8922271	91					
ANR	8922529	Condition	end - sp >= 3	86:8:2785:2797	8922271	0	True				
ANR	8922530	RelationalExpression	end - sp >= 3		8922271	0		>=			
ANR	8922531	AdditiveExpression	end - sp		8922271	0		-			
ANR	8922532	Identifier	end		8922271	0					
ANR	8922533	Identifier	sp		8922271	1					
ANR	8922534	PrimaryExpression	3		8922271	1					
ANR	8922535	CompoundStatement		47:23:1483:1483	8922271	1					
ANR	8922536	IfStatement	"if ( ! IS_DIGIT ( d , ( c = * sp ) ) )"		8922271	0					
ANR	8922537	Condition	"! IS_DIGIT ( d , ( c = * sp ) )"	87:12:2836:2858	8922271	0	True				
ANR	8922538	UnaryOperationExpression	"! IS_DIGIT ( d , ( c = * sp ) )"		8922271	0					
ANR	8922539	UnaryOperator	!		8922271	0					
ANR	8922540	CallExpression	"IS_DIGIT ( d , ( c = * sp ) )"		8922271	1					
ANR	8922541	Callee	IS_DIGIT		8922271	0					
ANR	8922542	Identifier	IS_DIGIT		8922271	0					
ANR	8922543	ArgumentList	d		8922271	1					
ANR	8922544	Argument	d		8922271	0					
ANR	8922545	Identifier	d		8922271	0					
ANR	8922546	Argument	c = * sp		8922271	1					
ANR	8922547	AssignmentExpression	c = * sp		8922271	0		=			
ANR	8922548	Identifier	c		8922271	0					
ANR	8922549	UnaryOperationExpression	* sp		8922271	1					
ANR	8922550	UnaryOperator	*		8922271	0					
ANR	8922551	Identifier	sp		8922271	1					
ANR	8922552	CompoundStatement		48:37:1544:1544	8922271	1					
ANR	8922553	ExpressionStatement	sp ++	88:12:2875:2879	8922271	0	True				
ANR	8922554	PostIncDecOperationExpression	sp ++		8922271	0					
ANR	8922555	Identifier	sp		8922271	0					
ANR	8922556	IncDec	++		8922271	1					
ANR	8922557	GotoStatement	goto ind ;	89:12:2893:2901	8922271	1	True				
ANR	8922558	Identifier	ind		8922271	0					
ANR	8922559	ExpressionStatement	ival = ival * 10 + d	91:8:2921:2941	8922271	1	True				
ANR	8922560	AssignmentExpression	ival = ival * 10 + d		8922271	0		=			
ANR	8922561	Identifier	ival		8922271	0					
ANR	8922562	AdditiveExpression	ival * 10 + d		8922271	1		+			
ANR	8922563	MultiplicativeExpression	ival * 10		8922271	0		*			
ANR	8922564	Identifier	ival		8922271	0					
ANR	8922565	PrimaryExpression	10		8922271	1					
ANR	8922566	Identifier	d		8922271	1					
ANR	8922567	IfStatement	"if ( ! IS_DIGIT ( d , ( c = sp [ 1 ] ) ) )"		8922271	2					
ANR	8922568	Condition	"! IS_DIGIT ( d , ( c = sp [ 1 ] ) )"	92:12:2955:2979	8922271	0	True				
ANR	8922569	UnaryOperationExpression	"! IS_DIGIT ( d , ( c = sp [ 1 ] ) )"		8922271	0					
ANR	8922570	UnaryOperator	!		8922271	0					
ANR	8922571	CallExpression	"IS_DIGIT ( d , ( c = sp [ 1 ] ) )"		8922271	1					
ANR	8922572	Callee	IS_DIGIT		8922271	0					
ANR	8922573	Identifier	IS_DIGIT		8922271	0					
ANR	8922574	ArgumentList	d		8922271	1					
ANR	8922575	Argument	d		8922271	0					
ANR	8922576	Identifier	d		8922271	0					
ANR	8922577	Argument	c = sp [ 1 ]		8922271	1					
ANR	8922578	AssignmentExpression	c = sp [ 1 ]		8922271	0		=			
ANR	8922579	Identifier	c		8922271	0					
ANR	8922580	ArrayIndexing	sp [ 1 ]		8922271	1					
ANR	8922581	Identifier	sp		8922271	0					
ANR	8922582	PrimaryExpression	1		8922271	1					
ANR	8922583	CompoundStatement		53:39:1665:1665	8922271	1					
ANR	8922584	ExpressionStatement	sp += 2	93:12:2996:3003	8922271	0	True				
ANR	8922585	AssignmentExpression	sp += 2		8922271	0		+=			
ANR	8922586	Identifier	sp		8922271	0					
ANR	8922587	PrimaryExpression	2		8922271	1					
ANR	8922588	GotoStatement	goto ind ;	94:12:3017:3025	8922271	1	True				
ANR	8922589	Identifier	ind		8922271	0					
ANR	8922590	ExpressionStatement	ival = ival * 10 + d	96:8:3045:3065	8922271	3	True				
ANR	8922591	AssignmentExpression	ival = ival * 10 + d		8922271	0		=			
ANR	8922592	Identifier	ival		8922271	0					
ANR	8922593	AdditiveExpression	ival * 10 + d		8922271	1		+			
ANR	8922594	MultiplicativeExpression	ival * 10		8922271	0		*			
ANR	8922595	Identifier	ival		8922271	0					
ANR	8922596	PrimaryExpression	10		8922271	1					
ANR	8922597	Identifier	d		8922271	1					
ANR	8922598	ExpressionStatement	sp += 3	97:8:3075:3082	8922271	4	True				
ANR	8922599	AssignmentExpression	sp += 3		8922271	0		+=			
ANR	8922600	Identifier	sp		8922271	0					
ANR	8922601	PrimaryExpression	3		8922271	1					
ANR	8922602	IfStatement	"if ( ! IS_DIGIT ( d , ( c = sp [ - 1 ] ) ) )"		8922271	5					
ANR	8922603	Condition	"! IS_DIGIT ( d , ( c = sp [ - 1 ] ) )"	98:12:3096:3121	8922271	0	True				
ANR	8922604	UnaryOperationExpression	"! IS_DIGIT ( d , ( c = sp [ - 1 ] ) )"		8922271	0					
ANR	8922605	UnaryOperator	!		8922271	0					
ANR	8922606	CallExpression	"IS_DIGIT ( d , ( c = sp [ - 1 ] ) )"		8922271	1					
ANR	8922607	Callee	IS_DIGIT		8922271	0					
ANR	8922608	Identifier	IS_DIGIT		8922271	0					
ANR	8922609	ArgumentList	d		8922271	1					
ANR	8922610	Argument	d		8922271	0					
ANR	8922611	Identifier	d		8922271	0					
ANR	8922612	Argument	c = sp [ - 1 ]		8922271	1					
ANR	8922613	AssignmentExpression	c = sp [ - 1 ]		8922271	0		=			
ANR	8922614	Identifier	c		8922271	0					
ANR	8922615	ArrayIndexing	sp [ - 1 ]		8922271	1					
ANR	8922616	Identifier	sp		8922271	0					
ANR	8922617	UnaryOperationExpression	- 1		8922271	1					
ANR	8922618	UnaryOperator	-		8922271	0					
ANR	8922619	PrimaryExpression	1		8922271	1					
ANR	8922620	GotoStatement	goto ind ;	99:12:3136:3144	8922271	1	True				
ANR	8922621	Identifier	ind		8922271	0					
ANR	8922622	ExpressionStatement	ival = ival * 10 + d	100:8:3154:3174	8922271	6	True				
ANR	8922623	AssignmentExpression	ival = ival * 10 + d		8922271	0		=			
ANR	8922624	Identifier	ival		8922271	0					
ANR	8922625	AdditiveExpression	ival * 10 + d		8922271	1		+			
ANR	8922626	MultiplicativeExpression	ival * 10		8922271	0		*			
ANR	8922627	Identifier	ival		8922271	0					
ANR	8922628	PrimaryExpression	10		8922271	1					
ANR	8922629	Identifier	d		8922271	1					
ANR	8922630	ExpressionStatement	max_ps_int_scan = scanner_options & SCAN_CPSI_MODE ? MAX_PS_INT32 : MAX_PS_INT	103:4:3187:3265	8922271	92	True				
ANR	8922631	AssignmentExpression	max_ps_int_scan = scanner_options & SCAN_CPSI_MODE ? MAX_PS_INT32 : MAX_PS_INT		8922271	0		=			
ANR	8922632	Identifier	max_ps_int_scan		8922271	0					
ANR	8922633	ConditionalExpression	scanner_options & SCAN_CPSI_MODE ? MAX_PS_INT32 : MAX_PS_INT		8922271	1					
ANR	8922634	Condition	scanner_options & SCAN_CPSI_MODE		8922271	0					
ANR	8922635	BitAndExpression	scanner_options & SCAN_CPSI_MODE		8922271	0		&			
ANR	8922636	Identifier	scanner_options		8922271	0					
ANR	8922637	Identifier	SCAN_CPSI_MODE		8922271	1					
ANR	8922638	Identifier	MAX_PS_INT32		8922271	1					
ANR	8922639	Identifier	MAX_PS_INT		8922271	2					
ANR	8922640	ExpressionStatement	min_ps_int_scan = scanner_options & SCAN_CPSI_MODE ? MIN_PS_INT32 : MIN_PS_INT	104:4:3271:3349	8922271	93	True				
ANR	8922641	AssignmentExpression	min_ps_int_scan = scanner_options & SCAN_CPSI_MODE ? MIN_PS_INT32 : MIN_PS_INT		8922271	0		=			
ANR	8922642	Identifier	min_ps_int_scan		8922271	0					
ANR	8922643	ConditionalExpression	scanner_options & SCAN_CPSI_MODE ? MIN_PS_INT32 : MIN_PS_INT		8922271	1					
ANR	8922644	Condition	scanner_options & SCAN_CPSI_MODE		8922271	0					
ANR	8922645	BitAndExpression	scanner_options & SCAN_CPSI_MODE		8922271	0		&			
ANR	8922646	Identifier	scanner_options		8922271	0					
ANR	8922647	Identifier	SCAN_CPSI_MODE		8922271	1					
ANR	8922648	Identifier	MIN_PS_INT32		8922271	1					
ANR	8922649	Identifier	MIN_PS_INT		8922271	2					
ANR	8922650	ExpressionStatement	max_scan = scanner_options & SCAN_PDF_UNSIGNED && sign >= 0 ? ~ ( ( ps_int ) 0 ) : max_ps_int_scan	106:4:3356:3448	8922271	94	True				
ANR	8922651	AssignmentExpression	max_scan = scanner_options & SCAN_PDF_UNSIGNED && sign >= 0 ? ~ ( ( ps_int ) 0 ) : max_ps_int_scan		8922271	0		=			
ANR	8922652	Identifier	max_scan		8922271	0					
ANR	8922653	ConditionalExpression	scanner_options & SCAN_PDF_UNSIGNED && sign >= 0 ? ~ ( ( ps_int ) 0 ) : max_ps_int_scan		8922271	1					
ANR	8922654	Condition	scanner_options & SCAN_PDF_UNSIGNED && sign >= 0		8922271	0					
ANR	8922655	AndExpression	scanner_options & SCAN_PDF_UNSIGNED && sign >= 0		8922271	0		&&			
ANR	8922656	BitAndExpression	scanner_options & SCAN_PDF_UNSIGNED		8922271	0		&			
ANR	8922657	Identifier	scanner_options		8922271	0					
ANR	8922658	Identifier	SCAN_PDF_UNSIGNED		8922271	1					
ANR	8922659	RelationalExpression	sign >= 0		8922271	1		>=			
ANR	8922660	Identifier	sign		8922271	0					
ANR	8922661	PrimaryExpression	0		8922271	1					
ANR	8922662	UnaryOperationExpression	~ ( ( ps_int ) 0 )		8922271	1					
ANR	8922663	UnaryOperator	~		8922271	0					
ANR	8922664	CastExpression	( ps_int ) 0		8922271	1					
ANR	8922665	CastTarget	ps_int		8922271	0					
ANR	8922666	PrimaryExpression	0		8922271	1					
ANR	8922667	Identifier	max_ps_int_scan		8922271	2					
ANR	8922668	ForStatement	for ( ; ; ival = ival * 10 + d )		8922271	95					
ANR	8922669	AssignmentExpression	ival = ival * 10 + d	108:12:3463:3482	8922271	0	True	=			
ANR	8922670	Identifier	ival		8922271	0					
ANR	8922671	AdditiveExpression	ival * 10 + d		8922271	1		+			
ANR	8922672	MultiplicativeExpression	ival * 10		8922271	0		*			
ANR	8922673	Identifier	ival		8922271	0					
ANR	8922674	PrimaryExpression	10		8922271	1					
ANR	8922675	Identifier	d		8922271	1					
ANR	8922676	CompoundStatement		69:34:2168:2168	8922271	1					
ANR	8922677	Statement	GET_NEXT	109:8:3495:3502	8922271	0	True				
ANR	8922678	Statement	(	109:16:3503:3503	8922271	1	True				
ANR	8922679	Statement	c	109:17:3504:3504	8922271	2	True				
ANR	8922680	Statement	","	109:18:3505:3505	8922271	3	True				
ANR	8922681	Statement	sp	109:20:3507:3508	8922271	4	True				
ANR	8922682	Statement	","	109:22:3509:3509	8922271	5	True				
ANR	8922683	Statement	goto	109:24:3511:3514	8922271	6	True				
ANR	8922684	Statement	iret	109:29:3516:3519	8922271	7	True				
ANR	8922685	Statement	)	109:33:3520:3520	8922271	8	True				
ANR	8922686	ExpressionStatement		109:34:3521:3521	8922271	9	True				
ANR	8922687	IfStatement	"if ( ! IS_DIGIT ( d , c ) )"		8922271	10					
ANR	8922688	Condition	"! IS_DIGIT ( d , c )"	110:12:3535:3549	8922271	0	True				
ANR	8922689	UnaryOperationExpression	"! IS_DIGIT ( d , c )"		8922271	0					
ANR	8922690	UnaryOperator	!		8922271	0					
ANR	8922691	CallExpression	"IS_DIGIT ( d , c )"		8922271	1					
ANR	8922692	Callee	IS_DIGIT		8922271	0					
ANR	8922693	Identifier	IS_DIGIT		8922271	0					
ANR	8922694	ArgumentList	d		8922271	1					
ANR	8922695	Argument	d		8922271	0					
ANR	8922696	Identifier	d		8922271	0					
ANR	8922697	Argument	c		8922271	1					
ANR	8922698	Identifier	c		8922271	0					
ANR	8922699	BreakStatement	break ;	111:12:3564:3569	8922271	1	True				
ANR	8922700	IfStatement	"if ( WOULD_OVERFLOW ( ( ( ps_uint ) ival ) , d , max_scan ) )"		8922271	11					
ANR	8922701	Condition	"WOULD_OVERFLOW ( ( ( ps_uint ) ival ) , d , max_scan )"	112:12:3583:3626	8922271	0	True				
ANR	8922702	CallExpression	"WOULD_OVERFLOW ( ( ( ps_uint ) ival ) , d , max_scan )"		8922271	0					
ANR	8922703	Callee	WOULD_OVERFLOW		8922271	0					
ANR	8922704	Identifier	WOULD_OVERFLOW		8922271	0					
ANR	8922705	ArgumentList	( ps_uint ) ival		8922271	1					
ANR	8922706	Argument	( ps_uint ) ival		8922271	0					
ANR	8922707	CastExpression	( ps_uint ) ival		8922271	0					
ANR	8922708	CastTarget	ps_uint		8922271	0					
ANR	8922709	Identifier	ival		8922271	1					
ANR	8922710	Argument	d		8922271	1					
ANR	8922711	Identifier	d		8922271	0					
ANR	8922712	Argument	max_scan		8922271	2					
ANR	8922713	Identifier	max_scan		8922271	0					
ANR	8922714	CompoundStatement		73:58:2312:2312	8922271	1					
ANR	8922715	IfStatement	if ( ival == max_ps_int_scan / 10 && d == ( max_ps_int_scan % 10 ) + 1 && sign < 0 )		8922271	0					
ANR	8922716	Condition	ival == max_ps_int_scan / 10 && d == ( max_ps_int_scan % 10 ) + 1 && sign < 0	113:16:3647:3721	8922271	0	True				
ANR	8922717	AndExpression	ival == max_ps_int_scan / 10 && d == ( max_ps_int_scan % 10 ) + 1 && sign < 0		8922271	0		&&			
ANR	8922718	EqualityExpression	ival == max_ps_int_scan / 10		8922271	0		==			
ANR	8922719	Identifier	ival		8922271	0					
ANR	8922720	MultiplicativeExpression	max_ps_int_scan / 10		8922271	1		/			
ANR	8922721	Identifier	max_ps_int_scan		8922271	0					
ANR	8922722	PrimaryExpression	10		8922271	1					
ANR	8922723	AndExpression	d == ( max_ps_int_scan % 10 ) + 1 && sign < 0		8922271	1		&&			
ANR	8922724	EqualityExpression	d == ( max_ps_int_scan % 10 ) + 1		8922271	0		==			
ANR	8922725	Identifier	d		8922271	0					
ANR	8922726	AdditiveExpression	( max_ps_int_scan % 10 ) + 1		8922271	1		+			
ANR	8922727	MultiplicativeExpression	max_ps_int_scan % 10		8922271	0		%			
ANR	8922728	Identifier	max_ps_int_scan		8922271	0					
ANR	8922729	PrimaryExpression	10		8922271	1					
ANR	8922730	PrimaryExpression	1		8922271	1					
ANR	8922731	RelationalExpression	sign < 0		8922271	1		<			
ANR	8922732	Identifier	sign		8922271	0					
ANR	8922733	PrimaryExpression	0		8922271	1					
ANR	8922734	CompoundStatement		74:93:2407:2407	8922271	1					
ANR	8922735	ExpressionStatement	"GET_NEXT ( c , sp , c = EOFC )"	114:16:3742:3767	8922271	0	True				
ANR	8922736	CallExpression	"GET_NEXT ( c , sp , c = EOFC )"		8922271	0					
ANR	8922737	Callee	GET_NEXT		8922271	0					
ANR	8922738	Identifier	GET_NEXT		8922271	0					
ANR	8922739	ArgumentList	c		8922271	1					
ANR	8922740	Argument	c		8922271	0					
ANR	8922741	Identifier	c		8922271	0					
ANR	8922742	Argument	sp		8922271	1					
ANR	8922743	Identifier	sp		8922271	0					
ANR	8922744	Argument	c = EOFC		8922271	2					
ANR	8922745	AssignmentExpression	c = EOFC		8922271	0		=			
ANR	8922746	Identifier	c		8922271	0					
ANR	8922747	Identifier	EOFC		8922271	1					
ANR	8922748	ExpressionStatement	dval = - ( double ) min_ps_int_scan	115:16:3785:3816	8922271	1	True				
ANR	8922749	AssignmentExpression	dval = - ( double ) min_ps_int_scan		8922271	0		=			
ANR	8922750	Identifier	dval		8922271	0					
ANR	8922751	UnaryOperationExpression	- ( double ) min_ps_int_scan		8922271	1					
ANR	8922752	UnaryOperator	-		8922271	0					
ANR	8922753	CastExpression	( double ) min_ps_int_scan		8922271	1					
ANR	8922754	CastTarget	double		8922271	0					
ANR	8922755	Identifier	min_ps_int_scan		8922271	1					
ANR	8922756	IfStatement	if ( c == 'e' || c == 'E' )		8922271	2					
ANR	8922757	Condition	c == 'e' || c == 'E'	116:20:3838:3857	8922271	0	True				
ANR	8922758	OrExpression	c == 'e' || c == 'E'		8922271	0		||			
ANR	8922759	EqualityExpression	c == 'e'		8922271	0		==			
ANR	8922760	Identifier	c		8922271	0					
ANR	8922761	PrimaryExpression	'e'		8922271	1					
ANR	8922762	EqualityExpression	c == 'E'		8922271	1		==			
ANR	8922763	Identifier	c		8922271	0					
ANR	8922764	PrimaryExpression	'E'		8922271	1					
ANR	8922765	CompoundStatement		77:42:2543:2543	8922271	1					
ANR	8922766	ExpressionStatement	exp10 = 0	117:20:3882:3891	8922271	0	True				
ANR	8922767	AssignmentExpression	exp10 = 0		8922271	0		=			
ANR	8922768	Identifier	exp10		8922271	0					
ANR	8922769	PrimaryExpression	0		8922271	1					
ANR	8922770	GotoStatement	goto fs ;	118:20:3913:3920	8922271	1	True				
ANR	8922771	Identifier	fs		8922271	0					
ANR	8922772	ElseStatement	else		8922271	0					
ANR	8922773	IfStatement	if ( c == '.' )		8922271	0					
ANR	8922774	Condition	c == '.'	119:27:3949:3956	8922271	0	True				
ANR	8922775	EqualityExpression	c == '.'		8922271	0		==			
ANR	8922776	Identifier	c		8922271	0					
ANR	8922777	PrimaryExpression	'.'		8922271	1					
ANR	8922778	CompoundStatement		80:37:2642:2642	8922271	1					
ANR	8922779	ExpressionStatement	"GET_NEXT ( c , sp , c = EOFC )"	120:20:3981:4006	8922271	0	True				
ANR	8922780	CallExpression	"GET_NEXT ( c , sp , c = EOFC )"		8922271	0					
ANR	8922781	Callee	GET_NEXT		8922271	0					
ANR	8922782	Identifier	GET_NEXT		8922271	0					
ANR	8922783	ArgumentList	c		8922271	1					
ANR	8922784	Argument	c		8922271	0					
ANR	8922785	Identifier	c		8922271	0					
ANR	8922786	Argument	sp		8922271	1					
ANR	8922787	Identifier	sp		8922271	0					
ANR	8922788	Argument	c = EOFC		8922271	2					
ANR	8922789	AssignmentExpression	c = EOFC		8922271	0		=			
ANR	8922790	Identifier	c		8922271	0					
ANR	8922791	Identifier	EOFC		8922271	1					
ANR	8922792	ExpressionStatement	exp10 = 0	121:20:4028:4037	8922271	1	True				
ANR	8922793	AssignmentExpression	exp10 = 0		8922271	0		=			
ANR	8922794	Identifier	exp10		8922271	0					
ANR	8922795	PrimaryExpression	0		8922271	1					
ANR	8922796	GotoStatement	goto fd ;	122:20:4059:4066	8922271	2	True				
ANR	8922797	Identifier	fd		8922271	0					
ANR	8922798	ElseStatement	else		8922271	0					
ANR	8922799	IfStatement	"if ( ! IS_DIGIT ( d , c ) )"		8922271	0					
ANR	8922800	Condition	"! IS_DIGIT ( d , c )"	123:27:4095:4109	8922271	0	True				
ANR	8922801	UnaryOperationExpression	"! IS_DIGIT ( d , c )"		8922271	0					
ANR	8922802	UnaryOperator	!		8922271	0					
ANR	8922803	CallExpression	"IS_DIGIT ( d , c )"		8922271	1					
ANR	8922804	Callee	IS_DIGIT		8922271	0					
ANR	8922805	Identifier	IS_DIGIT		8922271	0					
ANR	8922806	ArgumentList	d		8922271	1					
ANR	8922807	Argument	d		8922271	0					
ANR	8922808	Identifier	d		8922271	0					
ANR	8922809	Argument	c		8922271	1					
ANR	8922810	Identifier	c		8922271	0					
ANR	8922811	CompoundStatement		84:44:2795:2795	8922271	1					
ANR	8922812	ExpressionStatement	ival = min_ps_int_scan	124:20:4134:4156	8922271	0	True				
ANR	8922813	AssignmentExpression	ival = min_ps_int_scan		8922271	0		=			
ANR	8922814	Identifier	ival		8922271	0					
ANR	8922815	Identifier	min_ps_int_scan		8922271	1					
ANR	8922816	BreakStatement	break ;	125:20:4178:4183	8922271	1	True				
ANR	8922817	ElseStatement	else		8922271	0					
ANR	8922818	ExpressionStatement	dval = ( double ) ival	128:16:4238:4257	8922271	0	True				
ANR	8922819	AssignmentExpression	dval = ( double ) ival		8922271	0		=			
ANR	8922820	Identifier	dval		8922271	0					
ANR	8922821	CastExpression	( double ) ival		8922271	1					
ANR	8922822	CastTarget	double		8922271	0					
ANR	8922823	Identifier	ival		8922271	1					
ANR	8922824	GotoStatement	goto l2d ;	129:12:4271:4279	8922271	1	True				
ANR	8922825	Identifier	l2d		8922271	0					
ANR	8922826	Label	ind :	132:2:4299:4302	8922271	96	True				
ANR	8922827	Identifier	ind		8922271	0					
ANR	8922828	SwitchStatement	switch ( c )		8922271	97					
ANR	8922829	Condition	c	133:12:4383:4383	8922271	0	True				
ANR	8922830	Identifier	c		8922271	0					
ANR	8922831	CompoundStatement		94:15:3069:3069	8922271	1					
ANR	8922832	Label	case '.' :	134:8:4396:4404	8922271	0	True				
ANR	8922833	ExpressionStatement	"GET_NEXT ( c , sp , c = EOFC )"	135:12:4418:4443	8922271	1	True				
ANR	8922834	CallExpression	"GET_NEXT ( c , sp , c = EOFC )"		8922271	0					
ANR	8922835	Callee	GET_NEXT		8922271	0					
ANR	8922836	Identifier	GET_NEXT		8922271	0					
ANR	8922837	ArgumentList	c		8922271	1					
ANR	8922838	Argument	c		8922271	0					
ANR	8922839	Identifier	c		8922271	0					
ANR	8922840	Argument	sp		8922271	1					
ANR	8922841	Identifier	sp		8922271	0					
ANR	8922842	Argument	c = EOFC		8922271	2					
ANR	8922843	AssignmentExpression	c = EOFC		8922271	0		=			
ANR	8922844	Identifier	c		8922271	0					
ANR	8922845	Identifier	EOFC		8922271	1					
ANR	8922846	GotoStatement	goto i2r ;	136:12:4457:4465	8922271	2	True				
ANR	8922847	Identifier	i2r		8922271	0					
ANR	8922848	Label	default :	137:8:4475:4482	8922271	3	True				
ANR	8922849	Identifier	default		8922271	0					
ANR	8922850	ExpressionStatement	* psp = sp	138:12:4496:4505	8922271	4	True				
ANR	8922851	AssignmentExpression	* psp = sp		8922271	0		=			
ANR	8922852	UnaryOperationExpression	* psp		8922271	0					
ANR	8922853	UnaryOperator	*		8922271	0					
ANR	8922854	Identifier	psp		8922271	1					
ANR	8922855	Identifier	sp		8922271	1					
ANR	8922856	ExpressionStatement	code = 1	139:12:4519:4527	8922271	5	True				
ANR	8922857	AssignmentExpression	code = 1		8922271	0		=			
ANR	8922858	Identifier	code		8922271	0					
ANR	8922859	PrimaryExpression	1		8922271	1					
ANR	8922860	BreakStatement	break ;	140:12:4541:4546	8922271	6	True				
ANR	8922861	Label	case EOFC :	141:8:4556:4565	8922271	7	True				
ANR	8922862	Identifier	EOFC		8922271	0					
ANR	8922863	BreakStatement	break ;	142:12:4579:4584	8922271	8	True				
ANR	8922864	Label	case 'e' :	143:8:4594:4602	8922271	9	True				
ANR	8922865	Label	case 'E' :	144:8:4612:4620	8922271	10	True				
ANR	8922866	IfStatement	if ( sign < 0 )		8922271	11					
ANR	8922867	Condition	sign < 0	145:16:4638:4645	8922271	0	True				
ANR	8922868	RelationalExpression	sign < 0		8922271	0		<			
ANR	8922869	Identifier	sign		8922271	0					
ANR	8922870	PrimaryExpression	0		8922271	1					
ANR	8922871	ExpressionStatement	ival = - ival	146:16:4664:4676	8922271	1	True				
ANR	8922872	AssignmentExpression	ival = - ival		8922271	0		=			
ANR	8922873	Identifier	ival		8922271	0					
ANR	8922874	UnaryOperationExpression	- ival		8922271	1					
ANR	8922875	UnaryOperator	-		8922271	0					
ANR	8922876	Identifier	ival		8922271	1					
ANR	8922877	ExpressionStatement	dval = ( double ) ival	147:12:4690:4709	8922271	12	True				
ANR	8922878	AssignmentExpression	dval = ( double ) ival		8922271	0		=			
ANR	8922879	Identifier	dval		8922271	0					
ANR	8922880	CastExpression	( double ) ival		8922271	1					
ANR	8922881	CastTarget	double		8922271	0					
ANR	8922882	Identifier	ival		8922271	1					
ANR	8922883	ExpressionStatement	exp10 = 0	148:12:4723:4732	8922271	13	True				
ANR	8922884	AssignmentExpression	exp10 = 0		8922271	0		=			
ANR	8922885	Identifier	exp10		8922271	0					
ANR	8922886	PrimaryExpression	0		8922271	1					
ANR	8922887	GotoStatement	goto fe ;	149:12:4746:4753	8922271	14	True				
ANR	8922888	Identifier	fe		8922271	0					
ANR	8922889	Label	case '#' :	150:8:4763:4771	8922271	15	True				
ANR	8922890	CompoundStatement		114:16:3526:3547	8922271	16					
ANR	8922891	IdentifierDeclStatement	const int radix = ival ;	152:16:4803:4825	8922271	0	True				
ANR	8922892	IdentifierDecl	radix = ival		8922271	0					
ANR	8922893	IdentifierDeclType	const int		8922271	0					
ANR	8922894	Identifier	radix		8922271	1					
ANR	8922895	AssignmentExpression	radix = ival		8922271	2		=			
ANR	8922896	Identifier	ival		8922271	0					
ANR	8922897	Identifier	ival		8922271	1					
ANR	8922898	IdentifierDeclStatement	"ps_int uval = 0 , imax ;"	153:16:4843:4864	8922271	1	True				
ANR	8922899	IdentifierDecl	uval = 0		8922271	0					
ANR	8922900	IdentifierDeclType	ps_int		8922271	0					
ANR	8922901	Identifier	uval		8922271	1					
ANR	8922902	AssignmentExpression	uval = 0		8922271	2		=			
ANR	8922903	Identifier	uval		8922271	0					
ANR	8922904	PrimaryExpression	0		8922271	1					
ANR	8922905	IdentifierDecl	imax		8922271	1					
ANR	8922906	IdentifierDeclType	ps_int		8922271	0					
ANR	8922907	Identifier	imax		8922271	1					
ANR	8922908	IfStatement	if ( sign || radix < min_radix || radix > max_radix )		8922271	2					
ANR	8922909	Condition	sign || radix < min_radix || radix > max_radix	155:20:4887:4932	8922271	0	True				
ANR	8922910	OrExpression	sign || radix < min_radix || radix > max_radix		8922271	0		||			
ANR	8922911	Identifier	sign		8922271	0					
ANR	8922912	OrExpression	radix < min_radix || radix > max_radix		8922271	1		||			
ANR	8922913	RelationalExpression	radix < min_radix		8922271	0		<			
ANR	8922914	Identifier	radix		8922271	0					
ANR	8922915	Identifier	min_radix		8922271	1					
ANR	8922916	RelationalExpression	radix > max_radix		8922271	1		>			
ANR	8922917	Identifier	radix		8922271	0					
ANR	8922918	Identifier	max_radix		8922271	1					
ANR	8922919	ExpressionStatement	return_error ( gs_error_syntaxerror )	156:20:4955:4989	8922271	1	True				
ANR	8922920	CallExpression	return_error ( gs_error_syntaxerror )		8922271	0					
ANR	8922921	Callee	return_error		8922271	0					
ANR	8922922	Identifier	return_error		8922271	0					
ANR	8922923	ArgumentList	gs_error_syntaxerror		8922271	1					
ANR	8922924	Argument	gs_error_syntaxerror		8922271	0					
ANR	8922925	Identifier	gs_error_syntaxerror		8922271	0					
ANR	8922926	IfStatement	if ( ! ( radix & ( radix - 1 ) ) )		8922271	3					
ANR	8922927	Condition	! ( radix & ( radix - 1 ) )	158:20:5072:5093	8922271	0	True				
ANR	8922928	UnaryOperationExpression	! ( radix & ( radix - 1 ) )		8922271	0					
ANR	8922929	UnaryOperator	!		8922271	0					
ANR	8922930	BitAndExpression	radix & ( radix - 1 )		8922271	1		&			
ANR	8922931	Identifier	radix		8922271	0					
ANR	8922932	AdditiveExpression	radix - 1		8922271	1		-			
ANR	8922933	Identifier	radix		8922271	0					
ANR	8922934	PrimaryExpression	1		8922271	1					
ANR	8922935	CompoundStatement		120:20:3801:3810	8922271	1					
ANR	8922936	IdentifierDeclStatement	int shift ;	159:20:5118:5127	8922271	0	True				
ANR	8922937	IdentifierDecl	shift		8922271	0					
ANR	8922938	IdentifierDeclType	int		8922271	0					
ANR	8922939	Identifier	shift		8922271	1					
ANR	8922940	SwitchStatement	switch ( radix )		8922271	1					
ANR	8922941	Condition	radix	161:28:5158:5162	8922271	0	True				
ANR	8922942	Identifier	radix		8922271	0					
ANR	8922943	CompoundStatement		122:35:3848:3848	8922271	1					
ANR	8922944	Label	case 2 :	162:24:5191:5197	8922271	0	True				
ANR	8922945	ExpressionStatement	"shift = 1 , imax = MAX_PS_UINT >> 1"	163:28:5227:5261	8922271	1	True				
ANR	8922946	Expression	"shift = 1 , imax = MAX_PS_UINT >> 1"		8922271	0					
ANR	8922947	AssignmentExpression	shift = 1		8922271	0		=			
ANR	8922948	Identifier	shift		8922271	0					
ANR	8922949	PrimaryExpression	1		8922271	1					
ANR	8922950	AssignmentExpression	imax = MAX_PS_UINT >> 1		8922271	1		=			
ANR	8922951	Identifier	imax		8922271	0					
ANR	8922952	ShiftExpression	MAX_PS_UINT >> 1		8922271	1		>>			
ANR	8922953	Identifier	MAX_PS_UINT		8922271	0					
ANR	8922954	PrimaryExpression	1		8922271	1					
ANR	8922955	BreakStatement	break ;	164:28:5291:5296	8922271	2	True				
ANR	8922956	Label	case 4 :	165:24:5322:5328	8922271	3	True				
ANR	8922957	ExpressionStatement	"shift = 2 , imax = MAX_PS_UINT >> 2"	166:28:5358:5392	8922271	4	True				
ANR	8922958	Expression	"shift = 2 , imax = MAX_PS_UINT >> 2"		8922271	0					
ANR	8922959	AssignmentExpression	shift = 2		8922271	0		=			
ANR	8922960	Identifier	shift		8922271	0					
ANR	8922961	PrimaryExpression	2		8922271	1					
ANR	8922962	AssignmentExpression	imax = MAX_PS_UINT >> 2		8922271	1		=			
ANR	8922963	Identifier	imax		8922271	0					
ANR	8922964	ShiftExpression	MAX_PS_UINT >> 2		8922271	1		>>			
ANR	8922965	Identifier	MAX_PS_UINT		8922271	0					
ANR	8922966	PrimaryExpression	2		8922271	1					
ANR	8922967	BreakStatement	break ;	167:28:5422:5427	8922271	5	True				
ANR	8922968	Label	case 8 :	168:24:5453:5459	8922271	6	True				
ANR	8922969	ExpressionStatement	"shift = 3 , imax = MAX_PS_UINT >> 3"	169:28:5489:5523	8922271	7	True				
ANR	8922970	Expression	"shift = 3 , imax = MAX_PS_UINT >> 3"		8922271	0					
ANR	8922971	AssignmentExpression	shift = 3		8922271	0		=			
ANR	8922972	Identifier	shift		8922271	0					
ANR	8922973	PrimaryExpression	3		8922271	1					
ANR	8922974	AssignmentExpression	imax = MAX_PS_UINT >> 3		8922271	1		=			
ANR	8922975	Identifier	imax		8922271	0					
ANR	8922976	ShiftExpression	MAX_PS_UINT >> 3		8922271	1		>>			
ANR	8922977	Identifier	MAX_PS_UINT		8922271	0					
ANR	8922978	PrimaryExpression	3		8922271	1					
ANR	8922979	BreakStatement	break ;	170:28:5553:5558	8922271	8	True				
ANR	8922980	Label	case 16 :	171:24:5584:5591	8922271	9	True				
ANR	8922981	ExpressionStatement	"shift = 4 , imax = MAX_PS_UINT >> 4"	172:28:5621:5655	8922271	10	True				
ANR	8922982	Expression	"shift = 4 , imax = MAX_PS_UINT >> 4"		8922271	0					
ANR	8922983	AssignmentExpression	shift = 4		8922271	0		=			
ANR	8922984	Identifier	shift		8922271	0					
ANR	8922985	PrimaryExpression	4		8922271	1					
ANR	8922986	AssignmentExpression	imax = MAX_PS_UINT >> 4		8922271	1		=			
ANR	8922987	Identifier	imax		8922271	0					
ANR	8922988	ShiftExpression	MAX_PS_UINT >> 4		8922271	1		>>			
ANR	8922989	Identifier	MAX_PS_UINT		8922271	0					
ANR	8922990	PrimaryExpression	4		8922271	1					
ANR	8922991	BreakStatement	break ;	173:28:5685:5690	8922271	11	True				
ANR	8922992	Label	case 32 :	174:24:5716:5723	8922271	12	True				
ANR	8922993	ExpressionStatement	"shift = 5 , imax = MAX_PS_UINT >> 5"	175:28:5753:5787	8922271	13	True				
ANR	8922994	Expression	"shift = 5 , imax = MAX_PS_UINT >> 5"		8922271	0					
ANR	8922995	AssignmentExpression	shift = 5		8922271	0		=			
ANR	8922996	Identifier	shift		8922271	0					
ANR	8922997	PrimaryExpression	5		8922271	1					
ANR	8922998	AssignmentExpression	imax = MAX_PS_UINT >> 5		8922271	1		=			
ANR	8922999	Identifier	imax		8922271	0					
ANR	8923000	ShiftExpression	MAX_PS_UINT >> 5		8922271	1		>>			
ANR	8923001	Identifier	MAX_PS_UINT		8922271	0					
ANR	8923002	PrimaryExpression	5		8922271	1					
ANR	8923003	BreakStatement	break ;	176:28:5817:5822	8922271	14	True				
ANR	8923004	Label	default :	177:24:5848:5855	8922271	15	True				
ANR	8923005	Identifier	default		8922271	0					
ANR	8923006	ExpressionStatement	return_error ( gs_error_rangecheck )	178:28:5904:5937	8922271	16	True				
ANR	8923007	CallExpression	return_error ( gs_error_rangecheck )		8922271	0					
ANR	8923008	Callee	return_error		8922271	0					
ANR	8923009	Identifier	return_error		8922271	0					
ANR	8923010	ArgumentList	gs_error_rangecheck		8922271	1					
ANR	8923011	Argument	gs_error_rangecheck		8922271	0					
ANR	8923012	Identifier	gs_error_rangecheck		8922271	0					
ANR	8923013	ForStatement	for ( ; ; uval = ( uval << shift ) + d )		8922271	2					
ANR	8923014	AssignmentExpression	uval = ( uval << shift ) + d	180:28:5989:6014	8922271	0	True	=			
ANR	8923015	Identifier	uval		8922271	0					
ANR	8923016	AdditiveExpression	( uval << shift ) + d		8922271	1		+			
ANR	8923017	ShiftExpression	uval << shift		8922271	0		<<			
ANR	8923018	Identifier	uval		8922271	0					
ANR	8923019	Identifier	shift		8922271	1					
ANR	8923020	Identifier	d		8922271	1					
ANR	8923021	CompoundStatement		141:56:4700:4700	8922271	1					
ANR	8923022	Statement	GET_NEXT	181:24:6043:6050	8922271	0	True				
ANR	8923023	Statement	(	181:32:6051:6051	8922271	1	True				
ANR	8923024	Statement	c	181:33:6052:6052	8922271	2	True				
ANR	8923025	Statement	","	181:34:6053:6053	8922271	3	True				
ANR	8923026	Statement	sp	181:36:6055:6056	8922271	4	True				
ANR	8923027	Statement	","	181:38:6057:6057	8922271	5	True				
ANR	8923028	Statement	break	181:40:6059:6063	8922271	6	True				
ANR	8923029	Statement	)	181:45:6064:6064	8922271	7	True				
ANR	8923030	ExpressionStatement		181:46:6065:6065	8922271	8	True				
ANR	8923031	ExpressionStatement	d = decoder [ c ]	182:24:6091:6105	8922271	9	True				
ANR	8923032	AssignmentExpression	d = decoder [ c ]		8922271	0		=			
ANR	8923033	Identifier	d		8922271	0					
ANR	8923034	ArrayIndexing	decoder [ c ]		8922271	1					
ANR	8923035	Identifier	decoder		8922271	0					
ANR	8923036	Identifier	c		8922271	1					
ANR	8923037	IfStatement	if ( d >= radix )		8922271	10					
ANR	8923038	Condition	d >= radix	183:28:6135:6144	8922271	0	True				
ANR	8923039	RelationalExpression	d >= radix		8922271	0		>=			
ANR	8923040	Identifier	d		8922271	0					
ANR	8923041	Identifier	radix		8922271	1					
ANR	8923042	CompoundStatement		144:40:4830:4830	8922271	1					
ANR	8923043	ExpressionStatement	* psp = sp	184:28:6177:6186	8922271	0	True				
ANR	8923044	AssignmentExpression	* psp = sp		8922271	0		=			
ANR	8923045	UnaryOperationExpression	* psp		8922271	0					
ANR	8923046	UnaryOperator	*		8922271	0					
ANR	8923047	Identifier	psp		8922271	1					
ANR	8923048	Identifier	sp		8922271	1					
ANR	8923049	ExpressionStatement	code = 1	185:28:6216:6224	8922271	1	True				
ANR	8923050	AssignmentExpression	code = 1		8922271	0		=			
ANR	8923051	Identifier	code		8922271	0					
ANR	8923052	PrimaryExpression	1		8922271	1					
ANR	8923053	BreakStatement	break ;	186:28:6254:6259	8922271	2	True				
ANR	8923054	IfStatement	if ( uval > imax )		8922271	11					
ANR	8923055	Condition	uval > imax	188:28:6315:6325	8922271	0	True				
ANR	8923056	RelationalExpression	uval > imax		8922271	0		>			
ANR	8923057	Identifier	uval		8922271	0					
ANR	8923058	Identifier	imax		8922271	1					
ANR	8923059	ExpressionStatement	return_error ( gs_error_limitcheck )	189:28:6356:6389	8922271	1	True				
ANR	8923060	CallExpression	return_error ( gs_error_limitcheck )		8922271	0					
ANR	8923061	Callee	return_error		8922271	0					
ANR	8923062	Identifier	return_error		8922271	0					
ANR	8923063	ArgumentList	gs_error_limitcheck		8922271	1					
ANR	8923064	Argument	gs_error_limitcheck		8922271	0					
ANR	8923065	Identifier	gs_error_limitcheck		8922271	0					
ANR	8923066	ElseStatement	else		8922271	0					
ANR	8923067	CompoundStatement		153:20:5141:5174	8922271	0					
ANR	8923068	IdentifierDeclStatement	ps_int irem = MAX_PS_UINT % radix ;	192:20:6458:6491	8922271	0	True				
ANR	8923069	IdentifierDecl	irem = MAX_PS_UINT % radix		8922271	0					
ANR	8923070	IdentifierDeclType	ps_int		8922271	0					
ANR	8923071	Identifier	irem		8922271	1					
ANR	8923072	AssignmentExpression	irem = MAX_PS_UINT % radix		8922271	2		=			
ANR	8923073	Identifier	irem		8922271	0					
ANR	8923074	MultiplicativeExpression	MAX_PS_UINT % radix		8922271	1		%			
ANR	8923075	Identifier	MAX_PS_UINT		8922271	0					
ANR	8923076	Identifier	radix		8922271	1					
ANR	8923077	ExpressionStatement	imax = MAX_PS_UINT / radix	194:20:6514:6540	8922271	1	True				
ANR	8923078	AssignmentExpression	imax = MAX_PS_UINT / radix		8922271	0		=			
ANR	8923079	Identifier	imax		8922271	0					
ANR	8923080	MultiplicativeExpression	MAX_PS_UINT / radix		8922271	1		/			
ANR	8923081	Identifier	MAX_PS_UINT		8922271	0					
ANR	8923082	Identifier	radix		8922271	1					
ANR	8923083	ForStatement	for ( ; ; uval = uval * radix + d )		8922271	2					
ANR	8923084	AssignmentExpression	uval = uval * radix + d	195:28:6570:6592	8922271	0	True	=			
ANR	8923085	Identifier	uval		8922271	0					
ANR	8923086	AdditiveExpression	uval * radix + d		8922271	1		+			
ANR	8923087	MultiplicativeExpression	uval * radix		8922271	0		*			
ANR	8923088	Identifier	uval		8922271	0					
ANR	8923089	Identifier	radix		8922271	1					
ANR	8923090	Identifier	d		8922271	1					
ANR	8923091	CompoundStatement		156:53:5278:5278	8922271	1					
ANR	8923092	Statement	GET_NEXT	196:24:6621:6628	8922271	0	True				
ANR	8923093	Statement	(	196:32:6629:6629	8922271	1	True				
ANR	8923094	Statement	c	196:33:6630:6630	8922271	2	True				
ANR	8923095	Statement	","	196:34:6631:6631	8922271	3	True				
ANR	8923096	Statement	sp	196:36:6633:6634	8922271	4	True				
ANR	8923097	Statement	","	196:38:6635:6635	8922271	5	True				
ANR	8923098	Statement	break	196:40:6637:6641	8922271	6	True				
ANR	8923099	Statement	)	196:45:6642:6642	8922271	7	True				
ANR	8923100	ExpressionStatement		196:46:6643:6643	8922271	8	True				
ANR	8923101	ExpressionStatement	d = decoder [ c ]	197:24:6669:6683	8922271	9	True				
ANR	8923102	AssignmentExpression	d = decoder [ c ]		8922271	0		=			
ANR	8923103	Identifier	d		8922271	0					
ANR	8923104	ArrayIndexing	decoder [ c ]		8922271	1					
ANR	8923105	Identifier	decoder		8922271	0					
ANR	8923106	Identifier	c		8922271	1					
ANR	8923107	IfStatement	if ( d >= radix )		8922271	10					
ANR	8923108	Condition	d >= radix	198:28:6713:6722	8922271	0	True				
ANR	8923109	RelationalExpression	d >= radix		8922271	0		>=			
ANR	8923110	Identifier	d		8922271	0					
ANR	8923111	Identifier	radix		8922271	1					
ANR	8923112	CompoundStatement		159:40:5408:5408	8922271	1					
ANR	8923113	ExpressionStatement	* psp = sp	199:28:6755:6764	8922271	0	True				
ANR	8923114	AssignmentExpression	* psp = sp		8922271	0		=			
ANR	8923115	UnaryOperationExpression	* psp		8922271	0					
ANR	8923116	UnaryOperator	*		8922271	0					
ANR	8923117	Identifier	psp		8922271	1					
ANR	8923118	Identifier	sp		8922271	1					
ANR	8923119	ExpressionStatement	code = 1	200:28:6794:6802	8922271	1	True				
ANR	8923120	AssignmentExpression	code = 1		8922271	0		=			
ANR	8923121	Identifier	code		8922271	0					
ANR	8923122	PrimaryExpression	1		8922271	1					
ANR	8923123	BreakStatement	break ;	201:28:6832:6837	8922271	2	True				
ANR	8923124	IfStatement	if ( uval >= imax && ( uval > imax || d > irem ) )		8922271	11					
ANR	8923125	Condition	uval >= imax && ( uval > imax || d > irem )	203:28:6893:6961	8922271	0	True				
ANR	8923126	AndExpression	uval >= imax && ( uval > imax || d > irem )		8922271	0		&&			
ANR	8923127	RelationalExpression	uval >= imax		8922271	0		>=			
ANR	8923128	Identifier	uval		8922271	0					
ANR	8923129	Identifier	imax		8922271	1					
ANR	8923130	OrExpression	uval > imax || d > irem		8922271	1		||			
ANR	8923131	RelationalExpression	uval > imax		8922271	0		>			
ANR	8923132	Identifier	uval		8922271	0					
ANR	8923133	Identifier	imax		8922271	1					
ANR	8923134	RelationalExpression	d > irem		8922271	1		>			
ANR	8923135	Identifier	d		8922271	0					
ANR	8923136	Identifier	irem		8922271	1					
ANR	8923137	ExpressionStatement	return_error ( gs_error_limitcheck )	206:28:7021:7054	8922271	1	True				
ANR	8923138	CallExpression	return_error ( gs_error_limitcheck )		8922271	0					
ANR	8923139	Callee	return_error		8922271	0					
ANR	8923140	Identifier	return_error		8922271	0					
ANR	8923141	ArgumentList	gs_error_limitcheck		8922271	1					
ANR	8923142	Argument	gs_error_limitcheck		8922271	0					
ANR	8923143	Identifier	gs_error_limitcheck		8922271	0					
ANR	8923144	IfStatement	if ( scanner_options & SCAN_CPSI_MODE )		8922271	4					
ANR	8923145	Condition	scanner_options & SCAN_CPSI_MODE	209:20:7116:7147	8922271	0	True				
ANR	8923146	BitAndExpression	scanner_options & SCAN_CPSI_MODE		8922271	0		&			
ANR	8923147	Identifier	scanner_options		8922271	0					
ANR	8923148	Identifier	SCAN_CPSI_MODE		8922271	1					
ANR	8923149	CompoundStatement		171:20:5855:5873	8922271	1					
ANR	8923150	IdentifierDeclStatement	ps_uint32 int1 = 0 ;	210:20:7172:7190	8922271	0	True				
ANR	8923151	IdentifierDecl	int1 = 0		8922271	0					
ANR	8923152	IdentifierDeclType	ps_uint32		8922271	0					
ANR	8923153	Identifier	int1		8922271	1					
ANR	8923154	AssignmentExpression	int1 = 0		8922271	2		=			
ANR	8923155	Identifier	int1		8922271	0					
ANR	8923156	PrimaryExpression	0		8922271	1					
ANR	8923157	ExpressionStatement	int1 |= ( uval & 0xffffffff )	211:20:7212:7239	8922271	1	True				
ANR	8923158	AssignmentExpression	int1 |= ( uval & 0xffffffff )		8922271	0		|=			
ANR	8923159	Identifier	int1		8922271	0					
ANR	8923160	BitAndExpression	uval & 0xffffffff		8922271	1		&			
ANR	8923161	Identifier	uval		8922271	0					
ANR	8923162	PrimaryExpression	0xffffffff		8922271	1					
ANR	8923163	ExpressionStatement	"make_int ( pref , ( ps_int ) ( ( ps_int32 ) int1 ) )"	212:20:7261:7301	8922271	2	True				
ANR	8923164	CallExpression	"make_int ( pref , ( ps_int ) ( ( ps_int32 ) int1 ) )"		8922271	0					
ANR	8923165	Callee	make_int		8922271	0					
ANR	8923166	Identifier	make_int		8922271	0					
ANR	8923167	ArgumentList	pref		8922271	1					
ANR	8923168	Argument	pref		8922271	0					
ANR	8923169	Identifier	pref		8922271	0					
ANR	8923170	Argument	( ps_int ) ( ( ps_int32 ) int1 )		8922271	1					
ANR	8923171	CastExpression	( ps_int ) ( ( ps_int32 ) int1 )		8922271	0					
ANR	8923172	CastTarget	ps_int		8922271	0					
ANR	8923173	CastExpression	( ps_int32 ) int1		8922271	1					
ANR	8923174	CastTarget	ps_int32		8922271	0					
ANR	8923175	Identifier	int1		8922271	1					
ANR	8923176	ElseStatement	else		8922271	0					
ANR	8923177	ExpressionStatement	"make_int ( pref , uval )"	215:20:7362:7382	8922271	0	True				
ANR	8923178	CallExpression	"make_int ( pref , uval )"		8922271	0					
ANR	8923179	Callee	make_int		8922271	0					
ANR	8923180	Identifier	make_int		8922271	0					
ANR	8923181	ArgumentList	pref		8922271	1					
ANR	8923182	Argument	pref		8922271	0					
ANR	8923183	Identifier	pref		8922271	0					
ANR	8923184	Argument	uval		8922271	1					
ANR	8923185	Identifier	uval		8922271	0					
ANR	8923186	ReturnStatement	return code ;	217:16:7401:7412	8922271	5	True				
ANR	8923187	Identifier	code		8922271	0					
ANR	8923188	Label	iret :	220:0:7434:7438	8922271	98	True				
ANR	8923189	Identifier	iret		8922271	0					
ANR	8923190	IfStatement	if ( scanner_options & SCAN_CPSI_MODE )		8922271	99					
ANR	8923191	Condition	scanner_options & SCAN_CPSI_MODE	221:8:7448:7479	8922271	0	True				
ANR	8923192	BitAndExpression	scanner_options & SCAN_CPSI_MODE		8922271	0		&			
ANR	8923193	Identifier	scanner_options		8922271	0					
ANR	8923194	Identifier	SCAN_CPSI_MODE		8922271	1					
ANR	8923195	CompoundStatement		182:42:6165:6165	8922271	1					
ANR	8923196	ExpressionStatement	"make_int ( pref , ( sign < 0 ? ( ps_int32 ) - ival : ( ps_int32 ) ival ) )"	222:8:7492:7553	8922271	0	True				
ANR	8923197	CallExpression	"make_int ( pref , ( sign < 0 ? ( ps_int32 ) - ival : ( ps_int32 ) ival ) )"		8922271	0					
ANR	8923198	Callee	make_int		8922271	0					
ANR	8923199	Identifier	make_int		8922271	0					
ANR	8923200	ArgumentList	pref		8922271	1					
ANR	8923201	Argument	pref		8922271	0					
ANR	8923202	Identifier	pref		8922271	0					
ANR	8923203	Argument	sign < 0 ? ( ps_int32 ) - ival : ( ps_int32 ) ival		8922271	1					
ANR	8923204	ConditionalExpression	sign < 0 ? ( ps_int32 ) - ival : ( ps_int32 ) ival		8922271	0					
ANR	8923205	Condition	sign < 0		8922271	0					
ANR	8923206	RelationalExpression	sign < 0		8922271	0		<			
ANR	8923207	Identifier	sign		8922271	0					
ANR	8923208	PrimaryExpression	0		8922271	1					
ANR	8923209	CastExpression	( ps_int32 ) - ival		8922271	1					
ANR	8923210	CastTarget	ps_int32		8922271	0					
ANR	8923211	UnaryOperationExpression	- ival		8922271	1					
ANR	8923212	UnaryOperator	-		8922271	0					
ANR	8923213	Identifier	ival		8922271	1					
ANR	8923214	CastExpression	( ps_int32 ) ival		8922271	2					
ANR	8923215	CastTarget	ps_int32		8922271	0					
ANR	8923216	Identifier	ival		8922271	1					
ANR	8923217	ElseStatement	else		8922271	0					
ANR	8923218	CompoundStatement		185:9:6253:6253	8922271	0					
ANR	8923219	ExpressionStatement	"make_int ( pref , ( sign < 0 ? ( ps_int ) - ival : ( ps_int ) ival ) )"	225:8:7580:7637	8922271	0	True				
ANR	8923220	CallExpression	"make_int ( pref , ( sign < 0 ? ( ps_int ) - ival : ( ps_int ) ival ) )"		8922271	0					
ANR	8923221	Callee	make_int		8922271	0					
ANR	8923222	Identifier	make_int		8922271	0					
ANR	8923223	ArgumentList	pref		8922271	1					
ANR	8923224	Argument	pref		8922271	0					
ANR	8923225	Identifier	pref		8922271	0					
ANR	8923226	Argument	sign < 0 ? ( ps_int ) - ival : ( ps_int ) ival		8922271	1					
ANR	8923227	ConditionalExpression	sign < 0 ? ( ps_int ) - ival : ( ps_int ) ival		8922271	0					
ANR	8923228	Condition	sign < 0		8922271	0					
ANR	8923229	RelationalExpression	sign < 0		8922271	0		<			
ANR	8923230	Identifier	sign		8922271	0					
ANR	8923231	PrimaryExpression	0		8922271	1					
ANR	8923232	CastExpression	( ps_int ) - ival		8922271	1					
ANR	8923233	CastTarget	ps_int		8922271	0					
ANR	8923234	UnaryOperationExpression	- ival		8922271	1					
ANR	8923235	UnaryOperator	-		8922271	0					
ANR	8923236	Identifier	ival		8922271	1					
ANR	8923237	CastExpression	( ps_int ) ival		8922271	2					
ANR	8923238	CastTarget	ps_int		8922271	0					
ANR	8923239	Identifier	ival		8922271	1					
ANR	8923240	ReturnStatement	return code ;	227:4:7649:7660	8922271	100	True				
ANR	8923241	Identifier	code		8922271	0					
ANR	8923242	Label	l2d :	230:0:7702:7705	8922271	101	True				
ANR	8923243	Identifier	l2d		8922271	0					
ANR	8923244	ExpressionStatement	exp10 = 0	231:4:7711:7720	8922271	102	True				
ANR	8923245	AssignmentExpression	exp10 = 0		8922271	0		=			
ANR	8923246	Identifier	exp10		8922271	0					
ANR	8923247	PrimaryExpression	0		8922271	1					
ANR	8923248	ForStatement	for ( ; ; )		8922271	103					
ANR	8923249	CompoundStatement		193:13:6418:6418	8922271	0					
ANR	8923250	ExpressionStatement	dval = dval * 10 + d	233:8:7745:7765	8922271	0	True				
ANR	8923251	AssignmentExpression	dval = dval * 10 + d		8922271	0		=			
ANR	8923252	Identifier	dval		8922271	0					
ANR	8923253	AdditiveExpression	dval * 10 + d		8922271	1		+			
ANR	8923254	MultiplicativeExpression	dval * 10		8922271	0		*			
ANR	8923255	Identifier	dval		8922271	0					
ANR	8923256	PrimaryExpression	10		8922271	1					
ANR	8923257	Identifier	d		8922271	1					
ANR	8923258	ExpressionStatement	"GET_NEXT ( c , sp , c = EOFC )"	234:8:7775:7800	8922271	1	True				
ANR	8923259	CallExpression	"GET_NEXT ( c , sp , c = EOFC )"		8922271	0					
ANR	8923260	Callee	GET_NEXT		8922271	0					
ANR	8923261	Identifier	GET_NEXT		8922271	0					
ANR	8923262	ArgumentList	c		8922271	1					
ANR	8923263	Argument	c		8922271	0					
ANR	8923264	Identifier	c		8922271	0					
ANR	8923265	Argument	sp		8922271	1					
ANR	8923266	Identifier	sp		8922271	0					
ANR	8923267	Argument	c = EOFC		8922271	2					
ANR	8923268	AssignmentExpression	c = EOFC		8922271	0		=			
ANR	8923269	Identifier	c		8922271	0					
ANR	8923270	Identifier	EOFC		8922271	1					
ANR	8923271	IfStatement	"if ( ! IS_DIGIT ( d , c ) )"		8922271	2					
ANR	8923272	Condition	"! IS_DIGIT ( d , c )"	235:12:7814:7828	8922271	0	True				
ANR	8923273	UnaryOperationExpression	"! IS_DIGIT ( d , c )"		8922271	0					
ANR	8923274	UnaryOperator	!		8922271	0					
ANR	8923275	CallExpression	"IS_DIGIT ( d , c )"		8922271	1					
ANR	8923276	Callee	IS_DIGIT		8922271	0					
ANR	8923277	Identifier	IS_DIGIT		8922271	0					
ANR	8923278	ArgumentList	d		8922271	1					
ANR	8923279	Argument	d		8922271	0					
ANR	8923280	Identifier	d		8922271	0					
ANR	8923281	Argument	c		8922271	1					
ANR	8923282	Identifier	c		8922271	0					
ANR	8923283	BreakStatement	break ;	236:12:7843:7848	8922271	1	True				
ANR	8923284	SwitchStatement	switch ( c )		8922271	104					
ANR	8923285	Condition	c	238:12:7868:7868	8922271	0	True				
ANR	8923286	Identifier	c		8922271	0					
ANR	8923287	CompoundStatement		199:15:6554:6554	8922271	1					
ANR	8923288	Label	case '.' :	239:8:7881:7889	8922271	0	True				
ANR	8923289	ExpressionStatement	"GET_NEXT ( c , sp , c = EOFC )"	240:12:7903:7928	8922271	1	True				
ANR	8923290	CallExpression	"GET_NEXT ( c , sp , c = EOFC )"		8922271	0					
ANR	8923291	Callee	GET_NEXT		8922271	0					
ANR	8923292	Identifier	GET_NEXT		8922271	0					
ANR	8923293	ArgumentList	c		8922271	1					
ANR	8923294	Argument	c		8922271	0					
ANR	8923295	Identifier	c		8922271	0					
ANR	8923296	Argument	sp		8922271	1					
ANR	8923297	Identifier	sp		8922271	0					
ANR	8923298	Argument	c = EOFC		8922271	2					
ANR	8923299	AssignmentExpression	c = EOFC		8922271	0		=			
ANR	8923300	Identifier	c		8922271	0					
ANR	8923301	Identifier	EOFC		8922271	1					
ANR	8923302	ExpressionStatement	exp10 = 0	241:12:7942:7951	8922271	2	True				
ANR	8923303	AssignmentExpression	exp10 = 0		8922271	0		=			
ANR	8923304	Identifier	exp10		8922271	0					
ANR	8923305	PrimaryExpression	0		8922271	1					
ANR	8923306	GotoStatement	goto fd ;	242:12:7965:7972	8922271	3	True				
ANR	8923307	Identifier	fd		8922271	0					
ANR	8923308	Label	default :	243:8:7982:7989	8922271	4	True				
ANR	8923309	Identifier	default		8922271	0					
ANR	8923310	ExpressionStatement	* psp = sp	244:12:8003:8012	8922271	5	True				
ANR	8923311	AssignmentExpression	* psp = sp		8922271	0		=			
ANR	8923312	UnaryOperationExpression	* psp		8922271	0					
ANR	8923313	UnaryOperator	*		8922271	0					
ANR	8923314	Identifier	psp		8922271	1					
ANR	8923315	Identifier	sp		8922271	1					
ANR	8923316	ExpressionStatement	code = 1	245:12:8026:8034	8922271	6	True				
ANR	8923317	AssignmentExpression	code = 1		8922271	0		=			
ANR	8923318	Identifier	code		8922271	0					
ANR	8923319	PrimaryExpression	1		8922271	1					
ANR	8923320	Label	case EOFC :	247:8:8076:8085	8922271	7	True				
ANR	8923321	Identifier	EOFC		8922271	0					
ANR	8923322	IfStatement	if ( sign < 0 )		8922271	8					
ANR	8923323	Condition	sign < 0	248:16:8103:8110	8922271	0	True				
ANR	8923324	RelationalExpression	sign < 0		8922271	0		<			
ANR	8923325	Identifier	sign		8922271	0					
ANR	8923326	PrimaryExpression	0		8922271	1					
ANR	8923327	ExpressionStatement	dval = - dval	249:16:8129:8141	8922271	1	True				
ANR	8923328	AssignmentExpression	dval = - dval		8922271	0		=			
ANR	8923329	Identifier	dval		8922271	0					
ANR	8923330	UnaryOperationExpression	- dval		8922271	1					
ANR	8923331	UnaryOperator	-		8922271	0					
ANR	8923332	Identifier	dval		8922271	1					
ANR	8923333	GotoStatement	goto rret ;	250:12:8155:8164	8922271	9	True				
ANR	8923334	Identifier	rret		8922271	0					
ANR	8923335	Label	case 'e' :	251:8:8174:8182	8922271	10	True				
ANR	8923336	Label	case 'E' :	252:8:8192:8200	8922271	11	True				
ANR	8923337	ExpressionStatement	exp10 = 0	253:12:8214:8223	8922271	12	True				
ANR	8923338	AssignmentExpression	exp10 = 0		8922271	0		=			
ANR	8923339	Identifier	exp10		8922271	0					
ANR	8923340	PrimaryExpression	0		8922271	1					
ANR	8923341	GotoStatement	goto fs ;	254:12:8237:8244	8922271	13	True				
ANR	8923342	Identifier	fs		8922271	0					
ANR	8923343	Label	case '#' :	255:8:8254:8262	8922271	14	True				
ANR	8923344	ExpressionStatement	return_error ( gs_error_syntaxerror )	256:12:8276:8310	8922271	15	True				
ANR	8923345	CallExpression	return_error ( gs_error_syntaxerror )		8922271	0					
ANR	8923346	Callee	return_error		8922271	0					
ANR	8923347	Identifier	return_error		8922271	0					
ANR	8923348	ArgumentList	gs_error_syntaxerror		8922271	1					
ANR	8923349	Argument	gs_error_syntaxerror		8922271	0					
ANR	8923350	Identifier	gs_error_syntaxerror		8922271	0					
ANR	8923351	Label	i2r :	260:0:8381:8384	8922271	105	True				
ANR	8923352	Identifier	i2r		8922271	0					
ANR	8923353	ExpressionStatement	exp10 = 0	261:4:8390:8399	8922271	106	True				
ANR	8923354	AssignmentExpression	exp10 = 0		8922271	0		=			
ANR	8923355	Identifier	exp10		8922271	0					
ANR	8923356	PrimaryExpression	0		8922271	1					
ANR	8923357	WhileStatement	"while ( IS_DIGIT ( d , c ) || c == '-' )"		8922271	107					
ANR	8923358	Condition	"IS_DIGIT ( d , c ) || c == '-'"	262:11:8412:8437	8922271	0	True				
ANR	8923359	OrExpression	"IS_DIGIT ( d , c ) || c == '-'"		8922271	0		||			
ANR	8923360	CallExpression	"IS_DIGIT ( d , c )"		8922271	0					
ANR	8923361	Callee	IS_DIGIT		8922271	0					
ANR	8923362	Identifier	IS_DIGIT		8922271	0					
ANR	8923363	ArgumentList	d		8922271	1					
ANR	8923364	Argument	d		8922271	0					
ANR	8923365	Identifier	d		8922271	0					
ANR	8923366	Argument	c		8922271	1					
ANR	8923367	Identifier	c		8922271	0					
ANR	8923368	EqualityExpression	c == '-'		8922271	1		==			
ANR	8923369	Identifier	c		8922271	0					
ANR	8923370	PrimaryExpression	'-'		8922271	1					
ANR	8923371	CompoundStatement		223:39:7123:7123	8922271	1					
ANR	8923372	IfStatement	if ( c == '-' )		8922271	0					
ANR	8923373	Condition	c == '-'	270:12:8820:8827	8922271	0	True				
ANR	8923374	EqualityExpression	c == '-'		8922271	0		==			
ANR	8923375	Identifier	c		8922271	0					
ANR	8923376	PrimaryExpression	'-'		8922271	1					
ANR	8923377	CompoundStatement		231:22:7513:7513	8922271	1					
ANR	8923378	IfStatement	if ( ( SCAN_PDF_INV_NUM & scanner_options ) == 0 )		8922271	0					
ANR	8923379	Condition	( SCAN_PDF_INV_NUM & scanner_options ) == 0	271:16:8848:8888	8922271	0	True				
ANR	8923380	EqualityExpression	( SCAN_PDF_INV_NUM & scanner_options ) == 0		8922271	0		==			
ANR	8923381	BitAndExpression	SCAN_PDF_INV_NUM & scanner_options		8922271	0		&			
ANR	8923382	Identifier	SCAN_PDF_INV_NUM		8922271	0					
ANR	8923383	Identifier	scanner_options		8922271	1					
ANR	8923384	PrimaryExpression	0		8922271	1					
ANR	8923385	BreakStatement	break ;	272:16:8907:8912	8922271	1	True				
ANR	8923386	DoStatement	do		8922271	1					
ANR	8923387	CompoundStatement		234:15:7612:7612	8922271	0					
ANR	8923388	ExpressionStatement	"GET_NEXT ( c , sp , c = EOFC )"	274:16:8947:8972	8922271	0	True				
ANR	8923389	CallExpression	"GET_NEXT ( c , sp , c = EOFC )"		8922271	0					
ANR	8923390	Callee	GET_NEXT		8922271	0					
ANR	8923391	Identifier	GET_NEXT		8922271	0					
ANR	8923392	ArgumentList	c		8922271	1					
ANR	8923393	Argument	c		8922271	0					
ANR	8923394	Identifier	c		8922271	0					
ANR	8923395	Argument	sp		8922271	1					
ANR	8923396	Identifier	sp		8922271	0					
ANR	8923397	Argument	c = EOFC		8922271	2					
ANR	8923398	AssignmentExpression	c = EOFC		8922271	0		=			
ANR	8923399	Identifier	c		8922271	0					
ANR	8923400	Identifier	EOFC		8922271	1					
ANR	8923401	Condition	"IS_DIGIT ( d , c )"	275:21:8995:9008	8922271	1	True				
ANR	8923402	CallExpression	"IS_DIGIT ( d , c )"		8922271	0					
ANR	8923403	Callee	IS_DIGIT		8922271	0					
ANR	8923404	Identifier	IS_DIGIT		8922271	0					
ANR	8923405	ArgumentList	d		8922271	1					
ANR	8923406	Argument	d		8922271	0					
ANR	8923407	Identifier	d		8922271	0					
ANR	8923408	Argument	c		8922271	1					
ANR	8923409	Identifier	c		8922271	0					
ANR	8923410	BreakStatement	break ;	276:12:9024:9029	8922271	2	True				
ANR	8923411	IfStatement	"if ( WOULD_OVERFLOW ( ival , d , max_int ) )"		8922271	1					
ANR	8923412	Condition	"WOULD_OVERFLOW ( ival , d , max_int )"	278:12:9053:9084	8922271	0	True				
ANR	8923413	CallExpression	"WOULD_OVERFLOW ( ival , d , max_int )"		8922271	0					
ANR	8923414	Callee	WOULD_OVERFLOW		8922271	0					
ANR	8923415	Identifier	WOULD_OVERFLOW		8922271	0					
ANR	8923416	ArgumentList	ival		8922271	1					
ANR	8923417	Argument	ival		8922271	0					
ANR	8923418	Identifier	ival		8922271	0					
ANR	8923419	Argument	d		8922271	1					
ANR	8923420	Identifier	d		8922271	0					
ANR	8923421	Argument	max_int		8922271	2					
ANR	8923422	Identifier	max_int		8922271	0					
ANR	8923423	CompoundStatement		239:46:7770:7770	8922271	1					
ANR	8923424	ExpressionStatement	dval = ( double ) ival	279:12:9101:9120	8922271	0	True				
ANR	8923425	AssignmentExpression	dval = ( double ) ival		8922271	0		=			
ANR	8923426	Identifier	dval		8922271	0					
ANR	8923427	CastExpression	( double ) ival		8922271	1					
ANR	8923428	CastTarget	double		8922271	0					
ANR	8923429	Identifier	ival		8922271	1					
ANR	8923430	GotoStatement	goto fd ;	280:12:9134:9141	8922271	1	True				
ANR	8923431	Identifier	fd		8922271	0					
ANR	8923432	ExpressionStatement	ival = ival * 10 + d	282:8:9161:9181	8922271	2	True				
ANR	8923433	AssignmentExpression	ival = ival * 10 + d		8922271	0		=			
ANR	8923434	Identifier	ival		8922271	0					
ANR	8923435	AdditiveExpression	ival * 10 + d		8922271	1		+			
ANR	8923436	MultiplicativeExpression	ival * 10		8922271	0		*			
ANR	8923437	Identifier	ival		8922271	0					
ANR	8923438	PrimaryExpression	10		8922271	1					
ANR	8923439	Identifier	d		8922271	1					
ANR	8923440	ExpressionStatement	exp10 --	283:8:9191:9198	8922271	3	True				
ANR	8923441	PostIncDecOperationExpression	exp10 --		8922271	0					
ANR	8923442	Identifier	exp10		8922271	0					
ANR	8923443	IncDec	--		8922271	1					
ANR	8923444	ExpressionStatement	"GET_NEXT ( c , sp , c = EOFC )"	284:8:9208:9233	8922271	4	True				
ANR	8923445	CallExpression	"GET_NEXT ( c , sp , c = EOFC )"		8922271	0					
ANR	8923446	Callee	GET_NEXT		8922271	0					
ANR	8923447	Identifier	GET_NEXT		8922271	0					
ANR	8923448	ArgumentList	c		8922271	1					
ANR	8923449	Argument	c		8922271	0					
ANR	8923450	Identifier	c		8922271	0					
ANR	8923451	Argument	sp		8922271	1					
ANR	8923452	Identifier	sp		8922271	0					
ANR	8923453	Argument	c = EOFC		8922271	2					
ANR	8923454	AssignmentExpression	c = EOFC		8922271	0		=			
ANR	8923455	Identifier	c		8922271	0					
ANR	8923456	Identifier	EOFC		8922271	1					
ANR	8923457	IfStatement	if ( sign < 0 )		8922271	108					
ANR	8923458	Condition	sign < 0	286:8:9249:9256	8922271	0	True				
ANR	8923459	RelationalExpression	sign < 0		8922271	0		<			
ANR	8923460	Identifier	sign		8922271	0					
ANR	8923461	PrimaryExpression	0		8922271	1					
ANR	8923462	ExpressionStatement	ival = - ival	287:8:9267:9279	8922271	1	True				
ANR	8923463	AssignmentExpression	ival = - ival		8922271	0		=			
ANR	8923464	Identifier	ival		8922271	0					
ANR	8923465	UnaryOperationExpression	- ival		8922271	1					
ANR	8923466	UnaryOperator	-		8922271	0					
ANR	8923467	Identifier	ival		8922271	1					
ANR	8923468	IfStatement	if ( ! ( c == 'e' || c == 'E' || exp10 < - NUM_POWERS_10 ) )		8922271	109					
ANR	8923469	Condition	! ( c == 'e' || c == 'E' || exp10 < - NUM_POWERS_10 )	289:8:9335:9383	8922271	0	True				
ANR	8923470	UnaryOperationExpression	! ( c == 'e' || c == 'E' || exp10 < - NUM_POWERS_10 )		8922271	0					
ANR	8923471	UnaryOperator	!		8922271	0					
ANR	8923472	OrExpression	c == 'e' || c == 'E' || exp10 < - NUM_POWERS_10		8922271	1		||			
ANR	8923473	EqualityExpression	c == 'e'		8922271	0		==			
ANR	8923474	Identifier	c		8922271	0					
ANR	8923475	PrimaryExpression	'e'		8922271	1					
ANR	8923476	OrExpression	c == 'E' || exp10 < - NUM_POWERS_10		8922271	1		||			
ANR	8923477	EqualityExpression	c == 'E'		8922271	0		==			
ANR	8923478	Identifier	c		8922271	0					
ANR	8923479	PrimaryExpression	'E'		8922271	1					
ANR	8923480	RelationalExpression	exp10 < - NUM_POWERS_10		8922271	1		<			
ANR	8923481	Identifier	exp10		8922271	0					
ANR	8923482	UnaryOperationExpression	- NUM_POWERS_10		8922271	1					
ANR	8923483	UnaryOperator	-		8922271	0					
ANR	8923484	Identifier	NUM_POWERS_10		8922271	1					
ANR	8923485	CompoundStatement		250:59:8069:8069	8922271	1					
ANR	8923486	IfStatement	if ( c != EOFC )		8922271	0					
ANR	8923487	Condition	c != EOFC	290:12:9433:9441	8922271	0	True				
ANR	8923488	EqualityExpression	c != EOFC		8922271	0		!=			
ANR	8923489	Identifier	c		8922271	0					
ANR	8923490	Identifier	EOFC		8922271	1					
ANR	8923491	ExpressionStatement	"* psp = sp , code = 1"	291:12:9456:9475	8922271	1	True				
ANR	8923492	Expression	"* psp = sp , code = 1"		8922271	0					
ANR	8923493	AssignmentExpression	* psp = sp		8922271	0		=			
ANR	8923494	UnaryOperationExpression	* psp		8922271	0					
ANR	8923495	UnaryOperator	*		8922271	0					
ANR	8923496	Identifier	psp		8922271	1					
ANR	8923497	Identifier	sp		8922271	1					
ANR	8923498	AssignmentExpression	code = 1		8922271	1		=			
ANR	8923499	Identifier	code		8922271	0					
ANR	8923500	PrimaryExpression	1		8922271	1					
ANR	8923501	ExpressionStatement	"make_real ( pref , ival * neg_powers_10 [ - exp10 ] )"	292:8:9485:9530	8922271	1	True				
ANR	8923502	CallExpression	"make_real ( pref , ival * neg_powers_10 [ - exp10 ] )"		8922271	0					
ANR	8923503	Callee	make_real		8922271	0					
ANR	8923504	Identifier	make_real		8922271	0					
ANR	8923505	ArgumentList	pref		8922271	1					
ANR	8923506	Argument	pref		8922271	0					
ANR	8923507	Identifier	pref		8922271	0					
ANR	8923508	Argument	ival * neg_powers_10 [ - exp10 ]		8922271	1					
ANR	8923509	MultiplicativeExpression	ival * neg_powers_10 [ - exp10 ]		8922271	0		*			
ANR	8923510	Identifier	ival		8922271	0					
ANR	8923511	ArrayIndexing	neg_powers_10 [ - exp10 ]		8922271	1					
ANR	8923512	Identifier	neg_powers_10		8922271	0					
ANR	8923513	UnaryOperationExpression	- exp10		8922271	1					
ANR	8923514	UnaryOperator	-		8922271	0					
ANR	8923515	Identifier	exp10		8922271	1					
ANR	8923516	ReturnStatement	return code ;	293:8:9540:9551	8922271	2	True				
ANR	8923517	Identifier	code		8922271	0					
ANR	8923518	ExpressionStatement	dval = ( double ) ival	295:4:9563:9582	8922271	110	True				
ANR	8923519	AssignmentExpression	dval = ( double ) ival		8922271	0		=			
ANR	8923520	Identifier	dval		8922271	0					
ANR	8923521	CastExpression	( double ) ival		8922271	1					
ANR	8923522	CastTarget	double		8922271	0					
ANR	8923523	Identifier	ival		8922271	1					
ANR	8923524	GotoStatement	goto fe ;	296:4:9588:9595	8922271	111	True				
ANR	8923525	Identifier	fe		8922271	0					
ANR	8923526	Label	fd :	299:0:9650:9652	8922271	112	True				
ANR	8923527	Identifier	fd		8922271	0					
ANR	8923528	WhileStatement	"while ( IS_DIGIT ( d , c ) )"		8922271	113					
ANR	8923529	Condition	"IS_DIGIT ( d , c )"	300:11:9665:9678	8922271	0	True				
ANR	8923530	CallExpression	"IS_DIGIT ( d , c )"		8922271	0					
ANR	8923531	Callee	IS_DIGIT		8922271	0					
ANR	8923532	Identifier	IS_DIGIT		8922271	0					
ANR	8923533	ArgumentList	d		8922271	1					
ANR	8923534	Argument	d		8922271	0					
ANR	8923535	Identifier	d		8922271	0					
ANR	8923536	Argument	c		8922271	1					
ANR	8923537	Identifier	c		8922271	0					
ANR	8923538	CompoundStatement		261:27:8364:8364	8922271	1					
ANR	8923539	ExpressionStatement	dval = dval * 10 + d	301:8:9691:9711	8922271	0	True				
ANR	8923540	AssignmentExpression	dval = dval * 10 + d		8922271	0		=			
ANR	8923541	Identifier	dval		8922271	0					
ANR	8923542	AdditiveExpression	dval * 10 + d		8922271	1		+			
ANR	8923543	MultiplicativeExpression	dval * 10		8922271	0		*			
ANR	8923544	Identifier	dval		8922271	0					
ANR	8923545	PrimaryExpression	10		8922271	1					
ANR	8923546	Identifier	d		8922271	1					
ANR	8923547	ExpressionStatement	exp10 --	302:8:9721:9728	8922271	1	True				
ANR	8923548	PostIncDecOperationExpression	exp10 --		8922271	0					
ANR	8923549	Identifier	exp10		8922271	0					
ANR	8923550	IncDec	--		8922271	1					
ANR	8923551	ExpressionStatement	"GET_NEXT ( c , sp , c = EOFC )"	303:8:9738:9763	8922271	2	True				
ANR	8923552	CallExpression	"GET_NEXT ( c , sp , c = EOFC )"		8922271	0					
ANR	8923553	Callee	GET_NEXT		8922271	0					
ANR	8923554	Identifier	GET_NEXT		8922271	0					
ANR	8923555	ArgumentList	c		8922271	1					
ANR	8923556	Argument	c		8922271	0					
ANR	8923557	Identifier	c		8922271	0					
ANR	8923558	Argument	sp		8922271	1					
ANR	8923559	Identifier	sp		8922271	0					
ANR	8923560	Argument	c = EOFC		8922271	2					
ANR	8923561	AssignmentExpression	c = EOFC		8922271	0		=			
ANR	8923562	Identifier	c		8922271	0					
ANR	8923563	Identifier	EOFC		8922271	1					
ANR	8923564	Label	fs :	305:0:9771:9773	8922271	114	True				
ANR	8923565	Identifier	fs		8922271	0					
ANR	8923566	IfStatement	if ( sign < 0 )		8922271	115					
ANR	8923567	Condition	sign < 0	306:8:9783:9790	8922271	0	True				
ANR	8923568	RelationalExpression	sign < 0		8922271	0		<			
ANR	8923569	Identifier	sign		8922271	0					
ANR	8923570	PrimaryExpression	0		8922271	1					
ANR	8923571	ExpressionStatement	dval = - dval	307:8:9801:9813	8922271	1	True				
ANR	8923572	AssignmentExpression	dval = - dval		8922271	0		=			
ANR	8923573	Identifier	dval		8922271	0					
ANR	8923574	UnaryOperationExpression	- dval		8922271	1					
ANR	8923575	UnaryOperator	-		8922271	0					
ANR	8923576	Identifier	dval		8922271	1					
ANR	8923577	Label	fe :	308:0:9815:9817	8922271	116	True				
ANR	8923578	Identifier	fe		8922271	0					
ANR	8923579	SwitchStatement	switch ( c )		8922271	117					
ANR	8923580	Condition	c	310:12:9892:9892	8922271	0	True				
ANR	8923581	Identifier	c		8922271	0					
ANR	8923582	CompoundStatement		271:15:8578:8578	8922271	1					
ANR	8923583	Label	case 'e' :	311:8:9905:9913	8922271	0	True				
ANR	8923584	Label	case 'E' :	312:8:9923:9931	8922271	1	True				
ANR	8923585	CompoundStatement		276:16:8717:8725	8922271	2					
ANR	8923586	IdentifierDeclStatement	int esign = 0 ;	314:16:10003:10016	8922271	0	True				
ANR	8923587	IdentifierDecl	esign = 0		8922271	0					
ANR	8923588	IdentifierDeclType	int		8922271	0					
ANR	8923589	Identifier	esign		8922271	1					
ANR	8923590	AssignmentExpression	esign = 0		8922271	2		=			
ANR	8923591	Identifier	esign		8922271	0					
ANR	8923592	PrimaryExpression	0		8922271	1					
ANR	8923593	IdentifierDeclStatement	int iexp ;	315:16:10034:10042	8922271	1	True				
ANR	8923594	IdentifierDecl	iexp		8922271	0					
ANR	8923595	IdentifierDeclType	int		8922271	0					
ANR	8923596	Identifier	iexp		8922271	1					
ANR	8923597	ExpressionStatement	"GET_NEXT ( c , sp , return_error ( gs_error_syntaxerror ) )"	317:16:10061:10112	8922271	2	True				
ANR	8923598	CallExpression	"GET_NEXT ( c , sp , return_error ( gs_error_syntaxerror ) )"		8922271	0					
ANR	8923599	Callee	GET_NEXT		8922271	0					
ANR	8923600	Identifier	GET_NEXT		8922271	0					
ANR	8923601	ArgumentList	c		8922271	1					
ANR	8923602	Argument	c		8922271	0					
ANR	8923603	Identifier	c		8922271	0					
ANR	8923604	Argument	sp		8922271	1					
ANR	8923605	Identifier	sp		8922271	0					
ANR	8923606	Argument	return_error ( gs_error_syntaxerror )		8922271	2					
ANR	8923607	CallExpression	return_error ( gs_error_syntaxerror )		8922271	0					
ANR	8923608	Callee	return_error		8922271	0					
ANR	8923609	Identifier	return_error		8922271	0					
ANR	8923610	ArgumentList	gs_error_syntaxerror		8922271	1					
ANR	8923611	Argument	gs_error_syntaxerror		8922271	0					
ANR	8923612	Identifier	gs_error_syntaxerror		8922271	0					
ANR	8923613	SwitchStatement	switch ( c )		8922271	3					
ANR	8923614	Condition	c	318:24:10138:10138	8922271	0	True				
ANR	8923615	Identifier	c		8922271	0					
ANR	8923616	CompoundStatement		279:27:8824:8824	8922271	1					
ANR	8923617	Label	case '-' :	319:20:10163:10171	8922271	0	True				
ANR	8923618	ExpressionStatement	esign = 1	320:24:10197:10206	8922271	1	True				
ANR	8923619	AssignmentExpression	esign = 1		8922271	0		=			
ANR	8923620	Identifier	esign		8922271	0					
ANR	8923621	PrimaryExpression	1		8922271	1					
ANR	8923622	Label	case '+' :	322:20:10271:10279	8922271	2	True				
ANR	8923623	ExpressionStatement	"GET_NEXT ( c , sp , return_error ( gs_error_syntaxerror ) )"	323:24:10305:10356	8922271	3	True				
ANR	8923624	CallExpression	"GET_NEXT ( c , sp , return_error ( gs_error_syntaxerror ) )"		8922271	0					
ANR	8923625	Callee	GET_NEXT		8922271	0					
ANR	8923626	Identifier	GET_NEXT		8922271	0					
ANR	8923627	ArgumentList	c		8922271	1					
ANR	8923628	Argument	c		8922271	0					
ANR	8923629	Identifier	c		8922271	0					
ANR	8923630	Argument	sp		8922271	1					
ANR	8923631	Identifier	sp		8922271	0					
ANR	8923632	Argument	return_error ( gs_error_syntaxerror )		8922271	2					
ANR	8923633	CallExpression	return_error ( gs_error_syntaxerror )		8922271	0					
ANR	8923634	Callee	return_error		8922271	0					
ANR	8923635	Identifier	return_error		8922271	0					
ANR	8923636	ArgumentList	gs_error_syntaxerror		8922271	1					
ANR	8923637	Argument	gs_error_syntaxerror		8922271	0					
ANR	8923638	Identifier	gs_error_syntaxerror		8922271	0					
ANR	8923639	IfStatement	"if ( ! IS_DIGIT ( d , c ) )"		8922271	4					
ANR	8923640	Condition	"! IS_DIGIT ( d , c )"	326:20:10470:10484	8922271	0	True				
ANR	8923641	UnaryOperationExpression	"! IS_DIGIT ( d , c )"		8922271	0					
ANR	8923642	UnaryOperator	!		8922271	0					
ANR	8923643	CallExpression	"IS_DIGIT ( d , c )"		8922271	1					
ANR	8923644	Callee	IS_DIGIT		8922271	0					
ANR	8923645	Identifier	IS_DIGIT		8922271	0					
ANR	8923646	ArgumentList	d		8922271	1					
ANR	8923647	Argument	d		8922271	0					
ANR	8923648	Identifier	d		8922271	0					
ANR	8923649	Argument	c		8922271	1					
ANR	8923650	Identifier	c		8922271	0					
ANR	8923651	ExpressionStatement	return_error ( gs_error_syntaxerror )	327:20:10507:10541	8922271	1	True				
ANR	8923652	CallExpression	return_error ( gs_error_syntaxerror )		8922271	0					
ANR	8923653	Callee	return_error		8922271	0					
ANR	8923654	Identifier	return_error		8922271	0					
ANR	8923655	ArgumentList	gs_error_syntaxerror		8922271	1					
ANR	8923656	Argument	gs_error_syntaxerror		8922271	0					
ANR	8923657	Identifier	gs_error_syntaxerror		8922271	0					
ANR	8923658	ExpressionStatement	iexp = d	328:16:10559:10567	8922271	5	True				
ANR	8923659	AssignmentExpression	iexp = d		8922271	0		=			
ANR	8923660	Identifier	iexp		8922271	0					
ANR	8923661	Identifier	d		8922271	1					
ANR	8923662	ForStatement	for ( ; ; iexp = iexp * 10 + d )		8922271	6					
ANR	8923663	AssignmentExpression	iexp = iexp * 10 + d	329:24:10593:10612	8922271	0	True	=			
ANR	8923664	Identifier	iexp		8922271	0					
ANR	8923665	AdditiveExpression	iexp * 10 + d		8922271	1		+			
ANR	8923666	MultiplicativeExpression	iexp * 10		8922271	0		*			
ANR	8923667	Identifier	iexp		8922271	0					
ANR	8923668	PrimaryExpression	10		8922271	1					
ANR	8923669	Identifier	d		8922271	1					
ANR	8923670	CompoundStatement		290:46:9298:9298	8922271	1					
ANR	8923671	Statement	GET_NEXT	330:20:10637:10644	8922271	0	True				
ANR	8923672	Statement	(	330:28:10645:10645	8922271	1	True				
ANR	8923673	Statement	c	330:29:10646:10646	8922271	2	True				
ANR	8923674	Statement	","	330:30:10647:10647	8922271	3	True				
ANR	8923675	Statement	sp	330:32:10649:10650	8922271	4	True				
ANR	8923676	Statement	","	330:34:10651:10651	8922271	5	True				
ANR	8923677	Statement	break	330:36:10653:10657	8922271	6	True				
ANR	8923678	Statement	)	330:41:10658:10658	8922271	7	True				
ANR	8923679	ExpressionStatement		330:42:10659:10659	8922271	8	True				
ANR	8923680	IfStatement	"if ( ! IS_DIGIT ( d , c ) )"		8922271	9					
ANR	8923681	Condition	"! IS_DIGIT ( d , c )"	331:24:10685:10699	8922271	0	True				
ANR	8923682	UnaryOperationExpression	"! IS_DIGIT ( d , c )"		8922271	0					
ANR	8923683	UnaryOperator	!		8922271	0					
ANR	8923684	CallExpression	"IS_DIGIT ( d , c )"		8922271	1					
ANR	8923685	Callee	IS_DIGIT		8922271	0					
ANR	8923686	Identifier	IS_DIGIT		8922271	0					
ANR	8923687	ArgumentList	d		8922271	1					
ANR	8923688	Argument	d		8922271	0					
ANR	8923689	Identifier	d		8922271	0					
ANR	8923690	Argument	c		8922271	1					
ANR	8923691	Identifier	c		8922271	0					
ANR	8923692	CompoundStatement		292:41:9385:9385	8922271	1					
ANR	8923693	ExpressionStatement	* psp = sp	332:24:10728:10737	8922271	0	True				
ANR	8923694	AssignmentExpression	* psp = sp		8922271	0		=			
ANR	8923695	UnaryOperationExpression	* psp		8922271	0					
ANR	8923696	UnaryOperator	*		8922271	0					
ANR	8923697	Identifier	psp		8922271	1					
ANR	8923698	Identifier	sp		8922271	1					
ANR	8923699	ExpressionStatement	code = 1	333:24:10763:10771	8922271	1	True				
ANR	8923700	AssignmentExpression	code = 1		8922271	0		=			
ANR	8923701	Identifier	code		8922271	0					
ANR	8923702	PrimaryExpression	1		8922271	1					
ANR	8923703	BreakStatement	break ;	334:24:10797:10802	8922271	2	True				
ANR	8923704	IfStatement	if ( iexp > 99 )		8922271	10					
ANR	8923705	Condition	iexp > 99	336:24:10850:10858	8922271	0	True				
ANR	8923706	RelationalExpression	iexp > 99		8922271	0		>			
ANR	8923707	Identifier	iexp		8922271	0					
ANR	8923708	PrimaryExpression	99		8922271	1					
ANR	8923709	ExpressionStatement	return_error ( gs_error_limitcheck )	337:24:10885:10918	8922271	1	True				
ANR	8923710	CallExpression	return_error ( gs_error_limitcheck )		8922271	0					
ANR	8923711	Callee	return_error		8922271	0					
ANR	8923712	Identifier	return_error		8922271	0					
ANR	8923713	ArgumentList	gs_error_limitcheck		8922271	1					
ANR	8923714	Argument	gs_error_limitcheck		8922271	0					
ANR	8923715	Identifier	gs_error_limitcheck		8922271	0					
ANR	8923716	IfStatement	if ( esign )		8922271	7					
ANR	8923717	Condition	esign	339:20:10958:10962	8922271	0	True				
ANR	8923718	Identifier	esign		8922271	0					
ANR	8923719	ExpressionStatement	exp10 -= iexp	340:20:10985:10998	8922271	1	True				
ANR	8923720	AssignmentExpression	exp10 -= iexp		8922271	0		-=			
ANR	8923721	Identifier	exp10		8922271	0					
ANR	8923722	Identifier	iexp		8922271	1					
ANR	8923723	ElseStatement	else		8922271	0					
ANR	8923724	ExpressionStatement	exp10 += iexp	342:20:11041:11054	8922271	0	True				
ANR	8923725	AssignmentExpression	exp10 += iexp		8922271	0		+=			
ANR	8923726	Identifier	exp10		8922271	0					
ANR	8923727	Identifier	iexp		8922271	1					
ANR	8923728	BreakStatement	break ;	343:16:11072:11077	8922271	8	True				
ANR	8923729	Label	default :	345:8:11101:11108	8922271	3	True				
ANR	8923730	Identifier	default		8922271	0					
ANR	8923731	ExpressionStatement	* psp = sp	346:12:11122:11131	8922271	4	True				
ANR	8923732	AssignmentExpression	* psp = sp		8922271	0		=			
ANR	8923733	UnaryOperationExpression	* psp		8922271	0					
ANR	8923734	UnaryOperator	*		8922271	0					
ANR	8923735	Identifier	psp		8922271	1					
ANR	8923736	Identifier	sp		8922271	1					
ANR	8923737	ExpressionStatement	code = 1	347:12:11145:11153	8922271	5	True				
ANR	8923738	AssignmentExpression	code = 1		8922271	0		=			
ANR	8923739	Identifier	code		8922271	0					
ANR	8923740	PrimaryExpression	1		8922271	1					
ANR	8923741	Label	case EOFC :	348:8:11163:11172	8922271	6	True				
ANR	8923742	Identifier	EOFC		8922271	0					
ANR	8923743	ExpressionStatement		349:12:11186:11186	8922271	7	True				
ANR	8923744	IfStatement	if ( exp10 > 0 )		8922271	118					
ANR	8923745	Condition	exp10 > 0	352:8:11237:11245	8922271	0	True				
ANR	8923746	RelationalExpression	exp10 > 0		8922271	0		>			
ANR	8923747	Identifier	exp10		8922271	0					
ANR	8923748	PrimaryExpression	0		8922271	1					
ANR	8923749	CompoundStatement		313:19:9931:9931	8922271	1					
ANR	8923750	WhileStatement	while ( exp10 > NUM_POWERS_10 )		8922271	0					
ANR	8923751	Condition	exp10 > NUM_POWERS_10	353:15:11265:11285	8922271	0	True				
ANR	8923752	RelationalExpression	exp10 > NUM_POWERS_10		8922271	0		>			
ANR	8923753	Identifier	exp10		8922271	0					
ANR	8923754	Identifier	NUM_POWERS_10		8922271	1					
ANR	8923755	ExpressionStatement	"dval *= powers_10 [ NUM_POWERS_10 ] , exp10 -= NUM_POWERS_10"	354:12:11300:11372	8922271	1	True				
ANR	8923756	Expression	"dval *= powers_10 [ NUM_POWERS_10 ] , exp10 -= NUM_POWERS_10"		8922271	0					
ANR	8923757	AssignmentExpression	dval *= powers_10 [ NUM_POWERS_10 ]		8922271	0		*=			
ANR	8923758	Identifier	dval		8922271	0					
ANR	8923759	ArrayIndexing	powers_10 [ NUM_POWERS_10 ]		8922271	1					
ANR	8923760	Identifier	powers_10		8922271	0					
ANR	8923761	Identifier	NUM_POWERS_10		8922271	1					
ANR	8923762	AssignmentExpression	exp10 -= NUM_POWERS_10		8922271	1		-=			
ANR	8923763	Identifier	exp10		8922271	0					
ANR	8923764	Identifier	NUM_POWERS_10		8922271	1					
ANR	8923765	IfStatement	if ( exp10 > 0 )		8922271	1					
ANR	8923766	Condition	exp10 > 0	356:12:11386:11394	8922271	0	True				
ANR	8923767	RelationalExpression	exp10 > 0		8922271	0		>			
ANR	8923768	Identifier	exp10		8922271	0					
ANR	8923769	PrimaryExpression	0		8922271	1					
ANR	8923770	ExpressionStatement	dval *= powers_10 [ exp10 ]	357:12:11409:11433	8922271	1	True				
ANR	8923771	AssignmentExpression	dval *= powers_10 [ exp10 ]		8922271	0		*=			
ANR	8923772	Identifier	dval		8922271	0					
ANR	8923773	ArrayIndexing	powers_10 [ exp10 ]		8922271	1					
ANR	8923774	Identifier	powers_10		8922271	0					
ANR	8923775	Identifier	exp10		8922271	1					
ANR	8923776	ElseStatement	else		8922271	0					
ANR	8923777	IfStatement	if ( exp10 < 0 )		8922271	0					
ANR	8923778	Condition	exp10 < 0	358:15:11450:11458	8922271	0	True				
ANR	8923779	RelationalExpression	exp10 < 0		8922271	0		<			
ANR	8923780	Identifier	exp10		8922271	0					
ANR	8923781	PrimaryExpression	0		8922271	1					
ANR	8923782	CompoundStatement		319:26:10144:10144	8922271	1					
ANR	8923783	WhileStatement	while ( exp10 < - NUM_POWERS_10 )		8922271	0					
ANR	8923784	Condition	exp10 < - NUM_POWERS_10	359:15:11478:11499	8922271	0	True				
ANR	8923785	RelationalExpression	exp10 < - NUM_POWERS_10		8922271	0		<			
ANR	8923786	Identifier	exp10		8922271	0					
ANR	8923787	UnaryOperationExpression	- NUM_POWERS_10		8922271	1					
ANR	8923788	UnaryOperator	-		8922271	0					
ANR	8923789	Identifier	NUM_POWERS_10		8922271	1					
ANR	8923790	ExpressionStatement	"dval /= powers_10 [ NUM_POWERS_10 ] , exp10 += NUM_POWERS_10"	360:12:11514:11586	8922271	1	True				
ANR	8923791	Expression	"dval /= powers_10 [ NUM_POWERS_10 ] , exp10 += NUM_POWERS_10"		8922271	0					
ANR	8923792	AssignmentExpression	dval /= powers_10 [ NUM_POWERS_10 ]		8922271	0		/=			
ANR	8923793	Identifier	dval		8922271	0					
ANR	8923794	ArrayIndexing	powers_10 [ NUM_POWERS_10 ]		8922271	1					
ANR	8923795	Identifier	powers_10		8922271	0					
ANR	8923796	Identifier	NUM_POWERS_10		8922271	1					
ANR	8923797	AssignmentExpression	exp10 += NUM_POWERS_10		8922271	1		+=			
ANR	8923798	Identifier	exp10		8922271	0					
ANR	8923799	Identifier	NUM_POWERS_10		8922271	1					
ANR	8923800	IfStatement	if ( exp10 < 0 )		8922271	1					
ANR	8923801	Condition	exp10 < 0	362:12:11600:11608	8922271	0	True				
ANR	8923802	RelationalExpression	exp10 < 0		8922271	0		<			
ANR	8923803	Identifier	exp10		8922271	0					
ANR	8923804	PrimaryExpression	0		8922271	1					
ANR	8923805	ExpressionStatement	dval /= powers_10 [ - exp10 ]	363:12:11623:11648	8922271	1	True				
ANR	8923806	AssignmentExpression	dval /= powers_10 [ - exp10 ]		8922271	0		/=			
ANR	8923807	Identifier	dval		8922271	0					
ANR	8923808	ArrayIndexing	powers_10 [ - exp10 ]		8922271	1					
ANR	8923809	Identifier	powers_10		8922271	0					
ANR	8923810	UnaryOperationExpression	- exp10		8922271	1					
ANR	8923811	UnaryOperator	-		8922271	0					
ANR	8923812	Identifier	exp10		8922271	1					
ANR	8923813	IfStatement	if ( dval >= 0 )		8922271	119					
ANR	8923814	Condition	dval >= 0	370:8:11839:11847	8922271	0	True				
ANR	8923815	RelationalExpression	dval >= 0		8922271	0		>=			
ANR	8923816	Identifier	dval		8922271	0					
ANR	8923817	PrimaryExpression	0		8922271	1					
ANR	8923818	CompoundStatement		331:19:10533:10533	8922271	1					
ANR	8923819	IfStatement	if ( dval > MAX_FLOAT )		8922271	0					
ANR	8923820	Condition	dval > MAX_FLOAT	371:12:11864:11879	8922271	0	True				
ANR	8923821	RelationalExpression	dval > MAX_FLOAT		8922271	0		>			
ANR	8923822	Identifier	dval		8922271	0					
ANR	8923823	Identifier	MAX_FLOAT		8922271	1					
ANR	8923824	ExpressionStatement	return_error ( gs_error_limitcheck )	372:12:11894:11927	8922271	1	True				
ANR	8923825	CallExpression	return_error ( gs_error_limitcheck )		8922271	0					
ANR	8923826	Callee	return_error		8922271	0					
ANR	8923827	Identifier	return_error		8922271	0					
ANR	8923828	ArgumentList	gs_error_limitcheck		8922271	1					
ANR	8923829	Argument	gs_error_limitcheck		8922271	0					
ANR	8923830	Identifier	gs_error_limitcheck		8922271	0					
ANR	8923831	ElseStatement	else		8922271	0					
ANR	8923832	CompoundStatement		334:11:10623:10623	8922271	0					
ANR	8923833	IfStatement	if ( dval < - MAX_FLOAT )		8922271	0					
ANR	8923834	Condition	dval < - MAX_FLOAT	374:12:11954:11970	8922271	0	True				
ANR	8923835	RelationalExpression	dval < - MAX_FLOAT		8922271	0		<			
ANR	8923836	Identifier	dval		8922271	0					
ANR	8923837	UnaryOperationExpression	- MAX_FLOAT		8922271	1					
ANR	8923838	UnaryOperator	-		8922271	0					
ANR	8923839	Identifier	MAX_FLOAT		8922271	1					
ANR	8923840	ExpressionStatement	return_error ( gs_error_limitcheck )	375:12:11985:12018	8922271	1	True				
ANR	8923841	CallExpression	return_error ( gs_error_limitcheck )		8922271	0					
ANR	8923842	Callee	return_error		8922271	0					
ANR	8923843	Identifier	return_error		8922271	0					
ANR	8923844	ArgumentList	gs_error_limitcheck		8922271	1					
ANR	8923845	Argument	gs_error_limitcheck		8922271	0					
ANR	8923846	Identifier	gs_error_limitcheck		8922271	0					
ANR	8923847	Label	rret :	377:0:12026:12030	8922271	120	True				
ANR	8923848	Identifier	rret		8922271	0					
ANR	8923849	ExpressionStatement	"make_real ( pref , dval )"	378:4:12036:12057	8922271	121	True				
ANR	8923850	CallExpression	"make_real ( pref , dval )"		8922271	0					
ANR	8923851	Callee	make_real		8922271	0					
ANR	8923852	Identifier	make_real		8922271	0					
ANR	8923853	ArgumentList	pref		8922271	1					
ANR	8923854	Argument	pref		8922271	0					
ANR	8923855	Identifier	pref		8922271	0					
ANR	8923856	Argument	dval		8922271	1					
ANR	8923857	Identifier	dval		8922271	0					
ANR	8923858	ReturnStatement	return code ;	379:4:12063:12074	8922271	122	True				
ANR	8923859	Identifier	code		8922271	0					
ANR	8923860	ReturnType	int		8922271	1					
ANR	8923861	Identifier	scan_number		8922271	2					
ANR	8923862	ParameterList	"const byte * str , const byte * end , int sign , ref * pref , const byte * * psp , int scanner_options"		8922271	3					
ANR	8923863	Parameter	const byte * str	38:12:1206:1221	8922271	0	True				
ANR	8923864	ParameterType	const byte *		8922271	0					
ANR	8923865	Identifier	str		8922271	1					
ANR	8923866	Parameter	const byte * end	38:30:1224:1239	8922271	1	True				
ANR	8923867	ParameterType	const byte *		8922271	0					
ANR	8923868	Identifier	end		8922271	1					
ANR	8923869	Parameter	int sign	38:48:1242:1249	8922271	2	True				
ANR	8923870	ParameterType	int		8922271	0					
ANR	8923871	Identifier	sign		8922271	1					
ANR	8923872	Parameter	ref * pref	39:12:1264:1273	8922271	3	True				
ANR	8923873	ParameterType	ref *		8922271	0					
ANR	8923874	Identifier	pref		8922271	1					
ANR	8923875	Parameter	const byte * * psp	39:24:1276:1292	8922271	4	True				
ANR	8923876	ParameterType	const byte * *		8922271	0					
ANR	8923877	Identifier	psp		8922271	1					
ANR	8923878	Parameter	int scanner_options	39:43:1295:1313	8922271	5	True				
ANR	8923879	ParameterType	int		8922271	0					
ANR	8923880	Identifier	scanner_options		8922271	1					
ANR	8923881	CFGEntryNode	ENTRY		8922271		True				
ANR	8923882	CFGExitNode	EXIT		8922271		True				
ANR	8923883	InfiniteForNode	true		8922271		True				
ANR	8923884	InfiniteForNode	true		8922271		True				
ANR	8923885	InfiniteForNode	true		8922271		True				
ANR	8923886	InfiniteForNode	true		8922271		True				
ANR	8923887	InfiniteForNode	true		8922271		True				
ANR	8923888	Symbol	* sp		8922271						
ANR	8923889	Symbol	SCAN_PDF_INV_NUM		8922271						
ANR	8923890	Symbol	* decoder		8922271						
ANR	8923891	Symbol	MAX_FLOAT		8922271						
ANR	8923892	Symbol	WOULD_OVERFLOW		8922271						
ANR	8923893	Symbol	gs_error_rangecheck		8922271						
ANR	8923894	Symbol	SCAN_CPSI_MODE		8922271						
ANR	8923895	Symbol	shift		8922271						
ANR	8923896	Symbol	sign		8922271						
ANR	8923897	Symbol	dval		8922271						
ANR	8923898	Symbol	int1		8922271						
ANR	8923899	Symbol	pref		8922271						
ANR	8923900	Symbol	neg_powers_10		8922271						
ANR	8923901	Symbol	max_radix		8922271						
ANR	8923902	Symbol	powers_10		8922271						
ANR	8923903	Symbol	MAX_PS_INT32		8922271						
ANR	8923904	Symbol	irem		8922271						
ANR	8923905	Symbol	min_ps_int_scan		8922271						
ANR	8923906	Symbol	iexp		8922271						
ANR	8923907	Symbol	MIN_PS_INT		8922271						
ANR	8923908	Symbol	ival		8922271						
ANR	8923909	Symbol	gs_error_syntaxerror		8922271						
ANR	8923910	Symbol	max_scan		8922271						
ANR	8923911	Symbol	decoder		8922271						
ANR	8923912	Symbol	MIN_PS_INT32		8922271						
ANR	8923913	Symbol	min_radix		8922271						
ANR	8923914	Symbol	NUM_POWERS_10		8922271						
ANR	8923915	Symbol	* exp10		8922271						
ANR	8923916	Symbol	str		8922271						
ANR	8923917	Symbol	* psp		8922271						
ANR	8923918	Symbol	uval		8922271						
ANR	8923919	Symbol	exp10		8922271						
ANR	8923920	Symbol	return_error		8922271						
ANR	8923921	Symbol	max_int		8922271						
ANR	8923922	Symbol	scanner_options		8922271						
ANR	8923923	Symbol	code		8922271						
ANR	8923924	Symbol	* neg_powers_10		8922271						
ANR	8923925	Symbol	max_ps_int_scan		8922271						
ANR	8923926	Symbol	EOFC		8922271						
ANR	8923927	Symbol	psp		8922271						
ANR	8923928	Symbol	* NUM_POWERS_10		8922271						
ANR	8923929	Symbol	gs_error_limitcheck		8922271						
ANR	8923930	Symbol	end		8922271						
ANR	8923931	Symbol	* powers_10		8922271						
ANR	8923932	Symbol	SCAN_PDF_UNSIGNED		8922271						
ANR	8923933	Symbol	sp		8922271						
ANR	8923934	Symbol	c		8922271						
ANR	8923935	Symbol	d		8922271						
ANR	8923936	Symbol	MAX_PS_UINT		8922271						
ANR	8923937	Symbol	esign		8922271						
ANR	8923938	Symbol	imax		8922271						
ANR	8923939	Symbol	* c		8922271						
ANR	8923940	Symbol	IS_DIGIT		8922271						
ANR	8923941	Symbol	radix		8922271						
ANR	8923942	Symbol	scan_char_decoder		8922271						
ANR	8923943	Symbol	MAX_PS_INT		8922271						
