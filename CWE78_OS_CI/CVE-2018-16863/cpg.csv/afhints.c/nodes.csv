command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	58612	File	data/converged/CVE-2018-16863_ghostpdl/afhints.c								
ANR	58613	Function	af_axis_hints_new_segment	38:2:1949:3362							
ANR	58614	FunctionDef	"af_axis_hints_new_segment (AF_AxisHints axis , FT_Memory memory , AF_Segment * asegment)"		58613	0					
ANR	58615	CompoundStatement		41:2:2103:3362	58613	0					
ANR	58616	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	42:4:2109:2140	58613	0	True				
ANR	58617	IdentifierDecl	error = FT_Err_Ok		58613	0					
ANR	58618	IdentifierDeclType	FT_Error		58613	0					
ANR	58619	Identifier	error		58613	1					
ANR	58620	AssignmentExpression	error = FT_Err_Ok		58613	2		=			
ANR	58621	Identifier	FT_Err_Ok		58613	0					
ANR	58622	Identifier	FT_Err_Ok		58613	1					
ANR	58623	IdentifierDeclStatement	AF_Segment segment = NULL ;	43:4:2146:2172	58613	1	True				
ANR	58624	IdentifierDecl	segment = NULL		58613	0					
ANR	58625	IdentifierDeclType	AF_Segment		58613	0					
ANR	58626	Identifier	segment		58613	1					
ANR	58627	AssignmentExpression	segment = NULL		58613	2		=			
ANR	58628	Identifier	NULL		58613	0					
ANR	58629	Identifier	NULL		58613	1					
ANR	58630	IfStatement	if ( axis -> num_segments < AF_SEGMENTS_EMBEDDED )		58613	2					
ANR	58631	Condition	axis -> num_segments < AF_SEGMENTS_EMBEDDED	46:9:2185:2225	58613	0	True				
ANR	58632	RelationalExpression	axis -> num_segments < AF_SEGMENTS_EMBEDDED		58613	0		<			
ANR	58633	PtrMemberAccess	axis -> num_segments		58613	0					
ANR	58634	Identifier	axis		58613	0					
ANR	58635	Identifier	num_segments		58613	1					
ANR	58636	Identifier	AF_SEGMENTS_EMBEDDED		58613	1					
ANR	58637	CompoundStatement		7:4:129:129	58613	1					
ANR	58638	IfStatement	if ( ! axis -> segments )		58613	0					
ANR	58639	Condition	! axis -> segments	48:11:2246:2260	58613	0	True				
ANR	58640	UnaryOperationExpression	! axis -> segments		58613	0					
ANR	58641	UnaryOperator	!		58613	0					
ANR	58642	PtrMemberAccess	axis -> segments		58613	1					
ANR	58643	Identifier	axis		58613	0					
ANR	58644	Identifier	segments		58613	1					
ANR	58645	CompoundStatement		9:6:166:166	58613	1					
ANR	58646	ExpressionStatement	axis -> segments = axis -> embedded . segments	50:8:2280:2324	58613	0	True				
ANR	58647	AssignmentExpression	axis -> segments = axis -> embedded . segments		58613	0		=			
ANR	58648	PtrMemberAccess	axis -> segments		58613	0					
ANR	58649	Identifier	axis		58613	0					
ANR	58650	Identifier	segments		58613	1					
ANR	58651	MemberAccess	axis -> embedded . segments		58613	1					
ANR	58652	PtrMemberAccess	axis -> embedded		58613	0					
ANR	58653	Identifier	axis		58613	0					
ANR	58654	Identifier	embedded		58613	1					
ANR	58655	Identifier	segments		58613	1					
ANR	58656	ExpressionStatement	axis -> max_segments = AF_SEGMENTS_EMBEDDED	51:8:2334:2375	58613	1	True				
ANR	58657	AssignmentExpression	axis -> max_segments = AF_SEGMENTS_EMBEDDED		58613	0		=			
ANR	58658	PtrMemberAccess	axis -> max_segments		58613	0					
ANR	58659	Identifier	axis		58613	0					
ANR	58660	Identifier	max_segments		58613	1					
ANR	58661	Identifier	AF_SEGMENTS_EMBEDDED		58613	1					
ANR	58662	ElseStatement	else		58613	0					
ANR	58663	IfStatement	if ( axis -> num_segments >= axis -> max_segments )		58613	0					
ANR	58664	Condition	axis -> num_segments >= axis -> max_segments	54:14:2405:2444	58613	0	True				
ANR	58665	RelationalExpression	axis -> num_segments >= axis -> max_segments		58613	0		>=			
ANR	58666	PtrMemberAccess	axis -> num_segments		58613	0					
ANR	58667	Identifier	axis		58613	0					
ANR	58668	Identifier	num_segments		58613	1					
ANR	58669	PtrMemberAccess	axis -> max_segments		58613	1					
ANR	58670	Identifier	axis		58613	0					
ANR	58671	Identifier	max_segments		58613	1					
ANR	58672	CompoundStatement		18:6:433:495	58613	1					
ANR	58673	IdentifierDeclStatement	FT_Int old_max = axis -> max_segments ;	56:6:2460:2496	58613	0	True				
ANR	58674	IdentifierDecl	old_max = axis -> max_segments		58613	0					
ANR	58675	IdentifierDeclType	FT_Int		58613	0					
ANR	58676	Identifier	old_max		58613	1					
ANR	58677	AssignmentExpression	old_max = axis -> max_segments		58613	2		=			
ANR	58678	Identifier	old_max		58613	0					
ANR	58679	PtrMemberAccess	axis -> max_segments		58613	1					
ANR	58680	Identifier	axis		58613	0					
ANR	58681	Identifier	max_segments		58613	1					
ANR	58682	IdentifierDeclStatement	FT_Int new_max = old_max ;	57:6:2504:2529	58613	1	True				
ANR	58683	IdentifierDecl	new_max = old_max		58613	0					
ANR	58684	IdentifierDeclType	FT_Int		58613	0					
ANR	58685	Identifier	new_max		58613	1					
ANR	58686	AssignmentExpression	new_max = old_max		58613	2		=			
ANR	58687	Identifier	old_max		58613	0					
ANR	58688	Identifier	old_max		58613	1					
ANR	58689	IdentifierDeclStatement	FT_Int big_max = ( FT_Int ) ( FT_INT_MAX / sizeof ( * segment ) ) ;	58:6:2537:2599	58613	2	True				
ANR	58690	IdentifierDecl	big_max = ( FT_Int ) ( FT_INT_MAX / sizeof ( * segment ) )		58613	0					
ANR	58691	IdentifierDeclType	FT_Int		58613	0					
ANR	58692	Identifier	big_max		58613	1					
ANR	58693	AssignmentExpression	big_max = ( FT_Int ) ( FT_INT_MAX / sizeof ( * segment ) )		58613	2		=			
ANR	58694	Identifier	big_max		58613	0					
ANR	58695	CastExpression	( FT_Int ) ( FT_INT_MAX / sizeof ( * segment ) )		58613	1					
ANR	58696	CastTarget	FT_Int		58613	0					
ANR	58697	MultiplicativeExpression	FT_INT_MAX / sizeof ( * segment )		58613	1		/			
ANR	58698	Identifier	FT_INT_MAX		58613	0					
ANR	58699	SizeofExpression	sizeof ( * segment )		58613	1					
ANR	58700	Sizeof	sizeof		58613	0					
ANR	58701	UnaryOperationExpression	* segment		58613	1					
ANR	58702	UnaryOperator	*		58613	0					
ANR	58703	Identifier	segment		58613	1					
ANR	58704	IfStatement	if ( old_max >= big_max )		58613	3					
ANR	58705	Condition	old_max >= big_max	61:11:2614:2631	58613	0	True				
ANR	58706	RelationalExpression	old_max >= big_max		58613	0		>=			
ANR	58707	Identifier	old_max		58613	0					
ANR	58708	Identifier	big_max		58613	1					
ANR	58709	CompoundStatement		22:6:537:537	58613	1					
ANR	58710	ExpressionStatement	error = FT_THROW ( Out_Of_Memory )	63:8:2651:2684	58613	0	True				
ANR	58711	AssignmentExpression	error = FT_THROW ( Out_Of_Memory )		58613	0		=			
ANR	58712	Identifier	error		58613	0					
ANR	58713	CallExpression	FT_THROW ( Out_Of_Memory )		58613	1					
ANR	58714	Callee	FT_THROW		58613	0					
ANR	58715	Identifier	FT_THROW		58613	0					
ANR	58716	ArgumentList	Out_Of_Memory		58613	1					
ANR	58717	Argument	Out_Of_Memory		58613	0					
ANR	58718	Identifier	Out_Of_Memory		58613	0					
ANR	58719	GotoStatement	goto Exit ;	64:8:2694:2703	58613	1	True				
ANR	58720	Identifier	Exit		58613	0					
ANR	58721	ExpressionStatement	new_max += ( new_max >> 2 ) + 4	67:6:2720:2751	58613	4	True				
ANR	58722	AssignmentExpression	new_max += ( new_max >> 2 ) + 4		58613	0		+=			
ANR	58723	Identifier	new_max		58613	0					
ANR	58724	AdditiveExpression	( new_max >> 2 ) + 4		58613	1		+			
ANR	58725	ShiftExpression	new_max >> 2		58613	0		>>			
ANR	58726	Identifier	new_max		58613	0					
ANR	58727	PrimaryExpression	2		58613	1					
ANR	58728	PrimaryExpression	4		58613	1					
ANR	58729	IfStatement	if ( new_max < old_max || new_max > big_max )		58613	5					
ANR	58730	Condition	new_max < old_max || new_max > big_max	68:11:2764:2801	58613	0	True				
ANR	58731	OrExpression	new_max < old_max || new_max > big_max		58613	0		||			
ANR	58732	RelationalExpression	new_max < old_max		58613	0		<			
ANR	58733	Identifier	new_max		58613	0					
ANR	58734	Identifier	old_max		58613	1					
ANR	58735	RelationalExpression	new_max > big_max		58613	1		>			
ANR	58736	Identifier	new_max		58613	0					
ANR	58737	Identifier	big_max		58613	1					
ANR	58738	ExpressionStatement	new_max = big_max	69:8:2813:2830	58613	1	True				
ANR	58739	AssignmentExpression	new_max = big_max		58613	0		=			
ANR	58740	Identifier	new_max		58613	0					
ANR	58741	Identifier	big_max		58613	1					
ANR	58742	IfStatement	if ( axis -> segments == axis -> embedded . segments )		58613	6					
ANR	58743	Condition	axis -> segments == axis -> embedded . segments	71:11:2844:2884	58613	0	True				
ANR	58744	EqualityExpression	axis -> segments == axis -> embedded . segments		58613	0		==			
ANR	58745	PtrMemberAccess	axis -> segments		58613	0					
ANR	58746	Identifier	axis		58613	0					
ANR	58747	Identifier	segments		58613	1					
ANR	58748	MemberAccess	axis -> embedded . segments		58613	1					
ANR	58749	PtrMemberAccess	axis -> embedded		58613	0					
ANR	58750	Identifier	axis		58613	0					
ANR	58751	Identifier	embedded		58613	1					
ANR	58752	Identifier	segments		58613	1					
ANR	58753	CompoundStatement		32:6:790:790	58613	1					
ANR	58754	IfStatement	"if ( FT_NEW_ARRAY ( axis -> segments , new_max ) )"		58613	0					
ANR	58755	Condition	"FT_NEW_ARRAY ( axis -> segments , new_max )"	73:13:2909:2947	58613	0	True				
ANR	58756	CallExpression	"FT_NEW_ARRAY ( axis -> segments , new_max )"		58613	0					
ANR	58757	Callee	FT_NEW_ARRAY		58613	0					
ANR	58758	Identifier	FT_NEW_ARRAY		58613	0					
ANR	58759	ArgumentList	axis -> segments		58613	1					
ANR	58760	Argument	axis -> segments		58613	0					
ANR	58761	PtrMemberAccess	axis -> segments		58613	0					
ANR	58762	Identifier	axis		58613	0					
ANR	58763	Identifier	segments		58613	1					
ANR	58764	Argument	new_max		58613	1					
ANR	58765	Identifier	new_max		58613	0					
ANR	58766	GotoStatement	goto Exit ;	74:10:2961:2970	58613	1	True				
ANR	58767	Identifier	Exit		58613	0					
ANR	58768	ExpressionStatement	"ft_memcpy ( axis -> segments , axis -> embedded . segments , sizeof ( axis -> embedded . segments ) )"	75:8:2980:3087	58613	1	True				
ANR	58769	CallExpression	"ft_memcpy ( axis -> segments , axis -> embedded . segments , sizeof ( axis -> embedded . segments ) )"		58613	0					
ANR	58770	Callee	ft_memcpy		58613	0					
ANR	58771	Identifier	ft_memcpy		58613	0					
ANR	58772	ArgumentList	axis -> segments		58613	1					
ANR	58773	Argument	axis -> segments		58613	0					
ANR	58774	PtrMemberAccess	axis -> segments		58613	0					
ANR	58775	Identifier	axis		58613	0					
ANR	58776	Identifier	segments		58613	1					
ANR	58777	Argument	axis -> embedded . segments		58613	1					
ANR	58778	MemberAccess	axis -> embedded . segments		58613	0					
ANR	58779	PtrMemberAccess	axis -> embedded		58613	0					
ANR	58780	Identifier	axis		58613	0					
ANR	58781	Identifier	embedded		58613	1					
ANR	58782	Identifier	segments		58613	1					
ANR	58783	Argument	sizeof ( axis -> embedded . segments )		58613	2					
ANR	58784	SizeofExpression	sizeof ( axis -> embedded . segments )		58613	0					
ANR	58785	Sizeof	sizeof		58613	0					
ANR	58786	MemberAccess	axis -> embedded . segments		58613	1					
ANR	58787	PtrMemberAccess	axis -> embedded		58613	0					
ANR	58788	Identifier	axis		58613	0					
ANR	58789	Identifier	embedded		58613	1					
ANR	58790	Identifier	segments		58613	1					
ANR	58791	ElseStatement	else		58613	0					
ANR	58792	CompoundStatement		39:6:1010:1010	58613	0					
ANR	58793	IfStatement	"if ( FT_RENEW_ARRAY ( axis -> segments , old_max , new_max ) )"		58613	0					
ANR	58794	Condition	"FT_RENEW_ARRAY ( axis -> segments , old_max , new_max )"	80:13:3129:3178	58613	0	True				
ANR	58795	CallExpression	"FT_RENEW_ARRAY ( axis -> segments , old_max , new_max )"		58613	0					
ANR	58796	Callee	FT_RENEW_ARRAY		58613	0					
ANR	58797	Identifier	FT_RENEW_ARRAY		58613	0					
ANR	58798	ArgumentList	axis -> segments		58613	1					
ANR	58799	Argument	axis -> segments		58613	0					
ANR	58800	PtrMemberAccess	axis -> segments		58613	0					
ANR	58801	Identifier	axis		58613	0					
ANR	58802	Identifier	segments		58613	1					
ANR	58803	Argument	old_max		58613	1					
ANR	58804	Identifier	old_max		58613	0					
ANR	58805	Argument	new_max		58613	2					
ANR	58806	Identifier	new_max		58613	0					
ANR	58807	GotoStatement	goto Exit ;	81:10:3192:3201	58613	1	True				
ANR	58808	Identifier	Exit		58613	0					
ANR	58809	ExpressionStatement	axis -> max_segments = new_max	84:6:3218:3246	58613	7	True				
ANR	58810	AssignmentExpression	axis -> max_segments = new_max		58613	0		=			
ANR	58811	PtrMemberAccess	axis -> max_segments		58613	0					
ANR	58812	Identifier	axis		58613	0					
ANR	58813	Identifier	max_segments		58613	1					
ANR	58814	Identifier	new_max		58613	1					
ANR	58815	ExpressionStatement	segment = axis -> segments + axis -> num_segments ++	87:4:3259:3306	58613	3	True				
ANR	58816	AssignmentExpression	segment = axis -> segments + axis -> num_segments ++		58613	0		=			
ANR	58817	Identifier	segment		58613	0					
ANR	58818	AdditiveExpression	axis -> segments + axis -> num_segments ++		58613	1		+			
ANR	58819	PtrMemberAccess	axis -> segments		58613	0					
ANR	58820	Identifier	axis		58613	0					
ANR	58821	Identifier	segments		58613	1					
ANR	58822	PostIncDecOperationExpression	axis -> num_segments ++		58613	1					
ANR	58823	PtrMemberAccess	axis -> num_segments		58613	0					
ANR	58824	Identifier	axis		58613	0					
ANR	58825	Identifier	num_segments		58613	1					
ANR	58826	IncDec	++		58613	1					
ANR	58827	Label	Exit :	89:2:3311:3315	58613	4	True				
ANR	58828	Identifier	Exit		58613	0					
ANR	58829	ExpressionStatement	* asegment = segment	90:4:3321:3340	58613	5	True				
ANR	58830	AssignmentExpression	* asegment = segment		58613	0		=			
ANR	58831	UnaryOperationExpression	* asegment		58613	0					
ANR	58832	UnaryOperator	*		58613	0					
ANR	58833	Identifier	asegment		58613	1					
ANR	58834	Identifier	segment		58613	1					
ANR	58835	ReturnStatement	return error ;	91:4:3346:3358	58613	6	True				
ANR	58836	Identifier	error		58613	0					
ANR	58837	Identifier	af_axis_hints_new_segment		58613	1					
ANR	58838	ParameterList	"AF_AxisHints axis , FT_Memory memory , AF_Segment * asegment"		58613	2					
ANR	58839	Parameter	AF_AxisHints axis	38:29:1976:1993	58613	0	True				
ANR	58840	ParameterType	AF_AxisHints		58613	0					
ANR	58841	Identifier	axis		58613	1					
ANR	58842	Parameter	FT_Memory memory	39:29:2025:2044	58613	1	True				
ANR	58843	ParameterType	FT_Memory		58613	0					
ANR	58844	Identifier	memory		58613	1					
ANR	58845	Parameter	AF_Segment * asegment	40:29:2076:2097	58613	2	True				
ANR	58846	ParameterType	AF_Segment *		58613	0					
ANR	58847	Identifier	asegment		58613	1					
ANR	58848	CFGEntryNode	ENTRY		58613		True				
ANR	58849	CFGExitNode	EXIT		58613		True				
ANR	58850	Symbol	old_max		58613						
ANR	58851	Symbol	big_max		58613						
ANR	58852	Symbol	memory		58613						
ANR	58853	Symbol	NULL		58613						
ANR	58854	Symbol	asegment		58613						
ANR	58855	Symbol	FT_Err_Ok		58613						
ANR	58856	Symbol	axis -> num_segments		58613						
ANR	58857	Symbol	new_max		58613						
ANR	58858	Symbol	FT_INT_MAX		58613						
ANR	58859	Symbol	axis -> embedded . segments		58613						
ANR	58860	Symbol	FT_RENEW_ARRAY		58613						
ANR	58861	Symbol	* axis		58613						
ANR	58862	Symbol	axis		58613						
ANR	58863	Symbol	error		58613						
ANR	58864	Symbol	axis -> max_segments		58613						
ANR	58865	Symbol	FT_THROW		58613						
ANR	58866	Symbol	axis -> segments		58613						
ANR	58867	Symbol	axis -> embedded		58613						
ANR	58868	Symbol	segment		58613						
ANR	58869	Symbol	Out_Of_Memory		58613						
ANR	58870	Symbol	FT_NEW_ARRAY		58613						
ANR	58871	Symbol	* segment		58613						
ANR	58872	Symbol	* asegment		58613						
ANR	58873	Symbol	AF_SEGMENTS_EMBEDDED		58613						
ANR	58874	Function	af_axis_hints_new_edge	99:2:3516:5487							
ANR	58875	FunctionDef	"af_axis_hints_new_edge (AF_AxisHints axis , FT_Int fpos , AF_Direction dir , FT_Bool top_to_bottom_hinting , FT_Memory memory , AF_Edge * anedge)"		58874	0					
ANR	58876	CompoundStatement		105:2:3813:5487	58874	0					
ANR	58877	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	106:4:3819:3846	58874	0	True				
ANR	58878	IdentifierDecl	error = FT_Err_Ok		58874	0					
ANR	58879	IdentifierDeclType	FT_Error		58874	0					
ANR	58880	Identifier	error		58874	1					
ANR	58881	AssignmentExpression	error = FT_Err_Ok		58874	2		=			
ANR	58882	Identifier	FT_Err_Ok		58874	0					
ANR	58883	Identifier	FT_Err_Ok		58874	1					
ANR	58884	IdentifierDeclStatement	AF_Edge edge = NULL ;	107:4:3852:3874	58874	1	True				
ANR	58885	IdentifierDecl	edge = NULL		58874	0					
ANR	58886	IdentifierDeclType	AF_Edge		58874	0					
ANR	58887	Identifier	edge		58874	1					
ANR	58888	AssignmentExpression	edge = NULL		58874	2		=			
ANR	58889	Identifier	NULL		58874	0					
ANR	58890	Identifier	NULL		58874	1					
ANR	58891	IdentifierDeclStatement	AF_Edge edges ;	108:4:3880:3895	58874	2	True				
ANR	58892	IdentifierDecl	edges		58874	0					
ANR	58893	IdentifierDeclType	AF_Edge		58874	0					
ANR	58894	Identifier	edges		58874	1					
ANR	58895	IfStatement	if ( axis -> num_edges < AF_EDGES_EMBEDDED )		58874	3					
ANR	58896	Condition	axis -> num_edges < AF_EDGES_EMBEDDED	111:9:3908:3942	58874	0	True				
ANR	58897	RelationalExpression	axis -> num_edges < AF_EDGES_EMBEDDED		58874	0		<			
ANR	58898	PtrMemberAccess	axis -> num_edges		58874	0					
ANR	58899	Identifier	axis		58874	0					
ANR	58900	Identifier	num_edges		58874	1					
ANR	58901	Identifier	AF_EDGES_EMBEDDED		58874	1					
ANR	58902	CompoundStatement		8:4:136:136	58874	1					
ANR	58903	IfStatement	if ( ! axis -> edges )		58874	0					
ANR	58904	Condition	! axis -> edges	113:11:3963:3974	58874	0	True				
ANR	58905	UnaryOperationExpression	! axis -> edges		58874	0					
ANR	58906	UnaryOperator	!		58874	0					
ANR	58907	PtrMemberAccess	axis -> edges		58874	1					
ANR	58908	Identifier	axis		58874	0					
ANR	58909	Identifier	edges		58874	1					
ANR	58910	CompoundStatement		10:6:170:170	58874	1					
ANR	58911	ExpressionStatement	axis -> edges = axis -> embedded . edges	115:8:3994:4032	58874	0	True				
ANR	58912	AssignmentExpression	axis -> edges = axis -> embedded . edges		58874	0		=			
ANR	58913	PtrMemberAccess	axis -> edges		58874	0					
ANR	58914	Identifier	axis		58874	0					
ANR	58915	Identifier	edges		58874	1					
ANR	58916	MemberAccess	axis -> embedded . edges		58874	1					
ANR	58917	PtrMemberAccess	axis -> embedded		58874	0					
ANR	58918	Identifier	axis		58874	0					
ANR	58919	Identifier	embedded		58874	1					
ANR	58920	Identifier	edges		58874	1					
ANR	58921	ExpressionStatement	axis -> max_edges = AF_EDGES_EMBEDDED	116:8:4042:4077	58874	1	True				
ANR	58922	AssignmentExpression	axis -> max_edges = AF_EDGES_EMBEDDED		58874	0		=			
ANR	58923	PtrMemberAccess	axis -> max_edges		58874	0					
ANR	58924	Identifier	axis		58874	0					
ANR	58925	Identifier	max_edges		58874	1					
ANR	58926	Identifier	AF_EDGES_EMBEDDED		58874	1					
ANR	58927	ElseStatement	else		58874	0					
ANR	58928	IfStatement	if ( axis -> num_edges >= axis -> max_edges )		58874	0					
ANR	58929	Condition	axis -> num_edges >= axis -> max_edges	119:14:4107:4140	58874	0	True				
ANR	58930	RelationalExpression	axis -> num_edges >= axis -> max_edges		58874	0		>=			
ANR	58931	PtrMemberAccess	axis -> num_edges		58874	0					
ANR	58932	Identifier	axis		58874	0					
ANR	58933	Identifier	num_edges		58874	1					
ANR	58934	PtrMemberAccess	axis -> max_edges		58874	1					
ANR	58935	Identifier	axis		58874	0					
ANR	58936	Identifier	max_edges		58874	1					
ANR	58937	CompoundStatement		19:6:416:475	58874	1					
ANR	58938	IdentifierDeclStatement	FT_Int old_max = axis -> max_edges ;	121:6:4156:4189	58874	0	True				
ANR	58939	IdentifierDecl	old_max = axis -> max_edges		58874	0					
ANR	58940	IdentifierDeclType	FT_Int		58874	0					
ANR	58941	Identifier	old_max		58874	1					
ANR	58942	AssignmentExpression	old_max = axis -> max_edges		58874	2		=			
ANR	58943	Identifier	old_max		58874	0					
ANR	58944	PtrMemberAccess	axis -> max_edges		58874	1					
ANR	58945	Identifier	axis		58874	0					
ANR	58946	Identifier	max_edges		58874	1					
ANR	58947	IdentifierDeclStatement	FT_Int new_max = old_max ;	122:6:4197:4222	58874	1	True				
ANR	58948	IdentifierDecl	new_max = old_max		58874	0					
ANR	58949	IdentifierDeclType	FT_Int		58874	0					
ANR	58950	Identifier	new_max		58874	1					
ANR	58951	AssignmentExpression	new_max = old_max		58874	2		=			
ANR	58952	Identifier	old_max		58874	0					
ANR	58953	Identifier	old_max		58874	1					
ANR	58954	IdentifierDeclStatement	FT_Int big_max = ( FT_Int ) ( FT_INT_MAX / sizeof ( * edge ) ) ;	123:6:4230:4289	58874	2	True				
ANR	58955	IdentifierDecl	big_max = ( FT_Int ) ( FT_INT_MAX / sizeof ( * edge ) )		58874	0					
ANR	58956	IdentifierDeclType	FT_Int		58874	0					
ANR	58957	Identifier	big_max		58874	1					
ANR	58958	AssignmentExpression	big_max = ( FT_Int ) ( FT_INT_MAX / sizeof ( * edge ) )		58874	2		=			
ANR	58959	Identifier	big_max		58874	0					
ANR	58960	CastExpression	( FT_Int ) ( FT_INT_MAX / sizeof ( * edge ) )		58874	1					
ANR	58961	CastTarget	FT_Int		58874	0					
ANR	58962	MultiplicativeExpression	FT_INT_MAX / sizeof ( * edge )		58874	1		/			
ANR	58963	Identifier	FT_INT_MAX		58874	0					
ANR	58964	SizeofExpression	sizeof ( * edge )		58874	1					
ANR	58965	Sizeof	sizeof		58874	0					
ANR	58966	UnaryOperationExpression	* edge		58874	1					
ANR	58967	UnaryOperator	*		58874	0					
ANR	58968	Identifier	edge		58874	1					
ANR	58969	IfStatement	if ( old_max >= big_max )		58874	3					
ANR	58970	Condition	old_max >= big_max	126:11:4304:4321	58874	0	True				
ANR	58971	RelationalExpression	old_max >= big_max		58874	0		>=			
ANR	58972	Identifier	old_max		58874	0					
ANR	58973	Identifier	big_max		58874	1					
ANR	58974	CompoundStatement		23:6:517:517	58874	1					
ANR	58975	ExpressionStatement	error = FT_THROW ( Out_Of_Memory )	128:8:4341:4374	58874	0	True				
ANR	58976	AssignmentExpression	error = FT_THROW ( Out_Of_Memory )		58874	0		=			
ANR	58977	Identifier	error		58874	0					
ANR	58978	CallExpression	FT_THROW ( Out_Of_Memory )		58874	1					
ANR	58979	Callee	FT_THROW		58874	0					
ANR	58980	Identifier	FT_THROW		58874	0					
ANR	58981	ArgumentList	Out_Of_Memory		58874	1					
ANR	58982	Argument	Out_Of_Memory		58874	0					
ANR	58983	Identifier	Out_Of_Memory		58874	0					
ANR	58984	GotoStatement	goto Exit ;	129:8:4384:4393	58874	1	True				
ANR	58985	Identifier	Exit		58874	0					
ANR	58986	ExpressionStatement	new_max += ( new_max >> 2 ) + 4	132:6:4410:4441	58874	4	True				
ANR	58987	AssignmentExpression	new_max += ( new_max >> 2 ) + 4		58874	0		+=			
ANR	58988	Identifier	new_max		58874	0					
ANR	58989	AdditiveExpression	( new_max >> 2 ) + 4		58874	1		+			
ANR	58990	ShiftExpression	new_max >> 2		58874	0		>>			
ANR	58991	Identifier	new_max		58874	0					
ANR	58992	PrimaryExpression	2		58874	1					
ANR	58993	PrimaryExpression	4		58874	1					
ANR	58994	IfStatement	if ( new_max < old_max || new_max > big_max )		58874	5					
ANR	58995	Condition	new_max < old_max || new_max > big_max	133:11:4454:4491	58874	0	True				
ANR	58996	OrExpression	new_max < old_max || new_max > big_max		58874	0		||			
ANR	58997	RelationalExpression	new_max < old_max		58874	0		<			
ANR	58998	Identifier	new_max		58874	0					
ANR	58999	Identifier	old_max		58874	1					
ANR	59000	RelationalExpression	new_max > big_max		58874	1		>			
ANR	59001	Identifier	new_max		58874	0					
ANR	59002	Identifier	big_max		58874	1					
ANR	59003	ExpressionStatement	new_max = big_max	134:8:4503:4520	58874	1	True				
ANR	59004	AssignmentExpression	new_max = big_max		58874	0		=			
ANR	59005	Identifier	new_max		58874	0					
ANR	59006	Identifier	big_max		58874	1					
ANR	59007	IfStatement	if ( axis -> edges == axis -> embedded . edges )		58874	6					
ANR	59008	Condition	axis -> edges == axis -> embedded . edges	136:11:4534:4568	58874	0	True				
ANR	59009	EqualityExpression	axis -> edges == axis -> embedded . edges		58874	0		==			
ANR	59010	PtrMemberAccess	axis -> edges		58874	0					
ANR	59011	Identifier	axis		58874	0					
ANR	59012	Identifier	edges		58874	1					
ANR	59013	MemberAccess	axis -> embedded . edges		58874	1					
ANR	59014	PtrMemberAccess	axis -> embedded		58874	0					
ANR	59015	Identifier	axis		58874	0					
ANR	59016	Identifier	embedded		58874	1					
ANR	59017	Identifier	edges		58874	1					
ANR	59018	CompoundStatement		33:6:764:764	58874	1					
ANR	59019	IfStatement	"if ( FT_NEW_ARRAY ( axis -> edges , new_max ) )"		58874	0					
ANR	59020	Condition	"FT_NEW_ARRAY ( axis -> edges , new_max )"	138:13:4593:4628	58874	0	True				
ANR	59021	CallExpression	"FT_NEW_ARRAY ( axis -> edges , new_max )"		58874	0					
ANR	59022	Callee	FT_NEW_ARRAY		58874	0					
ANR	59023	Identifier	FT_NEW_ARRAY		58874	0					
ANR	59024	ArgumentList	axis -> edges		58874	1					
ANR	59025	Argument	axis -> edges		58874	0					
ANR	59026	PtrMemberAccess	axis -> edges		58874	0					
ANR	59027	Identifier	axis		58874	0					
ANR	59028	Identifier	edges		58874	1					
ANR	59029	Argument	new_max		58874	1					
ANR	59030	Identifier	new_max		58874	0					
ANR	59031	GotoStatement	goto Exit ;	139:10:4642:4651	58874	1	True				
ANR	59032	Identifier	Exit		58874	0					
ANR	59033	ExpressionStatement	"ft_memcpy ( axis -> edges , axis -> embedded . edges , sizeof ( axis -> embedded . edges ) )"	140:8:4661:4759	58874	1	True				
ANR	59034	CallExpression	"ft_memcpy ( axis -> edges , axis -> embedded . edges , sizeof ( axis -> embedded . edges ) )"		58874	0					
ANR	59035	Callee	ft_memcpy		58874	0					
ANR	59036	Identifier	ft_memcpy		58874	0					
ANR	59037	ArgumentList	axis -> edges		58874	1					
ANR	59038	Argument	axis -> edges		58874	0					
ANR	59039	PtrMemberAccess	axis -> edges		58874	0					
ANR	59040	Identifier	axis		58874	0					
ANR	59041	Identifier	edges		58874	1					
ANR	59042	Argument	axis -> embedded . edges		58874	1					
ANR	59043	MemberAccess	axis -> embedded . edges		58874	0					
ANR	59044	PtrMemberAccess	axis -> embedded		58874	0					
ANR	59045	Identifier	axis		58874	0					
ANR	59046	Identifier	embedded		58874	1					
ANR	59047	Identifier	edges		58874	1					
ANR	59048	Argument	sizeof ( axis -> embedded . edges )		58874	2					
ANR	59049	SizeofExpression	sizeof ( axis -> embedded . edges )		58874	0					
ANR	59050	Sizeof	sizeof		58874	0					
ANR	59051	MemberAccess	axis -> embedded . edges		58874	1					
ANR	59052	PtrMemberAccess	axis -> embedded		58874	0					
ANR	59053	Identifier	axis		58874	0					
ANR	59054	Identifier	embedded		58874	1					
ANR	59055	Identifier	edges		58874	1					
ANR	59056	ElseStatement	else		58874	0					
ANR	59057	CompoundStatement		40:6:972:972	58874	0					
ANR	59058	IfStatement	"if ( FT_RENEW_ARRAY ( axis -> edges , old_max , new_max ) )"		58874	0					
ANR	59059	Condition	"FT_RENEW_ARRAY ( axis -> edges , old_max , new_max )"	145:13:4801:4847	58874	0	True				
ANR	59060	CallExpression	"FT_RENEW_ARRAY ( axis -> edges , old_max , new_max )"		58874	0					
ANR	59061	Callee	FT_RENEW_ARRAY		58874	0					
ANR	59062	Identifier	FT_RENEW_ARRAY		58874	0					
ANR	59063	ArgumentList	axis -> edges		58874	1					
ANR	59064	Argument	axis -> edges		58874	0					
ANR	59065	PtrMemberAccess	axis -> edges		58874	0					
ANR	59066	Identifier	axis		58874	0					
ANR	59067	Identifier	edges		58874	1					
ANR	59068	Argument	old_max		58874	1					
ANR	59069	Identifier	old_max		58874	0					
ANR	59070	Argument	new_max		58874	2					
ANR	59071	Identifier	new_max		58874	0					
ANR	59072	GotoStatement	goto Exit ;	146:10:4861:4870	58874	1	True				
ANR	59073	Identifier	Exit		58874	0					
ANR	59074	ExpressionStatement	axis -> max_edges = new_max	149:6:4887:4912	58874	7	True				
ANR	59075	AssignmentExpression	axis -> max_edges = new_max		58874	0		=			
ANR	59076	PtrMemberAccess	axis -> max_edges		58874	0					
ANR	59077	Identifier	axis		58874	0					
ANR	59078	Identifier	max_edges		58874	1					
ANR	59079	Identifier	new_max		58874	1					
ANR	59080	ExpressionStatement	edges = axis -> edges	152:4:4925:4944	58874	4	True				
ANR	59081	AssignmentExpression	edges = axis -> edges		58874	0		=			
ANR	59082	Identifier	edges		58874	0					
ANR	59083	PtrMemberAccess	axis -> edges		58874	1					
ANR	59084	Identifier	axis		58874	0					
ANR	59085	Identifier	edges		58874	1					
ANR	59086	ExpressionStatement	edge = edges + axis -> num_edges	153:4:4950:4981	58874	5	True				
ANR	59087	AssignmentExpression	edge = edges + axis -> num_edges		58874	0		=			
ANR	59088	Identifier	edge		58874	0					
ANR	59089	AdditiveExpression	edges + axis -> num_edges		58874	1		+			
ANR	59090	Identifier	edges		58874	0					
ANR	59091	PtrMemberAccess	axis -> num_edges		58874	1					
ANR	59092	Identifier	axis		58874	0					
ANR	59093	Identifier	num_edges		58874	1					
ANR	59094	WhileStatement	while ( edge > edges )		58874	6					
ANR	59095	Condition	edge > edges	155:12:4996:5007	58874	0	True				
ANR	59096	RelationalExpression	edge > edges		58874	0		>			
ANR	59097	Identifier	edge		58874	0					
ANR	59098	Identifier	edges		58874	1					
ANR	59099	CompoundStatement		52:4:1201:1201	58874	1					
ANR	59100	IfStatement	if ( top_to_bottom_hinting ? ( edge [ - 1 ] . fpos > fpos ) : ( edge [ - 1 ] . fpos < fpos ) )		58874	0					
ANR	59101	Condition	top_to_bottom_hinting ? ( edge [ - 1 ] . fpos > fpos ) : ( edge [ - 1 ] . fpos < fpos )	157:11:5028:5135	58874	0	True				
ANR	59102	ConditionalExpression	top_to_bottom_hinting ? ( edge [ - 1 ] . fpos > fpos ) : ( edge [ - 1 ] . fpos < fpos )		58874	0					
ANR	59103	Condition	top_to_bottom_hinting		58874	0					
ANR	59104	Identifier	top_to_bottom_hinting		58874	0					
ANR	59105	RelationalExpression	edge [ - 1 ] . fpos > fpos		58874	1		>			
ANR	59106	MemberAccess	edge [ - 1 ] . fpos		58874	0					
ANR	59107	ArrayIndexing	edge [ - 1 ]		58874	0					
ANR	59108	Identifier	edge		58874	0					
ANR	59109	UnaryOperationExpression	- 1		58874	1					
ANR	59110	UnaryOperator	-		58874	0					
ANR	59111	PrimaryExpression	1		58874	1					
ANR	59112	Identifier	fpos		58874	1					
ANR	59113	Identifier	fpos		58874	1					
ANR	59114	RelationalExpression	edge [ - 1 ] . fpos < fpos		58874	2		<			
ANR	59115	MemberAccess	edge [ - 1 ] . fpos		58874	0					
ANR	59116	ArrayIndexing	edge [ - 1 ]		58874	0					
ANR	59117	Identifier	edge		58874	0					
ANR	59118	UnaryOperationExpression	- 1		58874	1					
ANR	59119	UnaryOperator	-		58874	0					
ANR	59120	PrimaryExpression	1		58874	1					
ANR	59121	Identifier	fpos		58874	1					
ANR	59122	Identifier	fpos		58874	1					
ANR	59123	BreakStatement	break ;	159:8:5147:5152	58874	1	True				
ANR	59124	IfStatement	if ( edge [ - 1 ] . fpos == fpos && dir == axis -> major_dir )		58874	1					
ANR	59125	Condition	edge [ - 1 ] . fpos == fpos && dir == axis -> major_dir	163:11:5302:5348	58874	0	True				
ANR	59126	AndExpression	edge [ - 1 ] . fpos == fpos && dir == axis -> major_dir		58874	0		&&			
ANR	59127	EqualityExpression	edge [ - 1 ] . fpos == fpos		58874	0		==			
ANR	59128	MemberAccess	edge [ - 1 ] . fpos		58874	0					
ANR	59129	ArrayIndexing	edge [ - 1 ]		58874	0					
ANR	59130	Identifier	edge		58874	0					
ANR	59131	UnaryOperationExpression	- 1		58874	1					
ANR	59132	UnaryOperator	-		58874	0					
ANR	59133	PrimaryExpression	1		58874	1					
ANR	59134	Identifier	fpos		58874	1					
ANR	59135	Identifier	fpos		58874	1					
ANR	59136	EqualityExpression	dir == axis -> major_dir		58874	1		==			
ANR	59137	Identifier	dir		58874	0					
ANR	59138	PtrMemberAccess	axis -> major_dir		58874	1					
ANR	59139	Identifier	axis		58874	0					
ANR	59140	Identifier	major_dir		58874	1					
ANR	59141	BreakStatement	break ;	164:8:5360:5365	58874	1	True				
ANR	59142	ExpressionStatement	edge [ 0 ] = edge [ - 1 ]	166:6:5374:5392	58874	2	True				
ANR	59143	AssignmentExpression	edge [ 0 ] = edge [ - 1 ]		58874	0		=			
ANR	59144	ArrayIndexing	edge [ 0 ]		58874	0					
ANR	59145	Identifier	edge		58874	0					
ANR	59146	PrimaryExpression	0		58874	1					
ANR	59147	ArrayIndexing	edge [ - 1 ]		58874	1					
ANR	59148	Identifier	edge		58874	0					
ANR	59149	UnaryOperationExpression	- 1		58874	1					
ANR	59150	UnaryOperator	-		58874	0					
ANR	59151	PrimaryExpression	1		58874	1					
ANR	59152	ExpressionStatement	edge --	167:6:5400:5406	58874	3	True				
ANR	59153	PostIncDecOperationExpression	edge --		58874	0					
ANR	59154	Identifier	edge		58874	0					
ANR	59155	IncDec	--		58874	1					
ANR	59156	ExpressionStatement	axis -> num_edges ++	170:4:5419:5436	58874	7	True				
ANR	59157	PostIncDecOperationExpression	axis -> num_edges ++		58874	0					
ANR	59158	PtrMemberAccess	axis -> num_edges		58874	0					
ANR	59159	Identifier	axis		58874	0					
ANR	59160	Identifier	num_edges		58874	1					
ANR	59161	IncDec	++		58874	1					
ANR	59162	Label	Exit :	172:2:5441:5445	58874	8	True				
ANR	59163	Identifier	Exit		58874	0					
ANR	59164	ExpressionStatement	* anedge = edge	173:4:5451:5465	58874	9	True				
ANR	59165	AssignmentExpression	* anedge = edge		58874	0		=			
ANR	59166	UnaryOperationExpression	* anedge		58874	0					
ANR	59167	UnaryOperator	*		58874	0					
ANR	59168	Identifier	anedge		58874	1					
ANR	59169	Identifier	edge		58874	1					
ANR	59170	ReturnStatement	return error ;	174:4:5471:5483	58874	10	True				
ANR	59171	Identifier	error		58874	0					
ANR	59172	Identifier	af_axis_hints_new_edge		58874	1					
ANR	59173	ParameterList	"AF_AxisHints axis , FT_Int fpos , AF_Direction dir , FT_Bool top_to_bottom_hinting , FT_Memory memory , AF_Edge * anedge"		58874	2					
ANR	59174	Parameter	AF_AxisHints axis	99:26:3540:3557	58874	0	True				
ANR	59175	ParameterType	AF_AxisHints		58874	0					
ANR	59176	Identifier	axis		58874	1					
ANR	59177	Parameter	FT_Int fpos	100:26:3586:3603	58874	1	True				
ANR	59178	ParameterType	FT_Int		58874	0					
ANR	59179	Identifier	fpos		58874	1					
ANR	59180	Parameter	AF_Direction dir	101:26:3632:3648	58874	2	True				
ANR	59181	ParameterType	AF_Direction		58874	0					
ANR	59182	Identifier	dir		58874	1					
ANR	59183	Parameter	FT_Bool top_to_bottom_hinting	102:26:3677:3711	58874	3	True				
ANR	59184	ParameterType	FT_Bool		58874	0					
ANR	59185	Identifier	top_to_bottom_hinting		58874	1					
ANR	59186	Parameter	FT_Memory memory	103:26:3740:3759	58874	4	True				
ANR	59187	ParameterType	FT_Memory		58874	0					
ANR	59188	Identifier	memory		58874	1					
ANR	59189	Parameter	AF_Edge * anedge	104:26:3788:3807	58874	5	True				
ANR	59190	ParameterType	AF_Edge *		58874	0					
ANR	59191	Identifier	anedge		58874	1					
ANR	59192	CFGEntryNode	ENTRY		58874		True				
ANR	59193	CFGExitNode	EXIT		58874		True				
ANR	59194	Symbol	old_max		58874						
ANR	59195	Symbol	big_max		58874						
ANR	59196	Symbol	memory		58874						
ANR	59197	Symbol	FT_Err_Ok		58874						
ANR	59198	Symbol	new_max		58874						
ANR	59199	Symbol	FT_INT_MAX		58874						
ANR	59200	Symbol	axis -> major_dir		58874						
ANR	59201	Symbol	FT_RENEW_ARRAY		58874						
ANR	59202	Symbol	* axis		58874						
ANR	59203	Symbol	axis		58874						
ANR	59204	Symbol	dir		58874						
ANR	59205	Symbol	error		58874						
ANR	59206	Symbol	edge		58874						
ANR	59207	Symbol	axis -> embedded		58874						
ANR	59208	Symbol	* anedge		58874						
ANR	59209	Symbol	axis -> embedded . edges		58874						
ANR	59210	Symbol	fpos		58874						
ANR	59211	Symbol	NULL		58874						
ANR	59212	Symbol	edges		58874						
ANR	59213	Symbol	top_to_bottom_hinting		58874						
ANR	59214	Symbol	anedge		58874						
ANR	59215	Symbol	AF_EDGES_EMBEDDED		58874						
ANR	59216	Symbol	axis -> max_edges		58874						
ANR	59217	Symbol	* edge		58874						
ANR	59218	Symbol	FT_THROW		58874						
ANR	59219	Symbol	axis -> num_edges		58874						
ANR	59220	Symbol	axis -> edges		58874						
ANR	59221	Symbol	Out_Of_Memory		58874						
ANR	59222	Symbol	FT_NEW_ARRAY		58874						
ANR	59223	Symbol	edge [ - 1 ] . fpos		58874						
ANR	59224	DeclStmt									
ANR	59225	Decl							printf	printf	varformat
ANR	59226	Function	af_dir_str	193:2:5934:6337							
ANR	59227	FunctionDef	af_dir_str (AF_Direction dir)		59226	0					
ANR	59228	CompoundStatement		195:2:5989:6337	59226	0					
ANR	59229	IdentifierDeclStatement	const char * result ;	196:4:5995:6014	59226	0	True				
ANR	59230	IdentifierDecl	* result		59226	0					
ANR	59231	IdentifierDeclType	const char *		59226	0					
ANR	59232	Identifier	result		59226	1					
ANR	59233	SwitchStatement	switch ( dir )		59226	1					
ANR	59234	Condition	dir	199:13:6031:6033	59226	0	True				
ANR	59235	Identifier	dir		59226	0					
ANR	59236	CompoundStatement		6:4:51:51	59226	1					
ANR	59237	Label	case AF_DIR_UP :	201:4:6047:6061	59226	0	True				
ANR	59238	Identifier	AF_DIR_UP		59226	0					
ANR	59239	ExpressionStatement	"result = ""up"""	202:6:6069:6082	59226	1	True				
ANR	59240	AssignmentExpression	"result = ""up"""		59226	0		=			
ANR	59241	Identifier	result		59226	0					
ANR	59242	PrimaryExpression	"""up"""		59226	1					
ANR	59243	BreakStatement	break ;	203:6:6090:6095	59226	2	True				
ANR	59244	Label	case AF_DIR_DOWN :	204:4:6101:6117	59226	3	True				
ANR	59245	Identifier	AF_DIR_DOWN		59226	0					
ANR	59246	ExpressionStatement	"result = ""down"""	205:6:6125:6140	59226	4	True				
ANR	59247	AssignmentExpression	"result = ""down"""		59226	0		=			
ANR	59248	Identifier	result		59226	0					
ANR	59249	PrimaryExpression	"""down"""		59226	1					
ANR	59250	BreakStatement	break ;	206:6:6148:6153	59226	5	True				
ANR	59251	Label	case AF_DIR_LEFT :	207:4:6159:6175	59226	6	True				
ANR	59252	Identifier	AF_DIR_LEFT		59226	0					
ANR	59253	ExpressionStatement	"result = ""left"""	208:6:6183:6198	59226	7	True				
ANR	59254	AssignmentExpression	"result = ""left"""		59226	0		=			
ANR	59255	Identifier	result		59226	0					
ANR	59256	PrimaryExpression	"""left"""		59226	1					
ANR	59257	BreakStatement	break ;	209:6:6206:6211	59226	8	True				
ANR	59258	Label	case AF_DIR_RIGHT :	210:4:6217:6234	59226	9	True				
ANR	59259	Identifier	AF_DIR_RIGHT		59226	0					
ANR	59260	ExpressionStatement	"result = ""right"""	211:6:6242:6258	59226	10	True				
ANR	59261	AssignmentExpression	"result = ""right"""		59226	0		=			
ANR	59262	Identifier	result		59226	0					
ANR	59263	PrimaryExpression	"""right"""		59226	1					
ANR	59264	BreakStatement	break ;	212:6:6266:6271	59226	11	True				
ANR	59265	Label	default :	213:4:6277:6284	59226	12	True				
ANR	59266	Identifier	default		59226	0					
ANR	59267	ExpressionStatement	"result = ""none"""	214:6:6292:6307	59226	13	True				
ANR	59268	AssignmentExpression	"result = ""none"""		59226	0		=			
ANR	59269	Identifier	result		59226	0					
ANR	59270	PrimaryExpression	"""none"""		59226	1					
ANR	59271	ReturnStatement	return result ;	217:4:6320:6333	59226	2	True				
ANR	59272	Identifier	result		59226	0					
ANR	59273	ReturnType	static const char *		59226	1					
ANR	59274	Identifier	af_dir_str		59226	2					
ANR	59275	ParameterList	AF_Direction dir		59226	3					
ANR	59276	Parameter	AF_Direction dir	194:14:5967:5983	59226	0	True				
ANR	59277	ParameterType	AF_Direction		59226	0					
ANR	59278	Identifier	dir		59226	1					
ANR	59279	CFGEntryNode	ENTRY		59226		True				
ANR	59280	CFGExitNode	EXIT		59226		True				
ANR	59281	Symbol	result		59226						
ANR	59282	Symbol	dir		59226						
ANR	59283	Function	af_print_idx	224:2:6421:6639							
ANR	59284	FunctionDef	"af_print_idx (char * p , int idx)"		59283	0					
ANR	59285	CompoundStatement		227:2:6489:6639	59283	0					
ANR	59286	IfStatement	if ( idx == - 1 )		59283	0					
ANR	59287	Condition	idx == - 1	228:9:6500:6508	59283	0	True				
ANR	59288	EqualityExpression	idx == - 1		59283	0		==			
ANR	59289	Identifier	idx		59283	0					
ANR	59290	UnaryOperationExpression	- 1		59283	1					
ANR	59291	UnaryOperator	-		59283	0					
ANR	59292	PrimaryExpression	1		59283	1					
ANR	59293	CompoundStatement		3:4:26:26	59283	1					
ANR	59294	ExpressionStatement	p [ 0 ] = '-'	230:6:6524:6534	59283	0	True				
ANR	59295	AssignmentExpression	p [ 0 ] = '-'		59283	0		=			
ANR	59296	ArrayIndexing	p [ 0 ]		59283	0					
ANR	59297	Identifier	p		59283	0					
ANR	59298	PrimaryExpression	0		59283	1					
ANR	59299	PrimaryExpression	'-'		59283	1					
ANR	59300	ExpressionStatement	p [ 1 ] = '-'	231:6:6542:6552	59283	1	True				
ANR	59301	AssignmentExpression	p [ 1 ] = '-'		59283	0		=			
ANR	59302	ArrayIndexing	p [ 1 ]		59283	0					
ANR	59303	Identifier	p		59283	0					
ANR	59304	PrimaryExpression	1		59283	1					
ANR	59305	PrimaryExpression	'-'		59283	1					
ANR	59306	ExpressionStatement	p [ 2 ] = '\\0'	232:6:6560:6571	59283	2	True				
ANR	59307	AssignmentExpression	p [ 2 ] = '\\0'		59283	0		=			
ANR	59308	ArrayIndexing	p [ 2 ]		59283	0					
ANR	59309	Identifier	p		59283	0					
ANR	59310	PrimaryExpression	2		59283	1					
ANR	59311	PrimaryExpression	'\\0'		59283	1					
ANR	59312	ElseStatement	else		59283	0					
ANR	59313	ExpressionStatement	"ft_sprintf ( p , ""%d"" , idx )"	235:6:6594:6620	59283	0	True				
ANR	59314	CallExpression	"ft_sprintf ( p , ""%d"" , idx )"		59283	0					
ANR	59315	Callee	ft_sprintf		59283	0					
ANR	59316	Identifier	ft_sprintf		59283	0					
ANR	59317	ArgumentList	p		59283	1					
ANR	59318	Argument	p		59283	0					
ANR	59319	Identifier	p		59283	0					
ANR	59320	Argument	"""%d"""		59283	1					
ANR	59321	PrimaryExpression	"""%d"""		59283	0					
ANR	59322	Argument	idx		59283	2					
ANR	59323	Identifier	idx		59283	0					
ANR	59324	ReturnStatement	return p ;	237:4:6627:6635	59283	1	True				
ANR	59325	Identifier	p		59283	0					
ANR	59326	ReturnType	static char *		59283	1					
ANR	59327	Identifier	af_print_idx		59283	2					
ANR	59328	ParameterList	"char * p , int idx"		59283	3					
ANR	59329	Parameter	char * p	225:16:6450:6456	59283	0	True				
ANR	59330	ParameterType	char *		59283	0					
ANR	59331	Identifier	p		59283	1					
ANR	59332	Parameter	int idx	226:16:6475:6483	59283	1	True				
ANR	59333	ParameterType	int		59283	0					
ANR	59334	Identifier	idx		59283	1					
ANR	59335	CFGEntryNode	ENTRY		59283		True				
ANR	59336	CFGExitNode	EXIT		59283		True				
ANR	59337	Symbol	p		59283						
ANR	59338	Symbol	* p		59283						
ANR	59339	Symbol	idx		59283						
ANR	59340	Function	af_get_segment_index	241:2:6645:7597							
ANR	59341	FunctionDef	"af_get_segment_index (AF_GlyphHints hints , int point_idx , int dimension)"		59340	0					
ANR	59342	CompoundStatement		245:2:6805:7597	59340	0					
ANR	59343	IdentifierDeclStatement	AF_AxisHints axis = & hints -> axis [ dimension ] ;	246:4:6811:6859	59340	0	True				
ANR	59344	IdentifierDecl	axis = & hints -> axis [ dimension ]		59340	0					
ANR	59345	IdentifierDeclType	AF_AxisHints		59340	0					
ANR	59346	Identifier	axis		59340	1					
ANR	59347	AssignmentExpression	axis = & hints -> axis [ dimension ]		59340	2		=			
ANR	59348	Identifier	axis		59340	0					
ANR	59349	UnaryOperationExpression	& hints -> axis [ dimension ]		59340	1					
ANR	59350	UnaryOperator	&		59340	0					
ANR	59351	ArrayIndexing	hints -> axis [ dimension ]		59340	1					
ANR	59352	PtrMemberAccess	hints -> axis		59340	0					
ANR	59353	Identifier	hints		59340	0					
ANR	59354	Identifier	axis		59340	1					
ANR	59355	Identifier	dimension		59340	1					
ANR	59356	IdentifierDeclStatement	AF_Point point = hints -> points + point_idx ;	247:4:6865:6915	59340	1	True				
ANR	59357	IdentifierDecl	point = hints -> points + point_idx		59340	0					
ANR	59358	IdentifierDeclType	AF_Point		59340	0					
ANR	59359	Identifier	point		59340	1					
ANR	59360	AssignmentExpression	point = hints -> points + point_idx		59340	2		=			
ANR	59361	Identifier	point		59340	0					
ANR	59362	AdditiveExpression	hints -> points + point_idx		59340	1		+			
ANR	59363	PtrMemberAccess	hints -> points		59340	0					
ANR	59364	Identifier	hints		59340	0					
ANR	59365	Identifier	points		59340	1					
ANR	59366	Identifier	point_idx		59340	1					
ANR	59367	IdentifierDeclStatement	AF_Segment segments = axis -> segments ;	248:4:6921:6960	59340	2	True				
ANR	59368	IdentifierDecl	segments = axis -> segments		59340	0					
ANR	59369	IdentifierDeclType	AF_Segment		59340	0					
ANR	59370	Identifier	segments		59340	1					
ANR	59371	AssignmentExpression	segments = axis -> segments		59340	2		=			
ANR	59372	Identifier	segments		59340	0					
ANR	59373	PtrMemberAccess	axis -> segments		59340	1					
ANR	59374	Identifier	axis		59340	0					
ANR	59375	Identifier	segments		59340	1					
ANR	59376	IdentifierDeclStatement	AF_Segment limit = segments + axis -> num_segments ;	249:4:6966:7020	59340	3	True				
ANR	59377	IdentifierDecl	limit = segments + axis -> num_segments		59340	0					
ANR	59378	IdentifierDeclType	AF_Segment		59340	0					
ANR	59379	Identifier	limit		59340	1					
ANR	59380	AssignmentExpression	limit = segments + axis -> num_segments		59340	2		=			
ANR	59381	Identifier	limit		59340	0					
ANR	59382	AdditiveExpression	segments + axis -> num_segments		59340	1		+			
ANR	59383	Identifier	segments		59340	0					
ANR	59384	PtrMemberAccess	axis -> num_segments		59340	1					
ANR	59385	Identifier	axis		59340	0					
ANR	59386	Identifier	num_segments		59340	1					
ANR	59387	IdentifierDeclStatement	AF_Segment segment ;	250:4:7026:7047	59340	4	True				
ANR	59388	IdentifierDecl	segment		59340	0					
ANR	59389	IdentifierDeclType	AF_Segment		59340	0					
ANR	59390	Identifier	segment		59340	1					
ANR	59391	ForStatement	for ( segment = segments ; segment < limit ; segment ++ )		59340	5					
ANR	59392	ForInit	segment = segments ;	253:10:7061:7079	59340	0	True				
ANR	59393	AssignmentExpression	segment = segments		59340	0		=			
ANR	59394	Identifier	segment		59340	0					
ANR	59395	Identifier	segments		59340	1					
ANR	59396	Condition	segment < limit	253:30:7081:7095	59340	1	True				
ANR	59397	RelationalExpression	segment < limit		59340	0		<			
ANR	59398	Identifier	segment		59340	0					
ANR	59399	Identifier	limit		59340	1					
ANR	59400	PostIncDecOperationExpression	segment ++	253:47:7098:7106	59340	2	True				
ANR	59401	Identifier	segment		59340	0					
ANR	59402	IncDec	++		59340	1					
ANR	59403	CompoundStatement		10:4:308:308	59340	3					
ANR	59404	IfStatement	if ( segment -> first <= segment -> last )		59340	0					
ANR	59405	Condition	segment -> first <= segment -> last	255:11:7127:7157	59340	0	True				
ANR	59406	RelationalExpression	segment -> first <= segment -> last		59340	0		<=			
ANR	59407	PtrMemberAccess	segment -> first		59340	0					
ANR	59408	Identifier	segment		59340	0					
ANR	59409	Identifier	first		59340	1					
ANR	59410	PtrMemberAccess	segment -> last		59340	1					
ANR	59411	Identifier	segment		59340	0					
ANR	59412	Identifier	last		59340	1					
ANR	59413	CompoundStatement		12:6:361:361	59340	1					
ANR	59414	IfStatement	if ( point >= segment -> first && point <= segment -> last )		59340	0					
ANR	59415	Condition	point >= segment -> first && point <= segment -> last	257:13:7182:7230	59340	0	True				
ANR	59416	AndExpression	point >= segment -> first && point <= segment -> last		59340	0		&&			
ANR	59417	RelationalExpression	point >= segment -> first		59340	0		>=			
ANR	59418	Identifier	point		59340	0					
ANR	59419	PtrMemberAccess	segment -> first		59340	1					
ANR	59420	Identifier	segment		59340	0					
ANR	59421	Identifier	first		59340	1					
ANR	59422	RelationalExpression	point <= segment -> last		59340	1		<=			
ANR	59423	Identifier	point		59340	0					
ANR	59424	PtrMemberAccess	segment -> last		59340	1					
ANR	59425	Identifier	segment		59340	0					
ANR	59426	Identifier	last		59340	1					
ANR	59427	BreakStatement	break ;	258:10:7244:7249	59340	1	True				
ANR	59428	ElseStatement	else		59340	0					
ANR	59429	CompoundStatement		18:8:480:508	59340	0					
ANR	59430	IdentifierDeclStatement	AF_Point p = segment -> first ;	262:8:7286:7314	59340	0	True				
ANR	59431	IdentifierDecl	p = segment -> first		59340	0					
ANR	59432	IdentifierDeclType	AF_Point		59340	0					
ANR	59433	Identifier	p		59340	1					
ANR	59434	AssignmentExpression	p = segment -> first		59340	2		=			
ANR	59435	Identifier	p		59340	0					
ANR	59436	PtrMemberAccess	segment -> first		59340	1					
ANR	59437	Identifier	segment		59340	0					
ANR	59438	Identifier	first		59340	1					
ANR	59439	ForStatement	for ( ; ; )		59340	1					
ANR	59440	CompoundStatement		22:8:537:537	59340	0					
ANR	59441	IfStatement	if ( point == p )		59340	0					
ANR	59442	Condition	point == p	267:15:7360:7369	59340	0	True				
ANR	59443	EqualityExpression	point == p		59340	0		==			
ANR	59444	Identifier	point		59340	0					
ANR	59445	Identifier	p		59340	1					
ANR	59446	GotoStatement	goto Exit ;	268:12:7385:7394	59340	1	True				
ANR	59447	Identifier	Exit		59340	0					
ANR	59448	IfStatement	if ( p == segment -> last )		59340	1					
ANR	59449	Condition	p == segment -> last	270:15:7412:7429	59340	0	True				
ANR	59450	EqualityExpression	p == segment -> last		59340	0		==			
ANR	59451	Identifier	p		59340	0					
ANR	59452	PtrMemberAccess	segment -> last		59340	1					
ANR	59453	Identifier	segment		59340	0					
ANR	59454	Identifier	last		59340	1					
ANR	59455	BreakStatement	break ;	271:12:7445:7450	59340	1	True				
ANR	59456	ExpressionStatement	p = p -> next	273:10:7463:7474	59340	2	True				
ANR	59457	AssignmentExpression	p = p -> next		59340	0		=			
ANR	59458	Identifier	p		59340	0					
ANR	59459	PtrMemberAccess	p -> next		59340	1					
ANR	59460	Identifier	p		59340	0					
ANR	59461	Identifier	next		59340	1					
ANR	59462	Label	Exit :	278:2:7503:7507	59340	6	True				
ANR	59463	Identifier	Exit		59340	0					
ANR	59464	IfStatement	if ( segment == limit )		59340	7					
ANR	59465	Condition	segment == limit	279:9:7518:7533	59340	0	True				
ANR	59466	EqualityExpression	segment == limit		59340	0		==			
ANR	59467	Identifier	segment		59340	0					
ANR	59468	Identifier	limit		59340	1					
ANR	59469	ReturnStatement	return - 1 ;	280:6:7543:7552	59340	1	True				
ANR	59470	UnaryOperationExpression	- 1		59340	0					
ANR	59471	UnaryOperator	-		59340	0					
ANR	59472	PrimaryExpression	1		59340	1					
ANR	59473	ReturnStatement	return ( int ) ( segment - segments ) ;	282:4:7559:7593	59340	8	True				
ANR	59474	CastExpression	( int ) ( segment - segments )		59340	0					
ANR	59475	CastTarget	int		59340	0					
ANR	59476	AdditiveExpression	segment - segments		59340	1		-			
ANR	59477	Identifier	segment		59340	0					
ANR	59478	Identifier	segments		59340	1					
ANR	59479	ReturnType	static int		59340	1					
ANR	59480	Identifier	af_get_segment_index		59340	2					
ANR	59481	ParameterList	"AF_GlyphHints hints , int point_idx , int dimension"		59340	3					
ANR	59482	Parameter	AF_GlyphHints hints	242:24:6680:6699	59340	0	True				
ANR	59483	ParameterType	AF_GlyphHints		59340	0					
ANR	59484	Identifier	hints		59340	1					
ANR	59485	Parameter	int point_idx	243:24:6726:6749	59340	1	True				
ANR	59486	ParameterType	int		59340	0					
ANR	59487	Identifier	point_idx		59340	1					
ANR	59488	Parameter	int dimension	244:24:6776:6799	59340	2	True				
ANR	59489	ParameterType	int		59340	0					
ANR	59490	Identifier	dimension		59340	1					
ANR	59491	CFGEntryNode	ENTRY		59340		True				
ANR	59492	CFGExitNode	EXIT		59340		True				
ANR	59493	InfiniteForNode	true		59340		True				
ANR	59494	Symbol	hints -> axis		59340						
ANR	59495	Symbol	segment -> first		59340						
ANR	59496	Symbol	p -> next		59340						
ANR	59497	Symbol	axis -> num_segments		59340						
ANR	59498	Symbol	hints		59340						
ANR	59499	Symbol	point_idx		59340						
ANR	59500	Symbol	hints -> points		59340						
ANR	59501	Symbol	* axis		59340						
ANR	59502	Symbol	axis		59340						
ANR	59503	Symbol	point		59340						
ANR	59504	Symbol	segments		59340						
ANR	59505	Symbol	segment -> last		59340						
ANR	59506	Symbol	p		59340						
ANR	59507	Symbol	axis -> segments		59340						
ANR	59508	Symbol	segment		59340						
ANR	59509	Symbol	limit		59340						
ANR	59510	Symbol	* segment		59340						
ANR	59511	Symbol	* p		59340						
ANR	59512	Symbol	dimension		59340						
ANR	59513	Symbol	* hints		59340						
ANR	59514	Function	af_get_edge_index	286:2:7603:7988							
ANR	59515	FunctionDef	"af_get_edge_index (AF_GlyphHints hints , int segment_idx , int dimension)"		59514	0					
ANR	59516	CompoundStatement		290:2:7756:7988	59514	0					
ANR	59517	IdentifierDeclStatement	AF_AxisHints axis = & hints -> axis [ dimension ] ;	291:4:7762:7809	59514	0	True				
ANR	59518	IdentifierDecl	axis = & hints -> axis [ dimension ]		59514	0					
ANR	59519	IdentifierDeclType	AF_AxisHints		59514	0					
ANR	59520	Identifier	axis		59514	1					
ANR	59521	AssignmentExpression	axis = & hints -> axis [ dimension ]		59514	2		=			
ANR	59522	Identifier	axis		59514	0					
ANR	59523	UnaryOperationExpression	& hints -> axis [ dimension ]		59514	1					
ANR	59524	UnaryOperator	&		59514	0					
ANR	59525	ArrayIndexing	hints -> axis [ dimension ]		59514	1					
ANR	59526	PtrMemberAccess	hints -> axis		59514	0					
ANR	59527	Identifier	hints		59514	0					
ANR	59528	Identifier	axis		59514	1					
ANR	59529	Identifier	dimension		59514	1					
ANR	59530	IdentifierDeclStatement	AF_Edge edges = axis -> edges ;	292:4:7815:7850	59514	1	True				
ANR	59531	IdentifierDecl	edges = axis -> edges		59514	0					
ANR	59532	IdentifierDeclType	AF_Edge		59514	0					
ANR	59533	Identifier	edges		59514	1					
ANR	59534	AssignmentExpression	edges = axis -> edges		59514	2		=			
ANR	59535	Identifier	edges		59514	0					
ANR	59536	PtrMemberAccess	axis -> edges		59514	1					
ANR	59537	Identifier	axis		59514	0					
ANR	59538	Identifier	edges		59514	1					
ANR	59539	IdentifierDeclStatement	AF_Segment segment = axis -> segments + segment_idx ;	293:4:7856:7908	59514	2	True				
ANR	59540	IdentifierDecl	segment = axis -> segments + segment_idx		59514	0					
ANR	59541	IdentifierDeclType	AF_Segment		59514	0					
ANR	59542	Identifier	segment		59514	1					
ANR	59543	AssignmentExpression	segment = axis -> segments + segment_idx		59514	2		=			
ANR	59544	Identifier	segment		59514	0					
ANR	59545	AdditiveExpression	axis -> segments + segment_idx		59514	1		+			
ANR	59546	PtrMemberAccess	axis -> segments		59514	0					
ANR	59547	Identifier	axis		59514	0					
ANR	59548	Identifier	segments		59514	1					
ANR	59549	Identifier	segment_idx		59514	1					
ANR	59550	ReturnStatement	"return segment_idx == - 1 ? - 1 : AF_INDEX_NUM ( segment -> edge , edges ) ;"	296:4:7916:7984	59514	3	True				
ANR	59551	ConditionalExpression	"segment_idx == - 1 ? - 1 : AF_INDEX_NUM ( segment -> edge , edges )"		59514	0					
ANR	59552	Condition	segment_idx == - 1		59514	0					
ANR	59553	EqualityExpression	segment_idx == - 1		59514	0		==			
ANR	59554	Identifier	segment_idx		59514	0					
ANR	59555	UnaryOperationExpression	- 1		59514	1					
ANR	59556	UnaryOperator	-		59514	0					
ANR	59557	PrimaryExpression	1		59514	1					
ANR	59558	UnaryOperationExpression	- 1		59514	1					
ANR	59559	UnaryOperator	-		59514	0					
ANR	59560	PrimaryExpression	1		59514	1					
ANR	59561	CallExpression	"AF_INDEX_NUM ( segment -> edge , edges )"		59514	2					
ANR	59562	Callee	AF_INDEX_NUM		59514	0					
ANR	59563	Identifier	AF_INDEX_NUM		59514	0					
ANR	59564	ArgumentList	segment -> edge		59514	1					
ANR	59565	Argument	segment -> edge		59514	0					
ANR	59566	PtrMemberAccess	segment -> edge		59514	0					
ANR	59567	Identifier	segment		59514	0					
ANR	59568	Identifier	edge		59514	1					
ANR	59569	Argument	edges		59514	1					
ANR	59570	Identifier	edges		59514	0					
ANR	59571	ReturnType	static int		59514	1					
ANR	59572	Identifier	af_get_edge_index		59514	2					
ANR	59573	ParameterList	"AF_GlyphHints hints , int segment_idx , int dimension"		59514	3					
ANR	59574	Parameter	AF_GlyphHints hints	287:21:7635:7654	59514	0	True				
ANR	59575	ParameterType	AF_GlyphHints		59514	0					
ANR	59576	Identifier	hints		59514	1					
ANR	59577	Parameter	int segment_idx	288:21:7678:7703	59514	1	True				
ANR	59578	ParameterType	int		59514	0					
ANR	59579	Identifier	segment_idx		59514	1					
ANR	59580	Parameter	int dimension	289:21:7727:7750	59514	2	True				
ANR	59581	ParameterType	int		59514	0					
ANR	59582	Identifier	dimension		59514	1					
ANR	59583	CFGEntryNode	ENTRY		59514		True				
ANR	59584	CFGExitNode	EXIT		59514		True				
ANR	59585	Symbol	hints -> axis		59514						
ANR	59586	Symbol	hints		59514						
ANR	59587	Symbol	edges		59514						
ANR	59588	Symbol	segment_idx		59514						
ANR	59589	Symbol	* axis		59514						
ANR	59590	Symbol	segment -> edge		59514						
ANR	59591	Symbol	axis		59514						
ANR	59592	Symbol	axis -> segments		59514						
ANR	59593	Symbol	AF_INDEX_NUM		59514						
ANR	59594	Symbol	axis -> edges		59514						
ANR	59595	Symbol	segment		59514						
ANR	59596	Symbol	* segment		59514						
ANR	59597	Symbol	dimension		59514						
ANR	59598	Symbol	* hints		59514						
ANR	59599	Function	af_glyph_hints_dump_points	303:2:8035:10128							
ANR	59600	FunctionDef	"af_glyph_hints_dump_points (AF_GlyphHints hints , FT_Bool to_stdout)"		59599	0					
ANR	59601	CompoundStatement		306:2:8151:10128	59599	0					
ANR	59602	IdentifierDeclStatement	AF_Point points = hints -> points ;	307:4:8157:8191	59599	0	True				
ANR	59603	IdentifierDecl	points = hints -> points		59599	0					
ANR	59604	IdentifierDeclType	AF_Point		59599	0					
ANR	59605	Identifier	points		59599	1					
ANR	59606	AssignmentExpression	points = hints -> points		59599	2		=			
ANR	59607	Identifier	points		59599	0					
ANR	59608	PtrMemberAccess	hints -> points		59599	1					
ANR	59609	Identifier	hints		59599	0					
ANR	59610	Identifier	points		59599	1					
ANR	59611	IdentifierDeclStatement	AF_Point limit = points + hints -> num_points ;	308:4:8197:8244	59599	1	True				
ANR	59612	IdentifierDecl	limit = points + hints -> num_points		59599	0					
ANR	59613	IdentifierDeclType	AF_Point		59599	0					
ANR	59614	Identifier	limit		59599	1					
ANR	59615	AssignmentExpression	limit = points + hints -> num_points		59599	2		=			
ANR	59616	Identifier	limit		59599	0					
ANR	59617	AdditiveExpression	points + hints -> num_points		59599	1		+			
ANR	59618	Identifier	points		59599	0					
ANR	59619	PtrMemberAccess	hints -> num_points		59599	1					
ANR	59620	Identifier	hints		59599	0					
ANR	59621	Identifier	num_points		59599	1					
ANR	59622	IdentifierDeclStatement	AF_Point * contour = hints -> contours ;	309:4:8250:8286	59599	2	True				
ANR	59623	IdentifierDecl	* contour = hints -> contours		59599	0					
ANR	59624	IdentifierDeclType	AF_Point *		59599	0					
ANR	59625	Identifier	contour		59599	1					
ANR	59626	AssignmentExpression	* contour = hints -> contours		59599	2		=			
ANR	59627	Identifier	contour		59599	0					
ANR	59628	PtrMemberAccess	hints -> contours		59599	1					
ANR	59629	Identifier	hints		59599	0					
ANR	59630	Identifier	contours		59599	1					
ANR	59631	IdentifierDeclStatement	AF_Point * climit = contour + hints -> num_contours ;	310:4:8292:8342	59599	3	True				
ANR	59632	IdentifierDecl	* climit = contour + hints -> num_contours		59599	0					
ANR	59633	IdentifierDeclType	AF_Point *		59599	0					
ANR	59634	Identifier	climit		59599	1					
ANR	59635	AssignmentExpression	* climit = contour + hints -> num_contours		59599	2		=			
ANR	59636	Identifier	climit		59599	0					
ANR	59637	AdditiveExpression	contour + hints -> num_contours		59599	1		+			
ANR	59638	Identifier	contour		59599	0					
ANR	59639	PtrMemberAccess	hints -> num_contours		59599	1					
ANR	59640	Identifier	hints		59599	0					
ANR	59641	Identifier	num_contours		59599	1					
ANR	59642	IdentifierDeclStatement	AF_Point point ;	311:4:8348:8364	59599	4	True				
ANR	59643	IdentifierDecl	point		59599	0					
ANR	59644	IdentifierDeclType	AF_Point		59599	0					
ANR	59645	Identifier	point		59599	1					
ANR	59646	ExpressionStatement	"AF_DUMP ( ( ""Table of points:\\n"" ) )"	314:4:8372:8405	59599	5	True				
ANR	59647	CallExpression	"AF_DUMP ( ( ""Table of points:\\n"" ) )"		59599	0					
ANR	59648	Callee	AF_DUMP		59599	0					
ANR	59649	Identifier	AF_DUMP		59599	0					
ANR	59650	ArgumentList	"""Table of points:\\n"""		59599	1					
ANR	59651	Argument	"""Table of points:\\n"""		59599	0					
ANR	59652	PrimaryExpression	"""Table of points:\\n"""		59599	0					
ANR	59653	IfStatement	if ( hints -> num_points )		59599	6					
ANR	59654	Condition	hints -> num_points	316:9:8417:8433	59599	0	True				
ANR	59655	PtrMemberAccess	hints -> num_points		59599	0					
ANR	59656	Identifier	hints		59599	0					
ANR	59657	Identifier	num_points		59599	1					
ANR	59658	CompoundStatement		12:4:289:289	59599	1					
ANR	59659	Statement	AF_DUMP	318:6:8449:8455	59599	0	True				
ANR	59660	Statement	(	318:13:8456:8456	59599	1	True				
ANR	59661	Statement	(	318:14:8457:8457	59599	2	True				
ANR	59662	Statement	"""  index  hedge  hseg  vedge  vseg  flags """	318:16:8459:8501	59599	3	True				
ANR	59663	Statement	"""  xorg  yorg  xscale  yscale   xfit    yfit"""	320:16:8582:8626	59599	4	True				
ANR	59664	Statement	)	320:62:8628:8628	59599	5	True				
ANR	59665	Statement	)	320:63:8629:8629	59599	6	True				
ANR	59666	ExpressionStatement		320:64:8630:8630	59599	7	True				
ANR	59667	ElseStatement	else		59599	0					
ANR	59668	ExpressionStatement	"AF_DUMP ( ( ""  (none)\\n"" ) )"	324:6:8719:8744	59599	0	True				
ANR	59669	CallExpression	"AF_DUMP ( ( ""  (none)\\n"" ) )"		59599	0					
ANR	59670	Callee	AF_DUMP		59599	0					
ANR	59671	Identifier	AF_DUMP		59599	0					
ANR	59672	ArgumentList	"""  (none)\\n"""		59599	1					
ANR	59673	Argument	"""  (none)\\n"""		59599	0					
ANR	59674	PrimaryExpression	"""  (none)\\n"""		59599	0					
ANR	59675	ForStatement	for ( point = points ; point < limit ; point ++ )		59599	7					
ANR	59676	ForInit	point = points ;	326:10:8757:8771	59599	0	True				
ANR	59677	AssignmentExpression	point = points		59599	0		=			
ANR	59678	Identifier	point		59599	0					
ANR	59679	Identifier	points		59599	1					
ANR	59680	Condition	point < limit	326:26:8773:8785	59599	1	True				
ANR	59681	RelationalExpression	point < limit		59599	0		<			
ANR	59682	Identifier	point		59599	0					
ANR	59683	Identifier	limit		59599	1					
ANR	59684	PostIncDecOperationExpression	point ++	326:41:8788:8794	59599	2	True				
ANR	59685	Identifier	point		59599	0					
ANR	59686	IncDec	++		59599	1					
ANR	59687	CompoundStatement		27:6:861:905	59599	3					
ANR	59688	IdentifierDeclStatement	"int point_idx = AF_INDEX_NUM ( point , points ) ;"	328:6:8810:8860	59599	0	True				
ANR	59689	IdentifierDecl	"point_idx = AF_INDEX_NUM ( point , points )"		59599	0					
ANR	59690	IdentifierDeclType	int		59599	0					
ANR	59691	Identifier	point_idx		59599	1					
ANR	59692	AssignmentExpression	"point_idx = AF_INDEX_NUM ( point , points )"		59599	2		=			
ANR	59693	Identifier	point_idx		59599	0					
ANR	59694	CallExpression	"AF_INDEX_NUM ( point , points )"		59599	1					
ANR	59695	Callee	AF_INDEX_NUM		59599	0					
ANR	59696	Identifier	AF_INDEX_NUM		59599	0					
ANR	59697	ArgumentList	point		59599	1					
ANR	59698	Argument	point		59599	0					
ANR	59699	Identifier	point		59599	0					
ANR	59700	Argument	points		59599	1					
ANR	59701	Identifier	points		59599	0					
ANR	59702	IdentifierDeclStatement	"int segment_idx_0 = af_get_segment_index ( hints , point_idx , 0 ) ;"	329:6:8868:8932	59599	1	True				
ANR	59703	IdentifierDecl	"segment_idx_0 = af_get_segment_index ( hints , point_idx , 0 )"		59599	0					
ANR	59704	IdentifierDeclType	int		59599	0					
ANR	59705	Identifier	segment_idx_0		59599	1					
ANR	59706	AssignmentExpression	"segment_idx_0 = af_get_segment_index ( hints , point_idx , 0 )"		59599	2		=			
ANR	59707	Identifier	segment_idx_0		59599	0					
ANR	59708	CallExpression	"af_get_segment_index ( hints , point_idx , 0 )"		59599	1					
ANR	59709	Callee	af_get_segment_index		59599	0					
ANR	59710	Identifier	af_get_segment_index		59599	0					
ANR	59711	ArgumentList	hints		59599	1					
ANR	59712	Argument	hints		59599	0					
ANR	59713	Identifier	hints		59599	0					
ANR	59714	Argument	point_idx		59599	1					
ANR	59715	Identifier	point_idx		59599	0					
ANR	59716	Argument	0		59599	2					
ANR	59717	PrimaryExpression	0		59599	0					
ANR	59718	IdentifierDeclStatement	"int segment_idx_1 = af_get_segment_index ( hints , point_idx , 1 ) ;"	330:6:8940:9004	59599	2	True				
ANR	59719	IdentifierDecl	"segment_idx_1 = af_get_segment_index ( hints , point_idx , 1 )"		59599	0					
ANR	59720	IdentifierDeclType	int		59599	0					
ANR	59721	Identifier	segment_idx_1		59599	1					
ANR	59722	AssignmentExpression	"segment_idx_1 = af_get_segment_index ( hints , point_idx , 1 )"		59599	2		=			
ANR	59723	Identifier	segment_idx_1		59599	0					
ANR	59724	CallExpression	"af_get_segment_index ( hints , point_idx , 1 )"		59599	1					
ANR	59725	Callee	af_get_segment_index		59599	0					
ANR	59726	Identifier	af_get_segment_index		59599	0					
ANR	59727	ArgumentList	hints		59599	1					
ANR	59728	Argument	hints		59599	0					
ANR	59729	Identifier	hints		59599	0					
ANR	59730	Argument	point_idx		59599	1					
ANR	59731	Identifier	point_idx		59599	0					
ANR	59732	Argument	1		59599	2					
ANR	59733	PrimaryExpression	1		59599	0					
ANR	59734	IdentifierDeclStatement	"char buf1 [ 16 ] , buf2 [ 16 ] , buf3 [ 16 ] , buf4 [ 16 ] ;"	332:6:9013:9057	59599	3	True				
ANR	59735	IdentifierDecl	buf1 [ 16 ]		59599	0					
ANR	59736	IdentifierDeclType	char [ 16 ]		59599	0					
ANR	59737	Identifier	buf1		59599	1					
ANR	59738	PrimaryExpression	16		59599	2					
ANR	59739	IdentifierDecl	buf2 [ 16 ]		59599	1					
ANR	59740	IdentifierDeclType	char [ 16 ]		59599	0					
ANR	59741	Identifier	buf2		59599	1					
ANR	59742	PrimaryExpression	16		59599	2					
ANR	59743	IdentifierDecl	buf3 [ 16 ]		59599	2					
ANR	59744	IdentifierDeclType	char [ 16 ]		59599	0					
ANR	59745	Identifier	buf3		59599	1					
ANR	59746	PrimaryExpression	16		59599	2					
ANR	59747	IdentifierDecl	buf4 [ 16 ]		59599	3					
ANR	59748	IdentifierDeclType	char [ 16 ]		59599	0					
ANR	59749	Identifier	buf4		59599	1					
ANR	59750	PrimaryExpression	16		59599	2					
ANR	59751	IfStatement	if ( contour < climit && * contour == point )		59599	4					
ANR	59752	Condition	contour < climit && * contour == point	336:11:9135:9171	59599	0	True				
ANR	59753	AndExpression	contour < climit && * contour == point		59599	0		&&			
ANR	59754	RelationalExpression	contour < climit		59599	0		<			
ANR	59755	Identifier	contour		59599	0					
ANR	59756	Identifier	climit		59599	1					
ANR	59757	EqualityExpression	* contour == point		59599	1		==			
ANR	59758	UnaryOperationExpression	* contour		59599	0					
ANR	59759	UnaryOperator	*		59599	0					
ANR	59760	Identifier	contour		59599	1					
ANR	59761	Identifier	point		59599	1					
ANR	59762	CompoundStatement		32:6:1029:1029	59599	1					
ANR	59763	ExpressionStatement	"AF_DUMP ( ( ""\\n"" ) )"	338:8:9191:9208	59599	0	True				
ANR	59764	CallExpression	"AF_DUMP ( ( ""\\n"" ) )"		59599	0					
ANR	59765	Callee	AF_DUMP		59599	0					
ANR	59766	Identifier	AF_DUMP		59599	0					
ANR	59767	ArgumentList	"""\\n"""		59599	1					
ANR	59768	Argument	"""\\n"""		59599	0					
ANR	59769	PrimaryExpression	"""\\n"""		59599	0					
ANR	59770	ExpressionStatement	contour ++	339:8:9218:9227	59599	1	True				
ANR	59771	PostIncDecOperationExpression	contour ++		59599	0					
ANR	59772	Identifier	contour		59599	0					
ANR	59773	IncDec	++		59599	1					
ANR	59774	Statement	AF_DUMP	342:6:9244:9250	59599	5	True				
ANR	59775	Statement	(	342:13:9251:9251	59599	6	True				
ANR	59776	Statement	(	342:14:9252:9252	59599	7	True				
ANR	59777	Statement	"""  %5d  %5s %5s  %5s %5s  %s"""	342:16:9254:9282	59599	8	True				
ANR	59778	Statement	""" %5d %5d %7.2f %7.2f %7.2f %7.2f\\n"""	343:16:9300:9335	59599	9	True				
ANR	59779	Statement	","	343:52:9336:9336	59599	10	True				
ANR	59780	Statement	point_idx	344:16:9354:9362	59599	11	True				
ANR	59781	Statement	","	344:25:9363:9363	59599	12	True				
ANR	59782	Statement	af_print_idx	345:16:9381:9392	59599	13	True				
ANR	59783	Statement	(	345:28:9393:9393	59599	14	True				
ANR	59784	Statement	buf1	345:30:9395:9398	59599	15	True				
ANR	59785	Statement	","	345:34:9399:9399	59599	16	True				
ANR	59786	Statement	af_get_edge_index	346:30:9431:9447	59599	17	True				
ANR	59787	Statement	(	346:47:9448:9448	59599	18	True				
ANR	59788	Statement	hints	346:49:9450:9454	59599	19	True				
ANR	59789	Statement	","	346:54:9455:9455	59599	20	True				
ANR	59790	Statement	segment_idx_1	346:56:9457:9469	59599	21	True				
ANR	59791	Statement	","	346:69:9470:9470	59599	22	True				
ANR	59792	Statement	1	346:71:9472:9472	59599	23	True				
ANR	59793	Statement	)	346:73:9474:9474	59599	24	True				
ANR	59794	Statement	)	346:75:9476:9476	59599	25	True				
ANR	59795	Statement	","	346:76:9477:9477	59599	26	True				
ANR	59796	Statement	af_print_idx	347:16:9495:9506	59599	27	True				
ANR	59797	Statement	(	347:28:9507:9507	59599	28	True				
ANR	59798	Statement	buf2	347:30:9509:9512	59599	29	True				
ANR	59799	Statement	","	347:34:9513:9513	59599	30	True				
ANR	59800	Statement	segment_idx_1	347:36:9515:9527	59599	31	True				
ANR	59801	Statement	)	347:50:9529:9529	59599	32	True				
ANR	59802	Statement	","	347:51:9530:9530	59599	33	True				
ANR	59803	Statement	af_print_idx	348:16:9548:9559	59599	34	True				
ANR	59804	Statement	(	348:28:9560:9560	59599	35	True				
ANR	59805	Statement	buf3	348:30:9562:9565	59599	36	True				
ANR	59806	Statement	","	348:34:9566:9566	59599	37	True				
ANR	59807	Statement	af_get_edge_index	349:30:9598:9614	59599	38	True				
ANR	59808	Statement	(	349:47:9615:9615	59599	39	True				
ANR	59809	Statement	hints	349:49:9617:9621	59599	40	True				
ANR	59810	Statement	","	349:54:9622:9622	59599	41	True				
ANR	59811	Statement	segment_idx_0	349:56:9624:9636	59599	42	True				
ANR	59812	Statement	","	349:69:9637:9637	59599	43	True				
ANR	59813	Statement	0	349:71:9639:9639	59599	44	True				
ANR	59814	Statement	)	349:73:9641:9641	59599	45	True				
ANR	59815	Statement	)	349:75:9643:9643	59599	46	True				
ANR	59816	Statement	","	349:76:9644:9644	59599	47	True				
ANR	59817	Statement	af_print_idx	350:16:9662:9673	59599	48	True				
ANR	59818	Statement	(	350:28:9674:9674	59599	49	True				
ANR	59819	Statement	buf4	350:30:9676:9679	59599	50	True				
ANR	59820	Statement	","	350:34:9680:9680	59599	51	True				
ANR	59821	Statement	segment_idx_0	350:36:9682:9694	59599	52	True				
ANR	59822	Statement	)	350:50:9696:9696	59599	53	True				
ANR	59823	Statement	","	350:51:9697:9697	59599	54	True				
ANR	59824	Statement	(	351:16:9715:9715	59599	55	True				
ANR	59825	Statement	point	351:18:9717:9721	59599	56	True				
ANR	59826	Statement	->	351:23:9722:9723	59599	57	True				
ANR	59827	Statement	flags	351:25:9724:9728	59599	58	True				
ANR	59828	Statement	&	351:31:9730:9730	59599	59	True				
ANR	59829	Statement	AF_FLAG_NEAR	351:33:9732:9743	59599	60	True				
ANR	59830	Statement	)	351:46:9745:9745	59599	61	True				
ANR	59831	Statement	?	352:18:9765:9765	59599	62	True				
ANR	59832	Statement	""" near """	352:20:9767:9774	59599	63	True				
ANR	59833	Statement	:	353:18:9794:9794	59599	64	True				
ANR	59834	Statement	(	353:20:9796:9796	59599	65	True				
ANR	59835	Statement	point	353:22:9798:9802	59599	66	True				
ANR	59836	Statement	->	353:27:9803:9804	59599	67	True				
ANR	59837	Statement	flags	353:29:9805:9809	59599	68	True				
ANR	59838	Statement	&	353:35:9811:9811	59599	69	True				
ANR	59839	Statement	AF_FLAG_WEAK_INTERPOLATION	353:37:9813:9838	59599	70	True				
ANR	59840	Statement	)	353:64:9840:9840	59599	71	True				
ANR	59841	Statement	?	354:20:9862:9862	59599	72	True				
ANR	59842	Statement	""" weak """	354:22:9864:9871	59599	73	True				
ANR	59843	Statement	:	355:20:9893:9893	59599	74	True				
ANR	59844	Statement	"""strong"""	355:22:9895:9902	59599	75	True				
ANR	59845	Statement	","	355:30:9903:9903	59599	76	True				
ANR	59846	Statement	point	357:16:9922:9926	59599	77	True				
ANR	59847	Statement	->	357:21:9927:9928	59599	78	True				
ANR	59848	Statement	fx	357:23:9929:9930	59599	79	True				
ANR	59849	Statement	","	357:25:9931:9931	59599	80	True				
ANR	59850	Statement	point	358:16:9949:9953	59599	81	True				
ANR	59851	Statement	->	358:21:9954:9955	59599	82	True				
ANR	59852	Statement	fy	358:23:9956:9957	59599	83	True				
ANR	59853	Statement	","	358:25:9958:9958	59599	84	True				
ANR	59854	Statement	point	359:16:9976:9980	59599	85	True				
ANR	59855	Statement	->	359:21:9981:9982	59599	86	True				
ANR	59856	Statement	ox	359:23:9983:9984	59599	87	True				
ANR	59857	Statement	/	359:26:9986:9986	59599	88	True				
ANR	59858	Statement	64.0	359:28:9988:9991	59599	89	True				
ANR	59859	Statement	","	359:32:9992:9992	59599	90	True				
ANR	59860	Statement	point	360:16:10010:10014	59599	91	True				
ANR	59861	Statement	->	360:21:10015:10016	59599	92	True				
ANR	59862	Statement	oy	360:23:10017:10018	59599	93	True				
ANR	59863	Statement	/	360:26:10020:10020	59599	94	True				
ANR	59864	Statement	64.0	360:28:10022:10025	59599	95	True				
ANR	59865	Statement	","	360:32:10026:10026	59599	96	True				
ANR	59866	Statement	point	361:16:10044:10048	59599	97	True				
ANR	59867	Statement	->	361:21:10049:10050	59599	98	True				
ANR	59868	Statement	x	361:23:10051:10051	59599	99	True				
ANR	59869	Statement	/	361:25:10053:10053	59599	100	True				
ANR	59870	Statement	64.0	361:27:10055:10058	59599	101	True				
ANR	59871	Statement	","	361:31:10059:10059	59599	102	True				
ANR	59872	Statement	point	362:16:10077:10081	59599	103	True				
ANR	59873	Statement	->	362:21:10082:10083	59599	104	True				
ANR	59874	Statement	y	362:23:10084:10084	59599	105	True				
ANR	59875	Statement	/	362:25:10086:10086	59599	106	True				
ANR	59876	Statement	64.0	362:27:10088:10091	59599	107	True				
ANR	59877	Statement	)	362:32:10093:10093	59599	108	True				
ANR	59878	Statement	)	362:33:10094:10094	59599	109	True				
ANR	59879	ExpressionStatement		362:34:10095:10095	59599	110	True				
ANR	59880	ExpressionStatement	"AF_DUMP ( ( ""\\n"" ) )"	364:4:10107:10124	59599	8	True				
ANR	59881	CallExpression	"AF_DUMP ( ( ""\\n"" ) )"		59599	0					
ANR	59882	Callee	AF_DUMP		59599	0					
ANR	59883	Identifier	AF_DUMP		59599	0					
ANR	59884	ArgumentList	"""\\n"""		59599	1					
ANR	59885	Argument	"""\\n"""		59599	0					
ANR	59886	PrimaryExpression	"""\\n"""		59599	0					
ANR	59887	ReturnType	void		59599	1					
ANR	59888	Identifier	af_glyph_hints_dump_points		59599	2					
ANR	59889	ParameterList	"AF_GlyphHints hints , FT_Bool to_stdout"		59599	3					
ANR	59890	Parameter	AF_GlyphHints hints	304:30:8070:8089	59599	0	True				
ANR	59891	ParameterType	AF_GlyphHints		59599	0					
ANR	59892	Identifier	hints		59599	1					
ANR	59893	Parameter	FT_Bool to_stdout	305:30:8122:8145	59599	1	True				
ANR	59894	ParameterType	FT_Bool		59599	0					
ANR	59895	Identifier	to_stdout		59599	1					
ANR	59896	CFGEntryNode	ENTRY		59599		True				
ANR	59897	CFGExitNode	EXIT		59599		True				
ANR	59898	Symbol	segment_idx_0		59599						
ANR	59899	Symbol	segment_idx_1		59599						
ANR	59900	Symbol	hints		59599						
ANR	59901	Symbol	hints -> points		59599						
ANR	59902	Symbol	climit		59599						
ANR	59903	Symbol	point_idx		59599						
ANR	59904	Symbol	to_stdout		59599						
ANR	59905	Symbol	contour		59599						
ANR	59906	Symbol	point		59599						
ANR	59907	Symbol	buf3		59599						
ANR	59908	Symbol	points		59599						
ANR	59909	Symbol	hints -> num_contours		59599						
ANR	59910	Symbol	buf4		59599						
ANR	59911	Symbol	buf1		59599						
ANR	59912	Symbol	AF_INDEX_NUM		59599						
ANR	59913	Symbol	buf2		59599						
ANR	59914	Symbol	* contour		59599						
ANR	59915	Symbol	hints -> num_points		59599						
ANR	59916	Symbol	limit		59599						
ANR	59917	Symbol	hints -> contours		59599						
ANR	59918	Symbol	* hints		59599						
ANR	59919	Symbol	af_get_segment_index		59599						
ANR	59920	Function	af_edge_flags_to_string	371:2:10164:10628							
ANR	59921	FunctionDef	af_edge_flags_to_string (FT_UInt flags)		59920	0					
ANR	59922	CompoundStatement		373:2:10229:10628	59920	0					
ANR	59923	Statement	static	374:4:10235:10240	59920	0	True				
ANR	59924	IdentifierDeclStatement	char temp [ 32 ] ;	374:11:10242:10256	59920	1	True				
ANR	59925	IdentifierDecl	temp [ 32 ]		59920	0					
ANR	59926	IdentifierDeclType	char [ 32 ]		59920	0					
ANR	59927	Identifier	temp		59920	1					
ANR	59928	PrimaryExpression	32		59920	2					
ANR	59929	IdentifierDeclStatement	int pos = 0 ;	375:4:10262:10282	59920	2	True				
ANR	59930	IdentifierDecl	pos = 0		59920	0					
ANR	59931	IdentifierDeclType	int		59920	0					
ANR	59932	Identifier	pos		59920	1					
ANR	59933	AssignmentExpression	pos = 0		59920	2		=			
ANR	59934	Identifier	pos		59920	0					
ANR	59935	PrimaryExpression	0		59920	1					
ANR	59936	IfStatement	if ( flags & AF_EDGE_ROUND )		59920	3					
ANR	59937	Condition	flags & AF_EDGE_ROUND	378:9:10295:10315	59920	0	True				
ANR	59938	BitAndExpression	flags & AF_EDGE_ROUND		59920	0		&			
ANR	59939	Identifier	flags		59920	0					
ANR	59940	Identifier	AF_EDGE_ROUND		59920	1					
ANR	59941	CompoundStatement		7:4:93:93	59920	1					
ANR	59942	ExpressionStatement	"ft_memcpy ( temp + pos , ""round"" , 5 )"	380:6:10331:10366	59920	0	True				
ANR	59943	CallExpression	"ft_memcpy ( temp + pos , ""round"" , 5 )"		59920	0					
ANR	59944	Callee	ft_memcpy		59920	0					
ANR	59945	Identifier	ft_memcpy		59920	0					
ANR	59946	ArgumentList	temp + pos		59920	1					
ANR	59947	Argument	temp + pos		59920	0					
ANR	59948	AdditiveExpression	temp + pos		59920	0		+			
ANR	59949	Identifier	temp		59920	0					
ANR	59950	Identifier	pos		59920	1					
ANR	59951	Argument	"""round"""		59920	1					
ANR	59952	PrimaryExpression	"""round"""		59920	0					
ANR	59953	Argument	5		59920	2					
ANR	59954	PrimaryExpression	5		59920	0					
ANR	59955	ExpressionStatement	pos += 5	381:6:10374:10382	59920	1	True				
ANR	59956	AssignmentExpression	pos += 5		59920	0		+=			
ANR	59957	Identifier	pos		59920	0					
ANR	59958	PrimaryExpression	5		59920	1					
ANR	59959	IfStatement	if ( flags & AF_EDGE_SERIF )		59920	4					
ANR	59960	Condition	flags & AF_EDGE_SERIF	383:9:10399:10419	59920	0	True				
ANR	59961	BitAndExpression	flags & AF_EDGE_SERIF		59920	0		&			
ANR	59962	Identifier	flags		59920	0					
ANR	59963	Identifier	AF_EDGE_SERIF		59920	1					
ANR	59964	CompoundStatement		12:4:197:197	59920	1					
ANR	59965	IfStatement	if ( pos > 0 )		59920	0					
ANR	59966	Condition	pos > 0	385:11:10440:10446	59920	0	True				
ANR	59967	RelationalExpression	pos > 0		59920	0		>			
ANR	59968	Identifier	pos		59920	0					
ANR	59969	PrimaryExpression	0		59920	1					
ANR	59970	ExpressionStatement	temp [ pos ++ ] = ' '	386:8:10458:10475	59920	1	True				
ANR	59971	AssignmentExpression	temp [ pos ++ ] = ' '		59920	0		=			
ANR	59972	ArrayIndexing	temp [ pos ++ ]		59920	0					
ANR	59973	Identifier	temp		59920	0					
ANR	59974	PostIncDecOperationExpression	pos ++		59920	1					
ANR	59975	Identifier	pos		59920	0					
ANR	59976	IncDec	++		59920	1					
ANR	59977	PrimaryExpression	' '		59920	1					
ANR	59978	ExpressionStatement	"ft_memcpy ( temp + pos , ""serif"" , 5 )"	387:6:10483:10518	59920	1	True				
ANR	59979	CallExpression	"ft_memcpy ( temp + pos , ""serif"" , 5 )"		59920	0					
ANR	59980	Callee	ft_memcpy		59920	0					
ANR	59981	Identifier	ft_memcpy		59920	0					
ANR	59982	ArgumentList	temp + pos		59920	1					
ANR	59983	Argument	temp + pos		59920	0					
ANR	59984	AdditiveExpression	temp + pos		59920	0		+			
ANR	59985	Identifier	temp		59920	0					
ANR	59986	Identifier	pos		59920	1					
ANR	59987	Argument	"""serif"""		59920	1					
ANR	59988	PrimaryExpression	"""serif"""		59920	0					
ANR	59989	Argument	5		59920	2					
ANR	59990	PrimaryExpression	5		59920	0					
ANR	59991	ExpressionStatement	pos += 5	388:6:10526:10534	59920	2	True				
ANR	59992	AssignmentExpression	pos += 5		59920	0		+=			
ANR	59993	Identifier	pos		59920	0					
ANR	59994	PrimaryExpression	5		59920	1					
ANR	59995	IfStatement	if ( pos == 0 )		59920	5					
ANR	59996	Condition	pos == 0	390:9:10551:10558	59920	0	True				
ANR	59997	EqualityExpression	pos == 0		59920	0		==			
ANR	59998	Identifier	pos		59920	0					
ANR	59999	PrimaryExpression	0		59920	1					
ANR	60000	ReturnStatement	"return ""normal"" ;"	391:6:10568:10583	59920	1	True				
ANR	60001	PrimaryExpression	"""normal"""		59920	0					
ANR	60002	ExpressionStatement	temp [ pos ] = '\\0'	393:4:10590:10606	59920	6	True				
ANR	60003	AssignmentExpression	temp [ pos ] = '\\0'		59920	0		=			
ANR	60004	ArrayIndexing	temp [ pos ]		59920	0					
ANR	60005	Identifier	temp		59920	0					
ANR	60006	Identifier	pos		59920	1					
ANR	60007	PrimaryExpression	'\\0'		59920	1					
ANR	60008	ReturnStatement	return temp ;	395:4:10613:10624	59920	7	True				
ANR	60009	Identifier	temp		59920	0					
ANR	60010	ReturnType	static const char *		59920	1					
ANR	60011	Identifier	af_edge_flags_to_string		59920	2					
ANR	60012	ParameterList	FT_UInt flags		59920	3					
ANR	60013	Parameter	FT_UInt flags	372:27:10210:10223	59920	0	True				
ANR	60014	ParameterType	FT_UInt		59920	0					
ANR	60015	Identifier	flags		59920	1					
ANR	60016	CFGEntryNode	ENTRY		59920		True				
ANR	60017	CFGExitNode	EXIT		59920		True				
ANR	60018	Symbol	temp		59920						
ANR	60019	Symbol	AF_EDGE_ROUND		59920						
ANR	60020	Symbol	pos		59920						
ANR	60021	Symbol	flags		59920						
ANR	60022	Symbol	AF_EDGE_SERIF		59920						
ANR	60023	Symbol	* temp		59920						
ANR	60024	Symbol	* pos		59920						
ANR	60025	Function	af_glyph_hints_dump_segments	404:2:10719:12698							
ANR	60026	FunctionDef	"af_glyph_hints_dump_segments (AF_GlyphHints hints , FT_Bool to_stdout)"		60025	0					
ANR	60027	CompoundStatement		407:2:10839:12698	60025	0					
ANR	60028	IdentifierDeclStatement	FT_Int dimension ;	408:4:10845:10862	60025	0	True				
ANR	60029	IdentifierDecl	dimension		60025	0					
ANR	60030	IdentifierDeclType	FT_Int		60025	0					
ANR	60031	Identifier	dimension		60025	1					
ANR	60032	ForStatement	for ( dimension = 1 ; dimension >= 0 ; dimension -- )		60025	1					
ANR	60033	ForInit	dimension = 1 ;	411:10:10876:10889	60025	0	True				
ANR	60034	AssignmentExpression	dimension = 1		60025	0		=			
ANR	60035	Identifier	dimension		60025	0					
ANR	60036	PrimaryExpression	1		60025	1					
ANR	60037	Condition	dimension >= 0	411:25:10891:10904	60025	1	True				
ANR	60038	RelationalExpression	dimension >= 0		60025	0		>=			
ANR	60039	Identifier	dimension		60025	0					
ANR	60040	PrimaryExpression	0		60025	1					
ANR	60041	PostIncDecOperationExpression	dimension --	411:41:10907:10917	60025	2	True				
ANR	60042	Identifier	dimension		60025	0					
ANR	60043	IncDec	--		60025	1					
ANR	60044	CompoundStatement		14:6:374:408	60025	3					
ANR	60045	IdentifierDeclStatement	AF_AxisHints axis = & hints -> axis [ dimension ] ;	413:6:10933:10981	60025	0	True				
ANR	60046	IdentifierDecl	axis = & hints -> axis [ dimension ]		60025	0					
ANR	60047	IdentifierDeclType	AF_AxisHints		60025	0					
ANR	60048	Identifier	axis		60025	1					
ANR	60049	AssignmentExpression	axis = & hints -> axis [ dimension ]		60025	2		=			
ANR	60050	Identifier	axis		60025	0					
ANR	60051	UnaryOperationExpression	& hints -> axis [ dimension ]		60025	1					
ANR	60052	UnaryOperator	&		60025	0					
ANR	60053	ArrayIndexing	hints -> axis [ dimension ]		60025	1					
ANR	60054	PtrMemberAccess	hints -> axis		60025	0					
ANR	60055	Identifier	hints		60025	0					
ANR	60056	Identifier	axis		60025	1					
ANR	60057	Identifier	dimension		60025	1					
ANR	60058	IdentifierDeclStatement	AF_Point points = hints -> points ;	414:6:10989:11027	60025	1	True				
ANR	60059	IdentifierDecl	points = hints -> points		60025	0					
ANR	60060	IdentifierDeclType	AF_Point		60025	0					
ANR	60061	Identifier	points		60025	1					
ANR	60062	AssignmentExpression	points = hints -> points		60025	2		=			
ANR	60063	Identifier	points		60025	0					
ANR	60064	PtrMemberAccess	hints -> points		60025	1					
ANR	60065	Identifier	hints		60025	0					
ANR	60066	Identifier	points		60025	1					
ANR	60067	IdentifierDeclStatement	AF_Edge edges = axis -> edges ;	415:6:11035:11071	60025	2	True				
ANR	60068	IdentifierDecl	edges = axis -> edges		60025	0					
ANR	60069	IdentifierDeclType	AF_Edge		60025	0					
ANR	60070	Identifier	edges		60025	1					
ANR	60071	AssignmentExpression	edges = axis -> edges		60025	2		=			
ANR	60072	Identifier	edges		60025	0					
ANR	60073	PtrMemberAccess	axis -> edges		60025	1					
ANR	60074	Identifier	axis		60025	0					
ANR	60075	Identifier	edges		60025	1					
ANR	60076	IdentifierDeclStatement	AF_Segment segments = axis -> segments ;	416:6:11079:11118	60025	3	True				
ANR	60077	IdentifierDecl	segments = axis -> segments		60025	0					
ANR	60078	IdentifierDeclType	AF_Segment		60025	0					
ANR	60079	Identifier	segments		60025	1					
ANR	60080	AssignmentExpression	segments = axis -> segments		60025	2		=			
ANR	60081	Identifier	segments		60025	0					
ANR	60082	PtrMemberAccess	axis -> segments		60025	1					
ANR	60083	Identifier	axis		60025	0					
ANR	60084	Identifier	segments		60025	1					
ANR	60085	IdentifierDeclStatement	AF_Segment limit = segments + axis -> num_segments ;	417:6:11126:11180	60025	4	True				
ANR	60086	IdentifierDecl	limit = segments + axis -> num_segments		60025	0					
ANR	60087	IdentifierDeclType	AF_Segment		60025	0					
ANR	60088	Identifier	limit		60025	1					
ANR	60089	AssignmentExpression	limit = segments + axis -> num_segments		60025	2		=			
ANR	60090	Identifier	limit		60025	0					
ANR	60091	AdditiveExpression	segments + axis -> num_segments		60025	1		+			
ANR	60092	Identifier	segments		60025	0					
ANR	60093	PtrMemberAccess	axis -> num_segments		60025	1					
ANR	60094	Identifier	axis		60025	0					
ANR	60095	Identifier	num_segments		60025	1					
ANR	60096	IdentifierDeclStatement	AF_Segment seg ;	418:6:11188:11205	60025	5	True				
ANR	60097	IdentifierDecl	seg		60025	0					
ANR	60098	IdentifierDeclType	AF_Segment		60025	0					
ANR	60099	Identifier	seg		60025	1					
ANR	60100	IdentifierDeclStatement	"char buf1 [ 16 ] , buf2 [ 16 ] , buf3 [ 16 ] ;"	420:6:11214:11248	60025	6	True				
ANR	60101	IdentifierDecl	buf1 [ 16 ]		60025	0					
ANR	60102	IdentifierDeclType	char [ 16 ]		60025	0					
ANR	60103	Identifier	buf1		60025	1					
ANR	60104	PrimaryExpression	16		60025	2					
ANR	60105	IdentifierDecl	buf2 [ 16 ]		60025	1					
ANR	60106	IdentifierDeclType	char [ 16 ]		60025	0					
ANR	60107	Identifier	buf2		60025	1					
ANR	60108	PrimaryExpression	16		60025	2					
ANR	60109	IdentifierDecl	buf3 [ 16 ]		60025	2					
ANR	60110	IdentifierDeclType	char [ 16 ]		60025	0					
ANR	60111	Identifier	buf3		60025	1					
ANR	60112	PrimaryExpression	16		60025	2					
ANR	60113	ExpressionStatement	"AF_DUMP ( ( ""Table of %s segments:\\n"" , dimension == AF_DIMENSION_HORZ ? ""vertical"" : ""horizontal"" ) )"	423:6:11258:11419	60025	7	True				
ANR	60114	CallExpression	"AF_DUMP ( ( ""Table of %s segments:\\n"" , dimension == AF_DIMENSION_HORZ ? ""vertical"" : ""horizontal"" ) )"		60025	0					
ANR	60115	Callee	AF_DUMP		60025	0					
ANR	60116	Identifier	AF_DUMP		60025	0					
ANR	60117	ArgumentList	"""Table of %s segments:\\n"" , dimension == AF_DIMENSION_HORZ ? ""vertical"" : ""horizontal"""		60025	1					
ANR	60118	Argument	"""Table of %s segments:\\n"" , dimension == AF_DIMENSION_HORZ ? ""vertical"" : ""horizontal"""		60025	0					
ANR	60119	Expression	"""Table of %s segments:\\n"" , dimension == AF_DIMENSION_HORZ ? ""vertical"" : ""horizontal"""		60025	0					
ANR	60120	PrimaryExpression	"""Table of %s segments:\\n"""		60025	0					
ANR	60121	ConditionalExpression	"dimension == AF_DIMENSION_HORZ ? ""vertical"" : ""horizontal"""		60025	1					
ANR	60122	Condition	dimension == AF_DIMENSION_HORZ		60025	0					
ANR	60123	EqualityExpression	dimension == AF_DIMENSION_HORZ		60025	0		==			
ANR	60124	Identifier	dimension		60025	0					
ANR	60125	Identifier	AF_DIMENSION_HORZ		60025	1					
ANR	60126	PrimaryExpression	"""vertical"""		60025	1					
ANR	60127	PrimaryExpression	"""horizontal"""		60025	2					
ANR	60128	IfStatement	if ( axis -> num_segments )		60025	8					
ANR	60129	Condition	axis -> num_segments	426:11:11432:11449	60025	0	True				
ANR	60130	PtrMemberAccess	axis -> num_segments		60025	0					
ANR	60131	Identifier	axis		60025	0					
ANR	60132	Identifier	num_segments		60025	1					
ANR	60133	CompoundStatement		21:6:619:619	60025	1					
ANR	60134	Statement	AF_DUMP	428:8:11469:11475	60025	0	True				
ANR	60135	Statement	(	428:15:11476:11476	60025	1	True				
ANR	60136	Statement	(	428:16:11477:11477	60025	2	True				
ANR	60137	Statement	"""  index   pos   delta   dir   from   to """	428:18:11479:11520	60025	3	True				
ANR	60138	Statement	"""  link  serif  edge"""	430:18:11604:11624	60025	4	True				
ANR	60139	Statement	"""  height  extra     flags\\n"""	432:18:11687:11715	60025	5	True				
ANR	60140	Statement	)	432:48:11717:11717	60025	6	True				
ANR	60141	Statement	)	432:49:11718:11718	60025	7	True				
ANR	60142	ExpressionStatement		432:50:11719:11719	60025	8	True				
ANR	60143	ElseStatement	else		60025	0					
ANR	60144	ExpressionStatement	"AF_DUMP ( ( ""  (none)\\n"" ) )"	436:8:11800:11825	60025	0	True				
ANR	60145	CallExpression	"AF_DUMP ( ( ""  (none)\\n"" ) )"		60025	0					
ANR	60146	Callee	AF_DUMP		60025	0					
ANR	60147	Identifier	AF_DUMP		60025	0					
ANR	60148	ArgumentList	"""  (none)\\n"""		60025	1					
ANR	60149	Argument	"""  (none)\\n"""		60025	0					
ANR	60150	PrimaryExpression	"""  (none)\\n"""		60025	0					
ANR	60151	ForStatement	for ( seg = segments ; seg < limit ; seg ++ )		60025	9					
ANR	60152	ForInit	seg = segments ;	438:12:11840:11854	60025	0	True				
ANR	60153	AssignmentExpression	seg = segments		60025	0		=			
ANR	60154	Identifier	seg		60025	0					
ANR	60155	Identifier	segments		60025	1					
ANR	60156	Condition	seg < limit	438:28:11856:11866	60025	1	True				
ANR	60157	RelationalExpression	seg < limit		60025	0		<			
ANR	60158	Identifier	seg		60025	0					
ANR	60159	Identifier	limit		60025	1					
ANR	60160	PostIncDecOperationExpression	seg ++	438:41:11869:11873	60025	2	True				
ANR	60161	Identifier	seg		60025	0					
ANR	60162	IncDec	++		60025	1					
ANR	60163	Statement	AF_DUMP	439:8:11885:11891	60025	3	True				
ANR	60164	Statement	(	439:15:11892:11892	60025	10	True				
ANR	60165	Statement	(	439:16:11893:11893	60025	11	True				
ANR	60166	Statement	"""  %5d  %5d  %5d  %5s  %4d  %4d"""	439:18:11895:11926	60025	12	True				
ANR	60167	Statement	"""  %4s  %5s  %4s"""	440:18:11946:11962	60025	13	True				
ANR	60168	Statement	"""  %6d  %5d  %11s\\n"""	441:18:11982:12001	60025	14	True				
ANR	60169	Statement	","	441:38:12002:12002	60025	15	True				
ANR	60170	Statement	AF_INDEX_NUM	442:18:12022:12033	60025	16	True				
ANR	60171	Statement	(	442:30:12034:12034	60025	17	True				
ANR	60172	Statement	seg	442:32:12036:12038	60025	18	True				
ANR	60173	Statement	","	442:35:12039:12039	60025	19	True				
ANR	60174	Statement	segments	442:37:12041:12048	60025	20	True				
ANR	60175	Statement	)	442:46:12050:12050	60025	21	True				
ANR	60176	Statement	","	442:47:12051:12051	60025	22	True				
ANR	60177	Statement	seg	443:18:12071:12073	60025	23	True				
ANR	60178	Statement	->	443:21:12074:12075	60025	24	True				
ANR	60179	Statement	pos	443:23:12076:12078	60025	25	True				
ANR	60180	Statement	","	443:26:12079:12079	60025	26	True				
ANR	60181	Statement	seg	444:18:12099:12101	60025	27	True				
ANR	60182	Statement	->	444:21:12102:12103	60025	28	True				
ANR	60183	Statement	delta	444:23:12104:12108	60025	29	True				
ANR	60184	Statement	","	444:28:12109:12109	60025	30	True				
ANR	60185	Statement	af_dir_str	445:18:12129:12138	60025	31	True				
ANR	60186	Statement	(	445:28:12139:12139	60025	32	True				
ANR	60187	Statement	(	445:30:12141:12141	60025	33	True				
ANR	60188	Statement	AF_Direction	445:31:12142:12153	60025	34	True				
ANR	60189	Statement	)	445:43:12154:12154	60025	35	True				
ANR	60190	Statement	seg	445:44:12155:12157	60025	36	True				
ANR	60191	Statement	->	445:47:12158:12159	60025	37	True				
ANR	60192	Statement	dir	445:49:12160:12162	60025	38	True				
ANR	60193	Statement	)	445:53:12164:12164	60025	39	True				
ANR	60194	Statement	","	445:54:12165:12165	60025	40	True				
ANR	60195	Statement	AF_INDEX_NUM	446:18:12185:12196	60025	41	True				
ANR	60196	Statement	(	446:30:12197:12197	60025	42	True				
ANR	60197	Statement	seg	446:32:12199:12201	60025	43	True				
ANR	60198	Statement	->	446:35:12202:12203	60025	44	True				
ANR	60199	Statement	first	446:37:12204:12208	60025	45	True				
ANR	60200	Statement	","	446:42:12209:12209	60025	46	True				
ANR	60201	Statement	points	446:44:12211:12216	60025	47	True				
ANR	60202	Statement	)	446:51:12218:12218	60025	48	True				
ANR	60203	Statement	","	446:52:12219:12219	60025	49	True				
ANR	60204	Statement	AF_INDEX_NUM	447:18:12239:12250	60025	50	True				
ANR	60205	Statement	(	447:30:12251:12251	60025	51	True				
ANR	60206	Statement	seg	447:32:12253:12255	60025	52	True				
ANR	60207	Statement	->	447:35:12256:12257	60025	53	True				
ANR	60208	Statement	last	447:37:12258:12261	60025	54	True				
ANR	60209	Statement	","	447:41:12262:12262	60025	55	True				
ANR	60210	Statement	points	447:43:12264:12269	60025	56	True				
ANR	60211	Statement	)	447:50:12271:12271	60025	57	True				
ANR	60212	Statement	","	447:51:12272:12272	60025	58	True				
ANR	60213	Statement	af_print_idx	449:18:12293:12304	60025	59	True				
ANR	60214	Statement	(	449:30:12305:12305	60025	60	True				
ANR	60215	Statement	buf1	449:32:12307:12310	60025	61	True				
ANR	60216	Statement	","	449:36:12311:12311	60025	62	True				
ANR	60217	Statement	AF_INDEX_NUM	449:38:12313:12324	60025	63	True				
ANR	60218	Statement	(	449:50:12325:12325	60025	64	True				
ANR	60219	Statement	seg	449:52:12327:12329	60025	65	True				
ANR	60220	Statement	->	449:55:12330:12331	60025	66	True				
ANR	60221	Statement	link	449:57:12332:12335	60025	67	True				
ANR	60222	Statement	","	449:61:12336:12336	60025	68	True				
ANR	60223	Statement	segments	449:63:12338:12345	60025	69	True				
ANR	60224	Statement	)	449:72:12347:12347	60025	70	True				
ANR	60225	Statement	)	449:74:12349:12349	60025	71	True				
ANR	60226	Statement	","	449:75:12350:12350	60025	72	True				
ANR	60227	Statement	af_print_idx	450:18:12370:12381	60025	73	True				
ANR	60228	Statement	(	450:30:12382:12382	60025	74	True				
ANR	60229	Statement	buf2	450:32:12384:12387	60025	75	True				
ANR	60230	Statement	","	450:36:12388:12388	60025	76	True				
ANR	60231	Statement	AF_INDEX_NUM	450:38:12390:12401	60025	77	True				
ANR	60232	Statement	(	450:50:12402:12402	60025	78	True				
ANR	60233	Statement	seg	450:52:12404:12406	60025	79	True				
ANR	60234	Statement	->	450:55:12407:12408	60025	80	True				
ANR	60235	Statement	serif	450:57:12409:12413	60025	81	True				
ANR	60236	Statement	","	450:62:12414:12414	60025	82	True				
ANR	60237	Statement	segments	450:64:12416:12423	60025	83	True				
ANR	60238	Statement	)	450:73:12425:12425	60025	84	True				
ANR	60239	Statement	)	450:75:12427:12427	60025	85	True				
ANR	60240	Statement	","	450:76:12428:12428	60025	86	True				
ANR	60241	Statement	af_print_idx	451:18:12448:12459	60025	87	True				
ANR	60242	Statement	(	451:30:12460:12460	60025	88	True				
ANR	60243	Statement	buf3	451:32:12462:12465	60025	89	True				
ANR	60244	Statement	","	451:36:12466:12466	60025	90	True				
ANR	60245	Statement	AF_INDEX_NUM	451:38:12468:12479	60025	91	True				
ANR	60246	Statement	(	451:50:12480:12480	60025	92	True				
ANR	60247	Statement	seg	451:52:12482:12484	60025	93	True				
ANR	60248	Statement	->	451:55:12485:12486	60025	94	True				
ANR	60249	Statement	edge	451:57:12487:12490	60025	95	True				
ANR	60250	Statement	","	451:61:12491:12491	60025	96	True				
ANR	60251	Statement	edges	451:63:12493:12497	60025	97	True				
ANR	60252	Statement	)	451:69:12499:12499	60025	98	True				
ANR	60253	Statement	)	451:71:12501:12501	60025	99	True				
ANR	60254	Statement	","	451:72:12502:12502	60025	100	True				
ANR	60255	Statement	seg	453:18:12523:12525	60025	101	True				
ANR	60256	Statement	->	453:21:12526:12527	60025	102	True				
ANR	60257	Statement	height	453:23:12528:12533	60025	103	True				
ANR	60258	Statement	","	453:29:12534:12534	60025	104	True				
ANR	60259	Statement	seg	454:18:12554:12556	60025	105	True				
ANR	60260	Statement	->	454:21:12557:12558	60025	106	True				
ANR	60261	Statement	height	454:23:12559:12564	60025	107	True				
ANR	60262	Statement	-	454:30:12566:12566	60025	108	True				
ANR	60263	Statement	(	454:32:12568:12568	60025	109	True				
ANR	60264	Statement	seg	454:34:12570:12572	60025	110	True				
ANR	60265	Statement	->	454:37:12573:12574	60025	111	True				
ANR	60266	Statement	max_coord	454:39:12575:12583	60025	112	True				
ANR	60267	Statement	-	454:49:12585:12585	60025	113	True				
ANR	60268	Statement	seg	454:51:12587:12589	60025	114	True				
ANR	60269	Statement	->	454:54:12590:12591	60025	115	True				
ANR	60270	Statement	min_coord	454:56:12592:12600	60025	116	True				
ANR	60271	Statement	)	454:66:12602:12602	60025	117	True				
ANR	60272	Statement	","	454:67:12603:12603	60025	118	True				
ANR	60273	Statement	af_edge_flags_to_string	455:18:12623:12645	60025	119	True				
ANR	60274	Statement	(	455:41:12646:12646	60025	120	True				
ANR	60275	Statement	seg	455:43:12648:12650	60025	121	True				
ANR	60276	Statement	->	455:46:12651:12652	60025	122	True				
ANR	60277	Statement	flags	455:48:12653:12657	60025	123	True				
ANR	60278	Statement	)	455:54:12659:12659	60025	124	True				
ANR	60279	Statement	)	455:56:12661:12661	60025	125	True				
ANR	60280	Statement	)	455:57:12662:12662	60025	126	True				
ANR	60281	ExpressionStatement		455:58:12663:12663	60025	127	True				
ANR	60282	ExpressionStatement	"AF_DUMP ( ( ""\\n"" ) )"	456:6:12671:12688	60025	128	True				
ANR	60283	CallExpression	"AF_DUMP ( ( ""\\n"" ) )"		60025	0					
ANR	60284	Callee	AF_DUMP		60025	0					
ANR	60285	Identifier	AF_DUMP		60025	0					
ANR	60286	ArgumentList	"""\\n"""		60025	1					
ANR	60287	Argument	"""\\n"""		60025	0					
ANR	60288	PrimaryExpression	"""\\n"""		60025	0					
ANR	60289	ReturnType	void		60025	1					
ANR	60290	Identifier	af_glyph_hints_dump_segments		60025	2					
ANR	60291	ParameterList	"AF_GlyphHints hints , FT_Bool to_stdout"		60025	3					
ANR	60292	Parameter	AF_GlyphHints hints	405:32:10756:10775	60025	0	True				
ANR	60293	ParameterType	AF_GlyphHints		60025	0					
ANR	60294	Identifier	hints		60025	1					
ANR	60295	Parameter	FT_Bool to_stdout	406:32:10810:10833	60025	1	True				
ANR	60296	ParameterType	FT_Bool		60025	0					
ANR	60297	Identifier	to_stdout		60025	1					
ANR	60298	CFGEntryNode	ENTRY		60025		True				
ANR	60299	CFGExitNode	EXIT		60025		True				
ANR	60300	Symbol	hints -> axis		60025						
ANR	60301	Symbol	axis -> num_segments		60025						
ANR	60302	Symbol	hints		60025						
ANR	60303	Symbol	edges		60025						
ANR	60304	Symbol	hints -> points		60025						
ANR	60305	Symbol	* axis		60025						
ANR	60306	Symbol	to_stdout		60025						
ANR	60307	Symbol	axis		60025						
ANR	60308	Symbol	buf3		60025						
ANR	60309	Symbol	points		60025						
ANR	60310	Symbol	segments		60025						
ANR	60311	Symbol	buf1		60025						
ANR	60312	Symbol	AF_DIMENSION_HORZ		60025						
ANR	60313	Symbol	axis -> segments		60025						
ANR	60314	Symbol	buf2		60025						
ANR	60315	Symbol	axis -> edges		60025						
ANR	60316	Symbol	seg		60025						
ANR	60317	Symbol	limit		60025						
ANR	60318	Symbol	dimension		60025						
ANR	60319	Symbol	* hints		60025						
ANR	60320	Function	af_glyph_hints_get_num_segments	469:2:12810:13230							
ANR	60321	FunctionDef	"af_glyph_hints_get_num_segments (AF_GlyphHints hints , FT_Int dimension , FT_Int * num_segments)"		60320	0					
ANR	60322	CompoundStatement		473:2:13004:13230	60320	0					
ANR	60323	IdentifierDeclStatement	AF_Dimension dim ;	474:4:13010:13027	60320	0	True				
ANR	60324	IdentifierDecl	dim		60320	0					
ANR	60325	IdentifierDeclType	AF_Dimension		60320	0					
ANR	60326	Identifier	dim		60320	1					
ANR	60327	IdentifierDeclStatement	AF_AxisHints axis ;	475:4:13033:13051	60320	1	True				
ANR	60328	IdentifierDecl	axis		60320	0					
ANR	60329	IdentifierDeclType	AF_AxisHints		60320	0					
ANR	60330	Identifier	axis		60320	1					
ANR	60331	ExpressionStatement	dim = ( dimension == 0 ) ? AF_DIMENSION_HORZ : AF_DIMENSION_VERT	478:4:13059:13123	60320	2	True				
ANR	60332	AssignmentExpression	dim = ( dimension == 0 ) ? AF_DIMENSION_HORZ : AF_DIMENSION_VERT		60320	0		=			
ANR	60333	Identifier	dim		60320	0					
ANR	60334	ConditionalExpression	( dimension == 0 ) ? AF_DIMENSION_HORZ : AF_DIMENSION_VERT		60320	1					
ANR	60335	Condition	dimension == 0		60320	0					
ANR	60336	EqualityExpression	dimension == 0		60320	0		==			
ANR	60337	Identifier	dimension		60320	0					
ANR	60338	PrimaryExpression	0		60320	1					
ANR	60339	Identifier	AF_DIMENSION_HORZ		60320	1					
ANR	60340	Identifier	AF_DIMENSION_VERT		60320	2					
ANR	60341	ExpressionStatement	axis = & hints -> axis [ dim ]	480:4:13130:13163	60320	3	True				
ANR	60342	AssignmentExpression	axis = & hints -> axis [ dim ]		60320	0		=			
ANR	60343	Identifier	axis		60320	0					
ANR	60344	UnaryOperationExpression	& hints -> axis [ dim ]		60320	1					
ANR	60345	UnaryOperator	&		60320	0					
ANR	60346	ArrayIndexing	hints -> axis [ dim ]		60320	1					
ANR	60347	PtrMemberAccess	hints -> axis		60320	0					
ANR	60348	Identifier	hints		60320	0					
ANR	60349	Identifier	axis		60320	1					
ANR	60350	Identifier	dim		60320	1					
ANR	60351	ExpressionStatement	* num_segments = axis -> num_segments	481:4:13169:13203	60320	4	True				
ANR	60352	AssignmentExpression	* num_segments = axis -> num_segments		60320	0		=			
ANR	60353	UnaryOperationExpression	* num_segments		60320	0					
ANR	60354	UnaryOperator	*		60320	0					
ANR	60355	Identifier	num_segments		60320	1					
ANR	60356	PtrMemberAccess	axis -> num_segments		60320	1					
ANR	60357	Identifier	axis		60320	0					
ANR	60358	Identifier	num_segments		60320	1					
ANR	60359	ReturnStatement	return FT_Err_Ok ;	483:4:13210:13226	60320	5	True				
ANR	60360	Identifier	FT_Err_Ok		60320	0					
ANR	60361	ReturnType	FT_Error		60320	1					
ANR	60362	Identifier	af_glyph_hints_get_num_segments		60320	2					
ANR	60363	ParameterList	"AF_GlyphHints hints , FT_Int dimension , FT_Int * num_segments"		60320	3					
ANR	60364	Parameter	AF_GlyphHints hints	470:35:12854:12873	60320	0	True				
ANR	60365	ParameterType	AF_GlyphHints		60320	0					
ANR	60366	Identifier	hints		60320	1					
ANR	60367	Parameter	FT_Int dimension	471:35:12911:12934	60320	1	True				
ANR	60368	ParameterType	FT_Int		60320	0					
ANR	60369	Identifier	dimension		60320	1					
ANR	60370	Parameter	FT_Int * num_segments	472:35:12972:12998	60320	2	True				
ANR	60371	ParameterType	FT_Int *		60320	0					
ANR	60372	Identifier	num_segments		60320	1					
ANR	60373	CFGEntryNode	ENTRY		60320		True				
ANR	60374	CFGExitNode	EXIT		60320		True				
ANR	60375	Symbol	hints -> axis		60320						
ANR	60376	Symbol	axis -> num_segments		60320						
ANR	60377	Symbol	FT_Err_Ok		60320						
ANR	60378	Symbol	hints		60320						
ANR	60379	Symbol	dim		60320						
ANR	60380	Symbol	* axis		60320						
ANR	60381	Symbol	axis		60320						
ANR	60382	Symbol	num_segments		60320						
ANR	60383	Symbol	AF_DIMENSION_HORZ		60320						
ANR	60384	Symbol	* num_segments		60320						
ANR	60385	Symbol	dimension		60320						
ANR	60386	Symbol	AF_DIMENSION_VERT		60320						
ANR	60387	Symbol	* hints		60320						
ANR	60388	Function	af_glyph_hints_get_segment_offset	495:2:13374:14480							
ANR	60389	FunctionDef	"af_glyph_hints_get_segment_offset (AF_GlyphHints hints , FT_Int dimension , FT_Int idx , FT_Pos * offset , FT_Bool * is_blue , FT_Pos * blue_offset)"		60388	0					
ANR	60390	CompoundStatement		502:2:13751:14480	60388	0					
ANR	60391	IdentifierDeclStatement	AF_Dimension dim ;	503:4:13757:13774	60388	0	True				
ANR	60392	IdentifierDecl	dim		60388	0					
ANR	60393	IdentifierDeclType	AF_Dimension		60388	0					
ANR	60394	Identifier	dim		60388	1					
ANR	60395	IdentifierDeclStatement	AF_AxisHints axis ;	504:4:13780:13798	60388	1	True				
ANR	60396	IdentifierDecl	axis		60388	0					
ANR	60397	IdentifierDeclType	AF_AxisHints		60388	0					
ANR	60398	Identifier	axis		60388	1					
ANR	60399	IdentifierDeclStatement	AF_Segment seg ;	505:4:13804:13821	60388	2	True				
ANR	60400	IdentifierDecl	seg		60388	0					
ANR	60401	IdentifierDeclType	AF_Segment		60388	0					
ANR	60402	Identifier	seg		60388	1					
ANR	60403	IfStatement	if ( ! offset )		60388	3					
ANR	60404	Condition	! offset	508:9:13834:13840	60388	0	True				
ANR	60405	UnaryOperationExpression	! offset		60388	0					
ANR	60406	UnaryOperator	!		60388	0					
ANR	60407	Identifier	offset		60388	1					
ANR	60408	ReturnStatement	return FT_THROW ( Invalid_Argument ) ;	509:6:13850:13885	60388	1	True				
ANR	60409	CallExpression	FT_THROW ( Invalid_Argument )		60388	0					
ANR	60410	Callee	FT_THROW		60388	0					
ANR	60411	Identifier	FT_THROW		60388	0					
ANR	60412	ArgumentList	Invalid_Argument		60388	1					
ANR	60413	Argument	Invalid_Argument		60388	0					
ANR	60414	Identifier	Invalid_Argument		60388	0					
ANR	60415	ExpressionStatement	dim = ( dimension == 0 ) ? AF_DIMENSION_HORZ : AF_DIMENSION_VERT	511:4:13892:13956	60388	4	True				
ANR	60416	AssignmentExpression	dim = ( dimension == 0 ) ? AF_DIMENSION_HORZ : AF_DIMENSION_VERT		60388	0		=			
ANR	60417	Identifier	dim		60388	0					
ANR	60418	ConditionalExpression	( dimension == 0 ) ? AF_DIMENSION_HORZ : AF_DIMENSION_VERT		60388	1					
ANR	60419	Condition	dimension == 0		60388	0					
ANR	60420	EqualityExpression	dimension == 0		60388	0		==			
ANR	60421	Identifier	dimension		60388	0					
ANR	60422	PrimaryExpression	0		60388	1					
ANR	60423	Identifier	AF_DIMENSION_HORZ		60388	1					
ANR	60424	Identifier	AF_DIMENSION_VERT		60388	2					
ANR	60425	ExpressionStatement	axis = & hints -> axis [ dim ]	513:4:13963:13987	60388	5	True				
ANR	60426	AssignmentExpression	axis = & hints -> axis [ dim ]		60388	0		=			
ANR	60427	Identifier	axis		60388	0					
ANR	60428	UnaryOperationExpression	& hints -> axis [ dim ]		60388	1					
ANR	60429	UnaryOperator	&		60388	0					
ANR	60430	ArrayIndexing	hints -> axis [ dim ]		60388	1					
ANR	60431	PtrMemberAccess	hints -> axis		60388	0					
ANR	60432	Identifier	hints		60388	0					
ANR	60433	Identifier	axis		60388	1					
ANR	60434	Identifier	dim		60388	1					
ANR	60435	IfStatement	if ( idx < 0 || idx >= axis -> num_segments )		60388	6					
ANR	60436	Condition	idx < 0 || idx >= axis -> num_segments	515:9:13999:14034	60388	0	True				
ANR	60437	OrExpression	idx < 0 || idx >= axis -> num_segments		60388	0		||			
ANR	60438	RelationalExpression	idx < 0		60388	0		<			
ANR	60439	Identifier	idx		60388	0					
ANR	60440	PrimaryExpression	0		60388	1					
ANR	60441	RelationalExpression	idx >= axis -> num_segments		60388	1		>=			
ANR	60442	Identifier	idx		60388	0					
ANR	60443	PtrMemberAccess	axis -> num_segments		60388	1					
ANR	60444	Identifier	axis		60388	0					
ANR	60445	Identifier	num_segments		60388	1					
ANR	60446	ReturnStatement	return FT_THROW ( Invalid_Argument ) ;	516:6:14044:14079	60388	1	True				
ANR	60447	CallExpression	FT_THROW ( Invalid_Argument )		60388	0					
ANR	60448	Callee	FT_THROW		60388	0					
ANR	60449	Identifier	FT_THROW		60388	0					
ANR	60450	ArgumentList	Invalid_Argument		60388	1					
ANR	60451	Argument	Invalid_Argument		60388	0					
ANR	60452	Identifier	Invalid_Argument		60388	0					
ANR	60453	ExpressionStatement	seg = & axis -> segments [ idx ]	518:4:14086:14117	60388	7	True				
ANR	60454	AssignmentExpression	seg = & axis -> segments [ idx ]		60388	0		=			
ANR	60455	Identifier	seg		60388	0					
ANR	60456	UnaryOperationExpression	& axis -> segments [ idx ]		60388	1					
ANR	60457	UnaryOperator	&		60388	0					
ANR	60458	ArrayIndexing	axis -> segments [ idx ]		60388	1					
ANR	60459	PtrMemberAccess	axis -> segments		60388	0					
ANR	60460	Identifier	axis		60388	0					
ANR	60461	Identifier	segments		60388	1					
ANR	60462	Identifier	idx		60388	1					
ANR	60463	ExpressionStatement	* offset = ( dim == AF_DIMENSION_HORZ ) ? seg -> first -> fx : seg -> first -> fy	519:4:14123:14240	60388	8	True				
ANR	60464	AssignmentExpression	* offset = ( dim == AF_DIMENSION_HORZ ) ? seg -> first -> fx : seg -> first -> fy		60388	0		=			
ANR	60465	UnaryOperationExpression	* offset		60388	0					
ANR	60466	UnaryOperator	*		60388	0					
ANR	60467	Identifier	offset		60388	1					
ANR	60468	ConditionalExpression	( dim == AF_DIMENSION_HORZ ) ? seg -> first -> fx : seg -> first -> fy		60388	1					
ANR	60469	Condition	dim == AF_DIMENSION_HORZ		60388	0					
ANR	60470	EqualityExpression	dim == AF_DIMENSION_HORZ		60388	0		==			
ANR	60471	Identifier	dim		60388	0					
ANR	60472	Identifier	AF_DIMENSION_HORZ		60388	1					
ANR	60473	PtrMemberAccess	seg -> first -> fx		60388	1					
ANR	60474	PtrMemberAccess	seg -> first		60388	0					
ANR	60475	Identifier	seg		60388	0					
ANR	60476	Identifier	first		60388	1					
ANR	60477	Identifier	fx		60388	1					
ANR	60478	PtrMemberAccess	seg -> first -> fy		60388	2					
ANR	60479	PtrMemberAccess	seg -> first		60388	0					
ANR	60480	Identifier	seg		60388	0					
ANR	60481	Identifier	first		60388	1					
ANR	60482	Identifier	fy		60388	1					
ANR	60483	IfStatement	if ( seg -> edge )		60388	9					
ANR	60484	Condition	seg -> edge	521:9:14251:14259	60388	0	True				
ANR	60485	PtrMemberAccess	seg -> edge		60388	0					
ANR	60486	Identifier	seg		60388	0					
ANR	60487	Identifier	edge		60388	1					
ANR	60488	ExpressionStatement	* is_blue = ( FT_Bool ) ( seg -> edge -> blue_edge != 0 )	522:6:14269:14318	60388	1	True				
ANR	60489	AssignmentExpression	* is_blue = ( FT_Bool ) ( seg -> edge -> blue_edge != 0 )		60388	0		=			
ANR	60490	UnaryOperationExpression	* is_blue		60388	0					
ANR	60491	UnaryOperator	*		60388	0					
ANR	60492	Identifier	is_blue		60388	1					
ANR	60493	CastExpression	( FT_Bool ) ( seg -> edge -> blue_edge != 0 )		60388	1					
ANR	60494	CastTarget	FT_Bool		60388	0					
ANR	60495	EqualityExpression	seg -> edge -> blue_edge != 0		60388	1		!=			
ANR	60496	PtrMemberAccess	seg -> edge -> blue_edge		60388	0					
ANR	60497	PtrMemberAccess	seg -> edge		60388	0					
ANR	60498	Identifier	seg		60388	0					
ANR	60499	Identifier	edge		60388	1					
ANR	60500	Identifier	blue_edge		60388	1					
ANR	60501	PrimaryExpression	0		60388	1					
ANR	60502	ElseStatement	else		60388	0					
ANR	60503	ExpressionStatement	* is_blue = FALSE	524:6:14335:14351	60388	0	True				
ANR	60504	AssignmentExpression	* is_blue = FALSE		60388	0		=			
ANR	60505	UnaryOperationExpression	* is_blue		60388	0					
ANR	60506	UnaryOperator	*		60388	0					
ANR	60507	Identifier	is_blue		60388	1					
ANR	60508	Identifier	FALSE		60388	1					
ANR	60509	IfStatement	if ( * is_blue )		60388	10					
ANR	60510	Condition	* is_blue	526:9:14363:14370	60388	0	True				
ANR	60511	UnaryOperationExpression	* is_blue		60388	0					
ANR	60512	UnaryOperator	*		60388	0					
ANR	60513	Identifier	is_blue		60388	1					
ANR	60514	ExpressionStatement	* blue_offset = seg -> edge -> blue_edge -> org	527:6:14380:14420	60388	1	True				
ANR	60515	AssignmentExpression	* blue_offset = seg -> edge -> blue_edge -> org		60388	0		=			
ANR	60516	UnaryOperationExpression	* blue_offset		60388	0					
ANR	60517	UnaryOperator	*		60388	0					
ANR	60518	Identifier	blue_offset		60388	1					
ANR	60519	PtrMemberAccess	seg -> edge -> blue_edge -> org		60388	1					
ANR	60520	PtrMemberAccess	seg -> edge -> blue_edge		60388	0					
ANR	60521	PtrMemberAccess	seg -> edge		60388	0					
ANR	60522	Identifier	seg		60388	0					
ANR	60523	Identifier	edge		60388	1					
ANR	60524	Identifier	blue_edge		60388	1					
ANR	60525	Identifier	org		60388	1					
ANR	60526	ElseStatement	else		60388	0					
ANR	60527	ExpressionStatement	* blue_offset = 0	529:6:14437:14453	60388	0	True				
ANR	60528	AssignmentExpression	* blue_offset = 0		60388	0		=			
ANR	60529	UnaryOperationExpression	* blue_offset		60388	0					
ANR	60530	UnaryOperator	*		60388	0					
ANR	60531	Identifier	blue_offset		60388	1					
ANR	60532	PrimaryExpression	0		60388	1					
ANR	60533	ReturnStatement	return FT_Err_Ok ;	531:4:14460:14476	60388	11	True				
ANR	60534	Identifier	FT_Err_Ok		60388	0					
ANR	60535	ReturnType	FT_Error		60388	1					
ANR	60536	Identifier	af_glyph_hints_get_segment_offset		60388	2					
ANR	60537	ParameterList	"AF_GlyphHints hints , FT_Int dimension , FT_Int idx , FT_Pos * offset , FT_Bool * is_blue , FT_Pos * blue_offset"		60388	3					
ANR	60538	Parameter	AF_GlyphHints hints	496:37:13420:13439	60388	0	True				
ANR	60539	ParameterType	AF_GlyphHints		60388	0					
ANR	60540	Identifier	hints		60388	1					
ANR	60541	Parameter	FT_Int dimension	497:37:13479:13502	60388	1	True				
ANR	60542	ParameterType	FT_Int		60388	0					
ANR	60543	Identifier	dimension		60388	1					
ANR	60544	Parameter	FT_Int idx	498:37:13542:13559	60388	2	True				
ANR	60545	ParameterType	FT_Int		60388	0					
ANR	60546	Identifier	idx		60388	1					
ANR	60547	Parameter	FT_Pos * offset	499:37:13599:13619	60388	3	True				
ANR	60548	ParameterType	FT_Pos *		60388	0					
ANR	60549	Identifier	offset		60388	1					
ANR	60550	Parameter	FT_Bool * is_blue	500:37:13659:13680	60388	4	True				
ANR	60551	ParameterType	FT_Bool *		60388	0					
ANR	60552	Identifier	is_blue		60388	1					
ANR	60553	Parameter	FT_Pos * blue_offset	501:37:13720:13745	60388	5	True				
ANR	60554	ParameterType	FT_Pos *		60388	0					
ANR	60555	Identifier	blue_offset		60388	1					
ANR	60556	CFGEntryNode	ENTRY		60388		True				
ANR	60557	CFGExitNode	EXIT		60388		True				
ANR	60558	Symbol	* seg -> edge		60388						
ANR	60559	Symbol	FT_Err_Ok		60388						
ANR	60560	Symbol	* seg -> first		60388						
ANR	60561	Symbol	dim		60388						
ANR	60562	Symbol	* axis		60388						
ANR	60563	Symbol	axis		60388						
ANR	60564	Symbol	seg -> first		60388						
ANR	60565	Symbol	AF_DIMENSION_HORZ		60388						
ANR	60566	Symbol	axis -> segments		60388						
ANR	60567	Symbol	* * seg -> edge		60388						
ANR	60568	Symbol	* * * seg		60388						
ANR	60569	Symbol	blue_offset		60388						
ANR	60570	Symbol	seg		60388						
ANR	60571	Symbol	seg -> edge -> blue_edge		60388						
ANR	60572	Symbol	seg -> first -> fy		60388						
ANR	60573	Symbol	seg -> first -> fx		60388						
ANR	60574	Symbol	seg -> edge		60388						
ANR	60575	Symbol	is_blue		60388						
ANR	60576	Symbol	dimension		60388						
ANR	60577	Symbol	* hints		60388						
ANR	60578	Symbol	hints -> axis		60388						
ANR	60579	Symbol	* blue_offset		60388						
ANR	60580	Symbol	offset		60388						
ANR	60581	Symbol	axis -> num_segments		60388						
ANR	60582	Symbol	hints		60388						
ANR	60583	Symbol	* * seg		60388						
ANR	60584	Symbol	Invalid_Argument		60388						
ANR	60585	Symbol	* is_blue		60388						
ANR	60586	Symbol	FT_THROW		60388						
ANR	60587	Symbol	* offset		60388						
ANR	60588	Symbol	FALSE		60388						
ANR	60589	Symbol	idx		60388						
ANR	60590	Symbol	AF_DIMENSION_VERT		60388						
ANR	60591	Symbol	seg -> edge -> blue_edge -> org		60388						
ANR	60592	Symbol	* seg		60388						
ANR	60593	Symbol	* seg -> edge -> blue_edge		60388						
ANR	60594	Function	af_glyph_hints_dump_edges	543:2:14598:16615							
ANR	60595	FunctionDef	"af_glyph_hints_dump_edges (AF_GlyphHints hints , FT_Bool to_stdout)"		60594	0					
ANR	60596	CompoundStatement		546:2:14712:16615	60594	0					
ANR	60597	IdentifierDeclStatement	FT_Int dimension ;	547:4:14718:14735	60594	0	True				
ANR	60598	IdentifierDecl	dimension		60594	0					
ANR	60599	IdentifierDeclType	FT_Int		60594	0					
ANR	60600	Identifier	dimension		60594	1					
ANR	60601	ForStatement	for ( dimension = 1 ; dimension >= 0 ; dimension -- )		60594	1					
ANR	60602	ForInit	dimension = 1 ;	550:10:14749:14762	60594	0	True				
ANR	60603	AssignmentExpression	dimension = 1		60594	0		=			
ANR	60604	Identifier	dimension		60594	0					
ANR	60605	PrimaryExpression	1		60594	1					
ANR	60606	Condition	dimension >= 0	550:25:14764:14777	60594	1	True				
ANR	60607	RelationalExpression	dimension >= 0		60594	0		>=			
ANR	60608	Identifier	dimension		60594	0					
ANR	60609	PrimaryExpression	0		60594	1					
ANR	60610	PostIncDecOperationExpression	dimension --	550:41:14780:14790	60594	2	True				
ANR	60611	Identifier	dimension		60594	0					
ANR	60612	IncDec	--		60594	1					
ANR	60613	CompoundStatement		12:6:267:291	60594	3					
ANR	60614	IdentifierDeclStatement	AF_AxisHints axis = & hints -> axis [ dimension ] ;	552:6:14806:14851	60594	0	True				
ANR	60615	IdentifierDecl	axis = & hints -> axis [ dimension ]		60594	0					
ANR	60616	IdentifierDeclType	AF_AxisHints		60594	0					
ANR	60617	Identifier	axis		60594	1					
ANR	60618	AssignmentExpression	axis = & hints -> axis [ dimension ]		60594	2		=			
ANR	60619	Identifier	axis		60594	0					
ANR	60620	UnaryOperationExpression	& hints -> axis [ dimension ]		60594	1					
ANR	60621	UnaryOperator	&		60594	0					
ANR	60622	ArrayIndexing	hints -> axis [ dimension ]		60594	1					
ANR	60623	PtrMemberAccess	hints -> axis		60594	0					
ANR	60624	Identifier	hints		60594	0					
ANR	60625	Identifier	axis		60594	1					
ANR	60626	Identifier	dimension		60594	1					
ANR	60627	IdentifierDeclStatement	AF_Edge edges = axis -> edges ;	553:6:14859:14892	60594	1	True				
ANR	60628	IdentifierDecl	edges = axis -> edges		60594	0					
ANR	60629	IdentifierDeclType	AF_Edge		60594	0					
ANR	60630	Identifier	edges		60594	1					
ANR	60631	AssignmentExpression	edges = axis -> edges		60594	2		=			
ANR	60632	Identifier	edges		60594	0					
ANR	60633	PtrMemberAccess	axis -> edges		60594	1					
ANR	60634	Identifier	axis		60594	0					
ANR	60635	Identifier	edges		60594	1					
ANR	60636	IdentifierDeclStatement	AF_Edge limit = edges + axis -> num_edges ;	554:6:14900:14945	60594	2	True				
ANR	60637	IdentifierDecl	limit = edges + axis -> num_edges		60594	0					
ANR	60638	IdentifierDeclType	AF_Edge		60594	0					
ANR	60639	Identifier	limit		60594	1					
ANR	60640	AssignmentExpression	limit = edges + axis -> num_edges		60594	2		=			
ANR	60641	Identifier	limit		60594	0					
ANR	60642	AdditiveExpression	edges + axis -> num_edges		60594	1		+			
ANR	60643	Identifier	edges		60594	0					
ANR	60644	PtrMemberAccess	axis -> num_edges		60594	1					
ANR	60645	Identifier	axis		60594	0					
ANR	60646	Identifier	num_edges		60594	1					
ANR	60647	IdentifierDeclStatement	AF_Edge edge ;	555:6:14953:14971	60594	3	True				
ANR	60648	IdentifierDecl	edge		60594	0					
ANR	60649	IdentifierDeclType	AF_Edge		60594	0					
ANR	60650	Identifier	edge		60594	1					
ANR	60651	IdentifierDeclStatement	"char buf1 [ 16 ] , buf2 [ 16 ] ;"	557:6:14980:15004	60594	4	True				
ANR	60652	IdentifierDecl	buf1 [ 16 ]		60594	0					
ANR	60653	IdentifierDeclType	char [ 16 ]		60594	0					
ANR	60654	Identifier	buf1		60594	1					
ANR	60655	PrimaryExpression	16		60594	2					
ANR	60656	IdentifierDecl	buf2 [ 16 ]		60594	1					
ANR	60657	IdentifierDeclType	char [ 16 ]		60594	0					
ANR	60658	Identifier	buf2		60594	1					
ANR	60659	PrimaryExpression	16		60594	2					
ANR	60660	IfStatement	if ( dimension == AF_DIMENSION_HORZ )		60594	5					
ANR	60661	Condition	dimension == AF_DIMENSION_HORZ	564:11:15161:15190	60594	0	True				
ANR	60662	EqualityExpression	dimension == AF_DIMENSION_HORZ		60594	0		==			
ANR	60663	Identifier	dimension		60594	0					
ANR	60664	Identifier	AF_DIMENSION_HORZ		60594	1					
ANR	60665	ExpressionStatement	"AF_DUMP ( ( ""Table of %s edges (1px=%.2fu, 10u=%.2fpx):\\n"" , ""vertical"" , 65536.0 * 64.0 / hints -> x_scale , 10.0 * hints -> x_scale / 65536.0 / 64.0 ) )"	565:8:15202:15400	60594	1	True				
ANR	60666	CallExpression	"AF_DUMP ( ( ""Table of %s edges (1px=%.2fu, 10u=%.2fpx):\\n"" , ""vertical"" , 65536.0 * 64.0 / hints -> x_scale , 10.0 * hints -> x_scale / 65536.0 / 64.0 ) )"		60594	0					
ANR	60667	Callee	AF_DUMP		60594	0					
ANR	60668	Identifier	AF_DUMP		60594	0					
ANR	60669	ArgumentList	"""Table of %s edges (1px=%.2fu, 10u=%.2fpx):\\n"" , ""vertical"" , 65536.0 * 64.0 / hints -> x_scale , 10.0 * hints -> x_scale / 65536.0 / 64.0"		60594	1					
ANR	60670	Argument	"""Table of %s edges (1px=%.2fu, 10u=%.2fpx):\\n"" , ""vertical"" , 65536.0 * 64.0 / hints -> x_scale , 10.0 * hints -> x_scale / 65536.0 / 64.0"		60594	0					
ANR	60671	Expression	"""Table of %s edges (1px=%.2fu, 10u=%.2fpx):\\n"" , ""vertical"" , 65536.0 * 64.0 / hints -> x_scale , 10.0 * hints -> x_scale / 65536.0 / 64.0"		60594	0					
ANR	60672	PrimaryExpression	"""Table of %s edges (1px=%.2fu, 10u=%.2fpx):\\n"""		60594	0					
ANR	60673	Expression	"""vertical"" , 65536.0 * 64.0 / hints -> x_scale , 10.0 * hints -> x_scale / 65536.0 / 64.0"		60594	1					
ANR	60674	PrimaryExpression	"""vertical"""		60594	0					
ANR	60675	Expression	"65536.0 * 64.0 / hints -> x_scale , 10.0 * hints -> x_scale / 65536.0 / 64.0"		60594	1					
ANR	60676	MultiplicativeExpression	65536.0 * 64.0 / hints -> x_scale		60594	0		*			
ANR	60677	PrimaryExpression	65536.0		60594	0					
ANR	60678	MultiplicativeExpression	64.0 / hints -> x_scale		60594	1		/			
ANR	60679	PrimaryExpression	64.0		60594	0					
ANR	60680	PtrMemberAccess	hints -> x_scale		60594	1					
ANR	60681	Identifier	hints		60594	0					
ANR	60682	Identifier	x_scale		60594	1					
ANR	60683	MultiplicativeExpression	10.0 * hints -> x_scale / 65536.0 / 64.0		60594	1		*			
ANR	60684	PrimaryExpression	10.0		60594	0					
ANR	60685	MultiplicativeExpression	hints -> x_scale / 65536.0 / 64.0		60594	1		/			
ANR	60686	PtrMemberAccess	hints -> x_scale		60594	0					
ANR	60687	Identifier	hints		60594	0					
ANR	60688	Identifier	x_scale		60594	1					
ANR	60689	MultiplicativeExpression	65536.0 / 64.0		60594	1		/			
ANR	60690	PrimaryExpression	65536.0		60594	0					
ANR	60691	PrimaryExpression	64.0		60594	1					
ANR	60692	ElseStatement	else		60594	0					
ANR	60693	ExpressionStatement	"AF_DUMP ( ( ""Table of %s edges (1px=%.2fu, 10u=%.2fpx):\\n"" , ""horizontal"" , 65536.0 * 64.0 / hints -> y_scale , 10.0 * hints -> y_scale / 65536.0 / 64.0 ) )"	570:8:15421:15621	60594	0	True				
ANR	60694	CallExpression	"AF_DUMP ( ( ""Table of %s edges (1px=%.2fu, 10u=%.2fpx):\\n"" , ""horizontal"" , 65536.0 * 64.0 / hints -> y_scale , 10.0 * hints -> y_scale / 65536.0 / 64.0 ) )"		60594	0					
ANR	60695	Callee	AF_DUMP		60594	0					
ANR	60696	Identifier	AF_DUMP		60594	0					
ANR	60697	ArgumentList	"""Table of %s edges (1px=%.2fu, 10u=%.2fpx):\\n"" , ""horizontal"" , 65536.0 * 64.0 / hints -> y_scale , 10.0 * hints -> y_scale / 65536.0 / 64.0"		60594	1					
ANR	60698	Argument	"""Table of %s edges (1px=%.2fu, 10u=%.2fpx):\\n"" , ""horizontal"" , 65536.0 * 64.0 / hints -> y_scale , 10.0 * hints -> y_scale / 65536.0 / 64.0"		60594	0					
ANR	60699	Expression	"""Table of %s edges (1px=%.2fu, 10u=%.2fpx):\\n"" , ""horizontal"" , 65536.0 * 64.0 / hints -> y_scale , 10.0 * hints -> y_scale / 65536.0 / 64.0"		60594	0					
ANR	60700	PrimaryExpression	"""Table of %s edges (1px=%.2fu, 10u=%.2fpx):\\n"""		60594	0					
ANR	60701	Expression	"""horizontal"" , 65536.0 * 64.0 / hints -> y_scale , 10.0 * hints -> y_scale / 65536.0 / 64.0"		60594	1					
ANR	60702	PrimaryExpression	"""horizontal"""		60594	0					
ANR	60703	Expression	"65536.0 * 64.0 / hints -> y_scale , 10.0 * hints -> y_scale / 65536.0 / 64.0"		60594	1					
ANR	60704	MultiplicativeExpression	65536.0 * 64.0 / hints -> y_scale		60594	0		*			
ANR	60705	PrimaryExpression	65536.0		60594	0					
ANR	60706	MultiplicativeExpression	64.0 / hints -> y_scale		60594	1		/			
ANR	60707	PrimaryExpression	64.0		60594	0					
ANR	60708	PtrMemberAccess	hints -> y_scale		60594	1					
ANR	60709	Identifier	hints		60594	0					
ANR	60710	Identifier	y_scale		60594	1					
ANR	60711	MultiplicativeExpression	10.0 * hints -> y_scale / 65536.0 / 64.0		60594	1		*			
ANR	60712	PrimaryExpression	10.0		60594	0					
ANR	60713	MultiplicativeExpression	hints -> y_scale / 65536.0 / 64.0		60594	1		/			
ANR	60714	PtrMemberAccess	hints -> y_scale		60594	0					
ANR	60715	Identifier	hints		60594	0					
ANR	60716	Identifier	y_scale		60594	1					
ANR	60717	MultiplicativeExpression	65536.0 / 64.0		60594	1		/			
ANR	60718	PrimaryExpression	65536.0		60594	0					
ANR	60719	PrimaryExpression	64.0		60594	1					
ANR	60720	IfStatement	if ( axis -> num_edges )		60594	6					
ANR	60721	Condition	axis -> num_edges	575:11:15635:15649	60594	0	True				
ANR	60722	PtrMemberAccess	axis -> num_edges		60594	0					
ANR	60723	Identifier	axis		60594	0					
ANR	60724	Identifier	num_edges		60594	1					
ANR	60725	CompoundStatement		31:6:946:946	60594	1					
ANR	60726	Statement	AF_DUMP	577:8:15669:15675	60594	0	True				
ANR	60727	Statement	(	577:15:15676:15676	60594	1	True				
ANR	60728	Statement	(	577:16:15677:15677	60594	2	True				
ANR	60729	Statement	"""  index    pos     dir   link  serif"""	577:18:15679:15716	60594	3	True				
ANR	60730	Statement	"""  blue    opos     pos       flags\\n"""	579:18:15796:15833	60594	4	True				
ANR	60731	Statement	)	579:57:15835:15835	60594	5	True				
ANR	60732	Statement	)	579:58:15836:15836	60594	6	True				
ANR	60733	ExpressionStatement		579:59:15837:15837	60594	7	True				
ANR	60734	ElseStatement	else		60594	0					
ANR	60735	ExpressionStatement	"AF_DUMP ( ( ""  (none)\\n"" ) )"	583:8:15927:15952	60594	0	True				
ANR	60736	CallExpression	"AF_DUMP ( ( ""  (none)\\n"" ) )"		60594	0					
ANR	60737	Callee	AF_DUMP		60594	0					
ANR	60738	Identifier	AF_DUMP		60594	0					
ANR	60739	ArgumentList	"""  (none)\\n"""		60594	1					
ANR	60740	Argument	"""  (none)\\n"""		60594	0					
ANR	60741	PrimaryExpression	"""  (none)\\n"""		60594	0					
ANR	60742	ForStatement	for ( edge = edges ; edge < limit ; edge ++ )		60594	7					
ANR	60743	ForInit	edge = edges ;	585:12:15967:15979	60594	0	True				
ANR	60744	AssignmentExpression	edge = edges		60594	0		=			
ANR	60745	Identifier	edge		60594	0					
ANR	60746	Identifier	edges		60594	1					
ANR	60747	Condition	edge < limit	585:26:15981:15992	60594	1	True				
ANR	60748	RelationalExpression	edge < limit		60594	0		<			
ANR	60749	Identifier	edge		60594	0					
ANR	60750	Identifier	limit		60594	1					
ANR	60751	PostIncDecOperationExpression	edge ++	585:40:15995:16000	60594	2	True				
ANR	60752	Identifier	edge		60594	0					
ANR	60753	IncDec	++		60594	1					
ANR	60754	Statement	AF_DUMP	586:8:16012:16018	60594	3	True				
ANR	60755	Statement	(	586:15:16019:16019	60594	8	True				
ANR	60756	Statement	(	586:16:16020:16020	60594	9	True				
ANR	60757	Statement	"""  %5d  %7.2f  %5s  %4s  %5s"""	586:18:16022:16050	60594	10	True				
ANR	60758	Statement	"""    %c   %7.2f  %7.2f  %11s\\n"""	587:18:16070:16100	60594	11	True				
ANR	60759	Statement	","	587:49:16101:16101	60594	12	True				
ANR	60760	Statement	AF_INDEX_NUM	588:18:16121:16132	60594	13	True				
ANR	60761	Statement	(	588:30:16133:16133	60594	14	True				
ANR	60762	Statement	edge	588:32:16135:16138	60594	15	True				
ANR	60763	Statement	","	588:36:16139:16139	60594	16	True				
ANR	60764	Statement	edges	588:38:16141:16145	60594	17	True				
ANR	60765	Statement	)	588:44:16147:16147	60594	18	True				
ANR	60766	Statement	","	588:45:16148:16148	60594	19	True				
ANR	60767	Statement	(	589:18:16168:16168	60594	20	True				
ANR	60768	Statement	int	589:19:16169:16171	60594	21	True				
ANR	60769	Statement	)	589:22:16172:16172	60594	22	True				
ANR	60770	Statement	edge	589:23:16173:16176	60594	23	True				
ANR	60771	Statement	->	589:27:16177:16178	60594	24	True				
ANR	60772	Statement	opos	589:29:16179:16182	60594	25	True				
ANR	60773	Statement	/	589:34:16184:16184	60594	26	True				
ANR	60774	Statement	64.0	589:36:16186:16189	60594	27	True				
ANR	60775	Statement	","	589:40:16190:16190	60594	28	True				
ANR	60776	Statement	af_dir_str	590:18:16210:16219	60594	29	True				
ANR	60777	Statement	(	590:28:16220:16220	60594	30	True				
ANR	60778	Statement	(	590:30:16222:16222	60594	31	True				
ANR	60779	Statement	AF_Direction	590:31:16223:16234	60594	32	True				
ANR	60780	Statement	)	590:43:16235:16235	60594	33	True				
ANR	60781	Statement	edge	590:44:16236:16239	60594	34	True				
ANR	60782	Statement	->	590:48:16240:16241	60594	35	True				
ANR	60783	Statement	dir	590:50:16242:16244	60594	36	True				
ANR	60784	Statement	)	590:54:16246:16246	60594	37	True				
ANR	60785	Statement	","	590:55:16247:16247	60594	38	True				
ANR	60786	Statement	af_print_idx	591:18:16267:16278	60594	39	True				
ANR	60787	Statement	(	591:30:16279:16279	60594	40	True				
ANR	60788	Statement	buf1	591:32:16281:16284	60594	41	True				
ANR	60789	Statement	","	591:36:16285:16285	60594	42	True				
ANR	60790	Statement	AF_INDEX_NUM	591:38:16287:16298	60594	43	True				
ANR	60791	Statement	(	591:50:16299:16299	60594	44	True				
ANR	60792	Statement	edge	591:52:16301:16304	60594	45	True				
ANR	60793	Statement	->	591:56:16305:16306	60594	46	True				
ANR	60794	Statement	link	591:58:16307:16310	60594	47	True				
ANR	60795	Statement	","	591:62:16311:16311	60594	48	True				
ANR	60796	Statement	edges	591:64:16313:16317	60594	49	True				
ANR	60797	Statement	)	591:70:16319:16319	60594	50	True				
ANR	60798	Statement	)	591:72:16321:16321	60594	51	True				
ANR	60799	Statement	","	591:73:16322:16322	60594	52	True				
ANR	60800	Statement	af_print_idx	592:18:16342:16353	60594	53	True				
ANR	60801	Statement	(	592:30:16354:16354	60594	54	True				
ANR	60802	Statement	buf2	592:32:16356:16359	60594	55	True				
ANR	60803	Statement	","	592:36:16360:16360	60594	56	True				
ANR	60804	Statement	AF_INDEX_NUM	592:38:16362:16373	60594	57	True				
ANR	60805	Statement	(	592:50:16374:16374	60594	58	True				
ANR	60806	Statement	edge	592:52:16376:16379	60594	59	True				
ANR	60807	Statement	->	592:56:16380:16381	60594	60	True				
ANR	60808	Statement	serif	592:58:16382:16386	60594	61	True				
ANR	60809	Statement	","	592:63:16387:16387	60594	62	True				
ANR	60810	Statement	edges	592:65:16389:16393	60594	63	True				
ANR	60811	Statement	)	592:71:16395:16395	60594	64	True				
ANR	60812	Statement	)	592:73:16397:16397	60594	65	True				
ANR	60813	Statement	","	592:74:16398:16398	60594	66	True				
ANR	60814	Statement	edge	594:18:16419:16422	60594	67	True				
ANR	60815	Statement	->	594:22:16423:16424	60594	68	True				
ANR	60816	Statement	blue_edge	594:24:16425:16433	60594	69	True				
ANR	60817	Statement	?	594:34:16435:16435	60594	70	True				
ANR	60818	Label	'y' :	594:36:16437:16441	60594	71	True				
ANR	60819	Statement	'n'	594:42:16443:16445	60594	72	True				
ANR	60820	Statement	","	594:45:16446:16446	60594	73	True				
ANR	60821	Statement	edge	595:18:16466:16469	60594	74	True				
ANR	60822	Statement	->	595:22:16470:16471	60594	75	True				
ANR	60823	Statement	opos	595:24:16472:16475	60594	76	True				
ANR	60824	Statement	/	595:29:16477:16477	60594	77	True				
ANR	60825	Statement	64.0	595:31:16479:16482	60594	78	True				
ANR	60826	Statement	","	595:35:16483:16483	60594	79	True				
ANR	60827	Statement	edge	596:18:16503:16506	60594	80	True				
ANR	60828	Statement	->	596:22:16507:16508	60594	81	True				
ANR	60829	Statement	pos	596:24:16509:16511	60594	82	True				
ANR	60830	Statement	/	596:28:16513:16513	60594	83	True				
ANR	60831	Statement	64.0	596:30:16515:16518	60594	84	True				
ANR	60832	Statement	","	596:34:16519:16519	60594	85	True				
ANR	60833	Statement	af_edge_flags_to_string	597:18:16539:16561	60594	86	True				
ANR	60834	Statement	(	597:41:16562:16562	60594	87	True				
ANR	60835	Statement	edge	597:43:16564:16567	60594	88	True				
ANR	60836	Statement	->	597:47:16568:16569	60594	89	True				
ANR	60837	Statement	flags	597:49:16570:16574	60594	90	True				
ANR	60838	Statement	)	597:55:16576:16576	60594	91	True				
ANR	60839	Statement	)	597:57:16578:16578	60594	92	True				
ANR	60840	Statement	)	597:58:16579:16579	60594	93	True				
ANR	60841	ExpressionStatement		597:59:16580:16580	60594	94	True				
ANR	60842	ExpressionStatement	"AF_DUMP ( ( ""\\n"" ) )"	598:6:16588:16605	60594	95	True				
ANR	60843	CallExpression	"AF_DUMP ( ( ""\\n"" ) )"		60594	0					
ANR	60844	Callee	AF_DUMP		60594	0					
ANR	60845	Identifier	AF_DUMP		60594	0					
ANR	60846	ArgumentList	"""\\n"""		60594	1					
ANR	60847	Argument	"""\\n"""		60594	0					
ANR	60848	PrimaryExpression	"""\\n"""		60594	0					
ANR	60849	ReturnType	void		60594	1					
ANR	60850	Identifier	af_glyph_hints_dump_edges		60594	2					
ANR	60851	ParameterList	"AF_GlyphHints hints , FT_Bool to_stdout"		60594	3					
ANR	60852	Parameter	AF_GlyphHints hints	544:29:14632:14651	60594	0	True				
ANR	60853	ParameterType	AF_GlyphHints		60594	0					
ANR	60854	Identifier	hints		60594	1					
ANR	60855	Parameter	FT_Bool to_stdout	545:29:14683:14706	60594	1	True				
ANR	60856	ParameterType	FT_Bool		60594	0					
ANR	60857	Identifier	to_stdout		60594	1					
ANR	60858	CFGEntryNode	ENTRY		60594		True				
ANR	60859	CFGExitNode	EXIT		60594		True				
ANR	60860	Symbol	hints -> axis		60594						
ANR	60861	Symbol	hints		60594						
ANR	60862	Symbol	edges		60594						
ANR	60863	Symbol	* axis		60594						
ANR	60864	Symbol	hints -> y_scale		60594						
ANR	60865	Symbol	to_stdout		60594						
ANR	60866	Symbol	axis		60594						
ANR	60867	Symbol	buf1		60594						
ANR	60868	Symbol	AF_DIMENSION_HORZ		60594						
ANR	60869	Symbol	axis -> num_edges		60594						
ANR	60870	Symbol	buf2		60594						
ANR	60871	Symbol	axis -> edges		60594						
ANR	60872	Symbol	edge		60594						
ANR	60873	Symbol	hints -> x_scale		60594						
ANR	60874	Symbol	limit		60594						
ANR	60875	Symbol	dimension		60594						
ANR	60876	Symbol	* hints		60594						
ANR	60877	Function	af_direction_compute	613:2:16786:17731							
ANR	60878	FunctionDef	"af_direction_compute (FT_Pos dx , FT_Pos dy)"		60877	0					
ANR	60879	CompoundStatement		615:2:16859:17731	60877	0					
ANR	60880	IdentifierDeclStatement	"FT_Pos ll , ss ;"	616:4:16865:16885	60877	0	True				
ANR	60881	IdentifierDecl	ll		60877	0					
ANR	60882	IdentifierDeclType	FT_Pos		60877	0					
ANR	60883	Identifier	ll		60877	1					
ANR	60884	IdentifierDecl	ss		60877	1					
ANR	60885	IdentifierDeclType	FT_Pos		60877	0					
ANR	60886	Identifier	ss		60877	1					
ANR	60887	IdentifierDeclStatement	AF_Direction dir ;	617:4:16925:16942	60877	1	True				
ANR	60888	IdentifierDecl	dir		60877	0					
ANR	60889	IdentifierDeclType	AF_Direction		60877	0					
ANR	60890	Identifier	dir		60877	1					
ANR	60891	IfStatement	if ( dy >= dx )		60877	2					
ANR	60892	Condition	dy >= dx	620:9:16992:16999	60877	0	True				
ANR	60893	RelationalExpression	dy >= dx		60877	0		>=			
ANR	60894	Identifier	dy		60877	0					
ANR	60895	Identifier	dx		60877	1					
ANR	60896	CompoundStatement		7:4:147:147	60877	1					
ANR	60897	IfStatement	if ( dy >= - dx )		60877	0					
ANR	60898	Condition	dy >= - dx	622:11:17020:17028	60877	0	True				
ANR	60899	RelationalExpression	dy >= - dx		60877	0		>=			
ANR	60900	Identifier	dy		60877	0					
ANR	60901	UnaryOperationExpression	- dx		60877	1					
ANR	60902	UnaryOperator	-		60877	0					
ANR	60903	Identifier	dx		60877	1					
ANR	60904	CompoundStatement		9:6:178:178	60877	1					
ANR	60905	ExpressionStatement	dir = AF_DIR_UP	624:8:17048:17063	60877	0	True				
ANR	60906	AssignmentExpression	dir = AF_DIR_UP		60877	0		=			
ANR	60907	Identifier	dir		60877	0					
ANR	60908	Identifier	AF_DIR_UP		60877	1					
ANR	60909	ExpressionStatement	ll = dy	625:8:17073:17081	60877	1	True				
ANR	60910	AssignmentExpression	ll = dy		60877	0		=			
ANR	60911	Identifier	ll		60877	0					
ANR	60912	Identifier	dy		60877	1					
ANR	60913	ExpressionStatement	ss = dx	626:8:17091:17099	60877	2	True				
ANR	60914	AssignmentExpression	ss = dx		60877	0		=			
ANR	60915	Identifier	ss		60877	0					
ANR	60916	Identifier	dx		60877	1					
ANR	60917	ElseStatement	else		60877	0					
ANR	60918	CompoundStatement		15:6:266:266	60877	0					
ANR	60919	ExpressionStatement	dir = AF_DIR_LEFT	630:8:17136:17153	60877	0	True				
ANR	60920	AssignmentExpression	dir = AF_DIR_LEFT		60877	0		=			
ANR	60921	Identifier	dir		60877	0					
ANR	60922	Identifier	AF_DIR_LEFT		60877	1					
ANR	60923	ExpressionStatement	ll = - dx	631:8:17163:17172	60877	1	True				
ANR	60924	AssignmentExpression	ll = - dx		60877	0		=			
ANR	60925	Identifier	ll		60877	0					
ANR	60926	UnaryOperationExpression	- dx		60877	1					
ANR	60927	UnaryOperator	-		60877	0					
ANR	60928	Identifier	dx		60877	1					
ANR	60929	ExpressionStatement	ss = dy	632:8:17182:17190	60877	2	True				
ANR	60930	AssignmentExpression	ss = dy		60877	0		=			
ANR	60931	Identifier	ss		60877	0					
ANR	60932	Identifier	dy		60877	1					
ANR	60933	ElseStatement	else		60877	0					
ANR	60934	CompoundStatement		22:4:373:373	60877	0					
ANR	60935	IfStatement	if ( dy >= - dx )		60877	0					
ANR	60936	Condition	dy >= - dx	637:11:17246:17254	60877	0	True				
ANR	60937	RelationalExpression	dy >= - dx		60877	0		>=			
ANR	60938	Identifier	dy		60877	0					
ANR	60939	UnaryOperationExpression	- dx		60877	1					
ANR	60940	UnaryOperator	-		60877	0					
ANR	60941	Identifier	dx		60877	1					
ANR	60942	CompoundStatement		24:6:404:404	60877	1					
ANR	60943	ExpressionStatement	dir = AF_DIR_RIGHT	639:8:17274:17292	60877	0	True				
ANR	60944	AssignmentExpression	dir = AF_DIR_RIGHT		60877	0		=			
ANR	60945	Identifier	dir		60877	0					
ANR	60946	Identifier	AF_DIR_RIGHT		60877	1					
ANR	60947	ExpressionStatement	ll = dx	640:8:17302:17310	60877	1	True				
ANR	60948	AssignmentExpression	ll = dx		60877	0		=			
ANR	60949	Identifier	ll		60877	0					
ANR	60950	Identifier	dx		60877	1					
ANR	60951	ExpressionStatement	ss = dy	641:8:17320:17328	60877	2	True				
ANR	60952	AssignmentExpression	ss = dy		60877	0		=			
ANR	60953	Identifier	ss		60877	0					
ANR	60954	Identifier	dy		60877	1					
ANR	60955	ElseStatement	else		60877	0					
ANR	60956	CompoundStatement		30:6:495:495	60877	0					
ANR	60957	ExpressionStatement	dir = AF_DIR_DOWN	645:8:17365:17382	60877	0	True				
ANR	60958	AssignmentExpression	dir = AF_DIR_DOWN		60877	0		=			
ANR	60959	Identifier	dir		60877	0					
ANR	60960	Identifier	AF_DIR_DOWN		60877	1					
ANR	60961	ExpressionStatement	ll = - dy	646:8:17392:17401	60877	1	True				
ANR	60962	AssignmentExpression	ll = - dy		60877	0		=			
ANR	60963	Identifier	ll		60877	0					
ANR	60964	UnaryOperationExpression	- dy		60877	1					
ANR	60965	UnaryOperator	-		60877	0					
ANR	60966	Identifier	dy		60877	1					
ANR	60967	ExpressionStatement	ss = dx	647:8:17411:17419	60877	2	True				
ANR	60968	AssignmentExpression	ss = dx		60877	0		=			
ANR	60969	Identifier	ss		60877	0					
ANR	60970	Identifier	dx		60877	1					
ANR	60971	IfStatement	if ( ll <= 14 * FT_ABS ( ss ) )		60877	3					
ANR	60972	Condition	ll <= 14 * FT_ABS ( ss )	654:9:17661:17683	60877	0	True				
ANR	60973	RelationalExpression	ll <= 14 * FT_ABS ( ss )		60877	0		<=			
ANR	60974	Identifier	ll		60877	0					
ANR	60975	MultiplicativeExpression	14 * FT_ABS ( ss )		60877	1		*			
ANR	60976	PrimaryExpression	14		60877	0					
ANR	60977	CallExpression	FT_ABS ( ss )		60877	1					
ANR	60978	Callee	FT_ABS		60877	0					
ANR	60979	Identifier	FT_ABS		60877	0					
ANR	60980	ArgumentList	ss		60877	1					
ANR	60981	Argument	ss		60877	0					
ANR	60982	Identifier	ss		60877	0					
ANR	60983	ExpressionStatement	dir = AF_DIR_NONE	655:6:17693:17710	60877	1	True				
ANR	60984	AssignmentExpression	dir = AF_DIR_NONE		60877	0		=			
ANR	60985	Identifier	dir		60877	0					
ANR	60986	Identifier	AF_DIR_NONE		60877	1					
ANR	60987	ReturnStatement	return dir ;	657:4:17717:17727	60877	4	True				
ANR	60988	Identifier	dir		60877	0					
ANR	60989	Identifier	af_direction_compute		60877	1					
ANR	60990	ParameterList	"FT_Pos dx , FT_Pos dy"		60877	2					
ANR	60991	Parameter	FT_Pos dx	613:24:16808:16817	60877	0	True				
ANR	60992	ParameterType	FT_Pos		60877	0					
ANR	60993	Identifier	dx		60877	1					
ANR	60994	Parameter	FT_Pos dy	614:24:16844:16853	60877	1	True				
ANR	60995	ParameterType	FT_Pos		60877	0					
ANR	60996	Identifier	dy		60877	1					
ANR	60997	CFGEntryNode	ENTRY		60877		True				
ANR	60998	CFGExitNode	EXIT		60877		True				
ANR	60999	Symbol	ss		60877						
ANR	61000	Symbol	ll		60877						
ANR	61001	Symbol	AF_DIR_UP		60877						
ANR	61002	Symbol	dx		60877						
ANR	61003	Symbol	AF_DIR_DOWN		60877						
ANR	61004	Symbol	dy		60877						
ANR	61005	Symbol	AF_DIR_RIGHT		60877						
ANR	61006	Symbol	AF_DIR_NONE		60877						
ANR	61007	Symbol	dir		60877						
ANR	61008	Symbol	AF_DIR_LEFT		60877						
ANR	61009	Symbol	FT_ABS		60877						
ANR	61010	Function	af_glyph_hints_init	662:2:17760:18009							
ANR	61011	FunctionDef	"af_glyph_hints_init (AF_GlyphHints hints , FT_Memory memory)"		61010	0					
ANR	61012	CompoundStatement		664:2:17852:18009	61010	0					
ANR	61013	ExpressionStatement	"FT_MEM_ZERO ( hints , sizeof ( * hints ) - sizeof ( hints -> embedded ) )"	666:4:17909:17977	61010	0	True				
ANR	61014	CallExpression	"FT_MEM_ZERO ( hints , sizeof ( * hints ) - sizeof ( hints -> embedded ) )"		61010	0					
ANR	61015	Callee	FT_MEM_ZERO		61010	0					
ANR	61016	Identifier	FT_MEM_ZERO		61010	0					
ANR	61017	ArgumentList	hints		61010	1					
ANR	61018	Argument	hints		61010	0					
ANR	61019	Identifier	hints		61010	0					
ANR	61020	Argument	sizeof ( * hints ) - sizeof ( hints -> embedded )		61010	1					
ANR	61021	AdditiveExpression	sizeof ( * hints ) - sizeof ( hints -> embedded )		61010	0		-			
ANR	61022	SizeofExpression	sizeof ( * hints )		61010	0					
ANR	61023	Sizeof	sizeof		61010	0					
ANR	61024	UnaryOperationExpression	* hints		61010	1					
ANR	61025	UnaryOperator	*		61010	0					
ANR	61026	Identifier	hints		61010	1					
ANR	61027	SizeofExpression	sizeof ( hints -> embedded )		61010	1					
ANR	61028	Sizeof	sizeof		61010	0					
ANR	61029	PtrMemberAccess	hints -> embedded		61010	1					
ANR	61030	Identifier	hints		61010	0					
ANR	61031	Identifier	embedded		61010	1					
ANR	61032	ExpressionStatement	hints -> memory = memory	667:4:17983:18005	61010	1	True				
ANR	61033	AssignmentExpression	hints -> memory = memory		61010	0		=			
ANR	61034	PtrMemberAccess	hints -> memory		61010	0					
ANR	61035	Identifier	hints		61010	0					
ANR	61036	Identifier	memory		61010	1					
ANR	61037	Identifier	memory		61010	1					
ANR	61038	Identifier	af_glyph_hints_init		61010	1					
ANR	61039	ParameterList	"AF_GlyphHints hints , FT_Memory memory"		61010	2					
ANR	61040	Parameter	AF_GlyphHints hints	662:23:17781:17800	61010	0	True				
ANR	61041	ParameterType	AF_GlyphHints		61010	0					
ANR	61042	Identifier	hints		61010	1					
ANR	61043	Parameter	FT_Memory memory	663:23:17826:17846	61010	1	True				
ANR	61044	ParameterType	FT_Memory		61010	0					
ANR	61045	Identifier	memory		61010	1					
ANR	61046	CFGEntryNode	ENTRY		61010		True				
ANR	61047	CFGExitNode	EXIT		61010		True				
ANR	61048	Symbol	memory		61010						
ANR	61049	Symbol	hints		61010						
ANR	61050	Symbol	hints -> memory		61010						
ANR	61051	Symbol	hints -> embedded		61010						
ANR	61052	Symbol	* hints		61010						
ANR	61053	Function	af_glyph_hints_done	672:2:18038:19071							
ANR	61054	FunctionDef	af_glyph_hints_done (AF_GlyphHints hints)		61053	0					
ANR	61055	CompoundStatement		673:2:18084:19071	61053	0					
ANR	61056	IdentifierDeclStatement	FT_Memory memory ;	674:4:18090:18107	61053	0	True				
ANR	61057	IdentifierDecl	memory		61053	0					
ANR	61058	IdentifierDeclType	FT_Memory		61053	0					
ANR	61059	Identifier	memory		61053	1					
ANR	61060	IdentifierDeclStatement	int dim ;	675:4:18113:18127	61053	1	True				
ANR	61061	IdentifierDecl	dim		61053	0					
ANR	61062	IdentifierDeclType	int		61053	0					
ANR	61063	Identifier	dim		61053	1					
ANR	61064	IfStatement	if ( ! ( hints && hints -> memory ) )		61053	2					
ANR	61065	Condition	! ( hints && hints -> memory )	678:9:18140:18166	61053	0	True				
ANR	61066	UnaryOperationExpression	! ( hints && hints -> memory )		61053	0					
ANR	61067	UnaryOperator	!		61053	0					
ANR	61068	AndExpression	hints && hints -> memory		61053	1		&&			
ANR	61069	Identifier	hints		61053	0					
ANR	61070	PtrMemberAccess	hints -> memory		61053	1					
ANR	61071	Identifier	hints		61053	0					
ANR	61072	Identifier	memory		61053	1					
ANR	61073	ReturnStatement	return ;	679:6:18176:18182	61053	1	True				
ANR	61074	ExpressionStatement	memory = hints -> memory	681:4:18189:18211	61053	3	True				
ANR	61075	AssignmentExpression	memory = hints -> memory		61053	0		=			
ANR	61076	Identifier	memory		61053	0					
ANR	61077	PtrMemberAccess	hints -> memory		61053	1					
ANR	61078	Identifier	hints		61053	0					
ANR	61079	Identifier	memory		61053	1					
ANR	61080	ForStatement	for ( dim = 0 ; dim < AF_DIMENSION_MAX ; dim ++ )		61053	4					
ANR	61081	ForInit	dim = 0 ;	687:10:18369:18376	61053	0	True				
ANR	61082	AssignmentExpression	dim = 0		61053	0		=			
ANR	61083	Identifier	dim		61053	0					
ANR	61084	PrimaryExpression	0		61053	1					
ANR	61085	Condition	dim < AF_DIMENSION_MAX	687:19:18378:18399	61053	1	True				
ANR	61086	RelationalExpression	dim < AF_DIMENSION_MAX		61053	0		<			
ANR	61087	Identifier	dim		61053	0					
ANR	61088	Identifier	AF_DIMENSION_MAX		61053	1					
ANR	61089	PostIncDecOperationExpression	dim ++	687:43:18402:18406	61053	2	True				
ANR	61090	Identifier	dim		61053	0					
ANR	61091	IncDec	++		61053	1					
ANR	61092	CompoundStatement		17:6:337:375	61053	3					
ANR	61093	IdentifierDeclStatement	AF_AxisHints axis = & hints -> axis [ dim ] ;	689:6:18422:18460	61053	0	True				
ANR	61094	IdentifierDecl	axis = & hints -> axis [ dim ]		61053	0					
ANR	61095	IdentifierDeclType	AF_AxisHints		61053	0					
ANR	61096	Identifier	axis		61053	1					
ANR	61097	AssignmentExpression	axis = & hints -> axis [ dim ]		61053	2		=			
ANR	61098	Identifier	axis		61053	0					
ANR	61099	UnaryOperationExpression	& hints -> axis [ dim ]		61053	1					
ANR	61100	UnaryOperator	&		61053	0					
ANR	61101	ArrayIndexing	hints -> axis [ dim ]		61053	1					
ANR	61102	PtrMemberAccess	hints -> axis		61053	0					
ANR	61103	Identifier	hints		61053	0					
ANR	61104	Identifier	axis		61053	1					
ANR	61105	Identifier	dim		61053	1					
ANR	61106	ExpressionStatement	axis -> num_segments = 0	692:6:18470:18492	61053	1	True				
ANR	61107	AssignmentExpression	axis -> num_segments = 0		61053	0		=			
ANR	61108	PtrMemberAccess	axis -> num_segments		61053	0					
ANR	61109	Identifier	axis		61053	0					
ANR	61110	Identifier	num_segments		61053	1					
ANR	61111	PrimaryExpression	0		61053	1					
ANR	61112	ExpressionStatement	axis -> max_segments = 0	693:6:18500:18522	61053	2	True				
ANR	61113	AssignmentExpression	axis -> max_segments = 0		61053	0		=			
ANR	61114	PtrMemberAccess	axis -> max_segments		61053	0					
ANR	61115	Identifier	axis		61053	0					
ANR	61116	Identifier	max_segments		61053	1					
ANR	61117	PrimaryExpression	0		61053	1					
ANR	61118	IfStatement	if ( axis -> segments != axis -> embedded . segments )		61053	3					
ANR	61119	Condition	axis -> segments != axis -> embedded . segments	694:11:18535:18575	61053	0	True				
ANR	61120	EqualityExpression	axis -> segments != axis -> embedded . segments		61053	0		!=			
ANR	61121	PtrMemberAccess	axis -> segments		61053	0					
ANR	61122	Identifier	axis		61053	0					
ANR	61123	Identifier	segments		61053	1					
ANR	61124	MemberAccess	axis -> embedded . segments		61053	1					
ANR	61125	PtrMemberAccess	axis -> embedded		61053	0					
ANR	61126	Identifier	axis		61053	0					
ANR	61127	Identifier	embedded		61053	1					
ANR	61128	Identifier	segments		61053	1					
ANR	61129	ExpressionStatement	FT_FREE ( axis -> segments )	695:8:18587:18612	61053	1	True				
ANR	61130	CallExpression	FT_FREE ( axis -> segments )		61053	0					
ANR	61131	Callee	FT_FREE		61053	0					
ANR	61132	Identifier	FT_FREE		61053	0					
ANR	61133	ArgumentList	axis -> segments		61053	1					
ANR	61134	Argument	axis -> segments		61053	0					
ANR	61135	PtrMemberAccess	axis -> segments		61053	0					
ANR	61136	Identifier	axis		61053	0					
ANR	61137	Identifier	segments		61053	1					
ANR	61138	ExpressionStatement	axis -> num_edges = 0	697:6:18621:18640	61053	4	True				
ANR	61139	AssignmentExpression	axis -> num_edges = 0		61053	0		=			
ANR	61140	PtrMemberAccess	axis -> num_edges		61053	0					
ANR	61141	Identifier	axis		61053	0					
ANR	61142	Identifier	num_edges		61053	1					
ANR	61143	PrimaryExpression	0		61053	1					
ANR	61144	ExpressionStatement	axis -> max_edges = 0	698:6:18648:18667	61053	5	True				
ANR	61145	AssignmentExpression	axis -> max_edges = 0		61053	0		=			
ANR	61146	PtrMemberAccess	axis -> max_edges		61053	0					
ANR	61147	Identifier	axis		61053	0					
ANR	61148	Identifier	max_edges		61053	1					
ANR	61149	PrimaryExpression	0		61053	1					
ANR	61150	IfStatement	if ( axis -> edges != axis -> embedded . edges )		61053	6					
ANR	61151	Condition	axis -> edges != axis -> embedded . edges	699:11:18680:18714	61053	0	True				
ANR	61152	EqualityExpression	axis -> edges != axis -> embedded . edges		61053	0		!=			
ANR	61153	PtrMemberAccess	axis -> edges		61053	0					
ANR	61154	Identifier	axis		61053	0					
ANR	61155	Identifier	edges		61053	1					
ANR	61156	MemberAccess	axis -> embedded . edges		61053	1					
ANR	61157	PtrMemberAccess	axis -> embedded		61053	0					
ANR	61158	Identifier	axis		61053	0					
ANR	61159	Identifier	embedded		61053	1					
ANR	61160	Identifier	edges		61053	1					
ANR	61161	ExpressionStatement	FT_FREE ( axis -> edges )	700:8:18726:18748	61053	1	True				
ANR	61162	CallExpression	FT_FREE ( axis -> edges )		61053	0					
ANR	61163	Callee	FT_FREE		61053	0					
ANR	61164	Identifier	FT_FREE		61053	0					
ANR	61165	ArgumentList	axis -> edges		61053	1					
ANR	61166	Argument	axis -> edges		61053	0					
ANR	61167	PtrMemberAccess	axis -> edges		61053	0					
ANR	61168	Identifier	axis		61053	0					
ANR	61169	Identifier	edges		61053	1					
ANR	61170	IfStatement	if ( hints -> contours != hints -> embedded . contours )		61053	5					
ANR	61171	Condition	hints -> contours != hints -> embedded . contours	703:9:18766:18808	61053	0	True				
ANR	61172	EqualityExpression	hints -> contours != hints -> embedded . contours		61053	0		!=			
ANR	61173	PtrMemberAccess	hints -> contours		61053	0					
ANR	61174	Identifier	hints		61053	0					
ANR	61175	Identifier	contours		61053	1					
ANR	61176	MemberAccess	hints -> embedded . contours		61053	1					
ANR	61177	PtrMemberAccess	hints -> embedded		61053	0					
ANR	61178	Identifier	hints		61053	0					
ANR	61179	Identifier	embedded		61053	1					
ANR	61180	Identifier	contours		61053	1					
ANR	61181	ExpressionStatement	FT_FREE ( hints -> contours )	704:6:18818:18844	61053	1	True				
ANR	61182	CallExpression	FT_FREE ( hints -> contours )		61053	0					
ANR	61183	Callee	FT_FREE		61053	0					
ANR	61184	Identifier	FT_FREE		61053	0					
ANR	61185	ArgumentList	hints -> contours		61053	1					
ANR	61186	Argument	hints -> contours		61053	0					
ANR	61187	PtrMemberAccess	hints -> contours		61053	0					
ANR	61188	Identifier	hints		61053	0					
ANR	61189	Identifier	contours		61053	1					
ANR	61190	ExpressionStatement	hints -> max_contours = 0	705:4:18850:18873	61053	6	True				
ANR	61191	AssignmentExpression	hints -> max_contours = 0		61053	0		=			
ANR	61192	PtrMemberAccess	hints -> max_contours		61053	0					
ANR	61193	Identifier	hints		61053	0					
ANR	61194	Identifier	max_contours		61053	1					
ANR	61195	PrimaryExpression	0		61053	1					
ANR	61196	ExpressionStatement	hints -> num_contours = 0	706:4:18879:18902	61053	7	True				
ANR	61197	AssignmentExpression	hints -> num_contours = 0		61053	0		=			
ANR	61198	PtrMemberAccess	hints -> num_contours		61053	0					
ANR	61199	Identifier	hints		61053	0					
ANR	61200	Identifier	num_contours		61053	1					
ANR	61201	PrimaryExpression	0		61053	1					
ANR	61202	IfStatement	if ( hints -> points != hints -> embedded . points )		61053	8					
ANR	61203	Condition	hints -> points != hints -> embedded . points	708:9:18914:18952	61053	0	True				
ANR	61204	EqualityExpression	hints -> points != hints -> embedded . points		61053	0		!=			
ANR	61205	PtrMemberAccess	hints -> points		61053	0					
ANR	61206	Identifier	hints		61053	0					
ANR	61207	Identifier	points		61053	1					
ANR	61208	MemberAccess	hints -> embedded . points		61053	1					
ANR	61209	PtrMemberAccess	hints -> embedded		61053	0					
ANR	61210	Identifier	hints		61053	0					
ANR	61211	Identifier	embedded		61053	1					
ANR	61212	Identifier	points		61053	1					
ANR	61213	ExpressionStatement	FT_FREE ( hints -> points )	709:6:18962:18986	61053	1	True				
ANR	61214	CallExpression	FT_FREE ( hints -> points )		61053	0					
ANR	61215	Callee	FT_FREE		61053	0					
ANR	61216	Identifier	FT_FREE		61053	0					
ANR	61217	ArgumentList	hints -> points		61053	1					
ANR	61218	Argument	hints -> points		61053	0					
ANR	61219	PtrMemberAccess	hints -> points		61053	0					
ANR	61220	Identifier	hints		61053	0					
ANR	61221	Identifier	points		61053	1					
ANR	61222	ExpressionStatement	hints -> max_points = 0	710:4:18992:19013	61053	9	True				
ANR	61223	AssignmentExpression	hints -> max_points = 0		61053	0		=			
ANR	61224	PtrMemberAccess	hints -> max_points		61053	0					
ANR	61225	Identifier	hints		61053	0					
ANR	61226	Identifier	max_points		61053	1					
ANR	61227	PrimaryExpression	0		61053	1					
ANR	61228	ExpressionStatement	hints -> num_points = 0	711:4:19019:19040	61053	10	True				
ANR	61229	AssignmentExpression	hints -> num_points = 0		61053	0		=			
ANR	61230	PtrMemberAccess	hints -> num_points		61053	0					
ANR	61231	Identifier	hints		61053	0					
ANR	61232	Identifier	num_points		61053	1					
ANR	61233	PrimaryExpression	0		61053	1					
ANR	61234	ExpressionStatement	hints -> memory = NULL	713:4:19047:19067	61053	11	True				
ANR	61235	AssignmentExpression	hints -> memory = NULL		61053	0		=			
ANR	61236	PtrMemberAccess	hints -> memory		61053	0					
ANR	61237	Identifier	hints		61053	0					
ANR	61238	Identifier	memory		61053	1					
ANR	61239	Identifier	NULL		61053	1					
ANR	61240	Identifier	af_glyph_hints_done		61053	1					
ANR	61241	ParameterList	AF_GlyphHints hints		61053	2					
ANR	61242	Parameter	AF_GlyphHints hints	672:23:18059:18078	61053	0	True				
ANR	61243	ParameterType	AF_GlyphHints		61053	0					
ANR	61244	Identifier	hints		61053	1					
ANR	61245	CFGEntryNode	ENTRY		61053		True				
ANR	61246	CFGExitNode	EXIT		61053		True				
ANR	61247	Symbol	memory		61053						
ANR	61248	Symbol	hints -> embedded . contours		61053						
ANR	61249	Symbol	dim		61053						
ANR	61250	Symbol	hints -> embedded		61053						
ANR	61251	Symbol	* axis		61053						
ANR	61252	Symbol	hints -> points		61053						
ANR	61253	Symbol	axis		61053						
ANR	61254	Symbol	axis -> segments		61053						
ANR	61255	Symbol	axis -> embedded		61053						
ANR	61256	Symbol	hints -> num_points		61053						
ANR	61257	Symbol	hints -> max_contours		61053						
ANR	61258	Symbol	hints -> memory		61053						
ANR	61259	Symbol	AF_DIMENSION_MAX		61053						
ANR	61260	Symbol	* hints		61053						
ANR	61261	Symbol	axis -> embedded . edges		61053						
ANR	61262	Symbol	hints -> axis		61053						
ANR	61263	Symbol	NULL		61053						
ANR	61264	Symbol	axis -> num_segments		61053						
ANR	61265	Symbol	hints		61053						
ANR	61266	Symbol	hints -> embedded . points		61053						
ANR	61267	Symbol	axis -> embedded . segments		61053						
ANR	61268	Symbol	axis -> max_segments		61053						
ANR	61269	Symbol	axis -> max_edges		61053						
ANR	61270	Symbol	hints -> num_contours		61053						
ANR	61271	Symbol	axis -> num_edges		61053						
ANR	61272	Symbol	axis -> edges		61053						
ANR	61273	Symbol	hints -> max_points		61053						
ANR	61274	Symbol	hints -> contours		61053						
ANR	61275	Function	af_glyph_hints_rescale	720:2:19124:19315							
ANR	61276	FunctionDef	"af_glyph_hints_rescale (AF_GlyphHints hints , AF_StyleMetrics metrics)"		61275	0					
ANR	61277	CompoundStatement		722:2:19227:19315	61275	0					
ANR	61278	ExpressionStatement	hints -> metrics = metrics	723:4:19233:19262	61275	0	True				
ANR	61279	AssignmentExpression	hints -> metrics = metrics		61275	0		=			
ANR	61280	PtrMemberAccess	hints -> metrics		61275	0					
ANR	61281	Identifier	hints		61275	0					
ANR	61282	Identifier	metrics		61275	1					
ANR	61283	Identifier	metrics		61275	1					
ANR	61284	ExpressionStatement	hints -> scaler_flags = metrics -> scaler . flags	724:4:19268:19311	61275	1	True				
ANR	61285	AssignmentExpression	hints -> scaler_flags = metrics -> scaler . flags		61275	0		=			
ANR	61286	PtrMemberAccess	hints -> scaler_flags		61275	0					
ANR	61287	Identifier	hints		61275	0					
ANR	61288	Identifier	scaler_flags		61275	1					
ANR	61289	MemberAccess	metrics -> scaler . flags		61275	1					
ANR	61290	PtrMemberAccess	metrics -> scaler		61275	0					
ANR	61291	Identifier	metrics		61275	0					
ANR	61292	Identifier	scaler		61275	1					
ANR	61293	Identifier	flags		61275	1					
ANR	61294	Identifier	af_glyph_hints_rescale		61275	1					
ANR	61295	ParameterList	"AF_GlyphHints hints , AF_StyleMetrics metrics"		61275	2					
ANR	61296	Parameter	AF_GlyphHints hints	720:26:19148:19169	61275	0	True				
ANR	61297	ParameterType	AF_GlyphHints		61275	0					
ANR	61298	Identifier	hints		61275	1					
ANR	61299	Parameter	AF_StyleMetrics metrics	721:26:19198:19221	61275	1	True				
ANR	61300	ParameterType	AF_StyleMetrics		61275	0					
ANR	61301	Identifier	metrics		61275	1					
ANR	61302	CFGEntryNode	ENTRY		61275		True				
ANR	61303	CFGExitNode	EXIT		61275		True				
ANR	61304	Symbol	hints -> metrics		61275						
ANR	61305	Symbol	* metrics		61275						
ANR	61306	Symbol	hints		61275						
ANR	61307	Symbol	hints -> scaler_flags		61275						
ANR	61308	Symbol	metrics -> scaler		61275						
ANR	61309	Symbol	metrics -> scaler . flags		61275						
ANR	61310	Symbol	metrics		61275						
ANR	61311	Symbol	* hints		61275						
ANR	61312	Function	af_glyph_hints_reload	732:2:19487:32158							
ANR	61313	FunctionDef	"af_glyph_hints_reload (AF_GlyphHints hints , FT_Outline * outline)"		61312	0					
ANR	61314	CompoundStatement		734:2:19584:32158	61312	0					
ANR	61315	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	735:4:19590:19620	61312	0	True				
ANR	61316	IdentifierDecl	error = FT_Err_Ok		61312	0					
ANR	61317	IdentifierDeclType	FT_Error		61312	0					
ANR	61318	Identifier	error		61312	1					
ANR	61319	AssignmentExpression	error = FT_Err_Ok		61312	2		=			
ANR	61320	Identifier	FT_Err_Ok		61312	0					
ANR	61321	Identifier	FT_Err_Ok		61312	1					
ANR	61322	IdentifierDeclStatement	AF_Point points ;	736:4:19626:19643	61312	1	True				
ANR	61323	IdentifierDecl	points		61312	0					
ANR	61324	IdentifierDeclType	AF_Point		61312	0					
ANR	61325	Identifier	points		61312	1					
ANR	61326	IdentifierDeclStatement	"FT_UInt old_max , new_max ;"	737:4:19649:19676	61312	2	True				
ANR	61327	IdentifierDecl	old_max		61312	0					
ANR	61328	IdentifierDeclType	FT_UInt		61312	0					
ANR	61329	Identifier	old_max		61312	1					
ANR	61330	IdentifierDecl	new_max		61312	1					
ANR	61331	IdentifierDeclType	FT_UInt		61312	0					
ANR	61332	Identifier	new_max		61312	1					
ANR	61333	IdentifierDeclStatement	FT_Fixed x_scale = hints -> x_scale ;	738:4:19682:19717	61312	3	True				
ANR	61334	IdentifierDecl	x_scale = hints -> x_scale		61312	0					
ANR	61335	IdentifierDeclType	FT_Fixed		61312	0					
ANR	61336	Identifier	x_scale		61312	1					
ANR	61337	AssignmentExpression	x_scale = hints -> x_scale		61312	2		=			
ANR	61338	Identifier	x_scale		61312	0					
ANR	61339	PtrMemberAccess	hints -> x_scale		61312	1					
ANR	61340	Identifier	hints		61312	0					
ANR	61341	Identifier	x_scale		61312	1					
ANR	61342	IdentifierDeclStatement	FT_Fixed y_scale = hints -> y_scale ;	739:4:19723:19758	61312	4	True				
ANR	61343	IdentifierDecl	y_scale = hints -> y_scale		61312	0					
ANR	61344	IdentifierDeclType	FT_Fixed		61312	0					
ANR	61345	Identifier	y_scale		61312	1					
ANR	61346	AssignmentExpression	y_scale = hints -> y_scale		61312	2		=			
ANR	61347	Identifier	y_scale		61312	0					
ANR	61348	PtrMemberAccess	hints -> y_scale		61312	1					
ANR	61349	Identifier	hints		61312	0					
ANR	61350	Identifier	y_scale		61312	1					
ANR	61351	IdentifierDeclStatement	FT_Pos x_delta = hints -> x_delta ;	740:4:19764:19799	61312	5	True				
ANR	61352	IdentifierDecl	x_delta = hints -> x_delta		61312	0					
ANR	61353	IdentifierDeclType	FT_Pos		61312	0					
ANR	61354	Identifier	x_delta		61312	1					
ANR	61355	AssignmentExpression	x_delta = hints -> x_delta		61312	2		=			
ANR	61356	Identifier	x_delta		61312	0					
ANR	61357	PtrMemberAccess	hints -> x_delta		61312	1					
ANR	61358	Identifier	hints		61312	0					
ANR	61359	Identifier	x_delta		61312	1					
ANR	61360	IdentifierDeclStatement	FT_Pos y_delta = hints -> y_delta ;	741:4:19805:19840	61312	6	True				
ANR	61361	IdentifierDecl	y_delta = hints -> y_delta		61312	0					
ANR	61362	IdentifierDeclType	FT_Pos		61312	0					
ANR	61363	Identifier	y_delta		61312	1					
ANR	61364	AssignmentExpression	y_delta = hints -> y_delta		61312	2		=			
ANR	61365	Identifier	y_delta		61312	0					
ANR	61366	PtrMemberAccess	hints -> y_delta		61312	1					
ANR	61367	Identifier	hints		61312	0					
ANR	61368	Identifier	y_delta		61312	1					
ANR	61369	IdentifierDeclStatement	FT_Memory memory = hints -> memory ;	742:4:19846:19880	61312	7	True				
ANR	61370	IdentifierDecl	memory = hints -> memory		61312	0					
ANR	61371	IdentifierDeclType	FT_Memory		61312	0					
ANR	61372	Identifier	memory		61312	1					
ANR	61373	AssignmentExpression	memory = hints -> memory		61312	2		=			
ANR	61374	Identifier	memory		61312	0					
ANR	61375	PtrMemberAccess	hints -> memory		61312	1					
ANR	61376	Identifier	hints		61312	0					
ANR	61377	Identifier	memory		61312	1					
ANR	61378	ExpressionStatement	hints -> num_points = 0	745:4:19888:19911	61312	8	True				
ANR	61379	AssignmentExpression	hints -> num_points = 0		61312	0		=			
ANR	61380	PtrMemberAccess	hints -> num_points		61312	0					
ANR	61381	Identifier	hints		61312	0					
ANR	61382	Identifier	num_points		61312	1					
ANR	61383	PrimaryExpression	0		61312	1					
ANR	61384	ExpressionStatement	hints -> num_contours = 0	746:4:19917:19940	61312	9	True				
ANR	61385	AssignmentExpression	hints -> num_contours = 0		61312	0		=			
ANR	61386	PtrMemberAccess	hints -> num_contours		61312	0					
ANR	61387	Identifier	hints		61312	0					
ANR	61388	Identifier	num_contours		61312	1					
ANR	61389	PrimaryExpression	0		61312	1					
ANR	61390	ExpressionStatement	hints -> axis [ 0 ] . num_segments = 0	748:4:19947:19978	61312	10	True				
ANR	61391	AssignmentExpression	hints -> axis [ 0 ] . num_segments = 0		61312	0		=			
ANR	61392	MemberAccess	hints -> axis [ 0 ] . num_segments		61312	0					
ANR	61393	ArrayIndexing	hints -> axis [ 0 ]		61312	0					
ANR	61394	PtrMemberAccess	hints -> axis		61312	0					
ANR	61395	Identifier	hints		61312	0					
ANR	61396	Identifier	axis		61312	1					
ANR	61397	PrimaryExpression	0		61312	1					
ANR	61398	Identifier	num_segments		61312	1					
ANR	61399	PrimaryExpression	0		61312	1					
ANR	61400	ExpressionStatement	hints -> axis [ 0 ] . num_edges = 0	749:4:19984:20015	61312	11	True				
ANR	61401	AssignmentExpression	hints -> axis [ 0 ] . num_edges = 0		61312	0		=			
ANR	61402	MemberAccess	hints -> axis [ 0 ] . num_edges		61312	0					
ANR	61403	ArrayIndexing	hints -> axis [ 0 ]		61312	0					
ANR	61404	PtrMemberAccess	hints -> axis		61312	0					
ANR	61405	Identifier	hints		61312	0					
ANR	61406	Identifier	axis		61312	1					
ANR	61407	PrimaryExpression	0		61312	1					
ANR	61408	Identifier	num_edges		61312	1					
ANR	61409	PrimaryExpression	0		61312	1					
ANR	61410	ExpressionStatement	hints -> axis [ 1 ] . num_segments = 0	750:4:20021:20052	61312	12	True				
ANR	61411	AssignmentExpression	hints -> axis [ 1 ] . num_segments = 0		61312	0		=			
ANR	61412	MemberAccess	hints -> axis [ 1 ] . num_segments		61312	0					
ANR	61413	ArrayIndexing	hints -> axis [ 1 ]		61312	0					
ANR	61414	PtrMemberAccess	hints -> axis		61312	0					
ANR	61415	Identifier	hints		61312	0					
ANR	61416	Identifier	axis		61312	1					
ANR	61417	PrimaryExpression	1		61312	1					
ANR	61418	Identifier	num_segments		61312	1					
ANR	61419	PrimaryExpression	0		61312	1					
ANR	61420	ExpressionStatement	hints -> axis [ 1 ] . num_edges = 0	751:4:20058:20089	61312	13	True				
ANR	61421	AssignmentExpression	hints -> axis [ 1 ] . num_edges = 0		61312	0		=			
ANR	61422	MemberAccess	hints -> axis [ 1 ] . num_edges		61312	0					
ANR	61423	ArrayIndexing	hints -> axis [ 1 ]		61312	0					
ANR	61424	PtrMemberAccess	hints -> axis		61312	0					
ANR	61425	Identifier	hints		61312	0					
ANR	61426	Identifier	axis		61312	1					
ANR	61427	PrimaryExpression	1		61312	1					
ANR	61428	Identifier	num_edges		61312	1					
ANR	61429	PrimaryExpression	0		61312	1					
ANR	61430	ExpressionStatement	new_max = ( FT_UInt ) outline -> n_contours	754:4:20163:20201	61312	14	True				
ANR	61431	AssignmentExpression	new_max = ( FT_UInt ) outline -> n_contours		61312	0		=			
ANR	61432	Identifier	new_max		61312	0					
ANR	61433	CastExpression	( FT_UInt ) outline -> n_contours		61312	1					
ANR	61434	CastTarget	FT_UInt		61312	0					
ANR	61435	PtrMemberAccess	outline -> n_contours		61312	1					
ANR	61436	Identifier	outline		61312	0					
ANR	61437	Identifier	n_contours		61312	1					
ANR	61438	ExpressionStatement	old_max = ( FT_UInt ) hints -> max_contours	755:4:20207:20245	61312	15	True				
ANR	61439	AssignmentExpression	old_max = ( FT_UInt ) hints -> max_contours		61312	0		=			
ANR	61440	Identifier	old_max		61312	0					
ANR	61441	CastExpression	( FT_UInt ) hints -> max_contours		61312	1					
ANR	61442	CastTarget	FT_UInt		61312	0					
ANR	61443	PtrMemberAccess	hints -> max_contours		61312	1					
ANR	61444	Identifier	hints		61312	0					
ANR	61445	Identifier	max_contours		61312	1					
ANR	61446	IfStatement	if ( new_max <= AF_CONTOURS_EMBEDDED )		61312	16					
ANR	61447	Condition	new_max <= AF_CONTOURS_EMBEDDED	757:9:20257:20287	61312	0	True				
ANR	61448	RelationalExpression	new_max <= AF_CONTOURS_EMBEDDED		61312	0		<=			
ANR	61449	Identifier	new_max		61312	0					
ANR	61450	Identifier	AF_CONTOURS_EMBEDDED		61312	1					
ANR	61451	CompoundStatement		25:4:710:710	61312	1					
ANR	61452	IfStatement	if ( ! hints -> contours )		61312	0					
ANR	61453	Condition	! hints -> contours	759:11:20308:20323	61312	0	True				
ANR	61454	UnaryOperationExpression	! hints -> contours		61312	0					
ANR	61455	UnaryOperator	!		61312	0					
ANR	61456	PtrMemberAccess	hints -> contours		61312	1					
ANR	61457	Identifier	hints		61312	0					
ANR	61458	Identifier	contours		61312	1					
ANR	61459	CompoundStatement		27:6:748:748	61312	1					
ANR	61460	ExpressionStatement	hints -> contours = hints -> embedded . contours	761:8:20343:20389	61312	0	True				
ANR	61461	AssignmentExpression	hints -> contours = hints -> embedded . contours		61312	0		=			
ANR	61462	PtrMemberAccess	hints -> contours		61312	0					
ANR	61463	Identifier	hints		61312	0					
ANR	61464	Identifier	contours		61312	1					
ANR	61465	MemberAccess	hints -> embedded . contours		61312	1					
ANR	61466	PtrMemberAccess	hints -> embedded		61312	0					
ANR	61467	Identifier	hints		61312	0					
ANR	61468	Identifier	embedded		61312	1					
ANR	61469	Identifier	contours		61312	1					
ANR	61470	ExpressionStatement	hints -> max_contours = AF_CONTOURS_EMBEDDED	762:8:20399:20441	61312	1	True				
ANR	61471	AssignmentExpression	hints -> max_contours = AF_CONTOURS_EMBEDDED		61312	0		=			
ANR	61472	PtrMemberAccess	hints -> max_contours		61312	0					
ANR	61473	Identifier	hints		61312	0					
ANR	61474	Identifier	max_contours		61312	1					
ANR	61475	Identifier	AF_CONTOURS_EMBEDDED		61312	1					
ANR	61476	ElseStatement	else		61312	0					
ANR	61477	IfStatement	if ( new_max > old_max )		61312	0					
ANR	61478	Condition	new_max > old_max	765:14:20471:20487	61312	0	True				
ANR	61479	RelationalExpression	new_max > old_max		61312	0		>			
ANR	61480	Identifier	new_max		61312	0					
ANR	61481	Identifier	old_max		61312	1					
ANR	61482	CompoundStatement		33:4:910:910	61312	1					
ANR	61483	IfStatement	if ( hints -> contours == hints -> embedded . contours )		61312	0					
ANR	61484	Condition	hints -> contours == hints -> embedded . contours	767:11:20508:20550	61312	0	True				
ANR	61485	EqualityExpression	hints -> contours == hints -> embedded . contours		61312	0		==			
ANR	61486	PtrMemberAccess	hints -> contours		61312	0					
ANR	61487	Identifier	hints		61312	0					
ANR	61488	Identifier	contours		61312	1					
ANR	61489	MemberAccess	hints -> embedded . contours		61312	1					
ANR	61490	PtrMemberAccess	hints -> embedded		61312	0					
ANR	61491	Identifier	hints		61312	0					
ANR	61492	Identifier	embedded		61312	1					
ANR	61493	Identifier	contours		61312	1					
ANR	61494	ExpressionStatement	hints -> contours = NULL	768:8:20562:20584	61312	1	True				
ANR	61495	AssignmentExpression	hints -> contours = NULL		61312	0		=			
ANR	61496	PtrMemberAccess	hints -> contours		61312	0					
ANR	61497	Identifier	hints		61312	0					
ANR	61498	Identifier	contours		61312	1					
ANR	61499	Identifier	NULL		61312	1					
ANR	61500	ExpressionStatement	new_max = ( new_max + 3 ) & ~3U	770:6:20593:20624	61312	1	True				
ANR	61501	AssignmentExpression	new_max = ( new_max + 3 ) & ~3U		61312	0		=			
ANR	61502	Identifier	new_max		61312	0					
ANR	61503	BitAndExpression	( new_max + 3 ) & ~3U		61312	1		&			
ANR	61504	AdditiveExpression	new_max + 3		61312	0		+			
ANR	61505	Identifier	new_max		61312	0					
ANR	61506	PrimaryExpression	3		61312	1					
ANR	61507	Identifier	~3U		61312	1					
ANR	61508	IfStatement	"if ( FT_RENEW_ARRAY ( hints -> contours , old_max , new_max ) )"		61312	2					
ANR	61509	Condition	"FT_RENEW_ARRAY ( hints -> contours , old_max , new_max )"	772:11:20672:20722	61312	0	True				
ANR	61510	CallExpression	"FT_RENEW_ARRAY ( hints -> contours , old_max , new_max )"		61312	0					
ANR	61511	Callee	FT_RENEW_ARRAY		61312	0					
ANR	61512	Identifier	FT_RENEW_ARRAY		61312	0					
ANR	61513	ArgumentList	hints -> contours		61312	1					
ANR	61514	Argument	hints -> contours		61312	0					
ANR	61515	PtrMemberAccess	hints -> contours		61312	0					
ANR	61516	Identifier	hints		61312	0					
ANR	61517	Identifier	contours		61312	1					
ANR	61518	Argument	old_max		61312	1					
ANR	61519	Identifier	old_max		61312	0					
ANR	61520	Argument	new_max		61312	2					
ANR	61521	Identifier	new_max		61312	0					
ANR	61522	GotoStatement	goto Exit ;	773:8:20734:20743	61312	1	True				
ANR	61523	Identifier	Exit		61312	0					
ANR	61524	ExpressionStatement	hints -> max_contours = ( FT_Int ) new_max	775:6:20752:20789	61312	3	True				
ANR	61525	AssignmentExpression	hints -> max_contours = ( FT_Int ) new_max		61312	0		=			
ANR	61526	PtrMemberAccess	hints -> max_contours		61312	0					
ANR	61527	Identifier	hints		61312	0					
ANR	61528	Identifier	max_contours		61312	1					
ANR	61529	CastExpression	( FT_Int ) new_max		61312	1					
ANR	61530	CastTarget	FT_Int		61312	0					
ANR	61531	Identifier	new_max		61312	1					
ANR	61532	ExpressionStatement	new_max = ( FT_UInt ) ( outline -> n_points + 2 )	783:4:20979:21023	61312	17	True				
ANR	61533	AssignmentExpression	new_max = ( FT_UInt ) ( outline -> n_points + 2 )		61312	0		=			
ANR	61534	Identifier	new_max		61312	0					
ANR	61535	CastExpression	( FT_UInt ) ( outline -> n_points + 2 )		61312	1					
ANR	61536	CastTarget	FT_UInt		61312	0					
ANR	61537	AdditiveExpression	outline -> n_points + 2		61312	1		+			
ANR	61538	PtrMemberAccess	outline -> n_points		61312	0					
ANR	61539	Identifier	outline		61312	0					
ANR	61540	Identifier	n_points		61312	1					
ANR	61541	PrimaryExpression	2		61312	1					
ANR	61542	ExpressionStatement	old_max = ( FT_UInt ) hints -> max_points	784:4:21029:21065	61312	18	True				
ANR	61543	AssignmentExpression	old_max = ( FT_UInt ) hints -> max_points		61312	0		=			
ANR	61544	Identifier	old_max		61312	0					
ANR	61545	CastExpression	( FT_UInt ) hints -> max_points		61312	1					
ANR	61546	CastTarget	FT_UInt		61312	0					
ANR	61547	PtrMemberAccess	hints -> max_points		61312	1					
ANR	61548	Identifier	hints		61312	0					
ANR	61549	Identifier	max_points		61312	1					
ANR	61550	IfStatement	if ( new_max <= AF_POINTS_EMBEDDED )		61312	19					
ANR	61551	Condition	new_max <= AF_POINTS_EMBEDDED	786:9:21077:21105	61312	0	True				
ANR	61552	RelationalExpression	new_max <= AF_POINTS_EMBEDDED		61312	0		<=			
ANR	61553	Identifier	new_max		61312	0					
ANR	61554	Identifier	AF_POINTS_EMBEDDED		61312	1					
ANR	61555	CompoundStatement		54:4:1528:1528	61312	1					
ANR	61556	IfStatement	if ( ! hints -> points )		61312	0					
ANR	61557	Condition	! hints -> points	788:11:21126:21139	61312	0	True				
ANR	61558	UnaryOperationExpression	! hints -> points		61312	0					
ANR	61559	UnaryOperator	!		61312	0					
ANR	61560	PtrMemberAccess	hints -> points		61312	1					
ANR	61561	Identifier	hints		61312	0					
ANR	61562	Identifier	points		61312	1					
ANR	61563	CompoundStatement		56:6:1564:1564	61312	1					
ANR	61564	ExpressionStatement	hints -> points = hints -> embedded . points	790:8:21159:21201	61312	0	True				
ANR	61565	AssignmentExpression	hints -> points = hints -> embedded . points		61312	0		=			
ANR	61566	PtrMemberAccess	hints -> points		61312	0					
ANR	61567	Identifier	hints		61312	0					
ANR	61568	Identifier	points		61312	1					
ANR	61569	MemberAccess	hints -> embedded . points		61312	1					
ANR	61570	PtrMemberAccess	hints -> embedded		61312	0					
ANR	61571	Identifier	hints		61312	0					
ANR	61572	Identifier	embedded		61312	1					
ANR	61573	Identifier	points		61312	1					
ANR	61574	ExpressionStatement	hints -> max_points = AF_POINTS_EMBEDDED	791:8:21211:21249	61312	1	True				
ANR	61575	AssignmentExpression	hints -> max_points = AF_POINTS_EMBEDDED		61312	0		=			
ANR	61576	PtrMemberAccess	hints -> max_points		61312	0					
ANR	61577	Identifier	hints		61312	0					
ANR	61578	Identifier	max_points		61312	1					
ANR	61579	Identifier	AF_POINTS_EMBEDDED		61312	1					
ANR	61580	ElseStatement	else		61312	0					
ANR	61581	IfStatement	if ( new_max > old_max )		61312	0					
ANR	61582	Condition	new_max > old_max	794:14:21279:21295	61312	0	True				
ANR	61583	RelationalExpression	new_max > old_max		61312	0		>			
ANR	61584	Identifier	new_max		61312	0					
ANR	61585	Identifier	old_max		61312	1					
ANR	61586	CompoundStatement		62:4:1718:1718	61312	1					
ANR	61587	IfStatement	if ( hints -> points == hints -> embedded . points )		61312	0					
ANR	61588	Condition	hints -> points == hints -> embedded . points	796:11:21316:21354	61312	0	True				
ANR	61589	EqualityExpression	hints -> points == hints -> embedded . points		61312	0		==			
ANR	61590	PtrMemberAccess	hints -> points		61312	0					
ANR	61591	Identifier	hints		61312	0					
ANR	61592	Identifier	points		61312	1					
ANR	61593	MemberAccess	hints -> embedded . points		61312	1					
ANR	61594	PtrMemberAccess	hints -> embedded		61312	0					
ANR	61595	Identifier	hints		61312	0					
ANR	61596	Identifier	embedded		61312	1					
ANR	61597	Identifier	points		61312	1					
ANR	61598	ExpressionStatement	hints -> points = NULL	797:8:21366:21386	61312	1	True				
ANR	61599	AssignmentExpression	hints -> points = NULL		61312	0		=			
ANR	61600	PtrMemberAccess	hints -> points		61312	0					
ANR	61601	Identifier	hints		61312	0					
ANR	61602	Identifier	points		61312	1					
ANR	61603	Identifier	NULL		61312	1					
ANR	61604	ExpressionStatement	new_max = ( new_max + 2 + 7 ) & ~7U	799:6:21395:21430	61312	1	True				
ANR	61605	AssignmentExpression	new_max = ( new_max + 2 + 7 ) & ~7U		61312	0		=			
ANR	61606	Identifier	new_max		61312	0					
ANR	61607	BitAndExpression	( new_max + 2 + 7 ) & ~7U		61312	1		&			
ANR	61608	AdditiveExpression	new_max + 2 + 7		61312	0		+			
ANR	61609	Identifier	new_max		61312	0					
ANR	61610	AdditiveExpression	2 + 7		61312	1		+			
ANR	61611	PrimaryExpression	2		61312	0					
ANR	61612	PrimaryExpression	7		61312	1					
ANR	61613	Identifier	~7U		61312	1					
ANR	61614	IfStatement	"if ( FT_RENEW_ARRAY ( hints -> points , old_max , new_max ) )"		61312	2					
ANR	61615	Condition	"FT_RENEW_ARRAY ( hints -> points , old_max , new_max )"	801:11:21478:21526	61312	0	True				
ANR	61616	CallExpression	"FT_RENEW_ARRAY ( hints -> points , old_max , new_max )"		61312	0					
ANR	61617	Callee	FT_RENEW_ARRAY		61312	0					
ANR	61618	Identifier	FT_RENEW_ARRAY		61312	0					
ANR	61619	ArgumentList	hints -> points		61312	1					
ANR	61620	Argument	hints -> points		61312	0					
ANR	61621	PtrMemberAccess	hints -> points		61312	0					
ANR	61622	Identifier	hints		61312	0					
ANR	61623	Identifier	points		61312	1					
ANR	61624	Argument	old_max		61312	1					
ANR	61625	Identifier	old_max		61312	0					
ANR	61626	Argument	new_max		61312	2					
ANR	61627	Identifier	new_max		61312	0					
ANR	61628	GotoStatement	goto Exit ;	802:8:21538:21547	61312	1	True				
ANR	61629	Identifier	Exit		61312	0					
ANR	61630	ExpressionStatement	hints -> max_points = ( FT_Int ) new_max	804:6:21556:21591	61312	3	True				
ANR	61631	AssignmentExpression	hints -> max_points = ( FT_Int ) new_max		61312	0		=			
ANR	61632	PtrMemberAccess	hints -> max_points		61312	0					
ANR	61633	Identifier	hints		61312	0					
ANR	61634	Identifier	max_points		61312	1					
ANR	61635	CastExpression	( FT_Int ) new_max		61312	1					
ANR	61636	CastTarget	FT_Int		61312	0					
ANR	61637	Identifier	new_max		61312	1					
ANR	61638	ExpressionStatement	hints -> num_points = outline -> n_points	807:4:21604:21643	61312	20	True				
ANR	61639	AssignmentExpression	hints -> num_points = outline -> n_points		61312	0		=			
ANR	61640	PtrMemberAccess	hints -> num_points		61312	0					
ANR	61641	Identifier	hints		61312	0					
ANR	61642	Identifier	num_points		61312	1					
ANR	61643	PtrMemberAccess	outline -> n_points		61312	1					
ANR	61644	Identifier	outline		61312	0					
ANR	61645	Identifier	n_points		61312	1					
ANR	61646	ExpressionStatement	hints -> num_contours = outline -> n_contours	808:4:21649:21690	61312	21	True				
ANR	61647	AssignmentExpression	hints -> num_contours = outline -> n_contours		61312	0		=			
ANR	61648	PtrMemberAccess	hints -> num_contours		61312	0					
ANR	61649	Identifier	hints		61312	0					
ANR	61650	Identifier	num_contours		61312	1					
ANR	61651	PtrMemberAccess	outline -> n_contours		61312	1					
ANR	61652	Identifier	outline		61312	0					
ANR	61653	Identifier	n_contours		61312	1					
ANR	61654	ExpressionStatement	hints -> axis [ AF_DIMENSION_HORZ ] . major_dir = AF_DIR_UP	814:4:22009:22061	61312	22	True				
ANR	61655	AssignmentExpression	hints -> axis [ AF_DIMENSION_HORZ ] . major_dir = AF_DIR_UP		61312	0		=			
ANR	61656	MemberAccess	hints -> axis [ AF_DIMENSION_HORZ ] . major_dir		61312	0					
ANR	61657	ArrayIndexing	hints -> axis [ AF_DIMENSION_HORZ ]		61312	0					
ANR	61658	PtrMemberAccess	hints -> axis		61312	0					
ANR	61659	Identifier	hints		61312	0					
ANR	61660	Identifier	axis		61312	1					
ANR	61661	Identifier	AF_DIMENSION_HORZ		61312	1					
ANR	61662	Identifier	major_dir		61312	1					
ANR	61663	Identifier	AF_DIR_UP		61312	1					
ANR	61664	ExpressionStatement	hints -> axis [ AF_DIMENSION_VERT ] . major_dir = AF_DIR_LEFT	815:4:22067:22121	61312	23	True				
ANR	61665	AssignmentExpression	hints -> axis [ AF_DIMENSION_VERT ] . major_dir = AF_DIR_LEFT		61312	0		=			
ANR	61666	MemberAccess	hints -> axis [ AF_DIMENSION_VERT ] . major_dir		61312	0					
ANR	61667	ArrayIndexing	hints -> axis [ AF_DIMENSION_VERT ]		61312	0					
ANR	61668	PtrMemberAccess	hints -> axis		61312	0					
ANR	61669	Identifier	hints		61312	0					
ANR	61670	Identifier	axis		61312	1					
ANR	61671	Identifier	AF_DIMENSION_VERT		61312	1					
ANR	61672	Identifier	major_dir		61312	1					
ANR	61673	Identifier	AF_DIR_LEFT		61312	1					
ANR	61674	IfStatement	if ( FT_Outline_Get_Orientation ( outline ) == FT_ORIENTATION_POSTSCRIPT )		61312	24					
ANR	61675	Condition	FT_Outline_Get_Orientation ( outline ) == FT_ORIENTATION_POSTSCRIPT	817:9:22133:22198	61312	0	True				
ANR	61676	EqualityExpression	FT_Outline_Get_Orientation ( outline ) == FT_ORIENTATION_POSTSCRIPT		61312	0		==			
ANR	61677	CallExpression	FT_Outline_Get_Orientation ( outline )		61312	0					
ANR	61678	Callee	FT_Outline_Get_Orientation		61312	0					
ANR	61679	Identifier	FT_Outline_Get_Orientation		61312	0					
ANR	61680	ArgumentList	outline		61312	1					
ANR	61681	Argument	outline		61312	0					
ANR	61682	Identifier	outline		61312	0					
ANR	61683	Identifier	FT_ORIENTATION_POSTSCRIPT		61312	1					
ANR	61684	CompoundStatement		85:4:2621:2621	61312	1					
ANR	61685	ExpressionStatement	hints -> axis [ AF_DIMENSION_HORZ ] . major_dir = AF_DIR_DOWN	819:6:22214:22268	61312	0	True				
ANR	61686	AssignmentExpression	hints -> axis [ AF_DIMENSION_HORZ ] . major_dir = AF_DIR_DOWN		61312	0		=			
ANR	61687	MemberAccess	hints -> axis [ AF_DIMENSION_HORZ ] . major_dir		61312	0					
ANR	61688	ArrayIndexing	hints -> axis [ AF_DIMENSION_HORZ ]		61312	0					
ANR	61689	PtrMemberAccess	hints -> axis		61312	0					
ANR	61690	Identifier	hints		61312	0					
ANR	61691	Identifier	axis		61312	1					
ANR	61692	Identifier	AF_DIMENSION_HORZ		61312	1					
ANR	61693	Identifier	major_dir		61312	1					
ANR	61694	Identifier	AF_DIR_DOWN		61312	1					
ANR	61695	ExpressionStatement	hints -> axis [ AF_DIMENSION_VERT ] . major_dir = AF_DIR_RIGHT	820:6:22276:22331	61312	1	True				
ANR	61696	AssignmentExpression	hints -> axis [ AF_DIMENSION_VERT ] . major_dir = AF_DIR_RIGHT		61312	0		=			
ANR	61697	MemberAccess	hints -> axis [ AF_DIMENSION_VERT ] . major_dir		61312	0					
ANR	61698	ArrayIndexing	hints -> axis [ AF_DIMENSION_VERT ]		61312	0					
ANR	61699	PtrMemberAccess	hints -> axis		61312	0					
ANR	61700	Identifier	hints		61312	0					
ANR	61701	Identifier	axis		61312	1					
ANR	61702	Identifier	AF_DIMENSION_VERT		61312	1					
ANR	61703	Identifier	major_dir		61312	1					
ANR	61704	Identifier	AF_DIR_RIGHT		61312	1					
ANR	61705	ExpressionStatement	hints -> x_scale = x_scale	823:4:22344:22368	61312	25	True				
ANR	61706	AssignmentExpression	hints -> x_scale = x_scale		61312	0		=			
ANR	61707	PtrMemberAccess	hints -> x_scale		61312	0					
ANR	61708	Identifier	hints		61312	0					
ANR	61709	Identifier	x_scale		61312	1					
ANR	61710	Identifier	x_scale		61312	1					
ANR	61711	ExpressionStatement	hints -> y_scale = y_scale	824:4:22374:22398	61312	26	True				
ANR	61712	AssignmentExpression	hints -> y_scale = y_scale		61312	0		=			
ANR	61713	PtrMemberAccess	hints -> y_scale		61312	0					
ANR	61714	Identifier	hints		61312	0					
ANR	61715	Identifier	y_scale		61312	1					
ANR	61716	Identifier	y_scale		61312	1					
ANR	61717	ExpressionStatement	hints -> x_delta = x_delta	825:4:22404:22428	61312	27	True				
ANR	61718	AssignmentExpression	hints -> x_delta = x_delta		61312	0		=			
ANR	61719	PtrMemberAccess	hints -> x_delta		61312	0					
ANR	61720	Identifier	hints		61312	0					
ANR	61721	Identifier	x_delta		61312	1					
ANR	61722	Identifier	x_delta		61312	1					
ANR	61723	ExpressionStatement	hints -> y_delta = y_delta	826:4:22434:22458	61312	28	True				
ANR	61724	AssignmentExpression	hints -> y_delta = y_delta		61312	0		=			
ANR	61725	PtrMemberAccess	hints -> y_delta		61312	0					
ANR	61726	Identifier	hints		61312	0					
ANR	61727	Identifier	y_delta		61312	1					
ANR	61728	Identifier	y_delta		61312	1					
ANR	61729	ExpressionStatement	hints -> xmin_delta = 0	828:4:22465:22486	61312	29	True				
ANR	61730	AssignmentExpression	hints -> xmin_delta = 0		61312	0		=			
ANR	61731	PtrMemberAccess	hints -> xmin_delta		61312	0					
ANR	61732	Identifier	hints		61312	0					
ANR	61733	Identifier	xmin_delta		61312	1					
ANR	61734	PrimaryExpression	0		61312	1					
ANR	61735	ExpressionStatement	hints -> xmax_delta = 0	829:4:22492:22513	61312	30	True				
ANR	61736	AssignmentExpression	hints -> xmax_delta = 0		61312	0		=			
ANR	61737	PtrMemberAccess	hints -> xmax_delta		61312	0					
ANR	61738	Identifier	hints		61312	0					
ANR	61739	Identifier	xmax_delta		61312	1					
ANR	61740	PrimaryExpression	0		61312	1					
ANR	61741	ExpressionStatement	points = hints -> points	831:4:22520:22542	61312	31	True				
ANR	61742	AssignmentExpression	points = hints -> points		61312	0		=			
ANR	61743	Identifier	points		61312	0					
ANR	61744	PtrMemberAccess	hints -> points		61312	1					
ANR	61745	Identifier	hints		61312	0					
ANR	61746	Identifier	points		61312	1					
ANR	61747	IfStatement	if ( hints -> num_points == 0 )		61312	32					
ANR	61748	Condition	hints -> num_points == 0	832:9:22553:22574	61312	0	True				
ANR	61749	EqualityExpression	hints -> num_points == 0		61312	0		==			
ANR	61750	PtrMemberAccess	hints -> num_points		61312	0					
ANR	61751	Identifier	hints		61312	0					
ANR	61752	Identifier	num_points		61312	1					
ANR	61753	PrimaryExpression	0		61312	1					
ANR	61754	GotoStatement	goto Exit ;	833:6:22584:22593	61312	1	True				
ANR	61755	Identifier	Exit		61312	0					
ANR	61756	CompoundStatement		108:6:3228:3276	61312	33					
ANR	61757	IdentifierDeclStatement	AF_Point point ;	836:6:22608:22623	61312	0	True				
ANR	61758	IdentifierDecl	point		61312	0					
ANR	61759	IdentifierDeclType	AF_Point		61312	0					
ANR	61760	Identifier	point		61312	1					
ANR	61761	IdentifierDeclStatement	AF_Point point_limit = points + hints -> num_points ;	837:6:22631:22681	61312	1	True				
ANR	61762	IdentifierDecl	point_limit = points + hints -> num_points		61312	0					
ANR	61763	IdentifierDeclType	AF_Point		61312	0					
ANR	61764	Identifier	point_limit		61312	1					
ANR	61765	AssignmentExpression	point_limit = points + hints -> num_points		61312	2		=			
ANR	61766	Identifier	point_limit		61312	0					
ANR	61767	AdditiveExpression	points + hints -> num_points		61312	1		+			
ANR	61768	Identifier	points		61312	0					
ANR	61769	PtrMemberAccess	hints -> num_points		61312	1					
ANR	61770	Identifier	hints		61312	0					
ANR	61771	Identifier	num_points		61312	1					
ANR	61772	IdentifierDeclStatement	FT_UInt units_per_em = hints -> metrics -> scaler . face -> units_per_EM ;	840:6:22740:22805	61312	2	True				
ANR	61773	IdentifierDecl	units_per_em = hints -> metrics -> scaler . face -> units_per_EM		61312	0					
ANR	61774	IdentifierDeclType	FT_UInt		61312	0					
ANR	61775	Identifier	units_per_em		61312	1					
ANR	61776	AssignmentExpression	units_per_em = hints -> metrics -> scaler . face -> units_per_EM		61312	2		=			
ANR	61777	Identifier	units_per_em		61312	0					
ANR	61778	PtrMemberAccess	hints -> metrics -> scaler . face -> units_per_EM		61312	1					
ANR	61779	MemberAccess	hints -> metrics -> scaler . face		61312	0					
ANR	61780	PtrMemberAccess	hints -> metrics -> scaler		61312	0					
ANR	61781	PtrMemberAccess	hints -> metrics		61312	0					
ANR	61782	Identifier	hints		61312	0					
ANR	61783	Identifier	metrics		61312	1					
ANR	61784	Identifier	scaler		61312	1					
ANR	61785	Identifier	face		61312	1					
ANR	61786	Identifier	units_per_EM		61312	1					
ANR	61787	IdentifierDeclStatement	FT_Int near_limit = 20 * units_per_em / 2048 ;	841:6:22813:22861	61312	3	True				
ANR	61788	IdentifierDecl	near_limit = 20 * units_per_em / 2048		61312	0					
ANR	61789	IdentifierDeclType	FT_Int		61312	0					
ANR	61790	Identifier	near_limit		61312	1					
ANR	61791	AssignmentExpression	near_limit = 20 * units_per_em / 2048		61312	2		=			
ANR	61792	Identifier	near_limit		61312	0					
ANR	61793	MultiplicativeExpression	20 * units_per_em / 2048		61312	1		*			
ANR	61794	PrimaryExpression	20		61312	0					
ANR	61795	MultiplicativeExpression	units_per_em / 2048		61312	1		/			
ANR	61796	Identifier	units_per_em		61312	0					
ANR	61797	PrimaryExpression	2048		61312	1					
ANR	61798	CompoundStatement		118:8:3616:3645	61312	4					
ANR	61799	IdentifierDeclStatement	FT_Vector * vec = outline -> points ;	846:8:22943:22986	61312	0	True				
ANR	61800	IdentifierDecl	* vec = outline -> points		61312	0					
ANR	61801	IdentifierDeclType	FT_Vector *		61312	0					
ANR	61802	Identifier	vec		61312	1					
ANR	61803	AssignmentExpression	* vec = outline -> points		61312	2		=			
ANR	61804	Identifier	vec		61312	0					
ANR	61805	PtrMemberAccess	outline -> points		61312	1					
ANR	61806	Identifier	outline		61312	0					
ANR	61807	Identifier	points		61312	1					
ANR	61808	IdentifierDeclStatement	char * tag = outline -> tags ;	847:8:22996:23037	61312	1	True				
ANR	61809	IdentifierDecl	* tag = outline -> tags		61312	0					
ANR	61810	IdentifierDeclType	char *		61312	0					
ANR	61811	Identifier	tag		61312	1					
ANR	61812	AssignmentExpression	* tag = outline -> tags		61312	2		=			
ANR	61813	Identifier	tag		61312	0					
ANR	61814	PtrMemberAccess	outline -> tags		61312	1					
ANR	61815	Identifier	outline		61312	0					
ANR	61816	Identifier	tags		61312	1					
ANR	61817	IdentifierDeclStatement	FT_Short endpoint = outline -> contours [ 0 ] ;	848:8:23047:23095	61312	2	True				
ANR	61818	IdentifierDecl	endpoint = outline -> contours [ 0 ]		61312	0					
ANR	61819	IdentifierDeclType	FT_Short		61312	0					
ANR	61820	Identifier	endpoint		61312	1					
ANR	61821	AssignmentExpression	endpoint = outline -> contours [ 0 ]		61312	2		=			
ANR	61822	Identifier	endpoint		61312	0					
ANR	61823	ArrayIndexing	outline -> contours [ 0 ]		61312	1					
ANR	61824	PtrMemberAccess	outline -> contours		61312	0					
ANR	61825	Identifier	outline		61312	0					
ANR	61826	Identifier	contours		61312	1					
ANR	61827	PrimaryExpression	0		61312	1					
ANR	61828	IdentifierDeclStatement	AF_Point end = points + endpoint ;	849:8:23105:23150	61312	3	True				
ANR	61829	IdentifierDecl	end = points + endpoint		61312	0					
ANR	61830	IdentifierDeclType	AF_Point		61312	0					
ANR	61831	Identifier	end		61312	1					
ANR	61832	AssignmentExpression	end = points + endpoint		61312	2		=			
ANR	61833	Identifier	end		61312	0					
ANR	61834	AdditiveExpression	points + endpoint		61312	1		+			
ANR	61835	Identifier	points		61312	0					
ANR	61836	Identifier	endpoint		61312	1					
ANR	61837	IdentifierDeclStatement	AF_Point prev = end ;	850:8:23160:23191	61312	4	True				
ANR	61838	IdentifierDecl	prev = end		61312	0					
ANR	61839	IdentifierDeclType	AF_Point		61312	0					
ANR	61840	Identifier	prev		61312	1					
ANR	61841	AssignmentExpression	prev = end		61312	2		=			
ANR	61842	Identifier	end		61312	0					
ANR	61843	Identifier	end		61312	1					
ANR	61844	IdentifierDeclStatement	FT_Int contour_index = 0 ;	851:8:23201:23230	61312	5	True				
ANR	61845	IdentifierDecl	contour_index = 0		61312	0					
ANR	61846	IdentifierDeclType	FT_Int		61312	0					
ANR	61847	Identifier	contour_index		61312	1					
ANR	61848	AssignmentExpression	contour_index = 0		61312	2		=			
ANR	61849	Identifier	contour_index		61312	0					
ANR	61850	PrimaryExpression	0		61312	1					
ANR	61851	ForStatement	"for ( point = points ; point < point_limit ; point ++ , vec ++ , tag ++ )"		61312	6					
ANR	61852	ForInit	point = points ;	854:14:23248:23262	61312	0	True				
ANR	61853	AssignmentExpression	point = points		61312	0		=			
ANR	61854	Identifier	point		61312	0					
ANR	61855	Identifier	points		61312	1					
ANR	61856	Condition	point < point_limit	854:30:23264:23282	61312	1	True				
ANR	61857	RelationalExpression	point < point_limit		61312	0		<			
ANR	61858	Identifier	point		61312	0					
ANR	61859	Identifier	point_limit		61312	1					
ANR	61860	Expression	"point ++ , vec ++ , tag ++"	854:51:23285:23305	61312	2	True				
ANR	61861	PostIncDecOperationExpression	point ++		61312	0					
ANR	61862	Identifier	point		61312	0					
ANR	61863	IncDec	++		61312	1					
ANR	61864	Expression	"vec ++ , tag ++"		61312	1					
ANR	61865	PostIncDecOperationExpression	vec ++		61312	0					
ANR	61866	Identifier	vec		61312	0					
ANR	61867	IncDec	++		61312	1					
ANR	61868	PostIncDecOperationExpression	tag ++		61312	1					
ANR	61869	Identifier	tag		61312	0					
ANR	61870	IncDec	++		61312	1					
ANR	61871	CompoundStatement		123:10:3744:3764	61312	3					
ANR	61872	IdentifierDeclStatement	"FT_Pos out_x , out_y ;"	856:10:23329:23349	61312	0	True				
ANR	61873	IdentifierDecl	out_x		61312	0					
ANR	61874	IdentifierDeclType	FT_Pos		61312	0					
ANR	61875	Identifier	out_x		61312	1					
ANR	61876	IdentifierDecl	out_y		61312	1					
ANR	61877	IdentifierDeclType	FT_Pos		61312	0					
ANR	61878	Identifier	out_y		61312	1					
ANR	61879	ExpressionStatement	point -> in_dir = ( FT_Char ) AF_DIR_NONE	859:10:23363:23400	61312	1	True				
ANR	61880	AssignmentExpression	point -> in_dir = ( FT_Char ) AF_DIR_NONE		61312	0		=			
ANR	61881	PtrMemberAccess	point -> in_dir		61312	0					
ANR	61882	Identifier	point		61312	0					
ANR	61883	Identifier	in_dir		61312	1					
ANR	61884	CastExpression	( FT_Char ) AF_DIR_NONE		61312	1					
ANR	61885	CastTarget	FT_Char		61312	0					
ANR	61886	Identifier	AF_DIR_NONE		61312	1					
ANR	61887	ExpressionStatement	point -> out_dir = ( FT_Char ) AF_DIR_NONE	860:10:23412:23449	61312	2	True				
ANR	61888	AssignmentExpression	point -> out_dir = ( FT_Char ) AF_DIR_NONE		61312	0		=			
ANR	61889	PtrMemberAccess	point -> out_dir		61312	0					
ANR	61890	Identifier	point		61312	0					
ANR	61891	Identifier	out_dir		61312	1					
ANR	61892	CastExpression	( FT_Char ) AF_DIR_NONE		61312	1					
ANR	61893	CastTarget	FT_Char		61312	0					
ANR	61894	Identifier	AF_DIR_NONE		61312	1					
ANR	61895	ExpressionStatement	point -> fx = ( FT_Short ) vec -> x	862:10:23462:23490	61312	3	True				
ANR	61896	AssignmentExpression	point -> fx = ( FT_Short ) vec -> x		61312	0		=			
ANR	61897	PtrMemberAccess	point -> fx		61312	0					
ANR	61898	Identifier	point		61312	0					
ANR	61899	Identifier	fx		61312	1					
ANR	61900	CastExpression	( FT_Short ) vec -> x		61312	1					
ANR	61901	CastTarget	FT_Short		61312	0					
ANR	61902	PtrMemberAccess	vec -> x		61312	1					
ANR	61903	Identifier	vec		61312	0					
ANR	61904	Identifier	x		61312	1					
ANR	61905	ExpressionStatement	point -> fy = ( FT_Short ) vec -> y	863:10:23502:23530	61312	4	True				
ANR	61906	AssignmentExpression	point -> fy = ( FT_Short ) vec -> y		61312	0		=			
ANR	61907	PtrMemberAccess	point -> fy		61312	0					
ANR	61908	Identifier	point		61312	0					
ANR	61909	Identifier	fy		61312	1					
ANR	61910	CastExpression	( FT_Short ) vec -> y		61312	1					
ANR	61911	CastTarget	FT_Short		61312	0					
ANR	61912	PtrMemberAccess	vec -> y		61312	1					
ANR	61913	Identifier	vec		61312	0					
ANR	61914	Identifier	y		61312	1					
ANR	61915	ExpressionStatement	"point -> ox = point -> x = FT_MulFix ( vec -> x , x_scale ) + x_delta"	864:10:23542:23603	61312	5	True				
ANR	61916	AssignmentExpression	"point -> ox = point -> x = FT_MulFix ( vec -> x , x_scale ) + x_delta"		61312	0		=			
ANR	61917	PtrMemberAccess	point -> ox		61312	0					
ANR	61918	Identifier	point		61312	0					
ANR	61919	Identifier	ox		61312	1					
ANR	61920	AssignmentExpression	"point -> x = FT_MulFix ( vec -> x , x_scale ) + x_delta"		61312	1		=			
ANR	61921	PtrMemberAccess	point -> x		61312	0					
ANR	61922	Identifier	point		61312	0					
ANR	61923	Identifier	x		61312	1					
ANR	61924	AdditiveExpression	"FT_MulFix ( vec -> x , x_scale ) + x_delta"		61312	1		+			
ANR	61925	CallExpression	"FT_MulFix ( vec -> x , x_scale )"		61312	0					
ANR	61926	Callee	FT_MulFix		61312	0					
ANR	61927	Identifier	FT_MulFix		61312	0					
ANR	61928	ArgumentList	vec -> x		61312	1					
ANR	61929	Argument	vec -> x		61312	0					
ANR	61930	PtrMemberAccess	vec -> x		61312	0					
ANR	61931	Identifier	vec		61312	0					
ANR	61932	Identifier	x		61312	1					
ANR	61933	Argument	x_scale		61312	1					
ANR	61934	Identifier	x_scale		61312	0					
ANR	61935	Identifier	x_delta		61312	1					
ANR	61936	ExpressionStatement	"point -> oy = point -> y = FT_MulFix ( vec -> y , y_scale ) + y_delta"	865:10:23615:23676	61312	6	True				
ANR	61937	AssignmentExpression	"point -> oy = point -> y = FT_MulFix ( vec -> y , y_scale ) + y_delta"		61312	0		=			
ANR	61938	PtrMemberAccess	point -> oy		61312	0					
ANR	61939	Identifier	point		61312	0					
ANR	61940	Identifier	oy		61312	1					
ANR	61941	AssignmentExpression	"point -> y = FT_MulFix ( vec -> y , y_scale ) + y_delta"		61312	1		=			
ANR	61942	PtrMemberAccess	point -> y		61312	0					
ANR	61943	Identifier	point		61312	0					
ANR	61944	Identifier	y		61312	1					
ANR	61945	AdditiveExpression	"FT_MulFix ( vec -> y , y_scale ) + y_delta"		61312	1		+			
ANR	61946	CallExpression	"FT_MulFix ( vec -> y , y_scale )"		61312	0					
ANR	61947	Callee	FT_MulFix		61312	0					
ANR	61948	Identifier	FT_MulFix		61312	0					
ANR	61949	ArgumentList	vec -> y		61312	1					
ANR	61950	Argument	vec -> y		61312	0					
ANR	61951	PtrMemberAccess	vec -> y		61312	0					
ANR	61952	Identifier	vec		61312	0					
ANR	61953	Identifier	y		61312	1					
ANR	61954	Argument	y_scale		61312	1					
ANR	61955	Identifier	y_scale		61312	0					
ANR	61956	Identifier	y_delta		61312	1					
ANR	61957	ExpressionStatement	end -> fx = ( FT_Short ) outline -> points [ endpoint ] . x	867:10:23689:23736	61312	7	True				
ANR	61958	AssignmentExpression	end -> fx = ( FT_Short ) outline -> points [ endpoint ] . x		61312	0		=			
ANR	61959	PtrMemberAccess	end -> fx		61312	0					
ANR	61960	Identifier	end		61312	0					
ANR	61961	Identifier	fx		61312	1					
ANR	61962	CastExpression	( FT_Short ) outline -> points [ endpoint ] . x		61312	1					
ANR	61963	CastTarget	FT_Short		61312	0					
ANR	61964	MemberAccess	outline -> points [ endpoint ] . x		61312	1					
ANR	61965	ArrayIndexing	outline -> points [ endpoint ]		61312	0					
ANR	61966	PtrMemberAccess	outline -> points		61312	0					
ANR	61967	Identifier	outline		61312	0					
ANR	61968	Identifier	points		61312	1					
ANR	61969	Identifier	endpoint		61312	1					
ANR	61970	Identifier	x		61312	1					
ANR	61971	ExpressionStatement	end -> fy = ( FT_Short ) outline -> points [ endpoint ] . y	868:10:23748:23795	61312	8	True				
ANR	61972	AssignmentExpression	end -> fy = ( FT_Short ) outline -> points [ endpoint ] . y		61312	0		=			
ANR	61973	PtrMemberAccess	end -> fy		61312	0					
ANR	61974	Identifier	end		61312	0					
ANR	61975	Identifier	fy		61312	1					
ANR	61976	CastExpression	( FT_Short ) outline -> points [ endpoint ] . y		61312	1					
ANR	61977	CastTarget	FT_Short		61312	0					
ANR	61978	MemberAccess	outline -> points [ endpoint ] . y		61312	1					
ANR	61979	ArrayIndexing	outline -> points [ endpoint ]		61312	0					
ANR	61980	PtrMemberAccess	outline -> points		61312	0					
ANR	61981	Identifier	outline		61312	0					
ANR	61982	Identifier	points		61312	1					
ANR	61983	Identifier	endpoint		61312	1					
ANR	61984	Identifier	y		61312	1					
ANR	61985	SwitchStatement	switch ( FT_CURVE_TAG ( * tag ) )		61312	9					
ANR	61986	Condition	FT_CURVE_TAG ( * tag )	870:19:23817:23836	61312	0	True				
ANR	61987	CallExpression	FT_CURVE_TAG ( * tag )		61312	0					
ANR	61988	Callee	FT_CURVE_TAG		61312	0					
ANR	61989	Identifier	FT_CURVE_TAG		61312	0					
ANR	61990	ArgumentList	* tag		61312	1					
ANR	61991	Argument	* tag		61312	0					
ANR	61992	UnaryOperationExpression	* tag		61312	0					
ANR	61993	UnaryOperator	*		61312	0					
ANR	61994	Identifier	tag		61312	1					
ANR	61995	CompoundStatement		138:10:4265:4265	61312	1					
ANR	61996	Label	case FT_CURVE_TAG_CONIC :	872:10:23862:23885	61312	0	True				
ANR	61997	Identifier	FT_CURVE_TAG_CONIC		61312	0					
ANR	61998	ExpressionStatement	point -> flags = AF_FLAG_CONIC	873:12:23899:23927	61312	1	True				
ANR	61999	AssignmentExpression	point -> flags = AF_FLAG_CONIC		61312	0		=			
ANR	62000	PtrMemberAccess	point -> flags		61312	0					
ANR	62001	Identifier	point		61312	0					
ANR	62002	Identifier	flags		61312	1					
ANR	62003	Identifier	AF_FLAG_CONIC		61312	1					
ANR	62004	BreakStatement	break ;	874:12:23941:23946	61312	2	True				
ANR	62005	Label	case FT_CURVE_TAG_CUBIC :	875:10:23958:23981	61312	3	True				
ANR	62006	Identifier	FT_CURVE_TAG_CUBIC		61312	0					
ANR	62007	ExpressionStatement	point -> flags = AF_FLAG_CUBIC	876:12:23995:24023	61312	4	True				
ANR	62008	AssignmentExpression	point -> flags = AF_FLAG_CUBIC		61312	0		=			
ANR	62009	PtrMemberAccess	point -> flags		61312	0					
ANR	62010	Identifier	point		61312	0					
ANR	62011	Identifier	flags		61312	1					
ANR	62012	Identifier	AF_FLAG_CUBIC		61312	1					
ANR	62013	BreakStatement	break ;	877:12:24037:24042	61312	5	True				
ANR	62014	Label	default :	878:10:24054:24061	61312	6	True				
ANR	62015	Identifier	default		61312	0					
ANR	62016	ExpressionStatement	point -> flags = AF_FLAG_NONE	879:12:24075:24102	61312	7	True				
ANR	62017	AssignmentExpression	point -> flags = AF_FLAG_NONE		61312	0		=			
ANR	62018	PtrMemberAccess	point -> flags		61312	0					
ANR	62019	Identifier	point		61312	0					
ANR	62020	Identifier	flags		61312	1					
ANR	62021	Identifier	AF_FLAG_NONE		61312	1					
ANR	62022	ExpressionStatement	out_x = point -> fx - prev -> fx	882:10:24127:24155	61312	10	True				
ANR	62023	AssignmentExpression	out_x = point -> fx - prev -> fx		61312	0		=			
ANR	62024	Identifier	out_x		61312	0					
ANR	62025	AdditiveExpression	point -> fx - prev -> fx		61312	1		-			
ANR	62026	PtrMemberAccess	point -> fx		61312	0					
ANR	62027	Identifier	point		61312	0					
ANR	62028	Identifier	fx		61312	1					
ANR	62029	PtrMemberAccess	prev -> fx		61312	1					
ANR	62030	Identifier	prev		61312	0					
ANR	62031	Identifier	fx		61312	1					
ANR	62032	ExpressionStatement	out_y = point -> fy - prev -> fy	883:10:24167:24195	61312	11	True				
ANR	62033	AssignmentExpression	out_y = point -> fy - prev -> fy		61312	0		=			
ANR	62034	Identifier	out_y		61312	0					
ANR	62035	AdditiveExpression	point -> fy - prev -> fy		61312	1		-			
ANR	62036	PtrMemberAccess	point -> fy		61312	0					
ANR	62037	Identifier	point		61312	0					
ANR	62038	Identifier	fy		61312	1					
ANR	62039	PtrMemberAccess	prev -> fy		61312	1					
ANR	62040	Identifier	prev		61312	0					
ANR	62041	Identifier	fy		61312	1					
ANR	62042	IfStatement	if ( FT_ABS ( out_x ) + FT_ABS ( out_y ) < near_limit )		61312	12					
ANR	62043	Condition	FT_ABS ( out_x ) + FT_ABS ( out_y ) < near_limit	885:15:24213:24258	61312	0	True				
ANR	62044	RelationalExpression	FT_ABS ( out_x ) + FT_ABS ( out_y ) < near_limit		61312	0		<			
ANR	62045	AdditiveExpression	FT_ABS ( out_x ) + FT_ABS ( out_y )		61312	0		+			
ANR	62046	CallExpression	FT_ABS ( out_x )		61312	0					
ANR	62047	Callee	FT_ABS		61312	0					
ANR	62048	Identifier	FT_ABS		61312	0					
ANR	62049	ArgumentList	out_x		61312	1					
ANR	62050	Argument	out_x		61312	0					
ANR	62051	Identifier	out_x		61312	0					
ANR	62052	CallExpression	FT_ABS ( out_y )		61312	1					
ANR	62053	Callee	FT_ABS		61312	0					
ANR	62054	Identifier	FT_ABS		61312	0					
ANR	62055	ArgumentList	out_y		61312	1					
ANR	62056	Argument	out_y		61312	0					
ANR	62057	Identifier	out_y		61312	0					
ANR	62058	Identifier	near_limit		61312	1					
ANR	62059	ExpressionStatement	prev -> flags |= AF_FLAG_NEAR	886:12:24274:24301	61312	1	True				
ANR	62060	AssignmentExpression	prev -> flags |= AF_FLAG_NEAR		61312	0		|=			
ANR	62061	PtrMemberAccess	prev -> flags		61312	0					
ANR	62062	Identifier	prev		61312	0					
ANR	62063	Identifier	flags		61312	1					
ANR	62064	Identifier	AF_FLAG_NEAR		61312	1					
ANR	62065	ExpressionStatement	point -> prev = prev	888:10:24314:24332	61312	13	True				
ANR	62066	AssignmentExpression	point -> prev = prev		61312	0		=			
ANR	62067	PtrMemberAccess	point -> prev		61312	0					
ANR	62068	Identifier	point		61312	0					
ANR	62069	Identifier	prev		61312	1					
ANR	62070	Identifier	prev		61312	1					
ANR	62071	ExpressionStatement	prev -> next = point	889:10:24344:24363	61312	14	True				
ANR	62072	AssignmentExpression	prev -> next = point		61312	0		=			
ANR	62073	PtrMemberAccess	prev -> next		61312	0					
ANR	62074	Identifier	prev		61312	0					
ANR	62075	Identifier	next		61312	1					
ANR	62076	Identifier	point		61312	1					
ANR	62077	ExpressionStatement	prev = point	890:10:24375:24394	61312	15	True				
ANR	62078	AssignmentExpression	prev = point		61312	0		=			
ANR	62079	Identifier	prev		61312	0					
ANR	62080	Identifier	point		61312	1					
ANR	62081	IfStatement	if ( point == end )		61312	16					
ANR	62082	Condition	point == end	892:15:24412:24423	61312	0	True				
ANR	62083	EqualityExpression	point == end		61312	0		==			
ANR	62084	Identifier	point		61312	0					
ANR	62085	Identifier	end		61312	1					
ANR	62086	CompoundStatement		160:10:4852:4852	61312	1					
ANR	62087	IfStatement	if ( ++ contour_index < outline -> n_contours )		61312	0					
ANR	62088	Condition	++ contour_index < outline -> n_contours	894:17:24456:24492	61312	0	True				
ANR	62089	RelationalExpression	++ contour_index < outline -> n_contours		61312	0		<			
ANR	62090	UnaryExpression	++ contour_index		61312	0					
ANR	62091	IncDec	++		61312	0					
ANR	62092	Identifier	contour_index		61312	1					
ANR	62093	PtrMemberAccess	outline -> n_contours		61312	1					
ANR	62094	Identifier	outline		61312	0					
ANR	62095	Identifier	n_contours		61312	1					
ANR	62096	CompoundStatement		162:12:4923:4923	61312	1					
ANR	62097	ExpressionStatement	endpoint = outline -> contours [ contour_index ]	896:14:24524:24567	61312	0	True				
ANR	62098	AssignmentExpression	endpoint = outline -> contours [ contour_index ]		61312	0		=			
ANR	62099	Identifier	endpoint		61312	0					
ANR	62100	ArrayIndexing	outline -> contours [ contour_index ]		61312	1					
ANR	62101	PtrMemberAccess	outline -> contours		61312	0					
ANR	62102	Identifier	outline		61312	0					
ANR	62103	Identifier	contours		61312	1					
ANR	62104	Identifier	contour_index		61312	1					
ANR	62105	ExpressionStatement	end = points + endpoint	897:14:24583:24611	61312	1	True				
ANR	62106	AssignmentExpression	end = points + endpoint		61312	0		=			
ANR	62107	Identifier	end		61312	0					
ANR	62108	AdditiveExpression	points + endpoint		61312	1		+			
ANR	62109	Identifier	points		61312	0					
ANR	62110	Identifier	endpoint		61312	1					
ANR	62111	ExpressionStatement	prev = end	898:14:24627:24641	61312	2	True				
ANR	62112	AssignmentExpression	prev = end		61312	0		=			
ANR	62113	Identifier	prev		61312	0					
ANR	62114	Identifier	end		61312	1					
ANR	62115	CompoundStatement		176:8:5329:5357	61312	5					
ANR	62116	IdentifierDeclStatement	AF_Point * contour = hints -> contours ;	906:8:24742:24784	61312	0	True				
ANR	62117	IdentifierDecl	* contour = hints -> contours		61312	0					
ANR	62118	IdentifierDeclType	AF_Point *		61312	0					
ANR	62119	Identifier	contour		61312	1					
ANR	62120	AssignmentExpression	* contour = hints -> contours		61312	2		=			
ANR	62121	Identifier	contour		61312	0					
ANR	62122	PtrMemberAccess	hints -> contours		61312	1					
ANR	62123	Identifier	hints		61312	0					
ANR	62124	Identifier	contours		61312	1					
ANR	62125	IdentifierDeclStatement	AF_Point * contour_limit = contour + hints -> num_contours ;	907:8:24794:24850	61312	1	True				
ANR	62126	IdentifierDecl	* contour_limit = contour + hints -> num_contours		61312	0					
ANR	62127	IdentifierDeclType	AF_Point *		61312	0					
ANR	62128	Identifier	contour_limit		61312	1					
ANR	62129	AssignmentExpression	* contour_limit = contour + hints -> num_contours		61312	2		=			
ANR	62130	Identifier	contour_limit		61312	0					
ANR	62131	AdditiveExpression	contour + hints -> num_contours		61312	1		+			
ANR	62132	Identifier	contour		61312	0					
ANR	62133	PtrMemberAccess	hints -> num_contours		61312	1					
ANR	62134	Identifier	hints		61312	0					
ANR	62135	Identifier	num_contours		61312	1					
ANR	62136	IdentifierDeclStatement	short * end = outline -> contours ;	908:8:24860:24904	61312	2	True				
ANR	62137	IdentifierDecl	* end = outline -> contours		61312	0					
ANR	62138	IdentifierDeclType	short *		61312	0					
ANR	62139	Identifier	end		61312	1					
ANR	62140	AssignmentExpression	* end = outline -> contours		61312	2		=			
ANR	62141	Identifier	end		61312	0					
ANR	62142	PtrMemberAccess	outline -> contours		61312	1					
ANR	62143	Identifier	outline		61312	0					
ANR	62144	Identifier	contours		61312	1					
ANR	62145	IdentifierDeclStatement	short idx = 0 ;	909:8:24914:24942	61312	3	True				
ANR	62146	IdentifierDecl	idx = 0		61312	0					
ANR	62147	IdentifierDeclType	short		61312	0					
ANR	62148	Identifier	idx		61312	1					
ANR	62149	AssignmentExpression	idx = 0		61312	2		=			
ANR	62150	Identifier	idx		61312	0					
ANR	62151	PrimaryExpression	0		61312	1					
ANR	62152	ForStatement	"for ( ; contour < contour_limit ; contour ++ , end ++ )"		61312	4					
ANR	62153	Condition	contour < contour_limit	912:16:24962:24984	61312	0	True				
ANR	62154	RelationalExpression	contour < contour_limit		61312	0		<			
ANR	62155	Identifier	contour		61312	0					
ANR	62156	Identifier	contour_limit		61312	1					
ANR	62157	Expression	"contour ++ , end ++"	912:41:24987:25002	61312	1	True				
ANR	62158	PostIncDecOperationExpression	contour ++		61312	0					
ANR	62159	Identifier	contour		61312	0					
ANR	62160	IncDec	++		61312	1					
ANR	62161	PostIncDecOperationExpression	end ++		61312	1					
ANR	62162	Identifier	end		61312	0					
ANR	62163	IncDec	++		61312	1					
ANR	62164	CompoundStatement		180:8:5429:5429	61312	2					
ANR	62165	ExpressionStatement	contour [ 0 ] = points + idx	914:10:25026:25051	61312	0	True				
ANR	62166	AssignmentExpression	contour [ 0 ] = points + idx		61312	0		=			
ANR	62167	ArrayIndexing	contour [ 0 ]		61312	0					
ANR	62168	Identifier	contour		61312	0					
ANR	62169	PrimaryExpression	0		61312	1					
ANR	62170	AdditiveExpression	points + idx		61312	1		+			
ANR	62171	Identifier	points		61312	0					
ANR	62172	Identifier	idx		61312	1					
ANR	62173	ExpressionStatement	idx = ( short ) ( end [ 0 ] + 1 )	915:10:25063:25097	61312	1	True				
ANR	62174	AssignmentExpression	idx = ( short ) ( end [ 0 ] + 1 )		61312	0		=			
ANR	62175	Identifier	idx		61312	0					
ANR	62176	CastExpression	( short ) ( end [ 0 ] + 1 )		61312	1					
ANR	62177	CastTarget	short		61312	0					
ANR	62178	AdditiveExpression	end [ 0 ] + 1		61312	1		+			
ANR	62179	ArrayIndexing	end [ 0 ]		61312	0					
ANR	62180	Identifier	end		61312	0					
ANR	62181	PrimaryExpression	0		61312	1					
ANR	62182	PrimaryExpression	1		61312	1					
ANR	62183	CompoundStatement		202:8:6212:6276	61312	6					
ANR	62184	IdentifierDeclStatement	FT_Int near_limit2 = 2 * near_limit - 1 ;	932:8:25718:25758	61312	0	True				
ANR	62185	IdentifierDecl	near_limit2 = 2 * near_limit - 1		61312	0					
ANR	62186	IdentifierDeclType	FT_Int		61312	0					
ANR	62187	Identifier	near_limit2		61312	1					
ANR	62188	AssignmentExpression	near_limit2 = 2 * near_limit - 1		61312	2		=			
ANR	62189	Identifier	near_limit2		61312	0					
ANR	62190	AdditiveExpression	2 * near_limit - 1		61312	1		-			
ANR	62191	MultiplicativeExpression	2 * near_limit		61312	0		*			
ANR	62192	PrimaryExpression	2		61312	0					
ANR	62193	Identifier	near_limit		61312	1					
ANR	62194	PrimaryExpression	1		61312	1					
ANR	62195	IdentifierDeclStatement	AF_Point * contour ;	934:8:25769:25787	61312	1	True				
ANR	62196	IdentifierDecl	* contour		61312	0					
ANR	62197	IdentifierDeclType	AF_Point *		61312	0					
ANR	62198	Identifier	contour		61312	1					
ANR	62199	IdentifierDeclStatement	AF_Point * contour_limit = hints -> contours + hints -> num_contours ;	935:8:25797:25861	61312	2	True				
ANR	62200	IdentifierDecl	* contour_limit = hints -> contours + hints -> num_contours		61312	0					
ANR	62201	IdentifierDeclType	AF_Point *		61312	0					
ANR	62202	Identifier	contour_limit		61312	1					
ANR	62203	AssignmentExpression	* contour_limit = hints -> contours + hints -> num_contours		61312	2		=			
ANR	62204	Identifier	contour_limit		61312	0					
ANR	62205	AdditiveExpression	hints -> contours + hints -> num_contours		61312	1		+			
ANR	62206	PtrMemberAccess	hints -> contours		61312	0					
ANR	62207	Identifier	hints		61312	0					
ANR	62208	Identifier	contours		61312	1					
ANR	62209	PtrMemberAccess	hints -> num_contours		61312	1					
ANR	62210	Identifier	hints		61312	0					
ANR	62211	Identifier	num_contours		61312	1					
ANR	62212	ForStatement	for ( contour = hints -> contours ; contour < contour_limit ; contour ++ )		61312	3					
ANR	62213	ForInit	contour = hints -> contours ;	938:14:25879:25904	61312	0	True				
ANR	62214	AssignmentExpression	contour = hints -> contours		61312	0		=			
ANR	62215	Identifier	contour		61312	0					
ANR	62216	PtrMemberAccess	hints -> contours		61312	1					
ANR	62217	Identifier	hints		61312	0					
ANR	62218	Identifier	contours		61312	1					
ANR	62219	Condition	contour < contour_limit	938:41:25906:25928	61312	1	True				
ANR	62220	RelationalExpression	contour < contour_limit		61312	0		<			
ANR	62221	Identifier	contour		61312	0					
ANR	62222	Identifier	contour_limit		61312	1					
ANR	62223	PostIncDecOperationExpression	contour ++	938:66:25931:25939	61312	2	True				
ANR	62224	Identifier	contour		61312	0					
ANR	62225	IncDec	++		61312	1					
ANR	62226	CompoundStatement		210:10:6455:6475	61312	3					
ANR	62227	IdentifierDeclStatement	AF_Point first = * contour ;	940:10:25963:25989	61312	0	True				
ANR	62228	IdentifierDecl	first = * contour		61312	0					
ANR	62229	IdentifierDeclType	AF_Point		61312	0					
ANR	62230	Identifier	first		61312	1					
ANR	62231	AssignmentExpression	first = * contour		61312	2		=			
ANR	62232	Identifier	first		61312	0					
ANR	62233	UnaryOperationExpression	* contour		61312	1					
ANR	62234	UnaryOperator	*		61312	0					
ANR	62235	Identifier	contour		61312	1					
ANR	62236	IdentifierDeclStatement	"AF_Point next , prev , curr ;"	941:10:26001:26027	61312	1	True				
ANR	62237	IdentifierDecl	next		61312	0					
ANR	62238	IdentifierDeclType	AF_Point		61312	0					
ANR	62239	Identifier	next		61312	1					
ANR	62240	IdentifierDecl	prev		61312	1					
ANR	62241	IdentifierDeclType	AF_Point		61312	0					
ANR	62242	Identifier	prev		61312	1					
ANR	62243	IdentifierDecl	curr		61312	2					
ANR	62244	IdentifierDeclType	AF_Point		61312	0					
ANR	62245	Identifier	curr		61312	1					
ANR	62246	IdentifierDeclStatement	"FT_Pos out_x , out_y ;"	943:10:26040:26060	61312	2	True				
ANR	62247	IdentifierDecl	out_x		61312	0					
ANR	62248	IdentifierDeclType	FT_Pos		61312	0					
ANR	62249	Identifier	out_x		61312	1					
ANR	62250	IdentifierDecl	out_y		61312	1					
ANR	62251	IdentifierDeclType	FT_Pos		61312	0					
ANR	62252	Identifier	out_y		61312	1					
ANR	62253	ExpressionStatement	point = first	950:10:26285:26298	61312	3	True				
ANR	62254	AssignmentExpression	point = first		61312	0		=			
ANR	62255	Identifier	point		61312	0					
ANR	62256	Identifier	first		61312	1					
ANR	62257	ExpressionStatement	prev = first -> prev	951:10:26310:26329	61312	4	True				
ANR	62258	AssignmentExpression	prev = first -> prev		61312	0		=			
ANR	62259	Identifier	prev		61312	0					
ANR	62260	PtrMemberAccess	first -> prev		61312	1					
ANR	62261	Identifier	first		61312	0					
ANR	62262	Identifier	prev		61312	1					
ANR	62263	WhileStatement	while ( prev != first )		61312	5					
ANR	62264	Condition	prev != first	953:18:26350:26362	61312	0	True				
ANR	62265	EqualityExpression	prev != first		61312	0		!=			
ANR	62266	Identifier	prev		61312	0					
ANR	62267	Identifier	first		61312	1					
ANR	62268	CompoundStatement		221:10:6791:6791	61312	1					
ANR	62269	ExpressionStatement	out_x = point -> fx - prev -> fx	955:12:26390:26418	61312	0	True				
ANR	62270	AssignmentExpression	out_x = point -> fx - prev -> fx		61312	0		=			
ANR	62271	Identifier	out_x		61312	0					
ANR	62272	AdditiveExpression	point -> fx - prev -> fx		61312	1		-			
ANR	62273	PtrMemberAccess	point -> fx		61312	0					
ANR	62274	Identifier	point		61312	0					
ANR	62275	Identifier	fx		61312	1					
ANR	62276	PtrMemberAccess	prev -> fx		61312	1					
ANR	62277	Identifier	prev		61312	0					
ANR	62278	Identifier	fx		61312	1					
ANR	62279	ExpressionStatement	out_y = point -> fy - prev -> fy	956:12:26432:26460	61312	1	True				
ANR	62280	AssignmentExpression	out_y = point -> fy - prev -> fy		61312	0		=			
ANR	62281	Identifier	out_y		61312	0					
ANR	62282	AdditiveExpression	point -> fy - prev -> fy		61312	1		-			
ANR	62283	PtrMemberAccess	point -> fy		61312	0					
ANR	62284	Identifier	point		61312	0					
ANR	62285	Identifier	fy		61312	1					
ANR	62286	PtrMemberAccess	prev -> fy		61312	1					
ANR	62287	Identifier	prev		61312	0					
ANR	62288	Identifier	fy		61312	1					
ANR	62289	IfStatement	if ( FT_ABS ( out_x ) + FT_ABS ( out_y ) >= near_limit2 )		61312	2					
ANR	62290	Condition	FT_ABS ( out_x ) + FT_ABS ( out_y ) >= near_limit2	966:17:26872:26919	61312	0	True				
ANR	62291	RelationalExpression	FT_ABS ( out_x ) + FT_ABS ( out_y ) >= near_limit2		61312	0		>=			
ANR	62292	AdditiveExpression	FT_ABS ( out_x ) + FT_ABS ( out_y )		61312	0		+			
ANR	62293	CallExpression	FT_ABS ( out_x )		61312	0					
ANR	62294	Callee	FT_ABS		61312	0					
ANR	62295	Identifier	FT_ABS		61312	0					
ANR	62296	ArgumentList	out_x		61312	1					
ANR	62297	Argument	out_x		61312	0					
ANR	62298	Identifier	out_x		61312	0					
ANR	62299	CallExpression	FT_ABS ( out_y )		61312	1					
ANR	62300	Callee	FT_ABS		61312	0					
ANR	62301	Identifier	FT_ABS		61312	0					
ANR	62302	ArgumentList	out_y		61312	1					
ANR	62303	Argument	out_y		61312	0					
ANR	62304	Identifier	out_y		61312	0					
ANR	62305	Identifier	near_limit2		61312	1					
ANR	62306	BreakStatement	break ;	967:14:26937:26942	61312	1	True				
ANR	62307	ExpressionStatement	point = prev	969:12:26957:26969	61312	3	True				
ANR	62308	AssignmentExpression	point = prev		61312	0		=			
ANR	62309	Identifier	point		61312	0					
ANR	62310	Identifier	prev		61312	1					
ANR	62311	ExpressionStatement	prev = prev -> prev	970:12:26983:27001	61312	4	True				
ANR	62312	AssignmentExpression	prev = prev -> prev		61312	0		=			
ANR	62313	Identifier	prev		61312	0					
ANR	62314	PtrMemberAccess	prev -> prev		61312	1					
ANR	62315	Identifier	prev		61312	0					
ANR	62316	Identifier	prev		61312	1					
ANR	62317	ExpressionStatement	first = point	974:10:27061:27074	61312	6	True				
ANR	62318	AssignmentExpression	first = point		61312	0		=			
ANR	62319	Identifier	first		61312	0					
ANR	62320	Identifier	point		61312	1					
ANR	62321	ExpressionStatement	curr = first	979:10:27214:27226	61312	7	True				
ANR	62322	AssignmentExpression	curr = first		61312	0		=			
ANR	62323	Identifier	curr		61312	0					
ANR	62324	Identifier	first		61312	1					
ANR	62325	ExpressionStatement	curr -> u = ( FT_Pos ) ( first - curr )	989:10:27567:27602	61312	8	True				
ANR	62326	AssignmentExpression	curr -> u = ( FT_Pos ) ( first - curr )		61312	0		=			
ANR	62327	PtrMemberAccess	curr -> u		61312	0					
ANR	62328	Identifier	curr		61312	0					
ANR	62329	Identifier	u		61312	1					
ANR	62330	CastExpression	( FT_Pos ) ( first - curr )		61312	1					
ANR	62331	CastTarget	FT_Pos		61312	0					
ANR	62332	AdditiveExpression	first - curr		61312	1		-			
ANR	62333	Identifier	first		61312	0					
ANR	62334	Identifier	curr		61312	1					
ANR	62335	ExpressionStatement	first -> v = - curr -> u	990:10:27614:27633	61312	9	True				
ANR	62336	AssignmentExpression	first -> v = - curr -> u		61312	0		=			
ANR	62337	PtrMemberAccess	first -> v		61312	0					
ANR	62338	Identifier	first		61312	0					
ANR	62339	Identifier	v		61312	1					
ANR	62340	UnaryOperationExpression	- curr -> u		61312	1					
ANR	62341	UnaryOperator	-		61312	0					
ANR	62342	PtrMemberAccess	curr -> u		61312	1					
ANR	62343	Identifier	curr		61312	0					
ANR	62344	Identifier	u		61312	1					
ANR	62345	ExpressionStatement	out_x = 0	992:10:27646:27655	61312	10	True				
ANR	62346	AssignmentExpression	out_x = 0		61312	0		=			
ANR	62347	Identifier	out_x		61312	0					
ANR	62348	PrimaryExpression	0		61312	1					
ANR	62349	ExpressionStatement	out_y = 0	993:10:27667:27676	61312	11	True				
ANR	62350	AssignmentExpression	out_y = 0		61312	0		=			
ANR	62351	Identifier	out_y		61312	0					
ANR	62352	PrimaryExpression	0		61312	1					
ANR	62353	ExpressionStatement	next = first	995:10:27689:27701	61312	12	True				
ANR	62354	AssignmentExpression	next = first		61312	0		=			
ANR	62355	Identifier	next		61312	0					
ANR	62356	Identifier	first		61312	1					
ANR	62357	DoStatement	do		61312	13					
ANR	62358	CompoundStatement		265:12:8155:8176	61312	0					
ANR	62359	IdentifierDeclStatement	AF_Direction out_dir ;	998:12:27740:27761	61312	0	True				
ANR	62360	IdentifierDecl	out_dir		61312	0					
ANR	62361	IdentifierDeclType	AF_Direction		61312	0					
ANR	62362	Identifier	out_dir		61312	1					
ANR	62363	ExpressionStatement	point = next	1001:12:27777:27789	61312	1	True				
ANR	62364	AssignmentExpression	point = next		61312	0		=			
ANR	62365	Identifier	point		61312	0					
ANR	62366	Identifier	next		61312	1					
ANR	62367	ExpressionStatement	next = point -> next	1002:12:27803:27822	61312	2	True				
ANR	62368	AssignmentExpression	next = point -> next		61312	0		=			
ANR	62369	Identifier	next		61312	0					
ANR	62370	PtrMemberAccess	point -> next		61312	1					
ANR	62371	Identifier	point		61312	0					
ANR	62372	Identifier	next		61312	1					
ANR	62373	ExpressionStatement	out_x += next -> fx - point -> fx	1004:12:27837:27866	61312	3	True				
ANR	62374	AssignmentExpression	out_x += next -> fx - point -> fx		61312	0		+=			
ANR	62375	Identifier	out_x		61312	0					
ANR	62376	AdditiveExpression	next -> fx - point -> fx		61312	1		-			
ANR	62377	PtrMemberAccess	next -> fx		61312	0					
ANR	62378	Identifier	next		61312	0					
ANR	62379	Identifier	fx		61312	1					
ANR	62380	PtrMemberAccess	point -> fx		61312	1					
ANR	62381	Identifier	point		61312	0					
ANR	62382	Identifier	fx		61312	1					
ANR	62383	ExpressionStatement	out_y += next -> fy - point -> fy	1005:12:27880:27909	61312	4	True				
ANR	62384	AssignmentExpression	out_y += next -> fy - point -> fy		61312	0		+=			
ANR	62385	Identifier	out_y		61312	0					
ANR	62386	AdditiveExpression	next -> fy - point -> fy		61312	1		-			
ANR	62387	PtrMemberAccess	next -> fy		61312	0					
ANR	62388	Identifier	next		61312	0					
ANR	62389	Identifier	fy		61312	1					
ANR	62390	PtrMemberAccess	point -> fy		61312	1					
ANR	62391	Identifier	point		61312	0					
ANR	62392	Identifier	fy		61312	1					
ANR	62393	IfStatement	if ( FT_ABS ( out_x ) + FT_ABS ( out_y ) < near_limit )		61312	5					
ANR	62394	Condition	FT_ABS ( out_x ) + FT_ABS ( out_y ) < near_limit	1007:17:27929:27974	61312	0	True				
ANR	62395	RelationalExpression	FT_ABS ( out_x ) + FT_ABS ( out_y ) < near_limit		61312	0		<			
ANR	62396	AdditiveExpression	FT_ABS ( out_x ) + FT_ABS ( out_y )		61312	0		+			
ANR	62397	CallExpression	FT_ABS ( out_x )		61312	0					
ANR	62398	Callee	FT_ABS		61312	0					
ANR	62399	Identifier	FT_ABS		61312	0					
ANR	62400	ArgumentList	out_x		61312	1					
ANR	62401	Argument	out_x		61312	0					
ANR	62402	Identifier	out_x		61312	0					
ANR	62403	CallExpression	FT_ABS ( out_y )		61312	1					
ANR	62404	Callee	FT_ABS		61312	0					
ANR	62405	Identifier	FT_ABS		61312	0					
ANR	62406	ArgumentList	out_y		61312	1					
ANR	62407	Argument	out_y		61312	0					
ANR	62408	Identifier	out_y		61312	0					
ANR	62409	Identifier	near_limit		61312	1					
ANR	62410	CompoundStatement		275:12:8405:8405	61312	1					
ANR	62411	ExpressionStatement	next -> flags |= AF_FLAG_WEAK_INTERPOLATION	1009:14:28006:28047	61312	0	True				
ANR	62412	AssignmentExpression	next -> flags |= AF_FLAG_WEAK_INTERPOLATION		61312	0		|=			
ANR	62413	PtrMemberAccess	next -> flags		61312	0					
ANR	62414	Identifier	next		61312	0					
ANR	62415	Identifier	flags		61312	1					
ANR	62416	Identifier	AF_FLAG_WEAK_INTERPOLATION		61312	1					
ANR	62417	ContinueStatement	continue ;	1010:14:28063:28071	61312	1	True				
ANR	62418	ExpressionStatement	curr -> u = ( FT_Pos ) ( next - curr )	1013:12:28100:28133	61312	6	True				
ANR	62419	AssignmentExpression	curr -> u = ( FT_Pos ) ( next - curr )		61312	0		=			
ANR	62420	PtrMemberAccess	curr -> u		61312	0					
ANR	62421	Identifier	curr		61312	0					
ANR	62422	Identifier	u		61312	1					
ANR	62423	CastExpression	( FT_Pos ) ( next - curr )		61312	1					
ANR	62424	CastTarget	FT_Pos		61312	0					
ANR	62425	AdditiveExpression	next - curr		61312	1		-			
ANR	62426	Identifier	next		61312	0					
ANR	62427	Identifier	curr		61312	1					
ANR	62428	ExpressionStatement	next -> v = - curr -> u	1014:12:28147:28165	61312	7	True				
ANR	62429	AssignmentExpression	next -> v = - curr -> u		61312	0		=			
ANR	62430	PtrMemberAccess	next -> v		61312	0					
ANR	62431	Identifier	next		61312	0					
ANR	62432	Identifier	v		61312	1					
ANR	62433	UnaryOperationExpression	- curr -> u		61312	1					
ANR	62434	UnaryOperator	-		61312	0					
ANR	62435	PtrMemberAccess	curr -> u		61312	1					
ANR	62436	Identifier	curr		61312	0					
ANR	62437	Identifier	u		61312	1					
ANR	62438	ExpressionStatement	"out_dir = af_direction_compute ( out_x , out_y )"	1016:12:28180:28226	61312	8	True				
ANR	62439	AssignmentExpression	"out_dir = af_direction_compute ( out_x , out_y )"		61312	0		=			
ANR	62440	Identifier	out_dir		61312	0					
ANR	62441	CallExpression	"af_direction_compute ( out_x , out_y )"		61312	1					
ANR	62442	Callee	af_direction_compute		61312	0					
ANR	62443	Identifier	af_direction_compute		61312	0					
ANR	62444	ArgumentList	out_x		61312	1					
ANR	62445	Argument	out_x		61312	0					
ANR	62446	Identifier	out_x		61312	0					
ANR	62447	Argument	out_y		61312	1					
ANR	62448	Identifier	out_y		61312	0					
ANR	62449	ExpressionStatement	curr -> out_dir = ( FT_Char ) out_dir	1020:12:28365:28397	61312	9	True				
ANR	62450	AssignmentExpression	curr -> out_dir = ( FT_Char ) out_dir		61312	0		=			
ANR	62451	PtrMemberAccess	curr -> out_dir		61312	0					
ANR	62452	Identifier	curr		61312	0					
ANR	62453	Identifier	out_dir		61312	1					
ANR	62454	CastExpression	( FT_Char ) out_dir		61312	1					
ANR	62455	CastTarget	FT_Char		61312	0					
ANR	62456	Identifier	out_dir		61312	1					
ANR	62457	ForStatement	for ( curr = curr -> next ; curr != next ; curr = curr -> next )		61312	10					
ANR	62458	ForInit	curr = curr -> next ;	1021:18:28417:28434	61312	0	True				
ANR	62459	AssignmentExpression	curr = curr -> next		61312	0		=			
ANR	62460	Identifier	curr		61312	0					
ANR	62461	PtrMemberAccess	curr -> next		61312	1					
ANR	62462	Identifier	curr		61312	0					
ANR	62463	Identifier	next		61312	1					
ANR	62464	Condition	curr != next	1021:37:28436:28447	61312	1	True				
ANR	62465	EqualityExpression	curr != next		61312	0		!=			
ANR	62466	Identifier	curr		61312	0					
ANR	62467	Identifier	next		61312	1					
ANR	62468	AssignmentExpression	curr = curr -> next	1021:51:28450:28466	61312	2	True	=			
ANR	62469	Identifier	curr		61312	0					
ANR	62470	PtrMemberAccess	curr -> next		61312	1					
ANR	62471	Identifier	curr		61312	0					
ANR	62472	Identifier	next		61312	1					
ANR	62473	CompoundStatement		289:12:8897:8897	61312	3					
ANR	62474	ExpressionStatement	curr -> in_dir = ( FT_Char ) out_dir	1023:14:28498:28530	61312	0	True				
ANR	62475	AssignmentExpression	curr -> in_dir = ( FT_Char ) out_dir		61312	0		=			
ANR	62476	PtrMemberAccess	curr -> in_dir		61312	0					
ANR	62477	Identifier	curr		61312	0					
ANR	62478	Identifier	in_dir		61312	1					
ANR	62479	CastExpression	( FT_Char ) out_dir		61312	1					
ANR	62480	CastTarget	FT_Char		61312	0					
ANR	62481	Identifier	out_dir		61312	1					
ANR	62482	ExpressionStatement	curr -> out_dir = ( FT_Char ) out_dir	1024:14:28546:28578	61312	1	True				
ANR	62483	AssignmentExpression	curr -> out_dir = ( FT_Char ) out_dir		61312	0		=			
ANR	62484	PtrMemberAccess	curr -> out_dir		61312	0					
ANR	62485	Identifier	curr		61312	0					
ANR	62486	Identifier	out_dir		61312	1					
ANR	62487	CastExpression	( FT_Char ) out_dir		61312	1					
ANR	62488	CastTarget	FT_Char		61312	0					
ANR	62489	Identifier	out_dir		61312	1					
ANR	62490	ExpressionStatement	next -> in_dir = ( FT_Char ) out_dir	1026:12:28606:28637	61312	11	True				
ANR	62491	AssignmentExpression	next -> in_dir = ( FT_Char ) out_dir		61312	0		=			
ANR	62492	PtrMemberAccess	next -> in_dir		61312	0					
ANR	62493	Identifier	next		61312	0					
ANR	62494	Identifier	in_dir		61312	1					
ANR	62495	CastExpression	( FT_Char ) out_dir		61312	1					
ANR	62496	CastTarget	FT_Char		61312	0					
ANR	62497	Identifier	out_dir		61312	1					
ANR	62498	ExpressionStatement	curr -> u = ( FT_Pos ) ( first - curr )	1028:12:28652:28687	61312	12	True				
ANR	62499	AssignmentExpression	curr -> u = ( FT_Pos ) ( first - curr )		61312	0		=			
ANR	62500	PtrMemberAccess	curr -> u		61312	0					
ANR	62501	Identifier	curr		61312	0					
ANR	62502	Identifier	u		61312	1					
ANR	62503	CastExpression	( FT_Pos ) ( first - curr )		61312	1					
ANR	62504	CastTarget	FT_Pos		61312	0					
ANR	62505	AdditiveExpression	first - curr		61312	1		-			
ANR	62506	Identifier	first		61312	0					
ANR	62507	Identifier	curr		61312	1					
ANR	62508	ExpressionStatement	first -> v = - curr -> u	1029:12:28701:28720	61312	13	True				
ANR	62509	AssignmentExpression	first -> v = - curr -> u		61312	0		=			
ANR	62510	PtrMemberAccess	first -> v		61312	0					
ANR	62511	Identifier	first		61312	0					
ANR	62512	Identifier	v		61312	1					
ANR	62513	UnaryOperationExpression	- curr -> u		61312	1					
ANR	62514	UnaryOperator	-		61312	0					
ANR	62515	PtrMemberAccess	curr -> u		61312	1					
ANR	62516	Identifier	curr		61312	0					
ANR	62517	Identifier	u		61312	1					
ANR	62518	ExpressionStatement	out_x = 0	1031:12:28735:28744	61312	14	True				
ANR	62519	AssignmentExpression	out_x = 0		61312	0		=			
ANR	62520	Identifier	out_x		61312	0					
ANR	62521	PrimaryExpression	0		61312	1					
ANR	62522	ExpressionStatement	out_y = 0	1032:12:28758:28767	61312	15	True				
ANR	62523	AssignmentExpression	out_y = 0		61312	0		=			
ANR	62524	Identifier	out_y		61312	0					
ANR	62525	PrimaryExpression	0		61312	1					
ANR	62526	Condition	next != first	1034:20:28790:28802	61312	1	True				
ANR	62527	EqualityExpression	next != first		61312	0		!=			
ANR	62528	Identifier	next		61312	0					
ANR	62529	Identifier	first		61312	1					
ANR	62530	ForStatement	for ( point = points ; point < point_limit ; point ++ )		61312	4					
ANR	62531	ForInit	point = points ;	1046:14:29262:29276	61312	0	True				
ANR	62532	AssignmentExpression	point = points		61312	0		=			
ANR	62533	Identifier	point		61312	0					
ANR	62534	Identifier	points		61312	1					
ANR	62535	Condition	point < point_limit	1046:30:29278:29296	61312	1	True				
ANR	62536	RelationalExpression	point < point_limit		61312	0		<			
ANR	62537	Identifier	point		61312	0					
ANR	62538	Identifier	point_limit		61312	1					
ANR	62539	PostIncDecOperationExpression	point ++	1046:51:29299:29305	61312	2	True				
ANR	62540	Identifier	point		61312	0					
ANR	62541	IncDec	++		61312	1					
ANR	62542	CompoundStatement		314:8:9732:9732	61312	3					
ANR	62543	IfStatement	if ( point -> flags & AF_FLAG_WEAK_INTERPOLATION )		61312	0					
ANR	62544	Condition	point -> flags & AF_FLAG_WEAK_INTERPOLATION	1048:15:29334:29374	61312	0	True				
ANR	62545	BitAndExpression	point -> flags & AF_FLAG_WEAK_INTERPOLATION		61312	0		&			
ANR	62546	PtrMemberAccess	point -> flags		61312	0					
ANR	62547	Identifier	point		61312	0					
ANR	62548	Identifier	flags		61312	1					
ANR	62549	Identifier	AF_FLAG_WEAK_INTERPOLATION		61312	1					
ANR	62550	ContinueStatement	continue ;	1049:12:29390:29398	61312	1	True				
ANR	62551	IfStatement	if ( point -> in_dir == AF_DIR_NONE && point -> out_dir == AF_DIR_NONE )		61312	1					
ANR	62552	Condition	point -> in_dir == AF_DIR_NONE && point -> out_dir == AF_DIR_NONE	1051:15:29416:29492	61312	0	True				
ANR	62553	AndExpression	point -> in_dir == AF_DIR_NONE && point -> out_dir == AF_DIR_NONE		61312	0		&&			
ANR	62554	EqualityExpression	point -> in_dir == AF_DIR_NONE		61312	0		==			
ANR	62555	PtrMemberAccess	point -> in_dir		61312	0					
ANR	62556	Identifier	point		61312	0					
ANR	62557	Identifier	in_dir		61312	1					
ANR	62558	Identifier	AF_DIR_NONE		61312	1					
ANR	62559	EqualityExpression	point -> out_dir == AF_DIR_NONE		61312	1		==			
ANR	62560	PtrMemberAccess	point -> out_dir		61312	0					
ANR	62561	Identifier	point		61312	0					
ANR	62562	Identifier	out_dir		61312	1					
ANR	62563	Identifier	AF_DIR_NONE		61312	1					
ANR	62564	CompoundStatement		327:12:10126:10161	61312	1					
ANR	62565	IdentifierDeclStatement	"FT_Pos in_x , in_y ;"	1056:12:29595:29613	61312	0	True				
ANR	62566	IdentifierDecl	in_x		61312	0					
ANR	62567	IdentifierDeclType	FT_Pos		61312	0					
ANR	62568	Identifier	in_x		61312	1					
ANR	62569	IdentifierDecl	in_y		61312	1					
ANR	62570	IdentifierDeclType	FT_Pos		61312	0					
ANR	62571	Identifier	in_y		61312	1					
ANR	62572	IdentifierDeclStatement	"FT_Pos out_x , out_y ;"	1057:12:29627:29647	61312	1	True				
ANR	62573	IdentifierDecl	out_x		61312	0					
ANR	62574	IdentifierDeclType	FT_Pos		61312	0					
ANR	62575	Identifier	out_x		61312	1					
ANR	62576	IdentifierDecl	out_y		61312	1					
ANR	62577	IdentifierDeclType	FT_Pos		61312	0					
ANR	62578	Identifier	out_y		61312	1					
ANR	62579	IdentifierDeclStatement	AF_Point next_u = point + point -> u ;	1059:12:29662:29697	61312	2	True				
ANR	62580	IdentifierDecl	next_u = point + point -> u		61312	0					
ANR	62581	IdentifierDeclType	AF_Point		61312	0					
ANR	62582	Identifier	next_u		61312	1					
ANR	62583	AssignmentExpression	next_u = point + point -> u		61312	2		=			
ANR	62584	Identifier	next_u		61312	0					
ANR	62585	AdditiveExpression	point + point -> u		61312	1		+			
ANR	62586	Identifier	point		61312	0					
ANR	62587	PtrMemberAccess	point -> u		61312	1					
ANR	62588	Identifier	point		61312	0					
ANR	62589	Identifier	u		61312	1					
ANR	62590	IdentifierDeclStatement	AF_Point prev_v = point + point -> v ;	1060:12:29711:29746	61312	3	True				
ANR	62591	IdentifierDecl	prev_v = point + point -> v		61312	0					
ANR	62592	IdentifierDeclType	AF_Point		61312	0					
ANR	62593	Identifier	prev_v		61312	1					
ANR	62594	AssignmentExpression	prev_v = point + point -> v		61312	2		=			
ANR	62595	Identifier	prev_v		61312	0					
ANR	62596	AdditiveExpression	point + point -> v		61312	1		+			
ANR	62597	Identifier	point		61312	0					
ANR	62598	PtrMemberAccess	point -> v		61312	1					
ANR	62599	Identifier	point		61312	0					
ANR	62600	Identifier	v		61312	1					
ANR	62601	ExpressionStatement	in_x = point -> fx - prev_v -> fx	1063:12:29762:29791	61312	4	True				
ANR	62602	AssignmentExpression	in_x = point -> fx - prev_v -> fx		61312	0		=			
ANR	62603	Identifier	in_x		61312	0					
ANR	62604	AdditiveExpression	point -> fx - prev_v -> fx		61312	1		-			
ANR	62605	PtrMemberAccess	point -> fx		61312	0					
ANR	62606	Identifier	point		61312	0					
ANR	62607	Identifier	fx		61312	1					
ANR	62608	PtrMemberAccess	prev_v -> fx		61312	1					
ANR	62609	Identifier	prev_v		61312	0					
ANR	62610	Identifier	fx		61312	1					
ANR	62611	ExpressionStatement	in_y = point -> fy - prev_v -> fy	1064:12:29805:29834	61312	5	True				
ANR	62612	AssignmentExpression	in_y = point -> fy - prev_v -> fy		61312	0		=			
ANR	62613	Identifier	in_y		61312	0					
ANR	62614	AdditiveExpression	point -> fy - prev_v -> fy		61312	1		-			
ANR	62615	PtrMemberAccess	point -> fy		61312	0					
ANR	62616	Identifier	point		61312	0					
ANR	62617	Identifier	fy		61312	1					
ANR	62618	PtrMemberAccess	prev_v -> fy		61312	1					
ANR	62619	Identifier	prev_v		61312	0					
ANR	62620	Identifier	fy		61312	1					
ANR	62621	ExpressionStatement	out_x = next_u -> fx - point -> fx	1066:12:29849:29879	61312	6	True				
ANR	62622	AssignmentExpression	out_x = next_u -> fx - point -> fx		61312	0		=			
ANR	62623	Identifier	out_x		61312	0					
ANR	62624	AdditiveExpression	next_u -> fx - point -> fx		61312	1		-			
ANR	62625	PtrMemberAccess	next_u -> fx		61312	0					
ANR	62626	Identifier	next_u		61312	0					
ANR	62627	Identifier	fx		61312	1					
ANR	62628	PtrMemberAccess	point -> fx		61312	1					
ANR	62629	Identifier	point		61312	0					
ANR	62630	Identifier	fx		61312	1					
ANR	62631	ExpressionStatement	out_y = next_u -> fy - point -> fy	1067:12:29893:29923	61312	7	True				
ANR	62632	AssignmentExpression	out_y = next_u -> fy - point -> fy		61312	0		=			
ANR	62633	Identifier	out_y		61312	0					
ANR	62634	AdditiveExpression	next_u -> fy - point -> fy		61312	1		-			
ANR	62635	PtrMemberAccess	next_u -> fy		61312	0					
ANR	62636	Identifier	next_u		61312	0					
ANR	62637	Identifier	fy		61312	1					
ANR	62638	PtrMemberAccess	point -> fy		61312	1					
ANR	62639	Identifier	point		61312	0					
ANR	62640	Identifier	fy		61312	1					
ANR	62641	IfStatement	if ( ( in_x ^ out_x ) >= 0 && ( in_y ^ out_y ) >= 0 )		61312	8					
ANR	62642	Condition	( in_x ^ out_x ) >= 0 && ( in_y ^ out_y ) >= 0	1069:17:29943:29988	61312	0	True				
ANR	62643	AndExpression	( in_x ^ out_x ) >= 0 && ( in_y ^ out_y ) >= 0		61312	0		&&			
ANR	62644	RelationalExpression	( in_x ^ out_x ) >= 0		61312	0		>=			
ANR	62645	ExclusiveOrExpression	in_x ^ out_x		61312	0		^			
ANR	62646	Identifier	in_x		61312	0					
ANR	62647	Identifier	out_x		61312	1					
ANR	62648	PrimaryExpression	0		61312	1					
ANR	62649	RelationalExpression	( in_y ^ out_y ) >= 0		61312	1		>=			
ANR	62650	ExclusiveOrExpression	in_y ^ out_y		61312	0		^			
ANR	62651	Identifier	in_y		61312	0					
ANR	62652	Identifier	out_y		61312	1					
ANR	62653	PrimaryExpression	0		61312	1					
ANR	62654	CompoundStatement		337:12:10419:10419	61312	1					
ANR	62655	ExpressionStatement	point -> flags |= AF_FLAG_WEAK_INTERPOLATION	1074:14:30129:30171	61312	0	True				
ANR	62656	AssignmentExpression	point -> flags |= AF_FLAG_WEAK_INTERPOLATION		61312	0		|=			
ANR	62657	PtrMemberAccess	point -> flags		61312	0					
ANR	62658	Identifier	point		61312	0					
ANR	62659	Identifier	flags		61312	1					
ANR	62660	Identifier	AF_FLAG_WEAK_INTERPOLATION		61312	1					
ANR	62661	ExpressionStatement	prev_v -> u = ( FT_Pos ) ( next_u - prev_v )	1076:14:30188:30227	61312	1	True				
ANR	62662	AssignmentExpression	prev_v -> u = ( FT_Pos ) ( next_u - prev_v )		61312	0		=			
ANR	62663	PtrMemberAccess	prev_v -> u		61312	0					
ANR	62664	Identifier	prev_v		61312	0					
ANR	62665	Identifier	u		61312	1					
ANR	62666	CastExpression	( FT_Pos ) ( next_u - prev_v )		61312	1					
ANR	62667	CastTarget	FT_Pos		61312	0					
ANR	62668	AdditiveExpression	next_u - prev_v		61312	1		-			
ANR	62669	Identifier	next_u		61312	0					
ANR	62670	Identifier	prev_v		61312	1					
ANR	62671	ExpressionStatement	next_u -> v = - prev_v -> u	1077:14:30243:30265	61312	2	True				
ANR	62672	AssignmentExpression	next_u -> v = - prev_v -> u		61312	0		=			
ANR	62673	PtrMemberAccess	next_u -> v		61312	0					
ANR	62674	Identifier	next_u		61312	0					
ANR	62675	Identifier	v		61312	1					
ANR	62676	UnaryOperationExpression	- prev_v -> u		61312	1					
ANR	62677	UnaryOperator	-		61312	0					
ANR	62678	PtrMemberAccess	prev_v -> u		61312	1					
ANR	62679	Identifier	prev_v		61312	0					
ANR	62680	Identifier	u		61312	1					
ANR	62681	ForStatement	for ( point = points ; point < point_limit ; point ++ )		61312	5					
ANR	62682	ForInit	point = points ;	1088:14:30515:30529	61312	0	True				
ANR	62683	AssignmentExpression	point = points		61312	0		=			
ANR	62684	Identifier	point		61312	0					
ANR	62685	Identifier	points		61312	1					
ANR	62686	Condition	point < point_limit	1088:30:30531:30549	61312	1	True				
ANR	62687	RelationalExpression	point < point_limit		61312	0		<			
ANR	62688	Identifier	point		61312	0					
ANR	62689	Identifier	point_limit		61312	1					
ANR	62690	PostIncDecOperationExpression	point ++	1088:51:30552:30558	61312	2	True				
ANR	62691	Identifier	point		61312	0					
ANR	62692	IncDec	++		61312	1					
ANR	62693	CompoundStatement		356:8:10985:10985	61312	3					
ANR	62694	IfStatement	if ( point -> flags & AF_FLAG_WEAK_INTERPOLATION )		61312	0					
ANR	62695	Condition	point -> flags & AF_FLAG_WEAK_INTERPOLATION	1090:15:30587:30627	61312	0	True				
ANR	62696	BitAndExpression	point -> flags & AF_FLAG_WEAK_INTERPOLATION		61312	0		&			
ANR	62697	PtrMemberAccess	point -> flags		61312	0					
ANR	62698	Identifier	point		61312	0					
ANR	62699	Identifier	flags		61312	1					
ANR	62700	Identifier	AF_FLAG_WEAK_INTERPOLATION		61312	1					
ANR	62701	ContinueStatement	continue ;	1091:12:30643:30651	61312	1	True				
ANR	62702	IfStatement	if ( point -> flags & AF_FLAG_CONTROL )		61312	1					
ANR	62703	Condition	point -> flags & AF_FLAG_CONTROL	1093:15:30669:30698	61312	0	True				
ANR	62704	BitAndExpression	point -> flags & AF_FLAG_CONTROL		61312	0		&			
ANR	62705	PtrMemberAccess	point -> flags		61312	0					
ANR	62706	Identifier	point		61312	0					
ANR	62707	Identifier	flags		61312	1					
ANR	62708	Identifier	AF_FLAG_CONTROL		61312	1					
ANR	62709	CompoundStatement		361:10:11127:11127	61312	1					
ANR	62710	Label	Is_Weak_Point :	1096:10:30773:30786	61312	0	True				
ANR	62711	Identifier	Is_Weak_Point		61312	0					
ANR	62712	ExpressionStatement	point -> flags |= AF_FLAG_WEAK_INTERPOLATION	1097:12:30800:30842	61312	1	True				
ANR	62713	AssignmentExpression	point -> flags |= AF_FLAG_WEAK_INTERPOLATION		61312	0		|=			
ANR	62714	PtrMemberAccess	point -> flags		61312	0					
ANR	62715	Identifier	point		61312	0					
ANR	62716	Identifier	flags		61312	1					
ANR	62717	Identifier	AF_FLAG_WEAK_INTERPOLATION		61312	1					
ANR	62718	ElseStatement	else		61312	0					
ANR	62719	IfStatement	if ( point -> out_dir == point -> in_dir )		61312	0					
ANR	62720	Condition	point -> out_dir == point -> in_dir	1099:20:30876:30906	61312	0	True				
ANR	62721	EqualityExpression	point -> out_dir == point -> in_dir		61312	0		==			
ANR	62722	PtrMemberAccess	point -> out_dir		61312	0					
ANR	62723	Identifier	point		61312	0					
ANR	62724	Identifier	out_dir		61312	1					
ANR	62725	PtrMemberAccess	point -> in_dir		61312	1					
ANR	62726	Identifier	point		61312	0					
ANR	62727	Identifier	in_dir		61312	1					
ANR	62728	CompoundStatement		367:10:11335:11335	61312	1					
ANR	62729	IfStatement	if ( point -> out_dir != AF_DIR_NONE )		61312	0					
ANR	62730	Condition	point -> out_dir != AF_DIR_NONE	1101:17:30939:30967	61312	0	True				
ANR	62731	EqualityExpression	point -> out_dir != AF_DIR_NONE		61312	0		!=			
ANR	62732	PtrMemberAccess	point -> out_dir		61312	0					
ANR	62733	Identifier	point		61312	0					
ANR	62734	Identifier	out_dir		61312	1					
ANR	62735	Identifier	AF_DIR_NONE		61312	1					
ANR	62736	CompoundStatement		369:12:11398:11398	61312	1					
ANR	62737	GotoStatement	goto Is_Weak_Point ;	1105:14:31133:31151	61312	0	True				
ANR	62738	Identifier	Is_Weak_Point		61312	0					
ANR	62739	CompoundStatement		377:14:11662:11697	61312	1					
ANR	62740	IdentifierDeclStatement	AF_Point next_u = point + point -> u ;	1109:14:31196:31231	61312	0	True				
ANR	62741	IdentifierDecl	next_u = point + point -> u		61312	0					
ANR	62742	IdentifierDeclType	AF_Point		61312	0					
ANR	62743	Identifier	next_u		61312	1					
ANR	62744	AssignmentExpression	next_u = point + point -> u		61312	2		=			
ANR	62745	Identifier	next_u		61312	0					
ANR	62746	AdditiveExpression	point + point -> u		61312	1		+			
ANR	62747	Identifier	point		61312	0					
ANR	62748	PtrMemberAccess	point -> u		61312	1					
ANR	62749	Identifier	point		61312	0					
ANR	62750	Identifier	u		61312	1					
ANR	62751	IdentifierDeclStatement	AF_Point prev_v = point + point -> v ;	1110:14:31247:31282	61312	1	True				
ANR	62752	IdentifierDecl	prev_v = point + point -> v		61312	0					
ANR	62753	IdentifierDeclType	AF_Point		61312	0					
ANR	62754	Identifier	prev_v		61312	1					
ANR	62755	AssignmentExpression	prev_v = point + point -> v		61312	2		=			
ANR	62756	Identifier	prev_v		61312	0					
ANR	62757	AdditiveExpression	point + point -> v		61312	1		+			
ANR	62758	Identifier	point		61312	0					
ANR	62759	PtrMemberAccess	point -> v		61312	1					
ANR	62760	Identifier	point		61312	0					
ANR	62761	Identifier	v		61312	1					
ANR	62762	IfStatement	"if ( ft_corner_is_flat ( point -> fx - prev_v -> fx , point -> fy - prev_v -> fy , next_u -> fx - point -> fx , next_u -> fy - point -> fy ) )"		61312	2					
ANR	62763	Condition	"ft_corner_is_flat ( point -> fx - prev_v -> fx , point -> fy - prev_v -> fy , next_u -> fx - point -> fx , next_u -> fy - point -> fy )"	1113:19:31305:31535	61312	0	True				
ANR	62764	CallExpression	"ft_corner_is_flat ( point -> fx - prev_v -> fx , point -> fy - prev_v -> fy , next_u -> fx - point -> fx , next_u -> fy - point -> fy )"		61312	0					
ANR	62765	Callee	ft_corner_is_flat		61312	0					
ANR	62766	Identifier	ft_corner_is_flat		61312	0					
ANR	62767	ArgumentList	point -> fx - prev_v -> fx		61312	1					
ANR	62768	Argument	point -> fx - prev_v -> fx		61312	0					
ANR	62769	AdditiveExpression	point -> fx - prev_v -> fx		61312	0		-			
ANR	62770	PtrMemberAccess	point -> fx		61312	0					
ANR	62771	Identifier	point		61312	0					
ANR	62772	Identifier	fx		61312	1					
ANR	62773	PtrMemberAccess	prev_v -> fx		61312	1					
ANR	62774	Identifier	prev_v		61312	0					
ANR	62775	Identifier	fx		61312	1					
ANR	62776	Argument	point -> fy - prev_v -> fy		61312	1					
ANR	62777	AdditiveExpression	point -> fy - prev_v -> fy		61312	0		-			
ANR	62778	PtrMemberAccess	point -> fy		61312	0					
ANR	62779	Identifier	point		61312	0					
ANR	62780	Identifier	fy		61312	1					
ANR	62781	PtrMemberAccess	prev_v -> fy		61312	1					
ANR	62782	Identifier	prev_v		61312	0					
ANR	62783	Identifier	fy		61312	1					
ANR	62784	Argument	next_u -> fx - point -> fx		61312	2					
ANR	62785	AdditiveExpression	next_u -> fx - point -> fx		61312	0		-			
ANR	62786	PtrMemberAccess	next_u -> fx		61312	0					
ANR	62787	Identifier	next_u		61312	0					
ANR	62788	Identifier	fx		61312	1					
ANR	62789	PtrMemberAccess	point -> fx		61312	1					
ANR	62790	Identifier	point		61312	0					
ANR	62791	Identifier	fx		61312	1					
ANR	62792	Argument	next_u -> fy - point -> fy		61312	3					
ANR	62793	AdditiveExpression	next_u -> fy - point -> fy		61312	0		-			
ANR	62794	PtrMemberAccess	next_u -> fy		61312	0					
ANR	62795	Identifier	next_u		61312	0					
ANR	62796	Identifier	fy		61312	1					
ANR	62797	PtrMemberAccess	point -> fy		61312	1					
ANR	62798	Identifier	point		61312	0					
ANR	62799	Identifier	fy		61312	1					
ANR	62800	CompoundStatement		384:14:11968:11968	61312	1					
ANR	62801	ExpressionStatement	prev_v -> u = ( FT_Pos ) ( next_u - prev_v )	1122:16:31788:31827	61312	0	True				
ANR	62802	AssignmentExpression	prev_v -> u = ( FT_Pos ) ( next_u - prev_v )		61312	0		=			
ANR	62803	PtrMemberAccess	prev_v -> u		61312	0					
ANR	62804	Identifier	prev_v		61312	0					
ANR	62805	Identifier	u		61312	1					
ANR	62806	CastExpression	( FT_Pos ) ( next_u - prev_v )		61312	1					
ANR	62807	CastTarget	FT_Pos		61312	0					
ANR	62808	AdditiveExpression	next_u - prev_v		61312	1		-			
ANR	62809	Identifier	next_u		61312	0					
ANR	62810	Identifier	prev_v		61312	1					
ANR	62811	ExpressionStatement	next_u -> v = - prev_v -> u	1123:16:31845:31867	61312	1	True				
ANR	62812	AssignmentExpression	next_u -> v = - prev_v -> u		61312	0		=			
ANR	62813	PtrMemberAccess	next_u -> v		61312	0					
ANR	62814	Identifier	next_u		61312	0					
ANR	62815	Identifier	v		61312	1					
ANR	62816	UnaryOperationExpression	- prev_v -> u		61312	1					
ANR	62817	UnaryOperator	-		61312	0					
ANR	62818	PtrMemberAccess	prev_v -> u		61312	1					
ANR	62819	Identifier	prev_v		61312	0					
ANR	62820	Identifier	u		61312	1					
ANR	62821	GotoStatement	goto Is_Weak_Point ;	1125:16:31886:31904	61312	2	True				
ANR	62822	Identifier	Is_Weak_Point		61312	0					
ANR	62823	ElseStatement	else		61312	0					
ANR	62824	IfStatement	if ( point -> in_dir == - point -> out_dir )		61312	0					
ANR	62825	Condition	point -> in_dir == - point -> out_dir	1129:20:31968:31999	61312	0	True				
ANR	62826	EqualityExpression	point -> in_dir == - point -> out_dir		61312	0		==			
ANR	62827	PtrMemberAccess	point -> in_dir		61312	0					
ANR	62828	Identifier	point		61312	0					
ANR	62829	Identifier	in_dir		61312	1					
ANR	62830	UnaryOperationExpression	- point -> out_dir		61312	1					
ANR	62831	UnaryOperator	-		61312	0					
ANR	62832	PtrMemberAccess	point -> out_dir		61312	1					
ANR	62833	Identifier	point		61312	0					
ANR	62834	Identifier	out_dir		61312	1					
ANR	62835	CompoundStatement		397:10:12428:12428	61312	1					
ANR	62836	GotoStatement	goto Is_Weak_Point ;	1132:12:32073:32091	61312	0	True				
ANR	62837	Identifier	Is_Weak_Point		61312	0					
ANR	62838	Label	Exit :	1138:2:32132:32136	61312	34	True				
ANR	62839	Identifier	Exit		61312	0					
ANR	62840	ReturnStatement	return error ;	1139:4:32142:32154	61312	35	True				
ANR	62841	Identifier	error		61312	0					
ANR	62842	Identifier	af_glyph_hints_reload		61312	1					
ANR	62843	ParameterList	"AF_GlyphHints hints , FT_Outline * outline"		61312	2					
ANR	62844	Parameter	AF_GlyphHints hints	732:25:19510:19529	61312	0	True				
ANR	62845	ParameterType	AF_GlyphHints		61312	0					
ANR	62846	Identifier	hints		61312	1					
ANR	62847	Parameter	FT_Outline * outline	733:25:19557:19578	61312	1	True				
ANR	62848	ParameterType	FT_Outline *		61312	0					
ANR	62849	Identifier	outline		61312	1					
ANR	62850	CFGEntryNode	ENTRY		61312		True				
ANR	62851	CFGExitNode	EXIT		61312		True				
ANR	62852	Symbol	* hints -> metrics -> scaler		61312						
ANR	62853	Symbol	point_limit		61312						
ANR	62854	Symbol	prev		61312						
ANR	62855	Symbol	next -> in_dir		61312						
ANR	62856	Symbol	hints -> y_scale		61312						
ANR	62857	Symbol	next_u -> fy		61312						
ANR	62858	Symbol	next_u -> fx		61312						
ANR	62859	Symbol	point -> oy		61312						
ANR	62860	Symbol	next_u -> v		61312						
ANR	62861	Symbol	point -> ox		61312						
ANR	62862	Symbol	* first		61312						
ANR	62863	Symbol	out_dir		61312						
ANR	62864	Symbol	hints -> memory		61312						
ANR	62865	Symbol	curr		61312						
ANR	62866	Symbol	* hints		61312						
ANR	62867	Symbol	hints -> axis [ 1 ] . num_segments		61312						
ANR	62868	Symbol	next -> v		61312						
ANR	62869	Symbol	* outline		61312						
ANR	62870	Symbol	prev -> prev		61312						
ANR	62871	Symbol	hints		61312						
ANR	62872	Symbol	* AF_DIMENSION_VERT		61312						
ANR	62873	Symbol	point -> fx		61312						
ANR	62874	Symbol	outline -> points [ endpoint ] . x		61312						
ANR	62875	Symbol	point -> fy		61312						
ANR	62876	Symbol	outline -> points [ endpoint ] . y		61312						
ANR	62877	Symbol	hints -> xmin_delta		61312						
ANR	62878	Symbol	hints -> max_points		61312						
ANR	62879	Symbol	hints -> x_delta		61312						
ANR	62880	Symbol	AF_DIR_LEFT		61312						
ANR	62881	Symbol	near_limit		61312						
ANR	62882	Symbol	AF_DIR_DOWN		61312						
ANR	62883	Symbol	new_max		61312						
ANR	62884	Symbol	hints -> y_delta		61312						
ANR	62885	Symbol	x_scale		61312						
ANR	62886	Symbol	hints -> axis [ 1 ] . num_edges		61312						
ANR	62887	Symbol	* hints -> metrics		61312						
ANR	62888	Symbol	hints -> points		61312						
ANR	62889	Symbol	hints -> axis [ AF_DIMENSION_VERT ] . major_dir		61312						
ANR	62890	Symbol	* hints -> metrics -> scaler . face		61312						
ANR	62891	Symbol	FT_Outline_Get_Orientation		61312						
ANR	62892	Symbol	AF_DIMENSION_HORZ		61312						
ANR	62893	Symbol	outline		61312						
ANR	62894	Symbol	endpoint		61312						
ANR	62895	Symbol	hints -> x_scale		61312						
ANR	62896	Symbol	ft_corner_is_flat		61312						
ANR	62897	Symbol	hints -> max_contours		61312						
ANR	62898	Symbol	next_u		61312						
ANR	62899	Symbol	outline -> points		61312						
ANR	62900	Symbol	contour_index		61312						
ANR	62901	Symbol	FT_ABS		61312						
ANR	62902	Symbol	hints -> metrics -> scaler . face		61312						
ANR	62903	Symbol	prev -> next		61312						
ANR	62904	Symbol	AF_FLAG_CONTROL		61312						
ANR	62905	Symbol	point -> next		61312						
ANR	62906	Symbol	contour		61312						
ANR	62907	Symbol	* prev_v		61312						
ANR	62908	Symbol	hints -> axis [ 0 ] . num_edges		61312						
ANR	62909	Symbol	FT_MulFix		61312						
ANR	62910	Symbol	y_scale		61312						
ANR	62911	Symbol	outline -> contours		61312						
ANR	62912	Symbol	prev -> flags		61312						
ANR	62913	Symbol	hints -> contours		61312						
ANR	62914	Symbol	point -> flags		61312						
ANR	62915	Symbol	first		61312						
ANR	62916	Symbol	old_max		61312						
ANR	62917	Symbol	~3U		61312						
ANR	62918	Symbol	outline -> n_contours		61312						
ANR	62919	Symbol	FT_Err_Ok		61312						
ANR	62920	Symbol	hints -> metrics -> scaler . face -> units_per_EM		61312						
ANR	62921	Symbol	x_delta		61312						
ANR	62922	Symbol	* next		61312						
ANR	62923	Symbol	hints -> xmax_delta		61312						
ANR	62924	Symbol	prev_v -> u		61312						
ANR	62925	Symbol	points		61312						
ANR	62926	Symbol	* AF_DIMENSION_HORZ		61312						
ANR	62927	Symbol	contour_limit		61312						
ANR	62928	Symbol	AF_DIR_UP		61312						
ANR	62929	Symbol	* hints -> axis		61312						
ANR	62930	Symbol	hints -> num_points		61312						
ANR	62931	Symbol	out_x		61312						
ANR	62932	Symbol	next -> fx		61312						
ANR	62933	Symbol	vec		61312						
ANR	62934	Symbol	next -> fy		61312						
ANR	62935	Symbol	AF_POINTS_EMBEDDED		61312						
ANR	62936	Symbol	first -> prev		61312						
ANR	62937	Symbol	prev_v -> fy		61312						
ANR	62938	Symbol	FT_ORIENTATION_POSTSCRIPT		61312						
ANR	62939	Symbol	tag		61312						
ANR	62940	Symbol	out_y		61312						
ANR	62941	Symbol	* contour_index		61312						
ANR	62942	Symbol	prev_v -> fx		61312						
ANR	62943	Symbol	NULL		61312						
ANR	62944	Symbol	* point		61312						
ANR	62945	Symbol	hints -> embedded . points		61312						
ANR	62946	Symbol	AF_FLAG_WEAK_INTERPOLATION		61312						
ANR	62947	Symbol	* endpoint		61312						
ANR	62948	Symbol	point -> prev		61312						
ANR	62949	Symbol	curr -> u		61312						
ANR	62950	Symbol	* * * hints		61312						
ANR	62951	Symbol	prev -> fx		61312						
ANR	62952	Symbol	curr -> out_dir		61312						
ANR	62953	Symbol	point -> u		61312						
ANR	62954	Symbol	prev -> fy		61312						
ANR	62955	Symbol	point -> v		61312						
ANR	62956	Symbol	point -> x		61312						
ANR	62957	Symbol	point -> y		61312						
ANR	62958	Symbol	* end		61312						
ANR	62959	Symbol	hints -> metrics -> scaler		61312						
ANR	62960	Symbol	idx		61312						
ANR	62961	Symbol	vec -> x		61312						
ANR	62962	Symbol	vec -> y		61312						
ANR	62963	Symbol	next		61312						
ANR	62964	Symbol	hints -> metrics		61312						
ANR	62965	Symbol	memory		61312						
ANR	62966	Symbol	point -> out_dir		61312						
ANR	62967	Symbol	* tag		61312						
ANR	62968	Symbol	hints -> embedded . contours		61312						
ANR	62969	Symbol	* outline -> contours		61312						
ANR	62970	Symbol	hints -> embedded		61312						
ANR	62971	Symbol	FT_RENEW_ARRAY		61312						
ANR	62972	Symbol	* prev		61312						
ANR	62973	Symbol	* * hints		61312						
ANR	62974	Symbol	units_per_em		61312						
ANR	62975	Symbol	next -> flags		61312						
ANR	62976	Symbol	error		61312						
ANR	62977	Symbol	point		61312						
ANR	62978	Symbol	curr -> next		61312						
ANR	62979	Symbol	curr -> in_dir		61312						
ANR	62980	Symbol	AF_FLAG_CONIC		61312						
ANR	62981	Symbol	AF_DIR_RIGHT		61312						
ANR	62982	Symbol	outline -> tags		61312						
ANR	62983	Symbol	end		61312						
ANR	62984	Symbol	FT_CURVE_TAG		61312						
ANR	62985	Symbol	AF_CONTOURS_EMBEDDED		61312						
ANR	62986	Symbol	hints -> axis [ 0 ] . num_segments		61312						
ANR	62987	Symbol	hints -> axis		61312						
ANR	62988	Symbol	* outline -> points		61312						
ANR	62989	Symbol	AF_FLAG_NONE		61312						
ANR	62990	Symbol	AF_FLAG_CUBIC		61312						
ANR	62991	Symbol	near_limit2		61312						
ANR	62992	Symbol	first -> v		61312						
ANR	62993	Symbol	* next_u		61312						
ANR	62994	Symbol	AF_DIR_NONE		61312						
ANR	62995	Symbol	y_delta		61312						
ANR	62996	Symbol	outline -> n_points		61312						
ANR	62997	Symbol	in_y		61312						
ANR	62998	Symbol	hints -> num_contours		61312						
ANR	62999	Symbol	in_x		61312						
ANR	63000	Symbol	AF_FLAG_NEAR		61312						
ANR	63001	Symbol	* contour		61312						
ANR	63002	Symbol	* * outline		61312						
ANR	63003	Symbol	* curr		61312						
ANR	63004	Symbol	af_direction_compute		61312						
ANR	63005	Symbol	point -> in_dir		61312						
ANR	63006	Symbol	hints -> axis [ AF_DIMENSION_HORZ ] . major_dir		61312						
ANR	63007	Symbol	* * hints -> metrics		61312						
ANR	63008	Symbol	~7U		61312						
ANR	63009	Symbol	AF_DIMENSION_VERT		61312						
ANR	63010	Symbol	* vec		61312						
ANR	63011	Symbol	end -> fx		61312						
ANR	63012	Symbol	prev_v		61312						
ANR	63013	Symbol	end -> fy		61312						
ANR	63014	Function	af_glyph_hints_save	1146:2:32249:32840							
ANR	63015	FunctionDef	"af_glyph_hints_save (AF_GlyphHints hints , FT_Outline * outline)"		63014	0					
ANR	63016	CompoundStatement		1148:2:32342:32840	63014	0					
ANR	63017	IdentifierDeclStatement	AF_Point point = hints -> points ;	1149:4:32348:32381	63014	0	True				
ANR	63018	IdentifierDecl	point = hints -> points		63014	0					
ANR	63019	IdentifierDeclType	AF_Point		63014	0					
ANR	63020	Identifier	point		63014	1					
ANR	63021	AssignmentExpression	point = hints -> points		63014	2		=			
ANR	63022	Identifier	point		63014	0					
ANR	63023	PtrMemberAccess	hints -> points		63014	1					
ANR	63024	Identifier	hints		63014	0					
ANR	63025	Identifier	points		63014	1					
ANR	63026	IdentifierDeclStatement	AF_Point limit = point + hints -> num_points ;	1150:4:32387:32432	63014	1	True				
ANR	63027	IdentifierDecl	limit = point + hints -> num_points		63014	0					
ANR	63028	IdentifierDeclType	AF_Point		63014	0					
ANR	63029	Identifier	limit		63014	1					
ANR	63030	AssignmentExpression	limit = point + hints -> num_points		63014	2		=			
ANR	63031	Identifier	limit		63014	0					
ANR	63032	AdditiveExpression	point + hints -> num_points		63014	1		+			
ANR	63033	Identifier	point		63014	0					
ANR	63034	PtrMemberAccess	hints -> num_points		63014	1					
ANR	63035	Identifier	hints		63014	0					
ANR	63036	Identifier	num_points		63014	1					
ANR	63037	IdentifierDeclStatement	FT_Vector * vec = outline -> points ;	1151:4:32438:32473	63014	2	True				
ANR	63038	IdentifierDecl	* vec = outline -> points		63014	0					
ANR	63039	IdentifierDeclType	FT_Vector *		63014	0					
ANR	63040	Identifier	vec		63014	1					
ANR	63041	AssignmentExpression	* vec = outline -> points		63014	2		=			
ANR	63042	Identifier	vec		63014	0					
ANR	63043	PtrMemberAccess	outline -> points		63014	1					
ANR	63044	Identifier	outline		63014	0					
ANR	63045	Identifier	points		63014	1					
ANR	63046	IdentifierDeclStatement	char * tag = outline -> tags ;	1152:4:32479:32512	63014	3	True				
ANR	63047	IdentifierDecl	* tag = outline -> tags		63014	0					
ANR	63048	IdentifierDeclType	char *		63014	0					
ANR	63049	Identifier	tag		63014	1					
ANR	63050	AssignmentExpression	* tag = outline -> tags		63014	2		=			
ANR	63051	Identifier	tag		63014	0					
ANR	63052	PtrMemberAccess	outline -> tags		63014	1					
ANR	63053	Identifier	outline		63014	0					
ANR	63054	Identifier	tags		63014	1					
ANR	63055	ForStatement	"for ( ; point < limit ; point ++ , vec ++ , tag ++ )"		63014	4					
ANR	63056	Condition	point < limit	1155:12:32528:32540	63014	0	True				
ANR	63057	RelationalExpression	point < limit		63014	0		<			
ANR	63058	Identifier	point		63014	0					
ANR	63059	Identifier	limit		63014	1					
ANR	63060	Expression	"point ++ , vec ++ , tag ++"	1155:27:32543:32563	63014	1	True				
ANR	63061	PostIncDecOperationExpression	point ++		63014	0					
ANR	63062	Identifier	point		63014	0					
ANR	63063	IncDec	++		63014	1					
ANR	63064	Expression	"vec ++ , tag ++"		63014	1					
ANR	63065	PostIncDecOperationExpression	vec ++		63014	0					
ANR	63066	Identifier	vec		63014	0					
ANR	63067	IncDec	++		63014	1					
ANR	63068	PostIncDecOperationExpression	tag ++		63014	1					
ANR	63069	Identifier	tag		63014	0					
ANR	63070	IncDec	++		63014	1					
ANR	63071	CompoundStatement		9:4:228:228	63014	2					
ANR	63072	ExpressionStatement	vec -> x = point -> x	1157:6:32579:32596	63014	0	True				
ANR	63073	AssignmentExpression	vec -> x = point -> x		63014	0		=			
ANR	63074	PtrMemberAccess	vec -> x		63014	0					
ANR	63075	Identifier	vec		63014	0					
ANR	63076	Identifier	x		63014	1					
ANR	63077	PtrMemberAccess	point -> x		63014	1					
ANR	63078	Identifier	point		63014	0					
ANR	63079	Identifier	x		63014	1					
ANR	63080	ExpressionStatement	vec -> y = point -> y	1158:6:32604:32621	63014	1	True				
ANR	63081	AssignmentExpression	vec -> y = point -> y		63014	0		=			
ANR	63082	PtrMemberAccess	vec -> y		63014	0					
ANR	63083	Identifier	vec		63014	0					
ANR	63084	Identifier	y		63014	1					
ANR	63085	PtrMemberAccess	point -> y		63014	1					
ANR	63086	Identifier	point		63014	0					
ANR	63087	Identifier	y		63014	1					
ANR	63088	IfStatement	if ( point -> flags & AF_FLAG_CONIC )		63014	2					
ANR	63089	Condition	point -> flags & AF_FLAG_CONIC	1160:11:32635:32662	63014	0	True				
ANR	63090	BitAndExpression	point -> flags & AF_FLAG_CONIC		63014	0		&			
ANR	63091	PtrMemberAccess	point -> flags		63014	0					
ANR	63092	Identifier	point		63014	0					
ANR	63093	Identifier	flags		63014	1					
ANR	63094	Identifier	AF_FLAG_CONIC		63014	1					
ANR	63095	ExpressionStatement	tag [ 0 ] = FT_CURVE_TAG_CONIC	1161:8:32674:32701	63014	1	True				
ANR	63096	AssignmentExpression	tag [ 0 ] = FT_CURVE_TAG_CONIC		63014	0		=			
ANR	63097	ArrayIndexing	tag [ 0 ]		63014	0					
ANR	63098	Identifier	tag		63014	0					
ANR	63099	PrimaryExpression	0		63014	1					
ANR	63100	Identifier	FT_CURVE_TAG_CONIC		63014	1					
ANR	63101	ElseStatement	else		63014	0					
ANR	63102	IfStatement	if ( point -> flags & AF_FLAG_CUBIC )		63014	0					
ANR	63103	Condition	point -> flags & AF_FLAG_CUBIC	1162:16:32719:32746	63014	0	True				
ANR	63104	BitAndExpression	point -> flags & AF_FLAG_CUBIC		63014	0		&			
ANR	63105	PtrMemberAccess	point -> flags		63014	0					
ANR	63106	Identifier	point		63014	0					
ANR	63107	Identifier	flags		63014	1					
ANR	63108	Identifier	AF_FLAG_CUBIC		63014	1					
ANR	63109	ExpressionStatement	tag [ 0 ] = FT_CURVE_TAG_CUBIC	1163:8:32758:32785	63014	1	True				
ANR	63110	AssignmentExpression	tag [ 0 ] = FT_CURVE_TAG_CUBIC		63014	0		=			
ANR	63111	ArrayIndexing	tag [ 0 ]		63014	0					
ANR	63112	Identifier	tag		63014	0					
ANR	63113	PrimaryExpression	0		63014	1					
ANR	63114	Identifier	FT_CURVE_TAG_CUBIC		63014	1					
ANR	63115	ElseStatement	else		63014	0					
ANR	63116	ExpressionStatement	tag [ 0 ] = FT_CURVE_TAG_ON	1165:8:32806:32830	63014	0	True				
ANR	63117	AssignmentExpression	tag [ 0 ] = FT_CURVE_TAG_ON		63014	0		=			
ANR	63118	ArrayIndexing	tag [ 0 ]		63014	0					
ANR	63119	Identifier	tag		63014	0					
ANR	63120	PrimaryExpression	0		63014	1					
ANR	63121	Identifier	FT_CURVE_TAG_ON		63014	1					
ANR	63122	Identifier	af_glyph_hints_save		63014	1					
ANR	63123	ParameterList	"AF_GlyphHints hints , FT_Outline * outline"		63014	2					
ANR	63124	Parameter	AF_GlyphHints hints	1146:23:32270:32289	63014	0	True				
ANR	63125	ParameterType	AF_GlyphHints		63014	0					
ANR	63126	Identifier	hints		63014	1					
ANR	63127	Parameter	FT_Outline * outline	1147:23:32315:32336	63014	1	True				
ANR	63128	ParameterType	FT_Outline *		63014	0					
ANR	63129	Identifier	outline		63014	1					
ANR	63130	CFGEntryNode	ENTRY		63014		True				
ANR	63131	CFGExitNode	EXIT		63014		True				
ANR	63132	Symbol	* tag		63014						
ANR	63133	Symbol	FT_CURVE_TAG_ON		63014						
ANR	63134	Symbol	FT_CURVE_TAG_CUBIC		63014						
ANR	63135	Symbol	hints -> points		63014						
ANR	63136	Symbol	point		63014						
ANR	63137	Symbol	outline		63014						
ANR	63138	Symbol	hints -> num_points		63014						
ANR	63139	Symbol	vec		63014						
ANR	63140	Symbol	AF_FLAG_CONIC		63014						
ANR	63141	Symbol	limit		63014						
ANR	63142	Symbol	outline -> points		63014						
ANR	63143	Symbol	outline -> tags		63014						
ANR	63144	Symbol	tag		63014						
ANR	63145	Symbol	FT_CURVE_TAG_CONIC		63014						
ANR	63146	Symbol	* hints		63014						
ANR	63147	Symbol	* outline		63014						
ANR	63148	Symbol	* point		63014						
ANR	63149	Symbol	hints		63014						
ANR	63150	Symbol	AF_FLAG_CUBIC		63014						
ANR	63151	Symbol	point -> x		63014						
ANR	63152	Symbol	point -> flags		63014						
ANR	63153	Symbol	point -> y		63014						
ANR	63154	Symbol	vec -> x		63014						
ANR	63155	Symbol	* vec		63014						
ANR	63156	Symbol	vec -> y		63014						
ANR	63157	Function	af_glyph_hints_align_edge_points	1181:2:33200:34520							
ANR	63158	FunctionDef	"af_glyph_hints_align_edge_points (AF_GlyphHints hints , AF_Dimension dim)"		63157	0					
ANR	63159	CompoundStatement		1183:2:33315:34520	63157	0					
ANR	63160	IdentifierDeclStatement	AF_AxisHints axis = & hints -> axis [ dim ] ;	1184:4:33321:33369	63157	0	True				
ANR	63161	IdentifierDecl	axis = & hints -> axis [ dim ]		63157	0					
ANR	63162	IdentifierDeclType	AF_AxisHints		63157	0					
ANR	63163	Identifier	axis		63157	1					
ANR	63164	AssignmentExpression	axis = & hints -> axis [ dim ]		63157	2		=			
ANR	63165	Identifier	axis		63157	0					
ANR	63166	UnaryOperationExpression	& hints -> axis [ dim ]		63157	1					
ANR	63167	UnaryOperator	&		63157	0					
ANR	63168	ArrayIndexing	hints -> axis [ dim ]		63157	1					
ANR	63169	PtrMemberAccess	hints -> axis		63157	0					
ANR	63170	Identifier	hints		63157	0					
ANR	63171	Identifier	axis		63157	1					
ANR	63172	Identifier	dim		63157	1					
ANR	63173	IdentifierDeclStatement	AF_Segment segments = axis -> segments ;	1185:4:33375:33419	63157	1	True				
ANR	63174	IdentifierDecl	segments = axis -> segments		63157	0					
ANR	63175	IdentifierDeclType	AF_Segment		63157	0					
ANR	63176	Identifier	segments		63157	1					
ANR	63177	AssignmentExpression	segments = axis -> segments		63157	2		=			
ANR	63178	Identifier	segments		63157	0					
ANR	63179	PtrMemberAccess	axis -> segments		63157	1					
ANR	63180	Identifier	axis		63157	0					
ANR	63181	Identifier	segments		63157	1					
ANR	63182	IdentifierDeclStatement	AF_Segment segment_limit = segments + axis -> num_segments ;	1186:4:33425:33484	63157	2	True				
ANR	63183	IdentifierDecl	segment_limit = segments + axis -> num_segments		63157	0					
ANR	63184	IdentifierDeclType	AF_Segment		63157	0					
ANR	63185	Identifier	segment_limit		63157	1					
ANR	63186	AssignmentExpression	segment_limit = segments + axis -> num_segments		63157	2		=			
ANR	63187	Identifier	segment_limit		63157	0					
ANR	63188	AdditiveExpression	segments + axis -> num_segments		63157	1		+			
ANR	63189	Identifier	segments		63157	0					
ANR	63190	PtrMemberAccess	axis -> num_segments		63157	1					
ANR	63191	Identifier	axis		63157	0					
ANR	63192	Identifier	num_segments		63157	1					
ANR	63193	IdentifierDeclStatement	AF_Segment seg ;	1187:4:33490:33507	63157	3	True				
ANR	63194	IdentifierDecl	seg		63157	0					
ANR	63195	IdentifierDeclType	AF_Segment		63157	0					
ANR	63196	Identifier	seg		63157	1					
ANR	63197	IfStatement	if ( dim == AF_DIMENSION_HORZ )		63157	4					
ANR	63198	Condition	dim == AF_DIMENSION_HORZ	1190:9:33520:33543	63157	0	True				
ANR	63199	EqualityExpression	dim == AF_DIMENSION_HORZ		63157	0		==			
ANR	63200	Identifier	dim		63157	0					
ANR	63201	Identifier	AF_DIMENSION_HORZ		63157	1					
ANR	63202	CompoundStatement		9:4:235:235	63157	1					
ANR	63203	ForStatement	for ( seg = segments ; seg < segment_limit ; seg ++ )		63157	0					
ANR	63204	ForInit	seg = segments ;	1192:12:33565:33579	63157	0	True				
ANR	63205	AssignmentExpression	seg = segments		63157	0		=			
ANR	63206	Identifier	seg		63157	0					
ANR	63207	Identifier	segments		63157	1					
ANR	63208	Condition	seg < segment_limit	1192:28:33581:33599	63157	1	True				
ANR	63209	RelationalExpression	seg < segment_limit		63157	0		<			
ANR	63210	Identifier	seg		63157	0					
ANR	63211	Identifier	segment_limit		63157	1					
ANR	63212	PostIncDecOperationExpression	seg ++	1192:49:33602:33606	63157	2	True				
ANR	63213	Identifier	seg		63157	0					
ANR	63214	IncDec	++		63157	1					
ANR	63215	CompoundStatement		13:8:346:374	63157	3					
ANR	63216	IdentifierDeclStatement	AF_Edge edge = seg -> edge ;	1194:8:33626:33652	63157	0	True				
ANR	63217	IdentifierDecl	edge = seg -> edge		63157	0					
ANR	63218	IdentifierDeclType	AF_Edge		63157	0					
ANR	63219	Identifier	edge		63157	1					
ANR	63220	AssignmentExpression	edge = seg -> edge		63157	2		=			
ANR	63221	Identifier	edge		63157	0					
ANR	63222	PtrMemberAccess	seg -> edge		63157	1					
ANR	63223	Identifier	seg		63157	0					
ANR	63224	Identifier	edge		63157	1					
ANR	63225	IdentifierDeclStatement	"AF_Point point , first , last ;"	1195:8:33662:33690	63157	1	True				
ANR	63226	IdentifierDecl	point		63157	0					
ANR	63227	IdentifierDeclType	AF_Point		63157	0					
ANR	63228	Identifier	point		63157	1					
ANR	63229	IdentifierDecl	first		63157	1					
ANR	63230	IdentifierDeclType	AF_Point		63157	0					
ANR	63231	Identifier	first		63157	1					
ANR	63232	IdentifierDecl	last		63157	2					
ANR	63233	IdentifierDeclType	AF_Point		63157	0					
ANR	63234	Identifier	last		63157	1					
ANR	63235	IfStatement	if ( ! edge )		63157	2					
ANR	63236	Condition	! edge	1198:13:33707:33711	63157	0	True				
ANR	63237	UnaryOperationExpression	! edge		63157	0					
ANR	63238	UnaryOperator	!		63157	0					
ANR	63239	Identifier	edge		63157	1					
ANR	63240	ContinueStatement	continue ;	1199:10:33725:33733	63157	1	True				
ANR	63241	ExpressionStatement	first = seg -> first	1201:8:33744:33762	63157	3	True				
ANR	63242	AssignmentExpression	first = seg -> first		63157	0		=			
ANR	63243	Identifier	first		63157	0					
ANR	63244	PtrMemberAccess	seg -> first		63157	1					
ANR	63245	Identifier	seg		63157	0					
ANR	63246	Identifier	first		63157	1					
ANR	63247	ExpressionStatement	last = seg -> last	1202:8:33772:33789	63157	4	True				
ANR	63248	AssignmentExpression	last = seg -> last		63157	0		=			
ANR	63249	Identifier	last		63157	0					
ANR	63250	PtrMemberAccess	seg -> last		63157	1					
ANR	63251	Identifier	seg		63157	0					
ANR	63252	Identifier	last		63157	1					
ANR	63253	ExpressionStatement	point = first	1203:8:33799:33812	63157	5	True				
ANR	63254	AssignmentExpression	point = first		63157	0		=			
ANR	63255	Identifier	point		63157	0					
ANR	63256	Identifier	first		63157	1					
ANR	63257	ForStatement	for ( ; ; )		63157	6					
ANR	63258	CompoundStatement		23:8:523:523	63157	0					
ANR	63259	ExpressionStatement	point -> x = edge -> pos	1206:10:33851:33876	63157	0	True				
ANR	63260	AssignmentExpression	point -> x = edge -> pos		63157	0		=			
ANR	63261	PtrMemberAccess	point -> x		63157	0					
ANR	63262	Identifier	point		63157	0					
ANR	63263	Identifier	x		63157	1					
ANR	63264	PtrMemberAccess	edge -> pos		63157	1					
ANR	63265	Identifier	edge		63157	0					
ANR	63266	Identifier	pos		63157	1					
ANR	63267	ExpressionStatement	point -> flags |= AF_FLAG_TOUCH_X	1207:10:33888:33919	63157	1	True				
ANR	63268	AssignmentExpression	point -> flags |= AF_FLAG_TOUCH_X		63157	0		|=			
ANR	63269	PtrMemberAccess	point -> flags		63157	0					
ANR	63270	Identifier	point		63157	0					
ANR	63271	Identifier	flags		63157	1					
ANR	63272	Identifier	AF_FLAG_TOUCH_X		63157	1					
ANR	63273	IfStatement	if ( point == last )		63157	2					
ANR	63274	Condition	point == last	1209:15:33937:33949	63157	0	True				
ANR	63275	EqualityExpression	point == last		63157	0		==			
ANR	63276	Identifier	point		63157	0					
ANR	63277	Identifier	last		63157	1					
ANR	63278	BreakStatement	break ;	1210:12:33965:33970	63157	1	True				
ANR	63279	ExpressionStatement	point = point -> next	1212:10:33983:34002	63157	3	True				
ANR	63280	AssignmentExpression	point = point -> next		63157	0		=			
ANR	63281	Identifier	point		63157	0					
ANR	63282	PtrMemberAccess	point -> next		63157	1					
ANR	63283	Identifier	point		63157	0					
ANR	63284	Identifier	next		63157	1					
ANR	63285	ElseStatement	else		63157	0					
ANR	63286	CompoundStatement		35:4:725:725	63157	0					
ANR	63287	ForStatement	for ( seg = segments ; seg < segment_limit ; seg ++ )		63157	0					
ANR	63288	ForInit	seg = segments ;	1218:12:34055:34069	63157	0	True				
ANR	63289	AssignmentExpression	seg = segments		63157	0		=			
ANR	63290	Identifier	seg		63157	0					
ANR	63291	Identifier	segments		63157	1					
ANR	63292	Condition	seg < segment_limit	1218:28:34071:34089	63157	1	True				
ANR	63293	RelationalExpression	seg < segment_limit		63157	0		<			
ANR	63294	Identifier	seg		63157	0					
ANR	63295	Identifier	segment_limit		63157	1					
ANR	63296	PostIncDecOperationExpression	seg ++	1218:49:34092:34096	63157	2	True				
ANR	63297	Identifier	seg		63157	0					
ANR	63298	IncDec	++		63157	1					
ANR	63299	CompoundStatement		39:8:836:864	63157	3					
ANR	63300	IdentifierDeclStatement	AF_Edge edge = seg -> edge ;	1220:8:34116:34142	63157	0	True				
ANR	63301	IdentifierDecl	edge = seg -> edge		63157	0					
ANR	63302	IdentifierDeclType	AF_Edge		63157	0					
ANR	63303	Identifier	edge		63157	1					
ANR	63304	AssignmentExpression	edge = seg -> edge		63157	2		=			
ANR	63305	Identifier	edge		63157	0					
ANR	63306	PtrMemberAccess	seg -> edge		63157	1					
ANR	63307	Identifier	seg		63157	0					
ANR	63308	Identifier	edge		63157	1					
ANR	63309	IdentifierDeclStatement	"AF_Point point , first , last ;"	1221:8:34152:34180	63157	1	True				
ANR	63310	IdentifierDecl	point		63157	0					
ANR	63311	IdentifierDeclType	AF_Point		63157	0					
ANR	63312	Identifier	point		63157	1					
ANR	63313	IdentifierDecl	first		63157	1					
ANR	63314	IdentifierDeclType	AF_Point		63157	0					
ANR	63315	Identifier	first		63157	1					
ANR	63316	IdentifierDecl	last		63157	2					
ANR	63317	IdentifierDeclType	AF_Point		63157	0					
ANR	63318	Identifier	last		63157	1					
ANR	63319	IfStatement	if ( ! edge )		63157	2					
ANR	63320	Condition	! edge	1224:13:34197:34201	63157	0	True				
ANR	63321	UnaryOperationExpression	! edge		63157	0					
ANR	63322	UnaryOperator	!		63157	0					
ANR	63323	Identifier	edge		63157	1					
ANR	63324	ContinueStatement	continue ;	1225:10:34215:34223	63157	1	True				
ANR	63325	ExpressionStatement	first = seg -> first	1227:8:34234:34252	63157	3	True				
ANR	63326	AssignmentExpression	first = seg -> first		63157	0		=			
ANR	63327	Identifier	first		63157	0					
ANR	63328	PtrMemberAccess	seg -> first		63157	1					
ANR	63329	Identifier	seg		63157	0					
ANR	63330	Identifier	first		63157	1					
ANR	63331	ExpressionStatement	last = seg -> last	1228:8:34262:34279	63157	4	True				
ANR	63332	AssignmentExpression	last = seg -> last		63157	0		=			
ANR	63333	Identifier	last		63157	0					
ANR	63334	PtrMemberAccess	seg -> last		63157	1					
ANR	63335	Identifier	seg		63157	0					
ANR	63336	Identifier	last		63157	1					
ANR	63337	ExpressionStatement	point = first	1229:8:34289:34302	63157	5	True				
ANR	63338	AssignmentExpression	point = first		63157	0		=			
ANR	63339	Identifier	point		63157	0					
ANR	63340	Identifier	first		63157	1					
ANR	63341	ForStatement	for ( ; ; )		63157	6					
ANR	63342	CompoundStatement		49:8:1013:1013	63157	0					
ANR	63343	ExpressionStatement	point -> y = edge -> pos	1232:10:34341:34366	63157	0	True				
ANR	63344	AssignmentExpression	point -> y = edge -> pos		63157	0		=			
ANR	63345	PtrMemberAccess	point -> y		63157	0					
ANR	63346	Identifier	point		63157	0					
ANR	63347	Identifier	y		63157	1					
ANR	63348	PtrMemberAccess	edge -> pos		63157	1					
ANR	63349	Identifier	edge		63157	0					
ANR	63350	Identifier	pos		63157	1					
ANR	63351	ExpressionStatement	point -> flags |= AF_FLAG_TOUCH_Y	1233:10:34378:34409	63157	1	True				
ANR	63352	AssignmentExpression	point -> flags |= AF_FLAG_TOUCH_Y		63157	0		|=			
ANR	63353	PtrMemberAccess	point -> flags		63157	0					
ANR	63354	Identifier	point		63157	0					
ANR	63355	Identifier	flags		63157	1					
ANR	63356	Identifier	AF_FLAG_TOUCH_Y		63157	1					
ANR	63357	IfStatement	if ( point == last )		63157	2					
ANR	63358	Condition	point == last	1235:15:34427:34439	63157	0	True				
ANR	63359	EqualityExpression	point == last		63157	0		==			
ANR	63360	Identifier	point		63157	0					
ANR	63361	Identifier	last		63157	1					
ANR	63362	BreakStatement	break ;	1236:12:34455:34460	63157	1	True				
ANR	63363	ExpressionStatement	point = point -> next	1238:10:34473:34492	63157	3	True				
ANR	63364	AssignmentExpression	point = point -> next		63157	0		=			
ANR	63365	Identifier	point		63157	0					
ANR	63366	PtrMemberAccess	point -> next		63157	1					
ANR	63367	Identifier	point		63157	0					
ANR	63368	Identifier	next		63157	1					
ANR	63369	Identifier	af_glyph_hints_align_edge_points		63157	1					
ANR	63370	ParameterList	"AF_GlyphHints hints , AF_Dimension dim"		63157	2					
ANR	63371	Parameter	AF_GlyphHints hints	1181:36:33234:33253	63157	0	True				
ANR	63372	ParameterType	AF_GlyphHints		63157	0					
ANR	63373	Identifier	hints		63157	1					
ANR	63374	Parameter	AF_Dimension dim	1182:36:33292:33309	63157	1	True				
ANR	63375	ParameterType	AF_Dimension		63157	0					
ANR	63376	Identifier	dim		63157	1					
ANR	63377	CFGEntryNode	ENTRY		63157		True				
ANR	63378	CFGExitNode	EXIT		63157		True				
ANR	63379	InfiniteForNode	true		63157		True				
ANR	63380	InfiniteForNode	true		63157		True				
ANR	63381	Symbol	seg -> last		63157						
ANR	63382	Symbol	dim		63157						
ANR	63383	Symbol	AF_FLAG_TOUCH_Y		63157						
ANR	63384	Symbol	* axis		63157						
ANR	63385	Symbol	axis		63157						
ANR	63386	Symbol	point		63157						
ANR	63387	Symbol	segments		63157						
ANR	63388	Symbol	seg -> first		63157						
ANR	63389	Symbol	AF_DIMENSION_HORZ		63157						
ANR	63390	Symbol	axis -> segments		63157						
ANR	63391	Symbol	edge		63157						
ANR	63392	Symbol	seg		63157						
ANR	63393	Symbol	seg -> edge		63157						
ANR	63394	Symbol	* hints		63157						
ANR	63395	Symbol	hints -> axis		63157						
ANR	63396	Symbol	segment_limit		63157						
ANR	63397	Symbol	axis -> num_segments		63157						
ANR	63398	Symbol	last		63157						
ANR	63399	Symbol	* point		63157						
ANR	63400	Symbol	hints		63157						
ANR	63401	Symbol	point -> next		63157						
ANR	63402	Symbol	* edge		63157						
ANR	63403	Symbol	AF_FLAG_TOUCH_X		63157						
ANR	63404	Symbol	point -> x		63157						
ANR	63405	Symbol	point -> flags		63157						
ANR	63406	Symbol	point -> y		63157						
ANR	63407	Symbol	edge -> pos		63157						
ANR	63408	Symbol	first		63157						
ANR	63409	Symbol	* seg		63157						
ANR	63410	Function	af_glyph_hints_align_strong_points	1256:2:34898:38390							
ANR	63411	FunctionDef	"af_glyph_hints_align_strong_points (AF_GlyphHints hints , AF_Dimension dim)"		63410	0					
ANR	63412	CompoundStatement		1258:2:35017:38390	63410	0					
ANR	63413	IdentifierDeclStatement	AF_Point points = hints -> points ;	1259:4:35023:35064	63410	0	True				
ANR	63414	IdentifierDecl	points = hints -> points		63410	0					
ANR	63415	IdentifierDeclType	AF_Point		63410	0					
ANR	63416	Identifier	points		63410	1					
ANR	63417	AssignmentExpression	points = hints -> points		63410	2		=			
ANR	63418	Identifier	points		63410	0					
ANR	63419	PtrMemberAccess	hints -> points		63410	1					
ANR	63420	Identifier	hints		63410	0					
ANR	63421	Identifier	points		63410	1					
ANR	63422	IdentifierDeclStatement	AF_Point point_limit = points + hints -> num_points ;	1260:4:35070:35124	63410	1	True				
ANR	63423	IdentifierDecl	point_limit = points + hints -> num_points		63410	0					
ANR	63424	IdentifierDeclType	AF_Point		63410	0					
ANR	63425	Identifier	point_limit		63410	1					
ANR	63426	AssignmentExpression	point_limit = points + hints -> num_points		63410	2		=			
ANR	63427	Identifier	point_limit		63410	0					
ANR	63428	AdditiveExpression	points + hints -> num_points		63410	1		+			
ANR	63429	Identifier	points		63410	0					
ANR	63430	PtrMemberAccess	hints -> num_points		63410	1					
ANR	63431	Identifier	hints		63410	0					
ANR	63432	Identifier	num_points		63410	1					
ANR	63433	IdentifierDeclStatement	AF_AxisHints axis = & hints -> axis [ dim ] ;	1261:4:35130:35175	63410	2	True				
ANR	63434	IdentifierDecl	axis = & hints -> axis [ dim ]		63410	0					
ANR	63435	IdentifierDeclType	AF_AxisHints		63410	0					
ANR	63436	Identifier	axis		63410	1					
ANR	63437	AssignmentExpression	axis = & hints -> axis [ dim ]		63410	2		=			
ANR	63438	Identifier	axis		63410	0					
ANR	63439	UnaryOperationExpression	& hints -> axis [ dim ]		63410	1					
ANR	63440	UnaryOperator	&		63410	0					
ANR	63441	ArrayIndexing	hints -> axis [ dim ]		63410	1					
ANR	63442	PtrMemberAccess	hints -> axis		63410	0					
ANR	63443	Identifier	hints		63410	0					
ANR	63444	Identifier	axis		63410	1					
ANR	63445	Identifier	dim		63410	1					
ANR	63446	IdentifierDeclStatement	AF_Edge edges = axis -> edges ;	1262:4:35181:35220	63410	3	True				
ANR	63447	IdentifierDecl	edges = axis -> edges		63410	0					
ANR	63448	IdentifierDeclType	AF_Edge		63410	0					
ANR	63449	Identifier	edges		63410	1					
ANR	63450	AssignmentExpression	edges = axis -> edges		63410	2		=			
ANR	63451	Identifier	edges		63410	0					
ANR	63452	PtrMemberAccess	axis -> edges		63410	1					
ANR	63453	Identifier	axis		63410	0					
ANR	63454	Identifier	edges		63410	1					
ANR	63455	IdentifierDeclStatement	AF_Edge edge_limit = edges + axis -> num_edges ;	1263:4:35226:35277	63410	4	True				
ANR	63456	IdentifierDecl	edge_limit = edges + axis -> num_edges		63410	0					
ANR	63457	IdentifierDeclType	AF_Edge		63410	0					
ANR	63458	Identifier	edge_limit		63410	1					
ANR	63459	AssignmentExpression	edge_limit = edges + axis -> num_edges		63410	2		=			
ANR	63460	Identifier	edge_limit		63410	0					
ANR	63461	AdditiveExpression	edges + axis -> num_edges		63410	1		+			
ANR	63462	Identifier	edges		63410	0					
ANR	63463	PtrMemberAccess	axis -> num_edges		63410	1					
ANR	63464	Identifier	axis		63410	0					
ANR	63465	Identifier	num_edges		63410	1					
ANR	63466	IdentifierDeclStatement	FT_UInt touch_flag ;	1264:4:35283:35307	63410	5	True				
ANR	63467	IdentifierDecl	touch_flag		63410	0					
ANR	63468	IdentifierDeclType	FT_UInt		63410	0					
ANR	63469	Identifier	touch_flag		63410	1					
ANR	63470	IfStatement	if ( dim == AF_DIMENSION_HORZ )		63410	6					
ANR	63471	Condition	dim == AF_DIMENSION_HORZ	1267:9:35320:35343	63410	0	True				
ANR	63472	EqualityExpression	dim == AF_DIMENSION_HORZ		63410	0		==			
ANR	63473	Identifier	dim		63410	0					
ANR	63474	Identifier	AF_DIMENSION_HORZ		63410	1					
ANR	63475	ExpressionStatement	touch_flag = AF_FLAG_TOUCH_X	1268:6:35353:35381	63410	1	True				
ANR	63476	AssignmentExpression	touch_flag = AF_FLAG_TOUCH_X		63410	0		=			
ANR	63477	Identifier	touch_flag		63410	0					
ANR	63478	Identifier	AF_FLAG_TOUCH_X		63410	1					
ANR	63479	ElseStatement	else		63410	0					
ANR	63480	ExpressionStatement	touch_flag = AF_FLAG_TOUCH_Y	1270:6:35398:35427	63410	0	True				
ANR	63481	AssignmentExpression	touch_flag = AF_FLAG_TOUCH_Y		63410	0		=			
ANR	63482	Identifier	touch_flag		63410	0					
ANR	63483	Identifier	AF_FLAG_TOUCH_Y		63410	1					
ANR	63484	IfStatement	if ( edges < edge_limit )		63410	7					
ANR	63485	Condition	edges < edge_limit	1272:9:35439:35456	63410	0	True				
ANR	63486	RelationalExpression	edges < edge_limit		63410	0		<			
ANR	63487	Identifier	edges		63410	0					
ANR	63488	Identifier	edge_limit		63410	1					
ANR	63489	CompoundStatement		18:6:477:491	63410	1					
ANR	63490	IdentifierDeclStatement	AF_Point point ;	1274:6:35472:35487	63410	0	True				
ANR	63491	IdentifierDecl	point		63410	0					
ANR	63492	IdentifierDeclType	AF_Point		63410	0					
ANR	63493	Identifier	point		63410	1					
ANR	63494	IdentifierDeclStatement	AF_Edge edge ;	1275:6:35495:35509	63410	1	True				
ANR	63495	IdentifierDecl	edge		63410	0					
ANR	63496	IdentifierDeclType	AF_Edge		63410	0					
ANR	63497	Identifier	edge		63410	1					
ANR	63498	ForStatement	for ( point = points ; point < point_limit ; point ++ )		63410	2					
ANR	63499	ForInit	point = points ;	1278:12:35525:35539	63410	0	True				
ANR	63500	AssignmentExpression	point = points		63410	0		=			
ANR	63501	Identifier	point		63410	0					
ANR	63502	Identifier	points		63410	1					
ANR	63503	Condition	point < point_limit	1278:28:35541:35559	63410	1	True				
ANR	63504	RelationalExpression	point < point_limit		63410	0		<			
ANR	63505	Identifier	point		63410	0					
ANR	63506	Identifier	point_limit		63410	1					
ANR	63507	PostIncDecOperationExpression	point ++	1278:49:35562:35568	63410	2	True				
ANR	63508	Identifier	point		63410	0					
ANR	63509	IncDec	++		63410	1					
ANR	63510	CompoundStatement		24:8:619:632	63410	3					
ANR	63511	IdentifierDeclStatement	"FT_Pos u , ou , fu ;"	1280:8:35588:35605	63410	0	True				
ANR	63512	IdentifierDecl	u		63410	0					
ANR	63513	IdentifierDeclType	FT_Pos		63410	0					
ANR	63514	Identifier	u		63410	1					
ANR	63515	IdentifierDecl	ou		63410	1					
ANR	63516	IdentifierDeclType	FT_Pos		63410	0					
ANR	63517	Identifier	ou		63410	1					
ANR	63518	IdentifierDecl	fu		63410	2					
ANR	63519	IdentifierDeclType	FT_Pos		63410	0					
ANR	63520	Identifier	fu		63410	1					
ANR	63521	IdentifierDeclStatement	FT_Pos delta ;	1281:8:35637:35650	63410	1	True				
ANR	63522	IdentifierDecl	delta		63410	0					
ANR	63523	IdentifierDeclType	FT_Pos		63410	0					
ANR	63524	Identifier	delta		63410	1					
ANR	63525	IfStatement	if ( point -> flags & touch_flag )		63410	2					
ANR	63526	Condition	point -> flags & touch_flag	1284:13:35667:35691	63410	0	True				
ANR	63527	BitAndExpression	point -> flags & touch_flag		63410	0		&			
ANR	63528	PtrMemberAccess	point -> flags		63410	0					
ANR	63529	Identifier	point		63410	0					
ANR	63530	Identifier	flags		63410	1					
ANR	63531	Identifier	touch_flag		63410	1					
ANR	63532	ContinueStatement	continue ;	1285:10:35705:35713	63410	1	True				
ANR	63533	IfStatement	if ( ( point -> flags & AF_FLAG_WEAK_INTERPOLATION ) )		63410	3					
ANR	63534	Condition	point -> flags & AF_FLAG_WEAK_INTERPOLATION	1290:13:35876:35920	63410	0	True				
ANR	63535	BitAndExpression	point -> flags & AF_FLAG_WEAK_INTERPOLATION		63410	0		&			
ANR	63536	PtrMemberAccess	point -> flags		63410	0					
ANR	63537	Identifier	point		63410	0					
ANR	63538	Identifier	flags		63410	1					
ANR	63539	Identifier	AF_FLAG_WEAK_INTERPOLATION		63410	1					
ANR	63540	ContinueStatement	continue ;	1291:10:35934:35942	63410	1	True				
ANR	63541	IfStatement	if ( dim == AF_DIMENSION_VERT )		63410	4					
ANR	63542	Condition	dim == AF_DIMENSION_VERT	1293:13:35958:35981	63410	0	True				
ANR	63543	EqualityExpression	dim == AF_DIMENSION_VERT		63410	0		==			
ANR	63544	Identifier	dim		63410	0					
ANR	63545	Identifier	AF_DIMENSION_VERT		63410	1					
ANR	63546	CompoundStatement		37:8:975:975	63410	1					
ANR	63547	ExpressionStatement	u = point -> fy	1295:10:36005:36019	63410	0	True				
ANR	63548	AssignmentExpression	u = point -> fy		63410	0		=			
ANR	63549	Identifier	u		63410	0					
ANR	63550	PtrMemberAccess	point -> fy		63410	1					
ANR	63551	Identifier	point		63410	0					
ANR	63552	Identifier	fy		63410	1					
ANR	63553	ExpressionStatement	ou = point -> oy	1296:10:36031:36045	63410	1	True				
ANR	63554	AssignmentExpression	ou = point -> oy		63410	0		=			
ANR	63555	Identifier	ou		63410	0					
ANR	63556	PtrMemberAccess	point -> oy		63410	1					
ANR	63557	Identifier	point		63410	0					
ANR	63558	Identifier	oy		63410	1					
ANR	63559	ElseStatement	else		63410	0					
ANR	63560	CompoundStatement		42:8:1060:1060	63410	0					
ANR	63561	ExpressionStatement	u = point -> fx	1300:10:36090:36104	63410	0	True				
ANR	63562	AssignmentExpression	u = point -> fx		63410	0		=			
ANR	63563	Identifier	u		63410	0					
ANR	63564	PtrMemberAccess	point -> fx		63410	1					
ANR	63565	Identifier	point		63410	0					
ANR	63566	Identifier	fx		63410	1					
ANR	63567	ExpressionStatement	ou = point -> ox	1301:10:36116:36130	63410	1	True				
ANR	63568	AssignmentExpression	ou = point -> ox		63410	0		=			
ANR	63569	Identifier	ou		63410	0					
ANR	63570	PtrMemberAccess	point -> ox		63410	1					
ANR	63571	Identifier	point		63410	0					
ANR	63572	Identifier	ox		63410	1					
ANR	63573	ExpressionStatement	fu = u	1304:8:36151:36157	63410	5	True				
ANR	63574	AssignmentExpression	fu = u		63410	0		=			
ANR	63575	Identifier	fu		63410	0					
ANR	63576	Identifier	u		63410	1					
ANR	63577	ExpressionStatement	edge = edges	1307:8:36218:36231	63410	6	True				
ANR	63578	AssignmentExpression	edge = edges		63410	0		=			
ANR	63579	Identifier	edge		63410	0					
ANR	63580	Identifier	edges		63410	1					
ANR	63581	ExpressionStatement	delta = edge -> fpos - u	1308:8:36241:36263	63410	7	True				
ANR	63582	AssignmentExpression	delta = edge -> fpos - u		63410	0		=			
ANR	63583	Identifier	delta		63410	0					
ANR	63584	AdditiveExpression	edge -> fpos - u		63410	1		-			
ANR	63585	PtrMemberAccess	edge -> fpos		63410	0					
ANR	63586	Identifier	edge		63410	0					
ANR	63587	Identifier	fpos		63410	1					
ANR	63588	Identifier	u		63410	1					
ANR	63589	IfStatement	if ( delta >= 0 )		63410	8					
ANR	63590	Condition	delta >= 0	1309:13:36278:36287	63410	0	True				
ANR	63591	RelationalExpression	delta >= 0		63410	0		>=			
ANR	63592	Identifier	delta		63410	0					
ANR	63593	PrimaryExpression	0		63410	1					
ANR	63594	CompoundStatement		53:8:1281:1281	63410	1					
ANR	63595	ExpressionStatement	u = edge -> pos - ( edge -> opos - ou )	1311:10:36311:36346	63410	0	True				
ANR	63596	AssignmentExpression	u = edge -> pos - ( edge -> opos - ou )		63410	0		=			
ANR	63597	Identifier	u		63410	0					
ANR	63598	AdditiveExpression	edge -> pos - ( edge -> opos - ou )		63410	1		-			
ANR	63599	PtrMemberAccess	edge -> pos		63410	0					
ANR	63600	Identifier	edge		63410	0					
ANR	63601	Identifier	pos		63410	1					
ANR	63602	AdditiveExpression	edge -> opos - ou		63410	1		-			
ANR	63603	PtrMemberAccess	edge -> opos		63410	0					
ANR	63604	Identifier	edge		63410	0					
ANR	63605	Identifier	opos		63410	1					
ANR	63606	Identifier	ou		63410	1					
ANR	63607	GotoStatement	goto Store_Point ;	1312:10:36358:36374	63410	1	True				
ANR	63608	Identifier	Store_Point		63410	0					
ANR	63609	ExpressionStatement	edge = edge_limit - 1	1316:8:36443:36465	63410	9	True				
ANR	63610	AssignmentExpression	edge = edge_limit - 1		63410	0		=			
ANR	63611	Identifier	edge		63410	0					
ANR	63612	AdditiveExpression	edge_limit - 1		63410	1		-			
ANR	63613	Identifier	edge_limit		63410	0					
ANR	63614	PrimaryExpression	1		63410	1					
ANR	63615	ExpressionStatement	delta = u - edge -> fpos	1317:8:36475:36497	63410	10	True				
ANR	63616	AssignmentExpression	delta = u - edge -> fpos		63410	0		=			
ANR	63617	Identifier	delta		63410	0					
ANR	63618	AdditiveExpression	u - edge -> fpos		63410	1		-			
ANR	63619	Identifier	u		63410	0					
ANR	63620	PtrMemberAccess	edge -> fpos		63410	1					
ANR	63621	Identifier	edge		63410	0					
ANR	63622	Identifier	fpos		63410	1					
ANR	63623	IfStatement	if ( delta >= 0 )		63410	11					
ANR	63624	Condition	delta >= 0	1318:13:36512:36521	63410	0	True				
ANR	63625	RelationalExpression	delta >= 0		63410	0		>=			
ANR	63626	Identifier	delta		63410	0					
ANR	63627	PrimaryExpression	0		63410	1					
ANR	63628	CompoundStatement		62:8:1515:1515	63410	1					
ANR	63629	ExpressionStatement	u = edge -> pos + ( ou - edge -> opos )	1320:10:36545:36580	63410	0	True				
ANR	63630	AssignmentExpression	u = edge -> pos + ( ou - edge -> opos )		63410	0		=			
ANR	63631	Identifier	u		63410	0					
ANR	63632	AdditiveExpression	edge -> pos + ( ou - edge -> opos )		63410	1		+			
ANR	63633	PtrMemberAccess	edge -> pos		63410	0					
ANR	63634	Identifier	edge		63410	0					
ANR	63635	Identifier	pos		63410	1					
ANR	63636	AdditiveExpression	ou - edge -> opos		63410	1		-			
ANR	63637	Identifier	ou		63410	0					
ANR	63638	PtrMemberAccess	edge -> opos		63410	1					
ANR	63639	Identifier	edge		63410	0					
ANR	63640	Identifier	opos		63410	1					
ANR	63641	GotoStatement	goto Store_Point ;	1321:10:36592:36608	63410	1	True				
ANR	63642	Identifier	Store_Point		63410	0					
ANR	63643	CompoundStatement		69:10:1660:1676	63410	12					
ANR	63644	IdentifierDeclStatement	"FT_PtrDist min , max , mid ;"	1325:10:36641:36666	63410	0	True				
ANR	63645	IdentifierDecl	min		63410	0					
ANR	63646	IdentifierDeclType	FT_PtrDist		63410	0					
ANR	63647	Identifier	min		63410	1					
ANR	63648	IdentifierDecl	max		63410	1					
ANR	63649	IdentifierDeclType	FT_PtrDist		63410	0					
ANR	63650	Identifier	max		63410	1					
ANR	63651	IdentifierDecl	mid		63410	2					
ANR	63652	IdentifierDeclType	FT_PtrDist		63410	0					
ANR	63653	Identifier	mid		63410	1					
ANR	63654	IdentifierDeclStatement	FT_Pos fpos ;	1326:10:36678:36694	63410	1	True				
ANR	63655	IdentifierDecl	fpos		63410	0					
ANR	63656	IdentifierDeclType	FT_Pos		63410	0					
ANR	63657	Identifier	fpos		63410	1					
ANR	63658	ExpressionStatement	min = 0	1330:10:36745:36752	63410	2	True				
ANR	63659	AssignmentExpression	min = 0		63410	0		=			
ANR	63660	Identifier	min		63410	0					
ANR	63661	PrimaryExpression	0		63410	1					
ANR	63662	ExpressionStatement	max = edge_limit - edges	1331:10:36764:36788	63410	3	True				
ANR	63663	AssignmentExpression	max = edge_limit - edges		63410	0		=			
ANR	63664	Identifier	max		63410	0					
ANR	63665	AdditiveExpression	edge_limit - edges		63410	1		-			
ANR	63666	Identifier	edge_limit		63410	0					
ANR	63667	Identifier	edges		63410	1					
ANR	63668	IfStatement	if ( max <= 8 )		63410	4					
ANR	63669	Condition	max <= 8	1335:15:36883:36890	63410	0	True				
ANR	63670	RelationalExpression	max <= 8		63410	0		<=			
ANR	63671	Identifier	max		63410	0					
ANR	63672	PrimaryExpression	8		63410	1					
ANR	63673	CompoundStatement		80:12:1900:1914	63410	1					
ANR	63674	IdentifierDeclStatement	FT_PtrDist nn ;	1337:12:36918:36932	63410	0	True				
ANR	63675	IdentifierDecl	nn		63410	0					
ANR	63676	IdentifierDeclType	FT_PtrDist		63410	0					
ANR	63677	Identifier	nn		63410	1					
ANR	63678	ForStatement	for ( nn = 0 ; nn < max ; nn ++ )		63410	1					
ANR	63679	ForInit	nn = 0 ;	1340:18:36954:36960	63410	0	True				
ANR	63680	AssignmentExpression	nn = 0		63410	0		=			
ANR	63681	Identifier	nn		63410	0					
ANR	63682	PrimaryExpression	0		63410	1					
ANR	63683	Condition	nn < max	1340:26:36962:36969	63410	1	True				
ANR	63684	RelationalExpression	nn < max		63410	0		<			
ANR	63685	Identifier	nn		63410	0					
ANR	63686	Identifier	max		63410	1					
ANR	63687	PostIncDecOperationExpression	nn ++	1340:36:36972:36975	63410	2	True				
ANR	63688	Identifier	nn		63410	0					
ANR	63689	IncDec	++		63410	1					
ANR	63690	IfStatement	if ( edges [ nn ] . fpos >= u )		63410	3					
ANR	63691	Condition	edges [ nn ] . fpos >= u	1341:19:36998:37016	63410	0	True				
ANR	63692	RelationalExpression	edges [ nn ] . fpos >= u		63410	0		>=			
ANR	63693	MemberAccess	edges [ nn ] . fpos		63410	0					
ANR	63694	ArrayIndexing	edges [ nn ]		63410	0					
ANR	63695	Identifier	edges		63410	0					
ANR	63696	Identifier	nn		63410	1					
ANR	63697	Identifier	fpos		63410	1					
ANR	63698	Identifier	u		63410	1					
ANR	63699	BreakStatement	break ;	1342:16:37036:37041	63410	1	True				
ANR	63700	IfStatement	if ( edges [ nn ] . fpos == u )		63410	2					
ANR	63701	Condition	edges [ nn ] . fpos == u	1344:17:37061:37079	63410	0	True				
ANR	63702	EqualityExpression	edges [ nn ] . fpos == u		63410	0		==			
ANR	63703	MemberAccess	edges [ nn ] . fpos		63410	0					
ANR	63704	ArrayIndexing	edges [ nn ]		63410	0					
ANR	63705	Identifier	edges		63410	0					
ANR	63706	Identifier	nn		63410	1					
ANR	63707	Identifier	fpos		63410	1					
ANR	63708	Identifier	u		63410	1					
ANR	63709	CompoundStatement		88:12:2077:2077	63410	1					
ANR	63710	ExpressionStatement	u = edges [ nn ] . pos	1346:14:37111:37128	63410	0	True				
ANR	63711	AssignmentExpression	u = edges [ nn ] . pos		63410	0		=			
ANR	63712	Identifier	u		63410	0					
ANR	63713	MemberAccess	edges [ nn ] . pos		63410	1					
ANR	63714	ArrayIndexing	edges [ nn ]		63410	0					
ANR	63715	Identifier	edges		63410	0					
ANR	63716	Identifier	nn		63410	1					
ANR	63717	Identifier	pos		63410	1					
ANR	63718	GotoStatement	goto Store_Point ;	1347:14:37144:37160	63410	1	True				
ANR	63719	Identifier	Store_Point		63410	0					
ANR	63720	ExpressionStatement	min = nn	1349:12:37188:37196	63410	3	True				
ANR	63721	AssignmentExpression	min = nn		63410	0		=			
ANR	63722	Identifier	min		63410	0					
ANR	63723	Identifier	nn		63410	1					
ANR	63724	ElseStatement	else		63410	0					
ANR	63725	WhileStatement	while ( min < max )		63410	0					
ANR	63726	Condition	min < max	1353:18:37250:37258	63410	0	True				
ANR	63727	RelationalExpression	min < max		63410	0		<			
ANR	63728	Identifier	min		63410	0					
ANR	63729	Identifier	max		63410	1					
ANR	63730	CompoundStatement		97:10:2254:2254	63410	1					
ANR	63731	ExpressionStatement	mid = ( max + min ) >> 1	1355:12:37286:37311	63410	0	True				
ANR	63732	AssignmentExpression	mid = ( max + min ) >> 1		63410	0		=			
ANR	63733	Identifier	mid		63410	0					
ANR	63734	ShiftExpression	( max + min ) >> 1		63410	1		>>			
ANR	63735	AdditiveExpression	max + min		63410	0		+			
ANR	63736	Identifier	max		63410	0					
ANR	63737	Identifier	min		63410	1					
ANR	63738	PrimaryExpression	1		63410	1					
ANR	63739	ExpressionStatement	edge = edges + mid	1356:12:37325:37343	63410	1	True				
ANR	63740	AssignmentExpression	edge = edges + mid		63410	0		=			
ANR	63741	Identifier	edge		63410	0					
ANR	63742	AdditiveExpression	edges + mid		63410	1		+			
ANR	63743	Identifier	edges		63410	0					
ANR	63744	Identifier	mid		63410	1					
ANR	63745	ExpressionStatement	fpos = edge -> fpos	1357:12:37357:37374	63410	2	True				
ANR	63746	AssignmentExpression	fpos = edge -> fpos		63410	0		=			
ANR	63747	Identifier	fpos		63410	0					
ANR	63748	PtrMemberAccess	edge -> fpos		63410	1					
ANR	63749	Identifier	edge		63410	0					
ANR	63750	Identifier	fpos		63410	1					
ANR	63751	IfStatement	if ( u < fpos )		63410	3					
ANR	63752	Condition	u < fpos	1359:17:37394:37401	63410	0	True				
ANR	63753	RelationalExpression	u < fpos		63410	0		<			
ANR	63754	Identifier	u		63410	0					
ANR	63755	Identifier	fpos		63410	1					
ANR	63756	ExpressionStatement	max = mid	1360:14:37419:37428	63410	1	True				
ANR	63757	AssignmentExpression	max = mid		63410	0		=			
ANR	63758	Identifier	max		63410	0					
ANR	63759	Identifier	mid		63410	1					
ANR	63760	ElseStatement	else		63410	0					
ANR	63761	IfStatement	if ( u > fpos )		63410	0					
ANR	63762	Condition	u > fpos	1361:22:37452:37459	63410	0	True				
ANR	63763	RelationalExpression	u > fpos		63410	0		>			
ANR	63764	Identifier	u		63410	0					
ANR	63765	Identifier	fpos		63410	1					
ANR	63766	ExpressionStatement	min = mid + 1	1362:14:37477:37490	63410	1	True				
ANR	63767	AssignmentExpression	min = mid + 1		63410	0		=			
ANR	63768	Identifier	min		63410	0					
ANR	63769	AdditiveExpression	mid + 1		63410	1		+			
ANR	63770	Identifier	mid		63410	0					
ANR	63771	PrimaryExpression	1		63410	1					
ANR	63772	ElseStatement	else		63410	0					
ANR	63773	CompoundStatement		107:12:2503:2503	63410	0					
ANR	63774	ExpressionStatement	u = edge -> pos	1366:14:37576:37589	63410	0	True				
ANR	63775	AssignmentExpression	u = edge -> pos		63410	0		=			
ANR	63776	Identifier	u		63410	0					
ANR	63777	PtrMemberAccess	edge -> pos		63410	1					
ANR	63778	Identifier	edge		63410	0					
ANR	63779	Identifier	pos		63410	1					
ANR	63780	GotoStatement	goto Store_Point ;	1367:14:37605:37621	63410	1	True				
ANR	63781	Identifier	Store_Point		63410	0					
ANR	63782	CompoundStatement		117:12:2743:2776	63410	5					
ANR	63783	IdentifierDeclStatement	AF_Edge before = edges + min - 1 ;	1373:12:37714:37747	63410	0	True				
ANR	63784	IdentifierDecl	before = edges + min - 1		63410	0					
ANR	63785	IdentifierDeclType	AF_Edge		63410	0					
ANR	63786	Identifier	before		63410	1					
ANR	63787	AssignmentExpression	before = edges + min - 1		63410	2		=			
ANR	63788	Identifier	before		63410	0					
ANR	63789	AdditiveExpression	edges + min - 1		63410	1		+			
ANR	63790	Identifier	edges		63410	0					
ANR	63791	AdditiveExpression	min - 1		63410	1		-			
ANR	63792	Identifier	min		63410	0					
ANR	63793	PrimaryExpression	1		63410	1					
ANR	63794	IdentifierDeclStatement	AF_Edge after = edges + min + 0 ;	1374:12:37761:37794	63410	1	True				
ANR	63795	IdentifierDecl	after = edges + min + 0		63410	0					
ANR	63796	IdentifierDeclType	AF_Edge		63410	0					
ANR	63797	Identifier	after		63410	1					
ANR	63798	AssignmentExpression	after = edges + min + 0		63410	2		=			
ANR	63799	Identifier	after		63410	0					
ANR	63800	AdditiveExpression	edges + min + 0		63410	1		+			
ANR	63801	Identifier	edges		63410	0					
ANR	63802	AdditiveExpression	min + 0		63410	1		+			
ANR	63803	Identifier	min		63410	0					
ANR	63804	PrimaryExpression	0		63410	1					
ANR	63805	IfStatement	if ( before -> scale == 0 )		63410	2					
ANR	63806	Condition	before -> scale == 0	1378:17:37878:37895	63410	0	True				
ANR	63807	EqualityExpression	before -> scale == 0		63410	0		==			
ANR	63808	PtrMemberAccess	before -> scale		63410	0					
ANR	63809	Identifier	before		63410	0					
ANR	63810	Identifier	scale		63410	1					
ANR	63811	PrimaryExpression	0		63410	1					
ANR	63812	ExpressionStatement	"before -> scale = FT_DivFix ( after -> pos - before -> pos , after -> fpos - before -> fpos )"	1379:14:37913:38035	63410	1	True				
ANR	63813	AssignmentExpression	"before -> scale = FT_DivFix ( after -> pos - before -> pos , after -> fpos - before -> fpos )"		63410	0		=			
ANR	63814	PtrMemberAccess	before -> scale		63410	0					
ANR	63815	Identifier	before		63410	0					
ANR	63816	Identifier	scale		63410	1					
ANR	63817	CallExpression	"FT_DivFix ( after -> pos - before -> pos , after -> fpos - before -> fpos )"		63410	1					
ANR	63818	Callee	FT_DivFix		63410	0					
ANR	63819	Identifier	FT_DivFix		63410	0					
ANR	63820	ArgumentList	after -> pos - before -> pos		63410	1					
ANR	63821	Argument	after -> pos - before -> pos		63410	0					
ANR	63822	AdditiveExpression	after -> pos - before -> pos		63410	0		-			
ANR	63823	PtrMemberAccess	after -> pos		63410	0					
ANR	63824	Identifier	after		63410	0					
ANR	63825	Identifier	pos		63410	1					
ANR	63826	PtrMemberAccess	before -> pos		63410	1					
ANR	63827	Identifier	before		63410	0					
ANR	63828	Identifier	pos		63410	1					
ANR	63829	Argument	after -> fpos - before -> fpos		63410	1					
ANR	63830	AdditiveExpression	after -> fpos - before -> fpos		63410	0		-			
ANR	63831	PtrMemberAccess	after -> fpos		63410	0					
ANR	63832	Identifier	after		63410	0					
ANR	63833	Identifier	fpos		63410	1					
ANR	63834	PtrMemberAccess	before -> fpos		63410	1					
ANR	63835	Identifier	before		63410	0					
ANR	63836	Identifier	fpos		63410	1					
ANR	63837	ExpressionStatement	"u = before -> pos + FT_MulFix ( fu - before -> fpos , before -> scale )"	1382:12:38050:38154	63410	3	True				
ANR	63838	AssignmentExpression	"u = before -> pos + FT_MulFix ( fu - before -> fpos , before -> scale )"		63410	0		=			
ANR	63839	Identifier	u		63410	0					
ANR	63840	AdditiveExpression	"before -> pos + FT_MulFix ( fu - before -> fpos , before -> scale )"		63410	1		+			
ANR	63841	PtrMemberAccess	before -> pos		63410	0					
ANR	63842	Identifier	before		63410	0					
ANR	63843	Identifier	pos		63410	1					
ANR	63844	CallExpression	"FT_MulFix ( fu - before -> fpos , before -> scale )"		63410	1					
ANR	63845	Callee	FT_MulFix		63410	0					
ANR	63846	Identifier	FT_MulFix		63410	0					
ANR	63847	ArgumentList	fu - before -> fpos		63410	1					
ANR	63848	Argument	fu - before -> fpos		63410	0					
ANR	63849	AdditiveExpression	fu - before -> fpos		63410	0		-			
ANR	63850	Identifier	fu		63410	0					
ANR	63851	PtrMemberAccess	before -> fpos		63410	1					
ANR	63852	Identifier	before		63410	0					
ANR	63853	Identifier	fpos		63410	1					
ANR	63854	Argument	before -> scale		63410	1					
ANR	63855	PtrMemberAccess	before -> scale		63410	0					
ANR	63856	Identifier	before		63410	0					
ANR	63857	Identifier	scale		63410	1					
ANR	63858	Label	Store_Point :	1387:6:38185:38196	63410	13	True				
ANR	63859	Identifier	Store_Point		63410	0					
ANR	63860	IfStatement	if ( dim == AF_DIMENSION_HORZ )		63410	14					
ANR	63861	Condition	dim == AF_DIMENSION_HORZ	1389:13:38249:38272	63410	0	True				
ANR	63862	EqualityExpression	dim == AF_DIMENSION_HORZ		63410	0		==			
ANR	63863	Identifier	dim		63410	0					
ANR	63864	Identifier	AF_DIMENSION_HORZ		63410	1					
ANR	63865	ExpressionStatement	point -> x = u	1390:10:38286:38298	63410	1	True				
ANR	63866	AssignmentExpression	point -> x = u		63410	0		=			
ANR	63867	PtrMemberAccess	point -> x		63410	0					
ANR	63868	Identifier	point		63410	0					
ANR	63869	Identifier	x		63410	1					
ANR	63870	Identifier	u		63410	1					
ANR	63871	ElseStatement	else		63410	0					
ANR	63872	ExpressionStatement	point -> y = u	1392:10:38323:38335	63410	0	True				
ANR	63873	AssignmentExpression	point -> y = u		63410	0		=			
ANR	63874	PtrMemberAccess	point -> y		63410	0					
ANR	63875	Identifier	point		63410	0					
ANR	63876	Identifier	y		63410	1					
ANR	63877	Identifier	u		63410	1					
ANR	63878	ExpressionStatement	point -> flags |= touch_flag	1394:8:38346:38372	63410	15	True				
ANR	63879	AssignmentExpression	point -> flags |= touch_flag		63410	0		|=			
ANR	63880	PtrMemberAccess	point -> flags		63410	0					
ANR	63881	Identifier	point		63410	0					
ANR	63882	Identifier	flags		63410	1					
ANR	63883	Identifier	touch_flag		63410	1					
ANR	63884	Identifier	af_glyph_hints_align_strong_points		63410	1					
ANR	63885	ParameterList	"AF_GlyphHints hints , AF_Dimension dim"		63410	2					
ANR	63886	Parameter	AF_GlyphHints hints	1256:38:34934:34953	63410	0	True				
ANR	63887	ParameterType	AF_GlyphHints		63410	0					
ANR	63888	Identifier	hints		63410	1					
ANR	63889	Parameter	AF_Dimension dim	1257:38:34994:35011	63410	1	True				
ANR	63890	ParameterType	AF_Dimension		63410	0					
ANR	63891	Identifier	dim		63410	1					
ANR	63892	CFGEntryNode	ENTRY		63410		True				
ANR	63893	CFGExitNode	EXIT		63410		True				
ANR	63894	Symbol	* after		63410						
ANR	63895	Symbol	before		63410						
ANR	63896	Symbol	* before		63410						
ANR	63897	Symbol	point_limit		63410						
ANR	63898	Symbol	before -> fpos		63410						
ANR	63899	Symbol	delta		63410						
ANR	63900	Symbol	dim		63410						
ANR	63901	Symbol	AF_FLAG_TOUCH_Y		63410						
ANR	63902	Symbol	axis		63410						
ANR	63903	Symbol	points		63410						
ANR	63904	Symbol	edge -> fpos		63410						
ANR	63905	Symbol	edge		63410						
ANR	63906	Symbol	before -> scale		63410						
ANR	63907	Symbol	hints -> num_points		63410						
ANR	63908	Symbol	point -> oy		63410						
ANR	63909	Symbol	point -> ox		63410						
ANR	63910	Symbol	* hints		63410						
ANR	63911	Symbol	fpos		63410						
ANR	63912	Symbol	touch_flag		63410						
ANR	63913	Symbol	* point		63410						
ANR	63914	Symbol	hints		63410						
ANR	63915	Symbol	after -> fpos		63410						
ANR	63916	Symbol	AF_FLAG_WEAK_INTERPOLATION		63410						
ANR	63917	Symbol	point -> fx		63410						
ANR	63918	Symbol	after -> pos		63410						
ANR	63919	Symbol	point -> fy		63410						
ANR	63920	Symbol	axis -> edges		63410						
ANR	63921	Symbol	edges [ nn ] . pos		63410						
ANR	63922	Symbol	before -> pos		63410						
ANR	63923	Symbol	point -> x		63410						
ANR	63924	Symbol	point -> y		63410						
ANR	63925	Symbol	nn		63410						
ANR	63926	Symbol	edges [ nn ] . fpos		63410						
ANR	63927	Symbol	mid		63410						
ANR	63928	Symbol	hints -> points		63410						
ANR	63929	Symbol	* axis		63410						
ANR	63930	Symbol	point		63410						
ANR	63931	Symbol	fu		63410						
ANR	63932	Symbol	AF_DIMENSION_HORZ		63410						
ANR	63933	Symbol	min		63410						
ANR	63934	Symbol	edge_limit		63410						
ANR	63935	Symbol	after		63410						
ANR	63936	Symbol	hints -> axis		63410						
ANR	63937	Symbol	max		63410						
ANR	63938	Symbol	* nn		63410						
ANR	63939	Symbol	FT_DivFix		63410						
ANR	63940	Symbol	ou		63410						
ANR	63941	Symbol	edges		63410						
ANR	63942	Symbol	edge -> opos		63410						
ANR	63943	Symbol	* edge		63410						
ANR	63944	Symbol	axis -> num_edges		63410						
ANR	63945	Symbol	FT_MulFix		63410						
ANR	63946	Symbol	AF_FLAG_TOUCH_X		63410						
ANR	63947	Symbol	u		63410						
ANR	63948	Symbol	point -> flags		63410						
ANR	63949	Symbol	AF_DIMENSION_VERT		63410						
ANR	63950	Symbol	edge -> pos		63410						
ANR	63951	Symbol	* edges		63410						
ANR	63952	Function	af_iup_shift	1411:2:38805:39136							
ANR	63953	FunctionDef	"af_iup_shift (AF_Point p1 , AF_Point p2 , AF_Point ref)"		63952	0					
ANR	63954	CompoundStatement		1415:2:38911:39136	63952	0					
ANR	63955	IdentifierDeclStatement	AF_Point p ;	1416:4:38917:38928	63952	0	True				
ANR	63956	IdentifierDecl	p		63952	0					
ANR	63957	IdentifierDeclType	AF_Point		63952	0					
ANR	63958	Identifier	p		63952	1					
ANR	63959	IdentifierDeclStatement	FT_Pos delta = ref -> u - ref -> v ;	1417:4:38934:38967	63952	1	True				
ANR	63960	IdentifierDecl	delta = ref -> u - ref -> v		63952	0					
ANR	63961	IdentifierDeclType	FT_Pos		63952	0					
ANR	63962	Identifier	delta		63952	1					
ANR	63963	AssignmentExpression	delta = ref -> u - ref -> v		63952	2		=			
ANR	63964	Identifier	delta		63952	0					
ANR	63965	AdditiveExpression	ref -> u - ref -> v		63952	1		-			
ANR	63966	PtrMemberAccess	ref -> u		63952	0					
ANR	63967	Identifier	ref		63952	0					
ANR	63968	Identifier	u		63952	1					
ANR	63969	PtrMemberAccess	ref -> v		63952	1					
ANR	63970	Identifier	ref		63952	0					
ANR	63971	Identifier	v		63952	1					
ANR	63972	IfStatement	if ( delta == 0 )		63952	2					
ANR	63973	Condition	delta == 0	1420:9:38980:38989	63952	0	True				
ANR	63974	EqualityExpression	delta == 0		63952	0		==			
ANR	63975	Identifier	delta		63952	0					
ANR	63976	PrimaryExpression	0		63952	1					
ANR	63977	ReturnStatement	return ;	1421:6:38999:39005	63952	1	True				
ANR	63978	ForStatement	for ( p = p1 ; p < ref ; p ++ )		63952	3					
ANR	63979	ForInit	p = p1 ;	1423:10:39018:39024	63952	0	True				
ANR	63980	AssignmentExpression	p = p1		63952	0		=			
ANR	63981	Identifier	p		63952	0					
ANR	63982	Identifier	p1		63952	1					
ANR	63983	Condition	p < ref	1423:18:39026:39032	63952	1	True				
ANR	63984	RelationalExpression	p < ref		63952	0		<			
ANR	63985	Identifier	p		63952	0					
ANR	63986	Identifier	ref		63952	1					
ANR	63987	PostIncDecOperationExpression	p ++	1423:27:39035:39037	63952	2	True				
ANR	63988	Identifier	p		63952	0					
ANR	63989	IncDec	++		63952	1					
ANR	63990	ExpressionStatement	p -> u = p -> v + delta	1424:6:39047:39066	63952	3	True				
ANR	63991	AssignmentExpression	p -> u = p -> v + delta		63952	0		=			
ANR	63992	PtrMemberAccess	p -> u		63952	0					
ANR	63993	Identifier	p		63952	0					
ANR	63994	Identifier	u		63952	1					
ANR	63995	AdditiveExpression	p -> v + delta		63952	1		+			
ANR	63996	PtrMemberAccess	p -> v		63952	0					
ANR	63997	Identifier	p		63952	0					
ANR	63998	Identifier	v		63952	1					
ANR	63999	Identifier	delta		63952	1					
ANR	64000	ForStatement	for ( p = ref + 1 ; p <= p2 ; p ++ )		63952	4					
ANR	64001	ForInit	p = ref + 1 ;	1426:10:39079:39090	63952	0	True				
ANR	64002	AssignmentExpression	p = ref + 1		63952	0		=			
ANR	64003	Identifier	p		63952	0					
ANR	64004	AdditiveExpression	ref + 1		63952	1		+			
ANR	64005	Identifier	ref		63952	0					
ANR	64006	PrimaryExpression	1		63952	1					
ANR	64007	Condition	p <= p2	1426:23:39092:39098	63952	1	True				
ANR	64008	RelationalExpression	p <= p2		63952	0		<=			
ANR	64009	Identifier	p		63952	0					
ANR	64010	Identifier	p2		63952	1					
ANR	64011	PostIncDecOperationExpression	p ++	1426:32:39101:39103	63952	2	True				
ANR	64012	Identifier	p		63952	0					
ANR	64013	IncDec	++		63952	1					
ANR	64014	ExpressionStatement	p -> u = p -> v + delta	1427:6:39113:39132	63952	3	True				
ANR	64015	AssignmentExpression	p -> u = p -> v + delta		63952	0		=			
ANR	64016	PtrMemberAccess	p -> u		63952	0					
ANR	64017	Identifier	p		63952	0					
ANR	64018	Identifier	u		63952	1					
ANR	64019	AdditiveExpression	p -> v + delta		63952	1		+			
ANR	64020	PtrMemberAccess	p -> v		63952	0					
ANR	64021	Identifier	p		63952	0					
ANR	64022	Identifier	v		63952	1					
ANR	64023	Identifier	delta		63952	1					
ANR	64024	ReturnType	static void		63952	1					
ANR	64025	Identifier	af_iup_shift		63952	2					
ANR	64026	ParameterList	"AF_Point p1 , AF_Point p2 , AF_Point ref"		63952	3					
ANR	64027	Parameter	AF_Point p1	1412:16:38833:38844	63952	0	True				
ANR	64028	ParameterType	AF_Point		63952	0					
ANR	64029	Identifier	p1		63952	1					
ANR	64030	Parameter	AF_Point p2	1413:16:38863:38874	63952	1	True				
ANR	64031	ParameterType	AF_Point		63952	0					
ANR	64032	Identifier	p2		63952	1					
ANR	64033	Parameter	AF_Point ref	1414:16:38893:38905	63952	2	True				
ANR	64034	ParameterType	AF_Point		63952	0					
ANR	64035	Identifier	ref		63952	1					
ANR	64036	CFGEntryNode	ENTRY		63952		True				
ANR	64037	CFGExitNode	EXIT		63952		True				
ANR	64038	Symbol	p		63952						
ANR	64039	Symbol	p -> v		63952						
ANR	64040	Symbol	p1		63952						
ANR	64041	Symbol	p -> u		63952						
ANR	64042	Symbol	p2		63952						
ANR	64043	Symbol	ref		63952						
ANR	64044	Symbol	ref -> u		63952						
ANR	64045	Symbol	ref -> v		63952						
ANR	64046	Symbol	delta		63952						
ANR	64047	Symbol	* p		63952						
ANR	64048	Symbol	* ref		63952						
ANR	64049	Function	af_iup_interp	1438:2:39605:40620							
ANR	64050	FunctionDef	"af_iup_interp (AF_Point p1 , AF_Point p2 , AF_Point ref1 , AF_Point ref2)"		64049	0					
ANR	64051	CompoundStatement		1443:2:39748:40620	64049	0					
ANR	64052	IdentifierDeclStatement	AF_Point p ;	1444:4:39754:39765	64049	0	True				
ANR	64053	IdentifierDecl	p		64049	0					
ANR	64054	IdentifierDeclType	AF_Point		64049	0					
ANR	64055	Identifier	p		64049	1					
ANR	64056	IdentifierDeclStatement	"FT_Pos u , v1 , v2 , u1 , u2 , d1 , d2 ;"	1445:4:39771:39806	64049	1	True				
ANR	64057	IdentifierDecl	u		64049	0					
ANR	64058	IdentifierDeclType	FT_Pos		64049	0					
ANR	64059	Identifier	u		64049	1					
ANR	64060	IdentifierDecl	v1		64049	1					
ANR	64061	IdentifierDeclType	FT_Pos		64049	0					
ANR	64062	Identifier	v1		64049	1					
ANR	64063	IdentifierDecl	v2		64049	2					
ANR	64064	IdentifierDeclType	FT_Pos		64049	0					
ANR	64065	Identifier	v2		64049	1					
ANR	64066	IdentifierDecl	u1		64049	3					
ANR	64067	IdentifierDeclType	FT_Pos		64049	0					
ANR	64068	Identifier	u1		64049	1					
ANR	64069	IdentifierDecl	u2		64049	4					
ANR	64070	IdentifierDeclType	FT_Pos		64049	0					
ANR	64071	Identifier	u2		64049	1					
ANR	64072	IdentifierDecl	d1		64049	5					
ANR	64073	IdentifierDeclType	FT_Pos		64049	0					
ANR	64074	Identifier	d1		64049	1					
ANR	64075	IdentifierDecl	d2		64049	6					
ANR	64076	IdentifierDeclType	FT_Pos		64049	0					
ANR	64077	Identifier	d2		64049	1					
ANR	64078	IfStatement	if ( p1 > p2 )		64049	2					
ANR	64079	Condition	p1 > p2	1448:9:39819:39825	64049	0	True				
ANR	64080	RelationalExpression	p1 > p2		64049	0		>			
ANR	64081	Identifier	p1		64049	0					
ANR	64082	Identifier	p2		64049	1					
ANR	64083	ReturnStatement	return ;	1449:6:39835:39841	64049	1	True				
ANR	64084	IfStatement	if ( ref1 -> v > ref2 -> v )		64049	3					
ANR	64085	Condition	ref1 -> v > ref2 -> v	1451:9:39853:39869	64049	0	True				
ANR	64086	RelationalExpression	ref1 -> v > ref2 -> v		64049	0		>			
ANR	64087	PtrMemberAccess	ref1 -> v		64049	0					
ANR	64088	Identifier	ref1		64049	0					
ANR	64089	Identifier	v		64049	1					
ANR	64090	PtrMemberAccess	ref2 -> v		64049	1					
ANR	64091	Identifier	ref2		64049	0					
ANR	64092	Identifier	v		64049	1					
ANR	64093	CompoundStatement		10:4:128:128	64049	1					
ANR	64094	ExpressionStatement	p = ref1	1453:6:39885:39896	64049	0	True				
ANR	64095	AssignmentExpression	p = ref1		64049	0		=			
ANR	64096	Identifier	p		64049	0					
ANR	64097	Identifier	ref1		64049	1					
ANR	64098	ExpressionStatement	ref1 = ref2	1454:6:39904:39915	64049	1	True				
ANR	64099	AssignmentExpression	ref1 = ref2		64049	0		=			
ANR	64100	Identifier	ref1		64049	0					
ANR	64101	Identifier	ref2		64049	1					
ANR	64102	ExpressionStatement	ref2 = p	1455:6:39923:39931	64049	2	True				
ANR	64103	AssignmentExpression	ref2 = p		64049	0		=			
ANR	64104	Identifier	ref2		64049	0					
ANR	64105	Identifier	p		64049	1					
ANR	64106	ExpressionStatement	v1 = ref1 -> v	1458:4:39944:39956	64049	4	True				
ANR	64107	AssignmentExpression	v1 = ref1 -> v		64049	0		=			
ANR	64108	Identifier	v1		64049	0					
ANR	64109	PtrMemberAccess	ref1 -> v		64049	1					
ANR	64110	Identifier	ref1		64049	0					
ANR	64111	Identifier	v		64049	1					
ANR	64112	ExpressionStatement	v2 = ref2 -> v	1459:4:39962:39974	64049	5	True				
ANR	64113	AssignmentExpression	v2 = ref2 -> v		64049	0		=			
ANR	64114	Identifier	v2		64049	0					
ANR	64115	PtrMemberAccess	ref2 -> v		64049	1					
ANR	64116	Identifier	ref2		64049	0					
ANR	64117	Identifier	v		64049	1					
ANR	64118	ExpressionStatement	u1 = ref1 -> u	1460:4:39980:39992	64049	6	True				
ANR	64119	AssignmentExpression	u1 = ref1 -> u		64049	0		=			
ANR	64120	Identifier	u1		64049	0					
ANR	64121	PtrMemberAccess	ref1 -> u		64049	1					
ANR	64122	Identifier	ref1		64049	0					
ANR	64123	Identifier	u		64049	1					
ANR	64124	ExpressionStatement	u2 = ref2 -> u	1461:4:39998:40010	64049	7	True				
ANR	64125	AssignmentExpression	u2 = ref2 -> u		64049	0		=			
ANR	64126	Identifier	u2		64049	0					
ANR	64127	PtrMemberAccess	ref2 -> u		64049	1					
ANR	64128	Identifier	ref2		64049	0					
ANR	64129	Identifier	u		64049	1					
ANR	64130	ExpressionStatement	d1 = u1 - v1	1462:4:40016:40028	64049	8	True				
ANR	64131	AssignmentExpression	d1 = u1 - v1		64049	0		=			
ANR	64132	Identifier	d1		64049	0					
ANR	64133	AdditiveExpression	u1 - v1		64049	1		-			
ANR	64134	Identifier	u1		64049	0					
ANR	64135	Identifier	v1		64049	1					
ANR	64136	ExpressionStatement	d2 = u2 - v2	1463:4:40034:40046	64049	9	True				
ANR	64137	AssignmentExpression	d2 = u2 - v2		64049	0		=			
ANR	64138	Identifier	d2		64049	0					
ANR	64139	AdditiveExpression	u2 - v2		64049	1		-			
ANR	64140	Identifier	u2		64049	0					
ANR	64141	Identifier	v2		64049	1					
ANR	64142	IfStatement	if ( u1 == u2 || v1 == v2 )		64049	10					
ANR	64143	Condition	u1 == u2 || v1 == v2	1465:9:40058:40077	64049	0	True				
ANR	64144	OrExpression	u1 == u2 || v1 == v2		64049	0		||			
ANR	64145	EqualityExpression	u1 == u2		64049	0		==			
ANR	64146	Identifier	u1		64049	0					
ANR	64147	Identifier	u2		64049	1					
ANR	64148	EqualityExpression	v1 == v2		64049	1		==			
ANR	64149	Identifier	v1		64049	0					
ANR	64150	Identifier	v2		64049	1					
ANR	64151	CompoundStatement		24:4:336:336	64049	1					
ANR	64152	ForStatement	for ( p = p1 ; p <= p2 ; p ++ )		64049	0					
ANR	64153	ForInit	p = p1 ;	1467:12:40099:40105	64049	0	True				
ANR	64154	AssignmentExpression	p = p1		64049	0		=			
ANR	64155	Identifier	p		64049	0					
ANR	64156	Identifier	p1		64049	1					
ANR	64157	Condition	p <= p2	1467:20:40107:40113	64049	1	True				
ANR	64158	RelationalExpression	p <= p2		64049	0		<=			
ANR	64159	Identifier	p		64049	0					
ANR	64160	Identifier	p2		64049	1					
ANR	64161	PostIncDecOperationExpression	p ++	1467:29:40116:40118	64049	2	True				
ANR	64162	Identifier	p		64049	0					
ANR	64163	IncDec	++		64049	1					
ANR	64164	CompoundStatement		26:6:379:379	64049	3					
ANR	64165	ExpressionStatement	u = p -> v	1469:8:40138:40146	64049	0	True				
ANR	64166	AssignmentExpression	u = p -> v		64049	0		=			
ANR	64167	Identifier	u		64049	0					
ANR	64168	PtrMemberAccess	p -> v		64049	1					
ANR	64169	Identifier	p		64049	0					
ANR	64170	Identifier	v		64049	1					
ANR	64171	IfStatement	if ( u <= v1 )		64049	1					
ANR	64172	Condition	u <= v1	1471:13:40162:40168	64049	0	True				
ANR	64173	RelationalExpression	u <= v1		64049	0		<=			
ANR	64174	Identifier	u		64049	0					
ANR	64175	Identifier	v1		64049	1					
ANR	64176	ExpressionStatement	u += d1	1472:10:40182:40189	64049	1	True				
ANR	64177	AssignmentExpression	u += d1		64049	0		+=			
ANR	64178	Identifier	u		64049	0					
ANR	64179	Identifier	d1		64049	1					
ANR	64180	ElseStatement	else		64049	0					
ANR	64181	IfStatement	if ( u >= v2 )		64049	0					
ANR	64182	Condition	u >= v2	1473:18:40209:40215	64049	0	True				
ANR	64183	RelationalExpression	u >= v2		64049	0		>=			
ANR	64184	Identifier	u		64049	0					
ANR	64185	Identifier	v2		64049	1					
ANR	64186	ExpressionStatement	u += d2	1474:10:40229:40236	64049	1	True				
ANR	64187	AssignmentExpression	u += d2		64049	0		+=			
ANR	64188	Identifier	u		64049	0					
ANR	64189	Identifier	d2		64049	1					
ANR	64190	ElseStatement	else		64049	0					
ANR	64191	ExpressionStatement	u = u1	1476:10:40261:40267	64049	0	True				
ANR	64192	AssignmentExpression	u = u1		64049	0		=			
ANR	64193	Identifier	u		64049	0					
ANR	64194	Identifier	u1		64049	1					
ANR	64195	ExpressionStatement	p -> u = u	1478:8:40278:40286	64049	2	True				
ANR	64196	AssignmentExpression	p -> u = u		64049	0		=			
ANR	64197	PtrMemberAccess	p -> u		64049	0					
ANR	64198	Identifier	p		64049	0					
ANR	64199	Identifier	u		64049	1					
ANR	64200	Identifier	u		64049	1					
ANR	64201	ElseStatement	else		64049	0					
ANR	64202	CompoundStatement		41:6:574:621	64049	0					
ANR	64203	IdentifierDeclStatement	"FT_Fixed scale = FT_DivFix ( u2 - u1 , v2 - v1 ) ;"	1483:6:40323:40370	64049	0	True				
ANR	64204	IdentifierDecl	"scale = FT_DivFix ( u2 - u1 , v2 - v1 )"		64049	0					
ANR	64205	IdentifierDeclType	FT_Fixed		64049	0					
ANR	64206	Identifier	scale		64049	1					
ANR	64207	AssignmentExpression	"scale = FT_DivFix ( u2 - u1 , v2 - v1 )"		64049	2		=			
ANR	64208	Identifier	scale		64049	0					
ANR	64209	CallExpression	"FT_DivFix ( u2 - u1 , v2 - v1 )"		64049	1					
ANR	64210	Callee	FT_DivFix		64049	0					
ANR	64211	Identifier	FT_DivFix		64049	0					
ANR	64212	ArgumentList	u2 - u1		64049	1					
ANR	64213	Argument	u2 - u1		64049	0					
ANR	64214	AdditiveExpression	u2 - u1		64049	0		-			
ANR	64215	Identifier	u2		64049	0					
ANR	64216	Identifier	u1		64049	1					
ANR	64217	Argument	v2 - v1		64049	1					
ANR	64218	AdditiveExpression	v2 - v1		64049	0		-			
ANR	64219	Identifier	v2		64049	0					
ANR	64220	Identifier	v1		64049	1					
ANR	64221	ForStatement	for ( p = p1 ; p <= p2 ; p ++ )		64049	1					
ANR	64222	ForInit	p = p1 ;	1486:12:40386:40392	64049	0	True				
ANR	64223	AssignmentExpression	p = p1		64049	0		=			
ANR	64224	Identifier	p		64049	0					
ANR	64225	Identifier	p1		64049	1					
ANR	64226	Condition	p <= p2	1486:20:40394:40400	64049	1	True				
ANR	64227	RelationalExpression	p <= p2		64049	0		<=			
ANR	64228	Identifier	p		64049	0					
ANR	64229	Identifier	p2		64049	1					
ANR	64230	PostIncDecOperationExpression	p ++	1486:29:40403:40405	64049	2	True				
ANR	64231	Identifier	p		64049	0					
ANR	64232	IncDec	++		64049	1					
ANR	64233	CompoundStatement		45:6:666:666	64049	3					
ANR	64234	ExpressionStatement	u = p -> v	1488:8:40425:40433	64049	0	True				
ANR	64235	AssignmentExpression	u = p -> v		64049	0		=			
ANR	64236	Identifier	u		64049	0					
ANR	64237	PtrMemberAccess	p -> v		64049	1					
ANR	64238	Identifier	p		64049	0					
ANR	64239	Identifier	v		64049	1					
ANR	64240	IfStatement	if ( u <= v1 )		64049	1					
ANR	64241	Condition	u <= v1	1490:13:40449:40455	64049	0	True				
ANR	64242	RelationalExpression	u <= v1		64049	0		<=			
ANR	64243	Identifier	u		64049	0					
ANR	64244	Identifier	v1		64049	1					
ANR	64245	ExpressionStatement	u += d1	1491:10:40469:40476	64049	1	True				
ANR	64246	AssignmentExpression	u += d1		64049	0		+=			
ANR	64247	Identifier	u		64049	0					
ANR	64248	Identifier	d1		64049	1					
ANR	64249	ElseStatement	else		64049	0					
ANR	64250	IfStatement	if ( u >= v2 )		64049	0					
ANR	64251	Condition	u >= v2	1492:18:40496:40502	64049	0	True				
ANR	64252	RelationalExpression	u >= v2		64049	0		>=			
ANR	64253	Identifier	u		64049	0					
ANR	64254	Identifier	v2		64049	1					
ANR	64255	ExpressionStatement	u += d2	1493:10:40516:40523	64049	1	True				
ANR	64256	AssignmentExpression	u += d2		64049	0		+=			
ANR	64257	Identifier	u		64049	0					
ANR	64258	Identifier	d2		64049	1					
ANR	64259	ElseStatement	else		64049	0					
ANR	64260	ExpressionStatement	"u = u1 + FT_MulFix ( u - v1 , scale )"	1495:10:40548:40583	64049	0	True				
ANR	64261	AssignmentExpression	"u = u1 + FT_MulFix ( u - v1 , scale )"		64049	0		=			
ANR	64262	Identifier	u		64049	0					
ANR	64263	AdditiveExpression	"u1 + FT_MulFix ( u - v1 , scale )"		64049	1		+			
ANR	64264	Identifier	u1		64049	0					
ANR	64265	CallExpression	"FT_MulFix ( u - v1 , scale )"		64049	1					
ANR	64266	Callee	FT_MulFix		64049	0					
ANR	64267	Identifier	FT_MulFix		64049	0					
ANR	64268	ArgumentList	u - v1		64049	1					
ANR	64269	Argument	u - v1		64049	0					
ANR	64270	AdditiveExpression	u - v1		64049	0		-			
ANR	64271	Identifier	u		64049	0					
ANR	64272	Identifier	v1		64049	1					
ANR	64273	Argument	scale		64049	1					
ANR	64274	Identifier	scale		64049	0					
ANR	64275	ExpressionStatement	p -> u = u	1497:8:40594:40602	64049	2	True				
ANR	64276	AssignmentExpression	p -> u = u		64049	0		=			
ANR	64277	PtrMemberAccess	p -> u		64049	0					
ANR	64278	Identifier	p		64049	0					
ANR	64279	Identifier	u		64049	1					
ANR	64280	Identifier	u		64049	1					
ANR	64281	ReturnType	static void		64049	1					
ANR	64282	Identifier	af_iup_interp		64049	2					
ANR	64283	ParameterList	"AF_Point p1 , AF_Point p2 , AF_Point ref1 , AF_Point ref2"		64049	3					
ANR	64284	Parameter	AF_Point p1	1439:17:39634:39645	64049	0	True				
ANR	64285	ParameterType	AF_Point		64049	0					
ANR	64286	Identifier	p1		64049	1					
ANR	64287	Parameter	AF_Point p2	1440:17:39665:39676	64049	1	True				
ANR	64288	ParameterType	AF_Point		64049	0					
ANR	64289	Identifier	p2		64049	1					
ANR	64290	Parameter	AF_Point ref1	1441:17:39696:39709	64049	2	True				
ANR	64291	ParameterType	AF_Point		64049	0					
ANR	64292	Identifier	ref1		64049	1					
ANR	64293	Parameter	AF_Point ref2	1442:17:39729:39742	64049	3	True				
ANR	64294	ParameterType	AF_Point		64049	0					
ANR	64295	Identifier	ref2		64049	1					
ANR	64296	CFGEntryNode	ENTRY		64049		True				
ANR	64297	CFGExitNode	EXIT		64049		True				
ANR	64298	Symbol	p -> v		64049						
ANR	64299	Symbol	p1		64049						
ANR	64300	Symbol	p -> u		64049						
ANR	64301	Symbol	p2		64049						
ANR	64302	Symbol	FT_DivFix		64049						
ANR	64303	Symbol	ref1 -> v		64049						
ANR	64304	Symbol	ref1 -> u		64049						
ANR	64305	Symbol	scale		64049						
ANR	64306	Symbol	ref2		64049						
ANR	64307	Symbol	ref1		64049						
ANR	64308	Symbol	d1		64049						
ANR	64309	Symbol	d2		64049						
ANR	64310	Symbol	p		64049						
ANR	64311	Symbol	ref2 -> u		64049						
ANR	64312	Symbol	FT_MulFix		64049						
ANR	64313	Symbol	u		64049						
ANR	64314	Symbol	* ref2		64049						
ANR	64315	Symbol	* ref1		64049						
ANR	64316	Symbol	* p		64049						
ANR	64317	Symbol	v1		64049						
ANR	64318	Symbol	v2		64049						
ANR	64319	Symbol	u1		64049						
ANR	64320	Symbol	u2		64049						
ANR	64321	Symbol	ref2 -> v		64049						
ANR	64322	Function	af_glyph_hints_align_weak_points	1507:2:40796:43806							
ANR	64323	FunctionDef	"af_glyph_hints_align_weak_points (AF_GlyphHints hints , AF_Dimension dim)"		64322	0					
ANR	64324	CompoundStatement		1509:2:40911:43806	64322	0					
ANR	64325	IdentifierDeclStatement	AF_Point points = hints -> points ;	1510:4:40917:40957	64322	0	True				
ANR	64326	IdentifierDecl	points = hints -> points		64322	0					
ANR	64327	IdentifierDeclType	AF_Point		64322	0					
ANR	64328	Identifier	points		64322	1					
ANR	64329	AssignmentExpression	points = hints -> points		64322	2		=			
ANR	64330	Identifier	points		64322	0					
ANR	64331	PtrMemberAccess	hints -> points		64322	1					
ANR	64332	Identifier	hints		64322	0					
ANR	64333	Identifier	points		64322	1					
ANR	64334	IdentifierDeclStatement	AF_Point point_limit = points + hints -> num_points ;	1511:4:40963:41016	64322	1	True				
ANR	64335	IdentifierDecl	point_limit = points + hints -> num_points		64322	0					
ANR	64336	IdentifierDeclType	AF_Point		64322	0					
ANR	64337	Identifier	point_limit		64322	1					
ANR	64338	AssignmentExpression	point_limit = points + hints -> num_points		64322	2		=			
ANR	64339	Identifier	point_limit		64322	0					
ANR	64340	AdditiveExpression	points + hints -> num_points		64322	1		+			
ANR	64341	Identifier	points		64322	0					
ANR	64342	PtrMemberAccess	hints -> num_points		64322	1					
ANR	64343	Identifier	hints		64322	0					
ANR	64344	Identifier	num_points		64322	1					
ANR	64345	IdentifierDeclStatement	AF_Point * contour = hints -> contours ;	1512:4:41022:41064	64322	2	True				
ANR	64346	IdentifierDecl	* contour = hints -> contours		64322	0					
ANR	64347	IdentifierDeclType	AF_Point *		64322	0					
ANR	64348	Identifier	contour		64322	1					
ANR	64349	AssignmentExpression	* contour = hints -> contours		64322	2		=			
ANR	64350	Identifier	contour		64322	0					
ANR	64351	PtrMemberAccess	hints -> contours		64322	1					
ANR	64352	Identifier	hints		64322	0					
ANR	64353	Identifier	contours		64322	1					
ANR	64354	IdentifierDeclStatement	AF_Point * contour_limit = contour + hints -> num_contours ;	1513:4:41070:41126	64322	3	True				
ANR	64355	IdentifierDecl	* contour_limit = contour + hints -> num_contours		64322	0					
ANR	64356	IdentifierDeclType	AF_Point *		64322	0					
ANR	64357	Identifier	contour_limit		64322	1					
ANR	64358	AssignmentExpression	* contour_limit = contour + hints -> num_contours		64322	2		=			
ANR	64359	Identifier	contour_limit		64322	0					
ANR	64360	AdditiveExpression	contour + hints -> num_contours		64322	1		+			
ANR	64361	Identifier	contour		64322	0					
ANR	64362	PtrMemberAccess	hints -> num_contours		64322	1					
ANR	64363	Identifier	hints		64322	0					
ANR	64364	Identifier	num_contours		64322	1					
ANR	64365	IdentifierDeclStatement	FT_UInt touch_flag ;	1514:4:41132:41153	64322	4	True				
ANR	64366	IdentifierDecl	touch_flag		64322	0					
ANR	64367	IdentifierDeclType	FT_UInt		64322	0					
ANR	64368	Identifier	touch_flag		64322	1					
ANR	64369	IdentifierDeclStatement	AF_Point point ;	1515:4:41159:41175	64322	5	True				
ANR	64370	IdentifierDecl	point		64322	0					
ANR	64371	IdentifierDeclType	AF_Point		64322	0					
ANR	64372	Identifier	point		64322	1					
ANR	64373	IdentifierDeclStatement	AF_Point end_point ;	1516:4:41181:41201	64322	6	True				
ANR	64374	IdentifierDecl	end_point		64322	0					
ANR	64375	IdentifierDeclType	AF_Point		64322	0					
ANR	64376	Identifier	end_point		64322	1					
ANR	64377	IdentifierDeclStatement	AF_Point first_point ;	1517:4:41207:41229	64322	7	True				
ANR	64378	IdentifierDecl	first_point		64322	0					
ANR	64379	IdentifierDeclType	AF_Point		64322	0					
ANR	64380	Identifier	first_point		64322	1					
ANR	64381	IfStatement	if ( dim == AF_DIMENSION_HORZ )		64322	8					
ANR	64382	Condition	dim == AF_DIMENSION_HORZ	1522:9:41299:41322	64322	0	True				
ANR	64383	EqualityExpression	dim == AF_DIMENSION_HORZ		64322	0		==			
ANR	64384	Identifier	dim		64322	0					
ANR	64385	Identifier	AF_DIMENSION_HORZ		64322	1					
ANR	64386	CompoundStatement		15:4:418:418	64322	1					
ANR	64387	ExpressionStatement	touch_flag = AF_FLAG_TOUCH_X	1524:6:41338:41366	64322	0	True				
ANR	64388	AssignmentExpression	touch_flag = AF_FLAG_TOUCH_X		64322	0		=			
ANR	64389	Identifier	touch_flag		64322	0					
ANR	64390	Identifier	AF_FLAG_TOUCH_X		64322	1					
ANR	64391	ForStatement	for ( point = points ; point < point_limit ; point ++ )		64322	1					
ANR	64392	ForInit	point = points ;	1526:12:41381:41395	64322	0	True				
ANR	64393	AssignmentExpression	point = points		64322	0		=			
ANR	64394	Identifier	point		64322	0					
ANR	64395	Identifier	points		64322	1					
ANR	64396	Condition	point < point_limit	1526:28:41397:41415	64322	1	True				
ANR	64397	RelationalExpression	point < point_limit		64322	0		<			
ANR	64398	Identifier	point		64322	0					
ANR	64399	Identifier	point_limit		64322	1					
ANR	64400	PostIncDecOperationExpression	point ++	1526:49:41418:41424	64322	2	True				
ANR	64401	Identifier	point		64322	0					
ANR	64402	IncDec	++		64322	1					
ANR	64403	CompoundStatement		19:6:522:522	64322	3					
ANR	64404	ExpressionStatement	point -> u = point -> x	1528:8:41444:41463	64322	0	True				
ANR	64405	AssignmentExpression	point -> u = point -> x		64322	0		=			
ANR	64406	PtrMemberAccess	point -> u		64322	0					
ANR	64407	Identifier	point		64322	0					
ANR	64408	Identifier	u		64322	1					
ANR	64409	PtrMemberAccess	point -> x		64322	1					
ANR	64410	Identifier	point		64322	0					
ANR	64411	Identifier	x		64322	1					
ANR	64412	ExpressionStatement	point -> v = point -> ox	1529:8:41473:41493	64322	1	True				
ANR	64413	AssignmentExpression	point -> v = point -> ox		64322	0		=			
ANR	64414	PtrMemberAccess	point -> v		64322	0					
ANR	64415	Identifier	point		64322	0					
ANR	64416	Identifier	v		64322	1					
ANR	64417	PtrMemberAccess	point -> ox		64322	1					
ANR	64418	Identifier	point		64322	0					
ANR	64419	Identifier	ox		64322	1					
ANR	64420	ElseStatement	else		64322	0					
ANR	64421	CompoundStatement		25:4:610:610	64322	0					
ANR	64422	ExpressionStatement	touch_flag = AF_FLAG_TOUCH_Y	1534:6:41530:41558	64322	0	True				
ANR	64423	AssignmentExpression	touch_flag = AF_FLAG_TOUCH_Y		64322	0		=			
ANR	64424	Identifier	touch_flag		64322	0					
ANR	64425	Identifier	AF_FLAG_TOUCH_Y		64322	1					
ANR	64426	ForStatement	for ( point = points ; point < point_limit ; point ++ )		64322	1					
ANR	64427	ForInit	point = points ;	1536:12:41573:41587	64322	0	True				
ANR	64428	AssignmentExpression	point = points		64322	0		=			
ANR	64429	Identifier	point		64322	0					
ANR	64430	Identifier	points		64322	1					
ANR	64431	Condition	point < point_limit	1536:28:41589:41607	64322	1	True				
ANR	64432	RelationalExpression	point < point_limit		64322	0		<			
ANR	64433	Identifier	point		64322	0					
ANR	64434	Identifier	point_limit		64322	1					
ANR	64435	PostIncDecOperationExpression	point ++	1536:49:41610:41616	64322	2	True				
ANR	64436	Identifier	point		64322	0					
ANR	64437	IncDec	++		64322	1					
ANR	64438	CompoundStatement		29:6:714:714	64322	3					
ANR	64439	ExpressionStatement	point -> u = point -> y	1538:8:41636:41655	64322	0	True				
ANR	64440	AssignmentExpression	point -> u = point -> y		64322	0		=			
ANR	64441	PtrMemberAccess	point -> u		64322	0					
ANR	64442	Identifier	point		64322	0					
ANR	64443	Identifier	u		64322	1					
ANR	64444	PtrMemberAccess	point -> y		64322	1					
ANR	64445	Identifier	point		64322	0					
ANR	64446	Identifier	y		64322	1					
ANR	64447	ExpressionStatement	point -> v = point -> oy	1539:8:41665:41685	64322	1	True				
ANR	64448	AssignmentExpression	point -> v = point -> oy		64322	0		=			
ANR	64449	PtrMemberAccess	point -> v		64322	0					
ANR	64450	Identifier	point		64322	0					
ANR	64451	Identifier	v		64322	1					
ANR	64452	PtrMemberAccess	point -> oy		64322	1					
ANR	64453	Identifier	point		64322	0					
ANR	64454	Identifier	oy		64322	1					
ANR	64455	ForStatement	for ( ; contour < contour_limit ; contour ++ )		64322	9					
ANR	64456	Condition	contour < contour_limit	1543:12:41714:41736	64322	0	True				
ANR	64457	RelationalExpression	contour < contour_limit		64322	0		<			
ANR	64458	Identifier	contour		64322	0					
ANR	64459	Identifier	contour_limit		64322	1					
ANR	64460	PostIncDecOperationExpression	contour ++	1543:37:41739:41747	64322	1	True				
ANR	64461	Identifier	contour		64322	0					
ANR	64462	IncDec	++		64322	1					
ANR	64463	CompoundStatement		37:6:851:888	64322	2					
ANR	64464	IdentifierDeclStatement	"AF_Point first_touched , last_touched ;"	1545:6:41763:41800	64322	0	True				
ANR	64465	IdentifierDecl	first_touched		64322	0					
ANR	64466	IdentifierDeclType	AF_Point		64322	0					
ANR	64467	Identifier	first_touched		64322	1					
ANR	64468	IdentifierDecl	last_touched		64322	1					
ANR	64469	IdentifierDeclType	AF_Point		64322	0					
ANR	64470	Identifier	last_touched		64322	1					
ANR	64471	ExpressionStatement	point = * contour	1548:6:41810:41832	64322	1	True				
ANR	64472	AssignmentExpression	point = * contour		64322	0		=			
ANR	64473	Identifier	point		64322	0					
ANR	64474	UnaryOperationExpression	* contour		64322	1					
ANR	64475	UnaryOperator	*		64322	0					
ANR	64476	Identifier	contour		64322	1					
ANR	64477	ExpressionStatement	end_point = point -> prev	1549:6:41840:41865	64322	2	True				
ANR	64478	AssignmentExpression	end_point = point -> prev		64322	0		=			
ANR	64479	Identifier	end_point		64322	0					
ANR	64480	PtrMemberAccess	point -> prev		64322	1					
ANR	64481	Identifier	point		64322	0					
ANR	64482	Identifier	prev		64322	1					
ANR	64483	ExpressionStatement	first_point = point	1550:6:41873:41892	64322	3	True				
ANR	64484	AssignmentExpression	first_point = point		64322	0		=			
ANR	64485	Identifier	first_point		64322	0					
ANR	64486	Identifier	point		64322	1					
ANR	64487	ForStatement	for ( ; ; )		64322	4					
ANR	64488	CompoundStatement		46:6:1041:1041	64322	0					
ANR	64489	IfStatement	if ( point > end_point )		64322	0					
ANR	64490	Condition	point > end_point	1555:13:41968:41984	64322	0	True				
ANR	64491	RelationalExpression	point > end_point		64322	0		>			
ANR	64492	Identifier	point		64322	0					
ANR	64493	Identifier	end_point		64322	1					
ANR	64494	GotoStatement	goto NextContour ;	1556:10:42033:42049	64322	1	True				
ANR	64495	Identifier	NextContour		64322	0					
ANR	64496	IfStatement	if ( point -> flags & touch_flag )		64322	1					
ANR	64497	Condition	point -> flags & touch_flag	1558:13:42065:42089	64322	0	True				
ANR	64498	BitAndExpression	point -> flags & touch_flag		64322	0		&			
ANR	64499	PtrMemberAccess	point -> flags		64322	0					
ANR	64500	Identifier	point		64322	0					
ANR	64501	Identifier	flags		64322	1					
ANR	64502	Identifier	touch_flag		64322	1					
ANR	64503	BreakStatement	break ;	1559:10:42103:42108	64322	1	True				
ANR	64504	ExpressionStatement	point ++	1561:8:42119:42126	64322	2	True				
ANR	64505	PostIncDecOperationExpression	point ++		64322	0					
ANR	64506	Identifier	point		64322	0					
ANR	64507	IncDec	++		64322	1					
ANR	64508	ExpressionStatement	first_touched = point	1564:6:42143:42164	64322	5	True				
ANR	64509	AssignmentExpression	first_touched = point		64322	0		=			
ANR	64510	Identifier	first_touched		64322	0					
ANR	64511	Identifier	point		64322	1					
ANR	64512	ForStatement	for ( ; ; )		64322	6					
ANR	64513	CompoundStatement		59:6:1276:1276	64322	0					
ANR	64514	ExpressionStatement	FT_ASSERT ( point <= end_point && ( point -> flags & touch_flag ) != 0 )	1568:8:42198:42302	64322	0	True				
ANR	64515	CallExpression	FT_ASSERT ( point <= end_point && ( point -> flags & touch_flag ) != 0 )		64322	0					
ANR	64516	Callee	FT_ASSERT		64322	0					
ANR	64517	Identifier	FT_ASSERT		64322	0					
ANR	64518	ArgumentList	point <= end_point && ( point -> flags & touch_flag ) != 0		64322	1					
ANR	64519	Argument	point <= end_point && ( point -> flags & touch_flag ) != 0		64322	0					
ANR	64520	AndExpression	point <= end_point && ( point -> flags & touch_flag ) != 0		64322	0		&&			
ANR	64521	RelationalExpression	point <= end_point		64322	0		<=			
ANR	64522	Identifier	point		64322	0					
ANR	64523	Identifier	end_point		64322	1					
ANR	64524	EqualityExpression	( point -> flags & touch_flag ) != 0		64322	1		!=			
ANR	64525	BitAndExpression	point -> flags & touch_flag		64322	0		&			
ANR	64526	PtrMemberAccess	point -> flags		64322	0					
ANR	64527	Identifier	point		64322	0					
ANR	64528	Identifier	flags		64322	1					
ANR	64529	Identifier	touch_flag		64322	1					
ANR	64530	PrimaryExpression	0		64322	1					
ANR	64531	WhileStatement	while ( point < end_point && ( point [ 1 ] . flags & touch_flag ) != 0 )		64322	1					
ANR	64532	Condition	point < end_point && ( point [ 1 ] . flags & touch_flag ) != 0	1572:16:42363:42454	64322	0	True				
ANR	64533	AndExpression	point < end_point && ( point [ 1 ] . flags & touch_flag ) != 0		64322	0		&&			
ANR	64534	RelationalExpression	point < end_point		64322	0		<			
ANR	64535	Identifier	point		64322	0					
ANR	64536	Identifier	end_point		64322	1					
ANR	64537	EqualityExpression	( point [ 1 ] . flags & touch_flag ) != 0		64322	1		!=			
ANR	64538	BitAndExpression	point [ 1 ] . flags & touch_flag		64322	0		&			
ANR	64539	MemberAccess	point [ 1 ] . flags		64322	0					
ANR	64540	ArrayIndexing	point [ 1 ]		64322	0					
ANR	64541	Identifier	point		64322	0					
ANR	64542	PrimaryExpression	1		64322	1					
ANR	64543	Identifier	flags		64322	1					
ANR	64544	Identifier	touch_flag		64322	1					
ANR	64545	PrimaryExpression	0		64322	1					
ANR	64546	ExpressionStatement	point ++	1574:10:42468:42475	64322	1	True				
ANR	64547	PostIncDecOperationExpression	point ++		64322	0					
ANR	64548	Identifier	point		64322	0					
ANR	64549	IncDec	++		64322	1					
ANR	64550	ExpressionStatement	last_touched = point	1576:8:42486:42506	64322	2	True				
ANR	64551	AssignmentExpression	last_touched = point		64322	0		=			
ANR	64552	Identifier	last_touched		64322	0					
ANR	64553	Identifier	point		64322	1					
ANR	64554	ExpressionStatement	point ++	1579:8:42567:42574	64322	3	True				
ANR	64555	PostIncDecOperationExpression	point ++		64322	0					
ANR	64556	Identifier	point		64322	0					
ANR	64557	IncDec	++		64322	1					
ANR	64558	ForStatement	for ( ; ; )		64322	4					
ANR	64559	CompoundStatement		73:8:1689:1689	64322	0					
ANR	64560	IfStatement	if ( point > end_point )		64322	0					
ANR	64561	Condition	point > end_point	1582:15:42618:42634	64322	0	True				
ANR	64562	RelationalExpression	point > end_point		64322	0		>			
ANR	64563	Identifier	point		64322	0					
ANR	64564	Identifier	end_point		64322	1					
ANR	64565	GotoStatement	goto EndContour ;	1583:12:42650:42665	64322	1	True				
ANR	64566	Identifier	EndContour		64322	0					
ANR	64567	IfStatement	if ( ( point -> flags & touch_flag ) != 0 )		64322	1					
ANR	64568	Condition	( point -> flags & touch_flag ) != 0	1585:15:42683:42716	64322	0	True				
ANR	64569	EqualityExpression	( point -> flags & touch_flag ) != 0		64322	0		!=			
ANR	64570	BitAndExpression	point -> flags & touch_flag		64322	0		&			
ANR	64571	PtrMemberAccess	point -> flags		64322	0					
ANR	64572	Identifier	point		64322	0					
ANR	64573	Identifier	flags		64322	1					
ANR	64574	Identifier	touch_flag		64322	1					
ANR	64575	PrimaryExpression	0		64322	1					
ANR	64576	BreakStatement	break ;	1586:12:42732:42737	64322	1	True				
ANR	64577	ExpressionStatement	point ++	1588:10:42750:42757	64322	2	True				
ANR	64578	PostIncDecOperationExpression	point ++		64322	0					
ANR	64579	Identifier	point		64322	0					
ANR	64580	IncDec	++		64322	1					
ANR	64581	ExpressionStatement	"af_iup_interp ( last_touched + 1 , point - 1 , last_touched , point )"	1592:8:42835:42923	64322	5	True				
ANR	64582	CallExpression	"af_iup_interp ( last_touched + 1 , point - 1 , last_touched , point )"		64322	0					
ANR	64583	Callee	af_iup_interp		64322	0					
ANR	64584	Identifier	af_iup_interp		64322	0					
ANR	64585	ArgumentList	last_touched + 1		64322	1					
ANR	64586	Argument	last_touched + 1		64322	0					
ANR	64587	AdditiveExpression	last_touched + 1		64322	0		+			
ANR	64588	Identifier	last_touched		64322	0					
ANR	64589	PrimaryExpression	1		64322	1					
ANR	64590	Argument	point - 1		64322	1					
ANR	64591	AdditiveExpression	point - 1		64322	0		-			
ANR	64592	Identifier	point		64322	0					
ANR	64593	PrimaryExpression	1		64322	1					
ANR	64594	Argument	last_touched		64322	2					
ANR	64595	Identifier	last_touched		64322	0					
ANR	64596	Argument	point		64322	3					
ANR	64597	Identifier	point		64322	0					
ANR	64598	Label	EndContour :	1596:4:42938:42948	64322	7	True				
ANR	64599	Identifier	EndContour		64322	0					
ANR	64600	IfStatement	if ( last_touched == first_touched )		64322	8					
ANR	64601	Condition	last_touched == first_touched	1598:11:43014:43042	64322	0	True				
ANR	64602	EqualityExpression	last_touched == first_touched		64322	0		==			
ANR	64603	Identifier	last_touched		64322	0					
ANR	64604	Identifier	first_touched		64322	1					
ANR	64605	ExpressionStatement	"af_iup_shift ( first_point , end_point , first_touched )"	1599:8:43054:43107	64322	1	True				
ANR	64606	CallExpression	"af_iup_shift ( first_point , end_point , first_touched )"		64322	0					
ANR	64607	Callee	af_iup_shift		64322	0					
ANR	64608	Identifier	af_iup_shift		64322	0					
ANR	64609	ArgumentList	first_point		64322	1					
ANR	64610	Argument	first_point		64322	0					
ANR	64611	Identifier	first_point		64322	0					
ANR	64612	Argument	end_point		64322	1					
ANR	64613	Identifier	end_point		64322	0					
ANR	64614	Argument	first_touched		64322	2					
ANR	64615	Identifier	first_touched		64322	0					
ANR	64616	ElseStatement	else		64322	0					
ANR	64617	CompoundStatement		94:6:2247:2247	64322	0					
ANR	64618	IfStatement	if ( last_touched < end_point )		64322	0					
ANR	64619	Condition	last_touched < end_point	1603:13:43174:43197	64322	0	True				
ANR	64620	RelationalExpression	last_touched < end_point		64322	0		<			
ANR	64621	Identifier	last_touched		64322	0					
ANR	64622	Identifier	end_point		64322	1					
ANR	64623	ExpressionStatement	"af_iup_interp ( last_touched + 1 , end_point , last_touched , first_touched )"	1604:10:43211:43309	64322	1	True				
ANR	64624	CallExpression	"af_iup_interp ( last_touched + 1 , end_point , last_touched , first_touched )"		64322	0					
ANR	64625	Callee	af_iup_interp		64322	0					
ANR	64626	Identifier	af_iup_interp		64322	0					
ANR	64627	ArgumentList	last_touched + 1		64322	1					
ANR	64628	Argument	last_touched + 1		64322	0					
ANR	64629	AdditiveExpression	last_touched + 1		64322	0		+			
ANR	64630	Identifier	last_touched		64322	0					
ANR	64631	PrimaryExpression	1		64322	1					
ANR	64632	Argument	end_point		64322	1					
ANR	64633	Identifier	end_point		64322	0					
ANR	64634	Argument	last_touched		64322	2					
ANR	64635	Identifier	last_touched		64322	0					
ANR	64636	Argument	first_touched		64322	3					
ANR	64637	Identifier	first_touched		64322	0					
ANR	64638	IfStatement	if ( first_touched > points )		64322	1					
ANR	64639	Condition	first_touched > points	1607:13:43325:43346	64322	0	True				
ANR	64640	RelationalExpression	first_touched > points		64322	0		>			
ANR	64641	Identifier	first_touched		64322	0					
ANR	64642	Identifier	points		64322	1					
ANR	64643	ExpressionStatement	"af_iup_interp ( first_point , first_touched - 1 , last_touched , first_touched )"	1608:10:43360:43461	64322	1	True				
ANR	64644	CallExpression	"af_iup_interp ( first_point , first_touched - 1 , last_touched , first_touched )"		64322	0					
ANR	64645	Callee	af_iup_interp		64322	0					
ANR	64646	Identifier	af_iup_interp		64322	0					
ANR	64647	ArgumentList	first_point		64322	1					
ANR	64648	Argument	first_point		64322	0					
ANR	64649	Identifier	first_point		64322	0					
ANR	64650	Argument	first_touched - 1		64322	1					
ANR	64651	AdditiveExpression	first_touched - 1		64322	0		-			
ANR	64652	Identifier	first_touched		64322	0					
ANR	64653	PrimaryExpression	1		64322	1					
ANR	64654	Argument	last_touched		64322	2					
ANR	64655	Identifier	last_touched		64322	0					
ANR	64656	Argument	first_touched		64322	3					
ANR	64657	Identifier	first_touched		64322	0					
ANR	64658	Label	NextContour :	1612:4:43476:43487	64322	9	True				
ANR	64659	Identifier	NextContour		64322	0					
ANR	64660	ExpressionStatement		1613:6:43495:43495	64322	10	True				
ANR	64661	IfStatement	if ( dim == AF_DIMENSION_HORZ )		64322	10					
ANR	64662	Condition	dim == AF_DIMENSION_HORZ	1617:9:43568:43591	64322	0	True				
ANR	64663	EqualityExpression	dim == AF_DIMENSION_HORZ		64322	0		==			
ANR	64664	Identifier	dim		64322	0					
ANR	64665	Identifier	AF_DIMENSION_HORZ		64322	1					
ANR	64666	CompoundStatement		110:4:2687:2687	64322	1					
ANR	64667	ForStatement	for ( point = points ; point < point_limit ; point ++ )		64322	0					
ANR	64668	ForInit	point = points ;	1619:12:43613:43627	64322	0	True				
ANR	64669	AssignmentExpression	point = points		64322	0		=			
ANR	64670	Identifier	point		64322	0					
ANR	64671	Identifier	points		64322	1					
ANR	64672	Condition	point < point_limit	1619:28:43629:43647	64322	1	True				
ANR	64673	RelationalExpression	point < point_limit		64322	0		<			
ANR	64674	Identifier	point		64322	0					
ANR	64675	Identifier	point_limit		64322	1					
ANR	64676	PostIncDecOperationExpression	point ++	1619:49:43650:43656	64322	2	True				
ANR	64677	Identifier	point		64322	0					
ANR	64678	IncDec	++		64322	1					
ANR	64679	ExpressionStatement	point -> x = point -> u	1620:8:43668:43687	64322	3	True				
ANR	64680	AssignmentExpression	point -> x = point -> u		64322	0		=			
ANR	64681	PtrMemberAccess	point -> x		64322	0					
ANR	64682	Identifier	point		64322	0					
ANR	64683	Identifier	x		64322	1					
ANR	64684	PtrMemberAccess	point -> u		64322	1					
ANR	64685	Identifier	point		64322	0					
ANR	64686	Identifier	u		64322	1					
ANR	64687	ElseStatement	else		64322	0					
ANR	64688	CompoundStatement		115:4:2796:2796	64322	0					
ANR	64689	ForStatement	for ( point = points ; point < point_limit ; point ++ )		64322	0					
ANR	64690	ForInit	point = points ;	1624:12:43722:43736	64322	0	True				
ANR	64691	AssignmentExpression	point = points		64322	0		=			
ANR	64692	Identifier	point		64322	0					
ANR	64693	Identifier	points		64322	1					
ANR	64694	Condition	point < point_limit	1624:28:43738:43756	64322	1	True				
ANR	64695	RelationalExpression	point < point_limit		64322	0		<			
ANR	64696	Identifier	point		64322	0					
ANR	64697	Identifier	point_limit		64322	1					
ANR	64698	PostIncDecOperationExpression	point ++	1624:49:43759:43765	64322	2	True				
ANR	64699	Identifier	point		64322	0					
ANR	64700	IncDec	++		64322	1					
ANR	64701	ExpressionStatement	point -> y = point -> u	1625:8:43777:43796	64322	3	True				
ANR	64702	AssignmentExpression	point -> y = point -> u		64322	0		=			
ANR	64703	PtrMemberAccess	point -> y		64322	0					
ANR	64704	Identifier	point		64322	0					
ANR	64705	Identifier	y		64322	1					
ANR	64706	PtrMemberAccess	point -> u		64322	1					
ANR	64707	Identifier	point		64322	0					
ANR	64708	Identifier	u		64322	1					
ANR	64709	Identifier	af_glyph_hints_align_weak_points		64322	1					
ANR	64710	ParameterList	"AF_GlyphHints hints , AF_Dimension dim"		64322	2					
ANR	64711	Parameter	AF_GlyphHints hints	1507:36:40830:40849	64322	0	True				
ANR	64712	ParameterType	AF_GlyphHints		64322	0					
ANR	64713	Identifier	hints		64322	1					
ANR	64714	Parameter	AF_Dimension dim	1508:36:40888:40905	64322	1	True				
ANR	64715	ParameterType	AF_Dimension		64322	0					
ANR	64716	Identifier	dim		64322	1					
ANR	64717	CFGEntryNode	ENTRY		64322		True				
ANR	64718	CFGExitNode	EXIT		64322		True				
ANR	64719	InfiniteForNode	true		64322		True				
ANR	64720	InfiniteForNode	true		64322		True				
ANR	64721	InfiniteForNode	true		64322		True				
ANR	64722	Symbol	end_point		64322						
ANR	64723	Symbol	point_limit		64322						
ANR	64724	Symbol	dim		64322						
ANR	64725	Symbol	AF_FLAG_TOUCH_Y		64322						
ANR	64726	Symbol	hints -> points		64322						
ANR	64727	Symbol	point		64322						
ANR	64728	Symbol	points		64322						
ANR	64729	Symbol	contour_limit		64322						
ANR	64730	Symbol	AF_DIMENSION_HORZ		64322						
ANR	64731	Symbol	hints -> num_points		64322						
ANR	64732	Symbol	point -> oy		64322						
ANR	64733	Symbol	point -> ox		64322						
ANR	64734	Symbol	first_touched		64322						
ANR	64735	Symbol	point [ 1 ] . flags		64322						
ANR	64736	Symbol	* hints		64322						
ANR	64737	Symbol	touch_flag		64322						
ANR	64738	Symbol	* point		64322						
ANR	64739	Symbol	hints		64322						
ANR	64740	Symbol	point -> prev		64322						
ANR	64741	Symbol	contour		64322						
ANR	64742	Symbol	first_point		64322						
ANR	64743	Symbol	hints -> num_contours		64322						
ANR	64744	Symbol	last_touched		64322						
ANR	64745	Symbol	* contour		64322						
ANR	64746	Symbol	AF_FLAG_TOUCH_X		64322						
ANR	64747	Symbol	point -> u		64322						
ANR	64748	Symbol	point -> v		64322						
ANR	64749	Symbol	hints -> contours		64322						
ANR	64750	Symbol	point -> x		64322						
ANR	64751	Symbol	point -> flags		64322						
ANR	64752	Symbol	point -> y		64322						
ANR	64753	Function	af_glyph_hints_scale_dim	1635:2:43941:44573							
ANR	64754	FunctionDef	"af_glyph_hints_scale_dim (AF_GlyphHints hints , AF_Dimension dim , FT_Fixed scale , FT_Pos delta)"		64753	0					
ANR	64755	CompoundStatement		1639:2:44140:44573	64753	0					
ANR	64756	IdentifierDeclStatement	AF_Point points = hints -> points ;	1640:4:44146:44184	64753	0	True				
ANR	64757	IdentifierDecl	points = hints -> points		64753	0					
ANR	64758	IdentifierDeclType	AF_Point		64753	0					
ANR	64759	Identifier	points		64753	1					
ANR	64760	AssignmentExpression	points = hints -> points		64753	2		=			
ANR	64761	Identifier	points		64753	0					
ANR	64762	PtrMemberAccess	hints -> points		64753	1					
ANR	64763	Identifier	hints		64753	0					
ANR	64764	Identifier	points		64753	1					
ANR	64765	IdentifierDeclStatement	AF_Point points_limit = points + hints -> num_points ;	1641:4:44190:44241	64753	1	True				
ANR	64766	IdentifierDecl	points_limit = points + hints -> num_points		64753	0					
ANR	64767	IdentifierDeclType	AF_Point		64753	0					
ANR	64768	Identifier	points_limit		64753	1					
ANR	64769	AssignmentExpression	points_limit = points + hints -> num_points		64753	2		=			
ANR	64770	Identifier	points_limit		64753	0					
ANR	64771	AdditiveExpression	points + hints -> num_points		64753	1		+			
ANR	64772	Identifier	points		64753	0					
ANR	64773	PtrMemberAccess	hints -> num_points		64753	1					
ANR	64774	Identifier	hints		64753	0					
ANR	64775	Identifier	num_points		64753	1					
ANR	64776	IdentifierDeclStatement	AF_Point point ;	1642:4:44247:44262	64753	2	True				
ANR	64777	IdentifierDecl	point		64753	0					
ANR	64778	IdentifierDeclType	AF_Point		64753	0					
ANR	64779	Identifier	point		64753	1					
ANR	64780	IfStatement	if ( dim == AF_DIMENSION_HORZ )		64753	3					
ANR	64781	Condition	dim == AF_DIMENSION_HORZ	1645:9:44275:44298	64753	0	True				
ANR	64782	EqualityExpression	dim == AF_DIMENSION_HORZ		64753	0		==			
ANR	64783	Identifier	dim		64753	0					
ANR	64784	Identifier	AF_DIMENSION_HORZ		64753	1					
ANR	64785	CompoundStatement		8:4:165:165	64753	1					
ANR	64786	ForStatement	for ( point = points ; point < points_limit ; point ++ )		64753	0					
ANR	64787	ForInit	point = points ;	1647:12:44320:44334	64753	0	True				
ANR	64788	AssignmentExpression	point = points		64753	0		=			
ANR	64789	Identifier	point		64753	0					
ANR	64790	Identifier	points		64753	1					
ANR	64791	Condition	point < points_limit	1647:28:44336:44355	64753	1	True				
ANR	64792	RelationalExpression	point < points_limit		64753	0		<			
ANR	64793	Identifier	point		64753	0					
ANR	64794	Identifier	points_limit		64753	1					
ANR	64795	PostIncDecOperationExpression	point ++	1647:50:44358:44364	64753	2	True				
ANR	64796	Identifier	point		64753	0					
ANR	64797	IncDec	++		64753	1					
ANR	64798	ExpressionStatement	"point -> x = FT_MulFix ( point -> fx , scale ) + delta"	1648:8:44376:44424	64753	3	True				
ANR	64799	AssignmentExpression	"point -> x = FT_MulFix ( point -> fx , scale ) + delta"		64753	0		=			
ANR	64800	PtrMemberAccess	point -> x		64753	0					
ANR	64801	Identifier	point		64753	0					
ANR	64802	Identifier	x		64753	1					
ANR	64803	AdditiveExpression	"FT_MulFix ( point -> fx , scale ) + delta"		64753	1		+			
ANR	64804	CallExpression	"FT_MulFix ( point -> fx , scale )"		64753	0					
ANR	64805	Callee	FT_MulFix		64753	0					
ANR	64806	Identifier	FT_MulFix		64753	0					
ANR	64807	ArgumentList	point -> fx		64753	1					
ANR	64808	Argument	point -> fx		64753	0					
ANR	64809	PtrMemberAccess	point -> fx		64753	0					
ANR	64810	Identifier	point		64753	0					
ANR	64811	Identifier	fx		64753	1					
ANR	64812	Argument	scale		64753	1					
ANR	64813	Identifier	scale		64753	0					
ANR	64814	Identifier	delta		64753	1					
ANR	64815	ElseStatement	else		64753	0					
ANR	64816	CompoundStatement		13:4:304:304	64753	0					
ANR	64817	ForStatement	for ( point = points ; point < points_limit ; point ++ )		64753	0					
ANR	64818	ForInit	point = points ;	1652:12:44459:44473	64753	0	True				
ANR	64819	AssignmentExpression	point = points		64753	0		=			
ANR	64820	Identifier	point		64753	0					
ANR	64821	Identifier	points		64753	1					
ANR	64822	Condition	point < points_limit	1652:28:44475:44494	64753	1	True				
ANR	64823	RelationalExpression	point < points_limit		64753	0		<			
ANR	64824	Identifier	point		64753	0					
ANR	64825	Identifier	points_limit		64753	1					
ANR	64826	PostIncDecOperationExpression	point ++	1652:50:44497:44503	64753	2	True				
ANR	64827	Identifier	point		64753	0					
ANR	64828	IncDec	++		64753	1					
ANR	64829	ExpressionStatement	"point -> y = FT_MulFix ( point -> fy , scale ) + delta"	1653:8:44515:44563	64753	3	True				
ANR	64830	AssignmentExpression	"point -> y = FT_MulFix ( point -> fy , scale ) + delta"		64753	0		=			
ANR	64831	PtrMemberAccess	point -> y		64753	0					
ANR	64832	Identifier	point		64753	0					
ANR	64833	Identifier	y		64753	1					
ANR	64834	AdditiveExpression	"FT_MulFix ( point -> fy , scale ) + delta"		64753	1		+			
ANR	64835	CallExpression	"FT_MulFix ( point -> fy , scale )"		64753	0					
ANR	64836	Callee	FT_MulFix		64753	0					
ANR	64837	Identifier	FT_MulFix		64753	0					
ANR	64838	ArgumentList	point -> fy		64753	1					
ANR	64839	Argument	point -> fy		64753	0					
ANR	64840	PtrMemberAccess	point -> fy		64753	0					
ANR	64841	Identifier	point		64753	0					
ANR	64842	Identifier	fy		64753	1					
ANR	64843	Argument	scale		64753	1					
ANR	64844	Identifier	scale		64753	0					
ANR	64845	Identifier	delta		64753	1					
ANR	64846	Identifier	af_glyph_hints_scale_dim		64753	1					
ANR	64847	ParameterList	"AF_GlyphHints hints , AF_Dimension dim , FT_Fixed scale , FT_Pos delta"		64753	2					
ANR	64848	Parameter	AF_GlyphHints hints	1635:28:43967:43986	64753	0	True				
ANR	64849	ParameterType	AF_GlyphHints		64753	0					
ANR	64850	Identifier	hints		64753	1					
ANR	64851	Parameter	AF_Dimension dim	1636:28:44017:44034	64753	1	True				
ANR	64852	ParameterType	AF_Dimension		64753	0					
ANR	64853	Identifier	dim		64753	1					
ANR	64854	Parameter	FT_Fixed scale	1637:28:44065:44084	64753	2	True				
ANR	64855	ParameterType	FT_Fixed		64753	0					
ANR	64856	Identifier	scale		64753	1					
ANR	64857	Parameter	FT_Pos delta	1638:28:44115:44134	64753	3	True				
ANR	64858	ParameterType	FT_Pos		64753	0					
ANR	64859	Identifier	delta		64753	1					
ANR	64860	CFGEntryNode	ENTRY		64753		True				
ANR	64861	CFGExitNode	EXIT		64753		True				
ANR	64862	Symbol	points_limit		64753						
ANR	64863	Symbol	* point		64753						
ANR	64864	Symbol	hints		64753						
ANR	64865	Symbol	delta		64753						
ANR	64866	Symbol	dim		64753						
ANR	64867	Symbol	scale		64753						
ANR	64868	Symbol	hints -> points		64753						
ANR	64869	Symbol	point -> fx		64753						
ANR	64870	Symbol	point		64753						
ANR	64871	Symbol	points		64753						
ANR	64872	Symbol	point -> fy		64753						
ANR	64873	Symbol	AF_DIMENSION_HORZ		64753						
ANR	64874	Symbol	FT_MulFix		64753						
ANR	64875	Symbol	hints -> num_points		64753						
ANR	64876	Symbol	point -> x		64753						
ANR	64877	Symbol	point -> y		64753						
ANR	64878	Symbol	* hints		64753						
