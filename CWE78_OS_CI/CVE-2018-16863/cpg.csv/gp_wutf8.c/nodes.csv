command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4950868	File	data/converged/CVE-2018-16863_ghostpdl/gp_wutf8.c								
ANR	4950869	Function	utf8_to_wchar	20:0:621:2086							
ANR	4950870	FunctionDef	"utf8_to_wchar (wchar_t * out , const char * in)"		4950869	0					
ANR	4950871	CompoundStatement		21:0:669:2086	4950869	0					
ANR	4950872	IdentifierDeclStatement	unsigned int i ;	22:4:675:689	4950869	0	True				
ANR	4950873	IdentifierDecl	i		4950869	0					
ANR	4950874	IdentifierDeclType	unsigned int		4950869	0					
ANR	4950875	Identifier	i		4950869	1					
ANR	4950876	IdentifierDeclStatement	unsigned int len = 1 ;	23:4:695:715	4950869	1	True				
ANR	4950877	IdentifierDecl	len = 1		4950869	0					
ANR	4950878	IdentifierDeclType	unsigned int		4950869	0					
ANR	4950879	Identifier	len		4950869	1					
ANR	4950880	AssignmentExpression	len = 1		4950869	2		=			
ANR	4950881	Identifier	len		4950869	0					
ANR	4950882	PrimaryExpression	1		4950869	1					
ANR	4950883	IdentifierDeclStatement	unsigned char c ;	24:4:721:736	4950869	2	True				
ANR	4950884	IdentifierDecl	c		4950869	0					
ANR	4950885	IdentifierDeclType	unsigned char		4950869	0					
ANR	4950886	Identifier	c		4950869	1					
ANR	4950887	IfStatement	if ( out )		4950869	3					
ANR	4950888	Condition	out	26:8:747:749	4950869	0	True				
ANR	4950889	Identifier	out		4950869	0					
ANR	4950890	CompoundStatement		6:13:82:82	4950869	1					
ANR	4950891	WhileStatement	while ( i = * ( unsigned char * ) in ++ )		4950869	0					
ANR	4950892	Condition	i = * ( unsigned char * ) in ++	27:15:769:794	4950869	0	True				
ANR	4950893	AssignmentExpression	i = * ( unsigned char * ) in ++		4950869	0		=			
ANR	4950894	Identifier	i		4950869	0					
ANR	4950895	UnaryOperationExpression	* ( unsigned char * ) in ++		4950869	1					
ANR	4950896	UnaryOperator	*		4950869	0					
ANR	4950897	CastExpression	( unsigned char * ) in ++		4950869	1					
ANR	4950898	CastTarget	unsigned char *		4950869	0					
ANR	4950899	PostIncDecOperationExpression	in ++		4950869	1					
ANR	4950900	Identifier	in		4950869	0					
ANR	4950901	IncDec	++		4950869	1					
ANR	4950902	CompoundStatement		7:43:127:127	4950869	1					
ANR	4950903	IfStatement	if ( i < 0x80 )		4950869	0					
ANR	4950904	Condition	i < 0x80	28:16:815:822	4950869	0	True				
ANR	4950905	RelationalExpression	i < 0x80		4950869	0		<			
ANR	4950906	Identifier	i		4950869	0					
ANR	4950907	PrimaryExpression	0x80		4950869	1					
ANR	4950908	CompoundStatement		8:26:155:155	4950869	1					
ANR	4950909	ExpressionStatement	* out ++ = ( wchar_t ) i	29:16:843:862	4950869	0	True				
ANR	4950910	AssignmentExpression	* out ++ = ( wchar_t ) i		4950869	0		=			
ANR	4950911	UnaryOperationExpression	* out ++		4950869	0					
ANR	4950912	UnaryOperator	*		4950869	0					
ANR	4950913	PostIncDecOperationExpression	out ++		4950869	1					
ANR	4950914	Identifier	out		4950869	0					
ANR	4950915	IncDec	++		4950869	1					
ANR	4950916	CastExpression	( wchar_t ) i		4950869	1					
ANR	4950917	CastTarget	wchar_t		4950869	0					
ANR	4950918	Identifier	i		4950869	1					
ANR	4950919	ExpressionStatement	len ++	30:16:880:885	4950869	1	True				
ANR	4950920	PostIncDecOperationExpression	len ++		4950869	0					
ANR	4950921	Identifier	len		4950869	0					
ANR	4950922	IncDec	++		4950869	1					
ANR	4950923	ElseStatement	else		4950869	0					
ANR	4950924	IfStatement	if ( ( i & 0xE0 ) == 0xC0 )		4950869	0					
ANR	4950925	Condition	( i & 0xE0 ) == 0xC0	31:23:910:927	4950869	0	True				
ANR	4950926	EqualityExpression	( i & 0xE0 ) == 0xC0		4950869	0		==			
ANR	4950927	BitAndExpression	i & 0xE0		4950869	0		&			
ANR	4950928	Identifier	i		4950869	0					
ANR	4950929	PrimaryExpression	0xE0		4950869	1					
ANR	4950930	PrimaryExpression	0xC0		4950869	1					
ANR	4950931	CompoundStatement		11:43:260:260	4950869	1					
ANR	4950932	ExpressionStatement	i &= 0x1F	32:16:948:957	4950869	0	True				
ANR	4950933	AssignmentExpression	i &= 0x1F		4950869	0		&=			
ANR	4950934	Identifier	i		4950869	0					
ANR	4950935	PrimaryExpression	0x1F		4950869	1					
ANR	4950936	ExpressionStatement	c = ( unsigned char ) * in ++	33:16:975:999	4950869	1	True				
ANR	4950937	AssignmentExpression	c = ( unsigned char ) * in ++		4950869	0		=			
ANR	4950938	Identifier	c		4950869	0					
ANR	4950939	CastExpression	( unsigned char ) * in ++		4950869	1					
ANR	4950940	CastTarget	unsigned char		4950869	0					
ANR	4950941	UnaryOperationExpression	* in ++		4950869	1					
ANR	4950942	UnaryOperator	*		4950869	0					
ANR	4950943	PostIncDecOperationExpression	in ++		4950869	1					
ANR	4950944	Identifier	in		4950869	0					
ANR	4950945	IncDec	++		4950869	1					
ANR	4950946	IfStatement	if ( ( c & 0xC0 ) != 0x80 )		4950869	2					
ANR	4950947	Condition	( c & 0xC0 ) != 0x80	34:20:1021:1038	4950869	0	True				
ANR	4950948	EqualityExpression	( c & 0xC0 ) != 0x80		4950869	0		!=			
ANR	4950949	BitAndExpression	c & 0xC0		4950869	0		&			
ANR	4950950	Identifier	c		4950869	0					
ANR	4950951	PrimaryExpression	0xC0		4950869	1					
ANR	4950952	PrimaryExpression	0x80		4950869	1					
ANR	4950953	ReturnStatement	return - 1 ;	35:20:1061:1070	4950869	1	True				
ANR	4950954	UnaryOperationExpression	- 1		4950869	0					
ANR	4950955	UnaryOperator	-		4950869	0					
ANR	4950956	PrimaryExpression	1		4950869	1					
ANR	4950957	ExpressionStatement	i = ( i << 6 ) | ( c & 0x3f )	36:16:1088:1111	4950869	3	True				
ANR	4950958	AssignmentExpression	i = ( i << 6 ) | ( c & 0x3f )		4950869	0		=			
ANR	4950959	Identifier	i		4950869	0					
ANR	4950960	InclusiveOrExpression	( i << 6 ) | ( c & 0x3f )		4950869	1		|			
ANR	4950961	ShiftExpression	i << 6		4950869	0		<<			
ANR	4950962	Identifier	i		4950869	0					
ANR	4950963	PrimaryExpression	6		4950869	1					
ANR	4950964	BitAndExpression	c & 0x3f		4950869	1		&			
ANR	4950965	Identifier	c		4950869	0					
ANR	4950966	PrimaryExpression	0x3f		4950869	1					
ANR	4950967	ExpressionStatement	* out ++ = ( wchar_t ) i	37:16:1129:1148	4950869	4	True				
ANR	4950968	AssignmentExpression	* out ++ = ( wchar_t ) i		4950869	0		=			
ANR	4950969	UnaryOperationExpression	* out ++		4950869	0					
ANR	4950970	UnaryOperator	*		4950869	0					
ANR	4950971	PostIncDecOperationExpression	out ++		4950869	1					
ANR	4950972	Identifier	out		4950869	0					
ANR	4950973	IncDec	++		4950869	1					
ANR	4950974	CastExpression	( wchar_t ) i		4950869	1					
ANR	4950975	CastTarget	wchar_t		4950869	0					
ANR	4950976	Identifier	i		4950869	1					
ANR	4950977	ExpressionStatement	len ++	38:16:1166:1171	4950869	5	True				
ANR	4950978	PostIncDecOperationExpression	len ++		4950869	0					
ANR	4950979	Identifier	len		4950869	0					
ANR	4950980	IncDec	++		4950869	1					
ANR	4950981	ElseStatement	else		4950869	0					
ANR	4950982	IfStatement	if ( ( i & 0xF0 ) == 0xE0 )		4950869	0					
ANR	4950983	Condition	( i & 0xF0 ) == 0xE0	39:23:1196:1213	4950869	0	True				
ANR	4950984	EqualityExpression	( i & 0xF0 ) == 0xE0		4950869	0		==			
ANR	4950985	BitAndExpression	i & 0xF0		4950869	0		&			
ANR	4950986	Identifier	i		4950869	0					
ANR	4950987	PrimaryExpression	0xF0		4950869	1					
ANR	4950988	PrimaryExpression	0xE0		4950869	1					
ANR	4950989	CompoundStatement		19:43:546:546	4950869	1					
ANR	4950990	ExpressionStatement	i &= 0xF	40:16:1234:1242	4950869	0	True				
ANR	4950991	AssignmentExpression	i &= 0xF		4950869	0		&=			
ANR	4950992	Identifier	i		4950869	0					
ANR	4950993	PrimaryExpression	0xF		4950869	1					
ANR	4950994	ExpressionStatement	c = ( unsigned char ) * in ++	41:16:1260:1284	4950869	1	True				
ANR	4950995	AssignmentExpression	c = ( unsigned char ) * in ++		4950869	0		=			
ANR	4950996	Identifier	c		4950869	0					
ANR	4950997	CastExpression	( unsigned char ) * in ++		4950869	1					
ANR	4950998	CastTarget	unsigned char		4950869	0					
ANR	4950999	UnaryOperationExpression	* in ++		4950869	1					
ANR	4951000	UnaryOperator	*		4950869	0					
ANR	4951001	PostIncDecOperationExpression	in ++		4950869	1					
ANR	4951002	Identifier	in		4950869	0					
ANR	4951003	IncDec	++		4950869	1					
ANR	4951004	IfStatement	if ( ( c & 0xC0 ) != 0x80 )		4950869	2					
ANR	4951005	Condition	( c & 0xC0 ) != 0x80	42:20:1306:1323	4950869	0	True				
ANR	4951006	EqualityExpression	( c & 0xC0 ) != 0x80		4950869	0		!=			
ANR	4951007	BitAndExpression	c & 0xC0		4950869	0		&			
ANR	4951008	Identifier	c		4950869	0					
ANR	4951009	PrimaryExpression	0xC0		4950869	1					
ANR	4951010	PrimaryExpression	0x80		4950869	1					
ANR	4951011	ReturnStatement	return - 1 ;	43:20:1346:1355	4950869	1	True				
ANR	4951012	UnaryOperationExpression	- 1		4950869	0					
ANR	4951013	UnaryOperator	-		4950869	0					
ANR	4951014	PrimaryExpression	1		4950869	1					
ANR	4951015	ExpressionStatement	i = ( i << 6 ) | ( c & 0x3f )	44:16:1373:1396	4950869	3	True				
ANR	4951016	AssignmentExpression	i = ( i << 6 ) | ( c & 0x3f )		4950869	0		=			
ANR	4951017	Identifier	i		4950869	0					
ANR	4951018	InclusiveOrExpression	( i << 6 ) | ( c & 0x3f )		4950869	1		|			
ANR	4951019	ShiftExpression	i << 6		4950869	0		<<			
ANR	4951020	Identifier	i		4950869	0					
ANR	4951021	PrimaryExpression	6		4950869	1					
ANR	4951022	BitAndExpression	c & 0x3f		4950869	1		&			
ANR	4951023	Identifier	c		4950869	0					
ANR	4951024	PrimaryExpression	0x3f		4950869	1					
ANR	4951025	ExpressionStatement	c = ( unsigned char ) * in ++	45:16:1414:1438	4950869	4	True				
ANR	4951026	AssignmentExpression	c = ( unsigned char ) * in ++		4950869	0		=			
ANR	4951027	Identifier	c		4950869	0					
ANR	4951028	CastExpression	( unsigned char ) * in ++		4950869	1					
ANR	4951029	CastTarget	unsigned char		4950869	0					
ANR	4951030	UnaryOperationExpression	* in ++		4950869	1					
ANR	4951031	UnaryOperator	*		4950869	0					
ANR	4951032	PostIncDecOperationExpression	in ++		4950869	1					
ANR	4951033	Identifier	in		4950869	0					
ANR	4951034	IncDec	++		4950869	1					
ANR	4951035	IfStatement	if ( ( c & 0xC0 ) != 0x80 )		4950869	5					
ANR	4951036	Condition	( c & 0xC0 ) != 0x80	46:20:1460:1477	4950869	0	True				
ANR	4951037	EqualityExpression	( c & 0xC0 ) != 0x80		4950869	0		!=			
ANR	4951038	BitAndExpression	c & 0xC0		4950869	0		&			
ANR	4951039	Identifier	c		4950869	0					
ANR	4951040	PrimaryExpression	0xC0		4950869	1					
ANR	4951041	PrimaryExpression	0x80		4950869	1					
ANR	4951042	ReturnStatement	return - 1 ;	47:20:1500:1509	4950869	1	True				
ANR	4951043	UnaryOperationExpression	- 1		4950869	0					
ANR	4951044	UnaryOperator	-		4950869	0					
ANR	4951045	PrimaryExpression	1		4950869	1					
ANR	4951046	ExpressionStatement	i = ( i << 6 ) | ( c & 0x3f )	48:16:1527:1550	4950869	6	True				
ANR	4951047	AssignmentExpression	i = ( i << 6 ) | ( c & 0x3f )		4950869	0		=			
ANR	4951048	Identifier	i		4950869	0					
ANR	4951049	InclusiveOrExpression	( i << 6 ) | ( c & 0x3f )		4950869	1		|			
ANR	4951050	ShiftExpression	i << 6		4950869	0		<<			
ANR	4951051	Identifier	i		4950869	0					
ANR	4951052	PrimaryExpression	6		4950869	1					
ANR	4951053	BitAndExpression	c & 0x3f		4950869	1		&			
ANR	4951054	Identifier	c		4950869	0					
ANR	4951055	PrimaryExpression	0x3f		4950869	1					
ANR	4951056	ExpressionStatement	* out ++ = ( wchar_t ) i	49:16:1568:1587	4950869	7	True				
ANR	4951057	AssignmentExpression	* out ++ = ( wchar_t ) i		4950869	0		=			
ANR	4951058	UnaryOperationExpression	* out ++		4950869	0					
ANR	4951059	UnaryOperator	*		4950869	0					
ANR	4951060	PostIncDecOperationExpression	out ++		4950869	1					
ANR	4951061	Identifier	out		4950869	0					
ANR	4951062	IncDec	++		4950869	1					
ANR	4951063	CastExpression	( wchar_t ) i		4950869	1					
ANR	4951064	CastTarget	wchar_t		4950869	0					
ANR	4951065	Identifier	i		4950869	1					
ANR	4951066	ExpressionStatement	len ++	50:16:1605:1610	4950869	8	True				
ANR	4951067	PostIncDecOperationExpression	len ++		4950869	0					
ANR	4951068	Identifier	len		4950869	0					
ANR	4951069	IncDec	++		4950869	1					
ANR	4951070	ElseStatement	else		4950869	0					
ANR	4951071	CompoundStatement		31:19:961:961	4950869	0					
ANR	4951072	ReturnStatement	return - 1 ;	52:16:1649:1658	4950869	0	True				
ANR	4951073	UnaryOperationExpression	- 1		4950869	0					
ANR	4951074	UnaryOperator	-		4950869	0					
ANR	4951075	PrimaryExpression	1		4950869	1					
ANR	4951076	ExpressionStatement	* out = 0	55:8:1692:1700	4950869	1	True				
ANR	4951077	AssignmentExpression	* out = 0		4950869	0		=			
ANR	4951078	UnaryOperationExpression	* out		4950869	0					
ANR	4951079	UnaryOperator	*		4950869	0					
ANR	4951080	Identifier	out		4950869	1					
ANR	4951081	PrimaryExpression	0		4950869	1					
ANR	4951082	ElseStatement	else		4950869	0					
ANR	4951083	CompoundStatement		36:11:1043:1043	4950869	0					
ANR	4951084	WhileStatement	while ( i = * ( unsigned char * ) in ++ )		4950869	0					
ANR	4951085	Condition	i = * ( unsigned char * ) in ++	57:15:1730:1755	4950869	0	True				
ANR	4951086	AssignmentExpression	i = * ( unsigned char * ) in ++		4950869	0		=			
ANR	4951087	Identifier	i		4950869	0					
ANR	4951088	UnaryOperationExpression	* ( unsigned char * ) in ++		4950869	1					
ANR	4951089	UnaryOperator	*		4950869	0					
ANR	4951090	CastExpression	( unsigned char * ) in ++		4950869	1					
ANR	4951091	CastTarget	unsigned char *		4950869	0					
ANR	4951092	PostIncDecOperationExpression	in ++		4950869	1					
ANR	4951093	Identifier	in		4950869	0					
ANR	4951094	IncDec	++		4950869	1					
ANR	4951095	CompoundStatement		37:43:1088:1088	4950869	1					
ANR	4951096	IfStatement	if ( i < 0x80 )		4950869	0					
ANR	4951097	Condition	i < 0x80	58:16:1776:1783	4950869	0	True				
ANR	4951098	RelationalExpression	i < 0x80		4950869	0		<			
ANR	4951099	Identifier	i		4950869	0					
ANR	4951100	PrimaryExpression	0x80		4950869	1					
ANR	4951101	CompoundStatement		38:26:1116:1116	4950869	1					
ANR	4951102	ExpressionStatement	len ++	59:16:1804:1809	4950869	0	True				
ANR	4951103	PostIncDecOperationExpression	len ++		4950869	0					
ANR	4951104	Identifier	len		4950869	0					
ANR	4951105	IncDec	++		4950869	1					
ANR	4951106	ElseStatement	else		4950869	0					
ANR	4951107	IfStatement	if ( ( i & 0xE0 ) == 0xC0 )		4950869	0					
ANR	4951108	Condition	( i & 0xE0 ) == 0xC0	60:23:1834:1851	4950869	0	True				
ANR	4951109	EqualityExpression	( i & 0xE0 ) == 0xC0		4950869	0		==			
ANR	4951110	BitAndExpression	i & 0xE0		4950869	0		&			
ANR	4951111	Identifier	i		4950869	0					
ANR	4951112	PrimaryExpression	0xE0		4950869	1					
ANR	4951113	PrimaryExpression	0xC0		4950869	1					
ANR	4951114	CompoundStatement		40:43:1184:1184	4950869	1					
ANR	4951115	ExpressionStatement	in ++	61:16:1872:1876	4950869	0	True				
ANR	4951116	PostIncDecOperationExpression	in ++		4950869	0					
ANR	4951117	Identifier	in		4950869	0					
ANR	4951118	IncDec	++		4950869	1					
ANR	4951119	ExpressionStatement	len ++	62:16:1894:1899	4950869	1	True				
ANR	4951120	PostIncDecOperationExpression	len ++		4950869	0					
ANR	4951121	Identifier	len		4950869	0					
ANR	4951122	IncDec	++		4950869	1					
ANR	4951123	ElseStatement	else		4950869	0					
ANR	4951124	IfStatement	if ( ( i & 0xF0 ) == 0xE0 )		4950869	0					
ANR	4951125	Condition	( i & 0xF0 ) == 0xE0	63:23:1924:1941	4950869	0	True				
ANR	4951126	EqualityExpression	( i & 0xF0 ) == 0xE0		4950869	0		==			
ANR	4951127	BitAndExpression	i & 0xF0		4950869	0		&			
ANR	4951128	Identifier	i		4950869	0					
ANR	4951129	PrimaryExpression	0xF0		4950869	1					
ANR	4951130	PrimaryExpression	0xE0		4950869	1					
ANR	4951131	CompoundStatement		43:43:1274:1274	4950869	1					
ANR	4951132	ExpressionStatement	in += 2	64:16:1962:1967	4950869	0	True				
ANR	4951133	AssignmentExpression	in += 2		4950869	0		+=			
ANR	4951134	Identifier	in		4950869	0					
ANR	4951135	PrimaryExpression	2		4950869	1					
ANR	4951136	ExpressionStatement	len ++	65:16:1985:1990	4950869	1	True				
ANR	4951137	PostIncDecOperationExpression	len ++		4950869	0					
ANR	4951138	Identifier	len		4950869	0					
ANR	4951139	IncDec	++		4950869	1					
ANR	4951140	ElseStatement	else		4950869	0					
ANR	4951141	CompoundStatement		46:19:1341:1341	4950869	0					
ANR	4951142	ReturnStatement	return - 1 ;	67:16:2029:2038	4950869	0	True				
ANR	4951143	UnaryOperationExpression	- 1		4950869	0					
ANR	4951144	UnaryOperator	-		4950869	0					
ANR	4951145	PrimaryExpression	1		4950869	1					
ANR	4951146	ReturnStatement	return len ;	71:4:2074:2084	4950869	4	True				
ANR	4951147	Identifier	len		4950869	0					
ANR	4951148	ReturnType	int		4950869	1					
ANR	4951149	Identifier	utf8_to_wchar		4950869	2					
ANR	4951150	ParameterList	"wchar_t * out , const char * in"		4950869	3					
ANR	4951151	Parameter	wchar_t * out	20:18:639:650	4950869	0	True				
ANR	4951152	ParameterType	wchar_t *		4950869	0					
ANR	4951153	Identifier	out		4950869	1					
ANR	4951154	Parameter	const char * in	20:32:653:666	4950869	1	True				
ANR	4951155	ParameterType	const char *		4950869	0					
ANR	4951156	Identifier	in		4950869	1					
ANR	4951157	CFGEntryNode	ENTRY		4950869		True				
ANR	4951158	CFGExitNode	EXIT		4950869		True				
ANR	4951159	Symbol	* out ++		4950869						
ANR	4951160	Symbol	* ( unsigned char * ) in ++		4950869						
ANR	4951161	Symbol	c		4950869						
ANR	4951162	Symbol	len		4950869						
ANR	4951163	Symbol	in		4950869						
ANR	4951164	Symbol	* out		4950869						
ANR	4951165	Symbol	i		4950869						
ANR	4951166	Symbol	out		4950869						
ANR	4951167	Symbol	* in ++		4950869						
ANR	4951168	Function	wchar_to_utf8	74:0:2089:3032							
ANR	4951169	FunctionDef	"wchar_to_utf8 (char * out , const wchar_t * in)"		4951168	0					
ANR	4951170	CompoundStatement		75:0:2137:3032	4951168	0					
ANR	4951171	IdentifierDeclStatement	unsigned int i ;	76:4:2143:2157	4951168	0	True				
ANR	4951172	IdentifierDecl	i		4951168	0					
ANR	4951173	IdentifierDeclType	unsigned int		4951168	0					
ANR	4951174	Identifier	i		4951168	1					
ANR	4951175	IdentifierDeclStatement	unsigned int len = 1 ;	77:4:2163:2183	4951168	1	True				
ANR	4951176	IdentifierDecl	len = 1		4951168	0					
ANR	4951177	IdentifierDeclType	unsigned int		4951168	0					
ANR	4951178	Identifier	len		4951168	1					
ANR	4951179	AssignmentExpression	len = 1		4951168	2		=			
ANR	4951180	Identifier	len		4951168	0					
ANR	4951181	PrimaryExpression	1		4951168	1					
ANR	4951182	IfStatement	if ( out )		4951168	2					
ANR	4951183	Condition	out	79:8:2194:2196	4951168	0	True				
ANR	4951184	Identifier	out		4951168	0					
ANR	4951185	CompoundStatement		5:13:61:61	4951168	1					
ANR	4951186	WhileStatement	while ( i = ( unsigned int ) * in ++ )		4951168	0					
ANR	4951187	Condition	i = ( unsigned int ) * in ++	80:15:2216:2238	4951168	0	True				
ANR	4951188	AssignmentExpression	i = ( unsigned int ) * in ++		4951168	0		=			
ANR	4951189	Identifier	i		4951168	0					
ANR	4951190	CastExpression	( unsigned int ) * in ++		4951168	1					
ANR	4951191	CastTarget	unsigned int		4951168	0					
ANR	4951192	UnaryOperationExpression	* in ++		4951168	1					
ANR	4951193	UnaryOperator	*		4951168	0					
ANR	4951194	PostIncDecOperationExpression	in ++		4951168	1					
ANR	4951195	Identifier	in		4951168	0					
ANR	4951196	IncDec	++		4951168	1					
ANR	4951197	CompoundStatement		6:40:103:103	4951168	1					
ANR	4951198	IfStatement	if ( i < 0x80 )		4951168	0					
ANR	4951199	Condition	i < 0x80	81:16:2259:2266	4951168	0	True				
ANR	4951200	RelationalExpression	i < 0x80		4951168	0		<			
ANR	4951201	Identifier	i		4951168	0					
ANR	4951202	PrimaryExpression	0x80		4951168	1					
ANR	4951203	CompoundStatement		7:26:131:131	4951168	1					
ANR	4951204	ExpressionStatement	* out ++ = ( char ) i	82:16:2287:2303	4951168	0	True				
ANR	4951205	AssignmentExpression	* out ++ = ( char ) i		4951168	0		=			
ANR	4951206	UnaryOperationExpression	* out ++		4951168	0					
ANR	4951207	UnaryOperator	*		4951168	0					
ANR	4951208	PostIncDecOperationExpression	out ++		4951168	1					
ANR	4951209	Identifier	out		4951168	0					
ANR	4951210	IncDec	++		4951168	1					
ANR	4951211	CastExpression	( char ) i		4951168	1					
ANR	4951212	CastTarget	char		4951168	0					
ANR	4951213	Identifier	i		4951168	1					
ANR	4951214	ExpressionStatement	len ++	83:16:2321:2326	4951168	1	True				
ANR	4951215	PostIncDecOperationExpression	len ++		4951168	0					
ANR	4951216	Identifier	len		4951168	0					
ANR	4951217	IncDec	++		4951168	1					
ANR	4951218	ElseStatement	else		4951168	0					
ANR	4951219	IfStatement	if ( i < 0x800 )		4951168	0					
ANR	4951220	Condition	i < 0x800	84:23:2351:2359	4951168	0	True				
ANR	4951221	RelationalExpression	i < 0x800		4951168	0		<			
ANR	4951222	Identifier	i		4951168	0					
ANR	4951223	PrimaryExpression	0x800		4951168	1					
ANR	4951224	CompoundStatement		10:34:224:224	4951168	1					
ANR	4951225	ExpressionStatement	* out ++ = 0xC0 | ( i >> 6 )	85:16:2380:2412	4951168	0	True				
ANR	4951226	AssignmentExpression	* out ++ = 0xC0 | ( i >> 6 )		4951168	0		=			
ANR	4951227	UnaryOperationExpression	* out ++		4951168	0					
ANR	4951228	UnaryOperator	*		4951168	0					
ANR	4951229	PostIncDecOperationExpression	out ++		4951168	1					
ANR	4951230	Identifier	out		4951168	0					
ANR	4951231	IncDec	++		4951168	1					
ANR	4951232	InclusiveOrExpression	0xC0 | ( i >> 6 )		4951168	1		|			
ANR	4951233	PrimaryExpression	0xC0		4951168	0					
ANR	4951234	ShiftExpression	i >> 6		4951168	1		>>			
ANR	4951235	Identifier	i		4951168	0					
ANR	4951236	PrimaryExpression	6		4951168	1					
ANR	4951237	ExpressionStatement	* out ++ = 0x80 | ( i & 0x3F )	86:16:2430:2462	4951168	1	True				
ANR	4951238	AssignmentExpression	* out ++ = 0x80 | ( i & 0x3F )		4951168	0		=			
ANR	4951239	UnaryOperationExpression	* out ++		4951168	0					
ANR	4951240	UnaryOperator	*		4951168	0					
ANR	4951241	PostIncDecOperationExpression	out ++		4951168	1					
ANR	4951242	Identifier	out		4951168	0					
ANR	4951243	IncDec	++		4951168	1					
ANR	4951244	InclusiveOrExpression	0x80 | ( i & 0x3F )		4951168	1		|			
ANR	4951245	PrimaryExpression	0x80		4951168	0					
ANR	4951246	BitAndExpression	i & 0x3F		4951168	1		&			
ANR	4951247	Identifier	i		4951168	0					
ANR	4951248	PrimaryExpression	0x3F		4951168	1					
ANR	4951249	ExpressionStatement	len += 2	87:16:2480:2486	4951168	2	True				
ANR	4951250	AssignmentExpression	len += 2		4951168	0		+=			
ANR	4951251	Identifier	len		4951168	0					
ANR	4951252	PrimaryExpression	2		4951168	1					
ANR	4951253	ElseStatement	else		4951168	0					
ANR	4951254	CompoundStatement		14:42:392:392	4951168	0					
ANR	4951255	ExpressionStatement	* out ++ = 0xE0 | ( i >> 12 )	89:16:2548:2580	4951168	0	True				
ANR	4951256	AssignmentExpression	* out ++ = 0xE0 | ( i >> 12 )		4951168	0		=			
ANR	4951257	UnaryOperationExpression	* out ++		4951168	0					
ANR	4951258	UnaryOperator	*		4951168	0					
ANR	4951259	PostIncDecOperationExpression	out ++		4951168	1					
ANR	4951260	Identifier	out		4951168	0					
ANR	4951261	IncDec	++		4951168	1					
ANR	4951262	InclusiveOrExpression	0xE0 | ( i >> 12 )		4951168	1		|			
ANR	4951263	PrimaryExpression	0xE0		4951168	0					
ANR	4951264	ShiftExpression	i >> 12		4951168	1		>>			
ANR	4951265	Identifier	i		4951168	0					
ANR	4951266	PrimaryExpression	12		4951168	1					
ANR	4951267	ExpressionStatement	* out ++ = 0x80 | ( ( i >> 6 ) & 0x3F )	90:16:2598:2630	4951168	1	True				
ANR	4951268	AssignmentExpression	* out ++ = 0x80 | ( ( i >> 6 ) & 0x3F )		4951168	0		=			
ANR	4951269	UnaryOperationExpression	* out ++		4951168	0					
ANR	4951270	UnaryOperator	*		4951168	0					
ANR	4951271	PostIncDecOperationExpression	out ++		4951168	1					
ANR	4951272	Identifier	out		4951168	0					
ANR	4951273	IncDec	++		4951168	1					
ANR	4951274	InclusiveOrExpression	0x80 | ( ( i >> 6 ) & 0x3F )		4951168	1		|			
ANR	4951275	PrimaryExpression	0x80		4951168	0					
ANR	4951276	BitAndExpression	( i >> 6 ) & 0x3F		4951168	1		&			
ANR	4951277	ShiftExpression	i >> 6		4951168	0		>>			
ANR	4951278	Identifier	i		4951168	0					
ANR	4951279	PrimaryExpression	6		4951168	1					
ANR	4951280	PrimaryExpression	0x3F		4951168	1					
ANR	4951281	ExpressionStatement	* out ++ = 0x80 | ( i & 0x3F )	91:16:2648:2680	4951168	2	True				
ANR	4951282	AssignmentExpression	* out ++ = 0x80 | ( i & 0x3F )		4951168	0		=			
ANR	4951283	UnaryOperationExpression	* out ++		4951168	0					
ANR	4951284	UnaryOperator	*		4951168	0					
ANR	4951285	PostIncDecOperationExpression	out ++		4951168	1					
ANR	4951286	Identifier	out		4951168	0					
ANR	4951287	IncDec	++		4951168	1					
ANR	4951288	InclusiveOrExpression	0x80 | ( i & 0x3F )		4951168	1		|			
ANR	4951289	PrimaryExpression	0x80		4951168	0					
ANR	4951290	BitAndExpression	i & 0x3F		4951168	1		&			
ANR	4951291	Identifier	i		4951168	0					
ANR	4951292	PrimaryExpression	0x3F		4951168	1					
ANR	4951293	ExpressionStatement	len += 3	92:16:2698:2704	4951168	3	True				
ANR	4951294	AssignmentExpression	len += 3		4951168	0		+=			
ANR	4951295	Identifier	len		4951168	0					
ANR	4951296	PrimaryExpression	3		4951168	1					
ANR	4951297	ExpressionStatement	* out = 0	95:8:2738:2746	4951168	1	True				
ANR	4951298	AssignmentExpression	* out = 0		4951168	0		=			
ANR	4951299	UnaryOperationExpression	* out		4951168	0					
ANR	4951300	UnaryOperator	*		4951168	0					
ANR	4951301	Identifier	out		4951168	1					
ANR	4951302	PrimaryExpression	0		4951168	1					
ANR	4951303	ElseStatement	else		4951168	0					
ANR	4951304	CompoundStatement		22:11:621:621	4951168	0					
ANR	4951305	WhileStatement	while ( i = ( unsigned int ) * in ++ )		4951168	0					
ANR	4951306	Condition	i = ( unsigned int ) * in ++	97:15:2776:2798	4951168	0	True				
ANR	4951307	AssignmentExpression	i = ( unsigned int ) * in ++		4951168	0		=			
ANR	4951308	Identifier	i		4951168	0					
ANR	4951309	CastExpression	( unsigned int ) * in ++		4951168	1					
ANR	4951310	CastTarget	unsigned int		4951168	0					
ANR	4951311	UnaryOperationExpression	* in ++		4951168	1					
ANR	4951312	UnaryOperator	*		4951168	0					
ANR	4951313	PostIncDecOperationExpression	in ++		4951168	1					
ANR	4951314	Identifier	in		4951168	0					
ANR	4951315	IncDec	++		4951168	1					
ANR	4951316	CompoundStatement		23:40:663:663	4951168	1					
ANR	4951317	IfStatement	if ( i < 0x80 )		4951168	0					
ANR	4951318	Condition	i < 0x80	98:16:2819:2826	4951168	0	True				
ANR	4951319	RelationalExpression	i < 0x80		4951168	0		<			
ANR	4951320	Identifier	i		4951168	0					
ANR	4951321	PrimaryExpression	0x80		4951168	1					
ANR	4951322	CompoundStatement		24:26:691:691	4951168	1					
ANR	4951323	ExpressionStatement	len ++	99:16:2847:2852	4951168	0	True				
ANR	4951324	PostIncDecOperationExpression	len ++		4951168	0					
ANR	4951325	Identifier	len		4951168	0					
ANR	4951326	IncDec	++		4951168	1					
ANR	4951327	ElseStatement	else		4951168	0					
ANR	4951328	IfStatement	if ( i < 0x800 )		4951168	0					
ANR	4951329	Condition	i < 0x800	100:23:2877:2885	4951168	0	True				
ANR	4951330	RelationalExpression	i < 0x800		4951168	0		<			
ANR	4951331	Identifier	i		4951168	0					
ANR	4951332	PrimaryExpression	0x800		4951168	1					
ANR	4951333	CompoundStatement		26:34:750:750	4951168	1					
ANR	4951334	ExpressionStatement	len += 2	101:16:2906:2914	4951168	0	True				
ANR	4951335	AssignmentExpression	len += 2		4951168	0		+=			
ANR	4951336	Identifier	len		4951168	0					
ANR	4951337	PrimaryExpression	2		4951168	1					
ANR	4951338	ElseStatement	else		4951168	0					
ANR	4951339	CompoundStatement		28:42:820:820	4951168	0					
ANR	4951340	ExpressionStatement	len += 3	103:16:2976:2984	4951168	0	True				
ANR	4951341	AssignmentExpression	len += 3		4951168	0		+=			
ANR	4951342	Identifier	len		4951168	0					
ANR	4951343	PrimaryExpression	3		4951168	1					
ANR	4951344	ReturnStatement	return len ;	107:4:3020:3030	4951168	3	True				
ANR	4951345	Identifier	len		4951168	0					
ANR	4951346	ReturnType	int		4951168	1					
ANR	4951347	Identifier	wchar_to_utf8		4951168	2					
ANR	4951348	ParameterList	"char * out , const wchar_t * in"		4951168	3					
ANR	4951349	Parameter	char * out	74:18:2107:2115	4951168	0	True				
ANR	4951350	ParameterType	char *		4951168	0					
ANR	4951351	Identifier	out		4951168	1					
ANR	4951352	Parameter	const wchar_t * in	74:29:2118:2134	4951168	1	True				
ANR	4951353	ParameterType	const wchar_t *		4951168	0					
ANR	4951354	Identifier	in		4951168	1					
ANR	4951355	CFGEntryNode	ENTRY		4951168		True				
ANR	4951356	CFGExitNode	EXIT		4951168		True				
ANR	4951357	Symbol	* out ++		4951168						
ANR	4951358	Symbol	len		4951168						
ANR	4951359	Symbol	in		4951168						
ANR	4951360	Symbol	* out		4951168						
ANR	4951361	Symbol	i		4951168						
ANR	4951362	Symbol	out		4951168						
ANR	4951363	Symbol	* in ++		4951168						
