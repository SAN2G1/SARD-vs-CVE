command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8476873	File	data/converged/CVE-2018-16863_ghostpdl/plulfont.c								
ANR	8476874	DeclStmt									
ANR	8476875	Decl							IF_STATE	IF_STATE	IFS
ANR	8476876	DeclStmt									
ANR	8476877	Decl							PIF_STATE	PIF_STATE	pIFS
ANR	8476878	DeclStmt									
ANR	8476879	Decl							SW16	SW16 [ 16 ]	fcHndlPlAry
ANR	8476880	DeclStmt									
ANR	8476881	Decl							bool	bool	plugins_opened
ANR	8476882	DeclStmt									
ANR	8476883	Decl							const char	const char *	UFSTFONTDIR
ANR	8476884	DeclStmt									
ANR	8476885	Decl							const char	const char *	UFSTFCOS
ANR	8476886	DeclStmt									
ANR	8476887	Decl							const char	const char *	UFSTPLUGINS
ANR	8476888	Function	build_strs	88:0:2445:4767							
ANR	8476889	FunctionDef	"build_strs (gs_memory_t * mem , char * str , char separator)"		8476888	0					
ANR	8476890	CompoundStatement		90:0:2517:4767	8476888	0					
ANR	8476891	IdentifierDeclStatement	int i ;	91:4:2523:2528	8476888	0	True				
ANR	8476892	IdentifierDecl	i		8476888	0					
ANR	8476893	IdentifierDeclType	int		8476888	0					
ANR	8476894	Identifier	i		8476888	1					
ANR	8476895	IdentifierDeclStatement	char * start_path = str ;	92:4:2534:2556	8476888	1	True				
ANR	8476896	IdentifierDecl	* start_path = str		8476888	0					
ANR	8476897	IdentifierDeclType	char *		8476888	0					
ANR	8476898	Identifier	start_path		8476888	1					
ANR	8476899	AssignmentExpression	* start_path = str		8476888	2		=			
ANR	8476900	Identifier	str		8476888	0					
ANR	8476901	Identifier	str		8476888	1					
ANR	8476902	IdentifierDeclStatement	char * end_path = str ;	93:4:2562:2582	8476888	2	True				
ANR	8476903	IdentifierDecl	* end_path = str		8476888	0					
ANR	8476904	IdentifierDeclType	char *		8476888	0					
ANR	8476905	Identifier	end_path		8476888	1					
ANR	8476906	AssignmentExpression	* end_path = str		8476888	2		=			
ANR	8476907	Identifier	str		8476888	0					
ANR	8476908	Identifier	str		8476888	1					
ANR	8476909	IdentifierDeclStatement	char * * list ;	94:4:2588:2599	8476888	3	True				
ANR	8476910	IdentifierDecl	* * list		8476888	0					
ANR	8476911	IdentifierDeclType	char * *		8476888	0					
ANR	8476912	Identifier	list		8476888	1					
ANR	8476913	IfStatement	if ( ( str == NULL ) || ( str [ 0 ] == '\\0' ) )		8476888	4					
ANR	8476914	Condition	( str == NULL ) || ( str [ 0 ] == '\\0' )	97:8:2648:2680	8476888	0	True				
ANR	8476915	OrExpression	( str == NULL ) || ( str [ 0 ] == '\\0' )		8476888	0		||			
ANR	8476916	EqualityExpression	str == NULL		8476888	0		==			
ANR	8476917	Identifier	str		8476888	0					
ANR	8476918	Identifier	NULL		8476888	1					
ANR	8476919	EqualityExpression	str [ 0 ] == '\\0'		8476888	1		==			
ANR	8476920	ArrayIndexing	str [ 0 ]		8476888	0					
ANR	8476921	Identifier	str		8476888	0					
ANR	8476922	PrimaryExpression	0		8476888	1					
ANR	8476923	PrimaryExpression	'\\0'		8476888	1					
ANR	8476924	ReturnStatement	return NULL ;	98:8:2691:2702	8476888	1	True				
ANR	8476925	Identifier	NULL		8476888	0					
ANR	8476926	ForStatement	for ( i = 0 ; ; i ++ )		8476888	5					
ANR	8476927	ForInit	i = 0 ;	100:9:2714:2719	8476888	0	True				
ANR	8476928	AssignmentExpression	i = 0		8476888	0		=			
ANR	8476929	Identifier	i		8476888	0					
ANR	8476930	PrimaryExpression	0		8476888	1					
ANR	8476931	PostIncDecOperationExpression	i ++	100:17:2722:2724	8476888	1	True				
ANR	8476932	Identifier	i		8476888	0					
ANR	8476933	IncDec	++		8476888	1					
ANR	8476934	CompoundStatement		11:22:209:209	8476888	2					
ANR	8476935	WhileStatement	while ( * end_path != ( char ) NULL && * end_path != separator )		8476888	0					
ANR	8476936	Condition	* end_path != ( char ) NULL && * end_path != separator	102:15:2786:2834	8476888	0	True				
ANR	8476937	AndExpression	* end_path != ( char ) NULL && * end_path != separator		8476888	0		&&			
ANR	8476938	EqualityExpression	* end_path != ( char ) NULL		8476888	0		!=			
ANR	8476939	UnaryOperationExpression	* end_path		8476888	0					
ANR	8476940	UnaryOperator	*		8476888	0					
ANR	8476941	Identifier	end_path		8476888	1					
ANR	8476942	CastExpression	( char ) NULL		8476888	1					
ANR	8476943	CastTarget	char		8476888	0					
ANR	8476944	Identifier	NULL		8476888	1					
ANR	8476945	EqualityExpression	* end_path != separator		8476888	1		!=			
ANR	8476946	UnaryOperationExpression	* end_path		8476888	0					
ANR	8476947	UnaryOperator	*		8476888	0					
ANR	8476948	Identifier	end_path		8476888	1					
ANR	8476949	Identifier	separator		8476888	1					
ANR	8476950	ExpressionStatement	end_path ++	103:12:2849:2859	8476888	1	True				
ANR	8476951	PostIncDecOperationExpression	end_path ++		8476888	0					
ANR	8476952	Identifier	end_path		8476888	0					
ANR	8476953	IncDec	++		8476888	1					
ANR	8476954	IfStatement	if ( i == 0 )		8476888	1					
ANR	8476955	Condition	i == 0	105:12:2938:2943	8476888	0	True				
ANR	8476956	EqualityExpression	i == 0		8476888	0		==			
ANR	8476957	Identifier	i		8476888	0					
ANR	8476958	PrimaryExpression	0		8476888	1					
ANR	8476959	ExpressionStatement	"list = ( char * * ) gs_alloc_bytes ( mem , ( ( i + 1 ) + 1 ) * sizeof ( char * ) , ""build_strs"" )"	107:12:2987:3267	8476888	1	True				
ANR	8476960	AssignmentExpression	"list = ( char * * ) gs_alloc_bytes ( mem , ( ( i + 1 ) + 1 ) * sizeof ( char * ) , ""build_strs"" )"		8476888	0		=			
ANR	8476961	Identifier	list		8476888	0					
ANR	8476962	CastExpression	"( char * * ) gs_alloc_bytes ( mem , ( ( i + 1 ) + 1 ) * sizeof ( char * ) , ""build_strs"" )"		8476888	1					
ANR	8476963	CastTarget	char * *		8476888	0					
ANR	8476964	CallExpression	"gs_alloc_bytes ( mem , ( ( i + 1 ) + 1 ) * sizeof ( char * ) , ""build_strs"" )"		8476888	1					
ANR	8476965	Callee	gs_alloc_bytes		8476888	0					
ANR	8476966	Identifier	gs_alloc_bytes		8476888	0					
ANR	8476967	ArgumentList	mem		8476888	1					
ANR	8476968	Argument	mem		8476888	0					
ANR	8476969	Identifier	mem		8476888	0					
ANR	8476970	Argument	( ( i + 1 ) + 1 ) * sizeof ( char * )		8476888	1					
ANR	8476971	MultiplicativeExpression	( ( i + 1 ) + 1 ) * sizeof ( char * )		8476888	0		*			
ANR	8476972	AdditiveExpression	( i + 1 ) + 1		8476888	0		+			
ANR	8476973	AdditiveExpression	i + 1		8476888	0		+			
ANR	8476974	Identifier	i		8476888	0					
ANR	8476975	PrimaryExpression	1		8476888	1					
ANR	8476976	PrimaryExpression	1		8476888	1					
ANR	8476977	SizeofExpression	sizeof ( char * )		8476888	1					
ANR	8476978	Sizeof	sizeof		8476888	0					
ANR	8476979	SizeofOperand	char *		8476888	1					
ANR	8476980	Argument	"""build_strs"""		8476888	2					
ANR	8476981	PrimaryExpression	"""build_strs"""		8476888	0					
ANR	8476982	ElseStatement	else		8476888	0					
ANR	8476983	ExpressionStatement	"list = gs_resize_object ( mem , list , ( ( i + 1 ) + 1 ) * sizeof ( char * ) , ""build_strs"" )"	114:12:3294:3612	8476888	0	True				
ANR	8476984	AssignmentExpression	"list = gs_resize_object ( mem , list , ( ( i + 1 ) + 1 ) * sizeof ( char * ) , ""build_strs"" )"		8476888	0		=			
ANR	8476985	Identifier	list		8476888	0					
ANR	8476986	CallExpression	"gs_resize_object ( mem , list , ( ( i + 1 ) + 1 ) * sizeof ( char * ) , ""build_strs"" )"		8476888	1					
ANR	8476987	Callee	gs_resize_object		8476888	0					
ANR	8476988	Identifier	gs_resize_object		8476888	0					
ANR	8476989	ArgumentList	mem		8476888	1					
ANR	8476990	Argument	mem		8476888	0					
ANR	8476991	Identifier	mem		8476888	0					
ANR	8476992	Argument	list		8476888	1					
ANR	8476993	Identifier	list		8476888	0					
ANR	8476994	Argument	( ( i + 1 ) + 1 ) * sizeof ( char * )		8476888	2					
ANR	8476995	MultiplicativeExpression	( ( i + 1 ) + 1 ) * sizeof ( char * )		8476888	0		*			
ANR	8476996	AdditiveExpression	( i + 1 ) + 1		8476888	0		+			
ANR	8476997	AdditiveExpression	i + 1		8476888	0		+			
ANR	8476998	Identifier	i		8476888	0					
ANR	8476999	PrimaryExpression	1		8476888	1					
ANR	8477000	PrimaryExpression	1		8476888	1					
ANR	8477001	SizeofExpression	sizeof ( char * )		8476888	1					
ANR	8477002	Sizeof	sizeof		8476888	0					
ANR	8477003	SizeofOperand	char *		8476888	1					
ANR	8477004	Argument	"""build_strs"""		8476888	3					
ANR	8477005	PrimaryExpression	"""build_strs"""		8476888	0					
ANR	8477006	IfStatement	if ( list == NULL )		8476888	2					
ANR	8477007	Condition	list == NULL	120:12:3626:3637	8476888	0	True				
ANR	8477008	EqualityExpression	list == NULL		8476888	0		==			
ANR	8477009	Identifier	list		8476888	0					
ANR	8477010	Identifier	NULL		8476888	1					
ANR	8477011	CompoundStatement		31:26:1122:1122	8476888	1					
ANR	8477012	ExpressionStatement	"dmprintf ( mem , ""Fatal System Failure\\n"" )"	122:12:3726:3765	8476888	0	True				
ANR	8477013	CallExpression	"dmprintf ( mem , ""Fatal System Failure\\n"" )"		8476888	0					
ANR	8477014	Callee	dmprintf		8476888	0					
ANR	8477015	Identifier	dmprintf		8476888	0					
ANR	8477016	ArgumentList	mem		8476888	1					
ANR	8477017	Argument	mem		8476888	0					
ANR	8477018	Identifier	mem		8476888	0					
ANR	8477019	Argument	"""Fatal System Failure\\n"""		8476888	1					
ANR	8477020	PrimaryExpression	"""Fatal System Failure\\n"""		8476888	0					
ANR	8477021	ReturnStatement	return NULL ;	123:12:3779:3790	8476888	1	True				
ANR	8477022	Identifier	NULL		8476888	0					
ANR	8477023	ExpressionStatement	list [ i + 1 ] = ( char * ) NULL	126:8:3854:3880	8476888	3	True				
ANR	8477024	AssignmentExpression	list [ i + 1 ] = ( char * ) NULL		8476888	0		=			
ANR	8477025	ArrayIndexing	list [ i + 1 ]		8476888	0					
ANR	8477026	Identifier	list		8476888	0					
ANR	8477027	AdditiveExpression	i + 1		8476888	1		+			
ANR	8477028	Identifier	i		8476888	0					
ANR	8477029	PrimaryExpression	1		8476888	1					
ANR	8477030	CastExpression	( char * ) NULL		8476888	1					
ANR	8477031	CastTarget	char *		8476888	0					
ANR	8477032	Identifier	NULL		8476888	1					
ANR	8477033	ExpressionStatement	"list [ i ] = gs_alloc_bytes ( mem , end_path - start_path + 1 , ""build_strs"" )"	128:8:3934:4087	8476888	4	True				
ANR	8477034	AssignmentExpression	"list [ i ] = gs_alloc_bytes ( mem , end_path - start_path + 1 , ""build_strs"" )"		8476888	0		=			
ANR	8477035	ArrayIndexing	list [ i ]		8476888	0					
ANR	8477036	Identifier	list		8476888	0					
ANR	8477037	Identifier	i		8476888	1					
ANR	8477038	CallExpression	"gs_alloc_bytes ( mem , end_path - start_path + 1 , ""build_strs"" )"		8476888	1					
ANR	8477039	Callee	gs_alloc_bytes		8476888	0					
ANR	8477040	Identifier	gs_alloc_bytes		8476888	0					
ANR	8477041	ArgumentList	mem		8476888	1					
ANR	8477042	Argument	mem		8476888	0					
ANR	8477043	Identifier	mem		8476888	0					
ANR	8477044	Argument	end_path - start_path + 1		8476888	1					
ANR	8477045	AdditiveExpression	end_path - start_path + 1		8476888	0		-			
ANR	8477046	Identifier	end_path		8476888	0					
ANR	8477047	AdditiveExpression	start_path + 1		8476888	1		+			
ANR	8477048	Identifier	start_path		8476888	0					
ANR	8477049	PrimaryExpression	1		8476888	1					
ANR	8477050	Argument	"""build_strs"""		8476888	2					
ANR	8477051	PrimaryExpression	"""build_strs"""		8476888	0					
ANR	8477052	IfStatement	if ( list [ i ] == NULL )		8476888	5					
ANR	8477053	Condition	list [ i ] == NULL	132:12:4102:4116	8476888	0	True				
ANR	8477054	EqualityExpression	list [ i ] == NULL		8476888	0		==			
ANR	8477055	ArrayIndexing	list [ i ]		8476888	0					
ANR	8477056	Identifier	list		8476888	0					
ANR	8477057	Identifier	i		8476888	1					
ANR	8477058	Identifier	NULL		8476888	1					
ANR	8477059	CompoundStatement		43:29:1601:1601	8476888	1					
ANR	8477060	ExpressionStatement	"dmprintf ( mem , ""Fatal System Failure\\n"" )"	134:12:4205:4244	8476888	0	True				
ANR	8477061	CallExpression	"dmprintf ( mem , ""Fatal System Failure\\n"" )"		8476888	0					
ANR	8477062	Callee	dmprintf		8476888	0					
ANR	8477063	Identifier	dmprintf		8476888	0					
ANR	8477064	ArgumentList	mem		8476888	1					
ANR	8477065	Argument	mem		8476888	0					
ANR	8477066	Identifier	mem		8476888	0					
ANR	8477067	Argument	"""Fatal System Failure\\n"""		8476888	1					
ANR	8477068	PrimaryExpression	"""Fatal System Failure\\n"""		8476888	0					
ANR	8477069	ReturnStatement	return NULL ;	135:12:4258:4269	8476888	1	True				
ANR	8477070	Identifier	NULL		8476888	0					
ANR	8477071	ExpressionStatement	"memcpy ( list [ i ] , start_path , end_path - start_path )"	138:8:4290:4340	8476888	6	True				
ANR	8477072	CallExpression	"memcpy ( list [ i ] , start_path , end_path - start_path )"		8476888	0					
ANR	8477073	Callee	memcpy		8476888	0					
ANR	8477074	Identifier	memcpy		8476888	0					
ANR	8477075	ArgumentList	list [ i ]		8476888	1					
ANR	8477076	Argument	list [ i ]		8476888	0					
ANR	8477077	ArrayIndexing	list [ i ]		8476888	0					
ANR	8477078	Identifier	list		8476888	0					
ANR	8477079	Identifier	i		8476888	1					
ANR	8477080	Argument	start_path		8476888	1					
ANR	8477081	Identifier	start_path		8476888	0					
ANR	8477082	Argument	end_path - start_path		8476888	2					
ANR	8477083	AdditiveExpression	end_path - start_path		8476888	0		-			
ANR	8477084	Identifier	end_path		8476888	0					
ANR	8477085	Identifier	start_path		8476888	1					
ANR	8477086	ExpressionStatement	list [ i ] [ end_path - start_path ] = ( char ) NULL	139:8:4350:4393	8476888	7	True				
ANR	8477087	AssignmentExpression	list [ i ] [ end_path - start_path ] = ( char ) NULL		8476888	0		=			
ANR	8477088	ArrayIndexing	list [ i ] [ end_path - start_path ]		8476888	0					
ANR	8477089	ArrayIndexing	list [ i ]		8476888	0					
ANR	8477090	Identifier	list		8476888	0					
ANR	8477091	Identifier	i		8476888	1					
ANR	8477092	AdditiveExpression	end_path - start_path		8476888	1		-			
ANR	8477093	Identifier	end_path		8476888	0					
ANR	8477094	Identifier	start_path		8476888	1					
ANR	8477095	CastExpression	( char ) NULL		8476888	1					
ANR	8477096	CastTarget	char		8476888	0					
ANR	8477097	Identifier	NULL		8476888	1					
ANR	8477098	IfStatement	if ( * end_path == ( char ) NULL )		8476888	8					
ANR	8477099	Condition	* end_path == ( char ) NULL	141:12:4408:4430	8476888	0	True				
ANR	8477100	EqualityExpression	* end_path == ( char ) NULL		8476888	0		==			
ANR	8477101	UnaryOperationExpression	* end_path		8476888	0					
ANR	8477102	UnaryOperator	*		8476888	0					
ANR	8477103	Identifier	end_path		8476888	1					
ANR	8477104	CastExpression	( char ) NULL		8476888	1					
ANR	8477105	CastTarget	char		8476888	0					
ANR	8477106	Identifier	NULL		8476888	1					
ANR	8477107	BreakStatement	break ;	142:12:4445:4450	8476888	1	True				
ANR	8477108	ElseStatement	else		8476888	0					
ANR	8477109	CompoundStatement		54:13:1971:1971	8476888	0					
ANR	8477110	ExpressionStatement	start_path = end_path + 1	144:12:4547:4572	8476888	0	True				
ANR	8477111	AssignmentExpression	start_path = end_path + 1		8476888	0		=			
ANR	8477112	Identifier	start_path		8476888	0					
ANR	8477113	AdditiveExpression	end_path + 1		8476888	1		+			
ANR	8477114	Identifier	end_path		8476888	0					
ANR	8477115	PrimaryExpression	1		8476888	1					
ANR	8477116	ExpressionStatement	end_path = start_path	145:12:4586:4607	8476888	1	True				
ANR	8477117	AssignmentExpression	end_path = start_path		8476888	0		=			
ANR	8477118	Identifier	end_path		8476888	0					
ANR	8477119	Identifier	start_path		8476888	1					
ANR	8477120	IfStatement	if ( * end_path == '\\0' )		8476888	2					
ANR	8477121	Condition	* end_path == '\\0'	147:16:4692:4708	8476888	0	True				
ANR	8477122	EqualityExpression	* end_path == '\\0'		8476888	0		==			
ANR	8477123	UnaryOperationExpression	* end_path		8476888	0					
ANR	8477124	UnaryOperator	*		8476888	0					
ANR	8477125	Identifier	end_path		8476888	1					
ANR	8477126	PrimaryExpression	'\\0'		8476888	1					
ANR	8477127	BreakStatement	break ;	148:16:4727:4732	8476888	1	True				
ANR	8477128	ReturnStatement	return list ;	151:4:4754:4765	8476888	6	True				
ANR	8477129	Identifier	list		8476888	0					
ANR	8477130	ReturnType	static char * *		8476888	1					
ANR	8477131	Identifier	build_strs		8476888	2					
ANR	8477132	ParameterList	"gs_memory_t * mem , char * str , char separator"		8476888	3					
ANR	8477133	Parameter	gs_memory_t * mem	89:11:2471:2487	8476888	0	True				
ANR	8477134	ParameterType	gs_memory_t *		8476888	0					
ANR	8477135	Identifier	mem		8476888	1					
ANR	8477136	Parameter	char * str	89:30:2490:2498	8476888	1	True				
ANR	8477137	ParameterType	char *		8476888	0					
ANR	8477138	Identifier	str		8476888	1					
ANR	8477139	Parameter	char separator	89:41:2501:2514	8476888	2	True				
ANR	8477140	ParameterType	char		8476888	0					
ANR	8477141	Identifier	separator		8476888	1					
ANR	8477142	CFGEntryNode	ENTRY		8476888		True				
ANR	8477143	CFGExitNode	EXIT		8476888		True				
ANR	8477144	InfiniteForNode	true		8476888		True				
ANR	8477145	Symbol	gs_alloc_bytes		8476888						
ANR	8477146	Symbol	* * i		8476888						
ANR	8477147	Symbol	NULL		8476888						
ANR	8477148	Symbol	i		8476888						
ANR	8477149	Symbol	gs_resize_object		8476888						
ANR	8477150	Symbol	list		8476888						
ANR	8477151	Symbol	separator		8476888						
ANR	8477152	Symbol	* end_path		8476888						
ANR	8477153	Symbol	* start_path		8476888						
ANR	8477154	Symbol	str		8476888						
ANR	8477155	Symbol	* i		8476888						
ANR	8477156	Symbol	* * list		8476888						
ANR	8477157	Symbol	mem		8476888						
ANR	8477158	Symbol	* list		8476888						
ANR	8477159	Symbol	start_path		8476888						
ANR	8477160	Symbol	* str		8476888						
ANR	8477161	Symbol	end_path		8476888						
ANR	8477162	Function	free_strs	154:0:4770:5079							
ANR	8477163	FunctionDef	"free_strs (gs_memory_t * mem , char * * str_of_strs)"		8477162	0					
ANR	8477164	CompoundStatement		156:0:4831:5079	8477162	0					
ANR	8477165	IdentifierDeclStatement	int i ;	157:4:4837:4842	8477162	0	True				
ANR	8477166	IdentifierDecl	i		8477162	0					
ANR	8477167	IdentifierDeclType	int		8477162	0					
ANR	8477168	Identifier	i		8477162	1					
ANR	8477169	ForStatement	for ( i = 0 ; str_of_strs [ i ] ; i ++ )		8477162	1					
ANR	8477170	ForInit	i = 0 ;	159:9:4854:4859	8477162	0	True				
ANR	8477171	AssignmentExpression	i = 0		8477162	0		=			
ANR	8477172	Identifier	i		8477162	0					
ANR	8477173	PrimaryExpression	0		8477162	1					
ANR	8477174	Condition	str_of_strs [ i ]	159:16:4861:4874	8477162	1	True				
ANR	8477175	ArrayIndexing	str_of_strs [ i ]		8477162	0					
ANR	8477176	Identifier	str_of_strs		8477162	0					
ANR	8477177	Identifier	i		8477162	1					
ANR	8477178	PostIncDecOperationExpression	i ++	159:32:4877:4879	8477162	2	True				
ANR	8477179	Identifier	i		8477162	0					
ANR	8477180	IncDec	++		8477162	1					
ANR	8477181	ExpressionStatement	"gs_free_object ( mem , str_of_strs [ i ] , ""free_strs"" )"	161:8:4922:4970	8477162	3	True				
ANR	8477182	CallExpression	"gs_free_object ( mem , str_of_strs [ i ] , ""free_strs"" )"		8477162	0					
ANR	8477183	Callee	gs_free_object		8477162	0					
ANR	8477184	Identifier	gs_free_object		8477162	0					
ANR	8477185	ArgumentList	mem		8477162	1					
ANR	8477186	Argument	mem		8477162	0					
ANR	8477187	Identifier	mem		8477162	0					
ANR	8477188	Argument	str_of_strs [ i ]		8477162	1					
ANR	8477189	ArrayIndexing	str_of_strs [ i ]		8477162	0					
ANR	8477190	Identifier	str_of_strs		8477162	0					
ANR	8477191	Identifier	i		8477162	1					
ANR	8477192	Argument	"""free_strs"""		8477162	2					
ANR	8477193	PrimaryExpression	"""free_strs"""		8477162	0					
ANR	8477194	ExpressionStatement	"gs_free_object ( mem , str_of_strs , ""free_strs"" )"	163:4:5019:5064	8477162	2	True				
ANR	8477195	CallExpression	"gs_free_object ( mem , str_of_strs , ""free_strs"" )"		8477162	0					
ANR	8477196	Callee	gs_free_object		8477162	0					
ANR	8477197	Identifier	gs_free_object		8477162	0					
ANR	8477198	ArgumentList	mem		8477162	1					
ANR	8477199	Argument	mem		8477162	0					
ANR	8477200	Identifier	mem		8477162	0					
ANR	8477201	Argument	str_of_strs		8477162	1					
ANR	8477202	Identifier	str_of_strs		8477162	0					
ANR	8477203	Argument	"""free_strs"""		8477162	2					
ANR	8477204	PrimaryExpression	"""free_strs"""		8477162	0					
ANR	8477205	ReturnStatement	return ;	164:4:5070:5076	8477162	3	True				
ANR	8477206	ReturnType	static void		8477162	1					
ANR	8477207	Identifier	free_strs		8477162	2					
ANR	8477208	ParameterList	"gs_memory_t * mem , char * * str_of_strs"		8477162	3					
ANR	8477209	Parameter	gs_memory_t * mem	155:10:4792:4808	8477162	0	True				
ANR	8477210	ParameterType	gs_memory_t *		8477162	0					
ANR	8477211	Identifier	mem		8477162	1					
ANR	8477212	Parameter	char * * str_of_strs	155:29:4811:4828	8477162	1	True				
ANR	8477213	ParameterType	char * *		8477162	0					
ANR	8477214	Identifier	str_of_strs		8477162	1					
ANR	8477215	CFGEntryNode	ENTRY		8477162		True				
ANR	8477216	CFGExitNode	EXIT		8477162		True				
ANR	8477217	Symbol	str_of_strs		8477162						
ANR	8477218	Symbol	* i		8477162						
ANR	8477219	Symbol	mem		8477162						
ANR	8477220	Symbol	* str_of_strs		8477162						
ANR	8477221	Symbol	i		8477162						
ANR	8477222	Function	pl_ufst_get_list	172:0:5241:5607							
ANR	8477223	FunctionDef	"pl_ufst_get_list (gs_memory_t * mem , char * key , char * defaultval)"		8477222	0					
ANR	8477224	CompoundStatement		174:0:5321:5607	8477222	0					
ANR	8477225	IdentifierDeclStatement	char pathname [ MAXPATHLEN ] ;	175:4:5327:5352	8477222	0	True				
ANR	8477226	IdentifierDecl	pathname [ MAXPATHLEN ]		8477222	0					
ANR	8477227	IdentifierDeclType	char [ MAXPATHLEN ]		8477222	0					
ANR	8477228	Identifier	pathname		8477222	1					
ANR	8477229	Identifier	MAXPATHLEN		8477222	2					
ANR	8477230	IdentifierDeclStatement	int pathlen = sizeof ( pathname ) ;	177:4:5359:5389	8477222	1	True				
ANR	8477231	IdentifierDecl	pathlen = sizeof ( pathname )		8477222	0					
ANR	8477232	IdentifierDeclType	int		8477222	0					
ANR	8477233	Identifier	pathlen		8477222	1					
ANR	8477234	AssignmentExpression	pathlen = sizeof ( pathname )		8477222	2		=			
ANR	8477235	Identifier	pathlen		8477222	0					
ANR	8477236	SizeofExpression	sizeof ( pathname )		8477222	1					
ANR	8477237	Sizeof	sizeof		8477222	0					
ANR	8477238	SizeofOperand	pathname		8477222	1					
ANR	8477239	IfStatement	"if ( gp_getenv ( key , pathname , & pathlen ) != 0 )"		8477222	2					
ANR	8477240	Condition	"gp_getenv ( key , pathname , & pathlen ) != 0"	179:8:5400:5438	8477222	0	True				
ANR	8477241	EqualityExpression	"gp_getenv ( key , pathname , & pathlen ) != 0"		8477222	0		!=			
ANR	8477242	CallExpression	"gp_getenv ( key , pathname , & pathlen )"		8477222	0					
ANR	8477243	Callee	gp_getenv		8477222	0					
ANR	8477244	Identifier	gp_getenv		8477222	0					
ANR	8477245	ArgumentList	key		8477222	1					
ANR	8477246	Argument	key		8477222	0					
ANR	8477247	Identifier	key		8477222	0					
ANR	8477248	Argument	pathname		8477222	1					
ANR	8477249	Identifier	pathname		8477222	0					
ANR	8477250	Argument	& pathlen		8477222	2					
ANR	8477251	UnaryOperationExpression	& pathlen		8477222	0					
ANR	8477252	UnaryOperator	&		8477222	0					
ANR	8477253	Identifier	pathlen		8477222	1					
ANR	8477254	PrimaryExpression	0		8477222	1					
ANR	8477255	ReturnStatement	"return build_strs ( mem , defaultval , ':' ) ;"	181:8:5486:5525	8477222	1	True				
ANR	8477256	CallExpression	"build_strs ( mem , defaultval , ':' )"		8477222	0					
ANR	8477257	Callee	build_strs		8477222	0					
ANR	8477258	Identifier	build_strs		8477222	0					
ANR	8477259	ArgumentList	mem		8477222	1					
ANR	8477260	Argument	mem		8477222	0					
ANR	8477261	Identifier	mem		8477222	0					
ANR	8477262	Argument	defaultval		8477222	1					
ANR	8477263	Identifier	defaultval		8477222	0					
ANR	8477264	Argument	':'		8477222	2					
ANR	8477265	PrimaryExpression	':'		8477222	0					
ANR	8477266	ElseStatement	else		8477222	0					
ANR	8477267	ReturnStatement	"return build_strs ( mem , pathname , gp_file_name_list_separator ) ;"	183:8:5544:5605	8477222	0	True				
ANR	8477268	CallExpression	"build_strs ( mem , pathname , gp_file_name_list_separator )"		8477222	0					
ANR	8477269	Callee	build_strs		8477222	0					
ANR	8477270	Identifier	build_strs		8477222	0					
ANR	8477271	ArgumentList	mem		8477222	1					
ANR	8477272	Argument	mem		8477222	0					
ANR	8477273	Identifier	mem		8477222	0					
ANR	8477274	Argument	pathname		8477222	1					
ANR	8477275	Identifier	pathname		8477222	0					
ANR	8477276	Argument	gp_file_name_list_separator		8477222	2					
ANR	8477277	Identifier	gp_file_name_list_separator		8477222	0					
ANR	8477278	ReturnType	static char * *		8477222	1					
ANR	8477279	Identifier	pl_ufst_get_list		8477222	2					
ANR	8477280	ParameterList	"gs_memory_t * mem , char * key , char * defaultval"		8477222	3					
ANR	8477281	Parameter	gs_memory_t * mem	173:17:5273:5289	8477222	0	True				
ANR	8477282	ParameterType	gs_memory_t *		8477222	0					
ANR	8477283	Identifier	mem		8477222	1					
ANR	8477284	Parameter	char * key	173:36:5292:5300	8477222	1	True				
ANR	8477285	ParameterType	char *		8477222	0					
ANR	8477286	Identifier	key		8477222	1					
ANR	8477287	Parameter	char * defaultval	173:47:5303:5318	8477222	2	True				
ANR	8477288	ParameterType	char *		8477222	0					
ANR	8477289	Identifier	defaultval		8477222	1					
ANR	8477290	CFGEntryNode	ENTRY		8477222		True				
ANR	8477291	CFGExitNode	EXIT		8477222		True				
ANR	8477292	Symbol	defaultval		8477222						
ANR	8477293	Symbol	pathlen		8477222						
ANR	8477294	Symbol	mem		8477222						
ANR	8477295	Symbol	build_strs		8477222						
ANR	8477296	Symbol	& pathlen		8477222						
ANR	8477297	Symbol	gp_getenv		8477222						
ANR	8477298	Symbol	gp_file_name_list_separator		8477222						
ANR	8477299	Symbol	key		8477222						
ANR	8477300	Symbol	pathname		8477222						
ANR	8477301	Function	pl_ufst_root_dir	186:0:5610:5880							
ANR	8477302	FunctionDef	"pl_ufst_root_dir (char * pathname , int pathlen)"		8477301	0					
ANR	8477303	CompoundStatement		188:0:5661:5880	8477301	0					
ANR	8477304	IfStatement	"if ( gp_getenv ( ""UFSTFONTDIR"" , pathname , & pathlen ) != 0 )"		8477301	0					
ANR	8477305	Condition	"gp_getenv ( ""UFSTFONTDIR"" , pathname , & pathlen ) != 0"	191:8:5778:5826	8477301	0	True				
ANR	8477306	EqualityExpression	"gp_getenv ( ""UFSTFONTDIR"" , pathname , & pathlen ) != 0"		8477301	0		!=			
ANR	8477307	CallExpression	"gp_getenv ( ""UFSTFONTDIR"" , pathname , & pathlen )"		8477301	0					
ANR	8477308	Callee	gp_getenv		8477301	0					
ANR	8477309	Identifier	gp_getenv		8477301	0					
ANR	8477310	ArgumentList	"""UFSTFONTDIR"""		8477301	1					
ANR	8477311	Argument	"""UFSTFONTDIR"""		8477301	0					
ANR	8477312	PrimaryExpression	"""UFSTFONTDIR"""		8477301	0					
ANR	8477313	Argument	pathname		8477301	1					
ANR	8477314	Identifier	pathname		8477301	0					
ANR	8477315	Argument	& pathlen		8477301	2					
ANR	8477316	UnaryOperationExpression	& pathlen		8477301	0					
ANR	8477317	UnaryOperator	&		8477301	0					
ANR	8477318	Identifier	pathlen		8477301	1					
ANR	8477319	PrimaryExpression	0		8477301	1					
ANR	8477320	ExpressionStatement	"strcpy ( pathname , UFSTFONTDIR )"	192:8:5837:5866	8477301	1	True				
ANR	8477321	CallExpression	"strcpy ( pathname , UFSTFONTDIR )"		8477301	0					
ANR	8477322	Callee	strcpy		8477301	0					
ANR	8477323	Identifier	strcpy		8477301	0					
ANR	8477324	ArgumentList	pathname		8477301	1					
ANR	8477325	Argument	pathname		8477301	0					
ANR	8477326	Identifier	pathname		8477301	0					
ANR	8477327	Argument	UFSTFONTDIR		8477301	1					
ANR	8477328	Identifier	UFSTFONTDIR		8477301	0					
ANR	8477329	ReturnStatement	return ;	193:4:5872:5878	8477301	1	True				
ANR	8477330	ReturnType	void		8477301	1					
ANR	8477331	Identifier	pl_ufst_root_dir		8477301	2					
ANR	8477332	ParameterList	"char * pathname , int pathlen"		8477301	3					
ANR	8477333	Parameter	char * pathname	187:17:5632:5645	8477301	0	True				
ANR	8477334	ParameterType	char *		8477301	0					
ANR	8477335	Identifier	pathname		8477301	1					
ANR	8477336	Parameter	int pathlen	187:33:5648:5658	8477301	1	True				
ANR	8477337	ParameterType	int		8477301	0					
ANR	8477338	Identifier	pathlen		8477301	1					
ANR	8477339	CFGEntryNode	ENTRY		8477301		True				
ANR	8477340	CFGExitNode	EXIT		8477301		True				
ANR	8477341	Symbol	UFSTFONTDIR		8477301						
ANR	8477342	Symbol	pathlen		8477301						
ANR	8477343	Symbol	& pathlen		8477301						
ANR	8477344	Symbol	gp_getenv		8477301						
ANR	8477345	Symbol	pathname		8477301						
ANR	8477346	Function	pl_check_fonts	198:0:5962:7727							
ANR	8477347	FunctionDef	"pl_check_fonts (const gs_memory_t * mem , pl_dict_t * pfontdict , bool use_unicode_names_for_keys)"		8477346	0					
ANR	8477348	CompoundStatement		201:0:6085:7727	8477346	0					
ANR	8477349	IdentifierDeclStatement	int j ;	202:4:6091:6096	8477346	0	True				
ANR	8477350	IdentifierDecl	j		8477346	0					
ANR	8477351	IdentifierDeclType	int		8477346	0					
ANR	8477352	Identifier	j		8477346	1					
ANR	8477353	ForStatement	for ( j = 0 ; strlen ( resident_table [ j ] . full_font_name ) ; j ++ )		8477346	1					
ANR	8477354	ForInit	j = 0 ;	204:9:6108:6113	8477346	0	True				
ANR	8477355	AssignmentExpression	j = 0		8477346	0		=			
ANR	8477356	Identifier	j		8477346	0					
ANR	8477357	PrimaryExpression	0		8477346	1					
ANR	8477358	Condition	strlen ( resident_table [ j ] . full_font_name )	204:16:6115:6154	8477346	1	True				
ANR	8477359	CallExpression	strlen ( resident_table [ j ] . full_font_name )		8477346	0					
ANR	8477360	Callee	strlen		8477346	0					
ANR	8477361	Identifier	strlen		8477346	0					
ANR	8477362	ArgumentList	resident_table [ j ] . full_font_name		8477346	1					
ANR	8477363	Argument	resident_table [ j ] . full_font_name		8477346	0					
ANR	8477364	MemberAccess	resident_table [ j ] . full_font_name		8477346	0					
ANR	8477365	ArrayIndexing	resident_table [ j ]		8477346	0					
ANR	8477366	Identifier	resident_table		8477346	0					
ANR	8477367	Identifier	j		8477346	1					
ANR	8477368	Identifier	full_font_name		8477346	1					
ANR	8477369	PostIncDecOperationExpression	j ++	204:58:6157:6159	8477346	2	True				
ANR	8477370	Identifier	j		8477346	0					
ANR	8477371	IncDec	++		8477346	1					
ANR	8477372	CompoundStatement		5:8:86:97	8477346	3					
ANR	8477373	IdentifierDeclStatement	void * value ;	205:8:6172:6183	8477346	0	True				
ANR	8477374	IdentifierDecl	* value		8477346	0					
ANR	8477375	IdentifierDeclType	void *		8477346	0					
ANR	8477376	Identifier	value		8477346	1					
ANR	8477377	IfStatement	if ( use_unicode_names_for_keys )		8477346	1					
ANR	8477378	Condition	use_unicode_names_for_keys	208:12:6253:6278	8477346	0	True				
ANR	8477379	Identifier	use_unicode_names_for_keys		8477346	0					
ANR	8477380	CompoundStatement		8:40:195:195	8477346	1					
ANR	8477381	IfStatement	"if ( ! pl_dict_lookup ( pfontdict , resident_table [ j ] . unicode_fontname , sizeof ( resident_table [ j ] . unicode_fontname ) , & value , true , NULL ) )"		8477346	0					
ANR	8477382	Condition	"! pl_dict_lookup ( pfontdict , resident_table [ j ] . unicode_fontname , sizeof ( resident_table [ j ] . unicode_fontname ) , & value , true , NULL )"	209:16:6299:6552	8477346	0	True				
ANR	8477383	UnaryOperationExpression	"! pl_dict_lookup ( pfontdict , resident_table [ j ] . unicode_fontname , sizeof ( resident_table [ j ] . unicode_fontname ) , & value , true , NULL )"		8477346	0					
ANR	8477384	UnaryOperator	!		8477346	0					
ANR	8477385	CallExpression	"pl_dict_lookup ( pfontdict , resident_table [ j ] . unicode_fontname , sizeof ( resident_table [ j ] . unicode_fontname ) , & value , true , NULL )"		8477346	1					
ANR	8477386	Callee	pl_dict_lookup		8477346	0					
ANR	8477387	Identifier	pl_dict_lookup		8477346	0					
ANR	8477388	ArgumentList	pfontdict		8477346	1					
ANR	8477389	Argument	pfontdict		8477346	0					
ANR	8477390	Identifier	pfontdict		8477346	0					
ANR	8477391	Argument	resident_table [ j ] . unicode_fontname		8477346	1					
ANR	8477392	MemberAccess	resident_table [ j ] . unicode_fontname		8477346	0					
ANR	8477393	ArrayIndexing	resident_table [ j ]		8477346	0					
ANR	8477394	Identifier	resident_table		8477346	0					
ANR	8477395	Identifier	j		8477346	1					
ANR	8477396	Identifier	unicode_fontname		8477346	1					
ANR	8477397	Argument	sizeof ( resident_table [ j ] . unicode_fontname )		8477346	2					
ANR	8477398	SizeofExpression	sizeof ( resident_table [ j ] . unicode_fontname )		8477346	0					
ANR	8477399	Sizeof	sizeof		8477346	0					
ANR	8477400	MemberAccess	resident_table [ j ] . unicode_fontname		8477346	1					
ANR	8477401	ArrayIndexing	resident_table [ j ]		8477346	0					
ANR	8477402	Identifier	resident_table		8477346	0					
ANR	8477403	Identifier	j		8477346	1					
ANR	8477404	Identifier	unicode_fontname		8477346	1					
ANR	8477405	Argument	& value		8477346	3					
ANR	8477406	UnaryOperationExpression	& value		8477346	0					
ANR	8477407	UnaryOperator	&		8477346	0					
ANR	8477408	Identifier	value		8477346	1					
ANR	8477409	Argument	true		8477346	4					
ANR	8477410	Identifier	true		8477346	0					
ANR	8477411	Argument	NULL		8477346	5					
ANR	8477412	Identifier	NULL		8477346	0					
ANR	8477413	CompoundStatement		14:16:514:519	8477346	1					
ANR	8477414	IdentifierDeclStatement	int i ;	214:16:6600:6605	8477346	0	True				
ANR	8477415	IdentifierDecl	i		8477346	0					
ANR	8477416	IdentifierDeclType	int		8477346	0					
ANR	8477417	Identifier	i		8477346	1					
ANR	8477418	ExpressionStatement	"dmprintf ( mem , ""Font with unicode key: "" )"	216:16:6624:6664	8477346	1	True				
ANR	8477419	CallExpression	"dmprintf ( mem , ""Font with unicode key: "" )"		8477346	0					
ANR	8477420	Callee	dmprintf		8477346	0					
ANR	8477421	Identifier	dmprintf		8477346	0					
ANR	8477422	ArgumentList	mem		8477346	1					
ANR	8477423	Argument	mem		8477346	0					
ANR	8477424	Identifier	mem		8477346	0					
ANR	8477425	Argument	"""Font with unicode key: """		8477346	1					
ANR	8477426	PrimaryExpression	"""Font with unicode key: """		8477346	0					
ANR	8477427	ForStatement	for ( i = 0 ; i < sizeof ( resident_table [ j ] . unicode_fontname ) / sizeof ( resident_table [ j ] . unicode_fontname [ 0 ] ) ; i ++ )		8477346	2					
ANR	8477428	ForInit	i = 0 ;	217:21:6687:6692	8477346	0	True				
ANR	8477429	AssignmentExpression	i = 0		8477346	0		=			
ANR	8477430	Identifier	i		8477346	0					
ANR	8477431	PrimaryExpression	0		8477346	1					
ANR	8477432	Condition	i < sizeof ( resident_table [ j ] . unicode_fontname ) / sizeof ( resident_table [ j ] . unicode_fontname [ 0 ] )	218:21:6715:6850	8477346	1	True				
ANR	8477433	RelationalExpression	i < sizeof ( resident_table [ j ] . unicode_fontname ) / sizeof ( resident_table [ j ] . unicode_fontname [ 0 ] )		8477346	0		<			
ANR	8477434	Identifier	i		8477346	0					
ANR	8477435	MultiplicativeExpression	sizeof ( resident_table [ j ] . unicode_fontname ) / sizeof ( resident_table [ j ] . unicode_fontname [ 0 ] )		8477346	1		/			
ANR	8477436	SizeofExpression	sizeof ( resident_table [ j ] . unicode_fontname )		8477346	0					
ANR	8477437	Sizeof	sizeof		8477346	0					
ANR	8477438	MemberAccess	resident_table [ j ] . unicode_fontname		8477346	1					
ANR	8477439	ArrayIndexing	resident_table [ j ]		8477346	0					
ANR	8477440	Identifier	resident_table		8477346	0					
ANR	8477441	Identifier	j		8477346	1					
ANR	8477442	Identifier	unicode_fontname		8477346	1					
ANR	8477443	SizeofExpression	sizeof ( resident_table [ j ] . unicode_fontname [ 0 ] )		8477346	1					
ANR	8477444	Sizeof	sizeof		8477346	0					
ANR	8477445	ArrayIndexing	resident_table [ j ] . unicode_fontname [ 0 ]		8477346	1					
ANR	8477446	MemberAccess	resident_table [ j ] . unicode_fontname		8477346	0					
ANR	8477447	ArrayIndexing	resident_table [ j ]		8477346	0					
ANR	8477448	Identifier	resident_table		8477346	0					
ANR	8477449	Identifier	j		8477346	1					
ANR	8477450	Identifier	unicode_fontname		8477346	1					
ANR	8477451	PrimaryExpression	0		8477346	1					
ANR	8477452	PostIncDecOperationExpression	i ++	220:68:6853:6855	8477346	2	True				
ANR	8477453	Identifier	i		8477346	0					
ANR	8477454	IncDec	++		8477346	1					
ANR	8477455	CompoundStatement		20:73:772:772	8477346	3					
ANR	8477456	ExpressionStatement	"dmprintf1 ( mem , ""%c"" , ( char ) resident_table [ j ] . unicode_fontname [ i ] )"	221:20:6880:6975	8477346	0	True				
ANR	8477457	CallExpression	"dmprintf1 ( mem , ""%c"" , ( char ) resident_table [ j ] . unicode_fontname [ i ] )"		8477346	0					
ANR	8477458	Callee	dmprintf1		8477346	0					
ANR	8477459	Identifier	dmprintf1		8477346	0					
ANR	8477460	ArgumentList	mem		8477346	1					
ANR	8477461	Argument	mem		8477346	0					
ANR	8477462	Identifier	mem		8477346	0					
ANR	8477463	Argument	"""%c"""		8477346	1					
ANR	8477464	PrimaryExpression	"""%c"""		8477346	0					
ANR	8477465	Argument	( char ) resident_table [ j ] . unicode_fontname [ i ]		8477346	2					
ANR	8477466	CastExpression	( char ) resident_table [ j ] . unicode_fontname [ i ]		8477346	0					
ANR	8477467	CastTarget	char		8477346	0					
ANR	8477468	ArrayIndexing	resident_table [ j ] . unicode_fontname [ i ]		8477346	1					
ANR	8477469	MemberAccess	resident_table [ j ] . unicode_fontname		8477346	0					
ANR	8477470	ArrayIndexing	resident_table [ j ]		8477346	0					
ANR	8477471	Identifier	resident_table		8477346	0					
ANR	8477472	Identifier	j		8477346	1					
ANR	8477473	Identifier	unicode_fontname		8477346	1					
ANR	8477474	Identifier	i		8477346	1					
ANR	8477475	ExpressionStatement	"dmprintf1 ( mem , "" not available in font dictionary, resident table position: %d\\n"" , j )"	224:16:7011:7148	8477346	3	True				
ANR	8477476	CallExpression	"dmprintf1 ( mem , "" not available in font dictionary, resident table position: %d\\n"" , j )"		8477346	0					
ANR	8477477	Callee	dmprintf1		8477346	0					
ANR	8477478	Identifier	dmprintf1		8477346	0					
ANR	8477479	ArgumentList	mem		8477346	1					
ANR	8477480	Argument	mem		8477346	0					
ANR	8477481	Identifier	mem		8477346	0					
ANR	8477482	Argument	""" not available in font dictionary, resident table position: %d\\n"""		8477346	1					
ANR	8477483	PrimaryExpression	""" not available in font dictionary, resident table position: %d\\n"""		8477346	0					
ANR	8477484	Argument	j		8477346	2					
ANR	8477485	Identifier	j		8477346	0					
ANR	8477486	ElseStatement	else		8477346	0					
ANR	8477487	CompoundStatement		29:12:1107:1118	8477346	0					
ANR	8477488	IdentifierDeclStatement	byte key [ 3 ] ;	229:12:7193:7204	8477346	0	True				
ANR	8477489	IdentifierDecl	key [ 3 ]		8477346	0					
ANR	8477490	IdentifierDeclType	byte [ 3 ]		8477346	0					
ANR	8477491	Identifier	key		8477346	1					
ANR	8477492	PrimaryExpression	3		8477346	2					
ANR	8477493	ExpressionStatement	key [ 2 ] = ( byte ) j	231:12:7219:7236	8477346	1	True				
ANR	8477494	AssignmentExpression	key [ 2 ] = ( byte ) j		8477346	0		=			
ANR	8477495	ArrayIndexing	key [ 2 ]		8477346	0					
ANR	8477496	Identifier	key		8477346	0					
ANR	8477497	PrimaryExpression	2		8477346	1					
ANR	8477498	CastExpression	( byte ) j		8477346	1					
ANR	8477499	CastTarget	byte		8477346	0					
ANR	8477500	Identifier	j		8477346	1					
ANR	8477501	ExpressionStatement	key [ 0 ] = key [ 1 ] = 0	232:12:7250:7269	8477346	2	True				
ANR	8477502	AssignmentExpression	key [ 0 ] = key [ 1 ] = 0		8477346	0		=			
ANR	8477503	ArrayIndexing	key [ 0 ]		8477346	0					
ANR	8477504	Identifier	key		8477346	0					
ANR	8477505	PrimaryExpression	0		8477346	1					
ANR	8477506	AssignmentExpression	key [ 1 ] = 0		8477346	1		=			
ANR	8477507	ArrayIndexing	key [ 1 ]		8477346	0					
ANR	8477508	Identifier	key		8477346	0					
ANR	8477509	PrimaryExpression	1		8477346	1					
ANR	8477510	PrimaryExpression	0		8477346	1					
ANR	8477511	IfStatement	"if ( ! pl_dict_lookup ( pfontdict , key , sizeof ( key ) , & value , true , NULL ) )"		8477346	3					
ANR	8477512	Condition	"! pl_dict_lookup ( pfontdict , key , sizeof ( key ) , & value , true , NULL )"	233:16:7287:7478	8477346	0	True				
ANR	8477513	UnaryOperationExpression	"! pl_dict_lookup ( pfontdict , key , sizeof ( key ) , & value , true , NULL )"		8477346	0					
ANR	8477514	UnaryOperator	!		8477346	0					
ANR	8477515	CallExpression	"pl_dict_lookup ( pfontdict , key , sizeof ( key ) , & value , true , NULL )"		8477346	1					
ANR	8477516	Callee	pl_dict_lookup		8477346	0					
ANR	8477517	Identifier	pl_dict_lookup		8477346	0					
ANR	8477518	ArgumentList	pfontdict		8477346	1					
ANR	8477519	Argument	pfontdict		8477346	0					
ANR	8477520	Identifier	pfontdict		8477346	0					
ANR	8477521	Argument	key		8477346	1					
ANR	8477522	Identifier	key		8477346	0					
ANR	8477523	Argument	sizeof ( key )		8477346	2					
ANR	8477524	SizeofExpression	sizeof ( key )		8477346	0					
ANR	8477525	Sizeof	sizeof		8477346	0					
ANR	8477526	SizeofOperand	key		8477346	1					
ANR	8477527	Argument	& value		8477346	3					
ANR	8477528	UnaryOperationExpression	& value		8477346	0					
ANR	8477529	UnaryOperator	&		8477346	0					
ANR	8477530	Identifier	value		8477346	1					
ANR	8477531	Argument	true		8477346	4					
ANR	8477532	Identifier	true		8477346	0					
ANR	8477533	Argument	NULL		8477346	5					
ANR	8477534	Identifier	NULL		8477346	0					
ANR	8477535	ExpressionStatement	"dmprintf2 ( mem , ""%s not available in font dictionary, resident table position: %d\\n"" , resident_table [ j ] . full_font_name , j )"	238:16:7524:7697	8477346	1	True				
ANR	8477536	CallExpression	"dmprintf2 ( mem , ""%s not available in font dictionary, resident table position: %d\\n"" , resident_table [ j ] . full_font_name , j )"		8477346	0					
ANR	8477537	Callee	dmprintf2		8477346	0					
ANR	8477538	Identifier	dmprintf2		8477346	0					
ANR	8477539	ArgumentList	mem		8477346	1					
ANR	8477540	Argument	mem		8477346	0					
ANR	8477541	Identifier	mem		8477346	0					
ANR	8477542	Argument	"""%s not available in font dictionary, resident table position: %d\\n"""		8477346	1					
ANR	8477543	PrimaryExpression	"""%s not available in font dictionary, resident table position: %d\\n"""		8477346	0					
ANR	8477544	Argument	resident_table [ j ] . full_font_name		8477346	2					
ANR	8477545	MemberAccess	resident_table [ j ] . full_font_name		8477346	0					
ANR	8477546	ArrayIndexing	resident_table [ j ]		8477346	0					
ANR	8477547	Identifier	resident_table		8477346	0					
ANR	8477548	Identifier	j		8477346	1					
ANR	8477549	Identifier	full_font_name		8477346	1					
ANR	8477550	Argument	j		8477346	3					
ANR	8477551	Identifier	j		8477346	0					
ANR	8477552	ReturnStatement	return ;	243:4:7719:7725	8477346	2	True				
ANR	8477553	ReturnType	static void		8477346	1					
ANR	8477554	Identifier	pl_check_fonts		8477346	2					
ANR	8477555	ParameterList	"const gs_memory_t * mem , pl_dict_t * pfontdict , bool use_unicode_names_for_keys"		8477346	3					
ANR	8477556	Parameter	const gs_memory_t * mem	199:15:5989:6011	8477346	0	True				
ANR	8477557	ParameterType	const gs_memory_t *		8477346	0					
ANR	8477558	Identifier	mem		8477346	1					
ANR	8477559	Parameter	pl_dict_t * pfontdict	199:40:6014:6034	8477346	1	True				
ANR	8477560	ParameterType	pl_dict_t *		8477346	0					
ANR	8477561	Identifier	pfontdict		8477346	1					
ANR	8477562	Parameter	bool use_unicode_names_for_keys	200:15:6052:6082	8477346	2	True				
ANR	8477563	ParameterType	bool		8477346	0					
ANR	8477564	Identifier	use_unicode_names_for_keys		8477346	1					
ANR	8477565	CFGEntryNode	ENTRY		8477346		True				
ANR	8477566	CFGExitNode	EXIT		8477346		True				
ANR	8477567	Symbol	* * j		8477346						
ANR	8477568	Symbol	resident_table [ j ] . unicode_fontname		8477346						
ANR	8477569	Symbol	NULL		8477346						
ANR	8477570	Symbol	& value		8477346						
ANR	8477571	Symbol	* resident_table [ j ] . unicode_fontname		8477346						
ANR	8477572	Symbol	resident_table [ j ] . full_font_name		8477346						
ANR	8477573	Symbol	* resident_table		8477346						
ANR	8477574	Symbol	i		8477346						
ANR	8477575	Symbol	* key		8477346						
ANR	8477576	Symbol	j		8477346						
ANR	8477577	Symbol	use_unicode_names_for_keys		8477346						
ANR	8477578	Symbol	* * resident_table		8477346						
ANR	8477579	Symbol	strlen		8477346						
ANR	8477580	Symbol	* i		8477346						
ANR	8477581	Symbol	mem		8477346						
ANR	8477582	Symbol	* j		8477346						
ANR	8477583	Symbol	pfontdict		8477346						
ANR	8477584	Symbol	true		8477346						
ANR	8477585	Symbol	pl_dict_lookup		8477346						
ANR	8477586	Symbol	value		8477346						
ANR	8477587	Symbol	key		8477346						
ANR	8477588	Symbol	resident_table		8477346						
ANR	8477589	Function	pl_load_built_in_fonts	247:0:7737:14737							
ANR	8477590	FunctionDef	"pl_load_built_in_fonts (const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage , bool use_unicode_names_for_keys)"		8477589	0					
ANR	8477591	CompoundStatement		251:0:7940:14737	8477589	0					
ANR	8477592	IdentifierDeclStatement	"int i , k ;"	252:4:7946:7954	8477589	0	True				
ANR	8477593	IdentifierDecl	i		8477589	0					
ANR	8477594	IdentifierDeclType	int		8477589	0					
ANR	8477595	Identifier	i		8477589	1					
ANR	8477596	IdentifierDecl	k		8477589	1					
ANR	8477597	IdentifierDeclType	int		8477589	0					
ANR	8477598	Identifier	k		8477589	1					
ANR	8477599	IdentifierDeclStatement	"UW16 bSize , status = 0 ;"	253:4:7960:7982	8477589	1	True				
ANR	8477600	IdentifierDecl	bSize		8477589	0					
ANR	8477601	IdentifierDeclType	UW16		8477589	0					
ANR	8477602	Identifier	bSize		8477589	1					
ANR	8477603	IdentifierDecl	status = 0		8477589	1					
ANR	8477604	IdentifierDeclType	UW16		8477589	0					
ANR	8477605	Identifier	status		8477589	1					
ANR	8477606	AssignmentExpression	status = 0		8477589	2		=			
ANR	8477607	Identifier	status		8477589	0					
ANR	8477608	PrimaryExpression	0		8477589	1					
ANR	8477609	IdentifierDeclStatement	byte key [ 3 ] ;	254:4:7988:7999	8477589	2	True				
ANR	8477610	IdentifierDecl	key [ 3 ]		8477589	0					
ANR	8477611	IdentifierDeclType	byte [ 3 ]		8477589	0					
ANR	8477612	Identifier	key		8477589	1					
ANR	8477613	PrimaryExpression	3		8477589	2					
ANR	8477614	IdentifierDeclStatement	UB8 pthnm [ 1024 ] ;	255:4:8005:8020	8477589	3	True				
ANR	8477615	IdentifierDecl	pthnm [ 1024 ]		8477589	0					
ANR	8477616	IdentifierDeclType	UB8 [ 1024 ]		8477589	0					
ANR	8477617	Identifier	pthnm		8477589	1					
ANR	8477618	PrimaryExpression	1024		8477589	2					
ANR	8477619	IdentifierDeclStatement	UB8 ufst_root_dir [ 1024 ] ;	256:4:8026:8049	8477589	4	True				
ANR	8477620	IdentifierDecl	ufst_root_dir [ 1024 ]		8477589	0					
ANR	8477621	IdentifierDeclType	UB8 [ 1024 ]		8477589	0					
ANR	8477622	Identifier	ufst_root_dir		8477589	1					
ANR	8477623	PrimaryExpression	1024		8477589	2					
ANR	8477624	IdentifierDeclStatement	char * * fcos ;	257:4:8055:8066	8477589	5	True				
ANR	8477625	IdentifierDecl	* * fcos		8477589	0					
ANR	8477626	IdentifierDeclType	char * *		8477589	0					
ANR	8477627	Identifier	fcos		8477589	1					
ANR	8477628	IdentifierDeclStatement	char * * plugins ;	258:4:8072:8086	8477589	6	True				
ANR	8477629	IdentifierDecl	* * plugins		8477589	0					
ANR	8477630	IdentifierDeclType	char * *		8477589	0					
ANR	8477631	Identifier	plugins		8477589	1					
ANR	8477632	IfStatement	"if ( pl_dict_length ( pfontdict , true ) > 0 )"		8477589	7					
ANR	8477633	Condition	"pl_dict_length ( pfontdict , true ) > 0"	261:8:8139:8173	8477589	0	True				
ANR	8477634	RelationalExpression	"pl_dict_length ( pfontdict , true ) > 0"		8477589	0		>			
ANR	8477635	CallExpression	"pl_dict_length ( pfontdict , true )"		8477589	0					
ANR	8477636	Callee	pl_dict_length		8477589	0					
ANR	8477637	Identifier	pl_dict_length		8477589	0					
ANR	8477638	ArgumentList	pfontdict		8477589	1					
ANR	8477639	Argument	pfontdict		8477589	0					
ANR	8477640	Identifier	pfontdict		8477589	0					
ANR	8477641	Argument	true		8477589	1					
ANR	8477642	Identifier	true		8477589	0					
ANR	8477643	PrimaryExpression	0		8477589	1					
ANR	8477644	ReturnStatement	return true ;	262:8:8184:8195	8477589	1	True				
ANR	8477645	Identifier	true		8477589	0					
ANR	8477646	ExpressionStatement	"pl_ufst_root_dir ( ufst_root_dir , sizeof ( ufst_root_dir ) )"	264:4:8202:8256	8477589	8	True				
ANR	8477647	CallExpression	"pl_ufst_root_dir ( ufst_root_dir , sizeof ( ufst_root_dir ) )"		8477589	0					
ANR	8477648	Callee	pl_ufst_root_dir		8477589	0					
ANR	8477649	Identifier	pl_ufst_root_dir		8477589	0					
ANR	8477650	ArgumentList	ufst_root_dir		8477589	1					
ANR	8477651	Argument	ufst_root_dir		8477589	0					
ANR	8477652	Identifier	ufst_root_dir		8477589	0					
ANR	8477653	Argument	sizeof ( ufst_root_dir )		8477589	1					
ANR	8477654	SizeofExpression	sizeof ( ufst_root_dir )		8477589	0					
ANR	8477655	Sizeof	sizeof		8477589	0					
ANR	8477656	SizeofOperand	ufst_root_dir		8477589	1					
ANR	8477657	ExpressionStatement	"status = gx_UFST_init ( mem , ufst_root_dir )"	266:4:8263:8304	8477589	9	True				
ANR	8477658	AssignmentExpression	"status = gx_UFST_init ( mem , ufst_root_dir )"		8477589	0		=			
ANR	8477659	Identifier	status		8477589	0					
ANR	8477660	CallExpression	"gx_UFST_init ( mem , ufst_root_dir )"		8477589	1					
ANR	8477661	Callee	gx_UFST_init		8477589	0					
ANR	8477662	Identifier	gx_UFST_init		8477589	0					
ANR	8477663	ArgumentList	mem		8477589	1					
ANR	8477664	Argument	mem		8477589	0					
ANR	8477665	Identifier	mem		8477589	0					
ANR	8477666	Argument	ufst_root_dir		8477589	1					
ANR	8477667	Identifier	ufst_root_dir		8477589	0					
ANR	8477668	IfStatement	if ( ! plugins_opened )		8477589	10					
ANR	8477669	Condition	! plugins_opened	268:8:8315:8329	8477589	0	True				
ANR	8477670	UnaryOperationExpression	! plugins_opened		8477589	0					
ANR	8477671	UnaryOperator	!		8477589	0					
ANR	8477672	Identifier	plugins_opened		8477589	1					
ANR	8477673	CompoundStatement		18:25:391:391	8477589	1					
ANR	8477674	ExpressionStatement	gx_UFST_close_static_fcos ( )	270:8:8343:8370	8477589	0	True				
ANR	8477675	CallExpression	gx_UFST_close_static_fcos ( )		8477589	0					
ANR	8477676	Callee	gx_UFST_close_static_fcos		8477589	0					
ANR	8477677	Identifier	gx_UFST_close_static_fcos		8477589	0					
ANR	8477678	ArgumentList			8477589	1					
ANR	8477679	ExpressionStatement	"plugins = pl_ufst_get_list ( mem , ""UFSTPLUGINS"" , UFSTPLUGINS )"	271:8:8380:8439	8477589	1	True				
ANR	8477680	AssignmentExpression	"plugins = pl_ufst_get_list ( mem , ""UFSTPLUGINS"" , UFSTPLUGINS )"		8477589	0		=			
ANR	8477681	Identifier	plugins		8477589	0					
ANR	8477682	CallExpression	"pl_ufst_get_list ( mem , ""UFSTPLUGINS"" , UFSTPLUGINS )"		8477589	1					
ANR	8477683	Callee	pl_ufst_get_list		8477589	0					
ANR	8477684	Identifier	pl_ufst_get_list		8477589	0					
ANR	8477685	ArgumentList	mem		8477589	1					
ANR	8477686	Argument	mem		8477589	0					
ANR	8477687	Identifier	mem		8477589	0					
ANR	8477688	Argument	"""UFSTPLUGINS"""		8477589	1					
ANR	8477689	PrimaryExpression	"""UFSTPLUGINS"""		8477589	0					
ANR	8477690	Argument	UFSTPLUGINS		8477589	2					
ANR	8477691	Identifier	UFSTPLUGINS		8477589	0					
ANR	8477692	ForStatement	for ( k = 0 ; plugins [ k ] ; k ++ )		8477589	2					
ANR	8477693	ForInit	k = 0 ;	272:13:8454:8459	8477589	0	True				
ANR	8477694	AssignmentExpression	k = 0		8477589	0		=			
ANR	8477695	Identifier	k		8477589	0					
ANR	8477696	PrimaryExpression	0		8477589	1					
ANR	8477697	Condition	plugins [ k ]	272:20:8461:8470	8477589	1	True				
ANR	8477698	ArrayIndexing	plugins [ k ]		8477589	0					
ANR	8477699	Identifier	plugins		8477589	0					
ANR	8477700	Identifier	k		8477589	1					
ANR	8477701	PostIncDecOperationExpression	k ++	272:32:8473:8475	8477589	2	True				
ANR	8477702	Identifier	k		8477589	0					
ANR	8477703	IncDec	++		8477589	1					
ANR	8477704	CompoundStatement		22:37:537:537	8477589	3					
ANR	8477705	ExpressionStatement	"strcpy ( ( char * ) pthnm , ufst_root_dir )"	273:12:8492:8528	8477589	0	True				
ANR	8477706	CallExpression	"strcpy ( ( char * ) pthnm , ufst_root_dir )"		8477589	0					
ANR	8477707	Callee	strcpy		8477589	0					
ANR	8477708	Identifier	strcpy		8477589	0					
ANR	8477709	ArgumentList	( char * ) pthnm		8477589	1					
ANR	8477710	Argument	( char * ) pthnm		8477589	0					
ANR	8477711	CastExpression	( char * ) pthnm		8477589	0					
ANR	8477712	CastTarget	char *		8477589	0					
ANR	8477713	Identifier	pthnm		8477589	1					
ANR	8477714	Argument	ufst_root_dir		8477589	1					
ANR	8477715	Identifier	ufst_root_dir		8477589	0					
ANR	8477716	ExpressionStatement	"strcat ( ( char * ) pthnm , plugins [ k ] )"	274:12:8542:8575	8477589	1	True				
ANR	8477717	CallExpression	"strcat ( ( char * ) pthnm , plugins [ k ] )"		8477589	0					
ANR	8477718	Callee	strcat		8477589	0					
ANR	8477719	Identifier	strcat		8477589	0					
ANR	8477720	ArgumentList	( char * ) pthnm		8477589	1					
ANR	8477721	Argument	( char * ) pthnm		8477589	0					
ANR	8477722	CastExpression	( char * ) pthnm		8477589	0					
ANR	8477723	CastTarget	char *		8477589	0					
ANR	8477724	Identifier	pthnm		8477589	1					
ANR	8477725	Argument	plugins [ k ]		8477589	1					
ANR	8477726	ArrayIndexing	plugins [ k ]		8477589	0					
ANR	8477727	Identifier	plugins		8477589	0					
ANR	8477728	Identifier	k		8477589	1					
ANR	8477729	IfStatement	"if ( ( status = gx_UFST_open_static_fco ( pthnm , & fcHndlPlAry [ k ] ) ) != 0 )"		8477589	2					
ANR	8477730	Condition	"( status = gx_UFST_open_static_fco ( pthnm , & fcHndlPlAry [ k ] ) ) != 0"	275:16:8593:8672	8477589	0	True				
ANR	8477731	EqualityExpression	"( status = gx_UFST_open_static_fco ( pthnm , & fcHndlPlAry [ k ] ) ) != 0"		8477589	0		!=			
ANR	8477732	AssignmentExpression	"status = gx_UFST_open_static_fco ( pthnm , & fcHndlPlAry [ k ] )"		8477589	0		=			
ANR	8477733	Identifier	status		8477589	0					
ANR	8477734	CallExpression	"gx_UFST_open_static_fco ( pthnm , & fcHndlPlAry [ k ] )"		8477589	1					
ANR	8477735	Callee	gx_UFST_open_static_fco		8477589	0					
ANR	8477736	Identifier	gx_UFST_open_static_fco		8477589	0					
ANR	8477737	ArgumentList	pthnm		8477589	1					
ANR	8477738	Argument	pthnm		8477589	0					
ANR	8477739	Identifier	pthnm		8477589	0					
ANR	8477740	Argument	& fcHndlPlAry [ k ]		8477589	1					
ANR	8477741	UnaryOperationExpression	& fcHndlPlAry [ k ]		8477589	0					
ANR	8477742	UnaryOperator	&		8477589	0					
ANR	8477743	ArrayIndexing	fcHndlPlAry [ k ]		8477589	1					
ANR	8477744	Identifier	fcHndlPlAry		8477589	0					
ANR	8477745	Identifier	k		8477589	1					
ANR	8477746	PrimaryExpression	0		8477589	1					
ANR	8477747	CompoundStatement		26:72:734:734	8477589	1					
ANR	8477748	ExpressionStatement	"dmprintf2 ( mem , ""CGIFfco_Open error %d for %s\\n"" , status , pthnm )"	277:16:8693:8782	8477589	0	True				
ANR	8477749	CallExpression	"dmprintf2 ( mem , ""CGIFfco_Open error %d for %s\\n"" , status , pthnm )"		8477589	0					
ANR	8477750	Callee	dmprintf2		8477589	0					
ANR	8477751	Identifier	dmprintf2		8477589	0					
ANR	8477752	ArgumentList	mem		8477589	1					
ANR	8477753	Argument	mem		8477589	0					
ANR	8477754	Identifier	mem		8477589	0					
ANR	8477755	Argument	"""CGIFfco_Open error %d for %s\\n"""		8477589	1					
ANR	8477756	PrimaryExpression	"""CGIFfco_Open error %d for %s\\n"""		8477589	0					
ANR	8477757	Argument	status		8477589	2					
ANR	8477758	Identifier	status		8477589	0					
ANR	8477759	Argument	pthnm		8477589	3					
ANR	8477760	Identifier	pthnm		8477589	0					
ANR	8477761	ReturnStatement	return FALSE ;	279:16:8800:8812	8477589	1	True				
ANR	8477762	Identifier	FALSE		8477589	0					
ANR	8477763	Statement	if	281:12:8840:8841	8477589	3	True				
ANR	8477764	Statement	(	281:15:8843:8843	8477589	4	True				
ANR	8477765	Statement	(	281:16:8844:8844	8477589	5	True				
ANR	8477766	Statement	status	281:17:8845:8850	8477589	6	True				
ANR	8477767	Statement	=	281:24:8852:8852	8477589	7	True				
ANR	8477768	Statement	CGIFfco_Plugin	281:26:8854:8867	8477589	8	True				
ANR	8477769	Statement	(	281:40:8868:8868	8477589	9	True				
ANR	8477770	Statement	FSA	281:41:8869:8871	8477589	10	True				
ANR	8477771	Statement	fcHndlPlAry	281:45:8873:8883	8477589	11	True				
ANR	8477772	Statement	[	281:56:8884:8884	8477589	12	True				
ANR	8477773	Statement	k	281:57:8885:8885	8477589	13	True				
ANR	8477774	Statement	]	281:58:8886:8886	8477589	14	True				
ANR	8477775	Statement	)	281:59:8887:8887	8477589	15	True				
ANR	8477776	Statement	)	281:60:8888:8888	8477589	16	True				
ANR	8477777	Statement	!=	281:62:8890:8891	8477589	17	True				
ANR	8477778	Statement	0	281:65:8893:8893	8477589	18	True				
ANR	8477779	Statement	)	281:66:8894:8894	8477589	19	True				
ANR	8477780	CompoundStatement		31:68:955:955	8477589	20					
ANR	8477781	ExpressionStatement	"dmprintf1 ( mem , ""CGIFfco_Plugin error %d\\n"" , status )"	282:16:8914:8965	8477589	0	True				
ANR	8477782	CallExpression	"dmprintf1 ( mem , ""CGIFfco_Plugin error %d\\n"" , status )"		8477589	0					
ANR	8477783	Callee	dmprintf1		8477589	0					
ANR	8477784	Identifier	dmprintf1		8477589	0					
ANR	8477785	ArgumentList	mem		8477589	1					
ANR	8477786	Argument	mem		8477589	0					
ANR	8477787	Identifier	mem		8477589	0					
ANR	8477788	Argument	"""CGIFfco_Plugin error %d\\n"""		8477589	1					
ANR	8477789	PrimaryExpression	"""CGIFfco_Plugin error %d\\n"""		8477589	0					
ANR	8477790	Argument	status		8477589	2					
ANR	8477791	Identifier	status		8477589	0					
ANR	8477792	ReturnStatement	return FALSE ;	283:16:8983:8995	8477589	1	True				
ANR	8477793	Identifier	FALSE		8477589	0					
ANR	8477794	ExpressionStatement	"free_strs ( mem , plugins )"	286:8:9029:9052	8477589	3	True				
ANR	8477795	CallExpression	"free_strs ( mem , plugins )"		8477589	0					
ANR	8477796	Callee	free_strs		8477589	0					
ANR	8477797	Identifier	free_strs		8477589	0					
ANR	8477798	ArgumentList	mem		8477589	1					
ANR	8477799	Argument	mem		8477589	0					
ANR	8477800	Identifier	mem		8477589	0					
ANR	8477801	Argument	plugins		8477589	1					
ANR	8477802	Identifier	plugins		8477589	0					
ANR	8477803	ExpressionStatement	fcHndlPlAry [ k ] = - 1	288:8:9088:9107	8477589	4	True				
ANR	8477804	AssignmentExpression	fcHndlPlAry [ k ] = - 1		8477589	0		=			
ANR	8477805	ArrayIndexing	fcHndlPlAry [ k ]		8477589	0					
ANR	8477806	Identifier	fcHndlPlAry		8477589	0					
ANR	8477807	Identifier	k		8477589	1					
ANR	8477808	UnaryOperationExpression	- 1		8477589	1					
ANR	8477809	UnaryOperator	-		8477589	0					
ANR	8477810	PrimaryExpression	1		8477589	1					
ANR	8477811	ExpressionStatement	plugins_opened = true	289:8:9117:9138	8477589	5	True				
ANR	8477812	AssignmentExpression	plugins_opened = true		8477589	0		=			
ANR	8477813	Identifier	plugins_opened		8477589	0					
ANR	8477814	Identifier	true		8477589	1					
ANR	8477815	ExpressionStatement	plu_set_callbacks ( )	292:4:9226:9245	8477589	11	True				
ANR	8477816	CallExpression	plu_set_callbacks ( )		8477589	0					
ANR	8477817	Callee	plu_set_callbacks		8477589	0					
ANR	8477818	Identifier	plu_set_callbacks		8477589	0					
ANR	8477819	ArgumentList			8477589	1					
ANR	8477820	ExpressionStatement	"fcos = pl_ufst_get_list ( mem , ""UFSTFCOS"" , UFSTFCOS )"	301:4:9493:9543	8477589	12	True				
ANR	8477821	AssignmentExpression	"fcos = pl_ufst_get_list ( mem , ""UFSTFCOS"" , UFSTFCOS )"		8477589	0		=			
ANR	8477822	Identifier	fcos		8477589	0					
ANR	8477823	CallExpression	"pl_ufst_get_list ( mem , ""UFSTFCOS"" , UFSTFCOS )"		8477589	1					
ANR	8477824	Callee	pl_ufst_get_list		8477589	0					
ANR	8477825	Identifier	pl_ufst_get_list		8477589	0					
ANR	8477826	ArgumentList	mem		8477589	1					
ANR	8477827	Argument	mem		8477589	0					
ANR	8477828	Identifier	mem		8477589	0					
ANR	8477829	Argument	"""UFSTFCOS"""		8477589	1					
ANR	8477830	PrimaryExpression	"""UFSTFCOS"""		8477589	0					
ANR	8477831	Argument	UFSTFCOS		8477589	2					
ANR	8477832	Identifier	UFSTFCOS		8477589	0					
ANR	8477833	ForStatement	for ( k = 0 ; fcos [ k ] ; k ++ )		8477589	13					
ANR	8477834	ForInit	k = 0 ;	302:9:9554:9559	8477589	0	True				
ANR	8477835	AssignmentExpression	k = 0		8477589	0		=			
ANR	8477836	Identifier	k		8477589	0					
ANR	8477837	PrimaryExpression	0		8477589	1					
ANR	8477838	Condition	fcos [ k ]	302:16:9561:9567	8477589	1	True				
ANR	8477839	ArrayIndexing	fcos [ k ]		8477589	0					
ANR	8477840	Identifier	fcos		8477589	0					
ANR	8477841	Identifier	k		8477589	1					
ANR	8477842	PostIncDecOperationExpression	k ++	302:25:9570:9572	8477589	2	True				
ANR	8477843	Identifier	k		8477589	0					
ANR	8477844	IncDec	++		8477589	1					
ANR	8477845	CompoundStatement		53:8:1644:1658	8477589	3					
ANR	8477846	IdentifierDeclStatement	SW16 fcoHandle ;	303:8:9585:9599	8477589	0	True				
ANR	8477847	IdentifierDecl	fcoHandle		8477589	0					
ANR	8477848	IdentifierDeclType	SW16		8477589	0					
ANR	8477849	Identifier	fcoHandle		8477589	1					
ANR	8477850	ExpressionStatement	"strcpy ( ( char * ) pthnm , ufst_root_dir )"	306:8:9679:9715	8477589	1	True				
ANR	8477851	CallExpression	"strcpy ( ( char * ) pthnm , ufst_root_dir )"		8477589	0					
ANR	8477852	Callee	strcpy		8477589	0					
ANR	8477853	Identifier	strcpy		8477589	0					
ANR	8477854	ArgumentList	( char * ) pthnm		8477589	1					
ANR	8477855	Argument	( char * ) pthnm		8477589	0					
ANR	8477856	CastExpression	( char * ) pthnm		8477589	0					
ANR	8477857	CastTarget	char *		8477589	0					
ANR	8477858	Identifier	pthnm		8477589	1					
ANR	8477859	Argument	ufst_root_dir		8477589	1					
ANR	8477860	Identifier	ufst_root_dir		8477589	0					
ANR	8477861	ExpressionStatement	"strcat ( ( char * ) pthnm , fcos [ k ] )"	307:8:9725:9755	8477589	2	True				
ANR	8477862	CallExpression	"strcat ( ( char * ) pthnm , fcos [ k ] )"		8477589	0					
ANR	8477863	Callee	strcat		8477589	0					
ANR	8477864	Identifier	strcat		8477589	0					
ANR	8477865	ArgumentList	( char * ) pthnm		8477589	1					
ANR	8477866	Argument	( char * ) pthnm		8477589	0					
ANR	8477867	CastExpression	( char * ) pthnm		8477589	0					
ANR	8477868	CastTarget	char *		8477589	0					
ANR	8477869	Identifier	pthnm		8477589	1					
ANR	8477870	Argument	fcos [ k ]		8477589	1					
ANR	8477871	ArrayIndexing	fcos [ k ]		8477589	0					
ANR	8477872	Identifier	fcos		8477589	0					
ANR	8477873	Identifier	k		8477589	1					
ANR	8477874	ExpressionStatement	fcoHandle = gx_UFST_find_fco_handle_by_name ( pthnm )	309:8:9766:9816	8477589	3	True				
ANR	8477875	AssignmentExpression	fcoHandle = gx_UFST_find_fco_handle_by_name ( pthnm )		8477589	0		=			
ANR	8477876	Identifier	fcoHandle		8477589	0					
ANR	8477877	CallExpression	gx_UFST_find_fco_handle_by_name ( pthnm )		8477589	1					
ANR	8477878	Callee	gx_UFST_find_fco_handle_by_name		8477589	0					
ANR	8477879	Identifier	gx_UFST_find_fco_handle_by_name		8477589	0					
ANR	8477880	ArgumentList	pthnm		8477589	1					
ANR	8477881	Argument	pthnm		8477589	0					
ANR	8477882	Identifier	pthnm		8477589	0					
ANR	8477883	IfStatement	"if ( fcoHandle == 0 && ( status = gx_UFST_open_static_fco ( pthnm , & fcoHandle ) ) != 0 )"		8477589	4					
ANR	8477884	Condition	"fcoHandle == 0 && ( status = gx_UFST_open_static_fco ( pthnm , & fcoHandle ) ) != 0"	311:12:9831:9918	8477589	0	True				
ANR	8477885	AndExpression	"fcoHandle == 0 && ( status = gx_UFST_open_static_fco ( pthnm , & fcoHandle ) ) != 0"		8477589	0		&&			
ANR	8477886	EqualityExpression	fcoHandle == 0		8477589	0		==			
ANR	8477887	Identifier	fcoHandle		8477589	0					
ANR	8477888	PrimaryExpression	0		8477589	1					
ANR	8477889	EqualityExpression	"( status = gx_UFST_open_static_fco ( pthnm , & fcoHandle ) ) != 0"		8477589	1		!=			
ANR	8477890	AssignmentExpression	"status = gx_UFST_open_static_fco ( pthnm , & fcoHandle )"		8477589	0		=			
ANR	8477891	Identifier	status		8477589	0					
ANR	8477892	CallExpression	"gx_UFST_open_static_fco ( pthnm , & fcoHandle )"		8477589	1					
ANR	8477893	Callee	gx_UFST_open_static_fco		8477589	0					
ANR	8477894	Identifier	gx_UFST_open_static_fco		8477589	0					
ANR	8477895	ArgumentList	pthnm		8477589	1					
ANR	8477896	Argument	pthnm		8477589	0					
ANR	8477897	Identifier	pthnm		8477589	0					
ANR	8477898	Argument	& fcoHandle		8477589	1					
ANR	8477899	UnaryOperationExpression	& fcoHandle		8477589	0					
ANR	8477900	UnaryOperator	&		8477589	0					
ANR	8477901	Identifier	fcoHandle		8477589	1					
ANR	8477902	PrimaryExpression	0		8477589	1					
ANR	8477903	CompoundStatement		62:72:1980:1980	8477589	1					
ANR	8477904	ExpressionStatement	"dmprintf2 ( mem , ""CGIFfco_Open error %d for %s\\n"" , status , pthnm )"	313:12:9935:9998	8477589	0	True				
ANR	8477905	CallExpression	"dmprintf2 ( mem , ""CGIFfco_Open error %d for %s\\n"" , status , pthnm )"		8477589	0					
ANR	8477906	Callee	dmprintf2		8477589	0					
ANR	8477907	Identifier	dmprintf2		8477589	0					
ANR	8477908	ArgumentList	mem		8477589	1					
ANR	8477909	Argument	mem		8477589	0					
ANR	8477910	Identifier	mem		8477589	0					
ANR	8477911	Argument	"""CGIFfco_Open error %d for %s\\n"""		8477589	1					
ANR	8477912	PrimaryExpression	"""CGIFfco_Open error %d for %s\\n"""		8477589	0					
ANR	8477913	Argument	status		8477589	2					
ANR	8477914	Identifier	status		8477589	0					
ANR	8477915	Argument	pthnm		8477589	3					
ANR	8477916	Identifier	pthnm		8477589	0					
ANR	8477917	ContinueStatement	continue ;	314:12:10012:10020	8477589	1	True				
ANR	8477918	Statement	for	317:8:10085:10087	8477589	5	True				
ANR	8477919	Statement	(	317:12:10089:10089	8477589	6	True				
ANR	8477920	ExpressionStatement	i = 0	317:13:10090:10095	8477589	7	True				
ANR	8477921	AssignmentExpression	i = 0		8477589	0		=			
ANR	8477922	Identifier	i		8477589	0					
ANR	8477923	PrimaryExpression	0		8477589	1					
ANR	8477924	Statement	CGIFfco_Access	318:13:10110:10123	8477589	8	True				
ANR	8477925	Statement	(	318:27:10124:10124	8477589	9	True				
ANR	8477926	Statement	FSA	318:28:10125:10127	8477589	10	True				
ANR	8477927	Statement	pthnm	318:32:10129:10133	8477589	11	True				
ANR	8477928	Statement	","	318:37:10134:10134	8477589	12	True				
ANR	8477929	Statement	i	318:39:10136:10136	8477589	13	True				
ANR	8477930	Statement	","	318:40:10137:10137	8477589	14	True				
ANR	8477931	Statement	TFATRIB_KEY	318:42:10139:10149	8477589	15	True				
ANR	8477932	Statement	","	318:53:10150:10150	8477589	16	True				
ANR	8477933	Statement	&	318:55:10152:10152	8477589	17	True				
ANR	8477934	Statement	bSize	318:56:10153:10157	8477589	18	True				
ANR	8477935	Statement	","	318:61:10158:10158	8477589	19	True				
ANR	8477936	Statement	NULL	318:63:10160:10163	8477589	20	True				
ANR	8477937	Statement	)	318:67:10164:10164	8477589	21	True				
ANR	8477938	Statement	==	318:69:10166:10167	8477589	22	True				
ANR	8477939	ExpressionStatement	0	318:72:10169:10170	8477589	23	True				
ANR	8477940	PrimaryExpression	0		8477589	0					
ANR	8477941	Statement	i	319:13:10185:10185	8477589	24	True				
ANR	8477942	Statement	++	319:14:10186:10187	8477589	25	True				
ANR	8477943	Statement	","	319:16:10188:10188	8477589	26	True				
ANR	8477944	Statement	key	319:18:10190:10192	8477589	27	True				
ANR	8477945	Statement	[	319:21:10193:10193	8477589	28	True				
ANR	8477946	Statement	2	319:22:10194:10194	8477589	29	True				
ANR	8477947	Statement	]	319:23:10195:10195	8477589	30	True				
ANR	8477948	Statement	+=	319:25:10197:10198	8477589	31	True				
ANR	8477949	Statement	1	319:28:10200:10200	8477589	32	True				
ANR	8477950	Statement	)	319:29:10201:10201	8477589	33	True				
ANR	8477951	CompoundStatement		70:12:2276:2449	8477589	34					
ANR	8477952	IdentifierDeclStatement	"LPSB8 pBuffer = ( LPSB8 ) gs_alloc_bytes ( mem , bSize , ""TTFONTINFO buffer"" ) ;"	320:12:10217:10390	8477589	0	True				
ANR	8477953	IdentifierDecl	"pBuffer = ( LPSB8 ) gs_alloc_bytes ( mem , bSize , ""TTFONTINFO buffer"" )"		8477589	0					
ANR	8477954	IdentifierDeclType	LPSB8		8477589	0					
ANR	8477955	Identifier	pBuffer		8477589	1					
ANR	8477956	AssignmentExpression	"pBuffer = ( LPSB8 ) gs_alloc_bytes ( mem , bSize , ""TTFONTINFO buffer"" )"		8477589	2		=			
ANR	8477957	Identifier	pBuffer		8477589	0					
ANR	8477958	CastExpression	"( LPSB8 ) gs_alloc_bytes ( mem , bSize , ""TTFONTINFO buffer"" )"		8477589	1					
ANR	8477959	CastTarget	LPSB8		8477589	0					
ANR	8477960	CallExpression	"gs_alloc_bytes ( mem , bSize , ""TTFONTINFO buffer"" )"		8477589	1					
ANR	8477961	Callee	gs_alloc_bytes		8477589	0					
ANR	8477962	Identifier	gs_alloc_bytes		8477589	0					
ANR	8477963	ArgumentList	mem		8477589	1					
ANR	8477964	Argument	mem		8477589	0					
ANR	8477965	Identifier	mem		8477589	0					
ANR	8477966	Argument	bSize		8477589	1					
ANR	8477967	Identifier	bSize		8477589	0					
ANR	8477968	Argument	"""TTFONTINFO buffer"""		8477589	2					
ANR	8477969	PrimaryExpression	"""TTFONTINFO buffer"""		8477589	0					
ANR	8477970	IfStatement	if ( pBuffer == 0 )		8477589	1					
ANR	8477971	Condition	pBuffer == 0	324:16:10409:10420	8477589	0	True				
ANR	8477972	EqualityExpression	pBuffer == 0		8477589	0		==			
ANR	8477973	Identifier	pBuffer		8477589	0					
ANR	8477974	PrimaryExpression	0		8477589	1					
ANR	8477975	CompoundStatement		74:30:2482:2482	8477589	1					
ANR	8477976	ExpressionStatement	"dmprintf1 ( mem , ""VM error for built-in font %d"" , i )"	325:16:10441:10491	8477589	0	True				
ANR	8477977	CallExpression	"dmprintf1 ( mem , ""VM error for built-in font %d"" , i )"		8477589	0					
ANR	8477978	Callee	dmprintf1		8477589	0					
ANR	8477979	Identifier	dmprintf1		8477589	0					
ANR	8477980	ArgumentList	mem		8477589	1					
ANR	8477981	Argument	mem		8477589	0					
ANR	8477982	Identifier	mem		8477589	0					
ANR	8477983	Argument	"""VM error for built-in font %d"""		8477589	1					
ANR	8477984	PrimaryExpression	"""VM error for built-in font %d"""		8477589	0					
ANR	8477985	Argument	i		8477589	2					
ANR	8477986	Identifier	i		8477589	0					
ANR	8477987	ContinueStatement	continue ;	326:16:10509:10517	8477589	1	True				
ANR	8477988	Statement	status	328:12:10545:10550	8477589	2	True				
ANR	8477989	Statement	=	328:19:10552:10552	8477589	3	True				
ANR	8477990	Statement	CGIFfco_Access	328:21:10554:10567	8477589	4	True				
ANR	8477991	Statement	(	328:35:10568:10568	8477589	5	True				
ANR	8477992	Statement	FSA	328:36:10569:10571	8477589	6	True				
ANR	8477993	Statement	pthnm	329:36:10609:10613	8477589	7	True				
ANR	8477994	Statement	","	329:41:10614:10614	8477589	8	True				
ANR	8477995	Statement	i	329:43:10616:10616	8477589	9	True				
ANR	8477996	Statement	","	329:44:10617:10617	8477589	10	True				
ANR	8477997	Statement	TFATRIB_KEY	329:46:10619:10629	8477589	11	True				
ANR	8477998	Statement	","	329:57:10630:10630	8477589	12	True				
ANR	8477999	Statement	&	329:59:10632:10632	8477589	13	True				
ANR	8478000	Statement	bSize	329:60:10633:10637	8477589	14	True				
ANR	8478001	Statement	","	329:65:10638:10638	8477589	15	True				
ANR	8478002	Statement	pBuffer	329:67:10640:10646	8477589	16	True				
ANR	8478003	Statement	)	329:74:10647:10647	8477589	17	True				
ANR	8478004	ExpressionStatement		329:75:10648:10648	8477589	18	True				
ANR	8478005	IfStatement	if ( status != 0 )		8477589	19					
ANR	8478006	Condition	status != 0	330:16:10666:10676	8477589	0	True				
ANR	8478007	EqualityExpression	status != 0		8477589	0		!=			
ANR	8478008	Identifier	status		8477589	0					
ANR	8478009	PrimaryExpression	0		8477589	1					
ANR	8478010	ExpressionStatement	"dmprintf1 ( mem , ""CGIFfco_Access error %d\\n"" , status )"	331:16:10695:10746	8477589	1	True				
ANR	8478011	CallExpression	"dmprintf1 ( mem , ""CGIFfco_Access error %d\\n"" , status )"		8477589	0					
ANR	8478012	Callee	dmprintf1		8477589	0					
ANR	8478013	Identifier	dmprintf1		8477589	0					
ANR	8478014	ArgumentList	mem		8477589	1					
ANR	8478015	Argument	mem		8477589	0					
ANR	8478016	Identifier	mem		8477589	0					
ANR	8478017	Argument	"""CGIFfco_Access error %d\\n"""		8477589	1					
ANR	8478018	PrimaryExpression	"""CGIFfco_Access error %d\\n"""		8477589	0					
ANR	8478019	Argument	status		8477589	2					
ANR	8478020	Identifier	status		8477589	0					
ANR	8478021	ElseStatement	else		8477589	0					
ANR	8478022	CompoundStatement		89:16:3173:3183	8477589	0					
ANR	8478023	IdentifierDeclStatement	TTFONTINFOTYPE * pfDesc = ( TTFONTINFOTYPE * ) pBuffer ;	333:16:10783:10834	8477589	0	True				
ANR	8478024	IdentifierDecl	* pfDesc = ( TTFONTINFOTYPE * ) pBuffer		8477589	0					
ANR	8478025	IdentifierDeclType	TTFONTINFOTYPE *		8477589	0					
ANR	8478026	Identifier	pfDesc		8477589	1					
ANR	8478027	AssignmentExpression	* pfDesc = ( TTFONTINFOTYPE * ) pBuffer		8477589	2		=			
ANR	8478028	Identifier	pfDesc		8477589	0					
ANR	8478029	CastExpression	( TTFONTINFOTYPE * ) pBuffer		8477589	1					
ANR	8478030	CastTarget	TTFONTINFOTYPE *		8477589	0					
ANR	8478031	Identifier	pBuffer		8477589	1					
ANR	8478032	IdentifierDeclStatement	LPSB8 pname = pBuffer + pfDesc -> psname ;	334:16:10852:10890	8477589	1	True				
ANR	8478033	IdentifierDecl	pname = pBuffer + pfDesc -> psname		8477589	0					
ANR	8478034	IdentifierDeclType	LPSB8		8477589	0					
ANR	8478035	Identifier	pname		8477589	1					
ANR	8478036	AssignmentExpression	pname = pBuffer + pfDesc -> psname		8477589	2		=			
ANR	8478037	Identifier	pname		8477589	0					
ANR	8478038	AdditiveExpression	pBuffer + pfDesc -> psname		8477589	1		+			
ANR	8478039	Identifier	pBuffer		8477589	0					
ANR	8478040	PtrMemberAccess	pfDesc -> psname		8477589	1					
ANR	8478041	Identifier	pfDesc		8477589	0					
ANR	8478042	Identifier	psname		8477589	1					
ANR	8478043	IdentifierDeclStatement	"LPSB8 symname = ""SymbPS"" ;"	337:16:11049:11073	8477589	2	True				
ANR	8478044	IdentifierDecl	"symname = ""SymbPS"""		8477589	0					
ANR	8478045	IdentifierDeclType	LPSB8		8477589	0					
ANR	8478046	Identifier	symname		8477589	1					
ANR	8478047	AssignmentExpression	"symname = ""SymbPS"""		8477589	2		=			
ANR	8478048	Identifier	symname		8477589	0					
ANR	8478049	PrimaryExpression	"""SymbPS"""		8477589	1					
ANR	8478050	IdentifierDeclStatement	int j ;	338:16:11091:11096	8477589	3	True				
ANR	8478051	IdentifierDecl	j		8477589	0					
ANR	8478052	IdentifierDeclType	int		8477589	0					
ANR	8478053	Identifier	j		8477589	1					
ANR	8478054	IdentifierDeclStatement	bool found ;	339:16:11114:11124	8477589	4	True				
ANR	8478055	IdentifierDecl	found		8477589	0					
ANR	8478056	IdentifierDeclType	bool		8477589	0					
ANR	8478057	Identifier	found		8477589	1					
ANR	8478058	IfStatement	if ( pfDesc -> pcltFontNumber == 24463 )		8477589	5					
ANR	8478059	Condition	pfDesc -> pcltFontNumber == 24463	341:20:11147:11177	8477589	0	True				
ANR	8478060	EqualityExpression	pfDesc -> pcltFontNumber == 24463		8477589	0		==			
ANR	8478061	PtrMemberAccess	pfDesc -> pcltFontNumber		8477589	0					
ANR	8478062	Identifier	pfDesc		8477589	0					
ANR	8478063	Identifier	pcltFontNumber		8477589	1					
ANR	8478064	PrimaryExpression	24463		8477589	1					
ANR	8478065	ExpressionStatement	pname = symname	342:20:11200:11215	8477589	1	True				
ANR	8478066	AssignmentExpression	pname = symname		8477589	0		=			
ANR	8478067	Identifier	pname		8477589	0					
ANR	8478068	Identifier	symname		8477589	1					
ANR	8478069	ForStatement	for ( j = 0 ; strlen ( resident_table [ j ] . full_font_name ) ; j ++ )		8477589	6					
ANR	8478070	ForInit	j = 0 ;	343:21:11238:11243	8477589	0	True				
ANR	8478071	AssignmentExpression	j = 0		8477589	0		=			
ANR	8478072	Identifier	j		8477589	0					
ANR	8478073	PrimaryExpression	0		8477589	1					
ANR	8478074	Condition	strlen ( resident_table [ j ] . full_font_name )	343:28:11245:11284	8477589	1	True				
ANR	8478075	CallExpression	strlen ( resident_table [ j ] . full_font_name )		8477589	0					
ANR	8478076	Callee	strlen		8477589	0					
ANR	8478077	Identifier	strlen		8477589	0					
ANR	8478078	ArgumentList	resident_table [ j ] . full_font_name		8477589	1					
ANR	8478079	Argument	resident_table [ j ] . full_font_name		8477589	0					
ANR	8478080	MemberAccess	resident_table [ j ] . full_font_name		8477589	0					
ANR	8478081	ArrayIndexing	resident_table [ j ]		8477589	0					
ANR	8478082	Identifier	resident_table		8477589	0					
ANR	8478083	Identifier	j		8477589	1					
ANR	8478084	Identifier	full_font_name		8477589	1					
ANR	8478085	PostIncDecOperationExpression	j ++	343:70:11287:11289	8477589	2	True				
ANR	8478086	Identifier	j		8477589	0					
ANR	8478087	IncDec	++		8477589	1					
ANR	8478088	CompoundStatement		95:20:3412:3422	8477589	3					
ANR	8478089	IdentifierDeclStatement	pl_font_t * plfont ;	344:20:11314:11331	8477589	0	True				
ANR	8478090	IdentifierDecl	* plfont		8477589	0					
ANR	8478091	IdentifierDeclType	pl_font_t *		8477589	0					
ANR	8478092	Identifier	plfont		8477589	1					
ANR	8478093	IdentifierDeclStatement	int err_cd ;	345:20:11353:11363	8477589	1	True				
ANR	8478094	IdentifierDecl	err_cd		8477589	0					
ANR	8478095	IdentifierDeclType	int		8477589	0					
ANR	8478096	Identifier	err_cd		8477589	1					
ANR	8478097	IfStatement	"if ( strcmp ( resident_table [ j ] . full_font_name , pname ) != 0 )"		8477589	2					
ANR	8478098	Condition	"strcmp ( resident_table [ j ] . full_font_name , pname ) != 0"	347:24:11390:11441	8477589	0	True				
ANR	8478099	EqualityExpression	"strcmp ( resident_table [ j ] . full_font_name , pname ) != 0"		8477589	0		!=			
ANR	8478100	CallExpression	"strcmp ( resident_table [ j ] . full_font_name , pname )"		8477589	0					
ANR	8478101	Callee	strcmp		8477589	0					
ANR	8478102	Identifier	strcmp		8477589	0					
ANR	8478103	ArgumentList	resident_table [ j ] . full_font_name		8477589	1					
ANR	8478104	Argument	resident_table [ j ] . full_font_name		8477589	0					
ANR	8478105	MemberAccess	resident_table [ j ] . full_font_name		8477589	0					
ANR	8478106	ArrayIndexing	resident_table [ j ]		8477589	0					
ANR	8478107	Identifier	resident_table		8477589	0					
ANR	8478108	Identifier	j		8477589	1					
ANR	8478109	Identifier	full_font_name		8477589	1					
ANR	8478110	Argument	pname		8477589	1					
ANR	8478111	Identifier	pname		8477589	0					
ANR	8478112	PrimaryExpression	0		8477589	1					
ANR	8478113	ContinueStatement	continue ;	348:24:11468:11476	8477589	1	True				
ANR	8478114	ExpressionStatement	"err_cd = pl_load_mt_font ( fcoHandle , pdir , mem , i , & plfont )"	350:20:11499:11581	8477589	3	True				
ANR	8478115	AssignmentExpression	"err_cd = pl_load_mt_font ( fcoHandle , pdir , mem , i , & plfont )"		8477589	0		=			
ANR	8478116	Identifier	err_cd		8477589	0					
ANR	8478117	CallExpression	"pl_load_mt_font ( fcoHandle , pdir , mem , i , & plfont )"		8477589	1					
ANR	8478118	Callee	pl_load_mt_font		8477589	0					
ANR	8478119	Identifier	pl_load_mt_font		8477589	0					
ANR	8478120	ArgumentList	fcoHandle		8477589	1					
ANR	8478121	Argument	fcoHandle		8477589	0					
ANR	8478122	Identifier	fcoHandle		8477589	0					
ANR	8478123	Argument	pdir		8477589	1					
ANR	8478124	Identifier	pdir		8477589	0					
ANR	8478125	Argument	mem		8477589	2					
ANR	8478126	Identifier	mem		8477589	0					
ANR	8478127	Argument	i		8477589	3					
ANR	8478128	Identifier	i		8477589	0					
ANR	8478129	Argument	& plfont		8477589	4					
ANR	8478130	UnaryOperationExpression	& plfont		8477589	0					
ANR	8478131	UnaryOperator	&		8477589	0					
ANR	8478132	Identifier	plfont		8477589	1					
ANR	8478133	IfStatement	if ( err_cd != 0 )		8477589	4					
ANR	8478134	Condition	err_cd != 0	353:24:11608:11618	8477589	0	True				
ANR	8478135	EqualityExpression	err_cd != 0		8477589	0		!=			
ANR	8478136	Identifier	err_cd		8477589	0					
ANR	8478137	PrimaryExpression	0		8477589	1					
ANR	8478138	ReturnStatement	"return gs_throw1 ( err_cd , ""An unrecoverable failure occurred while loading the resident font %s\\n"" , pname ) ;"	354:24:11645:11832	8477589	1	True				
ANR	8478139	CallExpression	"gs_throw1 ( err_cd , ""An unrecoverable failure occurred while loading the resident font %s\\n"" , pname )"		8477589	0					
ANR	8478140	Callee	gs_throw1		8477589	0					
ANR	8478141	Identifier	gs_throw1		8477589	0					
ANR	8478142	ArgumentList	err_cd		8477589	1					
ANR	8478143	Argument	err_cd		8477589	0					
ANR	8478144	Identifier	err_cd		8477589	0					
ANR	8478145	Argument	"""An unrecoverable failure occurred while loading the resident font %s\\n"""		8477589	1					
ANR	8478146	PrimaryExpression	"""An unrecoverable failure occurred while loading the resident font %s\\n"""		8477589	0					
ANR	8478147	Argument	pname		8477589	2					
ANR	8478148	Identifier	pname		8477589	0					
ANR	8478149	ElseStatement	else		8477589	0					
ANR	8478150	CompoundStatement		108:24:3944:4043	8477589	0					
ANR	8478151	IdentifierDeclStatement	uint pitch_cp = ( pfDesc -> spaceBand * 100.0 ) / pfDesc -> scaleFactor + 0.5 ;	358:24:11885:11984	8477589	0	True				
ANR	8478152	IdentifierDecl	pitch_cp = ( pfDesc -> spaceBand * 100.0 ) / pfDesc -> scaleFactor + 0.5		8477589	0					
ANR	8478153	IdentifierDeclType	uint		8477589	0					
ANR	8478154	Identifier	pitch_cp		8477589	1					
ANR	8478155	AssignmentExpression	pitch_cp = ( pfDesc -> spaceBand * 100.0 ) / pfDesc -> scaleFactor + 0.5		8477589	2		=			
ANR	8478156	Identifier	pitch_cp		8477589	0					
ANR	8478157	AdditiveExpression	( pfDesc -> spaceBand * 100.0 ) / pfDesc -> scaleFactor + 0.5		8477589	1		+			
ANR	8478158	MultiplicativeExpression	( pfDesc -> spaceBand * 100.0 ) / pfDesc -> scaleFactor		8477589	0		/			
ANR	8478159	MultiplicativeExpression	pfDesc -> spaceBand * 100.0		8477589	0		*			
ANR	8478160	PtrMemberAccess	pfDesc -> spaceBand		8477589	0					
ANR	8478161	Identifier	pfDesc		8477589	0					
ANR	8478162	Identifier	spaceBand		8477589	1					
ANR	8478163	PrimaryExpression	100.0		8477589	1					
ANR	8478164	PtrMemberAccess	pfDesc -> scaleFactor		8477589	1					
ANR	8478165	Identifier	pfDesc		8477589	0					
ANR	8478166	Identifier	scaleFactor		8477589	1					
ANR	8478167	PrimaryExpression	0.5		8477589	1					
ANR	8478168	IfStatement	if ( gs_debug_c ( '=' ) )		8477589	1					
ANR	8478169	Condition	gs_debug_c ( '=' )	362:28:12028:12042	8477589	0	True				
ANR	8478170	CallExpression	gs_debug_c ( '=' )		8477589	0					
ANR	8478171	Callee	gs_debug_c		8477589	0					
ANR	8478172	Identifier	gs_debug_c		8477589	0					
ANR	8478173	ArgumentList	'='		8477589	1					
ANR	8478174	Argument	'='		8477589	0					
ANR	8478175	PrimaryExpression	'='		8477589	0					
ANR	8478176	ExpressionStatement	"dmprintf2 ( mem , ""Loading %s from fco %s\\n"" , pname , fcos [ k ] )"	363:28:12073:12169	8477589	1	True				
ANR	8478177	CallExpression	"dmprintf2 ( mem , ""Loading %s from fco %s\\n"" , pname , fcos [ k ] )"		8477589	0					
ANR	8478178	Callee	dmprintf2		8477589	0					
ANR	8478179	Identifier	dmprintf2		8477589	0					
ANR	8478180	ArgumentList	mem		8477589	1					
ANR	8478181	Argument	mem		8477589	0					
ANR	8478182	Identifier	mem		8477589	0					
ANR	8478183	Argument	"""Loading %s from fco %s\\n"""		8477589	1					
ANR	8478184	PrimaryExpression	"""Loading %s from fco %s\\n"""		8477589	0					
ANR	8478185	Argument	pname		8477589	2					
ANR	8478186	Identifier	pname		8477589	0					
ANR	8478187	Argument	fcos [ k ]		8477589	3					
ANR	8478188	ArrayIndexing	fcos [ k ]		8477589	0					
ANR	8478189	Identifier	fcos		8477589	0					
ANR	8478190	Identifier	k		8477589	1					
ANR	8478191	IfStatement	if ( pfDesc -> scaleFactor == 8782 )		8477589	2					
ANR	8478192	Condition	pfDesc -> scaleFactor == 8782	369:28:12338:12364	8477589	0	True				
ANR	8478193	EqualityExpression	pfDesc -> scaleFactor == 8782		8477589	0		==			
ANR	8478194	PtrMemberAccess	pfDesc -> scaleFactor		8477589	0					
ANR	8478195	Identifier	pfDesc		8477589	0					
ANR	8478196	Identifier	scaleFactor		8477589	1					
ANR	8478197	PrimaryExpression	8782		8477589	1					
ANR	8478198	CompoundStatement		119:57:4426:4426	8477589	1					
ANR	8478199	ExpressionStatement	plfont -> pts_per_inch = 72.307	370:28:12397:12426	8477589	0	True				
ANR	8478200	AssignmentExpression	plfont -> pts_per_inch = 72.307		8477589	0		=			
ANR	8478201	PtrMemberAccess	plfont -> pts_per_inch		8477589	0					
ANR	8478202	Identifier	plfont		8477589	0					
ANR	8478203	Identifier	pts_per_inch		8477589	1					
ANR	8478204	PrimaryExpression	72.307		8477589	1					
ANR	8478205	ExpressionStatement	pitch_cp = ( pfDesc -> spaceBand * 100 * 72.0 ) / ( pfDesc -> scaleFactor * 72.307 ) + 0.5	371:28:12456:12570	8477589	1	True				
ANR	8478206	AssignmentExpression	pitch_cp = ( pfDesc -> spaceBand * 100 * 72.0 ) / ( pfDesc -> scaleFactor * 72.307 ) + 0.5		8477589	0		=			
ANR	8478207	Identifier	pitch_cp		8477589	0					
ANR	8478208	AdditiveExpression	( pfDesc -> spaceBand * 100 * 72.0 ) / ( pfDesc -> scaleFactor * 72.307 ) + 0.5		8477589	1		+			
ANR	8478209	MultiplicativeExpression	( pfDesc -> spaceBand * 100 * 72.0 ) / ( pfDesc -> scaleFactor * 72.307 )		8477589	0		/			
ANR	8478210	MultiplicativeExpression	pfDesc -> spaceBand * 100 * 72.0		8477589	0		*			
ANR	8478211	PtrMemberAccess	pfDesc -> spaceBand		8477589	0					
ANR	8478212	Identifier	pfDesc		8477589	0					
ANR	8478213	Identifier	spaceBand		8477589	1					
ANR	8478214	MultiplicativeExpression	100 * 72.0		8477589	1		*			
ANR	8478215	PrimaryExpression	100		8477589	0					
ANR	8478216	PrimaryExpression	72.0		8477589	1					
ANR	8478217	MultiplicativeExpression	pfDesc -> scaleFactor * 72.307		8477589	1		*			
ANR	8478218	PtrMemberAccess	pfDesc -> scaleFactor		8477589	0					
ANR	8478219	Identifier	pfDesc		8477589	0					
ANR	8478220	Identifier	scaleFactor		8477589	1					
ANR	8478221	PrimaryExpression	72.307		8477589	1					
ANR	8478222	PrimaryExpression	0.5		8477589	1					
ANR	8478223	IfStatement	if ( gs_debug_c ( '=' ) )		8477589	3					
ANR	8478224	Condition	gs_debug_c ( '=' )	375:28:12639:12653	8477589	0	True				
ANR	8478225	CallExpression	gs_debug_c ( '=' )		8477589	0					
ANR	8478226	Callee	gs_debug_c		8477589	0					
ANR	8478227	Identifier	gs_debug_c		8477589	0					
ANR	8478228	ArgumentList	'='		8477589	1					
ANR	8478229	Argument	'='		8477589	0					
ANR	8478230	PrimaryExpression	'='		8477589	0					
ANR	8478231	ExpressionStatement	"dmprintf3 ( mem , ""scale factor=%d, pitch (cp)=%d per_inch_x100=%d\\n"" , pfDesc -> scaleFactor , pitch_cp , ( uint ) ( 720000.0 / pitch_cp ) )"	376:28:12684:12926	8477589	1	True				
ANR	8478232	CallExpression	"dmprintf3 ( mem , ""scale factor=%d, pitch (cp)=%d per_inch_x100=%d\\n"" , pfDesc -> scaleFactor , pitch_cp , ( uint ) ( 720000.0 / pitch_cp ) )"		8477589	0					
ANR	8478233	Callee	dmprintf3		8477589	0					
ANR	8478234	Identifier	dmprintf3		8477589	0					
ANR	8478235	ArgumentList	mem		8477589	1					
ANR	8478236	Argument	mem		8477589	0					
ANR	8478237	Identifier	mem		8477589	0					
ANR	8478238	Argument	"""scale factor=%d, pitch (cp)=%d per_inch_x100=%d\\n"""		8477589	1					
ANR	8478239	PrimaryExpression	"""scale factor=%d, pitch (cp)=%d per_inch_x100=%d\\n"""		8477589	0					
ANR	8478240	Argument	pfDesc -> scaleFactor		8477589	2					
ANR	8478241	PtrMemberAccess	pfDesc -> scaleFactor		8477589	0					
ANR	8478242	Identifier	pfDesc		8477589	0					
ANR	8478243	Identifier	scaleFactor		8477589	1					
ANR	8478244	Argument	pitch_cp		8477589	3					
ANR	8478245	Identifier	pitch_cp		8477589	0					
ANR	8478246	Argument	( uint ) ( 720000.0 / pitch_cp )		8477589	4					
ANR	8478247	CastExpression	( uint ) ( 720000.0 / pitch_cp )		8477589	0					
ANR	8478248	CastTarget	uint		8477589	0					
ANR	8478249	MultiplicativeExpression	720000.0 / pitch_cp		8477589	1		/			
ANR	8478250	PrimaryExpression	720000.0		8477589	0					
ANR	8478251	Identifier	pitch_cp		8477589	1					
ANR	8478252	ExpressionStatement	plfont -> font_type = resident_table [ j ] . font_type	382:24:12960:13007	8477589	4	True				
ANR	8478253	AssignmentExpression	plfont -> font_type = resident_table [ j ] . font_type		8477589	0		=			
ANR	8478254	PtrMemberAccess	plfont -> font_type		8477589	0					
ANR	8478255	Identifier	plfont		8477589	0					
ANR	8478256	Identifier	font_type		8477589	1					
ANR	8478257	MemberAccess	resident_table [ j ] . font_type		8477589	1					
ANR	8478258	ArrayIndexing	resident_table [ j ]		8477589	0					
ANR	8478259	Identifier	resident_table		8477589	0					
ANR	8478260	Identifier	j		8477589	1					
ANR	8478261	Identifier	font_type		8477589	1					
ANR	8478262	ExpressionStatement	plfont -> storage = storage	383:24:13033:13058	8477589	5	True				
ANR	8478263	AssignmentExpression	plfont -> storage = storage		8477589	0		=			
ANR	8478264	PtrMemberAccess	plfont -> storage		8477589	0					
ANR	8478265	Identifier	plfont		8477589	0					
ANR	8478266	Identifier	storage		8477589	1					
ANR	8478267	Identifier	storage		8477589	1					
ANR	8478268	ExpressionStatement	plfont -> data_are_permanent = false	384:24:13084:13118	8477589	6	True				
ANR	8478269	AssignmentExpression	plfont -> data_are_permanent = false		8477589	0		=			
ANR	8478270	PtrMemberAccess	plfont -> data_are_permanent		8477589	0					
ANR	8478271	Identifier	plfont		8477589	0					
ANR	8478272	Identifier	data_are_permanent		8477589	1					
ANR	8478273	Identifier	false		8477589	1					
ANR	8478274	ExpressionStatement	plfont -> params = resident_table [ j ] . params	385:24:13144:13185	8477589	7	True				
ANR	8478275	AssignmentExpression	plfont -> params = resident_table [ j ] . params		8477589	0		=			
ANR	8478276	PtrMemberAccess	plfont -> params		8477589	0					
ANR	8478277	Identifier	plfont		8477589	0					
ANR	8478278	Identifier	params		8477589	1					
ANR	8478279	MemberAccess	resident_table [ j ] . params		8477589	1					
ANR	8478280	ArrayIndexing	resident_table [ j ]		8477589	0					
ANR	8478281	Identifier	resident_table		8477589	0					
ANR	8478282	Identifier	j		8477589	1					
ANR	8478283	Identifier	params		8477589	1					
ANR	8478284	ExpressionStatement	"memcpy ( plfont -> character_complement , resident_table [ j ] . character_complement , 8 )"	394:24:13626:13736	8477589	8	True				
ANR	8478285	CallExpression	"memcpy ( plfont -> character_complement , resident_table [ j ] . character_complement , 8 )"		8477589	0					
ANR	8478286	Callee	memcpy		8477589	0					
ANR	8478287	Identifier	memcpy		8477589	0					
ANR	8478288	ArgumentList	plfont -> character_complement		8477589	1					
ANR	8478289	Argument	plfont -> character_complement		8477589	0					
ANR	8478290	PtrMemberAccess	plfont -> character_complement		8477589	0					
ANR	8478291	Identifier	plfont		8477589	0					
ANR	8478292	Identifier	character_complement		8477589	1					
ANR	8478293	Argument	resident_table [ j ] . character_complement		8477589	1					
ANR	8478294	MemberAccess	resident_table [ j ] . character_complement		8477589	0					
ANR	8478295	ArrayIndexing	resident_table [ j ]		8477589	0					
ANR	8478296	Identifier	resident_table		8477589	0					
ANR	8478297	Identifier	j		8477589	1					
ANR	8478298	Identifier	character_complement		8477589	1					
ANR	8478299	Argument	8		8477589	2					
ANR	8478300	PrimaryExpression	8		8477589	0					
ANR	8478301	IfStatement	if ( use_unicode_names_for_keys )		8477589	9					
ANR	8478302	Condition	use_unicode_names_for_keys	397:28:13767:13792	8477589	0	True				
ANR	8478303	Identifier	use_unicode_names_for_keys		8477589	0					
ANR	8478304	ExpressionStatement	"pl_dict_put ( pfontdict , resident_table [ j ] . unicode_fontname , 32 , plfont )"	398:28:13823:13973	8477589	1	True				
ANR	8478305	CallExpression	"pl_dict_put ( pfontdict , resident_table [ j ] . unicode_fontname , 32 , plfont )"		8477589	0					
ANR	8478306	Callee	pl_dict_put		8477589	0					
ANR	8478307	Identifier	pl_dict_put		8477589	0					
ANR	8478308	ArgumentList	pfontdict		8477589	1					
ANR	8478309	Argument	pfontdict		8477589	0					
ANR	8478310	Identifier	pfontdict		8477589	0					
ANR	8478311	Argument	resident_table [ j ] . unicode_fontname		8477589	1					
ANR	8478312	MemberAccess	resident_table [ j ] . unicode_fontname		8477589	0					
ANR	8478313	ArrayIndexing	resident_table [ j ]		8477589	0					
ANR	8478314	Identifier	resident_table		8477589	0					
ANR	8478315	Identifier	j		8477589	1					
ANR	8478316	Identifier	unicode_fontname		8477589	1					
ANR	8478317	Argument	32		8477589	2					
ANR	8478318	PrimaryExpression	32		8477589	0					
ANR	8478319	Argument	plfont		8477589	3					
ANR	8478320	Identifier	plfont		8477589	0					
ANR	8478321	ElseStatement	else		8477589	0					
ANR	8478322	CompoundStatement		151:29:6063:6063	8477589	0					
ANR	8478323	ExpressionStatement	key [ 2 ] = ( byte ) j	402:28:14034:14051	8477589	0	True				
ANR	8478324	AssignmentExpression	key [ 2 ] = ( byte ) j		8477589	0		=			
ANR	8478325	ArrayIndexing	key [ 2 ]		8477589	0					
ANR	8478326	Identifier	key		8477589	0					
ANR	8478327	PrimaryExpression	2		8477589	1					
ANR	8478328	CastExpression	( byte ) j		8477589	1					
ANR	8478329	CastTarget	byte		8477589	0					
ANR	8478330	Identifier	j		8477589	1					
ANR	8478331	ExpressionStatement	key [ 0 ] = key [ 1 ] = 0	403:28:14081:14100	8477589	1	True				
ANR	8478332	AssignmentExpression	key [ 0 ] = key [ 1 ] = 0		8477589	0		=			
ANR	8478333	ArrayIndexing	key [ 0 ]		8477589	0					
ANR	8478334	Identifier	key		8477589	0					
ANR	8478335	PrimaryExpression	0		8477589	1					
ANR	8478336	AssignmentExpression	key [ 1 ] = 0		8477589	1		=			
ANR	8478337	ArrayIndexing	key [ 1 ]		8477589	0					
ANR	8478338	Identifier	key		8477589	0					
ANR	8478339	PrimaryExpression	1		8477589	1					
ANR	8478340	PrimaryExpression	0		8477589	1					
ANR	8478341	ExpressionStatement	"pl_dict_put ( pfontdict , key , sizeof ( key ) , plfont )"	404:28:14130:14178	8477589	2	True				
ANR	8478342	CallExpression	"pl_dict_put ( pfontdict , key , sizeof ( key ) , plfont )"		8477589	0					
ANR	8478343	Callee	pl_dict_put		8477589	0					
ANR	8478344	Identifier	pl_dict_put		8477589	0					
ANR	8478345	ArgumentList	pfontdict		8477589	1					
ANR	8478346	Argument	pfontdict		8477589	0					
ANR	8478347	Identifier	pfontdict		8477589	0					
ANR	8478348	Argument	key		8477589	1					
ANR	8478349	Identifier	key		8477589	0					
ANR	8478350	Argument	sizeof ( key )		8477589	2					
ANR	8478351	SizeofExpression	sizeof ( key )		8477589	0					
ANR	8478352	Sizeof	sizeof		8477589	0					
ANR	8478353	SizeofOperand	key		8477589	1					
ANR	8478354	Argument	plfont		8477589	3					
ANR	8478355	Identifier	plfont		8477589	0					
ANR	8478356	ExpressionStatement	"gs_free_object ( mem , pBuffer , ""TTFONTINFO buffer"" )"	409:12:14272:14321	8477589	20	True				
ANR	8478357	CallExpression	"gs_free_object ( mem , pBuffer , ""TTFONTINFO buffer"" )"		8477589	0					
ANR	8478358	Callee	gs_free_object		8477589	0					
ANR	8478359	Identifier	gs_free_object		8477589	0					
ANR	8478360	ArgumentList	mem		8477589	1					
ANR	8478361	Argument	mem		8477589	0					
ANR	8478362	Identifier	mem		8477589	0					
ANR	8478363	Argument	pBuffer		8477589	1					
ANR	8478364	Identifier	pBuffer		8477589	0					
ANR	8478365	Argument	"""TTFONTINFO buffer"""		8477589	2					
ANR	8478366	PrimaryExpression	"""TTFONTINFO buffer"""		8477589	0					
ANR	8478367	ExpressionStatement	"free_strs ( mem , fcos )"	412:4:14398:14418	8477589	14	True				
ANR	8478368	CallExpression	"free_strs ( mem , fcos )"		8477589	0					
ANR	8478369	Callee	free_strs		8477589	0					
ANR	8478370	Identifier	free_strs		8477589	0					
ANR	8478371	ArgumentList	mem		8477589	1					
ANR	8478372	Argument	mem		8477589	0					
ANR	8478373	Identifier	mem		8477589	0					
ANR	8478374	Argument	fcos		8477589	1					
ANR	8478375	Identifier	fcos		8477589	0					
ANR	8478376	ExpressionStatement	"( void ) pl_load_ufst_lineprinter ( mem , pfontdict , pdir , storage , use_unicode_names_for_keys )"	414:4:14481:14605	8477589	15	True				
ANR	8478377	CastExpression	"( void ) pl_load_ufst_lineprinter ( mem , pfontdict , pdir , storage , use_unicode_names_for_keys )"		8477589	0					
ANR	8478378	CastTarget	void		8477589	0					
ANR	8478379	CallExpression	"pl_load_ufst_lineprinter ( mem , pfontdict , pdir , storage , use_unicode_names_for_keys )"		8477589	1					
ANR	8478380	Callee	pl_load_ufst_lineprinter		8477589	0					
ANR	8478381	Identifier	pl_load_ufst_lineprinter		8477589	0					
ANR	8478382	ArgumentList	mem		8477589	1					
ANR	8478383	Argument	mem		8477589	0					
ANR	8478384	Identifier	mem		8477589	0					
ANR	8478385	Argument	pfontdict		8477589	1					
ANR	8478386	Identifier	pfontdict		8477589	0					
ANR	8478387	Argument	pdir		8477589	2					
ANR	8478388	Identifier	pdir		8477589	0					
ANR	8478389	Argument	storage		8477589	3					
ANR	8478390	Identifier	storage		8477589	0					
ANR	8478391	Argument	use_unicode_names_for_keys		8477589	4					
ANR	8478392	Identifier	use_unicode_names_for_keys		8477589	0					
ANR	8478393	IfStatement	if ( gs_debug_c ( '=' ) )		8477589	16					
ANR	8478394	Condition	gs_debug_c ( '=' )	417:8:14628:14642	8477589	0	True				
ANR	8478395	CallExpression	gs_debug_c ( '=' )		8477589	0					
ANR	8478396	Callee	gs_debug_c		8477589	0					
ANR	8478397	Identifier	gs_debug_c		8477589	0					
ANR	8478398	ArgumentList	'='		8477589	1					
ANR	8478399	Argument	'='		8477589	0					
ANR	8478400	PrimaryExpression	'='		8477589	0					
ANR	8478401	ExpressionStatement	"pl_check_fonts ( mem , pfontdict , use_unicode_names_for_keys )"	418:8:14653:14711	8477589	1	True				
ANR	8478402	CallExpression	"pl_check_fonts ( mem , pfontdict , use_unicode_names_for_keys )"		8477589	0					
ANR	8478403	Callee	pl_check_fonts		8477589	0					
ANR	8478404	Identifier	pl_check_fonts		8477589	0					
ANR	8478405	ArgumentList	mem		8477589	1					
ANR	8478406	Argument	mem		8477589	0					
ANR	8478407	Identifier	mem		8477589	0					
ANR	8478408	Argument	pfontdict		8477589	1					
ANR	8478409	Identifier	pfontdict		8477589	0					
ANR	8478410	Argument	use_unicode_names_for_keys		8477589	2					
ANR	8478411	Identifier	use_unicode_names_for_keys		8477589	0					
ANR	8478412	ReturnStatement	return TRUE ;	420:4:14724:14735	8477589	17	True				
ANR	8478413	Identifier	TRUE		8477589	0					
ANR	8478414	ReturnType	int		8477589	1					
ANR	8478415	Identifier	pl_load_built_in_fonts		8477589	2					
ANR	8478416	ParameterList	"const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage , bool use_unicode_names_for_keys"		8477589	3					
ANR	8478417	Parameter	const char * pathname	248:23:7764:7783	8477589	0	True				
ANR	8478418	ParameterType	const char *		8477589	0					
ANR	8478419	Identifier	pathname		8477589	1					
ANR	8478420	Parameter	gs_memory_t * mem	248:45:7786:7802	8477589	1	True				
ANR	8478421	ParameterType	gs_memory_t *		8477589	0					
ANR	8478422	Identifier	mem		8477589	1					
ANR	8478423	Parameter	pl_dict_t * pfontdict	249:23:7828:7848	8477589	2	True				
ANR	8478424	ParameterType	pl_dict_t *		8477589	0					
ANR	8478425	Identifier	pfontdict		8477589	1					
ANR	8478426	Parameter	gs_font_dir * pdir	249:46:7851:7868	8477589	3	True				
ANR	8478427	ParameterType	gs_font_dir *		8477589	0					
ANR	8478428	Identifier	pdir		8477589	1					
ANR	8478429	Parameter	int storage	249:66:7871:7881	8477589	4	True				
ANR	8478430	ParameterType	int		8477589	0					
ANR	8478431	Identifier	storage		8477589	1					
ANR	8478432	Parameter	bool use_unicode_names_for_keys	250:23:7907:7937	8477589	5	True				
ANR	8478433	ParameterType	bool		8477589	0					
ANR	8478434	Identifier	use_unicode_names_for_keys		8477589	1					
ANR	8478435	CFGEntryNode	ENTRY		8477589		True				
ANR	8478436	CFGExitNode	EXIT		8477589		True				
ANR	8478437	Symbol	plugins		8477589						
ANR	8478438	Symbol	UFSTPLUGINS		8477589						
ANR	8478439	Symbol	resident_table [ j ] . full_font_name		8477589						
ANR	8478440	Symbol	UFSTFCOS		8477589						
ANR	8478441	Symbol	* fcos		8477589						
ANR	8478442	Symbol	fcoHandle		8477589						
ANR	8478443	Symbol	* resident_table		8477589						
ANR	8478444	Symbol	* key		8477589						
ANR	8478445	Symbol	plfont		8477589						
ANR	8478446	Symbol	plfont -> data_are_permanent		8477589						
ANR	8478447	Symbol	plugins_opened		8477589						
ANR	8478448	Symbol	resident_table [ j ] . character_complement		8477589						
ANR	8478449	Symbol	gx_UFST_init		8477589						
ANR	8478450	Symbol	bSize		8477589						
ANR	8478451	Symbol	strlen		8477589						
ANR	8478452	Symbol	& fcoHandle		8477589						
ANR	8478453	Symbol	gs_debug_c		8477589						
ANR	8478454	Symbol	plfont -> font_type		8477589						
ANR	8478455	Symbol	resident_table		8477589						
ANR	8478456	Symbol	strcmp		8477589						
ANR	8478457	Symbol	plfont -> storage		8477589						
ANR	8478458	Symbol	* fcHndlPlAry		8477589						
ANR	8478459	Symbol	pname		8477589						
ANR	8478460	Symbol	pdir		8477589						
ANR	8478461	Symbol	TRUE		8477589						
ANR	8478462	Symbol	pBuffer		8477589						
ANR	8478463	Symbol	plfont -> character_complement		8477589						
ANR	8478464	Symbol	* plugins		8477589						
ANR	8478465	Symbol	err_cd		8477589						
ANR	8478466	Symbol	pathname		8477589						
ANR	8478467	Symbol	pfDesc -> pcltFontNumber		8477589						
ANR	8478468	Symbol	resident_table [ j ] . font_type		8477589						
ANR	8478469	Symbol	pfontdict		8477589						
ANR	8478470	Symbol	ufst_root_dir		8477589						
ANR	8478471	Symbol	true		8477589						
ANR	8478472	Symbol	pl_load_mt_font		8477589						
ANR	8478473	Symbol	status		8477589						
ANR	8478474	Symbol	gs_throw1		8477589						
ANR	8478475	Symbol	pl_ufst_get_list		8477589						
ANR	8478476	Symbol	pthnm		8477589						
ANR	8478477	Symbol	pfDesc -> scaleFactor		8477589						
ANR	8478478	Symbol	* pfDesc		8477589						
ANR	8478479	Symbol	symname		8477589						
ANR	8478480	Symbol	gx_UFST_find_fco_handle_by_name		8477589						
ANR	8478481	Symbol	storage		8477589						
ANR	8478482	Symbol	pitch_cp		8477589						
ANR	8478483	Symbol	plfont -> pts_per_inch		8477589						
ANR	8478484	Symbol	fcos		8477589						
ANR	8478485	Symbol	found		8477589						
ANR	8478486	Symbol	mem		8477589						
ANR	8478487	Symbol	key		8477589						
ANR	8478488	Symbol	pl_dict_length		8477589						
ANR	8478489	Symbol	gs_alloc_bytes		8477589						
ANR	8478490	Symbol	resident_table [ j ] . unicode_fontname		8477589						
ANR	8478491	Symbol	pfDesc -> psname		8477589						
ANR	8478492	Symbol	false		8477589						
ANR	8478493	Symbol	i		8477589						
ANR	8478494	Symbol	j		8477589						
ANR	8478495	Symbol	use_unicode_names_for_keys		8477589						
ANR	8478496	Symbol	k		8477589						
ANR	8478497	Symbol	gx_UFST_open_static_fco		8477589						
ANR	8478498	Symbol	& plfont		8477589						
ANR	8478499	Symbol	pfDesc -> spaceBand		8477589						
ANR	8478500	Symbol	* j		8477589						
ANR	8478501	Symbol	* k		8477589						
ANR	8478502	Symbol	resident_table [ j ] . params		8477589						
ANR	8478503	Symbol	plfont -> params		8477589						
ANR	8478504	Symbol	* plfont		8477589						
ANR	8478505	Symbol	FALSE		8477589						
ANR	8478506	Symbol	fcHndlPlAry		8477589						
ANR	8478507	Symbol	pfDesc		8477589						
ANR	8478508	Function	pl_load_ufst_lineprinter	423:0:14740:18157							
ANR	8478509	FunctionDef	"pl_load_ufst_lineprinter (gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage , bool use_unicode_names_for_keys)"		8478508	0					
ANR	8478510	CompoundStatement		427:0:14927:18157	8478508	0					
ANR	8478511	IdentifierDeclStatement	int i ;	428:4:14933:14938	8478508	0	True				
ANR	8478512	IdentifierDecl	i		8478508	0					
ANR	8478513	IdentifierDeclType	int		8478508	0					
ANR	8478514	Identifier	i		8478508	1					
ANR	8478515	ForStatement	for ( i = 0 ; strlen ( resident_table [ i ] . full_font_name ) ; i ++ )		8478508	1					
ANR	8478516	ForInit	i = 0 ;	430:9:14950:14955	8478508	0	True				
ANR	8478517	AssignmentExpression	i = 0		8478508	0		=			
ANR	8478518	Identifier	i		8478508	0					
ANR	8478519	PrimaryExpression	0		8478508	1					
ANR	8478520	Condition	strlen ( resident_table [ i ] . full_font_name )	430:16:14957:14996	8478508	1	True				
ANR	8478521	CallExpression	strlen ( resident_table [ i ] . full_font_name )		8478508	0					
ANR	8478522	Callee	strlen		8478508	0					
ANR	8478523	Identifier	strlen		8478508	0					
ANR	8478524	ArgumentList	resident_table [ i ] . full_font_name		8478508	1					
ANR	8478525	Argument	resident_table [ i ] . full_font_name		8478508	0					
ANR	8478526	MemberAccess	resident_table [ i ] . full_font_name		8478508	0					
ANR	8478527	ArrayIndexing	resident_table [ i ]		8478508	0					
ANR	8478528	Identifier	resident_table		8478508	0					
ANR	8478529	Identifier	i		8478508	1					
ANR	8478530	Identifier	full_font_name		8478508	1					
ANR	8478531	PostIncDecOperationExpression	i ++	430:58:14999:15001	8478508	2	True				
ANR	8478532	Identifier	i		8478508	0					
ANR	8478533	IncDec	++		8478508	1					
ANR	8478534	CompoundStatement		4:63:76:76	8478508	3					
ANR	8478535	IfStatement	if ( resident_table [ i ] . params . typeface_family == 0 )		8478508	0					
ANR	8478536	Condition	resident_table [ i ] . params . typeface_family == 0	431:12:15018:15062	8478508	0	True				
ANR	8478537	EqualityExpression	resident_table [ i ] . params . typeface_family == 0		8478508	0		==			
ANR	8478538	MemberAccess	resident_table [ i ] . params . typeface_family		8478508	0					
ANR	8478539	MemberAccess	resident_table [ i ] . params		8478508	0					
ANR	8478540	ArrayIndexing	resident_table [ i ]		8478508	0					
ANR	8478541	Identifier	resident_table		8478508	0					
ANR	8478542	Identifier	i		8478508	1					
ANR	8478543	Identifier	params		8478508	1					
ANR	8478544	Identifier	typeface_family		8478508	1					
ANR	8478545	PrimaryExpression	0		8478508	1					
ANR	8478546	CompoundStatement		13:12:495:503	8478508	1					
ANR	8478547	IdentifierDeclStatement	byte * header = NULL ;	432:12:15079:15098	8478508	0	True				
ANR	8478548	IdentifierDecl	* header = NULL		8478508	0					
ANR	8478549	IdentifierDeclType	byte *		8478508	0					
ANR	8478550	Identifier	header		8478508	1					
ANR	8478551	AssignmentExpression	* header = NULL		8478508	2		=			
ANR	8478552	Identifier	NULL		8478508	0					
ANR	8478553	Identifier	NULL		8478508	1					
ANR	8478554	IdentifierDeclStatement	byte * char_data = NULL ;	433:12:15112:15134	8478508	1	True				
ANR	8478555	IdentifierDecl	* char_data = NULL		8478508	0					
ANR	8478556	IdentifierDeclType	byte *		8478508	0					
ANR	8478557	Identifier	char_data		8478508	1					
ANR	8478558	AssignmentExpression	* char_data = NULL		8478508	2		=			
ANR	8478559	Identifier	NULL		8478508	0					
ANR	8478560	Identifier	NULL		8478508	1					
ANR	8478561	IdentifierDeclStatement	"pl_font_t * pplfont = pl_alloc_font ( mem , ""pl_load_ufst_lineprinter pplfont"" ) ;"	434:12:15148:15239	8478508	2	True				
ANR	8478562	IdentifierDecl	"* pplfont = pl_alloc_font ( mem , ""pl_load_ufst_lineprinter pplfont"" )"		8478508	0					
ANR	8478563	IdentifierDeclType	pl_font_t *		8478508	0					
ANR	8478564	Identifier	pplfont		8478508	1					
ANR	8478565	AssignmentExpression	"* pplfont = pl_alloc_font ( mem , ""pl_load_ufst_lineprinter pplfont"" )"		8478508	2		=			
ANR	8478566	Identifier	pplfont		8478508	0					
ANR	8478567	CallExpression	"pl_alloc_font ( mem , ""pl_load_ufst_lineprinter pplfont"" )"		8478508	1					
ANR	8478568	Callee	pl_alloc_font		8478508	0					
ANR	8478569	Identifier	pl_alloc_font		8478508	0					
ANR	8478570	ArgumentList	mem		8478508	1					
ANR	8478571	Argument	mem		8478508	0					
ANR	8478572	Identifier	mem		8478508	0					
ANR	8478573	Argument	"""pl_load_ufst_lineprinter pplfont"""		8478508	1					
ANR	8478574	PrimaryExpression	"""pl_load_ufst_lineprinter pplfont"""		8478508	0					
ANR	8478575	IdentifierDeclStatement	"gs_font_base * pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pl_load_ufst_lineprinter pfont"" ) ;"	436:12:15253:15409	8478508	3	True				
ANR	8478576	IdentifierDecl	"* pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pl_load_ufst_lineprinter pfont"" )"		8478508	0					
ANR	8478577	IdentifierDeclType	gs_font_base *		8478508	0					
ANR	8478578	Identifier	pfont		8478508	1					
ANR	8478579	AssignmentExpression	"* pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pl_load_ufst_lineprinter pfont"" )"		8478508	2		=			
ANR	8478580	Identifier	pfont		8478508	0					
ANR	8478581	CallExpression	"gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pl_load_ufst_lineprinter pfont"" )"		8478508	1					
ANR	8478582	Callee	gs_alloc_struct		8478508	0					
ANR	8478583	Identifier	gs_alloc_struct		8478508	0					
ANR	8478584	ArgumentList	mem		8478508	1					
ANR	8478585	Argument	mem		8478508	0					
ANR	8478586	Identifier	mem		8478508	0					
ANR	8478587	Argument	gs_font_base		8478508	1					
ANR	8478588	Identifier	gs_font_base		8478508	0					
ANR	8478589	Argument	& st_gs_font_base		8478508	2					
ANR	8478590	UnaryOperationExpression	& st_gs_font_base		8478508	0					
ANR	8478591	UnaryOperator	&		8478508	0					
ANR	8478592	Identifier	st_gs_font_base		8478508	1					
ANR	8478593	Argument	"""pl_load_ufst_lineprinter pfont"""		8478508	3					
ANR	8478594	PrimaryExpression	"""pl_load_ufst_lineprinter pfont"""		8478508	0					
ANR	8478595	IdentifierDeclStatement	int code ;	439:12:15423:15431	8478508	4	True				
ANR	8478596	IdentifierDecl	code		8478508	0					
ANR	8478597	IdentifierDeclType	int		8478508	0					
ANR	8478598	Identifier	code		8478508	1					
ANR	8478599	ExpressionStatement	"pl_get_ulp_character_data ( & header , & char_data )"	441:12:15446:15492	8478508	5	True				
ANR	8478600	CallExpression	"pl_get_ulp_character_data ( & header , & char_data )"		8478508	0					
ANR	8478601	Callee	pl_get_ulp_character_data		8478508	0					
ANR	8478602	Identifier	pl_get_ulp_character_data		8478508	0					
ANR	8478603	ArgumentList	& header		8478508	1					
ANR	8478604	Argument	& header		8478508	0					
ANR	8478605	UnaryOperationExpression	& header		8478508	0					
ANR	8478606	UnaryOperator	&		8478508	0					
ANR	8478607	Identifier	header		8478508	1					
ANR	8478608	Argument	& char_data		8478508	1					
ANR	8478609	UnaryOperationExpression	& char_data		8478508	0					
ANR	8478610	UnaryOperator	&		8478508	0					
ANR	8478611	Identifier	char_data		8478508	1					
ANR	8478612	IfStatement	if ( pplfont == 0 || pfont == 0 )		8478508	6					
ANR	8478613	Condition	pplfont == 0 || pfont == 0	444:16:15572:15597	8478508	0	True				
ANR	8478614	OrExpression	pplfont == 0 || pfont == 0		8478508	0		||			
ANR	8478615	EqualityExpression	pplfont == 0		8478508	0		==			
ANR	8478616	Identifier	pplfont		8478508	0					
ANR	8478617	PrimaryExpression	0		8478508	1					
ANR	8478618	EqualityExpression	pfont == 0		8478508	1		==			
ANR	8478619	Identifier	pfont		8478508	0					
ANR	8478620	PrimaryExpression	0		8478508	1					
ANR	8478621	ReturnStatement	return - 1 ;	445:16:15616:15625	8478508	1	True				
ANR	8478622	UnaryOperationExpression	- 1		8478508	0					
ANR	8478623	UnaryOperator	-		8478508	0					
ANR	8478624	PrimaryExpression	1		8478508	1					
ANR	8478625	IfStatement	"if ( pl_fill_in_font ( pfont , pplfont , pdir , mem , ""lineprinter_fonts"" ) < 0 )"		8478508	7					
ANR	8478626	Condition	"pl_fill_in_font ( pfont , pplfont , pdir , mem , ""lineprinter_fonts"" ) < 0"	446:16:15643:15726	8478508	0	True				
ANR	8478627	RelationalExpression	"pl_fill_in_font ( pfont , pplfont , pdir , mem , ""lineprinter_fonts"" ) < 0"		8478508	0		<			
ANR	8478628	CallExpression	"pl_fill_in_font ( pfont , pplfont , pdir , mem , ""lineprinter_fonts"" )"		8478508	0					
ANR	8478629	Callee	pl_fill_in_font		8478508	0					
ANR	8478630	Identifier	pl_fill_in_font		8478508	0					
ANR	8478631	ArgumentList	pfont		8478508	1					
ANR	8478632	Argument	pfont		8478508	0					
ANR	8478633	Identifier	pfont		8478508	0					
ANR	8478634	Argument	pplfont		8478508	1					
ANR	8478635	Identifier	pplfont		8478508	0					
ANR	8478636	Argument	pdir		8478508	2					
ANR	8478637	Identifier	pdir		8478508	0					
ANR	8478638	Argument	mem		8478508	3					
ANR	8478639	Identifier	mem		8478508	0					
ANR	8478640	Argument	"""lineprinter_fonts"""		8478508	4					
ANR	8478641	PrimaryExpression	"""lineprinter_fonts"""		8478508	0					
ANR	8478642	PrimaryExpression	0		8478508	1					
ANR	8478643	ReturnStatement	return - 1 ;	448:16:15745:15754	8478508	1	True				
ANR	8478644	UnaryOperationExpression	- 1		8478508	0					
ANR	8478645	UnaryOperator	-		8478508	0					
ANR	8478646	PrimaryExpression	1		8478508	1					
ANR	8478647	ExpressionStatement	"pl_fill_in_bitmap_font ( pfont , gs_next_ids ( mem , 1 ) )"	450:12:15769:15819	8478508	8	True				
ANR	8478648	CallExpression	"pl_fill_in_bitmap_font ( pfont , gs_next_ids ( mem , 1 ) )"		8478508	0					
ANR	8478649	Callee	pl_fill_in_bitmap_font		8478508	0					
ANR	8478650	Identifier	pl_fill_in_bitmap_font		8478508	0					
ANR	8478651	ArgumentList	pfont		8478508	1					
ANR	8478652	Argument	pfont		8478508	0					
ANR	8478653	Identifier	pfont		8478508	0					
ANR	8478654	Argument	"gs_next_ids ( mem , 1 )"		8478508	1					
ANR	8478655	CallExpression	"gs_next_ids ( mem , 1 )"		8478508	0					
ANR	8478656	Callee	gs_next_ids		8478508	0					
ANR	8478657	Identifier	gs_next_ids		8478508	0					
ANR	8478658	ArgumentList	mem		8478508	1					
ANR	8478659	Argument	mem		8478508	0					
ANR	8478660	Identifier	mem		8478508	0					
ANR	8478661	Argument	1		8478508	1					
ANR	8478662	PrimaryExpression	1		8478508	0					
ANR	8478663	ExpressionStatement	pplfont -> params = resident_table [ i ] . params	451:12:15833:15875	8478508	9	True				
ANR	8478664	AssignmentExpression	pplfont -> params = resident_table [ i ] . params		8478508	0		=			
ANR	8478665	PtrMemberAccess	pplfont -> params		8478508	0					
ANR	8478666	Identifier	pplfont		8478508	0					
ANR	8478667	Identifier	params		8478508	1					
ANR	8478668	MemberAccess	resident_table [ i ] . params		8478508	1					
ANR	8478669	ArrayIndexing	resident_table [ i ]		8478508	0					
ANR	8478670	Identifier	resident_table		8478508	0					
ANR	8478671	Identifier	i		8478508	1					
ANR	8478672	Identifier	params		8478508	1					
ANR	8478673	ExpressionStatement	"memcpy ( pplfont -> character_complement , resident_table [ i ] . character_complement , 8 )"	452:12:15889:15988	8478508	10	True				
ANR	8478674	CallExpression	"memcpy ( pplfont -> character_complement , resident_table [ i ] . character_complement , 8 )"		8478508	0					
ANR	8478675	Callee	memcpy		8478508	0					
ANR	8478676	Identifier	memcpy		8478508	0					
ANR	8478677	ArgumentList	pplfont -> character_complement		8478508	1					
ANR	8478678	Argument	pplfont -> character_complement		8478508	0					
ANR	8478679	PtrMemberAccess	pplfont -> character_complement		8478508	0					
ANR	8478680	Identifier	pplfont		8478508	0					
ANR	8478681	Identifier	character_complement		8478508	1					
ANR	8478682	Argument	resident_table [ i ] . character_complement		8478508	1					
ANR	8478683	MemberAccess	resident_table [ i ] . character_complement		8478508	0					
ANR	8478684	ArrayIndexing	resident_table [ i ]		8478508	0					
ANR	8478685	Identifier	resident_table		8478508	0					
ANR	8478686	Identifier	i		8478508	1					
ANR	8478687	Identifier	character_complement		8478508	1					
ANR	8478688	Argument	8		8478508	2					
ANR	8478689	PrimaryExpression	8		8478508	0					
ANR	8478690	IfStatement	if ( use_unicode_names_for_keys )		8478508	11					
ANR	8478691	Condition	use_unicode_names_for_keys	455:16:16007:16032	8478508	0	True				
ANR	8478692	Identifier	use_unicode_names_for_keys		8478508	0					
ANR	8478693	ExpressionStatement	"pl_dict_put ( pfontdict , resident_table [ i ] . unicode_fontname , 32 , pplfont )"	456:16:16051:16150	8478508	1	True				
ANR	8478694	CallExpression	"pl_dict_put ( pfontdict , resident_table [ i ] . unicode_fontname , 32 , pplfont )"		8478508	0					
ANR	8478695	Callee	pl_dict_put		8478508	0					
ANR	8478696	Identifier	pl_dict_put		8478508	0					
ANR	8478697	ArgumentList	pfontdict		8478508	1					
ANR	8478698	Argument	pfontdict		8478508	0					
ANR	8478699	Identifier	pfontdict		8478508	0					
ANR	8478700	Argument	resident_table [ i ] . unicode_fontname		8478508	1					
ANR	8478701	MemberAccess	resident_table [ i ] . unicode_fontname		8478508	0					
ANR	8478702	ArrayIndexing	resident_table [ i ]		8478508	0					
ANR	8478703	Identifier	resident_table		8478508	0					
ANR	8478704	Identifier	i		8478508	1					
ANR	8478705	Identifier	unicode_fontname		8478508	1					
ANR	8478706	Argument	32		8478508	2					
ANR	8478707	PrimaryExpression	32		8478508	0					
ANR	8478708	Argument	pplfont		8478508	3					
ANR	8478709	Identifier	pplfont		8478508	0					
ANR	8478710	ElseStatement	else		8478508	0					
ANR	8478711	CompoundStatement		33:16:1259:1270	8478508	0					
ANR	8478712	IdentifierDeclStatement	byte key [ 3 ] ;	459:16:16187:16198	8478508	0	True				
ANR	8478713	IdentifierDecl	key [ 3 ]		8478508	0					
ANR	8478714	IdentifierDeclType	byte [ 3 ]		8478508	0					
ANR	8478715	Identifier	key		8478508	1					
ANR	8478716	PrimaryExpression	3		8478508	2					
ANR	8478717	ExpressionStatement	key [ 2 ] = ( byte ) i	461:16:16217:16234	8478508	1	True				
ANR	8478718	AssignmentExpression	key [ 2 ] = ( byte ) i		8478508	0		=			
ANR	8478719	ArrayIndexing	key [ 2 ]		8478508	0					
ANR	8478720	Identifier	key		8478508	0					
ANR	8478721	PrimaryExpression	2		8478508	1					
ANR	8478722	CastExpression	( byte ) i		8478508	1					
ANR	8478723	CastTarget	byte		8478508	0					
ANR	8478724	Identifier	i		8478508	1					
ANR	8478725	ExpressionStatement	key [ 0 ] = key [ 1 ] = 0	462:16:16252:16271	8478508	2	True				
ANR	8478726	AssignmentExpression	key [ 0 ] = key [ 1 ] = 0		8478508	0		=			
ANR	8478727	ArrayIndexing	key [ 0 ]		8478508	0					
ANR	8478728	Identifier	key		8478508	0					
ANR	8478729	PrimaryExpression	0		8478508	1					
ANR	8478730	AssignmentExpression	key [ 1 ] = 0		8478508	1		=			
ANR	8478731	ArrayIndexing	key [ 1 ]		8478508	0					
ANR	8478732	Identifier	key		8478508	0					
ANR	8478733	PrimaryExpression	1		8478508	1					
ANR	8478734	PrimaryExpression	0		8478508	1					
ANR	8478735	ExpressionStatement	"pl_dict_put ( pfontdict , key , sizeof ( key ) , pplfont )"	463:16:16289:16338	8478508	3	True				
ANR	8478736	CallExpression	"pl_dict_put ( pfontdict , key , sizeof ( key ) , pplfont )"		8478508	0					
ANR	8478737	Callee	pl_dict_put		8478508	0					
ANR	8478738	Identifier	pl_dict_put		8478508	0					
ANR	8478739	ArgumentList	pfontdict		8478508	1					
ANR	8478740	Argument	pfontdict		8478508	0					
ANR	8478741	Identifier	pfontdict		8478508	0					
ANR	8478742	Argument	key		8478508	1					
ANR	8478743	Identifier	key		8478508	0					
ANR	8478744	Argument	sizeof ( key )		8478508	2					
ANR	8478745	SizeofExpression	sizeof ( key )		8478508	0					
ANR	8478746	Sizeof	sizeof		8478508	0					
ANR	8478747	SizeofOperand	key		8478508	1					
ANR	8478748	Argument	pplfont		8478508	3					
ANR	8478749	Identifier	pplfont		8478508	0					
ANR	8478750	ExpressionStatement	pplfont -> storage = storage	465:12:16366:16392	8478508	12	True				
ANR	8478751	AssignmentExpression	pplfont -> storage = storage		8478508	0		=			
ANR	8478752	PtrMemberAccess	pplfont -> storage		8478508	0					
ANR	8478753	Identifier	pplfont		8478508	0					
ANR	8478754	Identifier	storage		8478508	1					
ANR	8478755	Identifier	storage		8478508	1					
ANR	8478756	ExpressionStatement	pplfont -> data_are_permanent = true	466:12:16439:16473	8478508	13	True				
ANR	8478757	AssignmentExpression	pplfont -> data_are_permanent = true		8478508	0		=			
ANR	8478758	PtrMemberAccess	pplfont -> data_are_permanent		8478508	0					
ANR	8478759	Identifier	pplfont		8478508	0					
ANR	8478760	Identifier	data_are_permanent		8478508	1					
ANR	8478761	Identifier	true		8478508	1					
ANR	8478762	ExpressionStatement	pplfont -> header = ( byte * ) header	467:12:16487:16520	8478508	14	True				
ANR	8478763	AssignmentExpression	pplfont -> header = ( byte * ) header		8478508	0		=			
ANR	8478764	PtrMemberAccess	pplfont -> header		8478508	0					
ANR	8478765	Identifier	pplfont		8478508	0					
ANR	8478766	Identifier	header		8478508	1					
ANR	8478767	CastExpression	( byte * ) header		8478508	1					
ANR	8478768	CastTarget	byte *		8478508	0					
ANR	8478769	Identifier	header		8478508	1					
ANR	8478770	ExpressionStatement	pplfont -> font_type = plft_8bit_printable	468:12:16534:16574	8478508	15	True				
ANR	8478771	AssignmentExpression	pplfont -> font_type = plft_8bit_printable		8478508	0		=			
ANR	8478772	PtrMemberAccess	pplfont -> font_type		8478508	0					
ANR	8478773	Identifier	pplfont		8478508	0					
ANR	8478774	Identifier	font_type		8478508	1					
ANR	8478775	Identifier	plft_8bit_printable		8478508	1					
ANR	8478776	ExpressionStatement	pplfont -> scaling_technology = plfst_bitmap	469:12:16588:16630	8478508	16	True				
ANR	8478777	AssignmentExpression	pplfont -> scaling_technology = plfst_bitmap		8478508	0		=			
ANR	8478778	PtrMemberAccess	pplfont -> scaling_technology		8478508	0					
ANR	8478779	Identifier	pplfont		8478508	0					
ANR	8478780	Identifier	scaling_technology		8478508	1					
ANR	8478781	Identifier	plfst_bitmap		8478508	1					
ANR	8478782	ExpressionStatement	pplfont -> is_xl_format = false	470:12:16644:16673	8478508	17	True				
ANR	8478783	AssignmentExpression	pplfont -> is_xl_format = false		8478508	0		=			
ANR	8478784	PtrMemberAccess	pplfont -> is_xl_format		8478508	0					
ANR	8478785	Identifier	pplfont		8478508	0					
ANR	8478786	Identifier	is_xl_format		8478508	1					
ANR	8478787	Identifier	false		8478508	1					
ANR	8478788	ExpressionStatement	pplfont -> resolution . x = pplfont -> resolution . y = 300	471:12:16687:16738	8478508	18	True				
ANR	8478789	AssignmentExpression	pplfont -> resolution . x = pplfont -> resolution . y = 300		8478508	0		=			
ANR	8478790	MemberAccess	pplfont -> resolution . x		8478508	0					
ANR	8478791	PtrMemberAccess	pplfont -> resolution		8478508	0					
ANR	8478792	Identifier	pplfont		8478508	0					
ANR	8478793	Identifier	resolution		8478508	1					
ANR	8478794	Identifier	x		8478508	1					
ANR	8478795	AssignmentExpression	pplfont -> resolution . y = 300		8478508	1		=			
ANR	8478796	MemberAccess	pplfont -> resolution . y		8478508	0					
ANR	8478797	PtrMemberAccess	pplfont -> resolution		8478508	0					
ANR	8478798	Identifier	pplfont		8478508	0					
ANR	8478799	Identifier	resolution		8478508	1					
ANR	8478800	Identifier	y		8478508	1					
ANR	8478801	PrimaryExpression	300		8478508	1					
ANR	8478802	ExpressionStatement	"code = pl_font_alloc_glyph_table ( pplfont , 256 , mem , ""pl_load_ufst_lineprinter pplfont (glyph table)"" )"	473:12:16753:16899	8478508	19	True				
ANR	8478803	AssignmentExpression	"code = pl_font_alloc_glyph_table ( pplfont , 256 , mem , ""pl_load_ufst_lineprinter pplfont (glyph table)"" )"		8478508	0		=			
ANR	8478804	Identifier	code		8478508	0					
ANR	8478805	CallExpression	"pl_font_alloc_glyph_table ( pplfont , 256 , mem , ""pl_load_ufst_lineprinter pplfont (glyph table)"" )"		8478508	1					
ANR	8478806	Callee	pl_font_alloc_glyph_table		8478508	0					
ANR	8478807	Identifier	pl_font_alloc_glyph_table		8478508	0					
ANR	8478808	ArgumentList	pplfont		8478508	1					
ANR	8478809	Argument	pplfont		8478508	0					
ANR	8478810	Identifier	pplfont		8478508	0					
ANR	8478811	Argument	256		8478508	1					
ANR	8478812	PrimaryExpression	256		8478508	0					
ANR	8478813	Argument	mem		8478508	2					
ANR	8478814	Identifier	mem		8478508	0					
ANR	8478815	Argument	"""pl_load_ufst_lineprinter pplfont (glyph table)"""		8478508	3					
ANR	8478816	PrimaryExpression	"""pl_load_ufst_lineprinter pplfont (glyph table)"""		8478508	0					
ANR	8478817	IfStatement	if ( code < 0 )		8478508	20					
ANR	8478818	Condition	code < 0	475:16:16917:16924	8478508	0	True				
ANR	8478819	RelationalExpression	code < 0		8478508	0		<			
ANR	8478820	Identifier	code		8478508	0					
ANR	8478821	PrimaryExpression	0		8478508	1					
ANR	8478822	ReturnStatement	return code ;	476:16:16943:16954	8478508	1	True				
ANR	8478823	Identifier	code		8478508	0					
ANR	8478824	WhileStatement	while ( 1 )		8478508	21					
ANR	8478825	Condition	1	478:19:16976:16976	8478508	0	True				
ANR	8478826	PrimaryExpression	1		8478508	0					
ANR	8478827	CompoundStatement		59:16:2402:2414	8478508	1					
ANR	8478828	IdentifierDeclStatement	uint width = pl_get_uint16 ( char_data + 12 ) ;	479:16:16997:17039	8478508	0	True				
ANR	8478829	IdentifierDecl	width = pl_get_uint16 ( char_data + 12 )		8478508	0					
ANR	8478830	IdentifierDeclType	uint		8478508	0					
ANR	8478831	Identifier	width		8478508	1					
ANR	8478832	AssignmentExpression	width = pl_get_uint16 ( char_data + 12 )		8478508	2		=			
ANR	8478833	Identifier	width		8478508	0					
ANR	8478834	CallExpression	pl_get_uint16 ( char_data + 12 )		8478508	1					
ANR	8478835	Callee	pl_get_uint16		8478508	0					
ANR	8478836	Identifier	pl_get_uint16		8478508	0					
ANR	8478837	ArgumentList	char_data + 12		8478508	1					
ANR	8478838	Argument	char_data + 12		8478508	0					
ANR	8478839	AdditiveExpression	char_data + 12		8478508	0		+			
ANR	8478840	Identifier	char_data		8478508	0					
ANR	8478841	PrimaryExpression	12		8478508	1					
ANR	8478842	IdentifierDeclStatement	uint height = pl_get_uint16 ( char_data + 14 ) ;	480:16:17057:17100	8478508	1	True				
ANR	8478843	IdentifierDecl	height = pl_get_uint16 ( char_data + 14 )		8478508	0					
ANR	8478844	IdentifierDeclType	uint		8478508	0					
ANR	8478845	Identifier	height		8478508	1					
ANR	8478846	AssignmentExpression	height = pl_get_uint16 ( char_data + 14 )		8478508	2		=			
ANR	8478847	Identifier	height		8478508	0					
ANR	8478848	CallExpression	pl_get_uint16 ( char_data + 14 )		8478508	1					
ANR	8478849	Callee	pl_get_uint16		8478508	0					
ANR	8478850	Identifier	pl_get_uint16		8478508	0					
ANR	8478851	ArgumentList	char_data + 14		8478508	1					
ANR	8478852	Argument	char_data + 14		8478508	0					
ANR	8478853	AdditiveExpression	char_data + 14		8478508	0		+			
ANR	8478854	Identifier	char_data		8478508	0					
ANR	8478855	PrimaryExpression	14		8478508	1					
ANR	8478856	IdentifierDeclStatement	uint ccode_plus_header_plus_data = 2 + 16 + ( ( ( width + 7 ) >> 3 ) * height ) ;	481:16:17118:17211	8478508	2	True				
ANR	8478857	IdentifierDecl	ccode_plus_header_plus_data = 2 + 16 + ( ( ( width + 7 ) >> 3 ) * height )		8478508	0					
ANR	8478858	IdentifierDeclType	uint		8478508	0					
ANR	8478859	Identifier	ccode_plus_header_plus_data		8478508	1					
ANR	8478860	AssignmentExpression	ccode_plus_header_plus_data = 2 + 16 + ( ( ( width + 7 ) >> 3 ) * height )		8478508	2		=			
ANR	8478861	Identifier	ccode_plus_header_plus_data		8478508	0					
ANR	8478862	AdditiveExpression	2 + 16 + ( ( ( width + 7 ) >> 3 ) * height )		8478508	1		+			
ANR	8478863	PrimaryExpression	2		8478508	0					
ANR	8478864	AdditiveExpression	16 + ( ( ( width + 7 ) >> 3 ) * height )		8478508	1		+			
ANR	8478865	PrimaryExpression	16		8478508	0					
ANR	8478866	MultiplicativeExpression	( ( width + 7 ) >> 3 ) * height		8478508	1		*			
ANR	8478867	ShiftExpression	( width + 7 ) >> 3		8478508	0		>>			
ANR	8478868	AdditiveExpression	width + 7		8478508	0		+			
ANR	8478869	Identifier	width		8478508	0					
ANR	8478870	PrimaryExpression	7		8478508	1					
ANR	8478871	PrimaryExpression	3		8478508	1					
ANR	8478872	Identifier	height		8478508	1					
ANR	8478873	IdentifierDeclStatement	"uint ucode = pl_map_MSL_to_Unicode ( pl_get_uint16 ( char_data ) , 0 ) ;"	483:16:17229:17312	8478508	3	True				
ANR	8478874	IdentifierDecl	"ucode = pl_map_MSL_to_Unicode ( pl_get_uint16 ( char_data ) , 0 )"		8478508	0					
ANR	8478875	IdentifierDeclType	uint		8478508	0					
ANR	8478876	Identifier	ucode		8478508	1					
ANR	8478877	AssignmentExpression	"ucode = pl_map_MSL_to_Unicode ( pl_get_uint16 ( char_data ) , 0 )"		8478508	2		=			
ANR	8478878	Identifier	ucode		8478508	0					
ANR	8478879	CallExpression	"pl_map_MSL_to_Unicode ( pl_get_uint16 ( char_data ) , 0 )"		8478508	1					
ANR	8478880	Callee	pl_map_MSL_to_Unicode		8478508	0					
ANR	8478881	Identifier	pl_map_MSL_to_Unicode		8478508	0					
ANR	8478882	ArgumentList	pl_get_uint16 ( char_data )		8478508	1					
ANR	8478883	Argument	pl_get_uint16 ( char_data )		8478508	0					
ANR	8478884	CallExpression	pl_get_uint16 ( char_data )		8478508	0					
ANR	8478885	Callee	pl_get_uint16		8478508	0					
ANR	8478886	Identifier	pl_get_uint16		8478508	0					
ANR	8478887	ArgumentList	char_data		8478508	1					
ANR	8478888	Argument	char_data		8478508	0					
ANR	8478889	Identifier	char_data		8478508	0					
ANR	8478890	Argument	0		8478508	1					
ANR	8478891	PrimaryExpression	0		8478508	0					
ANR	8478892	IdentifierDeclStatement	int code = 0 ;	485:16:17330:17342	8478508	4	True				
ANR	8478893	IdentifierDecl	code = 0		8478508	0					
ANR	8478894	IdentifierDeclType	int		8478508	0					
ANR	8478895	Identifier	code		8478508	1					
ANR	8478896	AssignmentExpression	code = 0		8478508	2		=			
ANR	8478897	Identifier	code		8478508	0					
ANR	8478898	PrimaryExpression	0		8478508	1					
ANR	8478899	IfStatement	if ( ucode != 0xffff )		8478508	5					
ANR	8478900	Condition	ucode != 0xffff	489:20:17464:17478	8478508	0	True				
ANR	8478901	EqualityExpression	ucode != 0xffff		8478508	0		!=			
ANR	8478902	Identifier	ucode		8478508	0					
ANR	8478903	PrimaryExpression	0xffff		8478508	1					
ANR	8478904	ExpressionStatement	"code = pl_font_add_glyph ( pplfont , ucode , char_data + 2 , ccode_plus_header_plus_data )"	490:20:17501:17585	8478508	1	True				
ANR	8478905	AssignmentExpression	"code = pl_font_add_glyph ( pplfont , ucode , char_data + 2 , ccode_plus_header_plus_data )"		8478508	0		=			
ANR	8478906	Identifier	code		8478508	0					
ANR	8478907	CallExpression	"pl_font_add_glyph ( pplfont , ucode , char_data + 2 , ccode_plus_header_plus_data )"		8478508	1					
ANR	8478908	Callee	pl_font_add_glyph		8478508	0					
ANR	8478909	Identifier	pl_font_add_glyph		8478508	0					
ANR	8478910	ArgumentList	pplfont		8478508	1					
ANR	8478911	Argument	pplfont		8478508	0					
ANR	8478912	Identifier	pplfont		8478508	0					
ANR	8478913	Argument	ucode		8478508	1					
ANR	8478914	Identifier	ucode		8478508	0					
ANR	8478915	Argument	char_data + 2		8478508	2					
ANR	8478916	AdditiveExpression	char_data + 2		8478508	0		+			
ANR	8478917	Identifier	char_data		8478508	0					
ANR	8478918	PrimaryExpression	2		8478508	1					
ANR	8478919	Argument	ccode_plus_header_plus_data		8478508	3					
ANR	8478920	Identifier	ccode_plus_header_plus_data		8478508	0					
ANR	8478921	IfStatement	if ( code < 0 )		8478508	6					
ANR	8478922	Condition	code < 0	492:20:17608:17615	8478508	0	True				
ANR	8478923	RelationalExpression	code < 0		8478508	0		<			
ANR	8478924	Identifier	code		8478508	0					
ANR	8478925	PrimaryExpression	0		8478508	1					
ANR	8478926	ReturnStatement	return - 1 ;	494:20:17681:17690	8478508	1	True				
ANR	8478927	UnaryOperationExpression	- 1		8478508	0					
ANR	8478928	UnaryOperator	-		8478508	0					
ANR	8478929	PrimaryExpression	1		8478508	1					
ANR	8478930	ExpressionStatement	char_data += ccode_plus_header_plus_data	496:16:17791:17831	8478508	7	True				
ANR	8478931	AssignmentExpression	char_data += ccode_plus_header_plus_data		8478508	0		+=			
ANR	8478932	Identifier	char_data		8478508	0					
ANR	8478933	Identifier	ccode_plus_header_plus_data		8478508	1					
ANR	8478934	IfStatement	if ( pl_get_uint16 ( char_data ) == 0 )		8478508	8					
ANR	8478935	Condition	pl_get_uint16 ( char_data ) == 0	499:20:17904:17932	8478508	0	True				
ANR	8478936	EqualityExpression	pl_get_uint16 ( char_data ) == 0		8478508	0		==			
ANR	8478937	CallExpression	pl_get_uint16 ( char_data )		8478508	0					
ANR	8478938	Callee	pl_get_uint16		8478508	0					
ANR	8478939	Identifier	pl_get_uint16		8478508	0					
ANR	8478940	ArgumentList	char_data		8478508	1					
ANR	8478941	Argument	char_data		8478508	0					
ANR	8478942	Identifier	char_data		8478508	0					
ANR	8478943	PrimaryExpression	0		8478508	1					
ANR	8478944	BreakStatement	break ;	500:20:17955:17960	8478508	1	True				
ANR	8478945	ExpressionStatement	"code = gs_definefont ( pdir , ( gs_font * ) pfont )"	502:12:17988:18033	8478508	22	True				
ANR	8478946	AssignmentExpression	"code = gs_definefont ( pdir , ( gs_font * ) pfont )"		8478508	0		=			
ANR	8478947	Identifier	code		8478508	0					
ANR	8478948	CallExpression	"gs_definefont ( pdir , ( gs_font * ) pfont )"		8478508	1					
ANR	8478949	Callee	gs_definefont		8478508	0					
ANR	8478950	Identifier	gs_definefont		8478508	0					
ANR	8478951	ArgumentList	pdir		8478508	1					
ANR	8478952	Argument	pdir		8478508	0					
ANR	8478953	Identifier	pdir		8478508	0					
ANR	8478954	Argument	( gs_font * ) pfont		8478508	1					
ANR	8478955	CastExpression	( gs_font * ) pfont		8478508	0					
ANR	8478956	CastTarget	gs_font *		8478508	0					
ANR	8478957	Identifier	pfont		8478508	1					
ANR	8478958	IfStatement	if ( code < 0 )		8478508	23					
ANR	8478959	Condition	code < 0	503:16:18051:18058	8478508	0	True				
ANR	8478960	RelationalExpression	code < 0		8478508	0		<			
ANR	8478961	Identifier	code		8478508	0					
ANR	8478962	PrimaryExpression	0		8478508	1					
ANR	8478963	ReturnStatement	return - 1 ;	505:16:18116:18125	8478508	1	True				
ANR	8478964	UnaryOperationExpression	- 1		8478508	0					
ANR	8478965	UnaryOperator	-		8478508	0					
ANR	8478966	PrimaryExpression	1		8478508	1					
ANR	8478967	ReturnStatement	return 0 ;	508:4:18147:18155	8478508	2	True				
ANR	8478968	PrimaryExpression	0		8478508	0					
ANR	8478969	ReturnType	int		8478508	1					
ANR	8478970	Identifier	pl_load_ufst_lineprinter		8478508	2					
ANR	8478971	ParameterList	"gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage , bool use_unicode_names_for_keys"		8478508	3					
ANR	8478972	Parameter	gs_memory_t * mem	424:25:14769:14785	8478508	0	True				
ANR	8478973	ParameterType	gs_memory_t *		8478508	0					
ANR	8478974	Identifier	mem		8478508	1					
ANR	8478975	Parameter	pl_dict_t * pfontdict	424:44:14788:14808	8478508	1	True				
ANR	8478976	ParameterType	pl_dict_t *		8478508	0					
ANR	8478977	Identifier	pfontdict		8478508	1					
ANR	8478978	Parameter	gs_font_dir * pdir	425:25:14836:14853	8478508	2	True				
ANR	8478979	ParameterType	gs_font_dir *		8478508	0					
ANR	8478980	Identifier	pdir		8478508	1					
ANR	8478981	Parameter	int storage	425:45:14856:14866	8478508	3	True				
ANR	8478982	ParameterType	int		8478508	0					
ANR	8478983	Identifier	storage		8478508	1					
ANR	8478984	Parameter	bool use_unicode_names_for_keys	426:25:14894:14924	8478508	4	True				
ANR	8478985	ParameterType	bool		8478508	0					
ANR	8478986	Identifier	use_unicode_names_for_keys		8478508	1					
ANR	8478987	CFGEntryNode	ENTRY		8478508		True				
ANR	8478988	CFGExitNode	EXIT		8478508		True				
ANR	8478989	Symbol	pplfont -> data_are_permanent		8478508						
ANR	8478990	Symbol	resident_table [ i ] . unicode_fontname		8478508						
ANR	8478991	Symbol	* resident_table		8478508						
ANR	8478992	Symbol	* key		8478508						
ANR	8478993	Symbol	gs_font_base		8478508						
ANR	8478994	Symbol	gs_next_ids		8478508						
ANR	8478995	Symbol	gs_definefont		8478508						
ANR	8478996	Symbol	strlen		8478508						
ANR	8478997	Symbol	pplfont -> is_xl_format		8478508						
ANR	8478998	Symbol	resident_table [ i ] . params		8478508						
ANR	8478999	Symbol	& st_gs_font_base		8478508						
ANR	8479000	Symbol	ccode_plus_header_plus_data		8478508						
ANR	8479001	Symbol	pplfont -> scaling_technology		8478508						
ANR	8479002	Symbol	resident_table		8478508						
ANR	8479003	Symbol	* pplfont		8478508						
ANR	8479004	Symbol	height		8478508						
ANR	8479005	Symbol	NULL		8478508						
ANR	8479006	Symbol	pplfont -> header		8478508						
ANR	8479007	Symbol	pplfont -> resolution . y		8478508						
ANR	8479008	Symbol	pplfont -> resolution . x		8478508						
ANR	8479009	Symbol	pdir		8478508						
ANR	8479010	Symbol	pplfont -> resolution		8478508						
ANR	8479011	Symbol	plft_8bit_printable		8478508						
ANR	8479012	Symbol	& header		8478508						
ANR	8479013	Symbol	pfontdict		8478508						
ANR	8479014	Symbol	pplfont -> params		8478508						
ANR	8479015	Symbol	true		8478508						
ANR	8479016	Symbol	pl_font_add_glyph		8478508						
ANR	8479017	Symbol	header		8478508						
ANR	8479018	Symbol	& char_data		8478508						
ANR	8479019	Symbol	pplfont -> font_type		8478508						
ANR	8479020	Symbol	pl_alloc_font		8478508						
ANR	8479021	Symbol	pplfont		8478508						
ANR	8479022	Symbol	code		8478508						
ANR	8479023	Symbol	plfst_bitmap		8478508						
ANR	8479024	Symbol	gs_alloc_struct		8478508						
ANR	8479025	Symbol	resident_table [ i ] . params . typeface_family		8478508						
ANR	8479026	Symbol	pl_map_MSL_to_Unicode		8478508						
ANR	8479027	Symbol	resident_table [ i ] . character_complement		8478508						
ANR	8479028	Symbol	storage		8478508						
ANR	8479029	Symbol	resident_table [ i ] . full_font_name		8478508						
ANR	8479030	Symbol	pplfont -> character_complement		8478508						
ANR	8479031	Symbol	mem		8478508						
ANR	8479032	Symbol	pl_font_alloc_glyph_table		8478508						
ANR	8479033	Symbol	key		8478508						
ANR	8479034	Symbol	pl_get_uint16		8478508						
ANR	8479035	Symbol	pfont		8478508						
ANR	8479036	Symbol	false		8478508						
ANR	8479037	Symbol	i		8478508						
ANR	8479038	Symbol	pplfont -> storage		8478508						
ANR	8479039	Symbol	use_unicode_names_for_keys		8478508						
ANR	8479040	Symbol	char_data		8478508						
ANR	8479041	Symbol	pl_fill_in_font		8478508						
ANR	8479042	Symbol	* i		8478508						
ANR	8479043	Symbol	width		8478508						
ANR	8479044	Symbol	ucode		8478508						
ANR	8479045	Function	pl_close_built_in_fonts	515:0:18302:18622							
ANR	8479046	FunctionDef	pl_close_built_in_fonts (pl_dict_t * builtinfonts)		8479045	0					
ANR	8479047	CompoundStatement		517:0:18357:18622	8479045	0					
ANR	8479048	IdentifierDeclStatement	int i ;	518:4:18363:18368	8479045	0	True				
ANR	8479049	IdentifierDecl	i		8479045	0					
ANR	8479050	IdentifierDeclType	int		8479045	0					
ANR	8479051	Identifier	i		8479045	1					
ANR	8479052	ExpressionStatement	gx_UFST_close_static_fcos ( )	521:4:18397:18424	8479045	1	True				
ANR	8479053	CallExpression	gx_UFST_close_static_fcos ( )		8479045	0					
ANR	8479054	Callee	gx_UFST_close_static_fcos		8479045	0					
ANR	8479055	Identifier	gx_UFST_close_static_fcos		8479045	0					
ANR	8479056	ArgumentList			8479045	1					
ANR	8479057	ForStatement	for ( i = 0 ; fcHndlPlAry [ i ] != - 1 ; i ++ )		8479045	2					
ANR	8479058	ForInit	i = 0 ;	524:9:18460:18465	8479045	0	True				
ANR	8479059	AssignmentExpression	i = 0		8479045	0		=			
ANR	8479060	Identifier	i		8479045	0					
ANR	8479061	PrimaryExpression	0		8479045	1					
ANR	8479062	Condition	fcHndlPlAry [ i ] != - 1	524:16:18467:18486	8479045	1	True				
ANR	8479063	EqualityExpression	fcHndlPlAry [ i ] != - 1		8479045	0		!=			
ANR	8479064	ArrayIndexing	fcHndlPlAry [ i ]		8479045	0					
ANR	8479065	Identifier	fcHndlPlAry		8479045	0					
ANR	8479066	Identifier	i		8479045	1					
ANR	8479067	UnaryOperationExpression	- 1		8479045	1					
ANR	8479068	UnaryOperator	-		8479045	0					
ANR	8479069	PrimaryExpression	1		8479045	1					
ANR	8479070	PostIncDecOperationExpression	i ++	524:38:18489:18491	8479045	2	True				
ANR	8479071	Identifier	i		8479045	0					
ANR	8479072	IncDec	++		8479045	1					
ANR	8479073	CompoundStatement		8:43:136:136	8479045	3					
ANR	8479074	Statement	CGIFfco_Close	525:8:18504:18516	8479045	0	True				
ANR	8479075	Statement	(	525:21:18517:18517	8479045	1	True				
ANR	8479076	Statement	FSA	525:22:18518:18520	8479045	2	True				
ANR	8479077	Statement	fcHndlPlAry	525:26:18522:18532	8479045	3	True				
ANR	8479078	Statement	[	525:37:18533:18533	8479045	4	True				
ANR	8479079	Statement	i	525:38:18534:18534	8479045	5	True				
ANR	8479080	Statement	]	525:39:18535:18535	8479045	6	True				
ANR	8479081	Statement	)	525:40:18536:18536	8479045	7	True				
ANR	8479082	ExpressionStatement		525:41:18537:18537	8479045	8	True				
ANR	8479083	ExpressionStatement	"dprintf1 ( ""closing handle %d\\n"" , fcHndlPlAry [ i ] )"	526:8:18547:18594	8479045	9	True				
ANR	8479084	CallExpression	"dprintf1 ( ""closing handle %d\\n"" , fcHndlPlAry [ i ] )"		8479045	0					
ANR	8479085	Callee	dprintf1		8479045	0					
ANR	8479086	Identifier	dprintf1		8479045	0					
ANR	8479087	ArgumentList	"""closing handle %d\\n"""		8479045	1					
ANR	8479088	Argument	"""closing handle %d\\n"""		8479045	0					
ANR	8479089	PrimaryExpression	"""closing handle %d\\n"""		8479045	0					
ANR	8479090	Argument	fcHndlPlAry [ i ]		8479045	1					
ANR	8479091	ArrayIndexing	fcHndlPlAry [ i ]		8479045	0					
ANR	8479092	Identifier	fcHndlPlAry		8479045	0					
ANR	8479093	Identifier	i		8479045	1					
ANR	8479094	ExpressionStatement	gx_UFST_fini ( )	528:4:18606:18620	8479045	3	True				
ANR	8479095	CallExpression	gx_UFST_fini ( )		8479045	0					
ANR	8479096	Callee	gx_UFST_fini		8479045	0					
ANR	8479097	Identifier	gx_UFST_fini		8479045	0					
ANR	8479098	ArgumentList			8479045	1					
ANR	8479099	ReturnType	void		8479045	1					
ANR	8479100	Identifier	pl_close_built_in_fonts		8479045	2					
ANR	8479101	ParameterList	pl_dict_t * builtinfonts		8479045	3					
ANR	8479102	Parameter	pl_dict_t * builtinfonts	516:24:18331:18354	8479045	0	True				
ANR	8479103	ParameterType	pl_dict_t *		8479045	0					
ANR	8479104	Identifier	builtinfonts		8479045	1					
ANR	8479105	CFGEntryNode	ENTRY		8479045		True				
ANR	8479106	CFGExitNode	EXIT		8479045		True				
ANR	8479107	Symbol	builtinfonts		8479045						
ANR	8479108	Symbol	* i		8479045						
ANR	8479109	Symbol	* fcHndlPlAry		8479045						
ANR	8479110	Symbol	i		8479045						
ANR	8479111	Symbol	fcHndlPlAry		8479045						
ANR	8479112	Function	pl_load_simm_fonts	534:0:18693:18874							
ANR	8479113	FunctionDef	"pl_load_simm_fonts (const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage)"		8479112	0					
ANR	8479114	CompoundStatement		537:0:18832:18874	8479112	0					
ANR	8479115	ReturnStatement	return 0 ;	539:4:18864:18872	8479112	0	True				
ANR	8479116	PrimaryExpression	0		8479112	0					
ANR	8479117	ReturnType	int		8479112	1					
ANR	8479118	Identifier	pl_load_simm_fonts		8479112	2					
ANR	8479119	ParameterList	"const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage"		8479112	3					
ANR	8479120	Parameter	const char * pathname	535:19:18716:18735	8479112	0	True				
ANR	8479121	ParameterType	const char *		8479112	0					
ANR	8479122	Identifier	pathname		8479112	1					
ANR	8479123	Parameter	gs_memory_t * mem	535:41:18738:18754	8479112	1	True				
ANR	8479124	ParameterType	gs_memory_t *		8479112	0					
ANR	8479125	Identifier	mem		8479112	1					
ANR	8479126	Parameter	pl_dict_t * pfontdict	536:19:18776:18796	8479112	2	True				
ANR	8479127	ParameterType	pl_dict_t *		8479112	0					
ANR	8479128	Identifier	pfontdict		8479112	1					
ANR	8479129	Parameter	gs_font_dir * pdir	536:42:18799:18816	8479112	3	True				
ANR	8479130	ParameterType	gs_font_dir *		8479112	0					
ANR	8479131	Identifier	pdir		8479112	1					
ANR	8479132	Parameter	int storage	536:62:18819:18829	8479112	4	True				
ANR	8479133	ParameterType	int		8479112	0					
ANR	8479134	Identifier	storage		8479112	1					
ANR	8479135	CFGEntryNode	ENTRY		8479112		True				
ANR	8479136	CFGExitNode	EXIT		8479112		True				
ANR	8479137	Symbol	mem		8479112						
ANR	8479138	Symbol	pfontdict		8479112						
ANR	8479139	Symbol	pdir		8479112						
ANR	8479140	Symbol	storage		8479112						
ANR	8479141	Symbol	pathname		8479112						
ANR	8479142	Function	pl_load_cartridge_fonts	543:0:18912:19127							
ANR	8479143	FunctionDef	"pl_load_cartridge_fonts (const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage)"		8479142	0					
ANR	8479144	CompoundStatement		547:0:19085:19127	8479142	0					
ANR	8479145	ReturnStatement	return 0 ;	549:4:19117:19125	8479142	0	True				
ANR	8479146	PrimaryExpression	0		8479142	0					
ANR	8479147	ReturnType	int		8479142	1					
ANR	8479148	Identifier	pl_load_cartridge_fonts		8479142	2					
ANR	8479149	ParameterList	"const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage"		8479142	3					
ANR	8479150	Parameter	const char * pathname	544:24:18940:18959	8479142	0	True				
ANR	8479151	ParameterType	const char *		8479142	0					
ANR	8479152	Identifier	pathname		8479142	1					
ANR	8479153	Parameter	gs_memory_t * mem	544:46:18962:18978	8479142	1	True				
ANR	8479154	ParameterType	gs_memory_t *		8479142	0					
ANR	8479155	Identifier	mem		8479142	1					
ANR	8479156	Parameter	pl_dict_t * pfontdict	545:24:19005:19025	8479142	2	True				
ANR	8479157	ParameterType	pl_dict_t *		8479142	0					
ANR	8479158	Identifier	pfontdict		8479142	1					
ANR	8479159	Parameter	gs_font_dir * pdir	545:47:19028:19045	8479142	3	True				
ANR	8479160	ParameterType	gs_font_dir *		8479142	0					
ANR	8479161	Identifier	pdir		8479142	1					
ANR	8479162	Parameter	int storage	546:24:19072:19082	8479142	4	True				
ANR	8479163	ParameterType	int		8479142	0					
ANR	8479164	Identifier	storage		8479142	1					
ANR	8479165	CFGEntryNode	ENTRY		8479142		True				
ANR	8479166	CFGExitNode	EXIT		8479142		True				
ANR	8479167	Symbol	mem		8479142						
ANR	8479168	Symbol	pfontdict		8479142						
ANR	8479169	Symbol	pdir		8479142						
ANR	8479170	Symbol	storage		8479142						
ANR	8479171	Symbol	pathname		8479142						
