command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1216358	File	data/converged/CVE-2018-16863_ghostpdl/base_gxsamplp.h								
ANR	1216359	DeclStmt									
ANR	1216360	Decl							define NEXT_MAP	define NEXT_MAP	map
ANR	1216361	Function	TEMPLATE_sample_unpack_1	39:0:1454:3433							
ANR	1216362	FunctionDef	"TEMPLATE_sample_unpack_1 (byte * bptr , int * pdata_x , const byte * data , int data_x , uint dsize , const sample_map * smap , int spread , int num_components_per_plane)"		1216361	0					
ANR	1216363	CompoundStatement		43:0:1660:3433	1216361	0					
ANR	1216364	IdentifierDeclStatement	const sample_lookup_t * ptab = & smap -> table ;	44:4:1666:1709	1216361	0	True				
ANR	1216365	IdentifierDecl	* ptab = & smap -> table		1216361	0					
ANR	1216366	IdentifierDeclType	const sample_lookup_t *		1216361	0					
ANR	1216367	Identifier	ptab		1216361	1					
ANR	1216368	AssignmentExpression	* ptab = & smap -> table		1216361	2		=			
ANR	1216369	Identifier	ptab		1216361	0					
ANR	1216370	UnaryOperationExpression	& smap -> table		1216361	1					
ANR	1216371	UnaryOperator	&		1216361	0					
ANR	1216372	PtrMemberAccess	smap -> table		1216361	1					
ANR	1216373	Identifier	smap		1216361	0					
ANR	1216374	Identifier	table		1216361	1					
ANR	1216375	IdentifierDeclStatement	const byte * psrc = data + ( data_x >> 3 ) ;	45:4:1715:1754	1216361	1	True				
ANR	1216376	IdentifierDecl	* psrc = data + ( data_x >> 3 )		1216361	0					
ANR	1216377	IdentifierDeclType	const byte *		1216361	0					
ANR	1216378	Identifier	psrc		1216361	1					
ANR	1216379	AssignmentExpression	* psrc = data + ( data_x >> 3 )		1216361	2		=			
ANR	1216380	Identifier	psrc		1216361	0					
ANR	1216381	AdditiveExpression	data + ( data_x >> 3 )		1216361	1		+			
ANR	1216382	Identifier	data		1216361	0					
ANR	1216383	ShiftExpression	data_x >> 3		1216361	1		>>			
ANR	1216384	Identifier	data_x		1216361	0					
ANR	1216385	PrimaryExpression	3		1216361	1					
ANR	1216386	IdentifierDeclStatement	int left = dsize - ( data_x >> 3 ) ;	46:4:1760:1792	1216361	2	True				
ANR	1216387	IdentifierDecl	left = dsize - ( data_x >> 3 )		1216361	0					
ANR	1216388	IdentifierDeclType	int		1216361	0					
ANR	1216389	Identifier	left		1216361	1					
ANR	1216390	AssignmentExpression	left = dsize - ( data_x >> 3 )		1216361	2		=			
ANR	1216391	Identifier	left		1216361	0					
ANR	1216392	AdditiveExpression	dsize - ( data_x >> 3 )		1216361	1		-			
ANR	1216393	Identifier	dsize		1216361	0					
ANR	1216394	ShiftExpression	data_x >> 3		1216361	1		>>			
ANR	1216395	Identifier	data_x		1216361	0					
ANR	1216396	PrimaryExpression	3		1216361	1					
ANR	1216397	Statement	DEFINE_SMAP_INDEX	47:4:1798:1814	1216361	3	True				
ANR	1216398	IfStatement	if ( spread == 1 )		1216361	4					
ANR	1216399	Condition	spread == 1	49:8:1825:1835	1216361	0	True				
ANR	1216400	EqualityExpression	spread == 1		1216361	0		==			
ANR	1216401	Identifier	spread		1216361	0					
ANR	1216402	PrimaryExpression	1		1216361	1					
ANR	1216403	CompoundStatement		10:8:280:286	1216361	1					
ANR	1216404	IdentifierDeclStatement	bits32 * bufp = ( bits32 * ) bptr ;	50:8:1848:1878	1216361	0	True				
ANR	1216405	IdentifierDecl	* bufp = ( bits32 * ) bptr		1216361	0					
ANR	1216406	IdentifierDeclType	bits32 *		1216361	0					
ANR	1216407	Identifier	bufp		1216361	1					
ANR	1216408	AssignmentExpression	* bufp = ( bits32 * ) bptr		1216361	2		=			
ANR	1216409	Identifier	bufp		1216361	0					
ANR	1216410	CastExpression	( bits32 * ) bptr		1216361	1					
ANR	1216411	CastTarget	bits32 *		1216361	0					
ANR	1216412	Identifier	bptr		1216361	1					
ANR	1216413	IdentifierDeclStatement	const bits32 * map = & ptab -> lookup4x1to32 [ 0 ] ;	51:8:1888:1931	1216361	1	True				
ANR	1216414	IdentifierDecl	* map = & ptab -> lookup4x1to32 [ 0 ]		1216361	0					
ANR	1216415	IdentifierDeclType	const bits32 *		1216361	0					
ANR	1216416	Identifier	map		1216361	1					
ANR	1216417	AssignmentExpression	* map = & ptab -> lookup4x1to32 [ 0 ]		1216361	2		=			
ANR	1216418	Identifier	map		1216361	0					
ANR	1216419	UnaryOperationExpression	& ptab -> lookup4x1to32 [ 0 ]		1216361	1					
ANR	1216420	UnaryOperator	&		1216361	0					
ANR	1216421	ArrayIndexing	ptab -> lookup4x1to32 [ 0 ]		1216361	1					
ANR	1216422	PtrMemberAccess	ptab -> lookup4x1to32		1216361	0					
ANR	1216423	Identifier	ptab		1216361	0					
ANR	1216424	Identifier	lookup4x1to32		1216361	1					
ANR	1216425	PrimaryExpression	0		1216361	1					
ANR	1216426	IdentifierDeclStatement	uint b ;	52:8:1941:1947	1216361	2	True				
ANR	1216427	IdentifierDecl	b		1216361	0					
ANR	1216428	IdentifierDeclType	uint		1216361	0					
ANR	1216429	Identifier	b		1216361	1					
ANR	1216430	IfStatement	if ( left & 1 )		1216361	3					
ANR	1216431	Condition	left & 1	54:12:1962:1969	1216361	0	True				
ANR	1216432	BitAndExpression	left & 1		1216361	0		&			
ANR	1216433	Identifier	left		1216361	0					
ANR	1216434	PrimaryExpression	1		1216361	1					
ANR	1216435	CompoundStatement		12:22:311:311	1216361	1					
ANR	1216436	ExpressionStatement	b = psrc [ 0 ]	55:12:1986:1997	1216361	0	True				
ANR	1216437	AssignmentExpression	b = psrc [ 0 ]		1216361	0		=			
ANR	1216438	Identifier	b		1216361	0					
ANR	1216439	ArrayIndexing	psrc [ 0 ]		1216361	1					
ANR	1216440	Identifier	psrc		1216361	0					
ANR	1216441	PrimaryExpression	0		1216361	1					
ANR	1216442	ExpressionStatement	bufp [ 0 ] = map [ b >> 4 ]	56:12:2011:2032	1216361	1	True				
ANR	1216443	AssignmentExpression	bufp [ 0 ] = map [ b >> 4 ]		1216361	0		=			
ANR	1216444	ArrayIndexing	bufp [ 0 ]		1216361	0					
ANR	1216445	Identifier	bufp		1216361	0					
ANR	1216446	PrimaryExpression	0		1216361	1					
ANR	1216447	ArrayIndexing	map [ b >> 4 ]		1216361	1					
ANR	1216448	Identifier	map		1216361	0					
ANR	1216449	ShiftExpression	b >> 4		1216361	1		>>			
ANR	1216450	Identifier	b		1216361	0					
ANR	1216451	PrimaryExpression	4		1216361	1					
ANR	1216452	ExpressionStatement	NEXT_MAP	57:12:2046:2054	1216361	2	True				
ANR	1216453	Identifier	NEXT_MAP		1216361	0					
ANR	1216454	ExpressionStatement	bufp [ 1 ] = map [ b & 0xf ]	58:12:2068:2090	1216361	3	True				
ANR	1216455	AssignmentExpression	bufp [ 1 ] = map [ b & 0xf ]		1216361	0		=			
ANR	1216456	ArrayIndexing	bufp [ 1 ]		1216361	0					
ANR	1216457	Identifier	bufp		1216361	0					
ANR	1216458	PrimaryExpression	1		1216361	1					
ANR	1216459	ArrayIndexing	map [ b & 0xf ]		1216361	1					
ANR	1216460	Identifier	map		1216361	0					
ANR	1216461	BitAndExpression	b & 0xf		1216361	1		&			
ANR	1216462	Identifier	b		1216361	0					
ANR	1216463	PrimaryExpression	0xf		1216361	1					
ANR	1216464	ExpressionStatement	NEXT_MAP	59:12:2104:2112	1216361	4	True				
ANR	1216465	Identifier	NEXT_MAP		1216361	0					
ANR	1216466	ExpressionStatement	"psrc ++ , bufp += 2"	60:12:2126:2143	1216361	5	True				
ANR	1216467	Expression	"psrc ++ , bufp += 2"		1216361	0					
ANR	1216468	PostIncDecOperationExpression	psrc ++		1216361	0					
ANR	1216469	Identifier	psrc		1216361	0					
ANR	1216470	IncDec	++		1216361	1					
ANR	1216471	AssignmentExpression	bufp += 2		1216361	1		+=			
ANR	1216472	Identifier	bufp		1216361	0					
ANR	1216473	PrimaryExpression	2		1216361	1					
ANR	1216474	ExpressionStatement	left >>= 1	62:8:2163:2173	1216361	4	True				
ANR	1216475	AssignmentExpression	left >>= 1		1216361	0		>>=			
ANR	1216476	Identifier	left		1216361	0					
ANR	1216477	PrimaryExpression	1		1216361	1					
ANR	1216478	WhileStatement	while ( left -- )		1216361	5					
ANR	1216479	Condition	left --	63:15:2190:2195	1216361	0	True				
ANR	1216480	PostIncDecOperationExpression	left --		1216361	0					
ANR	1216481	Identifier	left		1216361	0					
ANR	1216482	IncDec	--		1216361	1					
ANR	1216483	CompoundStatement		21:23:537:537	1216361	1					
ANR	1216484	ExpressionStatement	b = psrc [ 0 ]	64:12:2212:2223	1216361	0	True				
ANR	1216485	AssignmentExpression	b = psrc [ 0 ]		1216361	0		=			
ANR	1216486	Identifier	b		1216361	0					
ANR	1216487	ArrayIndexing	psrc [ 0 ]		1216361	1					
ANR	1216488	Identifier	psrc		1216361	0					
ANR	1216489	PrimaryExpression	0		1216361	1					
ANR	1216490	ExpressionStatement	bufp [ 0 ] = map [ b >> 4 ]	65:12:2237:2258	1216361	1	True				
ANR	1216491	AssignmentExpression	bufp [ 0 ] = map [ b >> 4 ]		1216361	0		=			
ANR	1216492	ArrayIndexing	bufp [ 0 ]		1216361	0					
ANR	1216493	Identifier	bufp		1216361	0					
ANR	1216494	PrimaryExpression	0		1216361	1					
ANR	1216495	ArrayIndexing	map [ b >> 4 ]		1216361	1					
ANR	1216496	Identifier	map		1216361	0					
ANR	1216497	ShiftExpression	b >> 4		1216361	1		>>			
ANR	1216498	Identifier	b		1216361	0					
ANR	1216499	PrimaryExpression	4		1216361	1					
ANR	1216500	ExpressionStatement	NEXT_MAP	66:12:2272:2280	1216361	2	True				
ANR	1216501	Identifier	NEXT_MAP		1216361	0					
ANR	1216502	ExpressionStatement	bufp [ 1 ] = map [ b & 0xf ]	67:12:2294:2316	1216361	3	True				
ANR	1216503	AssignmentExpression	bufp [ 1 ] = map [ b & 0xf ]		1216361	0		=			
ANR	1216504	ArrayIndexing	bufp [ 1 ]		1216361	0					
ANR	1216505	Identifier	bufp		1216361	0					
ANR	1216506	PrimaryExpression	1		1216361	1					
ANR	1216507	ArrayIndexing	map [ b & 0xf ]		1216361	1					
ANR	1216508	Identifier	map		1216361	0					
ANR	1216509	BitAndExpression	b & 0xf		1216361	1		&			
ANR	1216510	Identifier	b		1216361	0					
ANR	1216511	PrimaryExpression	0xf		1216361	1					
ANR	1216512	ExpressionStatement	NEXT_MAP	68:12:2330:2338	1216361	4	True				
ANR	1216513	Identifier	NEXT_MAP		1216361	0					
ANR	1216514	ExpressionStatement	b = psrc [ 1 ]	69:12:2352:2363	1216361	5	True				
ANR	1216515	AssignmentExpression	b = psrc [ 1 ]		1216361	0		=			
ANR	1216516	Identifier	b		1216361	0					
ANR	1216517	ArrayIndexing	psrc [ 1 ]		1216361	1					
ANR	1216518	Identifier	psrc		1216361	0					
ANR	1216519	PrimaryExpression	1		1216361	1					
ANR	1216520	ExpressionStatement	bufp [ 2 ] = map [ b >> 4 ]	70:12:2377:2398	1216361	6	True				
ANR	1216521	AssignmentExpression	bufp [ 2 ] = map [ b >> 4 ]		1216361	0		=			
ANR	1216522	ArrayIndexing	bufp [ 2 ]		1216361	0					
ANR	1216523	Identifier	bufp		1216361	0					
ANR	1216524	PrimaryExpression	2		1216361	1					
ANR	1216525	ArrayIndexing	map [ b >> 4 ]		1216361	1					
ANR	1216526	Identifier	map		1216361	0					
ANR	1216527	ShiftExpression	b >> 4		1216361	1		>>			
ANR	1216528	Identifier	b		1216361	0					
ANR	1216529	PrimaryExpression	4		1216361	1					
ANR	1216530	ExpressionStatement	NEXT_MAP	71:12:2412:2420	1216361	7	True				
ANR	1216531	Identifier	NEXT_MAP		1216361	0					
ANR	1216532	ExpressionStatement	bufp [ 3 ] = map [ b & 0xf ]	72:12:2434:2456	1216361	8	True				
ANR	1216533	AssignmentExpression	bufp [ 3 ] = map [ b & 0xf ]		1216361	0		=			
ANR	1216534	ArrayIndexing	bufp [ 3 ]		1216361	0					
ANR	1216535	Identifier	bufp		1216361	0					
ANR	1216536	PrimaryExpression	3		1216361	1					
ANR	1216537	ArrayIndexing	map [ b & 0xf ]		1216361	1					
ANR	1216538	Identifier	map		1216361	0					
ANR	1216539	BitAndExpression	b & 0xf		1216361	1		&			
ANR	1216540	Identifier	b		1216361	0					
ANR	1216541	PrimaryExpression	0xf		1216361	1					
ANR	1216542	ExpressionStatement	NEXT_MAP	73:12:2470:2478	1216361	9	True				
ANR	1216543	Identifier	NEXT_MAP		1216361	0					
ANR	1216544	ExpressionStatement	"psrc += 2 , bufp += 4"	74:12:2492:2512	1216361	10	True				
ANR	1216545	Expression	"psrc += 2 , bufp += 4"		1216361	0					
ANR	1216546	AssignmentExpression	psrc += 2		1216361	0		+=			
ANR	1216547	Identifier	psrc		1216361	0					
ANR	1216548	PrimaryExpression	2		1216361	1					
ANR	1216549	AssignmentExpression	bufp += 4		1216361	1		+=			
ANR	1216550	Identifier	bufp		1216361	0					
ANR	1216551	PrimaryExpression	4		1216361	1					
ANR	1216552	ElseStatement	else		1216361	0					
ANR	1216553	CompoundStatement		36:8:911:946	1216361	0					
ANR	1216554	IdentifierDeclStatement	byte * bufp = bptr ;	77:8:2545:2562	1216361	0	True				
ANR	1216555	IdentifierDecl	* bufp = bptr		1216361	0					
ANR	1216556	IdentifierDeclType	byte *		1216361	0					
ANR	1216557	Identifier	bufp		1216361	1					
ANR	1216558	AssignmentExpression	* bufp = bptr		1216361	2		=			
ANR	1216559	Identifier	bptr		1216361	0					
ANR	1216560	Identifier	bptr		1216361	1					
ANR	1216561	IdentifierDeclStatement	const byte * map = & ptab -> lookup8 [ 0 ] ;	78:8:2572:2607	1216361	1	True				
ANR	1216562	IdentifierDecl	* map = & ptab -> lookup8 [ 0 ]		1216361	0					
ANR	1216563	IdentifierDeclType	const byte *		1216361	0					
ANR	1216564	Identifier	map		1216361	1					
ANR	1216565	AssignmentExpression	* map = & ptab -> lookup8 [ 0 ]		1216361	2		=			
ANR	1216566	Identifier	map		1216361	0					
ANR	1216567	UnaryOperationExpression	& ptab -> lookup8 [ 0 ]		1216361	1					
ANR	1216568	UnaryOperator	&		1216361	0					
ANR	1216569	ArrayIndexing	ptab -> lookup8 [ 0 ]		1216361	1					
ANR	1216570	PtrMemberAccess	ptab -> lookup8		1216361	0					
ANR	1216571	Identifier	ptab		1216361	0					
ANR	1216572	Identifier	lookup8		1216361	1					
ANR	1216573	PrimaryExpression	0		1216361	1					
ANR	1216574	WhileStatement	while ( left -- )		1216361	2					
ANR	1216575	Condition	left --	80:15:2625:2630	1216361	0	True				
ANR	1216576	PostIncDecOperationExpression	left --		1216361	0					
ANR	1216577	Identifier	left		1216361	0					
ANR	1216578	IncDec	--		1216361	1					
ANR	1216579	CompoundStatement		39:12:986:1002	1216361	1					
ANR	1216580	IdentifierDeclStatement	uint b = * psrc ++ ;	81:12:2647:2663	1216361	0	True				
ANR	1216581	IdentifierDecl	b = * psrc ++		1216361	0					
ANR	1216582	IdentifierDeclType	uint		1216361	0					
ANR	1216583	Identifier	b		1216361	1					
ANR	1216584	AssignmentExpression	b = * psrc ++		1216361	2		=			
ANR	1216585	Identifier	b		1216361	0					
ANR	1216586	UnaryOperationExpression	* psrc ++		1216361	1					
ANR	1216587	UnaryOperator	*		1216361	0					
ANR	1216588	PostIncDecOperationExpression	psrc ++		1216361	1					
ANR	1216589	Identifier	psrc		1216361	0					
ANR	1216590	IncDec	++		1216361	1					
ANR	1216591	ExpressionStatement	* bufp = map [ b >> 7 ]	83:12:2678:2697	1216361	1	True				
ANR	1216592	AssignmentExpression	* bufp = map [ b >> 7 ]		1216361	0		=			
ANR	1216593	UnaryOperationExpression	* bufp		1216361	0					
ANR	1216594	UnaryOperator	*		1216361	0					
ANR	1216595	Identifier	bufp		1216361	1					
ANR	1216596	ArrayIndexing	map [ b >> 7 ]		1216361	1					
ANR	1216597	Identifier	map		1216361	0					
ANR	1216598	ShiftExpression	b >> 7		1216361	1		>>			
ANR	1216599	Identifier	b		1216361	0					
ANR	1216600	PrimaryExpression	7		1216361	1					
ANR	1216601	ExpressionStatement	NEXT_MAP8	84:12:2711:2720	1216361	2	True				
ANR	1216602	Identifier	NEXT_MAP8		1216361	0					
ANR	1216603	ExpressionStatement	bufp += spread	85:12:2734:2748	1216361	3	True				
ANR	1216604	AssignmentExpression	bufp += spread		1216361	0		+=			
ANR	1216605	Identifier	bufp		1216361	0					
ANR	1216606	Identifier	spread		1216361	1					
ANR	1216607	ExpressionStatement	* bufp = map [ ( b >> 6 ) & 1 ]	86:12:2762:2787	1216361	4	True				
ANR	1216608	AssignmentExpression	* bufp = map [ ( b >> 6 ) & 1 ]		1216361	0		=			
ANR	1216609	UnaryOperationExpression	* bufp		1216361	0					
ANR	1216610	UnaryOperator	*		1216361	0					
ANR	1216611	Identifier	bufp		1216361	1					
ANR	1216612	ArrayIndexing	map [ ( b >> 6 ) & 1 ]		1216361	1					
ANR	1216613	Identifier	map		1216361	0					
ANR	1216614	BitAndExpression	( b >> 6 ) & 1		1216361	1		&			
ANR	1216615	ShiftExpression	b >> 6		1216361	0		>>			
ANR	1216616	Identifier	b		1216361	0					
ANR	1216617	PrimaryExpression	6		1216361	1					
ANR	1216618	PrimaryExpression	1		1216361	1					
ANR	1216619	ExpressionStatement	NEXT_MAP8	87:12:2801:2810	1216361	5	True				
ANR	1216620	Identifier	NEXT_MAP8		1216361	0					
ANR	1216621	ExpressionStatement	bufp += spread	88:12:2824:2838	1216361	6	True				
ANR	1216622	AssignmentExpression	bufp += spread		1216361	0		+=			
ANR	1216623	Identifier	bufp		1216361	0					
ANR	1216624	Identifier	spread		1216361	1					
ANR	1216625	ExpressionStatement	* bufp = map [ ( b >> 5 ) & 1 ]	89:12:2852:2877	1216361	7	True				
ANR	1216626	AssignmentExpression	* bufp = map [ ( b >> 5 ) & 1 ]		1216361	0		=			
ANR	1216627	UnaryOperationExpression	* bufp		1216361	0					
ANR	1216628	UnaryOperator	*		1216361	0					
ANR	1216629	Identifier	bufp		1216361	1					
ANR	1216630	ArrayIndexing	map [ ( b >> 5 ) & 1 ]		1216361	1					
ANR	1216631	Identifier	map		1216361	0					
ANR	1216632	BitAndExpression	( b >> 5 ) & 1		1216361	1		&			
ANR	1216633	ShiftExpression	b >> 5		1216361	0		>>			
ANR	1216634	Identifier	b		1216361	0					
ANR	1216635	PrimaryExpression	5		1216361	1					
ANR	1216636	PrimaryExpression	1		1216361	1					
ANR	1216637	ExpressionStatement	NEXT_MAP8	90:12:2891:2900	1216361	8	True				
ANR	1216638	Identifier	NEXT_MAP8		1216361	0					
ANR	1216639	ExpressionStatement	bufp += spread	91:12:2914:2928	1216361	9	True				
ANR	1216640	AssignmentExpression	bufp += spread		1216361	0		+=			
ANR	1216641	Identifier	bufp		1216361	0					
ANR	1216642	Identifier	spread		1216361	1					
ANR	1216643	ExpressionStatement	* bufp = map [ ( b >> 4 ) & 1 ]	92:12:2942:2967	1216361	10	True				
ANR	1216644	AssignmentExpression	* bufp = map [ ( b >> 4 ) & 1 ]		1216361	0		=			
ANR	1216645	UnaryOperationExpression	* bufp		1216361	0					
ANR	1216646	UnaryOperator	*		1216361	0					
ANR	1216647	Identifier	bufp		1216361	1					
ANR	1216648	ArrayIndexing	map [ ( b >> 4 ) & 1 ]		1216361	1					
ANR	1216649	Identifier	map		1216361	0					
ANR	1216650	BitAndExpression	( b >> 4 ) & 1		1216361	1		&			
ANR	1216651	ShiftExpression	b >> 4		1216361	0		>>			
ANR	1216652	Identifier	b		1216361	0					
ANR	1216653	PrimaryExpression	4		1216361	1					
ANR	1216654	PrimaryExpression	1		1216361	1					
ANR	1216655	ExpressionStatement	NEXT_MAP8	93:12:2981:2990	1216361	11	True				
ANR	1216656	Identifier	NEXT_MAP8		1216361	0					
ANR	1216657	ExpressionStatement	bufp += spread	94:12:3004:3018	1216361	12	True				
ANR	1216658	AssignmentExpression	bufp += spread		1216361	0		+=			
ANR	1216659	Identifier	bufp		1216361	0					
ANR	1216660	Identifier	spread		1216361	1					
ANR	1216661	ExpressionStatement	* bufp = map [ ( b >> 3 ) & 1 ]	95:12:3032:3057	1216361	13	True				
ANR	1216662	AssignmentExpression	* bufp = map [ ( b >> 3 ) & 1 ]		1216361	0		=			
ANR	1216663	UnaryOperationExpression	* bufp		1216361	0					
ANR	1216664	UnaryOperator	*		1216361	0					
ANR	1216665	Identifier	bufp		1216361	1					
ANR	1216666	ArrayIndexing	map [ ( b >> 3 ) & 1 ]		1216361	1					
ANR	1216667	Identifier	map		1216361	0					
ANR	1216668	BitAndExpression	( b >> 3 ) & 1		1216361	1		&			
ANR	1216669	ShiftExpression	b >> 3		1216361	0		>>			
ANR	1216670	Identifier	b		1216361	0					
ANR	1216671	PrimaryExpression	3		1216361	1					
ANR	1216672	PrimaryExpression	1		1216361	1					
ANR	1216673	ExpressionStatement	NEXT_MAP8	96:12:3071:3080	1216361	14	True				
ANR	1216674	Identifier	NEXT_MAP8		1216361	0					
ANR	1216675	ExpressionStatement	bufp += spread	97:12:3094:3108	1216361	15	True				
ANR	1216676	AssignmentExpression	bufp += spread		1216361	0		+=			
ANR	1216677	Identifier	bufp		1216361	0					
ANR	1216678	Identifier	spread		1216361	1					
ANR	1216679	ExpressionStatement	* bufp = map [ ( b >> 2 ) & 1 ]	98:12:3122:3147	1216361	16	True				
ANR	1216680	AssignmentExpression	* bufp = map [ ( b >> 2 ) & 1 ]		1216361	0		=			
ANR	1216681	UnaryOperationExpression	* bufp		1216361	0					
ANR	1216682	UnaryOperator	*		1216361	0					
ANR	1216683	Identifier	bufp		1216361	1					
ANR	1216684	ArrayIndexing	map [ ( b >> 2 ) & 1 ]		1216361	1					
ANR	1216685	Identifier	map		1216361	0					
ANR	1216686	BitAndExpression	( b >> 2 ) & 1		1216361	1		&			
ANR	1216687	ShiftExpression	b >> 2		1216361	0		>>			
ANR	1216688	Identifier	b		1216361	0					
ANR	1216689	PrimaryExpression	2		1216361	1					
ANR	1216690	PrimaryExpression	1		1216361	1					
ANR	1216691	ExpressionStatement	NEXT_MAP8	99:12:3161:3170	1216361	17	True				
ANR	1216692	Identifier	NEXT_MAP8		1216361	0					
ANR	1216693	ExpressionStatement	bufp += spread	100:12:3184:3198	1216361	18	True				
ANR	1216694	AssignmentExpression	bufp += spread		1216361	0		+=			
ANR	1216695	Identifier	bufp		1216361	0					
ANR	1216696	Identifier	spread		1216361	1					
ANR	1216697	ExpressionStatement	* bufp = map [ ( b >> 1 ) & 1 ]	101:12:3212:3237	1216361	19	True				
ANR	1216698	AssignmentExpression	* bufp = map [ ( b >> 1 ) & 1 ]		1216361	0		=			
ANR	1216699	UnaryOperationExpression	* bufp		1216361	0					
ANR	1216700	UnaryOperator	*		1216361	0					
ANR	1216701	Identifier	bufp		1216361	1					
ANR	1216702	ArrayIndexing	map [ ( b >> 1 ) & 1 ]		1216361	1					
ANR	1216703	Identifier	map		1216361	0					
ANR	1216704	BitAndExpression	( b >> 1 ) & 1		1216361	1		&			
ANR	1216705	ShiftExpression	b >> 1		1216361	0		>>			
ANR	1216706	Identifier	b		1216361	0					
ANR	1216707	PrimaryExpression	1		1216361	1					
ANR	1216708	PrimaryExpression	1		1216361	1					
ANR	1216709	ExpressionStatement	NEXT_MAP8	102:12:3251:3260	1216361	20	True				
ANR	1216710	Identifier	NEXT_MAP8		1216361	0					
ANR	1216711	ExpressionStatement	bufp += spread	103:12:3274:3288	1216361	21	True				
ANR	1216712	AssignmentExpression	bufp += spread		1216361	0		+=			
ANR	1216713	Identifier	bufp		1216361	0					
ANR	1216714	Identifier	spread		1216361	1					
ANR	1216715	ExpressionStatement	* bufp = map [ b & 1 ]	104:12:3302:3320	1216361	22	True				
ANR	1216716	AssignmentExpression	* bufp = map [ b & 1 ]		1216361	0		=			
ANR	1216717	UnaryOperationExpression	* bufp		1216361	0					
ANR	1216718	UnaryOperator	*		1216361	0					
ANR	1216719	Identifier	bufp		1216361	1					
ANR	1216720	ArrayIndexing	map [ b & 1 ]		1216361	1					
ANR	1216721	Identifier	map		1216361	0					
ANR	1216722	BitAndExpression	b & 1		1216361	1		&			
ANR	1216723	Identifier	b		1216361	0					
ANR	1216724	PrimaryExpression	1		1216361	1					
ANR	1216725	ExpressionStatement	NEXT_MAP8	105:12:3334:3343	1216361	23	True				
ANR	1216726	Identifier	NEXT_MAP8		1216361	0					
ANR	1216727	ExpressionStatement	bufp += spread	106:12:3357:3371	1216361	24	True				
ANR	1216728	AssignmentExpression	bufp += spread		1216361	0		+=			
ANR	1216729	Identifier	bufp		1216361	0					
ANR	1216730	Identifier	spread		1216361	1					
ANR	1216731	ExpressionStatement	* pdata_x = data_x & 7	109:4:3393:3414	1216361	5	True				
ANR	1216732	AssignmentExpression	* pdata_x = data_x & 7		1216361	0		=			
ANR	1216733	UnaryOperationExpression	* pdata_x		1216361	0					
ANR	1216734	UnaryOperator	*		1216361	0					
ANR	1216735	Identifier	pdata_x		1216361	1					
ANR	1216736	BitAndExpression	data_x & 7		1216361	1		&			
ANR	1216737	Identifier	data_x		1216361	0					
ANR	1216738	PrimaryExpression	7		1216361	1					
ANR	1216739	ReturnStatement	return bptr ;	110:4:3420:3431	1216361	6	True				
ANR	1216740	Identifier	bptr		1216361	0					
ANR	1216741	ReturnType	const byte *		1216361	1					
ANR	1216742	Identifier	TEMPLATE_sample_unpack_1		1216361	2					
ANR	1216743	ParameterList	"byte * bptr , int * pdata_x , const byte * data , int data_x , uint dsize , const sample_map * smap , int spread , int num_components_per_plane"		1216361	3					
ANR	1216744	Parameter	byte * bptr	40:25:1492:1502	1216361	0	True				
ANR	1216745	ParameterType	byte *		1216361	0					
ANR	1216746	Identifier	bptr		1216361	1					
ANR	1216747	Parameter	int * pdata_x	40:38:1505:1516	1216361	1	True				
ANR	1216748	ParameterType	int *		1216361	0					
ANR	1216749	Identifier	pdata_x		1216361	1					
ANR	1216750	Parameter	const byte * data	40:52:1519:1535	1216361	2	True				
ANR	1216751	ParameterType	const byte *		1216361	0					
ANR	1216752	Identifier	data		1216361	1					
ANR	1216753	Parameter	int data_x	40:71:1538:1547	1216361	3	True				
ANR	1216754	ParameterType	int		1216361	0					
ANR	1216755	Identifier	data_x		1216361	1					
ANR	1216756	Parameter	uint dsize	41:16:1566:1575	1216361	4	True				
ANR	1216757	ParameterType	uint		1216361	0					
ANR	1216758	Identifier	dsize		1216361	1					
ANR	1216759	Parameter	const sample_map * smap	41:28:1578:1599	1216361	5	True				
ANR	1216760	ParameterType	const sample_map *		1216361	0					
ANR	1216761	Identifier	smap		1216361	1					
ANR	1216762	Parameter	int spread	41:52:1602:1611	1216361	6	True				
ANR	1216763	ParameterType	int		1216361	0					
ANR	1216764	Identifier	spread		1216361	1					
ANR	1216765	Parameter	int num_components_per_plane	42:16:1630:1657	1216361	7	True				
ANR	1216766	ParameterType	int		1216361	0					
ANR	1216767	Identifier	num_components_per_plane		1216361	1					
ANR	1216768	CFGEntryNode	ENTRY		1216361		True				
ANR	1216769	CFGExitNode	EXIT		1216361		True				
ANR	1216770	Symbol	psrc		1216361						
ANR	1216771	Symbol	bptr		1216361						
ANR	1216772	Symbol	b		1216361						
ANR	1216773	Symbol	data		1216361						
ANR	1216774	Symbol	* map		1216361						
ANR	1216775	Symbol	* psrc		1216361						
ANR	1216776	Symbol	* b		1216361						
ANR	1216777	Symbol	spread		1216361						
ANR	1216778	Symbol	num_components_per_plane		1216361						
ANR	1216779	Symbol	* bufp		1216361						
ANR	1216780	Symbol	ptab		1216361						
ANR	1216781	Symbol	data_x		1216361						
ANR	1216782	Symbol	dsize		1216361						
ANR	1216783	Symbol	bufp		1216361						
ANR	1216784	Symbol	ptab -> lookup4x1to32		1216361						
ANR	1216785	Symbol	left		1216361						
ANR	1216786	Symbol	* pdata_x		1216361						
ANR	1216787	Symbol	pdata_x		1216361						
ANR	1216788	Symbol	* ptab		1216361						
ANR	1216789	Symbol	smap		1216361						
ANR	1216790	Symbol	map		1216361						
ANR	1216791	Symbol	* psrc ++		1216361						
ANR	1216792	Symbol	& smap -> table		1216361						
ANR	1216793	Symbol	ptab -> lookup8		1216361						
ANR	1216794	Function	TEMPLATE_sample_unpack_2	121:0:3598:4812							
ANR	1216795	FunctionDef	"TEMPLATE_sample_unpack_2 (byte * bptr , int * pdata_x , const byte * data , int data_x , uint dsize , const sample_map * smap , int spread , int num_components_per_plane)"		1216794	0					
ANR	1216796	CompoundStatement		125:0:3804:4812	1216794	0					
ANR	1216797	IdentifierDeclStatement	const sample_lookup_t * ptab = & smap -> table ;	126:4:3810:3853	1216794	0	True				
ANR	1216798	IdentifierDecl	* ptab = & smap -> table		1216794	0					
ANR	1216799	IdentifierDeclType	const sample_lookup_t *		1216794	0					
ANR	1216800	Identifier	ptab		1216794	1					
ANR	1216801	AssignmentExpression	* ptab = & smap -> table		1216794	2		=			
ANR	1216802	Identifier	ptab		1216794	0					
ANR	1216803	UnaryOperationExpression	& smap -> table		1216794	1					
ANR	1216804	UnaryOperator	&		1216794	0					
ANR	1216805	PtrMemberAccess	smap -> table		1216794	1					
ANR	1216806	Identifier	smap		1216794	0					
ANR	1216807	Identifier	table		1216794	1					
ANR	1216808	IdentifierDeclStatement	const byte * psrc = data + ( data_x >> 2 ) ;	127:4:3859:3898	1216794	1	True				
ANR	1216809	IdentifierDecl	* psrc = data + ( data_x >> 2 )		1216794	0					
ANR	1216810	IdentifierDeclType	const byte *		1216794	0					
ANR	1216811	Identifier	psrc		1216794	1					
ANR	1216812	AssignmentExpression	* psrc = data + ( data_x >> 2 )		1216794	2		=			
ANR	1216813	Identifier	psrc		1216794	0					
ANR	1216814	AdditiveExpression	data + ( data_x >> 2 )		1216794	1		+			
ANR	1216815	Identifier	data		1216794	0					
ANR	1216816	ShiftExpression	data_x >> 2		1216794	1		>>			
ANR	1216817	Identifier	data_x		1216794	0					
ANR	1216818	PrimaryExpression	2		1216794	1					
ANR	1216819	IdentifierDeclStatement	int left = dsize - ( data_x >> 2 ) ;	128:4:3904:3936	1216794	2	True				
ANR	1216820	IdentifierDecl	left = dsize - ( data_x >> 2 )		1216794	0					
ANR	1216821	IdentifierDeclType	int		1216794	0					
ANR	1216822	Identifier	left		1216794	1					
ANR	1216823	AssignmentExpression	left = dsize - ( data_x >> 2 )		1216794	2		=			
ANR	1216824	Identifier	left		1216794	0					
ANR	1216825	AdditiveExpression	dsize - ( data_x >> 2 )		1216794	1		-			
ANR	1216826	Identifier	dsize		1216794	0					
ANR	1216827	ShiftExpression	data_x >> 2		1216794	1		>>			
ANR	1216828	Identifier	data_x		1216794	0					
ANR	1216829	PrimaryExpression	2		1216794	1					
ANR	1216830	Statement	DEFINE_SMAP_INDEX	129:4:3942:3958	1216794	3	True				
ANR	1216831	IfStatement	if ( spread == 1 )		1216794	4					
ANR	1216832	Condition	spread == 1	131:8:3969:3979	1216794	0	True				
ANR	1216833	EqualityExpression	spread == 1		1216794	0		==			
ANR	1216834	Identifier	spread		1216794	0					
ANR	1216835	PrimaryExpression	1		1216794	1					
ANR	1216836	CompoundStatement		9:8:227:270	1216794	1					
ANR	1216837	IdentifierDeclStatement	bits16 * bufp = ( bits16 * ) bptr ;	132:8:3992:4022	1216794	0	True				
ANR	1216838	IdentifierDecl	* bufp = ( bits16 * ) bptr		1216794	0					
ANR	1216839	IdentifierDeclType	bits16 *		1216794	0					
ANR	1216840	Identifier	bufp		1216794	1					
ANR	1216841	AssignmentExpression	* bufp = ( bits16 * ) bptr		1216794	2		=			
ANR	1216842	Identifier	bufp		1216794	0					
ANR	1216843	CastExpression	( bits16 * ) bptr		1216794	1					
ANR	1216844	CastTarget	bits16 *		1216794	0					
ANR	1216845	Identifier	bptr		1216794	1					
ANR	1216846	IdentifierDeclStatement	const bits16 * map = & ptab -> lookup2x2to16 [ 0 ] ;	133:8:4032:4075	1216794	1	True				
ANR	1216847	IdentifierDecl	* map = & ptab -> lookup2x2to16 [ 0 ]		1216794	0					
ANR	1216848	IdentifierDeclType	const bits16 *		1216794	0					
ANR	1216849	Identifier	map		1216794	1					
ANR	1216850	AssignmentExpression	* map = & ptab -> lookup2x2to16 [ 0 ]		1216794	2		=			
ANR	1216851	Identifier	map		1216794	0					
ANR	1216852	UnaryOperationExpression	& ptab -> lookup2x2to16 [ 0 ]		1216794	1					
ANR	1216853	UnaryOperator	&		1216794	0					
ANR	1216854	ArrayIndexing	ptab -> lookup2x2to16 [ 0 ]		1216794	1					
ANR	1216855	PtrMemberAccess	ptab -> lookup2x2to16		1216794	0					
ANR	1216856	Identifier	ptab		1216794	0					
ANR	1216857	Identifier	lookup2x2to16		1216794	1					
ANR	1216858	PrimaryExpression	0		1216794	1					
ANR	1216859	WhileStatement	while ( left -- )		1216794	2					
ANR	1216860	Condition	left --	135:15:4093:4098	1216794	0	True				
ANR	1216861	PostIncDecOperationExpression	left --		1216794	0					
ANR	1216862	Identifier	left		1216794	0					
ANR	1216863	IncDec	--		1216794	1					
ANR	1216864	CompoundStatement		12:12:310:326	1216794	1					
ANR	1216865	IdentifierDeclStatement	uint b = * psrc ++ ;	136:12:4115:4131	1216794	0	True				
ANR	1216866	IdentifierDecl	b = * psrc ++		1216794	0					
ANR	1216867	IdentifierDeclType	uint		1216794	0					
ANR	1216868	Identifier	b		1216794	1					
ANR	1216869	AssignmentExpression	b = * psrc ++		1216794	2		=			
ANR	1216870	Identifier	b		1216794	0					
ANR	1216871	UnaryOperationExpression	* psrc ++		1216794	1					
ANR	1216872	UnaryOperator	*		1216794	0					
ANR	1216873	PostIncDecOperationExpression	psrc ++		1216794	1					
ANR	1216874	Identifier	psrc		1216794	0					
ANR	1216875	IncDec	++		1216794	1					
ANR	1216876	ExpressionStatement	* bufp ++ = map [ b >> 4 ]	138:12:4146:4167	1216794	1	True				
ANR	1216877	AssignmentExpression	* bufp ++ = map [ b >> 4 ]		1216794	0		=			
ANR	1216878	UnaryOperationExpression	* bufp ++		1216794	0					
ANR	1216879	UnaryOperator	*		1216794	0					
ANR	1216880	PostIncDecOperationExpression	bufp ++		1216794	1					
ANR	1216881	Identifier	bufp		1216794	0					
ANR	1216882	IncDec	++		1216794	1					
ANR	1216883	ArrayIndexing	map [ b >> 4 ]		1216794	1					
ANR	1216884	Identifier	map		1216794	0					
ANR	1216885	ShiftExpression	b >> 4		1216794	1		>>			
ANR	1216886	Identifier	b		1216794	0					
ANR	1216887	PrimaryExpression	4		1216794	1					
ANR	1216888	ExpressionStatement	NEXT_MAP	139:12:4181:4189	1216794	2	True				
ANR	1216889	Identifier	NEXT_MAP		1216794	0					
ANR	1216890	ExpressionStatement	* bufp ++ = map [ b & 0xf ]	140:12:4203:4225	1216794	3	True				
ANR	1216891	AssignmentExpression	* bufp ++ = map [ b & 0xf ]		1216794	0		=			
ANR	1216892	UnaryOperationExpression	* bufp ++		1216794	0					
ANR	1216893	UnaryOperator	*		1216794	0					
ANR	1216894	PostIncDecOperationExpression	bufp ++		1216794	1					
ANR	1216895	Identifier	bufp		1216794	0					
ANR	1216896	IncDec	++		1216794	1					
ANR	1216897	ArrayIndexing	map [ b & 0xf ]		1216794	1					
ANR	1216898	Identifier	map		1216794	0					
ANR	1216899	BitAndExpression	b & 0xf		1216794	1		&			
ANR	1216900	Identifier	b		1216794	0					
ANR	1216901	PrimaryExpression	0xf		1216794	1					
ANR	1216902	ExpressionStatement	NEXT_MAP	141:12:4239:4247	1216794	4	True				
ANR	1216903	Identifier	NEXT_MAP		1216794	0					
ANR	1216904	ElseStatement	else		1216794	0					
ANR	1216905	CompoundStatement		21:8:502:537	1216794	0					
ANR	1216906	IdentifierDeclStatement	byte * bufp = bptr ;	144:8:4280:4297	1216794	0	True				
ANR	1216907	IdentifierDecl	* bufp = bptr		1216794	0					
ANR	1216908	IdentifierDeclType	byte *		1216794	0					
ANR	1216909	Identifier	bufp		1216794	1					
ANR	1216910	AssignmentExpression	* bufp = bptr		1216794	2		=			
ANR	1216911	Identifier	bptr		1216794	0					
ANR	1216912	Identifier	bptr		1216794	1					
ANR	1216913	IdentifierDeclStatement	const byte * map = & ptab -> lookup8 [ 0 ] ;	145:8:4307:4342	1216794	1	True				
ANR	1216914	IdentifierDecl	* map = & ptab -> lookup8 [ 0 ]		1216794	0					
ANR	1216915	IdentifierDeclType	const byte *		1216794	0					
ANR	1216916	Identifier	map		1216794	1					
ANR	1216917	AssignmentExpression	* map = & ptab -> lookup8 [ 0 ]		1216794	2		=			
ANR	1216918	Identifier	map		1216794	0					
ANR	1216919	UnaryOperationExpression	& ptab -> lookup8 [ 0 ]		1216794	1					
ANR	1216920	UnaryOperator	&		1216794	0					
ANR	1216921	ArrayIndexing	ptab -> lookup8 [ 0 ]		1216794	1					
ANR	1216922	PtrMemberAccess	ptab -> lookup8		1216794	0					
ANR	1216923	Identifier	ptab		1216794	0					
ANR	1216924	Identifier	lookup8		1216794	1					
ANR	1216925	PrimaryExpression	0		1216794	1					
ANR	1216926	WhileStatement	while ( left -- )		1216794	2					
ANR	1216927	Condition	left --	147:15:4360:4365	1216794	0	True				
ANR	1216928	PostIncDecOperationExpression	left --		1216794	0					
ANR	1216929	Identifier	left		1216794	0					
ANR	1216930	IncDec	--		1216794	1					
ANR	1216931	CompoundStatement		24:12:577:597	1216794	1					
ANR	1216932	IdentifierDeclStatement	unsigned b = * psrc ++ ;	148:12:4382:4402	1216794	0	True				
ANR	1216933	IdentifierDecl	b = * psrc ++		1216794	0					
ANR	1216934	IdentifierDeclType	unsigned		1216794	0					
ANR	1216935	Identifier	b		1216794	1					
ANR	1216936	AssignmentExpression	b = * psrc ++		1216794	2		=			
ANR	1216937	Identifier	b		1216794	0					
ANR	1216938	UnaryOperationExpression	* psrc ++		1216794	1					
ANR	1216939	UnaryOperator	*		1216794	0					
ANR	1216940	PostIncDecOperationExpression	psrc ++		1216794	1					
ANR	1216941	Identifier	psrc		1216794	0					
ANR	1216942	IncDec	++		1216794	1					
ANR	1216943	ExpressionStatement	* bufp = map [ b >> 6 ]	150:12:4417:4436	1216794	1	True				
ANR	1216944	AssignmentExpression	* bufp = map [ b >> 6 ]		1216794	0		=			
ANR	1216945	UnaryOperationExpression	* bufp		1216794	0					
ANR	1216946	UnaryOperator	*		1216794	0					
ANR	1216947	Identifier	bufp		1216794	1					
ANR	1216948	ArrayIndexing	map [ b >> 6 ]		1216794	1					
ANR	1216949	Identifier	map		1216794	0					
ANR	1216950	ShiftExpression	b >> 6		1216794	1		>>			
ANR	1216951	Identifier	b		1216794	0					
ANR	1216952	PrimaryExpression	6		1216794	1					
ANR	1216953	ExpressionStatement	NEXT_MAP8	151:12:4450:4459	1216794	2	True				
ANR	1216954	Identifier	NEXT_MAP8		1216794	0					
ANR	1216955	ExpressionStatement	bufp += spread	152:12:4473:4487	1216794	3	True				
ANR	1216956	AssignmentExpression	bufp += spread		1216794	0		+=			
ANR	1216957	Identifier	bufp		1216794	0					
ANR	1216958	Identifier	spread		1216794	1					
ANR	1216959	ExpressionStatement	* bufp = map [ ( b >> 4 ) & 3 ]	153:12:4501:4526	1216794	4	True				
ANR	1216960	AssignmentExpression	* bufp = map [ ( b >> 4 ) & 3 ]		1216794	0		=			
ANR	1216961	UnaryOperationExpression	* bufp		1216794	0					
ANR	1216962	UnaryOperator	*		1216794	0					
ANR	1216963	Identifier	bufp		1216794	1					
ANR	1216964	ArrayIndexing	map [ ( b >> 4 ) & 3 ]		1216794	1					
ANR	1216965	Identifier	map		1216794	0					
ANR	1216966	BitAndExpression	( b >> 4 ) & 3		1216794	1		&			
ANR	1216967	ShiftExpression	b >> 4		1216794	0		>>			
ANR	1216968	Identifier	b		1216794	0					
ANR	1216969	PrimaryExpression	4		1216794	1					
ANR	1216970	PrimaryExpression	3		1216794	1					
ANR	1216971	ExpressionStatement	NEXT_MAP8	154:12:4540:4549	1216794	5	True				
ANR	1216972	Identifier	NEXT_MAP8		1216794	0					
ANR	1216973	ExpressionStatement	bufp += spread	155:12:4563:4577	1216794	6	True				
ANR	1216974	AssignmentExpression	bufp += spread		1216794	0		+=			
ANR	1216975	Identifier	bufp		1216794	0					
ANR	1216976	Identifier	spread		1216794	1					
ANR	1216977	ExpressionStatement	* bufp = map [ ( b >> 2 ) & 3 ]	156:12:4591:4616	1216794	7	True				
ANR	1216978	AssignmentExpression	* bufp = map [ ( b >> 2 ) & 3 ]		1216794	0		=			
ANR	1216979	UnaryOperationExpression	* bufp		1216794	0					
ANR	1216980	UnaryOperator	*		1216794	0					
ANR	1216981	Identifier	bufp		1216794	1					
ANR	1216982	ArrayIndexing	map [ ( b >> 2 ) & 3 ]		1216794	1					
ANR	1216983	Identifier	map		1216794	0					
ANR	1216984	BitAndExpression	( b >> 2 ) & 3		1216794	1		&			
ANR	1216985	ShiftExpression	b >> 2		1216794	0		>>			
ANR	1216986	Identifier	b		1216794	0					
ANR	1216987	PrimaryExpression	2		1216794	1					
ANR	1216988	PrimaryExpression	3		1216794	1					
ANR	1216989	ExpressionStatement	NEXT_MAP8	157:12:4630:4639	1216794	8	True				
ANR	1216990	Identifier	NEXT_MAP8		1216794	0					
ANR	1216991	ExpressionStatement	bufp += spread	158:12:4653:4667	1216794	9	True				
ANR	1216992	AssignmentExpression	bufp += spread		1216794	0		+=			
ANR	1216993	Identifier	bufp		1216794	0					
ANR	1216994	Identifier	spread		1216794	1					
ANR	1216995	ExpressionStatement	* bufp = map [ b & 3 ]	159:12:4681:4699	1216794	10	True				
ANR	1216996	AssignmentExpression	* bufp = map [ b & 3 ]		1216794	0		=			
ANR	1216997	UnaryOperationExpression	* bufp		1216794	0					
ANR	1216998	UnaryOperator	*		1216794	0					
ANR	1216999	Identifier	bufp		1216794	1					
ANR	1217000	ArrayIndexing	map [ b & 3 ]		1216794	1					
ANR	1217001	Identifier	map		1216794	0					
ANR	1217002	BitAndExpression	b & 3		1216794	1		&			
ANR	1217003	Identifier	b		1216794	0					
ANR	1217004	PrimaryExpression	3		1216794	1					
ANR	1217005	ExpressionStatement	NEXT_MAP8	160:12:4713:4722	1216794	11	True				
ANR	1217006	Identifier	NEXT_MAP8		1216794	0					
ANR	1217007	ExpressionStatement	bufp += spread	161:12:4736:4750	1216794	12	True				
ANR	1217008	AssignmentExpression	bufp += spread		1216794	0		+=			
ANR	1217009	Identifier	bufp		1216794	0					
ANR	1217010	Identifier	spread		1216794	1					
ANR	1217011	ExpressionStatement	* pdata_x = data_x & 3	164:4:4772:4793	1216794	5	True				
ANR	1217012	AssignmentExpression	* pdata_x = data_x & 3		1216794	0		=			
ANR	1217013	UnaryOperationExpression	* pdata_x		1216794	0					
ANR	1217014	UnaryOperator	*		1216794	0					
ANR	1217015	Identifier	pdata_x		1216794	1					
ANR	1217016	BitAndExpression	data_x & 3		1216794	1		&			
ANR	1217017	Identifier	data_x		1216794	0					
ANR	1217018	PrimaryExpression	3		1216794	1					
ANR	1217019	ReturnStatement	return bptr ;	165:4:4799:4810	1216794	6	True				
ANR	1217020	Identifier	bptr		1216794	0					
ANR	1217021	ReturnType	const byte *		1216794	1					
ANR	1217022	Identifier	TEMPLATE_sample_unpack_2		1216794	2					
ANR	1217023	ParameterList	"byte * bptr , int * pdata_x , const byte * data , int data_x , uint dsize , const sample_map * smap , int spread , int num_components_per_plane"		1216794	3					
ANR	1217024	Parameter	byte * bptr	122:25:3636:3646	1216794	0	True				
ANR	1217025	ParameterType	byte *		1216794	0					
ANR	1217026	Identifier	bptr		1216794	1					
ANR	1217027	Parameter	int * pdata_x	122:38:3649:3660	1216794	1	True				
ANR	1217028	ParameterType	int *		1216794	0					
ANR	1217029	Identifier	pdata_x		1216794	1					
ANR	1217030	Parameter	const byte * data	122:52:3663:3679	1216794	2	True				
ANR	1217031	ParameterType	const byte *		1216794	0					
ANR	1217032	Identifier	data		1216794	1					
ANR	1217033	Parameter	int data_x	122:71:3682:3691	1216794	3	True				
ANR	1217034	ParameterType	int		1216794	0					
ANR	1217035	Identifier	data_x		1216794	1					
ANR	1217036	Parameter	uint dsize	123:16:3710:3719	1216794	4	True				
ANR	1217037	ParameterType	uint		1216794	0					
ANR	1217038	Identifier	dsize		1216794	1					
ANR	1217039	Parameter	const sample_map * smap	123:28:3722:3743	1216794	5	True				
ANR	1217040	ParameterType	const sample_map *		1216794	0					
ANR	1217041	Identifier	smap		1216794	1					
ANR	1217042	Parameter	int spread	123:52:3746:3755	1216794	6	True				
ANR	1217043	ParameterType	int		1216794	0					
ANR	1217044	Identifier	spread		1216794	1					
ANR	1217045	Parameter	int num_components_per_plane	124:16:3774:3801	1216794	7	True				
ANR	1217046	ParameterType	int		1216794	0					
ANR	1217047	Identifier	num_components_per_plane		1216794	1					
ANR	1217048	CFGEntryNode	ENTRY		1216794		True				
ANR	1217049	CFGExitNode	EXIT		1216794		True				
ANR	1217050	Symbol	psrc		1216794						
ANR	1217051	Symbol	bptr		1216794						
ANR	1217052	Symbol	b		1216794						
ANR	1217053	Symbol	data		1216794						
ANR	1217054	Symbol	* map		1216794						
ANR	1217055	Symbol	* b		1216794						
ANR	1217056	Symbol	spread		1216794						
ANR	1217057	Symbol	num_components_per_plane		1216794						
ANR	1217058	Symbol	* bufp		1216794						
ANR	1217059	Symbol	ptab		1216794						
ANR	1217060	Symbol	data_x		1216794						
ANR	1217061	Symbol	dsize		1216794						
ANR	1217062	Symbol	ptab -> lookup2x2to16		1216794						
ANR	1217063	Symbol	bufp		1216794						
ANR	1217064	Symbol	left		1216794						
ANR	1217065	Symbol	* pdata_x		1216794						
ANR	1217066	Symbol	* bufp ++		1216794						
ANR	1217067	Symbol	pdata_x		1216794						
ANR	1217068	Symbol	* ptab		1216794						
ANR	1217069	Symbol	smap		1216794						
ANR	1217070	Symbol	map		1216794						
ANR	1217071	Symbol	* psrc ++		1216794						
ANR	1217072	Symbol	& smap -> table		1216794						
ANR	1217073	Symbol	ptab -> lookup8		1216794						
ANR	1217074	Function	TEMPLATE_sample_unpack_4	170:0:4832:5502							
ANR	1217075	FunctionDef	"TEMPLATE_sample_unpack_4 (byte * bptr , int * pdata_x , const byte * data , int data_x , uint dsize , const sample_map * smap , int spread , int num_components_per_plane)"		1217074	0					
ANR	1217076	CompoundStatement		174:0:5038:5502	1217074	0					
ANR	1217077	IdentifierDeclStatement	const sample_lookup_t * ptab = & smap -> table ;	175:4:5044:5087	1217074	0	True				
ANR	1217078	IdentifierDecl	* ptab = & smap -> table		1217074	0					
ANR	1217079	IdentifierDeclType	const sample_lookup_t *		1217074	0					
ANR	1217080	Identifier	ptab		1217074	1					
ANR	1217081	AssignmentExpression	* ptab = & smap -> table		1217074	2		=			
ANR	1217082	Identifier	ptab		1217074	0					
ANR	1217083	UnaryOperationExpression	& smap -> table		1217074	1					
ANR	1217084	UnaryOperator	&		1217074	0					
ANR	1217085	PtrMemberAccess	smap -> table		1217074	1					
ANR	1217086	Identifier	smap		1217074	0					
ANR	1217087	Identifier	table		1217074	1					
ANR	1217088	IdentifierDeclStatement	byte * bufp = bptr ;	176:4:5093:5110	1217074	1	True				
ANR	1217089	IdentifierDecl	* bufp = bptr		1217074	0					
ANR	1217090	IdentifierDeclType	byte *		1217074	0					
ANR	1217091	Identifier	bufp		1217074	1					
ANR	1217092	AssignmentExpression	* bufp = bptr		1217074	2		=			
ANR	1217093	Identifier	bptr		1217074	0					
ANR	1217094	Identifier	bptr		1217074	1					
ANR	1217095	IdentifierDeclStatement	const byte * psrc = data + ( data_x >> 1 ) ;	177:4:5116:5155	1217074	2	True				
ANR	1217096	IdentifierDecl	* psrc = data + ( data_x >> 1 )		1217074	0					
ANR	1217097	IdentifierDeclType	const byte *		1217074	0					
ANR	1217098	Identifier	psrc		1217074	1					
ANR	1217099	AssignmentExpression	* psrc = data + ( data_x >> 1 )		1217074	2		=			
ANR	1217100	Identifier	psrc		1217074	0					
ANR	1217101	AdditiveExpression	data + ( data_x >> 1 )		1217074	1		+			
ANR	1217102	Identifier	data		1217074	0					
ANR	1217103	ShiftExpression	data_x >> 1		1217074	1		>>			
ANR	1217104	Identifier	data_x		1217074	0					
ANR	1217105	PrimaryExpression	1		1217074	1					
ANR	1217106	IdentifierDeclStatement	int left = dsize - ( data_x >> 1 ) ;	178:4:5161:5193	1217074	3	True				
ANR	1217107	IdentifierDecl	left = dsize - ( data_x >> 1 )		1217074	0					
ANR	1217108	IdentifierDeclType	int		1217074	0					
ANR	1217109	Identifier	left		1217074	1					
ANR	1217110	AssignmentExpression	left = dsize - ( data_x >> 1 )		1217074	2		=			
ANR	1217111	Identifier	left		1217074	0					
ANR	1217112	AdditiveExpression	dsize - ( data_x >> 1 )		1217074	1		-			
ANR	1217113	Identifier	dsize		1217074	0					
ANR	1217114	ShiftExpression	data_x >> 1		1217074	1		>>			
ANR	1217115	Identifier	data_x		1217074	0					
ANR	1217116	PrimaryExpression	1		1217074	1					
ANR	1217117	IdentifierDeclStatement	const byte * map = & ptab -> lookup8 [ 0 ] ;	179:4:5199:5234	1217074	4	True				
ANR	1217118	IdentifierDecl	* map = & ptab -> lookup8 [ 0 ]		1217074	0					
ANR	1217119	IdentifierDeclType	const byte *		1217074	0					
ANR	1217120	Identifier	map		1217074	1					
ANR	1217121	AssignmentExpression	* map = & ptab -> lookup8 [ 0 ]		1217074	2		=			
ANR	1217122	Identifier	map		1217074	0					
ANR	1217123	UnaryOperationExpression	& ptab -> lookup8 [ 0 ]		1217074	1					
ANR	1217124	UnaryOperator	&		1217074	0					
ANR	1217125	ArrayIndexing	ptab -> lookup8 [ 0 ]		1217074	1					
ANR	1217126	PtrMemberAccess	ptab -> lookup8		1217074	0					
ANR	1217127	Identifier	ptab		1217074	0					
ANR	1217128	Identifier	lookup8		1217074	1					
ANR	1217129	PrimaryExpression	0		1217074	1					
ANR	1217130	Statement	DEFINE_SMAP_INDEX	180:4:5240:5256	1217074	5	True				
ANR	1217131	WhileStatement	while ( left -- )		1217074	6					
ANR	1217132	Condition	left --	182:11:5270:5275	1217074	0	True				
ANR	1217133	PostIncDecOperationExpression	left --		1217074	0					
ANR	1217134	Identifier	left		1217074	0					
ANR	1217135	IncDec	--		1217074	1					
ANR	1217136	CompoundStatement		10:8:249:265	1217074	1					
ANR	1217137	IdentifierDeclStatement	uint b = * psrc ++ ;	183:8:5288:5304	1217074	0	True				
ANR	1217138	IdentifierDecl	b = * psrc ++		1217074	0					
ANR	1217139	IdentifierDeclType	uint		1217074	0					
ANR	1217140	Identifier	b		1217074	1					
ANR	1217141	AssignmentExpression	b = * psrc ++		1217074	2		=			
ANR	1217142	Identifier	b		1217074	0					
ANR	1217143	UnaryOperationExpression	* psrc ++		1217074	1					
ANR	1217144	UnaryOperator	*		1217074	0					
ANR	1217145	PostIncDecOperationExpression	psrc ++		1217074	1					
ANR	1217146	Identifier	psrc		1217074	0					
ANR	1217147	IncDec	++		1217074	1					
ANR	1217148	ExpressionStatement	* bufp = map [ b >> 4 ]	185:8:5315:5334	1217074	1	True				
ANR	1217149	AssignmentExpression	* bufp = map [ b >> 4 ]		1217074	0		=			
ANR	1217150	UnaryOperationExpression	* bufp		1217074	0					
ANR	1217151	UnaryOperator	*		1217074	0					
ANR	1217152	Identifier	bufp		1217074	1					
ANR	1217153	ArrayIndexing	map [ b >> 4 ]		1217074	1					
ANR	1217154	Identifier	map		1217074	0					
ANR	1217155	ShiftExpression	b >> 4		1217074	1		>>			
ANR	1217156	Identifier	b		1217074	0					
ANR	1217157	PrimaryExpression	4		1217074	1					
ANR	1217158	ExpressionStatement	NEXT_MAP8	186:8:5344:5353	1217074	2	True				
ANR	1217159	Identifier	NEXT_MAP8		1217074	0					
ANR	1217160	ExpressionStatement	bufp += spread	187:8:5363:5377	1217074	3	True				
ANR	1217161	AssignmentExpression	bufp += spread		1217074	0		+=			
ANR	1217162	Identifier	bufp		1217074	0					
ANR	1217163	Identifier	spread		1217074	1					
ANR	1217164	ExpressionStatement	* bufp = map [ b & 0xf ]	188:8:5387:5407	1217074	4	True				
ANR	1217165	AssignmentExpression	* bufp = map [ b & 0xf ]		1217074	0		=			
ANR	1217166	UnaryOperationExpression	* bufp		1217074	0					
ANR	1217167	UnaryOperator	*		1217074	0					
ANR	1217168	Identifier	bufp		1217074	1					
ANR	1217169	ArrayIndexing	map [ b & 0xf ]		1217074	1					
ANR	1217170	Identifier	map		1217074	0					
ANR	1217171	BitAndExpression	b & 0xf		1217074	1		&			
ANR	1217172	Identifier	b		1217074	0					
ANR	1217173	PrimaryExpression	0xf		1217074	1					
ANR	1217174	ExpressionStatement	NEXT_MAP8	189:8:5417:5426	1217074	5	True				
ANR	1217175	Identifier	NEXT_MAP8		1217074	0					
ANR	1217176	ExpressionStatement	bufp += spread	190:8:5436:5450	1217074	6	True				
ANR	1217177	AssignmentExpression	bufp += spread		1217074	0		+=			
ANR	1217178	Identifier	bufp		1217074	0					
ANR	1217179	Identifier	spread		1217074	1					
ANR	1217180	ExpressionStatement	* pdata_x = data_x & 1	192:4:5462:5483	1217074	7	True				
ANR	1217181	AssignmentExpression	* pdata_x = data_x & 1		1217074	0		=			
ANR	1217182	UnaryOperationExpression	* pdata_x		1217074	0					
ANR	1217183	UnaryOperator	*		1217074	0					
ANR	1217184	Identifier	pdata_x		1217074	1					
ANR	1217185	BitAndExpression	data_x & 1		1217074	1		&			
ANR	1217186	Identifier	data_x		1217074	0					
ANR	1217187	PrimaryExpression	1		1217074	1					
ANR	1217188	ReturnStatement	return bptr ;	193:4:5489:5500	1217074	8	True				
ANR	1217189	Identifier	bptr		1217074	0					
ANR	1217190	ReturnType	const byte *		1217074	1					
ANR	1217191	Identifier	TEMPLATE_sample_unpack_4		1217074	2					
ANR	1217192	ParameterList	"byte * bptr , int * pdata_x , const byte * data , int data_x , uint dsize , const sample_map * smap , int spread , int num_components_per_plane"		1217074	3					
ANR	1217193	Parameter	byte * bptr	171:25:4870:4880	1217074	0	True				
ANR	1217194	ParameterType	byte *		1217074	0					
ANR	1217195	Identifier	bptr		1217074	1					
ANR	1217196	Parameter	int * pdata_x	171:38:4883:4894	1217074	1	True				
ANR	1217197	ParameterType	int *		1217074	0					
ANR	1217198	Identifier	pdata_x		1217074	1					
ANR	1217199	Parameter	const byte * data	171:52:4897:4913	1217074	2	True				
ANR	1217200	ParameterType	const byte *		1217074	0					
ANR	1217201	Identifier	data		1217074	1					
ANR	1217202	Parameter	int data_x	171:71:4916:4925	1217074	3	True				
ANR	1217203	ParameterType	int		1217074	0					
ANR	1217204	Identifier	data_x		1217074	1					
ANR	1217205	Parameter	uint dsize	172:16:4944:4953	1217074	4	True				
ANR	1217206	ParameterType	uint		1217074	0					
ANR	1217207	Identifier	dsize		1217074	1					
ANR	1217208	Parameter	const sample_map * smap	172:28:4956:4977	1217074	5	True				
ANR	1217209	ParameterType	const sample_map *		1217074	0					
ANR	1217210	Identifier	smap		1217074	1					
ANR	1217211	Parameter	int spread	172:52:4980:4989	1217074	6	True				
ANR	1217212	ParameterType	int		1217074	0					
ANR	1217213	Identifier	spread		1217074	1					
ANR	1217214	Parameter	int num_components_per_plane	173:16:5008:5035	1217074	7	True				
ANR	1217215	ParameterType	int		1217074	0					
ANR	1217216	Identifier	num_components_per_plane		1217074	1					
ANR	1217217	CFGEntryNode	ENTRY		1217074		True				
ANR	1217218	CFGExitNode	EXIT		1217074		True				
ANR	1217219	Symbol	psrc		1217074						
ANR	1217220	Symbol	bptr		1217074						
ANR	1217221	Symbol	b		1217074						
ANR	1217222	Symbol	data		1217074						
ANR	1217223	Symbol	* map		1217074						
ANR	1217224	Symbol	* b		1217074						
ANR	1217225	Symbol	spread		1217074						
ANR	1217226	Symbol	num_components_per_plane		1217074						
ANR	1217227	Symbol	* bufp		1217074						
ANR	1217228	Symbol	ptab		1217074						
ANR	1217229	Symbol	data_x		1217074						
ANR	1217230	Symbol	dsize		1217074						
ANR	1217231	Symbol	bufp		1217074						
ANR	1217232	Symbol	left		1217074						
ANR	1217233	Symbol	* pdata_x		1217074						
ANR	1217234	Symbol	pdata_x		1217074						
ANR	1217235	Symbol	* ptab		1217074						
ANR	1217236	Symbol	smap		1217074						
ANR	1217237	Symbol	map		1217074						
ANR	1217238	Symbol	* psrc ++		1217074						
ANR	1217239	Symbol	& smap -> table		1217074						
ANR	1217240	Symbol	ptab -> lookup8		1217074						
ANR	1217241	Function	TEMPLATE_sample_unpack_8	196:0:5505:6551							
ANR	1217242	FunctionDef	"TEMPLATE_sample_unpack_8 (byte * bptr , int * pdata_x , const byte * data , int data_x , uint dsize , const sample_map * smap , int spread , int num_components_per_plane)"		1217241	0					
ANR	1217243	CompoundStatement		200:0:5711:6551	1217241	0					
ANR	1217244	IdentifierDeclStatement	const sample_lookup_t * ptab = & smap -> table ;	201:4:5717:5760	1217241	0	True				
ANR	1217245	IdentifierDecl	* ptab = & smap -> table		1217241	0					
ANR	1217246	IdentifierDeclType	const sample_lookup_t *		1217241	0					
ANR	1217247	Identifier	ptab		1217241	1					
ANR	1217248	AssignmentExpression	* ptab = & smap -> table		1217241	2		=			
ANR	1217249	Identifier	ptab		1217241	0					
ANR	1217250	UnaryOperationExpression	& smap -> table		1217241	1					
ANR	1217251	UnaryOperator	&		1217241	0					
ANR	1217252	PtrMemberAccess	smap -> table		1217241	1					
ANR	1217253	Identifier	smap		1217241	0					
ANR	1217254	Identifier	table		1217241	1					
ANR	1217255	IdentifierDeclStatement	byte * bufp = bptr ;	202:4:5766:5783	1217241	1	True				
ANR	1217256	IdentifierDecl	* bufp = bptr		1217241	0					
ANR	1217257	IdentifierDeclType	byte *		1217241	0					
ANR	1217258	Identifier	bufp		1217241	1					
ANR	1217259	AssignmentExpression	* bufp = bptr		1217241	2		=			
ANR	1217260	Identifier	bptr		1217241	0					
ANR	1217261	Identifier	bptr		1217241	1					
ANR	1217262	IdentifierDeclStatement	const byte * psrc = data + data_x ;	203:4:5789:5821	1217241	2	True				
ANR	1217263	IdentifierDecl	* psrc = data + data_x		1217241	0					
ANR	1217264	IdentifierDeclType	const byte *		1217241	0					
ANR	1217265	Identifier	psrc		1217241	1					
ANR	1217266	AssignmentExpression	* psrc = data + data_x		1217241	2		=			
ANR	1217267	Identifier	psrc		1217241	0					
ANR	1217268	AdditiveExpression	data + data_x		1217241	1		+			
ANR	1217269	Identifier	data		1217241	0					
ANR	1217270	Identifier	data_x		1217241	1					
ANR	1217271	IdentifierDeclStatement	DEFINE_SMAP_INDEX * pdata_x = 0 ;	204:4:5827:5862	1217241	3	True				
ANR	1217272	IdentifierDecl	* pdata_x = 0		1217241	0					
ANR	1217273	IdentifierDeclType	DEFINE_SMAP_INDEX *		1217241	0					
ANR	1217274	Identifier	pdata_x		1217241	1					
ANR	1217275	AssignmentExpression	* pdata_x = 0		1217241	2		=			
ANR	1217276	Identifier	pdata_x		1217241	0					
ANR	1217277	PrimaryExpression	0		1217241	1					
ANR	1217278	IfStatement	if ( spread == 1 )		1217241	4					
ANR	1217279	Condition	spread == 1	207:8:5872:5882	1217241	0	True				
ANR	1217280	EqualityExpression	spread == 1		1217241	0		==			
ANR	1217281	Identifier	spread		1217241	0					
ANR	1217282	PrimaryExpression	1		1217241	1					
ANR	1217283	CompoundStatement		8:21:173:173	1217241	1					
ANR	1217284	IfStatement	if ( MULTIPLE_MAPS || ptab -> lookup8 [ 0 ] != 0 || ptab -> lookup8 [ 255 ] != 255 )		1217241	0					
ANR	1217285	Condition	MULTIPLE_MAPS || ptab -> lookup8 [ 0 ] != 0 || ptab -> lookup8 [ 255 ] != 255	208:12:5899:5989	1217241	0	True				
ANR	1217286	OrExpression	MULTIPLE_MAPS || ptab -> lookup8 [ 0 ] != 0 || ptab -> lookup8 [ 255 ] != 255		1217241	0		||			
ANR	1217287	Identifier	MULTIPLE_MAPS		1217241	0					
ANR	1217288	OrExpression	ptab -> lookup8 [ 0 ] != 0 || ptab -> lookup8 [ 255 ] != 255		1217241	1		||			
ANR	1217289	EqualityExpression	ptab -> lookup8 [ 0 ] != 0		1217241	0		!=			
ANR	1217290	ArrayIndexing	ptab -> lookup8 [ 0 ]		1217241	0					
ANR	1217291	PtrMemberAccess	ptab -> lookup8		1217241	0					
ANR	1217292	Identifier	ptab		1217241	0					
ANR	1217293	Identifier	lookup8		1217241	1					
ANR	1217294	PrimaryExpression	0		1217241	1					
ANR	1217295	PrimaryExpression	0		1217241	1					
ANR	1217296	EqualityExpression	ptab -> lookup8 [ 255 ] != 255		1217241	1		!=			
ANR	1217297	ArrayIndexing	ptab -> lookup8 [ 255 ]		1217241	0					
ANR	1217298	PtrMemberAccess	ptab -> lookup8		1217241	0					
ANR	1217299	Identifier	ptab		1217241	0					
ANR	1217300	Identifier	lookup8		1217241	1					
ANR	1217301	PrimaryExpression	255		1217241	1					
ANR	1217302	PrimaryExpression	255		1217241	1					
ANR	1217303	CompoundStatement		14:12:347:382	1217241	1					
ANR	1217304	IdentifierDeclStatement	uint left = dsize - data_x ;	212:12:6019:6045	1217241	0	True				
ANR	1217305	IdentifierDecl	left = dsize - data_x		1217241	0					
ANR	1217306	IdentifierDeclType	uint		1217241	0					
ANR	1217307	Identifier	left		1217241	1					
ANR	1217308	AssignmentExpression	left = dsize - data_x		1217241	2		=			
ANR	1217309	Identifier	left		1217241	0					
ANR	1217310	AdditiveExpression	dsize - data_x		1217241	1		-			
ANR	1217311	Identifier	dsize		1217241	0					
ANR	1217312	Identifier	data_x		1217241	1					
ANR	1217313	IdentifierDeclStatement	const byte * map = & ptab -> lookup8 [ 0 ] ;	213:12:6059:6094	1217241	1	True				
ANR	1217314	IdentifierDecl	* map = & ptab -> lookup8 [ 0 ]		1217241	0					
ANR	1217315	IdentifierDeclType	const byte *		1217241	0					
ANR	1217316	Identifier	map		1217241	1					
ANR	1217317	AssignmentExpression	* map = & ptab -> lookup8 [ 0 ]		1217241	2		=			
ANR	1217318	Identifier	map		1217241	0					
ANR	1217319	UnaryOperationExpression	& ptab -> lookup8 [ 0 ]		1217241	1					
ANR	1217320	UnaryOperator	&		1217241	0					
ANR	1217321	ArrayIndexing	ptab -> lookup8 [ 0 ]		1217241	1					
ANR	1217322	PtrMemberAccess	ptab -> lookup8		1217241	0					
ANR	1217323	Identifier	ptab		1217241	0					
ANR	1217324	Identifier	lookup8		1217241	1					
ANR	1217325	PrimaryExpression	0		1217241	1					
ANR	1217326	WhileStatement	while ( left -- )		1217241	2					
ANR	1217327	Condition	left --	215:19:6116:6121	1217241	0	True				
ANR	1217328	PostIncDecOperationExpression	left --		1217241	0					
ANR	1217329	Identifier	left		1217241	0					
ANR	1217330	IncDec	--		1217241	1					
ANR	1217331	CompoundStatement		16:27:412:412	1217241	1					
ANR	1217332	ExpressionStatement	* bufp ++ = map [ * psrc ++ ]	216:16:6142:6164	1217241	0	True				
ANR	1217333	AssignmentExpression	* bufp ++ = map [ * psrc ++ ]		1217241	0		=			
ANR	1217334	UnaryOperationExpression	* bufp ++		1217241	0					
ANR	1217335	UnaryOperator	*		1217241	0					
ANR	1217336	PostIncDecOperationExpression	bufp ++		1217241	1					
ANR	1217337	Identifier	bufp		1217241	0					
ANR	1217338	IncDec	++		1217241	1					
ANR	1217339	ArrayIndexing	map [ * psrc ++ ]		1217241	1					
ANR	1217340	Identifier	map		1217241	0					
ANR	1217341	UnaryOperationExpression	* psrc ++		1217241	1					
ANR	1217342	UnaryOperator	*		1217241	0					
ANR	1217343	PostIncDecOperationExpression	psrc ++		1217241	1					
ANR	1217344	Identifier	psrc		1217241	0					
ANR	1217345	IncDec	++		1217241	1					
ANR	1217346	ExpressionStatement	NEXT_MAP8	217:16:6182:6191	1217241	1	True				
ANR	1217347	Identifier	NEXT_MAP8		1217241	0					
ANR	1217348	ElseStatement	else		1217241	0					
ANR	1217349	CompoundStatement		20:15:510:510	1217241	0					
ANR	1217350	ReturnStatement	return psrc ;	220:12:6297:6308	1217241	0	True				
ANR	1217351	Identifier	psrc		1217241	0					
ANR	1217352	ElseStatement	else		1217241	0					
ANR	1217353	CompoundStatement		25:8:664:699	1217241	0					
ANR	1217354	IdentifierDeclStatement	int left = dsize - data_x ;	223:8:6341:6366	1217241	0	True				
ANR	1217355	IdentifierDecl	left = dsize - data_x		1217241	0					
ANR	1217356	IdentifierDeclType	int		1217241	0					
ANR	1217357	Identifier	left		1217241	1					
ANR	1217358	AssignmentExpression	left = dsize - data_x		1217241	2		=			
ANR	1217359	Identifier	left		1217241	0					
ANR	1217360	AdditiveExpression	dsize - data_x		1217241	1		-			
ANR	1217361	Identifier	dsize		1217241	0					
ANR	1217362	Identifier	data_x		1217241	1					
ANR	1217363	IdentifierDeclStatement	const byte * map = & ptab -> lookup8 [ 0 ] ;	224:8:6376:6411	1217241	1	True				
ANR	1217364	IdentifierDecl	* map = & ptab -> lookup8 [ 0 ]		1217241	0					
ANR	1217365	IdentifierDeclType	const byte *		1217241	0					
ANR	1217366	Identifier	map		1217241	1					
ANR	1217367	AssignmentExpression	* map = & ptab -> lookup8 [ 0 ]		1217241	2		=			
ANR	1217368	Identifier	map		1217241	0					
ANR	1217369	UnaryOperationExpression	& ptab -> lookup8 [ 0 ]		1217241	1					
ANR	1217370	UnaryOperator	&		1217241	0					
ANR	1217371	ArrayIndexing	ptab -> lookup8 [ 0 ]		1217241	1					
ANR	1217372	PtrMemberAccess	ptab -> lookup8		1217241	0					
ANR	1217373	Identifier	ptab		1217241	0					
ANR	1217374	Identifier	lookup8		1217241	1					
ANR	1217375	PrimaryExpression	0		1217241	1					
ANR	1217376	ForStatement	"for ( ; left -- ; psrc ++ , bufp += spread )"		1217241	2					
ANR	1217377	Condition	left --	226:15:6429:6434	1217241	0	True				
ANR	1217378	PostIncDecOperationExpression	left --		1217241	0					
ANR	1217379	Identifier	left		1217241	0					
ANR	1217380	IncDec	--		1217241	1					
ANR	1217381	Expression	"psrc ++ , bufp += spread"	226:23:6437:6458	1217241	1	True				
ANR	1217382	PostIncDecOperationExpression	psrc ++		1217241	0					
ANR	1217383	Identifier	psrc		1217241	0					
ANR	1217384	IncDec	++		1217241	1					
ANR	1217385	AssignmentExpression	bufp += spread		1217241	1		+=			
ANR	1217386	Identifier	bufp		1217241	0					
ANR	1217387	Identifier	spread		1217241	1					
ANR	1217388	CompoundStatement		27:47:749:749	1217241	2					
ANR	1217389	ExpressionStatement	* bufp = map [ * psrc ]	227:12:6475:6493	1217241	0	True				
ANR	1217390	AssignmentExpression	* bufp = map [ * psrc ]		1217241	0		=			
ANR	1217391	UnaryOperationExpression	* bufp		1217241	0					
ANR	1217392	UnaryOperator	*		1217241	0					
ANR	1217393	Identifier	bufp		1217241	1					
ANR	1217394	ArrayIndexing	map [ * psrc ]		1217241	1					
ANR	1217395	Identifier	map		1217241	0					
ANR	1217396	UnaryOperationExpression	* psrc		1217241	1					
ANR	1217397	UnaryOperator	*		1217241	0					
ANR	1217398	Identifier	psrc		1217241	1					
ANR	1217399	ExpressionStatement	NEXT_MAP8	228:12:6507:6516	1217241	1	True				
ANR	1217400	Identifier	NEXT_MAP8		1217241	0					
ANR	1217401	ReturnStatement	return bptr ;	231:4:6538:6549	1217241	5	True				
ANR	1217402	Identifier	bptr		1217241	0					
ANR	1217403	ReturnType	const byte *		1217241	1					
ANR	1217404	Identifier	TEMPLATE_sample_unpack_8		1217241	2					
ANR	1217405	ParameterList	"byte * bptr , int * pdata_x , const byte * data , int data_x , uint dsize , const sample_map * smap , int spread , int num_components_per_plane"		1217241	3					
ANR	1217406	Parameter	byte * bptr	197:25:5543:5553	1217241	0	True				
ANR	1217407	ParameterType	byte *		1217241	0					
ANR	1217408	Identifier	bptr		1217241	1					
ANR	1217409	Parameter	int * pdata_x	197:38:5556:5567	1217241	1	True				
ANR	1217410	ParameterType	int *		1217241	0					
ANR	1217411	Identifier	pdata_x		1217241	1					
ANR	1217412	Parameter	const byte * data	197:52:5570:5586	1217241	2	True				
ANR	1217413	ParameterType	const byte *		1217241	0					
ANR	1217414	Identifier	data		1217241	1					
ANR	1217415	Parameter	int data_x	197:71:5589:5598	1217241	3	True				
ANR	1217416	ParameterType	int		1217241	0					
ANR	1217417	Identifier	data_x		1217241	1					
ANR	1217418	Parameter	uint dsize	198:16:5617:5626	1217241	4	True				
ANR	1217419	ParameterType	uint		1217241	0					
ANR	1217420	Identifier	dsize		1217241	1					
ANR	1217421	Parameter	const sample_map * smap	198:28:5629:5650	1217241	5	True				
ANR	1217422	ParameterType	const sample_map *		1217241	0					
ANR	1217423	Identifier	smap		1217241	1					
ANR	1217424	Parameter	int spread	198:52:5653:5662	1217241	6	True				
ANR	1217425	ParameterType	int		1217241	0					
ANR	1217426	Identifier	spread		1217241	1					
ANR	1217427	Parameter	int num_components_per_plane	199:16:5681:5708	1217241	7	True				
ANR	1217428	ParameterType	int		1217241	0					
ANR	1217429	Identifier	num_components_per_plane		1217241	1					
ANR	1217430	CFGEntryNode	ENTRY		1217241		True				
ANR	1217431	CFGExitNode	EXIT		1217241		True				
ANR	1217432	Symbol	psrc		1217241						
ANR	1217433	Symbol	data		1217241						
ANR	1217434	Symbol	* map		1217241						
ANR	1217435	Symbol	* psrc		1217241						
ANR	1217436	Symbol	* * ptab		1217241						
ANR	1217437	Symbol	* bufp		1217241						
ANR	1217438	Symbol	ptab		1217241						
ANR	1217439	Symbol	data_x		1217241						
ANR	1217440	Symbol	dsize		1217241						
ANR	1217441	Symbol	MULTIPLE_MAPS		1217241						
ANR	1217442	Symbol	map		1217241						
ANR	1217443	Symbol	* psrc ++		1217241						
ANR	1217444	Symbol	* * psrc ++		1217241						
ANR	1217445	Symbol	ptab -> lookup8		1217241						
ANR	1217446	Symbol	bptr		1217241						
ANR	1217447	Symbol	* ptab -> lookup8		1217241						
ANR	1217448	Symbol	spread		1217241						
ANR	1217449	Symbol	num_components_per_plane		1217241						
ANR	1217450	Symbol	bufp		1217241						
ANR	1217451	Symbol	left		1217241						
ANR	1217452	Symbol	* bufp ++		1217241						
ANR	1217453	Symbol	pdata_x		1217241						
ANR	1217454	Symbol	* ptab		1217241						
ANR	1217455	Symbol	* * psrc		1217241						
ANR	1217456	Symbol	smap		1217241						
ANR	1217457	Symbol	& smap -> table		1217241						
